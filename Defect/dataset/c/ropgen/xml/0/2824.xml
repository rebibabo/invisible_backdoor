<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2824.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">ff_listen_bind</name><parameter_list pos:start="1:19" pos:end="3:65">(<parameter pos:start="1:20" pos:end="1:25"><decl pos:start="1:20" pos:end="1:25"><type pos:start="1:20" pos:end="1:25"><name pos:start="1:20" pos:end="1:22">int</name></type> <name pos:start="1:24" pos:end="1:25">fd</name></decl></parameter>, <parameter pos:start="1:28" pos:end="1:54"><decl pos:start="1:28" pos:end="1:54"><type pos:start="1:28" pos:end="1:54"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:48"><name pos:start="1:34" pos:end="1:39">struct</name> <name pos:start="1:41" pos:end="1:48">sockaddr</name></name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">addr</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:36"><decl pos:start="3:20" pos:end="3:36"><type pos:start="3:20" pos:end="3:36"><name pos:start="3:20" pos:end="3:28">socklen_t</name></type> <name pos:start="3:30" pos:end="3:36">addrlen</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:49"><decl pos:start="3:39" pos:end="3:49"><type pos:start="3:39" pos:end="3:49"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:49">timeout</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:64"><decl pos:start="3:52" pos:end="3:64"><type pos:start="3:52" pos:end="3:64"><name pos:start="3:52" pos:end="3:61">URLContext</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:64">h</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">reuse</name> <init pos:start="9:15" pos:end="9:17">= <expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:17">pollfd</name></name></type> <name pos:start="11:19" pos:end="11:20">lp</name> <init pos:start="11:22" pos:end="11:40">= <expr pos:start="11:24" pos:end="11:40"><block pos:start="11:24" pos:end="11:40">{ <expr pos:start="11:26" pos:end="11:27"><name pos:start="11:26" pos:end="11:27">fd</name></expr>, <expr pos:start="11:30" pos:end="11:35"><name pos:start="11:30" pos:end="11:35">POLLIN</name></expr>, <expr pos:start="11:38" pos:end="11:38"><literal type="number" pos:start="11:38" pos:end="11:38">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:72">(<expr pos:start="13:9" pos:end="13:71"><call pos:start="13:9" pos:end="13:71"><name pos:start="13:9" pos:end="13:18">setsockopt</name><argument_list pos:start="13:19" pos:end="13:71">(<argument pos:start="13:20" pos:end="13:21"><expr pos:start="13:20" pos:end="13:21"><name pos:start="13:20" pos:end="13:21">fd</name></expr></argument>, <argument pos:start="13:24" pos:end="13:33"><expr pos:start="13:24" pos:end="13:33"><name pos:start="13:24" pos:end="13:33">SOL_SOCKET</name></expr></argument>, <argument pos:start="13:36" pos:end="13:47"><expr pos:start="13:36" pos:end="13:47"><name pos:start="13:36" pos:end="13:47">SO_REUSEADDR</name></expr></argument>, <argument pos:start="13:50" pos:end="13:55"><expr pos:start="13:50" pos:end="13:55"><operator pos:start="13:50" pos:end="13:50">&amp;</operator><name pos:start="13:51" pos:end="13:55">reuse</name></expr></argument>, <argument pos:start="13:58" pos:end="13:70"><expr pos:start="13:58" pos:end="13:70"><sizeof pos:start="13:58" pos:end="13:70">sizeof<argument_list pos:start="13:64" pos:end="13:70">(<argument pos:start="13:65" pos:end="13:69"><expr pos:start="13:65" pos:end="13:69"><name pos:start="13:65" pos:end="13:69">reuse</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:74" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:74">

        <expr_stmt pos:start="15:9" pos:end="15:74"><expr pos:start="15:9" pos:end="15:73"><call pos:start="15:9" pos:end="15:73"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:73">(<argument pos:start="15:16" pos:end="15:19"><expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">NULL</name></expr></argument>, <argument pos:start="15:22" pos:end="15:35"><expr pos:start="15:22" pos:end="15:35"><name pos:start="15:22" pos:end="15:35">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="15:38" pos:end="15:72"><expr pos:start="15:38" pos:end="15:72"><literal type="string" pos:start="15:38" pos:end="15:72">"setsockopt(SO_REUSEADDR) failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:33"><name pos:start="19:11" pos:end="19:14">bind</name><argument_list pos:start="19:15" pos:end="19:33">(<argument pos:start="19:16" pos:end="19:17"><expr pos:start="19:16" pos:end="19:17"><name pos:start="19:16" pos:end="19:17">fd</name></expr></argument>, <argument pos:start="19:20" pos:end="19:23"><expr pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:23">addr</name></expr></argument>, <argument pos:start="19:26" pos:end="19:32"><expr pos:start="19:26" pos:end="19:32"><name pos:start="19:26" pos:end="19:32">addrlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:29"><if pos:start="21:5" pos:end="23:29">if <condition pos:start="21:8" pos:end="21:12">(<expr pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">ret</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:29"><block_content pos:start="23:9" pos:end="23:29">

        <return pos:start="23:9" pos:end="23:29">return <expr pos:start="23:16" pos:end="23:28"><call pos:start="23:16" pos:end="23:28"><name pos:start="23:16" pos:end="23:26">ff_neterrno</name><argument_list pos:start="23:27" pos:end="23:28">()</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:23"><name pos:start="27:11" pos:end="27:16">listen</name><argument_list pos:start="27:17" pos:end="27:23">(<argument pos:start="27:18" pos:end="27:19"><expr pos:start="27:18" pos:end="27:19"><name pos:start="27:18" pos:end="27:19">fd</name></expr></argument>, <argument pos:start="27:22" pos:end="27:22"><expr pos:start="27:22" pos:end="27:22"><literal type="number" pos:start="27:22" pos:end="27:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:29"><if pos:start="29:5" pos:end="31:29">if <condition pos:start="29:8" pos:end="29:12">(<expr pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">ret</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:29"><block_content pos:start="31:9" pos:end="31:29">

        <return pos:start="31:9" pos:end="31:29">return <expr pos:start="31:16" pos:end="31:28"><call pos:start="31:16" pos:end="31:28"><name pos:start="31:16" pos:end="31:26">ff_neterrno</name><argument_list pos:start="31:27" pos:end="31:28">()</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:69"><expr pos:start="35:5" pos:end="35:68"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:68"><name pos:start="35:11" pos:end="35:27">ff_poll_interrupt</name><argument_list pos:start="35:28" pos:end="35:68">(<argument pos:start="35:29" pos:end="35:31"><expr pos:start="35:29" pos:end="35:31"><operator pos:start="35:29" pos:end="35:29">&amp;</operator><name pos:start="35:30" pos:end="35:31">lp</name></expr></argument>, <argument pos:start="35:34" pos:end="35:34"><expr pos:start="35:34" pos:end="35:34"><literal type="number" pos:start="35:34" pos:end="35:34">1</literal></expr></argument>, <argument pos:start="35:37" pos:end="35:43"><expr pos:start="35:37" pos:end="35:43"><name pos:start="35:37" pos:end="35:43">timeout</name></expr></argument>, <argument pos:start="35:46" pos:end="35:67"><expr pos:start="35:46" pos:end="35:67"><operator pos:start="35:46" pos:end="35:46">&amp;</operator><name pos:start="35:47" pos:end="35:67"><name pos:start="35:47" pos:end="35:47">h</name><operator pos:start="35:48" pos:end="35:49">-&gt;</operator><name pos:start="35:50" pos:end="35:67">interrupt_callback</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:19"><if pos:start="37:5" pos:end="39:19">if <condition pos:start="37:8" pos:end="37:16">(<expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">&lt;</operator> <literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:19"><block_content pos:start="39:9" pos:end="39:19">

        <return pos:start="39:9" pos:end="39:19">return <expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:7">ret</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:32"><name pos:start="43:11" pos:end="43:16">accept</name><argument_list pos:start="43:17" pos:end="43:32">(<argument pos:start="43:18" pos:end="43:19"><expr pos:start="43:18" pos:end="43:19"><name pos:start="43:18" pos:end="43:19">fd</name></expr></argument>, <argument pos:start="43:22" pos:end="43:25"><expr pos:start="43:22" pos:end="43:25"><name pos:start="43:22" pos:end="43:25">NULL</name></expr></argument>, <argument pos:start="43:28" pos:end="43:31"><expr pos:start="43:28" pos:end="43:31"><name pos:start="43:28" pos:end="43:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:29"><if pos:start="45:5" pos:end="47:29">if <condition pos:start="45:8" pos:end="45:16">(<expr pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">&lt;</operator> <literal type="number" pos:start="45:15" pos:end="45:15">0</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:29"><block_content pos:start="47:9" pos:end="47:29">

        <return pos:start="47:9" pos:end="47:29">return <expr pos:start="47:16" pos:end="47:28"><call pos:start="47:16" pos:end="47:28"><name pos:start="47:16" pos:end="47:26">ff_neterrno</name><argument_list pos:start="47:27" pos:end="47:28">()</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:20"><expr pos:start="51:5" pos:end="51:19"><call pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:15">closesocket</name><argument_list pos:start="51:16" pos:end="51:19">(<argument pos:start="51:17" pos:end="51:18"><expr pos:start="51:17" pos:end="51:18"><name pos:start="51:17" pos:end="51:18">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:31"><expr pos:start="55:5" pos:end="55:30"><call pos:start="55:5" pos:end="55:30"><name pos:start="55:5" pos:end="55:22">ff_socket_nonblock</name><argument_list pos:start="55:23" pos:end="55:30">(<argument pos:start="55:24" pos:end="55:26"><expr pos:start="55:24" pos:end="55:26"><name pos:start="55:24" pos:end="55:26">ret</name></expr></argument>, <argument pos:start="55:29" pos:end="55:29"><expr pos:start="55:29" pos:end="55:29"><literal type="number" pos:start="55:29" pos:end="55:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="57:5" pos:end="57:15">return <expr pos:start="57:12" pos:end="57:14"><name pos:start="57:12" pos:end="57:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
