<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11429.c" pos:tabs="8"><function pos:start="1:1" pos:end="589:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:37">rgb24toyv12</name>)<parameter_list pos:start="1:39" pos:end="5:57">(<parameter pos:start="1:40" pos:end="1:57"><decl pos:start="1:40" pos:end="1:57"><type pos:start="1:40" pos:end="1:57"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:52">uint8_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">src</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:72"><decl pos:start="1:60" pos:end="1:72"><type pos:start="1:60" pos:end="1:72"><name pos:start="1:60" pos:end="1:66">uint8_t</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:72">ydst</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:87"><decl pos:start="1:75" pos:end="1:87"><type pos:start="1:75" pos:end="1:87"><name pos:start="1:75" pos:end="1:81">uint8_t</name> <modifier pos:start="1:83" pos:end="1:83">*</modifier></type><name pos:start="1:84" pos:end="1:87">udst</name></decl></parameter>, <parameter pos:start="1:90" pos:end="1:102"><decl pos:start="1:90" pos:end="1:102"><type pos:start="1:90" pos:end="1:102"><name pos:start="1:90" pos:end="1:96">uint8_t</name> <modifier pos:start="1:98" pos:end="1:98">*</modifier></type><name pos:start="1:99" pos:end="1:102">vdst</name></decl></parameter>,

	<parameter pos:start="3:9" pos:end="3:18"><decl pos:start="3:9" pos:end="3:18"><type pos:start="3:9" pos:end="3:18"><name pos:start="3:9" pos:end="3:12">long</name></type> <name pos:start="3:14" pos:end="3:18">width</name></decl></parameter>, <parameter pos:start="3:21" pos:end="3:31"><decl pos:start="3:21" pos:end="3:31"><type pos:start="3:21" pos:end="3:31"><name pos:start="3:21" pos:end="3:24">long</name></type> <name pos:start="3:26" pos:end="3:31">height</name></decl></parameter>,

	<parameter pos:start="5:9" pos:end="5:22"><decl pos:start="5:9" pos:end="5:22"><type pos:start="5:9" pos:end="5:22"><name pos:start="5:9" pos:end="5:12">long</name></type> <name pos:start="5:14" pos:end="5:22">lumStride</name></decl></parameter>, <parameter pos:start="5:25" pos:end="5:40"><decl pos:start="5:25" pos:end="5:40"><type pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:28">long</name></type> <name pos:start="5:30" pos:end="5:40">chromStride</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:56"><decl pos:start="5:43" pos:end="5:56"><type pos:start="5:43" pos:end="5:56"><name pos:start="5:43" pos:end="5:46">long</name></type> <name pos:start="5:48" pos:end="5:56">srcStride</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="589:1">{<block_content pos:start="9:9" pos:end="587:9">

	<decl_stmt pos:start="9:9" pos:end="9:15"><decl pos:start="9:9" pos:end="9:14"><type pos:start="9:9" pos:end="9:12"><name pos:start="9:9" pos:end="9:12">long</name></type> <name pos:start="9:14" pos:end="9:14">y</name></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="14:0"><decl pos:start="11:9" pos:end="11:39"><type pos:start="11:9" pos:end="11:18"><specifier pos:start="11:9" pos:end="11:13">const</specifier> <name pos:start="11:15" pos:end="11:18">long</name></type> <name pos:start="11:20" pos:end="11:29">chromWidth</name><init pos:start="11:30" pos:end="11:39">= <expr pos:start="11:32" pos:end="11:39"><name pos:start="11:32" pos:end="11:36">width</name><operator pos:start="11:37" pos:end="11:38">&gt;&gt;</operator><literal type="number" pos:start="11:39" pos:end="11:39">1</literal></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:start="13:1" pos:end="13:15">#<cpp:directive pos:start="13:2" pos:end="13:6">ifdef</cpp:directive> <name pos:start="13:8" pos:end="13:15">HAVE_MMX</name></cpp:ifdef>

	<for pos:start="15:9" pos:end="475:9">for<control pos:start="15:12" pos:end="15:34">(<init pos:start="15:13" pos:end="15:16"><expr pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:13">y</name><operator pos:start="15:14" pos:end="15:14">=</operator><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>;</init> <condition pos:start="15:18" pos:end="15:28"><expr pos:start="15:18" pos:end="15:27"><name pos:start="15:18" pos:end="15:18">y</name><operator pos:start="15:19" pos:end="15:19">&lt;</operator><name pos:start="15:20" pos:end="15:25">height</name><operator pos:start="15:26" pos:end="15:26">-</operator><literal type="number" pos:start="15:27" pos:end="15:27">2</literal></expr>;</condition> <incr pos:start="15:30" pos:end="15:33"><expr pos:start="15:30" pos:end="15:33"><name pos:start="15:30" pos:end="15:30">y</name><operator pos:start="15:31" pos:end="15:32">+=</operator><literal type="number" pos:start="15:33" pos:end="15:33">2</literal></expr></incr>)</control>

	<block pos:start="17:9" pos:end="475:9">{<block_content pos:start="19:17" pos:end="473:36">

		<decl_stmt pos:start="19:17" pos:end="19:23"><decl pos:start="19:17" pos:end="19:22"><type pos:start="19:17" pos:end="19:20"><name pos:start="19:17" pos:end="19:20">long</name></type> <name pos:start="19:22" pos:end="19:22">i</name></decl>;</decl_stmt>

		<for pos:start="21:17" pos:end="167:17">for<control pos:start="21:20" pos:end="21:34">(<init pos:start="21:21" pos:end="21:24"><expr pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:21">i</name><operator pos:start="21:22" pos:end="21:22">=</operator><literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr>;</init> <condition pos:start="21:26" pos:end="21:29"><expr pos:start="21:26" pos:end="21:28"><name pos:start="21:26" pos:end="21:26">i</name><operator pos:start="21:27" pos:end="21:27">&lt;</operator><literal type="number" pos:start="21:28" pos:end="21:28">2</literal></expr>;</condition> <incr pos:start="21:31" pos:end="21:33"><expr pos:start="21:31" pos:end="21:33"><name pos:start="21:31" pos:end="21:31">i</name><operator pos:start="21:32" pos:end="21:33">++</operator></expr></incr>)</control>

		<block pos:start="23:17" pos:end="167:17">{<block_content pos:start="25:25" pos:end="165:42">

			<asm pos:start="25:25" pos:end="161:26">asm <specifier pos:start="25:29" pos:end="25:36">volatile</specifier>(

				"mov %2, %%"REG_a"		\n\t"

				"movq "MANGLE(bgr2YCoeff)", %%mm6		\n\t"

				"movq "MANGLE(w1111)", %%mm5		\n\t"

				"pxor %%mm7, %%mm7		\n\t"

				"lea (%%"REG_a", %%"REG_a", 2), %%"REG_b"\n\t"

				ASMALIGN16

				"1:				\n\t"

				PREFETCH" 64(%0, %%"REG_b")	\n\t"

				"movd (%0, %%"REG_b"), %%mm0	\n\t"

				"movd 3(%0, %%"REG_b"), %%mm1	\n\t"

				"punpcklbw %%mm7, %%mm0		\n\t"

				"punpcklbw %%mm7, %%mm1		\n\t"

				"movd 6(%0, %%"REG_b"), %%mm2	\n\t"

				"movd 9(%0, %%"REG_b"), %%mm3	\n\t"

				"punpcklbw %%mm7, %%mm2		\n\t"

				"punpcklbw %%mm7, %%mm3		\n\t"

				"pmaddwd %%mm6, %%mm0		\n\t"

				"pmaddwd %%mm6, %%mm1		\n\t"

				"pmaddwd %%mm6, %%mm2		\n\t"

				"pmaddwd %%mm6, %%mm3		\n\t"

<cpp:ifndef pos:start="67:1" pos:end="67:21">#<cpp:directive pos:start="67:2" pos:end="67:7">ifndef</cpp:directive> <name pos:start="67:9" pos:end="67:21">FAST_BGR2YV12</name></cpp:ifndef>

				"psrad $8, %%mm0		\n\t"

				"psrad $8, %%mm1		\n\t"

				"psrad $8, %%mm2		\n\t"

				"psrad $8, %%mm3		\n\t"

<cpp:endif pos:start="77:1" pos:end="77:6">#<cpp:directive pos:start="77:2" pos:end="77:6">endif</cpp:directive></cpp:endif>

				"packssdw %%mm1, %%mm0		\n\t"

				"packssdw %%mm3, %%mm2		\n\t"

				"pmaddwd %%mm5, %%mm0		\n\t"

				"pmaddwd %%mm5, %%mm2		\n\t"

				"packssdw %%mm2, %%mm0		\n\t"

				"psraw $7, %%mm0		\n\t"



				"movd 12(%0, %%"REG_b"), %%mm4	\n\t"

				"movd 15(%0, %%"REG_b"), %%mm1	\n\t"

				"punpcklbw %%mm7, %%mm4		\n\t"

				"punpcklbw %%mm7, %%mm1		\n\t"

				"movd 18(%0, %%"REG_b"), %%mm2	\n\t"

				"movd 21(%0, %%"REG_b"), %%mm3	\n\t"

				"punpcklbw %%mm7, %%mm2		\n\t"

				"punpcklbw %%mm7, %%mm3		\n\t"

				"pmaddwd %%mm6, %%mm4		\n\t"

				"pmaddwd %%mm6, %%mm1		\n\t"

				"pmaddwd %%mm6, %%mm2		\n\t"

				"pmaddwd %%mm6, %%mm3		\n\t"

<cpp:ifndef pos:start="117:1" pos:end="117:21">#<cpp:directive pos:start="117:2" pos:end="117:7">ifndef</cpp:directive> <name pos:start="117:9" pos:end="117:21">FAST_BGR2YV12</name></cpp:ifndef>

				"psrad $8, %%mm4		\n\t"

				"psrad $8, %%mm1		\n\t"

				"psrad $8, %%mm2		\n\t"

				"psrad $8, %%mm3		\n\t"

<cpp:endif pos:start="127:1" pos:end="127:6">#<cpp:directive pos:start="127:2" pos:end="127:6">endif</cpp:directive></cpp:endif>

				"packssdw %%mm1, %%mm4		\n\t"

				"packssdw %%mm3, %%mm2		\n\t"

				"pmaddwd %%mm5, %%mm4		\n\t"

				"pmaddwd %%mm5, %%mm2		\n\t"

				"add $24, %%"REG_b"		\n\t"

				"packssdw %%mm2, %%mm4		\n\t"

				"psraw $7, %%mm4		\n\t"



				"packuswb %%mm4, %%mm0		\n\t"

				"paddusb "MANGLE(bgr2YOffset)", %%mm0	\n\t"



				MOVNTQ" %%mm0, (%1, %%"REG_a")	\n\t"

				"add $8, %%"REG_a"		\n\t"

				" js 1b				\n\t"

				: : "r" (src+width*3), "r" (ydst+width), "g" (-width)

				: "%"REG_a, "%"REG_b

			);</asm>

			<expr_stmt pos:start="163:25" pos:end="163:42"><expr pos:start="163:25" pos:end="163:41"><name pos:start="163:25" pos:end="163:28">ydst</name> <operator pos:start="163:30" pos:end="163:31">+=</operator> <name pos:start="163:33" pos:end="163:41">lumStride</name></expr>;</expr_stmt>

			<expr_stmt pos:start="165:25" pos:end="165:42"><expr pos:start="165:25" pos:end="165:41"><name pos:start="165:25" pos:end="165:27">src</name>  <operator pos:start="165:30" pos:end="165:31">+=</operator> <name pos:start="165:33" pos:end="165:41">srcStride</name></expr>;</expr_stmt>

		</block_content>}</block></for>

		<expr_stmt pos:start="169:17" pos:end="169:35"><expr pos:start="169:17" pos:end="169:34"><name pos:start="169:17" pos:end="169:19">src</name> <operator pos:start="169:21" pos:end="169:22">-=</operator> <name pos:start="169:24" pos:end="169:32">srcStride</name><operator pos:start="169:33" pos:end="169:33">*</operator><literal type="number" pos:start="169:34" pos:end="169:34">2</literal></expr>;</expr_stmt>

		<asm pos:start="171:17" pos:end="465:18">asm <specifier pos:start="171:21" pos:end="171:28">volatile</specifier>(

			"mov %4, %%"REG_a"		\n\t"

			"movq "MANGLE(w1111)", %%mm5		\n\t"

			"movq "MANGLE(bgr2UCoeff)", %%mm6		\n\t"

			"pxor %%mm7, %%mm7		\n\t"

			"lea (%%"REG_a", %%"REG_a", 2), %%"REG_b"\n\t"

			"add %%"REG_b", %%"REG_b"	\n\t"

			ASMALIGN16

			"1:				\n\t"

			PREFETCH" 64(%0, %%"REG_b")	\n\t"

			PREFETCH" 64(%1, %%"REG_b")	\n\t"

<cpp:if pos:start="193:1" pos:end="193:47">#<cpp:directive pos:start="193:2" pos:end="193:3">if</cpp:directive> <expr pos:start="193:5" pos:end="193:47"><call pos:start="193:5" pos:end="193:23"><name pos:start="193:5" pos:end="193:11">defined</name> <argument_list pos:start="193:13" pos:end="193:23">(<argument pos:start="193:14" pos:end="193:22"><expr pos:start="193:14" pos:end="193:22"><name pos:start="193:14" pos:end="193:22">HAVE_MMX2</name></expr></argument>)</argument_list></call> <operator pos:start="193:25" pos:end="193:26">||</operator> <call pos:start="193:28" pos:end="193:47"><name pos:start="193:28" pos:end="193:34">defined</name> <argument_list pos:start="193:36" pos:end="193:47">(<argument pos:start="193:37" pos:end="193:46"><expr pos:start="193:37" pos:end="193:46"><name pos:start="193:37" pos:end="193:46">HAVE_3DNOW</name></expr></argument>)</argument_list></call></expr></cpp:if>

			"movq (%0, %%"REG_b"), %%mm0	\n\t"

			"movq (%1, %%"REG_b"), %%mm1	\n\t"

			"movq 6(%0, %%"REG_b"), %%mm2	\n\t"

			"movq 6(%1, %%"REG_b"), %%mm3	\n\t"

			PAVGB" %%mm1, %%mm0		\n\t"

			PAVGB" %%mm3, %%mm2		\n\t"

			"movq %%mm0, %%mm1		\n\t"

			"movq %%mm2, %%mm3		\n\t"

			"psrlq $24, %%mm0		\n\t"

			"psrlq $24, %%mm2		\n\t"

			PAVGB" %%mm1, %%mm0		\n\t"

			PAVGB" %%mm3, %%mm2		\n\t"

			"punpcklbw %%mm7, %%mm0		\n\t"

			"punpcklbw %%mm7, %%mm2		\n\t"

<cpp:else pos:start="223:1" pos:end="223:5">#<cpp:directive pos:start="223:2" pos:end="223:5">else</cpp:directive></cpp:else>

			"movd (%0, %%"REG_b"), %%mm0	\n\t"

			"movd (%1, %%"REG_b"), %%mm1	\n\t"

			"movd 3(%0, %%"REG_b"), %%mm2	\n\t"

			"movd 3(%1, %%"REG_b"), %%mm3	\n\t"

			"punpcklbw %%mm7, %%mm0		\n\t"

			"punpcklbw %%mm7, %%mm1		\n\t"

			"punpcklbw %%mm7, %%mm2		\n\t"

			"punpcklbw %%mm7, %%mm3		\n\t"

			"paddw %%mm1, %%mm0		\n\t"

			"paddw %%mm3, %%mm2		\n\t"

			"paddw %%mm2, %%mm0		\n\t"

			"movd 6(%0, %%"REG_b"), %%mm4	\n\t"

			"movd 6(%1, %%"REG_b"), %%mm1	\n\t"

			"movd 9(%0, %%"REG_b"), %%mm2	\n\t"

			"movd 9(%1, %%"REG_b"), %%mm3	\n\t"

			"punpcklbw %%mm7, %%mm4		\n\t"

			"punpcklbw %%mm7, %%mm1		\n\t"

			"punpcklbw %%mm7, %%mm2		\n\t"

			"punpcklbw %%mm7, %%mm3		\n\t"

			"paddw %%mm1, %%mm4		\n\t"

			"paddw %%mm3, %%mm2		\n\t"

			"paddw %%mm4, %%mm2		\n\t"

			"psrlw $2, %%mm0		\n\t"

			"psrlw $2, %%mm2		\n\t"

<cpp:endif pos:start="273:1" pos:end="273:6">#<cpp:directive pos:start="273:2" pos:end="273:6">endif</cpp:directive></cpp:endif>

			"movq "MANGLE(bgr2VCoeff)", %%mm1		\n\t"

			"movq "MANGLE(bgr2VCoeff)", %%mm3		\n\t"



			"pmaddwd %%mm0, %%mm1		\n\t"

			"pmaddwd %%mm2, %%mm3		\n\t"

			"pmaddwd %%mm6, %%mm0		\n\t"

			"pmaddwd %%mm6, %%mm2		\n\t"

<cpp:ifndef pos:start="289:1" pos:end="289:21">#<cpp:directive pos:start="289:2" pos:end="289:7">ifndef</cpp:directive> <name pos:start="289:9" pos:end="289:21">FAST_BGR2YV12</name></cpp:ifndef>

			"psrad $8, %%mm0		\n\t"

			"psrad $8, %%mm1		\n\t"

			"psrad $8, %%mm2		\n\t"

			"psrad $8, %%mm3		\n\t"

<cpp:endif pos:start="299:1" pos:end="299:6">#<cpp:directive pos:start="299:2" pos:end="299:6">endif</cpp:directive></cpp:endif>

			"packssdw %%mm2, %%mm0		\n\t"

			"packssdw %%mm3, %%mm1		\n\t"

			"pmaddwd %%mm5, %%mm0		\n\t"

			"pmaddwd %%mm5, %%mm1		\n\t"

			"packssdw %%mm1, %%mm0		\n\t" <comment type="line" pos:start="309:63" pos:end="309:76">// V1 V0 U1 U0</comment>

			"psraw $7, %%mm0		\n\t"



<cpp:if pos:start="315:1" pos:end="315:47">#<cpp:directive pos:start="315:2" pos:end="315:3">if</cpp:directive> <expr pos:start="315:5" pos:end="315:47"><call pos:start="315:5" pos:end="315:23"><name pos:start="315:5" pos:end="315:11">defined</name> <argument_list pos:start="315:13" pos:end="315:23">(<argument pos:start="315:14" pos:end="315:22"><expr pos:start="315:14" pos:end="315:22"><name pos:start="315:14" pos:end="315:22">HAVE_MMX2</name></expr></argument>)</argument_list></call> <operator pos:start="315:25" pos:end="315:26">||</operator> <call pos:start="315:28" pos:end="315:47"><name pos:start="315:28" pos:end="315:34">defined</name> <argument_list pos:start="315:36" pos:end="315:47">(<argument pos:start="315:37" pos:end="315:46"><expr pos:start="315:37" pos:end="315:46"><name pos:start="315:37" pos:end="315:46">HAVE_3DNOW</name></expr></argument>)</argument_list></call></expr></cpp:if>

			"movq 12(%0, %%"REG_b"), %%mm4	\n\t"

			"movq 12(%1, %%"REG_b"), %%mm1	\n\t"

			"movq 18(%0, %%"REG_b"), %%mm2	\n\t"

			"movq 18(%1, %%"REG_b"), %%mm3	\n\t"

			PAVGB" %%mm1, %%mm4		\n\t"

			PAVGB" %%mm3, %%mm2		\n\t"

			"movq %%mm4, %%mm1		\n\t"

			"movq %%mm2, %%mm3		\n\t"

			"psrlq $24, %%mm4		\n\t"

			"psrlq $24, %%mm2		\n\t"

			PAVGB" %%mm1, %%mm4		\n\t"

			PAVGB" %%mm3, %%mm2		\n\t"

			"punpcklbw %%mm7, %%mm4		\n\t"

			"punpcklbw %%mm7, %%mm2		\n\t"

<cpp:else pos:start="345:1" pos:end="345:5">#<cpp:directive pos:start="345:2" pos:end="345:5">else</cpp:directive></cpp:else>

			"movd 12(%0, %%"REG_b"), %%mm4	\n\t"

			"movd 12(%1, %%"REG_b"), %%mm1	\n\t"

			"movd 15(%0, %%"REG_b"), %%mm2	\n\t"

			"movd 15(%1, %%"REG_b"), %%mm3	\n\t"

			"punpcklbw %%mm7, %%mm4		\n\t"

			"punpcklbw %%mm7, %%mm1		\n\t"

			"punpcklbw %%mm7, %%mm2		\n\t"

			"punpcklbw %%mm7, %%mm3		\n\t"

			"paddw %%mm1, %%mm4		\n\t"

			"paddw %%mm3, %%mm2		\n\t"

			"paddw %%mm2, %%mm4		\n\t"

			"movd 18(%0, %%"REG_b"), %%mm5	\n\t"

			"movd 18(%1, %%"REG_b"), %%mm1	\n\t"

			"movd 21(%0, %%"REG_b"), %%mm2	\n\t"

			"movd 21(%1, %%"REG_b"), %%mm3	\n\t"

			"punpcklbw %%mm7, %%mm5		\n\t"

			"punpcklbw %%mm7, %%mm1		\n\t"

			"punpcklbw %%mm7, %%mm2		\n\t"

			"punpcklbw %%mm7, %%mm3		\n\t"

			"paddw %%mm1, %%mm5		\n\t"

			"paddw %%mm3, %%mm2		\n\t"

			"paddw %%mm5, %%mm2		\n\t"

			"movq "MANGLE(w1111)", %%mm5		\n\t"

			"psrlw $2, %%mm4		\n\t"

			"psrlw $2, %%mm2		\n\t"

<cpp:endif pos:start="397:1" pos:end="397:6">#<cpp:directive pos:start="397:2" pos:end="397:6">endif</cpp:directive></cpp:endif>

			"movq "MANGLE(bgr2VCoeff)", %%mm1		\n\t"

			"movq "MANGLE(bgr2VCoeff)", %%mm3		\n\t"



			"pmaddwd %%mm4, %%mm1		\n\t"

			"pmaddwd %%mm2, %%mm3		\n\t"

			"pmaddwd %%mm6, %%mm4		\n\t"

			"pmaddwd %%mm6, %%mm2		\n\t"

<cpp:ifndef pos:start="413:1" pos:end="413:21">#<cpp:directive pos:start="413:2" pos:end="413:7">ifndef</cpp:directive> <name pos:start="413:9" pos:end="413:21">FAST_BGR2YV12</name></cpp:ifndef>

			"psrad $8, %%mm4		\n\t"

			"psrad $8, %%mm1		\n\t"

			"psrad $8, %%mm2		\n\t"

			"psrad $8, %%mm3		\n\t"

<cpp:endif pos:start="423:1" pos:end="423:6">#<cpp:directive pos:start="423:2" pos:end="423:6">endif</cpp:directive></cpp:endif>

			"packssdw %%mm2, %%mm4		\n\t"

			"packssdw %%mm3, %%mm1		\n\t"

			"pmaddwd %%mm5, %%mm4		\n\t"

			"pmaddwd %%mm5, %%mm1		\n\t"

			"add $24, %%"REG_b"		\n\t"

			"packssdw %%mm1, %%mm4		\n\t" <comment type="line" pos:start="435:63" pos:end="435:76">// V3 V2 U3 U2</comment>

			"psraw $7, %%mm4		\n\t"



			"movq %%mm0, %%mm1		\n\t"

			"punpckldq %%mm4, %%mm0		\n\t"

			"punpckhdq %%mm4, %%mm1		\n\t"

			"packsswb %%mm1, %%mm0		\n\t"

			"paddb "MANGLE(bgr2UVOffset)", %%mm0	\n\t"

			"movd %%mm0, (%2, %%"REG_a")	\n\t"

			"punpckhdq %%mm0, %%mm0		\n\t"

			"movd %%mm0, (%3, %%"REG_a")	\n\t"

			"add $4, %%"REG_a"		\n\t"

			" js 1b				\n\t"

			: : "r" (src+chromWidth*6), "r" (src+srcStride+chromWidth*6), "r" (udst+chromWidth), "r" (vdst+chromWidth), "g" (-chromWidth)

			: "%"REG_a, "%"REG_b

		);</asm>



		<expr_stmt pos:start="469:17" pos:end="469:36"><expr pos:start="469:17" pos:end="469:35"><name pos:start="469:17" pos:end="469:20">udst</name> <operator pos:start="469:22" pos:end="469:23">+=</operator> <name pos:start="469:25" pos:end="469:35">chromStride</name></expr>;</expr_stmt>

		<expr_stmt pos:start="471:17" pos:end="471:36"><expr pos:start="471:17" pos:end="471:35"><name pos:start="471:17" pos:end="471:20">vdst</name> <operator pos:start="471:22" pos:end="471:23">+=</operator> <name pos:start="471:25" pos:end="471:35">chromStride</name></expr>;</expr_stmt>

		<expr_stmt pos:start="473:17" pos:end="473:36"><expr pos:start="473:17" pos:end="473:35"><name pos:start="473:17" pos:end="473:19">src</name>  <operator pos:start="473:22" pos:end="473:23">+=</operator> <name pos:start="473:25" pos:end="473:33">srcStride</name><operator pos:start="473:34" pos:end="473:34">*</operator><literal type="number" pos:start="473:35" pos:end="473:35">2</literal></expr>;</expr_stmt>

	</block_content>}</block></for>



	<asm pos:start="479:9" pos:end="486:0">asm <specifier pos:start="479:13" pos:end="479:20">volatile</specifier>(   EMMS" \n\t"

			SFENCE" \n\t"

			:::"memory");</asm>

<cpp:else pos:start="485:1" pos:end="485:5">#<cpp:directive pos:start="485:2" pos:end="485:5">else</cpp:directive></cpp:else>

	<expr_stmt pos:start="487:9" pos:end="490:0"><expr pos:start="487:9" pos:end="487:11"><name pos:start="487:9" pos:end="487:9">y</name><operator pos:start="487:10" pos:end="487:10">=</operator><literal type="number" pos:start="487:11" pos:end="487:11">0</literal></expr>;</expr_stmt>

<cpp:endif pos:start="489:1" pos:end="489:6">#<cpp:directive pos:start="489:2" pos:end="489:6">endif</cpp:directive></cpp:endif>

	<for pos:start="491:9" pos:end="587:9">for<control pos:start="491:12" pos:end="491:29">(<init pos:start="491:13" pos:end="491:13">;</init> <condition pos:start="491:15" pos:end="491:23"><expr pos:start="491:15" pos:end="491:22"><name pos:start="491:15" pos:end="491:15">y</name><operator pos:start="491:16" pos:end="491:16">&lt;</operator><name pos:start="491:17" pos:end="491:22">height</name></expr>;</condition> <incr pos:start="491:25" pos:end="491:28"><expr pos:start="491:25" pos:end="491:28"><name pos:start="491:25" pos:end="491:25">y</name><operator pos:start="491:26" pos:end="491:27">+=</operator><literal type="number" pos:start="491:28" pos:end="491:28">2</literal></expr></incr>)</control>

	<block pos:start="493:9" pos:end="587:9">{<block_content pos:start="495:17" pos:end="585:34">

		<decl_stmt pos:start="495:17" pos:end="495:23"><decl pos:start="495:17" pos:end="495:22"><type pos:start="495:17" pos:end="495:20"><name pos:start="495:17" pos:end="495:20">long</name></type> <name pos:start="495:22" pos:end="495:22">i</name></decl>;</decl_stmt>

		<for pos:start="497:17" pos:end="537:17">for<control pos:start="497:20" pos:end="497:43">(<init pos:start="497:21" pos:end="497:24"><expr pos:start="497:21" pos:end="497:23"><name pos:start="497:21" pos:end="497:21">i</name><operator pos:start="497:22" pos:end="497:22">=</operator><literal type="number" pos:start="497:23" pos:end="497:23">0</literal></expr>;</init> <condition pos:start="497:26" pos:end="497:38"><expr pos:start="497:26" pos:end="497:37"><name pos:start="497:26" pos:end="497:26">i</name><operator pos:start="497:27" pos:end="497:27">&lt;</operator><name pos:start="497:28" pos:end="497:37">chromWidth</name></expr>;</condition> <incr pos:start="497:40" pos:end="497:42"><expr pos:start="497:40" pos:end="497:42"><name pos:start="497:40" pos:end="497:40">i</name><operator pos:start="497:41" pos:end="497:42">++</operator></expr></incr>)</control>

		<block pos:start="499:17" pos:end="537:17">{<block_content pos:start="501:25" pos:end="535:44">

			<decl_stmt pos:start="501:25" pos:end="501:51"><decl pos:start="501:25" pos:end="501:50"><type pos:start="501:25" pos:end="501:36"><name pos:start="501:25" pos:end="501:32">unsigned</name> <name pos:start="501:34" pos:end="501:36">int</name></type> <name pos:start="501:38" pos:end="501:38">b</name><init pos:start="501:39" pos:end="501:50">= <expr pos:start="501:41" pos:end="501:50"><name pos:start="501:41" pos:end="501:50"><name pos:start="501:41" pos:end="501:43">src</name><index pos:start="501:44" pos:end="501:50">[<expr pos:start="501:45" pos:end="501:49"><literal type="number" pos:start="501:45" pos:end="501:45">6</literal><operator pos:start="501:46" pos:end="501:46">*</operator><name pos:start="501:47" pos:end="501:47">i</name><operator pos:start="501:48" pos:end="501:48">+</operator><literal type="number" pos:start="501:49" pos:end="501:49">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="503:25" pos:end="503:51"><decl pos:start="503:25" pos:end="503:50"><type pos:start="503:25" pos:end="503:36"><name pos:start="503:25" pos:end="503:32">unsigned</name> <name pos:start="503:34" pos:end="503:36">int</name></type> <name pos:start="503:38" pos:end="503:38">g</name><init pos:start="503:39" pos:end="503:50">= <expr pos:start="503:41" pos:end="503:50"><name pos:start="503:41" pos:end="503:50"><name pos:start="503:41" pos:end="503:43">src</name><index pos:start="503:44" pos:end="503:50">[<expr pos:start="503:45" pos:end="503:49"><literal type="number" pos:start="503:45" pos:end="503:45">6</literal><operator pos:start="503:46" pos:end="503:46">*</operator><name pos:start="503:47" pos:end="503:47">i</name><operator pos:start="503:48" pos:end="503:48">+</operator><literal type="number" pos:start="503:49" pos:end="503:49">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="505:25" pos:end="505:51"><decl pos:start="505:25" pos:end="505:50"><type pos:start="505:25" pos:end="505:36"><name pos:start="505:25" pos:end="505:32">unsigned</name> <name pos:start="505:34" pos:end="505:36">int</name></type> <name pos:start="505:38" pos:end="505:38">r</name><init pos:start="505:39" pos:end="505:50">= <expr pos:start="505:41" pos:end="505:50"><name pos:start="505:41" pos:end="505:50"><name pos:start="505:41" pos:end="505:43">src</name><index pos:start="505:44" pos:end="505:50">[<expr pos:start="505:45" pos:end="505:49"><literal type="number" pos:start="505:45" pos:end="505:45">6</literal><operator pos:start="505:46" pos:end="505:46">*</operator><name pos:start="505:47" pos:end="505:47">i</name><operator pos:start="505:48" pos:end="505:48">+</operator><literal type="number" pos:start="505:49" pos:end="505:49">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



			<decl_stmt pos:start="509:25" pos:end="509:86"><decl pos:start="509:25" pos:end="509:85"><type pos:start="509:25" pos:end="509:36"><name pos:start="509:25" pos:end="509:32">unsigned</name> <name pos:start="509:34" pos:end="509:36">int</name></type> <name pos:start="509:38" pos:end="509:38">Y</name>  <init pos:start="509:41" pos:end="509:85">=  <expr pos:start="509:44" pos:end="509:85"><operator pos:start="509:44" pos:end="509:44">(</operator><operator pos:start="509:45" pos:end="509:45">(</operator><name pos:start="509:46" pos:end="509:47">RY</name><operator pos:start="509:48" pos:end="509:48">*</operator><name pos:start="509:49" pos:end="509:49">r</name> <operator pos:start="509:51" pos:end="509:51">+</operator> <name pos:start="509:53" pos:end="509:54">GY</name><operator pos:start="509:55" pos:end="509:55">*</operator><name pos:start="509:56" pos:end="509:56">g</name> <operator pos:start="509:58" pos:end="509:58">+</operator> <name pos:start="509:60" pos:end="509:61">BY</name><operator pos:start="509:62" pos:end="509:62">*</operator><name pos:start="509:63" pos:end="509:63">b</name><operator pos:start="509:64" pos:end="509:64">)</operator><operator pos:start="509:65" pos:end="509:66">&gt;&gt;</operator><name pos:start="509:67" pos:end="509:79">RGB2YUV_SHIFT</name><operator pos:start="509:80" pos:end="509:80">)</operator> <operator pos:start="509:82" pos:end="509:82">+</operator> <literal type="number" pos:start="509:84" pos:end="509:85">16</literal></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="511:25" pos:end="511:87"><decl pos:start="511:25" pos:end="511:86"><type pos:start="511:25" pos:end="511:36"><name pos:start="511:25" pos:end="511:32">unsigned</name> <name pos:start="511:34" pos:end="511:36">int</name></type> <name pos:start="511:38" pos:end="511:38">V</name>  <init pos:start="511:41" pos:end="511:86">=  <expr pos:start="511:44" pos:end="511:86"><operator pos:start="511:44" pos:end="511:44">(</operator><operator pos:start="511:45" pos:end="511:45">(</operator><name pos:start="511:46" pos:end="511:47">RV</name><operator pos:start="511:48" pos:end="511:48">*</operator><name pos:start="511:49" pos:end="511:49">r</name> <operator pos:start="511:51" pos:end="511:51">+</operator> <name pos:start="511:53" pos:end="511:54">GV</name><operator pos:start="511:55" pos:end="511:55">*</operator><name pos:start="511:56" pos:end="511:56">g</name> <operator pos:start="511:58" pos:end="511:58">+</operator> <name pos:start="511:60" pos:end="511:61">BV</name><operator pos:start="511:62" pos:end="511:62">*</operator><name pos:start="511:63" pos:end="511:63">b</name><operator pos:start="511:64" pos:end="511:64">)</operator><operator pos:start="511:65" pos:end="511:66">&gt;&gt;</operator><name pos:start="511:67" pos:end="511:79">RGB2YUV_SHIFT</name><operator pos:start="511:80" pos:end="511:80">)</operator> <operator pos:start="511:82" pos:end="511:82">+</operator> <literal type="number" pos:start="511:84" pos:end="511:86">128</literal></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="513:25" pos:end="513:87"><decl pos:start="513:25" pos:end="513:86"><type pos:start="513:25" pos:end="513:36"><name pos:start="513:25" pos:end="513:32">unsigned</name> <name pos:start="513:34" pos:end="513:36">int</name></type> <name pos:start="513:38" pos:end="513:38">U</name>  <init pos:start="513:41" pos:end="513:86">=  <expr pos:start="513:44" pos:end="513:86"><operator pos:start="513:44" pos:end="513:44">(</operator><operator pos:start="513:45" pos:end="513:45">(</operator><name pos:start="513:46" pos:end="513:47">RU</name><operator pos:start="513:48" pos:end="513:48">*</operator><name pos:start="513:49" pos:end="513:49">r</name> <operator pos:start="513:51" pos:end="513:51">+</operator> <name pos:start="513:53" pos:end="513:54">GU</name><operator pos:start="513:55" pos:end="513:55">*</operator><name pos:start="513:56" pos:end="513:56">g</name> <operator pos:start="513:58" pos:end="513:58">+</operator> <name pos:start="513:60" pos:end="513:61">BU</name><operator pos:start="513:62" pos:end="513:62">*</operator><name pos:start="513:63" pos:end="513:63">b</name><operator pos:start="513:64" pos:end="513:64">)</operator><operator pos:start="513:65" pos:end="513:66">&gt;&gt;</operator><name pos:start="513:67" pos:end="513:79">RGB2YUV_SHIFT</name><operator pos:start="513:80" pos:end="513:80">)</operator> <operator pos:start="513:82" pos:end="513:82">+</operator> <literal type="number" pos:start="513:84" pos:end="513:86">128</literal></expr></init></decl>;</decl_stmt>



			<expr_stmt pos:start="517:25" pos:end="517:44"><expr pos:start="517:25" pos:end="517:43"><name pos:start="517:25" pos:end="517:31"><name pos:start="517:25" pos:end="517:28">udst</name><index pos:start="517:29" pos:end="517:31">[<expr pos:start="517:30" pos:end="517:30"><name pos:start="517:30" pos:end="517:30">i</name></expr>]</index></name> 	<operator pos:start="517:41" pos:end="517:41">=</operator> <name pos:start="517:43" pos:end="517:43">U</name></expr>;</expr_stmt>

			<expr_stmt pos:start="519:25" pos:end="519:44"><expr pos:start="519:25" pos:end="519:43"><name pos:start="519:25" pos:end="519:31"><name pos:start="519:25" pos:end="519:28">vdst</name><index pos:start="519:29" pos:end="519:31">[<expr pos:start="519:30" pos:end="519:30"><name pos:start="519:30" pos:end="519:30">i</name></expr>]</index></name> 	<operator pos:start="519:41" pos:end="519:41">=</operator> <name pos:start="519:43" pos:end="519:43">V</name></expr>;</expr_stmt>

			<expr_stmt pos:start="521:25" pos:end="521:44"><expr pos:start="521:25" pos:end="521:43"><name pos:start="521:25" pos:end="521:33"><name pos:start="521:25" pos:end="521:28">ydst</name><index pos:start="521:29" pos:end="521:33">[<expr pos:start="521:30" pos:end="521:32"><literal type="number" pos:start="521:30" pos:end="521:30">2</literal><operator pos:start="521:31" pos:end="521:31">*</operator><name pos:start="521:32" pos:end="521:32">i</name></expr>]</index></name> 	<operator pos:start="521:41" pos:end="521:41">=</operator> <name pos:start="521:43" pos:end="521:43">Y</name></expr>;</expr_stmt>



			<expr_stmt pos:start="525:25" pos:end="525:38"><expr pos:start="525:25" pos:end="525:37"><name pos:start="525:25" pos:end="525:25">b</name><operator pos:start="525:26" pos:end="525:26">=</operator> <name pos:start="525:28" pos:end="525:37"><name pos:start="525:28" pos:end="525:30">src</name><index pos:start="525:31" pos:end="525:37">[<expr pos:start="525:32" pos:end="525:36"><literal type="number" pos:start="525:32" pos:end="525:32">6</literal><operator pos:start="525:33" pos:end="525:33">*</operator><name pos:start="525:34" pos:end="525:34">i</name><operator pos:start="525:35" pos:end="525:35">+</operator><literal type="number" pos:start="525:36" pos:end="525:36">3</literal></expr>]</index></name></expr>;</expr_stmt>

			<expr_stmt pos:start="527:25" pos:end="527:38"><expr pos:start="527:25" pos:end="527:37"><name pos:start="527:25" pos:end="527:25">g</name><operator pos:start="527:26" pos:end="527:26">=</operator> <name pos:start="527:28" pos:end="527:37"><name pos:start="527:28" pos:end="527:30">src</name><index pos:start="527:31" pos:end="527:37">[<expr pos:start="527:32" pos:end="527:36"><literal type="number" pos:start="527:32" pos:end="527:32">6</literal><operator pos:start="527:33" pos:end="527:33">*</operator><name pos:start="527:34" pos:end="527:34">i</name><operator pos:start="527:35" pos:end="527:35">+</operator><literal type="number" pos:start="527:36" pos:end="527:36">4</literal></expr>]</index></name></expr>;</expr_stmt>

			<expr_stmt pos:start="529:25" pos:end="529:38"><expr pos:start="529:25" pos:end="529:37"><name pos:start="529:25" pos:end="529:25">r</name><operator pos:start="529:26" pos:end="529:26">=</operator> <name pos:start="529:28" pos:end="529:37"><name pos:start="529:28" pos:end="529:30">src</name><index pos:start="529:31" pos:end="529:37">[<expr pos:start="529:32" pos:end="529:36"><literal type="number" pos:start="529:32" pos:end="529:32">6</literal><operator pos:start="529:33" pos:end="529:33">*</operator><name pos:start="529:34" pos:end="529:34">i</name><operator pos:start="529:35" pos:end="529:35">+</operator><literal type="number" pos:start="529:36" pos:end="529:36">5</literal></expr>]</index></name></expr>;</expr_stmt>



			<expr_stmt pos:start="533:25" pos:end="533:73"><expr pos:start="533:25" pos:end="533:72"><name pos:start="533:25" pos:end="533:25">Y</name>  <operator pos:start="533:28" pos:end="533:28">=</operator>  <operator pos:start="533:31" pos:end="533:31">(</operator><operator pos:start="533:32" pos:end="533:32">(</operator><name pos:start="533:33" pos:end="533:34">RY</name><operator pos:start="533:35" pos:end="533:35">*</operator><name pos:start="533:36" pos:end="533:36">r</name> <operator pos:start="533:38" pos:end="533:38">+</operator> <name pos:start="533:40" pos:end="533:41">GY</name><operator pos:start="533:42" pos:end="533:42">*</operator><name pos:start="533:43" pos:end="533:43">g</name> <operator pos:start="533:45" pos:end="533:45">+</operator> <name pos:start="533:47" pos:end="533:48">BY</name><operator pos:start="533:49" pos:end="533:49">*</operator><name pos:start="533:50" pos:end="533:50">b</name><operator pos:start="533:51" pos:end="533:51">)</operator><operator pos:start="533:52" pos:end="533:53">&gt;&gt;</operator><name pos:start="533:54" pos:end="533:66">RGB2YUV_SHIFT</name><operator pos:start="533:67" pos:end="533:67">)</operator> <operator pos:start="533:69" pos:end="533:69">+</operator> <literal type="number" pos:start="533:71" pos:end="533:72">16</literal></expr>;</expr_stmt>

			<expr_stmt pos:start="535:25" pos:end="535:44"><expr pos:start="535:25" pos:end="535:43"><name pos:start="535:25" pos:end="535:35"><name pos:start="535:25" pos:end="535:28">ydst</name><index pos:start="535:29" pos:end="535:35">[<expr pos:start="535:30" pos:end="535:34"><literal type="number" pos:start="535:30" pos:end="535:30">2</literal><operator pos:start="535:31" pos:end="535:31">*</operator><name pos:start="535:32" pos:end="535:32">i</name><operator pos:start="535:33" pos:end="535:33">+</operator><literal type="number" pos:start="535:34" pos:end="535:34">1</literal></expr>]</index></name> 	<operator pos:start="535:41" pos:end="535:41">=</operator> <name pos:start="535:43" pos:end="535:43">Y</name></expr>;</expr_stmt>

		</block_content>}</block></for>

		<expr_stmt pos:start="539:17" pos:end="539:34"><expr pos:start="539:17" pos:end="539:33"><name pos:start="539:17" pos:end="539:20">ydst</name> <operator pos:start="539:22" pos:end="539:23">+=</operator> <name pos:start="539:25" pos:end="539:33">lumStride</name></expr>;</expr_stmt>

		<expr_stmt pos:start="541:17" pos:end="541:34"><expr pos:start="541:17" pos:end="541:33"><name pos:start="541:17" pos:end="541:19">src</name>  <operator pos:start="541:22" pos:end="541:23">+=</operator> <name pos:start="541:25" pos:end="541:33">srcStride</name></expr>;</expr_stmt>



		<for pos:start="545:17" pos:end="577:17">for<control pos:start="545:20" pos:end="545:43">(<init pos:start="545:21" pos:end="545:24"><expr pos:start="545:21" pos:end="545:23"><name pos:start="545:21" pos:end="545:21">i</name><operator pos:start="545:22" pos:end="545:22">=</operator><literal type="number" pos:start="545:23" pos:end="545:23">0</literal></expr>;</init> <condition pos:start="545:26" pos:end="545:38"><expr pos:start="545:26" pos:end="545:37"><name pos:start="545:26" pos:end="545:26">i</name><operator pos:start="545:27" pos:end="545:27">&lt;</operator><name pos:start="545:28" pos:end="545:37">chromWidth</name></expr>;</condition> <incr pos:start="545:40" pos:end="545:42"><expr pos:start="545:40" pos:end="545:42"><name pos:start="545:40" pos:end="545:40">i</name><operator pos:start="545:41" pos:end="545:42">++</operator></expr></incr>)</control>

		<block pos:start="547:17" pos:end="577:17">{<block_content pos:start="549:25" pos:end="575:44">

			<decl_stmt pos:start="549:25" pos:end="549:51"><decl pos:start="549:25" pos:end="549:50"><type pos:start="549:25" pos:end="549:36"><name pos:start="549:25" pos:end="549:32">unsigned</name> <name pos:start="549:34" pos:end="549:36">int</name></type> <name pos:start="549:38" pos:end="549:38">b</name><init pos:start="549:39" pos:end="549:50">= <expr pos:start="549:41" pos:end="549:50"><name pos:start="549:41" pos:end="549:50"><name pos:start="549:41" pos:end="549:43">src</name><index pos:start="549:44" pos:end="549:50">[<expr pos:start="549:45" pos:end="549:49"><literal type="number" pos:start="549:45" pos:end="549:45">6</literal><operator pos:start="549:46" pos:end="549:46">*</operator><name pos:start="549:47" pos:end="549:47">i</name><operator pos:start="549:48" pos:end="549:48">+</operator><literal type="number" pos:start="549:49" pos:end="549:49">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="551:25" pos:end="551:51"><decl pos:start="551:25" pos:end="551:50"><type pos:start="551:25" pos:end="551:36"><name pos:start="551:25" pos:end="551:32">unsigned</name> <name pos:start="551:34" pos:end="551:36">int</name></type> <name pos:start="551:38" pos:end="551:38">g</name><init pos:start="551:39" pos:end="551:50">= <expr pos:start="551:41" pos:end="551:50"><name pos:start="551:41" pos:end="551:50"><name pos:start="551:41" pos:end="551:43">src</name><index pos:start="551:44" pos:end="551:50">[<expr pos:start="551:45" pos:end="551:49"><literal type="number" pos:start="551:45" pos:end="551:45">6</literal><operator pos:start="551:46" pos:end="551:46">*</operator><name pos:start="551:47" pos:end="551:47">i</name><operator pos:start="551:48" pos:end="551:48">+</operator><literal type="number" pos:start="551:49" pos:end="551:49">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="553:25" pos:end="553:51"><decl pos:start="553:25" pos:end="553:50"><type pos:start="553:25" pos:end="553:36"><name pos:start="553:25" pos:end="553:32">unsigned</name> <name pos:start="553:34" pos:end="553:36">int</name></type> <name pos:start="553:38" pos:end="553:38">r</name><init pos:start="553:39" pos:end="553:50">= <expr pos:start="553:41" pos:end="553:50"><name pos:start="553:41" pos:end="553:50"><name pos:start="553:41" pos:end="553:43">src</name><index pos:start="553:44" pos:end="553:50">[<expr pos:start="553:45" pos:end="553:49"><literal type="number" pos:start="553:45" pos:end="553:45">6</literal><operator pos:start="553:46" pos:end="553:46">*</operator><name pos:start="553:47" pos:end="553:47">i</name><operator pos:start="553:48" pos:end="553:48">+</operator><literal type="number" pos:start="553:49" pos:end="553:49">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



			<decl_stmt pos:start="557:25" pos:end="557:86"><decl pos:start="557:25" pos:end="557:85"><type pos:start="557:25" pos:end="557:36"><name pos:start="557:25" pos:end="557:32">unsigned</name> <name pos:start="557:34" pos:end="557:36">int</name></type> <name pos:start="557:38" pos:end="557:38">Y</name>  <init pos:start="557:41" pos:end="557:85">=  <expr pos:start="557:44" pos:end="557:85"><operator pos:start="557:44" pos:end="557:44">(</operator><operator pos:start="557:45" pos:end="557:45">(</operator><name pos:start="557:46" pos:end="557:47">RY</name><operator pos:start="557:48" pos:end="557:48">*</operator><name pos:start="557:49" pos:end="557:49">r</name> <operator pos:start="557:51" pos:end="557:51">+</operator> <name pos:start="557:53" pos:end="557:54">GY</name><operator pos:start="557:55" pos:end="557:55">*</operator><name pos:start="557:56" pos:end="557:56">g</name> <operator pos:start="557:58" pos:end="557:58">+</operator> <name pos:start="557:60" pos:end="557:61">BY</name><operator pos:start="557:62" pos:end="557:62">*</operator><name pos:start="557:63" pos:end="557:63">b</name><operator pos:start="557:64" pos:end="557:64">)</operator><operator pos:start="557:65" pos:end="557:66">&gt;&gt;</operator><name pos:start="557:67" pos:end="557:79">RGB2YUV_SHIFT</name><operator pos:start="557:80" pos:end="557:80">)</operator> <operator pos:start="557:82" pos:end="557:82">+</operator> <literal type="number" pos:start="557:84" pos:end="557:85">16</literal></expr></init></decl>;</decl_stmt>



			<expr_stmt pos:start="561:25" pos:end="561:44"><expr pos:start="561:25" pos:end="561:43"><name pos:start="561:25" pos:end="561:33"><name pos:start="561:25" pos:end="561:28">ydst</name><index pos:start="561:29" pos:end="561:33">[<expr pos:start="561:30" pos:end="561:32"><literal type="number" pos:start="561:30" pos:end="561:30">2</literal><operator pos:start="561:31" pos:end="561:31">*</operator><name pos:start="561:32" pos:end="561:32">i</name></expr>]</index></name> 	<operator pos:start="561:41" pos:end="561:41">=</operator> <name pos:start="561:43" pos:end="561:43">Y</name></expr>;</expr_stmt>



			<expr_stmt pos:start="565:25" pos:end="565:38"><expr pos:start="565:25" pos:end="565:37"><name pos:start="565:25" pos:end="565:25">b</name><operator pos:start="565:26" pos:end="565:26">=</operator> <name pos:start="565:28" pos:end="565:37"><name pos:start="565:28" pos:end="565:30">src</name><index pos:start="565:31" pos:end="565:37">[<expr pos:start="565:32" pos:end="565:36"><literal type="number" pos:start="565:32" pos:end="565:32">6</literal><operator pos:start="565:33" pos:end="565:33">*</operator><name pos:start="565:34" pos:end="565:34">i</name><operator pos:start="565:35" pos:end="565:35">+</operator><literal type="number" pos:start="565:36" pos:end="565:36">3</literal></expr>]</index></name></expr>;</expr_stmt>

			<expr_stmt pos:start="567:25" pos:end="567:38"><expr pos:start="567:25" pos:end="567:37"><name pos:start="567:25" pos:end="567:25">g</name><operator pos:start="567:26" pos:end="567:26">=</operator> <name pos:start="567:28" pos:end="567:37"><name pos:start="567:28" pos:end="567:30">src</name><index pos:start="567:31" pos:end="567:37">[<expr pos:start="567:32" pos:end="567:36"><literal type="number" pos:start="567:32" pos:end="567:32">6</literal><operator pos:start="567:33" pos:end="567:33">*</operator><name pos:start="567:34" pos:end="567:34">i</name><operator pos:start="567:35" pos:end="567:35">+</operator><literal type="number" pos:start="567:36" pos:end="567:36">4</literal></expr>]</index></name></expr>;</expr_stmt>

			<expr_stmt pos:start="569:25" pos:end="569:38"><expr pos:start="569:25" pos:end="569:37"><name pos:start="569:25" pos:end="569:25">r</name><operator pos:start="569:26" pos:end="569:26">=</operator> <name pos:start="569:28" pos:end="569:37"><name pos:start="569:28" pos:end="569:30">src</name><index pos:start="569:31" pos:end="569:37">[<expr pos:start="569:32" pos:end="569:36"><literal type="number" pos:start="569:32" pos:end="569:32">6</literal><operator pos:start="569:33" pos:end="569:33">*</operator><name pos:start="569:34" pos:end="569:34">i</name><operator pos:start="569:35" pos:end="569:35">+</operator><literal type="number" pos:start="569:36" pos:end="569:36">5</literal></expr>]</index></name></expr>;</expr_stmt>



			<expr_stmt pos:start="573:25" pos:end="573:73"><expr pos:start="573:25" pos:end="573:72"><name pos:start="573:25" pos:end="573:25">Y</name>  <operator pos:start="573:28" pos:end="573:28">=</operator>  <operator pos:start="573:31" pos:end="573:31">(</operator><operator pos:start="573:32" pos:end="573:32">(</operator><name pos:start="573:33" pos:end="573:34">RY</name><operator pos:start="573:35" pos:end="573:35">*</operator><name pos:start="573:36" pos:end="573:36">r</name> <operator pos:start="573:38" pos:end="573:38">+</operator> <name pos:start="573:40" pos:end="573:41">GY</name><operator pos:start="573:42" pos:end="573:42">*</operator><name pos:start="573:43" pos:end="573:43">g</name> <operator pos:start="573:45" pos:end="573:45">+</operator> <name pos:start="573:47" pos:end="573:48">BY</name><operator pos:start="573:49" pos:end="573:49">*</operator><name pos:start="573:50" pos:end="573:50">b</name><operator pos:start="573:51" pos:end="573:51">)</operator><operator pos:start="573:52" pos:end="573:53">&gt;&gt;</operator><name pos:start="573:54" pos:end="573:66">RGB2YUV_SHIFT</name><operator pos:start="573:67" pos:end="573:67">)</operator> <operator pos:start="573:69" pos:end="573:69">+</operator> <literal type="number" pos:start="573:71" pos:end="573:72">16</literal></expr>;</expr_stmt>

			<expr_stmt pos:start="575:25" pos:end="575:44"><expr pos:start="575:25" pos:end="575:43"><name pos:start="575:25" pos:end="575:35"><name pos:start="575:25" pos:end="575:28">ydst</name><index pos:start="575:29" pos:end="575:35">[<expr pos:start="575:30" pos:end="575:34"><literal type="number" pos:start="575:30" pos:end="575:30">2</literal><operator pos:start="575:31" pos:end="575:31">*</operator><name pos:start="575:32" pos:end="575:32">i</name><operator pos:start="575:33" pos:end="575:33">+</operator><literal type="number" pos:start="575:34" pos:end="575:34">1</literal></expr>]</index></name> 	<operator pos:start="575:41" pos:end="575:41">=</operator> <name pos:start="575:43" pos:end="575:43">Y</name></expr>;</expr_stmt>

		</block_content>}</block></for>

		<expr_stmt pos:start="579:17" pos:end="579:36"><expr pos:start="579:17" pos:end="579:35"><name pos:start="579:17" pos:end="579:20">udst</name> <operator pos:start="579:22" pos:end="579:23">+=</operator> <name pos:start="579:25" pos:end="579:35">chromStride</name></expr>;</expr_stmt>

		<expr_stmt pos:start="581:17" pos:end="581:36"><expr pos:start="581:17" pos:end="581:35"><name pos:start="581:17" pos:end="581:20">vdst</name> <operator pos:start="581:22" pos:end="581:23">+=</operator> <name pos:start="581:25" pos:end="581:35">chromStride</name></expr>;</expr_stmt>

		<expr_stmt pos:start="583:17" pos:end="583:34"><expr pos:start="583:17" pos:end="583:33"><name pos:start="583:17" pos:end="583:20">ydst</name> <operator pos:start="583:22" pos:end="583:23">+=</operator> <name pos:start="583:25" pos:end="583:33">lumStride</name></expr>;</expr_stmt>

		<expr_stmt pos:start="585:17" pos:end="585:34"><expr pos:start="585:17" pos:end="585:33"><name pos:start="585:17" pos:end="585:19">src</name>  <operator pos:start="585:22" pos:end="585:23">+=</operator> <name pos:start="585:25" pos:end="585:33">srcStride</name></expr>;</expr_stmt>

	</block_content>}</block></for>

</block_content>}</block></function>
</unit>
