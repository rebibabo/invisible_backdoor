<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18002.c" pos:tabs="8"><function pos:start="1:1" pos:end="275:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">nbd_receive_negotiate</name><parameter_list pos:start="1:26" pos:end="3:52">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:36">QIOChannel</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">ioc</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:59"><decl pos:start="1:44" pos:end="1:59"><type pos:start="1:44" pos:end="1:59"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:53">char</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">name</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:76"><decl pos:start="1:62" pos:end="1:76"><type pos:start="1:62" pos:end="1:76"><name pos:start="1:62" pos:end="1:69">uint32_t</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:76">flags</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:37"><decl pos:start="3:27" pos:end="3:37"><type pos:start="3:27" pos:end="3:37"><name pos:start="3:27" pos:end="3:31">off_t</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:37">size</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:51"><decl pos:start="3:40" pos:end="3:51"><type pos:start="3:40" pos:end="3:51"><name pos:start="3:40" pos:end="3:44">Error</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier><modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:51">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="275:1">{<block_content pos:start="7:5" pos:end="273:14">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:17"><name pos:start="7:10" pos:end="7:12">buf</name><index pos:start="7:13" pos:end="7:17">[<expr pos:start="7:14" pos:end="7:16"><literal type="number" pos:start="7:14" pos:end="7:16">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:18">magic</name></decl>, <decl pos:start="9:21" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:21" pos:end="9:21">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:11"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">rc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><call pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:9">TRACE</name><argument_list pos:start="15:10" pos:end="15:35">(<argument pos:start="15:11" pos:end="15:34"><expr pos:start="15:11" pos:end="15:34"><literal type="string" pos:start="15:11" pos:end="15:34">"Receiving negotiation."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:17"><expr pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:6">rc</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <operator pos:start="19:10" pos:end="19:10">-</operator><name pos:start="19:11" pos:end="19:16">EINVAL</name></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:36">(<expr pos:start="23:9" pos:end="23:35"><call pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:17">read_sync</name><argument_list pos:start="23:18" pos:end="23:30">(<argument pos:start="23:19" pos:end="23:21"><expr pos:start="23:19" pos:end="23:21"><name pos:start="23:19" pos:end="23:21">ioc</name></expr></argument>, <argument pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:26">buf</name></expr></argument>, <argument pos:start="23:29" pos:end="23:29"><expr pos:start="23:29" pos:end="23:29"><literal type="number" pos:start="23:29" pos:end="23:29">8</literal></expr></argument>)</argument_list></call> <operator pos:start="23:32" pos:end="23:33">!=</operator> <literal type="number" pos:start="23:35" pos:end="23:35">8</literal></expr>)</condition> <block pos:start="23:38" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:18">

        <expr_stmt pos:start="25:9" pos:end="25:48"><expr pos:start="25:9" pos:end="25:47"><call pos:start="25:9" pos:end="25:47"><name pos:start="25:9" pos:end="25:18">error_setg</name><argument_list pos:start="25:19" pos:end="25:47">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">errp</name></expr></argument>, <argument pos:start="25:26" pos:end="25:46"><expr pos:start="25:26" pos:end="25:46"><literal type="string" pos:start="25:26" pos:end="25:46">"Failed to read data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="27:9" pos:end="27:18">goto <name pos:start="27:14" pos:end="27:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:18"><expr pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:7">buf</name><index pos:start="33:8" pos:end="33:10">[<expr pos:start="33:9" pos:end="33:9"><literal type="number" pos:start="33:9" pos:end="33:9">8</literal></expr>]</index></name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="char" pos:start="33:14" pos:end="33:17">'\0'</literal></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:25">(<expr pos:start="35:9" pos:end="35:24"><call pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:14">strlen</name><argument_list pos:start="35:15" pos:end="35:19">(<argument pos:start="35:16" pos:end="35:18"><expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:18">buf</name></expr></argument>)</argument_list></call> <operator pos:start="35:21" pos:end="35:22">==</operator> <literal type="number" pos:start="35:24" pos:end="35:24">0</literal></expr>)</condition> <block pos:start="35:27" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:18">

        <expr_stmt pos:start="37:9" pos:end="37:66"><expr pos:start="37:9" pos:end="37:65"><call pos:start="37:9" pos:end="37:65"><name pos:start="37:9" pos:end="37:18">error_setg</name><argument_list pos:start="37:19" pos:end="37:65">(<argument pos:start="37:20" pos:end="37:23"><expr pos:start="37:20" pos:end="37:23"><name pos:start="37:20" pos:end="37:23">errp</name></expr></argument>, <argument pos:start="37:26" pos:end="37:64"><expr pos:start="37:26" pos:end="37:64"><literal type="string" pos:start="37:26" pos:end="37:64">"Server connection closed unexpectedly"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="39:9" pos:end="39:18">goto <name pos:start="39:14" pos:end="39:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="61:47"><expr pos:start="45:5" pos:end="61:46"><call pos:start="45:5" pos:end="61:46"><name pos:start="45:5" pos:end="45:9">TRACE</name><argument_list pos:start="45:10" pos:end="61:46">(<argument pos:start="45:11" pos:end="45:37"><expr pos:start="45:11" pos:end="45:37"><literal type="string" pos:start="45:11" pos:end="45:37">"Magic is %c%c%c%c%c%c%c%c"</literal></expr></argument>,

          <argument pos:start="47:11" pos:end="47:45"><expr pos:start="47:11" pos:end="47:45"><ternary pos:start="47:11" pos:end="47:45"><condition pos:start="47:11" pos:end="47:32"><expr pos:start="47:11" pos:end="47:30"><call pos:start="47:11" pos:end="47:30"><name pos:start="47:11" pos:end="47:22">qemu_isprint</name><argument_list pos:start="47:23" pos:end="47:30">(<argument pos:start="47:24" pos:end="47:29"><expr pos:start="47:24" pos:end="47:29"><name pos:start="47:24" pos:end="47:29"><name pos:start="47:24" pos:end="47:26">buf</name><index pos:start="47:27" pos:end="47:29">[<expr pos:start="47:28" pos:end="47:28"><literal type="number" pos:start="47:28" pos:end="47:28">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="47:34" pos:end="47:39"> <expr pos:start="47:34" pos:end="47:39"><name pos:start="47:34" pos:end="47:39"><name pos:start="47:34" pos:end="47:36">buf</name><index pos:start="47:37" pos:end="47:39">[<expr pos:start="47:38" pos:end="47:38"><literal type="number" pos:start="47:38" pos:end="47:38">0</literal></expr>]</index></name></expr> </then><else pos:start="47:41" pos:end="47:45">: <expr pos:start="47:43" pos:end="47:45"><literal type="char" pos:start="47:43" pos:end="47:45">'.'</literal></expr></else></ternary></expr></argument>,

          <argument pos:start="49:11" pos:end="49:45"><expr pos:start="49:11" pos:end="49:45"><ternary pos:start="49:11" pos:end="49:45"><condition pos:start="49:11" pos:end="49:32"><expr pos:start="49:11" pos:end="49:30"><call pos:start="49:11" pos:end="49:30"><name pos:start="49:11" pos:end="49:22">qemu_isprint</name><argument_list pos:start="49:23" pos:end="49:30">(<argument pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:26">buf</name><index pos:start="49:27" pos:end="49:29">[<expr pos:start="49:28" pos:end="49:28"><literal type="number" pos:start="49:28" pos:end="49:28">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="49:34" pos:end="49:39"> <expr pos:start="49:34" pos:end="49:39"><name pos:start="49:34" pos:end="49:39"><name pos:start="49:34" pos:end="49:36">buf</name><index pos:start="49:37" pos:end="49:39">[<expr pos:start="49:38" pos:end="49:38"><literal type="number" pos:start="49:38" pos:end="49:38">1</literal></expr>]</index></name></expr> </then><else pos:start="49:41" pos:end="49:45">: <expr pos:start="49:43" pos:end="49:45"><literal type="char" pos:start="49:43" pos:end="49:45">'.'</literal></expr></else></ternary></expr></argument>,

          <argument pos:start="51:11" pos:end="51:45"><expr pos:start="51:11" pos:end="51:45"><ternary pos:start="51:11" pos:end="51:45"><condition pos:start="51:11" pos:end="51:32"><expr pos:start="51:11" pos:end="51:30"><call pos:start="51:11" pos:end="51:30"><name pos:start="51:11" pos:end="51:22">qemu_isprint</name><argument_list pos:start="51:23" pos:end="51:30">(<argument pos:start="51:24" pos:end="51:29"><expr pos:start="51:24" pos:end="51:29"><name pos:start="51:24" pos:end="51:29"><name pos:start="51:24" pos:end="51:26">buf</name><index pos:start="51:27" pos:end="51:29">[<expr pos:start="51:28" pos:end="51:28"><literal type="number" pos:start="51:28" pos:end="51:28">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="51:34" pos:end="51:39"> <expr pos:start="51:34" pos:end="51:39"><name pos:start="51:34" pos:end="51:39"><name pos:start="51:34" pos:end="51:36">buf</name><index pos:start="51:37" pos:end="51:39">[<expr pos:start="51:38" pos:end="51:38"><literal type="number" pos:start="51:38" pos:end="51:38">2</literal></expr>]</index></name></expr> </then><else pos:start="51:41" pos:end="51:45">: <expr pos:start="51:43" pos:end="51:45"><literal type="char" pos:start="51:43" pos:end="51:45">'.'</literal></expr></else></ternary></expr></argument>,

          <argument pos:start="53:11" pos:end="53:45"><expr pos:start="53:11" pos:end="53:45"><ternary pos:start="53:11" pos:end="53:45"><condition pos:start="53:11" pos:end="53:32"><expr pos:start="53:11" pos:end="53:30"><call pos:start="53:11" pos:end="53:30"><name pos:start="53:11" pos:end="53:22">qemu_isprint</name><argument_list pos:start="53:23" pos:end="53:30">(<argument pos:start="53:24" pos:end="53:29"><expr pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:26">buf</name><index pos:start="53:27" pos:end="53:29">[<expr pos:start="53:28" pos:end="53:28"><literal type="number" pos:start="53:28" pos:end="53:28">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="53:34" pos:end="53:39"> <expr pos:start="53:34" pos:end="53:39"><name pos:start="53:34" pos:end="53:39"><name pos:start="53:34" pos:end="53:36">buf</name><index pos:start="53:37" pos:end="53:39">[<expr pos:start="53:38" pos:end="53:38"><literal type="number" pos:start="53:38" pos:end="53:38">3</literal></expr>]</index></name></expr> </then><else pos:start="53:41" pos:end="53:45">: <expr pos:start="53:43" pos:end="53:45"><literal type="char" pos:start="53:43" pos:end="53:45">'.'</literal></expr></else></ternary></expr></argument>,

          <argument pos:start="55:11" pos:end="55:45"><expr pos:start="55:11" pos:end="55:45"><ternary pos:start="55:11" pos:end="55:45"><condition pos:start="55:11" pos:end="55:32"><expr pos:start="55:11" pos:end="55:30"><call pos:start="55:11" pos:end="55:30"><name pos:start="55:11" pos:end="55:22">qemu_isprint</name><argument_list pos:start="55:23" pos:end="55:30">(<argument pos:start="55:24" pos:end="55:29"><expr pos:start="55:24" pos:end="55:29"><name pos:start="55:24" pos:end="55:29"><name pos:start="55:24" pos:end="55:26">buf</name><index pos:start="55:27" pos:end="55:29">[<expr pos:start="55:28" pos:end="55:28"><literal type="number" pos:start="55:28" pos:end="55:28">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="55:34" pos:end="55:39"> <expr pos:start="55:34" pos:end="55:39"><name pos:start="55:34" pos:end="55:39"><name pos:start="55:34" pos:end="55:36">buf</name><index pos:start="55:37" pos:end="55:39">[<expr pos:start="55:38" pos:end="55:38"><literal type="number" pos:start="55:38" pos:end="55:38">4</literal></expr>]</index></name></expr> </then><else pos:start="55:41" pos:end="55:45">: <expr pos:start="55:43" pos:end="55:45"><literal type="char" pos:start="55:43" pos:end="55:45">'.'</literal></expr></else></ternary></expr></argument>,

          <argument pos:start="57:11" pos:end="57:45"><expr pos:start="57:11" pos:end="57:45"><ternary pos:start="57:11" pos:end="57:45"><condition pos:start="57:11" pos:end="57:32"><expr pos:start="57:11" pos:end="57:30"><call pos:start="57:11" pos:end="57:30"><name pos:start="57:11" pos:end="57:22">qemu_isprint</name><argument_list pos:start="57:23" pos:end="57:30">(<argument pos:start="57:24" pos:end="57:29"><expr pos:start="57:24" pos:end="57:29"><name pos:start="57:24" pos:end="57:29"><name pos:start="57:24" pos:end="57:26">buf</name><index pos:start="57:27" pos:end="57:29">[<expr pos:start="57:28" pos:end="57:28"><literal type="number" pos:start="57:28" pos:end="57:28">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="57:34" pos:end="57:39"> <expr pos:start="57:34" pos:end="57:39"><name pos:start="57:34" pos:end="57:39"><name pos:start="57:34" pos:end="57:36">buf</name><index pos:start="57:37" pos:end="57:39">[<expr pos:start="57:38" pos:end="57:38"><literal type="number" pos:start="57:38" pos:end="57:38">5</literal></expr>]</index></name></expr> </then><else pos:start="57:41" pos:end="57:45">: <expr pos:start="57:43" pos:end="57:45"><literal type="char" pos:start="57:43" pos:end="57:45">'.'</literal></expr></else></ternary></expr></argument>,

          <argument pos:start="59:11" pos:end="59:45"><expr pos:start="59:11" pos:end="59:45"><ternary pos:start="59:11" pos:end="59:45"><condition pos:start="59:11" pos:end="59:32"><expr pos:start="59:11" pos:end="59:30"><call pos:start="59:11" pos:end="59:30"><name pos:start="59:11" pos:end="59:22">qemu_isprint</name><argument_list pos:start="59:23" pos:end="59:30">(<argument pos:start="59:24" pos:end="59:29"><expr pos:start="59:24" pos:end="59:29"><name pos:start="59:24" pos:end="59:29"><name pos:start="59:24" pos:end="59:26">buf</name><index pos:start="59:27" pos:end="59:29">[<expr pos:start="59:28" pos:end="59:28"><literal type="number" pos:start="59:28" pos:end="59:28">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="59:34" pos:end="59:39"> <expr pos:start="59:34" pos:end="59:39"><name pos:start="59:34" pos:end="59:39"><name pos:start="59:34" pos:end="59:36">buf</name><index pos:start="59:37" pos:end="59:39">[<expr pos:start="59:38" pos:end="59:38"><literal type="number" pos:start="59:38" pos:end="59:38">6</literal></expr>]</index></name></expr> </then><else pos:start="59:41" pos:end="59:45">: <expr pos:start="59:43" pos:end="59:45"><literal type="char" pos:start="59:43" pos:end="59:45">'.'</literal></expr></else></ternary></expr></argument>,

          <argument pos:start="61:11" pos:end="61:45"><expr pos:start="61:11" pos:end="61:45"><ternary pos:start="61:11" pos:end="61:45"><condition pos:start="61:11" pos:end="61:32"><expr pos:start="61:11" pos:end="61:30"><call pos:start="61:11" pos:end="61:30"><name pos:start="61:11" pos:end="61:22">qemu_isprint</name><argument_list pos:start="61:23" pos:end="61:30">(<argument pos:start="61:24" pos:end="61:29"><expr pos:start="61:24" pos:end="61:29"><name pos:start="61:24" pos:end="61:29"><name pos:start="61:24" pos:end="61:26">buf</name><index pos:start="61:27" pos:end="61:29">[<expr pos:start="61:28" pos:end="61:28"><literal type="number" pos:start="61:28" pos:end="61:28">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="61:34" pos:end="61:39"> <expr pos:start="61:34" pos:end="61:39"><name pos:start="61:34" pos:end="61:39"><name pos:start="61:34" pos:end="61:36">buf</name><index pos:start="61:37" pos:end="61:39">[<expr pos:start="61:38" pos:end="61:38"><literal type="number" pos:start="61:38" pos:end="61:38">7</literal></expr>]</index></name></expr> </then><else pos:start="61:41" pos:end="61:45">: <expr pos:start="61:43" pos:end="61:45"><literal type="char" pos:start="61:43" pos:end="61:45">'.'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:40">(<expr pos:start="65:9" pos:end="65:39"><call pos:start="65:9" pos:end="65:34"><name pos:start="65:9" pos:end="65:14">memcmp</name><argument_list pos:start="65:15" pos:end="65:34">(<argument pos:start="65:16" pos:end="65:18"><expr pos:start="65:16" pos:end="65:18"><name pos:start="65:16" pos:end="65:18">buf</name></expr></argument>, <argument pos:start="65:21" pos:end="65:30"><expr pos:start="65:21" pos:end="65:30"><literal type="string" pos:start="65:21" pos:end="65:30">"NBDMAGIC"</literal></expr></argument>, <argument pos:start="65:33" pos:end="65:33"><expr pos:start="65:33" pos:end="65:33"><literal type="number" pos:start="65:33" pos:end="65:33">8</literal></expr></argument>)</argument_list></call> <operator pos:start="65:36" pos:end="65:37">!=</operator> <literal type="number" pos:start="65:39" pos:end="65:39">0</literal></expr>)</condition> <block pos:start="65:42" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:18">

        <expr_stmt pos:start="67:9" pos:end="67:51"><expr pos:start="67:9" pos:end="67:50"><call pos:start="67:9" pos:end="67:50"><name pos:start="67:9" pos:end="67:18">error_setg</name><argument_list pos:start="67:19" pos:end="67:50">(<argument pos:start="67:20" pos:end="67:23"><expr pos:start="67:20" pos:end="67:23"><name pos:start="67:20" pos:end="67:23">errp</name></expr></argument>, <argument pos:start="67:26" pos:end="67:49"><expr pos:start="67:26" pos:end="67:49"><literal type="string" pos:start="67:26" pos:end="67:49">"Invalid magic received"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="69:9" pos:end="69:18">goto <name pos:start="69:14" pos:end="69:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:63">(<expr pos:start="75:9" pos:end="75:62"><call pos:start="75:9" pos:end="75:45"><name pos:start="75:9" pos:end="75:17">read_sync</name><argument_list pos:start="75:18" pos:end="75:45">(<argument pos:start="75:19" pos:end="75:21"><expr pos:start="75:19" pos:end="75:21"><name pos:start="75:19" pos:end="75:21">ioc</name></expr></argument>, <argument pos:start="75:24" pos:end="75:29"><expr pos:start="75:24" pos:end="75:29"><operator pos:start="75:24" pos:end="75:24">&amp;</operator><name pos:start="75:25" pos:end="75:29">magic</name></expr></argument>, <argument pos:start="75:32" pos:end="75:44"><expr pos:start="75:32" pos:end="75:44"><sizeof pos:start="75:32" pos:end="75:44">sizeof<argument_list pos:start="75:38" pos:end="75:44">(<argument pos:start="75:39" pos:end="75:43"><expr pos:start="75:39" pos:end="75:43"><name pos:start="75:39" pos:end="75:43">magic</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="75:47" pos:end="75:48">!=</operator> <sizeof pos:start="75:50" pos:end="75:62">sizeof<argument_list pos:start="75:56" pos:end="75:62">(<argument pos:start="75:57" pos:end="75:61"><expr pos:start="75:57" pos:end="75:61"><name pos:start="75:57" pos:end="75:61">magic</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="75:65" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:18">

        <expr_stmt pos:start="77:9" pos:end="77:49"><expr pos:start="77:9" pos:end="77:48"><call pos:start="77:9" pos:end="77:48"><name pos:start="77:9" pos:end="77:18">error_setg</name><argument_list pos:start="77:19" pos:end="77:48">(<argument pos:start="77:20" pos:end="77:23"><expr pos:start="77:20" pos:end="77:23"><name pos:start="77:20" pos:end="77:23">errp</name></expr></argument>, <argument pos:start="77:26" pos:end="77:47"><expr pos:start="77:26" pos:end="77:47"><literal type="string" pos:start="77:26" pos:end="77:47">"Failed to read magic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="79:9" pos:end="79:18">goto <name pos:start="79:14" pos:end="79:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:31"><expr pos:start="83:5" pos:end="83:30"><name pos:start="83:5" pos:end="83:9">magic</name> <operator pos:start="83:11" pos:end="83:11">=</operator> <call pos:start="83:13" pos:end="83:30"><name pos:start="83:13" pos:end="83:23">be64_to_cpu</name><argument_list pos:start="83:24" pos:end="83:30">(<argument pos:start="83:25" pos:end="83:29"><expr pos:start="83:25" pos:end="83:29"><name pos:start="83:25" pos:end="83:29">magic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:40"><expr pos:start="85:5" pos:end="85:39"><call pos:start="85:5" pos:end="85:39"><name pos:start="85:5" pos:end="85:9">TRACE</name><argument_list pos:start="85:10" pos:end="85:39">(<argument pos:start="85:11" pos:end="85:31"><expr pos:start="85:11" pos:end="85:31"><literal type="string" pos:start="85:11" pos:end="85:24">"Magic is 0x%"</literal> <name pos:start="85:26" pos:end="85:31">PRIx64</name></expr></argument>, <argument pos:start="85:34" pos:end="85:38"><expr pos:start="85:34" pos:end="85:38"><name pos:start="85:34" pos:end="85:38">magic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="89:5" pos:end="255:5"><if pos:start="89:5" pos:end="213:5">if <condition pos:start="89:8" pos:end="89:32">(<expr pos:start="89:9" pos:end="89:31"><name pos:start="89:9" pos:end="89:13">magic</name> <operator pos:start="89:15" pos:end="89:16">==</operator> <name pos:start="89:18" pos:end="89:31">NBD_OPTS_MAGIC</name></expr>)</condition> <block pos:start="89:34" pos:end="213:5">{<block_content pos:start="91:9" pos:end="211:43">

        <decl_stmt pos:start="91:9" pos:end="91:33"><decl pos:start="91:9" pos:end="91:32"><type pos:start="91:9" pos:end="91:16"><name pos:start="91:9" pos:end="91:16">uint32_t</name></type> <name pos:start="91:18" pos:end="91:28">clientflags</name> <init pos:start="91:30" pos:end="91:32">= <expr pos:start="91:32" pos:end="91:32"><literal type="number" pos:start="91:32" pos:end="91:32">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="93:9" pos:end="93:21"><decl pos:start="93:9" pos:end="93:20"><type pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:16">uint32_t</name></type> <name pos:start="93:18" pos:end="93:20">opt</name></decl>;</decl_stmt>

        <decl_stmt pos:start="95:9" pos:end="95:26"><decl pos:start="95:9" pos:end="95:25"><type pos:start="95:9" pos:end="95:16"><name pos:start="95:9" pos:end="95:16">uint32_t</name></type> <name pos:start="95:18" pos:end="95:25">namesize</name></decl>;</decl_stmt>

        <decl_stmt pos:start="97:9" pos:end="97:29"><decl pos:start="97:9" pos:end="97:28"><type pos:start="97:9" pos:end="97:16"><name pos:start="97:9" pos:end="97:16">uint16_t</name></type> <name pos:start="97:18" pos:end="97:28">globalflags</name></decl>;</decl_stmt>

        <decl_stmt pos:start="99:9" pos:end="99:29"><decl pos:start="99:9" pos:end="99:28"><type pos:start="99:9" pos:end="99:16"><name pos:start="99:9" pos:end="99:16">uint16_t</name></type> <name pos:start="99:18" pos:end="99:28">exportflags</name></decl>;</decl_stmt>



        <if_stmt pos:start="103:9" pos:end="111:9"><if pos:start="103:9" pos:end="111:9">if <condition pos:start="103:12" pos:end="105:32">(<expr pos:start="103:13" pos:end="105:31"><call pos:start="103:13" pos:end="103:61"><name pos:start="103:13" pos:end="103:21">read_sync</name><argument_list pos:start="103:22" pos:end="103:61">(<argument pos:start="103:23" pos:end="103:25"><expr pos:start="103:23" pos:end="103:25"><name pos:start="103:23" pos:end="103:25">ioc</name></expr></argument>, <argument pos:start="103:28" pos:end="103:39"><expr pos:start="103:28" pos:end="103:39"><operator pos:start="103:28" pos:end="103:28">&amp;</operator><name pos:start="103:29" pos:end="103:39">globalflags</name></expr></argument>, <argument pos:start="103:42" pos:end="103:60"><expr pos:start="103:42" pos:end="103:60"><sizeof pos:start="103:42" pos:end="103:60">sizeof<argument_list pos:start="103:48" pos:end="103:60">(<argument pos:start="103:49" pos:end="103:59"><expr pos:start="103:49" pos:end="103:59"><name pos:start="103:49" pos:end="103:59">globalflags</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="103:63" pos:end="103:64">!=</operator>

            <sizeof pos:start="105:13" pos:end="105:31">sizeof<argument_list pos:start="105:19" pos:end="105:31">(<argument pos:start="105:20" pos:end="105:30"><expr pos:start="105:20" pos:end="105:30"><name pos:start="105:20" pos:end="105:30">globalflags</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="105:34" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:22">

            <expr_stmt pos:start="107:13" pos:end="107:60"><expr pos:start="107:13" pos:end="107:59"><call pos:start="107:13" pos:end="107:59"><name pos:start="107:13" pos:end="107:22">error_setg</name><argument_list pos:start="107:23" pos:end="107:59">(<argument pos:start="107:24" pos:end="107:27"><expr pos:start="107:24" pos:end="107:27"><name pos:start="107:24" pos:end="107:27">errp</name></expr></argument>, <argument pos:start="107:30" pos:end="107:58"><expr pos:start="107:30" pos:end="107:58"><literal type="string" pos:start="107:30" pos:end="107:58">"Failed to read server flags"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="109:13" pos:end="109:22">goto <name pos:start="109:18" pos:end="109:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:48"><expr pos:start="113:9" pos:end="113:47"><operator pos:start="113:9" pos:end="113:9">*</operator><name pos:start="113:10" pos:end="113:14">flags</name> <operator pos:start="113:16" pos:end="113:16">=</operator> <call pos:start="113:18" pos:end="113:41"><name pos:start="113:18" pos:end="113:28">be16_to_cpu</name><argument_list pos:start="113:29" pos:end="113:41">(<argument pos:start="113:30" pos:end="113:40"><expr pos:start="113:30" pos:end="113:40"><name pos:start="113:30" pos:end="113:40">globalflags</name></expr></argument>)</argument_list></call> <operator pos:start="113:43" pos:end="113:44">&lt;&lt;</operator> <literal type="number" pos:start="113:46" pos:end="113:47">16</literal></expr>;</expr_stmt>

        <if_stmt pos:start="115:9" pos:end="121:9"><if pos:start="115:9" pos:end="121:9">if <condition pos:start="115:12" pos:end="115:50">(<expr pos:start="115:13" pos:end="115:49"><name pos:start="115:13" pos:end="115:23">globalflags</name> <operator pos:start="115:25" pos:end="115:25">&amp;</operator> <name pos:start="115:27" pos:end="115:49">NBD_FLAG_FIXED_NEWSTYLE</name></expr>)</condition> <block pos:start="115:52" pos:end="121:9">{<block_content pos:start="117:13" pos:end="119:53">

            <expr_stmt pos:start="117:13" pos:end="117:53"><expr pos:start="117:13" pos:end="117:52"><call pos:start="117:13" pos:end="117:52"><name pos:start="117:13" pos:end="117:17">TRACE</name><argument_list pos:start="117:18" pos:end="117:52">(<argument pos:start="117:19" pos:end="117:51"><expr pos:start="117:19" pos:end="117:51"><literal type="string" pos:start="117:19" pos:end="117:51">"Server supports fixed new style"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:53"><expr pos:start="119:13" pos:end="119:52"><name pos:start="119:13" pos:end="119:23">clientflags</name> <operator pos:start="119:25" pos:end="119:26">|=</operator> <name pos:start="119:28" pos:end="119:52">NBD_FLAG_C_FIXED_NEWSTYLE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="123:9" pos:end="123:36">/* client requested flags */</comment>

        <if_stmt pos:start="125:9" pos:end="133:9"><if pos:start="125:9" pos:end="133:9">if <condition pos:start="125:12" pos:end="127:32">(<expr pos:start="125:13" pos:end="127:31"><call pos:start="125:13" pos:end="125:62"><name pos:start="125:13" pos:end="125:22">write_sync</name><argument_list pos:start="125:23" pos:end="125:62">(<argument pos:start="125:24" pos:end="125:26"><expr pos:start="125:24" pos:end="125:26"><name pos:start="125:24" pos:end="125:26">ioc</name></expr></argument>, <argument pos:start="125:29" pos:end="125:40"><expr pos:start="125:29" pos:end="125:40"><operator pos:start="125:29" pos:end="125:29">&amp;</operator><name pos:start="125:30" pos:end="125:40">clientflags</name></expr></argument>, <argument pos:start="125:43" pos:end="125:61"><expr pos:start="125:43" pos:end="125:61"><sizeof pos:start="125:43" pos:end="125:61">sizeof<argument_list pos:start="125:49" pos:end="125:61">(<argument pos:start="125:50" pos:end="125:60"><expr pos:start="125:50" pos:end="125:60"><name pos:start="125:50" pos:end="125:60">clientflags</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="125:64" pos:end="125:65">!=</operator>

            <sizeof pos:start="127:13" pos:end="127:31">sizeof<argument_list pos:start="127:19" pos:end="127:31">(<argument pos:start="127:20" pos:end="127:30"><expr pos:start="127:20" pos:end="127:30"><name pos:start="127:20" pos:end="127:30">clientflags</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="127:34" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:22">

            <expr_stmt pos:start="129:13" pos:end="129:65"><expr pos:start="129:13" pos:end="129:64"><call pos:start="129:13" pos:end="129:64"><name pos:start="129:13" pos:end="129:22">error_setg</name><argument_list pos:start="129:23" pos:end="129:64">(<argument pos:start="129:24" pos:end="129:27"><expr pos:start="129:24" pos:end="129:27"><name pos:start="129:24" pos:end="129:27">errp</name></expr></argument>, <argument pos:start="129:30" pos:end="129:63"><expr pos:start="129:30" pos:end="129:63"><literal type="string" pos:start="129:30" pos:end="129:63">"Failed to send clientflags field"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="131:13" pos:end="131:22">goto <name pos:start="131:18" pos:end="131:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="135:9" pos:end="135:35">/* write the export name */</comment>

        <if_stmt pos:start="137:9" pos:end="143:9"><if pos:start="137:9" pos:end="143:9">if <condition pos:start="137:12" pos:end="137:18">(<expr pos:start="137:13" pos:end="137:17"><operator pos:start="137:13" pos:end="137:13">!</operator><name pos:start="137:14" pos:end="137:17">name</name></expr>)</condition> <block pos:start="137:20" pos:end="143:9">{<block_content pos:start="139:13" pos:end="141:22">

            <expr_stmt pos:start="139:13" pos:end="139:63"><expr pos:start="139:13" pos:end="139:62"><call pos:start="139:13" pos:end="139:62"><name pos:start="139:13" pos:end="139:22">error_setg</name><argument_list pos:start="139:23" pos:end="139:62">(<argument pos:start="139:24" pos:end="139:27"><expr pos:start="139:24" pos:end="139:27"><name pos:start="139:24" pos:end="139:27">errp</name></expr></argument>, <argument pos:start="139:30" pos:end="139:61"><expr pos:start="139:30" pos:end="139:61"><literal type="string" pos:start="139:30" pos:end="139:61">"Server requires an export name"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="141:13" pos:end="141:22">goto <name pos:start="141:18" pos:end="141:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:35"><expr pos:start="145:9" pos:end="145:34"><name pos:start="145:9" pos:end="145:13">magic</name> <operator pos:start="145:15" pos:end="145:15">=</operator> <call pos:start="145:17" pos:end="145:34"><name pos:start="145:17" pos:end="145:27">cpu_to_be64</name><argument_list pos:start="145:28" pos:end="145:34">(<argument pos:start="145:29" pos:end="145:33"><expr pos:start="145:29" pos:end="145:33"><name pos:start="145:29" pos:end="145:33">magic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="153:9"><if pos:start="147:9" pos:end="153:9">if <condition pos:start="147:12" pos:end="147:68">(<expr pos:start="147:13" pos:end="147:67"><call pos:start="147:13" pos:end="147:50"><name pos:start="147:13" pos:end="147:22">write_sync</name><argument_list pos:start="147:23" pos:end="147:50">(<argument pos:start="147:24" pos:end="147:26"><expr pos:start="147:24" pos:end="147:26"><name pos:start="147:24" pos:end="147:26">ioc</name></expr></argument>, <argument pos:start="147:29" pos:end="147:34"><expr pos:start="147:29" pos:end="147:34"><operator pos:start="147:29" pos:end="147:29">&amp;</operator><name pos:start="147:30" pos:end="147:34">magic</name></expr></argument>, <argument pos:start="147:37" pos:end="147:49"><expr pos:start="147:37" pos:end="147:49"><sizeof pos:start="147:37" pos:end="147:49">sizeof<argument_list pos:start="147:43" pos:end="147:49">(<argument pos:start="147:44" pos:end="147:48"><expr pos:start="147:44" pos:end="147:48"><name pos:start="147:44" pos:end="147:48">magic</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="147:52" pos:end="147:53">!=</operator> <sizeof pos:start="147:55" pos:end="147:67">sizeof<argument_list pos:start="147:61" pos:end="147:67">(<argument pos:start="147:62" pos:end="147:66"><expr pos:start="147:62" pos:end="147:66"><name pos:start="147:62" pos:end="147:66">magic</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="147:70" pos:end="153:9">{<block_content pos:start="149:13" pos:end="151:22">

            <expr_stmt pos:start="149:13" pos:end="149:65"><expr pos:start="149:13" pos:end="149:64"><call pos:start="149:13" pos:end="149:64"><name pos:start="149:13" pos:end="149:22">error_setg</name><argument_list pos:start="149:23" pos:end="149:64">(<argument pos:start="149:24" pos:end="149:27"><expr pos:start="149:24" pos:end="149:27"><name pos:start="149:24" pos:end="149:27">errp</name></expr></argument>, <argument pos:start="149:30" pos:end="149:63"><expr pos:start="149:30" pos:end="149:63"><literal type="string" pos:start="149:30" pos:end="149:63">"Failed to send export name magic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="151:13" pos:end="151:22">goto <name pos:start="151:18" pos:end="151:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:47"><expr pos:start="155:9" pos:end="155:46"><name pos:start="155:9" pos:end="155:11">opt</name> <operator pos:start="155:13" pos:end="155:13">=</operator> <call pos:start="155:15" pos:end="155:46"><name pos:start="155:15" pos:end="155:25">cpu_to_be32</name><argument_list pos:start="155:26" pos:end="155:46">(<argument pos:start="155:27" pos:end="155:45"><expr pos:start="155:27" pos:end="155:45"><name pos:start="155:27" pos:end="155:45">NBD_OPT_EXPORT_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="163:9"><if pos:start="157:9" pos:end="163:9">if <condition pos:start="157:12" pos:end="157:62">(<expr pos:start="157:13" pos:end="157:61"><call pos:start="157:13" pos:end="157:46"><name pos:start="157:13" pos:end="157:22">write_sync</name><argument_list pos:start="157:23" pos:end="157:46">(<argument pos:start="157:24" pos:end="157:26"><expr pos:start="157:24" pos:end="157:26"><name pos:start="157:24" pos:end="157:26">ioc</name></expr></argument>, <argument pos:start="157:29" pos:end="157:32"><expr pos:start="157:29" pos:end="157:32"><operator pos:start="157:29" pos:end="157:29">&amp;</operator><name pos:start="157:30" pos:end="157:32">opt</name></expr></argument>, <argument pos:start="157:35" pos:end="157:45"><expr pos:start="157:35" pos:end="157:45"><sizeof pos:start="157:35" pos:end="157:45">sizeof<argument_list pos:start="157:41" pos:end="157:45">(<argument pos:start="157:42" pos:end="157:44"><expr pos:start="157:42" pos:end="157:44"><name pos:start="157:42" pos:end="157:44">opt</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="157:48" pos:end="157:49">!=</operator> <sizeof pos:start="157:51" pos:end="157:61">sizeof<argument_list pos:start="157:57" pos:end="157:61">(<argument pos:start="157:58" pos:end="157:60"><expr pos:start="157:58" pos:end="157:60"><name pos:start="157:58" pos:end="157:60">opt</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="157:64" pos:end="163:9">{<block_content pos:start="159:13" pos:end="161:22">

            <expr_stmt pos:start="159:13" pos:end="159:73"><expr pos:start="159:13" pos:end="159:72"><call pos:start="159:13" pos:end="159:72"><name pos:start="159:13" pos:end="159:22">error_setg</name><argument_list pos:start="159:23" pos:end="159:72">(<argument pos:start="159:24" pos:end="159:27"><expr pos:start="159:24" pos:end="159:27"><name pos:start="159:24" pos:end="159:27">errp</name></expr></argument>, <argument pos:start="159:30" pos:end="159:71"><expr pos:start="159:30" pos:end="159:71"><literal type="string" pos:start="159:30" pos:end="159:71">"Failed to send export name option number"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="161:13" pos:end="161:22">goto <name pos:start="161:18" pos:end="161:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:45"><expr pos:start="165:9" pos:end="165:44"><name pos:start="165:9" pos:end="165:16">namesize</name> <operator pos:start="165:18" pos:end="165:18">=</operator> <call pos:start="165:20" pos:end="165:44"><name pos:start="165:20" pos:end="165:30">cpu_to_be32</name><argument_list pos:start="165:31" pos:end="165:44">(<argument pos:start="165:32" pos:end="165:43"><expr pos:start="165:32" pos:end="165:43"><call pos:start="165:32" pos:end="165:43"><name pos:start="165:32" pos:end="165:37">strlen</name><argument_list pos:start="165:38" pos:end="165:43">(<argument pos:start="165:39" pos:end="165:42"><expr pos:start="165:39" pos:end="165:42"><name pos:start="165:39" pos:end="165:42">name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="167:9" pos:end="175:9"><if pos:start="167:9" pos:end="175:9">if <condition pos:start="167:12" pos:end="169:29">(<expr pos:start="167:13" pos:end="169:28"><call pos:start="167:13" pos:end="167:56"><name pos:start="167:13" pos:end="167:22">write_sync</name><argument_list pos:start="167:23" pos:end="167:56">(<argument pos:start="167:24" pos:end="167:26"><expr pos:start="167:24" pos:end="167:26"><name pos:start="167:24" pos:end="167:26">ioc</name></expr></argument>, <argument pos:start="167:29" pos:end="167:37"><expr pos:start="167:29" pos:end="167:37"><operator pos:start="167:29" pos:end="167:29">&amp;</operator><name pos:start="167:30" pos:end="167:37">namesize</name></expr></argument>, <argument pos:start="167:40" pos:end="167:55"><expr pos:start="167:40" pos:end="167:55"><sizeof pos:start="167:40" pos:end="167:55">sizeof<argument_list pos:start="167:46" pos:end="167:55">(<argument pos:start="167:47" pos:end="167:54"><expr pos:start="167:47" pos:end="167:54"><name pos:start="167:47" pos:end="167:54">namesize</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="167:58" pos:end="167:59">!=</operator>

            <sizeof pos:start="169:13" pos:end="169:28">sizeof<argument_list pos:start="169:19" pos:end="169:28">(<argument pos:start="169:20" pos:end="169:27"><expr pos:start="169:20" pos:end="169:27"><name pos:start="169:20" pos:end="169:27">namesize</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="169:31" pos:end="175:9">{<block_content pos:start="171:13" pos:end="173:22">

            <expr_stmt pos:start="171:13" pos:end="171:66"><expr pos:start="171:13" pos:end="171:65"><call pos:start="171:13" pos:end="171:65"><name pos:start="171:13" pos:end="171:22">error_setg</name><argument_list pos:start="171:23" pos:end="171:65">(<argument pos:start="171:24" pos:end="171:27"><expr pos:start="171:24" pos:end="171:27"><name pos:start="171:24" pos:end="171:27">errp</name></expr></argument>, <argument pos:start="171:30" pos:end="171:64"><expr pos:start="171:30" pos:end="171:64"><literal type="string" pos:start="171:30" pos:end="171:64">"Failed to send export name length"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="173:13" pos:end="173:22">goto <name pos:start="173:18" pos:end="173:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="177:9" pos:end="183:9"><if pos:start="177:9" pos:end="183:9">if <condition pos:start="177:12" pos:end="177:72">(<expr pos:start="177:13" pos:end="177:71"><call pos:start="177:13" pos:end="177:55"><name pos:start="177:13" pos:end="177:22">write_sync</name><argument_list pos:start="177:23" pos:end="177:55">(<argument pos:start="177:24" pos:end="177:26"><expr pos:start="177:24" pos:end="177:26"><name pos:start="177:24" pos:end="177:26">ioc</name></expr></argument>, <argument pos:start="177:29" pos:end="177:40"><expr pos:start="177:29" pos:end="177:40"><operator pos:start="177:29" pos:end="177:29">(</operator><name pos:start="177:30" pos:end="177:33">char</name> <operator pos:start="177:35" pos:end="177:35">*</operator><operator pos:start="177:36" pos:end="177:36">)</operator><name pos:start="177:37" pos:end="177:40">name</name></expr></argument>, <argument pos:start="177:43" pos:end="177:54"><expr pos:start="177:43" pos:end="177:54"><call pos:start="177:43" pos:end="177:54"><name pos:start="177:43" pos:end="177:48">strlen</name><argument_list pos:start="177:49" pos:end="177:54">(<argument pos:start="177:50" pos:end="177:53"><expr pos:start="177:50" pos:end="177:53"><name pos:start="177:50" pos:end="177:53">name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="177:57" pos:end="177:58">!=</operator> <call pos:start="177:60" pos:end="177:71"><name pos:start="177:60" pos:end="177:65">strlen</name><argument_list pos:start="177:66" pos:end="177:71">(<argument pos:start="177:67" pos:end="177:70"><expr pos:start="177:67" pos:end="177:70"><name pos:start="177:67" pos:end="177:70">name</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="177:74" pos:end="183:9">{<block_content pos:start="179:13" pos:end="181:22">

            <expr_stmt pos:start="179:13" pos:end="179:59"><expr pos:start="179:13" pos:end="179:58"><call pos:start="179:13" pos:end="179:58"><name pos:start="179:13" pos:end="179:22">error_setg</name><argument_list pos:start="179:23" pos:end="179:58">(<argument pos:start="179:24" pos:end="179:27"><expr pos:start="179:24" pos:end="179:27"><name pos:start="179:24" pos:end="179:27">errp</name></expr></argument>, <argument pos:start="179:30" pos:end="179:57"><expr pos:start="179:30" pos:end="179:57"><literal type="string" pos:start="179:30" pos:end="179:57">"Failed to send export name"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="181:13" pos:end="181:22">goto <name pos:start="181:18" pos:end="181:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="187:9" pos:end="193:9"><if pos:start="187:9" pos:end="193:9">if <condition pos:start="187:12" pos:end="187:55">(<expr pos:start="187:13" pos:end="187:54"><call pos:start="187:13" pos:end="187:41"><name pos:start="187:13" pos:end="187:21">read_sync</name><argument_list pos:start="187:22" pos:end="187:41">(<argument pos:start="187:23" pos:end="187:25"><expr pos:start="187:23" pos:end="187:25"><name pos:start="187:23" pos:end="187:25">ioc</name></expr></argument>, <argument pos:start="187:28" pos:end="187:29"><expr pos:start="187:28" pos:end="187:29"><operator pos:start="187:28" pos:end="187:28">&amp;</operator><name pos:start="187:29" pos:end="187:29">s</name></expr></argument>, <argument pos:start="187:32" pos:end="187:40"><expr pos:start="187:32" pos:end="187:40"><sizeof pos:start="187:32" pos:end="187:40">sizeof<argument_list pos:start="187:38" pos:end="187:40">(<argument pos:start="187:39" pos:end="187:39"><expr pos:start="187:39" pos:end="187:39"><name pos:start="187:39" pos:end="187:39">s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="187:43" pos:end="187:44">!=</operator> <sizeof pos:start="187:46" pos:end="187:54">sizeof<argument_list pos:start="187:52" pos:end="187:54">(<argument pos:start="187:53" pos:end="187:53"><expr pos:start="187:53" pos:end="187:53"><name pos:start="187:53" pos:end="187:53">s</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="187:57" pos:end="193:9">{<block_content pos:start="189:13" pos:end="191:22">

            <expr_stmt pos:start="189:13" pos:end="189:61"><expr pos:start="189:13" pos:end="189:60"><call pos:start="189:13" pos:end="189:60"><name pos:start="189:13" pos:end="189:22">error_setg</name><argument_list pos:start="189:23" pos:end="189:60">(<argument pos:start="189:24" pos:end="189:27"><expr pos:start="189:24" pos:end="189:27"><name pos:start="189:24" pos:end="189:27">errp</name></expr></argument>, <argument pos:start="189:30" pos:end="189:59"><expr pos:start="189:30" pos:end="189:59"><literal type="string" pos:start="189:30" pos:end="189:59">"Failed to read export length"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="191:13" pos:end="191:22">goto <name pos:start="191:18" pos:end="191:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:31"><expr pos:start="195:9" pos:end="195:30"><operator pos:start="195:9" pos:end="195:9">*</operator><name pos:start="195:10" pos:end="195:13">size</name> <operator pos:start="195:15" pos:end="195:15">=</operator> <call pos:start="195:17" pos:end="195:30"><name pos:start="195:17" pos:end="195:27">be64_to_cpu</name><argument_list pos:start="195:28" pos:end="195:30">(<argument pos:start="195:29" pos:end="195:29"><expr pos:start="195:29" pos:end="195:29"><name pos:start="195:29" pos:end="195:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:41"><expr pos:start="197:9" pos:end="197:40"><call pos:start="197:9" pos:end="197:40"><name pos:start="197:9" pos:end="197:13">TRACE</name><argument_list pos:start="197:14" pos:end="197:40">(<argument pos:start="197:15" pos:end="197:32"><expr pos:start="197:15" pos:end="197:32"><literal type="string" pos:start="197:15" pos:end="197:25">"Size is %"</literal> <name pos:start="197:27" pos:end="197:32">PRIu64</name></expr></argument>, <argument pos:start="197:35" pos:end="197:39"><expr pos:start="197:35" pos:end="197:39"><operator pos:start="197:35" pos:end="197:35">*</operator><name pos:start="197:36" pos:end="197:39">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="201:9" pos:end="209:9"><if pos:start="201:9" pos:end="209:9">if <condition pos:start="201:12" pos:end="203:32">(<expr pos:start="201:13" pos:end="203:31"><call pos:start="201:13" pos:end="201:61"><name pos:start="201:13" pos:end="201:21">read_sync</name><argument_list pos:start="201:22" pos:end="201:61">(<argument pos:start="201:23" pos:end="201:25"><expr pos:start="201:23" pos:end="201:25"><name pos:start="201:23" pos:end="201:25">ioc</name></expr></argument>, <argument pos:start="201:28" pos:end="201:39"><expr pos:start="201:28" pos:end="201:39"><operator pos:start="201:28" pos:end="201:28">&amp;</operator><name pos:start="201:29" pos:end="201:39">exportflags</name></expr></argument>, <argument pos:start="201:42" pos:end="201:60"><expr pos:start="201:42" pos:end="201:60"><sizeof pos:start="201:42" pos:end="201:60">sizeof<argument_list pos:start="201:48" pos:end="201:60">(<argument pos:start="201:49" pos:end="201:59"><expr pos:start="201:49" pos:end="201:59"><name pos:start="201:49" pos:end="201:59">exportflags</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="201:63" pos:end="201:64">!=</operator>

            <sizeof pos:start="203:13" pos:end="203:31">sizeof<argument_list pos:start="203:19" pos:end="203:31">(<argument pos:start="203:20" pos:end="203:30"><expr pos:start="203:20" pos:end="203:30"><name pos:start="203:20" pos:end="203:30">exportflags</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="203:34" pos:end="209:9">{<block_content pos:start="205:13" pos:end="207:22">

            <expr_stmt pos:start="205:13" pos:end="205:60"><expr pos:start="205:13" pos:end="205:59"><call pos:start="205:13" pos:end="205:59"><name pos:start="205:13" pos:end="205:22">error_setg</name><argument_list pos:start="205:23" pos:end="205:59">(<argument pos:start="205:24" pos:end="205:27"><expr pos:start="205:24" pos:end="205:27"><name pos:start="205:24" pos:end="205:27">errp</name></expr></argument>, <argument pos:start="205:30" pos:end="205:58"><expr pos:start="205:30" pos:end="205:58"><literal type="string" pos:start="205:30" pos:end="205:58">"Failed to read export flags"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="207:13" pos:end="207:22">goto <name pos:start="207:18" pos:end="207:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:43"><expr pos:start="211:9" pos:end="211:42"><operator pos:start="211:9" pos:end="211:9">*</operator><name pos:start="211:10" pos:end="211:14">flags</name> <operator pos:start="211:16" pos:end="211:17">|=</operator> <call pos:start="211:19" pos:end="211:42"><name pos:start="211:19" pos:end="211:29">be16_to_cpu</name><argument_list pos:start="211:30" pos:end="211:42">(<argument pos:start="211:31" pos:end="211:41"><expr pos:start="211:31" pos:end="211:41"><name pos:start="211:31" pos:end="211:41">exportflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="213:7" pos:end="249:5">else if <condition pos:start="213:15" pos:end="213:41">(<expr pos:start="213:16" pos:end="213:40"><name pos:start="213:16" pos:end="213:20">magic</name> <operator pos:start="213:22" pos:end="213:23">==</operator> <name pos:start="213:25" pos:end="213:40">NBD_CLIENT_MAGIC</name></expr>)</condition> <block pos:start="213:43" pos:end="249:5">{<block_content pos:start="215:9" pos:end="247:37">

        <if_stmt pos:start="215:9" pos:end="221:9"><if pos:start="215:9" pos:end="221:9">if <condition pos:start="215:12" pos:end="215:17">(<expr pos:start="215:13" pos:end="215:16"><name pos:start="215:13" pos:end="215:16">name</name></expr>)</condition> <block pos:start="215:19" pos:end="221:9">{<block_content pos:start="217:13" pos:end="219:22">

            <expr_stmt pos:start="217:13" pos:end="217:69"><expr pos:start="217:13" pos:end="217:68"><call pos:start="217:13" pos:end="217:68"><name pos:start="217:13" pos:end="217:22">error_setg</name><argument_list pos:start="217:23" pos:end="217:68">(<argument pos:start="217:24" pos:end="217:27"><expr pos:start="217:24" pos:end="217:27"><name pos:start="217:24" pos:end="217:27">errp</name></expr></argument>, <argument pos:start="217:30" pos:end="217:67"><expr pos:start="217:30" pos:end="217:67"><literal type="string" pos:start="217:30" pos:end="217:67">"Server does not support export names"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="219:13" pos:end="219:22">goto <name pos:start="219:18" pos:end="219:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="225:9" pos:end="231:9"><if pos:start="225:9" pos:end="231:9">if <condition pos:start="225:12" pos:end="225:55">(<expr pos:start="225:13" pos:end="225:54"><call pos:start="225:13" pos:end="225:41"><name pos:start="225:13" pos:end="225:21">read_sync</name><argument_list pos:start="225:22" pos:end="225:41">(<argument pos:start="225:23" pos:end="225:25"><expr pos:start="225:23" pos:end="225:25"><name pos:start="225:23" pos:end="225:25">ioc</name></expr></argument>, <argument pos:start="225:28" pos:end="225:29"><expr pos:start="225:28" pos:end="225:29"><operator pos:start="225:28" pos:end="225:28">&amp;</operator><name pos:start="225:29" pos:end="225:29">s</name></expr></argument>, <argument pos:start="225:32" pos:end="225:40"><expr pos:start="225:32" pos:end="225:40"><sizeof pos:start="225:32" pos:end="225:40">sizeof<argument_list pos:start="225:38" pos:end="225:40">(<argument pos:start="225:39" pos:end="225:39"><expr pos:start="225:39" pos:end="225:39"><name pos:start="225:39" pos:end="225:39">s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="225:43" pos:end="225:44">!=</operator> <sizeof pos:start="225:46" pos:end="225:54">sizeof<argument_list pos:start="225:52" pos:end="225:54">(<argument pos:start="225:53" pos:end="225:53"><expr pos:start="225:53" pos:end="225:53"><name pos:start="225:53" pos:end="225:53">s</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="225:57" pos:end="231:9">{<block_content pos:start="227:13" pos:end="229:22">

            <expr_stmt pos:start="227:13" pos:end="227:61"><expr pos:start="227:13" pos:end="227:60"><call pos:start="227:13" pos:end="227:60"><name pos:start="227:13" pos:end="227:22">error_setg</name><argument_list pos:start="227:23" pos:end="227:60">(<argument pos:start="227:24" pos:end="227:27"><expr pos:start="227:24" pos:end="227:27"><name pos:start="227:24" pos:end="227:27">errp</name></expr></argument>, <argument pos:start="227:30" pos:end="227:59"><expr pos:start="227:30" pos:end="227:59"><literal type="string" pos:start="227:30" pos:end="227:59">"Failed to read export length"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="229:13" pos:end="229:22">goto <name pos:start="229:18" pos:end="229:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:31"><expr pos:start="233:9" pos:end="233:30"><operator pos:start="233:9" pos:end="233:9">*</operator><name pos:start="233:10" pos:end="233:13">size</name> <operator pos:start="233:15" pos:end="233:15">=</operator> <call pos:start="233:17" pos:end="233:30"><name pos:start="233:17" pos:end="233:27">be64_to_cpu</name><argument_list pos:start="233:28" pos:end="233:30">(<argument pos:start="233:29" pos:end="233:29"><expr pos:start="233:29" pos:end="233:29"><name pos:start="233:29" pos:end="233:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:41"><expr pos:start="235:9" pos:end="235:40"><call pos:start="235:9" pos:end="235:40"><name pos:start="235:9" pos:end="235:13">TRACE</name><argument_list pos:start="235:14" pos:end="235:40">(<argument pos:start="235:15" pos:end="235:32"><expr pos:start="235:15" pos:end="235:32"><literal type="string" pos:start="235:15" pos:end="235:25">"Size is %"</literal> <name pos:start="235:27" pos:end="235:32">PRIu64</name></expr></argument>, <argument pos:start="235:35" pos:end="235:39"><expr pos:start="235:35" pos:end="235:39"><operator pos:start="235:35" pos:end="235:35">*</operator><name pos:start="235:36" pos:end="235:39">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="239:9" pos:end="245:9"><if pos:start="239:9" pos:end="245:9">if <condition pos:start="239:12" pos:end="239:68">(<expr pos:start="239:13" pos:end="239:67"><call pos:start="239:13" pos:end="239:49"><name pos:start="239:13" pos:end="239:21">read_sync</name><argument_list pos:start="239:22" pos:end="239:49">(<argument pos:start="239:23" pos:end="239:25"><expr pos:start="239:23" pos:end="239:25"><name pos:start="239:23" pos:end="239:25">ioc</name></expr></argument>, <argument pos:start="239:28" pos:end="239:32"><expr pos:start="239:28" pos:end="239:32"><name pos:start="239:28" pos:end="239:32">flags</name></expr></argument>, <argument pos:start="239:35" pos:end="239:48"><expr pos:start="239:35" pos:end="239:48"><sizeof pos:start="239:35" pos:end="239:48">sizeof<argument_list pos:start="239:41" pos:end="239:48">(<argument pos:start="239:42" pos:end="239:47"><expr pos:start="239:42" pos:end="239:47"><operator pos:start="239:42" pos:end="239:42">*</operator><name pos:start="239:43" pos:end="239:47">flags</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="239:51" pos:end="239:52">!=</operator> <sizeof pos:start="239:54" pos:end="239:67">sizeof<argument_list pos:start="239:60" pos:end="239:67">(<argument pos:start="239:61" pos:end="239:66"><expr pos:start="239:61" pos:end="239:66"><operator pos:start="239:61" pos:end="239:61">*</operator><name pos:start="239:62" pos:end="239:66">flags</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="239:70" pos:end="245:9">{<block_content pos:start="241:13" pos:end="243:22">

            <expr_stmt pos:start="241:13" pos:end="241:60"><expr pos:start="241:13" pos:end="241:59"><call pos:start="241:13" pos:end="241:59"><name pos:start="241:13" pos:end="241:22">error_setg</name><argument_list pos:start="241:23" pos:end="241:59">(<argument pos:start="241:24" pos:end="241:27"><expr pos:start="241:24" pos:end="241:27"><name pos:start="241:24" pos:end="241:27">errp</name></expr></argument>, <argument pos:start="241:30" pos:end="241:58"><expr pos:start="241:30" pos:end="241:58"><literal type="string" pos:start="241:30" pos:end="241:58">"Failed to read export flags"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="243:13" pos:end="243:22">goto <name pos:start="243:18" pos:end="243:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:37"><expr pos:start="247:9" pos:end="247:36"><operator pos:start="247:9" pos:end="247:9">*</operator><name pos:start="247:10" pos:end="247:14">flags</name> <operator pos:start="247:16" pos:end="247:16">=</operator> <call pos:start="247:18" pos:end="247:36"><name pos:start="247:18" pos:end="247:29">be32_to_cpup</name><argument_list pos:start="247:30" pos:end="247:36">(<argument pos:start="247:31" pos:end="247:35"><expr pos:start="247:31" pos:end="247:35"><name pos:start="247:31" pos:end="247:35">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="249:7" pos:end="255:5">else <block pos:start="249:12" pos:end="255:5">{<block_content pos:start="251:9" pos:end="253:18">

        <expr_stmt pos:start="251:9" pos:end="251:47"><expr pos:start="251:9" pos:end="251:46"><call pos:start="251:9" pos:end="251:46"><name pos:start="251:9" pos:end="251:18">error_setg</name><argument_list pos:start="251:19" pos:end="251:46">(<argument pos:start="251:20" pos:end="251:23"><expr pos:start="251:20" pos:end="251:23"><name pos:start="251:20" pos:end="251:23">errp</name></expr></argument>, <argument pos:start="251:26" pos:end="251:45"><expr pos:start="251:26" pos:end="251:45"><literal type="string" pos:start="251:26" pos:end="251:45">"Bad magic received"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="253:9" pos:end="253:18">goto <name pos:start="253:14" pos:end="253:17">fail</name>;</goto>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="259:5" pos:end="265:5"><if pos:start="259:5" pos:end="265:5">if <condition pos:start="259:8" pos:end="259:41">(<expr pos:start="259:9" pos:end="259:40"><call pos:start="259:9" pos:end="259:33"><name pos:start="259:9" pos:end="259:17">read_sync</name><argument_list pos:start="259:18" pos:end="259:33">(<argument pos:start="259:19" pos:end="259:21"><expr pos:start="259:19" pos:end="259:21"><name pos:start="259:19" pos:end="259:21">ioc</name></expr></argument>, <argument pos:start="259:24" pos:end="259:27"><expr pos:start="259:24" pos:end="259:27"><operator pos:start="259:24" pos:end="259:24">&amp;</operator><name pos:start="259:25" pos:end="259:27">buf</name></expr></argument>, <argument pos:start="259:30" pos:end="259:32"><expr pos:start="259:30" pos:end="259:32"><literal type="number" pos:start="259:30" pos:end="259:32">124</literal></expr></argument>)</argument_list></call> <operator pos:start="259:35" pos:end="259:36">!=</operator> <literal type="number" pos:start="259:38" pos:end="259:40">124</literal></expr>)</condition> <block pos:start="259:43" pos:end="265:5">{<block_content pos:start="261:9" pos:end="263:18">

        <expr_stmt pos:start="261:9" pos:end="261:58"><expr pos:start="261:9" pos:end="261:57"><call pos:start="261:9" pos:end="261:57"><name pos:start="261:9" pos:end="261:18">error_setg</name><argument_list pos:start="261:19" pos:end="261:57">(<argument pos:start="261:20" pos:end="261:23"><expr pos:start="261:20" pos:end="261:23"><name pos:start="261:20" pos:end="261:23">errp</name></expr></argument>, <argument pos:start="261:26" pos:end="261:56"><expr pos:start="261:26" pos:end="261:56"><literal type="string" pos:start="261:26" pos:end="261:56">"Failed to read reserved block"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="263:9" pos:end="263:18">goto <name pos:start="263:14" pos:end="263:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="267:5" pos:end="267:11"><expr pos:start="267:5" pos:end="267:10"><name pos:start="267:5" pos:end="267:6">rc</name> <operator pos:start="267:8" pos:end="267:8">=</operator> <literal type="number" pos:start="267:10" pos:end="267:10">0</literal></expr>;</expr_stmt>



<label pos:start="271:1" pos:end="271:5"><name pos:start="271:1" pos:end="271:4">fail</name>:</label>

    <return pos:start="273:5" pos:end="273:14">return <expr pos:start="273:12" pos:end="273:13"><name pos:start="273:12" pos:end="273:13">rc</name></expr>;</return>

</block_content>}</block></function>
</unit>
