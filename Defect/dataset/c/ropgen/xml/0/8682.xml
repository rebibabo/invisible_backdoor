<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8682.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">kvm_arch_init</name><parameter_list pos:start="1:18" pos:end="1:48">(<parameter pos:start="1:19" pos:end="1:34"><decl pos:start="1:19" pos:end="1:34"><type pos:start="1:19" pos:end="1:34"><name pos:start="1:19" pos:end="1:30">MachineState</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:34">ms</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:47"><decl pos:start="1:37" pos:end="1:47"><type pos:start="1:37" pos:end="1:47"><name pos:start="1:37" pos:end="1:44">KVMState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:13">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">MachineClass</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">mc</name> <init pos:start="5:22" pos:end="5:44">= <expr pos:start="5:24" pos:end="5:44"><call pos:start="5:24" pos:end="5:44"><name pos:start="5:24" pos:end="5:40">MACHINE_GET_CLASS</name><argument_list pos:start="5:41" pos:end="5:44">(<argument pos:start="5:42" pos:end="5:43"><expr pos:start="5:42" pos:end="5:43"><name pos:start="5:42" pos:end="5:43">ms</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:54"><expr pos:start="9:5" pos:end="9:53"><name pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:6">mc</name><operator pos:start="9:7" pos:end="9:8">-&gt;</operator><name pos:start="9:9" pos:end="9:24">default_cpu_type</name></name> <operator pos:start="9:26" pos:end="9:26">=</operator> <call pos:start="9:28" pos:end="9:53"><name pos:start="9:28" pos:end="9:45">S390_CPU_TYPE_NAME</name><argument_list pos:start="9:46" pos:end="9:53">(<argument pos:start="9:47" pos:end="9:52"><expr pos:start="9:47" pos:end="9:52"><literal type="string" pos:start="9:47" pos:end="9:52">"host"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:62"><expr pos:start="11:5" pos:end="11:61"><name pos:start="11:5" pos:end="11:17">cap_sync_regs</name> <operator pos:start="11:19" pos:end="11:19">=</operator> <call pos:start="11:21" pos:end="11:61"><name pos:start="11:21" pos:end="11:39">kvm_check_extension</name><argument_list pos:start="11:40" pos:end="11:61">(<argument pos:start="11:41" pos:end="11:41"><expr pos:start="11:41" pos:end="11:41"><name pos:start="11:41" pos:end="11:41">s</name></expr></argument>, <argument pos:start="11:44" pos:end="11:60"><expr pos:start="11:44" pos:end="11:60"><name pos:start="11:44" pos:end="11:60">KVM_CAP_SYNC_REGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:60"><expr pos:start="13:5" pos:end="13:59"><name pos:start="13:5" pos:end="13:16">cap_async_pf</name> <operator pos:start="13:18" pos:end="13:18">=</operator> <call pos:start="13:20" pos:end="13:59"><name pos:start="13:20" pos:end="13:38">kvm_check_extension</name><argument_list pos:start="13:39" pos:end="13:59">(<argument pos:start="13:40" pos:end="13:40"><expr pos:start="13:40" pos:end="13:40"><name pos:start="13:40" pos:end="13:40">s</name></expr></argument>, <argument pos:start="13:43" pos:end="13:58"><expr pos:start="13:43" pos:end="13:58"><name pos:start="13:43" pos:end="13:58">KVM_CAP_ASYNC_PF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:61"><expr pos:start="15:5" pos:end="15:60"><name pos:start="15:5" pos:end="15:14">cap_mem_op</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:60"><name pos:start="15:18" pos:end="15:36">kvm_check_extension</name><argument_list pos:start="15:37" pos:end="15:60">(<argument pos:start="15:38" pos:end="15:38"><expr pos:start="15:38" pos:end="15:38"><name pos:start="15:38" pos:end="15:38">s</name></expr></argument>, <argument pos:start="15:41" pos:end="15:59"><expr pos:start="15:41" pos:end="15:59"><name pos:start="15:41" pos:end="15:59">KVM_CAP_S390_MEM_OP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:67"><expr pos:start="17:5" pos:end="17:66"><name pos:start="17:5" pos:end="17:16">cap_s390_irq</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <call pos:start="17:20" pos:end="17:66"><name pos:start="17:20" pos:end="17:38">kvm_check_extension</name><argument_list pos:start="17:39" pos:end="17:66">(<argument pos:start="17:40" pos:end="17:40"><expr pos:start="17:40" pos:end="17:40"><name pos:start="17:40" pos:end="17:40">s</name></expr></argument>, <argument pos:start="17:43" pos:end="17:65"><expr pos:start="17:43" pos:end="17:65"><name pos:start="17:43" pos:end="17:65">KVM_CAP_S390_INJECT_IRQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="23:53">(<expr pos:start="21:9" pos:end="23:52"><operator pos:start="21:9" pos:end="21:9">!</operator><call pos:start="21:10" pos:end="21:50"><name pos:start="21:10" pos:end="21:28">kvm_check_extension</name><argument_list pos:start="21:29" pos:end="21:50">(<argument pos:start="21:30" pos:end="21:30"><expr pos:start="21:30" pos:end="21:30"><name pos:start="21:30" pos:end="21:30">s</name></expr></argument>, <argument pos:start="21:33" pos:end="21:49"><expr pos:start="21:33" pos:end="21:49"><name pos:start="21:33" pos:end="21:49">KVM_CAP_S390_GMAP</name></expr></argument>)</argument_list></call>

        <operator pos:start="23:9" pos:end="23:10">||</operator> <operator pos:start="23:12" pos:end="23:12">!</operator><call pos:start="23:13" pos:end="23:52"><name pos:start="23:13" pos:end="23:31">kvm_check_extension</name><argument_list pos:start="23:32" pos:end="23:52">(<argument pos:start="23:33" pos:end="23:33"><expr pos:start="23:33" pos:end="23:33"><name pos:start="23:33" pos:end="23:33">s</name></expr></argument>, <argument pos:start="23:36" pos:end="23:51"><expr pos:start="23:36" pos:end="23:51"><name pos:start="23:36" pos:end="23:51">KVM_CAP_S390_COW</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:55" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:46">

        <expr_stmt pos:start="25:9" pos:end="25:46"><expr pos:start="25:9" pos:end="25:45"><call pos:start="25:9" pos:end="25:45"><name pos:start="25:9" pos:end="25:26">phys_mem_set_alloc</name><argument_list pos:start="25:27" pos:end="25:45">(<argument pos:start="25:28" pos:end="25:44"><expr pos:start="25:28" pos:end="25:44"><name pos:start="25:28" pos:end="25:44">legacy_s390_alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:52"><expr pos:start="31:5" pos:end="31:51"><call pos:start="31:5" pos:end="31:51"><name pos:start="31:5" pos:end="31:21">kvm_vm_enable_cap</name><argument_list pos:start="31:22" pos:end="31:51">(<argument pos:start="31:23" pos:end="31:23"><expr pos:start="31:23" pos:end="31:23"><name pos:start="31:23" pos:end="31:23">s</name></expr></argument>, <argument pos:start="31:26" pos:end="31:47"><expr pos:start="31:26" pos:end="31:47"><name pos:start="31:26" pos:end="31:47">KVM_CAP_S390_USER_SIGP</name></expr></argument>, <argument pos:start="31:50" pos:end="31:50"><expr pos:start="31:50" pos:end="31:50"><literal type="number" pos:start="31:50" pos:end="31:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:59"><expr pos:start="33:5" pos:end="33:58"><call pos:start="33:5" pos:end="33:58"><name pos:start="33:5" pos:end="33:21">kvm_vm_enable_cap</name><argument_list pos:start="33:22" pos:end="33:58">(<argument pos:start="33:23" pos:end="33:23"><expr pos:start="33:23" pos:end="33:23"><name pos:start="33:23" pos:end="33:23">s</name></expr></argument>, <argument pos:start="33:26" pos:end="33:54"><expr pos:start="33:26" pos:end="33:54"><name pos:start="33:26" pos:end="33:54">KVM_CAP_S390_VECTOR_REGISTERS</name></expr></argument>, <argument pos:start="33:57" pos:end="33:57"><expr pos:start="33:57" pos:end="33:57"><literal type="number" pos:start="33:57" pos:end="33:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:52"><expr pos:start="35:5" pos:end="35:51"><call pos:start="35:5" pos:end="35:51"><name pos:start="35:5" pos:end="35:21">kvm_vm_enable_cap</name><argument_list pos:start="35:22" pos:end="35:51">(<argument pos:start="35:23" pos:end="35:23"><expr pos:start="35:23" pos:end="35:23"><name pos:start="35:23" pos:end="35:23">s</name></expr></argument>, <argument pos:start="35:26" pos:end="35:47"><expr pos:start="35:26" pos:end="35:47"><name pos:start="35:26" pos:end="35:47">KVM_CAP_S390_USER_STSI</name></expr></argument>, <argument pos:start="35:50" pos:end="35:50"><expr pos:start="35:50" pos:end="35:50"><literal type="number" pos:start="35:50" pos:end="35:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:21">(<expr pos:start="37:9" pos:end="37:20"><call pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:18">ri_allowed</name><argument_list pos:start="37:19" pos:end="37:20">()</argument_list></call></expr>)</condition> <block pos:start="37:23" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:9">

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:58">(<expr pos:start="39:13" pos:end="39:57"><call pos:start="39:13" pos:end="39:52"><name pos:start="39:13" pos:end="39:29">kvm_vm_enable_cap</name><argument_list pos:start="39:30" pos:end="39:52">(<argument pos:start="39:31" pos:end="39:31"><expr pos:start="39:31" pos:end="39:31"><name pos:start="39:31" pos:end="39:31">s</name></expr></argument>, <argument pos:start="39:34" pos:end="39:48"><expr pos:start="39:34" pos:end="39:48"><name pos:start="39:34" pos:end="39:48">KVM_CAP_S390_RI</name></expr></argument>, <argument pos:start="39:51" pos:end="39:51"><expr pos:start="39:51" pos:end="39:51"><literal type="number" pos:start="39:51" pos:end="39:51">0</literal></expr></argument>)</argument_list></call> <operator pos:start="39:54" pos:end="39:55">==</operator> <literal type="number" pos:start="39:57" pos:end="39:57">0</literal></expr>)</condition> <block pos:start="39:60" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:23">

            <expr_stmt pos:start="41:13" pos:end="41:23"><expr pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:18">cap_ri</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <literal type="number" pos:start="41:22" pos:end="41:22">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:21">(<expr pos:start="47:9" pos:end="47:20"><call pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:18">gs_allowed</name><argument_list pos:start="47:19" pos:end="47:20">()</argument_list></call></expr>)</condition> <block pos:start="47:23" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:9">

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:58">(<expr pos:start="49:13" pos:end="49:57"><call pos:start="49:13" pos:end="49:52"><name pos:start="49:13" pos:end="49:29">kvm_vm_enable_cap</name><argument_list pos:start="49:30" pos:end="49:52">(<argument pos:start="49:31" pos:end="49:31"><expr pos:start="49:31" pos:end="49:31"><name pos:start="49:31" pos:end="49:31">s</name></expr></argument>, <argument pos:start="49:34" pos:end="49:48"><expr pos:start="49:34" pos:end="49:48"><name pos:start="49:34" pos:end="49:48">KVM_CAP_S390_GS</name></expr></argument>, <argument pos:start="49:51" pos:end="49:51"><expr pos:start="49:51" pos:end="49:51"><literal type="number" pos:start="49:51" pos:end="49:51">0</literal></expr></argument>)</argument_list></call> <operator pos:start="49:54" pos:end="49:55">==</operator> <literal type="number" pos:start="49:57" pos:end="49:57">0</literal></expr>)</condition> <block pos:start="49:60" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:23">

            <expr_stmt pos:start="51:13" pos:end="51:23"><expr pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:18">cap_gs</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <literal type="number" pos:start="51:22" pos:end="51:22">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="59:5" pos:end="69:7">/*

     * The migration interface for ais was introduced with kernel 4.13

     * but the capability itself had been active since 4.12. As migration

     * support is considered necessary let's disable ais in the 2.10

     * machine.

     */</comment>

    <comment type="block" pos:start="71:5" pos:end="71:52">/* kvm_vm_enable_cap(s, KVM_CAP_S390_AIS, 0); */</comment>



    <expr_stmt pos:start="75:5" pos:end="75:38"><expr pos:start="75:5" pos:end="75:37"><call pos:start="75:5" pos:end="75:37"><name pos:start="75:5" pos:end="75:19">qemu_mutex_init</name><argument_list pos:start="75:20" pos:end="75:37">(<argument pos:start="75:21" pos:end="75:36"><expr pos:start="75:21" pos:end="75:36"><operator pos:start="75:21" pos:end="75:21">&amp;</operator><name pos:start="75:22" pos:end="75:36">qemu_sigp_mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
