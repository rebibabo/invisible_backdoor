<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12008.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">dxtory_decode_v2_444</name><parameter_list pos:start="1:32" pos:end="3:65">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:62">AVFrame</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">pic</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:45">uint8_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:50">src</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:64"><decl pos:start="3:53" pos:end="3:64"><type pos:start="3:53" pos:end="3:64"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:64">src_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="107:1">{<block_content pos:start="7:5" pos:end="105:13">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18">GetByteContext</name></type> <name pos:start="7:20" pos:end="7:21">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">GetBitContext</name></type>  <name pos:start="9:20" pos:end="9:22">gb2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">nslices</name></decl>, <decl pos:start="11:18" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:22">slice</name></decl>, <decl pos:start="11:25" pos:end="11:36"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:36">slice_height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:16">off</name></decl>, <decl pos:start="13:19" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:19" pos:end="13:28">slice_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:14">Y</name></decl>, <decl pos:start="15:17" pos:end="15:18"><type ref="prev" pos:start="15:5" pos:end="15:13"><modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:18">U</name></decl>, <decl pos:start="15:21" pos:end="15:22"><type ref="prev" pos:start="15:5" pos:end="15:13"><modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:22">V</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><call pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:20">bytestream2_init</name><argument_list pos:start="21:21" pos:end="21:40">(<argument pos:start="21:22" pos:end="21:24"><expr pos:start="21:22" pos:end="21:24"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:24">gb</name></expr></argument>, <argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">src</name></expr></argument>, <argument pos:start="21:32" pos:end="21:39"><expr pos:start="21:32" pos:end="21:39"><name pos:start="21:32" pos:end="21:39">src_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:40"><expr pos:start="23:5" pos:end="23:39"><name pos:start="23:5" pos:end="23:11">nslices</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:39"><name pos:start="23:15" pos:end="23:34">bytestream2_get_le16</name><argument_list pos:start="23:35" pos:end="23:39">(<argument pos:start="23:36" pos:end="23:38"><expr pos:start="23:36" pos:end="23:38"><operator pos:start="23:36" pos:end="23:36">&amp;</operator><name pos:start="23:37" pos:end="23:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:39"><expr pos:start="25:5" pos:end="25:38"><name pos:start="25:5" pos:end="25:7">off</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:38"><name pos:start="25:11" pos:end="25:17">FFALIGN</name><argument_list pos:start="25:18" pos:end="25:38">(<argument pos:start="25:19" pos:end="25:33"><expr pos:start="25:19" pos:end="25:33"><name pos:start="25:19" pos:end="25:25">nslices</name> <operator pos:start="25:27" pos:end="25:27">*</operator> <literal type="number" pos:start="25:29" pos:end="25:31">4</literal> <operator pos:start="25:31" pos:end="25:31">+</operator> <literal type="number" pos:start="25:33" pos:end="25:33">2</literal></expr></argument>, <argument pos:start="25:36" pos:end="25:37"><expr pos:start="25:36" pos:end="25:37"><literal type="number" pos:start="25:36" pos:end="25:37">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:23">(<expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:16">src_size</name> <operator pos:start="27:18" pos:end="27:18">&lt;</operator> <name pos:start="27:20" pos:end="27:22">off</name></expr>)</condition> <block pos:start="27:25" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:35">

        <expr_stmt pos:start="29:9" pos:end="29:55"><expr pos:start="29:9" pos:end="29:54"><call pos:start="29:9" pos:end="29:54"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:54">(<argument pos:start="29:16" pos:end="29:20"><expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">avctx</name></expr></argument>, <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:37" pos:end="29:53"><expr pos:start="29:37" pos:end="29:53"><literal type="string" pos:start="29:37" pos:end="29:53">"no slice data\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:35">return <expr pos:start="31:16" pos:end="31:34"><name pos:start="31:16" pos:end="31:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:44">(<expr pos:start="37:9" pos:end="37:43"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:16">nslices</name> <operator pos:start="37:18" pos:end="37:19">||</operator> <name pos:start="37:21" pos:end="37:33"><name pos:start="37:21" pos:end="37:25">avctx</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:33">height</name></name> <operator pos:start="37:35" pos:end="37:35">%</operator> <name pos:start="37:37" pos:end="37:43">nslices</name></expr>)</condition> <block pos:start="37:46" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:36">

        <expr_stmt pos:start="39:9" pos:end="41:59"><expr pos:start="39:9" pos:end="41:58"><call pos:start="39:9" pos:end="41:58"><name pos:start="39:9" pos:end="39:29">avpriv_request_sample</name><argument_list pos:start="39:30" pos:end="41:58">(<argument pos:start="39:31" pos:end="39:35"><expr pos:start="39:31" pos:end="39:35"><name pos:start="39:31" pos:end="39:35">avctx</name></expr></argument>, <argument pos:start="39:38" pos:end="39:58"><expr pos:start="39:38" pos:end="39:58"><literal type="string" pos:start="39:38" pos:end="39:58">"%d slices for %dx%d"</literal></expr></argument>, <argument pos:start="39:61" pos:end="39:67"><expr pos:start="39:61" pos:end="39:67"><name pos:start="39:61" pos:end="39:67">nslices</name></expr></argument>,

                              <argument pos:start="41:31" pos:end="41:42"><expr pos:start="41:31" pos:end="41:42"><name pos:start="41:31" pos:end="41:42"><name pos:start="41:31" pos:end="41:35">avctx</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:42">width</name></name></expr></argument>, <argument pos:start="41:45" pos:end="41:57"><expr pos:start="41:45" pos:end="41:57"><name pos:start="41:45" pos:end="41:57"><name pos:start="41:45" pos:end="41:49">avctx</name><operator pos:start="41:50" pos:end="41:51">-&gt;</operator><name pos:start="41:52" pos:end="41:57">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:36">return <expr pos:start="43:16" pos:end="43:35"><name pos:start="43:16" pos:end="43:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:43"><expr pos:start="49:5" pos:end="49:42"><name pos:start="49:5" pos:end="49:16">slice_height</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <name pos:start="49:20" pos:end="49:32"><name pos:start="49:20" pos:end="49:24">avctx</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:32">height</name></name> <operator pos:start="49:34" pos:end="49:34">/</operator> <name pos:start="49:36" pos:end="49:42">nslices</name></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:40"><expr pos:start="53:5" pos:end="53:39"><name pos:start="53:5" pos:end="53:18"><name pos:start="53:5" pos:end="53:9">avctx</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:18">pix_fmt</name></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <name pos:start="53:22" pos:end="53:39">AV_PIX_FMT_YUV444P</name></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="57:19"><if pos:start="55:5" pos:end="57:19">if <condition pos:start="55:8" pos:end="55:49">(<expr pos:start="55:9" pos:end="55:48"><operator pos:start="55:9" pos:end="55:9">(</operator><name pos:start="55:10" pos:end="55:12">ret</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <call pos:start="55:16" pos:end="55:43"><name pos:start="55:16" pos:end="55:28">ff_get_buffer</name><argument_list pos:start="55:29" pos:end="55:43">(<argument pos:start="55:30" pos:end="55:34"><expr pos:start="55:30" pos:end="55:34"><name pos:start="55:30" pos:end="55:34">avctx</name></expr></argument>, <argument pos:start="55:37" pos:end="55:39"><expr pos:start="55:37" pos:end="55:39"><name pos:start="55:37" pos:end="55:39">pic</name></expr></argument>, <argument pos:start="55:42" pos:end="55:42"><expr pos:start="55:42" pos:end="55:42"><literal type="number" pos:start="55:42" pos:end="55:42">0</literal></expr></argument>)</argument_list></call><operator pos:start="55:44" pos:end="55:44">)</operator> <operator pos:start="55:46" pos:end="55:46">&lt;</operator> <literal type="number" pos:start="55:48" pos:end="55:48">0</literal></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:19"><block_content pos:start="57:9" pos:end="57:19">

        <return pos:start="57:9" pos:end="57:19">return <expr pos:start="57:16" pos:end="57:18"><name pos:start="57:16" pos:end="57:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:21"><expr pos:start="61:5" pos:end="61:20"><name pos:start="61:5" pos:end="61:5">Y</name> <operator pos:start="61:7" pos:end="61:7">=</operator> <name pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:11">pic</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:17">data</name><index pos:start="61:18" pos:end="61:20">[<expr pos:start="61:19" pos:end="61:19"><literal type="number" pos:start="61:19" pos:end="61:19">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:21"><expr pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:5">U</name> <operator pos:start="63:7" pos:end="63:7">=</operator> <name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:11">pic</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:17">data</name><index pos:start="63:18" pos:end="63:20">[<expr pos:start="63:19" pos:end="63:19"><literal type="number" pos:start="63:19" pos:end="63:19">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:21"><expr pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:5">V</name> <operator pos:start="65:7" pos:end="65:7">=</operator> <name pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:11">pic</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:17">data</name><index pos:start="65:18" pos:end="65:20">[<expr pos:start="65:19" pos:end="65:19"><literal type="number" pos:start="65:19" pos:end="65:19">2</literal></expr>]</index></name></expr>;</expr_stmt>



    <for pos:start="69:5" pos:end="101:5">for <control pos:start="69:9" pos:end="69:45">(<init pos:start="69:10" pos:end="69:19"><expr pos:start="69:10" pos:end="69:18"><name pos:start="69:10" pos:end="69:14">slice</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <literal type="number" pos:start="69:18" pos:end="69:18">0</literal></expr>;</init> <condition pos:start="69:21" pos:end="69:36"><expr pos:start="69:21" pos:end="69:35"><name pos:start="69:21" pos:end="69:25">slice</name> <operator pos:start="69:27" pos:end="69:27">&lt;</operator> <name pos:start="69:29" pos:end="69:35">nslices</name></expr>;</condition> <incr pos:start="69:38" pos:end="69:44"><expr pos:start="69:38" pos:end="69:44"><name pos:start="69:38" pos:end="69:42">slice</name><operator pos:start="69:43" pos:end="69:44">++</operator></expr></incr>)</control> <block pos:start="69:47" pos:end="101:5">{<block_content pos:start="71:9" pos:end="99:26">

        <expr_stmt pos:start="71:9" pos:end="71:47"><expr pos:start="71:9" pos:end="71:46"><name pos:start="71:9" pos:end="71:18">slice_size</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <call pos:start="71:22" pos:end="71:46"><name pos:start="71:22" pos:end="71:41">bytestream2_get_le32</name><argument_list pos:start="71:42" pos:end="71:46">(<argument pos:start="71:43" pos:end="71:45"><expr pos:start="71:43" pos:end="71:45"><operator pos:start="71:43" pos:end="71:43">&amp;</operator><name pos:start="71:44" pos:end="71:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:70"><expr pos:start="75:9" pos:end="75:69"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:69"><name pos:start="75:15" pos:end="75:30">check_slice_size</name><argument_list pos:start="75:31" pos:end="75:69">(<argument pos:start="75:32" pos:end="75:36"><expr pos:start="75:32" pos:end="75:36"><name pos:start="75:32" pos:end="75:36">avctx</name></expr></argument>, <argument pos:start="75:39" pos:end="75:41"><expr pos:start="75:39" pos:end="75:41"><name pos:start="75:39" pos:end="75:41">src</name></expr></argument>, <argument pos:start="75:44" pos:end="75:51"><expr pos:start="75:44" pos:end="75:51"><name pos:start="75:44" pos:end="75:51">src_size</name></expr></argument>, <argument pos:start="75:54" pos:end="75:63"><expr pos:start="75:54" pos:end="75:63"><name pos:start="75:54" pos:end="75:63">slice_size</name></expr></argument>, <argument pos:start="75:66" pos:end="75:68"><expr pos:start="75:66" pos:end="75:68"><name pos:start="75:66" pos:end="75:68">off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="79:23"><if pos:start="77:9" pos:end="79:23">if <condition pos:start="77:12" pos:end="77:20">(<expr pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:15">ret</name> <operator pos:start="77:17" pos:end="77:17">&lt;</operator> <literal type="number" pos:start="77:19" pos:end="77:19">0</literal></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:23"><block_content pos:start="79:13" pos:end="79:23">

            <return pos:start="79:13" pos:end="79:23">return <expr pos:start="79:20" pos:end="79:22"><name pos:start="79:20" pos:end="79:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:67"><expr pos:start="83:9" pos:end="83:66"><call pos:start="83:9" pos:end="83:66"><name pos:start="83:9" pos:end="83:21">init_get_bits</name><argument_list pos:start="83:22" pos:end="83:66">(<argument pos:start="83:23" pos:end="83:26"><expr pos:start="83:23" pos:end="83:26"><operator pos:start="83:23" pos:end="83:23">&amp;</operator><name pos:start="83:24" pos:end="83:26">gb2</name></expr></argument>, <argument pos:start="83:29" pos:end="83:42"><expr pos:start="83:29" pos:end="83:42"><name pos:start="83:29" pos:end="83:31">src</name> <operator pos:start="83:33" pos:end="83:33">+</operator> <name pos:start="83:35" pos:end="83:37">off</name> <operator pos:start="83:39" pos:end="83:39">+</operator> <literal type="number" pos:start="83:41" pos:end="83:42">16</literal></expr></argument>, <argument pos:start="83:45" pos:end="83:65"><expr pos:start="83:45" pos:end="83:65"><operator pos:start="83:45" pos:end="83:45">(</operator><name pos:start="83:46" pos:end="83:55">slice_size</name> <operator pos:start="83:57" pos:end="83:57">-</operator> <literal type="number" pos:start="83:59" pos:end="83:60">16</literal><operator pos:start="83:61" pos:end="83:61">)</operator> <operator pos:start="83:63" pos:end="83:63">*</operator> <literal type="number" pos:start="83:65" pos:end="83:65">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="89:47"><expr pos:start="85:9" pos:end="89:46"><call pos:start="85:9" pos:end="89:46"><name pos:start="85:9" pos:end="85:28">dx2_decode_slice_444</name><argument_list pos:start="85:29" pos:end="89:46">(<argument pos:start="85:30" pos:end="85:33"><expr pos:start="85:30" pos:end="85:33"><operator pos:start="85:30" pos:end="85:30">&amp;</operator><name pos:start="85:31" pos:end="85:33">gb2</name></expr></argument>, <argument pos:start="85:36" pos:end="85:47"><expr pos:start="85:36" pos:end="85:47"><name pos:start="85:36" pos:end="85:47"><name pos:start="85:36" pos:end="85:40">avctx</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:47">width</name></name></expr></argument>, <argument pos:start="85:50" pos:end="85:61"><expr pos:start="85:50" pos:end="85:61"><name pos:start="85:50" pos:end="85:61">slice_height</name></expr></argument>, <argument pos:start="85:64" pos:end="85:64"><expr pos:start="85:64" pos:end="85:64"><name pos:start="85:64" pos:end="85:64">Y</name></expr></argument>, <argument pos:start="85:67" pos:end="85:67"><expr pos:start="85:67" pos:end="85:67"><name pos:start="85:67" pos:end="85:67">U</name></expr></argument>, <argument pos:start="85:70" pos:end="85:70"><expr pos:start="85:70" pos:end="85:70"><name pos:start="85:70" pos:end="85:70">V</name></expr></argument>,

                             <argument pos:start="87:30" pos:end="87:45"><expr pos:start="87:30" pos:end="87:45"><name pos:start="87:30" pos:end="87:45"><name pos:start="87:30" pos:end="87:32">pic</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:42">linesize</name><index pos:start="87:43" pos:end="87:45">[<expr pos:start="87:44" pos:end="87:44"><literal type="number" pos:start="87:44" pos:end="87:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="87:48" pos:end="87:63"><expr pos:start="87:48" pos:end="87:63"><name pos:start="87:48" pos:end="87:63"><name pos:start="87:48" pos:end="87:50">pic</name><operator pos:start="87:51" pos:end="87:52">-&gt;</operator><name pos:start="87:53" pos:end="87:60">linesize</name><index pos:start="87:61" pos:end="87:63">[<expr pos:start="87:62" pos:end="87:62"><literal type="number" pos:start="87:62" pos:end="87:62">1</literal></expr>]</index></name></expr></argument>,

                             <argument pos:start="89:30" pos:end="89:45"><expr pos:start="89:30" pos:end="89:45"><name pos:start="89:30" pos:end="89:45"><name pos:start="89:30" pos:end="89:32">pic</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:42">linesize</name><index pos:start="89:43" pos:end="89:45">[<expr pos:start="89:44" pos:end="89:44"><literal type="number" pos:start="89:44" pos:end="89:44">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:45"><expr pos:start="93:9" pos:end="93:44"><name pos:start="93:9" pos:end="93:9">Y</name> <operator pos:start="93:11" pos:end="93:12">+=</operator> <name pos:start="93:14" pos:end="93:29"><name pos:start="93:14" pos:end="93:16">pic</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:26">linesize</name><index pos:start="93:27" pos:end="93:29">[<expr pos:start="93:28" pos:end="93:28"><literal type="number" pos:start="93:28" pos:end="93:28">0</literal></expr>]</index></name> <operator pos:start="93:31" pos:end="93:31">*</operator> <name pos:start="93:33" pos:end="93:44">slice_height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:45"><expr pos:start="95:9" pos:end="95:44"><name pos:start="95:9" pos:end="95:9">U</name> <operator pos:start="95:11" pos:end="95:12">+=</operator> <name pos:start="95:14" pos:end="95:29"><name pos:start="95:14" pos:end="95:16">pic</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:26">linesize</name><index pos:start="95:27" pos:end="95:29">[<expr pos:start="95:28" pos:end="95:28"><literal type="number" pos:start="95:28" pos:end="95:28">1</literal></expr>]</index></name> <operator pos:start="95:31" pos:end="95:31">*</operator> <name pos:start="95:33" pos:end="95:44">slice_height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:45"><expr pos:start="97:9" pos:end="97:44"><name pos:start="97:9" pos:end="97:9">V</name> <operator pos:start="97:11" pos:end="97:12">+=</operator> <name pos:start="97:14" pos:end="97:29"><name pos:start="97:14" pos:end="97:16">pic</name><operator pos:start="97:17" pos:end="97:18">-&gt;</operator><name pos:start="97:19" pos:end="97:26">linesize</name><index pos:start="97:27" pos:end="97:29">[<expr pos:start="97:28" pos:end="97:28"><literal type="number" pos:start="97:28" pos:end="97:28">2</literal></expr>]</index></name> <operator pos:start="97:31" pos:end="97:31">*</operator> <name pos:start="97:33" pos:end="97:44">slice_height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:26"><expr pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:11">off</name> <operator pos:start="99:13" pos:end="99:14">+=</operator> <name pos:start="99:16" pos:end="99:25">slice_size</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="105:5" pos:end="105:13">return <expr pos:start="105:12" pos:end="105:12"><literal type="number" pos:start="105:12" pos:end="105:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
