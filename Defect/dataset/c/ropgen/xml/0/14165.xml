<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14165.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">ff_rtsp_open_transport_ctx</name><parameter_list pos:start="1:31" pos:end="1:71">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:70"><decl pos:start="1:52" pos:end="1:70"><type pos:start="1:52" pos:end="1:70"><name pos:start="1:52" pos:end="1:61">RTSPStream</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:70">rtsp_st</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">RTSPState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">rt</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">s</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:58"><decl pos:start="9:5" pos:end="9:57"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:29">reordering_queue_size</name> <init pos:start="9:31" pos:end="9:57">= <expr pos:start="9:33" pos:end="9:57"><name pos:start="9:33" pos:end="9:57"><name pos:start="9:33" pos:end="9:34">rt</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:57">reordering_queue_size</name></name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="21:5"><if pos:start="11:5" pos:end="21:5">if <condition pos:start="11:8" pos:end="11:34">(<expr pos:start="11:9" pos:end="11:33"><name pos:start="11:9" pos:end="11:29">reordering_queue_size</name> <operator pos:start="11:31" pos:end="11:31">&lt;</operator> <literal type="number" pos:start="11:33" pos:end="11:33">0</literal></expr>)</condition> <block pos:start="11:36" pos:end="21:5">{<block_content pos:start="13:9" pos:end="19:67">

        <if_stmt pos:start="13:9" pos:end="19:67"><if pos:start="13:9" pos:end="15:38">if <condition pos:start="13:12" pos:end="13:77">(<expr pos:start="13:13" pos:end="13:76"><name pos:start="13:13" pos:end="13:31"><name pos:start="13:13" pos:end="13:14">rt</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:31">lower_transport</name></name> <operator pos:start="13:33" pos:end="13:34">==</operator> <name pos:start="13:36" pos:end="13:59">RTSP_LOWER_TRANSPORT_TCP</name> <operator pos:start="13:61" pos:end="13:62">||</operator> <operator pos:start="13:64" pos:end="13:64">!</operator><name pos:start="13:65" pos:end="13:76"><name pos:start="13:65" pos:end="13:65">s</name><operator pos:start="13:66" pos:end="13:67">-&gt;</operator><name pos:start="13:68" pos:end="13:76">max_delay</name></name></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:38"><block_content pos:start="15:13" pos:end="15:38">

            <expr_stmt pos:start="15:13" pos:end="15:38"><expr pos:start="15:13" pos:end="15:37"><name pos:start="15:13" pos:end="15:33">reordering_queue_size</name> <operator pos:start="15:35" pos:end="15:35">=</operator> <literal type="number" pos:start="15:37" pos:end="15:37">0</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="17:9" pos:end="19:67">else<block type="pseudo" pos:start="19:13" pos:end="19:67"><block_content pos:start="19:13" pos:end="19:67">

            <expr_stmt pos:start="19:13" pos:end="19:67"><expr pos:start="19:13" pos:end="19:66"><name pos:start="19:13" pos:end="19:33">reordering_queue_size</name> <operator pos:start="19:35" pos:end="19:35">=</operator> <name pos:start="19:37" pos:end="19:66">RTP_REORDER_QUEUE_DEFAULT_SIZE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:30">/* open the RTP context */</comment>

    <if_stmt pos:start="27:5" pos:end="29:47"><if pos:start="27:5" pos:end="29:47">if <condition pos:start="27:8" pos:end="27:35">(<expr pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:15">rtsp_st</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:29">stream_index</name></name> <operator pos:start="27:31" pos:end="27:32">&gt;=</operator> <literal type="number" pos:start="27:34" pos:end="27:34">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:47"><block_content pos:start="29:9" pos:end="29:47">

        <expr_stmt pos:start="29:9" pos:end="29:47"><expr pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:10">st</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <name pos:start="29:14" pos:end="29:46"><name pos:start="29:14" pos:end="29:14">s</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:23">streams</name><index pos:start="29:24" pos:end="29:46">[<expr pos:start="29:25" pos:end="29:45"><name pos:start="29:25" pos:end="29:45"><name pos:start="29:25" pos:end="29:31">rtsp_st</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:45">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="33:42"><if pos:start="31:5" pos:end="33:42">if <condition pos:start="31:8" pos:end="31:12">(<expr pos:start="31:9" pos:end="31:11"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:11">st</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:42"><block_content pos:start="33:9" pos:end="33:42">

        <expr_stmt pos:start="33:9" pos:end="33:42"><expr pos:start="33:9" pos:end="33:41"><name pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:20">ctx_flags</name></name> <operator pos:start="33:22" pos:end="33:23">|=</operator> <name pos:start="33:25" pos:end="33:41">AVFMTCTX_NOHEADER</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="75:64"><if pos:start="37:5" pos:end="57:5">if <condition pos:start="37:8" pos:end="37:40">(<expr pos:start="37:9" pos:end="37:39"><name pos:start="37:9" pos:end="37:25">CONFIG_RTSP_MUXER</name> <operator pos:start="37:27" pos:end="37:28">&amp;&amp;</operator> <name pos:start="37:30" pos:end="37:39"><name pos:start="37:30" pos:end="37:30">s</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:39">oformat</name></name></expr>)</condition> <block pos:start="37:42" pos:end="57:5">{<block_content pos:start="39:9" pos:end="55:91">

        <decl_stmt pos:start="39:9" pos:end="45:63"><decl pos:start="39:9" pos:end="45:62"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:15">ret</name> <init pos:start="39:17" pos:end="45:62">= <expr pos:start="39:19" pos:end="45:62"><call pos:start="39:19" pos:end="45:62"><name pos:start="39:19" pos:end="39:39">ff_rtp_chain_mux_open</name><argument_list pos:start="39:40" pos:end="45:62">(<argument pos:start="39:41" pos:end="39:84"><expr pos:start="39:41" pos:end="39:84"><operator pos:start="39:41" pos:end="39:41">(</operator><name pos:start="39:42" pos:end="39:56">AVFormatContext</name> <operator pos:start="39:58" pos:end="39:58">*</operator><operator pos:start="39:59" pos:end="39:59">*</operator><operator pos:start="39:60" pos:end="39:60">)</operator><operator pos:start="39:61" pos:end="39:61">&amp;</operator><name pos:start="39:62" pos:end="39:84"><name pos:start="39:62" pos:end="39:68">rtsp_st</name><operator pos:start="39:69" pos:end="39:70">-&gt;</operator><name pos:start="39:71" pos:end="39:84">transport_priv</name></name></expr></argument>,

                                        <argument pos:start="41:41" pos:end="41:41"><expr pos:start="41:41" pos:end="41:41"><name pos:start="41:41" pos:end="41:41">s</name></expr></argument>, <argument pos:start="41:44" pos:end="41:45"><expr pos:start="41:44" pos:end="41:45"><name pos:start="41:44" pos:end="41:45">st</name></expr></argument>, <argument pos:start="41:48" pos:end="41:66"><expr pos:start="41:48" pos:end="41:66"><name pos:start="41:48" pos:end="41:66"><name pos:start="41:48" pos:end="41:54">rtsp_st</name><operator pos:start="41:55" pos:end="41:56">-&gt;</operator><name pos:start="41:57" pos:end="41:66">rtp_handle</name></name></expr></argument>,

                                        <argument pos:start="43:41" pos:end="43:64"><expr pos:start="43:41" pos:end="43:64"><name pos:start="43:41" pos:end="43:64">RTSP_TCP_MAX_PACKET_SIZE</name></expr></argument>,

                                        <argument pos:start="45:41" pos:end="45:61"><expr pos:start="45:41" pos:end="45:61"><name pos:start="45:41" pos:end="45:61"><name pos:start="45:41" pos:end="45:47">rtsp_st</name><operator pos:start="45:48" pos:end="45:49">-&gt;</operator><name pos:start="45:50" pos:end="45:61">stream_index</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="block" pos:start="47:9" pos:end="47:70">/* Ownership of rtp_handle is passed to the rtp mux context */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:35"><expr pos:start="49:9" pos:end="49:34"><name pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:15">rtsp_st</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:27">rtp_handle</name></name> <operator pos:start="49:29" pos:end="49:29">=</operator> <name pos:start="49:31" pos:end="49:34">NULL</name></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="53:23"><if pos:start="51:9" pos:end="53:23">if <condition pos:start="51:12" pos:end="51:20">(<expr pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:15">ret</name> <operator pos:start="51:17" pos:end="51:17">&lt;</operator> <literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:23"><block_content pos:start="53:13" pos:end="53:23">

            <return pos:start="53:13" pos:end="53:23">return <expr pos:start="53:20" pos:end="53:22"><name pos:start="53:20" pos:end="53:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:91"><expr pos:start="55:9" pos:end="55:90"><name pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:10">st</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:21">time_base</name></name> <operator pos:start="55:23" pos:end="55:23">=</operator> <operator pos:start="55:25" pos:end="55:25">(</operator><operator pos:start="55:26" pos:end="55:26">(</operator><name pos:start="55:27" pos:end="55:41">AVFormatContext</name><operator pos:start="55:42" pos:end="55:42">*</operator><operator pos:start="55:43" pos:end="55:43">)</operator><name pos:start="55:44" pos:end="55:66"><name pos:start="55:44" pos:end="55:50">rtsp_st</name><operator pos:start="55:51" pos:end="55:52">-&gt;</operator><name pos:start="55:53" pos:end="55:66">transport_priv</name></name><operator pos:start="55:67" pos:end="55:67">)</operator><operator pos:start="55:68" pos:end="55:69">-&gt;</operator><name pos:start="55:70" pos:end="55:79"><name pos:start="55:70" pos:end="55:76">streams</name><index pos:start="55:77" pos:end="55:79">[<expr pos:start="55:78" pos:end="55:78"><literal type="number" pos:start="55:78" pos:end="55:78">0</literal></expr>]</index></name><operator pos:start="55:80" pos:end="55:81">-&gt;</operator><name pos:start="55:82" pos:end="55:90">time_base</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="57:7" pos:end="61:5">else if <condition pos:start="57:15" pos:end="57:51">(<expr pos:start="57:16" pos:end="57:50"><name pos:start="57:16" pos:end="57:28"><name pos:start="57:16" pos:end="57:17">rt</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:28">transport</name></name> <operator pos:start="57:30" pos:end="57:31">==</operator> <name pos:start="57:33" pos:end="57:50">RTSP_TRANSPORT_RAW</name></expr>)</condition> <block pos:start="57:53" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:17">

        <return pos:start="59:9" pos:end="59:17">return <expr pos:start="59:16" pos:end="59:16"><literal type="number" pos:start="59:16" pos:end="59:16">0</literal></expr>;</return> <comment type="line" pos:start="59:19" pos:end="59:55">// Don't need to open any parser here</comment>

    </block_content>}</block></if> <if type="elseif" pos:start="61:7" pos:end="67:70">else if <condition pos:start="61:15" pos:end="61:68">(<expr pos:start="61:16" pos:end="61:67"><name pos:start="61:16" pos:end="61:28">CONFIG_RTPDEC</name> <operator pos:start="61:30" pos:end="61:31">&amp;&amp;</operator> <name pos:start="61:33" pos:end="61:45"><name pos:start="61:33" pos:end="61:34">rt</name><operator pos:start="61:35" pos:end="61:36">-&gt;</operator><name pos:start="61:37" pos:end="61:45">transport</name></name> <operator pos:start="61:47" pos:end="61:48">==</operator> <name pos:start="61:50" pos:end="61:67">RTSP_TRANSPORT_RDT</name></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="67:70"><block_content pos:start="63:9" pos:end="67:70">

        <expr_stmt pos:start="63:9" pos:end="67:70"><expr pos:start="63:9" pos:end="67:69"><name pos:start="63:9" pos:end="63:31"><name pos:start="63:9" pos:end="63:15">rtsp_st</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:31">transport_priv</name></name> <operator pos:start="63:33" pos:end="63:33">=</operator> <call pos:start="63:35" pos:end="67:69"><name pos:start="63:35" pos:end="63:51">ff_rdt_parse_open</name><argument_list pos:start="63:52" pos:end="67:69">(<argument pos:start="63:53" pos:end="63:53"><expr pos:start="63:53" pos:end="63:53"><name pos:start="63:53" pos:end="63:53">s</name></expr></argument>, <argument pos:start="63:56" pos:end="63:64"><expr pos:start="63:56" pos:end="63:64"><name pos:start="63:56" pos:end="63:64"><name pos:start="63:56" pos:end="63:57">st</name><operator pos:start="63:58" pos:end="63:59">-&gt;</operator><name pos:start="63:60" pos:end="63:64">index</name></name></expr></argument>,

                                            <argument pos:start="65:45" pos:end="65:77"><expr pos:start="65:45" pos:end="65:77"><name pos:start="65:45" pos:end="65:77"><name pos:start="65:45" pos:end="65:51">rtsp_st</name><operator pos:start="65:52" pos:end="65:53">-&gt;</operator><name pos:start="65:54" pos:end="65:77">dynamic_protocol_context</name></name></expr></argument>,

                                            <argument pos:start="67:45" pos:end="67:68"><expr pos:start="67:45" pos:end="67:68"><name pos:start="67:45" pos:end="67:68"><name pos:start="67:45" pos:end="67:51">rtsp_st</name><operator pos:start="67:52" pos:end="67:53">-&gt;</operator><name pos:start="67:54" pos:end="67:68">dynamic_handler</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="69:5" pos:end="75:64">else if <condition pos:start="69:13" pos:end="69:27">(<expr pos:start="69:14" pos:end="69:26"><name pos:start="69:14" pos:end="69:26">CONFIG_RTPDEC</name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="75:64"><block_content pos:start="71:9" pos:end="75:64">

        <expr_stmt pos:start="71:9" pos:end="75:64"><expr pos:start="71:9" pos:end="75:63"><name pos:start="71:9" pos:end="71:31"><name pos:start="71:9" pos:end="71:15">rtsp_st</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:31">transport_priv</name></name> <operator pos:start="71:33" pos:end="71:33">=</operator> <call pos:start="71:35" pos:end="75:63"><name pos:start="71:35" pos:end="71:51">ff_rtp_parse_open</name><argument_list pos:start="71:52" pos:end="75:63">(<argument pos:start="71:53" pos:end="71:53"><expr pos:start="71:53" pos:end="71:53"><name pos:start="71:53" pos:end="71:53">s</name></expr></argument>, <argument pos:start="71:56" pos:end="71:57"><expr pos:start="71:56" pos:end="71:57"><name pos:start="71:56" pos:end="71:57">st</name></expr></argument>,

                                         <argument pos:start="73:42" pos:end="73:66"><expr pos:start="73:42" pos:end="73:66"><name pos:start="73:42" pos:end="73:66"><name pos:start="73:42" pos:end="73:48">rtsp_st</name><operator pos:start="73:49" pos:end="73:50">-&gt;</operator><name pos:start="73:51" pos:end="73:66">sdp_payload_type</name></name></expr></argument>,

                                         <argument pos:start="75:42" pos:end="75:62"><expr pos:start="75:42" pos:end="75:62"><name pos:start="75:42" pos:end="75:62">reordering_queue_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="103:5"><if pos:start="79:5" pos:end="83:5">if <condition pos:start="79:8" pos:end="79:33">(<expr pos:start="79:9" pos:end="79:32"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:32"><name pos:start="79:10" pos:end="79:16">rtsp_st</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:32">transport_priv</name></name></expr>)</condition> <block pos:start="79:35" pos:end="83:5">{<block_content pos:start="81:10" pos:end="81:32">

         <return pos:start="81:10" pos:end="81:32">return <expr pos:start="81:17" pos:end="81:31"><call pos:start="81:17" pos:end="81:31"><name pos:start="81:17" pos:end="81:23">AVERROR</name><argument_list pos:start="81:24" pos:end="81:31">(<argument pos:start="81:25" pos:end="81:30"><expr pos:start="81:25" pos:end="81:30"><name pos:start="81:25" pos:end="81:30">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="83:7" pos:end="103:5">else if <condition pos:start="83:15" pos:end="83:68">(<expr pos:start="83:16" pos:end="83:67"><name pos:start="83:16" pos:end="83:28">CONFIG_RTPDEC</name> <operator pos:start="83:30" pos:end="83:31">&amp;&amp;</operator> <name pos:start="83:33" pos:end="83:45"><name pos:start="83:33" pos:end="83:34">rt</name><operator pos:start="83:35" pos:end="83:36">-&gt;</operator><name pos:start="83:37" pos:end="83:45">transport</name></name> <operator pos:start="83:47" pos:end="83:48">==</operator> <name pos:start="83:50" pos:end="83:67">RTSP_TRANSPORT_RTP</name></expr>)</condition> <block pos:start="83:70" pos:end="103:5">{<block_content pos:start="85:9" pos:end="101:60">

        <if_stmt pos:start="85:9" pos:end="93:9"><if pos:start="85:9" pos:end="93:9">if <condition pos:start="85:12" pos:end="85:37">(<expr pos:start="85:13" pos:end="85:36"><name pos:start="85:13" pos:end="85:36"><name pos:start="85:13" pos:end="85:19">rtsp_st</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:36">dynamic_handler</name></name></expr>)</condition> <block pos:start="85:39" pos:end="93:9">{<block_content pos:start="87:13" pos:end="91:72">

            <expr_stmt pos:start="87:13" pos:end="91:72"><expr pos:start="87:13" pos:end="91:71"><call pos:start="87:13" pos:end="91:71"><name pos:start="87:13" pos:end="87:45">ff_rtp_parse_set_dynamic_protocol</name><argument_list pos:start="87:46" pos:end="91:71">(<argument pos:start="87:47" pos:end="87:69"><expr pos:start="87:47" pos:end="87:69"><name pos:start="87:47" pos:end="87:69"><name pos:start="87:47" pos:end="87:53">rtsp_st</name><operator pos:start="87:54" pos:end="87:55">-&gt;</operator><name pos:start="87:56" pos:end="87:69">transport_priv</name></name></expr></argument>,

                                              <argument pos:start="89:47" pos:end="89:79"><expr pos:start="89:47" pos:end="89:79"><name pos:start="89:47" pos:end="89:79"><name pos:start="89:47" pos:end="89:53">rtsp_st</name><operator pos:start="89:54" pos:end="89:55">-&gt;</operator><name pos:start="89:56" pos:end="89:79">dynamic_protocol_context</name></name></expr></argument>,

                                              <argument pos:start="91:47" pos:end="91:70"><expr pos:start="91:47" pos:end="91:70"><name pos:start="91:47" pos:end="91:70"><name pos:start="91:47" pos:end="91:53">rtsp_st</name><operator pos:start="91:54" pos:end="91:55">-&gt;</operator><name pos:start="91:56" pos:end="91:70">dynamic_handler</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="95:9" pos:end="101:60"><if pos:start="95:9" pos:end="101:60">if <condition pos:start="95:12" pos:end="95:37">(<expr pos:start="95:13" pos:end="95:36"><name pos:start="95:13" pos:end="95:36"><name pos:start="95:13" pos:end="95:19">rtsp_st</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:33">crypto_suite</name><index pos:start="95:34" pos:end="95:36">[<expr pos:start="95:35" pos:end="95:35"><literal type="number" pos:start="95:35" pos:end="95:35">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="101:60"><block_content pos:start="97:13" pos:end="101:60">

            <expr_stmt pos:start="97:13" pos:end="101:60"><expr pos:start="97:13" pos:end="101:59"><call pos:start="97:13" pos:end="101:59"><name pos:start="97:13" pos:end="97:35">ff_rtp_parse_set_crypto</name><argument_list pos:start="97:36" pos:end="101:59">(<argument pos:start="97:37" pos:end="97:59"><expr pos:start="97:37" pos:end="97:59"><name pos:start="97:37" pos:end="97:59"><name pos:start="97:37" pos:end="97:43">rtsp_st</name><operator pos:start="97:44" pos:end="97:45">-&gt;</operator><name pos:start="97:46" pos:end="97:59">transport_priv</name></name></expr></argument>,

                                    <argument pos:start="99:37" pos:end="99:57"><expr pos:start="99:37" pos:end="99:57"><name pos:start="99:37" pos:end="99:57"><name pos:start="99:37" pos:end="99:43">rtsp_st</name><operator pos:start="99:44" pos:end="99:45">-&gt;</operator><name pos:start="99:46" pos:end="99:57">crypto_suite</name></name></expr></argument>,

                                    <argument pos:start="101:37" pos:end="101:58"><expr pos:start="101:37" pos:end="101:58"><name pos:start="101:37" pos:end="101:58"><name pos:start="101:37" pos:end="101:43">rtsp_st</name><operator pos:start="101:44" pos:end="101:45">-&gt;</operator><name pos:start="101:46" pos:end="101:58">crypto_params</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="107:5" pos:end="107:13">return <expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
