<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12382.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:73"><name pos:start="1:1" pos:end="1:10">build_dsdt</name><argument_list pos:start="1:11" pos:end="1:73">(<argument pos:start="1:12" pos:end="1:29">GArray *table_data</argument>, <argument pos:start="1:32" pos:end="1:45">GArray *linker</argument>, <argument pos:start="1:48" pos:end="1:72">VirtGuestInfo *guest_info</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:25">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:7">Aml</name> <modifier pos:start="5:9" pos:end="5:9">*</modifier></type><name pos:start="5:10" pos:end="5:14">scope</name></decl>, <decl pos:start="5:17" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:9"><modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:21">dsdt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:23"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:21">MemMapEntry</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:29">memmap</name> <init pos:start="7:31" pos:end="7:50">= <expr pos:start="7:33" pos:end="7:50"><name pos:start="7:33" pos:end="7:50"><name pos:start="7:33" pos:end="7:42">guest_info</name><operator pos:start="7:43" pos:end="7:44">-&gt;</operator><name pos:start="7:45" pos:end="7:50">memmap</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:15"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:21">irqmap</name> <init pos:start="9:23" pos:end="9:42">= <expr pos:start="9:25" pos:end="9:42"><name pos:start="9:25" pos:end="9:42"><name pos:start="9:25" pos:end="9:34">guest_info</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:42">irqmap</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:32"><expr pos:start="13:5" pos:end="13:31"><name pos:start="13:5" pos:end="13:8">dsdt</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:31"><name pos:start="13:12" pos:end="13:29">init_aml_allocator</name><argument_list pos:start="13:30" pos:end="13:31">()</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="15:5" pos:end="15:34">/* Reserve space for header */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:55"><expr pos:start="17:5" pos:end="17:54"><call pos:start="17:5" pos:end="17:54"><name pos:start="17:5" pos:end="17:18">acpi_data_push</name><argument_list pos:start="17:19" pos:end="17:54">(<argument pos:start="17:20" pos:end="17:28"><expr pos:start="17:20" pos:end="17:28"><name pos:start="17:20" pos:end="17:28"><name pos:start="17:20" pos:end="17:23">dsdt</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:28">buf</name></name></expr></argument>, <argument pos:start="17:31" pos:end="17:53"><expr pos:start="17:31" pos:end="17:53"><sizeof pos:start="17:31" pos:end="17:53">sizeof<argument_list pos:start="17:37" pos:end="17:53">(<argument pos:start="17:38" pos:end="17:52"><expr pos:start="17:38" pos:end="17:52"><name pos:start="17:38" pos:end="17:52">AcpiTableHeader</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="29:7">/* When booting the VM with UEFI, UEFI takes ownership of the RTC hardware.

     * While UEFI can use libfdt to disable the RTC device node in the DTB that

     * it passes to the OS, it cannot modify AML. Therefore, we won't generate

     * the RTC ACPI device at all when using UEFI.

     */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:31"><expr pos:start="31:5" pos:end="31:30"><name pos:start="31:5" pos:end="31:9">scope</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <call pos:start="31:13" pos:end="31:30"><name pos:start="31:13" pos:end="31:21">aml_scope</name><argument_list pos:start="31:22" pos:end="31:30">(<argument pos:start="31:23" pos:end="31:29"><expr pos:start="31:23" pos:end="31:29"><literal type="string" pos:start="31:23" pos:end="31:29">"\\_SB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:52"><expr pos:start="33:5" pos:end="33:51"><call pos:start="33:5" pos:end="33:51"><name pos:start="33:5" pos:end="33:22">acpi_dsdt_add_cpus</name><argument_list pos:start="33:23" pos:end="33:51">(<argument pos:start="33:24" pos:end="33:28"><expr pos:start="33:24" pos:end="33:28"><name pos:start="33:24" pos:end="33:28">scope</name></expr></argument>, <argument pos:start="33:31" pos:end="33:50"><expr pos:start="33:31" pos:end="33:50"><name pos:start="33:31" pos:end="33:50"><name pos:start="33:31" pos:end="33:40">guest_info</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:50">smp_cpus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="37:59"><expr pos:start="35:5" pos:end="37:58"><call pos:start="35:5" pos:end="37:58"><name pos:start="35:5" pos:end="35:22">acpi_dsdt_add_uart</name><argument_list pos:start="35:23" pos:end="37:58">(<argument pos:start="35:24" pos:end="35:28"><expr pos:start="35:24" pos:end="35:28"><name pos:start="35:24" pos:end="35:28">scope</name></expr></argument>, <argument pos:start="35:31" pos:end="35:48"><expr pos:start="35:31" pos:end="35:48"><operator pos:start="35:31" pos:end="35:31">&amp;</operator><name pos:start="35:32" pos:end="35:48"><name pos:start="35:32" pos:end="35:37">memmap</name><index pos:start="35:38" pos:end="35:48">[<expr pos:start="35:39" pos:end="35:47"><name pos:start="35:39" pos:end="35:47">VIRT_UART</name></expr>]</index></name></expr></argument>,

                       <argument pos:start="37:24" pos:end="37:57"><expr pos:start="37:24" pos:end="37:57"><operator pos:start="37:24" pos:end="37:24">(</operator><name pos:start="37:25" pos:end="37:41"><name pos:start="37:25" pos:end="37:30">irqmap</name><index pos:start="37:31" pos:end="37:41">[<expr pos:start="37:32" pos:end="37:40"><name pos:start="37:32" pos:end="37:40">VIRT_UART</name></expr>]</index></name> <operator pos:start="37:43" pos:end="37:43">+</operator> <name pos:start="37:45" pos:end="37:56">ARM_SPI_BASE</name><operator pos:start="37:57" pos:end="37:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:52"><expr pos:start="39:5" pos:end="39:51"><call pos:start="39:5" pos:end="39:51"><name pos:start="39:5" pos:end="39:23">acpi_dsdt_add_flash</name><argument_list pos:start="39:24" pos:end="39:51">(<argument pos:start="39:25" pos:end="39:29"><expr pos:start="39:25" pos:end="39:29"><name pos:start="39:25" pos:end="39:29">scope</name></expr></argument>, <argument pos:start="39:32" pos:end="39:50"><expr pos:start="39:32" pos:end="39:50"><operator pos:start="39:32" pos:end="39:32">&amp;</operator><name pos:start="39:33" pos:end="39:50"><name pos:start="39:33" pos:end="39:38">memmap</name><index pos:start="39:39" pos:end="39:50">[<expr pos:start="39:40" pos:end="39:49"><name pos:start="39:40" pos:end="39:49">VIRT_FLASH</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="43:79"><expr pos:start="41:5" pos:end="43:78"><call pos:start="41:5" pos:end="43:78"><name pos:start="41:5" pos:end="41:24">acpi_dsdt_add_virtio</name><argument_list pos:start="41:25" pos:end="43:78">(<argument pos:start="41:26" pos:end="41:30"><expr pos:start="41:26" pos:end="41:30"><name pos:start="41:26" pos:end="41:30">scope</name></expr></argument>, <argument pos:start="41:33" pos:end="41:50"><expr pos:start="41:33" pos:end="41:50"><operator pos:start="41:33" pos:end="41:33">&amp;</operator><name pos:start="41:34" pos:end="41:50"><name pos:start="41:34" pos:end="41:39">memmap</name><index pos:start="41:40" pos:end="41:50">[<expr pos:start="41:41" pos:end="41:49"><name pos:start="41:41" pos:end="41:49">VIRT_MMIO</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="43:21" pos:end="43:54"><expr pos:start="43:21" pos:end="43:54"><operator pos:start="43:21" pos:end="43:21">(</operator><name pos:start="43:22" pos:end="43:38"><name pos:start="43:22" pos:end="43:27">irqmap</name><index pos:start="43:28" pos:end="43:38">[<expr pos:start="43:29" pos:end="43:37"><name pos:start="43:29" pos:end="43:37">VIRT_MMIO</name></expr>]</index></name> <operator pos:start="43:40" pos:end="43:40">+</operator> <name pos:start="43:42" pos:end="43:53">ARM_SPI_BASE</name><operator pos:start="43:54" pos:end="43:54">)</operator></expr></argument>, <argument pos:start="43:57" pos:end="43:77"><expr pos:start="43:57" pos:end="43:77"><name pos:start="43:57" pos:end="43:77">NUM_VIRTIO_TRANSPORTS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="47:47"><expr pos:start="45:5" pos:end="47:46"><call pos:start="45:5" pos:end="47:46"><name pos:start="45:5" pos:end="45:21">acpi_dsdt_add_pci</name><argument_list pos:start="45:22" pos:end="47:46">(<argument pos:start="45:23" pos:end="45:27"><expr pos:start="45:23" pos:end="45:27"><name pos:start="45:23" pos:end="45:27">scope</name></expr></argument>, <argument pos:start="45:30" pos:end="45:35"><expr pos:start="45:30" pos:end="45:35"><name pos:start="45:30" pos:end="45:35">memmap</name></expr></argument>, <argument pos:start="45:38" pos:end="45:71"><expr pos:start="45:38" pos:end="45:71"><operator pos:start="45:38" pos:end="45:38">(</operator><name pos:start="45:39" pos:end="45:55"><name pos:start="45:39" pos:end="45:44">irqmap</name><index pos:start="45:45" pos:end="45:55">[<expr pos:start="45:46" pos:end="45:54"><name pos:start="45:46" pos:end="45:54">VIRT_PCIE</name></expr>]</index></name> <operator pos:start="45:57" pos:end="45:57">+</operator> <name pos:start="45:59" pos:end="45:70">ARM_SPI_BASE</name><operator pos:start="45:71" pos:end="45:71">)</operator></expr></argument>,

                      <argument pos:start="47:23" pos:end="47:45"><expr pos:start="47:23" pos:end="47:45"><name pos:start="47:23" pos:end="47:45"><name pos:start="47:23" pos:end="47:32">guest_info</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:45">use_highmem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="51:59"><expr pos:start="49:5" pos:end="51:58"><call pos:start="49:5" pos:end="51:58"><name pos:start="49:5" pos:end="49:22">acpi_dsdt_add_gpio</name><argument_list pos:start="49:23" pos:end="51:58">(<argument pos:start="49:24" pos:end="49:28"><expr pos:start="49:24" pos:end="49:28"><name pos:start="49:24" pos:end="49:28">scope</name></expr></argument>, <argument pos:start="49:31" pos:end="49:48"><expr pos:start="49:31" pos:end="49:48"><operator pos:start="49:31" pos:end="49:31">&amp;</operator><name pos:start="49:32" pos:end="49:48"><name pos:start="49:32" pos:end="49:37">memmap</name><index pos:start="49:38" pos:end="49:48">[<expr pos:start="49:39" pos:end="49:47"><name pos:start="49:39" pos:end="49:47">VIRT_GPIO</name></expr>]</index></name></expr></argument>,

                       <argument pos:start="51:24" pos:end="51:57"><expr pos:start="51:24" pos:end="51:57"><operator pos:start="51:24" pos:end="51:24">(</operator><name pos:start="51:25" pos:end="51:41"><name pos:start="51:25" pos:end="51:30">irqmap</name><index pos:start="51:31" pos:end="51:41">[<expr pos:start="51:32" pos:end="51:40"><name pos:start="51:32" pos:end="51:40">VIRT_GPIO</name></expr>]</index></name> <operator pos:start="51:43" pos:end="51:43">+</operator> <name pos:start="51:45" pos:end="51:56">ARM_SPI_BASE</name><operator pos:start="51:57" pos:end="51:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:38"><expr pos:start="53:5" pos:end="53:37"><call pos:start="53:5" pos:end="53:37"><name pos:start="53:5" pos:end="53:30">acpi_dsdt_add_power_button</name><argument_list pos:start="53:31" pos:end="53:37">(<argument pos:start="53:32" pos:end="53:36"><expr pos:start="53:32" pos:end="53:36"><name pos:start="53:32" pos:end="53:36">scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:28"><expr pos:start="57:5" pos:end="57:27"><call pos:start="57:5" pos:end="57:27"><name pos:start="57:5" pos:end="57:14">aml_append</name><argument_list pos:start="57:15" pos:end="57:27">(<argument pos:start="57:16" pos:end="57:19"><expr pos:start="57:16" pos:end="57:19"><name pos:start="57:16" pos:end="57:19">dsdt</name></expr></argument>, <argument pos:start="57:22" pos:end="57:26"><expr pos:start="57:22" pos:end="57:26"><name pos:start="57:22" pos:end="57:26">scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:69">/* copy AML table into ACPI tables blob and patch header there */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:69"><expr pos:start="63:5" pos:end="63:68"><call pos:start="63:5" pos:end="63:68"><name pos:start="63:5" pos:end="63:23">g_array_append_vals</name><argument_list pos:start="63:24" pos:end="63:68">(<argument pos:start="63:25" pos:end="63:34"><expr pos:start="63:25" pos:end="63:34"><name pos:start="63:25" pos:end="63:34">table_data</name></expr></argument>, <argument pos:start="63:37" pos:end="63:51"><expr pos:start="63:37" pos:end="63:51"><name pos:start="63:37" pos:end="63:51"><name pos:start="63:37" pos:end="63:40">dsdt</name><operator pos:start="63:41" pos:end="63:42">-&gt;</operator><name pos:start="63:43" pos:end="63:45">buf</name><operator pos:start="63:46" pos:end="63:47">-&gt;</operator><name pos:start="63:48" pos:end="63:51">data</name></name></expr></argument>, <argument pos:start="63:54" pos:end="63:67"><expr pos:start="63:54" pos:end="63:67"><name pos:start="63:54" pos:end="63:67"><name pos:start="63:54" pos:end="63:57">dsdt</name><operator pos:start="63:58" pos:end="63:59">-&gt;</operator><name pos:start="63:60" pos:end="63:62">buf</name><operator pos:start="63:63" pos:end="63:64">-&gt;</operator><name pos:start="63:65" pos:end="63:67">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="69:41"><expr pos:start="65:5" pos:end="69:40"><call pos:start="65:5" pos:end="69:40"><name pos:start="65:5" pos:end="65:16">build_header</name><argument_list pos:start="65:17" pos:end="69:40">(<argument pos:start="65:18" pos:end="65:23"><expr pos:start="65:18" pos:end="65:23"><name pos:start="65:18" pos:end="65:23">linker</name></expr></argument>, <argument pos:start="65:26" pos:end="65:35"><expr pos:start="65:26" pos:end="65:35"><name pos:start="65:26" pos:end="65:35">table_data</name></expr></argument>,

        <argument pos:start="67:9" pos:end="67:69"><expr pos:start="67:9" pos:end="67:69"><operator pos:start="67:9" pos:end="67:9">(</operator><name pos:start="67:10" pos:end="67:13">void</name> <operator pos:start="67:15" pos:end="67:15">*</operator><operator pos:start="67:16" pos:end="67:16">)</operator><operator pos:start="67:17" pos:end="67:17">(</operator><name pos:start="67:18" pos:end="67:33"><name pos:start="67:18" pos:end="67:27">table_data</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:33">data</name></name> <operator pos:start="67:35" pos:end="67:35">+</operator> <name pos:start="67:37" pos:end="67:51"><name pos:start="67:37" pos:end="67:46">table_data</name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:51">len</name></name> <operator pos:start="67:53" pos:end="67:53">-</operator> <name pos:start="67:55" pos:end="67:68"><name pos:start="67:55" pos:end="67:58">dsdt</name><operator pos:start="67:59" pos:end="67:60">-&gt;</operator><name pos:start="67:61" pos:end="67:63">buf</name><operator pos:start="67:64" pos:end="67:65">-&gt;</operator><name pos:start="67:66" pos:end="67:68">len</name></name><operator pos:start="67:69" pos:end="67:69">)</operator></expr></argument>,

        <argument pos:start="69:9" pos:end="69:14"><expr pos:start="69:9" pos:end="69:14"><literal type="string" pos:start="69:9" pos:end="69:14">"DSDT"</literal></expr></argument>, <argument pos:start="69:17" pos:end="69:30"><expr pos:start="69:17" pos:end="69:30"><name pos:start="69:17" pos:end="69:30"><name pos:start="69:17" pos:end="69:20">dsdt</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:25">buf</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:30">len</name></name></expr></argument>, <argument pos:start="69:33" pos:end="69:33"><expr pos:start="69:33" pos:end="69:33"><literal type="number" pos:start="69:33" pos:end="69:33">2</literal></expr></argument>, <argument pos:start="69:36" pos:end="69:39"><expr pos:start="69:36" pos:end="69:39"><name pos:start="69:36" pos:end="69:39">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:25"><expr pos:start="71:5" pos:end="71:24"><call pos:start="71:5" pos:end="71:24"><name pos:start="71:5" pos:end="71:22">free_aml_allocator</name><argument_list pos:start="71:23" pos:end="71:24">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
