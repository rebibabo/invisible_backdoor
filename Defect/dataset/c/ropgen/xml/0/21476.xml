<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21476.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">pfpu_write</name><parameter_list pos:start="1:23" pos:end="3:37">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:27">void</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:35">opaque</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:60"><decl pos:start="1:38" pos:end="1:60"><type pos:start="1:38" pos:end="1:60"><name pos:start="1:38" pos:end="1:55">target_phys_addr_t</name></type> <name pos:start="1:57" pos:end="1:60">addr</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:76"><decl pos:start="1:63" pos:end="1:76"><type pos:start="1:63" pos:end="1:76"><name pos:start="1:63" pos:end="1:70">uint64_t</name></type> <name pos:start="1:72" pos:end="1:76">value</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:36"><decl pos:start="3:24" pos:end="3:36"><type pos:start="3:24" pos:end="3:36"><name pos:start="3:24" pos:end="3:31">unsigned</name></type> <name pos:start="3:33" pos:end="3:36">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="79:1">{<block_content pos:start="7:5" pos:end="77:5">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">MilkymistPFPUState</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:25">s</name> <init pos:start="7:27" pos:end="7:34">= <expr pos:start="7:29" pos:end="7:34"><name pos:start="7:29" pos:end="7:34">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:51"><expr pos:start="11:5" pos:end="11:50"><call pos:start="11:5" pos:end="11:50"><name pos:start="11:5" pos:end="11:37">trace_milkymist_pfpu_memory_write</name><argument_list pos:start="11:38" pos:end="11:50">(<argument pos:start="11:39" pos:end="11:42"><expr pos:start="11:39" pos:end="11:42"><name pos:start="11:39" pos:end="11:42">addr</name></expr></argument>, <argument pos:start="11:45" pos:end="11:49"><expr pos:start="11:45" pos:end="11:49"><name pos:start="11:45" pos:end="11:49">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:15"><expr pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:8">addr</name> <operator pos:start="15:10" pos:end="15:12">&gt;&gt;=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">2</literal></expr>;</expr_stmt>

    <switch pos:start="17:5" pos:end="77:5">switch <condition pos:start="17:12" pos:end="17:17">(<expr pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:16">addr</name></expr>)</condition> <block pos:start="17:19" pos:end="77:5">{<block_content pos:start="19:5" pos:end="75:14">

    <case pos:start="19:5" pos:end="19:15">case <expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:14">R_CTL</name></expr>:</case>

        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:35">(<expr pos:start="21:13" pos:end="21:34"><name pos:start="21:13" pos:end="21:17">value</name> <operator pos:start="21:19" pos:end="21:19">&amp;</operator> <name pos:start="21:21" pos:end="21:34">CTL_START_BUSY</name></expr>)</condition> <block pos:start="21:37" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:26">

            <expr_stmt pos:start="23:13" pos:end="23:26"><expr pos:start="23:13" pos:end="23:25"><call pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:22">pfpu_start</name><argument_list pos:start="23:23" pos:end="23:25">(<argument pos:start="23:24" pos:end="23:24"><expr pos:start="23:24" pos:end="23:24"><name pos:start="23:24" pos:end="23:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:20">case <expr pos:start="29:10" pos:end="29:19"><name pos:start="29:10" pos:end="29:19">R_MESHBASE</name></expr>:</case>

    <case pos:start="31:5" pos:end="31:21">case <expr pos:start="31:10" pos:end="31:20"><name pos:start="31:10" pos:end="31:20">R_HMESHLAST</name></expr>:</case>

    <case pos:start="33:5" pos:end="33:21">case <expr pos:start="33:10" pos:end="33:20"><name pos:start="33:10" pos:end="33:20">R_VMESHLAST</name></expr>:</case>

    <case pos:start="35:5" pos:end="35:20">case <expr pos:start="35:10" pos:end="35:19"><name pos:start="35:10" pos:end="35:19">R_CODEPAGE</name></expr>:</case>

    <case pos:start="37:5" pos:end="37:20">case <expr pos:start="37:10" pos:end="37:19"><name pos:start="37:10" pos:end="37:19">R_VERTICES</name></expr>:</case>

    <case pos:start="39:5" pos:end="39:22">case <expr pos:start="39:10" pos:end="39:21"><name pos:start="39:10" pos:end="39:21">R_COLLISIONS</name></expr>:</case>

    <case pos:start="41:5" pos:end="41:23">case <expr pos:start="41:10" pos:end="41:22"><name pos:start="41:10" pos:end="41:22">R_STRAYWRITES</name></expr>:</case>

    <case pos:start="43:5" pos:end="43:19">case <expr pos:start="43:10" pos:end="43:18"><name pos:start="43:10" pos:end="43:18">R_LASTDMA</name></expr>:</case>

    <case pos:start="45:5" pos:end="45:14">case <expr pos:start="45:10" pos:end="45:13"><name pos:start="45:10" pos:end="45:13">R_PC</name></expr>:</case>

    <case pos:start="47:5" pos:end="47:20">case <expr pos:start="47:10" pos:end="47:19"><name pos:start="47:10" pos:end="47:19">R_DREGBASE</name></expr>:</case>

    <case pos:start="49:5" pos:end="49:20">case <expr pos:start="49:10" pos:end="49:19"><name pos:start="49:10" pos:end="49:19">R_CODEBASE</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:30"><expr pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:15">regs</name><index pos:start="51:16" pos:end="51:21">[<expr pos:start="51:17" pos:end="51:20"><name pos:start="51:17" pos:end="51:20">addr</name></expr>]</index></name> <operator pos:start="51:23" pos:end="51:23">=</operator> <name pos:start="51:25" pos:end="51:29">value</name></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:32">case <expr pos:start="55:10" pos:end="55:31"><name pos:start="55:10" pos:end="55:18">GPR_BEGIN</name> <operator pos:start="55:20" pos:end="55:22">...</operator>  <name pos:start="55:25" pos:end="55:31">GPR_END</name></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:45"><expr pos:start="57:9" pos:end="57:44"><name pos:start="57:9" pos:end="57:36"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:18">gp_regs</name><index pos:start="57:19" pos:end="57:36">[<expr pos:start="57:20" pos:end="57:35"><name pos:start="57:20" pos:end="57:23">addr</name> <operator pos:start="57:25" pos:end="57:25">-</operator> <name pos:start="57:27" pos:end="57:35">GPR_BEGIN</name></expr>]</index></name> <operator pos:start="57:38" pos:end="57:38">=</operator> <name pos:start="57:40" pos:end="57:44">value</name></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:44">case <expr pos:start="61:10" pos:end="61:43"><name pos:start="61:10" pos:end="61:24">MICROCODE_BEGIN</name> <operator pos:start="61:26" pos:end="61:28">...</operator>  <name pos:start="61:31" pos:end="61:43">MICROCODE_END</name></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:61"><expr pos:start="63:9" pos:end="63:60"><name pos:start="63:9" pos:end="63:52"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:20">microcode</name><index pos:start="63:21" pos:end="63:52">[<expr pos:start="63:22" pos:end="63:51"><call pos:start="63:22" pos:end="63:51"><name pos:start="63:22" pos:end="63:42">get_microcode_address</name><argument_list pos:start="63:43" pos:end="63:51">(<argument pos:start="63:44" pos:end="63:44"><expr pos:start="63:44" pos:end="63:44"><name pos:start="63:44" pos:end="63:44">s</name></expr></argument>, <argument pos:start="63:47" pos:end="63:50"><expr pos:start="63:47" pos:end="63:50"><name pos:start="63:47" pos:end="63:50">addr</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="63:54" pos:end="63:54">=</operator> <name pos:start="63:56" pos:end="63:60">value</name></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>



    <default pos:start="69:5" pos:end="69:12">default:</default>

        <expr_stmt pos:start="71:9" pos:end="73:43"><expr pos:start="71:9" pos:end="73:42"><call pos:start="71:9" pos:end="73:42"><name pos:start="71:9" pos:end="71:20">error_report</name><argument_list pos:start="71:21" pos:end="73:42">(<argument pos:start="71:22" pos:end="73:30"><expr pos:start="71:22" pos:end="73:30"><literal type="string" pos:start="71:22" pos:end="71:74">"milkymist_pfpu: write access to unknown register 0x"</literal>

                <name pos:start="73:17" pos:end="73:30">TARGET_FMT_plx</name></expr></argument>, <argument pos:start="73:33" pos:end="73:41"><expr pos:start="73:33" pos:end="73:41"><name pos:start="73:33" pos:end="73:36">addr</name> <operator pos:start="73:38" pos:end="73:39">&lt;&lt;</operator> <literal type="number" pos:start="73:41" pos:end="73:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
