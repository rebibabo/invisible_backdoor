<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19937.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">pci_add_option_rom</name><parameter_list pos:start="1:30" pos:end="1:67">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:39">PCIDevice</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">pdev</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:66"><decl pos:start="1:48" pos:end="1:66"><type pos:start="1:48" pos:end="1:66"><name pos:start="1:48" pos:end="1:51">bool</name></type> <name pos:start="1:53" pos:end="1:66">is_default_rom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="135:1">{<block_content pos:start="5:5" pos:end="133:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">void</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:17"><name pos:start="11:10" pos:end="11:13">name</name><index pos:start="11:14" pos:end="11:17">[<expr pos:start="11:15" pos:end="11:16"><literal type="number" pos:start="11:15" pos:end="11:16">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:30"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:28">VMStateDescription</name> <modifier pos:start="13:30" pos:end="13:30">*</modifier></type><name pos:start="13:31" pos:end="13:34">vmsd</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:22"><name pos:start="17:10" pos:end="17:13">pdev</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:22">romfile</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="23:17"><if pos:start="21:5" pos:end="23:17">if <condition pos:start="21:8" pos:end="21:35">(<expr pos:start="21:9" pos:end="21:34"><call pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:14">strlen</name><argument_list pos:start="21:15" pos:end="21:29">(<argument pos:start="21:16" pos:end="21:28"><expr pos:start="21:16" pos:end="21:28"><name pos:start="21:16" pos:end="21:28"><name pos:start="21:16" pos:end="21:19">pdev</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:28">romfile</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:31" pos:end="21:32">==</operator> <literal type="number" pos:start="21:34" pos:end="21:34">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="51:5"><if pos:start="27:5" pos:end="51:5">if <condition pos:start="27:8" pos:end="27:23">(<expr pos:start="27:9" pos:end="27:22"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:22"><name pos:start="27:10" pos:end="27:13">pdev</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:22">rom_bar</name></name></expr>)</condition> <block pos:start="27:25" pos:end="51:5">{<block_content pos:start="37:9" pos:end="49:17">

        <comment type="block" pos:start="29:9" pos:end="35:11">/*

         * Load rom via fw_cfg instead of creating a rom bar,

         * for 0.11 compatibility.

         */</comment>

        <decl_stmt pos:start="37:9" pos:end="37:66"><decl pos:start="37:9" pos:end="37:65"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:17">class</name> <init pos:start="37:19" pos:end="37:65">= <expr pos:start="37:21" pos:end="37:65"><call pos:start="37:21" pos:end="37:65"><name pos:start="37:21" pos:end="37:32">pci_get_word</name><argument_list pos:start="37:33" pos:end="37:65">(<argument pos:start="37:34" pos:end="37:64"><expr pos:start="37:34" pos:end="37:64"><name pos:start="37:34" pos:end="37:45"><name pos:start="37:34" pos:end="37:37">pdev</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:45">config</name></name> <operator pos:start="37:47" pos:end="37:47">+</operator> <name pos:start="37:49" pos:end="37:64">PCI_CLASS_DEVICE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="39:9" pos:end="47:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:28">(<expr pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:17">class</name> <operator pos:start="39:19" pos:end="39:20">==</operator> <literal type="number" pos:start="39:22" pos:end="39:27">0x0300</literal></expr>)</condition> <block pos:start="39:30" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:39">

            <expr_stmt pos:start="41:13" pos:end="41:39"><expr pos:start="41:13" pos:end="41:38"><call pos:start="41:13" pos:end="41:38"><name pos:start="41:13" pos:end="41:23">rom_add_vga</name><argument_list pos:start="41:24" pos:end="41:38">(<argument pos:start="41:25" pos:end="41:37"><expr pos:start="41:25" pos:end="41:37"><name pos:start="41:25" pos:end="41:37"><name pos:start="41:25" pos:end="41:28">pdev</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:37">romfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="43:11" pos:end="47:9">else <block pos:start="43:16" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:46">

            <expr_stmt pos:start="45:13" pos:end="45:46"><expr pos:start="45:13" pos:end="45:45"><call pos:start="45:13" pos:end="45:45"><name pos:start="45:13" pos:end="45:26">rom_add_option</name><argument_list pos:start="45:27" pos:end="45:45">(<argument pos:start="45:28" pos:end="45:40"><expr pos:start="45:28" pos:end="45:40"><name pos:start="45:28" pos:end="45:40"><name pos:start="45:28" pos:end="45:31">pdev</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:40">romfile</name></name></expr></argument>, <argument pos:start="45:43" pos:end="45:44"><expr pos:start="45:43" pos:end="45:44"><operator pos:start="45:43" pos:end="45:43">-</operator><literal type="number" pos:start="45:44" pos:end="45:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:62"><expr pos:start="55:5" pos:end="55:61"><name pos:start="55:5" pos:end="55:8">path</name> <operator pos:start="55:10" pos:end="55:10">=</operator> <call pos:start="55:12" pos:end="55:61"><name pos:start="55:12" pos:end="55:25">qemu_find_file</name><argument_list pos:start="55:26" pos:end="55:61">(<argument pos:start="55:27" pos:end="55:45"><expr pos:start="55:27" pos:end="55:45"><name pos:start="55:27" pos:end="55:45">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="55:48" pos:end="55:60"><expr pos:start="55:48" pos:end="55:60"><name pos:start="55:48" pos:end="55:60"><name pos:start="55:48" pos:end="55:51">pdev</name><operator pos:start="55:52" pos:end="55:53">-&gt;</operator><name pos:start="55:54" pos:end="55:60">romfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:21">(<expr pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:12">path</name> <operator pos:start="57:14" pos:end="57:15">==</operator> <name pos:start="57:17" pos:end="57:20">NULL</name></expr>)</condition> <block pos:start="57:23" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:39">

        <expr_stmt pos:start="59:9" pos:end="59:39"><expr pos:start="59:9" pos:end="59:38"><name pos:start="59:9" pos:end="59:12">path</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <call pos:start="59:16" pos:end="59:38"><name pos:start="59:16" pos:end="59:23">g_strdup</name><argument_list pos:start="59:24" pos:end="59:38">(<argument pos:start="59:25" pos:end="59:37"><expr pos:start="59:25" pos:end="59:37"><name pos:start="59:25" pos:end="59:37"><name pos:start="59:25" pos:end="59:28">pdev</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:37">romfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:32"><expr pos:start="65:5" pos:end="65:31"><name pos:start="65:5" pos:end="65:8">size</name> <operator pos:start="65:10" pos:end="65:10">=</operator> <call pos:start="65:12" pos:end="65:31"><name pos:start="65:12" pos:end="65:25">get_image_size</name><argument_list pos:start="65:26" pos:end="65:31">(<argument pos:start="65:27" pos:end="65:30"><expr pos:start="65:27" pos:end="65:30"><name pos:start="65:27" pos:end="65:30">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="77:5"><if pos:start="67:5" pos:end="77:5">if <condition pos:start="67:8" pos:end="67:17">(<expr pos:start="67:9" pos:end="67:16"><name pos:start="67:9" pos:end="67:12">size</name> <operator pos:start="67:14" pos:end="67:14">&lt;</operator> <literal type="number" pos:start="67:16" pos:end="67:16">0</literal></expr>)</condition> <block pos:start="67:19" pos:end="77:5">{<block_content pos:start="69:9" pos:end="75:18">

        <expr_stmt pos:start="69:9" pos:end="71:50"><expr pos:start="69:9" pos:end="71:49"><call pos:start="69:9" pos:end="71:49"><name pos:start="69:9" pos:end="69:20">error_report</name><argument_list pos:start="69:21" pos:end="71:49">(<argument pos:start="69:22" pos:end="69:56"><expr pos:start="69:22" pos:end="69:56"><literal type="string" pos:start="69:22" pos:end="69:56">"%s: failed to find romfile \"%s\""</literal></expr></argument>,

                     <argument pos:start="71:22" pos:end="71:33"><expr pos:start="71:22" pos:end="71:33"><name pos:start="71:22" pos:end="71:33">__FUNCTION__</name></expr></argument>, <argument pos:start="71:36" pos:end="71:48"><expr pos:start="71:36" pos:end="71:48"><name pos:start="71:36" pos:end="71:48"><name pos:start="71:36" pos:end="71:39">pdev</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:48">romfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:21"><expr pos:start="73:9" pos:end="73:20"><call pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:14">g_free</name><argument_list pos:start="73:15" pos:end="73:20">(<argument pos:start="73:16" pos:end="73:19"><expr pos:start="73:16" pos:end="73:19"><name pos:start="73:16" pos:end="73:19">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:18">return <expr pos:start="75:16" pos:end="75:17"><operator pos:start="75:16" pos:end="75:16">-</operator><literal type="number" pos:start="75:17" pos:end="75:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="79:5" pos:end="83:5"><if pos:start="79:5" pos:end="83:5">if <condition pos:start="79:8" pos:end="79:26">(<expr pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:12">size</name> <operator pos:start="79:14" pos:end="79:14">&amp;</operator> <operator pos:start="79:16" pos:end="79:16">(</operator><name pos:start="79:17" pos:end="79:20">size</name> <operator pos:start="79:22" pos:end="79:22">-</operator> <literal type="number" pos:start="79:24" pos:end="79:24">1</literal><operator pos:start="79:25" pos:end="79:25">)</operator></expr>)</condition> <block pos:start="79:28" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:35">

        <expr_stmt pos:start="81:9" pos:end="81:35"><expr pos:start="81:9" pos:end="81:34"><name pos:start="81:9" pos:end="81:12">size</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <literal type="number" pos:start="81:16" pos:end="81:16">1</literal> <operator pos:start="81:18" pos:end="81:19">&lt;&lt;</operator> <call pos:start="81:21" pos:end="81:34"><name pos:start="81:21" pos:end="81:28">qemu_fls</name><argument_list pos:start="81:29" pos:end="81:34">(<argument pos:start="81:30" pos:end="81:33"><expr pos:start="81:30" pos:end="81:33"><name pos:start="81:30" pos:end="81:33">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:39"><expr pos:start="87:5" pos:end="87:38"><name pos:start="87:5" pos:end="87:8">vmsd</name> <operator pos:start="87:10" pos:end="87:10">=</operator> <call pos:start="87:12" pos:end="87:38"><name pos:start="87:12" pos:end="87:24">qdev_get_vmsd</name><argument_list pos:start="87:25" pos:end="87:38">(<argument pos:start="87:26" pos:end="87:37"><expr pos:start="87:26" pos:end="87:37"><call pos:start="87:26" pos:end="87:37"><name pos:start="87:26" pos:end="87:31">DEVICE</name><argument_list pos:start="87:32" pos:end="87:37">(<argument pos:start="87:33" pos:end="87:36"><expr pos:start="87:33" pos:end="87:36"><name pos:start="87:33" pos:end="87:36">pdev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="91:5" pos:end="99:5"><if pos:start="91:5" pos:end="95:5">if <condition pos:start="91:8" pos:end="91:13">(<expr pos:start="91:9" pos:end="91:12"><name pos:start="91:9" pos:end="91:12">vmsd</name></expr>)</condition> <block pos:start="91:15" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:59">

        <expr_stmt pos:start="93:9" pos:end="93:59"><expr pos:start="93:9" pos:end="93:58"><call pos:start="93:9" pos:end="93:58"><name pos:start="93:9" pos:end="93:16">snprintf</name><argument_list pos:start="93:17" pos:end="93:58">(<argument pos:start="93:18" pos:end="93:21"><expr pos:start="93:18" pos:end="93:21"><name pos:start="93:18" pos:end="93:21">name</name></expr></argument>, <argument pos:start="93:24" pos:end="93:35"><expr pos:start="93:24" pos:end="93:35"><sizeof pos:start="93:24" pos:end="93:35">sizeof<argument_list pos:start="93:30" pos:end="93:35">(<argument pos:start="93:31" pos:end="93:34"><expr pos:start="93:31" pos:end="93:34"><name pos:start="93:31" pos:end="93:34">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="93:38" pos:end="93:45"><expr pos:start="93:38" pos:end="93:45"><literal type="string" pos:start="93:38" pos:end="93:45">"%s.rom"</literal></expr></argument>, <argument pos:start="93:48" pos:end="93:57"><expr pos:start="93:48" pos:end="93:57"><name pos:start="93:48" pos:end="93:57"><name pos:start="93:48" pos:end="93:51">vmsd</name><operator pos:start="93:52" pos:end="93:53">-&gt;</operator><name pos:start="93:54" pos:end="93:57">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="99:5">else <block pos:start="95:12" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:82">

        <expr_stmt pos:start="97:9" pos:end="97:82"><expr pos:start="97:9" pos:end="97:81"><call pos:start="97:9" pos:end="97:81"><name pos:start="97:9" pos:end="97:16">snprintf</name><argument_list pos:start="97:17" pos:end="97:81">(<argument pos:start="97:18" pos:end="97:21"><expr pos:start="97:18" pos:end="97:21"><name pos:start="97:18" pos:end="97:21">name</name></expr></argument>, <argument pos:start="97:24" pos:end="97:35"><expr pos:start="97:24" pos:end="97:35"><sizeof pos:start="97:24" pos:end="97:35">sizeof<argument_list pos:start="97:30" pos:end="97:35">(<argument pos:start="97:31" pos:end="97:34"><expr pos:start="97:31" pos:end="97:34"><name pos:start="97:31" pos:end="97:34">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="97:38" pos:end="97:45"><expr pos:start="97:38" pos:end="97:45"><literal type="string" pos:start="97:38" pos:end="97:45">"%s.rom"</literal></expr></argument>, <argument pos:start="97:48" pos:end="97:80"><expr pos:start="97:48" pos:end="97:80"><call pos:start="97:48" pos:end="97:80"><name pos:start="97:48" pos:end="97:66">object_get_typename</name><argument_list pos:start="97:67" pos:end="97:80">(<argument pos:start="97:68" pos:end="97:79"><expr pos:start="97:68" pos:end="97:79"><call pos:start="97:68" pos:end="97:79"><name pos:start="97:68" pos:end="97:73">OBJECT</name><argument_list pos:start="97:74" pos:end="97:79">(<argument pos:start="97:75" pos:end="97:78"><expr pos:start="97:75" pos:end="97:78"><name pos:start="97:75" pos:end="97:78">pdev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:25"><expr pos:start="101:5" pos:end="101:24"><name pos:start="101:5" pos:end="101:17"><name pos:start="101:5" pos:end="101:8">pdev</name><operator pos:start="101:9" pos:end="101:10">-&gt;</operator><name pos:start="101:11" pos:end="101:17">has_rom</name></name> <operator pos:start="101:19" pos:end="101:19">=</operator> <name pos:start="101:21" pos:end="101:24">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:51"><expr pos:start="103:5" pos:end="103:50"><call pos:start="103:5" pos:end="103:50"><name pos:start="103:5" pos:end="103:26">memory_region_init_ram</name><argument_list pos:start="103:27" pos:end="103:50">(<argument pos:start="103:28" pos:end="103:37"><expr pos:start="103:28" pos:end="103:37"><operator pos:start="103:28" pos:end="103:28">&amp;</operator><name pos:start="103:29" pos:end="103:37"><name pos:start="103:29" pos:end="103:32">pdev</name><operator pos:start="103:33" pos:end="103:34">-&gt;</operator><name pos:start="103:35" pos:end="103:37">rom</name></name></expr></argument>, <argument pos:start="103:40" pos:end="103:43"><expr pos:start="103:40" pos:end="103:43"><name pos:start="103:40" pos:end="103:43">name</name></expr></argument>, <argument pos:start="103:46" pos:end="103:49"><expr pos:start="103:46" pos:end="103:49"><name pos:start="103:46" pos:end="103:49">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:50"><expr pos:start="105:5" pos:end="105:49"><call pos:start="105:5" pos:end="105:49"><name pos:start="105:5" pos:end="105:24">vmstate_register_ram</name><argument_list pos:start="105:25" pos:end="105:49">(<argument pos:start="105:26" pos:end="105:35"><expr pos:start="105:26" pos:end="105:35"><operator pos:start="105:26" pos:end="105:26">&amp;</operator><name pos:start="105:27" pos:end="105:35"><name pos:start="105:27" pos:end="105:30">pdev</name><operator pos:start="105:31" pos:end="105:32">-&gt;</operator><name pos:start="105:33" pos:end="105:35">rom</name></name></expr></argument>, <argument pos:start="105:38" pos:end="105:48"><expr pos:start="105:38" pos:end="105:48"><operator pos:start="105:38" pos:end="105:38">&amp;</operator><name pos:start="105:39" pos:end="105:48"><name pos:start="105:39" pos:end="105:42">pdev</name><operator pos:start="105:43" pos:end="105:44">-&gt;</operator><name pos:start="105:45" pos:end="105:48">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:48"><expr pos:start="107:5" pos:end="107:47"><name pos:start="107:5" pos:end="107:7">ptr</name> <operator pos:start="107:9" pos:end="107:9">=</operator> <call pos:start="107:11" pos:end="107:47"><name pos:start="107:11" pos:end="107:35">memory_region_get_ram_ptr</name><argument_list pos:start="107:36" pos:end="107:47">(<argument pos:start="107:37" pos:end="107:46"><expr pos:start="107:37" pos:end="107:46"><operator pos:start="107:37" pos:end="107:37">&amp;</operator><name pos:start="107:38" pos:end="107:46"><name pos:start="107:38" pos:end="107:41">pdev</name><operator pos:start="107:42" pos:end="107:43">-&gt;</operator><name pos:start="107:44" pos:end="107:46">rom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:26"><expr pos:start="109:5" pos:end="109:25"><call pos:start="109:5" pos:end="109:25"><name pos:start="109:5" pos:end="109:14">load_image</name><argument_list pos:start="109:15" pos:end="109:25">(<argument pos:start="109:16" pos:end="109:19"><expr pos:start="109:16" pos:end="109:19"><name pos:start="109:16" pos:end="109:19">path</name></expr></argument>, <argument pos:start="109:22" pos:end="109:24"><expr pos:start="109:22" pos:end="109:24"><name pos:start="109:22" pos:end="109:24">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:17"><expr pos:start="111:5" pos:end="111:16"><call pos:start="111:5" pos:end="111:16"><name pos:start="111:5" pos:end="111:10">g_free</name><argument_list pos:start="111:11" pos:end="111:16">(<argument pos:start="111:12" pos:end="111:15"><expr pos:start="111:12" pos:end="111:15"><name pos:start="111:12" pos:end="111:15">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:23">(<expr pos:start="115:9" pos:end="115:22"><name pos:start="115:9" pos:end="115:22">is_default_rom</name></expr>)</condition> <block pos:start="115:25" pos:end="121:5">{<block_content pos:start="119:9" pos:end="119:39">

        <comment type="block" pos:start="117:9" pos:end="117:70">/* Only the default rom images will be patched (if needed). */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:39"><expr pos:start="119:9" pos:end="119:38"><call pos:start="119:9" pos:end="119:38"><name pos:start="119:9" pos:end="119:21">pci_patch_ids</name><argument_list pos:start="119:22" pos:end="119:38">(<argument pos:start="119:23" pos:end="119:26"><expr pos:start="119:23" pos:end="119:26"><name pos:start="119:23" pos:end="119:26">pdev</name></expr></argument>, <argument pos:start="119:29" pos:end="119:31"><expr pos:start="119:29" pos:end="119:31"><name pos:start="119:29" pos:end="119:31">ptr</name></expr></argument>, <argument pos:start="119:34" pos:end="119:37"><expr pos:start="119:34" pos:end="119:37"><name pos:start="119:34" pos:end="119:37">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:26"><expr pos:start="125:5" pos:end="125:25"><call pos:start="125:5" pos:end="125:25"><name pos:start="125:5" pos:end="125:20">qemu_put_ram_ptr</name><argument_list pos:start="125:21" pos:end="125:25">(<argument pos:start="125:22" pos:end="125:24"><expr pos:start="125:22" pos:end="125:24"><name pos:start="125:22" pos:end="125:24">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:56"><expr pos:start="129:5" pos:end="129:55"><call pos:start="129:5" pos:end="129:55"><name pos:start="129:5" pos:end="129:20">pci_register_bar</name><argument_list pos:start="129:21" pos:end="129:55">(<argument pos:start="129:22" pos:end="129:25"><expr pos:start="129:22" pos:end="129:25"><name pos:start="129:22" pos:end="129:25">pdev</name></expr></argument>, <argument pos:start="129:28" pos:end="129:39"><expr pos:start="129:28" pos:end="129:39"><name pos:start="129:28" pos:end="129:39">PCI_ROM_SLOT</name></expr></argument>, <argument pos:start="129:42" pos:end="129:42"><expr pos:start="129:42" pos:end="129:42"><literal type="number" pos:start="129:42" pos:end="129:42">0</literal></expr></argument>, <argument pos:start="129:45" pos:end="129:54"><expr pos:start="129:45" pos:end="129:54"><operator pos:start="129:45" pos:end="129:45">&amp;</operator><name pos:start="129:46" pos:end="129:54"><name pos:start="129:46" pos:end="129:49">pdev</name><operator pos:start="129:50" pos:end="129:51">-&gt;</operator><name pos:start="129:52" pos:end="129:54">rom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="133:5" pos:end="133:13">return <expr pos:start="133:12" pos:end="133:12"><literal type="number" pos:start="133:12" pos:end="133:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
