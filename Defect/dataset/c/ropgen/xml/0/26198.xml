<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26198.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">omap_id_write</name><parameter_list pos:start="1:26" pos:end="3:56">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:63"><decl pos:start="1:41" pos:end="1:63"><type pos:start="1:41" pos:end="1:63"><name pos:start="1:41" pos:end="1:58">target_phys_addr_t</name></type> <name pos:start="1:60" pos:end="1:63">addr</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:40"><decl pos:start="3:27" pos:end="3:40"><type pos:start="3:27" pos:end="3:40"><name pos:start="3:27" pos:end="3:34">uint64_t</name></type> <name pos:start="3:36" pos:end="3:40">value</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:55"><decl pos:start="3:43" pos:end="3:55"><type pos:start="3:43" pos:end="3:55"><name pos:start="3:43" pos:end="3:50">unsigned</name></type> <name pos:start="3:52" pos:end="3:55">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="17:1">{<block_content pos:start="7:5" pos:end="15:23">

    <if_stmt pos:start="7:5" pos:end="11:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:18">(<expr pos:start="7:9" pos:end="7:17"><name pos:start="7:9" pos:end="7:12">size</name> <operator pos:start="7:14" pos:end="7:15">!=</operator> <literal type="number" pos:start="7:17" pos:end="7:17">4</literal></expr>)</condition> <block pos:start="7:20" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:58">

        <return pos:start="9:9" pos:end="9:58">return <expr pos:start="9:16" pos:end="9:57"><call pos:start="9:16" pos:end="9:57"><name pos:start="9:16" pos:end="9:36">omap_badwidth_write32</name><argument_list pos:start="9:37" pos:end="9:57">(<argument pos:start="9:38" pos:end="9:43"><expr pos:start="9:38" pos:end="9:43"><name pos:start="9:38" pos:end="9:43">opaque</name></expr></argument>, <argument pos:start="9:46" pos:end="9:49"><expr pos:start="9:46" pos:end="9:49"><name pos:start="9:46" pos:end="9:49">addr</name></expr></argument>, <argument pos:start="9:52" pos:end="9:56"><expr pos:start="9:52" pos:end="9:56"><name pos:start="9:52" pos:end="9:56">value</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><call pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:16">OMAP_BAD_REG</name><argument_list pos:start="15:17" pos:end="15:22">(<argument pos:start="15:18" pos:end="15:21"><expr pos:start="15:18" pos:end="15:21"><name pos:start="15:18" pos:end="15:21">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
