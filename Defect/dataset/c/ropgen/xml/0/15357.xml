<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15357.c" pos:tabs="8"><function pos:start="1:1" pos:end="213:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">do_transmit_packets</name><parameter_list pos:start="1:32" pos:end="1:48">(<parameter pos:start="1:33" pos:end="1:47"><decl pos:start="1:33" pos:end="1:47"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:44">dp8393xState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="213:1">{<block_content pos:start="5:5" pos:end="211:26">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint16_t</name></type> <name pos:start="5:14" pos:end="5:21"><name pos:start="5:14" pos:end="5:17">data</name><index pos:start="5:18" pos:end="5:21">[<expr pos:start="5:19" pos:end="5:20"><literal type="number" pos:start="5:19" pos:end="5:20">12</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">width</name></decl>, <decl pos:start="7:16" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:19">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">tx_len</name></decl>, <decl pos:start="9:17" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:19">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint16_t</name></type> <name pos:start="11:14" pos:end="11:14">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:56"><expr pos:start="15:5" pos:end="15:55"><name pos:start="15:5" pos:end="15:9">width</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <ternary pos:start="15:13" pos:end="15:55"><condition pos:start="15:13" pos:end="15:49"><expr pos:start="15:13" pos:end="15:47"><operator pos:start="15:13" pos:end="15:13">(</operator><name pos:start="15:14" pos:end="15:31"><name pos:start="15:14" pos:end="15:14">s</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:20">regs</name><index pos:start="15:21" pos:end="15:31">[<expr pos:start="15:22" pos:end="15:30"><name pos:start="15:22" pos:end="15:30">SONIC_DCR</name></expr>]</index></name> <operator pos:start="15:33" pos:end="15:33">&amp;</operator> <name pos:start="15:35" pos:end="15:46">SONIC_DCR_DW</name><operator pos:start="15:47" pos:end="15:47">)</operator></expr> ?</condition><then pos:start="15:51" pos:end="15:51"> <expr pos:start="15:51" pos:end="15:51"><literal type="number" pos:start="15:51" pos:end="15:51">2</literal></expr> </then><else pos:start="15:53" pos:end="15:55">: <expr pos:start="15:55" pos:end="15:55"><literal type="number" pos:start="15:55" pos:end="15:55">1</literal></expr></else></ternary></expr>;</expr_stmt>



    <while pos:start="19:5" pos:end="201:5">while <condition pos:start="19:11" pos:end="19:13">(<expr pos:start="19:12" pos:end="19:12"><literal type="number" pos:start="19:12" pos:end="19:12">1</literal></expr>)</condition> <block pos:start="19:15" pos:end="201:5">{<block_content pos:start="23:9" pos:end="199:9">

        <comment type="block" pos:start="21:9" pos:end="21:25">/* Read memory */</comment>

        <expr_stmt pos:start="23:9" pos:end="25:67"><expr pos:start="23:9" pos:end="25:66"><call pos:start="23:9" pos:end="25:66"><name pos:start="23:9" pos:end="23:15">DPRINTF</name><argument_list pos:start="23:16" pos:end="25:66">(<argument pos:start="23:17" pos:end="23:43"><expr pos:start="23:17" pos:end="23:43"><literal type="string" pos:start="23:17" pos:end="23:43">"Transmit packet at %08x\n"</literal></expr></argument>,

                <argument pos:start="25:17" pos:end="25:65"><expr pos:start="25:17" pos:end="25:65"><operator pos:start="25:17" pos:end="25:17">(</operator><name pos:start="25:18" pos:end="25:36"><name pos:start="25:18" pos:end="25:18">s</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:24">regs</name><index pos:start="25:25" pos:end="25:36">[<expr pos:start="25:26" pos:end="25:35"><name pos:start="25:26" pos:end="25:35">SONIC_UTDA</name></expr>]</index></name> <operator pos:start="25:38" pos:end="25:39">&lt;&lt;</operator> <literal type="number" pos:start="25:41" pos:end="25:42">16</literal><operator pos:start="25:43" pos:end="25:43">)</operator> <operator pos:start="25:45" pos:end="25:45">|</operator> <name pos:start="25:47" pos:end="25:65"><name pos:start="25:47" pos:end="25:47">s</name><operator pos:start="25:48" pos:end="25:49">-&gt;</operator><name pos:start="25:50" pos:end="25:53">regs</name><index pos:start="25:54" pos:end="25:65">[<expr pos:start="25:55" pos:end="25:64"><name pos:start="25:55" pos:end="25:64">SONIC_CTDA</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:44"><expr pos:start="27:9" pos:end="27:43"><name pos:start="27:9" pos:end="27:12">size</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <sizeof pos:start="27:16" pos:end="27:31">sizeof<argument_list pos:start="27:22" pos:end="27:31">(<argument pos:start="27:23" pos:end="27:30"><expr pos:start="27:23" pos:end="27:30"><name pos:start="27:23" pos:end="27:30">uint16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="27:33" pos:end="27:33">*</operator> <literal type="number" pos:start="27:35" pos:end="27:35">6</literal> <operator pos:start="27:37" pos:end="27:37">*</operator> <name pos:start="27:39" pos:end="27:43">width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:50"><expr pos:start="29:9" pos:end="29:49"><name pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:15">regs</name><index pos:start="29:16" pos:end="29:27">[<expr pos:start="29:17" pos:end="29:26"><name pos:start="29:17" pos:end="29:26">SONIC_TTDA</name></expr>]</index></name> <operator pos:start="29:29" pos:end="29:29">=</operator> <name pos:start="29:31" pos:end="29:49"><name pos:start="29:31" pos:end="29:31">s</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:37">regs</name><index pos:start="29:38" pos:end="29:49">[<expr pos:start="29:39" pos:end="29:48"><name pos:start="29:39" pos:end="29:48">SONIC_CTDA</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="35:38"><expr pos:start="31:9" pos:end="35:37"><call pos:start="31:9" pos:end="35:37"><name pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:20">memory_rw</name></name><argument_list pos:start="31:21" pos:end="35:37">(<argument pos:start="31:22" pos:end="31:34"><expr pos:start="31:22" pos:end="31:34"><name pos:start="31:22" pos:end="31:34"><name pos:start="31:22" pos:end="31:22">s</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:34">mem_opaque</name></name></expr></argument>,

            <argument pos:start="33:13" pos:end="33:90"><expr pos:start="33:13" pos:end="33:90"><operator pos:start="33:13" pos:end="33:13">(</operator><operator pos:start="33:14" pos:end="33:14">(</operator><name pos:start="33:15" pos:end="33:33"><name pos:start="33:15" pos:end="33:15">s</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:21">regs</name><index pos:start="33:22" pos:end="33:33">[<expr pos:start="33:23" pos:end="33:32"><name pos:start="33:23" pos:end="33:32">SONIC_UTDA</name></expr>]</index></name> <operator pos:start="33:35" pos:end="33:36">&lt;&lt;</operator> <literal type="number" pos:start="33:38" pos:end="33:39">16</literal><operator pos:start="33:40" pos:end="33:40">)</operator> <operator pos:start="33:42" pos:end="33:42">|</operator> <name pos:start="33:44" pos:end="33:62"><name pos:start="33:44" pos:end="33:44">s</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:50">regs</name><index pos:start="33:51" pos:end="33:62">[<expr pos:start="33:52" pos:end="33:61"><name pos:start="33:52" pos:end="33:61">SONIC_TTDA</name></expr>]</index></name><operator pos:start="33:63" pos:end="33:63">)</operator> <operator pos:start="33:65" pos:end="33:65">+</operator> <sizeof pos:start="33:67" pos:end="33:82">sizeof<argument_list pos:start="33:73" pos:end="33:82">(<argument pos:start="33:74" pos:end="33:81"><expr pos:start="33:74" pos:end="33:81"><name pos:start="33:74" pos:end="33:81">uint16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="33:84" pos:end="33:84">*</operator> <name pos:start="33:86" pos:end="33:90">width</name></expr></argument>,

            <argument pos:start="35:13" pos:end="35:27"><expr pos:start="35:13" pos:end="35:27"><operator pos:start="35:13" pos:end="35:13">(</operator><name pos:start="35:14" pos:end="35:20">uint8_t</name> <operator pos:start="35:22" pos:end="35:22">*</operator><operator pos:start="35:23" pos:end="35:23">)</operator><name pos:start="35:24" pos:end="35:27">data</name></expr></argument>, <argument pos:start="35:30" pos:end="35:33"><expr pos:start="35:30" pos:end="35:33"><name pos:start="35:30" pos:end="35:33">size</name></expr></argument>, <argument pos:start="35:36" pos:end="35:36"><expr pos:start="35:36" pos:end="35:36"><literal type="number" pos:start="35:36" pos:end="35:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:19"><expr pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:14">tx_len</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="41:9" pos:end="41:30">/* Update registers */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:54"><expr pos:start="43:9" pos:end="43:53"><name pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:15">regs</name><index pos:start="43:16" pos:end="43:26">[<expr pos:start="43:17" pos:end="43:25"><name pos:start="43:17" pos:end="43:25">SONIC_TCR</name></expr>]</index></name> <operator pos:start="43:28" pos:end="43:28">=</operator> <name pos:start="43:30" pos:end="43:44"><name pos:start="43:30" pos:end="43:33">data</name><index pos:start="43:34" pos:end="43:44">[<expr pos:start="43:35" pos:end="43:43"><literal type="number" pos:start="43:35" pos:end="43:35">0</literal> <operator pos:start="43:37" pos:end="43:37">*</operator> <name pos:start="43:39" pos:end="43:43">width</name></expr>]</index></name> <operator pos:start="43:46" pos:end="43:46">&amp;</operator> <literal type="number" pos:start="43:48" pos:end="43:53">0xf000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:45"><expr pos:start="45:9" pos:end="45:44"><name pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:15">regs</name><index pos:start="45:16" pos:end="45:26">[<expr pos:start="45:17" pos:end="45:25"><name pos:start="45:17" pos:end="45:25">SONIC_TPS</name></expr>]</index></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <name pos:start="45:30" pos:end="45:44"><name pos:start="45:30" pos:end="45:33">data</name><index pos:start="45:34" pos:end="45:44">[<expr pos:start="45:35" pos:end="45:43"><literal type="number" pos:start="45:35" pos:end="45:35">1</literal> <operator pos:start="45:37" pos:end="45:37">*</operator> <name pos:start="45:39" pos:end="45:43">width</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:45"><expr pos:start="47:9" pos:end="47:44"><name pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:15">regs</name><index pos:start="47:16" pos:end="47:26">[<expr pos:start="47:17" pos:end="47:25"><name pos:start="47:17" pos:end="47:25">SONIC_TFC</name></expr>]</index></name> <operator pos:start="47:28" pos:end="47:28">=</operator> <name pos:start="47:30" pos:end="47:44"><name pos:start="47:30" pos:end="47:33">data</name><index pos:start="47:34" pos:end="47:44">[<expr pos:start="47:35" pos:end="47:43"><literal type="number" pos:start="47:35" pos:end="47:35">2</literal> <operator pos:start="47:37" pos:end="47:37">*</operator> <name pos:start="47:39" pos:end="47:43">width</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:46"><expr pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:15">regs</name><index pos:start="49:16" pos:end="49:27">[<expr pos:start="49:17" pos:end="49:26"><name pos:start="49:17" pos:end="49:26">SONIC_TSA0</name></expr>]</index></name> <operator pos:start="49:29" pos:end="49:29">=</operator> <name pos:start="49:31" pos:end="49:45"><name pos:start="49:31" pos:end="49:34">data</name><index pos:start="49:35" pos:end="49:45">[<expr pos:start="49:36" pos:end="49:44"><literal type="number" pos:start="49:36" pos:end="49:36">3</literal> <operator pos:start="49:38" pos:end="49:38">*</operator> <name pos:start="49:40" pos:end="49:44">width</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:46"><expr pos:start="51:9" pos:end="51:45"><name pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:15">regs</name><index pos:start="51:16" pos:end="51:27">[<expr pos:start="51:17" pos:end="51:26"><name pos:start="51:17" pos:end="51:26">SONIC_TSA1</name></expr>]</index></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <name pos:start="51:31" pos:end="51:45"><name pos:start="51:31" pos:end="51:34">data</name><index pos:start="51:35" pos:end="51:45">[<expr pos:start="51:36" pos:end="51:44"><literal type="number" pos:start="51:36" pos:end="51:36">4</literal> <operator pos:start="51:38" pos:end="51:38">*</operator> <name pos:start="51:40" pos:end="51:44">width</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:45"><expr pos:start="53:9" pos:end="53:44"><name pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:15">regs</name><index pos:start="53:16" pos:end="53:26">[<expr pos:start="53:17" pos:end="53:25"><name pos:start="53:17" pos:end="53:25">SONIC_TFS</name></expr>]</index></name> <operator pos:start="53:28" pos:end="53:28">=</operator> <name pos:start="53:30" pos:end="53:44"><name pos:start="53:30" pos:end="53:33">data</name><index pos:start="53:34" pos:end="53:44">[<expr pos:start="53:35" pos:end="53:43"><literal type="number" pos:start="53:35" pos:end="53:35">5</literal> <operator pos:start="53:37" pos:end="53:37">*</operator> <name pos:start="53:39" pos:end="53:43">width</name></expr>]</index></name></expr>;</expr_stmt>



        <comment type="block" pos:start="57:9" pos:end="57:43">/* Handle programmable interrupt */</comment>

        <if_stmt pos:start="59:9" pos:end="67:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:48">(<expr pos:start="59:13" pos:end="59:47"><name pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:19">regs</name><index pos:start="59:20" pos:end="59:30">[<expr pos:start="59:21" pos:end="59:29"><name pos:start="59:21" pos:end="59:29">SONIC_TCR</name></expr>]</index></name> <operator pos:start="59:32" pos:end="59:32">&amp;</operator> <name pos:start="59:34" pos:end="59:47">SONIC_TCR_PINT</name></expr>)</condition> <block pos:start="59:50" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:49">

            <expr_stmt pos:start="61:13" pos:end="61:49"><expr pos:start="61:13" pos:end="61:48"><name pos:start="61:13" pos:end="61:30"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:19">regs</name><index pos:start="61:20" pos:end="61:30">[<expr pos:start="61:21" pos:end="61:29"><name pos:start="61:21" pos:end="61:29">SONIC_ISR</name></expr>]</index></name> <operator pos:start="61:32" pos:end="61:33">|=</operator> <name pos:start="61:35" pos:end="61:48">SONIC_ISR_PINT</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="67:9">else <block pos:start="63:16" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:50">

            <expr_stmt pos:start="65:13" pos:end="65:50"><expr pos:start="65:13" pos:end="65:49"><name pos:start="65:13" pos:end="65:30"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:19">regs</name><index pos:start="65:20" pos:end="65:30">[<expr pos:start="65:21" pos:end="65:29"><name pos:start="65:21" pos:end="65:29">SONIC_ISR</name></expr>]</index></name> <operator pos:start="65:32" pos:end="65:33">&amp;=</operator> <operator pos:start="65:35" pos:end="65:35">~</operator><name pos:start="65:36" pos:end="65:49">SONIC_ISR_PINT</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <for pos:start="71:9" pos:end="115:9">for <control pos:start="71:13" pos:end="71:45">(<init pos:start="71:14" pos:end="71:19"><expr pos:start="71:14" pos:end="71:18"><name pos:start="71:14" pos:end="71:14">i</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <literal type="number" pos:start="71:18" pos:end="71:18">0</literal></expr>;</init> <condition pos:start="71:21" pos:end="71:43"><expr pos:start="71:21" pos:end="71:42"><name pos:start="71:21" pos:end="71:21">i</name> <operator pos:start="71:23" pos:end="71:23">&lt;</operator> <name pos:start="71:25" pos:end="71:42"><name pos:start="71:25" pos:end="71:25">s</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:31">regs</name><index pos:start="71:32" pos:end="71:42">[<expr pos:start="71:33" pos:end="71:41"><name pos:start="71:33" pos:end="71:41">SONIC_TFC</name></expr>]</index></name></expr>;</condition> <incr/>)</control> <block pos:start="71:47" pos:end="115:9">{<block_content pos:start="75:13" pos:end="113:13">

            <comment type="block" pos:start="73:13" pos:end="73:33">/* Append fragment */</comment>

            <expr_stmt pos:start="75:13" pos:end="75:37"><expr pos:start="75:13" pos:end="75:36"><name pos:start="75:13" pos:end="75:15">len</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <name pos:start="75:19" pos:end="75:36"><name pos:start="75:19" pos:end="75:19">s</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:25">regs</name><index pos:start="75:26" pos:end="75:36">[<expr pos:start="75:27" pos:end="75:35"><name pos:start="75:27" pos:end="75:35">SONIC_TFS</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="77:13" pos:end="81:13"><if pos:start="77:13" pos:end="81:13">if <condition pos:start="77:16" pos:end="77:52">(<expr pos:start="77:17" pos:end="77:51"><name pos:start="77:17" pos:end="77:22">tx_len</name> <operator pos:start="77:24" pos:end="77:24">+</operator> <name pos:start="77:26" pos:end="77:28">len</name> <operator pos:start="77:30" pos:end="77:30">&gt;</operator> <sizeof pos:start="77:32" pos:end="77:51">sizeof<argument_list pos:start="77:38" pos:end="77:51">(<argument pos:start="77:39" pos:end="77:50"><expr pos:start="77:39" pos:end="77:50"><name pos:start="77:39" pos:end="77:50"><name pos:start="77:39" pos:end="77:39">s</name><operator pos:start="77:40" pos:end="77:41">-&gt;</operator><name pos:start="77:42" pos:end="77:50">tx_buffer</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="77:54" pos:end="81:13">{<block_content pos:start="79:17" pos:end="79:52">

                <expr_stmt pos:start="79:17" pos:end="79:52"><expr pos:start="79:17" pos:end="79:51"><name pos:start="79:17" pos:end="79:19">len</name> <operator pos:start="79:21" pos:end="79:21">=</operator> <sizeof pos:start="79:23" pos:end="79:42">sizeof<argument_list pos:start="79:29" pos:end="79:42">(<argument pos:start="79:30" pos:end="79:41"><expr pos:start="79:30" pos:end="79:41"><name pos:start="79:30" pos:end="79:41"><name pos:start="79:30" pos:end="79:30">s</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:41">tx_buffer</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="79:44" pos:end="79:44">-</operator> <name pos:start="79:46" pos:end="79:51">tx_len</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="83:13" pos:end="87:47"><expr pos:start="83:13" pos:end="87:46"><call pos:start="83:13" pos:end="87:46"><name pos:start="83:13" pos:end="83:24"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:24">memory_rw</name></name><argument_list pos:start="83:25" pos:end="87:46">(<argument pos:start="83:26" pos:end="83:38"><expr pos:start="83:26" pos:end="83:38"><name pos:start="83:26" pos:end="83:38"><name pos:start="83:26" pos:end="83:26">s</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:38">mem_opaque</name></name></expr></argument>,

                <argument pos:start="85:17" pos:end="85:65"><expr pos:start="85:17" pos:end="85:65"><operator pos:start="85:17" pos:end="85:17">(</operator><name pos:start="85:18" pos:end="85:36"><name pos:start="85:18" pos:end="85:18">s</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:24">regs</name><index pos:start="85:25" pos:end="85:36">[<expr pos:start="85:26" pos:end="85:35"><name pos:start="85:26" pos:end="85:35">SONIC_TSA1</name></expr>]</index></name> <operator pos:start="85:38" pos:end="85:39">&lt;&lt;</operator> <literal type="number" pos:start="85:41" pos:end="85:42">16</literal><operator pos:start="85:43" pos:end="85:43">)</operator> <operator pos:start="85:45" pos:end="85:45">|</operator> <name pos:start="85:47" pos:end="85:65"><name pos:start="85:47" pos:end="85:47">s</name><operator pos:start="85:48" pos:end="85:49">-&gt;</operator><name pos:start="85:50" pos:end="85:53">regs</name><index pos:start="85:54" pos:end="85:65">[<expr pos:start="85:55" pos:end="85:64"><name pos:start="85:55" pos:end="85:64">SONIC_TSA0</name></expr>]</index></name></expr></argument>,

                <argument pos:start="87:17" pos:end="87:37"><expr pos:start="87:17" pos:end="87:37"><operator pos:start="87:17" pos:end="87:17">&amp;</operator><name pos:start="87:18" pos:end="87:37"><name pos:start="87:18" pos:end="87:18">s</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:29">tx_buffer</name><index pos:start="87:30" pos:end="87:37">[<expr pos:start="87:31" pos:end="87:36"><name pos:start="87:31" pos:end="87:36">tx_len</name></expr>]</index></name></expr></argument>, <argument pos:start="87:40" pos:end="87:42"><expr pos:start="87:40" pos:end="87:42"><name pos:start="87:40" pos:end="87:42">len</name></expr></argument>, <argument pos:start="87:45" pos:end="87:45"><expr pos:start="87:45" pos:end="87:45"><literal type="number" pos:start="87:45" pos:end="87:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:26"><expr pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:18">tx_len</name> <operator pos:start="89:20" pos:end="89:21">+=</operator> <name pos:start="89:23" pos:end="89:25">len</name></expr>;</expr_stmt>



            <expr_stmt pos:start="93:13" pos:end="93:16"><expr pos:start="93:13" pos:end="93:15"><name pos:start="93:13" pos:end="93:13">i</name><operator pos:start="93:14" pos:end="93:15">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="113:13"><if pos:start="95:13" pos:end="113:13">if <condition pos:start="95:16" pos:end="95:40">(<expr pos:start="95:17" pos:end="95:39"><name pos:start="95:17" pos:end="95:17">i</name> <operator pos:start="95:19" pos:end="95:20">!=</operator> <name pos:start="95:22" pos:end="95:39"><name pos:start="95:22" pos:end="95:22">s</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:28">regs</name><index pos:start="95:29" pos:end="95:39">[<expr pos:start="95:30" pos:end="95:38"><name pos:start="95:30" pos:end="95:38">SONIC_TFC</name></expr>]</index></name></expr>)</condition> <block pos:start="95:42" pos:end="113:13">{<block_content pos:start="99:17" pos:end="111:53">

                <comment type="block" pos:start="97:17" pos:end="97:48">/* Read next fragment details */</comment>

                <expr_stmt pos:start="99:17" pos:end="99:52"><expr pos:start="99:17" pos:end="99:51"><name pos:start="99:17" pos:end="99:20">size</name> <operator pos:start="99:22" pos:end="99:22">=</operator> <sizeof pos:start="99:24" pos:end="99:39">sizeof<argument_list pos:start="99:30" pos:end="99:39">(<argument pos:start="99:31" pos:end="99:38"><expr pos:start="99:31" pos:end="99:38"><name pos:start="99:31" pos:end="99:38">uint16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="99:41" pos:end="99:41">*</operator> <literal type="number" pos:start="99:43" pos:end="99:43">3</literal> <operator pos:start="99:45" pos:end="99:45">*</operator> <name pos:start="99:47" pos:end="99:51">width</name></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="105:46"><expr pos:start="101:17" pos:end="105:45"><call pos:start="101:17" pos:end="105:45"><name pos:start="101:17" pos:end="101:28"><name pos:start="101:17" pos:end="101:17">s</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:28">memory_rw</name></name><argument_list pos:start="101:29" pos:end="105:45">(<argument pos:start="101:30" pos:end="101:42"><expr pos:start="101:30" pos:end="101:42"><name pos:start="101:30" pos:end="101:42"><name pos:start="101:30" pos:end="101:30">s</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:42">mem_opaque</name></name></expr></argument>,

                    <argument pos:start="103:21" pos:end="103:112"><expr pos:start="103:21" pos:end="103:112"><operator pos:start="103:21" pos:end="103:21">(</operator><operator pos:start="103:22" pos:end="103:22">(</operator><name pos:start="103:23" pos:end="103:41"><name pos:start="103:23" pos:end="103:23">s</name><operator pos:start="103:24" pos:end="103:25">-&gt;</operator><name pos:start="103:26" pos:end="103:29">regs</name><index pos:start="103:30" pos:end="103:41">[<expr pos:start="103:31" pos:end="103:40"><name pos:start="103:31" pos:end="103:40">SONIC_UTDA</name></expr>]</index></name> <operator pos:start="103:43" pos:end="103:44">&lt;&lt;</operator> <literal type="number" pos:start="103:46" pos:end="103:47">16</literal><operator pos:start="103:48" pos:end="103:48">)</operator> <operator pos:start="103:50" pos:end="103:50">|</operator> <name pos:start="103:52" pos:end="103:70"><name pos:start="103:52" pos:end="103:52">s</name><operator pos:start="103:53" pos:end="103:54">-&gt;</operator><name pos:start="103:55" pos:end="103:58">regs</name><index pos:start="103:59" pos:end="103:70">[<expr pos:start="103:60" pos:end="103:69"><name pos:start="103:60" pos:end="103:69">SONIC_TTDA</name></expr>]</index></name><operator pos:start="103:71" pos:end="103:71">)</operator> <operator pos:start="103:73" pos:end="103:73">+</operator> <sizeof pos:start="103:75" pos:end="103:90">sizeof<argument_list pos:start="103:81" pos:end="103:90">(<argument pos:start="103:82" pos:end="103:89"><expr pos:start="103:82" pos:end="103:89"><name pos:start="103:82" pos:end="103:89">uint16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="103:92" pos:end="103:92">*</operator> <operator pos:start="103:94" pos:end="103:94">(</operator><literal type="number" pos:start="103:95" pos:end="103:97">4</literal> <operator pos:start="103:97" pos:end="103:97">+</operator> <literal type="number" pos:start="103:99" pos:end="103:99">3</literal> <operator pos:start="103:101" pos:end="103:101">*</operator> <name pos:start="103:103" pos:end="103:103">i</name><operator pos:start="103:104" pos:end="103:104">)</operator> <operator pos:start="103:106" pos:end="103:106">*</operator> <name pos:start="103:108" pos:end="103:112">width</name></expr></argument>,

                    <argument pos:start="105:21" pos:end="105:35"><expr pos:start="105:21" pos:end="105:35"><operator pos:start="105:21" pos:end="105:21">(</operator><name pos:start="105:22" pos:end="105:28">uint8_t</name> <operator pos:start="105:30" pos:end="105:30">*</operator><operator pos:start="105:31" pos:end="105:31">)</operator><name pos:start="105:32" pos:end="105:35">data</name></expr></argument>, <argument pos:start="105:38" pos:end="105:41"><expr pos:start="105:38" pos:end="105:41"><name pos:start="105:38" pos:end="105:41">size</name></expr></argument>, <argument pos:start="105:44" pos:end="105:44"><expr pos:start="105:44" pos:end="105:44"><literal type="number" pos:start="105:44" pos:end="105:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:54"><expr pos:start="107:17" pos:end="107:53"><name pos:start="107:17" pos:end="107:35"><name pos:start="107:17" pos:end="107:17">s</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:23">regs</name><index pos:start="107:24" pos:end="107:35">[<expr pos:start="107:25" pos:end="107:34"><name pos:start="107:25" pos:end="107:34">SONIC_TSA0</name></expr>]</index></name> <operator pos:start="107:37" pos:end="107:37">=</operator> <name pos:start="107:39" pos:end="107:53"><name pos:start="107:39" pos:end="107:42">data</name><index pos:start="107:43" pos:end="107:53">[<expr pos:start="107:44" pos:end="107:52"><literal type="number" pos:start="107:44" pos:end="107:44">0</literal> <operator pos:start="107:46" pos:end="107:46">*</operator> <name pos:start="107:48" pos:end="107:52">width</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:54"><expr pos:start="109:17" pos:end="109:53"><name pos:start="109:17" pos:end="109:35"><name pos:start="109:17" pos:end="109:17">s</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:23">regs</name><index pos:start="109:24" pos:end="109:35">[<expr pos:start="109:25" pos:end="109:34"><name pos:start="109:25" pos:end="109:34">SONIC_TSA1</name></expr>]</index></name> <operator pos:start="109:37" pos:end="109:37">=</operator> <name pos:start="109:39" pos:end="109:53"><name pos:start="109:39" pos:end="109:42">data</name><index pos:start="109:43" pos:end="109:53">[<expr pos:start="109:44" pos:end="109:52"><literal type="number" pos:start="109:44" pos:end="109:44">1</literal> <operator pos:start="109:46" pos:end="109:46">*</operator> <name pos:start="109:48" pos:end="109:52">width</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:53"><expr pos:start="111:17" pos:end="111:52"><name pos:start="111:17" pos:end="111:34"><name pos:start="111:17" pos:end="111:17">s</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:23">regs</name><index pos:start="111:24" pos:end="111:34">[<expr pos:start="111:25" pos:end="111:33"><name pos:start="111:25" pos:end="111:33">SONIC_TFS</name></expr>]</index></name> <operator pos:start="111:36" pos:end="111:36">=</operator> <name pos:start="111:38" pos:end="111:52"><name pos:start="111:38" pos:end="111:41">data</name><index pos:start="111:42" pos:end="111:52">[<expr pos:start="111:43" pos:end="111:51"><literal type="number" pos:start="111:43" pos:end="111:43">2</literal> <operator pos:start="111:45" pos:end="111:45">*</operator> <name pos:start="111:47" pos:end="111:51">width</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="119:9" pos:end="119:38">/* Handle Ethernet checksum */</comment>

        <if_stmt pos:start="121:9" pos:end="133:9"><if pos:start="121:9" pos:end="127:9">if <condition pos:start="121:12" pos:end="121:51">(<expr pos:start="121:13" pos:end="121:50"><operator pos:start="121:13" pos:end="121:13">!</operator><operator pos:start="121:14" pos:end="121:14">(</operator><name pos:start="121:15" pos:end="121:32"><name pos:start="121:15" pos:end="121:15">s</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:21">regs</name><index pos:start="121:22" pos:end="121:32">[<expr pos:start="121:23" pos:end="121:31"><name pos:start="121:23" pos:end="121:31">SONIC_TCR</name></expr>]</index></name> <operator pos:start="121:34" pos:end="121:34">&amp;</operator> <name pos:start="121:36" pos:end="121:49">SONIC_TCR_CRCI</name><operator pos:start="121:50" pos:end="121:50">)</operator></expr>)</condition> <block pos:start="121:53" pos:end="127:9">{<block_content>

            <comment type="block" pos:start="123:13" pos:end="125:38">/* Don't append FCS there, to look like slirp packets

             * which don't have one */</comment>

        </block_content>}</block></if> <else pos:start="127:11" pos:end="133:9">else <block pos:start="127:16" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:24">

            <comment type="block" pos:start="129:13" pos:end="129:37">/* Remove existing FCS */</comment>

            <expr_stmt pos:start="131:13" pos:end="131:24"><expr pos:start="131:13" pos:end="131:23"><name pos:start="131:13" pos:end="131:18">tx_len</name> <operator pos:start="131:20" pos:end="131:21">-=</operator> <literal type="number" pos:start="131:23" pos:end="131:23">4</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="137:9" pos:end="157:9"><if pos:start="137:9" pos:end="151:9">if <condition pos:start="137:12" pos:end="137:65">(<expr pos:start="137:13" pos:end="137:64"><name pos:start="137:13" pos:end="137:30"><name pos:start="137:13" pos:end="137:13">s</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:19">regs</name><index pos:start="137:20" pos:end="137:30">[<expr pos:start="137:21" pos:end="137:29"><name pos:start="137:21" pos:end="137:29">SONIC_RCR</name></expr>]</index></name> <operator pos:start="137:32" pos:end="137:32">&amp;</operator> <operator pos:start="137:34" pos:end="137:34">(</operator><name pos:start="137:35" pos:end="137:47">SONIC_RCR_LB1</name> <operator pos:start="137:49" pos:end="137:49">|</operator> <name pos:start="137:51" pos:end="137:63">SONIC_RCR_LB0</name><operator pos:start="137:64" pos:end="137:64">)</operator></expr>)</condition> <block pos:start="137:67" pos:end="151:9">{<block_content pos:start="141:13" pos:end="149:13">

            <comment type="block" pos:start="139:13" pos:end="139:26">/* Loopback */</comment>

            <expr_stmt pos:start="141:13" pos:end="141:49"><expr pos:start="141:13" pos:end="141:48"><name pos:start="141:13" pos:end="141:30"><name pos:start="141:13" pos:end="141:13">s</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:19">regs</name><index pos:start="141:20" pos:end="141:30">[<expr pos:start="141:21" pos:end="141:29"><name pos:start="141:21" pos:end="141:29">SONIC_TCR</name></expr>]</index></name> <operator pos:start="141:32" pos:end="141:33">|=</operator> <name pos:start="141:35" pos:end="141:48">SONIC_TCR_CRSL</name></expr>;</expr_stmt>

            <if_stmt pos:start="143:13" pos:end="149:13"><if pos:start="143:13" pos:end="149:13">if <condition pos:start="143:16" pos:end="143:38">(<expr pos:start="143:17" pos:end="143:37"><call pos:start="143:17" pos:end="143:37"><name pos:start="143:17" pos:end="143:34"><name pos:start="143:17" pos:end="143:17">s</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:21">vc</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:34">fd_can_read</name></name><argument_list pos:start="143:35" pos:end="143:37">(<argument pos:start="143:36" pos:end="143:36"><expr pos:start="143:36" pos:end="143:36"><name pos:start="143:36" pos:end="143:36">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="143:40" pos:end="149:13">{<block_content pos:start="145:17" pos:end="147:56">

                <expr_stmt pos:start="145:17" pos:end="145:39"><expr pos:start="145:17" pos:end="145:38"><name pos:start="145:17" pos:end="145:34"><name pos:start="145:17" pos:end="145:17">s</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:34">loopback_packet</name></name> <operator pos:start="145:36" pos:end="145:36">=</operator> <literal type="number" pos:start="145:38" pos:end="145:38">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:56"><expr pos:start="147:17" pos:end="147:55"><call pos:start="147:17" pos:end="147:55"><name pos:start="147:17" pos:end="147:30"><name pos:start="147:17" pos:end="147:17">s</name><operator pos:start="147:18" pos:end="147:19">-&gt;</operator><name pos:start="147:20" pos:end="147:21">vc</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:30">receive</name></name><argument_list pos:start="147:31" pos:end="147:55">(<argument pos:start="147:32" pos:end="147:32"><expr pos:start="147:32" pos:end="147:32"><name pos:start="147:32" pos:end="147:32">s</name></expr></argument>, <argument pos:start="147:35" pos:end="147:46"><expr pos:start="147:35" pos:end="147:46"><name pos:start="147:35" pos:end="147:46"><name pos:start="147:35" pos:end="147:35">s</name><operator pos:start="147:36" pos:end="147:37">-&gt;</operator><name pos:start="147:38" pos:end="147:46">tx_buffer</name></name></expr></argument>, <argument pos:start="147:49" pos:end="147:54"><expr pos:start="147:49" pos:end="147:54"><name pos:start="147:49" pos:end="147:54">tx_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="151:11" pos:end="157:9">else <block pos:start="151:16" pos:end="157:9">{<block_content pos:start="155:13" pos:end="155:58">

            <comment type="block" pos:start="153:13" pos:end="153:33">/* Transmit packet */</comment>

            <expr_stmt pos:start="155:13" pos:end="155:58"><expr pos:start="155:13" pos:end="155:57"><call pos:start="155:13" pos:end="155:57"><name pos:start="155:13" pos:end="155:28">qemu_send_packet</name><argument_list pos:start="155:29" pos:end="155:57">(<argument pos:start="155:30" pos:end="155:34"><expr pos:start="155:30" pos:end="155:34"><name pos:start="155:30" pos:end="155:34"><name pos:start="155:30" pos:end="155:30">s</name><operator pos:start="155:31" pos:end="155:32">-&gt;</operator><name pos:start="155:33" pos:end="155:34">vc</name></name></expr></argument>, <argument pos:start="155:37" pos:end="155:48"><expr pos:start="155:37" pos:end="155:48"><name pos:start="155:37" pos:end="155:48"><name pos:start="155:37" pos:end="155:37">s</name><operator pos:start="155:38" pos:end="155:39">-&gt;</operator><name pos:start="155:40" pos:end="155:48">tx_buffer</name></name></expr></argument>, <argument pos:start="155:51" pos:end="155:56"><expr pos:start="155:51" pos:end="155:56"><name pos:start="155:51" pos:end="155:56">tx_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:44"><expr pos:start="159:9" pos:end="159:43"><name pos:start="159:9" pos:end="159:26"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:15">regs</name><index pos:start="159:16" pos:end="159:26">[<expr pos:start="159:17" pos:end="159:25"><name pos:start="159:17" pos:end="159:25">SONIC_TCR</name></expr>]</index></name> <operator pos:start="159:28" pos:end="159:29">|=</operator> <name pos:start="159:31" pos:end="159:43">SONIC_TCR_PTX</name></expr>;</expr_stmt>



        <comment type="block" pos:start="163:9" pos:end="163:26">/* Write status */</comment>

        <expr_stmt pos:start="165:9" pos:end="165:54"><expr pos:start="165:9" pos:end="165:53"><name pos:start="165:9" pos:end="165:23"><name pos:start="165:9" pos:end="165:12">data</name><index pos:start="165:13" pos:end="165:23">[<expr pos:start="165:14" pos:end="165:22"><literal type="number" pos:start="165:14" pos:end="165:14">0</literal> <operator pos:start="165:16" pos:end="165:16">*</operator> <name pos:start="165:18" pos:end="165:22">width</name></expr>]</index></name> <operator pos:start="165:25" pos:end="165:25">=</operator> <name pos:start="165:27" pos:end="165:44"><name pos:start="165:27" pos:end="165:27">s</name><operator pos:start="165:28" pos:end="165:29">-&gt;</operator><name pos:start="165:30" pos:end="165:33">regs</name><index pos:start="165:34" pos:end="165:44">[<expr pos:start="165:35" pos:end="165:43"><name pos:start="165:35" pos:end="165:43">SONIC_TCR</name></expr>]</index></name> <operator pos:start="165:46" pos:end="165:46">&amp;</operator> <literal type="number" pos:start="165:48" pos:end="165:53">0x0fff</literal></expr>;</expr_stmt> <comment type="block" pos:start="165:56" pos:end="165:67">/* status */</comment>

        <expr_stmt pos:start="167:9" pos:end="167:40"><expr pos:start="167:9" pos:end="167:39"><name pos:start="167:9" pos:end="167:12">size</name> <operator pos:start="167:14" pos:end="167:14">=</operator> <sizeof pos:start="167:16" pos:end="167:31">sizeof<argument_list pos:start="167:22" pos:end="167:31">(<argument pos:start="167:23" pos:end="167:30"><expr pos:start="167:23" pos:end="167:30"><name pos:start="167:23" pos:end="167:30">uint16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="167:33" pos:end="167:33">*</operator> <name pos:start="167:35" pos:end="167:39">width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="173:38"><expr pos:start="169:9" pos:end="173:37"><call pos:start="169:9" pos:end="173:37"><name pos:start="169:9" pos:end="169:20"><name pos:start="169:9" pos:end="169:9">s</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:20">memory_rw</name></name><argument_list pos:start="169:21" pos:end="173:37">(<argument pos:start="169:22" pos:end="169:34"><expr pos:start="169:22" pos:end="169:34"><name pos:start="169:22" pos:end="169:34"><name pos:start="169:22" pos:end="169:22">s</name><operator pos:start="169:23" pos:end="169:24">-&gt;</operator><name pos:start="169:25" pos:end="169:34">mem_opaque</name></name></expr></argument>,

            <argument pos:start="171:13" pos:end="171:61"><expr pos:start="171:13" pos:end="171:61"><operator pos:start="171:13" pos:end="171:13">(</operator><name pos:start="171:14" pos:end="171:32"><name pos:start="171:14" pos:end="171:14">s</name><operator pos:start="171:15" pos:end="171:16">-&gt;</operator><name pos:start="171:17" pos:end="171:20">regs</name><index pos:start="171:21" pos:end="171:32">[<expr pos:start="171:22" pos:end="171:31"><name pos:start="171:22" pos:end="171:31">SONIC_UTDA</name></expr>]</index></name> <operator pos:start="171:34" pos:end="171:35">&lt;&lt;</operator> <literal type="number" pos:start="171:37" pos:end="171:38">16</literal><operator pos:start="171:39" pos:end="171:39">)</operator> <operator pos:start="171:41" pos:end="171:41">|</operator> <name pos:start="171:43" pos:end="171:61"><name pos:start="171:43" pos:end="171:43">s</name><operator pos:start="171:44" pos:end="171:45">-&gt;</operator><name pos:start="171:46" pos:end="171:49">regs</name><index pos:start="171:50" pos:end="171:61">[<expr pos:start="171:51" pos:end="171:60"><name pos:start="171:51" pos:end="171:60">SONIC_TTDA</name></expr>]</index></name></expr></argument>,

            <argument pos:start="173:13" pos:end="173:27"><expr pos:start="173:13" pos:end="173:27"><operator pos:start="173:13" pos:end="173:13">(</operator><name pos:start="173:14" pos:end="173:20">uint8_t</name> <operator pos:start="173:22" pos:end="173:22">*</operator><operator pos:start="173:23" pos:end="173:23">)</operator><name pos:start="173:24" pos:end="173:27">data</name></expr></argument>, <argument pos:start="173:30" pos:end="173:33"><expr pos:start="173:30" pos:end="173:33"><name pos:start="173:30" pos:end="173:33">size</name></expr></argument>, <argument pos:start="173:36" pos:end="173:36"><expr pos:start="173:36" pos:end="173:36"><literal type="number" pos:start="173:36" pos:end="173:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="177:9" pos:end="199:9"><if pos:start="177:9" pos:end="199:9">if <condition pos:start="177:12" pos:end="177:48">(<expr pos:start="177:13" pos:end="177:47"><operator pos:start="177:13" pos:end="177:13">!</operator><operator pos:start="177:14" pos:end="177:14">(</operator><name pos:start="177:15" pos:end="177:31"><name pos:start="177:15" pos:end="177:15">s</name><operator pos:start="177:16" pos:end="177:17">-&gt;</operator><name pos:start="177:18" pos:end="177:21">regs</name><index pos:start="177:22" pos:end="177:31">[<expr pos:start="177:23" pos:end="177:30"><name pos:start="177:23" pos:end="177:30">SONIC_CR</name></expr>]</index></name> <operator pos:start="177:33" pos:end="177:33">&amp;</operator> <name pos:start="177:35" pos:end="177:46">SONIC_CR_HTX</name><operator pos:start="177:47" pos:end="177:47">)</operator></expr>)</condition> <block pos:start="177:50" pos:end="199:9">{<block_content pos:start="181:13" pos:end="197:13">

            <comment type="block" pos:start="179:13" pos:end="179:39">/* Read footer of packet */</comment>

            <expr_stmt pos:start="181:13" pos:end="181:44"><expr pos:start="181:13" pos:end="181:43"><name pos:start="181:13" pos:end="181:16">size</name> <operator pos:start="181:18" pos:end="181:18">=</operator> <sizeof pos:start="181:20" pos:end="181:35">sizeof<argument_list pos:start="181:26" pos:end="181:35">(<argument pos:start="181:27" pos:end="181:34"><expr pos:start="181:27" pos:end="181:34"><name pos:start="181:27" pos:end="181:34">uint16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="181:37" pos:end="181:37">*</operator> <name pos:start="181:39" pos:end="181:43">width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="187:42"><expr pos:start="183:13" pos:end="187:41"><call pos:start="183:13" pos:end="187:41"><name pos:start="183:13" pos:end="183:24"><name pos:start="183:13" pos:end="183:13">s</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:24">memory_rw</name></name><argument_list pos:start="183:25" pos:end="187:41">(<argument pos:start="183:26" pos:end="183:38"><expr pos:start="183:26" pos:end="183:38"><name pos:start="183:26" pos:end="183:38"><name pos:start="183:26" pos:end="183:26">s</name><operator pos:start="183:27" pos:end="183:28">-&gt;</operator><name pos:start="183:29" pos:end="183:38">mem_opaque</name></name></expr></argument>,

                <argument pos:start="185:17" pos:end="185:125"><expr pos:start="185:17" pos:end="185:125"><operator pos:start="185:17" pos:end="185:17">(</operator><operator pos:start="185:18" pos:end="185:18">(</operator><name pos:start="185:19" pos:end="185:37"><name pos:start="185:19" pos:end="185:19">s</name><operator pos:start="185:20" pos:end="185:21">-&gt;</operator><name pos:start="185:22" pos:end="185:25">regs</name><index pos:start="185:26" pos:end="185:37">[<expr pos:start="185:27" pos:end="185:36"><name pos:start="185:27" pos:end="185:36">SONIC_UTDA</name></expr>]</index></name> <operator pos:start="185:39" pos:end="185:40">&lt;&lt;</operator> <literal type="number" pos:start="185:42" pos:end="185:43">16</literal><operator pos:start="185:44" pos:end="185:44">)</operator> <operator pos:start="185:46" pos:end="185:46">|</operator> <name pos:start="185:48" pos:end="185:66"><name pos:start="185:48" pos:end="185:48">s</name><operator pos:start="185:49" pos:end="185:50">-&gt;</operator><name pos:start="185:51" pos:end="185:54">regs</name><index pos:start="185:55" pos:end="185:66">[<expr pos:start="185:56" pos:end="185:65"><name pos:start="185:56" pos:end="185:65">SONIC_TTDA</name></expr>]</index></name><operator pos:start="185:67" pos:end="185:67">)</operator> <operator pos:start="185:69" pos:end="185:69">+</operator> <sizeof pos:start="185:71" pos:end="185:86">sizeof<argument_list pos:start="185:77" pos:end="185:86">(<argument pos:start="185:78" pos:end="185:85"><expr pos:start="185:78" pos:end="185:85"><name pos:start="185:78" pos:end="185:85">uint16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="185:88" pos:end="185:88">*</operator> <operator pos:start="185:90" pos:end="185:90">(</operator><literal type="number" pos:start="185:91" pos:end="185:93">4</literal> <operator pos:start="185:93" pos:end="185:93">+</operator> <literal type="number" pos:start="185:95" pos:end="185:95">3</literal> <operator pos:start="185:97" pos:end="185:97">*</operator> <name pos:start="185:99" pos:end="185:116"><name pos:start="185:99" pos:end="185:99">s</name><operator pos:start="185:100" pos:end="185:101">-&gt;</operator><name pos:start="185:102" pos:end="185:105">regs</name><index pos:start="185:106" pos:end="185:116">[<expr pos:start="185:107" pos:end="185:115"><name pos:start="185:107" pos:end="185:115">SONIC_TFC</name></expr>]</index></name><operator pos:start="185:117" pos:end="185:117">)</operator> <operator pos:start="185:119" pos:end="185:119">*</operator> <name pos:start="185:121" pos:end="185:125">width</name></expr></argument>,

                <argument pos:start="187:17" pos:end="187:31"><expr pos:start="187:17" pos:end="187:31"><operator pos:start="187:17" pos:end="187:17">(</operator><name pos:start="187:18" pos:end="187:24">uint8_t</name> <operator pos:start="187:26" pos:end="187:26">*</operator><operator pos:start="187:27" pos:end="187:27">)</operator><name pos:start="187:28" pos:end="187:31">data</name></expr></argument>, <argument pos:start="187:34" pos:end="187:37"><expr pos:start="187:34" pos:end="187:37"><name pos:start="187:34" pos:end="187:37">size</name></expr></argument>, <argument pos:start="187:40" pos:end="187:40"><expr pos:start="187:40" pos:end="187:40"><literal type="number" pos:start="187:40" pos:end="187:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:57"><expr pos:start="189:13" pos:end="189:56"><name pos:start="189:13" pos:end="189:31"><name pos:start="189:13" pos:end="189:13">s</name><operator pos:start="189:14" pos:end="189:15">-&gt;</operator><name pos:start="189:16" pos:end="189:19">regs</name><index pos:start="189:20" pos:end="189:31">[<expr pos:start="189:21" pos:end="189:30"><name pos:start="189:21" pos:end="189:30">SONIC_CTDA</name></expr>]</index></name> <operator pos:start="189:33" pos:end="189:33">=</operator> <name pos:start="189:35" pos:end="189:49"><name pos:start="189:35" pos:end="189:38">data</name><index pos:start="189:39" pos:end="189:49">[<expr pos:start="189:40" pos:end="189:48"><literal type="number" pos:start="189:40" pos:end="189:40">0</literal> <operator pos:start="189:42" pos:end="189:42">*</operator> <name pos:start="189:44" pos:end="189:48">width</name></expr>]</index></name> <operator pos:start="189:51" pos:end="189:51">&amp;</operator> <operator pos:start="189:53" pos:end="189:53">~</operator><literal type="number" pos:start="189:54" pos:end="189:56">0x1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="191:13" pos:end="197:13"><if pos:start="191:13" pos:end="197:13">if <condition pos:start="191:16" pos:end="191:38">(<expr pos:start="191:17" pos:end="191:37"><name pos:start="191:17" pos:end="191:31"><name pos:start="191:17" pos:end="191:20">data</name><index pos:start="191:21" pos:end="191:31">[<expr pos:start="191:22" pos:end="191:30"><literal type="number" pos:start="191:22" pos:end="191:22">0</literal> <operator pos:start="191:24" pos:end="191:24">*</operator> <name pos:start="191:26" pos:end="191:30">width</name></expr>]</index></name> <operator pos:start="191:33" pos:end="191:33">&amp;</operator> <literal type="number" pos:start="191:35" pos:end="191:37">0x1</literal></expr>)</condition> <block pos:start="191:40" pos:end="197:13">{<block_content pos:start="195:17" pos:end="195:22">

                <comment type="block" pos:start="193:17" pos:end="193:34">/* EOL detected */</comment>

                <break pos:start="195:17" pos:end="195:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="205:5" pos:end="205:14">/* Done */</comment>

    <expr_stmt pos:start="207:5" pos:end="207:39"><expr pos:start="207:5" pos:end="207:38"><name pos:start="207:5" pos:end="207:21"><name pos:start="207:5" pos:end="207:5">s</name><operator pos:start="207:6" pos:end="207:7">-&gt;</operator><name pos:start="207:8" pos:end="207:11">regs</name><index pos:start="207:12" pos:end="207:21">[<expr pos:start="207:13" pos:end="207:20"><name pos:start="207:13" pos:end="207:20">SONIC_CR</name></expr>]</index></name> <operator pos:start="207:23" pos:end="207:24">&amp;=</operator> <operator pos:start="207:26" pos:end="207:26">~</operator><name pos:start="207:27" pos:end="207:38">SONIC_CR_TXP</name></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:41"><expr pos:start="209:5" pos:end="209:40"><name pos:start="209:5" pos:end="209:22"><name pos:start="209:5" pos:end="209:5">s</name><operator pos:start="209:6" pos:end="209:7">-&gt;</operator><name pos:start="209:8" pos:end="209:11">regs</name><index pos:start="209:12" pos:end="209:22">[<expr pos:start="209:13" pos:end="209:21"><name pos:start="209:13" pos:end="209:21">SONIC_ISR</name></expr>]</index></name> <operator pos:start="209:24" pos:end="209:25">|=</operator> <name pos:start="209:27" pos:end="209:40">SONIC_ISR_TXDN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:26"><expr pos:start="211:5" pos:end="211:25"><call pos:start="211:5" pos:end="211:25"><name pos:start="211:5" pos:end="211:22">dp8393x_update_irq</name><argument_list pos:start="211:23" pos:end="211:25">(<argument pos:start="211:24" pos:end="211:24"><expr pos:start="211:24" pos:end="211:24"><name pos:start="211:24" pos:end="211:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
