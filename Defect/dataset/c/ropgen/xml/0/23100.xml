<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23100.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">select_rc_mode</name><parameter_list pos:start="1:26" pos:end="1:66">(<parameter pos:start="1:27" pos:end="1:47"><decl pos:start="1:27" pos:end="1:47"><type pos:start="1:27" pos:end="1:47"><name pos:start="1:27" pos:end="1:40">AVCodecContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:47">avctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:65"><decl pos:start="1:50" pos:end="1:65"><type pos:start="1:50" pos:end="1:65"><name pos:start="1:50" pos:end="1:62">QSVEncContext</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:65">q</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="143:1">{<block_content pos:start="5:5" pos:end="141:13">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:23">rc_desc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">mfxU16</name></type>      <name pos:start="7:17" pos:end="7:23">rc_mode</name></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">want_la</name>     <init pos:start="11:21" pos:end="11:38">= <expr pos:start="11:23" pos:end="11:38"><name pos:start="11:23" pos:end="11:33"><name pos:start="11:23" pos:end="11:23">q</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:33">la_depth</name></name> <operator pos:start="11:35" pos:end="11:36">&gt;=</operator> <literal type="number" pos:start="11:38" pos:end="11:38">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:62"><decl pos:start="13:5" pos:end="13:61"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">want_qscale</name> <init pos:start="13:21" pos:end="13:61">= <expr pos:start="13:23" pos:end="13:61"><operator pos:start="13:23" pos:end="13:23">!</operator><operator pos:start="13:24" pos:end="13:24">!</operator><operator pos:start="13:25" pos:end="13:25">(</operator><name pos:start="13:26" pos:end="13:37"><name pos:start="13:26" pos:end="13:30">avctx</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:37">flags</name></name> <operator pos:start="13:39" pos:end="13:39">&amp;</operator> <name pos:start="13:41" pos:end="13:60">AV_CODEC_FLAG_QSCALE</name><operator pos:start="13:61" pos:end="13:61">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">want_vcm</name>    <init pos:start="15:21" pos:end="15:28">= <expr pos:start="15:23" pos:end="15:28"><name pos:start="15:23" pos:end="15:28"><name pos:start="15:23" pos:end="15:23">q</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:28">vcm</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:32">(<expr pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:15">want_la</name> <operator pos:start="19:17" pos:end="19:18">&amp;&amp;</operator> <operator pos:start="19:20" pos:end="19:20">!</operator><name pos:start="19:21" pos:end="19:31">QSV_HAVE_LA</name></expr>)</condition> <block pos:start="19:34" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:31">

        <expr_stmt pos:start="21:9" pos:end="23:99"><expr pos:start="21:9" pos:end="23:98"><call pos:start="21:9" pos:end="23:98"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="23:98">(<argument pos:start="21:16" pos:end="21:20"><expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">avctx</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="23:16" pos:end="23:97"><expr pos:start="23:16" pos:end="23:97"><literal type="string" pos:start="23:16" pos:end="23:97">"Lookahead ratecontrol mode requested, but is not supported by this SDK version\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:34">(<expr pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:16">want_vcm</name> <operator pos:start="29:18" pos:end="29:19">&amp;&amp;</operator> <operator pos:start="29:21" pos:end="29:21">!</operator><name pos:start="29:22" pos:end="29:33">QSV_HAVE_VCM</name></expr>)</condition> <block pos:start="29:36" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:31">

        <expr_stmt pos:start="31:9" pos:end="33:93"><expr pos:start="31:9" pos:end="33:92"><call pos:start="31:9" pos:end="33:92"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="33:92">(<argument pos:start="31:16" pos:end="31:20"><expr pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:20">avctx</name></expr></argument>, <argument pos:start="31:23" pos:end="31:34"><expr pos:start="31:23" pos:end="31:34"><name pos:start="31:23" pos:end="31:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="33:16" pos:end="33:91"><expr pos:start="33:16" pos:end="33:91"><literal type="string" pos:start="33:16" pos:end="33:91">"VCM ratecontrol mode requested, but is not supported by this SDK version\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:31">return <expr pos:start="35:16" pos:end="35:30"><call pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:22">AVERROR</name><argument_list pos:start="35:23" pos:end="35:30">(<argument pos:start="35:24" pos:end="35:29"><expr pos:start="35:24" pos:end="35:29"><name pos:start="35:24" pos:end="35:29">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="51:5"><if pos:start="41:5" pos:end="51:5">if <condition pos:start="41:8" pos:end="41:45">(<expr pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:15">want_la</name> <operator pos:start="41:17" pos:end="41:17">+</operator> <name pos:start="41:19" pos:end="41:29">want_qscale</name> <operator pos:start="41:31" pos:end="41:31">+</operator> <name pos:start="41:33" pos:end="41:40">want_vcm</name> <operator pos:start="41:42" pos:end="41:42">&gt;</operator> <literal type="number" pos:start="41:44" pos:end="41:44">1</literal></expr>)</condition> <block pos:start="41:47" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:31">

        <expr_stmt pos:start="43:9" pos:end="47:60"><expr pos:start="43:9" pos:end="47:59"><call pos:start="43:9" pos:end="47:59"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="47:59">(<argument pos:start="43:16" pos:end="43:20"><expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">avctx</name></expr></argument>, <argument pos:start="43:23" pos:end="43:34"><expr pos:start="43:23" pos:end="43:34"><name pos:start="43:23" pos:end="43:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="45:16" pos:end="47:58"><expr pos:start="45:16" pos:end="47:58"><literal type="string" pos:start="45:16" pos:end="45:82">"More than one of: { constant qscale, lookahead, VCM } requested, "</literal>

               <literal type="string" pos:start="47:16" pos:end="47:58">"only one of them can be used at a time.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:31">return <expr pos:start="49:16" pos:end="49:30"><call pos:start="49:16" pos:end="49:30"><name pos:start="49:16" pos:end="49:22">AVERROR</name><argument_list pos:start="49:23" pos:end="49:30">(<argument pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="131:5"><if pos:start="55:5" pos:end="64:0">if <condition pos:start="55:8" pos:end="55:20">(<expr pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:19">want_qscale</name></expr>)</condition> <block pos:start="55:22" pos:end="64:0">{<block_content pos:start="57:9" pos:end="59:58">

        <expr_stmt pos:start="57:9" pos:end="57:38"><expr pos:start="57:9" pos:end="57:37"><name pos:start="57:9" pos:end="57:15">rc_mode</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:37">MFX_RATECONTROL_CQP</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:58"><expr pos:start="59:9" pos:end="59:57"><name pos:start="59:9" pos:end="59:15">rc_desc</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <literal type="string" pos:start="59:19" pos:end="59:57">"constant quantization parameter (CQP)"</literal></expr>;</expr_stmt>

    </block_content>}</block></if>

<cpp:if pos:start="63:1" pos:end="63:16">#<cpp:directive pos:start="63:2" pos:end="63:3">if</cpp:directive> <expr pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:16">QSV_HAVE_VCM</name></expr></cpp:if>

    <if type="elseif" pos:start="65:5" pos:end="76:0">else if <condition pos:start="65:13" pos:end="65:22">(<expr pos:start="65:14" pos:end="65:21"><name pos:start="65:14" pos:end="65:21">want_vcm</name></expr>)</condition> <block pos:start="65:24" pos:end="76:0">{<block_content pos:start="67:9" pos:end="69:50">

        <expr_stmt pos:start="67:9" pos:end="67:38"><expr pos:start="67:9" pos:end="67:37"><name pos:start="67:9" pos:end="67:15">rc_mode</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <name pos:start="67:19" pos:end="67:37">MFX_RATECONTROL_VCM</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:50"><expr pos:start="69:9" pos:end="69:49"><name pos:start="69:9" pos:end="69:15">rc_desc</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <literal type="string" pos:start="69:19" pos:end="69:49">"video conferencing mode (VCM)"</literal></expr>;</expr_stmt>

    </block_content>}</block></if>

<cpp:endif pos:start="73:1" pos:end="73:6">#<cpp:directive pos:start="73:2" pos:end="73:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="75:1" pos:end="75:15">#<cpp:directive pos:start="75:2" pos:end="75:3">if</cpp:directive> <expr pos:start="75:5" pos:end="75:15"><name pos:start="75:5" pos:end="75:15">QSV_HAVE_LA</name></expr></cpp:if>

    <if type="elseif" pos:start="77:5" pos:end="102:0">else if <condition pos:start="77:13" pos:end="77:21">(<expr pos:start="77:14" pos:end="77:20"><name pos:start="77:14" pos:end="77:20">want_la</name></expr>)</condition> <block pos:start="77:23" pos:end="102:0">{<block_content pos:start="79:9" pos:end="96:0">

        <expr_stmt pos:start="79:9" pos:end="79:37"><expr pos:start="79:9" pos:end="79:36"><name pos:start="79:9" pos:end="79:15">rc_mode</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:36">MFX_RATECONTROL_LA</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="86:0"><expr pos:start="81:9" pos:end="81:43"><name pos:start="81:9" pos:end="81:15">rc_desc</name> <operator pos:start="81:17" pos:end="81:17">=</operator> <literal type="string" pos:start="81:19" pos:end="81:43">"VBR with lookahead (LA)"</literal></expr>;</expr_stmt>



<cpp:if pos:start="85:1" pos:end="85:16">#<cpp:directive pos:start="85:2" pos:end="85:3">if</cpp:directive> <expr pos:start="85:5" pos:end="85:16"><name pos:start="85:5" pos:end="85:16">QSV_HAVE_ICQ</name></expr></cpp:if>

        <if_stmt pos:start="87:9" pos:end="96:0"><if pos:start="87:9" pos:end="96:0">if <condition pos:start="87:12" pos:end="87:38">(<expr pos:start="87:13" pos:end="87:37"><name pos:start="87:13" pos:end="87:33"><name pos:start="87:13" pos:end="87:17">avctx</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:33">global_quality</name></name> <operator pos:start="87:35" pos:end="87:35">&gt;</operator> <literal type="number" pos:start="87:37" pos:end="87:37">0</literal></expr>)</condition> <block pos:start="87:40" pos:end="96:0">{<block_content pos:start="89:13" pos:end="91:77">

            <expr_stmt pos:start="89:13" pos:end="89:45"><expr pos:start="89:13" pos:end="89:44"><name pos:start="89:13" pos:end="89:19">rc_mode</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <name pos:start="89:23" pos:end="89:44">MFX_RATECONTROL_LA_ICQ</name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:77"><expr pos:start="91:13" pos:end="91:76"><name pos:start="91:13" pos:end="91:19">rc_desc</name> <operator pos:start="91:21" pos:end="91:21">=</operator> <literal type="string" pos:start="91:23" pos:end="91:76">"intelligent constant quality with lookahead (LA_ICQ)"</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="95:1" pos:end="95:6">#<cpp:directive pos:start="95:2" pos:end="95:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if>

<cpp:endif pos:start="99:1" pos:end="99:6">#<cpp:directive pos:start="99:2" pos:end="99:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="101:1" pos:end="101:16">#<cpp:directive pos:start="101:2" pos:end="101:3">if</cpp:directive> <expr pos:start="101:5" pos:end="101:16"><name pos:start="101:5" pos:end="101:16">QSV_HAVE_ICQ</name></expr></cpp:if>

    <if type="elseif" pos:start="103:5" pos:end="112:0">else if <condition pos:start="103:13" pos:end="103:39">(<expr pos:start="103:14" pos:end="103:38"><name pos:start="103:14" pos:end="103:34"><name pos:start="103:14" pos:end="103:18">avctx</name><operator pos:start="103:19" pos:end="103:20">-&gt;</operator><name pos:start="103:21" pos:end="103:34">global_quality</name></name> <operator pos:start="103:36" pos:end="103:36">&gt;</operator> <literal type="number" pos:start="103:38" pos:end="103:38">0</literal></expr>)</condition> <block pos:start="103:41" pos:end="112:0">{<block_content pos:start="105:9" pos:end="107:55">

        <expr_stmt pos:start="105:9" pos:end="105:38"><expr pos:start="105:9" pos:end="105:37"><name pos:start="105:9" pos:end="105:15">rc_mode</name> <operator pos:start="105:17" pos:end="105:17">=</operator> <name pos:start="105:19" pos:end="105:37">MFX_RATECONTROL_ICQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:55"><expr pos:start="107:9" pos:end="107:54"><name pos:start="107:9" pos:end="107:15">rc_desc</name> <operator pos:start="107:17" pos:end="107:17">=</operator> <literal type="string" pos:start="107:19" pos:end="107:54">"intelligent constant quality (ICQ)"</literal></expr>;</expr_stmt>

    </block_content>}</block></if>

<cpp:endif pos:start="111:1" pos:end="111:6">#<cpp:directive pos:start="111:2" pos:end="111:6">endif</cpp:directive></cpp:endif>

    <if type="elseif" pos:start="113:5" pos:end="119:5">else if <condition pos:start="113:13" pos:end="113:51">(<expr pos:start="113:14" pos:end="113:50"><name pos:start="113:14" pos:end="113:31"><name pos:start="113:14" pos:end="113:18">avctx</name><operator pos:start="113:19" pos:end="113:20">-&gt;</operator><name pos:start="113:21" pos:end="113:31">rc_max_rate</name></name> <operator pos:start="113:33" pos:end="113:34">==</operator> <name pos:start="113:36" pos:end="113:50"><name pos:start="113:36" pos:end="113:40">avctx</name><operator pos:start="113:41" pos:end="113:42">-&gt;</operator><name pos:start="113:43" pos:end="113:50">bit_rate</name></name></expr>)</condition> <block pos:start="113:53" pos:end="119:5">{<block_content pos:start="115:9" pos:end="117:43">

        <expr_stmt pos:start="115:9" pos:end="115:38"><expr pos:start="115:9" pos:end="115:37"><name pos:start="115:9" pos:end="115:15">rc_mode</name> <operator pos:start="115:17" pos:end="115:17">=</operator> <name pos:start="115:19" pos:end="115:37">MFX_RATECONTROL_CBR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:43"><expr pos:start="117:9" pos:end="117:42"><name pos:start="117:9" pos:end="117:15">rc_desc</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <literal type="string" pos:start="117:19" pos:end="117:42">"constant bitrate (CBR)"</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="119:7" pos:end="125:5">else if <condition pos:start="119:15" pos:end="119:35">(<expr pos:start="119:16" pos:end="119:34"><operator pos:start="119:16" pos:end="119:16">!</operator><name pos:start="119:17" pos:end="119:34"><name pos:start="119:17" pos:end="119:21">avctx</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:34">rc_max_rate</name></name></expr>)</condition> <block pos:start="119:37" pos:end="125:5">{<block_content pos:start="121:9" pos:end="123:52">

        <expr_stmt pos:start="121:9" pos:end="121:39"><expr pos:start="121:9" pos:end="121:38"><name pos:start="121:9" pos:end="121:15">rc_mode</name> <operator pos:start="121:17" pos:end="121:17">=</operator> <name pos:start="121:19" pos:end="121:38">MFX_RATECONTROL_AVBR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:52"><expr pos:start="123:9" pos:end="123:51"><name pos:start="123:9" pos:end="123:15">rc_desc</name> <operator pos:start="123:17" pos:end="123:17">=</operator> <literal type="string" pos:start="123:19" pos:end="123:51">"average variable bitrate (AVBR)"</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="125:7" pos:end="131:5">else <block pos:start="125:12" pos:end="131:5">{<block_content pos:start="127:9" pos:end="129:43">

        <expr_stmt pos:start="127:9" pos:end="127:38"><expr pos:start="127:9" pos:end="127:37"><name pos:start="127:9" pos:end="127:15">rc_mode</name> <operator pos:start="127:17" pos:end="127:17">=</operator> <name pos:start="127:19" pos:end="127:37">MFX_RATECONTROL_VBR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:43"><expr pos:start="129:9" pos:end="129:42"><name pos:start="129:9" pos:end="129:15">rc_desc</name> <operator pos:start="129:17" pos:end="129:17">=</operator> <literal type="string" pos:start="129:19" pos:end="129:42">"variable bitrate (VBR)"</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:45"><expr pos:start="135:5" pos:end="135:44"><name pos:start="135:5" pos:end="135:34"><name pos:start="135:5" pos:end="135:5">q</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:12">param</name><operator pos:start="135:13" pos:end="135:13">.</operator><name pos:start="135:14" pos:end="135:16">mfx</name><operator pos:start="135:17" pos:end="135:17">.</operator><name pos:start="135:18" pos:end="135:34">RateControlMethod</name></name> <operator pos:start="135:36" pos:end="135:36">=</operator> <name pos:start="135:38" pos:end="135:44">rc_mode</name></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:80"><expr pos:start="137:5" pos:end="137:79"><call pos:start="137:5" pos:end="137:79"><name pos:start="137:5" pos:end="137:10">av_log</name><argument_list pos:start="137:11" pos:end="137:79">(<argument pos:start="137:12" pos:end="137:16"><expr pos:start="137:12" pos:end="137:16"><name pos:start="137:12" pos:end="137:16">avctx</name></expr></argument>, <argument pos:start="137:19" pos:end="137:32"><expr pos:start="137:19" pos:end="137:32"><name pos:start="137:19" pos:end="137:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="137:35" pos:end="137:69"><expr pos:start="137:35" pos:end="137:69"><literal type="string" pos:start="137:35" pos:end="137:69">"Using the %s ratecontrol method\n"</literal></expr></argument>, <argument pos:start="137:72" pos:end="137:78"><expr pos:start="137:72" pos:end="137:78"><name pos:start="137:72" pos:end="137:78">rc_desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="141:5" pos:end="141:13">return <expr pos:start="141:12" pos:end="141:12"><literal type="number" pos:start="141:12" pos:end="141:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
