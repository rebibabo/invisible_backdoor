<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4199.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">slice_end</name><parameter_list pos:start="1:21" pos:end="1:58">(<parameter pos:start="1:22" pos:end="1:42"><decl pos:start="1:22" pos:end="1:42"><type pos:start="1:22" pos:end="1:42"><name pos:start="1:22" pos:end="1:35">AVCodecContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:42">avctx</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:51">AVFrame</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">pict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="103:1">{<block_content pos:start="5:5" pos:end="101:5">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">Mpeg1Context</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">s1</name>  <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:41">= <expr pos:start="7:25" pos:end="7:41"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:27">s1</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:41">mpeg_enc_ctx</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:63">(<expr pos:start="11:9" pos:end="11:62"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:35"><name pos:start="11:10" pos:end="11:11">s1</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:35">mpeg_enc_ctx_allocated</name></name> <operator pos:start="11:37" pos:end="11:38">||</operator> <operator pos:start="11:40" pos:end="11:40">!</operator><name pos:start="11:41" pos:end="11:62"><name pos:start="11:41" pos:end="11:41">s</name><operator pos:start="11:42" pos:end="11:43">-&gt;</operator><name pos:start="11:44" pos:end="11:62">current_picture_ptr</name></name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="30:0"><if pos:start="17:5" pos:end="30:0">if <condition pos:start="17:8" pos:end="17:26">(<expr pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:16">avctx</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:25">hwaccel</name></name></expr>)</condition> <block pos:start="17:28" pos:end="30:0">{<block_content pos:start="19:9" pos:end="23:70">

        <if_stmt pos:start="19:9" pos:end="23:70"><if pos:start="19:9" pos:end="23:70">if <condition pos:start="19:12" pos:end="19:55">(<expr pos:start="19:13" pos:end="19:54"><call pos:start="19:13" pos:end="19:50"><name pos:start="19:13" pos:end="19:40"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:20">avctx</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:29">hwaccel</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:40">end_frame</name></name><argument_list pos:start="19:41" pos:end="19:50">(<argument pos:start="19:42" pos:end="19:49"><expr pos:start="19:42" pos:end="19:49"><name pos:start="19:42" pos:end="19:49"><name pos:start="19:42" pos:end="19:42">s</name><operator pos:start="19:43" pos:end="19:44">-&gt;</operator><name pos:start="19:45" pos:end="19:49">avctx</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:52" pos:end="19:52">&lt;</operator> <literal type="number" pos:start="19:54" pos:end="19:54">0</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="23:70"><block_content pos:start="21:13" pos:end="23:70">

            <expr_stmt pos:start="21:13" pos:end="23:70"><expr pos:start="21:13" pos:end="23:69"><call pos:start="21:13" pos:end="23:69"><name pos:start="21:13" pos:end="21:18">av_log</name><argument_list pos:start="21:19" pos:end="23:69">(<argument pos:start="21:20" pos:end="21:24"><expr pos:start="21:20" pos:end="21:24"><name pos:start="21:20" pos:end="21:24">avctx</name></expr></argument>, <argument pos:start="21:27" pos:end="21:38"><expr pos:start="21:27" pos:end="21:38"><name pos:start="21:27" pos:end="21:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="23:20" pos:end="23:68"><expr pos:start="23:20" pos:end="23:68"><literal type="string" pos:start="23:20" pos:end="23:68">"hardware accelerator failed to decode picture\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="29:1" pos:end="29:15">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:15">FF_API_XVMC</name></expr></cpp:if>

<macro pos:start="31:1" pos:end="31:31"><name pos:start="31:1" pos:end="31:31">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

    <if_stmt pos:start="33:5" pos:end="35:29"><if pos:start="33:5" pos:end="35:29">if <condition pos:start="33:8" pos:end="33:64">(<expr pos:start="33:9" pos:end="33:63"><name pos:start="33:9" pos:end="33:32">CONFIG_MPEG_XVMC_DECODER</name> <operator pos:start="33:34" pos:end="33:35">&amp;&amp;</operator> <name pos:start="33:37" pos:end="33:63"><name pos:start="33:37" pos:end="33:37">s</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:44">avctx</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:63">xvmc_acceleration</name></name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:29"><block_content pos:start="35:9" pos:end="35:29">

        <expr_stmt pos:start="35:9" pos:end="35:29"><expr pos:start="35:9" pos:end="35:28"><call pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:25">ff_xvmc_field_end</name><argument_list pos:start="35:26" pos:end="35:28">(<argument pos:start="35:27" pos:end="35:27"><expr pos:start="35:27" pos:end="35:27"><name pos:start="35:27" pos:end="35:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<macro pos:start="37:1" pos:end="40:0"><name pos:start="37:1" pos:end="40:0">FF_ENABLE_DEPRECATION_WARNINGS</name></macro>

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="39:8" pos:end="39:24">/* FF_API_XVMC */</comment>



    <comment type="block" pos:start="43:5" pos:end="43:30">/* end of slice reached */</comment>

    <if_stmt pos:start="45:5" pos:end="101:5"><if pos:start="45:5" pos:end="97:5">if <condition pos:start="45:8" pos:end="45:70">(<comment type="block" pos:start="45:9" pos:end="45:53">/* s-&gt;mb_y &lt;&lt; field_pic == s-&gt;mb_height &amp;&amp; */</comment> <expr pos:start="45:55" pos:end="45:69"><operator pos:start="45:55" pos:end="45:55">!</operator><name pos:start="45:56" pos:end="45:69"><name pos:start="45:56" pos:end="45:56">s</name><operator pos:start="45:57" pos:end="45:58">-&gt;</operator><name pos:start="45:59" pos:end="45:69">first_field</name></name></expr>)</condition> <block pos:start="45:72" pos:end="97:5">{<block_content pos:start="51:9" pos:end="95:17">

        <comment type="block" pos:start="47:9" pos:end="47:26">/* end of image */</comment>



        <expr_stmt pos:start="51:9" pos:end="51:32"><expr pos:start="51:9" pos:end="51:31"><call pos:start="51:9" pos:end="51:31"><name pos:start="51:9" pos:end="51:23">ff_er_frame_end</name><argument_list pos:start="51:24" pos:end="51:31">(<argument pos:start="51:25" pos:end="51:30"><expr pos:start="51:25" pos:end="51:30"><operator pos:start="51:25" pos:end="51:25">&amp;</operator><name pos:start="51:26" pos:end="51:30"><name pos:start="51:26" pos:end="51:26">s</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:30">er</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:28"><expr pos:start="55:9" pos:end="55:27"><call pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:24">ff_mpv_frame_end</name><argument_list pos:start="55:25" pos:end="55:27">(<argument pos:start="55:26" pos:end="55:26"><expr pos:start="55:26" pos:end="55:26"><name pos:start="55:26" pos:end="55:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="59:9" pos:end="91:9"><if pos:start="59:9" pos:end="69:9">if <condition pos:start="59:12" pos:end="59:62">(<expr pos:start="59:13" pos:end="59:61"><name pos:start="59:13" pos:end="59:24"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:24">pict_type</name></name> <operator pos:start="59:26" pos:end="59:27">==</operator> <name pos:start="59:29" pos:end="59:45">AV_PICTURE_TYPE_B</name> <operator pos:start="59:47" pos:end="59:48">||</operator> <name pos:start="59:50" pos:end="59:61"><name pos:start="59:50" pos:end="59:50">s</name><operator pos:start="59:51" pos:end="59:52">-&gt;</operator><name pos:start="59:53" pos:end="59:61">low_delay</name></name></expr>)</condition> <block pos:start="59:64" pos:end="69:9">{<block_content pos:start="61:13" pos:end="67:59">

            <decl_stmt pos:start="61:13" pos:end="61:68"><decl pos:start="61:13" pos:end="61:67"><type pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:15">int</name></type> <name pos:start="61:17" pos:end="61:19">ret</name> <init pos:start="61:21" pos:end="61:67">= <expr pos:start="61:23" pos:end="61:67"><call pos:start="61:23" pos:end="61:67"><name pos:start="61:23" pos:end="61:34">av_frame_ref</name><argument_list pos:start="61:35" pos:end="61:67">(<argument pos:start="61:36" pos:end="61:39"><expr pos:start="61:36" pos:end="61:39"><name pos:start="61:36" pos:end="61:39">pict</name></expr></argument>, <argument pos:start="61:42" pos:end="61:66"><expr pos:start="61:42" pos:end="61:66"><name pos:start="61:42" pos:end="61:66"><name pos:start="61:42" pos:end="61:42">s</name><operator pos:start="61:43" pos:end="61:44">-&gt;</operator><name pos:start="61:45" pos:end="61:63">current_picture_ptr</name><operator pos:start="61:64" pos:end="61:65">-&gt;</operator><name pos:start="61:66" pos:end="61:66">f</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="63:13" pos:end="65:27"><if pos:start="63:13" pos:end="65:27">if <condition pos:start="63:16" pos:end="63:24">(<expr pos:start="63:17" pos:end="63:23"><name pos:start="63:17" pos:end="63:19">ret</name> <operator pos:start="63:21" pos:end="63:21">&lt;</operator> <literal type="number" pos:start="63:23" pos:end="63:23">0</literal></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:27"><block_content pos:start="65:17" pos:end="65:27">

                <return pos:start="65:17" pos:end="65:27">return <expr pos:start="65:24" pos:end="65:26"><name pos:start="65:24" pos:end="65:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:59"><expr pos:start="67:13" pos:end="67:58"><call pos:start="67:13" pos:end="67:58"><name pos:start="67:13" pos:end="67:31">ff_print_debug_info</name><argument_list pos:start="67:32" pos:end="67:58">(<argument pos:start="67:33" pos:end="67:33"><expr pos:start="67:33" pos:end="67:33"><name pos:start="67:33" pos:end="67:33">s</name></expr></argument>, <argument pos:start="67:36" pos:end="67:57"><expr pos:start="67:36" pos:end="67:57"><name pos:start="67:36" pos:end="67:57"><name pos:start="67:36" pos:end="67:36">s</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:57">current_picture_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="69:11" pos:end="91:9">else <block pos:start="69:16" pos:end="91:9">{<block_content pos:start="71:13" pos:end="89:13">

            <if_stmt pos:start="71:13" pos:end="73:36"><if pos:start="71:13" pos:end="73:36">if <condition pos:start="71:16" pos:end="71:60">(<expr pos:start="71:17" pos:end="71:59"><name pos:start="71:17" pos:end="71:41"><name pos:start="71:17" pos:end="71:21">avctx</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:41">active_thread_type</name></name> <operator pos:start="71:43" pos:end="71:43">&amp;</operator> <name pos:start="71:45" pos:end="71:59">FF_THREAD_FRAME</name></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:36"><block_content pos:start="73:17" pos:end="73:36">

                <expr_stmt pos:start="73:17" pos:end="73:36"><expr pos:start="73:17" pos:end="73:35"><name pos:start="73:17" pos:end="73:33"><name pos:start="73:17" pos:end="73:17">s</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:33">picture_number</name></name><operator pos:start="73:34" pos:end="73:35">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="75:13" pos:end="75:56">/* latency of 1 frame for I- and P-frames */</comment>

            <comment type="block" pos:start="77:13" pos:end="77:63">/* XXX: use another variable than picture_number */</comment>

            <if_stmt pos:start="79:13" pos:end="89:13"><if pos:start="79:13" pos:end="89:13">if <condition pos:start="79:16" pos:end="79:44">(<expr pos:start="79:17" pos:end="79:43"><name pos:start="79:17" pos:end="79:35"><name pos:start="79:17" pos:end="79:17">s</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:35">last_picture_ptr</name></name> <operator pos:start="79:37" pos:end="79:38">!=</operator> <name pos:start="79:40" pos:end="79:43">NULL</name></expr>)</condition> <block pos:start="79:46" pos:end="89:13">{<block_content pos:start="81:17" pos:end="87:60">

                <decl_stmt pos:start="81:17" pos:end="81:69"><decl pos:start="81:17" pos:end="81:68"><type pos:start="81:17" pos:end="81:19"><name pos:start="81:17" pos:end="81:19">int</name></type> <name pos:start="81:21" pos:end="81:23">ret</name> <init pos:start="81:25" pos:end="81:68">= <expr pos:start="81:27" pos:end="81:68"><call pos:start="81:27" pos:end="81:68"><name pos:start="81:27" pos:end="81:38">av_frame_ref</name><argument_list pos:start="81:39" pos:end="81:68">(<argument pos:start="81:40" pos:end="81:43"><expr pos:start="81:40" pos:end="81:43"><name pos:start="81:40" pos:end="81:43">pict</name></expr></argument>, <argument pos:start="81:46" pos:end="81:67"><expr pos:start="81:46" pos:end="81:67"><name pos:start="81:46" pos:end="81:67"><name pos:start="81:46" pos:end="81:46">s</name><operator pos:start="81:47" pos:end="81:48">-&gt;</operator><name pos:start="81:49" pos:end="81:64">last_picture_ptr</name><operator pos:start="81:65" pos:end="81:66">-&gt;</operator><name pos:start="81:67" pos:end="81:67">f</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="83:17" pos:end="85:31"><if pos:start="83:17" pos:end="85:31">if <condition pos:start="83:20" pos:end="83:28">(<expr pos:start="83:21" pos:end="83:27"><name pos:start="83:21" pos:end="83:23">ret</name> <operator pos:start="83:25" pos:end="83:25">&lt;</operator> <literal type="number" pos:start="83:27" pos:end="83:27">0</literal></expr>)</condition><block type="pseudo" pos:start="85:21" pos:end="85:31"><block_content pos:start="85:21" pos:end="85:31">

                    <return pos:start="85:21" pos:end="85:31">return <expr pos:start="85:28" pos:end="85:30"><name pos:start="85:28" pos:end="85:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:60"><expr pos:start="87:17" pos:end="87:59"><call pos:start="87:17" pos:end="87:59"><name pos:start="87:17" pos:end="87:35">ff_print_debug_info</name><argument_list pos:start="87:36" pos:end="87:59">(<argument pos:start="87:37" pos:end="87:37"><expr pos:start="87:37" pos:end="87:37"><name pos:start="87:37" pos:end="87:37">s</name></expr></argument>, <argument pos:start="87:40" pos:end="87:58"><expr pos:start="87:40" pos:end="87:58"><name pos:start="87:40" pos:end="87:58"><name pos:start="87:40" pos:end="87:40">s</name><operator pos:start="87:41" pos:end="87:42">-&gt;</operator><name pos:start="87:43" pos:end="87:58">last_picture_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <return pos:start="95:9" pos:end="95:17">return <expr pos:start="95:16" pos:end="95:16"><literal type="number" pos:start="95:16" pos:end="95:16">1</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="97:7" pos:end="101:5">else <block pos:start="97:12" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:17">

        <return pos:start="99:9" pos:end="99:17">return <expr pos:start="99:16" pos:end="99:16"><literal type="number" pos:start="99:16" pos:end="99:16">0</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
