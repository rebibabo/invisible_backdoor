<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20394.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">apply_window_mp3</name><parameter_list pos:start="1:29" pos:end="3:38">(<parameter pos:start="1:30" pos:end="1:38"><decl pos:start="1:30" pos:end="1:38"><type pos:start="1:30" pos:end="1:38"><name pos:start="1:30" pos:end="1:34">float</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">in</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:50"><decl pos:start="1:41" pos:end="1:50"><type pos:start="1:41" pos:end="1:50"><name pos:start="1:41" pos:end="1:45">float</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">win</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:63"><decl pos:start="1:53" pos:end="1:63"><type pos:start="1:53" pos:end="1:63"><name pos:start="1:53" pos:end="1:55">int</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:63">unused</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:75"><decl pos:start="1:66" pos:end="1:75"><type pos:start="1:66" pos:end="1:75"><name pos:start="1:66" pos:end="1:70">float</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:75">out</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:37"><decl pos:start="3:30" pos:end="3:37"><type pos:start="3:30" pos:end="3:37"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:37">incr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="125:1">{<block_content pos:start="7:5" pos:end="123:15">

    <expr_stmt pos:start="7:5" pos:end="7:40"><expr pos:start="7:5" pos:end="7:39"><call pos:start="7:5" pos:end="7:39"><name pos:start="7:5" pos:end="7:20">LOCAL_ALIGNED_16</name><argument_list pos:start="7:21" pos:end="7:39">(<argument pos:start="7:22" pos:end="7:26"><expr pos:start="7:22" pos:end="7:26"><name pos:start="7:22" pos:end="7:26">float</name></expr></argument>, <argument pos:start="7:29" pos:end="7:32"><expr pos:start="7:29" pos:end="7:32"><name pos:start="7:29" pos:end="7:32">suma</name></expr></argument>, <argument pos:start="7:35" pos:end="7:38"><expr pos:start="7:35" pos:end="7:38"><index pos:start="7:35" pos:end="7:38">[<expr pos:start="7:36" pos:end="7:37"><literal type="number" pos:start="7:36" pos:end="7:37">17</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:40"><expr pos:start="9:5" pos:end="9:39"><call pos:start="9:5" pos:end="9:39"><name pos:start="9:5" pos:end="9:20">LOCAL_ALIGNED_16</name><argument_list pos:start="9:21" pos:end="9:39">(<argument pos:start="9:22" pos:end="9:26"><expr pos:start="9:22" pos:end="9:26"><name pos:start="9:22" pos:end="9:26">float</name></expr></argument>, <argument pos:start="9:29" pos:end="9:32"><expr pos:start="9:29" pos:end="9:32"><name pos:start="9:29" pos:end="9:32">sumb</name></expr></argument>, <argument pos:start="9:35" pos:end="9:38"><expr pos:start="9:35" pos:end="9:38"><index pos:start="9:35" pos:end="9:38">[<expr pos:start="9:36" pos:end="9:37"><literal type="number" pos:start="9:36" pos:end="9:37">17</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:40"><expr pos:start="11:5" pos:end="11:39"><call pos:start="11:5" pos:end="11:39"><name pos:start="11:5" pos:end="11:20">LOCAL_ALIGNED_16</name><argument_list pos:start="11:21" pos:end="11:39">(<argument pos:start="11:22" pos:end="11:26"><expr pos:start="11:22" pos:end="11:26"><name pos:start="11:22" pos:end="11:26">float</name></expr></argument>, <argument pos:start="11:29" pos:end="11:32"><expr pos:start="11:29" pos:end="11:32"><name pos:start="11:29" pos:end="11:32">sumc</name></expr></argument>, <argument pos:start="11:35" pos:end="11:38"><expr pos:start="11:35" pos:end="11:38"><index pos:start="11:35" pos:end="11:38">[<expr pos:start="11:36" pos:end="11:37"><literal type="number" pos:start="11:36" pos:end="11:37">17</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:40"><expr pos:start="13:5" pos:end="13:39"><call pos:start="13:5" pos:end="13:39"><name pos:start="13:5" pos:end="13:20">LOCAL_ALIGNED_16</name><argument_list pos:start="13:21" pos:end="13:39">(<argument pos:start="13:22" pos:end="13:26"><expr pos:start="13:22" pos:end="13:26"><name pos:start="13:22" pos:end="13:26">float</name></expr></argument>, <argument pos:start="13:29" pos:end="13:32"><expr pos:start="13:29" pos:end="13:32"><name pos:start="13:29" pos:end="13:32">sumd</name></expr></argument>, <argument pos:start="13:35" pos:end="13:38"><expr pos:start="13:35" pos:end="13:38"><index pos:start="13:35" pos:end="13:38">[<expr pos:start="13:36" pos:end="13:37"><literal type="number" pos:start="13:36" pos:end="13:37">17</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:14"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:9">float</name></type> <name pos:start="17:11" pos:end="17:13">sum</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:28">/* copy to avoid wrap */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:43"><expr pos:start="23:5" pos:end="23:42"><call pos:start="23:5" pos:end="23:42"><name pos:start="23:5" pos:end="23:10">memcpy</name><argument_list pos:start="23:11" pos:end="23:42">(<argument pos:start="23:12" pos:end="23:19"><expr pos:start="23:12" pos:end="23:19"><name pos:start="23:12" pos:end="23:13">in</name> <operator pos:start="23:15" pos:end="23:15">+</operator> <literal type="number" pos:start="23:17" pos:end="23:19">512</literal></expr></argument>, <argument pos:start="23:22" pos:end="23:23"><expr pos:start="23:22" pos:end="23:23"><name pos:start="23:22" pos:end="23:23">in</name></expr></argument>, <argument pos:start="23:26" pos:end="23:41"><expr pos:start="23:26" pos:end="23:41"><literal type="number" pos:start="23:26" pos:end="23:27">32</literal> <operator pos:start="23:29" pos:end="23:29">*</operator> <sizeof pos:start="23:31" pos:end="23:41">sizeof<argument_list pos:start="23:37" pos:end="23:41">(<argument pos:start="23:38" pos:end="23:40"><expr pos:start="23:38" pos:end="23:40"><operator pos:start="23:38" pos:end="23:38">*</operator><name pos:start="23:39" pos:end="23:40">in</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:63"><expr pos:start="27:5" pos:end="27:62"><call pos:start="27:5" pos:end="27:62"><name pos:start="27:5" pos:end="27:16">apply_window</name><argument_list pos:start="27:17" pos:end="27:62">(<argument pos:start="27:18" pos:end="27:24"><expr pos:start="27:18" pos:end="27:24"><name pos:start="27:18" pos:end="27:19">in</name> <operator pos:start="27:21" pos:end="27:21">+</operator> <literal type="number" pos:start="27:23" pos:end="27:24">16</literal></expr></argument>, <argument pos:start="27:27" pos:end="27:29"><expr pos:start="27:27" pos:end="27:29"><name pos:start="27:27" pos:end="27:29">win</name></expr></argument>     , <argument pos:start="27:37" pos:end="27:45"><expr pos:start="27:37" pos:end="27:45"><name pos:start="27:37" pos:end="27:39">win</name> <operator pos:start="27:41" pos:end="27:41">+</operator> <literal type="number" pos:start="27:43" pos:end="27:45">512</literal></expr></argument>, <argument pos:start="27:48" pos:end="27:51"><expr pos:start="27:48" pos:end="27:51"><name pos:start="27:48" pos:end="27:51">suma</name></expr></argument>, <argument pos:start="27:54" pos:end="27:57"><expr pos:start="27:54" pos:end="27:57"><name pos:start="27:54" pos:end="27:57">sumc</name></expr></argument>, <argument pos:start="27:60" pos:end="27:61"><expr pos:start="27:60" pos:end="27:61"><literal type="number" pos:start="27:60" pos:end="27:61">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:63"><expr pos:start="29:5" pos:end="29:62"><call pos:start="29:5" pos:end="29:62"><name pos:start="29:5" pos:end="29:16">apply_window</name><argument_list pos:start="29:17" pos:end="29:62">(<argument pos:start="29:18" pos:end="29:24"><expr pos:start="29:18" pos:end="29:24"><name pos:start="29:18" pos:end="29:19">in</name> <operator pos:start="29:21" pos:end="29:21">+</operator> <literal type="number" pos:start="29:23" pos:end="29:24">32</literal></expr></argument>, <argument pos:start="29:27" pos:end="29:34"><expr pos:start="29:27" pos:end="29:34"><name pos:start="29:27" pos:end="29:29">win</name> <operator pos:start="29:31" pos:end="29:31">+</operator> <literal type="number" pos:start="29:33" pos:end="29:34">48</literal></expr></argument>, <argument pos:start="29:37" pos:end="29:45"><expr pos:start="29:37" pos:end="29:45"><name pos:start="29:37" pos:end="29:39">win</name> <operator pos:start="29:41" pos:end="29:41">+</operator> <literal type="number" pos:start="29:43" pos:end="29:45">640</literal></expr></argument>, <argument pos:start="29:48" pos:end="29:51"><expr pos:start="29:48" pos:end="29:51"><name pos:start="29:48" pos:end="29:51">sumb</name></expr></argument>, <argument pos:start="29:54" pos:end="29:57"><expr pos:start="29:54" pos:end="29:57"><name pos:start="29:54" pos:end="29:57">sumd</name></expr></argument>, <argument pos:start="29:60" pos:end="29:61"><expr pos:start="29:60" pos:end="29:61"><literal type="number" pos:start="29:60" pos:end="29:61">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:43"><expr pos:start="33:5" pos:end="33:42"><call pos:start="33:5" pos:end="33:42"><name pos:start="33:5" pos:end="33:8">SUM8</name><argument_list pos:start="33:9" pos:end="33:42">(<argument pos:start="33:10" pos:end="33:13"><expr pos:start="33:10" pos:end="33:13"><name pos:start="33:10" pos:end="33:13">MACS</name></expr></argument>, <argument pos:start="33:16" pos:end="33:22"><expr pos:start="33:16" pos:end="33:22"><name pos:start="33:16" pos:end="33:22"><name pos:start="33:16" pos:end="33:19">suma</name><index pos:start="33:20" pos:end="33:22">[<expr pos:start="33:21" pos:end="33:21"><literal type="number" pos:start="33:21" pos:end="33:21">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="33:25" pos:end="33:32"><expr pos:start="33:25" pos:end="33:32"><name pos:start="33:25" pos:end="33:27">win</name> <operator pos:start="33:29" pos:end="33:29">+</operator> <literal type="number" pos:start="33:31" pos:end="33:32">32</literal></expr></argument>, <argument pos:start="33:35" pos:end="33:41"><expr pos:start="33:35" pos:end="33:41"><name pos:start="33:35" pos:end="33:36">in</name> <operator pos:start="33:38" pos:end="33:38">+</operator> <literal type="number" pos:start="33:40" pos:end="33:41">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:17"><expr pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:8">sumc</name><index pos:start="37:9" pos:end="37:12">[ <expr pos:start="37:11" pos:end="37:11"><literal type="number" pos:start="37:11" pos:end="37:11">0</literal></expr>]</index></name> <operator pos:start="37:14" pos:end="37:14">=</operator> <literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:17"><expr pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:8">sumb</name><index pos:start="39:9" pos:end="39:12">[<expr pos:start="39:10" pos:end="39:11"><literal type="number" pos:start="39:10" pos:end="39:11">16</literal></expr>]</index></name> <operator pos:start="39:14" pos:end="39:14">=</operator> <literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="64:0"><expr pos:start="41:5" pos:end="41:16"><name pos:start="41:5" pos:end="41:12"><name pos:start="41:5" pos:end="41:8">sumd</name><index pos:start="41:9" pos:end="41:12">[<expr pos:start="41:10" pos:end="41:11"><literal type="number" pos:start="41:10" pos:end="41:11">16</literal></expr>]</index></name> <operator pos:start="41:14" pos:end="41:14">=</operator> <literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr>;</expr_stmt>



<cpp:define pos:start="45:1" pos:end="63:62">#<cpp:directive pos:start="45:2" pos:end="45:7">define</cpp:directive> <cpp:macro pos:start="45:9" pos:end="45:48"><name pos:start="45:9" pos:end="45:12">SUMS</name><parameter_list pos:start="45:13" pos:end="45:48">(<parameter pos:start="45:14" pos:end="45:17"><type pos:start="45:14" pos:end="45:17"><name pos:start="45:14" pos:end="45:17">suma</name></type></parameter>, <parameter pos:start="45:20" pos:end="45:23"><type pos:start="45:20" pos:end="45:23"><name pos:start="45:20" pos:end="45:23">sumb</name></type></parameter>, <parameter pos:start="45:26" pos:end="45:29"><type pos:start="45:26" pos:end="45:29"><name pos:start="45:26" pos:end="45:29">sumc</name></type></parameter>, <parameter pos:start="45:32" pos:end="45:35"><type pos:start="45:32" pos:end="45:35"><name pos:start="45:32" pos:end="45:35">sumd</name></type></parameter>, <parameter pos:start="45:38" pos:end="45:41"><type pos:start="45:38" pos:end="45:41"><name pos:start="45:38" pos:end="45:41">out1</name></type></parameter>, <parameter pos:start="45:44" pos:end="45:47"><type pos:start="45:44" pos:end="45:47"><name pos:start="45:44" pos:end="45:47">out2</name></type></parameter>)</parameter_list></cpp:macro>               \

            <cpp:value pos:start="47:13" pos:end="63:62">"movups " #sumd "(%4),       %%xmm0          \n\t" \

            "shufps         $0x1b,       %%xmm0, %%xmm0  \n\t" \

            "subps  " #suma "(%1),       %%xmm0          \n\t" \

            "movaps        %%xmm0," #out1 "(%0)          \n\t" \

\

            "movups " #sumc "(%3),       %%xmm0          \n\t" \

            "shufps         $0x1b,       %%xmm0, %%xmm0  \n\t" \

            "addps  " #sumb "(%2),       %%xmm0          \n\t" \

            "movaps        %%xmm0," #out2 "(%0)          \n\t"</cpp:value></cpp:define>



    <if_stmt pos:start="67:5" pos:end="115:5"><if pos:start="67:5" pos:end="91:5">if <condition pos:start="67:8" pos:end="67:18">(<expr pos:start="67:9" pos:end="67:17"><name pos:start="67:9" pos:end="67:12">incr</name> <operator pos:start="67:14" pos:end="67:15">==</operator> <literal type="number" pos:start="67:17" pos:end="67:17">1</literal></expr>)</condition> <block pos:start="67:20" pos:end="91:5">{<block_content pos:start="69:9" pos:end="89:23">

        <asm pos:start="69:9" pos:end="87:14">__asm__ <specifier pos:start="69:17" pos:end="69:24">volatile</specifier>(

            SUMS( 0, 48,  4, 52,  0, 112)

            SUMS(16, 32, 20, 36, 16,  96)

            SUMS(32, 16, 36, 20, 32,  80)

            SUMS(48,  0, 52,  4, 48,  64)



            :"+&amp;r"(out)

            :"r"(&amp;suma[0]), "r"(&amp;sumb[0]), "r"(&amp;sumc[0]), "r"(&amp;sumd[0])

            :"memory"

            );</asm>

        <expr_stmt pos:start="89:9" pos:end="89:23"><expr pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:11">out</name> <operator pos:start="89:13" pos:end="89:14">+=</operator> <literal type="number" pos:start="89:16" pos:end="89:17">16</literal><operator pos:start="89:18" pos:end="89:18">*</operator><name pos:start="89:19" pos:end="89:22">incr</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="115:5">else <block pos:start="91:12" pos:end="115:5">{<block_content pos:start="93:9" pos:end="113:9">

        <decl_stmt pos:start="93:9" pos:end="93:14"><decl pos:start="93:9" pos:end="93:13"><type pos:start="93:9" pos:end="93:11"><name pos:start="93:9" pos:end="93:11">int</name></type> <name pos:start="93:13" pos:end="93:13">j</name></decl>;</decl_stmt>

        <decl_stmt pos:start="95:9" pos:end="95:38"><decl pos:start="95:9" pos:end="95:37"><type pos:start="95:9" pos:end="95:15"><name pos:start="95:9" pos:end="95:13">float</name> <modifier pos:start="95:15" pos:end="95:15">*</modifier></type><name pos:start="95:16" pos:end="95:19">out2</name> <init pos:start="95:21" pos:end="95:37">= <expr pos:start="95:23" pos:end="95:37"><name pos:start="95:23" pos:end="95:25">out</name> <operator pos:start="95:27" pos:end="95:27">+</operator> <literal type="number" pos:start="95:29" pos:end="95:30">32</literal> <operator pos:start="95:32" pos:end="95:32">*</operator> <name pos:start="95:34" pos:end="95:37">incr</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:32"><expr pos:start="97:9" pos:end="97:31"><name pos:start="97:9" pos:end="97:16"><name pos:start="97:9" pos:end="97:11">out</name><index pos:start="97:12" pos:end="97:16">[<expr pos:start="97:13" pos:end="97:13"><literal type="number" pos:start="97:13" pos:end="97:13">0</literal></expr>  ]</index></name>  <operator pos:start="97:19" pos:end="97:19">=</operator> <operator pos:start="97:21" pos:end="97:21">-</operator><name pos:start="97:22" pos:end="97:31"><name pos:start="97:22" pos:end="97:25">suma</name><index pos:start="97:26" pos:end="97:31">[   <expr pos:start="97:30" pos:end="97:30"><literal type="number" pos:start="97:30" pos:end="97:30">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:20"><expr pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:11">out</name> <operator pos:start="99:13" pos:end="99:14">+=</operator> <name pos:start="99:16" pos:end="99:19">incr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:21"><expr pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:12">out2</name> <operator pos:start="101:14" pos:end="101:15">-=</operator> <name pos:start="101:17" pos:end="101:20">incr</name></expr>;</expr_stmt>

        <for pos:start="103:9" pos:end="113:9">for<control pos:start="103:12" pos:end="103:25">(<init pos:start="103:13" pos:end="103:16"><expr pos:start="103:13" pos:end="103:15"><name pos:start="103:13" pos:end="103:13">j</name><operator pos:start="103:14" pos:end="103:14">=</operator><literal type="number" pos:start="103:15" pos:end="103:15">1</literal></expr>;</init><condition pos:start="103:17" pos:end="103:21"><expr pos:start="103:17" pos:end="103:20"><name pos:start="103:17" pos:end="103:17">j</name><operator pos:start="103:18" pos:end="103:18">&lt;</operator><literal type="number" pos:start="103:19" pos:end="103:20">16</literal></expr>;</condition><incr pos:start="103:22" pos:end="103:24"><expr pos:start="103:22" pos:end="103:24"><name pos:start="103:22" pos:end="103:22">j</name><operator pos:start="103:23" pos:end="103:24">++</operator></expr></incr>)</control> <block pos:start="103:27" pos:end="113:9">{<block_content pos:start="105:13" pos:end="111:25">

            <expr_stmt pos:start="105:13" pos:end="105:45"><expr pos:start="105:13" pos:end="105:44"><operator pos:start="105:13" pos:end="105:13">*</operator><name pos:start="105:14" pos:end="105:16">out</name>  <operator pos:start="105:19" pos:end="105:19">=</operator> <operator pos:start="105:21" pos:end="105:21">-</operator><name pos:start="105:22" pos:end="105:31"><name pos:start="105:22" pos:end="105:25">suma</name><index pos:start="105:26" pos:end="105:31">[   <expr pos:start="105:30" pos:end="105:30"><name pos:start="105:30" pos:end="105:30">j</name></expr>]</index></name> <operator pos:start="105:33" pos:end="105:33">+</operator> <name pos:start="105:35" pos:end="105:44"><name pos:start="105:35" pos:end="105:38">sumd</name><index pos:start="105:39" pos:end="105:44">[<expr pos:start="105:40" pos:end="105:43"><literal type="number" pos:start="105:40" pos:end="105:42">16</literal><operator pos:start="105:42" pos:end="105:42">-</operator><name pos:start="105:43" pos:end="105:43">j</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:45"><expr pos:start="107:13" pos:end="107:44"><operator pos:start="107:13" pos:end="107:13">*</operator><name pos:start="107:14" pos:end="107:17">out2</name> <operator pos:start="107:19" pos:end="107:19">=</operator>  <name pos:start="107:22" pos:end="107:31"><name pos:start="107:22" pos:end="107:25">sumb</name><index pos:start="107:26" pos:end="107:31">[<expr pos:start="107:27" pos:end="107:30"><literal type="number" pos:start="107:27" pos:end="107:29">16</literal><operator pos:start="107:29" pos:end="107:29">-</operator><name pos:start="107:30" pos:end="107:30">j</name></expr>]</index></name> <operator pos:start="107:33" pos:end="107:33">+</operator> <name pos:start="107:35" pos:end="107:44"><name pos:start="107:35" pos:end="107:38">sumc</name><index pos:start="107:39" pos:end="107:44">[   <expr pos:start="107:43" pos:end="107:43"><name pos:start="107:43" pos:end="107:43">j</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:25"><expr pos:start="109:13" pos:end="109:24"><name pos:start="109:13" pos:end="109:15">out</name>  <operator pos:start="109:18" pos:end="109:19">+=</operator> <name pos:start="109:21" pos:end="109:24">incr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:25"><expr pos:start="111:13" pos:end="111:24"><name pos:start="111:13" pos:end="111:16">out2</name> <operator pos:start="111:18" pos:end="111:19">-=</operator> <name pos:start="111:21" pos:end="111:24">incr</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:12"><expr pos:start="119:5" pos:end="119:11"><name pos:start="119:5" pos:end="119:7">sum</name> <operator pos:start="119:9" pos:end="119:9">=</operator> <literal type="number" pos:start="119:11" pos:end="119:11">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:44"><expr pos:start="121:5" pos:end="121:43"><call pos:start="121:5" pos:end="121:43"><name pos:start="121:5" pos:end="121:8">SUM8</name><argument_list pos:start="121:9" pos:end="121:43">(<argument pos:start="121:10" pos:end="121:13"><expr pos:start="121:10" pos:end="121:13"><name pos:start="121:10" pos:end="121:13">MLSS</name></expr></argument>, <argument pos:start="121:16" pos:end="121:18"><expr pos:start="121:16" pos:end="121:18"><name pos:start="121:16" pos:end="121:18">sum</name></expr></argument>, <argument pos:start="121:21" pos:end="121:33"><expr pos:start="121:21" pos:end="121:33"><name pos:start="121:21" pos:end="121:23">win</name> <operator pos:start="121:25" pos:end="121:25">+</operator> <literal type="number" pos:start="121:27" pos:end="121:30">16</literal> <operator pos:start="121:30" pos:end="121:30">+</operator> <literal type="number" pos:start="121:32" pos:end="121:33">32</literal></expr></argument>, <argument pos:start="121:36" pos:end="121:42"><expr pos:start="121:36" pos:end="121:42"><name pos:start="121:36" pos:end="121:37">in</name> <operator pos:start="121:39" pos:end="121:39">+</operator> <literal type="number" pos:start="121:41" pos:end="121:42">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:15"><expr pos:start="123:5" pos:end="123:14"><operator pos:start="123:5" pos:end="123:5">*</operator><name pos:start="123:6" pos:end="123:8">out</name> <operator pos:start="123:10" pos:end="123:10">=</operator> <name pos:start="123:12" pos:end="123:14">sum</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
