<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15088.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:42">ppc_hash32_get_physical_address</name><parameter_list pos:start="1:43" pos:end="5:59">(<parameter pos:start="1:44" pos:end="1:59"><decl pos:start="1:44" pos:end="1:59"><type pos:start="1:44" pos:end="1:59"><name pos:start="1:44" pos:end="1:54">CPUPPCState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">env</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:87"><decl pos:start="1:62" pos:end="1:87"><type pos:start="1:62" pos:end="1:87"><name pos:start="1:62" pos:end="1:82"><name pos:start="1:62" pos:end="1:67">struct</name> <name pos:start="1:69" pos:end="1:82">mmu_ctx_hash32</name></name> <modifier pos:start="1:84" pos:end="1:84">*</modifier></type><name pos:start="1:85" pos:end="1:87">ctx</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:61"><decl pos:start="3:44" pos:end="3:61"><type pos:start="3:44" pos:end="3:61"><name pos:start="3:44" pos:end="3:55">target_ulong</name></type> <name pos:start="3:57" pos:end="3:61">eaddr</name></decl></parameter>, <parameter pos:start="3:64" pos:end="3:69"><decl pos:start="3:64" pos:end="3:69"><type pos:start="3:64" pos:end="3:69"><name pos:start="3:64" pos:end="3:66">int</name></type> <name pos:start="3:68" pos:end="3:69">rw</name></decl></parameter>,

                                           <parameter pos:start="5:44" pos:end="5:58"><decl pos:start="5:44" pos:end="5:58"><type pos:start="5:44" pos:end="5:58"><name pos:start="5:44" pos:end="5:46">int</name></type> <name pos:start="5:48" pos:end="5:58">access_type</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="49:1">{<block_content pos:start="9:5" pos:end="47:5">

    <decl_stmt pos:start="9:5" pos:end="11:55"><decl pos:start="9:5" pos:end="11:54"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:18">real_mode</name> <init pos:start="9:20" pos:end="11:54">= <expr pos:start="9:22" pos:end="11:54"><operator pos:start="9:22" pos:end="9:22">(</operator><name pos:start="9:23" pos:end="9:33">access_type</name> <operator pos:start="9:35" pos:end="9:36">==</operator> <name pos:start="9:38" pos:end="9:48">ACCESS_CODE</name> <operator pos:start="9:50" pos:end="9:51">&amp;&amp;</operator> <name pos:start="9:53" pos:end="9:58">msr_ir</name> <operator pos:start="9:60" pos:end="9:61">==</operator> <literal type="number" pos:start="9:63" pos:end="9:63">0</literal><operator pos:start="9:64" pos:end="9:64">)</operator>

        <operator pos:start="11:9" pos:end="11:10">||</operator> <operator pos:start="11:12" pos:end="11:12">(</operator><name pos:start="11:13" pos:end="11:23">access_type</name> <operator pos:start="11:25" pos:end="11:26">!=</operator> <name pos:start="11:28" pos:end="11:38">ACCESS_CODE</name> <operator pos:start="11:40" pos:end="11:41">&amp;&amp;</operator> <name pos:start="11:43" pos:end="11:48">msr_dr</name> <operator pos:start="11:50" pos:end="11:51">==</operator> <literal type="number" pos:start="11:53" pos:end="11:53">0</literal><operator pos:start="11:54" pos:end="11:54">)</operator></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="47:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:18">(<expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:17">real_mode</name></expr>)</condition> <block pos:start="15:20" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:17">

        <expr_stmt pos:start="17:9" pos:end="17:27"><expr pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:11">ctx</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:18">raddr</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:26">eaddr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:55"><expr pos:start="19:9" pos:end="19:54"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:11">ctx</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:17">prot</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:29">PAGE_READ</name> <operator pos:start="19:31" pos:end="19:31">|</operator> <name pos:start="19:33" pos:end="19:41">PAGE_EXEC</name> <operator pos:start="19:43" pos:end="19:43">|</operator> <name pos:start="19:45" pos:end="19:54">PAGE_WRITE</name></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="47:5">else <block pos:start="23:12" pos:end="47:5">{<block_content pos:start="25:9" pos:end="45:19">

        <decl_stmt pos:start="25:9" pos:end="25:21"><decl pos:start="25:9" pos:end="25:20"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:15">ret</name> <init pos:start="25:17" pos:end="25:20">= <expr pos:start="25:19" pos:end="25:20"><operator pos:start="25:19" pos:end="25:19">-</operator><literal type="number" pos:start="25:20" pos:end="25:20">1</literal></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="29:9" pos:end="29:31">/* Try to find a BAT */</comment>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:30">(<expr pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:15">env</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:24">nb_BATs</name></name> <operator pos:start="31:26" pos:end="31:27">!=</operator> <literal type="number" pos:start="31:29" pos:end="31:29">0</literal></expr>)</condition> <block pos:start="31:32" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:71">

            <expr_stmt pos:start="33:13" pos:end="33:71"><expr pos:start="33:13" pos:end="33:70"><name pos:start="33:13" pos:end="33:15">ret</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:70"><name pos:start="33:19" pos:end="33:36">ppc_hash32_get_bat</name><argument_list pos:start="33:37" pos:end="33:70">(<argument pos:start="33:38" pos:end="33:40"><expr pos:start="33:38" pos:end="33:40"><name pos:start="33:38" pos:end="33:40">env</name></expr></argument>, <argument pos:start="33:43" pos:end="33:45"><expr pos:start="33:43" pos:end="33:45"><name pos:start="33:43" pos:end="33:45">ctx</name></expr></argument>, <argument pos:start="33:48" pos:end="33:52"><expr pos:start="33:48" pos:end="33:52"><name pos:start="33:48" pos:end="33:52">eaddr</name></expr></argument>, <argument pos:start="33:55" pos:end="33:56"><expr pos:start="33:55" pos:end="33:56"><name pos:start="33:55" pos:end="33:56">rw</name></expr></argument>, <argument pos:start="33:59" pos:end="33:69"><expr pos:start="33:59" pos:end="33:69"><name pos:start="33:59" pos:end="33:69">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">&lt;</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>)</condition> <block pos:start="37:22" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:66">

            <comment type="block" pos:start="39:13" pos:end="39:66">/* We didn't match any BAT entry or don't have BATs */</comment>

            <expr_stmt pos:start="41:13" pos:end="41:66"><expr pos:start="41:13" pos:end="41:65"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:65"><name pos:start="41:19" pos:end="41:31">get_segment32</name><argument_list pos:start="41:32" pos:end="41:65">(<argument pos:start="41:33" pos:end="41:35"><expr pos:start="41:33" pos:end="41:35"><name pos:start="41:33" pos:end="41:35">env</name></expr></argument>, <argument pos:start="41:38" pos:end="41:40"><expr pos:start="41:38" pos:end="41:40"><name pos:start="41:38" pos:end="41:40">ctx</name></expr></argument>, <argument pos:start="41:43" pos:end="41:47"><expr pos:start="41:43" pos:end="41:47"><name pos:start="41:43" pos:end="41:47">eaddr</name></expr></argument>, <argument pos:start="41:50" pos:end="41:51"><expr pos:start="41:50" pos:end="41:51"><name pos:start="41:50" pos:end="41:51">rw</name></expr></argument>, <argument pos:start="41:54" pos:end="41:64"><expr pos:start="41:54" pos:end="41:64"><name pos:start="41:54" pos:end="41:64">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="45:9" pos:end="45:19">return <expr pos:start="45:16" pos:end="45:18"><name pos:start="45:16" pos:end="45:18">ret</name></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
