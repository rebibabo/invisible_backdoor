<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25101.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:46"><name pos:start="1:1" pos:end="1:30">gen_intermediate_code_internal</name><argument_list pos:start="1:31" pos:end="3:46">(<argument pos:start="1:32" pos:end="1:44">MoxieCPU *cpu</argument>, <argument pos:start="1:47" pos:end="1:66">TranslationBlock *tb</argument>,

                               <argument pos:start="3:32" pos:end="3:45">bool search_pc</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="181:1">{<block_content pos:start="7:5" pos:end="179:5">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cs</name> <init pos:start="7:18" pos:end="7:27">= <expr pos:start="7:20" pos:end="7:27"><call pos:start="7:20" pos:end="7:27"><name pos:start="7:20" pos:end="7:22">CPU</name><argument_list pos:start="7:23" pos:end="7:27">(<argument pos:start="7:24" pos:end="7:26"><expr pos:start="7:24" pos:end="7:26"><name pos:start="7:24" pos:end="7:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">DisasContext</name></type> <name pos:start="9:18" pos:end="9:20">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:25">pc_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">uint16_t</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:25">gen_opc_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:17">CPUBreakpoint</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:21">bp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">j</name></decl>, <decl pos:start="17:12" pos:end="17:18"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:13">lj</name> <init pos:start="17:15" pos:end="17:18">= <expr pos:start="17:17" pos:end="17:18"><operator pos:start="17:17" pos:end="17:17">-</operator><literal type="number" pos:start="17:18" pos:end="17:18">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:35"><decl pos:start="19:5" pos:end="19:34"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:17">CPUMoxieState</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:22">env</name> <init pos:start="19:24" pos:end="19:34">= <expr pos:start="19:26" pos:end="19:34"><operator pos:start="19:26" pos:end="19:26">&amp;</operator><name pos:start="19:27" pos:end="19:34"><name pos:start="19:27" pos:end="19:29">cpu</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:34">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:17">num_insns</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:22"><expr pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:12">pc_start</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:21"><name pos:start="25:16" pos:end="25:17">tb</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:21">pc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:53"><expr pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:15">gen_opc_end</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:37"><name pos:start="27:19" pos:end="27:25">tcg_ctx</name><operator pos:start="27:26" pos:end="27:26">.</operator><name pos:start="27:27" pos:end="27:37">gen_opc_buf</name></name> <operator pos:start="27:39" pos:end="27:39">+</operator> <name pos:start="27:41" pos:end="27:52">OPC_MAX_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:10"><name pos:start="29:5" pos:end="29:7">ctx</name><operator pos:start="29:8" pos:end="29:8">.</operator><name pos:start="29:9" pos:end="29:10">pc</name></name> <operator pos:start="29:12" pos:end="29:12">=</operator> <name pos:start="29:14" pos:end="29:21">pc_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:7">ctx</name><operator pos:start="31:8" pos:end="31:8">.</operator><name pos:start="31:9" pos:end="31:16">saved_pc</name></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <operator pos:start="31:20" pos:end="31:20">-</operator><literal type="number" pos:start="31:21" pos:end="31:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:16"><expr pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:7">ctx</name><operator pos:start="33:8" pos:end="33:8">.</operator><name pos:start="33:9" pos:end="33:10">tb</name></name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:15">tb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:19"><expr pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:7">ctx</name><operator pos:start="35:8" pos:end="35:8">.</operator><name pos:start="35:9" pos:end="35:14">memidx</name></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:31"><expr pos:start="37:5" pos:end="37:30"><name pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:7">ctx</name><operator pos:start="37:8" pos:end="37:8">.</operator><name pos:start="37:9" pos:end="37:26">singlestep_enabled</name></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <literal type="number" pos:start="37:30" pos:end="37:30">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:14"><name pos:start="39:5" pos:end="39:7">ctx</name><operator pos:start="39:8" pos:end="39:8">.</operator><name pos:start="39:9" pos:end="39:14">bstate</name></name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:24">BS_NONE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:18"><expr pos:start="41:5" pos:end="41:17"><name pos:start="41:5" pos:end="41:13">num_insns</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <literal type="number" pos:start="41:17" pos:end="41:17">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:19"><expr pos:start="45:5" pos:end="45:18"><call pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:16">gen_tb_start</name><argument_list pos:start="45:17" pos:end="45:18">()</argument_list></call></expr>;</expr_stmt>

    <do pos:start="47:5" pos:end="117:73">do <block pos:start="47:8" pos:end="117:5">{<block_content pos:start="49:9" pos:end="115:9">

        <if_stmt pos:start="49:9" pos:end="67:9"><if pos:start="49:9" pos:end="67:9">if <condition pos:start="49:12" pos:end="49:54">(<expr pos:start="49:13" pos:end="49:53"><call pos:start="49:13" pos:end="49:53"><name pos:start="49:13" pos:end="49:20">unlikely</name><argument_list pos:start="49:21" pos:end="49:53">(<argument pos:start="49:22" pos:end="49:52"><expr pos:start="49:22" pos:end="49:52"><operator pos:start="49:22" pos:end="49:22">!</operator><call pos:start="49:23" pos:end="49:52"><name pos:start="49:23" pos:end="49:34">QTAILQ_EMPTY</name><argument_list pos:start="49:35" pos:end="49:52">(<argument pos:start="49:36" pos:end="49:51"><expr pos:start="49:36" pos:end="49:51"><operator pos:start="49:36" pos:end="49:36">&amp;</operator><name pos:start="49:37" pos:end="49:51"><name pos:start="49:37" pos:end="49:38">cs</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:51">breakpoints</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:56" pos:end="67:9">{<block_content pos:start="51:13" pos:end="65:13">

            <macro pos:start="51:13" pos:end="51:55"><name pos:start="51:13" pos:end="51:26">QTAILQ_FOREACH</name><argument_list pos:start="51:27" pos:end="51:55">(<argument pos:start="51:28" pos:end="51:29">bp</argument>, <argument pos:start="51:32" pos:end="51:47">&amp;cs-&gt;breakpoints</argument>, <argument pos:start="51:50" pos:end="51:54">entry</argument>)</argument_list></macro> <block pos:start="51:57" pos:end="65:13">{<block_content pos:start="53:17" pos:end="63:17">

                <if_stmt pos:start="53:17" pos:end="63:17"><if pos:start="53:17" pos:end="63:17">if <condition pos:start="53:20" pos:end="53:37">(<expr pos:start="53:21" pos:end="53:36"><name pos:start="53:21" pos:end="53:26"><name pos:start="53:21" pos:end="53:23">ctx</name><operator pos:start="53:24" pos:end="53:24">.</operator><name pos:start="53:25" pos:end="53:26">pc</name></name> <operator pos:start="53:28" pos:end="53:29">==</operator> <name pos:start="53:31" pos:end="53:36"><name pos:start="53:31" pos:end="53:32">bp</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:36">pc</name></name></expr>)</condition> <block pos:start="53:39" pos:end="63:17">{<block_content pos:start="55:21" pos:end="61:41">

                    <expr_stmt pos:start="55:21" pos:end="55:53"><expr pos:start="55:21" pos:end="55:52"><call pos:start="55:21" pos:end="55:52"><name pos:start="55:21" pos:end="55:36">tcg_gen_movi_i32</name><argument_list pos:start="55:37" pos:end="55:52">(<argument pos:start="55:38" pos:end="55:43"><expr pos:start="55:38" pos:end="55:43"><name pos:start="55:38" pos:end="55:43">cpu_pc</name></expr></argument>, <argument pos:start="55:46" pos:end="55:51"><expr pos:start="55:46" pos:end="55:51"><name pos:start="55:46" pos:end="55:51"><name pos:start="55:46" pos:end="55:48">ctx</name><operator pos:start="55:49" pos:end="55:49">.</operator><name pos:start="55:50" pos:end="55:51">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="57:21" pos:end="57:46"><expr pos:start="57:21" pos:end="57:45"><call pos:start="57:21" pos:end="57:45"><name pos:start="57:21" pos:end="57:36">gen_helper_debug</name><argument_list pos:start="57:37" pos:end="57:45">(<argument pos:start="57:38" pos:end="57:44"><expr pos:start="57:38" pos:end="57:44"><name pos:start="57:38" pos:end="57:44">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:41"><expr pos:start="59:21" pos:end="59:40"><name pos:start="59:21" pos:end="59:30"><name pos:start="59:21" pos:end="59:23">ctx</name><operator pos:start="59:24" pos:end="59:24">.</operator><name pos:start="59:25" pos:end="59:30">bstate</name></name> <operator pos:start="59:32" pos:end="59:32">=</operator> <name pos:start="59:34" pos:end="59:40">BS_EXCP</name></expr>;</expr_stmt>

                    <goto pos:start="61:21" pos:end="61:41">goto <name pos:start="61:26" pos:end="61:40">done_generating</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="71:9" pos:end="93:9"><if pos:start="71:9" pos:end="93:9">if <condition pos:start="71:12" pos:end="71:22">(<expr pos:start="71:13" pos:end="71:21"><name pos:start="71:13" pos:end="71:21">search_pc</name></expr>)</condition> <block pos:start="71:24" pos:end="93:9">{<block_content pos:start="73:13" pos:end="91:51">

            <expr_stmt pos:start="73:13" pos:end="73:58"><expr pos:start="73:13" pos:end="73:57"><name pos:start="73:13" pos:end="73:13">j</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <name pos:start="73:17" pos:end="73:35"><name pos:start="73:17" pos:end="73:23">tcg_ctx</name><operator pos:start="73:24" pos:end="73:24">.</operator><name pos:start="73:25" pos:end="73:35">gen_opc_ptr</name></name> <operator pos:start="73:37" pos:end="73:37">-</operator> <name pos:start="73:39" pos:end="73:57"><name pos:start="73:39" pos:end="73:45">tcg_ctx</name><operator pos:start="73:46" pos:end="73:46">.</operator><name pos:start="73:47" pos:end="73:57">gen_opc_buf</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="75:13" pos:end="85:13"><if pos:start="75:13" pos:end="85:13">if <condition pos:start="75:16" pos:end="75:23">(<expr pos:start="75:17" pos:end="75:22"><name pos:start="75:17" pos:end="75:18">lj</name> <operator pos:start="75:20" pos:end="75:20">&lt;</operator> <name pos:start="75:22" pos:end="75:22">j</name></expr>)</condition> <block pos:start="75:25" pos:end="85:13">{<block_content pos:start="77:17" pos:end="83:17">

                <expr_stmt pos:start="77:17" pos:end="77:21"><expr pos:start="77:17" pos:end="77:20"><name pos:start="77:17" pos:end="77:18">lj</name><operator pos:start="77:19" pos:end="77:20">++</operator></expr>;</expr_stmt>

                <while pos:start="79:17" pos:end="83:17">while <condition pos:start="79:23" pos:end="79:30">(<expr pos:start="79:24" pos:end="79:29"><name pos:start="79:24" pos:end="79:25">lj</name> <operator pos:start="79:27" pos:end="79:27">&lt;</operator> <name pos:start="79:29" pos:end="79:29">j</name></expr>)</condition> <block pos:start="79:32" pos:end="83:17">{<block_content pos:start="81:21" pos:end="81:58">

                    <expr_stmt pos:start="81:21" pos:end="81:58"><expr pos:start="81:21" pos:end="81:57"><name pos:start="81:21" pos:end="81:53"><name pos:start="81:21" pos:end="81:27">tcg_ctx</name><operator pos:start="81:28" pos:end="81:28">.</operator><name pos:start="81:29" pos:end="81:47">gen_opc_instr_start</name><index pos:start="81:48" pos:end="81:53">[<expr pos:start="81:49" pos:end="81:52"><name pos:start="81:49" pos:end="81:50">lj</name><operator pos:start="81:51" pos:end="81:52">++</operator></expr>]</index></name> <operator pos:start="81:55" pos:end="81:55">=</operator> <literal type="number" pos:start="81:57" pos:end="81:57">0</literal></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:44"><expr pos:start="87:13" pos:end="87:43"><name pos:start="87:13" pos:end="87:34"><name pos:start="87:13" pos:end="87:19">tcg_ctx</name><operator pos:start="87:20" pos:end="87:20">.</operator><name pos:start="87:21" pos:end="87:30">gen_opc_pc</name><index pos:start="87:31" pos:end="87:34">[<expr pos:start="87:32" pos:end="87:33"><name pos:start="87:32" pos:end="87:33">lj</name></expr>]</index></name> <operator pos:start="87:36" pos:end="87:36">=</operator> <name pos:start="87:38" pos:end="87:43"><name pos:start="87:38" pos:end="87:40">ctx</name><operator pos:start="87:41" pos:end="87:41">.</operator><name pos:start="87:42" pos:end="87:43">pc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:48"><expr pos:start="89:13" pos:end="89:47"><name pos:start="89:13" pos:end="89:43"><name pos:start="89:13" pos:end="89:19">tcg_ctx</name><operator pos:start="89:20" pos:end="89:20">.</operator><name pos:start="89:21" pos:end="89:39">gen_opc_instr_start</name><index pos:start="89:40" pos:end="89:43">[<expr pos:start="89:41" pos:end="89:42"><name pos:start="89:41" pos:end="89:42">lj</name></expr>]</index></name> <operator pos:start="89:45" pos:end="89:45">=</operator> <literal type="number" pos:start="89:47" pos:end="89:47">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:51"><expr pos:start="91:13" pos:end="91:50"><name pos:start="91:13" pos:end="91:38"><name pos:start="91:13" pos:end="91:19">tcg_ctx</name><operator pos:start="91:20" pos:end="91:20">.</operator><name pos:start="91:21" pos:end="91:34">gen_opc_icount</name><index pos:start="91:35" pos:end="91:38">[<expr pos:start="91:36" pos:end="91:37"><name pos:start="91:36" pos:end="91:37">lj</name></expr>]</index></name> <operator pos:start="91:40" pos:end="91:40">=</operator> <name pos:start="91:42" pos:end="91:50">num_insns</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:48"><expr pos:start="95:9" pos:end="95:47"><name pos:start="95:9" pos:end="95:18"><name pos:start="95:9" pos:end="95:11">ctx</name><operator pos:start="95:12" pos:end="95:12">.</operator><name pos:start="95:13" pos:end="95:18">opcode</name></name> <operator pos:start="95:20" pos:end="95:20">=</operator> <call pos:start="95:22" pos:end="95:47"><name pos:start="95:22" pos:end="95:34">cpu_lduw_code</name><argument_list pos:start="95:35" pos:end="95:47">(<argument pos:start="95:36" pos:end="95:38"><expr pos:start="95:36" pos:end="95:38"><name pos:start="95:36" pos:end="95:38">env</name></expr></argument>, <argument pos:start="95:41" pos:end="95:46"><expr pos:start="95:41" pos:end="95:46"><name pos:start="95:41" pos:end="95:46"><name pos:start="95:41" pos:end="95:43">ctx</name><operator pos:start="95:44" pos:end="95:44">.</operator><name pos:start="95:45" pos:end="95:46">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:40"><expr pos:start="97:9" pos:end="97:39"><name pos:start="97:9" pos:end="97:14"><name pos:start="97:9" pos:end="97:11">ctx</name><operator pos:start="97:12" pos:end="97:12">.</operator><name pos:start="97:13" pos:end="97:14">pc</name></name> <operator pos:start="97:16" pos:end="97:17">+=</operator> <call pos:start="97:19" pos:end="97:39"><name pos:start="97:19" pos:end="97:28">decode_opc</name><argument_list pos:start="97:29" pos:end="97:39">(<argument pos:start="97:30" pos:end="97:32"><expr pos:start="97:30" pos:end="97:32"><name pos:start="97:30" pos:end="97:32">cpu</name></expr></argument>, <argument pos:start="97:35" pos:end="97:38"><expr pos:start="97:35" pos:end="97:38"><operator pos:start="97:35" pos:end="97:35">&amp;</operator><name pos:start="97:36" pos:end="97:38">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:20"><expr pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:17">num_insns</name><operator pos:start="99:18" pos:end="99:19">++</operator></expr>;</expr_stmt>



        <if_stmt pos:start="103:9" pos:end="107:9"><if pos:start="103:9" pos:end="107:9">if <condition pos:start="103:12" pos:end="103:35">(<expr pos:start="103:13" pos:end="103:34"><name pos:start="103:13" pos:end="103:34"><name pos:start="103:13" pos:end="103:14">cs</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:34">singlestep_enabled</name></name></expr>)</condition> <block pos:start="103:37" pos:end="107:9">{<block_content pos:start="105:13" pos:end="105:18">

            <break pos:start="105:13" pos:end="105:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="111:9" pos:end="115:9"><if pos:start="111:9" pos:end="115:9">if <condition pos:start="111:12" pos:end="111:51">(<expr pos:start="111:13" pos:end="111:50"><operator pos:start="111:13" pos:end="111:13">(</operator><name pos:start="111:14" pos:end="111:19"><name pos:start="111:14" pos:end="111:16">ctx</name><operator pos:start="111:17" pos:end="111:17">.</operator><name pos:start="111:18" pos:end="111:19">pc</name></name> <operator pos:start="111:21" pos:end="111:21">&amp;</operator> <operator pos:start="111:23" pos:end="111:23">(</operator><name pos:start="111:24" pos:end="111:39">TARGET_PAGE_SIZE</name> <operator pos:start="111:41" pos:end="111:41">-</operator> <literal type="number" pos:start="111:43" pos:end="111:43">1</literal><operator pos:start="111:44" pos:end="111:44">)</operator><operator pos:start="111:45" pos:end="111:45">)</operator> <operator pos:start="111:47" pos:end="111:48">==</operator> <literal type="number" pos:start="111:50" pos:end="111:50">0</literal></expr>)</condition> <block pos:start="111:53" pos:end="115:9">{<block_content pos:start="113:13" pos:end="113:18">

            <break pos:start="113:13" pos:end="113:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="117:13" pos:end="117:72">(<expr pos:start="117:14" pos:end="117:71"><name pos:start="117:14" pos:end="117:23"><name pos:start="117:14" pos:end="117:16">ctx</name><operator pos:start="117:17" pos:end="117:17">.</operator><name pos:start="117:18" pos:end="117:23">bstate</name></name> <operator pos:start="117:25" pos:end="117:26">==</operator> <name pos:start="117:28" pos:end="117:34">BS_NONE</name> <operator pos:start="117:36" pos:end="117:37">&amp;&amp;</operator> <name pos:start="117:39" pos:end="117:57"><name pos:start="117:39" pos:end="117:45">tcg_ctx</name><operator pos:start="117:46" pos:end="117:46">.</operator><name pos:start="117:47" pos:end="117:57">gen_opc_ptr</name></name> <operator pos:start="117:59" pos:end="117:59">&lt;</operator> <name pos:start="117:61" pos:end="117:71">gen_opc_end</name></expr>)</condition>;</do>



    <if_stmt pos:start="121:5" pos:end="153:5"><if pos:start="121:5" pos:end="127:5">if <condition pos:start="121:8" pos:end="121:31">(<expr pos:start="121:9" pos:end="121:30"><name pos:start="121:9" pos:end="121:30"><name pos:start="121:9" pos:end="121:10">cs</name><operator pos:start="121:11" pos:end="121:12">-&gt;</operator><name pos:start="121:13" pos:end="121:30">singlestep_enabled</name></name></expr>)</condition> <block pos:start="121:33" pos:end="127:5">{<block_content pos:start="123:9" pos:end="125:34">

        <expr_stmt pos:start="123:9" pos:end="123:40"><expr pos:start="123:9" pos:end="123:39"><call pos:start="123:9" pos:end="123:39"><name pos:start="123:9" pos:end="123:23">tcg_gen_movi_tl</name><argument_list pos:start="123:24" pos:end="123:39">(<argument pos:start="123:25" pos:end="123:30"><expr pos:start="123:25" pos:end="123:30"><name pos:start="123:25" pos:end="123:30">cpu_pc</name></expr></argument>, <argument pos:start="123:33" pos:end="123:38"><expr pos:start="123:33" pos:end="123:38"><name pos:start="123:33" pos:end="123:38"><name pos:start="123:33" pos:end="123:35">ctx</name><operator pos:start="123:36" pos:end="123:36">.</operator><name pos:start="123:37" pos:end="123:38">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:34"><expr pos:start="125:9" pos:end="125:33"><call pos:start="125:9" pos:end="125:33"><name pos:start="125:9" pos:end="125:24">gen_helper_debug</name><argument_list pos:start="125:25" pos:end="125:33">(<argument pos:start="125:26" pos:end="125:32"><expr pos:start="125:26" pos:end="125:32"><name pos:start="125:26" pos:end="125:32">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="127:7" pos:end="153:5">else <block pos:start="127:12" pos:end="153:5">{<block_content pos:start="129:9" pos:end="151:9">

        <switch pos:start="129:9" pos:end="151:9">switch <condition pos:start="129:16" pos:end="129:27">(<expr pos:start="129:17" pos:end="129:26"><name pos:start="129:17" pos:end="129:26"><name pos:start="129:17" pos:end="129:19">ctx</name><operator pos:start="129:20" pos:end="129:20">.</operator><name pos:start="129:21" pos:end="129:26">bstate</name></name></expr>)</condition> <block pos:start="129:29" pos:end="151:9">{<block_content pos:start="131:9" pos:end="149:18">

        <case pos:start="131:9" pos:end="131:21">case <expr pos:start="131:14" pos:end="131:20"><name pos:start="131:14" pos:end="131:20">BS_STOP</name></expr>:</case>

        <case pos:start="133:9" pos:end="133:21">case <expr pos:start="133:14" pos:end="133:20"><name pos:start="133:14" pos:end="133:20">BS_NONE</name></expr>:</case>

            <expr_stmt pos:start="135:13" pos:end="135:46"><expr pos:start="135:13" pos:end="135:45"><call pos:start="135:13" pos:end="135:45"><name pos:start="135:13" pos:end="135:23">gen_goto_tb</name><argument_list pos:start="135:24" pos:end="135:45">(<argument pos:start="135:25" pos:end="135:27"><expr pos:start="135:25" pos:end="135:27"><name pos:start="135:25" pos:end="135:27">env</name></expr></argument>, <argument pos:start="135:30" pos:end="135:33"><expr pos:start="135:30" pos:end="135:33"><operator pos:start="135:30" pos:end="135:30">&amp;</operator><name pos:start="135:31" pos:end="135:33">ctx</name></expr></argument>, <argument pos:start="135:36" pos:end="135:36"><expr pos:start="135:36" pos:end="135:36"><literal type="number" pos:start="135:36" pos:end="135:36">0</literal></expr></argument>, <argument pos:start="135:39" pos:end="135:44"><expr pos:start="135:39" pos:end="135:44"><name pos:start="135:39" pos:end="135:44"><name pos:start="135:39" pos:end="135:41">ctx</name><operator pos:start="135:42" pos:end="135:42">.</operator><name pos:start="135:43" pos:end="135:44">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="137:13" pos:end="137:18">break;</break>

        <case pos:start="139:9" pos:end="139:21">case <expr pos:start="139:14" pos:end="139:20"><name pos:start="139:14" pos:end="139:20">BS_EXCP</name></expr>:</case>

            <expr_stmt pos:start="141:13" pos:end="141:31"><expr pos:start="141:13" pos:end="141:30"><call pos:start="141:13" pos:end="141:30"><name pos:start="141:13" pos:end="141:27">tcg_gen_exit_tb</name><argument_list pos:start="141:28" pos:end="141:30">(<argument pos:start="141:29" pos:end="141:29"><expr pos:start="141:29" pos:end="141:29"><literal type="number" pos:start="141:29" pos:end="141:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="143:13" pos:end="143:18">break;</break>

        <case pos:start="145:9" pos:end="145:23">case <expr pos:start="145:14" pos:end="145:22"><name pos:start="145:14" pos:end="145:22">BS_BRANCH</name></expr>:</case>

        <default pos:start="147:9" pos:end="147:16">default:</default>

            <break pos:start="149:13" pos:end="149:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

 <label pos:start="155:2" pos:end="155:17"><name pos:start="155:2" pos:end="155:16">done_generating</name>:</label>

    <expr_stmt pos:start="157:5" pos:end="157:30"><expr pos:start="157:5" pos:end="157:29"><call pos:start="157:5" pos:end="157:29"><name pos:start="157:5" pos:end="157:14">gen_tb_end</name><argument_list pos:start="157:15" pos:end="157:29">(<argument pos:start="157:16" pos:end="157:17"><expr pos:start="157:16" pos:end="157:17"><name pos:start="157:16" pos:end="157:17">tb</name></expr></argument>, <argument pos:start="157:20" pos:end="157:28"><expr pos:start="157:20" pos:end="157:28"><name pos:start="157:20" pos:end="157:28">num_insns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:40"><expr pos:start="159:5" pos:end="159:39"><operator pos:start="159:5" pos:end="159:5">*</operator><name pos:start="159:6" pos:end="159:24"><name pos:start="159:6" pos:end="159:12">tcg_ctx</name><operator pos:start="159:13" pos:end="159:13">.</operator><name pos:start="159:14" pos:end="159:24">gen_opc_ptr</name></name> <operator pos:start="159:26" pos:end="159:26">=</operator> <name pos:start="159:28" pos:end="159:39">INDEX_op_end</name></expr>;</expr_stmt>

    <if_stmt pos:start="161:5" pos:end="179:5"><if pos:start="161:5" pos:end="173:5">if <condition pos:start="161:8" pos:end="161:18">(<expr pos:start="161:9" pos:end="161:17"><name pos:start="161:9" pos:end="161:17">search_pc</name></expr>)</condition> <block pos:start="161:20" pos:end="173:5">{<block_content pos:start="163:9" pos:end="171:9">

        <expr_stmt pos:start="163:9" pos:end="163:54"><expr pos:start="163:9" pos:end="163:53"><name pos:start="163:9" pos:end="163:9">j</name> <operator pos:start="163:11" pos:end="163:11">=</operator> <name pos:start="163:13" pos:end="163:31"><name pos:start="163:13" pos:end="163:19">tcg_ctx</name><operator pos:start="163:20" pos:end="163:20">.</operator><name pos:start="163:21" pos:end="163:31">gen_opc_ptr</name></name> <operator pos:start="163:33" pos:end="163:33">-</operator> <name pos:start="163:35" pos:end="163:53"><name pos:start="163:35" pos:end="163:41">tcg_ctx</name><operator pos:start="163:42" pos:end="163:42">.</operator><name pos:start="163:43" pos:end="163:53">gen_opc_buf</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:13"><expr pos:start="165:9" pos:end="165:12"><name pos:start="165:9" pos:end="165:10">lj</name><operator pos:start="165:11" pos:end="165:12">++</operator></expr>;</expr_stmt>

        <while pos:start="167:9" pos:end="171:9">while <condition pos:start="167:15" pos:end="167:23">(<expr pos:start="167:16" pos:end="167:22"><name pos:start="167:16" pos:end="167:17">lj</name> <operator pos:start="167:19" pos:end="167:20">&lt;=</operator> <name pos:start="167:22" pos:end="167:22">j</name></expr>)</condition> <block pos:start="167:25" pos:end="171:9">{<block_content pos:start="169:13" pos:end="169:50">

            <expr_stmt pos:start="169:13" pos:end="169:50"><expr pos:start="169:13" pos:end="169:49"><name pos:start="169:13" pos:end="169:45"><name pos:start="169:13" pos:end="169:19">tcg_ctx</name><operator pos:start="169:20" pos:end="169:20">.</operator><name pos:start="169:21" pos:end="169:39">gen_opc_instr_start</name><index pos:start="169:40" pos:end="169:45">[<expr pos:start="169:41" pos:end="169:44"><name pos:start="169:41" pos:end="169:42">lj</name><operator pos:start="169:43" pos:end="169:44">++</operator></expr>]</index></name> <operator pos:start="169:47" pos:end="169:47">=</operator> <literal type="number" pos:start="169:49" pos:end="169:49">0</literal></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if> <else pos:start="173:7" pos:end="179:5">else <block pos:start="173:12" pos:end="179:5">{<block_content pos:start="175:9" pos:end="177:31">

        <expr_stmt pos:start="175:9" pos:end="175:37"><expr pos:start="175:9" pos:end="175:36"><name pos:start="175:9" pos:end="175:16"><name pos:start="175:9" pos:end="175:10">tb</name><operator pos:start="175:11" pos:end="175:12">-&gt;</operator><name pos:start="175:13" pos:end="175:16">size</name></name> <operator pos:start="175:18" pos:end="175:18">=</operator> <name pos:start="175:20" pos:end="175:25"><name pos:start="175:20" pos:end="175:22">ctx</name><operator pos:start="175:23" pos:end="175:23">.</operator><name pos:start="175:24" pos:end="175:25">pc</name></name> <operator pos:start="175:27" pos:end="175:27">-</operator> <name pos:start="175:29" pos:end="175:36">pc_start</name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:31"><expr pos:start="177:9" pos:end="177:30"><name pos:start="177:9" pos:end="177:18"><name pos:start="177:9" pos:end="177:10">tb</name><operator pos:start="177:11" pos:end="177:12">-&gt;</operator><name pos:start="177:13" pos:end="177:18">icount</name></name> <operator pos:start="177:20" pos:end="177:20">=</operator> <name pos:start="177:22" pos:end="177:30">num_insns</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block>
</unit>
