<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12860.c" pos:tabs="8"><function pos:start="1:1" pos:end="505:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">vtenc_create_encoder</name><parameter_list pos:start="1:32" pos:end="13:65">(<parameter pos:start="1:33" pos:end="1:55"><decl pos:start="1:33" pos:end="1:55"><type pos:start="1:33" pos:end="1:55"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name>   <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">avctx</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:59"><decl pos:start="3:33" pos:end="3:59"><type pos:start="3:33" pos:end="3:59"><name pos:start="3:33" pos:end="3:48">CMVideoCodecType</name></type> <name pos:start="3:50" pos:end="3:59">codec_type</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:62"><decl pos:start="5:33" pos:end="5:62"><type pos:start="5:33" pos:end="5:62"><name pos:start="5:33" pos:end="5:43">CFStringRef</name></type>      <name pos:start="5:50" pos:end="5:62">profile_level</name></decl></parameter>,

                                <parameter pos:start="7:33" pos:end="7:60"><decl pos:start="7:33" pos:end="7:60"><type pos:start="7:33" pos:end="7:60"><name pos:start="7:33" pos:end="7:43">CFNumberRef</name></type>      <name pos:start="7:50" pos:end="7:60">gamma_level</name></decl></parameter>,

                                <parameter pos:start="9:33" pos:end="9:57"><decl pos:start="9:33" pos:end="9:57"><type pos:start="9:33" pos:end="9:57"><name pos:start="9:33" pos:end="9:47">CFDictionaryRef</name></type>  <name pos:start="9:50" pos:end="9:57">enc_info</name></decl></parameter>,

                                <parameter pos:start="11:33" pos:end="11:66"><decl pos:start="11:33" pos:end="11:66"><type pos:start="11:33" pos:end="11:66"><name pos:start="11:33" pos:end="11:47">CFDictionaryRef</name></type>  <name pos:start="11:50" pos:end="11:66">pixel_buffer_info</name></decl></parameter>,

                                <parameter pos:start="13:33" pos:end="13:64"><decl pos:start="13:33" pos:end="13:64"><type pos:start="13:33" pos:end="13:64"><name pos:start="13:33" pos:end="13:55">VTCompressionSessionRef</name> <modifier pos:start="13:57" pos:end="13:57">*</modifier></type><name pos:start="13:58" pos:end="13:64">session</name></decl></parameter>)</parameter_list>

<block pos:start="15:1" pos:end="505:1">{<block_content pos:start="17:5" pos:end="503:13">

    <decl_stmt pos:start="17:5" pos:end="17:43"><decl pos:start="17:5" pos:end="17:42"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:16">VTEncContext</name> <modifier pos:start="17:18" pos:end="17:18">*</modifier></type><name pos:start="17:19" pos:end="17:23">vtctx</name> <init pos:start="17:25" pos:end="17:42">= <expr pos:start="17:27" pos:end="17:42"><name pos:start="17:27" pos:end="17:42"><name pos:start="17:27" pos:end="17:31">avctx</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:44"><decl pos:start="19:5" pos:end="19:43"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">SInt32</name></type>       <name pos:start="19:18" pos:end="19:25">bit_rate</name> <init pos:start="19:27" pos:end="19:43">= <expr pos:start="19:29" pos:end="19:43"><name pos:start="19:29" pos:end="19:43"><name pos:start="19:29" pos:end="19:33">avctx</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:43">bit_rate</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:30"><decl pos:start="21:5" pos:end="21:29"><type pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:15">CFNumberRef</name></type>  <name pos:start="21:18" pos:end="21:29">bit_rate_num</name></decl>;</decl_stmt>



    <decl_stmt pos:start="25:5" pos:end="43:53"><decl pos:start="25:5" pos:end="43:52"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:14">status</name> <init pos:start="25:16" pos:end="43:52">= <expr pos:start="25:18" pos:end="43:52"><call pos:start="25:18" pos:end="43:52"><name pos:start="25:18" pos:end="25:43">VTCompressionSessionCreate</name><argument_list pos:start="25:44" pos:end="43:52">(<argument pos:start="25:45" pos:end="25:63"><expr pos:start="25:45" pos:end="25:63"><name pos:start="25:45" pos:end="25:63">kCFAllocatorDefault</name></expr></argument>,

                                            <argument pos:start="27:45" pos:end="27:56"><expr pos:start="27:45" pos:end="27:56"><name pos:start="27:45" pos:end="27:56"><name pos:start="27:45" pos:end="27:49">avctx</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:56">width</name></name></expr></argument>,

                                            <argument pos:start="29:45" pos:end="29:57"><expr pos:start="29:45" pos:end="29:57"><name pos:start="29:45" pos:end="29:57"><name pos:start="29:45" pos:end="29:49">avctx</name><operator pos:start="29:50" pos:end="29:51">-&gt;</operator><name pos:start="29:52" pos:end="29:57">height</name></name></expr></argument>,

                                            <argument pos:start="31:45" pos:end="31:54"><expr pos:start="31:45" pos:end="31:54"><name pos:start="31:45" pos:end="31:54">codec_type</name></expr></argument>,

                                            <argument pos:start="33:45" pos:end="33:52"><expr pos:start="33:45" pos:end="33:52"><name pos:start="33:45" pos:end="33:52">enc_info</name></expr></argument>,

                                            <argument pos:start="35:45" pos:end="35:61"><expr pos:start="35:45" pos:end="35:61"><name pos:start="35:45" pos:end="35:61">pixel_buffer_info</name></expr></argument>,

                                            <argument pos:start="37:45" pos:end="37:63"><expr pos:start="37:45" pos:end="37:63"><name pos:start="37:45" pos:end="37:63">kCFAllocatorDefault</name></expr></argument>,

                                            <argument pos:start="39:45" pos:end="39:65"><expr pos:start="39:45" pos:end="39:65"><name pos:start="39:45" pos:end="39:65">vtenc_output_callback</name></expr></argument>,

                                            <argument pos:start="41:45" pos:end="41:49"><expr pos:start="41:45" pos:end="41:49"><name pos:start="41:45" pos:end="41:49">avctx</name></expr></argument>,

                                            <argument pos:start="43:45" pos:end="43:51"><expr pos:start="43:45" pos:end="43:51"><name pos:start="43:45" pos:end="43:51">session</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="47:5" pos:end="67:5"><if pos:start="47:5" pos:end="67:5">if <condition pos:start="47:8" pos:end="47:34">(<expr pos:start="47:9" pos:end="47:33"><name pos:start="47:9" pos:end="47:14">status</name> <operator pos:start="47:16" pos:end="47:17">||</operator> <operator pos:start="47:19" pos:end="47:19">!</operator><name pos:start="47:20" pos:end="47:33"><name pos:start="47:20" pos:end="47:24">vtctx</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:33">session</name></name></expr>)</condition> <block pos:start="47:36" pos:end="67:5">{<block_content pos:start="49:9" pos:end="65:32">

        <expr_stmt pos:start="49:9" pos:end="54:0"><expr pos:start="49:9" pos:end="49:93"><call pos:start="49:9" pos:end="49:93"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:93">(<argument pos:start="49:16" pos:end="49:20"><expr pos:start="49:16" pos:end="49:20"><name pos:start="49:16" pos:end="49:20">avctx</name></expr></argument>, <argument pos:start="49:23" pos:end="49:34"><expr pos:start="49:23" pos:end="49:34"><name pos:start="49:23" pos:end="49:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:37" pos:end="49:84"><expr pos:start="49:37" pos:end="49:84"><literal type="string" pos:start="49:37" pos:end="49:84">"Error: cannot create compression session: %d\n"</literal></expr></argument>, <argument pos:start="49:87" pos:end="49:92"><expr pos:start="49:87" pos:end="49:92"><name pos:start="49:87" pos:end="49:92">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="53:1" pos:end="53:21">#<cpp:directive pos:start="53:2" pos:end="53:3">if</cpp:directive> <expr pos:start="53:5" pos:end="53:21"><operator pos:start="53:5" pos:end="53:5">!</operator><name pos:start="53:6" pos:end="53:21">TARGET_OS_IPHONE</name></expr></cpp:if>

        <if_stmt pos:start="55:9" pos:end="62:0"><if pos:start="55:9" pos:end="62:0">if <condition pos:start="55:12" pos:end="55:29">(<expr pos:start="55:13" pos:end="55:28"><operator pos:start="55:13" pos:end="55:13">!</operator><name pos:start="55:14" pos:end="55:28"><name pos:start="55:14" pos:end="55:18">vtctx</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:28">allow_sw</name></name></expr>)</condition> <block pos:start="55:31" pos:end="62:0">{<block_content pos:start="57:13" pos:end="57:114">

            <expr_stmt pos:start="57:13" pos:end="57:114"><expr pos:start="57:13" pos:end="57:113"><call pos:start="57:13" pos:end="57:113"><name pos:start="57:13" pos:end="57:18">av_log</name><argument_list pos:start="57:19" pos:end="57:113">(<argument pos:start="57:20" pos:end="57:24"><expr pos:start="57:20" pos:end="57:24"><name pos:start="57:20" pos:end="57:24">avctx</name></expr></argument>, <argument pos:start="57:27" pos:end="57:38"><expr pos:start="57:27" pos:end="57:38"><name pos:start="57:27" pos:end="57:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:41" pos:end="57:112"><expr pos:start="57:41" pos:end="57:112"><literal type="string" pos:start="57:41" pos:end="57:112">"Try -allow_sw 1. The hardware encoder may be busy, or not supported.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="61:1" pos:end="61:6">#<cpp:directive pos:start="61:2" pos:end="61:6">endif</cpp:directive></cpp:endif>



        <return pos:start="65:9" pos:end="65:32">return <expr pos:start="65:16" pos:end="65:31"><name pos:start="65:16" pos:end="65:31">AVERROR_EXTERNAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="75:45"><expr pos:start="71:5" pos:end="75:44"><name pos:start="71:5" pos:end="71:16">bit_rate_num</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <call pos:start="71:20" pos:end="75:44"><name pos:start="71:20" pos:end="71:33">CFNumberCreate</name><argument_list pos:start="71:34" pos:end="75:44">(<argument pos:start="71:35" pos:end="71:53"><expr pos:start="71:35" pos:end="71:53"><name pos:start="71:35" pos:end="71:53">kCFAllocatorDefault</name></expr></argument>,

                                  <argument pos:start="73:35" pos:end="73:53"><expr pos:start="73:35" pos:end="73:53"><name pos:start="73:35" pos:end="73:53">kCFNumberSInt32Type</name></expr></argument>,

                                  <argument pos:start="75:35" pos:end="75:43"><expr pos:start="75:35" pos:end="75:43"><operator pos:start="75:35" pos:end="75:35">&amp;</operator><name pos:start="75:36" pos:end="75:43">bit_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="77:46"><if pos:start="77:5" pos:end="77:46">if <condition pos:start="77:8" pos:end="77:22">(<expr pos:start="77:9" pos:end="77:21"><operator pos:start="77:9" pos:end="77:9">!</operator><name pos:start="77:10" pos:end="77:21">bit_rate_num</name></expr>)</condition><block type="pseudo" pos:start="77:24" pos:end="77:46"><block_content pos:start="77:24" pos:end="77:46"> <return pos:start="77:24" pos:end="77:46">return <expr pos:start="77:31" pos:end="77:45"><call pos:start="77:31" pos:end="77:45"><name pos:start="77:31" pos:end="77:37">AVERROR</name><argument_list pos:start="77:38" pos:end="77:45">(<argument pos:start="77:39" pos:end="77:44"><expr pos:start="77:39" pos:end="77:44"><name pos:start="77:39" pos:end="77:44">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="85:48"><expr pos:start="81:5" pos:end="85:47"><name pos:start="81:5" pos:end="81:10">status</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <call pos:start="81:14" pos:end="85:47"><name pos:start="81:14" pos:end="81:33">VTSessionSetProperty</name><argument_list pos:start="81:34" pos:end="85:47">(<argument pos:start="81:35" pos:end="81:48"><expr pos:start="81:35" pos:end="81:48"><name pos:start="81:35" pos:end="81:48"><name pos:start="81:35" pos:end="81:39">vtctx</name><operator pos:start="81:40" pos:end="81:41">-&gt;</operator><name pos:start="81:42" pos:end="81:48">session</name></name></expr></argument>,

                                  <argument pos:start="83:35" pos:end="83:74"><expr pos:start="83:35" pos:end="83:74"><name pos:start="83:35" pos:end="83:74">kVTCompressionPropertyKey_AverageBitRate</name></expr></argument>,

                                  <argument pos:start="85:35" pos:end="85:46"><expr pos:start="85:35" pos:end="85:46"><name pos:start="85:35" pos:end="85:46">bit_rate_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:28"><expr pos:start="87:5" pos:end="87:27"><call pos:start="87:5" pos:end="87:27"><name pos:start="87:5" pos:end="87:13">CFRelease</name><argument_list pos:start="87:14" pos:end="87:27">(<argument pos:start="87:15" pos:end="87:26"><expr pos:start="87:15" pos:end="87:26"><name pos:start="87:15" pos:end="87:26">bit_rate_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:15">(<expr pos:start="91:9" pos:end="91:14"><name pos:start="91:9" pos:end="91:14">status</name></expr>)</condition> <block pos:start="91:17" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:32">

        <expr_stmt pos:start="93:9" pos:end="93:84"><expr pos:start="93:9" pos:end="93:83"><call pos:start="93:9" pos:end="93:83"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:83">(<argument pos:start="93:16" pos:end="93:20"><expr pos:start="93:16" pos:end="93:20"><name pos:start="93:16" pos:end="93:20">avctx</name></expr></argument>, <argument pos:start="93:23" pos:end="93:34"><expr pos:start="93:23" pos:end="93:34"><name pos:start="93:23" pos:end="93:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:37" pos:end="93:74"><expr pos:start="93:37" pos:end="93:74"><literal type="string" pos:start="93:37" pos:end="93:74">"Error setting bitrate property: %d\n"</literal></expr></argument>, <argument pos:start="93:77" pos:end="93:82"><expr pos:start="93:77" pos:end="93:82"><name pos:start="93:77" pos:end="93:82">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:32">return <expr pos:start="95:16" pos:end="95:31"><name pos:start="95:16" pos:end="95:31">AVERROR_EXTERNAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="117:5"><if pos:start="101:5" pos:end="117:5">if <condition pos:start="101:8" pos:end="101:22">(<expr pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:21">profile_level</name></expr>)</condition> <block pos:start="101:24" pos:end="117:5">{<block_content pos:start="103:9" pos:end="115:9">

        <expr_stmt pos:start="103:9" pos:end="107:53"><expr pos:start="103:9" pos:end="107:52"><name pos:start="103:9" pos:end="103:14">status</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <call pos:start="103:18" pos:end="107:52"><name pos:start="103:18" pos:end="103:37">VTSessionSetProperty</name><argument_list pos:start="103:38" pos:end="107:52">(<argument pos:start="103:39" pos:end="103:52"><expr pos:start="103:39" pos:end="103:52"><name pos:start="103:39" pos:end="103:52"><name pos:start="103:39" pos:end="103:43">vtctx</name><operator pos:start="103:44" pos:end="103:45">-&gt;</operator><name pos:start="103:46" pos:end="103:52">session</name></name></expr></argument>,

                                      <argument pos:start="105:39" pos:end="105:76"><expr pos:start="105:39" pos:end="105:76"><name pos:start="105:39" pos:end="105:76">kVTCompressionPropertyKey_ProfileLevel</name></expr></argument>,

                                      <argument pos:start="107:39" pos:end="107:51"><expr pos:start="107:39" pos:end="107:51"><name pos:start="107:39" pos:end="107:51">profile_level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="115:9"><if pos:start="109:9" pos:end="115:9">if <condition pos:start="109:12" pos:end="109:19">(<expr pos:start="109:13" pos:end="109:18"><name pos:start="109:13" pos:end="109:18">status</name></expr>)</condition> <block pos:start="109:21" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:36">

            <expr_stmt pos:start="111:13" pos:end="111:94"><expr pos:start="111:13" pos:end="111:93"><call pos:start="111:13" pos:end="111:93"><name pos:start="111:13" pos:end="111:18">av_log</name><argument_list pos:start="111:19" pos:end="111:93">(<argument pos:start="111:20" pos:end="111:24"><expr pos:start="111:20" pos:end="111:24"><name pos:start="111:20" pos:end="111:24">avctx</name></expr></argument>, <argument pos:start="111:27" pos:end="111:38"><expr pos:start="111:27" pos:end="111:38"><name pos:start="111:27" pos:end="111:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="111:41" pos:end="111:84"><expr pos:start="111:41" pos:end="111:84"><literal type="string" pos:start="111:41" pos:end="111:84">"Error setting profile/level property: %d\n"</literal></expr></argument>, <argument pos:start="111:87" pos:end="111:92"><expr pos:start="111:87" pos:end="111:92"><name pos:start="111:87" pos:end="111:92">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="113:13" pos:end="113:36">return <expr pos:start="113:20" pos:end="113:35"><name pos:start="113:20" pos:end="113:35">AVERROR_EXTERNAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="121:5" pos:end="155:5"><if pos:start="121:5" pos:end="155:5">if <condition pos:start="121:8" pos:end="121:28">(<expr pos:start="121:9" pos:end="121:27"><name pos:start="121:9" pos:end="121:23"><name pos:start="121:9" pos:end="121:13">avctx</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:23">gop_size</name></name> <operator pos:start="121:25" pos:end="121:25">&gt;</operator> <literal type="number" pos:start="121:27" pos:end="121:27">0</literal></expr>)</condition> <block pos:start="121:30" pos:end="155:5">{<block_content pos:start="123:9" pos:end="153:9">

        <decl_stmt pos:start="123:9" pos:end="127:64"><decl pos:start="123:9" pos:end="127:63"><type pos:start="123:9" pos:end="123:19"><name pos:start="123:9" pos:end="123:19">CFNumberRef</name></type> <name pos:start="123:21" pos:end="123:28">interval</name> <init pos:start="123:30" pos:end="127:63">= <expr pos:start="123:32" pos:end="127:63"><call pos:start="123:32" pos:end="127:63"><name pos:start="123:32" pos:end="123:45">CFNumberCreate</name><argument_list pos:start="123:46" pos:end="127:63">(<argument pos:start="123:47" pos:end="123:65"><expr pos:start="123:47" pos:end="123:65"><name pos:start="123:47" pos:end="123:65">kCFAllocatorDefault</name></expr></argument>,

                                              <argument pos:start="125:47" pos:end="125:62"><expr pos:start="125:47" pos:end="125:62"><name pos:start="125:47" pos:end="125:62">kCFNumberIntType</name></expr></argument>,

                                              <argument pos:start="127:47" pos:end="127:62"><expr pos:start="127:47" pos:end="127:62"><operator pos:start="127:47" pos:end="127:47">&amp;</operator><name pos:start="127:48" pos:end="127:62"><name pos:start="127:48" pos:end="127:52">avctx</name><operator pos:start="127:53" pos:end="127:54">-&gt;</operator><name pos:start="127:55" pos:end="127:62">gop_size</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="129:9" pos:end="133:9"><if pos:start="129:9" pos:end="133:9">if <condition pos:start="129:12" pos:end="129:22">(<expr pos:start="129:13" pos:end="129:21"><operator pos:start="129:13" pos:end="129:13">!</operator><name pos:start="129:14" pos:end="129:21">interval</name></expr>)</condition> <block pos:start="129:24" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:35">

            <return pos:start="131:13" pos:end="131:35">return <expr pos:start="131:20" pos:end="131:34"><call pos:start="131:20" pos:end="131:34"><name pos:start="131:20" pos:end="131:26">AVERROR</name><argument_list pos:start="131:27" pos:end="131:34">(<argument pos:start="131:28" pos:end="131:33"><expr pos:start="131:28" pos:end="131:33"><name pos:start="131:28" pos:end="131:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="137:9" pos:end="141:48"><expr pos:start="137:9" pos:end="141:47"><name pos:start="137:9" pos:end="137:14">status</name> <operator pos:start="137:16" pos:end="137:16">=</operator> <call pos:start="137:18" pos:end="141:47"><name pos:start="137:18" pos:end="137:37">VTSessionSetProperty</name><argument_list pos:start="137:38" pos:end="141:47">(<argument pos:start="137:39" pos:end="137:52"><expr pos:start="137:39" pos:end="137:52"><name pos:start="137:39" pos:end="137:52"><name pos:start="137:39" pos:end="137:43">vtctx</name><operator pos:start="137:44" pos:end="137:45">-&gt;</operator><name pos:start="137:46" pos:end="137:52">session</name></name></expr></argument>,

                                      <argument pos:start="139:39" pos:end="139:83"><expr pos:start="139:39" pos:end="139:83"><name pos:start="139:39" pos:end="139:83">kVTCompressionPropertyKey_MaxKeyFrameInterval</name></expr></argument>,

                                      <argument pos:start="141:39" pos:end="141:46"><expr pos:start="141:39" pos:end="141:46"><name pos:start="141:39" pos:end="141:46">interval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:28"><expr pos:start="143:9" pos:end="143:27"><call pos:start="143:9" pos:end="143:27"><name pos:start="143:9" pos:end="143:17">CFRelease</name><argument_list pos:start="143:18" pos:end="143:27">(<argument pos:start="143:19" pos:end="143:26"><expr pos:start="143:19" pos:end="143:26"><name pos:start="143:19" pos:end="143:26">interval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="147:9" pos:end="153:9"><if pos:start="147:9" pos:end="153:9">if <condition pos:start="147:12" pos:end="147:19">(<expr pos:start="147:13" pos:end="147:18"><name pos:start="147:13" pos:end="147:18">status</name></expr>)</condition> <block pos:start="147:21" pos:end="153:9">{<block_content pos:start="149:13" pos:end="151:36">

            <expr_stmt pos:start="149:13" pos:end="149:105"><expr pos:start="149:13" pos:end="149:104"><call pos:start="149:13" pos:end="149:104"><name pos:start="149:13" pos:end="149:18">av_log</name><argument_list pos:start="149:19" pos:end="149:104">(<argument pos:start="149:20" pos:end="149:24"><expr pos:start="149:20" pos:end="149:24"><name pos:start="149:20" pos:end="149:24">avctx</name></expr></argument>, <argument pos:start="149:27" pos:end="149:38"><expr pos:start="149:27" pos:end="149:38"><name pos:start="149:27" pos:end="149:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="149:41" pos:end="149:95"><expr pos:start="149:41" pos:end="149:95"><literal type="string" pos:start="149:41" pos:end="149:95">"Error setting 'max key-frame interval' property: %d\n"</literal></expr></argument>, <argument pos:start="149:98" pos:end="149:103"><expr pos:start="149:98" pos:end="149:103"><name pos:start="149:98" pos:end="149:103">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="151:13" pos:end="151:36">return <expr pos:start="151:20" pos:end="151:35"><name pos:start="151:20" pos:end="151:35">AVERROR_EXTERNAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="159:5" pos:end="179:5"><if pos:start="159:5" pos:end="179:5">if <condition pos:start="159:8" pos:end="159:29">(<expr pos:start="159:9" pos:end="159:28"><name pos:start="159:9" pos:end="159:28"><name pos:start="159:9" pos:end="159:13">vtctx</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:28">frames_before</name></name></expr>)</condition> <block pos:start="159:31" pos:end="179:5">{<block_content pos:start="161:9" pos:end="177:9">

        <expr_stmt pos:start="161:9" pos:end="165:54"><expr pos:start="161:9" pos:end="165:53"><name pos:start="161:9" pos:end="161:14">status</name> <operator pos:start="161:16" pos:end="161:16">=</operator> <call pos:start="161:18" pos:end="165:53"><name pos:start="161:18" pos:end="161:37">VTSessionSetProperty</name><argument_list pos:start="161:38" pos:end="165:53">(<argument pos:start="161:39" pos:end="161:52"><expr pos:start="161:39" pos:end="161:52"><name pos:start="161:39" pos:end="161:52"><name pos:start="161:39" pos:end="161:43">vtctx</name><operator pos:start="161:44" pos:end="161:45">-&gt;</operator><name pos:start="161:46" pos:end="161:52">session</name></name></expr></argument>,

                                      <argument pos:start="163:39" pos:end="163:85"><expr pos:start="163:39" pos:end="163:85"><name pos:start="163:39" pos:end="163:85">kVTCompressionPropertyKey_MoreFramesBeforeStart</name></expr></argument>,

                                      <argument pos:start="165:39" pos:end="165:52"><expr pos:start="165:39" pos:end="165:52"><name pos:start="165:39" pos:end="165:52">kCFBooleanTrue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="169:9" pos:end="177:9"><if pos:start="169:9" pos:end="173:9">if <condition pos:start="169:12" pos:end="169:49">(<expr pos:start="169:13" pos:end="169:48"><name pos:start="169:13" pos:end="169:18">status</name> <operator pos:start="169:20" pos:end="169:21">==</operator> <name pos:start="169:23" pos:end="169:48">kVTPropertyNotSupportedErr</name></expr>)</condition> <block pos:start="169:51" pos:end="173:9">{<block_content pos:start="171:13" pos:end="171:113">

            <expr_stmt pos:start="171:13" pos:end="171:113"><expr pos:start="171:13" pos:end="171:112"><call pos:start="171:13" pos:end="171:112"><name pos:start="171:13" pos:end="171:18">av_log</name><argument_list pos:start="171:19" pos:end="171:112">(<argument pos:start="171:20" pos:end="171:24"><expr pos:start="171:20" pos:end="171:24"><name pos:start="171:20" pos:end="171:24">avctx</name></expr></argument>, <argument pos:start="171:27" pos:end="171:40"><expr pos:start="171:27" pos:end="171:40"><name pos:start="171:27" pos:end="171:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="171:43" pos:end="171:111"><expr pos:start="171:43" pos:end="171:111"><literal type="string" pos:start="171:43" pos:end="171:111">"frames_before property is not supported on this device. Ignoring.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="173:11" pos:end="177:9">else if <condition pos:start="173:19" pos:end="173:26">(<expr pos:start="173:20" pos:end="173:25"><name pos:start="173:20" pos:end="173:25">status</name></expr>)</condition> <block pos:start="173:28" pos:end="177:9">{<block_content pos:start="175:13" pos:end="175:94">

            <expr_stmt pos:start="175:13" pos:end="175:94"><expr pos:start="175:13" pos:end="175:93"><call pos:start="175:13" pos:end="175:93"><name pos:start="175:13" pos:end="175:18">av_log</name><argument_list pos:start="175:19" pos:end="175:93">(<argument pos:start="175:20" pos:end="175:24"><expr pos:start="175:20" pos:end="175:24"><name pos:start="175:20" pos:end="175:24">avctx</name></expr></argument>, <argument pos:start="175:27" pos:end="175:38"><expr pos:start="175:27" pos:end="175:38"><name pos:start="175:27" pos:end="175:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="175:41" pos:end="175:84"><expr pos:start="175:41" pos:end="175:84"><literal type="string" pos:start="175:41" pos:end="175:84">"Error setting frames_before property: %d\n"</literal></expr></argument>, <argument pos:start="175:87" pos:end="175:92"><expr pos:start="175:87" pos:end="175:92"><name pos:start="175:87" pos:end="175:92">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="183:5" pos:end="203:5"><if pos:start="183:5" pos:end="203:5">if <condition pos:start="183:8" pos:end="183:28">(<expr pos:start="183:9" pos:end="183:27"><name pos:start="183:9" pos:end="183:27"><name pos:start="183:9" pos:end="183:13">vtctx</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:27">frames_after</name></name></expr>)</condition> <block pos:start="183:30" pos:end="203:5">{<block_content pos:start="185:9" pos:end="201:9">

        <expr_stmt pos:start="185:9" pos:end="189:54"><expr pos:start="185:9" pos:end="189:53"><name pos:start="185:9" pos:end="185:14">status</name> <operator pos:start="185:16" pos:end="185:16">=</operator> <call pos:start="185:18" pos:end="189:53"><name pos:start="185:18" pos:end="185:37">VTSessionSetProperty</name><argument_list pos:start="185:38" pos:end="189:53">(<argument pos:start="185:39" pos:end="185:52"><expr pos:start="185:39" pos:end="185:52"><name pos:start="185:39" pos:end="185:52"><name pos:start="185:39" pos:end="185:43">vtctx</name><operator pos:start="185:44" pos:end="185:45">-&gt;</operator><name pos:start="185:46" pos:end="185:52">session</name></name></expr></argument>,

                                      <argument pos:start="187:39" pos:end="187:82"><expr pos:start="187:39" pos:end="187:82"><name pos:start="187:39" pos:end="187:82">kVTCompressionPropertyKey_MoreFramesAfterEnd</name></expr></argument>,

                                      <argument pos:start="189:39" pos:end="189:52"><expr pos:start="189:39" pos:end="189:52"><name pos:start="189:39" pos:end="189:52">kCFBooleanTrue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="193:9" pos:end="201:9"><if pos:start="193:9" pos:end="197:9">if <condition pos:start="193:12" pos:end="193:49">(<expr pos:start="193:13" pos:end="193:48"><name pos:start="193:13" pos:end="193:18">status</name> <operator pos:start="193:20" pos:end="193:21">==</operator> <name pos:start="193:23" pos:end="193:48">kVTPropertyNotSupportedErr</name></expr>)</condition> <block pos:start="193:51" pos:end="197:9">{<block_content pos:start="195:13" pos:end="195:112">

            <expr_stmt pos:start="195:13" pos:end="195:112"><expr pos:start="195:13" pos:end="195:111"><call pos:start="195:13" pos:end="195:111"><name pos:start="195:13" pos:end="195:18">av_log</name><argument_list pos:start="195:19" pos:end="195:111">(<argument pos:start="195:20" pos:end="195:24"><expr pos:start="195:20" pos:end="195:24"><name pos:start="195:20" pos:end="195:24">avctx</name></expr></argument>, <argument pos:start="195:27" pos:end="195:40"><expr pos:start="195:27" pos:end="195:40"><name pos:start="195:27" pos:end="195:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="195:43" pos:end="195:110"><expr pos:start="195:43" pos:end="195:110"><literal type="string" pos:start="195:43" pos:end="195:110">"frames_after property is not supported on this device. Ignoring.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="197:11" pos:end="201:9">else if <condition pos:start="197:19" pos:end="197:26">(<expr pos:start="197:20" pos:end="197:25"><name pos:start="197:20" pos:end="197:25">status</name></expr>)</condition> <block pos:start="197:28" pos:end="201:9">{<block_content pos:start="199:13" pos:end="199:93">

            <expr_stmt pos:start="199:13" pos:end="199:93"><expr pos:start="199:13" pos:end="199:92"><call pos:start="199:13" pos:end="199:92"><name pos:start="199:13" pos:end="199:18">av_log</name><argument_list pos:start="199:19" pos:end="199:92">(<argument pos:start="199:20" pos:end="199:24"><expr pos:start="199:20" pos:end="199:24"><name pos:start="199:20" pos:end="199:24">avctx</name></expr></argument>, <argument pos:start="199:27" pos:end="199:38"><expr pos:start="199:27" pos:end="199:38"><name pos:start="199:27" pos:end="199:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="199:41" pos:end="199:83"><expr pos:start="199:41" pos:end="199:83"><literal type="string" pos:start="199:41" pos:end="199:83">"Error setting frames_after property: %d\n"</literal></expr></argument>, <argument pos:start="199:86" pos:end="199:91"><expr pos:start="199:86" pos:end="199:91"><name pos:start="199:86" pos:end="199:91">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="207:5" pos:end="329:5"><if pos:start="207:5" pos:end="329:5">if <condition pos:start="207:8" pos:end="207:44">(<expr pos:start="207:9" pos:end="207:43"><name pos:start="207:9" pos:end="207:38"><name pos:start="207:9" pos:end="207:13">avctx</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:34">sample_aspect_ratio</name><operator pos:start="207:35" pos:end="207:35">.</operator><name pos:start="207:36" pos:end="207:38">num</name></name> <operator pos:start="207:40" pos:end="207:41">!=</operator> <literal type="number" pos:start="207:43" pos:end="207:43">0</literal></expr>)</condition> <block pos:start="207:46" pos:end="329:5">{<block_content pos:start="209:9" pos:end="327:9">

        <decl_stmt pos:start="209:9" pos:end="209:24"><decl pos:start="209:9" pos:end="209:23"><type pos:start="209:9" pos:end="209:19"><name pos:start="209:9" pos:end="209:19">CFNumberRef</name></type> <name pos:start="209:21" pos:end="209:23">num</name></decl>;</decl_stmt>

        <decl_stmt pos:start="211:9" pos:end="211:24"><decl pos:start="211:9" pos:end="211:23"><type pos:start="211:9" pos:end="211:19"><name pos:start="211:9" pos:end="211:19">CFNumberRef</name></type> <name pos:start="211:21" pos:end="211:23">den</name></decl>;</decl_stmt>

        <decl_stmt pos:start="213:9" pos:end="213:35"><decl pos:start="213:9" pos:end="213:34"><type pos:start="213:9" pos:end="213:30"><name pos:start="213:9" pos:end="213:30">CFMutableDictionaryRef</name></type> <name pos:start="213:32" pos:end="213:34">par</name></decl>;</decl_stmt>

        <decl_stmt pos:start="215:9" pos:end="215:56"><decl pos:start="215:9" pos:end="215:55"><type pos:start="215:9" pos:end="215:20"><name pos:start="215:9" pos:end="215:18">AVRational</name> <modifier pos:start="215:20" pos:end="215:20">*</modifier></type><name pos:start="215:21" pos:end="215:25">avpar</name> <init pos:start="215:27" pos:end="215:55">= <expr pos:start="215:29" pos:end="215:55"><operator pos:start="215:29" pos:end="215:29">&amp;</operator><name pos:start="215:30" pos:end="215:55"><name pos:start="215:30" pos:end="215:34">avctx</name><operator pos:start="215:35" pos:end="215:36">-&gt;</operator><name pos:start="215:37" pos:end="215:55">sample_aspect_ratio</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="219:9" pos:end="223:30"><expr pos:start="219:9" pos:end="223:29"><call pos:start="219:9" pos:end="223:29"><name pos:start="219:9" pos:end="219:17">av_reduce</name><argument_list pos:start="219:18" pos:end="223:29">(<argument pos:start="219:19" pos:end="219:29"><expr pos:start="219:19" pos:end="219:29"><operator pos:start="219:19" pos:end="219:19">&amp;</operator><name pos:start="219:20" pos:end="219:29"><name pos:start="219:20" pos:end="219:24">avpar</name><operator pos:start="219:25" pos:end="219:26">-&gt;</operator><name pos:start="219:27" pos:end="219:29">num</name></name></expr></argument>, <argument pos:start="219:32" pos:end="219:42"><expr pos:start="219:32" pos:end="219:42"><operator pos:start="219:32" pos:end="219:32">&amp;</operator><name pos:start="219:33" pos:end="219:42"><name pos:start="219:33" pos:end="219:37">avpar</name><operator pos:start="219:38" pos:end="219:39">-&gt;</operator><name pos:start="219:40" pos:end="219:42">den</name></name></expr></argument>,

                   <argument pos:start="221:20" pos:end="221:29"><expr pos:start="221:20" pos:end="221:29"><name pos:start="221:20" pos:end="221:29"><name pos:start="221:20" pos:end="221:24">avpar</name><operator pos:start="221:25" pos:end="221:26">-&gt;</operator><name pos:start="221:27" pos:end="221:29">num</name></name></expr></argument>,  <argument pos:start="221:33" pos:end="221:42"><expr pos:start="221:33" pos:end="221:42"><name pos:start="221:33" pos:end="221:42"><name pos:start="221:33" pos:end="221:37">avpar</name><operator pos:start="221:38" pos:end="221:39">-&gt;</operator><name pos:start="221:40" pos:end="221:42">den</name></name></expr></argument>,

                  <argument pos:start="223:19" pos:end="223:28"><expr pos:start="223:19" pos:end="223:28"><literal type="number" pos:start="223:19" pos:end="223:28">0xFFFFFFFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="227:9" pos:end="231:42"><expr pos:start="227:9" pos:end="231:41"><name pos:start="227:9" pos:end="227:11">num</name> <operator pos:start="227:13" pos:end="227:13">=</operator> <call pos:start="227:15" pos:end="231:41"><name pos:start="227:15" pos:end="227:28">CFNumberCreate</name><argument_list pos:start="227:29" pos:end="231:41">(<argument pos:start="227:30" pos:end="227:48"><expr pos:start="227:30" pos:end="227:48"><name pos:start="227:30" pos:end="227:48">kCFAllocatorDefault</name></expr></argument>,

                             <argument pos:start="229:30" pos:end="229:45"><expr pos:start="229:30" pos:end="229:45"><name pos:start="229:30" pos:end="229:45">kCFNumberIntType</name></expr></argument>,

                             <argument pos:start="231:30" pos:end="231:40"><expr pos:start="231:30" pos:end="231:40"><operator pos:start="231:30" pos:end="231:30">&amp;</operator><name pos:start="231:31" pos:end="231:40"><name pos:start="231:31" pos:end="231:35">avpar</name><operator pos:start="231:36" pos:end="231:37">-&gt;</operator><name pos:start="231:38" pos:end="231:40">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="235:9" pos:end="239:42"><expr pos:start="235:9" pos:end="239:41"><name pos:start="235:9" pos:end="235:11">den</name> <operator pos:start="235:13" pos:end="235:13">=</operator> <call pos:start="235:15" pos:end="239:41"><name pos:start="235:15" pos:end="235:28">CFNumberCreate</name><argument_list pos:start="235:29" pos:end="239:41">(<argument pos:start="235:30" pos:end="235:48"><expr pos:start="235:30" pos:end="235:48"><name pos:start="235:30" pos:end="235:48">kCFAllocatorDefault</name></expr></argument>,

                             <argument pos:start="237:30" pos:end="237:45"><expr pos:start="237:30" pos:end="237:45"><name pos:start="237:30" pos:end="237:45">kCFNumberIntType</name></expr></argument>,

                             <argument pos:start="239:30" pos:end="239:40"><expr pos:start="239:30" pos:end="239:40"><operator pos:start="239:30" pos:end="239:30">&amp;</operator><name pos:start="239:31" pos:end="239:40"><name pos:start="239:31" pos:end="239:35">avpar</name><operator pos:start="239:36" pos:end="239:37">-&gt;</operator><name pos:start="239:38" pos:end="239:40">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>







        <expr_stmt pos:start="247:9" pos:end="253:74"><expr pos:start="247:9" pos:end="253:73"><name pos:start="247:9" pos:end="247:11">par</name> <operator pos:start="247:13" pos:end="247:13">=</operator> <call pos:start="247:15" pos:end="253:73"><name pos:start="247:15" pos:end="247:39">CFDictionaryCreateMutable</name><argument_list pos:start="247:40" pos:end="253:73">(<argument pos:start="247:41" pos:end="247:59"><expr pos:start="247:41" pos:end="247:59"><name pos:start="247:41" pos:end="247:59">kCFAllocatorDefault</name></expr></argument>,

                                        <argument pos:start="249:41" pos:end="249:41"><expr pos:start="249:41" pos:end="249:41"><literal type="number" pos:start="249:41" pos:end="249:41">2</literal></expr></argument>,

                                        <argument pos:start="251:41" pos:end="251:76"><expr pos:start="251:41" pos:end="251:76"><operator pos:start="251:41" pos:end="251:41">&amp;</operator><name pos:start="251:42" pos:end="251:76">kCFCopyStringDictionaryKeyCallBacks</name></expr></argument>,

                                        <argument pos:start="253:41" pos:end="253:72"><expr pos:start="253:41" pos:end="253:72"><operator pos:start="253:41" pos:end="253:41">&amp;</operator><name pos:start="253:42" pos:end="253:72">kCFTypeDictionaryValueCallBacks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="257:9" pos:end="269:9"><if pos:start="257:9" pos:end="269:9">if <condition pos:start="257:12" pos:end="257:33">(<expr pos:start="257:13" pos:end="257:32"><operator pos:start="257:13" pos:end="257:13">!</operator><name pos:start="257:14" pos:end="257:16">par</name> <operator pos:start="257:18" pos:end="257:19">||</operator> <operator pos:start="257:21" pos:end="257:21">!</operator><name pos:start="257:22" pos:end="257:24">num</name> <operator pos:start="257:26" pos:end="257:27">||</operator> <operator pos:start="257:29" pos:end="257:29">!</operator><name pos:start="257:30" pos:end="257:32">den</name></expr>)</condition> <block pos:start="257:35" pos:end="269:9">{<block_content pos:start="259:13" pos:end="267:35">

            <if_stmt pos:start="259:13" pos:end="259:36"><if pos:start="259:13" pos:end="259:36">if <condition pos:start="259:16" pos:end="259:20">(<expr pos:start="259:17" pos:end="259:19"><name pos:start="259:17" pos:end="259:19">par</name></expr>)</condition><block type="pseudo" pos:start="259:22" pos:end="259:36"><block_content pos:start="259:22" pos:end="259:36"> <expr_stmt pos:start="259:22" pos:end="259:36"><expr pos:start="259:22" pos:end="259:35"><call pos:start="259:22" pos:end="259:35"><name pos:start="259:22" pos:end="259:30">CFRelease</name><argument_list pos:start="259:31" pos:end="259:35">(<argument pos:start="259:32" pos:end="259:34"><expr pos:start="259:32" pos:end="259:34"><name pos:start="259:32" pos:end="259:34">par</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="261:13" pos:end="261:36"><if pos:start="261:13" pos:end="261:36">if <condition pos:start="261:16" pos:end="261:20">(<expr pos:start="261:17" pos:end="261:19"><name pos:start="261:17" pos:end="261:19">num</name></expr>)</condition><block type="pseudo" pos:start="261:22" pos:end="261:36"><block_content pos:start="261:22" pos:end="261:36"> <expr_stmt pos:start="261:22" pos:end="261:36"><expr pos:start="261:22" pos:end="261:35"><call pos:start="261:22" pos:end="261:35"><name pos:start="261:22" pos:end="261:30">CFRelease</name><argument_list pos:start="261:31" pos:end="261:35">(<argument pos:start="261:32" pos:end="261:34"><expr pos:start="261:32" pos:end="261:34"><name pos:start="261:32" pos:end="261:34">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="263:13" pos:end="263:36"><if pos:start="263:13" pos:end="263:36">if <condition pos:start="263:16" pos:end="263:20">(<expr pos:start="263:17" pos:end="263:19"><name pos:start="263:17" pos:end="263:19">den</name></expr>)</condition><block type="pseudo" pos:start="263:22" pos:end="263:36"><block_content pos:start="263:22" pos:end="263:36"> <expr_stmt pos:start="263:22" pos:end="263:36"><expr pos:start="263:22" pos:end="263:35"><call pos:start="263:22" pos:end="263:35"><name pos:start="263:22" pos:end="263:30">CFRelease</name><argument_list pos:start="263:31" pos:end="263:35">(<argument pos:start="263:32" pos:end="263:34"><expr pos:start="263:32" pos:end="263:34"><name pos:start="263:32" pos:end="263:34">den</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <return pos:start="267:13" pos:end="267:35">return <expr pos:start="267:20" pos:end="267:34"><call pos:start="267:20" pos:end="267:34"><name pos:start="267:20" pos:end="267:26">AVERROR</name><argument_list pos:start="267:27" pos:end="267:34">(<argument pos:start="267:28" pos:end="267:33"><expr pos:start="267:28" pos:end="267:33"><name pos:start="267:28" pos:end="267:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="273:9" pos:end="279:17"><expr pos:start="273:9" pos:end="279:16"><call pos:start="273:9" pos:end="279:16"><name pos:start="273:9" pos:end="273:28">CFDictionarySetValue</name><argument_list pos:start="273:29" pos:end="279:16">(

            <argument pos:start="275:13" pos:end="275:15"><expr pos:start="275:13" pos:end="275:15"><name pos:start="275:13" pos:end="275:15">par</name></expr></argument>,

            <argument pos:start="277:13" pos:end="277:69"><expr pos:start="277:13" pos:end="277:69"><name pos:start="277:13" pos:end="277:69">kCMFormatDescriptionKey_PixelAspectRatioHorizontalSpacing</name></expr></argument>,

            <argument pos:start="279:13" pos:end="279:15"><expr pos:start="279:13" pos:end="279:15"><name pos:start="279:13" pos:end="279:15">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="283:9" pos:end="289:17"><expr pos:start="283:9" pos:end="289:16"><call pos:start="283:9" pos:end="289:16"><name pos:start="283:9" pos:end="283:28">CFDictionarySetValue</name><argument_list pos:start="283:29" pos:end="289:16">(

            <argument pos:start="285:13" pos:end="285:15"><expr pos:start="285:13" pos:end="285:15"><name pos:start="285:13" pos:end="285:15">par</name></expr></argument>,

            <argument pos:start="287:13" pos:end="287:67"><expr pos:start="287:13" pos:end="287:67"><name pos:start="287:13" pos:end="287:67">kCMFormatDescriptionKey_PixelAspectRatioVerticalSpacing</name></expr></argument>,

            <argument pos:start="289:13" pos:end="289:15"><expr pos:start="289:13" pos:end="289:15"><name pos:start="289:13" pos:end="289:15">den</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="293:9" pos:end="297:43"><expr pos:start="293:9" pos:end="297:42"><name pos:start="293:9" pos:end="293:14">status</name> <operator pos:start="293:16" pos:end="293:16">=</operator> <call pos:start="293:18" pos:end="297:42"><name pos:start="293:18" pos:end="293:37">VTSessionSetProperty</name><argument_list pos:start="293:38" pos:end="297:42">(<argument pos:start="293:39" pos:end="293:52"><expr pos:start="293:39" pos:end="293:52"><name pos:start="293:39" pos:end="293:52"><name pos:start="293:39" pos:end="293:43">vtctx</name><operator pos:start="293:44" pos:end="293:45">-&gt;</operator><name pos:start="293:46" pos:end="293:52">session</name></name></expr></argument>,

                                      <argument pos:start="295:39" pos:end="295:80"><expr pos:start="295:39" pos:end="295:80"><name pos:start="295:39" pos:end="295:80">kVTCompressionPropertyKey_PixelAspectRatio</name></expr></argument>,

                                      <argument pos:start="297:39" pos:end="297:41"><expr pos:start="297:39" pos:end="297:41"><name pos:start="297:39" pos:end="297:41">par</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="301:9" pos:end="301:23"><expr pos:start="301:9" pos:end="301:22"><call pos:start="301:9" pos:end="301:22"><name pos:start="301:9" pos:end="301:17">CFRelease</name><argument_list pos:start="301:18" pos:end="301:22">(<argument pos:start="301:19" pos:end="301:21"><expr pos:start="301:19" pos:end="301:21"><name pos:start="301:19" pos:end="301:21">par</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="303:9" pos:end="303:23"><expr pos:start="303:9" pos:end="303:22"><call pos:start="303:9" pos:end="303:22"><name pos:start="303:9" pos:end="303:17">CFRelease</name><argument_list pos:start="303:18" pos:end="303:22">(<argument pos:start="303:19" pos:end="303:21"><expr pos:start="303:19" pos:end="303:21"><name pos:start="303:19" pos:end="303:21">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:23"><expr pos:start="305:9" pos:end="305:22"><call pos:start="305:9" pos:end="305:22"><name pos:start="305:9" pos:end="305:17">CFRelease</name><argument_list pos:start="305:18" pos:end="305:22">(<argument pos:start="305:19" pos:end="305:21"><expr pos:start="305:19" pos:end="305:21"><name pos:start="305:19" pos:end="305:21">den</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="309:9" pos:end="327:9"><if pos:start="309:9" pos:end="327:9">if <condition pos:start="309:12" pos:end="309:19">(<expr pos:start="309:13" pos:end="309:18"><name pos:start="309:13" pos:end="309:18">status</name></expr>)</condition> <block pos:start="309:21" pos:end="327:9">{<block_content pos:start="311:13" pos:end="325:36">

            <expr_stmt pos:start="311:13" pos:end="321:27"><expr pos:start="311:13" pos:end="321:26"><call pos:start="311:13" pos:end="321:26"><name pos:start="311:13" pos:end="311:18">av_log</name><argument_list pos:start="311:19" pos:end="321:26">(<argument pos:start="311:20" pos:end="311:24"><expr pos:start="311:20" pos:end="311:24"><name pos:start="311:20" pos:end="311:24">avctx</name></expr></argument>,

                   <argument pos:start="313:20" pos:end="313:31"><expr pos:start="313:20" pos:end="313:31"><name pos:start="313:20" pos:end="313:31">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="315:20" pos:end="315:69"><expr pos:start="315:20" pos:end="315:69"><literal type="string" pos:start="315:20" pos:end="315:69">"Error setting pixel aspect ratio to %d:%d: %d.\n"</literal></expr></argument>,

                   <argument pos:start="317:20" pos:end="317:49"><expr pos:start="317:20" pos:end="317:49"><name pos:start="317:20" pos:end="317:49"><name pos:start="317:20" pos:end="317:24">avctx</name><operator pos:start="317:25" pos:end="317:26">-&gt;</operator><name pos:start="317:27" pos:end="317:45">sample_aspect_ratio</name><operator pos:start="317:46" pos:end="317:46">.</operator><name pos:start="317:47" pos:end="317:49">num</name></name></expr></argument>,

                   <argument pos:start="319:20" pos:end="319:49"><expr pos:start="319:20" pos:end="319:49"><name pos:start="319:20" pos:end="319:49"><name pos:start="319:20" pos:end="319:24">avctx</name><operator pos:start="319:25" pos:end="319:26">-&gt;</operator><name pos:start="319:27" pos:end="319:45">sample_aspect_ratio</name><operator pos:start="319:46" pos:end="319:46">.</operator><name pos:start="319:47" pos:end="319:49">den</name></name></expr></argument>,

                   <argument pos:start="321:20" pos:end="321:25"><expr pos:start="321:20" pos:end="321:25"><name pos:start="321:20" pos:end="321:25">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <return pos:start="325:13" pos:end="325:36">return <expr pos:start="325:20" pos:end="325:35"><name pos:start="325:20" pos:end="325:35">AVERROR_EXTERNAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>





    <if_stmt pos:start="335:5" pos:end="351:5"><if pos:start="335:5" pos:end="351:5">if <condition pos:start="335:8" pos:end="335:33">(<expr pos:start="335:9" pos:end="335:32"><name pos:start="335:9" pos:end="335:32"><name pos:start="335:9" pos:end="335:13">vtctx</name><operator pos:start="335:14" pos:end="335:15">-&gt;</operator><name pos:start="335:16" pos:end="335:32">transfer_function</name></name></expr>)</condition> <block pos:start="335:35" pos:end="351:5">{<block_content pos:start="337:9" pos:end="349:9">

        <expr_stmt pos:start="337:9" pos:end="341:64"><expr pos:start="337:9" pos:end="341:63"><name pos:start="337:9" pos:end="337:14">status</name> <operator pos:start="337:16" pos:end="337:16">=</operator> <call pos:start="337:18" pos:end="341:63"><name pos:start="337:18" pos:end="337:37">VTSessionSetProperty</name><argument_list pos:start="337:38" pos:end="341:63">(<argument pos:start="337:39" pos:end="337:52"><expr pos:start="337:39" pos:end="337:52"><name pos:start="337:39" pos:end="337:52"><name pos:start="337:39" pos:end="337:43">vtctx</name><operator pos:start="337:44" pos:end="337:45">-&gt;</operator><name pos:start="337:46" pos:end="337:52">session</name></name></expr></argument>,

                                      <argument pos:start="339:39" pos:end="339:80"><expr pos:start="339:39" pos:end="339:80"><name pos:start="339:39" pos:end="339:80">kVTCompressionPropertyKey_TransferFunction</name></expr></argument>,

                                      <argument pos:start="341:39" pos:end="341:62"><expr pos:start="341:39" pos:end="341:62"><name pos:start="341:39" pos:end="341:62"><name pos:start="341:39" pos:end="341:43">vtctx</name><operator pos:start="341:44" pos:end="341:45">-&gt;</operator><name pos:start="341:46" pos:end="341:62">transfer_function</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="345:9" pos:end="349:9"><if pos:start="345:9" pos:end="349:9">if <condition pos:start="345:12" pos:end="345:19">(<expr pos:start="345:13" pos:end="345:18"><name pos:start="345:13" pos:end="345:18">status</name></expr>)</condition> <block pos:start="345:21" pos:end="349:9">{<block_content pos:start="347:13" pos:end="347:91">

            <expr_stmt pos:start="347:13" pos:end="347:91"><expr pos:start="347:13" pos:end="347:90"><call pos:start="347:13" pos:end="347:90"><name pos:start="347:13" pos:end="347:18">av_log</name><argument_list pos:start="347:19" pos:end="347:90">(<argument pos:start="347:20" pos:end="347:24"><expr pos:start="347:20" pos:end="347:24"><name pos:start="347:20" pos:end="347:24">avctx</name></expr></argument>, <argument pos:start="347:27" pos:end="347:40"><expr pos:start="347:27" pos:end="347:40"><name pos:start="347:27" pos:end="347:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="347:43" pos:end="347:81"><expr pos:start="347:43" pos:end="347:81"><literal type="string" pos:start="347:43" pos:end="347:81">"Could not set transfer function: %d\n"</literal></expr></argument>, <argument pos:start="347:84" pos:end="347:89"><expr pos:start="347:84" pos:end="347:89"><name pos:start="347:84" pos:end="347:89">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>





    <if_stmt pos:start="357:5" pos:end="373:5"><if pos:start="357:5" pos:end="373:5">if <condition pos:start="357:8" pos:end="357:28">(<expr pos:start="357:9" pos:end="357:27"><name pos:start="357:9" pos:end="357:27"><name pos:start="357:9" pos:end="357:13">vtctx</name><operator pos:start="357:14" pos:end="357:15">-&gt;</operator><name pos:start="357:16" pos:end="357:27">ycbcr_matrix</name></name></expr>)</condition> <block pos:start="357:30" pos:end="373:5">{<block_content pos:start="359:9" pos:end="371:9">

        <expr_stmt pos:start="359:9" pos:end="363:59"><expr pos:start="359:9" pos:end="363:58"><name pos:start="359:9" pos:end="359:14">status</name> <operator pos:start="359:16" pos:end="359:16">=</operator> <call pos:start="359:18" pos:end="363:58"><name pos:start="359:18" pos:end="359:37">VTSessionSetProperty</name><argument_list pos:start="359:38" pos:end="363:58">(<argument pos:start="359:39" pos:end="359:52"><expr pos:start="359:39" pos:end="359:52"><name pos:start="359:39" pos:end="359:52"><name pos:start="359:39" pos:end="359:43">vtctx</name><operator pos:start="359:44" pos:end="359:45">-&gt;</operator><name pos:start="359:46" pos:end="359:52">session</name></name></expr></argument>,

                                      <argument pos:start="361:39" pos:end="361:75"><expr pos:start="361:39" pos:end="361:75"><name pos:start="361:39" pos:end="361:75">kVTCompressionPropertyKey_YCbCrMatrix</name></expr></argument>,

                                      <argument pos:start="363:39" pos:end="363:57"><expr pos:start="363:39" pos:end="363:57"><name pos:start="363:39" pos:end="363:57"><name pos:start="363:39" pos:end="363:43">vtctx</name><operator pos:start="363:44" pos:end="363:45">-&gt;</operator><name pos:start="363:46" pos:end="363:57">ycbcr_matrix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="367:9" pos:end="371:9"><if pos:start="367:9" pos:end="371:9">if <condition pos:start="367:12" pos:end="367:19">(<expr pos:start="367:13" pos:end="367:18"><name pos:start="367:13" pos:end="367:18">status</name></expr>)</condition> <block pos:start="367:21" pos:end="371:9">{<block_content pos:start="369:13" pos:end="369:86">

            <expr_stmt pos:start="369:13" pos:end="369:86"><expr pos:start="369:13" pos:end="369:85"><call pos:start="369:13" pos:end="369:85"><name pos:start="369:13" pos:end="369:18">av_log</name><argument_list pos:start="369:19" pos:end="369:85">(<argument pos:start="369:20" pos:end="369:24"><expr pos:start="369:20" pos:end="369:24"><name pos:start="369:20" pos:end="369:24">avctx</name></expr></argument>, <argument pos:start="369:27" pos:end="369:40"><expr pos:start="369:27" pos:end="369:40"><name pos:start="369:27" pos:end="369:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="369:43" pos:end="369:76"><expr pos:start="369:43" pos:end="369:76"><literal type="string" pos:start="369:43" pos:end="369:76">"Could not set ycbcr matrix: %d\n"</literal></expr></argument>, <argument pos:start="369:79" pos:end="369:84"><expr pos:start="369:79" pos:end="369:84"><name pos:start="369:79" pos:end="369:84">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>





    <if_stmt pos:start="379:5" pos:end="395:5"><if pos:start="379:5" pos:end="395:5">if <condition pos:start="379:8" pos:end="379:31">(<expr pos:start="379:9" pos:end="379:30"><name pos:start="379:9" pos:end="379:30"><name pos:start="379:9" pos:end="379:13">vtctx</name><operator pos:start="379:14" pos:end="379:15">-&gt;</operator><name pos:start="379:16" pos:end="379:30">color_primaries</name></name></expr>)</condition> <block pos:start="379:33" pos:end="395:5">{<block_content pos:start="381:9" pos:end="393:9">

        <expr_stmt pos:start="381:9" pos:end="385:62"><expr pos:start="381:9" pos:end="385:61"><name pos:start="381:9" pos:end="381:14">status</name> <operator pos:start="381:16" pos:end="381:16">=</operator> <call pos:start="381:18" pos:end="385:61"><name pos:start="381:18" pos:end="381:37">VTSessionSetProperty</name><argument_list pos:start="381:38" pos:end="385:61">(<argument pos:start="381:39" pos:end="381:52"><expr pos:start="381:39" pos:end="381:52"><name pos:start="381:39" pos:end="381:52"><name pos:start="381:39" pos:end="381:43">vtctx</name><operator pos:start="381:44" pos:end="381:45">-&gt;</operator><name pos:start="381:46" pos:end="381:52">session</name></name></expr></argument>,

                                      <argument pos:start="383:39" pos:end="383:78"><expr pos:start="383:39" pos:end="383:78"><name pos:start="383:39" pos:end="383:78">kVTCompressionPropertyKey_ColorPrimaries</name></expr></argument>,

                                      <argument pos:start="385:39" pos:end="385:60"><expr pos:start="385:39" pos:end="385:60"><name pos:start="385:39" pos:end="385:60"><name pos:start="385:39" pos:end="385:43">vtctx</name><operator pos:start="385:44" pos:end="385:45">-&gt;</operator><name pos:start="385:46" pos:end="385:60">color_primaries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="389:9" pos:end="393:9"><if pos:start="389:9" pos:end="393:9">if <condition pos:start="389:12" pos:end="389:19">(<expr pos:start="389:13" pos:end="389:18"><name pos:start="389:13" pos:end="389:18">status</name></expr>)</condition> <block pos:start="389:21" pos:end="393:9">{<block_content pos:start="391:13" pos:end="391:89">

            <expr_stmt pos:start="391:13" pos:end="391:89"><expr pos:start="391:13" pos:end="391:88"><call pos:start="391:13" pos:end="391:88"><name pos:start="391:13" pos:end="391:18">av_log</name><argument_list pos:start="391:19" pos:end="391:88">(<argument pos:start="391:20" pos:end="391:24"><expr pos:start="391:20" pos:end="391:24"><name pos:start="391:20" pos:end="391:24">avctx</name></expr></argument>, <argument pos:start="391:27" pos:end="391:40"><expr pos:start="391:27" pos:end="391:40"><name pos:start="391:27" pos:end="391:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="391:43" pos:end="391:79"><expr pos:start="391:43" pos:end="391:79"><literal type="string" pos:start="391:43" pos:end="391:79">"Could not set color primaries: %d\n"</literal></expr></argument>, <argument pos:start="391:82" pos:end="391:87"><expr pos:start="391:82" pos:end="391:87"><name pos:start="391:82" pos:end="391:87">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="399:5" pos:end="415:5"><if pos:start="399:5" pos:end="415:5">if <condition pos:start="399:8" pos:end="399:20">(<expr pos:start="399:9" pos:end="399:19"><name pos:start="399:9" pos:end="399:19">gamma_level</name></expr>)</condition> <block pos:start="399:22" pos:end="415:5">{<block_content pos:start="401:9" pos:end="413:9">

        <expr_stmt pos:start="401:9" pos:end="405:51"><expr pos:start="401:9" pos:end="405:50"><name pos:start="401:9" pos:end="401:14">status</name> <operator pos:start="401:16" pos:end="401:16">=</operator> <call pos:start="401:18" pos:end="405:50"><name pos:start="401:18" pos:end="401:37">VTSessionSetProperty</name><argument_list pos:start="401:38" pos:end="405:50">(<argument pos:start="401:39" pos:end="401:52"><expr pos:start="401:39" pos:end="401:52"><name pos:start="401:39" pos:end="401:52"><name pos:start="401:39" pos:end="401:43">vtctx</name><operator pos:start="401:44" pos:end="401:45">-&gt;</operator><name pos:start="401:46" pos:end="401:52">session</name></name></expr></argument>,

                                      <argument pos:start="403:39" pos:end="403:65"><expr pos:start="403:39" pos:end="403:65"><name pos:start="403:39" pos:end="403:65">kCVImageBufferGammaLevelKey</name></expr></argument>,

                                      <argument pos:start="405:39" pos:end="405:49"><expr pos:start="405:39" pos:end="405:49"><name pos:start="405:39" pos:end="405:49">gamma_level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="409:9" pos:end="413:9"><if pos:start="409:9" pos:end="413:9">if <condition pos:start="409:12" pos:end="409:19">(<expr pos:start="409:13" pos:end="409:18"><name pos:start="409:13" pos:end="409:18">status</name></expr>)</condition> <block pos:start="409:21" pos:end="413:9">{<block_content pos:start="411:13" pos:end="411:85">

            <expr_stmt pos:start="411:13" pos:end="411:85"><expr pos:start="411:13" pos:end="411:84"><call pos:start="411:13" pos:end="411:84"><name pos:start="411:13" pos:end="411:18">av_log</name><argument_list pos:start="411:19" pos:end="411:84">(<argument pos:start="411:20" pos:end="411:24"><expr pos:start="411:20" pos:end="411:24"><name pos:start="411:20" pos:end="411:24">avctx</name></expr></argument>, <argument pos:start="411:27" pos:end="411:40"><expr pos:start="411:27" pos:end="411:40"><name pos:start="411:27" pos:end="411:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="411:43" pos:end="411:75"><expr pos:start="411:43" pos:end="411:75"><literal type="string" pos:start="411:43" pos:end="411:75">"Could not set gamma level: %d\n"</literal></expr></argument>, <argument pos:start="411:78" pos:end="411:83"><expr pos:start="411:78" pos:end="411:83"><name pos:start="411:78" pos:end="411:83">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="419:5" pos:end="437:5"><if pos:start="419:5" pos:end="437:5">if <condition pos:start="419:8" pos:end="419:29">(<expr pos:start="419:9" pos:end="419:28"><operator pos:start="419:9" pos:end="419:9">!</operator><name pos:start="419:10" pos:end="419:28"><name pos:start="419:10" pos:end="419:14">vtctx</name><operator pos:start="419:15" pos:end="419:16">-&gt;</operator><name pos:start="419:17" pos:end="419:28">has_b_frames</name></name></expr>)</condition> <block pos:start="419:31" pos:end="437:5">{<block_content pos:start="421:9" pos:end="435:9">

        <expr_stmt pos:start="421:9" pos:end="425:55"><expr pos:start="421:9" pos:end="425:54"><name pos:start="421:9" pos:end="421:14">status</name> <operator pos:start="421:16" pos:end="421:16">=</operator> <call pos:start="421:18" pos:end="425:54"><name pos:start="421:18" pos:end="421:37">VTSessionSetProperty</name><argument_list pos:start="421:38" pos:end="425:54">(<argument pos:start="421:39" pos:end="421:52"><expr pos:start="421:39" pos:end="421:52"><name pos:start="421:39" pos:end="421:52"><name pos:start="421:39" pos:end="421:43">vtctx</name><operator pos:start="421:44" pos:end="421:45">-&gt;</operator><name pos:start="421:46" pos:end="421:52">session</name></name></expr></argument>,

                                      <argument pos:start="423:39" pos:end="423:84"><expr pos:start="423:39" pos:end="423:84"><name pos:start="423:39" pos:end="423:84">kVTCompressionPropertyKey_AllowFrameReordering</name></expr></argument>,

                                      <argument pos:start="425:39" pos:end="425:53"><expr pos:start="425:39" pos:end="425:53"><name pos:start="425:39" pos:end="425:53">kCFBooleanFalse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="429:9" pos:end="435:9"><if pos:start="429:9" pos:end="435:9">if <condition pos:start="429:12" pos:end="429:19">(<expr pos:start="429:13" pos:end="429:18"><name pos:start="429:13" pos:end="429:18">status</name></expr>)</condition> <block pos:start="429:21" pos:end="435:9">{<block_content pos:start="431:13" pos:end="433:36">

            <expr_stmt pos:start="431:13" pos:end="431:105"><expr pos:start="431:13" pos:end="431:104"><call pos:start="431:13" pos:end="431:104"><name pos:start="431:13" pos:end="431:18">av_log</name><argument_list pos:start="431:19" pos:end="431:104">(<argument pos:start="431:20" pos:end="431:24"><expr pos:start="431:20" pos:end="431:24"><name pos:start="431:20" pos:end="431:24">avctx</name></expr></argument>, <argument pos:start="431:27" pos:end="431:38"><expr pos:start="431:27" pos:end="431:38"><name pos:start="431:27" pos:end="431:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="431:41" pos:end="431:95"><expr pos:start="431:41" pos:end="431:95"><literal type="string" pos:start="431:41" pos:end="431:95">"Error setting 'allow frame reordering' property: %d\n"</literal></expr></argument>, <argument pos:start="431:98" pos:end="431:103"><expr pos:start="431:98" pos:end="431:103"><name pos:start="431:98" pos:end="431:103">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="433:13" pos:end="433:36">return <expr pos:start="433:20" pos:end="433:35"><name pos:start="433:20" pos:end="433:35">AVERROR_EXTERNAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="441:5" pos:end="467:5"><if pos:start="441:5" pos:end="467:5">if <condition pos:start="441:8" pos:end="441:45">(<expr pos:start="441:9" pos:end="441:44"><name pos:start="441:9" pos:end="441:22"><name pos:start="441:9" pos:end="441:13">vtctx</name><operator pos:start="441:14" pos:end="441:15">-&gt;</operator><name pos:start="441:16" pos:end="441:22">entropy</name></name> <operator pos:start="441:24" pos:end="441:25">!=</operator> <name pos:start="441:27" pos:end="441:44">VT_ENTROPY_NOT_SET</name></expr>)</condition> <block pos:start="441:47" pos:end="467:5">{<block_content pos:start="443:9" pos:end="465:9">

        <decl_stmt pos:start="443:9" pos:end="447:57"><decl pos:start="443:9" pos:end="447:56"><type pos:start="443:9" pos:end="443:19"><name pos:start="443:9" pos:end="443:19">CFStringRef</name></type> <name pos:start="443:21" pos:end="443:27">entropy</name> <init pos:start="443:29" pos:end="447:56">= <expr pos:start="443:31" pos:end="447:56"><ternary pos:start="443:31" pos:end="447:56"><condition pos:start="443:31" pos:end="443:58"><expr pos:start="443:31" pos:end="443:56"><name pos:start="443:31" pos:end="443:44"><name pos:start="443:31" pos:end="443:35">vtctx</name><operator pos:start="443:36" pos:end="443:37">-&gt;</operator><name pos:start="443:38" pos:end="443:44">entropy</name></name> <operator pos:start="443:46" pos:end="443:47">==</operator> <name pos:start="443:49" pos:end="443:56">VT_CABAC</name></expr> ?</condition><then pos:start="445:33" pos:end="445:56">

                                <expr pos:start="445:33" pos:end="445:56"><name pos:start="445:33" pos:end="445:56">kVTH264EntropyMode_CABAC</name></expr></then><else pos:start="445:57" pos:end="447:56">:

                                <expr pos:start="447:33" pos:end="447:56"><name pos:start="447:33" pos:end="447:56">kVTH264EntropyMode_CAVLC</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="451:9" pos:end="455:47"><expr pos:start="451:9" pos:end="455:46"><name pos:start="451:9" pos:end="451:14">status</name> <operator pos:start="451:16" pos:end="451:16">=</operator> <call pos:start="451:18" pos:end="455:46"><name pos:start="451:18" pos:end="451:37">VTSessionSetProperty</name><argument_list pos:start="451:38" pos:end="455:46">(<argument pos:start="451:39" pos:end="451:52"><expr pos:start="451:39" pos:end="451:52"><name pos:start="451:39" pos:end="451:52"><name pos:start="451:39" pos:end="451:43">vtctx</name><operator pos:start="451:44" pos:end="451:45">-&gt;</operator><name pos:start="451:46" pos:end="451:52">session</name></name></expr></argument>,

                                      <argument pos:start="453:39" pos:end="453:79"><expr pos:start="453:39" pos:end="453:79"><name pos:start="453:39" pos:end="453:79">kVTCompressionPropertyKey_H264EntropyMode</name></expr></argument>,

                                      <argument pos:start="455:39" pos:end="455:45"><expr pos:start="455:39" pos:end="455:45"><name pos:start="455:39" pos:end="455:45">entropy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="459:9" pos:end="465:9"><if pos:start="459:9" pos:end="465:9">if <condition pos:start="459:12" pos:end="459:19">(<expr pos:start="459:13" pos:end="459:18"><name pos:start="459:13" pos:end="459:18">status</name></expr>)</condition> <block pos:start="459:21" pos:end="465:9">{<block_content pos:start="461:13" pos:end="463:36">

            <expr_stmt pos:start="461:13" pos:end="461:88"><expr pos:start="461:13" pos:end="461:87"><call pos:start="461:13" pos:end="461:87"><name pos:start="461:13" pos:end="461:18">av_log</name><argument_list pos:start="461:19" pos:end="461:87">(<argument pos:start="461:20" pos:end="461:24"><expr pos:start="461:20" pos:end="461:24"><name pos:start="461:20" pos:end="461:24">avctx</name></expr></argument>, <argument pos:start="461:27" pos:end="461:38"><expr pos:start="461:27" pos:end="461:38"><name pos:start="461:27" pos:end="461:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="461:41" pos:end="461:78"><expr pos:start="461:41" pos:end="461:78"><literal type="string" pos:start="461:41" pos:end="461:78">"Error setting entropy property: %d\n"</literal></expr></argument>, <argument pos:start="461:81" pos:end="461:86"><expr pos:start="461:81" pos:end="461:86"><name pos:start="461:81" pos:end="461:86">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="463:13" pos:end="463:36">return <expr pos:start="463:20" pos:end="463:35"><name pos:start="463:20" pos:end="463:35">AVERROR_EXTERNAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="471:5" pos:end="487:5"><if pos:start="471:5" pos:end="487:5">if <condition pos:start="471:8" pos:end="471:24">(<expr pos:start="471:9" pos:end="471:23"><name pos:start="471:9" pos:end="471:23"><name pos:start="471:9" pos:end="471:13">vtctx</name><operator pos:start="471:14" pos:end="471:15">-&gt;</operator><name pos:start="471:16" pos:end="471:23">realtime</name></name></expr>)</condition> <block pos:start="471:26" pos:end="487:5">{<block_content pos:start="473:9" pos:end="485:9">

        <expr_stmt pos:start="473:9" pos:end="477:54"><expr pos:start="473:9" pos:end="477:53"><name pos:start="473:9" pos:end="473:14">status</name> <operator pos:start="473:16" pos:end="473:16">=</operator> <call pos:start="473:18" pos:end="477:53"><name pos:start="473:18" pos:end="473:37">VTSessionSetProperty</name><argument_list pos:start="473:38" pos:end="477:53">(<argument pos:start="473:39" pos:end="473:52"><expr pos:start="473:39" pos:end="473:52"><name pos:start="473:39" pos:end="473:52"><name pos:start="473:39" pos:end="473:43">vtctx</name><operator pos:start="473:44" pos:end="473:45">-&gt;</operator><name pos:start="473:46" pos:end="473:52">session</name></name></expr></argument>,

                                      <argument pos:start="475:39" pos:end="475:72"><expr pos:start="475:39" pos:end="475:72"><name pos:start="475:39" pos:end="475:72">kVTCompressionPropertyKey_RealTime</name></expr></argument>,

                                      <argument pos:start="477:39" pos:end="477:52"><expr pos:start="477:39" pos:end="477:52"><name pos:start="477:39" pos:end="477:52">kCFBooleanTrue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="481:9" pos:end="485:9"><if pos:start="481:9" pos:end="485:9">if <condition pos:start="481:12" pos:end="481:19">(<expr pos:start="481:13" pos:end="481:18"><name pos:start="481:13" pos:end="481:18">status</name></expr>)</condition> <block pos:start="481:21" pos:end="485:9">{<block_content pos:start="483:13" pos:end="483:89">

            <expr_stmt pos:start="483:13" pos:end="483:89"><expr pos:start="483:13" pos:end="483:88"><call pos:start="483:13" pos:end="483:88"><name pos:start="483:13" pos:end="483:18">av_log</name><argument_list pos:start="483:19" pos:end="483:88">(<argument pos:start="483:20" pos:end="483:24"><expr pos:start="483:20" pos:end="483:24"><name pos:start="483:20" pos:end="483:24">avctx</name></expr></argument>, <argument pos:start="483:27" pos:end="483:38"><expr pos:start="483:27" pos:end="483:38"><name pos:start="483:27" pos:end="483:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="483:41" pos:end="483:79"><expr pos:start="483:41" pos:end="483:79"><literal type="string" pos:start="483:41" pos:end="483:79">"Error setting realtime property: %d\n"</literal></expr></argument>, <argument pos:start="483:82" pos:end="483:87"><expr pos:start="483:82" pos:end="483:87"><name pos:start="483:82" pos:end="483:87">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="491:5" pos:end="491:71"><expr pos:start="491:5" pos:end="491:70"><name pos:start="491:5" pos:end="491:10">status</name> <operator pos:start="491:12" pos:end="491:12">=</operator> <call pos:start="491:14" pos:end="491:70"><name pos:start="491:14" pos:end="491:54">VTCompressionSessionPrepareToEncodeFrames</name><argument_list pos:start="491:55" pos:end="491:70">(<argument pos:start="491:56" pos:end="491:69"><expr pos:start="491:56" pos:end="491:69"><name pos:start="491:56" pos:end="491:69"><name pos:start="491:56" pos:end="491:60">vtctx</name><operator pos:start="491:61" pos:end="491:62">-&gt;</operator><name pos:start="491:63" pos:end="491:69">session</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="493:5" pos:end="499:5"><if pos:start="493:5" pos:end="499:5">if <condition pos:start="493:8" pos:end="493:15">(<expr pos:start="493:9" pos:end="493:14"><name pos:start="493:9" pos:end="493:14">status</name></expr>)</condition> <block pos:start="493:17" pos:end="499:5">{<block_content pos:start="495:9" pos:end="497:32">

        <expr_stmt pos:start="495:9" pos:end="495:83"><expr pos:start="495:9" pos:end="495:82"><call pos:start="495:9" pos:end="495:82"><name pos:start="495:9" pos:end="495:14">av_log</name><argument_list pos:start="495:15" pos:end="495:82">(<argument pos:start="495:16" pos:end="495:20"><expr pos:start="495:16" pos:end="495:20"><name pos:start="495:16" pos:end="495:20">avctx</name></expr></argument>, <argument pos:start="495:23" pos:end="495:34"><expr pos:start="495:23" pos:end="495:34"><name pos:start="495:23" pos:end="495:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="495:37" pos:end="495:73"><expr pos:start="495:37" pos:end="495:73"><literal type="string" pos:start="495:37" pos:end="495:73">"Error: cannot prepare encoder: %d\n"</literal></expr></argument>, <argument pos:start="495:76" pos:end="495:81"><expr pos:start="495:76" pos:end="495:81"><name pos:start="495:76" pos:end="495:81">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="497:9" pos:end="497:32">return <expr pos:start="497:16" pos:end="497:31"><name pos:start="497:16" pos:end="497:31">AVERROR_EXTERNAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="503:5" pos:end="503:13">return <expr pos:start="503:12" pos:end="503:12"><literal type="number" pos:start="503:12" pos:end="503:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
