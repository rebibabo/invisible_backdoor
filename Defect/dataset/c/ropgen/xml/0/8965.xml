<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8965.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">test_visitor_in_int</name><parameter_list pos:start="1:32" pos:end="3:51">(<parameter pos:start="1:33" pos:end="1:58"><decl pos:start="1:33" pos:end="1:58"><type pos:start="1:33" pos:end="1:58"><name pos:start="1:33" pos:end="1:52">TestInputVisitorData</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">data</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:42">void</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:50">unused</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="21:1">{<block_content pos:start="7:5" pos:end="19:36">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">res</name> <init pos:start="7:17" pos:end="7:19">= <expr pos:start="7:19" pos:end="7:19"><literal type="number" pos:start="7:19" pos:end="7:19">0</literal></expr></init></decl>, <decl pos:start="7:22" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:22" pos:end="7:26">value</name> <init pos:start="7:28" pos:end="7:32">= <expr pos:start="7:30" pos:end="7:32"><operator pos:start="7:30" pos:end="7:30">-</operator><literal type="number" pos:start="7:31" pos:end="7:32">42</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">Visitor</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">v</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:57"><expr pos:start="13:5" pos:end="13:56"><name pos:start="13:5" pos:end="13:5">v</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <call pos:start="13:9" pos:end="13:56"><name pos:start="13:9" pos:end="13:31">visitor_input_test_init</name><argument_list pos:start="13:32" pos:end="13:56">(<argument pos:start="13:33" pos:end="13:36"><expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">data</name></expr></argument>, <argument pos:start="13:39" pos:end="13:48"><expr pos:start="13:39" pos:end="13:48"><literal type="string" pos:start="13:39" pos:end="13:41">"%"</literal> <name pos:start="13:43" pos:end="13:48">PRId64</name></expr></argument>, <argument pos:start="13:51" pos:end="13:55"><expr pos:start="13:51" pos:end="13:55"><name pos:start="13:51" pos:end="13:55">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:48"><expr pos:start="17:5" pos:end="17:47"><call pos:start="17:5" pos:end="17:47"><name pos:start="17:5" pos:end="17:18">visit_type_int</name><argument_list pos:start="17:19" pos:end="17:47">(<argument pos:start="17:20" pos:end="17:20"><expr pos:start="17:20" pos:end="17:20"><name pos:start="17:20" pos:end="17:20">v</name></expr></argument>, <argument pos:start="17:23" pos:end="17:26"><expr pos:start="17:23" pos:end="17:26"><name pos:start="17:23" pos:end="17:26">NULL</name></expr></argument>, <argument pos:start="17:29" pos:end="17:32"><expr pos:start="17:29" pos:end="17:32"><operator pos:start="17:29" pos:end="17:29">&amp;</operator><name pos:start="17:30" pos:end="17:32">res</name></expr></argument>, <argument pos:start="17:35" pos:end="17:46"><expr pos:start="17:35" pos:end="17:46"><operator pos:start="17:35" pos:end="17:35">&amp;</operator><name pos:start="17:36" pos:end="17:46">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><call pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:19">g_assert_cmpint</name><argument_list pos:start="19:20" pos:end="19:35">(<argument pos:start="19:21" pos:end="19:23"><expr pos:start="19:21" pos:end="19:23"><name pos:start="19:21" pos:end="19:23">res</name></expr></argument>, <argument pos:start="19:26" pos:end="19:27"><expr pos:start="19:26" pos:end="19:27"><operator pos:start="19:26" pos:end="19:27">==</operator></expr></argument>, <argument pos:start="19:30" pos:end="19:34"><expr pos:start="19:30" pos:end="19:34"><name pos:start="19:30" pos:end="19:34">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
