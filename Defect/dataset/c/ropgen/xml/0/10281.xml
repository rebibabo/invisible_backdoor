<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10281.c" pos:tabs="8"><function pos:start="1:1" pos:end="13:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">scsi_device_unrealize</name><parameter_list pos:start="1:34" pos:end="1:62">(<parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:44">SCSIDevice</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:54">Error</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier><modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="13:1">{<block_content pos:start="5:5" pos:end="11:5">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:50"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">SCSIDeviceClass</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:23">sc</name> <init pos:start="5:25" pos:end="5:50">= <expr pos:start="5:27" pos:end="5:50"><call pos:start="5:27" pos:end="5:50"><name pos:start="5:27" pos:end="5:47">SCSI_DEVICE_GET_CLASS</name><argument_list pos:start="5:48" pos:end="5:50">(<argument pos:start="5:49" pos:end="5:49"><expr pos:start="5:49" pos:end="5:49"><name pos:start="5:49" pos:end="5:49">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="11:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:22">(<expr pos:start="7:9" pos:end="7:21"><name pos:start="7:9" pos:end="7:21"><name pos:start="7:9" pos:end="7:10">sc</name><operator pos:start="7:11" pos:end="7:12">-&gt;</operator><name pos:start="7:13" pos:end="7:21">unrealize</name></name></expr>)</condition> <block pos:start="7:24" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:31">

        <expr_stmt pos:start="9:9" pos:end="9:31"><expr pos:start="9:9" pos:end="9:30"><call pos:start="9:9" pos:end="9:30"><name pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:10">sc</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:21">unrealize</name></name><argument_list pos:start="9:22" pos:end="9:30">(<argument pos:start="9:23" pos:end="9:23"><expr pos:start="9:23" pos:end="9:23"><name pos:start="9:23" pos:end="9:23">s</name></expr></argument>, <argument pos:start="9:26" pos:end="9:29"><expr pos:start="9:26" pos:end="9:29"><name pos:start="9:26" pos:end="9:29">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
