<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26483.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">pci_basic</name><parameter_list pos:start="1:22" pos:end="1:41">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:35">gconstpointer</name></type> <name pos:start="1:37" pos:end="1:40">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:15">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">QVirtioPCIDevice</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">QPCIBus</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">bus</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">QVirtQueuePCI</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">tx</name></decl>, <decl pos:start="9:24" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:19"><modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:26">rx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">QGuestAllocator</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:26">alloc</name></decl>;</decl_stmt>

    <function_decl pos:start="13:5" pos:end="21:37"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">void</name></type> (<modifier pos:start="13:11" pos:end="13:11">*</modifier><name pos:start="13:12" pos:end="13:15">func</name>) <parameter_list pos:start="13:18" pos:end="21:29">(<parameter pos:start="13:19" pos:end="13:36"><decl pos:start="13:19" pos:end="13:36"><type pos:start="13:19" pos:end="13:36"><name pos:start="13:19" pos:end="13:31">QVirtioDevice</name> <modifier pos:start="13:33" pos:end="13:33">*</modifier></type><name pos:start="13:34" pos:end="13:36">dev</name></decl></parameter>,

                  <parameter pos:start="15:19" pos:end="15:40"><decl pos:start="15:19" pos:end="15:40"><type pos:start="15:19" pos:end="15:40"><name pos:start="15:19" pos:end="15:33">QGuestAllocator</name> <modifier pos:start="15:35" pos:end="15:35">*</modifier></type><name pos:start="15:36" pos:end="15:40">alloc</name></decl></parameter>,

                  <parameter pos:start="17:19" pos:end="17:33"><decl pos:start="17:19" pos:end="17:33"><type pos:start="17:19" pos:end="17:33"><name pos:start="17:19" pos:end="17:28">QVirtQueue</name> <modifier pos:start="17:30" pos:end="17:30">*</modifier></type><name pos:start="17:31" pos:end="17:33">rvq</name></decl></parameter>,

                  <parameter pos:start="19:19" pos:end="19:33"><decl pos:start="19:19" pos:end="19:33"><type pos:start="19:19" pos:end="19:33"><name pos:start="19:19" pos:end="19:28">QVirtQueue</name> <modifier pos:start="19:30" pos:end="19:30">*</modifier></type><name pos:start="19:31" pos:end="19:33">tvq</name></decl></parameter>,

                  <parameter pos:start="21:19" pos:end="21:28"><decl pos:start="21:19" pos:end="21:28"><type pos:start="21:19" pos:end="21:28"><name pos:start="21:19" pos:end="21:21">int</name></type> <name pos:start="21:23" pos:end="21:28">socket</name></decl></parameter>)</parameter_list> <init pos:start="21:31" pos:end="21:36">= <expr pos:start="21:33" pos:end="21:36"><name pos:start="21:33" pos:end="21:36">data</name></expr></init>;</function_decl>

    <decl_stmt pos:start="23:5" pos:end="23:19"><decl pos:start="23:5" pos:end="23:13"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:10">sv</name><index pos:start="23:11" pos:end="23:13">[<expr pos:start="23:12" pos:end="23:12"><literal type="number" pos:start="23:12" pos:end="23:12">2</literal></expr>]</index></name></decl>, <decl pos:start="23:16" pos:end="23:18"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:16" pos:end="23:18">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:50"><expr pos:start="27:5" pos:end="27:49"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:49"><name pos:start="27:11" pos:end="27:20">socketpair</name><argument_list pos:start="27:21" pos:end="27:49">(<argument pos:start="27:22" pos:end="27:28"><expr pos:start="27:22" pos:end="27:28"><name pos:start="27:22" pos:end="27:28">PF_UNIX</name></expr></argument>, <argument pos:start="27:31" pos:end="27:41"><expr pos:start="27:31" pos:end="27:41"><name pos:start="27:31" pos:end="27:41">SOCK_STREAM</name></expr></argument>, <argument pos:start="27:44" pos:end="27:44"><expr pos:start="27:44" pos:end="27:44"><literal type="number" pos:start="27:44" pos:end="27:44">0</literal></expr></argument>, <argument pos:start="27:47" pos:end="27:48"><expr pos:start="27:47" pos:end="27:48"><name pos:start="27:47" pos:end="27:48">sv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><call pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:19">g_assert_cmpint</name><argument_list pos:start="29:20" pos:end="29:32">(<argument pos:start="29:21" pos:end="29:23"><expr pos:start="29:21" pos:end="29:23"><name pos:start="29:21" pos:end="29:23">ret</name></expr></argument>, <argument pos:start="29:26" pos:end="29:27"><expr pos:start="29:26" pos:end="29:27"><operator pos:start="29:26" pos:end="29:27">!=</operator></expr></argument>, <argument pos:start="29:30" pos:end="29:31"><expr pos:start="29:30" pos:end="29:31"><operator pos:start="29:30" pos:end="29:30">-</operator><literal type="number" pos:start="29:31" pos:end="29:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:32"><expr pos:start="33:5" pos:end="33:31"><name pos:start="33:5" pos:end="33:7">bus</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:31"><name pos:start="33:11" pos:end="33:24">pci_test_start</name><argument_list pos:start="33:25" pos:end="33:31">(<argument pos:start="33:26" pos:end="33:30"><expr pos:start="33:26" pos:end="33:30"><name pos:start="33:26" pos:end="33:30"><name pos:start="33:26" pos:end="33:27">sv</name><index pos:start="33:28" pos:end="33:30">[<expr pos:start="33:29" pos:end="33:29"><literal type="number" pos:start="33:29" pos:end="33:29">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:45"><expr pos:start="35:5" pos:end="35:44"><name pos:start="35:5" pos:end="35:7">dev</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:44"><name pos:start="35:11" pos:end="35:29">virtio_net_pci_init</name><argument_list pos:start="35:30" pos:end="35:44">(<argument pos:start="35:31" pos:end="35:33"><expr pos:start="35:31" pos:end="35:33"><name pos:start="35:31" pos:end="35:33">bus</name></expr></argument>, <argument pos:start="35:36" pos:end="35:43"><expr pos:start="35:36" pos:end="35:43"><name pos:start="35:36" pos:end="35:43">PCI_SLOT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:9">alloc</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <call pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:25">pc_alloc_init</name><argument_list pos:start="39:26" pos:end="39:27">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:65"><expr pos:start="41:5" pos:end="41:64"><name pos:start="41:5" pos:end="41:6">rx</name> <operator pos:start="41:8" pos:end="41:8">=</operator> <operator pos:start="41:10" pos:end="41:10">(</operator><name pos:start="41:11" pos:end="41:23">QVirtQueuePCI</name> <operator pos:start="41:25" pos:end="41:25">*</operator><operator pos:start="41:26" pos:end="41:26">)</operator><call pos:start="41:27" pos:end="41:64"><name pos:start="41:27" pos:end="41:42">qvirtqueue_setup</name><argument_list pos:start="41:43" pos:end="41:64">(<argument pos:start="41:44" pos:end="41:53"><expr pos:start="41:44" pos:end="41:53"><operator pos:start="41:44" pos:end="41:44">&amp;</operator><name pos:start="41:45" pos:end="41:53"><name pos:start="41:45" pos:end="41:47">dev</name><operator pos:start="41:48" pos:end="41:49">-&gt;</operator><name pos:start="41:50" pos:end="41:53">vdev</name></name></expr></argument>, <argument pos:start="41:56" pos:end="41:60"><expr pos:start="41:56" pos:end="41:60"><name pos:start="41:56" pos:end="41:60">alloc</name></expr></argument>, <argument pos:start="41:63" pos:end="41:63"><expr pos:start="41:63" pos:end="41:63"><literal type="number" pos:start="41:63" pos:end="41:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:65"><expr pos:start="43:5" pos:end="43:64"><name pos:start="43:5" pos:end="43:6">tx</name> <operator pos:start="43:8" pos:end="43:8">=</operator> <operator pos:start="43:10" pos:end="43:10">(</operator><name pos:start="43:11" pos:end="43:23">QVirtQueuePCI</name> <operator pos:start="43:25" pos:end="43:25">*</operator><operator pos:start="43:26" pos:end="43:26">)</operator><call pos:start="43:27" pos:end="43:64"><name pos:start="43:27" pos:end="43:42">qvirtqueue_setup</name><argument_list pos:start="43:43" pos:end="43:64">(<argument pos:start="43:44" pos:end="43:53"><expr pos:start="43:44" pos:end="43:53"><operator pos:start="43:44" pos:end="43:44">&amp;</operator><name pos:start="43:45" pos:end="43:53"><name pos:start="43:45" pos:end="43:47">dev</name><operator pos:start="43:48" pos:end="43:49">-&gt;</operator><name pos:start="43:50" pos:end="43:53">vdev</name></name></expr></argument>, <argument pos:start="43:56" pos:end="43:60"><expr pos:start="43:56" pos:end="43:60"><name pos:start="43:56" pos:end="43:60">alloc</name></expr></argument>, <argument pos:start="43:63" pos:end="43:63"><expr pos:start="43:63" pos:end="43:63"><literal type="number" pos:start="43:63" pos:end="43:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:28"><expr pos:start="47:5" pos:end="47:27"><call pos:start="47:5" pos:end="47:27"><name pos:start="47:5" pos:end="47:15">driver_init</name><argument_list pos:start="47:16" pos:end="47:27">(<argument pos:start="47:17" pos:end="47:26"><expr pos:start="47:17" pos:end="47:26"><operator pos:start="47:17" pos:end="47:17">&amp;</operator><name pos:start="47:18" pos:end="47:26"><name pos:start="47:18" pos:end="47:20">dev</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:26">vdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:53"><expr pos:start="49:5" pos:end="49:52"><call pos:start="49:5" pos:end="49:52"><name pos:start="49:5" pos:end="49:8">func</name><argument_list pos:start="49:9" pos:end="49:52">(<argument pos:start="49:10" pos:end="49:19"><expr pos:start="49:10" pos:end="49:19"><operator pos:start="49:10" pos:end="49:10">&amp;</operator><name pos:start="49:11" pos:end="49:19"><name pos:start="49:11" pos:end="49:13">dev</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:19">vdev</name></name></expr></argument>, <argument pos:start="49:22" pos:end="49:26"><expr pos:start="49:22" pos:end="49:26"><name pos:start="49:22" pos:end="49:26">alloc</name></expr></argument>, <argument pos:start="49:29" pos:end="49:35"><expr pos:start="49:29" pos:end="49:35"><operator pos:start="49:29" pos:end="49:29">&amp;</operator><name pos:start="49:30" pos:end="49:35"><name pos:start="49:30" pos:end="49:31">rx</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:35">vq</name></name></expr></argument>, <argument pos:start="49:38" pos:end="49:44"><expr pos:start="49:38" pos:end="49:44"><operator pos:start="49:38" pos:end="49:38">&amp;</operator><name pos:start="49:39" pos:end="49:44"><name pos:start="49:39" pos:end="49:40">tx</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:44">vq</name></name></expr></argument>, <argument pos:start="49:47" pos:end="49:51"><expr pos:start="49:47" pos:end="49:51"><name pos:start="49:47" pos:end="49:51"><name pos:start="49:47" pos:end="49:48">sv</name><index pos:start="49:49" pos:end="49:51">[<expr pos:start="49:50" pos:end="49:50"><literal type="number" pos:start="49:50" pos:end="49:50">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:18">/* End test */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:17"><expr pos:start="55:5" pos:end="55:16"><call pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:9">close</name><argument_list pos:start="55:10" pos:end="55:16">(<argument pos:start="55:11" pos:end="55:15"><expr pos:start="55:11" pos:end="55:15"><name pos:start="55:11" pos:end="55:15"><name pos:start="55:11" pos:end="55:12">sv</name><index pos:start="55:13" pos:end="55:15">[<expr pos:start="55:14" pos:end="55:14"><literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:54"><expr pos:start="57:5" pos:end="57:53"><call pos:start="57:5" pos:end="57:53"><name pos:start="57:5" pos:end="57:22">qvirtqueue_cleanup</name><argument_list pos:start="57:23" pos:end="57:53">(<argument pos:start="57:24" pos:end="57:36"><expr pos:start="57:24" pos:end="57:36"><name pos:start="57:24" pos:end="57:36"><name pos:start="57:24" pos:end="57:26">dev</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:32">vdev</name><operator pos:start="57:33" pos:end="57:33">.</operator><name pos:start="57:34" pos:end="57:36">bus</name></name></expr></argument>, <argument pos:start="57:39" pos:end="57:45"><expr pos:start="57:39" pos:end="57:45"><operator pos:start="57:39" pos:end="57:39">&amp;</operator><name pos:start="57:40" pos:end="57:45"><name pos:start="57:40" pos:end="57:41">tx</name><operator pos:start="57:42" pos:end="57:43">-&gt;</operator><name pos:start="57:44" pos:end="57:45">vq</name></name></expr></argument>, <argument pos:start="57:48" pos:end="57:52"><expr pos:start="57:48" pos:end="57:52"><name pos:start="57:48" pos:end="57:52">alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:54"><expr pos:start="59:5" pos:end="59:53"><call pos:start="59:5" pos:end="59:53"><name pos:start="59:5" pos:end="59:22">qvirtqueue_cleanup</name><argument_list pos:start="59:23" pos:end="59:53">(<argument pos:start="59:24" pos:end="59:36"><expr pos:start="59:24" pos:end="59:36"><name pos:start="59:24" pos:end="59:36"><name pos:start="59:24" pos:end="59:26">dev</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:32">vdev</name><operator pos:start="59:33" pos:end="59:33">.</operator><name pos:start="59:34" pos:end="59:36">bus</name></name></expr></argument>, <argument pos:start="59:39" pos:end="59:45"><expr pos:start="59:39" pos:end="59:45"><operator pos:start="59:39" pos:end="59:39">&amp;</operator><name pos:start="59:40" pos:end="59:45"><name pos:start="59:40" pos:end="59:41">rx</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:45">vq</name></name></expr></argument>, <argument pos:start="59:48" pos:end="59:52"><expr pos:start="59:48" pos:end="59:52"><name pos:start="59:48" pos:end="59:52">alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:27"><expr pos:start="61:5" pos:end="61:26"><call pos:start="61:5" pos:end="61:26"><name pos:start="61:5" pos:end="61:19">pc_alloc_uninit</name><argument_list pos:start="61:20" pos:end="61:26">(<argument pos:start="61:21" pos:end="61:25"><expr pos:start="61:21" pos:end="61:25"><name pos:start="61:21" pos:end="61:25">alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:36"><expr pos:start="63:5" pos:end="63:35"><call pos:start="63:5" pos:end="63:35"><name pos:start="63:5" pos:end="63:30">qvirtio_pci_device_disable</name><argument_list pos:start="63:31" pos:end="63:35">(<argument pos:start="63:32" pos:end="63:34"><expr pos:start="63:32" pos:end="63:34"><name pos:start="63:32" pos:end="63:34">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:22"><expr pos:start="65:5" pos:end="65:21"><call pos:start="65:5" pos:end="65:21"><name pos:start="65:5" pos:end="65:10">g_free</name><argument_list pos:start="65:11" pos:end="65:21">(<argument pos:start="65:12" pos:end="65:20"><expr pos:start="65:12" pos:end="65:20"><name pos:start="65:12" pos:end="65:20"><name pos:start="65:12" pos:end="65:14">dev</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:20">pdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:16"><expr pos:start="67:5" pos:end="67:15"><call pos:start="67:5" pos:end="67:15"><name pos:start="67:5" pos:end="67:10">g_free</name><argument_list pos:start="67:11" pos:end="67:15">(<argument pos:start="67:12" pos:end="67:14"><expr pos:start="67:12" pos:end="67:14"><name pos:start="67:12" pos:end="67:14">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:22"><expr pos:start="69:5" pos:end="69:21"><call pos:start="69:5" pos:end="69:21"><name pos:start="69:5" pos:end="69:16">qpci_free_pc</name><argument_list pos:start="69:17" pos:end="69:21">(<argument pos:start="69:18" pos:end="69:20"><expr pos:start="69:18" pos:end="69:20"><name pos:start="69:18" pos:end="69:20">bus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:15"><expr pos:start="71:5" pos:end="71:14"><call pos:start="71:5" pos:end="71:14"><name pos:start="71:5" pos:end="71:12">test_end</name><argument_list pos:start="71:13" pos:end="71:14">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
