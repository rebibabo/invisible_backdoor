<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1560.c" pos:tabs="8"><function pos:start="1:1" pos:end="179:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">mkv_write_block</name><parameter_list pos:start="1:28" pos:end="3:75">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:63"><decl pos:start="1:49" pos:end="1:63"><type pos:start="1:49" pos:end="1:63"><name pos:start="1:49" pos:end="1:59">AVIOContext</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">pb</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:48"><decl pos:start="3:29" pos:end="3:48"><type pos:start="3:29" pos:end="3:48"><name pos:start="3:29" pos:end="3:36">unsigned</name> <name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:48">blockid</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:63"><decl pos:start="3:51" pos:end="3:63"><type pos:start="3:51" pos:end="3:63"><name pos:start="3:51" pos:end="3:58">AVPacket</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:63">pkt</name></decl></parameter>, <parameter pos:start="3:66" pos:end="3:74"><decl pos:start="3:66" pos:end="3:74"><type pos:start="3:66" pos:end="3:74"><name pos:start="3:66" pos:end="3:68">int</name></type> <name pos:start="3:70" pos:end="3:74">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="179:1">{<block_content pos:start="7:5" pos:end="177:5">

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">MatroskaMuxContext</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:27">mkv</name> <init pos:start="7:29" pos:end="7:42">= <expr pos:start="7:31" pos:end="7:42"><name pos:start="7:31" pos:end="7:42"><name pos:start="7:31" pos:end="7:31">s</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:65"><decl pos:start="9:5" pos:end="9:64"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:25">codec</name> <init pos:start="9:27" pos:end="9:64">= <expr pos:start="9:29" pos:end="9:64"><name pos:start="9:29" pos:end="9:57"><name pos:start="9:29" pos:end="9:29">s</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:38">streams</name><index pos:start="9:39" pos:end="9:57">[<expr pos:start="9:40" pos:end="9:56"><name pos:start="9:40" pos:end="9:56"><name pos:start="9:40" pos:end="9:42">pkt</name><operator pos:start="9:43" pos:end="9:44">-&gt;</operator><name pos:start="9:45" pos:end="9:56">stream_index</name></name></expr>]</index></name><operator pos:start="9:58" pos:end="9:59">-&gt;</operator><name pos:start="9:60" pos:end="9:64">codec</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:17">data</name> <init pos:start="11:19" pos:end="11:24">= <expr pos:start="11:21" pos:end="11:24"><name pos:start="11:21" pos:end="11:24">NULL</name></expr></init></decl>, <decl pos:start="11:27" pos:end="11:43"><type ref="prev" pos:start="11:5" pos:end="11:13"><modifier pos:start="11:27" pos:end="11:27">*</modifier></type><name pos:start="11:28" pos:end="11:36">side_data</name> <init pos:start="11:38" pos:end="11:43">= <expr pos:start="11:40" pos:end="11:43"><name pos:start="11:40" pos:end="11:43">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:57"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">offset</name> <init pos:start="13:16" pos:end="13:18">= <expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></init></decl>, <decl pos:start="13:21" pos:end="13:36"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:24">size</name> <init pos:start="13:26" pos:end="13:36">= <expr pos:start="13:28" pos:end="13:36"><name pos:start="13:28" pos:end="13:36"><name pos:start="13:28" pos:end="13:30">pkt</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:36">size</name></name></expr></init></decl>, <decl pos:start="13:39" pos:end="13:56"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:39" pos:end="13:52">side_data_size</name> <init pos:start="13:54" pos:end="13:56">= <expr pos:start="13:56" pos:end="13:56"><literal type="number" pos:start="13:56" pos:end="13:56">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:80"><decl pos:start="15:5" pos:end="15:79"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:14">ts</name> <init pos:start="15:16" pos:end="15:79">= <expr pos:start="15:18" pos:end="15:79"><ternary pos:start="15:18" pos:end="15:79"><condition pos:start="15:18" pos:end="15:59"><expr pos:start="15:18" pos:end="15:57"><name pos:start="15:18" pos:end="15:47"><name pos:start="15:18" pos:end="15:20">mkv</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:28">tracks</name><index pos:start="15:29" pos:end="15:47">[<expr pos:start="15:30" pos:end="15:46"><name pos:start="15:30" pos:end="15:46"><name pos:start="15:30" pos:end="15:32">pkt</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:46">stream_index</name></name></expr>]</index></name><operator pos:start="15:48" pos:end="15:48">.</operator><name pos:start="15:49" pos:end="15:57">write_dts</name></expr> ?</condition><then pos:start="15:61" pos:end="15:68"> <expr pos:start="15:61" pos:end="15:68"><name pos:start="15:61" pos:end="15:68"><name pos:start="15:61" pos:end="15:63">pkt</name><operator pos:start="15:64" pos:end="15:65">-&gt;</operator><name pos:start="15:66" pos:end="15:68">dts</name></name></expr> </then><else pos:start="15:70" pos:end="15:79">: <expr pos:start="15:72" pos:end="15:79"><name pos:start="15:72" pos:end="15:79"><name pos:start="15:72" pos:end="15:74">pkt</name><operator pos:start="15:75" pos:end="15:76">-&gt;</operator><name pos:start="15:77" pos:end="15:79">pts</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:30"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:26">additional_id</name> <init pos:start="17:28" pos:end="17:30">= <expr pos:start="17:30" pos:end="17:30"><literal type="number" pos:start="17:30" pos:end="17:30">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:32"><decl pos:start="19:5" pos:end="19:31"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int64_t</name></type> <name pos:start="19:13" pos:end="19:27">discard_padding</name> <init pos:start="19:29" pos:end="19:31">= <expr pos:start="19:31" pos:end="19:31"><literal type="number" pos:start="19:31" pos:end="19:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:57"><decl pos:start="21:5" pos:end="21:27"><type pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:15">ebml_master</name></type> <name pos:start="21:17" pos:end="21:27">block_group</name></decl>, <decl pos:start="21:30" pos:end="21:44"><type ref="prev" pos:start="21:5" pos:end="21:15"/><name pos:start="21:30" pos:end="21:44">block_additions</name></decl>, <decl pos:start="21:47" pos:end="21:56"><type ref="prev" pos:start="21:5" pos:end="21:15"/><name pos:start="21:47" pos:end="21:56">block_more</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="29:79"><expr pos:start="25:5" pos:end="29:78"><call pos:start="25:5" pos:end="29:78"><name pos:start="25:5" pos:end="25:10">av_log</name><argument_list pos:start="25:11" pos:end="29:78">(<argument pos:start="25:12" pos:end="25:12"><expr pos:start="25:12" pos:end="25:12"><name pos:start="25:12" pos:end="25:12">s</name></expr></argument>, <argument pos:start="25:15" pos:end="25:26"><expr pos:start="25:15" pos:end="25:26"><name pos:start="25:15" pos:end="25:26">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="25:29" pos:end="27:70"><expr pos:start="25:29" pos:end="27:70"><literal type="string" pos:start="25:29" pos:end="25:55">"Writing block at offset %"</literal> <name pos:start="25:57" pos:end="25:62">PRIu64</name> <literal type="string" pos:start="25:64" pos:end="25:76">", size %d, "</literal>

           <literal type="string" pos:start="27:12" pos:end="27:18">"pts %"</literal> <name pos:start="27:20" pos:end="27:25">PRId64</name> <literal type="string" pos:start="27:27" pos:end="27:35">", dts %"</literal> <name pos:start="27:37" pos:end="27:42">PRId64</name> <literal type="string" pos:start="27:44" pos:end="27:70">", duration %d, flags %d\n"</literal></expr></argument>,

           <argument pos:start="29:12" pos:end="29:24"><expr pos:start="29:12" pos:end="29:24"><call pos:start="29:12" pos:end="29:24"><name pos:start="29:12" pos:end="29:20">avio_tell</name><argument_list pos:start="29:21" pos:end="29:24">(<argument pos:start="29:22" pos:end="29:23"><expr pos:start="29:22" pos:end="29:23"><name pos:start="29:22" pos:end="29:23">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:27" pos:end="29:35"><expr pos:start="29:27" pos:end="29:35"><name pos:start="29:27" pos:end="29:35"><name pos:start="29:27" pos:end="29:29">pkt</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:35">size</name></name></expr></argument>, <argument pos:start="29:38" pos:end="29:45"><expr pos:start="29:38" pos:end="29:45"><name pos:start="29:38" pos:end="29:45"><name pos:start="29:38" pos:end="29:40">pkt</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:45">pts</name></name></expr></argument>, <argument pos:start="29:48" pos:end="29:55"><expr pos:start="29:48" pos:end="29:55"><name pos:start="29:48" pos:end="29:55"><name pos:start="29:48" pos:end="29:50">pkt</name><operator pos:start="29:51" pos:end="29:52">-&gt;</operator><name pos:start="29:53" pos:end="29:55">dts</name></name></expr></argument>, <argument pos:start="29:58" pos:end="29:70"><expr pos:start="29:58" pos:end="29:70"><name pos:start="29:58" pos:end="29:70"><name pos:start="29:58" pos:end="29:60">pkt</name><operator pos:start="29:61" pos:end="29:62">-&gt;</operator><name pos:start="29:63" pos:end="29:70">duration</name></name></expr></argument>, <argument pos:start="29:73" pos:end="29:77"><expr pos:start="29:73" pos:end="29:77"><name pos:start="29:73" pos:end="29:77">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="59:25"><if pos:start="31:5" pos:end="35:60">if <condition pos:start="31:8" pos:end="33:75">(<expr pos:start="31:9" pos:end="33:74"><name pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:13">codec</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:23">codec_id</name></name> <operator pos:start="31:25" pos:end="31:26">==</operator> <name pos:start="31:28" pos:end="31:43">AV_CODEC_ID_H264</name> <operator pos:start="31:45" pos:end="31:46">&amp;&amp;</operator> <name pos:start="31:48" pos:end="31:68"><name pos:start="31:48" pos:end="31:52">codec</name><operator pos:start="31:53" pos:end="31:54">-&gt;</operator><name pos:start="31:55" pos:end="31:68">extradata_size</name></name> <operator pos:start="31:70" pos:end="31:70">&gt;</operator> <literal type="number" pos:start="31:72" pos:end="31:72">0</literal> <operator pos:start="31:74" pos:end="31:75">&amp;&amp;</operator>

        <operator pos:start="33:9" pos:end="33:9">(</operator><call pos:start="33:10" pos:end="33:34"><name pos:start="33:10" pos:end="33:16">AV_RB24</name><argument_list pos:start="33:17" pos:end="33:34">(<argument pos:start="33:18" pos:end="33:33"><expr pos:start="33:18" pos:end="33:33"><name pos:start="33:18" pos:end="33:33"><name pos:start="33:18" pos:end="33:22">codec</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:33">extradata</name></name></expr></argument>)</argument_list></call> <operator pos:start="33:36" pos:end="33:37">==</operator> <literal type="number" pos:start="33:39" pos:end="33:39">1</literal> <operator pos:start="33:41" pos:end="33:42">||</operator> <call pos:start="33:44" pos:end="33:68"><name pos:start="33:44" pos:end="33:50">AV_RB32</name><argument_list pos:start="33:51" pos:end="33:68">(<argument pos:start="33:52" pos:end="33:67"><expr pos:start="33:52" pos:end="33:67"><name pos:start="33:52" pos:end="33:67"><name pos:start="33:52" pos:end="33:56">codec</name><operator pos:start="33:57" pos:end="33:58">-&gt;</operator><name pos:start="33:59" pos:end="33:67">extradata</name></name></expr></argument>)</argument_list></call> <operator pos:start="33:70" pos:end="33:71">==</operator> <literal type="number" pos:start="33:73" pos:end="33:73">1</literal><operator pos:start="33:74" pos:end="33:74">)</operator></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:60"><block_content pos:start="35:9" pos:end="35:60">

        <expr_stmt pos:start="35:9" pos:end="35:60"><expr pos:start="35:9" pos:end="35:59"><call pos:start="35:9" pos:end="35:59"><name pos:start="35:9" pos:end="35:34">ff_avc_parse_nal_units_buf</name><argument_list pos:start="35:35" pos:end="35:59">(<argument pos:start="35:36" pos:end="35:44"><expr pos:start="35:36" pos:end="35:44"><name pos:start="35:36" pos:end="35:44"><name pos:start="35:36" pos:end="35:38">pkt</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:44">data</name></name></expr></argument>, <argument pos:start="35:47" pos:end="35:51"><expr pos:start="35:47" pos:end="35:51"><operator pos:start="35:47" pos:end="35:47">&amp;</operator><name pos:start="35:48" pos:end="35:51">data</name></expr></argument>, <argument pos:start="35:54" pos:end="35:58"><expr pos:start="35:54" pos:end="35:58"><operator pos:start="35:54" pos:end="35:54">&amp;</operator><name pos:start="35:55" pos:end="35:58">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="37:5" pos:end="43:65">else if <condition pos:start="37:13" pos:end="39:80">(<expr pos:start="37:14" pos:end="39:79"><name pos:start="37:14" pos:end="37:28"><name pos:start="37:14" pos:end="37:18">codec</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:28">codec_id</name></name> <operator pos:start="37:30" pos:end="37:31">==</operator> <name pos:start="37:33" pos:end="37:48">AV_CODEC_ID_HEVC</name> <operator pos:start="37:50" pos:end="37:51">&amp;&amp;</operator> <name pos:start="37:53" pos:end="37:73"><name pos:start="37:53" pos:end="37:57">codec</name><operator pos:start="37:58" pos:end="37:59">-&gt;</operator><name pos:start="37:60" pos:end="37:73">extradata_size</name></name> <operator pos:start="37:75" pos:end="37:75">&gt;</operator> <literal type="number" pos:start="37:77" pos:end="37:77">6</literal> <operator pos:start="37:79" pos:end="37:80">&amp;&amp;</operator>

             <operator pos:start="39:14" pos:end="39:14">(</operator><call pos:start="39:15" pos:end="39:39"><name pos:start="39:15" pos:end="39:21">AV_RB24</name><argument_list pos:start="39:22" pos:end="39:39">(<argument pos:start="39:23" pos:end="39:38"><expr pos:start="39:23" pos:end="39:38"><name pos:start="39:23" pos:end="39:38"><name pos:start="39:23" pos:end="39:27">codec</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:38">extradata</name></name></expr></argument>)</argument_list></call> <operator pos:start="39:41" pos:end="39:42">==</operator> <literal type="number" pos:start="39:44" pos:end="39:44">1</literal> <operator pos:start="39:46" pos:end="39:47">||</operator> <call pos:start="39:49" pos:end="39:73"><name pos:start="39:49" pos:end="39:55">AV_RB32</name><argument_list pos:start="39:56" pos:end="39:73">(<argument pos:start="39:57" pos:end="39:72"><expr pos:start="39:57" pos:end="39:72"><name pos:start="39:57" pos:end="39:72"><name pos:start="39:57" pos:end="39:61">codec</name><operator pos:start="39:62" pos:end="39:63">-&gt;</operator><name pos:start="39:64" pos:end="39:72">extradata</name></name></expr></argument>)</argument_list></call> <operator pos:start="39:75" pos:end="39:76">==</operator> <literal type="number" pos:start="39:78" pos:end="39:78">1</literal><operator pos:start="39:79" pos:end="39:79">)</operator></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:65"><block_content pos:start="43:9" pos:end="43:65">

        <comment type="block" pos:start="41:9" pos:end="41:78">/* extradata is Annex B, assume the bitstream is too and convert it */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:65"><expr pos:start="43:9" pos:end="43:64"><call pos:start="43:9" pos:end="43:64"><name pos:start="43:9" pos:end="43:30">ff_hevc_annexb2mp4_buf</name><argument_list pos:start="43:31" pos:end="43:64">(<argument pos:start="43:32" pos:end="43:40"><expr pos:start="43:32" pos:end="43:40"><name pos:start="43:32" pos:end="43:40"><name pos:start="43:32" pos:end="43:34">pkt</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:40">data</name></name></expr></argument>, <argument pos:start="43:43" pos:end="43:47"><expr pos:start="43:43" pos:end="43:47"><operator pos:start="43:43" pos:end="43:43">&amp;</operator><name pos:start="43:44" pos:end="43:47">data</name></expr></argument>, <argument pos:start="43:50" pos:end="43:54"><expr pos:start="43:50" pos:end="43:54"><operator pos:start="43:50" pos:end="43:50">&amp;</operator><name pos:start="43:51" pos:end="43:54">size</name></expr></argument>, <argument pos:start="43:57" pos:end="43:57"><expr pos:start="43:57" pos:end="43:57"><literal type="number" pos:start="43:57" pos:end="43:57">0</literal></expr></argument>, <argument pos:start="43:60" pos:end="43:63"><expr pos:start="43:60" pos:end="43:63"><name pos:start="43:60" pos:end="43:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="45:5" pos:end="57:5">else if <condition pos:start="45:13" pos:end="45:52">(<expr pos:start="45:14" pos:end="45:51"><name pos:start="45:14" pos:end="45:28"><name pos:start="45:14" pos:end="45:18">codec</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:28">codec_id</name></name> <operator pos:start="45:30" pos:end="45:31">==</operator> <name pos:start="45:33" pos:end="45:51">AV_CODEC_ID_WAVPACK</name></expr>)</condition> <block pos:start="45:54" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:9">

        <decl_stmt pos:start="47:9" pos:end="47:61"><decl pos:start="47:9" pos:end="47:60"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:15">ret</name> <init pos:start="47:17" pos:end="47:60">= <expr pos:start="47:19" pos:end="47:60"><call pos:start="47:19" pos:end="47:60"><name pos:start="47:19" pos:end="47:35">mkv_strip_wavpack</name><argument_list pos:start="47:36" pos:end="47:60">(<argument pos:start="47:37" pos:end="47:45"><expr pos:start="47:37" pos:end="47:45"><name pos:start="47:37" pos:end="47:45"><name pos:start="47:37" pos:end="47:39">pkt</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:45">data</name></name></expr></argument>, <argument pos:start="47:48" pos:end="47:52"><expr pos:start="47:48" pos:end="47:52"><operator pos:start="47:48" pos:end="47:48">&amp;</operator><name pos:start="47:49" pos:end="47:52">data</name></expr></argument>, <argument pos:start="47:55" pos:end="47:59"><expr pos:start="47:55" pos:end="47:59"><operator pos:start="47:55" pos:end="47:55">&amp;</operator><name pos:start="47:56" pos:end="47:59">size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:20">(<expr pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">&lt;</operator> <literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>)</condition> <block pos:start="49:22" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:19">

            <expr_stmt pos:start="51:13" pos:end="51:75"><expr pos:start="51:13" pos:end="51:74"><call pos:start="51:13" pos:end="51:74"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="51:74">(<argument pos:start="51:20" pos:end="51:20"><expr pos:start="51:20" pos:end="51:20"><name pos:start="51:20" pos:end="51:20">s</name></expr></argument>, <argument pos:start="51:23" pos:end="51:34"><expr pos:start="51:23" pos:end="51:34"><name pos:start="51:23" pos:end="51:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:37" pos:end="51:73"><expr pos:start="51:37" pos:end="51:73"><literal type="string" pos:start="51:37" pos:end="51:73">"Error stripping a WavPack packet.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="59:25">else<block type="pseudo" pos:start="59:9" pos:end="59:25"><block_content pos:start="59:9" pos:end="59:25">

        <expr_stmt pos:start="59:9" pos:end="59:25"><expr pos:start="59:9" pos:end="59:24"><name pos:start="59:9" pos:end="59:12">data</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <name pos:start="59:16" pos:end="59:24"><name pos:start="59:16" pos:end="59:18">pkt</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:24">data</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="63:5" pos:end="73:5"><if pos:start="63:5" pos:end="73:5">if <condition pos:start="63:8" pos:end="63:46">(<expr pos:start="63:9" pos:end="63:45"><name pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:13">codec</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:23">codec_id</name></name> <operator pos:start="63:25" pos:end="63:26">==</operator> <name pos:start="63:28" pos:end="63:45">AV_CODEC_ID_PRORES</name></expr>)</condition> <block pos:start="63:48" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:19">

        <comment type="block" pos:start="65:9" pos:end="67:11">/* Matroska specification requires to remove the first QuickTime atom

         */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:19"><expr pos:start="69:9" pos:end="69:18"><name pos:start="69:9" pos:end="69:12">size</name>  <operator pos:start="69:15" pos:end="69:16">-=</operator> <literal type="number" pos:start="69:18" pos:end="69:18">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:19"><expr pos:start="71:9" pos:end="71:18"><name pos:start="71:9" pos:end="71:14">offset</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <literal type="number" pos:start="71:18" pos:end="71:18">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="81:57"><expr pos:start="77:5" pos:end="81:56"><name pos:start="77:5" pos:end="77:13">side_data</name> <operator pos:start="77:15" pos:end="77:15">=</operator> <call pos:start="77:17" pos:end="81:56"><name pos:start="77:17" pos:end="77:39">av_packet_get_side_data</name><argument_list pos:start="77:40" pos:end="81:56">(<argument pos:start="77:41" pos:end="77:43"><expr pos:start="77:41" pos:end="77:43"><name pos:start="77:41" pos:end="77:43">pkt</name></expr></argument>,

                                        <argument pos:start="79:41" pos:end="79:64"><expr pos:start="79:41" pos:end="79:64"><name pos:start="79:41" pos:end="79:64">AV_PKT_DATA_SKIP_SAMPLES</name></expr></argument>,

                                        <argument pos:start="81:41" pos:end="81:55"><expr pos:start="81:41" pos:end="81:55"><operator pos:start="81:41" pos:end="81:41">&amp;</operator><name pos:start="81:42" pos:end="81:55">side_data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="85:5" pos:end="93:5"><if pos:start="85:5" pos:end="93:5">if <condition pos:start="85:8" pos:end="85:42">(<expr pos:start="85:9" pos:end="85:41"><name pos:start="85:9" pos:end="85:17">side_data</name> <operator pos:start="85:19" pos:end="85:20">&amp;&amp;</operator> <name pos:start="85:22" pos:end="85:35">side_data_size</name> <operator pos:start="85:37" pos:end="85:38">&gt;=</operator> <literal type="number" pos:start="85:40" pos:end="85:41">10</literal></expr>)</condition> <block pos:start="85:44" pos:end="93:5">{<block_content pos:start="87:9" pos:end="91:68">

        <expr_stmt pos:start="87:9" pos:end="91:68"><expr pos:start="87:9" pos:end="91:67"><name pos:start="87:9" pos:end="87:23">discard_padding</name> <operator pos:start="87:25" pos:end="87:25">=</operator> <macro pos:start="87:27" pos:end="91:67"><name pos:start="87:27" pos:end="87:38">av_rescale_q</name><argument_list pos:start="87:39" pos:end="91:67">(<argument pos:start="87:40" pos:end="87:61">AV_RL32(side_data + <literal type="number" pos:start="87:60" pos:end="87:60">4</literal>)</argument>,

                                       <argument pos:start="89:40" pos:end="89:53">(AVRational){<literal type="number" pos:start="89:53" pos:end="89:53">1</literal></argument>, <argument pos:start="89:56" pos:end="89:74">codec-&gt;sample_rate}</argument>,

                                       <argument pos:start="91:40" pos:end="91:53">(AVRational){<literal type="number" pos:start="91:53" pos:end="91:53">1</literal></argument>, <argument pos:start="91:56" pos:end="91:66"><literal type="number" pos:start="91:56" pos:end="91:65">1000000000</literal>}</argument>)</argument_list></macro></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="101:57"><expr pos:start="97:5" pos:end="101:56"><name pos:start="97:5" pos:end="97:13">side_data</name> <operator pos:start="97:15" pos:end="97:15">=</operator> <call pos:start="97:17" pos:end="101:56"><name pos:start="97:17" pos:end="97:39">av_packet_get_side_data</name><argument_list pos:start="97:40" pos:end="101:56">(<argument pos:start="97:41" pos:end="97:43"><expr pos:start="97:41" pos:end="97:43"><name pos:start="97:41" pos:end="97:43">pkt</name></expr></argument>,

                                        <argument pos:start="99:41" pos:end="99:76"><expr pos:start="99:41" pos:end="99:76"><name pos:start="99:41" pos:end="99:76">AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL</name></expr></argument>,

                                        <argument pos:start="101:41" pos:end="101:55"><expr pos:start="101:41" pos:end="101:55"><operator pos:start="101:41" pos:end="101:41">&amp;</operator><name pos:start="101:42" pos:end="101:55">side_data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="111:5"><if pos:start="103:5" pos:end="111:5">if <condition pos:start="103:8" pos:end="103:18">(<expr pos:start="103:9" pos:end="103:17"><name pos:start="103:9" pos:end="103:17">side_data</name></expr>)</condition> <block pos:start="103:20" pos:end="111:5">{<block_content pos:start="105:9" pos:end="109:28">

        <expr_stmt pos:start="105:9" pos:end="105:43"><expr pos:start="105:9" pos:end="105:42"><name pos:start="105:9" pos:end="105:21">additional_id</name> <operator pos:start="105:23" pos:end="105:23">=</operator> <call pos:start="105:25" pos:end="105:42"><name pos:start="105:25" pos:end="105:31">AV_RB64</name><argument_list pos:start="105:32" pos:end="105:42">(<argument pos:start="105:33" pos:end="105:41"><expr pos:start="105:33" pos:end="105:41"><name pos:start="105:33" pos:end="105:41">side_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:23"><expr pos:start="107:9" pos:end="107:22"><name pos:start="107:9" pos:end="107:17">side_data</name> <operator pos:start="107:19" pos:end="107:20">+=</operator> <literal type="number" pos:start="107:22" pos:end="107:22">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:28"><expr pos:start="109:9" pos:end="109:27"><name pos:start="109:9" pos:end="109:22">side_data_size</name> <operator pos:start="109:24" pos:end="109:25">-=</operator> <literal type="number" pos:start="109:27" pos:end="109:27">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:66">(<expr pos:start="115:9" pos:end="115:65"><operator pos:start="115:9" pos:end="115:9">(</operator><name pos:start="115:10" pos:end="115:23">side_data_size</name> <operator pos:start="115:25" pos:end="115:26">&amp;&amp;</operator> <name pos:start="115:28" pos:end="115:40">additional_id</name> <operator pos:start="115:42" pos:end="115:43">==</operator> <literal type="number" pos:start="115:45" pos:end="115:45">1</literal><operator pos:start="115:46" pos:end="115:46">)</operator> <operator pos:start="115:48" pos:end="115:49">||</operator> <name pos:start="115:51" pos:end="115:65">discard_padding</name></expr>)</condition> <block pos:start="115:68" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:36">

        <expr_stmt pos:start="117:9" pos:end="117:71"><expr pos:start="117:9" pos:end="117:70"><name pos:start="117:9" pos:end="117:19">block_group</name> <operator pos:start="117:21" pos:end="117:21">=</operator> <call pos:start="117:23" pos:end="117:70"><name pos:start="117:23" pos:end="117:39">start_ebml_master</name><argument_list pos:start="117:40" pos:end="117:70">(<argument pos:start="117:41" pos:end="117:42"><expr pos:start="117:41" pos:end="117:42"><name pos:start="117:41" pos:end="117:42">pb</name></expr></argument>, <argument pos:start="117:45" pos:end="117:66"><expr pos:start="117:45" pos:end="117:66"><name pos:start="117:45" pos:end="117:66">MATROSKA_ID_BLOCKGROUP</name></expr></argument>, <argument pos:start="117:69" pos:end="117:69"><expr pos:start="117:69" pos:end="117:69"><literal type="number" pos:start="117:69" pos:end="117:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:36"><expr pos:start="119:9" pos:end="119:35"><name pos:start="119:9" pos:end="119:15">blockid</name> <operator pos:start="119:17" pos:end="119:17">=</operator> <name pos:start="119:19" pos:end="119:35">MATROSKA_ID_BLOCK</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:29"><expr pos:start="125:5" pos:end="125:28"><call pos:start="125:5" pos:end="125:28"><name pos:start="125:5" pos:end="125:15">put_ebml_id</name><argument_list pos:start="125:16" pos:end="125:28">(<argument pos:start="125:17" pos:end="125:18"><expr pos:start="125:17" pos:end="125:18"><name pos:start="125:17" pos:end="125:18">pb</name></expr></argument>, <argument pos:start="125:21" pos:end="125:27"><expr pos:start="125:21" pos:end="125:27"><name pos:start="125:21" pos:end="125:27">blockid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:34"><expr pos:start="127:5" pos:end="127:33"><call pos:start="127:5" pos:end="127:33"><name pos:start="127:5" pos:end="127:16">put_ebml_num</name><argument_list pos:start="127:17" pos:end="127:33">(<argument pos:start="127:18" pos:end="127:19"><expr pos:start="127:18" pos:end="127:19"><name pos:start="127:18" pos:end="127:19">pb</name></expr></argument>, <argument pos:start="127:22" pos:end="127:29"><expr pos:start="127:22" pos:end="127:29"><name pos:start="127:22" pos:end="127:25">size</name> <operator pos:start="127:27" pos:end="127:27">+</operator> <literal type="number" pos:start="127:29" pos:end="127:29">4</literal></expr></argument>, <argument pos:start="127:32" pos:end="127:32"><expr pos:start="127:32" pos:end="127:32"><literal type="number" pos:start="127:32" pos:end="127:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="129:5" pos:end="129:49">// this assumes stream_index is less than 126</comment>

    <expr_stmt pos:start="131:5" pos:end="131:90"><expr pos:start="131:5" pos:end="131:89"><call pos:start="131:5" pos:end="131:89"><name pos:start="131:5" pos:end="131:11">avio_w8</name><argument_list pos:start="131:12" pos:end="131:89">(<argument pos:start="131:13" pos:end="131:14"><expr pos:start="131:13" pos:end="131:14"><name pos:start="131:13" pos:end="131:14">pb</name></expr></argument>, <argument pos:start="131:17" pos:end="131:88"><expr pos:start="131:17" pos:end="131:88"><literal type="number" pos:start="131:17" pos:end="131:20">0x80</literal> <operator pos:start="131:22" pos:end="131:22">|</operator> <operator pos:start="131:24" pos:end="131:24">(</operator><ternary pos:start="131:25" pos:end="131:87"><condition pos:start="131:25" pos:end="131:38"><expr pos:start="131:25" pos:end="131:36"><name pos:start="131:25" pos:end="131:36"><name pos:start="131:25" pos:end="131:27">mkv</name><operator pos:start="131:28" pos:end="131:29">-&gt;</operator><name pos:start="131:30" pos:end="131:36">is_dash</name></name></expr> ?</condition><then pos:start="131:40" pos:end="131:61"> <expr pos:start="131:40" pos:end="131:61"><name pos:start="131:40" pos:end="131:61"><name pos:start="131:40" pos:end="131:42">mkv</name><operator pos:start="131:43" pos:end="131:44">-&gt;</operator><name pos:start="131:45" pos:end="131:61">dash_track_number</name></name></expr> </then><else pos:start="131:63" pos:end="131:87">: <expr pos:start="131:65" pos:end="131:87"><operator pos:start="131:65" pos:end="131:65">(</operator><name pos:start="131:66" pos:end="131:82"><name pos:start="131:66" pos:end="131:68">pkt</name><operator pos:start="131:69" pos:end="131:70">-&gt;</operator><name pos:start="131:71" pos:end="131:82">stream_index</name></name> <operator pos:start="131:84" pos:end="131:84">+</operator> <literal type="number" pos:start="131:86" pos:end="131:86">1</literal><operator pos:start="131:87" pos:end="131:87">)</operator></expr></else></ternary><operator pos:start="131:88" pos:end="131:88">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:41"><expr pos:start="133:5" pos:end="133:40"><call pos:start="133:5" pos:end="133:40"><name pos:start="133:5" pos:end="133:13">avio_wb16</name><argument_list pos:start="133:14" pos:end="133:40">(<argument pos:start="133:15" pos:end="133:16"><expr pos:start="133:15" pos:end="133:16"><name pos:start="133:15" pos:end="133:16">pb</name></expr></argument>, <argument pos:start="133:19" pos:end="133:39"><expr pos:start="133:19" pos:end="133:39"><name pos:start="133:19" pos:end="133:20">ts</name> <operator pos:start="133:22" pos:end="133:22">-</operator> <name pos:start="133:24" pos:end="133:39"><name pos:start="133:24" pos:end="133:26">mkv</name><operator pos:start="133:27" pos:end="133:28">-&gt;</operator><name pos:start="133:29" pos:end="133:39">cluster_pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:23"><expr pos:start="135:5" pos:end="135:22"><call pos:start="135:5" pos:end="135:22"><name pos:start="135:5" pos:end="135:11">avio_w8</name><argument_list pos:start="135:12" pos:end="135:22">(<argument pos:start="135:13" pos:end="135:14"><expr pos:start="135:13" pos:end="135:14"><name pos:start="135:13" pos:end="135:14">pb</name></expr></argument>, <argument pos:start="135:17" pos:end="135:21"><expr pos:start="135:17" pos:end="135:21"><name pos:start="135:17" pos:end="135:21">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:40"><expr pos:start="137:5" pos:end="137:39"><call pos:start="137:5" pos:end="137:39"><name pos:start="137:5" pos:end="137:14">avio_write</name><argument_list pos:start="137:15" pos:end="137:39">(<argument pos:start="137:16" pos:end="137:17"><expr pos:start="137:16" pos:end="137:17"><name pos:start="137:16" pos:end="137:17">pb</name></expr></argument>, <argument pos:start="137:20" pos:end="137:32"><expr pos:start="137:20" pos:end="137:32"><name pos:start="137:20" pos:end="137:23">data</name> <operator pos:start="137:25" pos:end="137:25">+</operator> <name pos:start="137:27" pos:end="137:32">offset</name></expr></argument>, <argument pos:start="137:35" pos:end="137:38"><expr pos:start="137:35" pos:end="137:38"><name pos:start="137:35" pos:end="137:38">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="139:5" pos:end="141:22"><if pos:start="139:5" pos:end="141:22">if <condition pos:start="139:8" pos:end="139:26">(<expr pos:start="139:9" pos:end="139:25"><name pos:start="139:9" pos:end="139:12">data</name> <operator pos:start="139:14" pos:end="139:15">!=</operator> <name pos:start="139:17" pos:end="139:25"><name pos:start="139:17" pos:end="139:19">pkt</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:25">data</name></name></expr>)</condition><block type="pseudo" pos:start="141:9" pos:end="141:22"><block_content pos:start="141:9" pos:end="141:22">

        <expr_stmt pos:start="141:9" pos:end="141:22"><expr pos:start="141:9" pos:end="141:21"><call pos:start="141:9" pos:end="141:21"><name pos:start="141:9" pos:end="141:15">av_free</name><argument_list pos:start="141:16" pos:end="141:21">(<argument pos:start="141:17" pos:end="141:20"><expr pos:start="141:17" pos:end="141:20"><name pos:start="141:17" pos:end="141:20">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="145:5" pos:end="149:5"><if pos:start="145:5" pos:end="149:5">if <condition pos:start="145:8" pos:end="145:24">(<expr pos:start="145:9" pos:end="145:23"><name pos:start="145:9" pos:end="145:23">discard_padding</name></expr>)</condition> <block pos:start="145:26" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:71">

        <expr_stmt pos:start="147:9" pos:end="147:71"><expr pos:start="147:9" pos:end="147:70"><call pos:start="147:9" pos:end="147:70"><name pos:start="147:9" pos:end="147:21">put_ebml_sint</name><argument_list pos:start="147:22" pos:end="147:70">(<argument pos:start="147:23" pos:end="147:24"><expr pos:start="147:23" pos:end="147:24"><name pos:start="147:23" pos:end="147:24">pb</name></expr></argument>, <argument pos:start="147:27" pos:end="147:52"><expr pos:start="147:27" pos:end="147:52"><name pos:start="147:27" pos:end="147:52">MATROSKA_ID_DISCARDPADDING</name></expr></argument>, <argument pos:start="147:55" pos:end="147:69"><expr pos:start="147:55" pos:end="147:69"><name pos:start="147:55" pos:end="147:69">discard_padding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="153:5" pos:end="171:5"><if pos:start="153:5" pos:end="171:5">if <condition pos:start="153:8" pos:end="153:45">(<expr pos:start="153:9" pos:end="153:44"><name pos:start="153:9" pos:end="153:22">side_data_size</name> <operator pos:start="153:24" pos:end="153:25">&amp;&amp;</operator> <name pos:start="153:27" pos:end="153:39">additional_id</name> <operator pos:start="153:41" pos:end="153:42">==</operator> <literal type="number" pos:start="153:44" pos:end="153:44">1</literal></expr>)</condition> <block pos:start="153:47" pos:end="171:5">{<block_content pos:start="155:9" pos:end="169:45">

        <expr_stmt pos:start="155:9" pos:end="155:79"><expr pos:start="155:9" pos:end="155:78"><name pos:start="155:9" pos:end="155:23">block_additions</name> <operator pos:start="155:25" pos:end="155:25">=</operator> <call pos:start="155:27" pos:end="155:78"><name pos:start="155:27" pos:end="155:43">start_ebml_master</name><argument_list pos:start="155:44" pos:end="155:78">(<argument pos:start="155:45" pos:end="155:46"><expr pos:start="155:45" pos:end="155:46"><name pos:start="155:45" pos:end="155:46">pb</name></expr></argument>, <argument pos:start="155:49" pos:end="155:74"><expr pos:start="155:49" pos:end="155:74"><name pos:start="155:49" pos:end="155:74">MATROSKA_ID_BLOCKADDITIONS</name></expr></argument>, <argument pos:start="155:77" pos:end="155:77"><expr pos:start="155:77" pos:end="155:77"><literal type="number" pos:start="155:77" pos:end="155:77">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:69"><expr pos:start="157:9" pos:end="157:68"><name pos:start="157:9" pos:end="157:18">block_more</name> <operator pos:start="157:20" pos:end="157:20">=</operator> <call pos:start="157:22" pos:end="157:68"><name pos:start="157:22" pos:end="157:38">start_ebml_master</name><argument_list pos:start="157:39" pos:end="157:68">(<argument pos:start="157:40" pos:end="157:41"><expr pos:start="157:40" pos:end="157:41"><name pos:start="157:40" pos:end="157:41">pb</name></expr></argument>, <argument pos:start="157:44" pos:end="157:64"><expr pos:start="157:44" pos:end="157:64"><name pos:start="157:44" pos:end="157:64">MATROSKA_ID_BLOCKMORE</name></expr></argument>, <argument pos:start="157:67" pos:end="157:67"><expr pos:start="157:67" pos:end="157:67"><literal type="number" pos:start="157:67" pos:end="157:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:53"><expr pos:start="159:9" pos:end="159:52"><call pos:start="159:9" pos:end="159:52"><name pos:start="159:9" pos:end="159:21">put_ebml_uint</name><argument_list pos:start="159:22" pos:end="159:52">(<argument pos:start="159:23" pos:end="159:24"><expr pos:start="159:23" pos:end="159:24"><name pos:start="159:23" pos:end="159:24">pb</name></expr></argument>, <argument pos:start="159:27" pos:end="159:48"><expr pos:start="159:27" pos:end="159:48"><name pos:start="159:27" pos:end="159:48">MATROSKA_ID_BLOCKADDID</name></expr></argument>, <argument pos:start="159:51" pos:end="159:51"><expr pos:start="159:51" pos:end="159:51"><literal type="number" pos:start="159:51" pos:end="159:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:53"><expr pos:start="161:9" pos:end="161:52"><call pos:start="161:9" pos:end="161:52"><name pos:start="161:9" pos:end="161:19">put_ebml_id</name><argument_list pos:start="161:20" pos:end="161:52">(<argument pos:start="161:21" pos:end="161:22"><expr pos:start="161:21" pos:end="161:22"><name pos:start="161:21" pos:end="161:22">pb</name></expr></argument>, <argument pos:start="161:25" pos:end="161:51"><expr pos:start="161:25" pos:end="161:51"><name pos:start="161:25" pos:end="161:51">MATROSKA_ID_BLOCKADDITIONAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:44"><expr pos:start="163:9" pos:end="163:43"><call pos:start="163:9" pos:end="163:43"><name pos:start="163:9" pos:end="163:20">put_ebml_num</name><argument_list pos:start="163:21" pos:end="163:43">(<argument pos:start="163:22" pos:end="163:23"><expr pos:start="163:22" pos:end="163:23"><name pos:start="163:22" pos:end="163:23">pb</name></expr></argument>, <argument pos:start="163:26" pos:end="163:39"><expr pos:start="163:26" pos:end="163:39"><name pos:start="163:26" pos:end="163:39">side_data_size</name></expr></argument>, <argument pos:start="163:42" pos:end="163:42"><expr pos:start="163:42" pos:end="163:42"><literal type="number" pos:start="163:42" pos:end="163:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:50"><expr pos:start="165:9" pos:end="165:49"><call pos:start="165:9" pos:end="165:49"><name pos:start="165:9" pos:end="165:18">avio_write</name><argument_list pos:start="165:19" pos:end="165:49">(<argument pos:start="165:20" pos:end="165:21"><expr pos:start="165:20" pos:end="165:21"><name pos:start="165:20" pos:end="165:21">pb</name></expr></argument>, <argument pos:start="165:24" pos:end="165:32"><expr pos:start="165:24" pos:end="165:32"><name pos:start="165:24" pos:end="165:32">side_data</name></expr></argument>, <argument pos:start="165:35" pos:end="165:48"><expr pos:start="165:35" pos:end="165:48"><name pos:start="165:35" pos:end="165:48">side_data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:40"><expr pos:start="167:9" pos:end="167:39"><call pos:start="167:9" pos:end="167:39"><name pos:start="167:9" pos:end="167:23">end_ebml_master</name><argument_list pos:start="167:24" pos:end="167:39">(<argument pos:start="167:25" pos:end="167:26"><expr pos:start="167:25" pos:end="167:26"><name pos:start="167:25" pos:end="167:26">pb</name></expr></argument>, <argument pos:start="167:29" pos:end="167:38"><expr pos:start="167:29" pos:end="167:38"><name pos:start="167:29" pos:end="167:38">block_more</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:45"><expr pos:start="169:9" pos:end="169:44"><call pos:start="169:9" pos:end="169:44"><name pos:start="169:9" pos:end="169:23">end_ebml_master</name><argument_list pos:start="169:24" pos:end="169:44">(<argument pos:start="169:25" pos:end="169:26"><expr pos:start="169:25" pos:end="169:26"><name pos:start="169:25" pos:end="169:26">pb</name></expr></argument>, <argument pos:start="169:29" pos:end="169:43"><expr pos:start="169:29" pos:end="169:43"><name pos:start="169:29" pos:end="169:43">block_additions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="173:5" pos:end="177:5"><if pos:start="173:5" pos:end="177:5">if <condition pos:start="173:8" pos:end="173:66">(<expr pos:start="173:9" pos:end="173:65"><operator pos:start="173:9" pos:end="173:9">(</operator><name pos:start="173:10" pos:end="173:23">side_data_size</name> <operator pos:start="173:25" pos:end="173:26">&amp;&amp;</operator> <name pos:start="173:28" pos:end="173:40">additional_id</name> <operator pos:start="173:42" pos:end="173:43">==</operator> <literal type="number" pos:start="173:45" pos:end="173:45">1</literal><operator pos:start="173:46" pos:end="173:46">)</operator> <operator pos:start="173:48" pos:end="173:49">||</operator> <name pos:start="173:51" pos:end="173:65">discard_padding</name></expr>)</condition> <block pos:start="173:68" pos:end="177:5">{<block_content pos:start="175:9" pos:end="175:41">

        <expr_stmt pos:start="175:9" pos:end="175:41"><expr pos:start="175:9" pos:end="175:40"><call pos:start="175:9" pos:end="175:40"><name pos:start="175:9" pos:end="175:23">end_ebml_master</name><argument_list pos:start="175:24" pos:end="175:40">(<argument pos:start="175:25" pos:end="175:26"><expr pos:start="175:25" pos:end="175:26"><name pos:start="175:25" pos:end="175:26">pb</name></expr></argument>, <argument pos:start="175:29" pos:end="175:39"><expr pos:start="175:29" pos:end="175:39"><name pos:start="175:29" pos:end="175:39">block_group</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
