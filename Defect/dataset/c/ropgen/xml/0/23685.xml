<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23685.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">qcow2_cache_flush</name><parameter_list pos:start="1:22" pos:end="1:58">(<parameter pos:start="1:23" pos:end="1:42"><decl pos:start="1:23" pos:end="1:42"><type pos:start="1:23" pos:end="1:42"><name pos:start="1:23" pos:end="1:38">BlockDriverState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">bs</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:54">Qcow2Cache</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:18">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">BDRVQcow2State</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:34">= <expr pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:26">bs</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">result</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:75"><expr pos:start="15:5" pos:end="15:74"><call pos:start="15:5" pos:end="15:74"><name pos:start="15:5" pos:end="15:27">trace_qcow2_cache_flush</name><argument_list pos:start="15:28" pos:end="15:74">(<argument pos:start="15:29" pos:end="15:49"><expr pos:start="15:29" pos:end="15:49"><call pos:start="15:29" pos:end="15:49"><name pos:start="15:29" pos:end="15:47">qemu_coroutine_self</name><argument_list pos:start="15:48" pos:end="15:49">()</argument_list></call></expr></argument>, <argument pos:start="15:52" pos:end="15:73"><expr pos:start="15:52" pos:end="15:73"><name pos:start="15:52" pos:end="15:52">c</name> <operator pos:start="15:54" pos:end="15:55">==</operator> <name pos:start="15:57" pos:end="15:73"><name pos:start="15:57" pos:end="15:57">s</name><operator pos:start="15:58" pos:end="15:59">-&gt;</operator><name pos:start="15:60" pos:end="15:73">l2_table_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="19:5" pos:end="29:5">for <control pos:start="19:9" pos:end="19:33">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:28"><expr pos:start="19:17" pos:end="19:27"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:27"><name pos:start="19:21" pos:end="19:21">c</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:27">size</name></name></expr>;</condition> <incr pos:start="19:30" pos:end="19:32"><expr pos:start="19:30" pos:end="19:32"><name pos:start="19:30" pos:end="19:30">i</name><operator pos:start="19:31" pos:end="19:32">++</operator></expr></incr>)</control> <block pos:start="19:35" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:9">

        <expr_stmt pos:start="21:9" pos:end="21:48"><expr pos:start="21:9" pos:end="21:47"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:47"><name pos:start="21:15" pos:end="21:37">qcow2_cache_entry_flush</name><argument_list pos:start="21:38" pos:end="21:47">(<argument pos:start="21:39" pos:end="21:40"><expr pos:start="21:39" pos:end="21:40"><name pos:start="21:39" pos:end="21:40">bs</name></expr></argument>, <argument pos:start="21:43" pos:end="21:43"><expr pos:start="21:43" pos:end="21:43"><name pos:start="21:43" pos:end="21:43">c</name></expr></argument>, <argument pos:start="21:46" pos:end="21:46"><expr pos:start="21:46" pos:end="21:46"><name pos:start="21:46" pos:end="21:46">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:41">(<expr pos:start="23:13" pos:end="23:40"><name pos:start="23:13" pos:end="23:15">ret</name> <operator pos:start="23:17" pos:end="23:17">&lt;</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal> <operator pos:start="23:21" pos:end="23:22">&amp;&amp;</operator> <name pos:start="23:24" pos:end="23:29">result</name> <operator pos:start="23:31" pos:end="23:32">!=</operator> <operator pos:start="23:34" pos:end="23:34">-</operator><name pos:start="23:35" pos:end="23:40">ENOSPC</name></expr>)</condition> <block pos:start="23:43" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:25">

            <expr_stmt pos:start="25:13" pos:end="25:25"><expr pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:18">result</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:24">ret</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="33:5" pos:end="43:5"><if pos:start="33:5" pos:end="43:5">if <condition pos:start="33:8" pos:end="33:20">(<expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:14">result</name> <operator pos:start="33:16" pos:end="33:17">==</operator> <literal type="number" pos:start="33:19" pos:end="33:19">0</literal></expr>)</condition> <block pos:start="33:22" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:9">

        <expr_stmt pos:start="35:9" pos:end="35:39"><expr pos:start="35:9" pos:end="35:38"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:38"><name pos:start="35:15" pos:end="35:24">bdrv_flush</name><argument_list pos:start="35:25" pos:end="35:38">(<argument pos:start="35:26" pos:end="35:37"><expr pos:start="35:26" pos:end="35:37"><name pos:start="35:26" pos:end="35:37"><name pos:start="35:26" pos:end="35:27">bs</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:33">file</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:37">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">&lt;</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>)</condition> <block pos:start="37:22" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:25">

            <expr_stmt pos:start="39:13" pos:end="39:25"><expr pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:18">result</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:24">ret</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="47:5" pos:end="47:18">return <expr pos:start="47:12" pos:end="47:17"><name pos:start="47:12" pos:end="47:17">result</name></expr>;</return>

</block_content>}</block></function>
</unit>
