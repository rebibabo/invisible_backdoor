<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25279.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:16"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:16">coroutine_fn</name></type> <name pos:start="1:18" pos:end="1:38">thread_pool_submit_co</name><parameter_list pos:start="1:39" pos:end="3:49">(<parameter pos:start="1:40" pos:end="1:55"><decl pos:start="1:40" pos:end="1:55"><type pos:start="1:40" pos:end="1:55"><name pos:start="1:40" pos:end="1:49">ThreadPool</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">pool</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:77"><decl pos:start="1:58" pos:end="1:77"><type pos:start="1:58" pos:end="1:77"><name pos:start="1:58" pos:end="1:71">ThreadPoolFunc</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:77">func</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:48"><decl pos:start="3:40" pos:end="3:48"><type pos:start="3:40" pos:end="3:48"><name pos:start="3:40" pos:end="3:43">void</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:48">arg</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="17:1">{<block_content pos:start="7:5" pos:end="15:19">

    <decl_stmt pos:start="7:5" pos:end="7:76"><decl pos:start="7:5" pos:end="7:75"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">ThreadPoolCo</name></type> <name pos:start="7:18" pos:end="7:20">tpc</name> <init pos:start="7:22" pos:end="7:75">= <expr pos:start="7:24" pos:end="7:75"><block pos:start="7:24" pos:end="7:75">{ <expr pos:start="7:26" pos:end="7:52"><operator pos:start="7:26" pos:end="7:26">.</operator><name pos:start="7:27" pos:end="7:28">co</name> <operator pos:start="7:30" pos:end="7:30">=</operator> <call pos:start="7:32" pos:end="7:52"><name pos:start="7:32" pos:end="7:50">qemu_coroutine_self</name><argument_list pos:start="7:51" pos:end="7:52">()</argument_list></call></expr>, <expr pos:start="7:55" pos:end="7:73"><operator pos:start="7:55" pos:end="7:55">.</operator><name pos:start="7:56" pos:end="7:58">ret</name> <operator pos:start="7:60" pos:end="7:60">=</operator> <operator pos:start="7:62" pos:end="7:62">-</operator><name pos:start="7:63" pos:end="7:73">EINPROGRESS</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:32"><expr pos:start="9:5" pos:end="9:31"><call pos:start="9:5" pos:end="9:31"><name pos:start="9:5" pos:end="9:10">assert</name><argument_list pos:start="9:11" pos:end="9:31">(<argument pos:start="9:12" pos:end="9:30"><expr pos:start="9:12" pos:end="9:30"><call pos:start="9:12" pos:end="9:30"><name pos:start="9:12" pos:end="9:28">qemu_in_coroutine</name><argument_list pos:start="9:29" pos:end="9:30">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:69"><expr pos:start="11:5" pos:end="11:68"><call pos:start="11:5" pos:end="11:68"><name pos:start="11:5" pos:end="11:26">thread_pool_submit_aio</name><argument_list pos:start="11:27" pos:end="11:68">(<argument pos:start="11:28" pos:end="11:31"><expr pos:start="11:28" pos:end="11:31"><name pos:start="11:28" pos:end="11:31">pool</name></expr></argument>, <argument pos:start="11:34" pos:end="11:37"><expr pos:start="11:34" pos:end="11:37"><name pos:start="11:34" pos:end="11:37">func</name></expr></argument>, <argument pos:start="11:40" pos:end="11:42"><expr pos:start="11:40" pos:end="11:42"><name pos:start="11:40" pos:end="11:42">arg</name></expr></argument>, <argument pos:start="11:45" pos:end="11:61"><expr pos:start="11:45" pos:end="11:61"><name pos:start="11:45" pos:end="11:61">thread_pool_co_cb</name></expr></argument>, <argument pos:start="11:64" pos:end="11:67"><expr pos:start="11:64" pos:end="11:67"><operator pos:start="11:64" pos:end="11:64">&amp;</operator><name pos:start="11:65" pos:end="11:67">tpc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><call pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:24">qemu_coroutine_yield</name><argument_list pos:start="13:25" pos:end="13:26">()</argument_list></call></expr>;</expr_stmt>

    <return pos:start="15:5" pos:end="15:19">return <expr pos:start="15:12" pos:end="15:18"><name pos:start="15:12" pos:end="15:18"><name pos:start="15:12" pos:end="15:14">tpc</name><operator pos:start="15:15" pos:end="15:15">.</operator><name pos:start="15:16" pos:end="15:18">ret</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
