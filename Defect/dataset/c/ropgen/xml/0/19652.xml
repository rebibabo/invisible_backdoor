<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19652.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:39">decode_residual_inter</name><parameter_list pos:start="1:40" pos:end="1:54">(<parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:50">AVSContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">block</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:33">/* get coded block pattern */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">cbp</name> <init pos:start="11:13" pos:end="11:35">= <expr pos:start="11:15" pos:end="11:35"><call pos:start="11:15" pos:end="11:35"><name pos:start="11:15" pos:end="11:27">get_ue_golomb</name><argument_list pos:start="11:28" pos:end="11:35">(<argument pos:start="11:29" pos:end="11:34"><expr pos:start="11:29" pos:end="11:34"><operator pos:start="11:29" pos:end="11:29">&amp;</operator><name pos:start="11:30" pos:end="11:34"><name pos:start="11:30" pos:end="11:30">h</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:34">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:17">(<expr pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:11">cbp</name> <operator pos:start="13:13" pos:end="13:13">&gt;</operator> <literal type="number" pos:start="13:15" pos:end="13:16">63</literal></expr>)</condition> <block pos:start="13:19" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:35">

        <expr_stmt pos:start="15:9" pos:end="15:62"><expr pos:start="15:9" pos:end="15:61"><call pos:start="15:9" pos:end="15:61"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:61">(<argument pos:start="15:16" pos:end="15:23"><expr pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:16">h</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:23">avctx</name></name></expr></argument>, <argument pos:start="15:26" pos:end="15:37"><expr pos:start="15:26" pos:end="15:37"><name pos:start="15:26" pos:end="15:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:40" pos:end="15:60"><expr pos:start="15:40" pos:end="15:60"><literal type="string" pos:start="15:40" pos:end="15:60">"illegal inter cbp\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:35">return <expr pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:5">h</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:10">cbp</name></name> <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:28"><name pos:start="21:14" pos:end="21:20">cbp_tab</name><index pos:start="21:21" pos:end="21:25">[<expr pos:start="21:22" pos:end="21:24"><name pos:start="21:22" pos:end="21:24">cbp</name></expr>]</index><index pos:start="21:26" pos:end="21:28">[<expr pos:start="21:27" pos:end="21:27"><literal type="number" pos:start="21:27" pos:end="21:27">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:23">/* get quantizer */</comment>

    <if_stmt pos:start="27:5" pos:end="29:53"><if pos:start="27:5" pos:end="29:53">if <condition pos:start="27:8" pos:end="27:31">(<expr pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:9">h</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:14">cbp</name></name> <operator pos:start="27:16" pos:end="27:17">&amp;&amp;</operator> <operator pos:start="27:19" pos:end="27:19">!</operator><name pos:start="27:20" pos:end="27:30"><name pos:start="27:20" pos:end="27:20">h</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:30">qp_fixed</name></name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:53"><block_content pos:start="29:9" pos:end="29:53">

        <expr_stmt pos:start="29:9" pos:end="29:53"><expr pos:start="29:9" pos:end="29:52"><name pos:start="29:9" pos:end="29:13"><name pos:start="29:9" pos:end="29:9">h</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:13">qp</name></name> <operator pos:start="29:15" pos:end="29:15">=</operator> <operator pos:start="29:17" pos:end="29:17">(</operator><name pos:start="29:18" pos:end="29:22"><name pos:start="29:18" pos:end="29:18">h</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:22">qp</name></name> <operator pos:start="29:24" pos:end="29:24">+</operator> <call pos:start="29:26" pos:end="29:46"><name pos:start="29:26" pos:end="29:38">get_se_golomb</name><argument_list pos:start="29:39" pos:end="29:46">(<argument pos:start="29:40" pos:end="29:45"><expr pos:start="29:40" pos:end="29:45"><operator pos:start="29:40" pos:end="29:40">&amp;</operator><name pos:start="29:41" pos:end="29:45"><name pos:start="29:41" pos:end="29:41">h</name><operator pos:start="29:42" pos:end="29:43">-&gt;</operator><name pos:start="29:44" pos:end="29:45">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="29:47" pos:end="29:47">)</operator> <operator pos:start="29:49" pos:end="29:49">&amp;</operator> <literal type="number" pos:start="29:51" pos:end="29:52">63</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="31:5" pos:end="37:76">for <control pos:start="31:9" pos:end="31:39">(<init pos:start="31:10" pos:end="31:19"><expr pos:start="31:10" pos:end="31:18"><name pos:start="31:10" pos:end="31:14">block</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:30"><expr pos:start="31:21" pos:end="31:29"><name pos:start="31:21" pos:end="31:25">block</name> <operator pos:start="31:27" pos:end="31:27">&lt;</operator> <literal type="number" pos:start="31:29" pos:end="31:29">4</literal></expr>;</condition> <incr pos:start="31:32" pos:end="31:38"><expr pos:start="31:32" pos:end="31:38"><name pos:start="31:32" pos:end="31:36">block</name><operator pos:start="31:37" pos:end="31:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="33:9" pos:end="37:76"><block_content pos:start="33:9" pos:end="37:76">

        <if_stmt pos:start="33:9" pos:end="37:76"><if pos:start="33:9" pos:end="37:76">if <condition pos:start="33:12" pos:end="33:34">(<expr pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:18"><name pos:start="33:13" pos:end="33:13">h</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:18">cbp</name></name> <operator pos:start="33:20" pos:end="33:20">&amp;</operator> <operator pos:start="33:22" pos:end="33:22">(</operator><literal type="number" pos:start="33:23" pos:end="33:23">1</literal> <operator pos:start="33:25" pos:end="33:26">&lt;&lt;</operator> <name pos:start="33:28" pos:end="33:32">block</name><operator pos:start="33:33" pos:end="33:33">)</operator></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="37:76"><block_content pos:start="35:13" pos:end="37:76">

            <expr_stmt pos:start="35:13" pos:end="37:76"><expr pos:start="35:13" pos:end="37:75"><call pos:start="35:13" pos:end="37:75"><name pos:start="35:13" pos:end="35:33">decode_residual_block</name><argument_list pos:start="35:34" pos:end="37:75">(<argument pos:start="35:35" pos:end="35:35"><expr pos:start="35:35" pos:end="35:35"><name pos:start="35:35" pos:end="35:35">h</name></expr></argument>, <argument pos:start="35:38" pos:end="35:43"><expr pos:start="35:38" pos:end="35:43"><operator pos:start="35:38" pos:end="35:38">&amp;</operator><name pos:start="35:39" pos:end="35:43"><name pos:start="35:39" pos:end="35:39">h</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:43">gb</name></name></expr></argument>, <argument pos:start="35:46" pos:end="35:54"><expr pos:start="35:46" pos:end="35:54"><name pos:start="35:46" pos:end="35:54">inter_dec</name></expr></argument>, <argument pos:start="35:57" pos:end="35:57"><expr pos:start="35:57" pos:end="35:57"><literal type="number" pos:start="35:57" pos:end="35:57">0</literal></expr></argument>, <argument pos:start="35:60" pos:end="35:64"><expr pos:start="35:60" pos:end="35:64"><name pos:start="35:60" pos:end="35:64"><name pos:start="35:60" pos:end="35:60">h</name><operator pos:start="35:61" pos:end="35:62">-&gt;</operator><name pos:start="35:63" pos:end="35:64">qp</name></name></expr></argument>,

                                  <argument pos:start="37:35" pos:end="37:61"><expr pos:start="37:35" pos:end="37:61"><name pos:start="37:35" pos:end="37:39"><name pos:start="37:35" pos:end="37:35">h</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:39">cy</name></name> <operator pos:start="37:41" pos:end="37:41">+</operator> <name pos:start="37:43" pos:end="37:61"><name pos:start="37:43" pos:end="37:43">h</name><operator pos:start="37:44" pos:end="37:45">-&gt;</operator><name pos:start="37:46" pos:end="37:54">luma_scan</name><index pos:start="37:55" pos:end="37:61">[<expr pos:start="37:56" pos:end="37:60"><name pos:start="37:56" pos:end="37:60">block</name></expr>]</index></name></expr></argument>, <argument pos:start="37:64" pos:end="37:74"><expr pos:start="37:64" pos:end="37:74"><name pos:start="37:64" pos:end="37:74"><name pos:start="37:64" pos:end="37:64">h</name><operator pos:start="37:65" pos:end="37:66">-&gt;</operator><name pos:start="37:67" pos:end="37:74">l_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

    <expr_stmt pos:start="39:5" pos:end="39:30"><expr pos:start="39:5" pos:end="39:29"><call pos:start="39:5" pos:end="39:29"><name pos:start="39:5" pos:end="39:26">decode_residual_chroma</name><argument_list pos:start="39:27" pos:end="39:29">(<argument pos:start="39:28" pos:end="39:28"><expr pos:start="39:28" pos:end="39:28"><name pos:start="39:28" pos:end="39:28">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
