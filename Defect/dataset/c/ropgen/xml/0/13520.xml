<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13520.c" pos:tabs="8"><function pos:start="1:1" pos:end="227:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">flac_read_header</name><parameter_list pos:start="1:28" pos:end="3:52">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:51"><decl pos:start="3:30" pos:end="3:51"><type pos:start="3:30" pos:end="3:51"><name pos:start="3:30" pos:end="3:47">AVFormatParameters</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:51">ap</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="227:1">{<block_content pos:start="7:5" pos:end="225:13">

    <decl_stmt pos:start="7:5" pos:end="7:79"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:26">metadata_last</name><init pos:start="7:27" pos:end="7:28">=<expr pos:start="7:28" pos:end="7:28"><literal type="number" pos:start="7:28" pos:end="7:28">0</literal></expr></init></decl>, <decl pos:start="7:31" pos:end="7:43"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:31" pos:end="7:43">metadata_type</name></decl>, <decl pos:start="7:46" pos:end="7:58"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:46" pos:end="7:58">metadata_size</name></decl>, <decl pos:start="7:61" pos:end="7:78"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:61" pos:end="7:76">found_streaminfo</name><init pos:start="7:77" pos:end="7:78">=<expr pos:start="7:78" pos:end="7:78"><literal type="number" pos:start="7:78" pos:end="7:78">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:21"><name pos:start="9:13" pos:end="9:18">header</name><index pos:start="9:19" pos:end="9:21">[<expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:19">buffer</name><init pos:start="11:20" pos:end="11:24">=<expr pos:start="11:21" pos:end="11:24"><name pos:start="11:21" pos:end="11:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:48"><decl pos:start="13:5" pos:end="13:47"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">AVStream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:16">st</name> <init pos:start="13:18" pos:end="13:47">= <expr pos:start="13:20" pos:end="13:47"><call pos:start="13:20" pos:end="13:47"><name pos:start="13:20" pos:end="13:38">avformat_new_stream</name><argument_list pos:start="13:39" pos:end="13:47">(<argument pos:start="13:40" pos:end="13:40"><expr pos:start="13:40" pos:end="13:40"><name pos:start="13:40" pos:end="13:40">s</name></expr></argument>, <argument pos:start="13:43" pos:end="13:46"><expr pos:start="13:43" pos:end="13:46"><name pos:start="13:43" pos:end="13:46">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="15:5" pos:end="17:31"><if pos:start="15:5" pos:end="17:31">if <condition pos:start="15:8" pos:end="15:12">(<expr pos:start="15:9" pos:end="15:11"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:11">st</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:47"><expr pos:start="19:5" pos:end="19:46"><name pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:6">st</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:13">codec</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:25">codec_type</name></name> <operator pos:start="19:27" pos:end="19:27">=</operator> <name pos:start="19:29" pos:end="19:46">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:40"><expr pos:start="21:5" pos:end="21:39"><name pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:6">st</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:13">codec</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:23">codec_id</name></name> <operator pos:start="21:25" pos:end="21:25">=</operator> <name pos:start="21:27" pos:end="21:39">CODEC_ID_FLAC</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:43"><expr pos:start="23:5" pos:end="23:42"><name pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:6">st</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:20">need_parsing</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:42">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt>

    <comment type="block" pos:start="25:5" pos:end="25:72">/* the parameters will be extracted from the compressed bitstream */</comment>



    <comment type="block" pos:start="29:5" pos:end="29:64">/* if fLaC marker is not found, assume there is no header */</comment>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:51">(<expr pos:start="31:9" pos:end="31:50"><call pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:17">avio_rl32</name><argument_list pos:start="31:18" pos:end="31:24">(<argument pos:start="31:19" pos:end="31:23"><expr pos:start="31:19" pos:end="31:23"><name pos:start="31:19" pos:end="31:23"><name pos:start="31:19" pos:end="31:19">s</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:23">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="31:26" pos:end="31:27">!=</operator> <call pos:start="31:29" pos:end="31:50"><name pos:start="31:29" pos:end="31:33">MKTAG</name><argument_list pos:start="31:34" pos:end="31:50">(<argument pos:start="31:35" pos:end="31:37"><expr pos:start="31:35" pos:end="31:37"><literal type="char" pos:start="31:35" pos:end="31:37">'f'</literal></expr></argument>,<argument pos:start="31:39" pos:end="31:41"><expr pos:start="31:39" pos:end="31:41"><literal type="char" pos:start="31:39" pos:end="31:41">'L'</literal></expr></argument>,<argument pos:start="31:43" pos:end="31:45"><expr pos:start="31:43" pos:end="31:45"><literal type="char" pos:start="31:43" pos:end="31:45">'a'</literal></expr></argument>,<argument pos:start="31:47" pos:end="31:49"><expr pos:start="31:47" pos:end="31:49"><literal type="char" pos:start="31:47" pos:end="31:49">'C'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:53" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:17">

        <expr_stmt pos:start="33:9" pos:end="33:39"><expr pos:start="33:9" pos:end="33:38"><call pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:17">avio_seek</name><argument_list pos:start="33:18" pos:end="33:38">(<argument pos:start="33:19" pos:end="33:23"><expr pos:start="33:19" pos:end="33:23"><name pos:start="33:19" pos:end="33:23"><name pos:start="33:19" pos:end="33:19">s</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:23">pb</name></name></expr></argument>, <argument pos:start="33:26" pos:end="33:27"><expr pos:start="33:26" pos:end="33:27"><operator pos:start="33:26" pos:end="33:26">-</operator><literal type="number" pos:start="33:27" pos:end="33:27">4</literal></expr></argument>, <argument pos:start="33:30" pos:end="33:37"><expr pos:start="33:30" pos:end="33:37"><name pos:start="33:30" pos:end="33:37">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:33">/* process metadata blocks */</comment>

    <while pos:start="43:5" pos:end="221:5">while <condition pos:start="43:11" pos:end="43:49">(<expr pos:start="43:12" pos:end="43:48"><operator pos:start="43:12" pos:end="43:12">!</operator><name pos:start="43:13" pos:end="43:30"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:17">pb</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:30">eof_reached</name></name> <operator pos:start="43:32" pos:end="43:33">&amp;&amp;</operator> <operator pos:start="43:35" pos:end="43:35">!</operator><name pos:start="43:36" pos:end="43:48">metadata_last</name></expr>)</condition> <block pos:start="43:51" pos:end="221:5">{<block_content pos:start="45:9" pos:end="219:9">

        <expr_stmt pos:start="45:9" pos:end="45:36"><expr pos:start="45:9" pos:end="45:35"><call pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:17">avio_read</name><argument_list pos:start="45:18" pos:end="45:35">(<argument pos:start="45:19" pos:end="45:23"><expr pos:start="45:19" pos:end="45:23"><name pos:start="45:19" pos:end="45:23"><name pos:start="45:19" pos:end="45:19">s</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:23">pb</name></name></expr></argument>, <argument pos:start="45:26" pos:end="45:31"><expr pos:start="45:26" pos:end="45:31"><name pos:start="45:26" pos:end="45:31">header</name></expr></argument>, <argument pos:start="45:34" pos:end="45:34"><expr pos:start="45:34" pos:end="45:34"><literal type="number" pos:start="45:34" pos:end="45:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="49:51"><expr pos:start="47:9" pos:end="49:50"><call pos:start="47:9" pos:end="49:50"><name pos:start="47:9" pos:end="47:38">avpriv_flac_parse_block_header</name><argument_list pos:start="47:39" pos:end="49:50">(<argument pos:start="47:40" pos:end="47:45"><expr pos:start="47:40" pos:end="47:45"><name pos:start="47:40" pos:end="47:45">header</name></expr></argument>, <argument pos:start="47:48" pos:end="47:61"><expr pos:start="47:48" pos:end="47:61"><operator pos:start="47:48" pos:end="47:48">&amp;</operator><name pos:start="47:49" pos:end="47:61">metadata_last</name></expr></argument>, <argument pos:start="47:64" pos:end="47:77"><expr pos:start="47:64" pos:end="47:77"><operator pos:start="47:64" pos:end="47:64">&amp;</operator><name pos:start="47:65" pos:end="47:77">metadata_type</name></expr></argument>,

                                   <argument pos:start="49:36" pos:end="49:49"><expr pos:start="49:36" pos:end="49:49"><operator pos:start="49:36" pos:end="49:36">&amp;</operator><name pos:start="49:37" pos:end="49:49">metadata_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="51:9" pos:end="89:9">switch <condition pos:start="51:16" pos:end="51:30">(<expr pos:start="51:17" pos:end="51:29"><name pos:start="51:17" pos:end="51:29">metadata_type</name></expr>)</condition> <block pos:start="51:32" pos:end="89:9">{<block_content pos:start="55:9" pos:end="87:27">

        <comment type="block" pos:start="53:9" pos:end="53:66">/* allocate and read metadata block for supported types */</comment>

        <case pos:start="55:9" pos:end="55:43">case <expr pos:start="55:14" pos:end="55:42"><name pos:start="55:14" pos:end="55:42">FLAC_METADATA_TYPE_STREAMINFO</name></expr>:</case>

        <case pos:start="57:9" pos:end="57:41">case <expr pos:start="57:14" pos:end="57:40"><name pos:start="57:14" pos:end="57:40">FLAC_METADATA_TYPE_CUESHEET</name></expr>:</case>

        <case pos:start="59:9" pos:end="59:47">case <expr pos:start="59:14" pos:end="59:46"><name pos:start="59:14" pos:end="59:46">FLAC_METADATA_TYPE_VORBIS_COMMENT</name></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:78"><expr pos:start="61:13" pos:end="61:77"><name pos:start="61:13" pos:end="61:18">buffer</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <call pos:start="61:22" pos:end="61:77"><name pos:start="61:22" pos:end="61:31">av_mallocz</name><argument_list pos:start="61:32" pos:end="61:77">(<argument pos:start="61:33" pos:end="61:76"><expr pos:start="61:33" pos:end="61:76"><name pos:start="61:33" pos:end="61:45">metadata_size</name> <operator pos:start="61:47" pos:end="61:47">+</operator> <name pos:start="61:49" pos:end="61:76">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="67:13"><if pos:start="63:13" pos:end="67:13">if <condition pos:start="63:16" pos:end="63:24">(<expr pos:start="63:17" pos:end="63:23"><operator pos:start="63:17" pos:end="63:17">!</operator><name pos:start="63:18" pos:end="63:23">buffer</name></expr>)</condition> <block pos:start="63:26" pos:end="67:13">{<block_content pos:start="65:17" pos:end="65:39">

                <return pos:start="65:17" pos:end="65:39">return <expr pos:start="65:24" pos:end="65:38"><call pos:start="65:24" pos:end="65:38"><name pos:start="65:24" pos:end="65:30">AVERROR</name><argument_list pos:start="65:31" pos:end="65:38">(<argument pos:start="65:32" pos:end="65:37"><expr pos:start="65:32" pos:end="65:37"><name pos:start="65:32" pos:end="65:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="69:13" pos:end="75:13"><if pos:start="69:13" pos:end="75:13">if <condition pos:start="69:16" pos:end="69:73">(<expr pos:start="69:17" pos:end="69:72"><call pos:start="69:17" pos:end="69:55"><name pos:start="69:17" pos:end="69:25">avio_read</name><argument_list pos:start="69:26" pos:end="69:55">(<argument pos:start="69:27" pos:end="69:31"><expr pos:start="69:27" pos:end="69:31"><name pos:start="69:27" pos:end="69:31"><name pos:start="69:27" pos:end="69:27">s</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:31">pb</name></name></expr></argument>, <argument pos:start="69:34" pos:end="69:39"><expr pos:start="69:34" pos:end="69:39"><name pos:start="69:34" pos:end="69:39">buffer</name></expr></argument>, <argument pos:start="69:42" pos:end="69:54"><expr pos:start="69:42" pos:end="69:54"><name pos:start="69:42" pos:end="69:54">metadata_size</name></expr></argument>)</argument_list></call> <operator pos:start="69:57" pos:end="69:58">!=</operator> <name pos:start="69:60" pos:end="69:72">metadata_size</name></expr>)</condition> <block pos:start="69:75" pos:end="75:13">{<block_content pos:start="71:17" pos:end="73:36">

                <expr_stmt pos:start="71:17" pos:end="71:34"><expr pos:start="71:17" pos:end="71:33"><call pos:start="71:17" pos:end="71:33"><name pos:start="71:17" pos:end="71:24">av_freep</name><argument_list pos:start="71:25" pos:end="71:33">(<argument pos:start="71:26" pos:end="71:32"><expr pos:start="71:26" pos:end="71:32"><operator pos:start="71:26" pos:end="71:26">&amp;</operator><name pos:start="71:27" pos:end="71:32">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="73:17" pos:end="73:36">return <expr pos:start="73:24" pos:end="73:35"><call pos:start="73:24" pos:end="73:35"><name pos:start="73:24" pos:end="73:30">AVERROR</name><argument_list pos:start="73:31" pos:end="73:35">(<argument pos:start="73:32" pos:end="73:34"><expr pos:start="73:32" pos:end="73:34"><name pos:start="73:32" pos:end="73:34">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <break pos:start="77:13" pos:end="77:18">break;</break>

        <comment type="block" pos:start="79:9" pos:end="79:55">/* skip metadata block for unsupported types */</comment>

        <default pos:start="81:9" pos:end="81:16">default:</default>

            <expr_stmt pos:start="83:13" pos:end="83:50"><expr pos:start="83:13" pos:end="83:49"><name pos:start="83:13" pos:end="83:15">ret</name> <operator pos:start="83:17" pos:end="83:17">=</operator> <call pos:start="83:19" pos:end="83:49"><name pos:start="83:19" pos:end="83:27">avio_skip</name><argument_list pos:start="83:28" pos:end="83:49">(<argument pos:start="83:29" pos:end="83:33"><expr pos:start="83:29" pos:end="83:33"><name pos:start="83:29" pos:end="83:33"><name pos:start="83:29" pos:end="83:29">s</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:33">pb</name></name></expr></argument>, <argument pos:start="83:36" pos:end="83:48"><expr pos:start="83:36" pos:end="83:48"><name pos:start="83:36" pos:end="83:48">metadata_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="85:13" pos:end="87:27"><if pos:start="85:13" pos:end="87:27">if <condition pos:start="85:16" pos:end="85:24">(<expr pos:start="85:17" pos:end="85:23"><name pos:start="85:17" pos:end="85:19">ret</name> <operator pos:start="85:21" pos:end="85:21">&lt;</operator> <literal type="number" pos:start="85:23" pos:end="85:23">0</literal></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:27"><block_content pos:start="87:17" pos:end="87:27">

                <return pos:start="87:17" pos:end="87:27">return <expr pos:start="87:24" pos:end="87:26"><name pos:start="87:24" pos:end="87:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></switch>



        <if_stmt pos:start="93:9" pos:end="219:9"><if pos:start="93:9" pos:end="143:9">if <condition pos:start="93:12" pos:end="93:59">(<expr pos:start="93:13" pos:end="93:58"><name pos:start="93:13" pos:end="93:25">metadata_type</name> <operator pos:start="93:27" pos:end="93:28">==</operator> <name pos:start="93:30" pos:end="93:58">FLAC_METADATA_TYPE_STREAMINFO</name></expr>)</condition> <block pos:start="93:61" pos:end="143:9">{<block_content pos:start="95:13" pos:end="141:13">

            <decl_stmt pos:start="95:13" pos:end="95:30"><decl pos:start="95:13" pos:end="95:29"><type pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:26">FLACStreaminfo</name></type> <name pos:start="95:28" pos:end="95:29">si</name></decl>;</decl_stmt>

            <comment type="block" pos:start="97:13" pos:end="97:48">/* STREAMINFO can only occur once */</comment>

            <if_stmt pos:start="99:13" pos:end="105:13"><if pos:start="99:13" pos:end="105:13">if <condition pos:start="99:16" pos:end="99:33">(<expr pos:start="99:17" pos:end="99:32"><name pos:start="99:17" pos:end="99:32">found_streaminfo</name></expr>)</condition> <block pos:start="99:35" pos:end="105:13">{<block_content pos:start="101:17" pos:end="103:43">

                <expr_stmt pos:start="101:17" pos:end="101:34"><expr pos:start="101:17" pos:end="101:33"><call pos:start="101:17" pos:end="101:33"><name pos:start="101:17" pos:end="101:24">av_freep</name><argument_list pos:start="101:25" pos:end="101:33">(<argument pos:start="101:26" pos:end="101:32"><expr pos:start="101:26" pos:end="101:32"><operator pos:start="101:26" pos:end="101:26">&amp;</operator><name pos:start="101:27" pos:end="101:32">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="103:17" pos:end="103:43">return <expr pos:start="103:24" pos:end="103:42"><name pos:start="103:24" pos:end="103:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="107:13" pos:end="113:13"><if pos:start="107:13" pos:end="113:13">if <condition pos:start="107:16" pos:end="107:54">(<expr pos:start="107:17" pos:end="107:53"><name pos:start="107:17" pos:end="107:29">metadata_size</name> <operator pos:start="107:31" pos:end="107:32">!=</operator> <name pos:start="107:34" pos:end="107:53">FLAC_STREAMINFO_SIZE</name></expr>)</condition> <block pos:start="107:56" pos:end="113:13">{<block_content pos:start="109:17" pos:end="111:43">

                <expr_stmt pos:start="109:17" pos:end="109:34"><expr pos:start="109:17" pos:end="109:33"><call pos:start="109:17" pos:end="109:33"><name pos:start="109:17" pos:end="109:24">av_freep</name><argument_list pos:start="109:25" pos:end="109:33">(<argument pos:start="109:26" pos:end="109:32"><expr pos:start="109:26" pos:end="109:32"><operator pos:start="109:26" pos:end="109:26">&amp;</operator><name pos:start="109:27" pos:end="109:32">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="111:17" pos:end="111:43">return <expr pos:start="111:24" pos:end="111:42"><name pos:start="111:24" pos:end="111:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:33"><expr pos:start="115:13" pos:end="115:32"><name pos:start="115:13" pos:end="115:28">found_streaminfo</name> <operator pos:start="115:30" pos:end="115:30">=</operator> <literal type="number" pos:start="115:32" pos:end="115:32">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:47"><expr pos:start="117:13" pos:end="117:46"><name pos:start="117:13" pos:end="117:32"><name pos:start="117:13" pos:end="117:14">st</name><operator pos:start="117:15" pos:end="117:16">-&gt;</operator><name pos:start="117:17" pos:end="117:21">codec</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:32">extradata</name></name>      <operator pos:start="117:39" pos:end="117:39">=</operator> <name pos:start="117:41" pos:end="117:46">buffer</name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:54"><expr pos:start="119:13" pos:end="119:53"><name pos:start="119:13" pos:end="119:37"><name pos:start="119:13" pos:end="119:14">st</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:21">codec</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:37">extradata_size</name></name> <operator pos:start="119:39" pos:end="119:39">=</operator> <name pos:start="119:41" pos:end="119:53">metadata_size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:26"><expr pos:start="121:13" pos:end="121:25"><name pos:start="121:13" pos:end="121:18">buffer</name> <operator pos:start="121:20" pos:end="121:20">=</operator> <name pos:start="121:22" pos:end="121:25">NULL</name></expr>;</expr_stmt>



            <comment type="block" pos:start="125:13" pos:end="125:57">/* get codec params from STREAMINFO header */</comment>

            <expr_stmt pos:start="127:13" pos:end="127:79"><expr pos:start="127:13" pos:end="127:78"><call pos:start="127:13" pos:end="127:78"><name pos:start="127:13" pos:end="127:40">avpriv_flac_parse_streaminfo</name><argument_list pos:start="127:41" pos:end="127:78">(<argument pos:start="127:42" pos:end="127:50"><expr pos:start="127:42" pos:end="127:50"><name pos:start="127:42" pos:end="127:50"><name pos:start="127:42" pos:end="127:43">st</name><operator pos:start="127:44" pos:end="127:45">-&gt;</operator><name pos:start="127:46" pos:end="127:50">codec</name></name></expr></argument>, <argument pos:start="127:53" pos:end="127:55"><expr pos:start="127:53" pos:end="127:55"><operator pos:start="127:53" pos:end="127:53">&amp;</operator><name pos:start="127:54" pos:end="127:55">si</name></expr></argument>, <argument pos:start="127:58" pos:end="127:77"><expr pos:start="127:58" pos:end="127:77"><name pos:start="127:58" pos:end="127:77"><name pos:start="127:58" pos:end="127:59">st</name><operator pos:start="127:60" pos:end="127:61">-&gt;</operator><name pos:start="127:62" pos:end="127:66">codec</name><operator pos:start="127:67" pos:end="127:68">-&gt;</operator><name pos:start="127:69" pos:end="127:77">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="131:13" pos:end="131:44">/* set time base and duration */</comment>

            <if_stmt pos:start="133:13" pos:end="141:13"><if pos:start="133:13" pos:end="141:13">if <condition pos:start="133:16" pos:end="133:34">(<expr pos:start="133:17" pos:end="133:33"><name pos:start="133:17" pos:end="133:29"><name pos:start="133:17" pos:end="133:18">si</name><operator pos:start="133:19" pos:end="133:19">.</operator><name pos:start="133:20" pos:end="133:29">samplerate</name></name> <operator pos:start="133:31" pos:end="133:31">&gt;</operator> <literal type="number" pos:start="133:33" pos:end="133:33">0</literal></expr>)</condition> <block pos:start="133:36" pos:end="141:13">{<block_content pos:start="135:17" pos:end="139:46">

                <expr_stmt pos:start="135:17" pos:end="135:62"><expr pos:start="135:17" pos:end="135:61"><call pos:start="135:17" pos:end="135:61"><name pos:start="135:17" pos:end="135:35">avpriv_set_pts_info</name><argument_list pos:start="135:36" pos:end="135:61">(<argument pos:start="135:37" pos:end="135:38"><expr pos:start="135:37" pos:end="135:38"><name pos:start="135:37" pos:end="135:38">st</name></expr></argument>, <argument pos:start="135:41" pos:end="135:42"><expr pos:start="135:41" pos:end="135:42"><literal type="number" pos:start="135:41" pos:end="135:42">64</literal></expr></argument>, <argument pos:start="135:45" pos:end="135:45"><expr pos:start="135:45" pos:end="135:45"><literal type="number" pos:start="135:45" pos:end="135:45">1</literal></expr></argument>, <argument pos:start="135:48" pos:end="135:60"><expr pos:start="135:48" pos:end="135:60"><name pos:start="135:48" pos:end="135:60"><name pos:start="135:48" pos:end="135:49">si</name><operator pos:start="135:50" pos:end="135:50">.</operator><name pos:start="135:51" pos:end="135:60">samplerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="137:17" pos:end="139:46"><if pos:start="137:17" pos:end="139:46">if <condition pos:start="137:20" pos:end="137:35">(<expr pos:start="137:21" pos:end="137:34"><name pos:start="137:21" pos:end="137:30"><name pos:start="137:21" pos:end="137:22">si</name><operator pos:start="137:23" pos:end="137:23">.</operator><name pos:start="137:24" pos:end="137:30">samples</name></name> <operator pos:start="137:32" pos:end="137:32">&gt;</operator> <literal type="number" pos:start="137:34" pos:end="137:34">0</literal></expr>)</condition><block type="pseudo" pos:start="139:21" pos:end="139:46"><block_content pos:start="139:21" pos:end="139:46">

                    <expr_stmt pos:start="139:21" pos:end="139:46"><expr pos:start="139:21" pos:end="139:45"><name pos:start="139:21" pos:end="139:32"><name pos:start="139:21" pos:end="139:22">st</name><operator pos:start="139:23" pos:end="139:24">-&gt;</operator><name pos:start="139:25" pos:end="139:32">duration</name></name> <operator pos:start="139:34" pos:end="139:34">=</operator> <name pos:start="139:36" pos:end="139:45"><name pos:start="139:36" pos:end="139:37">si</name><operator pos:start="139:38" pos:end="139:38">.</operator><name pos:start="139:39" pos:end="139:45">samples</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="143:11" pos:end="193:9">else if <condition pos:start="143:19" pos:end="143:64">(<expr pos:start="143:20" pos:end="143:63"><name pos:start="143:20" pos:end="143:32">metadata_type</name> <operator pos:start="143:34" pos:end="143:35">==</operator> <name pos:start="143:37" pos:end="143:63">FLAC_METADATA_TYPE_CUESHEET</name></expr>)</condition> <block pos:start="143:66" pos:end="193:9">{<block_content pos:start="145:13" pos:end="191:13">

            <decl_stmt pos:start="145:13" pos:end="145:29"><decl pos:start="145:13" pos:end="145:28"><type pos:start="145:13" pos:end="145:19"><name pos:start="145:13" pos:end="145:19">uint8_t</name></type> <name pos:start="145:21" pos:end="145:28"><name pos:start="145:21" pos:end="145:24">isrc</name><index pos:start="145:25" pos:end="145:28">[<expr pos:start="145:26" pos:end="145:27"><literal type="number" pos:start="145:26" pos:end="145:27">13</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="147:13" pos:end="147:27"><decl pos:start="147:13" pos:end="147:26"><type pos:start="147:13" pos:end="147:20"><name pos:start="147:13" pos:end="147:20">uint64_t</name></type> <name pos:start="147:22" pos:end="147:26">start</name></decl>;</decl_stmt>

            <decl_stmt pos:start="149:13" pos:end="149:34"><decl pos:start="149:13" pos:end="149:33"><type pos:start="149:13" pos:end="149:27"><specifier pos:start="149:13" pos:end="149:17">const</specifier> <name pos:start="149:19" pos:end="149:25">uint8_t</name> <modifier pos:start="149:27" pos:end="149:27">*</modifier></type><name pos:start="149:28" pos:end="149:33">offset</name></decl>;</decl_stmt>

            <decl_stmt pos:start="151:13" pos:end="151:42"><decl pos:start="151:13" pos:end="151:17"><type pos:start="151:13" pos:end="151:15"><name pos:start="151:13" pos:end="151:15">int</name></type> <name pos:start="151:17" pos:end="151:17">i</name></decl>, <decl pos:start="151:20" pos:end="151:20"><type ref="prev" pos:start="151:13" pos:end="151:15"/><name pos:start="151:20" pos:end="151:20">j</name></decl>, <decl pos:start="151:23" pos:end="151:30"><type ref="prev" pos:start="151:13" pos:end="151:15"/><name pos:start="151:23" pos:end="151:30">chapters</name></decl>, <decl pos:start="151:33" pos:end="151:37"><type ref="prev" pos:start="151:13" pos:end="151:15"/><name pos:start="151:33" pos:end="151:37">track</name></decl>, <decl pos:start="151:40" pos:end="151:41"><type ref="prev" pos:start="151:13" pos:end="151:15"/><name pos:start="151:40" pos:end="151:41">ti</name></decl>;</decl_stmt>

            <if_stmt pos:start="153:13" pos:end="155:43"><if pos:start="153:13" pos:end="155:43">if <condition pos:start="153:16" pos:end="153:36">(<expr pos:start="153:17" pos:end="153:35"><name pos:start="153:17" pos:end="153:29">metadata_size</name> <operator pos:start="153:31" pos:end="153:31">&lt;</operator> <literal type="number" pos:start="153:33" pos:end="153:35">431</literal></expr>)</condition><block type="pseudo" pos:start="155:17" pos:end="155:43"><block_content pos:start="155:17" pos:end="155:43">

                <return pos:start="155:17" pos:end="155:43">return <expr pos:start="155:24" pos:end="155:42"><name pos:start="155:24" pos:end="155:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:34"><expr pos:start="157:13" pos:end="157:33"><name pos:start="157:13" pos:end="157:18">offset</name> <operator pos:start="157:20" pos:end="157:20">=</operator> <name pos:start="157:22" pos:end="157:27">buffer</name> <operator pos:start="157:29" pos:end="157:29">+</operator> <literal type="number" pos:start="157:31" pos:end="157:33">395</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:56"><expr pos:start="159:13" pos:end="159:55"><name pos:start="159:13" pos:end="159:20">chapters</name> <operator pos:start="159:22" pos:end="159:22">=</operator> <call pos:start="159:24" pos:end="159:51"><name pos:start="159:24" pos:end="159:42">bytestream_get_byte</name><argument_list pos:start="159:43" pos:end="159:51">(<argument pos:start="159:44" pos:end="159:50"><expr pos:start="159:44" pos:end="159:50"><operator pos:start="159:44" pos:end="159:44">&amp;</operator><name pos:start="159:45" pos:end="159:50">offset</name></expr></argument>)</argument_list></call> <operator pos:start="159:53" pos:end="159:53">-</operator> <literal type="number" pos:start="159:55" pos:end="159:55">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="161:13" pos:end="163:43"><if pos:start="161:13" pos:end="163:43">if <condition pos:start="161:16" pos:end="161:30">(<expr pos:start="161:17" pos:end="161:29"><name pos:start="161:17" pos:end="161:24">chapters</name> <operator pos:start="161:26" pos:end="161:27">&lt;=</operator> <literal type="number" pos:start="161:29" pos:end="161:29">0</literal></expr>)</condition><block type="pseudo" pos:start="163:17" pos:end="163:43"><block_content pos:start="163:17" pos:end="163:43">

                <return pos:start="163:17" pos:end="163:43">return <expr pos:start="163:24" pos:end="163:42"><name pos:start="163:24" pos:end="163:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <for pos:start="165:13" pos:end="191:13">for <control pos:start="165:17" pos:end="165:42">(<init pos:start="165:18" pos:end="165:23"><expr pos:start="165:18" pos:end="165:22"><name pos:start="165:18" pos:end="165:18">i</name> <operator pos:start="165:20" pos:end="165:20">=</operator> <literal type="number" pos:start="165:22" pos:end="165:22">0</literal></expr>;</init> <condition pos:start="165:25" pos:end="165:37"><expr pos:start="165:25" pos:end="165:36"><name pos:start="165:25" pos:end="165:25">i</name> <operator pos:start="165:27" pos:end="165:27">&lt;</operator> <name pos:start="165:29" pos:end="165:36">chapters</name></expr>;</condition> <incr pos:start="165:39" pos:end="165:41"><expr pos:start="165:39" pos:end="165:41"><name pos:start="165:39" pos:end="165:39">i</name><operator pos:start="165:40" pos:end="165:41">++</operator></expr></incr>)</control> <block pos:start="165:44" pos:end="191:13">{<block_content pos:start="167:17" pos:end="189:89">

                <if_stmt pos:start="167:17" pos:end="169:47"><if pos:start="167:17" pos:end="169:47">if <condition pos:start="167:20" pos:end="167:57">(<expr pos:start="167:21" pos:end="167:56"><name pos:start="167:21" pos:end="167:26">offset</name> <operator pos:start="167:28" pos:end="167:28">+</operator> <literal type="number" pos:start="167:30" pos:end="167:33">36</literal> <operator pos:start="167:33" pos:end="167:33">-</operator> <name pos:start="167:35" pos:end="167:40">buffer</name> <operator pos:start="167:42" pos:end="167:42">&gt;</operator> <name pos:start="167:44" pos:end="167:56">metadata_size</name></expr>)</condition><block type="pseudo" pos:start="169:21" pos:end="169:47"><block_content pos:start="169:21" pos:end="169:47">

                    <return pos:start="169:21" pos:end="169:47">return <expr pos:start="169:28" pos:end="169:46"><name pos:start="169:28" pos:end="169:46">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:53"><expr pos:start="171:17" pos:end="171:52"><name pos:start="171:17" pos:end="171:21">start</name> <operator pos:start="171:23" pos:end="171:23">=</operator> <call pos:start="171:25" pos:end="171:52"><name pos:start="171:25" pos:end="171:43">bytestream_get_be64</name><argument_list pos:start="171:44" pos:end="171:52">(<argument pos:start="171:45" pos:end="171:51"><expr pos:start="171:45" pos:end="171:51"><operator pos:start="171:45" pos:end="171:45">&amp;</operator><name pos:start="171:46" pos:end="171:51">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:53"><expr pos:start="173:17" pos:end="173:52"><name pos:start="173:17" pos:end="173:21">track</name> <operator pos:start="173:23" pos:end="173:23">=</operator> <call pos:start="173:25" pos:end="173:52"><name pos:start="173:25" pos:end="173:43">bytestream_get_byte</name><argument_list pos:start="173:44" pos:end="173:52">(<argument pos:start="173:45" pos:end="173:51"><expr pos:start="173:45" pos:end="173:51"><operator pos:start="173:45" pos:end="173:45">&amp;</operator><name pos:start="173:46" pos:end="173:51">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:57"><expr pos:start="175:17" pos:end="175:56"><call pos:start="175:17" pos:end="175:56"><name pos:start="175:17" pos:end="175:37">bytestream_get_buffer</name><argument_list pos:start="175:38" pos:end="175:56">(<argument pos:start="175:39" pos:end="175:45"><expr pos:start="175:39" pos:end="175:45"><operator pos:start="175:39" pos:end="175:39">&amp;</operator><name pos:start="175:40" pos:end="175:45">offset</name></expr></argument>, <argument pos:start="175:48" pos:end="175:51"><expr pos:start="175:48" pos:end="175:51"><name pos:start="175:48" pos:end="175:51">isrc</name></expr></argument>, <argument pos:start="175:54" pos:end="175:55"><expr pos:start="175:54" pos:end="175:55"><literal type="number" pos:start="175:54" pos:end="175:55">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:29"><expr pos:start="177:17" pos:end="177:28"><name pos:start="177:17" pos:end="177:24"><name pos:start="177:17" pos:end="177:20">isrc</name><index pos:start="177:21" pos:end="177:24">[<expr pos:start="177:22" pos:end="177:23"><literal type="number" pos:start="177:22" pos:end="177:23">12</literal></expr>]</index></name> <operator pos:start="177:26" pos:end="177:26">=</operator> <literal type="number" pos:start="177:28" pos:end="177:28">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:29"><expr pos:start="179:17" pos:end="179:28"><name pos:start="179:17" pos:end="179:22">offset</name> <operator pos:start="179:24" pos:end="179:25">+=</operator> <literal type="number" pos:start="179:27" pos:end="179:28">14</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="181:17" pos:end="181:50"><expr pos:start="181:17" pos:end="181:49"><name pos:start="181:17" pos:end="181:18">ti</name> <operator pos:start="181:20" pos:end="181:20">=</operator> <call pos:start="181:22" pos:end="181:49"><name pos:start="181:22" pos:end="181:40">bytestream_get_byte</name><argument_list pos:start="181:41" pos:end="181:49">(<argument pos:start="181:42" pos:end="181:48"><expr pos:start="181:42" pos:end="181:48"><operator pos:start="181:42" pos:end="181:42">&amp;</operator><name pos:start="181:43" pos:end="181:48">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="183:17" pos:end="183:56"><if pos:start="183:17" pos:end="183:56">if <condition pos:start="183:20" pos:end="183:28">(<expr pos:start="183:21" pos:end="183:27"><name pos:start="183:21" pos:end="183:22">ti</name> <operator pos:start="183:24" pos:end="183:25">&lt;=</operator> <literal type="number" pos:start="183:27" pos:end="183:27">0</literal></expr>)</condition><block type="pseudo" pos:start="183:30" pos:end="183:56"><block_content pos:start="183:30" pos:end="183:56"> <return pos:start="183:30" pos:end="183:56">return <expr pos:start="183:37" pos:end="183:55"><name pos:start="183:37" pos:end="183:55">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                <for pos:start="185:17" pos:end="187:33">for <control pos:start="185:21" pos:end="185:40">(<init pos:start="185:22" pos:end="185:27"><expr pos:start="185:22" pos:end="185:26"><name pos:start="185:22" pos:end="185:22">j</name> <operator pos:start="185:24" pos:end="185:24">=</operator> <literal type="number" pos:start="185:26" pos:end="185:26">0</literal></expr>;</init> <condition pos:start="185:29" pos:end="185:35"><expr pos:start="185:29" pos:end="185:34"><name pos:start="185:29" pos:end="185:29">j</name> <operator pos:start="185:31" pos:end="185:31">&lt;</operator> <name pos:start="185:33" pos:end="185:34">ti</name></expr>;</condition> <incr pos:start="185:37" pos:end="185:39"><expr pos:start="185:37" pos:end="185:39"><name pos:start="185:37" pos:end="185:37">j</name><operator pos:start="185:38" pos:end="185:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="187:21" pos:end="187:33"><block_content pos:start="187:21" pos:end="187:33">

                    <expr_stmt pos:start="187:21" pos:end="187:33"><expr pos:start="187:21" pos:end="187:32"><name pos:start="187:21" pos:end="187:26">offset</name> <operator pos:start="187:28" pos:end="187:29">+=</operator> <literal type="number" pos:start="187:31" pos:end="187:32">12</literal></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="189:17" pos:end="189:89"><expr pos:start="189:17" pos:end="189:88"><call pos:start="189:17" pos:end="189:88"><name pos:start="189:17" pos:end="189:34">avpriv_new_chapter</name><argument_list pos:start="189:35" pos:end="189:88">(<argument pos:start="189:36" pos:end="189:36"><expr pos:start="189:36" pos:end="189:36"><name pos:start="189:36" pos:end="189:36">s</name></expr></argument>, <argument pos:start="189:39" pos:end="189:43"><expr pos:start="189:39" pos:end="189:43"><name pos:start="189:39" pos:end="189:43">track</name></expr></argument>, <argument pos:start="189:46" pos:end="189:58"><expr pos:start="189:46" pos:end="189:58"><name pos:start="189:46" pos:end="189:58"><name pos:start="189:46" pos:end="189:47">st</name><operator pos:start="189:48" pos:end="189:49">-&gt;</operator><name pos:start="189:50" pos:end="189:58">time_base</name></name></expr></argument>, <argument pos:start="189:61" pos:end="189:65"><expr pos:start="189:61" pos:end="189:65"><name pos:start="189:61" pos:end="189:65">start</name></expr></argument>, <argument pos:start="189:68" pos:end="189:81"><expr pos:start="189:68" pos:end="189:81"><name pos:start="189:68" pos:end="189:81">AV_NOPTS_VALUE</name></expr></argument>, <argument pos:start="189:84" pos:end="189:87"><expr pos:start="189:84" pos:end="189:87"><name pos:start="189:84" pos:end="189:87">isrc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="193:11" pos:end="219:9">else <block pos:start="193:16" pos:end="219:9">{<block_content pos:start="197:13" pos:end="217:30">

            <comment type="block" pos:start="195:13" pos:end="195:52">/* STREAMINFO must be the first block */</comment>

            <if_stmt pos:start="197:13" pos:end="203:13"><if pos:start="197:13" pos:end="203:13">if <condition pos:start="197:16" pos:end="197:34">(<expr pos:start="197:17" pos:end="197:33"><operator pos:start="197:17" pos:end="197:17">!</operator><name pos:start="197:18" pos:end="197:33">found_streaminfo</name></expr>)</condition> <block pos:start="197:36" pos:end="203:13">{<block_content pos:start="199:17" pos:end="201:43">

                <expr_stmt pos:start="199:17" pos:end="199:34"><expr pos:start="199:17" pos:end="199:33"><call pos:start="199:17" pos:end="199:33"><name pos:start="199:17" pos:end="199:24">av_freep</name><argument_list pos:start="199:25" pos:end="199:33">(<argument pos:start="199:26" pos:end="199:32"><expr pos:start="199:26" pos:end="199:32"><operator pos:start="199:26" pos:end="199:26">&amp;</operator><name pos:start="199:27" pos:end="199:32">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="201:17" pos:end="201:43">return <expr pos:start="201:24" pos:end="201:42"><name pos:start="201:24" pos:end="201:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="205:13" pos:end="205:64">/* process supported blocks other than STREAMINFO */</comment>

            <if_stmt pos:start="207:13" pos:end="215:13"><if pos:start="207:13" pos:end="215:13">if <condition pos:start="207:16" pos:end="207:67">(<expr pos:start="207:17" pos:end="207:66"><name pos:start="207:17" pos:end="207:29">metadata_type</name> <operator pos:start="207:31" pos:end="207:32">==</operator> <name pos:start="207:34" pos:end="207:66">FLAC_METADATA_TYPE_VORBIS_COMMENT</name></expr>)</condition> <block pos:start="207:69" pos:end="215:13">{<block_content pos:start="209:17" pos:end="213:17">

                <if_stmt pos:start="209:17" pos:end="213:17"><if pos:start="209:17" pos:end="213:17">if <condition pos:start="209:20" pos:end="209:78">(<expr pos:start="209:21" pos:end="209:77"><call pos:start="209:21" pos:end="209:77"><name pos:start="209:21" pos:end="209:37">ff_vorbis_comment</name><argument_list pos:start="209:38" pos:end="209:77">(<argument pos:start="209:39" pos:end="209:39"><expr pos:start="209:39" pos:end="209:39"><name pos:start="209:39" pos:end="209:39">s</name></expr></argument>, <argument pos:start="209:42" pos:end="209:53"><expr pos:start="209:42" pos:end="209:53"><operator pos:start="209:42" pos:end="209:42">&amp;</operator><name pos:start="209:43" pos:end="209:53"><name pos:start="209:43" pos:end="209:43">s</name><operator pos:start="209:44" pos:end="209:45">-&gt;</operator><name pos:start="209:46" pos:end="209:53">metadata</name></name></expr></argument>, <argument pos:start="209:56" pos:end="209:61"><expr pos:start="209:56" pos:end="209:61"><name pos:start="209:56" pos:end="209:61">buffer</name></expr></argument>, <argument pos:start="209:64" pos:end="209:76"><expr pos:start="209:64" pos:end="209:76"><name pos:start="209:64" pos:end="209:76">metadata_size</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="209:80" pos:end="213:17">{<block_content pos:start="211:21" pos:end="211:88">

                    <expr_stmt pos:start="211:21" pos:end="211:88"><expr pos:start="211:21" pos:end="211:87"><call pos:start="211:21" pos:end="211:87"><name pos:start="211:21" pos:end="211:26">av_log</name><argument_list pos:start="211:27" pos:end="211:87">(<argument pos:start="211:28" pos:end="211:28"><expr pos:start="211:28" pos:end="211:28"><name pos:start="211:28" pos:end="211:28">s</name></expr></argument>, <argument pos:start="211:31" pos:end="211:44"><expr pos:start="211:31" pos:end="211:44"><name pos:start="211:31" pos:end="211:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="211:47" pos:end="211:86"><expr pos:start="211:47" pos:end="211:86"><literal type="string" pos:start="211:47" pos:end="211:86">"error parsing VorbisComment metadata\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:30"><expr pos:start="217:13" pos:end="217:29"><call pos:start="217:13" pos:end="217:29"><name pos:start="217:13" pos:end="217:20">av_freep</name><argument_list pos:start="217:21" pos:end="217:29">(<argument pos:start="217:22" pos:end="217:28"><expr pos:start="217:22" pos:end="217:28"><operator pos:start="217:22" pos:end="217:22">&amp;</operator><name pos:start="217:23" pos:end="217:28">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <return pos:start="225:5" pos:end="225:13">return <expr pos:start="225:12" pos:end="225:12"><literal type="number" pos:start="225:12" pos:end="225:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
