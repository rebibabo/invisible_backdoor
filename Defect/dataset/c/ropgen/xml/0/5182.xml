<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5182.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">dxva2_h264_decode_slice</name><parameter_list pos:start="1:35" pos:end="5:49">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:56"><name pos:start="1:36" pos:end="1:49">AVCodecContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:56">avctx</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:56"><decl pos:start="3:36" pos:end="3:56"><type pos:start="3:36" pos:end="3:56"><specifier pos:start="3:36" pos:end="3:40">const</specifier> <name pos:start="3:42" pos:end="3:48">uint8_t</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:56">buffer</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:48"><decl pos:start="5:36" pos:end="5:48"><type pos:start="5:36" pos:end="5:48"><name pos:start="5:36" pos:end="5:43">uint32_t</name></type> <name pos:start="5:45" pos:end="5:48">size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="59:1">{<block_content pos:start="9:5" pos:end="57:13">

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:23"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:21">H264Context</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:24">h</name> <init pos:start="9:26" pos:end="9:43">= <expr pos:start="9:28" pos:end="9:43"><name pos:start="9:28" pos:end="9:43"><name pos:start="9:28" pos:end="9:32">avctx</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:54"><decl pos:start="11:5" pos:end="11:53"><type pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:23">dxva_context</name></name> <modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:28">ctx</name> <init pos:start="11:30" pos:end="11:53">= <expr pos:start="11:32" pos:end="11:53"><name pos:start="11:32" pos:end="11:53"><name pos:start="11:32" pos:end="11:36">avctx</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:53">hwaccel_context</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:51"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">Picture</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:34">current_picture</name> <init pos:start="13:36" pos:end="13:51">= <expr pos:start="13:38" pos:end="13:51"><name pos:start="13:38" pos:end="13:51"><name pos:start="13:38" pos:end="13:38">h</name><operator pos:start="13:39" pos:end="13:40">-&gt;</operator><name pos:start="13:41" pos:end="13:51">cur_pic_ptr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:85"><decl pos:start="15:5" pos:end="15:84"><type pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:32">dxva2_picture_context</name></name> <modifier pos:start="15:34" pos:end="15:34">*</modifier></type><name pos:start="15:35" pos:end="15:41">ctx_pic</name> <init pos:start="15:43" pos:end="15:84">= <expr pos:start="15:45" pos:end="15:84"><name pos:start="15:45" pos:end="15:84"><name pos:start="15:45" pos:end="15:59">current_picture</name><operator pos:start="15:60" pos:end="15:61">-&gt;</operator><name pos:start="15:62" pos:end="15:84">hwaccel_picture_private</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">unsigned</name></type> <name pos:start="17:14" pos:end="17:21">position</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if <condition pos:start="21:8" pos:end="21:43">(<expr pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:15">ctx_pic</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:28">slice_count</name></name> <operator pos:start="21:30" pos:end="21:31">&gt;=</operator> <name pos:start="21:33" pos:end="21:42">MAX_SLICES</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="29:36"><if pos:start="27:5" pos:end="29:36">if <condition pos:start="27:8" pos:end="27:28">(<expr pos:start="27:9" pos:end="27:27"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:27"><name pos:start="27:10" pos:end="27:16">ctx_pic</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:27">bitstream</name></name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:36"><block_content pos:start="29:9" pos:end="29:36">

        <expr_stmt pos:start="29:9" pos:end="29:36"><expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:15">ctx_pic</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:26">bitstream</name></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <name pos:start="29:30" pos:end="29:35">buffer</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:11">ctx_pic</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:27">bitstream_size</name></name> <operator pos:start="31:29" pos:end="31:30">+=</operator> <name pos:start="31:32" pos:end="31:35">size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:43"><expr pos:start="35:5" pos:end="35:42"><name pos:start="35:5" pos:end="35:12">position</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <name pos:start="35:16" pos:end="35:21">buffer</name> <operator pos:start="35:23" pos:end="35:23">-</operator> <name pos:start="35:25" pos:end="35:42"><name pos:start="35:25" pos:end="35:31">ctx_pic</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:42">bitstream</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="47:40"><if pos:start="37:5" pos:end="41:41">if <condition pos:start="37:8" pos:end="37:28">(<expr pos:start="37:9" pos:end="37:27"><call pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:22">is_slice_short</name><argument_list pos:start="37:23" pos:end="37:27">(<argument pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">ctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="41:41"><block_content pos:start="39:9" pos:end="41:41">

        <expr_stmt pos:start="39:9" pos:end="41:41"><expr pos:start="39:9" pos:end="41:40"><call pos:start="39:9" pos:end="41:40"><name pos:start="39:9" pos:end="39:24">fill_slice_short</name><argument_list pos:start="39:25" pos:end="41:40">(<argument pos:start="39:26" pos:end="39:68"><expr pos:start="39:26" pos:end="39:68"><operator pos:start="39:26" pos:end="39:26">&amp;</operator><name pos:start="39:27" pos:end="39:68"><name pos:start="39:27" pos:end="39:33">ctx_pic</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:46">slice_short</name><index pos:start="39:47" pos:end="39:68">[<expr pos:start="39:48" pos:end="39:67"><name pos:start="39:48" pos:end="39:67"><name pos:start="39:48" pos:end="39:54">ctx_pic</name><operator pos:start="39:55" pos:end="39:56">-&gt;</operator><name pos:start="39:57" pos:end="39:67">slice_count</name></name></expr>]</index></name></expr></argument>,

                         <argument pos:start="41:26" pos:end="41:33"><expr pos:start="41:26" pos:end="41:33"><name pos:start="41:26" pos:end="41:33">position</name></expr></argument>, <argument pos:start="41:36" pos:end="41:39"><expr pos:start="41:36" pos:end="41:39"><name pos:start="41:36" pos:end="41:39">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="43:5" pos:end="47:40">else<block type="pseudo" pos:start="45:9" pos:end="47:40"><block_content pos:start="45:9" pos:end="47:40">

        <expr_stmt pos:start="45:9" pos:end="47:40"><expr pos:start="45:9" pos:end="47:39"><call pos:start="45:9" pos:end="47:39"><name pos:start="45:9" pos:end="45:23">fill_slice_long</name><argument_list pos:start="45:24" pos:end="47:39">(<argument pos:start="45:25" pos:end="45:29"><expr pos:start="45:25" pos:end="45:29"><name pos:start="45:25" pos:end="45:29">avctx</name></expr></argument>, <argument pos:start="45:32" pos:end="45:73"><expr pos:start="45:32" pos:end="45:73"><operator pos:start="45:32" pos:end="45:32">&amp;</operator><name pos:start="45:33" pos:end="45:73"><name pos:start="45:33" pos:end="45:39">ctx_pic</name><operator pos:start="45:40" pos:end="45:41">-&gt;</operator><name pos:start="45:42" pos:end="45:51">slice_long</name><index pos:start="45:52" pos:end="45:73">[<expr pos:start="45:53" pos:end="45:72"><name pos:start="45:53" pos:end="45:72"><name pos:start="45:53" pos:end="45:59">ctx_pic</name><operator pos:start="45:60" pos:end="45:61">-&gt;</operator><name pos:start="45:62" pos:end="45:72">slice_count</name></name></expr>]</index></name></expr></argument>,

                        <argument pos:start="47:25" pos:end="47:32"><expr pos:start="47:25" pos:end="47:32"><name pos:start="47:25" pos:end="47:32">position</name></expr></argument>, <argument pos:start="47:35" pos:end="47:38"><expr pos:start="47:35" pos:end="47:38"><name pos:start="47:35" pos:end="47:38">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:27"><expr pos:start="49:5" pos:end="49:26"><name pos:start="49:5" pos:end="49:24"><name pos:start="49:5" pos:end="49:11">ctx_pic</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:24">slice_count</name></name><operator pos:start="49:25" pos:end="49:26">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="55:45"><if pos:start="53:5" pos:end="55:45">if <condition pos:start="53:8" pos:end="53:82">(<expr pos:start="53:9" pos:end="53:81"><name pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:9">h</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:21">slice_type</name></name> <operator pos:start="53:23" pos:end="53:24">!=</operator> <name pos:start="53:26" pos:end="53:42">AV_PICTURE_TYPE_I</name> <operator pos:start="53:44" pos:end="53:45">&amp;&amp;</operator> <name pos:start="53:47" pos:end="53:59"><name pos:start="53:47" pos:end="53:47">h</name><operator pos:start="53:48" pos:end="53:49">-&gt;</operator><name pos:start="53:50" pos:end="53:59">slice_type</name></name> <operator pos:start="53:61" pos:end="53:62">!=</operator> <name pos:start="53:64" pos:end="53:81">AV_PICTURE_TYPE_SI</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:45"><block_content pos:start="55:9" pos:end="55:45">

        <expr_stmt pos:start="55:9" pos:end="55:45"><expr pos:start="55:9" pos:end="55:44"><name pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:15">ctx_pic</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:19">pp</name><operator pos:start="55:20" pos:end="55:20">.</operator><name pos:start="55:21" pos:end="55:30">wBitFields</name></name> <operator pos:start="55:32" pos:end="55:33">&amp;=</operator> <operator pos:start="55:35" pos:end="55:35">~</operator><operator pos:start="55:36" pos:end="55:36">(</operator><literal type="number" pos:start="55:37" pos:end="55:37">1</literal> <operator pos:start="55:39" pos:end="55:40">&lt;&lt;</operator> <literal type="number" pos:start="55:42" pos:end="55:43">15</literal><operator pos:start="55:44" pos:end="55:44">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="55:47" pos:end="55:73">/* Set IntraPicFlag to 0 */</comment>

    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
