<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15251.c" pos:tabs="8"><function pos:start="1:1" pos:end="1099:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">cfhd_decode</name><parameter_list pos:start="1:23" pos:end="3:39">(<parameter pos:start="1:24" pos:end="1:44"><decl pos:start="1:24" pos:end="1:44"><type pos:start="1:24" pos:end="1:44"><name pos:start="1:24" pos:end="1:37">AVCodecContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:44">avctx</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:56"><decl pos:start="1:47" pos:end="1:56"><type pos:start="1:47" pos:end="1:56"><name pos:start="1:47" pos:end="1:50">void</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">data</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:72"><decl pos:start="1:59" pos:end="1:72"><type pos:start="1:59" pos:end="1:72"><name pos:start="1:59" pos:end="1:61">int</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:72">got_frame</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:38"><decl pos:start="3:24" pos:end="3:38"><type pos:start="3:24" pos:end="3:38"><name pos:start="3:24" pos:end="3:31">AVPacket</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:38">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="1099:1">{<block_content pos:start="7:5" pos:end="1097:23">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">CFHDContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:37">= <expr pos:start="7:22" pos:end="7:37"><name pos:start="7:22" pos:end="7:37"><name pos:start="7:22" pos:end="7:26">avctx</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:18">GetByteContext</name></type> <name pos:start="9:20" pos:end="9:21">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:15">ThreadFrame</name></type> <name pos:start="11:17" pos:end="11:21">frame</name> <init pos:start="11:23" pos:end="11:37">= <expr pos:start="11:25" pos:end="11:37"><block pos:start="11:25" pos:end="11:37">{ <expr pos:start="11:27" pos:end="11:35"><operator pos:start="11:27" pos:end="11:27">.</operator><name pos:start="11:28" pos:end="11:28">f</name> <operator pos:start="11:30" pos:end="11:30">=</operator> <name pos:start="11:32" pos:end="11:35">data</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">pic</name> <init pos:start="13:18" pos:end="13:23">= <expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:53"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>, <decl pos:start="15:18" pos:end="15:18"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:18" pos:end="15:18">i</name></decl>, <decl pos:start="15:21" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:21" pos:end="15:21">j</name></decl>, <decl pos:start="15:24" pos:end="15:29"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:24" pos:end="15:29">planes</name></decl>, <decl pos:start="15:32" pos:end="15:36"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:32" pos:end="15:36">plane</name></decl>, <decl pos:start="15:39" pos:end="15:52"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:39" pos:end="15:48">got_buffer</name> <init pos:start="15:50" pos:end="15:52">= <expr pos:start="15:52" pos:end="15:52"><literal type="number" pos:start="15:52" pos:end="15:52">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">int16_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:23">coeff_data</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:43"><expr pos:start="21:5" pos:end="21:42"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:19">coded_format</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:42">AV_PIX_FMT_YUV422P10</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><call pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:23">init_frame_defaults</name><argument_list pos:start="23:24" pos:end="23:26">(<argument pos:start="23:25" pos:end="23:25"><expr pos:start="23:25" pos:end="23:25"><name pos:start="23:25" pos:end="23:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:54"><expr pos:start="25:5" pos:end="25:53"><name pos:start="25:5" pos:end="25:10">planes</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="25:53"><name pos:start="25:14" pos:end="25:36">av_pix_fmt_count_planes</name><argument_list pos:start="25:37" pos:end="25:53">(<argument pos:start="25:38" pos:end="25:52"><expr pos:start="25:38" pos:end="25:52"><name pos:start="25:38" pos:end="25:52"><name pos:start="25:38" pos:end="25:38">s</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:52">coded_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:52"><expr pos:start="29:5" pos:end="29:51"><call pos:start="29:5" pos:end="29:51"><name pos:start="29:5" pos:end="29:20">bytestream2_init</name><argument_list pos:start="29:21" pos:end="29:51">(<argument pos:start="29:22" pos:end="29:24"><expr pos:start="29:22" pos:end="29:24"><operator pos:start="29:22" pos:end="29:22">&amp;</operator><name pos:start="29:23" pos:end="29:24">gb</name></expr></argument>, <argument pos:start="29:27" pos:end="29:37"><expr pos:start="29:27" pos:end="29:37"><name pos:start="29:27" pos:end="29:37"><name pos:start="29:27" pos:end="29:31">avpkt</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:37">data</name></name></expr></argument>, <argument pos:start="29:40" pos:end="29:50"><expr pos:start="29:40" pos:end="29:50"><name pos:start="29:40" pos:end="29:50"><name pos:start="29:40" pos:end="29:44">avpkt</name><operator pos:start="29:45" pos:end="29:46">-&gt;</operator><name pos:start="29:47" pos:end="29:50">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="33:5" pos:end="743:5">while <condition pos:start="33:11" pos:end="33:47">(<expr pos:start="33:12" pos:end="33:46"><call pos:start="33:12" pos:end="33:42"><name pos:start="33:12" pos:end="33:37">bytestream2_get_bytes_left</name><argument_list pos:start="33:38" pos:end="33:42">(<argument pos:start="33:39" pos:end="33:41"><expr pos:start="33:39" pos:end="33:41"><operator pos:start="33:39" pos:end="33:39">&amp;</operator><name pos:start="33:40" pos:end="33:41">gb</name></expr></argument>)</argument_list></call> <operator pos:start="33:44" pos:end="33:44">&gt;</operator> <literal type="number" pos:start="33:46" pos:end="33:46">4</literal></expr>)</condition> <block pos:start="33:49" pos:end="743:5">{<block_content pos:start="37:9" pos:end="741:9">

        <comment type="block" pos:start="35:9" pos:end="35:70">/* Bit weird but implement the tag parsing as the spec says */</comment>

        <decl_stmt pos:start="37:9" pos:end="37:52"><decl pos:start="37:9" pos:end="37:51"><type pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:16">uint16_t</name></type> <name pos:start="37:18" pos:end="37:21">tagu</name>   <init pos:start="37:25" pos:end="37:51">= <expr pos:start="37:27" pos:end="37:51"><call pos:start="37:27" pos:end="37:51"><name pos:start="37:27" pos:end="37:46">bytestream2_get_be16</name><argument_list pos:start="37:47" pos:end="37:51">(<argument pos:start="37:48" pos:end="37:50"><expr pos:start="37:48" pos:end="37:50"><operator pos:start="37:48" pos:end="37:48">&amp;</operator><name pos:start="37:49" pos:end="37:50">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:40"><decl pos:start="39:9" pos:end="39:39"><type pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:15">int16_t</name></type> <name pos:start="39:17" pos:end="39:19">tag</name>     <init pos:start="39:25" pos:end="39:39">= <expr pos:start="39:27" pos:end="39:39"><operator pos:start="39:27" pos:end="39:27">(</operator><name pos:start="39:28" pos:end="39:34">int16_t</name><operator pos:start="39:35" pos:end="39:35">)</operator><name pos:start="39:36" pos:end="39:39">tagu</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:46"><decl pos:start="41:9" pos:end="41:45"><type pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:14">int8_t</name></type> <name pos:start="41:16" pos:end="41:19">tag8</name>     <init pos:start="41:25" pos:end="41:45">= <expr pos:start="41:27" pos:end="41:45"><operator pos:start="41:27" pos:end="41:27">(</operator><name pos:start="41:28" pos:end="41:33">int8_t</name><operator pos:start="41:34" pos:end="41:34">)</operator><operator pos:start="41:35" pos:end="41:35">(</operator><name pos:start="41:36" pos:end="41:39">tagu</name> <operator pos:start="41:41" pos:end="41:42">&gt;&gt;</operator> <literal type="number" pos:start="41:44" pos:end="41:44">8</literal><operator pos:start="41:45" pos:end="41:45">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:35"><decl pos:start="43:9" pos:end="43:34"><type pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:16">uint16_t</name></type> <name pos:start="43:18" pos:end="43:23">abstag</name> <init pos:start="43:25" pos:end="43:34">= <expr pos:start="43:27" pos:end="43:34"><call pos:start="43:27" pos:end="43:34"><name pos:start="43:27" pos:end="43:29">abs</name><argument_list pos:start="43:30" pos:end="43:34">(<argument pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:33">tag</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:36"><decl pos:start="45:9" pos:end="45:35"><type pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:14">int8_t</name></type> <name pos:start="45:16" pos:end="45:23">abs_tag8</name> <init pos:start="45:25" pos:end="45:35">= <expr pos:start="45:27" pos:end="45:35"><call pos:start="45:27" pos:end="45:35"><name pos:start="45:27" pos:end="45:29">abs</name><argument_list pos:start="45:30" pos:end="45:35">(<argument pos:start="45:31" pos:end="45:34"><expr pos:start="45:31" pos:end="45:34"><name pos:start="45:31" pos:end="45:34">tag8</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:52"><decl pos:start="47:9" pos:end="47:51"><type pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:16">uint16_t</name></type> <name pos:start="47:18" pos:end="47:21">data</name>   <init pos:start="47:25" pos:end="47:51">= <expr pos:start="47:27" pos:end="47:51"><call pos:start="47:27" pos:end="47:51"><name pos:start="47:27" pos:end="47:46">bytestream2_get_be16</name><argument_list pos:start="47:47" pos:end="47:51">(<argument pos:start="47:48" pos:end="47:50"><expr pos:start="47:48" pos:end="47:50"><operator pos:start="47:48" pos:end="47:48">&amp;</operator><name pos:start="47:49" pos:end="47:50">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="49:9" pos:end="413:80"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:49">(<expr pos:start="49:13" pos:end="49:48"><name pos:start="49:13" pos:end="49:20">abs_tag8</name> <operator pos:start="49:22" pos:end="49:23">&gt;=</operator> <literal type="number" pos:start="49:25" pos:end="49:28">0x60</literal> <operator pos:start="49:30" pos:end="49:31">&amp;&amp;</operator> <name pos:start="49:33" pos:end="49:40">abs_tag8</name> <operator pos:start="49:42" pos:end="49:43">&lt;=</operator> <literal type="number" pos:start="49:45" pos:end="49:48">0x6f</literal></expr>)</condition> <block pos:start="49:51" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:88">

            <expr_stmt pos:start="51:13" pos:end="51:88"><expr pos:start="51:13" pos:end="51:87"><call pos:start="51:13" pos:end="51:87"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="51:87">(<argument pos:start="51:20" pos:end="51:24"><expr pos:start="51:20" pos:end="51:24"><name pos:start="51:20" pos:end="51:24">avctx</name></expr></argument>, <argument pos:start="51:27" pos:end="51:38"><expr pos:start="51:27" pos:end="51:38"><name pos:start="51:27" pos:end="51:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="51:41" pos:end="51:56"><expr pos:start="51:41" pos:end="51:56"><literal type="string" pos:start="51:41" pos:end="51:56">"large len %x\n"</literal></expr></argument>, <argument pos:start="51:59" pos:end="51:86"><expr pos:start="51:59" pos:end="51:86"><operator pos:start="51:59" pos:end="51:59">(</operator><operator pos:start="51:60" pos:end="51:60">(</operator><name pos:start="51:61" pos:end="51:64">tagu</name> <operator pos:start="51:66" pos:end="51:66">&amp;</operator> <literal type="number" pos:start="51:68" pos:end="51:71">0xff</literal><operator pos:start="51:72" pos:end="51:72">)</operator> <operator pos:start="51:74" pos:end="51:75">&lt;&lt;</operator> <literal type="number" pos:start="51:77" pos:end="51:78">16</literal><operator pos:start="51:79" pos:end="51:79">)</operator> <operator pos:start="51:81" pos:end="51:81">|</operator> <name pos:start="51:83" pos:end="51:86">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="53:11" pos:end="59:9">else if <condition pos:start="53:19" pos:end="53:29">(<expr pos:start="53:20" pos:end="53:28"><name pos:start="53:20" pos:end="53:22">tag</name> <operator pos:start="53:24" pos:end="53:25">==</operator> <literal type="number" pos:start="53:27" pos:end="53:28">20</literal></expr>)</condition> <block pos:start="53:31" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:34">

            <expr_stmt pos:start="55:13" pos:end="55:67"><expr pos:start="55:13" pos:end="55:66"><call pos:start="55:13" pos:end="55:66"><name pos:start="55:13" pos:end="55:18">av_log</name><argument_list pos:start="55:19" pos:end="55:66">(<argument pos:start="55:20" pos:end="55:24"><expr pos:start="55:20" pos:end="55:24"><name pos:start="55:20" pos:end="55:24">avctx</name></expr></argument>, <argument pos:start="55:27" pos:end="55:38"><expr pos:start="55:27" pos:end="55:38"><name pos:start="55:27" pos:end="55:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="55:41" pos:end="55:59"><expr pos:start="55:41" pos:end="55:59"><literal type="string" pos:start="55:41" pos:end="55:49">"Width %"</literal><name pos:start="55:50" pos:end="55:55">PRIu16</name><literal type="string" pos:start="55:56" pos:end="55:59">"\n"</literal></expr></argument>, <argument pos:start="55:62" pos:end="55:65"><expr pos:start="55:62" pos:end="55:65"><name pos:start="55:62" pos:end="55:65">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:34"><expr pos:start="57:13" pos:end="57:33"><name pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:26">coded_width</name></name> <operator pos:start="57:28" pos:end="57:28">=</operator> <name pos:start="57:30" pos:end="57:33">data</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="59:11" pos:end="65:9">else if <condition pos:start="59:19" pos:end="59:29">(<expr pos:start="59:20" pos:end="59:28"><name pos:start="59:20" pos:end="59:22">tag</name> <operator pos:start="59:24" pos:end="59:25">==</operator> <literal type="number" pos:start="59:27" pos:end="59:28">21</literal></expr>)</condition> <block pos:start="59:31" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:35">

            <expr_stmt pos:start="61:13" pos:end="61:68"><expr pos:start="61:13" pos:end="61:67"><call pos:start="61:13" pos:end="61:67"><name pos:start="61:13" pos:end="61:18">av_log</name><argument_list pos:start="61:19" pos:end="61:67">(<argument pos:start="61:20" pos:end="61:24"><expr pos:start="61:20" pos:end="61:24"><name pos:start="61:20" pos:end="61:24">avctx</name></expr></argument>, <argument pos:start="61:27" pos:end="61:38"><expr pos:start="61:27" pos:end="61:38"><name pos:start="61:27" pos:end="61:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="61:41" pos:end="61:60"><expr pos:start="61:41" pos:end="61:60"><literal type="string" pos:start="61:41" pos:end="61:50">"Height %"</literal><name pos:start="61:51" pos:end="61:56">PRIu16</name><literal type="string" pos:start="61:57" pos:end="61:60">"\n"</literal></expr></argument>, <argument pos:start="61:63" pos:end="61:66"><expr pos:start="61:63" pos:end="61:66"><name pos:start="61:63" pos:end="61:66">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:35"><expr pos:start="63:13" pos:end="63:34"><name pos:start="63:13" pos:end="63:27"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:27">coded_height</name></name> <operator pos:start="63:29" pos:end="63:29">=</operator> <name pos:start="63:31" pos:end="63:34">data</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="65:11" pos:end="81:9">else if <condition pos:start="65:19" pos:end="65:30">(<expr pos:start="65:20" pos:end="65:29"><name pos:start="65:20" pos:end="65:22">tag</name> <operator pos:start="65:24" pos:end="65:25">==</operator> <literal type="number" pos:start="65:27" pos:end="65:29">101</literal></expr>)</condition> <block pos:start="65:32" pos:end="81:9">{<block_content pos:start="67:13" pos:end="79:26">

            <expr_stmt pos:start="67:13" pos:end="67:81"><expr pos:start="67:13" pos:end="67:80"><call pos:start="67:13" pos:end="67:80"><name pos:start="67:13" pos:end="67:18">av_log</name><argument_list pos:start="67:19" pos:end="67:80">(<argument pos:start="67:20" pos:end="67:24"><expr pos:start="67:20" pos:end="67:24"><name pos:start="67:20" pos:end="67:24">avctx</name></expr></argument>, <argument pos:start="67:27" pos:end="67:38"><expr pos:start="67:27" pos:end="67:38"><name pos:start="67:27" pos:end="67:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="67:41" pos:end="67:73"><expr pos:start="67:41" pos:end="67:73"><literal type="string" pos:start="67:41" pos:end="67:63">"Bits per component: %"</literal><name pos:start="67:64" pos:end="67:69">PRIu16</name><literal type="string" pos:start="67:70" pos:end="67:73">"\n"</literal></expr></argument>, <argument pos:start="67:76" pos:end="67:79"><expr pos:start="67:76" pos:end="67:79"><name pos:start="67:76" pos:end="67:79">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="69:13" pos:end="77:13"><if pos:start="69:13" pos:end="77:13">if <condition pos:start="69:16" pos:end="69:38">(<expr pos:start="69:17" pos:end="69:37"><name pos:start="69:17" pos:end="69:34"><name pos:start="69:17" pos:end="69:20">data</name> <argument_list type="generic" pos:start="69:22" pos:end="69:34">&lt; <argument pos:start="69:24" pos:end="69:32"><expr pos:start="69:24" pos:end="69:32"><literal type="number" pos:start="69:24" pos:end="69:24">1</literal> <operator pos:start="69:26" pos:end="69:27">||</operator> <name pos:start="69:29" pos:end="69:32">data</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="69:36" pos:end="69:37">31</literal></expr>)</condition> <block pos:start="69:40" pos:end="77:13">{<block_content pos:start="71:17" pos:end="75:22">

                <expr_stmt pos:start="71:17" pos:end="71:88"><expr pos:start="71:17" pos:end="71:87"><call pos:start="71:17" pos:end="71:87"><name pos:start="71:17" pos:end="71:22">av_log</name><argument_list pos:start="71:23" pos:end="71:87">(<argument pos:start="71:24" pos:end="71:28"><expr pos:start="71:24" pos:end="71:28"><name pos:start="71:24" pos:end="71:28">avctx</name></expr></argument>, <argument pos:start="71:31" pos:end="71:42"><expr pos:start="71:31" pos:end="71:42"><name pos:start="71:31" pos:end="71:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:45" pos:end="71:80"><expr pos:start="71:45" pos:end="71:80"><literal type="string" pos:start="71:45" pos:end="71:80">"Bits per component %d is invalid\n"</literal></expr></argument>, <argument pos:start="71:83" pos:end="71:86"><expr pos:start="71:83" pos:end="71:86"><name pos:start="71:83" pos:end="71:86">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:38"><expr pos:start="73:17" pos:end="73:37"><name pos:start="73:17" pos:end="73:19">ret</name> <operator pos:start="73:21" pos:end="73:21">=</operator> <call pos:start="73:23" pos:end="73:37"><name pos:start="73:23" pos:end="73:29">AVERROR</name><argument_list pos:start="73:30" pos:end="73:37">(<argument pos:start="73:31" pos:end="73:36"><expr pos:start="73:31" pos:end="73:36"><name pos:start="73:31" pos:end="73:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="75:17" pos:end="75:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:26"><expr pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:18"><name pos:start="79:13" pos:end="79:13">s</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:18">bpc</name></name> <operator pos:start="79:20" pos:end="79:20">=</operator> <name pos:start="79:22" pos:end="79:25">data</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="81:11" pos:end="97:9">else if <condition pos:start="81:19" pos:end="81:29">(<expr pos:start="81:20" pos:end="81:28"><name pos:start="81:20" pos:end="81:22">tag</name> <operator pos:start="81:24" pos:end="81:25">==</operator> <literal type="number" pos:start="81:27" pos:end="81:28">12</literal></expr>)</condition> <block pos:start="81:31" pos:end="97:9">{<block_content pos:start="83:13" pos:end="95:13">

            <expr_stmt pos:start="83:13" pos:end="83:76"><expr pos:start="83:13" pos:end="83:75"><call pos:start="83:13" pos:end="83:75"><name pos:start="83:13" pos:end="83:18">av_log</name><argument_list pos:start="83:19" pos:end="83:75">(<argument pos:start="83:20" pos:end="83:24"><expr pos:start="83:20" pos:end="83:24"><name pos:start="83:20" pos:end="83:24">avctx</name></expr></argument>, <argument pos:start="83:27" pos:end="83:38"><expr pos:start="83:27" pos:end="83:38"><name pos:start="83:27" pos:end="83:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="83:41" pos:end="83:68"><expr pos:start="83:41" pos:end="83:68"><literal type="string" pos:start="83:41" pos:end="83:58">"Channel Count: %"</literal><name pos:start="83:59" pos:end="83:64">PRIu16</name><literal type="string" pos:start="83:65" pos:end="83:68">"\n"</literal></expr></argument>, <argument pos:start="83:71" pos:end="83:74"><expr pos:start="83:71" pos:end="83:74"><name pos:start="83:71" pos:end="83:74">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:34"><expr pos:start="85:13" pos:end="85:33"><name pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:13">s</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:26">channel_cnt</name></name> <operator pos:start="85:28" pos:end="85:28">=</operator> <name pos:start="85:30" pos:end="85:33">data</name></expr>;</expr_stmt>

            <if_stmt pos:start="87:13" pos:end="95:13"><if pos:start="87:13" pos:end="95:13">if <condition pos:start="87:16" pos:end="87:25">(<expr pos:start="87:17" pos:end="87:24"><name pos:start="87:17" pos:end="87:20">data</name> <operator pos:start="87:22" pos:end="87:22">&gt;</operator> <literal type="number" pos:start="87:24" pos:end="87:24">4</literal></expr>)</condition> <block pos:start="87:27" pos:end="95:13">{<block_content pos:start="89:17" pos:end="93:22">

                <expr_stmt pos:start="89:17" pos:end="89:97"><expr pos:start="89:17" pos:end="89:96"><call pos:start="89:17" pos:end="89:96"><name pos:start="89:17" pos:end="89:22">av_log</name><argument_list pos:start="89:23" pos:end="89:96">(<argument pos:start="89:24" pos:end="89:28"><expr pos:start="89:24" pos:end="89:28"><name pos:start="89:24" pos:end="89:28">avctx</name></expr></argument>, <argument pos:start="89:31" pos:end="89:42"><expr pos:start="89:31" pos:end="89:42"><name pos:start="89:31" pos:end="89:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:45" pos:end="89:89"><expr pos:start="89:45" pos:end="89:89"><literal type="string" pos:start="89:45" pos:end="89:64">"Channel Count of %"</literal><name pos:start="89:65" pos:end="89:70">PRIu16</name><literal type="string" pos:start="89:71" pos:end="89:89">" is unsupported\n"</literal></expr></argument>, <argument pos:start="89:92" pos:end="89:95"><expr pos:start="89:92" pos:end="89:95"><name pos:start="89:92" pos:end="89:95">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:43"><expr pos:start="91:17" pos:end="91:42"><name pos:start="91:17" pos:end="91:19">ret</name> <operator pos:start="91:21" pos:end="91:21">=</operator> <name pos:start="91:23" pos:end="91:42">AVERROR_PATCHWELCOME</name></expr>;</expr_stmt>

                <break pos:start="93:17" pos:end="93:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="97:11" pos:end="111:9">else if <condition pos:start="97:19" pos:end="97:29">(<expr pos:start="97:20" pos:end="97:28"><name pos:start="97:20" pos:end="97:22">tag</name> <operator pos:start="97:24" pos:end="97:25">==</operator> <literal type="number" pos:start="97:27" pos:end="97:28">14</literal></expr>)</condition> <block pos:start="97:31" pos:end="111:9">{<block_content pos:start="99:13" pos:end="109:13">

            <expr_stmt pos:start="99:13" pos:end="99:76"><expr pos:start="99:13" pos:end="99:75"><call pos:start="99:13" pos:end="99:75"><name pos:start="99:13" pos:end="99:18">av_log</name><argument_list pos:start="99:19" pos:end="99:75">(<argument pos:start="99:20" pos:end="99:24"><expr pos:start="99:20" pos:end="99:24"><name pos:start="99:20" pos:end="99:24">avctx</name></expr></argument>, <argument pos:start="99:27" pos:end="99:38"><expr pos:start="99:27" pos:end="99:38"><name pos:start="99:27" pos:end="99:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="99:41" pos:end="99:68"><expr pos:start="99:41" pos:end="99:68"><literal type="string" pos:start="99:41" pos:end="99:58">"Subband Count: %"</literal><name pos:start="99:59" pos:end="99:64">PRIu16</name><literal type="string" pos:start="99:65" pos:end="99:68">"\n"</literal></expr></argument>, <argument pos:start="99:71" pos:end="99:74"><expr pos:start="99:71" pos:end="99:74"><name pos:start="99:71" pos:end="99:74">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="101:13" pos:end="109:13"><if pos:start="101:13" pos:end="109:13">if <condition pos:start="101:16" pos:end="101:38">(<expr pos:start="101:17" pos:end="101:37"><name pos:start="101:17" pos:end="101:20">data</name> <operator pos:start="101:22" pos:end="101:23">!=</operator> <name pos:start="101:25" pos:end="101:37">SUBBAND_COUNT</name></expr>)</condition> <block pos:start="101:40" pos:end="109:13">{<block_content pos:start="103:17" pos:end="107:22">

                <expr_stmt pos:start="103:17" pos:end="103:97"><expr pos:start="103:17" pos:end="103:96"><call pos:start="103:17" pos:end="103:96"><name pos:start="103:17" pos:end="103:22">av_log</name><argument_list pos:start="103:23" pos:end="103:96">(<argument pos:start="103:24" pos:end="103:28"><expr pos:start="103:24" pos:end="103:28"><name pos:start="103:24" pos:end="103:28">avctx</name></expr></argument>, <argument pos:start="103:31" pos:end="103:42"><expr pos:start="103:31" pos:end="103:42"><name pos:start="103:31" pos:end="103:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="103:45" pos:end="103:89"><expr pos:start="103:45" pos:end="103:89"><literal type="string" pos:start="103:45" pos:end="103:64">"Subband Count of %"</literal><name pos:start="103:65" pos:end="103:70">PRIu16</name><literal type="string" pos:start="103:71" pos:end="103:89">" is unsupported\n"</literal></expr></argument>, <argument pos:start="103:92" pos:end="103:95"><expr pos:start="103:92" pos:end="103:95"><name pos:start="103:92" pos:end="103:95">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:43"><expr pos:start="105:17" pos:end="105:42"><name pos:start="105:17" pos:end="105:19">ret</name> <operator pos:start="105:21" pos:end="105:21">=</operator> <name pos:start="105:23" pos:end="105:42">AVERROR_PATCHWELCOME</name></expr>;</expr_stmt>

                <break pos:start="107:17" pos:end="107:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="111:11" pos:end="129:9">else if <condition pos:start="111:19" pos:end="111:29">(<expr pos:start="111:20" pos:end="111:28"><name pos:start="111:20" pos:end="111:22">tag</name> <operator pos:start="111:24" pos:end="111:25">==</operator> <literal type="number" pos:start="111:27" pos:end="111:28">62</literal></expr>)</condition> <block pos:start="111:31" pos:end="129:9">{<block_content pos:start="113:13" pos:end="127:35">

            <expr_stmt pos:start="113:13" pos:end="113:34"><expr pos:start="113:13" pos:end="113:33"><name pos:start="113:13" pos:end="113:26"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:26">channel_num</name></name> <operator pos:start="113:28" pos:end="113:28">=</operator> <name pos:start="113:30" pos:end="113:33">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:76"><expr pos:start="115:13" pos:end="115:75"><call pos:start="115:13" pos:end="115:75"><name pos:start="115:13" pos:end="115:18">av_log</name><argument_list pos:start="115:19" pos:end="115:75">(<argument pos:start="115:20" pos:end="115:24"><expr pos:start="115:20" pos:end="115:24"><name pos:start="115:20" pos:end="115:24">avctx</name></expr></argument>, <argument pos:start="115:27" pos:end="115:38"><expr pos:start="115:27" pos:end="115:38"><name pos:start="115:27" pos:end="115:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="115:41" pos:end="115:68"><expr pos:start="115:41" pos:end="115:68"><literal type="string" pos:start="115:41" pos:end="115:58">"Channel number %"</literal><name pos:start="115:59" pos:end="115:64">PRIu16</name><literal type="string" pos:start="115:65" pos:end="115:68">"\n"</literal></expr></argument>, <argument pos:start="115:71" pos:end="115:74"><expr pos:start="115:71" pos:end="115:74"><name pos:start="115:71" pos:end="115:74">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="117:13" pos:end="125:13"><if pos:start="117:13" pos:end="125:13">if <condition pos:start="117:16" pos:end="117:41">(<expr pos:start="117:17" pos:end="117:40"><name pos:start="117:17" pos:end="117:30"><name pos:start="117:17" pos:end="117:17">s</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:30">channel_num</name></name> <operator pos:start="117:32" pos:end="117:33">&gt;=</operator> <name pos:start="117:35" pos:end="117:40">planes</name></expr>)</condition> <block pos:start="117:43" pos:end="125:13">{<block_content pos:start="119:17" pos:end="123:22">

                <expr_stmt pos:start="119:17" pos:end="119:72"><expr pos:start="119:17" pos:end="119:71"><call pos:start="119:17" pos:end="119:71"><name pos:start="119:17" pos:end="119:22">av_log</name><argument_list pos:start="119:23" pos:end="119:71">(<argument pos:start="119:24" pos:end="119:28"><expr pos:start="119:24" pos:end="119:28"><name pos:start="119:24" pos:end="119:28">avctx</name></expr></argument>, <argument pos:start="119:31" pos:end="119:42"><expr pos:start="119:31" pos:end="119:42"><name pos:start="119:31" pos:end="119:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="119:45" pos:end="119:70"><expr pos:start="119:45" pos:end="119:70"><literal type="string" pos:start="119:45" pos:end="119:70">"Invalid channel number\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:38"><expr pos:start="121:17" pos:end="121:37"><name pos:start="121:17" pos:end="121:19">ret</name> <operator pos:start="121:21" pos:end="121:21">=</operator> <call pos:start="121:23" pos:end="121:37"><name pos:start="121:23" pos:end="121:29">AVERROR</name><argument_list pos:start="121:30" pos:end="121:37">(<argument pos:start="121:31" pos:end="121:36"><expr pos:start="121:31" pos:end="121:36"><name pos:start="121:31" pos:end="121:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="123:17" pos:end="123:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:35"><expr pos:start="127:13" pos:end="127:34"><call pos:start="127:13" pos:end="127:34"><name pos:start="127:13" pos:end="127:31">init_plane_defaults</name><argument_list pos:start="127:32" pos:end="127:34">(<argument pos:start="127:33" pos:end="127:33"><expr pos:start="127:33" pos:end="127:33"><name pos:start="127:33" pos:end="127:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="129:11" pos:end="159:9">else if <condition pos:start="129:19" pos:end="129:29">(<expr pos:start="129:20" pos:end="129:28"><name pos:start="129:20" pos:end="129:22">tag</name> <operator pos:start="129:24" pos:end="129:25">==</operator> <literal type="number" pos:start="129:27" pos:end="129:28">48</literal></expr>)</condition> <block pos:start="129:31" pos:end="159:9">{<block_content pos:start="131:13" pos:end="157:13">

            <if_stmt pos:start="131:13" pos:end="133:27"><if pos:start="131:13" pos:end="133:27">if <condition pos:start="131:16" pos:end="131:49">(<expr pos:start="131:17" pos:end="131:48"><name pos:start="131:17" pos:end="131:30"><name pos:start="131:17" pos:end="131:17">s</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:30">subband_num</name></name> <operator pos:start="131:32" pos:end="131:33">!=</operator> <literal type="number" pos:start="131:35" pos:end="131:35">0</literal> <operator pos:start="131:37" pos:end="131:38">&amp;&amp;</operator> <name pos:start="131:40" pos:end="131:43">data</name> <operator pos:start="131:45" pos:end="131:46">==</operator> <literal type="number" pos:start="131:48" pos:end="131:48">1</literal></expr>)</condition><block type="pseudo" pos:start="133:17" pos:end="133:27"><block_content pos:start="133:17" pos:end="133:27">  <comment type="line" pos:start="131:52" pos:end="131:58">// hack</comment>

                <expr_stmt pos:start="133:17" pos:end="133:27"><expr pos:start="133:17" pos:end="133:26"><name pos:start="133:17" pos:end="133:24"><name pos:start="133:17" pos:end="133:17">s</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:24">level</name></name><operator pos:start="133:25" pos:end="133:26">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:76"><expr pos:start="135:13" pos:end="135:75"><call pos:start="135:13" pos:end="135:75"><name pos:start="135:13" pos:end="135:18">av_log</name><argument_list pos:start="135:19" pos:end="135:75">(<argument pos:start="135:20" pos:end="135:24"><expr pos:start="135:20" pos:end="135:24"><name pos:start="135:20" pos:end="135:24">avctx</name></expr></argument>, <argument pos:start="135:27" pos:end="135:38"><expr pos:start="135:27" pos:end="135:38"><name pos:start="135:27" pos:end="135:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="135:41" pos:end="135:68"><expr pos:start="135:41" pos:end="135:68"><literal type="string" pos:start="135:41" pos:end="135:58">"Subband number %"</literal><name pos:start="135:59" pos:end="135:64">PRIu16</name><literal type="string" pos:start="135:65" pos:end="135:68">"\n"</literal></expr></argument>, <argument pos:start="135:71" pos:end="135:74"><expr pos:start="135:71" pos:end="135:74"><name pos:start="135:71" pos:end="135:74">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:34"><expr pos:start="137:13" pos:end="137:33"><name pos:start="137:13" pos:end="137:26"><name pos:start="137:13" pos:end="137:13">s</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:26">subband_num</name></name> <operator pos:start="137:28" pos:end="137:28">=</operator> <name pos:start="137:30" pos:end="137:33">data</name></expr>;</expr_stmt>

            <if_stmt pos:start="139:13" pos:end="147:13"><if pos:start="139:13" pos:end="147:13">if <condition pos:start="139:16" pos:end="139:39">(<expr pos:start="139:17" pos:end="139:38"><name pos:start="139:17" pos:end="139:24"><name pos:start="139:17" pos:end="139:17">s</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:24">level</name></name> <operator pos:start="139:26" pos:end="139:27">&gt;=</operator> <name pos:start="139:29" pos:end="139:38">DWT_LEVELS</name></expr>)</condition> <block pos:start="139:41" pos:end="147:13">{<block_content pos:start="141:17" pos:end="145:22">

                <expr_stmt pos:start="141:17" pos:end="141:63"><expr pos:start="141:17" pos:end="141:62"><call pos:start="141:17" pos:end="141:62"><name pos:start="141:17" pos:end="141:22">av_log</name><argument_list pos:start="141:23" pos:end="141:62">(<argument pos:start="141:24" pos:end="141:28"><expr pos:start="141:24" pos:end="141:28"><name pos:start="141:24" pos:end="141:28">avctx</name></expr></argument>, <argument pos:start="141:31" pos:end="141:42"><expr pos:start="141:31" pos:end="141:42"><name pos:start="141:31" pos:end="141:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="141:45" pos:end="141:61"><expr pos:start="141:45" pos:end="141:61"><literal type="string" pos:start="141:45" pos:end="141:61">"Invalid level\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:38"><expr pos:start="143:17" pos:end="143:37"><name pos:start="143:17" pos:end="143:19">ret</name> <operator pos:start="143:21" pos:end="143:21">=</operator> <call pos:start="143:23" pos:end="143:37"><name pos:start="143:23" pos:end="143:29">AVERROR</name><argument_list pos:start="143:30" pos:end="143:37">(<argument pos:start="143:31" pos:end="143:36"><expr pos:start="143:31" pos:end="143:36"><name pos:start="143:31" pos:end="143:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="145:17" pos:end="145:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="149:13" pos:end="157:13"><if pos:start="149:13" pos:end="157:13">if <condition pos:start="149:16" pos:end="149:35">(<expr pos:start="149:17" pos:end="149:34"><name pos:start="149:17" pos:end="149:30"><name pos:start="149:17" pos:end="149:17">s</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:30">subband_num</name></name> <operator pos:start="149:32" pos:end="149:32">&gt;</operator> <literal type="number" pos:start="149:34" pos:end="149:34">3</literal></expr>)</condition> <block pos:start="149:37" pos:end="157:13">{<block_content pos:start="151:17" pos:end="155:22">

                <expr_stmt pos:start="151:17" pos:end="151:72"><expr pos:start="151:17" pos:end="151:71"><call pos:start="151:17" pos:end="151:71"><name pos:start="151:17" pos:end="151:22">av_log</name><argument_list pos:start="151:23" pos:end="151:71">(<argument pos:start="151:24" pos:end="151:28"><expr pos:start="151:24" pos:end="151:28"><name pos:start="151:24" pos:end="151:28">avctx</name></expr></argument>, <argument pos:start="151:31" pos:end="151:42"><expr pos:start="151:31" pos:end="151:42"><name pos:start="151:31" pos:end="151:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="151:45" pos:end="151:70"><expr pos:start="151:45" pos:end="151:70"><literal type="string" pos:start="151:45" pos:end="151:70">"Invalid subband number\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:38"><expr pos:start="153:17" pos:end="153:37"><name pos:start="153:17" pos:end="153:19">ret</name> <operator pos:start="153:21" pos:end="153:21">=</operator> <call pos:start="153:23" pos:end="153:37"><name pos:start="153:23" pos:end="153:29">AVERROR</name><argument_list pos:start="153:30" pos:end="153:37">(<argument pos:start="153:31" pos:end="153:36"><expr pos:start="153:31" pos:end="153:36"><name pos:start="153:31" pos:end="153:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="155:17" pos:end="155:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="159:11" pos:end="175:9">else if <condition pos:start="159:19" pos:end="159:29">(<expr pos:start="159:20" pos:end="159:28"><name pos:start="159:20" pos:end="159:22">tag</name> <operator pos:start="159:24" pos:end="159:25">==</operator> <literal type="number" pos:start="159:27" pos:end="159:28">51</literal></expr>)</condition> <block pos:start="159:31" pos:end="175:9">{<block_content pos:start="161:13" pos:end="173:13">

            <expr_stmt pos:start="161:13" pos:end="161:83"><expr pos:start="161:13" pos:end="161:82"><call pos:start="161:13" pos:end="161:82"><name pos:start="161:13" pos:end="161:18">av_log</name><argument_list pos:start="161:19" pos:end="161:82">(<argument pos:start="161:20" pos:end="161:24"><expr pos:start="161:20" pos:end="161:24"><name pos:start="161:20" pos:end="161:24">avctx</name></expr></argument>, <argument pos:start="161:27" pos:end="161:38"><expr pos:start="161:27" pos:end="161:38"><name pos:start="161:27" pos:end="161:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="161:41" pos:end="161:75"><expr pos:start="161:41" pos:end="161:75"><literal type="string" pos:start="161:41" pos:end="161:65">"Subband number actual %"</literal><name pos:start="161:66" pos:end="161:71">PRIu16</name><literal type="string" pos:start="161:72" pos:end="161:75">"\n"</literal></expr></argument>, <argument pos:start="161:78" pos:end="161:81"><expr pos:start="161:78" pos:end="161:81"><name pos:start="161:78" pos:end="161:81">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:41"><expr pos:start="163:13" pos:end="163:40"><name pos:start="163:13" pos:end="163:33"><name pos:start="163:13" pos:end="163:13">s</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:33">subband_num_actual</name></name> <operator pos:start="163:35" pos:end="163:35">=</operator> <name pos:start="163:37" pos:end="163:40">data</name></expr>;</expr_stmt>

            <if_stmt pos:start="165:13" pos:end="173:13"><if pos:start="165:13" pos:end="173:13">if <condition pos:start="165:16" pos:end="165:44">(<expr pos:start="165:17" pos:end="165:43"><name pos:start="165:17" pos:end="165:37"><name pos:start="165:17" pos:end="165:17">s</name><operator pos:start="165:18" pos:end="165:19">-&gt;</operator><name pos:start="165:20" pos:end="165:37">subband_num_actual</name></name> <operator pos:start="165:39" pos:end="165:40">&gt;=</operator> <literal type="number" pos:start="165:42" pos:end="165:43">10</literal></expr>)</condition> <block pos:start="165:46" pos:end="173:13">{<block_content pos:start="167:17" pos:end="171:22">

                <expr_stmt pos:start="167:17" pos:end="167:79"><expr pos:start="167:17" pos:end="167:78"><call pos:start="167:17" pos:end="167:78"><name pos:start="167:17" pos:end="167:22">av_log</name><argument_list pos:start="167:23" pos:end="167:78">(<argument pos:start="167:24" pos:end="167:28"><expr pos:start="167:24" pos:end="167:28"><name pos:start="167:24" pos:end="167:28">avctx</name></expr></argument>, <argument pos:start="167:31" pos:end="167:42"><expr pos:start="167:31" pos:end="167:42"><name pos:start="167:31" pos:end="167:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="167:45" pos:end="167:77"><expr pos:start="167:45" pos:end="167:77"><literal type="string" pos:start="167:45" pos:end="167:77">"Invalid subband number actual\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:38"><expr pos:start="169:17" pos:end="169:37"><name pos:start="169:17" pos:end="169:19">ret</name> <operator pos:start="169:21" pos:end="169:21">=</operator> <call pos:start="169:23" pos:end="169:37"><name pos:start="169:23" pos:end="169:29">AVERROR</name><argument_list pos:start="169:30" pos:end="169:37">(<argument pos:start="169:31" pos:end="169:36"><expr pos:start="169:31" pos:end="169:36"><name pos:start="169:31" pos:end="169:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="171:17" pos:end="171:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="175:11" pos:end="177:85">else if <condition pos:start="175:19" pos:end="175:29">(<expr pos:start="175:20" pos:end="175:28"><name pos:start="175:20" pos:end="175:22">tag</name> <operator pos:start="175:24" pos:end="175:25">==</operator> <literal type="number" pos:start="175:27" pos:end="175:28">35</literal></expr>)</condition><block type="pseudo" pos:start="177:13" pos:end="177:85"><block_content pos:start="177:13" pos:end="177:85">

            <expr_stmt pos:start="177:13" pos:end="177:85"><expr pos:start="177:13" pos:end="177:84"><call pos:start="177:13" pos:end="177:84"><name pos:start="177:13" pos:end="177:18">av_log</name><argument_list pos:start="177:19" pos:end="177:84">(<argument pos:start="177:20" pos:end="177:24"><expr pos:start="177:20" pos:end="177:24"><name pos:start="177:20" pos:end="177:24">avctx</name></expr></argument>, <argument pos:start="177:27" pos:end="177:38"><expr pos:start="177:27" pos:end="177:38"><name pos:start="177:27" pos:end="177:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="177:41" pos:end="177:77"><expr pos:start="177:41" pos:end="177:77"><literal type="string" pos:start="177:41" pos:end="177:67">"Lowpass precision bits: %"</literal><name pos:start="177:68" pos:end="177:73">PRIu16</name><literal type="string" pos:start="177:74" pos:end="177:77">"\n"</literal></expr></argument>, <argument pos:start="177:80" pos:end="177:83"><expr pos:start="177:80" pos:end="177:83"><name pos:start="177:80" pos:end="177:83">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="179:9" pos:end="185:9">else if <condition pos:start="179:17" pos:end="179:27">(<expr pos:start="179:18" pos:end="179:26"><name pos:start="179:18" pos:end="179:20">tag</name> <operator pos:start="179:22" pos:end="179:23">==</operator> <literal type="number" pos:start="179:25" pos:end="179:26">53</literal></expr>)</condition> <block pos:start="179:29" pos:end="185:9">{<block_content pos:start="181:13" pos:end="183:75">

            <expr_stmt pos:start="181:13" pos:end="181:35"><expr pos:start="181:13" pos:end="181:34"><name pos:start="181:13" pos:end="181:27"><name pos:start="181:13" pos:end="181:13">s</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:27">quantisation</name></name> <operator pos:start="181:29" pos:end="181:29">=</operator> <name pos:start="181:31" pos:end="181:34">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:75"><expr pos:start="183:13" pos:end="183:74"><call pos:start="183:13" pos:end="183:74"><name pos:start="183:13" pos:end="183:18">av_log</name><argument_list pos:start="183:19" pos:end="183:74">(<argument pos:start="183:20" pos:end="183:24"><expr pos:start="183:20" pos:end="183:24"><name pos:start="183:20" pos:end="183:24">avctx</name></expr></argument>, <argument pos:start="183:27" pos:end="183:38"><expr pos:start="183:27" pos:end="183:38"><name pos:start="183:27" pos:end="183:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="183:41" pos:end="183:67"><expr pos:start="183:41" pos:end="183:67"><literal type="string" pos:start="183:41" pos:end="183:57">"Quantisation: %"</literal><name pos:start="183:58" pos:end="183:63">PRIu16</name><literal type="string" pos:start="183:64" pos:end="183:67">"\n"</literal></expr></argument>, <argument pos:start="183:70" pos:end="183:73"><expr pos:start="183:70" pos:end="183:73"><name pos:start="183:70" pos:end="183:73">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="185:11" pos:end="195:9">else if <condition pos:start="185:19" pos:end="185:30">(<expr pos:start="185:20" pos:end="185:29"><name pos:start="185:20" pos:end="185:22">tag</name> <operator pos:start="185:24" pos:end="185:25">==</operator> <literal type="number" pos:start="185:27" pos:end="185:29">109</literal></expr>)</condition> <block pos:start="185:32" pos:end="195:9">{<block_content pos:start="187:13" pos:end="193:77">

            <expr_stmt pos:start="187:13" pos:end="187:53"><expr pos:start="187:13" pos:end="187:52"><name pos:start="187:13" pos:end="187:32"><name pos:start="187:13" pos:end="187:13">s</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:29">prescale_shift</name><index pos:start="187:30" pos:end="187:32">[<expr pos:start="187:31" pos:end="187:31"><literal type="number" pos:start="187:31" pos:end="187:31">0</literal></expr>]</index></name> <operator pos:start="187:34" pos:end="187:34">=</operator> <operator pos:start="187:36" pos:end="187:36">(</operator><name pos:start="187:37" pos:end="187:40">data</name> <operator pos:start="187:42" pos:end="187:43">&gt;&gt;</operator> <literal type="number" pos:start="187:45" pos:end="187:45">0</literal><operator pos:start="187:46" pos:end="187:46">)</operator> <operator pos:start="187:48" pos:end="187:48">&amp;</operator> <literal type="number" pos:start="187:50" pos:end="187:52">0x7</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:53"><expr pos:start="189:13" pos:end="189:52"><name pos:start="189:13" pos:end="189:32"><name pos:start="189:13" pos:end="189:13">s</name><operator pos:start="189:14" pos:end="189:15">-&gt;</operator><name pos:start="189:16" pos:end="189:29">prescale_shift</name><index pos:start="189:30" pos:end="189:32">[<expr pos:start="189:31" pos:end="189:31"><literal type="number" pos:start="189:31" pos:end="189:31">1</literal></expr>]</index></name> <operator pos:start="189:34" pos:end="189:34">=</operator> <operator pos:start="189:36" pos:end="189:36">(</operator><name pos:start="189:37" pos:end="189:40">data</name> <operator pos:start="189:42" pos:end="189:43">&gt;&gt;</operator> <literal type="number" pos:start="189:45" pos:end="189:45">3</literal><operator pos:start="189:46" pos:end="189:46">)</operator> <operator pos:start="189:48" pos:end="189:48">&amp;</operator> <literal type="number" pos:start="189:50" pos:end="189:52">0x7</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:53"><expr pos:start="191:13" pos:end="191:52"><name pos:start="191:13" pos:end="191:32"><name pos:start="191:13" pos:end="191:13">s</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:29">prescale_shift</name><index pos:start="191:30" pos:end="191:32">[<expr pos:start="191:31" pos:end="191:31"><literal type="number" pos:start="191:31" pos:end="191:31">2</literal></expr>]</index></name> <operator pos:start="191:34" pos:end="191:34">=</operator> <operator pos:start="191:36" pos:end="191:36">(</operator><name pos:start="191:37" pos:end="191:40">data</name> <operator pos:start="191:42" pos:end="191:43">&gt;&gt;</operator> <literal type="number" pos:start="191:45" pos:end="191:45">6</literal><operator pos:start="191:46" pos:end="191:46">)</operator> <operator pos:start="191:48" pos:end="191:48">&amp;</operator> <literal type="number" pos:start="191:50" pos:end="191:52">0x7</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:77"><expr pos:start="193:13" pos:end="193:76"><call pos:start="193:13" pos:end="193:76"><name pos:start="193:13" pos:end="193:18">av_log</name><argument_list pos:start="193:19" pos:end="193:76">(<argument pos:start="193:20" pos:end="193:24"><expr pos:start="193:20" pos:end="193:24"><name pos:start="193:20" pos:end="193:24">avctx</name></expr></argument>, <argument pos:start="193:27" pos:end="193:38"><expr pos:start="193:27" pos:end="193:38"><name pos:start="193:27" pos:end="193:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="193:41" pos:end="193:69"><expr pos:start="193:41" pos:end="193:69"><literal type="string" pos:start="193:41" pos:end="193:69">"Prescale shift (VC-5): %x\n"</literal></expr></argument>, <argument pos:start="193:72" pos:end="193:75"><expr pos:start="193:72" pos:end="193:75"><name pos:start="193:72" pos:end="193:75">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="195:11" pos:end="213:9">else if <condition pos:start="195:19" pos:end="195:29">(<expr pos:start="195:20" pos:end="195:28"><name pos:start="195:20" pos:end="195:22">tag</name> <operator pos:start="195:24" pos:end="195:25">==</operator> <literal type="number" pos:start="195:27" pos:end="195:28">27</literal></expr>)</condition> <block pos:start="195:31" pos:end="213:9">{<block_content pos:start="197:13" pos:end="211:62">

            <expr_stmt pos:start="197:13" pos:end="197:75"><expr pos:start="197:13" pos:end="197:74"><call pos:start="197:13" pos:end="197:74"><name pos:start="197:13" pos:end="197:18">av_log</name><argument_list pos:start="197:19" pos:end="197:74">(<argument pos:start="197:20" pos:end="197:24"><expr pos:start="197:20" pos:end="197:24"><name pos:start="197:20" pos:end="197:24">avctx</name></expr></argument>, <argument pos:start="197:27" pos:end="197:38"><expr pos:start="197:27" pos:end="197:38"><name pos:start="197:27" pos:end="197:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="197:41" pos:end="197:67"><expr pos:start="197:41" pos:end="197:67"><literal type="string" pos:start="197:41" pos:end="197:57">"Lowpass width %"</literal><name pos:start="197:58" pos:end="197:63">PRIu16</name><literal type="string" pos:start="197:64" pos:end="197:67">"\n"</literal></expr></argument>, <argument pos:start="197:70" pos:end="197:73"><expr pos:start="197:70" pos:end="197:73"><name pos:start="197:70" pos:end="197:73">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="199:13" pos:end="207:13"><if pos:start="199:13" pos:end="207:13">if <condition pos:start="199:16" pos:end="199:79">(<expr pos:start="199:17" pos:end="199:78"><name pos:start="199:17" pos:end="199:34"><name pos:start="199:17" pos:end="199:20">data</name> <argument_list type="generic" pos:start="199:22" pos:end="199:34">&lt; <argument pos:start="199:24" pos:end="199:32"><expr pos:start="199:24" pos:end="199:32"><literal type="number" pos:start="199:24" pos:end="199:24">3</literal> <operator pos:start="199:26" pos:end="199:27">||</operator> <name pos:start="199:29" pos:end="199:32">data</name></expr></argument> &gt;</argument_list></name> <name pos:start="199:36" pos:end="199:59"><name pos:start="199:36" pos:end="199:36">s</name><operator pos:start="199:37" pos:end="199:38">-&gt;</operator><name pos:start="199:39" pos:end="199:43">plane</name><index pos:start="199:44" pos:end="199:59">[<expr pos:start="199:45" pos:end="199:58"><name pos:start="199:45" pos:end="199:58"><name pos:start="199:45" pos:end="199:45">s</name><operator pos:start="199:46" pos:end="199:47">-&gt;</operator><name pos:start="199:48" pos:end="199:58">channel_num</name></name></expr>]</index></name><operator pos:start="199:60" pos:end="199:60">.</operator><name pos:start="199:61" pos:end="199:70"><name pos:start="199:61" pos:end="199:64">band</name><index pos:start="199:65" pos:end="199:67">[<expr pos:start="199:66" pos:end="199:66"><literal type="number" pos:start="199:66" pos:end="199:66">0</literal></expr>]</index><index pos:start="199:68" pos:end="199:70">[<expr pos:start="199:69" pos:end="199:69"><literal type="number" pos:start="199:69" pos:end="199:69">0</literal></expr>]</index></name><operator pos:start="199:71" pos:end="199:71">.</operator><name pos:start="199:72" pos:end="199:78">a_width</name></expr>)</condition> <block pos:start="199:81" pos:end="207:13">{<block_content pos:start="201:17" pos:end="205:22">

                <expr_stmt pos:start="201:17" pos:end="201:71"><expr pos:start="201:17" pos:end="201:70"><call pos:start="201:17" pos:end="201:70"><name pos:start="201:17" pos:end="201:22">av_log</name><argument_list pos:start="201:23" pos:end="201:70">(<argument pos:start="201:24" pos:end="201:28"><expr pos:start="201:24" pos:end="201:28"><name pos:start="201:24" pos:end="201:28">avctx</name></expr></argument>, <argument pos:start="201:31" pos:end="201:42"><expr pos:start="201:31" pos:end="201:42"><name pos:start="201:31" pos:end="201:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="201:45" pos:end="201:69"><expr pos:start="201:45" pos:end="201:69"><literal type="string" pos:start="201:45" pos:end="201:69">"Invalid lowpass width\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:38"><expr pos:start="203:17" pos:end="203:37"><name pos:start="203:17" pos:end="203:19">ret</name> <operator pos:start="203:21" pos:end="203:21">=</operator> <call pos:start="203:23" pos:end="203:37"><name pos:start="203:23" pos:end="203:29">AVERROR</name><argument_list pos:start="203:30" pos:end="203:37">(<argument pos:start="203:31" pos:end="203:36"><expr pos:start="203:31" pos:end="203:36"><name pos:start="203:31" pos:end="203:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="205:17" pos:end="205:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:62"><expr pos:start="209:13" pos:end="209:61"><name pos:start="209:13" pos:end="209:36"><name pos:start="209:13" pos:end="209:13">s</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:20">plane</name><index pos:start="209:21" pos:end="209:36">[<expr pos:start="209:22" pos:end="209:35"><name pos:start="209:22" pos:end="209:35"><name pos:start="209:22" pos:end="209:22">s</name><operator pos:start="209:23" pos:end="209:24">-&gt;</operator><name pos:start="209:25" pos:end="209:35">channel_num</name></name></expr>]</index></name><operator pos:start="209:37" pos:end="209:37">.</operator><name pos:start="209:38" pos:end="209:47"><name pos:start="209:38" pos:end="209:41">band</name><index pos:start="209:42" pos:end="209:44">[<expr pos:start="209:43" pos:end="209:43"><literal type="number" pos:start="209:43" pos:end="209:43">0</literal></expr>]</index><index pos:start="209:45" pos:end="209:47">[<expr pos:start="209:46" pos:end="209:46"><literal type="number" pos:start="209:46" pos:end="209:46">0</literal></expr>]</index></name><operator pos:start="209:48" pos:end="209:48">.</operator><name pos:start="209:49" pos:end="209:53">width</name>  <operator pos:start="209:56" pos:end="209:56">=</operator> <name pos:start="209:58" pos:end="209:61">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:62"><expr pos:start="211:13" pos:end="211:61"><name pos:start="211:13" pos:end="211:36"><name pos:start="211:13" pos:end="211:13">s</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:20">plane</name><index pos:start="211:21" pos:end="211:36">[<expr pos:start="211:22" pos:end="211:35"><name pos:start="211:22" pos:end="211:35"><name pos:start="211:22" pos:end="211:22">s</name><operator pos:start="211:23" pos:end="211:24">-&gt;</operator><name pos:start="211:25" pos:end="211:35">channel_num</name></name></expr>]</index></name><operator pos:start="211:37" pos:end="211:37">.</operator><name pos:start="211:38" pos:end="211:47"><name pos:start="211:38" pos:end="211:41">band</name><index pos:start="211:42" pos:end="211:44">[<expr pos:start="211:43" pos:end="211:43"><literal type="number" pos:start="211:43" pos:end="211:43">0</literal></expr>]</index><index pos:start="211:45" pos:end="211:47">[<expr pos:start="211:46" pos:end="211:46"><literal type="number" pos:start="211:46" pos:end="211:46">0</literal></expr>]</index></name><operator pos:start="211:48" pos:end="211:48">.</operator><name pos:start="211:49" pos:end="211:54">stride</name> <operator pos:start="211:56" pos:end="211:56">=</operator> <name pos:start="211:58" pos:end="211:61">data</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="213:11" pos:end="229:9">else if <condition pos:start="213:19" pos:end="213:29">(<expr pos:start="213:20" pos:end="213:28"><name pos:start="213:20" pos:end="213:22">tag</name> <operator pos:start="213:24" pos:end="213:25">==</operator> <literal type="number" pos:start="213:27" pos:end="213:28">28</literal></expr>)</condition> <block pos:start="213:31" pos:end="229:9">{<block_content pos:start="215:13" pos:end="227:62">

            <expr_stmt pos:start="215:13" pos:end="215:76"><expr pos:start="215:13" pos:end="215:75"><call pos:start="215:13" pos:end="215:75"><name pos:start="215:13" pos:end="215:18">av_log</name><argument_list pos:start="215:19" pos:end="215:75">(<argument pos:start="215:20" pos:end="215:24"><expr pos:start="215:20" pos:end="215:24"><name pos:start="215:20" pos:end="215:24">avctx</name></expr></argument>, <argument pos:start="215:27" pos:end="215:38"><expr pos:start="215:27" pos:end="215:38"><name pos:start="215:27" pos:end="215:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="215:41" pos:end="215:68"><expr pos:start="215:41" pos:end="215:68"><literal type="string" pos:start="215:41" pos:end="215:58">"Lowpass height %"</literal><name pos:start="215:59" pos:end="215:64">PRIu16</name><literal type="string" pos:start="215:65" pos:end="215:68">"\n"</literal></expr></argument>, <argument pos:start="215:71" pos:end="215:74"><expr pos:start="215:71" pos:end="215:74"><name pos:start="215:71" pos:end="215:74">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="217:13" pos:end="225:13"><if pos:start="217:13" pos:end="225:13">if <condition pos:start="217:16" pos:end="217:78">(<expr pos:start="217:17" pos:end="217:77"><name pos:start="217:17" pos:end="217:34"><name pos:start="217:17" pos:end="217:20">data</name> <argument_list type="generic" pos:start="217:22" pos:end="217:34">&lt; <argument pos:start="217:24" pos:end="217:32"><expr pos:start="217:24" pos:end="217:32"><literal type="number" pos:start="217:24" pos:end="217:24">3</literal> <operator pos:start="217:26" pos:end="217:27">||</operator> <name pos:start="217:29" pos:end="217:32">data</name></expr></argument> &gt;</argument_list></name> <name pos:start="217:36" pos:end="217:59"><name pos:start="217:36" pos:end="217:36">s</name><operator pos:start="217:37" pos:end="217:38">-&gt;</operator><name pos:start="217:39" pos:end="217:43">plane</name><index pos:start="217:44" pos:end="217:59">[<expr pos:start="217:45" pos:end="217:58"><name pos:start="217:45" pos:end="217:58"><name pos:start="217:45" pos:end="217:45">s</name><operator pos:start="217:46" pos:end="217:47">-&gt;</operator><name pos:start="217:48" pos:end="217:58">channel_num</name></name></expr>]</index></name><operator pos:start="217:60" pos:end="217:60">.</operator><name pos:start="217:61" pos:end="217:70"><name pos:start="217:61" pos:end="217:64">band</name><index pos:start="217:65" pos:end="217:67">[<expr pos:start="217:66" pos:end="217:66"><literal type="number" pos:start="217:66" pos:end="217:66">0</literal></expr>]</index><index pos:start="217:68" pos:end="217:70">[<expr pos:start="217:69" pos:end="217:69"><literal type="number" pos:start="217:69" pos:end="217:69">0</literal></expr>]</index></name><operator pos:start="217:71" pos:end="217:71">.</operator><name pos:start="217:72" pos:end="217:77">height</name></expr>)</condition> <block pos:start="217:80" pos:end="225:13">{<block_content pos:start="219:17" pos:end="223:22">

                <expr_stmt pos:start="219:17" pos:end="219:72"><expr pos:start="219:17" pos:end="219:71"><call pos:start="219:17" pos:end="219:71"><name pos:start="219:17" pos:end="219:22">av_log</name><argument_list pos:start="219:23" pos:end="219:71">(<argument pos:start="219:24" pos:end="219:28"><expr pos:start="219:24" pos:end="219:28"><name pos:start="219:24" pos:end="219:28">avctx</name></expr></argument>, <argument pos:start="219:31" pos:end="219:42"><expr pos:start="219:31" pos:end="219:42"><name pos:start="219:31" pos:end="219:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="219:45" pos:end="219:70"><expr pos:start="219:45" pos:end="219:70"><literal type="string" pos:start="219:45" pos:end="219:70">"Invalid lowpass height\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:38"><expr pos:start="221:17" pos:end="221:37"><name pos:start="221:17" pos:end="221:19">ret</name> <operator pos:start="221:21" pos:end="221:21">=</operator> <call pos:start="221:23" pos:end="221:37"><name pos:start="221:23" pos:end="221:29">AVERROR</name><argument_list pos:start="221:30" pos:end="221:37">(<argument pos:start="221:31" pos:end="221:36"><expr pos:start="221:31" pos:end="221:36"><name pos:start="221:31" pos:end="221:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="223:17" pos:end="223:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:62"><expr pos:start="227:13" pos:end="227:61"><name pos:start="227:13" pos:end="227:36"><name pos:start="227:13" pos:end="227:13">s</name><operator pos:start="227:14" pos:end="227:15">-&gt;</operator><name pos:start="227:16" pos:end="227:20">plane</name><index pos:start="227:21" pos:end="227:36">[<expr pos:start="227:22" pos:end="227:35"><name pos:start="227:22" pos:end="227:35"><name pos:start="227:22" pos:end="227:22">s</name><operator pos:start="227:23" pos:end="227:24">-&gt;</operator><name pos:start="227:25" pos:end="227:35">channel_num</name></name></expr>]</index></name><operator pos:start="227:37" pos:end="227:37">.</operator><name pos:start="227:38" pos:end="227:47"><name pos:start="227:38" pos:end="227:41">band</name><index pos:start="227:42" pos:end="227:44">[<expr pos:start="227:43" pos:end="227:43"><literal type="number" pos:start="227:43" pos:end="227:43">0</literal></expr>]</index><index pos:start="227:45" pos:end="227:47">[<expr pos:start="227:46" pos:end="227:46"><literal type="number" pos:start="227:46" pos:end="227:46">0</literal></expr>]</index></name><operator pos:start="227:48" pos:end="227:48">.</operator><name pos:start="227:49" pos:end="227:54">height</name> <operator pos:start="227:56" pos:end="227:56">=</operator> <name pos:start="227:58" pos:end="227:61">data</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="229:11" pos:end="231:74">else if <condition pos:start="229:19" pos:end="229:28">(<expr pos:start="229:20" pos:end="229:27"><name pos:start="229:20" pos:end="229:22">tag</name> <operator pos:start="229:24" pos:end="229:25">==</operator> <literal type="number" pos:start="229:27" pos:end="229:27">1</literal></expr>)</condition><block type="pseudo" pos:start="231:13" pos:end="231:74"><block_content pos:start="231:13" pos:end="231:74">

            <expr_stmt pos:start="231:13" pos:end="231:74"><expr pos:start="231:13" pos:end="231:73"><call pos:start="231:13" pos:end="231:73"><name pos:start="231:13" pos:end="231:18">av_log</name><argument_list pos:start="231:19" pos:end="231:73">(<argument pos:start="231:20" pos:end="231:24"><expr pos:start="231:20" pos:end="231:24"><name pos:start="231:20" pos:end="231:24">avctx</name></expr></argument>, <argument pos:start="231:27" pos:end="231:38"><expr pos:start="231:27" pos:end="231:38"><name pos:start="231:27" pos:end="231:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="231:41" pos:end="231:66"><expr pos:start="231:41" pos:end="231:66"><literal type="string" pos:start="231:41" pos:end="231:56">"Sample type? %"</literal><name pos:start="231:57" pos:end="231:62">PRIu16</name><literal type="string" pos:start="231:63" pos:end="231:66">"\n"</literal></expr></argument>, <argument pos:start="231:69" pos:end="231:72"><expr pos:start="231:69" pos:end="231:72"><name pos:start="231:69" pos:end="231:72">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="233:9" pos:end="247:9">else if <condition pos:start="233:17" pos:end="233:27">(<expr pos:start="233:18" pos:end="233:26"><name pos:start="233:18" pos:end="233:20">tag</name> <operator pos:start="233:22" pos:end="233:23">==</operator> <literal type="number" pos:start="233:25" pos:end="233:26">10</literal></expr>)</condition> <block pos:start="233:29" pos:end="247:9">{<block_content pos:start="235:13" pos:end="245:77">

            <if_stmt pos:start="235:13" pos:end="243:13"><if pos:start="235:13" pos:end="243:13">if <condition pos:start="235:16" pos:end="235:26">(<expr pos:start="235:17" pos:end="235:25"><name pos:start="235:17" pos:end="235:20">data</name> <operator pos:start="235:22" pos:end="235:23">!=</operator> <literal type="number" pos:start="235:25" pos:end="235:25">0</literal></expr>)</condition> <block pos:start="235:28" pos:end="243:13">{<block_content pos:start="237:17" pos:end="241:22">

                <expr_stmt pos:start="237:17" pos:end="237:88"><expr pos:start="237:17" pos:end="237:87"><call pos:start="237:17" pos:end="237:87"><name pos:start="237:17" pos:end="237:45">avpriv_report_missing_feature</name><argument_list pos:start="237:46" pos:end="237:87">(<argument pos:start="237:47" pos:end="237:51"><expr pos:start="237:47" pos:end="237:51"><name pos:start="237:47" pos:end="237:51">avctx</name></expr></argument>, <argument pos:start="237:54" pos:end="237:80"><expr pos:start="237:54" pos:end="237:80"><literal type="string" pos:start="237:54" pos:end="237:74">"Transform type of %"</literal><name pos:start="237:75" pos:end="237:80">PRIu16</name></expr></argument>, <argument pos:start="237:83" pos:end="237:86"><expr pos:start="237:83" pos:end="237:86"><name pos:start="237:83" pos:end="237:86">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="239:17" pos:end="239:43"><expr pos:start="239:17" pos:end="239:42"><name pos:start="239:17" pos:end="239:19">ret</name> <operator pos:start="239:21" pos:end="239:21">=</operator> <name pos:start="239:23" pos:end="239:42">AVERROR_PATCHWELCOME</name></expr>;</expr_stmt>

                <break pos:start="241:17" pos:end="241:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:77"><expr pos:start="245:13" pos:end="245:76"><call pos:start="245:13" pos:end="245:76"><name pos:start="245:13" pos:end="245:18">av_log</name><argument_list pos:start="245:19" pos:end="245:76">(<argument pos:start="245:20" pos:end="245:24"><expr pos:start="245:20" pos:end="245:24"><name pos:start="245:20" pos:end="245:24">avctx</name></expr></argument>, <argument pos:start="245:27" pos:end="245:38"><expr pos:start="245:27" pos:end="245:38"><name pos:start="245:27" pos:end="245:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="245:41" pos:end="245:69"><expr pos:start="245:41" pos:end="245:69"><literal type="string" pos:start="245:41" pos:end="245:59">"Transform-type? %"</literal><name pos:start="245:60" pos:end="245:65">PRIu16</name><literal type="string" pos:start="245:66" pos:end="245:69">"\n"</literal></expr></argument>, <argument pos:start="245:72" pos:end="245:75"><expr pos:start="245:72" pos:end="245:75"><name pos:start="245:72" pos:end="245:75">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="247:11" pos:end="253:9">else if <condition pos:start="247:19" pos:end="247:56">(<expr pos:start="247:20" pos:end="247:55"><name pos:start="247:20" pos:end="247:25">abstag</name> <operator pos:start="247:27" pos:end="247:28">&gt;=</operator> <literal type="number" pos:start="247:30" pos:end="247:35">0x4000</literal> <operator pos:start="247:37" pos:end="247:38">&amp;&amp;</operator> <name pos:start="247:40" pos:end="247:45">abstag</name> <operator pos:start="247:47" pos:end="247:48">&lt;=</operator> <literal type="number" pos:start="247:50" pos:end="247:55">0x40ff</literal></expr>)</condition> <block pos:start="247:58" pos:end="253:9">{<block_content pos:start="249:13" pos:end="251:45">

            <expr_stmt pos:start="249:13" pos:end="249:115"><expr pos:start="249:13" pos:end="249:114"><call pos:start="249:13" pos:end="249:114"><name pos:start="249:13" pos:end="249:18">av_log</name><argument_list pos:start="249:19" pos:end="249:114">(<argument pos:start="249:20" pos:end="249:24"><expr pos:start="249:20" pos:end="249:24"><name pos:start="249:20" pos:end="249:24">avctx</name></expr></argument>, <argument pos:start="249:27" pos:end="249:38"><expr pos:start="249:27" pos:end="249:38"><name pos:start="249:27" pos:end="249:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="249:41" pos:end="249:68"><expr pos:start="249:41" pos:end="249:68"><literal type="string" pos:start="249:41" pos:end="249:68">"Small chunk length %d %s\n"</literal></expr></argument>, <argument pos:start="249:71" pos:end="249:78"><expr pos:start="249:71" pos:end="249:78"><name pos:start="249:71" pos:end="249:74">data</name> <operator pos:start="249:76" pos:end="249:76">*</operator> <literal type="number" pos:start="249:78" pos:end="249:78">4</literal></expr></argument>, <argument pos:start="249:81" pos:end="249:113"><expr pos:start="249:81" pos:end="249:113"><ternary pos:start="249:81" pos:end="249:113"><condition pos:start="249:81" pos:end="249:89"><expr pos:start="249:81" pos:end="249:87"><name pos:start="249:81" pos:end="249:83">tag</name> <operator pos:start="249:85" pos:end="249:85">&lt;</operator> <literal type="number" pos:start="249:87" pos:end="249:87">0</literal></expr> ?</condition><then pos:start="249:91" pos:end="249:100"> <expr pos:start="249:91" pos:end="249:100"><literal type="string" pos:start="249:91" pos:end="249:100">"optional"</literal></expr> </then><else pos:start="249:102" pos:end="249:113">: <expr pos:start="249:104" pos:end="249:113"><literal type="string" pos:start="249:104" pos:end="249:113">"required"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:45"><expr pos:start="251:13" pos:end="251:44"><call pos:start="251:13" pos:end="251:44"><name pos:start="251:13" pos:end="251:29">bytestream2_skipu</name><argument_list pos:start="251:30" pos:end="251:44">(<argument pos:start="251:31" pos:end="251:33"><expr pos:start="251:31" pos:end="251:33"><operator pos:start="251:31" pos:end="251:31">&amp;</operator><name pos:start="251:32" pos:end="251:33">gb</name></expr></argument>, <argument pos:start="251:36" pos:end="251:43"><expr pos:start="251:36" pos:end="251:43"><name pos:start="251:36" pos:end="251:39">data</name> <operator pos:start="251:41" pos:end="251:41">*</operator> <literal type="number" pos:start="251:43" pos:end="251:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="253:11" pos:end="263:9">else if <condition pos:start="253:19" pos:end="253:29">(<expr pos:start="253:20" pos:end="253:28"><name pos:start="253:20" pos:end="253:22">tag</name> <operator pos:start="253:24" pos:end="253:25">==</operator> <literal type="number" pos:start="253:27" pos:end="253:28">23</literal></expr>)</condition> <block pos:start="253:31" pos:end="263:9">{<block_content pos:start="255:13" pos:end="261:18">

            <expr_stmt pos:start="255:13" pos:end="255:56"><expr pos:start="255:13" pos:end="255:55"><call pos:start="255:13" pos:end="255:55"><name pos:start="255:13" pos:end="255:18">av_log</name><argument_list pos:start="255:19" pos:end="255:55">(<argument pos:start="255:20" pos:end="255:24"><expr pos:start="255:20" pos:end="255:24"><name pos:start="255:20" pos:end="255:24">avctx</name></expr></argument>, <argument pos:start="255:27" pos:end="255:38"><expr pos:start="255:27" pos:end="255:38"><name pos:start="255:27" pos:end="255:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="255:41" pos:end="255:54"><expr pos:start="255:41" pos:end="255:54"><literal type="string" pos:start="255:41" pos:end="255:54">"Skip frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="257:13" pos:end="257:63"><expr pos:start="257:13" pos:end="257:62"><call pos:start="257:13" pos:end="257:62"><name pos:start="257:13" pos:end="257:41">avpriv_report_missing_feature</name><argument_list pos:start="257:42" pos:end="257:62">(<argument pos:start="257:43" pos:end="257:47"><expr pos:start="257:43" pos:end="257:47"><name pos:start="257:43" pos:end="257:47">avctx</name></expr></argument>, <argument pos:start="257:50" pos:end="257:61"><expr pos:start="257:50" pos:end="257:61"><literal type="string" pos:start="257:50" pos:end="257:61">"Skip frame"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="259:13" pos:end="259:39"><expr pos:start="259:13" pos:end="259:38"><name pos:start="259:13" pos:end="259:15">ret</name> <operator pos:start="259:17" pos:end="259:17">=</operator> <name pos:start="259:19" pos:end="259:38">AVERROR_PATCHWELCOME</name></expr>;</expr_stmt>

            <break pos:start="261:13" pos:end="261:18">break;</break>

        </block_content>}</block></if> <if type="elseif" pos:start="263:11" pos:end="287:9">else if <condition pos:start="263:19" pos:end="263:28">(<expr pos:start="263:20" pos:end="263:27"><name pos:start="263:20" pos:end="263:22">tag</name> <operator pos:start="263:24" pos:end="263:25">==</operator> <literal type="number" pos:start="263:27" pos:end="263:27">2</literal></expr>)</condition> <block pos:start="263:30" pos:end="287:9">{<block_content pos:start="265:13" pos:end="285:13">

            <expr_stmt pos:start="265:13" pos:end="265:94"><expr pos:start="265:13" pos:end="265:93"><call pos:start="265:13" pos:end="265:93"><name pos:start="265:13" pos:end="265:18">av_log</name><argument_list pos:start="265:19" pos:end="265:93">(<argument pos:start="265:20" pos:end="265:24"><expr pos:start="265:20" pos:end="265:24"><name pos:start="265:20" pos:end="265:24">avctx</name></expr></argument>, <argument pos:start="265:27" pos:end="265:38"><expr pos:start="265:27" pos:end="265:38"><name pos:start="265:27" pos:end="265:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="265:41" pos:end="265:86"><expr pos:start="265:41" pos:end="265:86"><literal type="string" pos:start="265:41" pos:end="265:86">"tag=2 header - skipping %i tag/value pairs\n"</literal></expr></argument>, <argument pos:start="265:89" pos:end="265:92"><expr pos:start="265:89" pos:end="265:92"><name pos:start="265:89" pos:end="265:92">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="267:13" pos:end="275:13"><if pos:start="267:13" pos:end="275:13">if <condition pos:start="267:16" pos:end="267:59">(<expr pos:start="267:17" pos:end="267:58"><name pos:start="267:17" pos:end="267:20">data</name> <operator pos:start="267:22" pos:end="267:22">&gt;</operator> <call pos:start="267:24" pos:end="267:54"><name pos:start="267:24" pos:end="267:49">bytestream2_get_bytes_left</name><argument_list pos:start="267:50" pos:end="267:54">(<argument pos:start="267:51" pos:end="267:53"><expr pos:start="267:51" pos:end="267:53"><operator pos:start="267:51" pos:end="267:51">&amp;</operator><name pos:start="267:52" pos:end="267:53">gb</name></expr></argument>)</argument_list></call> <operator pos:start="267:56" pos:end="267:56">/</operator> <literal type="number" pos:start="267:58" pos:end="267:58">4</literal></expr>)</condition> <block pos:start="267:61" pos:end="275:13">{<block_content pos:start="269:17" pos:end="273:22">

                <expr_stmt pos:start="269:17" pos:end="269:85"><expr pos:start="269:17" pos:end="269:84"><call pos:start="269:17" pos:end="269:84"><name pos:start="269:17" pos:end="269:22">av_log</name><argument_list pos:start="269:23" pos:end="269:84">(<argument pos:start="269:24" pos:end="269:28"><expr pos:start="269:24" pos:end="269:28"><name pos:start="269:24" pos:end="269:28">avctx</name></expr></argument>, <argument pos:start="269:31" pos:end="269:42"><expr pos:start="269:31" pos:end="269:42"><name pos:start="269:31" pos:end="269:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="269:45" pos:end="269:77"><expr pos:start="269:45" pos:end="269:77"><literal type="string" pos:start="269:45" pos:end="269:77">"too many tag/value pairs (%d)\n"</literal></expr></argument>, <argument pos:start="269:80" pos:end="269:83"><expr pos:start="269:80" pos:end="269:83"><name pos:start="269:80" pos:end="269:83">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="271:17" pos:end="271:42"><expr pos:start="271:17" pos:end="271:41"><name pos:start="271:17" pos:end="271:19">ret</name> <operator pos:start="271:21" pos:end="271:21">=</operator> <name pos:start="271:23" pos:end="271:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <break pos:start="273:17" pos:end="273:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <for pos:start="277:13" pos:end="285:13">for <control pos:start="277:17" pos:end="277:38">(<init pos:start="277:18" pos:end="277:23"><expr pos:start="277:18" pos:end="277:22"><name pos:start="277:18" pos:end="277:18">i</name> <operator pos:start="277:20" pos:end="277:20">=</operator> <literal type="number" pos:start="277:22" pos:end="277:22">0</literal></expr>;</init> <condition pos:start="277:25" pos:end="277:33"><expr pos:start="277:25" pos:end="277:32"><name pos:start="277:25" pos:end="277:25">i</name> <operator pos:start="277:27" pos:end="277:27">&lt;</operator> <name pos:start="277:29" pos:end="277:32">data</name></expr>;</condition> <incr pos:start="277:35" pos:end="277:37"><expr pos:start="277:35" pos:end="277:37"><name pos:start="277:35" pos:end="277:35">i</name><operator pos:start="277:36" pos:end="277:37">++</operator></expr></incr>)</control> <block pos:start="277:40" pos:end="285:13">{<block_content pos:start="279:17" pos:end="283:79">

                <decl_stmt pos:start="279:17" pos:end="279:58"><decl pos:start="279:17" pos:end="279:57"><type pos:start="279:17" pos:end="279:24"><name pos:start="279:17" pos:end="279:24">uint16_t</name></type> <name pos:start="279:26" pos:end="279:29">tag2</name> <init pos:start="279:31" pos:end="279:57">= <expr pos:start="279:33" pos:end="279:57"><call pos:start="279:33" pos:end="279:57"><name pos:start="279:33" pos:end="279:52">bytestream2_get_be16</name><argument_list pos:start="279:53" pos:end="279:57">(<argument pos:start="279:54" pos:end="279:56"><expr pos:start="279:54" pos:end="279:56"><operator pos:start="279:54" pos:end="279:54">&amp;</operator><name pos:start="279:55" pos:end="279:56">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="281:17" pos:end="281:58"><decl pos:start="281:17" pos:end="281:57"><type pos:start="281:17" pos:end="281:24"><name pos:start="281:17" pos:end="281:24">uint16_t</name></type> <name pos:start="281:26" pos:end="281:29">val2</name> <init pos:start="281:31" pos:end="281:57">= <expr pos:start="281:33" pos:end="281:57"><call pos:start="281:33" pos:end="281:57"><name pos:start="281:33" pos:end="281:52">bytestream2_get_be16</name><argument_list pos:start="281:53" pos:end="281:57">(<argument pos:start="281:54" pos:end="281:56"><expr pos:start="281:54" pos:end="281:56"><operator pos:start="281:54" pos:end="281:54">&amp;</operator><name pos:start="281:55" pos:end="281:56">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="283:17" pos:end="283:79"><expr pos:start="283:17" pos:end="283:78"><call pos:start="283:17" pos:end="283:78"><name pos:start="283:17" pos:end="283:22">av_log</name><argument_list pos:start="283:23" pos:end="283:78">(<argument pos:start="283:24" pos:end="283:28"><expr pos:start="283:24" pos:end="283:28"><name pos:start="283:24" pos:end="283:28">avctx</name></expr></argument>, <argument pos:start="283:31" pos:end="283:42"><expr pos:start="283:31" pos:end="283:42"><name pos:start="283:31" pos:end="283:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="283:45" pos:end="283:65"><expr pos:start="283:45" pos:end="283:65"><literal type="string" pos:start="283:45" pos:end="283:65">"Tag/Value = %x %x\n"</literal></expr></argument>, <argument pos:start="283:68" pos:end="283:71"><expr pos:start="283:68" pos:end="283:71"><name pos:start="283:68" pos:end="283:71">tag2</name></expr></argument>, <argument pos:start="283:74" pos:end="283:77"><expr pos:start="283:74" pos:end="283:77"><name pos:start="283:74" pos:end="283:77">val2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="287:11" pos:end="305:9">else if <condition pos:start="287:19" pos:end="287:29">(<expr pos:start="287:20" pos:end="287:28"><name pos:start="287:20" pos:end="287:22">tag</name> <operator pos:start="287:24" pos:end="287:25">==</operator> <literal type="number" pos:start="287:27" pos:end="287:28">41</literal></expr>)</condition> <block pos:start="287:31" pos:end="305:9">{<block_content pos:start="289:13" pos:end="303:94">

            <expr_stmt pos:start="289:13" pos:end="289:142"><expr pos:start="289:13" pos:end="289:141"><call pos:start="289:13" pos:end="289:141"><name pos:start="289:13" pos:end="289:18">av_log</name><argument_list pos:start="289:19" pos:end="289:141">(<argument pos:start="289:20" pos:end="289:24"><expr pos:start="289:20" pos:end="289:24"><name pos:start="289:20" pos:end="289:24">avctx</name></expr></argument>, <argument pos:start="289:27" pos:end="289:38"><expr pos:start="289:27" pos:end="289:38"><name pos:start="289:27" pos:end="289:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="289:41" pos:end="289:92"><expr pos:start="289:41" pos:end="289:92"><literal type="string" pos:start="289:41" pos:end="289:92">"Highpass width %i channel %i level %i subband %i\n"</literal></expr></argument>, <argument pos:start="289:95" pos:end="289:98"><expr pos:start="289:95" pos:end="289:98"><name pos:start="289:95" pos:end="289:98">data</name></expr></argument>, <argument pos:start="289:101" pos:end="289:114"><expr pos:start="289:101" pos:end="289:114"><name pos:start="289:101" pos:end="289:114"><name pos:start="289:101" pos:end="289:101">s</name><operator pos:start="289:102" pos:end="289:103">-&gt;</operator><name pos:start="289:104" pos:end="289:114">channel_num</name></name></expr></argument>, <argument pos:start="289:117" pos:end="289:124"><expr pos:start="289:117" pos:end="289:124"><name pos:start="289:117" pos:end="289:124"><name pos:start="289:117" pos:end="289:117">s</name><operator pos:start="289:118" pos:end="289:119">-&gt;</operator><name pos:start="289:120" pos:end="289:124">level</name></name></expr></argument>, <argument pos:start="289:127" pos:end="289:140"><expr pos:start="289:127" pos:end="289:140"><name pos:start="289:127" pos:end="289:140"><name pos:start="289:127" pos:end="289:127">s</name><operator pos:start="289:128" pos:end="289:129">-&gt;</operator><name pos:start="289:130" pos:end="289:140">subband_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="291:13" pos:end="299:13"><if pos:start="291:13" pos:end="299:13">if <condition pos:start="291:16" pos:end="291:25">(<expr pos:start="291:17" pos:end="291:24"><name pos:start="291:17" pos:end="291:20">data</name> <operator pos:start="291:22" pos:end="291:22">&lt;</operator> <literal type="number" pos:start="291:24" pos:end="291:24">3</literal></expr>)</condition> <block pos:start="291:27" pos:end="299:13">{<block_content pos:start="293:17" pos:end="297:22">

                <expr_stmt pos:start="293:17" pos:end="293:72"><expr pos:start="293:17" pos:end="293:71"><call pos:start="293:17" pos:end="293:71"><name pos:start="293:17" pos:end="293:22">av_log</name><argument_list pos:start="293:23" pos:end="293:71">(<argument pos:start="293:24" pos:end="293:28"><expr pos:start="293:24" pos:end="293:28"><name pos:start="293:24" pos:end="293:28">avctx</name></expr></argument>, <argument pos:start="293:31" pos:end="293:42"><expr pos:start="293:31" pos:end="293:42"><name pos:start="293:31" pos:end="293:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="293:45" pos:end="293:70"><expr pos:start="293:45" pos:end="293:70"><literal type="string" pos:start="293:45" pos:end="293:70">"Invalid highpass width\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="295:17" pos:end="295:38"><expr pos:start="295:17" pos:end="295:37"><name pos:start="295:17" pos:end="295:19">ret</name> <operator pos:start="295:21" pos:end="295:21">=</operator> <call pos:start="295:23" pos:end="295:37"><name pos:start="295:23" pos:end="295:29">AVERROR</name><argument_list pos:start="295:30" pos:end="295:37">(<argument pos:start="295:31" pos:end="295:36"><expr pos:start="295:31" pos:end="295:36"><name pos:start="295:31" pos:end="295:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="297:17" pos:end="297:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="301:13" pos:end="301:82"><expr pos:start="301:13" pos:end="301:81"><name pos:start="301:13" pos:end="301:36"><name pos:start="301:13" pos:end="301:13">s</name><operator pos:start="301:14" pos:end="301:15">-&gt;</operator><name pos:start="301:16" pos:end="301:20">plane</name><index pos:start="301:21" pos:end="301:36">[<expr pos:start="301:22" pos:end="301:35"><name pos:start="301:22" pos:end="301:35"><name pos:start="301:22" pos:end="301:22">s</name><operator pos:start="301:23" pos:end="301:24">-&gt;</operator><name pos:start="301:25" pos:end="301:35">channel_num</name></name></expr>]</index></name><operator pos:start="301:37" pos:end="301:37">.</operator><name pos:start="301:38" pos:end="301:67"><name pos:start="301:38" pos:end="301:41">band</name><index pos:start="301:42" pos:end="301:51">[<expr pos:start="301:43" pos:end="301:50"><name pos:start="301:43" pos:end="301:50"><name pos:start="301:43" pos:end="301:43">s</name><operator pos:start="301:44" pos:end="301:45">-&gt;</operator><name pos:start="301:46" pos:end="301:50">level</name></name></expr>]</index><index pos:start="301:52" pos:end="301:67">[<expr pos:start="301:53" pos:end="301:66"><name pos:start="301:53" pos:end="301:66"><name pos:start="301:53" pos:end="301:53">s</name><operator pos:start="301:54" pos:end="301:55">-&gt;</operator><name pos:start="301:56" pos:end="301:66">subband_num</name></name></expr>]</index></name><operator pos:start="301:68" pos:end="301:68">.</operator><name pos:start="301:69" pos:end="301:73">width</name>  <operator pos:start="301:76" pos:end="301:76">=</operator> <name pos:start="301:78" pos:end="301:81">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:94"><expr pos:start="303:13" pos:end="303:93"><name pos:start="303:13" pos:end="303:36"><name pos:start="303:13" pos:end="303:13">s</name><operator pos:start="303:14" pos:end="303:15">-&gt;</operator><name pos:start="303:16" pos:end="303:20">plane</name><index pos:start="303:21" pos:end="303:36">[<expr pos:start="303:22" pos:end="303:35"><name pos:start="303:22" pos:end="303:35"><name pos:start="303:22" pos:end="303:22">s</name><operator pos:start="303:23" pos:end="303:24">-&gt;</operator><name pos:start="303:25" pos:end="303:35">channel_num</name></name></expr>]</index></name><operator pos:start="303:37" pos:end="303:37">.</operator><name pos:start="303:38" pos:end="303:67"><name pos:start="303:38" pos:end="303:41">band</name><index pos:start="303:42" pos:end="303:51">[<expr pos:start="303:43" pos:end="303:50"><name pos:start="303:43" pos:end="303:50"><name pos:start="303:43" pos:end="303:43">s</name><operator pos:start="303:44" pos:end="303:45">-&gt;</operator><name pos:start="303:46" pos:end="303:50">level</name></name></expr>]</index><index pos:start="303:52" pos:end="303:67">[<expr pos:start="303:53" pos:end="303:66"><name pos:start="303:53" pos:end="303:66"><name pos:start="303:53" pos:end="303:53">s</name><operator pos:start="303:54" pos:end="303:55">-&gt;</operator><name pos:start="303:56" pos:end="303:66">subband_num</name></name></expr>]</index></name><operator pos:start="303:68" pos:end="303:68">.</operator><name pos:start="303:69" pos:end="303:74">stride</name> <operator pos:start="303:76" pos:end="303:76">=</operator> <call pos:start="303:78" pos:end="303:93"><name pos:start="303:78" pos:end="303:84">FFALIGN</name><argument_list pos:start="303:85" pos:end="303:93">(<argument pos:start="303:86" pos:end="303:89"><expr pos:start="303:86" pos:end="303:89"><name pos:start="303:86" pos:end="303:89">data</name></expr></argument>, <argument pos:start="303:92" pos:end="303:92"><expr pos:start="303:92" pos:end="303:92"><literal type="number" pos:start="303:92" pos:end="303:92">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="305:11" pos:end="321:9">else if <condition pos:start="305:19" pos:end="305:29">(<expr pos:start="305:20" pos:end="305:28"><name pos:start="305:20" pos:end="305:22">tag</name> <operator pos:start="305:24" pos:end="305:25">==</operator> <literal type="number" pos:start="305:27" pos:end="305:28">42</literal></expr>)</condition> <block pos:start="305:31" pos:end="321:9">{<block_content pos:start="307:13" pos:end="319:82">

            <expr_stmt pos:start="307:13" pos:end="307:70"><expr pos:start="307:13" pos:end="307:69"><call pos:start="307:13" pos:end="307:69"><name pos:start="307:13" pos:end="307:18">av_log</name><argument_list pos:start="307:19" pos:end="307:69">(<argument pos:start="307:20" pos:end="307:24"><expr pos:start="307:20" pos:end="307:24"><name pos:start="307:20" pos:end="307:24">avctx</name></expr></argument>, <argument pos:start="307:27" pos:end="307:38"><expr pos:start="307:27" pos:end="307:38"><name pos:start="307:27" pos:end="307:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="307:41" pos:end="307:62"><expr pos:start="307:41" pos:end="307:62"><literal type="string" pos:start="307:41" pos:end="307:62">"Highpass height %i\n"</literal></expr></argument>, <argument pos:start="307:65" pos:end="307:68"><expr pos:start="307:65" pos:end="307:68"><name pos:start="307:65" pos:end="307:68">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="309:13" pos:end="317:13"><if pos:start="309:13" pos:end="317:13">if <condition pos:start="309:16" pos:end="309:25">(<expr pos:start="309:17" pos:end="309:24"><name pos:start="309:17" pos:end="309:20">data</name> <operator pos:start="309:22" pos:end="309:22">&lt;</operator> <literal type="number" pos:start="309:24" pos:end="309:24">3</literal></expr>)</condition> <block pos:start="309:27" pos:end="317:13">{<block_content pos:start="311:17" pos:end="315:22">

                <expr_stmt pos:start="311:17" pos:end="311:73"><expr pos:start="311:17" pos:end="311:72"><call pos:start="311:17" pos:end="311:72"><name pos:start="311:17" pos:end="311:22">av_log</name><argument_list pos:start="311:23" pos:end="311:72">(<argument pos:start="311:24" pos:end="311:28"><expr pos:start="311:24" pos:end="311:28"><name pos:start="311:24" pos:end="311:28">avctx</name></expr></argument>, <argument pos:start="311:31" pos:end="311:42"><expr pos:start="311:31" pos:end="311:42"><name pos:start="311:31" pos:end="311:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="311:45" pos:end="311:71"><expr pos:start="311:45" pos:end="311:71"><literal type="string" pos:start="311:45" pos:end="311:71">"Invalid highpass height\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="313:17" pos:end="313:38"><expr pos:start="313:17" pos:end="313:37"><name pos:start="313:17" pos:end="313:19">ret</name> <operator pos:start="313:21" pos:end="313:21">=</operator> <call pos:start="313:23" pos:end="313:37"><name pos:start="313:23" pos:end="313:29">AVERROR</name><argument_list pos:start="313:30" pos:end="313:37">(<argument pos:start="313:31" pos:end="313:36"><expr pos:start="313:31" pos:end="313:36"><name pos:start="313:31" pos:end="313:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="315:17" pos:end="315:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="319:13" pos:end="319:82"><expr pos:start="319:13" pos:end="319:81"><name pos:start="319:13" pos:end="319:36"><name pos:start="319:13" pos:end="319:13">s</name><operator pos:start="319:14" pos:end="319:15">-&gt;</operator><name pos:start="319:16" pos:end="319:20">plane</name><index pos:start="319:21" pos:end="319:36">[<expr pos:start="319:22" pos:end="319:35"><name pos:start="319:22" pos:end="319:35"><name pos:start="319:22" pos:end="319:22">s</name><operator pos:start="319:23" pos:end="319:24">-&gt;</operator><name pos:start="319:25" pos:end="319:35">channel_num</name></name></expr>]</index></name><operator pos:start="319:37" pos:end="319:37">.</operator><name pos:start="319:38" pos:end="319:67"><name pos:start="319:38" pos:end="319:41">band</name><index pos:start="319:42" pos:end="319:51">[<expr pos:start="319:43" pos:end="319:50"><name pos:start="319:43" pos:end="319:50"><name pos:start="319:43" pos:end="319:43">s</name><operator pos:start="319:44" pos:end="319:45">-&gt;</operator><name pos:start="319:46" pos:end="319:50">level</name></name></expr>]</index><index pos:start="319:52" pos:end="319:67">[<expr pos:start="319:53" pos:end="319:66"><name pos:start="319:53" pos:end="319:66"><name pos:start="319:53" pos:end="319:53">s</name><operator pos:start="319:54" pos:end="319:55">-&gt;</operator><name pos:start="319:56" pos:end="319:66">subband_num</name></name></expr>]</index></name><operator pos:start="319:68" pos:end="319:68">.</operator><name pos:start="319:69" pos:end="319:74">height</name> <operator pos:start="319:76" pos:end="319:76">=</operator> <name pos:start="319:78" pos:end="319:81">data</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="321:11" pos:end="339:9">else if <condition pos:start="321:19" pos:end="321:29">(<expr pos:start="321:20" pos:end="321:28"><name pos:start="321:20" pos:end="321:22">tag</name> <operator pos:start="321:24" pos:end="321:25">==</operator> <literal type="number" pos:start="321:27" pos:end="321:28">49</literal></expr>)</condition> <block pos:start="321:31" pos:end="339:9">{<block_content pos:start="323:13" pos:end="337:94">

            <expr_stmt pos:start="323:13" pos:end="323:70"><expr pos:start="323:13" pos:end="323:69"><call pos:start="323:13" pos:end="323:69"><name pos:start="323:13" pos:end="323:18">av_log</name><argument_list pos:start="323:19" pos:end="323:69">(<argument pos:start="323:20" pos:end="323:24"><expr pos:start="323:20" pos:end="323:24"><name pos:start="323:20" pos:end="323:24">avctx</name></expr></argument>, <argument pos:start="323:27" pos:end="323:38"><expr pos:start="323:27" pos:end="323:38"><name pos:start="323:27" pos:end="323:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="323:41" pos:end="323:62"><expr pos:start="323:41" pos:end="323:62"><literal type="string" pos:start="323:41" pos:end="323:62">"Highpass width2 %i\n"</literal></expr></argument>, <argument pos:start="323:65" pos:end="323:68"><expr pos:start="323:65" pos:end="323:68"><name pos:start="323:65" pos:end="323:68">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="325:13" pos:end="333:13"><if pos:start="325:13" pos:end="333:13">if <condition pos:start="325:16" pos:end="325:25">(<expr pos:start="325:17" pos:end="325:24"><name pos:start="325:17" pos:end="325:20">data</name> <operator pos:start="325:22" pos:end="325:22">&lt;</operator> <literal type="number" pos:start="325:24" pos:end="325:24">3</literal></expr>)</condition> <block pos:start="325:27" pos:end="333:13">{<block_content pos:start="327:17" pos:end="331:22">

                <expr_stmt pos:start="327:17" pos:end="327:73"><expr pos:start="327:17" pos:end="327:72"><call pos:start="327:17" pos:end="327:72"><name pos:start="327:17" pos:end="327:22">av_log</name><argument_list pos:start="327:23" pos:end="327:72">(<argument pos:start="327:24" pos:end="327:28"><expr pos:start="327:24" pos:end="327:28"><name pos:start="327:24" pos:end="327:28">avctx</name></expr></argument>, <argument pos:start="327:31" pos:end="327:42"><expr pos:start="327:31" pos:end="327:42"><name pos:start="327:31" pos:end="327:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="327:45" pos:end="327:71"><expr pos:start="327:45" pos:end="327:71"><literal type="string" pos:start="327:45" pos:end="327:71">"Invalid highpass width2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="329:17" pos:end="329:38"><expr pos:start="329:17" pos:end="329:37"><name pos:start="329:17" pos:end="329:19">ret</name> <operator pos:start="329:21" pos:end="329:21">=</operator> <call pos:start="329:23" pos:end="329:37"><name pos:start="329:23" pos:end="329:29">AVERROR</name><argument_list pos:start="329:30" pos:end="329:37">(<argument pos:start="329:31" pos:end="329:36"><expr pos:start="329:31" pos:end="329:36"><name pos:start="329:31" pos:end="329:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="331:17" pos:end="331:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="335:13" pos:end="335:82"><expr pos:start="335:13" pos:end="335:81"><name pos:start="335:13" pos:end="335:36"><name pos:start="335:13" pos:end="335:13">s</name><operator pos:start="335:14" pos:end="335:15">-&gt;</operator><name pos:start="335:16" pos:end="335:20">plane</name><index pos:start="335:21" pos:end="335:36">[<expr pos:start="335:22" pos:end="335:35"><name pos:start="335:22" pos:end="335:35"><name pos:start="335:22" pos:end="335:22">s</name><operator pos:start="335:23" pos:end="335:24">-&gt;</operator><name pos:start="335:25" pos:end="335:35">channel_num</name></name></expr>]</index></name><operator pos:start="335:37" pos:end="335:37">.</operator><name pos:start="335:38" pos:end="335:67"><name pos:start="335:38" pos:end="335:41">band</name><index pos:start="335:42" pos:end="335:51">[<expr pos:start="335:43" pos:end="335:50"><name pos:start="335:43" pos:end="335:50"><name pos:start="335:43" pos:end="335:43">s</name><operator pos:start="335:44" pos:end="335:45">-&gt;</operator><name pos:start="335:46" pos:end="335:50">level</name></name></expr>]</index><index pos:start="335:52" pos:end="335:67">[<expr pos:start="335:53" pos:end="335:66"><name pos:start="335:53" pos:end="335:66"><name pos:start="335:53" pos:end="335:53">s</name><operator pos:start="335:54" pos:end="335:55">-&gt;</operator><name pos:start="335:56" pos:end="335:66">subband_num</name></name></expr>]</index></name><operator pos:start="335:68" pos:end="335:68">.</operator><name pos:start="335:69" pos:end="335:73">width</name>  <operator pos:start="335:76" pos:end="335:76">=</operator> <name pos:start="335:78" pos:end="335:81">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:94"><expr pos:start="337:13" pos:end="337:93"><name pos:start="337:13" pos:end="337:36"><name pos:start="337:13" pos:end="337:13">s</name><operator pos:start="337:14" pos:end="337:15">-&gt;</operator><name pos:start="337:16" pos:end="337:20">plane</name><index pos:start="337:21" pos:end="337:36">[<expr pos:start="337:22" pos:end="337:35"><name pos:start="337:22" pos:end="337:35"><name pos:start="337:22" pos:end="337:22">s</name><operator pos:start="337:23" pos:end="337:24">-&gt;</operator><name pos:start="337:25" pos:end="337:35">channel_num</name></name></expr>]</index></name><operator pos:start="337:37" pos:end="337:37">.</operator><name pos:start="337:38" pos:end="337:67"><name pos:start="337:38" pos:end="337:41">band</name><index pos:start="337:42" pos:end="337:51">[<expr pos:start="337:43" pos:end="337:50"><name pos:start="337:43" pos:end="337:50"><name pos:start="337:43" pos:end="337:43">s</name><operator pos:start="337:44" pos:end="337:45">-&gt;</operator><name pos:start="337:46" pos:end="337:50">level</name></name></expr>]</index><index pos:start="337:52" pos:end="337:67">[<expr pos:start="337:53" pos:end="337:66"><name pos:start="337:53" pos:end="337:66"><name pos:start="337:53" pos:end="337:53">s</name><operator pos:start="337:54" pos:end="337:55">-&gt;</operator><name pos:start="337:56" pos:end="337:66">subband_num</name></name></expr>]</index></name><operator pos:start="337:68" pos:end="337:68">.</operator><name pos:start="337:69" pos:end="337:74">stride</name> <operator pos:start="337:76" pos:end="337:76">=</operator> <call pos:start="337:78" pos:end="337:93"><name pos:start="337:78" pos:end="337:84">FFALIGN</name><argument_list pos:start="337:85" pos:end="337:93">(<argument pos:start="337:86" pos:end="337:89"><expr pos:start="337:86" pos:end="337:89"><name pos:start="337:86" pos:end="337:89">data</name></expr></argument>, <argument pos:start="337:92" pos:end="337:92"><expr pos:start="337:92" pos:end="337:92"><literal type="number" pos:start="337:92" pos:end="337:92">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="339:11" pos:end="355:9">else if <condition pos:start="339:19" pos:end="339:29">(<expr pos:start="339:20" pos:end="339:28"><name pos:start="339:20" pos:end="339:22">tag</name> <operator pos:start="339:24" pos:end="339:25">==</operator> <literal type="number" pos:start="339:27" pos:end="339:28">50</literal></expr>)</condition> <block pos:start="339:31" pos:end="355:9">{<block_content pos:start="341:13" pos:end="353:82">

            <expr_stmt pos:start="341:13" pos:end="341:71"><expr pos:start="341:13" pos:end="341:70"><call pos:start="341:13" pos:end="341:70"><name pos:start="341:13" pos:end="341:18">av_log</name><argument_list pos:start="341:19" pos:end="341:70">(<argument pos:start="341:20" pos:end="341:24"><expr pos:start="341:20" pos:end="341:24"><name pos:start="341:20" pos:end="341:24">avctx</name></expr></argument>, <argument pos:start="341:27" pos:end="341:38"><expr pos:start="341:27" pos:end="341:38"><name pos:start="341:27" pos:end="341:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="341:41" pos:end="341:63"><expr pos:start="341:41" pos:end="341:63"><literal type="string" pos:start="341:41" pos:end="341:63">"Highpass height2 %i\n"</literal></expr></argument>, <argument pos:start="341:66" pos:end="341:69"><expr pos:start="341:66" pos:end="341:69"><name pos:start="341:66" pos:end="341:69">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="343:13" pos:end="351:13"><if pos:start="343:13" pos:end="351:13">if <condition pos:start="343:16" pos:end="343:25">(<expr pos:start="343:17" pos:end="343:24"><name pos:start="343:17" pos:end="343:20">data</name> <operator pos:start="343:22" pos:end="343:22">&lt;</operator> <literal type="number" pos:start="343:24" pos:end="343:24">3</literal></expr>)</condition> <block pos:start="343:27" pos:end="351:13">{<block_content pos:start="345:17" pos:end="349:22">

                <expr_stmt pos:start="345:17" pos:end="345:74"><expr pos:start="345:17" pos:end="345:73"><call pos:start="345:17" pos:end="345:73"><name pos:start="345:17" pos:end="345:22">av_log</name><argument_list pos:start="345:23" pos:end="345:73">(<argument pos:start="345:24" pos:end="345:28"><expr pos:start="345:24" pos:end="345:28"><name pos:start="345:24" pos:end="345:28">avctx</name></expr></argument>, <argument pos:start="345:31" pos:end="345:42"><expr pos:start="345:31" pos:end="345:42"><name pos:start="345:31" pos:end="345:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="345:45" pos:end="345:72"><expr pos:start="345:45" pos:end="345:72"><literal type="string" pos:start="345:45" pos:end="345:72">"Invalid highpass height2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="347:17" pos:end="347:38"><expr pos:start="347:17" pos:end="347:37"><name pos:start="347:17" pos:end="347:19">ret</name> <operator pos:start="347:21" pos:end="347:21">=</operator> <call pos:start="347:23" pos:end="347:37"><name pos:start="347:23" pos:end="347:29">AVERROR</name><argument_list pos:start="347:30" pos:end="347:37">(<argument pos:start="347:31" pos:end="347:36"><expr pos:start="347:31" pos:end="347:36"><name pos:start="347:31" pos:end="347:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="349:17" pos:end="349:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="353:13" pos:end="353:82"><expr pos:start="353:13" pos:end="353:81"><name pos:start="353:13" pos:end="353:36"><name pos:start="353:13" pos:end="353:13">s</name><operator pos:start="353:14" pos:end="353:15">-&gt;</operator><name pos:start="353:16" pos:end="353:20">plane</name><index pos:start="353:21" pos:end="353:36">[<expr pos:start="353:22" pos:end="353:35"><name pos:start="353:22" pos:end="353:35"><name pos:start="353:22" pos:end="353:22">s</name><operator pos:start="353:23" pos:end="353:24">-&gt;</operator><name pos:start="353:25" pos:end="353:35">channel_num</name></name></expr>]</index></name><operator pos:start="353:37" pos:end="353:37">.</operator><name pos:start="353:38" pos:end="353:67"><name pos:start="353:38" pos:end="353:41">band</name><index pos:start="353:42" pos:end="353:51">[<expr pos:start="353:43" pos:end="353:50"><name pos:start="353:43" pos:end="353:50"><name pos:start="353:43" pos:end="353:43">s</name><operator pos:start="353:44" pos:end="353:45">-&gt;</operator><name pos:start="353:46" pos:end="353:50">level</name></name></expr>]</index><index pos:start="353:52" pos:end="353:67">[<expr pos:start="353:53" pos:end="353:66"><name pos:start="353:53" pos:end="353:66"><name pos:start="353:53" pos:end="353:53">s</name><operator pos:start="353:54" pos:end="353:55">-&gt;</operator><name pos:start="353:56" pos:end="353:66">subband_num</name></name></expr>]</index></name><operator pos:start="353:68" pos:end="353:68">.</operator><name pos:start="353:69" pos:end="353:74">height</name> <operator pos:start="353:76" pos:end="353:76">=</operator> <name pos:start="353:78" pos:end="353:81">data</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="355:11" pos:end="361:9">else if <condition pos:start="355:19" pos:end="355:29">(<expr pos:start="355:20" pos:end="355:28"><name pos:start="355:20" pos:end="355:22">tag</name> <operator pos:start="355:24" pos:end="355:25">==</operator> <literal type="number" pos:start="355:27" pos:end="355:28">71</literal></expr>)</condition> <block pos:start="355:31" pos:end="361:9">{<block_content pos:start="357:13" pos:end="359:70">

            <expr_stmt pos:start="357:13" pos:end="357:31"><expr pos:start="357:13" pos:end="357:30"><name pos:start="357:13" pos:end="357:23"><name pos:start="357:13" pos:end="357:13">s</name><operator pos:start="357:14" pos:end="357:15">-&gt;</operator><name pos:start="357:16" pos:end="357:23">codebook</name></name> <operator pos:start="357:25" pos:end="357:25">=</operator> <name pos:start="357:27" pos:end="357:30">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="359:13" pos:end="359:70"><expr pos:start="359:13" pos:end="359:69"><call pos:start="359:13" pos:end="359:69"><name pos:start="359:13" pos:end="359:18">av_log</name><argument_list pos:start="359:19" pos:end="359:69">(<argument pos:start="359:20" pos:end="359:24"><expr pos:start="359:20" pos:end="359:24"><name pos:start="359:20" pos:end="359:24">avctx</name></expr></argument>, <argument pos:start="359:27" pos:end="359:38"><expr pos:start="359:27" pos:end="359:38"><name pos:start="359:27" pos:end="359:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="359:41" pos:end="359:55"><expr pos:start="359:41" pos:end="359:55"><literal type="string" pos:start="359:41" pos:end="359:55">"Codebook %i\n"</literal></expr></argument>, <argument pos:start="359:58" pos:end="359:68"><expr pos:start="359:58" pos:end="359:68"><name pos:start="359:58" pos:end="359:68"><name pos:start="359:58" pos:end="359:58">s</name><operator pos:start="359:59" pos:end="359:60">-&gt;</operator><name pos:start="359:61" pos:end="359:68">codebook</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="361:11" pos:end="367:9">else if <condition pos:start="361:19" pos:end="361:29">(<expr pos:start="361:20" pos:end="361:28"><name pos:start="361:20" pos:end="361:22">tag</name> <operator pos:start="361:24" pos:end="361:25">==</operator> <literal type="number" pos:start="361:27" pos:end="361:28">72</literal></expr>)</condition> <block pos:start="361:31" pos:end="367:9">{<block_content pos:start="363:13" pos:end="365:77">

            <expr_stmt pos:start="363:13" pos:end="363:31"><expr pos:start="363:13" pos:end="363:30"><name pos:start="363:13" pos:end="363:23"><name pos:start="363:13" pos:end="363:13">s</name><operator pos:start="363:14" pos:end="363:15">-&gt;</operator><name pos:start="363:16" pos:end="363:23">codebook</name></name> <operator pos:start="363:25" pos:end="363:25">=</operator> <name pos:start="363:27" pos:end="363:30">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="365:13" pos:end="365:77"><expr pos:start="365:13" pos:end="365:76"><call pos:start="365:13" pos:end="365:76"><name pos:start="365:13" pos:end="365:18">av_log</name><argument_list pos:start="365:19" pos:end="365:76">(<argument pos:start="365:20" pos:end="365:24"><expr pos:start="365:20" pos:end="365:24"><name pos:start="365:20" pos:end="365:24">avctx</name></expr></argument>, <argument pos:start="365:27" pos:end="365:38"><expr pos:start="365:27" pos:end="365:38"><name pos:start="365:27" pos:end="365:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="365:41" pos:end="365:62"><expr pos:start="365:41" pos:end="365:62"><literal type="string" pos:start="365:41" pos:end="365:62">"Other codebook? %i\n"</literal></expr></argument>, <argument pos:start="365:65" pos:end="365:75"><expr pos:start="365:65" pos:end="365:75"><name pos:start="365:65" pos:end="365:75"><name pos:start="365:65" pos:end="365:65">s</name><operator pos:start="365:66" pos:end="365:67">-&gt;</operator><name pos:start="365:68" pos:end="365:75">codebook</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="367:11" pos:end="383:9">else if <condition pos:start="367:19" pos:end="367:29">(<expr pos:start="367:20" pos:end="367:28"><name pos:start="367:20" pos:end="367:22">tag</name> <operator pos:start="367:24" pos:end="367:25">==</operator> <literal type="number" pos:start="367:27" pos:end="367:28">70</literal></expr>)</condition> <block pos:start="367:31" pos:end="383:9">{<block_content pos:start="369:13" pos:end="381:26">

            <expr_stmt pos:start="369:13" pos:end="369:85"><expr pos:start="369:13" pos:end="369:84"><call pos:start="369:13" pos:end="369:84"><name pos:start="369:13" pos:end="369:18">av_log</name><argument_list pos:start="369:19" pos:end="369:84">(<argument pos:start="369:20" pos:end="369:24"><expr pos:start="369:20" pos:end="369:24"><name pos:start="369:20" pos:end="369:24">avctx</name></expr></argument>, <argument pos:start="369:27" pos:end="369:38"><expr pos:start="369:27" pos:end="369:38"><name pos:start="369:27" pos:end="369:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="369:41" pos:end="369:77"><expr pos:start="369:41" pos:end="369:77"><literal type="string" pos:start="369:41" pos:end="369:77">"Subsampling or bit-depth flag? %i\n"</literal></expr></argument>, <argument pos:start="369:80" pos:end="369:83"><expr pos:start="369:80" pos:end="369:83"><name pos:start="369:80" pos:end="369:83">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="371:13" pos:end="379:13"><if pos:start="371:13" pos:end="379:13">if <condition pos:start="371:16" pos:end="371:44">(<expr pos:start="371:17" pos:end="371:43"><operator pos:start="371:17" pos:end="371:17">!</operator><operator pos:start="371:18" pos:end="371:18">(</operator><name pos:start="371:19" pos:end="371:22">data</name> <operator pos:start="371:24" pos:end="371:25">==</operator> <literal type="number" pos:start="371:27" pos:end="371:28">10</literal> <operator pos:start="371:30" pos:end="371:31">||</operator> <name pos:start="371:33" pos:end="371:36">data</name> <operator pos:start="371:38" pos:end="371:39">==</operator> <literal type="number" pos:start="371:41" pos:end="371:42">12</literal><operator pos:start="371:43" pos:end="371:43">)</operator></expr>)</condition> <block pos:start="371:46" pos:end="379:13">{<block_content pos:start="373:17" pos:end="377:22">

                <expr_stmt pos:start="373:17" pos:end="373:74"><expr pos:start="373:17" pos:end="373:73"><call pos:start="373:17" pos:end="373:73"><name pos:start="373:17" pos:end="373:22">av_log</name><argument_list pos:start="373:23" pos:end="373:73">(<argument pos:start="373:24" pos:end="373:28"><expr pos:start="373:24" pos:end="373:28"><name pos:start="373:24" pos:end="373:28">avctx</name></expr></argument>, <argument pos:start="373:31" pos:end="373:42"><expr pos:start="373:31" pos:end="373:42"><name pos:start="373:31" pos:end="373:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="373:45" pos:end="373:72"><expr pos:start="373:45" pos:end="373:72"><literal type="string" pos:start="373:45" pos:end="373:72">"Invalid bits per channel\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="375:17" pos:end="375:38"><expr pos:start="375:17" pos:end="375:37"><name pos:start="375:17" pos:end="375:19">ret</name> <operator pos:start="375:21" pos:end="375:21">=</operator> <call pos:start="375:23" pos:end="375:37"><name pos:start="375:23" pos:end="375:29">AVERROR</name><argument_list pos:start="375:30" pos:end="375:37">(<argument pos:start="375:31" pos:end="375:36"><expr pos:start="375:31" pos:end="375:36"><name pos:start="375:31" pos:end="375:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="377:17" pos:end="377:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="381:13" pos:end="381:26"><expr pos:start="381:13" pos:end="381:25"><name pos:start="381:13" pos:end="381:18"><name pos:start="381:13" pos:end="381:13">s</name><operator pos:start="381:14" pos:end="381:15">-&gt;</operator><name pos:start="381:16" pos:end="381:18">bpc</name></name> <operator pos:start="381:20" pos:end="381:20">=</operator> <name pos:start="381:22" pos:end="381:25">data</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="383:11" pos:end="411:9">else if <condition pos:start="383:19" pos:end="383:29">(<expr pos:start="383:20" pos:end="383:28"><name pos:start="383:20" pos:end="383:22">tag</name> <operator pos:start="383:24" pos:end="383:25">==</operator> <literal type="number" pos:start="383:27" pos:end="383:28">84</literal></expr>)</condition> <block pos:start="383:31" pos:end="411:9">{<block_content pos:start="385:13" pos:end="409:62">

            <expr_stmt pos:start="385:13" pos:end="385:69"><expr pos:start="385:13" pos:end="385:68"><call pos:start="385:13" pos:end="385:68"><name pos:start="385:13" pos:end="385:18">av_log</name><argument_list pos:start="385:19" pos:end="385:68">(<argument pos:start="385:20" pos:end="385:24"><expr pos:start="385:20" pos:end="385:24"><name pos:start="385:20" pos:end="385:24">avctx</name></expr></argument>, <argument pos:start="385:27" pos:end="385:38"><expr pos:start="385:27" pos:end="385:38"><name pos:start="385:27" pos:end="385:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="385:41" pos:end="385:61"><expr pos:start="385:41" pos:end="385:61"><literal type="string" pos:start="385:41" pos:end="385:61">"Sample format? %i\n"</literal></expr></argument>, <argument pos:start="385:64" pos:end="385:67"><expr pos:start="385:64" pos:end="385:67"><name pos:start="385:64" pos:end="385:67">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="387:13" pos:end="407:13"><if pos:start="387:13" pos:end="389:55">if <condition pos:start="387:16" pos:end="387:26">(<expr pos:start="387:17" pos:end="387:25"><name pos:start="387:17" pos:end="387:20">data</name> <operator pos:start="387:22" pos:end="387:23">==</operator> <literal type="number" pos:start="387:25" pos:end="387:25">1</literal></expr>)</condition><block type="pseudo" pos:start="389:17" pos:end="389:55"><block_content pos:start="389:17" pos:end="389:55">

                <expr_stmt pos:start="389:17" pos:end="389:55"><expr pos:start="389:17" pos:end="389:54"><name pos:start="389:17" pos:end="389:31"><name pos:start="389:17" pos:end="389:17">s</name><operator pos:start="389:18" pos:end="389:19">-&gt;</operator><name pos:start="389:20" pos:end="389:31">coded_format</name></name> <operator pos:start="389:33" pos:end="389:33">=</operator> <name pos:start="389:35" pos:end="389:54">AV_PIX_FMT_YUV422P10</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="391:13" pos:end="393:52">else if <condition pos:start="391:21" pos:end="391:31">(<expr pos:start="391:22" pos:end="391:30"><name pos:start="391:22" pos:end="391:25">data</name> <operator pos:start="391:27" pos:end="391:28">==</operator> <literal type="number" pos:start="391:30" pos:end="391:30">3</literal></expr>)</condition><block type="pseudo" pos:start="393:17" pos:end="393:52"><block_content pos:start="393:17" pos:end="393:52">

                <expr_stmt pos:start="393:17" pos:end="393:52"><expr pos:start="393:17" pos:end="393:51"><name pos:start="393:17" pos:end="393:31"><name pos:start="393:17" pos:end="393:17">s</name><operator pos:start="393:18" pos:end="393:19">-&gt;</operator><name pos:start="393:20" pos:end="393:31">coded_format</name></name> <operator pos:start="393:33" pos:end="393:33">=</operator> <name pos:start="393:35" pos:end="393:51">AV_PIX_FMT_GBRP12</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="395:13" pos:end="397:53">else if <condition pos:start="395:21" pos:end="395:31">(<expr pos:start="395:22" pos:end="395:30"><name pos:start="395:22" pos:end="395:25">data</name> <operator pos:start="395:27" pos:end="395:28">==</operator> <literal type="number" pos:start="395:30" pos:end="395:30">4</literal></expr>)</condition><block type="pseudo" pos:start="397:17" pos:end="397:53"><block_content pos:start="397:17" pos:end="397:53">

                <expr_stmt pos:start="397:17" pos:end="397:53"><expr pos:start="397:17" pos:end="397:52"><name pos:start="397:17" pos:end="397:31"><name pos:start="397:17" pos:end="397:17">s</name><operator pos:start="397:18" pos:end="397:19">-&gt;</operator><name pos:start="397:20" pos:end="397:31">coded_format</name></name> <operator pos:start="397:33" pos:end="397:33">=</operator> <name pos:start="397:35" pos:end="397:52">AV_PIX_FMT_GBRAP12</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="399:13" pos:end="407:13">else <block pos:start="399:18" pos:end="407:13">{<block_content pos:start="401:17" pos:end="405:22">

                <expr_stmt pos:start="401:17" pos:end="401:87"><expr pos:start="401:17" pos:end="401:86"><call pos:start="401:17" pos:end="401:86"><name pos:start="401:17" pos:end="401:45">avpriv_report_missing_feature</name><argument_list pos:start="401:46" pos:end="401:86">(<argument pos:start="401:47" pos:end="401:51"><expr pos:start="401:47" pos:end="401:51"><name pos:start="401:47" pos:end="401:51">avctx</name></expr></argument>, <argument pos:start="401:54" pos:end="401:79"><expr pos:start="401:54" pos:end="401:79"><literal type="string" pos:start="401:54" pos:end="401:73">"Sample format of %"</literal><name pos:start="401:74" pos:end="401:79">PRIu16</name></expr></argument>, <argument pos:start="401:82" pos:end="401:85"><expr pos:start="401:82" pos:end="401:85"><name pos:start="401:82" pos:end="401:85">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="403:17" pos:end="403:43"><expr pos:start="403:17" pos:end="403:42"><name pos:start="403:17" pos:end="403:19">ret</name> <operator pos:start="403:21" pos:end="403:21">=</operator> <name pos:start="403:23" pos:end="403:42">AVERROR_PATCHWELCOME</name></expr>;</expr_stmt>

                <break pos:start="405:17" pos:end="405:22">break;</break>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="409:13" pos:end="409:62"><expr pos:start="409:13" pos:end="409:61"><name pos:start="409:13" pos:end="409:18">planes</name> <operator pos:start="409:20" pos:end="409:20">=</operator> <call pos:start="409:22" pos:end="409:61"><name pos:start="409:22" pos:end="409:44">av_pix_fmt_count_planes</name><argument_list pos:start="409:45" pos:end="409:61">(<argument pos:start="409:46" pos:end="409:60"><expr pos:start="409:46" pos:end="409:60"><name pos:start="409:46" pos:end="409:60"><name pos:start="409:46" pos:end="409:46">s</name><operator pos:start="409:47" pos:end="409:48">-&gt;</operator><name pos:start="409:49" pos:end="409:60">coded_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="411:11" pos:end="413:80">else<block type="pseudo" pos:start="413:13" pos:end="413:80"><block_content pos:start="413:13" pos:end="413:80">

            <expr_stmt pos:start="413:13" pos:end="413:80"><expr pos:start="413:13" pos:end="413:79"><call pos:start="413:13" pos:end="413:79"><name pos:start="413:13" pos:end="413:18">av_log</name><argument_list pos:start="413:19" pos:end="413:79">(<argument pos:start="413:20" pos:end="413:24"><expr pos:start="413:20" pos:end="413:24"><name pos:start="413:20" pos:end="413:24">avctx</name></expr></argument>, <argument pos:start="413:27" pos:end="413:38"><expr pos:start="413:27" pos:end="413:38"><name pos:start="413:27" pos:end="413:38">AV_LOG_DEBUG</name></expr></argument>,  <argument pos:start="413:42" pos:end="413:67"><expr pos:start="413:42" pos:end="413:67"><literal type="string" pos:start="413:42" pos:end="413:67">"Unknown tag %i data %x\n"</literal></expr></argument>, <argument pos:start="413:70" pos:end="413:72"><expr pos:start="413:70" pos:end="413:72"><name pos:start="413:70" pos:end="413:72">tag</name></expr></argument>, <argument pos:start="413:75" pos:end="413:78"><expr pos:start="413:75" pos:end="413:78"><name pos:start="413:75" pos:end="413:78">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <comment type="block" pos:start="417:9" pos:end="417:44">/* Some kind of end of header tag */</comment>

        <if_stmt pos:start="419:9" pos:end="465:9"><if pos:start="419:9" pos:end="465:9">if <condition pos:start="419:12" pos:end="421:47">(<expr pos:start="419:13" pos:end="421:46"><name pos:start="419:13" pos:end="419:15">tag</name> <operator pos:start="419:17" pos:end="419:18">==</operator> <literal type="number" pos:start="419:20" pos:end="419:20">4</literal> <operator pos:start="419:22" pos:end="419:23">&amp;&amp;</operator> <name pos:start="419:25" pos:end="419:28">data</name> <operator pos:start="419:30" pos:end="419:31">==</operator> <literal type="number" pos:start="419:33" pos:end="419:38">0x1a4a</literal> <operator pos:start="419:40" pos:end="419:41">&amp;&amp;</operator> <name pos:start="419:43" pos:end="419:56"><name pos:start="419:43" pos:end="419:43">s</name><operator pos:start="419:44" pos:end="419:45">-&gt;</operator><name pos:start="419:46" pos:end="419:56">coded_width</name></name> <operator pos:start="419:58" pos:end="419:59">&amp;&amp;</operator> <name pos:start="419:61" pos:end="419:75"><name pos:start="419:61" pos:end="419:61">s</name><operator pos:start="419:62" pos:end="419:63">-&gt;</operator><name pos:start="419:64" pos:end="419:75">coded_height</name></name> <operator pos:start="419:77" pos:end="419:78">&amp;&amp;</operator>

            <name pos:start="421:13" pos:end="421:27"><name pos:start="421:13" pos:end="421:13">s</name><operator pos:start="421:14" pos:end="421:15">-&gt;</operator><name pos:start="421:16" pos:end="421:27">coded_format</name></name> <operator pos:start="421:29" pos:end="421:30">!=</operator> <name pos:start="421:32" pos:end="421:46">AV_PIX_FMT_NONE</name></expr>)</condition> <block pos:start="421:49" pos:end="465:9">{<block_content pos:start="423:13" pos:end="463:27">

            <if_stmt pos:start="423:13" pos:end="437:13"><if pos:start="423:13" pos:end="437:13">if <condition pos:start="423:16" pos:end="425:47">(<expr pos:start="423:17" pos:end="425:46"><name pos:start="423:17" pos:end="423:26"><name pos:start="423:17" pos:end="423:17">s</name><operator pos:start="423:18" pos:end="423:19">-&gt;</operator><name pos:start="423:20" pos:end="423:26">a_width</name></name> <operator pos:start="423:28" pos:end="423:29">!=</operator> <name pos:start="423:31" pos:end="423:44"><name pos:start="423:31" pos:end="423:31">s</name><operator pos:start="423:32" pos:end="423:33">-&gt;</operator><name pos:start="423:34" pos:end="423:44">coded_width</name></name> <operator pos:start="423:46" pos:end="423:47">||</operator> <name pos:start="423:49" pos:end="423:59"><name pos:start="423:49" pos:end="423:49">s</name><operator pos:start="423:50" pos:end="423:51">-&gt;</operator><name pos:start="423:52" pos:end="423:59">a_height</name></name> <operator pos:start="423:61" pos:end="423:62">!=</operator> <name pos:start="423:64" pos:end="423:78"><name pos:start="423:64" pos:end="423:64">s</name><operator pos:start="423:65" pos:end="423:66">-&gt;</operator><name pos:start="423:67" pos:end="423:78">coded_height</name></name> <operator pos:start="423:80" pos:end="423:81">||</operator>

                <name pos:start="425:17" pos:end="425:27"><name pos:start="425:17" pos:end="425:17">s</name><operator pos:start="425:18" pos:end="425:19">-&gt;</operator><name pos:start="425:20" pos:end="425:27">a_format</name></name> <operator pos:start="425:29" pos:end="425:30">!=</operator> <name pos:start="425:32" pos:end="425:46"><name pos:start="425:32" pos:end="425:32">s</name><operator pos:start="425:33" pos:end="425:34">-&gt;</operator><name pos:start="425:35" pos:end="425:46">coded_format</name></name></expr>)</condition> <block pos:start="425:49" pos:end="437:13">{<block_content pos:start="427:17" pos:end="435:17">

                <expr_stmt pos:start="427:17" pos:end="427:36"><expr pos:start="427:17" pos:end="427:35"><call pos:start="427:17" pos:end="427:35"><name pos:start="427:17" pos:end="427:28">free_buffers</name><argument_list pos:start="427:29" pos:end="427:35">(<argument pos:start="427:30" pos:end="427:34"><expr pos:start="427:30" pos:end="427:34"><name pos:start="427:30" pos:end="427:34">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="429:17" pos:end="435:17"><if pos:start="429:17" pos:end="435:17">if <condition pos:start="429:20" pos:end="429:53">(<expr pos:start="429:21" pos:end="429:52"><operator pos:start="429:21" pos:end="429:21">(</operator><name pos:start="429:22" pos:end="429:24">ret</name> <operator pos:start="429:26" pos:end="429:26">=</operator> <call pos:start="429:28" pos:end="429:47"><name pos:start="429:28" pos:end="429:40">alloc_buffers</name><argument_list pos:start="429:41" pos:end="429:47">(<argument pos:start="429:42" pos:end="429:46"><expr pos:start="429:42" pos:end="429:46"><name pos:start="429:42" pos:end="429:46">avctx</name></expr></argument>)</argument_list></call><operator pos:start="429:48" pos:end="429:48">)</operator> <operator pos:start="429:50" pos:end="429:50">&lt;</operator> <literal type="number" pos:start="429:52" pos:end="429:52">0</literal></expr>)</condition> <block pos:start="429:55" pos:end="435:17">{<block_content pos:start="431:21" pos:end="433:31">

                    <expr_stmt pos:start="431:21" pos:end="431:40"><expr pos:start="431:21" pos:end="431:39"><call pos:start="431:21" pos:end="431:39"><name pos:start="431:21" pos:end="431:32">free_buffers</name><argument_list pos:start="431:33" pos:end="431:39">(<argument pos:start="431:34" pos:end="431:38"><expr pos:start="431:34" pos:end="431:38"><name pos:start="431:34" pos:end="431:38">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="433:21" pos:end="433:31">return <expr pos:start="433:28" pos:end="433:30"><name pos:start="433:28" pos:end="433:30">ret</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="439:13" pos:end="439:76"><expr pos:start="439:13" pos:end="439:75"><name pos:start="439:13" pos:end="439:15">ret</name> <operator pos:start="439:17" pos:end="439:17">=</operator> <call pos:start="439:19" pos:end="439:75"><name pos:start="439:19" pos:end="439:35">ff_set_dimensions</name><argument_list pos:start="439:36" pos:end="439:75">(<argument pos:start="439:37" pos:end="439:41"><expr pos:start="439:37" pos:end="439:41"><name pos:start="439:37" pos:end="439:41">avctx</name></expr></argument>, <argument pos:start="439:44" pos:end="439:57"><expr pos:start="439:44" pos:end="439:57"><name pos:start="439:44" pos:end="439:57"><name pos:start="439:44" pos:end="439:44">s</name><operator pos:start="439:45" pos:end="439:46">-&gt;</operator><name pos:start="439:47" pos:end="439:57">coded_width</name></name></expr></argument>, <argument pos:start="439:60" pos:end="439:74"><expr pos:start="439:60" pos:end="439:74"><name pos:start="439:60" pos:end="439:74"><name pos:start="439:60" pos:end="439:60">s</name><operator pos:start="439:61" pos:end="439:62">-&gt;</operator><name pos:start="439:63" pos:end="439:74">coded_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="441:13" pos:end="443:27"><if pos:start="441:13" pos:end="443:27">if <condition pos:start="441:16" pos:end="441:24">(<expr pos:start="441:17" pos:end="441:23"><name pos:start="441:17" pos:end="441:19">ret</name> <operator pos:start="441:21" pos:end="441:21">&lt;</operator> <literal type="number" pos:start="441:23" pos:end="441:23">0</literal></expr>)</condition><block type="pseudo" pos:start="443:17" pos:end="443:27"><block_content pos:start="443:17" pos:end="443:27">

                <return pos:start="443:17" pos:end="443:27">return <expr pos:start="443:24" pos:end="443:26"><name pos:start="443:24" pos:end="443:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="445:13" pos:end="447:32"><expr pos:start="445:13" pos:end="447:31"><name pos:start="445:13" pos:end="445:26"><name pos:start="445:13" pos:end="445:17">frame</name><operator pos:start="445:18" pos:end="445:18">.</operator><name pos:start="445:19" pos:end="445:19">f</name><operator pos:start="445:20" pos:end="445:21">-&gt;</operator><name pos:start="445:22" pos:end="445:26">width</name></name> <operator pos:start="445:28" pos:end="445:28">=</operator>

            <name pos:start="447:13" pos:end="447:27"><name pos:start="447:13" pos:end="447:17">frame</name><operator pos:start="447:18" pos:end="447:18">.</operator><name pos:start="447:19" pos:end="447:19">f</name><operator pos:start="447:20" pos:end="447:21">-&gt;</operator><name pos:start="447:22" pos:end="447:27">height</name></name> <operator pos:start="447:29" pos:end="447:29">=</operator> <literal type="number" pos:start="447:31" pos:end="447:31">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="451:13" pos:end="453:27"><if pos:start="451:13" pos:end="453:27">if <condition pos:start="451:16" pos:end="451:67">(<expr pos:start="451:17" pos:end="451:66"><operator pos:start="451:17" pos:end="451:17">(</operator><name pos:start="451:18" pos:end="451:20">ret</name> <operator pos:start="451:22" pos:end="451:22">=</operator> <call pos:start="451:24" pos:end="451:61"><name pos:start="451:24" pos:end="451:43">ff_thread_get_buffer</name><argument_list pos:start="451:44" pos:end="451:61">(<argument pos:start="451:45" pos:end="451:49"><expr pos:start="451:45" pos:end="451:49"><name pos:start="451:45" pos:end="451:49">avctx</name></expr></argument>, <argument pos:start="451:52" pos:end="451:57"><expr pos:start="451:52" pos:end="451:57"><operator pos:start="451:52" pos:end="451:52">&amp;</operator><name pos:start="451:53" pos:end="451:57">frame</name></expr></argument>, <argument pos:start="451:60" pos:end="451:60"><expr pos:start="451:60" pos:end="451:60"><literal type="number" pos:start="451:60" pos:end="451:60">0</literal></expr></argument>)</argument_list></call><operator pos:start="451:62" pos:end="451:62">)</operator> <operator pos:start="451:64" pos:end="451:64">&lt;</operator> <literal type="number" pos:start="451:66" pos:end="451:66">0</literal></expr>)</condition><block type="pseudo" pos:start="453:17" pos:end="453:27"><block_content pos:start="453:17" pos:end="453:27">

                <return pos:start="453:17" pos:end="453:27">return <expr pos:start="453:24" pos:end="453:26"><name pos:start="453:24" pos:end="453:26">ret</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="457:13" pos:end="457:31"><expr pos:start="457:13" pos:end="457:30"><name pos:start="457:13" pos:end="457:26"><name pos:start="457:13" pos:end="457:13">s</name><operator pos:start="457:14" pos:end="457:15">-&gt;</operator><name pos:start="457:16" pos:end="457:26">coded_width</name></name> <operator pos:start="457:28" pos:end="457:28">=</operator> <literal type="number" pos:start="457:30" pos:end="457:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="459:13" pos:end="459:32"><expr pos:start="459:13" pos:end="459:31"><name pos:start="459:13" pos:end="459:27"><name pos:start="459:13" pos:end="459:13">s</name><operator pos:start="459:14" pos:end="459:15">-&gt;</operator><name pos:start="459:16" pos:end="459:27">coded_height</name></name> <operator pos:start="459:29" pos:end="459:29">=</operator> <literal type="number" pos:start="459:31" pos:end="459:31">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="461:13" pos:end="461:46"><expr pos:start="461:13" pos:end="461:45"><name pos:start="461:13" pos:end="461:27"><name pos:start="461:13" pos:end="461:13">s</name><operator pos:start="461:14" pos:end="461:15">-&gt;</operator><name pos:start="461:16" pos:end="461:27">coded_format</name></name> <operator pos:start="461:29" pos:end="461:29">=</operator> <name pos:start="461:31" pos:end="461:45">AV_PIX_FMT_NONE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="463:13" pos:end="463:27"><expr pos:start="463:13" pos:end="463:26"><name pos:start="463:13" pos:end="463:22">got_buffer</name> <operator pos:start="463:24" pos:end="463:24">=</operator> <literal type="number" pos:start="463:26" pos:end="463:26">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="467:9" pos:end="467:77"><expr pos:start="467:9" pos:end="467:76"><name pos:start="467:9" pos:end="467:18">coeff_data</name> <operator pos:start="467:20" pos:end="467:20">=</operator> <name pos:start="467:22" pos:end="467:45"><name pos:start="467:22" pos:end="467:22">s</name><operator pos:start="467:23" pos:end="467:24">-&gt;</operator><name pos:start="467:25" pos:end="467:29">plane</name><index pos:start="467:30" pos:end="467:45">[<expr pos:start="467:31" pos:end="467:44"><name pos:start="467:31" pos:end="467:44"><name pos:start="467:31" pos:end="467:31">s</name><operator pos:start="467:32" pos:end="467:33">-&gt;</operator><name pos:start="467:34" pos:end="467:44">channel_num</name></name></expr>]</index></name><operator pos:start="467:46" pos:end="467:46">.</operator><name pos:start="467:47" pos:end="467:76"><name pos:start="467:47" pos:end="467:53">subband</name><index pos:start="467:54" pos:end="467:76">[<expr pos:start="467:55" pos:end="467:75"><name pos:start="467:55" pos:end="467:75"><name pos:start="467:55" pos:end="467:55">s</name><operator pos:start="467:56" pos:end="467:57">-&gt;</operator><name pos:start="467:58" pos:end="467:75">subband_num_actual</name></name></expr>]</index></name></expr>;</expr_stmt>



        <comment type="block" pos:start="471:9" pos:end="471:34">/* Lowpass coefficients */</comment>

        <if_stmt pos:start="473:9" pos:end="549:9"><if pos:start="473:9" pos:end="549:9">if <condition pos:start="473:12" pos:end="473:67">(<expr pos:start="473:13" pos:end="473:66"><name pos:start="473:13" pos:end="473:15">tag</name> <operator pos:start="473:17" pos:end="473:18">==</operator> <literal type="number" pos:start="473:20" pos:end="473:20">4</literal> <operator pos:start="473:22" pos:end="473:23">&amp;&amp;</operator> <name pos:start="473:25" pos:end="473:28">data</name> <operator pos:start="473:30" pos:end="473:31">==</operator> <literal type="number" pos:start="473:33" pos:end="473:37">0xf0f</literal> <operator pos:start="473:39" pos:end="473:40">&amp;&amp;</operator> <name pos:start="473:42" pos:end="473:51"><name pos:start="473:42" pos:end="473:42">s</name><operator pos:start="473:43" pos:end="473:44">-&gt;</operator><name pos:start="473:45" pos:end="473:51">a_width</name></name> <operator pos:start="473:53" pos:end="473:54">&amp;&amp;</operator> <name pos:start="473:56" pos:end="473:66"><name pos:start="473:56" pos:end="473:56">s</name><operator pos:start="473:57" pos:end="473:58">-&gt;</operator><name pos:start="473:59" pos:end="473:66">a_height</name></name></expr>)</condition> <block pos:start="473:69" pos:end="549:9">{<block_content pos:start="475:13" pos:end="547:101">

            <decl_stmt pos:start="475:13" pos:end="475:76"><decl pos:start="475:13" pos:end="475:75"><type pos:start="475:13" pos:end="475:15"><name pos:start="475:13" pos:end="475:15">int</name></type> <name pos:start="475:17" pos:end="475:30">lowpass_height</name> <init pos:start="475:32" pos:end="475:75">= <expr pos:start="475:34" pos:end="475:75"><name pos:start="475:34" pos:end="475:57"><name pos:start="475:34" pos:end="475:34">s</name><operator pos:start="475:35" pos:end="475:36">-&gt;</operator><name pos:start="475:37" pos:end="475:41">plane</name><index pos:start="475:42" pos:end="475:57">[<expr pos:start="475:43" pos:end="475:56"><name pos:start="475:43" pos:end="475:56"><name pos:start="475:43" pos:end="475:43">s</name><operator pos:start="475:44" pos:end="475:45">-&gt;</operator><name pos:start="475:46" pos:end="475:56">channel_num</name></name></expr>]</index></name><operator pos:start="475:58" pos:end="475:58">.</operator><name pos:start="475:59" pos:end="475:68"><name pos:start="475:59" pos:end="475:62">band</name><index pos:start="475:63" pos:end="475:65">[<expr pos:start="475:64" pos:end="475:64"><literal type="number" pos:start="475:64" pos:end="475:64">0</literal></expr>]</index><index pos:start="475:66" pos:end="475:68">[<expr pos:start="475:67" pos:end="475:67"><literal type="number" pos:start="475:67" pos:end="475:67">0</literal></expr>]</index></name><operator pos:start="475:69" pos:end="475:69">.</operator><name pos:start="475:70" pos:end="475:75">height</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="477:13" pos:end="477:75"><decl pos:start="477:13" pos:end="477:74"><type pos:start="477:13" pos:end="477:15"><name pos:start="477:13" pos:end="477:15">int</name></type> <name pos:start="477:17" pos:end="477:29">lowpass_width</name>  <init pos:start="477:32" pos:end="477:74">= <expr pos:start="477:34" pos:end="477:74"><name pos:start="477:34" pos:end="477:57"><name pos:start="477:34" pos:end="477:34">s</name><operator pos:start="477:35" pos:end="477:36">-&gt;</operator><name pos:start="477:37" pos:end="477:41">plane</name><index pos:start="477:42" pos:end="477:57">[<expr pos:start="477:43" pos:end="477:56"><name pos:start="477:43" pos:end="477:56"><name pos:start="477:43" pos:end="477:43">s</name><operator pos:start="477:44" pos:end="477:45">-&gt;</operator><name pos:start="477:46" pos:end="477:56">channel_num</name></name></expr>]</index></name><operator pos:start="477:58" pos:end="477:58">.</operator><name pos:start="477:59" pos:end="477:68"><name pos:start="477:59" pos:end="477:62">band</name><index pos:start="477:63" pos:end="477:65">[<expr pos:start="477:64" pos:end="477:64"><literal type="number" pos:start="477:64" pos:end="477:64">0</literal></expr>]</index><index pos:start="477:66" pos:end="477:68">[<expr pos:start="477:67" pos:end="477:67"><literal type="number" pos:start="477:67" pos:end="477:67">0</literal></expr>]</index></name><operator pos:start="477:69" pos:end="477:69">.</operator><name pos:start="477:70" pos:end="477:74">width</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="479:13" pos:end="479:80"><decl pos:start="479:13" pos:end="479:79"><type pos:start="479:13" pos:end="479:15"><name pos:start="479:13" pos:end="479:15">int</name></type> <name pos:start="479:17" pos:end="479:32">lowpass_a_height</name> <init pos:start="479:34" pos:end="479:79">= <expr pos:start="479:36" pos:end="479:79"><name pos:start="479:36" pos:end="479:59"><name pos:start="479:36" pos:end="479:36">s</name><operator pos:start="479:37" pos:end="479:38">-&gt;</operator><name pos:start="479:39" pos:end="479:43">plane</name><index pos:start="479:44" pos:end="479:59">[<expr pos:start="479:45" pos:end="479:58"><name pos:start="479:45" pos:end="479:58"><name pos:start="479:45" pos:end="479:45">s</name><operator pos:start="479:46" pos:end="479:47">-&gt;</operator><name pos:start="479:48" pos:end="479:58">channel_num</name></name></expr>]</index></name><operator pos:start="479:60" pos:end="479:60">.</operator><name pos:start="479:61" pos:end="479:70"><name pos:start="479:61" pos:end="479:64">band</name><index pos:start="479:65" pos:end="479:67">[<expr pos:start="479:66" pos:end="479:66"><literal type="number" pos:start="479:66" pos:end="479:66">0</literal></expr>]</index><index pos:start="479:68" pos:end="479:70">[<expr pos:start="479:69" pos:end="479:69"><literal type="number" pos:start="479:69" pos:end="479:69">0</literal></expr>]</index></name><operator pos:start="479:71" pos:end="479:71">.</operator><name pos:start="479:72" pos:end="479:79">a_height</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="481:13" pos:end="481:79"><decl pos:start="481:13" pos:end="481:78"><type pos:start="481:13" pos:end="481:15"><name pos:start="481:13" pos:end="481:15">int</name></type> <name pos:start="481:17" pos:end="481:31">lowpass_a_width</name>  <init pos:start="481:34" pos:end="481:78">= <expr pos:start="481:36" pos:end="481:78"><name pos:start="481:36" pos:end="481:59"><name pos:start="481:36" pos:end="481:36">s</name><operator pos:start="481:37" pos:end="481:38">-&gt;</operator><name pos:start="481:39" pos:end="481:43">plane</name><index pos:start="481:44" pos:end="481:59">[<expr pos:start="481:45" pos:end="481:58"><name pos:start="481:45" pos:end="481:58"><name pos:start="481:45" pos:end="481:45">s</name><operator pos:start="481:46" pos:end="481:47">-&gt;</operator><name pos:start="481:48" pos:end="481:58">channel_num</name></name></expr>]</index></name><operator pos:start="481:60" pos:end="481:60">.</operator><name pos:start="481:61" pos:end="481:70"><name pos:start="481:61" pos:end="481:64">band</name><index pos:start="481:65" pos:end="481:67">[<expr pos:start="481:66" pos:end="481:66"><literal type="number" pos:start="481:66" pos:end="481:66">0</literal></expr>]</index><index pos:start="481:68" pos:end="481:70">[<expr pos:start="481:69" pos:end="481:69"><literal type="number" pos:start="481:69" pos:end="481:69">0</literal></expr>]</index></name><operator pos:start="481:71" pos:end="481:71">.</operator><name pos:start="481:72" pos:end="481:78">a_width</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="485:13" pos:end="493:13"><if pos:start="485:13" pos:end="493:13">if <condition pos:start="485:16" pos:end="485:28">(<expr pos:start="485:17" pos:end="485:27"><operator pos:start="485:17" pos:end="485:17">!</operator><name pos:start="485:18" pos:end="485:27">got_buffer</name></expr>)</condition> <block pos:start="485:30" pos:end="493:13">{<block_content pos:start="487:17" pos:end="491:25">

                <expr_stmt pos:start="487:17" pos:end="487:76"><expr pos:start="487:17" pos:end="487:75"><call pos:start="487:17" pos:end="487:75"><name pos:start="487:17" pos:end="487:22">av_log</name><argument_list pos:start="487:23" pos:end="487:75">(<argument pos:start="487:24" pos:end="487:28"><expr pos:start="487:24" pos:end="487:28"><name pos:start="487:24" pos:end="487:28">avctx</name></expr></argument>, <argument pos:start="487:31" pos:end="487:42"><expr pos:start="487:31" pos:end="487:42"><name pos:start="487:31" pos:end="487:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="487:45" pos:end="487:74"><expr pos:start="487:45" pos:end="487:74"><literal type="string" pos:start="487:45" pos:end="487:74">"No end of header tag found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="489:17" pos:end="489:38"><expr pos:start="489:17" pos:end="489:37"><name pos:start="489:17" pos:end="489:19">ret</name> <operator pos:start="489:21" pos:end="489:21">=</operator> <call pos:start="489:23" pos:end="489:37"><name pos:start="489:23" pos:end="489:29">AVERROR</name><argument_list pos:start="489:30" pos:end="489:37">(<argument pos:start="489:31" pos:end="489:36"><expr pos:start="489:31" pos:end="489:36"><name pos:start="489:31" pos:end="489:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="491:17" pos:end="491:25">goto <name pos:start="491:22" pos:end="491:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="497:13" pos:end="507:13"><if pos:start="497:13" pos:end="507:13">if <condition pos:start="497:16" pos:end="499:103">(<expr pos:start="497:17" pos:end="499:102"><name pos:start="497:17" pos:end="497:30">lowpass_height</name> <operator pos:start="497:32" pos:end="497:32">&gt;</operator> <name pos:start="497:34" pos:end="497:49">lowpass_a_height</name> <operator pos:start="497:51" pos:end="497:52">||</operator> <name pos:start="497:54" pos:end="497:66">lowpass_width</name> <operator pos:start="497:68" pos:end="497:68">&gt;</operator> <name pos:start="497:70" pos:end="497:84">lowpass_a_width</name> <operator pos:start="497:86" pos:end="497:87">||</operator>

                <name pos:start="499:17" pos:end="499:31">lowpass_a_width</name> <operator pos:start="499:33" pos:end="499:33">*</operator> <name pos:start="499:35" pos:end="499:50">lowpass_a_height</name> <operator pos:start="499:52" pos:end="499:52">*</operator> <sizeof pos:start="499:54" pos:end="499:68">sizeof<argument_list pos:start="499:60" pos:end="499:68">(<argument pos:start="499:61" pos:end="499:67"><expr pos:start="499:61" pos:end="499:67"><name pos:start="499:61" pos:end="499:67">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="499:70" pos:end="499:70">&gt;</operator> <call pos:start="499:72" pos:end="499:102"><name pos:start="499:72" pos:end="499:97">bytestream2_get_bytes_left</name><argument_list pos:start="499:98" pos:end="499:102">(<argument pos:start="499:99" pos:end="499:101"><expr pos:start="499:99" pos:end="499:101"><operator pos:start="499:99" pos:end="499:99">&amp;</operator><name pos:start="499:100" pos:end="499:101">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="499:105" pos:end="507:13">{<block_content pos:start="501:17" pos:end="505:25">

                <expr_stmt pos:start="501:17" pos:end="501:79"><expr pos:start="501:17" pos:end="501:78"><call pos:start="501:17" pos:end="501:78"><name pos:start="501:17" pos:end="501:22">av_log</name><argument_list pos:start="501:23" pos:end="501:78">(<argument pos:start="501:24" pos:end="501:28"><expr pos:start="501:24" pos:end="501:28"><name pos:start="501:24" pos:end="501:28">avctx</name></expr></argument>, <argument pos:start="501:31" pos:end="501:42"><expr pos:start="501:31" pos:end="501:42"><name pos:start="501:31" pos:end="501:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="501:45" pos:end="501:77"><expr pos:start="501:45" pos:end="501:77"><literal type="string" pos:start="501:45" pos:end="501:77">"Too many lowpass coefficients\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="503:17" pos:end="503:38"><expr pos:start="503:17" pos:end="503:37"><name pos:start="503:17" pos:end="503:19">ret</name> <operator pos:start="503:21" pos:end="503:21">=</operator> <call pos:start="503:23" pos:end="503:37"><name pos:start="503:23" pos:end="503:29">AVERROR</name><argument_list pos:start="503:30" pos:end="503:37">(<argument pos:start="503:31" pos:end="503:36"><expr pos:start="503:31" pos:end="503:36"><name pos:start="503:31" pos:end="503:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="505:17" pos:end="505:25">goto <name pos:start="505:22" pos:end="505:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="511:13" pos:end="511:149"><expr pos:start="511:13" pos:end="511:148"><call pos:start="511:13" pos:end="511:148"><name pos:start="511:13" pos:end="511:18">av_log</name><argument_list pos:start="511:19" pos:end="511:148">(<argument pos:start="511:20" pos:end="511:24"><expr pos:start="511:20" pos:end="511:24"><name pos:start="511:20" pos:end="511:24">avctx</name></expr></argument>, <argument pos:start="511:27" pos:end="511:38"><expr pos:start="511:27" pos:end="511:38"><name pos:start="511:27" pos:end="511:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="511:41" pos:end="511:100"><expr pos:start="511:41" pos:end="511:100"><literal type="string" pos:start="511:41" pos:end="511:100">"Start of lowpass coeffs component %d height:%d, width:%d\n"</literal></expr></argument>, <argument pos:start="511:103" pos:end="511:116"><expr pos:start="511:103" pos:end="511:116"><name pos:start="511:103" pos:end="511:116"><name pos:start="511:103" pos:end="511:103">s</name><operator pos:start="511:104" pos:end="511:105">-&gt;</operator><name pos:start="511:106" pos:end="511:116">channel_num</name></name></expr></argument>, <argument pos:start="511:119" pos:end="511:132"><expr pos:start="511:119" pos:end="511:132"><name pos:start="511:119" pos:end="511:132">lowpass_height</name></expr></argument>, <argument pos:start="511:135" pos:end="511:147"><expr pos:start="511:135" pos:end="511:147"><name pos:start="511:135" pos:end="511:147">lowpass_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="513:13" pos:end="523:13">for <control pos:start="513:17" pos:end="513:48">(<init pos:start="513:18" pos:end="513:23"><expr pos:start="513:18" pos:end="513:22"><name pos:start="513:18" pos:end="513:18">i</name> <operator pos:start="513:20" pos:end="513:20">=</operator> <literal type="number" pos:start="513:22" pos:end="513:22">0</literal></expr>;</init> <condition pos:start="513:25" pos:end="513:43"><expr pos:start="513:25" pos:end="513:42"><name pos:start="513:25" pos:end="513:25">i</name> <operator pos:start="513:27" pos:end="513:27">&lt;</operator> <name pos:start="513:29" pos:end="513:42">lowpass_height</name></expr>;</condition> <incr pos:start="513:45" pos:end="513:47"><expr pos:start="513:45" pos:end="513:47"><name pos:start="513:45" pos:end="513:45">i</name><operator pos:start="513:46" pos:end="513:47">++</operator></expr></incr>)</control> <block pos:start="513:50" pos:end="523:13">{<block_content pos:start="515:17" pos:end="521:44">

                <for pos:start="515:17" pos:end="517:63">for <control pos:start="515:21" pos:end="515:51">(<init pos:start="515:22" pos:end="515:27"><expr pos:start="515:22" pos:end="515:26"><name pos:start="515:22" pos:end="515:22">j</name> <operator pos:start="515:24" pos:end="515:24">=</operator> <literal type="number" pos:start="515:26" pos:end="515:26">0</literal></expr>;</init> <condition pos:start="515:29" pos:end="515:46"><expr pos:start="515:29" pos:end="515:45"><name pos:start="515:29" pos:end="515:29">j</name> <operator pos:start="515:31" pos:end="515:31">&lt;</operator> <name pos:start="515:33" pos:end="515:45">lowpass_width</name></expr>;</condition> <incr pos:start="515:48" pos:end="515:50"><expr pos:start="515:48" pos:end="515:50"><name pos:start="515:48" pos:end="515:48">j</name><operator pos:start="515:49" pos:end="515:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="517:21" pos:end="517:63"><block_content pos:start="517:21" pos:end="517:63">

                    <expr_stmt pos:start="517:21" pos:end="517:63"><expr pos:start="517:21" pos:end="517:62"><name pos:start="517:21" pos:end="517:33"><name pos:start="517:21" pos:end="517:30">coeff_data</name><index pos:start="517:31" pos:end="517:33">[<expr pos:start="517:32" pos:end="517:32"><name pos:start="517:32" pos:end="517:32">j</name></expr>]</index></name> <operator pos:start="517:35" pos:end="517:35">=</operator> <call pos:start="517:37" pos:end="517:62"><name pos:start="517:37" pos:end="517:57">bytestream2_get_be16u</name><argument_list pos:start="517:58" pos:end="517:62">(<argument pos:start="517:59" pos:end="517:61"><expr pos:start="517:59" pos:end="517:61"><operator pos:start="517:59" pos:end="517:59">&amp;</operator><name pos:start="517:60" pos:end="517:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



                <expr_stmt pos:start="521:17" pos:end="521:44"><expr pos:start="521:17" pos:end="521:43"><name pos:start="521:17" pos:end="521:26">coeff_data</name> <operator pos:start="521:28" pos:end="521:29">+=</operator> <name pos:start="521:31" pos:end="521:43">lowpass_width</name></expr>;</expr_stmt>

            </block_content>}</block></for>



            <comment type="block" pos:start="527:13" pos:end="527:66">/* Align to mod-4 position to continue reading tags */</comment>

            <expr_stmt pos:start="529:13" pos:end="529:71"><expr pos:start="529:13" pos:end="529:70"><call pos:start="529:13" pos:end="529:70"><name pos:start="529:13" pos:end="529:28">bytestream2_seek</name><argument_list pos:start="529:29" pos:end="529:70">(<argument pos:start="529:30" pos:end="529:32"><expr pos:start="529:30" pos:end="529:32"><operator pos:start="529:30" pos:end="529:30">&amp;</operator><name pos:start="529:31" pos:end="529:32">gb</name></expr></argument>, <argument pos:start="529:35" pos:end="529:59"><expr pos:start="529:35" pos:end="529:59"><call pos:start="529:35" pos:end="529:55"><name pos:start="529:35" pos:end="529:50">bytestream2_tell</name><argument_list pos:start="529:51" pos:end="529:55">(<argument pos:start="529:52" pos:end="529:54"><expr pos:start="529:52" pos:end="529:54"><operator pos:start="529:52" pos:end="529:52">&amp;</operator><name pos:start="529:53" pos:end="529:54">gb</name></expr></argument>)</argument_list></call> <operator pos:start="529:57" pos:end="529:57">&amp;</operator> <literal type="number" pos:start="529:59" pos:end="529:59">3</literal></expr></argument>, <argument pos:start="529:62" pos:end="529:69"><expr pos:start="529:62" pos:end="529:69"><name pos:start="529:62" pos:end="529:69">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="533:13" pos:end="533:62">/* Copy last line of coefficients if odd height */</comment>

            <if_stmt pos:start="535:13" pos:end="543:13"><if pos:start="535:13" pos:end="543:13">if <condition pos:start="535:16" pos:end="535:35">(<expr pos:start="535:17" pos:end="535:34"><name pos:start="535:17" pos:end="535:30">lowpass_height</name> <operator pos:start="535:32" pos:end="535:32">&amp;</operator> <literal type="number" pos:start="535:34" pos:end="535:34">1</literal></expr>)</condition> <block pos:start="535:37" pos:end="543:13">{<block_content pos:start="537:17" pos:end="541:60">

                <expr_stmt pos:start="537:17" pos:end="541:60"><expr pos:start="537:17" pos:end="541:59"><call pos:start="537:17" pos:end="541:59"><name pos:start="537:17" pos:end="537:22">memcpy</name><argument_list pos:start="537:23" pos:end="541:59">(<argument pos:start="537:24" pos:end="537:66"><expr pos:start="537:24" pos:end="537:66"><operator pos:start="537:24" pos:end="537:24">&amp;</operator><name pos:start="537:25" pos:end="537:66"><name pos:start="537:25" pos:end="537:34">coeff_data</name><index pos:start="537:35" pos:end="537:66">[<expr pos:start="537:36" pos:end="537:65"><name pos:start="537:36" pos:end="537:49">lowpass_height</name> <operator pos:start="537:51" pos:end="537:51">*</operator> <name pos:start="537:53" pos:end="537:65">lowpass_width</name></expr>]</index></name></expr></argument>,

                       <argument pos:start="539:24" pos:end="539:72"><expr pos:start="539:24" pos:end="539:72"><operator pos:start="539:24" pos:end="539:24">&amp;</operator><name pos:start="539:25" pos:end="539:72"><name pos:start="539:25" pos:end="539:34">coeff_data</name><index pos:start="539:35" pos:end="539:72">[<expr pos:start="539:36" pos:end="539:71"><operator pos:start="539:36" pos:end="539:36">(</operator><name pos:start="539:37" pos:end="539:50">lowpass_height</name> <operator pos:start="539:52" pos:end="539:52">-</operator> <literal type="number" pos:start="539:54" pos:end="539:54">1</literal><operator pos:start="539:55" pos:end="539:55">)</operator> <operator pos:start="539:57" pos:end="539:57">*</operator> <name pos:start="539:59" pos:end="539:71">lowpass_width</name></expr>]</index></name></expr></argument>,

                       <argument pos:start="541:24" pos:end="541:58"><expr pos:start="541:24" pos:end="541:58"><name pos:start="541:24" pos:end="541:36">lowpass_width</name> <operator pos:start="541:38" pos:end="541:38">*</operator> <sizeof pos:start="541:40" pos:end="541:58">sizeof<argument_list pos:start="541:46" pos:end="541:58">(<argument pos:start="541:47" pos:end="541:57"><expr pos:start="541:47" pos:end="541:57"><operator pos:start="541:47" pos:end="541:47">*</operator><name pos:start="541:48" pos:end="541:57">coeff_data</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="547:13" pos:end="547:101"><expr pos:start="547:13" pos:end="547:100"><call pos:start="547:13" pos:end="547:100"><name pos:start="547:13" pos:end="547:18">av_log</name><argument_list pos:start="547:19" pos:end="547:100">(<argument pos:start="547:20" pos:end="547:24"><expr pos:start="547:20" pos:end="547:24"><name pos:start="547:20" pos:end="547:24">avctx</name></expr></argument>, <argument pos:start="547:27" pos:end="547:38"><expr pos:start="547:27" pos:end="547:38"><name pos:start="547:27" pos:end="547:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="547:41" pos:end="547:67"><expr pos:start="547:41" pos:end="547:67"><literal type="string" pos:start="547:41" pos:end="547:67">"Lowpass coefficients %d\n"</literal></expr></argument>, <argument pos:start="547:70" pos:end="547:99"><expr pos:start="547:70" pos:end="547:99"><name pos:start="547:70" pos:end="547:82">lowpass_width</name> <operator pos:start="547:84" pos:end="547:84">*</operator> <name pos:start="547:86" pos:end="547:99">lowpass_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="553:9" pos:end="741:9"><if pos:start="553:9" pos:end="741:9">if <condition pos:start="553:12" pos:end="553:83">(<expr pos:start="553:13" pos:end="553:82"><name pos:start="553:13" pos:end="553:15">tag</name> <operator pos:start="553:17" pos:end="553:18">==</operator> <literal type="number" pos:start="553:20" pos:end="553:21">55</literal> <operator pos:start="553:23" pos:end="553:24">&amp;&amp;</operator> <name pos:start="553:26" pos:end="553:46"><name pos:start="553:26" pos:end="553:26">s</name><operator pos:start="553:27" pos:end="553:28">-&gt;</operator><name pos:start="553:29" pos:end="553:46">subband_num_actual</name></name> <operator pos:start="553:48" pos:end="553:49">!=</operator> <literal type="number" pos:start="553:51" pos:end="553:53">255</literal> <operator pos:start="553:55" pos:end="553:56">&amp;&amp;</operator> <name pos:start="553:58" pos:end="553:67"><name pos:start="553:58" pos:end="553:58">s</name><operator pos:start="553:59" pos:end="553:60">-&gt;</operator><name pos:start="553:61" pos:end="553:67">a_width</name></name> <operator pos:start="553:69" pos:end="553:70">&amp;&amp;</operator> <name pos:start="553:72" pos:end="553:82"><name pos:start="553:72" pos:end="553:72">s</name><operator pos:start="553:73" pos:end="553:74">-&gt;</operator><name pos:start="553:75" pos:end="553:82">a_height</name></name></expr>)</condition> <block pos:start="553:85" pos:end="741:9">{<block_content pos:start="555:13" pos:end="739:13">

            <decl_stmt pos:start="555:13" pos:end="555:97"><decl pos:start="555:13" pos:end="555:96"><type pos:start="555:13" pos:end="555:15"><name pos:start="555:13" pos:end="555:15">int</name></type> <name pos:start="555:17" pos:end="555:31">highpass_height</name> <init pos:start="555:33" pos:end="555:96">= <expr pos:start="555:35" pos:end="555:96"><name pos:start="555:35" pos:end="555:58"><name pos:start="555:35" pos:end="555:35">s</name><operator pos:start="555:36" pos:end="555:37">-&gt;</operator><name pos:start="555:38" pos:end="555:42">plane</name><index pos:start="555:43" pos:end="555:58">[<expr pos:start="555:44" pos:end="555:57"><name pos:start="555:44" pos:end="555:57"><name pos:start="555:44" pos:end="555:44">s</name><operator pos:start="555:45" pos:end="555:46">-&gt;</operator><name pos:start="555:47" pos:end="555:57">channel_num</name></name></expr>]</index></name><operator pos:start="555:59" pos:end="555:59">.</operator><name pos:start="555:60" pos:end="555:89"><name pos:start="555:60" pos:end="555:63">band</name><index pos:start="555:64" pos:end="555:73">[<expr pos:start="555:65" pos:end="555:72"><name pos:start="555:65" pos:end="555:72"><name pos:start="555:65" pos:end="555:65">s</name><operator pos:start="555:66" pos:end="555:67">-&gt;</operator><name pos:start="555:68" pos:end="555:72">level</name></name></expr>]</index><index pos:start="555:74" pos:end="555:89">[<expr pos:start="555:75" pos:end="555:88"><name pos:start="555:75" pos:end="555:88"><name pos:start="555:75" pos:end="555:75">s</name><operator pos:start="555:76" pos:end="555:77">-&gt;</operator><name pos:start="555:78" pos:end="555:88">subband_num</name></name></expr>]</index></name><operator pos:start="555:90" pos:end="555:90">.</operator><name pos:start="555:91" pos:end="555:96">height</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="557:13" pos:end="557:96"><decl pos:start="557:13" pos:end="557:95"><type pos:start="557:13" pos:end="557:15"><name pos:start="557:13" pos:end="557:15">int</name></type> <name pos:start="557:17" pos:end="557:30">highpass_width</name>  <init pos:start="557:33" pos:end="557:95">= <expr pos:start="557:35" pos:end="557:95"><name pos:start="557:35" pos:end="557:58"><name pos:start="557:35" pos:end="557:35">s</name><operator pos:start="557:36" pos:end="557:37">-&gt;</operator><name pos:start="557:38" pos:end="557:42">plane</name><index pos:start="557:43" pos:end="557:58">[<expr pos:start="557:44" pos:end="557:57"><name pos:start="557:44" pos:end="557:57"><name pos:start="557:44" pos:end="557:44">s</name><operator pos:start="557:45" pos:end="557:46">-&gt;</operator><name pos:start="557:47" pos:end="557:57">channel_num</name></name></expr>]</index></name><operator pos:start="557:59" pos:end="557:59">.</operator><name pos:start="557:60" pos:end="557:89"><name pos:start="557:60" pos:end="557:63">band</name><index pos:start="557:64" pos:end="557:73">[<expr pos:start="557:65" pos:end="557:72"><name pos:start="557:65" pos:end="557:72"><name pos:start="557:65" pos:end="557:65">s</name><operator pos:start="557:66" pos:end="557:67">-&gt;</operator><name pos:start="557:68" pos:end="557:72">level</name></name></expr>]</index><index pos:start="557:74" pos:end="557:89">[<expr pos:start="557:75" pos:end="557:88"><name pos:start="557:75" pos:end="557:88"><name pos:start="557:75" pos:end="557:75">s</name><operator pos:start="557:76" pos:end="557:77">-&gt;</operator><name pos:start="557:78" pos:end="557:88">subband_num</name></name></expr>]</index></name><operator pos:start="557:90" pos:end="557:90">.</operator><name pos:start="557:91" pos:end="557:95">width</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="559:13" pos:end="559:99"><decl pos:start="559:13" pos:end="559:98"><type pos:start="559:13" pos:end="559:15"><name pos:start="559:13" pos:end="559:15">int</name></type> <name pos:start="559:17" pos:end="559:32">highpass_a_width</name> <init pos:start="559:34" pos:end="559:98">= <expr pos:start="559:36" pos:end="559:98"><name pos:start="559:36" pos:end="559:59"><name pos:start="559:36" pos:end="559:36">s</name><operator pos:start="559:37" pos:end="559:38">-&gt;</operator><name pos:start="559:39" pos:end="559:43">plane</name><index pos:start="559:44" pos:end="559:59">[<expr pos:start="559:45" pos:end="559:58"><name pos:start="559:45" pos:end="559:58"><name pos:start="559:45" pos:end="559:45">s</name><operator pos:start="559:46" pos:end="559:47">-&gt;</operator><name pos:start="559:48" pos:end="559:58">channel_num</name></name></expr>]</index></name><operator pos:start="559:60" pos:end="559:60">.</operator><name pos:start="559:61" pos:end="559:90"><name pos:start="559:61" pos:end="559:64">band</name><index pos:start="559:65" pos:end="559:74">[<expr pos:start="559:66" pos:end="559:73"><name pos:start="559:66" pos:end="559:73"><name pos:start="559:66" pos:end="559:66">s</name><operator pos:start="559:67" pos:end="559:68">-&gt;</operator><name pos:start="559:69" pos:end="559:73">level</name></name></expr>]</index><index pos:start="559:75" pos:end="559:90">[<expr pos:start="559:76" pos:end="559:89"><name pos:start="559:76" pos:end="559:89"><name pos:start="559:76" pos:end="559:76">s</name><operator pos:start="559:77" pos:end="559:78">-&gt;</operator><name pos:start="559:79" pos:end="559:89">subband_num</name></name></expr>]</index></name><operator pos:start="559:91" pos:end="559:91">.</operator><name pos:start="559:92" pos:end="559:98">a_width</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="561:13" pos:end="561:101"><decl pos:start="561:13" pos:end="561:100"><type pos:start="561:13" pos:end="561:15"><name pos:start="561:13" pos:end="561:15">int</name></type> <name pos:start="561:17" pos:end="561:33">highpass_a_height</name> <init pos:start="561:35" pos:end="561:100">= <expr pos:start="561:37" pos:end="561:100"><name pos:start="561:37" pos:end="561:60"><name pos:start="561:37" pos:end="561:37">s</name><operator pos:start="561:38" pos:end="561:39">-&gt;</operator><name pos:start="561:40" pos:end="561:44">plane</name><index pos:start="561:45" pos:end="561:60">[<expr pos:start="561:46" pos:end="561:59"><name pos:start="561:46" pos:end="561:59"><name pos:start="561:46" pos:end="561:46">s</name><operator pos:start="561:47" pos:end="561:48">-&gt;</operator><name pos:start="561:49" pos:end="561:59">channel_num</name></name></expr>]</index></name><operator pos:start="561:61" pos:end="561:61">.</operator><name pos:start="561:62" pos:end="561:91"><name pos:start="561:62" pos:end="561:65">band</name><index pos:start="561:66" pos:end="561:75">[<expr pos:start="561:67" pos:end="561:74"><name pos:start="561:67" pos:end="561:74"><name pos:start="561:67" pos:end="561:67">s</name><operator pos:start="561:68" pos:end="561:69">-&gt;</operator><name pos:start="561:70" pos:end="561:74">level</name></name></expr>]</index><index pos:start="561:76" pos:end="561:91">[<expr pos:start="561:77" pos:end="561:90"><name pos:start="561:77" pos:end="561:90"><name pos:start="561:77" pos:end="561:77">s</name><operator pos:start="561:78" pos:end="561:79">-&gt;</operator><name pos:start="561:80" pos:end="561:90">subband_num</name></name></expr>]</index></name><operator pos:start="561:92" pos:end="561:92">.</operator><name pos:start="561:93" pos:end="561:100">a_height</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="563:13" pos:end="563:97"><decl pos:start="563:13" pos:end="563:96"><type pos:start="563:13" pos:end="563:15"><name pos:start="563:13" pos:end="563:15">int</name></type> <name pos:start="563:17" pos:end="563:31">highpass_stride</name> <init pos:start="563:33" pos:end="563:96">= <expr pos:start="563:35" pos:end="563:96"><name pos:start="563:35" pos:end="563:58"><name pos:start="563:35" pos:end="563:35">s</name><operator pos:start="563:36" pos:end="563:37">-&gt;</operator><name pos:start="563:38" pos:end="563:42">plane</name><index pos:start="563:43" pos:end="563:58">[<expr pos:start="563:44" pos:end="563:57"><name pos:start="563:44" pos:end="563:57"><name pos:start="563:44" pos:end="563:44">s</name><operator pos:start="563:45" pos:end="563:46">-&gt;</operator><name pos:start="563:47" pos:end="563:57">channel_num</name></name></expr>]</index></name><operator pos:start="563:59" pos:end="563:59">.</operator><name pos:start="563:60" pos:end="563:89"><name pos:start="563:60" pos:end="563:63">band</name><index pos:start="563:64" pos:end="563:73">[<expr pos:start="563:65" pos:end="563:72"><name pos:start="563:65" pos:end="563:72"><name pos:start="563:65" pos:end="563:65">s</name><operator pos:start="563:66" pos:end="563:67">-&gt;</operator><name pos:start="563:68" pos:end="563:72">level</name></name></expr>]</index><index pos:start="563:74" pos:end="563:89">[<expr pos:start="563:75" pos:end="563:88"><name pos:start="563:75" pos:end="563:88"><name pos:start="563:75" pos:end="563:75">s</name><operator pos:start="563:76" pos:end="563:77">-&gt;</operator><name pos:start="563:78" pos:end="563:88">subband_num</name></name></expr>]</index></name><operator pos:start="563:90" pos:end="563:90">.</operator><name pos:start="563:91" pos:end="563:96">stride</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="565:13" pos:end="565:25"><decl pos:start="565:13" pos:end="565:24"><type pos:start="565:13" pos:end="565:15"><name pos:start="565:13" pos:end="565:15">int</name></type> <name pos:start="565:17" pos:end="565:24">expected</name></decl>;</decl_stmt>

            <decl_stmt pos:start="567:13" pos:end="567:66"><decl pos:start="567:13" pos:end="567:65"><type pos:start="567:13" pos:end="567:15"><name pos:start="567:13" pos:end="567:15">int</name></type> <name pos:start="567:17" pos:end="567:26">a_expected</name> <init pos:start="567:28" pos:end="567:65">= <expr pos:start="567:30" pos:end="567:65"><name pos:start="567:30" pos:end="567:46">highpass_a_height</name> <operator pos:start="567:48" pos:end="567:48">*</operator> <name pos:start="567:50" pos:end="567:65">highpass_a_width</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="569:13" pos:end="569:34"><decl pos:start="569:13" pos:end="569:21"><type pos:start="569:13" pos:end="569:15"><name pos:start="569:13" pos:end="569:15">int</name></type> <name pos:start="569:17" pos:end="569:21">level</name></decl>, <decl pos:start="569:24" pos:end="569:26"><type ref="prev" pos:start="569:13" pos:end="569:15"/><name pos:start="569:24" pos:end="569:26">run</name></decl>, <decl pos:start="569:29" pos:end="569:33"><type ref="prev" pos:start="569:13" pos:end="569:15"/><name pos:start="569:29" pos:end="569:33">coeff</name></decl>;</decl_stmt>

            <decl_stmt pos:start="571:13" pos:end="571:33"><decl pos:start="571:13" pos:end="571:25"><type pos:start="571:13" pos:end="571:15"><name pos:start="571:13" pos:end="571:15">int</name></type> <name pos:start="571:17" pos:end="571:21">count</name> <init pos:start="571:23" pos:end="571:25">= <expr pos:start="571:25" pos:end="571:25"><literal type="number" pos:start="571:25" pos:end="571:25">0</literal></expr></init></decl>, <decl pos:start="571:28" pos:end="571:32"><type ref="prev" pos:start="571:13" pos:end="571:15"/><name pos:start="571:28" pos:end="571:32">bytes</name></decl>;</decl_stmt>



            <if_stmt pos:start="575:13" pos:end="583:13"><if pos:start="575:13" pos:end="583:13">if <condition pos:start="575:16" pos:end="575:28">(<expr pos:start="575:17" pos:end="575:27"><operator pos:start="575:17" pos:end="575:17">!</operator><name pos:start="575:18" pos:end="575:27">got_buffer</name></expr>)</condition> <block pos:start="575:30" pos:end="583:13">{<block_content pos:start="577:17" pos:end="581:25">

                <expr_stmt pos:start="577:17" pos:end="577:76"><expr pos:start="577:17" pos:end="577:75"><call pos:start="577:17" pos:end="577:75"><name pos:start="577:17" pos:end="577:22">av_log</name><argument_list pos:start="577:23" pos:end="577:75">(<argument pos:start="577:24" pos:end="577:28"><expr pos:start="577:24" pos:end="577:28"><name pos:start="577:24" pos:end="577:28">avctx</name></expr></argument>, <argument pos:start="577:31" pos:end="577:42"><expr pos:start="577:31" pos:end="577:42"><name pos:start="577:31" pos:end="577:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="577:45" pos:end="577:74"><expr pos:start="577:45" pos:end="577:74"><literal type="string" pos:start="577:45" pos:end="577:74">"No end of header tag found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="579:17" pos:end="579:38"><expr pos:start="579:17" pos:end="579:37"><name pos:start="579:17" pos:end="579:19">ret</name> <operator pos:start="579:21" pos:end="579:21">=</operator> <call pos:start="579:23" pos:end="579:37"><name pos:start="579:23" pos:end="579:29">AVERROR</name><argument_list pos:start="579:30" pos:end="579:37">(<argument pos:start="579:31" pos:end="579:36"><expr pos:start="579:31" pos:end="579:36"><name pos:start="579:31" pos:end="579:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="581:17" pos:end="581:25">goto <name pos:start="581:22" pos:end="581:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="587:13" pos:end="595:13"><if pos:start="587:13" pos:end="595:13">if <condition pos:start="587:16" pos:end="587:149">(<expr pos:start="587:17" pos:end="587:148"><name pos:start="587:17" pos:end="587:31">highpass_height</name> <operator pos:start="587:33" pos:end="587:33">&gt;</operator> <name pos:start="587:35" pos:end="587:51">highpass_a_height</name> <operator pos:start="587:53" pos:end="587:54">||</operator> <name pos:start="587:56" pos:end="587:69">highpass_width</name> <operator pos:start="587:71" pos:end="587:71">&gt;</operator> <name pos:start="587:73" pos:end="587:88">highpass_a_width</name> <operator pos:start="587:90" pos:end="587:91">||</operator> <name pos:start="587:93" pos:end="587:102">a_expected</name> <operator pos:start="587:104" pos:end="587:104">&lt;</operator> <name pos:start="587:106" pos:end="587:120">highpass_height</name> <operator pos:start="587:122" pos:end="587:122">*</operator> <operator pos:start="587:124" pos:end="587:124">(</operator><name pos:start="587:125" pos:end="587:132">uint64_t</name><operator pos:start="587:133" pos:end="587:133">)</operator><name pos:start="587:134" pos:end="587:148">highpass_stride</name></expr>)</condition> <block pos:start="587:151" pos:end="595:13">{<block_content pos:start="589:17" pos:end="593:25">

                <expr_stmt pos:start="589:17" pos:end="589:80"><expr pos:start="589:17" pos:end="589:79"><call pos:start="589:17" pos:end="589:79"><name pos:start="589:17" pos:end="589:22">av_log</name><argument_list pos:start="589:23" pos:end="589:79">(<argument pos:start="589:24" pos:end="589:28"><expr pos:start="589:24" pos:end="589:28"><name pos:start="589:24" pos:end="589:28">avctx</name></expr></argument>, <argument pos:start="589:31" pos:end="589:42"><expr pos:start="589:31" pos:end="589:42"><name pos:start="589:31" pos:end="589:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="589:45" pos:end="589:78"><expr pos:start="589:45" pos:end="589:78"><literal type="string" pos:start="589:45" pos:end="589:78">"Too many highpass coefficients\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="591:17" pos:end="591:38"><expr pos:start="591:17" pos:end="591:37"><name pos:start="591:17" pos:end="591:19">ret</name> <operator pos:start="591:21" pos:end="591:21">=</operator> <call pos:start="591:23" pos:end="591:37"><name pos:start="591:23" pos:end="591:29">AVERROR</name><argument_list pos:start="591:30" pos:end="591:37">(<argument pos:start="591:31" pos:end="591:36"><expr pos:start="591:31" pos:end="591:36"><name pos:start="591:31" pos:end="591:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="593:17" pos:end="593:25">goto <name pos:start="593:22" pos:end="593:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="597:13" pos:end="597:57"><expr pos:start="597:13" pos:end="597:56"><name pos:start="597:13" pos:end="597:20">expected</name> <operator pos:start="597:22" pos:end="597:22">=</operator> <name pos:start="597:24" pos:end="597:38">highpass_height</name> <operator pos:start="597:40" pos:end="597:40">*</operator> <name pos:start="597:42" pos:end="597:56">highpass_stride</name></expr>;</expr_stmt>



            <expr_stmt pos:start="601:13" pos:end="601:157"><expr pos:start="601:13" pos:end="601:156"><call pos:start="601:13" pos:end="601:156"><name pos:start="601:13" pos:end="601:18">av_log</name><argument_list pos:start="601:19" pos:end="601:156">(<argument pos:start="601:20" pos:end="601:24"><expr pos:start="601:20" pos:end="601:24"><name pos:start="601:20" pos:end="601:24">avctx</name></expr></argument>, <argument pos:start="601:27" pos:end="601:38"><expr pos:start="601:27" pos:end="601:38"><name pos:start="601:27" pos:end="601:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="601:41" pos:end="601:106"><expr pos:start="601:41" pos:end="601:106"><literal type="string" pos:start="601:41" pos:end="601:106">"Start subband coeffs plane %i level %i codebook %i expected %i\n"</literal></expr></argument>, <argument pos:start="601:109" pos:end="601:122"><expr pos:start="601:109" pos:end="601:122"><name pos:start="601:109" pos:end="601:122"><name pos:start="601:109" pos:end="601:109">s</name><operator pos:start="601:110" pos:end="601:111">-&gt;</operator><name pos:start="601:112" pos:end="601:122">channel_num</name></name></expr></argument>, <argument pos:start="601:125" pos:end="601:132"><expr pos:start="601:125" pos:end="601:132"><name pos:start="601:125" pos:end="601:132"><name pos:start="601:125" pos:end="601:125">s</name><operator pos:start="601:126" pos:end="601:127">-&gt;</operator><name pos:start="601:128" pos:end="601:132">level</name></name></expr></argument>, <argument pos:start="601:135" pos:end="601:145"><expr pos:start="601:135" pos:end="601:145"><name pos:start="601:135" pos:end="601:145"><name pos:start="601:135" pos:end="601:135">s</name><operator pos:start="601:136" pos:end="601:137">-&gt;</operator><name pos:start="601:138" pos:end="601:145">codebook</name></name></expr></argument>, <argument pos:start="601:148" pos:end="601:155"><expr pos:start="601:148" pos:end="601:155"><name pos:start="601:148" pos:end="601:155">expected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="605:13" pos:end="605:82"><expr pos:start="605:13" pos:end="605:81"><call pos:start="605:13" pos:end="605:81"><name pos:start="605:13" pos:end="605:25">init_get_bits</name><argument_list pos:start="605:26" pos:end="605:81">(<argument pos:start="605:27" pos:end="605:32"><expr pos:start="605:27" pos:end="605:32"><operator pos:start="605:27" pos:end="605:27">&amp;</operator><name pos:start="605:28" pos:end="605:32"><name pos:start="605:28" pos:end="605:28">s</name><operator pos:start="605:29" pos:end="605:30">-&gt;</operator><name pos:start="605:31" pos:end="605:32">gb</name></name></expr></argument>, <argument pos:start="605:35" pos:end="605:43"><expr pos:start="605:35" pos:end="605:43"><name pos:start="605:35" pos:end="605:43"><name pos:start="605:35" pos:end="605:36">gb</name><operator pos:start="605:37" pos:end="605:37">.</operator><name pos:start="605:38" pos:end="605:43">buffer</name></name></expr></argument>, <argument pos:start="605:46" pos:end="605:80"><expr pos:start="605:46" pos:end="605:80"><call pos:start="605:46" pos:end="605:76"><name pos:start="605:46" pos:end="605:71">bytestream2_get_bytes_left</name><argument_list pos:start="605:72" pos:end="605:76">(<argument pos:start="605:73" pos:end="605:75"><expr pos:start="605:73" pos:end="605:75"><operator pos:start="605:73" pos:end="605:73">&amp;</operator><name pos:start="605:74" pos:end="605:75">gb</name></expr></argument>)</argument_list></call> <operator pos:start="605:78" pos:end="605:78">*</operator> <literal type="number" pos:start="605:80" pos:end="605:80">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="607:13" pos:end="691:13">{<block_content pos:start="609:17" pos:end="689:41">

                <expr_stmt pos:start="609:17" pos:end="609:40"><expr pos:start="609:17" pos:end="609:39"><call pos:start="609:17" pos:end="609:39"><name pos:start="609:17" pos:end="609:27">OPEN_READER</name><argument_list pos:start="609:28" pos:end="609:39">(<argument pos:start="609:29" pos:end="609:30"><expr pos:start="609:29" pos:end="609:30"><name pos:start="609:29" pos:end="609:30">re</name></expr></argument>, <argument pos:start="609:33" pos:end="609:38"><expr pos:start="609:33" pos:end="609:38"><operator pos:start="609:33" pos:end="609:33">&amp;</operator><name pos:start="609:34" pos:end="609:38"><name pos:start="609:34" pos:end="609:34">s</name><operator pos:start="609:35" pos:end="609:36">-&gt;</operator><name pos:start="609:37" pos:end="609:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="611:17" pos:end="687:17"><if pos:start="611:17" pos:end="649:17">if <condition pos:start="611:20" pos:end="611:33">(<expr pos:start="611:21" pos:end="611:32"><operator pos:start="611:21" pos:end="611:21">!</operator><name pos:start="611:22" pos:end="611:32"><name pos:start="611:22" pos:end="611:22">s</name><operator pos:start="611:23" pos:end="611:24">-&gt;</operator><name pos:start="611:25" pos:end="611:32">codebook</name></name></expr>)</condition> <block pos:start="611:35" pos:end="649:17">{<block_content pos:start="613:21" pos:end="647:21">

                    <while pos:start="613:21" pos:end="647:21">while <condition pos:start="613:27" pos:end="613:29">(<expr pos:start="613:28" pos:end="613:28"><literal type="number" pos:start="613:28" pos:end="613:28">1</literal></expr>)</condition> <block pos:start="613:31" pos:end="647:21">{<block_content pos:start="615:25" pos:end="645:50">

                        <expr_stmt pos:start="615:25" pos:end="615:49"><expr pos:start="615:25" pos:end="615:48"><call pos:start="615:25" pos:end="615:48"><name pos:start="615:25" pos:end="615:36">UPDATE_CACHE</name><argument_list pos:start="615:37" pos:end="615:48">(<argument pos:start="615:38" pos:end="615:39"><expr pos:start="615:38" pos:end="615:39"><name pos:start="615:38" pos:end="615:39">re</name></expr></argument>, <argument pos:start="615:42" pos:end="615:47"><expr pos:start="615:42" pos:end="615:47"><operator pos:start="615:42" pos:end="615:42">&amp;</operator><name pos:start="615:43" pos:end="615:47"><name pos:start="615:43" pos:end="615:43">s</name><operator pos:start="615:44" pos:end="615:45">-&gt;</operator><name pos:start="615:46" pos:end="615:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="617:25" pos:end="619:51"><expr pos:start="617:25" pos:end="619:50"><call pos:start="617:25" pos:end="619:50"><name pos:start="617:25" pos:end="617:34">GET_RL_VLC</name><argument_list pos:start="617:35" pos:end="619:50">(<argument pos:start="617:36" pos:end="617:40"><expr pos:start="617:36" pos:end="617:40"><name pos:start="617:36" pos:end="617:40">level</name></expr></argument>, <argument pos:start="617:43" pos:end="617:45"><expr pos:start="617:43" pos:end="617:45"><name pos:start="617:43" pos:end="617:45">run</name></expr></argument>, <argument pos:start="617:48" pos:end="617:49"><expr pos:start="617:48" pos:end="617:49"><name pos:start="617:48" pos:end="617:49">re</name></expr></argument>, <argument pos:start="617:52" pos:end="617:57"><expr pos:start="617:52" pos:end="617:57"><operator pos:start="617:52" pos:end="617:52">&amp;</operator><name pos:start="617:53" pos:end="617:57"><name pos:start="617:53" pos:end="617:53">s</name><operator pos:start="617:54" pos:end="617:55">-&gt;</operator><name pos:start="617:56" pos:end="617:57">gb</name></name></expr></argument>, <argument pos:start="617:60" pos:end="617:76"><expr pos:start="617:60" pos:end="617:76"><name pos:start="617:60" pos:end="617:76"><name pos:start="617:60" pos:end="617:60">s</name><operator pos:start="617:61" pos:end="617:62">-&gt;</operator><name pos:start="617:63" pos:end="617:76">table_9_rl_vlc</name></name></expr></argument>,

                                   <argument pos:start="619:36" pos:end="619:43"><expr pos:start="619:36" pos:end="619:43"><name pos:start="619:36" pos:end="619:43">VLC_BITS</name></expr></argument>, <argument pos:start="619:46" pos:end="619:46"><expr pos:start="619:46" pos:end="619:46"><literal type="number" pos:start="619:46" pos:end="619:46">3</literal></expr></argument>, <argument pos:start="619:49" pos:end="619:49"><expr pos:start="619:49" pos:end="619:49"><literal type="number" pos:start="619:49" pos:end="619:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <comment type="block" pos:start="623:25" pos:end="623:36">/* escape */</comment>

                        <if_stmt pos:start="625:25" pos:end="627:34"><if pos:start="625:25" pos:end="627:34">if <condition pos:start="625:28" pos:end="625:40">(<expr pos:start="625:29" pos:end="625:39"><name pos:start="625:29" pos:end="625:33">level</name> <operator pos:start="625:35" pos:end="625:36">==</operator> <literal type="number" pos:start="625:38" pos:end="625:39">64</literal></expr>)</condition><block type="pseudo" pos:start="627:29" pos:end="627:34"><block_content pos:start="627:29" pos:end="627:34">

                            <break pos:start="627:29" pos:end="627:34">break;</break></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="631:25" pos:end="631:37"><expr pos:start="631:25" pos:end="631:36"><name pos:start="631:25" pos:end="631:29">count</name> <operator pos:start="631:31" pos:end="631:32">+=</operator> <name pos:start="631:34" pos:end="631:36">run</name></expr>;</expr_stmt>



                        <if_stmt pos:start="635:25" pos:end="637:34"><if pos:start="635:25" pos:end="637:34">if <condition pos:start="635:28" pos:end="635:45">(<expr pos:start="635:29" pos:end="635:44"><name pos:start="635:29" pos:end="635:33">count</name> <operator pos:start="635:35" pos:end="635:35">&gt;</operator> <name pos:start="635:37" pos:end="635:44">expected</name></expr>)</condition><block type="pseudo" pos:start="637:29" pos:end="637:34"><block_content pos:start="637:29" pos:end="637:34">

                            <break pos:start="637:29" pos:end="637:34">break;</break></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="641:25" pos:end="641:78"><expr pos:start="641:25" pos:end="641:77"><name pos:start="641:25" pos:end="641:29">coeff</name> <operator pos:start="641:31" pos:end="641:31">=</operator> <call pos:start="641:33" pos:end="641:77"><name pos:start="641:33" pos:end="641:53">dequant_and_decompand</name><argument_list pos:start="641:54" pos:end="641:77">(<argument pos:start="641:55" pos:end="641:59"><expr pos:start="641:55" pos:end="641:59"><name pos:start="641:55" pos:end="641:59">level</name></expr></argument>, <argument pos:start="641:62" pos:end="641:76"><expr pos:start="641:62" pos:end="641:76"><name pos:start="641:62" pos:end="641:76"><name pos:start="641:62" pos:end="641:62">s</name><operator pos:start="641:63" pos:end="641:64">-&gt;</operator><name pos:start="641:65" pos:end="641:76">quantisation</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <for pos:start="643:25" pos:end="645:50">for <control pos:start="643:29" pos:end="643:49">(<init pos:start="643:30" pos:end="643:35"><expr pos:start="643:30" pos:end="643:34"><name pos:start="643:30" pos:end="643:30">i</name> <operator pos:start="643:32" pos:end="643:32">=</operator> <literal type="number" pos:start="643:34" pos:end="643:34">0</literal></expr>;</init> <condition pos:start="643:37" pos:end="643:44"><expr pos:start="643:37" pos:end="643:43"><name pos:start="643:37" pos:end="643:37">i</name> <operator pos:start="643:39" pos:end="643:39">&lt;</operator> <name pos:start="643:41" pos:end="643:43">run</name></expr>;</condition> <incr pos:start="643:46" pos:end="643:48"><expr pos:start="643:46" pos:end="643:48"><name pos:start="643:46" pos:end="643:46">i</name><operator pos:start="643:47" pos:end="643:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="645:29" pos:end="645:50"><block_content pos:start="645:29" pos:end="645:50">

                            <expr_stmt pos:start="645:29" pos:end="645:50"><expr pos:start="645:29" pos:end="645:49"><operator pos:start="645:29" pos:end="645:29">*</operator><name pos:start="645:30" pos:end="645:39">coeff_data</name><operator pos:start="645:40" pos:end="645:41">++</operator> <operator pos:start="645:43" pos:end="645:43">=</operator> <name pos:start="645:45" pos:end="645:49">coeff</name></expr>;</expr_stmt></block_content></block></for>

                    </block_content>}</block></while>

                </block_content>}</block></if> <else pos:start="649:19" pos:end="687:17">else <block pos:start="649:24" pos:end="687:17">{<block_content pos:start="651:21" pos:end="685:21">

                    <while pos:start="651:21" pos:end="685:21">while <condition pos:start="651:27" pos:end="651:29">(<expr pos:start="651:28" pos:end="651:28"><literal type="number" pos:start="651:28" pos:end="651:28">1</literal></expr>)</condition> <block pos:start="651:31" pos:end="685:21">{<block_content pos:start="653:25" pos:end="683:50">

                        <expr_stmt pos:start="653:25" pos:end="653:49"><expr pos:start="653:25" pos:end="653:48"><call pos:start="653:25" pos:end="653:48"><name pos:start="653:25" pos:end="653:36">UPDATE_CACHE</name><argument_list pos:start="653:37" pos:end="653:48">(<argument pos:start="653:38" pos:end="653:39"><expr pos:start="653:38" pos:end="653:39"><name pos:start="653:38" pos:end="653:39">re</name></expr></argument>, <argument pos:start="653:42" pos:end="653:47"><expr pos:start="653:42" pos:end="653:47"><operator pos:start="653:42" pos:end="653:42">&amp;</operator><name pos:start="653:43" pos:end="653:47"><name pos:start="653:43" pos:end="653:43">s</name><operator pos:start="653:44" pos:end="653:45">-&gt;</operator><name pos:start="653:46" pos:end="653:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="655:25" pos:end="657:51"><expr pos:start="655:25" pos:end="657:50"><call pos:start="655:25" pos:end="657:50"><name pos:start="655:25" pos:end="655:34">GET_RL_VLC</name><argument_list pos:start="655:35" pos:end="657:50">(<argument pos:start="655:36" pos:end="655:40"><expr pos:start="655:36" pos:end="655:40"><name pos:start="655:36" pos:end="655:40">level</name></expr></argument>, <argument pos:start="655:43" pos:end="655:45"><expr pos:start="655:43" pos:end="655:45"><name pos:start="655:43" pos:end="655:45">run</name></expr></argument>, <argument pos:start="655:48" pos:end="655:49"><expr pos:start="655:48" pos:end="655:49"><name pos:start="655:48" pos:end="655:49">re</name></expr></argument>, <argument pos:start="655:52" pos:end="655:57"><expr pos:start="655:52" pos:end="655:57"><operator pos:start="655:52" pos:end="655:52">&amp;</operator><name pos:start="655:53" pos:end="655:57"><name pos:start="655:53" pos:end="655:53">s</name><operator pos:start="655:54" pos:end="655:55">-&gt;</operator><name pos:start="655:56" pos:end="655:57">gb</name></name></expr></argument>, <argument pos:start="655:60" pos:end="655:77"><expr pos:start="655:60" pos:end="655:77"><name pos:start="655:60" pos:end="655:77"><name pos:start="655:60" pos:end="655:60">s</name><operator pos:start="655:61" pos:end="655:62">-&gt;</operator><name pos:start="655:63" pos:end="655:77">table_18_rl_vlc</name></name></expr></argument>,

                                   <argument pos:start="657:36" pos:end="657:43"><expr pos:start="657:36" pos:end="657:43"><name pos:start="657:36" pos:end="657:43">VLC_BITS</name></expr></argument>, <argument pos:start="657:46" pos:end="657:46"><expr pos:start="657:46" pos:end="657:46"><literal type="number" pos:start="657:46" pos:end="657:46">3</literal></expr></argument>, <argument pos:start="657:49" pos:end="657:49"><expr pos:start="657:49" pos:end="657:49"><literal type="number" pos:start="657:49" pos:end="657:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <comment type="block" pos:start="661:25" pos:end="661:36">/* escape */</comment>

                        <if_stmt pos:start="663:25" pos:end="665:34"><if pos:start="663:25" pos:end="665:34">if <condition pos:start="663:28" pos:end="663:53">(<expr pos:start="663:29" pos:end="663:52"><name pos:start="663:29" pos:end="663:33">level</name> <operator pos:start="663:35" pos:end="663:36">==</operator> <literal type="number" pos:start="663:38" pos:end="663:40">255</literal> <operator pos:start="663:42" pos:end="663:43">&amp;&amp;</operator> <name pos:start="663:45" pos:end="663:47">run</name> <operator pos:start="663:49" pos:end="663:50">==</operator> <literal type="number" pos:start="663:52" pos:end="663:52">2</literal></expr>)</condition><block type="pseudo" pos:start="665:29" pos:end="665:34"><block_content pos:start="665:29" pos:end="665:34">

                            <break pos:start="665:29" pos:end="665:34">break;</break></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="669:25" pos:end="669:37"><expr pos:start="669:25" pos:end="669:36"><name pos:start="669:25" pos:end="669:29">count</name> <operator pos:start="669:31" pos:end="669:32">+=</operator> <name pos:start="669:34" pos:end="669:36">run</name></expr>;</expr_stmt>



                        <if_stmt pos:start="673:25" pos:end="675:34"><if pos:start="673:25" pos:end="675:34">if <condition pos:start="673:28" pos:end="673:45">(<expr pos:start="673:29" pos:end="673:44"><name pos:start="673:29" pos:end="673:33">count</name> <operator pos:start="673:35" pos:end="673:35">&gt;</operator> <name pos:start="673:37" pos:end="673:44">expected</name></expr>)</condition><block type="pseudo" pos:start="675:29" pos:end="675:34"><block_content pos:start="675:29" pos:end="675:34">

                            <break pos:start="675:29" pos:end="675:34">break;</break></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="679:25" pos:end="679:78"><expr pos:start="679:25" pos:end="679:77"><name pos:start="679:25" pos:end="679:29">coeff</name> <operator pos:start="679:31" pos:end="679:31">=</operator> <call pos:start="679:33" pos:end="679:77"><name pos:start="679:33" pos:end="679:53">dequant_and_decompand</name><argument_list pos:start="679:54" pos:end="679:77">(<argument pos:start="679:55" pos:end="679:59"><expr pos:start="679:55" pos:end="679:59"><name pos:start="679:55" pos:end="679:59">level</name></expr></argument>, <argument pos:start="679:62" pos:end="679:76"><expr pos:start="679:62" pos:end="679:76"><name pos:start="679:62" pos:end="679:76"><name pos:start="679:62" pos:end="679:62">s</name><operator pos:start="679:63" pos:end="679:64">-&gt;</operator><name pos:start="679:65" pos:end="679:76">quantisation</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <for pos:start="681:25" pos:end="683:50">for <control pos:start="681:29" pos:end="681:49">(<init pos:start="681:30" pos:end="681:35"><expr pos:start="681:30" pos:end="681:34"><name pos:start="681:30" pos:end="681:30">i</name> <operator pos:start="681:32" pos:end="681:32">=</operator> <literal type="number" pos:start="681:34" pos:end="681:34">0</literal></expr>;</init> <condition pos:start="681:37" pos:end="681:44"><expr pos:start="681:37" pos:end="681:43"><name pos:start="681:37" pos:end="681:37">i</name> <operator pos:start="681:39" pos:end="681:39">&lt;</operator> <name pos:start="681:41" pos:end="681:43">run</name></expr>;</condition> <incr pos:start="681:46" pos:end="681:48"><expr pos:start="681:46" pos:end="681:48"><name pos:start="681:46" pos:end="681:46">i</name><operator pos:start="681:47" pos:end="681:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="683:29" pos:end="683:50"><block_content pos:start="683:29" pos:end="683:50">

                            <expr_stmt pos:start="683:29" pos:end="683:50"><expr pos:start="683:29" pos:end="683:49"><operator pos:start="683:29" pos:end="683:29">*</operator><name pos:start="683:30" pos:end="683:39">coeff_data</name><operator pos:start="683:40" pos:end="683:41">++</operator> <operator pos:start="683:43" pos:end="683:43">=</operator> <name pos:start="683:45" pos:end="683:49">coeff</name></expr>;</expr_stmt></block_content></block></for>

                    </block_content>}</block></while>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="689:17" pos:end="689:41"><expr pos:start="689:17" pos:end="689:40"><call pos:start="689:17" pos:end="689:40"><name pos:start="689:17" pos:end="689:28">CLOSE_READER</name><argument_list pos:start="689:29" pos:end="689:40">(<argument pos:start="689:30" pos:end="689:31"><expr pos:start="689:30" pos:end="689:31"><name pos:start="689:30" pos:end="689:31">re</name></expr></argument>, <argument pos:start="689:34" pos:end="689:39"><expr pos:start="689:34" pos:end="689:39"><operator pos:start="689:34" pos:end="689:34">&amp;</operator><name pos:start="689:35" pos:end="689:39"><name pos:start="689:35" pos:end="689:35">s</name><operator pos:start="689:36" pos:end="689:37">-&gt;</operator><name pos:start="689:38" pos:end="689:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>



            <if_stmt pos:start="695:13" pos:end="703:13"><if pos:start="695:13" pos:end="703:13">if <condition pos:start="695:16" pos:end="695:33">(<expr pos:start="695:17" pos:end="695:32"><name pos:start="695:17" pos:end="695:21">count</name> <operator pos:start="695:23" pos:end="695:23">&gt;</operator> <name pos:start="695:25" pos:end="695:32">expected</name></expr>)</condition> <block pos:start="695:35" pos:end="703:13">{<block_content pos:start="697:17" pos:end="701:25">

                <expr_stmt pos:start="697:17" pos:end="697:98"><expr pos:start="697:17" pos:end="697:97"><call pos:start="697:17" pos:end="697:97"><name pos:start="697:17" pos:end="697:22">av_log</name><argument_list pos:start="697:23" pos:end="697:97">(<argument pos:start="697:24" pos:end="697:28"><expr pos:start="697:24" pos:end="697:28"><name pos:start="697:24" pos:end="697:28">avctx</name></expr></argument>, <argument pos:start="697:31" pos:end="697:42"><expr pos:start="697:31" pos:end="697:42"><name pos:start="697:31" pos:end="697:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="697:45" pos:end="697:96"><expr pos:start="697:45" pos:end="697:96"><literal type="string" pos:start="697:45" pos:end="697:96">"Escape codeword not found, probably corrupt data\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="699:17" pos:end="699:38"><expr pos:start="699:17" pos:end="699:37"><name pos:start="699:17" pos:end="699:19">ret</name> <operator pos:start="699:21" pos:end="699:21">=</operator> <call pos:start="699:23" pos:end="699:37"><name pos:start="699:23" pos:end="699:29">AVERROR</name><argument_list pos:start="699:30" pos:end="699:37">(<argument pos:start="699:31" pos:end="699:36"><expr pos:start="699:31" pos:end="699:36"><name pos:start="699:31" pos:end="699:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="701:17" pos:end="701:25">goto <name pos:start="701:22" pos:end="701:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="707:13" pos:end="707:74"><expr pos:start="707:13" pos:end="707:73"><name pos:start="707:13" pos:end="707:17">bytes</name> <operator pos:start="707:19" pos:end="707:19">=</operator> <call pos:start="707:21" pos:end="707:73"><name pos:start="707:21" pos:end="707:27">FFALIGN</name><argument_list pos:start="707:28" pos:end="707:73">(<argument pos:start="707:29" pos:end="707:69"><expr pos:start="707:29" pos:end="707:69"><call pos:start="707:29" pos:end="707:69"><name pos:start="707:29" pos:end="707:42">FF_CEIL_RSHIFT</name><argument_list pos:start="707:43" pos:end="707:69">(<argument pos:start="707:44" pos:end="707:65"><expr pos:start="707:44" pos:end="707:65"><call pos:start="707:44" pos:end="707:65"><name pos:start="707:44" pos:end="707:57">get_bits_count</name><argument_list pos:start="707:58" pos:end="707:65">(<argument pos:start="707:59" pos:end="707:64"><expr pos:start="707:59" pos:end="707:64"><operator pos:start="707:59" pos:end="707:59">&amp;</operator><name pos:start="707:60" pos:end="707:64"><name pos:start="707:60" pos:end="707:60">s</name><operator pos:start="707:61" pos:end="707:62">-&gt;</operator><name pos:start="707:63" pos:end="707:64">gb</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="707:68" pos:end="707:68"><expr pos:start="707:68" pos:end="707:68"><literal type="number" pos:start="707:68" pos:end="707:68">3</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="707:72" pos:end="707:72"><expr pos:start="707:72" pos:end="707:72"><literal type="number" pos:start="707:72" pos:end="707:72">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="709:13" pos:end="719:55"><if pos:start="709:13" pos:end="717:13">if <condition pos:start="709:16" pos:end="709:56">(<expr pos:start="709:17" pos:end="709:55"><name pos:start="709:17" pos:end="709:21">bytes</name> <operator pos:start="709:23" pos:end="709:23">&gt;</operator> <call pos:start="709:25" pos:end="709:55"><name pos:start="709:25" pos:end="709:50">bytestream2_get_bytes_left</name><argument_list pos:start="709:51" pos:end="709:55">(<argument pos:start="709:52" pos:end="709:54"><expr pos:start="709:52" pos:end="709:54"><operator pos:start="709:52" pos:end="709:52">&amp;</operator><name pos:start="709:53" pos:end="709:54">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="709:58" pos:end="717:13">{<block_content pos:start="711:17" pos:end="715:25">

                <expr_stmt pos:start="711:17" pos:end="711:74"><expr pos:start="711:17" pos:end="711:73"><call pos:start="711:17" pos:end="711:73"><name pos:start="711:17" pos:end="711:22">av_log</name><argument_list pos:start="711:23" pos:end="711:73">(<argument pos:start="711:24" pos:end="711:28"><expr pos:start="711:24" pos:end="711:28"><name pos:start="711:24" pos:end="711:28">avctx</name></expr></argument>, <argument pos:start="711:31" pos:end="711:42"><expr pos:start="711:31" pos:end="711:42"><name pos:start="711:31" pos:end="711:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="711:45" pos:end="711:72"><expr pos:start="711:45" pos:end="711:72"><literal type="string" pos:start="711:45" pos:end="711:72">"Bitstream overread error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="713:17" pos:end="713:38"><expr pos:start="713:17" pos:end="713:37"><name pos:start="713:17" pos:end="713:19">ret</name> <operator pos:start="713:21" pos:end="713:21">=</operator> <call pos:start="713:23" pos:end="713:37"><name pos:start="713:23" pos:end="713:29">AVERROR</name><argument_list pos:start="713:30" pos:end="713:37">(<argument pos:start="713:31" pos:end="713:36"><expr pos:start="713:31" pos:end="713:36"><name pos:start="713:31" pos:end="713:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="715:17" pos:end="715:25">goto <name pos:start="715:22" pos:end="715:24">end</name>;</goto>

            </block_content>}</block></if> <else pos:start="717:15" pos:end="719:55">else<block type="pseudo" pos:start="719:17" pos:end="719:55"><block_content pos:start="719:17" pos:end="719:55">

                <expr_stmt pos:start="719:17" pos:end="719:55"><expr pos:start="719:17" pos:end="719:54"><call pos:start="719:17" pos:end="719:54"><name pos:start="719:17" pos:end="719:32">bytestream2_seek</name><argument_list pos:start="719:33" pos:end="719:54">(<argument pos:start="719:34" pos:end="719:36"><expr pos:start="719:34" pos:end="719:36"><operator pos:start="719:34" pos:end="719:34">&amp;</operator><name pos:start="719:35" pos:end="719:36">gb</name></expr></argument>, <argument pos:start="719:39" pos:end="719:43"><expr pos:start="719:39" pos:end="719:43"><name pos:start="719:39" pos:end="719:43">bytes</name></expr></argument>, <argument pos:start="719:46" pos:end="719:53"><expr pos:start="719:46" pos:end="719:53"><name pos:start="719:46" pos:end="719:53">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <expr_stmt pos:start="723:13" pos:end="723:101"><expr pos:start="723:13" pos:end="723:100"><call pos:start="723:13" pos:end="723:100"><name pos:start="723:13" pos:end="723:18">av_log</name><argument_list pos:start="723:19" pos:end="723:100">(<argument pos:start="723:20" pos:end="723:24"><expr pos:start="723:20" pos:end="723:24"><name pos:start="723:20" pos:end="723:24">avctx</name></expr></argument>, <argument pos:start="723:27" pos:end="723:38"><expr pos:start="723:27" pos:end="723:38"><name pos:start="723:27" pos:end="723:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="723:41" pos:end="723:74"><expr pos:start="723:41" pos:end="723:74"><literal type="string" pos:start="723:41" pos:end="723:74">"End subband coeffs %i extra %i\n"</literal></expr></argument>, <argument pos:start="723:77" pos:end="723:81"><expr pos:start="723:77" pos:end="723:81"><name pos:start="723:77" pos:end="723:81">count</name></expr></argument>, <argument pos:start="723:84" pos:end="723:99"><expr pos:start="723:84" pos:end="723:99"><name pos:start="723:84" pos:end="723:88">count</name> <operator pos:start="723:90" pos:end="723:90">-</operator> <name pos:start="723:92" pos:end="723:99">expected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="725:13" pos:end="725:28"><expr pos:start="725:13" pos:end="725:27"><name pos:start="725:13" pos:end="725:23"><name pos:start="725:13" pos:end="725:13">s</name><operator pos:start="725:14" pos:end="725:15">-&gt;</operator><name pos:start="725:16" pos:end="725:23">codebook</name></name> <operator pos:start="725:25" pos:end="725:25">=</operator> <literal type="number" pos:start="725:27" pos:end="725:27">0</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="729:13" pos:end="729:62">/* Copy last line of coefficients if odd height */</comment>

            <if_stmt pos:start="731:13" pos:end="739:13"><if pos:start="731:13" pos:end="739:13">if <condition pos:start="731:16" pos:end="731:36">(<expr pos:start="731:17" pos:end="731:35"><name pos:start="731:17" pos:end="731:31">highpass_height</name> <operator pos:start="731:33" pos:end="731:33">&amp;</operator> <literal type="number" pos:start="731:35" pos:end="731:35">1</literal></expr>)</condition> <block pos:start="731:38" pos:end="739:13">{<block_content pos:start="733:17" pos:end="737:62">

                <expr_stmt pos:start="733:17" pos:end="737:62"><expr pos:start="733:17" pos:end="737:61"><call pos:start="733:17" pos:end="737:61"><name pos:start="733:17" pos:end="733:22">memcpy</name><argument_list pos:start="733:23" pos:end="737:61">(<argument pos:start="733:24" pos:end="733:69"><expr pos:start="733:24" pos:end="733:69"><operator pos:start="733:24" pos:end="733:24">&amp;</operator><name pos:start="733:25" pos:end="733:69"><name pos:start="733:25" pos:end="733:34">coeff_data</name><index pos:start="733:35" pos:end="733:69">[<expr pos:start="733:36" pos:end="733:68"><name pos:start="733:36" pos:end="733:50">highpass_height</name> <operator pos:start="733:52" pos:end="733:52">*</operator> <name pos:start="733:54" pos:end="733:68">highpass_stride</name></expr>]</index></name></expr></argument>,

                       <argument pos:start="735:24" pos:end="735:75"><expr pos:start="735:24" pos:end="735:75"><operator pos:start="735:24" pos:end="735:24">&amp;</operator><name pos:start="735:25" pos:end="735:75"><name pos:start="735:25" pos:end="735:34">coeff_data</name><index pos:start="735:35" pos:end="735:75">[<expr pos:start="735:36" pos:end="735:74"><operator pos:start="735:36" pos:end="735:36">(</operator><name pos:start="735:37" pos:end="735:51">highpass_height</name> <operator pos:start="735:53" pos:end="735:53">-</operator> <literal type="number" pos:start="735:55" pos:end="735:55">1</literal><operator pos:start="735:56" pos:end="735:56">)</operator> <operator pos:start="735:58" pos:end="735:58">*</operator> <name pos:start="735:60" pos:end="735:74">highpass_stride</name></expr>]</index></name></expr></argument>,

                       <argument pos:start="737:24" pos:end="737:60"><expr pos:start="737:24" pos:end="737:60"><name pos:start="737:24" pos:end="737:38">highpass_stride</name> <operator pos:start="737:40" pos:end="737:40">*</operator> <sizeof pos:start="737:42" pos:end="737:60">sizeof<argument_list pos:start="737:48" pos:end="737:60">(<argument pos:start="737:49" pos:end="737:59"><expr pos:start="737:49" pos:end="737:59"><operator pos:start="737:49" pos:end="737:49">*</operator><name pos:start="737:50" pos:end="737:59">coeff_data</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="747:5" pos:end="757:5"><if pos:start="747:5" pos:end="757:5">if <condition pos:start="747:8" pos:end="749:80">(<expr pos:start="747:9" pos:end="749:79"><operator pos:start="747:9" pos:end="747:9">!</operator><name pos:start="747:10" pos:end="747:19"><name pos:start="747:10" pos:end="747:10">s</name><operator pos:start="747:11" pos:end="747:12">-&gt;</operator><name pos:start="747:13" pos:end="747:19">a_width</name></name> <operator pos:start="747:21" pos:end="747:22">||</operator> <operator pos:start="747:24" pos:end="747:24">!</operator><name pos:start="747:25" pos:end="747:35"><name pos:start="747:25" pos:end="747:25">s</name><operator pos:start="747:26" pos:end="747:27">-&gt;</operator><name pos:start="747:28" pos:end="747:35">a_height</name></name> <operator pos:start="747:37" pos:end="747:38">||</operator> <name pos:start="747:40" pos:end="747:50"><name pos:start="747:40" pos:end="747:40">s</name><operator pos:start="747:41" pos:end="747:42">-&gt;</operator><name pos:start="747:43" pos:end="747:50">a_format</name></name> <operator pos:start="747:52" pos:end="747:53">==</operator> <name pos:start="747:55" pos:end="747:69">AV_PIX_FMT_NONE</name> <operator pos:start="747:71" pos:end="747:72">||</operator>

        <name pos:start="749:9" pos:end="749:22"><name pos:start="749:9" pos:end="749:9">s</name><operator pos:start="749:10" pos:end="749:11">-&gt;</operator><name pos:start="749:12" pos:end="749:22">coded_width</name></name> <operator pos:start="749:24" pos:end="749:25">||</operator> <name pos:start="749:27" pos:end="749:41"><name pos:start="749:27" pos:end="749:27">s</name><operator pos:start="749:28" pos:end="749:29">-&gt;</operator><name pos:start="749:30" pos:end="749:41">coded_height</name></name> <operator pos:start="749:43" pos:end="749:44">||</operator> <name pos:start="749:46" pos:end="749:60"><name pos:start="749:46" pos:end="749:46">s</name><operator pos:start="749:47" pos:end="749:48">-&gt;</operator><name pos:start="749:49" pos:end="749:60">coded_format</name></name> <operator pos:start="749:62" pos:end="749:63">!=</operator> <name pos:start="749:65" pos:end="749:79">AV_PIX_FMT_NONE</name></expr>)</condition> <block pos:start="749:82" pos:end="757:5">{<block_content pos:start="751:9" pos:end="755:17">

        <expr_stmt pos:start="751:9" pos:end="751:60"><expr pos:start="751:9" pos:end="751:59"><call pos:start="751:9" pos:end="751:59"><name pos:start="751:9" pos:end="751:14">av_log</name><argument_list pos:start="751:15" pos:end="751:59">(<argument pos:start="751:16" pos:end="751:20"><expr pos:start="751:16" pos:end="751:20"><name pos:start="751:16" pos:end="751:20">avctx</name></expr></argument>, <argument pos:start="751:23" pos:end="751:34"><expr pos:start="751:23" pos:end="751:34"><name pos:start="751:23" pos:end="751:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="751:37" pos:end="751:58"><expr pos:start="751:37" pos:end="751:58"><literal type="string" pos:start="751:37" pos:end="751:58">"Invalid dimensions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="753:9" pos:end="753:30"><expr pos:start="753:9" pos:end="753:29"><name pos:start="753:9" pos:end="753:11">ret</name> <operator pos:start="753:13" pos:end="753:13">=</operator> <call pos:start="753:15" pos:end="753:29"><name pos:start="753:15" pos:end="753:21">AVERROR</name><argument_list pos:start="753:22" pos:end="753:29">(<argument pos:start="753:23" pos:end="753:28"><expr pos:start="753:23" pos:end="753:28"><name pos:start="753:23" pos:end="753:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="755:9" pos:end="755:17">goto <name pos:start="755:14" pos:end="755:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="761:5" pos:end="769:5"><if pos:start="761:5" pos:end="769:5">if <condition pos:start="761:8" pos:end="761:20">(<expr pos:start="761:9" pos:end="761:19"><operator pos:start="761:9" pos:end="761:9">!</operator><name pos:start="761:10" pos:end="761:19">got_buffer</name></expr>)</condition> <block pos:start="761:22" pos:end="769:5">{<block_content pos:start="763:9" pos:end="767:17">

        <expr_stmt pos:start="763:9" pos:end="763:68"><expr pos:start="763:9" pos:end="763:67"><call pos:start="763:9" pos:end="763:67"><name pos:start="763:9" pos:end="763:14">av_log</name><argument_list pos:start="763:15" pos:end="763:67">(<argument pos:start="763:16" pos:end="763:20"><expr pos:start="763:16" pos:end="763:20"><name pos:start="763:16" pos:end="763:20">avctx</name></expr></argument>, <argument pos:start="763:23" pos:end="763:34"><expr pos:start="763:23" pos:end="763:34"><name pos:start="763:23" pos:end="763:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="763:37" pos:end="763:66"><expr pos:start="763:37" pos:end="763:66"><literal type="string" pos:start="763:37" pos:end="763:66">"No end of header tag found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="765:9" pos:end="765:30"><expr pos:start="765:9" pos:end="765:29"><name pos:start="765:9" pos:end="765:11">ret</name> <operator pos:start="765:13" pos:end="765:13">=</operator> <call pos:start="765:15" pos:end="765:29"><name pos:start="765:15" pos:end="765:21">AVERROR</name><argument_list pos:start="765:22" pos:end="765:29">(<argument pos:start="765:23" pos:end="765:28"><expr pos:start="765:23" pos:end="765:28"><name pos:start="765:23" pos:end="765:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="767:9" pos:end="767:17">goto <name pos:start="767:14" pos:end="767:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="773:5" pos:end="773:53"><expr pos:start="773:5" pos:end="773:52"><name pos:start="773:5" pos:end="773:10">planes</name> <operator pos:start="773:12" pos:end="773:12">=</operator> <call pos:start="773:14" pos:end="773:52"><name pos:start="773:14" pos:end="773:36">av_pix_fmt_count_planes</name><argument_list pos:start="773:37" pos:end="773:52">(<argument pos:start="773:38" pos:end="773:51"><expr pos:start="773:38" pos:end="773:51"><name pos:start="773:38" pos:end="773:51"><name pos:start="773:38" pos:end="773:42">avctx</name><operator pos:start="773:43" pos:end="773:44">-&gt;</operator><name pos:start="773:45" pos:end="773:51">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="775:5" pos:end="1081:5">for <control pos:start="775:9" pos:end="775:52">(<init pos:start="775:10" pos:end="775:19"><expr pos:start="775:10" pos:end="775:18"><name pos:start="775:10" pos:end="775:14">plane</name> <operator pos:start="775:16" pos:end="775:16">=</operator> <literal type="number" pos:start="775:18" pos:end="775:18">0</literal></expr>;</init> <condition pos:start="775:21" pos:end="775:43"><expr pos:start="775:21" pos:end="775:42"><name pos:start="775:21" pos:end="775:25">plane</name> <operator pos:start="775:27" pos:end="775:27">&lt;</operator> <name pos:start="775:29" pos:end="775:34">planes</name> <operator pos:start="775:36" pos:end="775:37">&amp;&amp;</operator> <operator pos:start="775:39" pos:end="775:39">!</operator><name pos:start="775:40" pos:end="775:42">ret</name></expr>;</condition> <incr pos:start="775:45" pos:end="775:51"><expr pos:start="775:45" pos:end="775:51"><name pos:start="775:45" pos:end="775:49">plane</name><operator pos:start="775:50" pos:end="775:51">++</operator></expr></incr>)</control> <block pos:start="775:54" pos:end="1081:5">{<block_content pos:start="779:9" pos:end="1079:9">

        <comment type="block" pos:start="777:9" pos:end="777:21">/* level 1 */</comment>

        <decl_stmt pos:start="779:9" pos:end="779:64"><decl pos:start="779:9" pos:end="779:63"><type pos:start="779:9" pos:end="779:11"><name pos:start="779:9" pos:end="779:11">int</name></type> <name pos:start="779:13" pos:end="779:26">lowpass_height</name>  <init pos:start="779:29" pos:end="779:63">= <expr pos:start="779:31" pos:end="779:63"><name pos:start="779:31" pos:end="779:45"><name pos:start="779:31" pos:end="779:31">s</name><operator pos:start="779:32" pos:end="779:33">-&gt;</operator><name pos:start="779:34" pos:end="779:38">plane</name><index pos:start="779:39" pos:end="779:45">[<expr pos:start="779:40" pos:end="779:44"><name pos:start="779:40" pos:end="779:44">plane</name></expr>]</index></name><operator pos:start="779:46" pos:end="779:46">.</operator><name pos:start="779:47" pos:end="779:56"><name pos:start="779:47" pos:end="779:50">band</name><index pos:start="779:51" pos:end="779:53">[<expr pos:start="779:52" pos:end="779:52"><literal type="number" pos:start="779:52" pos:end="779:52">0</literal></expr>]</index><index pos:start="779:54" pos:end="779:56">[<expr pos:start="779:55" pos:end="779:55"><literal type="number" pos:start="779:55" pos:end="779:55">0</literal></expr>]</index></name><operator pos:start="779:57" pos:end="779:57">.</operator><name pos:start="779:58" pos:end="779:63">height</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="781:9" pos:end="781:63"><decl pos:start="781:9" pos:end="781:62"><type pos:start="781:9" pos:end="781:11"><name pos:start="781:9" pos:end="781:11">int</name></type> <name pos:start="781:13" pos:end="781:25">lowpass_width</name>   <init pos:start="781:29" pos:end="781:62">= <expr pos:start="781:31" pos:end="781:62"><name pos:start="781:31" pos:end="781:45"><name pos:start="781:31" pos:end="781:31">s</name><operator pos:start="781:32" pos:end="781:33">-&gt;</operator><name pos:start="781:34" pos:end="781:38">plane</name><index pos:start="781:39" pos:end="781:45">[<expr pos:start="781:40" pos:end="781:44"><name pos:start="781:40" pos:end="781:44">plane</name></expr>]</index></name><operator pos:start="781:46" pos:end="781:46">.</operator><name pos:start="781:47" pos:end="781:56"><name pos:start="781:47" pos:end="781:50">band</name><index pos:start="781:51" pos:end="781:53">[<expr pos:start="781:52" pos:end="781:52"><literal type="number" pos:start="781:52" pos:end="781:52">0</literal></expr>]</index><index pos:start="781:54" pos:end="781:56">[<expr pos:start="781:55" pos:end="781:55"><literal type="number" pos:start="781:55" pos:end="781:55">0</literal></expr>]</index></name><operator pos:start="781:57" pos:end="781:57">.</operator><name pos:start="781:58" pos:end="781:62">width</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="783:9" pos:end="783:64"><decl pos:start="783:9" pos:end="783:63"><type pos:start="783:9" pos:end="783:11"><name pos:start="783:9" pos:end="783:11">int</name></type> <name pos:start="783:13" pos:end="783:27">highpass_stride</name> <init pos:start="783:29" pos:end="783:63">= <expr pos:start="783:31" pos:end="783:63"><name pos:start="783:31" pos:end="783:45"><name pos:start="783:31" pos:end="783:31">s</name><operator pos:start="783:32" pos:end="783:33">-&gt;</operator><name pos:start="783:34" pos:end="783:38">plane</name><index pos:start="783:39" pos:end="783:45">[<expr pos:start="783:40" pos:end="783:44"><name pos:start="783:40" pos:end="783:44">plane</name></expr>]</index></name><operator pos:start="783:46" pos:end="783:46">.</operator><name pos:start="783:47" pos:end="783:56"><name pos:start="783:47" pos:end="783:50">band</name><index pos:start="783:51" pos:end="783:53">[<expr pos:start="783:52" pos:end="783:52"><literal type="number" pos:start="783:52" pos:end="783:52">0</literal></expr>]</index><index pos:start="783:54" pos:end="783:56">[<expr pos:start="783:55" pos:end="783:55"><literal type="number" pos:start="783:55" pos:end="783:55">1</literal></expr>]</index></name><operator pos:start="783:57" pos:end="783:57">.</operator><name pos:start="783:58" pos:end="783:63">stride</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="785:9" pos:end="785:64"><decl pos:start="785:9" pos:end="785:63"><type pos:start="785:9" pos:end="785:11"><name pos:start="785:9" pos:end="785:11">int</name></type> <name pos:start="785:13" pos:end="785:21">act_plane</name> <init pos:start="785:23" pos:end="785:63">= <expr pos:start="785:25" pos:end="785:63"><ternary pos:start="785:25" pos:end="785:63"><condition pos:start="785:25" pos:end="785:36"><expr pos:start="785:25" pos:end="785:34"><name pos:start="785:25" pos:end="785:29">plane</name> <operator pos:start="785:31" pos:end="785:32">==</operator> <literal type="number" pos:start="785:34" pos:end="785:34">1</literal></expr> ?</condition><then pos:start="785:38" pos:end="785:38"> <expr pos:start="785:38" pos:end="785:38"><literal type="number" pos:start="785:38" pos:end="785:38">2</literal></expr> </then><else pos:start="785:40" pos:end="785:63">: <expr pos:start="785:42" pos:end="785:63"><ternary pos:start="785:42" pos:end="785:63"><condition pos:start="785:42" pos:end="785:53"><expr pos:start="785:42" pos:end="785:51"><name pos:start="785:42" pos:end="785:46">plane</name> <operator pos:start="785:48" pos:end="785:49">==</operator> <literal type="number" pos:start="785:51" pos:end="785:51">2</literal></expr> ?</condition><then pos:start="785:55" pos:end="785:55"> <expr pos:start="785:55" pos:end="785:55"><literal type="number" pos:start="785:55" pos:end="785:55">1</literal></expr> </then><else pos:start="785:57" pos:end="785:63">: <expr pos:start="785:59" pos:end="785:63"><name pos:start="785:59" pos:end="785:63">plane</name></expr></else></ternary></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="787:9" pos:end="787:43"><decl pos:start="787:9" pos:end="787:20"><type pos:start="787:9" pos:end="787:17"><name pos:start="787:9" pos:end="787:15">int16_t</name> <modifier pos:start="787:17" pos:end="787:17">*</modifier></type><name pos:start="787:18" pos:end="787:20">low</name></decl>, <decl pos:start="787:23" pos:end="787:27"><type ref="prev" pos:start="787:9" pos:end="787:17"><modifier pos:start="787:23" pos:end="787:23">*</modifier></type><name pos:start="787:24" pos:end="787:27">high</name></decl>, <decl pos:start="787:30" pos:end="787:36"><type ref="prev" pos:start="787:9" pos:end="787:17"><modifier pos:start="787:30" pos:end="787:30">*</modifier></type><name pos:start="787:31" pos:end="787:36">output</name></decl>, <decl pos:start="787:39" pos:end="787:42"><type ref="prev" pos:start="787:9" pos:end="787:17"><modifier pos:start="787:39" pos:end="787:39">*</modifier></type><name pos:start="787:40" pos:end="787:42">dst</name></decl>;</decl_stmt>



        <if_stmt pos:start="791:9" pos:end="801:9"><if pos:start="791:9" pos:end="801:9">if <condition pos:start="791:12" pos:end="793:102">(<expr pos:start="791:13" pos:end="793:101"><name pos:start="791:13" pos:end="791:26">lowpass_height</name> <operator pos:start="791:28" pos:end="791:28">&gt;</operator> <name pos:start="791:30" pos:end="791:44"><name pos:start="791:30" pos:end="791:30">s</name><operator pos:start="791:31" pos:end="791:32">-&gt;</operator><name pos:start="791:33" pos:end="791:37">plane</name><index pos:start="791:38" pos:end="791:44">[<expr pos:start="791:39" pos:end="791:43"><name pos:start="791:39" pos:end="791:43">plane</name></expr>]</index></name><operator pos:start="791:45" pos:end="791:45">.</operator><name pos:start="791:46" pos:end="791:55"><name pos:start="791:46" pos:end="791:49">band</name><index pos:start="791:50" pos:end="791:52">[<expr pos:start="791:51" pos:end="791:51"><literal type="number" pos:start="791:51" pos:end="791:51">0</literal></expr>]</index><index pos:start="791:53" pos:end="791:55">[<expr pos:start="791:54" pos:end="791:54"><literal type="number" pos:start="791:54" pos:end="791:54">0</literal></expr>]</index></name><operator pos:start="791:56" pos:end="791:56">.</operator><name pos:start="791:57" pos:end="791:64">a_height</name> <operator pos:start="791:66" pos:end="791:67">||</operator> <name pos:start="791:69" pos:end="791:81">lowpass_width</name> <operator pos:start="791:83" pos:end="791:83">&gt;</operator> <name pos:start="791:85" pos:end="791:99"><name pos:start="791:85" pos:end="791:85">s</name><operator pos:start="791:86" pos:end="791:87">-&gt;</operator><name pos:start="791:88" pos:end="791:92">plane</name><index pos:start="791:93" pos:end="791:99">[<expr pos:start="791:94" pos:end="791:98"><name pos:start="791:94" pos:end="791:98">plane</name></expr>]</index></name><operator pos:start="791:100" pos:end="791:100">.</operator><name pos:start="791:101" pos:end="791:110"><name pos:start="791:101" pos:end="791:104">band</name><index pos:start="791:105" pos:end="791:107">[<expr pos:start="791:106" pos:end="791:106"><literal type="number" pos:start="791:106" pos:end="791:106">0</literal></expr>]</index><index pos:start="791:108" pos:end="791:110">[<expr pos:start="791:109" pos:end="791:109"><literal type="number" pos:start="791:109" pos:end="791:109">0</literal></expr>]</index></name><operator pos:start="791:111" pos:end="791:111">.</operator><name pos:start="791:112" pos:end="791:118">a_width</name> <operator pos:start="791:120" pos:end="791:121">||</operator>

            <operator pos:start="793:13" pos:end="793:13">!</operator><name pos:start="793:14" pos:end="793:28">highpass_stride</name> <operator pos:start="793:30" pos:end="793:31">||</operator> <name pos:start="793:33" pos:end="793:47"><name pos:start="793:33" pos:end="793:33">s</name><operator pos:start="793:34" pos:end="793:35">-&gt;</operator><name pos:start="793:36" pos:end="793:40">plane</name><index pos:start="793:41" pos:end="793:47">[<expr pos:start="793:42" pos:end="793:46"><name pos:start="793:42" pos:end="793:46">plane</name></expr>]</index></name><operator pos:start="793:48" pos:end="793:48">.</operator><name pos:start="793:49" pos:end="793:58"><name pos:start="793:49" pos:end="793:52">band</name><index pos:start="793:53" pos:end="793:55">[<expr pos:start="793:54" pos:end="793:54"><literal type="number" pos:start="793:54" pos:end="793:54">0</literal></expr>]</index><index pos:start="793:56" pos:end="793:58">[<expr pos:start="793:57" pos:end="793:57"><literal type="number" pos:start="793:57" pos:end="793:57">1</literal></expr>]</index></name><operator pos:start="793:59" pos:end="793:59">.</operator><name pos:start="793:60" pos:end="793:64">width</name> <operator pos:start="793:66" pos:end="793:66">&gt;</operator> <name pos:start="793:68" pos:end="793:82"><name pos:start="793:68" pos:end="793:68">s</name><operator pos:start="793:69" pos:end="793:70">-&gt;</operator><name pos:start="793:71" pos:end="793:75">plane</name><index pos:start="793:76" pos:end="793:82">[<expr pos:start="793:77" pos:end="793:81"><name pos:start="793:77" pos:end="793:81">plane</name></expr>]</index></name><operator pos:start="793:83" pos:end="793:83">.</operator><name pos:start="793:84" pos:end="793:93"><name pos:start="793:84" pos:end="793:87">band</name><index pos:start="793:88" pos:end="793:90">[<expr pos:start="793:89" pos:end="793:89"><literal type="number" pos:start="793:89" pos:end="793:89">0</literal></expr>]</index><index pos:start="793:91" pos:end="793:93">[<expr pos:start="793:92" pos:end="793:92"><literal type="number" pos:start="793:92" pos:end="793:92">1</literal></expr>]</index></name><operator pos:start="793:94" pos:end="793:94">.</operator><name pos:start="793:95" pos:end="793:101">a_width</name></expr>)</condition> <block pos:start="793:104" pos:end="801:9">{<block_content pos:start="795:13" pos:end="799:21">

            <expr_stmt pos:start="795:13" pos:end="795:70"><expr pos:start="795:13" pos:end="795:69"><call pos:start="795:13" pos:end="795:69"><name pos:start="795:13" pos:end="795:18">av_log</name><argument_list pos:start="795:19" pos:end="795:69">(<argument pos:start="795:20" pos:end="795:24"><expr pos:start="795:20" pos:end="795:24"><name pos:start="795:20" pos:end="795:24">avctx</name></expr></argument>, <argument pos:start="795:27" pos:end="795:38"><expr pos:start="795:27" pos:end="795:38"><name pos:start="795:27" pos:end="795:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="795:41" pos:end="795:68"><expr pos:start="795:41" pos:end="795:68"><literal type="string" pos:start="795:41" pos:end="795:68">"Invalid plane dimensions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="797:13" pos:end="797:34"><expr pos:start="797:13" pos:end="797:33"><name pos:start="797:13" pos:end="797:15">ret</name> <operator pos:start="797:17" pos:end="797:17">=</operator> <call pos:start="797:19" pos:end="797:33"><name pos:start="797:19" pos:end="797:25">AVERROR</name><argument_list pos:start="797:26" pos:end="797:33">(<argument pos:start="797:27" pos:end="797:32"><expr pos:start="797:27" pos:end="797:32"><name pos:start="797:27" pos:end="797:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="799:13" pos:end="799:21">goto <name pos:start="799:18" pos:end="799:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="805:9" pos:end="805:131"><expr pos:start="805:9" pos:end="805:130"><call pos:start="805:9" pos:end="805:130"><name pos:start="805:9" pos:end="805:14">av_log</name><argument_list pos:start="805:15" pos:end="805:130">(<argument pos:start="805:16" pos:end="805:20"><expr pos:start="805:16" pos:end="805:20"><name pos:start="805:16" pos:end="805:20">avctx</name></expr></argument>, <argument pos:start="805:23" pos:end="805:34"><expr pos:start="805:23" pos:end="805:34"><name pos:start="805:23" pos:end="805:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="805:37" pos:end="805:74"><expr pos:start="805:37" pos:end="805:74"><literal type="string" pos:start="805:37" pos:end="805:74">"Decoding level 1 plane %i %i %i %i\n"</literal></expr></argument>, <argument pos:start="805:77" pos:end="805:81"><expr pos:start="805:77" pos:end="805:81"><name pos:start="805:77" pos:end="805:81">plane</name></expr></argument>, <argument pos:start="805:84" pos:end="805:97"><expr pos:start="805:84" pos:end="805:97"><name pos:start="805:84" pos:end="805:97">lowpass_height</name></expr></argument>, <argument pos:start="805:100" pos:end="805:112"><expr pos:start="805:100" pos:end="805:112"><name pos:start="805:100" pos:end="805:112">lowpass_width</name></expr></argument>, <argument pos:start="805:115" pos:end="805:129"><expr pos:start="805:115" pos:end="805:129"><name pos:start="805:115" pos:end="805:129">highpass_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="809:9" pos:end="809:44"><expr pos:start="809:9" pos:end="809:43"><name pos:start="809:9" pos:end="809:11">low</name>    <operator pos:start="809:16" pos:end="809:16">=</operator> <name pos:start="809:18" pos:end="809:32"><name pos:start="809:18" pos:end="809:18">s</name><operator pos:start="809:19" pos:end="809:20">-&gt;</operator><name pos:start="809:21" pos:end="809:25">plane</name><index pos:start="809:26" pos:end="809:32">[<expr pos:start="809:27" pos:end="809:31"><name pos:start="809:27" pos:end="809:31">plane</name></expr>]</index></name><operator pos:start="809:33" pos:end="809:33">.</operator><name pos:start="809:34" pos:end="809:43"><name pos:start="809:34" pos:end="809:40">subband</name><index pos:start="809:41" pos:end="809:43">[<expr pos:start="809:42" pos:end="809:42"><literal type="number" pos:start="809:42" pos:end="809:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="811:9" pos:end="811:44"><expr pos:start="811:9" pos:end="811:43"><name pos:start="811:9" pos:end="811:12">high</name>   <operator pos:start="811:16" pos:end="811:16">=</operator> <name pos:start="811:18" pos:end="811:32"><name pos:start="811:18" pos:end="811:18">s</name><operator pos:start="811:19" pos:end="811:20">-&gt;</operator><name pos:start="811:21" pos:end="811:25">plane</name><index pos:start="811:26" pos:end="811:32">[<expr pos:start="811:27" pos:end="811:31"><name pos:start="811:27" pos:end="811:31">plane</name></expr>]</index></name><operator pos:start="811:33" pos:end="811:33">.</operator><name pos:start="811:34" pos:end="811:43"><name pos:start="811:34" pos:end="811:40">subband</name><index pos:start="811:41" pos:end="811:43">[<expr pos:start="811:42" pos:end="811:42"><literal type="number" pos:start="811:42" pos:end="811:42">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="813:9" pos:end="813:40"><expr pos:start="813:9" pos:end="813:39"><name pos:start="813:9" pos:end="813:14">output</name> <operator pos:start="813:16" pos:end="813:16">=</operator> <name pos:start="813:18" pos:end="813:32"><name pos:start="813:18" pos:end="813:18">s</name><operator pos:start="813:19" pos:end="813:20">-&gt;</operator><name pos:start="813:21" pos:end="813:25">plane</name><index pos:start="813:26" pos:end="813:32">[<expr pos:start="813:27" pos:end="813:31"><name pos:start="813:27" pos:end="813:31">plane</name></expr>]</index></name><operator pos:start="813:33" pos:end="813:33">.</operator><name pos:start="813:34" pos:end="813:39"><name pos:start="813:34" pos:end="813:36">l_h</name><index pos:start="813:37" pos:end="813:39">[<expr pos:start="813:38" pos:end="813:38"><literal type="number" pos:start="813:38" pos:end="813:38">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="815:9" pos:end="825:9">for <control pos:start="815:13" pos:end="815:43">(<init pos:start="815:14" pos:end="815:19"><expr pos:start="815:14" pos:end="815:18"><name pos:start="815:14" pos:end="815:14">i</name> <operator pos:start="815:16" pos:end="815:16">=</operator> <literal type="number" pos:start="815:18" pos:end="815:18">0</literal></expr>;</init> <condition pos:start="815:21" pos:end="815:38"><expr pos:start="815:21" pos:end="815:37"><name pos:start="815:21" pos:end="815:21">i</name> <operator pos:start="815:23" pos:end="815:23">&lt;</operator> <name pos:start="815:25" pos:end="815:37">lowpass_width</name></expr>;</condition> <incr pos:start="815:40" pos:end="815:42"><expr pos:start="815:40" pos:end="815:42"><name pos:start="815:40" pos:end="815:40">i</name><operator pos:start="815:41" pos:end="815:42">++</operator></expr></incr>)</control> <block pos:start="815:45" pos:end="825:9">{<block_content pos:start="817:13" pos:end="823:21">

            <expr_stmt pos:start="817:13" pos:end="817:106"><expr pos:start="817:13" pos:end="817:105"><call pos:start="817:13" pos:end="817:105"><name pos:start="817:13" pos:end="817:23">vert_filter</name><argument_list pos:start="817:24" pos:end="817:105">(<argument pos:start="817:25" pos:end="817:30"><expr pos:start="817:25" pos:end="817:30"><name pos:start="817:25" pos:end="817:30">output</name></expr></argument>, <argument pos:start="817:33" pos:end="817:45"><expr pos:start="817:33" pos:end="817:45"><name pos:start="817:33" pos:end="817:45">lowpass_width</name></expr></argument>, <argument pos:start="817:48" pos:end="817:50"><expr pos:start="817:48" pos:end="817:50"><name pos:start="817:48" pos:end="817:50">low</name></expr></argument>, <argument pos:start="817:53" pos:end="817:65"><expr pos:start="817:53" pos:end="817:65"><name pos:start="817:53" pos:end="817:65">lowpass_width</name></expr></argument>, <argument pos:start="817:68" pos:end="817:71"><expr pos:start="817:68" pos:end="817:71"><name pos:start="817:68" pos:end="817:71">high</name></expr></argument>, <argument pos:start="817:74" pos:end="817:88"><expr pos:start="817:74" pos:end="817:88"><name pos:start="817:74" pos:end="817:88">highpass_stride</name></expr></argument>, <argument pos:start="817:91" pos:end="817:104"><expr pos:start="817:91" pos:end="817:104"><name pos:start="817:91" pos:end="817:104">lowpass_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="819:13" pos:end="819:18"><expr pos:start="819:13" pos:end="819:17"><name pos:start="819:13" pos:end="819:15">low</name><operator pos:start="819:16" pos:end="819:17">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="821:13" pos:end="821:19"><expr pos:start="821:13" pos:end="821:18"><name pos:start="821:13" pos:end="821:16">high</name><operator pos:start="821:17" pos:end="821:18">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="823:13" pos:end="823:21"><expr pos:start="823:13" pos:end="823:20"><name pos:start="823:13" pos:end="823:18">output</name><operator pos:start="823:19" pos:end="823:20">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="829:9" pos:end="829:44"><expr pos:start="829:9" pos:end="829:43"><name pos:start="829:9" pos:end="829:11">low</name>    <operator pos:start="829:16" pos:end="829:16">=</operator> <name pos:start="829:18" pos:end="829:32"><name pos:start="829:18" pos:end="829:18">s</name><operator pos:start="829:19" pos:end="829:20">-&gt;</operator><name pos:start="829:21" pos:end="829:25">plane</name><index pos:start="829:26" pos:end="829:32">[<expr pos:start="829:27" pos:end="829:31"><name pos:start="829:27" pos:end="829:31">plane</name></expr>]</index></name><operator pos:start="829:33" pos:end="829:33">.</operator><name pos:start="829:34" pos:end="829:43"><name pos:start="829:34" pos:end="829:40">subband</name><index pos:start="829:41" pos:end="829:43">[<expr pos:start="829:42" pos:end="829:42"><literal type="number" pos:start="829:42" pos:end="829:42">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="831:9" pos:end="831:44"><expr pos:start="831:9" pos:end="831:43"><name pos:start="831:9" pos:end="831:12">high</name>   <operator pos:start="831:16" pos:end="831:16">=</operator> <name pos:start="831:18" pos:end="831:32"><name pos:start="831:18" pos:end="831:18">s</name><operator pos:start="831:19" pos:end="831:20">-&gt;</operator><name pos:start="831:21" pos:end="831:25">plane</name><index pos:start="831:26" pos:end="831:32">[<expr pos:start="831:27" pos:end="831:31"><name pos:start="831:27" pos:end="831:31">plane</name></expr>]</index></name><operator pos:start="831:33" pos:end="831:33">.</operator><name pos:start="831:34" pos:end="831:43"><name pos:start="831:34" pos:end="831:40">subband</name><index pos:start="831:41" pos:end="831:43">[<expr pos:start="831:42" pos:end="831:42"><literal type="number" pos:start="831:42" pos:end="831:42">3</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="833:9" pos:end="833:40"><expr pos:start="833:9" pos:end="833:39"><name pos:start="833:9" pos:end="833:14">output</name> <operator pos:start="833:16" pos:end="833:16">=</operator> <name pos:start="833:18" pos:end="833:32"><name pos:start="833:18" pos:end="833:18">s</name><operator pos:start="833:19" pos:end="833:20">-&gt;</operator><name pos:start="833:21" pos:end="833:25">plane</name><index pos:start="833:26" pos:end="833:32">[<expr pos:start="833:27" pos:end="833:31"><name pos:start="833:27" pos:end="833:31">plane</name></expr>]</index></name><operator pos:start="833:33" pos:end="833:33">.</operator><name pos:start="833:34" pos:end="833:39"><name pos:start="833:34" pos:end="833:36">l_h</name><index pos:start="833:37" pos:end="833:39">[<expr pos:start="833:38" pos:end="833:38"><literal type="number" pos:start="833:38" pos:end="833:38">1</literal></expr>]</index></name></expr>;</expr_stmt>



        <for pos:start="837:9" pos:end="849:9">for <control pos:start="837:13" pos:end="837:43">(<init pos:start="837:14" pos:end="837:19"><expr pos:start="837:14" pos:end="837:18"><name pos:start="837:14" pos:end="837:14">i</name> <operator pos:start="837:16" pos:end="837:16">=</operator> <literal type="number" pos:start="837:18" pos:end="837:18">0</literal></expr>;</init> <condition pos:start="837:21" pos:end="837:38"><expr pos:start="837:21" pos:end="837:37"><name pos:start="837:21" pos:end="837:21">i</name> <operator pos:start="837:23" pos:end="837:23">&lt;</operator> <name pos:start="837:25" pos:end="837:37">lowpass_width</name></expr>;</condition> <incr pos:start="837:40" pos:end="837:42"><expr pos:start="837:40" pos:end="837:42"><name pos:start="837:40" pos:end="837:40">i</name><operator pos:start="837:41" pos:end="837:42">++</operator></expr></incr>)</control> <block pos:start="837:45" pos:end="849:9">{<block_content pos:start="841:13" pos:end="847:21">

            <comment type="line" pos:start="839:13" pos:end="839:58">// note the stride of "low" is highpass_stride</comment>

            <expr_stmt pos:start="841:13" pos:end="841:108"><expr pos:start="841:13" pos:end="841:107"><call pos:start="841:13" pos:end="841:107"><name pos:start="841:13" pos:end="841:23">vert_filter</name><argument_list pos:start="841:24" pos:end="841:107">(<argument pos:start="841:25" pos:end="841:30"><expr pos:start="841:25" pos:end="841:30"><name pos:start="841:25" pos:end="841:30">output</name></expr></argument>, <argument pos:start="841:33" pos:end="841:45"><expr pos:start="841:33" pos:end="841:45"><name pos:start="841:33" pos:end="841:45">lowpass_width</name></expr></argument>, <argument pos:start="841:48" pos:end="841:50"><expr pos:start="841:48" pos:end="841:50"><name pos:start="841:48" pos:end="841:50">low</name></expr></argument>, <argument pos:start="841:53" pos:end="841:67"><expr pos:start="841:53" pos:end="841:67"><name pos:start="841:53" pos:end="841:67">highpass_stride</name></expr></argument>, <argument pos:start="841:70" pos:end="841:73"><expr pos:start="841:70" pos:end="841:73"><name pos:start="841:70" pos:end="841:73">high</name></expr></argument>, <argument pos:start="841:76" pos:end="841:90"><expr pos:start="841:76" pos:end="841:90"><name pos:start="841:76" pos:end="841:90">highpass_stride</name></expr></argument>, <argument pos:start="841:93" pos:end="841:106"><expr pos:start="841:93" pos:end="841:106"><name pos:start="841:93" pos:end="841:106">lowpass_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="843:13" pos:end="843:18"><expr pos:start="843:13" pos:end="843:17"><name pos:start="843:13" pos:end="843:15">low</name><operator pos:start="843:16" pos:end="843:17">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="845:13" pos:end="845:19"><expr pos:start="845:13" pos:end="845:18"><name pos:start="845:13" pos:end="845:16">high</name><operator pos:start="845:17" pos:end="845:18">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="847:13" pos:end="847:21"><expr pos:start="847:13" pos:end="847:20"><name pos:start="847:13" pos:end="847:18">output</name><operator pos:start="847:19" pos:end="847:20">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="853:9" pos:end="853:40"><expr pos:start="853:9" pos:end="853:39"><name pos:start="853:9" pos:end="853:11">low</name>    <operator pos:start="853:16" pos:end="853:16">=</operator> <name pos:start="853:18" pos:end="853:32"><name pos:start="853:18" pos:end="853:18">s</name><operator pos:start="853:19" pos:end="853:20">-&gt;</operator><name pos:start="853:21" pos:end="853:25">plane</name><index pos:start="853:26" pos:end="853:32">[<expr pos:start="853:27" pos:end="853:31"><name pos:start="853:27" pos:end="853:31">plane</name></expr>]</index></name><operator pos:start="853:33" pos:end="853:33">.</operator><name pos:start="853:34" pos:end="853:39"><name pos:start="853:34" pos:end="853:36">l_h</name><index pos:start="853:37" pos:end="853:39">[<expr pos:start="853:38" pos:end="853:38"><literal type="number" pos:start="853:38" pos:end="853:38">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="855:9" pos:end="855:40"><expr pos:start="855:9" pos:end="855:39"><name pos:start="855:9" pos:end="855:12">high</name>   <operator pos:start="855:16" pos:end="855:16">=</operator> <name pos:start="855:18" pos:end="855:32"><name pos:start="855:18" pos:end="855:18">s</name><operator pos:start="855:19" pos:end="855:20">-&gt;</operator><name pos:start="855:21" pos:end="855:25">plane</name><index pos:start="855:26" pos:end="855:32">[<expr pos:start="855:27" pos:end="855:31"><name pos:start="855:27" pos:end="855:31">plane</name></expr>]</index></name><operator pos:start="855:33" pos:end="855:33">.</operator><name pos:start="855:34" pos:end="855:39"><name pos:start="855:34" pos:end="855:36">l_h</name><index pos:start="855:37" pos:end="855:39">[<expr pos:start="855:38" pos:end="855:38"><literal type="number" pos:start="855:38" pos:end="855:38">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="857:9" pos:end="857:44"><expr pos:start="857:9" pos:end="857:43"><name pos:start="857:9" pos:end="857:14">output</name> <operator pos:start="857:16" pos:end="857:16">=</operator> <name pos:start="857:18" pos:end="857:32"><name pos:start="857:18" pos:end="857:18">s</name><operator pos:start="857:19" pos:end="857:20">-&gt;</operator><name pos:start="857:21" pos:end="857:25">plane</name><index pos:start="857:26" pos:end="857:32">[<expr pos:start="857:27" pos:end="857:31"><name pos:start="857:27" pos:end="857:31">plane</name></expr>]</index></name><operator pos:start="857:33" pos:end="857:33">.</operator><name pos:start="857:34" pos:end="857:43"><name pos:start="857:34" pos:end="857:40">subband</name><index pos:start="857:41" pos:end="857:43">[<expr pos:start="857:42" pos:end="857:42"><literal type="number" pos:start="857:42" pos:end="857:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="859:9" pos:end="869:9">for <control pos:start="859:13" pos:end="859:48">(<init pos:start="859:14" pos:end="859:19"><expr pos:start="859:14" pos:end="859:18"><name pos:start="859:14" pos:end="859:14">i</name> <operator pos:start="859:16" pos:end="859:16">=</operator> <literal type="number" pos:start="859:18" pos:end="859:18">0</literal></expr>;</init> <condition pos:start="859:21" pos:end="859:43"><expr pos:start="859:21" pos:end="859:42"><name pos:start="859:21" pos:end="859:21">i</name> <operator pos:start="859:23" pos:end="859:23">&lt;</operator> <name pos:start="859:25" pos:end="859:38">lowpass_height</name> <operator pos:start="859:40" pos:end="859:40">*</operator> <literal type="number" pos:start="859:42" pos:end="859:42">2</literal></expr>;</condition> <incr pos:start="859:45" pos:end="859:47"><expr pos:start="859:45" pos:end="859:47"><name pos:start="859:45" pos:end="859:45">i</name><operator pos:start="859:46" pos:end="859:47">++</operator></expr></incr>)</control> <block pos:start="859:50" pos:end="869:9">{<block_content pos:start="861:13" pos:end="867:40">

            <expr_stmt pos:start="861:13" pos:end="861:59"><expr pos:start="861:13" pos:end="861:58"><call pos:start="861:13" pos:end="861:58"><name pos:start="861:13" pos:end="861:24">horiz_filter</name><argument_list pos:start="861:25" pos:end="861:58">(<argument pos:start="861:26" pos:end="861:31"><expr pos:start="861:26" pos:end="861:31"><name pos:start="861:26" pos:end="861:31">output</name></expr></argument>, <argument pos:start="861:34" pos:end="861:36"><expr pos:start="861:34" pos:end="861:36"><name pos:start="861:34" pos:end="861:36">low</name></expr></argument>, <argument pos:start="861:39" pos:end="861:42"><expr pos:start="861:39" pos:end="861:42"><name pos:start="861:39" pos:end="861:42">high</name></expr></argument>, <argument pos:start="861:45" pos:end="861:57"><expr pos:start="861:45" pos:end="861:57"><name pos:start="861:45" pos:end="861:57">lowpass_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="863:13" pos:end="863:36"><expr pos:start="863:13" pos:end="863:35"><name pos:start="863:13" pos:end="863:15">low</name>    <operator pos:start="863:20" pos:end="863:21">+=</operator> <name pos:start="863:23" pos:end="863:35">lowpass_width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="865:13" pos:end="865:36"><expr pos:start="865:13" pos:end="865:35"><name pos:start="865:13" pos:end="865:16">high</name>   <operator pos:start="865:20" pos:end="865:21">+=</operator> <name pos:start="865:23" pos:end="865:35">lowpass_width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="867:13" pos:end="867:40"><expr pos:start="867:13" pos:end="867:39"><name pos:start="867:13" pos:end="867:18">output</name> <operator pos:start="867:20" pos:end="867:21">+=</operator> <name pos:start="867:23" pos:end="867:35">lowpass_width</name> <operator pos:start="867:37" pos:end="867:37">*</operator> <literal type="number" pos:start="867:39" pos:end="867:39">2</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="871:9" pos:end="887:9"><if pos:start="871:9" pos:end="887:9">if <condition pos:start="871:12" pos:end="871:25">(<expr pos:start="871:13" pos:end="871:24"><name pos:start="871:13" pos:end="871:18"><name pos:start="871:13" pos:end="871:13">s</name><operator pos:start="871:14" pos:end="871:15">-&gt;</operator><name pos:start="871:16" pos:end="871:18">bpc</name></name> <operator pos:start="871:20" pos:end="871:21">==</operator> <literal type="number" pos:start="871:23" pos:end="871:24">12</literal></expr>)</condition> <block pos:start="871:27" pos:end="887:9">{<block_content pos:start="873:13" pos:end="885:13">

            <expr_stmt pos:start="873:13" pos:end="873:48"><expr pos:start="873:13" pos:end="873:47"><name pos:start="873:13" pos:end="873:18">output</name> <operator pos:start="873:20" pos:end="873:20">=</operator> <name pos:start="873:22" pos:end="873:36"><name pos:start="873:22" pos:end="873:22">s</name><operator pos:start="873:23" pos:end="873:24">-&gt;</operator><name pos:start="873:25" pos:end="873:29">plane</name><index pos:start="873:30" pos:end="873:36">[<expr pos:start="873:31" pos:end="873:35"><name pos:start="873:31" pos:end="873:35">plane</name></expr>]</index></name><operator pos:start="873:37" pos:end="873:37">.</operator><name pos:start="873:38" pos:end="873:47"><name pos:start="873:38" pos:end="873:44">subband</name><index pos:start="873:45" pos:end="873:47">[<expr pos:start="873:46" pos:end="873:46"><literal type="number" pos:start="873:46" pos:end="873:46">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="875:13" pos:end="885:13">for <control pos:start="875:17" pos:end="875:52">(<init pos:start="875:18" pos:end="875:23"><expr pos:start="875:18" pos:end="875:22"><name pos:start="875:18" pos:end="875:18">i</name> <operator pos:start="875:20" pos:end="875:20">=</operator> <literal type="number" pos:start="875:22" pos:end="875:22">0</literal></expr>;</init> <condition pos:start="875:25" pos:end="875:47"><expr pos:start="875:25" pos:end="875:46"><name pos:start="875:25" pos:end="875:25">i</name> <operator pos:start="875:27" pos:end="875:27">&lt;</operator> <name pos:start="875:29" pos:end="875:42">lowpass_height</name> <operator pos:start="875:44" pos:end="875:44">*</operator> <literal type="number" pos:start="875:46" pos:end="875:46">2</literal></expr>;</condition> <incr pos:start="875:49" pos:end="875:51"><expr pos:start="875:49" pos:end="875:51"><name pos:start="875:49" pos:end="875:49">i</name><operator pos:start="875:50" pos:end="875:51">++</operator></expr></incr>)</control> <block pos:start="875:54" pos:end="885:13">{<block_content pos:start="877:17" pos:end="883:44">

                <for pos:start="877:17" pos:end="879:35">for <control pos:start="877:21" pos:end="877:55">(<init pos:start="877:22" pos:end="877:27"><expr pos:start="877:22" pos:end="877:26"><name pos:start="877:22" pos:end="877:22">j</name> <operator pos:start="877:24" pos:end="877:24">=</operator> <literal type="number" pos:start="877:26" pos:end="877:26">0</literal></expr>;</init> <condition pos:start="877:29" pos:end="877:50"><expr pos:start="877:29" pos:end="877:49"><name pos:start="877:29" pos:end="877:29">j</name> <operator pos:start="877:31" pos:end="877:31">&lt;</operator> <name pos:start="877:33" pos:end="877:45">lowpass_width</name> <operator pos:start="877:47" pos:end="877:47">*</operator> <literal type="number" pos:start="877:49" pos:end="877:49">2</literal></expr>;</condition> <incr pos:start="877:52" pos:end="877:54"><expr pos:start="877:52" pos:end="877:54"><name pos:start="877:52" pos:end="877:52">j</name><operator pos:start="877:53" pos:end="877:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="879:21" pos:end="879:35"><block_content pos:start="879:21" pos:end="879:35">

                    <expr_stmt pos:start="879:21" pos:end="879:35"><expr pos:start="879:21" pos:end="879:34"><name pos:start="879:21" pos:end="879:29"><name pos:start="879:21" pos:end="879:26">output</name><index pos:start="879:27" pos:end="879:29">[<expr pos:start="879:28" pos:end="879:28"><name pos:start="879:28" pos:end="879:28">j</name></expr>]</index></name> <operator pos:start="879:31" pos:end="879:32">*=</operator> <literal type="number" pos:start="879:34" pos:end="879:34">4</literal></expr>;</expr_stmt></block_content></block></for>



                <expr_stmt pos:start="883:17" pos:end="883:44"><expr pos:start="883:17" pos:end="883:43"><name pos:start="883:17" pos:end="883:22">output</name> <operator pos:start="883:24" pos:end="883:25">+=</operator> <name pos:start="883:27" pos:end="883:39">lowpass_width</name> <operator pos:start="883:41" pos:end="883:41">*</operator> <literal type="number" pos:start="883:43" pos:end="883:43">2</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="891:9" pos:end="891:21">/* level 2 */</comment>

        <expr_stmt pos:start="893:9" pos:end="893:60"><expr pos:start="893:9" pos:end="893:59"><name pos:start="893:9" pos:end="893:22">lowpass_height</name>  <operator pos:start="893:25" pos:end="893:25">=</operator> <name pos:start="893:27" pos:end="893:41"><name pos:start="893:27" pos:end="893:27">s</name><operator pos:start="893:28" pos:end="893:29">-&gt;</operator><name pos:start="893:30" pos:end="893:34">plane</name><index pos:start="893:35" pos:end="893:41">[<expr pos:start="893:36" pos:end="893:40"><name pos:start="893:36" pos:end="893:40">plane</name></expr>]</index></name><operator pos:start="893:42" pos:end="893:42">.</operator><name pos:start="893:43" pos:end="893:52"><name pos:start="893:43" pos:end="893:46">band</name><index pos:start="893:47" pos:end="893:49">[<expr pos:start="893:48" pos:end="893:48"><literal type="number" pos:start="893:48" pos:end="893:48">1</literal></expr>]</index><index pos:start="893:50" pos:end="893:52">[<expr pos:start="893:51" pos:end="893:51"><literal type="number" pos:start="893:51" pos:end="893:51">1</literal></expr>]</index></name><operator pos:start="893:53" pos:end="893:53">.</operator><name pos:start="893:54" pos:end="893:59">height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="895:9" pos:end="895:59"><expr pos:start="895:9" pos:end="895:58"><name pos:start="895:9" pos:end="895:21">lowpass_width</name>   <operator pos:start="895:25" pos:end="895:25">=</operator> <name pos:start="895:27" pos:end="895:41"><name pos:start="895:27" pos:end="895:27">s</name><operator pos:start="895:28" pos:end="895:29">-&gt;</operator><name pos:start="895:30" pos:end="895:34">plane</name><index pos:start="895:35" pos:end="895:41">[<expr pos:start="895:36" pos:end="895:40"><name pos:start="895:36" pos:end="895:40">plane</name></expr>]</index></name><operator pos:start="895:42" pos:end="895:42">.</operator><name pos:start="895:43" pos:end="895:52"><name pos:start="895:43" pos:end="895:46">band</name><index pos:start="895:47" pos:end="895:49">[<expr pos:start="895:48" pos:end="895:48"><literal type="number" pos:start="895:48" pos:end="895:48">1</literal></expr>]</index><index pos:start="895:50" pos:end="895:52">[<expr pos:start="895:51" pos:end="895:51"><literal type="number" pos:start="895:51" pos:end="895:51">1</literal></expr>]</index></name><operator pos:start="895:53" pos:end="895:53">.</operator><name pos:start="895:54" pos:end="895:58">width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="897:9" pos:end="897:60"><expr pos:start="897:9" pos:end="897:59"><name pos:start="897:9" pos:end="897:23">highpass_stride</name> <operator pos:start="897:25" pos:end="897:25">=</operator> <name pos:start="897:27" pos:end="897:41"><name pos:start="897:27" pos:end="897:27">s</name><operator pos:start="897:28" pos:end="897:29">-&gt;</operator><name pos:start="897:30" pos:end="897:34">plane</name><index pos:start="897:35" pos:end="897:41">[<expr pos:start="897:36" pos:end="897:40"><name pos:start="897:36" pos:end="897:40">plane</name></expr>]</index></name><operator pos:start="897:42" pos:end="897:42">.</operator><name pos:start="897:43" pos:end="897:52"><name pos:start="897:43" pos:end="897:46">band</name><index pos:start="897:47" pos:end="897:49">[<expr pos:start="897:48" pos:end="897:48"><literal type="number" pos:start="897:48" pos:end="897:48">1</literal></expr>]</index><index pos:start="897:50" pos:end="897:52">[<expr pos:start="897:51" pos:end="897:51"><literal type="number" pos:start="897:51" pos:end="897:51">1</literal></expr>]</index></name><operator pos:start="897:53" pos:end="897:53">.</operator><name pos:start="897:54" pos:end="897:59">stride</name></expr>;</expr_stmt>



        <if_stmt pos:start="901:9" pos:end="911:9"><if pos:start="901:9" pos:end="911:9">if <condition pos:start="901:12" pos:end="903:102">(<expr pos:start="901:13" pos:end="903:101"><name pos:start="901:13" pos:end="901:26">lowpass_height</name> <operator pos:start="901:28" pos:end="901:28">&gt;</operator> <name pos:start="901:30" pos:end="901:44"><name pos:start="901:30" pos:end="901:30">s</name><operator pos:start="901:31" pos:end="901:32">-&gt;</operator><name pos:start="901:33" pos:end="901:37">plane</name><index pos:start="901:38" pos:end="901:44">[<expr pos:start="901:39" pos:end="901:43"><name pos:start="901:39" pos:end="901:43">plane</name></expr>]</index></name><operator pos:start="901:45" pos:end="901:45">.</operator><name pos:start="901:46" pos:end="901:55"><name pos:start="901:46" pos:end="901:49">band</name><index pos:start="901:50" pos:end="901:52">[<expr pos:start="901:51" pos:end="901:51"><literal type="number" pos:start="901:51" pos:end="901:51">1</literal></expr>]</index><index pos:start="901:53" pos:end="901:55">[<expr pos:start="901:54" pos:end="901:54"><literal type="number" pos:start="901:54" pos:end="901:54">1</literal></expr>]</index></name><operator pos:start="901:56" pos:end="901:56">.</operator><name pos:start="901:57" pos:end="901:64">a_height</name> <operator pos:start="901:66" pos:end="901:67">||</operator> <name pos:start="901:69" pos:end="901:81">lowpass_width</name> <operator pos:start="901:83" pos:end="901:83">&gt;</operator> <name pos:start="901:85" pos:end="901:99"><name pos:start="901:85" pos:end="901:85">s</name><operator pos:start="901:86" pos:end="901:87">-&gt;</operator><name pos:start="901:88" pos:end="901:92">plane</name><index pos:start="901:93" pos:end="901:99">[<expr pos:start="901:94" pos:end="901:98"><name pos:start="901:94" pos:end="901:98">plane</name></expr>]</index></name><operator pos:start="901:100" pos:end="901:100">.</operator><name pos:start="901:101" pos:end="901:110"><name pos:start="901:101" pos:end="901:104">band</name><index pos:start="901:105" pos:end="901:107">[<expr pos:start="901:106" pos:end="901:106"><literal type="number" pos:start="901:106" pos:end="901:106">1</literal></expr>]</index><index pos:start="901:108" pos:end="901:110">[<expr pos:start="901:109" pos:end="901:109"><literal type="number" pos:start="901:109" pos:end="901:109">1</literal></expr>]</index></name><operator pos:start="901:111" pos:end="901:111">.</operator><name pos:start="901:112" pos:end="901:118">a_width</name> <operator pos:start="901:120" pos:end="901:121">||</operator>

            <operator pos:start="903:13" pos:end="903:13">!</operator><name pos:start="903:14" pos:end="903:28">highpass_stride</name> <operator pos:start="903:30" pos:end="903:31">||</operator> <name pos:start="903:33" pos:end="903:47"><name pos:start="903:33" pos:end="903:33">s</name><operator pos:start="903:34" pos:end="903:35">-&gt;</operator><name pos:start="903:36" pos:end="903:40">plane</name><index pos:start="903:41" pos:end="903:47">[<expr pos:start="903:42" pos:end="903:46"><name pos:start="903:42" pos:end="903:46">plane</name></expr>]</index></name><operator pos:start="903:48" pos:end="903:48">.</operator><name pos:start="903:49" pos:end="903:58"><name pos:start="903:49" pos:end="903:52">band</name><index pos:start="903:53" pos:end="903:55">[<expr pos:start="903:54" pos:end="903:54"><literal type="number" pos:start="903:54" pos:end="903:54">1</literal></expr>]</index><index pos:start="903:56" pos:end="903:58">[<expr pos:start="903:57" pos:end="903:57"><literal type="number" pos:start="903:57" pos:end="903:57">1</literal></expr>]</index></name><operator pos:start="903:59" pos:end="903:59">.</operator><name pos:start="903:60" pos:end="903:64">width</name> <operator pos:start="903:66" pos:end="903:66">&gt;</operator> <name pos:start="903:68" pos:end="903:82"><name pos:start="903:68" pos:end="903:68">s</name><operator pos:start="903:69" pos:end="903:70">-&gt;</operator><name pos:start="903:71" pos:end="903:75">plane</name><index pos:start="903:76" pos:end="903:82">[<expr pos:start="903:77" pos:end="903:81"><name pos:start="903:77" pos:end="903:81">plane</name></expr>]</index></name><operator pos:start="903:83" pos:end="903:83">.</operator><name pos:start="903:84" pos:end="903:93"><name pos:start="903:84" pos:end="903:87">band</name><index pos:start="903:88" pos:end="903:90">[<expr pos:start="903:89" pos:end="903:89"><literal type="number" pos:start="903:89" pos:end="903:89">1</literal></expr>]</index><index pos:start="903:91" pos:end="903:93">[<expr pos:start="903:92" pos:end="903:92"><literal type="number" pos:start="903:92" pos:end="903:92">1</literal></expr>]</index></name><operator pos:start="903:94" pos:end="903:94">.</operator><name pos:start="903:95" pos:end="903:101">a_width</name></expr>)</condition> <block pos:start="903:104" pos:end="911:9">{<block_content pos:start="905:13" pos:end="909:21">

            <expr_stmt pos:start="905:13" pos:end="905:70"><expr pos:start="905:13" pos:end="905:69"><call pos:start="905:13" pos:end="905:69"><name pos:start="905:13" pos:end="905:18">av_log</name><argument_list pos:start="905:19" pos:end="905:69">(<argument pos:start="905:20" pos:end="905:24"><expr pos:start="905:20" pos:end="905:24"><name pos:start="905:20" pos:end="905:24">avctx</name></expr></argument>, <argument pos:start="905:27" pos:end="905:38"><expr pos:start="905:27" pos:end="905:38"><name pos:start="905:27" pos:end="905:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="905:41" pos:end="905:68"><expr pos:start="905:41" pos:end="905:68"><literal type="string" pos:start="905:41" pos:end="905:68">"Invalid plane dimensions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="907:13" pos:end="907:34"><expr pos:start="907:13" pos:end="907:33"><name pos:start="907:13" pos:end="907:15">ret</name> <operator pos:start="907:17" pos:end="907:17">=</operator> <call pos:start="907:19" pos:end="907:33"><name pos:start="907:19" pos:end="907:25">AVERROR</name><argument_list pos:start="907:26" pos:end="907:33">(<argument pos:start="907:27" pos:end="907:32"><expr pos:start="907:27" pos:end="907:32"><name pos:start="907:27" pos:end="907:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="909:13" pos:end="909:21">goto <name pos:start="909:18" pos:end="909:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="915:9" pos:end="915:122"><expr pos:start="915:9" pos:end="915:121"><call pos:start="915:9" pos:end="915:121"><name pos:start="915:9" pos:end="915:14">av_log</name><argument_list pos:start="915:15" pos:end="915:121">(<argument pos:start="915:16" pos:end="915:20"><expr pos:start="915:16" pos:end="915:20"><name pos:start="915:16" pos:end="915:20">avctx</name></expr></argument>, <argument pos:start="915:23" pos:end="915:34"><expr pos:start="915:23" pos:end="915:34"><name pos:start="915:23" pos:end="915:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="915:37" pos:end="915:65"><expr pos:start="915:37" pos:end="915:65"><literal type="string" pos:start="915:37" pos:end="915:65">"Level 2 plane %i %i %i %i\n"</literal></expr></argument>, <argument pos:start="915:68" pos:end="915:72"><expr pos:start="915:68" pos:end="915:72"><name pos:start="915:68" pos:end="915:72">plane</name></expr></argument>, <argument pos:start="915:75" pos:end="915:88"><expr pos:start="915:75" pos:end="915:88"><name pos:start="915:75" pos:end="915:88">lowpass_height</name></expr></argument>, <argument pos:start="915:91" pos:end="915:103"><expr pos:start="915:91" pos:end="915:103"><name pos:start="915:91" pos:end="915:103">lowpass_width</name></expr></argument>, <argument pos:start="915:106" pos:end="915:120"><expr pos:start="915:106" pos:end="915:120"><name pos:start="915:106" pos:end="915:120">highpass_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="919:9" pos:end="919:44"><expr pos:start="919:9" pos:end="919:43"><name pos:start="919:9" pos:end="919:11">low</name>    <operator pos:start="919:16" pos:end="919:16">=</operator> <name pos:start="919:18" pos:end="919:32"><name pos:start="919:18" pos:end="919:18">s</name><operator pos:start="919:19" pos:end="919:20">-&gt;</operator><name pos:start="919:21" pos:end="919:25">plane</name><index pos:start="919:26" pos:end="919:32">[<expr pos:start="919:27" pos:end="919:31"><name pos:start="919:27" pos:end="919:31">plane</name></expr>]</index></name><operator pos:start="919:33" pos:end="919:33">.</operator><name pos:start="919:34" pos:end="919:43"><name pos:start="919:34" pos:end="919:40">subband</name><index pos:start="919:41" pos:end="919:43">[<expr pos:start="919:42" pos:end="919:42"><literal type="number" pos:start="919:42" pos:end="919:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="921:9" pos:end="921:44"><expr pos:start="921:9" pos:end="921:43"><name pos:start="921:9" pos:end="921:12">high</name>   <operator pos:start="921:16" pos:end="921:16">=</operator> <name pos:start="921:18" pos:end="921:32"><name pos:start="921:18" pos:end="921:18">s</name><operator pos:start="921:19" pos:end="921:20">-&gt;</operator><name pos:start="921:21" pos:end="921:25">plane</name><index pos:start="921:26" pos:end="921:32">[<expr pos:start="921:27" pos:end="921:31"><name pos:start="921:27" pos:end="921:31">plane</name></expr>]</index></name><operator pos:start="921:33" pos:end="921:33">.</operator><name pos:start="921:34" pos:end="921:43"><name pos:start="921:34" pos:end="921:40">subband</name><index pos:start="921:41" pos:end="921:43">[<expr pos:start="921:42" pos:end="921:42"><literal type="number" pos:start="921:42" pos:end="921:42">5</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="923:9" pos:end="923:40"><expr pos:start="923:9" pos:end="923:39"><name pos:start="923:9" pos:end="923:14">output</name> <operator pos:start="923:16" pos:end="923:16">=</operator> <name pos:start="923:18" pos:end="923:32"><name pos:start="923:18" pos:end="923:18">s</name><operator pos:start="923:19" pos:end="923:20">-&gt;</operator><name pos:start="923:21" pos:end="923:25">plane</name><index pos:start="923:26" pos:end="923:32">[<expr pos:start="923:27" pos:end="923:31"><name pos:start="923:27" pos:end="923:31">plane</name></expr>]</index></name><operator pos:start="923:33" pos:end="923:33">.</operator><name pos:start="923:34" pos:end="923:39"><name pos:start="923:34" pos:end="923:36">l_h</name><index pos:start="923:37" pos:end="923:39">[<expr pos:start="923:38" pos:end="923:38"><literal type="number" pos:start="923:38" pos:end="923:38">3</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="925:9" pos:end="935:9">for <control pos:start="925:13" pos:end="925:43">(<init pos:start="925:14" pos:end="925:19"><expr pos:start="925:14" pos:end="925:18"><name pos:start="925:14" pos:end="925:14">i</name> <operator pos:start="925:16" pos:end="925:16">=</operator> <literal type="number" pos:start="925:18" pos:end="925:18">0</literal></expr>;</init> <condition pos:start="925:21" pos:end="925:38"><expr pos:start="925:21" pos:end="925:37"><name pos:start="925:21" pos:end="925:21">i</name> <operator pos:start="925:23" pos:end="925:23">&lt;</operator> <name pos:start="925:25" pos:end="925:37">lowpass_width</name></expr>;</condition> <incr pos:start="925:40" pos:end="925:42"><expr pos:start="925:40" pos:end="925:42"><name pos:start="925:40" pos:end="925:40">i</name><operator pos:start="925:41" pos:end="925:42">++</operator></expr></incr>)</control> <block pos:start="925:45" pos:end="935:9">{<block_content pos:start="927:13" pos:end="933:21">

            <expr_stmt pos:start="927:13" pos:end="927:106"><expr pos:start="927:13" pos:end="927:105"><call pos:start="927:13" pos:end="927:105"><name pos:start="927:13" pos:end="927:23">vert_filter</name><argument_list pos:start="927:24" pos:end="927:105">(<argument pos:start="927:25" pos:end="927:30"><expr pos:start="927:25" pos:end="927:30"><name pos:start="927:25" pos:end="927:30">output</name></expr></argument>, <argument pos:start="927:33" pos:end="927:45"><expr pos:start="927:33" pos:end="927:45"><name pos:start="927:33" pos:end="927:45">lowpass_width</name></expr></argument>, <argument pos:start="927:48" pos:end="927:50"><expr pos:start="927:48" pos:end="927:50"><name pos:start="927:48" pos:end="927:50">low</name></expr></argument>, <argument pos:start="927:53" pos:end="927:65"><expr pos:start="927:53" pos:end="927:65"><name pos:start="927:53" pos:end="927:65">lowpass_width</name></expr></argument>, <argument pos:start="927:68" pos:end="927:71"><expr pos:start="927:68" pos:end="927:71"><name pos:start="927:68" pos:end="927:71">high</name></expr></argument>, <argument pos:start="927:74" pos:end="927:88"><expr pos:start="927:74" pos:end="927:88"><name pos:start="927:74" pos:end="927:88">highpass_stride</name></expr></argument>, <argument pos:start="927:91" pos:end="927:104"><expr pos:start="927:91" pos:end="927:104"><name pos:start="927:91" pos:end="927:104">lowpass_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="929:13" pos:end="929:18"><expr pos:start="929:13" pos:end="929:17"><name pos:start="929:13" pos:end="929:15">low</name><operator pos:start="929:16" pos:end="929:17">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="931:13" pos:end="931:19"><expr pos:start="931:13" pos:end="931:18"><name pos:start="931:13" pos:end="931:16">high</name><operator pos:start="931:17" pos:end="931:18">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="933:13" pos:end="933:21"><expr pos:start="933:13" pos:end="933:20"><name pos:start="933:13" pos:end="933:18">output</name><operator pos:start="933:19" pos:end="933:20">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="939:9" pos:end="939:44"><expr pos:start="939:9" pos:end="939:43"><name pos:start="939:9" pos:end="939:11">low</name>    <operator pos:start="939:16" pos:end="939:16">=</operator> <name pos:start="939:18" pos:end="939:32"><name pos:start="939:18" pos:end="939:18">s</name><operator pos:start="939:19" pos:end="939:20">-&gt;</operator><name pos:start="939:21" pos:end="939:25">plane</name><index pos:start="939:26" pos:end="939:32">[<expr pos:start="939:27" pos:end="939:31"><name pos:start="939:27" pos:end="939:31">plane</name></expr>]</index></name><operator pos:start="939:33" pos:end="939:33">.</operator><name pos:start="939:34" pos:end="939:43"><name pos:start="939:34" pos:end="939:40">subband</name><index pos:start="939:41" pos:end="939:43">[<expr pos:start="939:42" pos:end="939:42"><literal type="number" pos:start="939:42" pos:end="939:42">4</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="941:9" pos:end="941:44"><expr pos:start="941:9" pos:end="941:43"><name pos:start="941:9" pos:end="941:12">high</name>   <operator pos:start="941:16" pos:end="941:16">=</operator> <name pos:start="941:18" pos:end="941:32"><name pos:start="941:18" pos:end="941:18">s</name><operator pos:start="941:19" pos:end="941:20">-&gt;</operator><name pos:start="941:21" pos:end="941:25">plane</name><index pos:start="941:26" pos:end="941:32">[<expr pos:start="941:27" pos:end="941:31"><name pos:start="941:27" pos:end="941:31">plane</name></expr>]</index></name><operator pos:start="941:33" pos:end="941:33">.</operator><name pos:start="941:34" pos:end="941:43"><name pos:start="941:34" pos:end="941:40">subband</name><index pos:start="941:41" pos:end="941:43">[<expr pos:start="941:42" pos:end="941:42"><literal type="number" pos:start="941:42" pos:end="941:42">6</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="943:9" pos:end="943:40"><expr pos:start="943:9" pos:end="943:39"><name pos:start="943:9" pos:end="943:14">output</name> <operator pos:start="943:16" pos:end="943:16">=</operator> <name pos:start="943:18" pos:end="943:32"><name pos:start="943:18" pos:end="943:18">s</name><operator pos:start="943:19" pos:end="943:20">-&gt;</operator><name pos:start="943:21" pos:end="943:25">plane</name><index pos:start="943:26" pos:end="943:32">[<expr pos:start="943:27" pos:end="943:31"><name pos:start="943:27" pos:end="943:31">plane</name></expr>]</index></name><operator pos:start="943:33" pos:end="943:33">.</operator><name pos:start="943:34" pos:end="943:39"><name pos:start="943:34" pos:end="943:36">l_h</name><index pos:start="943:37" pos:end="943:39">[<expr pos:start="943:38" pos:end="943:38"><literal type="number" pos:start="943:38" pos:end="943:38">4</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="945:9" pos:end="955:9">for <control pos:start="945:13" pos:end="945:43">(<init pos:start="945:14" pos:end="945:19"><expr pos:start="945:14" pos:end="945:18"><name pos:start="945:14" pos:end="945:14">i</name> <operator pos:start="945:16" pos:end="945:16">=</operator> <literal type="number" pos:start="945:18" pos:end="945:18">0</literal></expr>;</init> <condition pos:start="945:21" pos:end="945:38"><expr pos:start="945:21" pos:end="945:37"><name pos:start="945:21" pos:end="945:21">i</name> <operator pos:start="945:23" pos:end="945:23">&lt;</operator> <name pos:start="945:25" pos:end="945:37">lowpass_width</name></expr>;</condition> <incr pos:start="945:40" pos:end="945:42"><expr pos:start="945:40" pos:end="945:42"><name pos:start="945:40" pos:end="945:40">i</name><operator pos:start="945:41" pos:end="945:42">++</operator></expr></incr>)</control> <block pos:start="945:45" pos:end="955:9">{<block_content pos:start="947:13" pos:end="953:21">

            <expr_stmt pos:start="947:13" pos:end="947:108"><expr pos:start="947:13" pos:end="947:107"><call pos:start="947:13" pos:end="947:107"><name pos:start="947:13" pos:end="947:23">vert_filter</name><argument_list pos:start="947:24" pos:end="947:107">(<argument pos:start="947:25" pos:end="947:30"><expr pos:start="947:25" pos:end="947:30"><name pos:start="947:25" pos:end="947:30">output</name></expr></argument>, <argument pos:start="947:33" pos:end="947:45"><expr pos:start="947:33" pos:end="947:45"><name pos:start="947:33" pos:end="947:45">lowpass_width</name></expr></argument>, <argument pos:start="947:48" pos:end="947:50"><expr pos:start="947:48" pos:end="947:50"><name pos:start="947:48" pos:end="947:50">low</name></expr></argument>, <argument pos:start="947:53" pos:end="947:67"><expr pos:start="947:53" pos:end="947:67"><name pos:start="947:53" pos:end="947:67">highpass_stride</name></expr></argument>, <argument pos:start="947:70" pos:end="947:73"><expr pos:start="947:70" pos:end="947:73"><name pos:start="947:70" pos:end="947:73">high</name></expr></argument>, <argument pos:start="947:76" pos:end="947:90"><expr pos:start="947:76" pos:end="947:90"><name pos:start="947:76" pos:end="947:90">highpass_stride</name></expr></argument>, <argument pos:start="947:93" pos:end="947:106"><expr pos:start="947:93" pos:end="947:106"><name pos:start="947:93" pos:end="947:106">lowpass_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="949:13" pos:end="949:18"><expr pos:start="949:13" pos:end="949:17"><name pos:start="949:13" pos:end="949:15">low</name><operator pos:start="949:16" pos:end="949:17">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="951:13" pos:end="951:19"><expr pos:start="951:13" pos:end="951:18"><name pos:start="951:13" pos:end="951:16">high</name><operator pos:start="951:17" pos:end="951:18">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="953:13" pos:end="953:21"><expr pos:start="953:13" pos:end="953:20"><name pos:start="953:13" pos:end="953:18">output</name><operator pos:start="953:19" pos:end="953:20">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="959:9" pos:end="959:40"><expr pos:start="959:9" pos:end="959:39"><name pos:start="959:9" pos:end="959:11">low</name>    <operator pos:start="959:16" pos:end="959:16">=</operator> <name pos:start="959:18" pos:end="959:32"><name pos:start="959:18" pos:end="959:18">s</name><operator pos:start="959:19" pos:end="959:20">-&gt;</operator><name pos:start="959:21" pos:end="959:25">plane</name><index pos:start="959:26" pos:end="959:32">[<expr pos:start="959:27" pos:end="959:31"><name pos:start="959:27" pos:end="959:31">plane</name></expr>]</index></name><operator pos:start="959:33" pos:end="959:33">.</operator><name pos:start="959:34" pos:end="959:39"><name pos:start="959:34" pos:end="959:36">l_h</name><index pos:start="959:37" pos:end="959:39">[<expr pos:start="959:38" pos:end="959:38"><literal type="number" pos:start="959:38" pos:end="959:38">3</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="961:9" pos:end="961:40"><expr pos:start="961:9" pos:end="961:39"><name pos:start="961:9" pos:end="961:12">high</name>   <operator pos:start="961:16" pos:end="961:16">=</operator> <name pos:start="961:18" pos:end="961:32"><name pos:start="961:18" pos:end="961:18">s</name><operator pos:start="961:19" pos:end="961:20">-&gt;</operator><name pos:start="961:21" pos:end="961:25">plane</name><index pos:start="961:26" pos:end="961:32">[<expr pos:start="961:27" pos:end="961:31"><name pos:start="961:27" pos:end="961:31">plane</name></expr>]</index></name><operator pos:start="961:33" pos:end="961:33">.</operator><name pos:start="961:34" pos:end="961:39"><name pos:start="961:34" pos:end="961:36">l_h</name><index pos:start="961:37" pos:end="961:39">[<expr pos:start="961:38" pos:end="961:38"><literal type="number" pos:start="961:38" pos:end="961:38">4</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="963:9" pos:end="963:44"><expr pos:start="963:9" pos:end="963:43"><name pos:start="963:9" pos:end="963:14">output</name> <operator pos:start="963:16" pos:end="963:16">=</operator> <name pos:start="963:18" pos:end="963:32"><name pos:start="963:18" pos:end="963:18">s</name><operator pos:start="963:19" pos:end="963:20">-&gt;</operator><name pos:start="963:21" pos:end="963:25">plane</name><index pos:start="963:26" pos:end="963:32">[<expr pos:start="963:27" pos:end="963:31"><name pos:start="963:27" pos:end="963:31">plane</name></expr>]</index></name><operator pos:start="963:33" pos:end="963:33">.</operator><name pos:start="963:34" pos:end="963:43"><name pos:start="963:34" pos:end="963:40">subband</name><index pos:start="963:41" pos:end="963:43">[<expr pos:start="963:42" pos:end="963:42"><literal type="number" pos:start="963:42" pos:end="963:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="965:9" pos:end="975:9">for <control pos:start="965:13" pos:end="965:48">(<init pos:start="965:14" pos:end="965:19"><expr pos:start="965:14" pos:end="965:18"><name pos:start="965:14" pos:end="965:14">i</name> <operator pos:start="965:16" pos:end="965:16">=</operator> <literal type="number" pos:start="965:18" pos:end="965:18">0</literal></expr>;</init> <condition pos:start="965:21" pos:end="965:43"><expr pos:start="965:21" pos:end="965:42"><name pos:start="965:21" pos:end="965:21">i</name> <operator pos:start="965:23" pos:end="965:23">&lt;</operator> <name pos:start="965:25" pos:end="965:38">lowpass_height</name> <operator pos:start="965:40" pos:end="965:40">*</operator> <literal type="number" pos:start="965:42" pos:end="965:42">2</literal></expr>;</condition> <incr pos:start="965:45" pos:end="965:47"><expr pos:start="965:45" pos:end="965:47"><name pos:start="965:45" pos:end="965:45">i</name><operator pos:start="965:46" pos:end="965:47">++</operator></expr></incr>)</control> <block pos:start="965:50" pos:end="975:9">{<block_content pos:start="967:13" pos:end="973:40">

            <expr_stmt pos:start="967:13" pos:end="967:59"><expr pos:start="967:13" pos:end="967:58"><call pos:start="967:13" pos:end="967:58"><name pos:start="967:13" pos:end="967:24">horiz_filter</name><argument_list pos:start="967:25" pos:end="967:58">(<argument pos:start="967:26" pos:end="967:31"><expr pos:start="967:26" pos:end="967:31"><name pos:start="967:26" pos:end="967:31">output</name></expr></argument>, <argument pos:start="967:34" pos:end="967:36"><expr pos:start="967:34" pos:end="967:36"><name pos:start="967:34" pos:end="967:36">low</name></expr></argument>, <argument pos:start="967:39" pos:end="967:42"><expr pos:start="967:39" pos:end="967:42"><name pos:start="967:39" pos:end="967:42">high</name></expr></argument>, <argument pos:start="967:45" pos:end="967:57"><expr pos:start="967:45" pos:end="967:57"><name pos:start="967:45" pos:end="967:57">lowpass_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="969:13" pos:end="969:36"><expr pos:start="969:13" pos:end="969:35"><name pos:start="969:13" pos:end="969:15">low</name>    <operator pos:start="969:20" pos:end="969:21">+=</operator> <name pos:start="969:23" pos:end="969:35">lowpass_width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="971:13" pos:end="971:36"><expr pos:start="971:13" pos:end="971:35"><name pos:start="971:13" pos:end="971:16">high</name>   <operator pos:start="971:20" pos:end="971:21">+=</operator> <name pos:start="971:23" pos:end="971:35">lowpass_width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="973:13" pos:end="973:40"><expr pos:start="973:13" pos:end="973:39"><name pos:start="973:13" pos:end="973:18">output</name> <operator pos:start="973:20" pos:end="973:21">+=</operator> <name pos:start="973:23" pos:end="973:35">lowpass_width</name> <operator pos:start="973:37" pos:end="973:37">*</operator> <literal type="number" pos:start="973:39" pos:end="973:39">2</literal></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="979:9" pos:end="979:44"><expr pos:start="979:9" pos:end="979:43"><name pos:start="979:9" pos:end="979:14">output</name> <operator pos:start="979:16" pos:end="979:16">=</operator> <name pos:start="979:18" pos:end="979:32"><name pos:start="979:18" pos:end="979:18">s</name><operator pos:start="979:19" pos:end="979:20">-&gt;</operator><name pos:start="979:21" pos:end="979:25">plane</name><index pos:start="979:26" pos:end="979:32">[<expr pos:start="979:27" pos:end="979:31"><name pos:start="979:27" pos:end="979:31">plane</name></expr>]</index></name><operator pos:start="979:33" pos:end="979:33">.</operator><name pos:start="979:34" pos:end="979:43"><name pos:start="979:34" pos:end="979:40">subband</name><index pos:start="979:41" pos:end="979:43">[<expr pos:start="979:42" pos:end="979:42"><literal type="number" pos:start="979:42" pos:end="979:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="981:9" pos:end="991:9">for <control pos:start="981:13" pos:end="981:48">(<init pos:start="981:14" pos:end="981:19"><expr pos:start="981:14" pos:end="981:18"><name pos:start="981:14" pos:end="981:14">i</name> <operator pos:start="981:16" pos:end="981:16">=</operator> <literal type="number" pos:start="981:18" pos:end="981:18">0</literal></expr>;</init> <condition pos:start="981:21" pos:end="981:43"><expr pos:start="981:21" pos:end="981:42"><name pos:start="981:21" pos:end="981:21">i</name> <operator pos:start="981:23" pos:end="981:23">&lt;</operator> <name pos:start="981:25" pos:end="981:38">lowpass_height</name> <operator pos:start="981:40" pos:end="981:40">*</operator> <literal type="number" pos:start="981:42" pos:end="981:42">2</literal></expr>;</condition> <incr pos:start="981:45" pos:end="981:47"><expr pos:start="981:45" pos:end="981:47"><name pos:start="981:45" pos:end="981:45">i</name><operator pos:start="981:46" pos:end="981:47">++</operator></expr></incr>)</control> <block pos:start="981:50" pos:end="991:9">{<block_content pos:start="983:13" pos:end="989:40">

            <for pos:start="983:13" pos:end="985:31">for <control pos:start="983:17" pos:end="983:51">(<init pos:start="983:18" pos:end="983:23"><expr pos:start="983:18" pos:end="983:22"><name pos:start="983:18" pos:end="983:18">j</name> <operator pos:start="983:20" pos:end="983:20">=</operator> <literal type="number" pos:start="983:22" pos:end="983:22">0</literal></expr>;</init> <condition pos:start="983:25" pos:end="983:46"><expr pos:start="983:25" pos:end="983:45"><name pos:start="983:25" pos:end="983:25">j</name> <operator pos:start="983:27" pos:end="983:27">&lt;</operator> <name pos:start="983:29" pos:end="983:41">lowpass_width</name> <operator pos:start="983:43" pos:end="983:43">*</operator> <literal type="number" pos:start="983:45" pos:end="983:45">2</literal></expr>;</condition> <incr pos:start="983:48" pos:end="983:50"><expr pos:start="983:48" pos:end="983:50"><name pos:start="983:48" pos:end="983:48">j</name><operator pos:start="983:49" pos:end="983:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="985:17" pos:end="985:31"><block_content pos:start="985:17" pos:end="985:31">

                <expr_stmt pos:start="985:17" pos:end="985:31"><expr pos:start="985:17" pos:end="985:30"><name pos:start="985:17" pos:end="985:25"><name pos:start="985:17" pos:end="985:22">output</name><index pos:start="985:23" pos:end="985:25">[<expr pos:start="985:24" pos:end="985:24"><name pos:start="985:24" pos:end="985:24">j</name></expr>]</index></name> <operator pos:start="985:27" pos:end="985:28">*=</operator> <literal type="number" pos:start="985:30" pos:end="985:30">4</literal></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="989:13" pos:end="989:40"><expr pos:start="989:13" pos:end="989:39"><name pos:start="989:13" pos:end="989:18">output</name> <operator pos:start="989:20" pos:end="989:21">+=</operator> <name pos:start="989:23" pos:end="989:35">lowpass_width</name> <operator pos:start="989:37" pos:end="989:37">*</operator> <literal type="number" pos:start="989:39" pos:end="989:39">2</literal></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="995:9" pos:end="995:21">/* level 3 */</comment>

        <expr_stmt pos:start="997:9" pos:end="997:60"><expr pos:start="997:9" pos:end="997:59"><name pos:start="997:9" pos:end="997:22">lowpass_height</name>  <operator pos:start="997:25" pos:end="997:25">=</operator> <name pos:start="997:27" pos:end="997:41"><name pos:start="997:27" pos:end="997:27">s</name><operator pos:start="997:28" pos:end="997:29">-&gt;</operator><name pos:start="997:30" pos:end="997:34">plane</name><index pos:start="997:35" pos:end="997:41">[<expr pos:start="997:36" pos:end="997:40"><name pos:start="997:36" pos:end="997:40">plane</name></expr>]</index></name><operator pos:start="997:42" pos:end="997:42">.</operator><name pos:start="997:43" pos:end="997:52"><name pos:start="997:43" pos:end="997:46">band</name><index pos:start="997:47" pos:end="997:49">[<expr pos:start="997:48" pos:end="997:48"><literal type="number" pos:start="997:48" pos:end="997:48">2</literal></expr>]</index><index pos:start="997:50" pos:end="997:52">[<expr pos:start="997:51" pos:end="997:51"><literal type="number" pos:start="997:51" pos:end="997:51">1</literal></expr>]</index></name><operator pos:start="997:53" pos:end="997:53">.</operator><name pos:start="997:54" pos:end="997:59">height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="999:9" pos:end="999:59"><expr pos:start="999:9" pos:end="999:58"><name pos:start="999:9" pos:end="999:21">lowpass_width</name>   <operator pos:start="999:25" pos:end="999:25">=</operator> <name pos:start="999:27" pos:end="999:41"><name pos:start="999:27" pos:end="999:27">s</name><operator pos:start="999:28" pos:end="999:29">-&gt;</operator><name pos:start="999:30" pos:end="999:34">plane</name><index pos:start="999:35" pos:end="999:41">[<expr pos:start="999:36" pos:end="999:40"><name pos:start="999:36" pos:end="999:40">plane</name></expr>]</index></name><operator pos:start="999:42" pos:end="999:42">.</operator><name pos:start="999:43" pos:end="999:52"><name pos:start="999:43" pos:end="999:46">band</name><index pos:start="999:47" pos:end="999:49">[<expr pos:start="999:48" pos:end="999:48"><literal type="number" pos:start="999:48" pos:end="999:48">2</literal></expr>]</index><index pos:start="999:50" pos:end="999:52">[<expr pos:start="999:51" pos:end="999:51"><literal type="number" pos:start="999:51" pos:end="999:51">1</literal></expr>]</index></name><operator pos:start="999:53" pos:end="999:53">.</operator><name pos:start="999:54" pos:end="999:58">width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="1001:9" pos:end="1001:60"><expr pos:start="1001:9" pos:end="1001:59"><name pos:start="1001:9" pos:end="1001:23">highpass_stride</name> <operator pos:start="1001:25" pos:end="1001:25">=</operator> <name pos:start="1001:27" pos:end="1001:41"><name pos:start="1001:27" pos:end="1001:27">s</name><operator pos:start="1001:28" pos:end="1001:29">-&gt;</operator><name pos:start="1001:30" pos:end="1001:34">plane</name><index pos:start="1001:35" pos:end="1001:41">[<expr pos:start="1001:36" pos:end="1001:40"><name pos:start="1001:36" pos:end="1001:40">plane</name></expr>]</index></name><operator pos:start="1001:42" pos:end="1001:42">.</operator><name pos:start="1001:43" pos:end="1001:52"><name pos:start="1001:43" pos:end="1001:46">band</name><index pos:start="1001:47" pos:end="1001:49">[<expr pos:start="1001:48" pos:end="1001:48"><literal type="number" pos:start="1001:48" pos:end="1001:48">2</literal></expr>]</index><index pos:start="1001:50" pos:end="1001:52">[<expr pos:start="1001:51" pos:end="1001:51"><literal type="number" pos:start="1001:51" pos:end="1001:51">1</literal></expr>]</index></name><operator pos:start="1001:53" pos:end="1001:53">.</operator><name pos:start="1001:54" pos:end="1001:59">stride</name></expr>;</expr_stmt>



        <if_stmt pos:start="1005:9" pos:end="1015:9"><if pos:start="1005:9" pos:end="1015:9">if <condition pos:start="1005:12" pos:end="1007:102">(<expr pos:start="1005:13" pos:end="1007:101"><name pos:start="1005:13" pos:end="1005:26">lowpass_height</name> <operator pos:start="1005:28" pos:end="1005:28">&gt;</operator> <name pos:start="1005:30" pos:end="1005:44"><name pos:start="1005:30" pos:end="1005:30">s</name><operator pos:start="1005:31" pos:end="1005:32">-&gt;</operator><name pos:start="1005:33" pos:end="1005:37">plane</name><index pos:start="1005:38" pos:end="1005:44">[<expr pos:start="1005:39" pos:end="1005:43"><name pos:start="1005:39" pos:end="1005:43">plane</name></expr>]</index></name><operator pos:start="1005:45" pos:end="1005:45">.</operator><name pos:start="1005:46" pos:end="1005:55"><name pos:start="1005:46" pos:end="1005:49">band</name><index pos:start="1005:50" pos:end="1005:52">[<expr pos:start="1005:51" pos:end="1005:51"><literal type="number" pos:start="1005:51" pos:end="1005:51">2</literal></expr>]</index><index pos:start="1005:53" pos:end="1005:55">[<expr pos:start="1005:54" pos:end="1005:54"><literal type="number" pos:start="1005:54" pos:end="1005:54">1</literal></expr>]</index></name><operator pos:start="1005:56" pos:end="1005:56">.</operator><name pos:start="1005:57" pos:end="1005:64">a_height</name> <operator pos:start="1005:66" pos:end="1005:67">||</operator> <name pos:start="1005:69" pos:end="1005:81">lowpass_width</name> <operator pos:start="1005:83" pos:end="1005:83">&gt;</operator> <name pos:start="1005:85" pos:end="1005:99"><name pos:start="1005:85" pos:end="1005:85">s</name><operator pos:start="1005:86" pos:end="1005:87">-&gt;</operator><name pos:start="1005:88" pos:end="1005:92">plane</name><index pos:start="1005:93" pos:end="1005:99">[<expr pos:start="1005:94" pos:end="1005:98"><name pos:start="1005:94" pos:end="1005:98">plane</name></expr>]</index></name><operator pos:start="1005:100" pos:end="1005:100">.</operator><name pos:start="1005:101" pos:end="1005:110"><name pos:start="1005:101" pos:end="1005:104">band</name><index pos:start="1005:105" pos:end="1005:107">[<expr pos:start="1005:106" pos:end="1005:106"><literal type="number" pos:start="1005:106" pos:end="1005:106">2</literal></expr>]</index><index pos:start="1005:108" pos:end="1005:110">[<expr pos:start="1005:109" pos:end="1005:109"><literal type="number" pos:start="1005:109" pos:end="1005:109">1</literal></expr>]</index></name><operator pos:start="1005:111" pos:end="1005:111">.</operator><name pos:start="1005:112" pos:end="1005:118">a_width</name> <operator pos:start="1005:120" pos:end="1005:121">||</operator>

            <operator pos:start="1007:13" pos:end="1007:13">!</operator><name pos:start="1007:14" pos:end="1007:28">highpass_stride</name> <operator pos:start="1007:30" pos:end="1007:31">||</operator> <name pos:start="1007:33" pos:end="1007:47"><name pos:start="1007:33" pos:end="1007:33">s</name><operator pos:start="1007:34" pos:end="1007:35">-&gt;</operator><name pos:start="1007:36" pos:end="1007:40">plane</name><index pos:start="1007:41" pos:end="1007:47">[<expr pos:start="1007:42" pos:end="1007:46"><name pos:start="1007:42" pos:end="1007:46">plane</name></expr>]</index></name><operator pos:start="1007:48" pos:end="1007:48">.</operator><name pos:start="1007:49" pos:end="1007:58"><name pos:start="1007:49" pos:end="1007:52">band</name><index pos:start="1007:53" pos:end="1007:55">[<expr pos:start="1007:54" pos:end="1007:54"><literal type="number" pos:start="1007:54" pos:end="1007:54">2</literal></expr>]</index><index pos:start="1007:56" pos:end="1007:58">[<expr pos:start="1007:57" pos:end="1007:57"><literal type="number" pos:start="1007:57" pos:end="1007:57">1</literal></expr>]</index></name><operator pos:start="1007:59" pos:end="1007:59">.</operator><name pos:start="1007:60" pos:end="1007:64">width</name> <operator pos:start="1007:66" pos:end="1007:66">&gt;</operator> <name pos:start="1007:68" pos:end="1007:82"><name pos:start="1007:68" pos:end="1007:68">s</name><operator pos:start="1007:69" pos:end="1007:70">-&gt;</operator><name pos:start="1007:71" pos:end="1007:75">plane</name><index pos:start="1007:76" pos:end="1007:82">[<expr pos:start="1007:77" pos:end="1007:81"><name pos:start="1007:77" pos:end="1007:81">plane</name></expr>]</index></name><operator pos:start="1007:83" pos:end="1007:83">.</operator><name pos:start="1007:84" pos:end="1007:93"><name pos:start="1007:84" pos:end="1007:87">band</name><index pos:start="1007:88" pos:end="1007:90">[<expr pos:start="1007:89" pos:end="1007:89"><literal type="number" pos:start="1007:89" pos:end="1007:89">2</literal></expr>]</index><index pos:start="1007:91" pos:end="1007:93">[<expr pos:start="1007:92" pos:end="1007:92"><literal type="number" pos:start="1007:92" pos:end="1007:92">1</literal></expr>]</index></name><operator pos:start="1007:94" pos:end="1007:94">.</operator><name pos:start="1007:95" pos:end="1007:101">a_width</name></expr>)</condition> <block pos:start="1007:104" pos:end="1015:9">{<block_content pos:start="1009:13" pos:end="1013:21">

            <expr_stmt pos:start="1009:13" pos:end="1009:70"><expr pos:start="1009:13" pos:end="1009:69"><call pos:start="1009:13" pos:end="1009:69"><name pos:start="1009:13" pos:end="1009:18">av_log</name><argument_list pos:start="1009:19" pos:end="1009:69">(<argument pos:start="1009:20" pos:end="1009:24"><expr pos:start="1009:20" pos:end="1009:24"><name pos:start="1009:20" pos:end="1009:24">avctx</name></expr></argument>, <argument pos:start="1009:27" pos:end="1009:38"><expr pos:start="1009:27" pos:end="1009:38"><name pos:start="1009:27" pos:end="1009:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="1009:41" pos:end="1009:68"><expr pos:start="1009:41" pos:end="1009:68"><literal type="string" pos:start="1009:41" pos:end="1009:68">"Invalid plane dimensions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1011:13" pos:end="1011:34"><expr pos:start="1011:13" pos:end="1011:33"><name pos:start="1011:13" pos:end="1011:15">ret</name> <operator pos:start="1011:17" pos:end="1011:17">=</operator> <call pos:start="1011:19" pos:end="1011:33"><name pos:start="1011:19" pos:end="1011:25">AVERROR</name><argument_list pos:start="1011:26" pos:end="1011:33">(<argument pos:start="1011:27" pos:end="1011:32"><expr pos:start="1011:27" pos:end="1011:32"><name pos:start="1011:27" pos:end="1011:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1013:13" pos:end="1013:21">goto <name pos:start="1013:18" pos:end="1013:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="1019:9" pos:end="1019:122"><expr pos:start="1019:9" pos:end="1019:121"><call pos:start="1019:9" pos:end="1019:121"><name pos:start="1019:9" pos:end="1019:14">av_log</name><argument_list pos:start="1019:15" pos:end="1019:121">(<argument pos:start="1019:16" pos:end="1019:20"><expr pos:start="1019:16" pos:end="1019:20"><name pos:start="1019:16" pos:end="1019:20">avctx</name></expr></argument>, <argument pos:start="1019:23" pos:end="1019:34"><expr pos:start="1019:23" pos:end="1019:34"><name pos:start="1019:23" pos:end="1019:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="1019:37" pos:end="1019:65"><expr pos:start="1019:37" pos:end="1019:65"><literal type="string" pos:start="1019:37" pos:end="1019:65">"Level 3 plane %i %i %i %i\n"</literal></expr></argument>, <argument pos:start="1019:68" pos:end="1019:72"><expr pos:start="1019:68" pos:end="1019:72"><name pos:start="1019:68" pos:end="1019:72">plane</name></expr></argument>, <argument pos:start="1019:75" pos:end="1019:88"><expr pos:start="1019:75" pos:end="1019:88"><name pos:start="1019:75" pos:end="1019:88">lowpass_height</name></expr></argument>, <argument pos:start="1019:91" pos:end="1019:103"><expr pos:start="1019:91" pos:end="1019:103"><name pos:start="1019:91" pos:end="1019:103">lowpass_width</name></expr></argument>, <argument pos:start="1019:106" pos:end="1019:120"><expr pos:start="1019:106" pos:end="1019:120"><name pos:start="1019:106" pos:end="1019:120">highpass_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="1023:9" pos:end="1023:44"><expr pos:start="1023:9" pos:end="1023:43"><name pos:start="1023:9" pos:end="1023:11">low</name>    <operator pos:start="1023:16" pos:end="1023:16">=</operator> <name pos:start="1023:18" pos:end="1023:32"><name pos:start="1023:18" pos:end="1023:18">s</name><operator pos:start="1023:19" pos:end="1023:20">-&gt;</operator><name pos:start="1023:21" pos:end="1023:25">plane</name><index pos:start="1023:26" pos:end="1023:32">[<expr pos:start="1023:27" pos:end="1023:31"><name pos:start="1023:27" pos:end="1023:31">plane</name></expr>]</index></name><operator pos:start="1023:33" pos:end="1023:33">.</operator><name pos:start="1023:34" pos:end="1023:43"><name pos:start="1023:34" pos:end="1023:40">subband</name><index pos:start="1023:41" pos:end="1023:43">[<expr pos:start="1023:42" pos:end="1023:42"><literal type="number" pos:start="1023:42" pos:end="1023:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1025:9" pos:end="1025:44"><expr pos:start="1025:9" pos:end="1025:43"><name pos:start="1025:9" pos:end="1025:12">high</name>   <operator pos:start="1025:16" pos:end="1025:16">=</operator> <name pos:start="1025:18" pos:end="1025:32"><name pos:start="1025:18" pos:end="1025:18">s</name><operator pos:start="1025:19" pos:end="1025:20">-&gt;</operator><name pos:start="1025:21" pos:end="1025:25">plane</name><index pos:start="1025:26" pos:end="1025:32">[<expr pos:start="1025:27" pos:end="1025:31"><name pos:start="1025:27" pos:end="1025:31">plane</name></expr>]</index></name><operator pos:start="1025:33" pos:end="1025:33">.</operator><name pos:start="1025:34" pos:end="1025:43"><name pos:start="1025:34" pos:end="1025:40">subband</name><index pos:start="1025:41" pos:end="1025:43">[<expr pos:start="1025:42" pos:end="1025:42"><literal type="number" pos:start="1025:42" pos:end="1025:42">8</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1027:9" pos:end="1027:40"><expr pos:start="1027:9" pos:end="1027:39"><name pos:start="1027:9" pos:end="1027:14">output</name> <operator pos:start="1027:16" pos:end="1027:16">=</operator> <name pos:start="1027:18" pos:end="1027:32"><name pos:start="1027:18" pos:end="1027:18">s</name><operator pos:start="1027:19" pos:end="1027:20">-&gt;</operator><name pos:start="1027:21" pos:end="1027:25">plane</name><index pos:start="1027:26" pos:end="1027:32">[<expr pos:start="1027:27" pos:end="1027:31"><name pos:start="1027:27" pos:end="1027:31">plane</name></expr>]</index></name><operator pos:start="1027:33" pos:end="1027:33">.</operator><name pos:start="1027:34" pos:end="1027:39"><name pos:start="1027:34" pos:end="1027:36">l_h</name><index pos:start="1027:37" pos:end="1027:39">[<expr pos:start="1027:38" pos:end="1027:38"><literal type="number" pos:start="1027:38" pos:end="1027:38">6</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="1029:9" pos:end="1039:9">for <control pos:start="1029:13" pos:end="1029:43">(<init pos:start="1029:14" pos:end="1029:19"><expr pos:start="1029:14" pos:end="1029:18"><name pos:start="1029:14" pos:end="1029:14">i</name> <operator pos:start="1029:16" pos:end="1029:16">=</operator> <literal type="number" pos:start="1029:18" pos:end="1029:18">0</literal></expr>;</init> <condition pos:start="1029:21" pos:end="1029:38"><expr pos:start="1029:21" pos:end="1029:37"><name pos:start="1029:21" pos:end="1029:21">i</name> <operator pos:start="1029:23" pos:end="1029:23">&lt;</operator> <name pos:start="1029:25" pos:end="1029:37">lowpass_width</name></expr>;</condition> <incr pos:start="1029:40" pos:end="1029:42"><expr pos:start="1029:40" pos:end="1029:42"><name pos:start="1029:40" pos:end="1029:40">i</name><operator pos:start="1029:41" pos:end="1029:42">++</operator></expr></incr>)</control> <block pos:start="1029:45" pos:end="1039:9">{<block_content pos:start="1031:13" pos:end="1037:21">

            <expr_stmt pos:start="1031:13" pos:end="1031:106"><expr pos:start="1031:13" pos:end="1031:105"><call pos:start="1031:13" pos:end="1031:105"><name pos:start="1031:13" pos:end="1031:23">vert_filter</name><argument_list pos:start="1031:24" pos:end="1031:105">(<argument pos:start="1031:25" pos:end="1031:30"><expr pos:start="1031:25" pos:end="1031:30"><name pos:start="1031:25" pos:end="1031:30">output</name></expr></argument>, <argument pos:start="1031:33" pos:end="1031:45"><expr pos:start="1031:33" pos:end="1031:45"><name pos:start="1031:33" pos:end="1031:45">lowpass_width</name></expr></argument>, <argument pos:start="1031:48" pos:end="1031:50"><expr pos:start="1031:48" pos:end="1031:50"><name pos:start="1031:48" pos:end="1031:50">low</name></expr></argument>, <argument pos:start="1031:53" pos:end="1031:65"><expr pos:start="1031:53" pos:end="1031:65"><name pos:start="1031:53" pos:end="1031:65">lowpass_width</name></expr></argument>, <argument pos:start="1031:68" pos:end="1031:71"><expr pos:start="1031:68" pos:end="1031:71"><name pos:start="1031:68" pos:end="1031:71">high</name></expr></argument>, <argument pos:start="1031:74" pos:end="1031:88"><expr pos:start="1031:74" pos:end="1031:88"><name pos:start="1031:74" pos:end="1031:88">highpass_stride</name></expr></argument>, <argument pos:start="1031:91" pos:end="1031:104"><expr pos:start="1031:91" pos:end="1031:104"><name pos:start="1031:91" pos:end="1031:104">lowpass_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1033:13" pos:end="1033:18"><expr pos:start="1033:13" pos:end="1033:17"><name pos:start="1033:13" pos:end="1033:15">low</name><operator pos:start="1033:16" pos:end="1033:17">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="1035:13" pos:end="1035:19"><expr pos:start="1035:13" pos:end="1035:18"><name pos:start="1035:13" pos:end="1035:16">high</name><operator pos:start="1035:17" pos:end="1035:18">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="1037:13" pos:end="1037:21"><expr pos:start="1037:13" pos:end="1037:20"><name pos:start="1037:13" pos:end="1037:18">output</name><operator pos:start="1037:19" pos:end="1037:20">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="1043:9" pos:end="1043:44"><expr pos:start="1043:9" pos:end="1043:43"><name pos:start="1043:9" pos:end="1043:11">low</name>    <operator pos:start="1043:16" pos:end="1043:16">=</operator> <name pos:start="1043:18" pos:end="1043:32"><name pos:start="1043:18" pos:end="1043:18">s</name><operator pos:start="1043:19" pos:end="1043:20">-&gt;</operator><name pos:start="1043:21" pos:end="1043:25">plane</name><index pos:start="1043:26" pos:end="1043:32">[<expr pos:start="1043:27" pos:end="1043:31"><name pos:start="1043:27" pos:end="1043:31">plane</name></expr>]</index></name><operator pos:start="1043:33" pos:end="1043:33">.</operator><name pos:start="1043:34" pos:end="1043:43"><name pos:start="1043:34" pos:end="1043:40">subband</name><index pos:start="1043:41" pos:end="1043:43">[<expr pos:start="1043:42" pos:end="1043:42"><literal type="number" pos:start="1043:42" pos:end="1043:42">7</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1045:9" pos:end="1045:44"><expr pos:start="1045:9" pos:end="1045:43"><name pos:start="1045:9" pos:end="1045:12">high</name>   <operator pos:start="1045:16" pos:end="1045:16">=</operator> <name pos:start="1045:18" pos:end="1045:32"><name pos:start="1045:18" pos:end="1045:18">s</name><operator pos:start="1045:19" pos:end="1045:20">-&gt;</operator><name pos:start="1045:21" pos:end="1045:25">plane</name><index pos:start="1045:26" pos:end="1045:32">[<expr pos:start="1045:27" pos:end="1045:31"><name pos:start="1045:27" pos:end="1045:31">plane</name></expr>]</index></name><operator pos:start="1045:33" pos:end="1045:33">.</operator><name pos:start="1045:34" pos:end="1045:43"><name pos:start="1045:34" pos:end="1045:40">subband</name><index pos:start="1045:41" pos:end="1045:43">[<expr pos:start="1045:42" pos:end="1045:42"><literal type="number" pos:start="1045:42" pos:end="1045:42">9</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1047:9" pos:end="1047:40"><expr pos:start="1047:9" pos:end="1047:39"><name pos:start="1047:9" pos:end="1047:14">output</name> <operator pos:start="1047:16" pos:end="1047:16">=</operator> <name pos:start="1047:18" pos:end="1047:32"><name pos:start="1047:18" pos:end="1047:18">s</name><operator pos:start="1047:19" pos:end="1047:20">-&gt;</operator><name pos:start="1047:21" pos:end="1047:25">plane</name><index pos:start="1047:26" pos:end="1047:32">[<expr pos:start="1047:27" pos:end="1047:31"><name pos:start="1047:27" pos:end="1047:31">plane</name></expr>]</index></name><operator pos:start="1047:33" pos:end="1047:33">.</operator><name pos:start="1047:34" pos:end="1047:39"><name pos:start="1047:34" pos:end="1047:36">l_h</name><index pos:start="1047:37" pos:end="1047:39">[<expr pos:start="1047:38" pos:end="1047:38"><literal type="number" pos:start="1047:38" pos:end="1047:38">7</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="1049:9" pos:end="1059:9">for <control pos:start="1049:13" pos:end="1049:43">(<init pos:start="1049:14" pos:end="1049:19"><expr pos:start="1049:14" pos:end="1049:18"><name pos:start="1049:14" pos:end="1049:14">i</name> <operator pos:start="1049:16" pos:end="1049:16">=</operator> <literal type="number" pos:start="1049:18" pos:end="1049:18">0</literal></expr>;</init> <condition pos:start="1049:21" pos:end="1049:38"><expr pos:start="1049:21" pos:end="1049:37"><name pos:start="1049:21" pos:end="1049:21">i</name> <operator pos:start="1049:23" pos:end="1049:23">&lt;</operator> <name pos:start="1049:25" pos:end="1049:37">lowpass_width</name></expr>;</condition> <incr pos:start="1049:40" pos:end="1049:42"><expr pos:start="1049:40" pos:end="1049:42"><name pos:start="1049:40" pos:end="1049:40">i</name><operator pos:start="1049:41" pos:end="1049:42">++</operator></expr></incr>)</control> <block pos:start="1049:45" pos:end="1059:9">{<block_content pos:start="1051:13" pos:end="1057:21">

            <expr_stmt pos:start="1051:13" pos:end="1051:108"><expr pos:start="1051:13" pos:end="1051:107"><call pos:start="1051:13" pos:end="1051:107"><name pos:start="1051:13" pos:end="1051:23">vert_filter</name><argument_list pos:start="1051:24" pos:end="1051:107">(<argument pos:start="1051:25" pos:end="1051:30"><expr pos:start="1051:25" pos:end="1051:30"><name pos:start="1051:25" pos:end="1051:30">output</name></expr></argument>, <argument pos:start="1051:33" pos:end="1051:45"><expr pos:start="1051:33" pos:end="1051:45"><name pos:start="1051:33" pos:end="1051:45">lowpass_width</name></expr></argument>, <argument pos:start="1051:48" pos:end="1051:50"><expr pos:start="1051:48" pos:end="1051:50"><name pos:start="1051:48" pos:end="1051:50">low</name></expr></argument>, <argument pos:start="1051:53" pos:end="1051:67"><expr pos:start="1051:53" pos:end="1051:67"><name pos:start="1051:53" pos:end="1051:67">highpass_stride</name></expr></argument>, <argument pos:start="1051:70" pos:end="1051:73"><expr pos:start="1051:70" pos:end="1051:73"><name pos:start="1051:70" pos:end="1051:73">high</name></expr></argument>, <argument pos:start="1051:76" pos:end="1051:90"><expr pos:start="1051:76" pos:end="1051:90"><name pos:start="1051:76" pos:end="1051:90">highpass_stride</name></expr></argument>, <argument pos:start="1051:93" pos:end="1051:106"><expr pos:start="1051:93" pos:end="1051:106"><name pos:start="1051:93" pos:end="1051:106">lowpass_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1053:13" pos:end="1053:18"><expr pos:start="1053:13" pos:end="1053:17"><name pos:start="1053:13" pos:end="1053:15">low</name><operator pos:start="1053:16" pos:end="1053:17">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="1055:13" pos:end="1055:19"><expr pos:start="1055:13" pos:end="1055:18"><name pos:start="1055:13" pos:end="1055:16">high</name><operator pos:start="1055:17" pos:end="1055:18">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="1057:13" pos:end="1057:21"><expr pos:start="1057:13" pos:end="1057:20"><name pos:start="1057:13" pos:end="1057:18">output</name><operator pos:start="1057:19" pos:end="1057:20">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="1063:9" pos:end="1063:46"><expr pos:start="1063:9" pos:end="1063:45"><name pos:start="1063:9" pos:end="1063:11">dst</name> <operator pos:start="1063:13" pos:end="1063:13">=</operator> <operator pos:start="1063:15" pos:end="1063:15">(</operator><name pos:start="1063:16" pos:end="1063:22">int16_t</name> <operator pos:start="1063:24" pos:end="1063:24">*</operator><operator pos:start="1063:25" pos:end="1063:25">)</operator><name pos:start="1063:26" pos:end="1063:45"><name pos:start="1063:26" pos:end="1063:28">pic</name><operator pos:start="1063:29" pos:end="1063:30">-&gt;</operator><name pos:start="1063:31" pos:end="1063:34">data</name><index pos:start="1063:35" pos:end="1063:45">[<expr pos:start="1063:36" pos:end="1063:44"><name pos:start="1063:36" pos:end="1063:44">act_plane</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1065:9" pos:end="1065:38"><expr pos:start="1065:9" pos:end="1065:37"><name pos:start="1065:9" pos:end="1065:11">low</name>  <operator pos:start="1065:14" pos:end="1065:14">=</operator> <name pos:start="1065:16" pos:end="1065:30"><name pos:start="1065:16" pos:end="1065:16">s</name><operator pos:start="1065:17" pos:end="1065:18">-&gt;</operator><name pos:start="1065:19" pos:end="1065:23">plane</name><index pos:start="1065:24" pos:end="1065:30">[<expr pos:start="1065:25" pos:end="1065:29"><name pos:start="1065:25" pos:end="1065:29">plane</name></expr>]</index></name><operator pos:start="1065:31" pos:end="1065:31">.</operator><name pos:start="1065:32" pos:end="1065:37"><name pos:start="1065:32" pos:end="1065:34">l_h</name><index pos:start="1065:35" pos:end="1065:37">[<expr pos:start="1065:36" pos:end="1065:36"><literal type="number" pos:start="1065:36" pos:end="1065:36">6</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1067:9" pos:end="1067:38"><expr pos:start="1067:9" pos:end="1067:37"><name pos:start="1067:9" pos:end="1067:12">high</name> <operator pos:start="1067:14" pos:end="1067:14">=</operator> <name pos:start="1067:16" pos:end="1067:30"><name pos:start="1067:16" pos:end="1067:16">s</name><operator pos:start="1067:17" pos:end="1067:18">-&gt;</operator><name pos:start="1067:19" pos:end="1067:23">plane</name><index pos:start="1067:24" pos:end="1067:30">[<expr pos:start="1067:25" pos:end="1067:29"><name pos:start="1067:25" pos:end="1067:29">plane</name></expr>]</index></name><operator pos:start="1067:31" pos:end="1067:31">.</operator><name pos:start="1067:32" pos:end="1067:37"><name pos:start="1067:32" pos:end="1067:34">l_h</name><index pos:start="1067:35" pos:end="1067:37">[<expr pos:start="1067:36" pos:end="1067:36"><literal type="number" pos:start="1067:36" pos:end="1067:36">7</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="1069:9" pos:end="1079:9">for <control pos:start="1069:13" pos:end="1069:48">(<init pos:start="1069:14" pos:end="1069:19"><expr pos:start="1069:14" pos:end="1069:18"><name pos:start="1069:14" pos:end="1069:14">i</name> <operator pos:start="1069:16" pos:end="1069:16">=</operator> <literal type="number" pos:start="1069:18" pos:end="1069:18">0</literal></expr>;</init> <condition pos:start="1069:21" pos:end="1069:43"><expr pos:start="1069:21" pos:end="1069:42"><name pos:start="1069:21" pos:end="1069:21">i</name> <operator pos:start="1069:23" pos:end="1069:23">&lt;</operator> <name pos:start="1069:25" pos:end="1069:38">lowpass_height</name> <operator pos:start="1069:40" pos:end="1069:40">*</operator> <literal type="number" pos:start="1069:42" pos:end="1069:42">2</literal></expr>;</condition> <incr pos:start="1069:45" pos:end="1069:47"><expr pos:start="1069:45" pos:end="1069:47"><name pos:start="1069:45" pos:end="1069:45">i</name><operator pos:start="1069:46" pos:end="1069:47">++</operator></expr></incr>)</control> <block pos:start="1069:50" pos:end="1079:9">{<block_content pos:start="1071:13" pos:end="1077:49">

            <expr_stmt pos:start="1071:13" pos:end="1071:69"><expr pos:start="1071:13" pos:end="1071:68"><call pos:start="1071:13" pos:end="1071:68"><name pos:start="1071:13" pos:end="1071:29">horiz_filter_clip</name><argument_list pos:start="1071:30" pos:end="1071:68">(<argument pos:start="1071:31" pos:end="1071:33"><expr pos:start="1071:31" pos:end="1071:33"><name pos:start="1071:31" pos:end="1071:33">dst</name></expr></argument>, <argument pos:start="1071:36" pos:end="1071:38"><expr pos:start="1071:36" pos:end="1071:38"><name pos:start="1071:36" pos:end="1071:38">low</name></expr></argument>, <argument pos:start="1071:41" pos:end="1071:44"><expr pos:start="1071:41" pos:end="1071:44"><name pos:start="1071:41" pos:end="1071:44">high</name></expr></argument>, <argument pos:start="1071:47" pos:end="1071:59"><expr pos:start="1071:47" pos:end="1071:59"><name pos:start="1071:47" pos:end="1071:59">lowpass_width</name></expr></argument>, <argument pos:start="1071:62" pos:end="1071:67"><expr pos:start="1071:62" pos:end="1071:67"><name pos:start="1071:62" pos:end="1071:67"><name pos:start="1071:62" pos:end="1071:62">s</name><operator pos:start="1071:63" pos:end="1071:64">-&gt;</operator><name pos:start="1071:65" pos:end="1071:67">bpc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1073:13" pos:end="1073:34"><expr pos:start="1073:13" pos:end="1073:33"><name pos:start="1073:13" pos:end="1073:15">low</name>  <operator pos:start="1073:18" pos:end="1073:19">+=</operator> <name pos:start="1073:21" pos:end="1073:33">lowpass_width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="1075:13" pos:end="1075:34"><expr pos:start="1075:13" pos:end="1075:33"><name pos:start="1075:13" pos:end="1075:16">high</name> <operator pos:start="1075:18" pos:end="1075:19">+=</operator> <name pos:start="1075:21" pos:end="1075:33">lowpass_width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="1077:13" pos:end="1077:49"><expr pos:start="1077:13" pos:end="1077:48"><name pos:start="1077:13" pos:end="1077:15">dst</name>  <operator pos:start="1077:18" pos:end="1077:19">+=</operator> <name pos:start="1077:21" pos:end="1077:44"><name pos:start="1077:21" pos:end="1077:23">pic</name><operator pos:start="1077:24" pos:end="1077:25">-&gt;</operator><name pos:start="1077:26" pos:end="1077:33">linesize</name><index pos:start="1077:34" pos:end="1077:44">[<expr pos:start="1077:35" pos:end="1077:43"><name pos:start="1077:35" pos:end="1077:43">act_plane</name></expr>]</index></name> <operator pos:start="1077:46" pos:end="1077:46">/</operator> <literal type="number" pos:start="1077:48" pos:end="1077:48">2</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>





<label pos:start="1087:1" pos:end="1087:4"><name pos:start="1087:1" pos:end="1087:3">end</name>:</label>

    <if_stmt pos:start="1089:5" pos:end="1091:19"><if pos:start="1089:5" pos:end="1091:19">if <condition pos:start="1089:8" pos:end="1089:16">(<expr pos:start="1089:9" pos:end="1089:15"><name pos:start="1089:9" pos:end="1089:11">ret</name> <operator pos:start="1089:13" pos:end="1089:13">&lt;</operator> <literal type="number" pos:start="1089:15" pos:end="1089:15">0</literal></expr>)</condition><block type="pseudo" pos:start="1091:9" pos:end="1091:19"><block_content pos:start="1091:9" pos:end="1091:19">

        <return pos:start="1091:9" pos:end="1091:19">return <expr pos:start="1091:16" pos:end="1091:18"><name pos:start="1091:16" pos:end="1091:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="1095:5" pos:end="1095:19"><expr pos:start="1095:5" pos:end="1095:18"><operator pos:start="1095:5" pos:end="1095:5">*</operator><name pos:start="1095:6" pos:end="1095:14">got_frame</name> <operator pos:start="1095:16" pos:end="1095:16">=</operator> <literal type="number" pos:start="1095:18" pos:end="1095:18">1</literal></expr>;</expr_stmt>

    <return pos:start="1097:5" pos:end="1097:23">return <expr pos:start="1097:12" pos:end="1097:22"><name pos:start="1097:12" pos:end="1097:22"><name pos:start="1097:12" pos:end="1097:16">avpkt</name><operator pos:start="1097:17" pos:end="1097:18">-&gt;</operator><name pos:start="1097:19" pos:end="1097:22">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
