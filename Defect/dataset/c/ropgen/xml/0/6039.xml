<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6039.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">sx1_init</name><parameter_list pos:start="1:21" pos:end="1:62">(<parameter pos:start="1:22" pos:end="1:42"><decl pos:start="1:22" pos:end="1:42"><type pos:start="1:22" pos:end="1:42"><name pos:start="1:22" pos:end="1:33">MachineState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:42">machine</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:61"><decl pos:start="1:45" pos:end="1:61"><type pos:start="1:45" pos:end="1:61"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:61">version</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="215:1">{<block_content pos:start="5:5" pos:end="207:42">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:27">omap_mpu_state_s</name></name> <modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:32">mpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:54"><decl pos:start="7:5" pos:end="7:53"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">MemoryRegion</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:31">address_space</name> <init pos:start="7:33" pos:end="7:53">= <expr pos:start="7:35" pos:end="7:53"><call pos:start="7:35" pos:end="7:53"><name pos:start="7:35" pos:end="7:51">get_system_memory</name><argument_list pos:start="7:52" pos:end="7:53">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">MemoryRegion</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:23">flash</name> <init pos:start="9:25" pos:end="9:48">= <expr pos:start="9:27" pos:end="9:48"><call pos:start="9:27" pos:end="9:48"><name pos:start="9:27" pos:end="9:31">g_new</name><argument_list pos:start="9:32" pos:end="9:48">(<argument pos:start="9:33" pos:end="9:44"><expr pos:start="9:33" pos:end="9:44"><name pos:start="9:33" pos:end="9:44">MemoryRegion</name></expr></argument>, <argument pos:start="9:47" pos:end="9:47"><expr pos:start="9:47" pos:end="9:47"><literal type="number" pos:start="9:47" pos:end="9:47">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:51"><decl pos:start="11:5" pos:end="11:50"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">MemoryRegion</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:25">flash_1</name> <init pos:start="11:27" pos:end="11:50">= <expr pos:start="11:29" pos:end="11:50"><call pos:start="11:29" pos:end="11:50"><name pos:start="11:29" pos:end="11:33">g_new</name><argument_list pos:start="11:34" pos:end="11:50">(<argument pos:start="11:35" pos:end="11:46"><expr pos:start="11:35" pos:end="11:46"><name pos:start="11:35" pos:end="11:46">MemoryRegion</name></expr></argument>, <argument pos:start="11:49" pos:end="11:49"><expr pos:start="11:49" pos:end="11:49"><literal type="number" pos:start="11:49" pos:end="11:49">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:45"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">MemoryRegion</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:20">cs</name> <init pos:start="13:22" pos:end="13:45">= <expr pos:start="13:24" pos:end="13:45"><call pos:start="13:24" pos:end="13:45"><name pos:start="13:24" pos:end="13:28">g_new</name><argument_list pos:start="13:29" pos:end="13:45">(<argument pos:start="13:30" pos:end="13:41"><expr pos:start="13:30" pos:end="13:41"><name pos:start="13:30" pos:end="13:41">MemoryRegion</name></expr></argument>, <argument pos:start="13:44" pos:end="13:44"><expr pos:start="13:44" pos:end="13:44"><literal type="number" pos:start="13:44" pos:end="13:44">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:40"><decl pos:start="15:5" pos:end="15:39"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:10">static</specifier> <name pos:start="15:12" pos:end="15:19">uint32_t</name></type> <name pos:start="15:21" pos:end="15:26">cs0val</name> <init pos:start="15:28" pos:end="15:39">= <expr pos:start="15:30" pos:end="15:39"><literal type="number" pos:start="15:30" pos:end="15:39">0x00213090</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:40"><decl pos:start="17:5" pos:end="17:39"><type pos:start="17:5" pos:end="17:19"><specifier pos:start="17:5" pos:end="17:10">static</specifier> <name pos:start="17:12" pos:end="17:19">uint32_t</name></type> <name pos:start="17:21" pos:end="17:26">cs1val</name> <init pos:start="17:28" pos:end="17:39">= <expr pos:start="17:30" pos:end="17:39"><literal type="number" pos:start="17:30" pos:end="17:39">0x00215070</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:40"><decl pos:start="19:5" pos:end="19:39"><type pos:start="19:5" pos:end="19:19"><specifier pos:start="19:5" pos:end="19:10">static</specifier> <name pos:start="19:12" pos:end="19:19">uint32_t</name></type> <name pos:start="19:21" pos:end="19:26">cs2val</name> <init pos:start="19:28" pos:end="19:39">= <expr pos:start="19:30" pos:end="19:39"><literal type="number" pos:start="19:30" pos:end="19:39">0x00001139</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:40"><decl pos:start="21:5" pos:end="21:39"><type pos:start="21:5" pos:end="21:19"><specifier pos:start="21:5" pos:end="21:10">static</specifier> <name pos:start="21:12" pos:end="21:19">uint32_t</name></type> <name pos:start="21:21" pos:end="21:26">cs3val</name> <init pos:start="21:28" pos:end="21:39">= <expr pos:start="21:30" pos:end="21:39"><literal type="number" pos:start="21:30" pos:end="21:39">0x00001139</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:13">DriveInfo</name> <modifier pos:start="23:15" pos:end="23:15">*</modifier></type><name pos:start="23:16" pos:end="23:20">dinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:15"><decl pos:start="25:5" pos:end="25:14"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:14">fl_idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:38"><decl pos:start="27:5" pos:end="27:37"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">uint32_t</name></type> <name pos:start="27:14" pos:end="27:23">flash_size</name> <init pos:start="27:25" pos:end="27:37">= <expr pos:start="27:27" pos:end="27:37"><name pos:start="27:27" pos:end="27:37">flash0_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:11"><decl pos:start="29:5" pos:end="29:10"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:10">be</name></decl>;</decl_stmt>



    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:21">(<expr pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:15">version</name> <operator pos:start="33:17" pos:end="33:18">==</operator> <literal type="number" pos:start="33:20" pos:end="33:20">2</literal></expr>)</condition> <block pos:start="33:23" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:33">

        <expr_stmt pos:start="35:9" pos:end="35:33"><expr pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:18">flash_size</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:32">flash2_size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="43:47"><expr pos:start="41:5" pos:end="43:46"><name pos:start="41:5" pos:end="41:7">mpu</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="43:46"><name pos:start="41:11" pos:end="41:26">omap310_mpu_init</name><argument_list pos:start="41:27" pos:end="43:46">(<argument pos:start="41:28" pos:end="41:40"><expr pos:start="41:28" pos:end="41:40"><name pos:start="41:28" pos:end="41:40">address_space</name></expr></argument>, <argument pos:start="41:43" pos:end="41:60"><expr pos:start="41:43" pos:end="41:60"><name pos:start="41:43" pos:end="41:60"><name pos:start="41:43" pos:end="41:51">sx1_binfo</name><operator pos:start="41:52" pos:end="41:52">.</operator><name pos:start="41:53" pos:end="41:60">ram_size</name></name></expr></argument>,

                           <argument pos:start="43:28" pos:end="43:45"><expr pos:start="43:28" pos:end="43:45"><name pos:start="43:28" pos:end="43:45"><name pos:start="43:28" pos:end="43:34">machine</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:45">cpu_model</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:32">/* External Flash (EMIFS) */</comment>

    <expr_stmt pos:start="49:5" pos:end="51:41"><expr pos:start="49:5" pos:end="51:40"><call pos:start="49:5" pos:end="51:40"><name pos:start="49:5" pos:end="49:26">memory_region_init_ram</name><argument_list pos:start="49:27" pos:end="51:40">(<argument pos:start="49:28" pos:end="49:32"><expr pos:start="49:28" pos:end="49:32"><name pos:start="49:28" pos:end="49:32">flash</name></expr></argument>, <argument pos:start="49:35" pos:end="49:38"><expr pos:start="49:35" pos:end="49:38"><name pos:start="49:35" pos:end="49:38">NULL</name></expr></argument>, <argument pos:start="49:41" pos:end="49:59"><expr pos:start="49:41" pos:end="49:59"><literal type="string" pos:start="49:41" pos:end="49:59">"omap_sx1.flash0-0"</literal></expr></argument>, <argument pos:start="49:62" pos:end="49:71"><expr pos:start="49:62" pos:end="49:71"><name pos:start="49:62" pos:end="49:71">flash_size</name></expr></argument>,

                           <argument pos:start="51:28" pos:end="51:39"><expr pos:start="51:28" pos:end="51:39"><operator pos:start="51:28" pos:end="51:28">&amp;</operator><name pos:start="51:29" pos:end="51:39">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:39"><expr pos:start="53:5" pos:end="53:38"><call pos:start="53:5" pos:end="53:38"><name pos:start="53:5" pos:end="53:31">vmstate_register_ram_global</name><argument_list pos:start="53:32" pos:end="53:38">(<argument pos:start="53:33" pos:end="53:37"><expr pos:start="53:33" pos:end="53:37"><name pos:start="53:33" pos:end="53:37">flash</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:44"><expr pos:start="55:5" pos:end="55:43"><call pos:start="55:5" pos:end="55:43"><name pos:start="55:5" pos:end="55:30">memory_region_set_readonly</name><argument_list pos:start="55:31" pos:end="55:43">(<argument pos:start="55:32" pos:end="55:36"><expr pos:start="55:32" pos:end="55:36"><name pos:start="55:32" pos:end="55:36">flash</name></expr></argument>, <argument pos:start="55:39" pos:end="55:42"><expr pos:start="55:39" pos:end="55:42"><name pos:start="55:39" pos:end="55:42">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:69"><expr pos:start="57:5" pos:end="57:68"><call pos:start="57:5" pos:end="57:68"><name pos:start="57:5" pos:end="57:31">memory_region_add_subregion</name><argument_list pos:start="57:32" pos:end="57:68">(<argument pos:start="57:33" pos:end="57:45"><expr pos:start="57:33" pos:end="57:45"><name pos:start="57:33" pos:end="57:45">address_space</name></expr></argument>, <argument pos:start="57:48" pos:end="57:60"><expr pos:start="57:48" pos:end="57:60"><name pos:start="57:48" pos:end="57:60">OMAP_CS0_BASE</name></expr></argument>, <argument pos:start="57:63" pos:end="57:67"><expr pos:start="57:63" pos:end="57:67"><name pos:start="57:63" pos:end="57:67">flash</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="63:65"><expr pos:start="61:5" pos:end="63:64"><call pos:start="61:5" pos:end="63:64"><name pos:start="61:5" pos:end="61:25">memory_region_init_io</name><argument_list pos:start="61:26" pos:end="63:64">(<argument pos:start="61:27" pos:end="61:32"><expr pos:start="61:27" pos:end="61:32"><operator pos:start="61:27" pos:end="61:27">&amp;</operator><name pos:start="61:28" pos:end="61:32"><name pos:start="61:28" pos:end="61:29">cs</name><index pos:start="61:30" pos:end="61:32">[<expr pos:start="61:31" pos:end="61:31"><literal type="number" pos:start="61:31" pos:end="61:31">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="61:35" pos:end="61:38"><expr pos:start="61:35" pos:end="61:38"><name pos:start="61:35" pos:end="61:38">NULL</name></expr></argument>, <argument pos:start="61:41" pos:end="61:51"><expr pos:start="61:41" pos:end="61:51"><operator pos:start="61:41" pos:end="61:41">&amp;</operator><name pos:start="61:42" pos:end="61:51">static_ops</name></expr></argument>, <argument pos:start="61:54" pos:end="61:60"><expr pos:start="61:54" pos:end="61:60"><operator pos:start="61:54" pos:end="61:54">&amp;</operator><name pos:start="61:55" pos:end="61:60">cs0val</name></expr></argument>,

                          <argument pos:start="63:27" pos:end="63:35"><expr pos:start="63:27" pos:end="63:35"><literal type="string" pos:start="63:27" pos:end="63:35">"sx1.cs0"</literal></expr></argument>, <argument pos:start="63:38" pos:end="63:63"><expr pos:start="63:38" pos:end="63:63"><name pos:start="63:38" pos:end="63:50">OMAP_CS0_SIZE</name> <operator pos:start="63:52" pos:end="63:52">-</operator> <name pos:start="63:54" pos:end="63:63">flash_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="67:68"><expr pos:start="65:5" pos:end="67:67"><call pos:start="65:5" pos:end="67:67"><name pos:start="65:5" pos:end="65:31">memory_region_add_subregion</name><argument_list pos:start="65:32" pos:end="67:67">(<argument pos:start="65:33" pos:end="65:45"><expr pos:start="65:33" pos:end="65:45"><name pos:start="65:33" pos:end="65:45">address_space</name></expr></argument>,

                                <argument pos:start="67:33" pos:end="67:58"><expr pos:start="67:33" pos:end="67:58"><name pos:start="67:33" pos:end="67:45">OMAP_CS0_BASE</name> <operator pos:start="67:47" pos:end="67:47">+</operator> <name pos:start="67:49" pos:end="67:58">flash_size</name></expr></argument>, <argument pos:start="67:61" pos:end="67:66"><expr pos:start="67:61" pos:end="67:66"><operator pos:start="67:61" pos:end="67:61">&amp;</operator><name pos:start="67:62" pos:end="67:66"><name pos:start="67:62" pos:end="67:63">cs</name><index pos:start="67:64" pos:end="67:66">[<expr pos:start="67:65" pos:end="67:65"><literal type="number" pos:start="67:65" pos:end="67:65">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="73:5" pos:end="75:52"><expr pos:start="73:5" pos:end="75:51"><call pos:start="73:5" pos:end="75:51"><name pos:start="73:5" pos:end="73:25">memory_region_init_io</name><argument_list pos:start="73:26" pos:end="75:51">(<argument pos:start="73:27" pos:end="73:32"><expr pos:start="73:27" pos:end="73:32"><operator pos:start="73:27" pos:end="73:27">&amp;</operator><name pos:start="73:28" pos:end="73:32"><name pos:start="73:28" pos:end="73:29">cs</name><index pos:start="73:30" pos:end="73:32">[<expr pos:start="73:31" pos:end="73:31"><literal type="number" pos:start="73:31" pos:end="73:31">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="73:35" pos:end="73:38"><expr pos:start="73:35" pos:end="73:38"><name pos:start="73:35" pos:end="73:38">NULL</name></expr></argument>, <argument pos:start="73:41" pos:end="73:51"><expr pos:start="73:41" pos:end="73:51"><operator pos:start="73:41" pos:end="73:41">&amp;</operator><name pos:start="73:42" pos:end="73:51">static_ops</name></expr></argument>, <argument pos:start="73:54" pos:end="73:60"><expr pos:start="73:54" pos:end="73:60"><operator pos:start="73:54" pos:end="73:54">&amp;</operator><name pos:start="73:55" pos:end="73:60">cs2val</name></expr></argument>,

                          <argument pos:start="75:27" pos:end="75:35"><expr pos:start="75:27" pos:end="75:35"><literal type="string" pos:start="75:27" pos:end="75:35">"sx1.cs2"</literal></expr></argument>, <argument pos:start="75:38" pos:end="75:50"><expr pos:start="75:38" pos:end="75:50"><name pos:start="75:38" pos:end="75:50">OMAP_CS2_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="79:55"><expr pos:start="77:5" pos:end="79:54"><call pos:start="77:5" pos:end="79:54"><name pos:start="77:5" pos:end="77:31">memory_region_add_subregion</name><argument_list pos:start="77:32" pos:end="79:54">(<argument pos:start="77:33" pos:end="77:45"><expr pos:start="77:33" pos:end="77:45"><name pos:start="77:33" pos:end="77:45">address_space</name></expr></argument>,

                                <argument pos:start="79:33" pos:end="79:45"><expr pos:start="79:33" pos:end="79:45"><name pos:start="79:33" pos:end="79:45">OMAP_CS2_BASE</name></expr></argument>, <argument pos:start="79:48" pos:end="79:53"><expr pos:start="79:48" pos:end="79:53"><operator pos:start="79:48" pos:end="79:48">&amp;</operator><name pos:start="79:49" pos:end="79:53"><name pos:start="79:49" pos:end="79:50">cs</name><index pos:start="79:51" pos:end="79:53">[<expr pos:start="79:52" pos:end="79:52"><literal type="number" pos:start="79:52" pos:end="79:52">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="85:52"><expr pos:start="83:5" pos:end="85:51"><call pos:start="83:5" pos:end="85:51"><name pos:start="83:5" pos:end="83:25">memory_region_init_io</name><argument_list pos:start="83:26" pos:end="85:51">(<argument pos:start="83:27" pos:end="83:32"><expr pos:start="83:27" pos:end="83:32"><operator pos:start="83:27" pos:end="83:27">&amp;</operator><name pos:start="83:28" pos:end="83:32"><name pos:start="83:28" pos:end="83:29">cs</name><index pos:start="83:30" pos:end="83:32">[<expr pos:start="83:31" pos:end="83:31"><literal type="number" pos:start="83:31" pos:end="83:31">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="83:35" pos:end="83:38"><expr pos:start="83:35" pos:end="83:38"><name pos:start="83:35" pos:end="83:38">NULL</name></expr></argument>, <argument pos:start="83:41" pos:end="83:51"><expr pos:start="83:41" pos:end="83:51"><operator pos:start="83:41" pos:end="83:41">&amp;</operator><name pos:start="83:42" pos:end="83:51">static_ops</name></expr></argument>, <argument pos:start="83:54" pos:end="83:60"><expr pos:start="83:54" pos:end="83:60"><operator pos:start="83:54" pos:end="83:54">&amp;</operator><name pos:start="83:55" pos:end="83:60">cs3val</name></expr></argument>,

                          <argument pos:start="85:27" pos:end="85:35"><expr pos:start="85:27" pos:end="85:35"><literal type="string" pos:start="85:27" pos:end="85:35">"sx1.cs3"</literal></expr></argument>, <argument pos:start="85:38" pos:end="85:50"><expr pos:start="85:38" pos:end="85:50"><name pos:start="85:38" pos:end="85:50">OMAP_CS3_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="89:55"><expr pos:start="87:5" pos:end="89:54"><call pos:start="87:5" pos:end="89:54"><name pos:start="87:5" pos:end="87:31">memory_region_add_subregion</name><argument_list pos:start="87:32" pos:end="89:54">(<argument pos:start="87:33" pos:end="87:45"><expr pos:start="87:33" pos:end="87:45"><name pos:start="87:33" pos:end="87:45">address_space</name></expr></argument>,

                                <argument pos:start="89:33" pos:end="89:45"><expr pos:start="89:33" pos:end="89:45"><name pos:start="89:33" pos:end="89:45">OMAP_CS2_BASE</name></expr></argument>, <argument pos:start="89:48" pos:end="89:53"><expr pos:start="89:48" pos:end="89:53"><operator pos:start="89:48" pos:end="89:48">&amp;</operator><name pos:start="89:49" pos:end="89:53"><name pos:start="89:49" pos:end="89:50">cs</name><index pos:start="89:51" pos:end="89:53">[<expr pos:start="89:52" pos:end="89:52"><literal type="number" pos:start="89:52" pos:end="89:52">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="96:0"><expr pos:start="93:5" pos:end="93:14"><name pos:start="93:5" pos:end="93:10">fl_idx</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <literal type="number" pos:start="93:14" pos:end="93:14">0</literal></expr>;</expr_stmt>

<cpp:ifdef pos:start="95:1" pos:end="95:29">#<cpp:directive pos:start="95:2" pos:end="95:6">ifdef</cpp:directive> <name pos:start="95:8" pos:end="95:29">TARGET_WORDS_BIGENDIAN</name></cpp:ifdef>

    <expr_stmt pos:start="97:5" pos:end="100:0"><expr pos:start="97:5" pos:end="97:10"><name pos:start="97:5" pos:end="97:6">be</name> <operator pos:start="97:8" pos:end="97:8">=</operator> <literal type="number" pos:start="97:10" pos:end="97:10">1</literal></expr>;</expr_stmt>

<cpp:else pos:start="99:1" pos:end="99:5">#<cpp:directive pos:start="99:2" pos:end="99:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="101:5" pos:end="104:0"><expr pos:start="101:5" pos:end="101:10"><name pos:start="101:5" pos:end="101:6">be</name> <operator pos:start="101:8" pos:end="101:8">=</operator> <literal type="number" pos:start="101:10" pos:end="101:10">0</literal></expr>;</expr_stmt>

<cpp:endif pos:start="103:1" pos:end="103:6">#<cpp:directive pos:start="103:2" pos:end="103:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="107:5" pos:end="127:5"><if pos:start="107:5" pos:end="127:5">if <condition pos:start="107:8" pos:end="107:58">(<expr pos:start="107:9" pos:end="107:57"><operator pos:start="107:9" pos:end="107:9">(</operator><name pos:start="107:10" pos:end="107:14">dinfo</name> <operator pos:start="107:16" pos:end="107:16">=</operator> <call pos:start="107:18" pos:end="107:48"><name pos:start="107:18" pos:end="107:26">drive_get</name><argument_list pos:start="107:27" pos:end="107:48">(<argument pos:start="107:28" pos:end="107:36"><expr pos:start="107:28" pos:end="107:36"><name pos:start="107:28" pos:end="107:36">IF_PFLASH</name></expr></argument>, <argument pos:start="107:39" pos:end="107:39"><expr pos:start="107:39" pos:end="107:39"><literal type="number" pos:start="107:39" pos:end="107:39">0</literal></expr></argument>, <argument pos:start="107:42" pos:end="107:47"><expr pos:start="107:42" pos:end="107:47"><name pos:start="107:42" pos:end="107:47">fl_idx</name></expr></argument>)</argument_list></call><operator pos:start="107:49" pos:end="107:49">)</operator> <operator pos:start="107:51" pos:end="107:52">!=</operator> <name pos:start="107:54" pos:end="107:57">NULL</name></expr>)</condition> <block pos:start="107:60" pos:end="127:5">{<block_content pos:start="109:9" pos:end="125:17">

        <if_stmt pos:start="109:9" pos:end="123:9"><if pos:start="109:9" pos:end="123:9">if <condition pos:start="109:12" pos:end="117:54">(<expr pos:start="109:13" pos:end="117:53"><operator pos:start="109:13" pos:end="109:13">!</operator><call pos:start="109:14" pos:end="117:53"><name pos:start="109:14" pos:end="109:34">pflash_cfi01_register</name><argument_list pos:start="109:35" pos:end="117:53">(<argument pos:start="109:36" pos:end="109:48"><expr pos:start="109:36" pos:end="109:48"><name pos:start="109:36" pos:end="109:48">OMAP_CS0_BASE</name></expr></argument>, <argument pos:start="109:51" pos:end="109:54"><expr pos:start="109:51" pos:end="109:54"><name pos:start="109:51" pos:end="109:54">NULL</name></expr></argument>,

                                   <argument pos:start="111:36" pos:end="111:54"><expr pos:start="111:36" pos:end="111:54"><literal type="string" pos:start="111:36" pos:end="111:54">"omap_sx1.flash0-1"</literal></expr></argument>, <argument pos:start="111:57" pos:end="111:66"><expr pos:start="111:57" pos:end="111:66"><name pos:start="111:57" pos:end="111:66">flash_size</name></expr></argument>,

                                   <argument pos:start="113:36" pos:end="113:69"><expr pos:start="113:36" pos:end="113:69"><call pos:start="113:36" pos:end="113:69"><name pos:start="113:36" pos:end="113:41">blk_bs</name><argument_list pos:start="113:42" pos:end="113:69">(<argument pos:start="113:43" pos:end="113:68"><expr pos:start="113:43" pos:end="113:68"><call pos:start="113:43" pos:end="113:68"><name pos:start="113:43" pos:end="113:61">blk_by_legacy_dinfo</name><argument_list pos:start="113:62" pos:end="113:68">(<argument pos:start="113:63" pos:end="113:67"><expr pos:start="113:63" pos:end="113:67"><name pos:start="113:63" pos:end="113:67">dinfo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,

                                   <argument pos:start="115:36" pos:end="115:46"><expr pos:start="115:36" pos:end="115:46"><name pos:start="115:36" pos:end="115:46">sector_size</name></expr></argument>, <argument pos:start="115:49" pos:end="115:72"><expr pos:start="115:49" pos:end="115:72"><name pos:start="115:49" pos:end="115:58">flash_size</name> <operator pos:start="115:60" pos:end="115:60">/</operator> <name pos:start="115:62" pos:end="115:72">sector_size</name></expr></argument>,

                                   <argument pos:start="117:36" pos:end="117:36"><expr pos:start="117:36" pos:end="117:36"><literal type="number" pos:start="117:36" pos:end="117:36">4</literal></expr></argument>, <argument pos:start="117:39" pos:end="117:39"><expr pos:start="117:39" pos:end="117:39"><literal type="number" pos:start="117:39" pos:end="117:39">0</literal></expr></argument>, <argument pos:start="117:42" pos:end="117:42"><expr pos:start="117:42" pos:end="117:42"><literal type="number" pos:start="117:42" pos:end="117:42">0</literal></expr></argument>, <argument pos:start="117:45" pos:end="117:45"><expr pos:start="117:45" pos:end="117:45"><literal type="number" pos:start="117:45" pos:end="117:45">0</literal></expr></argument>, <argument pos:start="117:48" pos:end="117:48"><expr pos:start="117:48" pos:end="117:48"><literal type="number" pos:start="117:48" pos:end="117:48">0</literal></expr></argument>, <argument pos:start="117:51" pos:end="117:52"><expr pos:start="117:51" pos:end="117:52"><name pos:start="117:51" pos:end="117:52">be</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:56" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:35">

            <expr_stmt pos:start="119:13" pos:end="121:35"><expr pos:start="119:13" pos:end="121:34"><call pos:start="119:13" pos:end="121:34"><name pos:start="119:13" pos:end="119:19">fprintf</name><argument_list pos:start="119:20" pos:end="121:34">(<argument pos:start="119:21" pos:end="119:26"><expr pos:start="119:21" pos:end="119:26"><name pos:start="119:21" pos:end="119:26">stderr</name></expr></argument>, <argument pos:start="119:29" pos:end="119:72"><expr pos:start="119:29" pos:end="119:72"><literal type="string" pos:start="119:29" pos:end="119:72">"qemu: Error registering flash memory %d.\n"</literal></expr></argument>,

                           <argument pos:start="121:28" pos:end="121:33"><expr pos:start="121:28" pos:end="121:33"><name pos:start="121:28" pos:end="121:33">fl_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:17"><expr pos:start="125:9" pos:end="125:16"><name pos:start="125:9" pos:end="125:14">fl_idx</name><operator pos:start="125:15" pos:end="125:16">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="131:5" pos:end="185:5"><if pos:start="131:5" pos:end="175:5">if <condition pos:start="131:8" pos:end="133:62">(<expr pos:start="131:9" pos:end="133:61"><operator pos:start="131:9" pos:end="131:9">(</operator><name pos:start="131:10" pos:end="131:16">version</name> <operator pos:start="131:18" pos:end="131:19">==</operator> <literal type="number" pos:start="131:21" pos:end="131:21">1</literal><operator pos:start="131:22" pos:end="131:22">)</operator> <operator pos:start="131:24" pos:end="131:25">&amp;&amp;</operator>

            <operator pos:start="133:13" pos:end="133:13">(</operator><name pos:start="133:14" pos:end="133:18">dinfo</name> <operator pos:start="133:20" pos:end="133:20">=</operator> <call pos:start="133:22" pos:end="133:52"><name pos:start="133:22" pos:end="133:30">drive_get</name><argument_list pos:start="133:31" pos:end="133:52">(<argument pos:start="133:32" pos:end="133:40"><expr pos:start="133:32" pos:end="133:40"><name pos:start="133:32" pos:end="133:40">IF_PFLASH</name></expr></argument>, <argument pos:start="133:43" pos:end="133:43"><expr pos:start="133:43" pos:end="133:43"><literal type="number" pos:start="133:43" pos:end="133:43">0</literal></expr></argument>, <argument pos:start="133:46" pos:end="133:51"><expr pos:start="133:46" pos:end="133:51"><name pos:start="133:46" pos:end="133:51">fl_idx</name></expr></argument>)</argument_list></call><operator pos:start="133:53" pos:end="133:53">)</operator> <operator pos:start="133:55" pos:end="133:56">!=</operator> <name pos:start="133:58" pos:end="133:61">NULL</name></expr>)</condition> <block pos:start="133:64" pos:end="175:5">{<block_content pos:start="135:9" pos:end="173:17">

        <expr_stmt pos:start="135:9" pos:end="137:45"><expr pos:start="135:9" pos:end="137:44"><call pos:start="135:9" pos:end="137:44"><name pos:start="135:9" pos:end="135:30">memory_region_init_ram</name><argument_list pos:start="135:31" pos:end="137:44">(<argument pos:start="135:32" pos:end="135:38"><expr pos:start="135:32" pos:end="135:38"><name pos:start="135:32" pos:end="135:38">flash_1</name></expr></argument>, <argument pos:start="135:41" pos:end="135:44"><expr pos:start="135:41" pos:end="135:44"><name pos:start="135:41" pos:end="135:44">NULL</name></expr></argument>, <argument pos:start="135:47" pos:end="135:65"><expr pos:start="135:47" pos:end="135:65"><literal type="string" pos:start="135:47" pos:end="135:65">"omap_sx1.flash1-0"</literal></expr></argument>, <argument pos:start="135:68" pos:end="135:78"><expr pos:start="135:68" pos:end="135:78"><name pos:start="135:68" pos:end="135:78">flash1_size</name></expr></argument>,

                               <argument pos:start="137:32" pos:end="137:43"><expr pos:start="137:32" pos:end="137:43"><operator pos:start="137:32" pos:end="137:32">&amp;</operator><name pos:start="137:33" pos:end="137:43">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:45"><expr pos:start="139:9" pos:end="139:44"><call pos:start="139:9" pos:end="139:44"><name pos:start="139:9" pos:end="139:35">vmstate_register_ram_global</name><argument_list pos:start="139:36" pos:end="139:44">(<argument pos:start="139:37" pos:end="139:43"><expr pos:start="139:37" pos:end="139:43"><name pos:start="139:37" pos:end="139:43">flash_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:50"><expr pos:start="141:9" pos:end="141:49"><call pos:start="141:9" pos:end="141:49"><name pos:start="141:9" pos:end="141:34">memory_region_set_readonly</name><argument_list pos:start="141:35" pos:end="141:49">(<argument pos:start="141:36" pos:end="141:42"><expr pos:start="141:36" pos:end="141:42"><name pos:start="141:36" pos:end="141:42">flash_1</name></expr></argument>, <argument pos:start="141:45" pos:end="141:48"><expr pos:start="141:45" pos:end="141:48"><name pos:start="141:45" pos:end="141:48">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:75"><expr pos:start="143:9" pos:end="143:74"><call pos:start="143:9" pos:end="143:74"><name pos:start="143:9" pos:end="143:35">memory_region_add_subregion</name><argument_list pos:start="143:36" pos:end="143:74">(<argument pos:start="143:37" pos:end="143:49"><expr pos:start="143:37" pos:end="143:49"><name pos:start="143:37" pos:end="143:49">address_space</name></expr></argument>, <argument pos:start="143:52" pos:end="143:64"><expr pos:start="143:52" pos:end="143:64"><name pos:start="143:52" pos:end="143:64">OMAP_CS1_BASE</name></expr></argument>, <argument pos:start="143:67" pos:end="143:73"><expr pos:start="143:67" pos:end="143:73"><name pos:start="143:67" pos:end="143:73">flash_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="147:9" pos:end="149:70"><expr pos:start="147:9" pos:end="149:69"><call pos:start="147:9" pos:end="149:69"><name pos:start="147:9" pos:end="147:29">memory_region_init_io</name><argument_list pos:start="147:30" pos:end="149:69">(<argument pos:start="147:31" pos:end="147:36"><expr pos:start="147:31" pos:end="147:36"><operator pos:start="147:31" pos:end="147:31">&amp;</operator><name pos:start="147:32" pos:end="147:36"><name pos:start="147:32" pos:end="147:33">cs</name><index pos:start="147:34" pos:end="147:36">[<expr pos:start="147:35" pos:end="147:35"><literal type="number" pos:start="147:35" pos:end="147:35">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="147:39" pos:end="147:42"><expr pos:start="147:39" pos:end="147:42"><name pos:start="147:39" pos:end="147:42">NULL</name></expr></argument>, <argument pos:start="147:45" pos:end="147:55"><expr pos:start="147:45" pos:end="147:55"><operator pos:start="147:45" pos:end="147:45">&amp;</operator><name pos:start="147:46" pos:end="147:55">static_ops</name></expr></argument>, <argument pos:start="147:58" pos:end="147:64"><expr pos:start="147:58" pos:end="147:64"><operator pos:start="147:58" pos:end="147:58">&amp;</operator><name pos:start="147:59" pos:end="147:64">cs1val</name></expr></argument>,

                              <argument pos:start="149:31" pos:end="149:39"><expr pos:start="149:31" pos:end="149:39"><literal type="string" pos:start="149:31" pos:end="149:39">"sx1.cs1"</literal></expr></argument>, <argument pos:start="149:42" pos:end="149:68"><expr pos:start="149:42" pos:end="149:68"><name pos:start="149:42" pos:end="149:54">OMAP_CS1_SIZE</name> <operator pos:start="149:56" pos:end="149:56">-</operator> <name pos:start="149:58" pos:end="149:68">flash1_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="153:69"><expr pos:start="151:9" pos:end="153:68"><call pos:start="151:9" pos:end="153:68"><name pos:start="151:9" pos:end="151:35">memory_region_add_subregion</name><argument_list pos:start="151:36" pos:end="153:68">(<argument pos:start="151:37" pos:end="151:49"><expr pos:start="151:37" pos:end="151:49"><name pos:start="151:37" pos:end="151:49">address_space</name></expr></argument>,

                                <argument pos:start="153:33" pos:end="153:59"><expr pos:start="153:33" pos:end="153:59"><name pos:start="153:33" pos:end="153:45">OMAP_CS1_BASE</name> <operator pos:start="153:47" pos:end="153:47">+</operator> <name pos:start="153:49" pos:end="153:59">flash1_size</name></expr></argument>, <argument pos:start="153:62" pos:end="153:67"><expr pos:start="153:62" pos:end="153:67"><operator pos:start="153:62" pos:end="153:62">&amp;</operator><name pos:start="153:63" pos:end="153:67"><name pos:start="153:63" pos:end="153:64">cs</name><index pos:start="153:65" pos:end="153:67">[<expr pos:start="153:66" pos:end="153:66"><literal type="number" pos:start="153:66" pos:end="153:66">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="157:9" pos:end="171:9"><if pos:start="157:9" pos:end="171:9">if <condition pos:start="157:12" pos:end="165:54">(<expr pos:start="157:13" pos:end="165:53"><operator pos:start="157:13" pos:end="157:13">!</operator><call pos:start="157:14" pos:end="165:53"><name pos:start="157:14" pos:end="157:34">pflash_cfi01_register</name><argument_list pos:start="157:35" pos:end="165:53">(<argument pos:start="157:36" pos:end="157:48"><expr pos:start="157:36" pos:end="157:48"><name pos:start="157:36" pos:end="157:48">OMAP_CS1_BASE</name></expr></argument>, <argument pos:start="157:51" pos:end="157:54"><expr pos:start="157:51" pos:end="157:54"><name pos:start="157:51" pos:end="157:54">NULL</name></expr></argument>,

                                   <argument pos:start="159:36" pos:end="159:54"><expr pos:start="159:36" pos:end="159:54"><literal type="string" pos:start="159:36" pos:end="159:54">"omap_sx1.flash1-1"</literal></expr></argument>, <argument pos:start="159:57" pos:end="159:67"><expr pos:start="159:57" pos:end="159:67"><name pos:start="159:57" pos:end="159:67">flash1_size</name></expr></argument>,

                                   <argument pos:start="161:36" pos:end="161:69"><expr pos:start="161:36" pos:end="161:69"><call pos:start="161:36" pos:end="161:69"><name pos:start="161:36" pos:end="161:41">blk_bs</name><argument_list pos:start="161:42" pos:end="161:69">(<argument pos:start="161:43" pos:end="161:68"><expr pos:start="161:43" pos:end="161:68"><call pos:start="161:43" pos:end="161:68"><name pos:start="161:43" pos:end="161:61">blk_by_legacy_dinfo</name><argument_list pos:start="161:62" pos:end="161:68">(<argument pos:start="161:63" pos:end="161:67"><expr pos:start="161:63" pos:end="161:67"><name pos:start="161:63" pos:end="161:67">dinfo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,

                                   <argument pos:start="163:36" pos:end="163:46"><expr pos:start="163:36" pos:end="163:46"><name pos:start="163:36" pos:end="163:46">sector_size</name></expr></argument>, <argument pos:start="163:49" pos:end="163:73"><expr pos:start="163:49" pos:end="163:73"><name pos:start="163:49" pos:end="163:59">flash1_size</name> <operator pos:start="163:61" pos:end="163:61">/</operator> <name pos:start="163:63" pos:end="163:73">sector_size</name></expr></argument>,

                                   <argument pos:start="165:36" pos:end="165:36"><expr pos:start="165:36" pos:end="165:36"><literal type="number" pos:start="165:36" pos:end="165:36">4</literal></expr></argument>, <argument pos:start="165:39" pos:end="165:39"><expr pos:start="165:39" pos:end="165:39"><literal type="number" pos:start="165:39" pos:end="165:39">0</literal></expr></argument>, <argument pos:start="165:42" pos:end="165:42"><expr pos:start="165:42" pos:end="165:42"><literal type="number" pos:start="165:42" pos:end="165:42">0</literal></expr></argument>, <argument pos:start="165:45" pos:end="165:45"><expr pos:start="165:45" pos:end="165:45"><literal type="number" pos:start="165:45" pos:end="165:45">0</literal></expr></argument>, <argument pos:start="165:48" pos:end="165:48"><expr pos:start="165:48" pos:end="165:48"><literal type="number" pos:start="165:48" pos:end="165:48">0</literal></expr></argument>, <argument pos:start="165:51" pos:end="165:52"><expr pos:start="165:51" pos:end="165:52"><name pos:start="165:51" pos:end="165:52">be</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="165:56" pos:end="171:9">{<block_content pos:start="167:13" pos:end="169:35">

            <expr_stmt pos:start="167:13" pos:end="169:35"><expr pos:start="167:13" pos:end="169:34"><call pos:start="167:13" pos:end="169:34"><name pos:start="167:13" pos:end="167:19">fprintf</name><argument_list pos:start="167:20" pos:end="169:34">(<argument pos:start="167:21" pos:end="167:26"><expr pos:start="167:21" pos:end="167:26"><name pos:start="167:21" pos:end="167:26">stderr</name></expr></argument>, <argument pos:start="167:29" pos:end="167:72"><expr pos:start="167:29" pos:end="167:72"><literal type="string" pos:start="167:29" pos:end="167:72">"qemu: Error registering flash memory %d.\n"</literal></expr></argument>,

                           <argument pos:start="169:28" pos:end="169:33"><expr pos:start="169:28" pos:end="169:33"><name pos:start="169:28" pos:end="169:33">fl_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:17"><expr pos:start="173:9" pos:end="173:16"><name pos:start="173:9" pos:end="173:14">fl_idx</name><operator pos:start="173:15" pos:end="173:16">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="175:7" pos:end="185:5">else <block pos:start="175:12" pos:end="185:5">{<block_content pos:start="177:9" pos:end="183:55">

        <expr_stmt pos:start="177:9" pos:end="179:56"><expr pos:start="177:9" pos:end="179:55"><call pos:start="177:9" pos:end="179:55"><name pos:start="177:9" pos:end="177:29">memory_region_init_io</name><argument_list pos:start="177:30" pos:end="179:55">(<argument pos:start="177:31" pos:end="177:36"><expr pos:start="177:31" pos:end="177:36"><operator pos:start="177:31" pos:end="177:31">&amp;</operator><name pos:start="177:32" pos:end="177:36"><name pos:start="177:32" pos:end="177:33">cs</name><index pos:start="177:34" pos:end="177:36">[<expr pos:start="177:35" pos:end="177:35"><literal type="number" pos:start="177:35" pos:end="177:35">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="177:39" pos:end="177:42"><expr pos:start="177:39" pos:end="177:42"><name pos:start="177:39" pos:end="177:42">NULL</name></expr></argument>, <argument pos:start="177:45" pos:end="177:55"><expr pos:start="177:45" pos:end="177:55"><operator pos:start="177:45" pos:end="177:45">&amp;</operator><name pos:start="177:46" pos:end="177:55">static_ops</name></expr></argument>, <argument pos:start="177:58" pos:end="177:64"><expr pos:start="177:58" pos:end="177:64"><operator pos:start="177:58" pos:end="177:58">&amp;</operator><name pos:start="177:59" pos:end="177:64">cs1val</name></expr></argument>,

                              <argument pos:start="179:31" pos:end="179:39"><expr pos:start="179:31" pos:end="179:39"><literal type="string" pos:start="179:31" pos:end="179:39">"sx1.cs1"</literal></expr></argument>, <argument pos:start="179:42" pos:end="179:54"><expr pos:start="179:42" pos:end="179:54"><name pos:start="179:42" pos:end="179:54">OMAP_CS1_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="183:55"><expr pos:start="181:9" pos:end="183:54"><call pos:start="181:9" pos:end="183:54"><name pos:start="181:9" pos:end="181:35">memory_region_add_subregion</name><argument_list pos:start="181:36" pos:end="183:54">(<argument pos:start="181:37" pos:end="181:49"><expr pos:start="181:37" pos:end="181:49"><name pos:start="181:37" pos:end="181:49">address_space</name></expr></argument>,

                                <argument pos:start="183:33" pos:end="183:45"><expr pos:start="183:33" pos:end="183:45"><name pos:start="183:33" pos:end="183:45">OMAP_CS1_BASE</name></expr></argument>, <argument pos:start="183:48" pos:end="183:53"><expr pos:start="183:48" pos:end="183:53"><operator pos:start="183:48" pos:end="183:48">&amp;</operator><name pos:start="183:49" pos:end="183:53"><name pos:start="183:49" pos:end="183:50">cs</name><index pos:start="183:51" pos:end="183:53">[<expr pos:start="183:52" pos:end="183:52"><literal type="number" pos:start="183:52" pos:end="183:52">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="189:5" pos:end="195:5"><if pos:start="189:5" pos:end="195:5">if <condition pos:start="189:8" pos:end="189:65">(<expr pos:start="189:9" pos:end="189:64"><operator pos:start="189:9" pos:end="189:9">!</operator><name pos:start="189:10" pos:end="189:33"><name pos:start="189:10" pos:end="189:16">machine</name><operator pos:start="189:17" pos:end="189:18">-&gt;</operator><name pos:start="189:19" pos:end="189:33">kernel_filename</name></name> <operator pos:start="189:35" pos:end="189:36">&amp;&amp;</operator> <operator pos:start="189:38" pos:end="189:38">!</operator><name pos:start="189:39" pos:end="189:44">fl_idx</name> <operator pos:start="189:46" pos:end="189:47">&amp;&amp;</operator> <operator pos:start="189:49" pos:end="189:49">!</operator><call pos:start="189:50" pos:end="189:64"><name pos:start="189:50" pos:end="189:62">qtest_enabled</name><argument_list pos:start="189:63" pos:end="189:64">()</argument_list></call></expr>)</condition> <block pos:start="189:67" pos:end="195:5">{<block_content pos:start="191:9" pos:end="193:16">

        <expr_stmt pos:start="191:9" pos:end="191:69"><expr pos:start="191:9" pos:end="191:68"><call pos:start="191:9" pos:end="191:68"><name pos:start="191:9" pos:end="191:15">fprintf</name><argument_list pos:start="191:16" pos:end="191:68">(<argument pos:start="191:17" pos:end="191:22"><expr pos:start="191:17" pos:end="191:22"><name pos:start="191:17" pos:end="191:22">stderr</name></expr></argument>, <argument pos:start="191:25" pos:end="191:67"><expr pos:start="191:25" pos:end="191:67"><literal type="string" pos:start="191:25" pos:end="191:67">"Kernel or Flash image must be specified\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:16"><expr pos:start="193:9" pos:end="193:15"><call pos:start="193:9" pos:end="193:15"><name pos:start="193:9" pos:end="193:12">exit</name><argument_list pos:start="193:13" pos:end="193:15">(<argument pos:start="193:14" pos:end="193:14"><expr pos:start="193:14" pos:end="193:14"><literal type="number" pos:start="193:14" pos:end="193:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="199:5" pos:end="199:27">/* Load the kernel.  */</comment>

    <expr_stmt pos:start="201:5" pos:end="201:57"><expr pos:start="201:5" pos:end="201:56"><name pos:start="201:5" pos:end="201:29"><name pos:start="201:5" pos:end="201:13">sx1_binfo</name><operator pos:start="201:14" pos:end="201:14">.</operator><name pos:start="201:15" pos:end="201:29">kernel_filename</name></name> <operator pos:start="201:31" pos:end="201:31">=</operator> <name pos:start="201:33" pos:end="201:56"><name pos:start="201:33" pos:end="201:39">machine</name><operator pos:start="201:40" pos:end="201:41">-&gt;</operator><name pos:start="201:42" pos:end="201:56">kernel_filename</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:55"><expr pos:start="203:5" pos:end="203:54"><name pos:start="203:5" pos:end="203:28"><name pos:start="203:5" pos:end="203:13">sx1_binfo</name><operator pos:start="203:14" pos:end="203:14">.</operator><name pos:start="203:15" pos:end="203:28">kernel_cmdline</name></name> <operator pos:start="203:30" pos:end="203:30">=</operator> <name pos:start="203:32" pos:end="203:54"><name pos:start="203:32" pos:end="203:38">machine</name><operator pos:start="203:39" pos:end="203:40">-&gt;</operator><name pos:start="203:41" pos:end="203:54">kernel_cmdline</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:57"><expr pos:start="205:5" pos:end="205:56"><name pos:start="205:5" pos:end="205:29"><name pos:start="205:5" pos:end="205:13">sx1_binfo</name><operator pos:start="205:14" pos:end="205:14">.</operator><name pos:start="205:15" pos:end="205:29">initrd_filename</name></name> <operator pos:start="205:31" pos:end="205:31">=</operator> <name pos:start="205:33" pos:end="205:56"><name pos:start="205:33" pos:end="205:39">machine</name><operator pos:start="205:40" pos:end="205:41">-&gt;</operator><name pos:start="205:42" pos:end="205:56">initrd_filename</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:42"><expr pos:start="207:5" pos:end="207:41"><call pos:start="207:5" pos:end="207:41"><name pos:start="207:5" pos:end="207:19">arm_load_kernel</name><argument_list pos:start="207:20" pos:end="207:41">(<argument pos:start="207:21" pos:end="207:28"><expr pos:start="207:21" pos:end="207:28"><name pos:start="207:21" pos:end="207:28"><name pos:start="207:21" pos:end="207:23">mpu</name><operator pos:start="207:24" pos:end="207:25">-&gt;</operator><name pos:start="207:26" pos:end="207:28">cpu</name></name></expr></argument>, <argument pos:start="207:31" pos:end="207:40"><expr pos:start="207:31" pos:end="207:40"><operator pos:start="207:31" pos:end="207:31">&amp;</operator><name pos:start="207:32" pos:end="207:40">sx1_binfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="211:5" pos:end="211:29">/* TODO: fix next line */</comment>

    <comment type="line" pos:start="213:5" pos:end="213:42">//~ qemu_console_resize(ds, 640, 480);</comment>

</block_content>}</block></function>
</unit>
