<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2993.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">net_init_bridge</name><parameter_list pos:start="1:20" pos:end="3:55">(<parameter pos:start="1:21" pos:end="1:48"><decl pos:start="1:21" pos:end="1:48"><type pos:start="1:21" pos:end="1:48"><specifier pos:start="1:21" pos:end="1:25">const</specifier> <name pos:start="1:27" pos:end="1:42">NetClientOptions</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">opts</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:66"><decl pos:start="1:51" pos:end="1:66"><type pos:start="1:51" pos:end="1:66"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:60">char</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">name</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:40"><decl pos:start="3:21" pos:end="3:40"><type pos:start="3:21" pos:end="3:40"><name pos:start="3:21" pos:end="3:34">NetClientState</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">peer</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:54"><decl pos:start="3:43" pos:end="3:54"><type pos:start="3:43" pos:end="3:54"><name pos:start="3:43" pos:end="3:47">Error</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier><modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:54">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="55:1">{<block_content pos:start="7:5" pos:end="53:13">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:31"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:29">NetdevBridgeOptions</name> <modifier pos:start="7:31" pos:end="7:31">*</modifier></type><name pos:start="7:32" pos:end="7:37">bridge</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:22">helper</name></decl>, <decl pos:start="9:25" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:16"><modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:27">br</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">TAPState</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:15">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:10"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">fd</name></decl>, <decl pos:start="13:13" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:13" pos:end="13:20">vnet_hdr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:57"><expr pos:start="17:5" pos:end="17:56"><call pos:start="17:5" pos:end="17:56"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:56">(<argument pos:start="17:12" pos:end="17:55"><expr pos:start="17:12" pos:end="17:55"><name pos:start="17:12" pos:end="17:21"><name pos:start="17:12" pos:end="17:15">opts</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:21">type</name></name> <operator pos:start="17:23" pos:end="17:24">==</operator> <name pos:start="17:26" pos:end="17:55">NET_CLIENT_OPTIONS_KIND_BRIDGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:10">bridge</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:27"><name pos:start="19:14" pos:end="19:17">opts</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:20">u</name><operator pos:start="19:21" pos:end="19:21">.</operator><name pos:start="19:22" pos:end="19:27">bridge</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:73"><expr pos:start="23:5" pos:end="23:72"><name pos:start="23:5" pos:end="23:10">helper</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <ternary pos:start="23:14" pos:end="23:72"><condition pos:start="23:14" pos:end="23:33"><expr pos:start="23:14" pos:end="23:31"><name pos:start="23:14" pos:end="23:31"><name pos:start="23:14" pos:end="23:19">bridge</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:31">has_helper</name></name></expr> ?</condition><then pos:start="23:35" pos:end="23:48"> <expr pos:start="23:35" pos:end="23:48"><name pos:start="23:35" pos:end="23:48"><name pos:start="23:35" pos:end="23:40">bridge</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:48">helper</name></name></expr> </then><else pos:start="23:50" pos:end="23:72">: <expr pos:start="23:52" pos:end="23:72"><name pos:start="23:52" pos:end="23:72">DEFAULT_BRIDGE_HELPER</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:76"><expr pos:start="25:5" pos:end="25:75"><name pos:start="25:5" pos:end="25:6">br</name>     <operator pos:start="25:12" pos:end="25:12">=</operator> <ternary pos:start="25:14" pos:end="25:75"><condition pos:start="25:14" pos:end="25:33"><expr pos:start="25:14" pos:end="25:27"><name pos:start="25:14" pos:end="25:27"><name pos:start="25:14" pos:end="25:19">bridge</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:27">has_br</name></name></expr>     ?</condition><then pos:start="25:35" pos:end="25:44"> <expr pos:start="25:35" pos:end="25:44"><name pos:start="25:35" pos:end="25:44"><name pos:start="25:35" pos:end="25:40">bridge</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:44">br</name></name></expr>     </then><else pos:start="25:50" pos:end="25:75">: <expr pos:start="25:52" pos:end="25:75"><name pos:start="25:52" pos:end="25:75">DEFAULT_BRIDGE_INTERFACE</name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:49"><expr pos:start="29:5" pos:end="29:48"><name pos:start="29:5" pos:end="29:6">fd</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <call pos:start="29:10" pos:end="29:48"><name pos:start="29:10" pos:end="29:30">net_bridge_run_helper</name><argument_list pos:start="29:31" pos:end="29:48">(<argument pos:start="29:32" pos:end="29:37"><expr pos:start="29:32" pos:end="29:37"><name pos:start="29:32" pos:end="29:37">helper</name></expr></argument>, <argument pos:start="29:40" pos:end="29:41"><expr pos:start="29:40" pos:end="29:41"><name pos:start="29:40" pos:end="29:41">br</name></expr></argument>, <argument pos:start="29:44" pos:end="29:47"><expr pos:start="29:44" pos:end="29:47"><name pos:start="29:44" pos:end="29:47">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:17">(<expr pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:10">fd</name> <operator pos:start="31:12" pos:end="31:13">==</operator> <operator pos:start="31:15" pos:end="31:15">-</operator><literal type="number" pos:start="31:16" pos:end="31:16">1</literal></expr>)</condition> <block pos:start="31:19" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:18">

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><call pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:9">fcntl</name><argument_list pos:start="39:10" pos:end="39:34">(<argument pos:start="39:11" pos:end="39:12"><expr pos:start="39:11" pos:end="39:12"><name pos:start="39:11" pos:end="39:12">fd</name></expr></argument>, <argument pos:start="39:15" pos:end="39:21"><expr pos:start="39:15" pos:end="39:21"><name pos:start="39:15" pos:end="39:21">F_SETFL</name></expr></argument>, <argument pos:start="39:24" pos:end="39:33"><expr pos:start="39:24" pos:end="39:33"><name pos:start="39:24" pos:end="39:33">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:12">vnet_hdr</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <call pos:start="41:16" pos:end="41:37"><name pos:start="41:16" pos:end="41:33">tap_probe_vnet_hdr</name><argument_list pos:start="41:34" pos:end="41:37">(<argument pos:start="41:35" pos:end="41:36"><expr pos:start="41:35" pos:end="41:36"><name pos:start="41:35" pos:end="41:36">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:60"><expr pos:start="43:5" pos:end="43:59"><name pos:start="43:5" pos:end="43:5">s</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <call pos:start="43:9" pos:end="43:59"><name pos:start="43:9" pos:end="43:23">net_tap_fd_init</name><argument_list pos:start="43:24" pos:end="43:59">(<argument pos:start="43:25" pos:end="43:28"><expr pos:start="43:25" pos:end="43:28"><name pos:start="43:25" pos:end="43:28">peer</name></expr></argument>, <argument pos:start="43:31" pos:end="43:38"><expr pos:start="43:31" pos:end="43:38"><literal type="string" pos:start="43:31" pos:end="43:38">"bridge"</literal></expr></argument>, <argument pos:start="43:41" pos:end="43:44"><expr pos:start="43:41" pos:end="43:44"><name pos:start="43:41" pos:end="43:44">name</name></expr></argument>, <argument pos:start="43:47" pos:end="43:48"><expr pos:start="43:47" pos:end="43:48"><name pos:start="43:47" pos:end="43:48">fd</name></expr></argument>, <argument pos:start="43:51" pos:end="43:58"><expr pos:start="43:51" pos:end="43:58"><name pos:start="43:51" pos:end="43:58">vnet_hdr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="49:17"><expr pos:start="47:5" pos:end="49:16"><call pos:start="47:5" pos:end="49:16"><name pos:start="47:5" pos:end="47:12">snprintf</name><argument_list pos:start="47:13" pos:end="49:16">(<argument pos:start="47:14" pos:end="47:27"><expr pos:start="47:14" pos:end="47:27"><name pos:start="47:14" pos:end="47:27"><name pos:start="47:14" pos:end="47:14">s</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:18">nc</name><operator pos:start="47:19" pos:end="47:19">.</operator><name pos:start="47:20" pos:end="47:27">info_str</name></name></expr></argument>, <argument pos:start="47:30" pos:end="47:51"><expr pos:start="47:30" pos:end="47:51"><sizeof pos:start="47:30" pos:end="47:51">sizeof<argument_list pos:start="47:36" pos:end="47:51">(<argument pos:start="47:37" pos:end="47:50"><expr pos:start="47:37" pos:end="47:50"><name pos:start="47:37" pos:end="47:50"><name pos:start="47:37" pos:end="47:37">s</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:41">nc</name><operator pos:start="47:42" pos:end="47:42">.</operator><name pos:start="47:43" pos:end="47:50">info_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="47:54" pos:end="47:70"><expr pos:start="47:54" pos:end="47:70"><literal type="string" pos:start="47:54" pos:end="47:70">"helper=%s,br=%s"</literal></expr></argument>, <argument pos:start="47:73" pos:end="47:78"><expr pos:start="47:73" pos:end="47:78"><name pos:start="47:73" pos:end="47:78">helper</name></expr></argument>,

             <argument pos:start="49:14" pos:end="49:15"><expr pos:start="49:14" pos:end="49:15"><name pos:start="49:14" pos:end="49:15">br</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
