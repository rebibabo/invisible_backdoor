<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20948.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">scsi_dma_complete_noio</name><parameter_list pos:start="1:35" pos:end="1:59">(<parameter pos:start="1:36" pos:end="1:49"><decl pos:start="1:36" pos:end="1:49"><type pos:start="1:36" pos:end="1:49"><name pos:start="1:36" pos:end="1:46">SCSIDiskReq</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">r</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:58"><decl pos:start="1:52" pos:end="1:58"><type pos:start="1:52" pos:end="1:58"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:58">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:28">

    <expr_stmt pos:start="5:5" pos:end="5:33"><expr pos:start="5:5" pos:end="5:32"><call pos:start="5:5" pos:end="5:32"><name pos:start="5:5" pos:end="5:10">assert</name><argument_list pos:start="5:11" pos:end="5:32">(<argument pos:start="5:12" pos:end="5:31"><expr pos:start="5:12" pos:end="5:31"><name pos:start="5:12" pos:end="5:23"><name pos:start="5:12" pos:end="5:12">r</name><operator pos:start="5:13" pos:end="5:14">-&gt;</operator><name pos:start="5:15" pos:end="5:17">req</name><operator pos:start="5:18" pos:end="5:18">.</operator><name pos:start="5:19" pos:end="5:23">aiocb</name></name> <operator pos:start="5:25" pos:end="5:26">==</operator> <name pos:start="5:28" pos:end="5:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:27">(<expr pos:start="9:9" pos:end="9:26"><name pos:start="9:9" pos:end="9:26"><name pos:start="9:9" pos:end="9:9">r</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:14">req</name><operator pos:start="9:15" pos:end="9:15">.</operator><name pos:start="9:16" pos:end="9:26">io_canceled</name></name></expr>)</condition> <block pos:start="9:29" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:18">

        <expr_stmt pos:start="11:9" pos:end="11:42"><expr pos:start="11:9" pos:end="11:41"><call pos:start="11:9" pos:end="11:41"><name pos:start="11:9" pos:end="11:32">scsi_req_cancel_complete</name><argument_list pos:start="11:33" pos:end="11:41">(<argument pos:start="11:34" pos:end="11:40"><expr pos:start="11:34" pos:end="11:40"><operator pos:start="11:34" pos:end="11:34">&amp;</operator><name pos:start="11:35" pos:end="11:40"><name pos:start="11:35" pos:end="11:35">r</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:40">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="13:9" pos:end="13:18">goto <name pos:start="13:14" pos:end="13:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition> <block pos:start="19:18" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:9">

        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:49">(<expr pos:start="21:13" pos:end="21:48"><call pos:start="21:13" pos:end="21:48"><name pos:start="21:13" pos:end="21:32">scsi_handle_rw_error</name><argument_list pos:start="21:33" pos:end="21:48">(<argument pos:start="21:34" pos:end="21:34"><expr pos:start="21:34" pos:end="21:34"><name pos:start="21:34" pos:end="21:34">r</name></expr></argument>, <argument pos:start="21:37" pos:end="21:40"><expr pos:start="21:37" pos:end="21:40"><operator pos:start="21:37" pos:end="21:37">-</operator><name pos:start="21:38" pos:end="21:40">ret</name></expr></argument>, <argument pos:start="21:43" pos:end="21:47"><expr pos:start="21:43" pos:end="21:47"><name pos:start="21:43" pos:end="21:47">false</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:51" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:22">

            <goto pos:start="23:13" pos:end="23:22">goto <name pos:start="23:18" pos:end="23:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:5">r</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:13">sector</name></name> <operator pos:start="31:15" pos:end="31:16">+=</operator> <name pos:start="31:18" pos:end="31:32"><name pos:start="31:18" pos:end="31:18">r</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:32">sector_count</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:24"><expr pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:19"><name pos:start="33:5" pos:end="33:5">r</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:19">sector_count</name></name> <operator pos:start="33:21" pos:end="33:21">=</operator> <literal type="number" pos:start="33:23" pos:end="33:23">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="45:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:44">(<expr pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:9">r</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:14">req</name><operator pos:start="35:15" pos:end="35:15">.</operator><name pos:start="35:16" pos:end="35:18">cmd</name><operator pos:start="35:19" pos:end="35:19">.</operator><name pos:start="35:20" pos:end="35:23">mode</name></name> <operator pos:start="35:25" pos:end="35:26">==</operator> <name pos:start="35:28" pos:end="35:43">SCSI_XFER_TO_DEV</name></expr>)</condition> <block pos:start="35:46" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:15">

        <expr_stmt pos:start="37:9" pos:end="37:29"><expr pos:start="37:9" pos:end="37:28"><call pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:25">scsi_write_do_fua</name><argument_list pos:start="37:26" pos:end="37:28">(<argument pos:start="37:27" pos:end="37:27"><expr pos:start="37:27" pos:end="37:27"><name pos:start="37:27" pos:end="37:27">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:15">return;</return>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="45:5">else <block pos:start="41:12" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:41">

        <expr_stmt pos:start="43:9" pos:end="43:41"><expr pos:start="43:9" pos:end="43:40"><call pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:25">scsi_req_complete</name><argument_list pos:start="43:26" pos:end="43:40">(<argument pos:start="43:27" pos:end="43:33"><expr pos:start="43:27" pos:end="43:33"><operator pos:start="43:27" pos:end="43:27">&amp;</operator><name pos:start="43:28" pos:end="43:33"><name pos:start="43:28" pos:end="43:28">r</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:33">req</name></name></expr></argument>, <argument pos:start="43:36" pos:end="43:39"><expr pos:start="43:36" pos:end="43:39"><name pos:start="43:36" pos:end="43:39">GOOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="49:1" pos:end="49:5"><name pos:start="49:1" pos:end="49:4">done</name>:</label>

    <expr_stmt pos:start="51:5" pos:end="51:28"><expr pos:start="51:5" pos:end="51:27"><call pos:start="51:5" pos:end="51:27"><name pos:start="51:5" pos:end="51:18">scsi_req_unref</name><argument_list pos:start="51:19" pos:end="51:27">(<argument pos:start="51:20" pos:end="51:26"><expr pos:start="51:20" pos:end="51:26"><operator pos:start="51:20" pos:end="51:20">&amp;</operator><name pos:start="51:21" pos:end="51:26"><name pos:start="51:21" pos:end="51:21">r</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:26">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
