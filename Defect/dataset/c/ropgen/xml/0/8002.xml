<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8002.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:34"><name pos:start="1:1" pos:end="1:10">udp_listen</name><argument_list pos:start="1:11" pos:end="3:34">(<argument pos:start="1:12" pos:end="1:23">Slirp *slirp</argument>, <argument pos:start="1:26" pos:end="1:39">uint32_t haddr</argument>, <argument pos:start="1:42" pos:end="1:52">u_int hport</argument>, <argument pos:start="1:55" pos:end="1:68">uint32_t laddr</argument>,

           <argument pos:start="3:12" pos:end="3:22">u_int lport</argument>, <argument pos:start="3:25" pos:end="3:33">int flags</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:9" pos:end="87:18">

	<decl_stmt pos:start="7:9" pos:end="7:32"><decl pos:start="7:9" pos:end="7:31"><type pos:start="7:9" pos:end="7:26"><name pos:start="7:9" pos:end="7:26"><name pos:start="7:9" pos:end="7:14">struct</name> <name pos:start="7:16" pos:end="7:26">sockaddr_in</name></name></type> <name pos:start="7:28" pos:end="7:31">addr</name></decl>;</decl_stmt>

	<decl_stmt pos:start="9:9" pos:end="9:26"><decl pos:start="9:9" pos:end="9:25"><type pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:14">struct</name> <name pos:start="9:16" pos:end="9:21">socket</name></name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:25">so</name></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:55"><decl pos:start="11:9" pos:end="11:54"><type pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:17">socklen_t</name></type> <name pos:start="11:19" pos:end="11:25">addrlen</name> <init pos:start="11:27" pos:end="11:54">= <expr pos:start="11:29" pos:end="11:54"><sizeof pos:start="11:29" pos:end="11:54">sizeof<argument_list pos:start="11:35" pos:end="11:54">(<argument pos:start="11:36" pos:end="11:53"><expr pos:start="11:36" pos:end="11:53">struct <name pos:start="11:43" pos:end="11:53">sockaddr_in</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>



	<expr_stmt pos:start="15:9" pos:end="15:29"><expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:10">so</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:28"><name pos:start="15:14" pos:end="15:21">socreate</name><argument_list pos:start="15:22" pos:end="15:28">(<argument pos:start="15:23" pos:end="15:27"><expr pos:start="15:23" pos:end="15:27"><name pos:start="15:23" pos:end="15:27">slirp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:16">(<expr pos:start="17:13" pos:end="17:15"><operator pos:start="17:13" pos:end="17:13">!</operator><name pos:start="17:14" pos:end="17:15">so</name></expr>)</condition> <block pos:start="17:18" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:24">

	    <return pos:start="19:13" pos:end="19:24">return <expr pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:23">NULL</name></expr>;</return>

	</block_content>}</block></if></if_stmt>

	<expr_stmt pos:start="23:9" pos:end="23:50"><expr pos:start="23:9" pos:end="23:49"><name pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:10">so</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:13">s</name></name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:49"><name pos:start="23:17" pos:end="23:27">qemu_socket</name><argument_list pos:start="23:28" pos:end="23:49">(<argument pos:start="23:29" pos:end="23:35"><expr pos:start="23:29" pos:end="23:35"><name pos:start="23:29" pos:end="23:35">AF_INET</name></expr></argument>,<argument pos:start="23:37" pos:end="23:46"><expr pos:start="23:37" pos:end="23:46"><name pos:start="23:37" pos:end="23:46">SOCK_DGRAM</name></expr></argument>,<argument pos:start="23:48" pos:end="23:48"><expr pos:start="23:48" pos:end="23:48"><literal type="number" pos:start="23:48" pos:end="23:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="25:9" pos:end="25:44"><expr pos:start="25:9" pos:end="25:43"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:10">so</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:21">so_expire</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:31">curtime</name> <operator pos:start="25:33" pos:end="25:33">+</operator> <name pos:start="25:35" pos:end="25:43">SO_EXPIRE</name></expr>;</expr_stmt>

	<expr_stmt pos:start="27:9" pos:end="27:32"><expr pos:start="27:9" pos:end="27:31"><call pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:14">insque</name><argument_list pos:start="27:15" pos:end="27:31">(<argument pos:start="27:16" pos:end="27:17"><expr pos:start="27:16" pos:end="27:17"><name pos:start="27:16" pos:end="27:17">so</name></expr></argument>, <argument pos:start="27:20" pos:end="27:30"><expr pos:start="27:20" pos:end="27:30"><operator pos:start="27:20" pos:end="27:20">&amp;</operator><name pos:start="27:21" pos:end="27:30"><name pos:start="27:21" pos:end="27:25">slirp</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:30">udb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="31:9" pos:end="31:34"><expr pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:12">addr</name><operator pos:start="31:13" pos:end="31:13">.</operator><name pos:start="31:14" pos:end="31:23">sin_family</name></name> <operator pos:start="31:25" pos:end="31:25">=</operator> <name pos:start="31:27" pos:end="31:33">AF_INET</name></expr>;</expr_stmt>

	<expr_stmt pos:start="33:9" pos:end="33:37"><expr pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:12">addr</name><operator pos:start="33:13" pos:end="33:13">.</operator><name pos:start="33:14" pos:end="33:21">sin_addr</name><operator pos:start="33:22" pos:end="33:22">.</operator><name pos:start="33:23" pos:end="33:28">s_addr</name></name> <operator pos:start="33:30" pos:end="33:30">=</operator> <name pos:start="33:32" pos:end="33:36">haddr</name></expr>;</expr_stmt>

	<expr_stmt pos:start="35:9" pos:end="35:30"><expr pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:12">addr</name><operator pos:start="35:13" pos:end="35:13">.</operator><name pos:start="35:14" pos:end="35:21">sin_port</name></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <name pos:start="35:25" pos:end="35:29">hport</name></expr>;</expr_stmt>



	<if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:62">(<expr pos:start="39:13" pos:end="39:61"><call pos:start="39:13" pos:end="39:57"><name pos:start="39:13" pos:end="39:16">bind</name><argument_list pos:start="39:17" pos:end="39:57">(<argument pos:start="39:18" pos:end="39:22"><expr pos:start="39:18" pos:end="39:22"><name pos:start="39:18" pos:end="39:22"><name pos:start="39:18" pos:end="39:19">so</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:22">s</name></name></expr></argument>,<argument pos:start="39:24" pos:end="39:47"><expr pos:start="39:24" pos:end="39:47"><operator pos:start="39:24" pos:end="39:24">(</operator>struct <name pos:start="39:32" pos:end="39:39">sockaddr</name> <operator pos:start="39:41" pos:end="39:41">*</operator><operator pos:start="39:42" pos:end="39:42">)</operator><operator pos:start="39:43" pos:end="39:43">&amp;</operator><name pos:start="39:44" pos:end="39:47">addr</name></expr></argument>, <argument pos:start="39:50" pos:end="39:56"><expr pos:start="39:50" pos:end="39:56"><name pos:start="39:50" pos:end="39:56">addrlen</name></expr></argument>)</argument_list></call> <operator pos:start="39:59" pos:end="39:59">&lt;</operator> <literal type="number" pos:start="39:61" pos:end="39:61">0</literal></expr>)</condition> <block pos:start="39:64" pos:end="45:9">{<block_content pos:start="41:17" pos:end="43:28">

		<expr_stmt pos:start="41:17" pos:end="41:31"><expr pos:start="41:17" pos:end="41:30"><call pos:start="41:17" pos:end="41:30"><name pos:start="41:17" pos:end="41:26">udp_detach</name><argument_list pos:start="41:27" pos:end="41:30">(<argument pos:start="41:28" pos:end="41:29"><expr pos:start="41:28" pos:end="41:29"><name pos:start="41:28" pos:end="41:29">so</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="43:17" pos:end="43:28">return <expr pos:start="43:24" pos:end="43:27"><name pos:start="43:24" pos:end="43:27">NULL</name></expr>;</return>

	</block_content>}</block></if></if_stmt>

	<expr_stmt pos:start="47:9" pos:end="47:37"><expr pos:start="47:9" pos:end="47:36"><call pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:29">socket_set_fast_reuse</name><argument_list pos:start="47:30" pos:end="47:36">(<argument pos:start="47:31" pos:end="47:35"><expr pos:start="47:31" pos:end="47:35"><name pos:start="47:31" pos:end="47:35"><name pos:start="47:31" pos:end="47:32">so</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:35">s</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="51:9" pos:end="51:61"><expr pos:start="51:9" pos:end="51:60"><call pos:start="51:9" pos:end="51:60"><name pos:start="51:9" pos:end="51:19">getsockname</name><argument_list pos:start="51:20" pos:end="51:60">(<argument pos:start="51:21" pos:end="51:25"><expr pos:start="51:21" pos:end="51:25"><name pos:start="51:21" pos:end="51:25"><name pos:start="51:21" pos:end="51:22">so</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:25">s</name></name></expr></argument>,<argument pos:start="51:27" pos:end="51:50"><expr pos:start="51:27" pos:end="51:50"><operator pos:start="51:27" pos:end="51:27">(</operator>struct <name pos:start="51:35" pos:end="51:42">sockaddr</name> <operator pos:start="51:44" pos:end="51:44">*</operator><operator pos:start="51:45" pos:end="51:45">)</operator><operator pos:start="51:46" pos:end="51:46">&amp;</operator><name pos:start="51:47" pos:end="51:50">addr</name></expr></argument>,<argument pos:start="51:52" pos:end="51:59"><expr pos:start="51:52" pos:end="51:59"><operator pos:start="51:52" pos:end="51:52">&amp;</operator><name pos:start="51:53" pos:end="51:59">addrlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="53:9" pos:end="53:33"><expr pos:start="53:9" pos:end="53:32"><name pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:10">so</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:22">so_ffamily</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:32">AF_INET</name></expr>;</expr_stmt>

	<expr_stmt pos:start="55:9" pos:end="55:37"><expr pos:start="55:9" pos:end="55:36"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:10">so</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:20">so_fport</name></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <name pos:start="55:24" pos:end="55:36"><name pos:start="55:24" pos:end="55:27">addr</name><operator pos:start="55:28" pos:end="55:28">.</operator><name pos:start="55:29" pos:end="55:36">sin_port</name></name></expr>;</expr_stmt>

	<if_stmt pos:start="57:9" pos:end="67:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="59:57">(<expr pos:start="57:13" pos:end="59:56"><name pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:16">addr</name><operator pos:start="57:17" pos:end="57:17">.</operator><name pos:start="57:18" pos:end="57:25">sin_addr</name><operator pos:start="57:26" pos:end="57:26">.</operator><name pos:start="57:27" pos:end="57:32">s_addr</name></name> <operator pos:start="57:34" pos:end="57:35">==</operator> <literal type="number" pos:start="57:37" pos:end="57:37">0</literal> <operator pos:start="57:39" pos:end="57:40">||</operator>

	    <name pos:start="59:13" pos:end="59:32"><name pos:start="59:13" pos:end="59:16">addr</name><operator pos:start="59:17" pos:end="59:17">.</operator><name pos:start="59:18" pos:end="59:25">sin_addr</name><operator pos:start="59:26" pos:end="59:26">.</operator><name pos:start="59:27" pos:end="59:32">s_addr</name></name> <operator pos:start="59:34" pos:end="59:35">==</operator> <name pos:start="59:37" pos:end="59:56"><name pos:start="59:37" pos:end="59:49">loopback_addr</name><operator pos:start="59:50" pos:end="59:50">.</operator><name pos:start="59:51" pos:end="59:56">s_addr</name></name></expr>)</condition> <block pos:start="59:59" pos:end="63:9">{<block_content pos:start="61:12" pos:end="61:44">

	   <expr_stmt pos:start="61:12" pos:end="61:44"><expr pos:start="61:12" pos:end="61:43"><name pos:start="61:12" pos:end="61:23"><name pos:start="61:12" pos:end="61:13">so</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:23">so_faddr</name></name> <operator pos:start="61:25" pos:end="61:25">=</operator> <name pos:start="61:27" pos:end="61:43"><name pos:start="61:27" pos:end="61:31">slirp</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:43">vhost_addr</name></name></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="63:11" pos:end="67:9">else <block pos:start="63:16" pos:end="67:9">{<block_content pos:start="65:12" pos:end="65:40">

	   <expr_stmt pos:start="65:12" pos:end="65:40"><expr pos:start="65:12" pos:end="65:39"><name pos:start="65:12" pos:end="65:23"><name pos:start="65:12" pos:end="65:13">so</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:23">so_faddr</name></name> <operator pos:start="65:25" pos:end="65:25">=</operator> <name pos:start="65:27" pos:end="65:39"><name pos:start="65:27" pos:end="65:30">addr</name><operator pos:start="65:31" pos:end="65:31">.</operator><name pos:start="65:32" pos:end="65:39">sin_addr</name></name></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>

	<expr_stmt pos:start="69:9" pos:end="69:33"><expr pos:start="69:9" pos:end="69:32"><name pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:10">so</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:22">so_lfamily</name></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <name pos:start="69:26" pos:end="69:32">AF_INET</name></expr>;</expr_stmt>

	<expr_stmt pos:start="71:9" pos:end="71:29"><expr pos:start="71:9" pos:end="71:28"><name pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:10">so</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:20">so_lport</name></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <name pos:start="71:24" pos:end="71:28">lport</name></expr>;</expr_stmt>

	<expr_stmt pos:start="73:9" pos:end="73:36"><expr pos:start="73:9" pos:end="73:35"><name pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:10">so</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:20">so_laddr</name><operator pos:start="73:21" pos:end="73:21">.</operator><name pos:start="73:22" pos:end="73:27">s_addr</name></name> <operator pos:start="73:29" pos:end="73:29">=</operator> <name pos:start="73:31" pos:end="73:35">laddr</name></expr>;</expr_stmt>

	<if_stmt pos:start="75:9" pos:end="77:29"><if pos:start="75:9" pos:end="77:29">if <condition pos:start="75:12" pos:end="75:36">(<expr pos:start="75:13" pos:end="75:35"><name pos:start="75:13" pos:end="75:17">flags</name> <operator pos:start="75:19" pos:end="75:20">!=</operator> <name pos:start="75:22" pos:end="75:35">SS_FACCEPTONCE</name></expr>)</condition><block type="pseudo" pos:start="77:12" pos:end="77:29"><block_content pos:start="77:12" pos:end="77:29">

	   <expr_stmt pos:start="77:12" pos:end="77:29"><expr pos:start="77:12" pos:end="77:28"><name pos:start="77:12" pos:end="77:24"><name pos:start="77:12" pos:end="77:13">so</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:24">so_expire</name></name> <operator pos:start="77:26" pos:end="77:26">=</operator> <literal type="number" pos:start="77:28" pos:end="77:28">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



	<expr_stmt pos:start="81:9" pos:end="81:43"><expr pos:start="81:9" pos:end="81:42"><name pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:10">so</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:20">so_state</name></name> <operator pos:start="81:22" pos:end="81:23">&amp;=</operator> <name pos:start="81:25" pos:end="81:42">SS_PERSISTENT_MASK</name></expr>;</expr_stmt>

	<expr_stmt pos:start="83:9" pos:end="83:48"><expr pos:start="83:9" pos:end="83:47"><name pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:10">so</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:20">so_state</name></name> <operator pos:start="83:22" pos:end="83:23">|=</operator> <name pos:start="83:25" pos:end="83:39">SS_ISFCONNECTED</name> <operator pos:start="83:41" pos:end="83:41">|</operator> <name pos:start="83:43" pos:end="83:47">flags</name></expr>;</expr_stmt>



	<return pos:start="87:9" pos:end="87:18">return <expr pos:start="87:16" pos:end="87:17"><name pos:start="87:16" pos:end="87:17">so</name></expr>;</return>

</block_content>}</block>
</unit>
