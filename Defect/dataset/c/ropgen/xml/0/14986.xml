<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14986.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">cmd_seek</name><parameter_list pos:start="1:21" pos:end="1:47">(<parameter pos:start="1:22" pos:end="1:32"><decl pos:start="1:22" pos:end="1:32"><type pos:start="1:22" pos:end="1:32"><name pos:start="1:22" pos:end="1:29">IDEState</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:32">s</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:41">uint8_t</name><modifier pos:start="1:42" pos:end="1:42">*</modifier></type> <name pos:start="1:44" pos:end="1:46">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:24">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:20">lba</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:26">total_sectors</name> <init pos:start="7:28" pos:end="7:47">= <expr pos:start="7:30" pos:end="7:47"><name pos:start="7:30" pos:end="7:42"><name pos:start="7:30" pos:end="7:30">s</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:42">nb_sectors</name></name> <operator pos:start="7:44" pos:end="7:45">&gt;&gt;</operator> <literal type="number" pos:start="7:47" pos:end="7:47">2</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:27">(<expr pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:21">total_sectors</name> <operator pos:start="11:23" pos:end="11:24">==</operator> <literal type="number" pos:start="11:26" pos:end="11:26">0</literal></expr>)</condition> <block pos:start="11:29" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:72"><expr pos:start="13:9" pos:end="13:71"><call pos:start="13:9" pos:end="13:71"><name pos:start="13:9" pos:end="13:27">ide_atapi_cmd_error</name><argument_list pos:start="13:28" pos:end="13:71">(<argument pos:start="13:29" pos:end="13:29"><expr pos:start="13:29" pos:end="13:29"><name pos:start="13:29" pos:end="13:29">s</name></expr></argument>, <argument pos:start="13:32" pos:end="13:46"><expr pos:start="13:32" pos:end="13:46"><name pos:start="13:32" pos:end="13:46">SENSE_NOT_READY</name></expr></argument>, <argument pos:start="13:49" pos:end="13:70"><expr pos:start="13:49" pos:end="13:70"><name pos:start="13:49" pos:end="13:70">ASC_MEDIUM_NOT_PRESENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:7">lba</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:31"><name pos:start="21:11" pos:end="21:22">ube32_to_cpu</name><argument_list pos:start="21:23" pos:end="21:31">(<argument pos:start="21:24" pos:end="21:30"><expr pos:start="21:24" pos:end="21:30"><name pos:start="21:24" pos:end="21:26">buf</name> <operator pos:start="21:28" pos:end="21:28">+</operator> <literal type="number" pos:start="21:30" pos:end="21:30">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:29">(<expr pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:11">lba</name> <operator pos:start="23:13" pos:end="23:14">&gt;=</operator> <name pos:start="23:16" pos:end="23:28">total_sectors</name></expr>)</condition> <block pos:start="23:31" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:15">

        <expr_stmt pos:start="25:9" pos:end="25:77"><expr pos:start="25:9" pos:end="25:76"><call pos:start="25:9" pos:end="25:76"><name pos:start="25:9" pos:end="25:27">ide_atapi_cmd_error</name><argument_list pos:start="25:28" pos:end="25:76">(<argument pos:start="25:29" pos:end="25:29"><expr pos:start="25:29" pos:end="25:29"><name pos:start="25:29" pos:end="25:29">s</name></expr></argument>, <argument pos:start="25:32" pos:end="25:52"><expr pos:start="25:32" pos:end="25:52"><name pos:start="25:32" pos:end="25:52">SENSE_ILLEGAL_REQUEST</name></expr></argument>, <argument pos:start="25:55" pos:end="25:75"><expr pos:start="25:55" pos:end="25:75"><name pos:start="25:55" pos:end="25:75">ASC_LOGICAL_BLOCK_OOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:24"><expr pos:start="33:5" pos:end="33:23"><call pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:20">ide_atapi_cmd_ok</name><argument_list pos:start="33:21" pos:end="33:23">(<argument pos:start="33:22" pos:end="33:22"><expr pos:start="33:22" pos:end="33:22"><name pos:start="33:22" pos:end="33:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
