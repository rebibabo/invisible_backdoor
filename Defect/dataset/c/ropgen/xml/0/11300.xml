<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11300.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">unsigned</name> <name pos:start="1:17" pos:end="1:19">int</name></type> <name pos:start="1:21" pos:end="1:30">dec_move_r</name><parameter_list pos:start="1:31" pos:end="1:48">(<parameter pos:start="1:32" pos:end="1:47"><decl pos:start="1:32" pos:end="1:47"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:43">DisasContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:9" pos:end="51:17">

	<decl_stmt pos:start="5:9" pos:end="5:34"><decl pos:start="5:9" pos:end="5:33"><type pos:start="5:9" pos:end="5:11"><name pos:start="5:9" pos:end="5:11">int</name></type> <name pos:start="5:13" pos:end="5:16">size</name> <init pos:start="5:18" pos:end="5:33">= <expr pos:start="5:20" pos:end="5:33"><call pos:start="5:20" pos:end="5:33"><name pos:start="5:20" pos:end="5:29">memsize_zz</name><argument_list pos:start="5:30" pos:end="5:33">(<argument pos:start="5:31" pos:end="5:32"><expr pos:start="5:31" pos:end="5:32"><name pos:start="5:31" pos:end="5:32">dc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



	<expr_stmt pos:start="9:9" pos:end="11:59"><expr pos:start="9:9" pos:end="11:58"><call pos:start="9:9" pos:end="11:58"><name pos:start="9:9" pos:end="9:11">DIS</name><argument_list pos:start="9:12" pos:end="11:58">(<argument pos:start="9:13" pos:end="11:57"><expr pos:start="9:13" pos:end="11:57"><call pos:start="9:13" pos:end="11:57"><name pos:start="9:13" pos:end="9:19">fprintf</name> <argument_list pos:start="9:21" pos:end="11:57">(<argument pos:start="9:22" pos:end="9:28"><expr pos:start="9:22" pos:end="9:28"><name pos:start="9:22" pos:end="9:28">logfile</name></expr></argument>, <argument pos:start="9:31" pos:end="9:52"><expr pos:start="9:31" pos:end="9:52"><literal type="string" pos:start="9:31" pos:end="9:52">"move.%c $r%u, $r%u\n"</literal></expr></argument>,

		    <argument pos:start="11:21" pos:end="11:38"><expr pos:start="11:21" pos:end="11:38"><call pos:start="11:21" pos:end="11:38"><name pos:start="11:21" pos:end="11:32">memsize_char</name><argument_list pos:start="11:33" pos:end="11:38">(<argument pos:start="11:34" pos:end="11:37"><expr pos:start="11:34" pos:end="11:37"><name pos:start="11:34" pos:end="11:37">size</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="11:41" pos:end="11:47"><expr pos:start="11:41" pos:end="11:47"><name pos:start="11:41" pos:end="11:47"><name pos:start="11:41" pos:end="11:42">dc</name><operator pos:start="11:43" pos:end="11:44">-&gt;</operator><name pos:start="11:45" pos:end="11:47">op1</name></name></expr></argument>, <argument pos:start="11:50" pos:end="11:56"><expr pos:start="11:50" pos:end="11:56"><name pos:start="11:50" pos:end="11:56"><name pos:start="11:50" pos:end="11:51">dc</name><operator pos:start="11:52" pos:end="11:53">-&gt;</operator><name pos:start="11:54" pos:end="11:56">op2</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="15:9" pos:end="15:37"><expr pos:start="15:9" pos:end="15:36"><call pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:20">cris_cc_mask</name><argument_list pos:start="15:21" pos:end="15:36">(<argument pos:start="15:22" pos:end="15:23"><expr pos:start="15:22" pos:end="15:23"><name pos:start="15:22" pos:end="15:23">dc</name></expr></argument>, <argument pos:start="15:26" pos:end="15:35"><expr pos:start="15:26" pos:end="15:35"><name pos:start="15:26" pos:end="15:35">CC_MASK_NZ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="17:9" pos:end="49:9"><if pos:start="17:9" pos:end="29:9">if <condition pos:start="17:12" pos:end="17:22">(<expr pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:16">size</name> <operator pos:start="17:18" pos:end="17:19">==</operator> <literal type="number" pos:start="17:21" pos:end="17:21">4</literal></expr>)</condition> <block pos:start="17:24" pos:end="29:9">{<block_content pos:start="19:17" pos:end="27:55">

		<expr_stmt pos:start="19:17" pos:end="19:79"><expr pos:start="19:17" pos:end="19:78"><call pos:start="19:17" pos:end="19:78"><name pos:start="19:17" pos:end="19:31">dec_prep_move_r</name><argument_list pos:start="19:32" pos:end="19:78">(<argument pos:start="19:33" pos:end="19:34"><expr pos:start="19:33" pos:end="19:34"><name pos:start="19:33" pos:end="19:34">dc</name></expr></argument>, <argument pos:start="19:37" pos:end="19:43"><expr pos:start="19:37" pos:end="19:43"><name pos:start="19:37" pos:end="19:43"><name pos:start="19:37" pos:end="19:38">dc</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:43">op1</name></name></expr></argument>, <argument pos:start="19:46" pos:end="19:52"><expr pos:start="19:46" pos:end="19:52"><name pos:start="19:46" pos:end="19:52"><name pos:start="19:46" pos:end="19:47">dc</name><operator pos:start="19:48" pos:end="19:49">-&gt;</operator><name pos:start="19:50" pos:end="19:52">op2</name></name></expr></argument>, <argument pos:start="19:55" pos:end="19:58"><expr pos:start="19:55" pos:end="19:58"><name pos:start="19:55" pos:end="19:58">size</name></expr></argument>, <argument pos:start="19:61" pos:end="19:61"><expr pos:start="19:61" pos:end="19:61"><literal type="number" pos:start="19:61" pos:end="19:61">0</literal></expr></argument>, <argument pos:start="19:64" pos:end="19:77"><expr pos:start="19:64" pos:end="19:77"><name pos:start="19:64" pos:end="19:77"><name pos:start="19:64" pos:end="19:68">cpu_R</name><index pos:start="19:69" pos:end="19:77">[<expr pos:start="19:70" pos:end="19:76"><name pos:start="19:70" pos:end="19:76"><name pos:start="19:70" pos:end="19:71">dc</name><operator pos:start="19:72" pos:end="19:73">-&gt;</operator><name pos:start="19:74" pos:end="19:76">op2</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="21:17" pos:end="21:45"><expr pos:start="21:17" pos:end="21:44"><call pos:start="21:17" pos:end="21:44"><name pos:start="21:17" pos:end="21:28">cris_cc_mask</name><argument_list pos:start="21:29" pos:end="21:44">(<argument pos:start="21:30" pos:end="21:31"><expr pos:start="21:30" pos:end="21:31"><name pos:start="21:30" pos:end="21:31">dc</name></expr></argument>, <argument pos:start="21:34" pos:end="21:43"><expr pos:start="21:34" pos:end="21:43"><name pos:start="21:34" pos:end="21:43">CC_MASK_NZ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="23:17" pos:end="23:53"><expr pos:start="23:17" pos:end="23:52"><call pos:start="23:17" pos:end="23:52"><name pos:start="23:17" pos:end="23:33">cris_update_cc_op</name><argument_list pos:start="23:34" pos:end="23:52">(<argument pos:start="23:35" pos:end="23:36"><expr pos:start="23:35" pos:end="23:36"><name pos:start="23:35" pos:end="23:36">dc</name></expr></argument>, <argument pos:start="23:39" pos:end="23:48"><expr pos:start="23:39" pos:end="23:48"><name pos:start="23:39" pos:end="23:48">CC_OP_MOVE</name></expr></argument>, <argument pos:start="23:51" pos:end="23:51"><expr pos:start="23:51" pos:end="23:51"><literal type="number" pos:start="23:51" pos:end="23:51">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="25:17" pos:end="25:37"><expr pos:start="25:17" pos:end="25:36"><call pos:start="25:17" pos:end="25:36"><name pos:start="25:17" pos:end="25:32">cris_update_cc_x</name><argument_list pos:start="25:33" pos:end="25:36">(<argument pos:start="25:34" pos:end="25:35"><expr pos:start="25:34" pos:end="25:35"><name pos:start="25:34" pos:end="25:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="27:17" pos:end="27:55"><expr pos:start="27:17" pos:end="27:54"><call pos:start="27:17" pos:end="27:54"><name pos:start="27:17" pos:end="27:34">cris_update_result</name><argument_list pos:start="27:35" pos:end="27:54">(<argument pos:start="27:36" pos:end="27:37"><expr pos:start="27:36" pos:end="27:37"><name pos:start="27:36" pos:end="27:37">dc</name></expr></argument>, <argument pos:start="27:40" pos:end="27:53"><expr pos:start="27:40" pos:end="27:53"><name pos:start="27:40" pos:end="27:53"><name pos:start="27:40" pos:end="27:44">cpu_R</name><index pos:start="27:45" pos:end="27:53">[<expr pos:start="27:46" pos:end="27:52"><name pos:start="27:46" pos:end="27:52"><name pos:start="27:46" pos:end="27:47">dc</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:52">op2</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if>

	<else pos:start="31:9" pos:end="49:9">else <block pos:start="31:14" pos:end="49:9">{<block_content pos:start="33:17" pos:end="47:34">

		<decl_stmt pos:start="33:17" pos:end="33:24"><decl pos:start="33:17" pos:end="33:23"><type pos:start="33:17" pos:end="33:20"><name pos:start="33:17" pos:end="33:20">TCGv</name></type> <name pos:start="33:22" pos:end="33:23">t0</name></decl>;</decl_stmt>



		<expr_stmt pos:start="37:17" pos:end="37:47"><expr pos:start="37:17" pos:end="37:46"><name pos:start="37:17" pos:end="37:18">t0</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <call pos:start="37:22" pos:end="37:46"><name pos:start="37:22" pos:end="37:33">tcg_temp_new</name><argument_list pos:start="37:34" pos:end="37:46">(<argument pos:start="37:35" pos:end="37:45"><expr pos:start="37:35" pos:end="37:45"><name pos:start="37:35" pos:end="37:45">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="39:17" pos:end="39:67"><expr pos:start="39:17" pos:end="39:66"><call pos:start="39:17" pos:end="39:66"><name pos:start="39:17" pos:end="39:31">dec_prep_move_r</name><argument_list pos:start="39:32" pos:end="39:66">(<argument pos:start="39:33" pos:end="39:34"><expr pos:start="39:33" pos:end="39:34"><name pos:start="39:33" pos:end="39:34">dc</name></expr></argument>, <argument pos:start="39:37" pos:end="39:43"><expr pos:start="39:37" pos:end="39:43"><name pos:start="39:37" pos:end="39:43"><name pos:start="39:37" pos:end="39:38">dc</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:43">op1</name></name></expr></argument>, <argument pos:start="39:46" pos:end="39:52"><expr pos:start="39:46" pos:end="39:52"><name pos:start="39:46" pos:end="39:52"><name pos:start="39:46" pos:end="39:47">dc</name><operator pos:start="39:48" pos:end="39:49">-&gt;</operator><name pos:start="39:50" pos:end="39:52">op2</name></name></expr></argument>, <argument pos:start="39:55" pos:end="39:58"><expr pos:start="39:55" pos:end="39:58"><name pos:start="39:55" pos:end="39:58">size</name></expr></argument>, <argument pos:start="39:61" pos:end="39:61"><expr pos:start="39:61" pos:end="39:61"><literal type="number" pos:start="39:61" pos:end="39:61">0</literal></expr></argument>, <argument pos:start="39:64" pos:end="39:65"><expr pos:start="39:64" pos:end="39:65"><name pos:start="39:64" pos:end="39:65">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="41:17" pos:end="45:51"><expr pos:start="41:17" pos:end="45:50"><call pos:start="41:17" pos:end="45:50"><name pos:start="41:17" pos:end="41:24">cris_alu</name><argument_list pos:start="41:25" pos:end="45:50">(<argument pos:start="41:26" pos:end="41:27"><expr pos:start="41:26" pos:end="41:27"><name pos:start="41:26" pos:end="41:27">dc</name></expr></argument>, <argument pos:start="41:30" pos:end="41:39"><expr pos:start="41:30" pos:end="41:39"><name pos:start="41:30" pos:end="41:39">CC_OP_MOVE</name></expr></argument>,

			 <argument pos:start="43:26" pos:end="43:39"><expr pos:start="43:26" pos:end="43:39"><name pos:start="43:26" pos:end="43:39"><name pos:start="43:26" pos:end="43:30">cpu_R</name><index pos:start="43:31" pos:end="43:39">[<expr pos:start="43:32" pos:end="43:38"><name pos:start="43:32" pos:end="43:38"><name pos:start="43:32" pos:end="43:33">dc</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:38">op2</name></name></expr>]</index></name></expr></argument>,

			 <argument pos:start="45:26" pos:end="45:39"><expr pos:start="45:26" pos:end="45:39"><name pos:start="45:26" pos:end="45:39"><name pos:start="45:26" pos:end="45:30">cpu_R</name><index pos:start="45:31" pos:end="45:39">[<expr pos:start="45:32" pos:end="45:38"><name pos:start="45:32" pos:end="45:38"><name pos:start="45:32" pos:end="45:33">dc</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:38">op2</name></name></expr>]</index></name></expr></argument>, <argument pos:start="45:42" pos:end="45:43"><expr pos:start="45:42" pos:end="45:43"><name pos:start="45:42" pos:end="45:43">t0</name></expr></argument>, <argument pos:start="45:46" pos:end="45:49"><expr pos:start="45:46" pos:end="45:49"><name pos:start="45:46" pos:end="45:49">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="47:17" pos:end="47:34"><expr pos:start="47:17" pos:end="47:33"><call pos:start="47:17" pos:end="47:33"><name pos:start="47:17" pos:end="47:29">tcg_temp_free</name><argument_list pos:start="47:30" pos:end="47:33">(<argument pos:start="47:31" pos:end="47:32"><expr pos:start="47:31" pos:end="47:32"><name pos:start="47:31" pos:end="47:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>

	<return pos:start="51:9" pos:end="51:17">return <expr pos:start="51:16" pos:end="51:16"><literal type="number" pos:start="51:16" pos:end="51:16">2</literal></expr>;</return>

</block_content>}</block></function>
</unit>
