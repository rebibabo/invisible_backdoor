<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15953.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">qemu_system_reset</name><parameter_list pos:start="1:23" pos:end="1:44">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:36">ShutdownCause</name></type> <name pos:start="1:38" pos:end="1:43">reason</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:37">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">MachineClass</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">mc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:69"><expr pos:start="9:5" pos:end="9:68"><name pos:start="9:5" pos:end="9:6">mc</name> <operator pos:start="9:8" pos:end="9:8">=</operator> <ternary pos:start="9:10" pos:end="9:68"><condition pos:start="9:10" pos:end="9:26"><expr pos:start="9:10" pos:end="9:24"><name pos:start="9:10" pos:end="9:24">current_machine</name></expr> ?</condition><then pos:start="9:28" pos:end="9:61"> <expr pos:start="9:28" pos:end="9:61"><call pos:start="9:28" pos:end="9:61"><name pos:start="9:28" pos:end="9:44">MACHINE_GET_CLASS</name><argument_list pos:start="9:45" pos:end="9:61">(<argument pos:start="9:46" pos:end="9:60"><expr pos:start="9:46" pos:end="9:60"><name pos:start="9:46" pos:end="9:60">current_machine</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="9:63" pos:end="9:68">: <expr pos:start="9:65" pos:end="9:68"><name pos:start="9:65" pos:end="9:68">NULL</name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:33"><expr pos:start="13:5" pos:end="13:32"><call pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:30">cpu_synchronize_all_states</name><argument_list pos:start="13:31" pos:end="13:32">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:24">(<expr pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:10">mc</name> <operator pos:start="17:12" pos:end="17:13">&amp;&amp;</operator> <name pos:start="17:15" pos:end="17:23"><name pos:start="17:15" pos:end="17:16">mc</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:23">reset</name></name></expr>)</condition> <block pos:start="17:26" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:20">

        <expr_stmt pos:start="19:9" pos:end="19:20"><expr pos:start="19:9" pos:end="19:19"><call pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:10">mc</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:17">reset</name></name><argument_list pos:start="19:18" pos:end="19:19">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="25:5">else <block pos:start="21:12" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:29">

        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><call pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:26">qemu_devices_reset</name><argument_list pos:start="23:27" pos:end="23:28">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:15">(<expr pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:14">reason</name></expr>)</condition> <block pos:start="27:17" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:44">

        <comment type="block" pos:start="29:9" pos:end="29:47">/* TODO update event based on reason */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:44"><expr pos:start="31:9" pos:end="31:43"><call pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:29">qapi_event_send_reset</name><argument_list pos:start="31:30" pos:end="31:43">(<argument pos:start="31:31" pos:end="31:42"><expr pos:start="31:31" pos:end="31:42"><operator pos:start="31:31" pos:end="31:31">&amp;</operator><name pos:start="31:32" pos:end="31:42">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:37"><expr pos:start="35:5" pos:end="35:36"><call pos:start="35:5" pos:end="35:36"><name pos:start="35:5" pos:end="35:34">cpu_synchronize_all_post_reset</name><argument_list pos:start="35:35" pos:end="35:36">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
