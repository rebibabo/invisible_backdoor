<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14565.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:46">test_visitor_in_native_list_string</name><parameter_list pos:start="1:47" pos:end="3:66">(<parameter pos:start="1:48" pos:end="1:73"><decl pos:start="1:48" pos:end="1:73"><type pos:start="1:48" pos:end="1:73"><name pos:start="1:48" pos:end="1:67">TestInputVisitorData</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:73">data</name></decl></parameter>,

                                               <parameter pos:start="3:48" pos:end="3:65"><decl pos:start="3:48" pos:end="3:65"><type pos:start="3:48" pos:end="3:65"><specifier pos:start="3:48" pos:end="3:52">const</specifier> <name pos:start="3:54" pos:end="3:57">void</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:65">unused</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="67:1">{<block_content pos:start="7:5" pos:end="65:45">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:26">UserDefNativeListUnion</name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:34">cvalue</name> <init pos:start="7:36" pos:end="7:41">= <expr pos:start="7:38" pos:end="7:41"><name pos:start="7:38" pos:end="7:41">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">strList</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:17">elem</name> <init pos:start="9:19" pos:end="9:24">= <expr pos:start="9:21" pos:end="9:24"><name pos:start="9:21" pos:end="9:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">Visitor</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">GString</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:22">gstr_list</name> <init pos:start="13:24" pos:end="13:41">= <expr pos:start="13:26" pos:end="13:41"><call pos:start="13:26" pos:end="13:41"><name pos:start="13:26" pos:end="13:37">g_string_new</name><argument_list pos:start="13:38" pos:end="13:41">(<argument pos:start="13:39" pos:end="13:40"><expr pos:start="13:39" pos:end="13:40"><literal type="string" pos:start="13:39" pos:end="13:40">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:43"><decl pos:start="15:5" pos:end="15:42"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">GString</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:23">gstr_union</name> <init pos:start="15:25" pos:end="15:42">= <expr pos:start="15:27" pos:end="15:42"><call pos:start="15:27" pos:end="15:42"><name pos:start="15:27" pos:end="15:38">g_string_new</name><argument_list pos:start="15:39" pos:end="15:42">(<argument pos:start="15:40" pos:end="15:41"><expr pos:start="15:40" pos:end="15:41"><literal type="string" pos:start="15:40" pos:end="15:41">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>



    <for pos:start="21:5" pos:end="31:5">for <control pos:start="21:9" pos:end="21:28">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:23"><expr pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <literal type="number" pos:start="21:21" pos:end="21:22">32</literal></expr>;</condition> <incr pos:start="21:25" pos:end="21:27"><expr pos:start="21:25" pos:end="21:27"><name pos:start="21:25" pos:end="21:25">i</name><operator pos:start="21:26" pos:end="21:27">++</operator></expr></incr>)</control> <block pos:start="21:30" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:9">

        <expr_stmt pos:start="23:9" pos:end="23:53"><expr pos:start="23:9" pos:end="23:52"><call pos:start="23:9" pos:end="23:52"><name pos:start="23:9" pos:end="23:30">g_string_append_printf</name><argument_list pos:start="23:31" pos:end="23:52">(<argument pos:start="23:32" pos:end="23:40"><expr pos:start="23:32" pos:end="23:40"><name pos:start="23:32" pos:end="23:40">gstr_list</name></expr></argument>, <argument pos:start="23:43" pos:end="23:48"><expr pos:start="23:43" pos:end="23:48"><literal type="string" pos:start="23:43" pos:end="23:48">"'%d'"</literal></expr></argument>, <argument pos:start="23:51" pos:end="23:51"><expr pos:start="23:51" pos:end="23:51"><name pos:start="23:51" pos:end="23:51">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:20">(<expr pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:13">i</name> <operator pos:start="25:15" pos:end="25:16">!=</operator> <literal type="number" pos:start="25:18" pos:end="25:19">31</literal></expr>)</condition> <block pos:start="25:22" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:45">

            <expr_stmt pos:start="27:13" pos:end="27:45"><expr pos:start="27:13" pos:end="27:44"><call pos:start="27:13" pos:end="27:44"><name pos:start="27:13" pos:end="27:27">g_string_append</name><argument_list pos:start="27:28" pos:end="27:44">(<argument pos:start="27:29" pos:end="27:37"><expr pos:start="27:29" pos:end="27:37"><name pos:start="27:29" pos:end="27:37">gstr_list</name></expr></argument>, <argument pos:start="27:40" pos:end="27:43"><expr pos:start="27:40" pos:end="27:43"><literal type="string" pos:start="27:40" pos:end="27:43">", "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="33:5" pos:end="35:43"><expr pos:start="33:5" pos:end="35:42"><call pos:start="33:5" pos:end="35:42"><name pos:start="33:5" pos:end="33:26">g_string_append_printf</name><argument_list pos:start="33:27" pos:end="35:42">(<argument pos:start="33:28" pos:end="33:37"><expr pos:start="33:28" pos:end="33:37"><name pos:start="33:28" pos:end="33:37">gstr_union</name></expr></argument>,  <argument pos:start="33:41" pos:end="33:78"><expr pos:start="33:41" pos:end="33:78"><literal type="string" pos:start="33:41" pos:end="33:78">"{ 'type': 'string', 'data': [ %s ] }"</literal></expr></argument>,

                           <argument pos:start="35:28" pos:end="35:41"><expr pos:start="35:28" pos:end="35:41"><name pos:start="35:28" pos:end="35:41"><name pos:start="35:28" pos:end="35:36">gstr_list</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:41">str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:60"><expr pos:start="37:5" pos:end="37:59"><name pos:start="37:5" pos:end="37:5">v</name> <operator pos:start="37:7" pos:end="37:7">=</operator> <call pos:start="37:9" pos:end="37:59"><name pos:start="37:9" pos:end="37:35">visitor_input_test_init_raw</name><argument_list pos:start="37:36" pos:end="37:59">(<argument pos:start="37:37" pos:end="37:40"><expr pos:start="37:37" pos:end="37:40"><name pos:start="37:37" pos:end="37:40">data</name></expr></argument>,  <argument pos:start="37:44" pos:end="37:58"><expr pos:start="37:44" pos:end="37:58"><name pos:start="37:44" pos:end="37:58"><name pos:start="37:44" pos:end="37:53">gstr_union</name><operator pos:start="37:54" pos:end="37:55">-&gt;</operator><name pos:start="37:56" pos:end="37:58">str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:70"><expr pos:start="41:5" pos:end="41:69"><call pos:start="41:5" pos:end="41:69"><name pos:start="41:5" pos:end="41:37">visit_type_UserDefNativeListUnion</name><argument_list pos:start="41:38" pos:end="41:69">(<argument pos:start="41:39" pos:end="41:39"><expr pos:start="41:39" pos:end="41:39"><name pos:start="41:39" pos:end="41:39">v</name></expr></argument>, <argument pos:start="41:42" pos:end="41:45"><expr pos:start="41:42" pos:end="41:45"><name pos:start="41:42" pos:end="41:45">NULL</name></expr></argument>, <argument pos:start="41:48" pos:end="41:54"><expr pos:start="41:48" pos:end="41:54"><operator pos:start="41:48" pos:end="41:48">&amp;</operator><name pos:start="41:49" pos:end="41:54">cvalue</name></expr></argument>, <argument pos:start="41:57" pos:end="41:68"><expr pos:start="41:57" pos:end="41:68"><operator pos:start="41:57" pos:end="41:57">&amp;</operator><name pos:start="41:58" pos:end="41:68">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:29"><expr pos:start="43:5" pos:end="43:28"><call pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:12">g_assert</name><argument_list pos:start="43:13" pos:end="43:28">(<argument pos:start="43:14" pos:end="43:27"><expr pos:start="43:14" pos:end="43:27"><name pos:start="43:14" pos:end="43:19">cvalue</name> <operator pos:start="43:21" pos:end="43:22">!=</operator> <name pos:start="43:24" pos:end="43:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:78"><expr pos:start="45:5" pos:end="45:77"><call pos:start="45:5" pos:end="45:77"><name pos:start="45:5" pos:end="45:19">g_assert_cmpint</name><argument_list pos:start="45:20" pos:end="45:77">(<argument pos:start="45:21" pos:end="45:32"><expr pos:start="45:21" pos:end="45:32"><name pos:start="45:21" pos:end="45:32"><name pos:start="45:21" pos:end="45:26">cvalue</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:32">type</name></name></expr></argument>, <argument pos:start="45:35" pos:end="45:36"><expr pos:start="45:35" pos:end="45:36"><operator pos:start="45:35" pos:end="45:36">==</operator></expr></argument>, <argument pos:start="45:39" pos:end="45:76"><expr pos:start="45:39" pos:end="45:76"><name pos:start="45:39" pos:end="45:76">USER_DEF_NATIVE_LIST_UNION_KIND_STRING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="49:5" pos:end="57:5">for <control pos:start="49:9" pos:end="49:75">(<init pos:start="49:10" pos:end="49:45"><expr pos:start="49:10" pos:end="49:14"><name pos:start="49:10" pos:end="49:10">i</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">0</literal></expr><operator pos:start="49:15" pos:end="49:15">,</operator> <expr pos:start="49:17" pos:end="49:44"><name pos:start="49:17" pos:end="49:20">elem</name> <operator pos:start="49:22" pos:end="49:22">=</operator> <name pos:start="49:24" pos:end="49:44"><name pos:start="49:24" pos:end="49:29">cvalue</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:32">u</name><operator pos:start="49:33" pos:end="49:33">.</operator><name pos:start="49:34" pos:end="49:39">string</name><operator pos:start="49:40" pos:end="49:40">.</operator><name pos:start="49:41" pos:end="49:44">data</name></name></expr>;</init> <condition pos:start="49:47" pos:end="49:51"><expr pos:start="49:47" pos:end="49:50"><name pos:start="49:47" pos:end="49:50">elem</name></expr>;</condition> <incr pos:start="49:53" pos:end="49:74"><expr pos:start="49:53" pos:end="49:69"><name pos:start="49:53" pos:end="49:56">elem</name> <operator pos:start="49:58" pos:end="49:58">=</operator> <name pos:start="49:60" pos:end="49:69"><name pos:start="49:60" pos:end="49:63">elem</name><operator pos:start="49:64" pos:end="49:65">-&gt;</operator><name pos:start="49:66" pos:end="49:69">next</name></name></expr><operator pos:start="49:70" pos:end="49:70">,</operator> <expr pos:start="49:72" pos:end="49:74"><name pos:start="49:72" pos:end="49:72">i</name><operator pos:start="49:73" pos:end="49:74">++</operator></expr></incr>)</control> <block pos:start="49:77" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:46">

        <decl_stmt pos:start="51:9" pos:end="51:21"><decl pos:start="51:9" pos:end="51:20"><type pos:start="51:9" pos:end="51:13"><name pos:start="51:9" pos:end="51:13">gchar</name></type> <name pos:start="51:15" pos:end="51:20"><name pos:start="51:15" pos:end="51:17">str</name><index pos:start="51:18" pos:end="51:20">[<expr pos:start="51:19" pos:end="51:19"><literal type="number" pos:start="51:19" pos:end="51:19">8</literal></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><call pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:15">sprintf</name><argument_list pos:start="53:16" pos:end="53:29">(<argument pos:start="53:17" pos:end="53:19"><expr pos:start="53:17" pos:end="53:19"><name pos:start="53:17" pos:end="53:19">str</name></expr></argument>, <argument pos:start="53:22" pos:end="53:25"><expr pos:start="53:22" pos:end="53:25"><literal type="string" pos:start="53:22" pos:end="53:25">"%d"</literal></expr></argument>, <argument pos:start="53:28" pos:end="53:28"><expr pos:start="53:28" pos:end="53:28"><name pos:start="53:28" pos:end="53:28">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:46"><expr pos:start="55:9" pos:end="55:45"><call pos:start="55:9" pos:end="55:45"><name pos:start="55:9" pos:end="55:23">g_assert_cmpstr</name><argument_list pos:start="55:24" pos:end="55:45">(<argument pos:start="55:25" pos:end="55:35"><expr pos:start="55:25" pos:end="55:35"><name pos:start="55:25" pos:end="55:35"><name pos:start="55:25" pos:end="55:28">elem</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:35">value</name></name></expr></argument>, <argument pos:start="55:38" pos:end="55:39"><expr pos:start="55:38" pos:end="55:39"><operator pos:start="55:38" pos:end="55:39">==</operator></expr></argument>, <argument pos:start="55:42" pos:end="55:44"><expr pos:start="55:42" pos:end="55:44"><name pos:start="55:42" pos:end="55:44">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="61:5" pos:end="61:36"><expr pos:start="61:5" pos:end="61:35"><call pos:start="61:5" pos:end="61:35"><name pos:start="61:5" pos:end="61:17">g_string_free</name><argument_list pos:start="61:18" pos:end="61:35">(<argument pos:start="61:19" pos:end="61:28"><expr pos:start="61:19" pos:end="61:28"><name pos:start="61:19" pos:end="61:28">gstr_union</name></expr></argument>, <argument pos:start="61:31" pos:end="61:34"><expr pos:start="61:31" pos:end="61:34"><name pos:start="61:31" pos:end="61:34">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:35"><expr pos:start="63:5" pos:end="63:34"><call pos:start="63:5" pos:end="63:34"><name pos:start="63:5" pos:end="63:17">g_string_free</name><argument_list pos:start="63:18" pos:end="63:34">(<argument pos:start="63:19" pos:end="63:27"><expr pos:start="63:19" pos:end="63:27"><name pos:start="63:19" pos:end="63:27">gstr_list</name></expr></argument>, <argument pos:start="63:30" pos:end="63:33"><expr pos:start="63:30" pos:end="63:33"><name pos:start="63:30" pos:end="63:33">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:45"><expr pos:start="65:5" pos:end="65:44"><call pos:start="65:5" pos:end="65:44"><name pos:start="65:5" pos:end="65:36">qapi_free_UserDefNativeListUnion</name><argument_list pos:start="65:37" pos:end="65:44">(<argument pos:start="65:38" pos:end="65:43"><expr pos:start="65:38" pos:end="65:43"><name pos:start="65:38" pos:end="65:43">cvalue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
