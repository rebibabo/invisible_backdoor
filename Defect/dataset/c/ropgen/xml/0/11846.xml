<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11846.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">decode_profile_tier_level</name><parameter_list pos:start="1:37" pos:end="3:60">(<parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:57"><name pos:start="1:38" pos:end="1:53">HEVCLocalContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">lc</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:67"><decl pos:start="1:60" pos:end="1:67"><type pos:start="1:60" pos:end="1:67"><name pos:start="1:60" pos:end="1:62">PTL</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">ptl</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:59"><decl pos:start="3:38" pos:end="3:59"><type pos:start="3:38" pos:end="3:59"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:59">max_num_sub_layers</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="107:1">{<block_content pos:start="7:5" pos:end="105:13">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">GetBitContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">gb</name> <init pos:start="9:23" pos:end="9:31">= <expr pos:start="9:25" pos:end="9:31"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:31"><name pos:start="9:26" pos:end="9:27">lc</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:31">gb</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:49"><expr pos:start="13:5" pos:end="13:48"><name pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:7">ptl</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:30">general_profile_space</name></name> <operator pos:start="13:32" pos:end="13:32">=</operator> <call pos:start="13:34" pos:end="13:48"><name pos:start="13:34" pos:end="13:41">get_bits</name><argument_list pos:start="13:42" pos:end="13:48">(<argument pos:start="13:43" pos:end="13:44"><expr pos:start="13:43" pos:end="13:44"><name pos:start="13:43" pos:end="13:44">gb</name></expr></argument>, <argument pos:start="13:47" pos:end="13:47"><expr pos:start="13:47" pos:end="13:47"><literal type="number" pos:start="13:47" pos:end="13:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:47"><expr pos:start="15:5" pos:end="15:46"><name pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:7">ptl</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:26">general_tier_flag</name></name>     <operator pos:start="15:32" pos:end="15:32">=</operator> <call pos:start="15:34" pos:end="15:46"><name pos:start="15:34" pos:end="15:42">get_bits1</name><argument_list pos:start="15:43" pos:end="15:46">(<argument pos:start="15:44" pos:end="15:45"><expr pos:start="15:44" pos:end="15:45"><name pos:start="15:44" pos:end="15:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:49"><expr pos:start="17:5" pos:end="17:48"><name pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:7">ptl</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:28">general_profile_idc</name></name>   <operator pos:start="17:32" pos:end="17:32">=</operator> <call pos:start="17:34" pos:end="17:48"><name pos:start="17:34" pos:end="17:41">get_bits</name><argument_list pos:start="17:42" pos:end="17:48">(<argument pos:start="17:43" pos:end="17:44"><expr pos:start="17:43" pos:end="17:44"><name pos:start="17:43" pos:end="17:44">gb</name></expr></argument>, <argument pos:start="17:47" pos:end="17:47"><expr pos:start="17:47" pos:end="17:47"><literal type="number" pos:start="17:47" pos:end="17:47">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="19:5" pos:end="21:67">for <control pos:start="19:9" pos:end="19:28">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:23"><expr pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <literal type="number" pos:start="19:21" pos:end="19:22">32</literal></expr>;</condition> <incr pos:start="19:25" pos:end="19:27"><expr pos:start="19:25" pos:end="19:27"><name pos:start="19:25" pos:end="19:25">i</name><operator pos:start="19:26" pos:end="19:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="21:9" pos:end="21:67"><block_content pos:start="21:9" pos:end="21:67">

        <expr_stmt pos:start="21:9" pos:end="21:67"><expr pos:start="21:9" pos:end="21:66"><name pos:start="21:9" pos:end="21:50"><name pos:start="21:9" pos:end="21:11">ptl</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:47">general_profile_compatibility_flag</name><index pos:start="21:48" pos:end="21:50">[<expr pos:start="21:49" pos:end="21:49"><name pos:start="21:49" pos:end="21:49">i</name></expr>]</index></name> <operator pos:start="21:52" pos:end="21:52">=</operator> <call pos:start="21:54" pos:end="21:66"><name pos:start="21:54" pos:end="21:62">get_bits1</name><argument_list pos:start="21:63" pos:end="21:66">(<argument pos:start="21:64" pos:end="21:65"><expr pos:start="21:64" pos:end="21:65"><name pos:start="21:64" pos:end="21:65">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><call pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:14">skip_bits1</name><argument_list pos:start="23:15" pos:end="23:18">(<argument pos:start="23:16" pos:end="23:17"><expr pos:start="23:16" pos:end="23:17"><name pos:start="23:16" pos:end="23:17">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="23:21" pos:end="23:54">// general_progressive_source_flag</comment>

    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><call pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:14">skip_bits1</name><argument_list pos:start="25:15" pos:end="25:18">(<argument pos:start="25:16" pos:end="25:17"><expr pos:start="25:16" pos:end="25:17"><name pos:start="25:16" pos:end="25:17">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="25:21" pos:end="25:53">// general_interlaced_source_flag</comment>

    <expr_stmt pos:start="27:5" pos:end="27:19"><expr pos:start="27:5" pos:end="27:18"><call pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:14">skip_bits1</name><argument_list pos:start="27:15" pos:end="27:18">(<argument pos:start="27:16" pos:end="27:17"><expr pos:start="27:16" pos:end="27:17"><name pos:start="27:16" pos:end="27:17">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="27:21" pos:end="27:57">// general_non_packed_constraint_flag</comment>

    <expr_stmt pos:start="29:5" pos:end="29:19"><expr pos:start="29:5" pos:end="29:18"><call pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:14">skip_bits1</name><argument_list pos:start="29:15" pos:end="29:18">(<argument pos:start="29:16" pos:end="29:17"><expr pos:start="29:16" pos:end="29:17"><name pos:start="29:16" pos:end="29:17">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="29:21" pos:end="29:57">// general_frame_only_constraint_flag</comment>

    <if_stmt pos:start="31:5" pos:end="33:18"><if pos:start="31:5" pos:end="33:18">if <condition pos:start="31:8" pos:end="31:30">(<expr pos:start="31:9" pos:end="31:29"><call pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:16">get_bits</name><argument_list pos:start="31:17" pos:end="31:24">(<argument pos:start="31:18" pos:end="31:19"><expr pos:start="31:18" pos:end="31:19"><name pos:start="31:18" pos:end="31:19">gb</name></expr></argument>, <argument pos:start="31:22" pos:end="31:23"><expr pos:start="31:22" pos:end="31:23"><literal type="number" pos:start="31:22" pos:end="31:23">16</literal></expr></argument>)</argument_list></call> <operator pos:start="31:26" pos:end="31:27">!=</operator> <literal type="number" pos:start="31:29" pos:end="31:29">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:18"><block_content pos:start="33:9" pos:end="33:18"> <comment type="line" pos:start="31:32" pos:end="31:65">// XXX_reserved_zero_44bits[0..15]</comment>

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="37:18"><if pos:start="35:5" pos:end="37:18">if <condition pos:start="35:8" pos:end="35:30">(<expr pos:start="35:9" pos:end="35:29"><call pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:16">get_bits</name><argument_list pos:start="35:17" pos:end="35:24">(<argument pos:start="35:18" pos:end="35:19"><expr pos:start="35:18" pos:end="35:19"><name pos:start="35:18" pos:end="35:19">gb</name></expr></argument>, <argument pos:start="35:22" pos:end="35:23"><expr pos:start="35:22" pos:end="35:23"><literal type="number" pos:start="35:22" pos:end="35:23">16</literal></expr></argument>)</argument_list></call> <operator pos:start="35:26" pos:end="35:27">!=</operator> <literal type="number" pos:start="35:29" pos:end="35:29">0</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:18"><block_content pos:start="37:9" pos:end="37:18"> <comment type="line" pos:start="35:32" pos:end="35:66">// XXX_reserved_zero_44bits[16..31]</comment>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="41:18"><if pos:start="39:5" pos:end="41:18">if <condition pos:start="39:8" pos:end="39:30">(<expr pos:start="39:9" pos:end="39:29"><call pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:16">get_bits</name><argument_list pos:start="39:17" pos:end="39:24">(<argument pos:start="39:18" pos:end="39:19"><expr pos:start="39:18" pos:end="39:19"><name pos:start="39:18" pos:end="39:19">gb</name></expr></argument>, <argument pos:start="39:22" pos:end="39:23"><expr pos:start="39:22" pos:end="39:23"><literal type="number" pos:start="39:22" pos:end="39:23">12</literal></expr></argument>)</argument_list></call> <operator pos:start="39:26" pos:end="39:27">!=</operator> <literal type="number" pos:start="39:29" pos:end="39:29">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:18"><block_content pos:start="41:9" pos:end="41:18"> <comment type="line" pos:start="39:32" pos:end="39:66">// XXX_reserved_zero_44bits[32..43]</comment>

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:45"><expr pos:start="45:5" pos:end="45:44"><name pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:7">ptl</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:26">general_level_idc</name></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <call pos:start="45:30" pos:end="45:44"><name pos:start="45:30" pos:end="45:37">get_bits</name><argument_list pos:start="45:38" pos:end="45:44">(<argument pos:start="45:39" pos:end="45:40"><expr pos:start="45:39" pos:end="45:40"><name pos:start="45:39" pos:end="45:40">gb</name></expr></argument>, <argument pos:start="45:43" pos:end="45:43"><expr pos:start="45:43" pos:end="45:43"><literal type="number" pos:start="45:43" pos:end="45:43">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="47:5" pos:end="53:5">for <control pos:start="47:9" pos:end="47:48">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:43"><expr pos:start="47:17" pos:end="47:42"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <name pos:start="47:21" pos:end="47:38">max_num_sub_layers</name> <operator pos:start="47:40" pos:end="47:40">-</operator> <literal type="number" pos:start="47:42" pos:end="47:42">1</literal></expr>;</condition> <incr pos:start="47:45" pos:end="47:47"><expr pos:start="47:45" pos:end="47:47"><name pos:start="47:45" pos:end="47:45">i</name><operator pos:start="47:46" pos:end="47:47">++</operator></expr></incr>)</control> <block pos:start="47:50" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:63">

        <expr_stmt pos:start="49:9" pos:end="49:63"><expr pos:start="49:9" pos:end="49:62"><name pos:start="49:9" pos:end="49:46"><name pos:start="49:9" pos:end="49:11">ptl</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:43">sub_layer_profile_present_flag</name><index pos:start="49:44" pos:end="49:46">[<expr pos:start="49:45" pos:end="49:45"><name pos:start="49:45" pos:end="49:45">i</name></expr>]</index></name> <operator pos:start="49:48" pos:end="49:48">=</operator> <call pos:start="49:50" pos:end="49:62"><name pos:start="49:50" pos:end="49:58">get_bits1</name><argument_list pos:start="49:59" pos:end="49:62">(<argument pos:start="49:60" pos:end="49:61"><expr pos:start="49:60" pos:end="49:61"><name pos:start="49:60" pos:end="49:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:63"><expr pos:start="51:9" pos:end="51:62"><name pos:start="51:9" pos:end="51:44"><name pos:start="51:9" pos:end="51:11">ptl</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:41">sub_layer_level_present_flag</name><index pos:start="51:42" pos:end="51:44">[<expr pos:start="51:43" pos:end="51:43"><name pos:start="51:43" pos:end="51:43">i</name></expr>]</index></name>   <operator pos:start="51:48" pos:end="51:48">=</operator> <call pos:start="51:50" pos:end="51:62"><name pos:start="51:50" pos:end="51:58">get_bits1</name><argument_list pos:start="51:59" pos:end="51:62">(<argument pos:start="51:60" pos:end="51:61"><expr pos:start="51:60" pos:end="51:61"><name pos:start="51:60" pos:end="51:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="55:5" pos:end="59:29"><if pos:start="55:5" pos:end="59:29">if <condition pos:start="55:8" pos:end="55:35">(<expr pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:26">max_num_sub_layers</name> <operator pos:start="55:28" pos:end="55:28">-</operator> <literal type="number" pos:start="55:30" pos:end="55:30">1</literal> <operator pos:start="55:32" pos:end="55:32">&gt;</operator> <literal type="number" pos:start="55:34" pos:end="55:34">0</literal></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="59:29"><block_content pos:start="57:9" pos:end="59:29">

        <for pos:start="57:9" pos:end="59:29">for <control pos:start="57:13" pos:end="57:52">(<init pos:start="57:14" pos:end="57:40"><expr pos:start="57:14" pos:end="57:39"><name pos:start="57:14" pos:end="57:14">i</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <name pos:start="57:18" pos:end="57:35">max_num_sub_layers</name> <operator pos:start="57:37" pos:end="57:37">-</operator> <literal type="number" pos:start="57:39" pos:end="57:39">1</literal></expr>;</init> <condition pos:start="57:42" pos:end="57:47"><expr pos:start="57:42" pos:end="57:46"><name pos:start="57:42" pos:end="57:42">i</name> <operator pos:start="57:44" pos:end="57:44">&lt;</operator> <literal type="number" pos:start="57:46" pos:end="57:46">8</literal></expr>;</condition> <incr pos:start="57:49" pos:end="57:51"><expr pos:start="57:49" pos:end="57:51"><name pos:start="57:49" pos:end="57:49">i</name><operator pos:start="57:50" pos:end="57:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="59:13" pos:end="59:29"><block_content pos:start="59:13" pos:end="59:29">

            <expr_stmt pos:start="59:13" pos:end="59:29"><expr pos:start="59:13" pos:end="59:28"><call pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:21">skip_bits</name><argument_list pos:start="59:22" pos:end="59:28">(<argument pos:start="59:23" pos:end="59:24"><expr pos:start="59:23" pos:end="59:24"><name pos:start="59:23" pos:end="59:24">gb</name></expr></argument>, <argument pos:start="59:27" pos:end="59:27"><expr pos:start="59:27" pos:end="59:27"><literal type="number" pos:start="59:27" pos:end="59:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>  <comment type="line" pos:start="59:32" pos:end="59:56">// reserved_zero_2bits[i]</comment>

    <for pos:start="61:5" pos:end="103:5">for <control pos:start="61:9" pos:end="61:48">(<init pos:start="61:10" pos:end="61:15"><expr pos:start="61:10" pos:end="61:14"><name pos:start="61:10" pos:end="61:10">i</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <literal type="number" pos:start="61:14" pos:end="61:14">0</literal></expr>;</init> <condition pos:start="61:17" pos:end="61:43"><expr pos:start="61:17" pos:end="61:42"><name pos:start="61:17" pos:end="61:17">i</name> <operator pos:start="61:19" pos:end="61:19">&lt;</operator> <name pos:start="61:21" pos:end="61:38">max_num_sub_layers</name> <operator pos:start="61:40" pos:end="61:40">-</operator> <literal type="number" pos:start="61:42" pos:end="61:42">1</literal></expr>;</condition> <incr pos:start="61:45" pos:end="61:47"><expr pos:start="61:45" pos:end="61:47"><name pos:start="61:45" pos:end="61:45">i</name><operator pos:start="61:46" pos:end="61:47">++</operator></expr></incr>)</control> <block pos:start="61:50" pos:end="103:5">{<block_content pos:start="63:9" pos:end="101:58">

        <if_stmt pos:start="63:9" pos:end="97:9"><if pos:start="63:9" pos:end="97:9">if <condition pos:start="63:12" pos:end="63:51">(<expr pos:start="63:13" pos:end="63:50"><name pos:start="63:13" pos:end="63:50"><name pos:start="63:13" pos:end="63:15">ptl</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:47">sub_layer_profile_present_flag</name><index pos:start="63:48" pos:end="63:50">[<expr pos:start="63:49" pos:end="63:49"><name pos:start="63:49" pos:end="63:49">i</name></expr>]</index></name></expr>)</condition> <block pos:start="63:53" pos:end="97:9">{<block_content pos:start="65:13" pos:end="95:26">

            <expr_stmt pos:start="65:13" pos:end="65:62"><expr pos:start="65:13" pos:end="65:61"><name pos:start="65:13" pos:end="65:43"><name pos:start="65:13" pos:end="65:15">ptl</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:40">sub_layer_profile_space</name><index pos:start="65:41" pos:end="65:43">[<expr pos:start="65:42" pos:end="65:42"><name pos:start="65:42" pos:end="65:42">i</name></expr>]</index></name> <operator pos:start="65:45" pos:end="65:45">=</operator> <call pos:start="65:47" pos:end="65:61"><name pos:start="65:47" pos:end="65:54">get_bits</name><argument_list pos:start="65:55" pos:end="65:61">(<argument pos:start="65:56" pos:end="65:57"><expr pos:start="65:56" pos:end="65:57"><name pos:start="65:56" pos:end="65:57">gb</name></expr></argument>, <argument pos:start="65:60" pos:end="65:60"><expr pos:start="65:60" pos:end="65:60"><literal type="number" pos:start="65:60" pos:end="65:60">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:62"><expr pos:start="67:13" pos:end="67:61"><name pos:start="67:13" pos:end="67:39"><name pos:start="67:13" pos:end="67:15">ptl</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:36">sub_layer_tier_flag</name><index pos:start="67:37" pos:end="67:39">[<expr pos:start="67:38" pos:end="67:38"><name pos:start="67:38" pos:end="67:38">i</name></expr>]</index></name>     <operator pos:start="67:45" pos:end="67:45">=</operator> <call pos:start="67:47" pos:end="67:61"><name pos:start="67:47" pos:end="67:54">get_bits</name><argument_list pos:start="67:55" pos:end="67:61">(<argument pos:start="67:56" pos:end="67:57"><expr pos:start="67:56" pos:end="67:57"><name pos:start="67:56" pos:end="67:57">gb</name></expr></argument>, <argument pos:start="67:60" pos:end="67:60"><expr pos:start="67:60" pos:end="67:60"><literal type="number" pos:start="67:60" pos:end="67:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:62"><expr pos:start="69:13" pos:end="69:61"><name pos:start="69:13" pos:end="69:41"><name pos:start="69:13" pos:end="69:15">ptl</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:38">sub_layer_profile_idc</name><index pos:start="69:39" pos:end="69:41">[<expr pos:start="69:40" pos:end="69:40"><name pos:start="69:40" pos:end="69:40">i</name></expr>]</index></name>   <operator pos:start="69:45" pos:end="69:45">=</operator> <call pos:start="69:47" pos:end="69:61"><name pos:start="69:47" pos:end="69:54">get_bits</name><argument_list pos:start="69:55" pos:end="69:61">(<argument pos:start="69:56" pos:end="69:57"><expr pos:start="69:56" pos:end="69:57"><name pos:start="69:56" pos:end="69:57">gb</name></expr></argument>, <argument pos:start="69:60" pos:end="69:60"><expr pos:start="69:60" pos:end="69:60"><literal type="number" pos:start="69:60" pos:end="69:60">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="71:13" pos:end="73:81">for <control pos:start="71:17" pos:end="71:36">(<init pos:start="71:18" pos:end="71:23"><expr pos:start="71:18" pos:end="71:22"><name pos:start="71:18" pos:end="71:18">j</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr>;</init> <condition pos:start="71:25" pos:end="71:31"><expr pos:start="71:25" pos:end="71:30"><name pos:start="71:25" pos:end="71:25">j</name> <operator pos:start="71:27" pos:end="71:27">&lt;</operator> <literal type="number" pos:start="71:29" pos:end="71:30">32</literal></expr>;</condition> <incr pos:start="71:33" pos:end="71:35"><expr pos:start="71:33" pos:end="71:35"><name pos:start="71:33" pos:end="71:33">j</name><operator pos:start="71:34" pos:end="71:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="73:17" pos:end="73:81"><block_content pos:start="73:17" pos:end="73:81">

                <expr_stmt pos:start="73:17" pos:end="73:81"><expr pos:start="73:17" pos:end="73:80"><name pos:start="73:17" pos:end="73:64"><name pos:start="73:17" pos:end="73:19">ptl</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:58">sub_layer_profile_compatibility_flags</name><index pos:start="73:59" pos:end="73:61">[<expr pos:start="73:60" pos:end="73:60"><name pos:start="73:60" pos:end="73:60">i</name></expr>]</index><index pos:start="73:62" pos:end="73:64">[<expr pos:start="73:63" pos:end="73:63"><name pos:start="73:63" pos:end="73:63">j</name></expr>]</index></name> <operator pos:start="73:66" pos:end="73:66">=</operator> <call pos:start="73:68" pos:end="73:80"><name pos:start="73:68" pos:end="73:76">get_bits1</name><argument_list pos:start="73:77" pos:end="73:80">(<argument pos:start="73:78" pos:end="73:79"><expr pos:start="73:78" pos:end="73:79"><name pos:start="73:78" pos:end="73:79">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="75:13" pos:end="75:27"><expr pos:start="75:13" pos:end="75:26"><call pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:22">skip_bits1</name><argument_list pos:start="75:23" pos:end="75:26">(<argument pos:start="75:24" pos:end="75:25"><expr pos:start="75:24" pos:end="75:25"><name pos:start="75:24" pos:end="75:25">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="75:29" pos:end="75:64">// sub_layer_progressive_source_flag</comment>

            <expr_stmt pos:start="77:13" pos:end="77:27"><expr pos:start="77:13" pos:end="77:26"><call pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:22">skip_bits1</name><argument_list pos:start="77:23" pos:end="77:26">(<argument pos:start="77:24" pos:end="77:25"><expr pos:start="77:24" pos:end="77:25"><name pos:start="77:24" pos:end="77:25">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="77:29" pos:end="77:63">// sub_layer_interlaced_source_flag</comment>

            <expr_stmt pos:start="79:13" pos:end="79:27"><expr pos:start="79:13" pos:end="79:26"><call pos:start="79:13" pos:end="79:26"><name pos:start="79:13" pos:end="79:22">skip_bits1</name><argument_list pos:start="79:23" pos:end="79:26">(<argument pos:start="79:24" pos:end="79:25"><expr pos:start="79:24" pos:end="79:25"><name pos:start="79:24" pos:end="79:25">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="79:29" pos:end="79:67">// sub_layer_non_packed_constraint_flag</comment>

            <expr_stmt pos:start="81:13" pos:end="81:27"><expr pos:start="81:13" pos:end="81:26"><call pos:start="81:13" pos:end="81:26"><name pos:start="81:13" pos:end="81:22">skip_bits1</name><argument_list pos:start="81:23" pos:end="81:26">(<argument pos:start="81:24" pos:end="81:25"><expr pos:start="81:24" pos:end="81:25"><name pos:start="81:24" pos:end="81:25">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="81:29" pos:end="81:67">// sub_layer_frame_only_constraint_flag</comment>



            <if_stmt pos:start="85:13" pos:end="87:26"><if pos:start="85:13" pos:end="87:26">if <condition pos:start="85:16" pos:end="85:38">(<expr pos:start="85:17" pos:end="85:37"><call pos:start="85:17" pos:end="85:32"><name pos:start="85:17" pos:end="85:24">get_bits</name><argument_list pos:start="85:25" pos:end="85:32">(<argument pos:start="85:26" pos:end="85:27"><expr pos:start="85:26" pos:end="85:27"><name pos:start="85:26" pos:end="85:27">gb</name></expr></argument>, <argument pos:start="85:30" pos:end="85:31"><expr pos:start="85:30" pos:end="85:31"><literal type="number" pos:start="85:30" pos:end="85:31">16</literal></expr></argument>)</argument_list></call> <operator pos:start="85:34" pos:end="85:35">!=</operator> <literal type="number" pos:start="85:37" pos:end="85:37">0</literal></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:26"><block_content pos:start="87:17" pos:end="87:26"> <comment type="line" pos:start="85:40" pos:end="85:79">// sub_layer_reserved_zero_44bits[0..15]</comment>

                <return pos:start="87:17" pos:end="87:26">return <expr pos:start="87:24" pos:end="87:25"><operator pos:start="87:24" pos:end="87:24">-</operator><literal type="number" pos:start="87:25" pos:end="87:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="89:13" pos:end="91:26"><if pos:start="89:13" pos:end="91:26">if <condition pos:start="89:16" pos:end="89:38">(<expr pos:start="89:17" pos:end="89:37"><call pos:start="89:17" pos:end="89:32"><name pos:start="89:17" pos:end="89:24">get_bits</name><argument_list pos:start="89:25" pos:end="89:32">(<argument pos:start="89:26" pos:end="89:27"><expr pos:start="89:26" pos:end="89:27"><name pos:start="89:26" pos:end="89:27">gb</name></expr></argument>, <argument pos:start="89:30" pos:end="89:31"><expr pos:start="89:30" pos:end="89:31"><literal type="number" pos:start="89:30" pos:end="89:31">16</literal></expr></argument>)</argument_list></call> <operator pos:start="89:34" pos:end="89:35">!=</operator> <literal type="number" pos:start="89:37" pos:end="89:37">0</literal></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:26"><block_content pos:start="91:17" pos:end="91:26"> <comment type="line" pos:start="89:40" pos:end="89:80">// sub_layer_reserved_zero_44bits[16..31]</comment>

                <return pos:start="91:17" pos:end="91:26">return <expr pos:start="91:24" pos:end="91:25"><operator pos:start="91:24" pos:end="91:24">-</operator><literal type="number" pos:start="91:25" pos:end="91:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="93:13" pos:end="95:26"><if pos:start="93:13" pos:end="95:26">if <condition pos:start="93:16" pos:end="93:38">(<expr pos:start="93:17" pos:end="93:37"><call pos:start="93:17" pos:end="93:32"><name pos:start="93:17" pos:end="93:24">get_bits</name><argument_list pos:start="93:25" pos:end="93:32">(<argument pos:start="93:26" pos:end="93:27"><expr pos:start="93:26" pos:end="93:27"><name pos:start="93:26" pos:end="93:27">gb</name></expr></argument>, <argument pos:start="93:30" pos:end="93:31"><expr pos:start="93:30" pos:end="93:31"><literal type="number" pos:start="93:30" pos:end="93:31">12</literal></expr></argument>)</argument_list></call> <operator pos:start="93:34" pos:end="93:35">!=</operator> <literal type="number" pos:start="93:37" pos:end="93:37">0</literal></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:26"><block_content pos:start="95:17" pos:end="95:26"> <comment type="line" pos:start="93:40" pos:end="93:80">// sub_layer_reserved_zero_44bits[32..43]</comment>

                <return pos:start="95:17" pos:end="95:26">return <expr pos:start="95:24" pos:end="95:25"><operator pos:start="95:24" pos:end="95:24">-</operator><literal type="number" pos:start="95:25" pos:end="95:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="99:9" pos:end="101:58"><if pos:start="99:9" pos:end="101:58">if <condition pos:start="99:12" pos:end="99:49">(<expr pos:start="99:13" pos:end="99:48"><name pos:start="99:13" pos:end="99:48"><name pos:start="99:13" pos:end="99:15">ptl</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:45">sub_layer_level_present_flag</name><index pos:start="99:46" pos:end="99:48">[<expr pos:start="99:47" pos:end="99:47"><name pos:start="99:47" pos:end="99:47">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:58"><block_content pos:start="101:13" pos:end="101:58">

            <expr_stmt pos:start="101:13" pos:end="101:58"><expr pos:start="101:13" pos:end="101:57"><name pos:start="101:13" pos:end="101:39"><name pos:start="101:13" pos:end="101:15">ptl</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:36">sub_layer_level_idc</name><index pos:start="101:37" pos:end="101:39">[<expr pos:start="101:38" pos:end="101:38"><name pos:start="101:38" pos:end="101:38">i</name></expr>]</index></name> <operator pos:start="101:41" pos:end="101:41">=</operator> <call pos:start="101:43" pos:end="101:57"><name pos:start="101:43" pos:end="101:50">get_bits</name><argument_list pos:start="101:51" pos:end="101:57">(<argument pos:start="101:52" pos:end="101:53"><expr pos:start="101:52" pos:end="101:53"><name pos:start="101:52" pos:end="101:53">gb</name></expr></argument>, <argument pos:start="101:56" pos:end="101:56"><expr pos:start="101:56" pos:end="101:56"><literal type="number" pos:start="101:56" pos:end="101:56">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="105:5" pos:end="105:13">return <expr pos:start="105:12" pos:end="105:12"><literal type="number" pos:start="105:12" pos:end="105:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
