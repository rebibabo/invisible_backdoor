<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4544.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">raw_open</name><parameter_list pos:start="1:20" pos:end="1:74">(<parameter pos:start="1:21" pos:end="1:40"><decl pos:start="1:21" pos:end="1:40"><type pos:start="1:21" pos:end="1:40"><name pos:start="1:21" pos:end="1:36">BlockDriverState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">bs</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:62"><decl pos:start="1:43" pos:end="1:62"><type pos:start="1:43" pos:end="1:62"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:62">filename</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:73"><decl pos:start="1:65" pos:end="1:73"><type pos:start="1:65" pos:end="1:73"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:73">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">BDRVRawState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:32">= <expr pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:24">bs</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:20">access_flags</name></decl>, <decl pos:start="7:23" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:34">create_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">DWORD</name></type> <name pos:start="9:11" pos:end="9:20">overlapped</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:11">type</name></name> <operator pos:start="13:13" pos:end="13:13">=</operator> <name pos:start="13:15" pos:end="13:24">FTYPE_FILE</name></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:42">(<expr pos:start="17:9" pos:end="17:41"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:14">flags</name> <operator pos:start="17:16" pos:end="17:16">&amp;</operator> <name pos:start="17:18" pos:end="17:30">BDRV_O_ACCESS</name><operator pos:start="17:31" pos:end="17:31">)</operator> <operator pos:start="17:33" pos:end="17:34">==</operator> <name pos:start="17:36" pos:end="17:41">O_RDWR</name></expr>)</condition> <block pos:start="17:44" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:52">

        <expr_stmt pos:start="19:9" pos:end="19:52"><expr pos:start="19:9" pos:end="19:51"><name pos:start="19:9" pos:end="19:20">access_flags</name> <operator pos:start="19:22" pos:end="19:22">=</operator> <name pos:start="19:24" pos:end="19:35">GENERIC_READ</name> <operator pos:start="19:37" pos:end="19:37">|</operator> <name pos:start="19:39" pos:end="19:51">GENERIC_WRITE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="25:5">else <block pos:start="21:12" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:36">

        <expr_stmt pos:start="23:9" pos:end="23:36"><expr pos:start="23:9" pos:end="23:35"><name pos:start="23:9" pos:end="23:20">access_flags</name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:35">GENERIC_READ</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="27:5" pos:end="38:0"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:29">(<expr pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:13">flags</name> <operator pos:start="27:15" pos:end="27:15">&amp;</operator> <name pos:start="27:17" pos:end="27:28">BDRV_O_CREAT</name></expr>)</condition> <block pos:start="27:31" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:37">

        <expr_stmt pos:start="29:9" pos:end="29:37"><expr pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:20">create_flags</name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:36">CREATE_ALWAYS</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="38:0">else <block pos:start="31:12" pos:end="38:0">{<block_content pos:start="33:9" pos:end="33:37">

        <expr_stmt pos:start="33:9" pos:end="33:37"><expr pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:20">create_flags</name> <operator pos:start="33:22" pos:end="33:22">=</operator> <name pos:start="33:24" pos:end="33:36">OPEN_EXISTING</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:ifdef pos:start="37:1" pos:end="37:16">#<cpp:directive pos:start="37:2" pos:end="37:6">ifdef</cpp:directive> <name pos:start="37:8" pos:end="37:16">QEMU_TOOL</name></cpp:ifdef>

    <expr_stmt pos:start="39:5" pos:end="42:0"><expr pos:start="39:5" pos:end="39:38"><name pos:start="39:5" pos:end="39:14">overlapped</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:38">FILE_ATTRIBUTE_NORMAL</name></expr>;</expr_stmt>

<cpp:else pos:start="41:1" pos:end="41:5">#<cpp:directive pos:start="41:2" pos:end="41:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="43:5" pos:end="46:0"><expr pos:start="43:5" pos:end="43:37"><name pos:start="43:5" pos:end="43:14">overlapped</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <name pos:start="43:18" pos:end="43:37">FILE_FLAG_OVERLAPPED</name></expr>;</expr_stmt>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="47:5" pos:end="51:58"><expr pos:start="47:5" pos:end="51:57"><name pos:start="47:5" pos:end="47:12"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:12">hfile</name></name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="51:57"><name pos:start="47:16" pos:end="47:25">CreateFile</name><argument_list pos:start="47:26" pos:end="51:57">(<argument pos:start="47:27" pos:end="47:34"><expr pos:start="47:27" pos:end="47:34"><name pos:start="47:27" pos:end="47:34">filename</name></expr></argument>, <argument pos:start="47:37" pos:end="47:48"><expr pos:start="47:37" pos:end="47:48"><name pos:start="47:37" pos:end="47:48">access_flags</name></expr></argument>, 

                          <argument pos:start="49:27" pos:end="49:41"><expr pos:start="49:27" pos:end="49:41"><name pos:start="49:27" pos:end="49:41">FILE_SHARE_READ</name></expr></argument>, <argument pos:start="49:44" pos:end="49:47"><expr pos:start="49:44" pos:end="49:47"><name pos:start="49:44" pos:end="49:47">NULL</name></expr></argument>,

                          <argument pos:start="51:27" pos:end="51:38"><expr pos:start="51:27" pos:end="51:38"><name pos:start="51:27" pos:end="51:38">create_flags</name></expr></argument>, <argument pos:start="51:41" pos:end="51:50"><expr pos:start="51:41" pos:end="51:50"><name pos:start="51:41" pos:end="51:50">overlapped</name></expr></argument>, <argument pos:start="51:53" pos:end="51:56"><expr pos:start="51:53" pos:end="51:56"><name pos:start="51:53" pos:end="51:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:18"><if pos:start="53:5" pos:end="55:18">if <condition pos:start="53:8" pos:end="53:41">(<expr pos:start="53:9" pos:end="53:40"><name pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:16">hfile</name></name> <operator pos:start="53:18" pos:end="53:19">==</operator> <name pos:start="53:21" pos:end="53:40">INVALID_HANDLE_VALUE</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:18"><block_content pos:start="55:9" pos:end="55:18"> 

        <return pos:start="55:9" pos:end="55:18">return <expr pos:start="55:16" pos:end="55:17"><operator pos:start="55:16" pos:end="55:16">-</operator><literal type="number" pos:start="55:17" pos:end="55:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
