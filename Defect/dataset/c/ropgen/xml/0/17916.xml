<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17916.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">vivo_probe</name><parameter_list pos:start="1:22" pos:end="1:37">(<parameter pos:start="1:23" pos:end="1:36"><decl pos:start="1:23" pos:end="1:36"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:33">AVProbeData</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:29">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:25"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:18">unsigned</name> <name pos:start="5:20" pos:end="5:23">char</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:28">buf</name> <init pos:start="5:30" pos:end="5:37">= <expr pos:start="5:32" pos:end="5:37"><name pos:start="5:32" pos:end="5:37"><name pos:start="5:32" pos:end="5:32">p</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:37">buf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">unsigned</name></type> <name pos:start="7:14" pos:end="7:14">c</name></decl>, <decl pos:start="7:17" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:17" pos:end="7:22">length</name> <init pos:start="7:24" pos:end="7:26">= <expr pos:start="7:26" pos:end="7:26"><literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="line" pos:start="11:5" pos:end="11:68">// stream must start with packet of type 0 and sequence number 0</comment>

    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if <condition pos:start="13:8" pos:end="13:20">(<expr pos:start="13:9" pos:end="13:19"><operator pos:start="13:9" pos:end="13:9">*</operator><name pos:start="13:10" pos:end="13:12">buf</name><operator pos:start="13:13" pos:end="13:14">++</operator> <operator pos:start="13:16" pos:end="13:17">!=</operator> <literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="19:5" pos:end="19:43">// read at most 2 bytes of coded length</comment>

    <expr_stmt pos:start="21:5" pos:end="21:15"><expr pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:5">c</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <operator pos:start="21:9" pos:end="21:9">*</operator><name pos:start="21:10" pos:end="21:12">buf</name><operator pos:start="21:13" pos:end="21:14">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:10">length</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <name pos:start="23:14" pos:end="23:14">c</name> <operator pos:start="23:16" pos:end="23:16">&amp;</operator> <literal type="number" pos:start="23:18" pos:end="23:21">0x7F</literal></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:17">(<expr pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:9">c</name> <operator pos:start="25:11" pos:end="25:11">&amp;</operator> <literal type="number" pos:start="25:13" pos:end="25:16">0x80</literal></expr>)</condition> <block pos:start="25:19" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:44">

        <expr_stmt pos:start="27:9" pos:end="27:19"><expr pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:9">c</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <operator pos:start="27:13" pos:end="27:13">*</operator><name pos:start="27:14" pos:end="27:16">buf</name><operator pos:start="27:17" pos:end="27:18">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:14">length</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <operator pos:start="29:18" pos:end="29:18">(</operator><name pos:start="29:19" pos:end="29:24">length</name> <operator pos:start="29:26" pos:end="29:27">&lt;&lt;</operator> <literal type="number" pos:start="29:29" pos:end="29:29">7</literal><operator pos:start="29:30" pos:end="29:30">)</operator> <operator pos:start="29:32" pos:end="29:32">|</operator> <operator pos:start="29:34" pos:end="29:34">(</operator><name pos:start="29:35" pos:end="29:35">c</name> <operator pos:start="29:37" pos:end="29:37">&amp;</operator> <literal type="number" pos:start="29:39" pos:end="29:42">0x7F</literal><operator pos:start="29:43" pos:end="29:43">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="35:17"><if pos:start="33:5" pos:end="35:17">if <condition pos:start="33:8" pos:end="33:49">(<expr pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:9">c</name> <operator pos:start="33:11" pos:end="33:11">&amp;</operator> <literal type="number" pos:start="33:13" pos:end="33:16">0x80</literal> <operator pos:start="33:18" pos:end="33:19">||</operator> <name pos:start="33:21" pos:end="33:26">length</name> <operator pos:start="33:28" pos:end="33:28">&gt;</operator> <literal type="number" pos:start="33:30" pos:end="33:33">1024</literal> <operator pos:start="33:35" pos:end="33:36">||</operator> <name pos:start="33:38" pos:end="33:43">length</name> <operator pos:start="33:45" pos:end="33:45">&lt;</operator> <literal type="number" pos:start="33:47" pos:end="33:48">21</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:17"><block_content pos:start="35:9" pos:end="35:17">

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="41:17"><if pos:start="39:5" pos:end="41:17">if <condition pos:start="39:8" pos:end="39:45">(<expr pos:start="39:9" pos:end="39:44"><call pos:start="39:9" pos:end="39:44"><name pos:start="39:9" pos:end="39:14">memcmp</name><argument_list pos:start="39:15" pos:end="39:44">(<argument pos:start="39:16" pos:end="39:18"><expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">buf</name></expr></argument>, <argument pos:start="39:21" pos:end="39:39"><expr pos:start="39:21" pos:end="39:39"><literal type="string" pos:start="39:21" pos:end="39:39">"\r\nVersion:Vivo/"</literal></expr></argument>, <argument pos:start="39:42" pos:end="39:43"><expr pos:start="39:42" pos:end="39:43"><literal type="number" pos:start="39:42" pos:end="39:43">15</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:17"><block_content pos:start="41:9" pos:end="41:17">

        <return pos:start="41:9" pos:end="41:17">return <expr pos:start="41:16" pos:end="41:16"><literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:14"><expr pos:start="43:5" pos:end="43:13"><name pos:start="43:5" pos:end="43:7">buf</name> <operator pos:start="43:9" pos:end="43:10">+=</operator> <literal type="number" pos:start="43:12" pos:end="43:13">15</literal></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="49:17"><if pos:start="47:5" pos:end="49:17">if <condition pos:start="47:8" pos:end="47:33">(<expr pos:start="47:9" pos:end="47:32"><operator pos:start="47:9" pos:end="47:9">*</operator><name pos:start="47:10" pos:end="47:28"><name pos:start="47:10" pos:end="47:12">buf</name> <argument_list type="generic" pos:start="47:14" pos:end="47:28">&lt; <argument pos:start="47:16" pos:end="47:26"><expr pos:start="47:16" pos:end="47:26"><literal type="char" pos:start="47:16" pos:end="47:18">'0'</literal> <operator pos:start="47:20" pos:end="47:21">&amp;&amp;</operator> <operator pos:start="47:23" pos:end="47:23">*</operator><name pos:start="47:24" pos:end="47:26">buf</name></expr></argument> &gt;</argument_list></name> <literal type="char" pos:start="47:30" pos:end="47:32">'2'</literal></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:17"><block_content pos:start="49:9" pos:end="49:17">

        <return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="53:5" pos:end="53:29">return <expr pos:start="53:12" pos:end="53:28"><name pos:start="53:12" pos:end="53:28">AVPROBE_SCORE_MAX</name></expr>;</return>

</block_content>}</block></function>
</unit>
