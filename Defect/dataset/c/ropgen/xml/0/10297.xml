<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10297.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:10">mkimg</name><parameter_list pos:start="1:11" pos:end="1:63">(<parameter pos:start="1:12" pos:end="1:27"><decl pos:start="1:12" pos:end="1:27"><type pos:start="1:12" pos:end="1:27"><specifier pos:start="1:12" pos:end="1:16">const</specifier> <name pos:start="1:18" pos:end="1:21">char</name> <modifier pos:start="1:23" pos:end="1:23">*</modifier></type><name pos:start="1:24" pos:end="1:27">file</name></decl></parameter>, <parameter pos:start="1:30" pos:end="1:44"><decl pos:start="1:30" pos:end="1:44"><type pos:start="1:30" pos:end="1:44"><specifier pos:start="1:30" pos:end="1:34">const</specifier> <name pos:start="1:36" pos:end="1:39">char</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">fmt</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><name pos:start="1:47" pos:end="1:54">unsigned</name></type> <name pos:start="1:56" pos:end="1:62">size_mb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:19">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">gchar</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:14">cli</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">bool</name></type> <name pos:start="7:10" pos:end="7:12">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">rc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:10">GError</name> <modifier pos:start="11:12" pos:end="11:12">*</modifier></type><name pos:start="11:13" pos:end="11:15">err</name> <init pos:start="11:17" pos:end="11:22">= <expr pos:start="11:19" pos:end="11:22"><name pos:start="11:19" pos:end="11:22">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:23">qemu_img_path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">gchar</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:14">out</name></decl>, <decl pos:start="15:17" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:11"><modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:21">out2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">char</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:18">abs_path</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:17">qemu_img_path</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <call pos:start="21:21" pos:end="21:44"><name pos:start="21:21" pos:end="21:26">getenv</name><argument_list pos:start="21:27" pos:end="21:44">(<argument pos:start="21:28" pos:end="21:43"><expr pos:start="21:28" pos:end="21:43"><literal type="string" pos:start="21:28" pos:end="21:43">"QTEST_QEMU_IMG"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:12">abs_path</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:44"><name pos:start="23:16" pos:end="23:23">realpath</name><argument_list pos:start="23:24" pos:end="23:44">(<argument pos:start="23:25" pos:end="23:37"><expr pos:start="23:25" pos:end="23:37"><name pos:start="23:25" pos:end="23:37">qemu_img_path</name></expr></argument>, <argument pos:start="23:40" pos:end="23:43"><expr pos:start="23:40" pos:end="23:43"><name pos:start="23:40" pos:end="23:43">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><call pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:10">assert</name><argument_list pos:start="25:11" pos:end="25:25">(<argument pos:start="25:12" pos:end="25:24"><expr pos:start="25:12" pos:end="25:24"><name pos:start="25:12" pos:end="25:24">qemu_img_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="31:46"><expr pos:start="29:5" pos:end="31:45"><name pos:start="29:5" pos:end="29:7">cli</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="31:45"><name pos:start="29:11" pos:end="29:25">g_strdup_printf</name><argument_list pos:start="29:26" pos:end="31:45">(<argument pos:start="29:27" pos:end="29:50"><expr pos:start="29:27" pos:end="29:50"><literal type="string" pos:start="29:27" pos:end="29:50">"%s create -f %s %s %uM"</literal></expr></argument>, <argument pos:start="29:53" pos:end="29:60"><expr pos:start="29:53" pos:end="29:60"><name pos:start="29:53" pos:end="29:60">abs_path</name></expr></argument>,

                          <argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:29">fmt</name></expr></argument>, <argument pos:start="31:32" pos:end="31:35"><expr pos:start="31:32" pos:end="31:35"><name pos:start="31:32" pos:end="31:35">file</name></expr></argument>, <argument pos:start="31:38" pos:end="31:44"><expr pos:start="31:38" pos:end="31:44"><name pos:start="31:38" pos:end="31:44">size_mb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:65"><expr pos:start="33:5" pos:end="33:64"><name pos:start="33:5" pos:end="33:7">ret</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:64"><name pos:start="33:11" pos:end="33:35">g_spawn_command_line_sync</name><argument_list pos:start="33:36" pos:end="33:64">(<argument pos:start="33:37" pos:end="33:39"><expr pos:start="33:37" pos:end="33:39"><name pos:start="33:37" pos:end="33:39">cli</name></expr></argument>, <argument pos:start="33:42" pos:end="33:45"><expr pos:start="33:42" pos:end="33:45"><operator pos:start="33:42" pos:end="33:42">&amp;</operator><name pos:start="33:43" pos:end="33:45">out</name></expr></argument>, <argument pos:start="33:48" pos:end="33:52"><expr pos:start="33:48" pos:end="33:52"><operator pos:start="33:48" pos:end="33:48">&amp;</operator><name pos:start="33:49" pos:end="33:52">out2</name></expr></argument>, <argument pos:start="33:55" pos:end="33:57"><expr pos:start="33:55" pos:end="33:57"><operator pos:start="33:55" pos:end="33:55">&amp;</operator><name pos:start="33:56" pos:end="33:57">rc</name></expr></argument>, <argument pos:start="33:60" pos:end="33:63"><expr pos:start="33:60" pos:end="33:63"><operator pos:start="33:60" pos:end="33:60">&amp;</operator><name pos:start="33:61" pos:end="33:63">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:12">(<expr pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">err</name></expr>)</condition> <block pos:start="35:14" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:26">

        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><call pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:15">fprintf</name><argument_list pos:start="37:16" pos:end="37:45">(<argument pos:start="37:17" pos:end="37:22"><expr pos:start="37:17" pos:end="37:22"><name pos:start="37:17" pos:end="37:22">stderr</name></expr></argument>, <argument pos:start="37:25" pos:end="37:30"><expr pos:start="37:25" pos:end="37:30"><literal type="string" pos:start="37:25" pos:end="37:30">"%s\n"</literal></expr></argument>, <argument pos:start="37:33" pos:end="37:44"><expr pos:start="37:33" pos:end="37:44"><name pos:start="37:33" pos:end="37:44"><name pos:start="37:33" pos:end="37:35">err</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:44">message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:26"><expr pos:start="39:9" pos:end="39:25"><call pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:20">g_error_free</name><argument_list pos:start="39:21" pos:end="39:25">(<argument pos:start="39:22" pos:end="39:24"><expr pos:start="39:22" pos:end="39:24"><name pos:start="39:22" pos:end="39:24">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:26"><expr pos:start="43:5" pos:end="43:25"><call pos:start="43:5" pos:end="43:25"><name pos:start="43:5" pos:end="43:12">g_assert</name><argument_list pos:start="43:13" pos:end="43:25">(<argument pos:start="43:14" pos:end="43:24"><expr pos:start="43:14" pos:end="43:24"><name pos:start="43:14" pos:end="43:16">ret</name> <operator pos:start="43:18" pos:end="43:19">&amp;&amp;</operator> <operator pos:start="43:21" pos:end="43:21">!</operator><name pos:start="43:22" pos:end="43:24">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="47:5" pos:end="55:61">/* In glib 2.34, we have g_spawn_check_exit_status. in 2.12, we don't.

     * glib 2.43.91 implementation assumes that any non-zero is an error for

     * windows, but uses extra precautions for Linux. However,

     * 0 is only possible if the program exited normally, so that should be

     * sufficient for our purposes on all platforms, here. */</comment>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:11">(<expr pos:start="57:9" pos:end="57:10"><name pos:start="57:9" pos:end="57:10">rc</name></expr>)</condition> <block pos:start="57:13" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:66">

        <expr_stmt pos:start="59:9" pos:end="59:66"><expr pos:start="59:9" pos:end="59:65"><call pos:start="59:9" pos:end="59:65"><name pos:start="59:9" pos:end="59:15">fprintf</name><argument_list pos:start="59:16" pos:end="59:65">(<argument pos:start="59:17" pos:end="59:22"><expr pos:start="59:17" pos:end="59:22"><name pos:start="59:17" pos:end="59:22">stderr</name></expr></argument>, <argument pos:start="59:25" pos:end="59:60"><expr pos:start="59:25" pos:end="59:60"><literal type="string" pos:start="59:25" pos:end="59:60">"qemu-img returned status code %d\n"</literal></expr></argument>, <argument pos:start="59:63" pos:end="59:64"><expr pos:start="59:63" pos:end="59:64"><name pos:start="59:63" pos:end="59:64">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:18"><expr pos:start="63:5" pos:end="63:17"><call pos:start="63:5" pos:end="63:17"><name pos:start="63:5" pos:end="63:12">g_assert</name><argument_list pos:start="63:13" pos:end="63:17">(<argument pos:start="63:14" pos:end="63:16"><expr pos:start="63:14" pos:end="63:16"><operator pos:start="63:14" pos:end="63:14">!</operator><name pos:start="63:15" pos:end="63:16">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:16"><expr pos:start="67:5" pos:end="67:15"><call pos:start="67:5" pos:end="67:15"><name pos:start="67:5" pos:end="67:10">g_free</name><argument_list pos:start="67:11" pos:end="67:15">(<argument pos:start="67:12" pos:end="67:14"><expr pos:start="67:12" pos:end="67:14"><name pos:start="67:12" pos:end="67:14">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:17"><expr pos:start="69:5" pos:end="69:16"><call pos:start="69:5" pos:end="69:16"><name pos:start="69:5" pos:end="69:10">g_free</name><argument_list pos:start="69:11" pos:end="69:16">(<argument pos:start="69:12" pos:end="69:15"><expr pos:start="69:12" pos:end="69:15"><name pos:start="69:12" pos:end="69:15">out2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:16"><expr pos:start="71:5" pos:end="71:15"><call pos:start="71:5" pos:end="71:15"><name pos:start="71:5" pos:end="71:10">g_free</name><argument_list pos:start="71:11" pos:end="71:15">(<argument pos:start="71:12" pos:end="71:14"><expr pos:start="71:12" pos:end="71:14"><name pos:start="71:12" pos:end="71:14">cli</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:19"><expr pos:start="73:5" pos:end="73:18"><call pos:start="73:5" pos:end="73:18"><name pos:start="73:5" pos:end="73:8">free</name><argument_list pos:start="73:9" pos:end="73:18">(<argument pos:start="73:10" pos:end="73:17"><expr pos:start="73:10" pos:end="73:17"><name pos:start="73:10" pos:end="73:17">abs_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
