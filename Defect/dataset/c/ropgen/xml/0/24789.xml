<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24789.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">put_flac_codecpriv</name><parameter_list pos:start="1:30" pos:end="3:69">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:45"><decl pos:start="3:31" pos:end="3:45"><type pos:start="3:31" pos:end="3:45"><name pos:start="3:31" pos:end="3:41">AVIOContext</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:45">pb</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:68"><decl pos:start="3:48" pos:end="3:68"><type pos:start="3:48" pos:end="3:68"><name pos:start="3:48" pos:end="3:61">AVCodecContext</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:68">codec</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="85:1">{<block_content pos:start="7:5" pos:end="83:13">

    <decl_stmt pos:start="7:5" pos:end="11:75"><decl pos:start="7:5" pos:end="11:74"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:21">write_comment</name> <init pos:start="7:23" pos:end="11:74">= <expr pos:start="7:25" pos:end="11:74"><operator pos:start="7:25" pos:end="7:25">(</operator><name pos:start="7:26" pos:end="7:46"><name pos:start="7:26" pos:end="7:30">codec</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:46">channel_layout</name></name> <operator pos:start="7:48" pos:end="7:49">&amp;&amp;</operator>

                         <operator pos:start="9:26" pos:end="9:26">!</operator><operator pos:start="9:27" pos:end="9:27">(</operator><name pos:start="9:28" pos:end="9:48"><name pos:start="9:28" pos:end="9:32">codec</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:48">channel_layout</name></name> <operator pos:start="9:50" pos:end="9:50">&amp;</operator> <operator pos:start="9:52" pos:end="9:52">~</operator><literal type="number" pos:start="9:53" pos:end="9:62">0x3ffffULL</literal><operator pos:start="9:63" pos:end="9:63">)</operator> <operator pos:start="9:65" pos:end="9:66">&amp;&amp;</operator>

                         <operator pos:start="11:26" pos:end="11:26">!</operator><call pos:start="11:27" pos:end="11:73"><name pos:start="11:27" pos:end="11:50">ff_flac_is_native_layout</name><argument_list pos:start="11:51" pos:end="11:73">(<argument pos:start="11:52" pos:end="11:72"><expr pos:start="11:52" pos:end="11:72"><name pos:start="11:52" pos:end="11:72"><name pos:start="11:52" pos:end="11:56">codec</name><operator pos:start="11:57" pos:end="11:58">-&gt;</operator><name pos:start="11:59" pos:end="11:72">channel_layout</name></name></expr></argument>)</argument_list></call><operator pos:start="11:74" pos:end="11:74">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="15:51"><decl pos:start="13:5" pos:end="15:50"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="15:50">= <expr pos:start="13:15" pos:end="15:50"><call pos:start="13:15" pos:end="15:50"><name pos:start="13:15" pos:end="13:34">ff_flac_write_header</name><argument_list pos:start="13:35" pos:end="15:50">(<argument pos:start="13:36" pos:end="13:37"><expr pos:start="13:36" pos:end="13:37"><name pos:start="13:36" pos:end="13:37">pb</name></expr></argument>, <argument pos:start="13:40" pos:end="13:55"><expr pos:start="13:40" pos:end="13:55"><name pos:start="13:40" pos:end="13:55"><name pos:start="13:40" pos:end="13:44">codec</name><operator pos:start="13:45" pos:end="13:46">-&gt;</operator><name pos:start="13:47" pos:end="13:55">extradata</name></name></expr></argument>, <argument pos:start="13:58" pos:end="13:78"><expr pos:start="13:58" pos:end="13:78"><name pos:start="13:58" pos:end="13:78"><name pos:start="13:58" pos:end="13:62">codec</name><operator pos:start="13:63" pos:end="13:64">-&gt;</operator><name pos:start="13:65" pos:end="13:78">extradata_size</name></name></expr></argument>,

                                   <argument pos:start="15:36" pos:end="15:49"><expr pos:start="15:36" pos:end="15:49"><operator pos:start="15:36" pos:end="15:36">!</operator><name pos:start="15:37" pos:end="15:49">write_comment</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:19"><if pos:start="19:5" pos:end="21:19">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:19"><block_content pos:start="21:9" pos:end="21:19">

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="79:5"><if pos:start="25:5" pos:end="79:5">if <condition pos:start="25:8" pos:end="25:22">(<expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:21">write_comment</name></expr>)</condition> <block pos:start="25:24" pos:end="79:5">{<block_content pos:start="27:9" pos:end="77:28">

        <decl_stmt pos:start="27:9" pos:end="29:56"><decl pos:start="27:9" pos:end="29:55"><type pos:start="27:9" pos:end="27:20"><specifier pos:start="27:9" pos:end="27:13">const</specifier> <name pos:start="27:15" pos:end="27:18">char</name> <modifier pos:start="27:20" pos:end="27:20">*</modifier></type><name pos:start="27:21" pos:end="27:26">vendor</name> <init pos:start="27:28" pos:end="29:55">= <expr pos:start="27:30" pos:end="29:55"><ternary pos:start="27:30" pos:end="29:55"><condition pos:start="27:30" pos:end="27:63"><expr pos:start="27:30" pos:end="27:61"><operator pos:start="27:30" pos:end="27:30">(</operator><name pos:start="27:31" pos:end="27:38"><name pos:start="27:31" pos:end="27:31">s</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:38">flags</name></name> <operator pos:start="27:40" pos:end="27:40">&amp;</operator> <name pos:start="27:42" pos:end="27:60">AVFMT_FLAG_BITEXACT</name><operator pos:start="27:61" pos:end="27:61">)</operator></expr> ?</condition><then pos:start="29:30" pos:end="29:35">

                             <expr pos:start="29:30" pos:end="29:35"><literal type="string" pos:start="29:30" pos:end="29:35">"Lavf"</literal></expr> </then><else pos:start="29:37" pos:end="29:55">: <expr pos:start="29:39" pos:end="29:55"><name pos:start="29:39" pos:end="29:55">LIBAVFORMAT_IDENT</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:34"><decl pos:start="31:9" pos:end="31:33"><type pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:20">AVDictionary</name> <modifier pos:start="31:22" pos:end="31:22">*</modifier></type><name pos:start="31:23" pos:end="31:26">dict</name> <init pos:start="31:28" pos:end="31:33">= <expr pos:start="31:30" pos:end="31:33"><name pos:start="31:30" pos:end="31:33">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:35"><decl pos:start="33:9" pos:end="33:23"><type pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:15">uint8_t</name></type> <name pos:start="33:17" pos:end="33:23"><name pos:start="33:17" pos:end="33:19">buf</name><index pos:start="33:20" pos:end="33:23">[<expr pos:start="33:21" pos:end="33:22"><literal type="number" pos:start="33:21" pos:end="33:22">32</literal></expr>]</index></name></decl>, <decl pos:start="33:26" pos:end="33:30"><type ref="prev" pos:start="33:9" pos:end="33:15"><modifier pos:start="33:26" pos:end="33:26">*</modifier></type><name pos:start="33:27" pos:end="33:30">data</name></decl>, <decl pos:start="33:33" pos:end="33:34"><type ref="prev" pos:start="33:9" pos:end="33:15"><modifier pos:start="33:33" pos:end="33:33">*</modifier></type><name pos:start="33:34" pos:end="33:34">p</name></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:16"><decl pos:start="35:9" pos:end="35:15"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:15">len</name></decl>;</decl_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:71"><expr pos:start="39:9" pos:end="39:70"><call pos:start="39:9" pos:end="39:70"><name pos:start="39:9" pos:end="39:16">snprintf</name><argument_list pos:start="39:17" pos:end="39:70">(<argument pos:start="39:18" pos:end="39:20"><expr pos:start="39:18" pos:end="39:20"><name pos:start="39:18" pos:end="39:20">buf</name></expr></argument>, <argument pos:start="39:23" pos:end="39:33"><expr pos:start="39:23" pos:end="39:33"><sizeof pos:start="39:23" pos:end="39:33">sizeof<argument_list pos:start="39:29" pos:end="39:33">(<argument pos:start="39:30" pos:end="39:32"><expr pos:start="39:30" pos:end="39:32"><name pos:start="39:30" pos:end="39:32">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="39:36" pos:end="39:46"><expr pos:start="39:36" pos:end="39:46"><literal type="string" pos:start="39:36" pos:end="39:40">"0x%"</literal><name pos:start="39:41" pos:end="39:46">PRIx64</name></expr></argument>, <argument pos:start="39:49" pos:end="39:69"><expr pos:start="39:49" pos:end="39:69"><name pos:start="39:49" pos:end="39:69"><name pos:start="39:49" pos:end="39:53">codec</name><operator pos:start="39:54" pos:end="39:55">-&gt;</operator><name pos:start="39:56" pos:end="39:69">channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:72"><expr pos:start="41:9" pos:end="41:71"><call pos:start="41:9" pos:end="41:71"><name pos:start="41:9" pos:end="41:19">av_dict_set</name><argument_list pos:start="41:20" pos:end="41:71">(<argument pos:start="41:21" pos:end="41:25"><expr pos:start="41:21" pos:end="41:25"><operator pos:start="41:21" pos:end="41:21">&amp;</operator><name pos:start="41:22" pos:end="41:25">dict</name></expr></argument>, <argument pos:start="41:28" pos:end="41:62"><expr pos:start="41:28" pos:end="41:62"><literal type="string" pos:start="41:28" pos:end="41:62">"WAVEFORMATEXTENSIBLE_CHANNEL_MASK"</literal></expr></argument>, <argument pos:start="41:65" pos:end="41:67"><expr pos:start="41:65" pos:end="41:67"><name pos:start="41:65" pos:end="41:67">buf</name></expr></argument>, <argument pos:start="41:70" pos:end="41:70"><expr pos:start="41:70" pos:end="41:70"><literal type="number" pos:start="41:70" pos:end="41:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:52"><expr pos:start="45:9" pos:end="45:51"><name pos:start="45:9" pos:end="45:11">len</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:51"><name pos:start="45:15" pos:end="45:37">ff_vorbiscomment_length</name><argument_list pos:start="45:38" pos:end="45:51">(<argument pos:start="45:39" pos:end="45:42"><expr pos:start="45:39" pos:end="45:42"><name pos:start="45:39" pos:end="45:42">dict</name></expr></argument>, <argument pos:start="45:45" pos:end="45:50"><expr pos:start="45:45" pos:end="45:50"><name pos:start="45:45" pos:end="45:50">vendor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:34"><expr pos:start="47:9" pos:end="47:33"><name pos:start="47:9" pos:end="47:12">data</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:33"><name pos:start="47:16" pos:end="47:24">av_malloc</name><argument_list pos:start="47:25" pos:end="47:33">(<argument pos:start="47:26" pos:end="47:32"><expr pos:start="47:26" pos:end="47:32"><name pos:start="47:26" pos:end="47:28">len</name> <operator pos:start="47:30" pos:end="47:30">+</operator> <literal type="number" pos:start="47:32" pos:end="47:32">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:18">(<expr pos:start="49:13" pos:end="49:17"><operator pos:start="49:13" pos:end="49:13">!</operator><name pos:start="49:14" pos:end="49:17">data</name></expr>)</condition> <block pos:start="49:20" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:35">

            <expr_stmt pos:start="51:13" pos:end="51:32"><expr pos:start="51:13" pos:end="51:31"><call pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:24">av_dict_free</name><argument_list pos:start="51:25" pos:end="51:31">(<argument pos:start="51:26" pos:end="51:30"><expr pos:start="51:26" pos:end="51:30"><operator pos:start="51:26" pos:end="51:26">&amp;</operator><name pos:start="51:27" pos:end="51:30">dict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:35">return <expr pos:start="53:20" pos:end="53:34"><call pos:start="53:20" pos:end="53:34"><name pos:start="53:20" pos:end="53:26">AVERROR</name><argument_list pos:start="53:27" pos:end="53:34">(<argument pos:start="53:28" pos:end="53:33"><expr pos:start="53:28" pos:end="53:33"><name pos:start="53:28" pos:end="53:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:23"><expr pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:12">data</name><index pos:start="59:13" pos:end="59:15">[<expr pos:start="59:14" pos:end="59:14"><literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>]</index></name> <operator pos:start="59:17" pos:end="59:17">=</operator> <literal type="number" pos:start="59:19" pos:end="59:22">0x84</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:31"><expr pos:start="61:9" pos:end="61:30"><call pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:15">AV_WB24</name><argument_list pos:start="61:16" pos:end="61:30">(<argument pos:start="61:17" pos:end="61:24"><expr pos:start="61:17" pos:end="61:24"><name pos:start="61:17" pos:end="61:20">data</name> <operator pos:start="61:22" pos:end="61:22">+</operator> <literal type="number" pos:start="61:24" pos:end="61:24">1</literal></expr></argument>, <argument pos:start="61:27" pos:end="61:29"><expr pos:start="61:27" pos:end="61:29"><name pos:start="61:27" pos:end="61:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:21"><expr pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:9">p</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <name pos:start="65:13" pos:end="65:16">data</name> <operator pos:start="65:18" pos:end="65:18">+</operator> <literal type="number" pos:start="65:20" pos:end="65:20">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:50"><expr pos:start="67:9" pos:end="67:49"><call pos:start="67:9" pos:end="67:49"><name pos:start="67:9" pos:end="67:30">ff_vorbiscomment_write</name><argument_list pos:start="67:31" pos:end="67:49">(<argument pos:start="67:32" pos:end="67:33"><expr pos:start="67:32" pos:end="67:33"><operator pos:start="67:32" pos:end="67:32">&amp;</operator><name pos:start="67:33" pos:end="67:33">p</name></expr></argument>, <argument pos:start="67:36" pos:end="67:40"><expr pos:start="67:36" pos:end="67:40"><operator pos:start="67:36" pos:end="67:36">&amp;</operator><name pos:start="67:37" pos:end="67:40">dict</name></expr></argument>, <argument pos:start="67:43" pos:end="67:48"><expr pos:start="67:43" pos:end="67:48"><name pos:start="67:43" pos:end="67:48">vendor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:38"><expr pos:start="71:9" pos:end="71:37"><call pos:start="71:9" pos:end="71:37"><name pos:start="71:9" pos:end="71:18">avio_write</name><argument_list pos:start="71:19" pos:end="71:37">(<argument pos:start="71:20" pos:end="71:21"><expr pos:start="71:20" pos:end="71:21"><name pos:start="71:20" pos:end="71:21">pb</name></expr></argument>, <argument pos:start="71:24" pos:end="71:27"><expr pos:start="71:24" pos:end="71:27"><name pos:start="71:24" pos:end="71:27">data</name></expr></argument>, <argument pos:start="71:30" pos:end="71:36"><expr pos:start="71:30" pos:end="71:36"><name pos:start="71:30" pos:end="71:32">len</name> <operator pos:start="71:34" pos:end="71:34">+</operator> <literal type="number" pos:start="71:36" pos:end="71:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:24"><expr pos:start="75:9" pos:end="75:23"><call pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:16">av_freep</name><argument_list pos:start="75:17" pos:end="75:23">(<argument pos:start="75:18" pos:end="75:22"><expr pos:start="75:18" pos:end="75:22"><operator pos:start="75:18" pos:end="75:18">&amp;</operator><name pos:start="75:19" pos:end="75:22">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><call pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:20">av_dict_free</name><argument_list pos:start="77:21" pos:end="77:27">(<argument pos:start="77:22" pos:end="77:26"><expr pos:start="77:22" pos:end="77:26"><operator pos:start="77:22" pos:end="77:22">&amp;</operator><name pos:start="77:23" pos:end="77:26">dict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
