<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26592.c" pos:tabs="8"><function pos:start="1:1" pos:end="419:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">cpu_loop</name><parameter_list pos:start="1:14" pos:end="1:31">(<parameter pos:start="1:15" pos:end="1:30"><decl pos:start="1:15" pos:end="1:30"><type pos:start="1:15" pos:end="1:27"><name pos:start="1:15" pos:end="1:25">CPUARMState</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:30">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="419:1">{<block_content pos:start="5:5" pos:end="417:5">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:44">= <expr pos:start="5:20" pos:end="5:44"><call pos:start="5:20" pos:end="5:44"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:44">(<argument pos:start="5:24" pos:end="5:43"><expr pos:start="5:24" pos:end="5:43"><call pos:start="5:24" pos:end="5:43"><name pos:start="5:24" pos:end="5:38">arm_env_get_cpu</name><argument_list pos:start="5:39" pos:end="5:43">(<argument pos:start="5:40" pos:end="5:42"><expr pos:start="5:40" pos:end="5:42"><name pos:start="5:40" pos:end="5:42">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">trapnr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">n</name></decl>, <decl pos:start="9:21" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:21" pos:end="9:24">insn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:20">target_siginfo_t</name></type> <name pos:start="11:22" pos:end="11:25">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:17">addr</name></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="417:5">for<control pos:start="17:8" pos:end="17:11">(<init pos:start="17:9" pos:end="17:9">;</init><condition pos:start="17:10" pos:end="17:10">;</condition><incr/>)</control> <block pos:start="17:13" pos:end="417:5">{<block_content pos:start="19:9" pos:end="415:37">

        <expr_stmt pos:start="19:9" pos:end="19:27"><expr pos:start="19:9" pos:end="19:26"><call pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:22">cpu_exec_start</name><argument_list pos:start="19:23" pos:end="19:26">(<argument pos:start="19:24" pos:end="19:25"><expr pos:start="19:24" pos:end="19:25"><name pos:start="19:24" pos:end="19:25">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:34"><expr pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:14">trapnr</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:33"><name pos:start="21:18" pos:end="21:29">cpu_arm_exec</name><argument_list pos:start="21:30" pos:end="21:33">(<argument pos:start="21:31" pos:end="21:32"><expr pos:start="21:31" pos:end="21:32"><name pos:start="21:31" pos:end="21:32">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:25"><expr pos:start="23:9" pos:end="23:24"><call pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:20">cpu_exec_end</name><argument_list pos:start="23:21" pos:end="23:24">(<argument pos:start="23:22" pos:end="23:23"><expr pos:start="23:22" pos:end="23:23"><name pos:start="23:22" pos:end="23:23">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="25:9" pos:end="413:9">switch<condition pos:start="25:15" pos:end="25:22">(<expr pos:start="25:16" pos:end="25:21"><name pos:start="25:16" pos:end="25:21">trapnr</name></expr>)</condition> <block pos:start="25:24" pos:end="413:9">{<block_content pos:start="27:9" pos:end="411:20">

        <case pos:start="27:9" pos:end="27:23">case <expr pos:start="27:14" pos:end="27:22"><name pos:start="27:14" pos:end="27:22">EXCP_UDEF</name></expr>:</case>

            <block pos:start="29:13" pos:end="165:13">{<block_content pos:start="31:17" pos:end="163:17">

                <decl_stmt pos:start="31:17" pos:end="31:43"><decl pos:start="31:17" pos:end="31:42"><type pos:start="31:17" pos:end="31:27"><name pos:start="31:17" pos:end="31:25">TaskState</name> <modifier pos:start="31:27" pos:end="31:27">*</modifier></type><name pos:start="31:28" pos:end="31:29">ts</name> <init pos:start="31:31" pos:end="31:42">= <expr pos:start="31:33" pos:end="31:42"><name pos:start="31:33" pos:end="31:42"><name pos:start="31:33" pos:end="31:34">cs</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:42">opaque</name></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="33:17" pos:end="33:32"><decl pos:start="33:17" pos:end="33:31"><type pos:start="33:17" pos:end="33:24"><name pos:start="33:17" pos:end="33:24">uint32_t</name></type> <name pos:start="33:26" pos:end="33:31">opcode</name></decl>;</decl_stmt>

                <decl_stmt pos:start="35:17" pos:end="35:23"><decl pos:start="35:17" pos:end="35:22"><type pos:start="35:17" pos:end="35:19"><name pos:start="35:17" pos:end="35:19">int</name></type> <name pos:start="35:21" pos:end="35:22">rc</name></decl>;</decl_stmt>



                <comment type="block" pos:start="39:17" pos:end="39:64">/* we handle the FPU emulation here, as Linux */</comment>

                <comment type="block" pos:start="41:17" pos:end="41:39">/* we get the opcode */</comment>

                <comment type="block" pos:start="43:17" pos:end="43:61">/* FIXME - what to do if get_user() fails? */</comment>

                <expr_stmt pos:start="45:17" pos:end="45:62"><expr pos:start="45:17" pos:end="45:61"><call pos:start="45:17" pos:end="45:61"><name pos:start="45:17" pos:end="45:33">get_user_code_u32</name><argument_list pos:start="45:34" pos:end="45:61">(<argument pos:start="45:35" pos:end="45:40"><expr pos:start="45:35" pos:end="45:40"><name pos:start="45:35" pos:end="45:40">opcode</name></expr></argument>, <argument pos:start="45:43" pos:end="45:55"><expr pos:start="45:43" pos:end="45:55"><name pos:start="45:43" pos:end="45:55"><name pos:start="45:43" pos:end="45:45">env</name><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:51">regs</name><index pos:start="45:52" pos:end="45:55">[<expr pos:start="45:53" pos:end="45:54"><literal type="number" pos:start="45:53" pos:end="45:54">15</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:58" pos:end="45:60"><expr pos:start="45:58" pos:end="45:60"><name pos:start="45:58" pos:end="45:60">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="49:17" pos:end="49:55"><expr pos:start="49:17" pos:end="49:54"><name pos:start="49:17" pos:end="49:18">rc</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <call pos:start="49:22" pos:end="49:54"><name pos:start="49:22" pos:end="49:31">EmulateAll</name><argument_list pos:start="49:32" pos:end="49:54">(<argument pos:start="49:33" pos:end="49:38"><expr pos:start="49:33" pos:end="49:38"><name pos:start="49:33" pos:end="49:38">opcode</name></expr></argument>, <argument pos:start="49:41" pos:end="49:48"><expr pos:start="49:41" pos:end="49:48"><operator pos:start="49:41" pos:end="49:41">&amp;</operator><name pos:start="49:42" pos:end="49:48"><name pos:start="49:42" pos:end="49:43">ts</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:48">fpa</name></name></expr></argument>, <argument pos:start="49:51" pos:end="49:53"><expr pos:start="49:51" pos:end="49:53"><name pos:start="49:51" pos:end="49:53">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="51:17" pos:end="163:17"><if pos:start="51:17" pos:end="63:17">if <condition pos:start="51:20" pos:end="51:28">(<expr pos:start="51:21" pos:end="51:27"><name pos:start="51:21" pos:end="51:22">rc</name> <operator pos:start="51:24" pos:end="51:25">==</operator> <literal type="number" pos:start="51:27" pos:end="51:27">0</literal></expr>)</condition> <block pos:start="51:30" pos:end="63:17">{<block_content pos:start="53:21" pos:end="61:60"> <comment type="block" pos:start="51:32" pos:end="51:56">/* illegal instruction */</comment>

                    <expr_stmt pos:start="53:21" pos:end="53:50"><expr pos:start="53:21" pos:end="53:49"><name pos:start="53:21" pos:end="53:33"><name pos:start="53:21" pos:end="53:24">info</name><operator pos:start="53:25" pos:end="53:25">.</operator><name pos:start="53:26" pos:end="53:33">si_signo</name></name> <operator pos:start="53:35" pos:end="53:35">=</operator> <name pos:start="53:37" pos:end="53:49">TARGET_SIGILL</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="55:21" pos:end="55:38"><expr pos:start="55:21" pos:end="55:37"><name pos:start="55:21" pos:end="55:33"><name pos:start="55:21" pos:end="55:24">info</name><operator pos:start="55:25" pos:end="55:25">.</operator><name pos:start="55:26" pos:end="55:33">si_errno</name></name> <operator pos:start="55:35" pos:end="55:35">=</operator> <literal type="number" pos:start="55:37" pos:end="55:37">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="57:21" pos:end="57:53"><expr pos:start="57:21" pos:end="57:52"><name pos:start="57:21" pos:end="57:32"><name pos:start="57:21" pos:end="57:24">info</name><operator pos:start="57:25" pos:end="57:25">.</operator><name pos:start="57:26" pos:end="57:32">si_code</name></name> <operator pos:start="57:34" pos:end="57:34">=</operator> <name pos:start="57:36" pos:end="57:52">TARGET_ILL_ILLOPN</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:67"><expr pos:start="59:21" pos:end="59:66"><name pos:start="59:21" pos:end="59:50"><name pos:start="59:21" pos:end="59:24">info</name><operator pos:start="59:25" pos:end="59:25">.</operator><name pos:start="59:26" pos:end="59:34">_sifields</name><operator pos:start="59:35" pos:end="59:35">.</operator><name pos:start="59:36" pos:end="59:44">_sigfault</name><operator pos:start="59:45" pos:end="59:45">.</operator><name pos:start="59:46" pos:end="59:50">_addr</name></name> <operator pos:start="59:52" pos:end="59:52">=</operator> <name pos:start="59:54" pos:end="59:66"><name pos:start="59:54" pos:end="59:56">env</name><operator pos:start="59:57" pos:end="59:58">-&gt;</operator><name pos:start="59:59" pos:end="59:62">regs</name><index pos:start="59:63" pos:end="59:66">[<expr pos:start="59:64" pos:end="59:65"><literal type="number" pos:start="59:64" pos:end="59:65">15</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="61:21" pos:end="61:60"><expr pos:start="61:21" pos:end="61:59"><call pos:start="61:21" pos:end="61:59"><name pos:start="61:21" pos:end="61:32">queue_signal</name><argument_list pos:start="61:33" pos:end="61:59">(<argument pos:start="61:34" pos:end="61:36"><expr pos:start="61:34" pos:end="61:36"><name pos:start="61:34" pos:end="61:36">env</name></expr></argument>, <argument pos:start="61:39" pos:end="61:51"><expr pos:start="61:39" pos:end="61:51"><name pos:start="61:39" pos:end="61:51"><name pos:start="61:39" pos:end="61:42">info</name><operator pos:start="61:43" pos:end="61:43">.</operator><name pos:start="61:44" pos:end="61:51">si_signo</name></name></expr></argument>, <argument pos:start="61:54" pos:end="61:58"><expr pos:start="61:54" pos:end="61:58"><operator pos:start="61:54" pos:end="61:54">&amp;</operator><name pos:start="61:55" pos:end="61:58">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="63:19" pos:end="157:17">else if <condition pos:start="63:27" pos:end="63:34">(<expr pos:start="63:28" pos:end="63:33"><name pos:start="63:28" pos:end="63:29">rc</name> <operator pos:start="63:31" pos:end="63:31">&lt;</operator> <literal type="number" pos:start="63:33" pos:end="63:33">0</literal></expr>)</condition> <block pos:start="63:36" pos:end="157:17">{<block_content pos:start="65:21" pos:end="155:38"> <comment type="block" pos:start="63:38" pos:end="63:55">/* FP exception */</comment>

                    <decl_stmt pos:start="65:21" pos:end="65:34"><decl pos:start="65:21" pos:end="65:33"><type pos:start="65:21" pos:end="65:23"><name pos:start="65:21" pos:end="65:23">int</name></type> <name pos:start="65:25" pos:end="65:31">arm_fpe</name><init pos:start="65:32" pos:end="65:33">=<expr pos:start="65:33" pos:end="65:33"><literal type="number" pos:start="65:33" pos:end="65:33">0</literal></expr></init></decl>;</decl_stmt>



                    <comment type="block" pos:start="69:21" pos:end="69:65">/* translate softfloat flags to FPSR flags */</comment>

                    <if_stmt pos:start="71:21" pos:end="73:41"><if pos:start="71:21" pos:end="73:41">if <condition pos:start="71:24" pos:end="71:49">(<expr pos:start="71:25" pos:end="71:48"><operator pos:start="71:25" pos:end="71:25">-</operator><name pos:start="71:26" pos:end="71:27">rc</name> <operator pos:start="71:29" pos:end="71:29">&amp;</operator> <name pos:start="71:31" pos:end="71:48">float_flag_invalid</name></expr>)</condition><block type="pseudo" pos:start="73:23" pos:end="73:41"><block_content pos:start="73:23" pos:end="73:41">

                      <expr_stmt pos:start="73:23" pos:end="73:41"><expr pos:start="73:23" pos:end="73:40"><name pos:start="73:23" pos:end="73:29">arm_fpe</name> <operator pos:start="73:31" pos:end="73:32">|=</operator> <name pos:start="73:34" pos:end="73:40">BIT_IOC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="75:21" pos:end="77:41"><if pos:start="75:21" pos:end="77:41">if <condition pos:start="75:24" pos:end="75:51">(<expr pos:start="75:25" pos:end="75:50"><operator pos:start="75:25" pos:end="75:25">-</operator><name pos:start="75:26" pos:end="75:27">rc</name> <operator pos:start="75:29" pos:end="75:29">&amp;</operator> <name pos:start="75:31" pos:end="75:50">float_flag_divbyzero</name></expr>)</condition><block type="pseudo" pos:start="77:23" pos:end="77:41"><block_content pos:start="77:23" pos:end="77:41">

                      <expr_stmt pos:start="77:23" pos:end="77:41"><expr pos:start="77:23" pos:end="77:40"><name pos:start="77:23" pos:end="77:29">arm_fpe</name> <operator pos:start="77:31" pos:end="77:32">|=</operator> <name pos:start="77:34" pos:end="77:40">BIT_DZC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="79:21" pos:end="81:41"><if pos:start="79:21" pos:end="81:41">if <condition pos:start="79:24" pos:end="79:50">(<expr pos:start="79:25" pos:end="79:49"><operator pos:start="79:25" pos:end="79:25">-</operator><name pos:start="79:26" pos:end="79:27">rc</name> <operator pos:start="79:29" pos:end="79:29">&amp;</operator> <name pos:start="79:31" pos:end="79:49">float_flag_overflow</name></expr>)</condition><block type="pseudo" pos:start="81:23" pos:end="81:41"><block_content pos:start="81:23" pos:end="81:41">

                      <expr_stmt pos:start="81:23" pos:end="81:41"><expr pos:start="81:23" pos:end="81:40"><name pos:start="81:23" pos:end="81:29">arm_fpe</name> <operator pos:start="81:31" pos:end="81:32">|=</operator> <name pos:start="81:34" pos:end="81:40">BIT_OFC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="83:21" pos:end="85:41"><if pos:start="83:21" pos:end="85:41">if <condition pos:start="83:24" pos:end="83:51">(<expr pos:start="83:25" pos:end="83:50"><operator pos:start="83:25" pos:end="83:25">-</operator><name pos:start="83:26" pos:end="83:27">rc</name> <operator pos:start="83:29" pos:end="83:29">&amp;</operator> <name pos:start="83:31" pos:end="83:50">float_flag_underflow</name></expr>)</condition><block type="pseudo" pos:start="85:23" pos:end="85:41"><block_content pos:start="85:23" pos:end="85:41">

                      <expr_stmt pos:start="85:23" pos:end="85:41"><expr pos:start="85:23" pos:end="85:40"><name pos:start="85:23" pos:end="85:29">arm_fpe</name> <operator pos:start="85:31" pos:end="85:32">|=</operator> <name pos:start="85:34" pos:end="85:40">BIT_UFC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="87:21" pos:end="89:41"><if pos:start="87:21" pos:end="89:41">if <condition pos:start="87:24" pos:end="87:49">(<expr pos:start="87:25" pos:end="87:48"><operator pos:start="87:25" pos:end="87:25">-</operator><name pos:start="87:26" pos:end="87:27">rc</name> <operator pos:start="87:29" pos:end="87:29">&amp;</operator> <name pos:start="87:31" pos:end="87:48">float_flag_inexact</name></expr>)</condition><block type="pseudo" pos:start="89:23" pos:end="89:41"><block_content pos:start="89:23" pos:end="89:41">

                      <expr_stmt pos:start="89:23" pos:end="89:41"><expr pos:start="89:23" pos:end="89:40"><name pos:start="89:23" pos:end="89:29">arm_fpe</name> <operator pos:start="89:31" pos:end="89:32">|=</operator> <name pos:start="89:34" pos:end="89:40">BIT_IXC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <decl_stmt pos:start="93:21" pos:end="93:45"><decl pos:start="93:21" pos:end="93:44"><type pos:start="93:21" pos:end="93:24"><name pos:start="93:21" pos:end="93:24">FPSR</name></type> <name pos:start="93:26" pos:end="93:29">fpsr</name> <init pos:start="93:31" pos:end="93:44">= <expr pos:start="93:33" pos:end="93:44"><name pos:start="93:33" pos:end="93:44"><name pos:start="93:33" pos:end="93:34">ts</name><operator pos:start="93:35" pos:end="93:36">-&gt;</operator><name pos:start="93:37" pos:end="93:39">fpa</name><operator pos:start="93:40" pos:end="93:40">.</operator><name pos:start="93:41" pos:end="93:44">fpsr</name></name></expr></init></decl>;</decl_stmt>

                    <comment type="line" pos:start="95:21" pos:end="95:71">//printf("fpsr 0x%x, arm_fpe 0x%x\n",fpsr,arm_fpe);</comment>



                    <if_stmt pos:start="99:21" pos:end="129:21"><if pos:start="99:21" pos:end="125:21">if <condition pos:start="99:24" pos:end="99:47">(<expr pos:start="99:25" pos:end="99:46"><name pos:start="99:25" pos:end="99:28">fpsr</name> <operator pos:start="99:30" pos:end="99:30">&amp;</operator> <operator pos:start="99:32" pos:end="99:32">(</operator><name pos:start="99:33" pos:end="99:39">arm_fpe</name> <operator pos:start="99:41" pos:end="99:42">&lt;&lt;</operator> <literal type="number" pos:start="99:44" pos:end="99:45">16</literal><operator pos:start="99:46" pos:end="99:46">)</operator></expr>)</condition> <block pos:start="99:49" pos:end="125:21">{<block_content pos:start="101:23" pos:end="123:62"> <comment type="block" pos:start="99:51" pos:end="99:74">/* exception enabled? */</comment>

                      <expr_stmt pos:start="101:23" pos:end="101:52"><expr pos:start="101:23" pos:end="101:51"><name pos:start="101:23" pos:end="101:35"><name pos:start="101:23" pos:end="101:26">info</name><operator pos:start="101:27" pos:end="101:27">.</operator><name pos:start="101:28" pos:end="101:35">si_signo</name></name> <operator pos:start="101:37" pos:end="101:37">=</operator> <name pos:start="101:39" pos:end="101:51">TARGET_SIGFPE</name></expr>;</expr_stmt>

                      <expr_stmt pos:start="103:23" pos:end="103:40"><expr pos:start="103:23" pos:end="103:39"><name pos:start="103:23" pos:end="103:35"><name pos:start="103:23" pos:end="103:26">info</name><operator pos:start="103:27" pos:end="103:27">.</operator><name pos:start="103:28" pos:end="103:35">si_errno</name></name> <operator pos:start="103:37" pos:end="103:37">=</operator> <literal type="number" pos:start="103:39" pos:end="103:39">0</literal></expr>;</expr_stmt>



                      <comment type="block" pos:start="107:23" pos:end="107:60">/* ordered by priority, least first */</comment>

                      <if_stmt pos:start="109:23" pos:end="109:78"><if pos:start="109:23" pos:end="109:78">if <condition pos:start="109:26" pos:end="109:44">(<expr pos:start="109:27" pos:end="109:43"><name pos:start="109:27" pos:end="109:33">arm_fpe</name> <operator pos:start="109:35" pos:end="109:35">&amp;</operator> <name pos:start="109:37" pos:end="109:43">BIT_IXC</name></expr>)</condition><block type="pseudo" pos:start="109:46" pos:end="109:78"><block_content pos:start="109:46" pos:end="109:78"> <expr_stmt pos:start="109:46" pos:end="109:78"><expr pos:start="109:46" pos:end="109:77"><name pos:start="109:46" pos:end="109:57"><name pos:start="109:46" pos:end="109:49">info</name><operator pos:start="109:50" pos:end="109:50">.</operator><name pos:start="109:51" pos:end="109:57">si_code</name></name> <operator pos:start="109:59" pos:end="109:59">=</operator> <name pos:start="109:61" pos:end="109:77">TARGET_FPE_FLTRES</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                      <if_stmt pos:start="111:23" pos:end="111:78"><if pos:start="111:23" pos:end="111:78">if <condition pos:start="111:26" pos:end="111:44">(<expr pos:start="111:27" pos:end="111:43"><name pos:start="111:27" pos:end="111:33">arm_fpe</name> <operator pos:start="111:35" pos:end="111:35">&amp;</operator> <name pos:start="111:37" pos:end="111:43">BIT_UFC</name></expr>)</condition><block type="pseudo" pos:start="111:46" pos:end="111:78"><block_content pos:start="111:46" pos:end="111:78"> <expr_stmt pos:start="111:46" pos:end="111:78"><expr pos:start="111:46" pos:end="111:77"><name pos:start="111:46" pos:end="111:57"><name pos:start="111:46" pos:end="111:49">info</name><operator pos:start="111:50" pos:end="111:50">.</operator><name pos:start="111:51" pos:end="111:57">si_code</name></name> <operator pos:start="111:59" pos:end="111:59">=</operator> <name pos:start="111:61" pos:end="111:77">TARGET_FPE_FLTUND</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                      <if_stmt pos:start="113:23" pos:end="113:78"><if pos:start="113:23" pos:end="113:78">if <condition pos:start="113:26" pos:end="113:44">(<expr pos:start="113:27" pos:end="113:43"><name pos:start="113:27" pos:end="113:33">arm_fpe</name> <operator pos:start="113:35" pos:end="113:35">&amp;</operator> <name pos:start="113:37" pos:end="113:43">BIT_OFC</name></expr>)</condition><block type="pseudo" pos:start="113:46" pos:end="113:78"><block_content pos:start="113:46" pos:end="113:78"> <expr_stmt pos:start="113:46" pos:end="113:78"><expr pos:start="113:46" pos:end="113:77"><name pos:start="113:46" pos:end="113:57"><name pos:start="113:46" pos:end="113:49">info</name><operator pos:start="113:50" pos:end="113:50">.</operator><name pos:start="113:51" pos:end="113:57">si_code</name></name> <operator pos:start="113:59" pos:end="113:59">=</operator> <name pos:start="113:61" pos:end="113:77">TARGET_FPE_FLTOVF</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                      <if_stmt pos:start="115:23" pos:end="115:78"><if pos:start="115:23" pos:end="115:78">if <condition pos:start="115:26" pos:end="115:44">(<expr pos:start="115:27" pos:end="115:43"><name pos:start="115:27" pos:end="115:33">arm_fpe</name> <operator pos:start="115:35" pos:end="115:35">&amp;</operator> <name pos:start="115:37" pos:end="115:43">BIT_DZC</name></expr>)</condition><block type="pseudo" pos:start="115:46" pos:end="115:78"><block_content pos:start="115:46" pos:end="115:78"> <expr_stmt pos:start="115:46" pos:end="115:78"><expr pos:start="115:46" pos:end="115:77"><name pos:start="115:46" pos:end="115:57"><name pos:start="115:46" pos:end="115:49">info</name><operator pos:start="115:50" pos:end="115:50">.</operator><name pos:start="115:51" pos:end="115:57">si_code</name></name> <operator pos:start="115:59" pos:end="115:59">=</operator> <name pos:start="115:61" pos:end="115:77">TARGET_FPE_FLTDIV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                      <if_stmt pos:start="117:23" pos:end="117:78"><if pos:start="117:23" pos:end="117:78">if <condition pos:start="117:26" pos:end="117:44">(<expr pos:start="117:27" pos:end="117:43"><name pos:start="117:27" pos:end="117:33">arm_fpe</name> <operator pos:start="117:35" pos:end="117:35">&amp;</operator> <name pos:start="117:37" pos:end="117:43">BIT_IOC</name></expr>)</condition><block type="pseudo" pos:start="117:46" pos:end="117:78"><block_content pos:start="117:46" pos:end="117:78"> <expr_stmt pos:start="117:46" pos:end="117:78"><expr pos:start="117:46" pos:end="117:77"><name pos:start="117:46" pos:end="117:57"><name pos:start="117:46" pos:end="117:49">info</name><operator pos:start="117:50" pos:end="117:50">.</operator><name pos:start="117:51" pos:end="117:57">si_code</name></name> <operator pos:start="117:59" pos:end="117:59">=</operator> <name pos:start="117:61" pos:end="117:77">TARGET_FPE_FLTINV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                      <expr_stmt pos:start="121:23" pos:end="121:69"><expr pos:start="121:23" pos:end="121:68"><name pos:start="121:23" pos:end="121:52"><name pos:start="121:23" pos:end="121:26">info</name><operator pos:start="121:27" pos:end="121:27">.</operator><name pos:start="121:28" pos:end="121:36">_sifields</name><operator pos:start="121:37" pos:end="121:37">.</operator><name pos:start="121:38" pos:end="121:46">_sigfault</name><operator pos:start="121:47" pos:end="121:47">.</operator><name pos:start="121:48" pos:end="121:52">_addr</name></name> <operator pos:start="121:54" pos:end="121:54">=</operator> <name pos:start="121:56" pos:end="121:68"><name pos:start="121:56" pos:end="121:58">env</name><operator pos:start="121:59" pos:end="121:60">-&gt;</operator><name pos:start="121:61" pos:end="121:64">regs</name><index pos:start="121:65" pos:end="121:68">[<expr pos:start="121:66" pos:end="121:67"><literal type="number" pos:start="121:66" pos:end="121:67">15</literal></expr>]</index></name></expr>;</expr_stmt>

                      <expr_stmt pos:start="123:23" pos:end="123:62"><expr pos:start="123:23" pos:end="123:61"><call pos:start="123:23" pos:end="123:61"><name pos:start="123:23" pos:end="123:34">queue_signal</name><argument_list pos:start="123:35" pos:end="123:61">(<argument pos:start="123:36" pos:end="123:38"><expr pos:start="123:36" pos:end="123:38"><name pos:start="123:36" pos:end="123:38">env</name></expr></argument>, <argument pos:start="123:41" pos:end="123:53"><expr pos:start="123:41" pos:end="123:53"><name pos:start="123:41" pos:end="123:53"><name pos:start="123:41" pos:end="123:44">info</name><operator pos:start="123:45" pos:end="123:45">.</operator><name pos:start="123:46" pos:end="123:53">si_signo</name></name></expr></argument>, <argument pos:start="123:56" pos:end="123:60"><expr pos:start="123:56" pos:end="123:60"><operator pos:start="123:56" pos:end="123:56">&amp;</operator><name pos:start="123:57" pos:end="123:60">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="125:23" pos:end="129:21">else <block pos:start="125:28" pos:end="129:21">{<block_content pos:start="127:23" pos:end="127:41">

                      <expr_stmt pos:start="127:23" pos:end="127:41"><expr pos:start="127:23" pos:end="127:40"><name pos:start="127:23" pos:end="127:35"><name pos:start="127:23" pos:end="127:25">env</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:31">regs</name><index pos:start="127:32" pos:end="127:35">[<expr pos:start="127:33" pos:end="127:34"><literal type="number" pos:start="127:33" pos:end="127:34">15</literal></expr>]</index></name> <operator pos:start="127:37" pos:end="127:38">+=</operator> <literal type="number" pos:start="127:40" pos:end="127:40">4</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>



                    <comment type="block" pos:start="133:21" pos:end="133:57">/* accumulate unenabled exceptions */</comment>

                    <if_stmt pos:start="135:21" pos:end="137:38"><if pos:start="135:21" pos:end="137:38">if <condition pos:start="135:24" pos:end="135:67">(<expr pos:start="135:25" pos:end="135:66"><operator pos:start="135:25" pos:end="135:25">(</operator><operator pos:start="135:26" pos:end="135:26">!</operator><operator pos:start="135:27" pos:end="135:27">(</operator><name pos:start="135:28" pos:end="135:31">fpsr</name> <operator pos:start="135:33" pos:end="135:33">&amp;</operator> <name pos:start="135:35" pos:end="135:41">BIT_IXE</name><operator pos:start="135:42" pos:end="135:42">)</operator><operator pos:start="135:43" pos:end="135:43">)</operator> <operator pos:start="135:45" pos:end="135:46">&amp;&amp;</operator> <operator pos:start="135:48" pos:end="135:48">(</operator><name pos:start="135:49" pos:end="135:55">arm_fpe</name> <operator pos:start="135:57" pos:end="135:57">&amp;</operator> <name pos:start="135:59" pos:end="135:65">BIT_IXC</name><operator pos:start="135:66" pos:end="135:66">)</operator></expr>)</condition><block type="pseudo" pos:start="137:23" pos:end="137:38"><block_content pos:start="137:23" pos:end="137:38">

                      <expr_stmt pos:start="137:23" pos:end="137:38"><expr pos:start="137:23" pos:end="137:37"><name pos:start="137:23" pos:end="137:26">fpsr</name> <operator pos:start="137:28" pos:end="137:29">|=</operator> <name pos:start="137:31" pos:end="137:37">BIT_IXC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="139:21" pos:end="141:38"><if pos:start="139:21" pos:end="141:38">if <condition pos:start="139:24" pos:end="139:67">(<expr pos:start="139:25" pos:end="139:66"><operator pos:start="139:25" pos:end="139:25">(</operator><operator pos:start="139:26" pos:end="139:26">!</operator><operator pos:start="139:27" pos:end="139:27">(</operator><name pos:start="139:28" pos:end="139:31">fpsr</name> <operator pos:start="139:33" pos:end="139:33">&amp;</operator> <name pos:start="139:35" pos:end="139:41">BIT_UFE</name><operator pos:start="139:42" pos:end="139:42">)</operator><operator pos:start="139:43" pos:end="139:43">)</operator> <operator pos:start="139:45" pos:end="139:46">&amp;&amp;</operator> <operator pos:start="139:48" pos:end="139:48">(</operator><name pos:start="139:49" pos:end="139:55">arm_fpe</name> <operator pos:start="139:57" pos:end="139:57">&amp;</operator> <name pos:start="139:59" pos:end="139:65">BIT_UFC</name><operator pos:start="139:66" pos:end="139:66">)</operator></expr>)</condition><block type="pseudo" pos:start="141:23" pos:end="141:38"><block_content pos:start="141:23" pos:end="141:38">

                      <expr_stmt pos:start="141:23" pos:end="141:38"><expr pos:start="141:23" pos:end="141:37"><name pos:start="141:23" pos:end="141:26">fpsr</name> <operator pos:start="141:28" pos:end="141:29">|=</operator> <name pos:start="141:31" pos:end="141:37">BIT_UFC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="143:21" pos:end="145:38"><if pos:start="143:21" pos:end="145:38">if <condition pos:start="143:24" pos:end="143:67">(<expr pos:start="143:25" pos:end="143:66"><operator pos:start="143:25" pos:end="143:25">(</operator><operator pos:start="143:26" pos:end="143:26">!</operator><operator pos:start="143:27" pos:end="143:27">(</operator><name pos:start="143:28" pos:end="143:31">fpsr</name> <operator pos:start="143:33" pos:end="143:33">&amp;</operator> <name pos:start="143:35" pos:end="143:41">BIT_OFE</name><operator pos:start="143:42" pos:end="143:42">)</operator><operator pos:start="143:43" pos:end="143:43">)</operator> <operator pos:start="143:45" pos:end="143:46">&amp;&amp;</operator> <operator pos:start="143:48" pos:end="143:48">(</operator><name pos:start="143:49" pos:end="143:55">arm_fpe</name> <operator pos:start="143:57" pos:end="143:57">&amp;</operator> <name pos:start="143:59" pos:end="143:65">BIT_OFC</name><operator pos:start="143:66" pos:end="143:66">)</operator></expr>)</condition><block type="pseudo" pos:start="145:23" pos:end="145:38"><block_content pos:start="145:23" pos:end="145:38">

                      <expr_stmt pos:start="145:23" pos:end="145:38"><expr pos:start="145:23" pos:end="145:37"><name pos:start="145:23" pos:end="145:26">fpsr</name> <operator pos:start="145:28" pos:end="145:29">|=</operator> <name pos:start="145:31" pos:end="145:37">BIT_OFC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="147:21" pos:end="149:38"><if pos:start="147:21" pos:end="149:38">if <condition pos:start="147:24" pos:end="147:67">(<expr pos:start="147:25" pos:end="147:66"><operator pos:start="147:25" pos:end="147:25">(</operator><operator pos:start="147:26" pos:end="147:26">!</operator><operator pos:start="147:27" pos:end="147:27">(</operator><name pos:start="147:28" pos:end="147:31">fpsr</name> <operator pos:start="147:33" pos:end="147:33">&amp;</operator> <name pos:start="147:35" pos:end="147:41">BIT_DZE</name><operator pos:start="147:42" pos:end="147:42">)</operator><operator pos:start="147:43" pos:end="147:43">)</operator> <operator pos:start="147:45" pos:end="147:46">&amp;&amp;</operator> <operator pos:start="147:48" pos:end="147:48">(</operator><name pos:start="147:49" pos:end="147:55">arm_fpe</name> <operator pos:start="147:57" pos:end="147:57">&amp;</operator> <name pos:start="147:59" pos:end="147:65">BIT_DZC</name><operator pos:start="147:66" pos:end="147:66">)</operator></expr>)</condition><block type="pseudo" pos:start="149:23" pos:end="149:38"><block_content pos:start="149:23" pos:end="149:38">

                      <expr_stmt pos:start="149:23" pos:end="149:38"><expr pos:start="149:23" pos:end="149:37"><name pos:start="149:23" pos:end="149:26">fpsr</name> <operator pos:start="149:28" pos:end="149:29">|=</operator> <name pos:start="149:31" pos:end="149:37">BIT_DZC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="151:21" pos:end="153:38"><if pos:start="151:21" pos:end="153:38">if <condition pos:start="151:24" pos:end="151:67">(<expr pos:start="151:25" pos:end="151:66"><operator pos:start="151:25" pos:end="151:25">(</operator><operator pos:start="151:26" pos:end="151:26">!</operator><operator pos:start="151:27" pos:end="151:27">(</operator><name pos:start="151:28" pos:end="151:31">fpsr</name> <operator pos:start="151:33" pos:end="151:33">&amp;</operator> <name pos:start="151:35" pos:end="151:41">BIT_IOE</name><operator pos:start="151:42" pos:end="151:42">)</operator><operator pos:start="151:43" pos:end="151:43">)</operator> <operator pos:start="151:45" pos:end="151:46">&amp;&amp;</operator> <operator pos:start="151:48" pos:end="151:48">(</operator><name pos:start="151:49" pos:end="151:55">arm_fpe</name> <operator pos:start="151:57" pos:end="151:57">&amp;</operator> <name pos:start="151:59" pos:end="151:65">BIT_IOC</name><operator pos:start="151:66" pos:end="151:66">)</operator></expr>)</condition><block type="pseudo" pos:start="153:23" pos:end="153:38"><block_content pos:start="153:23" pos:end="153:38">

                      <expr_stmt pos:start="153:23" pos:end="153:38"><expr pos:start="153:23" pos:end="153:37"><name pos:start="153:23" pos:end="153:26">fpsr</name> <operator pos:start="153:28" pos:end="153:29">|=</operator> <name pos:start="153:31" pos:end="153:37">BIT_IOC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="155:21" pos:end="155:38"><expr pos:start="155:21" pos:end="155:37"><name pos:start="155:21" pos:end="155:32"><name pos:start="155:21" pos:end="155:22">ts</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:27">fpa</name><operator pos:start="155:28" pos:end="155:28">.</operator><name pos:start="155:29" pos:end="155:32">fpsr</name></name><operator pos:start="155:33" pos:end="155:33">=</operator><name pos:start="155:34" pos:end="155:37">fpsr</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="157:19" pos:end="163:17">else <block pos:start="157:24" pos:end="163:17">{<block_content pos:start="161:21" pos:end="161:39"> <comment type="block" pos:start="157:26" pos:end="157:44">/* everything OK */</comment>

                    <comment type="block" pos:start="159:21" pos:end="159:38">/* increment PC */</comment>

                    <expr_stmt pos:start="161:21" pos:end="161:39"><expr pos:start="161:21" pos:end="161:38"><name pos:start="161:21" pos:end="161:33"><name pos:start="161:21" pos:end="161:23">env</name><operator pos:start="161:24" pos:end="161:25">-&gt;</operator><name pos:start="161:26" pos:end="161:29">regs</name><index pos:start="161:30" pos:end="161:33">[<expr pos:start="161:31" pos:end="161:32"><literal type="number" pos:start="161:31" pos:end="161:32">15</literal></expr>]</index></name> <operator pos:start="161:35" pos:end="161:36">+=</operator> <literal type="number" pos:start="161:38" pos:end="161:38">4</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block>

            <break pos:start="167:13" pos:end="167:18">break;</break>

        <case pos:start="169:9" pos:end="169:22">case <expr pos:start="169:14" pos:end="169:21"><name pos:start="169:14" pos:end="169:21">EXCP_SWI</name></expr>:</case>

        <case pos:start="171:9" pos:end="171:23">case <expr pos:start="171:14" pos:end="171:22"><name pos:start="171:14" pos:end="171:22">EXCP_BKPT</name></expr>:</case>

            <block pos:start="173:13" pos:end="317:13">{<block_content pos:start="175:17" pos:end="315:17">

                <expr_stmt pos:start="175:17" pos:end="175:30"><expr pos:start="175:17" pos:end="175:29"><name pos:start="175:17" pos:end="175:25"><name pos:start="175:17" pos:end="175:19">env</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:25">eabi</name></name> <operator pos:start="175:27" pos:end="175:27">=</operator> <literal type="number" pos:start="175:29" pos:end="175:29">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="177:17" pos:end="177:33">/* system call */</comment>

                <if_stmt pos:start="179:17" pos:end="223:17"><if pos:start="179:17" pos:end="203:17">if <condition pos:start="179:20" pos:end="179:40">(<expr pos:start="179:21" pos:end="179:39"><name pos:start="179:21" pos:end="179:26">trapnr</name> <operator pos:start="179:28" pos:end="179:29">==</operator> <name pos:start="179:31" pos:end="179:39">EXCP_BKPT</name></expr>)</condition> <block pos:start="179:42" pos:end="203:17">{<block_content pos:start="181:21" pos:end="201:21">

                    <if_stmt pos:start="181:21" pos:end="201:21"><if pos:start="181:21" pos:end="191:21">if <condition pos:start="181:24" pos:end="181:35">(<expr pos:start="181:25" pos:end="181:34"><name pos:start="181:25" pos:end="181:34"><name pos:start="181:25" pos:end="181:27">env</name><operator pos:start="181:28" pos:end="181:29">-&gt;</operator><name pos:start="181:30" pos:end="181:34">thumb</name></name></expr>)</condition> <block pos:start="181:37" pos:end="191:21">{<block_content pos:start="185:25" pos:end="189:43">

                        <comment type="block" pos:start="183:25" pos:end="183:69">/* FIXME - what to do if get_user() fails? */</comment>

                        <expr_stmt pos:start="185:25" pos:end="185:68"><expr pos:start="185:25" pos:end="185:67"><call pos:start="185:25" pos:end="185:67"><name pos:start="185:25" pos:end="185:41">get_user_code_u16</name><argument_list pos:start="185:42" pos:end="185:67">(<argument pos:start="185:43" pos:end="185:46"><expr pos:start="185:43" pos:end="185:46"><name pos:start="185:43" pos:end="185:46">insn</name></expr></argument>, <argument pos:start="185:49" pos:end="185:61"><expr pos:start="185:49" pos:end="185:61"><name pos:start="185:49" pos:end="185:61"><name pos:start="185:49" pos:end="185:51">env</name><operator pos:start="185:52" pos:end="185:53">-&gt;</operator><name pos:start="185:54" pos:end="185:57">regs</name><index pos:start="185:58" pos:end="185:61">[<expr pos:start="185:59" pos:end="185:60"><literal type="number" pos:start="185:59" pos:end="185:60">15</literal></expr>]</index></name></expr></argument>, <argument pos:start="185:64" pos:end="185:66"><expr pos:start="185:64" pos:end="185:66"><name pos:start="185:64" pos:end="185:66">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="187:25" pos:end="187:40"><expr pos:start="187:25" pos:end="187:39"><name pos:start="187:25" pos:end="187:25">n</name> <operator pos:start="187:27" pos:end="187:27">=</operator> <name pos:start="187:29" pos:end="187:32">insn</name> <operator pos:start="187:34" pos:end="187:34">&amp;</operator> <literal type="number" pos:start="187:36" pos:end="187:39">0xff</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="189:25" pos:end="189:43"><expr pos:start="189:25" pos:end="189:42"><name pos:start="189:25" pos:end="189:37"><name pos:start="189:25" pos:end="189:27">env</name><operator pos:start="189:28" pos:end="189:29">-&gt;</operator><name pos:start="189:30" pos:end="189:33">regs</name><index pos:start="189:34" pos:end="189:37">[<expr pos:start="189:35" pos:end="189:36"><literal type="number" pos:start="189:35" pos:end="189:36">15</literal></expr>]</index></name> <operator pos:start="189:39" pos:end="189:40">+=</operator> <literal type="number" pos:start="189:42" pos:end="189:42">2</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="191:23" pos:end="201:21">else <block pos:start="191:28" pos:end="201:21">{<block_content pos:start="195:25" pos:end="199:43">

                        <comment type="block" pos:start="193:25" pos:end="193:69">/* FIXME - what to do if get_user() fails? */</comment>

                        <expr_stmt pos:start="195:25" pos:end="195:68"><expr pos:start="195:25" pos:end="195:67"><call pos:start="195:25" pos:end="195:67"><name pos:start="195:25" pos:end="195:41">get_user_code_u32</name><argument_list pos:start="195:42" pos:end="195:67">(<argument pos:start="195:43" pos:end="195:46"><expr pos:start="195:43" pos:end="195:46"><name pos:start="195:43" pos:end="195:46">insn</name></expr></argument>, <argument pos:start="195:49" pos:end="195:61"><expr pos:start="195:49" pos:end="195:61"><name pos:start="195:49" pos:end="195:61"><name pos:start="195:49" pos:end="195:51">env</name><operator pos:start="195:52" pos:end="195:53">-&gt;</operator><name pos:start="195:54" pos:end="195:57">regs</name><index pos:start="195:58" pos:end="195:61">[<expr pos:start="195:59" pos:end="195:60"><literal type="number" pos:start="195:59" pos:end="195:60">15</literal></expr>]</index></name></expr></argument>, <argument pos:start="195:64" pos:end="195:66"><expr pos:start="195:64" pos:end="195:66"><name pos:start="195:64" pos:end="195:66">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="197:25" pos:end="197:65"><expr pos:start="197:25" pos:end="197:64"><name pos:start="197:25" pos:end="197:25">n</name> <operator pos:start="197:27" pos:end="197:27">=</operator> <operator pos:start="197:29" pos:end="197:29">(</operator><name pos:start="197:30" pos:end="197:33">insn</name> <operator pos:start="197:35" pos:end="197:35">&amp;</operator> <literal type="number" pos:start="197:37" pos:end="197:39">0xf</literal><operator pos:start="197:40" pos:end="197:40">)</operator> <operator pos:start="197:42" pos:end="197:42">|</operator> <operator pos:start="197:44" pos:end="197:44">(</operator><operator pos:start="197:45" pos:end="197:45">(</operator><name pos:start="197:46" pos:end="197:49">insn</name> <operator pos:start="197:51" pos:end="197:52">&gt;&gt;</operator> <literal type="number" pos:start="197:54" pos:end="197:54">4</literal><operator pos:start="197:55" pos:end="197:55">)</operator> <operator pos:start="197:57" pos:end="197:57">&amp;</operator> <literal type="number" pos:start="197:59" pos:end="197:63">0xff0</literal><operator pos:start="197:64" pos:end="197:64">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="199:25" pos:end="199:43"><expr pos:start="199:25" pos:end="199:42"><name pos:start="199:25" pos:end="199:37"><name pos:start="199:25" pos:end="199:27">env</name><operator pos:start="199:28" pos:end="199:29">-&gt;</operator><name pos:start="199:30" pos:end="199:33">regs</name><index pos:start="199:34" pos:end="199:37">[<expr pos:start="199:35" pos:end="199:36"><literal type="number" pos:start="199:35" pos:end="199:36">15</literal></expr>]</index></name> <operator pos:start="199:39" pos:end="199:40">+=</operator> <literal type="number" pos:start="199:42" pos:end="199:42">4</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="203:19" pos:end="223:17">else <block pos:start="203:24" pos:end="223:17">{<block_content pos:start="205:21" pos:end="221:21">

                    <if_stmt pos:start="205:21" pos:end="221:21"><if pos:start="205:21" pos:end="213:21">if <condition pos:start="205:24" pos:end="205:35">(<expr pos:start="205:25" pos:end="205:34"><name pos:start="205:25" pos:end="205:34"><name pos:start="205:25" pos:end="205:27">env</name><operator pos:start="205:28" pos:end="205:29">-&gt;</operator><name pos:start="205:30" pos:end="205:34">thumb</name></name></expr>)</condition> <block pos:start="205:37" pos:end="213:21">{<block_content pos:start="209:25" pos:end="211:40">

                        <comment type="block" pos:start="207:25" pos:end="207:69">/* FIXME - what to do if get_user() fails? */</comment>

                        <expr_stmt pos:start="209:25" pos:end="209:72"><expr pos:start="209:25" pos:end="209:71"><call pos:start="209:25" pos:end="209:71"><name pos:start="209:25" pos:end="209:41">get_user_code_u16</name><argument_list pos:start="209:42" pos:end="209:71">(<argument pos:start="209:43" pos:end="209:46"><expr pos:start="209:43" pos:end="209:46"><name pos:start="209:43" pos:end="209:46">insn</name></expr></argument>, <argument pos:start="209:49" pos:end="209:65"><expr pos:start="209:49" pos:end="209:65"><name pos:start="209:49" pos:end="209:61"><name pos:start="209:49" pos:end="209:51">env</name><operator pos:start="209:52" pos:end="209:53">-&gt;</operator><name pos:start="209:54" pos:end="209:57">regs</name><index pos:start="209:58" pos:end="209:61">[<expr pos:start="209:59" pos:end="209:60"><literal type="number" pos:start="209:59" pos:end="209:60">15</literal></expr>]</index></name> <operator pos:start="209:63" pos:end="209:63">-</operator> <literal type="number" pos:start="209:65" pos:end="209:65">2</literal></expr></argument>, <argument pos:start="209:68" pos:end="209:70"><expr pos:start="209:68" pos:end="209:70"><name pos:start="209:68" pos:end="209:70">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="211:25" pos:end="211:40"><expr pos:start="211:25" pos:end="211:39"><name pos:start="211:25" pos:end="211:25">n</name> <operator pos:start="211:27" pos:end="211:27">=</operator> <name pos:start="211:29" pos:end="211:32">insn</name> <operator pos:start="211:34" pos:end="211:34">&amp;</operator> <literal type="number" pos:start="211:36" pos:end="211:39">0xff</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="213:23" pos:end="221:21">else <block pos:start="213:28" pos:end="221:21">{<block_content pos:start="217:25" pos:end="219:44">

                        <comment type="block" pos:start="215:25" pos:end="215:69">/* FIXME - what to do if get_user() fails? */</comment>

                        <expr_stmt pos:start="217:25" pos:end="217:72"><expr pos:start="217:25" pos:end="217:71"><call pos:start="217:25" pos:end="217:71"><name pos:start="217:25" pos:end="217:41">get_user_code_u32</name><argument_list pos:start="217:42" pos:end="217:71">(<argument pos:start="217:43" pos:end="217:46"><expr pos:start="217:43" pos:end="217:46"><name pos:start="217:43" pos:end="217:46">insn</name></expr></argument>, <argument pos:start="217:49" pos:end="217:65"><expr pos:start="217:49" pos:end="217:65"><name pos:start="217:49" pos:end="217:61"><name pos:start="217:49" pos:end="217:51">env</name><operator pos:start="217:52" pos:end="217:53">-&gt;</operator><name pos:start="217:54" pos:end="217:57">regs</name><index pos:start="217:58" pos:end="217:61">[<expr pos:start="217:59" pos:end="217:60"><literal type="number" pos:start="217:59" pos:end="217:60">15</literal></expr>]</index></name> <operator pos:start="217:63" pos:end="217:63">-</operator> <literal type="number" pos:start="217:65" pos:end="217:65">4</literal></expr></argument>, <argument pos:start="217:68" pos:end="217:70"><expr pos:start="217:68" pos:end="217:70"><name pos:start="217:68" pos:end="217:70">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="219:25" pos:end="219:44"><expr pos:start="219:25" pos:end="219:43"><name pos:start="219:25" pos:end="219:25">n</name> <operator pos:start="219:27" pos:end="219:27">=</operator> <name pos:start="219:29" pos:end="219:32">insn</name> <operator pos:start="219:34" pos:end="219:34">&amp;</operator> <literal type="number" pos:start="219:36" pos:end="219:43">0xffffff</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>



                <if_stmt pos:start="227:17" pos:end="315:17"><if pos:start="227:17" pos:end="231:17">if <condition pos:start="227:20" pos:end="227:43">(<expr pos:start="227:21" pos:end="227:42"><name pos:start="227:21" pos:end="227:21">n</name> <operator pos:start="227:23" pos:end="227:24">==</operator> <name pos:start="227:26" pos:end="227:42">ARM_NR_cacheflush</name></expr>)</condition> <block pos:start="227:45" pos:end="231:17">{<block_content>

                    <comment type="block" pos:start="229:21" pos:end="229:29">/* nop */</comment>

                </block_content>}</block></if> <if type="elseif" pos:start="231:19" pos:end="237:17">else if <condition pos:start="231:27" pos:end="233:60">(<expr pos:start="231:28" pos:end="233:59"><name pos:start="231:28" pos:end="231:28">n</name> <operator pos:start="231:30" pos:end="231:31">==</operator> <name pos:start="231:33" pos:end="231:50">ARM_NR_semihosting</name>

                           <operator pos:start="233:28" pos:end="233:29">||</operator> <name pos:start="233:31" pos:end="233:31">n</name> <operator pos:start="233:33" pos:end="233:34">==</operator> <name pos:start="233:36" pos:end="233:59">ARM_NR_thumb_semihosting</name></expr>)</condition> <block pos:start="233:62" pos:end="237:17">{<block_content pos:start="235:21" pos:end="235:60">

                    <expr_stmt pos:start="235:21" pos:end="235:60"><expr pos:start="235:21" pos:end="235:59"><name pos:start="235:21" pos:end="235:32"><name pos:start="235:21" pos:end="235:23">env</name><operator pos:start="235:24" pos:end="235:25">-&gt;</operator><name pos:start="235:26" pos:end="235:29">regs</name><index pos:start="235:30" pos:end="235:32">[<expr pos:start="235:31" pos:end="235:31"><literal type="number" pos:start="235:31" pos:end="235:31">0</literal></expr>]</index></name> <operator pos:start="235:34" pos:end="235:34">=</operator> <call pos:start="235:36" pos:end="235:59"><name pos:start="235:36" pos:end="235:53">do_arm_semihosting</name> <argument_list pos:start="235:55" pos:end="235:59">(<argument pos:start="235:56" pos:end="235:58"><expr pos:start="235:56" pos:end="235:58"><name pos:start="235:56" pos:end="235:58">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="237:19" pos:end="311:17">else if <condition pos:start="237:27" pos:end="237:73">(<expr pos:start="237:28" pos:end="237:72"><name pos:start="237:28" pos:end="237:28">n</name> <operator pos:start="237:30" pos:end="237:31">==</operator> <literal type="number" pos:start="237:33" pos:end="237:33">0</literal> <operator pos:start="237:35" pos:end="237:36">||</operator> <name pos:start="237:38" pos:end="237:38">n</name> <operator pos:start="237:40" pos:end="237:41">&gt;=</operator> <name pos:start="237:43" pos:end="237:58">ARM_SYSCALL_BASE</name> <operator pos:start="237:60" pos:end="237:61">||</operator> <name pos:start="237:63" pos:end="237:72"><name pos:start="237:63" pos:end="237:65">env</name><operator pos:start="237:66" pos:end="237:67">-&gt;</operator><name pos:start="237:68" pos:end="237:72">thumb</name></name></expr>)</condition> <block pos:start="237:75" pos:end="311:17">{<block_content pos:start="241:21" pos:end="309:21">

                    <comment type="block" pos:start="239:21" pos:end="239:39">/* linux syscall */</comment>

                    <if_stmt pos:start="241:21" pos:end="251:21"><if pos:start="241:21" pos:end="245:21">if <condition pos:start="241:24" pos:end="241:45">(<expr pos:start="241:25" pos:end="241:44"><name pos:start="241:25" pos:end="241:34"><name pos:start="241:25" pos:end="241:27">env</name><operator pos:start="241:28" pos:end="241:29">-&gt;</operator><name pos:start="241:30" pos:end="241:34">thumb</name></name> <operator pos:start="241:36" pos:end="241:37">||</operator> <name pos:start="241:39" pos:end="241:39">n</name> <operator pos:start="241:41" pos:end="241:42">==</operator> <literal type="number" pos:start="241:44" pos:end="241:44">0</literal></expr>)</condition> <block pos:start="241:47" pos:end="245:21">{<block_content pos:start="243:25" pos:end="243:41">

                        <expr_stmt pos:start="243:25" pos:end="243:41"><expr pos:start="243:25" pos:end="243:40"><name pos:start="243:25" pos:end="243:25">n</name> <operator pos:start="243:27" pos:end="243:27">=</operator> <name pos:start="243:29" pos:end="243:40"><name pos:start="243:29" pos:end="243:31">env</name><operator pos:start="243:32" pos:end="243:33">-&gt;</operator><name pos:start="243:34" pos:end="243:37">regs</name><index pos:start="243:38" pos:end="243:40">[<expr pos:start="243:39" pos:end="243:39"><literal type="number" pos:start="243:39" pos:end="243:39">7</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="245:23" pos:end="251:21">else <block pos:start="245:28" pos:end="251:21">{<block_content pos:start="247:25" pos:end="249:38">

                        <expr_stmt pos:start="247:25" pos:end="247:46"><expr pos:start="247:25" pos:end="247:45"><name pos:start="247:25" pos:end="247:25">n</name> <operator pos:start="247:27" pos:end="247:28">-=</operator> <name pos:start="247:30" pos:end="247:45">ARM_SYSCALL_BASE</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="249:25" pos:end="249:38"><expr pos:start="249:25" pos:end="249:37"><name pos:start="249:25" pos:end="249:33"><name pos:start="249:25" pos:end="249:27">env</name><operator pos:start="249:28" pos:end="249:29">-&gt;</operator><name pos:start="249:30" pos:end="249:33">eabi</name></name> <operator pos:start="249:35" pos:end="249:35">=</operator> <literal type="number" pos:start="249:37" pos:end="249:37">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="253:21" pos:end="309:21"><if pos:start="253:21" pos:end="289:21">if <condition pos:start="253:24" pos:end="253:41">( <expr pos:start="253:26" pos:end="253:40"><name pos:start="253:26" pos:end="253:26">n</name> <operator pos:start="253:28" pos:end="253:28">&gt;</operator> <name pos:start="253:30" pos:end="253:40">ARM_NR_BASE</name></expr>)</condition> <block pos:start="253:43" pos:end="289:21">{<block_content pos:start="255:25" pos:end="287:25">

                        <switch pos:start="255:25" pos:end="287:25">switch <condition pos:start="255:32" pos:end="255:34">(<expr pos:start="255:33" pos:end="255:33"><name pos:start="255:33" pos:end="255:33">n</name></expr>)</condition> <block pos:start="255:36" pos:end="287:25">{<block_content pos:start="257:25" pos:end="285:34">

                        <case pos:start="257:25" pos:end="257:47">case <expr pos:start="257:30" pos:end="257:46"><name pos:start="257:30" pos:end="257:46">ARM_NR_cacheflush</name></expr>:</case>

                            <comment type="block" pos:start="259:29" pos:end="259:37">/* nop */</comment>

                            <break pos:start="261:29" pos:end="261:34">break;</break>

                        <case pos:start="263:25" pos:end="263:44">case <expr pos:start="263:30" pos:end="263:43"><name pos:start="263:30" pos:end="263:43">ARM_NR_set_tls</name></expr>:</case>

                            <expr_stmt pos:start="265:29" pos:end="265:59"><expr pos:start="265:29" pos:end="265:58"><call pos:start="265:29" pos:end="265:58"><name pos:start="265:29" pos:end="265:39">cpu_set_tls</name><argument_list pos:start="265:40" pos:end="265:58">(<argument pos:start="265:41" pos:end="265:43"><expr pos:start="265:41" pos:end="265:43"><name pos:start="265:41" pos:end="265:43">env</name></expr></argument>, <argument pos:start="265:46" pos:end="265:57"><expr pos:start="265:46" pos:end="265:57"><name pos:start="265:46" pos:end="265:57"><name pos:start="265:46" pos:end="265:48">env</name><operator pos:start="265:49" pos:end="265:50">-&gt;</operator><name pos:start="265:51" pos:end="265:54">regs</name><index pos:start="265:55" pos:end="265:57">[<expr pos:start="265:56" pos:end="265:56"><literal type="number" pos:start="265:56" pos:end="265:56">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="267:29" pos:end="267:45"><expr pos:start="267:29" pos:end="267:44"><name pos:start="267:29" pos:end="267:40"><name pos:start="267:29" pos:end="267:31">env</name><operator pos:start="267:32" pos:end="267:33">-&gt;</operator><name pos:start="267:34" pos:end="267:37">regs</name><index pos:start="267:38" pos:end="267:40">[<expr pos:start="267:39" pos:end="267:39"><literal type="number" pos:start="267:39" pos:end="267:39">0</literal></expr>]</index></name> <operator pos:start="267:42" pos:end="267:42">=</operator> <literal type="number" pos:start="267:44" pos:end="267:44">0</literal></expr>;</expr_stmt>

                            <break pos:start="269:29" pos:end="269:34">break;</break>

                        <case pos:start="271:25" pos:end="271:47">case <expr pos:start="271:30" pos:end="271:46"><name pos:start="271:30" pos:end="271:46">ARM_NR_breakpoint</name></expr>:</case>

                            <expr_stmt pos:start="273:29" pos:end="273:64"><expr pos:start="273:29" pos:end="273:63"><name pos:start="273:29" pos:end="273:41"><name pos:start="273:29" pos:end="273:31">env</name><operator pos:start="273:32" pos:end="273:33">-&gt;</operator><name pos:start="273:34" pos:end="273:37">regs</name><index pos:start="273:38" pos:end="273:41">[<expr pos:start="273:39" pos:end="273:40"><literal type="number" pos:start="273:39" pos:end="273:40">15</literal></expr>]</index></name> <operator pos:start="273:43" pos:end="273:44">-=</operator> <ternary pos:start="273:46" pos:end="273:63"><condition pos:start="273:46" pos:end="273:57"><expr pos:start="273:46" pos:end="273:55"><name pos:start="273:46" pos:end="273:55"><name pos:start="273:46" pos:end="273:48">env</name><operator pos:start="273:49" pos:end="273:50">-&gt;</operator><name pos:start="273:51" pos:end="273:55">thumb</name></name></expr> ?</condition><then pos:start="273:59" pos:end="273:59"> <expr pos:start="273:59" pos:end="273:59"><literal type="number" pos:start="273:59" pos:end="273:59">2</literal></expr> </then><else pos:start="273:61" pos:end="273:63">: <expr pos:start="273:63" pos:end="273:63"><literal type="number" pos:start="273:63" pos:end="273:63">4</literal></expr></else></ternary></expr>;</expr_stmt>

                            <goto pos:start="275:29" pos:end="275:44">goto <name pos:start="275:34" pos:end="275:43">excp_debug</name>;</goto>

                        <default pos:start="277:25" pos:end="277:32">default:</default>

                            <expr_stmt pos:start="279:29" pos:end="281:40"><expr pos:start="279:29" pos:end="281:39"><call pos:start="279:29" pos:end="281:39"><name pos:start="279:29" pos:end="279:36">gemu_log</name><argument_list pos:start="279:37" pos:end="281:39">(<argument pos:start="279:38" pos:end="279:76"><expr pos:start="279:38" pos:end="279:76"><literal type="string" pos:start="279:38" pos:end="279:76">"qemu: Unsupported ARM syscall: 0x%x\n"</literal></expr></argument>,

                                     <argument pos:start="281:38" pos:end="281:38"><expr pos:start="281:38" pos:end="281:38"><name pos:start="281:38" pos:end="281:38">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="283:29" pos:end="283:58"><expr pos:start="283:29" pos:end="283:57"><name pos:start="283:29" pos:end="283:40"><name pos:start="283:29" pos:end="283:31">env</name><operator pos:start="283:32" pos:end="283:33">-&gt;</operator><name pos:start="283:34" pos:end="283:37">regs</name><index pos:start="283:38" pos:end="283:40">[<expr pos:start="283:39" pos:end="283:39"><literal type="number" pos:start="283:39" pos:end="283:39">0</literal></expr>]</index></name> <operator pos:start="283:42" pos:end="283:42">=</operator> <operator pos:start="283:44" pos:end="283:44">-</operator><name pos:start="283:45" pos:end="283:57">TARGET_ENOSYS</name></expr>;</expr_stmt>

                            <break pos:start="285:29" pos:end="285:34">break;</break>

                        </block_content>}</block></switch>

                    </block_content>}</block></if> <else pos:start="289:23" pos:end="309:21">else <block pos:start="289:28" pos:end="309:21">{<block_content pos:start="291:25" pos:end="307:56">

                        <expr_stmt pos:start="291:25" pos:end="307:56"><expr pos:start="291:25" pos:end="307:55"><name pos:start="291:25" pos:end="291:36"><name pos:start="291:25" pos:end="291:27">env</name><operator pos:start="291:28" pos:end="291:29">-&gt;</operator><name pos:start="291:30" pos:end="291:33">regs</name><index pos:start="291:34" pos:end="291:36">[<expr pos:start="291:35" pos:end="291:35"><literal type="number" pos:start="291:35" pos:end="291:35">0</literal></expr>]</index></name> <operator pos:start="291:38" pos:end="291:38">=</operator> <call pos:start="291:40" pos:end="307:55"><name pos:start="291:40" pos:end="291:49">do_syscall</name><argument_list pos:start="291:50" pos:end="307:55">(<argument pos:start="291:51" pos:end="291:53"><expr pos:start="291:51" pos:end="291:53"><name pos:start="291:51" pos:end="291:53">env</name></expr></argument>,

                                                  <argument pos:start="293:51" pos:end="293:51"><expr pos:start="293:51" pos:end="293:51"><name pos:start="293:51" pos:end="293:51">n</name></expr></argument>,

                                                  <argument pos:start="295:51" pos:end="295:62"><expr pos:start="295:51" pos:end="295:62"><name pos:start="295:51" pos:end="295:62"><name pos:start="295:51" pos:end="295:53">env</name><operator pos:start="295:54" pos:end="295:55">-&gt;</operator><name pos:start="295:56" pos:end="295:59">regs</name><index pos:start="295:60" pos:end="295:62">[<expr pos:start="295:61" pos:end="295:61"><literal type="number" pos:start="295:61" pos:end="295:61">0</literal></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="297:51" pos:end="297:62"><expr pos:start="297:51" pos:end="297:62"><name pos:start="297:51" pos:end="297:62"><name pos:start="297:51" pos:end="297:53">env</name><operator pos:start="297:54" pos:end="297:55">-&gt;</operator><name pos:start="297:56" pos:end="297:59">regs</name><index pos:start="297:60" pos:end="297:62">[<expr pos:start="297:61" pos:end="297:61"><literal type="number" pos:start="297:61" pos:end="297:61">1</literal></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="299:51" pos:end="299:62"><expr pos:start="299:51" pos:end="299:62"><name pos:start="299:51" pos:end="299:62"><name pos:start="299:51" pos:end="299:53">env</name><operator pos:start="299:54" pos:end="299:55">-&gt;</operator><name pos:start="299:56" pos:end="299:59">regs</name><index pos:start="299:60" pos:end="299:62">[<expr pos:start="299:61" pos:end="299:61"><literal type="number" pos:start="299:61" pos:end="299:61">2</literal></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="301:51" pos:end="301:62"><expr pos:start="301:51" pos:end="301:62"><name pos:start="301:51" pos:end="301:62"><name pos:start="301:51" pos:end="301:53">env</name><operator pos:start="301:54" pos:end="301:55">-&gt;</operator><name pos:start="301:56" pos:end="301:59">regs</name><index pos:start="301:60" pos:end="301:62">[<expr pos:start="301:61" pos:end="301:61"><literal type="number" pos:start="301:61" pos:end="301:61">3</literal></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="303:51" pos:end="303:62"><expr pos:start="303:51" pos:end="303:62"><name pos:start="303:51" pos:end="303:62"><name pos:start="303:51" pos:end="303:53">env</name><operator pos:start="303:54" pos:end="303:55">-&gt;</operator><name pos:start="303:56" pos:end="303:59">regs</name><index pos:start="303:60" pos:end="303:62">[<expr pos:start="303:61" pos:end="303:61"><literal type="number" pos:start="303:61" pos:end="303:61">4</literal></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="305:51" pos:end="305:62"><expr pos:start="305:51" pos:end="305:62"><name pos:start="305:51" pos:end="305:62"><name pos:start="305:51" pos:end="305:53">env</name><operator pos:start="305:54" pos:end="305:55">-&gt;</operator><name pos:start="305:56" pos:end="305:59">regs</name><index pos:start="305:60" pos:end="305:62">[<expr pos:start="305:61" pos:end="305:61"><literal type="number" pos:start="305:61" pos:end="305:61">5</literal></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="307:51" pos:end="307:51"><expr pos:start="307:51" pos:end="307:51"><literal type="number" pos:start="307:51" pos:end="307:51">0</literal></expr></argument>, <argument pos:start="307:54" pos:end="307:54"><expr pos:start="307:54" pos:end="307:54"><literal type="number" pos:start="307:54" pos:end="307:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="311:19" pos:end="315:17">else <block pos:start="311:24" pos:end="315:17">{<block_content pos:start="313:21" pos:end="313:31">

                    <goto pos:start="313:21" pos:end="313:31">goto <name pos:start="313:26" pos:end="313:30">error</name>;</goto>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block>

            <break pos:start="319:13" pos:end="319:18">break;</break>

        <case pos:start="321:9" pos:end="321:28">case <expr pos:start="321:14" pos:end="321:27"><name pos:start="321:14" pos:end="321:27">EXCP_INTERRUPT</name></expr>:</case>

            <comment type="block" pos:start="323:13" pos:end="323:67">/* just indicate that signals should be handled asap */</comment>

            <break pos:start="325:13" pos:end="325:18">break;</break>

        <case pos:start="327:9" pos:end="327:24">case <expr pos:start="327:14" pos:end="327:23"><name pos:start="327:14" pos:end="327:23">EXCP_STREX</name></expr>:</case>

            <if_stmt pos:start="329:13" pos:end="333:13"><if pos:start="329:13" pos:end="333:13">if <condition pos:start="329:16" pos:end="329:31">(<expr pos:start="329:17" pos:end="329:30"><operator pos:start="329:17" pos:end="329:17">!</operator><call pos:start="329:18" pos:end="329:30"><name pos:start="329:18" pos:end="329:25">do_strex</name><argument_list pos:start="329:26" pos:end="329:30">(<argument pos:start="329:27" pos:end="329:29"><expr pos:start="329:27" pos:end="329:29"><name pos:start="329:27" pos:end="329:29">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="329:33" pos:end="333:13">{<block_content pos:start="331:17" pos:end="331:22">

                <break pos:start="331:17" pos:end="331:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="335:13" pos:end="335:39">/* fall through for segv */</comment>

        <case pos:start="337:9" pos:end="337:33">case <expr pos:start="337:14" pos:end="337:32"><name pos:start="337:14" pos:end="337:32">EXCP_PREFETCH_ABORT</name></expr>:</case>

        <case pos:start="339:9" pos:end="339:29">case <expr pos:start="339:14" pos:end="339:28"><name pos:start="339:14" pos:end="339:28">EXCP_DATA_ABORT</name></expr>:</case>

            <expr_stmt pos:start="341:13" pos:end="341:43"><expr pos:start="341:13" pos:end="341:42"><name pos:start="341:13" pos:end="341:16">addr</name> <operator pos:start="341:18" pos:end="341:18">=</operator> <name pos:start="341:20" pos:end="341:42"><name pos:start="341:20" pos:end="341:22">env</name><operator pos:start="341:23" pos:end="341:24">-&gt;</operator><name pos:start="341:25" pos:end="341:33">exception</name><operator pos:start="341:34" pos:end="341:34">.</operator><name pos:start="341:35" pos:end="341:42">vaddress</name></name></expr>;</expr_stmt>

            <block pos:start="343:13" pos:end="357:13">{<block_content pos:start="345:17" pos:end="355:56">

                <expr_stmt pos:start="345:17" pos:end="345:47"><expr pos:start="345:17" pos:end="345:46"><name pos:start="345:17" pos:end="345:29"><name pos:start="345:17" pos:end="345:20">info</name><operator pos:start="345:21" pos:end="345:21">.</operator><name pos:start="345:22" pos:end="345:29">si_signo</name></name> <operator pos:start="345:31" pos:end="345:31">=</operator> <name pos:start="345:33" pos:end="345:46">TARGET_SIGSEGV</name></expr>;</expr_stmt>

                <expr_stmt pos:start="347:17" pos:end="347:34"><expr pos:start="347:17" pos:end="347:33"><name pos:start="347:17" pos:end="347:29"><name pos:start="347:17" pos:end="347:20">info</name><operator pos:start="347:21" pos:end="347:21">.</operator><name pos:start="347:22" pos:end="347:29">si_errno</name></name> <operator pos:start="347:31" pos:end="347:31">=</operator> <literal type="number" pos:start="347:33" pos:end="347:33">0</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="349:17" pos:end="349:48">/* XXX: check env-&gt;error_code */</comment>

                <expr_stmt pos:start="351:17" pos:end="351:50"><expr pos:start="351:17" pos:end="351:49"><name pos:start="351:17" pos:end="351:28"><name pos:start="351:17" pos:end="351:20">info</name><operator pos:start="351:21" pos:end="351:21">.</operator><name pos:start="351:22" pos:end="351:28">si_code</name></name> <operator pos:start="351:30" pos:end="351:30">=</operator> <name pos:start="351:32" pos:end="351:49">TARGET_SEGV_MAPERR</name></expr>;</expr_stmt>

                <expr_stmt pos:start="353:17" pos:end="353:54"><expr pos:start="353:17" pos:end="353:53"><name pos:start="353:17" pos:end="353:46"><name pos:start="353:17" pos:end="353:20">info</name><operator pos:start="353:21" pos:end="353:21">.</operator><name pos:start="353:22" pos:end="353:30">_sifields</name><operator pos:start="353:31" pos:end="353:31">.</operator><name pos:start="353:32" pos:end="353:40">_sigfault</name><operator pos:start="353:41" pos:end="353:41">.</operator><name pos:start="353:42" pos:end="353:46">_addr</name></name> <operator pos:start="353:48" pos:end="353:48">=</operator> <name pos:start="353:50" pos:end="353:53">addr</name></expr>;</expr_stmt>

                <expr_stmt pos:start="355:17" pos:end="355:56"><expr pos:start="355:17" pos:end="355:55"><call pos:start="355:17" pos:end="355:55"><name pos:start="355:17" pos:end="355:28">queue_signal</name><argument_list pos:start="355:29" pos:end="355:55">(<argument pos:start="355:30" pos:end="355:32"><expr pos:start="355:30" pos:end="355:32"><name pos:start="355:30" pos:end="355:32">env</name></expr></argument>, <argument pos:start="355:35" pos:end="355:47"><expr pos:start="355:35" pos:end="355:47"><name pos:start="355:35" pos:end="355:47"><name pos:start="355:35" pos:end="355:38">info</name><operator pos:start="355:39" pos:end="355:39">.</operator><name pos:start="355:40" pos:end="355:47">si_signo</name></name></expr></argument>, <argument pos:start="355:50" pos:end="355:54"><expr pos:start="355:50" pos:end="355:54"><operator pos:start="355:50" pos:end="355:50">&amp;</operator><name pos:start="355:51" pos:end="355:54">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="359:13" pos:end="359:18">break;</break>

        <case pos:start="361:9" pos:end="361:24">case <expr pos:start="361:14" pos:end="361:23"><name pos:start="361:14" pos:end="361:23">EXCP_DEBUG</name></expr>:</case>

        <label pos:start="363:9" pos:end="363:19"><name pos:start="363:9" pos:end="363:18">excp_debug</name>:</label>

            <block pos:start="365:13" pos:end="387:13">{<block_content pos:start="367:17" pos:end="385:19">

                <decl_stmt pos:start="367:17" pos:end="367:24"><decl pos:start="367:17" pos:end="367:23"><type pos:start="367:17" pos:end="367:19"><name pos:start="367:17" pos:end="367:19">int</name></type> <name pos:start="367:21" pos:end="367:23">sig</name></decl>;</decl_stmt>



                <expr_stmt pos:start="371:17" pos:end="371:56"><expr pos:start="371:17" pos:end="371:55"><name pos:start="371:17" pos:end="371:19">sig</name> <operator pos:start="371:21" pos:end="371:21">=</operator> <call pos:start="371:23" pos:end="371:55"><name pos:start="371:23" pos:end="371:35">gdb_handlesig</name><argument_list pos:start="371:36" pos:end="371:55">(<argument pos:start="371:37" pos:end="371:38"><expr pos:start="371:37" pos:end="371:38"><name pos:start="371:37" pos:end="371:38">cs</name></expr></argument>, <argument pos:start="371:41" pos:end="371:54"><expr pos:start="371:41" pos:end="371:54"><name pos:start="371:41" pos:end="371:54">TARGET_SIGTRAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="373:17" pos:end="385:19"><if pos:start="373:17" pos:end="385:19">if <condition pos:start="373:20" pos:end="373:24">(<expr pos:start="373:21" pos:end="373:23"><name pos:start="373:21" pos:end="373:23">sig</name></expr>)</condition>

                  <block pos:start="375:19" pos:end="385:19">{<block_content pos:start="377:21" pos:end="383:60">

                    <expr_stmt pos:start="377:21" pos:end="377:40"><expr pos:start="377:21" pos:end="377:39"><name pos:start="377:21" pos:end="377:33"><name pos:start="377:21" pos:end="377:24">info</name><operator pos:start="377:25" pos:end="377:25">.</operator><name pos:start="377:26" pos:end="377:33">si_signo</name></name> <operator pos:start="377:35" pos:end="377:35">=</operator> <name pos:start="377:37" pos:end="377:39">sig</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="379:21" pos:end="379:38"><expr pos:start="379:21" pos:end="379:37"><name pos:start="379:21" pos:end="379:33"><name pos:start="379:21" pos:end="379:24">info</name><operator pos:start="379:25" pos:end="379:25">.</operator><name pos:start="379:26" pos:end="379:33">si_errno</name></name> <operator pos:start="379:35" pos:end="379:35">=</operator> <literal type="number" pos:start="379:37" pos:end="379:37">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="381:21" pos:end="381:53"><expr pos:start="381:21" pos:end="381:52"><name pos:start="381:21" pos:end="381:32"><name pos:start="381:21" pos:end="381:24">info</name><operator pos:start="381:25" pos:end="381:25">.</operator><name pos:start="381:26" pos:end="381:32">si_code</name></name> <operator pos:start="381:34" pos:end="381:34">=</operator> <name pos:start="381:36" pos:end="381:52">TARGET_TRAP_BRKPT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="383:21" pos:end="383:60"><expr pos:start="383:21" pos:end="383:59"><call pos:start="383:21" pos:end="383:59"><name pos:start="383:21" pos:end="383:32">queue_signal</name><argument_list pos:start="383:33" pos:end="383:59">(<argument pos:start="383:34" pos:end="383:36"><expr pos:start="383:34" pos:end="383:36"><name pos:start="383:34" pos:end="383:36">env</name></expr></argument>, <argument pos:start="383:39" pos:end="383:51"><expr pos:start="383:39" pos:end="383:51"><name pos:start="383:39" pos:end="383:51"><name pos:start="383:39" pos:end="383:42">info</name><operator pos:start="383:43" pos:end="383:43">.</operator><name pos:start="383:44" pos:end="383:51">si_signo</name></name></expr></argument>, <argument pos:start="383:54" pos:end="383:58"><expr pos:start="383:54" pos:end="383:58"><operator pos:start="383:54" pos:end="383:54">&amp;</operator><name pos:start="383:55" pos:end="383:58">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                  </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="389:13" pos:end="389:18">break;</break>

        <case pos:start="391:9" pos:end="391:30">case <expr pos:start="391:14" pos:end="391:29"><name pos:start="391:14" pos:end="391:29">EXCP_KERNEL_TRAP</name></expr>:</case>

            <if_stmt pos:start="393:13" pos:end="395:25"><if pos:start="393:13" pos:end="395:25">if <condition pos:start="393:16" pos:end="393:36">(<expr pos:start="393:17" pos:end="393:35"><call pos:start="393:17" pos:end="393:35"><name pos:start="393:17" pos:end="393:30">do_kernel_trap</name><argument_list pos:start="393:31" pos:end="393:35">(<argument pos:start="393:32" pos:end="393:34"><expr pos:start="393:32" pos:end="393:34"><name pos:start="393:32" pos:end="393:34">env</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="395:15" pos:end="395:25"><block_content pos:start="395:15" pos:end="395:25">

              <goto pos:start="395:15" pos:end="395:25">goto <name pos:start="395:20" pos:end="395:24">error</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="397:13" pos:end="397:18">break;</break>

        <case pos:start="399:9" pos:end="399:24">case <expr pos:start="399:14" pos:end="399:23"><name pos:start="399:14" pos:end="399:23">EXCP_YIELD</name></expr>:</case>

            <comment type="block" pos:start="401:13" pos:end="401:74">/* nothing to do here for user-mode, just resume guest code */</comment>

            <break pos:start="403:13" pos:end="403:18">break;</break>

        <default pos:start="405:9" pos:end="405:16">default:</default>

        <label pos:start="407:9" pos:end="407:14"><name pos:start="407:9" pos:end="407:13">error</name>:</label>

            <expr_stmt pos:start="409:13" pos:end="409:86"><expr pos:start="409:13" pos:end="409:85"><call pos:start="409:13" pos:end="409:85"><name pos:start="409:13" pos:end="409:21">EXCP_DUMP</name><argument_list pos:start="409:22" pos:end="409:85">(<argument pos:start="409:23" pos:end="409:25"><expr pos:start="409:23" pos:end="409:25"><name pos:start="409:23" pos:end="409:25">env</name></expr></argument>, <argument pos:start="409:28" pos:end="409:76"><expr pos:start="409:28" pos:end="409:76"><literal type="string" pos:start="409:28" pos:end="409:76">"qemu: unhandled CPU exception 0x%x - aborting\n"</literal></expr></argument>, <argument pos:start="409:79" pos:end="409:84"><expr pos:start="409:79" pos:end="409:84"><name pos:start="409:79" pos:end="409:84">trapnr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="411:13" pos:end="411:20"><expr pos:start="411:13" pos:end="411:19"><call pos:start="411:13" pos:end="411:19"><name pos:start="411:13" pos:end="411:17">abort</name><argument_list pos:start="411:18" pos:end="411:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="415:9" pos:end="415:37"><expr pos:start="415:9" pos:end="415:36"><call pos:start="415:9" pos:end="415:36"><name pos:start="415:9" pos:end="415:31">process_pending_signals</name><argument_list pos:start="415:32" pos:end="415:36">(<argument pos:start="415:33" pos:end="415:35"><expr pos:start="415:33" pos:end="415:35"><name pos:start="415:33" pos:end="415:35">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
