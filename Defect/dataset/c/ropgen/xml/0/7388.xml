<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7388.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">tlb_info_pae32</name><parameter_list pos:start="1:27" pos:end="1:55">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:34">Monitor</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">mon</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:54"><decl pos:start="1:42" pos:end="1:54"><type pos:start="1:42" pos:end="1:54"><name pos:start="1:42" pos:end="1:49">CPUState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">l1</name></decl>, <decl pos:start="5:13" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:14">l2</name></decl>, <decl pos:start="5:17" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:18">l3</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:17">pdpe</name></decl>, <decl pos:start="7:20" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:20" pos:end="7:22">pde</name></decl>, <decl pos:start="7:25" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:25" pos:end="7:27">pte</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:21">pdp_addr</name></decl>, <decl pos:start="9:24" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:24" pos:end="9:30">pd_addr</name></decl>, <decl pos:start="9:33" pos:end="9:39"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:33" pos:end="9:39">pt_addr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:12">pdp_addr</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:25"><name pos:start="13:16" pos:end="13:18">env</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:22">cr</name><index pos:start="13:23" pos:end="13:25">[<expr pos:start="13:24" pos:end="13:24"><literal type="number" pos:start="13:24" pos:end="13:24">3</literal></expr>]</index></name> <operator pos:start="13:27" pos:end="13:27">&amp;</operator> <operator pos:start="13:29" pos:end="13:29">~</operator><literal type="number" pos:start="13:30" pos:end="13:33">0x1f</literal></expr>;</expr_stmt>

    <for pos:start="15:5" pos:end="73:5">for <control pos:start="15:9" pos:end="15:30">(<init pos:start="15:10" pos:end="15:16"><expr pos:start="15:10" pos:end="15:15"><name pos:start="15:10" pos:end="15:11">l1</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>;</init> <condition pos:start="15:18" pos:end="15:24"><expr pos:start="15:18" pos:end="15:23"><name pos:start="15:18" pos:end="15:19">l1</name> <operator pos:start="15:21" pos:end="15:21">&lt;</operator> <literal type="number" pos:start="15:23" pos:end="15:23">4</literal></expr>;</condition> <incr pos:start="15:26" pos:end="15:29"><expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:27">l1</name><operator pos:start="15:28" pos:end="15:29">++</operator></expr></incr>)</control> <block pos:start="15:32" pos:end="73:5">{<block_content pos:start="17:9" pos:end="71:9">

        <expr_stmt pos:start="17:9" pos:end="17:62"><expr pos:start="17:9" pos:end="17:61"><call pos:start="17:9" pos:end="17:61"><name pos:start="17:9" pos:end="17:32">cpu_physical_memory_read</name><argument_list pos:start="17:33" pos:end="17:61">(<argument pos:start="17:34" pos:end="17:50"><expr pos:start="17:34" pos:end="17:50"><name pos:start="17:34" pos:end="17:41">pdp_addr</name> <operator pos:start="17:43" pos:end="17:43">+</operator> <name pos:start="17:45" pos:end="17:46">l1</name> <operator pos:start="17:48" pos:end="17:48">*</operator> <literal type="number" pos:start="17:50" pos:end="17:50">8</literal></expr></argument>, <argument pos:start="17:53" pos:end="17:57"><expr pos:start="17:53" pos:end="17:57"><operator pos:start="17:53" pos:end="17:53">&amp;</operator><name pos:start="17:54" pos:end="17:57">pdpe</name></expr></argument>, <argument pos:start="17:60" pos:end="17:60"><expr pos:start="17:60" pos:end="17:60"><literal type="number" pos:start="17:60" pos:end="17:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:33"><expr pos:start="19:9" pos:end="19:32"><name pos:start="19:9" pos:end="19:12">pdpe</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:32"><name pos:start="19:16" pos:end="19:26">le64_to_cpu</name><argument_list pos:start="19:27" pos:end="19:32">(<argument pos:start="19:28" pos:end="19:31"><expr pos:start="19:28" pos:end="19:31"><name pos:start="19:28" pos:end="19:31">pdpe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="71:9"><if pos:start="21:9" pos:end="71:9">if <condition pos:start="21:12" pos:end="21:35">(<expr pos:start="21:13" pos:end="21:34"><name pos:start="21:13" pos:end="21:16">pdpe</name> <operator pos:start="21:18" pos:end="21:18">&amp;</operator> <name pos:start="21:20" pos:end="21:34">PG_PRESENT_MASK</name></expr>)</condition> <block pos:start="21:37" pos:end="71:9">{<block_content pos:start="23:13" pos:end="69:13">

            <expr_stmt pos:start="23:13" pos:end="23:48"><expr pos:start="23:13" pos:end="23:47"><name pos:start="23:13" pos:end="23:19">pd_addr</name> <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:26">pdpe</name> <operator pos:start="23:28" pos:end="23:28">&amp;</operator> <literal type="number" pos:start="23:30" pos:end="23:47">0x3fffffffff000ULL</literal></expr>;</expr_stmt>

            <for pos:start="25:13" pos:end="69:13">for <control pos:start="25:17" pos:end="25:40">(<init pos:start="25:18" pos:end="25:24"><expr pos:start="25:18" pos:end="25:23"><name pos:start="25:18" pos:end="25:19">l2</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <literal type="number" pos:start="25:23" pos:end="25:23">0</literal></expr>;</init> <condition pos:start="25:26" pos:end="25:34"><expr pos:start="25:26" pos:end="25:33"><name pos:start="25:26" pos:end="25:27">l2</name> <operator pos:start="25:29" pos:end="25:29">&lt;</operator> <literal type="number" pos:start="25:31" pos:end="25:33">512</literal></expr>;</condition> <incr pos:start="25:36" pos:end="25:39"><expr pos:start="25:36" pos:end="25:39"><name pos:start="25:36" pos:end="25:37">l2</name><operator pos:start="25:38" pos:end="25:39">++</operator></expr></incr>)</control> <block pos:start="25:42" pos:end="69:13">{<block_content pos:start="27:17" pos:end="67:17">

                <expr_stmt pos:start="27:17" pos:end="27:68"><expr pos:start="27:17" pos:end="27:67"><call pos:start="27:17" pos:end="27:67"><name pos:start="27:17" pos:end="27:40">cpu_physical_memory_read</name><argument_list pos:start="27:41" pos:end="27:67">(<argument pos:start="27:42" pos:end="27:57"><expr pos:start="27:42" pos:end="27:57"><name pos:start="27:42" pos:end="27:48">pd_addr</name> <operator pos:start="27:50" pos:end="27:50">+</operator> <name pos:start="27:52" pos:end="27:53">l2</name> <operator pos:start="27:55" pos:end="27:55">*</operator> <literal type="number" pos:start="27:57" pos:end="27:57">8</literal></expr></argument>, <argument pos:start="27:60" pos:end="27:63"><expr pos:start="27:60" pos:end="27:63"><operator pos:start="27:60" pos:end="27:60">&amp;</operator><name pos:start="27:61" pos:end="27:63">pde</name></expr></argument>, <argument pos:start="27:66" pos:end="27:66"><expr pos:start="27:66" pos:end="27:66"><literal type="number" pos:start="27:66" pos:end="27:66">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="29:17" pos:end="29:39"><expr pos:start="29:17" pos:end="29:38"><name pos:start="29:17" pos:end="29:19">pde</name> <operator pos:start="29:21" pos:end="29:21">=</operator> <call pos:start="29:23" pos:end="29:38"><name pos:start="29:23" pos:end="29:33">le64_to_cpu</name><argument_list pos:start="29:34" pos:end="29:38">(<argument pos:start="29:35" pos:end="29:37"><expr pos:start="29:35" pos:end="29:37"><name pos:start="29:35" pos:end="29:37">pde</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="31:17" pos:end="67:17"><if pos:start="31:17" pos:end="67:17">if <condition pos:start="31:20" pos:end="31:42">(<expr pos:start="31:21" pos:end="31:41"><name pos:start="31:21" pos:end="31:23">pde</name> <operator pos:start="31:25" pos:end="31:25">&amp;</operator> <name pos:start="31:27" pos:end="31:41">PG_PRESENT_MASK</name></expr>)</condition> <block pos:start="31:44" pos:end="67:17">{<block_content pos:start="33:21" pos:end="65:21">

                    <if_stmt pos:start="33:21" pos:end="65:21"><if pos:start="33:21" pos:end="41:21">if <condition pos:start="33:24" pos:end="33:42">(<expr pos:start="33:25" pos:end="33:41"><name pos:start="33:25" pos:end="33:27">pde</name> <operator pos:start="33:29" pos:end="33:29">&amp;</operator> <name pos:start="33:31" pos:end="33:41">PG_PSE_MASK</name></expr>)</condition> <block pos:start="33:44" pos:end="41:21">{<block_content pos:start="37:25" pos:end="39:72">

                        <comment type="block" pos:start="35:25" pos:end="35:67">/* 2M pages with PAE, CR4.PSE is ignored */</comment>

                        <expr_stmt pos:start="37:25" pos:end="39:72"><expr pos:start="37:25" pos:end="39:71"><call pos:start="37:25" pos:end="39:71"><name pos:start="37:25" pos:end="37:33">print_pte</name><argument_list pos:start="37:34" pos:end="39:71">(<argument pos:start="37:35" pos:end="37:37"><expr pos:start="37:35" pos:end="37:37"><name pos:start="37:35" pos:end="37:37">mon</name></expr></argument>, <argument pos:start="37:40" pos:end="37:63"><expr pos:start="37:40" pos:end="37:63"><operator pos:start="37:40" pos:end="37:40">(</operator><name pos:start="37:41" pos:end="37:42">l1</name> <operator pos:start="37:44" pos:end="37:45">&lt;&lt;</operator> <literal type="number" pos:start="37:47" pos:end="37:48">30</literal> <operator pos:start="37:50" pos:end="37:50">)</operator> <operator pos:start="37:52" pos:end="37:52">+</operator> <operator pos:start="37:54" pos:end="37:54">(</operator><name pos:start="37:55" pos:end="37:56">l2</name> <operator pos:start="37:58" pos:end="37:59">&lt;&lt;</operator> <literal type="number" pos:start="37:61" pos:end="37:62">21</literal><operator pos:start="37:63" pos:end="37:63">)</operator></expr></argument>, <argument pos:start="37:66" pos:end="37:68"><expr pos:start="37:66" pos:end="37:68"><name pos:start="37:66" pos:end="37:68">pde</name></expr></argument>,

                                  <argument pos:start="39:35" pos:end="39:70"><expr pos:start="39:35" pos:end="39:70"><operator pos:start="39:35" pos:end="39:35">~</operator><operator pos:start="39:36" pos:end="39:36">(</operator><operator pos:start="39:37" pos:end="39:37">(</operator><name pos:start="39:38" pos:end="39:55">target_phys_addr_t</name><operator pos:start="39:56" pos:end="39:56">)</operator><operator pos:start="39:57" pos:end="39:57">(</operator><literal type="number" pos:start="39:58" pos:end="39:58">1</literal> <operator pos:start="39:60" pos:end="39:61">&lt;&lt;</operator> <literal type="number" pos:start="39:63" pos:end="39:64">20</literal><operator pos:start="39:65" pos:end="39:65">)</operator> <operator pos:start="39:67" pos:end="39:67">-</operator> <literal type="number" pos:start="39:69" pos:end="39:69">1</literal><operator pos:start="39:70" pos:end="39:70">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="41:23" pos:end="65:21">else <block pos:start="41:28" pos:end="65:21">{<block_content pos:start="43:25" pos:end="63:25">

                        <expr_stmt pos:start="43:25" pos:end="43:59"><expr pos:start="43:25" pos:end="43:58"><name pos:start="43:25" pos:end="43:31">pt_addr</name> <operator pos:start="43:33" pos:end="43:33">=</operator> <name pos:start="43:35" pos:end="43:37">pde</name> <operator pos:start="43:39" pos:end="43:39">&amp;</operator> <literal type="number" pos:start="43:41" pos:end="43:58">0x3fffffffff000ULL</literal></expr>;</expr_stmt>

                        <for pos:start="45:25" pos:end="63:25">for <control pos:start="45:29" pos:end="45:52">(<init pos:start="45:30" pos:end="45:36"><expr pos:start="45:30" pos:end="45:35"><name pos:start="45:30" pos:end="45:31">l3</name> <operator pos:start="45:33" pos:end="45:33">=</operator> <literal type="number" pos:start="45:35" pos:end="45:35">0</literal></expr>;</init> <condition pos:start="45:38" pos:end="45:46"><expr pos:start="45:38" pos:end="45:45"><name pos:start="45:38" pos:end="45:39">l3</name> <operator pos:start="45:41" pos:end="45:41">&lt;</operator> <literal type="number" pos:start="45:43" pos:end="45:45">512</literal></expr>;</condition> <incr pos:start="45:48" pos:end="45:51"><expr pos:start="45:48" pos:end="45:51"><name pos:start="45:48" pos:end="45:49">l3</name><operator pos:start="45:50" pos:end="45:51">++</operator></expr></incr>)</control> <block pos:start="45:54" pos:end="63:25">{<block_content pos:start="47:29" pos:end="61:29">

                            <expr_stmt pos:start="47:29" pos:end="47:80"><expr pos:start="47:29" pos:end="47:79"><call pos:start="47:29" pos:end="47:79"><name pos:start="47:29" pos:end="47:52">cpu_physical_memory_read</name><argument_list pos:start="47:53" pos:end="47:79">(<argument pos:start="47:54" pos:end="47:69"><expr pos:start="47:54" pos:end="47:69"><name pos:start="47:54" pos:end="47:60">pt_addr</name> <operator pos:start="47:62" pos:end="47:62">+</operator> <name pos:start="47:64" pos:end="47:65">l3</name> <operator pos:start="47:67" pos:end="47:67">*</operator> <literal type="number" pos:start="47:69" pos:end="47:69">8</literal></expr></argument>, <argument pos:start="47:72" pos:end="47:75"><expr pos:start="47:72" pos:end="47:75"><operator pos:start="47:72" pos:end="47:72">&amp;</operator><name pos:start="47:73" pos:end="47:75">pte</name></expr></argument>, <argument pos:start="47:78" pos:end="47:78"><expr pos:start="47:78" pos:end="47:78"><literal type="number" pos:start="47:78" pos:end="47:78">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="49:29" pos:end="49:51"><expr pos:start="49:29" pos:end="49:50"><name pos:start="49:29" pos:end="49:31">pte</name> <operator pos:start="49:33" pos:end="49:33">=</operator> <call pos:start="49:35" pos:end="49:50"><name pos:start="49:35" pos:end="49:45">le64_to_cpu</name><argument_list pos:start="49:46" pos:end="49:50">(<argument pos:start="49:47" pos:end="49:49"><expr pos:start="49:47" pos:end="49:49"><name pos:start="49:47" pos:end="49:49">pte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="51:29" pos:end="61:29"><if pos:start="51:29" pos:end="61:29">if <condition pos:start="51:32" pos:end="51:54">(<expr pos:start="51:33" pos:end="51:53"><name pos:start="51:33" pos:end="51:35">pte</name> <operator pos:start="51:37" pos:end="51:37">&amp;</operator> <name pos:start="51:39" pos:end="51:53">PG_PRESENT_MASK</name></expr>)</condition> <block pos:start="51:56" pos:end="61:29">{<block_content pos:start="53:33" pos:end="59:70">

                                <expr_stmt pos:start="53:33" pos:end="59:70"><expr pos:start="53:33" pos:end="59:69"><call pos:start="53:33" pos:end="59:69"><name pos:start="53:33" pos:end="53:41">print_pte</name><argument_list pos:start="53:42" pos:end="59:69">(<argument pos:start="53:43" pos:end="53:45"><expr pos:start="53:43" pos:end="53:45"><name pos:start="53:43" pos:end="53:45">mon</name></expr></argument>, <argument pos:start="53:48" pos:end="55:54"><expr pos:start="53:48" pos:end="55:54"><operator pos:start="53:48" pos:end="53:48">(</operator><name pos:start="53:49" pos:end="53:50">l1</name> <operator pos:start="53:52" pos:end="53:53">&lt;&lt;</operator> <literal type="number" pos:start="53:55" pos:end="53:56">30</literal> <operator pos:start="53:58" pos:end="53:58">)</operator> <operator pos:start="53:60" pos:end="53:60">+</operator> <operator pos:start="53:62" pos:end="53:62">(</operator><name pos:start="53:63" pos:end="53:64">l2</name> <operator pos:start="53:66" pos:end="53:67">&lt;&lt;</operator> <literal type="number" pos:start="53:69" pos:end="53:70">21</literal><operator pos:start="53:71" pos:end="53:71">)</operator>

                                          <operator pos:start="55:43" pos:end="55:43">+</operator> <operator pos:start="55:45" pos:end="55:45">(</operator><name pos:start="55:46" pos:end="55:47">l3</name> <operator pos:start="55:49" pos:end="55:50">&lt;&lt;</operator> <literal type="number" pos:start="55:52" pos:end="55:53">12</literal><operator pos:start="55:54" pos:end="55:54">)</operator></expr></argument>,

                                          <argument pos:start="57:43" pos:end="57:60"><expr pos:start="57:43" pos:end="57:60"><name pos:start="57:43" pos:end="57:45">pte</name> <operator pos:start="57:47" pos:end="57:47">&amp;</operator> <operator pos:start="57:49" pos:end="57:49">~</operator><name pos:start="57:50" pos:end="57:60">PG_PSE_MASK</name></expr></argument>,

                                          <argument pos:start="59:43" pos:end="59:68"><expr pos:start="59:43" pos:end="59:68"><operator pos:start="59:43" pos:end="59:43">~</operator><operator pos:start="59:44" pos:end="59:44">(</operator><name pos:start="59:45" pos:end="59:62">target_phys_addr_t</name><operator pos:start="59:63" pos:end="59:63">)</operator><literal type="number" pos:start="59:64" pos:end="59:68">0xfff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
