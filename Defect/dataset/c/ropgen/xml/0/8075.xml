<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8075.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:39">tcg_temp_new_internal</name><parameter_list pos:start="1:40" pos:end="1:69">(<parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:47">TCGType</name></type> <name pos:start="1:49" pos:end="1:52">type</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:68"><decl pos:start="1:55" pos:end="1:68"><type pos:start="1:55" pos:end="1:68"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:68">temp_local</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:15">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">TCGContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:28">= <expr pos:start="5:21" pos:end="5:28"><operator pos:start="5:21" pos:end="5:21">&amp;</operator><name pos:start="5:22" pos:end="5:28">tcg_ctx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">TCGTemp</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:15">ts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">idx</name></decl>, <decl pos:start="9:14" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:14">k</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:49"><expr pos:start="13:5" pos:end="13:48"><name pos:start="13:5" pos:end="13:5">k</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <name pos:start="13:9" pos:end="13:12">type</name> <operator pos:start="13:14" pos:end="13:14">+</operator> <operator pos:start="13:16" pos:end="13:16">(</operator><ternary pos:start="13:17" pos:end="13:47"><condition pos:start="13:17" pos:end="13:28"><expr pos:start="13:17" pos:end="13:26"><name pos:start="13:17" pos:end="13:26">temp_local</name></expr> ?</condition><then pos:start="13:30" pos:end="13:43"> <expr pos:start="13:30" pos:end="13:43"><name pos:start="13:30" pos:end="13:43">TCG_TYPE_COUNT</name></expr> </then><else pos:start="13:45" pos:end="13:47">: <expr pos:start="13:47" pos:end="13:47"><literal type="number" pos:start="13:47" pos:end="13:47">0</literal></expr></else></ternary><operator pos:start="13:48" pos:end="13:48">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:60"><expr pos:start="15:5" pos:end="15:59"><name pos:start="15:5" pos:end="15:7">idx</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:59"><name pos:start="15:11" pos:end="15:24">find_first_bit</name><argument_list pos:start="15:25" pos:end="15:59">(<argument pos:start="15:26" pos:end="15:43"><expr pos:start="15:26" pos:end="15:43"><name pos:start="15:26" pos:end="15:41"><name pos:start="15:26" pos:end="15:26">s</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:38">free_temps</name><index pos:start="15:39" pos:end="15:41">[<expr pos:start="15:40" pos:end="15:40"><name pos:start="15:40" pos:end="15:40">k</name></expr>]</index></name><operator pos:start="15:42" pos:end="15:42">.</operator><name pos:start="15:43" pos:end="15:43">l</name></expr></argument>, <argument pos:start="15:46" pos:end="15:58"><expr pos:start="15:46" pos:end="15:58"><name pos:start="15:46" pos:end="15:58">TCG_MAX_TEMPS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="98:0"><if pos:start="17:5" pos:end="33:5">if <condition pos:start="17:8" pos:end="17:28">(<expr pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:11">idx</name> <operator pos:start="17:13" pos:end="17:13">&lt;</operator> <name pos:start="17:15" pos:end="17:27">TCG_MAX_TEMPS</name></expr>)</condition> <block pos:start="17:30" pos:end="33:5">{<block_content pos:start="21:9" pos:end="31:45">

        <comment type="block" pos:start="19:9" pos:end="19:70">/* There is already an available temp with the right type.  */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:43"><expr pos:start="21:9" pos:end="21:42"><call pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:17">clear_bit</name><argument_list pos:start="21:18" pos:end="21:42">(<argument pos:start="21:19" pos:end="21:21"><expr pos:start="21:19" pos:end="21:21"><name pos:start="21:19" pos:end="21:21">idx</name></expr></argument>, <argument pos:start="21:24" pos:end="21:41"><expr pos:start="21:24" pos:end="21:41"><name pos:start="21:24" pos:end="21:39"><name pos:start="21:24" pos:end="21:24">s</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:36">free_temps</name><index pos:start="21:37" pos:end="21:39">[<expr pos:start="21:38" pos:end="21:38"><name pos:start="21:38" pos:end="21:38">k</name></expr>]</index></name><operator pos:start="21:40" pos:end="21:40">.</operator><name pos:start="21:41" pos:end="21:41">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:10">ts</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <operator pos:start="25:14" pos:end="25:14">&amp;</operator><name pos:start="25:15" pos:end="25:27"><name pos:start="25:15" pos:end="25:15">s</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:22">temps</name><index pos:start="25:23" pos:end="25:27">[<expr pos:start="25:24" pos:end="25:26"><name pos:start="25:24" pos:end="25:26">idx</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:31"><expr pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:10">ts</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:26">temp_allocated</name></name> <operator pos:start="27:28" pos:end="27:28">=</operator> <literal type="number" pos:start="27:30" pos:end="27:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:38"><expr pos:start="29:9" pos:end="29:37"><call pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:14">assert</name><argument_list pos:start="29:15" pos:end="29:37">(<argument pos:start="29:16" pos:end="29:36"><expr pos:start="29:16" pos:end="29:36"><name pos:start="29:16" pos:end="29:28"><name pos:start="29:16" pos:end="29:17">ts</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:28">base_type</name></name> <operator pos:start="29:30" pos:end="29:31">==</operator> <name pos:start="29:33" pos:end="29:36">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:45"><expr pos:start="31:9" pos:end="31:44"><call pos:start="31:9" pos:end="31:44"><name pos:start="31:9" pos:end="31:14">assert</name><argument_list pos:start="31:15" pos:end="31:44">(<argument pos:start="31:16" pos:end="31:43"><expr pos:start="31:16" pos:end="31:43"><name pos:start="31:16" pos:end="31:29"><name pos:start="31:16" pos:end="31:17">ts</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:29">temp_local</name></name> <operator pos:start="31:31" pos:end="31:32">==</operator> <name pos:start="31:34" pos:end="31:43">temp_local</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="98:0">else <block pos:start="33:12" pos:end="98:0">{<block_content pos:start="35:9" pos:end="91:9">

        <expr_stmt pos:start="35:9" pos:end="38:0"><expr pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:11">idx</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:25"><name pos:start="35:15" pos:end="35:15">s</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:25">nb_temps</name></name></expr>;</expr_stmt>

<cpp:if pos:start="37:1" pos:end="37:29">#<cpp:directive pos:start="37:2" pos:end="37:3">if</cpp:directive> <expr pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:23">TCG_TARGET_REG_BITS</name> <operator pos:start="37:25" pos:end="37:26">==</operator> <literal type="number" pos:start="37:28" pos:end="37:29">32</literal></expr></cpp:if>

        <if_stmt pos:start="39:9" pos:end="91:9"><if pos:start="39:9" pos:end="69:9">if <condition pos:start="39:12" pos:end="39:33">(<expr pos:start="39:13" pos:end="39:32"><name pos:start="39:13" pos:end="39:16">type</name> <operator pos:start="39:18" pos:end="39:19">==</operator> <name pos:start="39:21" pos:end="39:32">TCG_TYPE_I64</name></expr>)</condition> <block pos:start="39:35" pos:end="69:9">{<block_content pos:start="41:13" pos:end="67:29">

            <expr_stmt pos:start="41:13" pos:end="41:47"><expr pos:start="41:13" pos:end="41:46"><call pos:start="41:13" pos:end="41:46"><name pos:start="41:13" pos:end="41:26">tcg_temp_alloc</name><argument_list pos:start="41:27" pos:end="41:46">(<argument pos:start="41:28" pos:end="41:28"><expr pos:start="41:28" pos:end="41:28"><name pos:start="41:28" pos:end="41:28">s</name></expr></argument>, <argument pos:start="41:31" pos:end="41:45"><expr pos:start="41:31" pos:end="41:45"><name pos:start="41:31" pos:end="41:41"><name pos:start="41:31" pos:end="41:31">s</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:41">nb_temps</name></name> <operator pos:start="41:43" pos:end="41:43">+</operator> <literal type="number" pos:start="41:45" pos:end="41:45">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:40"><expr pos:start="43:13" pos:end="43:39"><name pos:start="43:13" pos:end="43:14">ts</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <operator pos:start="43:18" pos:end="43:18">&amp;</operator><name pos:start="43:19" pos:end="43:39"><name pos:start="43:19" pos:end="43:19">s</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:26">temps</name><index pos:start="43:27" pos:end="43:39">[<expr pos:start="43:28" pos:end="43:38"><name pos:start="43:28" pos:end="43:38"><name pos:start="43:28" pos:end="43:28">s</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:38">nb_temps</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:33"><expr pos:start="45:13" pos:end="45:32"><name pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:14">ts</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:25">base_type</name></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:32">type</name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:36"><expr pos:start="47:13" pos:end="47:35"><name pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:14">ts</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:20">type</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:35">TCG_TYPE_I32</name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:35"><expr pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:14">ts</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:30">temp_allocated</name></name> <operator pos:start="49:32" pos:end="49:32">=</operator> <literal type="number" pos:start="49:34" pos:end="49:34">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:40"><expr pos:start="51:13" pos:end="51:39"><name pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:14">ts</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:26">temp_local</name></name> <operator pos:start="51:28" pos:end="51:28">=</operator> <name pos:start="51:30" pos:end="51:39">temp_local</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:28"><expr pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:14">ts</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:20">name</name></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:27">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:17"><expr pos:start="55:13" pos:end="55:16"><name pos:start="55:13" pos:end="55:14">ts</name><operator pos:start="55:15" pos:end="55:16">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:41"><expr pos:start="57:13" pos:end="57:40"><name pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:14">ts</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:25">base_type</name></name> <operator pos:start="57:27" pos:end="57:27">=</operator> <name pos:start="57:29" pos:end="57:40">TCG_TYPE_I32</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:36"><expr pos:start="59:13" pos:end="59:35"><name pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:14">ts</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:20">type</name></name> <operator pos:start="59:22" pos:end="59:22">=</operator> <name pos:start="59:24" pos:end="59:35">TCG_TYPE_I32</name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:35"><expr pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:30"><name pos:start="61:13" pos:end="61:14">ts</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:30">temp_allocated</name></name> <operator pos:start="61:32" pos:end="61:32">=</operator> <literal type="number" pos:start="61:34" pos:end="61:34">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:40"><expr pos:start="63:13" pos:end="63:39"><name pos:start="63:13" pos:end="63:26"><name pos:start="63:13" pos:end="63:14">ts</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:26">temp_local</name></name> <operator pos:start="63:28" pos:end="63:28">=</operator> <name pos:start="63:30" pos:end="63:39">temp_local</name></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:28"><expr pos:start="65:13" pos:end="65:27"><name pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:14">ts</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:20">name</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:27">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:29"><expr pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:23"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:23">nb_temps</name></name> <operator pos:start="67:25" pos:end="67:26">+=</operator> <literal type="number" pos:start="67:28" pos:end="67:28">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="69:11" pos:end="91:9">else

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>

        <block pos:start="73:9" pos:end="91:9">{<block_content pos:start="75:13" pos:end="89:26">

            <expr_stmt pos:start="75:13" pos:end="75:47"><expr pos:start="75:13" pos:end="75:46"><call pos:start="75:13" pos:end="75:46"><name pos:start="75:13" pos:end="75:26">tcg_temp_alloc</name><argument_list pos:start="75:27" pos:end="75:46">(<argument pos:start="75:28" pos:end="75:28"><expr pos:start="75:28" pos:end="75:28"><name pos:start="75:28" pos:end="75:28">s</name></expr></argument>, <argument pos:start="75:31" pos:end="75:45"><expr pos:start="75:31" pos:end="75:45"><name pos:start="75:31" pos:end="75:41"><name pos:start="75:31" pos:end="75:31">s</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:41">nb_temps</name></name> <operator pos:start="75:43" pos:end="75:43">+</operator> <literal type="number" pos:start="75:45" pos:end="75:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:40"><expr pos:start="77:13" pos:end="77:39"><name pos:start="77:13" pos:end="77:14">ts</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <operator pos:start="77:18" pos:end="77:18">&amp;</operator><name pos:start="77:19" pos:end="77:39"><name pos:start="77:19" pos:end="77:19">s</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:26">temps</name><index pos:start="77:27" pos:end="77:39">[<expr pos:start="77:28" pos:end="77:38"><name pos:start="77:28" pos:end="77:38"><name pos:start="77:28" pos:end="77:28">s</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:38">nb_temps</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:33"><expr pos:start="79:13" pos:end="79:32"><name pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:14">ts</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:25">base_type</name></name> <operator pos:start="79:27" pos:end="79:27">=</operator> <name pos:start="79:29" pos:end="79:32">type</name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:28"><expr pos:start="81:13" pos:end="81:27"><name pos:start="81:13" pos:end="81:20"><name pos:start="81:13" pos:end="81:14">ts</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:20">type</name></name> <operator pos:start="81:22" pos:end="81:22">=</operator> <name pos:start="81:24" pos:end="81:27">type</name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:35"><expr pos:start="83:13" pos:end="83:34"><name pos:start="83:13" pos:end="83:30"><name pos:start="83:13" pos:end="83:14">ts</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:30">temp_allocated</name></name> <operator pos:start="83:32" pos:end="83:32">=</operator> <literal type="number" pos:start="83:34" pos:end="83:34">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:40"><expr pos:start="85:13" pos:end="85:39"><name pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:14">ts</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:26">temp_local</name></name> <operator pos:start="85:28" pos:end="85:28">=</operator> <name pos:start="85:30" pos:end="85:39">temp_local</name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:28"><expr pos:start="87:13" pos:end="87:27"><name pos:start="87:13" pos:end="87:20"><name pos:start="87:13" pos:end="87:14">ts</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:20">name</name></name> <operator pos:start="87:22" pos:end="87:22">=</operator> <name pos:start="87:24" pos:end="87:27">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:26"><expr pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:23"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:23">nb_temps</name></name><operator pos:start="89:24" pos:end="89:25">++</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



<cpp:if pos:start="97:1" pos:end="97:29">#<cpp:directive pos:start="97:2" pos:end="97:3">if</cpp:directive> <expr pos:start="97:5" pos:end="97:29"><call pos:start="97:5" pos:end="97:29"><name pos:start="97:5" pos:end="97:11">defined</name><argument_list pos:start="97:12" pos:end="97:29">(<argument pos:start="97:13" pos:end="97:28"><expr pos:start="97:13" pos:end="97:28"><name pos:start="97:13" pos:end="97:28">CONFIG_DEBUG_TCG</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="99:5" pos:end="102:0"><expr pos:start="99:5" pos:end="99:21"><name pos:start="99:5" pos:end="99:19"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:19">temps_in_use</name></name><operator pos:start="99:20" pos:end="99:21">++</operator></expr>;</expr_stmt>

<cpp:endif pos:start="101:1" pos:end="101:6">#<cpp:directive pos:start="101:2" pos:end="101:6">endif</cpp:directive></cpp:endif>

    <return pos:start="103:5" pos:end="103:15">return <expr pos:start="103:12" pos:end="103:14"><name pos:start="103:12" pos:end="103:14">idx</name></expr>;</return>

</block_content>}</block></function>
</unit>
