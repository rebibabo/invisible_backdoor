<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6263.c" pos:tabs="8"><function pos:start="1:1" pos:end="465:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">helper_vmrun</name><parameter_list pos:start="1:18" pos:end="1:67">(<parameter pos:start="1:19" pos:end="1:34"><decl pos:start="1:19" pos:end="1:34"><type pos:start="1:19" pos:end="1:34"><name pos:start="1:19" pos:end="1:29">CPUX86State</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">env</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:45"><decl pos:start="1:37" pos:end="1:45"><type pos:start="1:37" pos:end="1:45"><name pos:start="1:37" pos:end="1:39">int</name></type> <name pos:start="1:41" pos:end="1:45">aflag</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:66"><decl pos:start="1:48" pos:end="1:66"><type pos:start="1:48" pos:end="1:66"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:66">next_eip_addend</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="465:1">{<block_content pos:start="5:5" pos:end="463:5">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:44">= <expr pos:start="5:20" pos:end="5:44"><call pos:start="5:20" pos:end="5:44"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:44">(<argument pos:start="5:24" pos:end="5:43"><expr pos:start="5:24" pos:end="5:43"><call pos:start="5:24" pos:end="5:43"><name pos:start="5:24" pos:end="5:38">x86_env_get_cpu</name><argument_list pos:start="5:39" pos:end="5:43">(<argument pos:start="5:40" pos:end="5:42"><expr pos:start="5:40" pos:end="5:42"><name pos:start="5:40" pos:end="5:42">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:21">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:22">event_inj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:20">int_ctl</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:58"><expr pos:start="15:5" pos:end="15:57"><call pos:start="15:5" pos:end="15:57"><name pos:start="15:5" pos:end="15:33">cpu_svm_check_intercept_param</name><argument_list pos:start="15:34" pos:end="15:57">(<argument pos:start="15:35" pos:end="15:37"><expr pos:start="15:35" pos:end="15:37"><name pos:start="15:35" pos:end="15:37">env</name></expr></argument>, <argument pos:start="15:40" pos:end="15:53"><expr pos:start="15:40" pos:end="15:53"><name pos:start="15:40" pos:end="15:53">SVM_EXIT_VMRUN</name></expr></argument>, <argument pos:start="15:56" pos:end="15:56"><expr pos:start="15:56" pos:end="15:56"><literal type="number" pos:start="15:56" pos:end="15:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:19">(<expr pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:13">aflag</name> <operator pos:start="19:15" pos:end="19:16">==</operator> <literal type="number" pos:start="19:18" pos:end="19:18">2</literal></expr>)</condition> <block pos:start="19:21" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:32">

        <expr_stmt pos:start="21:9" pos:end="21:32"><expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:12">addr</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:31"><name pos:start="21:16" pos:end="21:18">env</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:24">regs</name><index pos:start="21:25" pos:end="21:31">[<expr pos:start="21:26" pos:end="21:30"><name pos:start="21:26" pos:end="21:30">R_EAX</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="27:5">else <block pos:start="23:12" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:42">

        <expr_stmt pos:start="25:9" pos:end="25:42"><expr pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:12">addr</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <operator pos:start="25:16" pos:end="25:16">(</operator><name pos:start="25:17" pos:end="25:24">uint32_t</name><operator pos:start="25:25" pos:end="25:25">)</operator><name pos:start="25:26" pos:end="25:41"><name pos:start="25:26" pos:end="25:28">env</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:34">regs</name><index pos:start="25:35" pos:end="25:41">[<expr pos:start="25:36" pos:end="25:40"><name pos:start="25:36" pos:end="25:40">R_EAX</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:73"><expr pos:start="31:5" pos:end="31:72"><call pos:start="31:5" pos:end="31:72"><name pos:start="31:5" pos:end="31:17">qemu_log_mask</name><argument_list pos:start="31:18" pos:end="31:72">(<argument pos:start="31:19" pos:end="31:35"><expr pos:start="31:19" pos:end="31:35"><name pos:start="31:19" pos:end="31:35">CPU_LOG_TB_IN_ASM</name></expr></argument>, <argument pos:start="31:38" pos:end="31:65"><expr pos:start="31:38" pos:end="31:65"><literal type="string" pos:start="31:38" pos:end="31:46">"vmrun! "</literal> <name pos:start="31:48" pos:end="31:60">TARGET_FMT_lx</name> <literal type="string" pos:start="31:62" pos:end="31:65">"\n"</literal></expr></argument>, <argument pos:start="31:68" pos:end="31:71"><expr pos:start="31:68" pos:end="31:71"><name pos:start="31:68" pos:end="31:71">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:7">env</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:16">vm_vmcb</name></name> <operator pos:start="35:18" pos:end="35:18">=</operator> <name pos:start="35:20" pos:end="35:23">addr</name></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:54">/* save the current CPU state in the hsave page */</comment>

    <expr_stmt pos:start="41:5" pos:end="43:28"><expr pos:start="41:5" pos:end="43:27"><call pos:start="41:5" pos:end="43:27"><name pos:start="41:5" pos:end="41:12">stq_phys</name><argument_list pos:start="41:13" pos:end="43:27">(<argument pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:19"><name pos:start="41:14" pos:end="41:19"><name pos:start="41:14" pos:end="41:15">cs</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:19">as</name></name></expr></argument>, <argument pos:start="41:22" pos:end="41:74"><expr pos:start="41:22" pos:end="41:74"><name pos:start="41:22" pos:end="41:34"><name pos:start="41:22" pos:end="41:24">env</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:34">vm_hsave</name></name> <operator pos:start="41:36" pos:end="41:36">+</operator> <call pos:start="41:38" pos:end="41:74"><name pos:start="41:38" pos:end="41:45">offsetof</name><argument_list pos:start="41:46" pos:end="41:74">(<argument pos:start="41:47" pos:end="41:57"><expr pos:start="41:47" pos:end="41:57">struct <name pos:start="41:54" pos:end="41:57">vmcb</name></expr></argument>, <argument pos:start="41:60" pos:end="41:73"><expr pos:start="41:60" pos:end="41:73"><name pos:start="41:60" pos:end="41:73"><name pos:start="41:60" pos:end="41:63">save</name><operator pos:start="41:64" pos:end="41:64">.</operator><name pos:start="41:65" pos:end="41:68">gdtr</name><operator pos:start="41:69" pos:end="41:69">.</operator><name pos:start="41:70" pos:end="41:73">base</name></name></expr></argument>)</argument_list></call></expr></argument>,

             <argument pos:start="43:14" pos:end="43:26"><expr pos:start="43:14" pos:end="43:26"><name pos:start="43:14" pos:end="43:26"><name pos:start="43:14" pos:end="43:16">env</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:21">gdt</name><operator pos:start="43:22" pos:end="43:22">.</operator><name pos:start="43:23" pos:end="43:26">base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="47:29"><expr pos:start="45:5" pos:end="47:28"><call pos:start="45:5" pos:end="47:28"><name pos:start="45:5" pos:end="45:12">stl_phys</name><argument_list pos:start="45:13" pos:end="47:28">(<argument pos:start="45:14" pos:end="45:19"><expr pos:start="45:14" pos:end="45:19"><name pos:start="45:14" pos:end="45:19"><name pos:start="45:14" pos:end="45:15">cs</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:19">as</name></name></expr></argument>, <argument pos:start="45:22" pos:end="45:75"><expr pos:start="45:22" pos:end="45:75"><name pos:start="45:22" pos:end="45:34"><name pos:start="45:22" pos:end="45:24">env</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:34">vm_hsave</name></name> <operator pos:start="45:36" pos:end="45:36">+</operator> <call pos:start="45:38" pos:end="45:75"><name pos:start="45:38" pos:end="45:45">offsetof</name><argument_list pos:start="45:46" pos:end="45:75">(<argument pos:start="45:47" pos:end="45:57"><expr pos:start="45:47" pos:end="45:57">struct <name pos:start="45:54" pos:end="45:57">vmcb</name></expr></argument>, <argument pos:start="45:60" pos:end="45:74"><expr pos:start="45:60" pos:end="45:74"><name pos:start="45:60" pos:end="45:74"><name pos:start="45:60" pos:end="45:63">save</name><operator pos:start="45:64" pos:end="45:64">.</operator><name pos:start="45:65" pos:end="45:68">gdtr</name><operator pos:start="45:69" pos:end="45:69">.</operator><name pos:start="45:70" pos:end="45:74">limit</name></name></expr></argument>)</argument_list></call></expr></argument>,

             <argument pos:start="47:14" pos:end="47:27"><expr pos:start="47:14" pos:end="47:27"><name pos:start="47:14" pos:end="47:27"><name pos:start="47:14" pos:end="47:16">env</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:21">gdt</name><operator pos:start="47:22" pos:end="47:22">.</operator><name pos:start="47:23" pos:end="47:27">limit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="53:28"><expr pos:start="51:5" pos:end="53:27"><call pos:start="51:5" pos:end="53:27"><name pos:start="51:5" pos:end="51:12">stq_phys</name><argument_list pos:start="51:13" pos:end="53:27">(<argument pos:start="51:14" pos:end="51:19"><expr pos:start="51:14" pos:end="51:19"><name pos:start="51:14" pos:end="51:19"><name pos:start="51:14" pos:end="51:15">cs</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:19">as</name></name></expr></argument>, <argument pos:start="51:22" pos:end="51:74"><expr pos:start="51:22" pos:end="51:74"><name pos:start="51:22" pos:end="51:34"><name pos:start="51:22" pos:end="51:24">env</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:34">vm_hsave</name></name> <operator pos:start="51:36" pos:end="51:36">+</operator> <call pos:start="51:38" pos:end="51:74"><name pos:start="51:38" pos:end="51:45">offsetof</name><argument_list pos:start="51:46" pos:end="51:74">(<argument pos:start="51:47" pos:end="51:57"><expr pos:start="51:47" pos:end="51:57">struct <name pos:start="51:54" pos:end="51:57">vmcb</name></expr></argument>, <argument pos:start="51:60" pos:end="51:73"><expr pos:start="51:60" pos:end="51:73"><name pos:start="51:60" pos:end="51:73"><name pos:start="51:60" pos:end="51:63">save</name><operator pos:start="51:64" pos:end="51:64">.</operator><name pos:start="51:65" pos:end="51:68">idtr</name><operator pos:start="51:69" pos:end="51:69">.</operator><name pos:start="51:70" pos:end="51:73">base</name></name></expr></argument>)</argument_list></call></expr></argument>,

             <argument pos:start="53:14" pos:end="53:26"><expr pos:start="53:14" pos:end="53:26"><name pos:start="53:14" pos:end="53:26"><name pos:start="53:14" pos:end="53:16">env</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:21">idt</name><operator pos:start="53:22" pos:end="53:22">.</operator><name pos:start="53:23" pos:end="53:26">base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="57:29"><expr pos:start="55:5" pos:end="57:28"><call pos:start="55:5" pos:end="57:28"><name pos:start="55:5" pos:end="55:12">stl_phys</name><argument_list pos:start="55:13" pos:end="57:28">(<argument pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:19"><name pos:start="55:14" pos:end="55:19"><name pos:start="55:14" pos:end="55:15">cs</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:19">as</name></name></expr></argument>, <argument pos:start="55:22" pos:end="55:75"><expr pos:start="55:22" pos:end="55:75"><name pos:start="55:22" pos:end="55:34"><name pos:start="55:22" pos:end="55:24">env</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:34">vm_hsave</name></name> <operator pos:start="55:36" pos:end="55:36">+</operator> <call pos:start="55:38" pos:end="55:75"><name pos:start="55:38" pos:end="55:45">offsetof</name><argument_list pos:start="55:46" pos:end="55:75">(<argument pos:start="55:47" pos:end="55:57"><expr pos:start="55:47" pos:end="55:57">struct <name pos:start="55:54" pos:end="55:57">vmcb</name></expr></argument>, <argument pos:start="55:60" pos:end="55:74"><expr pos:start="55:60" pos:end="55:74"><name pos:start="55:60" pos:end="55:74"><name pos:start="55:60" pos:end="55:63">save</name><operator pos:start="55:64" pos:end="55:64">.</operator><name pos:start="55:65" pos:end="55:68">idtr</name><operator pos:start="55:69" pos:end="55:69">.</operator><name pos:start="55:70" pos:end="55:74">limit</name></name></expr></argument>)</argument_list></call></expr></argument>,

             <argument pos:start="57:14" pos:end="57:27"><expr pos:start="57:14" pos:end="57:27"><name pos:start="57:14" pos:end="57:27"><name pos:start="57:14" pos:end="57:16">env</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:21">idt</name><operator pos:start="57:22" pos:end="57:22">.</operator><name pos:start="57:23" pos:end="57:27">limit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="63:74"><expr pos:start="61:5" pos:end="63:73"><call pos:start="61:5" pos:end="63:73"><name pos:start="61:5" pos:end="61:12">stq_phys</name><argument_list pos:start="61:13" pos:end="63:73">(<argument pos:start="61:14" pos:end="61:19"><expr pos:start="61:14" pos:end="61:19"><name pos:start="61:14" pos:end="61:19"><name pos:start="61:14" pos:end="61:15">cs</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:19">as</name></name></expr></argument>,

             <argument pos:start="63:14" pos:end="63:60"><expr pos:start="63:14" pos:end="63:60"><name pos:start="63:14" pos:end="63:26"><name pos:start="63:14" pos:end="63:16">env</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:26">vm_hsave</name></name> <operator pos:start="63:28" pos:end="63:28">+</operator> <call pos:start="63:30" pos:end="63:60"><name pos:start="63:30" pos:end="63:37">offsetof</name><argument_list pos:start="63:38" pos:end="63:60">(<argument pos:start="63:39" pos:end="63:49"><expr pos:start="63:39" pos:end="63:49">struct <name pos:start="63:46" pos:end="63:49">vmcb</name></expr></argument>, <argument pos:start="63:52" pos:end="63:59"><expr pos:start="63:52" pos:end="63:59"><name pos:start="63:52" pos:end="63:59"><name pos:start="63:52" pos:end="63:55">save</name><operator pos:start="63:56" pos:end="63:56">.</operator><name pos:start="63:57" pos:end="63:59">cr0</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="63:63" pos:end="63:72"><expr pos:start="63:63" pos:end="63:72"><name pos:start="63:63" pos:end="63:72"><name pos:start="63:63" pos:end="63:65">env</name><operator pos:start="63:66" pos:end="63:67">-&gt;</operator><name pos:start="63:68" pos:end="63:69">cr</name><index pos:start="63:70" pos:end="63:72">[<expr pos:start="63:71" pos:end="63:71"><literal type="number" pos:start="63:71" pos:end="63:71">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="67:74"><expr pos:start="65:5" pos:end="67:73"><call pos:start="65:5" pos:end="67:73"><name pos:start="65:5" pos:end="65:12">stq_phys</name><argument_list pos:start="65:13" pos:end="67:73">(<argument pos:start="65:14" pos:end="65:19"><expr pos:start="65:14" pos:end="65:19"><name pos:start="65:14" pos:end="65:19"><name pos:start="65:14" pos:end="65:15">cs</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:19">as</name></name></expr></argument>,

             <argument pos:start="67:14" pos:end="67:60"><expr pos:start="67:14" pos:end="67:60"><name pos:start="67:14" pos:end="67:26"><name pos:start="67:14" pos:end="67:16">env</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:26">vm_hsave</name></name> <operator pos:start="67:28" pos:end="67:28">+</operator> <call pos:start="67:30" pos:end="67:60"><name pos:start="67:30" pos:end="67:37">offsetof</name><argument_list pos:start="67:38" pos:end="67:60">(<argument pos:start="67:39" pos:end="67:49"><expr pos:start="67:39" pos:end="67:49">struct <name pos:start="67:46" pos:end="67:49">vmcb</name></expr></argument>, <argument pos:start="67:52" pos:end="67:59"><expr pos:start="67:52" pos:end="67:59"><name pos:start="67:52" pos:end="67:59"><name pos:start="67:52" pos:end="67:55">save</name><operator pos:start="67:56" pos:end="67:56">.</operator><name pos:start="67:57" pos:end="67:59">cr2</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="67:63" pos:end="67:72"><expr pos:start="67:63" pos:end="67:72"><name pos:start="67:63" pos:end="67:72"><name pos:start="67:63" pos:end="67:65">env</name><operator pos:start="67:66" pos:end="67:67">-&gt;</operator><name pos:start="67:68" pos:end="67:69">cr</name><index pos:start="67:70" pos:end="67:72">[<expr pos:start="67:71" pos:end="67:71"><literal type="number" pos:start="67:71" pos:end="67:71">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="71:74"><expr pos:start="69:5" pos:end="71:73"><call pos:start="69:5" pos:end="71:73"><name pos:start="69:5" pos:end="69:12">stq_phys</name><argument_list pos:start="69:13" pos:end="71:73">(<argument pos:start="69:14" pos:end="69:19"><expr pos:start="69:14" pos:end="69:19"><name pos:start="69:14" pos:end="69:19"><name pos:start="69:14" pos:end="69:15">cs</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:19">as</name></name></expr></argument>,

             <argument pos:start="71:14" pos:end="71:60"><expr pos:start="71:14" pos:end="71:60"><name pos:start="71:14" pos:end="71:26"><name pos:start="71:14" pos:end="71:16">env</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:26">vm_hsave</name></name> <operator pos:start="71:28" pos:end="71:28">+</operator> <call pos:start="71:30" pos:end="71:60"><name pos:start="71:30" pos:end="71:37">offsetof</name><argument_list pos:start="71:38" pos:end="71:60">(<argument pos:start="71:39" pos:end="71:49"><expr pos:start="71:39" pos:end="71:49">struct <name pos:start="71:46" pos:end="71:49">vmcb</name></expr></argument>, <argument pos:start="71:52" pos:end="71:59"><expr pos:start="71:52" pos:end="71:59"><name pos:start="71:52" pos:end="71:59"><name pos:start="71:52" pos:end="71:55">save</name><operator pos:start="71:56" pos:end="71:56">.</operator><name pos:start="71:57" pos:end="71:59">cr3</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="71:63" pos:end="71:72"><expr pos:start="71:63" pos:end="71:72"><name pos:start="71:63" pos:end="71:72"><name pos:start="71:63" pos:end="71:65">env</name><operator pos:start="71:66" pos:end="71:67">-&gt;</operator><name pos:start="71:68" pos:end="71:69">cr</name><index pos:start="71:70" pos:end="71:72">[<expr pos:start="71:71" pos:end="71:71"><literal type="number" pos:start="71:71" pos:end="71:71">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="75:74"><expr pos:start="73:5" pos:end="75:73"><call pos:start="73:5" pos:end="75:73"><name pos:start="73:5" pos:end="73:12">stq_phys</name><argument_list pos:start="73:13" pos:end="75:73">(<argument pos:start="73:14" pos:end="73:19"><expr pos:start="73:14" pos:end="73:19"><name pos:start="73:14" pos:end="73:19"><name pos:start="73:14" pos:end="73:15">cs</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:19">as</name></name></expr></argument>,

             <argument pos:start="75:14" pos:end="75:60"><expr pos:start="75:14" pos:end="75:60"><name pos:start="75:14" pos:end="75:26"><name pos:start="75:14" pos:end="75:16">env</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:26">vm_hsave</name></name> <operator pos:start="75:28" pos:end="75:28">+</operator> <call pos:start="75:30" pos:end="75:60"><name pos:start="75:30" pos:end="75:37">offsetof</name><argument_list pos:start="75:38" pos:end="75:60">(<argument pos:start="75:39" pos:end="75:49"><expr pos:start="75:39" pos:end="75:49">struct <name pos:start="75:46" pos:end="75:49">vmcb</name></expr></argument>, <argument pos:start="75:52" pos:end="75:59"><expr pos:start="75:52" pos:end="75:59"><name pos:start="75:52" pos:end="75:59"><name pos:start="75:52" pos:end="75:55">save</name><operator pos:start="75:56" pos:end="75:56">.</operator><name pos:start="75:57" pos:end="75:59">cr4</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="75:63" pos:end="75:72"><expr pos:start="75:63" pos:end="75:72"><name pos:start="75:63" pos:end="75:72"><name pos:start="75:63" pos:end="75:65">env</name><operator pos:start="75:66" pos:end="75:67">-&gt;</operator><name pos:start="75:68" pos:end="75:69">cr</name><index pos:start="75:70" pos:end="75:72">[<expr pos:start="75:71" pos:end="75:71"><literal type="number" pos:start="75:71" pos:end="75:71">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="79:74"><expr pos:start="77:5" pos:end="79:73"><call pos:start="77:5" pos:end="79:73"><name pos:start="77:5" pos:end="77:12">stq_phys</name><argument_list pos:start="77:13" pos:end="79:73">(<argument pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:19"><name pos:start="77:14" pos:end="77:19"><name pos:start="77:14" pos:end="77:15">cs</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:19">as</name></name></expr></argument>,

             <argument pos:start="79:14" pos:end="79:60"><expr pos:start="79:14" pos:end="79:60"><name pos:start="79:14" pos:end="79:26"><name pos:start="79:14" pos:end="79:16">env</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:26">vm_hsave</name></name> <operator pos:start="79:28" pos:end="79:28">+</operator> <call pos:start="79:30" pos:end="79:60"><name pos:start="79:30" pos:end="79:37">offsetof</name><argument_list pos:start="79:38" pos:end="79:60">(<argument pos:start="79:39" pos:end="79:49"><expr pos:start="79:39" pos:end="79:49">struct <name pos:start="79:46" pos:end="79:49">vmcb</name></expr></argument>, <argument pos:start="79:52" pos:end="79:59"><expr pos:start="79:52" pos:end="79:59"><name pos:start="79:52" pos:end="79:59"><name pos:start="79:52" pos:end="79:55">save</name><operator pos:start="79:56" pos:end="79:56">.</operator><name pos:start="79:57" pos:end="79:59">dr6</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="79:63" pos:end="79:72"><expr pos:start="79:63" pos:end="79:72"><name pos:start="79:63" pos:end="79:72"><name pos:start="79:63" pos:end="79:65">env</name><operator pos:start="79:66" pos:end="79:67">-&gt;</operator><name pos:start="79:68" pos:end="79:69">dr</name><index pos:start="79:70" pos:end="79:72">[<expr pos:start="79:71" pos:end="79:71"><literal type="number" pos:start="79:71" pos:end="79:71">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="83:74"><expr pos:start="81:5" pos:end="83:73"><call pos:start="81:5" pos:end="83:73"><name pos:start="81:5" pos:end="81:12">stq_phys</name><argument_list pos:start="81:13" pos:end="83:73">(<argument pos:start="81:14" pos:end="81:19"><expr pos:start="81:14" pos:end="81:19"><name pos:start="81:14" pos:end="81:19"><name pos:start="81:14" pos:end="81:15">cs</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:19">as</name></name></expr></argument>,

             <argument pos:start="83:14" pos:end="83:60"><expr pos:start="83:14" pos:end="83:60"><name pos:start="83:14" pos:end="83:26"><name pos:start="83:14" pos:end="83:16">env</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:26">vm_hsave</name></name> <operator pos:start="83:28" pos:end="83:28">+</operator> <call pos:start="83:30" pos:end="83:60"><name pos:start="83:30" pos:end="83:37">offsetof</name><argument_list pos:start="83:38" pos:end="83:60">(<argument pos:start="83:39" pos:end="83:49"><expr pos:start="83:39" pos:end="83:49">struct <name pos:start="83:46" pos:end="83:49">vmcb</name></expr></argument>, <argument pos:start="83:52" pos:end="83:59"><expr pos:start="83:52" pos:end="83:59"><name pos:start="83:52" pos:end="83:59"><name pos:start="83:52" pos:end="83:55">save</name><operator pos:start="83:56" pos:end="83:56">.</operator><name pos:start="83:57" pos:end="83:59">dr7</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="83:63" pos:end="83:72"><expr pos:start="83:63" pos:end="83:72"><name pos:start="83:63" pos:end="83:72"><name pos:start="83:63" pos:end="83:65">env</name><operator pos:start="83:66" pos:end="83:67">-&gt;</operator><name pos:start="83:68" pos:end="83:69">dr</name><index pos:start="83:70" pos:end="83:72">[<expr pos:start="83:71" pos:end="83:71"><literal type="number" pos:start="83:71" pos:end="83:71">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="89:74"><expr pos:start="87:5" pos:end="89:73"><call pos:start="87:5" pos:end="89:73"><name pos:start="87:5" pos:end="87:12">stq_phys</name><argument_list pos:start="87:13" pos:end="89:73">(<argument pos:start="87:14" pos:end="87:19"><expr pos:start="87:14" pos:end="87:19"><name pos:start="87:14" pos:end="87:19"><name pos:start="87:14" pos:end="87:15">cs</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:19">as</name></name></expr></argument>,

             <argument pos:start="89:14" pos:end="89:61"><expr pos:start="89:14" pos:end="89:61"><name pos:start="89:14" pos:end="89:26"><name pos:start="89:14" pos:end="89:16">env</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:26">vm_hsave</name></name> <operator pos:start="89:28" pos:end="89:28">+</operator> <call pos:start="89:30" pos:end="89:61"><name pos:start="89:30" pos:end="89:37">offsetof</name><argument_list pos:start="89:38" pos:end="89:61">(<argument pos:start="89:39" pos:end="89:49"><expr pos:start="89:39" pos:end="89:49">struct <name pos:start="89:46" pos:end="89:49">vmcb</name></expr></argument>, <argument pos:start="89:52" pos:end="89:60"><expr pos:start="89:52" pos:end="89:60"><name pos:start="89:52" pos:end="89:60"><name pos:start="89:52" pos:end="89:55">save</name><operator pos:start="89:56" pos:end="89:56">.</operator><name pos:start="89:57" pos:end="89:60">efer</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="89:64" pos:end="89:72"><expr pos:start="89:64" pos:end="89:72"><name pos:start="89:64" pos:end="89:72"><name pos:start="89:64" pos:end="89:66">env</name><operator pos:start="89:67" pos:end="89:68">-&gt;</operator><name pos:start="89:69" pos:end="89:72">efer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="95:38"><expr pos:start="91:5" pos:end="95:37"><call pos:start="91:5" pos:end="95:37"><name pos:start="91:5" pos:end="91:12">stq_phys</name><argument_list pos:start="91:13" pos:end="95:37">(<argument pos:start="91:14" pos:end="91:19"><expr pos:start="91:14" pos:end="91:19"><name pos:start="91:14" pos:end="91:19"><name pos:start="91:14" pos:end="91:15">cs</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:19">as</name></name></expr></argument>,

             <argument pos:start="93:14" pos:end="93:63"><expr pos:start="93:14" pos:end="93:63"><name pos:start="93:14" pos:end="93:26"><name pos:start="93:14" pos:end="93:16">env</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:26">vm_hsave</name></name> <operator pos:start="93:28" pos:end="93:28">+</operator> <call pos:start="93:30" pos:end="93:63"><name pos:start="93:30" pos:end="93:37">offsetof</name><argument_list pos:start="93:38" pos:end="93:63">(<argument pos:start="93:39" pos:end="93:49"><expr pos:start="93:39" pos:end="93:49">struct <name pos:start="93:46" pos:end="93:49">vmcb</name></expr></argument>, <argument pos:start="93:52" pos:end="93:62"><expr pos:start="93:52" pos:end="93:62"><name pos:start="93:52" pos:end="93:62"><name pos:start="93:52" pos:end="93:55">save</name><operator pos:start="93:56" pos:end="93:56">.</operator><name pos:start="93:57" pos:end="93:62">rflags</name></name></expr></argument>)</argument_list></call></expr></argument>,

             <argument pos:start="95:14" pos:end="95:36"><expr pos:start="95:14" pos:end="95:36"><call pos:start="95:14" pos:end="95:36"><name pos:start="95:14" pos:end="95:31">cpu_compute_eflags</name><argument_list pos:start="95:32" pos:end="95:36">(<argument pos:start="95:33" pos:end="95:35"><expr pos:start="95:33" pos:end="95:35"><name pos:start="95:33" pos:end="95:35">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="101:35"><expr pos:start="99:5" pos:end="101:34"><call pos:start="99:5" pos:end="101:34"><name pos:start="99:5" pos:end="99:16">svm_save_seg</name><argument_list pos:start="99:17" pos:end="101:34">(<argument pos:start="99:18" pos:end="99:20"><expr pos:start="99:18" pos:end="99:20"><name pos:start="99:18" pos:end="99:20">env</name></expr></argument>, <argument pos:start="99:23" pos:end="99:68"><expr pos:start="99:23" pos:end="99:68"><name pos:start="99:23" pos:end="99:35"><name pos:start="99:23" pos:end="99:25">env</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:35">vm_hsave</name></name> <operator pos:start="99:37" pos:end="99:37">+</operator> <call pos:start="99:39" pos:end="99:68"><name pos:start="99:39" pos:end="99:46">offsetof</name><argument_list pos:start="99:47" pos:end="99:68">(<argument pos:start="99:48" pos:end="99:58"><expr pos:start="99:48" pos:end="99:58">struct <name pos:start="99:55" pos:end="99:58">vmcb</name></expr></argument>, <argument pos:start="99:61" pos:end="99:67"><expr pos:start="99:61" pos:end="99:67"><name pos:start="99:61" pos:end="99:67"><name pos:start="99:61" pos:end="99:64">save</name><operator pos:start="99:65" pos:end="99:65">.</operator><name pos:start="99:66" pos:end="99:67">es</name></name></expr></argument>)</argument_list></call></expr></argument>,

                 <argument pos:start="101:18" pos:end="101:33"><expr pos:start="101:18" pos:end="101:33"><operator pos:start="101:18" pos:end="101:18">&amp;</operator><name pos:start="101:19" pos:end="101:33"><name pos:start="101:19" pos:end="101:21">env</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:27">segs</name><index pos:start="101:28" pos:end="101:33">[<expr pos:start="101:29" pos:end="101:32"><name pos:start="101:29" pos:end="101:32">R_ES</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="105:35"><expr pos:start="103:5" pos:end="105:34"><call pos:start="103:5" pos:end="105:34"><name pos:start="103:5" pos:end="103:16">svm_save_seg</name><argument_list pos:start="103:17" pos:end="105:34">(<argument pos:start="103:18" pos:end="103:20"><expr pos:start="103:18" pos:end="103:20"><name pos:start="103:18" pos:end="103:20">env</name></expr></argument>, <argument pos:start="103:23" pos:end="103:68"><expr pos:start="103:23" pos:end="103:68"><name pos:start="103:23" pos:end="103:35"><name pos:start="103:23" pos:end="103:25">env</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:35">vm_hsave</name></name> <operator pos:start="103:37" pos:end="103:37">+</operator> <call pos:start="103:39" pos:end="103:68"><name pos:start="103:39" pos:end="103:46">offsetof</name><argument_list pos:start="103:47" pos:end="103:68">(<argument pos:start="103:48" pos:end="103:58"><expr pos:start="103:48" pos:end="103:58">struct <name pos:start="103:55" pos:end="103:58">vmcb</name></expr></argument>, <argument pos:start="103:61" pos:end="103:67"><expr pos:start="103:61" pos:end="103:67"><name pos:start="103:61" pos:end="103:67"><name pos:start="103:61" pos:end="103:64">save</name><operator pos:start="103:65" pos:end="103:65">.</operator><name pos:start="103:66" pos:end="103:67">cs</name></name></expr></argument>)</argument_list></call></expr></argument>,

                 <argument pos:start="105:18" pos:end="105:33"><expr pos:start="105:18" pos:end="105:33"><operator pos:start="105:18" pos:end="105:18">&amp;</operator><name pos:start="105:19" pos:end="105:33"><name pos:start="105:19" pos:end="105:21">env</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:27">segs</name><index pos:start="105:28" pos:end="105:33">[<expr pos:start="105:29" pos:end="105:32"><name pos:start="105:29" pos:end="105:32">R_CS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="109:35"><expr pos:start="107:5" pos:end="109:34"><call pos:start="107:5" pos:end="109:34"><name pos:start="107:5" pos:end="107:16">svm_save_seg</name><argument_list pos:start="107:17" pos:end="109:34">(<argument pos:start="107:18" pos:end="107:20"><expr pos:start="107:18" pos:end="107:20"><name pos:start="107:18" pos:end="107:20">env</name></expr></argument>, <argument pos:start="107:23" pos:end="107:68"><expr pos:start="107:23" pos:end="107:68"><name pos:start="107:23" pos:end="107:35"><name pos:start="107:23" pos:end="107:25">env</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:35">vm_hsave</name></name> <operator pos:start="107:37" pos:end="107:37">+</operator> <call pos:start="107:39" pos:end="107:68"><name pos:start="107:39" pos:end="107:46">offsetof</name><argument_list pos:start="107:47" pos:end="107:68">(<argument pos:start="107:48" pos:end="107:58"><expr pos:start="107:48" pos:end="107:58">struct <name pos:start="107:55" pos:end="107:58">vmcb</name></expr></argument>, <argument pos:start="107:61" pos:end="107:67"><expr pos:start="107:61" pos:end="107:67"><name pos:start="107:61" pos:end="107:67"><name pos:start="107:61" pos:end="107:64">save</name><operator pos:start="107:65" pos:end="107:65">.</operator><name pos:start="107:66" pos:end="107:67">ss</name></name></expr></argument>)</argument_list></call></expr></argument>,

                 <argument pos:start="109:18" pos:end="109:33"><expr pos:start="109:18" pos:end="109:33"><operator pos:start="109:18" pos:end="109:18">&amp;</operator><name pos:start="109:19" pos:end="109:33"><name pos:start="109:19" pos:end="109:21">env</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:27">segs</name><index pos:start="109:28" pos:end="109:33">[<expr pos:start="109:29" pos:end="109:32"><name pos:start="109:29" pos:end="109:32">R_SS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="113:35"><expr pos:start="111:5" pos:end="113:34"><call pos:start="111:5" pos:end="113:34"><name pos:start="111:5" pos:end="111:16">svm_save_seg</name><argument_list pos:start="111:17" pos:end="113:34">(<argument pos:start="111:18" pos:end="111:20"><expr pos:start="111:18" pos:end="111:20"><name pos:start="111:18" pos:end="111:20">env</name></expr></argument>, <argument pos:start="111:23" pos:end="111:68"><expr pos:start="111:23" pos:end="111:68"><name pos:start="111:23" pos:end="111:35"><name pos:start="111:23" pos:end="111:25">env</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:35">vm_hsave</name></name> <operator pos:start="111:37" pos:end="111:37">+</operator> <call pos:start="111:39" pos:end="111:68"><name pos:start="111:39" pos:end="111:46">offsetof</name><argument_list pos:start="111:47" pos:end="111:68">(<argument pos:start="111:48" pos:end="111:58"><expr pos:start="111:48" pos:end="111:58">struct <name pos:start="111:55" pos:end="111:58">vmcb</name></expr></argument>, <argument pos:start="111:61" pos:end="111:67"><expr pos:start="111:61" pos:end="111:67"><name pos:start="111:61" pos:end="111:67"><name pos:start="111:61" pos:end="111:64">save</name><operator pos:start="111:65" pos:end="111:65">.</operator><name pos:start="111:66" pos:end="111:67">ds</name></name></expr></argument>)</argument_list></call></expr></argument>,

                 <argument pos:start="113:18" pos:end="113:33"><expr pos:start="113:18" pos:end="113:33"><operator pos:start="113:18" pos:end="113:18">&amp;</operator><name pos:start="113:19" pos:end="113:33"><name pos:start="113:19" pos:end="113:21">env</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:27">segs</name><index pos:start="113:28" pos:end="113:33">[<expr pos:start="113:29" pos:end="113:32"><name pos:start="113:29" pos:end="113:32">R_DS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="119:41"><expr pos:start="117:5" pos:end="119:40"><call pos:start="117:5" pos:end="119:40"><name pos:start="117:5" pos:end="117:12">stq_phys</name><argument_list pos:start="117:13" pos:end="119:40">(<argument pos:start="117:14" pos:end="117:19"><expr pos:start="117:14" pos:end="117:19"><name pos:start="117:14" pos:end="117:19"><name pos:start="117:14" pos:end="117:15">cs</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:19">as</name></name></expr></argument>, <argument pos:start="117:22" pos:end="117:68"><expr pos:start="117:22" pos:end="117:68"><name pos:start="117:22" pos:end="117:34"><name pos:start="117:22" pos:end="117:24">env</name><operator pos:start="117:25" pos:end="117:26">-&gt;</operator><name pos:start="117:27" pos:end="117:34">vm_hsave</name></name> <operator pos:start="117:36" pos:end="117:36">+</operator> <call pos:start="117:38" pos:end="117:68"><name pos:start="117:38" pos:end="117:45">offsetof</name><argument_list pos:start="117:46" pos:end="117:68">(<argument pos:start="117:47" pos:end="117:57"><expr pos:start="117:47" pos:end="117:57">struct <name pos:start="117:54" pos:end="117:57">vmcb</name></expr></argument>, <argument pos:start="117:60" pos:end="117:67"><expr pos:start="117:60" pos:end="117:67"><name pos:start="117:60" pos:end="117:67"><name pos:start="117:60" pos:end="117:63">save</name><operator pos:start="117:64" pos:end="117:64">.</operator><name pos:start="117:65" pos:end="117:67">rip</name></name></expr></argument>)</argument_list></call></expr></argument>,

             <argument pos:start="119:14" pos:end="119:39"><expr pos:start="119:14" pos:end="119:39"><name pos:start="119:14" pos:end="119:21"><name pos:start="119:14" pos:end="119:16">env</name><operator pos:start="119:17" pos:end="119:18">-&gt;</operator><name pos:start="119:19" pos:end="119:21">eip</name></name> <operator pos:start="119:23" pos:end="119:23">+</operator> <name pos:start="119:25" pos:end="119:39">next_eip_addend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="123:80"><expr pos:start="121:5" pos:end="123:79"><call pos:start="121:5" pos:end="123:79"><name pos:start="121:5" pos:end="121:12">stq_phys</name><argument_list pos:start="121:13" pos:end="123:79">(<argument pos:start="121:14" pos:end="121:19"><expr pos:start="121:14" pos:end="121:19"><name pos:start="121:14" pos:end="121:19"><name pos:start="121:14" pos:end="121:15">cs</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:19">as</name></name></expr></argument>,

             <argument pos:start="123:14" pos:end="123:60"><expr pos:start="123:14" pos:end="123:60"><name pos:start="123:14" pos:end="123:26"><name pos:start="123:14" pos:end="123:16">env</name><operator pos:start="123:17" pos:end="123:18">-&gt;</operator><name pos:start="123:19" pos:end="123:26">vm_hsave</name></name> <operator pos:start="123:28" pos:end="123:28">+</operator> <call pos:start="123:30" pos:end="123:60"><name pos:start="123:30" pos:end="123:37">offsetof</name><argument_list pos:start="123:38" pos:end="123:60">(<argument pos:start="123:39" pos:end="123:49"><expr pos:start="123:39" pos:end="123:49">struct <name pos:start="123:46" pos:end="123:49">vmcb</name></expr></argument>, <argument pos:start="123:52" pos:end="123:59"><expr pos:start="123:52" pos:end="123:59"><name pos:start="123:52" pos:end="123:59"><name pos:start="123:52" pos:end="123:55">save</name><operator pos:start="123:56" pos:end="123:56">.</operator><name pos:start="123:57" pos:end="123:59">rsp</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="123:63" pos:end="123:78"><expr pos:start="123:63" pos:end="123:78"><name pos:start="123:63" pos:end="123:78"><name pos:start="123:63" pos:end="123:65">env</name><operator pos:start="123:66" pos:end="123:67">-&gt;</operator><name pos:start="123:68" pos:end="123:71">regs</name><index pos:start="123:72" pos:end="123:78">[<expr pos:start="123:73" pos:end="123:77"><name pos:start="123:73" pos:end="123:77">R_ESP</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="127:80"><expr pos:start="125:5" pos:end="127:79"><call pos:start="125:5" pos:end="127:79"><name pos:start="125:5" pos:end="125:12">stq_phys</name><argument_list pos:start="125:13" pos:end="127:79">(<argument pos:start="125:14" pos:end="125:19"><expr pos:start="125:14" pos:end="125:19"><name pos:start="125:14" pos:end="125:19"><name pos:start="125:14" pos:end="125:15">cs</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:19">as</name></name></expr></argument>,

             <argument pos:start="127:14" pos:end="127:60"><expr pos:start="127:14" pos:end="127:60"><name pos:start="127:14" pos:end="127:26"><name pos:start="127:14" pos:end="127:16">env</name><operator pos:start="127:17" pos:end="127:18">-&gt;</operator><name pos:start="127:19" pos:end="127:26">vm_hsave</name></name> <operator pos:start="127:28" pos:end="127:28">+</operator> <call pos:start="127:30" pos:end="127:60"><name pos:start="127:30" pos:end="127:37">offsetof</name><argument_list pos:start="127:38" pos:end="127:60">(<argument pos:start="127:39" pos:end="127:49"><expr pos:start="127:39" pos:end="127:49">struct <name pos:start="127:46" pos:end="127:49">vmcb</name></expr></argument>, <argument pos:start="127:52" pos:end="127:59"><expr pos:start="127:52" pos:end="127:59"><name pos:start="127:52" pos:end="127:59"><name pos:start="127:52" pos:end="127:55">save</name><operator pos:start="127:56" pos:end="127:56">.</operator><name pos:start="127:57" pos:end="127:59">rax</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="127:63" pos:end="127:78"><expr pos:start="127:63" pos:end="127:78"><name pos:start="127:63" pos:end="127:78"><name pos:start="127:63" pos:end="127:65">env</name><operator pos:start="127:66" pos:end="127:67">-&gt;</operator><name pos:start="127:68" pos:end="127:71">regs</name><index pos:start="127:72" pos:end="127:78">[<expr pos:start="127:73" pos:end="127:77"><name pos:start="127:73" pos:end="127:77">R_EAX</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="131:5" pos:end="133:26">/* load the interception bitmaps so we do not need to access the

       vmcb in svm mode */</comment>

    <expr_stmt pos:start="135:5" pos:end="137:74"><expr pos:start="135:5" pos:end="137:73"><name pos:start="135:5" pos:end="135:18"><name pos:start="135:5" pos:end="135:7">env</name><operator pos:start="135:8" pos:end="135:9">-&gt;</operator><name pos:start="135:10" pos:end="135:18">intercept</name></name> <operator pos:start="135:20" pos:end="135:20">=</operator> <call pos:start="135:22" pos:end="137:73"><name pos:start="135:22" pos:end="135:29">ldq_phys</name><argument_list pos:start="135:30" pos:end="137:73">(<argument pos:start="135:31" pos:end="135:36"><expr pos:start="135:31" pos:end="135:36"><name pos:start="135:31" pos:end="135:36"><name pos:start="135:31" pos:end="135:32">cs</name><operator pos:start="135:33" pos:end="135:34">-&gt;</operator><name pos:start="135:35" pos:end="135:36">as</name></name></expr></argument>, <argument pos:start="135:39" pos:end="137:72"><expr pos:start="135:39" pos:end="137:72"><name pos:start="135:39" pos:end="135:50"><name pos:start="135:39" pos:end="135:41">env</name><operator pos:start="135:42" pos:end="135:43">-&gt;</operator><name pos:start="135:44" pos:end="135:50">vm_vmcb</name></name> <operator pos:start="135:52" pos:end="135:52">+</operator> <call pos:start="135:54" pos:end="137:72"><name pos:start="135:54" pos:end="135:61">offsetof</name><argument_list pos:start="135:62" pos:end="137:72">(<argument pos:start="135:63" pos:end="135:73"><expr pos:start="135:63" pos:end="135:73">struct <name pos:start="135:70" pos:end="135:73">vmcb</name></expr></argument>,

                                                      <argument pos:start="137:55" pos:end="137:71"><expr pos:start="137:55" pos:end="137:71"><name pos:start="137:55" pos:end="137:71"><name pos:start="137:55" pos:end="137:61">control</name><operator pos:start="137:62" pos:end="137:62">.</operator><name pos:start="137:63" pos:end="137:71">intercept</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="143:76"><expr pos:start="139:5" pos:end="143:75"><name pos:start="139:5" pos:end="139:26"><name pos:start="139:5" pos:end="139:7">env</name><operator pos:start="139:8" pos:end="139:9">-&gt;</operator><name pos:start="139:10" pos:end="139:26">intercept_cr_read</name></name> <operator pos:start="139:28" pos:end="139:28">=</operator> <call pos:start="139:30" pos:end="143:75"><name pos:start="139:30" pos:end="139:38">lduw_phys</name><argument_list pos:start="139:39" pos:end="143:75">(<argument pos:start="139:40" pos:end="139:45"><expr pos:start="139:40" pos:end="139:45"><name pos:start="139:40" pos:end="139:45"><name pos:start="139:40" pos:end="139:41">cs</name><operator pos:start="139:42" pos:end="139:43">-&gt;</operator><name pos:start="139:44" pos:end="139:45">as</name></name></expr></argument>, <argument pos:start="139:48" pos:end="143:74"><expr pos:start="139:48" pos:end="143:74"><name pos:start="139:48" pos:end="139:59"><name pos:start="139:48" pos:end="139:50">env</name><operator pos:start="139:51" pos:end="139:52">-&gt;</operator><name pos:start="139:53" pos:end="139:59">vm_vmcb</name></name> <operator pos:start="139:61" pos:end="139:61">+</operator>

                                       <call pos:start="141:40" pos:end="143:74"><name pos:start="141:40" pos:end="141:47">offsetof</name><argument_list pos:start="141:48" pos:end="143:74">(<argument pos:start="141:49" pos:end="141:59"><expr pos:start="141:49" pos:end="141:59">struct <name pos:start="141:56" pos:end="141:59">vmcb</name></expr></argument>,

                                                <argument pos:start="143:49" pos:end="143:73"><expr pos:start="143:49" pos:end="143:73"><name pos:start="143:49" pos:end="143:73"><name pos:start="143:49" pos:end="143:55">control</name><operator pos:start="143:56" pos:end="143:56">.</operator><name pos:start="143:57" pos:end="143:73">intercept_cr_read</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="149:78"><expr pos:start="145:5" pos:end="149:77"><name pos:start="145:5" pos:end="145:27"><name pos:start="145:5" pos:end="145:7">env</name><operator pos:start="145:8" pos:end="145:9">-&gt;</operator><name pos:start="145:10" pos:end="145:27">intercept_cr_write</name></name> <operator pos:start="145:29" pos:end="145:29">=</operator> <call pos:start="145:31" pos:end="149:77"><name pos:start="145:31" pos:end="145:39">lduw_phys</name><argument_list pos:start="145:40" pos:end="149:77">(<argument pos:start="145:41" pos:end="145:46"><expr pos:start="145:41" pos:end="145:46"><name pos:start="145:41" pos:end="145:46"><name pos:start="145:41" pos:end="145:42">cs</name><operator pos:start="145:43" pos:end="145:44">-&gt;</operator><name pos:start="145:45" pos:end="145:46">as</name></name></expr></argument>, <argument pos:start="145:49" pos:end="149:76"><expr pos:start="145:49" pos:end="149:76"><name pos:start="145:49" pos:end="145:60"><name pos:start="145:49" pos:end="145:51">env</name><operator pos:start="145:52" pos:end="145:53">-&gt;</operator><name pos:start="145:54" pos:end="145:60">vm_vmcb</name></name> <operator pos:start="145:62" pos:end="145:62">+</operator>

                                        <call pos:start="147:41" pos:end="149:76"><name pos:start="147:41" pos:end="147:48">offsetof</name><argument_list pos:start="147:49" pos:end="149:76">(<argument pos:start="147:50" pos:end="147:60"><expr pos:start="147:50" pos:end="147:60">struct <name pos:start="147:57" pos:end="147:60">vmcb</name></expr></argument>,

                                                 <argument pos:start="149:50" pos:end="149:75"><expr pos:start="149:50" pos:end="149:75"><name pos:start="149:50" pos:end="149:75"><name pos:start="149:50" pos:end="149:56">control</name><operator pos:start="149:57" pos:end="149:57">.</operator><name pos:start="149:58" pos:end="149:75">intercept_cr_write</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="155:76"><expr pos:start="151:5" pos:end="155:75"><name pos:start="151:5" pos:end="151:26"><name pos:start="151:5" pos:end="151:7">env</name><operator pos:start="151:8" pos:end="151:9">-&gt;</operator><name pos:start="151:10" pos:end="151:26">intercept_dr_read</name></name> <operator pos:start="151:28" pos:end="151:28">=</operator> <call pos:start="151:30" pos:end="155:75"><name pos:start="151:30" pos:end="151:38">lduw_phys</name><argument_list pos:start="151:39" pos:end="155:75">(<argument pos:start="151:40" pos:end="151:45"><expr pos:start="151:40" pos:end="151:45"><name pos:start="151:40" pos:end="151:45"><name pos:start="151:40" pos:end="151:41">cs</name><operator pos:start="151:42" pos:end="151:43">-&gt;</operator><name pos:start="151:44" pos:end="151:45">as</name></name></expr></argument>, <argument pos:start="151:48" pos:end="155:74"><expr pos:start="151:48" pos:end="155:74"><name pos:start="151:48" pos:end="151:59"><name pos:start="151:48" pos:end="151:50">env</name><operator pos:start="151:51" pos:end="151:52">-&gt;</operator><name pos:start="151:53" pos:end="151:59">vm_vmcb</name></name> <operator pos:start="151:61" pos:end="151:61">+</operator>

                                       <call pos:start="153:40" pos:end="155:74"><name pos:start="153:40" pos:end="153:47">offsetof</name><argument_list pos:start="153:48" pos:end="155:74">(<argument pos:start="153:49" pos:end="153:59"><expr pos:start="153:49" pos:end="153:59">struct <name pos:start="153:56" pos:end="153:59">vmcb</name></expr></argument>,

                                                <argument pos:start="155:49" pos:end="155:73"><expr pos:start="155:49" pos:end="155:73"><name pos:start="155:49" pos:end="155:73"><name pos:start="155:49" pos:end="155:55">control</name><operator pos:start="155:56" pos:end="155:56">.</operator><name pos:start="155:57" pos:end="155:73">intercept_dr_read</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="161:78"><expr pos:start="157:5" pos:end="161:77"><name pos:start="157:5" pos:end="157:27"><name pos:start="157:5" pos:end="157:7">env</name><operator pos:start="157:8" pos:end="157:9">-&gt;</operator><name pos:start="157:10" pos:end="157:27">intercept_dr_write</name></name> <operator pos:start="157:29" pos:end="157:29">=</operator> <call pos:start="157:31" pos:end="161:77"><name pos:start="157:31" pos:end="157:39">lduw_phys</name><argument_list pos:start="157:40" pos:end="161:77">(<argument pos:start="157:41" pos:end="157:46"><expr pos:start="157:41" pos:end="157:46"><name pos:start="157:41" pos:end="157:46"><name pos:start="157:41" pos:end="157:42">cs</name><operator pos:start="157:43" pos:end="157:44">-&gt;</operator><name pos:start="157:45" pos:end="157:46">as</name></name></expr></argument>, <argument pos:start="157:49" pos:end="161:76"><expr pos:start="157:49" pos:end="161:76"><name pos:start="157:49" pos:end="157:60"><name pos:start="157:49" pos:end="157:51">env</name><operator pos:start="157:52" pos:end="157:53">-&gt;</operator><name pos:start="157:54" pos:end="157:60">vm_vmcb</name></name> <operator pos:start="157:62" pos:end="157:62">+</operator>

                                        <call pos:start="159:41" pos:end="161:76"><name pos:start="159:41" pos:end="159:48">offsetof</name><argument_list pos:start="159:49" pos:end="161:76">(<argument pos:start="159:50" pos:end="159:60"><expr pos:start="159:50" pos:end="159:60">struct <name pos:start="159:57" pos:end="159:60">vmcb</name></expr></argument>,

                                                 <argument pos:start="161:50" pos:end="161:75"><expr pos:start="161:50" pos:end="161:75"><name pos:start="161:50" pos:end="161:75"><name pos:start="161:50" pos:end="161:56">control</name><operator pos:start="161:57" pos:end="161:57">.</operator><name pos:start="161:58" pos:end="161:75">intercept_dr_write</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="169:53"><expr pos:start="163:5" pos:end="169:52"><name pos:start="163:5" pos:end="163:29"><name pos:start="163:5" pos:end="163:7">env</name><operator pos:start="163:8" pos:end="163:9">-&gt;</operator><name pos:start="163:10" pos:end="163:29">intercept_exceptions</name></name> <operator pos:start="163:31" pos:end="163:31">=</operator> <call pos:start="163:33" pos:end="169:52"><name pos:start="163:33" pos:end="163:40">ldl_phys</name><argument_list pos:start="163:41" pos:end="169:52">(<argument pos:start="163:42" pos:end="163:47"><expr pos:start="163:42" pos:end="163:47"><name pos:start="163:42" pos:end="163:47"><name pos:start="163:42" pos:end="163:43">cs</name><operator pos:start="163:44" pos:end="163:45">-&gt;</operator><name pos:start="163:46" pos:end="163:47">as</name></name></expr></argument>, <argument pos:start="163:50" pos:end="169:51"><expr pos:start="163:50" pos:end="169:51"><name pos:start="163:50" pos:end="163:61"><name pos:start="163:50" pos:end="163:52">env</name><operator pos:start="163:53" pos:end="163:54">-&gt;</operator><name pos:start="163:55" pos:end="163:61">vm_vmcb</name></name> <operator pos:start="163:63" pos:end="163:63">+</operator>

                                         <call pos:start="165:42" pos:end="169:51"><name pos:start="165:42" pos:end="165:49">offsetof</name><argument_list pos:start="165:50" pos:end="169:51">(<argument pos:start="165:51" pos:end="165:61"><expr pos:start="165:51" pos:end="165:61">struct <name pos:start="165:58" pos:end="165:61">vmcb</name></expr></argument>,

                                                  <argument pos:start="167:51" pos:end="167:78"><expr pos:start="167:51" pos:end="167:78"><name pos:start="167:51" pos:end="167:78"><name pos:start="167:51" pos:end="167:57">control</name><operator pos:start="167:58" pos:end="167:58">.</operator><name pos:start="167:59" pos:end="167:78">intercept_exceptions</name></name></expr></argument>

                                                  )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="173:5" pos:end="173:27">/* enable intercepts */</comment>

    <expr_stmt pos:start="175:5" pos:end="175:32"><expr pos:start="175:5" pos:end="175:31"><name pos:start="175:5" pos:end="175:15"><name pos:start="175:5" pos:end="175:7">env</name><operator pos:start="175:8" pos:end="175:9">-&gt;</operator><name pos:start="175:10" pos:end="175:15">hflags</name></name> <operator pos:start="175:17" pos:end="175:18">|=</operator> <name pos:start="175:20" pos:end="175:31">HF_SVMI_MASK</name></expr>;</expr_stmt>



    <expr_stmt pos:start="179:5" pos:end="181:74"><expr pos:start="179:5" pos:end="181:73"><name pos:start="179:5" pos:end="179:19"><name pos:start="179:5" pos:end="179:7">env</name><operator pos:start="179:8" pos:end="179:9">-&gt;</operator><name pos:start="179:10" pos:end="179:19">tsc_offset</name></name> <operator pos:start="179:21" pos:end="179:21">=</operator> <call pos:start="179:23" pos:end="181:73"><name pos:start="179:23" pos:end="179:30">ldq_phys</name><argument_list pos:start="179:31" pos:end="181:73">(<argument pos:start="179:32" pos:end="179:37"><expr pos:start="179:32" pos:end="179:37"><name pos:start="179:32" pos:end="179:37"><name pos:start="179:32" pos:end="179:33">cs</name><operator pos:start="179:34" pos:end="179:35">-&gt;</operator><name pos:start="179:36" pos:end="179:37">as</name></name></expr></argument>, <argument pos:start="179:40" pos:end="181:72"><expr pos:start="179:40" pos:end="181:72"><name pos:start="179:40" pos:end="179:51"><name pos:start="179:40" pos:end="179:42">env</name><operator pos:start="179:43" pos:end="179:44">-&gt;</operator><name pos:start="179:45" pos:end="179:51">vm_vmcb</name></name> <operator pos:start="179:53" pos:end="179:53">+</operator>

                               <call pos:start="181:32" pos:end="181:72"><name pos:start="181:32" pos:end="181:39">offsetof</name><argument_list pos:start="181:40" pos:end="181:72">(<argument pos:start="181:41" pos:end="181:51"><expr pos:start="181:41" pos:end="181:51">struct <name pos:start="181:48" pos:end="181:51">vmcb</name></expr></argument>, <argument pos:start="181:54" pos:end="181:71"><expr pos:start="181:54" pos:end="181:71"><name pos:start="181:54" pos:end="181:71"><name pos:start="181:54" pos:end="181:60">control</name><operator pos:start="181:61" pos:end="181:61">.</operator><name pos:start="181:62" pos:end="181:71">tsc_offset</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="185:5" pos:end="187:71"><expr pos:start="185:5" pos:end="187:70"><name pos:start="185:5" pos:end="185:17"><name pos:start="185:5" pos:end="185:7">env</name><operator pos:start="185:8" pos:end="185:9">-&gt;</operator><name pos:start="185:10" pos:end="185:12">gdt</name><operator pos:start="185:13" pos:end="185:13">.</operator><name pos:start="185:14" pos:end="185:17">base</name></name>  <operator pos:start="185:20" pos:end="185:20">=</operator> <call pos:start="185:22" pos:end="187:70"><name pos:start="185:22" pos:end="185:29">ldq_phys</name><argument_list pos:start="185:30" pos:end="187:70">(<argument pos:start="185:31" pos:end="185:36"><expr pos:start="185:31" pos:end="185:36"><name pos:start="185:31" pos:end="185:36"><name pos:start="185:31" pos:end="185:32">cs</name><operator pos:start="185:33" pos:end="185:34">-&gt;</operator><name pos:start="185:35" pos:end="185:36">as</name></name></expr></argument>, <argument pos:start="185:39" pos:end="187:69"><expr pos:start="185:39" pos:end="187:69"><name pos:start="185:39" pos:end="185:50"><name pos:start="185:39" pos:end="185:41">env</name><operator pos:start="185:42" pos:end="185:43">-&gt;</operator><name pos:start="185:44" pos:end="185:50">vm_vmcb</name></name> <operator pos:start="185:52" pos:end="185:52">+</operator> <call pos:start="185:54" pos:end="187:69"><name pos:start="185:54" pos:end="185:61">offsetof</name><argument_list pos:start="185:62" pos:end="187:69">(<argument pos:start="185:63" pos:end="185:73"><expr pos:start="185:63" pos:end="185:73">struct <name pos:start="185:70" pos:end="185:73">vmcb</name></expr></argument>,

                                                      <argument pos:start="187:55" pos:end="187:68"><expr pos:start="187:55" pos:end="187:68"><name pos:start="187:55" pos:end="187:68"><name pos:start="187:55" pos:end="187:58">save</name><operator pos:start="187:59" pos:end="187:59">.</operator><name pos:start="187:60" pos:end="187:63">gdtr</name><operator pos:start="187:64" pos:end="187:64">.</operator><name pos:start="187:65" pos:end="187:68">base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="191:72"><expr pos:start="189:5" pos:end="191:71"><name pos:start="189:5" pos:end="189:18"><name pos:start="189:5" pos:end="189:7">env</name><operator pos:start="189:8" pos:end="189:9">-&gt;</operator><name pos:start="189:10" pos:end="189:12">gdt</name><operator pos:start="189:13" pos:end="189:13">.</operator><name pos:start="189:14" pos:end="189:18">limit</name></name> <operator pos:start="189:20" pos:end="189:20">=</operator> <call pos:start="189:22" pos:end="191:71"><name pos:start="189:22" pos:end="189:29">ldl_phys</name><argument_list pos:start="189:30" pos:end="191:71">(<argument pos:start="189:31" pos:end="189:36"><expr pos:start="189:31" pos:end="189:36"><name pos:start="189:31" pos:end="189:36"><name pos:start="189:31" pos:end="189:32">cs</name><operator pos:start="189:33" pos:end="189:34">-&gt;</operator><name pos:start="189:35" pos:end="189:36">as</name></name></expr></argument>, <argument pos:start="189:39" pos:end="191:70"><expr pos:start="189:39" pos:end="191:70"><name pos:start="189:39" pos:end="189:50"><name pos:start="189:39" pos:end="189:41">env</name><operator pos:start="189:42" pos:end="189:43">-&gt;</operator><name pos:start="189:44" pos:end="189:50">vm_vmcb</name></name> <operator pos:start="189:52" pos:end="189:52">+</operator> <call pos:start="189:54" pos:end="191:70"><name pos:start="189:54" pos:end="189:61">offsetof</name><argument_list pos:start="189:62" pos:end="191:70">(<argument pos:start="189:63" pos:end="189:73"><expr pos:start="189:63" pos:end="189:73">struct <name pos:start="189:70" pos:end="189:73">vmcb</name></expr></argument>,

                                                      <argument pos:start="191:55" pos:end="191:69"><expr pos:start="191:55" pos:end="191:69"><name pos:start="191:55" pos:end="191:69"><name pos:start="191:55" pos:end="191:58">save</name><operator pos:start="191:59" pos:end="191:59">.</operator><name pos:start="191:60" pos:end="191:63">gdtr</name><operator pos:start="191:64" pos:end="191:64">.</operator><name pos:start="191:65" pos:end="191:69">limit</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="195:5" pos:end="197:71"><expr pos:start="195:5" pos:end="197:70"><name pos:start="195:5" pos:end="195:17"><name pos:start="195:5" pos:end="195:7">env</name><operator pos:start="195:8" pos:end="195:9">-&gt;</operator><name pos:start="195:10" pos:end="195:12">idt</name><operator pos:start="195:13" pos:end="195:13">.</operator><name pos:start="195:14" pos:end="195:17">base</name></name>  <operator pos:start="195:20" pos:end="195:20">=</operator> <call pos:start="195:22" pos:end="197:70"><name pos:start="195:22" pos:end="195:29">ldq_phys</name><argument_list pos:start="195:30" pos:end="197:70">(<argument pos:start="195:31" pos:end="195:36"><expr pos:start="195:31" pos:end="195:36"><name pos:start="195:31" pos:end="195:36"><name pos:start="195:31" pos:end="195:32">cs</name><operator pos:start="195:33" pos:end="195:34">-&gt;</operator><name pos:start="195:35" pos:end="195:36">as</name></name></expr></argument>, <argument pos:start="195:39" pos:end="197:69"><expr pos:start="195:39" pos:end="197:69"><name pos:start="195:39" pos:end="195:50"><name pos:start="195:39" pos:end="195:41">env</name><operator pos:start="195:42" pos:end="195:43">-&gt;</operator><name pos:start="195:44" pos:end="195:50">vm_vmcb</name></name> <operator pos:start="195:52" pos:end="195:52">+</operator> <call pos:start="195:54" pos:end="197:69"><name pos:start="195:54" pos:end="195:61">offsetof</name><argument_list pos:start="195:62" pos:end="197:69">(<argument pos:start="195:63" pos:end="195:73"><expr pos:start="195:63" pos:end="195:73">struct <name pos:start="195:70" pos:end="195:73">vmcb</name></expr></argument>,

                                                      <argument pos:start="197:55" pos:end="197:68"><expr pos:start="197:55" pos:end="197:68"><name pos:start="197:55" pos:end="197:68"><name pos:start="197:55" pos:end="197:58">save</name><operator pos:start="197:59" pos:end="197:59">.</operator><name pos:start="197:60" pos:end="197:63">idtr</name><operator pos:start="197:64" pos:end="197:64">.</operator><name pos:start="197:65" pos:end="197:68">base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="201:72"><expr pos:start="199:5" pos:end="201:71"><name pos:start="199:5" pos:end="199:18"><name pos:start="199:5" pos:end="199:7">env</name><operator pos:start="199:8" pos:end="199:9">-&gt;</operator><name pos:start="199:10" pos:end="199:12">idt</name><operator pos:start="199:13" pos:end="199:13">.</operator><name pos:start="199:14" pos:end="199:18">limit</name></name> <operator pos:start="199:20" pos:end="199:20">=</operator> <call pos:start="199:22" pos:end="201:71"><name pos:start="199:22" pos:end="199:29">ldl_phys</name><argument_list pos:start="199:30" pos:end="201:71">(<argument pos:start="199:31" pos:end="199:36"><expr pos:start="199:31" pos:end="199:36"><name pos:start="199:31" pos:end="199:36"><name pos:start="199:31" pos:end="199:32">cs</name><operator pos:start="199:33" pos:end="199:34">-&gt;</operator><name pos:start="199:35" pos:end="199:36">as</name></name></expr></argument>, <argument pos:start="199:39" pos:end="201:70"><expr pos:start="199:39" pos:end="201:70"><name pos:start="199:39" pos:end="199:50"><name pos:start="199:39" pos:end="199:41">env</name><operator pos:start="199:42" pos:end="199:43">-&gt;</operator><name pos:start="199:44" pos:end="199:50">vm_vmcb</name></name> <operator pos:start="199:52" pos:end="199:52">+</operator> <call pos:start="199:54" pos:end="201:70"><name pos:start="199:54" pos:end="199:61">offsetof</name><argument_list pos:start="199:62" pos:end="201:70">(<argument pos:start="199:63" pos:end="199:73"><expr pos:start="199:63" pos:end="199:73">struct <name pos:start="199:70" pos:end="199:73">vmcb</name></expr></argument>,

                                                      <argument pos:start="201:55" pos:end="201:69"><expr pos:start="201:55" pos:end="201:69"><name pos:start="201:55" pos:end="201:69"><name pos:start="201:55" pos:end="201:58">save</name><operator pos:start="201:59" pos:end="201:59">.</operator><name pos:start="201:60" pos:end="201:63">idtr</name><operator pos:start="201:64" pos:end="201:64">.</operator><name pos:start="201:65" pos:end="201:69">limit</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="205:5" pos:end="205:63">/* clear exit_info_2 so we behave like the real hardware */</comment>

    <expr_stmt pos:start="207:5" pos:end="209:75"><expr pos:start="207:5" pos:end="209:74"><call pos:start="207:5" pos:end="209:74"><name pos:start="207:5" pos:end="207:12">stq_phys</name><argument_list pos:start="207:13" pos:end="209:74">(<argument pos:start="207:14" pos:end="207:19"><expr pos:start="207:14" pos:end="207:19"><name pos:start="207:14" pos:end="207:19"><name pos:start="207:14" pos:end="207:15">cs</name><operator pos:start="207:16" pos:end="207:17">-&gt;</operator><name pos:start="207:18" pos:end="207:19">as</name></name></expr></argument>,

             <argument pos:start="209:14" pos:end="209:70"><expr pos:start="209:14" pos:end="209:70"><name pos:start="209:14" pos:end="209:25"><name pos:start="209:14" pos:end="209:16">env</name><operator pos:start="209:17" pos:end="209:18">-&gt;</operator><name pos:start="209:19" pos:end="209:25">vm_vmcb</name></name> <operator pos:start="209:27" pos:end="209:27">+</operator> <call pos:start="209:29" pos:end="209:70"><name pos:start="209:29" pos:end="209:36">offsetof</name><argument_list pos:start="209:37" pos:end="209:70">(<argument pos:start="209:38" pos:end="209:48"><expr pos:start="209:38" pos:end="209:48">struct <name pos:start="209:45" pos:end="209:48">vmcb</name></expr></argument>, <argument pos:start="209:51" pos:end="209:69"><expr pos:start="209:51" pos:end="209:69"><name pos:start="209:51" pos:end="209:69"><name pos:start="209:51" pos:end="209:57">control</name><operator pos:start="209:58" pos:end="209:58">.</operator><name pos:start="209:59" pos:end="209:69">exit_info_2</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="209:73" pos:end="209:73"><expr pos:start="209:73" pos:end="209:73"><literal type="number" pos:start="209:73" pos:end="209:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="213:5" pos:end="217:73"><expr pos:start="213:5" pos:end="217:72"><call pos:start="213:5" pos:end="217:72"><name pos:start="213:5" pos:end="213:22">cpu_x86_update_cr0</name><argument_list pos:start="213:23" pos:end="217:72">(<argument pos:start="213:24" pos:end="213:26"><expr pos:start="213:24" pos:end="213:26"><name pos:start="213:24" pos:end="213:26">env</name></expr></argument>, <argument pos:start="213:29" pos:end="217:71"><expr pos:start="213:29" pos:end="217:71"><call pos:start="213:29" pos:end="217:71"><name pos:start="213:29" pos:end="213:36">ldq_phys</name><argument_list pos:start="213:37" pos:end="217:71">(<argument pos:start="213:38" pos:end="213:43"><expr pos:start="213:38" pos:end="213:43"><name pos:start="213:38" pos:end="213:43"><name pos:start="213:38" pos:end="213:39">cs</name><operator pos:start="213:40" pos:end="213:41">-&gt;</operator><name pos:start="213:42" pos:end="213:43">as</name></name></expr></argument>,

                                     <argument pos:start="215:38" pos:end="217:70"><expr pos:start="215:38" pos:end="217:70"><name pos:start="215:38" pos:end="215:49"><name pos:start="215:38" pos:end="215:40">env</name><operator pos:start="215:41" pos:end="215:42">-&gt;</operator><name pos:start="215:43" pos:end="215:49">vm_vmcb</name></name> <operator pos:start="215:51" pos:end="215:51">+</operator> <call pos:start="215:53" pos:end="217:70"><name pos:start="215:53" pos:end="215:60">offsetof</name><argument_list pos:start="215:61" pos:end="217:70">(<argument pos:start="215:62" pos:end="215:72"><expr pos:start="215:62" pos:end="215:72">struct <name pos:start="215:69" pos:end="215:72">vmcb</name></expr></argument>,

                                                             <argument pos:start="217:62" pos:end="217:69"><expr pos:start="217:62" pos:end="217:69"><name pos:start="217:62" pos:end="217:69"><name pos:start="217:62" pos:end="217:65">save</name><operator pos:start="217:66" pos:end="217:66">.</operator><name pos:start="217:67" pos:end="217:69">cr0</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="223:73"><expr pos:start="219:5" pos:end="223:72"><call pos:start="219:5" pos:end="223:72"><name pos:start="219:5" pos:end="219:22">cpu_x86_update_cr4</name><argument_list pos:start="219:23" pos:end="223:72">(<argument pos:start="219:24" pos:end="219:26"><expr pos:start="219:24" pos:end="219:26"><name pos:start="219:24" pos:end="219:26">env</name></expr></argument>, <argument pos:start="219:29" pos:end="223:71"><expr pos:start="219:29" pos:end="223:71"><call pos:start="219:29" pos:end="223:71"><name pos:start="219:29" pos:end="219:36">ldq_phys</name><argument_list pos:start="219:37" pos:end="223:71">(<argument pos:start="219:38" pos:end="219:43"><expr pos:start="219:38" pos:end="219:43"><name pos:start="219:38" pos:end="219:43"><name pos:start="219:38" pos:end="219:39">cs</name><operator pos:start="219:40" pos:end="219:41">-&gt;</operator><name pos:start="219:42" pos:end="219:43">as</name></name></expr></argument>,

                                     <argument pos:start="221:38" pos:end="223:70"><expr pos:start="221:38" pos:end="223:70"><name pos:start="221:38" pos:end="221:49"><name pos:start="221:38" pos:end="221:40">env</name><operator pos:start="221:41" pos:end="221:42">-&gt;</operator><name pos:start="221:43" pos:end="221:49">vm_vmcb</name></name> <operator pos:start="221:51" pos:end="221:51">+</operator> <call pos:start="221:53" pos:end="223:70"><name pos:start="221:53" pos:end="221:60">offsetof</name><argument_list pos:start="221:61" pos:end="223:70">(<argument pos:start="221:62" pos:end="221:72"><expr pos:start="221:62" pos:end="221:72">struct <name pos:start="221:69" pos:end="221:72">vmcb</name></expr></argument>,

                                                             <argument pos:start="223:62" pos:end="223:69"><expr pos:start="223:62" pos:end="223:69"><name pos:start="223:62" pos:end="223:69"><name pos:start="223:62" pos:end="223:65">save</name><operator pos:start="223:66" pos:end="223:66">.</operator><name pos:start="223:67" pos:end="223:69">cr4</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="225:5" pos:end="229:73"><expr pos:start="225:5" pos:end="229:72"><call pos:start="225:5" pos:end="229:72"><name pos:start="225:5" pos:end="225:22">cpu_x86_update_cr3</name><argument_list pos:start="225:23" pos:end="229:72">(<argument pos:start="225:24" pos:end="225:26"><expr pos:start="225:24" pos:end="225:26"><name pos:start="225:24" pos:end="225:26">env</name></expr></argument>, <argument pos:start="225:29" pos:end="229:71"><expr pos:start="225:29" pos:end="229:71"><call pos:start="225:29" pos:end="229:71"><name pos:start="225:29" pos:end="225:36">ldq_phys</name><argument_list pos:start="225:37" pos:end="229:71">(<argument pos:start="225:38" pos:end="225:43"><expr pos:start="225:38" pos:end="225:43"><name pos:start="225:38" pos:end="225:43"><name pos:start="225:38" pos:end="225:39">cs</name><operator pos:start="225:40" pos:end="225:41">-&gt;</operator><name pos:start="225:42" pos:end="225:43">as</name></name></expr></argument>,

                                     <argument pos:start="227:38" pos:end="229:70"><expr pos:start="227:38" pos:end="229:70"><name pos:start="227:38" pos:end="227:49"><name pos:start="227:38" pos:end="227:40">env</name><operator pos:start="227:41" pos:end="227:42">-&gt;</operator><name pos:start="227:43" pos:end="227:49">vm_vmcb</name></name> <operator pos:start="227:51" pos:end="227:51">+</operator> <call pos:start="227:53" pos:end="229:70"><name pos:start="227:53" pos:end="227:60">offsetof</name><argument_list pos:start="227:61" pos:end="229:70">(<argument pos:start="227:62" pos:end="227:72"><expr pos:start="227:62" pos:end="227:72">struct <name pos:start="227:69" pos:end="227:72">vmcb</name></expr></argument>,

                                                             <argument pos:start="229:62" pos:end="229:69"><expr pos:start="229:62" pos:end="229:69"><name pos:start="229:62" pos:end="229:69"><name pos:start="229:62" pos:end="229:65">save</name><operator pos:start="229:66" pos:end="229:66">.</operator><name pos:start="229:67" pos:end="229:69">cr3</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="231:5" pos:end="233:74"><expr pos:start="231:5" pos:end="233:73"><name pos:start="231:5" pos:end="231:14"><name pos:start="231:5" pos:end="231:7">env</name><operator pos:start="231:8" pos:end="231:9">-&gt;</operator><name pos:start="231:10" pos:end="231:11">cr</name><index pos:start="231:12" pos:end="231:14">[<expr pos:start="231:13" pos:end="231:13"><literal type="number" pos:start="231:13" pos:end="231:13">2</literal></expr>]</index></name> <operator pos:start="231:16" pos:end="231:16">=</operator> <call pos:start="231:18" pos:end="233:73"><name pos:start="231:18" pos:end="231:25">ldq_phys</name><argument_list pos:start="231:26" pos:end="233:73">(<argument pos:start="231:27" pos:end="231:32"><expr pos:start="231:27" pos:end="231:32"><name pos:start="231:27" pos:end="231:32"><name pos:start="231:27" pos:end="231:28">cs</name><operator pos:start="231:29" pos:end="231:30">-&gt;</operator><name pos:start="231:31" pos:end="231:32">as</name></name></expr></argument>,

                          <argument pos:start="233:27" pos:end="233:72"><expr pos:start="233:27" pos:end="233:72"><name pos:start="233:27" pos:end="233:38"><name pos:start="233:27" pos:end="233:29">env</name><operator pos:start="233:30" pos:end="233:31">-&gt;</operator><name pos:start="233:32" pos:end="233:38">vm_vmcb</name></name> <operator pos:start="233:40" pos:end="233:40">+</operator> <call pos:start="233:42" pos:end="233:72"><name pos:start="233:42" pos:end="233:49">offsetof</name><argument_list pos:start="233:50" pos:end="233:72">(<argument pos:start="233:51" pos:end="233:61"><expr pos:start="233:51" pos:end="233:61">struct <name pos:start="233:58" pos:end="233:61">vmcb</name></expr></argument>, <argument pos:start="233:64" pos:end="233:71"><expr pos:start="233:64" pos:end="233:71"><name pos:start="233:64" pos:end="233:71"><name pos:start="233:64" pos:end="233:67">save</name><operator pos:start="233:68" pos:end="233:68">.</operator><name pos:start="233:69" pos:end="233:71">cr2</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="237:78"><expr pos:start="235:5" pos:end="237:77"><name pos:start="235:5" pos:end="235:11">int_ctl</name> <operator pos:start="235:13" pos:end="235:13">=</operator> <call pos:start="235:15" pos:end="237:77"><name pos:start="235:15" pos:end="235:22">ldl_phys</name><argument_list pos:start="235:23" pos:end="237:77">(<argument pos:start="235:24" pos:end="235:29"><expr pos:start="235:24" pos:end="235:29"><name pos:start="235:24" pos:end="235:29"><name pos:start="235:24" pos:end="235:25">cs</name><operator pos:start="235:26" pos:end="235:27">-&gt;</operator><name pos:start="235:28" pos:end="235:29">as</name></name></expr></argument>,

                       <argument pos:start="237:24" pos:end="237:76"><expr pos:start="237:24" pos:end="237:76"><name pos:start="237:24" pos:end="237:35"><name pos:start="237:24" pos:end="237:26">env</name><operator pos:start="237:27" pos:end="237:28">-&gt;</operator><name pos:start="237:29" pos:end="237:35">vm_vmcb</name></name> <operator pos:start="237:37" pos:end="237:37">+</operator> <call pos:start="237:39" pos:end="237:76"><name pos:start="237:39" pos:end="237:46">offsetof</name><argument_list pos:start="237:47" pos:end="237:76">(<argument pos:start="237:48" pos:end="237:58"><expr pos:start="237:48" pos:end="237:58">struct <name pos:start="237:55" pos:end="237:58">vmcb</name></expr></argument>, <argument pos:start="237:61" pos:end="237:75"><expr pos:start="237:61" pos:end="237:75"><name pos:start="237:61" pos:end="237:75"><name pos:start="237:61" pos:end="237:67">control</name><operator pos:start="237:68" pos:end="237:68">.</operator><name pos:start="237:69" pos:end="237:75">int_ctl</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:53"><expr pos:start="239:5" pos:end="239:52"><name pos:start="239:5" pos:end="239:16"><name pos:start="239:5" pos:end="239:7">env</name><operator pos:start="239:8" pos:end="239:9">-&gt;</operator><name pos:start="239:10" pos:end="239:16">hflags2</name></name> <operator pos:start="239:18" pos:end="239:19">&amp;=</operator> <operator pos:start="239:21" pos:end="239:21">~</operator><operator pos:start="239:22" pos:end="239:22">(</operator><name pos:start="239:23" pos:end="239:34">HF2_HIF_MASK</name> <operator pos:start="239:36" pos:end="239:36">|</operator> <name pos:start="239:38" pos:end="239:51">HF2_VINTR_MASK</name><operator pos:start="239:52" pos:end="239:52">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="241:5" pos:end="253:5"><if pos:start="241:5" pos:end="253:5">if <condition pos:start="241:8" pos:end="241:38">(<expr pos:start="241:9" pos:end="241:37"><name pos:start="241:9" pos:end="241:15">int_ctl</name> <operator pos:start="241:17" pos:end="241:17">&amp;</operator> <name pos:start="241:19" pos:end="241:37">V_INTR_MASKING_MASK</name></expr>)</condition> <block pos:start="241:40" pos:end="253:5">{<block_content pos:start="243:9" pos:end="251:9">

        <expr_stmt pos:start="243:9" pos:end="243:42"><expr pos:start="243:9" pos:end="243:41"><name pos:start="243:9" pos:end="243:18"><name pos:start="243:9" pos:end="243:11">env</name><operator pos:start="243:12" pos:end="243:13">-&gt;</operator><name pos:start="243:14" pos:end="243:18">v_tpr</name></name> <operator pos:start="243:20" pos:end="243:20">=</operator> <name pos:start="243:22" pos:end="243:28">int_ctl</name> <operator pos:start="243:30" pos:end="243:30">&amp;</operator> <name pos:start="243:32" pos:end="243:41">V_TPR_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:39"><expr pos:start="245:9" pos:end="245:38"><name pos:start="245:9" pos:end="245:20"><name pos:start="245:9" pos:end="245:11">env</name><operator pos:start="245:12" pos:end="245:13">-&gt;</operator><name pos:start="245:14" pos:end="245:20">hflags2</name></name> <operator pos:start="245:22" pos:end="245:23">|=</operator> <name pos:start="245:25" pos:end="245:38">HF2_VINTR_MASK</name></expr>;</expr_stmt>

        <if_stmt pos:start="247:9" pos:end="251:9"><if pos:start="247:9" pos:end="251:9">if <condition pos:start="247:12" pos:end="247:34">(<expr pos:start="247:13" pos:end="247:33"><name pos:start="247:13" pos:end="247:23"><name pos:start="247:13" pos:end="247:15">env</name><operator pos:start="247:16" pos:end="247:17">-&gt;</operator><name pos:start="247:18" pos:end="247:23">eflags</name></name> <operator pos:start="247:25" pos:end="247:25">&amp;</operator> <name pos:start="247:27" pos:end="247:33">IF_MASK</name></expr>)</condition> <block pos:start="247:36" pos:end="251:9">{<block_content pos:start="249:13" pos:end="249:41">

            <expr_stmt pos:start="249:13" pos:end="249:41"><expr pos:start="249:13" pos:end="249:40"><name pos:start="249:13" pos:end="249:24"><name pos:start="249:13" pos:end="249:15">env</name><operator pos:start="249:16" pos:end="249:17">-&gt;</operator><name pos:start="249:18" pos:end="249:24">hflags2</name></name> <operator pos:start="249:26" pos:end="249:27">|=</operator> <name pos:start="249:29" pos:end="249:40">HF2_HIF_MASK</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="257:5" pos:end="261:77"><expr pos:start="257:5" pos:end="261:76"><call pos:start="257:5" pos:end="261:76"><name pos:start="257:5" pos:end="257:17">cpu_load_efer</name><argument_list pos:start="257:18" pos:end="261:76">(<argument pos:start="257:19" pos:end="257:21"><expr pos:start="257:19" pos:end="257:21"><name pos:start="257:19" pos:end="257:21">env</name></expr></argument>,

                  <argument pos:start="259:19" pos:end="261:75"><expr pos:start="259:19" pos:end="261:75"><call pos:start="259:19" pos:end="261:75"><name pos:start="259:19" pos:end="259:26">ldq_phys</name><argument_list pos:start="259:27" pos:end="261:75">(<argument pos:start="259:28" pos:end="259:33"><expr pos:start="259:28" pos:end="259:33"><name pos:start="259:28" pos:end="259:33"><name pos:start="259:28" pos:end="259:29">cs</name><operator pos:start="259:30" pos:end="259:31">-&gt;</operator><name pos:start="259:32" pos:end="259:33">as</name></name></expr></argument>,

                           <argument pos:start="261:28" pos:end="261:74"><expr pos:start="261:28" pos:end="261:74"><name pos:start="261:28" pos:end="261:39"><name pos:start="261:28" pos:end="261:30">env</name><operator pos:start="261:31" pos:end="261:32">-&gt;</operator><name pos:start="261:33" pos:end="261:39">vm_vmcb</name></name> <operator pos:start="261:41" pos:end="261:41">+</operator> <call pos:start="261:43" pos:end="261:74"><name pos:start="261:43" pos:end="261:50">offsetof</name><argument_list pos:start="261:51" pos:end="261:74">(<argument pos:start="261:52" pos:end="261:62"><expr pos:start="261:52" pos:end="261:62">struct <name pos:start="261:59" pos:end="261:62">vmcb</name></expr></argument>, <argument pos:start="261:65" pos:end="261:73"><expr pos:start="261:65" pos:end="261:73"><name pos:start="261:65" pos:end="261:73"><name pos:start="261:65" pos:end="261:68">save</name><operator pos:start="261:69" pos:end="261:69">.</operator><name pos:start="261:70" pos:end="261:73">efer</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:20"><expr pos:start="263:5" pos:end="263:19"><name pos:start="263:5" pos:end="263:15"><name pos:start="263:5" pos:end="263:7">env</name><operator pos:start="263:8" pos:end="263:9">-&gt;</operator><name pos:start="263:10" pos:end="263:15">eflags</name></name> <operator pos:start="263:17" pos:end="263:17">=</operator> <literal type="number" pos:start="263:19" pos:end="263:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="271:74"><expr pos:start="265:5" pos:end="271:73"><call pos:start="265:5" pos:end="271:73"><name pos:start="265:5" pos:end="265:19">cpu_load_eflags</name><argument_list pos:start="265:20" pos:end="271:73">(<argument pos:start="265:21" pos:end="265:23"><expr pos:start="265:21" pos:end="265:23"><name pos:start="265:21" pos:end="265:23">env</name></expr></argument>, <argument pos:start="265:26" pos:end="269:71"><expr pos:start="265:26" pos:end="269:71"><call pos:start="265:26" pos:end="269:71"><name pos:start="265:26" pos:end="265:33">ldq_phys</name><argument_list pos:start="265:34" pos:end="269:71">(<argument pos:start="265:35" pos:end="265:40"><expr pos:start="265:35" pos:end="265:40"><name pos:start="265:35" pos:end="265:40"><name pos:start="265:35" pos:end="265:36">cs</name><operator pos:start="265:37" pos:end="265:38">-&gt;</operator><name pos:start="265:39" pos:end="265:40">as</name></name></expr></argument>,

                                  <argument pos:start="267:35" pos:end="269:70"><expr pos:start="267:35" pos:end="269:70"><name pos:start="267:35" pos:end="267:46"><name pos:start="267:35" pos:end="267:37">env</name><operator pos:start="267:38" pos:end="267:39">-&gt;</operator><name pos:start="267:40" pos:end="267:46">vm_vmcb</name></name> <operator pos:start="267:48" pos:end="267:48">+</operator> <call pos:start="267:50" pos:end="269:70"><name pos:start="267:50" pos:end="267:57">offsetof</name><argument_list pos:start="267:58" pos:end="269:70">(<argument pos:start="267:59" pos:end="267:69"><expr pos:start="267:59" pos:end="267:69">struct <name pos:start="267:66" pos:end="267:69">vmcb</name></expr></argument>,

                                                          <argument pos:start="269:59" pos:end="269:69"><expr pos:start="269:59" pos:end="269:69"><name pos:start="269:59" pos:end="269:69"><name pos:start="269:59" pos:end="269:62">save</name><operator pos:start="269:63" pos:end="269:63">.</operator><name pos:start="269:64" pos:end="269:69">rflags</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="271:21" pos:end="271:72"><expr pos:start="271:21" pos:end="271:72"><operator pos:start="271:21" pos:end="271:21">~</operator><operator pos:start="271:22" pos:end="271:22">(</operator><name pos:start="271:23" pos:end="271:26">CC_O</name> <operator pos:start="271:28" pos:end="271:28">|</operator> <name pos:start="271:30" pos:end="271:33">CC_S</name> <operator pos:start="271:35" pos:end="271:35">|</operator> <name pos:start="271:37" pos:end="271:40">CC_Z</name> <operator pos:start="271:42" pos:end="271:42">|</operator> <name pos:start="271:44" pos:end="271:47">CC_A</name> <operator pos:start="271:49" pos:end="271:49">|</operator> <name pos:start="271:51" pos:end="271:54">CC_P</name> <operator pos:start="271:56" pos:end="271:56">|</operator> <name pos:start="271:58" pos:end="271:61">CC_C</name> <operator pos:start="271:63" pos:end="271:63">|</operator> <name pos:start="271:65" pos:end="271:71">DF_MASK</name><operator pos:start="271:72" pos:end="271:72">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="273:5" pos:end="273:25"><expr pos:start="273:5" pos:end="273:24"><name pos:start="273:5" pos:end="273:9">CC_OP</name> <operator pos:start="273:11" pos:end="273:11">=</operator> <name pos:start="273:13" pos:end="273:24">CC_OP_EFLAGS</name></expr>;</expr_stmt>



    <expr_stmt pos:start="277:5" pos:end="279:29"><expr pos:start="277:5" pos:end="279:28"><call pos:start="277:5" pos:end="279:28"><name pos:start="277:5" pos:end="277:22">svm_load_seg_cache</name><argument_list pos:start="277:23" pos:end="279:28">(<argument pos:start="277:24" pos:end="277:26"><expr pos:start="277:24" pos:end="277:26"><name pos:start="277:24" pos:end="277:26">env</name></expr></argument>, <argument pos:start="277:29" pos:end="277:73"><expr pos:start="277:29" pos:end="277:73"><name pos:start="277:29" pos:end="277:40"><name pos:start="277:29" pos:end="277:31">env</name><operator pos:start="277:32" pos:end="277:33">-&gt;</operator><name pos:start="277:34" pos:end="277:40">vm_vmcb</name></name> <operator pos:start="277:42" pos:end="277:42">+</operator> <call pos:start="277:44" pos:end="277:73"><name pos:start="277:44" pos:end="277:51">offsetof</name><argument_list pos:start="277:52" pos:end="277:73">(<argument pos:start="277:53" pos:end="277:63"><expr pos:start="277:53" pos:end="277:63">struct <name pos:start="277:60" pos:end="277:63">vmcb</name></expr></argument>, <argument pos:start="277:66" pos:end="277:72"><expr pos:start="277:66" pos:end="277:72"><name pos:start="277:66" pos:end="277:72"><name pos:start="277:66" pos:end="277:69">save</name><operator pos:start="277:70" pos:end="277:70">.</operator><name pos:start="277:71" pos:end="277:72">es</name></name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="279:24" pos:end="279:27"><expr pos:start="279:24" pos:end="279:27"><name pos:start="279:24" pos:end="279:27">R_ES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="281:5" pos:end="283:29"><expr pos:start="281:5" pos:end="283:28"><call pos:start="281:5" pos:end="283:28"><name pos:start="281:5" pos:end="281:22">svm_load_seg_cache</name><argument_list pos:start="281:23" pos:end="283:28">(<argument pos:start="281:24" pos:end="281:26"><expr pos:start="281:24" pos:end="281:26"><name pos:start="281:24" pos:end="281:26">env</name></expr></argument>, <argument pos:start="281:29" pos:end="281:73"><expr pos:start="281:29" pos:end="281:73"><name pos:start="281:29" pos:end="281:40"><name pos:start="281:29" pos:end="281:31">env</name><operator pos:start="281:32" pos:end="281:33">-&gt;</operator><name pos:start="281:34" pos:end="281:40">vm_vmcb</name></name> <operator pos:start="281:42" pos:end="281:42">+</operator> <call pos:start="281:44" pos:end="281:73"><name pos:start="281:44" pos:end="281:51">offsetof</name><argument_list pos:start="281:52" pos:end="281:73">(<argument pos:start="281:53" pos:end="281:63"><expr pos:start="281:53" pos:end="281:63">struct <name pos:start="281:60" pos:end="281:63">vmcb</name></expr></argument>, <argument pos:start="281:66" pos:end="281:72"><expr pos:start="281:66" pos:end="281:72"><name pos:start="281:66" pos:end="281:72"><name pos:start="281:66" pos:end="281:69">save</name><operator pos:start="281:70" pos:end="281:70">.</operator><name pos:start="281:71" pos:end="281:72">cs</name></name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="283:24" pos:end="283:27"><expr pos:start="283:24" pos:end="283:27"><name pos:start="283:24" pos:end="283:27">R_CS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="285:5" pos:end="287:29"><expr pos:start="285:5" pos:end="287:28"><call pos:start="285:5" pos:end="287:28"><name pos:start="285:5" pos:end="285:22">svm_load_seg_cache</name><argument_list pos:start="285:23" pos:end="287:28">(<argument pos:start="285:24" pos:end="285:26"><expr pos:start="285:24" pos:end="285:26"><name pos:start="285:24" pos:end="285:26">env</name></expr></argument>, <argument pos:start="285:29" pos:end="285:73"><expr pos:start="285:29" pos:end="285:73"><name pos:start="285:29" pos:end="285:40"><name pos:start="285:29" pos:end="285:31">env</name><operator pos:start="285:32" pos:end="285:33">-&gt;</operator><name pos:start="285:34" pos:end="285:40">vm_vmcb</name></name> <operator pos:start="285:42" pos:end="285:42">+</operator> <call pos:start="285:44" pos:end="285:73"><name pos:start="285:44" pos:end="285:51">offsetof</name><argument_list pos:start="285:52" pos:end="285:73">(<argument pos:start="285:53" pos:end="285:63"><expr pos:start="285:53" pos:end="285:63">struct <name pos:start="285:60" pos:end="285:63">vmcb</name></expr></argument>, <argument pos:start="285:66" pos:end="285:72"><expr pos:start="285:66" pos:end="285:72"><name pos:start="285:66" pos:end="285:72"><name pos:start="285:66" pos:end="285:69">save</name><operator pos:start="285:70" pos:end="285:70">.</operator><name pos:start="285:71" pos:end="285:72">ss</name></name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="287:24" pos:end="287:27"><expr pos:start="287:24" pos:end="287:27"><name pos:start="287:24" pos:end="287:27">R_SS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="289:5" pos:end="291:29"><expr pos:start="289:5" pos:end="291:28"><call pos:start="289:5" pos:end="291:28"><name pos:start="289:5" pos:end="289:22">svm_load_seg_cache</name><argument_list pos:start="289:23" pos:end="291:28">(<argument pos:start="289:24" pos:end="289:26"><expr pos:start="289:24" pos:end="289:26"><name pos:start="289:24" pos:end="289:26">env</name></expr></argument>, <argument pos:start="289:29" pos:end="289:73"><expr pos:start="289:29" pos:end="289:73"><name pos:start="289:29" pos:end="289:40"><name pos:start="289:29" pos:end="289:31">env</name><operator pos:start="289:32" pos:end="289:33">-&gt;</operator><name pos:start="289:34" pos:end="289:40">vm_vmcb</name></name> <operator pos:start="289:42" pos:end="289:42">+</operator> <call pos:start="289:44" pos:end="289:73"><name pos:start="289:44" pos:end="289:51">offsetof</name><argument_list pos:start="289:52" pos:end="289:73">(<argument pos:start="289:53" pos:end="289:63"><expr pos:start="289:53" pos:end="289:63">struct <name pos:start="289:60" pos:end="289:63">vmcb</name></expr></argument>, <argument pos:start="289:66" pos:end="289:72"><expr pos:start="289:66" pos:end="289:72"><name pos:start="289:66" pos:end="289:72"><name pos:start="289:66" pos:end="289:69">save</name><operator pos:start="289:70" pos:end="289:70">.</operator><name pos:start="289:71" pos:end="289:72">ds</name></name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="291:24" pos:end="291:27"><expr pos:start="291:24" pos:end="291:27"><name pos:start="291:24" pos:end="291:27">R_DS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="295:5" pos:end="297:72"><expr pos:start="295:5" pos:end="297:71"><name pos:start="295:5" pos:end="295:12"><name pos:start="295:5" pos:end="295:7">env</name><operator pos:start="295:8" pos:end="295:9">-&gt;</operator><name pos:start="295:10" pos:end="295:12">eip</name></name> <operator pos:start="295:14" pos:end="295:14">=</operator> <call pos:start="295:16" pos:end="297:71"><name pos:start="295:16" pos:end="295:23">ldq_phys</name><argument_list pos:start="295:24" pos:end="297:71">(<argument pos:start="295:25" pos:end="295:30"><expr pos:start="295:25" pos:end="295:30"><name pos:start="295:25" pos:end="295:30"><name pos:start="295:25" pos:end="295:26">cs</name><operator pos:start="295:27" pos:end="295:28">-&gt;</operator><name pos:start="295:29" pos:end="295:30">as</name></name></expr></argument>,

                        <argument pos:start="297:25" pos:end="297:70"><expr pos:start="297:25" pos:end="297:70"><name pos:start="297:25" pos:end="297:36"><name pos:start="297:25" pos:end="297:27">env</name><operator pos:start="297:28" pos:end="297:29">-&gt;</operator><name pos:start="297:30" pos:end="297:36">vm_vmcb</name></name> <operator pos:start="297:38" pos:end="297:38">+</operator> <call pos:start="297:40" pos:end="297:70"><name pos:start="297:40" pos:end="297:47">offsetof</name><argument_list pos:start="297:48" pos:end="297:70">(<argument pos:start="297:49" pos:end="297:59"><expr pos:start="297:49" pos:end="297:59">struct <name pos:start="297:56" pos:end="297:59">vmcb</name></expr></argument>, <argument pos:start="297:62" pos:end="297:69"><expr pos:start="297:62" pos:end="297:69"><name pos:start="297:62" pos:end="297:69"><name pos:start="297:62" pos:end="297:65">save</name><operator pos:start="297:66" pos:end="297:66">.</operator><name pos:start="297:67" pos:end="297:69">rip</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="301:5" pos:end="303:80"><expr pos:start="301:5" pos:end="303:79"><name pos:start="301:5" pos:end="301:20"><name pos:start="301:5" pos:end="301:7">env</name><operator pos:start="301:8" pos:end="301:9">-&gt;</operator><name pos:start="301:10" pos:end="301:13">regs</name><index pos:start="301:14" pos:end="301:20">[<expr pos:start="301:15" pos:end="301:19"><name pos:start="301:15" pos:end="301:19">R_ESP</name></expr>]</index></name> <operator pos:start="301:22" pos:end="301:22">=</operator> <call pos:start="301:24" pos:end="303:79"><name pos:start="301:24" pos:end="301:31">ldq_phys</name><argument_list pos:start="301:32" pos:end="303:79">(<argument pos:start="301:33" pos:end="301:38"><expr pos:start="301:33" pos:end="301:38"><name pos:start="301:33" pos:end="301:38"><name pos:start="301:33" pos:end="301:34">cs</name><operator pos:start="301:35" pos:end="301:36">-&gt;</operator><name pos:start="301:37" pos:end="301:38">as</name></name></expr></argument>,

                                <argument pos:start="303:33" pos:end="303:78"><expr pos:start="303:33" pos:end="303:78"><name pos:start="303:33" pos:end="303:44"><name pos:start="303:33" pos:end="303:35">env</name><operator pos:start="303:36" pos:end="303:37">-&gt;</operator><name pos:start="303:38" pos:end="303:44">vm_vmcb</name></name> <operator pos:start="303:46" pos:end="303:46">+</operator> <call pos:start="303:48" pos:end="303:78"><name pos:start="303:48" pos:end="303:55">offsetof</name><argument_list pos:start="303:56" pos:end="303:78">(<argument pos:start="303:57" pos:end="303:67"><expr pos:start="303:57" pos:end="303:67">struct <name pos:start="303:64" pos:end="303:67">vmcb</name></expr></argument>, <argument pos:start="303:70" pos:end="303:77"><expr pos:start="303:70" pos:end="303:77"><name pos:start="303:70" pos:end="303:77"><name pos:start="303:70" pos:end="303:73">save</name><operator pos:start="303:74" pos:end="303:74">.</operator><name pos:start="303:75" pos:end="303:77">rsp</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="307:80"><expr pos:start="305:5" pos:end="307:79"><name pos:start="305:5" pos:end="305:20"><name pos:start="305:5" pos:end="305:7">env</name><operator pos:start="305:8" pos:end="305:9">-&gt;</operator><name pos:start="305:10" pos:end="305:13">regs</name><index pos:start="305:14" pos:end="305:20">[<expr pos:start="305:15" pos:end="305:19"><name pos:start="305:15" pos:end="305:19">R_EAX</name></expr>]</index></name> <operator pos:start="305:22" pos:end="305:22">=</operator> <call pos:start="305:24" pos:end="307:79"><name pos:start="305:24" pos:end="305:31">ldq_phys</name><argument_list pos:start="305:32" pos:end="307:79">(<argument pos:start="305:33" pos:end="305:38"><expr pos:start="305:33" pos:end="305:38"><name pos:start="305:33" pos:end="305:38"><name pos:start="305:33" pos:end="305:34">cs</name><operator pos:start="305:35" pos:end="305:36">-&gt;</operator><name pos:start="305:37" pos:end="305:38">as</name></name></expr></argument>,

                                <argument pos:start="307:33" pos:end="307:78"><expr pos:start="307:33" pos:end="307:78"><name pos:start="307:33" pos:end="307:44"><name pos:start="307:33" pos:end="307:35">env</name><operator pos:start="307:36" pos:end="307:37">-&gt;</operator><name pos:start="307:38" pos:end="307:44">vm_vmcb</name></name> <operator pos:start="307:46" pos:end="307:46">+</operator> <call pos:start="307:48" pos:end="307:78"><name pos:start="307:48" pos:end="307:55">offsetof</name><argument_list pos:start="307:56" pos:end="307:78">(<argument pos:start="307:57" pos:end="307:67"><expr pos:start="307:57" pos:end="307:67">struct <name pos:start="307:64" pos:end="307:67">vmcb</name></expr></argument>, <argument pos:start="307:70" pos:end="307:77"><expr pos:start="307:70" pos:end="307:77"><name pos:start="307:70" pos:end="307:77"><name pos:start="307:70" pos:end="307:73">save</name><operator pos:start="307:74" pos:end="307:74">.</operator><name pos:start="307:75" pos:end="307:77">rax</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="309:5" pos:end="311:74"><expr pos:start="309:5" pos:end="311:73"><name pos:start="309:5" pos:end="309:14"><name pos:start="309:5" pos:end="309:7">env</name><operator pos:start="309:8" pos:end="309:9">-&gt;</operator><name pos:start="309:10" pos:end="309:11">dr</name><index pos:start="309:12" pos:end="309:14">[<expr pos:start="309:13" pos:end="309:13"><literal type="number" pos:start="309:13" pos:end="309:13">7</literal></expr>]</index></name> <operator pos:start="309:16" pos:end="309:16">=</operator> <call pos:start="309:18" pos:end="311:73"><name pos:start="309:18" pos:end="309:25">ldq_phys</name><argument_list pos:start="309:26" pos:end="311:73">(<argument pos:start="309:27" pos:end="309:32"><expr pos:start="309:27" pos:end="309:32"><name pos:start="309:27" pos:end="309:32"><name pos:start="309:27" pos:end="309:28">cs</name><operator pos:start="309:29" pos:end="309:30">-&gt;</operator><name pos:start="309:31" pos:end="309:32">as</name></name></expr></argument>,

                          <argument pos:start="311:27" pos:end="311:72"><expr pos:start="311:27" pos:end="311:72"><name pos:start="311:27" pos:end="311:38"><name pos:start="311:27" pos:end="311:29">env</name><operator pos:start="311:30" pos:end="311:31">-&gt;</operator><name pos:start="311:32" pos:end="311:38">vm_vmcb</name></name> <operator pos:start="311:40" pos:end="311:40">+</operator> <call pos:start="311:42" pos:end="311:72"><name pos:start="311:42" pos:end="311:49">offsetof</name><argument_list pos:start="311:50" pos:end="311:72">(<argument pos:start="311:51" pos:end="311:61"><expr pos:start="311:51" pos:end="311:61">struct <name pos:start="311:58" pos:end="311:61">vmcb</name></expr></argument>, <argument pos:start="311:64" pos:end="311:71"><expr pos:start="311:64" pos:end="311:71"><name pos:start="311:64" pos:end="311:71"><name pos:start="311:64" pos:end="311:67">save</name><operator pos:start="311:68" pos:end="311:68">.</operator><name pos:start="311:69" pos:end="311:71">dr7</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="313:5" pos:end="315:74"><expr pos:start="313:5" pos:end="315:73"><name pos:start="313:5" pos:end="313:14"><name pos:start="313:5" pos:end="313:7">env</name><operator pos:start="313:8" pos:end="313:9">-&gt;</operator><name pos:start="313:10" pos:end="313:11">dr</name><index pos:start="313:12" pos:end="313:14">[<expr pos:start="313:13" pos:end="313:13"><literal type="number" pos:start="313:13" pos:end="313:13">6</literal></expr>]</index></name> <operator pos:start="313:16" pos:end="313:16">=</operator> <call pos:start="313:18" pos:end="315:73"><name pos:start="313:18" pos:end="313:25">ldq_phys</name><argument_list pos:start="313:26" pos:end="315:73">(<argument pos:start="313:27" pos:end="313:32"><expr pos:start="313:27" pos:end="313:32"><name pos:start="313:27" pos:end="313:32"><name pos:start="313:27" pos:end="313:28">cs</name><operator pos:start="313:29" pos:end="313:30">-&gt;</operator><name pos:start="313:31" pos:end="313:32">as</name></name></expr></argument>,

                          <argument pos:start="315:27" pos:end="315:72"><expr pos:start="315:27" pos:end="315:72"><name pos:start="315:27" pos:end="315:38"><name pos:start="315:27" pos:end="315:29">env</name><operator pos:start="315:30" pos:end="315:31">-&gt;</operator><name pos:start="315:32" pos:end="315:38">vm_vmcb</name></name> <operator pos:start="315:40" pos:end="315:40">+</operator> <call pos:start="315:42" pos:end="315:72"><name pos:start="315:42" pos:end="315:49">offsetof</name><argument_list pos:start="315:50" pos:end="315:72">(<argument pos:start="315:51" pos:end="315:61"><expr pos:start="315:51" pos:end="315:61">struct <name pos:start="315:58" pos:end="315:61">vmcb</name></expr></argument>, <argument pos:start="315:64" pos:end="315:71"><expr pos:start="315:64" pos:end="315:71"><name pos:start="315:64" pos:end="315:71"><name pos:start="315:64" pos:end="315:67">save</name><operator pos:start="315:68" pos:end="315:68">.</operator><name pos:start="315:69" pos:end="315:71">dr6</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="317:5" pos:end="321:71"><expr pos:start="317:5" pos:end="321:70"><call pos:start="317:5" pos:end="321:70"><name pos:start="317:5" pos:end="317:19">cpu_x86_set_cpl</name><argument_list pos:start="317:20" pos:end="321:70">(<argument pos:start="317:21" pos:end="317:23"><expr pos:start="317:21" pos:end="317:23"><name pos:start="317:21" pos:end="317:23">env</name></expr></argument>, <argument pos:start="317:26" pos:end="321:69"><expr pos:start="317:26" pos:end="321:69"><call pos:start="317:26" pos:end="321:69"><name pos:start="317:26" pos:end="317:34">ldub_phys</name><argument_list pos:start="317:35" pos:end="321:69">(<argument pos:start="317:36" pos:end="317:41"><expr pos:start="317:36" pos:end="317:41"><name pos:start="317:36" pos:end="317:41"><name pos:start="317:36" pos:end="317:37">cs</name><operator pos:start="317:38" pos:end="317:39">-&gt;</operator><name pos:start="317:40" pos:end="317:41">as</name></name></expr></argument>,

                                   <argument pos:start="319:36" pos:end="321:68"><expr pos:start="319:36" pos:end="321:68"><name pos:start="319:36" pos:end="319:47"><name pos:start="319:36" pos:end="319:38">env</name><operator pos:start="319:39" pos:end="319:40">-&gt;</operator><name pos:start="319:41" pos:end="319:47">vm_vmcb</name></name> <operator pos:start="319:49" pos:end="319:49">+</operator> <call pos:start="319:51" pos:end="321:68"><name pos:start="319:51" pos:end="319:58">offsetof</name><argument_list pos:start="319:59" pos:end="321:68">(<argument pos:start="319:60" pos:end="319:70"><expr pos:start="319:60" pos:end="319:70">struct <name pos:start="319:67" pos:end="319:70">vmcb</name></expr></argument>,

                                                           <argument pos:start="321:60" pos:end="321:67"><expr pos:start="321:60" pos:end="321:67"><name pos:start="321:60" pos:end="321:67"><name pos:start="321:60" pos:end="321:63">save</name><operator pos:start="321:64" pos:end="321:64">.</operator><name pos:start="321:65" pos:end="321:67">cpl</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="325:5" pos:end="325:47">/* FIXME: guest state consistency checks */</comment>



    <switch pos:start="329:5" pos:end="345:5">switch <condition pos:start="329:12" pos:end="331:77">(<expr pos:start="329:13" pos:end="331:76"><call pos:start="329:13" pos:end="331:76"><name pos:start="329:13" pos:end="329:21">ldub_phys</name><argument_list pos:start="329:22" pos:end="331:76">(<argument pos:start="329:23" pos:end="329:28"><expr pos:start="329:23" pos:end="329:28"><name pos:start="329:23" pos:end="329:28"><name pos:start="329:23" pos:end="329:24">cs</name><operator pos:start="329:25" pos:end="329:26">-&gt;</operator><name pos:start="329:27" pos:end="329:28">as</name></name></expr></argument>,

                      <argument pos:start="331:23" pos:end="331:75"><expr pos:start="331:23" pos:end="331:75"><name pos:start="331:23" pos:end="331:34"><name pos:start="331:23" pos:end="331:25">env</name><operator pos:start="331:26" pos:end="331:27">-&gt;</operator><name pos:start="331:28" pos:end="331:34">vm_vmcb</name></name> <operator pos:start="331:36" pos:end="331:36">+</operator> <call pos:start="331:38" pos:end="331:75"><name pos:start="331:38" pos:end="331:45">offsetof</name><argument_list pos:start="331:46" pos:end="331:75">(<argument pos:start="331:47" pos:end="331:57"><expr pos:start="331:47" pos:end="331:57">struct <name pos:start="331:54" pos:end="331:57">vmcb</name></expr></argument>, <argument pos:start="331:60" pos:end="331:74"><expr pos:start="331:60" pos:end="331:74"><name pos:start="331:60" pos:end="331:74"><name pos:start="331:60" pos:end="331:66">control</name><operator pos:start="331:67" pos:end="331:67">.</operator><name pos:start="331:68" pos:end="331:74">tlb_ctl</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="331:79" pos:end="345:5">{<block_content pos:start="333:5" pos:end="343:14">

    <case pos:start="333:5" pos:end="333:32">case <expr pos:start="333:10" pos:end="333:31"><name pos:start="333:10" pos:end="333:31">TLB_CONTROL_DO_NOTHING</name></expr>:</case>

        <break pos:start="335:9" pos:end="335:14">break;</break>

    <case pos:start="337:5" pos:end="337:36">case <expr pos:start="337:10" pos:end="337:35"><name pos:start="337:10" pos:end="337:35">TLB_CONTROL_FLUSH_ALL_ASID</name></expr>:</case>

        <comment type="block" pos:start="339:9" pos:end="339:69">/* FIXME: this is not 100% correct but should work for now */</comment>

        <expr_stmt pos:start="341:9" pos:end="341:25"><expr pos:start="341:9" pos:end="341:24"><call pos:start="341:9" pos:end="341:24"><name pos:start="341:9" pos:end="341:17">tlb_flush</name><argument_list pos:start="341:18" pos:end="341:24">(<argument pos:start="341:19" pos:end="341:20"><expr pos:start="341:19" pos:end="341:20"><name pos:start="341:19" pos:end="341:20">cs</name></expr></argument>, <argument pos:start="341:23" pos:end="341:23"><expr pos:start="341:23" pos:end="341:23"><literal type="number" pos:start="341:23" pos:end="341:23">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="343:9" pos:end="343:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="349:5" pos:end="349:33"><expr pos:start="349:5" pos:end="349:32"><name pos:start="349:5" pos:end="349:16"><name pos:start="349:5" pos:end="349:7">env</name><operator pos:start="349:8" pos:end="349:9">-&gt;</operator><name pos:start="349:10" pos:end="349:16">hflags2</name></name> <operator pos:start="349:18" pos:end="349:19">|=</operator> <name pos:start="349:21" pos:end="349:32">HF2_GIF_MASK</name></expr>;</expr_stmt>



    <if_stmt pos:start="353:5" pos:end="361:5"><if pos:start="353:5" pos:end="361:5">if <condition pos:start="353:8" pos:end="353:29">(<expr pos:start="353:9" pos:end="353:28"><name pos:start="353:9" pos:end="353:15">int_ctl</name> <operator pos:start="353:17" pos:end="353:17">&amp;</operator> <name pos:start="353:19" pos:end="353:28">V_IRQ_MASK</name></expr>)</condition> <block pos:start="353:31" pos:end="361:5">{<block_content pos:start="355:9" pos:end="359:52">

        <decl_stmt pos:start="355:9" pos:end="355:49"><decl pos:start="355:9" pos:end="355:48"><type pos:start="355:9" pos:end="355:18"><name pos:start="355:9" pos:end="355:16">CPUState</name> <modifier pos:start="355:18" pos:end="355:18">*</modifier></type><name pos:start="355:19" pos:end="355:20">cs</name> <init pos:start="355:22" pos:end="355:48">= <expr pos:start="355:24" pos:end="355:48"><call pos:start="355:24" pos:end="355:48"><name pos:start="355:24" pos:end="355:26">CPU</name><argument_list pos:start="355:27" pos:end="355:48">(<argument pos:start="355:28" pos:end="355:47"><expr pos:start="355:28" pos:end="355:47"><call pos:start="355:28" pos:end="355:47"><name pos:start="355:28" pos:end="355:42">x86_env_get_cpu</name><argument_list pos:start="355:43" pos:end="355:47">(<argument pos:start="355:44" pos:end="355:46"><expr pos:start="355:44" pos:end="355:46"><name pos:start="355:44" pos:end="355:46">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="359:9" pos:end="359:52"><expr pos:start="359:9" pos:end="359:51"><name pos:start="359:9" pos:end="359:29"><name pos:start="359:9" pos:end="359:10">cs</name><operator pos:start="359:11" pos:end="359:12">-&gt;</operator><name pos:start="359:13" pos:end="359:29">interrupt_request</name></name> <operator pos:start="359:31" pos:end="359:32">|=</operator> <name pos:start="359:34" pos:end="359:51">CPU_INTERRUPT_VIRQ</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="365:5" pos:end="365:42">/* maybe we need to inject an event */</comment>

    <expr_stmt pos:start="367:5" pos:end="369:69"><expr pos:start="367:5" pos:end="369:68"><name pos:start="367:5" pos:end="367:13">event_inj</name> <operator pos:start="367:15" pos:end="367:15">=</operator> <call pos:start="367:17" pos:end="369:68"><name pos:start="367:17" pos:end="367:24">ldl_phys</name><argument_list pos:start="367:25" pos:end="369:68">(<argument pos:start="367:26" pos:end="367:31"><expr pos:start="367:26" pos:end="367:31"><name pos:start="367:26" pos:end="367:31"><name pos:start="367:26" pos:end="367:27">cs</name><operator pos:start="367:28" pos:end="367:29">-&gt;</operator><name pos:start="367:30" pos:end="367:31">as</name></name></expr></argument>, <argument pos:start="367:34" pos:end="369:67"><expr pos:start="367:34" pos:end="369:67"><name pos:start="367:34" pos:end="367:45"><name pos:start="367:34" pos:end="367:36">env</name><operator pos:start="367:37" pos:end="367:38">-&gt;</operator><name pos:start="367:39" pos:end="367:45">vm_vmcb</name></name> <operator pos:start="367:47" pos:end="367:47">+</operator> <call pos:start="367:49" pos:end="369:67"><name pos:start="367:49" pos:end="367:56">offsetof</name><argument_list pos:start="367:57" pos:end="369:67">(<argument pos:start="367:58" pos:end="367:68"><expr pos:start="367:58" pos:end="367:68">struct <name pos:start="367:65" pos:end="367:68">vmcb</name></expr></argument>,

                                                 <argument pos:start="369:50" pos:end="369:66"><expr pos:start="369:50" pos:end="369:66"><name pos:start="369:50" pos:end="369:66"><name pos:start="369:50" pos:end="369:56">control</name><operator pos:start="369:57" pos:end="369:57">.</operator><name pos:start="369:58" pos:end="369:66">event_inj</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="371:5" pos:end="463:5"><if pos:start="371:5" pos:end="463:5">if <condition pos:start="371:8" pos:end="371:37">(<expr pos:start="371:9" pos:end="371:36"><name pos:start="371:9" pos:end="371:17">event_inj</name> <operator pos:start="371:19" pos:end="371:19">&amp;</operator> <name pos:start="371:21" pos:end="371:36">SVM_EVTINJ_VALID</name></expr>)</condition> <block pos:start="371:39" pos:end="463:5">{<block_content pos:start="373:9" pos:end="461:39">

        <decl_stmt pos:start="373:9" pos:end="373:57"><decl pos:start="373:9" pos:end="373:56"><type pos:start="373:9" pos:end="373:15"><name pos:start="373:9" pos:end="373:15">uint8_t</name></type> <name pos:start="373:17" pos:end="373:22">vector</name> <init pos:start="373:24" pos:end="373:56">= <expr pos:start="373:26" pos:end="373:56"><name pos:start="373:26" pos:end="373:34">event_inj</name> <operator pos:start="373:36" pos:end="373:36">&amp;</operator> <name pos:start="373:38" pos:end="373:56">SVM_EVTINJ_VEC_MASK</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="375:9" pos:end="375:62"><decl pos:start="375:9" pos:end="375:61"><type pos:start="375:9" pos:end="375:16"><name pos:start="375:9" pos:end="375:16">uint16_t</name></type> <name pos:start="375:18" pos:end="375:26">valid_err</name> <init pos:start="375:28" pos:end="375:61">= <expr pos:start="375:30" pos:end="375:61"><name pos:start="375:30" pos:end="375:38">event_inj</name> <operator pos:start="375:40" pos:end="375:40">&amp;</operator> <name pos:start="375:42" pos:end="375:61">SVM_EVTINJ_VALID_ERR</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="377:9" pos:end="381:75"><decl pos:start="377:9" pos:end="381:74"><type pos:start="377:9" pos:end="377:16"><name pos:start="377:9" pos:end="377:16">uint32_t</name></type> <name pos:start="377:18" pos:end="377:30">event_inj_err</name> <init pos:start="377:32" pos:end="381:74">= <expr pos:start="377:34" pos:end="381:74"><call pos:start="377:34" pos:end="381:74"><name pos:start="377:34" pos:end="377:41">ldl_phys</name><argument_list pos:start="377:42" pos:end="381:74">(<argument pos:start="377:43" pos:end="377:48"><expr pos:start="377:43" pos:end="377:48"><name pos:start="377:43" pos:end="377:48"><name pos:start="377:43" pos:end="377:44">cs</name><operator pos:start="377:45" pos:end="377:46">-&gt;</operator><name pos:start="377:47" pos:end="377:48">as</name></name></expr></argument>, <argument pos:start="377:51" pos:end="381:73"><expr pos:start="377:51" pos:end="381:73"><name pos:start="377:51" pos:end="377:62"><name pos:start="377:51" pos:end="377:53">env</name><operator pos:start="377:54" pos:end="377:55">-&gt;</operator><name pos:start="377:56" pos:end="377:62">vm_vmcb</name></name> <operator pos:start="377:64" pos:end="377:64">+</operator>

                                          <call pos:start="379:43" pos:end="381:73"><name pos:start="379:43" pos:end="379:50">offsetof</name><argument_list pos:start="379:51" pos:end="381:73">(<argument pos:start="379:52" pos:end="379:62"><expr pos:start="379:52" pos:end="379:62">struct <name pos:start="379:59" pos:end="379:62">vmcb</name></expr></argument>,

                                                   <argument pos:start="381:52" pos:end="381:72"><expr pos:start="381:52" pos:end="381:72"><name pos:start="381:52" pos:end="381:72"><name pos:start="381:52" pos:end="381:58">control</name><operator pos:start="381:59" pos:end="381:59">.</operator><name pos:start="381:60" pos:end="381:72">event_inj_err</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="385:9" pos:end="385:73"><expr pos:start="385:9" pos:end="385:72"><call pos:start="385:9" pos:end="385:72"><name pos:start="385:9" pos:end="385:21">qemu_log_mask</name><argument_list pos:start="385:22" pos:end="385:72">(<argument pos:start="385:23" pos:end="385:39"><expr pos:start="385:23" pos:end="385:39"><name pos:start="385:23" pos:end="385:39">CPU_LOG_TB_IN_ASM</name></expr></argument>, <argument pos:start="385:42" pos:end="385:60"><expr pos:start="385:42" pos:end="385:60"><literal type="string" pos:start="385:42" pos:end="385:60">"Injecting(%#hx): "</literal></expr></argument>, <argument pos:start="385:63" pos:end="385:71"><expr pos:start="385:63" pos:end="385:71"><name pos:start="385:63" pos:end="385:71">valid_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="387:9" pos:end="387:48">/* FIXME: need to implement valid_err */</comment>

        <switch pos:start="389:9" pos:end="457:9">switch <condition pos:start="389:16" pos:end="389:49">(<expr pos:start="389:17" pos:end="389:48"><name pos:start="389:17" pos:end="389:25">event_inj</name> <operator pos:start="389:27" pos:end="389:27">&amp;</operator> <name pos:start="389:29" pos:end="389:48">SVM_EVTINJ_TYPE_MASK</name></expr>)</condition> <block pos:start="389:51" pos:end="457:9">{<block_content pos:start="391:9" pos:end="455:18">

        <case pos:start="391:9" pos:end="391:34">case <expr pos:start="391:14" pos:end="391:33"><name pos:start="391:14" pos:end="391:33">SVM_EVTINJ_TYPE_INTR</name></expr>:</case>

            <expr_stmt pos:start="393:13" pos:end="393:41"><expr pos:start="393:13" pos:end="393:40"><name pos:start="393:13" pos:end="393:31"><name pos:start="393:13" pos:end="393:14">cs</name><operator pos:start="393:15" pos:end="393:16">-&gt;</operator><name pos:start="393:17" pos:end="393:31">exception_index</name></name> <operator pos:start="393:33" pos:end="393:33">=</operator> <name pos:start="393:35" pos:end="393:40">vector</name></expr>;</expr_stmt>

            <expr_stmt pos:start="395:13" pos:end="395:44"><expr pos:start="395:13" pos:end="395:43"><name pos:start="395:13" pos:end="395:27"><name pos:start="395:13" pos:end="395:15">env</name><operator pos:start="395:16" pos:end="395:17">-&gt;</operator><name pos:start="395:18" pos:end="395:27">error_code</name></name> <operator pos:start="395:29" pos:end="395:29">=</operator> <name pos:start="395:31" pos:end="395:43">event_inj_err</name></expr>;</expr_stmt>

            <expr_stmt pos:start="397:13" pos:end="397:38"><expr pos:start="397:13" pos:end="397:37"><name pos:start="397:13" pos:end="397:33"><name pos:start="397:13" pos:end="397:15">env</name><operator pos:start="397:16" pos:end="397:17">-&gt;</operator><name pos:start="397:18" pos:end="397:33">exception_is_int</name></name> <operator pos:start="397:35" pos:end="397:35">=</operator> <literal type="number" pos:start="397:37" pos:end="397:37">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="399:13" pos:end="399:41"><expr pos:start="399:13" pos:end="399:40"><name pos:start="399:13" pos:end="399:35"><name pos:start="399:13" pos:end="399:15">env</name><operator pos:start="399:16" pos:end="399:17">-&gt;</operator><name pos:start="399:18" pos:end="399:35">exception_next_eip</name></name> <operator pos:start="399:37" pos:end="399:37">=</operator> <operator pos:start="399:39" pos:end="399:39">-</operator><literal type="number" pos:start="399:40" pos:end="399:40">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="401:13" pos:end="401:53"><expr pos:start="401:13" pos:end="401:52"><call pos:start="401:13" pos:end="401:52"><name pos:start="401:13" pos:end="401:25">qemu_log_mask</name><argument_list pos:start="401:26" pos:end="401:52">(<argument pos:start="401:27" pos:end="401:43"><expr pos:start="401:27" pos:end="401:43"><name pos:start="401:27" pos:end="401:43">CPU_LOG_TB_IN_ASM</name></expr></argument>, <argument pos:start="401:46" pos:end="401:51"><expr pos:start="401:46" pos:end="401:51"><literal type="string" pos:start="401:46" pos:end="401:51">"INTR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="403:13" pos:end="403:44">/* XXX: is it always correct? */</comment>

            <expr_stmt pos:start="405:13" pos:end="405:53"><expr pos:start="405:13" pos:end="405:52"><call pos:start="405:13" pos:end="405:52"><name pos:start="405:13" pos:end="405:36">do_interrupt_x86_hardirq</name><argument_list pos:start="405:37" pos:end="405:52">(<argument pos:start="405:38" pos:end="405:40"><expr pos:start="405:38" pos:end="405:40"><name pos:start="405:38" pos:end="405:40">env</name></expr></argument>, <argument pos:start="405:43" pos:end="405:48"><expr pos:start="405:43" pos:end="405:48"><name pos:start="405:43" pos:end="405:48">vector</name></expr></argument>, <argument pos:start="405:51" pos:end="405:51"><expr pos:start="405:51" pos:end="405:51"><literal type="number" pos:start="405:51" pos:end="405:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="407:13" pos:end="407:18">break;</break>

        <case pos:start="409:9" pos:end="409:33">case <expr pos:start="409:14" pos:end="409:32"><name pos:start="409:14" pos:end="409:32">SVM_EVTINJ_TYPE_NMI</name></expr>:</case>

            <expr_stmt pos:start="411:13" pos:end="411:45"><expr pos:start="411:13" pos:end="411:44"><name pos:start="411:13" pos:end="411:31"><name pos:start="411:13" pos:end="411:14">cs</name><operator pos:start="411:15" pos:end="411:16">-&gt;</operator><name pos:start="411:17" pos:end="411:31">exception_index</name></name> <operator pos:start="411:33" pos:end="411:33">=</operator> <name pos:start="411:35" pos:end="411:44">EXCP02_NMI</name></expr>;</expr_stmt>

            <expr_stmt pos:start="413:13" pos:end="413:44"><expr pos:start="413:13" pos:end="413:43"><name pos:start="413:13" pos:end="413:27"><name pos:start="413:13" pos:end="413:15">env</name><operator pos:start="413:16" pos:end="413:17">-&gt;</operator><name pos:start="413:18" pos:end="413:27">error_code</name></name> <operator pos:start="413:29" pos:end="413:29">=</operator> <name pos:start="413:31" pos:end="413:43">event_inj_err</name></expr>;</expr_stmt>

            <expr_stmt pos:start="415:13" pos:end="415:38"><expr pos:start="415:13" pos:end="415:37"><name pos:start="415:13" pos:end="415:33"><name pos:start="415:13" pos:end="415:15">env</name><operator pos:start="415:16" pos:end="415:17">-&gt;</operator><name pos:start="415:18" pos:end="415:33">exception_is_int</name></name> <operator pos:start="415:35" pos:end="415:35">=</operator> <literal type="number" pos:start="415:37" pos:end="415:37">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="417:13" pos:end="417:47"><expr pos:start="417:13" pos:end="417:46"><name pos:start="417:13" pos:end="417:35"><name pos:start="417:13" pos:end="417:15">env</name><operator pos:start="417:16" pos:end="417:17">-&gt;</operator><name pos:start="417:18" pos:end="417:35">exception_next_eip</name></name> <operator pos:start="417:37" pos:end="417:37">=</operator> <name pos:start="417:39" pos:end="417:46"><name pos:start="417:39" pos:end="417:41">env</name><operator pos:start="417:42" pos:end="417:43">-&gt;</operator><name pos:start="417:44" pos:end="417:46">eip</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="419:13" pos:end="419:52"><expr pos:start="419:13" pos:end="419:51"><call pos:start="419:13" pos:end="419:51"><name pos:start="419:13" pos:end="419:25">qemu_log_mask</name><argument_list pos:start="419:26" pos:end="419:51">(<argument pos:start="419:27" pos:end="419:43"><expr pos:start="419:27" pos:end="419:43"><name pos:start="419:27" pos:end="419:43">CPU_LOG_TB_IN_ASM</name></expr></argument>, <argument pos:start="419:46" pos:end="419:50"><expr pos:start="419:46" pos:end="419:50"><literal type="string" pos:start="419:46" pos:end="419:50">"NMI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="421:13" pos:end="421:30"><expr pos:start="421:13" pos:end="421:29"><call pos:start="421:13" pos:end="421:29"><name pos:start="421:13" pos:end="421:25">cpu_loop_exit</name><argument_list pos:start="421:26" pos:end="421:29">(<argument pos:start="421:27" pos:end="421:28"><expr pos:start="421:27" pos:end="421:28"><name pos:start="421:27" pos:end="421:28">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="423:13" pos:end="423:18">break;</break>

        <case pos:start="425:9" pos:end="425:35">case <expr pos:start="425:14" pos:end="425:34"><name pos:start="425:14" pos:end="425:34">SVM_EVTINJ_TYPE_EXEPT</name></expr>:</case>

            <expr_stmt pos:start="427:13" pos:end="427:41"><expr pos:start="427:13" pos:end="427:40"><name pos:start="427:13" pos:end="427:31"><name pos:start="427:13" pos:end="427:14">cs</name><operator pos:start="427:15" pos:end="427:16">-&gt;</operator><name pos:start="427:17" pos:end="427:31">exception_index</name></name> <operator pos:start="427:33" pos:end="427:33">=</operator> <name pos:start="427:35" pos:end="427:40">vector</name></expr>;</expr_stmt>

            <expr_stmt pos:start="429:13" pos:end="429:44"><expr pos:start="429:13" pos:end="429:43"><name pos:start="429:13" pos:end="429:27"><name pos:start="429:13" pos:end="429:15">env</name><operator pos:start="429:16" pos:end="429:17">-&gt;</operator><name pos:start="429:18" pos:end="429:27">error_code</name></name> <operator pos:start="429:29" pos:end="429:29">=</operator> <name pos:start="429:31" pos:end="429:43">event_inj_err</name></expr>;</expr_stmt>

            <expr_stmt pos:start="431:13" pos:end="431:38"><expr pos:start="431:13" pos:end="431:37"><name pos:start="431:13" pos:end="431:33"><name pos:start="431:13" pos:end="431:15">env</name><operator pos:start="431:16" pos:end="431:17">-&gt;</operator><name pos:start="431:18" pos:end="431:33">exception_is_int</name></name> <operator pos:start="431:35" pos:end="431:35">=</operator> <literal type="number" pos:start="431:37" pos:end="431:37">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="433:13" pos:end="433:41"><expr pos:start="433:13" pos:end="433:40"><name pos:start="433:13" pos:end="433:35"><name pos:start="433:13" pos:end="433:15">env</name><operator pos:start="433:16" pos:end="433:17">-&gt;</operator><name pos:start="433:18" pos:end="433:35">exception_next_eip</name></name> <operator pos:start="433:37" pos:end="433:37">=</operator> <operator pos:start="433:39" pos:end="433:39">-</operator><literal type="number" pos:start="433:40" pos:end="433:40">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="435:13" pos:end="435:54"><expr pos:start="435:13" pos:end="435:53"><call pos:start="435:13" pos:end="435:53"><name pos:start="435:13" pos:end="435:25">qemu_log_mask</name><argument_list pos:start="435:26" pos:end="435:53">(<argument pos:start="435:27" pos:end="435:43"><expr pos:start="435:27" pos:end="435:43"><name pos:start="435:27" pos:end="435:43">CPU_LOG_TB_IN_ASM</name></expr></argument>, <argument pos:start="435:46" pos:end="435:52"><expr pos:start="435:46" pos:end="435:52"><literal type="string" pos:start="435:46" pos:end="435:52">"EXEPT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="437:13" pos:end="437:30"><expr pos:start="437:13" pos:end="437:29"><call pos:start="437:13" pos:end="437:29"><name pos:start="437:13" pos:end="437:25">cpu_loop_exit</name><argument_list pos:start="437:26" pos:end="437:29">(<argument pos:start="437:27" pos:end="437:28"><expr pos:start="437:27" pos:end="437:28"><name pos:start="437:27" pos:end="437:28">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="439:13" pos:end="439:18">break;</break>

        <case pos:start="441:9" pos:end="441:34">case <expr pos:start="441:14" pos:end="441:33"><name pos:start="441:14" pos:end="441:33">SVM_EVTINJ_TYPE_SOFT</name></expr>:</case>

            <expr_stmt pos:start="443:13" pos:end="443:41"><expr pos:start="443:13" pos:end="443:40"><name pos:start="443:13" pos:end="443:31"><name pos:start="443:13" pos:end="443:14">cs</name><operator pos:start="443:15" pos:end="443:16">-&gt;</operator><name pos:start="443:17" pos:end="443:31">exception_index</name></name> <operator pos:start="443:33" pos:end="443:33">=</operator> <name pos:start="443:35" pos:end="443:40">vector</name></expr>;</expr_stmt>

            <expr_stmt pos:start="445:13" pos:end="445:44"><expr pos:start="445:13" pos:end="445:43"><name pos:start="445:13" pos:end="445:27"><name pos:start="445:13" pos:end="445:15">env</name><operator pos:start="445:16" pos:end="445:17">-&gt;</operator><name pos:start="445:18" pos:end="445:27">error_code</name></name> <operator pos:start="445:29" pos:end="445:29">=</operator> <name pos:start="445:31" pos:end="445:43">event_inj_err</name></expr>;</expr_stmt>

            <expr_stmt pos:start="447:13" pos:end="447:38"><expr pos:start="447:13" pos:end="447:37"><name pos:start="447:13" pos:end="447:33"><name pos:start="447:13" pos:end="447:15">env</name><operator pos:start="447:16" pos:end="447:17">-&gt;</operator><name pos:start="447:18" pos:end="447:33">exception_is_int</name></name> <operator pos:start="447:35" pos:end="447:35">=</operator> <literal type="number" pos:start="447:37" pos:end="447:37">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="449:13" pos:end="449:47"><expr pos:start="449:13" pos:end="449:46"><name pos:start="449:13" pos:end="449:35"><name pos:start="449:13" pos:end="449:15">env</name><operator pos:start="449:16" pos:end="449:17">-&gt;</operator><name pos:start="449:18" pos:end="449:35">exception_next_eip</name></name> <operator pos:start="449:37" pos:end="449:37">=</operator> <name pos:start="449:39" pos:end="449:46"><name pos:start="449:39" pos:end="449:41">env</name><operator pos:start="449:42" pos:end="449:43">-&gt;</operator><name pos:start="449:44" pos:end="449:46">eip</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="451:13" pos:end="451:53"><expr pos:start="451:13" pos:end="451:52"><call pos:start="451:13" pos:end="451:52"><name pos:start="451:13" pos:end="451:25">qemu_log_mask</name><argument_list pos:start="451:26" pos:end="451:52">(<argument pos:start="451:27" pos:end="451:43"><expr pos:start="451:27" pos:end="451:43"><name pos:start="451:27" pos:end="451:43">CPU_LOG_TB_IN_ASM</name></expr></argument>, <argument pos:start="451:46" pos:end="451:51"><expr pos:start="451:46" pos:end="451:51"><literal type="string" pos:start="451:46" pos:end="451:51">"SOFT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="453:13" pos:end="453:30"><expr pos:start="453:13" pos:end="453:29"><call pos:start="453:13" pos:end="453:29"><name pos:start="453:13" pos:end="453:25">cpu_loop_exit</name><argument_list pos:start="453:26" pos:end="453:29">(<argument pos:start="453:27" pos:end="453:28"><expr pos:start="453:27" pos:end="453:28"><name pos:start="453:27" pos:end="453:28">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="455:13" pos:end="455:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="459:9" pos:end="461:39"><expr pos:start="459:9" pos:end="461:38"><call pos:start="459:9" pos:end="461:38"><name pos:start="459:9" pos:end="459:21">qemu_log_mask</name><argument_list pos:start="459:22" pos:end="461:38">(<argument pos:start="459:23" pos:end="459:39"><expr pos:start="459:23" pos:end="459:39"><name pos:start="459:23" pos:end="459:39">CPU_LOG_TB_IN_ASM</name></expr></argument>, <argument pos:start="459:42" pos:end="459:53"><expr pos:start="459:42" pos:end="459:53"><literal type="string" pos:start="459:42" pos:end="459:53">" %#x %#x\n"</literal></expr></argument>, <argument pos:start="459:56" pos:end="459:74"><expr pos:start="459:56" pos:end="459:74"><name pos:start="459:56" pos:end="459:74"><name pos:start="459:56" pos:end="459:57">cs</name><operator pos:start="459:58" pos:end="459:59">-&gt;</operator><name pos:start="459:60" pos:end="459:74">exception_index</name></name></expr></argument>,

                      <argument pos:start="461:23" pos:end="461:37"><expr pos:start="461:23" pos:end="461:37"><name pos:start="461:23" pos:end="461:37"><name pos:start="461:23" pos:end="461:25">env</name><operator pos:start="461:26" pos:end="461:27">-&gt;</operator><name pos:start="461:28" pos:end="461:37">error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
