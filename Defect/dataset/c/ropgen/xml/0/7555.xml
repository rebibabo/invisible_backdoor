<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7555.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">copy_sectors</name><parameter_list pos:start="1:24" pos:end="3:72">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:40">BlockDriverState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">bs</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:65"><decl pos:start="1:47" pos:end="1:65"><type pos:start="1:47" pos:end="1:65"><name pos:start="1:47" pos:end="1:54">uint64_t</name></type> <name pos:start="1:56" pos:end="1:65">start_sect</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:47"><decl pos:start="3:25" pos:end="3:47"><type pos:start="3:25" pos:end="3:47"><name pos:start="3:25" pos:end="3:32">uint64_t</name></type> <name pos:start="3:34" pos:end="3:47">cluster_offset</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:60"><decl pos:start="3:50" pos:end="3:60"><type pos:start="3:50" pos:end="3:60"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:60">n_start</name></decl></parameter>, <parameter pos:start="3:63" pos:end="3:71"><decl pos:start="3:63" pos:end="3:71"><type pos:start="3:63" pos:end="3:71"><name pos:start="3:63" pos:end="3:65">int</name></type> <name pos:start="3:67" pos:end="3:71">n_end</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:13">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVQcowState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">n</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:24"><expr pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:5">n</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <name pos:start="13:9" pos:end="13:13">n_end</name> <operator pos:start="13:15" pos:end="13:15">-</operator> <name pos:start="13:17" pos:end="13:23">n_start</name></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:17"><if pos:start="15:5" pos:end="17:17">if <condition pos:start="15:8" pos:end="15:15">(<expr pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:9">n</name> <operator pos:start="15:11" pos:end="15:12">&lt;=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:66"><expr pos:start="19:5" pos:end="19:65"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:65"><name pos:start="19:11" pos:end="19:19">qcow_read</name><argument_list pos:start="19:20" pos:end="19:65">(<argument pos:start="19:21" pos:end="19:22"><expr pos:start="19:21" pos:end="19:22"><name pos:start="19:21" pos:end="19:22">bs</name></expr></argument>, <argument pos:start="19:25" pos:end="19:44"><expr pos:start="19:25" pos:end="19:44"><name pos:start="19:25" pos:end="19:34">start_sect</name> <operator pos:start="19:36" pos:end="19:36">+</operator> <name pos:start="19:38" pos:end="19:44">n_start</name></expr></argument>, <argument pos:start="19:47" pos:end="19:61"><expr pos:start="19:47" pos:end="19:61"><name pos:start="19:47" pos:end="19:61"><name pos:start="19:47" pos:end="19:47">s</name><operator pos:start="19:48" pos:end="19:49">-&gt;</operator><name pos:start="19:50" pos:end="19:61">cluster_data</name></name></expr></argument>, <argument pos:start="19:64" pos:end="19:64"><expr pos:start="19:64" pos:end="19:64"><name pos:start="19:64" pos:end="19:64">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:19"><if pos:start="21:5" pos:end="23:19">if <condition pos:start="21:8" pos:end="21:16">(<expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">&lt;</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:19"><block_content pos:start="23:9" pos:end="23:19">

        <return pos:start="23:9" pos:end="23:19">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="25:24">(<expr pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:23">crypt_method</name></name></expr>)</condition> <block pos:start="25:26" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:45">

        <expr_stmt pos:start="27:9" pos:end="33:45"><expr pos:start="27:9" pos:end="33:44"><call pos:start="27:9" pos:end="33:44"><name pos:start="27:9" pos:end="27:29">qcow2_encrypt_sectors</name><argument_list pos:start="27:30" pos:end="33:44">(<argument pos:start="27:31" pos:end="27:31"><expr pos:start="27:31" pos:end="27:31"><name pos:start="27:31" pos:end="27:31">s</name></expr></argument>, <argument pos:start="27:34" pos:end="27:53"><expr pos:start="27:34" pos:end="27:53"><name pos:start="27:34" pos:end="27:43">start_sect</name> <operator pos:start="27:45" pos:end="27:45">+</operator> <name pos:start="27:47" pos:end="27:53">n_start</name></expr></argument>,

                        <argument pos:start="29:25" pos:end="29:39"><expr pos:start="29:25" pos:end="29:39"><name pos:start="29:25" pos:end="29:39"><name pos:start="29:25" pos:end="29:25">s</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:39">cluster_data</name></name></expr></argument>,

                        <argument pos:start="31:25" pos:end="31:39"><expr pos:start="31:25" pos:end="31:39"><name pos:start="31:25" pos:end="31:39"><name pos:start="31:25" pos:end="31:25">s</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:39">cluster_data</name></name></expr></argument>, <argument pos:start="31:42" pos:end="31:42"><expr pos:start="31:42" pos:end="31:42"><name pos:start="31:42" pos:end="31:42">n</name></expr></argument>, <argument pos:start="31:45" pos:end="31:45"><expr pos:start="31:45" pos:end="31:45"><literal type="number" pos:start="31:45" pos:end="31:45">1</literal></expr></argument>,

                        <argument pos:start="33:25" pos:end="33:43"><expr pos:start="33:25" pos:end="33:43"><operator pos:start="33:25" pos:end="33:25">&amp;</operator><name pos:start="33:26" pos:end="33:43"><name pos:start="33:26" pos:end="33:26">s</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:43">aes_encrypt_key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="39:41"><expr pos:start="37:5" pos:end="39:40"><name pos:start="37:5" pos:end="37:7">ret</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="39:40"><name pos:start="37:11" pos:end="37:20">bdrv_write</name><argument_list pos:start="37:21" pos:end="39:40">(<argument pos:start="37:22" pos:end="37:26"><expr pos:start="37:22" pos:end="37:26"><name pos:start="37:22" pos:end="37:26"><name pos:start="37:22" pos:end="37:22">s</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:26">hd</name></name></expr></argument>, <argument pos:start="37:29" pos:end="37:59"><expr pos:start="37:29" pos:end="37:59"><operator pos:start="37:29" pos:end="37:29">(</operator><name pos:start="37:30" pos:end="37:43">cluster_offset</name> <operator pos:start="37:45" pos:end="37:46">&gt;&gt;</operator> <literal type="number" pos:start="37:48" pos:end="37:48">9</literal><operator pos:start="37:49" pos:end="37:49">)</operator> <operator pos:start="37:51" pos:end="37:51">+</operator> <name pos:start="37:53" pos:end="37:59">n_start</name></expr></argument>,

                     <argument pos:start="39:22" pos:end="39:36"><expr pos:start="39:22" pos:end="39:36"><name pos:start="39:22" pos:end="39:36"><name pos:start="39:22" pos:end="39:22">s</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:36">cluster_data</name></name></expr></argument>, <argument pos:start="39:39" pos:end="39:39"><expr pos:start="39:39" pos:end="39:39"><name pos:start="39:39" pos:end="39:39">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:19"><if pos:start="41:5" pos:end="43:19">if <condition pos:start="41:8" pos:end="41:16">(<expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">&lt;</operator> <literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:19"><block_content pos:start="43:9" pos:end="43:19">

        <return pos:start="43:9" pos:end="43:19">return <expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
