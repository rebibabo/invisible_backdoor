<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15801.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">hmp_host_net_remove</name><parameter_list pos:start="1:25" pos:end="1:58">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:32">Monitor</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">mon</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:57"><decl pos:start="1:40" pos:end="1:57"><type pos:start="1:40" pos:end="1:57"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:50">QDict</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">qdict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:28">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">NetClientState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:22">nc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">vlan_id</name> <init pos:start="7:17" pos:end="7:49">= <expr pos:start="7:19" pos:end="7:49"><call pos:start="7:19" pos:end="7:49"><name pos:start="7:19" pos:end="7:31">qdict_get_int</name><argument_list pos:start="7:32" pos:end="7:49">(<argument pos:start="7:33" pos:end="7:37"><expr pos:start="7:33" pos:end="7:37"><name pos:start="7:33" pos:end="7:37">qdict</name></expr></argument>, <argument pos:start="7:40" pos:end="7:48"><expr pos:start="7:40" pos:end="7:48"><literal type="string" pos:start="7:40" pos:end="7:48">"vlan_id"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:56"><decl pos:start="9:5" pos:end="9:55"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:22">device</name> <init pos:start="9:24" pos:end="9:55">= <expr pos:start="9:26" pos:end="9:55"><call pos:start="9:26" pos:end="9:55"><name pos:start="9:26" pos:end="9:38">qdict_get_str</name><argument_list pos:start="9:39" pos:end="9:55">(<argument pos:start="9:40" pos:end="9:44"><expr pos:start="9:40" pos:end="9:44"><name pos:start="9:40" pos:end="9:44">qdict</name></expr></argument>, <argument pos:start="9:47" pos:end="9:54"><expr pos:start="9:47" pos:end="9:54"><literal type="string" pos:start="9:47" pos:end="9:54">"device"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:54"><expr pos:start="13:5" pos:end="13:53"><name pos:start="13:5" pos:end="13:6">nc</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="13:53"><name pos:start="13:10" pos:end="13:36">net_hub_find_client_by_name</name><argument_list pos:start="13:37" pos:end="13:53">(<argument pos:start="13:38" pos:end="13:44"><expr pos:start="13:38" pos:end="13:44"><name pos:start="13:38" pos:end="13:44">vlan_id</name></expr></argument>, <argument pos:start="13:47" pos:end="13:52"><expr pos:start="13:47" pos:end="13:52"><name pos:start="13:47" pos:end="13:52">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:12">(<expr pos:start="15:9" pos:end="15:11"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:11">nc</name></expr>)</condition> <block pos:start="15:14" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:15">

        <expr_stmt pos:start="17:9" pos:end="19:38"><expr pos:start="17:9" pos:end="19:37"><call pos:start="17:9" pos:end="19:37"><name pos:start="17:9" pos:end="17:20">error_report</name><argument_list pos:start="17:21" pos:end="19:37">(<argument pos:start="17:22" pos:end="17:69"><expr pos:start="17:22" pos:end="17:69"><literal type="string" pos:start="17:22" pos:end="17:69">"Host network device '%s' on hub '%d' not found"</literal></expr></argument>,

                     <argument pos:start="19:22" pos:end="19:27"><expr pos:start="19:22" pos:end="19:27"><name pos:start="19:22" pos:end="19:27">device</name></expr></argument>, <argument pos:start="19:30" pos:end="19:36"><expr pos:start="19:30" pos:end="19:36"><name pos:start="19:30" pos:end="19:36">vlan_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:42">(<expr pos:start="25:9" pos:end="25:41"><operator pos:start="25:9" pos:end="25:9">!</operator><call pos:start="25:10" pos:end="25:41"><name pos:start="25:10" pos:end="25:30">net_host_check_device</name><argument_list pos:start="25:31" pos:end="25:41">(<argument pos:start="25:32" pos:end="25:40"><expr pos:start="25:32" pos:end="25:40"><name pos:start="25:32" pos:end="25:40"><name pos:start="25:32" pos:end="25:33">nc</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:40">model</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:44" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:15">

        <expr_stmt pos:start="27:9" pos:end="27:65"><expr pos:start="27:9" pos:end="27:64"><call pos:start="27:9" pos:end="27:64"><name pos:start="27:9" pos:end="27:20">error_report</name><argument_list pos:start="27:21" pos:end="27:64">(<argument pos:start="27:22" pos:end="27:55"><expr pos:start="27:22" pos:end="27:55"><literal type="string" pos:start="27:22" pos:end="27:55">"invalid host network device '%s'"</literal></expr></argument>, <argument pos:start="27:58" pos:end="27:63"><expr pos:start="27:58" pos:end="27:63"><name pos:start="27:58" pos:end="27:63">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:34"><expr pos:start="35:5" pos:end="35:33"><call pos:start="35:5" pos:end="35:33"><name pos:start="35:5" pos:end="35:23">qemu_del_net_client</name><argument_list pos:start="35:24" pos:end="35:33">(<argument pos:start="35:25" pos:end="35:32"><expr pos:start="35:25" pos:end="35:32"><name pos:start="35:25" pos:end="35:32"><name pos:start="35:25" pos:end="35:26">nc</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:32">peer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><call pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:23">qemu_del_net_client</name><argument_list pos:start="37:24" pos:end="37:27">(<argument pos:start="37:25" pos:end="37:26"><expr pos:start="37:25" pos:end="37:26"><name pos:start="37:25" pos:end="37:26">nc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
