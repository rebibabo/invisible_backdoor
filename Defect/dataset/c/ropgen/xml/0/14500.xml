<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14500.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">setup_rt_frame</name><parameter_list pos:start="1:27" pos:end="5:66">(<parameter pos:start="1:28" pos:end="1:34"><decl pos:start="1:28" pos:end="1:34"><type pos:start="1:28" pos:end="1:34"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:34">sig</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:63"><decl pos:start="1:37" pos:end="1:63"><type pos:start="1:37" pos:end="1:63"><name pos:start="1:37" pos:end="1:59"><name pos:start="1:37" pos:end="1:42">struct</name> <name pos:start="1:44" pos:end="1:59">target_sigaction</name></name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">ka</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:49"><decl pos:start="3:28" pos:end="3:49"><type pos:start="3:28" pos:end="3:49"><name pos:start="3:28" pos:end="3:43">target_siginfo_t</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">info</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:47"><decl pos:start="5:28" pos:end="5:47"><type pos:start="5:28" pos:end="5:47"><name pos:start="5:28" pos:end="5:42">target_sigset_t</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:47">set</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:65"><decl pos:start="5:50" pos:end="5:65"><type pos:start="5:50" pos:end="5:65"><name pos:start="5:50" pos:end="5:60">CPUPPCState</name> <modifier pos:start="5:62" pos:end="5:62">*</modifier></type><name pos:start="5:63" pos:end="5:65">env</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="135:1">{<block_content pos:start="9:5" pos:end="131:30">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:31"><name pos:start="9:5" pos:end="9:29"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:29">target_rt_sigframe</name></name> <modifier pos:start="9:31" pos:end="9:31">*</modifier></type><name pos:start="9:32" pos:end="9:36">rt_sf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:26">target_mcontext</name></name> <modifier pos:start="11:28" pos:end="11:28">*</modifier></type><name pos:start="11:29" pos:end="11:33">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:27">rt_sf_addr</name></decl>, <decl pos:start="13:30" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:30" pos:end="13:34">newsp</name> <init pos:start="13:36" pos:end="13:38">= <expr pos:start="13:38" pos:end="13:38"><literal type="number" pos:start="13:38" pos:end="13:38">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:18"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:14">err</name> <init pos:start="15:16" pos:end="15:18">= <expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">signal</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:55"><expr pos:start="21:5" pos:end="21:54"><name pos:start="21:5" pos:end="21:14">rt_sf_addr</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:54"><name pos:start="21:18" pos:end="21:29">get_sigframe</name><argument_list pos:start="21:30" pos:end="21:54">(<argument pos:start="21:31" pos:end="21:32"><expr pos:start="21:31" pos:end="21:32"><name pos:start="21:31" pos:end="21:32">ka</name></expr></argument>, <argument pos:start="21:35" pos:end="21:37"><expr pos:start="21:35" pos:end="21:37"><name pos:start="21:35" pos:end="21:37">env</name></expr></argument>, <argument pos:start="21:40" pos:end="21:53"><expr pos:start="21:40" pos:end="21:53"><sizeof pos:start="21:40" pos:end="21:53">sizeof<argument_list pos:start="21:46" pos:end="21:53">(<argument pos:start="21:47" pos:end="21:52"><expr pos:start="21:47" pos:end="21:52"><operator pos:start="21:47" pos:end="21:47">*</operator><name pos:start="21:48" pos:end="21:52">rt_sf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:21"><if pos:start="23:5" pos:end="25:21">if <condition pos:start="23:8" pos:end="23:62">(<expr pos:start="23:9" pos:end="23:61"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:61"><name pos:start="23:10" pos:end="23:25">lock_user_struct</name><argument_list pos:start="23:26" pos:end="23:61">(<argument pos:start="23:27" pos:end="23:38"><expr pos:start="23:27" pos:end="23:38"><name pos:start="23:27" pos:end="23:38">VERIFY_WRITE</name></expr></argument>, <argument pos:start="23:41" pos:end="23:45"><expr pos:start="23:41" pos:end="23:45"><name pos:start="23:41" pos:end="23:45">rt_sf</name></expr></argument>, <argument pos:start="23:48" pos:end="23:57"><expr pos:start="23:48" pos:end="23:57"><name pos:start="23:48" pos:end="23:57">rt_sf_addr</name></expr></argument>, <argument pos:start="23:60" pos:end="23:60"><expr pos:start="23:60" pos:end="23:60"><literal type="number" pos:start="23:60" pos:end="23:60">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:21"><block_content pos:start="25:9" pos:end="25:21">

        <goto pos:start="25:9" pos:end="25:21">goto <name pos:start="25:14" pos:end="25:20">sigsegv</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:42"><expr pos:start="29:5" pos:end="29:41"><name pos:start="29:5" pos:end="29:10">signal</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:41"><name pos:start="29:14" pos:end="29:36">current_exec_domain_sig</name><argument_list pos:start="29:37" pos:end="29:41">(<argument pos:start="29:38" pos:end="29:40"><expr pos:start="29:38" pos:end="29:40"><name pos:start="29:38" pos:end="29:40">sig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:45"><expr pos:start="33:5" pos:end="33:44"><call pos:start="33:5" pos:end="33:44"><name pos:start="33:5" pos:end="33:24">copy_siginfo_to_user</name><argument_list pos:start="33:25" pos:end="33:44">(<argument pos:start="33:26" pos:end="33:37"><expr pos:start="33:26" pos:end="33:37"><operator pos:start="33:26" pos:end="33:26">&amp;</operator><name pos:start="33:27" pos:end="33:37"><name pos:start="33:27" pos:end="33:31">rt_sf</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:37">info</name></name></expr></argument>, <argument pos:start="33:40" pos:end="33:43"><expr pos:start="33:40" pos:end="33:43"><name pos:start="33:40" pos:end="33:43">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:40"><expr pos:start="37:5" pos:end="37:39"><call pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:14">__put_user</name><argument_list pos:start="37:15" pos:end="37:39">(<argument pos:start="37:16" pos:end="37:16"><expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr></argument>, <argument pos:start="37:19" pos:end="37:38"><expr pos:start="37:19" pos:end="37:38"><operator pos:start="37:19" pos:end="37:19">&amp;</operator><name pos:start="37:20" pos:end="37:38"><name pos:start="37:20" pos:end="37:24">rt_sf</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:28">uc</name><operator pos:start="37:29" pos:end="37:29">.</operator><name pos:start="37:30" pos:end="37:38">tuc_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:39"><expr pos:start="39:5" pos:end="39:38"><call pos:start="39:5" pos:end="39:38"><name pos:start="39:5" pos:end="39:14">__put_user</name><argument_list pos:start="39:15" pos:end="39:38">(<argument pos:start="39:16" pos:end="39:16"><expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr></argument>, <argument pos:start="39:19" pos:end="39:37"><expr pos:start="39:19" pos:end="39:37"><operator pos:start="39:19" pos:end="39:19">&amp;</operator><name pos:start="39:20" pos:end="39:37"><name pos:start="39:20" pos:end="39:24">rt_sf</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:28">uc</name><operator pos:start="39:29" pos:end="39:29">.</operator><name pos:start="39:30" pos:end="39:37">tuc_link</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="43:43"><expr pos:start="41:5" pos:end="43:42"><call pos:start="41:5" pos:end="43:42"><name pos:start="41:5" pos:end="41:14">__put_user</name><argument_list pos:start="41:15" pos:end="43:42">(<argument pos:start="41:16" pos:end="41:58"><expr pos:start="41:16" pos:end="41:58"><operator pos:start="41:16" pos:end="41:16">(</operator><name pos:start="41:17" pos:end="41:28">target_ulong</name><operator pos:start="41:29" pos:end="41:29">)</operator><name pos:start="41:30" pos:end="41:58"><name pos:start="41:30" pos:end="41:52">target_sigaltstack_used</name><operator pos:start="41:53" pos:end="41:53">.</operator><name pos:start="41:54" pos:end="41:58">ss_sp</name></name></expr></argument>,

               <argument pos:start="43:16" pos:end="43:41"><expr pos:start="43:16" pos:end="43:41"><operator pos:start="43:16" pos:end="43:16">&amp;</operator><name pos:start="43:17" pos:end="43:41"><name pos:start="43:17" pos:end="43:21">rt_sf</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:25">uc</name><operator pos:start="43:26" pos:end="43:26">.</operator><name pos:start="43:27" pos:end="43:35">tuc_stack</name><operator pos:start="43:36" pos:end="43:36">.</operator><name pos:start="43:37" pos:end="43:41">ss_sp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="47:46"><expr pos:start="45:5" pos:end="47:45"><call pos:start="45:5" pos:end="47:45"><name pos:start="45:5" pos:end="45:14">__put_user</name><argument_list pos:start="45:15" pos:end="47:45">(<argument pos:start="45:16" pos:end="45:40"><expr pos:start="45:16" pos:end="45:40"><call pos:start="45:16" pos:end="45:40"><name pos:start="45:16" pos:end="45:27">sas_ss_flags</name><argument_list pos:start="45:28" pos:end="45:40">(<argument pos:start="45:29" pos:end="45:39"><expr pos:start="45:29" pos:end="45:39"><name pos:start="45:29" pos:end="45:39"><name pos:start="45:29" pos:end="45:31">env</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:36">gpr</name><index pos:start="45:37" pos:end="45:39">[<expr pos:start="45:38" pos:end="45:38"><literal type="number" pos:start="45:38" pos:end="45:38">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="47:16" pos:end="47:44"><expr pos:start="47:16" pos:end="47:44"><operator pos:start="47:16" pos:end="47:16">&amp;</operator><name pos:start="47:17" pos:end="47:44"><name pos:start="47:17" pos:end="47:21">rt_sf</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:25">uc</name><operator pos:start="47:26" pos:end="47:26">.</operator><name pos:start="47:27" pos:end="47:35">tuc_stack</name><operator pos:start="47:36" pos:end="47:36">.</operator><name pos:start="47:37" pos:end="47:44">ss_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="51:45"><expr pos:start="49:5" pos:end="51:44"><call pos:start="49:5" pos:end="51:44"><name pos:start="49:5" pos:end="49:14">__put_user</name><argument_list pos:start="49:15" pos:end="51:44">(<argument pos:start="49:16" pos:end="49:46"><expr pos:start="49:16" pos:end="49:46"><name pos:start="49:16" pos:end="49:46"><name pos:start="49:16" pos:end="49:38">target_sigaltstack_used</name><operator pos:start="49:39" pos:end="49:39">.</operator><name pos:start="49:40" pos:end="49:46">ss_size</name></name></expr></argument>,

               <argument pos:start="51:16" pos:end="51:43"><expr pos:start="51:16" pos:end="51:43"><operator pos:start="51:16" pos:end="51:16">&amp;</operator><name pos:start="51:17" pos:end="51:43"><name pos:start="51:17" pos:end="51:21">rt_sf</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:25">uc</name><operator pos:start="51:26" pos:end="51:26">.</operator><name pos:start="51:27" pos:end="51:35">tuc_stack</name><operator pos:start="51:36" pos:end="51:36">.</operator><name pos:start="51:37" pos:end="51:43">ss_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="55:36"><expr pos:start="53:5" pos:end="55:35"><call pos:start="53:5" pos:end="55:35"><name pos:start="53:5" pos:end="53:14">__put_user</name><argument_list pos:start="53:15" pos:end="55:35">(<argument pos:start="53:16" pos:end="53:44"><expr pos:start="53:16" pos:end="53:44"><call pos:start="53:16" pos:end="53:44"><name pos:start="53:16" pos:end="53:18">h2g</name> <argument_list pos:start="53:20" pos:end="53:44">(<argument pos:start="53:21" pos:end="53:43"><expr pos:start="53:21" pos:end="53:43"><operator pos:start="53:21" pos:end="53:21">&amp;</operator><name pos:start="53:22" pos:end="53:43"><name pos:start="53:22" pos:end="53:26">rt_sf</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:30">uc</name><operator pos:start="53:31" pos:end="53:31">.</operator><name pos:start="53:32" pos:end="53:43">tuc_mcontext</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="55:16" pos:end="55:34"><expr pos:start="55:16" pos:end="55:34"><operator pos:start="55:16" pos:end="55:16">&amp;</operator><name pos:start="55:17" pos:end="55:34"><name pos:start="55:17" pos:end="55:21">rt_sf</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:25">uc</name><operator pos:start="55:26" pos:end="55:26">.</operator><name pos:start="55:27" pos:end="55:34">tuc_regs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="57:5" pos:end="61:5">for<control pos:start="57:8" pos:end="57:42">(<init pos:start="57:9" pos:end="57:14"><expr pos:start="57:9" pos:end="57:13"><name pos:start="57:9" pos:end="57:9">i</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <literal type="number" pos:start="57:13" pos:end="57:13">0</literal></expr>;</init> <condition pos:start="57:16" pos:end="57:37"><expr pos:start="57:16" pos:end="57:36"><name pos:start="57:16" pos:end="57:16">i</name> <operator pos:start="57:18" pos:end="57:18">&lt;</operator> <name pos:start="57:20" pos:end="57:36">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="57:39" pos:end="57:41"><expr pos:start="57:39" pos:end="57:41"><name pos:start="57:39" pos:end="57:39">i</name><operator pos:start="57:40" pos:end="57:41">++</operator></expr></incr>)</control> <block pos:start="57:44" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:63">

        <expr_stmt pos:start="59:9" pos:end="59:63"><expr pos:start="59:9" pos:end="59:62"><call pos:start="59:9" pos:end="59:62"><name pos:start="59:9" pos:end="59:18">__put_user</name><argument_list pos:start="59:19" pos:end="59:62">(<argument pos:start="59:20" pos:end="59:30"><expr pos:start="59:20" pos:end="59:30"><name pos:start="59:20" pos:end="59:30"><name pos:start="59:20" pos:end="59:22">set</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:27">sig</name><index pos:start="59:28" pos:end="59:30">[<expr pos:start="59:29" pos:end="59:29"><name pos:start="59:29" pos:end="59:29">i</name></expr>]</index></name></expr></argument>, <argument pos:start="59:33" pos:end="59:61"><expr pos:start="59:33" pos:end="59:61"><operator pos:start="59:33" pos:end="59:33">&amp;</operator><name pos:start="59:34" pos:end="59:61"><name pos:start="59:34" pos:end="59:38">rt_sf</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:42">uc</name><operator pos:start="59:43" pos:end="59:43">.</operator><name pos:start="59:44" pos:end="59:54">tuc_sigmask</name><operator pos:start="59:55" pos:end="59:55">.</operator><name pos:start="59:56" pos:end="59:58">sig</name><index pos:start="59:59" pos:end="59:61">[<expr pos:start="59:60" pos:end="59:60"><name pos:start="59:60" pos:end="59:60">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="65:5" pos:end="65:36"><expr pos:start="65:5" pos:end="65:35"><name pos:start="65:5" pos:end="65:9">frame</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <operator pos:start="65:13" pos:end="65:13">&amp;</operator><name pos:start="65:14" pos:end="65:35"><name pos:start="65:14" pos:end="65:18">rt_sf</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:22">uc</name><operator pos:start="65:23" pos:end="65:23">.</operator><name pos:start="65:24" pos:end="65:35">tuc_mcontext</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:62"><expr pos:start="67:5" pos:end="67:61"><name pos:start="67:5" pos:end="67:7">err</name> <operator pos:start="67:9" pos:end="67:10">|=</operator> <call pos:start="67:12" pos:end="67:61"><name pos:start="67:12" pos:end="67:25">save_user_regs</name><argument_list pos:start="67:26" pos:end="67:61">(<argument pos:start="67:27" pos:end="67:29"><expr pos:start="67:27" pos:end="67:29"><name pos:start="67:27" pos:end="67:29">env</name></expr></argument>, <argument pos:start="67:32" pos:end="67:36"><expr pos:start="67:32" pos:end="67:36"><name pos:start="67:32" pos:end="67:36">frame</name></expr></argument>, <argument pos:start="67:39" pos:end="67:60"><expr pos:start="67:39" pos:end="67:60"><name pos:start="67:39" pos:end="67:60">TARGET_NR_rt_sigreturn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="71:5" pos:end="73:58">/* The kernel checks for the presence of a VDSO here.  We don't

       emulate a vdso, so use a sigreturn system call.  */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:47"><expr pos:start="75:5" pos:end="75:46"><name pos:start="75:5" pos:end="75:11"><name pos:start="75:5" pos:end="75:7">env</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:11">lr</name></name> <operator pos:start="75:13" pos:end="75:13">=</operator> <operator pos:start="75:15" pos:end="75:15">(</operator><name pos:start="75:16" pos:end="75:27">target_ulong</name><operator pos:start="75:28" pos:end="75:28">)</operator> <call pos:start="75:30" pos:end="75:46"><name pos:start="75:30" pos:end="75:32">h2g</name><argument_list pos:start="75:33" pos:end="75:46">(<argument pos:start="75:34" pos:end="75:45"><expr pos:start="75:34" pos:end="75:45"><name pos:start="75:34" pos:end="75:45"><name pos:start="75:34" pos:end="75:38">frame</name><operator pos:start="75:39" pos:end="75:40">-&gt;</operator><name pos:start="75:41" pos:end="75:45">tramp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="79:5" pos:end="79:38">/* Turn off all fp exceptions.  */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:19"><expr pos:start="81:5" pos:end="81:18"><name pos:start="81:5" pos:end="81:14"><name pos:start="81:5" pos:end="81:7">env</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:14">fpscr</name></name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="number" pos:start="81:18" pos:end="81:18">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:62">/* Create a stack frame for the caller of the handler.  */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:49"><expr pos:start="87:5" pos:end="87:48"><name pos:start="87:5" pos:end="87:9">newsp</name> <operator pos:start="87:11" pos:end="87:11">=</operator> <name pos:start="87:13" pos:end="87:22">rt_sf_addr</name> <operator pos:start="87:24" pos:end="87:24">-</operator> <operator pos:start="87:26" pos:end="87:26">(</operator><name pos:start="87:27" pos:end="87:42">SIGNAL_FRAMESIZE</name> <operator pos:start="87:44" pos:end="87:44">+</operator> <literal type="number" pos:start="87:46" pos:end="87:47">16</literal><operator pos:start="87:48" pos:end="87:48">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:63"><expr pos:start="89:5" pos:end="89:62"><call pos:start="89:5" pos:end="89:62"><name pos:start="89:5" pos:end="89:14">__put_user</name><argument_list pos:start="89:15" pos:end="89:62">(<argument pos:start="89:16" pos:end="89:26"><expr pos:start="89:16" pos:end="89:26"><name pos:start="89:16" pos:end="89:26"><name pos:start="89:16" pos:end="89:18">env</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:23">gpr</name><index pos:start="89:24" pos:end="89:26">[<expr pos:start="89:25" pos:end="89:25"><literal type="number" pos:start="89:25" pos:end="89:25">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="89:29" pos:end="89:61"><expr pos:start="89:29" pos:end="89:61"><operator pos:start="89:29" pos:end="89:29">(</operator><name pos:start="89:30" pos:end="89:41">target_ulong</name> <operator pos:start="89:43" pos:end="89:43">*</operator><operator pos:start="89:44" pos:end="89:44">)</operator><operator pos:start="89:45" pos:end="89:45">(</operator><name pos:start="89:46" pos:end="89:54">uintptr_t</name><operator pos:start="89:55" pos:end="89:55">)</operator> <name pos:start="89:57" pos:end="89:61">newsp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="93:5" pos:end="95:21"><if pos:start="93:5" pos:end="95:21">if <condition pos:start="93:8" pos:end="93:12">(<expr pos:start="93:9" pos:end="93:11"><name pos:start="93:9" pos:end="93:11">err</name></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:21"><block_content pos:start="95:9" pos:end="95:21">

        <goto pos:start="95:9" pos:end="95:21">goto <name pos:start="95:14" pos:end="95:20">sigsegv</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="99:5" pos:end="99:47">/* Set up registers for signal handler.  */</comment>

    <expr_stmt pos:start="101:5" pos:end="101:24"><expr pos:start="101:5" pos:end="101:23"><name pos:start="101:5" pos:end="101:15"><name pos:start="101:5" pos:end="101:7">env</name><operator pos:start="101:8" pos:end="101:9">-&gt;</operator><name pos:start="101:10" pos:end="101:12">gpr</name><index pos:start="101:13" pos:end="101:15">[<expr pos:start="101:14" pos:end="101:14"><literal type="number" pos:start="101:14" pos:end="101:14">1</literal></expr>]</index></name> <operator pos:start="101:17" pos:end="101:17">=</operator> <name pos:start="101:19" pos:end="101:23">newsp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:40"><expr pos:start="103:5" pos:end="103:39"><name pos:start="103:5" pos:end="103:15"><name pos:start="103:5" pos:end="103:7">env</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:12">gpr</name><index pos:start="103:13" pos:end="103:15">[<expr pos:start="103:14" pos:end="103:14"><literal type="number" pos:start="103:14" pos:end="103:14">3</literal></expr>]</index></name> <operator pos:start="103:17" pos:end="103:17">=</operator> <operator pos:start="103:19" pos:end="103:19">(</operator><name pos:start="103:20" pos:end="103:31">target_ulong</name><operator pos:start="103:32" pos:end="103:32">)</operator> <name pos:start="103:34" pos:end="103:39">signal</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:51"><expr pos:start="105:5" pos:end="105:50"><name pos:start="105:5" pos:end="105:15"><name pos:start="105:5" pos:end="105:7">env</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:12">gpr</name><index pos:start="105:13" pos:end="105:15">[<expr pos:start="105:14" pos:end="105:14"><literal type="number" pos:start="105:14" pos:end="105:14">4</literal></expr>]</index></name> <operator pos:start="105:17" pos:end="105:17">=</operator> <operator pos:start="105:19" pos:end="105:19">(</operator><name pos:start="105:20" pos:end="105:31">target_ulong</name><operator pos:start="105:32" pos:end="105:32">)</operator> <call pos:start="105:34" pos:end="105:50"><name pos:start="105:34" pos:end="105:36">h2g</name><argument_list pos:start="105:37" pos:end="105:50">(<argument pos:start="105:38" pos:end="105:49"><expr pos:start="105:38" pos:end="105:49"><operator pos:start="105:38" pos:end="105:38">&amp;</operator><name pos:start="105:39" pos:end="105:49"><name pos:start="105:39" pos:end="105:43">rt_sf</name><operator pos:start="105:44" pos:end="105:45">-&gt;</operator><name pos:start="105:46" pos:end="105:49">info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:49"><expr pos:start="107:5" pos:end="107:48"><name pos:start="107:5" pos:end="107:15"><name pos:start="107:5" pos:end="107:7">env</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:12">gpr</name><index pos:start="107:13" pos:end="107:15">[<expr pos:start="107:14" pos:end="107:14"><literal type="number" pos:start="107:14" pos:end="107:14">5</literal></expr>]</index></name> <operator pos:start="107:17" pos:end="107:17">=</operator> <operator pos:start="107:19" pos:end="107:19">(</operator><name pos:start="107:20" pos:end="107:31">target_ulong</name><operator pos:start="107:32" pos:end="107:32">)</operator> <call pos:start="107:34" pos:end="107:48"><name pos:start="107:34" pos:end="107:36">h2g</name><argument_list pos:start="107:37" pos:end="107:48">(<argument pos:start="107:38" pos:end="107:47"><expr pos:start="107:38" pos:end="107:47"><operator pos:start="107:38" pos:end="107:38">&amp;</operator><name pos:start="107:39" pos:end="107:47"><name pos:start="107:39" pos:end="107:43">rt_sf</name><operator pos:start="107:44" pos:end="107:45">-&gt;</operator><name pos:start="107:46" pos:end="107:47">uc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:44"><expr pos:start="109:5" pos:end="109:43"><name pos:start="109:5" pos:end="109:15"><name pos:start="109:5" pos:end="109:7">env</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:12">gpr</name><index pos:start="109:13" pos:end="109:15">[<expr pos:start="109:14" pos:end="109:14"><literal type="number" pos:start="109:14" pos:end="109:14">6</literal></expr>]</index></name> <operator pos:start="109:17" pos:end="109:17">=</operator> <operator pos:start="109:19" pos:end="109:19">(</operator><name pos:start="109:20" pos:end="109:31">target_ulong</name><operator pos:start="109:32" pos:end="109:32">)</operator> <call pos:start="109:34" pos:end="109:43"><name pos:start="109:34" pos:end="109:36">h2g</name><argument_list pos:start="109:37" pos:end="109:43">(<argument pos:start="109:38" pos:end="109:42"><expr pos:start="109:38" pos:end="109:42"><name pos:start="109:38" pos:end="109:42">rt_sf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:46"><expr pos:start="111:5" pos:end="111:45"><name pos:start="111:5" pos:end="111:12"><name pos:start="111:5" pos:end="111:7">env</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:12">nip</name></name> <operator pos:start="111:14" pos:end="111:14">=</operator> <operator pos:start="111:16" pos:end="111:16">(</operator><name pos:start="111:17" pos:end="111:28">target_ulong</name><operator pos:start="111:29" pos:end="111:29">)</operator> <name pos:start="111:31" pos:end="111:45"><name pos:start="111:31" pos:end="111:32">ka</name><operator pos:start="111:33" pos:end="111:34">-&gt;</operator><name pos:start="111:35" pos:end="111:45">_sa_handler</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="113:5" pos:end="113:58">/* Signal handlers are entered in big-endian mode.  */</comment>

    <expr_stmt pos:start="115:5" pos:end="115:24"><expr pos:start="115:5" pos:end="115:23"><name pos:start="115:5" pos:end="115:12"><name pos:start="115:5" pos:end="115:7">env</name><operator pos:start="115:8" pos:end="115:9">-&gt;</operator><name pos:start="115:10" pos:end="115:12">msr</name></name> <operator pos:start="115:14" pos:end="115:15">&amp;=</operator> <operator pos:start="115:17" pos:end="115:17">~</operator><name pos:start="115:18" pos:end="115:23">MSR_LE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:45"><expr pos:start="119:5" pos:end="119:44"><call pos:start="119:5" pos:end="119:44"><name pos:start="119:5" pos:end="119:22">unlock_user_struct</name><argument_list pos:start="119:23" pos:end="119:44">(<argument pos:start="119:24" pos:end="119:28"><expr pos:start="119:24" pos:end="119:28"><name pos:start="119:24" pos:end="119:28">rt_sf</name></expr></argument>, <argument pos:start="119:31" pos:end="119:40"><expr pos:start="119:31" pos:end="119:40"><name pos:start="119:31" pos:end="119:40">rt_sf_addr</name></expr></argument>, <argument pos:start="119:43" pos:end="119:43"><expr pos:start="119:43" pos:end="119:43"><literal type="number" pos:start="119:43" pos:end="119:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="121:5" pos:end="121:11">return;</return>



<label pos:start="125:1" pos:end="125:8"><name pos:start="125:1" pos:end="125:7">sigsegv</name>:</label>

    <expr_stmt pos:start="127:5" pos:end="127:45"><expr pos:start="127:5" pos:end="127:44"><call pos:start="127:5" pos:end="127:44"><name pos:start="127:5" pos:end="127:22">unlock_user_struct</name><argument_list pos:start="127:23" pos:end="127:44">(<argument pos:start="127:24" pos:end="127:28"><expr pos:start="127:24" pos:end="127:28"><name pos:start="127:24" pos:end="127:28">rt_sf</name></expr></argument>, <argument pos:start="127:31" pos:end="127:40"><expr pos:start="127:31" pos:end="127:40"><name pos:start="127:31" pos:end="127:40">rt_sf_addr</name></expr></argument>, <argument pos:start="127:43" pos:end="127:43"><expr pos:start="127:43" pos:end="127:43"><literal type="number" pos:start="127:43" pos:end="127:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:50"><expr pos:start="129:5" pos:end="129:49"><call pos:start="129:5" pos:end="129:49"><name pos:start="129:5" pos:end="129:12">qemu_log</name><argument_list pos:start="129:13" pos:end="129:49">(<argument pos:start="129:14" pos:end="129:48"><expr pos:start="129:14" pos:end="129:48"><literal type="string" pos:start="129:14" pos:end="129:48">"segfaulting from setup_rt_frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:30"><expr pos:start="131:5" pos:end="131:29"><call pos:start="131:5" pos:end="131:29"><name pos:start="131:5" pos:end="131:13">force_sig</name><argument_list pos:start="131:14" pos:end="131:29">(<argument pos:start="131:15" pos:end="131:28"><expr pos:start="131:15" pos:end="131:28"><name pos:start="131:15" pos:end="131:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



</block_content>}</block></function>
</unit>
