<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18730.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:29">bios_linker_loader_alloc</name><parameter_list pos:start="1:30" pos:end="7:46">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:36">GArray</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">linker</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:46"><decl pos:start="3:31" pos:end="3:46"><type pos:start="3:31" pos:end="3:46"><specifier pos:start="3:31" pos:end="3:35">const</specifier> <name pos:start="3:37" pos:end="3:40">char</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:46">file</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:50"><decl pos:start="5:31" pos:end="5:50"><type pos:start="5:31" pos:end="5:50"><name pos:start="5:31" pos:end="5:38">uint32_t</name></type> <name pos:start="5:40" pos:end="5:50">alloc_align</name></decl></parameter>,

                              <parameter pos:start="7:31" pos:end="7:45"><decl pos:start="7:31" pos:end="7:45"><type pos:start="7:31" pos:end="7:45"><name pos:start="7:31" pos:end="7:34">bool</name></type> <name pos:start="7:36" pos:end="7:45">alloc_fseg</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="35:1">{<block_content pos:start="11:5" pos:end="33:39">

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:25">BiosLinkerLoaderEntry</name></type> <name pos:start="11:27" pos:end="11:31">entry</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><call pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:10">memset</name><argument_list pos:start="15:11" pos:end="15:35">(<argument pos:start="15:12" pos:end="15:17"><expr pos:start="15:12" pos:end="15:17"><operator pos:start="15:12" pos:end="15:12">&amp;</operator><name pos:start="15:13" pos:end="15:17">entry</name></expr></argument>, <argument pos:start="15:20" pos:end="15:20"><expr pos:start="15:20" pos:end="15:20"><literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr></argument>, <argument pos:start="15:23" pos:end="15:34"><expr pos:start="15:23" pos:end="15:34"><sizeof pos:start="15:23" pos:end="15:34">sizeof <name pos:start="15:30" pos:end="15:34">entry</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:65"><expr pos:start="17:5" pos:end="17:64"><call pos:start="17:5" pos:end="17:64"><name pos:start="17:5" pos:end="17:11">strncpy</name><argument_list pos:start="17:12" pos:end="17:64">(<argument pos:start="17:13" pos:end="17:28"><expr pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:17">entry</name><operator pos:start="17:18" pos:end="17:18">.</operator><name pos:start="17:19" pos:end="17:23">alloc</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:28">file</name></name></expr></argument>, <argument pos:start="17:31" pos:end="17:34"><expr pos:start="17:31" pos:end="17:34"><name pos:start="17:31" pos:end="17:34">file</name></expr></argument>, <argument pos:start="17:37" pos:end="17:63"><expr pos:start="17:37" pos:end="17:63"><sizeof pos:start="17:37" pos:end="17:59">sizeof <name pos:start="17:44" pos:end="17:59"><name pos:start="17:44" pos:end="17:48">entry</name><operator pos:start="17:49" pos:end="17:49">.</operator><name pos:start="17:50" pos:end="17:54">alloc</name><operator pos:start="17:55" pos:end="17:55">.</operator><name pos:start="17:56" pos:end="17:59">file</name></name></sizeof> <operator pos:start="17:61" pos:end="17:61">-</operator> <literal type="number" pos:start="17:63" pos:end="17:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:69"><expr pos:start="19:5" pos:end="19:68"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:9">entry</name><operator pos:start="19:10" pos:end="19:10">.</operator><name pos:start="19:11" pos:end="19:17">command</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <call pos:start="19:21" pos:end="19:68"><name pos:start="19:21" pos:end="19:31">cpu_to_le32</name><argument_list pos:start="19:32" pos:end="19:68">(<argument pos:start="19:33" pos:end="19:67"><expr pos:start="19:33" pos:end="19:67"><name pos:start="19:33" pos:end="19:67">BIOS_LINKER_LOADER_COMMAND_ALLOCATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:9">entry</name><operator pos:start="21:10" pos:end="21:10">.</operator><name pos:start="21:11" pos:end="21:15">alloc</name><operator pos:start="21:16" pos:end="21:16">.</operator><name pos:start="21:17" pos:end="21:21">align</name></name> <operator pos:start="21:23" pos:end="21:23">=</operator> <call pos:start="21:25" pos:end="21:48"><name pos:start="21:25" pos:end="21:35">cpu_to_le32</name><argument_list pos:start="21:36" pos:end="21:48">(<argument pos:start="21:37" pos:end="21:47"><expr pos:start="21:37" pos:end="21:47"><name pos:start="21:37" pos:end="21:47">alloc_align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="27:72"><expr pos:start="23:5" pos:end="27:71"><name pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:9">entry</name><operator pos:start="23:10" pos:end="23:10">.</operator><name pos:start="23:11" pos:end="23:15">alloc</name><operator pos:start="23:16" pos:end="23:16">.</operator><name pos:start="23:17" pos:end="23:20">zone</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <call pos:start="23:24" pos:end="27:71"><name pos:start="23:24" pos:end="23:34">cpu_to_le32</name><argument_list pos:start="23:35" pos:end="27:71">(<argument pos:start="23:36" pos:end="27:70"><expr pos:start="23:36" pos:end="27:70"><ternary pos:start="23:36" pos:end="27:70"><condition pos:start="23:36" pos:end="23:47"><expr pos:start="23:36" pos:end="23:45"><name pos:start="23:36" pos:end="23:45">alloc_fseg</name></expr> ?</condition><then pos:start="25:37" pos:end="25:70">

                                    <expr pos:start="25:37" pos:end="25:70"><name pos:start="25:37" pos:end="25:70">BIOS_LINKER_LOADER_ALLOC_ZONE_FSEG</name></expr> </then><else pos:start="25:72" pos:end="27:70">:

                                    <expr pos:start="27:37" pos:end="27:70"><name pos:start="27:37" pos:end="27:70">BIOS_LINKER_LOADER_ALLOC_ZONE_HIGH</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:56">/* Alloc entries must come first, so prepend them */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><call pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:23">g_array_prepend_val</name><argument_list pos:start="33:24" pos:end="33:38">(<argument pos:start="33:25" pos:end="33:30"><expr pos:start="33:25" pos:end="33:30"><name pos:start="33:25" pos:end="33:30">linker</name></expr></argument>, <argument pos:start="33:33" pos:end="33:37"><expr pos:start="33:33" pos:end="33:37"><name pos:start="33:33" pos:end="33:37">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
