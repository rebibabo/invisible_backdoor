<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4491.c" pos:tabs="8"><function pos:start="1:1" pos:end="1713:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">transcode</name><parameter_list pos:start="1:21" pos:end="9:66">(<parameter pos:start="1:22" pos:end="1:51"><decl pos:start="1:22" pos:end="1:51"><type pos:start="1:22" pos:end="1:51"><name pos:start="1:22" pos:end="1:36">AVFormatContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier><modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:51">output_files</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:40"><decl pos:start="3:22" pos:end="3:40"><type pos:start="3:22" pos:end="3:40"><name pos:start="3:22" pos:end="3:24">int</name></type> <name pos:start="3:26" pos:end="3:40">nb_output_files</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:50"><decl pos:start="5:22" pos:end="5:50"><type pos:start="5:22" pos:end="5:50"><name pos:start="5:22" pos:end="5:36">AVFormatContext</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier><modifier pos:start="5:39" pos:end="5:39">*</modifier></type><name pos:start="5:40" pos:end="5:50">input_files</name></decl></parameter>,

                     <parameter pos:start="7:22" pos:end="7:39"><decl pos:start="7:22" pos:end="7:39"><type pos:start="7:22" pos:end="7:39"><name pos:start="7:22" pos:end="7:24">int</name></type> <name pos:start="7:26" pos:end="7:39">nb_input_files</name></decl></parameter>,

                     <parameter pos:start="9:22" pos:end="9:45"><decl pos:start="9:22" pos:end="9:45"><type pos:start="9:22" pos:end="9:45"><name pos:start="9:22" pos:end="9:32">AVStreamMap</name> <modifier pos:start="9:34" pos:end="9:34">*</modifier></type><name pos:start="9:35" pos:end="9:45">stream_maps</name></decl></parameter>, <parameter pos:start="9:48" pos:end="9:65"><decl pos:start="9:48" pos:end="9:65"><type pos:start="9:48" pos:end="9:65"><name pos:start="9:48" pos:end="9:50">int</name></type> <name pos:start="9:52" pos:end="9:65">nb_stream_maps</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="1713:1">{<block_content pos:start="13:5" pos:end="1711:15">

    <decl_stmt pos:start="13:5" pos:end="13:68"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>, <decl pos:start="13:18" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:18">i</name></decl>, <decl pos:start="13:21" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:21">j</name></decl>, <decl pos:start="13:24" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:24">k</name></decl>, <decl pos:start="13:27" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:27" pos:end="13:27">n</name></decl>, <decl pos:start="13:30" pos:end="13:44"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:30" pos:end="13:40">nb_istreams</name> <init pos:start="13:42" pos:end="13:44">= <expr pos:start="13:44" pos:end="13:44"><literal type="number" pos:start="13:44" pos:end="13:44">0</literal></expr></init></decl>, <decl pos:start="13:47" pos:end="13:61"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:47" pos:end="13:57">nb_ostreams</name> <init pos:start="13:59" pos:end="13:61">= <expr pos:start="13:61" pos:end="13:61"><literal type="number" pos:start="13:61" pos:end="13:61">0</literal></expr></init></decl>, <decl pos:start="13:64" pos:end="13:67"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:64" pos:end="13:67">step</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:19">AVFormatContext</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:23">is</name></decl>, <decl pos:start="15:26" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:21"><modifier pos:start="15:26" pos:end="15:26">*</modifier></type><name pos:start="15:27" pos:end="15:28">os</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:18">AVCodecContext</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:25">codec</name></decl>, <decl pos:start="17:28" pos:end="17:34"><type ref="prev" pos:start="17:5" pos:end="17:20"><modifier pos:start="17:28" pos:end="17:28">*</modifier></type><name pos:start="17:29" pos:end="17:34">icodec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:44"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:18">AVOutputStream</name> <modifier pos:start="19:20" pos:end="19:20">*</modifier></type><name pos:start="19:21" pos:end="19:23">ost</name></decl>, <decl pos:start="19:26" pos:end="19:43"><type ref="prev" pos:start="19:5" pos:end="19:20"><modifier pos:start="19:26" pos:end="19:26">*</modifier><modifier pos:start="19:27" pos:end="19:27">*</modifier></type><name pos:start="19:28" pos:end="19:36">ost_table</name> <init pos:start="19:38" pos:end="19:43">= <expr pos:start="19:40" pos:end="19:43"><name pos:start="19:40" pos:end="19:43">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:43"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:17">AVInputStream</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:22">ist</name></decl>, <decl pos:start="21:25" pos:end="21:42"><type ref="prev" pos:start="21:5" pos:end="21:19"><modifier pos:start="21:25" pos:end="21:25">*</modifier><modifier pos:start="21:26" pos:end="21:26">*</modifier></type><name pos:start="21:27" pos:end="21:35">ist_table</name> <init pos:start="21:37" pos:end="21:42">= <expr pos:start="21:39" pos:end="21:42"><name pos:start="21:39" pos:end="21:42">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:27"><type pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:15">AVInputFile</name> <modifier pos:start="23:17" pos:end="23:17">*</modifier></type><name pos:start="23:18" pos:end="23:27">file_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:8"><name pos:start="25:5" pos:end="25:8">char</name></type> <name pos:start="25:10" pos:end="25:20"><name pos:start="25:10" pos:end="25:14">error</name><index pos:start="25:15" pos:end="25:20">[<expr pos:start="25:16" pos:end="25:19"><literal type="number" pos:start="25:16" pos:end="25:19">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:12"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">key</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:21"><decl pos:start="29:5" pos:end="29:20"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:16">want_sdp</name> <init pos:start="29:18" pos:end="29:20">= <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:37"><decl pos:start="31:5" pos:end="31:36"><type pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:11">uint8_t</name></type> <name pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:21">no_packet</name><index pos:start="31:22" pos:end="31:32">[<expr pos:start="31:23" pos:end="31:31"><name pos:start="31:23" pos:end="31:31">MAX_FILES</name></expr>]</index></name><init pos:start="31:33" pos:end="31:36">=<expr pos:start="31:34" pos:end="31:36"><block pos:start="31:34" pos:end="31:36">{<expr pos:start="31:35" pos:end="31:35"><literal type="number" pos:start="31:35" pos:end="31:35">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:26"><decl pos:start="33:5" pos:end="33:25"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:23">no_packet_count</name><init pos:start="33:24" pos:end="33:25">=<expr pos:start="33:25" pos:end="33:25"><literal type="number" pos:start="33:25" pos:end="33:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:48"><decl pos:start="35:5" pos:end="35:47"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:26">nb_frame_threshold</name><index pos:start="35:27" pos:end="35:43">[<expr pos:start="35:28" pos:end="35:42"><name pos:start="35:28" pos:end="35:42">AVMEDIA_TYPE_NB</name></expr>]</index></name><init pos:start="35:44" pos:end="35:47">=<expr pos:start="35:45" pos:end="35:47"><block pos:start="35:45" pos:end="35:47">{<expr pos:start="35:46" pos:end="35:46"><literal type="number" pos:start="35:46" pos:end="35:46">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:40"><decl pos:start="37:5" pos:end="37:39"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:35"><name pos:start="37:9" pos:end="37:18">nb_streams</name><index pos:start="37:19" pos:end="37:35">[<expr pos:start="37:20" pos:end="37:34"><name pos:start="37:20" pos:end="37:34">AVMEDIA_TYPE_NB</name></expr>]</index></name><init pos:start="37:36" pos:end="37:39">=<expr pos:start="37:37" pos:end="37:39"><block pos:start="37:37" pos:end="37:39">{<expr pos:start="37:38" pos:end="37:38"><literal type="number" pos:start="37:38" pos:end="37:38">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:65"><expr pos:start="41:5" pos:end="41:64"><name pos:start="41:5" pos:end="41:14">file_table</name><operator pos:start="41:15" pos:end="41:15">=</operator> <call pos:start="41:17" pos:end="41:64"><name pos:start="41:17" pos:end="41:26">av_mallocz</name><argument_list pos:start="41:27" pos:end="41:64">(<argument pos:start="41:28" pos:end="41:63"><expr pos:start="41:28" pos:end="41:63"><name pos:start="41:28" pos:end="41:41">nb_input_files</name> <operator pos:start="41:43" pos:end="41:43">*</operator> <sizeof pos:start="41:45" pos:end="41:63">sizeof<argument_list pos:start="41:51" pos:end="41:63">(<argument pos:start="41:52" pos:end="41:62"><expr pos:start="41:52" pos:end="41:62"><name pos:start="41:52" pos:end="41:62">AVInputFile</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:18"><if pos:start="43:5" pos:end="45:18">if <condition pos:start="43:8" pos:end="43:20">(<expr pos:start="43:9" pos:end="43:19"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:19">file_table</name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:18"><block_content pos:start="45:9" pos:end="45:18">

        <goto pos:start="45:9" pos:end="45:18">goto <name pos:start="45:14" pos:end="45:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:27">/* input stream init */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:10"><expr pos:start="51:5" pos:end="51:9"><name pos:start="51:5" pos:end="51:5">j</name> <operator pos:start="51:7" pos:end="51:7">=</operator> <literal type="number" pos:start="51:9" pos:end="51:9">0</literal></expr>;</expr_stmt>

    <for pos:start="53:5" pos:end="63:5">for<control pos:start="53:8" pos:end="53:33">(<init pos:start="53:9" pos:end="53:12"><expr pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:9">i</name><operator pos:start="53:10" pos:end="53:10">=</operator><literal type="number" pos:start="53:11" pos:end="53:11">0</literal></expr>;</init><condition pos:start="53:13" pos:end="53:29"><expr pos:start="53:13" pos:end="53:28"><name pos:start="53:13" pos:end="53:13">i</name><operator pos:start="53:14" pos:end="53:14">&lt;</operator><name pos:start="53:15" pos:end="53:28">nb_input_files</name></expr>;</condition><incr pos:start="53:30" pos:end="53:32"><expr pos:start="53:30" pos:end="53:32"><name pos:start="53:30" pos:end="53:30">i</name><operator pos:start="53:31" pos:end="53:32">++</operator></expr></incr>)</control> <block pos:start="53:35" pos:end="63:5">{<block_content pos:start="55:9" pos:end="61:28">

        <expr_stmt pos:start="55:9" pos:end="55:28"><expr pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:10">is</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <name pos:start="55:14" pos:end="55:27"><name pos:start="55:14" pos:end="55:24">input_files</name><index pos:start="55:25" pos:end="55:27">[<expr pos:start="55:26" pos:end="55:26"><name pos:start="55:26" pos:end="55:26">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:36"><expr pos:start="57:9" pos:end="57:35"><name pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:18">file_table</name><index pos:start="57:19" pos:end="57:21">[<expr pos:start="57:20" pos:end="57:20"><name pos:start="57:20" pos:end="57:20">i</name></expr>]</index></name><operator pos:start="57:22" pos:end="57:22">.</operator><name pos:start="57:23" pos:end="57:31">ist_index</name> <operator pos:start="57:33" pos:end="57:33">=</operator> <name pos:start="57:35" pos:end="57:35">j</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:50"><expr pos:start="59:9" pos:end="59:49"><name pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:18">file_table</name><index pos:start="59:19" pos:end="59:21">[<expr pos:start="59:20" pos:end="59:20"><name pos:start="59:20" pos:end="59:20">i</name></expr>]</index></name><operator pos:start="59:22" pos:end="59:22">.</operator><name pos:start="59:23" pos:end="59:32">nb_streams</name> <operator pos:start="59:34" pos:end="59:34">=</operator> <name pos:start="59:36" pos:end="59:49"><name pos:start="59:36" pos:end="59:37">is</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:49">nb_streams</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:28"><expr pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:9">j</name> <operator pos:start="61:11" pos:end="61:12">+=</operator> <name pos:start="61:14" pos:end="61:27"><name pos:start="61:14" pos:end="61:15">is</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:27">nb_streams</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="65:5" pos:end="65:20"><expr pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:15">nb_istreams</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:19">j</name></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:66"><expr pos:start="69:5" pos:end="69:65"><name pos:start="69:5" pos:end="69:13">ist_table</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <call pos:start="69:17" pos:end="69:65"><name pos:start="69:17" pos:end="69:26">av_mallocz</name><argument_list pos:start="69:27" pos:end="69:65">(<argument pos:start="69:28" pos:end="69:64"><expr pos:start="69:28" pos:end="69:64"><name pos:start="69:28" pos:end="69:38">nb_istreams</name> <operator pos:start="69:40" pos:end="69:40">*</operator> <sizeof pos:start="69:42" pos:end="69:64">sizeof<argument_list pos:start="69:48" pos:end="69:64">(<argument pos:start="69:49" pos:end="69:63"><expr pos:start="69:49" pos:end="69:63"><name pos:start="69:49" pos:end="69:61">AVInputStream</name> <operator pos:start="69:63" pos:end="69:63">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="73:18"><if pos:start="71:5" pos:end="73:18">if <condition pos:start="71:8" pos:end="71:19">(<expr pos:start="71:9" pos:end="71:18"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:18">ist_table</name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:18"><block_content pos:start="73:9" pos:end="73:18">

        <goto pos:start="73:9" pos:end="73:18">goto <name pos:start="73:14" pos:end="73:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="77:5" pos:end="87:5">for<control pos:start="77:8" pos:end="77:30">(<init pos:start="77:9" pos:end="77:12"><expr pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:9">i</name><operator pos:start="77:10" pos:end="77:10">=</operator><literal type="number" pos:start="77:11" pos:end="77:11">0</literal></expr>;</init><condition pos:start="77:13" pos:end="77:26"><expr pos:start="77:13" pos:end="77:25"><name pos:start="77:13" pos:end="77:13">i</name><operator pos:start="77:14" pos:end="77:14">&lt;</operator><name pos:start="77:15" pos:end="77:25">nb_istreams</name></expr>;</condition><incr pos:start="77:27" pos:end="77:29"><expr pos:start="77:27" pos:end="77:29"><name pos:start="77:27" pos:end="77:27">i</name><operator pos:start="77:28" pos:end="77:29">++</operator></expr></incr>)</control> <block pos:start="77:32" pos:end="87:5">{<block_content pos:start="79:9" pos:end="85:27">

        <expr_stmt pos:start="79:9" pos:end="79:48"><expr pos:start="79:9" pos:end="79:47"><name pos:start="79:9" pos:end="79:11">ist</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:47"><name pos:start="79:15" pos:end="79:24">av_mallocz</name><argument_list pos:start="79:25" pos:end="79:47">(<argument pos:start="79:26" pos:end="79:46"><expr pos:start="79:26" pos:end="79:46"><sizeof pos:start="79:26" pos:end="79:46">sizeof<argument_list pos:start="79:32" pos:end="79:46">(<argument pos:start="79:33" pos:end="79:45"><expr pos:start="79:33" pos:end="79:45"><name pos:start="79:33" pos:end="79:45">AVInputStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="83:22"><if pos:start="81:9" pos:end="83:22">if <condition pos:start="81:12" pos:end="81:17">(<expr pos:start="81:13" pos:end="81:16"><operator pos:start="81:13" pos:end="81:13">!</operator><name pos:start="81:14" pos:end="81:16">ist</name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:22"><block_content pos:start="83:13" pos:end="83:22">

            <goto pos:start="83:13" pos:end="83:22">goto <name pos:start="83:18" pos:end="83:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:27"><expr pos:start="85:9" pos:end="85:26"><name pos:start="85:9" pos:end="85:20"><name pos:start="85:9" pos:end="85:17">ist_table</name><index pos:start="85:18" pos:end="85:20">[<expr pos:start="85:19" pos:end="85:19"><name pos:start="85:19" pos:end="85:19">i</name></expr>]</index></name> <operator pos:start="85:22" pos:end="85:22">=</operator> <name pos:start="85:24" pos:end="85:26">ist</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="89:5" pos:end="89:10"><expr pos:start="89:5" pos:end="89:9"><name pos:start="89:5" pos:end="89:5">j</name> <operator pos:start="89:7" pos:end="89:7">=</operator> <literal type="number" pos:start="89:9" pos:end="89:9">0</literal></expr>;</expr_stmt>

    <for pos:start="91:5" pos:end="119:5">for<control pos:start="91:8" pos:end="91:33">(<init pos:start="91:9" pos:end="91:12"><expr pos:start="91:9" pos:end="91:11"><name pos:start="91:9" pos:end="91:9">i</name><operator pos:start="91:10" pos:end="91:10">=</operator><literal type="number" pos:start="91:11" pos:end="91:11">0</literal></expr>;</init><condition pos:start="91:13" pos:end="91:29"><expr pos:start="91:13" pos:end="91:28"><name pos:start="91:13" pos:end="91:13">i</name><operator pos:start="91:14" pos:end="91:14">&lt;</operator><name pos:start="91:15" pos:end="91:28">nb_input_files</name></expr>;</condition><incr pos:start="91:30" pos:end="91:32"><expr pos:start="91:30" pos:end="91:32"><name pos:start="91:30" pos:end="91:30">i</name><operator pos:start="91:31" pos:end="91:32">++</operator></expr></incr>)</control> <block pos:start="91:35" pos:end="119:5">{<block_content pos:start="93:9" pos:end="117:9">

        <expr_stmt pos:start="93:9" pos:end="93:28"><expr pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:10">is</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <name pos:start="93:14" pos:end="93:27"><name pos:start="93:14" pos:end="93:24">input_files</name><index pos:start="93:25" pos:end="93:27">[<expr pos:start="93:26" pos:end="93:26"><name pos:start="93:26" pos:end="93:26">i</name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="95:9" pos:end="117:9">for<control pos:start="95:12" pos:end="95:37">(<init pos:start="95:13" pos:end="95:16"><expr pos:start="95:13" pos:end="95:15"><name pos:start="95:13" pos:end="95:13">k</name><operator pos:start="95:14" pos:end="95:14">=</operator><literal type="number" pos:start="95:15" pos:end="95:15">0</literal></expr>;</init><condition pos:start="95:17" pos:end="95:33"><expr pos:start="95:17" pos:end="95:32"><name pos:start="95:17" pos:end="95:17">k</name><operator pos:start="95:18" pos:end="95:18">&lt;</operator><name pos:start="95:19" pos:end="95:32"><name pos:start="95:19" pos:end="95:20">is</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:32">nb_streams</name></name></expr>;</condition><incr pos:start="95:34" pos:end="95:36"><expr pos:start="95:34" pos:end="95:36"><name pos:start="95:34" pos:end="95:34">k</name><operator pos:start="95:35" pos:end="95:36">++</operator></expr></incr>)</control> <block pos:start="95:39" pos:end="117:9">{<block_content pos:start="97:13" pos:end="115:13">

            <expr_stmt pos:start="97:13" pos:end="97:33"><expr pos:start="97:13" pos:end="97:32"><name pos:start="97:13" pos:end="97:15">ist</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <name pos:start="97:19" pos:end="97:32"><name pos:start="97:19" pos:end="97:27">ist_table</name><index pos:start="97:28" pos:end="97:32">[<expr pos:start="97:29" pos:end="97:31"><name pos:start="97:29" pos:end="97:29">j</name><operator pos:start="97:30" pos:end="97:31">++</operator></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:37"><expr pos:start="99:13" pos:end="99:36"><name pos:start="99:13" pos:end="99:19"><name pos:start="99:13" pos:end="99:15">ist</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:19">st</name></name> <operator pos:start="99:21" pos:end="99:21">=</operator> <name pos:start="99:23" pos:end="99:36"><name pos:start="99:23" pos:end="99:24">is</name><operator pos:start="99:25" pos:end="99:26">-&gt;</operator><name pos:start="99:27" pos:end="99:33">streams</name><index pos:start="99:34" pos:end="99:36">[<expr pos:start="99:35" pos:end="99:35"><name pos:start="99:35" pos:end="99:35">k</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:32"><expr pos:start="101:13" pos:end="101:31"><name pos:start="101:13" pos:end="101:27"><name pos:start="101:13" pos:end="101:15">ist</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:27">file_index</name></name> <operator pos:start="101:29" pos:end="101:29">=</operator> <name pos:start="101:31" pos:end="101:31">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:27"><expr pos:start="103:13" pos:end="103:26"><name pos:start="103:13" pos:end="103:22"><name pos:start="103:13" pos:end="103:15">ist</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:22">index</name></name> <operator pos:start="103:24" pos:end="103:24">=</operator> <name pos:start="103:26" pos:end="103:26">k</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:29"><expr pos:start="105:13" pos:end="105:28"><name pos:start="105:13" pos:end="105:24"><name pos:start="105:13" pos:end="105:15">ist</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:24">discard</name></name> <operator pos:start="105:26" pos:end="105:26">=</operator> <literal type="number" pos:start="105:28" pos:end="105:28">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="105:31" pos:end="107:51">/* the stream is discarded by default

                                 (changed later) */</comment>



            <if_stmt pos:start="111:13" pos:end="115:13"><if pos:start="111:13" pos:end="115:13">if <condition pos:start="111:16" pos:end="111:25">(<expr pos:start="111:17" pos:end="111:24"><name pos:start="111:17" pos:end="111:24">rate_emu</name></expr>)</condition> <block pos:start="111:27" pos:end="115:13">{<block_content pos:start="113:17" pos:end="113:42">

                <expr_stmt pos:start="113:17" pos:end="113:42"><expr pos:start="113:17" pos:end="113:41"><name pos:start="113:17" pos:end="113:26"><name pos:start="113:17" pos:end="113:19">ist</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:26">start</name></name> <operator pos:start="113:28" pos:end="113:28">=</operator> <call pos:start="113:30" pos:end="113:41"><name pos:start="113:30" pos:end="113:39">av_gettime</name><argument_list pos:start="113:40" pos:end="113:41">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="123:5" pos:end="123:28">/* output stream init */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:20"><expr pos:start="125:5" pos:end="125:19"><name pos:start="125:5" pos:end="125:15">nb_ostreams</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <literal type="number" pos:start="125:19" pos:end="125:19">0</literal></expr>;</expr_stmt>

    <for pos:start="127:5" pos:end="145:5">for<control pos:start="127:8" pos:end="127:34">(<init pos:start="127:9" pos:end="127:12"><expr pos:start="127:9" pos:end="127:11"><name pos:start="127:9" pos:end="127:9">i</name><operator pos:start="127:10" pos:end="127:10">=</operator><literal type="number" pos:start="127:11" pos:end="127:11">0</literal></expr>;</init><condition pos:start="127:13" pos:end="127:30"><expr pos:start="127:13" pos:end="127:29"><name pos:start="127:13" pos:end="127:13">i</name><operator pos:start="127:14" pos:end="127:14">&lt;</operator><name pos:start="127:15" pos:end="127:29">nb_output_files</name></expr>;</condition><incr pos:start="127:31" pos:end="127:33"><expr pos:start="127:31" pos:end="127:33"><name pos:start="127:31" pos:end="127:31">i</name><operator pos:start="127:32" pos:end="127:33">++</operator></expr></incr>)</control> <block pos:start="127:36" pos:end="145:5">{<block_content pos:start="129:9" pos:end="143:38">

        <expr_stmt pos:start="129:9" pos:end="129:29"><expr pos:start="129:9" pos:end="129:28"><name pos:start="129:9" pos:end="129:10">os</name> <operator pos:start="129:12" pos:end="129:12">=</operator> <name pos:start="129:14" pos:end="129:28"><name pos:start="129:14" pos:end="129:25">output_files</name><index pos:start="129:26" pos:end="129:28">[<expr pos:start="129:27" pos:end="129:27"><name pos:start="129:27" pos:end="129:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="131:9" pos:end="141:9"><if pos:start="131:9" pos:end="141:9">if <condition pos:start="131:12" pos:end="131:71">(<expr pos:start="131:13" pos:end="131:70"><operator pos:start="131:13" pos:end="131:13">!</operator><name pos:start="131:14" pos:end="131:27"><name pos:start="131:14" pos:end="131:15">os</name><operator pos:start="131:16" pos:end="131:17">-&gt;</operator><name pos:start="131:18" pos:end="131:27">nb_streams</name></name> <operator pos:start="131:29" pos:end="131:30">&amp;&amp;</operator> <operator pos:start="131:32" pos:end="131:32">!</operator><operator pos:start="131:33" pos:end="131:33">(</operator><name pos:start="131:34" pos:end="131:51"><name pos:start="131:34" pos:end="131:35">os</name><operator pos:start="131:36" pos:end="131:37">-&gt;</operator><name pos:start="131:38" pos:end="131:44">oformat</name><operator pos:start="131:45" pos:end="131:46">-&gt;</operator><name pos:start="131:47" pos:end="131:51">flags</name></name> <operator pos:start="131:53" pos:end="131:53">&amp;</operator> <name pos:start="131:55" pos:end="131:69">AVFMT_NOSTREAMS</name><operator pos:start="131:70" pos:end="131:70">)</operator></expr>)</condition> <block pos:start="131:73" pos:end="141:9">{<block_content pos:start="133:13" pos:end="139:22">

            <expr_stmt pos:start="133:13" pos:end="133:77"><expr pos:start="133:13" pos:end="133:76"><call pos:start="133:13" pos:end="133:76"><name pos:start="133:13" pos:end="133:26">av_dump_format</name><argument_list pos:start="133:27" pos:end="133:76">(<argument pos:start="133:28" pos:end="133:42"><expr pos:start="133:28" pos:end="133:42"><name pos:start="133:28" pos:end="133:42"><name pos:start="133:28" pos:end="133:39">output_files</name><index pos:start="133:40" pos:end="133:42">[<expr pos:start="133:41" pos:end="133:41"><name pos:start="133:41" pos:end="133:41">i</name></expr>]</index></name></expr></argument>, <argument pos:start="133:45" pos:end="133:45"><expr pos:start="133:45" pos:end="133:45"><name pos:start="133:45" pos:end="133:45">i</name></expr></argument>, <argument pos:start="133:48" pos:end="133:72"><expr pos:start="133:48" pos:end="133:72"><name pos:start="133:48" pos:end="133:62"><name pos:start="133:48" pos:end="133:59">output_files</name><index pos:start="133:60" pos:end="133:62">[<expr pos:start="133:61" pos:end="133:61"><name pos:start="133:61" pos:end="133:61">i</name></expr>]</index></name><operator pos:start="133:63" pos:end="133:64">-&gt;</operator><name pos:start="133:65" pos:end="133:72">filename</name></expr></argument>, <argument pos:start="133:75" pos:end="133:75"><expr pos:start="133:75" pos:end="133:75"><literal type="number" pos:start="133:75" pos:end="133:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:80"><expr pos:start="135:13" pos:end="135:79"><call pos:start="135:13" pos:end="135:79"><name pos:start="135:13" pos:end="135:19">fprintf</name><argument_list pos:start="135:20" pos:end="135:79">(<argument pos:start="135:21" pos:end="135:26"><expr pos:start="135:21" pos:end="135:26"><name pos:start="135:21" pos:end="135:26">stderr</name></expr></argument>, <argument pos:start="135:29" pos:end="135:75"><expr pos:start="135:29" pos:end="135:75"><literal type="string" pos:start="135:29" pos:end="135:75">"Output file #%d does not contain any stream\n"</literal></expr></argument>, <argument pos:start="135:78" pos:end="135:78"><expr pos:start="135:78" pos:end="135:78"><name pos:start="135:78" pos:end="135:78">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:34"><expr pos:start="137:13" pos:end="137:33"><name pos:start="137:13" pos:end="137:15">ret</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <call pos:start="137:19" pos:end="137:33"><name pos:start="137:19" pos:end="137:25">AVERROR</name><argument_list pos:start="137:26" pos:end="137:33">(<argument pos:start="137:27" pos:end="137:32"><expr pos:start="137:27" pos:end="137:32"><name pos:start="137:27" pos:end="137:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="139:13" pos:end="139:22">goto <name pos:start="139:18" pos:end="139:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:38"><expr pos:start="143:9" pos:end="143:37"><name pos:start="143:9" pos:end="143:19">nb_ostreams</name> <operator pos:start="143:21" pos:end="143:22">+=</operator> <name pos:start="143:24" pos:end="143:37"><name pos:start="143:24" pos:end="143:25">os</name><operator pos:start="143:26" pos:end="143:27">-&gt;</operator><name pos:start="143:28" pos:end="143:37">nb_streams</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="147:5" pos:end="155:5"><if pos:start="147:5" pos:end="155:5">if <condition pos:start="147:8" pos:end="147:60">(<expr pos:start="147:9" pos:end="147:59"><name pos:start="147:9" pos:end="147:22">nb_stream_maps</name> <operator pos:start="147:24" pos:end="147:24">&gt;</operator> <literal type="number" pos:start="147:26" pos:end="147:26">0</literal> <operator pos:start="147:28" pos:end="147:29">&amp;&amp;</operator> <name pos:start="147:31" pos:end="147:44">nb_stream_maps</name> <operator pos:start="147:46" pos:end="147:47">!=</operator> <name pos:start="147:49" pos:end="147:59">nb_ostreams</name></expr>)</condition> <block pos:start="147:62" pos:end="155:5">{<block_content pos:start="149:9" pos:end="153:18">

        <expr_stmt pos:start="149:9" pos:end="149:87"><expr pos:start="149:9" pos:end="149:86"><call pos:start="149:9" pos:end="149:86"><name pos:start="149:9" pos:end="149:15">fprintf</name><argument_list pos:start="149:16" pos:end="149:86">(<argument pos:start="149:17" pos:end="149:22"><expr pos:start="149:17" pos:end="149:22"><name pos:start="149:17" pos:end="149:22">stderr</name></expr></argument>, <argument pos:start="149:25" pos:end="149:85"><expr pos:start="149:25" pos:end="149:85"><literal type="string" pos:start="149:25" pos:end="149:85">"Number of stream maps must match number of output streams\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:30"><expr pos:start="151:9" pos:end="151:29"><name pos:start="151:9" pos:end="151:11">ret</name> <operator pos:start="151:13" pos:end="151:13">=</operator> <call pos:start="151:15" pos:end="151:29"><name pos:start="151:15" pos:end="151:21">AVERROR</name><argument_list pos:start="151:22" pos:end="151:29">(<argument pos:start="151:23" pos:end="151:28"><expr pos:start="151:23" pos:end="151:28"><name pos:start="151:23" pos:end="151:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="153:9" pos:end="153:18">goto <name pos:start="153:14" pos:end="153:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="159:5" pos:end="159:78">/* Sanity check the mapping args -- do the input files &amp; streams exist? */</comment>

    <for pos:start="161:5" pos:end="197:5">for<control pos:start="161:8" pos:end="161:33">(<init pos:start="161:9" pos:end="161:12"><expr pos:start="161:9" pos:end="161:11"><name pos:start="161:9" pos:end="161:9">i</name><operator pos:start="161:10" pos:end="161:10">=</operator><literal type="number" pos:start="161:11" pos:end="161:11">0</literal></expr>;</init><condition pos:start="161:13" pos:end="161:29"><expr pos:start="161:13" pos:end="161:28"><name pos:start="161:13" pos:end="161:13">i</name><operator pos:start="161:14" pos:end="161:14">&lt;</operator><name pos:start="161:15" pos:end="161:28">nb_stream_maps</name></expr>;</condition><incr pos:start="161:30" pos:end="161:32"><expr pos:start="161:30" pos:end="161:32"><name pos:start="161:30" pos:end="161:30">i</name><operator pos:start="161:31" pos:end="161:32">++</operator></expr></incr>)</control> <block pos:start="161:35" pos:end="197:5">{<block_content pos:start="163:9" pos:end="195:9">

        <decl_stmt pos:start="163:9" pos:end="163:43"><decl pos:start="163:9" pos:end="163:42"><type pos:start="163:9" pos:end="163:11"><name pos:start="163:9" pos:end="163:11">int</name></type> <name pos:start="163:13" pos:end="163:14">fi</name> <init pos:start="163:16" pos:end="163:42">= <expr pos:start="163:18" pos:end="163:42"><name pos:start="163:18" pos:end="163:31"><name pos:start="163:18" pos:end="163:28">stream_maps</name><index pos:start="163:29" pos:end="163:31">[<expr pos:start="163:30" pos:end="163:30"><name pos:start="163:30" pos:end="163:30">i</name></expr>]</index></name><operator pos:start="163:32" pos:end="163:32">.</operator><name pos:start="163:33" pos:end="163:42">file_index</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="165:9" pos:end="165:45"><decl pos:start="165:9" pos:end="165:44"><type pos:start="165:9" pos:end="165:11"><name pos:start="165:9" pos:end="165:11">int</name></type> <name pos:start="165:13" pos:end="165:14">si</name> <init pos:start="165:16" pos:end="165:44">= <expr pos:start="165:18" pos:end="165:44"><name pos:start="165:18" pos:end="165:31"><name pos:start="165:18" pos:end="165:28">stream_maps</name><index pos:start="165:29" pos:end="165:31">[<expr pos:start="165:30" pos:end="165:30"><name pos:start="165:30" pos:end="165:30">i</name></expr>]</index></name><operator pos:start="165:32" pos:end="165:32">.</operator><name pos:start="165:33" pos:end="165:44">stream_index</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="169:9" pos:end="179:9"><if pos:start="169:9" pos:end="179:9">if <condition pos:start="169:12" pos:end="171:57">(<expr pos:start="169:13" pos:end="171:56"><name pos:start="169:13" pos:end="169:26"><name pos:start="169:13" pos:end="169:14">fi</name> <argument_list type="generic" pos:start="169:16" pos:end="169:26">&lt; <argument pos:start="169:18" pos:end="169:24"><expr pos:start="169:18" pos:end="169:24"><literal type="number" pos:start="169:18" pos:end="169:18">0</literal> <operator pos:start="169:20" pos:end="169:21">||</operator> <name pos:start="169:23" pos:end="169:24">fi</name></expr></argument> &gt;</argument_list></name> <name pos:start="169:28" pos:end="169:41">nb_input_files</name> <operator pos:start="169:43" pos:end="169:43">-</operator> <literal type="number" pos:start="169:45" pos:end="169:45">1</literal> <operator pos:start="169:47" pos:end="169:48">||</operator>

            <name pos:start="171:13" pos:end="171:26"><name pos:start="171:13" pos:end="171:14">si</name> <argument_list type="generic" pos:start="171:16" pos:end="171:26">&lt; <argument pos:start="171:18" pos:end="171:24"><expr pos:start="171:18" pos:end="171:24"><literal type="number" pos:start="171:18" pos:end="171:18">0</literal> <operator pos:start="171:20" pos:end="171:21">||</operator> <name pos:start="171:23" pos:end="171:24">si</name></expr></argument> &gt;</argument_list></name> <name pos:start="171:28" pos:end="171:41"><name pos:start="171:28" pos:end="171:37">file_table</name><index pos:start="171:38" pos:end="171:41">[<expr pos:start="171:39" pos:end="171:40"><name pos:start="171:39" pos:end="171:40">fi</name></expr>]</index></name><operator pos:start="171:42" pos:end="171:42">.</operator><name pos:start="171:43" pos:end="171:52">nb_streams</name> <operator pos:start="171:54" pos:end="171:54">-</operator> <literal type="number" pos:start="171:56" pos:end="171:56">1</literal></expr>)</condition> <block pos:start="171:59" pos:end="179:9">{<block_content pos:start="173:13" pos:end="177:22">

            <expr_stmt pos:start="173:13" pos:end="173:75"><expr pos:start="173:13" pos:end="173:74"><call pos:start="173:13" pos:end="173:74"><name pos:start="173:13" pos:end="173:19">fprintf</name><argument_list pos:start="173:20" pos:end="173:74">(<argument pos:start="173:21" pos:end="173:26"><expr pos:start="173:21" pos:end="173:26"><name pos:start="173:21" pos:end="173:26">stderr</name></expr></argument>,<argument pos:start="173:28" pos:end="173:65"><expr pos:start="173:28" pos:end="173:65"><literal type="string" pos:start="173:28" pos:end="173:65">"Could not find input stream #%d.%d\n"</literal></expr></argument>, <argument pos:start="173:68" pos:end="173:69"><expr pos:start="173:68" pos:end="173:69"><name pos:start="173:68" pos:end="173:69">fi</name></expr></argument>, <argument pos:start="173:72" pos:end="173:73"><expr pos:start="173:72" pos:end="173:73"><name pos:start="173:72" pos:end="173:73">si</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:34"><expr pos:start="175:13" pos:end="175:33"><name pos:start="175:13" pos:end="175:15">ret</name> <operator pos:start="175:17" pos:end="175:17">=</operator> <call pos:start="175:19" pos:end="175:33"><name pos:start="175:19" pos:end="175:25">AVERROR</name><argument_list pos:start="175:26" pos:end="175:33">(<argument pos:start="175:27" pos:end="175:32"><expr pos:start="175:27" pos:end="175:32"><name pos:start="175:27" pos:end="175:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="177:13" pos:end="177:22">goto <name pos:start="177:18" pos:end="177:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:44"><expr pos:start="181:9" pos:end="181:43"><name pos:start="181:9" pos:end="181:10">fi</name> <operator pos:start="181:12" pos:end="181:12">=</operator> <name pos:start="181:14" pos:end="181:27"><name pos:start="181:14" pos:end="181:24">stream_maps</name><index pos:start="181:25" pos:end="181:27">[<expr pos:start="181:26" pos:end="181:26"><name pos:start="181:26" pos:end="181:26">i</name></expr>]</index></name><operator pos:start="181:28" pos:end="181:28">.</operator><name pos:start="181:29" pos:end="181:43">sync_file_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:46"><expr pos:start="183:9" pos:end="183:45"><name pos:start="183:9" pos:end="183:10">si</name> <operator pos:start="183:12" pos:end="183:12">=</operator> <name pos:start="183:14" pos:end="183:27"><name pos:start="183:14" pos:end="183:24">stream_maps</name><index pos:start="183:25" pos:end="183:27">[<expr pos:start="183:26" pos:end="183:26"><name pos:start="183:26" pos:end="183:26">i</name></expr>]</index></name><operator pos:start="183:28" pos:end="183:28">.</operator><name pos:start="183:29" pos:end="183:45">sync_stream_index</name></expr>;</expr_stmt>

        <if_stmt pos:start="185:9" pos:end="195:9"><if pos:start="185:9" pos:end="195:9">if <condition pos:start="185:12" pos:end="187:57">(<expr pos:start="185:13" pos:end="187:56"><name pos:start="185:13" pos:end="185:26"><name pos:start="185:13" pos:end="185:14">fi</name> <argument_list type="generic" pos:start="185:16" pos:end="185:26">&lt; <argument pos:start="185:18" pos:end="185:24"><expr pos:start="185:18" pos:end="185:24"><literal type="number" pos:start="185:18" pos:end="185:18">0</literal> <operator pos:start="185:20" pos:end="185:21">||</operator> <name pos:start="185:23" pos:end="185:24">fi</name></expr></argument> &gt;</argument_list></name> <name pos:start="185:28" pos:end="185:41">nb_input_files</name> <operator pos:start="185:43" pos:end="185:43">-</operator> <literal type="number" pos:start="185:45" pos:end="185:45">1</literal> <operator pos:start="185:47" pos:end="185:48">||</operator>

            <name pos:start="187:13" pos:end="187:26"><name pos:start="187:13" pos:end="187:14">si</name> <argument_list type="generic" pos:start="187:16" pos:end="187:26">&lt; <argument pos:start="187:18" pos:end="187:24"><expr pos:start="187:18" pos:end="187:24"><literal type="number" pos:start="187:18" pos:end="187:18">0</literal> <operator pos:start="187:20" pos:end="187:21">||</operator> <name pos:start="187:23" pos:end="187:24">si</name></expr></argument> &gt;</argument_list></name> <name pos:start="187:28" pos:end="187:41"><name pos:start="187:28" pos:end="187:37">file_table</name><index pos:start="187:38" pos:end="187:41">[<expr pos:start="187:39" pos:end="187:40"><name pos:start="187:39" pos:end="187:40">fi</name></expr>]</index></name><operator pos:start="187:42" pos:end="187:42">.</operator><name pos:start="187:43" pos:end="187:52">nb_streams</name> <operator pos:start="187:54" pos:end="187:54">-</operator> <literal type="number" pos:start="187:56" pos:end="187:56">1</literal></expr>)</condition> <block pos:start="187:59" pos:end="195:9">{<block_content pos:start="189:13" pos:end="193:22">

            <expr_stmt pos:start="189:13" pos:end="189:74"><expr pos:start="189:13" pos:end="189:73"><call pos:start="189:13" pos:end="189:73"><name pos:start="189:13" pos:end="189:19">fprintf</name><argument_list pos:start="189:20" pos:end="189:73">(<argument pos:start="189:21" pos:end="189:26"><expr pos:start="189:21" pos:end="189:26"><name pos:start="189:21" pos:end="189:26">stderr</name></expr></argument>,<argument pos:start="189:28" pos:end="189:64"><expr pos:start="189:28" pos:end="189:64"><literal type="string" pos:start="189:28" pos:end="189:64">"Could not find sync stream #%d.%d\n"</literal></expr></argument>, <argument pos:start="189:67" pos:end="189:68"><expr pos:start="189:67" pos:end="189:68"><name pos:start="189:67" pos:end="189:68">fi</name></expr></argument>, <argument pos:start="189:71" pos:end="189:72"><expr pos:start="189:71" pos:end="189:72"><name pos:start="189:71" pos:end="189:72">si</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:34"><expr pos:start="191:13" pos:end="191:33"><name pos:start="191:13" pos:end="191:15">ret</name> <operator pos:start="191:17" pos:end="191:17">=</operator> <call pos:start="191:19" pos:end="191:33"><name pos:start="191:19" pos:end="191:25">AVERROR</name><argument_list pos:start="191:26" pos:end="191:33">(<argument pos:start="191:27" pos:end="191:32"><expr pos:start="191:27" pos:end="191:32"><name pos:start="191:27" pos:end="191:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="193:13" pos:end="193:22">goto <name pos:start="193:18" pos:end="193:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="201:5" pos:end="201:67"><expr pos:start="201:5" pos:end="201:66"><name pos:start="201:5" pos:end="201:13">ost_table</name> <operator pos:start="201:15" pos:end="201:15">=</operator> <call pos:start="201:17" pos:end="201:66"><name pos:start="201:17" pos:end="201:26">av_mallocz</name><argument_list pos:start="201:27" pos:end="201:66">(<argument pos:start="201:28" pos:end="201:65"><expr pos:start="201:28" pos:end="201:65"><sizeof pos:start="201:28" pos:end="201:51">sizeof<argument_list pos:start="201:34" pos:end="201:51">(<argument pos:start="201:35" pos:end="201:50"><expr pos:start="201:35" pos:end="201:50"><name pos:start="201:35" pos:end="201:48">AVOutputStream</name> <operator pos:start="201:50" pos:end="201:50">*</operator></expr></argument>)</argument_list></sizeof> <operator pos:start="201:53" pos:end="201:53">*</operator> <name pos:start="201:55" pos:end="201:65">nb_ostreams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="203:5" pos:end="205:18"><if pos:start="203:5" pos:end="205:18">if <condition pos:start="203:8" pos:end="203:19">(<expr pos:start="203:9" pos:end="203:18"><operator pos:start="203:9" pos:end="203:9">!</operator><name pos:start="203:10" pos:end="203:18">ost_table</name></expr>)</condition><block type="pseudo" pos:start="205:9" pos:end="205:18"><block_content pos:start="205:9" pos:end="205:18">

        <goto pos:start="205:9" pos:end="205:18">goto <name pos:start="205:14" pos:end="205:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="209:5" pos:end="219:5">for<control pos:start="209:8" pos:end="209:34">(<init pos:start="209:9" pos:end="209:12"><expr pos:start="209:9" pos:end="209:11"><name pos:start="209:9" pos:end="209:9">k</name><operator pos:start="209:10" pos:end="209:10">=</operator><literal type="number" pos:start="209:11" pos:end="209:11">0</literal></expr>;</init><condition pos:start="209:13" pos:end="209:30"><expr pos:start="209:13" pos:end="209:29"><name pos:start="209:13" pos:end="209:13">k</name><operator pos:start="209:14" pos:end="209:14">&lt;</operator><name pos:start="209:15" pos:end="209:29">nb_output_files</name></expr>;</condition><incr pos:start="209:31" pos:end="209:33"><expr pos:start="209:31" pos:end="209:33"><name pos:start="209:31" pos:end="209:31">k</name><operator pos:start="209:32" pos:end="209:33">++</operator></expr></incr>)</control> <block pos:start="209:36" pos:end="219:5">{<block_content pos:start="211:9" pos:end="217:9">

        <expr_stmt pos:start="211:9" pos:end="211:29"><expr pos:start="211:9" pos:end="211:28"><name pos:start="211:9" pos:end="211:10">os</name> <operator pos:start="211:12" pos:end="211:12">=</operator> <name pos:start="211:14" pos:end="211:28"><name pos:start="211:14" pos:end="211:25">output_files</name><index pos:start="211:26" pos:end="211:28">[<expr pos:start="211:27" pos:end="211:27"><name pos:start="211:27" pos:end="211:27">k</name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="213:9" pos:end="217:9">for<control pos:start="213:12" pos:end="213:41">(<init pos:start="213:13" pos:end="213:16"><expr pos:start="213:13" pos:end="213:15"><name pos:start="213:13" pos:end="213:13">i</name><operator pos:start="213:14" pos:end="213:14">=</operator><literal type="number" pos:start="213:15" pos:end="213:15">0</literal></expr>;</init><condition pos:start="213:17" pos:end="213:33"><expr pos:start="213:17" pos:end="213:32"><name pos:start="213:17" pos:end="213:17">i</name><operator pos:start="213:18" pos:end="213:18">&lt;</operator><name pos:start="213:19" pos:end="213:32"><name pos:start="213:19" pos:end="213:20">os</name><operator pos:start="213:21" pos:end="213:22">-&gt;</operator><name pos:start="213:23" pos:end="213:32">nb_streams</name></name></expr>;</condition><incr pos:start="213:34" pos:end="213:40"><expr pos:start="213:34" pos:end="213:36"><name pos:start="213:34" pos:end="213:34">i</name><operator pos:start="213:35" pos:end="213:36">++</operator></expr><operator pos:start="213:37" pos:end="213:37">,</operator><expr pos:start="213:38" pos:end="213:40"><name pos:start="213:38" pos:end="213:38">n</name><operator pos:start="213:39" pos:end="213:40">++</operator></expr></incr>)</control> <block pos:start="213:43" pos:end="217:9">{<block_content pos:start="215:13" pos:end="215:60">

            <expr_stmt pos:start="215:13" pos:end="215:60"><expr pos:start="215:13" pos:end="215:59"><name pos:start="215:13" pos:end="215:57"><name pos:start="215:13" pos:end="215:22">nb_streams</name><index pos:start="215:23" pos:end="215:57">[<expr pos:start="215:24" pos:end="215:56"><name pos:start="215:24" pos:end="215:37"><name pos:start="215:24" pos:end="215:25">os</name><operator pos:start="215:26" pos:end="215:27">-&gt;</operator><name pos:start="215:28" pos:end="215:34">streams</name><index pos:start="215:35" pos:end="215:37">[<expr pos:start="215:36" pos:end="215:36"><name pos:start="215:36" pos:end="215:36">i</name></expr>]</index></name><operator pos:start="215:38" pos:end="215:39">-&gt;</operator><name pos:start="215:40" pos:end="215:56"><name pos:start="215:40" pos:end="215:44">codec</name><operator pos:start="215:45" pos:end="215:46">-&gt;</operator><name pos:start="215:47" pos:end="215:56">codec_type</name></name></expr>]</index></name><operator pos:start="215:58" pos:end="215:59">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <for pos:start="221:5" pos:end="279:5">for<control pos:start="221:8" pos:end="221:35">(<init pos:start="221:9" pos:end="221:19"><expr pos:start="221:9" pos:end="221:18"><name pos:start="221:9" pos:end="221:12">step</name><operator pos:start="221:13" pos:end="221:13">=</operator><literal type="number" pos:start="221:14" pos:end="221:14">1</literal><operator pos:start="221:15" pos:end="221:16">&lt;&lt;</operator><literal type="number" pos:start="221:17" pos:end="221:18">30</literal></expr>;</init> <condition pos:start="221:21" pos:end="221:25"><expr pos:start="221:21" pos:end="221:24"><name pos:start="221:21" pos:end="221:24">step</name></expr>;</condition> <incr pos:start="221:27" pos:end="221:34"><expr pos:start="221:27" pos:end="221:34"><name pos:start="221:27" pos:end="221:30">step</name><operator pos:start="221:31" pos:end="221:33">&gt;&gt;=</operator><literal type="number" pos:start="221:34" pos:end="221:34">1</literal></expr></incr>)</control><block pos:start="221:36" pos:end="279:5">{<block_content pos:start="223:9" pos:end="277:46">

        <decl_stmt pos:start="223:9" pos:end="223:47"><decl pos:start="223:9" pos:end="223:46"><type pos:start="223:9" pos:end="223:11"><name pos:start="223:9" pos:end="223:11">int</name></type> <name pos:start="223:13" pos:end="223:42"><name pos:start="223:13" pos:end="223:25">found_streams</name><index pos:start="223:26" pos:end="223:42">[<expr pos:start="223:27" pos:end="223:41"><name pos:start="223:27" pos:end="223:41">AVMEDIA_TYPE_NB</name></expr>]</index></name><init pos:start="223:43" pos:end="223:46">=<expr pos:start="223:44" pos:end="223:46"><block pos:start="223:44" pos:end="223:46">{<expr pos:start="223:45" pos:end="223:45"><literal type="number" pos:start="223:45" pos:end="223:45">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <for pos:start="225:9" pos:end="227:42">for<control pos:start="225:12" pos:end="225:40">(<init pos:start="225:13" pos:end="225:16"><expr pos:start="225:13" pos:end="225:15"><name pos:start="225:13" pos:end="225:13">j</name><operator pos:start="225:14" pos:end="225:14">=</operator><literal type="number" pos:start="225:15" pos:end="225:15">0</literal></expr>;</init> <condition pos:start="225:18" pos:end="225:35"><expr pos:start="225:18" pos:end="225:34"><name pos:start="225:18" pos:end="225:18">j</name><operator pos:start="225:19" pos:end="225:19">&lt;</operator><name pos:start="225:20" pos:end="225:34">AVMEDIA_TYPE_NB</name></expr>;</condition> <incr pos:start="225:37" pos:end="225:39"><expr pos:start="225:37" pos:end="225:39"><name pos:start="225:37" pos:end="225:37">j</name><operator pos:start="225:38" pos:end="225:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="227:13" pos:end="227:42"><block_content pos:start="227:13" pos:end="227:42">

            <expr_stmt pos:start="227:13" pos:end="227:42"><expr pos:start="227:13" pos:end="227:41"><name pos:start="227:13" pos:end="227:33"><name pos:start="227:13" pos:end="227:30">nb_frame_threshold</name><index pos:start="227:31" pos:end="227:33">[<expr pos:start="227:32" pos:end="227:32"><name pos:start="227:32" pos:end="227:32">j</name></expr>]</index></name> <operator pos:start="227:35" pos:end="227:36">+=</operator> <name pos:start="227:38" pos:end="227:41">step</name></expr>;</expr_stmt></block_content></block></for>



        <for pos:start="231:9" pos:end="271:9">for<control pos:start="231:12" pos:end="231:36">(<init pos:start="231:13" pos:end="231:16"><expr pos:start="231:13" pos:end="231:15"><name pos:start="231:13" pos:end="231:13">j</name><operator pos:start="231:14" pos:end="231:14">=</operator><literal type="number" pos:start="231:15" pos:end="231:15">0</literal></expr>;</init> <condition pos:start="231:18" pos:end="231:31"><expr pos:start="231:18" pos:end="231:30"><name pos:start="231:18" pos:end="231:18">j</name><operator pos:start="231:19" pos:end="231:19">&lt;</operator><name pos:start="231:20" pos:end="231:30">nb_istreams</name></expr>;</condition> <incr pos:start="231:33" pos:end="231:35"><expr pos:start="231:33" pos:end="231:35"><name pos:start="231:33" pos:end="231:33">j</name><operator pos:start="231:34" pos:end="231:35">++</operator></expr></incr>)</control> <block pos:start="231:38" pos:end="271:9">{<block_content pos:start="233:13" pos:end="269:13">

            <decl_stmt pos:start="233:13" pos:end="233:23"><decl pos:start="233:13" pos:end="233:22"><type pos:start="233:13" pos:end="233:15"><name pos:start="233:13" pos:end="233:15">int</name></type> <name pos:start="233:17" pos:end="233:20">skip</name><init pos:start="233:21" pos:end="233:22">=<expr pos:start="233:22" pos:end="233:22"><literal type="number" pos:start="233:22" pos:end="233:22">0</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:31"><expr pos:start="235:13" pos:end="235:30"><name pos:start="235:13" pos:end="235:15">ist</name> <operator pos:start="235:17" pos:end="235:17">=</operator> <name pos:start="235:19" pos:end="235:30"><name pos:start="235:19" pos:end="235:27">ist_table</name><index pos:start="235:28" pos:end="235:30">[<expr pos:start="235:29" pos:end="235:29"><name pos:start="235:29" pos:end="235:29">j</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="237:13" pos:end="261:13"><if pos:start="237:13" pos:end="261:13">if<condition pos:start="237:15" pos:end="237:29">(<expr pos:start="237:16" pos:end="237:28"><name pos:start="237:16" pos:end="237:28">opt_programid</name></expr>)</condition><block pos:start="237:30" pos:end="261:13">{<block_content pos:start="239:17" pos:end="259:17">

                <decl_stmt pos:start="239:17" pos:end="239:26"><decl pos:start="239:17" pos:end="239:22"><type pos:start="239:17" pos:end="239:19"><name pos:start="239:17" pos:end="239:19">int</name></type> <name pos:start="239:21" pos:end="239:22">pi</name></decl>,<decl pos:start="239:24" pos:end="239:25"><type ref="prev" pos:start="239:17" pos:end="239:19"/><name pos:start="239:24" pos:end="239:25">si</name></decl>;</decl_stmt>

                <decl_stmt pos:start="241:17" pos:end="241:67"><decl pos:start="241:17" pos:end="241:66"><type pos:start="241:17" pos:end="241:33"><name pos:start="241:17" pos:end="241:31">AVFormatContext</name> <modifier pos:start="241:33" pos:end="241:33">*</modifier></type><name pos:start="241:34" pos:end="241:34">f</name><init pos:start="241:35" pos:end="241:66">= <expr pos:start="241:37" pos:end="241:66"><name pos:start="241:37" pos:end="241:66"><name pos:start="241:37" pos:end="241:47">input_files</name><index pos:start="241:48" pos:end="241:66">[ <expr pos:start="241:50" pos:end="241:64"><name pos:start="241:50" pos:end="241:64"><name pos:start="241:50" pos:end="241:52">ist</name><operator pos:start="241:53" pos:end="241:54">-&gt;</operator><name pos:start="241:55" pos:end="241:64">file_index</name></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="243:17" pos:end="243:23"><expr pos:start="243:17" pos:end="243:22"><name pos:start="243:17" pos:end="243:20">skip</name><operator pos:start="243:21" pos:end="243:21">=</operator><literal type="number" pos:start="243:22" pos:end="243:22">1</literal></expr>;</expr_stmt>

                <for pos:start="245:17" pos:end="259:17">for<control pos:start="245:20" pos:end="245:50">(<init pos:start="245:21" pos:end="245:25"><expr pos:start="245:21" pos:end="245:24"><name pos:start="245:21" pos:end="245:22">pi</name><operator pos:start="245:23" pos:end="245:23">=</operator><literal type="number" pos:start="245:24" pos:end="245:24">0</literal></expr>;</init> <condition pos:start="245:27" pos:end="245:44"><expr pos:start="245:27" pos:end="245:43"><name pos:start="245:27" pos:end="245:28">pi</name><operator pos:start="245:29" pos:end="245:29">&lt;</operator><name pos:start="245:30" pos:end="245:43"><name pos:start="245:30" pos:end="245:30">f</name><operator pos:start="245:31" pos:end="245:32">-&gt;</operator><name pos:start="245:33" pos:end="245:43">nb_programs</name></name></expr>;</condition> <incr pos:start="245:46" pos:end="245:49"><expr pos:start="245:46" pos:end="245:49"><name pos:start="245:46" pos:end="245:47">pi</name><operator pos:start="245:48" pos:end="245:49">++</operator></expr></incr>)</control><block pos:start="245:51" pos:end="259:17">{<block_content pos:start="247:21" pos:end="257:25">

                    <decl_stmt pos:start="247:21" pos:end="247:50"><decl pos:start="247:21" pos:end="247:49"><type pos:start="247:21" pos:end="247:31"><name pos:start="247:21" pos:end="247:29">AVProgram</name> <modifier pos:start="247:31" pos:end="247:31">*</modifier></type><name pos:start="247:32" pos:end="247:32">p</name><init pos:start="247:33" pos:end="247:49">= <expr pos:start="247:35" pos:end="247:49"><name pos:start="247:35" pos:end="247:49"><name pos:start="247:35" pos:end="247:35">f</name><operator pos:start="247:36" pos:end="247:37">-&gt;</operator><name pos:start="247:38" pos:end="247:45">programs</name><index pos:start="247:46" pos:end="247:49">[<expr pos:start="247:47" pos:end="247:48"><name pos:start="247:47" pos:end="247:48">pi</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="249:21" pos:end="257:25"><if pos:start="249:21" pos:end="257:25">if<condition pos:start="249:23" pos:end="249:46">(<expr pos:start="249:24" pos:end="249:45"><name pos:start="249:24" pos:end="249:28"><name pos:start="249:24" pos:end="249:24">p</name><operator pos:start="249:25" pos:end="249:26">-&gt;</operator><name pos:start="249:27" pos:end="249:28">id</name></name> <operator pos:start="249:30" pos:end="249:31">==</operator> <name pos:start="249:33" pos:end="249:45">opt_programid</name></expr>)</condition><block type="pseudo" pos:start="251:25" pos:end="257:25"><block_content pos:start="251:25" pos:end="257:25">

                        <for pos:start="251:25" pos:end="257:25">for<control pos:start="251:28" pos:end="251:64">(<init pos:start="251:29" pos:end="251:33"><expr pos:start="251:29" pos:end="251:32"><name pos:start="251:29" pos:end="251:30">si</name><operator pos:start="251:31" pos:end="251:31">=</operator><literal type="number" pos:start="251:32" pos:end="251:32">0</literal></expr>;</init> <condition pos:start="251:35" pos:end="251:58"><expr pos:start="251:35" pos:end="251:57"><name pos:start="251:35" pos:end="251:36">si</name><operator pos:start="251:37" pos:end="251:37">&lt;</operator><name pos:start="251:38" pos:end="251:57"><name pos:start="251:38" pos:end="251:38">p</name><operator pos:start="251:39" pos:end="251:40">-&gt;</operator><name pos:start="251:41" pos:end="251:57">nb_stream_indexes</name></name></expr>;</condition> <incr pos:start="251:60" pos:end="251:63"><expr pos:start="251:60" pos:end="251:63"><name pos:start="251:60" pos:end="251:61">si</name><operator pos:start="251:62" pos:end="251:63">++</operator></expr></incr>)</control><block pos:start="251:65" pos:end="257:25">{<block_content pos:start="253:29" pos:end="255:39">

                            <if_stmt pos:start="253:29" pos:end="255:39"><if pos:start="253:29" pos:end="255:39">if<condition pos:start="253:31" pos:end="253:76">(<expr pos:start="253:32" pos:end="253:75"><name pos:start="253:32" pos:end="253:64"><name pos:start="253:32" pos:end="253:32">f</name><operator pos:start="253:33" pos:end="253:34">-&gt;</operator><name pos:start="253:35" pos:end="253:41">streams</name><index pos:start="253:42" pos:end="253:64">[ <expr pos:start="253:44" pos:end="253:62"><name pos:start="253:44" pos:end="253:62"><name pos:start="253:44" pos:end="253:44">p</name><operator pos:start="253:45" pos:end="253:46">-&gt;</operator><name pos:start="253:47" pos:end="253:58">stream_index</name><index pos:start="253:59" pos:end="253:62">[<expr pos:start="253:60" pos:end="253:61"><name pos:start="253:60" pos:end="253:61">si</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="253:66" pos:end="253:67">==</operator> <name pos:start="253:69" pos:end="253:75"><name pos:start="253:69" pos:end="253:71">ist</name><operator pos:start="253:72" pos:end="253:73">-&gt;</operator><name pos:start="253:74" pos:end="253:75">st</name></name></expr>)</condition><block type="pseudo" pos:start="255:33" pos:end="255:39"><block_content pos:start="255:33" pos:end="255:39">

                                <expr_stmt pos:start="255:33" pos:end="255:39"><expr pos:start="255:33" pos:end="255:38"><name pos:start="255:33" pos:end="255:36">skip</name><operator pos:start="255:37" pos:end="255:37">=</operator><literal type="number" pos:start="255:38" pos:end="255:38">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        </block_content>}</block></for></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="263:13" pos:end="269:13"><if pos:start="263:13" pos:end="269:13">if <condition pos:start="263:16" pos:end="265:99">(<expr pos:start="263:17" pos:end="265:98"><name pos:start="263:17" pos:end="263:28"><name pos:start="263:17" pos:end="263:19">ist</name><operator pos:start="263:20" pos:end="263:21">-&gt;</operator><name pos:start="263:22" pos:end="263:28">discard</name></name> <operator pos:start="263:30" pos:end="263:31">&amp;&amp;</operator> <name pos:start="263:33" pos:end="263:48"><name pos:start="263:33" pos:end="263:35">ist</name><operator pos:start="263:36" pos:end="263:37">-&gt;</operator><name pos:start="263:38" pos:end="263:39">st</name><operator pos:start="263:40" pos:end="263:41">-&gt;</operator><name pos:start="263:42" pos:end="263:48">discard</name></name> <operator pos:start="263:50" pos:end="263:51">!=</operator> <name pos:start="263:53" pos:end="263:65">AVDISCARD_ALL</name> <operator pos:start="263:67" pos:end="263:68">&amp;&amp;</operator> <operator pos:start="263:70" pos:end="263:70">!</operator><name pos:start="263:71" pos:end="263:74">skip</name>

                <operator pos:start="265:17" pos:end="265:18">&amp;&amp;</operator> <name pos:start="265:20" pos:end="265:65"><name pos:start="265:20" pos:end="265:37">nb_frame_threshold</name><index pos:start="265:38" pos:end="265:65">[<expr pos:start="265:39" pos:end="265:64"><name pos:start="265:39" pos:end="265:64"><name pos:start="265:39" pos:end="265:41">ist</name><operator pos:start="265:42" pos:end="265:43">-&gt;</operator><name pos:start="265:44" pos:end="265:45">st</name><operator pos:start="265:46" pos:end="265:47">-&gt;</operator><name pos:start="265:48" pos:end="265:52">codec</name><operator pos:start="265:53" pos:end="265:54">-&gt;</operator><name pos:start="265:55" pos:end="265:64">codec_type</name></name></expr>]</index></name> <operator pos:start="265:67" pos:end="265:68">&lt;=</operator> <name pos:start="265:70" pos:end="265:98"><name pos:start="265:70" pos:end="265:72">ist</name><operator pos:start="265:73" pos:end="265:74">-&gt;</operator><name pos:start="265:75" pos:end="265:76">st</name><operator pos:start="265:77" pos:end="265:78">-&gt;</operator><name pos:start="265:79" pos:end="265:98">codec_info_nb_frames</name></name></expr>)</condition><block pos:start="265:100" pos:end="269:13">{<block_content pos:start="267:17" pos:end="267:60">

                <expr_stmt pos:start="267:17" pos:end="267:60"><expr pos:start="267:17" pos:end="267:59"><name pos:start="267:17" pos:end="267:57"><name pos:start="267:17" pos:end="267:29">found_streams</name><index pos:start="267:30" pos:end="267:57">[<expr pos:start="267:31" pos:end="267:56"><name pos:start="267:31" pos:end="267:56"><name pos:start="267:31" pos:end="267:33">ist</name><operator pos:start="267:34" pos:end="267:35">-&gt;</operator><name pos:start="267:36" pos:end="267:37">st</name><operator pos:start="267:38" pos:end="267:39">-&gt;</operator><name pos:start="267:40" pos:end="267:44">codec</name><operator pos:start="267:45" pos:end="267:46">-&gt;</operator><name pos:start="267:47" pos:end="267:56">codec_type</name></name></expr>]</index></name><operator pos:start="267:58" pos:end="267:59">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <for pos:start="273:9" pos:end="277:46">for<control pos:start="273:12" pos:end="273:40">(<init pos:start="273:13" pos:end="273:16"><expr pos:start="273:13" pos:end="273:15"><name pos:start="273:13" pos:end="273:13">j</name><operator pos:start="273:14" pos:end="273:14">=</operator><literal type="number" pos:start="273:15" pos:end="273:15">0</literal></expr>;</init> <condition pos:start="273:18" pos:end="273:35"><expr pos:start="273:18" pos:end="273:34"><name pos:start="273:18" pos:end="273:18">j</name><operator pos:start="273:19" pos:end="273:19">&lt;</operator><name pos:start="273:20" pos:end="273:34">AVMEDIA_TYPE_NB</name></expr>;</condition> <incr pos:start="273:37" pos:end="273:39"><expr pos:start="273:37" pos:end="273:39"><name pos:start="273:37" pos:end="273:37">j</name><operator pos:start="273:38" pos:end="273:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="275:13" pos:end="277:46"><block_content pos:start="275:13" pos:end="277:46">

            <if_stmt pos:start="275:13" pos:end="277:46"><if pos:start="275:13" pos:end="277:46">if<condition pos:start="275:15" pos:end="275:48">(<expr pos:start="275:16" pos:end="275:47"><name pos:start="275:16" pos:end="275:31"><name pos:start="275:16" pos:end="275:28">found_streams</name><index pos:start="275:29" pos:end="275:31">[<expr pos:start="275:30" pos:end="275:30"><name pos:start="275:30" pos:end="275:30">j</name></expr>]</index></name> <operator pos:start="275:33" pos:end="275:33">&lt;</operator> <name pos:start="275:35" pos:end="275:47"><name pos:start="275:35" pos:end="275:44">nb_streams</name><index pos:start="275:45" pos:end="275:47">[<expr pos:start="275:46" pos:end="275:46"><name pos:start="275:46" pos:end="275:46">j</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="277:17" pos:end="277:46"><block_content pos:start="277:17" pos:end="277:46">

                <expr_stmt pos:start="277:17" pos:end="277:46"><expr pos:start="277:17" pos:end="277:45"><name pos:start="277:17" pos:end="277:37"><name pos:start="277:17" pos:end="277:34">nb_frame_threshold</name><index pos:start="277:35" pos:end="277:37">[<expr pos:start="277:36" pos:end="277:36"><name pos:start="277:36" pos:end="277:36">j</name></expr>]</index></name> <operator pos:start="277:39" pos:end="277:40">-=</operator> <name pos:start="277:42" pos:end="277:45">step</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="281:5" pos:end="281:10"><expr pos:start="281:5" pos:end="281:9"><name pos:start="281:5" pos:end="281:5">n</name> <operator pos:start="281:7" pos:end="281:7">=</operator> <literal type="number" pos:start="281:9" pos:end="281:9">0</literal></expr>;</expr_stmt>

    <for pos:start="283:5" pos:end="433:5">for<control pos:start="283:8" pos:end="283:34">(<init pos:start="283:9" pos:end="283:12"><expr pos:start="283:9" pos:end="283:11"><name pos:start="283:9" pos:end="283:9">k</name><operator pos:start="283:10" pos:end="283:10">=</operator><literal type="number" pos:start="283:11" pos:end="283:11">0</literal></expr>;</init><condition pos:start="283:13" pos:end="283:30"><expr pos:start="283:13" pos:end="283:29"><name pos:start="283:13" pos:end="283:13">k</name><operator pos:start="283:14" pos:end="283:14">&lt;</operator><name pos:start="283:15" pos:end="283:29">nb_output_files</name></expr>;</condition><incr pos:start="283:31" pos:end="283:33"><expr pos:start="283:31" pos:end="283:33"><name pos:start="283:31" pos:end="283:31">k</name><operator pos:start="283:32" pos:end="283:33">++</operator></expr></incr>)</control> <block pos:start="283:36" pos:end="433:5">{<block_content pos:start="285:9" pos:end="431:9">

        <expr_stmt pos:start="285:9" pos:end="285:29"><expr pos:start="285:9" pos:end="285:28"><name pos:start="285:9" pos:end="285:10">os</name> <operator pos:start="285:12" pos:end="285:12">=</operator> <name pos:start="285:14" pos:end="285:28"><name pos:start="285:14" pos:end="285:25">output_files</name><index pos:start="285:26" pos:end="285:28">[<expr pos:start="285:27" pos:end="285:27"><name pos:start="285:27" pos:end="285:27">k</name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="287:9" pos:end="431:9">for<control pos:start="287:12" pos:end="287:41">(<init pos:start="287:13" pos:end="287:16"><expr pos:start="287:13" pos:end="287:15"><name pos:start="287:13" pos:end="287:13">i</name><operator pos:start="287:14" pos:end="287:14">=</operator><literal type="number" pos:start="287:15" pos:end="287:15">0</literal></expr>;</init><condition pos:start="287:17" pos:end="287:33"><expr pos:start="287:17" pos:end="287:32"><name pos:start="287:17" pos:end="287:17">i</name><operator pos:start="287:18" pos:end="287:18">&lt;</operator><name pos:start="287:19" pos:end="287:32"><name pos:start="287:19" pos:end="287:20">os</name><operator pos:start="287:21" pos:end="287:22">-&gt;</operator><name pos:start="287:23" pos:end="287:32">nb_streams</name></name></expr>;</condition><incr pos:start="287:34" pos:end="287:40"><expr pos:start="287:34" pos:end="287:36"><name pos:start="287:34" pos:end="287:34">i</name><operator pos:start="287:35" pos:end="287:36">++</operator></expr><operator pos:start="287:37" pos:end="287:37">,</operator><expr pos:start="287:38" pos:end="287:40"><name pos:start="287:38" pos:end="287:38">n</name><operator pos:start="287:39" pos:end="287:40">++</operator></expr></incr>)</control> <block pos:start="287:43" pos:end="431:9">{<block_content pos:start="289:13" pos:end="429:65">

            <decl_stmt pos:start="289:13" pos:end="289:22"><decl pos:start="289:13" pos:end="289:21"><type pos:start="289:13" pos:end="289:15"><name pos:start="289:13" pos:end="289:15">int</name></type> <name pos:start="289:17" pos:end="289:21">found</name></decl>;</decl_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:63"><expr pos:start="291:13" pos:end="291:62"><name pos:start="291:13" pos:end="291:15">ost</name> <operator pos:start="291:17" pos:end="291:17">=</operator> <name pos:start="291:19" pos:end="291:30"><name pos:start="291:19" pos:end="291:27">ost_table</name><index pos:start="291:28" pos:end="291:30">[<expr pos:start="291:29" pos:end="291:29"><name pos:start="291:29" pos:end="291:29">n</name></expr>]</index></name> <operator pos:start="291:32" pos:end="291:32">=</operator> <name pos:start="291:34" pos:end="291:62"><name pos:start="291:34" pos:end="291:56">output_streams_for_file</name><index pos:start="291:57" pos:end="291:59">[<expr pos:start="291:58" pos:end="291:58"><name pos:start="291:58" pos:end="291:58">k</name></expr>]</index><index pos:start="291:60" pos:end="291:62">[<expr pos:start="291:61" pos:end="291:61"><name pos:start="291:61" pos:end="291:61">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:37"><expr pos:start="293:13" pos:end="293:36"><name pos:start="293:13" pos:end="293:19"><name pos:start="293:13" pos:end="293:15">ost</name><operator pos:start="293:16" pos:end="293:17">-&gt;</operator><name pos:start="293:18" pos:end="293:19">st</name></name> <operator pos:start="293:21" pos:end="293:21">=</operator> <name pos:start="293:23" pos:end="293:36"><name pos:start="293:23" pos:end="293:24">os</name><operator pos:start="293:25" pos:end="293:26">-&gt;</operator><name pos:start="293:27" pos:end="293:33">streams</name><index pos:start="293:34" pos:end="293:36">[<expr pos:start="293:35" pos:end="293:35"><name pos:start="293:35" pos:end="293:35">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="295:13" pos:end="419:13"><if pos:start="295:13" pos:end="323:13">if <condition pos:start="295:16" pos:end="295:35">(<expr pos:start="295:17" pos:end="295:34"><name pos:start="295:17" pos:end="295:30">nb_stream_maps</name> <operator pos:start="295:32" pos:end="295:32">&gt;</operator> <literal type="number" pos:start="295:34" pos:end="295:34">0</literal></expr>)</condition> <block pos:start="295:37" pos:end="323:13">{<block_content pos:start="297:17" pos:end="319:17">

                <expr_stmt pos:start="297:17" pos:end="299:48"><expr pos:start="297:17" pos:end="299:47"><name pos:start="297:17" pos:end="297:33"><name pos:start="297:17" pos:end="297:19">ost</name><operator pos:start="297:20" pos:end="297:21">-&gt;</operator><name pos:start="297:22" pos:end="297:33">source_index</name></name> <operator pos:start="297:35" pos:end="297:35">=</operator> <name pos:start="297:37" pos:end="297:73"><name pos:start="297:37" pos:end="297:46">file_table</name><index pos:start="297:47" pos:end="297:73">[<expr pos:start="297:48" pos:end="297:72"><name pos:start="297:48" pos:end="297:61"><name pos:start="297:48" pos:end="297:58">stream_maps</name><index pos:start="297:59" pos:end="297:61">[<expr pos:start="297:60" pos:end="297:60"><name pos:start="297:60" pos:end="297:60">n</name></expr>]</index></name><operator pos:start="297:62" pos:end="297:62">.</operator><name pos:start="297:63" pos:end="297:72">file_index</name></expr>]</index></name><operator pos:start="297:74" pos:end="297:74">.</operator><name pos:start="297:75" pos:end="297:83">ist_index</name> <operator pos:start="297:85" pos:end="297:85">+</operator>

                    <name pos:start="299:21" pos:end="299:34"><name pos:start="299:21" pos:end="299:31">stream_maps</name><index pos:start="299:32" pos:end="299:34">[<expr pos:start="299:33" pos:end="299:33"><name pos:start="299:33" pos:end="299:33">n</name></expr>]</index></name><operator pos:start="299:35" pos:end="299:35">.</operator><name pos:start="299:36" pos:end="299:47">stream_index</name></expr>;</expr_stmt>



                <comment type="block" pos:start="303:17" pos:end="303:62">/* Sanity check that the stream types match */</comment>

                <if_stmt pos:start="305:17" pos:end="319:17"><if pos:start="305:17" pos:end="319:17">if <condition pos:start="305:20" pos:end="305:102">(<expr pos:start="305:21" pos:end="305:101"><name pos:start="305:21" pos:end="305:48"><name pos:start="305:21" pos:end="305:29">ist_table</name><index pos:start="305:30" pos:end="305:48">[<expr pos:start="305:31" pos:end="305:47"><name pos:start="305:31" pos:end="305:47"><name pos:start="305:31" pos:end="305:33">ost</name><operator pos:start="305:34" pos:end="305:35">-&gt;</operator><name pos:start="305:36" pos:end="305:47">source_index</name></name></expr>]</index></name><operator pos:start="305:49" pos:end="305:50">-&gt;</operator><name pos:start="305:51" pos:end="305:71"><name pos:start="305:51" pos:end="305:52">st</name><operator pos:start="305:53" pos:end="305:54">-&gt;</operator><name pos:start="305:55" pos:end="305:59">codec</name><operator pos:start="305:60" pos:end="305:61">-&gt;</operator><name pos:start="305:62" pos:end="305:71">codec_type</name></name> <operator pos:start="305:73" pos:end="305:74">!=</operator> <name pos:start="305:76" pos:end="305:101"><name pos:start="305:76" pos:end="305:78">ost</name><operator pos:start="305:79" pos:end="305:80">-&gt;</operator><name pos:start="305:81" pos:end="305:82">st</name><operator pos:start="305:83" pos:end="305:84">-&gt;</operator><name pos:start="305:85" pos:end="305:89">codec</name><operator pos:start="305:90" pos:end="305:91">-&gt;</operator><name pos:start="305:92" pos:end="305:101">codec_type</name></name></expr>)</condition> <block pos:start="305:104" pos:end="319:17">{<block_content pos:start="307:21" pos:end="317:35">

                    <decl_stmt pos:start="307:21" pos:end="307:43"><decl pos:start="307:21" pos:end="307:42"><type pos:start="307:21" pos:end="307:23"><name pos:start="307:21" pos:end="307:23">int</name></type> <name pos:start="307:25" pos:end="307:25">i</name><init pos:start="307:26" pos:end="307:42">= <expr pos:start="307:28" pos:end="307:42"><name pos:start="307:28" pos:end="307:42"><name pos:start="307:28" pos:end="307:30">ost</name><operator pos:start="307:31" pos:end="307:32">-&gt;</operator><name pos:start="307:33" pos:end="307:42">file_index</name></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="309:21" pos:end="309:85"><expr pos:start="309:21" pos:end="309:84"><call pos:start="309:21" pos:end="309:84"><name pos:start="309:21" pos:end="309:34">av_dump_format</name><argument_list pos:start="309:35" pos:end="309:84">(<argument pos:start="309:36" pos:end="309:50"><expr pos:start="309:36" pos:end="309:50"><name pos:start="309:36" pos:end="309:50"><name pos:start="309:36" pos:end="309:47">output_files</name><index pos:start="309:48" pos:end="309:50">[<expr pos:start="309:49" pos:end="309:49"><name pos:start="309:49" pos:end="309:49">i</name></expr>]</index></name></expr></argument>, <argument pos:start="309:53" pos:end="309:53"><expr pos:start="309:53" pos:end="309:53"><name pos:start="309:53" pos:end="309:53">i</name></expr></argument>, <argument pos:start="309:56" pos:end="309:80"><expr pos:start="309:56" pos:end="309:80"><name pos:start="309:56" pos:end="309:70"><name pos:start="309:56" pos:end="309:67">output_files</name><index pos:start="309:68" pos:end="309:70">[<expr pos:start="309:69" pos:end="309:69"><name pos:start="309:69" pos:end="309:69">i</name></expr>]</index></name><operator pos:start="309:71" pos:end="309:72">-&gt;</operator><name pos:start="309:73" pos:end="309:80">filename</name></expr></argument>, <argument pos:start="309:83" pos:end="309:83"><expr pos:start="309:83" pos:end="309:83"><literal type="number" pos:start="309:83" pos:end="309:83">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="311:21" pos:end="315:53"><expr pos:start="311:21" pos:end="315:52"><call pos:start="311:21" pos:end="315:52"><name pos:start="311:21" pos:end="311:27">fprintf</name><argument_list pos:start="311:28" pos:end="315:52">(<argument pos:start="311:29" pos:end="311:34"><expr pos:start="311:29" pos:end="311:34"><name pos:start="311:29" pos:end="311:34">stderr</name></expr></argument>, <argument pos:start="311:37" pos:end="311:88"><expr pos:start="311:37" pos:end="311:88"><literal type="string" pos:start="311:37" pos:end="311:88">"Codec type mismatch for mapping #%d.%d -&gt; #%d.%d\n"</literal></expr></argument>,

                        <argument pos:start="313:25" pos:end="313:49"><expr pos:start="313:25" pos:end="313:49"><name pos:start="313:25" pos:end="313:38"><name pos:start="313:25" pos:end="313:35">stream_maps</name><index pos:start="313:36" pos:end="313:38">[<expr pos:start="313:37" pos:end="313:37"><name pos:start="313:37" pos:end="313:37">n</name></expr>]</index></name><operator pos:start="313:39" pos:end="313:39">.</operator><name pos:start="313:40" pos:end="313:49">file_index</name></expr></argument>, <argument pos:start="313:52" pos:end="313:78"><expr pos:start="313:52" pos:end="313:78"><name pos:start="313:52" pos:end="313:65"><name pos:start="313:52" pos:end="313:62">stream_maps</name><index pos:start="313:63" pos:end="313:65">[<expr pos:start="313:64" pos:end="313:64"><name pos:start="313:64" pos:end="313:64">n</name></expr>]</index></name><operator pos:start="313:66" pos:end="313:66">.</operator><name pos:start="313:67" pos:end="313:78">stream_index</name></expr></argument>,

                        <argument pos:start="315:25" pos:end="315:39"><expr pos:start="315:25" pos:end="315:39"><name pos:start="315:25" pos:end="315:39"><name pos:start="315:25" pos:end="315:27">ost</name><operator pos:start="315:28" pos:end="315:29">-&gt;</operator><name pos:start="315:30" pos:end="315:39">file_index</name></name></expr></argument>, <argument pos:start="315:42" pos:end="315:51"><expr pos:start="315:42" pos:end="315:51"><name pos:start="315:42" pos:end="315:51"><name pos:start="315:42" pos:end="315:44">ost</name><operator pos:start="315:45" pos:end="315:46">-&gt;</operator><name pos:start="315:47" pos:end="315:51">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="317:21" pos:end="317:35"><expr pos:start="317:21" pos:end="317:34"><call pos:start="317:21" pos:end="317:34"><name pos:start="317:21" pos:end="317:31">ffmpeg_exit</name><argument_list pos:start="317:32" pos:end="317:34">(<argument pos:start="317:33" pos:end="317:33"><expr pos:start="317:33" pos:end="317:33"><literal type="number" pos:start="317:33" pos:end="317:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



            </block_content>}</block></if> <else pos:start="323:15" pos:end="419:13">else <block pos:start="323:20" pos:end="419:13">{<block_content pos:start="327:17" pos:end="417:17">

                <comment type="block" pos:start="325:17" pos:end="325:104">/* get corresponding input stream index : we select the first one with the right type */</comment>

                <expr_stmt pos:start="327:17" pos:end="327:26"><expr pos:start="327:17" pos:end="327:25"><name pos:start="327:17" pos:end="327:21">found</name> <operator pos:start="327:23" pos:end="327:23">=</operator> <literal type="number" pos:start="327:25" pos:end="327:25">0</literal></expr>;</expr_stmt>

                <for pos:start="329:17" pos:end="375:17">for<control pos:start="329:20" pos:end="329:42">(<init pos:start="329:21" pos:end="329:24"><expr pos:start="329:21" pos:end="329:23"><name pos:start="329:21" pos:end="329:21">j</name><operator pos:start="329:22" pos:end="329:22">=</operator><literal type="number" pos:start="329:23" pos:end="329:23">0</literal></expr>;</init><condition pos:start="329:25" pos:end="329:38"><expr pos:start="329:25" pos:end="329:37"><name pos:start="329:25" pos:end="329:25">j</name><operator pos:start="329:26" pos:end="329:26">&lt;</operator><name pos:start="329:27" pos:end="329:37">nb_istreams</name></expr>;</condition><incr pos:start="329:39" pos:end="329:41"><expr pos:start="329:39" pos:end="329:41"><name pos:start="329:39" pos:end="329:39">j</name><operator pos:start="329:40" pos:end="329:41">++</operator></expr></incr>)</control> <block pos:start="329:44" pos:end="375:17">{<block_content pos:start="331:21" pos:end="373:21">

                    <decl_stmt pos:start="331:21" pos:end="331:31"><decl pos:start="331:21" pos:end="331:30"><type pos:start="331:21" pos:end="331:23"><name pos:start="331:21" pos:end="331:23">int</name></type> <name pos:start="331:25" pos:end="331:28">skip</name><init pos:start="331:29" pos:end="331:30">=<expr pos:start="331:30" pos:end="331:30"><literal type="number" pos:start="331:30" pos:end="331:30">0</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="333:21" pos:end="333:39"><expr pos:start="333:21" pos:end="333:38"><name pos:start="333:21" pos:end="333:23">ist</name> <operator pos:start="333:25" pos:end="333:25">=</operator> <name pos:start="333:27" pos:end="333:38"><name pos:start="333:27" pos:end="333:35">ist_table</name><index pos:start="333:36" pos:end="333:38">[<expr pos:start="333:37" pos:end="333:37"><name pos:start="333:37" pos:end="333:37">j</name></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="335:21" pos:end="359:21"><if pos:start="335:21" pos:end="359:21">if<condition pos:start="335:23" pos:end="335:37">(<expr pos:start="335:24" pos:end="335:36"><name pos:start="335:24" pos:end="335:36">opt_programid</name></expr>)</condition><block pos:start="335:38" pos:end="359:21">{<block_content pos:start="337:25" pos:end="357:25">

                        <decl_stmt pos:start="337:25" pos:end="337:34"><decl pos:start="337:25" pos:end="337:30"><type pos:start="337:25" pos:end="337:27"><name pos:start="337:25" pos:end="337:27">int</name></type> <name pos:start="337:29" pos:end="337:30">pi</name></decl>,<decl pos:start="337:32" pos:end="337:33"><type ref="prev" pos:start="337:25" pos:end="337:27"/><name pos:start="337:32" pos:end="337:33">si</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="339:25" pos:end="339:75"><decl pos:start="339:25" pos:end="339:74"><type pos:start="339:25" pos:end="339:41"><name pos:start="339:25" pos:end="339:39">AVFormatContext</name> <modifier pos:start="339:41" pos:end="339:41">*</modifier></type><name pos:start="339:42" pos:end="339:42">f</name><init pos:start="339:43" pos:end="339:74">= <expr pos:start="339:45" pos:end="339:74"><name pos:start="339:45" pos:end="339:74"><name pos:start="339:45" pos:end="339:55">input_files</name><index pos:start="339:56" pos:end="339:74">[ <expr pos:start="339:58" pos:end="339:72"><name pos:start="339:58" pos:end="339:72"><name pos:start="339:58" pos:end="339:60">ist</name><operator pos:start="339:61" pos:end="339:62">-&gt;</operator><name pos:start="339:63" pos:end="339:72">file_index</name></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="341:25" pos:end="341:31"><expr pos:start="341:25" pos:end="341:30"><name pos:start="341:25" pos:end="341:28">skip</name><operator pos:start="341:29" pos:end="341:29">=</operator><literal type="number" pos:start="341:30" pos:end="341:30">1</literal></expr>;</expr_stmt>

                        <for pos:start="343:25" pos:end="357:25">for<control pos:start="343:28" pos:end="343:58">(<init pos:start="343:29" pos:end="343:33"><expr pos:start="343:29" pos:end="343:32"><name pos:start="343:29" pos:end="343:30">pi</name><operator pos:start="343:31" pos:end="343:31">=</operator><literal type="number" pos:start="343:32" pos:end="343:32">0</literal></expr>;</init> <condition pos:start="343:35" pos:end="343:52"><expr pos:start="343:35" pos:end="343:51"><name pos:start="343:35" pos:end="343:36">pi</name><operator pos:start="343:37" pos:end="343:37">&lt;</operator><name pos:start="343:38" pos:end="343:51"><name pos:start="343:38" pos:end="343:38">f</name><operator pos:start="343:39" pos:end="343:40">-&gt;</operator><name pos:start="343:41" pos:end="343:51">nb_programs</name></name></expr>;</condition> <incr pos:start="343:54" pos:end="343:57"><expr pos:start="343:54" pos:end="343:57"><name pos:start="343:54" pos:end="343:55">pi</name><operator pos:start="343:56" pos:end="343:57">++</operator></expr></incr>)</control><block pos:start="343:59" pos:end="357:25">{<block_content pos:start="345:29" pos:end="355:33">

                            <decl_stmt pos:start="345:29" pos:end="345:58"><decl pos:start="345:29" pos:end="345:57"><type pos:start="345:29" pos:end="345:39"><name pos:start="345:29" pos:end="345:37">AVProgram</name> <modifier pos:start="345:39" pos:end="345:39">*</modifier></type><name pos:start="345:40" pos:end="345:40">p</name><init pos:start="345:41" pos:end="345:57">= <expr pos:start="345:43" pos:end="345:57"><name pos:start="345:43" pos:end="345:57"><name pos:start="345:43" pos:end="345:43">f</name><operator pos:start="345:44" pos:end="345:45">-&gt;</operator><name pos:start="345:46" pos:end="345:53">programs</name><index pos:start="345:54" pos:end="345:57">[<expr pos:start="345:55" pos:end="345:56"><name pos:start="345:55" pos:end="345:56">pi</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                            <if_stmt pos:start="347:29" pos:end="355:33"><if pos:start="347:29" pos:end="355:33">if<condition pos:start="347:31" pos:end="347:54">(<expr pos:start="347:32" pos:end="347:53"><name pos:start="347:32" pos:end="347:36"><name pos:start="347:32" pos:end="347:32">p</name><operator pos:start="347:33" pos:end="347:34">-&gt;</operator><name pos:start="347:35" pos:end="347:36">id</name></name> <operator pos:start="347:38" pos:end="347:39">==</operator> <name pos:start="347:41" pos:end="347:53">opt_programid</name></expr>)</condition><block type="pseudo" pos:start="349:33" pos:end="355:33"><block_content pos:start="349:33" pos:end="355:33">

                                <for pos:start="349:33" pos:end="355:33">for<control pos:start="349:36" pos:end="349:72">(<init pos:start="349:37" pos:end="349:41"><expr pos:start="349:37" pos:end="349:40"><name pos:start="349:37" pos:end="349:38">si</name><operator pos:start="349:39" pos:end="349:39">=</operator><literal type="number" pos:start="349:40" pos:end="349:40">0</literal></expr>;</init> <condition pos:start="349:43" pos:end="349:66"><expr pos:start="349:43" pos:end="349:65"><name pos:start="349:43" pos:end="349:44">si</name><operator pos:start="349:45" pos:end="349:45">&lt;</operator><name pos:start="349:46" pos:end="349:65"><name pos:start="349:46" pos:end="349:46">p</name><operator pos:start="349:47" pos:end="349:48">-&gt;</operator><name pos:start="349:49" pos:end="349:65">nb_stream_indexes</name></name></expr>;</condition> <incr pos:start="349:68" pos:end="349:71"><expr pos:start="349:68" pos:end="349:71"><name pos:start="349:68" pos:end="349:69">si</name><operator pos:start="349:70" pos:end="349:71">++</operator></expr></incr>)</control><block pos:start="349:73" pos:end="355:33">{<block_content pos:start="351:37" pos:end="353:47">

                                    <if_stmt pos:start="351:37" pos:end="353:47"><if pos:start="351:37" pos:end="353:47">if<condition pos:start="351:39" pos:end="351:84">(<expr pos:start="351:40" pos:end="351:83"><name pos:start="351:40" pos:end="351:72"><name pos:start="351:40" pos:end="351:40">f</name><operator pos:start="351:41" pos:end="351:42">-&gt;</operator><name pos:start="351:43" pos:end="351:49">streams</name><index pos:start="351:50" pos:end="351:72">[ <expr pos:start="351:52" pos:end="351:70"><name pos:start="351:52" pos:end="351:70"><name pos:start="351:52" pos:end="351:52">p</name><operator pos:start="351:53" pos:end="351:54">-&gt;</operator><name pos:start="351:55" pos:end="351:66">stream_index</name><index pos:start="351:67" pos:end="351:70">[<expr pos:start="351:68" pos:end="351:69"><name pos:start="351:68" pos:end="351:69">si</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="351:74" pos:end="351:75">==</operator> <name pos:start="351:77" pos:end="351:83"><name pos:start="351:77" pos:end="351:79">ist</name><operator pos:start="351:80" pos:end="351:81">-&gt;</operator><name pos:start="351:82" pos:end="351:83">st</name></name></expr>)</condition><block type="pseudo" pos:start="353:41" pos:end="353:47"><block_content pos:start="353:41" pos:end="353:47">

                                        <expr_stmt pos:start="353:41" pos:end="353:47"><expr pos:start="353:41" pos:end="353:46"><name pos:start="353:41" pos:end="353:44">skip</name><operator pos:start="353:45" pos:end="353:45">=</operator><literal type="number" pos:start="353:46" pos:end="353:46">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                                </block_content>}</block></for></block_content></block></if></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="361:21" pos:end="373:21"><if pos:start="361:21" pos:end="373:21">if <condition pos:start="361:24" pos:end="365:104">(<expr pos:start="361:25" pos:end="365:103"><name pos:start="361:25" pos:end="361:36"><name pos:start="361:25" pos:end="361:27">ist</name><operator pos:start="361:28" pos:end="361:29">-&gt;</operator><name pos:start="361:30" pos:end="361:36">discard</name></name> <operator pos:start="361:38" pos:end="361:39">&amp;&amp;</operator> <name pos:start="361:41" pos:end="361:56"><name pos:start="361:41" pos:end="361:43">ist</name><operator pos:start="361:44" pos:end="361:45">-&gt;</operator><name pos:start="361:46" pos:end="361:47">st</name><operator pos:start="361:48" pos:end="361:49">-&gt;</operator><name pos:start="361:50" pos:end="361:56">discard</name></name> <operator pos:start="361:58" pos:end="361:59">!=</operator> <name pos:start="361:61" pos:end="361:73">AVDISCARD_ALL</name> <operator pos:start="361:75" pos:end="361:76">&amp;&amp;</operator> <operator pos:start="361:78" pos:end="361:78">!</operator><name pos:start="361:79" pos:end="361:82">skip</name> <operator pos:start="361:84" pos:end="361:85">&amp;&amp;</operator>

                        <name pos:start="363:25" pos:end="363:50"><name pos:start="363:25" pos:end="363:27">ist</name><operator pos:start="363:28" pos:end="363:29">-&gt;</operator><name pos:start="363:30" pos:end="363:31">st</name><operator pos:start="363:32" pos:end="363:33">-&gt;</operator><name pos:start="363:34" pos:end="363:38">codec</name><operator pos:start="363:39" pos:end="363:40">-&gt;</operator><name pos:start="363:41" pos:end="363:50">codec_type</name></name> <operator pos:start="363:52" pos:end="363:53">==</operator> <name pos:start="363:55" pos:end="363:80"><name pos:start="363:55" pos:end="363:57">ost</name><operator pos:start="363:58" pos:end="363:59">-&gt;</operator><name pos:start="363:60" pos:end="363:61">st</name><operator pos:start="363:62" pos:end="363:63">-&gt;</operator><name pos:start="363:64" pos:end="363:68">codec</name><operator pos:start="363:69" pos:end="363:70">-&gt;</operator><name pos:start="363:71" pos:end="363:80">codec_type</name></name> <operator pos:start="363:82" pos:end="363:83">&amp;&amp;</operator>

                        <name pos:start="365:25" pos:end="365:70"><name pos:start="365:25" pos:end="365:42">nb_frame_threshold</name><index pos:start="365:43" pos:end="365:70">[<expr pos:start="365:44" pos:end="365:69"><name pos:start="365:44" pos:end="365:69"><name pos:start="365:44" pos:end="365:46">ist</name><operator pos:start="365:47" pos:end="365:48">-&gt;</operator><name pos:start="365:49" pos:end="365:50">st</name><operator pos:start="365:51" pos:end="365:52">-&gt;</operator><name pos:start="365:53" pos:end="365:57">codec</name><operator pos:start="365:58" pos:end="365:59">-&gt;</operator><name pos:start="365:60" pos:end="365:69">codec_type</name></name></expr>]</index></name> <operator pos:start="365:72" pos:end="365:73">&lt;=</operator> <name pos:start="365:75" pos:end="365:103"><name pos:start="365:75" pos:end="365:77">ist</name><operator pos:start="365:78" pos:end="365:79">-&gt;</operator><name pos:start="365:80" pos:end="365:81">st</name><operator pos:start="365:82" pos:end="365:83">-&gt;</operator><name pos:start="365:84" pos:end="365:103">codec_info_nb_frames</name></name></expr>)</condition> <block pos:start="365:106" pos:end="373:21">{<block_content pos:start="367:29" pos:end="371:34">

                            <expr_stmt pos:start="367:29" pos:end="367:50"><expr pos:start="367:29" pos:end="367:49"><name pos:start="367:29" pos:end="367:45"><name pos:start="367:29" pos:end="367:31">ost</name><operator pos:start="367:32" pos:end="367:33">-&gt;</operator><name pos:start="367:34" pos:end="367:45">source_index</name></name> <operator pos:start="367:47" pos:end="367:47">=</operator> <name pos:start="367:49" pos:end="367:49">j</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="369:29" pos:end="369:38"><expr pos:start="369:29" pos:end="369:37"><name pos:start="369:29" pos:end="369:33">found</name> <operator pos:start="369:35" pos:end="369:35">=</operator> <literal type="number" pos:start="369:37" pos:end="369:37">1</literal></expr>;</expr_stmt>

                            <break pos:start="371:29" pos:end="371:34">break;</break>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>



                <if_stmt pos:start="379:17" pos:end="417:17"><if pos:start="379:17" pos:end="417:17">if <condition pos:start="379:20" pos:end="379:27">(<expr pos:start="379:21" pos:end="379:26"><operator pos:start="379:21" pos:end="379:21">!</operator><name pos:start="379:22" pos:end="379:26">found</name></expr>)</condition> <block pos:start="379:29" pos:end="417:17">{<block_content pos:start="381:21" pos:end="415:21">

                    <if_stmt pos:start="381:21" pos:end="401:21"><if pos:start="381:21" pos:end="401:21">if<condition pos:start="381:23" pos:end="381:39">(<expr pos:start="381:24" pos:end="381:38"><operator pos:start="381:24" pos:end="381:24">!</operator> <name pos:start="381:26" pos:end="381:38">opt_programid</name></expr>)</condition> <block pos:start="381:41" pos:end="401:21">{<block_content pos:start="385:25" pos:end="399:25">

                        <comment type="block" pos:start="383:25" pos:end="383:65">/* try again and reuse existing stream */</comment>

                        <for pos:start="385:25" pos:end="399:25">for<control pos:start="385:28" pos:end="385:50">(<init pos:start="385:29" pos:end="385:32"><expr pos:start="385:29" pos:end="385:31"><name pos:start="385:29" pos:end="385:29">j</name><operator pos:start="385:30" pos:end="385:30">=</operator><literal type="number" pos:start="385:31" pos:end="385:31">0</literal></expr>;</init><condition pos:start="385:33" pos:end="385:46"><expr pos:start="385:33" pos:end="385:45"><name pos:start="385:33" pos:end="385:33">j</name><operator pos:start="385:34" pos:end="385:34">&lt;</operator><name pos:start="385:35" pos:end="385:45">nb_istreams</name></expr>;</condition><incr pos:start="385:47" pos:end="385:49"><expr pos:start="385:47" pos:end="385:49"><name pos:start="385:47" pos:end="385:47">j</name><operator pos:start="385:48" pos:end="385:49">++</operator></expr></incr>)</control> <block pos:start="385:52" pos:end="399:25">{<block_content pos:start="387:29" pos:end="397:29">

                            <expr_stmt pos:start="387:29" pos:end="387:47"><expr pos:start="387:29" pos:end="387:46"><name pos:start="387:29" pos:end="387:31">ist</name> <operator pos:start="387:33" pos:end="387:33">=</operator> <name pos:start="387:35" pos:end="387:46"><name pos:start="387:35" pos:end="387:43">ist_table</name><index pos:start="387:44" pos:end="387:46">[<expr pos:start="387:45" pos:end="387:45"><name pos:start="387:45" pos:end="387:45">j</name></expr>]</index></name></expr>;</expr_stmt>

                            <if_stmt pos:start="389:29" pos:end="397:29"><if pos:start="389:29" pos:end="397:29">if <condition pos:start="389:32" pos:end="391:69">(   <expr pos:start="389:36" pos:end="391:68"><name pos:start="389:36" pos:end="389:61"><name pos:start="389:36" pos:end="389:38">ist</name><operator pos:start="389:39" pos:end="389:40">-&gt;</operator><name pos:start="389:41" pos:end="389:42">st</name><operator pos:start="389:43" pos:end="389:44">-&gt;</operator><name pos:start="389:45" pos:end="389:49">codec</name><operator pos:start="389:50" pos:end="389:51">-&gt;</operator><name pos:start="389:52" pos:end="389:61">codec_type</name></name> <operator pos:start="389:63" pos:end="389:64">==</operator> <name pos:start="389:66" pos:end="389:91"><name pos:start="389:66" pos:end="389:68">ost</name><operator pos:start="389:69" pos:end="389:70">-&gt;</operator><name pos:start="389:71" pos:end="389:72">st</name><operator pos:start="389:73" pos:end="389:74">-&gt;</operator><name pos:start="389:75" pos:end="389:79">codec</name><operator pos:start="389:80" pos:end="389:81">-&gt;</operator><name pos:start="389:82" pos:end="389:91">codec_type</name></name>

                                <operator pos:start="391:33" pos:end="391:34">&amp;&amp;</operator> <name pos:start="391:36" pos:end="391:51"><name pos:start="391:36" pos:end="391:38">ist</name><operator pos:start="391:39" pos:end="391:40">-&gt;</operator><name pos:start="391:41" pos:end="391:42">st</name><operator pos:start="391:43" pos:end="391:44">-&gt;</operator><name pos:start="391:45" pos:end="391:51">discard</name></name> <operator pos:start="391:53" pos:end="391:54">!=</operator> <name pos:start="391:56" pos:end="391:68">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="391:71" pos:end="397:29">{<block_content pos:start="393:33" pos:end="395:42">

                                <expr_stmt pos:start="393:33" pos:end="393:54"><expr pos:start="393:33" pos:end="393:53"><name pos:start="393:33" pos:end="393:49"><name pos:start="393:33" pos:end="393:35">ost</name><operator pos:start="393:36" pos:end="393:37">-&gt;</operator><name pos:start="393:38" pos:end="393:49">source_index</name></name> <operator pos:start="393:51" pos:end="393:51">=</operator> <name pos:start="393:53" pos:end="393:53">j</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="395:33" pos:end="395:42"><expr pos:start="395:33" pos:end="395:41"><name pos:start="395:33" pos:end="395:37">found</name> <operator pos:start="395:39" pos:end="395:39">=</operator> <literal type="number" pos:start="395:41" pos:end="395:41">1</literal></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="403:21" pos:end="415:21"><if pos:start="403:21" pos:end="415:21">if <condition pos:start="403:24" pos:end="403:31">(<expr pos:start="403:25" pos:end="403:30"><operator pos:start="403:25" pos:end="403:25">!</operator><name pos:start="403:26" pos:end="403:30">found</name></expr>)</condition> <block pos:start="403:33" pos:end="415:21">{<block_content pos:start="405:25" pos:end="413:39">

                        <decl_stmt pos:start="405:25" pos:end="405:47"><decl pos:start="405:25" pos:end="405:46"><type pos:start="405:25" pos:end="405:27"><name pos:start="405:25" pos:end="405:27">int</name></type> <name pos:start="405:29" pos:end="405:29">i</name><init pos:start="405:30" pos:end="405:46">= <expr pos:start="405:32" pos:end="405:46"><name pos:start="405:32" pos:end="405:46"><name pos:start="405:32" pos:end="405:34">ost</name><operator pos:start="405:35" pos:end="405:36">-&gt;</operator><name pos:start="405:37" pos:end="405:46">file_index</name></name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="407:25" pos:end="407:89"><expr pos:start="407:25" pos:end="407:88"><call pos:start="407:25" pos:end="407:88"><name pos:start="407:25" pos:end="407:38">av_dump_format</name><argument_list pos:start="407:39" pos:end="407:88">(<argument pos:start="407:40" pos:end="407:54"><expr pos:start="407:40" pos:end="407:54"><name pos:start="407:40" pos:end="407:54"><name pos:start="407:40" pos:end="407:51">output_files</name><index pos:start="407:52" pos:end="407:54">[<expr pos:start="407:53" pos:end="407:53"><name pos:start="407:53" pos:end="407:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="407:57" pos:end="407:57"><expr pos:start="407:57" pos:end="407:57"><name pos:start="407:57" pos:end="407:57">i</name></expr></argument>, <argument pos:start="407:60" pos:end="407:84"><expr pos:start="407:60" pos:end="407:84"><name pos:start="407:60" pos:end="407:74"><name pos:start="407:60" pos:end="407:71">output_files</name><index pos:start="407:72" pos:end="407:74">[<expr pos:start="407:73" pos:end="407:73"><name pos:start="407:73" pos:end="407:73">i</name></expr>]</index></name><operator pos:start="407:75" pos:end="407:76">-&gt;</operator><name pos:start="407:77" pos:end="407:84">filename</name></expr></argument>, <argument pos:start="407:87" pos:end="407:87"><expr pos:start="407:87" pos:end="407:87"><literal type="number" pos:start="407:87" pos:end="407:87">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="409:25" pos:end="411:61"><expr pos:start="409:25" pos:end="411:60"><call pos:start="409:25" pos:end="411:60"><name pos:start="409:25" pos:end="409:31">fprintf</name><argument_list pos:start="409:32" pos:end="411:60">(<argument pos:start="409:33" pos:end="409:38"><expr pos:start="409:33" pos:end="409:38"><name pos:start="409:33" pos:end="409:38">stderr</name></expr></argument>, <argument pos:start="409:41" pos:end="409:101"><expr pos:start="409:41" pos:end="409:101"><literal type="string" pos:start="409:41" pos:end="409:101">"Could not find input stream matching output stream #%d.%d\n"</literal></expr></argument>,

                                <argument pos:start="411:33" pos:end="411:47"><expr pos:start="411:33" pos:end="411:47"><name pos:start="411:33" pos:end="411:47"><name pos:start="411:33" pos:end="411:35">ost</name><operator pos:start="411:36" pos:end="411:37">-&gt;</operator><name pos:start="411:38" pos:end="411:47">file_index</name></name></expr></argument>, <argument pos:start="411:50" pos:end="411:59"><expr pos:start="411:50" pos:end="411:59"><name pos:start="411:50" pos:end="411:59"><name pos:start="411:50" pos:end="411:52">ost</name><operator pos:start="411:53" pos:end="411:54">-&gt;</operator><name pos:start="411:55" pos:end="411:59">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="413:25" pos:end="413:39"><expr pos:start="413:25" pos:end="413:38"><call pos:start="413:25" pos:end="413:38"><name pos:start="413:25" pos:end="413:35">ffmpeg_exit</name><argument_list pos:start="413:36" pos:end="413:38">(<argument pos:start="413:37" pos:end="413:37"><expr pos:start="413:37" pos:end="413:37"><literal type="number" pos:start="413:37" pos:end="413:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="421:13" pos:end="421:47"><expr pos:start="421:13" pos:end="421:46"><name pos:start="421:13" pos:end="421:15">ist</name> <operator pos:start="421:17" pos:end="421:17">=</operator> <name pos:start="421:19" pos:end="421:46"><name pos:start="421:19" pos:end="421:27">ist_table</name><index pos:start="421:28" pos:end="421:46">[<expr pos:start="421:29" pos:end="421:45"><name pos:start="421:29" pos:end="421:45"><name pos:start="421:29" pos:end="421:31">ost</name><operator pos:start="421:32" pos:end="421:33">-&gt;</operator><name pos:start="421:34" pos:end="421:45">source_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="423:13" pos:end="423:29"><expr pos:start="423:13" pos:end="423:28"><name pos:start="423:13" pos:end="423:24"><name pos:start="423:13" pos:end="423:15">ist</name><operator pos:start="423:16" pos:end="423:17">-&gt;</operator><name pos:start="423:18" pos:end="423:24">discard</name></name> <operator pos:start="423:26" pos:end="423:26">=</operator> <literal type="number" pos:start="423:28" pos:end="423:28">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="425:13" pos:end="429:65"><expr pos:start="425:13" pos:end="429:64"><name pos:start="425:13" pos:end="425:25"><name pos:start="425:13" pos:end="425:15">ost</name><operator pos:start="425:16" pos:end="425:17">-&gt;</operator><name pos:start="425:18" pos:end="425:25">sync_ist</name></name> <operator pos:start="425:27" pos:end="425:27">=</operator> <ternary pos:start="425:29" pos:end="429:64"><condition pos:start="425:29" pos:end="425:50"><expr pos:start="425:29" pos:end="425:48"><operator pos:start="425:29" pos:end="425:29">(</operator><name pos:start="425:30" pos:end="425:43">nb_stream_maps</name> <operator pos:start="425:45" pos:end="425:45">&gt;</operator> <literal type="number" pos:start="425:47" pos:end="425:47">0</literal><operator pos:start="425:48" pos:end="425:48">)</operator></expr> ?</condition><then pos:start="427:17" pos:end="429:58">

                <expr pos:start="427:17" pos:end="429:58"><name pos:start="427:17" pos:end="429:58"><name pos:start="427:17" pos:end="427:25">ist_table</name><index pos:start="427:26" pos:end="429:58">[<expr pos:start="427:27" pos:end="429:57"><name pos:start="427:27" pos:end="427:68"><name pos:start="427:27" pos:end="427:36">file_table</name><index pos:start="427:37" pos:end="427:68">[<expr pos:start="427:38" pos:end="427:67"><name pos:start="427:38" pos:end="427:51"><name pos:start="427:38" pos:end="427:48">stream_maps</name><index pos:start="427:49" pos:end="427:51">[<expr pos:start="427:50" pos:end="427:50"><name pos:start="427:50" pos:end="427:50">n</name></expr>]</index></name><operator pos:start="427:52" pos:end="427:52">.</operator><name pos:start="427:53" pos:end="427:67">sync_file_index</name></expr>]</index></name><operator pos:start="427:69" pos:end="427:69">.</operator><name pos:start="427:70" pos:end="427:78">ist_index</name> <operator pos:start="427:80" pos:end="427:80">+</operator>

                         <name pos:start="429:26" pos:end="429:39"><name pos:start="429:26" pos:end="429:36">stream_maps</name><index pos:start="429:37" pos:end="429:39">[<expr pos:start="429:38" pos:end="429:38"><name pos:start="429:38" pos:end="429:38">n</name></expr>]</index></name><operator pos:start="429:40" pos:end="429:40">.</operator><name pos:start="429:41" pos:end="429:57">sync_stream_index</name></expr>]</index></name></expr> </then><else pos:start="429:60" pos:end="429:64">: <expr pos:start="429:62" pos:end="429:64"><name pos:start="429:62" pos:end="429:64">ist</name></expr></else></ternary></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="437:5" pos:end="437:74">/* for each output stream, we compute the right encoding parameters */</comment>

    <for pos:start="439:5" pos:end="813:5">for<control pos:start="439:8" pos:end="439:30">(<init pos:start="439:9" pos:end="439:12"><expr pos:start="439:9" pos:end="439:11"><name pos:start="439:9" pos:end="439:9">i</name><operator pos:start="439:10" pos:end="439:10">=</operator><literal type="number" pos:start="439:11" pos:end="439:11">0</literal></expr>;</init><condition pos:start="439:13" pos:end="439:26"><expr pos:start="439:13" pos:end="439:25"><name pos:start="439:13" pos:end="439:13">i</name><operator pos:start="439:14" pos:end="439:14">&lt;</operator><name pos:start="439:15" pos:end="439:25">nb_ostreams</name></expr>;</condition><incr pos:start="439:27" pos:end="439:29"><expr pos:start="439:27" pos:end="439:29"><name pos:start="439:27" pos:end="439:27">i</name><operator pos:start="439:28" pos:end="439:29">++</operator></expr></incr>)</control> <block pos:start="439:32" pos:end="813:5">{<block_content pos:start="441:9" pos:end="811:9">

        <expr_stmt pos:start="441:9" pos:end="441:27"><expr pos:start="441:9" pos:end="441:26"><name pos:start="441:9" pos:end="441:11">ost</name> <operator pos:start="441:13" pos:end="441:13">=</operator> <name pos:start="441:15" pos:end="441:26"><name pos:start="441:15" pos:end="441:23">ost_table</name><index pos:start="441:24" pos:end="441:26">[<expr pos:start="441:25" pos:end="441:25"><name pos:start="441:25" pos:end="441:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="443:9" pos:end="443:43"><expr pos:start="443:9" pos:end="443:42"><name pos:start="443:9" pos:end="443:10">os</name> <operator pos:start="443:12" pos:end="443:12">=</operator> <name pos:start="443:14" pos:end="443:42"><name pos:start="443:14" pos:end="443:25">output_files</name><index pos:start="443:26" pos:end="443:42">[<expr pos:start="443:27" pos:end="443:41"><name pos:start="443:27" pos:end="443:41"><name pos:start="443:27" pos:end="443:29">ost</name><operator pos:start="443:30" pos:end="443:31">-&gt;</operator><name pos:start="443:32" pos:end="443:41">file_index</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="445:9" pos:end="445:43"><expr pos:start="445:9" pos:end="445:42"><name pos:start="445:9" pos:end="445:11">ist</name> <operator pos:start="445:13" pos:end="445:13">=</operator> <name pos:start="445:15" pos:end="445:42"><name pos:start="445:15" pos:end="445:23">ist_table</name><index pos:start="445:24" pos:end="445:42">[<expr pos:start="445:25" pos:end="445:41"><name pos:start="445:25" pos:end="445:41"><name pos:start="445:25" pos:end="445:27">ost</name><operator pos:start="445:28" pos:end="445:29">-&gt;</operator><name pos:start="445:30" pos:end="445:41">source_index</name></name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="449:9" pos:end="449:31"><expr pos:start="449:9" pos:end="449:30"><name pos:start="449:9" pos:end="449:13">codec</name> <operator pos:start="449:15" pos:end="449:15">=</operator> <name pos:start="449:17" pos:end="449:30"><name pos:start="449:17" pos:end="449:19">ost</name><operator pos:start="449:20" pos:end="449:21">-&gt;</operator><name pos:start="449:22" pos:end="449:23">st</name><operator pos:start="449:24" pos:end="449:25">-&gt;</operator><name pos:start="449:26" pos:end="449:30">codec</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="451:9" pos:end="451:32"><expr pos:start="451:9" pos:end="451:31"><name pos:start="451:9" pos:end="451:14">icodec</name> <operator pos:start="451:16" pos:end="451:16">=</operator> <name pos:start="451:18" pos:end="451:31"><name pos:start="451:18" pos:end="451:20">ist</name><operator pos:start="451:21" pos:end="451:22">-&gt;</operator><name pos:start="451:23" pos:end="451:24">st</name><operator pos:start="451:25" pos:end="451:26">-&gt;</operator><name pos:start="451:27" pos:end="451:31">codec</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="455:9" pos:end="459:57"><if pos:start="455:9" pos:end="459:57">if <condition pos:start="455:12" pos:end="455:38">(<expr pos:start="455:13" pos:end="455:37"><name pos:start="455:13" pos:end="455:37">metadata_streams_autocopy</name></expr>)</condition><block type="pseudo" pos:start="457:13" pos:end="459:57"><block_content pos:start="457:13" pos:end="459:57">

            <expr_stmt pos:start="457:13" pos:end="459:57"><expr pos:start="457:13" pos:end="459:56"><call pos:start="457:13" pos:end="459:56"><name pos:start="457:13" pos:end="457:28">av_metadata_copy</name><argument_list pos:start="457:29" pos:end="459:56">(<argument pos:start="457:30" pos:end="457:47"><expr pos:start="457:30" pos:end="457:47"><operator pos:start="457:30" pos:end="457:30">&amp;</operator><name pos:start="457:31" pos:end="457:47"><name pos:start="457:31" pos:end="457:33">ost</name><operator pos:start="457:34" pos:end="457:35">-&gt;</operator><name pos:start="457:36" pos:end="457:37">st</name><operator pos:start="457:38" pos:end="457:39">-&gt;</operator><name pos:start="457:40" pos:end="457:47">metadata</name></name></expr></argument>, <argument pos:start="457:50" pos:end="457:66"><expr pos:start="457:50" pos:end="457:66"><name pos:start="457:50" pos:end="457:66"><name pos:start="457:50" pos:end="457:52">ist</name><operator pos:start="457:53" pos:end="457:54">-&gt;</operator><name pos:start="457:55" pos:end="457:56">st</name><operator pos:start="457:57" pos:end="457:58">-&gt;</operator><name pos:start="457:59" pos:end="457:66">metadata</name></name></expr></argument>,

                             <argument pos:start="459:30" pos:end="459:55"><expr pos:start="459:30" pos:end="459:55"><name pos:start="459:30" pos:end="459:55">AV_METADATA_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="463:9" pos:end="463:52"><expr pos:start="463:9" pos:end="463:51"><name pos:start="463:9" pos:end="463:28"><name pos:start="463:9" pos:end="463:11">ost</name><operator pos:start="463:12" pos:end="463:13">-&gt;</operator><name pos:start="463:14" pos:end="463:15">st</name><operator pos:start="463:16" pos:end="463:17">-&gt;</operator><name pos:start="463:18" pos:end="463:28">disposition</name></name> <operator pos:start="463:30" pos:end="463:30">=</operator> <name pos:start="463:32" pos:end="463:51"><name pos:start="463:32" pos:end="463:34">ist</name><operator pos:start="463:35" pos:end="463:36">-&gt;</operator><name pos:start="463:37" pos:end="463:38">st</name><operator pos:start="463:39" pos:end="463:40">-&gt;</operator><name pos:start="463:41" pos:end="463:51">disposition</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="465:9" pos:end="465:64"><expr pos:start="465:9" pos:end="465:63"><name pos:start="465:9" pos:end="465:34"><name pos:start="465:9" pos:end="465:13">codec</name><operator pos:start="465:14" pos:end="465:15">-&gt;</operator><name pos:start="465:16" pos:end="465:34">bits_per_raw_sample</name></name><operator pos:start="465:35" pos:end="465:35">=</operator> <name pos:start="465:37" pos:end="465:63"><name pos:start="465:37" pos:end="465:42">icodec</name><operator pos:start="465:43" pos:end="465:44">-&gt;</operator><name pos:start="465:45" pos:end="465:63">bits_per_raw_sample</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="467:9" pos:end="467:71"><expr pos:start="467:9" pos:end="467:70"><name pos:start="467:9" pos:end="467:37"><name pos:start="467:9" pos:end="467:13">codec</name><operator pos:start="467:14" pos:end="467:15">-&gt;</operator><name pos:start="467:16" pos:end="467:37">chroma_sample_location</name></name> <operator pos:start="467:39" pos:end="467:39">=</operator> <name pos:start="467:41" pos:end="467:70"><name pos:start="467:41" pos:end="467:46">icodec</name><operator pos:start="467:47" pos:end="467:48">-&gt;</operator><name pos:start="467:49" pos:end="467:70">chroma_sample_location</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="471:9" pos:end="801:9"><if pos:start="471:9" pos:end="613:9">if <condition pos:start="471:12" pos:end="471:33">(<expr pos:start="471:13" pos:end="471:32"><name pos:start="471:13" pos:end="471:32"><name pos:start="471:13" pos:end="471:15">ost</name><operator pos:start="471:16" pos:end="471:17">-&gt;</operator><name pos:start="471:18" pos:end="471:19">st</name><operator pos:start="471:20" pos:end="471:21">-&gt;</operator><name pos:start="471:22" pos:end="471:32">stream_copy</name></name></expr>)</condition> <block pos:start="471:35" pos:end="613:9">{<block_content pos:start="473:13" pos:end="611:13">

            <decl_stmt pos:start="473:13" pos:end="473:98"><decl pos:start="473:13" pos:end="473:97"><type pos:start="473:13" pos:end="473:20"><name pos:start="473:13" pos:end="473:20">uint64_t</name></type> <name pos:start="473:22" pos:end="473:31">extra_size</name> <init pos:start="473:33" pos:end="473:97">= <expr pos:start="473:35" pos:end="473:97"><operator pos:start="473:35" pos:end="473:35">(</operator><name pos:start="473:36" pos:end="473:43">uint64_t</name><operator pos:start="473:44" pos:end="473:44">)</operator><name pos:start="473:45" pos:end="473:66"><name pos:start="473:45" pos:end="473:50">icodec</name><operator pos:start="473:51" pos:end="473:52">-&gt;</operator><name pos:start="473:53" pos:end="473:66">extradata_size</name></name> <operator pos:start="473:68" pos:end="473:68">+</operator> <name pos:start="473:70" pos:end="473:97">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="477:13" pos:end="479:26"><if pos:start="477:13" pos:end="479:26">if <condition pos:start="477:16" pos:end="477:37">(<expr pos:start="477:17" pos:end="477:36"><name pos:start="477:17" pos:end="477:26">extra_size</name> <operator pos:start="477:28" pos:end="477:28">&gt;</operator> <name pos:start="477:30" pos:end="477:36">INT_MAX</name></expr>)</condition><block type="pseudo" pos:start="479:17" pos:end="479:26"><block_content pos:start="479:17" pos:end="479:26">

                <goto pos:start="479:17" pos:end="479:26">goto <name pos:start="479:22" pos:end="479:25">fail</name>;</goto></block_content></block></if></if_stmt>



            <comment type="block" pos:start="483:13" pos:end="483:73">/* if stream_copy is selected, no need to decode or encode */</comment>

            <expr_stmt pos:start="485:13" pos:end="485:47"><expr pos:start="485:13" pos:end="485:46"><name pos:start="485:13" pos:end="485:27"><name pos:start="485:13" pos:end="485:17">codec</name><operator pos:start="485:18" pos:end="485:19">-&gt;</operator><name pos:start="485:20" pos:end="485:27">codec_id</name></name> <operator pos:start="485:29" pos:end="485:29">=</operator> <name pos:start="485:31" pos:end="485:46"><name pos:start="485:31" pos:end="485:36">icodec</name><operator pos:start="485:37" pos:end="485:38">-&gt;</operator><name pos:start="485:39" pos:end="485:46">codec_id</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="487:13" pos:end="487:51"><expr pos:start="487:13" pos:end="487:50"><name pos:start="487:13" pos:end="487:29"><name pos:start="487:13" pos:end="487:17">codec</name><operator pos:start="487:18" pos:end="487:19">-&gt;</operator><name pos:start="487:20" pos:end="487:29">codec_type</name></name> <operator pos:start="487:31" pos:end="487:31">=</operator> <name pos:start="487:33" pos:end="487:50"><name pos:start="487:33" pos:end="487:38">icodec</name><operator pos:start="487:39" pos:end="487:40">-&gt;</operator><name pos:start="487:41" pos:end="487:50">codec_type</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="491:13" pos:end="501:13"><if pos:start="491:13" pos:end="501:13">if<condition pos:start="491:15" pos:end="491:33">(<expr pos:start="491:16" pos:end="491:32"><operator pos:start="491:16" pos:end="491:16">!</operator><name pos:start="491:17" pos:end="491:32"><name pos:start="491:17" pos:end="491:21">codec</name><operator pos:start="491:22" pos:end="491:23">-&gt;</operator><name pos:start="491:24" pos:end="491:32">codec_tag</name></name></expr>)</condition><block pos:start="491:34" pos:end="501:13">{<block_content pos:start="493:17" pos:end="499:57">

                <if_stmt pos:start="493:17" pos:end="499:57"><if pos:start="493:17" pos:end="499:57">if<condition pos:start="493:19" pos:end="497:86">(   <expr pos:start="493:23" pos:end="497:85"><operator pos:start="493:23" pos:end="493:23">!</operator><name pos:start="493:24" pos:end="493:45"><name pos:start="493:24" pos:end="493:25">os</name><operator pos:start="493:26" pos:end="493:27">-&gt;</operator><name pos:start="493:28" pos:end="493:34">oformat</name><operator pos:start="493:35" pos:end="493:36">-&gt;</operator><name pos:start="493:37" pos:end="493:45">codec_tag</name></name>

                   <operator pos:start="495:20" pos:end="495:21">||</operator> <call pos:start="495:23" pos:end="495:81"><name pos:start="495:23" pos:end="495:37">av_codec_get_id</name> <argument_list pos:start="495:39" pos:end="495:81">(<argument pos:start="495:40" pos:end="495:61"><expr pos:start="495:40" pos:end="495:61"><name pos:start="495:40" pos:end="495:61"><name pos:start="495:40" pos:end="495:41">os</name><operator pos:start="495:42" pos:end="495:43">-&gt;</operator><name pos:start="495:44" pos:end="495:50">oformat</name><operator pos:start="495:51" pos:end="495:52">-&gt;</operator><name pos:start="495:53" pos:end="495:61">codec_tag</name></name></expr></argument>, <argument pos:start="495:64" pos:end="495:80"><expr pos:start="495:64" pos:end="495:80"><name pos:start="495:64" pos:end="495:80"><name pos:start="495:64" pos:end="495:69">icodec</name><operator pos:start="495:70" pos:end="495:71">-&gt;</operator><name pos:start="495:72" pos:end="495:80">codec_tag</name></name></expr></argument>)</argument_list></call> <operator pos:start="495:83" pos:end="495:84">==</operator> <name pos:start="495:86" pos:end="495:100"><name pos:start="495:86" pos:end="495:90">codec</name><operator pos:start="495:91" pos:end="495:92">-&gt;</operator><name pos:start="495:93" pos:end="495:100">codec_id</name></name>

                   <operator pos:start="497:20" pos:end="497:21">||</operator> <call pos:start="497:23" pos:end="497:80"><name pos:start="497:23" pos:end="497:38">av_codec_get_tag</name><argument_list pos:start="497:39" pos:end="497:80">(<argument pos:start="497:40" pos:end="497:61"><expr pos:start="497:40" pos:end="497:61"><name pos:start="497:40" pos:end="497:61"><name pos:start="497:40" pos:end="497:41">os</name><operator pos:start="497:42" pos:end="497:43">-&gt;</operator><name pos:start="497:44" pos:end="497:50">oformat</name><operator pos:start="497:51" pos:end="497:52">-&gt;</operator><name pos:start="497:53" pos:end="497:61">codec_tag</name></name></expr></argument>, <argument pos:start="497:64" pos:end="497:79"><expr pos:start="497:64" pos:end="497:79"><name pos:start="497:64" pos:end="497:79"><name pos:start="497:64" pos:end="497:69">icodec</name><operator pos:start="497:70" pos:end="497:71">-&gt;</operator><name pos:start="497:72" pos:end="497:79">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="497:82" pos:end="497:83">&lt;=</operator> <literal type="number" pos:start="497:85" pos:end="497:85">0</literal></expr>)</condition><block type="pseudo" pos:start="499:21" pos:end="499:57"><block_content pos:start="499:21" pos:end="499:57">

                    <expr_stmt pos:start="499:21" pos:end="499:57"><expr pos:start="499:21" pos:end="499:56"><name pos:start="499:21" pos:end="499:36"><name pos:start="499:21" pos:end="499:25">codec</name><operator pos:start="499:26" pos:end="499:27">-&gt;</operator><name pos:start="499:28" pos:end="499:36">codec_tag</name></name> <operator pos:start="499:38" pos:end="499:38">=</operator> <name pos:start="499:40" pos:end="499:56"><name pos:start="499:40" pos:end="499:45">icodec</name><operator pos:start="499:46" pos:end="499:47">-&gt;</operator><name pos:start="499:48" pos:end="499:56">codec_tag</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="505:13" pos:end="505:47"><expr pos:start="505:13" pos:end="505:46"><name pos:start="505:13" pos:end="505:27"><name pos:start="505:13" pos:end="505:17">codec</name><operator pos:start="505:18" pos:end="505:19">-&gt;</operator><name pos:start="505:20" pos:end="505:27">bit_rate</name></name> <operator pos:start="505:29" pos:end="505:29">=</operator> <name pos:start="505:31" pos:end="505:46"><name pos:start="505:31" pos:end="505:36">icodec</name><operator pos:start="505:37" pos:end="505:38">-&gt;</operator><name pos:start="505:39" pos:end="505:46">bit_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="507:13" pos:end="507:56"><expr pos:start="507:13" pos:end="507:55"><name pos:start="507:13" pos:end="507:30"><name pos:start="507:13" pos:end="507:17">codec</name><operator pos:start="507:18" pos:end="507:19">-&gt;</operator><name pos:start="507:20" pos:end="507:30">rc_max_rate</name></name>    <operator pos:start="507:35" pos:end="507:35">=</operator> <name pos:start="507:37" pos:end="507:55"><name pos:start="507:37" pos:end="507:42">icodec</name><operator pos:start="507:43" pos:end="507:44">-&gt;</operator><name pos:start="507:45" pos:end="507:55">rc_max_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="509:13" pos:end="509:59"><expr pos:start="509:13" pos:end="509:58"><name pos:start="509:13" pos:end="509:33"><name pos:start="509:13" pos:end="509:17">codec</name><operator pos:start="509:18" pos:end="509:19">-&gt;</operator><name pos:start="509:20" pos:end="509:33">rc_buffer_size</name></name> <operator pos:start="509:35" pos:end="509:35">=</operator> <name pos:start="509:37" pos:end="509:58"><name pos:start="509:37" pos:end="509:42">icodec</name><operator pos:start="509:43" pos:end="509:44">-&gt;</operator><name pos:start="509:45" pos:end="509:58">rc_buffer_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="511:13" pos:end="511:53"><expr pos:start="511:13" pos:end="511:52"><name pos:start="511:13" pos:end="511:28"><name pos:start="511:13" pos:end="511:17">codec</name><operator pos:start="511:18" pos:end="511:19">-&gt;</operator><name pos:start="511:20" pos:end="511:28">extradata</name></name><operator pos:start="511:29" pos:end="511:29">=</operator> <call pos:start="511:31" pos:end="511:52"><name pos:start="511:31" pos:end="511:40">av_mallocz</name><argument_list pos:start="511:41" pos:end="511:52">(<argument pos:start="511:42" pos:end="511:51"><expr pos:start="511:42" pos:end="511:51"><name pos:start="511:42" pos:end="511:51">extra_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="513:13" pos:end="515:26"><if pos:start="513:13" pos:end="515:26">if <condition pos:start="513:16" pos:end="513:34">(<expr pos:start="513:17" pos:end="513:33"><operator pos:start="513:17" pos:end="513:17">!</operator><name pos:start="513:18" pos:end="513:33"><name pos:start="513:18" pos:end="513:22">codec</name><operator pos:start="513:23" pos:end="513:24">-&gt;</operator><name pos:start="513:25" pos:end="513:33">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="515:17" pos:end="515:26"><block_content pos:start="515:17" pos:end="515:26">

                <goto pos:start="515:17" pos:end="515:26">goto <name pos:start="515:22" pos:end="515:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="517:13" pos:end="517:80"><expr pos:start="517:13" pos:end="517:79"><call pos:start="517:13" pos:end="517:79"><name pos:start="517:13" pos:end="517:18">memcpy</name><argument_list pos:start="517:19" pos:end="517:79">(<argument pos:start="517:20" pos:end="517:35"><expr pos:start="517:20" pos:end="517:35"><name pos:start="517:20" pos:end="517:35"><name pos:start="517:20" pos:end="517:24">codec</name><operator pos:start="517:25" pos:end="517:26">-&gt;</operator><name pos:start="517:27" pos:end="517:35">extradata</name></name></expr></argument>, <argument pos:start="517:38" pos:end="517:54"><expr pos:start="517:38" pos:end="517:54"><name pos:start="517:38" pos:end="517:54"><name pos:start="517:38" pos:end="517:43">icodec</name><operator pos:start="517:44" pos:end="517:45">-&gt;</operator><name pos:start="517:46" pos:end="517:54">extradata</name></name></expr></argument>, <argument pos:start="517:57" pos:end="517:78"><expr pos:start="517:57" pos:end="517:78"><name pos:start="517:57" pos:end="517:78"><name pos:start="517:57" pos:end="517:62">icodec</name><operator pos:start="517:63" pos:end="517:64">-&gt;</operator><name pos:start="517:65" pos:end="517:78">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="519:13" pos:end="519:58"><expr pos:start="519:13" pos:end="519:57"><name pos:start="519:13" pos:end="519:33"><name pos:start="519:13" pos:end="519:17">codec</name><operator pos:start="519:18" pos:end="519:19">-&gt;</operator><name pos:start="519:20" pos:end="519:33">extradata_size</name></name><operator pos:start="519:34" pos:end="519:34">=</operator> <name pos:start="519:36" pos:end="519:57"><name pos:start="519:36" pos:end="519:41">icodec</name><operator pos:start="519:42" pos:end="519:43">-&gt;</operator><name pos:start="519:44" pos:end="519:57">extradata_size</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="521:13" pos:end="533:54"><if pos:start="521:13" pos:end="531:13">if<condition pos:start="521:15" pos:end="521:146">(<expr pos:start="521:16" pos:end="521:145"><operator pos:start="521:16" pos:end="521:16">!</operator><name pos:start="521:17" pos:end="521:23">copy_tb</name> <operator pos:start="521:25" pos:end="521:26">&amp;&amp;</operator> <call pos:start="521:28" pos:end="521:52"><name pos:start="521:28" pos:end="521:33">av_q2d</name><argument_list pos:start="521:34" pos:end="521:52">(<argument pos:start="521:35" pos:end="521:51"><expr pos:start="521:35" pos:end="521:51"><name pos:start="521:35" pos:end="521:51"><name pos:start="521:35" pos:end="521:40">icodec</name><operator pos:start="521:41" pos:end="521:42">-&gt;</operator><name pos:start="521:43" pos:end="521:51">time_base</name></name></expr></argument>)</argument_list></call><operator pos:start="521:53" pos:end="521:53">*</operator><name pos:start="521:54" pos:end="521:76"><name pos:start="521:54" pos:end="521:59">icodec</name><operator pos:start="521:60" pos:end="521:61">-&gt;</operator><name pos:start="521:62" pos:end="521:76">ticks_per_frame</name></name> <operator pos:start="521:78" pos:end="521:78">&gt;</operator> <call pos:start="521:80" pos:end="521:105"><name pos:start="521:80" pos:end="521:85">av_q2d</name><argument_list pos:start="521:86" pos:end="521:105">(<argument pos:start="521:87" pos:end="521:104"><expr pos:start="521:87" pos:end="521:104"><name pos:start="521:87" pos:end="521:104"><name pos:start="521:87" pos:end="521:89">ist</name><operator pos:start="521:90" pos:end="521:91">-&gt;</operator><name pos:start="521:92" pos:end="521:93">st</name><operator pos:start="521:94" pos:end="521:95">-&gt;</operator><name pos:start="521:96" pos:end="521:104">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="521:107" pos:end="521:108">&amp;&amp;</operator> <call pos:start="521:110" pos:end="521:135"><name pos:start="521:110" pos:end="521:115">av_q2d</name><argument_list pos:start="521:116" pos:end="521:135">(<argument pos:start="521:117" pos:end="521:134"><expr pos:start="521:117" pos:end="521:134"><name pos:start="521:117" pos:end="521:134"><name pos:start="521:117" pos:end="521:119">ist</name><operator pos:start="521:120" pos:end="521:121">-&gt;</operator><name pos:start="521:122" pos:end="521:123">st</name><operator pos:start="521:124" pos:end="521:125">-&gt;</operator><name pos:start="521:126" pos:end="521:134">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="521:137" pos:end="521:137">&lt;</operator> <literal type="number" pos:start="521:139" pos:end="521:141">1.0</literal><operator pos:start="521:142" pos:end="521:142">/</operator><literal type="number" pos:start="521:143" pos:end="521:145">500</literal></expr>)</condition><block pos:start="521:147" pos:end="531:13">{<block_content pos:start="523:17" pos:end="529:79">

                <expr_stmt pos:start="523:17" pos:end="523:53"><expr pos:start="523:17" pos:end="523:52"><name pos:start="523:17" pos:end="523:32"><name pos:start="523:17" pos:end="523:21">codec</name><operator pos:start="523:22" pos:end="523:23">-&gt;</operator><name pos:start="523:24" pos:end="523:32">time_base</name></name> <operator pos:start="523:34" pos:end="523:34">=</operator> <name pos:start="523:36" pos:end="523:52"><name pos:start="523:36" pos:end="523:41">icodec</name><operator pos:start="523:42" pos:end="523:43">-&gt;</operator><name pos:start="523:44" pos:end="523:52">time_base</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="525:17" pos:end="525:64"><expr pos:start="525:17" pos:end="525:63"><name pos:start="525:17" pos:end="525:36"><name pos:start="525:17" pos:end="525:21">codec</name><operator pos:start="525:22" pos:end="525:23">-&gt;</operator><name pos:start="525:24" pos:end="525:32">time_base</name><operator pos:start="525:33" pos:end="525:33">.</operator><name pos:start="525:34" pos:end="525:36">num</name></name> <operator pos:start="525:38" pos:end="525:39">*=</operator> <name pos:start="525:41" pos:end="525:63"><name pos:start="525:41" pos:end="525:46">icodec</name><operator pos:start="525:47" pos:end="525:48">-&gt;</operator><name pos:start="525:49" pos:end="525:63">ticks_per_frame</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="527:17" pos:end="529:79"><expr pos:start="527:17" pos:end="529:78"><call pos:start="527:17" pos:end="529:78"><name pos:start="527:17" pos:end="527:25">av_reduce</name><argument_list pos:start="527:26" pos:end="529:78">(<argument pos:start="527:27" pos:end="527:47"><expr pos:start="527:27" pos:end="527:47"><operator pos:start="527:27" pos:end="527:27">&amp;</operator><name pos:start="527:28" pos:end="527:47"><name pos:start="527:28" pos:end="527:32">codec</name><operator pos:start="527:33" pos:end="527:34">-&gt;</operator><name pos:start="527:35" pos:end="527:43">time_base</name><operator pos:start="527:44" pos:end="527:44">.</operator><name pos:start="527:45" pos:end="527:47">num</name></name></expr></argument>, <argument pos:start="527:50" pos:end="527:70"><expr pos:start="527:50" pos:end="527:70"><operator pos:start="527:50" pos:end="527:50">&amp;</operator><name pos:start="527:51" pos:end="527:70"><name pos:start="527:51" pos:end="527:55">codec</name><operator pos:start="527:56" pos:end="527:57">-&gt;</operator><name pos:start="527:58" pos:end="527:66">time_base</name><operator pos:start="527:67" pos:end="527:67">.</operator><name pos:start="527:68" pos:end="527:70">den</name></name></expr></argument>,

                          <argument pos:start="529:27" pos:end="529:46"><expr pos:start="529:27" pos:end="529:46"><name pos:start="529:27" pos:end="529:46"><name pos:start="529:27" pos:end="529:31">codec</name><operator pos:start="529:32" pos:end="529:33">-&gt;</operator><name pos:start="529:34" pos:end="529:42">time_base</name><operator pos:start="529:43" pos:end="529:43">.</operator><name pos:start="529:44" pos:end="529:46">num</name></name></expr></argument>, <argument pos:start="529:49" pos:end="529:68"><expr pos:start="529:49" pos:end="529:68"><name pos:start="529:49" pos:end="529:68"><name pos:start="529:49" pos:end="529:53">codec</name><operator pos:start="529:54" pos:end="529:55">-&gt;</operator><name pos:start="529:56" pos:end="529:64">time_base</name><operator pos:start="529:65" pos:end="529:65">.</operator><name pos:start="529:66" pos:end="529:68">den</name></name></expr></argument>, <argument pos:start="529:71" pos:end="529:77"><expr pos:start="529:71" pos:end="529:77"><name pos:start="529:71" pos:end="529:77">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="531:14" pos:end="533:54">else<block type="pseudo" pos:start="533:17" pos:end="533:54"><block_content pos:start="533:17" pos:end="533:54">

                <expr_stmt pos:start="533:17" pos:end="533:54"><expr pos:start="533:17" pos:end="533:53"><name pos:start="533:17" pos:end="533:32"><name pos:start="533:17" pos:end="533:21">codec</name><operator pos:start="533:22" pos:end="533:23">-&gt;</operator><name pos:start="533:24" pos:end="533:32">time_base</name></name> <operator pos:start="533:34" pos:end="533:34">=</operator> <name pos:start="533:36" pos:end="533:53"><name pos:start="533:36" pos:end="533:38">ist</name><operator pos:start="533:39" pos:end="533:40">-&gt;</operator><name pos:start="533:41" pos:end="533:42">st</name><operator pos:start="533:43" pos:end="533:44">-&gt;</operator><name pos:start="533:45" pos:end="533:53">time_base</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <switch pos:start="535:13" pos:end="611:13">switch<condition pos:start="535:19" pos:end="535:37">(<expr pos:start="535:20" pos:end="535:36"><name pos:start="535:20" pos:end="535:36"><name pos:start="535:20" pos:end="535:24">codec</name><operator pos:start="535:25" pos:end="535:26">-&gt;</operator><name pos:start="535:27" pos:end="535:36">codec_type</name></name></expr>)</condition> <block pos:start="535:39" pos:end="611:13">{<block_content pos:start="537:13" pos:end="609:24">

            <case pos:start="537:13" pos:end="537:36">case <expr pos:start="537:18" pos:end="537:35"><name pos:start="537:18" pos:end="537:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <if_stmt pos:start="539:17" pos:end="545:17"><if pos:start="539:17" pos:end="545:17">if<condition pos:start="539:19" pos:end="539:39">(<expr pos:start="539:20" pos:end="539:38"><name pos:start="539:20" pos:end="539:31">audio_volume</name> <operator pos:start="539:33" pos:end="539:34">!=</operator> <literal type="number" pos:start="539:36" pos:end="539:38">256</literal></expr>)</condition> <block pos:start="539:41" pos:end="545:17">{<block_content pos:start="541:21" pos:end="543:35">

                    <expr_stmt pos:start="541:21" pos:end="541:104"><expr pos:start="541:21" pos:end="541:103"><call pos:start="541:21" pos:end="541:103"><name pos:start="541:21" pos:end="541:27">fprintf</name><argument_list pos:start="541:28" pos:end="541:103">(<argument pos:start="541:29" pos:end="541:34"><expr pos:start="541:29" pos:end="541:34"><name pos:start="541:29" pos:end="541:34">stderr</name></expr></argument>,<argument pos:start="541:36" pos:end="541:102"><expr pos:start="541:36" pos:end="541:102"><literal type="string" pos:start="541:36" pos:end="541:102">"-acodec copy and -vol are incompatible (frames are not decoded)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="543:21" pos:end="543:35"><expr pos:start="543:21" pos:end="543:34"><call pos:start="543:21" pos:end="543:34"><name pos:start="543:21" pos:end="543:31">ffmpeg_exit</name><argument_list pos:start="543:32" pos:end="543:34">(<argument pos:start="543:33" pos:end="543:33"><expr pos:start="543:33" pos:end="543:33"><literal type="number" pos:start="543:33" pos:end="543:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="547:17" pos:end="547:63"><expr pos:start="547:17" pos:end="547:62"><name pos:start="547:17" pos:end="547:37"><name pos:start="547:17" pos:end="547:21">codec</name><operator pos:start="547:22" pos:end="547:23">-&gt;</operator><name pos:start="547:24" pos:end="547:37">channel_layout</name></name> <operator pos:start="547:39" pos:end="547:39">=</operator> <name pos:start="547:41" pos:end="547:62"><name pos:start="547:41" pos:end="547:46">icodec</name><operator pos:start="547:47" pos:end="547:48">-&gt;</operator><name pos:start="547:49" pos:end="547:62">channel_layout</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="549:17" pos:end="549:57"><expr pos:start="549:17" pos:end="549:56"><name pos:start="549:17" pos:end="549:34"><name pos:start="549:17" pos:end="549:21">codec</name><operator pos:start="549:22" pos:end="549:23">-&gt;</operator><name pos:start="549:24" pos:end="549:34">sample_rate</name></name> <operator pos:start="549:36" pos:end="549:36">=</operator> <name pos:start="549:38" pos:end="549:56"><name pos:start="549:38" pos:end="549:43">icodec</name><operator pos:start="549:44" pos:end="549:45">-&gt;</operator><name pos:start="549:46" pos:end="549:56">sample_rate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="551:17" pos:end="551:51"><expr pos:start="551:17" pos:end="551:50"><name pos:start="551:17" pos:end="551:31"><name pos:start="551:17" pos:end="551:21">codec</name><operator pos:start="551:22" pos:end="551:23">-&gt;</operator><name pos:start="551:24" pos:end="551:31">channels</name></name> <operator pos:start="551:33" pos:end="551:33">=</operator> <name pos:start="551:35" pos:end="551:50"><name pos:start="551:35" pos:end="551:40">icodec</name><operator pos:start="551:41" pos:end="551:42">-&gt;</operator><name pos:start="551:43" pos:end="551:50">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="553:17" pos:end="553:55"><expr pos:start="553:17" pos:end="553:54"><name pos:start="553:17" pos:end="553:33"><name pos:start="553:17" pos:end="553:21">codec</name><operator pos:start="553:22" pos:end="553:23">-&gt;</operator><name pos:start="553:24" pos:end="553:33">frame_size</name></name> <operator pos:start="553:35" pos:end="553:35">=</operator> <name pos:start="553:37" pos:end="553:54"><name pos:start="553:37" pos:end="553:42">icodec</name><operator pos:start="553:43" pos:end="553:44">-&gt;</operator><name pos:start="553:45" pos:end="553:54">frame_size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="555:17" pos:end="555:71"><expr pos:start="555:17" pos:end="555:70"><name pos:start="555:17" pos:end="555:41"><name pos:start="555:17" pos:end="555:21">codec</name><operator pos:start="555:22" pos:end="555:23">-&gt;</operator><name pos:start="555:24" pos:end="555:41">audio_service_type</name></name> <operator pos:start="555:43" pos:end="555:43">=</operator> <name pos:start="555:45" pos:end="555:70"><name pos:start="555:45" pos:end="555:50">icodec</name><operator pos:start="555:51" pos:end="555:52">-&gt;</operator><name pos:start="555:53" pos:end="555:70">audio_service_type</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="557:17" pos:end="557:56"><expr pos:start="557:17" pos:end="557:55"><name pos:start="557:17" pos:end="557:34"><name pos:start="557:17" pos:end="557:21">codec</name><operator pos:start="557:22" pos:end="557:23">-&gt;</operator><name pos:start="557:24" pos:end="557:34">block_align</name></name><operator pos:start="557:35" pos:end="557:35">=</operator> <name pos:start="557:37" pos:end="557:55"><name pos:start="557:37" pos:end="557:42">icodec</name><operator pos:start="557:43" pos:end="557:44">-&gt;</operator><name pos:start="557:45" pos:end="557:55">block_align</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="559:17" pos:end="561:42"><if pos:start="559:17" pos:end="561:42">if<condition pos:start="559:19" pos:end="559:78">(<expr pos:start="559:20" pos:end="559:77"><name pos:start="559:20" pos:end="559:37"><name pos:start="559:20" pos:end="559:24">codec</name><operator pos:start="559:25" pos:end="559:26">-&gt;</operator><name pos:start="559:27" pos:end="559:37">block_align</name></name> <operator pos:start="559:39" pos:end="559:40">==</operator> <literal type="number" pos:start="559:42" pos:end="559:42">1</literal> <operator pos:start="559:44" pos:end="559:45">&amp;&amp;</operator> <name pos:start="559:47" pos:end="559:61"><name pos:start="559:47" pos:end="559:51">codec</name><operator pos:start="559:52" pos:end="559:53">-&gt;</operator><name pos:start="559:54" pos:end="559:61">codec_id</name></name> <operator pos:start="559:63" pos:end="559:64">==</operator> <name pos:start="559:66" pos:end="559:77">CODEC_ID_MP3</name></expr>)</condition><block type="pseudo" pos:start="561:21" pos:end="561:42"><block_content pos:start="561:21" pos:end="561:42">

                    <expr_stmt pos:start="561:21" pos:end="561:42"><expr pos:start="561:21" pos:end="561:41"><name pos:start="561:21" pos:end="561:38"><name pos:start="561:21" pos:end="561:25">codec</name><operator pos:start="561:26" pos:end="561:27">-&gt;</operator><name pos:start="561:28" pos:end="561:38">block_align</name></name><operator pos:start="561:39" pos:end="561:39">=</operator> <literal type="number" pos:start="561:41" pos:end="561:41">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="563:17" pos:end="565:42"><if pos:start="563:17" pos:end="565:42">if<condition pos:start="563:19" pos:end="563:51">(<expr pos:start="563:20" pos:end="563:50"><name pos:start="563:20" pos:end="563:34"><name pos:start="563:20" pos:end="563:24">codec</name><operator pos:start="563:25" pos:end="563:26">-&gt;</operator><name pos:start="563:27" pos:end="563:34">codec_id</name></name> <operator pos:start="563:36" pos:end="563:37">==</operator> <name pos:start="563:39" pos:end="563:50">CODEC_ID_AC3</name></expr>)</condition><block type="pseudo" pos:start="565:21" pos:end="565:42"><block_content pos:start="565:21" pos:end="565:42">

                    <expr_stmt pos:start="565:21" pos:end="565:42"><expr pos:start="565:21" pos:end="565:41"><name pos:start="565:21" pos:end="565:38"><name pos:start="565:21" pos:end="565:25">codec</name><operator pos:start="565:26" pos:end="565:27">-&gt;</operator><name pos:start="565:28" pos:end="565:38">block_align</name></name><operator pos:start="565:39" pos:end="565:39">=</operator> <literal type="number" pos:start="565:41" pos:end="565:41">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="567:17" pos:end="567:22">break;</break>

            <case pos:start="569:13" pos:end="569:36">case <expr pos:start="569:18" pos:end="569:35"><name pos:start="569:18" pos:end="569:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <expr_stmt pos:start="571:17" pos:end="571:49"><expr pos:start="571:17" pos:end="571:48"><name pos:start="571:17" pos:end="571:30"><name pos:start="571:17" pos:end="571:21">codec</name><operator pos:start="571:22" pos:end="571:23">-&gt;</operator><name pos:start="571:24" pos:end="571:30">pix_fmt</name></name> <operator pos:start="571:32" pos:end="571:32">=</operator> <name pos:start="571:34" pos:end="571:48"><name pos:start="571:34" pos:end="571:39">icodec</name><operator pos:start="571:40" pos:end="571:41">-&gt;</operator><name pos:start="571:42" pos:end="571:48">pix_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="573:17" pos:end="573:45"><expr pos:start="573:17" pos:end="573:44"><name pos:start="573:17" pos:end="573:28"><name pos:start="573:17" pos:end="573:21">codec</name><operator pos:start="573:22" pos:end="573:23">-&gt;</operator><name pos:start="573:24" pos:end="573:28">width</name></name> <operator pos:start="573:30" pos:end="573:30">=</operator> <name pos:start="573:32" pos:end="573:44"><name pos:start="573:32" pos:end="573:37">icodec</name><operator pos:start="573:38" pos:end="573:39">-&gt;</operator><name pos:start="573:40" pos:end="573:44">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="575:17" pos:end="575:47"><expr pos:start="575:17" pos:end="575:46"><name pos:start="575:17" pos:end="575:29"><name pos:start="575:17" pos:end="575:21">codec</name><operator pos:start="575:22" pos:end="575:23">-&gt;</operator><name pos:start="575:24" pos:end="575:29">height</name></name> <operator pos:start="575:31" pos:end="575:31">=</operator> <name pos:start="575:33" pos:end="575:46"><name pos:start="575:33" pos:end="575:38">icodec</name><operator pos:start="575:39" pos:end="575:40">-&gt;</operator><name pos:start="575:41" pos:end="575:46">height</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="577:17" pos:end="577:59"><expr pos:start="577:17" pos:end="577:58"><name pos:start="577:17" pos:end="577:35"><name pos:start="577:17" pos:end="577:21">codec</name><operator pos:start="577:22" pos:end="577:23">-&gt;</operator><name pos:start="577:24" pos:end="577:35">has_b_frames</name></name> <operator pos:start="577:37" pos:end="577:37">=</operator> <name pos:start="577:39" pos:end="577:58"><name pos:start="577:39" pos:end="577:44">icodec</name><operator pos:start="577:45" pos:end="577:46">-&gt;</operator><name pos:start="577:47" pos:end="577:58">has_b_frames</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="579:17" pos:end="591:17"><if pos:start="579:17" pos:end="591:17">if <condition pos:start="579:20" pos:end="579:52">(<expr pos:start="579:21" pos:end="579:51"><operator pos:start="579:21" pos:end="579:21">!</operator><name pos:start="579:22" pos:end="579:51"><name pos:start="579:22" pos:end="579:26">codec</name><operator pos:start="579:27" pos:end="579:28">-&gt;</operator><name pos:start="579:29" pos:end="579:47">sample_aspect_ratio</name><operator pos:start="579:48" pos:end="579:48">.</operator><name pos:start="579:49" pos:end="579:51">num</name></name></expr>)</condition> <block pos:start="579:54" pos:end="591:17">{<block_content pos:start="581:21" pos:end="589:81">

                    <expr_stmt pos:start="581:21" pos:end="589:81"><expr pos:start="581:21" pos:end="589:80"><name pos:start="581:21" pos:end="581:46"><name pos:start="581:21" pos:end="581:25">codec</name><operator pos:start="581:26" pos:end="581:27">-&gt;</operator><name pos:start="581:28" pos:end="581:46">sample_aspect_ratio</name></name> <operator pos:start="581:48" pos:end="581:48">=</operator>

                    <name pos:start="583:21" pos:end="583:48"><name pos:start="583:21" pos:end="583:23">ost</name><operator pos:start="583:24" pos:end="583:25">-&gt;</operator><name pos:start="583:26" pos:end="583:27">st</name><operator pos:start="583:28" pos:end="583:29">-&gt;</operator><name pos:start="583:30" pos:end="583:48">sample_aspect_ratio</name></name> <operator pos:start="583:50" pos:end="583:50">=</operator>

                        <ternary pos:start="585:25" pos:end="589:80"><condition pos:start="585:25" pos:end="585:58"><expr pos:start="585:25" pos:end="585:56"><name pos:start="585:25" pos:end="585:56"><name pos:start="585:25" pos:end="585:27">ist</name><operator pos:start="585:28" pos:end="585:29">-&gt;</operator><name pos:start="585:30" pos:end="585:31">st</name><operator pos:start="585:32" pos:end="585:33">-&gt;</operator><name pos:start="585:34" pos:end="585:52">sample_aspect_ratio</name><operator pos:start="585:53" pos:end="585:53">.</operator><name pos:start="585:54" pos:end="585:56">num</name></name></expr> ?</condition><then pos:start="585:60" pos:end="585:87"> <expr pos:start="585:60" pos:end="585:87"><name pos:start="585:60" pos:end="585:87"><name pos:start="585:60" pos:end="585:62">ist</name><operator pos:start="585:63" pos:end="585:64">-&gt;</operator><name pos:start="585:65" pos:end="585:66">st</name><operator pos:start="585:67" pos:end="585:68">-&gt;</operator><name pos:start="585:69" pos:end="585:87">sample_aspect_ratio</name></name></expr> </then><else pos:start="585:89" pos:end="589:80">:

                        <expr pos:start="587:25" pos:end="589:80"><ternary pos:start="587:25" pos:end="589:80"><condition pos:start="587:25" pos:end="587:65"><expr pos:start="587:25" pos:end="587:63"><name pos:start="587:25" pos:end="587:63"><name pos:start="587:25" pos:end="587:27">ist</name><operator pos:start="587:28" pos:end="587:29">-&gt;</operator><name pos:start="587:30" pos:end="587:31">st</name><operator pos:start="587:32" pos:end="587:33">-&gt;</operator><name pos:start="587:34" pos:end="587:38">codec</name><operator pos:start="587:39" pos:end="587:40">-&gt;</operator><name pos:start="587:41" pos:end="587:59">sample_aspect_ratio</name><operator pos:start="587:60" pos:end="587:60">.</operator><name pos:start="587:61" pos:end="587:63">num</name></name></expr> ?</condition><then pos:start="589:25" pos:end="589:59">

                        <expr pos:start="589:25" pos:end="589:59"><name pos:start="589:25" pos:end="589:59"><name pos:start="589:25" pos:end="589:27">ist</name><operator pos:start="589:28" pos:end="589:29">-&gt;</operator><name pos:start="589:30" pos:end="589:31">st</name><operator pos:start="589:32" pos:end="589:33">-&gt;</operator><name pos:start="589:34" pos:end="589:38">codec</name><operator pos:start="589:39" pos:end="589:40">-&gt;</operator><name pos:start="589:41" pos:end="589:59">sample_aspect_ratio</name></name></expr> </then><else pos:start="589:61" pos:end="589:80">: <expr pos:start="589:63" pos:end="589:80"><operator pos:start="589:63" pos:end="589:63">(</operator><name pos:start="589:64" pos:end="589:73">AVRational</name><operator pos:start="589:74" pos:end="589:74">)</operator><block pos:start="589:75" pos:end="589:80">{<expr pos:start="589:76" pos:end="589:76"><literal type="number" pos:start="589:76" pos:end="589:76">0</literal></expr>, <expr pos:start="589:79" pos:end="589:79"><literal type="number" pos:start="589:79" pos:end="589:79">1</literal></expr>}</block></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="593:17" pos:end="593:22">break;</break>

            <case pos:start="595:13" pos:end="595:39">case <expr pos:start="595:18" pos:end="595:38"><name pos:start="595:18" pos:end="595:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="597:17" pos:end="597:45"><expr pos:start="597:17" pos:end="597:44"><name pos:start="597:17" pos:end="597:28"><name pos:start="597:17" pos:end="597:21">codec</name><operator pos:start="597:22" pos:end="597:23">-&gt;</operator><name pos:start="597:24" pos:end="597:28">width</name></name> <operator pos:start="597:30" pos:end="597:30">=</operator> <name pos:start="597:32" pos:end="597:44"><name pos:start="597:32" pos:end="597:37">icodec</name><operator pos:start="597:38" pos:end="597:39">-&gt;</operator><name pos:start="597:40" pos:end="597:44">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="599:17" pos:end="599:47"><expr pos:start="599:17" pos:end="599:46"><name pos:start="599:17" pos:end="599:29"><name pos:start="599:17" pos:end="599:21">codec</name><operator pos:start="599:22" pos:end="599:23">-&gt;</operator><name pos:start="599:24" pos:end="599:29">height</name></name> <operator pos:start="599:31" pos:end="599:31">=</operator> <name pos:start="599:33" pos:end="599:46"><name pos:start="599:33" pos:end="599:38">icodec</name><operator pos:start="599:39" pos:end="599:40">-&gt;</operator><name pos:start="599:41" pos:end="599:46">height</name></name></expr>;</expr_stmt>

                <break pos:start="601:17" pos:end="601:22">break;</break>

            <case pos:start="603:13" pos:end="603:35">case <expr pos:start="603:18" pos:end="603:34"><name pos:start="603:18" pos:end="603:34">AVMEDIA_TYPE_DATA</name></expr>:</case>

                <break pos:start="605:17" pos:end="605:22">break;</break>

            <default pos:start="607:13" pos:end="607:20">default:</default>

                <expr_stmt pos:start="609:17" pos:end="609:24"><expr pos:start="609:17" pos:end="609:23"><call pos:start="609:17" pos:end="609:23"><name pos:start="609:17" pos:end="609:21">abort</name><argument_list pos:start="609:22" pos:end="609:23">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="613:11" pos:end="801:9">else <block pos:start="613:16" pos:end="801:9">{<block_content pos:start="615:13" pos:end="799:13">

            <switch pos:start="615:13" pos:end="747:13">switch<condition pos:start="615:19" pos:end="615:37">(<expr pos:start="615:20" pos:end="615:36"><name pos:start="615:20" pos:end="615:36"><name pos:start="615:20" pos:end="615:24">codec</name><operator pos:start="615:25" pos:end="615:26">-&gt;</operator><name pos:start="615:27" pos:end="615:36">codec_type</name></name></expr>)</condition> <block pos:start="615:39" pos:end="747:13">{<block_content pos:start="617:13" pos:end="745:22">

            <case pos:start="617:13" pos:end="617:36">case <expr pos:start="617:18" pos:end="617:35"><name pos:start="617:18" pos:end="617:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <expr_stmt pos:start="619:17" pos:end="619:47"><expr pos:start="619:17" pos:end="619:46"><name pos:start="619:17" pos:end="619:25"><name pos:start="619:17" pos:end="619:19">ost</name><operator pos:start="619:20" pos:end="619:21">-&gt;</operator><name pos:start="619:22" pos:end="619:25">fifo</name></name><operator pos:start="619:26" pos:end="619:26">=</operator> <call pos:start="619:28" pos:end="619:46"><name pos:start="619:28" pos:end="619:40">av_fifo_alloc</name><argument_list pos:start="619:41" pos:end="619:46">(<argument pos:start="619:42" pos:end="619:45"><expr pos:start="619:42" pos:end="619:45"><literal type="number" pos:start="619:42" pos:end="619:45">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="621:17" pos:end="623:30"><if pos:start="621:17" pos:end="623:30">if<condition pos:start="621:19" pos:end="621:30">(<expr pos:start="621:20" pos:end="621:29"><operator pos:start="621:20" pos:end="621:20">!</operator><name pos:start="621:21" pos:end="621:29"><name pos:start="621:21" pos:end="621:23">ost</name><operator pos:start="621:24" pos:end="621:25">-&gt;</operator><name pos:start="621:26" pos:end="621:29">fifo</name></name></expr>)</condition><block type="pseudo" pos:start="623:21" pos:end="623:30"><block_content pos:start="623:21" pos:end="623:30">

                    <goto pos:start="623:21" pos:end="623:30">goto <name pos:start="623:26" pos:end="623:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="625:17" pos:end="625:91"><expr pos:start="625:17" pos:end="625:90"><name pos:start="625:17" pos:end="625:34"><name pos:start="625:17" pos:end="625:19">ost</name><operator pos:start="625:20" pos:end="625:21">-&gt;</operator><name pos:start="625:22" pos:end="625:34">reformat_pair</name></name> <operator pos:start="625:36" pos:end="625:36">=</operator> <call pos:start="625:38" pos:end="625:90"><name pos:start="625:38" pos:end="625:51">MAKE_SFMT_PAIR</name><argument_list pos:start="625:52" pos:end="625:90">(<argument pos:start="625:53" pos:end="625:70"><expr pos:start="625:53" pos:end="625:70"><name pos:start="625:53" pos:end="625:70">AV_SAMPLE_FMT_NONE</name></expr></argument>,<argument pos:start="625:72" pos:end="625:89"><expr pos:start="625:72" pos:end="625:89"><name pos:start="625:72" pos:end="625:89">AV_SAMPLE_FMT_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="627:17" pos:end="627:105"><expr pos:start="627:17" pos:end="627:104"><name pos:start="627:17" pos:end="627:35"><name pos:start="627:17" pos:end="627:19">ost</name><operator pos:start="627:20" pos:end="627:21">-&gt;</operator><name pos:start="627:22" pos:end="627:35">audio_resample</name></name> <operator pos:start="627:37" pos:end="627:37">=</operator> <name pos:start="627:39" pos:end="627:56"><name pos:start="627:39" pos:end="627:43">codec</name><operator pos:start="627:44" pos:end="627:45">-&gt;</operator><name pos:start="627:46" pos:end="627:56">sample_rate</name></name> <operator pos:start="627:58" pos:end="627:59">!=</operator> <name pos:start="627:61" pos:end="627:79"><name pos:start="627:61" pos:end="627:66">icodec</name><operator pos:start="627:67" pos:end="627:68">-&gt;</operator><name pos:start="627:69" pos:end="627:79">sample_rate</name></name> <operator pos:start="627:81" pos:end="627:82">||</operator> <name pos:start="627:84" pos:end="627:100">audio_sync_method</name> <operator pos:start="627:102" pos:end="627:102">&gt;</operator> <literal type="number" pos:start="627:104" pos:end="627:104">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="629:17" pos:end="629:59"><expr pos:start="629:17" pos:end="629:58"><name pos:start="629:17" pos:end="629:40"><name pos:start="629:17" pos:end="629:22">icodec</name><operator pos:start="629:23" pos:end="629:24">-&gt;</operator><name pos:start="629:25" pos:end="629:40">request_channels</name></name> <operator pos:start="629:42" pos:end="629:42">=</operator> <name pos:start="629:44" pos:end="629:58"><name pos:start="629:44" pos:end="629:48">codec</name><operator pos:start="629:49" pos:end="629:50">-&gt;</operator><name pos:start="629:51" pos:end="629:58">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="631:17" pos:end="631:41"><expr pos:start="631:17" pos:end="631:40"><name pos:start="631:17" pos:end="631:36"><name pos:start="631:17" pos:end="631:19">ist</name><operator pos:start="631:20" pos:end="631:21">-&gt;</operator><name pos:start="631:22" pos:end="631:36">decoding_needed</name></name> <operator pos:start="631:38" pos:end="631:38">=</operator> <literal type="number" pos:start="631:40" pos:end="631:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="633:17" pos:end="633:41"><expr pos:start="633:17" pos:end="633:40"><name pos:start="633:17" pos:end="633:36"><name pos:start="633:17" pos:end="633:19">ost</name><operator pos:start="633:20" pos:end="633:21">-&gt;</operator><name pos:start="633:22" pos:end="633:36">encoding_needed</name></name> <operator pos:start="633:38" pos:end="633:38">=</operator> <literal type="number" pos:start="633:40" pos:end="633:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="635:17" pos:end="635:63"><expr pos:start="635:17" pos:end="635:62"><name pos:start="635:17" pos:end="635:40"><name pos:start="635:17" pos:end="635:19">ost</name><operator pos:start="635:20" pos:end="635:21">-&gt;</operator><name pos:start="635:22" pos:end="635:40">resample_sample_fmt</name></name>  <operator pos:start="635:43" pos:end="635:43">=</operator> <name pos:start="635:45" pos:end="635:62"><name pos:start="635:45" pos:end="635:50">icodec</name><operator pos:start="635:51" pos:end="635:52">-&gt;</operator><name pos:start="635:53" pos:end="635:62">sample_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="637:17" pos:end="637:64"><expr pos:start="637:17" pos:end="637:63"><name pos:start="637:17" pos:end="637:41"><name pos:start="637:17" pos:end="637:19">ost</name><operator pos:start="637:20" pos:end="637:21">-&gt;</operator><name pos:start="637:22" pos:end="637:41">resample_sample_rate</name></name> <operator pos:start="637:43" pos:end="637:43">=</operator> <name pos:start="637:45" pos:end="637:63"><name pos:start="637:45" pos:end="637:50">icodec</name><operator pos:start="637:51" pos:end="637:52">-&gt;</operator><name pos:start="637:53" pos:end="637:63">sample_rate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="639:17" pos:end="639:61"><expr pos:start="639:17" pos:end="639:60"><name pos:start="639:17" pos:end="639:38"><name pos:start="639:17" pos:end="639:19">ost</name><operator pos:start="639:20" pos:end="639:21">-&gt;</operator><name pos:start="639:22" pos:end="639:38">resample_channels</name></name>    <operator pos:start="639:43" pos:end="639:43">=</operator> <name pos:start="639:45" pos:end="639:60"><name pos:start="639:45" pos:end="639:50">icodec</name><operator pos:start="639:51" pos:end="639:52">-&gt;</operator><name pos:start="639:53" pos:end="639:60">channels</name></name></expr>;</expr_stmt>

                <break pos:start="641:17" pos:end="641:22">break;</break>

            <case pos:start="643:13" pos:end="643:36">case <expr pos:start="643:18" pos:end="643:35"><name pos:start="643:18" pos:end="643:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <if_stmt pos:start="645:17" pos:end="651:17"><if pos:start="645:17" pos:end="651:17">if <condition pos:start="645:20" pos:end="645:60">(<expr pos:start="645:21" pos:end="645:59"><name pos:start="645:21" pos:end="645:43"><name pos:start="645:21" pos:end="645:23">ost</name><operator pos:start="645:24" pos:end="645:25">-&gt;</operator><name pos:start="645:26" pos:end="645:27">st</name><operator pos:start="645:28" pos:end="645:29">-&gt;</operator><name pos:start="645:30" pos:end="645:34">codec</name><operator pos:start="645:35" pos:end="645:36">-&gt;</operator><name pos:start="645:37" pos:end="645:43">pix_fmt</name></name> <operator pos:start="645:45" pos:end="645:46">==</operator> <name pos:start="645:48" pos:end="645:59">PIX_FMT_NONE</name></expr>)</condition> <block pos:start="645:62" pos:end="651:17">{<block_content pos:start="647:21" pos:end="649:35">

                    <expr_stmt pos:start="647:21" pos:end="647:97"><expr pos:start="647:21" pos:end="647:96"><call pos:start="647:21" pos:end="647:96"><name pos:start="647:21" pos:end="647:27">fprintf</name><argument_list pos:start="647:28" pos:end="647:96">(<argument pos:start="647:29" pos:end="647:34"><expr pos:start="647:29" pos:end="647:34"><name pos:start="647:29" pos:end="647:34">stderr</name></expr></argument>, <argument pos:start="647:37" pos:end="647:95"><expr pos:start="647:37" pos:end="647:95"><literal type="string" pos:start="647:37" pos:end="647:95">"Video pixel format is unknown, stream cannot be encoded\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="649:21" pos:end="649:35"><expr pos:start="649:21" pos:end="649:34"><call pos:start="649:21" pos:end="649:34"><name pos:start="649:21" pos:end="649:31">ffmpeg_exit</name><argument_list pos:start="649:32" pos:end="649:34">(<argument pos:start="649:33" pos:end="649:33"><expr pos:start="649:33" pos:end="649:33"><literal type="number" pos:start="649:33" pos:end="649:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="653:17" pos:end="657:72"><expr pos:start="653:17" pos:end="657:71"><name pos:start="653:17" pos:end="653:35"><name pos:start="653:17" pos:end="653:19">ost</name><operator pos:start="653:20" pos:end="653:21">-&gt;</operator><name pos:start="653:22" pos:end="653:35">video_resample</name></name> <operator pos:start="653:37" pos:end="653:37">=</operator> <name pos:start="653:39" pos:end="653:50"><name pos:start="653:39" pos:end="653:43">codec</name><operator pos:start="653:44" pos:end="653:45">-&gt;</operator><name pos:start="653:46" pos:end="653:50">width</name></name>   <operator pos:start="653:54" pos:end="653:55">!=</operator> <name pos:start="653:57" pos:end="653:69"><name pos:start="653:57" pos:end="653:62">icodec</name><operator pos:start="653:63" pos:end="653:64">-&gt;</operator><name pos:start="653:65" pos:end="653:69">width</name></name>  <operator pos:start="653:72" pos:end="653:73">||</operator>

                                      <name pos:start="655:39" pos:end="655:51"><name pos:start="655:39" pos:end="655:43">codec</name><operator pos:start="655:44" pos:end="655:45">-&gt;</operator><name pos:start="655:46" pos:end="655:51">height</name></name>  <operator pos:start="655:54" pos:end="655:55">!=</operator> <name pos:start="655:57" pos:end="655:70"><name pos:start="655:57" pos:end="655:62">icodec</name><operator pos:start="655:63" pos:end="655:64">-&gt;</operator><name pos:start="655:65" pos:end="655:70">height</name></name> <operator pos:start="655:72" pos:end="655:73">||</operator>

                                      <name pos:start="657:39" pos:end="657:52"><name pos:start="657:39" pos:end="657:43">codec</name><operator pos:start="657:44" pos:end="657:45">-&gt;</operator><name pos:start="657:46" pos:end="657:52">pix_fmt</name></name> <operator pos:start="657:54" pos:end="657:55">!=</operator> <name pos:start="657:57" pos:end="657:71"><name pos:start="657:57" pos:end="657:62">icodec</name><operator pos:start="657:63" pos:end="657:64">-&gt;</operator><name pos:start="657:65" pos:end="657:71">pix_fmt</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="659:17" pos:end="705:17"><if pos:start="659:17" pos:end="705:17">if <condition pos:start="659:20" pos:end="659:40">(<expr pos:start="659:21" pos:end="659:39"><name pos:start="659:21" pos:end="659:39"><name pos:start="659:21" pos:end="659:23">ost</name><operator pos:start="659:24" pos:end="659:25">-&gt;</operator><name pos:start="659:26" pos:end="659:39">video_resample</name></name></expr>)</condition> <block pos:start="659:42" pos:end="705:17">{<block_content pos:start="663:21" pos:end="703:74">

<cpp:if pos:start="661:1" pos:end="661:20">#<cpp:directive pos:start="661:2" pos:end="661:3">if</cpp:directive> <expr pos:start="661:5" pos:end="661:20"><operator pos:start="661:5" pos:end="661:5">!</operator><name pos:start="661:6" pos:end="661:20">CONFIG_AVFILTER</name></expr></cpp:if>

                    <expr_stmt pos:start="663:21" pos:end="663:63"><expr pos:start="663:21" pos:end="663:62"><call pos:start="663:21" pos:end="663:62"><name pos:start="663:21" pos:end="663:46">avcodec_get_frame_defaults</name><argument_list pos:start="663:47" pos:end="663:62">(<argument pos:start="663:48" pos:end="663:61"><expr pos:start="663:48" pos:end="663:61"><operator pos:start="663:48" pos:end="663:48">&amp;</operator><name pos:start="663:49" pos:end="663:61"><name pos:start="663:49" pos:end="663:51">ost</name><operator pos:start="663:52" pos:end="663:53">-&gt;</operator><name pos:start="663:54" pos:end="663:61">pict_tmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="665:21" pos:end="673:21"><if pos:start="665:21" pos:end="673:21">if<condition pos:start="665:23" pos:end="667:70">(<expr pos:start="665:24" pos:end="667:69"><call pos:start="665:24" pos:end="667:69"><name pos:start="665:24" pos:end="665:38">avpicture_alloc</name><argument_list pos:start="665:39" pos:end="667:69">(<argument pos:start="665:40" pos:end="665:65"><expr pos:start="665:40" pos:end="665:65"><operator pos:start="665:40" pos:end="665:40">(</operator><name pos:start="665:41" pos:end="665:49">AVPicture</name><operator pos:start="665:50" pos:end="665:50">*</operator><operator pos:start="665:51" pos:end="665:51">)</operator><operator pos:start="665:52" pos:end="665:52">&amp;</operator><name pos:start="665:53" pos:end="665:65"><name pos:start="665:53" pos:end="665:55">ost</name><operator pos:start="665:56" pos:end="665:57">-&gt;</operator><name pos:start="665:58" pos:end="665:65">pict_tmp</name></name></expr></argument>, <argument pos:start="665:68" pos:end="665:81"><expr pos:start="665:68" pos:end="665:81"><name pos:start="665:68" pos:end="665:81"><name pos:start="665:68" pos:end="665:72">codec</name><operator pos:start="665:73" pos:end="665:74">-&gt;</operator><name pos:start="665:75" pos:end="665:81">pix_fmt</name></name></expr></argument>,

                                         <argument pos:start="667:42" pos:end="667:53"><expr pos:start="667:42" pos:end="667:53"><name pos:start="667:42" pos:end="667:53"><name pos:start="667:42" pos:end="667:46">codec</name><operator pos:start="667:47" pos:end="667:48">-&gt;</operator><name pos:start="667:49" pos:end="667:53">width</name></name></expr></argument>, <argument pos:start="667:56" pos:end="667:68"><expr pos:start="667:56" pos:end="667:68"><name pos:start="667:56" pos:end="667:68"><name pos:start="667:56" pos:end="667:60">codec</name><operator pos:start="667:61" pos:end="667:62">-&gt;</operator><name pos:start="667:63" pos:end="667:68">height</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="667:72" pos:end="673:21">{<block_content pos:start="669:25" pos:end="671:39">

                        <expr_stmt pos:start="669:25" pos:end="669:89"><expr pos:start="669:25" pos:end="669:88"><call pos:start="669:25" pos:end="669:88"><name pos:start="669:25" pos:end="669:31">fprintf</name><argument_list pos:start="669:32" pos:end="669:88">(<argument pos:start="669:33" pos:end="669:38"><expr pos:start="669:33" pos:end="669:38"><name pos:start="669:33" pos:end="669:38">stderr</name></expr></argument>, <argument pos:start="669:41" pos:end="669:87"><expr pos:start="669:41" pos:end="669:87"><literal type="string" pos:start="669:41" pos:end="669:87">"Cannot allocate temp picture, check pix fmt\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="671:25" pos:end="671:39"><expr pos:start="671:25" pos:end="671:38"><call pos:start="671:25" pos:end="671:38"><name pos:start="671:25" pos:end="671:35">ffmpeg_exit</name><argument_list pos:start="671:36" pos:end="671:38">(<argument pos:start="671:37" pos:end="671:37"><expr pos:start="671:37" pos:end="671:37"><literal type="number" pos:start="671:37" pos:end="671:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="675:21" pos:end="675:72"><expr pos:start="675:21" pos:end="675:71"><name pos:start="675:21" pos:end="675:29">sws_flags</name> <operator pos:start="675:31" pos:end="675:31">=</operator> <call pos:start="675:33" pos:end="675:71"><name pos:start="675:33" pos:end="675:42">av_get_int</name><argument_list pos:start="675:43" pos:end="675:71">(<argument pos:start="675:44" pos:end="675:51"><expr pos:start="675:44" pos:end="675:51"><name pos:start="675:44" pos:end="675:51">sws_opts</name></expr></argument>, <argument pos:start="675:54" pos:end="675:64"><expr pos:start="675:54" pos:end="675:64"><literal type="string" pos:start="675:54" pos:end="675:64">"sws_flags"</literal></expr></argument>, <argument pos:start="675:67" pos:end="675:70"><expr pos:start="675:67" pos:end="675:70"><name pos:start="675:67" pos:end="675:70">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="677:21" pos:end="691:57"><expr pos:start="677:21" pos:end="691:56"><name pos:start="677:21" pos:end="677:41"><name pos:start="677:21" pos:end="677:23">ost</name><operator pos:start="677:24" pos:end="677:25">-&gt;</operator><name pos:start="677:26" pos:end="677:41">img_resample_ctx</name></name> <operator pos:start="677:43" pos:end="677:43">=</operator> <call pos:start="677:45" pos:end="691:56"><name pos:start="677:45" pos:end="677:58">sws_getContext</name><argument_list pos:start="677:59" pos:end="691:56">(

                        <argument pos:start="679:25" pos:end="679:37"><expr pos:start="679:25" pos:end="679:37"><name pos:start="679:25" pos:end="679:37"><name pos:start="679:25" pos:end="679:30">icodec</name><operator pos:start="679:31" pos:end="679:32">-&gt;</operator><name pos:start="679:33" pos:end="679:37">width</name></name></expr></argument>,

                        <argument pos:start="681:25" pos:end="681:38"><expr pos:start="681:25" pos:end="681:38"><name pos:start="681:25" pos:end="681:38"><name pos:start="681:25" pos:end="681:30">icodec</name><operator pos:start="681:31" pos:end="681:32">-&gt;</operator><name pos:start="681:33" pos:end="681:38">height</name></name></expr></argument>,

                            <argument pos:start="683:29" pos:end="683:43"><expr pos:start="683:29" pos:end="683:43"><name pos:start="683:29" pos:end="683:43"><name pos:start="683:29" pos:end="683:34">icodec</name><operator pos:start="683:35" pos:end="683:36">-&gt;</operator><name pos:start="683:37" pos:end="683:43">pix_fmt</name></name></expr></argument>,

                            <argument pos:start="685:29" pos:end="685:40"><expr pos:start="685:29" pos:end="685:40"><name pos:start="685:29" pos:end="685:40"><name pos:start="685:29" pos:end="685:33">codec</name><operator pos:start="685:34" pos:end="685:35">-&gt;</operator><name pos:start="685:36" pos:end="685:40">width</name></name></expr></argument>,

                            <argument pos:start="687:29" pos:end="687:41"><expr pos:start="687:29" pos:end="687:41"><name pos:start="687:29" pos:end="687:41"><name pos:start="687:29" pos:end="687:33">codec</name><operator pos:start="687:34" pos:end="687:35">-&gt;</operator><name pos:start="687:36" pos:end="687:41">height</name></name></expr></argument>,

                            <argument pos:start="689:29" pos:end="689:42"><expr pos:start="689:29" pos:end="689:42"><name pos:start="689:29" pos:end="689:42"><name pos:start="689:29" pos:end="689:33">codec</name><operator pos:start="689:34" pos:end="689:35">-&gt;</operator><name pos:start="689:36" pos:end="689:42">pix_fmt</name></name></expr></argument>,

                            <argument pos:start="691:29" pos:end="691:37"><expr pos:start="691:29" pos:end="691:37"><name pos:start="691:29" pos:end="691:37">sws_flags</name></expr></argument>, <argument pos:start="691:40" pos:end="691:43"><expr pos:start="691:40" pos:end="691:43"><name pos:start="691:40" pos:end="691:43">NULL</name></expr></argument>, <argument pos:start="691:46" pos:end="691:49"><expr pos:start="691:46" pos:end="691:49"><name pos:start="691:46" pos:end="691:49">NULL</name></expr></argument>, <argument pos:start="691:52" pos:end="691:55"><expr pos:start="691:52" pos:end="691:55"><name pos:start="691:52" pos:end="691:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="693:21" pos:end="702:0"><if pos:start="693:21" pos:end="702:0">if <condition pos:start="693:24" pos:end="693:54">(<expr pos:start="693:25" pos:end="693:53"><name pos:start="693:25" pos:end="693:45"><name pos:start="693:25" pos:end="693:27">ost</name><operator pos:start="693:28" pos:end="693:29">-&gt;</operator><name pos:start="693:30" pos:end="693:45">img_resample_ctx</name></name> <operator pos:start="693:47" pos:end="693:48">==</operator> <name pos:start="693:50" pos:end="693:53">NULL</name></expr>)</condition> <block pos:start="693:56" pos:end="702:0">{<block_content pos:start="695:25" pos:end="697:39">

                        <expr_stmt pos:start="695:25" pos:end="695:75"><expr pos:start="695:25" pos:end="695:74"><call pos:start="695:25" pos:end="695:74"><name pos:start="695:25" pos:end="695:31">fprintf</name><argument_list pos:start="695:32" pos:end="695:74">(<argument pos:start="695:33" pos:end="695:38"><expr pos:start="695:33" pos:end="695:38"><name pos:start="695:33" pos:end="695:38">stderr</name></expr></argument>, <argument pos:start="695:41" pos:end="695:73"><expr pos:start="695:41" pos:end="695:73"><literal type="string" pos:start="695:41" pos:end="695:73">"Cannot get resampling context\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="697:25" pos:end="697:39"><expr pos:start="697:25" pos:end="697:38"><call pos:start="697:25" pos:end="697:38"><name pos:start="697:25" pos:end="697:35">ffmpeg_exit</name><argument_list pos:start="697:36" pos:end="697:38">(<argument pos:start="697:37" pos:end="697:37"><expr pos:start="697:37" pos:end="697:37"><literal type="number" pos:start="697:37" pos:end="697:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="701:1" pos:end="701:6">#<cpp:directive pos:start="701:2" pos:end="701:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="703:21" pos:end="703:74"><expr pos:start="703:21" pos:end="703:73"><name pos:start="703:21" pos:end="703:46"><name pos:start="703:21" pos:end="703:25">codec</name><operator pos:start="703:26" pos:end="703:27">-&gt;</operator><name pos:start="703:28" pos:end="703:46">bits_per_raw_sample</name></name><operator pos:start="703:47" pos:end="703:47">=</operator> <name pos:start="703:49" pos:end="703:73">frame_bits_per_raw_sample</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="707:17" pos:end="707:54"><expr pos:start="707:17" pos:end="707:53"><name pos:start="707:17" pos:end="707:36"><name pos:start="707:17" pos:end="707:19">ost</name><operator pos:start="707:20" pos:end="707:21">-&gt;</operator><name pos:start="707:22" pos:end="707:36">resample_height</name></name> <operator pos:start="707:38" pos:end="707:38">=</operator> <name pos:start="707:40" pos:end="707:53"><name pos:start="707:40" pos:end="707:45">icodec</name><operator pos:start="707:46" pos:end="707:47">-&gt;</operator><name pos:start="707:48" pos:end="707:53">height</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="709:17" pos:end="709:53"><expr pos:start="709:17" pos:end="709:52"><name pos:start="709:17" pos:end="709:35"><name pos:start="709:17" pos:end="709:19">ost</name><operator pos:start="709:20" pos:end="709:21">-&gt;</operator><name pos:start="709:22" pos:end="709:35">resample_width</name></name>  <operator pos:start="709:38" pos:end="709:38">=</operator> <name pos:start="709:40" pos:end="709:52"><name pos:start="709:40" pos:end="709:45">icodec</name><operator pos:start="709:46" pos:end="709:47">-&gt;</operator><name pos:start="709:48" pos:end="709:52">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="711:17" pos:end="711:55"><expr pos:start="711:17" pos:end="711:54"><name pos:start="711:17" pos:end="711:37"><name pos:start="711:17" pos:end="711:19">ost</name><operator pos:start="711:20" pos:end="711:21">-&gt;</operator><name pos:start="711:22" pos:end="711:37">resample_pix_fmt</name></name><operator pos:start="711:38" pos:end="711:38">=</operator> <name pos:start="711:40" pos:end="711:54"><name pos:start="711:40" pos:end="711:45">icodec</name><operator pos:start="711:46" pos:end="711:47">-&gt;</operator><name pos:start="711:48" pos:end="711:54">pix_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="713:17" pos:end="713:41"><expr pos:start="713:17" pos:end="713:40"><name pos:start="713:17" pos:end="713:36"><name pos:start="713:17" pos:end="713:19">ost</name><operator pos:start="713:20" pos:end="713:21">-&gt;</operator><name pos:start="713:22" pos:end="713:36">encoding_needed</name></name> <operator pos:start="713:38" pos:end="713:38">=</operator> <literal type="number" pos:start="713:40" pos:end="713:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="715:17" pos:end="720:0"><expr pos:start="715:17" pos:end="715:40"><name pos:start="715:17" pos:end="715:36"><name pos:start="715:17" pos:end="715:19">ist</name><operator pos:start="715:20" pos:end="715:21">-&gt;</operator><name pos:start="715:22" pos:end="715:36">decoding_needed</name></name> <operator pos:start="715:38" pos:end="715:38">=</operator> <literal type="number" pos:start="715:40" pos:end="715:40">1</literal></expr>;</expr_stmt>



<cpp:if pos:start="719:1" pos:end="719:19">#<cpp:directive pos:start="719:2" pos:end="719:3">if</cpp:directive> <expr pos:start="719:5" pos:end="719:19"><name pos:start="719:5" pos:end="719:19">CONFIG_AVFILTER</name></expr></cpp:if>

                <if_stmt pos:start="721:17" pos:end="730:0"><if pos:start="721:17" pos:end="730:0">if <condition pos:start="721:20" pos:end="721:54">(<expr pos:start="721:21" pos:end="721:53"><call pos:start="721:21" pos:end="721:53"><name pos:start="721:21" pos:end="721:43">configure_video_filters</name><argument_list pos:start="721:44" pos:end="721:53">(<argument pos:start="721:45" pos:end="721:47"><expr pos:start="721:45" pos:end="721:47"><name pos:start="721:45" pos:end="721:47">ist</name></expr></argument>, <argument pos:start="721:50" pos:end="721:52"><expr pos:start="721:50" pos:end="721:52"><name pos:start="721:50" pos:end="721:52">ost</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="721:56" pos:end="730:0">{<block_content pos:start="723:21" pos:end="725:28">

                    <expr_stmt pos:start="723:21" pos:end="723:64"><expr pos:start="723:21" pos:end="723:63"><call pos:start="723:21" pos:end="723:63"><name pos:start="723:21" pos:end="723:27">fprintf</name><argument_list pos:start="723:28" pos:end="723:63">(<argument pos:start="723:29" pos:end="723:34"><expr pos:start="723:29" pos:end="723:34"><name pos:start="723:29" pos:end="723:34">stderr</name></expr></argument>, <argument pos:start="723:37" pos:end="723:62"><expr pos:start="723:37" pos:end="723:62"><literal type="string" pos:start="723:37" pos:end="723:62">"Error opening filters!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="725:21" pos:end="725:28"><expr pos:start="725:21" pos:end="725:27"><call pos:start="725:21" pos:end="725:27"><name pos:start="725:21" pos:end="725:24">exit</name><argument_list pos:start="725:25" pos:end="725:27">(<argument pos:start="725:26" pos:end="725:26"><expr pos:start="725:26" pos:end="725:26"><literal type="number" pos:start="725:26" pos:end="725:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="729:1" pos:end="729:6">#<cpp:directive pos:start="729:2" pos:end="729:6">endif</cpp:directive></cpp:endif>

                <break pos:start="731:17" pos:end="731:22">break;</break>

            <case pos:start="733:13" pos:end="733:39">case <expr pos:start="733:18" pos:end="733:38"><name pos:start="733:18" pos:end="733:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="735:17" pos:end="735:41"><expr pos:start="735:17" pos:end="735:40"><name pos:start="735:17" pos:end="735:36"><name pos:start="735:17" pos:end="735:19">ost</name><operator pos:start="735:20" pos:end="735:21">-&gt;</operator><name pos:start="735:22" pos:end="735:36">encoding_needed</name></name> <operator pos:start="735:38" pos:end="735:38">=</operator> <literal type="number" pos:start="735:40" pos:end="735:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="737:17" pos:end="737:41"><expr pos:start="737:17" pos:end="737:40"><name pos:start="737:17" pos:end="737:36"><name pos:start="737:17" pos:end="737:19">ist</name><operator pos:start="737:20" pos:end="737:21">-&gt;</operator><name pos:start="737:22" pos:end="737:36">decoding_needed</name></name> <operator pos:start="737:38" pos:end="737:38">=</operator> <literal type="number" pos:start="737:40" pos:end="737:40">1</literal></expr>;</expr_stmt>

                <break pos:start="739:17" pos:end="739:22">break;</break>

            <default pos:start="741:13" pos:end="741:20">default:</default>

                <expr_stmt pos:start="743:17" pos:end="743:24"><expr pos:start="743:17" pos:end="743:23"><call pos:start="743:17" pos:end="743:23"><name pos:start="743:17" pos:end="743:21">abort</name><argument_list pos:start="743:22" pos:end="743:23">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="745:17" pos:end="745:22">break;</break>

            </block_content>}</block></switch>

            <comment type="block" pos:start="749:13" pos:end="749:31">/* two pass mode */</comment>

            <if_stmt pos:start="751:13" pos:end="799:13"><if pos:start="751:13" pos:end="799:13">if <condition pos:start="751:16" pos:end="753:71">(<expr pos:start="751:17" pos:end="753:70"><name pos:start="751:17" pos:end="751:36"><name pos:start="751:17" pos:end="751:19">ost</name><operator pos:start="751:20" pos:end="751:21">-&gt;</operator><name pos:start="751:22" pos:end="751:36">encoding_needed</name></name> <operator pos:start="751:38" pos:end="751:39">&amp;&amp;</operator> <name pos:start="751:41" pos:end="751:55"><name pos:start="751:41" pos:end="751:45">codec</name><operator pos:start="751:46" pos:end="751:47">-&gt;</operator><name pos:start="751:48" pos:end="751:55">codec_id</name></name> <operator pos:start="751:57" pos:end="751:58">!=</operator> <name pos:start="751:60" pos:end="751:72">CODEC_ID_H264</name> <operator pos:start="751:74" pos:end="751:75">&amp;&amp;</operator>

                <operator pos:start="753:17" pos:end="753:17">(</operator><name pos:start="753:18" pos:end="753:29"><name pos:start="753:18" pos:end="753:22">codec</name><operator pos:start="753:23" pos:end="753:24">-&gt;</operator><name pos:start="753:25" pos:end="753:29">flags</name></name> <operator pos:start="753:31" pos:end="753:31">&amp;</operator> <operator pos:start="753:33" pos:end="753:33">(</operator><name pos:start="753:34" pos:end="753:49">CODEC_FLAG_PASS1</name> <operator pos:start="753:51" pos:end="753:51">|</operator> <name pos:start="753:53" pos:end="753:68">CODEC_FLAG_PASS2</name><operator pos:start="753:69" pos:end="753:69">)</operator><operator pos:start="753:70" pos:end="753:70">)</operator></expr>)</condition> <block pos:start="753:73" pos:end="799:13">{<block_content pos:start="755:17" pos:end="797:17">

                <decl_stmt pos:start="755:17" pos:end="755:39"><decl pos:start="755:17" pos:end="755:38"><type pos:start="755:17" pos:end="755:20"><name pos:start="755:17" pos:end="755:20">char</name></type> <name pos:start="755:22" pos:end="755:38"><name pos:start="755:22" pos:end="755:32">logfilename</name><index pos:start="755:33" pos:end="755:38">[<expr pos:start="755:34" pos:end="755:37"><literal type="number" pos:start="755:34" pos:end="755:37">1024</literal></expr>]</index></name></decl>;</decl_stmt>

                <decl_stmt pos:start="757:17" pos:end="757:24"><decl pos:start="757:17" pos:end="757:23"><type pos:start="757:17" pos:end="757:22"><name pos:start="757:17" pos:end="757:20">FILE</name> <modifier pos:start="757:22" pos:end="757:22">*</modifier></type><name pos:start="757:23" pos:end="757:23">f</name></decl>;</decl_stmt>



                <expr_stmt pos:start="761:17" pos:end="765:28"><expr pos:start="761:17" pos:end="765:27"><call pos:start="761:17" pos:end="765:27"><name pos:start="761:17" pos:end="761:24">snprintf</name><argument_list pos:start="761:25" pos:end="765:27">(<argument pos:start="761:26" pos:end="761:36"><expr pos:start="761:26" pos:end="761:36"><name pos:start="761:26" pos:end="761:36">logfilename</name></expr></argument>, <argument pos:start="761:39" pos:end="761:57"><expr pos:start="761:39" pos:end="761:57"><sizeof pos:start="761:39" pos:end="761:57">sizeof<argument_list pos:start="761:45" pos:end="761:57">(<argument pos:start="761:46" pos:end="761:56"><expr pos:start="761:46" pos:end="761:56"><name pos:start="761:46" pos:end="761:56">logfilename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="761:60" pos:end="761:70"><expr pos:start="761:60" pos:end="761:70"><literal type="string" pos:start="761:60" pos:end="761:70">"%s-%d.log"</literal></expr></argument>,

                         <argument pos:start="763:26" pos:end="763:108"><expr pos:start="763:26" pos:end="763:108"><ternary pos:start="763:26" pos:end="763:108"><condition pos:start="763:26" pos:end="763:50"><expr pos:start="763:26" pos:end="763:48"><name pos:start="763:26" pos:end="763:48">pass_logfilename_prefix</name></expr> ?</condition><then pos:start="763:52" pos:end="763:74"> <expr pos:start="763:52" pos:end="763:74"><name pos:start="763:52" pos:end="763:74">pass_logfilename_prefix</name></expr> </then><else pos:start="763:76" pos:end="763:108">: <expr pos:start="763:78" pos:end="763:108"><name pos:start="763:78" pos:end="763:108">DEFAULT_PASS_LOGFILENAME_PREFIX</name></expr></else></ternary></expr></argument>,

                         <argument pos:start="765:26" pos:end="765:26"><expr pos:start="765:26" pos:end="765:26"><name pos:start="765:26" pos:end="765:26">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="767:17" pos:end="797:17"><if pos:start="767:17" pos:end="781:17">if <condition pos:start="767:20" pos:end="767:52">(<expr pos:start="767:21" pos:end="767:51"><name pos:start="767:21" pos:end="767:32"><name pos:start="767:21" pos:end="767:25">codec</name><operator pos:start="767:26" pos:end="767:27">-&gt;</operator><name pos:start="767:28" pos:end="767:32">flags</name></name> <operator pos:start="767:34" pos:end="767:34">&amp;</operator> <name pos:start="767:36" pos:end="767:51">CODEC_FLAG_PASS1</name></expr>)</condition> <block pos:start="767:54" pos:end="781:17">{<block_content pos:start="769:21" pos:end="779:37">

                    <expr_stmt pos:start="769:21" pos:end="769:49"><expr pos:start="769:21" pos:end="769:48"><name pos:start="769:21" pos:end="769:21">f</name> <operator pos:start="769:23" pos:end="769:23">=</operator> <call pos:start="769:25" pos:end="769:48"><name pos:start="769:25" pos:end="769:29">fopen</name><argument_list pos:start="769:30" pos:end="769:48">(<argument pos:start="769:31" pos:end="769:41"><expr pos:start="769:31" pos:end="769:41"><name pos:start="769:31" pos:end="769:41">logfilename</name></expr></argument>, <argument pos:start="769:44" pos:end="769:47"><expr pos:start="769:44" pos:end="769:47"><literal type="string" pos:start="769:44" pos:end="769:47">"wb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="771:21" pos:end="777:21"><if pos:start="771:21" pos:end="777:21">if <condition pos:start="771:24" pos:end="771:27">(<expr pos:start="771:25" pos:end="771:26"><operator pos:start="771:25" pos:end="771:25">!</operator><name pos:start="771:26" pos:end="771:26">f</name></expr>)</condition> <block pos:start="771:29" pos:end="777:21">{<block_content pos:start="773:25" pos:end="775:39">

                        <expr_stmt pos:start="773:25" pos:end="773:126"><expr pos:start="773:25" pos:end="773:125"><call pos:start="773:25" pos:end="773:125"><name pos:start="773:25" pos:end="773:31">fprintf</name><argument_list pos:start="773:32" pos:end="773:125">(<argument pos:start="773:33" pos:end="773:38"><expr pos:start="773:33" pos:end="773:38"><name pos:start="773:33" pos:end="773:38">stderr</name></expr></argument>, <argument pos:start="773:41" pos:end="773:94"><expr pos:start="773:41" pos:end="773:94"><literal type="string" pos:start="773:41" pos:end="773:94">"Cannot write log file '%s' for pass-1 encoding: %s\n"</literal></expr></argument>, <argument pos:start="773:97" pos:end="773:107"><expr pos:start="773:97" pos:end="773:107"><name pos:start="773:97" pos:end="773:107">logfilename</name></expr></argument>, <argument pos:start="773:110" pos:end="773:124"><expr pos:start="773:110" pos:end="773:124"><call pos:start="773:110" pos:end="773:124"><name pos:start="773:110" pos:end="773:117">strerror</name><argument_list pos:start="773:118" pos:end="773:124">(<argument pos:start="773:119" pos:end="773:123"><expr pos:start="773:119" pos:end="773:123"><name pos:start="773:119" pos:end="773:123">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="775:25" pos:end="775:39"><expr pos:start="775:25" pos:end="775:38"><call pos:start="775:25" pos:end="775:38"><name pos:start="775:25" pos:end="775:35">ffmpeg_exit</name><argument_list pos:start="775:36" pos:end="775:38">(<argument pos:start="775:37" pos:end="775:37"><expr pos:start="775:37" pos:end="775:37"><literal type="number" pos:start="775:37" pos:end="775:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="779:21" pos:end="779:37"><expr pos:start="779:21" pos:end="779:36"><name pos:start="779:21" pos:end="779:32"><name pos:start="779:21" pos:end="779:23">ost</name><operator pos:start="779:24" pos:end="779:25">-&gt;</operator><name pos:start="779:26" pos:end="779:32">logfile</name></name> <operator pos:start="779:34" pos:end="779:34">=</operator> <name pos:start="779:36" pos:end="779:36">f</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="781:19" pos:end="797:17">else <block pos:start="781:24" pos:end="797:17">{<block_content pos:start="783:21" pos:end="795:48">

                    <decl_stmt pos:start="783:21" pos:end="783:37"><decl pos:start="783:21" pos:end="783:36"><type pos:start="783:21" pos:end="783:27"><name pos:start="783:21" pos:end="783:24">char</name>  <modifier pos:start="783:27" pos:end="783:27">*</modifier></type><name pos:start="783:28" pos:end="783:36">logbuffer</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="785:21" pos:end="785:42"><decl pos:start="785:21" pos:end="785:41"><type pos:start="785:21" pos:end="785:26"><name pos:start="785:21" pos:end="785:26">size_t</name></type> <name pos:start="785:28" pos:end="785:41">logbuffer_size</name></decl>;</decl_stmt>

                    <if_stmt pos:start="787:21" pos:end="793:21"><if pos:start="787:21" pos:end="793:21">if <condition pos:start="787:24" pos:end="787:80">(<expr pos:start="787:25" pos:end="787:79"><call pos:start="787:25" pos:end="787:75"><name pos:start="787:25" pos:end="787:33">read_file</name><argument_list pos:start="787:34" pos:end="787:75">(<argument pos:start="787:35" pos:end="787:45"><expr pos:start="787:35" pos:end="787:45"><name pos:start="787:35" pos:end="787:45">logfilename</name></expr></argument>, <argument pos:start="787:48" pos:end="787:57"><expr pos:start="787:48" pos:end="787:57"><operator pos:start="787:48" pos:end="787:48">&amp;</operator><name pos:start="787:49" pos:end="787:57">logbuffer</name></expr></argument>, <argument pos:start="787:60" pos:end="787:74"><expr pos:start="787:60" pos:end="787:74"><operator pos:start="787:60" pos:end="787:60">&amp;</operator><name pos:start="787:61" pos:end="787:74">logbuffer_size</name></expr></argument>)</argument_list></call> <operator pos:start="787:77" pos:end="787:77">&lt;</operator> <literal type="number" pos:start="787:79" pos:end="787:79">0</literal></expr>)</condition> <block pos:start="787:82" pos:end="793:21">{<block_content pos:start="789:25" pos:end="791:39">

                        <expr_stmt pos:start="789:25" pos:end="789:106"><expr pos:start="789:25" pos:end="789:105"><call pos:start="789:25" pos:end="789:105"><name pos:start="789:25" pos:end="789:31">fprintf</name><argument_list pos:start="789:32" pos:end="789:105">(<argument pos:start="789:33" pos:end="789:38"><expr pos:start="789:33" pos:end="789:38"><name pos:start="789:33" pos:end="789:38">stderr</name></expr></argument>, <argument pos:start="789:41" pos:end="789:91"><expr pos:start="789:41" pos:end="789:91"><literal type="string" pos:start="789:41" pos:end="789:91">"Error reading log file '%s' for pass-2 encoding\n"</literal></expr></argument>, <argument pos:start="789:94" pos:end="789:104"><expr pos:start="789:94" pos:end="789:104"><name pos:start="789:94" pos:end="789:104">logfilename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="791:25" pos:end="791:39"><expr pos:start="791:25" pos:end="791:38"><call pos:start="791:25" pos:end="791:38"><name pos:start="791:25" pos:end="791:35">ffmpeg_exit</name><argument_list pos:start="791:36" pos:end="791:38">(<argument pos:start="791:37" pos:end="791:37"><expr pos:start="791:37" pos:end="791:37"><literal type="number" pos:start="791:37" pos:end="791:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="795:21" pos:end="795:48"><expr pos:start="795:21" pos:end="795:47"><name pos:start="795:21" pos:end="795:35"><name pos:start="795:21" pos:end="795:25">codec</name><operator pos:start="795:26" pos:end="795:27">-&gt;</operator><name pos:start="795:28" pos:end="795:35">stats_in</name></name> <operator pos:start="795:37" pos:end="795:37">=</operator> <name pos:start="795:39" pos:end="795:47">logbuffer</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="803:9" pos:end="811:9"><if pos:start="803:9" pos:end="811:9">if<condition pos:start="803:11" pos:end="803:51">(<expr pos:start="803:12" pos:end="803:50"><name pos:start="803:12" pos:end="803:28"><name pos:start="803:12" pos:end="803:16">codec</name><operator pos:start="803:17" pos:end="803:18">-&gt;</operator><name pos:start="803:19" pos:end="803:28">codec_type</name></name> <operator pos:start="803:30" pos:end="803:31">==</operator> <name pos:start="803:33" pos:end="803:50">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block pos:start="803:52" pos:end="811:9">{<block_content pos:start="807:13" pos:end="809:67">

            <comment type="block" pos:start="805:13" pos:end="805:86">/* maximum video buffer size is 6-bytes per pixel, plus DPX header size */</comment>

            <decl_stmt pos:start="807:13" pos:end="807:51"><decl pos:start="807:13" pos:end="807:50"><type pos:start="807:13" pos:end="807:15"><name pos:start="807:13" pos:end="807:15">int</name></type> <name pos:start="807:17" pos:end="807:20">size</name><init pos:start="807:21" pos:end="807:50">= <expr pos:start="807:23" pos:end="807:50"><name pos:start="807:23" pos:end="807:34"><name pos:start="807:23" pos:end="807:27">codec</name><operator pos:start="807:28" pos:end="807:29">-&gt;</operator><name pos:start="807:30" pos:end="807:34">width</name></name> <operator pos:start="807:36" pos:end="807:36">*</operator> <name pos:start="807:38" pos:end="807:50"><name pos:start="807:38" pos:end="807:42">codec</name><operator pos:start="807:43" pos:end="807:44">-&gt;</operator><name pos:start="807:45" pos:end="807:50">height</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="809:13" pos:end="809:67"><expr pos:start="809:13" pos:end="809:66"><name pos:start="809:13" pos:end="809:27">bit_buffer_size</name><operator pos:start="809:28" pos:end="809:28">=</operator> <call pos:start="809:30" pos:end="809:66"><name pos:start="809:30" pos:end="809:34">FFMAX</name><argument_list pos:start="809:35" pos:end="809:66">(<argument pos:start="809:36" pos:end="809:50"><expr pos:start="809:36" pos:end="809:50"><name pos:start="809:36" pos:end="809:50">bit_buffer_size</name></expr></argument>, <argument pos:start="809:53" pos:end="809:65"><expr pos:start="809:53" pos:end="809:65"><literal type="number" pos:start="809:53" pos:end="809:53">6</literal><operator pos:start="809:54" pos:end="809:54">*</operator><name pos:start="809:55" pos:end="809:58">size</name> <operator pos:start="809:60" pos:end="809:60">+</operator> <literal type="number" pos:start="809:62" pos:end="809:65">1664</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="817:5" pos:end="819:48"><if pos:start="817:5" pos:end="819:48">if <condition pos:start="817:8" pos:end="817:20">(<expr pos:start="817:9" pos:end="817:19"><operator pos:start="817:9" pos:end="817:9">!</operator><name pos:start="817:10" pos:end="817:19">bit_buffer</name></expr>)</condition><block type="pseudo" pos:start="819:9" pos:end="819:48"><block_content pos:start="819:9" pos:end="819:48">

        <expr_stmt pos:start="819:9" pos:end="819:48"><expr pos:start="819:9" pos:end="819:47"><name pos:start="819:9" pos:end="819:18">bit_buffer</name> <operator pos:start="819:20" pos:end="819:20">=</operator> <call pos:start="819:22" pos:end="819:47"><name pos:start="819:22" pos:end="819:30">av_malloc</name><argument_list pos:start="819:31" pos:end="819:47">(<argument pos:start="819:32" pos:end="819:46"><expr pos:start="819:32" pos:end="819:46"><name pos:start="819:32" pos:end="819:46">bit_buffer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="821:5" pos:end="831:5"><if pos:start="821:5" pos:end="831:5">if <condition pos:start="821:8" pos:end="821:20">(<expr pos:start="821:9" pos:end="821:19"><operator pos:start="821:9" pos:end="821:9">!</operator><name pos:start="821:10" pos:end="821:19">bit_buffer</name></expr>)</condition> <block pos:start="821:22" pos:end="831:5">{<block_content pos:start="823:9" pos:end="829:18">

        <expr_stmt pos:start="823:9" pos:end="825:33"><expr pos:start="823:9" pos:end="825:32"><call pos:start="823:9" pos:end="825:32"><name pos:start="823:9" pos:end="823:15">fprintf</name><argument_list pos:start="823:16" pos:end="825:32">(<argument pos:start="823:17" pos:end="823:22"><expr pos:start="823:17" pos:end="823:22"><name pos:start="823:17" pos:end="823:22">stderr</name></expr></argument>, <argument pos:start="823:25" pos:end="823:66"><expr pos:start="823:25" pos:end="823:66"><literal type="string" pos:start="823:25" pos:end="823:66">"Cannot allocate %d bytes output buffer\n"</literal></expr></argument>,

                <argument pos:start="825:17" pos:end="825:31"><expr pos:start="825:17" pos:end="825:31"><name pos:start="825:17" pos:end="825:31">bit_buffer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="827:9" pos:end="827:30"><expr pos:start="827:9" pos:end="827:29"><name pos:start="827:9" pos:end="827:11">ret</name> <operator pos:start="827:13" pos:end="827:13">=</operator> <call pos:start="827:15" pos:end="827:29"><name pos:start="827:15" pos:end="827:21">AVERROR</name><argument_list pos:start="827:22" pos:end="827:29">(<argument pos:start="827:23" pos:end="827:28"><expr pos:start="827:23" pos:end="827:28"><name pos:start="827:23" pos:end="827:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="829:9" pos:end="829:18">goto <name pos:start="829:14" pos:end="829:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="835:5" pos:end="835:27">/* open each encoder */</comment>

    <for pos:start="837:5" pos:end="897:5">for<control pos:start="837:8" pos:end="837:30">(<init pos:start="837:9" pos:end="837:12"><expr pos:start="837:9" pos:end="837:11"><name pos:start="837:9" pos:end="837:9">i</name><operator pos:start="837:10" pos:end="837:10">=</operator><literal type="number" pos:start="837:11" pos:end="837:11">0</literal></expr>;</init><condition pos:start="837:13" pos:end="837:26"><expr pos:start="837:13" pos:end="837:25"><name pos:start="837:13" pos:end="837:13">i</name><operator pos:start="837:14" pos:end="837:14">&lt;</operator><name pos:start="837:15" pos:end="837:25">nb_ostreams</name></expr>;</condition><incr pos:start="837:27" pos:end="837:29"><expr pos:start="837:27" pos:end="837:29"><name pos:start="837:27" pos:end="837:27">i</name><operator pos:start="837:28" pos:end="837:29">++</operator></expr></incr>)</control> <block pos:start="837:32" pos:end="897:5">{<block_content pos:start="839:9" pos:end="895:9">

        <expr_stmt pos:start="839:9" pos:end="839:27"><expr pos:start="839:9" pos:end="839:26"><name pos:start="839:9" pos:end="839:11">ost</name> <operator pos:start="839:13" pos:end="839:13">=</operator> <name pos:start="839:15" pos:end="839:26"><name pos:start="839:15" pos:end="839:23">ost_table</name><index pos:start="839:24" pos:end="839:26">[<expr pos:start="839:25" pos:end="839:25"><name pos:start="839:25" pos:end="839:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="841:9" pos:end="895:9"><if pos:start="841:9" pos:end="895:9">if <condition pos:start="841:12" pos:end="841:33">(<expr pos:start="841:13" pos:end="841:32"><name pos:start="841:13" pos:end="841:32"><name pos:start="841:13" pos:end="841:15">ost</name><operator pos:start="841:16" pos:end="841:17">-&gt;</operator><name pos:start="841:18" pos:end="841:32">encoding_needed</name></name></expr>)</condition> <block pos:start="841:35" pos:end="895:9">{<block_content pos:start="843:13" pos:end="893:57">

            <decl_stmt pos:start="843:13" pos:end="843:76"><decl pos:start="843:13" pos:end="843:75"><type pos:start="843:13" pos:end="843:21"><name pos:start="843:13" pos:end="843:19">AVCodec</name> <modifier pos:start="843:21" pos:end="843:21">*</modifier></type><name pos:start="843:22" pos:end="843:26">codec</name> <init pos:start="843:28" pos:end="843:75">= <expr pos:start="843:30" pos:end="843:75"><ternary pos:start="843:30" pos:end="843:75"><condition pos:start="843:30" pos:end="843:51"><expr pos:start="843:30" pos:end="843:49"><name pos:start="843:30" pos:end="843:30">i</name> <operator pos:start="843:32" pos:end="843:32">&lt;</operator> <name pos:start="843:34" pos:end="843:49">nb_output_codecs</name></expr> ?</condition><then pos:start="843:53" pos:end="843:68"> <expr pos:start="843:53" pos:end="843:68"><name pos:start="843:53" pos:end="843:68"><name pos:start="843:53" pos:end="843:65">output_codecs</name><index pos:start="843:66" pos:end="843:68">[<expr pos:start="843:67" pos:end="843:67"><name pos:start="843:67" pos:end="843:67">i</name></expr>]</index></name></expr> </then><else pos:start="843:70" pos:end="843:75">: <expr pos:start="843:72" pos:end="843:75"><name pos:start="843:72" pos:end="843:75">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="845:13" pos:end="845:74"><decl pos:start="845:13" pos:end="845:73"><type pos:start="845:13" pos:end="845:28"><name pos:start="845:13" pos:end="845:26">AVCodecContext</name> <modifier pos:start="845:28" pos:end="845:28">*</modifier></type><name pos:start="845:29" pos:end="845:31">dec</name> <init pos:start="845:33" pos:end="845:73">= <expr pos:start="845:35" pos:end="845:73"><name pos:start="845:35" pos:end="845:62"><name pos:start="845:35" pos:end="845:43">ist_table</name><index pos:start="845:44" pos:end="845:62">[<expr pos:start="845:45" pos:end="845:61"><name pos:start="845:45" pos:end="845:61"><name pos:start="845:45" pos:end="845:47">ost</name><operator pos:start="845:48" pos:end="845:49">-&gt;</operator><name pos:start="845:50" pos:end="845:61">source_index</name></name></expr>]</index></name><operator pos:start="845:63" pos:end="845:64">-&gt;</operator><name pos:start="845:65" pos:end="845:73"><name pos:start="845:65" pos:end="845:66">st</name><operator pos:start="845:67" pos:end="845:68">-&gt;</operator><name pos:start="845:69" pos:end="845:73">codec</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="847:13" pos:end="849:71"><if pos:start="847:13" pos:end="849:71">if <condition pos:start="847:16" pos:end="847:23">(<expr pos:start="847:17" pos:end="847:22"><operator pos:start="847:17" pos:end="847:17">!</operator><name pos:start="847:18" pos:end="847:22">codec</name></expr>)</condition><block type="pseudo" pos:start="849:17" pos:end="849:71"><block_content pos:start="849:17" pos:end="849:71">

                <expr_stmt pos:start="849:17" pos:end="849:71"><expr pos:start="849:17" pos:end="849:70"><name pos:start="849:17" pos:end="849:21">codec</name> <operator pos:start="849:23" pos:end="849:23">=</operator> <call pos:start="849:25" pos:end="849:70"><name pos:start="849:25" pos:end="849:44">avcodec_find_encoder</name><argument_list pos:start="849:45" pos:end="849:70">(<argument pos:start="849:46" pos:end="849:69"><expr pos:start="849:46" pos:end="849:69"><name pos:start="849:46" pos:end="849:69"><name pos:start="849:46" pos:end="849:48">ost</name><operator pos:start="849:49" pos:end="849:50">-&gt;</operator><name pos:start="849:51" pos:end="849:52">st</name><operator pos:start="849:53" pos:end="849:54">-&gt;</operator><name pos:start="849:55" pos:end="849:59">codec</name><operator pos:start="849:60" pos:end="849:61">-&gt;</operator><name pos:start="849:62" pos:end="849:69">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="851:13" pos:end="861:13"><if pos:start="851:13" pos:end="861:13">if <condition pos:start="851:16" pos:end="851:23">(<expr pos:start="851:17" pos:end="851:22"><operator pos:start="851:17" pos:end="851:17">!</operator><name pos:start="851:18" pos:end="851:22">codec</name></expr>)</condition> <block pos:start="851:25" pos:end="861:13">{<block_content pos:start="853:17" pos:end="859:33">

                <expr_stmt pos:start="853:17" pos:end="855:80"><expr pos:start="853:17" pos:end="855:79"><call pos:start="853:17" pos:end="855:79"><name pos:start="853:17" pos:end="853:24">snprintf</name><argument_list pos:start="853:25" pos:end="855:79">(<argument pos:start="853:26" pos:end="853:30"><expr pos:start="853:26" pos:end="853:30"><name pos:start="853:26" pos:end="853:30">error</name></expr></argument>, <argument pos:start="853:33" pos:end="853:45"><expr pos:start="853:33" pos:end="853:45"><sizeof pos:start="853:33" pos:end="853:45">sizeof<argument_list pos:start="853:39" pos:end="853:45">(<argument pos:start="853:40" pos:end="853:44"><expr pos:start="853:40" pos:end="853:44"><name pos:start="853:40" pos:end="853:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="853:48" pos:end="853:105"><expr pos:start="853:48" pos:end="853:105"><literal type="string" pos:start="853:48" pos:end="853:105">"Encoder (codec id %d) not found for output stream #%d.%d"</literal></expr></argument>,

                         <argument pos:start="855:26" pos:end="855:49"><expr pos:start="855:26" pos:end="855:49"><name pos:start="855:26" pos:end="855:49"><name pos:start="855:26" pos:end="855:28">ost</name><operator pos:start="855:29" pos:end="855:30">-&gt;</operator><name pos:start="855:31" pos:end="855:32">st</name><operator pos:start="855:33" pos:end="855:34">-&gt;</operator><name pos:start="855:35" pos:end="855:39">codec</name><operator pos:start="855:40" pos:end="855:41">-&gt;</operator><name pos:start="855:42" pos:end="855:49">codec_id</name></name></expr></argument>, <argument pos:start="855:52" pos:end="855:66"><expr pos:start="855:52" pos:end="855:66"><name pos:start="855:52" pos:end="855:66"><name pos:start="855:52" pos:end="855:54">ost</name><operator pos:start="855:55" pos:end="855:56">-&gt;</operator><name pos:start="855:57" pos:end="855:66">file_index</name></name></expr></argument>, <argument pos:start="855:69" pos:end="855:78"><expr pos:start="855:69" pos:end="855:78"><name pos:start="855:69" pos:end="855:78"><name pos:start="855:69" pos:end="855:71">ost</name><operator pos:start="855:72" pos:end="855:73">-&gt;</operator><name pos:start="855:74" pos:end="855:78">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="857:17" pos:end="857:38"><expr pos:start="857:17" pos:end="857:37"><name pos:start="857:17" pos:end="857:19">ret</name> <operator pos:start="857:21" pos:end="857:21">=</operator> <call pos:start="857:23" pos:end="857:37"><name pos:start="857:23" pos:end="857:29">AVERROR</name><argument_list pos:start="857:30" pos:end="857:37">(<argument pos:start="857:31" pos:end="857:36"><expr pos:start="857:31" pos:end="857:36"><name pos:start="857:31" pos:end="857:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="859:17" pos:end="859:33">goto <name pos:start="859:22" pos:end="859:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="863:13" pos:end="879:13"><if pos:start="863:13" pos:end="879:13">if <condition pos:start="863:16" pos:end="863:37">(<expr pos:start="863:17" pos:end="863:36"><name pos:start="863:17" pos:end="863:36"><name pos:start="863:17" pos:end="863:19">dec</name><operator pos:start="863:20" pos:end="863:21">-&gt;</operator><name pos:start="863:22" pos:end="863:36">subtitle_header</name></name></expr>)</condition> <block pos:start="863:39" pos:end="879:13">{<block_content pos:start="865:17" pos:end="877:81">

                <expr_stmt pos:start="865:17" pos:end="865:87"><expr pos:start="865:17" pos:end="865:86"><name pos:start="865:17" pos:end="865:47"><name pos:start="865:17" pos:end="865:19">ost</name><operator pos:start="865:20" pos:end="865:21">-&gt;</operator><name pos:start="865:22" pos:end="865:23">st</name><operator pos:start="865:24" pos:end="865:25">-&gt;</operator><name pos:start="865:26" pos:end="865:30">codec</name><operator pos:start="865:31" pos:end="865:32">-&gt;</operator><name pos:start="865:33" pos:end="865:47">subtitle_header</name></name> <operator pos:start="865:49" pos:end="865:49">=</operator> <call pos:start="865:51" pos:end="865:86"><name pos:start="865:51" pos:end="865:59">av_malloc</name><argument_list pos:start="865:60" pos:end="865:86">(<argument pos:start="865:61" pos:end="865:85"><expr pos:start="865:61" pos:end="865:85"><name pos:start="865:61" pos:end="865:85"><name pos:start="865:61" pos:end="865:63">dec</name><operator pos:start="865:64" pos:end="865:65">-&gt;</operator><name pos:start="865:66" pos:end="865:85">subtitle_header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="867:17" pos:end="873:17"><if pos:start="867:17" pos:end="873:17">if <condition pos:start="867:20" pos:end="867:53">(<expr pos:start="867:21" pos:end="867:52"><operator pos:start="867:21" pos:end="867:21">!</operator><name pos:start="867:22" pos:end="867:52"><name pos:start="867:22" pos:end="867:24">ost</name><operator pos:start="867:25" pos:end="867:26">-&gt;</operator><name pos:start="867:27" pos:end="867:28">st</name><operator pos:start="867:29" pos:end="867:30">-&gt;</operator><name pos:start="867:31" pos:end="867:35">codec</name><operator pos:start="867:36" pos:end="867:37">-&gt;</operator><name pos:start="867:38" pos:end="867:52">subtitle_header</name></name></expr>)</condition> <block pos:start="867:55" pos:end="873:17">{<block_content pos:start="869:21" pos:end="871:37">

                    <expr_stmt pos:start="869:21" pos:end="869:42"><expr pos:start="869:21" pos:end="869:41"><name pos:start="869:21" pos:end="869:23">ret</name> <operator pos:start="869:25" pos:end="869:25">=</operator> <call pos:start="869:27" pos:end="869:41"><name pos:start="869:27" pos:end="869:33">AVERROR</name><argument_list pos:start="869:34" pos:end="869:41">(<argument pos:start="869:35" pos:end="869:40"><expr pos:start="869:35" pos:end="869:40"><name pos:start="869:35" pos:end="869:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="871:21" pos:end="871:37">goto <name pos:start="871:26" pos:end="871:36">dump_format</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="875:17" pos:end="875:105"><expr pos:start="875:17" pos:end="875:104"><call pos:start="875:17" pos:end="875:104"><name pos:start="875:17" pos:end="875:22">memcpy</name><argument_list pos:start="875:23" pos:end="875:104">(<argument pos:start="875:24" pos:end="875:54"><expr pos:start="875:24" pos:end="875:54"><name pos:start="875:24" pos:end="875:54"><name pos:start="875:24" pos:end="875:26">ost</name><operator pos:start="875:27" pos:end="875:28">-&gt;</operator><name pos:start="875:29" pos:end="875:30">st</name><operator pos:start="875:31" pos:end="875:32">-&gt;</operator><name pos:start="875:33" pos:end="875:37">codec</name><operator pos:start="875:38" pos:end="875:39">-&gt;</operator><name pos:start="875:40" pos:end="875:54">subtitle_header</name></name></expr></argument>, <argument pos:start="875:57" pos:end="875:76"><expr pos:start="875:57" pos:end="875:76"><name pos:start="875:57" pos:end="875:76"><name pos:start="875:57" pos:end="875:59">dec</name><operator pos:start="875:60" pos:end="875:61">-&gt;</operator><name pos:start="875:62" pos:end="875:76">subtitle_header</name></name></expr></argument>, <argument pos:start="875:79" pos:end="875:103"><expr pos:start="875:79" pos:end="875:103"><name pos:start="875:79" pos:end="875:103"><name pos:start="875:79" pos:end="875:81">dec</name><operator pos:start="875:82" pos:end="875:83">-&gt;</operator><name pos:start="875:84" pos:end="875:103">subtitle_header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="877:17" pos:end="877:81"><expr pos:start="877:17" pos:end="877:80"><name pos:start="877:17" pos:end="877:52"><name pos:start="877:17" pos:end="877:19">ost</name><operator pos:start="877:20" pos:end="877:21">-&gt;</operator><name pos:start="877:22" pos:end="877:23">st</name><operator pos:start="877:24" pos:end="877:25">-&gt;</operator><name pos:start="877:26" pos:end="877:30">codec</name><operator pos:start="877:31" pos:end="877:32">-&gt;</operator><name pos:start="877:33" pos:end="877:52">subtitle_header_size</name></name> <operator pos:start="877:54" pos:end="877:54">=</operator> <name pos:start="877:56" pos:end="877:80"><name pos:start="877:56" pos:end="877:58">dec</name><operator pos:start="877:59" pos:end="877:60">-&gt;</operator><name pos:start="877:61" pos:end="877:80">subtitle_header_size</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="881:13" pos:end="891:13"><if pos:start="881:13" pos:end="891:13">if <condition pos:start="881:16" pos:end="881:56">(<expr pos:start="881:17" pos:end="881:55"><call pos:start="881:17" pos:end="881:51"><name pos:start="881:17" pos:end="881:28">avcodec_open</name><argument_list pos:start="881:29" pos:end="881:51">(<argument pos:start="881:30" pos:end="881:43"><expr pos:start="881:30" pos:end="881:43"><name pos:start="881:30" pos:end="881:43"><name pos:start="881:30" pos:end="881:32">ost</name><operator pos:start="881:33" pos:end="881:34">-&gt;</operator><name pos:start="881:35" pos:end="881:36">st</name><operator pos:start="881:37" pos:end="881:38">-&gt;</operator><name pos:start="881:39" pos:end="881:43">codec</name></name></expr></argument>, <argument pos:start="881:46" pos:end="881:50"><expr pos:start="881:46" pos:end="881:50"><name pos:start="881:46" pos:end="881:50">codec</name></expr></argument>)</argument_list></call> <operator pos:start="881:53" pos:end="881:53">&lt;</operator> <literal type="number" pos:start="881:55" pos:end="881:55">0</literal></expr>)</condition> <block pos:start="881:58" pos:end="891:13">{<block_content pos:start="883:17" pos:end="889:33">

                <expr_stmt pos:start="883:17" pos:end="885:53"><expr pos:start="883:17" pos:end="885:52"><call pos:start="883:17" pos:end="885:52"><name pos:start="883:17" pos:end="883:24">snprintf</name><argument_list pos:start="883:25" pos:end="885:52">(<argument pos:start="883:26" pos:end="883:30"><expr pos:start="883:26" pos:end="883:30"><name pos:start="883:26" pos:end="883:30">error</name></expr></argument>, <argument pos:start="883:33" pos:end="883:45"><expr pos:start="883:33" pos:end="883:45"><sizeof pos:start="883:33" pos:end="883:45">sizeof<argument_list pos:start="883:39" pos:end="883:45">(<argument pos:start="883:40" pos:end="883:44"><expr pos:start="883:40" pos:end="883:44"><name pos:start="883:40" pos:end="883:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="883:48" pos:end="883:170"><expr pos:start="883:48" pos:end="883:170"><literal type="string" pos:start="883:48" pos:end="883:170">"Error while opening encoder for output stream #%d.%d - maybe incorrect parameters such as bit_rate, rate, width or height"</literal></expr></argument>,

                        <argument pos:start="885:25" pos:end="885:39"><expr pos:start="885:25" pos:end="885:39"><name pos:start="885:25" pos:end="885:39"><name pos:start="885:25" pos:end="885:27">ost</name><operator pos:start="885:28" pos:end="885:29">-&gt;</operator><name pos:start="885:30" pos:end="885:39">file_index</name></name></expr></argument>, <argument pos:start="885:42" pos:end="885:51"><expr pos:start="885:42" pos:end="885:51"><name pos:start="885:42" pos:end="885:51"><name pos:start="885:42" pos:end="885:44">ost</name><operator pos:start="885:45" pos:end="885:46">-&gt;</operator><name pos:start="885:47" pos:end="885:51">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="887:17" pos:end="887:38"><expr pos:start="887:17" pos:end="887:37"><name pos:start="887:17" pos:end="887:19">ret</name> <operator pos:start="887:21" pos:end="887:21">=</operator> <call pos:start="887:23" pos:end="887:37"><name pos:start="887:23" pos:end="887:29">AVERROR</name><argument_list pos:start="887:30" pos:end="887:37">(<argument pos:start="887:31" pos:end="887:36"><expr pos:start="887:31" pos:end="887:36"><name pos:start="887:31" pos:end="887:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="889:17" pos:end="889:33">goto <name pos:start="889:22" pos:end="889:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="893:13" pos:end="893:57"><expr pos:start="893:13" pos:end="893:56"><name pos:start="893:13" pos:end="893:22">extra_size</name> <operator pos:start="893:24" pos:end="893:25">+=</operator> <name pos:start="893:27" pos:end="893:56"><name pos:start="893:27" pos:end="893:29">ost</name><operator pos:start="893:30" pos:end="893:31">-&gt;</operator><name pos:start="893:32" pos:end="893:33">st</name><operator pos:start="893:34" pos:end="893:35">-&gt;</operator><name pos:start="893:36" pos:end="893:40">codec</name><operator pos:start="893:41" pos:end="893:42">-&gt;</operator><name pos:start="893:43" pos:end="893:56">extradata_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="901:5" pos:end="901:27">/* open each decoder */</comment>

    <for pos:start="903:5" pos:end="945:5">for<control pos:start="903:8" pos:end="903:30">(<init pos:start="903:9" pos:end="903:12"><expr pos:start="903:9" pos:end="903:11"><name pos:start="903:9" pos:end="903:9">i</name><operator pos:start="903:10" pos:end="903:10">=</operator><literal type="number" pos:start="903:11" pos:end="903:11">0</literal></expr>;</init><condition pos:start="903:13" pos:end="903:26"><expr pos:start="903:13" pos:end="903:25"><name pos:start="903:13" pos:end="903:13">i</name><operator pos:start="903:14" pos:end="903:14">&lt;</operator><name pos:start="903:15" pos:end="903:25">nb_istreams</name></expr>;</condition><incr pos:start="903:27" pos:end="903:29"><expr pos:start="903:27" pos:end="903:29"><name pos:start="903:27" pos:end="903:27">i</name><operator pos:start="903:28" pos:end="903:29">++</operator></expr></incr>)</control> <block pos:start="903:32" pos:end="945:5">{<block_content pos:start="905:9" pos:end="943:9">

        <expr_stmt pos:start="905:9" pos:end="905:27"><expr pos:start="905:9" pos:end="905:26"><name pos:start="905:9" pos:end="905:11">ist</name> <operator pos:start="905:13" pos:end="905:13">=</operator> <name pos:start="905:15" pos:end="905:26"><name pos:start="905:15" pos:end="905:23">ist_table</name><index pos:start="905:24" pos:end="905:26">[<expr pos:start="905:25" pos:end="905:25"><name pos:start="905:25" pos:end="905:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="907:9" pos:end="943:9"><if pos:start="907:9" pos:end="943:9">if <condition pos:start="907:12" pos:end="907:33">(<expr pos:start="907:13" pos:end="907:32"><name pos:start="907:13" pos:end="907:32"><name pos:start="907:13" pos:end="907:15">ist</name><operator pos:start="907:16" pos:end="907:17">-&gt;</operator><name pos:start="907:18" pos:end="907:32">decoding_needed</name></name></expr>)</condition> <block pos:start="907:35" pos:end="943:9">{<block_content pos:start="909:13" pos:end="937:13">

            <decl_stmt pos:start="909:13" pos:end="909:74"><decl pos:start="909:13" pos:end="909:73"><type pos:start="909:13" pos:end="909:21"><name pos:start="909:13" pos:end="909:19">AVCodec</name> <modifier pos:start="909:21" pos:end="909:21">*</modifier></type><name pos:start="909:22" pos:end="909:26">codec</name> <init pos:start="909:28" pos:end="909:73">= <expr pos:start="909:30" pos:end="909:73"><ternary pos:start="909:30" pos:end="909:73"><condition pos:start="909:30" pos:end="909:50"><expr pos:start="909:30" pos:end="909:48"><name pos:start="909:30" pos:end="909:30">i</name> <operator pos:start="909:32" pos:end="909:32">&lt;</operator> <name pos:start="909:34" pos:end="909:48">nb_input_codecs</name></expr> ?</condition><then pos:start="909:52" pos:end="909:66"> <expr pos:start="909:52" pos:end="909:66"><name pos:start="909:52" pos:end="909:66"><name pos:start="909:52" pos:end="909:63">input_codecs</name><index pos:start="909:64" pos:end="909:66">[<expr pos:start="909:65" pos:end="909:65"><name pos:start="909:65" pos:end="909:65">i</name></expr>]</index></name></expr> </then><else pos:start="909:68" pos:end="909:73">: <expr pos:start="909:70" pos:end="909:73"><name pos:start="909:70" pos:end="909:73">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="911:13" pos:end="913:71"><if pos:start="911:13" pos:end="913:71">if <condition pos:start="911:16" pos:end="911:23">(<expr pos:start="911:17" pos:end="911:22"><operator pos:start="911:17" pos:end="911:17">!</operator><name pos:start="911:18" pos:end="911:22">codec</name></expr>)</condition><block type="pseudo" pos:start="913:17" pos:end="913:71"><block_content pos:start="913:17" pos:end="913:71">

                <expr_stmt pos:start="913:17" pos:end="913:71"><expr pos:start="913:17" pos:end="913:70"><name pos:start="913:17" pos:end="913:21">codec</name> <operator pos:start="913:23" pos:end="913:23">=</operator> <call pos:start="913:25" pos:end="913:70"><name pos:start="913:25" pos:end="913:44">avcodec_find_decoder</name><argument_list pos:start="913:45" pos:end="913:70">(<argument pos:start="913:46" pos:end="913:69"><expr pos:start="913:46" pos:end="913:69"><name pos:start="913:46" pos:end="913:69"><name pos:start="913:46" pos:end="913:48">ist</name><operator pos:start="913:49" pos:end="913:50">-&gt;</operator><name pos:start="913:51" pos:end="913:52">st</name><operator pos:start="913:53" pos:end="913:54">-&gt;</operator><name pos:start="913:55" pos:end="913:59">codec</name><operator pos:start="913:60" pos:end="913:61">-&gt;</operator><name pos:start="913:62" pos:end="913:69">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="915:13" pos:end="925:13"><if pos:start="915:13" pos:end="925:13">if <condition pos:start="915:16" pos:end="915:23">(<expr pos:start="915:17" pos:end="915:22"><operator pos:start="915:17" pos:end="915:17">!</operator><name pos:start="915:18" pos:end="915:22">codec</name></expr>)</condition> <block pos:start="915:25" pos:end="925:13">{<block_content pos:start="917:17" pos:end="923:33">

                <expr_stmt pos:start="917:17" pos:end="919:79"><expr pos:start="917:17" pos:end="919:78"><call pos:start="917:17" pos:end="919:78"><name pos:start="917:17" pos:end="917:24">snprintf</name><argument_list pos:start="917:25" pos:end="919:78">(<argument pos:start="917:26" pos:end="917:30"><expr pos:start="917:26" pos:end="917:30"><name pos:start="917:26" pos:end="917:30">error</name></expr></argument>, <argument pos:start="917:33" pos:end="917:45"><expr pos:start="917:33" pos:end="917:45"><sizeof pos:start="917:33" pos:end="917:45">sizeof<argument_list pos:start="917:39" pos:end="917:45">(<argument pos:start="917:40" pos:end="917:44"><expr pos:start="917:40" pos:end="917:44"><name pos:start="917:40" pos:end="917:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="917:48" pos:end="917:104"><expr pos:start="917:48" pos:end="917:104"><literal type="string" pos:start="917:48" pos:end="917:104">"Decoder (codec id %d) not found for input stream #%d.%d"</literal></expr></argument>,

                        <argument pos:start="919:25" pos:end="919:48"><expr pos:start="919:25" pos:end="919:48"><name pos:start="919:25" pos:end="919:48"><name pos:start="919:25" pos:end="919:27">ist</name><operator pos:start="919:28" pos:end="919:29">-&gt;</operator><name pos:start="919:30" pos:end="919:31">st</name><operator pos:start="919:32" pos:end="919:33">-&gt;</operator><name pos:start="919:34" pos:end="919:38">codec</name><operator pos:start="919:39" pos:end="919:40">-&gt;</operator><name pos:start="919:41" pos:end="919:48">codec_id</name></name></expr></argument>, <argument pos:start="919:51" pos:end="919:65"><expr pos:start="919:51" pos:end="919:65"><name pos:start="919:51" pos:end="919:65"><name pos:start="919:51" pos:end="919:53">ist</name><operator pos:start="919:54" pos:end="919:55">-&gt;</operator><name pos:start="919:56" pos:end="919:65">file_index</name></name></expr></argument>, <argument pos:start="919:68" pos:end="919:77"><expr pos:start="919:68" pos:end="919:77"><name pos:start="919:68" pos:end="919:77"><name pos:start="919:68" pos:end="919:70">ist</name><operator pos:start="919:71" pos:end="919:72">-&gt;</operator><name pos:start="919:73" pos:end="919:77">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="921:17" pos:end="921:38"><expr pos:start="921:17" pos:end="921:37"><name pos:start="921:17" pos:end="921:19">ret</name> <operator pos:start="921:21" pos:end="921:21">=</operator> <call pos:start="921:23" pos:end="921:37"><name pos:start="921:23" pos:end="921:29">AVERROR</name><argument_list pos:start="921:30" pos:end="921:37">(<argument pos:start="921:31" pos:end="921:36"><expr pos:start="921:31" pos:end="921:36"><name pos:start="921:31" pos:end="921:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="923:17" pos:end="923:33">goto <name pos:start="923:22" pos:end="923:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="927:13" pos:end="937:13"><if pos:start="927:13" pos:end="937:13">if <condition pos:start="927:16" pos:end="927:56">(<expr pos:start="927:17" pos:end="927:55"><call pos:start="927:17" pos:end="927:51"><name pos:start="927:17" pos:end="927:28">avcodec_open</name><argument_list pos:start="927:29" pos:end="927:51">(<argument pos:start="927:30" pos:end="927:43"><expr pos:start="927:30" pos:end="927:43"><name pos:start="927:30" pos:end="927:43"><name pos:start="927:30" pos:end="927:32">ist</name><operator pos:start="927:33" pos:end="927:34">-&gt;</operator><name pos:start="927:35" pos:end="927:36">st</name><operator pos:start="927:37" pos:end="927:38">-&gt;</operator><name pos:start="927:39" pos:end="927:43">codec</name></name></expr></argument>, <argument pos:start="927:46" pos:end="927:50"><expr pos:start="927:46" pos:end="927:50"><name pos:start="927:46" pos:end="927:50">codec</name></expr></argument>)</argument_list></call> <operator pos:start="927:53" pos:end="927:53">&lt;</operator> <literal type="number" pos:start="927:55" pos:end="927:55">0</literal></expr>)</condition> <block pos:start="927:58" pos:end="937:13">{<block_content pos:start="929:17" pos:end="935:33">

                <expr_stmt pos:start="929:17" pos:end="931:53"><expr pos:start="929:17" pos:end="931:52"><call pos:start="929:17" pos:end="931:52"><name pos:start="929:17" pos:end="929:24">snprintf</name><argument_list pos:start="929:25" pos:end="931:52">(<argument pos:start="929:26" pos:end="929:30"><expr pos:start="929:26" pos:end="929:30"><name pos:start="929:26" pos:end="929:30">error</name></expr></argument>, <argument pos:start="929:33" pos:end="929:45"><expr pos:start="929:33" pos:end="929:45"><sizeof pos:start="929:33" pos:end="929:45">sizeof<argument_list pos:start="929:39" pos:end="929:45">(<argument pos:start="929:40" pos:end="929:44"><expr pos:start="929:40" pos:end="929:44"><name pos:start="929:40" pos:end="929:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="929:48" pos:end="929:100"><expr pos:start="929:48" pos:end="929:100"><literal type="string" pos:start="929:48" pos:end="929:100">"Error while opening decoder for input stream #%d.%d"</literal></expr></argument>,

                        <argument pos:start="931:25" pos:end="931:39"><expr pos:start="931:25" pos:end="931:39"><name pos:start="931:25" pos:end="931:39"><name pos:start="931:25" pos:end="931:27">ist</name><operator pos:start="931:28" pos:end="931:29">-&gt;</operator><name pos:start="931:30" pos:end="931:39">file_index</name></name></expr></argument>, <argument pos:start="931:42" pos:end="931:51"><expr pos:start="931:42" pos:end="931:51"><name pos:start="931:42" pos:end="931:51"><name pos:start="931:42" pos:end="931:44">ist</name><operator pos:start="931:45" pos:end="931:46">-&gt;</operator><name pos:start="931:47" pos:end="931:51">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="933:17" pos:end="933:38"><expr pos:start="933:17" pos:end="933:37"><name pos:start="933:17" pos:end="933:19">ret</name> <operator pos:start="933:21" pos:end="933:21">=</operator> <call pos:start="933:23" pos:end="933:37"><name pos:start="933:23" pos:end="933:29">AVERROR</name><argument_list pos:start="933:30" pos:end="933:37">(<argument pos:start="933:31" pos:end="933:36"><expr pos:start="933:31" pos:end="933:36"><name pos:start="933:31" pos:end="933:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="935:17" pos:end="935:33">goto <name pos:start="935:22" pos:end="935:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="line" pos:start="939:13" pos:end="939:67">//if (ist-&gt;st-&gt;codec-&gt;codec_type == AVMEDIA_TYPE_VIDEO)</comment>

            <comment type="line" pos:start="941:13" pos:end="941:67">//    ist-&gt;st-&gt;codec-&gt;flags |= CODEC_FLAG_REPEAT_FIELD;</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="949:5" pos:end="949:18">/* init pts */</comment>

    <for pos:start="951:5" pos:end="965:5">for<control pos:start="951:8" pos:end="951:30">(<init pos:start="951:9" pos:end="951:12"><expr pos:start="951:9" pos:end="951:11"><name pos:start="951:9" pos:end="951:9">i</name><operator pos:start="951:10" pos:end="951:10">=</operator><literal type="number" pos:start="951:11" pos:end="951:11">0</literal></expr>;</init><condition pos:start="951:13" pos:end="951:26"><expr pos:start="951:13" pos:end="951:25"><name pos:start="951:13" pos:end="951:13">i</name><operator pos:start="951:14" pos:end="951:14">&lt;</operator><name pos:start="951:15" pos:end="951:25">nb_istreams</name></expr>;</condition><incr pos:start="951:27" pos:end="951:29"><expr pos:start="951:27" pos:end="951:29"><name pos:start="951:27" pos:end="951:27">i</name><operator pos:start="951:28" pos:end="951:29">++</operator></expr></incr>)</control> <block pos:start="951:32" pos:end="965:5">{<block_content pos:start="953:9" pos:end="963:26">

        <decl_stmt pos:start="953:9" pos:end="953:21"><decl pos:start="953:9" pos:end="953:20"><type pos:start="953:9" pos:end="953:18"><name pos:start="953:9" pos:end="953:16">AVStream</name> <modifier pos:start="953:18" pos:end="953:18">*</modifier></type><name pos:start="953:19" pos:end="953:20">st</name></decl>;</decl_stmt>

        <expr_stmt pos:start="955:9" pos:end="955:27"><expr pos:start="955:9" pos:end="955:26"><name pos:start="955:9" pos:end="955:11">ist</name> <operator pos:start="955:13" pos:end="955:13">=</operator> <name pos:start="955:15" pos:end="955:26"><name pos:start="955:15" pos:end="955:23">ist_table</name><index pos:start="955:24" pos:end="955:26">[<expr pos:start="955:25" pos:end="955:25"><name pos:start="955:25" pos:end="955:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="957:9" pos:end="957:20"><expr pos:start="957:9" pos:end="957:19"><name pos:start="957:9" pos:end="957:10">st</name><operator pos:start="957:11" pos:end="957:11">=</operator> <name pos:start="957:13" pos:end="957:19"><name pos:start="957:13" pos:end="957:15">ist</name><operator pos:start="957:16" pos:end="957:17">-&gt;</operator><name pos:start="957:18" pos:end="957:19">st</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="959:9" pos:end="959:116"><expr pos:start="959:9" pos:end="959:115"><name pos:start="959:9" pos:end="959:16"><name pos:start="959:9" pos:end="959:11">ist</name><operator pos:start="959:12" pos:end="959:13">-&gt;</operator><name pos:start="959:14" pos:end="959:16">pts</name></name> <operator pos:start="959:18" pos:end="959:18">=</operator> <ternary pos:start="959:20" pos:end="959:115"><condition pos:start="959:20" pos:end="959:43"><expr pos:start="959:20" pos:end="959:41"><name pos:start="959:20" pos:end="959:41"><name pos:start="959:20" pos:end="959:21">st</name><operator pos:start="959:22" pos:end="959:23">-&gt;</operator><name pos:start="959:24" pos:end="959:37">avg_frame_rate</name><operator pos:start="959:38" pos:end="959:38">.</operator><name pos:start="959:39" pos:end="959:41">num</name></name></expr> ?</condition><then pos:start="959:45" pos:end="959:111"> <expr pos:start="959:45" pos:end="959:111"><operator pos:start="959:45" pos:end="959:45">-</operator> <name pos:start="959:47" pos:end="959:69"><name pos:start="959:47" pos:end="959:48">st</name><operator pos:start="959:49" pos:end="959:50">-&gt;</operator><name pos:start="959:51" pos:end="959:55">codec</name><operator pos:start="959:56" pos:end="959:57">-&gt;</operator><name pos:start="959:58" pos:end="959:69">has_b_frames</name></name><operator pos:start="959:70" pos:end="959:70">*</operator><name pos:start="959:71" pos:end="959:82">AV_TIME_BASE</name> <operator pos:start="959:84" pos:end="959:84">/</operator> <call pos:start="959:86" pos:end="959:111"><name pos:start="959:86" pos:end="959:91">av_q2d</name><argument_list pos:start="959:92" pos:end="959:111">(<argument pos:start="959:93" pos:end="959:110"><expr pos:start="959:93" pos:end="959:110"><name pos:start="959:93" pos:end="959:110"><name pos:start="959:93" pos:end="959:94">st</name><operator pos:start="959:95" pos:end="959:96">-&gt;</operator><name pos:start="959:97" pos:end="959:110">avg_frame_rate</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="959:113" pos:end="959:115">: <expr pos:start="959:115" pos:end="959:115"><literal type="number" pos:start="959:115" pos:end="959:115">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="961:9" pos:end="961:39"><expr pos:start="961:9" pos:end="961:38"><name pos:start="961:9" pos:end="961:21"><name pos:start="961:9" pos:end="961:11">ist</name><operator pos:start="961:12" pos:end="961:13">-&gt;</operator><name pos:start="961:14" pos:end="961:21">next_pts</name></name> <operator pos:start="961:23" pos:end="961:23">=</operator> <name pos:start="961:25" pos:end="961:38">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="963:9" pos:end="963:26"><expr pos:start="963:9" pos:end="963:25"><name pos:start="963:9" pos:end="963:21"><name pos:start="963:9" pos:end="963:11">ist</name><operator pos:start="963:12" pos:end="963:13">-&gt;</operator><name pos:start="963:14" pos:end="963:21">is_start</name></name> <operator pos:start="963:23" pos:end="963:23">=</operator> <literal type="number" pos:start="963:25" pos:end="963:25">1</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="969:5" pos:end="969:63">/* set meta data information from input file if required */</comment>

    <for pos:start="971:5" pos:end="1063:5">for <control pos:start="971:9" pos:end="971:37">(<init pos:start="971:10" pos:end="971:13"><expr pos:start="971:10" pos:end="971:12"><name pos:start="971:10" pos:end="971:10">i</name><operator pos:start="971:11" pos:end="971:11">=</operator><literal type="number" pos:start="971:12" pos:end="971:12">0</literal></expr>;</init><condition pos:start="971:14" pos:end="971:33"><expr pos:start="971:14" pos:end="971:32"><name pos:start="971:14" pos:end="971:14">i</name><operator pos:start="971:15" pos:end="971:15">&lt;</operator><name pos:start="971:16" pos:end="971:32">nb_meta_data_maps</name></expr>;</condition><incr pos:start="971:34" pos:end="971:36"><expr pos:start="971:34" pos:end="971:36"><name pos:start="971:34" pos:end="971:34">i</name><operator pos:start="971:35" pos:end="971:36">++</operator></expr></incr>)</control> <block pos:start="971:39" pos:end="1063:5">{<block_content pos:start="973:9" pos:end="1061:72">

        <decl_stmt pos:start="973:9" pos:end="973:34"><decl pos:start="973:9" pos:end="973:33"><type pos:start="973:9" pos:end="973:25"><name pos:start="973:9" pos:end="973:23">AVFormatContext</name> <modifier pos:start="973:25" pos:end="973:25">*</modifier></type><name pos:start="973:26" pos:end="973:33"><name pos:start="973:26" pos:end="973:30">files</name><index pos:start="973:31" pos:end="973:33">[<expr pos:start="973:32" pos:end="973:32"><literal type="number" pos:start="973:32" pos:end="973:32">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="975:9" pos:end="975:34"><decl pos:start="975:9" pos:end="975:33"><type pos:start="975:9" pos:end="975:26"><name pos:start="975:9" pos:end="975:18">AVMetadata</name>      <modifier pos:start="975:25" pos:end="975:25">*</modifier><modifier pos:start="975:26" pos:end="975:26">*</modifier></type><name pos:start="975:27" pos:end="975:33"><name pos:start="975:27" pos:end="975:30">meta</name><index pos:start="975:31" pos:end="975:33">[<expr pos:start="975:32" pos:end="975:32"><literal type="number" pos:start="975:32" pos:end="975:32">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="977:9" pos:end="994:0"><decl pos:start="977:9" pos:end="977:13"><type pos:start="977:9" pos:end="977:11"><name pos:start="977:9" pos:end="977:11">int</name></type> <name pos:start="977:13" pos:end="977:13">j</name></decl>;</decl_stmt>



<cpp:define pos:start="981:1" pos:end="993:9">#<cpp:directive pos:start="981:2" pos:end="981:7">define</cpp:directive> <cpp:macro pos:start="981:9" pos:end="981:51"><name pos:start="981:9" pos:end="981:28">METADATA_CHECK_INDEX</name><parameter_list pos:start="981:29" pos:end="981:51">(<parameter pos:start="981:30" pos:end="981:34"><type pos:start="981:30" pos:end="981:34"><name pos:start="981:30" pos:end="981:34">index</name></type></parameter>, <parameter pos:start="981:37" pos:end="981:44"><type pos:start="981:37" pos:end="981:44"><name pos:start="981:37" pos:end="981:44">nb_elems</name></type></parameter>, <parameter pos:start="981:47" pos:end="981:50"><type pos:start="981:47" pos:end="981:50"><name pos:start="981:47" pos:end="981:50">desc</name></type></parameter>)</parameter_list></cpp:macro>\

        <cpp:value pos:start="983:9" pos:end="993:9">if ((index) &lt; 0 || (index) &gt;= (nb_elems)) {\

            snprintf(error, sizeof(error), "Invalid %s index %d while processing metadata maps\n",\

                     (desc), (index));\

            ret = AVERROR(EINVAL);\

            goto dump_format;\

        }</cpp:value></cpp:define>



        <decl_stmt pos:start="997:9" pos:end="997:55"><decl pos:start="997:9" pos:end="997:54"><type pos:start="997:9" pos:end="997:11"><name pos:start="997:9" pos:end="997:11">int</name></type> <name pos:start="997:13" pos:end="997:26">out_file_index</name> <init pos:start="997:28" pos:end="997:54">= <expr pos:start="997:30" pos:end="997:54"><name pos:start="997:30" pos:end="997:49"><name pos:start="997:30" pos:end="997:43">meta_data_maps</name><index pos:start="997:44" pos:end="997:46">[<expr pos:start="997:45" pos:end="997:45"><name pos:start="997:45" pos:end="997:45">i</name></expr>]</index><index pos:start="997:47" pos:end="997:49">[<expr pos:start="997:48" pos:end="997:48"><literal type="number" pos:start="997:48" pos:end="997:48">0</literal></expr>]</index></name><operator pos:start="997:50" pos:end="997:50">.</operator><name pos:start="997:51" pos:end="997:54">file</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="999:9" pos:end="999:54"><decl pos:start="999:9" pos:end="999:53"><type pos:start="999:9" pos:end="999:11"><name pos:start="999:9" pos:end="999:11">int</name></type> <name pos:start="999:13" pos:end="999:25">in_file_index</name> <init pos:start="999:27" pos:end="999:53">= <expr pos:start="999:29" pos:end="999:53"><name pos:start="999:29" pos:end="999:48"><name pos:start="999:29" pos:end="999:42">meta_data_maps</name><index pos:start="999:43" pos:end="999:45">[<expr pos:start="999:44" pos:end="999:44"><name pos:start="999:44" pos:end="999:44">i</name></expr>]</index><index pos:start="999:46" pos:end="999:48">[<expr pos:start="999:47" pos:end="999:47"><literal type="number" pos:start="999:47" pos:end="999:47">1</literal></expr>]</index></name><operator pos:start="999:49" pos:end="999:49">.</operator><name pos:start="999:50" pos:end="999:53">file</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="1001:9" pos:end="1003:21"><if pos:start="1001:9" pos:end="1003:21">if <condition pos:start="1001:12" pos:end="1001:52">(<expr pos:start="1001:13" pos:end="1001:51"><name pos:start="1001:13" pos:end="1001:25">in_file_index</name> <operator pos:start="1001:27" pos:end="1001:27">&lt;</operator> <literal type="number" pos:start="1001:29" pos:end="1001:29">0</literal> <operator pos:start="1001:31" pos:end="1001:32">||</operator> <name pos:start="1001:34" pos:end="1001:47">out_file_index</name> <operator pos:start="1001:49" pos:end="1001:49">&lt;</operator> <literal type="number" pos:start="1001:51" pos:end="1001:51">0</literal></expr>)</condition><block type="pseudo" pos:start="1003:13" pos:end="1003:21"><block_content pos:start="1003:13" pos:end="1003:21">

            <continue pos:start="1003:13" pos:end="1003:21">continue;</continue></block_content></block></if></if_stmt>

        <macro pos:start="1005:9" pos:end="1005:76"><name pos:start="1005:9" pos:end="1005:28">METADATA_CHECK_INDEX</name><argument_list pos:start="1005:29" pos:end="1005:76">(<argument pos:start="1005:30" pos:end="1005:43">out_file_index</argument>, <argument pos:start="1005:46" pos:end="1005:60">nb_output_files</argument>, <argument pos:start="1005:63" pos:end="1005:75"><literal type="string" pos:start="1005:63" pos:end="1005:75">"output file"</literal></argument>)</argument_list></macro>

        <macro pos:start="1007:9" pos:end="1007:73"><name pos:start="1007:9" pos:end="1007:28">METADATA_CHECK_INDEX</name><argument_list pos:start="1007:29" pos:end="1007:73">(<argument pos:start="1007:30" pos:end="1007:42">in_file_index</argument>, <argument pos:start="1007:45" pos:end="1007:58">nb_input_files</argument>, <argument pos:start="1007:61" pos:end="1007:72"><literal type="string" pos:start="1007:61" pos:end="1007:72">"input file"</literal></argument>)</argument_list></macro>



        <expr_stmt pos:start="1011:9" pos:end="1011:48"><expr pos:start="1011:9" pos:end="1011:47"><name pos:start="1011:9" pos:end="1011:16"><name pos:start="1011:9" pos:end="1011:13">files</name><index pos:start="1011:14" pos:end="1011:16">[<expr pos:start="1011:15" pos:end="1011:15"><literal type="number" pos:start="1011:15" pos:end="1011:15">0</literal></expr>]</index></name> <operator pos:start="1011:18" pos:end="1011:18">=</operator> <name pos:start="1011:20" pos:end="1011:47"><name pos:start="1011:20" pos:end="1011:31">output_files</name><index pos:start="1011:32" pos:end="1011:47">[<expr pos:start="1011:33" pos:end="1011:46"><name pos:start="1011:33" pos:end="1011:46">out_file_index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1013:9" pos:end="1013:46"><expr pos:start="1013:9" pos:end="1013:45"><name pos:start="1013:9" pos:end="1013:16"><name pos:start="1013:9" pos:end="1013:13">files</name><index pos:start="1013:14" pos:end="1013:16">[<expr pos:start="1013:15" pos:end="1013:15"><literal type="number" pos:start="1013:15" pos:end="1013:15">1</literal></expr>]</index></name> <operator pos:start="1013:18" pos:end="1013:18">=</operator> <name pos:start="1013:20" pos:end="1013:45"><name pos:start="1013:20" pos:end="1013:30">input_files</name><index pos:start="1013:31" pos:end="1013:45">[<expr pos:start="1013:32" pos:end="1013:44"><name pos:start="1013:32" pos:end="1013:44">in_file_index</name></expr>]</index></name></expr>;</expr_stmt>



        <for pos:start="1017:9" pos:end="1057:9">for <control pos:start="1017:13" pos:end="1017:31">(<init pos:start="1017:14" pos:end="1017:19"><expr pos:start="1017:14" pos:end="1017:18"><name pos:start="1017:14" pos:end="1017:14">j</name> <operator pos:start="1017:16" pos:end="1017:16">=</operator> <literal type="number" pos:start="1017:18" pos:end="1017:18">0</literal></expr>;</init> <condition pos:start="1017:21" pos:end="1017:26"><expr pos:start="1017:21" pos:end="1017:25"><name pos:start="1017:21" pos:end="1017:21">j</name> <operator pos:start="1017:23" pos:end="1017:23">&lt;</operator> <literal type="number" pos:start="1017:25" pos:end="1017:25">2</literal></expr>;</condition> <incr pos:start="1017:28" pos:end="1017:30"><expr pos:start="1017:28" pos:end="1017:30"><name pos:start="1017:28" pos:end="1017:28">j</name><operator pos:start="1017:29" pos:end="1017:30">++</operator></expr></incr>)</control> <block pos:start="1017:33" pos:end="1057:9">{<block_content pos:start="1019:13" pos:end="1055:13">

            <decl_stmt pos:start="1019:13" pos:end="1019:55"><decl pos:start="1019:13" pos:end="1019:54"><type pos:start="1019:13" pos:end="1019:27"><name pos:start="1019:13" pos:end="1019:25">AVMetaDataMap</name> <modifier pos:start="1019:27" pos:end="1019:27">*</modifier></type><name pos:start="1019:28" pos:end="1019:30">map</name> <init pos:start="1019:32" pos:end="1019:54">= <expr pos:start="1019:34" pos:end="1019:54"><operator pos:start="1019:34" pos:end="1019:34">&amp;</operator><name pos:start="1019:35" pos:end="1019:54"><name pos:start="1019:35" pos:end="1019:48">meta_data_maps</name><index pos:start="1019:49" pos:end="1019:51">[<expr pos:start="1019:50" pos:end="1019:50"><name pos:start="1019:50" pos:end="1019:50">i</name></expr>]</index><index pos:start="1019:52" pos:end="1019:54">[<expr pos:start="1019:53" pos:end="1019:53"><name pos:start="1019:53" pos:end="1019:53">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <switch pos:start="1023:13" pos:end="1055:13">switch <condition pos:start="1023:20" pos:end="1023:30">(<expr pos:start="1023:21" pos:end="1023:29"><name pos:start="1023:21" pos:end="1023:29"><name pos:start="1023:21" pos:end="1023:23">map</name><operator pos:start="1023:24" pos:end="1023:25">-&gt;</operator><name pos:start="1023:26" pos:end="1023:29">type</name></name></expr>)</condition> <block pos:start="1023:32" pos:end="1055:13">{<block_content pos:start="1025:13" pos:end="1053:22">

            <case pos:start="1025:13" pos:end="1025:21">case <expr pos:start="1025:18" pos:end="1025:20"><literal type="char" pos:start="1025:18" pos:end="1025:20">'g'</literal></expr>:</case>

                <expr_stmt pos:start="1027:17" pos:end="1027:46"><expr pos:start="1027:17" pos:end="1027:45"><name pos:start="1027:17" pos:end="1027:23"><name pos:start="1027:17" pos:end="1027:20">meta</name><index pos:start="1027:21" pos:end="1027:23">[<expr pos:start="1027:22" pos:end="1027:22"><name pos:start="1027:22" pos:end="1027:22">j</name></expr>]</index></name> <operator pos:start="1027:25" pos:end="1027:25">=</operator> <operator pos:start="1027:27" pos:end="1027:27">&amp;</operator><name pos:start="1027:28" pos:end="1027:35"><name pos:start="1027:28" pos:end="1027:32">files</name><index pos:start="1027:33" pos:end="1027:35">[<expr pos:start="1027:34" pos:end="1027:34"><name pos:start="1027:34" pos:end="1027:34">j</name></expr>]</index></name><operator pos:start="1027:36" pos:end="1027:37">-&gt;</operator><name pos:start="1027:38" pos:end="1027:45">metadata</name></expr>;</expr_stmt>

                <break pos:start="1029:17" pos:end="1029:22">break;</break>

            <case pos:start="1031:13" pos:end="1031:21">case <expr pos:start="1031:18" pos:end="1031:20"><literal type="char" pos:start="1031:18" pos:end="1031:20">'s'</literal></expr>:</case>

                <macro pos:start="1033:17" pos:end="1033:80"><name pos:start="1033:17" pos:end="1033:36">METADATA_CHECK_INDEX</name><argument_list pos:start="1033:37" pos:end="1033:80">(<argument pos:start="1033:38" pos:end="1033:47">map-&gt;index</argument>, <argument pos:start="1033:50" pos:end="1033:69">files[j]-&gt;nb_streams</argument>, <argument pos:start="1033:72" pos:end="1033:79"><literal type="string" pos:start="1033:72" pos:end="1033:79">"stream"</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="1035:17" pos:end="1035:67"><expr pos:start="1035:17" pos:end="1035:66"><name pos:start="1035:17" pos:end="1035:23"><name pos:start="1035:17" pos:end="1035:20">meta</name><index pos:start="1035:21" pos:end="1035:23">[<expr pos:start="1035:22" pos:end="1035:22"><name pos:start="1035:22" pos:end="1035:22">j</name></expr>]</index></name> <operator pos:start="1035:25" pos:end="1035:25">=</operator> <operator pos:start="1035:27" pos:end="1035:27">&amp;</operator><name pos:start="1035:28" pos:end="1035:35"><name pos:start="1035:28" pos:end="1035:32">files</name><index pos:start="1035:33" pos:end="1035:35">[<expr pos:start="1035:34" pos:end="1035:34"><name pos:start="1035:34" pos:end="1035:34">j</name></expr>]</index></name><operator pos:start="1035:36" pos:end="1035:37">-&gt;</operator><name pos:start="1035:38" pos:end="1035:56"><name pos:start="1035:38" pos:end="1035:44">streams</name><index pos:start="1035:45" pos:end="1035:56">[<expr pos:start="1035:46" pos:end="1035:55"><name pos:start="1035:46" pos:end="1035:55"><name pos:start="1035:46" pos:end="1035:48">map</name><operator pos:start="1035:49" pos:end="1035:50">-&gt;</operator><name pos:start="1035:51" pos:end="1035:55">index</name></name></expr>]</index></name><operator pos:start="1035:57" pos:end="1035:58">-&gt;</operator><name pos:start="1035:59" pos:end="1035:66">metadata</name></expr>;</expr_stmt>

                <break pos:start="1037:17" pos:end="1037:22">break;</break>

            <case pos:start="1039:13" pos:end="1039:21">case <expr pos:start="1039:18" pos:end="1039:20"><literal type="char" pos:start="1039:18" pos:end="1039:20">'c'</literal></expr>:</case>

                <macro pos:start="1041:17" pos:end="1041:82"><name pos:start="1041:17" pos:end="1041:36">METADATA_CHECK_INDEX</name><argument_list pos:start="1041:37" pos:end="1041:82">(<argument pos:start="1041:38" pos:end="1041:47">map-&gt;index</argument>, <argument pos:start="1041:50" pos:end="1041:70">files[j]-&gt;nb_chapters</argument>, <argument pos:start="1041:73" pos:end="1041:81"><literal type="string" pos:start="1041:73" pos:end="1041:81">"chapter"</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="1043:17" pos:end="1043:68"><expr pos:start="1043:17" pos:end="1043:67"><name pos:start="1043:17" pos:end="1043:23"><name pos:start="1043:17" pos:end="1043:20">meta</name><index pos:start="1043:21" pos:end="1043:23">[<expr pos:start="1043:22" pos:end="1043:22"><name pos:start="1043:22" pos:end="1043:22">j</name></expr>]</index></name> <operator pos:start="1043:25" pos:end="1043:25">=</operator> <operator pos:start="1043:27" pos:end="1043:27">&amp;</operator><name pos:start="1043:28" pos:end="1043:35"><name pos:start="1043:28" pos:end="1043:32">files</name><index pos:start="1043:33" pos:end="1043:35">[<expr pos:start="1043:34" pos:end="1043:34"><name pos:start="1043:34" pos:end="1043:34">j</name></expr>]</index></name><operator pos:start="1043:36" pos:end="1043:37">-&gt;</operator><name pos:start="1043:38" pos:end="1043:57"><name pos:start="1043:38" pos:end="1043:45">chapters</name><index pos:start="1043:46" pos:end="1043:57">[<expr pos:start="1043:47" pos:end="1043:56"><name pos:start="1043:47" pos:end="1043:56"><name pos:start="1043:47" pos:end="1043:49">map</name><operator pos:start="1043:50" pos:end="1043:51">-&gt;</operator><name pos:start="1043:52" pos:end="1043:56">index</name></name></expr>]</index></name><operator pos:start="1043:58" pos:end="1043:59">-&gt;</operator><name pos:start="1043:60" pos:end="1043:67">metadata</name></expr>;</expr_stmt>

                <break pos:start="1045:17" pos:end="1045:22">break;</break>

            <case pos:start="1047:13" pos:end="1047:21">case <expr pos:start="1047:18" pos:end="1047:20"><literal type="char" pos:start="1047:18" pos:end="1047:20">'p'</literal></expr>:</case>

                <macro pos:start="1049:17" pos:end="1049:82"><name pos:start="1049:17" pos:end="1049:36">METADATA_CHECK_INDEX</name><argument_list pos:start="1049:37" pos:end="1049:82">(<argument pos:start="1049:38" pos:end="1049:47">map-&gt;index</argument>, <argument pos:start="1049:50" pos:end="1049:70">files[j]-&gt;nb_programs</argument>, <argument pos:start="1049:73" pos:end="1049:81"><literal type="string" pos:start="1049:73" pos:end="1049:81">"program"</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="1051:17" pos:end="1051:68"><expr pos:start="1051:17" pos:end="1051:67"><name pos:start="1051:17" pos:end="1051:23"><name pos:start="1051:17" pos:end="1051:20">meta</name><index pos:start="1051:21" pos:end="1051:23">[<expr pos:start="1051:22" pos:end="1051:22"><name pos:start="1051:22" pos:end="1051:22">j</name></expr>]</index></name> <operator pos:start="1051:25" pos:end="1051:25">=</operator> <operator pos:start="1051:27" pos:end="1051:27">&amp;</operator><name pos:start="1051:28" pos:end="1051:35"><name pos:start="1051:28" pos:end="1051:32">files</name><index pos:start="1051:33" pos:end="1051:35">[<expr pos:start="1051:34" pos:end="1051:34"><name pos:start="1051:34" pos:end="1051:34">j</name></expr>]</index></name><operator pos:start="1051:36" pos:end="1051:37">-&gt;</operator><name pos:start="1051:38" pos:end="1051:57"><name pos:start="1051:38" pos:end="1051:45">programs</name><index pos:start="1051:46" pos:end="1051:57">[<expr pos:start="1051:47" pos:end="1051:56"><name pos:start="1051:47" pos:end="1051:56"><name pos:start="1051:47" pos:end="1051:49">map</name><operator pos:start="1051:50" pos:end="1051:51">-&gt;</operator><name pos:start="1051:52" pos:end="1051:56">index</name></name></expr>]</index></name><operator pos:start="1051:58" pos:end="1051:59">-&gt;</operator><name pos:start="1051:60" pos:end="1051:67">metadata</name></expr>;</expr_stmt>

                <break pos:start="1053:17" pos:end="1053:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></for>



        <expr_stmt pos:start="1061:9" pos:end="1061:72"><expr pos:start="1061:9" pos:end="1061:71"><call pos:start="1061:9" pos:end="1061:71"><name pos:start="1061:9" pos:end="1061:24">av_metadata_copy</name><argument_list pos:start="1061:25" pos:end="1061:71">(<argument pos:start="1061:26" pos:end="1061:32"><expr pos:start="1061:26" pos:end="1061:32"><name pos:start="1061:26" pos:end="1061:32"><name pos:start="1061:26" pos:end="1061:29">meta</name><index pos:start="1061:30" pos:end="1061:32">[<expr pos:start="1061:31" pos:end="1061:31"><literal type="number" pos:start="1061:31" pos:end="1061:31">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="1061:35" pos:end="1061:42"><expr pos:start="1061:35" pos:end="1061:42"><operator pos:start="1061:35" pos:end="1061:35">*</operator><name pos:start="1061:36" pos:end="1061:42"><name pos:start="1061:36" pos:end="1061:39">meta</name><index pos:start="1061:40" pos:end="1061:42">[<expr pos:start="1061:41" pos:end="1061:41"><literal type="number" pos:start="1061:41" pos:end="1061:41">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="1061:45" pos:end="1061:70"><expr pos:start="1061:45" pos:end="1061:70"><name pos:start="1061:45" pos:end="1061:70">AV_METADATA_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1067:5" pos:end="1067:41">/* copy global metadata by default */</comment>

    <if_stmt pos:start="1069:5" pos:end="1079:5"><if pos:start="1069:5" pos:end="1079:5">if <condition pos:start="1069:8" pos:end="1069:33">(<expr pos:start="1069:9" pos:end="1069:32"><name pos:start="1069:9" pos:end="1069:32">metadata_global_autocopy</name></expr>)</condition> <block pos:start="1069:35" pos:end="1079:5">{<block_content pos:start="1073:9" pos:end="1077:57">



        <for pos:start="1073:9" pos:end="1077:57">for <control pos:start="1073:13" pos:end="1073:45">(<init pos:start="1073:14" pos:end="1073:19"><expr pos:start="1073:14" pos:end="1073:18"><name pos:start="1073:14" pos:end="1073:14">i</name> <operator pos:start="1073:16" pos:end="1073:16">=</operator> <literal type="number" pos:start="1073:18" pos:end="1073:18">0</literal></expr>;</init> <condition pos:start="1073:21" pos:end="1073:40"><expr pos:start="1073:21" pos:end="1073:39"><name pos:start="1073:21" pos:end="1073:21">i</name> <operator pos:start="1073:23" pos:end="1073:23">&lt;</operator> <name pos:start="1073:25" pos:end="1073:39">nb_output_files</name></expr>;</condition> <incr pos:start="1073:42" pos:end="1073:44"><expr pos:start="1073:42" pos:end="1073:44"><name pos:start="1073:42" pos:end="1073:42">i</name><operator pos:start="1073:43" pos:end="1073:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1075:13" pos:end="1077:57"><block_content pos:start="1075:13" pos:end="1077:57">

            <expr_stmt pos:start="1075:13" pos:end="1077:57"><expr pos:start="1075:13" pos:end="1077:56"><call pos:start="1075:13" pos:end="1077:56"><name pos:start="1075:13" pos:end="1075:28">av_metadata_copy</name><argument_list pos:start="1075:29" pos:end="1077:56">(<argument pos:start="1075:30" pos:end="1075:55"><expr pos:start="1075:30" pos:end="1075:55"><operator pos:start="1075:30" pos:end="1075:30">&amp;</operator><name pos:start="1075:31" pos:end="1075:45"><name pos:start="1075:31" pos:end="1075:42">output_files</name><index pos:start="1075:43" pos:end="1075:45">[<expr pos:start="1075:44" pos:end="1075:44"><name pos:start="1075:44" pos:end="1075:44">i</name></expr>]</index></name><operator pos:start="1075:46" pos:end="1075:47">-&gt;</operator><name pos:start="1075:48" pos:end="1075:55">metadata</name></expr></argument>, <argument pos:start="1075:58" pos:end="1075:81"><expr pos:start="1075:58" pos:end="1075:81"><name pos:start="1075:58" pos:end="1075:71"><name pos:start="1075:58" pos:end="1075:68">input_files</name><index pos:start="1075:69" pos:end="1075:71">[<expr pos:start="1075:70" pos:end="1075:70"><literal type="number" pos:start="1075:70" pos:end="1075:70">0</literal></expr>]</index></name><operator pos:start="1075:72" pos:end="1075:73">-&gt;</operator><name pos:start="1075:74" pos:end="1075:81">metadata</name></expr></argument>,

                             <argument pos:start="1077:30" pos:end="1077:55"><expr pos:start="1077:30" pos:end="1077:55"><name pos:start="1077:30" pos:end="1077:55">AV_METADATA_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="1083:5" pos:end="1083:49">/* copy chapters according to chapter maps */</comment>

    <for pos:start="1085:5" pos:end="1119:5">for <control pos:start="1085:9" pos:end="1085:41">(<init pos:start="1085:10" pos:end="1085:15"><expr pos:start="1085:10" pos:end="1085:14"><name pos:start="1085:10" pos:end="1085:10">i</name> <operator pos:start="1085:12" pos:end="1085:12">=</operator> <literal type="number" pos:start="1085:14" pos:end="1085:14">0</literal></expr>;</init> <condition pos:start="1085:17" pos:end="1085:36"><expr pos:start="1085:17" pos:end="1085:35"><name pos:start="1085:17" pos:end="1085:17">i</name> <operator pos:start="1085:19" pos:end="1085:19">&lt;</operator> <name pos:start="1085:21" pos:end="1085:35">nb_chapter_maps</name></expr>;</condition> <incr pos:start="1085:38" pos:end="1085:40"><expr pos:start="1085:38" pos:end="1085:40"><name pos:start="1085:38" pos:end="1085:38">i</name><operator pos:start="1085:39" pos:end="1085:40">++</operator></expr></incr>)</control> <block pos:start="1085:43" pos:end="1119:5">{<block_content pos:start="1087:9" pos:end="1117:39">

        <decl_stmt pos:start="1087:9" pos:end="1087:46"><decl pos:start="1087:9" pos:end="1087:45"><type pos:start="1087:9" pos:end="1087:11"><name pos:start="1087:9" pos:end="1087:11">int</name></type> <name pos:start="1087:13" pos:end="1087:18">infile</name>  <init pos:start="1087:21" pos:end="1087:45">= <expr pos:start="1087:23" pos:end="1087:45"><name pos:start="1087:23" pos:end="1087:37"><name pos:start="1087:23" pos:end="1087:34">chapter_maps</name><index pos:start="1087:35" pos:end="1087:37">[<expr pos:start="1087:36" pos:end="1087:36"><name pos:start="1087:36" pos:end="1087:36">i</name></expr>]</index></name><operator pos:start="1087:38" pos:end="1087:38">.</operator><name pos:start="1087:39" pos:end="1087:45">in_file</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="1089:9" pos:end="1089:47"><decl pos:start="1089:9" pos:end="1089:46"><type pos:start="1089:9" pos:end="1089:11"><name pos:start="1089:9" pos:end="1089:11">int</name></type> <name pos:start="1089:13" pos:end="1089:19">outfile</name> <init pos:start="1089:21" pos:end="1089:46">= <expr pos:start="1089:23" pos:end="1089:46"><name pos:start="1089:23" pos:end="1089:37"><name pos:start="1089:23" pos:end="1089:34">chapter_maps</name><index pos:start="1089:35" pos:end="1089:37">[<expr pos:start="1089:36" pos:end="1089:36"><name pos:start="1089:36" pos:end="1089:36">i</name></expr>]</index></name><operator pos:start="1089:38" pos:end="1089:38">.</operator><name pos:start="1089:39" pos:end="1089:46">out_file</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="1093:9" pos:end="1095:21"><if pos:start="1093:9" pos:end="1095:21">if <condition pos:start="1093:12" pos:end="1093:38">(<expr pos:start="1093:13" pos:end="1093:37"><name pos:start="1093:13" pos:end="1093:18">infile</name> <operator pos:start="1093:20" pos:end="1093:20">&lt;</operator> <literal type="number" pos:start="1093:22" pos:end="1093:22">0</literal> <operator pos:start="1093:24" pos:end="1093:25">||</operator> <name pos:start="1093:27" pos:end="1093:33">outfile</name> <operator pos:start="1093:35" pos:end="1093:35">&lt;</operator> <literal type="number" pos:start="1093:37" pos:end="1093:37">0</literal></expr>)</condition><block type="pseudo" pos:start="1095:13" pos:end="1095:21"><block_content pos:start="1095:13" pos:end="1095:21">

            <continue pos:start="1095:13" pos:end="1095:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="1097:9" pos:end="1105:9"><if pos:start="1097:9" pos:end="1105:9">if <condition pos:start="1097:12" pos:end="1097:37">(<expr pos:start="1097:13" pos:end="1097:36"><name pos:start="1097:13" pos:end="1097:18">infile</name> <operator pos:start="1097:20" pos:end="1097:21">&gt;=</operator> <name pos:start="1097:23" pos:end="1097:36">nb_input_files</name></expr>)</condition> <block pos:start="1097:39" pos:end="1105:9">{<block_content pos:start="1099:13" pos:end="1103:29">

            <expr_stmt pos:start="1099:13" pos:end="1099:104"><expr pos:start="1099:13" pos:end="1099:103"><call pos:start="1099:13" pos:end="1099:103"><name pos:start="1099:13" pos:end="1099:20">snprintf</name><argument_list pos:start="1099:21" pos:end="1099:103">(<argument pos:start="1099:22" pos:end="1099:26"><expr pos:start="1099:22" pos:end="1099:26"><name pos:start="1099:22" pos:end="1099:26">error</name></expr></argument>, <argument pos:start="1099:29" pos:end="1099:41"><expr pos:start="1099:29" pos:end="1099:41"><sizeof pos:start="1099:29" pos:end="1099:41">sizeof<argument_list pos:start="1099:35" pos:end="1099:41">(<argument pos:start="1099:36" pos:end="1099:40"><expr pos:start="1099:36" pos:end="1099:40"><name pos:start="1099:36" pos:end="1099:40">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1099:44" pos:end="1099:94"><expr pos:start="1099:44" pos:end="1099:94"><literal type="string" pos:start="1099:44" pos:end="1099:94">"Invalid input file index %d in chapter mapping.\n"</literal></expr></argument>, <argument pos:start="1099:97" pos:end="1099:102"><expr pos:start="1099:97" pos:end="1099:102"><name pos:start="1099:97" pos:end="1099:102">infile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1101:13" pos:end="1101:34"><expr pos:start="1101:13" pos:end="1101:33"><name pos:start="1101:13" pos:end="1101:15">ret</name> <operator pos:start="1101:17" pos:end="1101:17">=</operator> <call pos:start="1101:19" pos:end="1101:33"><name pos:start="1101:19" pos:end="1101:25">AVERROR</name><argument_list pos:start="1101:26" pos:end="1101:33">(<argument pos:start="1101:27" pos:end="1101:32"><expr pos:start="1101:27" pos:end="1101:32"><name pos:start="1101:27" pos:end="1101:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1103:13" pos:end="1103:29">goto <name pos:start="1103:18" pos:end="1103:28">dump_format</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="1107:9" pos:end="1115:9"><if pos:start="1107:9" pos:end="1115:9">if <condition pos:start="1107:12" pos:end="1107:39">(<expr pos:start="1107:13" pos:end="1107:38"><name pos:start="1107:13" pos:end="1107:19">outfile</name> <operator pos:start="1107:21" pos:end="1107:22">&gt;=</operator> <name pos:start="1107:24" pos:end="1107:38">nb_output_files</name></expr>)</condition> <block pos:start="1107:41" pos:end="1115:9">{<block_content pos:start="1109:13" pos:end="1113:29">

            <expr_stmt pos:start="1109:13" pos:end="1109:105"><expr pos:start="1109:13" pos:end="1109:104"><call pos:start="1109:13" pos:end="1109:104"><name pos:start="1109:13" pos:end="1109:20">snprintf</name><argument_list pos:start="1109:21" pos:end="1109:104">(<argument pos:start="1109:22" pos:end="1109:26"><expr pos:start="1109:22" pos:end="1109:26"><name pos:start="1109:22" pos:end="1109:26">error</name></expr></argument>, <argument pos:start="1109:29" pos:end="1109:41"><expr pos:start="1109:29" pos:end="1109:41"><sizeof pos:start="1109:29" pos:end="1109:41">sizeof<argument_list pos:start="1109:35" pos:end="1109:41">(<argument pos:start="1109:36" pos:end="1109:40"><expr pos:start="1109:36" pos:end="1109:40"><name pos:start="1109:36" pos:end="1109:40">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1109:44" pos:end="1109:95"><expr pos:start="1109:44" pos:end="1109:95"><literal type="string" pos:start="1109:44" pos:end="1109:95">"Invalid output file index %d in chapter mapping.\n"</literal></expr></argument>,<argument pos:start="1109:97" pos:end="1109:103"><expr pos:start="1109:97" pos:end="1109:103"><name pos:start="1109:97" pos:end="1109:103">outfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1111:13" pos:end="1111:34"><expr pos:start="1111:13" pos:end="1111:33"><name pos:start="1111:13" pos:end="1111:15">ret</name> <operator pos:start="1111:17" pos:end="1111:17">=</operator> <call pos:start="1111:19" pos:end="1111:33"><name pos:start="1111:19" pos:end="1111:25">AVERROR</name><argument_list pos:start="1111:26" pos:end="1111:33">(<argument pos:start="1111:27" pos:end="1111:32"><expr pos:start="1111:27" pos:end="1111:32"><name pos:start="1111:27" pos:end="1111:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1113:13" pos:end="1113:29">goto <name pos:start="1113:18" pos:end="1113:28">dump_format</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1117:9" pos:end="1117:39"><expr pos:start="1117:9" pos:end="1117:38"><call pos:start="1117:9" pos:end="1117:38"><name pos:start="1117:9" pos:end="1117:21">copy_chapters</name><argument_list pos:start="1117:22" pos:end="1117:38">(<argument pos:start="1117:23" pos:end="1117:28"><expr pos:start="1117:23" pos:end="1117:28"><name pos:start="1117:23" pos:end="1117:28">infile</name></expr></argument>, <argument pos:start="1117:31" pos:end="1117:37"><expr pos:start="1117:31" pos:end="1117:37"><name pos:start="1117:31" pos:end="1117:37">outfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1123:5" pos:end="1123:62">/* copy chapters from the first input file that has them*/</comment>

    <if_stmt pos:start="1125:5" pos:end="1143:9"><if pos:start="1125:5" pos:end="1143:9">if <condition pos:start="1125:8" pos:end="1125:25">(<expr pos:start="1125:9" pos:end="1125:24"><operator pos:start="1125:9" pos:end="1125:9">!</operator><name pos:start="1125:10" pos:end="1125:24">nb_chapter_maps</name></expr>)</condition><block type="pseudo" pos:start="1127:9" pos:end="1143:9"><block_content pos:start="1127:9" pos:end="1143:9">

        <for pos:start="1127:9" pos:end="1143:9">for <control pos:start="1127:13" pos:end="1127:44">(<init pos:start="1127:14" pos:end="1127:19"><expr pos:start="1127:14" pos:end="1127:18"><name pos:start="1127:14" pos:end="1127:14">i</name> <operator pos:start="1127:16" pos:end="1127:16">=</operator> <literal type="number" pos:start="1127:18" pos:end="1127:18">0</literal></expr>;</init> <condition pos:start="1127:21" pos:end="1127:39"><expr pos:start="1127:21" pos:end="1127:38"><name pos:start="1127:21" pos:end="1127:21">i</name> <operator pos:start="1127:23" pos:end="1127:23">&lt;</operator> <name pos:start="1127:25" pos:end="1127:38">nb_input_files</name></expr>;</condition> <incr pos:start="1127:41" pos:end="1127:43"><expr pos:start="1127:41" pos:end="1127:43"><name pos:start="1127:41" pos:end="1127:41">i</name><operator pos:start="1127:42" pos:end="1127:43">++</operator></expr></incr>)</control> <block pos:start="1127:46" pos:end="1143:9">{<block_content pos:start="1129:13" pos:end="1141:18">

            <if_stmt pos:start="1129:13" pos:end="1131:25"><if pos:start="1129:13" pos:end="1131:25">if <condition pos:start="1129:16" pos:end="1129:45">(<expr pos:start="1129:17" pos:end="1129:44"><operator pos:start="1129:17" pos:end="1129:17">!</operator><name pos:start="1129:18" pos:end="1129:31"><name pos:start="1129:18" pos:end="1129:28">input_files</name><index pos:start="1129:29" pos:end="1129:31">[<expr pos:start="1129:30" pos:end="1129:30"><name pos:start="1129:30" pos:end="1129:30">i</name></expr>]</index></name><operator pos:start="1129:32" pos:end="1129:33">-&gt;</operator><name pos:start="1129:34" pos:end="1129:44">nb_chapters</name></expr>)</condition><block type="pseudo" pos:start="1131:17" pos:end="1131:25"><block_content pos:start="1131:17" pos:end="1131:25">

                <continue pos:start="1131:17" pos:end="1131:25">continue;</continue></block_content></block></if></if_stmt>



            <for pos:start="1135:13" pos:end="1139:37">for <control pos:start="1135:17" pos:end="1135:49">(<init pos:start="1135:18" pos:end="1135:23"><expr pos:start="1135:18" pos:end="1135:22"><name pos:start="1135:18" pos:end="1135:18">j</name> <operator pos:start="1135:20" pos:end="1135:20">=</operator> <literal type="number" pos:start="1135:22" pos:end="1135:22">0</literal></expr>;</init> <condition pos:start="1135:25" pos:end="1135:44"><expr pos:start="1135:25" pos:end="1135:43"><name pos:start="1135:25" pos:end="1135:25">j</name> <operator pos:start="1135:27" pos:end="1135:27">&lt;</operator> <name pos:start="1135:29" pos:end="1135:43">nb_output_files</name></expr>;</condition> <incr pos:start="1135:46" pos:end="1135:48"><expr pos:start="1135:46" pos:end="1135:48"><name pos:start="1135:46" pos:end="1135:46">j</name><operator pos:start="1135:47" pos:end="1135:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1137:17" pos:end="1139:37"><block_content pos:start="1137:17" pos:end="1139:37">

                <if_stmt pos:start="1137:17" pos:end="1139:37"><if pos:start="1137:17" pos:end="1139:37">if <condition pos:start="1137:20" pos:end="1137:52">(<expr pos:start="1137:21" pos:end="1137:51"><operator pos:start="1137:21" pos:end="1137:21">(</operator><name pos:start="1137:22" pos:end="1137:24">ret</name> <operator pos:start="1137:26" pos:end="1137:26">=</operator> <call pos:start="1137:28" pos:end="1137:46"><name pos:start="1137:28" pos:end="1137:40">copy_chapters</name><argument_list pos:start="1137:41" pos:end="1137:46">(<argument pos:start="1137:42" pos:end="1137:42"><expr pos:start="1137:42" pos:end="1137:42"><name pos:start="1137:42" pos:end="1137:42">i</name></expr></argument>, <argument pos:start="1137:45" pos:end="1137:45"><expr pos:start="1137:45" pos:end="1137:45"><name pos:start="1137:45" pos:end="1137:45">j</name></expr></argument>)</argument_list></call><operator pos:start="1137:47" pos:end="1137:47">)</operator> <operator pos:start="1137:49" pos:end="1137:49">&lt;</operator> <literal type="number" pos:start="1137:51" pos:end="1137:51">0</literal></expr>)</condition><block type="pseudo" pos:start="1139:21" pos:end="1139:37"><block_content pos:start="1139:21" pos:end="1139:37">

                    <goto pos:start="1139:21" pos:end="1139:37">goto <name pos:start="1139:26" pos:end="1139:36">dump_format</name>;</goto></block_content></block></if></if_stmt></block_content></block></for>

            <break pos:start="1141:13" pos:end="1141:18">break;</break>

        </block_content>}</block></for></block_content></block></if></if_stmt>



    <comment type="block" pos:start="1147:5" pos:end="1147:43">/* open files and write file headers */</comment>

    <for pos:start="1149:5" pos:end="1169:5">for<control pos:start="1149:8" pos:end="1149:34">(<init pos:start="1149:9" pos:end="1149:12"><expr pos:start="1149:9" pos:end="1149:11"><name pos:start="1149:9" pos:end="1149:9">i</name><operator pos:start="1149:10" pos:end="1149:10">=</operator><literal type="number" pos:start="1149:11" pos:end="1149:11">0</literal></expr>;</init><condition pos:start="1149:13" pos:end="1149:30"><expr pos:start="1149:13" pos:end="1149:29"><name pos:start="1149:13" pos:end="1149:13">i</name><operator pos:start="1149:14" pos:end="1149:14">&lt;</operator><name pos:start="1149:15" pos:end="1149:29">nb_output_files</name></expr>;</condition><incr pos:start="1149:31" pos:end="1149:33"><expr pos:start="1149:31" pos:end="1149:33"><name pos:start="1149:31" pos:end="1149:31">i</name><operator pos:start="1149:32" pos:end="1149:33">++</operator></expr></incr>)</control> <block pos:start="1149:36" pos:end="1169:5">{<block_content pos:start="1151:9" pos:end="1167:9">

        <expr_stmt pos:start="1151:9" pos:end="1151:29"><expr pos:start="1151:9" pos:end="1151:28"><name pos:start="1151:9" pos:end="1151:10">os</name> <operator pos:start="1151:12" pos:end="1151:12">=</operator> <name pos:start="1151:14" pos:end="1151:28"><name pos:start="1151:14" pos:end="1151:25">output_files</name><index pos:start="1151:26" pos:end="1151:28">[<expr pos:start="1151:27" pos:end="1151:27"><name pos:start="1151:27" pos:end="1151:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1153:9" pos:end="1161:9"><if pos:start="1153:9" pos:end="1161:9">if <condition pos:start="1153:12" pos:end="1153:36">(<expr pos:start="1153:13" pos:end="1153:35"><call pos:start="1153:13" pos:end="1153:31"><name pos:start="1153:13" pos:end="1153:27">av_write_header</name><argument_list pos:start="1153:28" pos:end="1153:31">(<argument pos:start="1153:29" pos:end="1153:30"><expr pos:start="1153:29" pos:end="1153:30"><name pos:start="1153:29" pos:end="1153:30">os</name></expr></argument>)</argument_list></call> <operator pos:start="1153:33" pos:end="1153:33">&lt;</operator> <literal type="number" pos:start="1153:35" pos:end="1153:35">0</literal></expr>)</condition> <block pos:start="1153:38" pos:end="1161:9">{<block_content pos:start="1155:13" pos:end="1159:29">

            <expr_stmt pos:start="1155:13" pos:end="1155:123"><expr pos:start="1155:13" pos:end="1155:122"><call pos:start="1155:13" pos:end="1155:122"><name pos:start="1155:13" pos:end="1155:20">snprintf</name><argument_list pos:start="1155:21" pos:end="1155:122">(<argument pos:start="1155:22" pos:end="1155:26"><expr pos:start="1155:22" pos:end="1155:26"><name pos:start="1155:22" pos:end="1155:26">error</name></expr></argument>, <argument pos:start="1155:29" pos:end="1155:41"><expr pos:start="1155:29" pos:end="1155:41"><sizeof pos:start="1155:29" pos:end="1155:41">sizeof<argument_list pos:start="1155:35" pos:end="1155:41">(<argument pos:start="1155:36" pos:end="1155:40"><expr pos:start="1155:36" pos:end="1155:40"><name pos:start="1155:36" pos:end="1155:40">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1155:44" pos:end="1155:118"><expr pos:start="1155:44" pos:end="1155:118"><literal type="string" pos:start="1155:44" pos:end="1155:118">"Could not write header for output file #%d (incorrect codec parameters ?)"</literal></expr></argument>, <argument pos:start="1155:121" pos:end="1155:121"><expr pos:start="1155:121" pos:end="1155:121"><name pos:start="1155:121" pos:end="1155:121">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1157:13" pos:end="1157:34"><expr pos:start="1157:13" pos:end="1157:33"><name pos:start="1157:13" pos:end="1157:15">ret</name> <operator pos:start="1157:17" pos:end="1157:17">=</operator> <call pos:start="1157:19" pos:end="1157:33"><name pos:start="1157:19" pos:end="1157:25">AVERROR</name><argument_list pos:start="1157:26" pos:end="1157:33">(<argument pos:start="1157:27" pos:end="1157:32"><expr pos:start="1157:27" pos:end="1157:32"><name pos:start="1157:27" pos:end="1157:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1159:13" pos:end="1159:29">goto <name pos:start="1159:18" pos:end="1159:28">dump_format</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="1163:9" pos:end="1167:9"><if pos:start="1163:9" pos:end="1167:9">if <condition pos:start="1163:12" pos:end="1163:58">(<expr pos:start="1163:13" pos:end="1163:57"><call pos:start="1163:13" pos:end="1163:57"><name pos:start="1163:13" pos:end="1163:18">strcmp</name><argument_list pos:start="1163:19" pos:end="1163:57">(<argument pos:start="1163:20" pos:end="1163:49"><expr pos:start="1163:20" pos:end="1163:49"><name pos:start="1163:20" pos:end="1163:34"><name pos:start="1163:20" pos:end="1163:31">output_files</name><index pos:start="1163:32" pos:end="1163:34">[<expr pos:start="1163:33" pos:end="1163:33"><name pos:start="1163:33" pos:end="1163:33">i</name></expr>]</index></name><operator pos:start="1163:35" pos:end="1163:36">-&gt;</operator><name pos:start="1163:37" pos:end="1163:49"><name pos:start="1163:37" pos:end="1163:43">oformat</name><operator pos:start="1163:44" pos:end="1163:45">-&gt;</operator><name pos:start="1163:46" pos:end="1163:49">name</name></name></expr></argument>, <argument pos:start="1163:52" pos:end="1163:56"><expr pos:start="1163:52" pos:end="1163:56"><literal type="string" pos:start="1163:52" pos:end="1163:56">"rtp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1163:60" pos:end="1167:9">{<block_content pos:start="1165:13" pos:end="1165:25">

            <expr_stmt pos:start="1165:13" pos:end="1165:25"><expr pos:start="1165:13" pos:end="1165:24"><name pos:start="1165:13" pos:end="1165:20">want_sdp</name> <operator pos:start="1165:22" pos:end="1165:22">=</operator> <literal type="number" pos:start="1165:24" pos:end="1165:24">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



 <label pos:start="1173:2" pos:end="1173:13"><name pos:start="1173:2" pos:end="1173:12">dump_format</name>:</label>

    <comment type="block" pos:start="1175:5" pos:end="1177:24">/* dump the file output parameters - cannot be done before in case

       of stream copy */</comment>

    <for pos:start="1179:5" pos:end="1183:5">for<control pos:start="1179:8" pos:end="1179:34">(<init pos:start="1179:9" pos:end="1179:12"><expr pos:start="1179:9" pos:end="1179:11"><name pos:start="1179:9" pos:end="1179:9">i</name><operator pos:start="1179:10" pos:end="1179:10">=</operator><literal type="number" pos:start="1179:11" pos:end="1179:11">0</literal></expr>;</init><condition pos:start="1179:13" pos:end="1179:30"><expr pos:start="1179:13" pos:end="1179:29"><name pos:start="1179:13" pos:end="1179:13">i</name><operator pos:start="1179:14" pos:end="1179:14">&lt;</operator><name pos:start="1179:15" pos:end="1179:29">nb_output_files</name></expr>;</condition><incr pos:start="1179:31" pos:end="1179:33"><expr pos:start="1179:31" pos:end="1179:33"><name pos:start="1179:31" pos:end="1179:31">i</name><operator pos:start="1179:32" pos:end="1179:33">++</operator></expr></incr>)</control> <block pos:start="1179:36" pos:end="1183:5">{<block_content pos:start="1181:9" pos:end="1181:73">

        <expr_stmt pos:start="1181:9" pos:end="1181:73"><expr pos:start="1181:9" pos:end="1181:72"><call pos:start="1181:9" pos:end="1181:72"><name pos:start="1181:9" pos:end="1181:22">av_dump_format</name><argument_list pos:start="1181:23" pos:end="1181:72">(<argument pos:start="1181:24" pos:end="1181:38"><expr pos:start="1181:24" pos:end="1181:38"><name pos:start="1181:24" pos:end="1181:38"><name pos:start="1181:24" pos:end="1181:35">output_files</name><index pos:start="1181:36" pos:end="1181:38">[<expr pos:start="1181:37" pos:end="1181:37"><name pos:start="1181:37" pos:end="1181:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="1181:41" pos:end="1181:41"><expr pos:start="1181:41" pos:end="1181:41"><name pos:start="1181:41" pos:end="1181:41">i</name></expr></argument>, <argument pos:start="1181:44" pos:end="1181:68"><expr pos:start="1181:44" pos:end="1181:68"><name pos:start="1181:44" pos:end="1181:58"><name pos:start="1181:44" pos:end="1181:55">output_files</name><index pos:start="1181:56" pos:end="1181:58">[<expr pos:start="1181:57" pos:end="1181:57"><name pos:start="1181:57" pos:end="1181:57">i</name></expr>]</index></name><operator pos:start="1181:59" pos:end="1181:60">-&gt;</operator><name pos:start="1181:61" pos:end="1181:68">filename</name></expr></argument>, <argument pos:start="1181:71" pos:end="1181:71"><expr pos:start="1181:71" pos:end="1181:71"><literal type="number" pos:start="1181:71" pos:end="1181:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1187:5" pos:end="1187:33">/* dump the stream mapping */</comment>

    <if_stmt pos:start="1189:5" pos:end="1219:5"><if pos:start="1189:5" pos:end="1219:5">if <condition pos:start="1189:8" pos:end="1189:21">(<expr pos:start="1189:9" pos:end="1189:20"><name pos:start="1189:9" pos:end="1189:15">verbose</name> <operator pos:start="1189:17" pos:end="1189:18">&gt;=</operator> <literal type="number" pos:start="1189:20" pos:end="1189:20">0</literal></expr>)</condition> <block pos:start="1189:23" pos:end="1219:5">{<block_content pos:start="1191:9" pos:end="1217:9">

        <expr_stmt pos:start="1191:9" pos:end="1191:45"><expr pos:start="1191:9" pos:end="1191:44"><call pos:start="1191:9" pos:end="1191:44"><name pos:start="1191:9" pos:end="1191:15">fprintf</name><argument_list pos:start="1191:16" pos:end="1191:44">(<argument pos:start="1191:17" pos:end="1191:22"><expr pos:start="1191:17" pos:end="1191:22"><name pos:start="1191:17" pos:end="1191:22">stderr</name></expr></argument>, <argument pos:start="1191:25" pos:end="1191:43"><expr pos:start="1191:25" pos:end="1191:43"><literal type="string" pos:start="1191:25" pos:end="1191:43">"Stream mapping:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="1193:9" pos:end="1217:9">for<control pos:start="1193:12" pos:end="1193:34">(<init pos:start="1193:13" pos:end="1193:16"><expr pos:start="1193:13" pos:end="1193:15"><name pos:start="1193:13" pos:end="1193:13">i</name><operator pos:start="1193:14" pos:end="1193:14">=</operator><literal type="number" pos:start="1193:15" pos:end="1193:15">0</literal></expr>;</init><condition pos:start="1193:17" pos:end="1193:30"><expr pos:start="1193:17" pos:end="1193:29"><name pos:start="1193:17" pos:end="1193:17">i</name><operator pos:start="1193:18" pos:end="1193:18">&lt;</operator><name pos:start="1193:19" pos:end="1193:29">nb_ostreams</name></expr>;</condition><incr pos:start="1193:31" pos:end="1193:33"><expr pos:start="1193:31" pos:end="1193:33"><name pos:start="1193:31" pos:end="1193:31">i</name><operator pos:start="1193:32" pos:end="1193:33">++</operator></expr></incr>)</control> <block pos:start="1193:36" pos:end="1217:9">{<block_content pos:start="1195:13" pos:end="1215:34">

            <expr_stmt pos:start="1195:13" pos:end="1195:31"><expr pos:start="1195:13" pos:end="1195:30"><name pos:start="1195:13" pos:end="1195:15">ost</name> <operator pos:start="1195:17" pos:end="1195:17">=</operator> <name pos:start="1195:19" pos:end="1195:30"><name pos:start="1195:19" pos:end="1195:27">ost_table</name><index pos:start="1195:28" pos:end="1195:30">[<expr pos:start="1195:29" pos:end="1195:29"><name pos:start="1195:29" pos:end="1195:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1197:13" pos:end="1205:32"><expr pos:start="1197:13" pos:end="1205:31"><call pos:start="1197:13" pos:end="1205:31"><name pos:start="1197:13" pos:end="1197:19">fprintf</name><argument_list pos:start="1197:20" pos:end="1205:31">(<argument pos:start="1197:21" pos:end="1197:26"><expr pos:start="1197:21" pos:end="1197:26"><name pos:start="1197:21" pos:end="1197:26">stderr</name></expr></argument>, <argument pos:start="1197:29" pos:end="1197:55"><expr pos:start="1197:29" pos:end="1197:55"><literal type="string" pos:start="1197:29" pos:end="1197:55">"  Stream #%d.%d -&gt; #%d.%d"</literal></expr></argument>,

                    <argument pos:start="1199:21" pos:end="1199:60"><expr pos:start="1199:21" pos:end="1199:60"><name pos:start="1199:21" pos:end="1199:48"><name pos:start="1199:21" pos:end="1199:29">ist_table</name><index pos:start="1199:30" pos:end="1199:48">[<expr pos:start="1199:31" pos:end="1199:47"><name pos:start="1199:31" pos:end="1199:47"><name pos:start="1199:31" pos:end="1199:33">ost</name><operator pos:start="1199:34" pos:end="1199:35">-&gt;</operator><name pos:start="1199:36" pos:end="1199:47">source_index</name></name></expr>]</index></name><operator pos:start="1199:49" pos:end="1199:50">-&gt;</operator><name pos:start="1199:51" pos:end="1199:60">file_index</name></expr></argument>,

                    <argument pos:start="1201:21" pos:end="1201:55"><expr pos:start="1201:21" pos:end="1201:55"><name pos:start="1201:21" pos:end="1201:48"><name pos:start="1201:21" pos:end="1201:29">ist_table</name><index pos:start="1201:30" pos:end="1201:48">[<expr pos:start="1201:31" pos:end="1201:47"><name pos:start="1201:31" pos:end="1201:47"><name pos:start="1201:31" pos:end="1201:33">ost</name><operator pos:start="1201:34" pos:end="1201:35">-&gt;</operator><name pos:start="1201:36" pos:end="1201:47">source_index</name></name></expr>]</index></name><operator pos:start="1201:49" pos:end="1201:50">-&gt;</operator><name pos:start="1201:51" pos:end="1201:55">index</name></expr></argument>,

                    <argument pos:start="1203:21" pos:end="1203:35"><expr pos:start="1203:21" pos:end="1203:35"><name pos:start="1203:21" pos:end="1203:35"><name pos:start="1203:21" pos:end="1203:23">ost</name><operator pos:start="1203:24" pos:end="1203:25">-&gt;</operator><name pos:start="1203:26" pos:end="1203:35">file_index</name></name></expr></argument>,

                    <argument pos:start="1205:21" pos:end="1205:30"><expr pos:start="1205:21" pos:end="1205:30"><name pos:start="1205:21" pos:end="1205:30"><name pos:start="1205:21" pos:end="1205:23">ost</name><operator pos:start="1205:24" pos:end="1205:25">-&gt;</operator><name pos:start="1205:26" pos:end="1205:30">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1207:13" pos:end="1213:46"><if pos:start="1207:13" pos:end="1213:46">if <condition pos:start="1207:16" pos:end="1207:62">(<expr pos:start="1207:17" pos:end="1207:61"><name pos:start="1207:17" pos:end="1207:29"><name pos:start="1207:17" pos:end="1207:19">ost</name><operator pos:start="1207:20" pos:end="1207:21">-&gt;</operator><name pos:start="1207:22" pos:end="1207:29">sync_ist</name></name> <operator pos:start="1207:31" pos:end="1207:32">!=</operator> <name pos:start="1207:34" pos:end="1207:61"><name pos:start="1207:34" pos:end="1207:42">ist_table</name><index pos:start="1207:43" pos:end="1207:61">[<expr pos:start="1207:44" pos:end="1207:60"><name pos:start="1207:44" pos:end="1207:60"><name pos:start="1207:44" pos:end="1207:46">ost</name><operator pos:start="1207:47" pos:end="1207:48">-&gt;</operator><name pos:start="1207:49" pos:end="1207:60">source_index</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="1209:17" pos:end="1213:46"><block_content pos:start="1209:17" pos:end="1213:46">

                <expr_stmt pos:start="1209:17" pos:end="1213:46"><expr pos:start="1209:17" pos:end="1213:45"><call pos:start="1209:17" pos:end="1213:45"><name pos:start="1209:17" pos:end="1209:23">fprintf</name><argument_list pos:start="1209:24" pos:end="1213:45">(<argument pos:start="1209:25" pos:end="1209:30"><expr pos:start="1209:25" pos:end="1209:30"><name pos:start="1209:25" pos:end="1209:30">stderr</name></expr></argument>, <argument pos:start="1209:33" pos:end="1209:48"><expr pos:start="1209:33" pos:end="1209:48"><literal type="string" pos:start="1209:33" pos:end="1209:48">" [sync #%d.%d]"</literal></expr></argument>,

                        <argument pos:start="1211:25" pos:end="1211:49"><expr pos:start="1211:25" pos:end="1211:49"><name pos:start="1211:25" pos:end="1211:49"><name pos:start="1211:25" pos:end="1211:27">ost</name><operator pos:start="1211:28" pos:end="1211:29">-&gt;</operator><name pos:start="1211:30" pos:end="1211:37">sync_ist</name><operator pos:start="1211:38" pos:end="1211:39">-&gt;</operator><name pos:start="1211:40" pos:end="1211:49">file_index</name></name></expr></argument>,

                        <argument pos:start="1213:25" pos:end="1213:44"><expr pos:start="1213:25" pos:end="1213:44"><name pos:start="1213:25" pos:end="1213:44"><name pos:start="1213:25" pos:end="1213:27">ost</name><operator pos:start="1213:28" pos:end="1213:29">-&gt;</operator><name pos:start="1213:30" pos:end="1213:37">sync_ist</name><operator pos:start="1213:38" pos:end="1213:39">-&gt;</operator><name pos:start="1213:40" pos:end="1213:44">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1215:13" pos:end="1215:34"><expr pos:start="1215:13" pos:end="1215:33"><call pos:start="1215:13" pos:end="1215:33"><name pos:start="1215:13" pos:end="1215:19">fprintf</name><argument_list pos:start="1215:20" pos:end="1215:33">(<argument pos:start="1215:21" pos:end="1215:26"><expr pos:start="1215:21" pos:end="1215:26"><name pos:start="1215:21" pos:end="1215:26">stderr</name></expr></argument>, <argument pos:start="1215:29" pos:end="1215:32"><expr pos:start="1215:29" pos:end="1215:32"><literal type="string" pos:start="1215:29" pos:end="1215:32">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1223:5" pos:end="1229:5"><if pos:start="1223:5" pos:end="1229:5">if <condition pos:start="1223:8" pos:end="1223:12">(<expr pos:start="1223:9" pos:end="1223:11"><name pos:start="1223:9" pos:end="1223:11">ret</name></expr>)</condition> <block pos:start="1223:14" pos:end="1229:5">{<block_content pos:start="1225:9" pos:end="1227:18">

        <expr_stmt pos:start="1225:9" pos:end="1225:39"><expr pos:start="1225:9" pos:end="1225:38"><call pos:start="1225:9" pos:end="1225:38"><name pos:start="1225:9" pos:end="1225:15">fprintf</name><argument_list pos:start="1225:16" pos:end="1225:38">(<argument pos:start="1225:17" pos:end="1225:22"><expr pos:start="1225:17" pos:end="1225:22"><name pos:start="1225:17" pos:end="1225:22">stderr</name></expr></argument>, <argument pos:start="1225:25" pos:end="1225:30"><expr pos:start="1225:25" pos:end="1225:30"><literal type="string" pos:start="1225:25" pos:end="1225:30">"%s\n"</literal></expr></argument>, <argument pos:start="1225:33" pos:end="1225:37"><expr pos:start="1225:33" pos:end="1225:37"><name pos:start="1225:33" pos:end="1225:37">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1227:9" pos:end="1227:18">goto <name pos:start="1227:14" pos:end="1227:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1233:5" pos:end="1237:5"><if pos:start="1233:5" pos:end="1237:5">if <condition pos:start="1233:8" pos:end="1233:17">(<expr pos:start="1233:9" pos:end="1233:16"><name pos:start="1233:9" pos:end="1233:16">want_sdp</name></expr>)</condition> <block pos:start="1233:19" pos:end="1237:5">{<block_content pos:start="1235:9" pos:end="1235:49">

        <expr_stmt pos:start="1235:9" pos:end="1235:49"><expr pos:start="1235:9" pos:end="1235:48"><call pos:start="1235:9" pos:end="1235:48"><name pos:start="1235:9" pos:end="1235:17">print_sdp</name><argument_list pos:start="1235:18" pos:end="1235:48">(<argument pos:start="1235:19" pos:end="1235:30"><expr pos:start="1235:19" pos:end="1235:30"><name pos:start="1235:19" pos:end="1235:30">output_files</name></expr></argument>, <argument pos:start="1235:33" pos:end="1235:47"><expr pos:start="1235:33" pos:end="1235:47"><name pos:start="1235:33" pos:end="1235:47">nb_output_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1241:5" pos:end="1249:5"><if pos:start="1241:5" pos:end="1249:5">if <condition pos:start="1241:8" pos:end="1241:21">(<expr pos:start="1241:9" pos:end="1241:20"><operator pos:start="1241:9" pos:end="1241:9">!</operator><name pos:start="1241:10" pos:end="1241:20">using_stdin</name></expr>)</condition> <block pos:start="1241:23" pos:end="1249:5">{<block_content pos:start="1243:9" pos:end="1247:51">

        <if_stmt pos:start="1243:9" pos:end="1245:60"><if pos:start="1243:9" pos:end="1245:60">if<condition pos:start="1243:11" pos:end="1243:24">(<expr pos:start="1243:12" pos:end="1243:23"><name pos:start="1243:12" pos:end="1243:18">verbose</name> <operator pos:start="1243:20" pos:end="1243:21">&gt;=</operator> <literal type="number" pos:start="1243:23" pos:end="1243:23">0</literal></expr>)</condition><block type="pseudo" pos:start="1245:13" pos:end="1245:60"><block_content pos:start="1245:13" pos:end="1245:60">

            <expr_stmt pos:start="1245:13" pos:end="1245:60"><expr pos:start="1245:13" pos:end="1245:59"><call pos:start="1245:13" pos:end="1245:59"><name pos:start="1245:13" pos:end="1245:19">fprintf</name><argument_list pos:start="1245:20" pos:end="1245:59">(<argument pos:start="1245:21" pos:end="1245:26"><expr pos:start="1245:21" pos:end="1245:26"><name pos:start="1245:21" pos:end="1245:26">stderr</name></expr></argument>, <argument pos:start="1245:29" pos:end="1245:58"><expr pos:start="1245:29" pos:end="1245:58"><literal type="string" pos:start="1245:29" pos:end="1245:58">"Press [q] to stop encoding\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1247:9" pos:end="1247:51"><expr pos:start="1247:9" pos:end="1247:50"><call pos:start="1247:9" pos:end="1247:50"><name pos:start="1247:9" pos:end="1247:29">avio_set_interrupt_cb</name><argument_list pos:start="1247:30" pos:end="1247:50">(<argument pos:start="1247:31" pos:end="1247:49"><expr pos:start="1247:31" pos:end="1247:49"><name pos:start="1247:31" pos:end="1247:49">decode_interrupt_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="1251:5" pos:end="1251:16"><expr pos:start="1251:5" pos:end="1251:15"><call pos:start="1251:5" pos:end="1251:15"><name pos:start="1251:5" pos:end="1251:13">term_init</name><argument_list pos:start="1251:14" pos:end="1251:15">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="1255:5" pos:end="1255:31"><expr pos:start="1255:5" pos:end="1255:30"><name pos:start="1255:5" pos:end="1255:15">timer_start</name> <operator pos:start="1255:17" pos:end="1255:17">=</operator> <call pos:start="1255:19" pos:end="1255:30"><name pos:start="1255:19" pos:end="1255:28">av_gettime</name><argument_list pos:start="1255:29" pos:end="1255:30">()</argument_list></call></expr>;</expr_stmt>



    <for pos:start="1259:5" pos:end="1549:5">for<control pos:start="1259:8" pos:end="1259:33">(<init pos:start="1259:9" pos:end="1259:9">;</init> <condition pos:start="1259:11" pos:end="1259:32"><expr pos:start="1259:11" pos:end="1259:31"><name pos:start="1259:11" pos:end="1259:26">received_sigterm</name> <operator pos:start="1259:28" pos:end="1259:29">==</operator> <literal type="number" pos:start="1259:31" pos:end="1259:31">0</literal></expr>;</condition><incr/>)</control> <block pos:start="1259:35" pos:end="1549:5">{<block_content pos:start="1261:9" pos:end="1547:62">

        <decl_stmt pos:start="1261:9" pos:end="1261:34"><decl pos:start="1261:9" pos:end="1261:22"><type pos:start="1261:9" pos:end="1261:11"><name pos:start="1261:9" pos:end="1261:11">int</name></type> <name pos:start="1261:13" pos:end="1261:22">file_index</name></decl>, <decl pos:start="1261:25" pos:end="1261:33"><type ref="prev" pos:start="1261:9" pos:end="1261:11"/><name pos:start="1261:25" pos:end="1261:33">ist_index</name></decl>;</decl_stmt>

        <decl_stmt pos:start="1263:9" pos:end="1263:21"><decl pos:start="1263:9" pos:end="1263:20"><type pos:start="1263:9" pos:end="1263:16"><name pos:start="1263:9" pos:end="1263:16">AVPacket</name></type> <name pos:start="1263:18" pos:end="1263:20">pkt</name></decl>;</decl_stmt>

        <decl_stmt pos:start="1265:9" pos:end="1265:24"><decl pos:start="1265:9" pos:end="1265:23"><type pos:start="1265:9" pos:end="1265:14"><name pos:start="1265:9" pos:end="1265:14">double</name></type> <name pos:start="1265:16" pos:end="1265:23">ipts_min</name></decl>;</decl_stmt>

        <decl_stmt pos:start="1267:9" pos:end="1267:24"><decl pos:start="1267:9" pos:end="1267:23"><type pos:start="1267:9" pos:end="1267:14"><name pos:start="1267:9" pos:end="1267:14">double</name></type> <name pos:start="1267:16" pos:end="1267:23">opts_min</name></decl>;</decl_stmt>



    <label pos:start="1271:5" pos:end="1271:9"><name pos:start="1271:5" pos:end="1271:8">redo</name>:</label>

        <expr_stmt pos:start="1273:9" pos:end="1273:24"><expr pos:start="1273:9" pos:end="1273:23"><name pos:start="1273:9" pos:end="1273:16">ipts_min</name><operator pos:start="1273:17" pos:end="1273:17">=</operator> <literal type="number" pos:start="1273:19" pos:end="1273:23">1e100</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1275:9" pos:end="1275:24"><expr pos:start="1275:9" pos:end="1275:23"><name pos:start="1275:9" pos:end="1275:16">opts_min</name><operator pos:start="1275:17" pos:end="1275:17">=</operator> <literal type="number" pos:start="1275:19" pos:end="1275:23">1e100</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="1277:9" pos:end="1277:35">/* if 'q' pressed, exits */</comment>

        <if_stmt pos:start="1279:9" pos:end="1293:9"><if pos:start="1279:9" pos:end="1293:9">if <condition pos:start="1279:12" pos:end="1279:25">(<expr pos:start="1279:13" pos:end="1279:24"><operator pos:start="1279:13" pos:end="1279:13">!</operator><name pos:start="1279:14" pos:end="1279:24">using_stdin</name></expr>)</condition> <block pos:start="1279:27" pos:end="1293:9">{<block_content pos:start="1281:13" pos:end="1291:22">

            <if_stmt pos:start="1281:13" pos:end="1283:22"><if pos:start="1281:13" pos:end="1283:22">if <condition pos:start="1281:16" pos:end="1281:26">(<expr pos:start="1281:17" pos:end="1281:25"><name pos:start="1281:17" pos:end="1281:25">q_pressed</name></expr>)</condition><block type="pseudo" pos:start="1283:17" pos:end="1283:22"><block_content pos:start="1283:17" pos:end="1283:22">

                <break pos:start="1283:17" pos:end="1283:22">break;</break></block_content></block></if></if_stmt>

            <comment type="block" pos:start="1285:13" pos:end="1285:45">/* read_key() returns 0 on EOF */</comment>

            <expr_stmt pos:start="1287:13" pos:end="1287:29"><expr pos:start="1287:13" pos:end="1287:28"><name pos:start="1287:13" pos:end="1287:15">key</name> <operator pos:start="1287:17" pos:end="1287:17">=</operator> <call pos:start="1287:19" pos:end="1287:28"><name pos:start="1287:19" pos:end="1287:26">read_key</name><argument_list pos:start="1287:27" pos:end="1287:28">()</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1289:13" pos:end="1291:22"><if pos:start="1289:13" pos:end="1291:22">if <condition pos:start="1289:16" pos:end="1289:27">(<expr pos:start="1289:17" pos:end="1289:26"><name pos:start="1289:17" pos:end="1289:19">key</name> <operator pos:start="1289:21" pos:end="1289:22">==</operator> <literal type="char" pos:start="1289:24" pos:end="1289:26">'q'</literal></expr>)</condition><block type="pseudo" pos:start="1291:17" pos:end="1291:22"><block_content pos:start="1291:17" pos:end="1291:22">

                <break pos:start="1291:17" pos:end="1291:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="1297:9" pos:end="1299:33">/* select the stream that we must read now by looking at the

           smallest output pts */</comment>

        <expr_stmt pos:start="1301:9" pos:end="1301:24"><expr pos:start="1301:9" pos:end="1301:23"><name pos:start="1301:9" pos:end="1301:18">file_index</name> <operator pos:start="1301:20" pos:end="1301:20">=</operator> <operator pos:start="1301:22" pos:end="1301:22">-</operator><literal type="number" pos:start="1301:23" pos:end="1301:23">1</literal></expr>;</expr_stmt>

        <for pos:start="1303:9" pos:end="1349:9">for<control pos:start="1303:12" pos:end="1303:34">(<init pos:start="1303:13" pos:end="1303:16"><expr pos:start="1303:13" pos:end="1303:15"><name pos:start="1303:13" pos:end="1303:13">i</name><operator pos:start="1303:14" pos:end="1303:14">=</operator><literal type="number" pos:start="1303:15" pos:end="1303:15">0</literal></expr>;</init><condition pos:start="1303:17" pos:end="1303:30"><expr pos:start="1303:17" pos:end="1303:29"><name pos:start="1303:17" pos:end="1303:17">i</name><operator pos:start="1303:18" pos:end="1303:18">&lt;</operator><name pos:start="1303:19" pos:end="1303:29">nb_ostreams</name></expr>;</condition><incr pos:start="1303:31" pos:end="1303:33"><expr pos:start="1303:31" pos:end="1303:33"><name pos:start="1303:31" pos:end="1303:31">i</name><operator pos:start="1303:32" pos:end="1303:33">++</operator></expr></incr>)</control> <block pos:start="1303:36" pos:end="1349:9">{<block_content pos:start="1305:13" pos:end="1347:13">

            <decl_stmt pos:start="1305:13" pos:end="1305:30"><decl pos:start="1305:13" pos:end="1305:23"><type pos:start="1305:13" pos:end="1305:18"><name pos:start="1305:13" pos:end="1305:18">double</name></type> <name pos:start="1305:20" pos:end="1305:23">ipts</name></decl>, <decl pos:start="1305:26" pos:end="1305:29"><type ref="prev" pos:start="1305:13" pos:end="1305:18"/><name pos:start="1305:26" pos:end="1305:29">opts</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1307:13" pos:end="1307:31"><expr pos:start="1307:13" pos:end="1307:30"><name pos:start="1307:13" pos:end="1307:15">ost</name> <operator pos:start="1307:17" pos:end="1307:17">=</operator> <name pos:start="1307:19" pos:end="1307:30"><name pos:start="1307:19" pos:end="1307:27">ost_table</name><index pos:start="1307:28" pos:end="1307:30">[<expr pos:start="1307:29" pos:end="1307:29"><name pos:start="1307:29" pos:end="1307:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1309:13" pos:end="1309:47"><expr pos:start="1309:13" pos:end="1309:46"><name pos:start="1309:13" pos:end="1309:14">os</name> <operator pos:start="1309:16" pos:end="1309:16">=</operator> <name pos:start="1309:18" pos:end="1309:46"><name pos:start="1309:18" pos:end="1309:29">output_files</name><index pos:start="1309:30" pos:end="1309:46">[<expr pos:start="1309:31" pos:end="1309:45"><name pos:start="1309:31" pos:end="1309:45"><name pos:start="1309:31" pos:end="1309:33">ost</name><operator pos:start="1309:34" pos:end="1309:35">-&gt;</operator><name pos:start="1309:36" pos:end="1309:45">file_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1311:13" pos:end="1311:47"><expr pos:start="1311:13" pos:end="1311:46"><name pos:start="1311:13" pos:end="1311:15">ist</name> <operator pos:start="1311:17" pos:end="1311:17">=</operator> <name pos:start="1311:19" pos:end="1311:46"><name pos:start="1311:19" pos:end="1311:27">ist_table</name><index pos:start="1311:28" pos:end="1311:46">[<expr pos:start="1311:29" pos:end="1311:45"><name pos:start="1311:29" pos:end="1311:45"><name pos:start="1311:29" pos:end="1311:31">ost</name><operator pos:start="1311:32" pos:end="1311:33">-&gt;</operator><name pos:start="1311:34" pos:end="1311:45">source_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="1313:13" pos:end="1315:25"><if pos:start="1313:13" pos:end="1315:25">if<condition pos:start="1313:15" pos:end="1313:73">(<expr pos:start="1313:16" pos:end="1313:72"><name pos:start="1313:16" pos:end="1313:42"><name pos:start="1313:16" pos:end="1313:18">ist</name><operator pos:start="1313:19" pos:end="1313:20">-&gt;</operator><name pos:start="1313:21" pos:end="1313:42">is_past_recording_time</name></name> <operator pos:start="1313:44" pos:end="1313:45">||</operator> <name pos:start="1313:47" pos:end="1313:72"><name pos:start="1313:47" pos:end="1313:55">no_packet</name><index pos:start="1313:56" pos:end="1313:72">[<expr pos:start="1313:57" pos:end="1313:71"><name pos:start="1313:57" pos:end="1313:71"><name pos:start="1313:57" pos:end="1313:59">ist</name><operator pos:start="1313:60" pos:end="1313:61">-&gt;</operator><name pos:start="1313:62" pos:end="1313:71">file_index</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="1315:17" pos:end="1315:25"><block_content pos:start="1315:17" pos:end="1315:25">

                <continue pos:start="1315:17" pos:end="1315:25">continue;</continue></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1317:17" pos:end="1317:69"><expr pos:start="1317:17" pos:end="1317:68"><name pos:start="1317:17" pos:end="1317:20">opts</name> <operator pos:start="1317:22" pos:end="1317:22">=</operator> <name pos:start="1317:24" pos:end="1317:39"><name pos:start="1317:24" pos:end="1317:26">ost</name><operator pos:start="1317:27" pos:end="1317:28">-&gt;</operator><name pos:start="1317:29" pos:end="1317:30">st</name><operator pos:start="1317:31" pos:end="1317:32">-&gt;</operator><name pos:start="1317:33" pos:end="1317:35">pts</name><operator pos:start="1317:36" pos:end="1317:36">.</operator><name pos:start="1317:37" pos:end="1317:39">val</name></name> <operator pos:start="1317:41" pos:end="1317:41">*</operator> <call pos:start="1317:43" pos:end="1317:68"><name pos:start="1317:43" pos:end="1317:48">av_q2d</name><argument_list pos:start="1317:49" pos:end="1317:68">(<argument pos:start="1317:50" pos:end="1317:67"><expr pos:start="1317:50" pos:end="1317:67"><name pos:start="1317:50" pos:end="1317:67"><name pos:start="1317:50" pos:end="1317:52">ost</name><operator pos:start="1317:53" pos:end="1317:54">-&gt;</operator><name pos:start="1317:55" pos:end="1317:56">st</name><operator pos:start="1317:57" pos:end="1317:58">-&gt;</operator><name pos:start="1317:59" pos:end="1317:67">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1319:13" pos:end="1319:36"><expr pos:start="1319:13" pos:end="1319:35"><name pos:start="1319:13" pos:end="1319:16">ipts</name> <operator pos:start="1319:18" pos:end="1319:18">=</operator> <operator pos:start="1319:20" pos:end="1319:20">(</operator><name pos:start="1319:21" pos:end="1319:26">double</name><operator pos:start="1319:27" pos:end="1319:27">)</operator><name pos:start="1319:28" pos:end="1319:35"><name pos:start="1319:28" pos:end="1319:30">ist</name><operator pos:start="1319:31" pos:end="1319:32">-&gt;</operator><name pos:start="1319:33" pos:end="1319:35">pts</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="1321:13" pos:end="1339:13"><if pos:start="1321:13" pos:end="1339:13">if <condition pos:start="1321:16" pos:end="1321:57">(<expr pos:start="1321:17" pos:end="1321:56"><operator pos:start="1321:17" pos:end="1321:17">!</operator><name pos:start="1321:18" pos:end="1321:44"><name pos:start="1321:18" pos:end="1321:27">file_table</name><index pos:start="1321:28" pos:end="1321:44">[<expr pos:start="1321:29" pos:end="1321:43"><name pos:start="1321:29" pos:end="1321:43"><name pos:start="1321:29" pos:end="1321:31">ist</name><operator pos:start="1321:32" pos:end="1321:33">-&gt;</operator><name pos:start="1321:34" pos:end="1321:43">file_index</name></name></expr>]</index></name><operator pos:start="1321:45" pos:end="1321:45">.</operator><name pos:start="1321:46" pos:end="1321:56">eof_reached</name></expr>)</condition><block pos:start="1321:58" pos:end="1339:13">{<block_content pos:start="1323:17" pos:end="1337:17">

                <if_stmt pos:start="1323:17" pos:end="1329:17"><if pos:start="1323:17" pos:end="1329:17">if<condition pos:start="1323:19" pos:end="1323:35">(<expr pos:start="1323:20" pos:end="1323:34"><name pos:start="1323:20" pos:end="1323:23">ipts</name> <operator pos:start="1323:25" pos:end="1323:25">&lt;</operator> <name pos:start="1323:27" pos:end="1323:34">ipts_min</name></expr>)</condition> <block pos:start="1323:37" pos:end="1329:17">{<block_content pos:start="1325:21" pos:end="1327:65">

                    <expr_stmt pos:start="1325:21" pos:end="1325:36"><expr pos:start="1325:21" pos:end="1325:35"><name pos:start="1325:21" pos:end="1325:28">ipts_min</name> <operator pos:start="1325:30" pos:end="1325:30">=</operator> <name pos:start="1325:32" pos:end="1325:35">ipts</name></expr>;</expr_stmt>

                    <if_stmt pos:start="1327:21" pos:end="1327:65"><if pos:start="1327:21" pos:end="1327:65">if<condition pos:start="1327:23" pos:end="1327:35">(<expr pos:start="1327:24" pos:end="1327:33"><name pos:start="1327:24" pos:end="1327:33">input_sync</name></expr> )</condition><block type="pseudo" pos:start="1327:37" pos:end="1327:65"><block_content pos:start="1327:37" pos:end="1327:65"> <expr_stmt pos:start="1327:37" pos:end="1327:65"><expr pos:start="1327:37" pos:end="1327:64"><name pos:start="1327:37" pos:end="1327:46">file_index</name> <operator pos:start="1327:48" pos:end="1327:48">=</operator> <name pos:start="1327:50" pos:end="1327:64"><name pos:start="1327:50" pos:end="1327:52">ist</name><operator pos:start="1327:53" pos:end="1327:54">-&gt;</operator><name pos:start="1327:55" pos:end="1327:64">file_index</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="1331:17" pos:end="1337:17"><if pos:start="1331:17" pos:end="1337:17">if<condition pos:start="1331:19" pos:end="1331:35">(<expr pos:start="1331:20" pos:end="1331:34"><name pos:start="1331:20" pos:end="1331:23">opts</name> <operator pos:start="1331:25" pos:end="1331:25">&lt;</operator> <name pos:start="1331:27" pos:end="1331:34">opts_min</name></expr>)</condition> <block pos:start="1331:37" pos:end="1337:17">{<block_content pos:start="1333:21" pos:end="1335:65">

                    <expr_stmt pos:start="1333:21" pos:end="1333:36"><expr pos:start="1333:21" pos:end="1333:35"><name pos:start="1333:21" pos:end="1333:28">opts_min</name> <operator pos:start="1333:30" pos:end="1333:30">=</operator> <name pos:start="1333:32" pos:end="1333:35">opts</name></expr>;</expr_stmt>

                    <if_stmt pos:start="1335:21" pos:end="1335:65"><if pos:start="1335:21" pos:end="1335:65">if<condition pos:start="1335:23" pos:end="1335:35">(<expr pos:start="1335:24" pos:end="1335:34"><operator pos:start="1335:24" pos:end="1335:24">!</operator><name pos:start="1335:25" pos:end="1335:34">input_sync</name></expr>)</condition><block type="pseudo" pos:start="1335:37" pos:end="1335:65"><block_content pos:start="1335:37" pos:end="1335:65"> <expr_stmt pos:start="1335:37" pos:end="1335:65"><expr pos:start="1335:37" pos:end="1335:64"><name pos:start="1335:37" pos:end="1335:46">file_index</name> <operator pos:start="1335:48" pos:end="1335:48">=</operator> <name pos:start="1335:50" pos:end="1335:64"><name pos:start="1335:50" pos:end="1335:52">ist</name><operator pos:start="1335:53" pos:end="1335:54">-&gt;</operator><name pos:start="1335:55" pos:end="1335:64">file_index</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="1341:13" pos:end="1347:13"><if pos:start="1341:13" pos:end="1347:13">if<condition pos:start="1341:15" pos:end="1341:75">(<expr pos:start="1341:16" pos:end="1341:74"><name pos:start="1341:16" pos:end="1341:32"><name pos:start="1341:16" pos:end="1341:18">ost</name><operator pos:start="1341:19" pos:end="1341:20">-&gt;</operator><name pos:start="1341:21" pos:end="1341:32">frame_number</name></name> <operator pos:start="1341:34" pos:end="1341:35">&gt;=</operator> <name pos:start="1341:37" pos:end="1341:74"><name pos:start="1341:37" pos:end="1341:46">max_frames</name><index pos:start="1341:47" pos:end="1341:74">[<expr pos:start="1341:48" pos:end="1341:73"><name pos:start="1341:48" pos:end="1341:73"><name pos:start="1341:48" pos:end="1341:50">ost</name><operator pos:start="1341:51" pos:end="1341:52">-&gt;</operator><name pos:start="1341:53" pos:end="1341:54">st</name><operator pos:start="1341:55" pos:end="1341:56">-&gt;</operator><name pos:start="1341:57" pos:end="1341:61">codec</name><operator pos:start="1341:62" pos:end="1341:63">-&gt;</operator><name pos:start="1341:64" pos:end="1341:73">codec_type</name></name></expr>]</index></name></expr>)</condition><block pos:start="1341:76" pos:end="1347:13">{<block_content pos:start="1343:17" pos:end="1345:22">

                <expr_stmt pos:start="1343:17" pos:end="1343:31"><expr pos:start="1343:17" pos:end="1343:30"><name pos:start="1343:17" pos:end="1343:26">file_index</name><operator pos:start="1343:27" pos:end="1343:27">=</operator> <operator pos:start="1343:29" pos:end="1343:29">-</operator><literal type="number" pos:start="1343:30" pos:end="1343:30">1</literal></expr>;</expr_stmt>

                <break pos:start="1345:17" pos:end="1345:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="1351:9" pos:end="1351:37">/* if none, if is finished */</comment>

        <if_stmt pos:start="1353:9" pos:end="1369:9"><if pos:start="1353:9" pos:end="1369:9">if <condition pos:start="1353:12" pos:end="1353:27">(<expr pos:start="1353:13" pos:end="1353:26"><name pos:start="1353:13" pos:end="1353:22">file_index</name> <operator pos:start="1353:24" pos:end="1353:24">&lt;</operator> <literal type="number" pos:start="1353:26" pos:end="1353:26">0</literal></expr>)</condition> <block pos:start="1353:29" pos:end="1369:9">{<block_content pos:start="1355:13" pos:end="1367:18">

            <if_stmt pos:start="1355:13" pos:end="1365:13"><if pos:start="1355:13" pos:end="1365:13">if<condition pos:start="1355:15" pos:end="1355:31">(<expr pos:start="1355:16" pos:end="1355:30"><name pos:start="1355:16" pos:end="1355:30">no_packet_count</name></expr>)</condition><block pos:start="1355:32" pos:end="1365:13">{<block_content pos:start="1357:17" pos:end="1363:25">

                <expr_stmt pos:start="1357:17" pos:end="1357:34"><expr pos:start="1357:17" pos:end="1357:33"><name pos:start="1357:17" pos:end="1357:31">no_packet_count</name><operator pos:start="1357:32" pos:end="1357:32">=</operator><literal type="number" pos:start="1357:33" pos:end="1357:33">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1359:17" pos:end="1359:56"><expr pos:start="1359:17" pos:end="1359:55"><call pos:start="1359:17" pos:end="1359:55"><name pos:start="1359:17" pos:end="1359:22">memset</name><argument_list pos:start="1359:23" pos:end="1359:55">(<argument pos:start="1359:24" pos:end="1359:32"><expr pos:start="1359:24" pos:end="1359:32"><name pos:start="1359:24" pos:end="1359:32">no_packet</name></expr></argument>, <argument pos:start="1359:35" pos:end="1359:35"><expr pos:start="1359:35" pos:end="1359:35"><literal type="number" pos:start="1359:35" pos:end="1359:35">0</literal></expr></argument>, <argument pos:start="1359:38" pos:end="1359:54"><expr pos:start="1359:38" pos:end="1359:54"><sizeof pos:start="1359:38" pos:end="1359:54">sizeof<argument_list pos:start="1359:44" pos:end="1359:54">(<argument pos:start="1359:45" pos:end="1359:53"><expr pos:start="1359:45" pos:end="1359:53"><name pos:start="1359:45" pos:end="1359:53">no_packet</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1361:17" pos:end="1361:30"><expr pos:start="1361:17" pos:end="1361:29"><call pos:start="1361:17" pos:end="1361:29"><name pos:start="1361:17" pos:end="1361:22">usleep</name><argument_list pos:start="1361:23" pos:end="1361:29">(<argument pos:start="1361:24" pos:end="1361:28"><expr pos:start="1361:24" pos:end="1361:28"><literal type="number" pos:start="1361:24" pos:end="1361:28">10000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="1363:17" pos:end="1363:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1367:13" pos:end="1367:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="1373:9" pos:end="1373:44">/* finish if limit size exhausted */</comment>

        <if_stmt pos:start="1375:9" pos:end="1377:18"><if pos:start="1375:9" pos:end="1377:18">if <condition pos:start="1375:12" pos:end="1375:84">(<expr pos:start="1375:13" pos:end="1375:83"><name pos:start="1375:13" pos:end="1375:26">limit_filesize</name> <operator pos:start="1375:28" pos:end="1375:29">!=</operator> <literal type="number" pos:start="1375:31" pos:end="1375:31">0</literal> <operator pos:start="1375:33" pos:end="1375:34">&amp;&amp;</operator> <name pos:start="1375:36" pos:end="1375:49">limit_filesize</name> <operator pos:start="1375:51" pos:end="1375:52">&lt;=</operator> <call pos:start="1375:54" pos:end="1375:83"><name pos:start="1375:54" pos:end="1375:62">avio_tell</name><argument_list pos:start="1375:63" pos:end="1375:83">(<argument pos:start="1375:64" pos:end="1375:82"><expr pos:start="1375:64" pos:end="1375:82"><name pos:start="1375:64" pos:end="1375:78"><name pos:start="1375:64" pos:end="1375:75">output_files</name><index pos:start="1375:76" pos:end="1375:78">[<expr pos:start="1375:77" pos:end="1375:77"><literal type="number" pos:start="1375:77" pos:end="1375:77">0</literal></expr>]</index></name><operator pos:start="1375:79" pos:end="1375:80">-&gt;</operator><name pos:start="1375:81" pos:end="1375:82">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1377:13" pos:end="1377:18"><block_content pos:start="1377:13" pos:end="1377:18">

            <break pos:start="1377:13" pos:end="1377:18">break;</break></block_content></block></if></if_stmt>



        <comment type="block" pos:start="1381:9" pos:end="1381:60">/* read a frame from it and output it in the fifo */</comment>

        <expr_stmt pos:start="1383:9" pos:end="1383:37"><expr pos:start="1383:9" pos:end="1383:36"><name pos:start="1383:9" pos:end="1383:10">is</name> <operator pos:start="1383:12" pos:end="1383:12">=</operator> <name pos:start="1383:14" pos:end="1383:36"><name pos:start="1383:14" pos:end="1383:24">input_files</name><index pos:start="1383:25" pos:end="1383:36">[<expr pos:start="1383:26" pos:end="1383:35"><name pos:start="1383:26" pos:end="1383:35">file_index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1385:9" pos:end="1385:37"><expr pos:start="1385:9" pos:end="1385:36"><name pos:start="1385:9" pos:end="1385:11">ret</name><operator pos:start="1385:12" pos:end="1385:12">=</operator> <call pos:start="1385:14" pos:end="1385:36"><name pos:start="1385:14" pos:end="1385:26">av_read_frame</name><argument_list pos:start="1385:27" pos:end="1385:36">(<argument pos:start="1385:28" pos:end="1385:29"><expr pos:start="1385:28" pos:end="1385:29"><name pos:start="1385:28" pos:end="1385:29">is</name></expr></argument>, <argument pos:start="1385:32" pos:end="1385:35"><expr pos:start="1385:32" pos:end="1385:35"><operator pos:start="1385:32" pos:end="1385:32">&amp;</operator><name pos:start="1385:33" pos:end="1385:35">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1387:9" pos:end="1395:9"><if pos:start="1387:9" pos:end="1395:9">if<condition pos:start="1387:11" pos:end="1387:34">(<expr pos:start="1387:12" pos:end="1387:33"><name pos:start="1387:12" pos:end="1387:14">ret</name> <operator pos:start="1387:16" pos:end="1387:17">==</operator> <call pos:start="1387:19" pos:end="1387:33"><name pos:start="1387:19" pos:end="1387:25">AVERROR</name><argument_list pos:start="1387:26" pos:end="1387:33">(<argument pos:start="1387:27" pos:end="1387:32"><expr pos:start="1387:27" pos:end="1387:32"><name pos:start="1387:27" pos:end="1387:32">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="1387:35" pos:end="1395:9">{<block_content pos:start="1389:13" pos:end="1393:21">

            <expr_stmt pos:start="1389:13" pos:end="1389:36"><expr pos:start="1389:13" pos:end="1389:35"><name pos:start="1389:13" pos:end="1389:33"><name pos:start="1389:13" pos:end="1389:21">no_packet</name><index pos:start="1389:22" pos:end="1389:33">[<expr pos:start="1389:23" pos:end="1389:32"><name pos:start="1389:23" pos:end="1389:32">file_index</name></expr>]</index></name><operator pos:start="1389:34" pos:end="1389:34">=</operator><literal type="number" pos:start="1389:35" pos:end="1389:35">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="1391:13" pos:end="1391:30"><expr pos:start="1391:13" pos:end="1391:29"><name pos:start="1391:13" pos:end="1391:27">no_packet_count</name><operator pos:start="1391:28" pos:end="1391:29">++</operator></expr>;</expr_stmt>

            <continue pos:start="1393:13" pos:end="1393:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="1397:9" pos:end="1409:9"><if pos:start="1397:9" pos:end="1409:9">if <condition pos:start="1397:12" pos:end="1397:20">(<expr pos:start="1397:13" pos:end="1397:19"><name pos:start="1397:13" pos:end="1397:15">ret</name> <operator pos:start="1397:17" pos:end="1397:17">&lt;</operator> <literal type="number" pos:start="1397:19" pos:end="1397:19">0</literal></expr>)</condition> <block pos:start="1397:22" pos:end="1409:9">{<block_content pos:start="1399:13" pos:end="1407:25">

            <expr_stmt pos:start="1399:13" pos:end="1399:51"><expr pos:start="1399:13" pos:end="1399:50"><name pos:start="1399:13" pos:end="1399:34"><name pos:start="1399:13" pos:end="1399:22">file_table</name><index pos:start="1399:23" pos:end="1399:34">[<expr pos:start="1399:24" pos:end="1399:33"><name pos:start="1399:24" pos:end="1399:33">file_index</name></expr>]</index></name><operator pos:start="1399:35" pos:end="1399:35">.</operator><name pos:start="1399:36" pos:end="1399:46">eof_reached</name> <operator pos:start="1399:48" pos:end="1399:48">=</operator> <literal type="number" pos:start="1399:50" pos:end="1399:50">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1401:13" pos:end="1407:25"><if pos:start="1401:13" pos:end="1403:22">if <condition pos:start="1401:16" pos:end="1401:29">(<expr pos:start="1401:17" pos:end="1401:28"><name pos:start="1401:17" pos:end="1401:28">opt_shortest</name></expr>)</condition><block type="pseudo" pos:start="1403:17" pos:end="1403:22"><block_content pos:start="1403:17" pos:end="1403:22">

                <break pos:start="1403:17" pos:end="1403:22">break;</break></block_content></block></if>

            <else pos:start="1405:13" pos:end="1407:25">else<block type="pseudo" pos:start="1407:17" pos:end="1407:25"><block_content pos:start="1407:17" pos:end="1407:25">

                <continue pos:start="1407:17" pos:end="1407:25">continue;</continue></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="1413:9" pos:end="1413:26"><expr pos:start="1413:9" pos:end="1413:25"><name pos:start="1413:9" pos:end="1413:23">no_packet_count</name><operator pos:start="1413:24" pos:end="1413:24">=</operator><literal type="number" pos:start="1413:25" pos:end="1413:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1415:9" pos:end="1415:48"><expr pos:start="1415:9" pos:end="1415:47"><call pos:start="1415:9" pos:end="1415:47"><name pos:start="1415:9" pos:end="1415:14">memset</name><argument_list pos:start="1415:15" pos:end="1415:47">(<argument pos:start="1415:16" pos:end="1415:24"><expr pos:start="1415:16" pos:end="1415:24"><name pos:start="1415:16" pos:end="1415:24">no_packet</name></expr></argument>, <argument pos:start="1415:27" pos:end="1415:27"><expr pos:start="1415:27" pos:end="1415:27"><literal type="number" pos:start="1415:27" pos:end="1415:27">0</literal></expr></argument>, <argument pos:start="1415:30" pos:end="1415:46"><expr pos:start="1415:30" pos:end="1415:46"><sizeof pos:start="1415:30" pos:end="1415:46">sizeof<argument_list pos:start="1415:36" pos:end="1415:46">(<argument pos:start="1415:37" pos:end="1415:45"><expr pos:start="1415:37" pos:end="1415:45"><name pos:start="1415:37" pos:end="1415:45">no_packet</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="1419:9" pos:end="1425:9"><if pos:start="1419:9" pos:end="1425:9">if <condition pos:start="1419:12" pos:end="1419:24">(<expr pos:start="1419:13" pos:end="1419:23"><name pos:start="1419:13" pos:end="1419:23">do_pkt_dump</name></expr>)</condition> <block pos:start="1419:26" pos:end="1425:9">{<block_content pos:start="1421:13" pos:end="1423:60">

            <expr_stmt pos:start="1421:13" pos:end="1423:60"><expr pos:start="1421:13" pos:end="1423:59"><call pos:start="1421:13" pos:end="1423:59"><name pos:start="1421:13" pos:end="1421:28">av_pkt_dump_log2</name><argument_list pos:start="1421:29" pos:end="1423:59">(<argument pos:start="1421:30" pos:end="1421:33"><expr pos:start="1421:30" pos:end="1421:33"><name pos:start="1421:30" pos:end="1421:33">NULL</name></expr></argument>, <argument pos:start="1421:36" pos:end="1421:47"><expr pos:start="1421:36" pos:end="1421:47"><name pos:start="1421:36" pos:end="1421:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="1421:50" pos:end="1421:53"><expr pos:start="1421:50" pos:end="1421:53"><operator pos:start="1421:50" pos:end="1421:50">&amp;</operator><name pos:start="1421:51" pos:end="1421:53">pkt</name></expr></argument>, <argument pos:start="1421:56" pos:end="1421:66"><expr pos:start="1421:56" pos:end="1421:66"><name pos:start="1421:56" pos:end="1421:66">do_hex_dump</name></expr></argument>,

                             <argument pos:start="1423:30" pos:end="1423:58"><expr pos:start="1423:30" pos:end="1423:58"><name pos:start="1423:30" pos:end="1423:58"><name pos:start="1423:30" pos:end="1423:31">is</name><operator pos:start="1423:32" pos:end="1423:33">-&gt;</operator><name pos:start="1423:34" pos:end="1423:40">streams</name><index pos:start="1423:41" pos:end="1423:58">[<expr pos:start="1423:42" pos:end="1423:57"><name pos:start="1423:42" pos:end="1423:57"><name pos:start="1423:42" pos:end="1423:44">pkt</name><operator pos:start="1423:45" pos:end="1423:45">.</operator><name pos:start="1423:46" pos:end="1423:57">stream_index</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="1427:9" pos:end="1429:52">/* the following test is needed in case new streams appear

           dynamically in stream : we ignore them */</comment>

        <if_stmt pos:start="1431:9" pos:end="1433:32"><if pos:start="1431:9" pos:end="1433:32">if <condition pos:start="1431:12" pos:end="1431:66">(<expr pos:start="1431:13" pos:end="1431:65"><name pos:start="1431:13" pos:end="1431:28"><name pos:start="1431:13" pos:end="1431:15">pkt</name><operator pos:start="1431:16" pos:end="1431:16">.</operator><name pos:start="1431:17" pos:end="1431:28">stream_index</name></name> <operator pos:start="1431:30" pos:end="1431:31">&gt;=</operator> <name pos:start="1431:33" pos:end="1431:54"><name pos:start="1431:33" pos:end="1431:42">file_table</name><index pos:start="1431:43" pos:end="1431:54">[<expr pos:start="1431:44" pos:end="1431:53"><name pos:start="1431:44" pos:end="1431:53">file_index</name></expr>]</index></name><operator pos:start="1431:55" pos:end="1431:55">.</operator><name pos:start="1431:56" pos:end="1431:65">nb_streams</name></expr>)</condition><block type="pseudo" pos:start="1433:13" pos:end="1433:32"><block_content pos:start="1433:13" pos:end="1433:32">

            <goto pos:start="1433:13" pos:end="1433:32">goto <name pos:start="1433:18" pos:end="1433:31">discard_packet</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1435:9" pos:end="1435:72"><expr pos:start="1435:9" pos:end="1435:71"><name pos:start="1435:9" pos:end="1435:17">ist_index</name> <operator pos:start="1435:19" pos:end="1435:19">=</operator> <name pos:start="1435:21" pos:end="1435:42"><name pos:start="1435:21" pos:end="1435:30">file_table</name><index pos:start="1435:31" pos:end="1435:42">[<expr pos:start="1435:32" pos:end="1435:41"><name pos:start="1435:32" pos:end="1435:41">file_index</name></expr>]</index></name><operator pos:start="1435:43" pos:end="1435:43">.</operator><name pos:start="1435:44" pos:end="1435:52">ist_index</name> <operator pos:start="1435:54" pos:end="1435:54">+</operator> <name pos:start="1435:56" pos:end="1435:71"><name pos:start="1435:56" pos:end="1435:58">pkt</name><operator pos:start="1435:59" pos:end="1435:59">.</operator><name pos:start="1435:60" pos:end="1435:71">stream_index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1437:9" pos:end="1437:35"><expr pos:start="1437:9" pos:end="1437:34"><name pos:start="1437:9" pos:end="1437:11">ist</name> <operator pos:start="1437:13" pos:end="1437:13">=</operator> <name pos:start="1437:15" pos:end="1437:34"><name pos:start="1437:15" pos:end="1437:23">ist_table</name><index pos:start="1437:24" pos:end="1437:34">[<expr pos:start="1437:25" pos:end="1437:33"><name pos:start="1437:25" pos:end="1437:33">ist_index</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1439:9" pos:end="1441:32"><if pos:start="1439:9" pos:end="1441:32">if <condition pos:start="1439:12" pos:end="1439:25">(<expr pos:start="1439:13" pos:end="1439:24"><name pos:start="1439:13" pos:end="1439:24"><name pos:start="1439:13" pos:end="1439:15">ist</name><operator pos:start="1439:16" pos:end="1439:17">-&gt;</operator><name pos:start="1439:18" pos:end="1439:24">discard</name></name></expr>)</condition><block type="pseudo" pos:start="1441:13" pos:end="1441:32"><block_content pos:start="1441:13" pos:end="1441:32">

            <goto pos:start="1441:13" pos:end="1441:32">goto <name pos:start="1441:18" pos:end="1441:31">discard_packet</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="1445:9" pos:end="1447:112"><if pos:start="1445:9" pos:end="1447:112">if <condition pos:start="1445:12" pos:end="1445:38">(<expr pos:start="1445:13" pos:end="1445:37"><name pos:start="1445:13" pos:end="1445:19"><name pos:start="1445:13" pos:end="1445:15">pkt</name><operator pos:start="1445:16" pos:end="1445:16">.</operator><name pos:start="1445:17" pos:end="1445:19">dts</name></name> <operator pos:start="1445:21" pos:end="1445:22">!=</operator> <name pos:start="1445:24" pos:end="1445:37">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1447:13" pos:end="1447:112"><block_content pos:start="1447:13" pos:end="1447:112">

            <expr_stmt pos:start="1447:13" pos:end="1447:112"><expr pos:start="1447:13" pos:end="1447:111"><name pos:start="1447:13" pos:end="1447:19"><name pos:start="1447:13" pos:end="1447:15">pkt</name><operator pos:start="1447:16" pos:end="1447:16">.</operator><name pos:start="1447:17" pos:end="1447:19">dts</name></name> <operator pos:start="1447:21" pos:end="1447:22">+=</operator> <call pos:start="1447:24" pos:end="1447:111"><name pos:start="1447:24" pos:end="1447:35">av_rescale_q</name><argument_list pos:start="1447:36" pos:end="1447:111">(<argument pos:start="1447:37" pos:end="1447:74"><expr pos:start="1447:37" pos:end="1447:74"><name pos:start="1447:37" pos:end="1447:74"><name pos:start="1447:37" pos:end="1447:57">input_files_ts_offset</name><index pos:start="1447:58" pos:end="1447:74">[<expr pos:start="1447:59" pos:end="1447:73"><name pos:start="1447:59" pos:end="1447:73"><name pos:start="1447:59" pos:end="1447:61">ist</name><operator pos:start="1447:62" pos:end="1447:63">-&gt;</operator><name pos:start="1447:64" pos:end="1447:73">file_index</name></name></expr>]</index></name></expr></argument>, <argument pos:start="1447:77" pos:end="1447:90"><expr pos:start="1447:77" pos:end="1447:90"><name pos:start="1447:77" pos:end="1447:90">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1447:93" pos:end="1447:110"><expr pos:start="1447:93" pos:end="1447:110"><name pos:start="1447:93" pos:end="1447:110"><name pos:start="1447:93" pos:end="1447:95">ist</name><operator pos:start="1447:96" pos:end="1447:97">-&gt;</operator><name pos:start="1447:98" pos:end="1447:99">st</name><operator pos:start="1447:100" pos:end="1447:101">-&gt;</operator><name pos:start="1447:102" pos:end="1447:110">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="1449:9" pos:end="1451:112"><if pos:start="1449:9" pos:end="1451:112">if <condition pos:start="1449:12" pos:end="1449:38">(<expr pos:start="1449:13" pos:end="1449:37"><name pos:start="1449:13" pos:end="1449:19"><name pos:start="1449:13" pos:end="1449:15">pkt</name><operator pos:start="1449:16" pos:end="1449:16">.</operator><name pos:start="1449:17" pos:end="1449:19">pts</name></name> <operator pos:start="1449:21" pos:end="1449:22">!=</operator> <name pos:start="1449:24" pos:end="1449:37">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1451:13" pos:end="1451:112"><block_content pos:start="1451:13" pos:end="1451:112">

            <expr_stmt pos:start="1451:13" pos:end="1451:112"><expr pos:start="1451:13" pos:end="1451:111"><name pos:start="1451:13" pos:end="1451:19"><name pos:start="1451:13" pos:end="1451:15">pkt</name><operator pos:start="1451:16" pos:end="1451:16">.</operator><name pos:start="1451:17" pos:end="1451:19">pts</name></name> <operator pos:start="1451:21" pos:end="1451:22">+=</operator> <call pos:start="1451:24" pos:end="1451:111"><name pos:start="1451:24" pos:end="1451:35">av_rescale_q</name><argument_list pos:start="1451:36" pos:end="1451:111">(<argument pos:start="1451:37" pos:end="1451:74"><expr pos:start="1451:37" pos:end="1451:74"><name pos:start="1451:37" pos:end="1451:74"><name pos:start="1451:37" pos:end="1451:57">input_files_ts_offset</name><index pos:start="1451:58" pos:end="1451:74">[<expr pos:start="1451:59" pos:end="1451:73"><name pos:start="1451:59" pos:end="1451:73"><name pos:start="1451:59" pos:end="1451:61">ist</name><operator pos:start="1451:62" pos:end="1451:63">-&gt;</operator><name pos:start="1451:64" pos:end="1451:73">file_index</name></name></expr>]</index></name></expr></argument>, <argument pos:start="1451:77" pos:end="1451:90"><expr pos:start="1451:77" pos:end="1451:90"><name pos:start="1451:77" pos:end="1451:90">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1451:93" pos:end="1451:110"><expr pos:start="1451:93" pos:end="1451:110"><name pos:start="1451:93" pos:end="1451:110"><name pos:start="1451:93" pos:end="1451:95">ist</name><operator pos:start="1451:96" pos:end="1451:97">-&gt;</operator><name pos:start="1451:98" pos:end="1451:99">st</name><operator pos:start="1451:100" pos:end="1451:101">-&gt;</operator><name pos:start="1451:102" pos:end="1451:110">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="1455:9" pos:end="1467:9"><if pos:start="1455:9" pos:end="1467:9">if <condition pos:start="1455:12" pos:end="1457:66">(<expr pos:start="1455:13" pos:end="1457:65"><name pos:start="1455:13" pos:end="1455:28"><name pos:start="1455:13" pos:end="1455:15">pkt</name><operator pos:start="1455:16" pos:end="1455:16">.</operator><name pos:start="1455:17" pos:end="1455:28">stream_index</name></name> <operator pos:start="1455:30" pos:end="1455:30">&lt;</operator> <name pos:start="1455:32" pos:end="1455:66"><name pos:start="1455:32" pos:end="1455:54">nb_input_files_ts_scale</name><index pos:start="1455:55" pos:end="1455:66">[<expr pos:start="1455:56" pos:end="1455:65"><name pos:start="1455:56" pos:end="1455:65">file_index</name></expr>]</index></name>

            <operator pos:start="1457:13" pos:end="1457:14">&amp;&amp;</operator> <name pos:start="1457:16" pos:end="1457:65"><name pos:start="1457:16" pos:end="1457:35">input_files_ts_scale</name><index pos:start="1457:36" pos:end="1457:47">[<expr pos:start="1457:37" pos:end="1457:46"><name pos:start="1457:37" pos:end="1457:46">file_index</name></expr>]</index><index pos:start="1457:48" pos:end="1457:65">[<expr pos:start="1457:49" pos:end="1457:64"><name pos:start="1457:49" pos:end="1457:64"><name pos:start="1457:49" pos:end="1457:51">pkt</name><operator pos:start="1457:52" pos:end="1457:52">.</operator><name pos:start="1457:53" pos:end="1457:64">stream_index</name></name></expr>]</index></name></expr>)</condition><block pos:start="1457:67" pos:end="1467:9">{<block_content pos:start="1459:13" pos:end="1465:78">

            <if_stmt pos:start="1459:13" pos:end="1461:78"><if pos:start="1459:13" pos:end="1461:78">if<condition pos:start="1459:15" pos:end="1459:41">(<expr pos:start="1459:16" pos:end="1459:40"><name pos:start="1459:16" pos:end="1459:22"><name pos:start="1459:16" pos:end="1459:18">pkt</name><operator pos:start="1459:19" pos:end="1459:19">.</operator><name pos:start="1459:20" pos:end="1459:22">pts</name></name> <operator pos:start="1459:24" pos:end="1459:25">!=</operator> <name pos:start="1459:27" pos:end="1459:40">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1461:17" pos:end="1461:78"><block_content pos:start="1461:17" pos:end="1461:78">

                <expr_stmt pos:start="1461:17" pos:end="1461:78"><expr pos:start="1461:17" pos:end="1461:77"><name pos:start="1461:17" pos:end="1461:23"><name pos:start="1461:17" pos:end="1461:19">pkt</name><operator pos:start="1461:20" pos:end="1461:20">.</operator><name pos:start="1461:21" pos:end="1461:23">pts</name></name> <operator pos:start="1461:25" pos:end="1461:26">*=</operator> <name pos:start="1461:28" pos:end="1461:77"><name pos:start="1461:28" pos:end="1461:47">input_files_ts_scale</name><index pos:start="1461:48" pos:end="1461:59">[<expr pos:start="1461:49" pos:end="1461:58"><name pos:start="1461:49" pos:end="1461:58">file_index</name></expr>]</index><index pos:start="1461:60" pos:end="1461:77">[<expr pos:start="1461:61" pos:end="1461:76"><name pos:start="1461:61" pos:end="1461:76"><name pos:start="1461:61" pos:end="1461:63">pkt</name><operator pos:start="1461:64" pos:end="1461:64">.</operator><name pos:start="1461:65" pos:end="1461:76">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="1463:13" pos:end="1465:78"><if pos:start="1463:13" pos:end="1465:78">if<condition pos:start="1463:15" pos:end="1463:41">(<expr pos:start="1463:16" pos:end="1463:40"><name pos:start="1463:16" pos:end="1463:22"><name pos:start="1463:16" pos:end="1463:18">pkt</name><operator pos:start="1463:19" pos:end="1463:19">.</operator><name pos:start="1463:20" pos:end="1463:22">dts</name></name> <operator pos:start="1463:24" pos:end="1463:25">!=</operator> <name pos:start="1463:27" pos:end="1463:40">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1465:17" pos:end="1465:78"><block_content pos:start="1465:17" pos:end="1465:78">

                <expr_stmt pos:start="1465:17" pos:end="1465:78"><expr pos:start="1465:17" pos:end="1465:77"><name pos:start="1465:17" pos:end="1465:23"><name pos:start="1465:17" pos:end="1465:19">pkt</name><operator pos:start="1465:20" pos:end="1465:20">.</operator><name pos:start="1465:21" pos:end="1465:23">dts</name></name> <operator pos:start="1465:25" pos:end="1465:26">*=</operator> <name pos:start="1465:28" pos:end="1465:77"><name pos:start="1465:28" pos:end="1465:47">input_files_ts_scale</name><index pos:start="1465:48" pos:end="1465:59">[<expr pos:start="1465:49" pos:end="1465:58"><name pos:start="1465:49" pos:end="1465:58">file_index</name></expr>]</index><index pos:start="1465:60" pos:end="1465:77">[<expr pos:start="1465:61" pos:end="1465:76"><name pos:start="1465:61" pos:end="1465:76"><name pos:start="1465:61" pos:end="1465:63">pkt</name><operator pos:start="1465:64" pos:end="1465:64">.</operator><name pos:start="1465:65" pos:end="1465:76">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



<comment type="line" pos:start="1471:1" pos:end="1471:169">//        fprintf(stderr, "next:%"PRId64" dts:%"PRId64" off:%"PRId64" %d\n", ist-&gt;next_pts, pkt.dts, input_files_ts_offset[ist-&gt;file_index], ist-&gt;st-&gt;codec-&gt;codec_type);</comment>

        <if_stmt pos:start="1473:9" pos:end="1497:9"><if pos:start="1473:9" pos:end="1497:9">if <condition pos:start="1473:12" pos:end="1475:55">(<expr pos:start="1473:13" pos:end="1475:54"><name pos:start="1473:13" pos:end="1473:19"><name pos:start="1473:13" pos:end="1473:15">pkt</name><operator pos:start="1473:16" pos:end="1473:16">.</operator><name pos:start="1473:17" pos:end="1473:19">dts</name></name> <operator pos:start="1473:21" pos:end="1473:22">!=</operator> <name pos:start="1473:24" pos:end="1473:37">AV_NOPTS_VALUE</name> <operator pos:start="1473:39" pos:end="1473:40">&amp;&amp;</operator> <name pos:start="1473:42" pos:end="1473:54"><name pos:start="1473:42" pos:end="1473:44">ist</name><operator pos:start="1473:45" pos:end="1473:46">-&gt;</operator><name pos:start="1473:47" pos:end="1473:54">next_pts</name></name> <operator pos:start="1473:56" pos:end="1473:57">!=</operator> <name pos:start="1473:59" pos:end="1473:72">AV_NOPTS_VALUE</name>

            <operator pos:start="1475:13" pos:end="1475:14">&amp;&amp;</operator> <operator pos:start="1475:16" pos:end="1475:16">(</operator><name pos:start="1475:17" pos:end="1475:34"><name pos:start="1475:17" pos:end="1475:18">is</name><operator pos:start="1475:19" pos:end="1475:20">-&gt;</operator><name pos:start="1475:21" pos:end="1475:27">iformat</name><operator pos:start="1475:28" pos:end="1475:29">-&gt;</operator><name pos:start="1475:30" pos:end="1475:34">flags</name></name> <operator pos:start="1475:36" pos:end="1475:36">&amp;</operator> <name pos:start="1475:38" pos:end="1475:53">AVFMT_TS_DISCONT</name><operator pos:start="1475:54" pos:end="1475:54">)</operator></expr>)</condition> <block pos:start="1475:57" pos:end="1497:9">{<block_content pos:start="1477:13" pos:end="1495:13">

            <decl_stmt pos:start="1477:13" pos:end="1477:87"><decl pos:start="1477:13" pos:end="1477:86"><type pos:start="1477:13" pos:end="1477:19"><name pos:start="1477:13" pos:end="1477:19">int64_t</name></type> <name pos:start="1477:21" pos:end="1477:27">pkt_dts</name><init pos:start="1477:28" pos:end="1477:86">= <expr pos:start="1477:30" pos:end="1477:86"><call pos:start="1477:30" pos:end="1477:86"><name pos:start="1477:30" pos:end="1477:41">av_rescale_q</name><argument_list pos:start="1477:42" pos:end="1477:86">(<argument pos:start="1477:43" pos:end="1477:49"><expr pos:start="1477:43" pos:end="1477:49"><name pos:start="1477:43" pos:end="1477:49"><name pos:start="1477:43" pos:end="1477:45">pkt</name><operator pos:start="1477:46" pos:end="1477:46">.</operator><name pos:start="1477:47" pos:end="1477:49">dts</name></name></expr></argument>, <argument pos:start="1477:52" pos:end="1477:69"><expr pos:start="1477:52" pos:end="1477:69"><name pos:start="1477:52" pos:end="1477:69"><name pos:start="1477:52" pos:end="1477:54">ist</name><operator pos:start="1477:55" pos:end="1477:56">-&gt;</operator><name pos:start="1477:57" pos:end="1477:58">st</name><operator pos:start="1477:59" pos:end="1477:60">-&gt;</operator><name pos:start="1477:61" pos:end="1477:69">time_base</name></name></expr></argument>, <argument pos:start="1477:72" pos:end="1477:85"><expr pos:start="1477:72" pos:end="1477:85"><name pos:start="1477:72" pos:end="1477:85">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1479:13" pos:end="1479:51"><decl pos:start="1479:13" pos:end="1479:50"><type pos:start="1479:13" pos:end="1479:19"><name pos:start="1479:13" pos:end="1479:19">int64_t</name></type> <name pos:start="1479:21" pos:end="1479:25">delta</name><init pos:start="1479:26" pos:end="1479:50">= <expr pos:start="1479:28" pos:end="1479:50"><name pos:start="1479:28" pos:end="1479:34">pkt_dts</name> <operator pos:start="1479:36" pos:end="1479:36">-</operator> <name pos:start="1479:38" pos:end="1479:50"><name pos:start="1479:38" pos:end="1479:40">ist</name><operator pos:start="1479:41" pos:end="1479:42">-&gt;</operator><name pos:start="1479:43" pos:end="1479:50">next_pts</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="1481:13" pos:end="1495:13"><if pos:start="1481:13" pos:end="1495:13">if<condition pos:start="1481:15" pos:end="1481:102">(<expr pos:start="1481:16" pos:end="1481:101"><operator pos:start="1481:16" pos:end="1481:16">(</operator><call pos:start="1481:17" pos:end="1481:28"><name pos:start="1481:17" pos:end="1481:21">FFABS</name><argument_list pos:start="1481:22" pos:end="1481:28">(<argument pos:start="1481:23" pos:end="1481:27"><expr pos:start="1481:23" pos:end="1481:27"><name pos:start="1481:23" pos:end="1481:27">delta</name></expr></argument>)</argument_list></call> <operator pos:start="1481:30" pos:end="1481:30">&gt;</operator> <literal type="number" pos:start="1481:32" pos:end="1481:34">1LL</literal><operator pos:start="1481:35" pos:end="1481:35">*</operator><name pos:start="1481:36" pos:end="1481:54">dts_delta_threshold</name><operator pos:start="1481:55" pos:end="1481:55">*</operator><name pos:start="1481:56" pos:end="1481:67">AV_TIME_BASE</name> <operator pos:start="1481:69" pos:end="1481:70">||</operator> <name pos:start="1481:72" pos:end="1481:78">pkt_dts</name><operator pos:start="1481:79" pos:end="1481:79">+</operator><literal type="number" pos:start="1481:80" pos:end="1481:80">1</literal><operator pos:start="1481:81" pos:end="1481:81">&lt;</operator><name pos:start="1481:82" pos:end="1481:89"><name pos:start="1481:82" pos:end="1481:84">ist</name><operator pos:start="1481:85" pos:end="1481:86">-&gt;</operator><name pos:start="1481:87" pos:end="1481:89">pts</name></name><operator pos:start="1481:90" pos:end="1481:90">)</operator><operator pos:start="1481:91" pos:end="1481:92">&amp;&amp;</operator> <operator pos:start="1481:94" pos:end="1481:94">!</operator><name pos:start="1481:95" pos:end="1481:101">copy_ts</name></expr>)</condition><block pos:start="1481:103" pos:end="1495:13">{<block_content pos:start="1483:17" pos:end="1493:86">

                <expr_stmt pos:start="1483:17" pos:end="1483:63"><expr pos:start="1483:17" pos:end="1483:62"><name pos:start="1483:17" pos:end="1483:54"><name pos:start="1483:17" pos:end="1483:37">input_files_ts_offset</name><index pos:start="1483:38" pos:end="1483:54">[<expr pos:start="1483:39" pos:end="1483:53"><name pos:start="1483:39" pos:end="1483:53"><name pos:start="1483:39" pos:end="1483:41">ist</name><operator pos:start="1483:42" pos:end="1483:43">-&gt;</operator><name pos:start="1483:44" pos:end="1483:53">file_index</name></name></expr>]</index></name><operator pos:start="1483:55" pos:end="1483:56">-=</operator> <name pos:start="1483:58" pos:end="1483:62">delta</name></expr>;</expr_stmt>

                <if_stmt pos:start="1485:17" pos:end="1487:145"><if pos:start="1485:17" pos:end="1487:145">if <condition pos:start="1485:20" pos:end="1485:32">(<expr pos:start="1485:21" pos:end="1485:31"><name pos:start="1485:21" pos:end="1485:27">verbose</name> <operator pos:start="1485:29" pos:end="1485:29">&gt;</operator> <literal type="number" pos:start="1485:31" pos:end="1485:31">2</literal></expr>)</condition><block type="pseudo" pos:start="1487:21" pos:end="1487:145"><block_content pos:start="1487:21" pos:end="1487:145">

                    <expr_stmt pos:start="1487:21" pos:end="1487:145"><expr pos:start="1487:21" pos:end="1487:144"><call pos:start="1487:21" pos:end="1487:144"><name pos:start="1487:21" pos:end="1487:27">fprintf</name><argument_list pos:start="1487:28" pos:end="1487:144">(<argument pos:start="1487:29" pos:end="1487:34"><expr pos:start="1487:29" pos:end="1487:34"><name pos:start="1487:29" pos:end="1487:34">stderr</name></expr></argument>, <argument pos:start="1487:37" pos:end="1487:96"><expr pos:start="1487:37" pos:end="1487:96"><literal type="string" pos:start="1487:37" pos:end="1487:63">"timestamp discontinuity %"</literal><name pos:start="1487:64" pos:end="1487:69">PRId64</name><literal type="string" pos:start="1487:70" pos:end="1487:86">", new offset= %"</literal><name pos:start="1487:87" pos:end="1487:92">PRId64</name><literal type="string" pos:start="1487:93" pos:end="1487:96">"\n"</literal></expr></argument>, <argument pos:start="1487:99" pos:end="1487:103"><expr pos:start="1487:99" pos:end="1487:103"><name pos:start="1487:99" pos:end="1487:103">delta</name></expr></argument>, <argument pos:start="1487:106" pos:end="1487:143"><expr pos:start="1487:106" pos:end="1487:143"><name pos:start="1487:106" pos:end="1487:143"><name pos:start="1487:106" pos:end="1487:126">input_files_ts_offset</name><index pos:start="1487:127" pos:end="1487:143">[<expr pos:start="1487:128" pos:end="1487:142"><name pos:start="1487:128" pos:end="1487:142"><name pos:start="1487:128" pos:end="1487:130">ist</name><operator pos:start="1487:131" pos:end="1487:132">-&gt;</operator><name pos:start="1487:133" pos:end="1487:142">file_index</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1489:17" pos:end="1489:82"><expr pos:start="1489:17" pos:end="1489:81"><name pos:start="1489:17" pos:end="1489:23"><name pos:start="1489:17" pos:end="1489:19">pkt</name><operator pos:start="1489:20" pos:end="1489:20">.</operator><name pos:start="1489:21" pos:end="1489:23">dts</name></name><operator pos:start="1489:24" pos:end="1489:25">-=</operator> <call pos:start="1489:27" pos:end="1489:81"><name pos:start="1489:27" pos:end="1489:38">av_rescale_q</name><argument_list pos:start="1489:39" pos:end="1489:81">(<argument pos:start="1489:40" pos:end="1489:44"><expr pos:start="1489:40" pos:end="1489:44"><name pos:start="1489:40" pos:end="1489:44">delta</name></expr></argument>, <argument pos:start="1489:47" pos:end="1489:60"><expr pos:start="1489:47" pos:end="1489:60"><name pos:start="1489:47" pos:end="1489:60">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1489:63" pos:end="1489:80"><expr pos:start="1489:63" pos:end="1489:80"><name pos:start="1489:63" pos:end="1489:80"><name pos:start="1489:63" pos:end="1489:65">ist</name><operator pos:start="1489:66" pos:end="1489:67">-&gt;</operator><name pos:start="1489:68" pos:end="1489:69">st</name><operator pos:start="1489:70" pos:end="1489:71">-&gt;</operator><name pos:start="1489:72" pos:end="1489:80">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1491:17" pos:end="1493:86"><if pos:start="1491:17" pos:end="1493:86">if<condition pos:start="1491:19" pos:end="1491:45">(<expr pos:start="1491:20" pos:end="1491:44"><name pos:start="1491:20" pos:end="1491:26"><name pos:start="1491:20" pos:end="1491:22">pkt</name><operator pos:start="1491:23" pos:end="1491:23">.</operator><name pos:start="1491:24" pos:end="1491:26">pts</name></name> <operator pos:start="1491:28" pos:end="1491:29">!=</operator> <name pos:start="1491:31" pos:end="1491:44">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1493:21" pos:end="1493:86"><block_content pos:start="1493:21" pos:end="1493:86">

                    <expr_stmt pos:start="1493:21" pos:end="1493:86"><expr pos:start="1493:21" pos:end="1493:85"><name pos:start="1493:21" pos:end="1493:27"><name pos:start="1493:21" pos:end="1493:23">pkt</name><operator pos:start="1493:24" pos:end="1493:24">.</operator><name pos:start="1493:25" pos:end="1493:27">pts</name></name><operator pos:start="1493:28" pos:end="1493:29">-=</operator> <call pos:start="1493:31" pos:end="1493:85"><name pos:start="1493:31" pos:end="1493:42">av_rescale_q</name><argument_list pos:start="1493:43" pos:end="1493:85">(<argument pos:start="1493:44" pos:end="1493:48"><expr pos:start="1493:44" pos:end="1493:48"><name pos:start="1493:44" pos:end="1493:48">delta</name></expr></argument>, <argument pos:start="1493:51" pos:end="1493:64"><expr pos:start="1493:51" pos:end="1493:64"><name pos:start="1493:51" pos:end="1493:64">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1493:67" pos:end="1493:84"><expr pos:start="1493:67" pos:end="1493:84"><name pos:start="1493:67" pos:end="1493:84"><name pos:start="1493:67" pos:end="1493:69">ist</name><operator pos:start="1493:70" pos:end="1493:71">-&gt;</operator><name pos:start="1493:72" pos:end="1493:73">st</name><operator pos:start="1493:74" pos:end="1493:75">-&gt;</operator><name pos:start="1493:76" pos:end="1493:84">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="1501:9" pos:end="1501:48">/* finish if recording time exhausted */</comment>

        <if_stmt pos:start="1503:9" pos:end="1511:9"><if pos:start="1503:9" pos:end="1511:9">if <condition pos:start="1503:12" pos:end="1505:115">(<expr pos:start="1503:13" pos:end="1505:114"><name pos:start="1503:13" pos:end="1503:26">recording_time</name> <operator pos:start="1503:28" pos:end="1503:29">!=</operator> <name pos:start="1503:31" pos:end="1503:39">INT64_MAX</name> <operator pos:start="1503:41" pos:end="1503:42">&amp;&amp;</operator>

            <macro pos:start="1505:13" pos:end="1505:109"><name pos:start="1505:13" pos:end="1505:25">av_compare_ts</name><argument_list pos:start="1505:26" pos:end="1505:109">(<argument pos:start="1505:27" pos:end="1505:33">pkt.pts</argument>, <argument pos:start="1505:36" pos:end="1505:53">ist-&gt;st-&gt;time_base</argument>, <argument pos:start="1505:56" pos:end="1505:82">recording_time + start_time</argument>, <argument pos:start="1505:85" pos:end="1505:98">(AVRational){<literal type="number" pos:start="1505:98" pos:end="1505:98">1</literal></argument>, <argument pos:start="1505:101" pos:end="1505:108"><literal type="number" pos:start="1505:101" pos:end="1505:107">1000000</literal>}</argument>)</argument_list></macro> <operator pos:start="1505:111" pos:end="1505:112">&gt;=</operator> <literal type="number" pos:start="1505:114" pos:end="1505:114">0</literal></expr>)</condition> <block pos:start="1505:117" pos:end="1511:9">{<block_content pos:start="1507:13" pos:end="1509:32">

            <expr_stmt pos:start="1507:13" pos:end="1507:44"><expr pos:start="1507:13" pos:end="1507:43"><name pos:start="1507:13" pos:end="1507:39"><name pos:start="1507:13" pos:end="1507:15">ist</name><operator pos:start="1507:16" pos:end="1507:17">-&gt;</operator><name pos:start="1507:18" pos:end="1507:39">is_past_recording_time</name></name> <operator pos:start="1507:41" pos:end="1507:41">=</operator> <literal type="number" pos:start="1507:43" pos:end="1507:43">1</literal></expr>;</expr_stmt>

            <goto pos:start="1509:13" pos:end="1509:32">goto <name pos:start="1509:18" pos:end="1509:31">discard_packet</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="1515:9" pos:end="1515:89">//fprintf(stderr,"read #%d.%d size=%d\n", ist-&gt;file_index, ist-&gt;index, pkt.size);</comment>

        <if_stmt pos:start="1517:9" pos:end="1535:9"><if pos:start="1517:9" pos:end="1535:9">if <condition pos:start="1517:12" pos:end="1517:76">(<expr pos:start="1517:13" pos:end="1517:75"><call pos:start="1517:13" pos:end="1517:71"><name pos:start="1517:13" pos:end="1517:25">output_packet</name><argument_list pos:start="1517:26" pos:end="1517:71">(<argument pos:start="1517:27" pos:end="1517:29"><expr pos:start="1517:27" pos:end="1517:29"><name pos:start="1517:27" pos:end="1517:29">ist</name></expr></argument>, <argument pos:start="1517:32" pos:end="1517:40"><expr pos:start="1517:32" pos:end="1517:40"><name pos:start="1517:32" pos:end="1517:40">ist_index</name></expr></argument>, <argument pos:start="1517:43" pos:end="1517:51"><expr pos:start="1517:43" pos:end="1517:51"><name pos:start="1517:43" pos:end="1517:51">ost_table</name></expr></argument>, <argument pos:start="1517:54" pos:end="1517:64"><expr pos:start="1517:54" pos:end="1517:64"><name pos:start="1517:54" pos:end="1517:64">nb_ostreams</name></expr></argument>, <argument pos:start="1517:67" pos:end="1517:70"><expr pos:start="1517:67" pos:end="1517:70"><operator pos:start="1517:67" pos:end="1517:67">&amp;</operator><name pos:start="1517:68" pos:end="1517:70">pkt</name></expr></argument>)</argument_list></call> <operator pos:start="1517:73" pos:end="1517:73">&lt;</operator> <literal type="number" pos:start="1517:75" pos:end="1517:75">0</literal></expr>)</condition> <block pos:start="1517:78" pos:end="1535:9">{<block_content pos:start="1521:13" pos:end="1533:22">



            <if_stmt pos:start="1521:13" pos:end="1525:53"><if pos:start="1521:13" pos:end="1525:53">if <condition pos:start="1521:16" pos:end="1521:29">(<expr pos:start="1521:17" pos:end="1521:28"><name pos:start="1521:17" pos:end="1521:23">verbose</name> <operator pos:start="1521:25" pos:end="1521:26">&gt;=</operator> <literal type="number" pos:start="1521:28" pos:end="1521:28">0</literal></expr>)</condition><block type="pseudo" pos:start="1523:17" pos:end="1525:53"><block_content pos:start="1523:17" pos:end="1525:53">

                <expr_stmt pos:start="1523:17" pos:end="1525:53"><expr pos:start="1523:17" pos:end="1525:52"><call pos:start="1523:17" pos:end="1525:52"><name pos:start="1523:17" pos:end="1523:23">fprintf</name><argument_list pos:start="1523:24" pos:end="1525:52">(<argument pos:start="1523:25" pos:end="1523:30"><expr pos:start="1523:25" pos:end="1523:30"><name pos:start="1523:25" pos:end="1523:30">stderr</name></expr></argument>, <argument pos:start="1523:33" pos:end="1523:70"><expr pos:start="1523:33" pos:end="1523:70"><literal type="string" pos:start="1523:33" pos:end="1523:70">"Error while decoding stream #%d.%d\n"</literal></expr></argument>,

                        <argument pos:start="1525:25" pos:end="1525:39"><expr pos:start="1525:25" pos:end="1525:39"><name pos:start="1525:25" pos:end="1525:39"><name pos:start="1525:25" pos:end="1525:27">ist</name><operator pos:start="1525:28" pos:end="1525:29">-&gt;</operator><name pos:start="1525:30" pos:end="1525:39">file_index</name></name></expr></argument>, <argument pos:start="1525:42" pos:end="1525:51"><expr pos:start="1525:42" pos:end="1525:51"><name pos:start="1525:42" pos:end="1525:51"><name pos:start="1525:42" pos:end="1525:44">ist</name><operator pos:start="1525:45" pos:end="1525:46">-&gt;</operator><name pos:start="1525:47" pos:end="1525:51">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="1527:13" pos:end="1529:31"><if pos:start="1527:13" pos:end="1529:31">if <condition pos:start="1527:16" pos:end="1527:30">(<expr pos:start="1527:17" pos:end="1527:29"><name pos:start="1527:17" pos:end="1527:29">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="1529:17" pos:end="1529:31"><block_content pos:start="1529:17" pos:end="1529:31">

                <expr_stmt pos:start="1529:17" pos:end="1529:31"><expr pos:start="1529:17" pos:end="1529:30"><call pos:start="1529:17" pos:end="1529:30"><name pos:start="1529:17" pos:end="1529:27">ffmpeg_exit</name><argument_list pos:start="1529:28" pos:end="1529:30">(<argument pos:start="1529:29" pos:end="1529:29"><expr pos:start="1529:29" pos:end="1529:29"><literal type="number" pos:start="1529:29" pos:end="1529:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1531:13" pos:end="1531:33"><expr pos:start="1531:13" pos:end="1531:32"><call pos:start="1531:13" pos:end="1531:32"><name pos:start="1531:13" pos:end="1531:26">av_free_packet</name><argument_list pos:start="1531:27" pos:end="1531:32">(<argument pos:start="1531:28" pos:end="1531:31"><expr pos:start="1531:28" pos:end="1531:31"><operator pos:start="1531:28" pos:end="1531:28">&amp;</operator><name pos:start="1531:29" pos:end="1531:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1533:13" pos:end="1533:22">goto <name pos:start="1533:18" pos:end="1533:21">redo</name>;</goto>

        </block_content>}</block></if></if_stmt>



    <label pos:start="1539:5" pos:end="1539:19"><name pos:start="1539:5" pos:end="1539:18">discard_packet</name>:</label>

        <expr_stmt pos:start="1541:9" pos:end="1541:29"><expr pos:start="1541:9" pos:end="1541:28"><call pos:start="1541:9" pos:end="1541:28"><name pos:start="1541:9" pos:end="1541:22">av_free_packet</name><argument_list pos:start="1541:23" pos:end="1541:28">(<argument pos:start="1541:24" pos:end="1541:27"><expr pos:start="1541:24" pos:end="1541:27"><operator pos:start="1541:24" pos:end="1541:24">&amp;</operator><name pos:start="1541:25" pos:end="1541:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="1545:9" pos:end="1545:75">/* dump report by using the output first video and audio streams */</comment>

        <expr_stmt pos:start="1547:9" pos:end="1547:62"><expr pos:start="1547:9" pos:end="1547:61"><call pos:start="1547:9" pos:end="1547:61"><name pos:start="1547:9" pos:end="1547:20">print_report</name><argument_list pos:start="1547:21" pos:end="1547:61">(<argument pos:start="1547:22" pos:end="1547:33"><expr pos:start="1547:22" pos:end="1547:33"><name pos:start="1547:22" pos:end="1547:33">output_files</name></expr></argument>, <argument pos:start="1547:36" pos:end="1547:44"><expr pos:start="1547:36" pos:end="1547:44"><name pos:start="1547:36" pos:end="1547:44">ost_table</name></expr></argument>, <argument pos:start="1547:47" pos:end="1547:57"><expr pos:start="1547:47" pos:end="1547:57"><name pos:start="1547:47" pos:end="1547:57">nb_ostreams</name></expr></argument>, <argument pos:start="1547:60" pos:end="1547:60"><expr pos:start="1547:60" pos:end="1547:60"><literal type="number" pos:start="1547:60" pos:end="1547:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1553:5" pos:end="1553:65">/* at the end of stream, we must flush the decoder buffers */</comment>

    <for pos:start="1555:5" pos:end="1565:5">for<control pos:start="1555:8" pos:end="1555:30">(<init pos:start="1555:9" pos:end="1555:12"><expr pos:start="1555:9" pos:end="1555:11"><name pos:start="1555:9" pos:end="1555:9">i</name><operator pos:start="1555:10" pos:end="1555:10">=</operator><literal type="number" pos:start="1555:11" pos:end="1555:11">0</literal></expr>;</init><condition pos:start="1555:13" pos:end="1555:26"><expr pos:start="1555:13" pos:end="1555:25"><name pos:start="1555:13" pos:end="1555:13">i</name><operator pos:start="1555:14" pos:end="1555:14">&lt;</operator><name pos:start="1555:15" pos:end="1555:25">nb_istreams</name></expr>;</condition><incr pos:start="1555:27" pos:end="1555:29"><expr pos:start="1555:27" pos:end="1555:29"><name pos:start="1555:27" pos:end="1555:27">i</name><operator pos:start="1555:28" pos:end="1555:29">++</operator></expr></incr>)</control> <block pos:start="1555:32" pos:end="1565:5">{<block_content pos:start="1557:9" pos:end="1563:9">

        <expr_stmt pos:start="1557:9" pos:end="1557:27"><expr pos:start="1557:9" pos:end="1557:26"><name pos:start="1557:9" pos:end="1557:11">ist</name> <operator pos:start="1557:13" pos:end="1557:13">=</operator> <name pos:start="1557:15" pos:end="1557:26"><name pos:start="1557:15" pos:end="1557:23">ist_table</name><index pos:start="1557:24" pos:end="1557:26">[<expr pos:start="1557:25" pos:end="1557:25"><name pos:start="1557:25" pos:end="1557:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1559:9" pos:end="1563:9"><if pos:start="1559:9" pos:end="1563:9">if <condition pos:start="1559:12" pos:end="1559:33">(<expr pos:start="1559:13" pos:end="1559:32"><name pos:start="1559:13" pos:end="1559:32"><name pos:start="1559:13" pos:end="1559:15">ist</name><operator pos:start="1559:16" pos:end="1559:17">-&gt;</operator><name pos:start="1559:18" pos:end="1559:32">decoding_needed</name></name></expr>)</condition> <block pos:start="1559:35" pos:end="1563:9">{<block_content pos:start="1561:13" pos:end="1561:64">

            <expr_stmt pos:start="1561:13" pos:end="1561:64"><expr pos:start="1561:13" pos:end="1561:63"><call pos:start="1561:13" pos:end="1561:63"><name pos:start="1561:13" pos:end="1561:25">output_packet</name><argument_list pos:start="1561:26" pos:end="1561:63">(<argument pos:start="1561:27" pos:end="1561:29"><expr pos:start="1561:27" pos:end="1561:29"><name pos:start="1561:27" pos:end="1561:29">ist</name></expr></argument>, <argument pos:start="1561:32" pos:end="1561:32"><expr pos:start="1561:32" pos:end="1561:32"><name pos:start="1561:32" pos:end="1561:32">i</name></expr></argument>, <argument pos:start="1561:35" pos:end="1561:43"><expr pos:start="1561:35" pos:end="1561:43"><name pos:start="1561:35" pos:end="1561:43">ost_table</name></expr></argument>, <argument pos:start="1561:46" pos:end="1561:56"><expr pos:start="1561:46" pos:end="1561:56"><name pos:start="1561:46" pos:end="1561:56">nb_ostreams</name></expr></argument>, <argument pos:start="1561:59" pos:end="1561:62"><expr pos:start="1561:59" pos:end="1561:62"><name pos:start="1561:59" pos:end="1561:62">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="1569:5" pos:end="1569:16"><expr pos:start="1569:5" pos:end="1569:15"><call pos:start="1569:5" pos:end="1569:15"><name pos:start="1569:5" pos:end="1569:13">term_exit</name><argument_list pos:start="1569:14" pos:end="1569:15">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="1573:5" pos:end="1573:52">/* write the trailer if needed and close file */</comment>

    <for pos:start="1575:5" pos:end="1581:5">for<control pos:start="1575:8" pos:end="1575:34">(<init pos:start="1575:9" pos:end="1575:12"><expr pos:start="1575:9" pos:end="1575:11"><name pos:start="1575:9" pos:end="1575:9">i</name><operator pos:start="1575:10" pos:end="1575:10">=</operator><literal type="number" pos:start="1575:11" pos:end="1575:11">0</literal></expr>;</init><condition pos:start="1575:13" pos:end="1575:30"><expr pos:start="1575:13" pos:end="1575:29"><name pos:start="1575:13" pos:end="1575:13">i</name><operator pos:start="1575:14" pos:end="1575:14">&lt;</operator><name pos:start="1575:15" pos:end="1575:29">nb_output_files</name></expr>;</condition><incr pos:start="1575:31" pos:end="1575:33"><expr pos:start="1575:31" pos:end="1575:33"><name pos:start="1575:31" pos:end="1575:31">i</name><operator pos:start="1575:32" pos:end="1575:33">++</operator></expr></incr>)</control> <block pos:start="1575:36" pos:end="1581:5">{<block_content pos:start="1577:9" pos:end="1579:29">

        <expr_stmt pos:start="1577:9" pos:end="1577:29"><expr pos:start="1577:9" pos:end="1577:28"><name pos:start="1577:9" pos:end="1577:10">os</name> <operator pos:start="1577:12" pos:end="1577:12">=</operator> <name pos:start="1577:14" pos:end="1577:28"><name pos:start="1577:14" pos:end="1577:25">output_files</name><index pos:start="1577:26" pos:end="1577:28">[<expr pos:start="1577:27" pos:end="1577:27"><name pos:start="1577:27" pos:end="1577:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1579:9" pos:end="1579:29"><expr pos:start="1579:9" pos:end="1579:28"><call pos:start="1579:9" pos:end="1579:28"><name pos:start="1579:9" pos:end="1579:24">av_write_trailer</name><argument_list pos:start="1579:25" pos:end="1579:28">(<argument pos:start="1579:26" pos:end="1579:27"><expr pos:start="1579:26" pos:end="1579:27"><name pos:start="1579:26" pos:end="1579:27">os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1585:5" pos:end="1585:64">/* dump report by using the first video and audio streams */</comment>

    <expr_stmt pos:start="1587:5" pos:end="1587:58"><expr pos:start="1587:5" pos:end="1587:57"><call pos:start="1587:5" pos:end="1587:57"><name pos:start="1587:5" pos:end="1587:16">print_report</name><argument_list pos:start="1587:17" pos:end="1587:57">(<argument pos:start="1587:18" pos:end="1587:29"><expr pos:start="1587:18" pos:end="1587:29"><name pos:start="1587:18" pos:end="1587:29">output_files</name></expr></argument>, <argument pos:start="1587:32" pos:end="1587:40"><expr pos:start="1587:32" pos:end="1587:40"><name pos:start="1587:32" pos:end="1587:40">ost_table</name></expr></argument>, <argument pos:start="1587:43" pos:end="1587:53"><expr pos:start="1587:43" pos:end="1587:53"><name pos:start="1587:43" pos:end="1587:53">nb_ostreams</name></expr></argument>, <argument pos:start="1587:56" pos:end="1587:56"><expr pos:start="1587:56" pos:end="1587:56"><literal type="number" pos:start="1587:56" pos:end="1587:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="1591:5" pos:end="1591:28">/* close each encoder */</comment>

    <for pos:start="1593:5" pos:end="1611:5">for<control pos:start="1593:8" pos:end="1593:30">(<init pos:start="1593:9" pos:end="1593:12"><expr pos:start="1593:9" pos:end="1593:11"><name pos:start="1593:9" pos:end="1593:9">i</name><operator pos:start="1593:10" pos:end="1593:10">=</operator><literal type="number" pos:start="1593:11" pos:end="1593:11">0</literal></expr>;</init><condition pos:start="1593:13" pos:end="1593:26"><expr pos:start="1593:13" pos:end="1593:25"><name pos:start="1593:13" pos:end="1593:13">i</name><operator pos:start="1593:14" pos:end="1593:14">&lt;</operator><name pos:start="1593:15" pos:end="1593:25">nb_ostreams</name></expr>;</condition><incr pos:start="1593:27" pos:end="1593:29"><expr pos:start="1593:27" pos:end="1593:29"><name pos:start="1593:27" pos:end="1593:27">i</name><operator pos:start="1593:28" pos:end="1593:29">++</operator></expr></incr>)</control> <block pos:start="1593:32" pos:end="1611:5">{<block_content pos:start="1595:9" pos:end="1610:0">

        <expr_stmt pos:start="1595:9" pos:end="1595:27"><expr pos:start="1595:9" pos:end="1595:26"><name pos:start="1595:9" pos:end="1595:11">ost</name> <operator pos:start="1595:13" pos:end="1595:13">=</operator> <name pos:start="1595:15" pos:end="1595:26"><name pos:start="1595:15" pos:end="1595:23">ost_table</name><index pos:start="1595:24" pos:end="1595:26">[<expr pos:start="1595:25" pos:end="1595:25"><name pos:start="1595:25" pos:end="1595:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1597:9" pos:end="1606:0"><if pos:start="1597:9" pos:end="1606:0">if <condition pos:start="1597:12" pos:end="1597:33">(<expr pos:start="1597:13" pos:end="1597:32"><name pos:start="1597:13" pos:end="1597:32"><name pos:start="1597:13" pos:end="1597:15">ost</name><operator pos:start="1597:16" pos:end="1597:17">-&gt;</operator><name pos:start="1597:18" pos:end="1597:32">encoding_needed</name></name></expr>)</condition> <block pos:start="1597:35" pos:end="1606:0">{<block_content pos:start="1599:13" pos:end="1601:42">

            <expr_stmt pos:start="1599:13" pos:end="1599:48"><expr pos:start="1599:13" pos:end="1599:47"><call pos:start="1599:13" pos:end="1599:47"><name pos:start="1599:13" pos:end="1599:20">av_freep</name><argument_list pos:start="1599:21" pos:end="1599:47">(<argument pos:start="1599:22" pos:end="1599:46"><expr pos:start="1599:22" pos:end="1599:46"><operator pos:start="1599:22" pos:end="1599:22">&amp;</operator><name pos:start="1599:23" pos:end="1599:46"><name pos:start="1599:23" pos:end="1599:25">ost</name><operator pos:start="1599:26" pos:end="1599:27">-&gt;</operator><name pos:start="1599:28" pos:end="1599:29">st</name><operator pos:start="1599:30" pos:end="1599:31">-&gt;</operator><name pos:start="1599:32" pos:end="1599:36">codec</name><operator pos:start="1599:37" pos:end="1599:38">-&gt;</operator><name pos:start="1599:39" pos:end="1599:46">stats_in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1601:13" pos:end="1601:42"><expr pos:start="1601:13" pos:end="1601:41"><call pos:start="1601:13" pos:end="1601:41"><name pos:start="1601:13" pos:end="1601:25">avcodec_close</name><argument_list pos:start="1601:26" pos:end="1601:41">(<argument pos:start="1601:27" pos:end="1601:40"><expr pos:start="1601:27" pos:end="1601:40"><name pos:start="1601:27" pos:end="1601:40"><name pos:start="1601:27" pos:end="1601:29">ost</name><operator pos:start="1601:30" pos:end="1601:31">-&gt;</operator><name pos:start="1601:32" pos:end="1601:33">st</name><operator pos:start="1601:34" pos:end="1601:35">-&gt;</operator><name pos:start="1601:36" pos:end="1601:40">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:if pos:start="1605:1" pos:end="1605:19">#<cpp:directive pos:start="1605:2" pos:end="1605:3">if</cpp:directive> <expr pos:start="1605:5" pos:end="1605:19"><name pos:start="1605:5" pos:end="1605:19">CONFIG_AVFILTER</name></expr></cpp:if>

        <expr_stmt pos:start="1607:9" pos:end="1610:0"><expr pos:start="1607:9" pos:end="1607:40"><call pos:start="1607:9" pos:end="1607:40"><name pos:start="1607:9" pos:end="1607:27">avfilter_graph_free</name><argument_list pos:start="1607:28" pos:end="1607:40">(<argument pos:start="1607:29" pos:end="1607:39"><expr pos:start="1607:29" pos:end="1607:39"><operator pos:start="1607:29" pos:end="1607:29">&amp;</operator><name pos:start="1607:30" pos:end="1607:39"><name pos:start="1607:30" pos:end="1607:32">ost</name><operator pos:start="1607:33" pos:end="1607:34">-&gt;</operator><name pos:start="1607:35" pos:end="1607:39">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="1609:1" pos:end="1609:6">#<cpp:directive pos:start="1609:2" pos:end="1609:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></for>



    <comment type="block" pos:start="1615:5" pos:end="1615:28">/* close each decoder */</comment>

    <for pos:start="1617:5" pos:end="1627:5">for<control pos:start="1617:8" pos:end="1617:30">(<init pos:start="1617:9" pos:end="1617:12"><expr pos:start="1617:9" pos:end="1617:11"><name pos:start="1617:9" pos:end="1617:9">i</name><operator pos:start="1617:10" pos:end="1617:10">=</operator><literal type="number" pos:start="1617:11" pos:end="1617:11">0</literal></expr>;</init><condition pos:start="1617:13" pos:end="1617:26"><expr pos:start="1617:13" pos:end="1617:25"><name pos:start="1617:13" pos:end="1617:13">i</name><operator pos:start="1617:14" pos:end="1617:14">&lt;</operator><name pos:start="1617:15" pos:end="1617:25">nb_istreams</name></expr>;</condition><incr pos:start="1617:27" pos:end="1617:29"><expr pos:start="1617:27" pos:end="1617:29"><name pos:start="1617:27" pos:end="1617:27">i</name><operator pos:start="1617:28" pos:end="1617:29">++</operator></expr></incr>)</control> <block pos:start="1617:32" pos:end="1627:5">{<block_content pos:start="1619:9" pos:end="1625:9">

        <expr_stmt pos:start="1619:9" pos:end="1619:27"><expr pos:start="1619:9" pos:end="1619:26"><name pos:start="1619:9" pos:end="1619:11">ist</name> <operator pos:start="1619:13" pos:end="1619:13">=</operator> <name pos:start="1619:15" pos:end="1619:26"><name pos:start="1619:15" pos:end="1619:23">ist_table</name><index pos:start="1619:24" pos:end="1619:26">[<expr pos:start="1619:25" pos:end="1619:25"><name pos:start="1619:25" pos:end="1619:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1621:9" pos:end="1625:9"><if pos:start="1621:9" pos:end="1625:9">if <condition pos:start="1621:12" pos:end="1621:33">(<expr pos:start="1621:13" pos:end="1621:32"><name pos:start="1621:13" pos:end="1621:32"><name pos:start="1621:13" pos:end="1621:15">ist</name><operator pos:start="1621:16" pos:end="1621:17">-&gt;</operator><name pos:start="1621:18" pos:end="1621:32">decoding_needed</name></name></expr>)</condition> <block pos:start="1621:35" pos:end="1625:9">{<block_content pos:start="1623:13" pos:end="1623:42">

            <expr_stmt pos:start="1623:13" pos:end="1623:42"><expr pos:start="1623:13" pos:end="1623:41"><call pos:start="1623:13" pos:end="1623:41"><name pos:start="1623:13" pos:end="1623:25">avcodec_close</name><argument_list pos:start="1623:26" pos:end="1623:41">(<argument pos:start="1623:27" pos:end="1623:40"><expr pos:start="1623:27" pos:end="1623:40"><name pos:start="1623:27" pos:end="1623:40"><name pos:start="1623:27" pos:end="1623:29">ist</name><operator pos:start="1623:30" pos:end="1623:31">-&gt;</operator><name pos:start="1623:32" pos:end="1623:33">st</name><operator pos:start="1623:34" pos:end="1623:35">-&gt;</operator><name pos:start="1623:36" pos:end="1623:40">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1631:5" pos:end="1631:20">/* finished ! */</comment>

    <expr_stmt pos:start="1633:5" pos:end="1633:12"><expr pos:start="1633:5" pos:end="1633:11"><name pos:start="1633:5" pos:end="1633:7">ret</name> <operator pos:start="1633:9" pos:end="1633:9">=</operator> <literal type="number" pos:start="1633:11" pos:end="1633:11">0</literal></expr>;</expr_stmt>



 <label pos:start="1637:2" pos:end="1637:6"><name pos:start="1637:2" pos:end="1637:5">fail</name>:</label>

    <expr_stmt pos:start="1639:5" pos:end="1639:26"><expr pos:start="1639:5" pos:end="1639:25"><call pos:start="1639:5" pos:end="1639:25"><name pos:start="1639:5" pos:end="1639:12">av_freep</name><argument_list pos:start="1639:13" pos:end="1639:25">(<argument pos:start="1639:14" pos:end="1639:24"><expr pos:start="1639:14" pos:end="1639:24"><operator pos:start="1639:14" pos:end="1639:14">&amp;</operator><name pos:start="1639:15" pos:end="1639:24">bit_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1641:5" pos:end="1641:24"><expr pos:start="1641:5" pos:end="1641:23"><call pos:start="1641:5" pos:end="1641:23"><name pos:start="1641:5" pos:end="1641:11">av_free</name><argument_list pos:start="1641:12" pos:end="1641:23">(<argument pos:start="1641:13" pos:end="1641:22"><expr pos:start="1641:13" pos:end="1641:22"><name pos:start="1641:13" pos:end="1641:22">file_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="1645:5" pos:end="1657:5"><if pos:start="1645:5" pos:end="1657:5">if <condition pos:start="1645:8" pos:end="1645:18">(<expr pos:start="1645:9" pos:end="1645:17"><name pos:start="1645:9" pos:end="1645:17">ist_table</name></expr>)</condition> <block pos:start="1645:20" pos:end="1657:5">{<block_content pos:start="1647:9" pos:end="1655:27">

        <for pos:start="1647:9" pos:end="1653:9">for<control pos:start="1647:12" pos:end="1647:34">(<init pos:start="1647:13" pos:end="1647:16"><expr pos:start="1647:13" pos:end="1647:15"><name pos:start="1647:13" pos:end="1647:13">i</name><operator pos:start="1647:14" pos:end="1647:14">=</operator><literal type="number" pos:start="1647:15" pos:end="1647:15">0</literal></expr>;</init><condition pos:start="1647:17" pos:end="1647:30"><expr pos:start="1647:17" pos:end="1647:29"><name pos:start="1647:17" pos:end="1647:17">i</name><operator pos:start="1647:18" pos:end="1647:18">&lt;</operator><name pos:start="1647:19" pos:end="1647:29">nb_istreams</name></expr>;</condition><incr pos:start="1647:31" pos:end="1647:33"><expr pos:start="1647:31" pos:end="1647:33"><name pos:start="1647:31" pos:end="1647:31">i</name><operator pos:start="1647:32" pos:end="1647:33">++</operator></expr></incr>)</control> <block pos:start="1647:36" pos:end="1653:9">{<block_content pos:start="1649:13" pos:end="1651:25">

            <expr_stmt pos:start="1649:13" pos:end="1649:31"><expr pos:start="1649:13" pos:end="1649:30"><name pos:start="1649:13" pos:end="1649:15">ist</name> <operator pos:start="1649:17" pos:end="1649:17">=</operator> <name pos:start="1649:19" pos:end="1649:30"><name pos:start="1649:19" pos:end="1649:27">ist_table</name><index pos:start="1649:28" pos:end="1649:30">[<expr pos:start="1649:29" pos:end="1649:29"><name pos:start="1649:29" pos:end="1649:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1651:13" pos:end="1651:25"><expr pos:start="1651:13" pos:end="1651:24"><call pos:start="1651:13" pos:end="1651:24"><name pos:start="1651:13" pos:end="1651:19">av_free</name><argument_list pos:start="1651:20" pos:end="1651:24">(<argument pos:start="1651:21" pos:end="1651:23"><expr pos:start="1651:21" pos:end="1651:23"><name pos:start="1651:21" pos:end="1651:23">ist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="1655:9" pos:end="1655:27"><expr pos:start="1655:9" pos:end="1655:26"><call pos:start="1655:9" pos:end="1655:26"><name pos:start="1655:9" pos:end="1655:15">av_free</name><argument_list pos:start="1655:16" pos:end="1655:26">(<argument pos:start="1655:17" pos:end="1655:25"><expr pos:start="1655:17" pos:end="1655:25"><name pos:start="1655:17" pos:end="1655:25">ist_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="1659:5" pos:end="1709:5"><if pos:start="1659:5" pos:end="1709:5">if <condition pos:start="1659:8" pos:end="1659:18">(<expr pos:start="1659:9" pos:end="1659:17"><name pos:start="1659:9" pos:end="1659:17">ost_table</name></expr>)</condition> <block pos:start="1659:20" pos:end="1709:5">{<block_content pos:start="1661:9" pos:end="1707:27">

        <for pos:start="1661:9" pos:end="1705:9">for<control pos:start="1661:12" pos:end="1661:34">(<init pos:start="1661:13" pos:end="1661:16"><expr pos:start="1661:13" pos:end="1661:15"><name pos:start="1661:13" pos:end="1661:13">i</name><operator pos:start="1661:14" pos:end="1661:14">=</operator><literal type="number" pos:start="1661:15" pos:end="1661:15">0</literal></expr>;</init><condition pos:start="1661:17" pos:end="1661:30"><expr pos:start="1661:17" pos:end="1661:29"><name pos:start="1661:17" pos:end="1661:17">i</name><operator pos:start="1661:18" pos:end="1661:18">&lt;</operator><name pos:start="1661:19" pos:end="1661:29">nb_ostreams</name></expr>;</condition><incr pos:start="1661:31" pos:end="1661:33"><expr pos:start="1661:31" pos:end="1661:33"><name pos:start="1661:31" pos:end="1661:31">i</name><operator pos:start="1661:32" pos:end="1661:33">++</operator></expr></incr>)</control> <block pos:start="1661:36" pos:end="1705:9">{<block_content pos:start="1663:13" pos:end="1703:13">

            <expr_stmt pos:start="1663:13" pos:end="1663:31"><expr pos:start="1663:13" pos:end="1663:30"><name pos:start="1663:13" pos:end="1663:15">ost</name> <operator pos:start="1663:17" pos:end="1663:17">=</operator> <name pos:start="1663:19" pos:end="1663:30"><name pos:start="1663:19" pos:end="1663:27">ost_table</name><index pos:start="1663:28" pos:end="1663:30">[<expr pos:start="1663:29" pos:end="1663:29"><name pos:start="1663:29" pos:end="1663:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="1665:13" pos:end="1703:13"><if pos:start="1665:13" pos:end="1703:13">if <condition pos:start="1665:16" pos:end="1665:20">(<expr pos:start="1665:17" pos:end="1665:19"><name pos:start="1665:17" pos:end="1665:19">ost</name></expr>)</condition> <block pos:start="1665:22" pos:end="1703:13">{<block_content pos:start="1667:17" pos:end="1701:29">

                <if_stmt pos:start="1667:17" pos:end="1669:57"><if pos:start="1667:17" pos:end="1669:57">if <condition pos:start="1667:20" pos:end="1667:41">(<expr pos:start="1667:21" pos:end="1667:40"><name pos:start="1667:21" pos:end="1667:40"><name pos:start="1667:21" pos:end="1667:23">ost</name><operator pos:start="1667:24" pos:end="1667:25">-&gt;</operator><name pos:start="1667:26" pos:end="1667:27">st</name><operator pos:start="1667:28" pos:end="1667:29">-&gt;</operator><name pos:start="1667:30" pos:end="1667:40">stream_copy</name></name></expr>)</condition><block type="pseudo" pos:start="1669:21" pos:end="1669:57"><block_content pos:start="1669:21" pos:end="1669:57">

                    <expr_stmt pos:start="1669:21" pos:end="1669:57"><expr pos:start="1669:21" pos:end="1669:56"><call pos:start="1669:21" pos:end="1669:56"><name pos:start="1669:21" pos:end="1669:28">av_freep</name><argument_list pos:start="1669:29" pos:end="1669:56">(<argument pos:start="1669:30" pos:end="1669:55"><expr pos:start="1669:30" pos:end="1669:55"><operator pos:start="1669:30" pos:end="1669:30">&amp;</operator><name pos:start="1669:31" pos:end="1669:55"><name pos:start="1669:31" pos:end="1669:33">ost</name><operator pos:start="1669:34" pos:end="1669:35">-&gt;</operator><name pos:start="1669:36" pos:end="1669:37">st</name><operator pos:start="1669:38" pos:end="1669:39">-&gt;</operator><name pos:start="1669:40" pos:end="1669:44">codec</name><operator pos:start="1669:45" pos:end="1669:46">-&gt;</operator><name pos:start="1669:47" pos:end="1669:55">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="1671:17" pos:end="1677:17"><if pos:start="1671:17" pos:end="1677:17">if <condition pos:start="1671:20" pos:end="1671:33">(<expr pos:start="1671:21" pos:end="1671:32"><name pos:start="1671:21" pos:end="1671:32"><name pos:start="1671:21" pos:end="1671:23">ost</name><operator pos:start="1671:24" pos:end="1671:25">-&gt;</operator><name pos:start="1671:26" pos:end="1671:32">logfile</name></name></expr>)</condition> <block pos:start="1671:35" pos:end="1677:17">{<block_content pos:start="1673:21" pos:end="1675:40">

                    <expr_stmt pos:start="1673:21" pos:end="1673:41"><expr pos:start="1673:21" pos:end="1673:40"><call pos:start="1673:21" pos:end="1673:40"><name pos:start="1673:21" pos:end="1673:26">fclose</name><argument_list pos:start="1673:27" pos:end="1673:40">(<argument pos:start="1673:28" pos:end="1673:39"><expr pos:start="1673:28" pos:end="1673:39"><name pos:start="1673:28" pos:end="1673:39"><name pos:start="1673:28" pos:end="1673:30">ost</name><operator pos:start="1673:31" pos:end="1673:32">-&gt;</operator><name pos:start="1673:33" pos:end="1673:39">logfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1675:21" pos:end="1675:40"><expr pos:start="1675:21" pos:end="1675:39"><name pos:start="1675:21" pos:end="1675:32"><name pos:start="1675:21" pos:end="1675:23">ost</name><operator pos:start="1675:24" pos:end="1675:25">-&gt;</operator><name pos:start="1675:26" pos:end="1675:32">logfile</name></name> <operator pos:start="1675:34" pos:end="1675:34">=</operator> <name pos:start="1675:36" pos:end="1675:39">NULL</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1679:17" pos:end="1679:40"><expr pos:start="1679:17" pos:end="1679:39"><call pos:start="1679:17" pos:end="1679:39"><name pos:start="1679:17" pos:end="1679:28">av_fifo_free</name><argument_list pos:start="1679:29" pos:end="1679:39">(<argument pos:start="1679:30" pos:end="1679:38"><expr pos:start="1679:30" pos:end="1679:38"><name pos:start="1679:30" pos:end="1679:38"><name pos:start="1679:30" pos:end="1679:32">ost</name><operator pos:start="1679:33" pos:end="1679:34">-&gt;</operator><name pos:start="1679:35" pos:end="1679:38">fifo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="1679:42" pos:end="1681:75">/* works even if fifo is not

                                             initialized but set to zero */</comment>

                <expr_stmt pos:start="1683:17" pos:end="1683:59"><expr pos:start="1683:17" pos:end="1683:58"><call pos:start="1683:17" pos:end="1683:58"><name pos:start="1683:17" pos:end="1683:24">av_freep</name><argument_list pos:start="1683:25" pos:end="1683:58">(<argument pos:start="1683:26" pos:end="1683:57"><expr pos:start="1683:26" pos:end="1683:57"><operator pos:start="1683:26" pos:end="1683:26">&amp;</operator><name pos:start="1683:27" pos:end="1683:57"><name pos:start="1683:27" pos:end="1683:29">ost</name><operator pos:start="1683:30" pos:end="1683:31">-&gt;</operator><name pos:start="1683:32" pos:end="1683:33">st</name><operator pos:start="1683:34" pos:end="1683:35">-&gt;</operator><name pos:start="1683:36" pos:end="1683:40">codec</name><operator pos:start="1683:41" pos:end="1683:42">-&gt;</operator><name pos:start="1683:43" pos:end="1683:57">subtitle_header</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1685:17" pos:end="1685:47"><expr pos:start="1685:17" pos:end="1685:46"><call pos:start="1685:17" pos:end="1685:46"><name pos:start="1685:17" pos:end="1685:23">av_free</name><argument_list pos:start="1685:24" pos:end="1685:46">(<argument pos:start="1685:25" pos:end="1685:45"><expr pos:start="1685:25" pos:end="1685:45"><name pos:start="1685:25" pos:end="1685:45"><name pos:start="1685:25" pos:end="1685:27">ost</name><operator pos:start="1685:28" pos:end="1685:29">-&gt;</operator><name pos:start="1685:30" pos:end="1685:37">pict_tmp</name><operator pos:start="1685:38" pos:end="1685:38">.</operator><name pos:start="1685:39" pos:end="1685:42">data</name><index pos:start="1685:43" pos:end="1685:45">[<expr pos:start="1685:44" pos:end="1685:44"><literal type="number" pos:start="1685:44" pos:end="1685:44">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1687:17" pos:end="1687:44"><expr pos:start="1687:17" pos:end="1687:43"><call pos:start="1687:17" pos:end="1687:43"><name pos:start="1687:17" pos:end="1687:23">av_free</name><argument_list pos:start="1687:24" pos:end="1687:43">(<argument pos:start="1687:25" pos:end="1687:42"><expr pos:start="1687:25" pos:end="1687:42"><name pos:start="1687:25" pos:end="1687:42"><name pos:start="1687:25" pos:end="1687:27">ost</name><operator pos:start="1687:28" pos:end="1687:29">-&gt;</operator><name pos:start="1687:30" pos:end="1687:42">forced_kf_pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1689:17" pos:end="1691:59"><if pos:start="1689:17" pos:end="1691:59">if <condition pos:start="1689:20" pos:end="1689:40">(<expr pos:start="1689:21" pos:end="1689:39"><name pos:start="1689:21" pos:end="1689:39"><name pos:start="1689:21" pos:end="1689:23">ost</name><operator pos:start="1689:24" pos:end="1689:25">-&gt;</operator><name pos:start="1689:26" pos:end="1689:39">video_resample</name></name></expr>)</condition><block type="pseudo" pos:start="1691:21" pos:end="1691:59"><block_content pos:start="1691:21" pos:end="1691:59">

                    <expr_stmt pos:start="1691:21" pos:end="1691:59"><expr pos:start="1691:21" pos:end="1691:58"><call pos:start="1691:21" pos:end="1691:58"><name pos:start="1691:21" pos:end="1691:35">sws_freeContext</name><argument_list pos:start="1691:36" pos:end="1691:58">(<argument pos:start="1691:37" pos:end="1691:57"><expr pos:start="1691:37" pos:end="1691:57"><name pos:start="1691:37" pos:end="1691:57"><name pos:start="1691:37" pos:end="1691:39">ost</name><operator pos:start="1691:40" pos:end="1691:41">-&gt;</operator><name pos:start="1691:42" pos:end="1691:57">img_resample_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="1693:17" pos:end="1695:56"><if pos:start="1693:17" pos:end="1695:56">if <condition pos:start="1693:20" pos:end="1693:34">(<expr pos:start="1693:21" pos:end="1693:33"><name pos:start="1693:21" pos:end="1693:33"><name pos:start="1693:21" pos:end="1693:23">ost</name><operator pos:start="1693:24" pos:end="1693:25">-&gt;</operator><name pos:start="1693:26" pos:end="1693:33">resample</name></name></expr>)</condition><block type="pseudo" pos:start="1695:21" pos:end="1695:56"><block_content pos:start="1695:21" pos:end="1695:56">

                    <expr_stmt pos:start="1695:21" pos:end="1695:56"><expr pos:start="1695:21" pos:end="1695:55"><call pos:start="1695:21" pos:end="1695:55"><name pos:start="1695:21" pos:end="1695:40">audio_resample_close</name><argument_list pos:start="1695:41" pos:end="1695:55">(<argument pos:start="1695:42" pos:end="1695:54"><expr pos:start="1695:42" pos:end="1695:54"><name pos:start="1695:42" pos:end="1695:54"><name pos:start="1695:42" pos:end="1695:44">ost</name><operator pos:start="1695:45" pos:end="1695:46">-&gt;</operator><name pos:start="1695:47" pos:end="1695:54">resample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="1697:17" pos:end="1699:61"><if pos:start="1697:17" pos:end="1699:61">if <condition pos:start="1697:20" pos:end="1697:38">(<expr pos:start="1697:21" pos:end="1697:37"><name pos:start="1697:21" pos:end="1697:37"><name pos:start="1697:21" pos:end="1697:23">ost</name><operator pos:start="1697:24" pos:end="1697:25">-&gt;</operator><name pos:start="1697:26" pos:end="1697:37">reformat_ctx</name></name></expr>)</condition><block type="pseudo" pos:start="1699:21" pos:end="1699:61"><block_content pos:start="1699:21" pos:end="1699:61">

                    <expr_stmt pos:start="1699:21" pos:end="1699:61"><expr pos:start="1699:21" pos:end="1699:60"><call pos:start="1699:21" pos:end="1699:60"><name pos:start="1699:21" pos:end="1699:41">av_audio_convert_free</name><argument_list pos:start="1699:42" pos:end="1699:60">(<argument pos:start="1699:43" pos:end="1699:59"><expr pos:start="1699:43" pos:end="1699:59"><name pos:start="1699:43" pos:end="1699:59"><name pos:start="1699:43" pos:end="1699:45">ost</name><operator pos:start="1699:46" pos:end="1699:47">-&gt;</operator><name pos:start="1699:48" pos:end="1699:59">reformat_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1701:17" pos:end="1701:29"><expr pos:start="1701:17" pos:end="1701:28"><call pos:start="1701:17" pos:end="1701:28"><name pos:start="1701:17" pos:end="1701:23">av_free</name><argument_list pos:start="1701:24" pos:end="1701:28">(<argument pos:start="1701:25" pos:end="1701:27"><expr pos:start="1701:25" pos:end="1701:27"><name pos:start="1701:25" pos:end="1701:27">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="1707:9" pos:end="1707:27"><expr pos:start="1707:9" pos:end="1707:26"><call pos:start="1707:9" pos:end="1707:26"><name pos:start="1707:9" pos:end="1707:15">av_free</name><argument_list pos:start="1707:16" pos:end="1707:26">(<argument pos:start="1707:17" pos:end="1707:25"><expr pos:start="1707:17" pos:end="1707:25"><name pos:start="1707:17" pos:end="1707:25">ost_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="1711:5" pos:end="1711:15">return <expr pos:start="1711:12" pos:end="1711:14"><name pos:start="1711:12" pos:end="1711:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
