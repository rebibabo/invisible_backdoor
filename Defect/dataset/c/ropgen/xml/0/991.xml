<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/991.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">pci_bridge_region_del</name><parameter_list pos:start="1:34" pos:end="1:69">(<parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:43">PCIBridge</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">br</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:68"><decl pos:start="1:50" pos:end="1:68"><type pos:start="1:50" pos:end="1:68"><name pos:start="1:50" pos:end="1:65">PCIBridgeWindows</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:68">w</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:27">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">pd</name> <init pos:start="5:19" pos:end="5:34">= <expr pos:start="5:21" pos:end="5:34"><call pos:start="5:21" pos:end="5:34"><name pos:start="5:21" pos:end="5:30">PCI_DEVICE</name><argument_list pos:start="5:31" pos:end="5:34">(<argument pos:start="5:32" pos:end="5:33"><expr pos:start="5:32" pos:end="5:33"><name pos:start="5:32" pos:end="5:33">br</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">PCIBus</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:18">parent</name> <init pos:start="7:20" pos:end="7:28">= <expr pos:start="7:22" pos:end="7:28"><name pos:start="7:22" pos:end="7:28"><name pos:start="7:22" pos:end="7:23">pd</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:28">bus</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:72"><expr pos:start="11:5" pos:end="11:71"><call pos:start="11:5" pos:end="11:71"><name pos:start="11:5" pos:end="11:31">memory_region_del_subregion</name><argument_list pos:start="11:32" pos:end="11:71">(<argument pos:start="11:33" pos:end="11:56"><expr pos:start="11:33" pos:end="11:56"><name pos:start="11:33" pos:end="11:56"><name pos:start="11:33" pos:end="11:38">parent</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:56">address_space_io</name></name></expr></argument>, <argument pos:start="11:59" pos:end="11:70"><expr pos:start="11:59" pos:end="11:70"><operator pos:start="11:59" pos:end="11:59">&amp;</operator><name pos:start="11:60" pos:end="11:70"><name pos:start="11:60" pos:end="11:60">w</name><operator pos:start="11:61" pos:end="11:62">-&gt;</operator><name pos:start="11:63" pos:end="11:70">alias_io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:74"><expr pos:start="13:5" pos:end="13:73"><call pos:start="13:5" pos:end="13:73"><name pos:start="13:5" pos:end="13:31">memory_region_del_subregion</name><argument_list pos:start="13:32" pos:end="13:73">(<argument pos:start="13:33" pos:end="13:57"><expr pos:start="13:33" pos:end="13:57"><name pos:start="13:33" pos:end="13:57"><name pos:start="13:33" pos:end="13:38">parent</name><operator pos:start="13:39" pos:end="13:40">-&gt;</operator><name pos:start="13:41" pos:end="13:57">address_space_mem</name></name></expr></argument>, <argument pos:start="13:60" pos:end="13:72"><expr pos:start="13:60" pos:end="13:72"><operator pos:start="13:60" pos:end="13:60">&amp;</operator><name pos:start="13:61" pos:end="13:72"><name pos:start="13:61" pos:end="13:61">w</name><operator pos:start="13:62" pos:end="13:63">-&gt;</operator><name pos:start="13:64" pos:end="13:72">alias_mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:79"><expr pos:start="15:5" pos:end="15:78"><call pos:start="15:5" pos:end="15:78"><name pos:start="15:5" pos:end="15:31">memory_region_del_subregion</name><argument_list pos:start="15:32" pos:end="15:78">(<argument pos:start="15:33" pos:end="15:57"><expr pos:start="15:33" pos:end="15:57"><name pos:start="15:33" pos:end="15:57"><name pos:start="15:33" pos:end="15:38">parent</name><operator pos:start="15:39" pos:end="15:40">-&gt;</operator><name pos:start="15:41" pos:end="15:57">address_space_mem</name></name></expr></argument>, <argument pos:start="15:60" pos:end="15:77"><expr pos:start="15:60" pos:end="15:77"><operator pos:start="15:60" pos:end="15:60">&amp;</operator><name pos:start="15:61" pos:end="15:77"><name pos:start="15:61" pos:end="15:61">w</name><operator pos:start="15:62" pos:end="15:63">-&gt;</operator><name pos:start="15:64" pos:end="15:77">alias_pref_mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><call pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:22">pci_unregister_vga</name><argument_list pos:start="17:23" pos:end="17:26">(<argument pos:start="17:24" pos:end="17:25"><expr pos:start="17:24" pos:end="17:25"><name pos:start="17:24" pos:end="17:25">pd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
