<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16901.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:36">net_tx_pkt_parse_headers</name><parameter_list pos:start="1:37" pos:end="1:58">(<parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:57"><name pos:start="1:38" pos:end="1:52"><name pos:start="1:38" pos:end="1:43">struct</name> <name pos:start="1:45" pos:end="1:52">NetTxPkt</name></name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="181:1">{<block_content pos:start="5:5" pos:end="179:16">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:16">iovec</name></name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:24">l2_hdr</name></decl>, <decl pos:start="5:27" pos:end="5:33"><type ref="prev" pos:start="5:5" pos:end="5:18"><modifier pos:start="5:27" pos:end="5:27">*</modifier></type><name pos:start="5:28" pos:end="5:33">l3_hdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:21">bytes_read</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:26">full_ip6hdr_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint16_t</name></type> <name pos:start="11:14" pos:end="11:21">l3_proto</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><call pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:15">(<argument pos:start="15:12" pos:end="15:14"><expr pos:start="15:12" pos:end="15:14"><name pos:start="15:12" pos:end="15:14">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:46"><expr pos:start="19:5" pos:end="19:45"><name pos:start="19:5" pos:end="19:10">l2_hdr</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <operator pos:start="19:14" pos:end="19:14">&amp;</operator><name pos:start="19:15" pos:end="19:45"><name pos:start="19:15" pos:end="19:17">pkt</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:22">vec</name><index pos:start="19:23" pos:end="19:45">[<expr pos:start="19:24" pos:end="19:44"><name pos:start="19:24" pos:end="19:44">NET_TX_PKT_L2HDR_FRAG</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:46"><expr pos:start="21:5" pos:end="21:45"><name pos:start="21:5" pos:end="21:10">l3_hdr</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <operator pos:start="21:14" pos:end="21:14">&amp;</operator><name pos:start="21:15" pos:end="21:45"><name pos:start="21:15" pos:end="21:17">pkt</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:22">vec</name><index pos:start="21:23" pos:end="21:45">[<expr pos:start="21:24" pos:end="21:44"><name pos:start="21:24" pos:end="21:44">NET_TX_PKT_L3HDR_FRAG</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="27:48"><expr pos:start="25:5" pos:end="27:47"><name pos:start="25:5" pos:end="25:14">bytes_read</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <call pos:start="25:18" pos:end="27:47"><name pos:start="25:18" pos:end="25:27">iov_to_buf</name><argument_list pos:start="25:28" pos:end="27:47">(<argument pos:start="25:29" pos:end="25:36"><expr pos:start="25:29" pos:end="25:36"><name pos:start="25:29" pos:end="25:36"><name pos:start="25:29" pos:end="25:31">pkt</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:36">raw</name></name></expr></argument>, <argument pos:start="25:39" pos:end="25:52"><expr pos:start="25:39" pos:end="25:52"><name pos:start="25:39" pos:end="25:52"><name pos:start="25:39" pos:end="25:41">pkt</name><operator pos:start="25:42" pos:end="25:43">-&gt;</operator><name pos:start="25:44" pos:end="25:52">raw_frags</name></name></expr></argument>, <argument pos:start="25:55" pos:end="25:55"><expr pos:start="25:55" pos:end="25:55"><literal type="number" pos:start="25:55" pos:end="25:55">0</literal></expr></argument>, <argument pos:start="25:58" pos:end="25:73"><expr pos:start="25:58" pos:end="25:73"><name pos:start="25:58" pos:end="25:73"><name pos:start="25:58" pos:end="25:63">l2_hdr</name><operator pos:start="25:64" pos:end="25:65">-&gt;</operator><name pos:start="25:66" pos:end="25:73">iov_base</name></name></expr></argument>,

                            <argument pos:start="27:29" pos:end="27:46"><expr pos:start="27:29" pos:end="27:46"><name pos:start="27:29" pos:end="27:46">ETH_MAX_L2_HDR_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:47">(<expr pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:18">bytes_read</name> <operator pos:start="29:20" pos:end="29:20">&lt;</operator> <sizeof pos:start="29:22" pos:end="29:46">sizeof<argument_list pos:start="29:28" pos:end="29:46">(<argument pos:start="29:29" pos:end="29:45"><expr pos:start="29:29" pos:end="29:45">struct <name pos:start="29:36" pos:end="29:45">eth_header</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="29:49" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:21">

        <expr_stmt pos:start="31:9" pos:end="31:28"><expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:14">l2_hdr</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:23">iov_len</name></name> <operator pos:start="31:25" pos:end="31:25">=</operator> <literal type="number" pos:start="31:27" pos:end="31:27">0</literal></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:21">return <expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:48"><expr pos:start="39:5" pos:end="39:47"><name pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:10">l2_hdr</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:19">iov_len</name></name> <operator pos:start="39:21" pos:end="39:21">=</operator> <sizeof pos:start="39:23" pos:end="39:47">sizeof<argument_list pos:start="39:29" pos:end="39:47">(<argument pos:start="39:30" pos:end="39:46"><expr pos:start="39:30" pos:end="39:46">struct <name pos:start="39:37" pos:end="39:46">eth_header</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <switch pos:start="41:5" pos:end="55:5">switch <condition pos:start="41:12" pos:end="41:68">(<expr pos:start="41:13" pos:end="41:67"><call pos:start="41:13" pos:end="41:67"><name pos:start="41:13" pos:end="41:23">be16_to_cpu</name><argument_list pos:start="41:24" pos:end="41:67">(<argument pos:start="41:25" pos:end="41:66"><expr pos:start="41:25" pos:end="41:66"><call pos:start="41:25" pos:end="41:57"><name pos:start="41:25" pos:end="41:39">PKT_GET_ETH_HDR</name><argument_list pos:start="41:40" pos:end="41:57">(<argument pos:start="41:41" pos:end="41:56"><expr pos:start="41:41" pos:end="41:56"><name pos:start="41:41" pos:end="41:56"><name pos:start="41:41" pos:end="41:46">l2_hdr</name><operator pos:start="41:47" pos:end="41:48">-&gt;</operator><name pos:start="41:49" pos:end="41:56">iov_base</name></name></expr></argument>)</argument_list></call><operator pos:start="41:58" pos:end="41:59">-&gt;</operator><name pos:start="41:60" pos:end="41:66">h_proto</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:70" pos:end="55:5">{<block_content pos:start="43:5" pos:end="53:14">

    <case pos:start="43:5" pos:end="43:20">case <expr pos:start="43:10" pos:end="43:19"><name pos:start="43:10" pos:end="43:19">ETH_P_VLAN</name></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:54"><expr pos:start="45:9" pos:end="45:53"><name pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:14">l2_hdr</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:23">iov_len</name></name> <operator pos:start="45:25" pos:end="45:26">+=</operator> <sizeof pos:start="45:28" pos:end="45:53">sizeof<argument_list pos:start="45:34" pos:end="45:53">(<argument pos:start="45:35" pos:end="45:52"><expr pos:start="45:35" pos:end="45:52">struct <name pos:start="45:42" pos:end="45:52">vlan_header</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:21">case <expr pos:start="49:10" pos:end="49:20"><name pos:start="49:10" pos:end="49:20">ETH_P_DVLAN</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:58"><expr pos:start="51:9" pos:end="51:57"><name pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:14">l2_hdr</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:23">iov_len</name></name> <operator pos:start="51:25" pos:end="51:26">+=</operator> <literal type="number" pos:start="51:28" pos:end="51:28">2</literal> <operator pos:start="51:30" pos:end="51:30">*</operator> <sizeof pos:start="51:32" pos:end="51:57">sizeof<argument_list pos:start="51:38" pos:end="51:57">(<argument pos:start="51:39" pos:end="51:56"><expr pos:start="51:39" pos:end="51:56">struct <name pos:start="51:46" pos:end="51:56">vlan_header</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:37">(<expr pos:start="59:9" pos:end="59:36"><name pos:start="59:9" pos:end="59:18">bytes_read</name> <operator pos:start="59:20" pos:end="59:20">&lt;</operator> <name pos:start="59:22" pos:end="59:36"><name pos:start="59:22" pos:end="59:27">l2_hdr</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:36">iov_len</name></name></expr>)</condition> <block pos:start="59:39" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:21">

        <expr_stmt pos:start="61:9" pos:end="61:28"><expr pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:23"><name pos:start="61:9" pos:end="61:14">l2_hdr</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:23">iov_len</name></name> <operator pos:start="61:25" pos:end="61:25">=</operator> <literal type="number" pos:start="61:27" pos:end="61:27">0</literal></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:21">return <expr pos:start="63:16" pos:end="63:20"><name pos:start="63:16" pos:end="63:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:67"><expr pos:start="69:5" pos:end="69:66"><name pos:start="69:5" pos:end="69:12">l3_proto</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <call pos:start="69:16" pos:end="69:66"><name pos:start="69:16" pos:end="69:31">eth_get_l3_proto</name><argument_list pos:start="69:32" pos:end="69:66">(<argument pos:start="69:33" pos:end="69:48"><expr pos:start="69:33" pos:end="69:48"><name pos:start="69:33" pos:end="69:48"><name pos:start="69:33" pos:end="69:38">l2_hdr</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:48">iov_base</name></name></expr></argument>, <argument pos:start="69:51" pos:end="69:65"><expr pos:start="69:51" pos:end="69:65"><name pos:start="69:51" pos:end="69:65"><name pos:start="69:51" pos:end="69:56">l2_hdr</name><operator pos:start="69:57" pos:end="69:58">-&gt;</operator><name pos:start="69:59" pos:end="69:65">iov_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="73:5" pos:end="171:5">switch <condition pos:start="73:12" pos:end="73:21">(<expr pos:start="73:13" pos:end="73:20"><name pos:start="73:13" pos:end="73:20">l3_proto</name></expr>)</condition> <block pos:start="73:23" pos:end="171:5">{<block_content pos:start="75:5" pos:end="169:14">

    <case pos:start="75:5" pos:end="75:18">case <expr pos:start="75:10" pos:end="75:17"><name pos:start="75:10" pos:end="75:17">ETH_P_IP</name></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:57"><expr pos:start="77:9" pos:end="77:56"><name pos:start="77:9" pos:end="77:24"><name pos:start="77:9" pos:end="77:14">l3_hdr</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:24">iov_base</name></name> <operator pos:start="77:26" pos:end="77:26">=</operator> <call pos:start="77:28" pos:end="77:56"><name pos:start="77:28" pos:end="77:35">g_malloc</name><argument_list pos:start="77:36" pos:end="77:56">(<argument pos:start="77:37" pos:end="77:55"><expr pos:start="77:37" pos:end="77:55"><name pos:start="77:37" pos:end="77:55">ETH_MAX_IP4_HDR_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="81:9" pos:end="83:76"><expr pos:start="81:9" pos:end="83:75"><name pos:start="81:9" pos:end="81:18">bytes_read</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <call pos:start="81:22" pos:end="83:75"><name pos:start="81:22" pos:end="81:31">iov_to_buf</name><argument_list pos:start="81:32" pos:end="83:75">(<argument pos:start="81:33" pos:end="81:40"><expr pos:start="81:33" pos:end="81:40"><name pos:start="81:33" pos:end="81:40"><name pos:start="81:33" pos:end="81:35">pkt</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:40">raw</name></name></expr></argument>, <argument pos:start="81:43" pos:end="81:56"><expr pos:start="81:43" pos:end="81:56"><name pos:start="81:43" pos:end="81:56"><name pos:start="81:43" pos:end="81:45">pkt</name><operator pos:start="81:46" pos:end="81:47">-&gt;</operator><name pos:start="81:48" pos:end="81:56">raw_frags</name></name></expr></argument>, <argument pos:start="81:59" pos:end="81:73"><expr pos:start="81:59" pos:end="81:73"><name pos:start="81:59" pos:end="81:73"><name pos:start="81:59" pos:end="81:64">l2_hdr</name><operator pos:start="81:65" pos:end="81:66">-&gt;</operator><name pos:start="81:67" pos:end="81:73">iov_len</name></name></expr></argument>,

                                <argument pos:start="83:33" pos:end="83:48"><expr pos:start="83:33" pos:end="83:48"><name pos:start="83:33" pos:end="83:48"><name pos:start="83:33" pos:end="83:38">l3_hdr</name><operator pos:start="83:39" pos:end="83:40">-&gt;</operator><name pos:start="83:41" pos:end="83:48">iov_base</name></name></expr></argument>, <argument pos:start="83:51" pos:end="83:74"><expr pos:start="83:51" pos:end="83:74"><sizeof pos:start="83:51" pos:end="83:74">sizeof<argument_list pos:start="83:57" pos:end="83:74">(<argument pos:start="83:58" pos:end="83:73"><expr pos:start="83:58" pos:end="83:73">struct <name pos:start="83:65" pos:end="83:73">ip_header</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="87:9" pos:end="93:9"><if pos:start="87:9" pos:end="93:9">if <condition pos:start="87:12" pos:end="87:50">(<expr pos:start="87:13" pos:end="87:49"><name pos:start="87:13" pos:end="87:22">bytes_read</name> <operator pos:start="87:24" pos:end="87:24">&lt;</operator> <sizeof pos:start="87:26" pos:end="87:49">sizeof<argument_list pos:start="87:32" pos:end="87:49">(<argument pos:start="87:33" pos:end="87:48"><expr pos:start="87:33" pos:end="87:48">struct <name pos:start="87:40" pos:end="87:48">ip_header</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="87:52" pos:end="93:9">{<block_content pos:start="89:13" pos:end="91:25">

            <expr_stmt pos:start="89:13" pos:end="89:32"><expr pos:start="89:13" pos:end="89:31"><name pos:start="89:13" pos:end="89:27"><name pos:start="89:13" pos:end="89:18">l3_hdr</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:27">iov_len</name></name> <operator pos:start="89:29" pos:end="89:29">=</operator> <literal type="number" pos:start="89:31" pos:end="89:31">0</literal></expr>;</expr_stmt>

            <return pos:start="91:13" pos:end="91:25">return <expr pos:start="91:20" pos:end="91:24"><name pos:start="91:20" pos:end="91:24">false</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="97:9" pos:end="97:59"><expr pos:start="97:9" pos:end="97:58"><name pos:start="97:9" pos:end="97:23"><name pos:start="97:9" pos:end="97:14">l3_hdr</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:23">iov_len</name></name> <operator pos:start="97:25" pos:end="97:25">=</operator> <call pos:start="97:27" pos:end="97:58"><name pos:start="97:27" pos:end="97:40">IP_HDR_GET_LEN</name><argument_list pos:start="97:41" pos:end="97:58">(<argument pos:start="97:42" pos:end="97:57"><expr pos:start="97:42" pos:end="97:57"><name pos:start="97:42" pos:end="97:57"><name pos:start="97:42" pos:end="97:47">l3_hdr</name><operator pos:start="97:48" pos:end="97:49">-&gt;</operator><name pos:start="97:50" pos:end="97:57">iov_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:69"><expr pos:start="99:9" pos:end="99:68"><name pos:start="99:9" pos:end="99:20"><name pos:start="99:9" pos:end="99:11">pkt</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:20">l4proto</name></name> <operator pos:start="99:22" pos:end="99:22">=</operator> <operator pos:start="99:24" pos:end="99:24">(</operator><operator pos:start="99:25" pos:end="99:25">(</operator>struct <name pos:start="99:33" pos:end="99:41">ip_header</name> <operator pos:start="99:43" pos:end="99:43">*</operator><operator pos:start="99:44" pos:end="99:44">)</operator> <name pos:start="99:46" pos:end="99:61"><name pos:start="99:46" pos:end="99:51">l3_hdr</name><operator pos:start="99:52" pos:end="99:53">-&gt;</operator><name pos:start="99:54" pos:end="99:61">iov_base</name></name><operator pos:start="99:62" pos:end="99:62">)</operator><operator pos:start="99:63" pos:end="99:64">-&gt;</operator><name pos:start="99:65" pos:end="99:68">ip_p</name></expr>;</expr_stmt>



        <comment type="block" pos:start="103:9" pos:end="103:44">/* copy optional IPv4 header data */</comment>

        <expr_stmt pos:start="105:9" pos:end="111:76"><expr pos:start="105:9" pos:end="111:75"><name pos:start="105:9" pos:end="105:18">bytes_read</name> <operator pos:start="105:20" pos:end="105:20">=</operator> <call pos:start="105:22" pos:end="111:75"><name pos:start="105:22" pos:end="105:31">iov_to_buf</name><argument_list pos:start="105:32" pos:end="111:75">(<argument pos:start="105:33" pos:end="105:40"><expr pos:start="105:33" pos:end="105:40"><name pos:start="105:33" pos:end="105:40"><name pos:start="105:33" pos:end="105:35">pkt</name><operator pos:start="105:36" pos:end="105:37">-&gt;</operator><name pos:start="105:38" pos:end="105:40">raw</name></name></expr></argument>, <argument pos:start="105:43" pos:end="105:56"><expr pos:start="105:43" pos:end="105:56"><name pos:start="105:43" pos:end="105:56"><name pos:start="105:43" pos:end="105:45">pkt</name><operator pos:start="105:46" pos:end="105:47">-&gt;</operator><name pos:start="105:48" pos:end="105:56">raw_frags</name></name></expr></argument>,

                                <argument pos:start="107:33" pos:end="107:74"><expr pos:start="107:33" pos:end="107:74"><name pos:start="107:33" pos:end="107:47"><name pos:start="107:33" pos:end="107:38">l2_hdr</name><operator pos:start="107:39" pos:end="107:40">-&gt;</operator><name pos:start="107:41" pos:end="107:47">iov_len</name></name> <operator pos:start="107:49" pos:end="107:49">+</operator> <sizeof pos:start="107:51" pos:end="107:74">sizeof<argument_list pos:start="107:57" pos:end="107:74">(<argument pos:start="107:58" pos:end="107:73"><expr pos:start="107:58" pos:end="107:73">struct <name pos:start="107:65" pos:end="107:73">ip_header</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                <argument pos:start="109:33" pos:end="109:75"><expr pos:start="109:33" pos:end="109:75"><name pos:start="109:33" pos:end="109:48"><name pos:start="109:33" pos:end="109:38">l3_hdr</name><operator pos:start="109:39" pos:end="109:40">-&gt;</operator><name pos:start="109:41" pos:end="109:48">iov_base</name></name> <operator pos:start="109:50" pos:end="109:50">+</operator> <sizeof pos:start="109:52" pos:end="109:75">sizeof<argument_list pos:start="109:58" pos:end="109:75">(<argument pos:start="109:59" pos:end="109:74"><expr pos:start="109:59" pos:end="109:74">struct <name pos:start="109:66" pos:end="109:74">ip_header</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                <argument pos:start="111:33" pos:end="111:74"><expr pos:start="111:33" pos:end="111:74"><name pos:start="111:33" pos:end="111:47"><name pos:start="111:33" pos:end="111:38">l3_hdr</name><operator pos:start="111:39" pos:end="111:40">-&gt;</operator><name pos:start="111:41" pos:end="111:47">iov_len</name></name> <operator pos:start="111:49" pos:end="111:49">-</operator> <sizeof pos:start="111:51" pos:end="111:74">sizeof<argument_list pos:start="111:57" pos:end="111:74">(<argument pos:start="111:58" pos:end="111:73"><expr pos:start="111:58" pos:end="111:73">struct <name pos:start="111:65" pos:end="111:73">ip_header</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="119:9"><if pos:start="113:9" pos:end="119:9">if <condition pos:start="113:12" pos:end="113:68">(<expr pos:start="113:13" pos:end="113:67"><name pos:start="113:13" pos:end="113:22">bytes_read</name> <operator pos:start="113:24" pos:end="113:24">&lt;</operator> <name pos:start="113:26" pos:end="113:40"><name pos:start="113:26" pos:end="113:31">l3_hdr</name><operator pos:start="113:32" pos:end="113:33">-&gt;</operator><name pos:start="113:34" pos:end="113:40">iov_len</name></name> <operator pos:start="113:42" pos:end="113:42">-</operator> <sizeof pos:start="113:44" pos:end="113:67">sizeof<argument_list pos:start="113:50" pos:end="113:67">(<argument pos:start="113:51" pos:end="113:66"><expr pos:start="113:51" pos:end="113:66">struct <name pos:start="113:58" pos:end="113:66">ip_header</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="113:70" pos:end="119:9">{<block_content pos:start="115:13" pos:end="117:25">

            <expr_stmt pos:start="115:13" pos:end="115:32"><expr pos:start="115:13" pos:end="115:31"><name pos:start="115:13" pos:end="115:27"><name pos:start="115:13" pos:end="115:18">l3_hdr</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:27">iov_len</name></name> <operator pos:start="115:29" pos:end="115:29">=</operator> <literal type="number" pos:start="115:31" pos:end="115:31">0</literal></expr>;</expr_stmt>

            <return pos:start="117:13" pos:end="117:25">return <expr pos:start="117:20" pos:end="117:24"><name pos:start="117:20" pos:end="117:24">false</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="121:9" pos:end="121:14">break;</break>



    <case pos:start="125:5" pos:end="125:20">case <expr pos:start="125:10" pos:end="125:19"><name pos:start="125:10" pos:end="125:19">ETH_P_IPV6</name></expr>:</case>

        <if_stmt pos:start="127:9" pos:end="135:9"><if pos:start="127:9" pos:end="135:9">if <condition pos:start="127:12" pos:end="129:64">(<expr pos:start="127:13" pos:end="129:63"><operator pos:start="127:13" pos:end="127:13">!</operator><call pos:start="127:14" pos:end="129:63"><name pos:start="127:14" pos:end="127:31">eth_parse_ipv6_hdr</name><argument_list pos:start="127:32" pos:end="129:63">(<argument pos:start="127:33" pos:end="127:40"><expr pos:start="127:33" pos:end="127:40"><name pos:start="127:33" pos:end="127:40"><name pos:start="127:33" pos:end="127:35">pkt</name><operator pos:start="127:36" pos:end="127:37">-&gt;</operator><name pos:start="127:38" pos:end="127:40">raw</name></name></expr></argument>, <argument pos:start="127:43" pos:end="127:56"><expr pos:start="127:43" pos:end="127:56"><name pos:start="127:43" pos:end="127:56"><name pos:start="127:43" pos:end="127:45">pkt</name><operator pos:start="127:46" pos:end="127:47">-&gt;</operator><name pos:start="127:48" pos:end="127:56">raw_frags</name></name></expr></argument>, <argument pos:start="127:59" pos:end="127:73"><expr pos:start="127:59" pos:end="127:73"><name pos:start="127:59" pos:end="127:73"><name pos:start="127:59" pos:end="127:64">l2_hdr</name><operator pos:start="127:65" pos:end="127:66">-&gt;</operator><name pos:start="127:67" pos:end="127:73">iov_len</name></name></expr></argument>,

                               <argument pos:start="129:32" pos:end="129:44"><expr pos:start="129:32" pos:end="129:44"><operator pos:start="129:32" pos:end="129:32">&amp;</operator><name pos:start="129:33" pos:end="129:44"><name pos:start="129:33" pos:end="129:35">pkt</name><operator pos:start="129:36" pos:end="129:37">-&gt;</operator><name pos:start="129:38" pos:end="129:44">l4proto</name></name></expr></argument>, <argument pos:start="129:47" pos:end="129:62"><expr pos:start="129:47" pos:end="129:62"><operator pos:start="129:47" pos:end="129:47">&amp;</operator><name pos:start="129:48" pos:end="129:62">full_ip6hdr_len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="129:66" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:25">

            <expr_stmt pos:start="131:13" pos:end="131:32"><expr pos:start="131:13" pos:end="131:31"><name pos:start="131:13" pos:end="131:27"><name pos:start="131:13" pos:end="131:18">l3_hdr</name><operator pos:start="131:19" pos:end="131:20">-&gt;</operator><name pos:start="131:21" pos:end="131:27">iov_len</name></name> <operator pos:start="131:29" pos:end="131:29">=</operator> <literal type="number" pos:start="131:31" pos:end="131:31">0</literal></expr>;</expr_stmt>

            <return pos:start="133:13" pos:end="133:25">return <expr pos:start="133:20" pos:end="133:24"><name pos:start="133:20" pos:end="133:24">false</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="139:9" pos:end="139:53"><expr pos:start="139:9" pos:end="139:52"><name pos:start="139:9" pos:end="139:24"><name pos:start="139:9" pos:end="139:14">l3_hdr</name><operator pos:start="139:15" pos:end="139:16">-&gt;</operator><name pos:start="139:17" pos:end="139:24">iov_base</name></name> <operator pos:start="139:26" pos:end="139:26">=</operator> <call pos:start="139:28" pos:end="139:52"><name pos:start="139:28" pos:end="139:35">g_malloc</name><argument_list pos:start="139:36" pos:end="139:52">(<argument pos:start="139:37" pos:end="139:51"><expr pos:start="139:37" pos:end="139:51"><name pos:start="139:37" pos:end="139:51">full_ip6hdr_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="143:9" pos:end="145:67"><expr pos:start="143:9" pos:end="145:66"><name pos:start="143:9" pos:end="143:18">bytes_read</name> <operator pos:start="143:20" pos:end="143:20">=</operator> <call pos:start="143:22" pos:end="145:66"><name pos:start="143:22" pos:end="143:31">iov_to_buf</name><argument_list pos:start="143:32" pos:end="145:66">(<argument pos:start="143:33" pos:end="143:40"><expr pos:start="143:33" pos:end="143:40"><name pos:start="143:33" pos:end="143:40"><name pos:start="143:33" pos:end="143:35">pkt</name><operator pos:start="143:36" pos:end="143:37">-&gt;</operator><name pos:start="143:38" pos:end="143:40">raw</name></name></expr></argument>, <argument pos:start="143:43" pos:end="143:56"><expr pos:start="143:43" pos:end="143:56"><name pos:start="143:43" pos:end="143:56"><name pos:start="143:43" pos:end="143:45">pkt</name><operator pos:start="143:46" pos:end="143:47">-&gt;</operator><name pos:start="143:48" pos:end="143:56">raw_frags</name></name></expr></argument>, <argument pos:start="143:59" pos:end="143:73"><expr pos:start="143:59" pos:end="143:73"><name pos:start="143:59" pos:end="143:73"><name pos:start="143:59" pos:end="143:64">l2_hdr</name><operator pos:start="143:65" pos:end="143:66">-&gt;</operator><name pos:start="143:67" pos:end="143:73">iov_len</name></name></expr></argument>,

                                <argument pos:start="145:33" pos:end="145:48"><expr pos:start="145:33" pos:end="145:48"><name pos:start="145:33" pos:end="145:48"><name pos:start="145:33" pos:end="145:38">l3_hdr</name><operator pos:start="145:39" pos:end="145:40">-&gt;</operator><name pos:start="145:41" pos:end="145:48">iov_base</name></name></expr></argument>, <argument pos:start="145:51" pos:end="145:65"><expr pos:start="145:51" pos:end="145:65"><name pos:start="145:51" pos:end="145:65">full_ip6hdr_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="149:9" pos:end="159:9"><if pos:start="149:9" pos:end="155:9">if <condition pos:start="149:12" pos:end="149:41">(<expr pos:start="149:13" pos:end="149:40"><name pos:start="149:13" pos:end="149:22">bytes_read</name> <operator pos:start="149:24" pos:end="149:24">&lt;</operator> <name pos:start="149:26" pos:end="149:40">full_ip6hdr_len</name></expr>)</condition> <block pos:start="149:43" pos:end="155:9">{<block_content pos:start="151:13" pos:end="153:25">

            <expr_stmt pos:start="151:13" pos:end="151:32"><expr pos:start="151:13" pos:end="151:31"><name pos:start="151:13" pos:end="151:27"><name pos:start="151:13" pos:end="151:18">l3_hdr</name><operator pos:start="151:19" pos:end="151:20">-&gt;</operator><name pos:start="151:21" pos:end="151:27">iov_len</name></name> <operator pos:start="151:29" pos:end="151:29">=</operator> <literal type="number" pos:start="151:31" pos:end="151:31">0</literal></expr>;</expr_stmt>

            <return pos:start="153:13" pos:end="153:25">return <expr pos:start="153:20" pos:end="153:24"><name pos:start="153:20" pos:end="153:24">false</name></expr>;</return>

        </block_content>}</block></if> <else pos:start="155:11" pos:end="159:9">else <block pos:start="155:16" pos:end="159:9">{<block_content pos:start="157:13" pos:end="157:46">

            <expr_stmt pos:start="157:13" pos:end="157:46"><expr pos:start="157:13" pos:end="157:45"><name pos:start="157:13" pos:end="157:27"><name pos:start="157:13" pos:end="157:18">l3_hdr</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:27">iov_len</name></name> <operator pos:start="157:29" pos:end="157:29">=</operator> <name pos:start="157:31" pos:end="157:45">full_ip6hdr_len</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="161:9" pos:end="161:14">break;</break>



    <default pos:start="165:5" pos:end="165:12">default:</default>

        <expr_stmt pos:start="167:9" pos:end="167:28"><expr pos:start="167:9" pos:end="167:27"><name pos:start="167:9" pos:end="167:23"><name pos:start="167:9" pos:end="167:14">l3_hdr</name><operator pos:start="167:15" pos:end="167:16">-&gt;</operator><name pos:start="167:17" pos:end="167:23">iov_len</name></name> <operator pos:start="167:25" pos:end="167:25">=</operator> <literal type="number" pos:start="167:27" pos:end="167:27">0</literal></expr>;</expr_stmt>

        <break pos:start="169:9" pos:end="169:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="175:5" pos:end="175:38"><expr pos:start="175:5" pos:end="175:37"><call pos:start="175:5" pos:end="175:37"><name pos:start="175:5" pos:end="175:32">net_tx_pkt_calculate_hdr_len</name><argument_list pos:start="175:33" pos:end="175:37">(<argument pos:start="175:34" pos:end="175:36"><expr pos:start="175:34" pos:end="175:36"><name pos:start="175:34" pos:end="175:36">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:61"><expr pos:start="177:5" pos:end="177:60"><name pos:start="177:5" pos:end="177:20"><name pos:start="177:5" pos:end="177:7">pkt</name><operator pos:start="177:8" pos:end="177:9">-&gt;</operator><name pos:start="177:10" pos:end="177:20">packet_type</name></name> <operator pos:start="177:22" pos:end="177:22">=</operator> <call pos:start="177:24" pos:end="177:60"><name pos:start="177:24" pos:end="177:42">get_eth_packet_type</name><argument_list pos:start="177:43" pos:end="177:60">(<argument pos:start="177:44" pos:end="177:59"><expr pos:start="177:44" pos:end="177:59"><name pos:start="177:44" pos:end="177:59"><name pos:start="177:44" pos:end="177:49">l2_hdr</name><operator pos:start="177:50" pos:end="177:51">-&gt;</operator><name pos:start="177:52" pos:end="177:59">iov_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="179:5" pos:end="179:16">return <expr pos:start="179:12" pos:end="179:15"><name pos:start="179:12" pos:end="179:15">true</name></expr>;</return>

</block_content>}</block></function>
</unit>
