<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15487.c" pos:tabs="8"><function pos:start="1:1" pos:end="183:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">write_manifest</name><parameter_list pos:start="1:26" pos:end="1:56">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:55"><decl pos:start="1:47" pos:end="1:55"><type pos:start="1:47" pos:end="1:55"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:55">final</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="183:1">{<block_content pos:start="5:5" pos:end="181:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DASHContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">c</name> <init pos:start="5:20" pos:end="5:33">= <expr pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:22">s</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:28"><name pos:start="9:10" pos:end="9:22">temp_filename</name><index pos:start="9:23" pos:end="9:28">[<expr pos:start="9:24" pos:end="9:27"><literal type="number" pos:start="9:24" pos:end="9:27">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>, <decl pos:start="11:14" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:61"><decl pos:start="13:5" pos:end="13:60"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:21">proto</name> <init pos:start="13:23" pos:end="13:60">= <expr pos:start="13:25" pos:end="13:60"><call pos:start="13:25" pos:end="13:60"><name pos:start="13:25" pos:end="13:47">avio_find_protocol_name</name><argument_list pos:start="13:48" pos:end="13:60">(<argument pos:start="13:49" pos:end="13:59"><expr pos:start="13:49" pos:end="13:59"><name pos:start="13:49" pos:end="13:59"><name pos:start="13:49" pos:end="13:49">s</name><operator pos:start="13:50" pos:end="13:51">-&gt;</operator><name pos:start="13:52" pos:end="13:59">filename</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:53"><decl pos:start="15:5" pos:end="15:52"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">use_rename</name> <init pos:start="15:20" pos:end="15:52">= <expr pos:start="15:22" pos:end="15:52"><name pos:start="15:22" pos:end="15:26">proto</name> <operator pos:start="15:28" pos:end="15:29">&amp;&amp;</operator> <operator pos:start="15:31" pos:end="15:31">!</operator><call pos:start="15:32" pos:end="15:52"><name pos:start="15:32" pos:end="15:37">strcmp</name><argument_list pos:start="15:38" pos:end="15:52">(<argument pos:start="15:39" pos:end="15:43"><expr pos:start="15:39" pos:end="15:43"><name pos:start="15:39" pos:end="15:43">proto</name></expr></argument>, <argument pos:start="15:46" pos:end="15:51"><expr pos:start="15:46" pos:end="15:51"><literal type="string" pos:start="15:46" pos:end="15:51">"file"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:44"><decl pos:start="17:5" pos:end="17:43"><type pos:start="17:5" pos:end="17:23"><specifier pos:start="17:5" pos:end="17:10">static</specifier> <name pos:start="17:12" pos:end="17:19">unsigned</name> <name pos:start="17:21" pos:end="17:23">int</name></type> <name pos:start="17:25" pos:end="17:39">warned_non_file</name> <init pos:start="17:41" pos:end="17:43">= <expr pos:start="17:43" pos:end="17:43"><literal type="number" pos:start="17:43" pos:end="17:43">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:74"><decl pos:start="19:5" pos:end="19:73"><type pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:21">AVDictionaryEntry</name> <modifier pos:start="19:23" pos:end="19:23">*</modifier></type><name pos:start="19:24" pos:end="19:28">title</name> <init pos:start="19:30" pos:end="19:73">= <expr pos:start="19:32" pos:end="19:73"><call pos:start="19:32" pos:end="19:73"><name pos:start="19:32" pos:end="19:42">av_dict_get</name><argument_list pos:start="19:43" pos:end="19:73">(<argument pos:start="19:44" pos:end="19:54"><expr pos:start="19:44" pos:end="19:54"><name pos:start="19:44" pos:end="19:54"><name pos:start="19:44" pos:end="19:44">s</name><operator pos:start="19:45" pos:end="19:46">-&gt;</operator><name pos:start="19:47" pos:end="19:54">metadata</name></name></expr></argument>, <argument pos:start="19:57" pos:end="19:63"><expr pos:start="19:57" pos:end="19:63"><literal type="string" pos:start="19:57" pos:end="19:63">"title"</literal></expr></argument>, <argument pos:start="19:66" pos:end="19:69"><expr pos:start="19:66" pos:end="19:69"><name pos:start="19:66" pos:end="19:69">NULL</name></expr></argument>, <argument pos:start="19:72" pos:end="19:72"><expr pos:start="19:72" pos:end="19:72"><literal type="number" pos:start="19:72" pos:end="19:72">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:128"><if pos:start="23:5" pos:end="25:128">if <condition pos:start="23:8" pos:end="23:42">(<expr pos:start="23:9" pos:end="23:41"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:19">use_rename</name> <operator pos:start="23:21" pos:end="23:22">&amp;&amp;</operator> <operator pos:start="23:24" pos:end="23:24">!</operator><name pos:start="23:25" pos:end="23:39">warned_non_file</name><operator pos:start="23:40" pos:end="23:41">++</operator></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:128"><block_content pos:start="25:9" pos:end="25:128">

        <expr_stmt pos:start="25:9" pos:end="25:128"><expr pos:start="25:9" pos:end="25:127"><call pos:start="25:9" pos:end="25:127"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:127">(<argument pos:start="25:16" pos:end="25:16"><expr pos:start="25:16" pos:end="25:16"><name pos:start="25:16" pos:end="25:16">s</name></expr></argument>, <argument pos:start="25:19" pos:end="25:30"><expr pos:start="25:19" pos:end="25:30"><name pos:start="25:19" pos:end="25:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:33" pos:end="25:126"><expr pos:start="25:33" pos:end="25:126"><literal type="string" pos:start="25:33" pos:end="25:126">"Cannot use rename on non file protocol, this may lead to races and temporary partial files\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:94"><expr pos:start="29:5" pos:end="29:93"><call pos:start="29:5" pos:end="29:93"><name pos:start="29:5" pos:end="29:12">snprintf</name><argument_list pos:start="29:13" pos:end="29:93">(<argument pos:start="29:14" pos:end="29:26"><expr pos:start="29:14" pos:end="29:26"><name pos:start="29:14" pos:end="29:26">temp_filename</name></expr></argument>, <argument pos:start="29:29" pos:end="29:49"><expr pos:start="29:29" pos:end="29:49"><sizeof pos:start="29:29" pos:end="29:49">sizeof<argument_list pos:start="29:35" pos:end="29:49">(<argument pos:start="29:36" pos:end="29:48"><expr pos:start="29:36" pos:end="29:48"><name pos:start="29:36" pos:end="29:48">temp_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:52" pos:end="29:79"><expr pos:start="29:52" pos:end="29:79"><ternary pos:start="29:52" pos:end="29:79"><condition pos:start="29:52" pos:end="29:63"><expr pos:start="29:52" pos:end="29:61"><name pos:start="29:52" pos:end="29:61">use_rename</name></expr> ?</condition><then pos:start="29:65" pos:end="29:72"> <expr pos:start="29:65" pos:end="29:72"><literal type="string" pos:start="29:65" pos:end="29:72">"%s.tmp"</literal></expr> </then><else pos:start="29:74" pos:end="29:79">: <expr pos:start="29:76" pos:end="29:79"><literal type="string" pos:start="29:76" pos:end="29:79">"%s"</literal></expr></else></ternary></expr></argument>, <argument pos:start="29:82" pos:end="29:92"><expr pos:start="29:82" pos:end="29:92"><name pos:start="29:82" pos:end="29:92"><name pos:start="29:82" pos:end="29:82">s</name><operator pos:start="29:83" pos:end="29:84">-&gt;</operator><name pos:start="29:85" pos:end="29:92">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:68"><expr pos:start="31:5" pos:end="31:67"><name pos:start="31:5" pos:end="31:7">ret</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:67"><name pos:start="31:11" pos:end="31:20"><name pos:start="31:11" pos:end="31:11">s</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:20">io_open</name></name><argument_list pos:start="31:21" pos:end="31:67">(<argument pos:start="31:22" pos:end="31:22"><expr pos:start="31:22" pos:end="31:22"><name pos:start="31:22" pos:end="31:22">s</name></expr></argument>, <argument pos:start="31:25" pos:end="31:28"><expr pos:start="31:25" pos:end="31:28"><operator pos:start="31:25" pos:end="31:25">&amp;</operator><name pos:start="31:26" pos:end="31:28">out</name></expr></argument>, <argument pos:start="31:31" pos:end="31:43"><expr pos:start="31:31" pos:end="31:43"><name pos:start="31:31" pos:end="31:43">temp_filename</name></expr></argument>, <argument pos:start="31:46" pos:end="31:60"><expr pos:start="31:46" pos:end="31:60"><name pos:start="31:46" pos:end="31:60">AVIO_FLAG_WRITE</name></expr></argument>, <argument pos:start="31:63" pos:end="31:66"><expr pos:start="31:63" pos:end="31:66"><name pos:start="31:63" pos:end="31:66">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:16">(<expr pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">&lt;</operator> <literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>)</condition> <block pos:start="33:18" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:19">

        <expr_stmt pos:start="35:9" pos:end="35:82"><expr pos:start="35:9" pos:end="35:81"><call pos:start="35:9" pos:end="35:81"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:81">(<argument pos:start="35:16" pos:end="35:16"><expr pos:start="35:16" pos:end="35:16"><name pos:start="35:16" pos:end="35:16">s</name></expr></argument>, <argument pos:start="35:19" pos:end="35:30"><expr pos:start="35:19" pos:end="35:30"><name pos:start="35:19" pos:end="35:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:33" pos:end="35:65"><expr pos:start="35:33" pos:end="35:65"><literal type="string" pos:start="35:33" pos:end="35:65">"Unable to open %s for writing\n"</literal></expr></argument>, <argument pos:start="35:68" pos:end="35:80"><expr pos:start="35:68" pos:end="35:80"><name pos:start="35:68" pos:end="35:80">temp_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:19">return <expr pos:start="37:16" pos:end="37:18"><name pos:start="37:16" pos:end="37:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:69"><expr pos:start="41:5" pos:end="41:68"><call pos:start="41:5" pos:end="41:68"><name pos:start="41:5" pos:end="41:15">avio_printf</name><argument_list pos:start="41:16" pos:end="41:68">(<argument pos:start="41:17" pos:end="41:19"><expr pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:19">out</name></expr></argument>, <argument pos:start="41:22" pos:end="41:67"><expr pos:start="41:22" pos:end="41:67"><literal type="string" pos:start="41:22" pos:end="41:67">"&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="53:65"><expr pos:start="43:5" pos:end="53:64"><call pos:start="43:5" pos:end="53:64"><name pos:start="43:5" pos:end="43:15">avio_printf</name><argument_list pos:start="43:16" pos:end="53:64">(<argument pos:start="43:17" pos:end="43:19"><expr pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:19">out</name></expr></argument>, <argument pos:start="43:22" pos:end="53:33"><expr pos:start="43:22" pos:end="53:33"><literal type="string" pos:start="43:22" pos:end="43:85">"&lt;MPD xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"</literal>

                <literal type="string" pos:start="45:17" pos:end="45:61">"\txmlns=\"urn:mpeg:dash:schema:mpd:2011\"\n"</literal>

                <literal type="string" pos:start="47:17" pos:end="47:66">"\txmlns:xlink=\"http://www.w3.org/1999/xlink\"\n"</literal>

                <literal type="string" pos:start="49:17" pos:end="49:167">"\txsi:schemaLocation=\"urn:mpeg:DASH:schema:MPD:2011 http://standards.iso.org/ittf/PubliclyAvailableStandards/MPEG-DASH_schema_files/DASH-MPD.xsd\"\n"</literal>

                <literal type="string" pos:start="51:17" pos:end="51:72">"\tprofiles=\"urn:mpeg:dash:profile:isoff-live:2011\"\n"</literal>

                <literal type="string" pos:start="53:17" pos:end="53:33">"\ttype=\"%s\"\n"</literal></expr></argument>, <argument pos:start="53:36" pos:end="53:63"><expr pos:start="53:36" pos:end="53:63"><ternary pos:start="53:36" pos:end="53:63"><condition pos:start="53:36" pos:end="53:42"><expr pos:start="53:36" pos:end="53:40"><name pos:start="53:36" pos:end="53:40">final</name></expr> ?</condition><then pos:start="53:44" pos:end="53:51"> <expr pos:start="53:44" pos:end="53:51"><literal type="string" pos:start="53:44" pos:end="53:51">"static"</literal></expr> </then><else pos:start="53:53" pos:end="53:63">: <expr pos:start="53:55" pos:end="53:63"><literal type="string" pos:start="53:55" pos:end="53:63">"dynamic"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="103:5"><if pos:start="55:5" pos:end="63:5">if <condition pos:start="55:8" pos:end="55:14">(<expr pos:start="55:9" pos:end="55:13"><name pos:start="55:9" pos:end="55:13">final</name></expr>)</condition> <block pos:start="55:16" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:33">

        <expr_stmt pos:start="57:9" pos:end="57:59"><expr pos:start="57:9" pos:end="57:58"><call pos:start="57:9" pos:end="57:58"><name pos:start="57:9" pos:end="57:19">avio_printf</name><argument_list pos:start="57:20" pos:end="57:58">(<argument pos:start="57:21" pos:end="57:23"><expr pos:start="57:21" pos:end="57:23"><name pos:start="57:21" pos:end="57:23">out</name></expr></argument>, <argument pos:start="57:26" pos:end="57:57"><expr pos:start="57:26" pos:end="57:57"><literal type="string" pos:start="57:26" pos:end="57:57">"\tmediaPresentationDuration=\""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:43"><expr pos:start="59:9" pos:end="59:42"><call pos:start="59:9" pos:end="59:42"><name pos:start="59:9" pos:end="59:18">write_time</name><argument_list pos:start="59:19" pos:end="59:42">(<argument pos:start="59:20" pos:end="59:22"><expr pos:start="59:20" pos:end="59:22"><name pos:start="59:20" pos:end="59:22">out</name></expr></argument>, <argument pos:start="59:25" pos:end="59:41"><expr pos:start="59:25" pos:end="59:41"><name pos:start="59:25" pos:end="59:41"><name pos:start="59:25" pos:end="59:25">c</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:41">total_duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:33"><expr pos:start="61:9" pos:end="61:32"><call pos:start="61:9" pos:end="61:32"><name pos:start="61:9" pos:end="61:19">avio_printf</name><argument_list pos:start="61:20" pos:end="61:32">(<argument pos:start="61:21" pos:end="61:23"><expr pos:start="61:21" pos:end="61:23"><name pos:start="61:21" pos:end="61:23">out</name></expr></argument>, <argument pos:start="61:26" pos:end="61:31"><expr pos:start="61:26" pos:end="61:31"><literal type="string" pos:start="61:26" pos:end="61:31">"\"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="63:7" pos:end="103:5">else <block pos:start="63:12" pos:end="103:5">{<block_content pos:start="65:9" pos:end="101:9">

        <decl_stmt pos:start="65:9" pos:end="65:64"><decl pos:start="65:9" pos:end="65:63"><type pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:15">int64_t</name></type> <name pos:start="65:17" pos:end="65:29">update_period</name> <init pos:start="65:31" pos:end="65:63">= <expr pos:start="65:33" pos:end="65:63"><name pos:start="65:33" pos:end="65:48"><name pos:start="65:33" pos:end="65:33">c</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:48">last_duration</name></name> <operator pos:start="65:50" pos:end="65:50">/</operator> <name pos:start="65:52" pos:end="65:63">AV_TIME_BASE</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="67:9" pos:end="67:26"><decl pos:start="67:9" pos:end="67:25"><type pos:start="67:9" pos:end="67:12"><name pos:start="67:9" pos:end="67:12">char</name></type> <name pos:start="67:14" pos:end="67:25"><name pos:start="67:14" pos:end="67:20">now_str</name><index pos:start="67:21" pos:end="67:25">[<expr pos:start="67:22" pos:end="67:24"><literal type="number" pos:start="67:22" pos:end="67:24">100</literal></expr>]</index></name></decl>;</decl_stmt>

        <if_stmt pos:start="69:9" pos:end="71:32"><if pos:start="69:9" pos:end="71:32">if <condition pos:start="69:12" pos:end="69:48">(<expr pos:start="69:13" pos:end="69:47"><name pos:start="69:13" pos:end="69:27"><name pos:start="69:13" pos:end="69:13">c</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:27">use_template</name></name> <operator pos:start="69:29" pos:end="69:30">&amp;&amp;</operator> <operator pos:start="69:32" pos:end="69:32">!</operator><name pos:start="69:33" pos:end="69:47"><name pos:start="69:33" pos:end="69:33">c</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:47">use_timeline</name></name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:32"><block_content pos:start="71:13" pos:end="71:32">

            <expr_stmt pos:start="71:13" pos:end="71:32"><expr pos:start="71:13" pos:end="71:31"><name pos:start="71:13" pos:end="71:25">update_period</name> <operator pos:start="71:27" pos:end="71:27">=</operator> <literal type="number" pos:start="71:29" pos:end="71:31">500</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:84"><expr pos:start="73:9" pos:end="73:83"><call pos:start="73:9" pos:end="73:83"><name pos:start="73:9" pos:end="73:19">avio_printf</name><argument_list pos:start="73:20" pos:end="73:83">(<argument pos:start="73:21" pos:end="73:23"><expr pos:start="73:21" pos:end="73:23"><name pos:start="73:21" pos:end="73:23">out</name></expr></argument>, <argument pos:start="73:26" pos:end="73:67"><expr pos:start="73:26" pos:end="73:67"><literal type="string" pos:start="73:26" pos:end="73:54">"\tminimumUpdatePeriod=\"PT%"</literal><name pos:start="73:55" pos:end="73:60">PRId64</name><literal type="string" pos:start="73:61" pos:end="73:67">"S\"\n"</literal></expr></argument>, <argument pos:start="73:70" pos:end="73:82"><expr pos:start="73:70" pos:end="73:82"><name pos:start="73:70" pos:end="73:82">update_period</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:109"><expr pos:start="75:9" pos:end="75:108"><call pos:start="75:9" pos:end="75:108"><name pos:start="75:9" pos:end="75:19">avio_printf</name><argument_list pos:start="75:20" pos:end="75:108">(<argument pos:start="75:21" pos:end="75:23"><expr pos:start="75:21" pos:end="75:23"><name pos:start="75:21" pos:end="75:23">out</name></expr></argument>, <argument pos:start="75:26" pos:end="75:74"><expr pos:start="75:26" pos:end="75:74"><literal type="string" pos:start="75:26" pos:end="75:61">"\tsuggestedPresentationDelay=\"PT%"</literal><name pos:start="75:62" pos:end="75:67">PRId64</name><literal type="string" pos:start="75:68" pos:end="75:74">"S\"\n"</literal></expr></argument>, <argument pos:start="75:77" pos:end="75:107"><expr pos:start="75:77" pos:end="75:107"><name pos:start="75:77" pos:end="75:92"><name pos:start="75:77" pos:end="75:77">c</name><operator pos:start="75:78" pos:end="75:79">-&gt;</operator><name pos:start="75:80" pos:end="75:92">last_duration</name></name> <operator pos:start="75:94" pos:end="75:94">/</operator> <name pos:start="75:96" pos:end="75:107">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="81:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:97">(<expr pos:start="77:13" pos:end="77:96"><operator pos:start="77:13" pos:end="77:13">!</operator><name pos:start="77:14" pos:end="77:42"><name pos:start="77:14" pos:end="77:14">c</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:39">availability_start_time</name><index pos:start="77:40" pos:end="77:42">[<expr pos:start="77:41" pos:end="77:41"><literal type="number" pos:start="77:41" pos:end="77:41">0</literal></expr>]</index></name> <operator pos:start="77:44" pos:end="77:45">&amp;&amp;</operator> <name pos:start="77:47" pos:end="77:59"><name pos:start="77:47" pos:end="77:47">s</name><operator pos:start="77:48" pos:end="77:49">-&gt;</operator><name pos:start="77:50" pos:end="77:59">nb_streams</name></name> <operator pos:start="77:61" pos:end="77:61">&gt;</operator> <literal type="number" pos:start="77:63" pos:end="77:63">0</literal> <operator pos:start="77:65" pos:end="77:66">&amp;&amp;</operator> <name pos:start="77:68" pos:end="77:80"><name pos:start="77:68" pos:end="77:68">c</name><operator pos:start="77:69" pos:end="77:70">-&gt;</operator><name pos:start="77:71" pos:end="77:77">streams</name><index pos:start="77:78" pos:end="77:80">[<expr pos:start="77:79" pos:end="77:79"><literal type="number" pos:start="77:79" pos:end="77:79">0</literal></expr>]</index></name><operator pos:start="77:81" pos:end="77:81">.</operator><name pos:start="77:82" pos:end="77:92">nb_segments</name> <operator pos:start="77:94" pos:end="77:94">&gt;</operator> <literal type="number" pos:start="77:96" pos:end="77:96">0</literal></expr>)</condition> <block pos:start="77:99" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:92">

            <expr_stmt pos:start="79:13" pos:end="79:92"><expr pos:start="79:13" pos:end="79:91"><call pos:start="79:13" pos:end="79:91"><name pos:start="79:13" pos:end="79:27">format_date_now</name><argument_list pos:start="79:28" pos:end="79:91">(<argument pos:start="79:29" pos:end="79:54"><expr pos:start="79:29" pos:end="79:54"><name pos:start="79:29" pos:end="79:54"><name pos:start="79:29" pos:end="79:29">c</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:54">availability_start_time</name></name></expr></argument>, <argument pos:start="79:57" pos:end="79:90"><expr pos:start="79:57" pos:end="79:90"><sizeof pos:start="79:57" pos:end="79:90">sizeof<argument_list pos:start="79:63" pos:end="79:90">(<argument pos:start="79:64" pos:end="79:89"><expr pos:start="79:64" pos:end="79:89"><name pos:start="79:64" pos:end="79:89"><name pos:start="79:64" pos:end="79:64">c</name><operator pos:start="79:65" pos:end="79:66">-&gt;</operator><name pos:start="79:67" pos:end="79:89">availability_start_time</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="83:9" pos:end="85:93"><if pos:start="83:9" pos:end="85:93">if <condition pos:start="83:12" pos:end="83:42">(<expr pos:start="83:13" pos:end="83:41"><name pos:start="83:13" pos:end="83:41"><name pos:start="83:13" pos:end="83:13">c</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:38">availability_start_time</name><index pos:start="83:39" pos:end="83:41">[<expr pos:start="83:40" pos:end="83:40"><literal type="number" pos:start="83:40" pos:end="83:40">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:93"><block_content pos:start="85:13" pos:end="85:93">

            <expr_stmt pos:start="85:13" pos:end="85:93"><expr pos:start="85:13" pos:end="85:92"><call pos:start="85:13" pos:end="85:92"><name pos:start="85:13" pos:end="85:23">avio_printf</name><argument_list pos:start="85:24" pos:end="85:92">(<argument pos:start="85:25" pos:end="85:27"><expr pos:start="85:25" pos:end="85:27"><name pos:start="85:25" pos:end="85:27">out</name></expr></argument>, <argument pos:start="85:30" pos:end="85:63"><expr pos:start="85:30" pos:end="85:63"><literal type="string" pos:start="85:30" pos:end="85:63">"\tavailabilityStartTime=\"%s\"\n"</literal></expr></argument>, <argument pos:start="85:66" pos:end="85:91"><expr pos:start="85:66" pos:end="85:91"><name pos:start="85:66" pos:end="85:91"><name pos:start="85:66" pos:end="85:66">c</name><operator pos:start="85:67" pos:end="85:68">-&gt;</operator><name pos:start="85:69" pos:end="85:91">availability_start_time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:50"><expr pos:start="87:9" pos:end="87:49"><call pos:start="87:9" pos:end="87:49"><name pos:start="87:9" pos:end="87:23">format_date_now</name><argument_list pos:start="87:24" pos:end="87:49">(<argument pos:start="87:25" pos:end="87:31"><expr pos:start="87:25" pos:end="87:31"><name pos:start="87:25" pos:end="87:31">now_str</name></expr></argument>, <argument pos:start="87:34" pos:end="87:48"><expr pos:start="87:34" pos:end="87:48"><sizeof pos:start="87:34" pos:end="87:48">sizeof<argument_list pos:start="87:40" pos:end="87:48">(<argument pos:start="87:41" pos:end="87:47"><expr pos:start="87:41" pos:end="87:47"><name pos:start="87:41" pos:end="87:47">now_str</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="91:64"><if pos:start="89:9" pos:end="91:64">if <condition pos:start="89:12" pos:end="89:23">(<expr pos:start="89:13" pos:end="89:22"><name pos:start="89:13" pos:end="89:22"><name pos:start="89:13" pos:end="89:19">now_str</name><index pos:start="89:20" pos:end="89:22">[<expr pos:start="89:21" pos:end="89:21"><literal type="number" pos:start="89:21" pos:end="89:21">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:64"><block_content pos:start="91:13" pos:end="91:64">

            <expr_stmt pos:start="91:13" pos:end="91:64"><expr pos:start="91:13" pos:end="91:63"><call pos:start="91:13" pos:end="91:63"><name pos:start="91:13" pos:end="91:23">avio_printf</name><argument_list pos:start="91:24" pos:end="91:63">(<argument pos:start="91:25" pos:end="91:27"><expr pos:start="91:25" pos:end="91:27"><name pos:start="91:25" pos:end="91:27">out</name></expr></argument>, <argument pos:start="91:30" pos:end="91:53"><expr pos:start="91:30" pos:end="91:53"><literal type="string" pos:start="91:30" pos:end="91:53">"\tpublishTime=\"%s\"\n"</literal></expr></argument>, <argument pos:start="91:56" pos:end="91:62"><expr pos:start="91:56" pos:end="91:62"><name pos:start="91:56" pos:end="91:62">now_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="93:9" pos:end="101:9"><if pos:start="93:9" pos:end="101:9">if <condition pos:start="93:12" pos:end="93:46">(<expr pos:start="93:13" pos:end="93:45"><name pos:start="93:13" pos:end="93:26"><name pos:start="93:13" pos:end="93:13">c</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:26">window_size</name></name> <operator pos:start="93:28" pos:end="93:29">&amp;&amp;</operator> <name pos:start="93:31" pos:end="93:45"><name pos:start="93:31" pos:end="93:31">c</name><operator pos:start="93:32" pos:end="93:33">-&gt;</operator><name pos:start="93:34" pos:end="93:45">use_template</name></name></expr>)</condition> <block pos:start="93:48" pos:end="101:9">{<block_content pos:start="95:13" pos:end="99:37">

            <expr_stmt pos:start="95:13" pos:end="95:58"><expr pos:start="95:13" pos:end="95:57"><call pos:start="95:13" pos:end="95:57"><name pos:start="95:13" pos:end="95:23">avio_printf</name><argument_list pos:start="95:24" pos:end="95:57">(<argument pos:start="95:25" pos:end="95:27"><expr pos:start="95:25" pos:end="95:27"><name pos:start="95:25" pos:end="95:27">out</name></expr></argument>, <argument pos:start="95:30" pos:end="95:56"><expr pos:start="95:30" pos:end="95:56"><literal type="string" pos:start="95:30" pos:end="95:56">"\ttimeShiftBufferDepth=\""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:63"><expr pos:start="97:13" pos:end="97:62"><call pos:start="97:13" pos:end="97:62"><name pos:start="97:13" pos:end="97:22">write_time</name><argument_list pos:start="97:23" pos:end="97:62">(<argument pos:start="97:24" pos:end="97:26"><expr pos:start="97:24" pos:end="97:26"><name pos:start="97:24" pos:end="97:26">out</name></expr></argument>, <argument pos:start="97:29" pos:end="97:61"><expr pos:start="97:29" pos:end="97:61"><name pos:start="97:29" pos:end="97:44"><name pos:start="97:29" pos:end="97:29">c</name><operator pos:start="97:30" pos:end="97:31">-&gt;</operator><name pos:start="97:32" pos:end="97:44">last_duration</name></name> <operator pos:start="97:46" pos:end="97:46">*</operator> <name pos:start="97:48" pos:end="97:61"><name pos:start="97:48" pos:end="97:48">c</name><operator pos:start="97:49" pos:end="97:50">-&gt;</operator><name pos:start="97:51" pos:end="97:61">window_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:37"><expr pos:start="99:13" pos:end="99:36"><call pos:start="99:13" pos:end="99:36"><name pos:start="99:13" pos:end="99:23">avio_printf</name><argument_list pos:start="99:24" pos:end="99:36">(<argument pos:start="99:25" pos:end="99:27"><expr pos:start="99:25" pos:end="99:27"><name pos:start="99:25" pos:end="99:27">out</name></expr></argument>, <argument pos:start="99:30" pos:end="99:35"><expr pos:start="99:30" pos:end="99:35"><literal type="string" pos:start="99:30" pos:end="99:35">"\"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:43"><expr pos:start="105:5" pos:end="105:42"><call pos:start="105:5" pos:end="105:42"><name pos:start="105:5" pos:end="105:15">avio_printf</name><argument_list pos:start="105:16" pos:end="105:42">(<argument pos:start="105:17" pos:end="105:19"><expr pos:start="105:17" pos:end="105:19"><name pos:start="105:17" pos:end="105:19">out</name></expr></argument>, <argument pos:start="105:22" pos:end="105:41"><expr pos:start="105:22" pos:end="105:41"><literal type="string" pos:start="105:22" pos:end="105:41">"\tminBufferTime=\""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:42"><expr pos:start="107:5" pos:end="107:41"><call pos:start="107:5" pos:end="107:41"><name pos:start="107:5" pos:end="107:14">write_time</name><argument_list pos:start="107:15" pos:end="107:41">(<argument pos:start="107:16" pos:end="107:18"><expr pos:start="107:16" pos:end="107:18"><name pos:start="107:16" pos:end="107:18">out</name></expr></argument>, <argument pos:start="107:21" pos:end="107:40"><expr pos:start="107:21" pos:end="107:40"><name pos:start="107:21" pos:end="107:36"><name pos:start="107:21" pos:end="107:21">c</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:36">last_duration</name></name> <operator pos:start="107:38" pos:end="107:38">*</operator> <literal type="number" pos:start="107:40" pos:end="107:40">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:30"><expr pos:start="109:5" pos:end="109:29"><call pos:start="109:5" pos:end="109:29"><name pos:start="109:5" pos:end="109:15">avio_printf</name><argument_list pos:start="109:16" pos:end="109:29">(<argument pos:start="109:17" pos:end="109:19"><expr pos:start="109:17" pos:end="109:19"><name pos:start="109:17" pos:end="109:19">out</name></expr></argument>, <argument pos:start="109:22" pos:end="109:28"><expr pos:start="109:22" pos:end="109:28"><literal type="string" pos:start="109:22" pos:end="109:28">"\"&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:49"><expr pos:start="111:5" pos:end="111:48"><call pos:start="111:5" pos:end="111:48"><name pos:start="111:5" pos:end="111:15">avio_printf</name><argument_list pos:start="111:16" pos:end="111:48">(<argument pos:start="111:17" pos:end="111:19"><expr pos:start="111:17" pos:end="111:19"><name pos:start="111:17" pos:end="111:19">out</name></expr></argument>, <argument pos:start="111:22" pos:end="111:47"><expr pos:start="111:22" pos:end="111:47"><literal type="string" pos:start="111:22" pos:end="111:47">"\t&lt;ProgramInformation&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="113:5" pos:end="121:5"><if pos:start="113:5" pos:end="121:5">if <condition pos:start="113:8" pos:end="113:14">(<expr pos:start="113:9" pos:end="113:13"><name pos:start="113:9" pos:end="113:13">title</name></expr>)</condition> <block pos:start="113:16" pos:end="121:5">{<block_content pos:start="115:9" pos:end="119:25">

        <decl_stmt pos:start="115:9" pos:end="115:48"><decl pos:start="115:9" pos:end="115:47"><type pos:start="115:9" pos:end="115:14"><name pos:start="115:9" pos:end="115:12">char</name> <modifier pos:start="115:14" pos:end="115:14">*</modifier></type><name pos:start="115:15" pos:end="115:21">escaped</name> <init pos:start="115:23" pos:end="115:47">= <expr pos:start="115:25" pos:end="115:47"><call pos:start="115:25" pos:end="115:47"><name pos:start="115:25" pos:end="115:33">xmlescape</name><argument_list pos:start="115:34" pos:end="115:47">(<argument pos:start="115:35" pos:end="115:46"><expr pos:start="115:35" pos:end="115:46"><name pos:start="115:35" pos:end="115:46"><name pos:start="115:35" pos:end="115:39">title</name><operator pos:start="115:40" pos:end="115:41">-&gt;</operator><name pos:start="115:42" pos:end="115:46">value</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:61"><expr pos:start="117:9" pos:end="117:60"><call pos:start="117:9" pos:end="117:60"><name pos:start="117:9" pos:end="117:19">avio_printf</name><argument_list pos:start="117:20" pos:end="117:60">(<argument pos:start="117:21" pos:end="117:23"><expr pos:start="117:21" pos:end="117:23"><name pos:start="117:21" pos:end="117:23">out</name></expr></argument>, <argument pos:start="117:26" pos:end="117:50"><expr pos:start="117:26" pos:end="117:50"><literal type="string" pos:start="117:26" pos:end="117:50">"\t\t&lt;Title&gt;%s&lt;/Title&gt;\n"</literal></expr></argument>, <argument pos:start="117:53" pos:end="117:59"><expr pos:start="117:53" pos:end="117:59"><name pos:start="117:53" pos:end="117:59">escaped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:25"><expr pos:start="119:9" pos:end="119:24"><call pos:start="119:9" pos:end="119:24"><name pos:start="119:9" pos:end="119:15">av_free</name><argument_list pos:start="119:16" pos:end="119:24">(<argument pos:start="119:17" pos:end="119:23"><expr pos:start="119:17" pos:end="119:23"><name pos:start="119:17" pos:end="119:23">escaped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:50"><expr pos:start="123:5" pos:end="123:49"><call pos:start="123:5" pos:end="123:49"><name pos:start="123:5" pos:end="123:15">avio_printf</name><argument_list pos:start="123:16" pos:end="123:49">(<argument pos:start="123:17" pos:end="123:19"><expr pos:start="123:17" pos:end="123:19"><name pos:start="123:17" pos:end="123:19">out</name></expr></argument>, <argument pos:start="123:22" pos:end="123:48"><expr pos:start="123:22" pos:end="123:48"><literal type="string" pos:start="123:22" pos:end="123:48">"\t&lt;/ProgramInformation&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="127:5" pos:end="145:5"><if pos:start="127:5" pos:end="141:5">if <condition pos:start="127:8" pos:end="127:97">(<expr pos:start="127:9" pos:end="127:96"><name pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:9">c</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:22">window_size</name></name> <operator pos:start="127:24" pos:end="127:25">&amp;&amp;</operator> <name pos:start="127:27" pos:end="127:39"><name pos:start="127:27" pos:end="127:27">s</name><operator pos:start="127:28" pos:end="127:29">-&gt;</operator><name pos:start="127:30" pos:end="127:39">nb_streams</name></name> <operator pos:start="127:41" pos:end="127:41">&gt;</operator> <literal type="number" pos:start="127:43" pos:end="127:43">0</literal> <operator pos:start="127:45" pos:end="127:46">&amp;&amp;</operator> <name pos:start="127:48" pos:end="127:60"><name pos:start="127:48" pos:end="127:48">c</name><operator pos:start="127:49" pos:end="127:50">-&gt;</operator><name pos:start="127:51" pos:end="127:57">streams</name><index pos:start="127:58" pos:end="127:60">[<expr pos:start="127:59" pos:end="127:59"><literal type="number" pos:start="127:59" pos:end="127:59">0</literal></expr>]</index></name><operator pos:start="127:61" pos:end="127:61">.</operator><name pos:start="127:62" pos:end="127:72">nb_segments</name> <operator pos:start="127:74" pos:end="127:74">&gt;</operator> <literal type="number" pos:start="127:76" pos:end="127:76">0</literal> <operator pos:start="127:78" pos:end="127:79">&amp;&amp;</operator> <operator pos:start="127:81" pos:end="127:81">!</operator><name pos:start="127:82" pos:end="127:96"><name pos:start="127:82" pos:end="127:82">c</name><operator pos:start="127:83" pos:end="127:84">-&gt;</operator><name pos:start="127:85" pos:end="127:96">use_template</name></name></expr>)</condition> <block pos:start="127:99" pos:end="141:5">{<block_content pos:start="129:9" pos:end="139:34">

        <decl_stmt pos:start="129:9" pos:end="129:42"><decl pos:start="129:9" pos:end="129:41"><type pos:start="129:9" pos:end="129:22"><name pos:start="129:9" pos:end="129:20">OutputStream</name> <modifier pos:start="129:22" pos:end="129:22">*</modifier></type><name pos:start="129:23" pos:end="129:24">os</name> <init pos:start="129:26" pos:end="129:41">= <expr pos:start="129:28" pos:end="129:41"><operator pos:start="129:28" pos:end="129:28">&amp;</operator><name pos:start="129:29" pos:end="129:41"><name pos:start="129:29" pos:end="129:29">c</name><operator pos:start="129:30" pos:end="129:31">-&gt;</operator><name pos:start="129:32" pos:end="129:38">streams</name><index pos:start="129:39" pos:end="129:41">[<expr pos:start="129:40" pos:end="129:40"><literal type="number" pos:start="129:40" pos:end="129:40">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="131:9" pos:end="131:69"><decl pos:start="131:9" pos:end="131:68"><type pos:start="131:9" pos:end="131:11"><name pos:start="131:9" pos:end="131:11">int</name></type> <name pos:start="131:13" pos:end="131:23">start_index</name> <init pos:start="131:25" pos:end="131:68">= <expr pos:start="131:27" pos:end="131:68"><call pos:start="131:27" pos:end="131:68"><name pos:start="131:27" pos:end="131:31">FFMAX</name><argument_list pos:start="131:32" pos:end="131:68">(<argument pos:start="131:33" pos:end="131:64"><expr pos:start="131:33" pos:end="131:64"><name pos:start="131:33" pos:end="131:47"><name pos:start="131:33" pos:end="131:34">os</name><operator pos:start="131:35" pos:end="131:36">-&gt;</operator><name pos:start="131:37" pos:end="131:47">nb_segments</name></name> <operator pos:start="131:49" pos:end="131:49">-</operator> <name pos:start="131:51" pos:end="131:64"><name pos:start="131:51" pos:end="131:51">c</name><operator pos:start="131:52" pos:end="131:53">-&gt;</operator><name pos:start="131:54" pos:end="131:64">window_size</name></name></expr></argument>, <argument pos:start="131:67" pos:end="131:67"><expr pos:start="131:67" pos:end="131:67"><literal type="number" pos:start="131:67" pos:end="131:67">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="133:9" pos:end="133:117"><decl pos:start="133:9" pos:end="133:116"><type pos:start="133:9" pos:end="133:15"><name pos:start="133:9" pos:end="133:15">int64_t</name></type> <name pos:start="133:17" pos:end="133:26">start_time</name> <init pos:start="133:28" pos:end="133:116">= <expr pos:start="133:30" pos:end="133:116"><call pos:start="133:30" pos:end="133:116"><name pos:start="133:30" pos:end="133:41">av_rescale_q</name><argument_list pos:start="133:42" pos:end="133:116">(<argument pos:start="133:43" pos:end="133:73"><expr pos:start="133:43" pos:end="133:73"><name pos:start="133:43" pos:end="133:67"><name pos:start="133:43" pos:end="133:44">os</name><operator pos:start="133:45" pos:end="133:46">-&gt;</operator><name pos:start="133:47" pos:end="133:54">segments</name><index pos:start="133:55" pos:end="133:67">[<expr pos:start="133:56" pos:end="133:66"><name pos:start="133:56" pos:end="133:66">start_index</name></expr>]</index></name><operator pos:start="133:68" pos:end="133:69">-&gt;</operator><name pos:start="133:70" pos:end="133:73">time</name></expr></argument>, <argument pos:start="133:76" pos:end="133:99"><expr pos:start="133:76" pos:end="133:99"><name pos:start="133:76" pos:end="133:88"><name pos:start="133:76" pos:end="133:76">s</name><operator pos:start="133:77" pos:end="133:78">-&gt;</operator><name pos:start="133:79" pos:end="133:85">streams</name><index pos:start="133:86" pos:end="133:88">[<expr pos:start="133:87" pos:end="133:87"><literal type="number" pos:start="133:87" pos:end="133:87">0</literal></expr>]</index></name><operator pos:start="133:89" pos:end="133:90">-&gt;</operator><name pos:start="133:91" pos:end="133:99">time_base</name></expr></argument>, <argument pos:start="133:102" pos:end="133:115"><expr pos:start="133:102" pos:end="133:115"><name pos:start="133:102" pos:end="133:115">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:56"><expr pos:start="135:9" pos:end="135:55"><call pos:start="135:9" pos:end="135:55"><name pos:start="135:9" pos:end="135:19">avio_printf</name><argument_list pos:start="135:20" pos:end="135:55">(<argument pos:start="135:21" pos:end="135:23"><expr pos:start="135:21" pos:end="135:23"><name pos:start="135:21" pos:end="135:23">out</name></expr></argument>, <argument pos:start="135:26" pos:end="135:54"><expr pos:start="135:26" pos:end="135:54"><literal type="string" pos:start="135:26" pos:end="135:54">"\t&lt;Period id=\"0\" start=\""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:36"><expr pos:start="137:9" pos:end="137:35"><call pos:start="137:9" pos:end="137:35"><name pos:start="137:9" pos:end="137:18">write_time</name><argument_list pos:start="137:19" pos:end="137:35">(<argument pos:start="137:20" pos:end="137:22"><expr pos:start="137:20" pos:end="137:22"><name pos:start="137:20" pos:end="137:22">out</name></expr></argument>, <argument pos:start="137:25" pos:end="137:34"><expr pos:start="137:25" pos:end="137:34"><name pos:start="137:25" pos:end="137:34">start_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:34"><expr pos:start="139:9" pos:end="139:33"><call pos:start="139:9" pos:end="139:33"><name pos:start="139:9" pos:end="139:19">avio_printf</name><argument_list pos:start="139:20" pos:end="139:33">(<argument pos:start="139:21" pos:end="139:23"><expr pos:start="139:21" pos:end="139:23"><name pos:start="139:21" pos:end="139:23">out</name></expr></argument>, <argument pos:start="139:26" pos:end="139:32"><expr pos:start="139:26" pos:end="139:32"><literal type="string" pos:start="139:26" pos:end="139:32">"\"&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="141:7" pos:end="145:5">else <block pos:start="141:12" pos:end="145:5">{<block_content pos:start="143:9" pos:end="143:67">

        <expr_stmt pos:start="143:9" pos:end="143:67"><expr pos:start="143:9" pos:end="143:66"><call pos:start="143:9" pos:end="143:66"><name pos:start="143:9" pos:end="143:19">avio_printf</name><argument_list pos:start="143:20" pos:end="143:66">(<argument pos:start="143:21" pos:end="143:23"><expr pos:start="143:21" pos:end="143:23"><name pos:start="143:21" pos:end="143:23">out</name></expr></argument>, <argument pos:start="143:26" pos:end="143:65"><expr pos:start="143:26" pos:end="143:65"><literal type="string" pos:start="143:26" pos:end="143:65">"\t&lt;Period id=\"0\" start=\"PT0.0S\"&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="149:5" pos:end="155:5">for <control pos:start="149:9" pos:end="149:34">(<init pos:start="149:10" pos:end="149:15"><expr pos:start="149:10" pos:end="149:14"><name pos:start="149:10" pos:end="149:10">i</name> <operator pos:start="149:12" pos:end="149:12">=</operator> <literal type="number" pos:start="149:14" pos:end="149:14">0</literal></expr>;</init> <condition pos:start="149:17" pos:end="149:29"><expr pos:start="149:17" pos:end="149:28"><name pos:start="149:17" pos:end="149:17">i</name> <operator pos:start="149:19" pos:end="149:19">&lt;</operator> <name pos:start="149:21" pos:end="149:28"><name pos:start="149:21" pos:end="149:21">c</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:28">nb_as</name></name></expr>;</condition> <incr pos:start="149:31" pos:end="149:33"><expr pos:start="149:31" pos:end="149:33"><name pos:start="149:31" pos:end="149:31">i</name><operator pos:start="149:32" pos:end="149:33">++</operator></expr></incr>)</control> <block pos:start="149:36" pos:end="155:5">{<block_content pos:start="151:9" pos:end="153:23">

        <if_stmt pos:start="151:9" pos:end="153:23"><if pos:start="151:9" pos:end="153:23">if <condition pos:start="151:12" pos:end="151:56">(<expr pos:start="151:13" pos:end="151:55"><operator pos:start="151:13" pos:end="151:13">(</operator><name pos:start="151:14" pos:end="151:16">ret</name> <operator pos:start="151:18" pos:end="151:18">=</operator> <call pos:start="151:20" pos:end="151:50"><name pos:start="151:20" pos:end="151:39">write_adaptation_set</name><argument_list pos:start="151:40" pos:end="151:50">(<argument pos:start="151:41" pos:end="151:41"><expr pos:start="151:41" pos:end="151:41"><name pos:start="151:41" pos:end="151:41">s</name></expr></argument>, <argument pos:start="151:44" pos:end="151:46"><expr pos:start="151:44" pos:end="151:46"><name pos:start="151:44" pos:end="151:46">out</name></expr></argument>, <argument pos:start="151:49" pos:end="151:49"><expr pos:start="151:49" pos:end="151:49"><name pos:start="151:49" pos:end="151:49">i</name></expr></argument>)</argument_list></call><operator pos:start="151:51" pos:end="151:51">)</operator> <operator pos:start="151:53" pos:end="151:53">&lt;</operator> <literal type="number" pos:start="151:55" pos:end="151:55">0</literal></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:23"><block_content pos:start="153:13" pos:end="153:23">

            <return pos:start="153:13" pos:end="153:23">return <expr pos:start="153:20" pos:end="153:22"><name pos:start="153:20" pos:end="153:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="157:5" pos:end="157:38"><expr pos:start="157:5" pos:end="157:37"><call pos:start="157:5" pos:end="157:37"><name pos:start="157:5" pos:end="157:15">avio_printf</name><argument_list pos:start="157:16" pos:end="157:37">(<argument pos:start="157:17" pos:end="157:19"><expr pos:start="157:17" pos:end="157:19"><name pos:start="157:17" pos:end="157:19">out</name></expr></argument>, <argument pos:start="157:22" pos:end="157:36"><expr pos:start="157:22" pos:end="157:36"><literal type="string" pos:start="157:22" pos:end="157:36">"\t&lt;/Period&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="161:5" pos:end="163:128"><if pos:start="161:5" pos:end="163:128">if <condition pos:start="161:8" pos:end="161:26">(<expr pos:start="161:9" pos:end="161:25"><name pos:start="161:9" pos:end="161:25"><name pos:start="161:9" pos:end="161:9">c</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:25">utc_timing_url</name></name></expr>)</condition><block type="pseudo" pos:start="163:9" pos:end="163:128"><block_content pos:start="163:9" pos:end="163:128">

        <expr_stmt pos:start="163:9" pos:end="163:128"><expr pos:start="163:9" pos:end="163:127"><call pos:start="163:9" pos:end="163:127"><name pos:start="163:9" pos:end="163:19">avio_printf</name><argument_list pos:start="163:20" pos:end="163:127">(<argument pos:start="163:21" pos:end="163:23"><expr pos:start="163:21" pos:end="163:23"><name pos:start="163:21" pos:end="163:23">out</name></expr></argument>, <argument pos:start="163:26" pos:end="163:107"><expr pos:start="163:26" pos:end="163:107"><literal type="string" pos:start="163:26" pos:end="163:107">"\t&lt;UTCTiming schemeIdUri=\"urn:mpeg:dash:utc:http-xsdate:2014\" value=\"%s\"/&gt;\n"</literal></expr></argument>, <argument pos:start="163:110" pos:end="163:126"><expr pos:start="163:110" pos:end="163:126"><name pos:start="163:110" pos:end="163:126"><name pos:start="163:110" pos:end="163:110">c</name><operator pos:start="163:111" pos:end="163:112">-&gt;</operator><name pos:start="163:113" pos:end="163:126">utc_timing_url</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="167:5" pos:end="167:33"><expr pos:start="167:5" pos:end="167:32"><call pos:start="167:5" pos:end="167:32"><name pos:start="167:5" pos:end="167:15">avio_printf</name><argument_list pos:start="167:16" pos:end="167:32">(<argument pos:start="167:17" pos:end="167:19"><expr pos:start="167:17" pos:end="167:19"><name pos:start="167:17" pos:end="167:19">out</name></expr></argument>, <argument pos:start="167:22" pos:end="167:31"><expr pos:start="167:22" pos:end="167:31"><literal type="string" pos:start="167:22" pos:end="167:31">"&lt;/MPD&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:20"><expr pos:start="169:5" pos:end="169:19"><call pos:start="169:5" pos:end="169:19"><name pos:start="169:5" pos:end="169:14">avio_flush</name><argument_list pos:start="169:15" pos:end="169:19">(<argument pos:start="169:16" pos:end="169:18"><expr pos:start="169:16" pos:end="169:18"><name pos:start="169:16" pos:end="169:18">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:32"><expr pos:start="171:5" pos:end="171:31"><call pos:start="171:5" pos:end="171:31"><name pos:start="171:5" pos:end="171:22">ff_format_io_close</name><argument_list pos:start="171:23" pos:end="171:31">(<argument pos:start="171:24" pos:end="171:24"><expr pos:start="171:24" pos:end="171:24"><name pos:start="171:24" pos:end="171:24">s</name></expr></argument>, <argument pos:start="171:27" pos:end="171:30"><expr pos:start="171:27" pos:end="171:30"><operator pos:start="171:27" pos:end="171:27">&amp;</operator><name pos:start="171:28" pos:end="171:30">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="175:5" pos:end="177:58"><if pos:start="175:5" pos:end="177:58">if <condition pos:start="175:8" pos:end="175:19">(<expr pos:start="175:9" pos:end="175:18"><name pos:start="175:9" pos:end="175:18">use_rename</name></expr>)</condition><block type="pseudo" pos:start="177:9" pos:end="177:58"><block_content pos:start="177:9" pos:end="177:58">

        <return pos:start="177:9" pos:end="177:58">return <expr pos:start="177:16" pos:end="177:57"><call pos:start="177:16" pos:end="177:57"><name pos:start="177:16" pos:end="177:29">avpriv_io_move</name><argument_list pos:start="177:30" pos:end="177:57">(<argument pos:start="177:31" pos:end="177:43"><expr pos:start="177:31" pos:end="177:43"><name pos:start="177:31" pos:end="177:43">temp_filename</name></expr></argument>, <argument pos:start="177:46" pos:end="177:56"><expr pos:start="177:46" pos:end="177:56"><name pos:start="177:46" pos:end="177:56"><name pos:start="177:46" pos:end="177:46">s</name><operator pos:start="177:47" pos:end="177:48">-&gt;</operator><name pos:start="177:49" pos:end="177:56">filename</name></name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="181:5" pos:end="181:13">return <expr pos:start="181:12" pos:end="181:12"><literal type="number" pos:start="181:12" pos:end="181:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
