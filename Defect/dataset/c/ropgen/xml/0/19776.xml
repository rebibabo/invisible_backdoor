<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19776.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">v4l2_read_header</name><parameter_list pos:start="1:28" pos:end="1:48">(<parameter pos:start="1:29" pos:end="1:47"><decl pos:start="1:29" pos:end="1:47"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">s1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="215:1">{<block_content pos:start="5:5" pos:end="213:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:21">video_data</name></name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:40">= <expr pos:start="5:28" pos:end="5:40"><name pos:start="5:28" pos:end="5:40"><name pos:start="5:28" pos:end="5:29">s1</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">res</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:27">desired_format</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:46"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:8">enum</name> <name pos:start="13:10" pos:end="13:18">AVCodecID</name></name></type> <name pos:start="13:20" pos:end="13:27">codec_id</name> <init pos:start="13:29" pos:end="13:46">= <expr pos:start="13:31" pos:end="13:46"><name pos:start="13:31" pos:end="13:46">AV_CODEC_ID_NONE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:49"><decl pos:start="15:5" pos:end="15:48"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:8">enum</name> <name pos:start="15:10" pos:end="15:22">AVPixelFormat</name></name></type> <name pos:start="15:24" pos:end="15:30">pix_fmt</name> <init pos:start="15:32" pos:end="15:48">= <expr pos:start="15:34" pos:end="15:48"><name pos:start="15:34" pos:end="15:48">AV_PIX_FMT_NONE</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:39"><expr pos:start="19:5" pos:end="19:38"><name pos:start="19:5" pos:end="19:6">st</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:38"><name pos:start="19:10" pos:end="19:28">avformat_new_stream</name><argument_list pos:start="19:29" pos:end="19:38">(<argument pos:start="19:30" pos:end="19:31"><expr pos:start="19:30" pos:end="19:31"><name pos:start="19:30" pos:end="19:31">s1</name></expr></argument>, <argument pos:start="19:34" pos:end="19:37"><expr pos:start="19:34" pos:end="19:37"><name pos:start="19:34" pos:end="19:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:31"><if pos:start="21:5" pos:end="23:31">if <condition pos:start="21:8" pos:end="21:12">(<expr pos:start="21:9" pos:end="21:11"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:11">st</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:31"><block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:9"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:9">fd</name></name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:23">device_open</name><argument_list pos:start="27:24" pos:end="27:27">(<argument pos:start="27:25" pos:end="27:26"><expr pos:start="27:25" pos:end="27:26"><name pos:start="27:25" pos:end="27:26">s1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:21"><if pos:start="29:5" pos:end="31:21">if <condition pos:start="29:8" pos:end="29:18">(<expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:13"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:13">fd</name></name> <operator pos:start="29:15" pos:end="29:15">&lt;</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:21"><block_content pos:start="31:9" pos:end="31:21">

        <return pos:start="31:9" pos:end="31:21">return <expr pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:16">s</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:20">fd</name></name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:23">(<expr pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:22">list_format</name></name></expr>)</condition> <block pos:start="35:25" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:28">

        <expr_stmt pos:start="37:9" pos:end="37:48"><expr pos:start="37:9" pos:end="37:47"><call pos:start="37:9" pos:end="37:47"><name pos:start="37:9" pos:end="37:20">list_formats</name><argument_list pos:start="37:21" pos:end="37:47">(<argument pos:start="37:22" pos:end="37:23"><expr pos:start="37:22" pos:end="37:23"><name pos:start="37:22" pos:end="37:23">s1</name></expr></argument>, <argument pos:start="37:26" pos:end="37:30"><expr pos:start="37:26" pos:end="37:30"><name pos:start="37:26" pos:end="37:30"><name pos:start="37:26" pos:end="37:26">s</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:30">fd</name></name></expr></argument>, <argument pos:start="37:33" pos:end="37:46"><expr pos:start="37:33" pos:end="37:46"><name pos:start="37:33" pos:end="37:46"><name pos:start="37:33" pos:end="37:33">s</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:46">list_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:28">return <expr pos:start="39:16" pos:end="39:27"><name pos:start="39:16" pos:end="39:27">AVERROR_EXIT</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:44"><expr pos:start="45:5" pos:end="45:43"><call pos:start="45:5" pos:end="45:43"><name pos:start="45:5" pos:end="45:23">avpriv_set_pts_info</name><argument_list pos:start="45:24" pos:end="45:43">(<argument pos:start="45:25" pos:end="45:26"><expr pos:start="45:25" pos:end="45:26"><name pos:start="45:25" pos:end="45:26">st</name></expr></argument>, <argument pos:start="45:29" pos:end="45:30"><expr pos:start="45:29" pos:end="45:30"><literal type="number" pos:start="45:29" pos:end="45:30">64</literal></expr></argument>, <argument pos:start="45:33" pos:end="45:33"><expr pos:start="45:33" pos:end="45:33"><literal type="number" pos:start="45:33" pos:end="45:33">1</literal></expr></argument>, <argument pos:start="45:36" pos:end="45:42"><expr pos:start="45:36" pos:end="45:42"><literal type="number" pos:start="45:36" pos:end="45:42">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="45:46" pos:end="45:68">/* 64 bits pts in us */</comment>



    <if_stmt pos:start="49:5" pos:end="77:5"><if pos:start="49:5" pos:end="77:5">if <condition pos:start="49:8" pos:end="49:24">(<expr pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:23">pixel_format</name></name></expr>)</condition> <block pos:start="49:26" pos:end="77:5">{<block_content pos:start="51:9" pos:end="75:9">

        <decl_stmt pos:start="51:9" pos:end="51:71"><decl pos:start="51:9" pos:end="51:70"><type pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:15">AVCodec</name> <modifier pos:start="51:17" pos:end="51:17">*</modifier></type><name pos:start="51:18" pos:end="51:22">codec</name> <init pos:start="51:24" pos:end="51:70">= <expr pos:start="51:26" pos:end="51:70"><call pos:start="51:26" pos:end="51:70"><name pos:start="51:26" pos:end="51:53">avcodec_find_decoder_by_name</name><argument_list pos:start="51:54" pos:end="51:70">(<argument pos:start="51:55" pos:end="51:69"><expr pos:start="51:55" pos:end="51:69"><name pos:start="51:55" pos:end="51:69"><name pos:start="51:55" pos:end="51:55">s</name><operator pos:start="51:56" pos:end="51:57">-&gt;</operator><name pos:start="51:58" pos:end="51:69">pixel_format</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="55:9" pos:end="57:43"><if pos:start="55:9" pos:end="57:43">if <condition pos:start="55:12" pos:end="55:18">(<expr pos:start="55:13" pos:end="55:17"><name pos:start="55:13" pos:end="55:17">codec</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:43"><block_content pos:start="57:13" pos:end="57:43">

            <expr_stmt pos:start="57:13" pos:end="57:43"><expr pos:start="57:13" pos:end="57:42"><name pos:start="57:13" pos:end="57:30"><name pos:start="57:13" pos:end="57:14">s1</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:30">video_codec_id</name></name> <operator pos:start="57:32" pos:end="57:32">=</operator> <name pos:start="57:34" pos:end="57:42"><name pos:start="57:34" pos:end="57:38">codec</name><operator pos:start="57:39" pos:end="57:40">-&gt;</operator><name pos:start="57:41" pos:end="57:42">id</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:50"><expr pos:start="61:9" pos:end="61:49"><name pos:start="61:9" pos:end="61:15">pix_fmt</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <call pos:start="61:19" pos:end="61:49"><name pos:start="61:19" pos:end="61:32">av_get_pix_fmt</name><argument_list pos:start="61:33" pos:end="61:49">(<argument pos:start="61:34" pos:end="61:48"><expr pos:start="61:34" pos:end="61:48"><name pos:start="61:34" pos:end="61:48"><name pos:start="61:34" pos:end="61:34">s</name><operator pos:start="61:35" pos:end="61:36">-&gt;</operator><name pos:start="61:37" pos:end="61:48">pixel_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="65:9" pos:end="75:9"><if pos:start="65:9" pos:end="75:9">if <condition pos:start="65:12" pos:end="65:49">(<expr pos:start="65:13" pos:end="65:48"><name pos:start="65:13" pos:end="65:19">pix_fmt</name> <operator pos:start="65:21" pos:end="65:22">==</operator> <name pos:start="65:24" pos:end="65:38">AV_PIX_FMT_NONE</name> <operator pos:start="65:40" pos:end="65:41">&amp;&amp;</operator> <operator pos:start="65:43" pos:end="65:43">!</operator><name pos:start="65:44" pos:end="65:48">codec</name></expr>)</condition> <block pos:start="65:51" pos:end="75:9">{<block_content pos:start="67:13" pos:end="73:35">

            <expr_stmt pos:start="67:13" pos:end="69:36"><expr pos:start="67:13" pos:end="69:35"><call pos:start="67:13" pos:end="69:35"><name pos:start="67:13" pos:end="67:18">av_log</name><argument_list pos:start="67:19" pos:end="69:35">(<argument pos:start="67:20" pos:end="67:21"><expr pos:start="67:20" pos:end="67:21"><name pos:start="67:20" pos:end="67:21">s1</name></expr></argument>, <argument pos:start="67:24" pos:end="67:35"><expr pos:start="67:24" pos:end="67:35"><name pos:start="67:24" pos:end="67:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:38" pos:end="67:66"><expr pos:start="67:38" pos:end="67:66"><literal type="string" pos:start="67:38" pos:end="67:66">"No such input format: %s.\n"</literal></expr></argument>,

                   <argument pos:start="69:20" pos:end="69:34"><expr pos:start="69:20" pos:end="69:34"><name pos:start="69:20" pos:end="69:34"><name pos:start="69:20" pos:end="69:20">s</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:34">pixel_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <return pos:start="73:13" pos:end="73:35">return <expr pos:start="73:20" pos:end="73:34"><call pos:start="73:20" pos:end="73:34"><name pos:start="73:20" pos:end="73:26">AVERROR</name><argument_list pos:start="73:27" pos:end="73:34">(<argument pos:start="73:28" pos:end="73:33"><expr pos:start="73:28" pos:end="73:33"><name pos:start="73:28" pos:end="73:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="113:5"><if pos:start="81:5" pos:end="113:5">if <condition pos:start="81:8" pos:end="81:32">(<expr pos:start="81:9" pos:end="81:31"><operator pos:start="81:9" pos:end="81:9">!</operator><name pos:start="81:10" pos:end="81:17"><name pos:start="81:10" pos:end="81:10">s</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:17">width</name></name> <operator pos:start="81:19" pos:end="81:20">&amp;&amp;</operator> <operator pos:start="81:22" pos:end="81:22">!</operator><name pos:start="81:23" pos:end="81:31"><name pos:start="81:23" pos:end="81:23">s</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:31">height</name></name></expr>)</condition> <block pos:start="81:34" pos:end="113:5">{<block_content pos:start="83:9" pos:end="111:69">

        <decl_stmt pos:start="83:9" pos:end="83:31"><decl pos:start="83:9" pos:end="83:30"><type pos:start="83:9" pos:end="83:26"><name pos:start="83:9" pos:end="83:26"><name pos:start="83:9" pos:end="83:14">struct</name> <name pos:start="83:16" pos:end="83:26">v4l2_format</name></name></type> <name pos:start="83:28" pos:end="83:30">fmt</name></decl>;</decl_stmt>



        <expr_stmt pos:start="87:9" pos:end="89:67"><expr pos:start="87:9" pos:end="89:66"><call pos:start="87:9" pos:end="89:66"><name pos:start="87:9" pos:end="87:14">av_log</name><argument_list pos:start="87:15" pos:end="89:66">(<argument pos:start="87:16" pos:end="87:17"><expr pos:start="87:16" pos:end="87:17"><name pos:start="87:16" pos:end="87:17">s1</name></expr></argument>, <argument pos:start="87:20" pos:end="87:33"><expr pos:start="87:20" pos:end="87:33"><name pos:start="87:20" pos:end="87:33">AV_LOG_VERBOSE</name></expr></argument>,

               <argument pos:start="89:16" pos:end="89:65"><expr pos:start="89:16" pos:end="89:65"><literal type="string" pos:start="89:16" pos:end="89:65">"Querying the device for the current frame size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:47"><expr pos:start="91:9" pos:end="91:46"><name pos:start="91:9" pos:end="91:16"><name pos:start="91:9" pos:end="91:11">fmt</name><operator pos:start="91:12" pos:end="91:12">.</operator><name pos:start="91:13" pos:end="91:16">type</name></name> <operator pos:start="91:18" pos:end="91:18">=</operator> <name pos:start="91:20" pos:end="91:46">V4L2_BUF_TYPE_VIDEO_CAPTURE</name></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="101:9"><if pos:start="93:9" pos:end="101:9">if <condition pos:start="93:12" pos:end="93:54">(<expr pos:start="93:13" pos:end="93:53"><call pos:start="93:13" pos:end="93:49"><name pos:start="93:13" pos:end="93:22">v4l2_ioctl</name><argument_list pos:start="93:23" pos:end="93:49">(<argument pos:start="93:24" pos:end="93:28"><expr pos:start="93:24" pos:end="93:28"><name pos:start="93:24" pos:end="93:28"><name pos:start="93:24" pos:end="93:24">s</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:28">fd</name></name></expr></argument>, <argument pos:start="93:31" pos:end="93:42"><expr pos:start="93:31" pos:end="93:42"><name pos:start="93:31" pos:end="93:42">VIDIOC_G_FMT</name></expr></argument>, <argument pos:start="93:45" pos:end="93:48"><expr pos:start="93:45" pos:end="93:48"><operator pos:start="93:45" pos:end="93:45">&amp;</operator><name pos:start="93:46" pos:end="93:48">fmt</name></expr></argument>)</argument_list></call> <operator pos:start="93:51" pos:end="93:51">&lt;</operator> <literal type="number" pos:start="93:53" pos:end="93:53">0</literal></expr>)</condition> <block pos:start="93:56" pos:end="101:9">{<block_content pos:start="95:13" pos:end="99:34">

            <expr_stmt pos:start="95:13" pos:end="97:36"><expr pos:start="95:13" pos:end="97:35"><call pos:start="95:13" pos:end="97:35"><name pos:start="95:13" pos:end="95:18">av_log</name><argument_list pos:start="95:19" pos:end="97:35">(<argument pos:start="95:20" pos:end="95:21"><expr pos:start="95:20" pos:end="95:21"><name pos:start="95:20" pos:end="95:21">s1</name></expr></argument>, <argument pos:start="95:24" pos:end="95:35"><expr pos:start="95:24" pos:end="95:35"><name pos:start="95:24" pos:end="95:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="95:38" pos:end="95:64"><expr pos:start="95:38" pos:end="95:64"><literal type="string" pos:start="95:38" pos:end="95:64">"ioctl(VIDIOC_G_FMT): %s\n"</literal></expr></argument>,

                   <argument pos:start="97:20" pos:end="97:34"><expr pos:start="97:20" pos:end="97:34"><call pos:start="97:20" pos:end="97:34"><name pos:start="97:20" pos:end="97:27">strerror</name><argument_list pos:start="97:28" pos:end="97:34">(<argument pos:start="97:29" pos:end="97:33"><expr pos:start="97:29" pos:end="97:33"><name pos:start="97:29" pos:end="97:33">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="99:13" pos:end="99:34">return <expr pos:start="99:20" pos:end="99:33"><call pos:start="99:20" pos:end="99:33"><name pos:start="99:20" pos:end="99:26">AVERROR</name><argument_list pos:start="99:27" pos:end="99:33">(<argument pos:start="99:28" pos:end="99:32"><expr pos:start="99:28" pos:end="99:32"><name pos:start="99:28" pos:end="99:32">errno</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:38"><expr pos:start="105:9" pos:end="105:37"><name pos:start="105:9" pos:end="105:16"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:16">width</name></name>  <operator pos:start="105:19" pos:end="105:19">=</operator> <name pos:start="105:21" pos:end="105:37"><name pos:start="105:21" pos:end="105:23">fmt</name><operator pos:start="105:24" pos:end="105:24">.</operator><name pos:start="105:25" pos:end="105:27">fmt</name><operator pos:start="105:28" pos:end="105:28">.</operator><name pos:start="105:29" pos:end="105:31">pix</name><operator pos:start="105:32" pos:end="105:32">.</operator><name pos:start="105:33" pos:end="105:37">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:39"><expr pos:start="107:9" pos:end="107:38"><name pos:start="107:9" pos:end="107:17"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:17">height</name></name> <operator pos:start="107:19" pos:end="107:19">=</operator> <name pos:start="107:21" pos:end="107:38"><name pos:start="107:21" pos:end="107:23">fmt</name><operator pos:start="107:24" pos:end="107:24">.</operator><name pos:start="107:25" pos:end="107:27">fmt</name><operator pos:start="107:28" pos:end="107:28">.</operator><name pos:start="107:29" pos:end="107:31">pix</name><operator pos:start="107:32" pos:end="107:32">.</operator><name pos:start="107:33" pos:end="107:38">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="111:69"><expr pos:start="109:9" pos:end="111:68"><call pos:start="109:9" pos:end="111:68"><name pos:start="109:9" pos:end="109:14">av_log</name><argument_list pos:start="109:15" pos:end="111:68">(<argument pos:start="109:16" pos:end="109:17"><expr pos:start="109:16" pos:end="109:17"><name pos:start="109:16" pos:end="109:17">s1</name></expr></argument>, <argument pos:start="109:20" pos:end="109:33"><expr pos:start="109:20" pos:end="109:33"><name pos:start="109:20" pos:end="109:33">AV_LOG_VERBOSE</name></expr></argument>,

               <argument pos:start="111:16" pos:end="111:46"><expr pos:start="111:16" pos:end="111:46"><literal type="string" pos:start="111:16" pos:end="111:46">"Setting frame size to %dx%d\n"</literal></expr></argument>, <argument pos:start="111:49" pos:end="111:56"><expr pos:start="111:49" pos:end="111:56"><name pos:start="111:49" pos:end="111:56"><name pos:start="111:49" pos:end="111:49">s</name><operator pos:start="111:50" pos:end="111:51">-&gt;</operator><name pos:start="111:52" pos:end="111:56">width</name></name></expr></argument>, <argument pos:start="111:59" pos:end="111:67"><expr pos:start="111:59" pos:end="111:67"><name pos:start="111:59" pos:end="111:67"><name pos:start="111:59" pos:end="111:59">s</name><operator pos:start="111:60" pos:end="111:61">-&gt;</operator><name pos:start="111:62" pos:end="111:67">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="119:48"><expr pos:start="117:5" pos:end="119:47"><name pos:start="117:5" pos:end="117:18">desired_format</name> <operator pos:start="117:20" pos:end="117:20">=</operator> <call pos:start="117:22" pos:end="119:47"><name pos:start="117:22" pos:end="117:36">device_try_init</name><argument_list pos:start="117:37" pos:end="119:47">(<argument pos:start="117:38" pos:end="117:39"><expr pos:start="117:38" pos:end="117:39"><name pos:start="117:38" pos:end="117:39">s1</name></expr></argument>, <argument pos:start="117:42" pos:end="117:48"><expr pos:start="117:42" pos:end="117:48"><name pos:start="117:42" pos:end="117:48">pix_fmt</name></expr></argument>, <argument pos:start="117:51" pos:end="117:59"><expr pos:start="117:51" pos:end="117:59"><operator pos:start="117:51" pos:end="117:51">&amp;</operator><name pos:start="117:52" pos:end="117:59"><name pos:start="117:52" pos:end="117:52">s</name><operator pos:start="117:53" pos:end="117:54">-&gt;</operator><name pos:start="117:55" pos:end="117:59">width</name></name></expr></argument>, <argument pos:start="117:62" pos:end="117:71"><expr pos:start="117:62" pos:end="117:71"><operator pos:start="117:62" pos:end="117:62">&amp;</operator><name pos:start="117:63" pos:end="117:71"><name pos:start="117:63" pos:end="117:63">s</name><operator pos:start="117:64" pos:end="117:65">-&gt;</operator><name pos:start="117:66" pos:end="117:71">height</name></name></expr></argument>,

                                     <argument pos:start="119:38" pos:end="119:46"><expr pos:start="119:38" pos:end="119:46"><operator pos:start="119:38" pos:end="119:38">&amp;</operator><name pos:start="119:39" pos:end="119:46">codec_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="123:5" pos:end="129:7">/* If no pixel_format was specified, the codec_id was not known up

     * until now. Set video_codec_id in the context, as codec_id will

     * not be available outside this function

     */</comment>

    <if_stmt pos:start="131:5" pos:end="133:38"><if pos:start="131:5" pos:end="133:38">if <condition pos:start="131:8" pos:end="131:79">(<expr pos:start="131:9" pos:end="131:78"><name pos:start="131:9" pos:end="131:16">codec_id</name> <operator pos:start="131:18" pos:end="131:19">!=</operator> <name pos:start="131:21" pos:end="131:36">AV_CODEC_ID_NONE</name> <operator pos:start="131:38" pos:end="131:39">&amp;&amp;</operator> <name pos:start="131:41" pos:end="131:58"><name pos:start="131:41" pos:end="131:42">s1</name><operator pos:start="131:43" pos:end="131:44">-&gt;</operator><name pos:start="131:45" pos:end="131:58">video_codec_id</name></name> <operator pos:start="131:60" pos:end="131:61">==</operator> <name pos:start="131:63" pos:end="131:78">AV_CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="133:38"><block_content pos:start="133:9" pos:end="133:38">

        <expr_stmt pos:start="133:9" pos:end="133:38"><expr pos:start="133:9" pos:end="133:37"><name pos:start="133:9" pos:end="133:26"><name pos:start="133:9" pos:end="133:10">s1</name><operator pos:start="133:11" pos:end="133:12">-&gt;</operator><name pos:start="133:13" pos:end="133:26">video_codec_id</name></name> <operator pos:start="133:28" pos:end="133:28">=</operator> <name pos:start="133:30" pos:end="133:37">codec_id</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="137:5" pos:end="149:5"><if pos:start="137:5" pos:end="149:5">if <condition pos:start="137:8" pos:end="137:28">(<expr pos:start="137:9" pos:end="137:27"><name pos:start="137:9" pos:end="137:22">desired_format</name> <operator pos:start="137:24" pos:end="137:25">==</operator> <literal type="number" pos:start="137:27" pos:end="137:27">0</literal></expr>)</condition> <block pos:start="137:30" pos:end="149:5">{<block_content pos:start="139:9" pos:end="147:28">

        <expr_stmt pos:start="139:9" pos:end="141:74"><expr pos:start="139:9" pos:end="141:73"><call pos:start="139:9" pos:end="141:73"><name pos:start="139:9" pos:end="139:14">av_log</name><argument_list pos:start="139:15" pos:end="141:73">(<argument pos:start="139:16" pos:end="139:17"><expr pos:start="139:16" pos:end="139:17"><name pos:start="139:16" pos:end="139:17">s1</name></expr></argument>, <argument pos:start="139:20" pos:end="139:31"><expr pos:start="139:20" pos:end="139:31"><name pos:start="139:20" pos:end="139:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="139:34" pos:end="141:43"><expr pos:start="139:34" pos:end="141:43"><literal type="string" pos:start="139:34" pos:end="139:67">"Cannot find a proper format for "</literal>

               <literal type="string" pos:start="141:16" pos:end="141:43">"codec_id %d, pix_fmt %d.\n"</literal></expr></argument>, <argument pos:start="141:46" pos:end="141:63"><expr pos:start="141:46" pos:end="141:63"><name pos:start="141:46" pos:end="141:63"><name pos:start="141:46" pos:end="141:47">s1</name><operator pos:start="141:48" pos:end="141:49">-&gt;</operator><name pos:start="141:50" pos:end="141:63">video_codec_id</name></name></expr></argument>, <argument pos:start="141:66" pos:end="141:72"><expr pos:start="141:66" pos:end="141:72"><name pos:start="141:66" pos:end="141:72">pix_fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:26"><expr pos:start="143:9" pos:end="143:25"><call pos:start="143:9" pos:end="143:25"><name pos:start="143:9" pos:end="143:18">v4l2_close</name><argument_list pos:start="143:19" pos:end="143:25">(<argument pos:start="143:20" pos:end="143:24"><expr pos:start="143:20" pos:end="143:24"><name pos:start="143:20" pos:end="143:24"><name pos:start="143:20" pos:end="143:20">s</name><operator pos:start="143:21" pos:end="143:22">-&gt;</operator><name pos:start="143:23" pos:end="143:24">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="147:9" pos:end="147:28">return <expr pos:start="147:16" pos:end="147:27"><call pos:start="147:16" pos:end="147:27"><name pos:start="147:16" pos:end="147:22">AVERROR</name><argument_list pos:start="147:23" pos:end="147:27">(<argument pos:start="147:24" pos:end="147:26"><expr pos:start="147:24" pos:end="147:26"><name pos:start="147:24" pos:end="147:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="151:5" pos:end="153:19"><if pos:start="151:5" pos:end="153:19">if <condition pos:start="151:8" pos:end="151:68">(<expr pos:start="151:9" pos:end="151:67"><operator pos:start="151:9" pos:end="151:9">(</operator><name pos:start="151:10" pos:end="151:12">res</name> <operator pos:start="151:14" pos:end="151:14">=</operator> <call pos:start="151:16" pos:end="151:62"><name pos:start="151:16" pos:end="151:34">av_image_check_size</name><argument_list pos:start="151:35" pos:end="151:62">(<argument pos:start="151:36" pos:end="151:43"><expr pos:start="151:36" pos:end="151:43"><name pos:start="151:36" pos:end="151:43"><name pos:start="151:36" pos:end="151:36">s</name><operator pos:start="151:37" pos:end="151:38">-&gt;</operator><name pos:start="151:39" pos:end="151:43">width</name></name></expr></argument>, <argument pos:start="151:46" pos:end="151:54"><expr pos:start="151:46" pos:end="151:54"><name pos:start="151:46" pos:end="151:54"><name pos:start="151:46" pos:end="151:46">s</name><operator pos:start="151:47" pos:end="151:48">-&gt;</operator><name pos:start="151:49" pos:end="151:54">height</name></name></expr></argument>, <argument pos:start="151:57" pos:end="151:57"><expr pos:start="151:57" pos:end="151:57"><literal type="number" pos:start="151:57" pos:end="151:57">0</literal></expr></argument>, <argument pos:start="151:60" pos:end="151:61"><expr pos:start="151:60" pos:end="151:61"><name pos:start="151:60" pos:end="151:61">s1</name></expr></argument>)</argument_list></call><operator pos:start="151:63" pos:end="151:63">)</operator> <operator pos:start="151:65" pos:end="151:65">&lt;</operator> <literal type="number" pos:start="151:67" pos:end="151:67">0</literal></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="153:19"><block_content pos:start="153:9" pos:end="153:19">

        <return pos:start="153:9" pos:end="153:19">return <expr pos:start="153:16" pos:end="153:18"><name pos:start="153:16" pos:end="153:18">res</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="157:5" pos:end="157:37"><expr pos:start="157:5" pos:end="157:36"><name pos:start="157:5" pos:end="157:19"><name pos:start="157:5" pos:end="157:5">s</name><operator pos:start="157:6" pos:end="157:7">-&gt;</operator><name pos:start="157:8" pos:end="157:19">frame_format</name></name> <operator pos:start="157:21" pos:end="157:21">=</operator> <name pos:start="157:23" pos:end="157:36">desired_format</name></expr>;</expr_stmt>



    <if_stmt pos:start="161:5" pos:end="163:19"><if pos:start="161:5" pos:end="163:19">if <condition pos:start="161:8" pos:end="161:44">(<expr pos:start="161:9" pos:end="161:43"><operator pos:start="161:9" pos:end="161:9">(</operator><name pos:start="161:10" pos:end="161:12">res</name> <operator pos:start="161:14" pos:end="161:14">=</operator> <call pos:start="161:16" pos:end="161:38"><name pos:start="161:16" pos:end="161:34">v4l2_set_parameters</name><argument_list pos:start="161:35" pos:end="161:38">(<argument pos:start="161:36" pos:end="161:37"><expr pos:start="161:36" pos:end="161:37"><name pos:start="161:36" pos:end="161:37">s1</name></expr></argument>)</argument_list></call><operator pos:start="161:39" pos:end="161:39">)</operator> <operator pos:start="161:41" pos:end="161:41">&lt;</operator> <literal type="number" pos:start="161:43" pos:end="161:43">0</literal></expr>)</condition><block type="pseudo" pos:start="163:9" pos:end="163:19"><block_content pos:start="163:9" pos:end="163:19">

        <return pos:start="163:9" pos:end="163:19">return <expr pos:start="163:16" pos:end="163:18"><name pos:start="163:16" pos:end="163:18">res</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="167:5" pos:end="167:62"><expr pos:start="167:5" pos:end="167:61"><name pos:start="167:5" pos:end="167:22"><name pos:start="167:5" pos:end="167:6">st</name><operator pos:start="167:7" pos:end="167:8">-&gt;</operator><name pos:start="167:9" pos:end="167:13">codec</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:22">pix_fmt</name></name> <operator pos:start="167:24" pos:end="167:24">=</operator> <call pos:start="167:26" pos:end="167:61"><name pos:start="167:26" pos:end="167:35">fmt_v4l2ff</name><argument_list pos:start="167:36" pos:end="167:61">(<argument pos:start="167:37" pos:end="167:50"><expr pos:start="167:37" pos:end="167:50"><name pos:start="167:37" pos:end="167:50">desired_format</name></expr></argument>, <argument pos:start="167:53" pos:end="167:60"><expr pos:start="167:53" pos:end="167:60"><name pos:start="167:53" pos:end="167:60">codec_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="171:68"><expr pos:start="169:5" pos:end="171:67"><name pos:start="169:5" pos:end="169:17"><name pos:start="169:5" pos:end="169:5">s</name><operator pos:start="169:6" pos:end="169:7">-&gt;</operator><name pos:start="169:8" pos:end="169:17">frame_size</name></name> <operator pos:start="169:19" pos:end="169:19">=</operator>

        <call pos:start="171:9" pos:end="171:67"><name pos:start="171:9" pos:end="171:26">avpicture_get_size</name><argument_list pos:start="171:27" pos:end="171:67">(<argument pos:start="171:28" pos:end="171:45"><expr pos:start="171:28" pos:end="171:45"><name pos:start="171:28" pos:end="171:45"><name pos:start="171:28" pos:end="171:29">st</name><operator pos:start="171:30" pos:end="171:31">-&gt;</operator><name pos:start="171:32" pos:end="171:36">codec</name><operator pos:start="171:37" pos:end="171:38">-&gt;</operator><name pos:start="171:39" pos:end="171:45">pix_fmt</name></name></expr></argument>, <argument pos:start="171:48" pos:end="171:55"><expr pos:start="171:48" pos:end="171:55"><name pos:start="171:48" pos:end="171:55"><name pos:start="171:48" pos:end="171:48">s</name><operator pos:start="171:49" pos:end="171:50">-&gt;</operator><name pos:start="171:51" pos:end="171:55">width</name></name></expr></argument>, <argument pos:start="171:58" pos:end="171:66"><expr pos:start="171:58" pos:end="171:66"><name pos:start="171:58" pos:end="171:66"><name pos:start="171:58" pos:end="171:58">s</name><operator pos:start="171:59" pos:end="171:60">-&gt;</operator><name pos:start="171:61" pos:end="171:66">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="175:5" pos:end="183:5"><if pos:start="175:5" pos:end="183:5">if <condition pos:start="175:8" pos:end="177:35">(<expr pos:start="175:9" pos:end="177:34"><operator pos:start="175:9" pos:end="175:9">(</operator><name pos:start="175:10" pos:end="175:12">res</name> <operator pos:start="175:14" pos:end="175:14">=</operator> <call pos:start="175:16" pos:end="175:28"><name pos:start="175:16" pos:end="175:24">mmap_init</name><argument_list pos:start="175:25" pos:end="175:28">(<argument pos:start="175:26" pos:end="175:27"><expr pos:start="175:26" pos:end="175:27"><name pos:start="175:26" pos:end="175:27">s1</name></expr></argument>)</argument_list></call><operator pos:start="175:29" pos:end="175:29">)</operator> <operator pos:start="175:31" pos:end="175:32">||</operator>

        <operator pos:start="177:9" pos:end="177:9">(</operator><name pos:start="177:10" pos:end="177:12">res</name> <operator pos:start="177:14" pos:end="177:14">=</operator> <call pos:start="177:16" pos:end="177:29"><name pos:start="177:16" pos:end="177:25">mmap_start</name><argument_list pos:start="177:26" pos:end="177:29">(<argument pos:start="177:27" pos:end="177:28"><expr pos:start="177:27" pos:end="177:28"><name pos:start="177:27" pos:end="177:28">s1</name></expr></argument>)</argument_list></call><operator pos:start="177:30" pos:end="177:30">)</operator> <operator pos:start="177:32" pos:end="177:32">&lt;</operator> <literal type="number" pos:start="177:34" pos:end="177:34">0</literal></expr>)</condition> <block pos:start="177:37" pos:end="183:5">{<block_content pos:start="179:9" pos:end="181:19">

        <expr_stmt pos:start="179:9" pos:end="179:26"><expr pos:start="179:9" pos:end="179:25"><call pos:start="179:9" pos:end="179:25"><name pos:start="179:9" pos:end="179:18">v4l2_close</name><argument_list pos:start="179:19" pos:end="179:25">(<argument pos:start="179:20" pos:end="179:24"><expr pos:start="179:20" pos:end="179:24"><name pos:start="179:20" pos:end="179:24"><name pos:start="179:20" pos:end="179:20">s</name><operator pos:start="179:21" pos:end="179:22">-&gt;</operator><name pos:start="179:23" pos:end="179:24">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="181:9" pos:end="181:19">return <expr pos:start="181:16" pos:end="181:18"><name pos:start="181:16" pos:end="181:18">res</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="187:5" pos:end="187:44"><expr pos:start="187:5" pos:end="187:43"><name pos:start="187:5" pos:end="187:22"><name pos:start="187:5" pos:end="187:5">s</name><operator pos:start="187:6" pos:end="187:7">-&gt;</operator><name pos:start="187:8" pos:end="187:22">top_field_first</name></name> <operator pos:start="187:24" pos:end="187:24">=</operator> <call pos:start="187:26" pos:end="187:43"><name pos:start="187:26" pos:end="187:36">first_field</name><argument_list pos:start="187:37" pos:end="187:43">(<argument pos:start="187:38" pos:end="187:42"><expr pos:start="187:38" pos:end="187:42"><name pos:start="187:38" pos:end="187:42"><name pos:start="187:38" pos:end="187:38">s</name><operator pos:start="187:39" pos:end="187:40">-&gt;</operator><name pos:start="187:41" pos:end="187:42">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:47"><expr pos:start="191:5" pos:end="191:46"><name pos:start="191:5" pos:end="191:25"><name pos:start="191:5" pos:end="191:6">st</name><operator pos:start="191:7" pos:end="191:8">-&gt;</operator><name pos:start="191:9" pos:end="191:13">codec</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:25">codec_type</name></name> <operator pos:start="191:27" pos:end="191:27">=</operator> <name pos:start="191:29" pos:end="191:46">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:35"><expr pos:start="193:5" pos:end="193:34"><name pos:start="193:5" pos:end="193:23"><name pos:start="193:5" pos:end="193:6">st</name><operator pos:start="193:7" pos:end="193:8">-&gt;</operator><name pos:start="193:9" pos:end="193:13">codec</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:23">codec_id</name></name> <operator pos:start="193:25" pos:end="193:25">=</operator> <name pos:start="193:27" pos:end="193:34">codec_id</name></expr>;</expr_stmt>

    <if_stmt pos:start="195:5" pos:end="199:61"><if pos:start="195:5" pos:end="199:61">if <condition pos:start="195:8" pos:end="195:41">(<expr pos:start="195:9" pos:end="195:40"><name pos:start="195:9" pos:end="195:16">codec_id</name> <operator pos:start="195:18" pos:end="195:19">==</operator> <name pos:start="195:21" pos:end="195:40">AV_CODEC_ID_RAWVIDEO</name></expr>)</condition><block type="pseudo" pos:start="197:9" pos:end="199:61"><block_content pos:start="197:9" pos:end="199:61">

        <expr_stmt pos:start="197:9" pos:end="199:61"><expr pos:start="197:9" pos:end="199:60"><name pos:start="197:9" pos:end="197:28"><name pos:start="197:9" pos:end="197:10">st</name><operator pos:start="197:11" pos:end="197:12">-&gt;</operator><name pos:start="197:13" pos:end="197:17">codec</name><operator pos:start="197:18" pos:end="197:19">-&gt;</operator><name pos:start="197:20" pos:end="197:28">codec_tag</name></name> <operator pos:start="197:30" pos:end="197:30">=</operator>

            <call pos:start="199:13" pos:end="199:60"><name pos:start="199:13" pos:end="199:40">avcodec_pix_fmt_to_codec_tag</name><argument_list pos:start="199:41" pos:end="199:60">(<argument pos:start="199:42" pos:end="199:59"><expr pos:start="199:42" pos:end="199:59"><name pos:start="199:42" pos:end="199:59"><name pos:start="199:42" pos:end="199:43">st</name><operator pos:start="199:44" pos:end="199:45">-&gt;</operator><name pos:start="199:46" pos:end="199:50">codec</name><operator pos:start="199:51" pos:end="199:52">-&gt;</operator><name pos:start="199:53" pos:end="199:59">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="201:5" pos:end="203:57"><if pos:start="201:5" pos:end="203:57">if <condition pos:start="201:8" pos:end="201:46">(<expr pos:start="201:9" pos:end="201:45"><name pos:start="201:9" pos:end="201:22">desired_format</name> <operator pos:start="201:24" pos:end="201:25">==</operator> <name pos:start="201:27" pos:end="201:45">V4L2_PIX_FMT_YVU420</name></expr>)</condition><block type="pseudo" pos:start="203:9" pos:end="203:57"><block_content pos:start="203:9" pos:end="203:57">

        <expr_stmt pos:start="203:9" pos:end="203:57"><expr pos:start="203:9" pos:end="203:56"><name pos:start="203:9" pos:end="203:28"><name pos:start="203:9" pos:end="203:10">st</name><operator pos:start="203:11" pos:end="203:12">-&gt;</operator><name pos:start="203:13" pos:end="203:17">codec</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:28">codec_tag</name></name> <operator pos:start="203:30" pos:end="203:30">=</operator> <call pos:start="203:32" pos:end="203:56"><name pos:start="203:32" pos:end="203:36">MKTAG</name><argument_list pos:start="203:37" pos:end="203:56">(<argument pos:start="203:38" pos:end="203:40"><expr pos:start="203:38" pos:end="203:40"><literal type="char" pos:start="203:38" pos:end="203:40">'Y'</literal></expr></argument>, <argument pos:start="203:43" pos:end="203:45"><expr pos:start="203:43" pos:end="203:45"><literal type="char" pos:start="203:43" pos:end="203:45">'V'</literal></expr></argument>, <argument pos:start="203:48" pos:end="203:50"><expr pos:start="203:48" pos:end="203:50"><literal type="char" pos:start="203:48" pos:end="203:50">'1'</literal></expr></argument>, <argument pos:start="203:53" pos:end="203:55"><expr pos:start="203:53" pos:end="203:55"><literal type="char" pos:start="203:53" pos:end="203:55">'2'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:32"><expr pos:start="205:5" pos:end="205:31"><name pos:start="205:5" pos:end="205:20"><name pos:start="205:5" pos:end="205:6">st</name><operator pos:start="205:7" pos:end="205:8">-&gt;</operator><name pos:start="205:9" pos:end="205:13">codec</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:20">width</name></name> <operator pos:start="205:22" pos:end="205:22">=</operator> <name pos:start="205:24" pos:end="205:31"><name pos:start="205:24" pos:end="205:24">s</name><operator pos:start="205:25" pos:end="205:26">-&gt;</operator><name pos:start="205:27" pos:end="205:31">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:34"><expr pos:start="207:5" pos:end="207:33"><name pos:start="207:5" pos:end="207:21"><name pos:start="207:5" pos:end="207:6">st</name><operator pos:start="207:7" pos:end="207:8">-&gt;</operator><name pos:start="207:9" pos:end="207:13">codec</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:21">height</name></name> <operator pos:start="207:23" pos:end="207:23">=</operator> <name pos:start="207:25" pos:end="207:33"><name pos:start="207:25" pos:end="207:25">s</name><operator pos:start="207:26" pos:end="207:27">-&gt;</operator><name pos:start="207:28" pos:end="207:33">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:73"><expr pos:start="209:5" pos:end="209:72"><name pos:start="209:5" pos:end="209:23"><name pos:start="209:5" pos:end="209:6">st</name><operator pos:start="209:7" pos:end="209:8">-&gt;</operator><name pos:start="209:9" pos:end="209:13">codec</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:23">bit_rate</name></name> <operator pos:start="209:25" pos:end="209:25">=</operator> <name pos:start="209:27" pos:end="209:39"><name pos:start="209:27" pos:end="209:27">s</name><operator pos:start="209:28" pos:end="209:29">-&gt;</operator><name pos:start="209:30" pos:end="209:39">frame_size</name></name> <operator pos:start="209:41" pos:end="209:41">*</operator> <call pos:start="209:43" pos:end="209:68"><name pos:start="209:43" pos:end="209:48">av_q2d</name><argument_list pos:start="209:49" pos:end="209:68">(<argument pos:start="209:50" pos:end="209:67"><expr pos:start="209:50" pos:end="209:67"><name pos:start="209:50" pos:end="209:67"><name pos:start="209:50" pos:end="209:51">st</name><operator pos:start="209:52" pos:end="209:53">-&gt;</operator><name pos:start="209:54" pos:end="209:67">avg_frame_rate</name></name></expr></argument>)</argument_list></call> <operator pos:start="209:70" pos:end="209:70">*</operator> <literal type="number" pos:start="209:72" pos:end="209:72">8</literal></expr>;</expr_stmt>



    <return pos:start="213:5" pos:end="213:13">return <expr pos:start="213:12" pos:end="213:12"><literal type="number" pos:start="213:12" pos:end="213:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
