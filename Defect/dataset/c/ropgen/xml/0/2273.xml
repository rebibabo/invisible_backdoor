<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2273.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">VFIOINTp</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:31">vfio_init_intp</name><parameter_list pos:start="1:32" pos:end="3:58">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><name pos:start="1:33" pos:end="1:42">VFIODevice</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:52">vbasedev</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:57"><decl pos:start="3:33" pos:end="3:57"><type pos:start="3:33" pos:end="3:57"><name pos:start="3:33" pos:end="3:52"><name pos:start="3:33" pos:end="3:38">struct</name> <name pos:start="3:40" pos:end="3:52">vfio_irq_info</name></name></type> <name pos:start="3:54" pos:end="3:57">info</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:16">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="11:61"><decl pos:start="9:5" pos:end="11:60"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:22">VFIOPlatformDevice</name> <modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:28">vdev</name> <init pos:start="9:30" pos:end="11:60">=

        <expr pos:start="11:9" pos:end="11:60"><call pos:start="11:9" pos:end="11:60"><name pos:start="11:9" pos:end="11:20">container_of</name><argument_list pos:start="11:21" pos:end="11:60">(<argument pos:start="11:22" pos:end="11:29"><expr pos:start="11:22" pos:end="11:29"><name pos:start="11:22" pos:end="11:29">vbasedev</name></expr></argument>, <argument pos:start="11:32" pos:end="11:49"><expr pos:start="11:32" pos:end="11:49"><name pos:start="11:32" pos:end="11:49">VFIOPlatformDevice</name></expr></argument>, <argument pos:start="11:52" pos:end="11:59"><expr pos:start="11:52" pos:end="11:59"><name pos:start="11:52" pos:end="11:59">vbasedev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:46"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">SysBusDevice</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:23">sbdev</name> <init pos:start="13:25" pos:end="13:46">= <expr pos:start="13:27" pos:end="13:46"><call pos:start="13:27" pos:end="13:46"><name pos:start="13:27" pos:end="13:40">SYS_BUS_DEVICE</name><argument_list pos:start="13:41" pos:end="13:46">(<argument pos:start="13:42" pos:end="13:45"><expr pos:start="13:42" pos:end="13:45"><name pos:start="13:42" pos:end="13:45">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">VFIOINTp</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:18">intp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:8">intp</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:35"><name pos:start="19:12" pos:end="19:20">g_malloc0</name><argument_list pos:start="19:21" pos:end="19:35">(<argument pos:start="19:22" pos:end="19:34"><expr pos:start="19:22" pos:end="19:34"><sizeof pos:start="19:22" pos:end="19:34">sizeof<argument_list pos:start="19:28" pos:end="19:34">(<argument pos:start="19:29" pos:end="19:33"><expr pos:start="19:29" pos:end="19:33"><operator pos:start="19:29" pos:end="19:29">*</operator><name pos:start="19:30" pos:end="19:33">intp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:8">intp</name><operator pos:start="21:9" pos:end="21:10">-&gt;</operator><name pos:start="21:11" pos:end="21:14">vdev</name></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:21">vdev</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:8">intp</name><operator pos:start="23:9" pos:end="23:10">-&gt;</operator><name pos:start="23:11" pos:end="23:13">pin</name></name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:26"><name pos:start="23:17" pos:end="23:20">info</name><operator pos:start="23:21" pos:end="23:21">.</operator><name pos:start="23:22" pos:end="23:26">index</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:8">intp</name><operator pos:start="25:9" pos:end="25:10">-&gt;</operator><name pos:start="25:11" pos:end="25:15">flags</name></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <name pos:start="25:19" pos:end="25:28"><name pos:start="25:19" pos:end="25:22">info</name><operator pos:start="25:23" pos:end="25:23">.</operator><name pos:start="25:24" pos:end="25:28">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:8">intp</name><operator pos:start="27:9" pos:end="27:10">-&gt;</operator><name pos:start="27:11" pos:end="27:15">state</name></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:35">VFIO_IRQ_INACTIVE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:8">intp</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:19">kvm_accel</name></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <name pos:start="29:23" pos:end="29:27">false</name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:43"><expr pos:start="33:5" pos:end="33:42"><call pos:start="33:5" pos:end="33:42"><name pos:start="33:5" pos:end="33:19">sysbus_init_irq</name><argument_list pos:start="33:20" pos:end="33:42">(<argument pos:start="33:21" pos:end="33:25"><expr pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:25">sbdev</name></expr></argument>, <argument pos:start="33:28" pos:end="33:41"><expr pos:start="33:28" pos:end="33:41"><operator pos:start="33:28" pos:end="33:28">&amp;</operator><name pos:start="33:29" pos:end="33:41"><name pos:start="33:29" pos:end="33:32">intp</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:41">qemuirq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:36">/* Get an eventfd for trigger */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:51"><expr pos:start="39:5" pos:end="39:50"><name pos:start="39:5" pos:end="39:7">ret</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:50"><name pos:start="39:11" pos:end="39:29">event_notifier_init</name><argument_list pos:start="39:30" pos:end="39:50">(<argument pos:start="39:31" pos:end="39:46"><expr pos:start="39:31" pos:end="39:46"><operator pos:start="39:31" pos:end="39:31">&amp;</operator><name pos:start="39:32" pos:end="39:46"><name pos:start="39:32" pos:end="39:35">intp</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:46">interrupt</name></name></expr></argument>, <argument pos:start="39:49" pos:end="39:49"><expr pos:start="39:49" pos:end="39:49"><literal type="number" pos:start="39:49" pos:end="39:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:12">(<expr pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">ret</name></expr>)</condition> <block pos:start="41:14" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:20">

        <expr_stmt pos:start="43:9" pos:end="43:21"><expr pos:start="43:9" pos:end="43:20"><call pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:14">g_free</name><argument_list pos:start="43:15" pos:end="43:20">(<argument pos:start="43:16" pos:end="43:19"><expr pos:start="43:16" pos:end="43:19"><name pos:start="43:16" pos:end="43:19">intp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:73"><expr pos:start="45:9" pos:end="45:72"><call pos:start="45:9" pos:end="45:72"><name pos:start="45:9" pos:end="45:20">error_report</name><argument_list pos:start="45:21" pos:end="45:72">(<argument pos:start="45:22" pos:end="45:71"><expr pos:start="45:22" pos:end="45:71"><literal type="string" pos:start="45:22" pos:end="45:71">"vfio: Error: trigger event_notifier_init failed "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:20">return <expr pos:start="47:16" pos:end="47:19"><name pos:start="47:16" pos:end="47:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="51:5" pos:end="51:44">/* Get an eventfd for resample/unmask */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:48"><expr pos:start="53:5" pos:end="53:47"><name pos:start="53:5" pos:end="53:7">ret</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="53:47"><name pos:start="53:11" pos:end="53:29">event_notifier_init</name><argument_list pos:start="53:30" pos:end="53:47">(<argument pos:start="53:31" pos:end="53:43"><expr pos:start="53:31" pos:end="53:43"><operator pos:start="53:31" pos:end="53:31">&amp;</operator><name pos:start="53:32" pos:end="53:43"><name pos:start="53:32" pos:end="53:35">intp</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:43">unmask</name></name></expr></argument>, <argument pos:start="53:46" pos:end="53:46"><expr pos:start="53:46" pos:end="53:46"><literal type="number" pos:start="53:46" pos:end="53:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="63:5">if <condition pos:start="55:8" pos:end="55:12">(<expr pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">ret</name></expr>)</condition> <block pos:start="55:14" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:20">

        <expr_stmt pos:start="57:9" pos:end="57:21"><expr pos:start="57:9" pos:end="57:20"><call pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:14">g_free</name><argument_list pos:start="57:15" pos:end="57:20">(<argument pos:start="57:16" pos:end="57:19"><expr pos:start="57:16" pos:end="57:19"><name pos:start="57:16" pos:end="57:19">intp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:75"><expr pos:start="59:9" pos:end="59:74"><call pos:start="59:9" pos:end="59:74"><name pos:start="59:9" pos:end="59:20">error_report</name><argument_list pos:start="59:21" pos:end="59:74">(<argument pos:start="59:22" pos:end="59:73"><expr pos:start="59:22" pos:end="59:73"><literal type="string" pos:start="59:22" pos:end="59:73">"vfio: Error: resamplefd event_notifier_init failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:20">return <expr pos:start="61:16" pos:end="61:19"><name pos:start="61:16" pos:end="61:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:52"><expr pos:start="67:5" pos:end="67:51"><call pos:start="67:5" pos:end="67:51"><name pos:start="67:5" pos:end="67:21">QLIST_INSERT_HEAD</name><argument_list pos:start="67:22" pos:end="67:51">(<argument pos:start="67:23" pos:end="67:38"><expr pos:start="67:23" pos:end="67:38"><operator pos:start="67:23" pos:end="67:23">&amp;</operator><name pos:start="67:24" pos:end="67:38"><name pos:start="67:24" pos:end="67:27">vdev</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:38">intp_list</name></name></expr></argument>, <argument pos:start="67:41" pos:end="67:44"><expr pos:start="67:41" pos:end="67:44"><name pos:start="67:41" pos:end="67:44">intp</name></expr></argument>, <argument pos:start="67:47" pos:end="67:50"><expr pos:start="67:47" pos:end="67:50"><name pos:start="67:47" pos:end="67:50">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="69:5" pos:end="69:16">return <expr pos:start="69:12" pos:end="69:15"><name pos:start="69:12" pos:end="69:15">intp</name></expr>;</return>

</block_content>}</block></function>
</unit>
