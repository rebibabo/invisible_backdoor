<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22393.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">copy_parameter_set</name><parameter_list pos:start="1:31" pos:end="1:75">(<parameter pos:start="1:32" pos:end="1:40"><decl pos:start="1:32" pos:end="1:40"><type pos:start="1:32" pos:end="1:40"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier><modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">to</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:46">void</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier><modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">from</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:64"><decl pos:start="1:56" pos:end="1:64"><type pos:start="1:56" pos:end="1:64"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:64">count</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:74"><decl pos:start="1:67" pos:end="1:74"><type pos:start="1:67" pos:end="1:74"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:74">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="25:5">for <control pos:start="9:9" pos:end="9:31">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:26"><expr pos:start="9:17" pos:end="9:25"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <name pos:start="9:21" pos:end="9:25">count</name></expr>;</condition> <incr pos:start="9:28" pos:end="9:30"><expr pos:start="9:28" pos:end="9:30"><name pos:start="9:28" pos:end="9:28">i</name><operator pos:start="9:29" pos:end="9:30">++</operator></expr></incr>)</control> <block pos:start="9:33" pos:end="25:5">{<block_content pos:start="11:9" pos:end="23:41">

        <if_stmt pos:start="11:9" pos:end="17:36"><if pos:start="11:9" pos:end="13:29">if <condition pos:start="11:12" pos:end="11:30">(<expr pos:start="11:13" pos:end="11:29"><name pos:start="11:13" pos:end="11:17"><name pos:start="11:13" pos:end="11:14">to</name><index pos:start="11:15" pos:end="11:17">[<expr pos:start="11:16" pos:end="11:16"><name pos:start="11:16" pos:end="11:16">i</name></expr>]</index></name> <operator pos:start="11:19" pos:end="11:20">&amp;&amp;</operator> <operator pos:start="11:22" pos:end="11:22">!</operator><name pos:start="11:23" pos:end="11:29"><name pos:start="11:23" pos:end="11:26">from</name><index pos:start="11:27" pos:end="11:29">[<expr pos:start="11:28" pos:end="11:28"><name pos:start="11:28" pos:end="11:28">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="13:13" pos:end="13:29"><block_content pos:start="13:13" pos:end="13:29">

            <expr_stmt pos:start="13:13" pos:end="13:29"><expr pos:start="13:13" pos:end="13:28"><call pos:start="13:13" pos:end="13:28"><name pos:start="13:13" pos:end="13:20">av_freep</name><argument_list pos:start="13:21" pos:end="13:28">(<argument pos:start="13:22" pos:end="13:27"><expr pos:start="13:22" pos:end="13:27"><operator pos:start="13:22" pos:end="13:22">&amp;</operator><name pos:start="13:23" pos:end="13:27"><name pos:start="13:23" pos:end="13:24">to</name><index pos:start="13:25" pos:end="13:27">[<expr pos:start="13:26" pos:end="13:26"><name pos:start="13:26" pos:end="13:26">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="15:9" pos:end="17:36">else if <condition pos:start="15:17" pos:end="15:35">(<expr pos:start="15:18" pos:end="15:34"><name pos:start="15:18" pos:end="15:24"><name pos:start="15:18" pos:end="15:21">from</name><index pos:start="15:22" pos:end="15:24">[<expr pos:start="15:23" pos:end="15:23"><name pos:start="15:23" pos:end="15:23">i</name></expr>]</index></name> <operator pos:start="15:26" pos:end="15:27">&amp;&amp;</operator> <operator pos:start="15:29" pos:end="15:29">!</operator><name pos:start="15:30" pos:end="15:34"><name pos:start="15:30" pos:end="15:31">to</name><index pos:start="15:32" pos:end="15:34">[<expr pos:start="15:33" pos:end="15:33"><name pos:start="15:33" pos:end="15:33">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:36"><block_content pos:start="17:13" pos:end="17:36">

            <expr_stmt pos:start="17:13" pos:end="17:36"><expr pos:start="17:13" pos:end="17:35"><name pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:14">to</name><index pos:start="17:15" pos:end="17:17">[<expr pos:start="17:16" pos:end="17:16"><name pos:start="17:16" pos:end="17:16">i</name></expr>]</index></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <call pos:start="17:21" pos:end="17:35"><name pos:start="17:21" pos:end="17:29">av_malloc</name><argument_list pos:start="17:30" pos:end="17:35">(<argument pos:start="17:31" pos:end="17:34"><expr pos:start="17:31" pos:end="17:34"><name pos:start="17:31" pos:end="17:34">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="21:9" pos:end="23:41"><if pos:start="21:9" pos:end="23:41">if <condition pos:start="21:12" pos:end="21:20">(<expr pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:16">from</name><index pos:start="21:17" pos:end="21:19">[<expr pos:start="21:18" pos:end="21:18"><name pos:start="21:18" pos:end="21:18">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:41"><block_content pos:start="23:13" pos:end="23:41">

            <expr_stmt pos:start="23:13" pos:end="23:41"><expr pos:start="23:13" pos:end="23:40"><call pos:start="23:13" pos:end="23:40"><name pos:start="23:13" pos:end="23:18">memcpy</name><argument_list pos:start="23:19" pos:end="23:40">(<argument pos:start="23:20" pos:end="23:24"><expr pos:start="23:20" pos:end="23:24"><name pos:start="23:20" pos:end="23:24"><name pos:start="23:20" pos:end="23:21">to</name><index pos:start="23:22" pos:end="23:24">[<expr pos:start="23:23" pos:end="23:23"><name pos:start="23:23" pos:end="23:23">i</name></expr>]</index></name></expr></argument>, <argument pos:start="23:27" pos:end="23:33"><expr pos:start="23:27" pos:end="23:33"><name pos:start="23:27" pos:end="23:33"><name pos:start="23:27" pos:end="23:30">from</name><index pos:start="23:31" pos:end="23:33">[<expr pos:start="23:32" pos:end="23:32"><name pos:start="23:32" pos:end="23:32">i</name></expr>]</index></name></expr></argument>, <argument pos:start="23:36" pos:end="23:39"><expr pos:start="23:36" pos:end="23:39"><name pos:start="23:36" pos:end="23:39">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
