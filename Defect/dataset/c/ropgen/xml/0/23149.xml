<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23149.c" pos:tabs="8"><function pos:start="1:1" pos:end="195:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">apic_mem_writel</name><parameter_list pos:start="1:28" pos:end="1:80">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:65"><decl pos:start="1:43" pos:end="1:65"><type pos:start="1:43" pos:end="1:65"><name pos:start="1:43" pos:end="1:60">target_phys_addr_t</name></type> <name pos:start="1:62" pos:end="1:65">addr</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:79"><decl pos:start="1:68" pos:end="1:79"><type pos:start="1:68" pos:end="1:79"><name pos:start="1:68" pos:end="1:75">uint32_t</name></type> <name pos:start="1:77" pos:end="1:79">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="195:1">{<block_content pos:start="5:5" pos:end="193:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">APICCommonState</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:22">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">index</name> <init pos:start="9:15" pos:end="9:34">= <expr pos:start="9:17" pos:end="9:34"><operator pos:start="9:17" pos:end="9:17">(</operator><name pos:start="9:18" pos:end="9:21">addr</name> <operator pos:start="9:23" pos:end="9:24">&gt;&gt;</operator> <literal type="number" pos:start="9:26" pos:end="9:26">4</literal><operator pos:start="9:27" pos:end="9:27">)</operator> <operator pos:start="9:29" pos:end="9:29">&amp;</operator> <literal type="number" pos:start="9:31" pos:end="9:34">0xff</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="27:5"><if pos:start="11:5" pos:end="27:5">if <condition pos:start="11:8" pos:end="11:31">(<expr pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:12">addr</name> <operator pos:start="11:14" pos:end="11:14">&gt;</operator> <literal type="number" pos:start="11:16" pos:end="11:20">0xfff</literal> <operator pos:start="11:22" pos:end="11:23">||</operator> <operator pos:start="11:25" pos:end="11:25">!</operator><name pos:start="11:26" pos:end="11:30">index</name></expr>)</condition> <block pos:start="11:33" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <comment type="block" pos:start="13:9" pos:end="21:69">/* MSI and MMIO APIC are at the same memory location,

         * but actually not on the global bus: MSI is on PCI bus

         * APIC is connected directly to the CPU.

         * Mapping them on the global bus happens to work because

         * MSI registers are reserved in APIC MMIO and vice versa. */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:33"><expr pos:start="23:9" pos:end="23:32"><call pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:21">apic_send_msi</name><argument_list pos:start="23:22" pos:end="23:32">(<argument pos:start="23:23" pos:end="23:26"><expr pos:start="23:23" pos:end="23:26"><name pos:start="23:23" pos:end="23:26">addr</name></expr></argument>, <argument pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:31">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:31"><expr pos:start="31:5" pos:end="31:30"><name pos:start="31:5" pos:end="31:5">d</name> <operator pos:start="31:7" pos:end="31:7">=</operator> <call pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:28">cpu_get_current_apic</name><argument_list pos:start="31:29" pos:end="31:30">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:11">(<expr pos:start="33:9" pos:end="33:10"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:10">d</name></expr>)</condition> <block pos:start="33:13" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:15">

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:51"><expr pos:start="39:5" pos:end="39:50"><name pos:start="39:5" pos:end="39:5">s</name> <operator pos:start="39:7" pos:end="39:7">=</operator> <call pos:start="39:9" pos:end="39:50"><name pos:start="39:9" pos:end="39:17">DO_UPCAST</name><argument_list pos:start="39:18" pos:end="39:50">(<argument pos:start="39:19" pos:end="39:33"><expr pos:start="39:19" pos:end="39:33"><name pos:start="39:19" pos:end="39:33">APICCommonState</name></expr></argument>, <argument pos:start="39:36" pos:end="39:46"><expr pos:start="39:36" pos:end="39:46"><name pos:start="39:36" pos:end="39:46"><name pos:start="39:36" pos:end="39:41">busdev</name><operator pos:start="39:42" pos:end="39:42">.</operator><name pos:start="39:43" pos:end="39:46">qdev</name></name></expr></argument>, <argument pos:start="39:49" pos:end="39:49"><expr pos:start="39:49" pos:end="39:49"><name pos:start="39:49" pos:end="39:49">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:37"><expr pos:start="43:5" pos:end="43:36"><call pos:start="43:5" pos:end="43:36"><name pos:start="43:5" pos:end="43:25">trace_apic_mem_writel</name><argument_list pos:start="43:26" pos:end="43:36">(<argument pos:start="43:27" pos:end="43:30"><expr pos:start="43:27" pos:end="43:30"><name pos:start="43:27" pos:end="43:30">addr</name></expr></argument>, <argument pos:start="43:33" pos:end="43:35"><expr pos:start="43:33" pos:end="43:35"><name pos:start="43:33" pos:end="43:35">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="47:5" pos:end="193:5">switch<condition pos:start="47:11" pos:end="47:17">(<expr pos:start="47:12" pos:end="47:16"><name pos:start="47:12" pos:end="47:16">index</name></expr>)</condition> <block pos:start="47:19" pos:end="193:5">{<block_content pos:start="49:5" pos:end="191:14">

    <case pos:start="49:5" pos:end="49:14">case <expr pos:start="49:10" pos:end="49:13"><literal type="number" pos:start="49:10" pos:end="49:13">0x02</literal></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:28"><expr pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:13"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:13">id</name></name> <operator pos:start="51:15" pos:end="51:15">=</operator> <operator pos:start="51:17" pos:end="51:17">(</operator><name pos:start="51:18" pos:end="51:20">val</name> <operator pos:start="51:22" pos:end="51:23">&gt;&gt;</operator> <literal type="number" pos:start="51:25" pos:end="51:26">24</literal><operator pos:start="51:27" pos:end="51:27">)</operator></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:14">case <expr pos:start="55:10" pos:end="55:13"><literal type="number" pos:start="55:10" pos:end="55:13">0x03</literal></expr>:</case>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <case pos:start="59:5" pos:end="59:14">case <expr pos:start="59:10" pos:end="59:13"><literal type="number" pos:start="59:10" pos:end="59:13">0x08</literal></expr>:</case>

        <if_stmt pos:start="61:9" pos:end="65:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:35">(<expr pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:34">apic_report_tpr_access</name></expr>)</condition> <block pos:start="61:37" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:64">

            <expr_stmt pos:start="63:13" pos:end="63:64"><expr pos:start="63:13" pos:end="63:63"><call pos:start="63:13" pos:end="63:63"><name pos:start="63:13" pos:end="63:33">cpu_report_tpr_access</name><argument_list pos:start="63:34" pos:end="63:63">(<argument pos:start="63:35" pos:end="63:44"><expr pos:start="63:35" pos:end="63:44"><name pos:start="63:35" pos:end="63:44"><name pos:start="63:35" pos:end="63:35">s</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:44">cpu_env</name></name></expr></argument>, <argument pos:start="63:47" pos:end="63:62"><expr pos:start="63:47" pos:end="63:62"><name pos:start="63:47" pos:end="63:62">TPR_ACCESS_WRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:21"><expr pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:14"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:14">tpr</name></name> <operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:20">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:42"><expr pos:start="69:9" pos:end="69:41"><call pos:start="69:9" pos:end="69:41"><name pos:start="69:9" pos:end="69:23">apic_sync_vapic</name><argument_list pos:start="69:24" pos:end="69:41">(<argument pos:start="69:25" pos:end="69:25"><expr pos:start="69:25" pos:end="69:25"><name pos:start="69:25" pos:end="69:25">s</name></expr></argument>, <argument pos:start="69:28" pos:end="69:40"><expr pos:start="69:28" pos:end="69:40"><name pos:start="69:28" pos:end="69:40">SYNC_TO_VAPIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:27"><expr pos:start="71:9" pos:end="71:26"><call pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:23">apic_update_irq</name><argument_list pos:start="71:24" pos:end="71:26">(<argument pos:start="71:25" pos:end="71:25"><expr pos:start="71:25" pos:end="71:25"><name pos:start="71:25" pos:end="71:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:14">case <expr pos:start="75:10" pos:end="75:13"><literal type="number" pos:start="75:10" pos:end="75:13">0x09</literal></expr>:</case>

    <case pos:start="77:5" pos:end="77:14">case <expr pos:start="77:10" pos:end="77:13"><literal type="number" pos:start="77:10" pos:end="77:13">0x0a</literal></expr>:</case>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:14">case <expr pos:start="81:10" pos:end="81:13"><literal type="number" pos:start="81:10" pos:end="81:13">0x0b</literal></expr>:</case> <comment type="block" pos:start="81:16" pos:end="81:24">/* EOI */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:20"><expr pos:start="83:9" pos:end="83:19"><call pos:start="83:9" pos:end="83:19"><name pos:start="83:9" pos:end="83:16">apic_eoi</name><argument_list pos:start="83:17" pos:end="83:19">(<argument pos:start="83:18" pos:end="83:18"><expr pos:start="83:18" pos:end="83:18"><name pos:start="83:18" pos:end="83:18">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    <case pos:start="87:5" pos:end="87:14">case <expr pos:start="87:10" pos:end="87:13"><literal type="number" pos:start="87:10" pos:end="87:13">0x0d</literal></expr>:</case>

        <expr_stmt pos:start="89:9" pos:end="89:32"><expr pos:start="89:9" pos:end="89:31"><name pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:19">log_dest</name></name> <operator pos:start="89:21" pos:end="89:21">=</operator> <name pos:start="89:23" pos:end="89:25">val</name> <operator pos:start="89:27" pos:end="89:28">&gt;&gt;</operator> <literal type="number" pos:start="89:30" pos:end="89:31">24</literal></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    <case pos:start="93:5" pos:end="93:14">case <expr pos:start="93:10" pos:end="93:13"><literal type="number" pos:start="93:10" pos:end="93:13">0x0e</literal></expr>:</case>

        <expr_stmt pos:start="95:9" pos:end="95:33"><expr pos:start="95:9" pos:end="95:32"><name pos:start="95:9" pos:end="95:20"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:20">dest_mode</name></name> <operator pos:start="95:22" pos:end="95:22">=</operator> <name pos:start="95:24" pos:end="95:26">val</name> <operator pos:start="95:28" pos:end="95:29">&gt;&gt;</operator> <literal type="number" pos:start="95:31" pos:end="95:32">28</literal></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <case pos:start="99:5" pos:end="99:14">case <expr pos:start="99:10" pos:end="99:13"><literal type="number" pos:start="99:10" pos:end="99:13">0x0f</literal></expr>:</case>

        <expr_stmt pos:start="101:9" pos:end="101:38"><expr pos:start="101:9" pos:end="101:37"><name pos:start="101:9" pos:end="101:23"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:23">spurious_vec</name></name> <operator pos:start="101:25" pos:end="101:25">=</operator> <name pos:start="101:27" pos:end="101:29">val</name> <operator pos:start="101:31" pos:end="101:31">&amp;</operator> <literal type="number" pos:start="101:33" pos:end="101:37">0x1ff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:27"><expr pos:start="103:9" pos:end="103:26"><call pos:start="103:9" pos:end="103:26"><name pos:start="103:9" pos:end="103:23">apic_update_irq</name><argument_list pos:start="103:24" pos:end="103:26">(<argument pos:start="103:25" pos:end="103:25"><expr pos:start="103:25" pos:end="103:25"><name pos:start="103:25" pos:end="103:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    <case pos:start="107:5" pos:end="107:23">case <expr pos:start="107:10" pos:end="107:22"><literal type="number" pos:start="107:10" pos:end="107:13">0x10</literal> <operator pos:start="107:15" pos:end="107:17">...</operator> <literal type="number" pos:start="107:19" pos:end="107:22">0x17</literal></expr>:</case>

    <case pos:start="109:5" pos:end="109:23">case <expr pos:start="109:10" pos:end="109:22"><literal type="number" pos:start="109:10" pos:end="109:13">0x18</literal> <operator pos:start="109:15" pos:end="109:17">...</operator> <literal type="number" pos:start="109:19" pos:end="109:22">0x1f</literal></expr>:</case>

    <case pos:start="111:5" pos:end="111:23">case <expr pos:start="111:10" pos:end="111:22"><literal type="number" pos:start="111:10" pos:end="111:13">0x20</literal> <operator pos:start="111:15" pos:end="111:17">...</operator> <literal type="number" pos:start="111:19" pos:end="111:22">0x27</literal></expr>:</case>

    <case pos:start="113:5" pos:end="113:14">case <expr pos:start="113:10" pos:end="113:13"><literal type="number" pos:start="113:10" pos:end="113:13">0x28</literal></expr>:</case>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    <case pos:start="117:5" pos:end="117:14">case <expr pos:start="117:10" pos:end="117:13"><literal type="number" pos:start="117:10" pos:end="117:13">0x30</literal></expr>:</case>

        <expr_stmt pos:start="119:9" pos:end="119:24"><expr pos:start="119:9" pos:end="119:23"><name pos:start="119:9" pos:end="119:17"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:14">icr</name><index pos:start="119:15" pos:end="119:17">[<expr pos:start="119:16" pos:end="119:16"><literal type="number" pos:start="119:16" pos:end="119:16">0</literal></expr>]</index></name> <operator pos:start="119:19" pos:end="119:19">=</operator> <name pos:start="119:21" pos:end="119:23">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="125:44"><expr pos:start="121:9" pos:end="125:43"><call pos:start="121:9" pos:end="125:43"><name pos:start="121:9" pos:end="121:20">apic_deliver</name><argument_list pos:start="121:21" pos:end="125:43">(<argument pos:start="121:22" pos:end="121:22"><expr pos:start="121:22" pos:end="121:22"><name pos:start="121:22" pos:end="121:22">d</name></expr></argument>, <argument pos:start="121:25" pos:end="121:48"><expr pos:start="121:25" pos:end="121:48"><operator pos:start="121:25" pos:end="121:25">(</operator><name pos:start="121:26" pos:end="121:34"><name pos:start="121:26" pos:end="121:26">s</name><operator pos:start="121:27" pos:end="121:28">-&gt;</operator><name pos:start="121:29" pos:end="121:31">icr</name><index pos:start="121:32" pos:end="121:34">[<expr pos:start="121:33" pos:end="121:33"><literal type="number" pos:start="121:33" pos:end="121:33">1</literal></expr>]</index></name> <operator pos:start="121:36" pos:end="121:37">&gt;&gt;</operator> <literal type="number" pos:start="121:39" pos:end="121:40">24</literal><operator pos:start="121:41" pos:end="121:41">)</operator> <operator pos:start="121:43" pos:end="121:43">&amp;</operator> <literal type="number" pos:start="121:45" pos:end="121:48">0xff</literal></expr></argument>, <argument pos:start="121:51" pos:end="121:71"><expr pos:start="121:51" pos:end="121:71"><operator pos:start="121:51" pos:end="121:51">(</operator><name pos:start="121:52" pos:end="121:60"><name pos:start="121:52" pos:end="121:52">s</name><operator pos:start="121:53" pos:end="121:54">-&gt;</operator><name pos:start="121:55" pos:end="121:57">icr</name><index pos:start="121:58" pos:end="121:60">[<expr pos:start="121:59" pos:end="121:59"><literal type="number" pos:start="121:59" pos:end="121:59">0</literal></expr>]</index></name> <operator pos:start="121:62" pos:end="121:63">&gt;&gt;</operator> <literal type="number" pos:start="121:65" pos:end="121:66">11</literal><operator pos:start="121:67" pos:end="121:67">)</operator> <operator pos:start="121:69" pos:end="121:69">&amp;</operator> <literal type="number" pos:start="121:71" pos:end="121:71">1</literal></expr></argument>,

                     <argument pos:start="123:22" pos:end="123:41"><expr pos:start="123:22" pos:end="123:41"><operator pos:start="123:22" pos:end="123:22">(</operator><name pos:start="123:23" pos:end="123:31"><name pos:start="123:23" pos:end="123:23">s</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:28">icr</name><index pos:start="123:29" pos:end="123:31">[<expr pos:start="123:30" pos:end="123:30"><literal type="number" pos:start="123:30" pos:end="123:30">0</literal></expr>]</index></name> <operator pos:start="123:33" pos:end="123:34">&gt;&gt;</operator> <literal type="number" pos:start="123:36" pos:end="123:36">8</literal><operator pos:start="123:37" pos:end="123:37">)</operator> <operator pos:start="123:39" pos:end="123:39">&amp;</operator> <literal type="number" pos:start="123:41" pos:end="123:41">7</literal></expr></argument>, <argument pos:start="123:44" pos:end="123:61"><expr pos:start="123:44" pos:end="123:61"><operator pos:start="123:44" pos:end="123:44">(</operator><name pos:start="123:45" pos:end="123:53"><name pos:start="123:45" pos:end="123:45">s</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:50">icr</name><index pos:start="123:51" pos:end="123:53">[<expr pos:start="123:52" pos:end="123:52"><literal type="number" pos:start="123:52" pos:end="123:52">0</literal></expr>]</index></name> <operator pos:start="123:55" pos:end="123:55">&amp;</operator> <literal type="number" pos:start="123:57" pos:end="123:60">0xff</literal><operator pos:start="123:61" pos:end="123:61">)</operator></expr></argument>,

                     <argument pos:start="125:22" pos:end="125:42"><expr pos:start="125:22" pos:end="125:42"><operator pos:start="125:22" pos:end="125:22">(</operator><name pos:start="125:23" pos:end="125:31"><name pos:start="125:23" pos:end="125:23">s</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:28">icr</name><index pos:start="125:29" pos:end="125:31">[<expr pos:start="125:30" pos:end="125:30"><literal type="number" pos:start="125:30" pos:end="125:30">0</literal></expr>]</index></name> <operator pos:start="125:33" pos:end="125:34">&gt;&gt;</operator> <literal type="number" pos:start="125:36" pos:end="125:37">15</literal><operator pos:start="125:38" pos:end="125:38">)</operator> <operator pos:start="125:40" pos:end="125:40">&amp;</operator> <literal type="number" pos:start="125:42" pos:end="125:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>

    <case pos:start="129:5" pos:end="129:14">case <expr pos:start="129:10" pos:end="129:13"><literal type="number" pos:start="129:10" pos:end="129:13">0x31</literal></expr>:</case>

        <expr_stmt pos:start="131:9" pos:end="131:24"><expr pos:start="131:9" pos:end="131:23"><name pos:start="131:9" pos:end="131:17"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:14">icr</name><index pos:start="131:15" pos:end="131:17">[<expr pos:start="131:16" pos:end="131:16"><literal type="number" pos:start="131:16" pos:end="131:16">1</literal></expr>]</index></name> <operator pos:start="131:19" pos:end="131:19">=</operator> <name pos:start="131:21" pos:end="131:23">val</name></expr>;</expr_stmt>

        <break pos:start="133:9" pos:end="133:14">break;</break>

    <case pos:start="135:5" pos:end="135:23">case <expr pos:start="135:10" pos:end="135:22"><literal type="number" pos:start="135:10" pos:end="135:13">0x32</literal> <operator pos:start="135:15" pos:end="135:17">...</operator> <literal type="number" pos:start="135:19" pos:end="135:22">0x37</literal></expr>:</case>

        <block pos:start="137:9" pos:end="153:9">{<block_content pos:start="139:13" pos:end="151:13">

            <decl_stmt pos:start="139:13" pos:end="139:33"><decl pos:start="139:13" pos:end="139:32"><type pos:start="139:13" pos:end="139:15"><name pos:start="139:13" pos:end="139:15">int</name></type> <name pos:start="139:17" pos:end="139:17">n</name> <init pos:start="139:19" pos:end="139:32">= <expr pos:start="139:21" pos:end="139:32"><name pos:start="139:21" pos:end="139:25">index</name> <operator pos:start="139:27" pos:end="139:27">-</operator> <literal type="number" pos:start="139:29" pos:end="139:32">0x32</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:28"><expr pos:start="141:13" pos:end="141:27"><name pos:start="141:13" pos:end="141:21"><name pos:start="141:13" pos:end="141:13">s</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:18">lvt</name><index pos:start="141:19" pos:end="141:21">[<expr pos:start="141:20" pos:end="141:20"><name pos:start="141:20" pos:end="141:20">n</name></expr>]</index></name> <operator pos:start="141:23" pos:end="141:23">=</operator> <name pos:start="141:25" pos:end="141:27">val</name></expr>;</expr_stmt>

            <if_stmt pos:start="143:13" pos:end="151:13"><if pos:start="143:13" pos:end="147:13">if <condition pos:start="143:16" pos:end="143:36">(<expr pos:start="143:17" pos:end="143:35"><name pos:start="143:17" pos:end="143:17">n</name> <operator pos:start="143:19" pos:end="143:20">==</operator> <name pos:start="143:22" pos:end="143:35">APIC_LVT_TIMER</name></expr>)</condition> <block pos:start="143:38" pos:end="147:13">{<block_content pos:start="145:17" pos:end="145:66">

                <expr_stmt pos:start="145:17" pos:end="145:66"><expr pos:start="145:17" pos:end="145:65"><call pos:start="145:17" pos:end="145:65"><name pos:start="145:17" pos:end="145:33">apic_timer_update</name><argument_list pos:start="145:34" pos:end="145:65">(<argument pos:start="145:35" pos:end="145:35"><expr pos:start="145:35" pos:end="145:35"><name pos:start="145:35" pos:end="145:35">s</name></expr></argument>, <argument pos:start="145:38" pos:end="145:64"><expr pos:start="145:38" pos:end="145:64"><call pos:start="145:38" pos:end="145:64"><name pos:start="145:38" pos:end="145:54">qemu_get_clock_ns</name><argument_list pos:start="145:55" pos:end="145:64">(<argument pos:start="145:56" pos:end="145:63"><expr pos:start="145:56" pos:end="145:63"><name pos:start="145:56" pos:end="145:63">vm_clock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="147:15" pos:end="151:13">else if <condition pos:start="147:23" pos:end="147:64">(<expr pos:start="147:24" pos:end="147:63"><name pos:start="147:24" pos:end="147:24">n</name> <operator pos:start="147:26" pos:end="147:27">==</operator> <name pos:start="147:29" pos:end="147:42">APIC_LVT_LINT0</name> <operator pos:start="147:44" pos:end="147:45">&amp;&amp;</operator> <call pos:start="147:47" pos:end="147:63"><name pos:start="147:47" pos:end="147:60">apic_check_pic</name><argument_list pos:start="147:61" pos:end="147:63">(<argument pos:start="147:62" pos:end="147:62"><expr pos:start="147:62" pos:end="147:62"><name pos:start="147:62" pos:end="147:62">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="147:66" pos:end="151:13">{<block_content pos:start="149:17" pos:end="149:35">

                <expr_stmt pos:start="149:17" pos:end="149:35"><expr pos:start="149:17" pos:end="149:34"><call pos:start="149:17" pos:end="149:34"><name pos:start="149:17" pos:end="149:31">apic_update_irq</name><argument_list pos:start="149:32" pos:end="149:34">(<argument pos:start="149:33" pos:end="149:33"><expr pos:start="149:33" pos:end="149:33"><name pos:start="149:33" pos:end="149:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="155:9" pos:end="155:14">break;</break>

    <case pos:start="157:5" pos:end="157:14">case <expr pos:start="157:10" pos:end="157:13"><literal type="number" pos:start="157:10" pos:end="157:13">0x38</literal></expr>:</case>

        <expr_stmt pos:start="159:9" pos:end="159:31"><expr pos:start="159:9" pos:end="159:30"><name pos:start="159:9" pos:end="159:24"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:24">initial_count</name></name> <operator pos:start="159:26" pos:end="159:26">=</operator> <name pos:start="159:28" pos:end="159:30">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:65"><expr pos:start="161:9" pos:end="161:64"><name pos:start="161:9" pos:end="161:34"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:34">initial_count_load_time</name></name> <operator pos:start="161:36" pos:end="161:36">=</operator> <call pos:start="161:38" pos:end="161:64"><name pos:start="161:38" pos:end="161:54">qemu_get_clock_ns</name><argument_list pos:start="161:55" pos:end="161:64">(<argument pos:start="161:56" pos:end="161:63"><expr pos:start="161:56" pos:end="161:63"><name pos:start="161:56" pos:end="161:63">vm_clock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:57"><expr pos:start="163:9" pos:end="163:56"><call pos:start="163:9" pos:end="163:56"><name pos:start="163:9" pos:end="163:25">apic_timer_update</name><argument_list pos:start="163:26" pos:end="163:56">(<argument pos:start="163:27" pos:end="163:27"><expr pos:start="163:27" pos:end="163:27"><name pos:start="163:27" pos:end="163:27">s</name></expr></argument>, <argument pos:start="163:30" pos:end="163:55"><expr pos:start="163:30" pos:end="163:55"><name pos:start="163:30" pos:end="163:55"><name pos:start="163:30" pos:end="163:30">s</name><operator pos:start="163:31" pos:end="163:32">-&gt;</operator><name pos:start="163:33" pos:end="163:55">initial_count_load_time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="165:9" pos:end="165:14">break;</break>

    <case pos:start="167:5" pos:end="167:14">case <expr pos:start="167:10" pos:end="167:13"><literal type="number" pos:start="167:10" pos:end="167:13">0x39</literal></expr>:</case>

        <break pos:start="169:9" pos:end="169:14">break;</break>

    <case pos:start="171:5" pos:end="171:14">case <expr pos:start="171:10" pos:end="171:13"><literal type="number" pos:start="171:10" pos:end="171:13">0x3e</literal></expr>:</case>

        <block pos:start="173:9" pos:end="183:9">{<block_content pos:start="175:13" pos:end="181:41">

            <decl_stmt pos:start="175:13" pos:end="175:18"><decl pos:start="175:13" pos:end="175:17"><type pos:start="175:13" pos:end="175:15"><name pos:start="175:13" pos:end="175:15">int</name></type> <name pos:start="175:17" pos:end="175:17">v</name></decl>;</decl_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:39"><expr pos:start="177:13" pos:end="177:38"><name pos:start="177:13" pos:end="177:26"><name pos:start="177:13" pos:end="177:13">s</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:26">divide_conf</name></name> <operator pos:start="177:28" pos:end="177:28">=</operator> <name pos:start="177:30" pos:end="177:32">val</name> <operator pos:start="177:34" pos:end="177:34">&amp;</operator> <literal type="number" pos:start="177:36" pos:end="177:38">0xb</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:67"><expr pos:start="179:13" pos:end="179:66"><name pos:start="179:13" pos:end="179:13">v</name> <operator pos:start="179:15" pos:end="179:15">=</operator> <operator pos:start="179:17" pos:end="179:17">(</operator><name pos:start="179:18" pos:end="179:31"><name pos:start="179:18" pos:end="179:18">s</name><operator pos:start="179:19" pos:end="179:20">-&gt;</operator><name pos:start="179:21" pos:end="179:31">divide_conf</name></name> <operator pos:start="179:33" pos:end="179:33">&amp;</operator> <literal type="number" pos:start="179:35" pos:end="179:35">3</literal><operator pos:start="179:36" pos:end="179:36">)</operator> <operator pos:start="179:38" pos:end="179:38">|</operator> <operator pos:start="179:40" pos:end="179:40">(</operator><operator pos:start="179:41" pos:end="179:41">(</operator><name pos:start="179:42" pos:end="179:55"><name pos:start="179:42" pos:end="179:42">s</name><operator pos:start="179:43" pos:end="179:44">-&gt;</operator><name pos:start="179:45" pos:end="179:55">divide_conf</name></name> <operator pos:start="179:57" pos:end="179:58">&gt;&gt;</operator> <literal type="number" pos:start="179:60" pos:end="179:60">1</literal><operator pos:start="179:61" pos:end="179:61">)</operator> <operator pos:start="179:63" pos:end="179:63">&amp;</operator> <literal type="number" pos:start="179:65" pos:end="179:65">4</literal><operator pos:start="179:66" pos:end="179:66">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:41"><expr pos:start="181:13" pos:end="181:40"><name pos:start="181:13" pos:end="181:26"><name pos:start="181:13" pos:end="181:13">s</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:26">count_shift</name></name> <operator pos:start="181:28" pos:end="181:28">=</operator> <operator pos:start="181:30" pos:end="181:30">(</operator><name pos:start="181:31" pos:end="181:31">v</name> <operator pos:start="181:33" pos:end="181:33">+</operator> <literal type="number" pos:start="181:35" pos:end="181:35">1</literal><operator pos:start="181:36" pos:end="181:36">)</operator> <operator pos:start="181:38" pos:end="181:38">&amp;</operator> <literal type="number" pos:start="181:40" pos:end="181:40">7</literal></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="185:9" pos:end="185:14">break;</break>

    <default pos:start="187:5" pos:end="187:12">default:</default>

        <expr_stmt pos:start="189:9" pos:end="189:38"><expr pos:start="189:9" pos:end="189:37"><name pos:start="189:9" pos:end="189:14"><name pos:start="189:9" pos:end="189:9">s</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:14">esr</name></name> <operator pos:start="189:16" pos:end="189:17">|=</operator> <name pos:start="189:19" pos:end="189:37">ESR_ILLEGAL_ADDRESS</name></expr>;</expr_stmt>

        <break pos:start="191:9" pos:end="191:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
