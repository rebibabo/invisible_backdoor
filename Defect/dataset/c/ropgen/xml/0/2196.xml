<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2196.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">vfio_unmap_bar</name><parameter_list pos:start="1:27" pos:end="1:55">(<parameter pos:start="1:28" pos:end="1:46"><decl pos:start="1:28" pos:end="1:46"><type pos:start="1:28" pos:end="1:46"><name pos:start="1:28" pos:end="1:40">VFIOPCIDevice</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">vdev</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:54"><decl pos:start="1:49" pos:end="1:54"><type pos:start="1:49" pos:end="1:54"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:54">nr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:5">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">VFIOBAR</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">bar</name> <init pos:start="5:18" pos:end="5:34">= <expr pos:start="5:20" pos:end="5:34"><operator pos:start="5:20" pos:end="5:20">&amp;</operator><name pos:start="5:21" pos:end="5:34"><name pos:start="5:21" pos:end="5:24">vdev</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:30">bars</name><index pos:start="5:31" pos:end="5:34">[<expr pos:start="5:32" pos:end="5:33"><name pos:start="5:32" pos:end="5:33">nr</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:26">(<expr pos:start="9:9" pos:end="9:25"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:25"><name pos:start="9:10" pos:end="9:12">bar</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:20">region</name><operator pos:start="9:21" pos:end="9:21">.</operator><name pos:start="9:22" pos:end="9:25">size</name></name></expr>)</condition> <block pos:start="9:28" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:15">

        <return pos:start="11:9" pos:end="11:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><call pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:27">vfio_bar_quirk_teardown</name><argument_list pos:start="17:28" pos:end="17:37">(<argument pos:start="17:29" pos:end="17:32"><expr pos:start="17:29" pos:end="17:32"><name pos:start="17:29" pos:end="17:32">vdev</name></expr></argument>, <argument pos:start="17:35" pos:end="17:36"><expr pos:start="17:35" pos:end="17:36"><name pos:start="17:35" pos:end="17:36">nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:73"><expr pos:start="21:5" pos:end="21:72"><call pos:start="21:5" pos:end="21:72"><name pos:start="21:5" pos:end="21:31">memory_region_del_subregion</name><argument_list pos:start="21:32" pos:end="21:72">(<argument pos:start="21:33" pos:end="21:48"><expr pos:start="21:33" pos:end="21:48"><operator pos:start="21:33" pos:end="21:33">&amp;</operator><name pos:start="21:34" pos:end="21:48"><name pos:start="21:34" pos:end="21:36">bar</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:44">region</name><operator pos:start="21:45" pos:end="21:45">.</operator><name pos:start="21:46" pos:end="21:48">mem</name></name></expr></argument>, <argument pos:start="21:51" pos:end="21:71"><expr pos:start="21:51" pos:end="21:71"><operator pos:start="21:51" pos:end="21:51">&amp;</operator><name pos:start="21:52" pos:end="21:71"><name pos:start="21:52" pos:end="21:54">bar</name><operator pos:start="21:55" pos:end="21:56">-&gt;</operator><name pos:start="21:57" pos:end="21:62">region</name><operator pos:start="21:63" pos:end="21:63">.</operator><name pos:start="21:64" pos:end="21:71">mmap_mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:72"><expr pos:start="23:5" pos:end="23:71"><call pos:start="23:5" pos:end="23:71"><name pos:start="23:5" pos:end="23:10">munmap</name><argument_list pos:start="23:11" pos:end="23:71">(<argument pos:start="23:12" pos:end="23:27"><expr pos:start="23:12" pos:end="23:27"><name pos:start="23:12" pos:end="23:27"><name pos:start="23:12" pos:end="23:14">bar</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:22">region</name><operator pos:start="23:23" pos:end="23:23">.</operator><name pos:start="23:24" pos:end="23:27">mmap</name></name></expr></argument>, <argument pos:start="23:30" pos:end="23:70"><expr pos:start="23:30" pos:end="23:70"><call pos:start="23:30" pos:end="23:70"><name pos:start="23:30" pos:end="23:47">memory_region_size</name><argument_list pos:start="23:48" pos:end="23:70">(<argument pos:start="23:49" pos:end="23:69"><expr pos:start="23:49" pos:end="23:69"><operator pos:start="23:49" pos:end="23:49">&amp;</operator><name pos:start="23:50" pos:end="23:69"><name pos:start="23:50" pos:end="23:52">bar</name><operator pos:start="23:53" pos:end="23:54">-&gt;</operator><name pos:start="23:55" pos:end="23:60">region</name><operator pos:start="23:61" pos:end="23:61">.</operator><name pos:start="23:62" pos:end="23:69">mmap_mem</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:50">(<expr pos:start="27:9" pos:end="27:49"><name pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:12">vdev</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:18">msix</name></name> <operator pos:start="27:20" pos:end="27:21">&amp;&amp;</operator> <name pos:start="27:23" pos:end="27:43"><name pos:start="27:23" pos:end="27:26">vdev</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:32">msix</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:43">table_bar</name></name> <operator pos:start="27:45" pos:end="27:46">==</operator> <name pos:start="27:48" pos:end="27:49">nr</name></expr>)</condition> <block pos:start="27:52" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:76">

        <expr_stmt pos:start="29:9" pos:end="29:77"><expr pos:start="29:9" pos:end="29:76"><call pos:start="29:9" pos:end="29:76"><name pos:start="29:9" pos:end="29:35">memory_region_del_subregion</name><argument_list pos:start="29:36" pos:end="29:76">(<argument pos:start="29:37" pos:end="29:52"><expr pos:start="29:37" pos:end="29:52"><operator pos:start="29:37" pos:end="29:37">&amp;</operator><name pos:start="29:38" pos:end="29:52"><name pos:start="29:38" pos:end="29:40">bar</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:48">region</name><operator pos:start="29:49" pos:end="29:49">.</operator><name pos:start="29:50" pos:end="29:52">mem</name></name></expr></argument>, <argument pos:start="29:55" pos:end="29:75"><expr pos:start="29:55" pos:end="29:75"><operator pos:start="29:55" pos:end="29:55">&amp;</operator><name pos:start="29:56" pos:end="29:75"><name pos:start="29:56" pos:end="29:59">vdev</name><operator pos:start="29:60" pos:end="29:61">-&gt;</operator><name pos:start="29:62" pos:end="29:65">msix</name><operator pos:start="29:66" pos:end="29:67">-&gt;</operator><name pos:start="29:68" pos:end="29:75">mmap_mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:76"><expr pos:start="31:9" pos:end="31:75"><call pos:start="31:9" pos:end="31:75"><name pos:start="31:9" pos:end="31:14">munmap</name><argument_list pos:start="31:15" pos:end="31:75">(<argument pos:start="31:16" pos:end="31:31"><expr pos:start="31:16" pos:end="31:31"><name pos:start="31:16" pos:end="31:31"><name pos:start="31:16" pos:end="31:19">vdev</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:25">msix</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:31">mmap</name></name></expr></argument>, <argument pos:start="31:34" pos:end="31:74"><expr pos:start="31:34" pos:end="31:74"><call pos:start="31:34" pos:end="31:74"><name pos:start="31:34" pos:end="31:51">memory_region_size</name><argument_list pos:start="31:52" pos:end="31:74">(<argument pos:start="31:53" pos:end="31:73"><expr pos:start="31:53" pos:end="31:73"><operator pos:start="31:53" pos:end="31:53">&amp;</operator><name pos:start="31:54" pos:end="31:73"><name pos:start="31:54" pos:end="31:57">vdev</name><operator pos:start="31:58" pos:end="31:59">-&gt;</operator><name pos:start="31:60" pos:end="31:63">msix</name><operator pos:start="31:64" pos:end="31:65">-&gt;</operator><name pos:start="31:66" pos:end="31:73">mmap_mem</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
