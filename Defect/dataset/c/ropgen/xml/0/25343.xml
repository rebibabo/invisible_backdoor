<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25343.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">filter_mb_mbaff_edgecv</name><parameter_list pos:start="1:35" pos:end="1:104">( <parameter pos:start="1:37" pos:end="1:50"><decl pos:start="1:37" pos:end="1:50"><type pos:start="1:37" pos:end="1:50"><name pos:start="1:37" pos:end="1:47">H264Context</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">h</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:59">uint8_t</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">pix</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:76"><decl pos:start="1:67" pos:end="1:76"><type pos:start="1:67" pos:end="1:76"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:76">stride</name></decl></parameter>, <parameter pos:start="1:79" pos:end="1:91"><decl pos:start="1:79" pos:end="1:91"><type pos:start="1:79" pos:end="1:88"><name pos:start="1:79" pos:end="1:85">int16_t</name></type> <name pos:start="1:87" pos:end="1:91"><name pos:start="1:87" pos:end="1:88">bS</name><index pos:start="1:89" pos:end="1:91">[<expr pos:start="1:90" pos:end="1:90"><literal type="number" pos:start="1:90" pos:end="1:90">8</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:94" pos:end="1:102"><decl pos:start="1:94" pos:end="1:102"><type pos:start="1:94" pos:end="1:99"><name pos:start="1:94" pos:end="1:96">int</name></type> <name pos:start="1:98" pos:end="1:102"><name pos:start="1:98" pos:end="1:99">qp</name><index pos:start="1:100" pos:end="1:102">[<expr pos:start="1:101" pos:end="1:101"><literal type="number" pos:start="1:101" pos:end="1:101">2</literal></expr>]</index></name></decl></parameter> )</parameter_list> <block pos:start="1:106" pos:end="103:1">{<block_content pos:start="3:5" pos:end="101:5">

    <decl_stmt pos:start="3:5" pos:end="3:10"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>;</decl_stmt>

    <for pos:start="5:5" pos:end="101:5">for<control pos:start="5:8" pos:end="5:42">( <init pos:start="5:10" pos:end="5:15"><expr pos:start="5:10" pos:end="5:14"><name pos:start="5:10" pos:end="5:10">i</name> <operator pos:start="5:12" pos:end="5:12">=</operator> <literal type="number" pos:start="5:14" pos:end="5:14">0</literal></expr>;</init> <condition pos:start="5:17" pos:end="5:22"><expr pos:start="5:17" pos:end="5:21"><name pos:start="5:17" pos:end="5:17">i</name> <operator pos:start="5:19" pos:end="5:19">&lt;</operator> <literal type="number" pos:start="5:21" pos:end="5:21">8</literal></expr>;</condition> <incr pos:start="5:24" pos:end="5:41"><expr pos:start="5:24" pos:end="5:26"><name pos:start="5:24" pos:end="5:24">i</name><operator pos:start="5:25" pos:end="5:26">++</operator></expr><operator pos:start="5:27" pos:end="5:27">,</operator> <expr pos:start="5:29" pos:end="5:41"><name pos:start="5:29" pos:end="5:31">pix</name> <operator pos:start="5:33" pos:end="5:34">+=</operator> <name pos:start="5:36" pos:end="5:41">stride</name></expr></incr>)</control> <block pos:start="5:44" pos:end="101:5">{<block_content pos:start="7:9" pos:end="99:9">

        <decl_stmt pos:start="7:9" pos:end="7:20"><decl pos:start="7:9" pos:end="7:19"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:19">index_a</name></decl>;</decl_stmt>

        <decl_stmt pos:start="9:9" pos:end="9:18"><decl pos:start="9:9" pos:end="9:17"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:17">alpha</name></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:17"><decl pos:start="11:9" pos:end="11:16"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:16">beta</name></decl>;</decl_stmt>



        <decl_stmt pos:start="15:9" pos:end="15:21"><decl pos:start="15:9" pos:end="15:20"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:20">qp_index</name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:25"><decl pos:start="17:9" pos:end="17:24"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:20">bS_index</name> <init pos:start="17:22" pos:end="17:24">= <expr pos:start="17:24" pos:end="17:24"><name pos:start="17:24" pos:end="17:24">i</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if<condition pos:start="21:11" pos:end="21:31">( <expr pos:start="21:13" pos:end="21:29"><name pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:14">bS</name><index pos:start="21:15" pos:end="21:24">[<expr pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:23">bS_index</name></expr>]</index></name> <operator pos:start="21:26" pos:end="21:27">==</operator> <literal type="number" pos:start="21:29" pos:end="21:29">0</literal></expr> )</condition> <block pos:start="21:33" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:21">

            <continue pos:start="23:13" pos:end="23:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:49"><expr pos:start="29:9" pos:end="29:48"><name pos:start="29:9" pos:end="29:16">qp_index</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <ternary pos:start="29:20" pos:end="29:48"><condition pos:start="29:20" pos:end="29:29"><expr pos:start="29:20" pos:end="29:27"><name pos:start="29:20" pos:end="29:27">MB_FIELD</name></expr> ?</condition><then pos:start="29:31" pos:end="29:38"> <expr pos:start="29:31" pos:end="29:38"><operator pos:start="29:31" pos:end="29:31">(</operator><name pos:start="29:32" pos:end="29:32">i</name> <operator pos:start="29:34" pos:end="29:35">&gt;&gt;</operator> <literal type="number" pos:start="29:37" pos:end="29:37">2</literal><operator pos:start="29:38" pos:end="29:38">)</operator></expr> </then><else pos:start="29:40" pos:end="29:48">: <expr pos:start="29:42" pos:end="29:48"><operator pos:start="29:42" pos:end="29:42">(</operator><name pos:start="29:43" pos:end="29:43">i</name> <operator pos:start="29:45" pos:end="29:45">&amp;</operator> <literal type="number" pos:start="29:47" pos:end="29:47">1</literal><operator pos:start="29:48" pos:end="29:48">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:58"><expr pos:start="31:9" pos:end="31:57"><name pos:start="31:9" pos:end="31:15">index_a</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:30"><name pos:start="31:19" pos:end="31:20">qp</name><index pos:start="31:21" pos:end="31:30">[<expr pos:start="31:22" pos:end="31:29"><name pos:start="31:22" pos:end="31:29">qp_index</name></expr>]</index></name> <operator pos:start="31:32" pos:end="31:32">+</operator> <name pos:start="31:34" pos:end="31:57"><name pos:start="31:34" pos:end="31:34">h</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:57">slice_alpha_c0_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:42"><expr pos:start="33:9" pos:end="33:41"><name pos:start="33:9" pos:end="33:13">alpha</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:28">alpha_table</name><operator pos:start="33:29" pos:end="33:29">+</operator><literal type="number" pos:start="33:30" pos:end="33:31">52</literal><operator pos:start="33:32" pos:end="33:32">)</operator><index pos:start="33:33" pos:end="33:41">[<expr pos:start="33:34" pos:end="33:40"><name pos:start="33:34" pos:end="33:40">index_a</name></expr>]</index></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:69"><expr pos:start="35:9" pos:end="35:68"><name pos:start="35:9" pos:end="35:12">beta</name>  <operator pos:start="35:15" pos:end="35:15">=</operator> <operator pos:start="35:17" pos:end="35:17">(</operator><name pos:start="35:18" pos:end="35:27">beta_table</name><operator pos:start="35:28" pos:end="35:28">+</operator><literal type="number" pos:start="35:29" pos:end="35:30">52</literal><operator pos:start="35:31" pos:end="35:31">)</operator><index pos:start="35:32" pos:end="35:68">[<expr pos:start="35:33" pos:end="35:67"><name pos:start="35:33" pos:end="35:44"><name pos:start="35:33" pos:end="35:34">qp</name><index pos:start="35:35" pos:end="35:44">[<expr pos:start="35:36" pos:end="35:43"><name pos:start="35:36" pos:end="35:43">qp_index</name></expr>]</index></name> <operator pos:start="35:46" pos:end="35:46">+</operator> <name pos:start="35:48" pos:end="35:67"><name pos:start="35:48" pos:end="35:48">h</name><operator pos:start="35:49" pos:end="35:50">-&gt;</operator><name pos:start="35:51" pos:end="35:67">slice_beta_offset</name></name></expr>]</index></expr>;</expr_stmt>



        <if_stmt pos:start="39:9" pos:end="99:9"><if pos:start="39:9" pos:end="71:9">if<condition pos:start="39:11" pos:end="39:30">( <expr pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:14">bS</name><index pos:start="39:15" pos:end="39:24">[<expr pos:start="39:16" pos:end="39:23"><name pos:start="39:16" pos:end="39:23">bS_index</name></expr>]</index></name> <operator pos:start="39:26" pos:end="39:26">&lt;</operator> <literal type="number" pos:start="39:28" pos:end="39:28">4</literal></expr> )</condition> <block pos:start="39:32" pos:end="71:9">{<block_content pos:start="41:13" pos:end="69:13">

            <decl_stmt pos:start="41:13" pos:end="41:69"><decl pos:start="41:13" pos:end="41:68"><type pos:start="41:13" pos:end="41:21"><specifier pos:start="41:13" pos:end="41:17">const</specifier> <name pos:start="41:19" pos:end="41:21">int</name></type> <name pos:start="41:23" pos:end="41:24">tc</name> <init pos:start="41:26" pos:end="41:68">= <expr pos:start="41:28" pos:end="41:68"><operator pos:start="41:28" pos:end="41:28">(</operator><name pos:start="41:29" pos:end="41:37">tc0_table</name><operator pos:start="41:38" pos:end="41:38">+</operator><literal type="number" pos:start="41:39" pos:end="41:40">52</literal><operator pos:start="41:41" pos:end="41:41">)</operator><index pos:start="41:42" pos:end="41:50">[<expr pos:start="41:43" pos:end="41:49"><name pos:start="41:43" pos:end="41:49">index_a</name></expr>]</index><index pos:start="41:51" pos:end="41:64">[<expr pos:start="41:52" pos:end="41:63"><name pos:start="41:52" pos:end="41:63"><name pos:start="41:52" pos:end="41:53">bS</name><index pos:start="41:54" pos:end="41:63">[<expr pos:start="41:55" pos:end="41:62"><name pos:start="41:55" pos:end="41:62">bS_index</name></expr>]</index></name></expr>]</index> <operator pos:start="41:66" pos:end="41:66">+</operator> <literal type="number" pos:start="41:68" pos:end="41:68">1</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="43:13" pos:end="43:35"><decl pos:start="43:13" pos:end="43:34"><type pos:start="43:13" pos:end="43:21"><specifier pos:start="43:13" pos:end="43:17">const</specifier> <name pos:start="43:19" pos:end="43:21">int</name></type> <name pos:start="43:23" pos:end="43:24">p0</name> <init pos:start="43:26" pos:end="43:34">= <expr pos:start="43:28" pos:end="43:34"><name pos:start="43:28" pos:end="43:34"><name pos:start="43:28" pos:end="43:30">pix</name><index pos:start="43:31" pos:end="43:34">[<expr pos:start="43:32" pos:end="43:33"><operator pos:start="43:32" pos:end="43:32">-</operator><literal type="number" pos:start="43:33" pos:end="43:33">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="45:13" pos:end="45:35"><decl pos:start="45:13" pos:end="45:34"><type pos:start="45:13" pos:end="45:21"><specifier pos:start="45:13" pos:end="45:17">const</specifier> <name pos:start="45:19" pos:end="45:21">int</name></type> <name pos:start="45:23" pos:end="45:24">p1</name> <init pos:start="45:26" pos:end="45:34">= <expr pos:start="45:28" pos:end="45:34"><name pos:start="45:28" pos:end="45:34"><name pos:start="45:28" pos:end="45:30">pix</name><index pos:start="45:31" pos:end="45:34">[<expr pos:start="45:32" pos:end="45:33"><operator pos:start="45:32" pos:end="45:32">-</operator><literal type="number" pos:start="45:33" pos:end="45:33">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="47:13" pos:end="47:34"><decl pos:start="47:13" pos:end="47:33"><type pos:start="47:13" pos:end="47:21"><specifier pos:start="47:13" pos:end="47:17">const</specifier> <name pos:start="47:19" pos:end="47:21">int</name></type> <name pos:start="47:23" pos:end="47:24">q0</name> <init pos:start="47:26" pos:end="47:33">= <expr pos:start="47:28" pos:end="47:33"><name pos:start="47:28" pos:end="47:33"><name pos:start="47:28" pos:end="47:30">pix</name><index pos:start="47:31" pos:end="47:33">[<expr pos:start="47:32" pos:end="47:32"><literal type="number" pos:start="47:32" pos:end="47:32">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="49:13" pos:end="49:34"><decl pos:start="49:13" pos:end="49:33"><type pos:start="49:13" pos:end="49:21"><specifier pos:start="49:13" pos:end="49:17">const</specifier> <name pos:start="49:19" pos:end="49:21">int</name></type> <name pos:start="49:23" pos:end="49:24">q1</name> <init pos:start="49:26" pos:end="49:33">= <expr pos:start="49:28" pos:end="49:33"><name pos:start="49:28" pos:end="49:33"><name pos:start="49:28" pos:end="49:30">pix</name><index pos:start="49:31" pos:end="49:33">[<expr pos:start="49:32" pos:end="49:32"><literal type="number" pos:start="49:32" pos:end="49:32">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="53:13" pos:end="69:13"><if pos:start="53:13" pos:end="69:13">if<condition pos:start="53:15" pos:end="57:41">( <expr pos:start="53:17" pos:end="57:39"><call pos:start="53:17" pos:end="53:32"><name pos:start="53:17" pos:end="53:21">FFABS</name><argument_list pos:start="53:22" pos:end="53:32">( <argument pos:start="53:24" pos:end="53:30"><expr pos:start="53:24" pos:end="53:30"><name pos:start="53:24" pos:end="53:25">p0</name> <operator pos:start="53:27" pos:end="53:27">-</operator> <name pos:start="53:29" pos:end="53:30">q0</name></expr></argument> )</argument_list></call> <operator pos:start="53:34" pos:end="53:34">&lt;</operator> <name pos:start="53:36" pos:end="53:40">alpha</name> <operator pos:start="53:42" pos:end="53:43">&amp;&amp;</operator>

                <call pos:start="55:17" pos:end="55:32"><name pos:start="55:17" pos:end="55:21">FFABS</name><argument_list pos:start="55:22" pos:end="55:32">( <argument pos:start="55:24" pos:end="55:30"><expr pos:start="55:24" pos:end="55:30"><name pos:start="55:24" pos:end="55:25">p1</name> <operator pos:start="55:27" pos:end="55:27">-</operator> <name pos:start="55:29" pos:end="55:30">p0</name></expr></argument> )</argument_list></call> <operator pos:start="55:34" pos:end="55:34">&lt;</operator> <name pos:start="55:36" pos:end="55:39">beta</name> <operator pos:start="55:41" pos:end="55:42">&amp;&amp;</operator>

                <call pos:start="57:17" pos:end="57:32"><name pos:start="57:17" pos:end="57:21">FFABS</name><argument_list pos:start="57:22" pos:end="57:32">( <argument pos:start="57:24" pos:end="57:30"><expr pos:start="57:24" pos:end="57:30"><name pos:start="57:24" pos:end="57:25">q1</name> <operator pos:start="57:27" pos:end="57:27">-</operator> <name pos:start="57:29" pos:end="57:30">q0</name></expr></argument> )</argument_list></call> <operator pos:start="57:34" pos:end="57:34">&lt;</operator> <name pos:start="57:36" pos:end="57:39">beta</name></expr> )</condition> <block pos:start="57:43" pos:end="69:13">{<block_content pos:start="59:17" pos:end="67:304">

                <decl_stmt pos:start="59:17" pos:end="59:97"><decl pos:start="59:17" pos:end="59:96"><type pos:start="59:17" pos:end="59:25"><specifier pos:start="59:17" pos:end="59:21">const</specifier> <name pos:start="59:23" pos:end="59:25">int</name></type> <name pos:start="59:27" pos:end="59:33">i_delta</name> <init pos:start="59:35" pos:end="59:96">= <expr pos:start="59:37" pos:end="59:96"><call pos:start="59:37" pos:end="59:96"><name pos:start="59:37" pos:end="59:43">av_clip</name><argument_list pos:start="59:44" pos:end="59:96">( <argument pos:start="59:46" pos:end="59:85"><expr pos:start="59:46" pos:end="59:85"><operator pos:start="59:46" pos:end="59:46">(</operator><operator pos:start="59:47" pos:end="59:47">(</operator><operator pos:start="59:48" pos:end="59:48">(</operator><name pos:start="59:49" pos:end="59:50">q0</name> <operator pos:start="59:52" pos:end="59:52">-</operator> <name pos:start="59:54" pos:end="59:55">p0</name> <operator pos:start="59:57" pos:end="59:57">)</operator> <operator pos:start="59:59" pos:end="59:60">&lt;&lt;</operator> <literal type="number" pos:start="59:62" pos:end="59:62">2</literal><operator pos:start="59:63" pos:end="59:63">)</operator> <operator pos:start="59:65" pos:end="59:65">+</operator> <operator pos:start="59:67" pos:end="59:67">(</operator><name pos:start="59:68" pos:end="59:69">p1</name> <operator pos:start="59:71" pos:end="59:71">-</operator> <name pos:start="59:73" pos:end="59:74">q1</name><operator pos:start="59:75" pos:end="59:75">)</operator> <operator pos:start="59:77" pos:end="59:77">+</operator> <literal type="number" pos:start="59:79" pos:end="59:79">4</literal><operator pos:start="59:80" pos:end="59:80">)</operator> <operator pos:start="59:82" pos:end="59:83">&gt;&gt;</operator> <literal type="number" pos:start="59:85" pos:end="59:85">3</literal></expr></argument>, <argument pos:start="59:88" pos:end="59:90"><expr pos:start="59:88" pos:end="59:90"><operator pos:start="59:88" pos:end="59:88">-</operator><name pos:start="59:89" pos:end="59:90">tc</name></expr></argument>, <argument pos:start="59:93" pos:end="59:94"><expr pos:start="59:93" pos:end="59:94"><name pos:start="59:93" pos:end="59:94">tc</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="63:17" pos:end="63:56"><expr pos:start="63:17" pos:end="63:55"><name pos:start="63:17" pos:end="63:23"><name pos:start="63:17" pos:end="63:19">pix</name><index pos:start="63:20" pos:end="63:23">[<expr pos:start="63:21" pos:end="63:22"><operator pos:start="63:21" pos:end="63:21">-</operator><literal type="number" pos:start="63:22" pos:end="63:22">1</literal></expr>]</index></name> <operator pos:start="63:25" pos:end="63:25">=</operator> <call pos:start="63:27" pos:end="63:55"><name pos:start="63:27" pos:end="63:39">av_clip_uint8</name><argument_list pos:start="63:40" pos:end="63:55">( <argument pos:start="63:42" pos:end="63:53"><expr pos:start="63:42" pos:end="63:53"><name pos:start="63:42" pos:end="63:43">p0</name> <operator pos:start="63:45" pos:end="63:45">+</operator> <name pos:start="63:47" pos:end="63:53">i_delta</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="63:61" pos:end="63:69">/* p0' */</comment>

                <expr_stmt pos:start="65:17" pos:end="65:56"><expr pos:start="65:17" pos:end="65:55"><name pos:start="65:17" pos:end="65:22"><name pos:start="65:17" pos:end="65:19">pix</name><index pos:start="65:20" pos:end="65:22">[<expr pos:start="65:21" pos:end="65:21"><literal type="number" pos:start="65:21" pos:end="65:21">0</literal></expr>]</index></name>  <operator pos:start="65:25" pos:end="65:25">=</operator> <call pos:start="65:27" pos:end="65:55"><name pos:start="65:27" pos:end="65:39">av_clip_uint8</name><argument_list pos:start="65:40" pos:end="65:55">( <argument pos:start="65:42" pos:end="65:53"><expr pos:start="65:42" pos:end="65:53"><name pos:start="65:42" pos:end="65:43">q0</name> <operator pos:start="65:45" pos:end="65:45">-</operator> <name pos:start="65:47" pos:end="65:53">i_delta</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="65:61" pos:end="65:69">/* q0' */</comment>

                <expr_stmt pos:start="67:17" pos:end="67:304"><expr pos:start="67:17" pos:end="67:303"><call pos:start="67:17" pos:end="67:303"><name pos:start="67:17" pos:end="67:23">tprintf</name><argument_list pos:start="67:24" pos:end="67:303">(<argument pos:start="67:25" pos:end="67:34"><expr pos:start="67:25" pos:end="67:34"><name pos:start="67:25" pos:end="67:34"><name pos:start="67:25" pos:end="67:25">h</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:28">s</name><operator pos:start="67:29" pos:end="67:29">.</operator><name pos:start="67:30" pos:end="67:34">avctx</name></name></expr></argument>, <argument pos:start="67:37" pos:end="67:187"><expr pos:start="67:37" pos:end="67:187"><literal type="string" pos:start="67:37" pos:end="67:187">"filter_mb_mbaff_edgecv i:%d, qp:%d, indexA:%d, alpha:%d, beta:%d, tc:%d\n# bS:%d -&gt; [%02x, %02x, %02x, %02x, %02x, %02x] =&gt;[%02x, %02x, %02x, %02x]\n"</literal></expr></argument>, <argument pos:start="67:190" pos:end="67:190"><expr pos:start="67:190" pos:end="67:190"><name pos:start="67:190" pos:end="67:190">i</name></expr></argument>, <argument pos:start="67:193" pos:end="67:204"><expr pos:start="67:193" pos:end="67:204"><name pos:start="67:193" pos:end="67:204"><name pos:start="67:193" pos:end="67:194">qp</name><index pos:start="67:195" pos:end="67:204">[<expr pos:start="67:196" pos:end="67:203"><name pos:start="67:196" pos:end="67:203">qp_index</name></expr>]</index></name></expr></argument>, <argument pos:start="67:207" pos:end="67:213"><expr pos:start="67:207" pos:end="67:213"><name pos:start="67:207" pos:end="67:213">index_a</name></expr></argument>, <argument pos:start="67:216" pos:end="67:220"><expr pos:start="67:216" pos:end="67:220"><name pos:start="67:216" pos:end="67:220">alpha</name></expr></argument>, <argument pos:start="67:223" pos:end="67:226"><expr pos:start="67:223" pos:end="67:226"><name pos:start="67:223" pos:end="67:226">beta</name></expr></argument>, <argument pos:start="67:229" pos:end="67:230"><expr pos:start="67:229" pos:end="67:230"><name pos:start="67:229" pos:end="67:230">tc</name></expr></argument>, <argument pos:start="67:233" pos:end="67:244"><expr pos:start="67:233" pos:end="67:244"><name pos:start="67:233" pos:end="67:244"><name pos:start="67:233" pos:end="67:234">bS</name><index pos:start="67:235" pos:end="67:244">[<expr pos:start="67:236" pos:end="67:243"><name pos:start="67:236" pos:end="67:243">bS_index</name></expr>]</index></name></expr></argument>, <argument pos:start="67:247" pos:end="67:253"><expr pos:start="67:247" pos:end="67:253"><name pos:start="67:247" pos:end="67:253"><name pos:start="67:247" pos:end="67:249">pix</name><index pos:start="67:250" pos:end="67:253">[<expr pos:start="67:251" pos:end="67:252"><operator pos:start="67:251" pos:end="67:251">-</operator><literal type="number" pos:start="67:252" pos:end="67:252">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:256" pos:end="67:257"><expr pos:start="67:256" pos:end="67:257"><name pos:start="67:256" pos:end="67:257">p1</name></expr></argument>, <argument pos:start="67:260" pos:end="67:261"><expr pos:start="67:260" pos:end="67:261"><name pos:start="67:260" pos:end="67:261">p0</name></expr></argument>, <argument pos:start="67:264" pos:end="67:265"><expr pos:start="67:264" pos:end="67:265"><name pos:start="67:264" pos:end="67:265">q0</name></expr></argument>, <argument pos:start="67:268" pos:end="67:269"><expr pos:start="67:268" pos:end="67:269"><name pos:start="67:268" pos:end="67:269">q1</name></expr></argument>, <argument pos:start="67:272" pos:end="67:277"><expr pos:start="67:272" pos:end="67:277"><name pos:start="67:272" pos:end="67:277"><name pos:start="67:272" pos:end="67:274">pix</name><index pos:start="67:275" pos:end="67:277">[<expr pos:start="67:276" pos:end="67:276"><literal type="number" pos:start="67:276" pos:end="67:276">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:280" pos:end="67:281"><expr pos:start="67:280" pos:end="67:281"><name pos:start="67:280" pos:end="67:281">p1</name></expr></argument>, <argument pos:start="67:284" pos:end="67:290"><expr pos:start="67:284" pos:end="67:290"><name pos:start="67:284" pos:end="67:290"><name pos:start="67:284" pos:end="67:286">pix</name><index pos:start="67:287" pos:end="67:290">[<expr pos:start="67:288" pos:end="67:289"><operator pos:start="67:288" pos:end="67:288">-</operator><literal type="number" pos:start="67:289" pos:end="67:289">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:293" pos:end="67:298"><expr pos:start="67:293" pos:end="67:298"><name pos:start="67:293" pos:end="67:298"><name pos:start="67:293" pos:end="67:295">pix</name><index pos:start="67:296" pos:end="67:298">[<expr pos:start="67:297" pos:end="67:297"><literal type="number" pos:start="67:297" pos:end="67:297">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:301" pos:end="67:302"><expr pos:start="67:301" pos:end="67:302"><name pos:start="67:301" pos:end="67:302">q1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if><else pos:start="71:10" pos:end="99:9">else<block pos:start="71:14" pos:end="99:9">{<block_content pos:start="73:13" pos:end="97:13">

            <decl_stmt pos:start="73:13" pos:end="73:35"><decl pos:start="73:13" pos:end="73:34"><type pos:start="73:13" pos:end="73:21"><specifier pos:start="73:13" pos:end="73:17">const</specifier> <name pos:start="73:19" pos:end="73:21">int</name></type> <name pos:start="73:23" pos:end="73:24">p0</name> <init pos:start="73:26" pos:end="73:34">= <expr pos:start="73:28" pos:end="73:34"><name pos:start="73:28" pos:end="73:34"><name pos:start="73:28" pos:end="73:30">pix</name><index pos:start="73:31" pos:end="73:34">[<expr pos:start="73:32" pos:end="73:33"><operator pos:start="73:32" pos:end="73:32">-</operator><literal type="number" pos:start="73:33" pos:end="73:33">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="75:13" pos:end="75:35"><decl pos:start="75:13" pos:end="75:34"><type pos:start="75:13" pos:end="75:21"><specifier pos:start="75:13" pos:end="75:17">const</specifier> <name pos:start="75:19" pos:end="75:21">int</name></type> <name pos:start="75:23" pos:end="75:24">p1</name> <init pos:start="75:26" pos:end="75:34">= <expr pos:start="75:28" pos:end="75:34"><name pos:start="75:28" pos:end="75:34"><name pos:start="75:28" pos:end="75:30">pix</name><index pos:start="75:31" pos:end="75:34">[<expr pos:start="75:32" pos:end="75:33"><operator pos:start="75:32" pos:end="75:32">-</operator><literal type="number" pos:start="75:33" pos:end="75:33">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="77:13" pos:end="77:34"><decl pos:start="77:13" pos:end="77:33"><type pos:start="77:13" pos:end="77:21"><specifier pos:start="77:13" pos:end="77:17">const</specifier> <name pos:start="77:19" pos:end="77:21">int</name></type> <name pos:start="77:23" pos:end="77:24">q0</name> <init pos:start="77:26" pos:end="77:33">= <expr pos:start="77:28" pos:end="77:33"><name pos:start="77:28" pos:end="77:33"><name pos:start="77:28" pos:end="77:30">pix</name><index pos:start="77:31" pos:end="77:33">[<expr pos:start="77:32" pos:end="77:32"><literal type="number" pos:start="77:32" pos:end="77:32">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="79:13" pos:end="79:34"><decl pos:start="79:13" pos:end="79:33"><type pos:start="79:13" pos:end="79:21"><specifier pos:start="79:13" pos:end="79:17">const</specifier> <name pos:start="79:19" pos:end="79:21">int</name></type> <name pos:start="79:23" pos:end="79:24">q1</name> <init pos:start="79:26" pos:end="79:33">= <expr pos:start="79:28" pos:end="79:33"><name pos:start="79:28" pos:end="79:33"><name pos:start="79:28" pos:end="79:30">pix</name><index pos:start="79:31" pos:end="79:33">[<expr pos:start="79:32" pos:end="79:32"><literal type="number" pos:start="79:32" pos:end="79:32">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="83:13" pos:end="97:13"><if pos:start="83:13" pos:end="97:13">if<condition pos:start="83:15" pos:end="87:41">( <expr pos:start="83:17" pos:end="87:39"><call pos:start="83:17" pos:end="83:32"><name pos:start="83:17" pos:end="83:21">FFABS</name><argument_list pos:start="83:22" pos:end="83:32">( <argument pos:start="83:24" pos:end="83:30"><expr pos:start="83:24" pos:end="83:30"><name pos:start="83:24" pos:end="83:25">p0</name> <operator pos:start="83:27" pos:end="83:27">-</operator> <name pos:start="83:29" pos:end="83:30">q0</name></expr></argument> )</argument_list></call> <operator pos:start="83:34" pos:end="83:34">&lt;</operator> <name pos:start="83:36" pos:end="83:40">alpha</name> <operator pos:start="83:42" pos:end="83:43">&amp;&amp;</operator>

                <call pos:start="85:17" pos:end="85:32"><name pos:start="85:17" pos:end="85:21">FFABS</name><argument_list pos:start="85:22" pos:end="85:32">( <argument pos:start="85:24" pos:end="85:30"><expr pos:start="85:24" pos:end="85:30"><name pos:start="85:24" pos:end="85:25">p1</name> <operator pos:start="85:27" pos:end="85:27">-</operator> <name pos:start="85:29" pos:end="85:30">p0</name></expr></argument> )</argument_list></call> <operator pos:start="85:34" pos:end="85:34">&lt;</operator> <name pos:start="85:36" pos:end="85:39">beta</name> <operator pos:start="85:41" pos:end="85:42">&amp;&amp;</operator>

                <call pos:start="87:17" pos:end="87:32"><name pos:start="87:17" pos:end="87:21">FFABS</name><argument_list pos:start="87:22" pos:end="87:32">( <argument pos:start="87:24" pos:end="87:30"><expr pos:start="87:24" pos:end="87:30"><name pos:start="87:24" pos:end="87:25">q1</name> <operator pos:start="87:27" pos:end="87:27">-</operator> <name pos:start="87:29" pos:end="87:30">q0</name></expr></argument> )</argument_list></call> <operator pos:start="87:34" pos:end="87:34">&lt;</operator> <name pos:start="87:36" pos:end="87:39">beta</name></expr> )</condition> <block pos:start="87:43" pos:end="97:13">{<block_content pos:start="91:17" pos:end="95:243">



                <expr_stmt pos:start="91:17" pos:end="91:54"><expr pos:start="91:17" pos:end="91:53"><name pos:start="91:17" pos:end="91:23"><name pos:start="91:17" pos:end="91:19">pix</name><index pos:start="91:20" pos:end="91:23">[<expr pos:start="91:21" pos:end="91:22"><operator pos:start="91:21" pos:end="91:21">-</operator><literal type="number" pos:start="91:22" pos:end="91:22">1</literal></expr>]</index></name> <operator pos:start="91:25" pos:end="91:25">=</operator> <operator pos:start="91:27" pos:end="91:27">(</operator> <literal type="number" pos:start="91:29" pos:end="91:29">2</literal><operator pos:start="91:30" pos:end="91:30">*</operator><name pos:start="91:31" pos:end="91:32">p1</name> <operator pos:start="91:34" pos:end="91:34">+</operator> <name pos:start="91:36" pos:end="91:37">p0</name> <operator pos:start="91:39" pos:end="91:39">+</operator> <name pos:start="91:41" pos:end="91:42">q1</name> <operator pos:start="91:44" pos:end="91:44">+</operator> <literal type="number" pos:start="91:46" pos:end="91:46">2</literal> <operator pos:start="91:48" pos:end="91:48">)</operator> <operator pos:start="91:50" pos:end="91:51">&gt;&gt;</operator> <literal type="number" pos:start="91:53" pos:end="91:53">2</literal></expr>;</expr_stmt>   <comment type="block" pos:start="91:58" pos:end="91:66">/* p0' */</comment>

                <expr_stmt pos:start="93:17" pos:end="93:54"><expr pos:start="93:17" pos:end="93:53"><name pos:start="93:17" pos:end="93:22"><name pos:start="93:17" pos:end="93:19">pix</name><index pos:start="93:20" pos:end="93:22">[<expr pos:start="93:21" pos:end="93:21"><literal type="number" pos:start="93:21" pos:end="93:21">0</literal></expr>]</index></name>  <operator pos:start="93:25" pos:end="93:25">=</operator> <operator pos:start="93:27" pos:end="93:27">(</operator> <literal type="number" pos:start="93:29" pos:end="93:29">2</literal><operator pos:start="93:30" pos:end="93:30">*</operator><name pos:start="93:31" pos:end="93:32">q1</name> <operator pos:start="93:34" pos:end="93:34">+</operator> <name pos:start="93:36" pos:end="93:37">q0</name> <operator pos:start="93:39" pos:end="93:39">+</operator> <name pos:start="93:41" pos:end="93:42">p1</name> <operator pos:start="93:44" pos:end="93:44">+</operator> <literal type="number" pos:start="93:46" pos:end="93:46">2</literal> <operator pos:start="93:48" pos:end="93:48">)</operator> <operator pos:start="93:50" pos:end="93:51">&gt;&gt;</operator> <literal type="number" pos:start="93:53" pos:end="93:53">2</literal></expr>;</expr_stmt>   <comment type="block" pos:start="93:58" pos:end="93:66">/* q0' */</comment>

                <expr_stmt pos:start="95:17" pos:end="95:243"><expr pos:start="95:17" pos:end="95:242"><call pos:start="95:17" pos:end="95:242"><name pos:start="95:17" pos:end="95:23">tprintf</name><argument_list pos:start="95:24" pos:end="95:242">(<argument pos:start="95:25" pos:end="95:34"><expr pos:start="95:25" pos:end="95:34"><name pos:start="95:25" pos:end="95:34"><name pos:start="95:25" pos:end="95:25">h</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:28">s</name><operator pos:start="95:29" pos:end="95:29">.</operator><name pos:start="95:30" pos:end="95:34">avctx</name></name></expr></argument>, <argument pos:start="95:37" pos:end="95:154"><expr pos:start="95:37" pos:end="95:154"><literal type="string" pos:start="95:37" pos:end="95:154">"filter_mb_mbaff_edgecv i:%d\n# bS:4 -&gt; [%02x, %02x, %02x, %02x, %02x, %02x] =&gt;[%02x, %02x, %02x, %02x, %02x, %02x]\n"</literal></expr></argument>, <argument pos:start="95:157" pos:end="95:157"><expr pos:start="95:157" pos:end="95:157"><name pos:start="95:157" pos:end="95:157">i</name></expr></argument>, <argument pos:start="95:160" pos:end="95:166"><expr pos:start="95:160" pos:end="95:166"><name pos:start="95:160" pos:end="95:166"><name pos:start="95:160" pos:end="95:162">pix</name><index pos:start="95:163" pos:end="95:166">[<expr pos:start="95:164" pos:end="95:165"><operator pos:start="95:164" pos:end="95:164">-</operator><literal type="number" pos:start="95:165" pos:end="95:165">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="95:169" pos:end="95:170"><expr pos:start="95:169" pos:end="95:170"><name pos:start="95:169" pos:end="95:170">p1</name></expr></argument>, <argument pos:start="95:173" pos:end="95:174"><expr pos:start="95:173" pos:end="95:174"><name pos:start="95:173" pos:end="95:174">p0</name></expr></argument>, <argument pos:start="95:177" pos:end="95:178"><expr pos:start="95:177" pos:end="95:178"><name pos:start="95:177" pos:end="95:178">q0</name></expr></argument>, <argument pos:start="95:181" pos:end="95:182"><expr pos:start="95:181" pos:end="95:182"><name pos:start="95:181" pos:end="95:182">q1</name></expr></argument>, <argument pos:start="95:185" pos:end="95:190"><expr pos:start="95:185" pos:end="95:190"><name pos:start="95:185" pos:end="95:190"><name pos:start="95:185" pos:end="95:187">pix</name><index pos:start="95:188" pos:end="95:190">[<expr pos:start="95:189" pos:end="95:189"><literal type="number" pos:start="95:189" pos:end="95:189">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="95:193" pos:end="95:199"><expr pos:start="95:193" pos:end="95:199"><name pos:start="95:193" pos:end="95:199"><name pos:start="95:193" pos:end="95:195">pix</name><index pos:start="95:196" pos:end="95:199">[<expr pos:start="95:197" pos:end="95:198"><operator pos:start="95:197" pos:end="95:197">-</operator><literal type="number" pos:start="95:198" pos:end="95:198">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="95:202" pos:end="95:208"><expr pos:start="95:202" pos:end="95:208"><name pos:start="95:202" pos:end="95:208"><name pos:start="95:202" pos:end="95:204">pix</name><index pos:start="95:205" pos:end="95:208">[<expr pos:start="95:206" pos:end="95:207"><operator pos:start="95:206" pos:end="95:206">-</operator><literal type="number" pos:start="95:207" pos:end="95:207">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="95:211" pos:end="95:217"><expr pos:start="95:211" pos:end="95:217"><name pos:start="95:211" pos:end="95:217"><name pos:start="95:211" pos:end="95:213">pix</name><index pos:start="95:214" pos:end="95:217">[<expr pos:start="95:215" pos:end="95:216"><operator pos:start="95:215" pos:end="95:215">-</operator><literal type="number" pos:start="95:216" pos:end="95:216">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="95:220" pos:end="95:225"><expr pos:start="95:220" pos:end="95:225"><name pos:start="95:220" pos:end="95:225"><name pos:start="95:220" pos:end="95:222">pix</name><index pos:start="95:223" pos:end="95:225">[<expr pos:start="95:224" pos:end="95:224"><literal type="number" pos:start="95:224" pos:end="95:224">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="95:228" pos:end="95:233"><expr pos:start="95:228" pos:end="95:233"><name pos:start="95:228" pos:end="95:233"><name pos:start="95:228" pos:end="95:230">pix</name><index pos:start="95:231" pos:end="95:233">[<expr pos:start="95:232" pos:end="95:232"><literal type="number" pos:start="95:232" pos:end="95:232">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="95:236" pos:end="95:241"><expr pos:start="95:236" pos:end="95:241"><name pos:start="95:236" pos:end="95:241"><name pos:start="95:236" pos:end="95:238">pix</name><index pos:start="95:239" pos:end="95:241">[<expr pos:start="95:240" pos:end="95:240"><literal type="number" pos:start="95:240" pos:end="95:240">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
