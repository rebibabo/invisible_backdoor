<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26579.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">thread_execute</name><parameter_list pos:start="1:26" pos:end="1:117">(<parameter pos:start="1:27" pos:end="1:47"><decl pos:start="1:27" pos:end="1:47"><type pos:start="1:27" pos:end="1:47"><name pos:start="1:27" pos:end="1:40">AVCodecContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:47">avctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:66"><decl pos:start="1:50" pos:end="1:66"><type pos:start="1:50" pos:end="1:66"><name pos:start="1:50" pos:end="1:60">action_func</name><modifier pos:start="1:61" pos:end="1:61">*</modifier></type> <name pos:start="1:63" pos:end="1:66">func</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:77"><decl pos:start="1:69" pos:end="1:77"><type pos:start="1:69" pos:end="1:77"><name pos:start="1:69" pos:end="1:72">void</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:77">arg</name></decl></parameter>, <parameter pos:start="1:80" pos:end="1:87"><decl pos:start="1:80" pos:end="1:87"><type pos:start="1:80" pos:end="1:87"><name pos:start="1:80" pos:end="1:82">int</name> <modifier pos:start="1:84" pos:end="1:84">*</modifier></type><name pos:start="1:85" pos:end="1:87">ret</name></decl></parameter>, <parameter pos:start="1:90" pos:end="1:102"><decl pos:start="1:90" pos:end="1:102"><type pos:start="1:90" pos:end="1:102"><name pos:start="1:90" pos:end="1:92">int</name></type> <name pos:start="1:94" pos:end="1:102">job_count</name></decl></parameter>, <parameter pos:start="1:105" pos:end="1:116"><decl pos:start="1:105" pos:end="1:116"><type pos:start="1:105" pos:end="1:116"><name pos:start="1:105" pos:end="1:107">int</name></type> <name pos:start="1:109" pos:end="1:116">job_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:13">

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">SliceThreadContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:25">c</name> <init pos:start="5:27" pos:end="5:55">= <expr pos:start="5:29" pos:end="5:55"><name pos:start="5:29" pos:end="5:55"><name pos:start="5:29" pos:end="5:33">avctx</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:43">internal</name><operator pos:start="5:44" pos:end="5:45">-&gt;</operator><name pos:start="5:46" pos:end="5:55">thread_ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">dummy_ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:83"><if pos:start="11:5" pos:end="13:83">if <condition pos:start="11:8" pos:end="11:81">(<expr pos:start="11:9" pos:end="11:80"><operator pos:start="11:9" pos:end="11:9">!</operator><operator pos:start="11:10" pos:end="11:10">(</operator><name pos:start="11:11" pos:end="11:35"><name pos:start="11:11" pos:end="11:15">avctx</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:35">active_thread_type</name></name><operator pos:start="11:36" pos:end="11:36">&amp;</operator><name pos:start="11:37" pos:end="11:51">FF_THREAD_SLICE</name><operator pos:start="11:52" pos:end="11:52">)</operator> <operator pos:start="11:54" pos:end="11:55">||</operator> <name pos:start="11:57" pos:end="11:75"><name pos:start="11:57" pos:end="11:61">avctx</name><operator pos:start="11:62" pos:end="11:63">-&gt;</operator><name pos:start="11:64" pos:end="11:75">thread_count</name></name> <operator pos:start="11:77" pos:end="11:78">&lt;=</operator> <literal type="number" pos:start="11:80" pos:end="11:80">1</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:83"><block_content pos:start="13:9" pos:end="13:83">

        <return pos:start="13:9" pos:end="13:83">return <expr pos:start="13:16" pos:end="13:82"><call pos:start="13:16" pos:end="13:82"><name pos:start="13:16" pos:end="13:38">avcodec_default_execute</name><argument_list pos:start="13:39" pos:end="13:82">(<argument pos:start="13:40" pos:end="13:44"><expr pos:start="13:40" pos:end="13:44"><name pos:start="13:40" pos:end="13:44">avctx</name></expr></argument>, <argument pos:start="13:47" pos:end="13:50"><expr pos:start="13:47" pos:end="13:50"><name pos:start="13:47" pos:end="13:50">func</name></expr></argument>, <argument pos:start="13:53" pos:end="13:55"><expr pos:start="13:53" pos:end="13:55"><name pos:start="13:53" pos:end="13:55">arg</name></expr></argument>, <argument pos:start="13:58" pos:end="13:60"><expr pos:start="13:58" pos:end="13:60"><name pos:start="13:58" pos:end="13:60">ret</name></expr></argument>, <argument pos:start="13:63" pos:end="13:71"><expr pos:start="13:63" pos:end="13:71"><name pos:start="13:63" pos:end="13:71">job_count</name></expr></argument>, <argument pos:start="13:74" pos:end="13:81"><expr pos:start="13:74" pos:end="13:81"><name pos:start="13:74" pos:end="13:81">job_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:17">job_count</name> <operator pos:start="17:19" pos:end="17:20">&lt;=</operator> <literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><call pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:22">pthread_mutex_lock</name><argument_list pos:start="23:23" pos:end="23:44">(<argument pos:start="23:24" pos:end="23:43"><expr pos:start="23:24" pos:end="23:43"><operator pos:start="23:24" pos:end="23:24">&amp;</operator><name pos:start="23:25" pos:end="23:43"><name pos:start="23:25" pos:end="23:25">c</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:43">current_job_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:41"><expr pos:start="27:5" pos:end="27:40"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:5">c</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:18">current_job</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:40"><name pos:start="27:22" pos:end="27:26">avctx</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:40">thread_count</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:5">c</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:16">job_count</name></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:28">job_count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:5">c</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:15">job_size</name></name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:26">job_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:18"><expr pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:5">c</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:11">args</name></name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:17">arg</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:19"><expr pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:5">c</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:11">func</name></name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:18">func</name></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="49:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:12">(<expr pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">ret</name></expr>)</condition> <block pos:start="37:14" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:34">

        <expr_stmt pos:start="39:9" pos:end="39:22"><expr pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:9">c</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:15">rets</name></name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:21">ret</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:34"><expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:9">c</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:21">rets_count</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:33">job_count</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="49:5">else <block pos:start="43:12" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:26">

        <expr_stmt pos:start="45:9" pos:end="45:29"><expr pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:9">c</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:15">rets</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <operator pos:start="45:19" pos:end="45:19">&amp;</operator><name pos:start="45:20" pos:end="45:28">dummy_ret</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:26"><expr pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:9">c</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:21">rets_count</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <literal type="number" pos:start="47:25" pos:end="47:25">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:25"><expr pos:start="51:5" pos:end="51:24"><name pos:start="51:5" pos:end="51:22"><name pos:start="51:5" pos:end="51:5">c</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:22">current_execute</name></name><operator pos:start="51:23" pos:end="51:24">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:49"><expr pos:start="53:5" pos:end="53:48"><call pos:start="53:5" pos:end="53:48"><name pos:start="53:5" pos:end="53:26">pthread_cond_broadcast</name><argument_list pos:start="53:27" pos:end="53:48">(<argument pos:start="53:28" pos:end="53:47"><expr pos:start="53:28" pos:end="53:47"><operator pos:start="53:28" pos:end="53:28">&amp;</operator><name pos:start="53:29" pos:end="53:47"><name pos:start="53:29" pos:end="53:29">c</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:47">current_job_cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:48"><expr pos:start="57:5" pos:end="57:47"><call pos:start="57:5" pos:end="57:47"><name pos:start="57:5" pos:end="57:23">thread_park_workers</name><argument_list pos:start="57:24" pos:end="57:47">(<argument pos:start="57:25" pos:end="57:25"><expr pos:start="57:25" pos:end="57:25"><name pos:start="57:25" pos:end="57:25">c</name></expr></argument>, <argument pos:start="57:28" pos:end="57:46"><expr pos:start="57:28" pos:end="57:46"><name pos:start="57:28" pos:end="57:46"><name pos:start="57:28" pos:end="57:32">avctx</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:46">thread_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
