<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8843.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">block_signals</name><parameter_list pos:start="1:18" pos:end="1:23">(<parameter pos:start="1:19" pos:end="1:22"><decl pos:start="1:19" pos:end="1:22"><type pos:start="1:19" pos:end="1:22"><name pos:start="1:19" pos:end="1:22">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:19">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">TaskState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">ts</name> <init pos:start="5:19" pos:end="5:51">= <expr pos:start="5:21" pos:end="5:51"><operator pos:start="5:21" pos:end="5:21">(</operator><name pos:start="5:22" pos:end="5:30">TaskState</name> <operator pos:start="5:32" pos:end="5:32">*</operator><operator pos:start="5:33" pos:end="5:33">)</operator><name pos:start="5:34" pos:end="5:51"><name pos:start="5:34" pos:end="5:43">thread_cpu</name><operator pos:start="5:44" pos:end="5:45">-&gt;</operator><name pos:start="5:46" pos:end="5:51">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">sigset_t</name></type> <name pos:start="7:14" pos:end="7:16">set</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">pending</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="19:7">/* It's OK to block everything including SIGSEGV, because we won't

     * run any further guest code before unblocking signals in

     * process_pending_signals().

     */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><call pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:14">sigfillset</name><argument_list pos:start="21:15" pos:end="21:20">(<argument pos:start="21:16" pos:end="21:19"><expr pos:start="21:16" pos:end="21:19"><operator pos:start="21:16" pos:end="21:16">&amp;</operator><name pos:start="21:17" pos:end="21:19">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><call pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:15">sigprocmask</name><argument_list pos:start="23:16" pos:end="23:37">(<argument pos:start="23:17" pos:end="23:27"><expr pos:start="23:17" pos:end="23:27"><name pos:start="23:17" pos:end="23:27">SIG_SETMASK</name></expr></argument>, <argument pos:start="23:30" pos:end="23:33"><expr pos:start="23:30" pos:end="23:33"><operator pos:start="23:30" pos:end="23:30">&amp;</operator><name pos:start="23:31" pos:end="23:33">set</name></expr></argument>, <argument pos:start="23:36" pos:end="23:36"><expr pos:start="23:36" pos:end="23:36"><literal type="number" pos:start="23:36" pos:end="23:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:50"><expr pos:start="27:5" pos:end="27:49"><name pos:start="27:5" pos:end="27:11">pending</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:49"><name pos:start="27:15" pos:end="27:25">atomic_xchg</name><argument_list pos:start="27:26" pos:end="27:49">(<argument pos:start="27:27" pos:end="27:45"><expr pos:start="27:27" pos:end="27:45"><operator pos:start="27:27" pos:end="27:27">&amp;</operator><name pos:start="27:28" pos:end="27:45"><name pos:start="27:28" pos:end="27:29">ts</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:45">signal_pending</name></name></expr></argument>, <argument pos:start="27:48" pos:end="27:48"><expr pos:start="27:48" pos:end="27:48"><literal type="number" pos:start="27:48" pos:end="27:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="31:5" pos:end="31:19">return <expr pos:start="31:12" pos:end="31:18"><name pos:start="31:12" pos:end="31:18">pending</name></expr>;</return>

</block_content>}</block></function>
</unit>
