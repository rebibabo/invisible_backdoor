<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16082.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">unsigned</name> <name pos:start="1:17" pos:end="1:19">int</name></type> <name pos:start="1:21" pos:end="1:31">dec_rfe_etc</name><parameter_list pos:start="1:32" pos:end="1:49">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:44">DisasContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:9" pos:end="81:17">

	<expr_stmt pos:start="5:9" pos:end="5:28"><expr pos:start="5:9" pos:end="5:27"><call pos:start="5:9" pos:end="5:27"><name pos:start="5:9" pos:end="5:20">cris_cc_mask</name><argument_list pos:start="5:21" pos:end="5:27">(<argument pos:start="5:22" pos:end="5:23"><expr pos:start="5:22" pos:end="5:23"><name pos:start="5:22" pos:end="5:23">dc</name></expr></argument>, <argument pos:start="5:26" pos:end="5:26"><expr pos:start="5:26" pos:end="5:26"><literal type="number" pos:start="5:26" pos:end="5:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<if_stmt pos:start="9:9" pos:end="11:25"><if pos:start="9:9" pos:end="11:25">if <condition pos:start="9:12" pos:end="9:26">(<expr pos:start="9:13" pos:end="9:25"><name pos:start="9:13" pos:end="9:19"><name pos:start="9:13" pos:end="9:14">dc</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:19">op2</name></name> <operator pos:start="9:21" pos:end="9:22">==</operator> <literal type="number" pos:start="9:24" pos:end="9:25">15</literal></expr>)</condition><block type="pseudo" pos:start="11:17" pos:end="11:25"><block_content pos:start="11:17" pos:end="11:25"> <comment type="block" pos:start="9:28" pos:end="9:46">/* ignore halt.  */</comment>

		<return pos:start="11:17" pos:end="11:25">return <expr pos:start="11:24" pos:end="11:24"><literal type="number" pos:start="11:24" pos:end="11:24">2</literal></expr>;</return></block_content></block></if></if_stmt>



	<switch pos:start="15:9" pos:end="79:9">switch <condition pos:start="15:16" pos:end="15:28">(<expr pos:start="15:17" pos:end="15:27"><name pos:start="15:17" pos:end="15:23"><name pos:start="15:17" pos:end="15:18">dc</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:23">op2</name></name> <operator pos:start="15:25" pos:end="15:25">&amp;</operator> <literal type="number" pos:start="15:27" pos:end="15:27">7</literal></expr>)</condition> <block pos:start="15:30" pos:end="79:9">{<block_content pos:start="17:17" pos:end="75:30">

		<case pos:start="17:17" pos:end="17:23">case <expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">2</literal></expr>:</case>

			<comment type="block" pos:start="19:25" pos:end="19:35">/* rfe.  */</comment>

			<expr_stmt pos:start="21:25" pos:end="21:55"><expr pos:start="21:25" pos:end="21:54"><call pos:start="21:25" pos:end="21:54"><name pos:start="21:25" pos:end="21:27">DIS</name><argument_list pos:start="21:28" pos:end="21:54">(<argument pos:start="21:29" pos:end="21:53"><expr pos:start="21:29" pos:end="21:53"><call pos:start="21:29" pos:end="21:53"><name pos:start="21:29" pos:end="21:35">fprintf</name><argument_list pos:start="21:36" pos:end="21:53">(<argument pos:start="21:37" pos:end="21:43"><expr pos:start="21:37" pos:end="21:43"><name pos:start="21:37" pos:end="21:43">logfile</name></expr></argument>, <argument pos:start="21:46" pos:end="21:52"><expr pos:start="21:46" pos:end="21:52"><literal type="string" pos:start="21:46" pos:end="21:52">"rfe\n"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="23:25" pos:end="23:48"><expr pos:start="23:25" pos:end="23:47"><call pos:start="23:25" pos:end="23:47"><name pos:start="23:25" pos:end="23:43">cris_evaluate_flags</name><argument_list pos:start="23:44" pos:end="23:47">(<argument pos:start="23:45" pos:end="23:46"><expr pos:start="23:45" pos:end="23:46"><name pos:start="23:45" pos:end="23:46">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="25:25" pos:end="25:55"><expr pos:start="25:25" pos:end="25:54"><call pos:start="25:25" pos:end="25:54"><name pos:start="25:25" pos:end="25:42">tcg_gen_helper_0_0</name><argument_list pos:start="25:43" pos:end="25:54">(<argument pos:start="25:44" pos:end="25:53"><expr pos:start="25:44" pos:end="25:53"><name pos:start="25:44" pos:end="25:53">helper_rfe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="27:25" pos:end="27:50"><expr pos:start="27:25" pos:end="27:49"><name pos:start="27:25" pos:end="27:34"><name pos:start="27:25" pos:end="27:26">dc</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:34">is_jmp</name></name> <operator pos:start="27:36" pos:end="27:36">=</operator> <name pos:start="27:38" pos:end="27:49">DISAS_UPDATE</name></expr>;</expr_stmt>

			<break pos:start="29:25" pos:end="29:30">break;</break>

		<case pos:start="31:17" pos:end="31:23">case <expr pos:start="31:22" pos:end="31:22"><literal type="number" pos:start="31:22" pos:end="31:22">5</literal></expr>:</case>

			<comment type="block" pos:start="33:25" pos:end="33:35">/* rfn.  */</comment>

			<expr_stmt pos:start="35:25" pos:end="35:55"><expr pos:start="35:25" pos:end="35:54"><call pos:start="35:25" pos:end="35:54"><name pos:start="35:25" pos:end="35:27">DIS</name><argument_list pos:start="35:28" pos:end="35:54">(<argument pos:start="35:29" pos:end="35:53"><expr pos:start="35:29" pos:end="35:53"><call pos:start="35:29" pos:end="35:53"><name pos:start="35:29" pos:end="35:35">fprintf</name><argument_list pos:start="35:36" pos:end="35:53">(<argument pos:start="35:37" pos:end="35:43"><expr pos:start="35:37" pos:end="35:43"><name pos:start="35:37" pos:end="35:43">logfile</name></expr></argument>, <argument pos:start="35:46" pos:end="35:52"><expr pos:start="35:46" pos:end="35:52"><literal type="string" pos:start="35:46" pos:end="35:52">"rfn\n"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="37:25" pos:end="37:48"><expr pos:start="37:25" pos:end="37:47"><call pos:start="37:25" pos:end="37:47"><name pos:start="37:25" pos:end="37:43">cris_evaluate_flags</name><argument_list pos:start="37:44" pos:end="37:47">(<argument pos:start="37:45" pos:end="37:46"><expr pos:start="37:45" pos:end="37:46"><name pos:start="37:45" pos:end="37:46">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="39:25" pos:end="39:55"><expr pos:start="39:25" pos:end="39:54"><call pos:start="39:25" pos:end="39:54"><name pos:start="39:25" pos:end="39:42">tcg_gen_helper_0_0</name><argument_list pos:start="39:43" pos:end="39:54">(<argument pos:start="39:44" pos:end="39:53"><expr pos:start="39:44" pos:end="39:53"><name pos:start="39:44" pos:end="39:53">helper_rfn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="41:25" pos:end="41:50"><expr pos:start="41:25" pos:end="41:49"><name pos:start="41:25" pos:end="41:34"><name pos:start="41:25" pos:end="41:26">dc</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:34">is_jmp</name></name> <operator pos:start="41:36" pos:end="41:36">=</operator> <name pos:start="41:38" pos:end="41:49">DISAS_UPDATE</name></expr>;</expr_stmt>

			<break pos:start="43:25" pos:end="43:30">break;</break>

		<case pos:start="45:17" pos:end="45:23">case <expr pos:start="45:22" pos:end="45:22"><literal type="number" pos:start="45:22" pos:end="45:22">6</literal></expr>:</case>

			<expr_stmt pos:start="47:25" pos:end="47:69"><expr pos:start="47:25" pos:end="47:68"><call pos:start="47:25" pos:end="47:68"><name pos:start="47:25" pos:end="47:27">DIS</name><argument_list pos:start="47:28" pos:end="47:68">(<argument pos:start="47:29" pos:end="47:67"><expr pos:start="47:29" pos:end="47:67"><call pos:start="47:29" pos:end="47:67"><name pos:start="47:29" pos:end="47:35">fprintf</name><argument_list pos:start="47:36" pos:end="47:67">(<argument pos:start="47:37" pos:end="47:43"><expr pos:start="47:37" pos:end="47:43"><name pos:start="47:37" pos:end="47:43">logfile</name></expr></argument>, <argument pos:start="47:46" pos:end="47:57"><expr pos:start="47:46" pos:end="47:57"><literal type="string" pos:start="47:46" pos:end="47:57">"break %d\n"</literal></expr></argument>, <argument pos:start="47:60" pos:end="47:66"><expr pos:start="47:60" pos:end="47:66"><name pos:start="47:60" pos:end="47:66"><name pos:start="47:60" pos:end="47:61">dc</name><operator pos:start="47:62" pos:end="47:63">-&gt;</operator><name pos:start="47:64" pos:end="47:66">op1</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="49:25" pos:end="49:49"><expr pos:start="49:25" pos:end="49:48"><call pos:start="49:25" pos:end="49:48"><name pos:start="49:25" pos:end="49:43">cris_evaluate_flags</name> <argument_list pos:start="49:45" pos:end="49:48">(<argument pos:start="49:46" pos:end="49:47"><expr pos:start="49:46" pos:end="49:47"><name pos:start="49:46" pos:end="49:47">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="block" pos:start="51:25" pos:end="51:37">/* break.  */</comment>

			<expr_stmt pos:start="53:25" pos:end="53:60"><expr pos:start="53:25" pos:end="53:59"><call pos:start="53:25" pos:end="53:59"><name pos:start="53:25" pos:end="53:39">tcg_gen_movi_tl</name><argument_list pos:start="53:40" pos:end="53:59">(<argument pos:start="53:41" pos:end="53:46"><expr pos:start="53:41" pos:end="53:46"><name pos:start="53:41" pos:end="53:46">env_pc</name></expr></argument>, <argument pos:start="53:49" pos:end="53:58"><expr pos:start="53:49" pos:end="53:58"><name pos:start="53:49" pos:end="53:54"><name pos:start="53:49" pos:end="53:50">dc</name><operator pos:start="53:51" pos:end="53:52">-&gt;</operator><name pos:start="53:53" pos:end="53:54">pc</name></name> <operator pos:start="53:56" pos:end="53:56">+</operator> <literal type="number" pos:start="53:58" pos:end="53:58">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



			<comment type="block" pos:start="57:25" pos:end="57:74">/* Breaks start at 16 in the exception vector.  */</comment>

			<expr_stmt pos:start="59:25" pos:end="61:69"><expr pos:start="59:25" pos:end="61:68"><call pos:start="59:25" pos:end="61:68"><name pos:start="59:25" pos:end="59:40">t_gen_mov_env_TN</name><argument_list pos:start="59:41" pos:end="61:68">(<argument pos:start="59:42" pos:end="59:52"><expr pos:start="59:42" pos:end="59:52"><name pos:start="59:42" pos:end="59:52">trap_vector</name></expr></argument>, 

					 <argument pos:start="61:42" pos:end="61:67"><expr pos:start="61:42" pos:end="61:67"><call pos:start="61:42" pos:end="61:67"><name pos:start="61:42" pos:end="61:53">tcg_const_tl</name><argument_list pos:start="61:54" pos:end="61:67">(<argument pos:start="61:55" pos:end="61:66"><expr pos:start="61:55" pos:end="61:66"><name pos:start="61:55" pos:end="61:61"><name pos:start="61:55" pos:end="61:56">dc</name><operator pos:start="61:57" pos:end="61:58">-&gt;</operator><name pos:start="61:59" pos:end="61:61">op1</name></name> <operator pos:start="61:63" pos:end="61:63">+</operator> <literal type="number" pos:start="61:65" pos:end="61:66">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="63:25" pos:end="63:58"><expr pos:start="63:25" pos:end="63:57"><call pos:start="63:25" pos:end="63:57"><name pos:start="63:25" pos:end="63:45">t_gen_raise_exception</name><argument_list pos:start="63:46" pos:end="63:57">(<argument pos:start="63:47" pos:end="63:56"><expr pos:start="63:47" pos:end="63:56"><name pos:start="63:47" pos:end="63:56">EXCP_BREAK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="65:25" pos:end="65:50"><expr pos:start="65:25" pos:end="65:49"><name pos:start="65:25" pos:end="65:34"><name pos:start="65:25" pos:end="65:26">dc</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:34">is_jmp</name></name> <operator pos:start="65:36" pos:end="65:36">=</operator> <name pos:start="65:38" pos:end="65:49">DISAS_UPDATE</name></expr>;</expr_stmt>

			<break pos:start="67:25" pos:end="67:30">break;</break>

		<default pos:start="69:17" pos:end="69:24">default:</default>

			<expr_stmt pos:start="71:25" pos:end="71:53"><expr pos:start="71:25" pos:end="71:52"><call pos:start="71:25" pos:end="71:52"><name pos:start="71:25" pos:end="71:30">printf</name> <argument_list pos:start="71:32" pos:end="71:52">(<argument pos:start="71:33" pos:end="71:42"><expr pos:start="71:33" pos:end="71:42"><literal type="string" pos:start="71:33" pos:end="71:42">"op2=%x\n"</literal></expr></argument>, <argument pos:start="71:45" pos:end="71:51"><expr pos:start="71:45" pos:end="71:51"><name pos:start="71:45" pos:end="71:51"><name pos:start="71:45" pos:end="71:46">dc</name><operator pos:start="71:47" pos:end="71:48">-&gt;</operator><name pos:start="71:49" pos:end="71:51">op2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="73:25" pos:end="73:30"><expr pos:start="73:25" pos:end="73:29"><call pos:start="73:25" pos:end="73:29"><name pos:start="73:25" pos:end="73:27">BUG</name><argument_list pos:start="73:28" pos:end="73:29">()</argument_list></call></expr>;</expr_stmt>

			<break pos:start="75:25" pos:end="75:30">break;</break>



	</block_content>}</block></switch>

	<return pos:start="81:9" pos:end="81:17">return <expr pos:start="81:16" pos:end="81:16"><literal type="number" pos:start="81:16" pos:end="81:16">2</literal></expr>;</return>

</block_content>}</block></function>
</unit>
