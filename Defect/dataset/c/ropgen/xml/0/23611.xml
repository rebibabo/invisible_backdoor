<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23611.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">qemu_set_fd_handler2</name><parameter_list pos:start="1:25" pos:end="9:38">(<parameter pos:start="1:26" pos:end="1:31"><decl pos:start="1:26" pos:end="1:31"><type pos:start="1:26" pos:end="1:31"><name pos:start="1:26" pos:end="1:28">int</name></type> <name pos:start="1:30" pos:end="1:31">fd</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:55"><decl pos:start="3:26" pos:end="3:55"><type pos:start="3:26" pos:end="3:55"><name pos:start="3:26" pos:end="3:41">IOCanReadHandler</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:55">fd_read_poll</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:43"><decl pos:start="5:26" pos:end="5:43"><type pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:34">IOHandler</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:43">fd_read</name></decl></parameter>,

                         <parameter pos:start="7:26" pos:end="7:44"><decl pos:start="7:26" pos:end="7:44"><type pos:start="7:26" pos:end="7:44"><name pos:start="7:26" pos:end="7:34">IOHandler</name> <modifier pos:start="7:36" pos:end="7:36">*</modifier></type><name pos:start="7:37" pos:end="7:44">fd_write</name></decl></parameter>,

                         <parameter pos:start="9:26" pos:end="9:37"><decl pos:start="9:26" pos:end="9:37"><type pos:start="9:26" pos:end="9:37"><name pos:start="9:26" pos:end="9:29">void</name> <modifier pos:start="9:31" pos:end="9:31">*</modifier></type><name pos:start="9:32" pos:end="9:37">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="71:1">{<block_content pos:start="13:5" pos:end="69:13">

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:19">IOHandlerRecord</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:24">ioh</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><call pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:19">(<argument pos:start="17:12" pos:end="17:18"><expr pos:start="17:12" pos:end="17:18"><name pos:start="17:12" pos:end="17:13">fd</name> <operator pos:start="17:15" pos:end="17:16">&gt;=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="67:5"><if pos:start="21:5" pos:end="35:5">if <condition pos:start="21:8" pos:end="21:30">(<expr pos:start="21:9" pos:end="21:29"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:16">fd_read</name> <operator pos:start="21:18" pos:end="21:19">&amp;&amp;</operator> <operator pos:start="21:21" pos:end="21:21">!</operator><name pos:start="21:22" pos:end="21:29">fd_write</name></expr>)</condition> <block pos:start="21:32" pos:end="35:5">{<block_content pos:start="23:9" pos:end="33:9">

        <macro pos:start="23:9" pos:end="23:46"><name pos:start="23:9" pos:end="23:21">QLIST_FOREACH</name><argument_list pos:start="23:22" pos:end="23:46">(<argument pos:start="23:23" pos:end="23:25">ioh</argument>, <argument pos:start="23:28" pos:end="23:39">&amp;io_handlers</argument>, <argument pos:start="23:42" pos:end="23:45">next</argument>)</argument_list></macro> <block pos:start="23:48" pos:end="33:9">{<block_content pos:start="25:13" pos:end="31:13">

            <if_stmt pos:start="25:13" pos:end="31:13"><if pos:start="25:13" pos:end="31:13">if <condition pos:start="25:16" pos:end="25:30">(<expr pos:start="25:17" pos:end="25:29"><name pos:start="25:17" pos:end="25:23"><name pos:start="25:17" pos:end="25:19">ioh</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:23">fd</name></name> <operator pos:start="25:25" pos:end="25:26">==</operator> <name pos:start="25:28" pos:end="25:29">fd</name></expr>)</condition> <block pos:start="25:32" pos:end="31:13">{<block_content pos:start="27:17" pos:end="29:22">

                <expr_stmt pos:start="27:17" pos:end="27:33"><expr pos:start="27:17" pos:end="27:32"><name pos:start="27:17" pos:end="27:28"><name pos:start="27:17" pos:end="27:19">ioh</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:28">deleted</name></name> <operator pos:start="27:30" pos:end="27:30">=</operator> <literal type="number" pos:start="27:32" pos:end="27:32">1</literal></expr>;</expr_stmt>

                <break pos:start="29:17" pos:end="29:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="67:5">else <block pos:start="35:12" pos:end="67:5">{<block_content pos:start="37:9" pos:end="65:28">

        <macro pos:start="37:9" pos:end="37:46"><name pos:start="37:9" pos:end="37:21">QLIST_FOREACH</name><argument_list pos:start="37:22" pos:end="37:46">(<argument pos:start="37:23" pos:end="37:25">ioh</argument>, <argument pos:start="37:28" pos:end="37:39">&amp;io_handlers</argument>, <argument pos:start="37:42" pos:end="37:45">next</argument>)</argument_list></macro> <block pos:start="37:48" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:27">

            <if_stmt pos:start="39:13" pos:end="41:27"><if pos:start="39:13" pos:end="41:27">if <condition pos:start="39:16" pos:end="39:30">(<expr pos:start="39:17" pos:end="39:29"><name pos:start="39:17" pos:end="39:23"><name pos:start="39:17" pos:end="39:19">ioh</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:23">fd</name></name> <operator pos:start="39:25" pos:end="39:26">==</operator> <name pos:start="39:28" pos:end="39:29">fd</name></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:27"><block_content pos:start="41:17" pos:end="41:27">

                <goto pos:start="41:17" pos:end="41:27">goto <name pos:start="41:22" pos:end="41:26">found</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="45:9" pos:end="45:49"><expr pos:start="45:9" pos:end="45:48"><name pos:start="45:9" pos:end="45:11">ioh</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:48"><name pos:start="45:15" pos:end="45:23">g_malloc0</name><argument_list pos:start="45:24" pos:end="45:48">(<argument pos:start="45:25" pos:end="45:47"><expr pos:start="45:25" pos:end="45:47"><sizeof pos:start="45:25" pos:end="45:47">sizeof<argument_list pos:start="45:31" pos:end="45:47">(<argument pos:start="45:32" pos:end="45:46"><expr pos:start="45:32" pos:end="45:46"><name pos:start="45:32" pos:end="45:46">IOHandlerRecord</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:51"><expr pos:start="47:9" pos:end="47:50"><call pos:start="47:9" pos:end="47:50"><name pos:start="47:9" pos:end="47:25">QLIST_INSERT_HEAD</name><argument_list pos:start="47:26" pos:end="47:50">(<argument pos:start="47:27" pos:end="47:38"><expr pos:start="47:27" pos:end="47:38"><operator pos:start="47:27" pos:end="47:27">&amp;</operator><name pos:start="47:28" pos:end="47:38">io_handlers</name></expr></argument>, <argument pos:start="47:41" pos:end="47:43"><expr pos:start="47:41" pos:end="47:43"><name pos:start="47:41" pos:end="47:43">ioh</name></expr></argument>, <argument pos:start="47:46" pos:end="47:49"><expr pos:start="47:46" pos:end="47:49"><name pos:start="47:46" pos:end="47:49">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <label pos:start="49:5" pos:end="49:10"><name pos:start="49:5" pos:end="49:9">found</name>:</label>

        <expr_stmt pos:start="51:9" pos:end="51:21"><expr pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:11">ioh</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:15">fd</name></name> <operator pos:start="51:17" pos:end="51:17">=</operator> <name pos:start="51:19" pos:end="51:20">fd</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:41"><expr pos:start="53:9" pos:end="53:40"><name pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:11">ioh</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:25">fd_read_poll</name></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <name pos:start="53:29" pos:end="53:40">fd_read_poll</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:31"><expr pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:11">ioh</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:20">fd_read</name></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <name pos:start="55:24" pos:end="55:30">fd_read</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:11">ioh</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:21">fd_write</name></name> <operator pos:start="57:23" pos:end="57:23">=</operator> <name pos:start="57:25" pos:end="57:32">fd_write</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:29"><expr pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:11">ioh</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:19">opaque</name></name> <operator pos:start="59:21" pos:end="59:21">=</operator> <name pos:start="59:23" pos:end="59:28">opaque</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:30"><expr pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:11">ioh</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:24">pollfds_idx</name></name> <operator pos:start="61:26" pos:end="61:26">=</operator> <operator pos:start="61:28" pos:end="61:28">-</operator><literal type="number" pos:start="61:29" pos:end="61:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:25"><expr pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:11">ioh</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:20">deleted</name></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <literal type="number" pos:start="63:24" pos:end="63:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:28"><expr pos:start="65:9" pos:end="65:27"><call pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:25">qemu_notify_event</name><argument_list pos:start="65:26" pos:end="65:27">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
