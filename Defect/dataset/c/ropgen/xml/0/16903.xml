<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16903.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">ide_init1</name><parameter_list pos:start="1:22" pos:end="1:44">(<parameter pos:start="1:23" pos:end="1:33"><decl pos:start="1:23" pos:end="1:33"><type pos:start="1:23" pos:end="1:33"><name pos:start="1:23" pos:end="1:28">IDEBus</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">bus</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:43"><decl pos:start="1:36" pos:end="1:43"><type pos:start="1:36" pos:end="1:43"><name pos:start="1:36" pos:end="1:38">int</name></type> <name pos:start="1:40" pos:end="1:43">unit</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:73">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:14"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:14">int</name></type> <name pos:start="5:16" pos:end="5:27">drive_serial</name> <init pos:start="5:29" pos:end="5:31">= <expr pos:start="5:31" pos:end="5:31"><literal type="number" pos:start="5:31" pos:end="5:31">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">IDEState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:33">= <expr pos:start="7:19" pos:end="7:33"><operator pos:start="7:19" pos:end="7:19">&amp;</operator><name pos:start="7:20" pos:end="7:33"><name pos:start="7:20" pos:end="7:22">bus</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:27">ifs</name><index pos:start="7:28" pos:end="7:33">[<expr pos:start="7:29" pos:end="7:32"><name pos:start="7:29" pos:end="7:32">unit</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:10">bus</name></name> <operator pos:start="11:12" pos:end="11:12">=</operator> <name pos:start="11:14" pos:end="11:16">bus</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:19"><expr pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:11">unit</name></name> <operator pos:start="13:13" pos:end="13:13">=</operator> <name pos:start="13:15" pos:end="13:18">unit</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:37"><expr pos:start="15:5" pos:end="15:36"><name pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:19">drive_serial</name></name> <operator pos:start="15:21" pos:end="15:21">=</operator> <name pos:start="15:23" pos:end="15:34">drive_serial</name><operator pos:start="15:35" pos:end="15:36">++</operator></expr>;</expr_stmt>

    <comment type="block" pos:start="17:5" pos:end="17:75">/* we need at least 2k alignment for accessing CDROMs using O_DIRECT */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:57"><expr pos:start="19:5" pos:end="19:56"><name pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:26">io_buffer_total_len</name></name> <operator pos:start="19:28" pos:end="19:28">=</operator> <name pos:start="19:30" pos:end="19:48">IDE_DMA_BUF_SECTORS</name><operator pos:start="19:49" pos:end="19:49">*</operator><literal type="number" pos:start="19:50" pos:end="19:54">512</literal> <operator pos:start="19:54" pos:end="19:54">+</operator> <literal type="number" pos:start="19:56" pos:end="19:56">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:63"><expr pos:start="21:5" pos:end="21:62"><name pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:16">io_buffer</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:62"><name pos:start="21:20" pos:end="21:32">qemu_memalign</name><argument_list pos:start="21:33" pos:end="21:62">(<argument pos:start="21:34" pos:end="21:37"><expr pos:start="21:34" pos:end="21:37"><literal type="number" pos:start="21:34" pos:end="21:37">2048</literal></expr></argument>, <argument pos:start="21:40" pos:end="21:61"><expr pos:start="21:40" pos:end="21:61"><name pos:start="21:40" pos:end="21:61"><name pos:start="21:40" pos:end="21:40">s</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:61">io_buffer_total_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:52"><expr pos:start="23:5" pos:end="23:51"><call pos:start="23:5" pos:end="23:51"><name pos:start="23:5" pos:end="23:10">memset</name><argument_list pos:start="23:11" pos:end="23:51">(<argument pos:start="23:12" pos:end="23:23"><expr pos:start="23:12" pos:end="23:23"><name pos:start="23:12" pos:end="23:23"><name pos:start="23:12" pos:end="23:12">s</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:23">io_buffer</name></name></expr></argument>, <argument pos:start="23:26" pos:end="23:26"><expr pos:start="23:26" pos:end="23:26"><literal type="number" pos:start="23:26" pos:end="23:26">0</literal></expr></argument>, <argument pos:start="23:29" pos:end="23:50"><expr pos:start="23:29" pos:end="23:50"><name pos:start="23:29" pos:end="23:50"><name pos:start="23:29" pos:end="23:29">s</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:50">io_buffer_total_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:57"><expr pos:start="27:5" pos:end="27:56"><name pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:26">smart_selftest_data</name></name> <operator pos:start="27:28" pos:end="27:28">=</operator> <call pos:start="27:30" pos:end="27:56"><name pos:start="27:30" pos:end="27:44">qemu_blockalign</name><argument_list pos:start="27:45" pos:end="27:56">(<argument pos:start="27:46" pos:end="27:50"><expr pos:start="27:46" pos:end="27:50"><name pos:start="27:46" pos:end="27:50"><name pos:start="27:46" pos:end="27:46">s</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:50">bs</name></name></expr></argument>, <argument pos:start="27:53" pos:end="27:55"><expr pos:start="27:53" pos:end="27:55"><literal type="number" pos:start="27:53" pos:end="27:55">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:43"><expr pos:start="29:5" pos:end="29:42"><call pos:start="29:5" pos:end="29:42"><name pos:start="29:5" pos:end="29:10">memset</name><argument_list pos:start="29:11" pos:end="29:42">(<argument pos:start="29:12" pos:end="29:33"><expr pos:start="29:12" pos:end="29:33"><name pos:start="29:12" pos:end="29:33"><name pos:start="29:12" pos:end="29:12">s</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:33">smart_selftest_data</name></name></expr></argument>, <argument pos:start="29:36" pos:end="29:36"><expr pos:start="29:36" pos:end="29:36"><literal type="number" pos:start="29:36" pos:end="29:36">0</literal></expr></argument>, <argument pos:start="29:39" pos:end="29:41"><expr pos:start="29:39" pos:end="29:41"><literal type="number" pos:start="29:39" pos:end="29:41">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="35:73"><expr pos:start="33:5" pos:end="35:72"><name pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:25">sector_write_timer</name></name> <operator pos:start="33:27" pos:end="33:27">=</operator> <call pos:start="33:29" pos:end="35:72"><name pos:start="33:29" pos:end="33:40">timer_new_ns</name><argument_list pos:start="33:41" pos:end="35:72">(<argument pos:start="33:42" pos:end="33:59"><expr pos:start="33:42" pos:end="33:59"><name pos:start="33:42" pos:end="33:59">QEMU_CLOCK_VIRTUAL</name></expr></argument>,

                                           <argument pos:start="35:44" pos:end="35:68"><expr pos:start="35:44" pos:end="35:68"><name pos:start="35:44" pos:end="35:68">ide_sector_write_timer_cb</name></expr></argument>, <argument pos:start="35:71" pos:end="35:71"><expr pos:start="35:71" pos:end="35:71"><name pos:start="35:71" pos:end="35:71">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
