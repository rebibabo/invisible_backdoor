<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23490.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">tlb_info_32</name><parameter_list pos:start="1:24" pos:end="1:52">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:31">Monitor</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">mon</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:46">CPUState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:5">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">l1</name></decl>, <decl pos:start="5:13" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:14">l2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">pgd</name></decl>, <decl pos:start="7:19" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:19" pos:end="7:21">pde</name></decl>, <decl pos:start="7:24" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:24" pos:end="7:26">pte</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:30"><expr pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:7">pgd</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <name pos:start="11:11" pos:end="11:20"><name pos:start="11:11" pos:end="11:13">env</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:17">cr</name><index pos:start="11:18" pos:end="11:20">[<expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">3</literal></expr>]</index></name> <operator pos:start="11:22" pos:end="11:22">&amp;</operator> <operator pos:start="11:24" pos:end="11:24">~</operator><literal type="number" pos:start="11:25" pos:end="11:29">0xfff</literal></expr>;</expr_stmt>

    <for pos:start="13:5" pos:end="51:5">for<control pos:start="13:8" pos:end="13:32">(<init pos:start="13:9" pos:end="13:15"><expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:10">l1</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:26"><expr pos:start="13:17" pos:end="13:25"><name pos:start="13:17" pos:end="13:18">l1</name> <operator pos:start="13:20" pos:end="13:20">&lt;</operator> <literal type="number" pos:start="13:22" pos:end="13:25">1024</literal></expr>;</condition> <incr pos:start="13:28" pos:end="13:31"><expr pos:start="13:28" pos:end="13:31"><name pos:start="13:28" pos:end="13:29">l1</name><operator pos:start="13:30" pos:end="13:31">++</operator></expr></incr>)</control> <block pos:start="13:34" pos:end="51:5">{<block_content pos:start="15:9" pos:end="49:9">

        <expr_stmt pos:start="15:9" pos:end="15:56"><expr pos:start="15:9" pos:end="15:55"><call pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:32">cpu_physical_memory_read</name><argument_list pos:start="15:33" pos:end="15:55">(<argument pos:start="15:34" pos:end="15:45"><expr pos:start="15:34" pos:end="15:45"><name pos:start="15:34" pos:end="15:36">pgd</name> <operator pos:start="15:38" pos:end="15:38">+</operator> <name pos:start="15:40" pos:end="15:41">l1</name> <operator pos:start="15:43" pos:end="15:43">*</operator> <literal type="number" pos:start="15:45" pos:end="15:45">4</literal></expr></argument>, <argument pos:start="15:48" pos:end="15:51"><expr pos:start="15:48" pos:end="15:51"><operator pos:start="15:48" pos:end="15:48">&amp;</operator><name pos:start="15:49" pos:end="15:51">pde</name></expr></argument>, <argument pos:start="15:54" pos:end="15:54"><expr pos:start="15:54" pos:end="15:54"><literal type="number" pos:start="15:54" pos:end="15:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:31"><expr pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:11">pde</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:30"><name pos:start="17:15" pos:end="17:25">le32_to_cpu</name><argument_list pos:start="17:26" pos:end="17:30">(<argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><name pos:start="17:27" pos:end="17:29">pde</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="49:9"><if pos:start="19:9" pos:end="49:9">if <condition pos:start="19:12" pos:end="19:34">(<expr pos:start="19:13" pos:end="19:33"><name pos:start="19:13" pos:end="19:15">pde</name> <operator pos:start="19:17" pos:end="19:17">&amp;</operator> <name pos:start="19:19" pos:end="19:33">PG_PRESENT_MASK</name></expr>)</condition> <block pos:start="19:36" pos:end="49:9">{<block_content pos:start="21:13" pos:end="47:13">

            <if_stmt pos:start="21:13" pos:end="47:13"><if pos:start="21:13" pos:end="27:13">if <condition pos:start="21:16" pos:end="21:67">(<expr pos:start="21:17" pos:end="21:66"><operator pos:start="21:17" pos:end="21:17">(</operator><name pos:start="21:18" pos:end="21:20">pde</name> <operator pos:start="21:22" pos:end="21:22">&amp;</operator> <name pos:start="21:24" pos:end="21:34">PG_PSE_MASK</name><operator pos:start="21:35" pos:end="21:35">)</operator> <operator pos:start="21:37" pos:end="21:38">&amp;&amp;</operator> <operator pos:start="21:40" pos:end="21:40">(</operator><name pos:start="21:41" pos:end="21:50"><name pos:start="21:41" pos:end="21:43">env</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:47">cr</name><index pos:start="21:48" pos:end="21:50">[<expr pos:start="21:49" pos:end="21:49"><literal type="number" pos:start="21:49" pos:end="21:49">4</literal></expr>]</index></name> <operator pos:start="21:52" pos:end="21:52">&amp;</operator> <name pos:start="21:54" pos:end="21:65">CR4_PSE_MASK</name><operator pos:start="21:66" pos:end="21:66">)</operator></expr>)</condition> <block pos:start="21:69" pos:end="27:13">{<block_content pos:start="25:17" pos:end="25:66">

                <comment type="block" pos:start="23:17" pos:end="23:30">/* 4M pages */</comment>

                <expr_stmt pos:start="25:17" pos:end="25:66"><expr pos:start="25:17" pos:end="25:65"><call pos:start="25:17" pos:end="25:65"><name pos:start="25:17" pos:end="25:25">print_pte</name><argument_list pos:start="25:26" pos:end="25:65">(<argument pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><name pos:start="25:27" pos:end="25:29">mon</name></expr></argument>, <argument pos:start="25:32" pos:end="25:41"><expr pos:start="25:32" pos:end="25:41"><operator pos:start="25:32" pos:end="25:32">(</operator><name pos:start="25:33" pos:end="25:34">l1</name> <operator pos:start="25:36" pos:end="25:37">&lt;&lt;</operator> <literal type="number" pos:start="25:39" pos:end="25:40">22</literal><operator pos:start="25:41" pos:end="25:41">)</operator></expr></argument>, <argument pos:start="25:44" pos:end="25:46"><expr pos:start="25:44" pos:end="25:46"><name pos:start="25:44" pos:end="25:46">pde</name></expr></argument>, <argument pos:start="25:49" pos:end="25:64"><expr pos:start="25:49" pos:end="25:64"><operator pos:start="25:49" pos:end="25:49">~</operator><operator pos:start="25:50" pos:end="25:50">(</operator><operator pos:start="25:51" pos:end="25:51">(</operator><literal type="number" pos:start="25:52" pos:end="25:52">1</literal> <operator pos:start="25:54" pos:end="25:55">&lt;&lt;</operator> <literal type="number" pos:start="25:57" pos:end="25:58">21</literal><operator pos:start="25:59" pos:end="25:59">)</operator> <operator pos:start="25:61" pos:end="25:61">-</operator> <literal type="number" pos:start="25:63" pos:end="25:63">1</literal><operator pos:start="25:64" pos:end="25:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="27:15" pos:end="47:13">else <block pos:start="27:20" pos:end="47:13">{<block_content pos:start="29:17" pos:end="45:17">

                <for pos:start="29:17" pos:end="45:17">for<control pos:start="29:20" pos:end="29:44">(<init pos:start="29:21" pos:end="29:27"><expr pos:start="29:21" pos:end="29:26"><name pos:start="29:21" pos:end="29:22">l2</name> <operator pos:start="29:24" pos:end="29:24">=</operator> <literal type="number" pos:start="29:26" pos:end="29:26">0</literal></expr>;</init> <condition pos:start="29:29" pos:end="29:38"><expr pos:start="29:29" pos:end="29:37"><name pos:start="29:29" pos:end="29:30">l2</name> <operator pos:start="29:32" pos:end="29:32">&lt;</operator> <literal type="number" pos:start="29:34" pos:end="29:37">1024</literal></expr>;</condition> <incr pos:start="29:40" pos:end="29:43"><expr pos:start="29:40" pos:end="29:43"><name pos:start="29:40" pos:end="29:41">l2</name><operator pos:start="29:42" pos:end="29:43">++</operator></expr></incr>)</control> <block pos:start="29:46" pos:end="45:17">{<block_content pos:start="31:21" pos:end="43:21">

                    <expr_stmt pos:start="31:21" pos:end="31:79"><expr pos:start="31:21" pos:end="31:78"><call pos:start="31:21" pos:end="31:78"><name pos:start="31:21" pos:end="31:44">cpu_physical_memory_read</name><argument_list pos:start="31:45" pos:end="31:78">(<argument pos:start="31:46" pos:end="31:68"><expr pos:start="31:46" pos:end="31:68"><operator pos:start="31:46" pos:end="31:46">(</operator><name pos:start="31:47" pos:end="31:49">pde</name> <operator pos:start="31:51" pos:end="31:51">&amp;</operator> <operator pos:start="31:53" pos:end="31:53">~</operator><literal type="number" pos:start="31:54" pos:end="31:58">0xfff</literal><operator pos:start="31:59" pos:end="31:59">)</operator> <operator pos:start="31:61" pos:end="31:61">+</operator> <name pos:start="31:63" pos:end="31:64">l2</name> <operator pos:start="31:66" pos:end="31:66">*</operator> <literal type="number" pos:start="31:68" pos:end="31:68">4</literal></expr></argument>, <argument pos:start="31:71" pos:end="31:74"><expr pos:start="31:71" pos:end="31:74"><operator pos:start="31:71" pos:end="31:71">&amp;</operator><name pos:start="31:72" pos:end="31:74">pte</name></expr></argument>, <argument pos:start="31:77" pos:end="31:77"><expr pos:start="31:77" pos:end="31:77"><literal type="number" pos:start="31:77" pos:end="31:77">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="33:21" pos:end="33:43"><expr pos:start="33:21" pos:end="33:42"><name pos:start="33:21" pos:end="33:23">pte</name> <operator pos:start="33:25" pos:end="33:25">=</operator> <call pos:start="33:27" pos:end="33:42"><name pos:start="33:27" pos:end="33:37">le32_to_cpu</name><argument_list pos:start="33:38" pos:end="33:42">(<argument pos:start="33:39" pos:end="33:41"><expr pos:start="33:39" pos:end="33:41"><name pos:start="33:39" pos:end="33:41">pte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="35:21" pos:end="43:21"><if pos:start="35:21" pos:end="43:21">if <condition pos:start="35:24" pos:end="35:46">(<expr pos:start="35:25" pos:end="35:45"><name pos:start="35:25" pos:end="35:27">pte</name> <operator pos:start="35:29" pos:end="35:29">&amp;</operator> <name pos:start="35:31" pos:end="35:45">PG_PRESENT_MASK</name></expr>)</condition> <block pos:start="35:48" pos:end="43:21">{<block_content pos:start="37:25" pos:end="41:42">

                        <expr_stmt pos:start="37:25" pos:end="41:42"><expr pos:start="37:25" pos:end="41:41"><call pos:start="37:25" pos:end="41:41"><name pos:start="37:25" pos:end="37:33">print_pte</name><argument_list pos:start="37:34" pos:end="41:41">(<argument pos:start="37:35" pos:end="37:37"><expr pos:start="37:35" pos:end="37:37"><name pos:start="37:35" pos:end="37:37">mon</name></expr></argument>, <argument pos:start="37:40" pos:end="37:62"><expr pos:start="37:40" pos:end="37:62"><operator pos:start="37:40" pos:end="37:40">(</operator><name pos:start="37:41" pos:end="37:42">l1</name> <operator pos:start="37:44" pos:end="37:45">&lt;&lt;</operator> <literal type="number" pos:start="37:47" pos:end="37:48">22</literal><operator pos:start="37:49" pos:end="37:49">)</operator> <operator pos:start="37:51" pos:end="37:51">+</operator> <operator pos:start="37:53" pos:end="37:53">(</operator><name pos:start="37:54" pos:end="37:55">l2</name> <operator pos:start="37:57" pos:end="37:58">&lt;&lt;</operator> <literal type="number" pos:start="37:60" pos:end="37:61">12</literal><operator pos:start="37:62" pos:end="37:62">)</operator></expr></argument>,

                                  <argument pos:start="39:35" pos:end="39:52"><expr pos:start="39:35" pos:end="39:52"><name pos:start="39:35" pos:end="39:37">pte</name> <operator pos:start="39:39" pos:end="39:39">&amp;</operator> <operator pos:start="39:41" pos:end="39:41">~</operator><name pos:start="39:42" pos:end="39:52">PG_PSE_MASK</name></expr></argument>,

                                  <argument pos:start="41:35" pos:end="41:40"><expr pos:start="41:35" pos:end="41:40"><operator pos:start="41:35" pos:end="41:35">~</operator><literal type="number" pos:start="41:36" pos:end="41:40">0xfff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
