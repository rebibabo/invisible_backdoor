<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9448.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:12">const</specifier> <name pos:start="1:14" pos:end="1:17">char</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:36">ass_split_section</name><parameter_list pos:start="1:37" pos:end="1:75">(<parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:57"><name pos:start="1:38" pos:end="1:52">ASSSplitContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">ctx</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:74"><decl pos:start="1:60" pos:end="1:74"><type pos:start="1:60" pos:end="1:74"><specifier pos:start="1:60" pos:end="1:64">const</specifier> <name pos:start="1:66" pos:end="1:69">char</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="143:1">{<block_content pos:start="5:5" pos:end="141:15">

    <decl_stmt pos:start="5:5" pos:end="5:68"><decl pos:start="5:5" pos:end="5:67"><type pos:start="5:5" pos:end="5:22"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:20">ASSSection</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:29">section</name> <init pos:start="5:31" pos:end="5:67">= <expr pos:start="5:33" pos:end="5:67"><operator pos:start="5:33" pos:end="5:33">&amp;</operator><name pos:start="5:34" pos:end="5:67"><name pos:start="5:34" pos:end="5:45">ass_sections</name><index pos:start="5:46" pos:end="5:67">[<expr pos:start="5:47" pos:end="5:66"><name pos:start="5:47" pos:end="5:66"><name pos:start="5:47" pos:end="5:49">ctx</name><operator pos:start="5:50" pos:end="5:51">-&gt;</operator><name pos:start="5:52" pos:end="5:66">current_section</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:59"><decl pos:start="7:5" pos:end="7:58"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:7">int</name> <modifier pos:start="7:9" pos:end="7:9">*</modifier></type><name pos:start="7:10" pos:end="7:15">number</name> <init pos:start="7:17" pos:end="7:58">= <expr pos:start="7:19" pos:end="7:58"><operator pos:start="7:19" pos:end="7:19">&amp;</operator><name pos:start="7:20" pos:end="7:58"><name pos:start="7:20" pos:end="7:22">ctx</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:36">field_number</name><index pos:start="7:37" pos:end="7:58">[<expr pos:start="7:38" pos:end="7:57"><name pos:start="7:38" pos:end="7:57"><name pos:start="7:38" pos:end="7:40">ctx</name><operator pos:start="7:41" pos:end="7:42">-&gt;</operator><name pos:start="7:43" pos:end="7:57">current_section</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:56"><decl pos:start="9:5" pos:end="9:55"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:7">int</name> <modifier pos:start="9:9" pos:end="9:9">*</modifier></type><name pos:start="9:10" pos:end="9:14">order</name> <init pos:start="9:16" pos:end="9:55">= <expr pos:start="9:18" pos:end="9:55"><name pos:start="9:18" pos:end="9:55"><name pos:start="9:18" pos:end="9:20">ctx</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:33">field_order</name><index pos:start="9:34" pos:end="9:55">[<expr pos:start="9:35" pos:end="9:54"><name pos:start="9:35" pos:end="9:54"><name pos:start="9:35" pos:end="9:37">ctx</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:54">current_section</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:7">int</name> <modifier pos:start="11:9" pos:end="11:9">*</modifier></type><name pos:start="11:10" pos:end="11:12">tmp</name></decl>, <decl pos:start="11:15" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:9"/><name pos:start="11:15" pos:end="11:15">i</name></decl>, <decl pos:start="11:18" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:9"/><name pos:start="11:18" pos:end="11:20">len</name></decl>;</decl_stmt>



    <while pos:start="15:5" pos:end="139:5">while <condition pos:start="15:11" pos:end="15:23">(<expr pos:start="15:12" pos:end="15:22"><name pos:start="15:12" pos:end="15:14">buf</name> <operator pos:start="15:16" pos:end="15:17">&amp;&amp;</operator> <operator pos:start="15:19" pos:end="15:19">*</operator><name pos:start="15:20" pos:end="15:22">buf</name></expr>)</condition> <block pos:start="15:25" pos:end="139:5">{<block_content pos:start="17:9" pos:end="137:22">

        <if_stmt pos:start="17:9" pos:end="23:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="17:26">(<expr pos:start="17:13" pos:end="17:25"><name pos:start="17:13" pos:end="17:18"><name pos:start="17:13" pos:end="17:15">buf</name><index pos:start="17:16" pos:end="17:18">[<expr pos:start="17:17" pos:end="17:17"><literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr>]</index></name> <operator pos:start="17:20" pos:end="17:21">==</operator> <literal type="char" pos:start="17:23" pos:end="17:25">'['</literal></expr>)</condition> <block pos:start="17:28" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:18">

            <expr_stmt pos:start="19:13" pos:end="19:38"><expr pos:start="19:13" pos:end="19:37"><name pos:start="19:13" pos:end="19:32"><name pos:start="19:13" pos:end="19:15">ctx</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:32">current_section</name></name> <operator pos:start="19:34" pos:end="19:34">=</operator> <operator pos:start="19:36" pos:end="19:36">-</operator><literal type="number" pos:start="19:37" pos:end="19:37">1</literal></expr>;</expr_stmt>

            <break pos:start="21:13" pos:end="21:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="133:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:62">(<expr pos:start="25:13" pos:end="25:61"><name pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:15">buf</name><index pos:start="25:16" pos:end="25:18">[<expr pos:start="25:17" pos:end="25:17"><literal type="number" pos:start="25:17" pos:end="25:17">0</literal></expr>]</index></name> <operator pos:start="25:20" pos:end="25:21">==</operator> <literal type="char" pos:start="25:23" pos:end="25:25">';'</literal> <operator pos:start="25:27" pos:end="25:28">||</operator> <operator pos:start="25:30" pos:end="25:30">(</operator><name pos:start="25:31" pos:end="25:36"><name pos:start="25:31" pos:end="25:33">buf</name><index pos:start="25:34" pos:end="25:36">[<expr pos:start="25:35" pos:end="25:35"><literal type="number" pos:start="25:35" pos:end="25:35">0</literal></expr>]</index></name> <operator pos:start="25:38" pos:end="25:39">==</operator> <literal type="char" pos:start="25:41" pos:end="25:43">'!'</literal> <operator pos:start="25:45" pos:end="25:46">&amp;&amp;</operator> <name pos:start="25:48" pos:end="25:53"><name pos:start="25:48" pos:end="25:50">buf</name><index pos:start="25:51" pos:end="25:53">[<expr pos:start="25:52" pos:end="25:52"><literal type="number" pos:start="25:52" pos:end="25:52">1</literal></expr>]</index></name> <operator pos:start="25:55" pos:end="25:56">==</operator> <literal type="char" pos:start="25:58" pos:end="25:60">':'</literal><operator pos:start="25:61" pos:end="25:61">)</operator></expr>)</condition> <block pos:start="25:64" pos:end="29:9">{<block_content>

            <comment type="block" pos:start="27:13" pos:end="27:31">/* skip comments */</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="29:11" pos:end="71:9">else if <condition pos:start="29:19" pos:end="29:52">(<expr pos:start="29:20" pos:end="29:51"><name pos:start="29:20" pos:end="29:41"><name pos:start="29:20" pos:end="29:26">section</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:41">format_header</name></name> <operator pos:start="29:43" pos:end="29:44">&amp;&amp;</operator> <operator pos:start="29:46" pos:end="29:46">!</operator><name pos:start="29:47" pos:end="29:51">order</name></expr>)</condition> <block pos:start="29:54" pos:end="71:9">{<block_content pos:start="31:13" pos:end="69:59">

            <expr_stmt pos:start="31:13" pos:end="31:49"><expr pos:start="31:13" pos:end="31:48"><name pos:start="31:13" pos:end="31:15">len</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:48"><name pos:start="31:19" pos:end="31:24">strlen</name><argument_list pos:start="31:25" pos:end="31:48">(<argument pos:start="31:26" pos:end="31:47"><expr pos:start="31:26" pos:end="31:47"><name pos:start="31:26" pos:end="31:47"><name pos:start="31:26" pos:end="31:32">section</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:47">format_header</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="33:13" pos:end="35:28"><if pos:start="33:13" pos:end="35:28">if <condition pos:start="33:16" pos:end="33:77">(<expr pos:start="33:17" pos:end="33:76"><call pos:start="33:17" pos:end="33:57"><name pos:start="33:17" pos:end="33:23">strncmp</name><argument_list pos:start="33:24" pos:end="33:57">(<argument pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><name pos:start="33:25" pos:end="33:27">buf</name></expr></argument>, <argument pos:start="33:30" pos:end="33:51"><expr pos:start="33:30" pos:end="33:51"><name pos:start="33:30" pos:end="33:51"><name pos:start="33:30" pos:end="33:36">section</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:51">format_header</name></name></expr></argument>, <argument pos:start="33:54" pos:end="33:56"><expr pos:start="33:54" pos:end="33:56"><name pos:start="33:54" pos:end="33:56">len</name></expr></argument>)</argument_list></call> <operator pos:start="33:59" pos:end="33:60">||</operator> <name pos:start="33:62" pos:end="33:69"><name pos:start="33:62" pos:end="33:64">buf</name><index pos:start="33:65" pos:end="33:69">[<expr pos:start="33:66" pos:end="33:68"><name pos:start="33:66" pos:end="33:68">len</name></expr>]</index></name> <operator pos:start="33:71" pos:end="33:72">!=</operator> <literal type="char" pos:start="33:74" pos:end="33:76">':'</literal></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:28"><block_content pos:start="35:17" pos:end="35:28">

                <return pos:start="35:17" pos:end="35:28">return <expr pos:start="35:24" pos:end="35:27"><name pos:start="35:24" pos:end="35:27">NULL</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:27"><expr pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:15">buf</name> <operator pos:start="37:17" pos:end="37:18">+=</operator> <name pos:start="37:20" pos:end="37:22">len</name> <operator pos:start="37:24" pos:end="37:24">+</operator> <literal type="number" pos:start="37:26" pos:end="37:26">1</literal></expr>;</expr_stmt>

            <while pos:start="39:13" pos:end="67:13">while <condition pos:start="39:19" pos:end="39:33">(<expr pos:start="39:20" pos:end="39:32"><operator pos:start="39:20" pos:end="39:20">!</operator><call pos:start="39:21" pos:end="39:32"><name pos:start="39:21" pos:end="39:26">is_eol</name><argument_list pos:start="39:27" pos:end="39:32">(<argument pos:start="39:28" pos:end="39:31"><expr pos:start="39:28" pos:end="39:31"><operator pos:start="39:28" pos:end="39:28">*</operator><name pos:start="39:29" pos:end="39:31">buf</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:35" pos:end="67:13">{<block_content pos:start="41:17" pos:end="65:64">

                <expr_stmt pos:start="41:17" pos:end="41:38"><expr pos:start="41:17" pos:end="41:37"><name pos:start="41:17" pos:end="41:19">buf</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <call pos:start="41:23" pos:end="41:37"><name pos:start="41:23" pos:end="41:32">skip_space</name><argument_list pos:start="41:33" pos:end="41:37">(<argument pos:start="41:34" pos:end="41:36"><expr pos:start="41:34" pos:end="41:36"><name pos:start="41:34" pos:end="41:36">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:45"><expr pos:start="43:17" pos:end="43:44"><name pos:start="43:17" pos:end="43:19">len</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <call pos:start="43:23" pos:end="43:44"><name pos:start="43:23" pos:end="43:29">strcspn</name><argument_list pos:start="43:30" pos:end="43:44">(<argument pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:33">buf</name></expr></argument>, <argument pos:start="43:36" pos:end="43:43"><expr pos:start="43:36" pos:end="43:43"><literal type="string" pos:start="43:36" pos:end="43:43">", \r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="45:17" pos:end="47:32"><if pos:start="45:17" pos:end="47:32">if <condition pos:start="45:20" pos:end="45:79">(<expr pos:start="45:21" pos:end="45:78"><operator pos:start="45:21" pos:end="45:21">!</operator><operator pos:start="45:22" pos:end="45:22">(</operator><name pos:start="45:23" pos:end="45:25">tmp</name> <operator pos:start="45:27" pos:end="45:27">=</operator> <call pos:start="45:29" pos:end="45:77"><name pos:start="45:29" pos:end="45:38">av_realloc</name><argument_list pos:start="45:39" pos:end="45:77">(<argument pos:start="45:40" pos:end="45:44"><expr pos:start="45:40" pos:end="45:44"><name pos:start="45:40" pos:end="45:44">order</name></expr></argument>, <argument pos:start="45:47" pos:end="45:76"><expr pos:start="45:47" pos:end="45:76"><operator pos:start="45:47" pos:end="45:47">(</operator><operator pos:start="45:48" pos:end="45:48">*</operator><name pos:start="45:49" pos:end="45:54">number</name> <operator pos:start="45:56" pos:end="45:56">+</operator> <literal type="number" pos:start="45:58" pos:end="45:58">1</literal><operator pos:start="45:59" pos:end="45:59">)</operator> <operator pos:start="45:61" pos:end="45:61">*</operator> <sizeof pos:start="45:63" pos:end="45:76">sizeof<argument_list pos:start="45:69" pos:end="45:76">(<argument pos:start="45:70" pos:end="45:75"><expr pos:start="45:70" pos:end="45:75"><operator pos:start="45:70" pos:end="45:70">*</operator><name pos:start="45:71" pos:end="45:75">order</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="45:78" pos:end="45:78">)</operator></expr>)</condition><block type="pseudo" pos:start="47:21" pos:end="47:32"><block_content pos:start="47:21" pos:end="47:32">

                    <return pos:start="47:21" pos:end="47:32">return <expr pos:start="47:28" pos:end="47:31"><name pos:start="47:28" pos:end="47:31">NULL</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:28"><expr pos:start="49:17" pos:end="49:27"><name pos:start="49:17" pos:end="49:21">order</name> <operator pos:start="49:23" pos:end="49:23">=</operator> <name pos:start="49:25" pos:end="49:27">tmp</name></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:36"><expr pos:start="51:17" pos:end="51:35"><name pos:start="51:17" pos:end="51:30"><name pos:start="51:17" pos:end="51:21">order</name><index pos:start="51:22" pos:end="51:30">[<expr pos:start="51:23" pos:end="51:29"><operator pos:start="51:23" pos:end="51:23">*</operator><name pos:start="51:24" pos:end="51:29">number</name></expr>]</index></name> <operator pos:start="51:32" pos:end="51:32">=</operator> <operator pos:start="51:34" pos:end="51:34">-</operator><literal type="number" pos:start="51:35" pos:end="51:35">1</literal></expr>;</expr_stmt>

                <for pos:start="53:17" pos:end="61:21">for <control pos:start="53:21" pos:end="53:55">(<init pos:start="53:22" pos:end="53:25"><expr pos:start="53:22" pos:end="53:24"><name pos:start="53:22" pos:end="53:22">i</name><operator pos:start="53:23" pos:end="53:23">=</operator><literal type="number" pos:start="53:24" pos:end="53:24">0</literal></expr>;</init> <condition pos:start="53:27" pos:end="53:50"><expr pos:start="53:27" pos:end="53:49"><name pos:start="53:27" pos:end="53:44"><name pos:start="53:27" pos:end="53:33">section</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:41">fields</name><index pos:start="53:42" pos:end="53:44">[<expr pos:start="53:43" pos:end="53:43"><name pos:start="53:43" pos:end="53:43">i</name></expr>]</index></name><operator pos:start="53:45" pos:end="53:45">.</operator><name pos:start="53:46" pos:end="53:49">name</name></expr>;</condition> <incr pos:start="53:52" pos:end="53:54"><expr pos:start="53:52" pos:end="53:54"><name pos:start="53:52" pos:end="53:52">i</name><operator pos:start="53:53" pos:end="53:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="55:21" pos:end="61:21"><block_content pos:start="55:21" pos:end="61:21">

                    <if_stmt pos:start="55:21" pos:end="61:21"><if pos:start="55:21" pos:end="61:21">if <condition pos:start="55:24" pos:end="55:68">(<expr pos:start="55:25" pos:end="55:67"><operator pos:start="55:25" pos:end="55:25">!</operator><call pos:start="55:26" pos:end="55:67"><name pos:start="55:26" pos:end="55:32">strncmp</name><argument_list pos:start="55:33" pos:end="55:67">(<argument pos:start="55:34" pos:end="55:36"><expr pos:start="55:34" pos:end="55:36"><name pos:start="55:34" pos:end="55:36">buf</name></expr></argument>, <argument pos:start="55:39" pos:end="55:61"><expr pos:start="55:39" pos:end="55:61"><name pos:start="55:39" pos:end="55:56"><name pos:start="55:39" pos:end="55:45">section</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:53">fields</name><index pos:start="55:54" pos:end="55:56">[<expr pos:start="55:55" pos:end="55:55"><name pos:start="55:55" pos:end="55:55">i</name></expr>]</index></name><operator pos:start="55:57" pos:end="55:57">.</operator><name pos:start="55:58" pos:end="55:61">name</name></expr></argument>, <argument pos:start="55:64" pos:end="55:66"><expr pos:start="55:64" pos:end="55:66"><name pos:start="55:64" pos:end="55:66">len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:70" pos:end="61:21">{<block_content pos:start="57:25" pos:end="59:30">

                        <expr_stmt pos:start="57:25" pos:end="57:43"><expr pos:start="57:25" pos:end="57:42"><name pos:start="57:25" pos:end="57:38"><name pos:start="57:25" pos:end="57:29">order</name><index pos:start="57:30" pos:end="57:38">[<expr pos:start="57:31" pos:end="57:37"><operator pos:start="57:31" pos:end="57:31">*</operator><name pos:start="57:32" pos:end="57:37">number</name></expr>]</index></name> <operator pos:start="57:40" pos:end="57:40">=</operator> <name pos:start="57:42" pos:end="57:42">i</name></expr>;</expr_stmt>

                        <break pos:start="59:25" pos:end="59:30">break;</break>

                    </block_content>}</block></if></if_stmt></block_content></block></for>

                <expr_stmt pos:start="63:17" pos:end="63:28"><expr pos:start="63:17" pos:end="63:27"><operator pos:start="63:17" pos:end="63:17">(</operator><operator pos:start="63:18" pos:end="63:18">*</operator><name pos:start="63:19" pos:end="63:24">number</name><operator pos:start="63:25" pos:end="63:25">)</operator><operator pos:start="63:26" pos:end="63:27">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:64"><expr pos:start="65:17" pos:end="65:63"><name pos:start="65:17" pos:end="65:19">buf</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <call pos:start="65:23" pos:end="65:63"><name pos:start="65:23" pos:end="65:32">skip_space</name><argument_list pos:start="65:33" pos:end="65:63">(<argument pos:start="65:34" pos:end="65:62"><expr pos:start="65:34" pos:end="65:62"><name pos:start="65:34" pos:end="65:36">buf</name> <operator pos:start="65:38" pos:end="65:38">+</operator> <name pos:start="65:40" pos:end="65:42">len</name> <operator pos:start="65:44" pos:end="65:44">+</operator> <operator pos:start="65:46" pos:end="65:46">(</operator><name pos:start="65:47" pos:end="65:54"><name pos:start="65:47" pos:end="65:49">buf</name><index pos:start="65:50" pos:end="65:54">[<expr pos:start="65:51" pos:end="65:53"><name pos:start="65:51" pos:end="65:53">len</name></expr>]</index></name> <operator pos:start="65:56" pos:end="65:57">==</operator> <literal type="char" pos:start="65:59" pos:end="65:61">','</literal><operator pos:start="65:62" pos:end="65:62">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>

            <expr_stmt pos:start="69:13" pos:end="69:59"><expr pos:start="69:13" pos:end="69:58"><name pos:start="69:13" pos:end="69:50"><name pos:start="69:13" pos:end="69:15">ctx</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:28">field_order</name><index pos:start="69:29" pos:end="69:50">[<expr pos:start="69:30" pos:end="69:49"><name pos:start="69:30" pos:end="69:49"><name pos:start="69:30" pos:end="69:32">ctx</name><operator pos:start="69:33" pos:end="69:34">-&gt;</operator><name pos:start="69:35" pos:end="69:49">current_section</name></name></expr>]</index></name> <operator pos:start="69:52" pos:end="69:52">=</operator> <name pos:start="69:54" pos:end="69:58">order</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="71:11" pos:end="107:9">else if <condition pos:start="71:19" pos:end="71:42">(<expr pos:start="71:20" pos:end="71:41"><name pos:start="71:20" pos:end="71:41"><name pos:start="71:20" pos:end="71:26">section</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:41">fields_header</name></name></expr>)</condition> <block pos:start="71:44" pos:end="107:9">{<block_content pos:start="73:13" pos:end="105:13">

            <expr_stmt pos:start="73:13" pos:end="73:49"><expr pos:start="73:13" pos:end="73:48"><name pos:start="73:13" pos:end="73:15">len</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <call pos:start="73:19" pos:end="73:48"><name pos:start="73:19" pos:end="73:24">strlen</name><argument_list pos:start="73:25" pos:end="73:48">(<argument pos:start="73:26" pos:end="73:47"><expr pos:start="73:26" pos:end="73:47"><name pos:start="73:26" pos:end="73:47"><name pos:start="73:26" pos:end="73:32">section</name><operator pos:start="73:33" pos:end="73:34">-&gt;</operator><name pos:start="73:35" pos:end="73:47">fields_header</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="75:13" pos:end="105:13"><if pos:start="75:13" pos:end="105:13">if <condition pos:start="75:16" pos:end="75:78">(<expr pos:start="75:17" pos:end="75:77"><operator pos:start="75:17" pos:end="75:17">!</operator><call pos:start="75:18" pos:end="75:58"><name pos:start="75:18" pos:end="75:24">strncmp</name><argument_list pos:start="75:25" pos:end="75:58">(<argument pos:start="75:26" pos:end="75:28"><expr pos:start="75:26" pos:end="75:28"><name pos:start="75:26" pos:end="75:28">buf</name></expr></argument>, <argument pos:start="75:31" pos:end="75:52"><expr pos:start="75:31" pos:end="75:52"><name pos:start="75:31" pos:end="75:52"><name pos:start="75:31" pos:end="75:37">section</name><operator pos:start="75:38" pos:end="75:39">-&gt;</operator><name pos:start="75:40" pos:end="75:52">fields_header</name></name></expr></argument>, <argument pos:start="75:55" pos:end="75:57"><expr pos:start="75:55" pos:end="75:57"><name pos:start="75:55" pos:end="75:57">len</name></expr></argument>)</argument_list></call> <operator pos:start="75:60" pos:end="75:61">&amp;&amp;</operator> <name pos:start="75:63" pos:end="75:70"><name pos:start="75:63" pos:end="75:65">buf</name><index pos:start="75:66" pos:end="75:70">[<expr pos:start="75:67" pos:end="75:69"><name pos:start="75:67" pos:end="75:69">len</name></expr>]</index></name> <operator pos:start="75:72" pos:end="75:73">==</operator> <literal type="char" pos:start="75:75" pos:end="75:77">':'</literal></expr>)</condition> <block pos:start="75:80" pos:end="105:13">{<block_content pos:start="77:17" pos:end="103:17">

                <decl_stmt pos:start="77:17" pos:end="77:71"><decl pos:start="77:17" pos:end="77:28"><type pos:start="77:17" pos:end="77:25"><name pos:start="77:17" pos:end="77:23">uint8_t</name> <modifier pos:start="77:25" pos:end="77:25">*</modifier></type><name pos:start="77:26" pos:end="77:28">ptr</name></decl>, <decl pos:start="77:31" pos:end="77:70"><type ref="prev" pos:start="77:17" pos:end="77:25"><modifier pos:start="77:31" pos:end="77:31">*</modifier></type><name pos:start="77:32" pos:end="77:41">struct_ptr</name> <init pos:start="77:43" pos:end="77:70">= <expr pos:start="77:45" pos:end="77:70"><call pos:start="77:45" pos:end="77:70"><name pos:start="77:45" pos:end="77:65">realloc_section_array</name><argument_list pos:start="77:66" pos:end="77:70">(<argument pos:start="77:67" pos:end="77:69"><expr pos:start="77:67" pos:end="77:69"><name pos:start="77:67" pos:end="77:69">ctx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="79:17" pos:end="79:46"><if pos:start="79:17" pos:end="79:46">if <condition pos:start="79:20" pos:end="79:32">(<expr pos:start="79:21" pos:end="79:31"><operator pos:start="79:21" pos:end="79:21">!</operator><name pos:start="79:22" pos:end="79:31">struct_ptr</name></expr>)</condition><block type="pseudo" pos:start="79:35" pos:end="79:46"><block_content pos:start="79:35" pos:end="79:46">  <return pos:start="79:35" pos:end="79:46">return <expr pos:start="79:42" pos:end="79:45"><name pos:start="79:42" pos:end="79:45">NULL</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:31"><expr pos:start="81:17" pos:end="81:30"><name pos:start="81:17" pos:end="81:19">buf</name> <operator pos:start="81:21" pos:end="81:22">+=</operator> <name pos:start="81:24" pos:end="81:26">len</name> <operator pos:start="81:28" pos:end="81:28">+</operator> <literal type="number" pos:start="81:30" pos:end="81:30">1</literal></expr>;</expr_stmt>

                <for pos:start="83:17" pos:end="103:17">for <control pos:start="83:21" pos:end="83:60">(<init pos:start="83:22" pos:end="83:25"><expr pos:start="83:22" pos:end="83:24"><name pos:start="83:22" pos:end="83:22">i</name><operator pos:start="83:23" pos:end="83:23">=</operator><literal type="number" pos:start="83:24" pos:end="83:24">0</literal></expr>;</init> <condition pos:start="83:27" pos:end="83:55"><expr pos:start="83:27" pos:end="83:54"><operator pos:start="83:27" pos:end="83:27">!</operator><call pos:start="83:28" pos:end="83:39"><name pos:start="83:28" pos:end="83:33">is_eol</name><argument_list pos:start="83:34" pos:end="83:39">(<argument pos:start="83:35" pos:end="83:38"><expr pos:start="83:35" pos:end="83:38"><operator pos:start="83:35" pos:end="83:35">*</operator><name pos:start="83:36" pos:end="83:38">buf</name></expr></argument>)</argument_list></call> <operator pos:start="83:41" pos:end="83:42">&amp;&amp;</operator> <name pos:start="83:44" pos:end="83:44">i</name> <operator pos:start="83:46" pos:end="83:46">&lt;</operator> <operator pos:start="83:48" pos:end="83:48">*</operator><name pos:start="83:49" pos:end="83:54">number</name></expr>;</condition> <incr pos:start="83:57" pos:end="83:59"><expr pos:start="83:57" pos:end="83:59"><name pos:start="83:57" pos:end="83:57">i</name><operator pos:start="83:58" pos:end="83:59">++</operator></expr></incr>)</control> <block pos:start="83:62" pos:end="103:17">{<block_content pos:start="85:21" pos:end="101:56">

                    <decl_stmt pos:start="85:21" pos:end="85:48"><decl pos:start="85:21" pos:end="85:47"><type pos:start="85:21" pos:end="85:23"><name pos:start="85:21" pos:end="85:23">int</name></type> <name pos:start="85:25" pos:end="85:28">last</name> <init pos:start="85:30" pos:end="85:47">= <expr pos:start="85:32" pos:end="85:47"><name pos:start="85:32" pos:end="85:32">i</name> <operator pos:start="85:34" pos:end="85:35">==</operator> <operator pos:start="85:37" pos:end="85:37">*</operator><name pos:start="85:38" pos:end="85:43">number</name> <operator pos:start="85:45" pos:end="85:45">-</operator> <literal type="number" pos:start="85:47" pos:end="85:47">1</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="87:21" pos:end="87:42"><expr pos:start="87:21" pos:end="87:41"><name pos:start="87:21" pos:end="87:23">buf</name> <operator pos:start="87:25" pos:end="87:25">=</operator> <call pos:start="87:27" pos:end="87:41"><name pos:start="87:27" pos:end="87:36">skip_space</name><argument_list pos:start="87:37" pos:end="87:41">(<argument pos:start="87:38" pos:end="87:40"><expr pos:start="87:38" pos:end="87:40"><name pos:start="87:38" pos:end="87:40">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="89:21" pos:end="89:64"><expr pos:start="89:21" pos:end="89:63"><name pos:start="89:21" pos:end="89:23">len</name> <operator pos:start="89:25" pos:end="89:25">=</operator> <call pos:start="89:27" pos:end="89:63"><name pos:start="89:27" pos:end="89:33">strcspn</name><argument_list pos:start="89:34" pos:end="89:63">(<argument pos:start="89:35" pos:end="89:37"><expr pos:start="89:35" pos:end="89:37"><name pos:start="89:35" pos:end="89:37">buf</name></expr></argument>, <argument pos:start="89:40" pos:end="89:62"><expr pos:start="89:40" pos:end="89:62"><ternary pos:start="89:40" pos:end="89:62"><condition pos:start="89:40" pos:end="89:45"><expr pos:start="89:40" pos:end="89:43"><name pos:start="89:40" pos:end="89:43">last</name></expr> ?</condition><then pos:start="89:47" pos:end="89:52"> <expr pos:start="89:47" pos:end="89:52"><literal type="string" pos:start="89:47" pos:end="89:52">"\r\n"</literal></expr> </then><else pos:start="89:54" pos:end="89:62">: <expr pos:start="89:56" pos:end="89:62"><literal type="string" pos:start="89:56" pos:end="89:62">",\r\n"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="91:21" pos:end="99:21"><if pos:start="91:21" pos:end="99:21">if <condition pos:start="91:24" pos:end="91:38">(<expr pos:start="91:25" pos:end="91:37"><name pos:start="91:25" pos:end="91:32"><name pos:start="91:25" pos:end="91:29">order</name><index pos:start="91:30" pos:end="91:32">[<expr pos:start="91:31" pos:end="91:31"><name pos:start="91:31" pos:end="91:31">i</name></expr>]</index></name> <operator pos:start="91:34" pos:end="91:35">&gt;=</operator> <literal type="number" pos:start="91:37" pos:end="91:37">0</literal></expr>)</condition> <block pos:start="91:40" pos:end="99:21">{<block_content pos:start="93:25" pos:end="97:58">

                        <decl_stmt pos:start="93:25" pos:end="93:75"><decl pos:start="93:25" pos:end="93:74"><type pos:start="93:25" pos:end="93:36"><name pos:start="93:25" pos:end="93:36">ASSFieldType</name></type> <name pos:start="93:38" pos:end="93:41">type</name> <init pos:start="93:43" pos:end="93:74">= <expr pos:start="93:45" pos:end="93:74"><name pos:start="93:45" pos:end="93:69"><name pos:start="93:45" pos:end="93:51">section</name><operator pos:start="93:52" pos:end="93:53">-&gt;</operator><name pos:start="93:54" pos:end="93:59">fields</name><index pos:start="93:60" pos:end="93:69">[<expr pos:start="93:61" pos:end="93:68"><name pos:start="93:61" pos:end="93:68"><name pos:start="93:61" pos:end="93:65">order</name><index pos:start="93:66" pos:end="93:68">[<expr pos:start="93:67" pos:end="93:67"><name pos:start="93:67" pos:end="93:67">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="93:70" pos:end="93:70">.</operator><name pos:start="93:71" pos:end="93:74">type</name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="95:25" pos:end="95:76"><expr pos:start="95:25" pos:end="95:75"><name pos:start="95:25" pos:end="95:27">ptr</name> <operator pos:start="95:29" pos:end="95:29">=</operator> <name pos:start="95:31" pos:end="95:40">struct_ptr</name> <operator pos:start="95:42" pos:end="95:42">+</operator> <name pos:start="95:44" pos:end="95:68"><name pos:start="95:44" pos:end="95:50">section</name><operator pos:start="95:51" pos:end="95:52">-&gt;</operator><name pos:start="95:53" pos:end="95:58">fields</name><index pos:start="95:59" pos:end="95:68">[<expr pos:start="95:60" pos:end="95:67"><name pos:start="95:60" pos:end="95:67"><name pos:start="95:60" pos:end="95:64">order</name><index pos:start="95:65" pos:end="95:67">[<expr pos:start="95:66" pos:end="95:66"><name pos:start="95:66" pos:end="95:66">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="95:69" pos:end="95:69">.</operator><name pos:start="95:70" pos:end="95:75">offset</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="97:25" pos:end="97:58"><expr pos:start="97:25" pos:end="97:57"><name pos:start="97:25" pos:end="97:42"><name pos:start="97:25" pos:end="97:36">convert_func</name><index pos:start="97:37" pos:end="97:42">[<expr pos:start="97:38" pos:end="97:41"><name pos:start="97:38" pos:end="97:41">type</name></expr>]</index></name><operator pos:start="97:43" pos:end="97:43">(</operator><name pos:start="97:44" pos:end="97:46">ptr</name><operator pos:start="97:47" pos:end="97:47">,</operator> <name pos:start="97:49" pos:end="97:51">buf</name><operator pos:start="97:52" pos:end="97:52">,</operator> <name pos:start="97:54" pos:end="97:56">len</name><operator pos:start="97:57" pos:end="97:57">)</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="101:21" pos:end="101:56"><expr pos:start="101:21" pos:end="101:55"><name pos:start="101:21" pos:end="101:23">buf</name> <operator pos:start="101:25" pos:end="101:25">=</operator> <call pos:start="101:27" pos:end="101:55"><name pos:start="101:27" pos:end="101:36">skip_space</name><argument_list pos:start="101:37" pos:end="101:55">(<argument pos:start="101:38" pos:end="101:54"><expr pos:start="101:38" pos:end="101:54"><name pos:start="101:38" pos:end="101:40">buf</name> <operator pos:start="101:42" pos:end="101:42">+</operator> <name pos:start="101:44" pos:end="101:46">len</name> <operator pos:start="101:48" pos:end="101:48">+</operator> <operator pos:start="101:50" pos:end="101:50">!</operator><name pos:start="101:51" pos:end="101:54">last</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="107:11" pos:end="133:9">else <block pos:start="107:16" pos:end="133:9">{<block_content pos:start="109:13" pos:end="131:13">

            <expr_stmt pos:start="109:13" pos:end="109:40"><expr pos:start="109:13" pos:end="109:39"><name pos:start="109:13" pos:end="109:15">len</name> <operator pos:start="109:17" pos:end="109:17">=</operator> <call pos:start="109:19" pos:end="109:39"><name pos:start="109:19" pos:end="109:25">strcspn</name><argument_list pos:start="109:26" pos:end="109:39">(<argument pos:start="109:27" pos:end="109:29"><expr pos:start="109:27" pos:end="109:29"><name pos:start="109:27" pos:end="109:29">buf</name></expr></argument>, <argument pos:start="109:32" pos:end="109:38"><expr pos:start="109:32" pos:end="109:38"><literal type="string" pos:start="109:32" pos:end="109:38">":\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="111:13" pos:end="131:13"><if pos:start="111:13" pos:end="131:13">if <condition pos:start="111:16" pos:end="111:32">(<expr pos:start="111:17" pos:end="111:31"><name pos:start="111:17" pos:end="111:24"><name pos:start="111:17" pos:end="111:19">buf</name><index pos:start="111:20" pos:end="111:24">[<expr pos:start="111:21" pos:end="111:23"><name pos:start="111:21" pos:end="111:23">len</name></expr>]</index></name> <operator pos:start="111:26" pos:end="111:27">==</operator> <literal type="char" pos:start="111:29" pos:end="111:31">':'</literal></expr>)</condition> <block pos:start="111:34" pos:end="131:13">{<block_content pos:start="113:17" pos:end="129:21">

                <for pos:start="113:17" pos:end="129:21">for <control pos:start="113:21" pos:end="113:55">(<init pos:start="113:22" pos:end="113:25"><expr pos:start="113:22" pos:end="113:24"><name pos:start="113:22" pos:end="113:22">i</name><operator pos:start="113:23" pos:end="113:23">=</operator><literal type="number" pos:start="113:24" pos:end="113:24">0</literal></expr>;</init> <condition pos:start="113:27" pos:end="113:50"><expr pos:start="113:27" pos:end="113:49"><name pos:start="113:27" pos:end="113:44"><name pos:start="113:27" pos:end="113:33">section</name><operator pos:start="113:34" pos:end="113:35">-&gt;</operator><name pos:start="113:36" pos:end="113:41">fields</name><index pos:start="113:42" pos:end="113:44">[<expr pos:start="113:43" pos:end="113:43"><name pos:start="113:43" pos:end="113:43">i</name></expr>]</index></name><operator pos:start="113:45" pos:end="113:45">.</operator><name pos:start="113:46" pos:end="113:49">name</name></expr>;</condition> <incr pos:start="113:52" pos:end="113:54"><expr pos:start="113:52" pos:end="113:54"><name pos:start="113:52" pos:end="113:52">i</name><operator pos:start="113:53" pos:end="113:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="115:21" pos:end="129:21"><block_content pos:start="115:21" pos:end="129:21">

                    <if_stmt pos:start="115:21" pos:end="129:21"><if pos:start="115:21" pos:end="129:21">if <condition pos:start="115:24" pos:end="115:68">(<expr pos:start="115:25" pos:end="115:67"><operator pos:start="115:25" pos:end="115:25">!</operator><call pos:start="115:26" pos:end="115:67"><name pos:start="115:26" pos:end="115:32">strncmp</name><argument_list pos:start="115:33" pos:end="115:67">(<argument pos:start="115:34" pos:end="115:36"><expr pos:start="115:34" pos:end="115:36"><name pos:start="115:34" pos:end="115:36">buf</name></expr></argument>, <argument pos:start="115:39" pos:end="115:61"><expr pos:start="115:39" pos:end="115:61"><name pos:start="115:39" pos:end="115:56"><name pos:start="115:39" pos:end="115:45">section</name><operator pos:start="115:46" pos:end="115:47">-&gt;</operator><name pos:start="115:48" pos:end="115:53">fields</name><index pos:start="115:54" pos:end="115:56">[<expr pos:start="115:55" pos:end="115:55"><name pos:start="115:55" pos:end="115:55">i</name></expr>]</index></name><operator pos:start="115:57" pos:end="115:57">.</operator><name pos:start="115:58" pos:end="115:61">name</name></expr></argument>, <argument pos:start="115:64" pos:end="115:66"><expr pos:start="115:64" pos:end="115:66"><name pos:start="115:64" pos:end="115:66">len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="115:70" pos:end="129:21">{<block_content pos:start="117:25" pos:end="127:30">

                        <decl_stmt pos:start="117:25" pos:end="117:68"><decl pos:start="117:25" pos:end="117:67"><type pos:start="117:25" pos:end="117:36"><name pos:start="117:25" pos:end="117:36">ASSFieldType</name></type> <name pos:start="117:38" pos:end="117:41">type</name> <init pos:start="117:43" pos:end="117:67">= <expr pos:start="117:45" pos:end="117:67"><name pos:start="117:45" pos:end="117:62"><name pos:start="117:45" pos:end="117:51">section</name><operator pos:start="117:52" pos:end="117:53">-&gt;</operator><name pos:start="117:54" pos:end="117:59">fields</name><index pos:start="117:60" pos:end="117:62">[<expr pos:start="117:61" pos:end="117:61"><name pos:start="117:61" pos:end="117:61">i</name></expr>]</index></name><operator pos:start="117:63" pos:end="117:63">.</operator><name pos:start="117:64" pos:end="117:67">type</name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="119:25" pos:end="119:78"><decl pos:start="119:25" pos:end="119:77"><type pos:start="119:25" pos:end="119:33"><name pos:start="119:25" pos:end="119:31">uint8_t</name> <modifier pos:start="119:33" pos:end="119:33">*</modifier></type><name pos:start="119:34" pos:end="119:36">ptr</name> <init pos:start="119:38" pos:end="119:77">= <expr pos:start="119:40" pos:end="119:77"><operator pos:start="119:40" pos:end="119:40">(</operator><name pos:start="119:41" pos:end="119:47">uint8_t</name> <operator pos:start="119:49" pos:end="119:49">*</operator><operator pos:start="119:50" pos:end="119:50">)</operator><operator pos:start="119:51" pos:end="119:51">&amp;</operator><name pos:start="119:52" pos:end="119:59"><name pos:start="119:52" pos:end="119:54">ctx</name><operator pos:start="119:55" pos:end="119:56">-&gt;</operator><name pos:start="119:57" pos:end="119:59">ass</name></name> <operator pos:start="119:61" pos:end="119:61">+</operator> <name pos:start="119:63" pos:end="119:77"><name pos:start="119:63" pos:end="119:69">section</name><operator pos:start="119:70" pos:end="119:71">-&gt;</operator><name pos:start="119:72" pos:end="119:77">offset</name></name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="121:25" pos:end="121:57"><expr pos:start="121:25" pos:end="121:56"><name pos:start="121:25" pos:end="121:27">ptr</name> <operator pos:start="121:29" pos:end="121:30">+=</operator> <name pos:start="121:32" pos:end="121:49"><name pos:start="121:32" pos:end="121:38">section</name><operator pos:start="121:39" pos:end="121:40">-&gt;</operator><name pos:start="121:41" pos:end="121:46">fields</name><index pos:start="121:47" pos:end="121:49">[<expr pos:start="121:48" pos:end="121:48"><name pos:start="121:48" pos:end="121:48">i</name></expr>]</index></name><operator pos:start="121:50" pos:end="121:50">.</operator><name pos:start="121:51" pos:end="121:56">offset</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="123:25" pos:end="123:56"><expr pos:start="123:25" pos:end="123:55"><name pos:start="123:25" pos:end="123:27">buf</name> <operator pos:start="123:29" pos:end="123:29">=</operator> <call pos:start="123:31" pos:end="123:55"><name pos:start="123:31" pos:end="123:40">skip_space</name><argument_list pos:start="123:41" pos:end="123:55">(<argument pos:start="123:42" pos:end="123:54"><expr pos:start="123:42" pos:end="123:54"><name pos:start="123:42" pos:end="123:44">buf</name> <operator pos:start="123:46" pos:end="123:46">+</operator> <name pos:start="123:48" pos:end="123:50">len</name> <operator pos:start="123:52" pos:end="123:52">+</operator> <literal type="number" pos:start="123:54" pos:end="123:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="125:25" pos:end="125:75"><expr pos:start="125:25" pos:end="125:74"><name pos:start="125:25" pos:end="125:42"><name pos:start="125:25" pos:end="125:36">convert_func</name><index pos:start="125:37" pos:end="125:42">[<expr pos:start="125:38" pos:end="125:41"><name pos:start="125:38" pos:end="125:41">type</name></expr>]</index></name><operator pos:start="125:43" pos:end="125:43">(</operator><name pos:start="125:44" pos:end="125:46">ptr</name><operator pos:start="125:47" pos:end="125:47">,</operator> <name pos:start="125:49" pos:end="125:51">buf</name><operator pos:start="125:52" pos:end="125:52">,</operator> <call pos:start="125:54" pos:end="125:73"><name pos:start="125:54" pos:end="125:60">strcspn</name><argument_list pos:start="125:61" pos:end="125:73">(<argument pos:start="125:62" pos:end="125:64"><expr pos:start="125:62" pos:end="125:64"><name pos:start="125:62" pos:end="125:64">buf</name></expr></argument>, <argument pos:start="125:67" pos:end="125:72"><expr pos:start="125:67" pos:end="125:72"><literal type="string" pos:start="125:67" pos:end="125:72">"\r\n"</literal></expr></argument>)</argument_list></call><operator pos:start="125:74" pos:end="125:74">)</operator></expr>;</expr_stmt>

                        <break pos:start="127:25" pos:end="127:30">break;</break>

                    </block_content>}</block></if></if_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:34"><expr pos:start="135:9" pos:end="135:33"><name pos:start="135:9" pos:end="135:11">buf</name> <operator pos:start="135:13" pos:end="135:14">+=</operator> <call pos:start="135:16" pos:end="135:33"><name pos:start="135:16" pos:end="135:22">strcspn</name><argument_list pos:start="135:23" pos:end="135:33">(<argument pos:start="135:24" pos:end="135:26"><expr pos:start="135:24" pos:end="135:26"><name pos:start="135:24" pos:end="135:26">buf</name></expr></argument>, <argument pos:start="135:29" pos:end="135:32"><expr pos:start="135:29" pos:end="135:32"><literal type="string" pos:start="135:29" pos:end="135:32">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:22"><expr pos:start="137:9" pos:end="137:21"><name pos:start="137:9" pos:end="137:11">buf</name> <operator pos:start="137:13" pos:end="137:14">+=</operator> <operator pos:start="137:16" pos:end="137:16">!</operator><operator pos:start="137:17" pos:end="137:17">!</operator><operator pos:start="137:18" pos:end="137:18">*</operator><name pos:start="137:19" pos:end="137:21">buf</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="141:5" pos:end="141:15">return <expr pos:start="141:12" pos:end="141:14"><name pos:start="141:12" pos:end="141:14">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
