<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25062.c" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="225:1"><decl pos:start="1:1" pos:end="225:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name> <name pos:start="1:12" pos:end="1:17">RENAME</name></type><argument_list pos:start="1:18" pos:end="1:37">(<argument pos:start="1:19" pos:end="1:36"><expr pos:start="1:19" pos:end="1:36"><name pos:start="1:19" pos:end="1:36">epzs_motion_search</name></expr></argument>)</argument_list><argument_list pos:start="1:38" pos:end="9:74">(<argument pos:start="1:39" pos:end="1:56"><expr pos:start="1:39" pos:end="1:56"><name pos:start="1:39" pos:end="1:52">MpegEncContext</name> <operator pos:start="1:54" pos:end="1:54">*</operator> <name pos:start="1:56" pos:end="1:56">s</name></expr></argument>,

                             <argument pos:start="3:30" pos:end="3:40"><expr pos:start="3:30" pos:end="3:40"><name pos:start="3:30" pos:end="3:32">int</name> <operator pos:start="3:34" pos:end="3:34">*</operator><name pos:start="3:35" pos:end="3:40">mx_ptr</name></expr></argument>, <argument pos:start="3:43" pos:end="3:53"><expr pos:start="3:43" pos:end="3:53"><name pos:start="3:43" pos:end="3:45">int</name> <operator pos:start="3:47" pos:end="3:47">*</operator><name pos:start="3:48" pos:end="3:53">my_ptr</name></expr></argument>,

                             <argument pos:start="5:30" pos:end="5:41"><expr pos:start="5:30" pos:end="5:41"><name pos:start="5:30" pos:end="5:32">int</name> <name pos:start="5:34" pos:end="5:41"><name pos:start="5:34" pos:end="5:34">P</name><index pos:start="5:35" pos:end="5:38">[<expr pos:start="5:36" pos:end="5:37"><literal type="number" pos:start="5:36" pos:end="5:37">10</literal></expr>]</index><index pos:start="5:39" pos:end="5:41">[<expr pos:start="5:40" pos:end="5:40"><literal type="number" pos:start="5:40" pos:end="5:40">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="5:44" pos:end="5:53"><expr pos:start="5:44" pos:end="5:53"><name pos:start="5:44" pos:end="5:46">int</name> <name pos:start="5:48" pos:end="5:53">pred_x</name></expr></argument>, <argument pos:start="5:56" pos:end="5:65"><expr pos:start="5:56" pos:end="5:65"><name pos:start="5:56" pos:end="5:58">int</name> <name pos:start="5:60" pos:end="5:65">pred_y</name></expr></argument>, <argument pos:start="5:68" pos:end="5:87"><expr pos:start="5:68" pos:end="5:87"><name pos:start="5:68" pos:end="5:74">uint8_t</name> <operator pos:start="5:76" pos:end="5:76">*</operator><name pos:start="5:77" pos:end="5:87"><name pos:start="5:77" pos:end="5:84">src_data</name><index pos:start="5:85" pos:end="5:87">[<expr pos:start="5:86" pos:end="5:86"><literal type="number" pos:start="5:86" pos:end="5:86">3</literal></expr>]</index></name></expr></argument>, 

                             <argument pos:start="7:30" pos:end="7:49"><expr pos:start="7:30" pos:end="7:49"><name pos:start="7:30" pos:end="7:36">uint8_t</name> <operator pos:start="7:38" pos:end="7:38">*</operator><name pos:start="7:39" pos:end="7:49"><name pos:start="7:39" pos:end="7:46">ref_data</name><index pos:start="7:47" pos:end="7:49">[<expr pos:start="7:48" pos:end="7:48"><literal type="number" pos:start="7:48" pos:end="7:48">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="7:52" pos:end="7:61"><expr pos:start="7:52" pos:end="7:61"><name pos:start="7:52" pos:end="7:54">int</name> <name pos:start="7:56" pos:end="7:61">stride</name></expr></argument>, <argument pos:start="7:64" pos:end="7:75"><expr pos:start="7:64" pos:end="7:75"><name pos:start="7:64" pos:end="7:66">int</name> <name pos:start="7:68" pos:end="7:75">uvstride</name></expr></argument>, <argument pos:start="7:78" pos:end="7:98"><expr pos:start="7:78" pos:end="7:98"><call pos:start="7:78" pos:end="7:95"><name pos:start="7:78" pos:end="7:84">int16_t</name> <argument_list pos:start="7:86" pos:end="7:95">(<argument pos:start="7:87" pos:end="7:94"><expr pos:start="7:87" pos:end="7:94"><operator pos:start="7:87" pos:end="7:87">*</operator><name pos:start="7:88" pos:end="7:94">last_mv</name></expr></argument>)</argument_list></call><index pos:start="7:96" pos:end="7:98">[<expr pos:start="7:97" pos:end="7:97"><literal type="number" pos:start="7:97" pos:end="7:97">2</literal></expr>]</index></expr></argument>, 

                             <argument pos:start="9:30" pos:end="9:45"><expr pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:32">int</name> <name pos:start="9:34" pos:end="9:45">ref_mv_scale</name></expr></argument>, <argument pos:start="9:48" pos:end="9:73"><expr pos:start="9:48" pos:end="9:73"><name pos:start="9:48" pos:end="9:54">uint8_t</name> <operator pos:start="9:56" pos:end="9:56">*</operator> <specifier pos:start="9:58" pos:end="9:62">const</specifier> <name pos:start="9:64" pos:end="9:73">mv_penalty</name></expr></argument>)</argument_list>

<block pos:start="11:1" pos:end="225:1">{<block_content pos:start="13:5" pos:end="223:16">

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:12">best</name><index pos:start="13:13" pos:end="13:15">[<expr pos:start="13:14" pos:end="13:14"><literal type="number" pos:start="13:14" pos:end="13:14">2</literal></expr>]</index></name><init pos:start="13:16" pos:end="13:22">=<expr pos:start="13:17" pos:end="13:22"><block pos:start="13:17" pos:end="13:22">{<expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr>, <expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">d</name></decl>, <decl pos:start="15:12" pos:end="15:15"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:15">dmin</name></decl>;</decl_stmt> 

    <decl_stmt pos:start="17:5" pos:end="17:41"><decl pos:start="17:5" pos:end="17:40"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:19">shift</name><init pos:start="17:20" pos:end="17:40">= <expr pos:start="17:22" pos:end="17:40"><literal type="number" pos:start="17:22" pos:end="17:23">1</literal><operator pos:start="17:23" pos:end="17:23">+</operator><name pos:start="17:24" pos:end="17:40"><name pos:start="17:24" pos:end="17:24">s</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:40">quarter_sample</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:29"><decl pos:start="19:5" pos:end="19:28"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">uint32_t</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:17">map</name><init pos:start="19:18" pos:end="19:28">= <expr pos:start="19:20" pos:end="19:28"><name pos:start="19:20" pos:end="19:28"><name pos:start="19:20" pos:end="19:20">s</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:24">me</name><operator pos:start="19:25" pos:end="19:25">.</operator><name pos:start="19:26" pos:end="19:28">map</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:22">map_generation</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:51"><decl pos:start="23:5" pos:end="23:50"><type pos:start="23:5" pos:end="23:13"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:13">int</name></type> <name pos:start="23:15" pos:end="23:28">penalty_factor</name><init pos:start="23:29" pos:end="23:50">= <expr pos:start="23:31" pos:end="23:50"><name pos:start="23:31" pos:end="23:50"><name pos:start="23:31" pos:end="23:31">s</name><operator pos:start="23:32" pos:end="23:33">-&gt;</operator><name pos:start="23:34" pos:end="23:35">me</name><operator pos:start="23:36" pos:end="23:36">.</operator><name pos:start="23:37" pos:end="23:50">penalty_factor</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:13"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:13">int</name></type> <name pos:start="25:15" pos:end="25:18">size</name><init pos:start="25:19" pos:end="25:20">=<expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:19"><decl pos:start="27:5" pos:end="27:18"><type pos:start="27:5" pos:end="27:13"><specifier pos:start="27:5" pos:end="27:9">const</specifier> <name pos:start="27:11" pos:end="27:13">int</name></type> <name pos:start="27:15" pos:end="27:15">h</name><init pos:start="27:16" pos:end="27:18">=<expr pos:start="27:17" pos:end="27:18"><literal type="number" pos:start="27:17" pos:end="27:18">16</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:42"><decl pos:start="29:5" pos:end="29:41"><type pos:start="29:5" pos:end="29:13"><specifier pos:start="29:5" pos:end="29:9">const</specifier> <name pos:start="29:11" pos:end="29:13">int</name></type> <name pos:start="29:15" pos:end="29:27">ref_mv_stride</name><init pos:start="29:28" pos:end="29:41">= <expr pos:start="29:30" pos:end="29:41"><name pos:start="29:30" pos:end="29:41"><name pos:start="29:30" pos:end="29:30">s</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:41">mb_stride</name></name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="29:44" pos:end="29:63">//pass as arg  FIXME</comment>

    <decl_stmt pos:start="31:5" pos:end="31:57"><decl pos:start="31:5" pos:end="31:56"><type pos:start="31:5" pos:end="31:13"><specifier pos:start="31:5" pos:end="31:9">const</specifier> <name pos:start="31:11" pos:end="31:13">int</name></type> <name pos:start="31:15" pos:end="31:23">ref_mv_xy</name><init pos:start="31:24" pos:end="31:56">= <expr pos:start="31:26" pos:end="31:56"><name pos:start="31:26" pos:end="31:32"><name pos:start="31:26" pos:end="31:26">s</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:32">mb_x</name></name> <operator pos:start="31:34" pos:end="31:34">+</operator> <name pos:start="31:36" pos:end="31:42"><name pos:start="31:36" pos:end="31:36">s</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:42">mb_y</name></name><operator pos:start="31:43" pos:end="31:43">*</operator><name pos:start="31:44" pos:end="31:56">ref_mv_stride</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="31:59" pos:end="31:94">//add to last_mv beforepassing FIXME</comment>

    <decl_stmt pos:start="33:5" pos:end="33:32"><decl pos:start="33:5" pos:end="33:19"><type pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:15">me_cmp_func</name></type> <name pos:start="33:17" pos:end="33:19">cmp</name></decl>, <decl pos:start="33:22" pos:end="33:31"><type ref="prev" pos:start="33:5" pos:end="33:15"/><name pos:start="33:22" pos:end="33:31">chroma_cmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="39:29"><decl pos:start="35:5" pos:end="39:28"><type pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:15">LOAD_COMMON</name></type>

    

    <name pos:start="39:5" pos:end="39:7">cmp</name><init pos:start="39:8" pos:end="39:28">= <expr pos:start="39:10" pos:end="39:28"><name pos:start="39:10" pos:end="39:28"><name pos:start="39:10" pos:end="39:10">s</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:15">dsp</name><operator pos:start="39:16" pos:end="39:16">.</operator><name pos:start="39:17" pos:end="39:22">me_cmp</name><index pos:start="39:23" pos:end="39:28">[<expr pos:start="39:24" pos:end="39:27"><name pos:start="39:24" pos:end="39:27">size</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:14">chroma_cmp</name><operator pos:start="41:15" pos:end="41:15">=</operator> <name pos:start="41:17" pos:end="41:37"><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:22">dsp</name><operator pos:start="41:23" pos:end="41:23">.</operator><name pos:start="41:24" pos:end="41:29">me_cmp</name><index pos:start="41:30" pos:end="41:37">[<expr pos:start="41:31" pos:end="41:36"><name pos:start="41:31" pos:end="41:34">size</name><operator pos:start="41:35" pos:end="41:35">+</operator><literal type="number" pos:start="41:36" pos:end="41:36">1</literal></expr>]</index></name></expr>;</expr_stmt>

    

    <expr_stmt pos:start="45:5" pos:end="45:45"><expr pos:start="45:5" pos:end="45:44"><name pos:start="45:5" pos:end="45:18">map_generation</name><operator pos:start="45:19" pos:end="45:19">=</operator> <call pos:start="45:21" pos:end="45:44"><name pos:start="45:21" pos:end="45:41">update_map_generation</name><argument_list pos:start="45:42" pos:end="45:44">(<argument pos:start="45:43" pos:end="45:43"><expr pos:start="45:43" pos:end="45:43"><name pos:start="45:43" pos:end="45:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:26"><expr pos:start="49:5" pos:end="49:25"><call pos:start="49:5" pos:end="49:25"><name pos:start="49:5" pos:end="49:7">CMP</name><argument_list pos:start="49:8" pos:end="49:25">(<argument pos:start="49:9" pos:end="49:12"><expr pos:start="49:9" pos:end="49:12"><name pos:start="49:9" pos:end="49:12">dmin</name></expr></argument>, <argument pos:start="49:15" pos:end="49:15"><expr pos:start="49:15" pos:end="49:15"><literal type="number" pos:start="49:15" pos:end="49:15">0</literal></expr></argument>, <argument pos:start="49:18" pos:end="49:18"><expr pos:start="49:18" pos:end="49:18"><literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr></argument>, <argument pos:start="49:21" pos:end="49:24"><expr pos:start="49:21" pos:end="49:24"><name pos:start="49:21" pos:end="49:24">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:27"><expr pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:10"><name pos:start="51:5" pos:end="51:7">map</name><index pos:start="51:8" pos:end="51:10">[<expr pos:start="51:9" pos:end="51:9"><literal type="number" pos:start="51:9" pos:end="51:9">0</literal></expr>]</index></name><operator pos:start="51:11" pos:end="51:11">=</operator> <name pos:start="51:13" pos:end="51:26">map_generation</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:23"><expr pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:13">score_map</name><index pos:start="53:14" pos:end="53:16">[<expr pos:start="53:15" pos:end="53:15"><literal type="number" pos:start="53:15" pos:end="53:15">0</literal></expr>]</index></name><operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:22">dmin</name></expr>;</expr_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:20">/* first line */</comment>

    <if_stmt pos:start="59:5" pos:end="101:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="59:28">(<expr pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:27">first_slice_line</name></name></expr>)</condition> <block pos:start="59:30" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:75">

        <macro pos:start="61:9" pos:end="61:52"><name pos:start="61:9" pos:end="61:16">CHECK_MV</name><argument_list pos:start="61:17" pos:end="61:52">(<argument pos:start="61:18" pos:end="61:33">P_LEFT[<literal type="number" pos:start="61:25" pos:end="61:25">0</literal>]&gt;&gt;shift</argument>, <argument pos:start="61:36" pos:end="61:51">P_LEFT[<literal type="number" pos:start="61:43" pos:end="61:43">1</literal>]&gt;&gt;shift</argument>)</argument_list></macro>

        <macro pos:start="63:9" pos:end="65:75"><name pos:start="63:9" pos:end="63:23">CHECK_CLIPED_MV</name><argument_list pos:start="63:24" pos:end="65:75">(<argument pos:start="63:25" pos:end="63:74">(last_mv[ref_mv_xy][<literal type="number" pos:start="63:45" pos:end="63:45">0</literal>]*ref_mv_scale + (<literal type="number" pos:start="63:64" pos:end="63:64">1</literal>&lt;&lt;<literal type="number" pos:start="63:67" pos:end="63:68">15</literal>))&gt;&gt;<literal type="number" pos:start="63:73" pos:end="63:74">16</literal></argument>, 

                        <argument pos:start="65:25" pos:end="65:74">(last_mv[ref_mv_xy][<literal type="number" pos:start="65:45" pos:end="65:45">1</literal>]*ref_mv_scale + (<literal type="number" pos:start="65:64" pos:end="65:64">1</literal>&lt;&lt;<literal type="number" pos:start="65:67" pos:end="65:68">15</literal>))&gt;&gt;<literal type="number" pos:start="65:73" pos:end="65:74">16</literal></argument>)</argument_list></macro>

    </block_content>}</block></if><else pos:start="67:6" pos:end="101:5">else<block pos:start="67:10" pos:end="101:5">{<block_content pos:start="69:9" pos:end="99:9">

        <if_stmt pos:start="69:9" pos:end="83:9"><if pos:start="69:9" pos:end="83:9">if<condition pos:start="69:11" pos:end="73:57">(<expr pos:start="69:12" pos:end="73:56"><name pos:start="69:12" pos:end="69:15">dmin</name><operator pos:start="69:16" pos:end="69:16">&lt;</operator><literal type="number" pos:start="69:17" pos:end="69:19">256</literal> <operator pos:start="69:21" pos:end="69:22">&amp;&amp;</operator> <operator pos:start="69:24" pos:end="69:24">(</operator> <name pos:start="69:26" pos:end="69:34"><name pos:start="69:26" pos:end="69:31">P_LEFT</name><index pos:start="69:32" pos:end="69:34">[<expr pos:start="69:33" pos:end="69:33"><literal type="number" pos:start="69:33" pos:end="69:33">0</literal></expr>]</index></name>    <operator pos:start="69:39" pos:end="69:39">|</operator><name pos:start="69:40" pos:end="69:48"><name pos:start="69:40" pos:end="69:45">P_LEFT</name><index pos:start="69:46" pos:end="69:48">[<expr pos:start="69:47" pos:end="69:47"><literal type="number" pos:start="69:47" pos:end="69:47">1</literal></expr>]</index></name>

                        <operator pos:start="71:25" pos:end="71:25">|</operator><name pos:start="71:26" pos:end="71:33"><name pos:start="71:26" pos:end="71:30">P_TOP</name><index pos:start="71:31" pos:end="71:33">[<expr pos:start="71:32" pos:end="71:32"><literal type="number" pos:start="71:32" pos:end="71:32">0</literal></expr>]</index></name>     <operator pos:start="71:39" pos:end="71:39">|</operator><name pos:start="71:40" pos:end="71:47"><name pos:start="71:40" pos:end="71:44">P_TOP</name><index pos:start="71:45" pos:end="71:47">[<expr pos:start="71:46" pos:end="71:46"><literal type="number" pos:start="71:46" pos:end="71:46">1</literal></expr>]</index></name>

                        <operator pos:start="73:25" pos:end="73:25">|</operator><name pos:start="73:26" pos:end="73:38"><name pos:start="73:26" pos:end="73:35">P_TOPRIGHT</name><index pos:start="73:36" pos:end="73:38">[<expr pos:start="73:37" pos:end="73:37"><literal type="number" pos:start="73:37" pos:end="73:37">0</literal></expr>]</index></name><operator pos:start="73:39" pos:end="73:39">|</operator><name pos:start="73:40" pos:end="73:52"><name pos:start="73:40" pos:end="73:49">P_TOPRIGHT</name><index pos:start="73:50" pos:end="73:52">[<expr pos:start="73:51" pos:end="73:51"><literal type="number" pos:start="73:51" pos:end="73:51">1</literal></expr>]</index></name><operator pos:start="73:53" pos:end="73:53">)</operator><operator pos:start="73:54" pos:end="73:55">==</operator><literal type="number" pos:start="73:56" pos:end="73:56">0</literal></expr>)</condition><block pos:start="73:58" pos:end="83:9">{<block_content pos:start="75:13" pos:end="81:24">

            <expr_stmt pos:start="75:13" pos:end="75:23"><expr pos:start="75:13" pos:end="75:22"><operator pos:start="75:13" pos:end="75:13">*</operator><name pos:start="75:14" pos:end="75:19">mx_ptr</name><operator pos:start="75:20" pos:end="75:20">=</operator> <literal type="number" pos:start="75:22" pos:end="75:22">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:23"><expr pos:start="77:13" pos:end="77:22"><operator pos:start="77:13" pos:end="77:13">*</operator><name pos:start="77:14" pos:end="77:19">my_ptr</name><operator pos:start="77:20" pos:end="77:20">=</operator> <literal type="number" pos:start="77:22" pos:end="77:22">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:25"><expr pos:start="79:13" pos:end="79:24"><name pos:start="79:13" pos:end="79:22"><name pos:start="79:13" pos:end="79:13">s</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:17">me</name><operator pos:start="79:18" pos:end="79:18">.</operator><name pos:start="79:19" pos:end="79:22">skip</name></name><operator pos:start="79:23" pos:end="79:23">=</operator><literal type="number" pos:start="79:24" pos:end="79:24">1</literal></expr>;</expr_stmt>

            <return pos:start="81:13" pos:end="81:24">return <expr pos:start="81:20" pos:end="81:23"><name pos:start="81:20" pos:end="81:23">dmin</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <macro pos:start="85:9" pos:end="85:56"><name pos:start="85:9" pos:end="85:16">CHECK_MV</name><argument_list pos:start="85:17" pos:end="85:56">(<argument pos:start="85:18" pos:end="85:35">P_MEDIAN[<literal type="number" pos:start="85:27" pos:end="85:27">0</literal>]&gt;&gt;shift</argument>, <argument pos:start="85:38" pos:end="85:55">P_MEDIAN[<literal type="number" pos:start="85:47" pos:end="85:47">1</literal>]&gt;&gt;shift</argument>)</argument_list></macro>

        <if_stmt pos:start="87:9" pos:end="99:9"><if pos:start="87:9" pos:end="99:9">if<condition pos:start="87:11" pos:end="87:22">(<expr pos:start="87:12" pos:end="87:21"><name pos:start="87:12" pos:end="87:15">dmin</name><operator pos:start="87:16" pos:end="87:16">&gt;</operator><literal type="number" pos:start="87:17" pos:end="87:19">256</literal><operator pos:start="87:20" pos:end="87:20">*</operator><literal type="number" pos:start="87:21" pos:end="87:21">2</literal></expr>)</condition><block pos:start="87:23" pos:end="99:9">{<block_content pos:start="89:13" pos:end="97:64">

            <macro pos:start="89:13" pos:end="91:79"><name pos:start="89:13" pos:end="89:27">CHECK_CLIPED_MV</name><argument_list pos:start="89:28" pos:end="91:79">(<argument pos:start="89:29" pos:end="89:78">(last_mv[ref_mv_xy][<literal type="number" pos:start="89:49" pos:end="89:49">0</literal>]*ref_mv_scale + (<literal type="number" pos:start="89:68" pos:end="89:68">1</literal>&lt;&lt;<literal type="number" pos:start="89:71" pos:end="89:72">15</literal>))&gt;&gt;<literal type="number" pos:start="89:77" pos:end="89:78">16</literal></argument>, 

                            <argument pos:start="91:29" pos:end="91:78">(last_mv[ref_mv_xy][<literal type="number" pos:start="91:49" pos:end="91:49">1</literal>]*ref_mv_scale + (<literal type="number" pos:start="91:68" pos:end="91:68">1</literal>&lt;&lt;<literal type="number" pos:start="91:71" pos:end="91:72">15</literal>))&gt;&gt;<literal type="number" pos:start="91:77" pos:end="91:78">16</literal></argument>)</argument_list></macro>

            <macro pos:start="93:13" pos:end="93:64"><name pos:start="93:13" pos:end="93:20">CHECK_MV</name><argument_list pos:start="93:21" pos:end="93:64">(<argument pos:start="93:22" pos:end="93:41">P_LEFT[<literal type="number" pos:start="93:29" pos:end="93:29">0</literal>]    &gt;&gt;shift</argument>, <argument pos:start="93:44" pos:end="93:63">P_LEFT[<literal type="number" pos:start="93:51" pos:end="93:51">1</literal>]    &gt;&gt;shift</argument>)</argument_list></macro>

            <macro pos:start="95:13" pos:end="95:64"><name pos:start="95:13" pos:end="95:20">CHECK_MV</name><argument_list pos:start="95:21" pos:end="95:64">(<argument pos:start="95:22" pos:end="95:41">P_TOP[<literal type="number" pos:start="95:28" pos:end="95:28">0</literal>]     &gt;&gt;shift</argument>, <argument pos:start="95:44" pos:end="95:63">P_TOP[<literal type="number" pos:start="95:50" pos:end="95:50">1</literal>]     &gt;&gt;shift</argument>)</argument_list></macro>

            <macro pos:start="97:13" pos:end="97:64"><name pos:start="97:13" pos:end="97:20">CHECK_MV</name><argument_list pos:start="97:21" pos:end="97:64">(<argument pos:start="97:22" pos:end="97:41">P_TOPRIGHT[<literal type="number" pos:start="97:33" pos:end="97:33">0</literal>]&gt;&gt;shift</argument>, <argument pos:start="97:44" pos:end="97:63">P_TOPRIGHT[<literal type="number" pos:start="97:55" pos:end="97:55">1</literal>]&gt;&gt;shift</argument>)</argument_list></macro>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="103:5" pos:end="131:5"><if pos:start="103:5" pos:end="131:5">if<condition pos:start="103:7" pos:end="103:18">(<expr pos:start="103:8" pos:end="103:17"><name pos:start="103:8" pos:end="103:11">dmin</name><operator pos:start="103:12" pos:end="103:12">&gt;</operator><literal type="number" pos:start="103:13" pos:end="103:15">256</literal><operator pos:start="103:16" pos:end="103:16">*</operator><literal type="number" pos:start="103:17" pos:end="103:17">4</literal></expr>)</condition><block pos:start="103:19" pos:end="131:5">{<block_content pos:start="105:9" pos:end="129:9">

        <if_stmt pos:start="105:9" pos:end="129:9"><if pos:start="105:9" pos:end="117:9">if<condition pos:start="105:11" pos:end="105:26">(<expr pos:start="105:12" pos:end="105:25"><name pos:start="105:12" pos:end="105:25"><name pos:start="105:12" pos:end="105:12">s</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:16">me</name><operator pos:start="105:17" pos:end="105:17">.</operator><name pos:start="105:18" pos:end="105:25">pre_pass</name></name></expr>)</condition><block pos:start="105:27" pos:end="117:9">{<block_content pos:start="107:13" pos:end="115:97">

            <macro pos:start="107:13" pos:end="109:81"><name pos:start="107:13" pos:end="107:27">CHECK_CLIPED_MV</name><argument_list pos:start="107:28" pos:end="109:81">(<argument pos:start="107:29" pos:end="107:80">(last_mv[ref_mv_xy-<literal type="number" pos:start="107:48" pos:end="107:48">1</literal>][<literal type="number" pos:start="107:51" pos:end="107:51">0</literal>]*ref_mv_scale + (<literal type="number" pos:start="107:70" pos:end="107:70">1</literal>&lt;&lt;<literal type="number" pos:start="107:73" pos:end="107:74">15</literal>))&gt;&gt;<literal type="number" pos:start="107:79" pos:end="107:80">16</literal></argument>, 

                            <argument pos:start="109:29" pos:end="109:80">(last_mv[ref_mv_xy-<literal type="number" pos:start="109:48" pos:end="109:48">1</literal>][<literal type="number" pos:start="109:51" pos:end="109:51">1</literal>]*ref_mv_scale + (<literal type="number" pos:start="109:70" pos:end="109:70">1</literal>&lt;&lt;<literal type="number" pos:start="109:73" pos:end="109:74">15</literal>))&gt;&gt;<literal type="number" pos:start="109:79" pos:end="109:80">16</literal></argument>)</argument_list></macro>

            <if_stmt pos:start="111:13" pos:end="115:97"><if pos:start="111:13" pos:end="115:97">if<condition pos:start="111:15" pos:end="111:36">(<expr pos:start="111:16" pos:end="111:35"><operator pos:start="111:16" pos:end="111:16">!</operator><name pos:start="111:17" pos:end="111:35"><name pos:start="111:17" pos:end="111:17">s</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:35">first_slice_line</name></name></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="115:97"><block_content pos:start="113:17" pos:end="115:97">

                <macro pos:start="113:17" pos:end="115:97"><name pos:start="113:17" pos:end="113:31">CHECK_CLIPED_MV</name><argument_list pos:start="113:32" pos:end="115:97">(<argument pos:start="113:33" pos:end="113:96">(last_mv[ref_mv_xy-ref_mv_stride][<literal type="number" pos:start="113:67" pos:end="113:67">0</literal>]*ref_mv_scale + (<literal type="number" pos:start="113:86" pos:end="113:86">1</literal>&lt;&lt;<literal type="number" pos:start="113:89" pos:end="113:90">15</literal>))&gt;&gt;<literal type="number" pos:start="113:95" pos:end="113:96">16</literal></argument>, 

                                <argument pos:start="115:33" pos:end="115:96">(last_mv[ref_mv_xy-ref_mv_stride][<literal type="number" pos:start="115:67" pos:end="115:67">1</literal>]*ref_mv_scale + (<literal type="number" pos:start="115:86" pos:end="115:86">1</literal>&lt;&lt;<literal type="number" pos:start="115:89" pos:end="115:90">15</literal>))&gt;&gt;<literal type="number" pos:start="115:95" pos:end="115:96">16</literal></argument>)</argument_list></macro></block_content></block></if></if_stmt>

        </block_content>}</block></if><else pos:start="117:10" pos:end="129:9">else<block pos:start="117:14" pos:end="129:9">{<block_content pos:start="119:13" pos:end="127:97">

            <macro pos:start="119:13" pos:end="121:81"><name pos:start="119:13" pos:end="119:27">CHECK_CLIPED_MV</name><argument_list pos:start="119:28" pos:end="121:81">(<argument pos:start="119:29" pos:end="119:80">(last_mv[ref_mv_xy+<literal type="number" pos:start="119:48" pos:end="119:48">1</literal>][<literal type="number" pos:start="119:51" pos:end="119:51">0</literal>]*ref_mv_scale + (<literal type="number" pos:start="119:70" pos:end="119:70">1</literal>&lt;&lt;<literal type="number" pos:start="119:73" pos:end="119:74">15</literal>))&gt;&gt;<literal type="number" pos:start="119:79" pos:end="119:80">16</literal></argument>, 

                            <argument pos:start="121:29" pos:end="121:80">(last_mv[ref_mv_xy+<literal type="number" pos:start="121:48" pos:end="121:48">1</literal>][<literal type="number" pos:start="121:51" pos:end="121:51">1</literal>]*ref_mv_scale + (<literal type="number" pos:start="121:70" pos:end="121:70">1</literal>&lt;&lt;<literal type="number" pos:start="121:73" pos:end="121:74">15</literal>))&gt;&gt;<literal type="number" pos:start="121:79" pos:end="121:80">16</literal></argument>)</argument_list></macro>

            <if_stmt pos:start="123:13" pos:end="127:97"><if pos:start="123:13" pos:end="127:97">if<condition pos:start="123:15" pos:end="123:68">(<expr pos:start="123:16" pos:end="123:67"><name pos:start="123:16" pos:end="123:26"><name pos:start="123:16" pos:end="123:16">s</name><operator pos:start="123:17" pos:end="123:18">-&gt;</operator><name pos:start="123:19" pos:end="123:26">end_mb_y</name></name> <operator pos:start="123:28" pos:end="123:29">==</operator> <name pos:start="123:31" pos:end="123:42"><name pos:start="123:31" pos:end="123:31">s</name><operator pos:start="123:32" pos:end="123:33">-&gt;</operator><name pos:start="123:34" pos:end="123:42">mb_height</name></name> <operator pos:start="123:44" pos:end="123:45">||</operator> <name pos:start="123:47" pos:end="123:53"><name pos:start="123:47" pos:end="123:47">s</name><operator pos:start="123:48" pos:end="123:49">-&gt;</operator><name pos:start="123:50" pos:end="123:53">mb_y</name></name><operator pos:start="123:54" pos:end="123:54">+</operator><literal type="number" pos:start="123:55" pos:end="123:55">1</literal><operator pos:start="123:56" pos:end="123:56">&lt;</operator><name pos:start="123:57" pos:end="123:67"><name pos:start="123:57" pos:end="123:57">s</name><operator pos:start="123:58" pos:end="123:59">-&gt;</operator><name pos:start="123:60" pos:end="123:67">end_mb_y</name></name></expr>)</condition><block type="pseudo" pos:start="125:17" pos:end="127:97"><block_content pos:start="125:17" pos:end="127:97">  <comment type="line" pos:start="123:71" pos:end="123:115">//FIXME replace at least with last_slice_line</comment>

                <macro pos:start="125:17" pos:end="127:97"><name pos:start="125:17" pos:end="125:31">CHECK_CLIPED_MV</name><argument_list pos:start="125:32" pos:end="127:97">(<argument pos:start="125:33" pos:end="125:96">(last_mv[ref_mv_xy+ref_mv_stride][<literal type="number" pos:start="125:67" pos:end="125:67">0</literal>]*ref_mv_scale + (<literal type="number" pos:start="125:86" pos:end="125:86">1</literal>&lt;&lt;<literal type="number" pos:start="125:89" pos:end="125:90">15</literal>))&gt;&gt;<literal type="number" pos:start="125:95" pos:end="125:96">16</literal></argument>, 

                                <argument pos:start="127:33" pos:end="127:96">(last_mv[ref_mv_xy+ref_mv_stride][<literal type="number" pos:start="127:67" pos:end="127:67">1</literal>]*ref_mv_scale + (<literal type="number" pos:start="127:86" pos:end="127:86">1</literal>&lt;&lt;<literal type="number" pos:start="127:89" pos:end="127:90">15</literal>))&gt;&gt;<literal type="number" pos:start="127:95" pos:end="127:96">16</literal></argument>)</argument_list></macro></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="135:5" pos:end="173:5"><if pos:start="135:5" pos:end="173:5">if<condition pos:start="135:7" pos:end="135:38">(<expr pos:start="135:8" pos:end="135:37"><name pos:start="135:8" pos:end="135:37"><name pos:start="135:8" pos:end="135:8">s</name><operator pos:start="135:9" pos:end="135:10">-&gt;</operator><name pos:start="135:11" pos:end="135:15">avctx</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:37">last_predictor_count</name></name></expr>)</condition><block pos:start="135:39" pos:end="173:5">{<block_content pos:start="137:9" pos:end="171:9">

        <decl_stmt pos:start="137:9" pos:end="137:56"><decl pos:start="137:9" pos:end="137:55"><type pos:start="137:9" pos:end="137:17"><specifier pos:start="137:9" pos:end="137:13">const</specifier> <name pos:start="137:15" pos:end="137:17">int</name></type> <name pos:start="137:19" pos:end="137:23">count</name><init pos:start="137:24" pos:end="137:55">= <expr pos:start="137:26" pos:end="137:55"><name pos:start="137:26" pos:end="137:55"><name pos:start="137:26" pos:end="137:26">s</name><operator pos:start="137:27" pos:end="137:28">-&gt;</operator><name pos:start="137:29" pos:end="137:33">avctx</name><operator pos:start="137:34" pos:end="137:35">-&gt;</operator><name pos:start="137:36" pos:end="137:55">last_predictor_count</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="139:9" pos:end="139:52"><decl pos:start="139:9" pos:end="139:51"><type pos:start="139:9" pos:end="139:17"><specifier pos:start="139:9" pos:end="139:13">const</specifier> <name pos:start="139:15" pos:end="139:17">int</name></type> <name pos:start="139:19" pos:end="139:24">xstart</name><init pos:start="139:25" pos:end="139:51">= <expr pos:start="139:27" pos:end="139:51"><call pos:start="139:27" pos:end="139:51"><name pos:start="139:27" pos:end="139:31">FFMAX</name><argument_list pos:start="139:32" pos:end="139:51">(<argument pos:start="139:33" pos:end="139:33"><expr pos:start="139:33" pos:end="139:33"><literal type="number" pos:start="139:33" pos:end="139:33">0</literal></expr></argument>, <argument pos:start="139:36" pos:end="139:50"><expr pos:start="139:36" pos:end="139:50"><name pos:start="139:36" pos:end="139:42"><name pos:start="139:36" pos:end="139:36">s</name><operator pos:start="139:37" pos:end="139:38">-&gt;</operator><name pos:start="139:39" pos:end="139:42">mb_x</name></name> <operator pos:start="139:44" pos:end="139:44">-</operator> <name pos:start="139:46" pos:end="139:50">count</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="141:9" pos:end="141:52"><decl pos:start="141:9" pos:end="141:51"><type pos:start="141:9" pos:end="141:17"><specifier pos:start="141:9" pos:end="141:13">const</specifier> <name pos:start="141:15" pos:end="141:17">int</name></type> <name pos:start="141:19" pos:end="141:24">ystart</name><init pos:start="141:25" pos:end="141:51">= <expr pos:start="141:27" pos:end="141:51"><call pos:start="141:27" pos:end="141:51"><name pos:start="141:27" pos:end="141:31">FFMAX</name><argument_list pos:start="141:32" pos:end="141:51">(<argument pos:start="141:33" pos:end="141:33"><expr pos:start="141:33" pos:end="141:33"><literal type="number" pos:start="141:33" pos:end="141:33">0</literal></expr></argument>, <argument pos:start="141:36" pos:end="141:50"><expr pos:start="141:36" pos:end="141:50"><name pos:start="141:36" pos:end="141:42"><name pos:start="141:36" pos:end="141:36">s</name><operator pos:start="141:37" pos:end="141:38">-&gt;</operator><name pos:start="141:39" pos:end="141:42">mb_y</name></name> <operator pos:start="141:44" pos:end="141:44">-</operator> <name pos:start="141:46" pos:end="141:50">count</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="143:9" pos:end="143:65"><decl pos:start="143:9" pos:end="143:64"><type pos:start="143:9" pos:end="143:17"><specifier pos:start="143:9" pos:end="143:13">const</specifier> <name pos:start="143:15" pos:end="143:17">int</name></type> <name pos:start="143:19" pos:end="143:22">xend</name><init pos:start="143:23" pos:end="143:64">= <expr pos:start="143:25" pos:end="143:64"><call pos:start="143:25" pos:end="143:64"><name pos:start="143:25" pos:end="143:29">FFMIN</name><argument_list pos:start="143:30" pos:end="143:64">(<argument pos:start="143:31" pos:end="143:41"><expr pos:start="143:31" pos:end="143:41"><name pos:start="143:31" pos:end="143:41"><name pos:start="143:31" pos:end="143:31">s</name><operator pos:start="143:32" pos:end="143:33">-&gt;</operator><name pos:start="143:34" pos:end="143:41">mb_width</name></name></expr></argument> , <argument pos:start="143:45" pos:end="143:63"><expr pos:start="143:45" pos:end="143:63"><name pos:start="143:45" pos:end="143:51"><name pos:start="143:45" pos:end="143:45">s</name><operator pos:start="143:46" pos:end="143:47">-&gt;</operator><name pos:start="143:48" pos:end="143:51">mb_x</name></name> <operator pos:start="143:53" pos:end="143:53">+</operator> <name pos:start="143:55" pos:end="143:59">count</name> <operator pos:start="143:61" pos:end="143:61">+</operator> <literal type="number" pos:start="143:63" pos:end="143:63">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="145:9" pos:end="145:65"><decl pos:start="145:9" pos:end="145:64"><type pos:start="145:9" pos:end="145:17"><specifier pos:start="145:9" pos:end="145:13">const</specifier> <name pos:start="145:15" pos:end="145:17">int</name></type> <name pos:start="145:19" pos:end="145:22">yend</name><init pos:start="145:23" pos:end="145:64">= <expr pos:start="145:25" pos:end="145:64"><call pos:start="145:25" pos:end="145:64"><name pos:start="145:25" pos:end="145:29">FFMIN</name><argument_list pos:start="145:30" pos:end="145:64">(<argument pos:start="145:31" pos:end="145:42"><expr pos:start="145:31" pos:end="145:42"><name pos:start="145:31" pos:end="145:42"><name pos:start="145:31" pos:end="145:31">s</name><operator pos:start="145:32" pos:end="145:33">-&gt;</operator><name pos:start="145:34" pos:end="145:42">mb_height</name></name></expr></argument>, <argument pos:start="145:45" pos:end="145:63"><expr pos:start="145:45" pos:end="145:63"><name pos:start="145:45" pos:end="145:51"><name pos:start="145:45" pos:end="145:45">s</name><operator pos:start="145:46" pos:end="145:47">-&gt;</operator><name pos:start="145:48" pos:end="145:51">mb_y</name></name> <operator pos:start="145:53" pos:end="145:53">+</operator> <name pos:start="145:55" pos:end="145:59">count</name> <operator pos:start="145:61" pos:end="145:61">+</operator> <literal type="number" pos:start="145:63" pos:end="145:63">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="147:9" pos:end="147:17"><decl pos:start="147:9" pos:end="147:16"><type pos:start="147:9" pos:end="147:11"><name pos:start="147:9" pos:end="147:11">int</name></type> <name pos:start="147:13" pos:end="147:16">mb_y</name></decl>;</decl_stmt>



        <for pos:start="151:9" pos:end="171:9">for<control pos:start="151:12" pos:end="151:43">(<init pos:start="151:13" pos:end="151:24"><expr pos:start="151:13" pos:end="151:23"><name pos:start="151:13" pos:end="151:16">mb_y</name><operator pos:start="151:17" pos:end="151:17">=</operator><name pos:start="151:18" pos:end="151:23">ystart</name></expr>;</init> <condition pos:start="151:26" pos:end="151:35"><expr pos:start="151:26" pos:end="151:34"><name pos:start="151:26" pos:end="151:29">mb_y</name><operator pos:start="151:30" pos:end="151:30">&lt;</operator><name pos:start="151:31" pos:end="151:34">yend</name></expr>;</condition> <incr pos:start="151:37" pos:end="151:42"><expr pos:start="151:37" pos:end="151:42"><name pos:start="151:37" pos:end="151:40">mb_y</name><operator pos:start="151:41" pos:end="151:42">++</operator></expr></incr>)</control><block pos:start="151:44" pos:end="171:9">{<block_content pos:start="153:13" pos:end="169:13">

            <decl_stmt pos:start="153:13" pos:end="153:21"><decl pos:start="153:13" pos:end="153:20"><type pos:start="153:13" pos:end="153:15"><name pos:start="153:13" pos:end="153:15">int</name></type> <name pos:start="153:17" pos:end="153:20">mb_x</name></decl>;</decl_stmt>

            <for pos:start="155:13" pos:end="169:13">for<control pos:start="155:16" pos:end="155:47">(<init pos:start="155:17" pos:end="155:28"><expr pos:start="155:17" pos:end="155:27"><name pos:start="155:17" pos:end="155:20">mb_x</name><operator pos:start="155:21" pos:end="155:21">=</operator><name pos:start="155:22" pos:end="155:27">xstart</name></expr>;</init> <condition pos:start="155:30" pos:end="155:39"><expr pos:start="155:30" pos:end="155:38"><name pos:start="155:30" pos:end="155:33">mb_x</name><operator pos:start="155:34" pos:end="155:34">&lt;</operator><name pos:start="155:35" pos:end="155:38">xend</name></expr>;</condition> <incr pos:start="155:41" pos:end="155:46"><expr pos:start="155:41" pos:end="155:46"><name pos:start="155:41" pos:end="155:44">mb_x</name><operator pos:start="155:45" pos:end="155:46">++</operator></expr></incr>)</control><block pos:start="155:48" pos:end="169:13">{<block_content pos:start="157:17" pos:end="167:31">

                <decl_stmt pos:start="157:17" pos:end="157:66"><decl pos:start="157:17" pos:end="157:65"><type pos:start="157:17" pos:end="157:25"><specifier pos:start="157:17" pos:end="157:21">const</specifier> <name pos:start="157:23" pos:end="157:25">int</name></type> <name pos:start="157:27" pos:end="157:28">xy</name><init pos:start="157:29" pos:end="157:65">= <expr pos:start="157:31" pos:end="157:65"><name pos:start="157:31" pos:end="157:34">mb_x</name> <operator pos:start="157:36" pos:end="157:36">+</operator> <literal type="number" pos:start="157:38" pos:end="157:40">1</literal> <operator pos:start="157:40" pos:end="157:40">+</operator> <operator pos:start="157:42" pos:end="157:42">(</operator><name pos:start="157:43" pos:end="157:46">mb_y</name> <operator pos:start="157:48" pos:end="157:48">+</operator> <literal type="number" pos:start="157:50" pos:end="157:50">1</literal><operator pos:start="157:51" pos:end="157:51">)</operator><operator pos:start="157:52" pos:end="157:52">*</operator><name pos:start="157:53" pos:end="157:65">ref_mv_stride</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="159:17" pos:end="159:68"><decl pos:start="159:17" pos:end="159:67"><type pos:start="159:17" pos:end="159:19"><name pos:start="159:17" pos:end="159:19">int</name></type> <name pos:start="159:21" pos:end="159:22">mx</name><init pos:start="159:23" pos:end="159:67">= <expr pos:start="159:25" pos:end="159:67"><operator pos:start="159:25" pos:end="159:25">(</operator><name pos:start="159:26" pos:end="159:39"><name pos:start="159:26" pos:end="159:32">last_mv</name><index pos:start="159:33" pos:end="159:36">[<expr pos:start="159:34" pos:end="159:35"><name pos:start="159:34" pos:end="159:35">xy</name></expr>]</index><index pos:start="159:37" pos:end="159:39">[<expr pos:start="159:38" pos:end="159:38"><literal type="number" pos:start="159:38" pos:end="159:38">0</literal></expr>]</index></name><operator pos:start="159:40" pos:end="159:40">*</operator><name pos:start="159:41" pos:end="159:52">ref_mv_scale</name> <operator pos:start="159:54" pos:end="159:54">+</operator> <operator pos:start="159:56" pos:end="159:56">(</operator><literal type="number" pos:start="159:57" pos:end="159:57">1</literal><operator pos:start="159:58" pos:end="159:59">&lt;&lt;</operator><literal type="number" pos:start="159:60" pos:end="159:61">15</literal><operator pos:start="159:62" pos:end="159:62">)</operator><operator pos:start="159:63" pos:end="159:63">)</operator><operator pos:start="159:64" pos:end="159:65">&gt;&gt;</operator><literal type="number" pos:start="159:66" pos:end="159:67">16</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="161:17" pos:end="161:68"><decl pos:start="161:17" pos:end="161:67"><type pos:start="161:17" pos:end="161:19"><name pos:start="161:17" pos:end="161:19">int</name></type> <name pos:start="161:21" pos:end="161:22">my</name><init pos:start="161:23" pos:end="161:67">= <expr pos:start="161:25" pos:end="161:67"><operator pos:start="161:25" pos:end="161:25">(</operator><name pos:start="161:26" pos:end="161:39"><name pos:start="161:26" pos:end="161:32">last_mv</name><index pos:start="161:33" pos:end="161:36">[<expr pos:start="161:34" pos:end="161:35"><name pos:start="161:34" pos:end="161:35">xy</name></expr>]</index><index pos:start="161:37" pos:end="161:39">[<expr pos:start="161:38" pos:end="161:38"><literal type="number" pos:start="161:38" pos:end="161:38">1</literal></expr>]</index></name><operator pos:start="161:40" pos:end="161:40">*</operator><name pos:start="161:41" pos:end="161:52">ref_mv_scale</name> <operator pos:start="161:54" pos:end="161:54">+</operator> <operator pos:start="161:56" pos:end="161:56">(</operator><literal type="number" pos:start="161:57" pos:end="161:57">1</literal><operator pos:start="161:58" pos:end="161:59">&lt;&lt;</operator><literal type="number" pos:start="161:60" pos:end="161:61">15</literal><operator pos:start="161:62" pos:end="161:62">)</operator><operator pos:start="161:63" pos:end="161:63">)</operator><operator pos:start="161:64" pos:end="161:65">&gt;&gt;</operator><literal type="number" pos:start="161:66" pos:end="161:67">16</literal></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="165:17" pos:end="165:70"><if pos:start="165:17" pos:end="165:70">if<condition pos:start="165:19" pos:end="165:60">(<expr pos:start="165:20" pos:end="165:59"><name pos:start="165:20" pos:end="165:21">mx</name><operator pos:start="165:22" pos:end="165:22">&gt;</operator><name pos:start="165:23" pos:end="165:26">xmax</name> <operator pos:start="165:28" pos:end="165:29">||</operator> <name pos:start="165:31" pos:end="165:44"><name pos:start="165:31" pos:end="165:32">mx</name><argument_list type="generic" pos:start="165:33" pos:end="165:44">&lt;<argument pos:start="165:34" pos:end="165:43"><expr pos:start="165:34" pos:end="165:43"><name pos:start="165:34" pos:end="165:37">xmin</name> <operator pos:start="165:39" pos:end="165:40">||</operator> <name pos:start="165:42" pos:end="165:43">my</name></expr></argument>&gt;</argument_list></name><name pos:start="165:45" pos:end="165:48">ymax</name> <operator pos:start="165:50" pos:end="165:51">||</operator> <name pos:start="165:53" pos:end="165:54">my</name><operator pos:start="165:55" pos:end="165:55">&lt;</operator><name pos:start="165:56" pos:end="165:59">ymin</name></expr>)</condition><block type="pseudo" pos:start="165:62" pos:end="165:70"><block_content pos:start="165:62" pos:end="165:70"> <continue pos:start="165:62" pos:end="165:70">continue;</continue></block_content></block></if></if_stmt>

                <macro pos:start="167:17" pos:end="167:31"><name pos:start="167:17" pos:end="167:24">CHECK_MV</name><argument_list pos:start="167:25" pos:end="167:31">(<argument pos:start="167:26" pos:end="167:27">mx</argument>,<argument pos:start="167:29" pos:end="167:30">my</argument>)</argument_list></macro>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



<comment type="line" pos:start="177:1" pos:end="177:30">//check(best[0],best[1],0, b0)</comment>

    <if_stmt pos:start="179:5" pos:end="209:84"><if pos:start="179:5" pos:end="185:84">if<condition pos:start="179:7" pos:end="179:26">(<expr pos:start="179:8" pos:end="179:25"><name pos:start="179:8" pos:end="179:21"><name pos:start="179:8" pos:end="179:8">s</name><operator pos:start="179:9" pos:end="179:10">-&gt;</operator><name pos:start="179:11" pos:end="179:12">me</name><operator pos:start="179:13" pos:end="179:13">.</operator><name pos:start="179:14" pos:end="179:21">dia_size</name></name><operator pos:start="179:22" pos:end="179:23">==</operator><operator pos:start="179:24" pos:end="179:24">-</operator><literal type="number" pos:start="179:25" pos:end="179:25">1</literal></expr>)</condition><block type="pseudo" pos:start="181:9" pos:end="185:84"><block_content pos:start="181:9" pos:end="185:84">

        <expr_stmt pos:start="181:9" pos:end="185:84"><expr pos:start="181:9" pos:end="185:83"><name pos:start="181:9" pos:end="181:12">dmin</name><operator pos:start="181:13" pos:end="181:13">=</operator> <call pos:start="181:15" pos:end="185:83"><call pos:start="181:15" pos:end="181:42"><name pos:start="181:15" pos:end="181:20">RENAME</name><argument_list pos:start="181:21" pos:end="181:42">(<argument pos:start="181:22" pos:end="181:41"><expr pos:start="181:22" pos:end="181:41"><name pos:start="181:22" pos:end="181:41">funny_diamond_search</name></expr></argument>)</argument_list></call><argument_list pos:start="181:43" pos:end="185:83">(<argument pos:start="181:44" pos:end="181:44"><expr pos:start="181:44" pos:end="181:44"><name pos:start="181:44" pos:end="181:44">s</name></expr></argument>, <argument pos:start="181:47" pos:end="181:50"><expr pos:start="181:47" pos:end="181:50"><name pos:start="181:47" pos:end="181:50">best</name></expr></argument>, <argument pos:start="181:53" pos:end="181:56"><expr pos:start="181:53" pos:end="181:56"><name pos:start="181:53" pos:end="181:56">dmin</name></expr></argument>, <argument pos:start="181:59" pos:end="181:66"><expr pos:start="181:59" pos:end="181:66"><name pos:start="181:59" pos:end="181:66">src_data</name></expr></argument>, <argument pos:start="181:69" pos:end="181:76"><expr pos:start="181:69" pos:end="181:76"><name pos:start="181:69" pos:end="181:76">ref_data</name></expr></argument>, <argument pos:start="181:79" pos:end="181:84"><expr pos:start="181:79" pos:end="181:84"><name pos:start="181:79" pos:end="181:84">stride</name></expr></argument>, <argument pos:start="181:87" pos:end="181:94"><expr pos:start="181:87" pos:end="181:94"><name pos:start="181:87" pos:end="181:94">uvstride</name></expr></argument>,

                                   <argument pos:start="183:36" pos:end="183:41"><expr pos:start="183:36" pos:end="183:41"><name pos:start="183:36" pos:end="183:41">pred_x</name></expr></argument>, <argument pos:start="183:44" pos:end="183:49"><expr pos:start="183:44" pos:end="183:49"><name pos:start="183:44" pos:end="183:49">pred_y</name></expr></argument>, <argument pos:start="183:52" pos:end="183:65"><expr pos:start="183:52" pos:end="183:65"><name pos:start="183:52" pos:end="183:65">penalty_factor</name></expr></argument>, 

				   <argument pos:start="185:36" pos:end="185:40"><expr pos:start="185:36" pos:end="185:40"><name pos:start="185:36" pos:end="185:40">shift</name></expr></argument>, <argument pos:start="185:43" pos:end="185:45"><expr pos:start="185:43" pos:end="185:45"><name pos:start="185:43" pos:end="185:45">map</name></expr></argument>, <argument pos:start="185:48" pos:end="185:61"><expr pos:start="185:48" pos:end="185:61"><name pos:start="185:48" pos:end="185:61">map_generation</name></expr></argument>, <argument pos:start="185:64" pos:end="185:67"><expr pos:start="185:64" pos:end="185:67"><name pos:start="185:64" pos:end="185:67">size</name></expr></argument>, <argument pos:start="185:70" pos:end="185:70"><expr pos:start="185:70" pos:end="185:70"><name pos:start="185:70" pos:end="185:70">h</name></expr></argument>, <argument pos:start="185:73" pos:end="185:82"><expr pos:start="185:73" pos:end="185:82"><name pos:start="185:73" pos:end="185:82">mv_penalty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="187:5" pos:end="193:84">else if<condition pos:start="187:12" pos:end="187:30">(<expr pos:start="187:13" pos:end="187:29"><name pos:start="187:13" pos:end="187:26"><name pos:start="187:13" pos:end="187:13">s</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:17">me</name><operator pos:start="187:18" pos:end="187:18">.</operator><name pos:start="187:19" pos:end="187:26">dia_size</name></name><operator pos:start="187:27" pos:end="187:27">&lt;</operator><operator pos:start="187:28" pos:end="187:28">-</operator><literal type="number" pos:start="187:29" pos:end="187:29">1</literal></expr>)</condition><block type="pseudo" pos:start="189:9" pos:end="193:84"><block_content pos:start="189:9" pos:end="193:84">

        <expr_stmt pos:start="189:9" pos:end="193:84"><expr pos:start="189:9" pos:end="193:83"><name pos:start="189:9" pos:end="189:12">dmin</name><operator pos:start="189:13" pos:end="189:13">=</operator> <call pos:start="189:15" pos:end="193:83"><call pos:start="189:15" pos:end="189:40"><name pos:start="189:15" pos:end="189:20">RENAME</name><argument_list pos:start="189:21" pos:end="189:40">(<argument pos:start="189:22" pos:end="189:39"><expr pos:start="189:22" pos:end="189:39"><name pos:start="189:22" pos:end="189:39">sab_diamond_search</name></expr></argument>)</argument_list></call><argument_list pos:start="189:41" pos:end="193:83">(<argument pos:start="189:42" pos:end="189:42"><expr pos:start="189:42" pos:end="189:42"><name pos:start="189:42" pos:end="189:42">s</name></expr></argument>, <argument pos:start="189:45" pos:end="189:48"><expr pos:start="189:45" pos:end="189:48"><name pos:start="189:45" pos:end="189:48">best</name></expr></argument>, <argument pos:start="189:51" pos:end="189:54"><expr pos:start="189:51" pos:end="189:54"><name pos:start="189:51" pos:end="189:54">dmin</name></expr></argument>, <argument pos:start="189:57" pos:end="189:64"><expr pos:start="189:57" pos:end="189:64"><name pos:start="189:57" pos:end="189:64">src_data</name></expr></argument>, <argument pos:start="189:67" pos:end="189:74"><expr pos:start="189:67" pos:end="189:74"><name pos:start="189:67" pos:end="189:74">ref_data</name></expr></argument>, <argument pos:start="189:77" pos:end="189:82"><expr pos:start="189:77" pos:end="189:82"><name pos:start="189:77" pos:end="189:82">stride</name></expr></argument>, <argument pos:start="189:85" pos:end="189:92"><expr pos:start="189:85" pos:end="189:92"><name pos:start="189:85" pos:end="189:92">uvstride</name></expr></argument>,

                                   <argument pos:start="191:36" pos:end="191:41"><expr pos:start="191:36" pos:end="191:41"><name pos:start="191:36" pos:end="191:41">pred_x</name></expr></argument>, <argument pos:start="191:44" pos:end="191:49"><expr pos:start="191:44" pos:end="191:49"><name pos:start="191:44" pos:end="191:49">pred_y</name></expr></argument>, <argument pos:start="191:52" pos:end="191:65"><expr pos:start="191:52" pos:end="191:65"><name pos:start="191:52" pos:end="191:65">penalty_factor</name></expr></argument>, 

				   <argument pos:start="193:36" pos:end="193:40"><expr pos:start="193:36" pos:end="193:40"><name pos:start="193:36" pos:end="193:40">shift</name></expr></argument>, <argument pos:start="193:43" pos:end="193:45"><expr pos:start="193:43" pos:end="193:45"><name pos:start="193:43" pos:end="193:45">map</name></expr></argument>, <argument pos:start="193:48" pos:end="193:61"><expr pos:start="193:48" pos:end="193:61"><name pos:start="193:48" pos:end="193:61">map_generation</name></expr></argument>, <argument pos:start="193:64" pos:end="193:67"><expr pos:start="193:64" pos:end="193:67"><name pos:start="193:64" pos:end="193:67">size</name></expr></argument>, <argument pos:start="193:70" pos:end="193:70"><expr pos:start="193:70" pos:end="193:70"><name pos:start="193:70" pos:end="193:70">h</name></expr></argument>, <argument pos:start="193:73" pos:end="193:82"><expr pos:start="193:73" pos:end="193:82"><name pos:start="193:73" pos:end="193:82">mv_penalty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="195:5" pos:end="201:84">else if<condition pos:start="195:12" pos:end="195:29">(<expr pos:start="195:13" pos:end="195:28"><name pos:start="195:13" pos:end="195:26"><name pos:start="195:13" pos:end="195:13">s</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:17">me</name><operator pos:start="195:18" pos:end="195:18">.</operator><name pos:start="195:19" pos:end="195:26">dia_size</name></name><operator pos:start="195:27" pos:end="195:27">&lt;</operator><literal type="number" pos:start="195:28" pos:end="195:28">2</literal></expr>)</condition><block type="pseudo" pos:start="197:9" pos:end="201:84"><block_content pos:start="197:9" pos:end="201:84">

        <expr_stmt pos:start="197:9" pos:end="201:84"><expr pos:start="197:9" pos:end="201:83"><name pos:start="197:9" pos:end="197:12">dmin</name><operator pos:start="197:13" pos:end="197:13">=</operator> <call pos:start="197:15" pos:end="201:83"><call pos:start="197:15" pos:end="197:42"><name pos:start="197:15" pos:end="197:20">RENAME</name><argument_list pos:start="197:21" pos:end="197:42">(<argument pos:start="197:22" pos:end="197:41"><expr pos:start="197:22" pos:end="197:41"><name pos:start="197:22" pos:end="197:41">small_diamond_search</name></expr></argument>)</argument_list></call><argument_list pos:start="197:43" pos:end="201:83">(<argument pos:start="197:44" pos:end="197:44"><expr pos:start="197:44" pos:end="197:44"><name pos:start="197:44" pos:end="197:44">s</name></expr></argument>, <argument pos:start="197:47" pos:end="197:50"><expr pos:start="197:47" pos:end="197:50"><name pos:start="197:47" pos:end="197:50">best</name></expr></argument>, <argument pos:start="197:53" pos:end="197:56"><expr pos:start="197:53" pos:end="197:56"><name pos:start="197:53" pos:end="197:56">dmin</name></expr></argument>, <argument pos:start="197:59" pos:end="197:66"><expr pos:start="197:59" pos:end="197:66"><name pos:start="197:59" pos:end="197:66">src_data</name></expr></argument>, <argument pos:start="197:69" pos:end="197:76"><expr pos:start="197:69" pos:end="197:76"><name pos:start="197:69" pos:end="197:76">ref_data</name></expr></argument>, <argument pos:start="197:79" pos:end="197:84"><expr pos:start="197:79" pos:end="197:84"><name pos:start="197:79" pos:end="197:84">stride</name></expr></argument>, <argument pos:start="197:87" pos:end="197:94"><expr pos:start="197:87" pos:end="197:94"><name pos:start="197:87" pos:end="197:94">uvstride</name></expr></argument>,

                                   <argument pos:start="199:36" pos:end="199:41"><expr pos:start="199:36" pos:end="199:41"><name pos:start="199:36" pos:end="199:41">pred_x</name></expr></argument>, <argument pos:start="199:44" pos:end="199:49"><expr pos:start="199:44" pos:end="199:49"><name pos:start="199:44" pos:end="199:49">pred_y</name></expr></argument>, <argument pos:start="199:52" pos:end="199:65"><expr pos:start="199:52" pos:end="199:65"><name pos:start="199:52" pos:end="199:65">penalty_factor</name></expr></argument>, 

				   <argument pos:start="201:36" pos:end="201:40"><expr pos:start="201:36" pos:end="201:40"><name pos:start="201:36" pos:end="201:40">shift</name></expr></argument>, <argument pos:start="201:43" pos:end="201:45"><expr pos:start="201:43" pos:end="201:45"><name pos:start="201:43" pos:end="201:45">map</name></expr></argument>, <argument pos:start="201:48" pos:end="201:61"><expr pos:start="201:48" pos:end="201:61"><name pos:start="201:48" pos:end="201:61">map_generation</name></expr></argument>, <argument pos:start="201:64" pos:end="201:67"><expr pos:start="201:64" pos:end="201:67"><name pos:start="201:64" pos:end="201:67">size</name></expr></argument>, <argument pos:start="201:70" pos:end="201:70"><expr pos:start="201:70" pos:end="201:70"><name pos:start="201:70" pos:end="201:70">h</name></expr></argument>, <argument pos:start="201:73" pos:end="201:82"><expr pos:start="201:73" pos:end="201:82"><name pos:start="201:73" pos:end="201:82">mv_penalty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="203:5" pos:end="209:84">else<block type="pseudo" pos:start="205:9" pos:end="209:84"><block_content pos:start="205:9" pos:end="209:84">

        <expr_stmt pos:start="205:9" pos:end="209:84"><expr pos:start="205:9" pos:end="209:83"><name pos:start="205:9" pos:end="205:12">dmin</name><operator pos:start="205:13" pos:end="205:13">=</operator> <call pos:start="205:15" pos:end="209:83"><call pos:start="205:15" pos:end="205:40"><name pos:start="205:15" pos:end="205:20">RENAME</name><argument_list pos:start="205:21" pos:end="205:40">(<argument pos:start="205:22" pos:end="205:39"><expr pos:start="205:22" pos:end="205:39"><name pos:start="205:22" pos:end="205:39">var_diamond_search</name></expr></argument>)</argument_list></call><argument_list pos:start="205:41" pos:end="209:83">(<argument pos:start="205:42" pos:end="205:42"><expr pos:start="205:42" pos:end="205:42"><name pos:start="205:42" pos:end="205:42">s</name></expr></argument>, <argument pos:start="205:45" pos:end="205:48"><expr pos:start="205:45" pos:end="205:48"><name pos:start="205:45" pos:end="205:48">best</name></expr></argument>, <argument pos:start="205:51" pos:end="205:54"><expr pos:start="205:51" pos:end="205:54"><name pos:start="205:51" pos:end="205:54">dmin</name></expr></argument>, <argument pos:start="205:57" pos:end="205:64"><expr pos:start="205:57" pos:end="205:64"><name pos:start="205:57" pos:end="205:64">src_data</name></expr></argument>, <argument pos:start="205:67" pos:end="205:74"><expr pos:start="205:67" pos:end="205:74"><name pos:start="205:67" pos:end="205:74">ref_data</name></expr></argument>, <argument pos:start="205:77" pos:end="205:82"><expr pos:start="205:77" pos:end="205:82"><name pos:start="205:77" pos:end="205:82">stride</name></expr></argument>, <argument pos:start="205:85" pos:end="205:92"><expr pos:start="205:85" pos:end="205:92"><name pos:start="205:85" pos:end="205:92">uvstride</name></expr></argument>,

                                   <argument pos:start="207:36" pos:end="207:41"><expr pos:start="207:36" pos:end="207:41"><name pos:start="207:36" pos:end="207:41">pred_x</name></expr></argument>, <argument pos:start="207:44" pos:end="207:49"><expr pos:start="207:44" pos:end="207:49"><name pos:start="207:44" pos:end="207:49">pred_y</name></expr></argument>, <argument pos:start="207:52" pos:end="207:65"><expr pos:start="207:52" pos:end="207:65"><name pos:start="207:52" pos:end="207:65">penalty_factor</name></expr></argument>, 

				   <argument pos:start="209:36" pos:end="209:40"><expr pos:start="209:36" pos:end="209:40"><name pos:start="209:36" pos:end="209:40">shift</name></expr></argument>, <argument pos:start="209:43" pos:end="209:45"><expr pos:start="209:43" pos:end="209:45"><name pos:start="209:43" pos:end="209:45">map</name></expr></argument>, <argument pos:start="209:48" pos:end="209:61"><expr pos:start="209:48" pos:end="209:61"><name pos:start="209:48" pos:end="209:61">map_generation</name></expr></argument>, <argument pos:start="209:64" pos:end="209:67"><expr pos:start="209:64" pos:end="209:67"><name pos:start="209:64" pos:end="209:67">size</name></expr></argument>, <argument pos:start="209:70" pos:end="209:70"><expr pos:start="209:70" pos:end="209:70"><name pos:start="209:70" pos:end="209:70">h</name></expr></argument>, <argument pos:start="209:73" pos:end="209:82"><expr pos:start="209:73" pos:end="209:82"><name pos:start="209:73" pos:end="209:82">mv_penalty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



<comment type="line" pos:start="213:1" pos:end="213:30">//check(best[0],best[1],0, b1)</comment>

    <expr_stmt pos:start="215:5" pos:end="215:21"><expr pos:start="215:5" pos:end="215:20"><operator pos:start="215:5" pos:end="215:5">*</operator><name pos:start="215:6" pos:end="215:11">mx_ptr</name><operator pos:start="215:12" pos:end="215:12">=</operator> <name pos:start="215:14" pos:end="215:20"><name pos:start="215:14" pos:end="215:17">best</name><index pos:start="215:18" pos:end="215:20">[<expr pos:start="215:19" pos:end="215:19"><literal type="number" pos:start="215:19" pos:end="215:19">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:21"><expr pos:start="217:5" pos:end="217:20"><operator pos:start="217:5" pos:end="217:5">*</operator><name pos:start="217:6" pos:end="217:11">my_ptr</name><operator pos:start="217:12" pos:end="217:12">=</operator> <name pos:start="217:14" pos:end="217:20"><name pos:start="217:14" pos:end="217:17">best</name><index pos:start="217:18" pos:end="217:20">[<expr pos:start="217:19" pos:end="217:19"><literal type="number" pos:start="217:19" pos:end="217:19">1</literal></expr>]</index></name></expr>;</expr_stmt>    



<comment type="line" pos:start="221:1" pos:end="221:52">//    printf("%d %d %d \n", best[0], best[1], dmin);</comment>

    <return pos:start="223:5" pos:end="223:16">return <expr pos:start="223:12" pos:end="223:15"><name pos:start="223:12" pos:end="223:15">dmin</name></expr>;</return>

</block_content>}</block></decl></decl_stmt>
</unit>
