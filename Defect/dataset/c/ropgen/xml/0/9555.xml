<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9555.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:33">check_file_unfixed_eof_mmaps</name><parameter_list pos:start="1:34" pos:end="1:39">(<parameter pos:start="1:35" pos:end="1:38"><decl pos:start="1:35" pos:end="1:38"><type pos:start="1:35" pos:end="1:38"><name pos:start="1:35" pos:end="1:38">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:9" pos:end="61:38">

	<decl_stmt pos:start="5:9" pos:end="5:17"><decl pos:start="5:9" pos:end="5:16"><type pos:start="5:9" pos:end="5:14"><name pos:start="5:9" pos:end="5:12">char</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cp</name></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:25"><decl pos:start="7:9" pos:end="7:24"><type pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:16">unsigned</name> <name pos:start="7:18" pos:end="7:20">int</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">p1</name></decl>;</decl_stmt>

	<decl_stmt pos:start="9:9" pos:end="9:20"><decl pos:start="9:9" pos:end="9:19"><type pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:17">uintptr_t</name></type> <name pos:start="9:19" pos:end="9:19">p</name></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:14"><decl pos:start="11:9" pos:end="11:13"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">i</name></decl>;</decl_stmt>



	<expr_stmt pos:start="15:9" pos:end="15:41"><expr pos:start="15:9" pos:end="15:40"><call pos:start="15:9" pos:end="15:40"><name pos:start="15:9" pos:end="15:15">fprintf</name> <argument_list pos:start="15:17" pos:end="15:40">(<argument pos:start="15:18" pos:end="15:23"><expr pos:start="15:18" pos:end="15:23"><name pos:start="15:18" pos:end="15:23">stderr</name></expr></argument>, <argument pos:start="15:26" pos:end="15:29"><expr pos:start="15:26" pos:end="15:29"><literal type="string" pos:start="15:26" pos:end="15:29">"%s"</literal></expr></argument>, <argument pos:start="15:32" pos:end="15:39"><expr pos:start="15:32" pos:end="15:39"><name pos:start="15:32" pos:end="15:39">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<for pos:start="17:9" pos:end="59:9">for <control pos:start="17:13" pos:end="17:34">(<init pos:start="17:14" pos:end="17:19"><expr pos:start="17:14" pos:end="17:18"><name pos:start="17:14" pos:end="17:14">i</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>;</init> <condition pos:start="17:21" pos:end="17:29"><expr pos:start="17:21" pos:end="17:28"><name pos:start="17:21" pos:end="17:21">i</name> <operator pos:start="17:23" pos:end="17:23">&lt;</operator> <literal type="number" pos:start="17:25" pos:end="17:28">0x10</literal></expr>;</condition> <incr pos:start="17:31" pos:end="17:33"><expr pos:start="17:31" pos:end="17:33"><name pos:start="17:31" pos:end="17:31">i</name><operator pos:start="17:32" pos:end="17:33">++</operator></expr></incr>)</control>

	<block pos:start="19:9" pos:end="59:9">{<block_content pos:start="21:17" pos:end="57:38">

		<expr_stmt pos:start="21:17" pos:end="27:65"><expr pos:start="21:17" pos:end="27:64"><name pos:start="21:17" pos:end="21:18">p1</name> <operator pos:start="21:20" pos:end="21:20">=</operator> <call pos:start="21:22" pos:end="27:64"><name pos:start="21:22" pos:end="21:25">mmap</name><argument_list pos:start="21:26" pos:end="27:64">(<argument pos:start="21:27" pos:end="21:30"><expr pos:start="21:27" pos:end="21:30"><name pos:start="21:27" pos:end="21:30">NULL</name></expr></argument>, <argument pos:start="21:33" pos:end="21:40"><expr pos:start="21:33" pos:end="21:40"><name pos:start="21:33" pos:end="21:40">pagesize</name></expr></argument>, <argument pos:start="21:43" pos:end="21:51"><expr pos:start="21:43" pos:end="21:51"><name pos:start="21:43" pos:end="21:51">PROT_READ</name></expr></argument>, 

			  <argument pos:start="23:27" pos:end="23:37"><expr pos:start="23:27" pos:end="23:37"><name pos:start="23:27" pos:end="23:37">MAP_PRIVATE</name></expr></argument>, 

			  <argument pos:start="25:27" pos:end="25:33"><expr pos:start="25:27" pos:end="25:33"><name pos:start="25:27" pos:end="25:33">test_fd</name></expr></argument>, 

			  <argument pos:start="27:27" pos:end="27:63"><expr pos:start="27:27" pos:end="27:63"><operator pos:start="27:27" pos:end="27:27">(</operator><name pos:start="27:28" pos:end="27:37">test_fsize</name> <operator pos:start="27:39" pos:end="27:39">-</operator> <sizeof pos:start="27:41" pos:end="27:46">sizeof <name/></sizeof>*<name pos:start="27:49" pos:end="27:50">p1</name><operator pos:start="27:51" pos:end="27:51">)</operator> <operator pos:start="27:53" pos:end="27:53">&amp;</operator> <operator pos:start="27:55" pos:end="27:55">~</operator><name pos:start="27:56" pos:end="27:63">pagemask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



		<expr_stmt pos:start="31:17" pos:end="31:47"><expr pos:start="31:17" pos:end="31:46"><call pos:start="31:17" pos:end="31:46"><name pos:start="31:17" pos:end="31:27">fail_unless</name> <argument_list pos:start="31:29" pos:end="31:46">(<argument pos:start="31:30" pos:end="31:45"><expr pos:start="31:30" pos:end="31:45"><name pos:start="31:30" pos:end="31:31">p1</name> <operator pos:start="31:33" pos:end="31:34">!=</operator> <name pos:start="31:36" pos:end="31:45">MAP_FAILED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



		<comment type="block" pos:start="35:17" pos:end="37:43">/* Make sure we get pages aligned with the pagesize. The

		   target expects this.  */</comment>

		<expr_stmt pos:start="39:17" pos:end="39:35"><expr pos:start="39:17" pos:end="39:34"><name pos:start="39:17" pos:end="39:17">p</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <operator pos:start="39:21" pos:end="39:21">(</operator><name pos:start="39:22" pos:end="39:30">uintptr_t</name><operator pos:start="39:31" pos:end="39:31">)</operator> <name pos:start="39:33" pos:end="39:34">p1</name></expr>;</expr_stmt>

		<expr_stmt pos:start="41:17" pos:end="41:50"><expr pos:start="41:17" pos:end="41:49"><call pos:start="41:17" pos:end="41:49"><name pos:start="41:17" pos:end="41:27">fail_unless</name> <argument_list pos:start="41:29" pos:end="41:49">(<argument pos:start="41:30" pos:end="41:48"><expr pos:start="41:30" pos:end="41:48"><operator pos:start="41:30" pos:end="41:30">(</operator><name pos:start="41:31" pos:end="41:31">p</name> <operator pos:start="41:33" pos:end="41:33">&amp;</operator> <name pos:start="41:35" pos:end="41:42">pagemask</name><operator pos:start="41:43" pos:end="41:43">)</operator> <operator pos:start="41:45" pos:end="41:46">==</operator> <literal type="number" pos:start="41:48" pos:end="41:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="block" pos:start="43:17" pos:end="43:68">/* Verify that the file maps was made correctly.  */</comment>

		<expr_stmt pos:start="45:17" pos:end="47:74"><expr pos:start="45:17" pos:end="47:73"><call pos:start="45:17" pos:end="47:73"><name pos:start="45:17" pos:end="45:27">fail_unless</name> <argument_list pos:start="45:29" pos:end="47:73">(<argument pos:start="45:30" pos:end="47:72"><expr pos:start="45:30" pos:end="47:72"><name pos:start="45:30" pos:end="45:64"><name pos:start="45:30" pos:end="45:31">p1</name><index pos:start="45:32" pos:end="45:64">[<expr pos:start="45:33" pos:end="45:64"><operator pos:start="45:33" pos:end="45:33">(</operator><name pos:start="45:34" pos:end="45:43">test_fsize</name> <operator pos:start="45:45" pos:end="45:45">&amp;</operator> <name pos:start="45:47" pos:end="45:54">pagemask</name><operator pos:start="45:55" pos:end="45:55">)</operator> <operator pos:start="45:57" pos:end="45:57">/</operator> <sizeof pos:start="45:59" pos:end="45:64">sizeof <name/></sizeof></expr></index></name>*<name pos:start="45:67" pos:end="45:68">p1</name> <operator pos:start="45:70" pos:end="45:70">-</operator> <literal type="number" pos:start="45:72" pos:end="45:72">1</literal>]

			     <operator pos:start="47:30" pos:end="47:31">==</operator> <operator pos:start="47:33" pos:end="47:33">(</operator><operator pos:start="47:34" pos:end="47:34">(</operator><name pos:start="47:35" pos:end="47:44">test_fsize</name> <operator pos:start="47:46" pos:end="47:46">-</operator> <sizeof pos:start="47:48" pos:end="47:53">sizeof <name/></sizeof>*<name pos:start="47:56" pos:end="47:57">p1</name><operator pos:start="47:58" pos:end="47:58">)</operator> <operator pos:start="47:60" pos:end="47:60">/</operator> <sizeof pos:start="47:62" pos:end="47:67">sizeof <name/></sizeof>*<name pos:start="47:70" pos:end="47:71">p1</name><operator pos:start="47:72" pos:end="47:72">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



		<comment type="block" pos:start="51:17" pos:end="51:76">/* Verify that the end of page is accessable and zeroed.  */</comment>

		<expr_stmt pos:start="53:17" pos:end="53:33"><expr pos:start="53:17" pos:end="53:32"><name pos:start="53:17" pos:end="53:18">cp</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <operator pos:start="53:22" pos:end="53:22">(</operator><name pos:start="53:23" pos:end="53:26">void</name> <operator pos:start="53:28" pos:end="53:28">*</operator><operator pos:start="53:29" pos:end="53:29">)</operator> <name pos:start="53:31" pos:end="53:32">p1</name></expr>;</expr_stmt>

		<expr_stmt pos:start="55:17" pos:end="55:52"><expr pos:start="55:17" pos:end="55:51"><call pos:start="55:17" pos:end="55:51"><name pos:start="55:17" pos:end="55:27">fail_unless</name> <argument_list pos:start="55:29" pos:end="55:51">(<argument pos:start="55:30" pos:end="55:50"><expr pos:start="55:30" pos:end="55:50"><name pos:start="55:30" pos:end="55:45"><name pos:start="55:30" pos:end="55:31">cp</name><index pos:start="55:32" pos:end="55:45">[<expr pos:start="55:33" pos:end="55:44"><name pos:start="55:33" pos:end="55:40">pagesize</name> <operator pos:start="55:42" pos:end="55:42">-</operator> <literal type="number" pos:start="55:44" pos:end="55:44">4</literal></expr>]</index></name> <operator pos:start="55:47" pos:end="55:48">==</operator> <literal type="number" pos:start="55:50" pos:end="55:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="57:17" pos:end="57:38"><expr pos:start="57:17" pos:end="57:37"><call pos:start="57:17" pos:end="57:37"><name pos:start="57:17" pos:end="57:22">munmap</name> <argument_list pos:start="57:24" pos:end="57:37">(<argument pos:start="57:25" pos:end="57:26"><expr pos:start="57:25" pos:end="57:26"><name pos:start="57:25" pos:end="57:26">p1</name></expr></argument>, <argument pos:start="57:29" pos:end="57:36"><expr pos:start="57:29" pos:end="57:36"><name pos:start="57:29" pos:end="57:36">pagesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></for>

	<expr_stmt pos:start="61:9" pos:end="61:38"><expr pos:start="61:9" pos:end="61:37"><call pos:start="61:9" pos:end="61:37"><name pos:start="61:9" pos:end="61:15">fprintf</name> <argument_list pos:start="61:17" pos:end="61:37">(<argument pos:start="61:18" pos:end="61:23"><expr pos:start="61:18" pos:end="61:23"><name pos:start="61:18" pos:end="61:23">stderr</name></expr></argument>, <argument pos:start="61:26" pos:end="61:36"><expr pos:start="61:26" pos:end="61:36"><literal type="string" pos:start="61:26" pos:end="61:36">" passed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
