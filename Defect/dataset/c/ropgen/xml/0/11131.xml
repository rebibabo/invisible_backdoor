<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11131.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">conditional_interrupt</name><parameter_list pos:start="1:34" pos:end="1:52">(<parameter pos:start="1:35" pos:end="1:51"><decl pos:start="1:35" pos:end="1:51"><type pos:start="1:35" pos:end="1:49"><name pos:start="1:35" pos:end="1:47">DBDMA_channel</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">ch</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:5">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">dbdma_cmd</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:22">current</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><operator pos:start="5:26" pos:end="5:26">&amp;</operator><name pos:start="5:27" pos:end="5:37"><name pos:start="5:27" pos:end="5:28">ch</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:37">current</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:17">intr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:21">sel_mask</name></decl>, <decl pos:start="9:24" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:24" pos:end="9:32">sel_value</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:19">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">cond</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><call pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:17">DBDMA_DPRINTF</name><argument_list pos:start="17:18" pos:end="17:44">(<argument pos:start="17:19" pos:end="17:43"><expr pos:start="17:19" pos:end="17:43"><literal type="string" pos:start="17:19" pos:end="17:43">"conditional_interrupt\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:53"><expr pos:start="21:5" pos:end="21:52"><name pos:start="21:5" pos:end="21:8">intr</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:40"><name pos:start="21:12" pos:end="21:22">le16_to_cpu</name><argument_list pos:start="21:23" pos:end="21:40">(<argument pos:start="21:24" pos:end="21:39"><expr pos:start="21:24" pos:end="21:39"><name pos:start="21:24" pos:end="21:39"><name pos:start="21:24" pos:end="21:30">current</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:39">command</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:42" pos:end="21:42">&amp;</operator> <name pos:start="21:44" pos:end="21:52">INTR_MASK</name></expr>;</expr_stmt>



    <switch pos:start="25:5" pos:end="37:5">switch<condition pos:start="25:11" pos:end="25:16">(<expr pos:start="25:12" pos:end="25:15"><name pos:start="25:12" pos:end="25:15">intr</name></expr>)</condition> <block pos:start="25:18" pos:end="37:5">{<block_content pos:start="27:5" pos:end="35:15">

    <case pos:start="27:5" pos:end="27:20">case <expr pos:start="27:10" pos:end="27:19"><name pos:start="27:10" pos:end="27:19">INTR_NEVER</name></expr>:</case>  <comment type="block" pos:start="27:23" pos:end="27:43">/* don't interrupt */</comment>

        <return pos:start="29:9" pos:end="29:15">return;</return>

    <case pos:start="31:5" pos:end="31:21">case <expr pos:start="31:10" pos:end="31:20"><name pos:start="31:10" pos:end="31:20">INTR_ALWAYS</name></expr>:</case> <comment type="block" pos:start="31:23" pos:end="31:44">/* always interrupt */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><call pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:22">qemu_irq_raise</name><argument_list pos:start="33:23" pos:end="33:31">(<argument pos:start="33:24" pos:end="33:30"><expr pos:start="33:24" pos:end="33:30"><name pos:start="33:24" pos:end="33:30"><name pos:start="33:24" pos:end="33:25">ch</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:30">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="41:5" pos:end="41:59"><expr pos:start="41:5" pos:end="41:58"><name pos:start="41:5" pos:end="41:10">status</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:48"><name pos:start="41:14" pos:end="41:24">be32_to_cpu</name><argument_list pos:start="41:25" pos:end="41:48">(<argument pos:start="41:26" pos:end="41:47"><expr pos:start="41:26" pos:end="41:47"><name pos:start="41:26" pos:end="41:47"><name pos:start="41:26" pos:end="41:27">ch</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:33">regs</name><index pos:start="41:34" pos:end="41:47">[<expr pos:start="41:35" pos:end="41:46"><name pos:start="41:35" pos:end="41:46">DBDMA_STATUS</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="41:50" pos:end="41:50">&amp;</operator> <name pos:start="41:52" pos:end="41:58">DEVSTAT</name></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:68"><expr pos:start="45:5" pos:end="45:67"><name pos:start="45:5" pos:end="45:12">sel_mask</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <operator pos:start="45:16" pos:end="45:16">(</operator><call pos:start="45:17" pos:end="45:53"><name pos:start="45:17" pos:end="45:27">be32_to_cpu</name><argument_list pos:start="45:28" pos:end="45:53">(<argument pos:start="45:29" pos:end="45:52"><expr pos:start="45:29" pos:end="45:52"><name pos:start="45:29" pos:end="45:52"><name pos:start="45:29" pos:end="45:30">ch</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:36">regs</name><index pos:start="45:37" pos:end="45:52">[<expr pos:start="45:38" pos:end="45:51"><name pos:start="45:38" pos:end="45:51">DBDMA_INTR_SEL</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="45:55" pos:end="45:56">&gt;&gt;</operator> <literal type="number" pos:start="45:58" pos:end="45:59">16</literal><operator pos:start="45:60" pos:end="45:60">)</operator> <operator pos:start="45:62" pos:end="45:62">&amp;</operator> <literal type="number" pos:start="45:64" pos:end="45:67">0x0f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:61"><expr pos:start="47:5" pos:end="47:60"><name pos:start="47:5" pos:end="47:13">sel_value</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="47:53"><name pos:start="47:17" pos:end="47:27">be32_to_cpu</name><argument_list pos:start="47:28" pos:end="47:53">(<argument pos:start="47:29" pos:end="47:52"><expr pos:start="47:29" pos:end="47:52"><name pos:start="47:29" pos:end="47:52"><name pos:start="47:29" pos:end="47:30">ch</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:36">regs</name><index pos:start="47:37" pos:end="47:52">[<expr pos:start="47:38" pos:end="47:51"><name pos:start="47:38" pos:end="47:51">DBDMA_INTR_SEL</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="47:55" pos:end="47:55">&amp;</operator> <literal type="number" pos:start="47:57" pos:end="47:60">0x0f</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:57"><expr pos:start="51:5" pos:end="51:56"><name pos:start="51:5" pos:end="51:8">cond</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <operator pos:start="51:12" pos:end="51:12">(</operator><name pos:start="51:13" pos:end="51:18">status</name> <operator pos:start="51:20" pos:end="51:20">&amp;</operator> <name pos:start="51:22" pos:end="51:29">sel_mask</name><operator pos:start="51:30" pos:end="51:30">)</operator> <operator pos:start="51:32" pos:end="51:33">==</operator> <operator pos:start="51:35" pos:end="51:35">(</operator><name pos:start="51:36" pos:end="51:44">sel_value</name> <operator pos:start="51:46" pos:end="51:46">&amp;</operator> <name pos:start="51:48" pos:end="51:55">sel_mask</name><operator pos:start="51:56" pos:end="51:56">)</operator></expr>;</expr_stmt>



    <switch pos:start="55:5" pos:end="73:5">switch<condition pos:start="55:11" pos:end="55:16">(<expr pos:start="55:12" pos:end="55:15"><name pos:start="55:12" pos:end="55:15">intr</name></expr>)</condition> <block pos:start="55:18" pos:end="73:5">{<block_content pos:start="57:5" pos:end="71:15">

    <case pos:start="57:5" pos:end="57:20">case <expr pos:start="57:10" pos:end="57:19"><name pos:start="57:10" pos:end="57:19">INTR_IFSET</name></expr>:</case>  <comment type="block" pos:start="57:23" pos:end="57:54">/* intr if condition bit is 1 */</comment>

        <if_stmt pos:start="59:9" pos:end="61:36"><if pos:start="59:9" pos:end="61:36">if <condition pos:start="59:12" pos:end="59:17">(<expr pos:start="59:13" pos:end="59:16"><name pos:start="59:13" pos:end="59:16">cond</name></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:36"><block_content pos:start="61:13" pos:end="61:36">

            <expr_stmt pos:start="61:13" pos:end="61:36"><expr pos:start="61:13" pos:end="61:35"><call pos:start="61:13" pos:end="61:35"><name pos:start="61:13" pos:end="61:26">qemu_irq_raise</name><argument_list pos:start="61:27" pos:end="61:35">(<argument pos:start="61:28" pos:end="61:34"><expr pos:start="61:28" pos:end="61:34"><name pos:start="61:28" pos:end="61:34"><name pos:start="61:28" pos:end="61:29">ch</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:34">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="63:9" pos:end="63:15">return;</return>

    <case pos:start="65:5" pos:end="65:20">case <expr pos:start="65:10" pos:end="65:19"><name pos:start="65:10" pos:end="65:19">INTR_IFCLR</name></expr>:</case>  <comment type="block" pos:start="65:23" pos:end="65:54">/* intr if condition bit is 0 */</comment>

        <if_stmt pos:start="67:9" pos:end="69:36"><if pos:start="67:9" pos:end="69:36">if <condition pos:start="67:12" pos:end="67:18">(<expr pos:start="67:13" pos:end="67:17"><operator pos:start="67:13" pos:end="67:13">!</operator><name pos:start="67:14" pos:end="67:17">cond</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:36"><block_content pos:start="69:13" pos:end="69:36">

            <expr_stmt pos:start="69:13" pos:end="69:36"><expr pos:start="69:13" pos:end="69:35"><call pos:start="69:13" pos:end="69:35"><name pos:start="69:13" pos:end="69:26">qemu_irq_raise</name><argument_list pos:start="69:27" pos:end="69:35">(<argument pos:start="69:28" pos:end="69:34"><expr pos:start="69:28" pos:end="69:34"><name pos:start="69:28" pos:end="69:34"><name pos:start="69:28" pos:end="69:29">ch</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:34">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="71:9" pos:end="71:15">return;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
