<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25092.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:19">void</name></type> <name pos:start="1:21" pos:end="1:44">nvenc_setup_rate_control</name><parameter_list pos:start="1:45" pos:end="1:67">(<parameter pos:start="1:46" pos:end="1:66"><decl pos:start="1:46" pos:end="1:66"><type pos:start="1:46" pos:end="1:61"><name pos:start="1:46" pos:end="1:59">AVCodecContext</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:66">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="193:1">{<block_content pos:start="5:5" pos:end="191:65">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">NvencContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">ctx</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="17:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:28">(<expr pos:start="9:9" pos:end="9:27"><name pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:13">avctx</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:23">bit_rate</name></name> <operator pos:start="9:25" pos:end="9:25">&gt;</operator> <literal type="number" pos:start="9:27" pos:end="9:27">0</literal></expr>)</condition> <block pos:start="9:30" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:69">

        <expr_stmt pos:start="11:9" pos:end="11:69"><expr pos:start="11:9" pos:end="11:68"><name pos:start="11:9" pos:end="11:50"><name pos:start="11:9" pos:end="11:11">ctx</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:26">encode_config</name><operator pos:start="11:27" pos:end="11:27">.</operator><name pos:start="11:28" pos:end="11:35">rcParams</name><operator pos:start="11:36" pos:end="11:36">.</operator><name pos:start="11:37" pos:end="11:50">averageBitRate</name></name> <operator pos:start="11:52" pos:end="11:52">=</operator> <name pos:start="11:54" pos:end="11:68"><name pos:start="11:54" pos:end="11:58">avctx</name><operator pos:start="11:59" pos:end="11:60">-&gt;</operator><name pos:start="11:61" pos:end="11:68">bit_rate</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="13:7" pos:end="17:5">else if <condition pos:start="13:15" pos:end="13:62">(<expr pos:start="13:16" pos:end="13:61"><name pos:start="13:16" pos:end="13:57"><name pos:start="13:16" pos:end="13:18">ctx</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:33">encode_config</name><operator pos:start="13:34" pos:end="13:34">.</operator><name pos:start="13:35" pos:end="13:42">rcParams</name><operator pos:start="13:43" pos:end="13:43">.</operator><name pos:start="13:44" pos:end="13:57">averageBitRate</name></name> <operator pos:start="13:59" pos:end="13:59">&gt;</operator> <literal type="number" pos:start="13:61" pos:end="13:61">0</literal></expr>)</condition> <block pos:start="13:64" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:92">

        <expr_stmt pos:start="15:9" pos:end="15:92"><expr pos:start="15:9" pos:end="15:91"><name pos:start="15:9" pos:end="15:46"><name pos:start="15:9" pos:end="15:11">ctx</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:26">encode_config</name><operator pos:start="15:27" pos:end="15:27">.</operator><name pos:start="15:28" pos:end="15:35">rcParams</name><operator pos:start="15:36" pos:end="15:36">.</operator><name pos:start="15:37" pos:end="15:46">maxBitRate</name></name> <operator pos:start="15:48" pos:end="15:48">=</operator> <name pos:start="15:50" pos:end="15:91"><name pos:start="15:50" pos:end="15:52">ctx</name><operator pos:start="15:53" pos:end="15:54">-&gt;</operator><name pos:start="15:55" pos:end="15:67">encode_config</name><operator pos:start="15:68" pos:end="15:68">.</operator><name pos:start="15:69" pos:end="15:76">rcParams</name><operator pos:start="15:77" pos:end="15:77">.</operator><name pos:start="15:78" pos:end="15:91">averageBitRate</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="23:68"><if pos:start="21:5" pos:end="23:68">if <condition pos:start="21:8" pos:end="21:31">(<expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:13">avctx</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:26">rc_max_rate</name></name> <operator pos:start="21:28" pos:end="21:28">&gt;</operator> <literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:68"><block_content pos:start="23:9" pos:end="23:68">

        <expr_stmt pos:start="23:9" pos:end="23:68"><expr pos:start="23:9" pos:end="23:67"><name pos:start="23:9" pos:end="23:46"><name pos:start="23:9" pos:end="23:11">ctx</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:26">encode_config</name><operator pos:start="23:27" pos:end="23:27">.</operator><name pos:start="23:28" pos:end="23:35">rcParams</name><operator pos:start="23:36" pos:end="23:36">.</operator><name pos:start="23:37" pos:end="23:46">maxBitRate</name></name> <operator pos:start="23:48" pos:end="23:48">=</operator> <name pos:start="23:50" pos:end="23:67"><name pos:start="23:50" pos:end="23:54">avctx</name><operator pos:start="23:55" pos:end="23:56">-&gt;</operator><name pos:start="23:57" pos:end="23:67">rc_max_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="71:5"><if pos:start="27:5" pos:end="71:5">if <condition pos:start="27:8" pos:end="27:20">(<expr pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">ctx</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:15">rc</name></name> <operator pos:start="27:17" pos:end="27:17">&lt;</operator> <literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>)</condition> <block pos:start="27:22" pos:end="71:5">{<block_content pos:start="29:9" pos:end="69:9">

        <if_stmt pos:start="29:9" pos:end="31:29"><if pos:start="29:9" pos:end="31:29">if <condition pos:start="29:12" pos:end="29:40">(<expr pos:start="29:13" pos:end="29:39"><name pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:15">ctx</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:22">flags</name></name> <operator pos:start="29:24" pos:end="29:24">&amp;</operator> <name pos:start="29:26" pos:end="29:39">NVENC_ONE_PASS</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:29"><block_content pos:start="31:13" pos:end="31:29">

            <expr_stmt pos:start="31:13" pos:end="31:29"><expr pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:15">ctx</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:24">twopass</name></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <literal type="number" pos:start="31:28" pos:end="31:28">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="35:29"><if pos:start="33:9" pos:end="35:29">if <condition pos:start="33:12" pos:end="33:42">(<expr pos:start="33:13" pos:end="33:41"><name pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:15">ctx</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:22">flags</name></name> <operator pos:start="33:24" pos:end="33:24">&amp;</operator> <name pos:start="33:26" pos:end="33:41">NVENC_TWO_PASSES</name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:29"><block_content pos:start="35:13" pos:end="35:29">

            <expr_stmt pos:start="35:13" pos:end="35:29"><expr pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:15">ctx</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:24">twopass</name></name> <operator pos:start="35:26" pos:end="35:26">=</operator> <literal type="number" pos:start="35:28" pos:end="35:28">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="39:9" pos:end="41:64"><if pos:start="39:9" pos:end="41:64">if <condition pos:start="39:12" pos:end="39:29">(<expr pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:15">ctx</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:24">twopass</name></name> <operator pos:start="39:26" pos:end="39:26">&lt;</operator> <literal type="number" pos:start="39:28" pos:end="39:28">0</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:64"><block_content pos:start="41:13" pos:end="41:64">

            <expr_stmt pos:start="41:13" pos:end="41:64"><expr pos:start="41:13" pos:end="41:63"><name pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:15">ctx</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:24">twopass</name></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <operator pos:start="41:28" pos:end="41:28">(</operator><name pos:start="41:29" pos:end="41:38"><name pos:start="41:29" pos:end="41:31">ctx</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:38">flags</name></name> <operator pos:start="41:40" pos:end="41:40">&amp;</operator> <name pos:start="41:42" pos:end="41:57">NVENC_LOWLATENCY</name><operator pos:start="41:58" pos:end="41:58">)</operator> <operator pos:start="41:60" pos:end="41:61">!=</operator> <literal type="number" pos:start="41:63" pos:end="41:63">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="45:9" pos:end="69:9"><if pos:start="45:9" pos:end="57:9">if <condition pos:start="45:12" pos:end="45:21">(<expr pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:15">ctx</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:20">cbr</name></name></expr>)</condition> <block pos:start="45:23" pos:end="57:9">{<block_content pos:start="47:13" pos:end="55:13">

            <if_stmt pos:start="47:13" pos:end="55:13"><if pos:start="47:13" pos:end="51:13">if <condition pos:start="47:16" pos:end="47:29">(<expr pos:start="47:17" pos:end="47:28"><name pos:start="47:17" pos:end="47:28"><name pos:start="47:17" pos:end="47:19">ctx</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:28">twopass</name></name></expr>)</condition> <block pos:start="47:31" pos:end="51:13">{<block_content pos:start="49:17" pos:end="49:58">

                <expr_stmt pos:start="49:17" pos:end="49:58"><expr pos:start="49:17" pos:end="49:57"><name pos:start="49:17" pos:end="49:23"><name pos:start="49:17" pos:end="49:19">ctx</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:23">rc</name></name> <operator pos:start="49:25" pos:end="49:25">=</operator> <name pos:start="49:27" pos:end="49:57">NV_ENC_PARAMS_RC_2_PASS_QUALITY</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="51:15" pos:end="55:13">else <block pos:start="51:20" pos:end="55:13">{<block_content pos:start="53:17" pos:end="53:47">

                <expr_stmt pos:start="53:17" pos:end="53:47"><expr pos:start="53:17" pos:end="53:46"><name pos:start="53:17" pos:end="53:23"><name pos:start="53:17" pos:end="53:19">ctx</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:23">rc</name></name> <operator pos:start="53:25" pos:end="53:25">=</operator> <name pos:start="53:27" pos:end="53:46">NV_ENC_PARAMS_RC_CBR</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="57:11" pos:end="61:9">else if <condition pos:start="57:19" pos:end="57:45">(<expr pos:start="57:20" pos:end="57:44"><name pos:start="57:20" pos:end="57:40"><name pos:start="57:20" pos:end="57:24">avctx</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:40">global_quality</name></name> <operator pos:start="57:42" pos:end="57:42">&gt;</operator> <literal type="number" pos:start="57:44" pos:end="57:44">0</literal></expr>)</condition> <block pos:start="57:47" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:47">

            <expr_stmt pos:start="59:13" pos:end="59:47"><expr pos:start="59:13" pos:end="59:46"><name pos:start="59:13" pos:end="59:19"><name pos:start="59:13" pos:end="59:15">ctx</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:19">rc</name></name> <operator pos:start="59:21" pos:end="59:21">=</operator> <name pos:start="59:23" pos:end="59:46">NV_ENC_PARAMS_RC_CONSTQP</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="61:11" pos:end="65:9">else if <condition pos:start="61:19" pos:end="61:32">(<expr pos:start="61:20" pos:end="61:31"><name pos:start="61:20" pos:end="61:31"><name pos:start="61:20" pos:end="61:22">ctx</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:31">twopass</name></name></expr>)</condition> <block pos:start="61:34" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:50">

            <expr_stmt pos:start="63:13" pos:end="63:50"><expr pos:start="63:13" pos:end="63:49"><name pos:start="63:13" pos:end="63:19"><name pos:start="63:13" pos:end="63:15">ctx</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:19">rc</name></name> <operator pos:start="63:21" pos:end="63:21">=</operator> <name pos:start="63:23" pos:end="63:49">NV_ENC_PARAMS_RC_2_PASS_VBR</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="65:11" pos:end="69:9">else if <condition pos:start="65:19" pos:end="65:56">(<expr pos:start="65:20" pos:end="65:55"><name pos:start="65:20" pos:end="65:30"><name pos:start="65:20" pos:end="65:24">avctx</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:30">qmin</name></name> <operator pos:start="65:32" pos:end="65:33">&gt;=</operator> <literal type="number" pos:start="65:35" pos:end="65:35">0</literal> <operator pos:start="65:37" pos:end="65:38">&amp;&amp;</operator> <name pos:start="65:40" pos:end="65:50"><name pos:start="65:40" pos:end="65:44">avctx</name><operator pos:start="65:45" pos:end="65:46">-&gt;</operator><name pos:start="65:47" pos:end="65:50">qmax</name></name> <operator pos:start="65:52" pos:end="65:53">&gt;=</operator> <literal type="number" pos:start="65:55" pos:end="65:55">0</literal></expr>)</condition> <block pos:start="65:58" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:49">

            <expr_stmt pos:start="67:13" pos:end="67:49"><expr pos:start="67:13" pos:end="67:48"><name pos:start="67:13" pos:end="67:19"><name pos:start="67:13" pos:end="67:15">ctx</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:19">rc</name></name> <operator pos:start="67:21" pos:end="67:21">=</operator> <name pos:start="67:23" pos:end="67:48">NV_ENC_PARAMS_RC_VBR_MINQP</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="89:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:36">(<expr pos:start="75:9" pos:end="75:35"><name pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:11">ctx</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:18">flags</name></name> <operator pos:start="75:20" pos:end="75:20">&amp;</operator> <name pos:start="75:22" pos:end="75:35">NVENC_LOSSLESS</name></expr>)</condition> <block pos:start="75:38" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:28">

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><call pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:20">set_lossless</name><argument_list pos:start="77:21" pos:end="77:27">(<argument pos:start="77:22" pos:end="77:26"><expr pos:start="77:22" pos:end="77:26"><name pos:start="77:22" pos:end="77:26">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="79:7" pos:end="83:5">else if <condition pos:start="79:15" pos:end="79:28">(<expr pos:start="79:16" pos:end="79:27"><name pos:start="79:16" pos:end="79:22"><name pos:start="79:16" pos:end="79:18">ctx</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:22">rc</name></name> <operator pos:start="79:24" pos:end="79:25">&gt;=</operator> <literal type="number" pos:start="79:27" pos:end="79:27">0</literal></expr>)</condition> <block pos:start="79:30" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:43">

        <expr_stmt pos:start="81:9" pos:end="81:43"><expr pos:start="81:9" pos:end="81:42"><call pos:start="81:9" pos:end="81:42"><name pos:start="81:9" pos:end="81:35">nvenc_override_rate_control</name><argument_list pos:start="81:36" pos:end="81:42">(<argument pos:start="81:37" pos:end="81:41"><expr pos:start="81:37" pos:end="81:41"><name pos:start="81:37" pos:end="81:41">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="83:7" pos:end="89:5">else <block pos:start="83:12" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:23">

        <expr_stmt pos:start="85:9" pos:end="85:75"><expr pos:start="85:9" pos:end="85:74"><name pos:start="85:9" pos:end="85:51"><name pos:start="85:9" pos:end="85:11">ctx</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:26">encode_config</name><operator pos:start="85:27" pos:end="85:27">.</operator><name pos:start="85:28" pos:end="85:35">rcParams</name><operator pos:start="85:36" pos:end="85:36">.</operator><name pos:start="85:37" pos:end="85:51">rateControlMode</name></name> <operator pos:start="85:53" pos:end="85:53">=</operator> <name pos:start="85:55" pos:end="85:74">NV_ENC_PARAMS_RC_VBR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:23"><expr pos:start="87:9" pos:end="87:22"><call pos:start="87:9" pos:end="87:22"><name pos:start="87:9" pos:end="87:15">set_vbr</name><argument_list pos:start="87:16" pos:end="87:22">(<argument pos:start="87:17" pos:end="87:21"><expr pos:start="87:17" pos:end="87:21"><name pos:start="87:17" pos:end="87:21">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="93:5" pos:end="101:5"><if pos:start="93:5" pos:end="97:5">if <condition pos:start="93:8" pos:end="93:34">(<expr pos:start="93:9" pos:end="93:33"><name pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:13">avctx</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:29">rc_buffer_size</name></name> <operator pos:start="93:31" pos:end="93:31">&gt;</operator> <literal type="number" pos:start="93:33" pos:end="93:33">0</literal></expr>)</condition> <block pos:start="93:36" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:74">

        <expr_stmt pos:start="95:9" pos:end="95:74"><expr pos:start="95:9" pos:end="95:73"><name pos:start="95:9" pos:end="95:49"><name pos:start="95:9" pos:end="95:11">ctx</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:26">encode_config</name><operator pos:start="95:27" pos:end="95:27">.</operator><name pos:start="95:28" pos:end="95:35">rcParams</name><operator pos:start="95:36" pos:end="95:36">.</operator><name pos:start="95:37" pos:end="95:49">vbvBufferSize</name></name> <operator pos:start="95:51" pos:end="95:51">=</operator> <name pos:start="95:53" pos:end="95:73"><name pos:start="95:53" pos:end="95:57">avctx</name><operator pos:start="95:58" pos:end="95:59">-&gt;</operator><name pos:start="95:60" pos:end="95:73">rc_buffer_size</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="97:7" pos:end="101:5">else if <condition pos:start="97:15" pos:end="97:62">(<expr pos:start="97:16" pos:end="97:61"><name pos:start="97:16" pos:end="97:57"><name pos:start="97:16" pos:end="97:18">ctx</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:33">encode_config</name><operator pos:start="97:34" pos:end="97:34">.</operator><name pos:start="97:35" pos:end="97:42">rcParams</name><operator pos:start="97:43" pos:end="97:43">.</operator><name pos:start="97:44" pos:end="97:57">averageBitRate</name></name> <operator pos:start="97:59" pos:end="97:59">&gt;</operator> <literal type="number" pos:start="97:61" pos:end="97:61">0</literal></expr>)</condition> <block pos:start="97:64" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:99">

        <expr_stmt pos:start="99:9" pos:end="99:99"><expr pos:start="99:9" pos:end="99:98"><name pos:start="99:9" pos:end="99:49"><name pos:start="99:9" pos:end="99:11">ctx</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:26">encode_config</name><operator pos:start="99:27" pos:end="99:27">.</operator><name pos:start="99:28" pos:end="99:35">rcParams</name><operator pos:start="99:36" pos:end="99:36">.</operator><name pos:start="99:37" pos:end="99:49">vbvBufferSize</name></name> <operator pos:start="99:51" pos:end="99:51">=</operator> <literal type="number" pos:start="99:53" pos:end="99:53">2</literal> <operator pos:start="99:55" pos:end="99:55">*</operator> <name pos:start="99:57" pos:end="99:98"><name pos:start="99:57" pos:end="99:59">ctx</name><operator pos:start="99:60" pos:end="99:61">-&gt;</operator><name pos:start="99:62" pos:end="99:74">encode_config</name><operator pos:start="99:75" pos:end="99:75">.</operator><name pos:start="99:76" pos:end="99:83">rcParams</name><operator pos:start="99:84" pos:end="99:84">.</operator><name pos:start="99:85" pos:end="99:98">averageBitRate</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="105:5" pos:end="113:5"><if pos:start="105:5" pos:end="113:5">if <condition pos:start="105:8" pos:end="105:16">(<expr pos:start="105:9" pos:end="105:15"><name pos:start="105:9" pos:end="105:15"><name pos:start="105:9" pos:end="105:11">ctx</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:15">aq</name></name></expr>)</condition> <block pos:start="105:18" pos:end="113:5">{<block_content pos:start="107:9" pos:end="111:55">

        <expr_stmt pos:start="107:9" pos:end="107:51"><expr pos:start="107:9" pos:end="107:50"><name pos:start="107:9" pos:end="107:44"><name pos:start="107:9" pos:end="107:11">ctx</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:26">encode_config</name><operator pos:start="107:27" pos:end="107:27">.</operator><name pos:start="107:28" pos:end="107:35">rcParams</name><operator pos:start="107:36" pos:end="107:36">.</operator><name pos:start="107:37" pos:end="107:44">enableAQ</name></name>   <operator pos:start="107:48" pos:end="107:48">=</operator> <literal type="number" pos:start="107:50" pos:end="107:50">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:66"><expr pos:start="109:9" pos:end="109:65"><name pos:start="109:9" pos:end="109:46"><name pos:start="109:9" pos:end="109:11">ctx</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:26">encode_config</name><operator pos:start="109:27" pos:end="109:27">.</operator><name pos:start="109:28" pos:end="109:35">rcParams</name><operator pos:start="109:36" pos:end="109:36">.</operator><name pos:start="109:37" pos:end="109:46">aqStrength</name></name> <operator pos:start="109:48" pos:end="109:48">=</operator> <name pos:start="109:50" pos:end="109:65"><name pos:start="109:50" pos:end="109:52">ctx</name><operator pos:start="109:53" pos:end="109:54">-&gt;</operator><name pos:start="109:55" pos:end="109:65">aq_strength</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:55"><expr pos:start="111:9" pos:end="111:54"><call pos:start="111:9" pos:end="111:54"><name pos:start="111:9" pos:end="111:14">av_log</name><argument_list pos:start="111:15" pos:end="111:54">(<argument pos:start="111:16" pos:end="111:20"><expr pos:start="111:16" pos:end="111:20"><name pos:start="111:16" pos:end="111:20">avctx</name></expr></argument>, <argument pos:start="111:23" pos:end="111:36"><expr pos:start="111:23" pos:end="111:36"><name pos:start="111:23" pos:end="111:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="111:39" pos:end="111:53"><expr pos:start="111:39" pos:end="111:53"><literal type="string" pos:start="111:39" pos:end="111:53">"AQ enabled.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="117:5" pos:end="123:5"><if pos:start="117:5" pos:end="123:5">if <condition pos:start="117:8" pos:end="117:25">(<expr pos:start="117:9" pos:end="117:24"><name pos:start="117:9" pos:end="117:24"><name pos:start="117:9" pos:end="117:11">ctx</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:24">temporal_aq</name></name></expr>)</condition> <block pos:start="117:27" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:64">

        <expr_stmt pos:start="119:9" pos:end="119:57"><expr pos:start="119:9" pos:end="119:56"><name pos:start="119:9" pos:end="119:52"><name pos:start="119:9" pos:end="119:11">ctx</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:26">encode_config</name><operator pos:start="119:27" pos:end="119:27">.</operator><name pos:start="119:28" pos:end="119:35">rcParams</name><operator pos:start="119:36" pos:end="119:36">.</operator><name pos:start="119:37" pos:end="119:52">enableTemporalAQ</name></name> <operator pos:start="119:54" pos:end="119:54">=</operator> <literal type="number" pos:start="119:56" pos:end="119:56">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:64"><expr pos:start="121:9" pos:end="121:63"><call pos:start="121:9" pos:end="121:63"><name pos:start="121:9" pos:end="121:14">av_log</name><argument_list pos:start="121:15" pos:end="121:63">(<argument pos:start="121:16" pos:end="121:20"><expr pos:start="121:16" pos:end="121:20"><name pos:start="121:16" pos:end="121:20">avctx</name></expr></argument>, <argument pos:start="121:23" pos:end="121:36"><expr pos:start="121:23" pos:end="121:36"><name pos:start="121:23" pos:end="121:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="121:39" pos:end="121:62"><expr pos:start="121:39" pos:end="121:62"><literal type="string" pos:start="121:39" pos:end="121:62">"Temporal AQ enabled.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="127:5" pos:end="163:5"><if pos:start="127:5" pos:end="163:5">if <condition pos:start="127:8" pos:end="127:26">(<expr pos:start="127:9" pos:end="127:25"><name pos:start="127:9" pos:end="127:25"><name pos:start="127:9" pos:end="127:11">ctx</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:25">rc_lookahead</name></name></expr>)</condition> <block pos:start="127:28" pos:end="163:5">{<block_content pos:start="129:9" pos:end="161:9">

        <decl_stmt pos:start="129:9" pos:end="131:62"><decl pos:start="129:9" pos:end="131:61"><type pos:start="129:9" pos:end="129:11"><name pos:start="129:9" pos:end="129:11">int</name></type> <name pos:start="129:13" pos:end="129:21">lkd_bound</name> <init pos:start="129:23" pos:end="131:61">= <expr pos:start="129:25" pos:end="131:61"><call pos:start="129:25" pos:end="129:65"><name pos:start="129:25" pos:end="129:29">FFMIN</name><argument_list pos:start="129:30" pos:end="129:65">(<argument pos:start="129:31" pos:end="129:46"><expr pos:start="129:31" pos:end="129:46"><name pos:start="129:31" pos:end="129:46"><name pos:start="129:31" pos:end="129:33">ctx</name><operator pos:start="129:34" pos:end="129:35">-&gt;</operator><name pos:start="129:36" pos:end="129:46">nb_surfaces</name></name></expr></argument>, <argument pos:start="129:49" pos:end="129:64"><expr pos:start="129:49" pos:end="129:64"><name pos:start="129:49" pos:end="129:64"><name pos:start="129:49" pos:end="129:51">ctx</name><operator pos:start="129:52" pos:end="129:53">-&gt;</operator><name pos:start="129:54" pos:end="129:64">async_depth</name></name></expr></argument>)</argument_list></call> <operator pos:start="129:67" pos:end="129:67">-</operator>

                        <name pos:start="131:25" pos:end="131:57"><name pos:start="131:25" pos:end="131:27">ctx</name><operator pos:start="131:28" pos:end="131:29">-&gt;</operator><name pos:start="131:30" pos:end="131:42">encode_config</name><operator pos:start="131:43" pos:end="131:43">.</operator><name pos:start="131:44" pos:end="131:57">frameIntervalP</name></name> <operator pos:start="131:59" pos:end="131:59">-</operator> <literal type="number" pos:start="131:61" pos:end="131:61">4</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="135:9" pos:end="161:9"><if pos:start="135:9" pos:end="141:9">if <condition pos:start="135:12" pos:end="135:26">(<expr pos:start="135:13" pos:end="135:25"><name pos:start="135:13" pos:end="135:21">lkd_bound</name> <operator pos:start="135:23" pos:end="135:23">&lt;</operator> <literal type="number" pos:start="135:25" pos:end="135:25">0</literal></expr>)</condition> <block pos:start="135:28" pos:end="141:9">{<block_content pos:start="137:13" pos:end="139:79">

            <expr_stmt pos:start="137:13" pos:end="139:79"><expr pos:start="137:13" pos:end="139:78"><call pos:start="137:13" pos:end="139:78"><name pos:start="137:13" pos:end="137:18">av_log</name><argument_list pos:start="137:19" pos:end="139:78">(<argument pos:start="137:20" pos:end="137:24"><expr pos:start="137:20" pos:end="137:24"><name pos:start="137:20" pos:end="137:24">avctx</name></expr></argument>, <argument pos:start="137:27" pos:end="137:40"><expr pos:start="137:27" pos:end="137:40"><name pos:start="137:27" pos:end="137:40">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="139:20" pos:end="139:77"><expr pos:start="139:20" pos:end="139:77"><literal type="string" pos:start="139:20" pos:end="139:77">"Lookahead not enabled. Increase buffer delay (-delay).\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="141:11" pos:end="161:9">else <block pos:start="141:16" pos:end="161:9">{<block_content pos:start="143:13" pos:end="159:87">

            <expr_stmt pos:start="143:13" pos:end="143:60"><expr pos:start="143:13" pos:end="143:59"><name pos:start="143:13" pos:end="143:55"><name pos:start="143:13" pos:end="143:15">ctx</name><operator pos:start="143:16" pos:end="143:17">-&gt;</operator><name pos:start="143:18" pos:end="143:30">encode_config</name><operator pos:start="143:31" pos:end="143:31">.</operator><name pos:start="143:32" pos:end="143:39">rcParams</name><operator pos:start="143:40" pos:end="143:40">.</operator><name pos:start="143:41" pos:end="143:55">enableLookahead</name></name> <operator pos:start="143:57" pos:end="143:57">=</operator> <literal type="number" pos:start="143:59" pos:end="143:59">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:99"><expr pos:start="145:13" pos:end="145:98"><name pos:start="145:13" pos:end="145:54"><name pos:start="145:13" pos:end="145:15">ctx</name><operator pos:start="145:16" pos:end="145:17">-&gt;</operator><name pos:start="145:18" pos:end="145:30">encode_config</name><operator pos:start="145:31" pos:end="145:31">.</operator><name pos:start="145:32" pos:end="145:39">rcParams</name><operator pos:start="145:40" pos:end="145:40">.</operator><name pos:start="145:41" pos:end="145:54">lookaheadDepth</name></name>  <operator pos:start="145:57" pos:end="145:57">=</operator> <call pos:start="145:59" pos:end="145:98"><name pos:start="145:59" pos:end="145:65">av_clip</name><argument_list pos:start="145:66" pos:end="145:98">(<argument pos:start="145:67" pos:end="145:83"><expr pos:start="145:67" pos:end="145:83"><name pos:start="145:67" pos:end="145:83"><name pos:start="145:67" pos:end="145:69">ctx</name><operator pos:start="145:70" pos:end="145:71">-&gt;</operator><name pos:start="145:72" pos:end="145:83">rc_lookahead</name></name></expr></argument>, <argument pos:start="145:86" pos:end="145:86"><expr pos:start="145:86" pos:end="145:86"><literal type="number" pos:start="145:86" pos:end="145:86">0</literal></expr></argument>, <argument pos:start="145:89" pos:end="145:97"><expr pos:start="145:89" pos:end="145:97"><name pos:start="145:89" pos:end="145:97">lkd_bound</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:75"><expr pos:start="147:13" pos:end="147:74"><name pos:start="147:13" pos:end="147:53"><name pos:start="147:13" pos:end="147:15">ctx</name><operator pos:start="147:16" pos:end="147:17">-&gt;</operator><name pos:start="147:18" pos:end="147:30">encode_config</name><operator pos:start="147:31" pos:end="147:31">.</operator><name pos:start="147:32" pos:end="147:39">rcParams</name><operator pos:start="147:40" pos:end="147:40">.</operator><name pos:start="147:41" pos:end="147:53">disableIadapt</name></name>   <operator pos:start="147:57" pos:end="147:57">=</operator> <name pos:start="147:59" pos:end="147:74"><name pos:start="147:59" pos:end="147:61">ctx</name><operator pos:start="147:62" pos:end="147:63">-&gt;</operator><name pos:start="147:64" pos:end="147:74">no_scenecut</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:72"><expr pos:start="149:13" pos:end="149:71"><name pos:start="149:13" pos:end="149:53"><name pos:start="149:13" pos:end="149:15">ctx</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:30">encode_config</name><operator pos:start="149:31" pos:end="149:31">.</operator><name pos:start="149:32" pos:end="149:39">rcParams</name><operator pos:start="149:40" pos:end="149:40">.</operator><name pos:start="149:41" pos:end="149:53">disableBadapt</name></name>   <operator pos:start="149:57" pos:end="149:57">=</operator> <operator pos:start="149:59" pos:end="149:59">!</operator><name pos:start="149:60" pos:end="149:71"><name pos:start="149:60" pos:end="149:62">ctx</name><operator pos:start="149:63" pos:end="149:64">-&gt;</operator><name pos:start="149:65" pos:end="149:71">b_adapt</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="159:87"><expr pos:start="151:13" pos:end="159:86"><call pos:start="151:13" pos:end="159:86"><name pos:start="151:13" pos:end="151:18">av_log</name><argument_list pos:start="151:19" pos:end="159:86">(<argument pos:start="151:20" pos:end="151:24"><expr pos:start="151:20" pos:end="151:24"><name pos:start="151:20" pos:end="151:24">avctx</name></expr></argument>, <argument pos:start="151:27" pos:end="151:40"><expr pos:start="151:27" pos:end="151:40"><name pos:start="151:27" pos:end="151:40">AV_LOG_VERBOSE</name></expr></argument>,

                   <argument pos:start="153:20" pos:end="153:76"><expr pos:start="153:20" pos:end="153:76"><literal type="string" pos:start="153:20" pos:end="153:76">"Lookahead enabled: depth %d, scenecut %s, B-adapt %s.\n"</literal></expr></argument>,

                   <argument pos:start="155:20" pos:end="155:61"><expr pos:start="155:20" pos:end="155:61"><name pos:start="155:20" pos:end="155:61"><name pos:start="155:20" pos:end="155:22">ctx</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:37">encode_config</name><operator pos:start="155:38" pos:end="155:38">.</operator><name pos:start="155:39" pos:end="155:46">rcParams</name><operator pos:start="155:47" pos:end="155:47">.</operator><name pos:start="155:48" pos:end="155:61">lookaheadDepth</name></name></expr></argument>,

                   <argument pos:start="157:20" pos:end="157:85"><expr pos:start="157:20" pos:end="157:85"><ternary pos:start="157:20" pos:end="157:85"><condition pos:start="157:20" pos:end="157:62"><expr pos:start="157:20" pos:end="157:60"><name pos:start="157:20" pos:end="157:60"><name pos:start="157:20" pos:end="157:22">ctx</name><operator pos:start="157:23" pos:end="157:24">-&gt;</operator><name pos:start="157:25" pos:end="157:37">encode_config</name><operator pos:start="157:38" pos:end="157:38">.</operator><name pos:start="157:39" pos:end="157:46">rcParams</name><operator pos:start="157:47" pos:end="157:47">.</operator><name pos:start="157:48" pos:end="157:60">disableIadapt</name></name></expr> ?</condition><then pos:start="157:64" pos:end="157:73"> <expr pos:start="157:64" pos:end="157:73"><literal type="string" pos:start="157:64" pos:end="157:73">"disabled"</literal></expr> </then><else pos:start="157:75" pos:end="157:85">: <expr pos:start="157:77" pos:end="157:85"><literal type="string" pos:start="157:77" pos:end="157:85">"enabled"</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="159:20" pos:end="159:85"><expr pos:start="159:20" pos:end="159:85"><ternary pos:start="159:20" pos:end="159:85"><condition pos:start="159:20" pos:end="159:62"><expr pos:start="159:20" pos:end="159:60"><name pos:start="159:20" pos:end="159:60"><name pos:start="159:20" pos:end="159:22">ctx</name><operator pos:start="159:23" pos:end="159:24">-&gt;</operator><name pos:start="159:25" pos:end="159:37">encode_config</name><operator pos:start="159:38" pos:end="159:38">.</operator><name pos:start="159:39" pos:end="159:46">rcParams</name><operator pos:start="159:47" pos:end="159:47">.</operator><name pos:start="159:48" pos:end="159:60">disableBadapt</name></name></expr> ?</condition><then pos:start="159:64" pos:end="159:73"> <expr pos:start="159:64" pos:end="159:73"><literal type="string" pos:start="159:64" pos:end="159:73">"disabled"</literal></expr> </then><else pos:start="159:75" pos:end="159:85">: <expr pos:start="159:77" pos:end="159:85"><literal type="string" pos:start="159:77" pos:end="159:85">"enabled"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="167:5" pos:end="173:5"><if pos:start="167:5" pos:end="173:5">if <condition pos:start="167:8" pos:end="167:24">(<expr pos:start="167:9" pos:end="167:23"><name pos:start="167:9" pos:end="167:23"><name pos:start="167:9" pos:end="167:11">ctx</name><operator pos:start="167:12" pos:end="167:13">-&gt;</operator><name pos:start="167:14" pos:end="167:23">strict_gop</name></name></expr>)</condition> <block pos:start="167:26" pos:end="173:5">{<block_content pos:start="169:9" pos:end="171:70">

        <expr_stmt pos:start="169:9" pos:end="169:56"><expr pos:start="169:9" pos:end="169:55"><name pos:start="169:9" pos:end="169:51"><name pos:start="169:9" pos:end="169:11">ctx</name><operator pos:start="169:12" pos:end="169:13">-&gt;</operator><name pos:start="169:14" pos:end="169:26">encode_config</name><operator pos:start="169:27" pos:end="169:27">.</operator><name pos:start="169:28" pos:end="169:35">rcParams</name><operator pos:start="169:36" pos:end="169:36">.</operator><name pos:start="169:37" pos:end="169:51">strictGOPTarget</name></name> <operator pos:start="169:53" pos:end="169:53">=</operator> <literal type="number" pos:start="169:55" pos:end="169:55">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:70"><expr pos:start="171:9" pos:end="171:69"><call pos:start="171:9" pos:end="171:69"><name pos:start="171:9" pos:end="171:14">av_log</name><argument_list pos:start="171:15" pos:end="171:69">(<argument pos:start="171:16" pos:end="171:20"><expr pos:start="171:16" pos:end="171:20"><name pos:start="171:16" pos:end="171:20">avctx</name></expr></argument>, <argument pos:start="171:23" pos:end="171:36"><expr pos:start="171:23" pos:end="171:36"><name pos:start="171:23" pos:end="171:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="171:39" pos:end="171:68"><expr pos:start="171:39" pos:end="171:68"><literal type="string" pos:start="171:39" pos:end="171:68">"Strict GOP target enabled.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="177:5" pos:end="179:54"><if pos:start="177:5" pos:end="179:54">if <condition pos:start="177:8" pos:end="177:22">(<expr pos:start="177:9" pos:end="177:21"><name pos:start="177:9" pos:end="177:21"><name pos:start="177:9" pos:end="177:11">ctx</name><operator pos:start="177:12" pos:end="177:13">-&gt;</operator><name pos:start="177:14" pos:end="177:21">nonref_p</name></name></expr>)</condition><block type="pseudo" pos:start="179:9" pos:end="179:54"><block_content pos:start="179:9" pos:end="179:54">

        <expr_stmt pos:start="179:9" pos:end="179:54"><expr pos:start="179:9" pos:end="179:53"><name pos:start="179:9" pos:end="179:49"><name pos:start="179:9" pos:end="179:11">ctx</name><operator pos:start="179:12" pos:end="179:13">-&gt;</operator><name pos:start="179:14" pos:end="179:26">encode_config</name><operator pos:start="179:27" pos:end="179:27">.</operator><name pos:start="179:28" pos:end="179:35">rcParams</name><operator pos:start="179:36" pos:end="179:36">.</operator><name pos:start="179:37" pos:end="179:49">enableNonRefP</name></name> <operator pos:start="179:51" pos:end="179:51">=</operator> <literal type="number" pos:start="179:53" pos:end="179:53">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="183:5" pos:end="185:57"><if pos:start="183:5" pos:end="185:57">if <condition pos:start="183:8" pos:end="183:25">(<expr pos:start="183:9" pos:end="183:24"><name pos:start="183:9" pos:end="183:24"><name pos:start="183:9" pos:end="183:11">ctx</name><operator pos:start="183:12" pos:end="183:13">-&gt;</operator><name pos:start="183:14" pos:end="183:24">zerolatency</name></name></expr>)</condition><block type="pseudo" pos:start="185:9" pos:end="185:57"><block_content pos:start="185:9" pos:end="185:57">

        <expr_stmt pos:start="185:9" pos:end="185:57"><expr pos:start="185:9" pos:end="185:56"><name pos:start="185:9" pos:end="185:52"><name pos:start="185:9" pos:end="185:11">ctx</name><operator pos:start="185:12" pos:end="185:13">-&gt;</operator><name pos:start="185:14" pos:end="185:26">encode_config</name><operator pos:start="185:27" pos:end="185:27">.</operator><name pos:start="185:28" pos:end="185:35">rcParams</name><operator pos:start="185:36" pos:end="185:36">.</operator><name pos:start="185:37" pos:end="185:52">zeroReorderDelay</name></name> <operator pos:start="185:54" pos:end="185:54">=</operator> <literal type="number" pos:start="185:56" pos:end="185:56">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="189:5" pos:end="191:65"><if pos:start="189:5" pos:end="191:65">if <condition pos:start="189:8" pos:end="189:21">(<expr pos:start="189:9" pos:end="189:20"><name pos:start="189:9" pos:end="189:20"><name pos:start="189:9" pos:end="189:11">ctx</name><operator pos:start="189:12" pos:end="189:13">-&gt;</operator><name pos:start="189:14" pos:end="189:20">quality</name></name></expr>)</condition><block type="pseudo" pos:start="191:9" pos:end="191:65"><block_content pos:start="191:9" pos:end="191:65">

        <expr_stmt pos:start="191:9" pos:end="191:65"><expr pos:start="191:9" pos:end="191:64"><name pos:start="191:9" pos:end="191:49"><name pos:start="191:9" pos:end="191:11">ctx</name><operator pos:start="191:12" pos:end="191:13">-&gt;</operator><name pos:start="191:14" pos:end="191:26">encode_config</name><operator pos:start="191:27" pos:end="191:27">.</operator><name pos:start="191:28" pos:end="191:35">rcParams</name><operator pos:start="191:36" pos:end="191:36">.</operator><name pos:start="191:37" pos:end="191:49">targetQuality</name></name> <operator pos:start="191:51" pos:end="191:51">=</operator> <name pos:start="191:53" pos:end="191:64"><name pos:start="191:53" pos:end="191:55">ctx</name><operator pos:start="191:56" pos:end="191:57">-&gt;</operator><name pos:start="191:58" pos:end="191:64">quality</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
