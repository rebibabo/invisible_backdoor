<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8020.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">char</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:38">pxb_host_ofw_unit_address</name><parameter_list pos:start="1:39" pos:end="1:63">(<parameter pos:start="1:40" pos:end="1:62"><decl pos:start="1:40" pos:end="1:62"><type pos:start="1:40" pos:end="1:59"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:57">SysBusDevice</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:16">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:24"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:22">PCIHostState</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:32">pxb_host</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:18"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:16">PCIBus</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:25">pxb_bus</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:18"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:16">PXBDev</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:25">pxb_dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">position</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:23"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:21">DeviceState</name> <modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:35">pxb_dev_base</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:24"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:22">PCIHostState</name> <modifier pos:start="15:24" pos:end="15:24">*</modifier></type><name pos:start="15:25" pos:end="15:33">main_host</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:38"><decl pos:start="17:5" pos:end="17:37"><type pos:start="17:5" pos:end="17:24"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:22">SysBusDevice</name> <modifier pos:start="17:24" pos:end="17:24">*</modifier></type><name pos:start="17:25" pos:end="17:37">main_host_sbd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:12">pxb_host</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:35"><name pos:start="21:16" pos:end="21:30">PCI_HOST_BRIDGE</name><argument_list pos:start="21:31" pos:end="21:35">(<argument pos:start="21:32" pos:end="21:34"><expr pos:start="21:32" pos:end="21:34"><name pos:start="21:32" pos:end="21:34">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:11">pxb_bus</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:27"><name pos:start="23:15" pos:end="23:22">pxb_host</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:27">bus</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:43"><expr pos:start="25:5" pos:end="25:42"><name pos:start="25:5" pos:end="25:11">pxb_dev</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:42"><name pos:start="25:15" pos:end="25:21">PXB_DEV</name><argument_list pos:start="25:22" pos:end="25:42">(<argument pos:start="25:23" pos:end="25:41"><expr pos:start="25:23" pos:end="25:41"><name pos:start="25:23" pos:end="25:41"><name pos:start="25:23" pos:end="25:29">pxb_bus</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:41">parent_dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:51"><expr pos:start="27:5" pos:end="27:50"><name pos:start="27:5" pos:end="27:12">position</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:50"><name pos:start="27:16" pos:end="27:27">g_list_index</name><argument_list pos:start="27:28" pos:end="27:50">(<argument pos:start="27:29" pos:end="27:40"><expr pos:start="27:29" pos:end="27:40"><name pos:start="27:29" pos:end="27:40">pxb_dev_list</name></expr></argument>, <argument pos:start="27:43" pos:end="27:49"><expr pos:start="27:43" pos:end="27:49"><name pos:start="27:43" pos:end="27:49">pxb_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><call pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:10">assert</name><argument_list pos:start="29:11" pos:end="29:25">(<argument pos:start="29:12" pos:end="29:24"><expr pos:start="29:12" pos:end="29:24"><name pos:start="29:12" pos:end="29:19">position</name> <operator pos:start="29:21" pos:end="29:22">&gt;=</operator> <literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:35"><expr pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:16">pxb_dev_base</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="33:34"><name pos:start="33:20" pos:end="33:25">DEVICE</name><argument_list pos:start="33:26" pos:end="33:34">(<argument pos:start="33:27" pos:end="33:33"><expr pos:start="33:27" pos:end="33:33"><name pos:start="33:27" pos:end="33:33">pxb_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:66"><expr pos:start="35:5" pos:end="35:65"><name pos:start="35:5" pos:end="35:13">main_host</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:65"><name pos:start="35:17" pos:end="35:31">PCI_HOST_BRIDGE</name><argument_list pos:start="35:32" pos:end="35:65">(<argument pos:start="35:33" pos:end="35:64"><expr pos:start="35:33" pos:end="35:64"><name pos:start="35:33" pos:end="35:64"><name pos:start="35:33" pos:end="35:44">pxb_dev_base</name><operator pos:start="35:45" pos:end="35:46">-&gt;</operator><name pos:start="35:47" pos:end="35:56">parent_bus</name><operator pos:start="35:57" pos:end="35:58">-&gt;</operator><name pos:start="35:59" pos:end="35:64">parent</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:46"><expr pos:start="37:5" pos:end="37:45"><name pos:start="37:5" pos:end="37:17">main_host_sbd</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <call pos:start="37:21" pos:end="37:45"><name pos:start="37:21" pos:end="37:34">SYS_BUS_DEVICE</name><argument_list pos:start="37:35" pos:end="37:45">(<argument pos:start="37:36" pos:end="37:44"><expr pos:start="37:36" pos:end="37:44"><name pos:start="37:36" pos:end="37:44">main_host</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:36">(<expr pos:start="41:9" pos:end="41:35"><name pos:start="41:9" pos:end="41:31"><name pos:start="41:9" pos:end="41:21">main_host_sbd</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:31">num_mmio</name></name> <operator pos:start="41:33" pos:end="41:33">&gt;</operator> <literal type="number" pos:start="41:35" pos:end="41:35">0</literal></expr>)</condition> <block pos:start="41:38" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:74">

        <return pos:start="43:9" pos:end="45:74">return <expr pos:start="43:16" pos:end="45:73"><call pos:start="43:16" pos:end="45:73"><name pos:start="43:16" pos:end="43:30">g_strdup_printf</name><argument_list pos:start="43:31" pos:end="45:73">(<argument pos:start="43:32" pos:end="43:51"><expr pos:start="43:32" pos:end="43:51"><name pos:start="43:32" pos:end="43:45">TARGET_FMT_plx</name> <literal type="string" pos:start="43:47" pos:end="43:51">",%x"</literal></expr></argument>,

                               <argument pos:start="45:32" pos:end="45:58"><expr pos:start="45:32" pos:end="45:58"><name pos:start="45:32" pos:end="45:53"><name pos:start="45:32" pos:end="45:44">main_host_sbd</name><operator pos:start="45:45" pos:end="45:46">-&gt;</operator><name pos:start="45:47" pos:end="45:50">mmio</name><index pos:start="45:51" pos:end="45:53">[<expr pos:start="45:52" pos:end="45:52"><literal type="number" pos:start="45:52" pos:end="45:52">0</literal></expr>]</index></name><operator pos:start="45:54" pos:end="45:54">.</operator><name pos:start="45:55" pos:end="45:58">addr</name></expr></argument>, <argument pos:start="45:61" pos:end="45:72"><expr pos:start="45:61" pos:end="45:72"><name pos:start="45:61" pos:end="45:68">position</name> <operator pos:start="45:70" pos:end="45:70">+</operator> <literal type="number" pos:start="45:72" pos:end="45:72">1</literal></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:35">(<expr pos:start="49:9" pos:end="49:34"><name pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:21">main_host_sbd</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:30">num_pio</name></name> <operator pos:start="49:32" pos:end="49:32">&gt;</operator> <literal type="number" pos:start="49:34" pos:end="49:34">0</literal></expr>)</condition> <block pos:start="49:37" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:68">

        <return pos:start="51:9" pos:end="53:68">return <expr pos:start="51:16" pos:end="53:67"><call pos:start="51:16" pos:end="53:67"><name pos:start="51:16" pos:end="51:30">g_strdup_printf</name><argument_list pos:start="51:31" pos:end="53:67">(<argument pos:start="51:32" pos:end="51:41"><expr pos:start="51:32" pos:end="51:41"><literal type="string" pos:start="51:32" pos:end="51:41">"i%04x,%x"</literal></expr></argument>,

                               <argument pos:start="53:32" pos:end="53:52"><expr pos:start="53:32" pos:end="53:52"><name pos:start="53:32" pos:end="53:52"><name pos:start="53:32" pos:end="53:44">main_host_sbd</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:49">pio</name><index pos:start="53:50" pos:end="53:52">[<expr pos:start="53:51" pos:end="53:51"><literal type="number" pos:start="53:51" pos:end="53:51">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="53:55" pos:end="53:66"><expr pos:start="53:55" pos:end="53:66"><name pos:start="53:55" pos:end="53:62">position</name> <operator pos:start="53:64" pos:end="53:64">+</operator> <literal type="number" pos:start="53:66" pos:end="53:66">1</literal></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="57:5" pos:end="57:16">return <expr pos:start="57:12" pos:end="57:15"><name pos:start="57:12" pos:end="57:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
