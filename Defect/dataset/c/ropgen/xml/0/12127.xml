<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12127.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">scsi_dma_restart_cb</name><parameter_list pos:start="1:32" pos:end="1:70">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:57"><decl pos:start="1:47" pos:end="1:57"><type pos:start="1:47" pos:end="1:57"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:57">running</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:69"><decl pos:start="1:60" pos:end="1:69"><type pos:start="1:60" pos:end="1:69"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:69">reason</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:5">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">SCSIDeviceState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:31">= <expr pos:start="5:26" pos:end="5:31"><name pos:start="5:26" pos:end="5:31">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">SCSIRequest</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">r</name> <init pos:start="7:20" pos:end="7:32">= <expr pos:start="7:22" pos:end="7:32"><name pos:start="7:22" pos:end="7:32"><name pos:start="7:22" pos:end="7:22">s</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:32">requests</name></name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="11:15"><if pos:start="9:5" pos:end="11:15">if <condition pos:start="9:8" pos:end="9:17">(<expr pos:start="9:9" pos:end="9:16"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:16">running</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:15"><block_content pos:start="11:9" pos:end="11:15">

        <return pos:start="11:9" pos:end="11:15">return;</return></block_content></block></if></if_stmt>



    <while pos:start="15:5" pos:end="27:5">while <condition pos:start="15:11" pos:end="15:13">(<expr pos:start="15:12" pos:end="15:12"><name pos:start="15:12" pos:end="15:12">r</name></expr>)</condition> <block pos:start="15:15" pos:end="27:5">{<block_content pos:start="17:9" pos:end="25:20">

        <if_stmt pos:start="17:9" pos:end="23:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="17:46">(<expr pos:start="17:13" pos:end="17:45"><name pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:13">r</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:21">status</name></name> <operator pos:start="17:23" pos:end="17:23">&amp;</operator> <name pos:start="17:25" pos:end="17:45">SCSI_REQ_STATUS_RETRY</name></expr>)</condition> <block pos:start="17:48" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:34">

            <expr_stmt pos:start="19:13" pos:end="19:48"><expr pos:start="19:13" pos:end="19:47"><name pos:start="19:13" pos:end="19:21"><name pos:start="19:13" pos:end="19:13">r</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:21">status</name></name> <operator pos:start="19:23" pos:end="19:24">&amp;=</operator> <operator pos:start="19:26" pos:end="19:26">~</operator><name pos:start="19:27" pos:end="19:47">SCSI_REQ_STATUS_RETRY</name></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:34"><expr pos:start="21:13" pos:end="21:33"><call pos:start="21:13" pos:end="21:33"><name pos:start="21:13" pos:end="21:30">scsi_write_request</name><argument_list pos:start="21:31" pos:end="21:33">(<argument pos:start="21:32" pos:end="21:32"><expr pos:start="21:32" pos:end="21:32"><name pos:start="21:32" pos:end="21:32">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:20"><expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:9">r</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <name pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:13">r</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:19">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
