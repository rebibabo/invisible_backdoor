<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3336.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:54"><name pos:start="1:1" pos:end="1:10">start_list</name><argument_list pos:start="1:11" pos:end="1:54">(<argument pos:start="1:12" pos:end="1:21">Visitor *v</argument>, <argument pos:start="1:24" pos:end="1:39">const char *name</argument>, <argument pos:start="1:42" pos:end="1:53">Error **errp</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:5">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">StringInputVisitor</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:27">siv</name> <init pos:start="5:29" pos:end="5:39">= <expr pos:start="5:31" pos:end="5:39"><call pos:start="5:31" pos:end="5:39"><name pos:start="5:31" pos:end="5:36">to_siv</name><argument_list pos:start="5:37" pos:end="5:39">(<argument pos:start="5:38" pos:end="5:38"><expr pos:start="5:38" pos:end="5:38"><name pos:start="5:38" pos:end="5:38">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:39">(<expr pos:start="9:9" pos:end="9:38"><call pos:start="9:9" pos:end="9:34"><name pos:start="9:9" pos:end="9:17">parse_str</name><argument_list pos:start="9:18" pos:end="9:34">(<argument pos:start="9:19" pos:end="9:21"><expr pos:start="9:19" pos:end="9:21"><name pos:start="9:19" pos:end="9:21">siv</name></expr></argument>, <argument pos:start="9:24" pos:end="9:27"><expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">name</name></expr></argument>, <argument pos:start="9:30" pos:end="9:33"><expr pos:start="9:30" pos:end="9:33"><name pos:start="9:30" pos:end="9:33">errp</name></expr></argument>)</argument_list></call> <operator pos:start="9:36" pos:end="9:36">&lt;</operator> <literal type="number" pos:start="9:38" pos:end="9:38">0</literal></expr>)</condition> <block pos:start="9:41" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:15">

        <return pos:start="11:9" pos:end="11:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:47"><expr pos:start="17:5" pos:end="17:46"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:7">siv</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:18">cur_range</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <call pos:start="17:22" pos:end="17:46"><name pos:start="17:22" pos:end="17:33">g_list_first</name><argument_list pos:start="17:34" pos:end="17:46">(<argument pos:start="17:35" pos:end="17:45"><expr pos:start="17:35" pos:end="17:45"><name pos:start="17:35" pos:end="17:45"><name pos:start="17:35" pos:end="17:37">siv</name><operator pos:start="17:38" pos:end="17:39">-&gt;</operator><name pos:start="17:40" pos:end="17:45">ranges</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="29:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:23">(<expr pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:11">siv</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:22">cur_range</name></name></expr>)</condition> <block pos:start="19:25" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:9">

        <decl_stmt pos:start="21:9" pos:end="21:40"><decl pos:start="21:9" pos:end="21:39"><type pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:13">Range</name> <modifier pos:start="21:15" pos:end="21:15">*</modifier></type><name pos:start="21:16" pos:end="21:16">r</name> <init pos:start="21:18" pos:end="21:39">= <expr pos:start="21:20" pos:end="21:39"><name pos:start="21:20" pos:end="21:39"><name pos:start="21:20" pos:end="21:22">siv</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:33">cur_range</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:39">data</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:14">(<expr pos:start="23:13" pos:end="23:13"><name pos:start="23:13" pos:end="23:13">r</name></expr>)</condition> <block pos:start="23:16" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:32">

            <expr_stmt pos:start="25:13" pos:end="25:32"><expr pos:start="25:13" pos:end="25:31"><name pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:15">siv</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:20">cur</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:31"><name pos:start="25:24" pos:end="25:24">r</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:31">begin</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block>
</unit>
