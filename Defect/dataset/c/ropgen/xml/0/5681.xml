<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5681.c" pos:tabs="8"><function pos:start="1:1" pos:end="465:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">decode_32Bit_opc</name><parameter_list pos:start="1:29" pos:end="1:69">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:49"><name pos:start="1:30" pos:end="1:44">CPUTriCoreState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">env</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:68"><decl pos:start="1:52" pos:end="1:68"><type pos:start="1:52" pos:end="1:68"><name pos:start="1:52" pos:end="1:63">DisasContext</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="465:1">{<block_content pos:start="5:5" pos:end="463:5">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">op1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int32_t</name></type> <name pos:start="7:13" pos:end="7:14">r1</name></decl>, <decl pos:start="7:17" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:17" pos:end="7:18">r2</name></decl>, <decl pos:start="7:21" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:21" pos:end="7:22">r3</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int32_t</name></type> <name pos:start="9:13" pos:end="9:19">address</name></decl>, <decl pos:start="9:22" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:22" pos:end="9:28">const16</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">int8_t</name></type> <name pos:start="11:12" pos:end="11:12">b</name></decl>, <decl pos:start="11:15" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:10"/><name pos:start="11:15" pos:end="11:20">const4</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int32_t</name></type> <name pos:start="13:13" pos:end="13:16">bpos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">TCGv</name></type> <name pos:start="15:10" pos:end="15:13">temp</name></decl>, <decl pos:start="15:16" pos:end="15:20"><type ref="prev" pos:start="15:5" pos:end="15:8"/><name pos:start="15:16" pos:end="15:20">temp2</name></decl>, <decl pos:start="15:23" pos:end="15:27"><type ref="prev" pos:start="15:5" pos:end="15:8"/><name pos:start="15:23" pos:end="15:27">temp3</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:7">op1</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:36"><name pos:start="19:11" pos:end="19:23">MASK_OP_MAJOR</name><argument_list pos:start="19:24" pos:end="19:36">(<argument pos:start="19:25" pos:end="19:35"><expr pos:start="19:25" pos:end="19:35"><name pos:start="19:25" pos:end="19:35"><name pos:start="19:25" pos:end="19:27">ctx</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:35">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:51">/* handle JNZ.T opcode only being 6 bit long */</comment>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:50">(<expr pos:start="25:9" pos:end="25:49"><call pos:start="25:9" pos:end="25:49"><name pos:start="25:9" pos:end="25:16">unlikely</name><argument_list pos:start="25:17" pos:end="25:49">(<argument pos:start="25:18" pos:end="25:48"><expr pos:start="25:18" pos:end="25:48"><operator pos:start="25:18" pos:end="25:18">(</operator><name pos:start="25:19" pos:end="25:21">op1</name> <operator pos:start="25:23" pos:end="25:23">&amp;</operator> <literal type="number" pos:start="25:25" pos:end="25:28">0x3f</literal><operator pos:start="25:29" pos:end="25:29">)</operator> <operator pos:start="25:31" pos:end="25:32">==</operator> <name pos:start="25:34" pos:end="25:48">OPCM_32_BRN_JTT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:52" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:30">

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:11">op1</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:29">OPCM_32_BRN_JTT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="33:5" pos:end="463:5">switch <condition pos:start="33:12" pos:end="33:16">(<expr pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">op1</name></expr>)</condition> <block pos:start="33:18" pos:end="463:5">{<block_content pos:start="37:5" pos:end="461:14">

<comment type="block" pos:start="35:1" pos:end="35:16">/* ABS-format */</comment>

    <case pos:start="37:5" pos:end="37:25">case <expr pos:start="37:10" pos:end="37:24"><name pos:start="37:10" pos:end="37:24">OPCM_32_ABS_LDW</name></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:33"><expr pos:start="39:9" pos:end="39:32"><call pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:22">decode_abs_ldw</name><argument_list pos:start="39:23" pos:end="39:32">(<argument pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:26">env</name></expr></argument>, <argument pos:start="39:29" pos:end="39:31"><expr pos:start="39:29" pos:end="39:31"><name pos:start="39:29" pos:end="39:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:25">case <expr pos:start="43:10" pos:end="43:24"><name pos:start="43:10" pos:end="43:24">OPCM_32_ABS_LDB</name></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:33"><expr pos:start="45:9" pos:end="45:32"><call pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:22">decode_abs_ldb</name><argument_list pos:start="45:23" pos:end="45:32">(<argument pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">env</name></expr></argument>, <argument pos:start="45:29" pos:end="45:31"><expr pos:start="45:29" pos:end="45:31"><name pos:start="45:29" pos:end="45:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:32">case <expr pos:start="49:10" pos:end="49:31"><name pos:start="49:10" pos:end="49:31">OPCM_32_ABS_LDMST_SWAP</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:39"><expr pos:start="51:9" pos:end="51:38"><call pos:start="51:9" pos:end="51:38"><name pos:start="51:9" pos:end="51:28">decode_abs_ldst_swap</name><argument_list pos:start="51:29" pos:end="51:38">(<argument pos:start="51:30" pos:end="51:32"><expr pos:start="51:30" pos:end="51:32"><name pos:start="51:30" pos:end="51:32">env</name></expr></argument>, <argument pos:start="51:35" pos:end="51:37"><expr pos:start="51:35" pos:end="51:37"><name pos:start="51:35" pos:end="51:37">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:34">case <expr pos:start="55:10" pos:end="55:33"><name pos:start="55:10" pos:end="55:33">OPCM_32_ABS_LDST_CONTEXT</name></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:42"><expr pos:start="57:9" pos:end="57:41"><call pos:start="57:9" pos:end="57:41"><name pos:start="57:9" pos:end="57:31">decode_abs_ldst_context</name><argument_list pos:start="57:32" pos:end="57:41">(<argument pos:start="57:33" pos:end="57:35"><expr pos:start="57:33" pos:end="57:35"><name pos:start="57:33" pos:end="57:35">env</name></expr></argument>, <argument pos:start="57:38" pos:end="57:40"><expr pos:start="57:38" pos:end="57:40"><name pos:start="57:38" pos:end="57:40">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:27">case <expr pos:start="61:10" pos:end="61:26"><name pos:start="61:10" pos:end="61:26">OPCM_32_ABS_STORE</name></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:35"><expr pos:start="63:9" pos:end="63:34"><call pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:24">decode_abs_store</name><argument_list pos:start="63:25" pos:end="63:34">(<argument pos:start="63:26" pos:end="63:28"><expr pos:start="63:26" pos:end="63:28"><name pos:start="63:26" pos:end="63:28">env</name></expr></argument>, <argument pos:start="63:31" pos:end="63:33"><expr pos:start="63:31" pos:end="63:33"><name pos:start="63:31" pos:end="63:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:30">case <expr pos:start="67:10" pos:end="67:29"><name pos:start="67:10" pos:end="67:29">OPCM_32_ABS_STOREB_H</name></expr>:</case>

        <expr_stmt pos:start="69:9" pos:end="69:38"><expr pos:start="69:9" pos:end="69:37"><call pos:start="69:9" pos:end="69:37"><name pos:start="69:9" pos:end="69:27">decode_abs_storeb_h</name><argument_list pos:start="69:28" pos:end="69:37">(<argument pos:start="69:29" pos:end="69:31"><expr pos:start="69:29" pos:end="69:31"><name pos:start="69:29" pos:end="69:31">env</name></expr></argument>, <argument pos:start="69:34" pos:end="69:36"><expr pos:start="69:34" pos:end="69:36"><name pos:start="69:34" pos:end="69:36">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <case pos:start="73:5" pos:end="73:28">case <expr pos:start="73:10" pos:end="73:27"><name pos:start="73:10" pos:end="73:27">OPC1_32_ABS_STOREQ</name></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="75:49"><expr pos:start="75:9" pos:end="75:48"><name pos:start="75:9" pos:end="75:15">address</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <call pos:start="75:19" pos:end="75:48"><name pos:start="75:19" pos:end="75:35">MASK_OP_ABS_OFF18</name><argument_list pos:start="75:36" pos:end="75:48">(<argument pos:start="75:37" pos:end="75:47"><expr pos:start="75:37" pos:end="75:47"><name pos:start="75:37" pos:end="75:47"><name pos:start="75:37" pos:end="75:39">ctx</name><operator pos:start="75:40" pos:end="75:41">-&gt;</operator><name pos:start="75:42" pos:end="75:47">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:42"><expr pos:start="77:9" pos:end="77:41"><name pos:start="77:9" pos:end="77:10">r1</name> <operator pos:start="77:12" pos:end="77:12">=</operator> <call pos:start="77:14" pos:end="77:41"><name pos:start="77:14" pos:end="77:28">MASK_OP_ABS_S1D</name><argument_list pos:start="77:29" pos:end="77:41">(<argument pos:start="77:30" pos:end="77:40"><expr pos:start="77:30" pos:end="77:40"><name pos:start="77:30" pos:end="77:40"><name pos:start="77:30" pos:end="77:32">ctx</name><operator pos:start="77:33" pos:end="77:34">-&gt;</operator><name pos:start="77:35" pos:end="77:40">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:53"><expr pos:start="79:9" pos:end="79:52"><name pos:start="79:9" pos:end="79:12">temp</name> <operator pos:start="79:14" pos:end="79:14">=</operator> <call pos:start="79:16" pos:end="79:52"><name pos:start="79:16" pos:end="79:28">tcg_const_i32</name><argument_list pos:start="79:29" pos:end="79:52">(<argument pos:start="79:30" pos:end="79:51"><expr pos:start="79:30" pos:end="79:51"><call pos:start="79:30" pos:end="79:51"><name pos:start="79:30" pos:end="79:42">EA_ABS_FORMAT</name><argument_list pos:start="79:43" pos:end="79:51">(<argument pos:start="79:44" pos:end="79:50"><expr pos:start="79:44" pos:end="79:50"><name pos:start="79:44" pos:end="79:50">address</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:31"><expr pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:13">temp2</name> <operator pos:start="81:15" pos:end="81:15">=</operator> <call pos:start="81:17" pos:end="81:30"><name pos:start="81:17" pos:end="81:28">tcg_temp_new</name><argument_list pos:start="81:29" pos:end="81:30">()</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:50"><expr pos:start="85:9" pos:end="85:49"><call pos:start="85:9" pos:end="85:49"><name pos:start="85:9" pos:end="85:23">tcg_gen_shri_tl</name><argument_list pos:start="85:24" pos:end="85:49">(<argument pos:start="85:25" pos:end="85:29"><expr pos:start="85:25" pos:end="85:29"><name pos:start="85:25" pos:end="85:29">temp2</name></expr></argument>, <argument pos:start="85:32" pos:end="85:44"><expr pos:start="85:32" pos:end="85:44"><name pos:start="85:32" pos:end="85:44"><name pos:start="85:32" pos:end="85:40">cpu_gpr_d</name><index pos:start="85:41" pos:end="85:44">[<expr pos:start="85:42" pos:end="85:43"><name pos:start="85:42" pos:end="85:43">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="85:47" pos:end="85:48"><expr pos:start="85:47" pos:end="85:48"><literal type="number" pos:start="85:47" pos:end="85:48">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:63"><expr pos:start="87:9" pos:end="87:62"><call pos:start="87:9" pos:end="87:62"><name pos:start="87:9" pos:end="87:26">tcg_gen_qemu_st_tl</name><argument_list pos:start="87:27" pos:end="87:62">(<argument pos:start="87:28" pos:end="87:32"><expr pos:start="87:28" pos:end="87:32"><name pos:start="87:28" pos:end="87:32">temp2</name></expr></argument>, <argument pos:start="87:35" pos:end="87:38"><expr pos:start="87:35" pos:end="87:38"><name pos:start="87:35" pos:end="87:38">temp</name></expr></argument>, <argument pos:start="87:41" pos:end="87:52"><expr pos:start="87:41" pos:end="87:52"><name pos:start="87:41" pos:end="87:52"><name pos:start="87:41" pos:end="87:43">ctx</name><operator pos:start="87:44" pos:end="87:45">-&gt;</operator><name pos:start="87:46" pos:end="87:52">mem_idx</name></name></expr></argument>, <argument pos:start="87:55" pos:end="87:61"><expr pos:start="87:55" pos:end="87:61"><name pos:start="87:55" pos:end="87:61">MO_LEUW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:29"><expr pos:start="91:9" pos:end="91:28"><call pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:21">tcg_temp_free</name><argument_list pos:start="91:22" pos:end="91:28">(<argument pos:start="91:23" pos:end="91:27"><expr pos:start="91:23" pos:end="91:27"><name pos:start="91:23" pos:end="91:27">temp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:28"><expr pos:start="93:9" pos:end="93:27"><call pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:21">tcg_temp_free</name><argument_list pos:start="93:22" pos:end="93:27">(<argument pos:start="93:23" pos:end="93:26"><expr pos:start="93:23" pos:end="93:26"><name pos:start="93:23" pos:end="93:26">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <case pos:start="97:5" pos:end="97:26">case <expr pos:start="97:10" pos:end="97:25"><name pos:start="97:10" pos:end="97:25">OPC1_32_ABS_LD_Q</name></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:49"><expr pos:start="99:9" pos:end="99:48"><name pos:start="99:9" pos:end="99:15">address</name> <operator pos:start="99:17" pos:end="99:17">=</operator> <call pos:start="99:19" pos:end="99:48"><name pos:start="99:19" pos:end="99:35">MASK_OP_ABS_OFF18</name><argument_list pos:start="99:36" pos:end="99:48">(<argument pos:start="99:37" pos:end="99:47"><expr pos:start="99:37" pos:end="99:47"><name pos:start="99:37" pos:end="99:47"><name pos:start="99:37" pos:end="99:39">ctx</name><operator pos:start="99:40" pos:end="99:41">-&gt;</operator><name pos:start="99:42" pos:end="99:47">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:42"><expr pos:start="101:9" pos:end="101:41"><name pos:start="101:9" pos:end="101:10">r1</name> <operator pos:start="101:12" pos:end="101:12">=</operator> <call pos:start="101:14" pos:end="101:41"><name pos:start="101:14" pos:end="101:28">MASK_OP_ABS_S1D</name><argument_list pos:start="101:29" pos:end="101:41">(<argument pos:start="101:30" pos:end="101:40"><expr pos:start="101:30" pos:end="101:40"><name pos:start="101:30" pos:end="101:40"><name pos:start="101:30" pos:end="101:32">ctx</name><operator pos:start="101:33" pos:end="101:34">-&gt;</operator><name pos:start="101:35" pos:end="101:40">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:53"><expr pos:start="103:9" pos:end="103:52"><name pos:start="103:9" pos:end="103:12">temp</name> <operator pos:start="103:14" pos:end="103:14">=</operator> <call pos:start="103:16" pos:end="103:52"><name pos:start="103:16" pos:end="103:28">tcg_const_i32</name><argument_list pos:start="103:29" pos:end="103:52">(<argument pos:start="103:30" pos:end="103:51"><expr pos:start="103:30" pos:end="103:51"><call pos:start="103:30" pos:end="103:51"><name pos:start="103:30" pos:end="103:42">EA_ABS_FORMAT</name><argument_list pos:start="103:43" pos:end="103:51">(<argument pos:start="103:44" pos:end="103:50"><expr pos:start="103:44" pos:end="103:50"><name pos:start="103:44" pos:end="103:50">address</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:71"><expr pos:start="107:9" pos:end="107:70"><call pos:start="107:9" pos:end="107:70"><name pos:start="107:9" pos:end="107:26">tcg_gen_qemu_ld_tl</name><argument_list pos:start="107:27" pos:end="107:70">(<argument pos:start="107:28" pos:end="107:40"><expr pos:start="107:28" pos:end="107:40"><name pos:start="107:28" pos:end="107:40"><name pos:start="107:28" pos:end="107:36">cpu_gpr_d</name><index pos:start="107:37" pos:end="107:40">[<expr pos:start="107:38" pos:end="107:39"><name pos:start="107:38" pos:end="107:39">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="107:43" pos:end="107:46"><expr pos:start="107:43" pos:end="107:46"><name pos:start="107:43" pos:end="107:46">temp</name></expr></argument>, <argument pos:start="107:49" pos:end="107:60"><expr pos:start="107:49" pos:end="107:60"><name pos:start="107:49" pos:end="107:60"><name pos:start="107:49" pos:end="107:51">ctx</name><operator pos:start="107:52" pos:end="107:53">-&gt;</operator><name pos:start="107:54" pos:end="107:60">mem_idx</name></name></expr></argument>, <argument pos:start="107:63" pos:end="107:69"><expr pos:start="107:63" pos:end="107:69"><name pos:start="107:63" pos:end="107:69">MO_LEUW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:58"><expr pos:start="109:9" pos:end="109:57"><call pos:start="109:9" pos:end="109:57"><name pos:start="109:9" pos:end="109:23">tcg_gen_shli_tl</name><argument_list pos:start="109:24" pos:end="109:57">(<argument pos:start="109:25" pos:end="109:37"><expr pos:start="109:25" pos:end="109:37"><name pos:start="109:25" pos:end="109:37"><name pos:start="109:25" pos:end="109:33">cpu_gpr_d</name><index pos:start="109:34" pos:end="109:37">[<expr pos:start="109:35" pos:end="109:36"><name pos:start="109:35" pos:end="109:36">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="109:40" pos:end="109:52"><expr pos:start="109:40" pos:end="109:52"><name pos:start="109:40" pos:end="109:52"><name pos:start="109:40" pos:end="109:48">cpu_gpr_d</name><index pos:start="109:49" pos:end="109:52">[<expr pos:start="109:50" pos:end="109:51"><name pos:start="109:50" pos:end="109:51">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="109:55" pos:end="109:56"><expr pos:start="109:55" pos:end="109:56"><literal type="number" pos:start="109:55" pos:end="109:56">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:28"><expr pos:start="113:9" pos:end="113:27"><call pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:21">tcg_temp_free</name><argument_list pos:start="113:22" pos:end="113:27">(<argument pos:start="113:23" pos:end="113:26"><expr pos:start="113:23" pos:end="113:26"><name pos:start="113:23" pos:end="113:26">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    <case pos:start="117:5" pos:end="117:25">case <expr pos:start="117:10" pos:end="117:24"><name pos:start="117:10" pos:end="117:24">OPC1_32_ABS_LEA</name></expr>:</case>

        <expr_stmt pos:start="119:9" pos:end="119:49"><expr pos:start="119:9" pos:end="119:48"><name pos:start="119:9" pos:end="119:15">address</name> <operator pos:start="119:17" pos:end="119:17">=</operator> <call pos:start="119:19" pos:end="119:48"><name pos:start="119:19" pos:end="119:35">MASK_OP_ABS_OFF18</name><argument_list pos:start="119:36" pos:end="119:48">(<argument pos:start="119:37" pos:end="119:47"><expr pos:start="119:37" pos:end="119:47"><name pos:start="119:37" pos:end="119:47"><name pos:start="119:37" pos:end="119:39">ctx</name><operator pos:start="119:40" pos:end="119:41">-&gt;</operator><name pos:start="119:42" pos:end="119:47">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:42"><expr pos:start="121:9" pos:end="121:41"><name pos:start="121:9" pos:end="121:10">r1</name> <operator pos:start="121:12" pos:end="121:12">=</operator> <call pos:start="121:14" pos:end="121:41"><name pos:start="121:14" pos:end="121:28">MASK_OP_ABS_S1D</name><argument_list pos:start="121:29" pos:end="121:41">(<argument pos:start="121:30" pos:end="121:40"><expr pos:start="121:30" pos:end="121:40"><name pos:start="121:30" pos:end="121:40"><name pos:start="121:30" pos:end="121:32">ctx</name><operator pos:start="121:33" pos:end="121:34">-&gt;</operator><name pos:start="121:35" pos:end="121:40">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:63"><expr pos:start="123:9" pos:end="123:62"><call pos:start="123:9" pos:end="123:62"><name pos:start="123:9" pos:end="123:23">tcg_gen_movi_tl</name><argument_list pos:start="123:24" pos:end="123:62">(<argument pos:start="123:25" pos:end="123:37"><expr pos:start="123:25" pos:end="123:37"><name pos:start="123:25" pos:end="123:37"><name pos:start="123:25" pos:end="123:33">cpu_gpr_a</name><index pos:start="123:34" pos:end="123:37">[<expr pos:start="123:35" pos:end="123:36"><name pos:start="123:35" pos:end="123:36">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="123:40" pos:end="123:61"><expr pos:start="123:40" pos:end="123:61"><call pos:start="123:40" pos:end="123:61"><name pos:start="123:40" pos:end="123:52">EA_ABS_FORMAT</name><argument_list pos:start="123:53" pos:end="123:61">(<argument pos:start="123:54" pos:end="123:60"><expr pos:start="123:54" pos:end="123:60"><name pos:start="123:54" pos:end="123:60">address</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="125:9" pos:end="125:14">break;</break>

<comment type="block" pos:start="127:1" pos:end="127:17">/* ABSB-format */</comment>

    <case pos:start="129:5" pos:end="129:27">case <expr pos:start="129:10" pos:end="129:26"><name pos:start="129:10" pos:end="129:26">OPC1_32_ABSB_ST_T</name></expr>:</case>

        <expr_stmt pos:start="131:9" pos:end="131:49"><expr pos:start="131:9" pos:end="131:48"><name pos:start="131:9" pos:end="131:15">address</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <call pos:start="131:19" pos:end="131:48"><name pos:start="131:19" pos:end="131:35">MASK_OP_ABS_OFF18</name><argument_list pos:start="131:36" pos:end="131:48">(<argument pos:start="131:37" pos:end="131:47"><expr pos:start="131:37" pos:end="131:47"><name pos:start="131:37" pos:end="131:47"><name pos:start="131:37" pos:end="131:39">ctx</name><operator pos:start="131:40" pos:end="131:41">-&gt;</operator><name pos:start="131:42" pos:end="131:47">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:40"><expr pos:start="133:9" pos:end="133:39"><name pos:start="133:9" pos:end="133:9">b</name> <operator pos:start="133:11" pos:end="133:11">=</operator> <call pos:start="133:13" pos:end="133:39"><name pos:start="133:13" pos:end="133:26">MASK_OP_ABSB_B</name><argument_list pos:start="133:27" pos:end="133:39">(<argument pos:start="133:28" pos:end="133:38"><expr pos:start="133:28" pos:end="133:38"><name pos:start="133:28" pos:end="133:38"><name pos:start="133:28" pos:end="133:30">ctx</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:38">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:46"><expr pos:start="135:9" pos:end="135:45"><name pos:start="135:9" pos:end="135:12">bpos</name> <operator pos:start="135:14" pos:end="135:14">=</operator> <call pos:start="135:16" pos:end="135:45"><name pos:start="135:16" pos:end="135:32">MASK_OP_ABSB_BPOS</name><argument_list pos:start="135:33" pos:end="135:45">(<argument pos:start="135:34" pos:end="135:44"><expr pos:start="135:34" pos:end="135:44"><name pos:start="135:34" pos:end="135:44"><name pos:start="135:34" pos:end="135:36">ctx</name><operator pos:start="135:37" pos:end="135:38">-&gt;</operator><name pos:start="135:39" pos:end="135:44">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="139:9" pos:end="139:53"><expr pos:start="139:9" pos:end="139:52"><name pos:start="139:9" pos:end="139:12">temp</name> <operator pos:start="139:14" pos:end="139:14">=</operator> <call pos:start="139:16" pos:end="139:52"><name pos:start="139:16" pos:end="139:28">tcg_const_i32</name><argument_list pos:start="139:29" pos:end="139:52">(<argument pos:start="139:30" pos:end="139:51"><expr pos:start="139:30" pos:end="139:51"><call pos:start="139:30" pos:end="139:51"><name pos:start="139:30" pos:end="139:42">EA_ABS_FORMAT</name><argument_list pos:start="139:43" pos:end="139:51">(<argument pos:start="139:44" pos:end="139:50"><expr pos:start="139:44" pos:end="139:50"><name pos:start="139:44" pos:end="139:50">address</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:31"><expr pos:start="141:9" pos:end="141:30"><name pos:start="141:9" pos:end="141:13">temp2</name> <operator pos:start="141:15" pos:end="141:15">=</operator> <call pos:start="141:17" pos:end="141:30"><name pos:start="141:17" pos:end="141:28">tcg_temp_new</name><argument_list pos:start="141:29" pos:end="141:30">()</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="145:9" pos:end="145:61"><expr pos:start="145:9" pos:end="145:60"><call pos:start="145:9" pos:end="145:60"><name pos:start="145:9" pos:end="145:26">tcg_gen_qemu_ld_tl</name><argument_list pos:start="145:27" pos:end="145:60">(<argument pos:start="145:28" pos:end="145:32"><expr pos:start="145:28" pos:end="145:32"><name pos:start="145:28" pos:end="145:32">temp2</name></expr></argument>, <argument pos:start="145:35" pos:end="145:38"><expr pos:start="145:35" pos:end="145:38"><name pos:start="145:35" pos:end="145:38">temp</name></expr></argument>, <argument pos:start="145:41" pos:end="145:52"><expr pos:start="145:41" pos:end="145:52"><name pos:start="145:41" pos:end="145:52"><name pos:start="145:41" pos:end="145:43">ctx</name><operator pos:start="145:44" pos:end="145:45">-&gt;</operator><name pos:start="145:46" pos:end="145:52">mem_idx</name></name></expr></argument>, <argument pos:start="145:55" pos:end="145:59"><expr pos:start="145:55" pos:end="145:59"><name pos:start="145:55" pos:end="145:59">MO_UB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:55"><expr pos:start="147:9" pos:end="147:54"><call pos:start="147:9" pos:end="147:54"><name pos:start="147:9" pos:end="147:23">tcg_gen_andi_tl</name><argument_list pos:start="147:24" pos:end="147:54">(<argument pos:start="147:25" pos:end="147:29"><expr pos:start="147:25" pos:end="147:29"><name pos:start="147:25" pos:end="147:29">temp2</name></expr></argument>, <argument pos:start="147:32" pos:end="147:36"><expr pos:start="147:32" pos:end="147:36"><name pos:start="147:32" pos:end="147:36">temp2</name></expr></argument>, <argument pos:start="147:39" pos:end="147:53"><expr pos:start="147:39" pos:end="147:53"><operator pos:start="147:39" pos:end="147:39">~</operator><operator pos:start="147:40" pos:end="147:40">(</operator><literal type="number" pos:start="147:41" pos:end="147:44">0x1u</literal> <operator pos:start="147:46" pos:end="147:47">&lt;&lt;</operator> <name pos:start="147:49" pos:end="147:52">bpos</name><operator pos:start="147:53" pos:end="147:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:50"><expr pos:start="149:9" pos:end="149:49"><call pos:start="149:9" pos:end="149:49"><name pos:start="149:9" pos:end="149:22">tcg_gen_ori_tl</name><argument_list pos:start="149:23" pos:end="149:49">(<argument pos:start="149:24" pos:end="149:28"><expr pos:start="149:24" pos:end="149:28"><name pos:start="149:24" pos:end="149:28">temp2</name></expr></argument>, <argument pos:start="149:31" pos:end="149:35"><expr pos:start="149:31" pos:end="149:35"><name pos:start="149:31" pos:end="149:35">temp2</name></expr></argument>, <argument pos:start="149:38" pos:end="149:48"><expr pos:start="149:38" pos:end="149:48"><operator pos:start="149:38" pos:end="149:38">(</operator><name pos:start="149:39" pos:end="149:39">b</name> <operator pos:start="149:41" pos:end="149:42">&lt;&lt;</operator> <name pos:start="149:44" pos:end="149:47">bpos</name><operator pos:start="149:48" pos:end="149:48">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:61"><expr pos:start="151:9" pos:end="151:60"><call pos:start="151:9" pos:end="151:60"><name pos:start="151:9" pos:end="151:26">tcg_gen_qemu_st_tl</name><argument_list pos:start="151:27" pos:end="151:60">(<argument pos:start="151:28" pos:end="151:32"><expr pos:start="151:28" pos:end="151:32"><name pos:start="151:28" pos:end="151:32">temp2</name></expr></argument>, <argument pos:start="151:35" pos:end="151:38"><expr pos:start="151:35" pos:end="151:38"><name pos:start="151:35" pos:end="151:38">temp</name></expr></argument>, <argument pos:start="151:41" pos:end="151:52"><expr pos:start="151:41" pos:end="151:52"><name pos:start="151:41" pos:end="151:52"><name pos:start="151:41" pos:end="151:43">ctx</name><operator pos:start="151:44" pos:end="151:45">-&gt;</operator><name pos:start="151:46" pos:end="151:52">mem_idx</name></name></expr></argument>, <argument pos:start="151:55" pos:end="151:59"><expr pos:start="151:55" pos:end="151:59"><name pos:start="151:55" pos:end="151:59">MO_UB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="155:9" pos:end="155:28"><expr pos:start="155:9" pos:end="155:27"><call pos:start="155:9" pos:end="155:27"><name pos:start="155:9" pos:end="155:21">tcg_temp_free</name><argument_list pos:start="155:22" pos:end="155:27">(<argument pos:start="155:23" pos:end="155:26"><expr pos:start="155:23" pos:end="155:26"><name pos:start="155:23" pos:end="155:26">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:29"><expr pos:start="157:9" pos:end="157:28"><call pos:start="157:9" pos:end="157:28"><name pos:start="157:9" pos:end="157:21">tcg_temp_free</name><argument_list pos:start="157:22" pos:end="157:28">(<argument pos:start="157:23" pos:end="157:27"><expr pos:start="157:23" pos:end="157:27"><name pos:start="157:23" pos:end="157:27">temp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="159:9" pos:end="159:14">break;</break>

<comment type="block" pos:start="161:1" pos:end="161:14">/* B-format */</comment>

    <case pos:start="163:5" pos:end="163:24">case <expr pos:start="163:10" pos:end="163:23"><name pos:start="163:10" pos:end="163:23">OPC1_32_B_CALL</name></expr>:</case>

    <case pos:start="165:5" pos:end="165:25">case <expr pos:start="165:10" pos:end="165:24"><name pos:start="165:10" pos:end="165:24">OPC1_32_B_CALLA</name></expr>:</case>

    <case pos:start="167:5" pos:end="167:21">case <expr pos:start="167:10" pos:end="167:20"><name pos:start="167:10" pos:end="167:20">OPC1_32_B_J</name></expr>:</case>

    <case pos:start="169:5" pos:end="169:22">case <expr pos:start="169:10" pos:end="169:21"><name pos:start="169:10" pos:end="169:21">OPC1_32_B_JA</name></expr>:</case>

    <case pos:start="171:5" pos:end="171:22">case <expr pos:start="171:10" pos:end="171:21"><name pos:start="171:10" pos:end="171:21">OPC1_32_B_JL</name></expr>:</case>

    <case pos:start="173:5" pos:end="173:23">case <expr pos:start="173:10" pos:end="173:22"><name pos:start="173:10" pos:end="173:22">OPC1_32_B_JLA</name></expr>:</case>

        <expr_stmt pos:start="175:9" pos:end="175:48"><expr pos:start="175:9" pos:end="175:47"><name pos:start="175:9" pos:end="175:15">address</name> <operator pos:start="175:17" pos:end="175:17">=</operator> <call pos:start="175:19" pos:end="175:47"><name pos:start="175:19" pos:end="175:34">MASK_OP_B_DISP24</name><argument_list pos:start="175:35" pos:end="175:47">(<argument pos:start="175:36" pos:end="175:46"><expr pos:start="175:36" pos:end="175:46"><name pos:start="175:36" pos:end="175:46"><name pos:start="175:36" pos:end="175:38">ctx</name><operator pos:start="175:39" pos:end="175:40">-&gt;</operator><name pos:start="175:41" pos:end="175:46">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:55"><expr pos:start="177:9" pos:end="177:54"><call pos:start="177:9" pos:end="177:54"><name pos:start="177:9" pos:end="177:26">gen_compute_branch</name><argument_list pos:start="177:27" pos:end="177:54">(<argument pos:start="177:28" pos:end="177:30"><expr pos:start="177:28" pos:end="177:30"><name pos:start="177:28" pos:end="177:30">ctx</name></expr></argument>, <argument pos:start="177:33" pos:end="177:35"><expr pos:start="177:33" pos:end="177:35"><name pos:start="177:33" pos:end="177:35">op1</name></expr></argument>, <argument pos:start="177:38" pos:end="177:38"><expr pos:start="177:38" pos:end="177:38"><literal type="number" pos:start="177:38" pos:end="177:38">0</literal></expr></argument>, <argument pos:start="177:41" pos:end="177:41"><expr pos:start="177:41" pos:end="177:41"><literal type="number" pos:start="177:41" pos:end="177:41">0</literal></expr></argument>, <argument pos:start="177:44" pos:end="177:44"><expr pos:start="177:44" pos:end="177:44"><literal type="number" pos:start="177:44" pos:end="177:44">0</literal></expr></argument>, <argument pos:start="177:47" pos:end="177:53"><expr pos:start="177:47" pos:end="177:53"><name pos:start="177:47" pos:end="177:53">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="179:9" pos:end="179:14">break;</break>

<comment type="block" pos:start="181:1" pos:end="181:16">/* Bit-format */</comment>

    <case pos:start="183:5" pos:end="183:28">case <expr pos:start="183:10" pos:end="183:27"><name pos:start="183:10" pos:end="183:27">OPCM_32_BIT_ANDACC</name></expr>:</case>

        <expr_stmt pos:start="185:9" pos:end="185:36"><expr pos:start="185:9" pos:end="185:35"><call pos:start="185:9" pos:end="185:35"><name pos:start="185:9" pos:end="185:25">decode_bit_andacc</name><argument_list pos:start="185:26" pos:end="185:35">(<argument pos:start="185:27" pos:end="185:29"><expr pos:start="185:27" pos:end="185:29"><name pos:start="185:27" pos:end="185:29">env</name></expr></argument>, <argument pos:start="185:32" pos:end="185:34"><expr pos:start="185:32" pos:end="185:34"><name pos:start="185:32" pos:end="185:34">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="187:9" pos:end="187:14">break;</break>

    <case pos:start="189:5" pos:end="189:32">case <expr pos:start="189:10" pos:end="189:31"><name pos:start="189:10" pos:end="189:31">OPCM_32_BIT_LOGICAL_T1</name></expr>:</case>

        <expr_stmt pos:start="191:9" pos:end="191:39"><expr pos:start="191:9" pos:end="191:38"><call pos:start="191:9" pos:end="191:38"><name pos:start="191:9" pos:end="191:28">decode_bit_logical_t</name><argument_list pos:start="191:29" pos:end="191:38">(<argument pos:start="191:30" pos:end="191:32"><expr pos:start="191:30" pos:end="191:32"><name pos:start="191:30" pos:end="191:32">env</name></expr></argument>, <argument pos:start="191:35" pos:end="191:37"><expr pos:start="191:35" pos:end="191:37"><name pos:start="191:35" pos:end="191:37">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="193:9" pos:end="193:14">break;</break>

    <case pos:start="195:5" pos:end="195:28">case <expr pos:start="195:10" pos:end="195:27"><name pos:start="195:10" pos:end="195:27">OPCM_32_BIT_INSERT</name></expr>:</case>

        <expr_stmt pos:start="197:9" pos:end="197:36"><expr pos:start="197:9" pos:end="197:35"><call pos:start="197:9" pos:end="197:35"><name pos:start="197:9" pos:end="197:25">decode_bit_insert</name><argument_list pos:start="197:26" pos:end="197:35">(<argument pos:start="197:27" pos:end="197:29"><expr pos:start="197:27" pos:end="197:29"><name pos:start="197:27" pos:end="197:29">env</name></expr></argument>, <argument pos:start="197:32" pos:end="197:34"><expr pos:start="197:32" pos:end="197:34"><name pos:start="197:32" pos:end="197:34">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="199:9" pos:end="199:14">break;</break>

    <case pos:start="201:5" pos:end="201:32">case <expr pos:start="201:10" pos:end="201:31"><name pos:start="201:10" pos:end="201:31">OPCM_32_BIT_LOGICAL_T2</name></expr>:</case>

        <expr_stmt pos:start="203:9" pos:end="203:40"><expr pos:start="203:9" pos:end="203:39"><call pos:start="203:9" pos:end="203:39"><name pos:start="203:9" pos:end="203:29">decode_bit_logical_t2</name><argument_list pos:start="203:30" pos:end="203:39">(<argument pos:start="203:31" pos:end="203:33"><expr pos:start="203:31" pos:end="203:33"><name pos:start="203:31" pos:end="203:33">env</name></expr></argument>, <argument pos:start="203:36" pos:end="203:38"><expr pos:start="203:36" pos:end="203:38"><name pos:start="203:36" pos:end="203:38">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="205:9" pos:end="205:14">break;</break>

    <case pos:start="207:5" pos:end="207:27">case <expr pos:start="207:10" pos:end="207:26"><name pos:start="207:10" pos:end="207:26">OPCM_32_BIT_ORAND</name></expr>:</case>

        <expr_stmt pos:start="209:9" pos:end="209:35"><expr pos:start="209:9" pos:end="209:34"><call pos:start="209:9" pos:end="209:34"><name pos:start="209:9" pos:end="209:24">decode_bit_orand</name><argument_list pos:start="209:25" pos:end="209:34">(<argument pos:start="209:26" pos:end="209:28"><expr pos:start="209:26" pos:end="209:28"><name pos:start="209:26" pos:end="209:28">env</name></expr></argument>, <argument pos:start="209:31" pos:end="209:33"><expr pos:start="209:31" pos:end="209:33"><name pos:start="209:31" pos:end="209:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="211:9" pos:end="211:14">break;</break>

    <case pos:start="213:5" pos:end="213:31">case <expr pos:start="213:10" pos:end="213:30"><name pos:start="213:10" pos:end="213:30">OPCM_32_BIT_SH_LOGIC1</name></expr>:</case>

        <expr_stmt pos:start="215:9" pos:end="215:39"><expr pos:start="215:9" pos:end="215:38"><call pos:start="215:9" pos:end="215:38"><name pos:start="215:9" pos:end="215:28">decode_bit_sh_logic1</name><argument_list pos:start="215:29" pos:end="215:38">(<argument pos:start="215:30" pos:end="215:32"><expr pos:start="215:30" pos:end="215:32"><name pos:start="215:30" pos:end="215:32">env</name></expr></argument>, <argument pos:start="215:35" pos:end="215:37"><expr pos:start="215:35" pos:end="215:37"><name pos:start="215:35" pos:end="215:37">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="217:9" pos:end="217:14">break;</break>

    <case pos:start="219:5" pos:end="219:31">case <expr pos:start="219:10" pos:end="219:30"><name pos:start="219:10" pos:end="219:30">OPCM_32_BIT_SH_LOGIC2</name></expr>:</case>

        <expr_stmt pos:start="221:9" pos:end="221:39"><expr pos:start="221:9" pos:end="221:38"><call pos:start="221:9" pos:end="221:38"><name pos:start="221:9" pos:end="221:28">decode_bit_sh_logic2</name><argument_list pos:start="221:29" pos:end="221:38">(<argument pos:start="221:30" pos:end="221:32"><expr pos:start="221:30" pos:end="221:32"><name pos:start="221:30" pos:end="221:32">env</name></expr></argument>, <argument pos:start="221:35" pos:end="221:37"><expr pos:start="221:35" pos:end="221:37"><name pos:start="221:35" pos:end="221:37">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="223:9" pos:end="223:14">break;</break>

    <comment type="block" pos:start="225:5" pos:end="225:19">/* BO Format */</comment>

    <case pos:start="227:5" pos:end="227:43">case <expr pos:start="227:10" pos:end="227:42"><name pos:start="227:10" pos:end="227:42">OPCM_32_BO_ADDRMODE_POST_PRE_BASE</name></expr>:</case>

        <expr_stmt pos:start="229:9" pos:end="229:51"><expr pos:start="229:9" pos:end="229:50"><call pos:start="229:9" pos:end="229:50"><name pos:start="229:9" pos:end="229:40">decode_bo_addrmode_post_pre_base</name><argument_list pos:start="229:41" pos:end="229:50">(<argument pos:start="229:42" pos:end="229:44"><expr pos:start="229:42" pos:end="229:44"><name pos:start="229:42" pos:end="229:44">env</name></expr></argument>, <argument pos:start="229:47" pos:end="229:49"><expr pos:start="229:47" pos:end="229:49"><name pos:start="229:47" pos:end="229:49">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="231:9" pos:end="231:14">break;</break>

    <case pos:start="233:5" pos:end="233:49">case <expr pos:start="233:10" pos:end="233:48"><name pos:start="233:10" pos:end="233:48">OPCM_32_BO_ADDRMODE_BITREVERSE_CIRCULAR</name></expr>:</case>

        <expr_stmt pos:start="235:9" pos:end="235:57"><expr pos:start="235:9" pos:end="235:56"><call pos:start="235:9" pos:end="235:56"><name pos:start="235:9" pos:end="235:46">decode_bo_addrmode_bitreverse_circular</name><argument_list pos:start="235:47" pos:end="235:56">(<argument pos:start="235:48" pos:end="235:50"><expr pos:start="235:48" pos:end="235:50"><name pos:start="235:48" pos:end="235:50">env</name></expr></argument>, <argument pos:start="235:53" pos:end="235:55"><expr pos:start="235:53" pos:end="235:55"><name pos:start="235:53" pos:end="235:55">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="237:9" pos:end="237:14">break;</break>

    <case pos:start="239:5" pos:end="239:46">case <expr pos:start="239:10" pos:end="239:45"><name pos:start="239:10" pos:end="239:45">OPCM_32_BO_ADDRMODE_LD_POST_PRE_BASE</name></expr>:</case>

        <expr_stmt pos:start="241:9" pos:end="241:54"><expr pos:start="241:9" pos:end="241:53"><call pos:start="241:9" pos:end="241:53"><name pos:start="241:9" pos:end="241:43">decode_bo_addrmode_ld_post_pre_base</name><argument_list pos:start="241:44" pos:end="241:53">(<argument pos:start="241:45" pos:end="241:47"><expr pos:start="241:45" pos:end="241:47"><name pos:start="241:45" pos:end="241:47">env</name></expr></argument>, <argument pos:start="241:50" pos:end="241:52"><expr pos:start="241:50" pos:end="241:52"><name pos:start="241:50" pos:end="241:52">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="243:9" pos:end="243:14">break;</break>

    <case pos:start="245:5" pos:end="245:52">case <expr pos:start="245:10" pos:end="245:51"><name pos:start="245:10" pos:end="245:51">OPCM_32_BO_ADDRMODE_LD_BITREVERSE_CIRCULAR</name></expr>:</case>

        <expr_stmt pos:start="247:9" pos:end="247:60"><expr pos:start="247:9" pos:end="247:59"><call pos:start="247:9" pos:end="247:59"><name pos:start="247:9" pos:end="247:49">decode_bo_addrmode_ld_bitreverse_circular</name><argument_list pos:start="247:50" pos:end="247:59">(<argument pos:start="247:51" pos:end="247:53"><expr pos:start="247:51" pos:end="247:53"><name pos:start="247:51" pos:end="247:53">env</name></expr></argument>, <argument pos:start="247:56" pos:end="247:58"><expr pos:start="247:56" pos:end="247:58"><name pos:start="247:56" pos:end="247:58">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="249:9" pos:end="249:14">break;</break>

    <case pos:start="251:5" pos:end="251:49">case <expr pos:start="251:10" pos:end="251:48"><name pos:start="251:10" pos:end="251:48">OPCM_32_BO_ADDRMODE_STCTX_POST_PRE_BASE</name></expr>:</case>

        <expr_stmt pos:start="253:9" pos:end="253:57"><expr pos:start="253:9" pos:end="253:56"><call pos:start="253:9" pos:end="253:56"><name pos:start="253:9" pos:end="253:46">decode_bo_addrmode_stctx_post_pre_base</name><argument_list pos:start="253:47" pos:end="253:56">(<argument pos:start="253:48" pos:end="253:50"><expr pos:start="253:48" pos:end="253:50"><name pos:start="253:48" pos:end="253:50">env</name></expr></argument>, <argument pos:start="253:53" pos:end="253:55"><expr pos:start="253:53" pos:end="253:55"><name pos:start="253:53" pos:end="253:55">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="255:9" pos:end="255:14">break;</break>

    <case pos:start="257:5" pos:end="257:55">case <expr pos:start="257:10" pos:end="257:54"><name pos:start="257:10" pos:end="257:54">OPCM_32_BO_ADDRMODE_LDMST_BITREVERSE_CIRCULAR</name></expr>:</case>

        <expr_stmt pos:start="259:9" pos:end="259:63"><expr pos:start="259:9" pos:end="259:62"><call pos:start="259:9" pos:end="259:62"><name pos:start="259:9" pos:end="259:52">decode_bo_addrmode_ldmst_bitreverse_circular</name><argument_list pos:start="259:53" pos:end="259:62">(<argument pos:start="259:54" pos:end="259:56"><expr pos:start="259:54" pos:end="259:56"><name pos:start="259:54" pos:end="259:56">env</name></expr></argument>, <argument pos:start="259:59" pos:end="259:61"><expr pos:start="259:59" pos:end="259:61"><name pos:start="259:59" pos:end="259:61">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="261:9" pos:end="261:14">break;</break>

<comment type="block" pos:start="263:1" pos:end="263:16">/* BOL-format */</comment>

    <case pos:start="265:5" pos:end="265:34">case <expr pos:start="265:10" pos:end="265:33"><name pos:start="265:10" pos:end="265:33">OPC1_32_BOL_LD_A_LONGOFF</name></expr>:</case>

    <case pos:start="267:5" pos:end="267:34">case <expr pos:start="267:10" pos:end="267:33"><name pos:start="267:10" pos:end="267:33">OPC1_32_BOL_LD_W_LONGOFF</name></expr>:</case>

    <case pos:start="269:5" pos:end="269:33">case <expr pos:start="269:10" pos:end="269:32"><name pos:start="269:10" pos:end="269:32">OPC1_32_BOL_LEA_LONGOFF</name></expr>:</case>

    <case pos:start="271:5" pos:end="271:34">case <expr pos:start="271:10" pos:end="271:33"><name pos:start="271:10" pos:end="271:33">OPC1_32_BOL_ST_W_LONGOFF</name></expr>:</case>

    <case pos:start="273:5" pos:end="273:34">case <expr pos:start="273:10" pos:end="273:33"><name pos:start="273:10" pos:end="273:33">OPC1_32_BOL_ST_A_LONGOFF</name></expr>:</case>

        <expr_stmt pos:start="275:9" pos:end="275:38"><expr pos:start="275:9" pos:end="275:37"><call pos:start="275:9" pos:end="275:37"><name pos:start="275:9" pos:end="275:22">decode_bol_opc</name><argument_list pos:start="275:23" pos:end="275:37">(<argument pos:start="275:24" pos:end="275:26"><expr pos:start="275:24" pos:end="275:26"><name pos:start="275:24" pos:end="275:26">env</name></expr></argument>, <argument pos:start="275:29" pos:end="275:31"><expr pos:start="275:29" pos:end="275:31"><name pos:start="275:29" pos:end="275:31">ctx</name></expr></argument>, <argument pos:start="275:34" pos:end="275:36"><expr pos:start="275:34" pos:end="275:36"><name pos:start="275:34" pos:end="275:36">op1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="277:9" pos:end="277:14">break;</break>

<comment type="block" pos:start="279:1" pos:end="279:16">/* BRC Format */</comment>

    <case pos:start="281:5" pos:end="281:28">case <expr pos:start="281:10" pos:end="281:27"><name pos:start="281:10" pos:end="281:27">OPCM_32_BRC_EQ_NEQ</name></expr>:</case>

    <case pos:start="283:5" pos:end="283:24">case <expr pos:start="283:10" pos:end="283:23"><name pos:start="283:10" pos:end="283:23">OPCM_32_BRC_GE</name></expr>:</case>

    <case pos:start="285:5" pos:end="285:25">case <expr pos:start="285:10" pos:end="285:24"><name pos:start="285:10" pos:end="285:24">OPCM_32_BRC_JLT</name></expr>:</case>

    <case pos:start="287:5" pos:end="287:25">case <expr pos:start="287:10" pos:end="287:24"><name pos:start="287:10" pos:end="287:24">OPCM_32_BRC_JNE</name></expr>:</case>

        <expr_stmt pos:start="289:9" pos:end="289:54"><expr pos:start="289:9" pos:end="289:53"><name pos:start="289:9" pos:end="289:14">const4</name> <operator pos:start="289:16" pos:end="289:16">=</operator> <call pos:start="289:18" pos:end="289:53"><name pos:start="289:18" pos:end="289:40">MASK_OP_BRC_CONST4_SEXT</name><argument_list pos:start="289:41" pos:end="289:53">(<argument pos:start="289:42" pos:end="289:52"><expr pos:start="289:42" pos:end="289:52"><name pos:start="289:42" pos:end="289:52"><name pos:start="289:42" pos:end="289:44">ctx</name><operator pos:start="289:45" pos:end="289:46">-&gt;</operator><name pos:start="289:47" pos:end="289:52">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:55"><expr pos:start="291:9" pos:end="291:54"><name pos:start="291:9" pos:end="291:15">address</name> <operator pos:start="291:17" pos:end="291:17">=</operator> <call pos:start="291:19" pos:end="291:54"><name pos:start="291:19" pos:end="291:41">MASK_OP_BRC_DISP15_SEXT</name><argument_list pos:start="291:42" pos:end="291:54">(<argument pos:start="291:43" pos:end="291:53"><expr pos:start="291:43" pos:end="291:53"><name pos:start="291:43" pos:end="291:53"><name pos:start="291:43" pos:end="291:45">ctx</name><operator pos:start="291:46" pos:end="291:47">-&gt;</operator><name pos:start="291:48" pos:end="291:53">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:41"><expr pos:start="293:9" pos:end="293:40"><name pos:start="293:9" pos:end="293:10">r1</name> <operator pos:start="293:12" pos:end="293:12">=</operator> <call pos:start="293:14" pos:end="293:40"><name pos:start="293:14" pos:end="293:27">MASK_OP_BRC_S1</name><argument_list pos:start="293:28" pos:end="293:40">(<argument pos:start="293:29" pos:end="293:39"><expr pos:start="293:29" pos:end="293:39"><name pos:start="293:29" pos:end="293:39"><name pos:start="293:29" pos:end="293:31">ctx</name><operator pos:start="293:32" pos:end="293:33">-&gt;</operator><name pos:start="293:34" pos:end="293:39">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="295:9" pos:end="295:61"><expr pos:start="295:9" pos:end="295:60"><call pos:start="295:9" pos:end="295:60"><name pos:start="295:9" pos:end="295:26">gen_compute_branch</name><argument_list pos:start="295:27" pos:end="295:60">(<argument pos:start="295:28" pos:end="295:30"><expr pos:start="295:28" pos:end="295:30"><name pos:start="295:28" pos:end="295:30">ctx</name></expr></argument>, <argument pos:start="295:33" pos:end="295:35"><expr pos:start="295:33" pos:end="295:35"><name pos:start="295:33" pos:end="295:35">op1</name></expr></argument>, <argument pos:start="295:38" pos:end="295:39"><expr pos:start="295:38" pos:end="295:39"><name pos:start="295:38" pos:end="295:39">r1</name></expr></argument>, <argument pos:start="295:42" pos:end="295:42"><expr pos:start="295:42" pos:end="295:42"><literal type="number" pos:start="295:42" pos:end="295:42">0</literal></expr></argument>, <argument pos:start="295:45" pos:end="295:50"><expr pos:start="295:45" pos:end="295:50"><name pos:start="295:45" pos:end="295:50">const4</name></expr></argument>, <argument pos:start="295:53" pos:end="295:59"><expr pos:start="295:53" pos:end="295:59"><name pos:start="295:53" pos:end="295:59">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="297:9" pos:end="297:14">break;</break>

<comment type="block" pos:start="299:1" pos:end="299:16">/* BRN Format */</comment>

    <case pos:start="301:5" pos:end="301:25">case <expr pos:start="301:10" pos:end="301:24"><name pos:start="301:10" pos:end="301:24">OPCM_32_BRN_JTT</name></expr>:</case>

        <expr_stmt pos:start="303:9" pos:end="303:55"><expr pos:start="303:9" pos:end="303:54"><name pos:start="303:9" pos:end="303:15">address</name> <operator pos:start="303:17" pos:end="303:17">=</operator> <call pos:start="303:19" pos:end="303:54"><name pos:start="303:19" pos:end="303:41">MASK_OP_BRN_DISP15_SEXT</name><argument_list pos:start="303:42" pos:end="303:54">(<argument pos:start="303:43" pos:end="303:53"><expr pos:start="303:43" pos:end="303:53"><name pos:start="303:43" pos:end="303:53"><name pos:start="303:43" pos:end="303:45">ctx</name><operator pos:start="303:46" pos:end="303:47">-&gt;</operator><name pos:start="303:48" pos:end="303:53">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:41"><expr pos:start="305:9" pos:end="305:40"><name pos:start="305:9" pos:end="305:10">r1</name> <operator pos:start="305:12" pos:end="305:12">=</operator> <call pos:start="305:14" pos:end="305:40"><name pos:start="305:14" pos:end="305:27">MASK_OP_BRN_S1</name><argument_list pos:start="305:28" pos:end="305:40">(<argument pos:start="305:29" pos:end="305:39"><expr pos:start="305:29" pos:end="305:39"><name pos:start="305:29" pos:end="305:39"><name pos:start="305:29" pos:end="305:31">ctx</name><operator pos:start="305:32" pos:end="305:33">-&gt;</operator><name pos:start="305:34" pos:end="305:39">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:56"><expr pos:start="307:9" pos:end="307:55"><call pos:start="307:9" pos:end="307:55"><name pos:start="307:9" pos:end="307:26">gen_compute_branch</name><argument_list pos:start="307:27" pos:end="307:55">(<argument pos:start="307:28" pos:end="307:30"><expr pos:start="307:28" pos:end="307:30"><name pos:start="307:28" pos:end="307:30">ctx</name></expr></argument>, <argument pos:start="307:33" pos:end="307:35"><expr pos:start="307:33" pos:end="307:35"><name pos:start="307:33" pos:end="307:35">op1</name></expr></argument>, <argument pos:start="307:38" pos:end="307:39"><expr pos:start="307:38" pos:end="307:39"><name pos:start="307:38" pos:end="307:39">r1</name></expr></argument>, <argument pos:start="307:42" pos:end="307:42"><expr pos:start="307:42" pos:end="307:42"><literal type="number" pos:start="307:42" pos:end="307:42">0</literal></expr></argument>, <argument pos:start="307:45" pos:end="307:45"><expr pos:start="307:45" pos:end="307:45"><literal type="number" pos:start="307:45" pos:end="307:45">0</literal></expr></argument>, <argument pos:start="307:48" pos:end="307:54"><expr pos:start="307:48" pos:end="307:54"><name pos:start="307:48" pos:end="307:54">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="309:9" pos:end="309:14">break;</break>

<comment type="block" pos:start="311:1" pos:end="311:16">/* BRR Format */</comment>

    <case pos:start="313:5" pos:end="313:28">case <expr pos:start="313:10" pos:end="313:27"><name pos:start="313:10" pos:end="313:27">OPCM_32_BRR_EQ_NEQ</name></expr>:</case>

    <case pos:start="315:5" pos:end="315:33">case <expr pos:start="315:10" pos:end="315:32"><name pos:start="315:10" pos:end="315:32">OPCM_32_BRR_ADDR_EQ_NEQ</name></expr>:</case>

    <case pos:start="317:5" pos:end="317:24">case <expr pos:start="317:10" pos:end="317:23"><name pos:start="317:10" pos:end="317:23">OPCM_32_BRR_GE</name></expr>:</case>

    <case pos:start="319:5" pos:end="319:25">case <expr pos:start="319:10" pos:end="319:24"><name pos:start="319:10" pos:end="319:24">OPCM_32_BRR_JLT</name></expr>:</case>

    <case pos:start="321:5" pos:end="321:25">case <expr pos:start="321:10" pos:end="321:24"><name pos:start="321:10" pos:end="321:24">OPCM_32_BRR_JNE</name></expr>:</case>

    <case pos:start="323:5" pos:end="323:25">case <expr pos:start="323:10" pos:end="323:24"><name pos:start="323:10" pos:end="323:24">OPCM_32_BRR_JNZ</name></expr>:</case>

    <case pos:start="325:5" pos:end="325:26">case <expr pos:start="325:10" pos:end="325:25"><name pos:start="325:10" pos:end="325:25">OPCM_32_BRR_LOOP</name></expr>:</case>

        <expr_stmt pos:start="327:9" pos:end="327:55"><expr pos:start="327:9" pos:end="327:54"><name pos:start="327:9" pos:end="327:15">address</name> <operator pos:start="327:17" pos:end="327:17">=</operator> <call pos:start="327:19" pos:end="327:54"><name pos:start="327:19" pos:end="327:41">MASK_OP_BRR_DISP15_SEXT</name><argument_list pos:start="327:42" pos:end="327:54">(<argument pos:start="327:43" pos:end="327:53"><expr pos:start="327:43" pos:end="327:53"><name pos:start="327:43" pos:end="327:53"><name pos:start="327:43" pos:end="327:45">ctx</name><operator pos:start="327:46" pos:end="327:47">-&gt;</operator><name pos:start="327:48" pos:end="327:53">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="329:9" pos:end="329:41"><expr pos:start="329:9" pos:end="329:40"><name pos:start="329:9" pos:end="329:10">r2</name> <operator pos:start="329:12" pos:end="329:12">=</operator> <call pos:start="329:14" pos:end="329:40"><name pos:start="329:14" pos:end="329:27">MASK_OP_BRR_S2</name><argument_list pos:start="329:28" pos:end="329:40">(<argument pos:start="329:29" pos:end="329:39"><expr pos:start="329:29" pos:end="329:39"><name pos:start="329:29" pos:end="329:39"><name pos:start="329:29" pos:end="329:31">ctx</name><operator pos:start="329:32" pos:end="329:33">-&gt;</operator><name pos:start="329:34" pos:end="329:39">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="331:9" pos:end="331:41"><expr pos:start="331:9" pos:end="331:40"><name pos:start="331:9" pos:end="331:10">r1</name> <operator pos:start="331:12" pos:end="331:12">=</operator> <call pos:start="331:14" pos:end="331:40"><name pos:start="331:14" pos:end="331:27">MASK_OP_BRR_S1</name><argument_list pos:start="331:28" pos:end="331:40">(<argument pos:start="331:29" pos:end="331:39"><expr pos:start="331:29" pos:end="331:39"><name pos:start="331:29" pos:end="331:39"><name pos:start="331:29" pos:end="331:31">ctx</name><operator pos:start="331:32" pos:end="331:33">-&gt;</operator><name pos:start="331:34" pos:end="331:39">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:57"><expr pos:start="333:9" pos:end="333:56"><call pos:start="333:9" pos:end="333:56"><name pos:start="333:9" pos:end="333:26">gen_compute_branch</name><argument_list pos:start="333:27" pos:end="333:56">(<argument pos:start="333:28" pos:end="333:30"><expr pos:start="333:28" pos:end="333:30"><name pos:start="333:28" pos:end="333:30">ctx</name></expr></argument>, <argument pos:start="333:33" pos:end="333:35"><expr pos:start="333:33" pos:end="333:35"><name pos:start="333:33" pos:end="333:35">op1</name></expr></argument>, <argument pos:start="333:38" pos:end="333:39"><expr pos:start="333:38" pos:end="333:39"><name pos:start="333:38" pos:end="333:39">r1</name></expr></argument>, <argument pos:start="333:42" pos:end="333:43"><expr pos:start="333:42" pos:end="333:43"><name pos:start="333:42" pos:end="333:43">r2</name></expr></argument>, <argument pos:start="333:46" pos:end="333:46"><expr pos:start="333:46" pos:end="333:46"><literal type="number" pos:start="333:46" pos:end="333:46">0</literal></expr></argument>, <argument pos:start="333:49" pos:end="333:55"><expr pos:start="333:49" pos:end="333:55"><name pos:start="333:49" pos:end="333:55">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="335:9" pos:end="335:14">break;</break>

<comment type="block" pos:start="337:1" pos:end="337:15">/* RC Format */</comment>

    <case pos:start="339:5" pos:end="339:34">case <expr pos:start="339:10" pos:end="339:33"><name pos:start="339:10" pos:end="339:33">OPCM_32_RC_LOGICAL_SHIFT</name></expr>:</case>

        <expr_stmt pos:start="341:9" pos:end="341:42"><expr pos:start="341:9" pos:end="341:41"><call pos:start="341:9" pos:end="341:41"><name pos:start="341:9" pos:end="341:31">decode_rc_logical_shift</name><argument_list pos:start="341:32" pos:end="341:41">(<argument pos:start="341:33" pos:end="341:35"><expr pos:start="341:33" pos:end="341:35"><name pos:start="341:33" pos:end="341:35">env</name></expr></argument>, <argument pos:start="341:38" pos:end="341:40"><expr pos:start="341:38" pos:end="341:40"><name pos:start="341:38" pos:end="341:40">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="343:9" pos:end="343:14">break;</break>

    <case pos:start="345:5" pos:end="345:32">case <expr pos:start="345:10" pos:end="345:31"><name pos:start="345:10" pos:end="345:31">OPCM_32_RC_ACCUMULATOR</name></expr>:</case>

        <expr_stmt pos:start="347:9" pos:end="347:40"><expr pos:start="347:9" pos:end="347:39"><call pos:start="347:9" pos:end="347:39"><name pos:start="347:9" pos:end="347:29">decode_rc_accumulator</name><argument_list pos:start="347:30" pos:end="347:39">(<argument pos:start="347:31" pos:end="347:33"><expr pos:start="347:31" pos:end="347:33"><name pos:start="347:31" pos:end="347:33">env</name></expr></argument>, <argument pos:start="347:36" pos:end="347:38"><expr pos:start="347:36" pos:end="347:38"><name pos:start="347:36" pos:end="347:38">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="349:9" pos:end="349:14">break;</break>

    <case pos:start="351:5" pos:end="351:35">case <expr pos:start="351:10" pos:end="351:34"><name pos:start="351:10" pos:end="351:34">OPCM_32_RC_SERVICEROUTINE</name></expr>:</case>

        <expr_stmt pos:start="353:9" pos:end="353:43"><expr pos:start="353:9" pos:end="353:42"><call pos:start="353:9" pos:end="353:42"><name pos:start="353:9" pos:end="353:32">decode_rc_serviceroutine</name><argument_list pos:start="353:33" pos:end="353:42">(<argument pos:start="353:34" pos:end="353:36"><expr pos:start="353:34" pos:end="353:36"><name pos:start="353:34" pos:end="353:36">env</name></expr></argument>, <argument pos:start="353:39" pos:end="353:41"><expr pos:start="353:39" pos:end="353:41"><name pos:start="353:39" pos:end="353:41">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="355:9" pos:end="355:14">break;</break>

    <case pos:start="357:5" pos:end="357:24">case <expr pos:start="357:10" pos:end="357:23"><name pos:start="357:10" pos:end="357:23">OPCM_32_RC_MUL</name></expr>:</case>

        <expr_stmt pos:start="359:9" pos:end="359:32"><expr pos:start="359:9" pos:end="359:31"><call pos:start="359:9" pos:end="359:31"><name pos:start="359:9" pos:end="359:21">decode_rc_mul</name><argument_list pos:start="359:22" pos:end="359:31">(<argument pos:start="359:23" pos:end="359:25"><expr pos:start="359:23" pos:end="359:25"><name pos:start="359:23" pos:end="359:25">env</name></expr></argument>, <argument pos:start="359:28" pos:end="359:30"><expr pos:start="359:28" pos:end="359:30"><name pos:start="359:28" pos:end="359:30">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="361:9" pos:end="361:14">break;</break>

<comment type="block" pos:start="363:1" pos:end="363:17">/* RCPW Format */</comment>

    <case pos:start="365:5" pos:end="365:34">case <expr pos:start="365:10" pos:end="365:33"><name pos:start="365:10" pos:end="365:33">OPCM_32_RCPW_MASK_INSERT</name></expr>:</case>

        <expr_stmt pos:start="367:9" pos:end="367:37"><expr pos:start="367:9" pos:end="367:36"><call pos:start="367:9" pos:end="367:36"><name pos:start="367:9" pos:end="367:26">decode_rcpw_insert</name><argument_list pos:start="367:27" pos:end="367:36">(<argument pos:start="367:28" pos:end="367:30"><expr pos:start="367:28" pos:end="367:30"><name pos:start="367:28" pos:end="367:30">env</name></expr></argument>, <argument pos:start="367:33" pos:end="367:35"><expr pos:start="367:33" pos:end="367:35"><name pos:start="367:33" pos:end="367:35">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="369:9" pos:end="369:14">break;</break>

<comment type="block" pos:start="371:1" pos:end="371:17">/* RCRR Format */</comment>

    <case pos:start="373:5" pos:end="373:29">case <expr pos:start="373:10" pos:end="373:28"><name pos:start="373:10" pos:end="373:28">OPC1_32_RCRR_INSERT</name></expr>:</case>

        <expr_stmt pos:start="375:9" pos:end="375:42"><expr pos:start="375:9" pos:end="375:41"><name pos:start="375:9" pos:end="375:10">r1</name> <operator pos:start="375:12" pos:end="375:12">=</operator> <call pos:start="375:14" pos:end="375:41"><name pos:start="375:14" pos:end="375:28">MASK_OP_RCRR_S1</name><argument_list pos:start="375:29" pos:end="375:41">(<argument pos:start="375:30" pos:end="375:40"><expr pos:start="375:30" pos:end="375:40"><name pos:start="375:30" pos:end="375:40"><name pos:start="375:30" pos:end="375:32">ctx</name><operator pos:start="375:33" pos:end="375:34">-&gt;</operator><name pos:start="375:35" pos:end="375:40">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="377:9" pos:end="377:42"><expr pos:start="377:9" pos:end="377:41"><name pos:start="377:9" pos:end="377:10">r2</name> <operator pos:start="377:12" pos:end="377:12">=</operator> <call pos:start="377:14" pos:end="377:41"><name pos:start="377:14" pos:end="377:28">MASK_OP_RCRR_S3</name><argument_list pos:start="377:29" pos:end="377:41">(<argument pos:start="377:30" pos:end="377:40"><expr pos:start="377:30" pos:end="377:40"><name pos:start="377:30" pos:end="377:40"><name pos:start="377:30" pos:end="377:32">ctx</name><operator pos:start="377:33" pos:end="377:34">-&gt;</operator><name pos:start="377:35" pos:end="377:40">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="379:9" pos:end="379:41"><expr pos:start="379:9" pos:end="379:40"><name pos:start="379:9" pos:end="379:10">r3</name> <operator pos:start="379:12" pos:end="379:12">=</operator> <call pos:start="379:14" pos:end="379:40"><name pos:start="379:14" pos:end="379:27">MASK_OP_RCRR_D</name><argument_list pos:start="379:28" pos:end="379:40">(<argument pos:start="379:29" pos:end="379:39"><expr pos:start="379:29" pos:end="379:39"><name pos:start="379:29" pos:end="379:39"><name pos:start="379:29" pos:end="379:31">ctx</name><operator pos:start="379:32" pos:end="379:33">-&gt;</operator><name pos:start="379:34" pos:end="379:39">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="381:9" pos:end="381:51"><expr pos:start="381:9" pos:end="381:50"><name pos:start="381:9" pos:end="381:15">const16</name> <operator pos:start="381:17" pos:end="381:17">=</operator> <call pos:start="381:19" pos:end="381:50"><name pos:start="381:19" pos:end="381:37">MASK_OP_RCRR_CONST4</name><argument_list pos:start="381:38" pos:end="381:50">(<argument pos:start="381:39" pos:end="381:49"><expr pos:start="381:39" pos:end="381:49"><name pos:start="381:39" pos:end="381:49"><name pos:start="381:39" pos:end="381:41">ctx</name><operator pos:start="381:42" pos:end="381:43">-&gt;</operator><name pos:start="381:44" pos:end="381:49">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="383:9" pos:end="383:38"><expr pos:start="383:9" pos:end="383:37"><name pos:start="383:9" pos:end="383:12">temp</name> <operator pos:start="383:14" pos:end="383:14">=</operator> <call pos:start="383:16" pos:end="383:37"><name pos:start="383:16" pos:end="383:28">tcg_const_i32</name><argument_list pos:start="383:29" pos:end="383:37">(<argument pos:start="383:30" pos:end="383:36"><expr pos:start="383:30" pos:end="383:36"><name pos:start="383:30" pos:end="383:36">const16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="385:9" pos:end="385:31"><expr pos:start="385:9" pos:end="385:30"><name pos:start="385:9" pos:end="385:13">temp2</name> <operator pos:start="385:15" pos:end="385:15">=</operator> <call pos:start="385:17" pos:end="385:30"><name pos:start="385:17" pos:end="385:28">tcg_temp_new</name><argument_list pos:start="385:29" pos:end="385:30">()</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="385:33" pos:end="385:42">/* width*/</comment>

        <expr_stmt pos:start="387:9" pos:end="387:31"><expr pos:start="387:9" pos:end="387:30"><name pos:start="387:9" pos:end="387:13">temp3</name> <operator pos:start="387:15" pos:end="387:15">=</operator> <call pos:start="387:17" pos:end="387:30"><name pos:start="387:17" pos:end="387:28">tcg_temp_new</name><argument_list pos:start="387:29" pos:end="387:30">()</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="387:33" pos:end="387:41">/* pos */</comment>



        <expr_stmt pos:start="391:9" pos:end="391:54"><expr pos:start="391:9" pos:end="391:53"><call pos:start="391:9" pos:end="391:53"><name pos:start="391:9" pos:end="391:23">tcg_gen_andi_tl</name><argument_list pos:start="391:24" pos:end="391:53">(<argument pos:start="391:25" pos:end="391:29"><expr pos:start="391:25" pos:end="391:29"><name pos:start="391:25" pos:end="391:29">temp2</name></expr></argument>, <argument pos:start="391:32" pos:end="391:46"><expr pos:start="391:32" pos:end="391:46"><name pos:start="391:32" pos:end="391:46"><name pos:start="391:32" pos:end="391:40">cpu_gpr_d</name><index pos:start="391:41" pos:end="391:46">[<expr pos:start="391:42" pos:end="391:45"><name pos:start="391:42" pos:end="391:43">r3</name><operator pos:start="391:44" pos:end="391:44">+</operator><literal type="number" pos:start="391:45" pos:end="391:45">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="391:49" pos:end="391:52"><expr pos:start="391:49" pos:end="391:52"><literal type="number" pos:start="391:49" pos:end="391:52">0x1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="393:9" pos:end="393:52"><expr pos:start="393:9" pos:end="393:51"><call pos:start="393:9" pos:end="393:51"><name pos:start="393:9" pos:end="393:23">tcg_gen_andi_tl</name><argument_list pos:start="393:24" pos:end="393:51">(<argument pos:start="393:25" pos:end="393:29"><expr pos:start="393:25" pos:end="393:29"><name pos:start="393:25" pos:end="393:29">temp3</name></expr></argument>, <argument pos:start="393:32" pos:end="393:44"><expr pos:start="393:32" pos:end="393:44"><name pos:start="393:32" pos:end="393:44"><name pos:start="393:32" pos:end="393:40">cpu_gpr_d</name><index pos:start="393:41" pos:end="393:44">[<expr pos:start="393:42" pos:end="393:43"><name pos:start="393:42" pos:end="393:43">r3</name></expr>]</index></name></expr></argument>, <argument pos:start="393:47" pos:end="393:50"><expr pos:start="393:47" pos:end="393:50"><literal type="number" pos:start="393:47" pos:end="393:50">0x1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="397:9" pos:end="397:69"><expr pos:start="397:9" pos:end="397:68"><call pos:start="397:9" pos:end="397:68"><name pos:start="397:9" pos:end="397:18">gen_insert</name><argument_list pos:start="397:19" pos:end="397:68">(<argument pos:start="397:20" pos:end="397:32"><expr pos:start="397:20" pos:end="397:32"><name pos:start="397:20" pos:end="397:32"><name pos:start="397:20" pos:end="397:28">cpu_gpr_d</name><index pos:start="397:29" pos:end="397:32">[<expr pos:start="397:30" pos:end="397:31"><name pos:start="397:30" pos:end="397:31">r2</name></expr>]</index></name></expr></argument>, <argument pos:start="397:35" pos:end="397:47"><expr pos:start="397:35" pos:end="397:47"><name pos:start="397:35" pos:end="397:47"><name pos:start="397:35" pos:end="397:43">cpu_gpr_d</name><index pos:start="397:44" pos:end="397:47">[<expr pos:start="397:45" pos:end="397:46"><name pos:start="397:45" pos:end="397:46">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="397:50" pos:end="397:53"><expr pos:start="397:50" pos:end="397:53"><name pos:start="397:50" pos:end="397:53">temp</name></expr></argument>, <argument pos:start="397:56" pos:end="397:60"><expr pos:start="397:56" pos:end="397:60"><name pos:start="397:56" pos:end="397:60">temp2</name></expr></argument>, <argument pos:start="397:63" pos:end="397:67"><expr pos:start="397:63" pos:end="397:67"><name pos:start="397:63" pos:end="397:67">temp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="401:9" pos:end="401:28"><expr pos:start="401:9" pos:end="401:27"><call pos:start="401:9" pos:end="401:27"><name pos:start="401:9" pos:end="401:21">tcg_temp_free</name><argument_list pos:start="401:22" pos:end="401:27">(<argument pos:start="401:23" pos:end="401:26"><expr pos:start="401:23" pos:end="401:26"><name pos:start="401:23" pos:end="401:26">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="403:9" pos:end="403:29"><expr pos:start="403:9" pos:end="403:28"><call pos:start="403:9" pos:end="403:28"><name pos:start="403:9" pos:end="403:21">tcg_temp_free</name><argument_list pos:start="403:22" pos:end="403:28">(<argument pos:start="403:23" pos:end="403:27"><expr pos:start="403:23" pos:end="403:27"><name pos:start="403:23" pos:end="403:27">temp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="405:9" pos:end="405:29"><expr pos:start="405:9" pos:end="405:28"><call pos:start="405:9" pos:end="405:28"><name pos:start="405:9" pos:end="405:21">tcg_temp_free</name><argument_list pos:start="405:22" pos:end="405:28">(<argument pos:start="405:23" pos:end="405:27"><expr pos:start="405:23" pos:end="405:27"><name pos:start="405:23" pos:end="405:27">temp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="407:9" pos:end="407:14">break;</break>

<comment type="block" pos:start="409:1" pos:end="409:17">/* RCRW Format */</comment>

    <case pos:start="411:5" pos:end="411:34">case <expr pos:start="411:10" pos:end="411:33"><name pos:start="411:10" pos:end="411:33">OPCM_32_RCRW_MASK_INSERT</name></expr>:</case>

        <expr_stmt pos:start="413:9" pos:end="413:37"><expr pos:start="413:9" pos:end="413:36"><call pos:start="413:9" pos:end="413:36"><name pos:start="413:9" pos:end="413:26">decode_rcrw_insert</name><argument_list pos:start="413:27" pos:end="413:36">(<argument pos:start="413:28" pos:end="413:30"><expr pos:start="413:28" pos:end="413:30"><name pos:start="413:28" pos:end="413:30">env</name></expr></argument>, <argument pos:start="413:33" pos:end="413:35"><expr pos:start="413:33" pos:end="413:35"><name pos:start="413:33" pos:end="413:35">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="415:9" pos:end="415:14">break;</break>

<comment type="block" pos:start="417:1" pos:end="417:16">/* RCR Format */</comment>

    <case pos:start="419:5" pos:end="419:33">case <expr pos:start="419:10" pos:end="419:32"><name pos:start="419:10" pos:end="419:32">OPCM_32_RCR_COND_SELECT</name></expr>:</case>

        <expr_stmt pos:start="421:9" pos:end="421:41"><expr pos:start="421:9" pos:end="421:40"><call pos:start="421:9" pos:end="421:40"><name pos:start="421:9" pos:end="421:30">decode_rcr_cond_select</name><argument_list pos:start="421:31" pos:end="421:40">(<argument pos:start="421:32" pos:end="421:34"><expr pos:start="421:32" pos:end="421:34"><name pos:start="421:32" pos:end="421:34">env</name></expr></argument>, <argument pos:start="421:37" pos:end="421:39"><expr pos:start="421:37" pos:end="421:39"><name pos:start="421:37" pos:end="421:39">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="423:9" pos:end="423:14">break;</break>

    <case pos:start="425:5" pos:end="425:26">case <expr pos:start="425:10" pos:end="425:25"><name pos:start="425:10" pos:end="425:25">OPCM_32_RCR_MADD</name></expr>:</case>

        <expr_stmt pos:start="427:9" pos:end="427:34"><expr pos:start="427:9" pos:end="427:33"><call pos:start="427:9" pos:end="427:33"><name pos:start="427:9" pos:end="427:23">decode_rcr_madd</name><argument_list pos:start="427:24" pos:end="427:33">(<argument pos:start="427:25" pos:end="427:27"><expr pos:start="427:25" pos:end="427:27"><name pos:start="427:25" pos:end="427:27">env</name></expr></argument>, <argument pos:start="427:30" pos:end="427:32"><expr pos:start="427:30" pos:end="427:32"><name pos:start="427:30" pos:end="427:32">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="429:9" pos:end="429:14">break;</break>

    <case pos:start="431:5" pos:end="431:26">case <expr pos:start="431:10" pos:end="431:25"><name pos:start="431:10" pos:end="431:25">OPCM_32_RCR_MSUB</name></expr>:</case>

        <expr_stmt pos:start="433:9" pos:end="433:34"><expr pos:start="433:9" pos:end="433:33"><call pos:start="433:9" pos:end="433:33"><name pos:start="433:9" pos:end="433:23">decode_rcr_msub</name><argument_list pos:start="433:24" pos:end="433:33">(<argument pos:start="433:25" pos:end="433:27"><expr pos:start="433:25" pos:end="433:27"><name pos:start="433:25" pos:end="433:27">env</name></expr></argument>, <argument pos:start="433:30" pos:end="433:32"><expr pos:start="433:30" pos:end="433:32"><name pos:start="433:30" pos:end="433:32">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="435:9" pos:end="435:14">break;</break>

<comment type="block" pos:start="437:1" pos:end="437:16">/* RLC Format */</comment>

    <case pos:start="439:5" pos:end="439:26">case <expr pos:start="439:10" pos:end="439:25"><name pos:start="439:10" pos:end="439:25">OPC1_32_RLC_ADDI</name></expr>:</case>

    <case pos:start="441:5" pos:end="441:27">case <expr pos:start="441:10" pos:end="441:26"><name pos:start="441:10" pos:end="441:26">OPC1_32_RLC_ADDIH</name></expr>:</case>

    <case pos:start="443:5" pos:end="443:29">case <expr pos:start="443:10" pos:end="443:28"><name pos:start="443:10" pos:end="443:28">OPC1_32_RLC_ADDIH_A</name></expr>:</case>

    <case pos:start="445:5" pos:end="445:26">case <expr pos:start="445:10" pos:end="445:25"><name pos:start="445:10" pos:end="445:25">OPC1_32_RLC_MFCR</name></expr>:</case>

    <case pos:start="447:5" pos:end="447:25">case <expr pos:start="447:10" pos:end="447:24"><name pos:start="447:10" pos:end="447:24">OPC1_32_RLC_MOV</name></expr>:</case>

    <case pos:start="449:5" pos:end="449:28">case <expr pos:start="449:10" pos:end="449:27"><name pos:start="449:10" pos:end="449:27">OPC1_32_RLC_MOV_64</name></expr>:</case>

    <case pos:start="451:5" pos:end="451:27">case <expr pos:start="451:10" pos:end="451:26"><name pos:start="451:10" pos:end="451:26">OPC1_32_RLC_MOV_U</name></expr>:</case>

    <case pos:start="453:5" pos:end="453:27">case <expr pos:start="453:10" pos:end="453:26"><name pos:start="453:10" pos:end="453:26">OPC1_32_RLC_MOV_H</name></expr>:</case>

    <case pos:start="455:5" pos:end="455:28">case <expr pos:start="455:10" pos:end="455:27"><name pos:start="455:10" pos:end="455:27">OPC1_32_RLC_MOVH_A</name></expr>:</case>

    <case pos:start="457:5" pos:end="457:26">case <expr pos:start="457:10" pos:end="457:25"><name pos:start="457:10" pos:end="457:25">OPC1_32_RLC_MTCR</name></expr>:</case>

        <expr_stmt pos:start="459:9" pos:end="459:38"><expr pos:start="459:9" pos:end="459:37"><call pos:start="459:9" pos:end="459:37"><name pos:start="459:9" pos:end="459:22">decode_rlc_opc</name><argument_list pos:start="459:23" pos:end="459:37">(<argument pos:start="459:24" pos:end="459:26"><expr pos:start="459:24" pos:end="459:26"><name pos:start="459:24" pos:end="459:26">env</name></expr></argument>, <argument pos:start="459:29" pos:end="459:31"><expr pos:start="459:29" pos:end="459:31"><name pos:start="459:29" pos:end="459:31">ctx</name></expr></argument>, <argument pos:start="459:34" pos:end="459:36"><expr pos:start="459:34" pos:end="459:36"><name pos:start="459:34" pos:end="459:36">op1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="461:9" pos:end="461:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
