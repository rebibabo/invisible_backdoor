<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11272.c" pos:tabs="8"><function pos:start="1:1" pos:end="199:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">load_ipmovie_packet</name><parameter_list pos:start="1:31" pos:end="3:18">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:43">IPMVEContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:63"><decl pos:start="1:49" pos:end="1:63"><type pos:start="1:49" pos:end="1:63"><name pos:start="1:49" pos:end="1:59">AVIOContext</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">pb</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:17"><decl pos:start="3:5" pos:end="3:17"><type pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:12">AVPacket</name> <modifier pos:start="3:14" pos:end="3:14">*</modifier></type><name pos:start="3:15" pos:end="3:17">pkt</name></decl></parameter>)</parameter_list> <block pos:start="3:20" pos:end="199:1">{<block_content pos:start="7:5" pos:end="197:22">



    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">chunk_type</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="193:5"><if pos:start="11:5" pos:end="81:5">if <condition pos:start="11:8" pos:end="11:68">(<expr pos:start="11:9" pos:end="11:67"><name pos:start="11:9" pos:end="11:29"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:29">audio_chunk_offset</name></name> <operator pos:start="11:31" pos:end="11:32">&amp;&amp;</operator> <name pos:start="11:34" pos:end="11:50"><name pos:start="11:34" pos:end="11:34">s</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:50">audio_channels</name></name> <operator pos:start="11:52" pos:end="11:53">&amp;&amp;</operator> <name pos:start="11:55" pos:end="11:67"><name pos:start="11:55" pos:end="11:55">s</name><operator pos:start="11:56" pos:end="11:57">-&gt;</operator><name pos:start="11:58" pos:end="11:67">audio_bits</name></name></expr>)</condition> <block pos:start="11:70" pos:end="81:5">{<block_content pos:start="13:9" pos:end="77:33">

        <if_stmt pos:start="13:9" pos:end="21:9"><if pos:start="13:9" pos:end="21:9">if <condition pos:start="13:12" pos:end="13:46">(<expr pos:start="13:13" pos:end="13:45"><name pos:start="13:13" pos:end="13:25"><name pos:start="13:13" pos:end="13:13">s</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:25">audio_type</name></name> <operator pos:start="13:27" pos:end="13:28">==</operator> <name pos:start="13:30" pos:end="13:45">AV_CODEC_ID_NONE</name></expr>)</condition> <block pos:start="13:48" pos:end="21:9">{<block_content pos:start="15:13" pos:end="19:33">

            <expr_stmt pos:start="15:13" pos:end="17:45"><expr pos:start="15:13" pos:end="17:44"><call pos:start="15:13" pos:end="17:44"><name pos:start="15:13" pos:end="15:18">av_log</name><argument_list pos:start="15:19" pos:end="17:44">(<argument pos:start="15:20" pos:end="15:25"><expr pos:start="15:20" pos:end="15:25"><name pos:start="15:20" pos:end="15:25"><name pos:start="15:20" pos:end="15:20">s</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:25">avf</name></name></expr></argument>, <argument pos:start="15:28" pos:end="15:39"><expr pos:start="15:28" pos:end="15:39"><name pos:start="15:28" pos:end="15:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:42" pos:end="17:43"><expr pos:start="15:42" pos:end="17:43"><literal type="string" pos:start="15:42" pos:end="15:75">"Can not read audio packet before"</literal>

                   <literal type="string" pos:start="17:20" pos:end="17:43">"audio codec is known\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="19:17" pos:end="19:33">return <expr pos:start="19:24" pos:end="19:32"><name pos:start="19:24" pos:end="19:32">CHUNK_BAD</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="25:9" pos:end="25:59">/* adjust for PCM audio by skipping chunk header */</comment>

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:56">(<expr pos:start="27:13" pos:end="27:55"><name pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:25">audio_type</name></name> <operator pos:start="27:27" pos:end="27:28">!=</operator> <name pos:start="27:30" pos:end="27:55">AV_CODEC_ID_INTERPLAY_DPCM</name></expr>)</condition> <block pos:start="27:58" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:37">

            <expr_stmt pos:start="29:13" pos:end="29:39"><expr pos:start="29:13" pos:end="29:38"><name pos:start="29:13" pos:end="29:33"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:33">audio_chunk_offset</name></name> <operator pos:start="29:35" pos:end="29:36">+=</operator> <literal type="number" pos:start="29:38" pos:end="29:38">6</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:37"><expr pos:start="31:13" pos:end="31:36"><name pos:start="31:13" pos:end="31:31"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:31">audio_chunk_size</name></name> <operator pos:start="31:33" pos:end="31:34">-=</operator> <literal type="number" pos:start="31:36" pos:end="31:36">6</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:55"><expr pos:start="37:9" pos:end="37:54"><call pos:start="37:9" pos:end="37:54"><name pos:start="37:9" pos:end="37:17">avio_seek</name><argument_list pos:start="37:18" pos:end="37:54">(<argument pos:start="37:19" pos:end="37:20"><expr pos:start="37:19" pos:end="37:20"><name pos:start="37:19" pos:end="37:20">pb</name></expr></argument>, <argument pos:start="37:23" pos:end="37:43"><expr pos:start="37:23" pos:end="37:43"><name pos:start="37:23" pos:end="37:43"><name pos:start="37:23" pos:end="37:23">s</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:43">audio_chunk_offset</name></name></expr></argument>, <argument pos:start="37:46" pos:end="37:53"><expr pos:start="37:46" pos:end="37:53"><name pos:start="37:46" pos:end="37:53">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:34"><expr pos:start="39:9" pos:end="39:33"><name pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:29">audio_chunk_offset</name></name> <operator pos:start="39:31" pos:end="39:31">=</operator> <literal type="number" pos:start="39:33" pos:end="39:33">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="43:9" pos:end="45:29"><if pos:start="43:9" pos:end="45:29">if <condition pos:start="43:12" pos:end="43:79">(<expr pos:start="43:13" pos:end="43:78"><name pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:31">audio_chunk_size</name></name> <operator pos:start="43:33" pos:end="43:34">!=</operator> <call pos:start="43:36" pos:end="43:78"><name pos:start="43:36" pos:end="43:48">av_get_packet</name><argument_list pos:start="43:49" pos:end="43:78">(<argument pos:start="43:50" pos:end="43:51"><expr pos:start="43:50" pos:end="43:51"><name pos:start="43:50" pos:end="43:51">pb</name></expr></argument>, <argument pos:start="43:54" pos:end="43:56"><expr pos:start="43:54" pos:end="43:56"><name pos:start="43:54" pos:end="43:56">pkt</name></expr></argument>, <argument pos:start="43:59" pos:end="43:77"><expr pos:start="43:59" pos:end="43:77"><name pos:start="43:59" pos:end="43:77"><name pos:start="43:59" pos:end="43:59">s</name><operator pos:start="43:60" pos:end="43:61">-&gt;</operator><name pos:start="43:62" pos:end="43:77">audio_chunk_size</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:29"><block_content pos:start="45:13" pos:end="45:29">

            <return pos:start="45:13" pos:end="45:29">return <expr pos:start="45:20" pos:end="45:28"><name pos:start="45:20" pos:end="45:28">CHUNK_EOF</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:50"><expr pos:start="49:9" pos:end="49:49"><name pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:11">pkt</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:25">stream_index</name></name> <operator pos:start="49:27" pos:end="49:27">=</operator> <name pos:start="49:29" pos:end="49:49"><name pos:start="49:29" pos:end="49:29">s</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:49">audio_stream_index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:40"><expr pos:start="51:9" pos:end="51:39"><name pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:11">pkt</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:16">pts</name></name> <operator pos:start="51:18" pos:end="51:18">=</operator> <name pos:start="51:20" pos:end="51:39"><name pos:start="51:20" pos:end="51:20">s</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:39">audio_frame_count</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="55:9" pos:end="55:37">/* audio frame maintenance */</comment>

        <if_stmt pos:start="57:9" pos:end="67:82"><if pos:start="57:9" pos:end="61:76">if <condition pos:start="57:12" pos:end="57:56">(<expr pos:start="57:13" pos:end="57:55"><name pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:25">audio_type</name></name> <operator pos:start="57:27" pos:end="57:28">!=</operator> <name pos:start="57:30" pos:end="57:55">AV_CODEC_ID_INTERPLAY_DPCM</name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="61:76"><block_content pos:start="59:13" pos:end="61:76">

            <expr_stmt pos:start="59:13" pos:end="61:76"><expr pos:start="59:13" pos:end="61:75"><name pos:start="59:13" pos:end="59:32"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:32">audio_frame_count</name></name> <operator pos:start="59:34" pos:end="59:35">+=</operator>

            <operator pos:start="61:13" pos:end="61:13">(</operator><name pos:start="61:14" pos:end="61:32"><name pos:start="61:14" pos:end="61:14">s</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:32">audio_chunk_size</name></name> <operator pos:start="61:34" pos:end="61:34">/</operator> <name pos:start="61:36" pos:end="61:52"><name pos:start="61:36" pos:end="61:36">s</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:52">audio_channels</name></name> <operator pos:start="61:54" pos:end="61:54">/</operator> <operator pos:start="61:56" pos:end="61:56">(</operator><name pos:start="61:57" pos:end="61:69"><name pos:start="61:57" pos:end="61:57">s</name><operator pos:start="61:58" pos:end="61:59">-&gt;</operator><name pos:start="61:60" pos:end="61:69">audio_bits</name></name> <operator pos:start="61:71" pos:end="61:71">/</operator> <literal type="number" pos:start="61:73" pos:end="61:73">8</literal><operator pos:start="61:74" pos:end="61:74">)</operator><operator pos:start="61:75" pos:end="61:75">)</operator></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="63:9" pos:end="67:82">else<block type="pseudo" pos:start="65:13" pos:end="67:82"><block_content pos:start="65:13" pos:end="67:82">

            <expr_stmt pos:start="65:13" pos:end="67:82"><expr pos:start="65:13" pos:end="67:81"><name pos:start="65:13" pos:end="65:32"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:32">audio_frame_count</name></name> <operator pos:start="65:34" pos:end="65:35">+=</operator>

                <operator pos:start="67:17" pos:end="67:17">(</operator><name pos:start="67:18" pos:end="67:36"><name pos:start="67:18" pos:end="67:18">s</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:36">audio_chunk_size</name></name> <operator pos:start="67:38" pos:end="67:38">-</operator> <literal type="number" pos:start="67:40" pos:end="67:42">6</literal> <operator pos:start="67:42" pos:end="67:42">-</operator> <name pos:start="67:44" pos:end="67:60"><name pos:start="67:44" pos:end="67:44">s</name><operator pos:start="67:45" pos:end="67:46">-&gt;</operator><name pos:start="67:47" pos:end="67:60">audio_channels</name></name><operator pos:start="67:61" pos:end="67:61">)</operator> <operator pos:start="67:63" pos:end="67:63">/</operator> <name pos:start="67:65" pos:end="67:81"><name pos:start="67:65" pos:end="67:65">s</name><operator pos:start="67:66" pos:end="67:67">-&gt;</operator><name pos:start="67:68" pos:end="67:81">audio_channels</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="73:48"><expr pos:start="71:9" pos:end="73:47"><call pos:start="71:9" pos:end="73:47"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="73:47">(<argument pos:start="71:16" pos:end="71:21"><expr pos:start="71:16" pos:end="71:21"><name pos:start="71:16" pos:end="71:21"><name pos:start="71:16" pos:end="71:16">s</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:21">avf</name></name></expr></argument>, <argument pos:start="71:24" pos:end="71:35"><expr pos:start="71:24" pos:end="71:35"><name pos:start="71:24" pos:end="71:35">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="71:38" pos:end="71:97"><expr pos:start="71:38" pos:end="71:97"><literal type="string" pos:start="71:38" pos:end="71:69">"sending audio frame with pts %"</literal><name pos:start="71:70" pos:end="71:75">PRId64</name><literal type="string" pos:start="71:76" pos:end="71:97">" (%d audio frames)\n"</literal></expr></argument>,

                <argument pos:start="73:17" pos:end="73:24"><expr pos:start="73:17" pos:end="73:24"><name pos:start="73:17" pos:end="73:24"><name pos:start="73:17" pos:end="73:19">pkt</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:24">pts</name></name></expr></argument>, <argument pos:start="73:27" pos:end="73:46"><expr pos:start="73:27" pos:end="73:46"><name pos:start="73:27" pos:end="73:46"><name pos:start="73:27" pos:end="73:27">s</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:46">audio_frame_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:33"><expr pos:start="77:9" pos:end="77:32"><name pos:start="77:9" pos:end="77:18">chunk_type</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <name pos:start="77:22" pos:end="77:32">CHUNK_VIDEO</name></expr>;</expr_stmt>



    </block_content>}</block></if> <if type="elseif" pos:start="81:7" pos:end="183:5">else if <condition pos:start="81:15" pos:end="81:42">(<expr pos:start="81:16" pos:end="81:41"><name pos:start="81:16" pos:end="81:41"><name pos:start="81:16" pos:end="81:16">s</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:41">decode_map_chunk_offset</name></name></expr>)</condition> <block pos:start="81:44" pos:end="183:5">{<block_content pos:start="89:9" pos:end="179:33">



        <comment type="block" pos:start="85:9" pos:end="85:66">/* send both the decode map and the video data together */</comment>



        <if_stmt pos:start="89:9" pos:end="91:31"><if pos:start="89:9" pos:end="91:31">if <condition pos:start="89:12" pos:end="89:83">(<expr pos:start="89:13" pos:end="89:82"><call pos:start="89:13" pos:end="89:82"><name pos:start="89:13" pos:end="89:25">av_new_packet</name><argument_list pos:start="89:26" pos:end="89:82">(<argument pos:start="89:27" pos:end="89:29"><expr pos:start="89:27" pos:end="89:29"><name pos:start="89:27" pos:end="89:29">pkt</name></expr></argument>, <argument pos:start="89:32" pos:end="89:81"><expr pos:start="89:32" pos:end="89:81"><literal type="number" pos:start="89:32" pos:end="89:34">2</literal> <operator pos:start="89:34" pos:end="89:34">+</operator> <name pos:start="89:36" pos:end="89:59"><name pos:start="89:36" pos:end="89:36">s</name><operator pos:start="89:37" pos:end="89:38">-&gt;</operator><name pos:start="89:39" pos:end="89:59">decode_map_chunk_size</name></name> <operator pos:start="89:61" pos:end="89:61">+</operator> <name pos:start="89:63" pos:end="89:81"><name pos:start="89:63" pos:end="89:63">s</name><operator pos:start="89:64" pos:end="89:65">-&gt;</operator><name pos:start="89:66" pos:end="89:81">video_chunk_size</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:31"><block_content pos:start="91:13" pos:end="91:31">

            <return pos:start="91:13" pos:end="91:31">return <expr pos:start="91:20" pos:end="91:30"><name pos:start="91:20" pos:end="91:30">CHUNK_NOMEM</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="95:9" pos:end="113:9"><if pos:start="95:9" pos:end="113:9">if <condition pos:start="95:12" pos:end="95:27">(<expr pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:13">s</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:26">has_palette</name></name></expr>)</condition> <block pos:start="95:29" pos:end="113:9">{<block_content pos:start="97:13" pos:end="111:13">

            <decl_stmt pos:start="97:13" pos:end="97:25"><decl pos:start="97:13" pos:end="97:24"><type pos:start="97:13" pos:end="97:21"><name pos:start="97:13" pos:end="97:19">uint8_t</name> <modifier pos:start="97:21" pos:end="97:21">*</modifier></type><name pos:start="97:22" pos:end="97:24">pal</name></decl>;</decl_stmt>



            <expr_stmt pos:start="101:13" pos:end="103:58"><expr pos:start="101:13" pos:end="103:57"><name pos:start="101:13" pos:end="101:15">pal</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <call pos:start="101:19" pos:end="103:57"><name pos:start="101:19" pos:end="101:41">av_packet_new_side_data</name><argument_list pos:start="101:42" pos:end="103:57">(<argument pos:start="101:43" pos:end="101:45"><expr pos:start="101:43" pos:end="101:45"><name pos:start="101:43" pos:end="101:45">pkt</name></expr></argument>, <argument pos:start="101:48" pos:end="101:66"><expr pos:start="101:48" pos:end="101:66"><name pos:start="101:48" pos:end="101:66">AV_PKT_DATA_PALETTE</name></expr></argument>,

                                          <argument pos:start="103:43" pos:end="103:56"><expr pos:start="103:43" pos:end="103:56"><name pos:start="103:43" pos:end="103:56">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="111:13"><if pos:start="105:13" pos:end="111:13">if <condition pos:start="105:16" pos:end="105:20">(<expr pos:start="105:17" pos:end="105:19"><name pos:start="105:17" pos:end="105:19">pal</name></expr>)</condition> <block pos:start="105:22" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:35">

                <expr_stmt pos:start="107:17" pos:end="107:56"><expr pos:start="107:17" pos:end="107:55"><call pos:start="107:17" pos:end="107:55"><name pos:start="107:17" pos:end="107:22">memcpy</name><argument_list pos:start="107:23" pos:end="107:55">(<argument pos:start="107:24" pos:end="107:26"><expr pos:start="107:24" pos:end="107:26"><name pos:start="107:24" pos:end="107:26">pal</name></expr></argument>, <argument pos:start="107:29" pos:end="107:38"><expr pos:start="107:29" pos:end="107:38"><name pos:start="107:29" pos:end="107:38"><name pos:start="107:29" pos:end="107:29">s</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:38">palette</name></name></expr></argument>, <argument pos:start="107:41" pos:end="107:54"><expr pos:start="107:41" pos:end="107:54"><name pos:start="107:41" pos:end="107:54">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:35"><expr pos:start="109:17" pos:end="109:34"><name pos:start="109:17" pos:end="109:30"><name pos:start="109:17" pos:end="109:17">s</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:30">has_palette</name></name> <operator pos:start="109:32" pos:end="109:32">=</operator> <literal type="number" pos:start="109:34" pos:end="109:34">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="117:9" pos:end="123:9"><if pos:start="117:9" pos:end="123:9">if <condition pos:start="117:12" pos:end="117:23">(<expr pos:start="117:13" pos:end="117:22"><name pos:start="117:13" pos:end="117:22"><name pos:start="117:13" pos:end="117:13">s</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:22">changed</name></name></expr>)</condition> <block pos:start="117:25" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:27">

            <expr_stmt pos:start="119:13" pos:end="119:79"><expr pos:start="119:13" pos:end="119:78"><call pos:start="119:13" pos:end="119:78"><name pos:start="119:13" pos:end="119:31">ff_add_param_change</name><argument_list pos:start="119:32" pos:end="119:78">(<argument pos:start="119:33" pos:end="119:35"><expr pos:start="119:33" pos:end="119:35"><name pos:start="119:33" pos:end="119:35">pkt</name></expr></argument>, <argument pos:start="119:38" pos:end="119:38"><expr pos:start="119:38" pos:end="119:38"><literal type="number" pos:start="119:38" pos:end="119:38">0</literal></expr></argument>, <argument pos:start="119:41" pos:end="119:41"><expr pos:start="119:41" pos:end="119:41"><literal type="number" pos:start="119:41" pos:end="119:41">0</literal></expr></argument>, <argument pos:start="119:44" pos:end="119:44"><expr pos:start="119:44" pos:end="119:44"><literal type="number" pos:start="119:44" pos:end="119:44">0</literal></expr></argument>, <argument pos:start="119:47" pos:end="119:60"><expr pos:start="119:47" pos:end="119:60"><name pos:start="119:47" pos:end="119:60"><name pos:start="119:47" pos:end="119:47">s</name><operator pos:start="119:48" pos:end="119:49">-&gt;</operator><name pos:start="119:50" pos:end="119:60">video_width</name></name></expr></argument>, <argument pos:start="119:63" pos:end="119:77"><expr pos:start="119:63" pos:end="119:77"><name pos:start="119:63" pos:end="119:77"><name pos:start="119:63" pos:end="119:63">s</name><operator pos:start="119:64" pos:end="119:65">-&gt;</operator><name pos:start="119:66" pos:end="119:77">video_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:27"><expr pos:start="121:13" pos:end="121:26"><name pos:start="121:13" pos:end="121:22"><name pos:start="121:13" pos:end="121:13">s</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:22">changed</name></name> <operator pos:start="121:24" pos:end="121:24">=</operator> <literal type="number" pos:start="121:26" pos:end="121:26">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:45"><expr pos:start="125:9" pos:end="125:44"><name pos:start="125:9" pos:end="125:16"><name pos:start="125:9" pos:end="125:11">pkt</name><operator pos:start="125:12" pos:end="125:13">-&gt;</operator><name pos:start="125:14" pos:end="125:16">pos</name></name><operator pos:start="125:17" pos:end="125:17">=</operator> <name pos:start="125:19" pos:end="125:44"><name pos:start="125:19" pos:end="125:19">s</name><operator pos:start="125:20" pos:end="125:21">-&gt;</operator><name pos:start="125:22" pos:end="125:44">decode_map_chunk_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:60"><expr pos:start="127:9" pos:end="127:59"><call pos:start="127:9" pos:end="127:59"><name pos:start="127:9" pos:end="127:17">avio_seek</name><argument_list pos:start="127:18" pos:end="127:59">(<argument pos:start="127:19" pos:end="127:20"><expr pos:start="127:19" pos:end="127:20"><name pos:start="127:19" pos:end="127:20">pb</name></expr></argument>, <argument pos:start="127:23" pos:end="127:48"><expr pos:start="127:23" pos:end="127:48"><name pos:start="127:23" pos:end="127:48"><name pos:start="127:23" pos:end="127:23">s</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:48">decode_map_chunk_offset</name></name></expr></argument>, <argument pos:start="127:51" pos:end="127:58"><expr pos:start="127:51" pos:end="127:58"><name pos:start="127:51" pos:end="127:58">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:39"><expr pos:start="129:9" pos:end="129:38"><name pos:start="129:9" pos:end="129:34"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:34">decode_map_chunk_offset</name></name> <operator pos:start="129:36" pos:end="129:36">=</operator> <literal type="number" pos:start="129:38" pos:end="129:38">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:53"><expr pos:start="133:9" pos:end="133:52"><call pos:start="133:9" pos:end="133:52"><name pos:start="133:9" pos:end="133:15">AV_WL16</name><argument_list pos:start="133:16" pos:end="133:52">(<argument pos:start="133:17" pos:end="133:25"><expr pos:start="133:17" pos:end="133:25"><name pos:start="133:17" pos:end="133:25"><name pos:start="133:17" pos:end="133:19">pkt</name><operator pos:start="133:20" pos:end="133:21">-&gt;</operator><name pos:start="133:22" pos:end="133:25">data</name></name></expr></argument>, <argument pos:start="133:28" pos:end="133:51"><expr pos:start="133:28" pos:end="133:51"><name pos:start="133:28" pos:end="133:51"><name pos:start="133:28" pos:end="133:28">s</name><operator pos:start="133:29" pos:end="133:30">-&gt;</operator><name pos:start="133:31" pos:end="133:51">decode_map_chunk_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="135:9" pos:end="143:9"><if pos:start="135:9" pos:end="143:9">if <condition pos:start="135:12" pos:end="137:37">(<expr pos:start="135:13" pos:end="137:36"><call pos:start="135:13" pos:end="135:66"><name pos:start="135:13" pos:end="135:21">avio_read</name><argument_list pos:start="135:22" pos:end="135:66">(<argument pos:start="135:23" pos:end="135:24"><expr pos:start="135:23" pos:end="135:24"><name pos:start="135:23" pos:end="135:24">pb</name></expr></argument>, <argument pos:start="135:27" pos:end="135:39"><expr pos:start="135:27" pos:end="135:39"><name pos:start="135:27" pos:end="135:35"><name pos:start="135:27" pos:end="135:29">pkt</name><operator pos:start="135:30" pos:end="135:31">-&gt;</operator><name pos:start="135:32" pos:end="135:35">data</name></name> <operator pos:start="135:37" pos:end="135:37">+</operator> <literal type="number" pos:start="135:39" pos:end="135:39">2</literal></expr></argument>, <argument pos:start="135:42" pos:end="135:65"><expr pos:start="135:42" pos:end="135:65"><name pos:start="135:42" pos:end="135:65"><name pos:start="135:42" pos:end="135:42">s</name><operator pos:start="135:43" pos:end="135:44">-&gt;</operator><name pos:start="135:45" pos:end="135:65">decode_map_chunk_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="135:68" pos:end="135:69">!=</operator>

            <name pos:start="137:13" pos:end="137:36"><name pos:start="137:13" pos:end="137:13">s</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:36">decode_map_chunk_size</name></name></expr>)</condition> <block pos:start="137:39" pos:end="143:9">{<block_content pos:start="139:13" pos:end="141:29">

            <expr_stmt pos:start="139:13" pos:end="139:33"><expr pos:start="139:13" pos:end="139:32"><call pos:start="139:13" pos:end="139:32"><name pos:start="139:13" pos:end="139:27">av_packet_unref</name><argument_list pos:start="139:28" pos:end="139:32">(<argument pos:start="139:29" pos:end="139:31"><expr pos:start="139:29" pos:end="139:31"><name pos:start="139:29" pos:end="139:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="141:13" pos:end="141:29">return <expr pos:start="141:20" pos:end="141:28"><name pos:start="141:20" pos:end="141:28">CHUNK_EOF</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="147:9" pos:end="147:55"><expr pos:start="147:9" pos:end="147:54"><call pos:start="147:9" pos:end="147:54"><name pos:start="147:9" pos:end="147:17">avio_seek</name><argument_list pos:start="147:18" pos:end="147:54">(<argument pos:start="147:19" pos:end="147:20"><expr pos:start="147:19" pos:end="147:20"><name pos:start="147:19" pos:end="147:20">pb</name></expr></argument>, <argument pos:start="147:23" pos:end="147:43"><expr pos:start="147:23" pos:end="147:43"><name pos:start="147:23" pos:end="147:43"><name pos:start="147:23" pos:end="147:23">s</name><operator pos:start="147:24" pos:end="147:25">-&gt;</operator><name pos:start="147:26" pos:end="147:43">video_chunk_offset</name></name></expr></argument>, <argument pos:start="147:46" pos:end="147:53"><expr pos:start="147:46" pos:end="147:53"><name pos:start="147:46" pos:end="147:53">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:34"><expr pos:start="149:9" pos:end="149:33"><name pos:start="149:9" pos:end="149:29"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:29">video_chunk_offset</name></name> <operator pos:start="149:31" pos:end="149:31">=</operator> <literal type="number" pos:start="149:33" pos:end="149:33">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="153:9" pos:end="161:9"><if pos:start="153:9" pos:end="161:9">if <condition pos:start="153:12" pos:end="155:56">(<expr pos:start="153:13" pos:end="155:55"><call pos:start="153:13" pos:end="155:32"><name pos:start="153:13" pos:end="153:21">avio_read</name><argument_list pos:start="153:22" pos:end="155:32">(<argument pos:start="153:23" pos:end="153:24"><expr pos:start="153:23" pos:end="153:24"><name pos:start="153:23" pos:end="153:24">pb</name></expr></argument>, <argument pos:start="153:27" pos:end="153:66"><expr pos:start="153:27" pos:end="153:66"><name pos:start="153:27" pos:end="153:35"><name pos:start="153:27" pos:end="153:29">pkt</name><operator pos:start="153:30" pos:end="153:31">-&gt;</operator><name pos:start="153:32" pos:end="153:35">data</name></name> <operator pos:start="153:37" pos:end="153:37">+</operator> <literal type="number" pos:start="153:39" pos:end="153:41">2</literal> <operator pos:start="153:41" pos:end="153:41">+</operator> <name pos:start="153:43" pos:end="153:66"><name pos:start="153:43" pos:end="153:43">s</name><operator pos:start="153:44" pos:end="153:45">-&gt;</operator><name pos:start="153:46" pos:end="153:66">decode_map_chunk_size</name></name></expr></argument>,

            <argument pos:start="155:13" pos:end="155:31"><expr pos:start="155:13" pos:end="155:31"><name pos:start="155:13" pos:end="155:31"><name pos:start="155:13" pos:end="155:13">s</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:31">video_chunk_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="155:34" pos:end="155:35">!=</operator> <name pos:start="155:37" pos:end="155:55"><name pos:start="155:37" pos:end="155:37">s</name><operator pos:start="155:38" pos:end="155:39">-&gt;</operator><name pos:start="155:40" pos:end="155:55">video_chunk_size</name></name></expr>)</condition> <block pos:start="155:58" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:29">

            <expr_stmt pos:start="157:13" pos:end="157:33"><expr pos:start="157:13" pos:end="157:32"><call pos:start="157:13" pos:end="157:32"><name pos:start="157:13" pos:end="157:27">av_packet_unref</name><argument_list pos:start="157:28" pos:end="157:32">(<argument pos:start="157:29" pos:end="157:31"><expr pos:start="157:29" pos:end="157:31"><name pos:start="157:29" pos:end="157:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="159:13" pos:end="159:29">return <expr pos:start="159:20" pos:end="159:28"><name pos:start="159:20" pos:end="159:28">CHUNK_EOF</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="165:9" pos:end="165:50"><expr pos:start="165:9" pos:end="165:49"><name pos:start="165:9" pos:end="165:25"><name pos:start="165:9" pos:end="165:11">pkt</name><operator pos:start="165:12" pos:end="165:13">-&gt;</operator><name pos:start="165:14" pos:end="165:25">stream_index</name></name> <operator pos:start="165:27" pos:end="165:27">=</operator> <name pos:start="165:29" pos:end="165:49"><name pos:start="165:29" pos:end="165:29">s</name><operator pos:start="165:30" pos:end="165:31">-&gt;</operator><name pos:start="165:32" pos:end="165:49">video_stream_index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:32"><expr pos:start="167:9" pos:end="167:31"><name pos:start="167:9" pos:end="167:16"><name pos:start="167:9" pos:end="167:11">pkt</name><operator pos:start="167:12" pos:end="167:13">-&gt;</operator><name pos:start="167:14" pos:end="167:16">pts</name></name> <operator pos:start="167:18" pos:end="167:18">=</operator> <name pos:start="167:20" pos:end="167:31"><name pos:start="167:20" pos:end="167:20">s</name><operator pos:start="167:21" pos:end="167:22">-&gt;</operator><name pos:start="167:23" pos:end="167:31">video_pts</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="171:9" pos:end="171:91"><expr pos:start="171:9" pos:end="171:90"><call pos:start="171:9" pos:end="171:90"><name pos:start="171:9" pos:end="171:14">av_log</name><argument_list pos:start="171:15" pos:end="171:90">(<argument pos:start="171:16" pos:end="171:21"><expr pos:start="171:16" pos:end="171:21"><name pos:start="171:16" pos:end="171:21"><name pos:start="171:16" pos:end="171:16">s</name><operator pos:start="171:17" pos:end="171:18">-&gt;</operator><name pos:start="171:19" pos:end="171:21">avf</name></name></expr></argument>, <argument pos:start="171:24" pos:end="171:35"><expr pos:start="171:24" pos:end="171:35"><name pos:start="171:24" pos:end="171:35">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="171:38" pos:end="171:79"><expr pos:start="171:38" pos:end="171:79"><literal type="string" pos:start="171:38" pos:end="171:69">"sending video frame with pts %"</literal><name pos:start="171:70" pos:end="171:75">PRId64</name><literal type="string" pos:start="171:76" pos:end="171:79">"\n"</literal></expr></argument>, <argument pos:start="171:82" pos:end="171:89"><expr pos:start="171:82" pos:end="171:89"><name pos:start="171:82" pos:end="171:89"><name pos:start="171:82" pos:end="171:84">pkt</name><operator pos:start="171:85" pos:end="171:86">-&gt;</operator><name pos:start="171:87" pos:end="171:89">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="175:9" pos:end="175:41"><expr pos:start="175:9" pos:end="175:40"><name pos:start="175:9" pos:end="175:20"><name pos:start="175:9" pos:end="175:9">s</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:20">video_pts</name></name> <operator pos:start="175:22" pos:end="175:23">+=</operator> <name pos:start="175:25" pos:end="175:40"><name pos:start="175:25" pos:end="175:25">s</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:40">frame_pts_inc</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="179:9" pos:end="179:33"><expr pos:start="179:9" pos:end="179:32"><name pos:start="179:9" pos:end="179:18">chunk_type</name> <operator pos:start="179:20" pos:end="179:20">=</operator> <name pos:start="179:22" pos:end="179:32">CHUNK_VIDEO</name></expr>;</expr_stmt>



    </block_content>}</block></if> <else pos:start="183:7" pos:end="193:5">else <block pos:start="183:12" pos:end="193:5">{<block_content pos:start="187:9" pos:end="189:32">



        <expr_stmt pos:start="187:9" pos:end="187:54"><expr pos:start="187:9" pos:end="187:53"><call pos:start="187:9" pos:end="187:53"><name pos:start="187:9" pos:end="187:17">avio_seek</name><argument_list pos:start="187:18" pos:end="187:53">(<argument pos:start="187:19" pos:end="187:20"><expr pos:start="187:19" pos:end="187:20"><name pos:start="187:19" pos:end="187:20">pb</name></expr></argument>, <argument pos:start="187:23" pos:end="187:42"><expr pos:start="187:23" pos:end="187:42"><name pos:start="187:23" pos:end="187:42"><name pos:start="187:23" pos:end="187:23">s</name><operator pos:start="187:24" pos:end="187:25">-&gt;</operator><name pos:start="187:26" pos:end="187:42">next_chunk_offset</name></name></expr></argument>, <argument pos:start="187:45" pos:end="187:52"><expr pos:start="187:45" pos:end="187:52"><name pos:start="187:45" pos:end="187:52">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:32"><expr pos:start="189:9" pos:end="189:31"><name pos:start="189:9" pos:end="189:18">chunk_type</name> <operator pos:start="189:20" pos:end="189:20">=</operator> <name pos:start="189:22" pos:end="189:31">CHUNK_DONE</name></expr>;</expr_stmt>



    </block_content>}</block></else></if_stmt>



    <return pos:start="197:5" pos:end="197:22">return <expr pos:start="197:12" pos:end="197:21"><name pos:start="197:12" pos:end="197:21">chunk_type</name></expr>;</return>

</block_content>}</block></function>
</unit>
