<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24709.c" pos:tabs="8"><function pos:start="1:1" pos:end="229:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">g2m_load_cursor</name><parameter_list pos:start="1:27" pos:end="3:46">(<parameter pos:start="1:28" pos:end="1:48"><decl pos:start="1:28" pos:end="1:48"><type pos:start="1:28" pos:end="1:48"><name pos:start="1:28" pos:end="1:41">AVCodecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:48">avctx</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:60">G2MContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:63">c</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:45"><decl pos:start="3:28" pos:end="3:45"><type pos:start="3:28" pos:end="3:45"><name pos:start="3:28" pos:end="3:41">GetByteContext</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:45">gb</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="229:1">{<block_content pos:start="7:5" pos:end="227:13">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:17">bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:57"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:21">cur_size</name></decl>, <decl pos:start="13:24" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:24" pos:end="13:31">cursor_w</name></decl>, <decl pos:start="13:34" pos:end="13:41"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:34" pos:end="13:41">cursor_h</name></decl>, <decl pos:start="13:44" pos:end="13:56"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:44" pos:end="13:56">cursor_stride</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:40"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:25">cursor_hot_x</name></decl>, <decl pos:start="15:28" pos:end="15:39"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:28" pos:end="15:39">cursor_hot_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:18">cursor_fmt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:16">tmp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:12">cur_size</name>      <operator pos:start="23:19" pos:end="23:19">=</operator> <call pos:start="23:21" pos:end="23:44"><name pos:start="23:21" pos:end="23:40">bytestream2_get_be32</name><argument_list pos:start="23:41" pos:end="23:44">(<argument pos:start="23:42" pos:end="23:43"><expr pos:start="23:42" pos:end="23:43"><name pos:start="23:42" pos:end="23:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:45"><expr pos:start="25:5" pos:end="25:44"><name pos:start="25:5" pos:end="25:12">cursor_w</name>      <operator pos:start="25:19" pos:end="25:19">=</operator> <call pos:start="25:21" pos:end="25:44"><name pos:start="25:21" pos:end="25:40">bytestream2_get_byte</name><argument_list pos:start="25:41" pos:end="25:44">(<argument pos:start="25:42" pos:end="25:43"><expr pos:start="25:42" pos:end="25:43"><name pos:start="25:42" pos:end="25:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:12">cursor_h</name>      <operator pos:start="27:19" pos:end="27:19">=</operator> <call pos:start="27:21" pos:end="27:44"><name pos:start="27:21" pos:end="27:40">bytestream2_get_byte</name><argument_list pos:start="27:41" pos:end="27:44">(<argument pos:start="27:42" pos:end="27:43"><expr pos:start="27:42" pos:end="27:43"><name pos:start="27:42" pos:end="27:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:16">cursor_hot_x</name>  <operator pos:start="29:19" pos:end="29:19">=</operator> <call pos:start="29:21" pos:end="29:44"><name pos:start="29:21" pos:end="29:40">bytestream2_get_byte</name><argument_list pos:start="29:41" pos:end="29:44">(<argument pos:start="29:42" pos:end="29:43"><expr pos:start="29:42" pos:end="29:43"><name pos:start="29:42" pos:end="29:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:45"><expr pos:start="31:5" pos:end="31:44"><name pos:start="31:5" pos:end="31:16">cursor_hot_y</name>  <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:44"><name pos:start="31:21" pos:end="31:40">bytestream2_get_byte</name><argument_list pos:start="31:41" pos:end="31:44">(<argument pos:start="31:42" pos:end="31:43"><expr pos:start="31:42" pos:end="31:43"><name pos:start="31:42" pos:end="31:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:45"><expr pos:start="33:5" pos:end="33:44"><name pos:start="33:5" pos:end="33:14">cursor_fmt</name>    <operator pos:start="33:19" pos:end="33:19">=</operator> <call pos:start="33:21" pos:end="33:44"><name pos:start="33:21" pos:end="33:40">bytestream2_get_byte</name><argument_list pos:start="33:41" pos:end="33:44">(<argument pos:start="33:42" pos:end="33:43"><expr pos:start="33:42" pos:end="33:43"><name pos:start="33:42" pos:end="33:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:69"><expr pos:start="37:5" pos:end="37:68"><name pos:start="37:5" pos:end="37:17">cursor_stride</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <call pos:start="37:21" pos:end="37:64"><name pos:start="37:21" pos:end="37:27">FFALIGN</name><argument_list pos:start="37:28" pos:end="37:64">(<argument pos:start="37:29" pos:end="37:36"><expr pos:start="37:29" pos:end="37:36"><name pos:start="37:29" pos:end="37:36">cursor_w</name></expr></argument>, <argument pos:start="37:39" pos:end="37:63"><expr pos:start="37:39" pos:end="37:63"><ternary pos:start="37:39" pos:end="37:63"><condition pos:start="37:39" pos:end="37:56"><expr pos:start="37:39" pos:end="37:54"><name pos:start="37:39" pos:end="37:51"><name pos:start="37:39" pos:end="37:39">c</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:51">cursor_fmt</name></name><operator pos:start="37:52" pos:end="37:53">==</operator><literal type="number" pos:start="37:54" pos:end="37:54">1</literal></expr> ?</condition><then pos:start="37:58" pos:end="37:59"> <expr pos:start="37:58" pos:end="37:59"><literal type="number" pos:start="37:58" pos:end="37:59">32</literal></expr> </then><else pos:start="37:61" pos:end="37:63">: <expr pos:start="37:63" pos:end="37:63"><literal type="number" pos:start="37:63" pos:end="37:63">1</literal></expr></else></ternary></expr></argument>)</argument_list></call> <operator pos:start="37:66" pos:end="37:66">*</operator> <literal type="number" pos:start="37:68" pos:end="37:68">4</literal></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="51:5"><if pos:start="41:5" pos:end="51:5">if <condition pos:start="41:8" pos:end="43:39">(<expr pos:start="41:9" pos:end="43:38"><name pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:16">cursor_w</name> <argument_list type="generic" pos:start="41:18" pos:end="41:34">&lt; <argument pos:start="41:20" pos:end="41:32"><expr pos:start="41:20" pos:end="41:32"><literal type="number" pos:start="41:20" pos:end="41:20">1</literal> <operator pos:start="41:22" pos:end="41:23">||</operator> <name pos:start="41:25" pos:end="41:32">cursor_w</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="41:36" pos:end="41:38">256</literal> <operator pos:start="41:40" pos:end="41:41">||</operator>

        <name pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:16">cursor_h</name> <argument_list type="generic" pos:start="43:18" pos:end="43:34">&lt; <argument pos:start="43:20" pos:end="43:32"><expr pos:start="43:20" pos:end="43:32"><literal type="number" pos:start="43:20" pos:end="43:20">1</literal> <operator pos:start="43:22" pos:end="43:23">||</operator> <name pos:start="43:25" pos:end="43:32">cursor_h</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="43:36" pos:end="43:38">256</literal></expr>)</condition> <block pos:start="43:41" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:35">

        <expr_stmt pos:start="45:9" pos:end="47:35"><expr pos:start="45:9" pos:end="47:34"><call pos:start="45:9" pos:end="47:34"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="47:34">(<argument pos:start="45:16" pos:end="45:20"><expr pos:start="45:16" pos:end="45:20"><name pos:start="45:16" pos:end="45:20">avctx</name></expr></argument>, <argument pos:start="45:23" pos:end="45:34"><expr pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:37" pos:end="45:71"><expr pos:start="45:37" pos:end="45:71"><literal type="string" pos:start="45:37" pos:end="45:71">"Invalid cursor dimensions %dx%d\n"</literal></expr></argument>,

               <argument pos:start="47:16" pos:end="47:23"><expr pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:23">cursor_w</name></expr></argument>, <argument pos:start="47:26" pos:end="47:33"><expr pos:start="47:26" pos:end="47:33"><name pos:start="47:26" pos:end="47:33">cursor_h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:35">return <expr pos:start="49:16" pos:end="49:34"><name pos:start="49:16" pos:end="49:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="63:5"><if pos:start="53:5" pos:end="63:5">if <condition pos:start="53:8" pos:end="53:59">(<expr pos:start="53:9" pos:end="53:58"><name pos:start="53:9" pos:end="53:20">cursor_hot_x</name> <operator pos:start="53:22" pos:end="53:22">&gt;</operator> <name pos:start="53:24" pos:end="53:31">cursor_w</name> <operator pos:start="53:33" pos:end="53:34">||</operator> <name pos:start="53:36" pos:end="53:47">cursor_hot_y</name> <operator pos:start="53:49" pos:end="53:49">&gt;</operator> <name pos:start="53:51" pos:end="53:58">cursor_h</name></expr>)</condition> <block pos:start="53:61" pos:end="63:5">{<block_content pos:start="55:9" pos:end="61:57">

        <expr_stmt pos:start="55:9" pos:end="57:43"><expr pos:start="55:9" pos:end="57:42"><call pos:start="55:9" pos:end="57:42"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="57:42">(<argument pos:start="55:16" pos:end="55:20"><expr pos:start="55:16" pos:end="55:20"><name pos:start="55:16" pos:end="55:20">avctx</name></expr></argument>, <argument pos:start="55:23" pos:end="55:36"><expr pos:start="55:23" pos:end="55:36"><name pos:start="55:23" pos:end="55:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="55:39" pos:end="55:72"><expr pos:start="55:39" pos:end="55:72"><literal type="string" pos:start="55:39" pos:end="55:72">"Invalid hotspot position %d,%d\n"</literal></expr></argument>,

               <argument pos:start="57:16" pos:end="57:27"><expr pos:start="57:16" pos:end="57:27"><name pos:start="57:16" pos:end="57:27">cursor_hot_x</name></expr></argument>, <argument pos:start="57:30" pos:end="57:41"><expr pos:start="57:30" pos:end="57:41"><name pos:start="57:30" pos:end="57:41">cursor_hot_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:57"><expr pos:start="59:9" pos:end="59:56"><name pos:start="59:9" pos:end="59:20">cursor_hot_x</name> <operator pos:start="59:22" pos:end="59:22">=</operator> <call pos:start="59:24" pos:end="59:56"><name pos:start="59:24" pos:end="59:28">FFMIN</name><argument_list pos:start="59:29" pos:end="59:56">(<argument pos:start="59:30" pos:end="59:41"><expr pos:start="59:30" pos:end="59:41"><name pos:start="59:30" pos:end="59:41">cursor_hot_x</name></expr></argument>, <argument pos:start="59:44" pos:end="59:55"><expr pos:start="59:44" pos:end="59:55"><name pos:start="59:44" pos:end="59:51">cursor_w</name> <operator pos:start="59:53" pos:end="59:53">-</operator> <literal type="number" pos:start="59:55" pos:end="59:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:57"><expr pos:start="61:9" pos:end="61:56"><name pos:start="61:9" pos:end="61:20">cursor_hot_y</name> <operator pos:start="61:22" pos:end="61:22">=</operator> <call pos:start="61:24" pos:end="61:56"><name pos:start="61:24" pos:end="61:28">FFMIN</name><argument_list pos:start="61:29" pos:end="61:56">(<argument pos:start="61:30" pos:end="61:41"><expr pos:start="61:30" pos:end="61:41"><name pos:start="61:30" pos:end="61:41">cursor_hot_y</name></expr></argument>, <argument pos:start="61:44" pos:end="61:55"><expr pos:start="61:44" pos:end="61:55"><name pos:start="61:44" pos:end="61:51">cursor_h</name> <operator pos:start="61:53" pos:end="61:53">-</operator> <literal type="number" pos:start="61:55" pos:end="61:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="75:5"><if pos:start="65:5" pos:end="75:5">if <condition pos:start="65:8" pos:end="67:49">(<expr pos:start="65:9" pos:end="67:48"><name pos:start="65:9" pos:end="65:16">cur_size</name> <operator pos:start="65:18" pos:end="65:18">-</operator> <literal type="number" pos:start="65:20" pos:end="65:20">9</literal> <operator pos:start="65:22" pos:end="65:22">&gt;</operator> <call pos:start="65:24" pos:end="65:53"><name pos:start="65:24" pos:end="65:49">bytestream2_get_bytes_left</name><argument_list pos:start="65:50" pos:end="65:53">(<argument pos:start="65:51" pos:end="65:52"><expr pos:start="65:51" pos:end="65:52"><name pos:start="65:51" pos:end="65:52">gb</name></expr></argument>)</argument_list></call> <operator pos:start="65:55" pos:end="65:56">||</operator>

        <name pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:9">c</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:19">cursor_w</name></name> <operator pos:start="67:21" pos:end="67:21">*</operator> <name pos:start="67:23" pos:end="67:33"><name pos:start="67:23" pos:end="67:23">c</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:33">cursor_h</name></name> <operator pos:start="67:35" pos:end="67:35">/</operator> <literal type="number" pos:start="67:37" pos:end="67:37">4</literal> <operator pos:start="67:39" pos:end="67:39">&gt;</operator> <name pos:start="67:41" pos:end="67:48">cur_size</name></expr>)</condition> <block pos:start="67:51" pos:end="75:5">{<block_content pos:start="69:9" pos:end="73:35">

        <expr_stmt pos:start="69:9" pos:end="71:57"><expr pos:start="69:9" pos:end="71:56"><call pos:start="69:9" pos:end="71:56"><name pos:start="69:9" pos:end="69:14">av_log</name><argument_list pos:start="69:15" pos:end="71:56">(<argument pos:start="69:16" pos:end="69:20"><expr pos:start="69:16" pos:end="69:20"><name pos:start="69:16" pos:end="69:20">avctx</name></expr></argument>, <argument pos:start="69:23" pos:end="69:34"><expr pos:start="69:23" pos:end="69:34"><name pos:start="69:23" pos:end="69:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="69:37" pos:end="69:70"><expr pos:start="69:37" pos:end="69:70"><literal type="string" pos:start="69:37" pos:end="69:70">"Invalid cursor data size %d/%d\n"</literal></expr></argument>,

               <argument pos:start="71:16" pos:end="71:23"><expr pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:23">cur_size</name></expr></argument>, <argument pos:start="71:26" pos:end="71:55"><expr pos:start="71:26" pos:end="71:55"><call pos:start="71:26" pos:end="71:55"><name pos:start="71:26" pos:end="71:51">bytestream2_get_bytes_left</name><argument_list pos:start="71:52" pos:end="71:55">(<argument pos:start="71:53" pos:end="71:54"><expr pos:start="71:53" pos:end="71:54"><name pos:start="71:53" pos:end="71:54">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:35">return <expr pos:start="73:16" pos:end="73:34"><name pos:start="73:16" pos:end="73:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="77:5" pos:end="85:5"><if pos:start="77:5" pos:end="85:5">if <condition pos:start="77:8" pos:end="77:44">(<expr pos:start="77:9" pos:end="77:43"><name pos:start="77:9" pos:end="77:18">cursor_fmt</name> <operator pos:start="77:20" pos:end="77:21">!=</operator> <literal type="number" pos:start="77:23" pos:end="77:23">1</literal> <operator pos:start="77:25" pos:end="77:26">&amp;&amp;</operator> <name pos:start="77:28" pos:end="77:37">cursor_fmt</name> <operator pos:start="77:39" pos:end="77:40">!=</operator> <literal type="number" pos:start="77:42" pos:end="77:43">32</literal></expr>)</condition> <block pos:start="77:46" pos:end="85:5">{<block_content pos:start="79:9" pos:end="83:36">

        <expr_stmt pos:start="79:9" pos:end="81:50"><expr pos:start="79:9" pos:end="81:49"><call pos:start="79:9" pos:end="81:49"><name pos:start="79:9" pos:end="79:37">avpriv_report_missing_feature</name><argument_list pos:start="79:38" pos:end="81:49">(<argument pos:start="79:39" pos:end="79:43"><expr pos:start="79:39" pos:end="79:43"><name pos:start="79:39" pos:end="79:43">avctx</name></expr></argument>, <argument pos:start="79:46" pos:end="79:63"><expr pos:start="79:46" pos:end="79:63"><literal type="string" pos:start="79:46" pos:end="79:63">"Cursor format %d"</literal></expr></argument>,

                                      <argument pos:start="81:39" pos:end="81:48"><expr pos:start="81:39" pos:end="81:48"><name pos:start="81:39" pos:end="81:48">cursor_fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:36">return <expr pos:start="83:16" pos:end="83:35"><name pos:start="83:16" pos:end="83:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:58"><expr pos:start="89:5" pos:end="89:57"><name pos:start="89:5" pos:end="89:7">tmp</name> <operator pos:start="89:9" pos:end="89:9">=</operator> <call pos:start="89:11" pos:end="89:57"><name pos:start="89:11" pos:end="89:20">av_realloc</name><argument_list pos:start="89:21" pos:end="89:57">(<argument pos:start="89:22" pos:end="89:30"><expr pos:start="89:22" pos:end="89:30"><name pos:start="89:22" pos:end="89:30"><name pos:start="89:22" pos:end="89:22">c</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:30">cursor</name></name></expr></argument>, <argument pos:start="89:33" pos:end="89:56"><expr pos:start="89:33" pos:end="89:56"><name pos:start="89:33" pos:end="89:45">cursor_stride</name> <operator pos:start="89:47" pos:end="89:47">*</operator> <name pos:start="89:49" pos:end="89:56">cursor_h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:13">(<expr pos:start="91:9" pos:end="91:12"><operator pos:start="91:9" pos:end="91:9">!</operator><name pos:start="91:10" pos:end="91:12">tmp</name></expr>)</condition> <block pos:start="91:15" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:31">

        <expr_stmt pos:start="93:9" pos:end="93:71"><expr pos:start="93:9" pos:end="93:70"><call pos:start="93:9" pos:end="93:70"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:70">(<argument pos:start="93:16" pos:end="93:20"><expr pos:start="93:16" pos:end="93:20"><name pos:start="93:16" pos:end="93:20">avctx</name></expr></argument>, <argument pos:start="93:23" pos:end="93:34"><expr pos:start="93:23" pos:end="93:34"><name pos:start="93:23" pos:end="93:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:37" pos:end="93:69"><expr pos:start="93:37" pos:end="93:69"><literal type="string" pos:start="93:37" pos:end="93:69">"Cannot allocate cursor buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:31">return <expr pos:start="95:16" pos:end="95:30"><call pos:start="95:16" pos:end="95:30"><name pos:start="95:16" pos:end="95:22">AVERROR</name><argument_list pos:start="95:23" pos:end="95:30">(<argument pos:start="95:24" pos:end="95:29"><expr pos:start="95:24" pos:end="95:29"><name pos:start="95:24" pos:end="95:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:27"><expr pos:start="101:5" pos:end="101:26"><name pos:start="101:5" pos:end="101:13"><name pos:start="101:5" pos:end="101:5">c</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:13">cursor</name></name>        <operator pos:start="101:22" pos:end="101:22">=</operator> <name pos:start="101:24" pos:end="101:26">tmp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:32"><expr pos:start="103:5" pos:end="103:31"><name pos:start="103:5" pos:end="103:15"><name pos:start="103:5" pos:end="103:5">c</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:15">cursor_w</name></name>      <operator pos:start="103:22" pos:end="103:22">=</operator> <name pos:start="103:24" pos:end="103:31">cursor_w</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:32"><expr pos:start="105:5" pos:end="105:31"><name pos:start="105:5" pos:end="105:15"><name pos:start="105:5" pos:end="105:5">c</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:15">cursor_h</name></name>      <operator pos:start="105:22" pos:end="105:22">=</operator> <name pos:start="105:24" pos:end="105:31">cursor_h</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:36"><expr pos:start="107:5" pos:end="107:35"><name pos:start="107:5" pos:end="107:19"><name pos:start="107:5" pos:end="107:5">c</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:19">cursor_hot_x</name></name>  <operator pos:start="107:22" pos:end="107:22">=</operator> <name pos:start="107:24" pos:end="107:35">cursor_hot_x</name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:36"><expr pos:start="109:5" pos:end="109:35"><name pos:start="109:5" pos:end="109:19"><name pos:start="109:5" pos:end="109:5">c</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:19">cursor_hot_y</name></name>  <operator pos:start="109:22" pos:end="109:22">=</operator> <name pos:start="109:24" pos:end="109:35">cursor_hot_y</name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:34"><expr pos:start="111:5" pos:end="111:33"><name pos:start="111:5" pos:end="111:17"><name pos:start="111:5" pos:end="111:5">c</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:17">cursor_fmt</name></name>    <operator pos:start="111:22" pos:end="111:22">=</operator> <name pos:start="111:24" pos:end="111:33">cursor_fmt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:37"><expr pos:start="113:5" pos:end="113:36"><name pos:start="113:5" pos:end="113:20"><name pos:start="113:5" pos:end="113:5">c</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:20">cursor_stride</name></name> <operator pos:start="113:22" pos:end="113:22">=</operator> <name pos:start="113:24" pos:end="113:36">cursor_stride</name></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:20"><expr pos:start="117:5" pos:end="117:19"><name pos:start="117:5" pos:end="117:7">dst</name> <operator pos:start="117:9" pos:end="117:9">=</operator> <name pos:start="117:11" pos:end="117:19"><name pos:start="117:11" pos:end="117:11">c</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:19">cursor</name></name></expr>;</expr_stmt>

    <switch pos:start="119:5" pos:end="225:5">switch <condition pos:start="119:12" pos:end="119:26">(<expr pos:start="119:13" pos:end="119:25"><name pos:start="119:13" pos:end="119:25"><name pos:start="119:13" pos:end="119:13">c</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:25">cursor_fmt</name></name></expr>)</condition> <block pos:start="119:28" pos:end="225:5">{<block_content pos:start="121:5" pos:end="223:36">

    <case pos:start="121:5" pos:end="121:11">case <expr pos:start="121:10" pos:end="121:10"><literal type="number" pos:start="121:10" pos:end="121:10">1</literal></expr>:</case> <comment type="line" pos:start="121:13" pos:end="121:29">// old monochrome</comment>

        <for pos:start="123:9" pos:end="141:9">for <control pos:start="123:13" pos:end="123:41">(<init pos:start="123:14" pos:end="123:19"><expr pos:start="123:14" pos:end="123:18"><name pos:start="123:14" pos:end="123:14">j</name> <operator pos:start="123:16" pos:end="123:16">=</operator> <literal type="number" pos:start="123:18" pos:end="123:18">0</literal></expr>;</init> <condition pos:start="123:21" pos:end="123:36"><expr pos:start="123:21" pos:end="123:35"><name pos:start="123:21" pos:end="123:21">j</name> <operator pos:start="123:23" pos:end="123:23">&lt;</operator> <name pos:start="123:25" pos:end="123:35"><name pos:start="123:25" pos:end="123:25">c</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:35">cursor_h</name></name></expr>;</condition> <incr pos:start="123:38" pos:end="123:40"><expr pos:start="123:38" pos:end="123:40"><name pos:start="123:38" pos:end="123:38">j</name><operator pos:start="123:39" pos:end="123:40">++</operator></expr></incr>)</control> <block pos:start="123:43" pos:end="141:9">{<block_content pos:start="125:13" pos:end="139:13">

            <for pos:start="125:13" pos:end="139:13">for <control pos:start="125:17" pos:end="125:49">(<init pos:start="125:18" pos:end="125:23"><expr pos:start="125:18" pos:end="125:22"><name pos:start="125:18" pos:end="125:18">i</name> <operator pos:start="125:20" pos:end="125:20">=</operator> <literal type="number" pos:start="125:22" pos:end="125:22">0</literal></expr>;</init> <condition pos:start="125:25" pos:end="125:40"><expr pos:start="125:25" pos:end="125:39"><name pos:start="125:25" pos:end="125:25">i</name> <operator pos:start="125:27" pos:end="125:27">&lt;</operator> <name pos:start="125:29" pos:end="125:39"><name pos:start="125:29" pos:end="125:29">c</name><operator pos:start="125:30" pos:end="125:31">-&gt;</operator><name pos:start="125:32" pos:end="125:39">cursor_w</name></name></expr>;</condition> <incr pos:start="125:42" pos:end="125:48"><expr pos:start="125:42" pos:end="125:48"><name pos:start="125:42" pos:end="125:42">i</name> <operator pos:start="125:44" pos:end="125:45">+=</operator> <literal type="number" pos:start="125:47" pos:end="125:48">32</literal></expr></incr>)</control> <block pos:start="125:51" pos:end="139:13">{<block_content pos:start="127:17" pos:end="137:17">

                <expr_stmt pos:start="127:17" pos:end="127:48"><expr pos:start="127:17" pos:end="127:47"><name pos:start="127:17" pos:end="127:20">bits</name> <operator pos:start="127:22" pos:end="127:22">=</operator> <call pos:start="127:24" pos:end="127:47"><name pos:start="127:24" pos:end="127:43">bytestream2_get_be32</name><argument_list pos:start="127:44" pos:end="127:47">(<argument pos:start="127:45" pos:end="127:46"><expr pos:start="127:45" pos:end="127:46"><name pos:start="127:45" pos:end="127:46">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="129:17" pos:end="137:17">for <control pos:start="129:21" pos:end="129:40">(<init pos:start="129:22" pos:end="129:27"><expr pos:start="129:22" pos:end="129:26"><name pos:start="129:22" pos:end="129:22">k</name> <operator pos:start="129:24" pos:end="129:24">=</operator> <literal type="number" pos:start="129:26" pos:end="129:26">0</literal></expr>;</init> <condition pos:start="129:29" pos:end="129:35"><expr pos:start="129:29" pos:end="129:34"><name pos:start="129:29" pos:end="129:29">k</name> <operator pos:start="129:31" pos:end="129:31">&lt;</operator> <literal type="number" pos:start="129:33" pos:end="129:34">32</literal></expr>;</condition> <incr pos:start="129:37" pos:end="129:39"><expr pos:start="129:37" pos:end="129:39"><name pos:start="129:37" pos:end="129:37">k</name><operator pos:start="129:38" pos:end="129:39">++</operator></expr></incr>)</control> <block pos:start="129:42" pos:end="137:17">{<block_content pos:start="131:21" pos:end="135:31">

                    <expr_stmt pos:start="131:21" pos:end="131:51"><expr pos:start="131:21" pos:end="131:50"><name pos:start="131:21" pos:end="131:26"><name pos:start="131:21" pos:end="131:23">dst</name><index pos:start="131:24" pos:end="131:26">[<expr pos:start="131:25" pos:end="131:25"><literal type="number" pos:start="131:25" pos:end="131:25">0</literal></expr>]</index></name> <operator pos:start="131:28" pos:end="131:28">=</operator> <operator pos:start="131:30" pos:end="131:30">!</operator><operator pos:start="131:31" pos:end="131:31">!</operator><operator pos:start="131:32" pos:end="131:32">(</operator><name pos:start="131:33" pos:end="131:36">bits</name> <operator pos:start="131:38" pos:end="131:38">&amp;</operator> <literal type="number" pos:start="131:40" pos:end="131:49">0x80000000</literal><operator pos:start="131:50" pos:end="131:50">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="133:21" pos:end="133:29"><expr pos:start="133:21" pos:end="133:28"><name pos:start="133:21" pos:end="133:23">dst</name> <operator pos:start="133:25" pos:end="133:26">+=</operator> <literal type="number" pos:start="133:28" pos:end="133:28">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="135:21" pos:end="135:31"><expr pos:start="135:21" pos:end="135:30"><name pos:start="135:21" pos:end="135:24">bits</name> <operator pos:start="135:26" pos:end="135:28">&lt;&lt;=</operator> <literal type="number" pos:start="135:30" pos:end="135:30">1</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <expr_stmt pos:start="145:9" pos:end="145:24"><expr pos:start="145:9" pos:end="145:23"><name pos:start="145:9" pos:end="145:11">dst</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <name pos:start="145:15" pos:end="145:23"><name pos:start="145:15" pos:end="145:15">c</name><operator pos:start="145:16" pos:end="145:17">-&gt;</operator><name pos:start="145:18" pos:end="145:23">cursor</name></name></expr>;</expr_stmt>

        <for pos:start="147:9" pos:end="191:9">for <control pos:start="147:13" pos:end="147:41">(<init pos:start="147:14" pos:end="147:19"><expr pos:start="147:14" pos:end="147:18"><name pos:start="147:14" pos:end="147:14">j</name> <operator pos:start="147:16" pos:end="147:16">=</operator> <literal type="number" pos:start="147:18" pos:end="147:18">0</literal></expr>;</init> <condition pos:start="147:21" pos:end="147:36"><expr pos:start="147:21" pos:end="147:35"><name pos:start="147:21" pos:end="147:21">j</name> <operator pos:start="147:23" pos:end="147:23">&lt;</operator> <name pos:start="147:25" pos:end="147:35"><name pos:start="147:25" pos:end="147:25">c</name><operator pos:start="147:26" pos:end="147:27">-&gt;</operator><name pos:start="147:28" pos:end="147:35">cursor_h</name></name></expr>;</condition> <incr pos:start="147:38" pos:end="147:40"><expr pos:start="147:38" pos:end="147:40"><name pos:start="147:38" pos:end="147:38">j</name><operator pos:start="147:39" pos:end="147:40">++</operator></expr></incr>)</control> <block pos:start="147:43" pos:end="191:9">{<block_content pos:start="149:13" pos:end="189:13">

            <for pos:start="149:13" pos:end="189:13">for <control pos:start="149:17" pos:end="149:49">(<init pos:start="149:18" pos:end="149:23"><expr pos:start="149:18" pos:end="149:22"><name pos:start="149:18" pos:end="149:18">i</name> <operator pos:start="149:20" pos:end="149:20">=</operator> <literal type="number" pos:start="149:22" pos:end="149:22">0</literal></expr>;</init> <condition pos:start="149:25" pos:end="149:40"><expr pos:start="149:25" pos:end="149:39"><name pos:start="149:25" pos:end="149:25">i</name> <operator pos:start="149:27" pos:end="149:27">&lt;</operator> <name pos:start="149:29" pos:end="149:39"><name pos:start="149:29" pos:end="149:29">c</name><operator pos:start="149:30" pos:end="149:31">-&gt;</operator><name pos:start="149:32" pos:end="149:39">cursor_w</name></name></expr>;</condition> <incr pos:start="149:42" pos:end="149:48"><expr pos:start="149:42" pos:end="149:48"><name pos:start="149:42" pos:end="149:42">i</name> <operator pos:start="149:44" pos:end="149:45">+=</operator> <literal type="number" pos:start="149:47" pos:end="149:48">32</literal></expr></incr>)</control> <block pos:start="149:51" pos:end="189:13">{<block_content pos:start="151:17" pos:end="187:17">

                <expr_stmt pos:start="151:17" pos:end="151:48"><expr pos:start="151:17" pos:end="151:47"><name pos:start="151:17" pos:end="151:20">bits</name> <operator pos:start="151:22" pos:end="151:22">=</operator> <call pos:start="151:24" pos:end="151:47"><name pos:start="151:24" pos:end="151:43">bytestream2_get_be32</name><argument_list pos:start="151:44" pos:end="151:47">(<argument pos:start="151:45" pos:end="151:46"><expr pos:start="151:45" pos:end="151:46"><name pos:start="151:45" pos:end="151:46">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="153:17" pos:end="187:17">for <control pos:start="153:21" pos:end="153:40">(<init pos:start="153:22" pos:end="153:27"><expr pos:start="153:22" pos:end="153:26"><name pos:start="153:22" pos:end="153:22">k</name> <operator pos:start="153:24" pos:end="153:24">=</operator> <literal type="number" pos:start="153:26" pos:end="153:26">0</literal></expr>;</init> <condition pos:start="153:29" pos:end="153:35"><expr pos:start="153:29" pos:end="153:34"><name pos:start="153:29" pos:end="153:29">k</name> <operator pos:start="153:31" pos:end="153:31">&lt;</operator> <literal type="number" pos:start="153:33" pos:end="153:34">32</literal></expr>;</condition> <incr pos:start="153:37" pos:end="153:39"><expr pos:start="153:37" pos:end="153:39"><name pos:start="153:37" pos:end="153:37">k</name><operator pos:start="153:38" pos:end="153:39">++</operator></expr></incr>)</control> <block pos:start="153:42" pos:end="187:17">{<block_content pos:start="155:21" pos:end="185:31">

                    <decl_stmt pos:start="155:21" pos:end="155:57"><decl pos:start="155:21" pos:end="155:56"><type pos:start="155:21" pos:end="155:23"><name pos:start="155:21" pos:end="155:23">int</name></type> <name pos:start="155:25" pos:end="155:32">mask_bit</name> <init pos:start="155:34" pos:end="155:56">= <expr pos:start="155:36" pos:end="155:56"><operator pos:start="155:36" pos:end="155:36">!</operator><operator pos:start="155:37" pos:end="155:37">!</operator><operator pos:start="155:38" pos:end="155:38">(</operator><name pos:start="155:39" pos:end="155:42">bits</name> <operator pos:start="155:44" pos:end="155:44">&amp;</operator> <literal type="number" pos:start="155:46" pos:end="155:55">0x80000000</literal><operator pos:start="155:56" pos:end="155:56">)</operator></expr></init></decl>;</decl_stmt>

                    <switch pos:start="157:21" pos:end="181:21">switch <condition pos:start="157:28" pos:end="157:50">(<expr pos:start="157:29" pos:end="157:49"><name pos:start="157:29" pos:end="157:34"><name pos:start="157:29" pos:end="157:31">dst</name><index pos:start="157:32" pos:end="157:34">[<expr pos:start="157:33" pos:end="157:33"><literal type="number" pos:start="157:33" pos:end="157:33">0</literal></expr>]</index></name> <operator pos:start="157:36" pos:end="157:36">*</operator> <literal type="number" pos:start="157:38" pos:end="157:40">2</literal> <operator pos:start="157:40" pos:end="157:40">+</operator> <name pos:start="157:42" pos:end="157:49">mask_bit</name></expr>)</condition> <block pos:start="157:52" pos:end="181:21">{<block_content pos:start="159:21" pos:end="179:53">

                    <case pos:start="159:21" pos:end="159:27">case <expr pos:start="159:26" pos:end="159:26"><literal type="number" pos:start="159:26" pos:end="159:26">0</literal></expr>:</case>

                        <expr_stmt pos:start="161:25" pos:end="161:38"><expr pos:start="161:25" pos:end="161:37"><name pos:start="161:25" pos:end="161:30"><name pos:start="161:25" pos:end="161:27">dst</name><index pos:start="161:28" pos:end="161:30">[<expr pos:start="161:29" pos:end="161:29"><literal type="number" pos:start="161:29" pos:end="161:29">0</literal></expr>]</index></name> <operator pos:start="161:32" pos:end="161:32">=</operator> <literal type="number" pos:start="161:34" pos:end="161:37">0xFF</literal></expr>;</expr_stmt> <expr_stmt pos:start="161:40" pos:end="161:53"><expr pos:start="161:40" pos:end="161:52"><name pos:start="161:40" pos:end="161:45"><name pos:start="161:40" pos:end="161:42">dst</name><index pos:start="161:43" pos:end="161:45">[<expr pos:start="161:44" pos:end="161:44"><literal type="number" pos:start="161:44" pos:end="161:44">1</literal></expr>]</index></name> <operator pos:start="161:47" pos:end="161:47">=</operator> <literal type="number" pos:start="161:49" pos:end="161:52">0x00</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="163:25" pos:end="163:38"><expr pos:start="163:25" pos:end="163:37"><name pos:start="163:25" pos:end="163:30"><name pos:start="163:25" pos:end="163:27">dst</name><index pos:start="163:28" pos:end="163:30">[<expr pos:start="163:29" pos:end="163:29"><literal type="number" pos:start="163:29" pos:end="163:29">2</literal></expr>]</index></name> <operator pos:start="163:32" pos:end="163:32">=</operator> <literal type="number" pos:start="163:34" pos:end="163:37">0x00</literal></expr>;</expr_stmt> <expr_stmt pos:start="163:40" pos:end="163:53"><expr pos:start="163:40" pos:end="163:52"><name pos:start="163:40" pos:end="163:45"><name pos:start="163:40" pos:end="163:42">dst</name><index pos:start="163:43" pos:end="163:45">[<expr pos:start="163:44" pos:end="163:44"><literal type="number" pos:start="163:44" pos:end="163:44">3</literal></expr>]</index></name> <operator pos:start="163:47" pos:end="163:47">=</operator> <literal type="number" pos:start="163:49" pos:end="163:52">0x00</literal></expr>;</expr_stmt>

                        <break pos:start="165:25" pos:end="165:30">break;</break>

                    <case pos:start="167:21" pos:end="167:27">case <expr pos:start="167:26" pos:end="167:26"><literal type="number" pos:start="167:26" pos:end="167:26">1</literal></expr>:</case>

                        <expr_stmt pos:start="169:25" pos:end="169:38"><expr pos:start="169:25" pos:end="169:37"><name pos:start="169:25" pos:end="169:30"><name pos:start="169:25" pos:end="169:27">dst</name><index pos:start="169:28" pos:end="169:30">[<expr pos:start="169:29" pos:end="169:29"><literal type="number" pos:start="169:29" pos:end="169:29">0</literal></expr>]</index></name> <operator pos:start="169:32" pos:end="169:32">=</operator> <literal type="number" pos:start="169:34" pos:end="169:37">0xFF</literal></expr>;</expr_stmt> <expr_stmt pos:start="169:40" pos:end="169:53"><expr pos:start="169:40" pos:end="169:52"><name pos:start="169:40" pos:end="169:45"><name pos:start="169:40" pos:end="169:42">dst</name><index pos:start="169:43" pos:end="169:45">[<expr pos:start="169:44" pos:end="169:44"><literal type="number" pos:start="169:44" pos:end="169:44">1</literal></expr>]</index></name> <operator pos:start="169:47" pos:end="169:47">=</operator> <literal type="number" pos:start="169:49" pos:end="169:52">0xFF</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="171:25" pos:end="171:38"><expr pos:start="171:25" pos:end="171:37"><name pos:start="171:25" pos:end="171:30"><name pos:start="171:25" pos:end="171:27">dst</name><index pos:start="171:28" pos:end="171:30">[<expr pos:start="171:29" pos:end="171:29"><literal type="number" pos:start="171:29" pos:end="171:29">2</literal></expr>]</index></name> <operator pos:start="171:32" pos:end="171:32">=</operator> <literal type="number" pos:start="171:34" pos:end="171:37">0xFF</literal></expr>;</expr_stmt> <expr_stmt pos:start="171:40" pos:end="171:53"><expr pos:start="171:40" pos:end="171:52"><name pos:start="171:40" pos:end="171:45"><name pos:start="171:40" pos:end="171:42">dst</name><index pos:start="171:43" pos:end="171:45">[<expr pos:start="171:44" pos:end="171:44"><literal type="number" pos:start="171:44" pos:end="171:44">3</literal></expr>]</index></name> <operator pos:start="171:47" pos:end="171:47">=</operator> <literal type="number" pos:start="171:49" pos:end="171:52">0xFF</literal></expr>;</expr_stmt>

                        <break pos:start="173:25" pos:end="173:30">break;</break>

                    <default pos:start="175:21" pos:end="175:28">default:</default>

                        <expr_stmt pos:start="177:25" pos:end="177:38"><expr pos:start="177:25" pos:end="177:37"><name pos:start="177:25" pos:end="177:30"><name pos:start="177:25" pos:end="177:27">dst</name><index pos:start="177:28" pos:end="177:30">[<expr pos:start="177:29" pos:end="177:29"><literal type="number" pos:start="177:29" pos:end="177:29">0</literal></expr>]</index></name> <operator pos:start="177:32" pos:end="177:32">=</operator> <literal type="number" pos:start="177:34" pos:end="177:37">0x00</literal></expr>;</expr_stmt> <expr_stmt pos:start="177:40" pos:end="177:53"><expr pos:start="177:40" pos:end="177:52"><name pos:start="177:40" pos:end="177:45"><name pos:start="177:40" pos:end="177:42">dst</name><index pos:start="177:43" pos:end="177:45">[<expr pos:start="177:44" pos:end="177:44"><literal type="number" pos:start="177:44" pos:end="177:44">1</literal></expr>]</index></name> <operator pos:start="177:47" pos:end="177:47">=</operator> <literal type="number" pos:start="177:49" pos:end="177:52">0x00</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="179:25" pos:end="179:38"><expr pos:start="179:25" pos:end="179:37"><name pos:start="179:25" pos:end="179:30"><name pos:start="179:25" pos:end="179:27">dst</name><index pos:start="179:28" pos:end="179:30">[<expr pos:start="179:29" pos:end="179:29"><literal type="number" pos:start="179:29" pos:end="179:29">2</literal></expr>]</index></name> <operator pos:start="179:32" pos:end="179:32">=</operator> <literal type="number" pos:start="179:34" pos:end="179:37">0x00</literal></expr>;</expr_stmt> <expr_stmt pos:start="179:40" pos:end="179:53"><expr pos:start="179:40" pos:end="179:52"><name pos:start="179:40" pos:end="179:45"><name pos:start="179:40" pos:end="179:42">dst</name><index pos:start="179:43" pos:end="179:45">[<expr pos:start="179:44" pos:end="179:44"><literal type="number" pos:start="179:44" pos:end="179:44">3</literal></expr>]</index></name> <operator pos:start="179:47" pos:end="179:47">=</operator> <literal type="number" pos:start="179:49" pos:end="179:52">0x00</literal></expr>;</expr_stmt>

                    </block_content>}</block></switch>

                    <expr_stmt pos:start="183:21" pos:end="183:29"><expr pos:start="183:21" pos:end="183:28"><name pos:start="183:21" pos:end="183:23">dst</name> <operator pos:start="183:25" pos:end="183:26">+=</operator> <literal type="number" pos:start="183:28" pos:end="183:28">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="185:21" pos:end="185:31"><expr pos:start="185:21" pos:end="185:30"><name pos:start="185:21" pos:end="185:24">bits</name> <operator pos:start="185:26" pos:end="185:28">&lt;&lt;=</operator> <literal type="number" pos:start="185:30" pos:end="185:30">1</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <break pos:start="193:9" pos:end="193:14">break;</break>

    <case pos:start="195:5" pos:end="195:12">case <expr pos:start="195:10" pos:end="195:11"><literal type="number" pos:start="195:10" pos:end="195:11">32</literal></expr>:</case> <comment type="line" pos:start="195:14" pos:end="195:27">// full colour</comment>

        <comment type="block" pos:start="197:9" pos:end="197:75">/* skip monochrome version of the cursor and decode RGBA instead */</comment>

        <expr_stmt pos:start="199:9" pos:end="199:76"><expr pos:start="199:9" pos:end="199:75"><call pos:start="199:9" pos:end="199:75"><name pos:start="199:9" pos:end="199:24">bytestream2_skip</name><argument_list pos:start="199:25" pos:end="199:75">(<argument pos:start="199:26" pos:end="199:27"><expr pos:start="199:26" pos:end="199:27"><name pos:start="199:26" pos:end="199:27">gb</name></expr></argument>, <argument pos:start="199:30" pos:end="199:74"><expr pos:start="199:30" pos:end="199:74"><name pos:start="199:30" pos:end="199:40"><name pos:start="199:30" pos:end="199:30">c</name><operator pos:start="199:31" pos:end="199:32">-&gt;</operator><name pos:start="199:33" pos:end="199:40">cursor_h</name></name> <operator pos:start="199:42" pos:end="199:42">*</operator> <operator pos:start="199:44" pos:end="199:44">(</operator><call pos:start="199:45" pos:end="199:68"><name pos:start="199:45" pos:end="199:51">FFALIGN</name><argument_list pos:start="199:52" pos:end="199:68">(<argument pos:start="199:53" pos:end="199:63"><expr pos:start="199:53" pos:end="199:63"><name pos:start="199:53" pos:end="199:63"><name pos:start="199:53" pos:end="199:53">c</name><operator pos:start="199:54" pos:end="199:55">-&gt;</operator><name pos:start="199:56" pos:end="199:63">cursor_w</name></name></expr></argument>, <argument pos:start="199:66" pos:end="199:67"><expr pos:start="199:66" pos:end="199:67"><literal type="number" pos:start="199:66" pos:end="199:67">32</literal></expr></argument>)</argument_list></call> <operator pos:start="199:70" pos:end="199:71">&gt;&gt;</operator> <literal type="number" pos:start="199:73" pos:end="199:73">3</literal><operator pos:start="199:74" pos:end="199:74">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="201:9" pos:end="217:9">for <control pos:start="201:13" pos:end="201:41">(<init pos:start="201:14" pos:end="201:19"><expr pos:start="201:14" pos:end="201:18"><name pos:start="201:14" pos:end="201:14">j</name> <operator pos:start="201:16" pos:end="201:16">=</operator> <literal type="number" pos:start="201:18" pos:end="201:18">0</literal></expr>;</init> <condition pos:start="201:21" pos:end="201:36"><expr pos:start="201:21" pos:end="201:35"><name pos:start="201:21" pos:end="201:21">j</name> <operator pos:start="201:23" pos:end="201:23">&lt;</operator> <name pos:start="201:25" pos:end="201:35"><name pos:start="201:25" pos:end="201:25">c</name><operator pos:start="201:26" pos:end="201:27">-&gt;</operator><name pos:start="201:28" pos:end="201:35">cursor_h</name></name></expr>;</condition> <incr pos:start="201:38" pos:end="201:40"><expr pos:start="201:38" pos:end="201:40"><name pos:start="201:38" pos:end="201:38">j</name><operator pos:start="201:39" pos:end="201:40">++</operator></expr></incr>)</control> <block pos:start="201:43" pos:end="217:9">{<block_content pos:start="203:13" pos:end="215:13">

            <for pos:start="203:13" pos:end="215:13">for <control pos:start="203:17" pos:end="203:45">(<init pos:start="203:18" pos:end="203:23"><expr pos:start="203:18" pos:end="203:22"><name pos:start="203:18" pos:end="203:18">i</name> <operator pos:start="203:20" pos:end="203:20">=</operator> <literal type="number" pos:start="203:22" pos:end="203:22">0</literal></expr>;</init> <condition pos:start="203:25" pos:end="203:40"><expr pos:start="203:25" pos:end="203:39"><name pos:start="203:25" pos:end="203:25">i</name> <operator pos:start="203:27" pos:end="203:27">&lt;</operator> <name pos:start="203:29" pos:end="203:39"><name pos:start="203:29" pos:end="203:29">c</name><operator pos:start="203:30" pos:end="203:31">-&gt;</operator><name pos:start="203:32" pos:end="203:39">cursor_w</name></name></expr>;</condition> <incr pos:start="203:42" pos:end="203:44"><expr pos:start="203:42" pos:end="203:44"><name pos:start="203:42" pos:end="203:42">i</name><operator pos:start="203:43" pos:end="203:44">++</operator></expr></incr>)</control> <block pos:start="203:47" pos:end="215:13">{<block_content pos:start="205:17" pos:end="213:35">

                <decl_stmt pos:start="205:17" pos:end="205:51"><decl pos:start="205:17" pos:end="205:50"><type pos:start="205:17" pos:end="205:19"><name pos:start="205:17" pos:end="205:19">int</name></type> <name pos:start="205:21" pos:end="205:23">val</name> <init pos:start="205:25" pos:end="205:50">= <expr pos:start="205:27" pos:end="205:50"><call pos:start="205:27" pos:end="205:50"><name pos:start="205:27" pos:end="205:46">bytestream2_get_be32</name><argument_list pos:start="205:47" pos:end="205:50">(<argument pos:start="205:48" pos:end="205:49"><expr pos:start="205:48" pos:end="205:49"><name pos:start="205:48" pos:end="205:49">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:35"><expr pos:start="207:17" pos:end="207:34"><operator pos:start="207:17" pos:end="207:17">*</operator><name pos:start="207:18" pos:end="207:20">dst</name><operator pos:start="207:21" pos:end="207:22">++</operator> <operator pos:start="207:24" pos:end="207:24">=</operator> <name pos:start="207:26" pos:end="207:28">val</name> <operator pos:start="207:30" pos:end="207:31">&gt;&gt;</operator>  <literal type="number" pos:start="207:34" pos:end="207:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:35"><expr pos:start="209:17" pos:end="209:34"><operator pos:start="209:17" pos:end="209:17">*</operator><name pos:start="209:18" pos:end="209:20">dst</name><operator pos:start="209:21" pos:end="209:22">++</operator> <operator pos:start="209:24" pos:end="209:24">=</operator> <name pos:start="209:26" pos:end="209:28">val</name> <operator pos:start="209:30" pos:end="209:31">&gt;&gt;</operator>  <literal type="number" pos:start="209:34" pos:end="209:34">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:35"><expr pos:start="211:17" pos:end="211:34"><operator pos:start="211:17" pos:end="211:17">*</operator><name pos:start="211:18" pos:end="211:20">dst</name><operator pos:start="211:21" pos:end="211:22">++</operator> <operator pos:start="211:24" pos:end="211:24">=</operator> <name pos:start="211:26" pos:end="211:28">val</name> <operator pos:start="211:30" pos:end="211:31">&gt;&gt;</operator> <literal type="number" pos:start="211:33" pos:end="211:34">16</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:35"><expr pos:start="213:17" pos:end="213:34"><operator pos:start="213:17" pos:end="213:17">*</operator><name pos:start="213:18" pos:end="213:20">dst</name><operator pos:start="213:21" pos:end="213:22">++</operator> <operator pos:start="213:24" pos:end="213:24">=</operator> <name pos:start="213:26" pos:end="213:28">val</name> <operator pos:start="213:30" pos:end="213:31">&gt;&gt;</operator> <literal type="number" pos:start="213:33" pos:end="213:34">24</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <break pos:start="219:9" pos:end="219:14">break;</break>

    <default pos:start="221:5" pos:end="221:12">default:</default>

        <return pos:start="223:9" pos:end="223:36">return <expr pos:start="223:16" pos:end="223:35"><name pos:start="223:16" pos:end="223:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></switch>

    <return pos:start="227:5" pos:end="227:13">return <expr pos:start="227:12" pos:end="227:12"><literal type="number" pos:start="227:12" pos:end="227:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
