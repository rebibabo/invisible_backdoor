<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12638.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">xen_init_display</name><parameter_list pos:start="1:22" pos:end="1:32">(<parameter pos:start="1:23" pos:end="1:31"><decl pos:start="1:23" pos:end="1:31"><type pos:start="1:23" pos:end="1:25"><name pos:start="1:23" pos:end="1:25">int</name></type> <name pos:start="1:27" pos:end="1:31">domid</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:28">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">XenDevice</name></name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">xfb</name></decl>, <decl pos:start="5:28" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:22"><modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:31">xin</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:16">XenFB</name></name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:20">fb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:19">XenInput</name></name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:23">in</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name> <init pos:start="11:11" pos:end="11:13">= <expr pos:start="11:13" pos:end="11:13"><literal type="number" pos:start="11:13" pos:end="11:13">0</literal></expr></init></decl>;</decl_stmt>



<label pos:start="15:1" pos:end="15:10"><name pos:start="15:1" pos:end="15:9">wait_more</name>:</label>

    <expr_stmt pos:start="17:5" pos:end="17:8"><expr pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:5">i</name><operator pos:start="17:6" pos:end="17:7">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:25"><expr pos:start="19:5" pos:end="19:24"><call pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:18">main_loop_wait</name><argument_list pos:start="19:19" pos:end="19:24">(<argument pos:start="19:20" pos:end="19:23"><expr pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:23">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:46"><expr pos:start="21:5" pos:end="21:45"><name pos:start="21:5" pos:end="21:7">xfb</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:45"><name pos:start="21:11" pos:end="21:28">xen_be_find_xendev</name><argument_list pos:start="21:29" pos:end="21:45">(<argument pos:start="21:30" pos:end="21:34"><expr pos:start="21:30" pos:end="21:34"><literal type="string" pos:start="21:30" pos:end="21:34">"vfb"</literal></expr></argument>, <argument pos:start="21:37" pos:end="21:41"><expr pos:start="21:37" pos:end="21:41"><name pos:start="21:37" pos:end="21:41">domid</name></expr></argument>, <argument pos:start="21:44" pos:end="21:44"><expr pos:start="21:44" pos:end="21:44"><literal type="number" pos:start="21:44" pos:end="21:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:47"><expr pos:start="23:5" pos:end="23:46"><name pos:start="23:5" pos:end="23:7">xin</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:46"><name pos:start="23:11" pos:end="23:28">xen_be_find_xendev</name><argument_list pos:start="23:29" pos:end="23:46">(<argument pos:start="23:30" pos:end="23:35"><expr pos:start="23:30" pos:end="23:35"><literal type="string" pos:start="23:30" pos:end="23:35">"vkbd"</literal></expr></argument>, <argument pos:start="23:38" pos:end="23:42"><expr pos:start="23:38" pos:end="23:42"><name pos:start="23:38" pos:end="23:42">domid</name></expr></argument>, <argument pos:start="23:45" pos:end="23:45"><expr pos:start="23:45" pos:end="23:45"><literal type="number" pos:start="23:45" pos:end="23:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="39:5"><if pos:start="25:5" pos:end="39:5">if <condition pos:start="25:8" pos:end="25:21">(<expr pos:start="25:9" pos:end="25:20"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:12">xfb</name> <operator pos:start="25:14" pos:end="25:15">||</operator> <operator pos:start="25:17" pos:end="25:17">!</operator><name pos:start="25:18" pos:end="25:20">xin</name></expr>)</condition> <block pos:start="25:23" pos:end="39:5">{<block_content pos:start="27:9" pos:end="37:15">

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:20">(<expr pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:13">i</name> <operator pos:start="27:15" pos:end="27:15">&lt;</operator> <literal type="number" pos:start="27:17" pos:end="27:19">256</literal></expr>)</condition> <block pos:start="27:22" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:27">

            <expr_stmt pos:start="29:13" pos:end="29:26"><expr pos:start="29:13" pos:end="29:25"><call pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:18">usleep</name><argument_list pos:start="29:19" pos:end="29:25">(<argument pos:start="29:20" pos:end="29:24"><expr pos:start="29:20" pos:end="29:24"><literal type="number" pos:start="29:20" pos:end="29:24">10000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="31:13" pos:end="31:27">goto <name pos:start="31:18" pos:end="31:26">wait_more</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:62"><expr pos:start="35:9" pos:end="35:61"><call pos:start="35:9" pos:end="35:61"><name pos:start="35:9" pos:end="35:21">xen_be_printf</name><argument_list pos:start="35:22" pos:end="35:61">(<argument pos:start="35:23" pos:end="35:26"><expr pos:start="35:23" pos:end="35:26"><name pos:start="35:23" pos:end="35:26">NULL</name></expr></argument>, <argument pos:start="35:29" pos:end="35:29"><expr pos:start="35:29" pos:end="35:29"><literal type="number" pos:start="35:29" pos:end="35:29">1</literal></expr></argument>, <argument pos:start="35:32" pos:end="35:60"><expr pos:start="35:32" pos:end="35:60"><literal type="string" pos:start="35:32" pos:end="35:60">"displaystate setup failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:13">/* vfb */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:51"><expr pos:start="45:5" pos:end="45:50"><name pos:start="45:5" pos:end="45:6">fb</name> <operator pos:start="45:8" pos:end="45:8">=</operator> <call pos:start="45:10" pos:end="45:50"><name pos:start="45:10" pos:end="45:21">container_of</name><argument_list pos:start="45:22" pos:end="45:50">(<argument pos:start="45:23" pos:end="45:25"><expr pos:start="45:23" pos:end="45:25"><name pos:start="45:23" pos:end="45:25">xfb</name></expr></argument>, <argument pos:start="45:28" pos:end="45:39"><expr pos:start="45:28" pos:end="45:39">struct <name pos:start="45:35" pos:end="45:39">XenFB</name></expr></argument>, <argument pos:start="45:42" pos:end="45:49"><expr pos:start="45:42" pos:end="45:49"><name pos:start="45:42" pos:end="45:49"><name pos:start="45:42" pos:end="45:42">c</name><operator pos:start="45:43" pos:end="45:43">.</operator><name pos:start="45:44" pos:end="45:49">xendev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="55:41"><expr pos:start="47:5" pos:end="55:40"><name pos:start="47:5" pos:end="47:13"><name pos:start="47:5" pos:end="47:6">fb</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:9">c</name><operator pos:start="47:10" pos:end="47:10">.</operator><name pos:start="47:11" pos:end="47:13">con</name></name> <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="55:40"><name pos:start="47:17" pos:end="47:36">graphic_console_init</name><argument_list pos:start="47:37" pos:end="55:40">(<argument pos:start="47:38" pos:end="47:49"><expr pos:start="47:38" pos:end="47:49"><name pos:start="47:38" pos:end="47:49">xenfb_update</name></expr></argument>,

                                     <argument pos:start="49:38" pos:end="49:53"><expr pos:start="49:38" pos:end="49:53"><name pos:start="49:38" pos:end="49:53">xenfb_invalidate</name></expr></argument>,

                                     <argument pos:start="51:38" pos:end="51:41"><expr pos:start="51:38" pos:end="51:41"><name pos:start="51:38" pos:end="51:41">NULL</name></expr></argument>,

                                     <argument pos:start="53:38" pos:end="53:41"><expr pos:start="53:38" pos:end="53:41"><name pos:start="53:38" pos:end="53:41">NULL</name></expr></argument>,

                                     <argument pos:start="55:38" pos:end="55:39"><expr pos:start="55:38" pos:end="55:39"><name pos:start="55:38" pos:end="55:39">fb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:25"><expr pos:start="57:5" pos:end="57:24"><name pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:6">fb</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:20">have_console</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <literal type="number" pos:start="57:24" pos:end="57:24">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:14">/* vkbd */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:54"><expr pos:start="63:5" pos:end="63:53"><name pos:start="63:5" pos:end="63:6">in</name> <operator pos:start="63:8" pos:end="63:8">=</operator> <call pos:start="63:10" pos:end="63:53"><name pos:start="63:10" pos:end="63:21">container_of</name><argument_list pos:start="63:22" pos:end="63:53">(<argument pos:start="63:23" pos:end="63:25"><expr pos:start="63:23" pos:end="63:25"><name pos:start="63:23" pos:end="63:25">xin</name></expr></argument>, <argument pos:start="63:28" pos:end="63:42"><expr pos:start="63:28" pos:end="63:42">struct <name pos:start="63:35" pos:end="63:42">XenInput</name></expr></argument>, <argument pos:start="63:45" pos:end="63:52"><expr pos:start="63:45" pos:end="63:52"><name pos:start="63:45" pos:end="63:52"><name pos:start="63:45" pos:end="63:45">c</name><operator pos:start="63:46" pos:end="63:46">.</operator><name pos:start="63:47" pos:end="63:52">xendev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:26"><expr pos:start="65:5" pos:end="65:25"><name pos:start="65:5" pos:end="65:13"><name pos:start="65:5" pos:end="65:6">in</name><operator pos:start="65:7" pos:end="65:8">-&gt;</operator><name pos:start="65:9" pos:end="65:9">c</name><operator pos:start="65:10" pos:end="65:10">.</operator><name pos:start="65:11" pos:end="65:13">con</name></name> <operator pos:start="65:15" pos:end="65:15">=</operator> <name pos:start="65:17" pos:end="65:25"><name pos:start="65:17" pos:end="65:18">fb</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:21">c</name><operator pos:start="65:22" pos:end="65:22">.</operator><name pos:start="65:23" pos:end="65:25">con</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:24">/* retry -&gt;init() */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:28"><expr pos:start="71:5" pos:end="71:27"><call pos:start="71:5" pos:end="71:27"><name pos:start="71:5" pos:end="71:22">xen_be_check_state</name><argument_list pos:start="71:23" pos:end="71:27">(<argument pos:start="71:24" pos:end="71:26"><expr pos:start="71:24" pos:end="71:26"><name pos:start="71:24" pos:end="71:26">xin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:28"><expr pos:start="73:5" pos:end="73:27"><call pos:start="73:5" pos:end="73:27"><name pos:start="73:5" pos:end="73:22">xen_be_check_state</name><argument_list pos:start="73:23" pos:end="73:27">(<argument pos:start="73:24" pos:end="73:26"><expr pos:start="73:24" pos:end="73:26"><name pos:start="73:24" pos:end="73:26">xfb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
