<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19038.c" pos:tabs="8"><function pos:start="1:1" pos:end="263:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">inline</specifier> <specifier pos:start="1:8" pos:end="1:13">static</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:33">hcscale</name>)<parameter_list pos:start="1:35" pos:end="9:49">(<parameter pos:start="1:36" pos:end="1:48"><decl pos:start="1:36" pos:end="1:48"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:45">SwsContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">c</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:58">uint16_t</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">dst</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:78"><decl pos:start="1:66" pos:end="1:78"><type pos:start="1:66" pos:end="1:78"><name pos:start="1:66" pos:end="1:69">long</name></type> <name pos:start="1:71" pos:end="1:78">dstWidth</name></decl></parameter>, <parameter pos:start="1:81" pos:end="1:99"><decl pos:start="1:81" pos:end="1:99"><type pos:start="1:81" pos:end="1:99"><specifier pos:start="1:81" pos:end="1:85">const</specifier> <name pos:start="1:87" pos:end="1:93">uint8_t</name> <modifier pos:start="1:95" pos:end="1:95">*</modifier></type><name pos:start="1:96" pos:end="1:99">src1</name></decl></parameter>, <parameter pos:start="1:102" pos:end="1:120"><decl pos:start="1:102" pos:end="1:120"><type pos:start="1:102" pos:end="1:120"><specifier pos:start="1:102" pos:end="1:106">const</specifier> <name pos:start="1:108" pos:end="1:114">uint8_t</name> <modifier pos:start="1:116" pos:end="1:116">*</modifier></type><name pos:start="1:117" pos:end="1:120">src2</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:43"><decl pos:start="3:36" pos:end="3:43"><type pos:start="3:36" pos:end="3:43"><name pos:start="3:36" pos:end="3:38">int</name></type> <name pos:start="3:40" pos:end="3:43">srcW</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:53"><decl pos:start="3:46" pos:end="3:53"><type pos:start="3:46" pos:end="3:53"><name pos:start="3:46" pos:end="3:48">int</name></type> <name pos:start="3:50" pos:end="3:53">xInc</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:64"><decl pos:start="3:56" pos:end="3:64"><type pos:start="3:56" pos:end="3:64"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:64">flags</name></decl></parameter>, <parameter pos:start="3:67" pos:end="3:91"><decl pos:start="3:67" pos:end="3:91"><type pos:start="3:67" pos:end="3:91"><specifier pos:start="3:67" pos:end="3:71">const</specifier> <name pos:start="3:73" pos:end="3:79">int16_t</name> <modifier pos:start="3:81" pos:end="3:81">*</modifier></type><name pos:start="3:82" pos:end="3:91">hChrFilter</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:63"><decl pos:start="5:36" pos:end="5:63"><type pos:start="5:36" pos:end="5:63"><specifier pos:start="5:36" pos:end="5:40">const</specifier> <name pos:start="5:42" pos:end="5:48">int16_t</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:63">hChrFilterPos</name></decl></parameter>, <parameter pos:start="5:66" pos:end="5:83"><decl pos:start="5:66" pos:end="5:83"><type pos:start="5:66" pos:end="5:83"><name pos:start="5:66" pos:end="5:68">int</name></type> <name pos:start="5:70" pos:end="5:83">hChrFilterSize</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:61"><decl pos:start="7:36" pos:end="7:61"><type pos:start="7:36" pos:end="7:61"><name pos:start="7:36" pos:end="7:51"><name pos:start="7:36" pos:end="7:39">enum</name> <name pos:start="7:41" pos:end="7:51">PixelFormat</name></name></type> <name pos:start="7:53" pos:end="7:61">srcFormat</name></decl></parameter>, <parameter pos:start="7:64" pos:end="7:88"><decl pos:start="7:64" pos:end="7:88"><type pos:start="7:64" pos:end="7:88"><name pos:start="7:64" pos:end="7:70">uint8_t</name> <modifier pos:start="7:72" pos:end="7:72">*</modifier></type><name pos:start="7:73" pos:end="7:88">formatConvBuffer</name></decl></parameter>,

                                   <parameter pos:start="9:36" pos:end="9:48"><decl pos:start="9:36" pos:end="9:48"><type pos:start="9:36" pos:end="9:48"><name pos:start="9:36" pos:end="9:43">uint32_t</name> <modifier pos:start="9:45" pos:end="9:45">*</modifier></type><name pos:start="9:46" pos:end="9:48">pal</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="263:1">{<block_content pos:start="13:5" pos:end="261:42">

    <decl_stmt pos:start="13:5" pos:end="13:59"><decl pos:start="13:5" pos:end="13:58"><type pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:11">int32_t</name> <name pos:start="13:13" pos:end="13:21">av_unused</name> <modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:36">mmx2FilterPos</name> <init pos:start="13:38" pos:end="13:58">= <expr pos:start="13:40" pos:end="13:58"><name pos:start="13:40" pos:end="13:58"><name pos:start="13:40" pos:end="13:40">c</name><operator pos:start="13:41" pos:end="13:42">-&gt;</operator><name pos:start="13:43" pos:end="13:58">chrMmx2FilterPos</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:56"><decl pos:start="15:5" pos:end="15:55"><type pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:11">int16_t</name> <name pos:start="15:13" pos:end="15:21">av_unused</name> <modifier pos:start="15:23" pos:end="15:23">*</modifier></type><name pos:start="15:24" pos:end="15:33">mmx2Filter</name>    <init pos:start="15:38" pos:end="15:55">= <expr pos:start="15:40" pos:end="15:55"><name pos:start="15:40" pos:end="15:55"><name pos:start="15:40" pos:end="15:40">c</name><operator pos:start="15:41" pos:end="15:42">-&gt;</operator><name pos:start="15:43" pos:end="15:55">chrMmx2Filter</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:56"><decl pos:start="17:5" pos:end="17:55"><type pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:7">int</name>     <name pos:start="17:13" pos:end="17:21">av_unused</name></type> <name pos:start="17:23" pos:end="17:35">canMMX2BeUsed</name>  <init pos:start="17:38" pos:end="17:55">= <expr pos:start="17:40" pos:end="17:55"><name pos:start="17:40" pos:end="17:55"><name pos:start="17:40" pos:end="17:40">c</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:55">canMMX2BeUsed</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:60"><decl pos:start="19:5" pos:end="19:59"><type pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:8">void</name>    <name pos:start="19:13" pos:end="19:21">av_unused</name> <modifier pos:start="19:23" pos:end="19:23">*</modifier></type><name pos:start="19:24" pos:end="19:37">mmx2FilterCode</name><init pos:start="19:38" pos:end="19:59">= <expr pos:start="19:40" pos:end="19:59"><name pos:start="19:40" pos:end="19:59"><name pos:start="19:40" pos:end="19:40">c</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:59">chrMmx2FilterCode</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:15"><if pos:start="23:5" pos:end="25:15">if <condition pos:start="23:8" pos:end="23:90">(<expr pos:start="23:9" pos:end="23:89"><call pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:14">isGray</name><argument_list pos:start="23:15" pos:end="23:25">(<argument pos:start="23:16" pos:end="23:24"><expr pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:24">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="23:27" pos:end="23:28">||</operator> <name pos:start="23:30" pos:end="23:38">srcFormat</name><operator pos:start="23:39" pos:end="23:40">==</operator><name pos:start="23:41" pos:end="23:57">PIX_FMT_MONOBLACK</name> <operator pos:start="23:59" pos:end="23:60">||</operator> <name pos:start="23:62" pos:end="23:70">srcFormat</name><operator pos:start="23:71" pos:end="23:72">==</operator><name pos:start="23:73" pos:end="23:89">PIX_FMT_MONOWHITE</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:15"><block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:8">src1</name> <operator pos:start="29:10" pos:end="29:11">+=</operator> <name pos:start="29:13" pos:end="29:27"><name pos:start="29:13" pos:end="29:13">c</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:27">chrSrcOffset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:28"><expr pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:8">src2</name> <operator pos:start="31:10" pos:end="31:11">+=</operator> <name pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:13">c</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:27">chrSrcOffset</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:28">(<expr pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:9">c</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:27">hcscale_internal</name></name></expr>)</condition> <block pos:start="35:30" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:36">

        <expr_stmt pos:start="37:9" pos:end="37:92"><expr pos:start="37:9" pos:end="37:91"><call pos:start="37:9" pos:end="37:91"><name pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:9">c</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:27">hcscale_internal</name></name><argument_list pos:start="37:28" pos:end="37:91">(<argument pos:start="37:29" pos:end="37:44"><expr pos:start="37:29" pos:end="37:44"><name pos:start="37:29" pos:end="37:44">formatConvBuffer</name></expr></argument>, <argument pos:start="37:47" pos:end="37:67"><expr pos:start="37:47" pos:end="37:67"><name pos:start="37:47" pos:end="37:62">formatConvBuffer</name><operator pos:start="37:63" pos:end="37:63">+</operator><name pos:start="37:64" pos:end="37:67">VOFW</name></expr></argument>, <argument pos:start="37:70" pos:end="37:73"><expr pos:start="37:70" pos:end="37:73"><name pos:start="37:70" pos:end="37:73">src1</name></expr></argument>, <argument pos:start="37:76" pos:end="37:79"><expr pos:start="37:76" pos:end="37:79"><name pos:start="37:76" pos:end="37:79">src2</name></expr></argument>, <argument pos:start="37:82" pos:end="37:85"><expr pos:start="37:82" pos:end="37:85"><name pos:start="37:82" pos:end="37:85">srcW</name></expr></argument>, <argument pos:start="37:88" pos:end="37:90"><expr pos:start="37:88" pos:end="37:90"><name pos:start="37:88" pos:end="37:90">pal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:31"><expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:12">src1</name><operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:30">formatConvBuffer</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:36"><expr pos:start="41:9" pos:end="41:35"><name pos:start="41:9" pos:end="41:12">src2</name><operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:30">formatConvBuffer</name><operator pos:start="41:31" pos:end="41:31">+</operator><name pos:start="41:32" pos:end="41:35">VOFW</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="255:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:25">(<expr pos:start="47:9" pos:end="47:24"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:24"><name pos:start="47:10" pos:end="47:10">c</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:24">hcscale_fast</name></name></expr>)</condition>

    <block pos:start="49:5" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:99">

        <expr_stmt pos:start="51:9" pos:end="51:99"><expr pos:start="51:9" pos:end="51:98"><call pos:start="51:9" pos:end="51:98"><name pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:9">c</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:17">hScale</name></name><argument_list pos:start="51:18" pos:end="51:98">(<argument pos:start="51:19" pos:end="51:21"><expr pos:start="51:19" pos:end="51:21"><name pos:start="51:19" pos:end="51:21">dst</name></expr></argument>     , <argument pos:start="51:29" pos:end="51:36"><expr pos:start="51:29" pos:end="51:36"><name pos:start="51:29" pos:end="51:36">dstWidth</name></expr></argument>, <argument pos:start="51:39" pos:end="51:42"><expr pos:start="51:39" pos:end="51:42"><name pos:start="51:39" pos:end="51:42">src1</name></expr></argument>, <argument pos:start="51:45" pos:end="51:48"><expr pos:start="51:45" pos:end="51:48"><name pos:start="51:45" pos:end="51:48">srcW</name></expr></argument>, <argument pos:start="51:51" pos:end="51:54"><expr pos:start="51:51" pos:end="51:54"><name pos:start="51:51" pos:end="51:54">xInc</name></expr></argument>, <argument pos:start="51:57" pos:end="51:66"><expr pos:start="51:57" pos:end="51:66"><name pos:start="51:57" pos:end="51:66">hChrFilter</name></expr></argument>, <argument pos:start="51:69" pos:end="51:81"><expr pos:start="51:69" pos:end="51:81"><name pos:start="51:69" pos:end="51:81">hChrFilterPos</name></expr></argument>, <argument pos:start="51:84" pos:end="51:97"><expr pos:start="51:84" pos:end="51:97"><name pos:start="51:84" pos:end="51:97">hChrFilterSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:99"><expr pos:start="53:9" pos:end="53:98"><call pos:start="53:9" pos:end="53:98"><name pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:9">c</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:17">hScale</name></name><argument_list pos:start="53:18" pos:end="53:98">(<argument pos:start="53:19" pos:end="53:26"><expr pos:start="53:19" pos:end="53:26"><name pos:start="53:19" pos:end="53:21">dst</name><operator pos:start="53:22" pos:end="53:22">+</operator><name pos:start="53:23" pos:end="53:26">VOFW</name></expr></argument>, <argument pos:start="53:29" pos:end="53:36"><expr pos:start="53:29" pos:end="53:36"><name pos:start="53:29" pos:end="53:36">dstWidth</name></expr></argument>, <argument pos:start="53:39" pos:end="53:42"><expr pos:start="53:39" pos:end="53:42"><name pos:start="53:39" pos:end="53:42">src2</name></expr></argument>, <argument pos:start="53:45" pos:end="53:48"><expr pos:start="53:45" pos:end="53:48"><name pos:start="53:45" pos:end="53:48">srcW</name></expr></argument>, <argument pos:start="53:51" pos:end="53:54"><expr pos:start="53:51" pos:end="53:54"><name pos:start="53:51" pos:end="53:54">xInc</name></expr></argument>, <argument pos:start="53:57" pos:end="53:66"><expr pos:start="53:57" pos:end="53:66"><name pos:start="53:57" pos:end="53:66">hChrFilter</name></expr></argument>, <argument pos:start="53:69" pos:end="53:81"><expr pos:start="53:69" pos:end="53:81"><name pos:start="53:69" pos:end="53:81">hChrFilterPos</name></expr></argument>, <argument pos:start="53:84" pos:end="53:97"><expr pos:start="53:84" pos:end="53:97"><name pos:start="53:84" pos:end="53:97">hChrFilterSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="255:5">else <block pos:start="55:12" pos:end="255:5">{<block_content pos:start="61:9" pos:end="254:0"> <comment type="line" pos:start="55:14" pos:end="55:54">// fast bilinear upscale / crap downscale</comment>

<cpp:if pos:start="57:1" pos:end="57:26">#<cpp:directive pos:start="57:2" pos:end="57:3">if</cpp:directive> <expr pos:start="57:5" pos:end="57:26"><name pos:start="57:5" pos:end="57:12">ARCH_X86</name> <operator pos:start="57:14" pos:end="57:15">&amp;&amp;</operator> <name pos:start="57:17" pos:end="57:26">CONFIG_GPL</name></expr></cpp:if>

<cpp:if pos:start="59:1" pos:end="59:25">#<cpp:directive pos:start="59:2" pos:end="59:3">if</cpp:directive> <expr pos:start="59:5" pos:end="59:25"><name pos:start="59:5" pos:end="59:25">COMPILE_TEMPLATE_MMX2</name></expr></cpp:if>

        <decl_stmt pos:start="61:9" pos:end="64:0"><decl pos:start="61:9" pos:end="61:13"><type pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">int</name></type> <name pos:start="61:13" pos:end="61:13">i</name></decl>;</decl_stmt>

<cpp:if pos:start="63:1" pos:end="63:16">#<cpp:directive pos:start="63:2" pos:end="63:3">if</cpp:directive> <expr pos:start="63:5" pos:end="63:16"><call pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:11">defined</name><argument_list pos:start="63:12" pos:end="63:16">(<argument pos:start="63:13" pos:end="63:15"><expr pos:start="63:13" pos:end="63:15"><name pos:start="63:13" pos:end="63:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="65:9" pos:end="68:0"><expr pos:start="65:9" pos:end="65:45"><call pos:start="65:9" pos:end="65:45"><name pos:start="65:9" pos:end="65:23">DECLARE_ALIGNED</name><argument_list pos:start="65:24" pos:end="65:45">(<argument pos:start="65:25" pos:end="65:25"><expr pos:start="65:25" pos:end="65:25"><literal type="number" pos:start="65:25" pos:end="65:25">8</literal></expr></argument>, <argument pos:start="65:28" pos:end="65:35"><expr pos:start="65:28" pos:end="65:35"><name pos:start="65:28" pos:end="65:35">uint64_t</name></expr></argument>, <argument pos:start="65:38" pos:end="65:44"><expr pos:start="65:38" pos:end="65:44"><name pos:start="65:38" pos:end="65:44">ebxsave</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="67:1" pos:end="67:6">#<cpp:directive pos:start="67:2" pos:end="67:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="69:9" pos:end="250:0"><if pos:start="69:9" pos:end="169:9">if <condition pos:start="69:12" pos:end="69:26">(<expr pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:25">canMMX2BeUsed</name></expr>)</condition> <block pos:start="69:28" pos:end="169:9">{<block_content pos:start="71:13" pos:end="167:13">

            <asm pos:start="71:13" pos:end="157:14">__asm__ <specifier pos:start="71:21" pos:end="71:28">volatile</specifier>(

<cpp:if pos:start="73:1" pos:end="73:16">#<cpp:directive pos:start="73:2" pos:end="73:3">if</cpp:directive> <expr pos:start="73:5" pos:end="73:16"><call pos:start="73:5" pos:end="73:16"><name pos:start="73:5" pos:end="73:11">defined</name><argument_list pos:start="73:12" pos:end="73:16">(<argument pos:start="73:13" pos:end="73:15"><expr pos:start="73:13" pos:end="73:15"><name pos:start="73:13" pos:end="73:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

                "mov          %%"REG_b", %6         \n\t"

<cpp:endif pos:start="77:1" pos:end="77:6">#<cpp:directive pos:start="77:2" pos:end="77:6">endif</cpp:directive></cpp:endif>

                "pxor             %%mm7, %%mm7      \n\t"

                "mov                 %0, %%"REG_c"  \n\t"

                "mov                 %1, %%"REG_D"  \n\t"

                "mov                 %2, %%"REG_d"  \n\t"

                "mov                 %3, %%"REG_b"  \n\t"

                "xor          %%"REG_a", %%"REG_a"  \n\t" <comment type="line" pos:start="89:59" pos:end="89:62">// i</comment>

                PREFETCH"   (%%"REG_c")             \n\t"

                PREFETCH" 32(%%"REG_c")             \n\t"

                PREFETCH" 64(%%"REG_c")             \n\t"



                CALL_MMX2_FILTER_CODE

                CALL_MMX2_FILTER_CODE

                CALL_MMX2_FILTER_CODE

                CALL_MMX2_FILTER_CODE

                "xor          %%"REG_a", %%"REG_a"  \n\t" <comment type="line" pos:start="107:59" pos:end="107:62">// i</comment>

                "mov                 %5, %%"REG_c"  \n\t" <comment type="line" pos:start="109:59" pos:end="109:64">// src</comment>

                "mov                 %1, %%"REG_D"  \n\t" <comment type="line" pos:start="111:59" pos:end="111:65">// buf1</comment>

                "add              $"AV_STRINGIFY(VOF)", %%"REG_D"  \n\t"

                PREFETCH"   (%%"REG_c")             \n\t"

                PREFETCH" 32(%%"REG_c")             \n\t"

                PREFETCH" 64(%%"REG_c")             \n\t"



                CALL_MMX2_FILTER_CODE

                CALL_MMX2_FILTER_CODE

                CALL_MMX2_FILTER_CODE

                CALL_MMX2_FILTER_CODE



<cpp:if pos:start="133:1" pos:end="133:16">#<cpp:directive pos:start="133:2" pos:end="133:3">if</cpp:directive> <expr pos:start="133:5" pos:end="133:16"><call pos:start="133:5" pos:end="133:16"><name pos:start="133:5" pos:end="133:11">defined</name><argument_list pos:start="133:12" pos:end="133:16">(<argument pos:start="133:13" pos:end="133:15"><expr pos:start="133:13" pos:end="133:15"><name pos:start="133:13" pos:end="133:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

                "mov %6, %%"REG_b"    \n\t"

<cpp:endif pos:start="137:1" pos:end="137:6">#<cpp:directive pos:start="137:2" pos:end="137:6">endif</cpp:directive></cpp:endif>

                :: "m" (src1), "m" (dst), "m" (mmx2Filter), "m" (mmx2FilterPos),

                "m" (mmx2FilterCode), "m" (src2)

<cpp:if pos:start="143:1" pos:end="143:16">#<cpp:directive pos:start="143:2" pos:end="143:3">if</cpp:directive> <expr pos:start="143:5" pos:end="143:16"><call pos:start="143:5" pos:end="143:16"><name pos:start="143:5" pos:end="143:11">defined</name><argument_list pos:start="143:12" pos:end="143:16">(<argument pos:start="143:13" pos:end="143:15"><expr pos:start="143:13" pos:end="143:15"><name pos:start="143:13" pos:end="143:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

                ,"m" (ebxsave)

<cpp:endif pos:start="147:1" pos:end="147:6">#<cpp:directive pos:start="147:2" pos:end="147:6">endif</cpp:directive></cpp:endif>

                : "%"REG_a, "%"REG_c, "%"REG_d, "%"REG_S, "%"REG_D

<cpp:if pos:start="151:1" pos:end="151:17">#<cpp:directive pos:start="151:2" pos:end="151:3">if</cpp:directive> <expr pos:start="151:5" pos:end="151:17"><operator pos:start="151:5" pos:end="151:5">!</operator><call pos:start="151:6" pos:end="151:17"><name pos:start="151:6" pos:end="151:12">defined</name><argument_list pos:start="151:13" pos:end="151:17">(<argument pos:start="151:14" pos:end="151:16"><expr pos:start="151:14" pos:end="151:16"><name pos:start="151:14" pos:end="151:16">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

                ,"%"REG_b

<cpp:endif pos:start="155:1" pos:end="155:6">#<cpp:directive pos:start="155:2" pos:end="155:6">endif</cpp:directive></cpp:endif>

            );</asm>

            <for pos:start="159:13" pos:end="167:13">for <control pos:start="159:17" pos:end="159:58">(<init pos:start="159:18" pos:end="159:30"><expr pos:start="159:18" pos:end="159:29"><name pos:start="159:18" pos:end="159:18">i</name><operator pos:start="159:19" pos:end="159:19">=</operator><name pos:start="159:20" pos:end="159:27">dstWidth</name><operator pos:start="159:28" pos:end="159:28">-</operator><literal type="number" pos:start="159:29" pos:end="159:29">1</literal></expr>;</init> <condition pos:start="159:32" pos:end="159:53"><expr pos:start="159:32" pos:end="159:52"><operator pos:start="159:32" pos:end="159:32">(</operator><name pos:start="159:33" pos:end="159:33">i</name><operator pos:start="159:34" pos:end="159:34">*</operator><name pos:start="159:35" pos:end="159:38">xInc</name><operator pos:start="159:39" pos:end="159:39">)</operator><operator pos:start="159:40" pos:end="159:41">&gt;&gt;</operator><literal type="number" pos:start="159:42" pos:end="159:43">16</literal> <operator pos:start="159:45" pos:end="159:46">&gt;=</operator><name pos:start="159:47" pos:end="159:50">srcW</name><operator pos:start="159:51" pos:end="159:51">-</operator><literal type="number" pos:start="159:52" pos:end="159:52">1</literal></expr>;</condition> <incr pos:start="159:55" pos:end="159:57"><expr pos:start="159:55" pos:end="159:57"><name pos:start="159:55" pos:end="159:55">i</name><operator pos:start="159:56" pos:end="159:57">--</operator></expr></incr>)</control> <block pos:start="159:60" pos:end="167:13">{<block_content pos:start="163:17" pos:end="165:47">

                <comment type="line" pos:start="161:17" pos:end="161:58">//printf("%d %d %d\n", dstWidth, i, srcW);</comment>

                <expr_stmt pos:start="163:17" pos:end="163:42"><expr pos:start="163:17" pos:end="163:41"><name pos:start="163:17" pos:end="163:22"><name pos:start="163:17" pos:end="163:19">dst</name><index pos:start="163:20" pos:end="163:22">[<expr pos:start="163:21" pos:end="163:21"><name pos:start="163:21" pos:end="163:21">i</name></expr>]</index></name> <operator pos:start="163:24" pos:end="163:24">=</operator> <name pos:start="163:26" pos:end="163:37"><name pos:start="163:26" pos:end="163:29">src1</name><index pos:start="163:30" pos:end="163:37">[<expr pos:start="163:31" pos:end="163:36"><name pos:start="163:31" pos:end="163:34">srcW</name><operator pos:start="163:35" pos:end="163:35">-</operator><literal type="number" pos:start="163:36" pos:end="163:36">1</literal></expr>]</index></name><operator pos:start="163:38" pos:end="163:38">*</operator><literal type="number" pos:start="163:39" pos:end="163:41">128</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:47"><expr pos:start="165:17" pos:end="165:46"><name pos:start="165:17" pos:end="165:27"><name pos:start="165:17" pos:end="165:19">dst</name><index pos:start="165:20" pos:end="165:27">[<expr pos:start="165:21" pos:end="165:26"><name pos:start="165:21" pos:end="165:21">i</name><operator pos:start="165:22" pos:end="165:22">+</operator><name pos:start="165:23" pos:end="165:26">VOFW</name></expr>]</index></name> <operator pos:start="165:29" pos:end="165:29">=</operator> <name pos:start="165:31" pos:end="165:42"><name pos:start="165:31" pos:end="165:34">src2</name><index pos:start="165:35" pos:end="165:42">[<expr pos:start="165:36" pos:end="165:41"><name pos:start="165:36" pos:end="165:39">srcW</name><operator pos:start="165:40" pos:end="165:40">-</operator><literal type="number" pos:start="165:41" pos:end="165:41">1</literal></expr>]</index></name><operator pos:start="165:43" pos:end="165:43">*</operator><literal type="number" pos:start="165:44" pos:end="165:46">128</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="169:11" pos:end="250:0">else <block pos:start="169:16" pos:end="250:0">{<block_content pos:start="173:13" pos:end="244:0">

<cpp:endif pos:start="171:1" pos:end="171:6">#<cpp:directive pos:start="171:2" pos:end="171:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="171:8" pos:end="171:34">/* COMPILE_TEMPLATE_MMX2 */</comment>

            <decl_stmt pos:start="173:13" pos:end="173:56"><decl pos:start="173:13" pos:end="173:55"><type pos:start="173:13" pos:end="173:19"><name pos:start="173:13" pos:end="173:19">x86_reg</name></type> <name pos:start="173:21" pos:end="173:30">xInc_shr16</name> <init pos:start="173:32" pos:end="173:55">= <expr pos:start="173:34" pos:end="173:55"><operator pos:start="173:34" pos:end="173:34">(</operator><name pos:start="173:35" pos:end="173:41">x86_reg</name><operator pos:start="173:42" pos:end="173:42">)</operator> <operator pos:start="173:44" pos:end="173:44">(</operator><name pos:start="173:45" pos:end="173:48">xInc</name> <operator pos:start="173:50" pos:end="173:51">&gt;&gt;</operator> <literal type="number" pos:start="173:53" pos:end="173:54">16</literal><operator pos:start="173:55" pos:end="173:55">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="175:13" pos:end="175:47"><decl pos:start="175:13" pos:end="175:46"><type pos:start="175:13" pos:end="175:20"><name pos:start="175:13" pos:end="175:20">uint16_t</name></type> <name pos:start="175:22" pos:end="175:30">xInc_mask</name> <init pos:start="175:32" pos:end="175:46">= <expr pos:start="175:34" pos:end="175:46"><name pos:start="175:34" pos:end="175:37">xInc</name> <operator pos:start="175:39" pos:end="175:39">&amp;</operator> <literal type="number" pos:start="175:41" pos:end="175:46">0xffff</literal></expr></init></decl>;</decl_stmt>

            <asm pos:start="177:13" pos:end="244:0">__asm__ <specifier pos:start="177:21" pos:end="177:28">volatile</specifier>(

                "xor %%"REG_a", %%"REG_a"               \n\t" <comment type="line" pos:start="179:63" pos:end="179:66">// i</comment>

                "xor %%"REG_d", %%"REG_d"               \n\t" <comment type="line" pos:start="181:63" pos:end="181:67">// xx</comment>

                "xorl    %%ecx, %%ecx                   \n\t" <comment type="line" pos:start="183:63" pos:end="183:71">// xalpha</comment>

                ASMALIGN(4)

                "1:                                     \n\t"

                "mov        %0, %%"REG_S"               \n\t"

                "movzbl  (%%"REG_S", %%"REG_d"), %%edi  \n\t" <comment type="line" pos:start="191:63" pos:end="191:71">//src[xx]</comment>

                "movzbl 1(%%"REG_S", %%"REG_d"), %%esi  \n\t" <comment type="line" pos:start="193:63" pos:end="193:73">//src[xx+1]</comment>

                FAST_BILINEAR_X86

                "movw     %%si, (%%"REG_D", %%"REG_a", 2)   \n\t"



                "movzbl    (%5, %%"REG_d"), %%edi       \n\t" <comment type="line" pos:start="201:63" pos:end="201:71">//src[xx]</comment>

                "movzbl   1(%5, %%"REG_d"), %%esi       \n\t" <comment type="line" pos:start="203:63" pos:end="203:73">//src[xx+1]</comment>

                FAST_BILINEAR_X86

                "movw     %%si, "AV_STRINGIFY(VOF)"(%%"REG_D", %%"REG_a", 2)   \n\t"



                "addw       %4, %%cx                    \n\t" <comment type="line" pos:start="211:63" pos:end="211:85">//xalpha += xInc&amp;0xFFFF</comment>

                "adc        %3, %%"REG_d"               \n\t" <comment type="line" pos:start="213:63" pos:end="213:85">//xx+= xInc&gt;&gt;16 + carry</comment>

                "add        $1, %%"REG_a"               \n\t"

                "cmp        %2, %%"REG_a"               \n\t"

                " jb        1b                          \n\t"



<comment type="block" pos:start="223:1" pos:end="225:41">/* GCC 3.3 makes MPlayer crash on IA-32 machines when using "g" operand here,

   which is needed to support GCC 4.0. */</comment>

<cpp:if pos:start="227:1" pos:end="227:47">#<cpp:directive pos:start="227:2" pos:end="227:3">if</cpp:directive> <expr pos:start="227:5" pos:end="227:47"><name pos:start="227:5" pos:end="227:15">ARCH_X86_64</name> <operator pos:start="227:17" pos:end="227:18">&amp;&amp;</operator> <call pos:start="227:20" pos:end="227:47"><name pos:start="227:20" pos:end="227:42">AV_GCC_VERSION_AT_LEAST</name><argument_list pos:start="227:43" pos:end="227:47">(<argument pos:start="227:44" pos:end="227:46"><expr pos:start="227:44" pos:end="227:46"><literal type="number" pos:start="227:44" pos:end="227:44">3</literal><operator pos:start="227:45" pos:end="227:45">,</operator><literal type="number" pos:start="227:46" pos:end="227:46">4</literal></expr></argument>)</argument_list></call></expr></cpp:if>

                :: "m" (src1), "m" (dst), "g" (dstWidth), "m" (xInc_shr16), "m" (xInc_mask),

<cpp:else pos:start="231:1" pos:end="231:5">#<cpp:directive pos:start="231:2" pos:end="231:5">else</cpp:directive></cpp:else>

                :: "m" (src1), "m" (dst), "m" (dstWidth), "m" (xInc_shr16), "m" (xInc_mask),

<cpp:endif pos:start="235:1" pos:end="235:6">#<cpp:directive pos:start="235:2" pos:end="235:6">endif</cpp:directive></cpp:endif>

                "r" (src2)

                : "%"REG_a, "%"REG_d, "%ecx", "%"REG_D, "%esi"

            );</asm>

<cpp:if pos:start="243:1" pos:end="243:25">#<cpp:directive pos:start="243:2" pos:end="243:3">if</cpp:directive> <expr pos:start="243:5" pos:end="243:25"><name pos:start="243:5" pos:end="243:25">COMPILE_TEMPLATE_MMX2</name></expr></cpp:if>

        </block_content>}</block></else></if_stmt> <comment type="line" pos:start="245:11" pos:end="245:33">//if MMX2 can't be used</comment>

<cpp:endif pos:start="247:1" pos:end="247:6">#<cpp:directive pos:start="247:2" pos:end="247:6">endif</cpp:directive></cpp:endif>

<cpp:else pos:start="249:1" pos:end="249:5">#<cpp:directive pos:start="249:2" pos:end="249:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="251:9" pos:end="254:0"><expr pos:start="251:9" pos:end="251:65"><call pos:start="251:9" pos:end="251:65"><name pos:start="251:9" pos:end="251:23"><name pos:start="251:9" pos:end="251:9">c</name><operator pos:start="251:10" pos:end="251:11">-&gt;</operator><name pos:start="251:12" pos:end="251:23">hcscale_fast</name></name><argument_list pos:start="251:24" pos:end="251:65">(<argument pos:start="251:25" pos:end="251:25"><expr pos:start="251:25" pos:end="251:25"><name pos:start="251:25" pos:end="251:25">c</name></expr></argument>, <argument pos:start="251:28" pos:end="251:30"><expr pos:start="251:28" pos:end="251:30"><name pos:start="251:28" pos:end="251:30">dst</name></expr></argument>, <argument pos:start="251:33" pos:end="251:40"><expr pos:start="251:33" pos:end="251:40"><name pos:start="251:33" pos:end="251:40">dstWidth</name></expr></argument>, <argument pos:start="251:43" pos:end="251:46"><expr pos:start="251:43" pos:end="251:46"><name pos:start="251:43" pos:end="251:46">src1</name></expr></argument>, <argument pos:start="251:49" pos:end="251:52"><expr pos:start="251:49" pos:end="251:52"><name pos:start="251:49" pos:end="251:52">src2</name></expr></argument>, <argument pos:start="251:55" pos:end="251:58"><expr pos:start="251:55" pos:end="251:58"><name pos:start="251:55" pos:end="251:58">srcW</name></expr></argument>, <argument pos:start="251:61" pos:end="251:64"><expr pos:start="251:61" pos:end="251:64"><name pos:start="251:61" pos:end="251:64">xInc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="253:1" pos:end="253:6">#<cpp:directive pos:start="253:2" pos:end="253:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="253:8" pos:end="253:21">/* ARCH_X86 */</comment>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="259:5" pos:end="261:42"><if pos:start="259:5" pos:end="261:42">if <condition pos:start="259:8" pos:end="259:27">(<expr pos:start="259:9" pos:end="259:26"><name pos:start="259:9" pos:end="259:26"><name pos:start="259:9" pos:end="259:9">c</name><operator pos:start="259:10" pos:end="259:11">-&gt;</operator><name pos:start="259:12" pos:end="259:26">chrConvertRange</name></name></expr>)</condition><block type="pseudo" pos:start="261:9" pos:end="261:42"><block_content pos:start="261:9" pos:end="261:42">

        <expr_stmt pos:start="261:9" pos:end="261:42"><expr pos:start="261:9" pos:end="261:41"><call pos:start="261:9" pos:end="261:41"><name pos:start="261:9" pos:end="261:26"><name pos:start="261:9" pos:end="261:9">c</name><operator pos:start="261:10" pos:end="261:11">-&gt;</operator><name pos:start="261:12" pos:end="261:26">chrConvertRange</name></name><argument_list pos:start="261:27" pos:end="261:41">(<argument pos:start="261:28" pos:end="261:30"><expr pos:start="261:28" pos:end="261:30"><name pos:start="261:28" pos:end="261:30">dst</name></expr></argument>, <argument pos:start="261:33" pos:end="261:40"><expr pos:start="261:33" pos:end="261:40"><name pos:start="261:33" pos:end="261:40">dstWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
