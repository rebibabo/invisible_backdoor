<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26879.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">vtd_init</name><parameter_list pos:start="1:21" pos:end="1:40">(<parameter pos:start="1:22" pos:end="1:39"><decl pos:start="1:22" pos:end="1:39"><type pos:start="1:22" pos:end="1:38"><name pos:start="1:22" pos:end="1:36">IntelIOMMUState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="143:1">{<block_content pos:start="5:5" pos:end="141:71">

    <expr_stmt pos:start="5:5" pos:end="5:37"><expr pos:start="5:5" pos:end="5:36"><call pos:start="5:5" pos:end="5:36"><name pos:start="5:5" pos:end="5:10">memset</name><argument_list pos:start="5:11" pos:end="5:36">(<argument pos:start="5:12" pos:end="5:17"><expr pos:start="5:12" pos:end="5:17"><name pos:start="5:12" pos:end="5:17"><name pos:start="5:12" pos:end="5:12">s</name><operator pos:start="5:13" pos:end="5:14">-&gt;</operator><name pos:start="5:15" pos:end="5:17">csr</name></name></expr></argument>, <argument pos:start="5:20" pos:end="5:20"><expr pos:start="5:20" pos:end="5:20"><literal type="number" pos:start="5:20" pos:end="5:20">0</literal></expr></argument>, <argument pos:start="5:23" pos:end="5:35"><expr pos:start="5:23" pos:end="5:35"><name pos:start="5:23" pos:end="5:35">DMAR_REG_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:39"><expr pos:start="7:5" pos:end="7:38"><call pos:start="7:5" pos:end="7:38"><name pos:start="7:5" pos:end="7:10">memset</name><argument_list pos:start="7:11" pos:end="7:38">(<argument pos:start="7:12" pos:end="7:19"><expr pos:start="7:12" pos:end="7:19"><name pos:start="7:12" pos:end="7:19"><name pos:start="7:12" pos:end="7:12">s</name><operator pos:start="7:13" pos:end="7:14">-&gt;</operator><name pos:start="7:15" pos:end="7:19">wmask</name></name></expr></argument>, <argument pos:start="7:22" pos:end="7:22"><expr pos:start="7:22" pos:end="7:22"><literal type="number" pos:start="7:22" pos:end="7:22">0</literal></expr></argument>, <argument pos:start="7:25" pos:end="7:37"><expr pos:start="7:25" pos:end="7:37"><name pos:start="7:25" pos:end="7:37">DMAR_REG_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:41"><expr pos:start="9:5" pos:end="9:40"><call pos:start="9:5" pos:end="9:40"><name pos:start="9:5" pos:end="9:10">memset</name><argument_list pos:start="9:11" pos:end="9:40">(<argument pos:start="9:12" pos:end="9:21"><expr pos:start="9:12" pos:end="9:21"><name pos:start="9:12" pos:end="9:21"><name pos:start="9:12" pos:end="9:12">s</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:21">w1cmask</name></name></expr></argument>, <argument pos:start="9:24" pos:end="9:24"><expr pos:start="9:24" pos:end="9:24"><literal type="number" pos:start="9:24" pos:end="9:24">0</literal></expr></argument>, <argument pos:start="9:27" pos:end="9:39"><expr pos:start="9:27" pos:end="9:39"><name pos:start="9:27" pos:end="9:39">DMAR_REG_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:40"><expr pos:start="11:5" pos:end="11:39"><call pos:start="11:5" pos:end="11:39"><name pos:start="11:5" pos:end="11:10">memset</name><argument_list pos:start="11:11" pos:end="11:39">(<argument pos:start="11:12" pos:end="11:20"><expr pos:start="11:12" pos:end="11:20"><name pos:start="11:12" pos:end="11:20"><name pos:start="11:12" pos:end="11:12">s</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:20">womask</name></name></expr></argument>, <argument pos:start="11:23" pos:end="11:23"><expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">0</literal></expr></argument>, <argument pos:start="11:26" pos:end="11:38"><expr pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:38">DMAR_REG_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:49"><expr pos:start="15:5" pos:end="15:48"><name pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:16">iommu_ops</name><operator pos:start="15:17" pos:end="15:17">.</operator><name pos:start="15:18" pos:end="15:26">translate</name></name> <operator pos:start="15:28" pos:end="15:28">=</operator> <name pos:start="15:30" pos:end="15:48">vtd_iommu_translate</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:16"><expr pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:11">root</name></name> <operator pos:start="17:13" pos:end="17:13">=</operator> <literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:20">root_extended</name></name> <operator pos:start="19:22" pos:end="19:22">=</operator> <name pos:start="19:24" pos:end="19:28">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:28"><expr pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:19">dmar_enabled</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:27">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:14">iq_head</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:14">iq_tail</name></name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:14"><expr pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:9"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:9">iq</name></name> <operator pos:start="27:11" pos:end="27:11">=</operator> <literal type="number" pos:start="27:13" pos:end="27:13">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:19"><expr pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:14">iq_size</name></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:26"><expr pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:17">qi_enabled</name></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:25">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:45"><expr pos:start="33:5" pos:end="33:44"><name pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:24">iq_last_desc_type</name></name> <operator pos:start="33:26" pos:end="33:26">=</operator> <name pos:start="33:28" pos:end="33:44">VTD_INV_DESC_NONE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:25"><expr pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:20">next_frcd_reg</name></name> <operator pos:start="35:22" pos:end="35:22">=</operator> <literal type="number" pos:start="35:24" pos:end="35:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="39:56"><expr pos:start="37:5" pos:end="39:55"><name pos:start="37:5" pos:end="37:10"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:10">cap</name></name> <operator pos:start="37:12" pos:end="37:12">=</operator> <name pos:start="37:14" pos:end="37:24">VTD_CAP_FRO</name> <operator pos:start="37:26" pos:end="37:26">|</operator> <name pos:start="37:28" pos:end="37:38">VTD_CAP_NFR</name> <operator pos:start="37:40" pos:end="37:40">|</operator> <name pos:start="37:42" pos:end="37:51">VTD_CAP_ND</name> <operator pos:start="37:53" pos:end="37:53">|</operator> <name pos:start="37:55" pos:end="37:66">VTD_CAP_MGAW</name> <operator pos:start="37:68" pos:end="37:68">|</operator>

             <name pos:start="39:14" pos:end="39:26">VTD_CAP_SAGAW</name> <operator pos:start="39:28" pos:end="39:28">|</operator> <name pos:start="39:30" pos:end="39:41">VTD_CAP_MAMV</name> <operator pos:start="39:43" pos:end="39:43">|</operator> <name pos:start="39:45" pos:end="39:55">VTD_CAP_PSI</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:41"><expr pos:start="41:5" pos:end="41:40"><name pos:start="41:5" pos:end="41:11"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:11">ecap</name></name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:25">VTD_ECAP_QI</name> <operator pos:start="41:27" pos:end="41:27">|</operator> <name pos:start="41:29" pos:end="41:40">VTD_ECAP_IRO</name></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:31"><expr pos:start="45:5" pos:end="45:30"><call pos:start="45:5" pos:end="45:30"><name pos:start="45:5" pos:end="45:27">vtd_reset_context_cache</name><argument_list pos:start="45:28" pos:end="45:30">(<argument pos:start="45:29" pos:end="45:29"><expr pos:start="45:29" pos:end="45:29"><name pos:start="45:29" pos:end="45:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:23"><expr pos:start="47:5" pos:end="47:22"><call pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:19">vtd_reset_iotlb</name><argument_list pos:start="47:20" pos:end="47:22">(<argument pos:start="47:21" pos:end="47:21"><expr pos:start="47:21" pos:end="47:21"><name pos:start="47:21" pos:end="47:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:64">/* Define registers with default values and bit semantics */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:51"><expr pos:start="53:5" pos:end="53:50"><call pos:start="53:5" pos:end="53:50"><name pos:start="53:5" pos:end="53:19">vtd_define_long</name><argument_list pos:start="53:20" pos:end="53:50">(<argument pos:start="53:21" pos:end="53:21"><expr pos:start="53:21" pos:end="53:21"><name pos:start="53:21" pos:end="53:21">s</name></expr></argument>, <argument pos:start="53:24" pos:end="53:35"><expr pos:start="53:24" pos:end="53:35"><name pos:start="53:24" pos:end="53:35">DMAR_VER_REG</name></expr></argument>, <argument pos:start="53:38" pos:end="53:43"><expr pos:start="53:38" pos:end="53:43"><literal type="number" pos:start="53:38" pos:end="53:43">0x10UL</literal></expr></argument>, <argument pos:start="53:46" pos:end="53:46"><expr pos:start="53:46" pos:end="53:46"><literal type="number" pos:start="53:46" pos:end="53:46">0</literal></expr></argument>, <argument pos:start="53:49" pos:end="53:49"><expr pos:start="53:49" pos:end="53:49"><literal type="number" pos:start="53:49" pos:end="53:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:51"><expr pos:start="55:5" pos:end="55:50"><call pos:start="55:5" pos:end="55:50"><name pos:start="55:5" pos:end="55:19">vtd_define_quad</name><argument_list pos:start="55:20" pos:end="55:50">(<argument pos:start="55:21" pos:end="55:21"><expr pos:start="55:21" pos:end="55:21"><name pos:start="55:21" pos:end="55:21">s</name></expr></argument>, <argument pos:start="55:24" pos:end="55:35"><expr pos:start="55:24" pos:end="55:35"><name pos:start="55:24" pos:end="55:35">DMAR_CAP_REG</name></expr></argument>, <argument pos:start="55:38" pos:end="55:43"><expr pos:start="55:38" pos:end="55:43"><name pos:start="55:38" pos:end="55:43"><name pos:start="55:38" pos:end="55:38">s</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:43">cap</name></name></expr></argument>, <argument pos:start="55:46" pos:end="55:46"><expr pos:start="55:46" pos:end="55:46"><literal type="number" pos:start="55:46" pos:end="55:46">0</literal></expr></argument>, <argument pos:start="55:49" pos:end="55:49"><expr pos:start="55:49" pos:end="55:49"><literal type="number" pos:start="55:49" pos:end="55:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:53"><expr pos:start="57:5" pos:end="57:52"><call pos:start="57:5" pos:end="57:52"><name pos:start="57:5" pos:end="57:19">vtd_define_quad</name><argument_list pos:start="57:20" pos:end="57:52">(<argument pos:start="57:21" pos:end="57:21"><expr pos:start="57:21" pos:end="57:21"><name pos:start="57:21" pos:end="57:21">s</name></expr></argument>, <argument pos:start="57:24" pos:end="57:36"><expr pos:start="57:24" pos:end="57:36"><name pos:start="57:24" pos:end="57:36">DMAR_ECAP_REG</name></expr></argument>, <argument pos:start="57:39" pos:end="57:45"><expr pos:start="57:39" pos:end="57:45"><name pos:start="57:39" pos:end="57:45"><name pos:start="57:39" pos:end="57:39">s</name><operator pos:start="57:40" pos:end="57:41">-&gt;</operator><name pos:start="57:42" pos:end="57:45">ecap</name></name></expr></argument>, <argument pos:start="57:48" pos:end="57:48"><expr pos:start="57:48" pos:end="57:48"><literal type="number" pos:start="57:48" pos:end="57:48">0</literal></expr></argument>, <argument pos:start="57:51" pos:end="57:51"><expr pos:start="57:51" pos:end="57:51"><literal type="number" pos:start="57:51" pos:end="57:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:58"><expr pos:start="59:5" pos:end="59:57"><call pos:start="59:5" pos:end="59:57"><name pos:start="59:5" pos:end="59:19">vtd_define_long</name><argument_list pos:start="59:20" pos:end="59:57">(<argument pos:start="59:21" pos:end="59:21"><expr pos:start="59:21" pos:end="59:21"><name pos:start="59:21" pos:end="59:21">s</name></expr></argument>, <argument pos:start="59:24" pos:end="59:36"><expr pos:start="59:24" pos:end="59:36"><name pos:start="59:24" pos:end="59:36">DMAR_GCMD_REG</name></expr></argument>, <argument pos:start="59:39" pos:end="59:39"><expr pos:start="59:39" pos:end="59:39"><literal type="number" pos:start="59:39" pos:end="59:39">0</literal></expr></argument>, <argument pos:start="59:42" pos:end="59:53"><expr pos:start="59:42" pos:end="59:53"><literal type="number" pos:start="59:42" pos:end="59:53">0xff800000UL</literal></expr></argument>, <argument pos:start="59:56" pos:end="59:56"><expr pos:start="59:56" pos:end="59:56"><literal type="number" pos:start="59:56" pos:end="59:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:55"><expr pos:start="61:5" pos:end="61:54"><call pos:start="61:5" pos:end="61:54"><name pos:start="61:5" pos:end="61:22">vtd_define_long_wo</name><argument_list pos:start="61:23" pos:end="61:54">(<argument pos:start="61:24" pos:end="61:24"><expr pos:start="61:24" pos:end="61:24"><name pos:start="61:24" pos:end="61:24">s</name></expr></argument>, <argument pos:start="61:27" pos:end="61:39"><expr pos:start="61:27" pos:end="61:39"><name pos:start="61:27" pos:end="61:39">DMAR_GCMD_REG</name></expr></argument>, <argument pos:start="61:42" pos:end="61:53"><expr pos:start="61:42" pos:end="61:53"><literal type="number" pos:start="61:42" pos:end="61:53">0xff800000UL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:47"><expr pos:start="63:5" pos:end="63:46"><call pos:start="63:5" pos:end="63:46"><name pos:start="63:5" pos:end="63:19">vtd_define_long</name><argument_list pos:start="63:20" pos:end="63:46">(<argument pos:start="63:21" pos:end="63:21"><expr pos:start="63:21" pos:end="63:21"><name pos:start="63:21" pos:end="63:21">s</name></expr></argument>, <argument pos:start="63:24" pos:end="63:36"><expr pos:start="63:24" pos:end="63:36"><name pos:start="63:24" pos:end="63:36">DMAR_GSTS_REG</name></expr></argument>, <argument pos:start="63:39" pos:end="63:39"><expr pos:start="63:39" pos:end="63:39"><literal type="number" pos:start="63:39" pos:end="63:39">0</literal></expr></argument>, <argument pos:start="63:42" pos:end="63:42"><expr pos:start="63:42" pos:end="63:42"><literal type="number" pos:start="63:42" pos:end="63:42">0</literal></expr></argument>, <argument pos:start="63:45" pos:end="63:45"><expr pos:start="63:45" pos:end="63:45"><literal type="number" pos:start="63:45" pos:end="63:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:69"><expr pos:start="65:5" pos:end="65:68"><call pos:start="65:5" pos:end="65:68"><name pos:start="65:5" pos:end="65:19">vtd_define_quad</name><argument_list pos:start="65:20" pos:end="65:68">(<argument pos:start="65:21" pos:end="65:21"><expr pos:start="65:21" pos:end="65:21"><name pos:start="65:21" pos:end="65:21">s</name></expr></argument>, <argument pos:start="65:24" pos:end="65:38"><expr pos:start="65:24" pos:end="65:38"><name pos:start="65:24" pos:end="65:38">DMAR_RTADDR_REG</name></expr></argument>, <argument pos:start="65:41" pos:end="65:41"><expr pos:start="65:41" pos:end="65:41"><literal type="number" pos:start="65:41" pos:end="65:41">0</literal></expr></argument>, <argument pos:start="65:44" pos:end="65:64"><expr pos:start="65:44" pos:end="65:64"><literal type="number" pos:start="65:44" pos:end="65:64">0xfffffffffffff000ULL</literal></expr></argument>, <argument pos:start="65:67" pos:end="65:67"><expr pos:start="65:67" pos:end="65:67"><literal type="number" pos:start="65:67" pos:end="65:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:67"><expr pos:start="67:5" pos:end="67:66"><call pos:start="67:5" pos:end="67:66"><name pos:start="67:5" pos:end="67:19">vtd_define_quad</name><argument_list pos:start="67:20" pos:end="67:66">(<argument pos:start="67:21" pos:end="67:21"><expr pos:start="67:21" pos:end="67:21"><name pos:start="67:21" pos:end="67:21">s</name></expr></argument>, <argument pos:start="67:24" pos:end="67:36"><expr pos:start="67:24" pos:end="67:36"><name pos:start="67:24" pos:end="67:36">DMAR_CCMD_REG</name></expr></argument>, <argument pos:start="67:39" pos:end="67:39"><expr pos:start="67:39" pos:end="67:39"><literal type="number" pos:start="67:39" pos:end="67:39">0</literal></expr></argument>, <argument pos:start="67:42" pos:end="67:62"><expr pos:start="67:42" pos:end="67:62"><literal type="number" pos:start="67:42" pos:end="67:62">0xe0000003ffffffffULL</literal></expr></argument>, <argument pos:start="67:65" pos:end="67:65"><expr pos:start="67:65" pos:end="67:65"><literal type="number" pos:start="67:65" pos:end="67:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:57"><expr pos:start="69:5" pos:end="69:56"><call pos:start="69:5" pos:end="69:56"><name pos:start="69:5" pos:end="69:22">vtd_define_quad_wo</name><argument_list pos:start="69:23" pos:end="69:56">(<argument pos:start="69:24" pos:end="69:24"><expr pos:start="69:24" pos:end="69:24"><name pos:start="69:24" pos:end="69:24">s</name></expr></argument>, <argument pos:start="69:27" pos:end="69:39"><expr pos:start="69:27" pos:end="69:39"><name pos:start="69:27" pos:end="69:39">DMAR_CCMD_REG</name></expr></argument>, <argument pos:start="69:42" pos:end="69:55"><expr pos:start="69:42" pos:end="69:55"><literal type="number" pos:start="69:42" pos:end="69:55">0x3ffff0000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:46">/* Advanced Fault Logging not supported */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:52"><expr pos:start="75:5" pos:end="75:51"><call pos:start="75:5" pos:end="75:51"><name pos:start="75:5" pos:end="75:19">vtd_define_long</name><argument_list pos:start="75:20" pos:end="75:51">(<argument pos:start="75:21" pos:end="75:21"><expr pos:start="75:21" pos:end="75:21"><name pos:start="75:21" pos:end="75:21">s</name></expr></argument>, <argument pos:start="75:24" pos:end="75:36"><expr pos:start="75:24" pos:end="75:36"><name pos:start="75:24" pos:end="75:36">DMAR_FSTS_REG</name></expr></argument>, <argument pos:start="75:39" pos:end="75:39"><expr pos:start="75:39" pos:end="75:39"><literal type="number" pos:start="75:39" pos:end="75:39">0</literal></expr></argument>, <argument pos:start="75:42" pos:end="75:42"><expr pos:start="75:42" pos:end="75:42"><literal type="number" pos:start="75:42" pos:end="75:42">0</literal></expr></argument>, <argument pos:start="75:45" pos:end="75:50"><expr pos:start="75:45" pos:end="75:50"><literal type="number" pos:start="75:45" pos:end="75:50">0x11UL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:70"><expr pos:start="77:5" pos:end="77:69"><call pos:start="77:5" pos:end="77:69"><name pos:start="77:5" pos:end="77:19">vtd_define_long</name><argument_list pos:start="77:20" pos:end="77:69">(<argument pos:start="77:21" pos:end="77:21"><expr pos:start="77:21" pos:end="77:21"><name pos:start="77:21" pos:end="77:21">s</name></expr></argument>, <argument pos:start="77:24" pos:end="77:37"><expr pos:start="77:24" pos:end="77:37"><name pos:start="77:24" pos:end="77:37">DMAR_FECTL_REG</name></expr></argument>, <argument pos:start="77:40" pos:end="77:51"><expr pos:start="77:40" pos:end="77:51"><literal type="number" pos:start="77:40" pos:end="77:51">0x80000000UL</literal></expr></argument>, <argument pos:start="77:54" pos:end="77:65"><expr pos:start="77:54" pos:end="77:65"><literal type="number" pos:start="77:54" pos:end="77:65">0x80000000UL</literal></expr></argument>, <argument pos:start="77:68" pos:end="77:68"><expr pos:start="77:68" pos:end="77:68"><literal type="number" pos:start="77:68" pos:end="77:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:60"><expr pos:start="79:5" pos:end="79:59"><call pos:start="79:5" pos:end="79:59"><name pos:start="79:5" pos:end="79:19">vtd_define_long</name><argument_list pos:start="79:20" pos:end="79:59">(<argument pos:start="79:21" pos:end="79:21"><expr pos:start="79:21" pos:end="79:21"><name pos:start="79:21" pos:end="79:21">s</name></expr></argument>, <argument pos:start="79:24" pos:end="79:38"><expr pos:start="79:24" pos:end="79:38"><name pos:start="79:24" pos:end="79:38">DMAR_FEDATA_REG</name></expr></argument>, <argument pos:start="79:41" pos:end="79:41"><expr pos:start="79:41" pos:end="79:41"><literal type="number" pos:start="79:41" pos:end="79:41">0</literal></expr></argument>, <argument pos:start="79:44" pos:end="79:55"><expr pos:start="79:44" pos:end="79:55"><literal type="number" pos:start="79:44" pos:end="79:55">0x0000ffffUL</literal></expr></argument>, <argument pos:start="79:58" pos:end="79:58"><expr pos:start="79:58" pos:end="79:58"><literal type="number" pos:start="79:58" pos:end="79:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:60"><expr pos:start="81:5" pos:end="81:59"><call pos:start="81:5" pos:end="81:59"><name pos:start="81:5" pos:end="81:19">vtd_define_long</name><argument_list pos:start="81:20" pos:end="81:59">(<argument pos:start="81:21" pos:end="81:21"><expr pos:start="81:21" pos:end="81:21"><name pos:start="81:21" pos:end="81:21">s</name></expr></argument>, <argument pos:start="81:24" pos:end="81:38"><expr pos:start="81:24" pos:end="81:38"><name pos:start="81:24" pos:end="81:38">DMAR_FEADDR_REG</name></expr></argument>, <argument pos:start="81:41" pos:end="81:41"><expr pos:start="81:41" pos:end="81:41"><literal type="number" pos:start="81:41" pos:end="81:41">0</literal></expr></argument>, <argument pos:start="81:44" pos:end="81:55"><expr pos:start="81:44" pos:end="81:55"><literal type="number" pos:start="81:44" pos:end="81:55">0xfffffffcUL</literal></expr></argument>, <argument pos:start="81:58" pos:end="81:58"><expr pos:start="81:58" pos:end="81:58"><literal type="number" pos:start="81:58" pos:end="81:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="85:5" pos:end="89:7">/* Treated as RsvdZ when EIM in ECAP_REG is not supported

     * vtd_define_long(s, DMAR_FEUADDR_REG, 0, 0xffffffffUL, 0);

     */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:50"><expr pos:start="91:5" pos:end="91:49"><call pos:start="91:5" pos:end="91:49"><name pos:start="91:5" pos:end="91:19">vtd_define_long</name><argument_list pos:start="91:20" pos:end="91:49">(<argument pos:start="91:21" pos:end="91:21"><expr pos:start="91:21" pos:end="91:21"><name pos:start="91:21" pos:end="91:21">s</name></expr></argument>, <argument pos:start="91:24" pos:end="91:39"><expr pos:start="91:24" pos:end="91:39"><name pos:start="91:24" pos:end="91:39">DMAR_FEUADDR_REG</name></expr></argument>, <argument pos:start="91:42" pos:end="91:42"><expr pos:start="91:42" pos:end="91:42"><literal type="number" pos:start="91:42" pos:end="91:42">0</literal></expr></argument>, <argument pos:start="91:45" pos:end="91:45"><expr pos:start="91:45" pos:end="91:45"><literal type="number" pos:start="91:45" pos:end="91:45">0</literal></expr></argument>, <argument pos:start="91:48" pos:end="91:48"><expr pos:start="91:48" pos:end="91:48"><literal type="number" pos:start="91:48" pos:end="91:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="95:5" pos:end="101:7">/* Treated as RO for implementations that PLMR and PHMR fields reported

     * as Clear in the CAP_REG.

     * vtd_define_long(s, DMAR_PMEN_REG, 0, 0x80000000UL, 0);

     */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:47"><expr pos:start="103:5" pos:end="103:46"><call pos:start="103:5" pos:end="103:46"><name pos:start="103:5" pos:end="103:19">vtd_define_long</name><argument_list pos:start="103:20" pos:end="103:46">(<argument pos:start="103:21" pos:end="103:21"><expr pos:start="103:21" pos:end="103:21"><name pos:start="103:21" pos:end="103:21">s</name></expr></argument>, <argument pos:start="103:24" pos:end="103:36"><expr pos:start="103:24" pos:end="103:36"><name pos:start="103:24" pos:end="103:36">DMAR_PMEN_REG</name></expr></argument>, <argument pos:start="103:39" pos:end="103:39"><expr pos:start="103:39" pos:end="103:39"><literal type="number" pos:start="103:39" pos:end="103:39">0</literal></expr></argument>, <argument pos:start="103:42" pos:end="103:42"><expr pos:start="103:42" pos:end="103:42"><literal type="number" pos:start="103:42" pos:end="103:42">0</literal></expr></argument>, <argument pos:start="103:45" pos:end="103:45"><expr pos:start="103:45" pos:end="103:45"><literal type="number" pos:start="103:45" pos:end="103:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:46"><expr pos:start="107:5" pos:end="107:45"><call pos:start="107:5" pos:end="107:45"><name pos:start="107:5" pos:end="107:19">vtd_define_quad</name><argument_list pos:start="107:20" pos:end="107:45">(<argument pos:start="107:21" pos:end="107:21"><expr pos:start="107:21" pos:end="107:21"><name pos:start="107:21" pos:end="107:21">s</name></expr></argument>, <argument pos:start="107:24" pos:end="107:35"><expr pos:start="107:24" pos:end="107:35"><name pos:start="107:24" pos:end="107:35">DMAR_IQH_REG</name></expr></argument>, <argument pos:start="107:38" pos:end="107:38"><expr pos:start="107:38" pos:end="107:38"><literal type="number" pos:start="107:38" pos:end="107:38">0</literal></expr></argument>, <argument pos:start="107:41" pos:end="107:41"><expr pos:start="107:41" pos:end="107:41"><literal type="number" pos:start="107:41" pos:end="107:41">0</literal></expr></argument>, <argument pos:start="107:44" pos:end="107:44"><expr pos:start="107:44" pos:end="107:44"><literal type="number" pos:start="107:44" pos:end="107:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:55"><expr pos:start="109:5" pos:end="109:54"><call pos:start="109:5" pos:end="109:54"><name pos:start="109:5" pos:end="109:19">vtd_define_quad</name><argument_list pos:start="109:20" pos:end="109:54">(<argument pos:start="109:21" pos:end="109:21"><expr pos:start="109:21" pos:end="109:21"><name pos:start="109:21" pos:end="109:21">s</name></expr></argument>, <argument pos:start="109:24" pos:end="109:35"><expr pos:start="109:24" pos:end="109:35"><name pos:start="109:24" pos:end="109:35">DMAR_IQT_REG</name></expr></argument>, <argument pos:start="109:38" pos:end="109:38"><expr pos:start="109:38" pos:end="109:38"><literal type="number" pos:start="109:38" pos:end="109:38">0</literal></expr></argument>, <argument pos:start="109:41" pos:end="109:50"><expr pos:start="109:41" pos:end="109:50"><literal type="number" pos:start="109:41" pos:end="109:50">0x7fff0ULL</literal></expr></argument>, <argument pos:start="109:53" pos:end="109:53"><expr pos:start="109:53" pos:end="109:53"><literal type="number" pos:start="109:53" pos:end="109:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:66"><expr pos:start="111:5" pos:end="111:65"><call pos:start="111:5" pos:end="111:65"><name pos:start="111:5" pos:end="111:19">vtd_define_quad</name><argument_list pos:start="111:20" pos:end="111:65">(<argument pos:start="111:21" pos:end="111:21"><expr pos:start="111:21" pos:end="111:21"><name pos:start="111:21" pos:end="111:21">s</name></expr></argument>, <argument pos:start="111:24" pos:end="111:35"><expr pos:start="111:24" pos:end="111:35"><name pos:start="111:24" pos:end="111:35">DMAR_IQA_REG</name></expr></argument>, <argument pos:start="111:38" pos:end="111:38"><expr pos:start="111:38" pos:end="111:38"><literal type="number" pos:start="111:38" pos:end="111:38">0</literal></expr></argument>, <argument pos:start="111:41" pos:end="111:61"><expr pos:start="111:41" pos:end="111:61"><literal type="number" pos:start="111:41" pos:end="111:61">0xfffffffffffff007ULL</literal></expr></argument>, <argument pos:start="111:64" pos:end="111:64"><expr pos:start="111:64" pos:end="111:64"><literal type="number" pos:start="111:64" pos:end="111:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:50"><expr pos:start="113:5" pos:end="113:49"><call pos:start="113:5" pos:end="113:49"><name pos:start="113:5" pos:end="113:19">vtd_define_long</name><argument_list pos:start="113:20" pos:end="113:49">(<argument pos:start="113:21" pos:end="113:21"><expr pos:start="113:21" pos:end="113:21"><name pos:start="113:21" pos:end="113:21">s</name></expr></argument>, <argument pos:start="113:24" pos:end="113:35"><expr pos:start="113:24" pos:end="113:35"><name pos:start="113:24" pos:end="113:35">DMAR_ICS_REG</name></expr></argument>, <argument pos:start="113:38" pos:end="113:38"><expr pos:start="113:38" pos:end="113:38"><literal type="number" pos:start="113:38" pos:end="113:38">0</literal></expr></argument>, <argument pos:start="113:41" pos:end="113:41"><expr pos:start="113:41" pos:end="113:41"><literal type="number" pos:start="113:41" pos:end="113:41">0</literal></expr></argument>, <argument pos:start="113:44" pos:end="113:48"><expr pos:start="113:44" pos:end="113:48"><literal type="number" pos:start="113:44" pos:end="113:48">0x1UL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:70"><expr pos:start="115:5" pos:end="115:69"><call pos:start="115:5" pos:end="115:69"><name pos:start="115:5" pos:end="115:19">vtd_define_long</name><argument_list pos:start="115:20" pos:end="115:69">(<argument pos:start="115:21" pos:end="115:21"><expr pos:start="115:21" pos:end="115:21"><name pos:start="115:21" pos:end="115:21">s</name></expr></argument>, <argument pos:start="115:24" pos:end="115:37"><expr pos:start="115:24" pos:end="115:37"><name pos:start="115:24" pos:end="115:37">DMAR_IECTL_REG</name></expr></argument>, <argument pos:start="115:40" pos:end="115:51"><expr pos:start="115:40" pos:end="115:51"><literal type="number" pos:start="115:40" pos:end="115:51">0x80000000UL</literal></expr></argument>, <argument pos:start="115:54" pos:end="115:65"><expr pos:start="115:54" pos:end="115:65"><literal type="number" pos:start="115:54" pos:end="115:65">0x80000000UL</literal></expr></argument>, <argument pos:start="115:68" pos:end="115:68"><expr pos:start="115:68" pos:end="115:68"><literal type="number" pos:start="115:68" pos:end="115:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:60"><expr pos:start="117:5" pos:end="117:59"><call pos:start="117:5" pos:end="117:59"><name pos:start="117:5" pos:end="117:19">vtd_define_long</name><argument_list pos:start="117:20" pos:end="117:59">(<argument pos:start="117:21" pos:end="117:21"><expr pos:start="117:21" pos:end="117:21"><name pos:start="117:21" pos:end="117:21">s</name></expr></argument>, <argument pos:start="117:24" pos:end="117:38"><expr pos:start="117:24" pos:end="117:38"><name pos:start="117:24" pos:end="117:38">DMAR_IEDATA_REG</name></expr></argument>, <argument pos:start="117:41" pos:end="117:41"><expr pos:start="117:41" pos:end="117:41"><literal type="number" pos:start="117:41" pos:end="117:41">0</literal></expr></argument>, <argument pos:start="117:44" pos:end="117:55"><expr pos:start="117:44" pos:end="117:55"><literal type="number" pos:start="117:44" pos:end="117:55">0xffffffffUL</literal></expr></argument>, <argument pos:start="117:58" pos:end="117:58"><expr pos:start="117:58" pos:end="117:58"><literal type="number" pos:start="117:58" pos:end="117:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:60"><expr pos:start="119:5" pos:end="119:59"><call pos:start="119:5" pos:end="119:59"><name pos:start="119:5" pos:end="119:19">vtd_define_long</name><argument_list pos:start="119:20" pos:end="119:59">(<argument pos:start="119:21" pos:end="119:21"><expr pos:start="119:21" pos:end="119:21"><name pos:start="119:21" pos:end="119:21">s</name></expr></argument>, <argument pos:start="119:24" pos:end="119:38"><expr pos:start="119:24" pos:end="119:38"><name pos:start="119:24" pos:end="119:38">DMAR_IEADDR_REG</name></expr></argument>, <argument pos:start="119:41" pos:end="119:41"><expr pos:start="119:41" pos:end="119:41"><literal type="number" pos:start="119:41" pos:end="119:41">0</literal></expr></argument>, <argument pos:start="119:44" pos:end="119:55"><expr pos:start="119:44" pos:end="119:55"><literal type="number" pos:start="119:44" pos:end="119:55">0xfffffffcUL</literal></expr></argument>, <argument pos:start="119:58" pos:end="119:58"><expr pos:start="119:58" pos:end="119:58"><literal type="number" pos:start="119:58" pos:end="119:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="121:5" pos:end="121:65">/* Treadted as RsvdZ when EIM in ECAP_REG is not supported */</comment>

    <expr_stmt pos:start="123:5" pos:end="123:50"><expr pos:start="123:5" pos:end="123:49"><call pos:start="123:5" pos:end="123:49"><name pos:start="123:5" pos:end="123:19">vtd_define_long</name><argument_list pos:start="123:20" pos:end="123:49">(<argument pos:start="123:21" pos:end="123:21"><expr pos:start="123:21" pos:end="123:21"><name pos:start="123:21" pos:end="123:21">s</name></expr></argument>, <argument pos:start="123:24" pos:end="123:39"><expr pos:start="123:24" pos:end="123:39"><name pos:start="123:24" pos:end="123:39">DMAR_IEUADDR_REG</name></expr></argument>, <argument pos:start="123:42" pos:end="123:42"><expr pos:start="123:42" pos:end="123:42"><literal type="number" pos:start="123:42" pos:end="123:42">0</literal></expr></argument>, <argument pos:start="123:45" pos:end="123:45"><expr pos:start="123:45" pos:end="123:45"><literal type="number" pos:start="123:45" pos:end="123:45">0</literal></expr></argument>, <argument pos:start="123:48" pos:end="123:48"><expr pos:start="123:48" pos:end="123:48"><literal type="number" pos:start="123:48" pos:end="123:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="127:5" pos:end="127:25">/* IOTLB registers */</comment>

    <expr_stmt pos:start="129:5" pos:end="129:68"><expr pos:start="129:5" pos:end="129:67"><call pos:start="129:5" pos:end="129:67"><name pos:start="129:5" pos:end="129:19">vtd_define_quad</name><argument_list pos:start="129:20" pos:end="129:67">(<argument pos:start="129:21" pos:end="129:21"><expr pos:start="129:21" pos:end="129:21"><name pos:start="129:21" pos:end="129:21">s</name></expr></argument>, <argument pos:start="129:24" pos:end="129:37"><expr pos:start="129:24" pos:end="129:37"><name pos:start="129:24" pos:end="129:37">DMAR_IOTLB_REG</name></expr></argument>, <argument pos:start="129:40" pos:end="129:40"><expr pos:start="129:40" pos:end="129:40"><literal type="number" pos:start="129:40" pos:end="129:40">0</literal></expr></argument>, <argument pos:start="129:43" pos:end="129:63"><expr pos:start="129:43" pos:end="129:63"><literal type="number" pos:start="129:43" pos:end="129:63">0Xb003ffff00000000ULL</literal></expr></argument>, <argument pos:start="129:66" pos:end="129:66"><expr pos:start="129:66" pos:end="129:66"><literal type="number" pos:start="129:66" pos:end="129:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:66"><expr pos:start="131:5" pos:end="131:65"><call pos:start="131:5" pos:end="131:65"><name pos:start="131:5" pos:end="131:19">vtd_define_quad</name><argument_list pos:start="131:20" pos:end="131:65">(<argument pos:start="131:21" pos:end="131:21"><expr pos:start="131:21" pos:end="131:21"><name pos:start="131:21" pos:end="131:21">s</name></expr></argument>, <argument pos:start="131:24" pos:end="131:35"><expr pos:start="131:24" pos:end="131:35"><name pos:start="131:24" pos:end="131:35">DMAR_IVA_REG</name></expr></argument>, <argument pos:start="131:38" pos:end="131:38"><expr pos:start="131:38" pos:end="131:38"><literal type="number" pos:start="131:38" pos:end="131:38">0</literal></expr></argument>, <argument pos:start="131:41" pos:end="131:61"><expr pos:start="131:41" pos:end="131:61"><literal type="number" pos:start="131:41" pos:end="131:61">0xfffffffffffff07fULL</literal></expr></argument>, <argument pos:start="131:64" pos:end="131:64"><expr pos:start="131:64" pos:end="131:64"><literal type="number" pos:start="131:64" pos:end="131:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:63"><expr pos:start="133:5" pos:end="133:62"><call pos:start="133:5" pos:end="133:62"><name pos:start="133:5" pos:end="133:22">vtd_define_quad_wo</name><argument_list pos:start="133:23" pos:end="133:62">(<argument pos:start="133:24" pos:end="133:24"><expr pos:start="133:24" pos:end="133:24"><name pos:start="133:24" pos:end="133:24">s</name></expr></argument>, <argument pos:start="133:27" pos:end="133:38"><expr pos:start="133:27" pos:end="133:38"><name pos:start="133:27" pos:end="133:38">DMAR_IVA_REG</name></expr></argument>, <argument pos:start="133:41" pos:end="133:61"><expr pos:start="133:41" pos:end="133:61"><literal type="number" pos:start="133:41" pos:end="133:61">0xfffffffffffff07fULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="137:5" pos:end="137:44">/* Fault Recording Registers, 128-bit */</comment>

    <expr_stmt pos:start="139:5" pos:end="139:51"><expr pos:start="139:5" pos:end="139:50"><call pos:start="139:5" pos:end="139:50"><name pos:start="139:5" pos:end="139:19">vtd_define_quad</name><argument_list pos:start="139:20" pos:end="139:50">(<argument pos:start="139:21" pos:end="139:21"><expr pos:start="139:21" pos:end="139:21"><name pos:start="139:21" pos:end="139:21">s</name></expr></argument>, <argument pos:start="139:24" pos:end="139:40"><expr pos:start="139:24" pos:end="139:40"><name pos:start="139:24" pos:end="139:40">DMAR_FRCD_REG_0_0</name></expr></argument>, <argument pos:start="139:43" pos:end="139:43"><expr pos:start="139:43" pos:end="139:43"><literal type="number" pos:start="139:43" pos:end="139:43">0</literal></expr></argument>, <argument pos:start="139:46" pos:end="139:46"><expr pos:start="139:46" pos:end="139:46"><literal type="number" pos:start="139:46" pos:end="139:46">0</literal></expr></argument>, <argument pos:start="139:49" pos:end="139:49"><expr pos:start="139:49" pos:end="139:49"><literal type="number" pos:start="139:49" pos:end="139:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:71"><expr pos:start="141:5" pos:end="141:70"><call pos:start="141:5" pos:end="141:70"><name pos:start="141:5" pos:end="141:19">vtd_define_quad</name><argument_list pos:start="141:20" pos:end="141:70">(<argument pos:start="141:21" pos:end="141:21"><expr pos:start="141:21" pos:end="141:21"><name pos:start="141:21" pos:end="141:21">s</name></expr></argument>, <argument pos:start="141:24" pos:end="141:40"><expr pos:start="141:24" pos:end="141:40"><name pos:start="141:24" pos:end="141:40">DMAR_FRCD_REG_0_2</name></expr></argument>, <argument pos:start="141:43" pos:end="141:43"><expr pos:start="141:43" pos:end="141:43"><literal type="number" pos:start="141:43" pos:end="141:43">0</literal></expr></argument>, <argument pos:start="141:46" pos:end="141:46"><expr pos:start="141:46" pos:end="141:46"><literal type="number" pos:start="141:46" pos:end="141:46">0</literal></expr></argument>, <argument pos:start="141:49" pos:end="141:69"><expr pos:start="141:49" pos:end="141:69"><literal type="number" pos:start="141:49" pos:end="141:69">0x8000000000000000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
