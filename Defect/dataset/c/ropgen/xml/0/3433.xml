<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3433.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">hpet_init</name><parameter_list pos:start="1:21" pos:end="1:39">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:35"><name pos:start="1:22" pos:end="1:33">SysBusDevice</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:13">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">HPETState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:46">= <expr pos:start="5:20" pos:end="5:46"><call pos:start="5:20" pos:end="5:46"><name pos:start="5:20" pos:end="5:30">FROM_SYSBUS</name><argument_list pos:start="5:31" pos:end="5:46">(<argument pos:start="5:32" pos:end="5:40"><expr pos:start="5:32" pos:end="5:40"><name pos:start="5:32" pos:end="5:40">HPETState</name></expr></argument>, <argument pos:start="5:43" pos:end="5:45"><expr pos:start="5:43" pos:end="5:45"><name pos:start="5:43" pos:end="5:45">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:20">iomemtype</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">HPETTimer</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:20">timer</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:36">(<expr pos:start="13:9" pos:end="13:35"><name pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:16">hpet_cfg</name><operator pos:start="13:17" pos:end="13:17">.</operator><name pos:start="13:18" pos:end="13:22">count</name></name> <operator pos:start="13:24" pos:end="13:25">==</operator> <name pos:start="13:27" pos:end="13:35">UINT8_MAX</name></expr>)</condition> <block pos:start="13:38" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:27">

        <comment type="block" pos:start="15:9" pos:end="15:28">/* first instance */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:27"><expr pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:16">hpet_cfg</name><operator pos:start="17:17" pos:end="17:17">.</operator><name pos:start="17:18" pos:end="17:22">count</name></name> <operator pos:start="17:24" pos:end="17:24">=</operator> <literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:28">(<expr pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:16">hpet_cfg</name><operator pos:start="23:17" pos:end="23:17">.</operator><name pos:start="23:18" pos:end="23:22">count</name></name> <operator pos:start="23:24" pos:end="23:25">==</operator> <literal type="number" pos:start="23:27" pos:end="23:27">8</literal></expr>)</condition> <block pos:start="23:30" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:18">

        <expr_stmt pos:start="25:9" pos:end="25:65"><expr pos:start="25:9" pos:end="25:64"><call pos:start="25:9" pos:end="25:64"><name pos:start="25:9" pos:end="25:15">fprintf</name><argument_list pos:start="25:16" pos:end="25:64">(<argument pos:start="25:17" pos:end="25:22"><expr pos:start="25:17" pos:end="25:22"><name pos:start="25:17" pos:end="25:22">stderr</name></expr></argument>, <argument pos:start="25:25" pos:end="25:63"><expr pos:start="25:25" pos:end="25:63"><literal type="string" pos:start="25:25" pos:end="25:63">"Only 8 instances of HPET is allowed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:34"><expr pos:start="33:5" pos:end="33:33"><name pos:start="33:5" pos:end="33:14"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:14">hpet_id</name></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:31"><name pos:start="33:18" pos:end="33:25">hpet_cfg</name><operator pos:start="33:26" pos:end="33:26">.</operator><name pos:start="33:27" pos:end="33:31">count</name></name><operator pos:start="33:32" pos:end="33:33">++</operator></expr>;</expr_stmt>



    <for pos:start="37:5" pos:end="41:5">for <control pos:start="37:9" pos:end="37:45">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:40"><expr pos:start="37:17" pos:end="37:39"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <name pos:start="37:21" pos:end="37:39">HPET_NUM_IRQ_ROUTES</name></expr>;</condition> <incr pos:start="37:42" pos:end="37:44"><expr pos:start="37:42" pos:end="37:44"><name pos:start="37:42" pos:end="37:42">i</name><operator pos:start="37:43" pos:end="37:44">++</operator></expr></incr>)</control> <block pos:start="37:47" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:42">

        <expr_stmt pos:start="39:9" pos:end="39:42"><expr pos:start="39:9" pos:end="39:41"><call pos:start="39:9" pos:end="39:41"><name pos:start="39:9" pos:end="39:23">sysbus_init_irq</name><argument_list pos:start="39:24" pos:end="39:41">(<argument pos:start="39:25" pos:end="39:27"><expr pos:start="39:25" pos:end="39:27"><name pos:start="39:25" pos:end="39:27">dev</name></expr></argument>, <argument pos:start="39:30" pos:end="39:40"><expr pos:start="39:30" pos:end="39:40"><operator pos:start="39:30" pos:end="39:30">&amp;</operator><name pos:start="39:31" pos:end="39:40"><name pos:start="39:31" pos:end="39:31">s</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:37">irqs</name><index pos:start="39:38" pos:end="39:40">[<expr pos:start="39:39" pos:end="39:39"><name pos:start="39:39" pos:end="39:39">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:40">(<expr pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:21">num_timers</name></name> <operator pos:start="45:23" pos:end="45:23">&lt;</operator> <name pos:start="45:25" pos:end="45:39">HPET_MIN_TIMERS</name></expr>)</condition> <block pos:start="45:42" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:40">

        <expr_stmt pos:start="47:9" pos:end="47:40"><expr pos:start="47:9" pos:end="47:39"><name pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:21">num_timers</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <name pos:start="47:25" pos:end="47:39">HPET_MIN_TIMERS</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="49:7" pos:end="53:5">else if <condition pos:start="49:15" pos:end="49:47">(<expr pos:start="49:16" pos:end="49:46"><name pos:start="49:16" pos:end="49:28"><name pos:start="49:16" pos:end="49:16">s</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:28">num_timers</name></name> <operator pos:start="49:30" pos:end="49:30">&gt;</operator> <name pos:start="49:32" pos:end="49:46">HPET_MAX_TIMERS</name></expr>)</condition> <block pos:start="49:49" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:40">

        <expr_stmt pos:start="51:9" pos:end="51:40"><expr pos:start="51:9" pos:end="51:39"><name pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:21">num_timers</name></name> <operator pos:start="51:23" pos:end="51:23">=</operator> <name pos:start="51:25" pos:end="51:39">HPET_MAX_TIMERS</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="55:5" pos:end="65:5">for <control pos:start="55:9" pos:end="55:41">(<init pos:start="55:10" pos:end="55:15"><expr pos:start="55:10" pos:end="55:14"><name pos:start="55:10" pos:end="55:10">i</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>;</init> <condition pos:start="55:17" pos:end="55:36"><expr pos:start="55:17" pos:end="55:35"><name pos:start="55:17" pos:end="55:17">i</name> <operator pos:start="55:19" pos:end="55:19">&lt;</operator> <name pos:start="55:21" pos:end="55:35">HPET_MAX_TIMERS</name></expr>;</condition> <incr pos:start="55:38" pos:end="55:40"><expr pos:start="55:38" pos:end="55:40"><name pos:start="55:38" pos:end="55:38">i</name><operator pos:start="55:39" pos:end="55:40">++</operator></expr></incr>)</control> <block pos:start="55:43" pos:end="65:5">{<block_content pos:start="57:9" pos:end="63:25">

        <expr_stmt pos:start="57:9" pos:end="57:29"><expr pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:13">timer</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <operator pos:start="57:17" pos:end="57:17">&amp;</operator><name pos:start="57:18" pos:end="57:28"><name pos:start="57:18" pos:end="57:18">s</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:25">timer</name><index pos:start="57:26" pos:end="57:28">[<expr pos:start="57:27" pos:end="57:27"><name pos:start="57:27" pos:end="57:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:72"><expr pos:start="59:9" pos:end="59:71"><name pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:13">timer</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:25">qemu_timer</name></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <call pos:start="59:29" pos:end="59:71"><name pos:start="59:29" pos:end="59:42">qemu_new_timer</name><argument_list pos:start="59:43" pos:end="59:71">(<argument pos:start="59:44" pos:end="59:51"><expr pos:start="59:44" pos:end="59:51"><name pos:start="59:44" pos:end="59:51">vm_clock</name></expr></argument>, <argument pos:start="59:54" pos:end="59:63"><expr pos:start="59:54" pos:end="59:63"><name pos:start="59:54" pos:end="59:63">hpet_timer</name></expr></argument>, <argument pos:start="59:66" pos:end="59:70"><expr pos:start="59:66" pos:end="59:70"><name pos:start="59:66" pos:end="59:70">timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:22"><expr pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:17"><name pos:start="61:9" pos:end="61:13">timer</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:17">tn</name></name> <operator pos:start="61:19" pos:end="61:19">=</operator> <name pos:start="61:21" pos:end="61:21">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:25"><expr pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:13">timer</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:20">state</name></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:24">s</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="69:5" pos:end="69:54">/* 64-bit main counter; LegacyReplacementRoute. */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:34"><expr pos:start="71:5" pos:end="71:33"><name pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:17">capability</name></name> <operator pos:start="71:19" pos:end="71:19">=</operator> <literal type="number" pos:start="71:21" pos:end="71:33">0x8086a001ULL</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:66"><expr pos:start="73:5" pos:end="73:65"><name pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:17">capability</name></name> <operator pos:start="73:19" pos:end="73:20">|=</operator> <operator pos:start="73:22" pos:end="73:22">(</operator><name pos:start="73:23" pos:end="73:35"><name pos:start="73:23" pos:end="73:23">s</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:35">num_timers</name></name> <operator pos:start="73:37" pos:end="73:37">-</operator> <literal type="number" pos:start="73:39" pos:end="73:39">1</literal><operator pos:start="73:40" pos:end="73:40">)</operator> <operator pos:start="73:42" pos:end="73:43">&lt;&lt;</operator> <name pos:start="73:45" pos:end="73:65">HPET_ID_NUM_TIM_SHIFT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:47"><expr pos:start="75:5" pos:end="75:46"><name pos:start="75:5" pos:end="75:17"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:17">capability</name></name> <operator pos:start="75:19" pos:end="75:20">|=</operator> <operator pos:start="75:22" pos:end="75:22">(</operator><operator pos:start="75:23" pos:end="75:23">(</operator><name pos:start="75:24" pos:end="75:38">HPET_CLK_PERIOD</name><operator pos:start="75:39" pos:end="75:39">)</operator> <operator pos:start="75:41" pos:end="75:42">&lt;&lt;</operator> <literal type="number" pos:start="75:44" pos:end="75:45">32</literal><operator pos:start="75:46" pos:end="75:46">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:33"><expr pos:start="79:5" pos:end="79:32"><call pos:start="79:5" pos:end="79:32"><name pos:start="79:5" pos:end="79:19">isa_reserve_irq</name><argument_list pos:start="79:20" pos:end="79:32">(<argument pos:start="79:21" pos:end="79:31"><expr pos:start="79:21" pos:end="79:31"><name pos:start="79:21" pos:end="79:31">RTC_ISA_IRQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:58"><expr pos:start="81:5" pos:end="81:57"><call pos:start="81:5" pos:end="81:57"><name pos:start="81:5" pos:end="81:21">qdev_init_gpio_in</name><argument_list pos:start="81:22" pos:end="81:57">(<argument pos:start="81:23" pos:end="81:32"><expr pos:start="81:23" pos:end="81:32"><operator pos:start="81:23" pos:end="81:23">&amp;</operator><name pos:start="81:24" pos:end="81:32"><name pos:start="81:24" pos:end="81:26">dev</name><operator pos:start="81:27" pos:end="81:28">-&gt;</operator><name pos:start="81:29" pos:end="81:32">qdev</name></name></expr></argument>, <argument pos:start="81:35" pos:end="81:53"><expr pos:start="81:35" pos:end="81:53"><name pos:start="81:35" pos:end="81:53">hpet_handle_rtc_irq</name></expr></argument>, <argument pos:start="81:56" pos:end="81:56"><expr pos:start="81:56" pos:end="81:56"><literal type="number" pos:start="81:56" pos:end="81:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:19">/* HPET Area */</comment>

    <expr_stmt pos:start="87:5" pos:end="91:61"><expr pos:start="87:5" pos:end="91:60"><name pos:start="87:5" pos:end="87:13">iomemtype</name> <operator pos:start="87:15" pos:end="87:15">=</operator> <call pos:start="87:17" pos:end="91:60"><name pos:start="87:17" pos:end="87:38">cpu_register_io_memory</name><argument_list pos:start="87:39" pos:end="91:60">(<argument pos:start="87:40" pos:end="87:52"><expr pos:start="87:40" pos:end="87:52"><name pos:start="87:40" pos:end="87:52">hpet_ram_read</name></expr></argument>,

                                       <argument pos:start="89:40" pos:end="89:53"><expr pos:start="89:40" pos:end="89:53"><name pos:start="89:40" pos:end="89:53">hpet_ram_write</name></expr></argument>, <argument pos:start="89:56" pos:end="89:56"><expr pos:start="89:56" pos:end="89:56"><name pos:start="89:56" pos:end="89:56">s</name></expr></argument>,

                                       <argument pos:start="91:40" pos:end="91:59"><expr pos:start="91:40" pos:end="91:59"><name pos:start="91:40" pos:end="91:59">DEVICE_NATIVE_ENDIAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:44"><expr pos:start="93:5" pos:end="93:43"><call pos:start="93:5" pos:end="93:43"><name pos:start="93:5" pos:end="93:20">sysbus_init_mmio</name><argument_list pos:start="93:21" pos:end="93:43">(<argument pos:start="93:22" pos:end="93:24"><expr pos:start="93:22" pos:end="93:24"><name pos:start="93:22" pos:end="93:24">dev</name></expr></argument>, <argument pos:start="93:27" pos:end="93:31"><expr pos:start="93:27" pos:end="93:31"><literal type="number" pos:start="93:27" pos:end="93:31">0x400</literal></expr></argument>, <argument pos:start="93:34" pos:end="93:42"><expr pos:start="93:34" pos:end="93:42"><name pos:start="93:34" pos:end="93:42">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
