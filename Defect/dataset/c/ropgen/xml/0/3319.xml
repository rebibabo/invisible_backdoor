<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3319.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">cpu_loop</name><parameter_list pos:start="1:14" pos:end="1:37">(<parameter pos:start="1:15" pos:end="1:36"><decl pos:start="1:15" pos:end="1:36"><type pos:start="1:15" pos:end="1:33"><name pos:start="1:15" pos:end="1:31">CPUUniCore32State</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="151:1">{<block_content pos:start="5:5" pos:end="149:12">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:45">= <expr pos:start="5:20" pos:end="5:45"><call pos:start="5:20" pos:end="5:45"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:45">(<argument pos:start="5:24" pos:end="5:44"><expr pos:start="5:24" pos:end="5:44"><call pos:start="5:24" pos:end="5:44"><name pos:start="5:24" pos:end="5:39">uc32_env_get_cpu</name><argument_list pos:start="5:40" pos:end="5:44">(<argument pos:start="5:41" pos:end="5:43"><expr pos:start="5:41" pos:end="5:43"><name pos:start="5:41" pos:end="5:43">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">trapnr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">n</name></decl>, <decl pos:start="9:21" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:21" pos:end="9:24">insn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:20">target_siginfo_t</name></type> <name pos:start="11:22" pos:end="11:25">info</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="139:5">for <control pos:start="15:9" pos:end="15:12">(<init pos:start="15:10" pos:end="15:10">;</init><condition pos:start="15:11" pos:end="15:11">;</condition><incr/>)</control> <block pos:start="15:14" pos:end="139:5">{<block_content pos:start="17:9" pos:end="137:37">

        <expr_stmt pos:start="17:9" pos:end="17:27"><expr pos:start="17:9" pos:end="17:26"><call pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:22">cpu_exec_start</name><argument_list pos:start="17:23" pos:end="17:26">(<argument pos:start="17:24" pos:end="17:25"><expr pos:start="17:24" pos:end="17:25"><name pos:start="17:24" pos:end="17:25">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:35"><expr pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:14">trapnr</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:34"><name pos:start="19:18" pos:end="19:30">uc32_cpu_exec</name><argument_list pos:start="19:31" pos:end="19:34">(<argument pos:start="19:32" pos:end="19:33"><expr pos:start="19:32" pos:end="19:33"><name pos:start="19:32" pos:end="19:33">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:25"><expr pos:start="21:9" pos:end="21:24"><call pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:20">cpu_exec_end</name><argument_list pos:start="21:21" pos:end="21:24">(<argument pos:start="21:22" pos:end="21:23"><expr pos:start="21:22" pos:end="21:23"><name pos:start="21:22" pos:end="21:23">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="23:9" pos:end="135:9">switch <condition pos:start="23:16" pos:end="23:23">(<expr pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:22">trapnr</name></expr>)</condition> <block pos:start="23:25" pos:end="135:9">{<block_content pos:start="25:9" pos:end="133:23">

        <case pos:start="25:9" pos:end="25:28">case <expr pos:start="25:14" pos:end="25:27"><name pos:start="25:14" pos:end="25:27">UC32_EXCP_PRIV</name></expr>:</case>

            <block pos:start="27:13" pos:end="77:13">{<block_content pos:start="31:17" pos:end="75:17">

                <comment type="block" pos:start="29:17" pos:end="29:33">/* system call */</comment>

                <expr_stmt pos:start="31:17" pos:end="31:54"><expr pos:start="31:17" pos:end="31:53"><call pos:start="31:17" pos:end="31:53"><name pos:start="31:17" pos:end="31:28">get_user_u32</name><argument_list pos:start="31:29" pos:end="31:53">(<argument pos:start="31:30" pos:end="31:33"><expr pos:start="31:30" pos:end="31:33"><name pos:start="31:30" pos:end="31:33">insn</name></expr></argument>, <argument pos:start="31:36" pos:end="31:52"><expr pos:start="31:36" pos:end="31:52"><name pos:start="31:36" pos:end="31:48"><name pos:start="31:36" pos:end="31:38">env</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:44">regs</name><index pos:start="31:45" pos:end="31:48">[<expr pos:start="31:46" pos:end="31:47"><literal type="number" pos:start="31:46" pos:end="31:47">31</literal></expr>]</index></name> <operator pos:start="31:50" pos:end="31:50">-</operator> <literal type="number" pos:start="31:52" pos:end="31:52">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:36"><expr pos:start="33:17" pos:end="33:35"><name pos:start="33:17" pos:end="33:17">n</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <name pos:start="33:21" pos:end="33:24">insn</name> <operator pos:start="33:26" pos:end="33:26">&amp;</operator> <literal type="number" pos:start="33:28" pos:end="33:35">0xffffff</literal></expr>;</expr_stmt>



                <if_stmt pos:start="37:17" pos:end="75:17"><if pos:start="37:17" pos:end="71:17">if <condition pos:start="37:20" pos:end="37:43">(<expr pos:start="37:21" pos:end="37:42"><name pos:start="37:21" pos:end="37:21">n</name> <operator pos:start="37:23" pos:end="37:24">&gt;=</operator> <name pos:start="37:26" pos:end="37:42">UC32_SYSCALL_BASE</name></expr>)</condition> <block pos:start="37:45" pos:end="71:17">{<block_content pos:start="41:21" pos:end="69:21">

                    <comment type="block" pos:start="39:21" pos:end="39:39">/* linux syscall */</comment>

                    <expr_stmt pos:start="41:21" pos:end="41:43"><expr pos:start="41:21" pos:end="41:42"><name pos:start="41:21" pos:end="41:21">n</name> <operator pos:start="41:23" pos:end="41:24">-=</operator> <name pos:start="41:26" pos:end="41:42">UC32_SYSCALL_BASE</name></expr>;</expr_stmt>

                    <if_stmt pos:start="43:21" pos:end="69:21"><if pos:start="43:21" pos:end="49:21">if <condition pos:start="43:24" pos:end="43:53">(<expr pos:start="43:25" pos:end="43:52"><name pos:start="43:25" pos:end="43:25">n</name> <operator pos:start="43:27" pos:end="43:28">==</operator> <name pos:start="43:30" pos:end="43:52">UC32_SYSCALL_NR_set_tls</name></expr>)</condition> <block pos:start="43:55" pos:end="49:21">{<block_content pos:start="45:29" pos:end="47:45">

                            <expr_stmt pos:start="45:29" pos:end="45:59"><expr pos:start="45:29" pos:end="45:58"><call pos:start="45:29" pos:end="45:58"><name pos:start="45:29" pos:end="45:39">cpu_set_tls</name><argument_list pos:start="45:40" pos:end="45:58">(<argument pos:start="45:41" pos:end="45:43"><expr pos:start="45:41" pos:end="45:43"><name pos:start="45:41" pos:end="45:43">env</name></expr></argument>, <argument pos:start="45:46" pos:end="45:57"><expr pos:start="45:46" pos:end="45:57"><name pos:start="45:46" pos:end="45:57"><name pos:start="45:46" pos:end="45:48">env</name><operator pos:start="45:49" pos:end="45:50">-&gt;</operator><name pos:start="45:51" pos:end="45:54">regs</name><index pos:start="45:55" pos:end="45:57">[<expr pos:start="45:56" pos:end="45:56"><literal type="number" pos:start="45:56" pos:end="45:56">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="47:29" pos:end="47:45"><expr pos:start="47:29" pos:end="47:44"><name pos:start="47:29" pos:end="47:40"><name pos:start="47:29" pos:end="47:31">env</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:37">regs</name><index pos:start="47:38" pos:end="47:40">[<expr pos:start="47:39" pos:end="47:39"><literal type="number" pos:start="47:39" pos:end="47:39">0</literal></expr>]</index></name> <operator pos:start="47:42" pos:end="47:42">=</operator> <literal type="number" pos:start="47:44" pos:end="47:44">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="49:23" pos:end="69:21">else <block pos:start="49:28" pos:end="69:21">{<block_content pos:start="51:25" pos:end="67:56">

                        <expr_stmt pos:start="51:25" pos:end="67:56"><expr pos:start="51:25" pos:end="67:55"><name pos:start="51:25" pos:end="51:36"><name pos:start="51:25" pos:end="51:27">env</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:33">regs</name><index pos:start="51:34" pos:end="51:36">[<expr pos:start="51:35" pos:end="51:35"><literal type="number" pos:start="51:35" pos:end="51:35">0</literal></expr>]</index></name> <operator pos:start="51:38" pos:end="51:38">=</operator> <call pos:start="51:40" pos:end="67:55"><name pos:start="51:40" pos:end="51:49">do_syscall</name><argument_list pos:start="51:50" pos:end="67:55">(<argument pos:start="51:51" pos:end="51:53"><expr pos:start="51:51" pos:end="51:53"><name pos:start="51:51" pos:end="51:53">env</name></expr></argument>,

                                                  <argument pos:start="53:51" pos:end="53:51"><expr pos:start="53:51" pos:end="53:51"><name pos:start="53:51" pos:end="53:51">n</name></expr></argument>,

                                                  <argument pos:start="55:51" pos:end="55:62"><expr pos:start="55:51" pos:end="55:62"><name pos:start="55:51" pos:end="55:62"><name pos:start="55:51" pos:end="55:53">env</name><operator pos:start="55:54" pos:end="55:55">-&gt;</operator><name pos:start="55:56" pos:end="55:59">regs</name><index pos:start="55:60" pos:end="55:62">[<expr pos:start="55:61" pos:end="55:61"><literal type="number" pos:start="55:61" pos:end="55:61">0</literal></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="57:51" pos:end="57:62"><expr pos:start="57:51" pos:end="57:62"><name pos:start="57:51" pos:end="57:62"><name pos:start="57:51" pos:end="57:53">env</name><operator pos:start="57:54" pos:end="57:55">-&gt;</operator><name pos:start="57:56" pos:end="57:59">regs</name><index pos:start="57:60" pos:end="57:62">[<expr pos:start="57:61" pos:end="57:61"><literal type="number" pos:start="57:61" pos:end="57:61">1</literal></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="59:51" pos:end="59:62"><expr pos:start="59:51" pos:end="59:62"><name pos:start="59:51" pos:end="59:62"><name pos:start="59:51" pos:end="59:53">env</name><operator pos:start="59:54" pos:end="59:55">-&gt;</operator><name pos:start="59:56" pos:end="59:59">regs</name><index pos:start="59:60" pos:end="59:62">[<expr pos:start="59:61" pos:end="59:61"><literal type="number" pos:start="59:61" pos:end="59:61">2</literal></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="61:51" pos:end="61:62"><expr pos:start="61:51" pos:end="61:62"><name pos:start="61:51" pos:end="61:62"><name pos:start="61:51" pos:end="61:53">env</name><operator pos:start="61:54" pos:end="61:55">-&gt;</operator><name pos:start="61:56" pos:end="61:59">regs</name><index pos:start="61:60" pos:end="61:62">[<expr pos:start="61:61" pos:end="61:61"><literal type="number" pos:start="61:61" pos:end="61:61">3</literal></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="63:51" pos:end="63:62"><expr pos:start="63:51" pos:end="63:62"><name pos:start="63:51" pos:end="63:62"><name pos:start="63:51" pos:end="63:53">env</name><operator pos:start="63:54" pos:end="63:55">-&gt;</operator><name pos:start="63:56" pos:end="63:59">regs</name><index pos:start="63:60" pos:end="63:62">[<expr pos:start="63:61" pos:end="63:61"><literal type="number" pos:start="63:61" pos:end="63:61">4</literal></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="65:51" pos:end="65:62"><expr pos:start="65:51" pos:end="65:62"><name pos:start="65:51" pos:end="65:62"><name pos:start="65:51" pos:end="65:53">env</name><operator pos:start="65:54" pos:end="65:55">-&gt;</operator><name pos:start="65:56" pos:end="65:59">regs</name><index pos:start="65:60" pos:end="65:62">[<expr pos:start="65:61" pos:end="65:61"><literal type="number" pos:start="65:61" pos:end="65:61">5</literal></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="67:51" pos:end="67:51"><expr pos:start="67:51" pos:end="67:51"><literal type="number" pos:start="67:51" pos:end="67:51">0</literal></expr></argument>, <argument pos:start="67:54" pos:end="67:54"><expr pos:start="67:54" pos:end="67:54"><literal type="number" pos:start="67:54" pos:end="67:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="71:19" pos:end="75:17">else <block pos:start="71:24" pos:end="75:17">{<block_content pos:start="73:21" pos:end="73:31">

                    <goto pos:start="73:21" pos:end="73:31">goto <name pos:start="73:26" pos:end="73:30">error</name>;</goto>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        <case pos:start="81:9" pos:end="81:29">case <expr pos:start="81:14" pos:end="81:28"><name pos:start="81:14" pos:end="81:28">UC32_EXCP_DTRAP</name></expr>:</case>

        <case pos:start="83:9" pos:end="83:29">case <expr pos:start="83:14" pos:end="83:28"><name pos:start="83:14" pos:end="83:28">UC32_EXCP_ITRAP</name></expr>:</case>

            <expr_stmt pos:start="85:13" pos:end="85:43"><expr pos:start="85:13" pos:end="85:42"><name pos:start="85:13" pos:end="85:25"><name pos:start="85:13" pos:end="85:16">info</name><operator pos:start="85:17" pos:end="85:17">.</operator><name pos:start="85:18" pos:end="85:25">si_signo</name></name> <operator pos:start="85:27" pos:end="85:27">=</operator> <name pos:start="85:29" pos:end="85:42">TARGET_SIGSEGV</name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:30"><expr pos:start="87:13" pos:end="87:29"><name pos:start="87:13" pos:end="87:25"><name pos:start="87:13" pos:end="87:16">info</name><operator pos:start="87:17" pos:end="87:17">.</operator><name pos:start="87:18" pos:end="87:25">si_errno</name></name> <operator pos:start="87:27" pos:end="87:27">=</operator> <literal type="number" pos:start="87:29" pos:end="87:29">0</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="89:13" pos:end="89:44">/* XXX: check env-&gt;error_code */</comment>

            <expr_stmt pos:start="91:13" pos:end="91:46"><expr pos:start="91:13" pos:end="91:45"><name pos:start="91:13" pos:end="91:24"><name pos:start="91:13" pos:end="91:16">info</name><operator pos:start="91:17" pos:end="91:17">.</operator><name pos:start="91:18" pos:end="91:24">si_code</name></name> <operator pos:start="91:26" pos:end="91:26">=</operator> <name pos:start="91:28" pos:end="91:45">TARGET_SEGV_MAPERR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:67"><expr pos:start="93:13" pos:end="93:66"><name pos:start="93:13" pos:end="93:42"><name pos:start="93:13" pos:end="93:16">info</name><operator pos:start="93:17" pos:end="93:17">.</operator><name pos:start="93:18" pos:end="93:26">_sifields</name><operator pos:start="93:27" pos:end="93:27">.</operator><name pos:start="93:28" pos:end="93:36">_sigfault</name><operator pos:start="93:37" pos:end="93:37">.</operator><name pos:start="93:38" pos:end="93:42">_addr</name></name> <operator pos:start="93:44" pos:end="93:44">=</operator> <name pos:start="93:46" pos:end="93:66"><name pos:start="93:46" pos:end="93:48">env</name><operator pos:start="93:49" pos:end="93:50">-&gt;</operator><name pos:start="93:51" pos:end="93:53">cp0</name><operator pos:start="93:54" pos:end="93:54">.</operator><name pos:start="93:55" pos:end="93:66">c4_faultaddr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:52"><expr pos:start="95:13" pos:end="95:51"><call pos:start="95:13" pos:end="95:51"><name pos:start="95:13" pos:end="95:24">queue_signal</name><argument_list pos:start="95:25" pos:end="95:51">(<argument pos:start="95:26" pos:end="95:28"><expr pos:start="95:26" pos:end="95:28"><name pos:start="95:26" pos:end="95:28">env</name></expr></argument>, <argument pos:start="95:31" pos:end="95:43"><expr pos:start="95:31" pos:end="95:43"><name pos:start="95:31" pos:end="95:43"><name pos:start="95:31" pos:end="95:34">info</name><operator pos:start="95:35" pos:end="95:35">.</operator><name pos:start="95:36" pos:end="95:43">si_signo</name></name></expr></argument>, <argument pos:start="95:46" pos:end="95:50"><expr pos:start="95:46" pos:end="95:50"><operator pos:start="95:46" pos:end="95:46">&amp;</operator><name pos:start="95:47" pos:end="95:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        <case pos:start="99:9" pos:end="99:28">case <expr pos:start="99:14" pos:end="99:27"><name pos:start="99:14" pos:end="99:27">EXCP_INTERRUPT</name></expr>:</case>

            <comment type="block" pos:start="101:13" pos:end="101:67">/* just indicate that signals should be handled asap */</comment>

            <break pos:start="103:13" pos:end="103:18">break;</break>

        <case pos:start="105:9" pos:end="105:24">case <expr pos:start="105:14" pos:end="105:23"><name pos:start="105:14" pos:end="105:23">EXCP_DEBUG</name></expr>:</case>

            <block pos:start="107:13" pos:end="127:13">{<block_content pos:start="109:17" pos:end="125:17">

                <decl_stmt pos:start="109:17" pos:end="109:24"><decl pos:start="109:17" pos:end="109:23"><type pos:start="109:17" pos:end="109:19"><name pos:start="109:17" pos:end="109:19">int</name></type> <name pos:start="109:21" pos:end="109:23">sig</name></decl>;</decl_stmt>



                <expr_stmt pos:start="113:17" pos:end="113:56"><expr pos:start="113:17" pos:end="113:55"><name pos:start="113:17" pos:end="113:19">sig</name> <operator pos:start="113:21" pos:end="113:21">=</operator> <call pos:start="113:23" pos:end="113:55"><name pos:start="113:23" pos:end="113:35">gdb_handlesig</name><argument_list pos:start="113:36" pos:end="113:55">(<argument pos:start="113:37" pos:end="113:38"><expr pos:start="113:37" pos:end="113:38"><name pos:start="113:37" pos:end="113:38">cs</name></expr></argument>, <argument pos:start="113:41" pos:end="113:54"><expr pos:start="113:41" pos:end="113:54"><name pos:start="113:41" pos:end="113:54">TARGET_SIGTRAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="115:17" pos:end="125:17"><if pos:start="115:17" pos:end="125:17">if <condition pos:start="115:20" pos:end="115:24">(<expr pos:start="115:21" pos:end="115:23"><name pos:start="115:21" pos:end="115:23">sig</name></expr>)</condition> <block pos:start="115:26" pos:end="125:17">{<block_content pos:start="117:21" pos:end="123:60">

                    <expr_stmt pos:start="117:21" pos:end="117:40"><expr pos:start="117:21" pos:end="117:39"><name pos:start="117:21" pos:end="117:33"><name pos:start="117:21" pos:end="117:24">info</name><operator pos:start="117:25" pos:end="117:25">.</operator><name pos:start="117:26" pos:end="117:33">si_signo</name></name> <operator pos:start="117:35" pos:end="117:35">=</operator> <name pos:start="117:37" pos:end="117:39">sig</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="119:21" pos:end="119:38"><expr pos:start="119:21" pos:end="119:37"><name pos:start="119:21" pos:end="119:33"><name pos:start="119:21" pos:end="119:24">info</name><operator pos:start="119:25" pos:end="119:25">.</operator><name pos:start="119:26" pos:end="119:33">si_errno</name></name> <operator pos:start="119:35" pos:end="119:35">=</operator> <literal type="number" pos:start="119:37" pos:end="119:37">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="121:21" pos:end="121:53"><expr pos:start="121:21" pos:end="121:52"><name pos:start="121:21" pos:end="121:32"><name pos:start="121:21" pos:end="121:24">info</name><operator pos:start="121:25" pos:end="121:25">.</operator><name pos:start="121:26" pos:end="121:32">si_code</name></name> <operator pos:start="121:34" pos:end="121:34">=</operator> <name pos:start="121:36" pos:end="121:52">TARGET_TRAP_BRKPT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="123:21" pos:end="123:60"><expr pos:start="123:21" pos:end="123:59"><call pos:start="123:21" pos:end="123:59"><name pos:start="123:21" pos:end="123:32">queue_signal</name><argument_list pos:start="123:33" pos:end="123:59">(<argument pos:start="123:34" pos:end="123:36"><expr pos:start="123:34" pos:end="123:36"><name pos:start="123:34" pos:end="123:36">env</name></expr></argument>, <argument pos:start="123:39" pos:end="123:51"><expr pos:start="123:39" pos:end="123:51"><name pos:start="123:39" pos:end="123:51"><name pos:start="123:39" pos:end="123:42">info</name><operator pos:start="123:43" pos:end="123:43">.</operator><name pos:start="123:44" pos:end="123:51">si_signo</name></name></expr></argument>, <argument pos:start="123:54" pos:end="123:58"><expr pos:start="123:54" pos:end="123:58"><operator pos:start="123:54" pos:end="123:54">&amp;</operator><name pos:start="123:55" pos:end="123:58">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="129:13" pos:end="129:18">break;</break>

        <default pos:start="131:9" pos:end="131:16">default:</default>

            <goto pos:start="133:13" pos:end="133:23">goto <name pos:start="133:18" pos:end="133:22">error</name>;</goto>

        </block_content>}</block></switch>

        <expr_stmt pos:start="137:9" pos:end="137:37"><expr pos:start="137:9" pos:end="137:36"><call pos:start="137:9" pos:end="137:36"><name pos:start="137:9" pos:end="137:31">process_pending_signals</name><argument_list pos:start="137:32" pos:end="137:36">(<argument pos:start="137:33" pos:end="137:35"><expr pos:start="137:33" pos:end="137:35"><name pos:start="137:33" pos:end="137:35">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



<label pos:start="143:1" pos:end="143:6"><name pos:start="143:1" pos:end="143:5">error</name>:</label>

    <expr_stmt pos:start="145:5" pos:end="145:79"><expr pos:start="145:5" pos:end="145:78"><call pos:start="145:5" pos:end="145:78"><name pos:start="145:5" pos:end="145:11">fprintf</name><argument_list pos:start="145:12" pos:end="145:78">(<argument pos:start="145:13" pos:end="145:18"><expr pos:start="145:13" pos:end="145:18"><name pos:start="145:13" pos:end="145:18">stderr</name></expr></argument>, <argument pos:start="145:21" pos:end="145:69"><expr pos:start="145:21" pos:end="145:69"><literal type="string" pos:start="145:21" pos:end="145:69">"qemu: unhandled CPU exception 0x%x - aborting\n"</literal></expr></argument>, <argument pos:start="145:72" pos:end="145:77"><expr pos:start="145:72" pos:end="145:77"><name pos:start="145:72" pos:end="145:77">trapnr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:43"><expr pos:start="147:5" pos:end="147:42"><call pos:start="147:5" pos:end="147:42"><name pos:start="147:5" pos:end="147:18">cpu_dump_state</name><argument_list pos:start="147:19" pos:end="147:42">(<argument pos:start="147:20" pos:end="147:21"><expr pos:start="147:20" pos:end="147:21"><name pos:start="147:20" pos:end="147:21">cs</name></expr></argument>, <argument pos:start="147:24" pos:end="147:29"><expr pos:start="147:24" pos:end="147:29"><name pos:start="147:24" pos:end="147:29">stderr</name></expr></argument>, <argument pos:start="147:32" pos:end="147:38"><expr pos:start="147:32" pos:end="147:38"><name pos:start="147:32" pos:end="147:38">fprintf</name></expr></argument>, <argument pos:start="147:41" pos:end="147:41"><expr pos:start="147:41" pos:end="147:41"><literal type="number" pos:start="147:41" pos:end="147:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:12"><expr pos:start="149:5" pos:end="149:11"><call pos:start="149:5" pos:end="149:11"><name pos:start="149:5" pos:end="149:9">abort</name><argument_list pos:start="149:10" pos:end="149:11">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
