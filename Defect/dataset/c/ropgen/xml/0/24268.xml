<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24268.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">write_extradata</name><parameter_list pos:start="1:27" pos:end="1:42">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:38">FFV1Context</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="143:1">{<block_content pos:start="5:5" pos:end="141:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:14">RangeCoder</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier><specifier pos:start="5:17" pos:end="5:21">const</specifier></type> <name pos:start="5:23" pos:end="5:23">c</name> <init pos:start="5:25" pos:end="5:31">= <expr pos:start="5:27" pos:end="5:31"><operator pos:start="5:27" pos:end="5:27">&amp;</operator><name pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:28">f</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:31">c</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:31"><name pos:start="7:13" pos:end="7:17">state</name><index pos:start="7:18" pos:end="7:31">[<expr pos:start="7:19" pos:end="7:30"><name pos:start="7:19" pos:end="7:30">CONTEXT_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:36"><name pos:start="11:13" pos:end="11:18">state2</name><index pos:start="11:19" pos:end="11:22">[<expr pos:start="11:20" pos:end="11:21"><literal type="number" pos:start="11:20" pos:end="11:21">32</literal></expr>]</index><index pos:start="11:23" pos:end="11:36">[<expr pos:start="11:24" pos:end="11:35"><name pos:start="11:24" pos:end="11:35">CONTEXT_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:14">v</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:40"><expr pos:start="17:5" pos:end="17:39"><call pos:start="17:5" pos:end="17:39"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:39">(<argument pos:start="17:12" pos:end="17:17"><expr pos:start="17:12" pos:end="17:17"><name pos:start="17:12" pos:end="17:17">state2</name></expr></argument>, <argument pos:start="17:20" pos:end="17:22"><expr pos:start="17:20" pos:end="17:22"><literal type="number" pos:start="17:20" pos:end="17:22">128</literal></expr></argument>, <argument pos:start="17:25" pos:end="17:38"><expr pos:start="17:25" pos:end="17:38"><sizeof pos:start="17:25" pos:end="17:38">sizeof<argument_list pos:start="17:31" pos:end="17:38">(<argument pos:start="17:32" pos:end="17:37"><expr pos:start="17:32" pos:end="17:37"><name pos:start="17:32" pos:end="17:37">state2</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><call pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:10">memset</name><argument_list pos:start="19:11" pos:end="19:37">(<argument pos:start="19:12" pos:end="19:16"><expr pos:start="19:12" pos:end="19:16"><name pos:start="19:12" pos:end="19:16">state</name></expr></argument>, <argument pos:start="19:19" pos:end="19:21"><expr pos:start="19:19" pos:end="19:21"><literal type="number" pos:start="19:19" pos:end="19:21">128</literal></expr></argument>, <argument pos:start="19:24" pos:end="19:36"><expr pos:start="19:24" pos:end="19:36"><sizeof pos:start="19:24" pos:end="19:36">sizeof<argument_list pos:start="19:30" pos:end="19:36">(<argument pos:start="19:31" pos:end="19:35"><expr pos:start="19:31" pos:end="19:35"><name pos:start="19:31" pos:end="19:35">state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="25:78"><expr pos:start="23:5" pos:end="25:77"><name pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:5">f</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:12">avctx</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:28">extradata_size</name></name> <operator pos:start="23:30" pos:end="23:30">=</operator> <literal type="number" pos:start="23:32" pos:end="23:38">10000</literal> <operator pos:start="23:38" pos:end="23:38">+</operator> <literal type="number" pos:start="23:40" pos:end="23:42">4</literal> <operator pos:start="23:42" pos:end="23:42">+</operator>

                                    <operator pos:start="25:37" pos:end="25:37">(</operator><literal type="number" pos:start="25:38" pos:end="25:39">11</literal> <operator pos:start="25:41" pos:end="25:41">*</operator> <literal type="number" pos:start="25:43" pos:end="25:44">11</literal> <operator pos:start="25:46" pos:end="25:46">*</operator> <literal type="number" pos:start="25:48" pos:end="25:48">5</literal> <operator pos:start="25:50" pos:end="25:50">*</operator> <literal type="number" pos:start="25:52" pos:end="25:52">5</literal> <operator pos:start="25:54" pos:end="25:54">*</operator> <literal type="number" pos:start="25:56" pos:end="25:58">5</literal> <operator pos:start="25:58" pos:end="25:58">+</operator> <literal type="number" pos:start="25:60" pos:end="25:61">11</literal> <operator pos:start="25:63" pos:end="25:63">*</operator> <literal type="number" pos:start="25:65" pos:end="25:66">11</literal> <operator pos:start="25:68" pos:end="25:68">*</operator> <literal type="number" pos:start="25:70" pos:end="25:71">11</literal><operator pos:start="25:72" pos:end="25:72">)</operator> <operator pos:start="25:74" pos:end="25:74">*</operator> <literal type="number" pos:start="25:76" pos:end="25:77">32</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:62"><expr pos:start="27:5" pos:end="27:61"><name pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:5">f</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:12">avctx</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:23">extradata</name></name> <operator pos:start="27:25" pos:end="27:25">=</operator> <call pos:start="27:27" pos:end="27:61"><name pos:start="27:27" pos:end="27:35">av_malloc</name><argument_list pos:start="27:36" pos:end="27:61">(<argument pos:start="27:37" pos:end="27:60"><expr pos:start="27:37" pos:end="27:60"><name pos:start="27:37" pos:end="27:60"><name pos:start="27:37" pos:end="27:37">f</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:44">avctx</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:60">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:76"><expr pos:start="29:5" pos:end="29:75"><call pos:start="29:5" pos:end="29:75"><name pos:start="29:5" pos:end="29:25">ff_init_range_encoder</name><argument_list pos:start="29:26" pos:end="29:75">(<argument pos:start="29:27" pos:end="29:27"><expr pos:start="29:27" pos:end="29:27"><name pos:start="29:27" pos:end="29:27">c</name></expr></argument>, <argument pos:start="29:30" pos:end="29:48"><expr pos:start="29:30" pos:end="29:48"><name pos:start="29:30" pos:end="29:48"><name pos:start="29:30" pos:end="29:30">f</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:37">avctx</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:48">extradata</name></name></expr></argument>, <argument pos:start="29:51" pos:end="29:74"><expr pos:start="29:51" pos:end="29:74"><name pos:start="29:51" pos:end="29:74"><name pos:start="29:51" pos:end="29:51">f</name><operator pos:start="29:52" pos:end="29:53">-&gt;</operator><name pos:start="29:54" pos:end="29:58">avctx</name><operator pos:start="29:59" pos:end="29:60">-&gt;</operator><name pos:start="29:61" pos:end="29:74">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:56"><expr pos:start="31:5" pos:end="31:55"><call pos:start="31:5" pos:end="31:55"><name pos:start="31:5" pos:end="31:23">ff_build_rac_states</name><argument_list pos:start="31:24" pos:end="31:55">(<argument pos:start="31:25" pos:end="31:25"><expr pos:start="31:25" pos:end="31:25"><name pos:start="31:25" pos:end="31:25">c</name></expr></argument>, <argument pos:start="31:28" pos:end="31:45"><expr pos:start="31:28" pos:end="31:45"><literal type="number" pos:start="31:28" pos:end="31:31">0.05</literal> <operator pos:start="31:33" pos:end="31:33">*</operator> <operator pos:start="31:35" pos:end="31:35">(</operator><literal type="number" pos:start="31:36" pos:end="31:38">1LL</literal> <operator pos:start="31:40" pos:end="31:41">&lt;&lt;</operator> <literal type="number" pos:start="31:43" pos:end="31:44">32</literal><operator pos:start="31:45" pos:end="31:45">)</operator></expr></argument>, <argument pos:start="31:48" pos:end="31:54"><expr pos:start="31:48" pos:end="31:54"><literal type="number" pos:start="31:48" pos:end="31:52">256</literal> <operator pos:start="31:52" pos:end="31:52">-</operator> <literal type="number" pos:start="31:54" pos:end="31:54">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><call pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:14">put_symbol</name><argument_list pos:start="35:15" pos:end="35:39">(<argument pos:start="35:16" pos:end="35:16"><expr pos:start="35:16" pos:end="35:16"><name pos:start="35:16" pos:end="35:16">c</name></expr></argument>, <argument pos:start="35:19" pos:end="35:23"><expr pos:start="35:19" pos:end="35:23"><name pos:start="35:19" pos:end="35:23">state</name></expr></argument>, <argument pos:start="35:26" pos:end="35:35"><expr pos:start="35:26" pos:end="35:35"><name pos:start="35:26" pos:end="35:35"><name pos:start="35:26" pos:end="35:26">f</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:35">version</name></name></expr></argument>, <argument pos:start="35:38" pos:end="35:38"><expr pos:start="35:38" pos:end="35:38"><literal type="number" pos:start="35:38" pos:end="35:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:23">(<expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:9">f</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:18">version</name></name> <operator pos:start="37:20" pos:end="37:20">&gt;</operator> <literal type="number" pos:start="37:22" pos:end="37:22">2</literal></expr>)</condition> <block pos:start="37:25" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:50">

        <if_stmt pos:start="39:9" pos:end="41:33"><if pos:start="39:9" pos:end="41:33">if <condition pos:start="39:12" pos:end="39:28">(<expr pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:13">f</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:22">version</name></name> <operator pos:start="39:24" pos:end="39:25">==</operator> <literal type="number" pos:start="39:27" pos:end="39:27">3</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:33"><block_content pos:start="41:13" pos:end="41:33">

            <expr_stmt pos:start="41:13" pos:end="41:33"><expr pos:start="41:13" pos:end="41:32"><name pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:13">f</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:28">minor_version</name></name> <operator pos:start="41:30" pos:end="41:30">=</operator> <literal type="number" pos:start="41:32" pos:end="41:32">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:50"><expr pos:start="43:9" pos:end="43:49"><call pos:start="43:9" pos:end="43:49"><name pos:start="43:9" pos:end="43:18">put_symbol</name><argument_list pos:start="43:19" pos:end="43:49">(<argument pos:start="43:20" pos:end="43:20"><expr pos:start="43:20" pos:end="43:20"><name pos:start="43:20" pos:end="43:20">c</name></expr></argument>, <argument pos:start="43:23" pos:end="43:27"><expr pos:start="43:23" pos:end="43:27"><name pos:start="43:23" pos:end="43:27">state</name></expr></argument>, <argument pos:start="43:30" pos:end="43:45"><expr pos:start="43:30" pos:end="43:45"><name pos:start="43:30" pos:end="43:45"><name pos:start="43:30" pos:end="43:30">f</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:45">minor_version</name></name></expr></argument>, <argument pos:start="43:48" pos:end="43:48"><expr pos:start="43:48" pos:end="43:48"><literal type="number" pos:start="43:48" pos:end="43:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:35"><expr pos:start="49:5" pos:end="49:34"><call pos:start="49:5" pos:end="49:34"><name pos:start="49:5" pos:end="49:14">put_symbol</name><argument_list pos:start="49:15" pos:end="49:34">(<argument pos:start="49:16" pos:end="49:16"><expr pos:start="49:16" pos:end="49:16"><name pos:start="49:16" pos:end="49:16">c</name></expr></argument>, <argument pos:start="49:19" pos:end="49:23"><expr pos:start="49:19" pos:end="49:23"><name pos:start="49:19" pos:end="49:23">state</name></expr></argument>, <argument pos:start="49:26" pos:end="49:30"><expr pos:start="49:26" pos:end="49:30"><name pos:start="49:26" pos:end="49:30"><name pos:start="49:26" pos:end="49:26">f</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:30">ac</name></name></expr></argument>, <argument pos:start="49:33" pos:end="49:33"><expr pos:start="49:33" pos:end="49:33"><literal type="number" pos:start="49:33" pos:end="49:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="55:78"><if pos:start="51:5" pos:end="55:78">if <condition pos:start="51:8" pos:end="51:18">(<expr pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:13"><name pos:start="51:9" pos:end="51:9">f</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:13">ac</name></name> <operator pos:start="51:15" pos:end="51:15">&gt;</operator> <literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="55:78"><block_content pos:start="53:9" pos:end="55:78">

        <for pos:start="53:9" pos:end="55:78">for <control pos:start="53:13" pos:end="53:33">(<init pos:start="53:14" pos:end="53:19"><expr pos:start="53:14" pos:end="53:18"><name pos:start="53:14" pos:end="53:14">i</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <literal type="number" pos:start="53:18" pos:end="53:18">1</literal></expr>;</init> <condition pos:start="53:21" pos:end="53:28"><expr pos:start="53:21" pos:end="53:27"><name pos:start="53:21" pos:end="53:21">i</name> <operator pos:start="53:23" pos:end="53:23">&lt;</operator> <literal type="number" pos:start="53:25" pos:end="53:27">256</literal></expr>;</condition> <incr pos:start="53:30" pos:end="53:32"><expr pos:start="53:30" pos:end="53:32"><name pos:start="53:30" pos:end="53:30">i</name><operator pos:start="53:31" pos:end="53:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="55:13" pos:end="55:78"><block_content pos:start="55:13" pos:end="55:78">

            <expr_stmt pos:start="55:13" pos:end="55:78"><expr pos:start="55:13" pos:end="55:77"><call pos:start="55:13" pos:end="55:77"><name pos:start="55:13" pos:end="55:22">put_symbol</name><argument_list pos:start="55:23" pos:end="55:77">(<argument pos:start="55:24" pos:end="55:24"><expr pos:start="55:24" pos:end="55:24"><name pos:start="55:24" pos:end="55:24">c</name></expr></argument>, <argument pos:start="55:27" pos:end="55:31"><expr pos:start="55:27" pos:end="55:31"><name pos:start="55:27" pos:end="55:31">state</name></expr></argument>, <argument pos:start="55:34" pos:end="55:73"><expr pos:start="55:34" pos:end="55:73"><name pos:start="55:34" pos:end="55:55"><name pos:start="55:34" pos:end="55:34">f</name><operator pos:start="55:35" pos:end="55:36">-&gt;</operator><name pos:start="55:37" pos:end="55:52">state_transition</name><index pos:start="55:53" pos:end="55:55">[<expr pos:start="55:54" pos:end="55:54"><name pos:start="55:54" pos:end="55:54">i</name></expr>]</index></name> <operator pos:start="55:57" pos:end="55:57">-</operator> <name pos:start="55:59" pos:end="55:73"><name pos:start="55:59" pos:end="55:59">c</name><operator pos:start="55:60" pos:end="55:61">-&gt;</operator><name pos:start="55:62" pos:end="55:70">one_state</name><index pos:start="55:71" pos:end="55:73">[<expr pos:start="55:72" pos:end="55:72"><name pos:start="55:72" pos:end="55:72">i</name></expr>]</index></name></expr></argument>, <argument pos:start="55:76" pos:end="55:76"><expr pos:start="55:76" pos:end="55:76"><literal type="number" pos:start="55:76" pos:end="55:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:43"><expr pos:start="59:5" pos:end="59:42"><call pos:start="59:5" pos:end="59:42"><name pos:start="59:5" pos:end="59:14">put_symbol</name><argument_list pos:start="59:15" pos:end="59:42">(<argument pos:start="59:16" pos:end="59:16"><expr pos:start="59:16" pos:end="59:16"><name pos:start="59:16" pos:end="59:16">c</name></expr></argument>, <argument pos:start="59:19" pos:end="59:23"><expr pos:start="59:19" pos:end="59:23"><name pos:start="59:19" pos:end="59:23">state</name></expr></argument>, <argument pos:start="59:26" pos:end="59:38"><expr pos:start="59:26" pos:end="59:38"><name pos:start="59:26" pos:end="59:38"><name pos:start="59:26" pos:end="59:26">f</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:38">colorspace</name></name></expr></argument>, <argument pos:start="59:41" pos:end="59:41"><expr pos:start="59:41" pos:end="59:41"><literal type="number" pos:start="59:41" pos:end="59:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="59:45" pos:end="59:58">// YUV cs type</comment>

    <expr_stmt pos:start="61:5" pos:end="61:52"><expr pos:start="61:5" pos:end="61:51"><call pos:start="61:5" pos:end="61:51"><name pos:start="61:5" pos:end="61:14">put_symbol</name><argument_list pos:start="61:15" pos:end="61:51">(<argument pos:start="61:16" pos:end="61:16"><expr pos:start="61:16" pos:end="61:16"><name pos:start="61:16" pos:end="61:16">c</name></expr></argument>, <argument pos:start="61:19" pos:end="61:23"><expr pos:start="61:19" pos:end="61:23"><name pos:start="61:19" pos:end="61:23">state</name></expr></argument>, <argument pos:start="61:26" pos:end="61:47"><expr pos:start="61:26" pos:end="61:47"><name pos:start="61:26" pos:end="61:47"><name pos:start="61:26" pos:end="61:26">f</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:47">bits_per_raw_sample</name></name></expr></argument>, <argument pos:start="61:50" pos:end="61:50"><expr pos:start="61:50" pos:end="61:50"><literal type="number" pos:start="61:50" pos:end="61:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:40"><expr pos:start="63:5" pos:end="63:39"><call pos:start="63:5" pos:end="63:39"><name pos:start="63:5" pos:end="63:11">put_rac</name><argument_list pos:start="63:12" pos:end="63:39">(<argument pos:start="63:13" pos:end="63:13"><expr pos:start="63:13" pos:end="63:13"><name pos:start="63:13" pos:end="63:13">c</name></expr></argument>, <argument pos:start="63:16" pos:end="63:20"><expr pos:start="63:16" pos:end="63:20"><name pos:start="63:16" pos:end="63:20">state</name></expr></argument>, <argument pos:start="63:23" pos:end="63:38"><expr pos:start="63:23" pos:end="63:38"><name pos:start="63:23" pos:end="63:38"><name pos:start="63:23" pos:end="63:23">f</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:38">chroma_planes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:47"><expr pos:start="65:5" pos:end="65:46"><call pos:start="65:5" pos:end="65:46"><name pos:start="65:5" pos:end="65:14">put_symbol</name><argument_list pos:start="65:15" pos:end="65:46">(<argument pos:start="65:16" pos:end="65:16"><expr pos:start="65:16" pos:end="65:16"><name pos:start="65:16" pos:end="65:16">c</name></expr></argument>, <argument pos:start="65:19" pos:end="65:23"><expr pos:start="65:19" pos:end="65:23"><name pos:start="65:19" pos:end="65:23">state</name></expr></argument>, <argument pos:start="65:26" pos:end="65:42"><expr pos:start="65:26" pos:end="65:42"><name pos:start="65:26" pos:end="65:42"><name pos:start="65:26" pos:end="65:26">f</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:42">chroma_h_shift</name></name></expr></argument>, <argument pos:start="65:45" pos:end="65:45"><expr pos:start="65:45" pos:end="65:45"><literal type="number" pos:start="65:45" pos:end="65:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:47"><expr pos:start="67:5" pos:end="67:46"><call pos:start="67:5" pos:end="67:46"><name pos:start="67:5" pos:end="67:14">put_symbol</name><argument_list pos:start="67:15" pos:end="67:46">(<argument pos:start="67:16" pos:end="67:16"><expr pos:start="67:16" pos:end="67:16"><name pos:start="67:16" pos:end="67:16">c</name></expr></argument>, <argument pos:start="67:19" pos:end="67:23"><expr pos:start="67:19" pos:end="67:23"><name pos:start="67:19" pos:end="67:23">state</name></expr></argument>, <argument pos:start="67:26" pos:end="67:42"><expr pos:start="67:26" pos:end="67:42"><name pos:start="67:26" pos:end="67:42"><name pos:start="67:26" pos:end="67:26">f</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:42">chroma_v_shift</name></name></expr></argument>, <argument pos:start="67:45" pos:end="67:45"><expr pos:start="67:45" pos:end="67:45"><literal type="number" pos:start="67:45" pos:end="67:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:39"><expr pos:start="69:5" pos:end="69:38"><call pos:start="69:5" pos:end="69:38"><name pos:start="69:5" pos:end="69:11">put_rac</name><argument_list pos:start="69:12" pos:end="69:38">(<argument pos:start="69:13" pos:end="69:13"><expr pos:start="69:13" pos:end="69:13"><name pos:start="69:13" pos:end="69:13">c</name></expr></argument>, <argument pos:start="69:16" pos:end="69:20"><expr pos:start="69:16" pos:end="69:20"><name pos:start="69:16" pos:end="69:20">state</name></expr></argument>, <argument pos:start="69:23" pos:end="69:37"><expr pos:start="69:23" pos:end="69:37"><name pos:start="69:23" pos:end="69:37"><name pos:start="69:23" pos:end="69:23">f</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:37">transparency</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:49"><expr pos:start="71:5" pos:end="71:48"><call pos:start="71:5" pos:end="71:48"><name pos:start="71:5" pos:end="71:14">put_symbol</name><argument_list pos:start="71:15" pos:end="71:48">(<argument pos:start="71:16" pos:end="71:16"><expr pos:start="71:16" pos:end="71:16"><name pos:start="71:16" pos:end="71:16">c</name></expr></argument>, <argument pos:start="71:19" pos:end="71:23"><expr pos:start="71:19" pos:end="71:23"><name pos:start="71:19" pos:end="71:23">state</name></expr></argument>, <argument pos:start="71:26" pos:end="71:44"><expr pos:start="71:26" pos:end="71:44"><name pos:start="71:26" pos:end="71:40"><name pos:start="71:26" pos:end="71:26">f</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:40">num_h_slices</name></name> <operator pos:start="71:42" pos:end="71:42">-</operator> <literal type="number" pos:start="71:44" pos:end="71:44">1</literal></expr></argument>, <argument pos:start="71:47" pos:end="71:47"><expr pos:start="71:47" pos:end="71:47"><literal type="number" pos:start="71:47" pos:end="71:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:49"><expr pos:start="73:5" pos:end="73:48"><call pos:start="73:5" pos:end="73:48"><name pos:start="73:5" pos:end="73:14">put_symbol</name><argument_list pos:start="73:15" pos:end="73:48">(<argument pos:start="73:16" pos:end="73:16"><expr pos:start="73:16" pos:end="73:16"><name pos:start="73:16" pos:end="73:16">c</name></expr></argument>, <argument pos:start="73:19" pos:end="73:23"><expr pos:start="73:19" pos:end="73:23"><name pos:start="73:19" pos:end="73:23">state</name></expr></argument>, <argument pos:start="73:26" pos:end="73:44"><expr pos:start="73:26" pos:end="73:44"><name pos:start="73:26" pos:end="73:40"><name pos:start="73:26" pos:end="73:26">f</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:40">num_v_slices</name></name> <operator pos:start="73:42" pos:end="73:42">-</operator> <literal type="number" pos:start="73:44" pos:end="73:44">1</literal></expr></argument>, <argument pos:start="73:47" pos:end="73:47"><expr pos:start="73:47" pos:end="73:47"><literal type="number" pos:start="73:47" pos:end="73:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:50"><expr pos:start="77:5" pos:end="77:49"><call pos:start="77:5" pos:end="77:49"><name pos:start="77:5" pos:end="77:14">put_symbol</name><argument_list pos:start="77:15" pos:end="77:49">(<argument pos:start="77:16" pos:end="77:16"><expr pos:start="77:16" pos:end="77:16"><name pos:start="77:16" pos:end="77:16">c</name></expr></argument>, <argument pos:start="77:19" pos:end="77:23"><expr pos:start="77:19" pos:end="77:23"><name pos:start="77:19" pos:end="77:23">state</name></expr></argument>, <argument pos:start="77:26" pos:end="77:45"><expr pos:start="77:26" pos:end="77:45"><name pos:start="77:26" pos:end="77:45"><name pos:start="77:26" pos:end="77:26">f</name><operator pos:start="77:27" pos:end="77:28">-&gt;</operator><name pos:start="77:29" pos:end="77:45">quant_table_count</name></name></expr></argument>, <argument pos:start="77:48" pos:end="77:48"><expr pos:start="77:48" pos:end="77:48"><literal type="number" pos:start="77:48" pos:end="77:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="79:5" pos:end="81:50">for <control pos:start="79:9" pos:end="79:46">(<init pos:start="79:10" pos:end="79:15"><expr pos:start="79:10" pos:end="79:14"><name pos:start="79:10" pos:end="79:10">i</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <literal type="number" pos:start="79:14" pos:end="79:14">0</literal></expr>;</init> <condition pos:start="79:17" pos:end="79:41"><expr pos:start="79:17" pos:end="79:40"><name pos:start="79:17" pos:end="79:17">i</name> <operator pos:start="79:19" pos:end="79:19">&lt;</operator> <name pos:start="79:21" pos:end="79:40"><name pos:start="79:21" pos:end="79:21">f</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:40">quant_table_count</name></name></expr>;</condition> <incr pos:start="79:43" pos:end="79:45"><expr pos:start="79:43" pos:end="79:45"><name pos:start="79:43" pos:end="79:43">i</name><operator pos:start="79:44" pos:end="79:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="81:9" pos:end="81:50"><block_content pos:start="81:9" pos:end="81:50">

        <expr_stmt pos:start="81:9" pos:end="81:50"><expr pos:start="81:9" pos:end="81:49"><call pos:start="81:9" pos:end="81:49"><name pos:start="81:9" pos:end="81:26">write_quant_tables</name><argument_list pos:start="81:27" pos:end="81:49">(<argument pos:start="81:28" pos:end="81:28"><expr pos:start="81:28" pos:end="81:28"><name pos:start="81:28" pos:end="81:28">c</name></expr></argument>, <argument pos:start="81:31" pos:end="81:48"><expr pos:start="81:31" pos:end="81:48"><name pos:start="81:31" pos:end="81:48"><name pos:start="81:31" pos:end="81:31">f</name><operator pos:start="81:32" pos:end="81:33">-&gt;</operator><name pos:start="81:34" pos:end="81:45">quant_tables</name><index pos:start="81:46" pos:end="81:48">[<expr pos:start="81:47" pos:end="81:47"><name pos:start="81:47" pos:end="81:47">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="85:5" pos:end="115:5">for <control pos:start="85:9" pos:end="85:46">(<init pos:start="85:10" pos:end="85:15"><expr pos:start="85:10" pos:end="85:14"><name pos:start="85:10" pos:end="85:10">i</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <literal type="number" pos:start="85:14" pos:end="85:14">0</literal></expr>;</init> <condition pos:start="85:17" pos:end="85:41"><expr pos:start="85:17" pos:end="85:40"><name pos:start="85:17" pos:end="85:17">i</name> <operator pos:start="85:19" pos:end="85:19">&lt;</operator> <name pos:start="85:21" pos:end="85:40"><name pos:start="85:21" pos:end="85:21">f</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:40">quant_table_count</name></name></expr>;</condition> <incr pos:start="85:43" pos:end="85:45"><expr pos:start="85:43" pos:end="85:45"><name pos:start="85:43" pos:end="85:43">i</name><operator pos:start="85:44" pos:end="85:45">++</operator></expr></incr>)</control> <block pos:start="85:48" pos:end="115:5">{<block_content pos:start="87:9" pos:end="113:9">

        <for pos:start="87:9" pos:end="91:22">for <control pos:start="87:13" pos:end="87:64">(<init pos:start="87:14" pos:end="87:19"><expr pos:start="87:14" pos:end="87:18"><name pos:start="87:14" pos:end="87:14">j</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <literal type="number" pos:start="87:18" pos:end="87:18">0</literal></expr>;</init> <condition pos:start="87:21" pos:end="87:59"><expr pos:start="87:21" pos:end="87:58"><name pos:start="87:21" pos:end="87:21">j</name> <operator pos:start="87:23" pos:end="87:23">&lt;</operator> <name pos:start="87:25" pos:end="87:43"><name pos:start="87:25" pos:end="87:25">f</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:40">context_count</name><index pos:start="87:41" pos:end="87:43">[<expr pos:start="87:42" pos:end="87:42"><name pos:start="87:42" pos:end="87:42">i</name></expr>]</index></name> <operator pos:start="87:45" pos:end="87:45">*</operator> <name pos:start="87:47" pos:end="87:58">CONTEXT_SIZE</name></expr>;</condition> <incr pos:start="87:61" pos:end="87:63"><expr pos:start="87:61" pos:end="87:63"><name pos:start="87:61" pos:end="87:61">j</name><operator pos:start="87:62" pos:end="87:63">++</operator></expr></incr>)</control><block type="pseudo" pos:start="89:13" pos:end="91:22"><block_content pos:start="89:13" pos:end="91:22">

            <if_stmt pos:start="89:13" pos:end="91:22"><if pos:start="89:13" pos:end="91:22">if <condition pos:start="89:16" pos:end="89:74">(<expr pos:start="89:17" pos:end="89:73"><name pos:start="89:17" pos:end="89:36"><name pos:start="89:17" pos:end="89:17">f</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:33">initial_states</name><index pos:start="89:34" pos:end="89:36">[<expr pos:start="89:35" pos:end="89:35"><name pos:start="89:35" pos:end="89:35">i</name></expr>]</index></name> <operator pos:start="89:38" pos:end="89:39">&amp;&amp;</operator> <name pos:start="89:41" pos:end="89:66"><name pos:start="89:41" pos:end="89:41">f</name><operator pos:start="89:42" pos:end="89:43">-&gt;</operator><name pos:start="89:44" pos:end="89:57">initial_states</name><index pos:start="89:58" pos:end="89:60">[<expr pos:start="89:59" pos:end="89:59"><name pos:start="89:59" pos:end="89:59">i</name></expr>]</index><index pos:start="89:61" pos:end="89:63">[<expr pos:start="89:62" pos:end="89:62"><literal type="number" pos:start="89:62" pos:end="89:62">0</literal></expr>]</index><index pos:start="89:64" pos:end="89:66">[<expr pos:start="89:65" pos:end="89:65"><name pos:start="89:65" pos:end="89:65">j</name></expr>]</index></name> <operator pos:start="89:68" pos:end="89:69">!=</operator> <literal type="number" pos:start="89:71" pos:end="89:73">128</literal></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:22"><block_content pos:start="91:17" pos:end="91:22">

                <break pos:start="91:17" pos:end="91:22">break;</break></block_content></block></if></if_stmt></block_content></block></for>

        <if_stmt pos:start="93:9" pos:end="113:9"><if pos:start="93:9" pos:end="109:9">if <condition pos:start="93:12" pos:end="93:51">(<expr pos:start="93:13" pos:end="93:50"><name pos:start="93:13" pos:end="93:13">j</name> <operator pos:start="93:15" pos:end="93:15">&lt;</operator> <name pos:start="93:17" pos:end="93:35"><name pos:start="93:17" pos:end="93:17">f</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:32">context_count</name><index pos:start="93:33" pos:end="93:35">[<expr pos:start="93:34" pos:end="93:34"><name pos:start="93:34" pos:end="93:34">i</name></expr>]</index></name> <operator pos:start="93:37" pos:end="93:37">*</operator> <name pos:start="93:39" pos:end="93:50">CONTEXT_SIZE</name></expr>)</condition> <block pos:start="93:53" pos:end="109:9">{<block_content pos:start="95:13" pos:end="107:17">

            <expr_stmt pos:start="95:13" pos:end="95:33"><expr pos:start="95:13" pos:end="95:32"><call pos:start="95:13" pos:end="95:32"><name pos:start="95:13" pos:end="95:19">put_rac</name><argument_list pos:start="95:20" pos:end="95:32">(<argument pos:start="95:21" pos:end="95:21"><expr pos:start="95:21" pos:end="95:21"><name pos:start="95:21" pos:end="95:21">c</name></expr></argument>, <argument pos:start="95:24" pos:end="95:28"><expr pos:start="95:24" pos:end="95:28"><name pos:start="95:24" pos:end="95:28">state</name></expr></argument>, <argument pos:start="95:31" pos:end="95:31"><expr pos:start="95:31" pos:end="95:31"><literal type="number" pos:start="95:31" pos:end="95:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="97:13" pos:end="107:17">for <control pos:start="97:17" pos:end="97:53">(<init pos:start="97:18" pos:end="97:23"><expr pos:start="97:18" pos:end="97:22"><name pos:start="97:18" pos:end="97:18">j</name> <operator pos:start="97:20" pos:end="97:20">=</operator> <literal type="number" pos:start="97:22" pos:end="97:22">0</literal></expr>;</init> <condition pos:start="97:25" pos:end="97:48"><expr pos:start="97:25" pos:end="97:47"><name pos:start="97:25" pos:end="97:25">j</name> <operator pos:start="97:27" pos:end="97:27">&lt;</operator> <name pos:start="97:29" pos:end="97:47"><name pos:start="97:29" pos:end="97:29">f</name><operator pos:start="97:30" pos:end="97:31">-&gt;</operator><name pos:start="97:32" pos:end="97:44">context_count</name><index pos:start="97:45" pos:end="97:47">[<expr pos:start="97:46" pos:end="97:46"><name pos:start="97:46" pos:end="97:46">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="97:50" pos:end="97:52"><expr pos:start="97:50" pos:end="97:52"><name pos:start="97:50" pos:end="97:50">j</name><operator pos:start="97:51" pos:end="97:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="99:17" pos:end="107:17"><block_content pos:start="99:17" pos:end="107:17">

                <for pos:start="99:17" pos:end="107:17">for <control pos:start="99:21" pos:end="99:50">(<init pos:start="99:22" pos:end="99:27"><expr pos:start="99:22" pos:end="99:26"><name pos:start="99:22" pos:end="99:22">k</name> <operator pos:start="99:24" pos:end="99:24">=</operator> <literal type="number" pos:start="99:26" pos:end="99:26">0</literal></expr>;</init> <condition pos:start="99:29" pos:end="99:45"><expr pos:start="99:29" pos:end="99:44"><name pos:start="99:29" pos:end="99:29">k</name> <operator pos:start="99:31" pos:end="99:31">&lt;</operator> <name pos:start="99:33" pos:end="99:44">CONTEXT_SIZE</name></expr>;</condition> <incr pos:start="99:47" pos:end="99:49"><expr pos:start="99:47" pos:end="99:49"><name pos:start="99:47" pos:end="99:47">k</name><operator pos:start="99:48" pos:end="99:49">++</operator></expr></incr>)</control> <block pos:start="99:52" pos:end="107:17">{<block_content pos:start="101:21" pos:end="105:79">

                    <decl_stmt pos:start="101:21" pos:end="101:72"><decl pos:start="101:21" pos:end="101:71"><type pos:start="101:21" pos:end="101:23"><name pos:start="101:21" pos:end="101:23">int</name></type> <name pos:start="101:25" pos:end="101:28">pred</name> <init pos:start="101:30" pos:end="101:71">= <expr pos:start="101:32" pos:end="101:71"><ternary pos:start="101:32" pos:end="101:71"><condition pos:start="101:32" pos:end="101:34"><expr pos:start="101:32" pos:end="101:32"><name pos:start="101:32" pos:end="101:32">j</name></expr> ?</condition><then pos:start="101:36" pos:end="101:65"> <expr pos:start="101:36" pos:end="101:65"><name pos:start="101:36" pos:end="101:65"><name pos:start="101:36" pos:end="101:36">f</name><operator pos:start="101:37" pos:end="101:38">-&gt;</operator><name pos:start="101:39" pos:end="101:52">initial_states</name><index pos:start="101:53" pos:end="101:55">[<expr pos:start="101:54" pos:end="101:54"><name pos:start="101:54" pos:end="101:54">i</name></expr>]</index><index pos:start="101:56" pos:end="101:62">[<expr pos:start="101:57" pos:end="101:61"><name pos:start="101:57" pos:end="101:57">j</name> <operator pos:start="101:59" pos:end="101:59">-</operator> <literal type="number" pos:start="101:61" pos:end="101:61">1</literal></expr>]</index><index pos:start="101:63" pos:end="101:65">[<expr pos:start="101:64" pos:end="101:64"><name pos:start="101:64" pos:end="101:64">k</name></expr>]</index></name></expr> </then><else pos:start="101:67" pos:end="101:71">: <expr pos:start="101:69" pos:end="101:71"><literal type="number" pos:start="101:69" pos:end="101:71">128</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="103:21" pos:end="105:79"><expr pos:start="103:21" pos:end="105:78"><call pos:start="103:21" pos:end="105:78"><name pos:start="103:21" pos:end="103:30">put_symbol</name><argument_list pos:start="103:31" pos:end="105:78">(<argument pos:start="103:32" pos:end="103:32"><expr pos:start="103:32" pos:end="103:32"><name pos:start="103:32" pos:end="103:32">c</name></expr></argument>, <argument pos:start="103:35" pos:end="103:43"><expr pos:start="103:35" pos:end="103:43"><name pos:start="103:35" pos:end="103:43"><name pos:start="103:35" pos:end="103:40">state2</name><index pos:start="103:41" pos:end="103:43">[<expr pos:start="103:42" pos:end="103:42"><name pos:start="103:42" pos:end="103:42">k</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="105:32" pos:end="105:74"><expr pos:start="105:32" pos:end="105:74"><operator pos:start="105:32" pos:end="105:32">(</operator><name pos:start="105:33" pos:end="105:38">int8_t</name><operator pos:start="105:39" pos:end="105:39">)</operator><operator pos:start="105:40" pos:end="105:40">(</operator><name pos:start="105:41" pos:end="105:66"><name pos:start="105:41" pos:end="105:41">f</name><operator pos:start="105:42" pos:end="105:43">-&gt;</operator><name pos:start="105:44" pos:end="105:57">initial_states</name><index pos:start="105:58" pos:end="105:60">[<expr pos:start="105:59" pos:end="105:59"><name pos:start="105:59" pos:end="105:59">i</name></expr>]</index><index pos:start="105:61" pos:end="105:63">[<expr pos:start="105:62" pos:end="105:62"><name pos:start="105:62" pos:end="105:62">j</name></expr>]</index><index pos:start="105:64" pos:end="105:66">[<expr pos:start="105:65" pos:end="105:65"><name pos:start="105:65" pos:end="105:65">k</name></expr>]</index></name> <operator pos:start="105:68" pos:end="105:68">-</operator> <name pos:start="105:70" pos:end="105:73">pred</name><operator pos:start="105:74" pos:end="105:74">)</operator></expr></argument>, <argument pos:start="105:77" pos:end="105:77"><expr pos:start="105:77" pos:end="105:77"><literal type="number" pos:start="105:77" pos:end="105:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for></block_content></block></for>

        </block_content>}</block></if> <else pos:start="109:11" pos:end="113:9">else <block pos:start="109:16" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:33">

            <expr_stmt pos:start="111:13" pos:end="111:33"><expr pos:start="111:13" pos:end="111:32"><call pos:start="111:13" pos:end="111:32"><name pos:start="111:13" pos:end="111:19">put_rac</name><argument_list pos:start="111:20" pos:end="111:32">(<argument pos:start="111:21" pos:end="111:21"><expr pos:start="111:21" pos:end="111:21"><name pos:start="111:21" pos:end="111:21">c</name></expr></argument>, <argument pos:start="111:24" pos:end="111:28"><expr pos:start="111:24" pos:end="111:28"><name pos:start="111:24" pos:end="111:28">state</name></expr></argument>, <argument pos:start="111:31" pos:end="111:31"><expr pos:start="111:31" pos:end="111:31"><literal type="number" pos:start="111:31" pos:end="111:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="119:5" pos:end="123:5"><if pos:start="119:5" pos:end="123:5">if <condition pos:start="119:8" pos:end="119:23">(<expr pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:18"><name pos:start="119:9" pos:end="119:9">f</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:18">version</name></name> <operator pos:start="119:20" pos:end="119:20">&gt;</operator> <literal type="number" pos:start="119:22" pos:end="119:22">2</literal></expr>)</condition> <block pos:start="119:25" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:39">

        <expr_stmt pos:start="121:9" pos:end="121:39"><expr pos:start="121:9" pos:end="121:38"><call pos:start="121:9" pos:end="121:38"><name pos:start="121:9" pos:end="121:18">put_symbol</name><argument_list pos:start="121:19" pos:end="121:38">(<argument pos:start="121:20" pos:end="121:20"><expr pos:start="121:20" pos:end="121:20"><name pos:start="121:20" pos:end="121:20">c</name></expr></argument>, <argument pos:start="121:23" pos:end="121:27"><expr pos:start="121:23" pos:end="121:27"><name pos:start="121:23" pos:end="121:27">state</name></expr></argument>, <argument pos:start="121:30" pos:end="121:34"><expr pos:start="121:30" pos:end="121:34"><name pos:start="121:30" pos:end="121:34"><name pos:start="121:30" pos:end="121:30">f</name><operator pos:start="121:31" pos:end="121:32">-&gt;</operator><name pos:start="121:33" pos:end="121:34">ec</name></name></expr></argument>, <argument pos:start="121:37" pos:end="121:37"><expr pos:start="121:37" pos:end="121:37"><literal type="number" pos:start="121:37" pos:end="121:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:51"><expr pos:start="127:5" pos:end="127:50"><name pos:start="127:5" pos:end="127:28"><name pos:start="127:5" pos:end="127:5">f</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:12">avctx</name><operator pos:start="127:13" pos:end="127:14">-&gt;</operator><name pos:start="127:15" pos:end="127:28">extradata_size</name></name> <operator pos:start="127:30" pos:end="127:30">=</operator> <call pos:start="127:32" pos:end="127:50"><name pos:start="127:32" pos:end="127:47">ff_rac_terminate</name><argument_list pos:start="127:48" pos:end="127:50">(<argument pos:start="127:49" pos:end="127:49"><expr pos:start="127:49" pos:end="127:49"><name pos:start="127:49" pos:end="127:49">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="131:5" pos:end="133:62"><expr pos:start="131:5" pos:end="133:61"><name pos:start="131:5" pos:end="131:5">v</name> <operator pos:start="131:7" pos:end="131:7">=</operator> <call pos:start="131:9" pos:end="133:61"><name pos:start="131:9" pos:end="131:14">av_crc</name><argument_list pos:start="131:15" pos:end="133:61">(<argument pos:start="131:16" pos:end="131:47"><expr pos:start="131:16" pos:end="131:47"><call pos:start="131:16" pos:end="131:47"><name pos:start="131:16" pos:end="131:31">av_crc_get_table</name><argument_list pos:start="131:32" pos:end="131:47">(<argument pos:start="131:33" pos:end="131:46"><expr pos:start="131:33" pos:end="131:46"><name pos:start="131:33" pos:end="131:46">AV_CRC_32_IEEE</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="131:50" pos:end="131:50"><expr pos:start="131:50" pos:end="131:50"><literal type="number" pos:start="131:50" pos:end="131:50">0</literal></expr></argument>,

               <argument pos:start="133:16" pos:end="133:34"><expr pos:start="133:16" pos:end="133:34"><name pos:start="133:16" pos:end="133:34"><name pos:start="133:16" pos:end="133:16">f</name><operator pos:start="133:17" pos:end="133:18">-&gt;</operator><name pos:start="133:19" pos:end="133:23">avctx</name><operator pos:start="133:24" pos:end="133:25">-&gt;</operator><name pos:start="133:26" pos:end="133:34">extradata</name></name></expr></argument>, <argument pos:start="133:37" pos:end="133:60"><expr pos:start="133:37" pos:end="133:60"><name pos:start="133:37" pos:end="133:60"><name pos:start="133:37" pos:end="133:37">f</name><operator pos:start="133:38" pos:end="133:39">-&gt;</operator><name pos:start="133:40" pos:end="133:44">avctx</name><operator pos:start="133:45" pos:end="133:46">-&gt;</operator><name pos:start="133:47" pos:end="133:60">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:63"><expr pos:start="135:5" pos:end="135:62"><call pos:start="135:5" pos:end="135:62"><name pos:start="135:5" pos:end="135:11">AV_WL32</name><argument_list pos:start="135:12" pos:end="135:62">(<argument pos:start="135:13" pos:end="135:58"><expr pos:start="135:13" pos:end="135:58"><name pos:start="135:13" pos:end="135:31"><name pos:start="135:13" pos:end="135:13">f</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:20">avctx</name><operator pos:start="135:21" pos:end="135:22">-&gt;</operator><name pos:start="135:23" pos:end="135:31">extradata</name></name> <operator pos:start="135:33" pos:end="135:33">+</operator> <name pos:start="135:35" pos:end="135:58"><name pos:start="135:35" pos:end="135:35">f</name><operator pos:start="135:36" pos:end="135:37">-&gt;</operator><name pos:start="135:38" pos:end="135:42">avctx</name><operator pos:start="135:43" pos:end="135:44">-&gt;</operator><name pos:start="135:45" pos:end="135:58">extradata_size</name></name></expr></argument>, <argument pos:start="135:61" pos:end="135:61"><expr pos:start="135:61" pos:end="135:61"><name pos:start="135:61" pos:end="135:61">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:34"><expr pos:start="137:5" pos:end="137:33"><name pos:start="137:5" pos:end="137:28"><name pos:start="137:5" pos:end="137:5">f</name><operator pos:start="137:6" pos:end="137:7">-&gt;</operator><name pos:start="137:8" pos:end="137:12">avctx</name><operator pos:start="137:13" pos:end="137:14">-&gt;</operator><name pos:start="137:15" pos:end="137:28">extradata_size</name></name> <operator pos:start="137:30" pos:end="137:31">+=</operator> <literal type="number" pos:start="137:33" pos:end="137:33">4</literal></expr>;</expr_stmt>



    <return pos:start="141:5" pos:end="141:13">return <expr pos:start="141:12" pos:end="141:12"><literal type="number" pos:start="141:12" pos:end="141:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
