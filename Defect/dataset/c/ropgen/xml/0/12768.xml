<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12768.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">qemu_ram_addr_from_host</name><parameter_list pos:start="1:28" pos:end="1:60">(<parameter pos:start="1:29" pos:end="1:37"><decl pos:start="1:29" pos:end="1:37"><type pos:start="1:29" pos:end="1:37"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">ptr</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:59"><decl pos:start="1:40" pos:end="1:59"><type pos:start="1:40" pos:end="1:59"><name pos:start="1:40" pos:end="1:49">ram_addr_t</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:59">ram_addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:14">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">RAMBlock</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:19">block</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:17">host</name> <init pos:start="7:19" pos:end="7:23">= <expr pos:start="7:21" pos:end="7:23"><name pos:start="7:21" pos:end="7:23">ptr</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><call pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:19">xen_enabled</name><argument_list pos:start="11:20" pos:end="11:21">()</argument_list></call></expr>)</condition> <block pos:start="11:24" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:17">

        <expr_stmt pos:start="13:9" pos:end="13:52"><expr pos:start="13:9" pos:end="13:51"><operator pos:start="13:9" pos:end="13:9">*</operator><name pos:start="13:10" pos:end="13:17">ram_addr</name> <operator pos:start="13:19" pos:end="13:19">=</operator> <call pos:start="13:21" pos:end="13:51"><name pos:start="13:21" pos:end="13:46">xen_ram_addr_from_mapcache</name><argument_list pos:start="13:47" pos:end="13:51">(<argument pos:start="13:48" pos:end="13:50"><expr pos:start="13:48" pos:end="13:50"><name pos:start="13:48" pos:end="13:50">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <macro pos:start="21:5" pos:end="21:49"><name pos:start="21:5" pos:end="21:18">QTAILQ_FOREACH</name><argument_list pos:start="21:19" pos:end="21:49">(<argument pos:start="21:20" pos:end="21:24">block</argument>, <argument pos:start="21:27" pos:end="21:42">&amp;ram_list.blocks</argument>, <argument pos:start="21:45" pos:end="21:48">next</argument>)</argument_list></macro> <block pos:start="21:51" pos:end="39:5">{<block_content pos:start="25:9" pos:end="37:9">

        <comment type="block" pos:start="23:9" pos:end="23:60">/* This case append when the block is not mapped. */</comment>

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:32">(<expr pos:start="25:13" pos:end="25:31"><name pos:start="25:13" pos:end="25:23"><name pos:start="25:13" pos:end="25:17">block</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:23">host</name></name> <operator pos:start="25:25" pos:end="25:26">==</operator> <name pos:start="25:28" pos:end="25:31">NULL</name></expr>)</condition> <block pos:start="25:34" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:21">

            <continue pos:start="27:13" pos:end="27:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:47">(<expr pos:start="31:13" pos:end="31:46"><name pos:start="31:13" pos:end="31:16">host</name> <operator pos:start="31:18" pos:end="31:18">-</operator> <name pos:start="31:20" pos:end="31:30"><name pos:start="31:20" pos:end="31:24">block</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:30">host</name></name> <operator pos:start="31:32" pos:end="31:32">&lt;</operator> <name pos:start="31:34" pos:end="31:46"><name pos:start="31:34" pos:end="31:38">block</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:46">length</name></name></expr>)</condition> <block pos:start="31:49" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:21">

            <expr_stmt pos:start="33:13" pos:end="33:61"><expr pos:start="33:13" pos:end="33:60"><operator pos:start="33:13" pos:end="33:13">*</operator><name pos:start="33:14" pos:end="33:21">ram_addr</name> <operator pos:start="33:23" pos:end="33:23">=</operator> <name pos:start="33:25" pos:end="33:37"><name pos:start="33:25" pos:end="33:29">block</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:37">offset</name></name> <operator pos:start="33:39" pos:end="33:39">+</operator> <operator pos:start="33:41" pos:end="33:41">(</operator><name pos:start="33:42" pos:end="33:45">host</name> <operator pos:start="33:47" pos:end="33:47">-</operator> <name pos:start="33:49" pos:end="33:59"><name pos:start="33:49" pos:end="33:53">block</name><operator pos:start="33:54" pos:end="33:55">-&gt;</operator><name pos:start="33:56" pos:end="33:59">host</name></name><operator pos:start="33:60" pos:end="33:60">)</operator></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:21">return <expr pos:start="35:20" pos:end="35:20"><literal type="number" pos:start="35:20" pos:end="35:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <return pos:start="43:5" pos:end="43:14">return <expr pos:start="43:12" pos:end="43:13"><operator pos:start="43:12" pos:end="43:12">-</operator><literal type="number" pos:start="43:13" pos:end="43:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
