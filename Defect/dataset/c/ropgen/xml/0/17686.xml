<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17686.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">draw_slice</name><parameter_list pos:start="1:23" pos:end="1:73">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:43"><name pos:start="1:24" pos:end="1:35">AVFilterLink</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">inlink</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:50"><decl pos:start="1:46" pos:end="1:50"><type pos:start="1:46" pos:end="1:50"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:50">y</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:57"><decl pos:start="1:53" pos:end="1:57"><type pos:start="1:53" pos:end="1:57"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:57">h</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:72"><decl pos:start="1:60" pos:end="1:72"><type pos:start="1:60" pos:end="1:72"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:72">slice_dir</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:66">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">FadeContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:21">fade</name> <init pos:start="5:23" pos:end="5:41">= <expr pos:start="5:25" pos:end="5:41"><name pos:start="5:25" pos:end="5:41"><name pos:start="5:25" pos:end="5:30">inlink</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:35">dst</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:41">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">AVFilterBufferRef</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:29">outpic</name> <init pos:start="7:31" pos:end="7:47">= <expr pos:start="7:33" pos:end="7:47"><name pos:start="7:33" pos:end="7:47"><name pos:start="7:33" pos:end="7:38">inlink</name><operator pos:start="7:39" pos:end="7:40">-&gt;</operator><name pos:start="7:41" pos:end="7:47">cur_buf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>, <decl pos:start="11:15" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:19">plane</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="71:5"><if pos:start="15:5" pos:end="71:5">if <condition pos:start="15:8" pos:end="15:29">(<expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:12">fade</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:20">factor</name></name> <operator pos:start="15:22" pos:end="15:22">&lt;</operator> <literal type="number" pos:start="15:24" pos:end="15:28">65536</literal></expr>)</condition> <block pos:start="15:31" pos:end="71:5">{<block_content pos:start="19:9" pos:end="69:9">

        <comment type="block" pos:start="17:9" pos:end="17:31">/* luma or rgb plane */</comment>

        <for pos:start="19:9" pos:end="37:9">for <control pos:start="19:13" pos:end="19:31">(<init pos:start="19:14" pos:end="19:19"><expr pos:start="19:14" pos:end="19:18"><name pos:start="19:14" pos:end="19:14">i</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>;</init> <condition pos:start="19:21" pos:end="19:26"><expr pos:start="19:21" pos:end="19:25"><name pos:start="19:21" pos:end="19:21">i</name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <name pos:start="19:25" pos:end="19:25">h</name></expr>;</condition> <incr pos:start="19:28" pos:end="19:30"><expr pos:start="19:28" pos:end="19:30"><name pos:start="19:28" pos:end="19:28">i</name><operator pos:start="19:29" pos:end="19:30">++</operator></expr></incr>)</control> <block pos:start="19:33" pos:end="37:9">{<block_content pos:start="21:13" pos:end="35:13">

            <expr_stmt pos:start="21:13" pos:end="21:62"><expr pos:start="21:13" pos:end="21:61"><name pos:start="21:13" pos:end="21:13">p</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:31"><name pos:start="21:17" pos:end="21:22">outpic</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:28">data</name><index pos:start="21:29" pos:end="21:31">[<expr pos:start="21:30" pos:end="21:30"><literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr>]</index></name> <operator pos:start="21:33" pos:end="21:33">+</operator> <operator pos:start="21:35" pos:end="21:35">(</operator><name pos:start="21:36" pos:end="21:36">y</name><operator pos:start="21:37" pos:end="21:37">+</operator><name pos:start="21:38" pos:end="21:38">i</name><operator pos:start="21:39" pos:end="21:39">)</operator> <operator pos:start="21:41" pos:end="21:41">*</operator> <name pos:start="21:43" pos:end="21:61"><name pos:start="21:43" pos:end="21:48">outpic</name><operator pos:start="21:49" pos:end="21:50">-&gt;</operator><name pos:start="21:51" pos:end="21:58">linesize</name><index pos:start="21:59" pos:end="21:61">[<expr pos:start="21:60" pos:end="21:60"><literal type="number" pos:start="21:60" pos:end="21:60">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="23:13" pos:end="35:13">for <control pos:start="23:17" pos:end="23:55">(<init pos:start="23:18" pos:end="23:23"><expr pos:start="23:18" pos:end="23:22"><name pos:start="23:18" pos:end="23:18">j</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <literal type="number" pos:start="23:22" pos:end="23:22">0</literal></expr>;</init> <condition pos:start="23:25" pos:end="23:50"><expr pos:start="23:25" pos:end="23:49"><name pos:start="23:25" pos:end="23:25">j</name> <operator pos:start="23:27" pos:end="23:27">&lt;</operator> <name pos:start="23:29" pos:end="23:37"><name pos:start="23:29" pos:end="23:34">inlink</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:37">w</name></name> <operator pos:start="23:39" pos:end="23:39">*</operator> <name pos:start="23:41" pos:end="23:49"><name pos:start="23:41" pos:end="23:44">fade</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:49">bpp</name></name></expr>;</condition> <incr pos:start="23:52" pos:end="23:54"><expr pos:start="23:52" pos:end="23:54"><name pos:start="23:52" pos:end="23:52">j</name><operator pos:start="23:53" pos:end="23:54">++</operator></expr></incr>)</control> <block pos:start="23:57" pos:end="35:13">{<block_content pos:start="31:17" pos:end="33:20">

                <comment type="block" pos:start="25:17" pos:end="29:49">/* fade-&gt;factor is using 16 lower-order bits for decimal

                 * places. 32768 = 1 &lt;&lt; 15, it is an integer representation

                 * of 0.5 and is for rounding. */</comment>

                <expr_stmt pos:start="31:17" pos:end="31:55"><expr pos:start="31:17" pos:end="31:54"><operator pos:start="31:17" pos:end="31:17">*</operator><name pos:start="31:18" pos:end="31:18">p</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <operator pos:start="31:22" pos:end="31:22">(</operator><operator pos:start="31:23" pos:end="31:23">*</operator><name pos:start="31:24" pos:end="31:24">p</name> <operator pos:start="31:26" pos:end="31:26">*</operator> <name pos:start="31:28" pos:end="31:39"><name pos:start="31:28" pos:end="31:31">fade</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:39">factor</name></name> <operator pos:start="31:41" pos:end="31:41">+</operator> <literal type="number" pos:start="31:43" pos:end="31:47">32768</literal><operator pos:start="31:48" pos:end="31:48">)</operator> <operator pos:start="31:50" pos:end="31:51">&gt;&gt;</operator> <literal type="number" pos:start="31:53" pos:end="31:54">16</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:20"><expr pos:start="33:17" pos:end="33:19"><name pos:start="33:17" pos:end="33:17">p</name><operator pos:start="33:18" pos:end="33:19">++</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <if_stmt pos:start="41:9" pos:end="69:9"><if pos:start="41:9" pos:end="69:9">if <condition pos:start="41:12" pos:end="41:47">(<expr pos:start="41:13" pos:end="41:46"><name pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:18">outpic</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:24">data</name><index pos:start="41:25" pos:end="41:27">[<expr pos:start="41:26" pos:end="41:26"><literal type="number" pos:start="41:26" pos:end="41:26">0</literal></expr>]</index></name> <operator pos:start="41:29" pos:end="41:30">&amp;&amp;</operator> <name pos:start="41:32" pos:end="41:46"><name pos:start="41:32" pos:end="41:37">outpic</name><operator pos:start="41:38" pos:end="41:39">-&gt;</operator><name pos:start="41:40" pos:end="41:43">data</name><index pos:start="41:44" pos:end="41:46">[<expr pos:start="41:45" pos:end="41:45"><literal type="number" pos:start="41:45" pos:end="41:45">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="41:49" pos:end="69:9">{<block_content pos:start="45:13" pos:end="67:13">

            <comment type="block" pos:start="43:13" pos:end="43:31">/* chroma planes */</comment>

            <for pos:start="45:13" pos:end="67:13">for <control pos:start="45:17" pos:end="45:47">(<init pos:start="45:18" pos:end="45:27"><expr pos:start="45:18" pos:end="45:26"><name pos:start="45:18" pos:end="45:22">plane</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <literal type="number" pos:start="45:26" pos:end="45:26">1</literal></expr>;</init> <condition pos:start="45:29" pos:end="45:38"><expr pos:start="45:29" pos:end="45:37"><name pos:start="45:29" pos:end="45:33">plane</name> <operator pos:start="45:35" pos:end="45:35">&lt;</operator> <literal type="number" pos:start="45:37" pos:end="45:37">3</literal></expr>;</condition> <incr pos:start="45:40" pos:end="45:46"><expr pos:start="45:40" pos:end="45:46"><name pos:start="45:40" pos:end="45:44">plane</name><operator pos:start="45:45" pos:end="45:46">++</operator></expr></incr>)</control> <block pos:start="45:49" pos:end="67:13">{<block_content pos:start="47:17" pos:end="65:17">

                <for pos:start="47:17" pos:end="65:17">for <control pos:start="47:21" pos:end="47:39">(<init pos:start="47:22" pos:end="47:27"><expr pos:start="47:22" pos:end="47:26"><name pos:start="47:22" pos:end="47:22">i</name> <operator pos:start="47:24" pos:end="47:24">=</operator> <literal type="number" pos:start="47:26" pos:end="47:26">0</literal></expr>;</init> <condition pos:start="47:29" pos:end="47:34"><expr pos:start="47:29" pos:end="47:33"><name pos:start="47:29" pos:end="47:29">i</name> <operator pos:start="47:31" pos:end="47:31">&lt;</operator> <name pos:start="47:33" pos:end="47:33">h</name></expr>;</condition> <incr pos:start="47:36" pos:end="47:38"><expr pos:start="47:36" pos:end="47:38"><name pos:start="47:36" pos:end="47:36">i</name><operator pos:start="47:37" pos:end="47:38">++</operator></expr></incr>)</control> <block pos:start="47:41" pos:end="65:17">{<block_content pos:start="49:21" pos:end="63:21">

                    <expr_stmt pos:start="49:21" pos:end="49:94"><expr pos:start="49:21" pos:end="49:93"><name pos:start="49:21" pos:end="49:21">p</name> <operator pos:start="49:23" pos:end="49:23">=</operator> <name pos:start="49:25" pos:end="49:43"><name pos:start="49:25" pos:end="49:30">outpic</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:36">data</name><index pos:start="49:37" pos:end="49:43">[<expr pos:start="49:38" pos:end="49:42"><name pos:start="49:38" pos:end="49:42">plane</name></expr>]</index></name> <operator pos:start="49:45" pos:end="49:45">+</operator> <operator pos:start="49:47" pos:end="49:47">(</operator><operator pos:start="49:48" pos:end="49:48">(</operator><name pos:start="49:49" pos:end="49:49">y</name><operator pos:start="49:50" pos:end="49:50">+</operator><name pos:start="49:51" pos:end="49:51">i</name><operator pos:start="49:52" pos:end="49:52">)</operator> <operator pos:start="49:54" pos:end="49:55">&gt;&gt;</operator> <name pos:start="49:57" pos:end="49:66"><name pos:start="49:57" pos:end="49:60">fade</name><operator pos:start="49:61" pos:end="49:62">-&gt;</operator><name pos:start="49:63" pos:end="49:66">vsub</name></name><operator pos:start="49:67" pos:end="49:67">)</operator> <operator pos:start="49:69" pos:end="49:69">*</operator> <name pos:start="49:71" pos:end="49:93"><name pos:start="49:71" pos:end="49:76">outpic</name><operator pos:start="49:77" pos:end="49:78">-&gt;</operator><name pos:start="49:79" pos:end="49:86">linesize</name><index pos:start="49:87" pos:end="49:93">[<expr pos:start="49:88" pos:end="49:92"><name pos:start="49:88" pos:end="49:92">plane</name></expr>]</index></name></expr>;</expr_stmt>

                    <for pos:start="51:21" pos:end="63:21">for <control pos:start="51:25" pos:end="51:65">(<init pos:start="51:26" pos:end="51:31"><expr pos:start="51:26" pos:end="51:30"><name pos:start="51:26" pos:end="51:26">j</name> <operator pos:start="51:28" pos:end="51:28">=</operator> <literal type="number" pos:start="51:30" pos:end="51:30">0</literal></expr>;</init> <condition pos:start="51:33" pos:end="51:60"><expr pos:start="51:33" pos:end="51:59"><name pos:start="51:33" pos:end="51:47"><name pos:start="51:33" pos:end="51:33">j</name> <argument_list type="generic" pos:start="51:35" pos:end="51:47">&lt; <argument pos:start="51:37" pos:end="51:45"><expr pos:start="51:37" pos:end="51:45"><name pos:start="51:37" pos:end="51:45"><name pos:start="51:37" pos:end="51:42">inlink</name><operator pos:start="51:43" pos:end="51:44">-&gt;</operator><name pos:start="51:45" pos:end="51:45">w</name></name></expr></argument> &gt;</argument_list></name><operator pos:start="51:48" pos:end="51:48">&gt;</operator> <name pos:start="51:50" pos:end="51:59"><name pos:start="51:50" pos:end="51:53">fade</name><operator pos:start="51:54" pos:end="51:55">-&gt;</operator><name pos:start="51:56" pos:end="51:59">hsub</name></name></expr>;</condition> <incr pos:start="51:62" pos:end="51:64"><expr pos:start="51:62" pos:end="51:64"><name pos:start="51:62" pos:end="51:62">j</name><operator pos:start="51:63" pos:end="51:64">++</operator></expr></incr>)</control> <block pos:start="51:67" pos:end="63:21">{<block_content pos:start="59:25" pos:end="61:28">

                        <comment type="block" pos:start="53:25" pos:end="57:39">/* 8421367 = ((128 &lt;&lt; 1) + 1) &lt;&lt; 15. It is an integer

                         * representation of 128.5. The .5 is for rounding

                         * purposes. */</comment>

                        <expr_stmt pos:start="59:25" pos:end="59:73"><expr pos:start="59:25" pos:end="59:72"><operator pos:start="59:25" pos:end="59:25">*</operator><name pos:start="59:26" pos:end="59:26">p</name> <operator pos:start="59:28" pos:end="59:28">=</operator> <operator pos:start="59:30" pos:end="59:30">(</operator><operator pos:start="59:31" pos:end="59:31">(</operator><operator pos:start="59:32" pos:end="59:32">*</operator><name pos:start="59:33" pos:end="59:33">p</name> <operator pos:start="59:35" pos:end="59:35">-</operator> <literal type="number" pos:start="59:37" pos:end="59:39">128</literal><operator pos:start="59:40" pos:end="59:40">)</operator> <operator pos:start="59:42" pos:end="59:42">*</operator> <name pos:start="59:44" pos:end="59:55"><name pos:start="59:44" pos:end="59:47">fade</name><operator pos:start="59:48" pos:end="59:49">-&gt;</operator><name pos:start="59:50" pos:end="59:55">factor</name></name> <operator pos:start="59:57" pos:end="59:57">+</operator> <literal type="number" pos:start="59:59" pos:end="59:65">8421367</literal><operator pos:start="59:66" pos:end="59:66">)</operator> <operator pos:start="59:68" pos:end="59:69">&gt;&gt;</operator> <literal type="number" pos:start="59:71" pos:end="59:72">16</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="61:25" pos:end="61:28"><expr pos:start="61:25" pos:end="61:27"><name pos:start="61:25" pos:end="61:25">p</name><operator pos:start="61:26" pos:end="61:27">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:66"><expr pos:start="75:5" pos:end="75:65"><call pos:start="75:5" pos:end="75:65"><name pos:start="75:5" pos:end="75:23">avfilter_draw_slice</name><argument_list pos:start="75:24" pos:end="75:65">(<argument pos:start="75:25" pos:end="75:47"><expr pos:start="75:25" pos:end="75:47"><name pos:start="75:25" pos:end="75:47"><name pos:start="75:25" pos:end="75:30">inlink</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:35">dst</name><operator pos:start="75:36" pos:end="75:37">-&gt;</operator><name pos:start="75:38" pos:end="75:44">outputs</name><index pos:start="75:45" pos:end="75:47">[<expr pos:start="75:46" pos:end="75:46"><literal type="number" pos:start="75:46" pos:end="75:46">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="75:50" pos:end="75:50"><expr pos:start="75:50" pos:end="75:50"><name pos:start="75:50" pos:end="75:50">y</name></expr></argument>, <argument pos:start="75:53" pos:end="75:53"><expr pos:start="75:53" pos:end="75:53"><name pos:start="75:53" pos:end="75:53">h</name></expr></argument>, <argument pos:start="75:56" pos:end="75:64"><expr pos:start="75:56" pos:end="75:64"><name pos:start="75:56" pos:end="75:64">slice_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
