<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11959.c" pos:tabs="8"><function pos:start="1:1" pos:end="245:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:40">av_estimate_timings_from_pts</name><parameter_list pos:start="1:41" pos:end="1:61">(<parameter pos:start="1:42" pos:end="1:60"><decl pos:start="1:42" pos:end="1:60"><type pos:start="1:42" pos:end="1:58"><name pos:start="1:42" pos:end="1:56">AVFormatContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">ic</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="245:1">{<block_content pos:start="5:5" pos:end="243:36">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">AVPacket</name></type> <name pos:start="5:14" pos:end="5:17">pkt1</name></decl>, <decl pos:start="5:20" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:12"><modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">pkt</name> <init pos:start="5:25" pos:end="5:31">= <expr pos:start="5:27" pos:end="5:31"><operator pos:start="5:27" pos:end="5:27">&amp;</operator><name pos:start="5:28" pos:end="5:31">pkt1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">read_size</name></decl>, <decl pos:start="9:20" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:20">i</name></decl>, <decl pos:start="9:23" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:23" pos:end="9:25">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:22">start_time</name></decl>, <decl pos:start="11:25" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:25" pos:end="11:32">end_time</name></decl>, <decl pos:start="11:35" pos:end="11:43"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:35" pos:end="11:43">end_time1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:20">filesize</name></decl>, <decl pos:start="13:23" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:23" pos:end="13:28">offset</name></decl>, <decl pos:start="13:31" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:31" pos:end="13:38">duration</name></decl>;</decl_stmt>

    

    <comment type="block" pos:start="17:5" pos:end="19:41">/* we read the first packets to get the first PTS (not fully

       accurate, but it is enough now) */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><call pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:13">url_fseek</name><argument_list pos:start="21:14" pos:end="21:35">(<argument pos:start="21:15" pos:end="21:21"><expr pos:start="21:15" pos:end="21:21"><operator pos:start="21:15" pos:end="21:15">&amp;</operator><name pos:start="21:16" pos:end="21:21"><name pos:start="21:16" pos:end="21:17">ic</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:21">pb</name></name></expr></argument>, <argument pos:start="21:24" pos:end="21:24"><expr pos:start="21:24" pos:end="21:24"><literal type="number" pos:start="21:24" pos:end="21:24">0</literal></expr></argument>, <argument pos:start="21:27" pos:end="21:34"><expr pos:start="21:27" pos:end="21:34"><name pos:start="21:27" pos:end="21:34">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:13">read_size</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="69:6">for<control pos:start="25:8" pos:end="25:11">(<init pos:start="25:9" pos:end="25:9">;</init><condition pos:start="25:10" pos:end="25:10">;</condition><incr/>)</control> <block pos:start="25:13" pos:end="69:6">{<block_content pos:start="27:9" pos:end="67:29">

        <if_stmt pos:start="27:9" pos:end="29:18"><if pos:start="27:9" pos:end="29:18">if <condition pos:start="27:12" pos:end="27:48">(<expr pos:start="27:13" pos:end="27:47"><name pos:start="27:13" pos:end="27:21">read_size</name> <operator pos:start="27:23" pos:end="27:24">&gt;=</operator> <name pos:start="27:26" pos:end="27:47">DURATION_MAX_READ_SIZE</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:18"><block_content pos:start="29:13" pos:end="29:18">

            <break pos:start="29:13" pos:end="29:18">break;</break></block_content></block></if></if_stmt>

        <comment type="block" pos:start="31:9" pos:end="31:51">/* if all info is available, we can stop */</comment>

        <for pos:start="33:9" pos:end="41:9">for<control pos:start="33:12" pos:end="33:42">(<init pos:start="33:13" pos:end="33:18"><expr pos:start="33:13" pos:end="33:17"><name pos:start="33:13" pos:end="33:13">i</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <literal type="number" pos:start="33:17" pos:end="33:17">0</literal></expr>;</init><condition pos:start="33:19" pos:end="33:37"><expr pos:start="33:19" pos:end="33:36"><name pos:start="33:19" pos:end="33:19">i</name> <operator pos:start="33:21" pos:end="33:21">&lt;</operator> <name pos:start="33:23" pos:end="33:36"><name pos:start="33:23" pos:end="33:24">ic</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:36">nb_streams</name></name></expr>;</condition> <incr pos:start="33:39" pos:end="33:41"><expr pos:start="33:39" pos:end="33:41"><name pos:start="33:39" pos:end="33:39">i</name><operator pos:start="33:40" pos:end="33:41">++</operator></expr></incr>)</control> <block pos:start="33:44" pos:end="41:9">{<block_content pos:start="35:13" pos:end="39:22">

            <expr_stmt pos:start="35:13" pos:end="35:32"><expr pos:start="35:13" pos:end="35:31"><name pos:start="35:13" pos:end="35:14">st</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:31"><name pos:start="35:18" pos:end="35:19">ic</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:28">streams</name><index pos:start="35:29" pos:end="35:31">[<expr pos:start="35:30" pos:end="35:30"><name pos:start="35:30" pos:end="35:30">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="39:22"><if pos:start="37:13" pos:end="39:22">if <condition pos:start="37:16" pos:end="37:49">(<expr pos:start="37:17" pos:end="37:48"><name pos:start="37:17" pos:end="37:30"><name pos:start="37:17" pos:end="37:18">st</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:30">start_time</name></name> <operator pos:start="37:32" pos:end="37:33">==</operator> <name pos:start="37:35" pos:end="37:48">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:22"><block_content pos:start="39:17" pos:end="39:22">

                <break pos:start="39:17" pos:end="39:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="43:9" pos:end="45:18"><if pos:start="43:9" pos:end="45:18">if <condition pos:start="43:12" pos:end="43:32">(<expr pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:13">i</name> <operator pos:start="43:15" pos:end="43:16">==</operator> <name pos:start="43:18" pos:end="43:31"><name pos:start="43:18" pos:end="43:19">ic</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:31">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:18"><block_content pos:start="45:13" pos:end="45:18">

            <break pos:start="45:13" pos:end="45:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:38"><expr pos:start="49:9" pos:end="49:37"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:37"><name pos:start="49:15" pos:end="49:28">av_read_packet</name><argument_list pos:start="49:29" pos:end="49:37">(<argument pos:start="49:30" pos:end="49:31"><expr pos:start="49:30" pos:end="49:31"><name pos:start="49:30" pos:end="49:31">ic</name></expr></argument>, <argument pos:start="49:34" pos:end="49:36"><expr pos:start="49:34" pos:end="49:36"><name pos:start="49:34" pos:end="49:36">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="53:18"><if pos:start="51:9" pos:end="53:18">if <condition pos:start="51:12" pos:end="51:21">(<expr pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:15">ret</name> <operator pos:start="51:17" pos:end="51:18">!=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:18"><block_content pos:start="53:13" pos:end="53:18">

            <break pos:start="53:13" pos:end="53:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:31"><expr pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:17">read_size</name> <operator pos:start="55:19" pos:end="55:20">+=</operator> <name pos:start="55:22" pos:end="55:30"><name pos:start="55:22" pos:end="55:24">pkt</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:30">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:44"><expr pos:start="57:9" pos:end="57:43"><name pos:start="57:9" pos:end="57:10">st</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <name pos:start="57:14" pos:end="57:43"><name pos:start="57:14" pos:end="57:15">ic</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:24">streams</name><index pos:start="57:25" pos:end="57:43">[<expr pos:start="57:26" pos:end="57:42"><name pos:start="57:26" pos:end="57:42"><name pos:start="57:26" pos:end="57:28">pkt</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:42">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="65:10"><if pos:start="59:9" pos:end="65:10">if <condition pos:start="59:12" pos:end="59:39">(<expr pos:start="59:13" pos:end="59:38"><name pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:15">pkt</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:20">pts</name></name> <operator pos:start="59:22" pos:end="59:23">!=</operator> <name pos:start="59:25" pos:end="59:38">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="59:41" pos:end="65:10">{<block_content pos:start="61:13" pos:end="63:112">

            <if_stmt pos:start="61:13" pos:end="63:112"><if pos:start="61:13" pos:end="63:112">if <condition pos:start="61:16" pos:end="61:49">(<expr pos:start="61:17" pos:end="61:48"><name pos:start="61:17" pos:end="61:30"><name pos:start="61:17" pos:end="61:18">st</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:30">start_time</name></name> <operator pos:start="61:32" pos:end="61:33">==</operator> <name pos:start="61:35" pos:end="61:48">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:112"><block_content pos:start="63:17" pos:end="63:112">

                <expr_stmt pos:start="63:17" pos:end="63:112"><expr pos:start="63:17" pos:end="63:111"><name pos:start="63:17" pos:end="63:30"><name pos:start="63:17" pos:end="63:18">st</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:30">start_time</name></name> <operator pos:start="63:32" pos:end="63:32">=</operator> <operator pos:start="63:34" pos:end="63:34">(</operator><name pos:start="63:35" pos:end="63:41">int64_t</name><operator pos:start="63:42" pos:end="63:42">)</operator><operator pos:start="63:43" pos:end="63:43">(</operator><operator pos:start="63:44" pos:end="63:44">(</operator><name pos:start="63:45" pos:end="63:50">double</name><operator pos:start="63:51" pos:end="63:51">)</operator><name pos:start="63:52" pos:end="63:59"><name pos:start="63:52" pos:end="63:54">pkt</name><operator pos:start="63:55" pos:end="63:56">-&gt;</operator><name pos:start="63:57" pos:end="63:59">pts</name></name> <operator pos:start="63:61" pos:end="63:61">*</operator> <name pos:start="63:63" pos:end="63:73"><name pos:start="63:63" pos:end="63:64">ic</name><operator pos:start="63:65" pos:end="63:66">-&gt;</operator><name pos:start="63:67" pos:end="63:73">pts_num</name></name> <operator pos:start="63:75" pos:end="63:75">*</operator> <operator pos:start="63:77" pos:end="63:77">(</operator><name pos:start="63:78" pos:end="63:83">double</name><operator pos:start="63:84" pos:end="63:84">)</operator><name pos:start="63:85" pos:end="63:96">AV_TIME_BASE</name> <operator pos:start="63:98" pos:end="63:98">/</operator> <name pos:start="63:100" pos:end="63:110"><name pos:start="63:100" pos:end="63:101">ic</name><operator pos:start="63:102" pos:end="63:103">-&gt;</operator><name pos:start="63:104" pos:end="63:110">pts_den</name></name><operator pos:start="63:111" pos:end="63:111">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

         </block_content>}</block></if></if_stmt>

         <expr_stmt pos:start="67:10" pos:end="67:29"><expr pos:start="67:10" pos:end="67:28"><call pos:start="67:10" pos:end="67:28"><name pos:start="67:10" pos:end="67:23">av_free_packet</name><argument_list pos:start="67:24" pos:end="67:28">(<argument pos:start="67:25" pos:end="67:27"><expr pos:start="67:25" pos:end="67:27"><name pos:start="67:25" pos:end="67:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     </block_content>}</block></for>



    <comment type="block" pos:start="73:5" pos:end="73:65">/* we compute the minimum start_time and use it as default */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:26"><expr pos:start="75:5" pos:end="75:25"><name pos:start="75:5" pos:end="75:14">start_time</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <name pos:start="75:18" pos:end="75:25">MAXINT64</name></expr>;</expr_stmt>

    <for pos:start="77:5" pos:end="87:5">for<control pos:start="77:8" pos:end="77:39">(<init pos:start="77:9" pos:end="77:14"><expr pos:start="77:9" pos:end="77:13"><name pos:start="77:9" pos:end="77:9">i</name> <operator pos:start="77:11" pos:end="77:11">=</operator> <literal type="number" pos:start="77:13" pos:end="77:13">0</literal></expr>;</init> <condition pos:start="77:16" pos:end="77:34"><expr pos:start="77:16" pos:end="77:33"><name pos:start="77:16" pos:end="77:16">i</name> <operator pos:start="77:18" pos:end="77:18">&lt;</operator> <name pos:start="77:20" pos:end="77:33"><name pos:start="77:20" pos:end="77:21">ic</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:33">nb_streams</name></name></expr>;</condition> <incr pos:start="77:36" pos:end="77:38"><expr pos:start="77:36" pos:end="77:38"><name pos:start="77:36" pos:end="77:36">i</name><operator pos:start="77:37" pos:end="77:38">++</operator></expr></incr>)</control> <block pos:start="77:41" pos:end="87:5">{<block_content pos:start="79:9" pos:end="85:40">

        <expr_stmt pos:start="79:9" pos:end="79:28"><expr pos:start="79:9" pos:end="79:27"><name pos:start="79:9" pos:end="79:10">st</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <name pos:start="79:14" pos:end="79:27"><name pos:start="79:14" pos:end="79:15">ic</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:24">streams</name><index pos:start="79:25" pos:end="79:27">[<expr pos:start="79:26" pos:end="79:26"><name pos:start="79:26" pos:end="79:26">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="85:40"><if pos:start="81:9" pos:end="85:40">if <condition pos:start="81:12" pos:end="83:40">(<expr pos:start="81:13" pos:end="83:39"><name pos:start="81:13" pos:end="81:26"><name pos:start="81:13" pos:end="81:14">st</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:26">start_time</name></name> <operator pos:start="81:28" pos:end="81:29">!=</operator> <name pos:start="81:31" pos:end="81:44">AV_NOPTS_VALUE</name> <operator pos:start="81:46" pos:end="81:47">&amp;&amp;</operator>

            <name pos:start="83:13" pos:end="83:26"><name pos:start="83:13" pos:end="83:14">st</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:26">start_time</name></name> <operator pos:start="83:28" pos:end="83:28">&lt;</operator> <name pos:start="83:30" pos:end="83:39">start_time</name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:40"><block_content pos:start="85:13" pos:end="85:40">

            <expr_stmt pos:start="85:13" pos:end="85:40"><expr pos:start="85:13" pos:end="85:39"><name pos:start="85:13" pos:end="85:22">start_time</name> <operator pos:start="85:24" pos:end="85:24">=</operator> <name pos:start="85:26" pos:end="85:39"><name pos:start="85:26" pos:end="85:27">st</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:39">start_time</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="89:5" pos:end="89:48"><expr pos:start="89:5" pos:end="89:47"><call pos:start="89:5" pos:end="89:47"><name pos:start="89:5" pos:end="89:11">fprintf</name><argument_list pos:start="89:12" pos:end="89:47">(<argument pos:start="89:13" pos:end="89:18"><expr pos:start="89:13" pos:end="89:18"><name pos:start="89:13" pos:end="89:18">stderr</name></expr></argument>, <argument pos:start="89:21" pos:end="89:34"><expr pos:start="89:21" pos:end="89:34"><literal type="string" pos:start="89:21" pos:end="89:34">"start=%lld\n"</literal></expr></argument>, <argument pos:start="89:37" pos:end="89:46"><expr pos:start="89:37" pos:end="89:46"><name pos:start="89:37" pos:end="89:46">start_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="93:36"><if pos:start="91:5" pos:end="93:36">if <condition pos:start="91:8" pos:end="91:31">(<expr pos:start="91:9" pos:end="91:30"><name pos:start="91:9" pos:end="91:18">start_time</name> <operator pos:start="91:20" pos:end="91:21">!=</operator> <name pos:start="91:23" pos:end="91:30">MAXINT64</name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:36"><block_content pos:start="93:9" pos:end="93:36">

        <expr_stmt pos:start="93:9" pos:end="93:36"><expr pos:start="93:9" pos:end="93:35"><name pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:10">ic</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:22">start_time</name></name> <operator pos:start="93:24" pos:end="93:24">=</operator> <name pos:start="93:26" pos:end="93:35">start_time</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    

    <comment type="block" pos:start="97:5" pos:end="97:42">/* estimate the end time (duration) */</comment>

    <comment type="block" pos:start="99:5" pos:end="99:43">/* XXX: may need to support wrapping */</comment>

    <expr_stmt pos:start="101:5" pos:end="101:29"><expr pos:start="101:5" pos:end="101:28"><name pos:start="101:5" pos:end="101:12">filesize</name> <operator pos:start="101:14" pos:end="101:14">=</operator> <name pos:start="101:16" pos:end="101:28"><name pos:start="101:16" pos:end="101:17">ic</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:28">file_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:47"><expr pos:start="103:5" pos:end="103:46"><name pos:start="103:5" pos:end="103:10">offset</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <name pos:start="103:14" pos:end="103:21">filesize</name> <operator pos:start="103:23" pos:end="103:23">-</operator> <name pos:start="103:25" pos:end="103:46">DURATION_MAX_READ_SIZE</name></expr>;</expr_stmt>

    <if_stmt pos:start="105:5" pos:end="107:19"><if pos:start="105:5" pos:end="107:19">if <condition pos:start="105:8" pos:end="105:19">(<expr pos:start="105:9" pos:end="105:18"><name pos:start="105:9" pos:end="105:14">offset</name> <operator pos:start="105:16" pos:end="105:16">&lt;</operator> <literal type="number" pos:start="105:18" pos:end="105:18">0</literal></expr>)</condition><block type="pseudo" pos:start="107:9" pos:end="107:19"><block_content pos:start="107:9" pos:end="107:19">

        <expr_stmt pos:start="107:9" pos:end="107:19"><expr pos:start="107:9" pos:end="107:18"><name pos:start="107:9" pos:end="107:14">offset</name> <operator pos:start="107:16" pos:end="107:16">=</operator> <literal type="number" pos:start="107:18" pos:end="107:18">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="111:5" pos:end="111:28">/* flush packet queue */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:27"><expr pos:start="113:5" pos:end="113:26"><call pos:start="113:5" pos:end="113:26"><name pos:start="113:5" pos:end="113:22">flush_packet_queue</name><argument_list pos:start="113:23" pos:end="113:26">(<argument pos:start="113:24" pos:end="113:25"><expr pos:start="113:24" pos:end="113:25"><name pos:start="113:24" pos:end="113:25">ic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:41"><expr pos:start="117:5" pos:end="117:40"><call pos:start="117:5" pos:end="117:40"><name pos:start="117:5" pos:end="117:13">url_fseek</name><argument_list pos:start="117:14" pos:end="117:40">(<argument pos:start="117:15" pos:end="117:21"><expr pos:start="117:15" pos:end="117:21"><operator pos:start="117:15" pos:end="117:15">&amp;</operator><name pos:start="117:16" pos:end="117:21"><name pos:start="117:16" pos:end="117:17">ic</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:21">pb</name></name></expr></argument>, <argument pos:start="117:24" pos:end="117:29"><expr pos:start="117:24" pos:end="117:29"><name pos:start="117:24" pos:end="117:29">offset</name></expr></argument>, <argument pos:start="117:32" pos:end="117:39"><expr pos:start="117:32" pos:end="117:39"><name pos:start="117:32" pos:end="117:39">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:18"><expr pos:start="119:5" pos:end="119:17"><name pos:start="119:5" pos:end="119:13">read_size</name> <operator pos:start="119:15" pos:end="119:15">=</operator> <literal type="number" pos:start="119:17" pos:end="119:17">0</literal></expr>;</expr_stmt>

    <for pos:start="121:5" pos:end="175:5">for<control pos:start="121:8" pos:end="121:11">(<init pos:start="121:9" pos:end="121:9">;</init><condition pos:start="121:10" pos:end="121:10">;</condition><incr/>)</control> <block pos:start="121:13" pos:end="175:5">{<block_content pos:start="123:9" pos:end="173:28">

        <if_stmt pos:start="123:9" pos:end="125:18"><if pos:start="123:9" pos:end="125:18">if <condition pos:start="123:12" pos:end="123:48">(<expr pos:start="123:13" pos:end="123:47"><name pos:start="123:13" pos:end="123:21">read_size</name> <operator pos:start="123:23" pos:end="123:24">&gt;=</operator> <name pos:start="123:26" pos:end="123:47">DURATION_MAX_READ_SIZE</name></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:18"><block_content pos:start="125:13" pos:end="125:18">

            <break pos:start="125:13" pos:end="125:18">break;</break></block_content></block></if></if_stmt>

        <comment type="block" pos:start="127:9" pos:end="127:51">/* if all info is available, we can stop */</comment>

        <for pos:start="129:9" pos:end="137:9">for<control pos:start="129:12" pos:end="129:42">(<init pos:start="129:13" pos:end="129:18"><expr pos:start="129:13" pos:end="129:17"><name pos:start="129:13" pos:end="129:13">i</name> <operator pos:start="129:15" pos:end="129:15">=</operator> <literal type="number" pos:start="129:17" pos:end="129:17">0</literal></expr>;</init><condition pos:start="129:19" pos:end="129:37"><expr pos:start="129:19" pos:end="129:36"><name pos:start="129:19" pos:end="129:19">i</name> <operator pos:start="129:21" pos:end="129:21">&lt;</operator> <name pos:start="129:23" pos:end="129:36"><name pos:start="129:23" pos:end="129:24">ic</name><operator pos:start="129:25" pos:end="129:26">-&gt;</operator><name pos:start="129:27" pos:end="129:36">nb_streams</name></name></expr>;</condition> <incr pos:start="129:39" pos:end="129:41"><expr pos:start="129:39" pos:end="129:41"><name pos:start="129:39" pos:end="129:39">i</name><operator pos:start="129:40" pos:end="129:41">++</operator></expr></incr>)</control> <block pos:start="129:44" pos:end="137:9">{<block_content pos:start="131:13" pos:end="135:22">

            <expr_stmt pos:start="131:13" pos:end="131:32"><expr pos:start="131:13" pos:end="131:31"><name pos:start="131:13" pos:end="131:14">st</name> <operator pos:start="131:16" pos:end="131:16">=</operator> <name pos:start="131:18" pos:end="131:31"><name pos:start="131:18" pos:end="131:19">ic</name><operator pos:start="131:20" pos:end="131:21">-&gt;</operator><name pos:start="131:22" pos:end="131:28">streams</name><index pos:start="131:29" pos:end="131:31">[<expr pos:start="131:30" pos:end="131:30"><name pos:start="131:30" pos:end="131:30">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="133:13" pos:end="135:22"><if pos:start="133:13" pos:end="135:22">if <condition pos:start="133:16" pos:end="133:47">(<expr pos:start="133:17" pos:end="133:46"><name pos:start="133:17" pos:end="133:28"><name pos:start="133:17" pos:end="133:18">st</name><operator pos:start="133:19" pos:end="133:20">-&gt;</operator><name pos:start="133:21" pos:end="133:28">duration</name></name> <operator pos:start="133:30" pos:end="133:31">==</operator> <name pos:start="133:33" pos:end="133:46">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="135:17" pos:end="135:22"><block_content pos:start="135:17" pos:end="135:22">

                <break pos:start="135:17" pos:end="135:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="139:9" pos:end="141:18"><if pos:start="139:9" pos:end="141:18">if <condition pos:start="139:12" pos:end="139:32">(<expr pos:start="139:13" pos:end="139:31"><name pos:start="139:13" pos:end="139:13">i</name> <operator pos:start="139:15" pos:end="139:16">==</operator> <name pos:start="139:18" pos:end="139:31"><name pos:start="139:18" pos:end="139:19">ic</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:31">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:18"><block_content pos:start="141:13" pos:end="141:18">

            <break pos:start="141:13" pos:end="141:18">break;</break></block_content></block></if></if_stmt>

        

        <expr_stmt pos:start="145:9" pos:end="145:38"><expr pos:start="145:9" pos:end="145:37"><name pos:start="145:9" pos:end="145:11">ret</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <call pos:start="145:15" pos:end="145:37"><name pos:start="145:15" pos:end="145:28">av_read_packet</name><argument_list pos:start="145:29" pos:end="145:37">(<argument pos:start="145:30" pos:end="145:31"><expr pos:start="145:30" pos:end="145:31"><name pos:start="145:30" pos:end="145:31">ic</name></expr></argument>, <argument pos:start="145:34" pos:end="145:36"><expr pos:start="145:34" pos:end="145:36"><name pos:start="145:34" pos:end="145:36">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="149:18"><if pos:start="147:9" pos:end="149:18">if <condition pos:start="147:12" pos:end="147:21">(<expr pos:start="147:13" pos:end="147:20"><name pos:start="147:13" pos:end="147:15">ret</name> <operator pos:start="147:17" pos:end="147:18">!=</operator> <literal type="number" pos:start="147:20" pos:end="147:20">0</literal></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:18"><block_content pos:start="149:13" pos:end="149:18">

            <break pos:start="149:13" pos:end="149:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:31"><expr pos:start="151:9" pos:end="151:30"><name pos:start="151:9" pos:end="151:17">read_size</name> <operator pos:start="151:19" pos:end="151:20">+=</operator> <name pos:start="151:22" pos:end="151:30"><name pos:start="151:22" pos:end="151:24">pkt</name><operator pos:start="151:25" pos:end="151:26">-&gt;</operator><name pos:start="151:27" pos:end="151:30">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:44"><expr pos:start="153:9" pos:end="153:43"><name pos:start="153:9" pos:end="153:10">st</name> <operator pos:start="153:12" pos:end="153:12">=</operator> <name pos:start="153:14" pos:end="153:43"><name pos:start="153:14" pos:end="153:15">ic</name><operator pos:start="153:16" pos:end="153:17">-&gt;</operator><name pos:start="153:18" pos:end="153:24">streams</name><index pos:start="153:25" pos:end="153:43">[<expr pos:start="153:26" pos:end="153:42"><name pos:start="153:26" pos:end="153:42"><name pos:start="153:26" pos:end="153:28">pkt</name><operator pos:start="153:29" pos:end="153:30">-&gt;</operator><name pos:start="153:31" pos:end="153:42">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="155:9" pos:end="171:9"><if pos:start="155:9" pos:end="171:9">if <condition pos:start="155:12" pos:end="155:39">(<expr pos:start="155:13" pos:end="155:38"><name pos:start="155:13" pos:end="155:20"><name pos:start="155:13" pos:end="155:15">pkt</name><operator pos:start="155:16" pos:end="155:17">-&gt;</operator><name pos:start="155:18" pos:end="155:20">pts</name></name> <operator pos:start="155:22" pos:end="155:23">!=</operator> <name pos:start="155:25" pos:end="155:38">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="155:41" pos:end="171:9">{<block_content pos:start="157:13" pos:end="169:13">

            <expr_stmt pos:start="157:13" pos:end="157:102"><expr pos:start="157:13" pos:end="157:101"><name pos:start="157:13" pos:end="157:20">end_time</name> <operator pos:start="157:22" pos:end="157:22">=</operator> <operator pos:start="157:24" pos:end="157:24">(</operator><name pos:start="157:25" pos:end="157:31">int64_t</name><operator pos:start="157:32" pos:end="157:32">)</operator><operator pos:start="157:33" pos:end="157:33">(</operator><operator pos:start="157:34" pos:end="157:34">(</operator><name pos:start="157:35" pos:end="157:40">double</name><operator pos:start="157:41" pos:end="157:41">)</operator><name pos:start="157:42" pos:end="157:49"><name pos:start="157:42" pos:end="157:44">pkt</name><operator pos:start="157:45" pos:end="157:46">-&gt;</operator><name pos:start="157:47" pos:end="157:49">pts</name></name> <operator pos:start="157:51" pos:end="157:51">*</operator> <name pos:start="157:53" pos:end="157:63"><name pos:start="157:53" pos:end="157:54">ic</name><operator pos:start="157:55" pos:end="157:56">-&gt;</operator><name pos:start="157:57" pos:end="157:63">pts_num</name></name> <operator pos:start="157:65" pos:end="157:65">*</operator> <operator pos:start="157:67" pos:end="157:67">(</operator><name pos:start="157:68" pos:end="157:73">double</name><operator pos:start="157:74" pos:end="157:74">)</operator><name pos:start="157:75" pos:end="157:86">AV_TIME_BASE</name> <operator pos:start="157:88" pos:end="157:88">/</operator> <name pos:start="157:90" pos:end="157:100"><name pos:start="157:90" pos:end="157:91">ic</name><operator pos:start="157:92" pos:end="157:93">-&gt;</operator><name pos:start="157:94" pos:end="157:100">pts_den</name></name><operator pos:start="157:101" pos:end="157:101">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:49"><expr pos:start="159:13" pos:end="159:48"><name pos:start="159:13" pos:end="159:20">duration</name> <operator pos:start="159:22" pos:end="159:22">=</operator> <name pos:start="159:24" pos:end="159:31">end_time</name> <operator pos:start="159:33" pos:end="159:33">-</operator> <name pos:start="159:35" pos:end="159:48"><name pos:start="159:35" pos:end="159:36">st</name><operator pos:start="159:37" pos:end="159:38">-&gt;</operator><name pos:start="159:39" pos:end="159:48">start_time</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="161:13" pos:end="169:13"><if pos:start="161:13" pos:end="169:13">if <condition pos:start="161:16" pos:end="161:29">(<expr pos:start="161:17" pos:end="161:28"><name pos:start="161:17" pos:end="161:24">duration</name> <operator pos:start="161:26" pos:end="161:26">&gt;</operator> <literal type="number" pos:start="161:28" pos:end="161:28">0</literal></expr>)</condition> <block pos:start="161:31" pos:end="169:13">{<block_content pos:start="163:17" pos:end="167:44">

                <if_stmt pos:start="163:17" pos:end="167:44"><if pos:start="163:17" pos:end="167:44">if <condition pos:start="163:20" pos:end="165:44">(<expr pos:start="163:21" pos:end="165:43"><name pos:start="163:21" pos:end="163:32"><name pos:start="163:21" pos:end="163:22">st</name><operator pos:start="163:23" pos:end="163:24">-&gt;</operator><name pos:start="163:25" pos:end="163:32">duration</name></name> <operator pos:start="163:34" pos:end="163:35">==</operator> <name pos:start="163:37" pos:end="163:50">AV_NOPTS_VALUE</name> <operator pos:start="163:52" pos:end="163:53">||</operator>

                    <name pos:start="165:21" pos:end="165:32"><name pos:start="165:21" pos:end="165:22">st</name><operator pos:start="165:23" pos:end="165:24">-&gt;</operator><name pos:start="165:25" pos:end="165:32">duration</name></name> <operator pos:start="165:34" pos:end="165:34">&lt;</operator> <name pos:start="165:36" pos:end="165:43">duration</name></expr>)</condition><block type="pseudo" pos:start="167:21" pos:end="167:44"><block_content pos:start="167:21" pos:end="167:44">

                    <expr_stmt pos:start="167:21" pos:end="167:44"><expr pos:start="167:21" pos:end="167:43"><name pos:start="167:21" pos:end="167:32"><name pos:start="167:21" pos:end="167:22">st</name><operator pos:start="167:23" pos:end="167:24">-&gt;</operator><name pos:start="167:25" pos:end="167:32">duration</name></name> <operator pos:start="167:34" pos:end="167:34">=</operator> <name pos:start="167:36" pos:end="167:43">duration</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:28"><expr pos:start="173:9" pos:end="173:27"><call pos:start="173:9" pos:end="173:27"><name pos:start="173:9" pos:end="173:22">av_free_packet</name><argument_list pos:start="173:23" pos:end="173:27">(<argument pos:start="173:24" pos:end="173:26"><expr pos:start="173:24" pos:end="173:26"><name pos:start="173:24" pos:end="173:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    

    <comment type="block" pos:start="179:5" pos:end="179:33">/* estimate total duration */</comment>

    <expr_stmt pos:start="181:5" pos:end="181:24"><expr pos:start="181:5" pos:end="181:23"><name pos:start="181:5" pos:end="181:12">end_time</name> <operator pos:start="181:14" pos:end="181:14">=</operator> <name pos:start="181:16" pos:end="181:23">MININT64</name></expr>;</expr_stmt>

    <for pos:start="183:5" pos:end="197:5">for<control pos:start="183:8" pos:end="183:38">(<init pos:start="183:9" pos:end="183:14"><expr pos:start="183:9" pos:end="183:13"><name pos:start="183:9" pos:end="183:9">i</name> <operator pos:start="183:11" pos:end="183:11">=</operator> <literal type="number" pos:start="183:13" pos:end="183:13">0</literal></expr>;</init><condition pos:start="183:15" pos:end="183:33"><expr pos:start="183:15" pos:end="183:32"><name pos:start="183:15" pos:end="183:15">i</name> <operator pos:start="183:17" pos:end="183:17">&lt;</operator> <name pos:start="183:19" pos:end="183:32"><name pos:start="183:19" pos:end="183:20">ic</name><operator pos:start="183:21" pos:end="183:22">-&gt;</operator><name pos:start="183:23" pos:end="183:32">nb_streams</name></name></expr>;</condition> <incr pos:start="183:35" pos:end="183:37"><expr pos:start="183:35" pos:end="183:37"><name pos:start="183:35" pos:end="183:35">i</name><operator pos:start="183:36" pos:end="183:37">++</operator></expr></incr>)</control> <block pos:start="183:40" pos:end="197:5">{<block_content pos:start="185:9" pos:end="195:9">

        <expr_stmt pos:start="185:9" pos:end="185:28"><expr pos:start="185:9" pos:end="185:27"><name pos:start="185:9" pos:end="185:10">st</name> <operator pos:start="185:12" pos:end="185:12">=</operator> <name pos:start="185:14" pos:end="185:27"><name pos:start="185:14" pos:end="185:15">ic</name><operator pos:start="185:16" pos:end="185:17">-&gt;</operator><name pos:start="185:18" pos:end="185:24">streams</name><index pos:start="185:25" pos:end="185:27">[<expr pos:start="185:26" pos:end="185:26"><name pos:start="185:26" pos:end="185:26">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="187:9" pos:end="195:9"><if pos:start="187:9" pos:end="195:9">if <condition pos:start="187:12" pos:end="187:43">(<expr pos:start="187:13" pos:end="187:42"><name pos:start="187:13" pos:end="187:24"><name pos:start="187:13" pos:end="187:14">st</name><operator pos:start="187:15" pos:end="187:16">-&gt;</operator><name pos:start="187:17" pos:end="187:24">duration</name></name> <operator pos:start="187:26" pos:end="187:27">!=</operator> <name pos:start="187:29" pos:end="187:42">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="187:45" pos:end="195:9">{<block_content pos:start="189:13" pos:end="193:37">

            <expr_stmt pos:start="189:13" pos:end="189:54"><expr pos:start="189:13" pos:end="189:53"><name pos:start="189:13" pos:end="189:21">end_time1</name> <operator pos:start="189:23" pos:end="189:23">=</operator> <name pos:start="189:25" pos:end="189:38"><name pos:start="189:25" pos:end="189:26">st</name><operator pos:start="189:27" pos:end="189:28">-&gt;</operator><name pos:start="189:29" pos:end="189:38">start_time</name></name> <operator pos:start="189:40" pos:end="189:40">+</operator> <name pos:start="189:42" pos:end="189:53"><name pos:start="189:42" pos:end="189:43">st</name><operator pos:start="189:44" pos:end="189:45">-&gt;</operator><name pos:start="189:46" pos:end="189:53">duration</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="191:13" pos:end="193:37"><if pos:start="191:13" pos:end="193:37">if <condition pos:start="191:16" pos:end="191:37">(<expr pos:start="191:17" pos:end="191:36"><name pos:start="191:17" pos:end="191:25">end_time1</name> <operator pos:start="191:27" pos:end="191:27">&gt;</operator> <name pos:start="191:29" pos:end="191:36">end_time</name></expr>)</condition><block type="pseudo" pos:start="193:17" pos:end="193:37"><block_content pos:start="193:17" pos:end="193:37">

                <expr_stmt pos:start="193:17" pos:end="193:37"><expr pos:start="193:17" pos:end="193:36"><name pos:start="193:17" pos:end="193:24">end_time</name> <operator pos:start="193:26" pos:end="193:26">=</operator> <name pos:start="193:28" pos:end="193:36">end_time1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    

    <comment type="block" pos:start="201:5" pos:end="203:23">/* update start_time (new stream may have been created, so we do

       it at the end */</comment>

    <if_stmt pos:start="205:5" pos:end="217:5"><if pos:start="205:5" pos:end="217:5">if <condition pos:start="205:8" pos:end="205:41">(<expr pos:start="205:9" pos:end="205:40"><name pos:start="205:9" pos:end="205:22"><name pos:start="205:9" pos:end="205:10">ic</name><operator pos:start="205:11" pos:end="205:12">-&gt;</operator><name pos:start="205:13" pos:end="205:22">start_time</name></name> <operator pos:start="205:24" pos:end="205:25">!=</operator> <name pos:start="205:27" pos:end="205:40">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="205:43" pos:end="217:5">{<block_content pos:start="207:9" pos:end="215:9">

        <for pos:start="207:9" pos:end="215:9">for<control pos:start="207:12" pos:end="207:43">(<init pos:start="207:13" pos:end="207:18"><expr pos:start="207:13" pos:end="207:17"><name pos:start="207:13" pos:end="207:13">i</name> <operator pos:start="207:15" pos:end="207:15">=</operator> <literal type="number" pos:start="207:17" pos:end="207:17">0</literal></expr>;</init> <condition pos:start="207:20" pos:end="207:38"><expr pos:start="207:20" pos:end="207:37"><name pos:start="207:20" pos:end="207:20">i</name> <operator pos:start="207:22" pos:end="207:22">&lt;</operator> <name pos:start="207:24" pos:end="207:37"><name pos:start="207:24" pos:end="207:25">ic</name><operator pos:start="207:26" pos:end="207:27">-&gt;</operator><name pos:start="207:28" pos:end="207:37">nb_streams</name></name></expr>;</condition> <incr pos:start="207:40" pos:end="207:42"><expr pos:start="207:40" pos:end="207:42"><name pos:start="207:40" pos:end="207:40">i</name><operator pos:start="207:41" pos:end="207:42">++</operator></expr></incr>)</control> <block pos:start="207:45" pos:end="215:9">{<block_content pos:start="209:13" pos:end="213:48">

            <expr_stmt pos:start="209:13" pos:end="209:32"><expr pos:start="209:13" pos:end="209:31"><name pos:start="209:13" pos:end="209:14">st</name> <operator pos:start="209:16" pos:end="209:16">=</operator> <name pos:start="209:18" pos:end="209:31"><name pos:start="209:18" pos:end="209:19">ic</name><operator pos:start="209:20" pos:end="209:21">-&gt;</operator><name pos:start="209:22" pos:end="209:28">streams</name><index pos:start="209:29" pos:end="209:31">[<expr pos:start="209:30" pos:end="209:30"><name pos:start="209:30" pos:end="209:30">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="211:13" pos:end="213:48"><if pos:start="211:13" pos:end="213:48">if <condition pos:start="211:16" pos:end="211:49">(<expr pos:start="211:17" pos:end="211:48"><name pos:start="211:17" pos:end="211:30"><name pos:start="211:17" pos:end="211:18">st</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:30">start_time</name></name> <operator pos:start="211:32" pos:end="211:33">==</operator> <name pos:start="211:35" pos:end="211:48">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="213:17" pos:end="213:48"><block_content pos:start="213:17" pos:end="213:48">

                <expr_stmt pos:start="213:17" pos:end="213:48"><expr pos:start="213:17" pos:end="213:47"><name pos:start="213:17" pos:end="213:30"><name pos:start="213:17" pos:end="213:18">st</name><operator pos:start="213:19" pos:end="213:20">-&gt;</operator><name pos:start="213:21" pos:end="213:30">start_time</name></name> <operator pos:start="213:32" pos:end="213:32">=</operator> <name pos:start="213:34" pos:end="213:47"><name pos:start="213:34" pos:end="213:35">ic</name><operator pos:start="213:36" pos:end="213:37">-&gt;</operator><name pos:start="213:38" pos:end="213:47">start_time</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="221:5" pos:end="239:5"><if pos:start="221:5" pos:end="239:5">if <condition pos:start="221:8" pos:end="221:29">(<expr pos:start="221:9" pos:end="221:28"><name pos:start="221:9" pos:end="221:16">end_time</name> <operator pos:start="221:18" pos:end="221:19">!=</operator> <name pos:start="221:21" pos:end="221:28">MININT64</name></expr>)</condition> <block pos:start="221:31" pos:end="239:5">{<block_content pos:start="225:9" pos:end="237:49">

        <comment type="block" pos:start="223:9" pos:end="223:53">/* put dummy values for duration if needed */</comment>

        <for pos:start="225:9" pos:end="235:9">for<control pos:start="225:12" pos:end="225:42">(<init pos:start="225:13" pos:end="225:18"><expr pos:start="225:13" pos:end="225:17"><name pos:start="225:13" pos:end="225:13">i</name> <operator pos:start="225:15" pos:end="225:15">=</operator> <literal type="number" pos:start="225:17" pos:end="225:17">0</literal></expr>;</init><condition pos:start="225:19" pos:end="225:37"><expr pos:start="225:19" pos:end="225:36"><name pos:start="225:19" pos:end="225:19">i</name> <operator pos:start="225:21" pos:end="225:21">&lt;</operator> <name pos:start="225:23" pos:end="225:36"><name pos:start="225:23" pos:end="225:24">ic</name><operator pos:start="225:25" pos:end="225:26">-&gt;</operator><name pos:start="225:27" pos:end="225:36">nb_streams</name></name></expr>;</condition> <incr pos:start="225:39" pos:end="225:41"><expr pos:start="225:39" pos:end="225:41"><name pos:start="225:39" pos:end="225:39">i</name><operator pos:start="225:40" pos:end="225:41">++</operator></expr></incr>)</control> <block pos:start="225:44" pos:end="235:9">{<block_content pos:start="227:13" pos:end="233:57">

            <expr_stmt pos:start="227:13" pos:end="227:32"><expr pos:start="227:13" pos:end="227:31"><name pos:start="227:13" pos:end="227:14">st</name> <operator pos:start="227:16" pos:end="227:16">=</operator> <name pos:start="227:18" pos:end="227:31"><name pos:start="227:18" pos:end="227:19">ic</name><operator pos:start="227:20" pos:end="227:21">-&gt;</operator><name pos:start="227:22" pos:end="227:28">streams</name><index pos:start="227:29" pos:end="227:31">[<expr pos:start="227:30" pos:end="227:30"><name pos:start="227:30" pos:end="227:30">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="229:13" pos:end="233:57"><if pos:start="229:13" pos:end="233:57">if <condition pos:start="229:16" pos:end="231:49">(<expr pos:start="229:17" pos:end="231:48"><name pos:start="229:17" pos:end="229:28"><name pos:start="229:17" pos:end="229:18">st</name><operator pos:start="229:19" pos:end="229:20">-&gt;</operator><name pos:start="229:21" pos:end="229:28">duration</name></name> <operator pos:start="229:30" pos:end="229:31">==</operator> <name pos:start="229:33" pos:end="229:46">AV_NOPTS_VALUE</name> <operator pos:start="229:48" pos:end="229:49">&amp;&amp;</operator> 

                <name pos:start="231:17" pos:end="231:30"><name pos:start="231:17" pos:end="231:18">st</name><operator pos:start="231:19" pos:end="231:20">-&gt;</operator><name pos:start="231:21" pos:end="231:30">start_time</name></name> <operator pos:start="231:32" pos:end="231:33">!=</operator> <name pos:start="231:35" pos:end="231:48">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="233:17" pos:end="233:57"><block_content pos:start="233:17" pos:end="233:57">

                <expr_stmt pos:start="233:17" pos:end="233:57"><expr pos:start="233:17" pos:end="233:56"><name pos:start="233:17" pos:end="233:28"><name pos:start="233:17" pos:end="233:18">st</name><operator pos:start="233:19" pos:end="233:20">-&gt;</operator><name pos:start="233:21" pos:end="233:28">duration</name></name> <operator pos:start="233:30" pos:end="233:30">=</operator> <name pos:start="233:32" pos:end="233:39">end_time</name> <operator pos:start="233:41" pos:end="233:41">-</operator> <name pos:start="233:43" pos:end="233:56"><name pos:start="233:43" pos:end="233:44">st</name><operator pos:start="233:45" pos:end="233:46">-&gt;</operator><name pos:start="233:47" pos:end="233:56">start_time</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="237:9" pos:end="237:49"><expr pos:start="237:9" pos:end="237:48"><name pos:start="237:9" pos:end="237:20"><name pos:start="237:9" pos:end="237:10">ic</name><operator pos:start="237:11" pos:end="237:12">-&gt;</operator><name pos:start="237:13" pos:end="237:20">duration</name></name> <operator pos:start="237:22" pos:end="237:22">=</operator> <name pos:start="237:24" pos:end="237:31">end_time</name> <operator pos:start="237:33" pos:end="237:33">-</operator> <name pos:start="237:35" pos:end="237:48"><name pos:start="237:35" pos:end="237:36">ic</name><operator pos:start="237:37" pos:end="237:38">-&gt;</operator><name pos:start="237:39" pos:end="237:48">start_time</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="243:5" pos:end="243:36"><expr pos:start="243:5" pos:end="243:35"><call pos:start="243:5" pos:end="243:35"><name pos:start="243:5" pos:end="243:13">url_fseek</name><argument_list pos:start="243:14" pos:end="243:35">(<argument pos:start="243:15" pos:end="243:21"><expr pos:start="243:15" pos:end="243:21"><operator pos:start="243:15" pos:end="243:15">&amp;</operator><name pos:start="243:16" pos:end="243:21"><name pos:start="243:16" pos:end="243:17">ic</name><operator pos:start="243:18" pos:end="243:19">-&gt;</operator><name pos:start="243:20" pos:end="243:21">pb</name></name></expr></argument>, <argument pos:start="243:24" pos:end="243:24"><expr pos:start="243:24" pos:end="243:24"><literal type="number" pos:start="243:24" pos:end="243:24">0</literal></expr></argument>, <argument pos:start="243:27" pos:end="243:34"><expr pos:start="243:27" pos:end="243:34"><name pos:start="243:27" pos:end="243:34">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
