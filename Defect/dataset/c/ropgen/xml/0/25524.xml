<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25524.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">ff_framesync_request_frame</name><parameter_list pos:start="1:31" pos:end="1:70">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:42">FFFrameSync</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">fs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:69"><decl pos:start="1:49" pos:end="1:69"><type pos:start="1:49" pos:end="1:69"><name pos:start="1:49" pos:end="1:60">AVFilterLink</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:69">outlink</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:15">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFilterContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ctx</name> <init pos:start="5:26" pos:end="5:39">= <expr pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:34">outlink</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:39">src</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">input</name></decl>, <decl pos:start="7:16" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:18">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:19"><if pos:start="11:5" pos:end="13:19">if <condition pos:start="11:8" pos:end="11:54">(<expr pos:start="11:9" pos:end="11:53"><operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:12">ret</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <call pos:start="11:16" pos:end="11:48"><name pos:start="11:16" pos:end="11:41">ff_framesync_process_frame</name><argument_list pos:start="11:42" pos:end="11:48">(<argument pos:start="11:43" pos:end="11:44"><expr pos:start="11:43" pos:end="11:44"><name pos:start="11:43" pos:end="11:44">fs</name></expr></argument>, <argument pos:start="11:47" pos:end="11:47"><expr pos:start="11:47" pos:end="11:47"><literal type="number" pos:start="11:47" pos:end="11:47">0</literal></expr></argument>)</argument_list></call><operator pos:start="11:49" pos:end="11:49">)</operator> <operator pos:start="11:51" pos:end="11:51">&lt;</operator> <literal type="number" pos:start="11:53" pos:end="11:53">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:19"><block_content pos:start="13:9" pos:end="13:19">

        <return pos:start="13:9" pos:end="13:19">return <expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="17:17"><if pos:start="15:5" pos:end="17:17">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">&gt;</operator> <literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="21:27"><if pos:start="19:5" pos:end="21:27">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:10">fs</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:15">eof</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:27"><block_content pos:start="21:9" pos:end="21:27">

        <return pos:start="21:9" pos:end="21:27">return <expr pos:start="21:16" pos:end="21:26"><name pos:start="21:16" pos:end="21:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:9">input</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <name pos:start="23:13" pos:end="23:26"><name pos:start="23:13" pos:end="23:14">fs</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:26">in_request</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:47"><expr pos:start="25:5" pos:end="25:46"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:46"><name pos:start="25:11" pos:end="25:26">ff_request_frame</name><argument_list pos:start="25:27" pos:end="25:46">(<argument pos:start="25:28" pos:end="25:45"><expr pos:start="25:28" pos:end="25:45"><name pos:start="25:28" pos:end="25:45"><name pos:start="25:28" pos:end="25:30">ctx</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:38">inputs</name><index pos:start="25:39" pos:end="25:45">[<expr pos:start="25:40" pos:end="25:44"><name pos:start="25:40" pos:end="25:44">input</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="39:5"><if pos:start="27:5" pos:end="39:5">if <condition pos:start="27:8" pos:end="27:27">(<expr pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:14">==</operator> <name pos:start="27:16" pos:end="27:26">AVERROR_EOF</name></expr>)</condition> <block pos:start="27:29" pos:end="39:5">{<block_content pos:start="29:9" pos:end="37:16">

        <if_stmt pos:start="29:9" pos:end="31:23"><if pos:start="29:9" pos:end="31:23">if <condition pos:start="29:12" pos:end="29:64">(<expr pos:start="29:13" pos:end="29:63"><operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:16">ret</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <call pos:start="29:20" pos:end="29:58"><name pos:start="29:20" pos:end="29:41">ff_framesync_add_frame</name><argument_list pos:start="29:42" pos:end="29:58">(<argument pos:start="29:43" pos:end="29:44"><expr pos:start="29:43" pos:end="29:44"><name pos:start="29:43" pos:end="29:44">fs</name></expr></argument>, <argument pos:start="29:47" pos:end="29:51"><expr pos:start="29:47" pos:end="29:51"><name pos:start="29:47" pos:end="29:51">input</name></expr></argument>, <argument pos:start="29:54" pos:end="29:57"><expr pos:start="29:54" pos:end="29:57"><name pos:start="29:54" pos:end="29:57">NULL</name></expr></argument>)</argument_list></call><operator pos:start="29:59" pos:end="29:59">)</operator> <operator pos:start="29:61" pos:end="29:61">&lt;</operator> <literal type="number" pos:start="29:63" pos:end="29:63">0</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:23"><block_content pos:start="31:13" pos:end="31:23">

            <return pos:start="31:13" pos:end="31:23">return <expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="35:23"><if pos:start="33:9" pos:end="35:23">if <condition pos:start="33:12" pos:end="33:58">(<expr pos:start="33:13" pos:end="33:57"><operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:16">ret</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="33:52"><name pos:start="33:20" pos:end="33:45">ff_framesync_process_frame</name><argument_list pos:start="33:46" pos:end="33:52">(<argument pos:start="33:47" pos:end="33:48"><expr pos:start="33:47" pos:end="33:48"><name pos:start="33:47" pos:end="33:48">fs</name></expr></argument>, <argument pos:start="33:51" pos:end="33:51"><expr pos:start="33:51" pos:end="33:51"><literal type="number" pos:start="33:51" pos:end="33:51">0</literal></expr></argument>)</argument_list></call><operator pos:start="33:53" pos:end="33:53">)</operator> <operator pos:start="33:55" pos:end="33:55">&lt;</operator> <literal type="number" pos:start="33:57" pos:end="33:57">0</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:23"><block_content pos:start="35:13" pos:end="35:23">

            <return pos:start="35:13" pos:end="35:23">return <expr pos:start="35:20" pos:end="35:22"><name pos:start="35:20" pos:end="35:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:16"><expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="41:5" pos:end="41:15">return <expr pos:start="41:12" pos:end="41:14"><name pos:start="41:12" pos:end="41:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
