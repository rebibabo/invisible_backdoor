<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7443.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">change_parent_backing_link</name><parameter_list pos:start="1:39" pos:end="3:60">(<parameter pos:start="1:40" pos:end="1:61"><decl pos:start="1:40" pos:end="1:61"><type pos:start="1:40" pos:end="1:61"><name pos:start="1:40" pos:end="1:55">BlockDriverState</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">from</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:59"><decl pos:start="3:40" pos:end="3:59"><type pos:start="3:40" pos:end="3:59"><name pos:start="3:40" pos:end="3:55">BlockDriverState</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:59">to</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:5">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">BdrvChild</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">c</name></decl>, <decl pos:start="7:19" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:15"><modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:23">next</name></decl>, <decl pos:start="7:26" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:15"><modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:30">to_c</name></decl>;</decl_stmt>



    <macro pos:start="11:5" pos:end="11:60"><name pos:start="11:5" pos:end="11:22">QLIST_FOREACH_SAFE</name><argument_list pos:start="11:23" pos:end="11:60">(<argument pos:start="11:24" pos:end="11:24">c</argument>, <argument pos:start="11:27" pos:end="11:40">&amp;from-&gt;parents</argument>, <argument pos:start="11:43" pos:end="11:53">next_parent</argument>, <argument pos:start="11:56" pos:end="11:59">next</argument>)</argument_list></macro> <block pos:start="11:62" pos:end="59:5">{<block_content pos:start="13:9" pos:end="57:25">

        <if_stmt pos:start="13:9" pos:end="17:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:34">(<expr pos:start="13:13" pos:end="13:33"><name pos:start="13:13" pos:end="13:33"><name pos:start="13:13" pos:end="13:13">c</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:19">role</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:33">stay_at_node</name></name></expr>)</condition> <block pos:start="13:36" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:21">

            <continue pos:start="15:13" pos:end="15:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="19:9" pos:end="43:9"><if pos:start="19:9" pos:end="43:9">if <condition pos:start="19:12" pos:end="19:38">(<expr pos:start="19:13" pos:end="19:37"><name pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:13">c</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:19">role</name></name> <operator pos:start="19:21" pos:end="19:22">==</operator> <operator pos:start="19:24" pos:end="19:24">&amp;</operator><name pos:start="19:25" pos:end="19:37">child_backing</name></expr>)</condition> <block pos:start="19:40" pos:end="43:9">{<block_content pos:start="27:13" pos:end="41:13">

            <comment type="block" pos:start="21:13" pos:end="25:47">/* @from is generally not allowed to be a backing file, except for

             * when @to is the overlay. In that case, @from may not be replaced

             * by @to as @to's backing node. */</comment>

            <macro pos:start="27:13" pos:end="27:52"><name pos:start="27:13" pos:end="27:25">QLIST_FOREACH</name><argument_list pos:start="27:26" pos:end="27:52">(<argument pos:start="27:27" pos:end="27:30">to_c</argument>, <argument pos:start="27:33" pos:end="27:45">&amp;to-&gt;children</argument>, <argument pos:start="27:48" pos:end="27:51">next</argument>)</argument_list></macro> <block pos:start="27:54" pos:end="35:13">{<block_content pos:start="29:17" pos:end="33:17">

                <if_stmt pos:start="29:17" pos:end="33:17"><if pos:start="29:17" pos:end="33:17">if <condition pos:start="29:20" pos:end="29:30">(<expr pos:start="29:21" pos:end="29:29"><name pos:start="29:21" pos:end="29:24">to_c</name> <operator pos:start="29:26" pos:end="29:27">==</operator> <name pos:start="29:29" pos:end="29:29">c</name></expr>)</condition> <block pos:start="29:32" pos:end="33:17">{<block_content pos:start="31:21" pos:end="31:26">

                    <break pos:start="31:21" pos:end="31:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <if_stmt pos:start="37:13" pos:end="41:13"><if pos:start="37:13" pos:end="41:13">if <condition pos:start="37:16" pos:end="37:21">(<expr pos:start="37:17" pos:end="37:20"><name pos:start="37:17" pos:end="37:20">to_c</name></expr>)</condition> <block pos:start="37:23" pos:end="41:13">{<block_content pos:start="39:17" pos:end="39:25">

                <continue pos:start="39:17" pos:end="39:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:42"><expr pos:start="47:9" pos:end="47:41"><call pos:start="47:9" pos:end="47:41"><name pos:start="47:9" pos:end="47:14">assert</name><argument_list pos:start="47:15" pos:end="47:41">(<argument pos:start="47:16" pos:end="47:40"><expr pos:start="47:16" pos:end="47:40"><name pos:start="47:16" pos:end="47:22"><name pos:start="47:16" pos:end="47:16">c</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:22">role</name></name> <operator pos:start="47:24" pos:end="47:25">!=</operator> <operator pos:start="47:27" pos:end="47:27">&amp;</operator><name pos:start="47:28" pos:end="47:40">child_backing</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:21"><expr pos:start="49:9" pos:end="49:20"><call pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:16">bdrv_ref</name><argument_list pos:start="49:17" pos:end="49:20">(<argument pos:start="49:18" pos:end="49:19"><expr pos:start="49:18" pos:end="49:19"><name pos:start="49:18" pos:end="49:19">to</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="51:9" pos:end="53:50">/* FIXME Are we sure that bdrv_replace_child() can't run into

         * &amp;error_abort because of permissions? */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:40"><expr pos:start="55:9" pos:end="55:39"><call pos:start="55:9" pos:end="55:39"><name pos:start="55:9" pos:end="55:26">bdrv_replace_child</name><argument_list pos:start="55:27" pos:end="55:39">(<argument pos:start="55:28" pos:end="55:28"><expr pos:start="55:28" pos:end="55:28"><name pos:start="55:28" pos:end="55:28">c</name></expr></argument>, <argument pos:start="55:31" pos:end="55:32"><expr pos:start="55:31" pos:end="55:32"><name pos:start="55:31" pos:end="55:32">to</name></expr></argument>, <argument pos:start="55:35" pos:end="55:38"><expr pos:start="55:35" pos:end="55:38"><name pos:start="55:35" pos:end="55:38">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:25"><expr pos:start="57:9" pos:end="57:24"><call pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:18">bdrv_unref</name><argument_list pos:start="57:19" pos:end="57:24">(<argument pos:start="57:20" pos:end="57:23"><expr pos:start="57:20" pos:end="57:23"><name pos:start="57:20" pos:end="57:23">from</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
