<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23110.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">char</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:14">g_strdup</name><parameter_list pos:start="1:15" pos:end="1:29">(<parameter pos:start="1:16" pos:end="1:28"><decl pos:start="1:16" pos:end="1:28"><type pos:start="1:16" pos:end="1:27"><specifier pos:start="1:16" pos:end="1:20">const</specifier> <name pos:start="1:22" pos:end="1:25">char</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:28">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:15">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:13">dup</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:12">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:11">(<expr pos:start="11:9" pos:end="11:10"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:10">s</name></expr>)</condition> <block pos:start="11:13" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:20">

        <return pos:start="13:9" pos:end="13:20">return <expr pos:start="13:16" pos:end="13:19"><name pos:start="13:16" pos:end="13:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><call pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:33">__coverity_string_null_sink__</name><argument_list pos:start="19:34" pos:end="19:36">(<argument pos:start="19:35" pos:end="19:35"><expr pos:start="19:35" pos:end="19:35"><name pos:start="19:35" pos:end="19:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><call pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:33">__coverity_string_size_sink__</name><argument_list pos:start="21:34" pos:end="21:36">(<argument pos:start="21:35" pos:end="21:35"><expr pos:start="21:35" pos:end="21:35"><name pos:start="21:35" pos:end="21:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:7">dup</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:37"><name pos:start="23:11" pos:end="23:35">__coverity_alloc_nosize__</name><argument_list pos:start="23:36" pos:end="23:37">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:54"><expr pos:start="25:5" pos:end="25:53"><call pos:start="25:5" pos:end="25:53"><name pos:start="25:5" pos:end="25:38">__coverity_mark_as_afm_allocated__</name><argument_list pos:start="25:39" pos:end="25:53">(<argument pos:start="25:40" pos:end="25:42"><expr pos:start="25:40" pos:end="25:42"><name pos:start="25:40" pos:end="25:42">dup</name></expr></argument>, <argument pos:start="25:45" pos:end="25:52"><expr pos:start="25:45" pos:end="25:52"><name pos:start="25:45" pos:end="25:52">AFM_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="27:5" pos:end="27:39">for <control pos:start="27:9" pos:end="27:37">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:32"><expr pos:start="27:17" pos:end="27:31"><operator pos:start="27:17" pos:end="27:17">(</operator><name pos:start="27:18" pos:end="27:23"><name pos:start="27:18" pos:end="27:20">dup</name><index pos:start="27:21" pos:end="27:23">[<expr pos:start="27:22" pos:end="27:22"><name pos:start="27:22" pos:end="27:22">i</name></expr>]</index></name> <operator pos:start="27:25" pos:end="27:25">=</operator> <name pos:start="27:27" pos:end="27:30"><name pos:start="27:27" pos:end="27:27">s</name><index pos:start="27:28" pos:end="27:30">[<expr pos:start="27:29" pos:end="27:29"><name pos:start="27:29" pos:end="27:29">i</name></expr>]</index></name><operator pos:start="27:31" pos:end="27:31">)</operator></expr>;</condition> <incr pos:start="27:34" pos:end="27:36"><expr pos:start="27:34" pos:end="27:36"><name pos:start="27:34" pos:end="27:34">i</name><operator pos:start="27:35" pos:end="27:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:39" pos:end="27:39"><block_content pos:start="27:39" pos:end="27:39"> <empty_stmt pos:start="27:39" pos:end="27:39">;</empty_stmt></block_content></block></for>

    <return pos:start="29:5" pos:end="29:15">return <expr pos:start="29:12" pos:end="29:14"><name pos:start="29:12" pos:end="29:14">dup</name></expr>;</return>

</block_content>}</block></function>
</unit>
