<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/460.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">dma_init2</name><parameter_list pos:start="1:22" pos:end="5:49">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:37"><name pos:start="1:23" pos:end="1:28">struct</name> <name pos:start="1:30" pos:end="1:37">dma_cont</name></name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">d</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:50"><decl pos:start="1:43" pos:end="1:50"><type pos:start="1:43" pos:end="1:50"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:50">base</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:62">dshift</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:35"><decl pos:start="3:23" pos:end="3:35"><type pos:start="3:23" pos:end="3:35"><name pos:start="3:23" pos:end="3:25">int</name></type> <name pos:start="3:27" pos:end="3:35">page_base</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:51"><decl pos:start="3:38" pos:end="3:51"><type pos:start="3:38" pos:end="3:51"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:51">pageh_base</name></decl></parameter>,

                      <parameter pos:start="5:23" pos:end="5:48"><decl pos:start="5:23" pos:end="5:48"><type pos:start="5:23" pos:end="5:48"><name pos:start="5:23" pos:end="5:30">qemu_irq</name> <modifier pos:start="5:32" pos:end="5:32">*</modifier></type><name pos:start="5:33" pos:end="5:48">cpu_request_exit</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="63:1">{<block_content pos:start="9:5" pos:end="61:5">

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:23"><expr pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:5">d</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:13">dshift</name></name> <operator pos:start="13:15" pos:end="13:15">=</operator> <name pos:start="13:17" pos:end="13:22">dshift</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:43"><expr pos:start="15:5" pos:end="15:42"><name pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:5">d</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:23">cpu_request_exit</name></name> <operator pos:start="15:25" pos:end="15:25">=</operator> <name pos:start="15:27" pos:end="15:42">cpu_request_exit</name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="21:54"><expr pos:start="19:5" pos:end="21:53"><call pos:start="19:5" pos:end="21:53"><name pos:start="19:5" pos:end="19:25">memory_region_init_io</name><argument_list pos:start="19:26" pos:end="21:53">(<argument pos:start="19:27" pos:end="19:40"><expr pos:start="19:27" pos:end="19:40"><operator pos:start="19:27" pos:end="19:27">&amp;</operator><name pos:start="19:28" pos:end="19:40"><name pos:start="19:28" pos:end="19:28">d</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:40">channel_io</name></name></expr></argument>, <argument pos:start="19:43" pos:end="19:46"><expr pos:start="19:43" pos:end="19:46"><name pos:start="19:43" pos:end="19:46">NULL</name></expr></argument>, <argument pos:start="19:49" pos:end="19:63"><expr pos:start="19:49" pos:end="19:63"><operator pos:start="19:49" pos:end="19:49">&amp;</operator><name pos:start="19:50" pos:end="19:63">channel_io_ops</name></expr></argument>, <argument pos:start="19:66" pos:end="19:66"><expr pos:start="19:66" pos:end="19:66"><name pos:start="19:66" pos:end="19:66">d</name></expr></argument>,

                          <argument pos:start="21:27" pos:end="21:36"><expr pos:start="21:27" pos:end="21:36"><literal type="string" pos:start="21:27" pos:end="21:36">"dma-chan"</literal></expr></argument>, <argument pos:start="21:39" pos:end="21:52"><expr pos:start="21:39" pos:end="21:52"><literal type="number" pos:start="21:39" pos:end="21:39">8</literal> <operator pos:start="21:41" pos:end="21:42">&lt;&lt;</operator> <name pos:start="21:44" pos:end="21:52"><name pos:start="21:44" pos:end="21:44">d</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:52">dshift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="25:54"><expr pos:start="23:5" pos:end="25:53"><call pos:start="23:5" pos:end="25:53"><name pos:start="23:5" pos:end="23:31">memory_region_add_subregion</name><argument_list pos:start="23:32" pos:end="25:53">(<argument pos:start="23:33" pos:end="23:58"><expr pos:start="23:33" pos:end="23:58"><call pos:start="23:33" pos:end="23:58"><name pos:start="23:33" pos:end="23:52">isa_address_space_io</name><argument_list pos:start="23:53" pos:end="23:58">(<argument pos:start="23:54" pos:end="23:57"><expr pos:start="23:54" pos:end="23:57"><name pos:start="23:54" pos:end="23:57">NULL</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="25:33" pos:end="25:36"><expr pos:start="25:33" pos:end="25:36"><name pos:start="25:33" pos:end="25:36">base</name></expr></argument>, <argument pos:start="25:39" pos:end="25:52"><expr pos:start="25:39" pos:end="25:52"><operator pos:start="25:39" pos:end="25:39">&amp;</operator><name pos:start="25:40" pos:end="25:52"><name pos:start="25:40" pos:end="25:40">d</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:52">channel_io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="31:41"><expr pos:start="29:5" pos:end="31:40"><call pos:start="29:5" pos:end="31:40"><name pos:start="29:5" pos:end="29:28">isa_register_portio_list</name><argument_list pos:start="29:29" pos:end="31:40">(<argument pos:start="29:30" pos:end="29:33"><expr pos:start="29:30" pos:end="29:33"><name pos:start="29:30" pos:end="29:33">NULL</name></expr></argument>, <argument pos:start="29:36" pos:end="29:44"><expr pos:start="29:36" pos:end="29:44"><name pos:start="29:36" pos:end="29:44">page_base</name></expr></argument>, <argument pos:start="29:47" pos:end="29:62"><expr pos:start="29:47" pos:end="29:62"><name pos:start="29:47" pos:end="29:62">page_portio_list</name></expr></argument>, <argument pos:start="29:65" pos:end="29:65"><expr pos:start="29:65" pos:end="29:65"><name pos:start="29:65" pos:end="29:65">d</name></expr></argument>,

                             <argument pos:start="31:30" pos:end="31:39"><expr pos:start="31:30" pos:end="31:39"><literal type="string" pos:start="31:30" pos:end="31:39">"dma-page"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:24">(<expr pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:18">pageh_base</name> <operator pos:start="33:20" pos:end="33:21">&gt;=</operator> <literal type="number" pos:start="33:23" pos:end="33:23">0</literal></expr>)</condition> <block pos:start="33:26" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:46">

        <expr_stmt pos:start="35:9" pos:end="37:46"><expr pos:start="35:9" pos:end="37:45"><call pos:start="35:9" pos:end="37:45"><name pos:start="35:9" pos:end="35:32">isa_register_portio_list</name><argument_list pos:start="35:33" pos:end="37:45">(<argument pos:start="35:34" pos:end="35:37"><expr pos:start="35:34" pos:end="35:37"><name pos:start="35:34" pos:end="35:37">NULL</name></expr></argument>, <argument pos:start="35:40" pos:end="35:49"><expr pos:start="35:40" pos:end="35:49"><name pos:start="35:40" pos:end="35:49">pageh_base</name></expr></argument>, <argument pos:start="35:52" pos:end="35:68"><expr pos:start="35:52" pos:end="35:68"><name pos:start="35:52" pos:end="35:68">pageh_portio_list</name></expr></argument>, <argument pos:start="35:71" pos:end="35:71"><expr pos:start="35:71" pos:end="35:71"><name pos:start="35:71" pos:end="35:71">d</name></expr></argument>,

                                 <argument pos:start="37:34" pos:end="37:44"><expr pos:start="37:34" pos:end="37:44"><literal type="string" pos:start="37:34" pos:end="37:44">"dma-pageh"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="45:42"><expr pos:start="43:5" pos:end="45:41"><call pos:start="43:5" pos:end="45:41"><name pos:start="43:5" pos:end="43:25">memory_region_init_io</name><argument_list pos:start="43:26" pos:end="45:41">(<argument pos:start="43:27" pos:end="43:37"><expr pos:start="43:27" pos:end="43:37"><operator pos:start="43:27" pos:end="43:27">&amp;</operator><name pos:start="43:28" pos:end="43:37"><name pos:start="43:28" pos:end="43:28">d</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:37">cont_io</name></name></expr></argument>, <argument pos:start="43:40" pos:end="43:43"><expr pos:start="43:40" pos:end="43:43"><name pos:start="43:40" pos:end="43:43">NULL</name></expr></argument>, <argument pos:start="43:46" pos:end="43:57"><expr pos:start="43:46" pos:end="43:57"><operator pos:start="43:46" pos:end="43:46">&amp;</operator><name pos:start="43:47" pos:end="43:57">cont_io_ops</name></expr></argument>, <argument pos:start="43:60" pos:end="43:60"><expr pos:start="43:60" pos:end="43:60"><name pos:start="43:60" pos:end="43:60">d</name></expr></argument>, <argument pos:start="43:63" pos:end="43:72"><expr pos:start="43:63" pos:end="43:72"><literal type="string" pos:start="43:63" pos:end="43:72">"dma-cont"</literal></expr></argument>,

                          <argument pos:start="45:27" pos:end="45:40"><expr pos:start="45:27" pos:end="45:40"><literal type="number" pos:start="45:27" pos:end="45:27">8</literal> <operator pos:start="45:29" pos:end="45:30">&lt;&lt;</operator> <name pos:start="45:32" pos:end="45:40"><name pos:start="45:32" pos:end="45:32">d</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:40">dshift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="49:70"><expr pos:start="47:5" pos:end="49:69"><call pos:start="47:5" pos:end="49:69"><name pos:start="47:5" pos:end="47:31">memory_region_add_subregion</name><argument_list pos:start="47:32" pos:end="49:69">(<argument pos:start="47:33" pos:end="47:58"><expr pos:start="47:33" pos:end="47:58"><call pos:start="47:33" pos:end="47:58"><name pos:start="47:33" pos:end="47:52">isa_address_space_io</name><argument_list pos:start="47:53" pos:end="47:58">(<argument pos:start="47:54" pos:end="47:57"><expr pos:start="47:54" pos:end="47:57"><name pos:start="47:54" pos:end="47:57">NULL</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="49:33" pos:end="49:55"><expr pos:start="49:33" pos:end="49:55"><name pos:start="49:33" pos:end="49:36">base</name> <operator pos:start="49:38" pos:end="49:38">+</operator> <operator pos:start="49:40" pos:end="49:40">(</operator><literal type="number" pos:start="49:41" pos:end="49:41">8</literal> <operator pos:start="49:43" pos:end="49:44">&lt;&lt;</operator> <name pos:start="49:46" pos:end="49:54"><name pos:start="49:46" pos:end="49:46">d</name><operator pos:start="49:47" pos:end="49:48">-&gt;</operator><name pos:start="49:49" pos:end="49:54">dshift</name></name><operator pos:start="49:55" pos:end="49:55">)</operator></expr></argument>, <argument pos:start="49:58" pos:end="49:68"><expr pos:start="49:58" pos:end="49:68"><operator pos:start="49:58" pos:end="49:58">&amp;</operator><name pos:start="49:59" pos:end="49:68"><name pos:start="49:59" pos:end="49:59">d</name><operator pos:start="49:60" pos:end="49:61">-&gt;</operator><name pos:start="49:62" pos:end="49:68">cont_io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:38"><expr pos:start="53:5" pos:end="53:37"><call pos:start="53:5" pos:end="53:37"><name pos:start="53:5" pos:end="53:23">qemu_register_reset</name><argument_list pos:start="53:24" pos:end="53:37">(<argument pos:start="53:25" pos:end="53:33"><expr pos:start="53:25" pos:end="53:33"><name pos:start="53:25" pos:end="53:33">dma_reset</name></expr></argument>, <argument pos:start="53:36" pos:end="53:36"><expr pos:start="53:36" pos:end="53:36"><name pos:start="53:36" pos:end="53:36">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:17"><expr pos:start="55:5" pos:end="55:16"><call pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:13">dma_reset</name><argument_list pos:start="55:14" pos:end="55:16">(<argument pos:start="55:15" pos:end="55:15"><expr pos:start="55:15" pos:end="55:15"><name pos:start="55:15" pos:end="55:15">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="57:5" pos:end="61:5">for <control pos:start="57:9" pos:end="57:46">(<init pos:start="57:10" pos:end="57:15"><expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:10">i</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>;</init> <condition pos:start="57:17" pos:end="57:41"><expr pos:start="57:17" pos:end="57:40"><name pos:start="57:17" pos:end="57:17">i</name> <operator pos:start="57:19" pos:end="57:19">&lt;</operator> <call pos:start="57:21" pos:end="57:40"><name pos:start="57:21" pos:end="57:30">ARRAY_SIZE</name> <argument_list pos:start="57:32" pos:end="57:40">(<argument pos:start="57:33" pos:end="57:39"><expr pos:start="57:33" pos:end="57:39"><name pos:start="57:33" pos:end="57:39"><name pos:start="57:33" pos:end="57:33">d</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:39">regs</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="57:43" pos:end="57:45"><expr pos:start="57:43" pos:end="57:45"><operator pos:start="57:43" pos:end="57:44">++</operator><name pos:start="57:45" pos:end="57:45">i</name></expr></incr>)</control> <block pos:start="57:48" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:56">

        <expr_stmt pos:start="59:9" pos:end="59:56"><expr pos:start="59:9" pos:end="59:55"><name pos:start="59:9" pos:end="59:18"><name pos:start="59:9" pos:end="59:9">d</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:15">regs</name><index pos:start="59:16" pos:end="59:18">[<expr pos:start="59:17" pos:end="59:17"><name pos:start="59:17" pos:end="59:17">i</name></expr>]</index></name><operator pos:start="59:19" pos:end="59:19">.</operator><name pos:start="59:20" pos:end="59:35">transfer_handler</name> <operator pos:start="59:37" pos:end="59:37">=</operator> <name pos:start="59:39" pos:end="59:55">dma_phony_handler</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
