<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25210.c" pos:tabs="8"><function pos:start="1:1" pos:end="457:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">ohci_service_iso_td</name><parameter_list pos:start="1:31" pos:end="3:46">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:40">OHCIState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">ohci</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:66"><decl pos:start="1:49" pos:end="1:66"><type pos:start="1:49" pos:end="1:66"><name pos:start="1:49" pos:end="1:62"><name pos:start="1:49" pos:end="1:54">struct</name> <name pos:start="1:56" pos:end="1:62">ohci_ed</name></name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:66">ed</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:45"><decl pos:start="3:32" pos:end="3:45"><type pos:start="3:32" pos:end="3:45"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:45">completion</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="457:1">{<block_content pos:start="7:5" pos:end="455:13">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">dir</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="12:0"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:14">len</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:start="11:1" pos:end="11:18">#<cpp:directive pos:start="11:2" pos:end="11:6">ifdef</cpp:directive> <name pos:start="11:8" pos:end="11:18">DEBUG_ISOCH</name></cpp:ifdef>

    <decl_stmt pos:start="13:5" pos:end="16:0"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:19">str</name> <init pos:start="13:21" pos:end="13:26">= <expr pos:start="13:23" pos:end="13:26"><name pos:start="13:23" pos:end="13:26">NULL</name></expr></init></decl>;</decl_stmt>

<cpp:endif pos:start="15:1" pos:end="15:6">#<cpp:directive pos:start="15:2" pos:end="15:6">endif</cpp:directive></cpp:endif>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">pid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:10"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:19"><decl pos:start="23:5" pos:end="23:18"><type pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:13">USBDevice</name> <modifier pos:start="23:15" pos:end="23:15">*</modifier></type><name pos:start="23:16" pos:end="23:18">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:30"><decl pos:start="25:5" pos:end="25:29"><type pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:10">struct</name> <name pos:start="25:12" pos:end="25:22">ohci_iso_td</name></name></type> <name pos:start="25:24" pos:end="25:29">iso_td</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:18"><decl pos:start="27:5" pos:end="27:17"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">uint32_t</name></type> <name pos:start="27:14" pos:end="27:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:28"><decl pos:start="29:5" pos:end="29:27"><type pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:12">uint16_t</name></type> <name pos:start="29:14" pos:end="29:27">starting_frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:34"><decl pos:start="31:5" pos:end="31:33"><type pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:11">int16_t</name></type> <name pos:start="31:13" pos:end="31:33">relative_frame_number</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:20"><decl pos:start="33:5" pos:end="33:19"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:19">frame_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:55"><decl pos:start="35:5" pos:end="35:25"><type pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:12">uint32_t</name></type> <name pos:start="35:14" pos:end="35:25">start_offset</name></decl>, <decl pos:start="35:28" pos:end="35:38"><type ref="prev" pos:start="35:5" pos:end="35:12"/><name pos:start="35:28" pos:end="35:38">next_offset</name></decl>, <decl pos:start="35:41" pos:end="35:54"><type ref="prev" pos:start="35:5" pos:end="35:12"/><name pos:start="35:41" pos:end="35:50">end_offset</name> <init pos:start="35:52" pos:end="35:54">= <expr pos:start="35:54" pos:end="35:54"><literal type="number" pos:start="35:54" pos:end="35:54">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:34"><decl pos:start="37:5" pos:end="37:23"><type pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:12">uint32_t</name></type> <name pos:start="37:14" pos:end="37:23">start_addr</name></decl>, <decl pos:start="37:26" pos:end="37:33"><type ref="prev" pos:start="37:5" pos:end="37:12"/><name pos:start="37:26" pos:end="37:33">end_addr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:37"><expr pos:start="41:5" pos:end="41:36"><name pos:start="41:5" pos:end="41:8">addr</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <name pos:start="41:12" pos:end="41:19"><name pos:start="41:12" pos:end="41:13">ed</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:19">head</name></name> <operator pos:start="41:21" pos:end="41:21">&amp;</operator> <name pos:start="41:23" pos:end="41:36">OHCI_DPTR_MASK</name></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:47">(<expr pos:start="45:9" pos:end="45:46"><operator pos:start="45:9" pos:end="45:9">!</operator><call pos:start="45:10" pos:end="45:46"><name pos:start="45:10" pos:end="45:25">ohci_read_iso_td</name><argument_list pos:start="45:26" pos:end="45:46">(<argument pos:start="45:27" pos:end="45:30"><expr pos:start="45:27" pos:end="45:30"><name pos:start="45:27" pos:end="45:30">ohci</name></expr></argument>, <argument pos:start="45:33" pos:end="45:36"><expr pos:start="45:33" pos:end="45:36"><name pos:start="45:33" pos:end="45:36">addr</name></expr></argument>, <argument pos:start="45:39" pos:end="45:45"><expr pos:start="45:39" pos:end="45:45"><operator pos:start="45:39" pos:end="45:39">&amp;</operator><name pos:start="45:40" pos:end="45:45">iso_td</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:49" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:17">

        <expr_stmt pos:start="47:9" pos:end="47:60"><expr pos:start="47:9" pos:end="47:59"><call pos:start="47:9" pos:end="47:59"><name pos:start="47:9" pos:end="47:14">printf</name><argument_list pos:start="47:15" pos:end="47:59">(<argument pos:start="47:16" pos:end="47:52"><expr pos:start="47:16" pos:end="47:52"><literal type="string" pos:start="47:16" pos:end="47:52">"usb-ohci: ISO_TD read error at %x\n"</literal></expr></argument>, <argument pos:start="47:55" pos:end="47:58"><expr pos:start="47:55" pos:end="47:58"><name pos:start="47:55" pos:end="47:58">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:50"><expr pos:start="55:5" pos:end="55:49"><name pos:start="55:5" pos:end="55:18">starting_frame</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <call pos:start="55:22" pos:end="55:49"><name pos:start="55:22" pos:end="55:28">OHCI_BM</name><argument_list pos:start="55:29" pos:end="55:49">(<argument pos:start="55:30" pos:end="55:41"><expr pos:start="55:30" pos:end="55:41"><name pos:start="55:30" pos:end="55:41"><name pos:start="55:30" pos:end="55:35">iso_td</name><operator pos:start="55:36" pos:end="55:36">.</operator><name pos:start="55:37" pos:end="55:41">flags</name></name></expr></argument>, <argument pos:start="55:44" pos:end="55:48"><expr pos:start="55:44" pos:end="55:48"><name pos:start="55:44" pos:end="55:48">TD_SF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:47"><expr pos:start="57:5" pos:end="57:46"><name pos:start="57:5" pos:end="57:15">frame_count</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <call pos:start="57:19" pos:end="57:46"><name pos:start="57:19" pos:end="57:25">OHCI_BM</name><argument_list pos:start="57:26" pos:end="57:46">(<argument pos:start="57:27" pos:end="57:38"><expr pos:start="57:27" pos:end="57:38"><name pos:start="57:27" pos:end="57:38"><name pos:start="57:27" pos:end="57:32">iso_td</name><operator pos:start="57:33" pos:end="57:33">.</operator><name pos:start="57:34" pos:end="57:38">flags</name></name></expr></argument>, <argument pos:start="57:41" pos:end="57:45"><expr pos:start="57:41" pos:end="57:45"><name pos:start="57:41" pos:end="57:45">TD_FC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="64:0"><expr pos:start="59:5" pos:end="59:68"><name pos:start="59:5" pos:end="59:25">relative_frame_number</name> <operator pos:start="59:27" pos:end="59:27">=</operator> <call pos:start="59:29" pos:end="59:68"><name pos:start="59:29" pos:end="59:32">USUB</name><argument_list pos:start="59:33" pos:end="59:68">(<argument pos:start="59:34" pos:end="59:51"><expr pos:start="59:34" pos:end="59:51"><name pos:start="59:34" pos:end="59:51"><name pos:start="59:34" pos:end="59:37">ohci</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:51">frame_number</name></name></expr></argument>, <argument pos:start="59:54" pos:end="59:67"><expr pos:start="59:54" pos:end="59:67"><name pos:start="59:54" pos:end="59:67">starting_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 



<cpp:ifdef pos:start="63:1" pos:end="63:18">#<cpp:directive pos:start="63:2" pos:end="63:6">ifdef</cpp:directive> <name pos:start="63:8" pos:end="63:18">DEBUG_ISOCH</name></cpp:ifdef>

    <expr_stmt pos:start="65:5" pos:end="94:0"><expr pos:start="65:5" pos:end="91:70"><call pos:start="65:5" pos:end="91:70"><name pos:start="65:5" pos:end="65:10">printf</name><argument_list pos:start="65:11" pos:end="91:70">(<argument pos:start="65:12" pos:end="77:34"><expr pos:start="65:12" pos:end="77:34"><literal type="string" pos:start="65:12" pos:end="65:53">"--- ISO_TD ED head 0x%.8x tailp 0x%.8x\n"</literal>

           <literal type="string" pos:start="67:12" pos:end="67:42">"0x%.8x 0x%.8x 0x%.8x 0x%.8x\n"</literal>

           <literal type="string" pos:start="69:12" pos:end="69:42">"0x%.8x 0x%.8x 0x%.8x 0x%.8x\n"</literal>

           <literal type="string" pos:start="71:12" pos:end="71:42">"0x%.8x 0x%.8x 0x%.8x 0x%.8x\n"</literal>

           <literal type="string" pos:start="73:12" pos:end="73:56">"frame_number 0x%.8x starting_frame 0x%.8x\n"</literal>

           <literal type="string" pos:start="75:12" pos:end="75:46">"frame_count  0x%.8x relative %d\n"</literal>

           <literal type="string" pos:start="77:12" pos:end="77:34">"di 0x%.8x cc 0x%.8x\n"</literal></expr></argument>,

           <argument pos:start="79:12" pos:end="79:36"><expr pos:start="79:12" pos:end="79:36"><name pos:start="79:12" pos:end="79:19"><name pos:start="79:12" pos:end="79:13">ed</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:19">head</name></name> <operator pos:start="79:21" pos:end="79:21">&amp;</operator> <name pos:start="79:23" pos:end="79:36">OHCI_DPTR_MASK</name></expr></argument>, <argument pos:start="79:39" pos:end="79:63"><expr pos:start="79:39" pos:end="79:63"><name pos:start="79:39" pos:end="79:46"><name pos:start="79:39" pos:end="79:40">ed</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:46">tail</name></name> <operator pos:start="79:48" pos:end="79:48">&amp;</operator> <name pos:start="79:50" pos:end="79:63">OHCI_DPTR_MASK</name></expr></argument>,

           <argument pos:start="81:12" pos:end="81:23"><expr pos:start="81:12" pos:end="81:23"><name pos:start="81:12" pos:end="81:23"><name pos:start="81:12" pos:end="81:17">iso_td</name><operator pos:start="81:18" pos:end="81:18">.</operator><name pos:start="81:19" pos:end="81:23">flags</name></name></expr></argument>, <argument pos:start="81:26" pos:end="81:34"><expr pos:start="81:26" pos:end="81:34"><name pos:start="81:26" pos:end="81:34"><name pos:start="81:26" pos:end="81:31">iso_td</name><operator pos:start="81:32" pos:end="81:32">.</operator><name pos:start="81:33" pos:end="81:34">bp</name></name></expr></argument>, <argument pos:start="81:37" pos:end="81:47"><expr pos:start="81:37" pos:end="81:47"><name pos:start="81:37" pos:end="81:47"><name pos:start="81:37" pos:end="81:42">iso_td</name><operator pos:start="81:43" pos:end="81:43">.</operator><name pos:start="81:44" pos:end="81:47">next</name></name></expr></argument>, <argument pos:start="81:50" pos:end="81:58"><expr pos:start="81:50" pos:end="81:58"><name pos:start="81:50" pos:end="81:58"><name pos:start="81:50" pos:end="81:55">iso_td</name><operator pos:start="81:56" pos:end="81:56">.</operator><name pos:start="81:57" pos:end="81:58">be</name></name></expr></argument>,

           <argument pos:start="83:12" pos:end="83:27"><expr pos:start="83:12" pos:end="83:27"><name pos:start="83:12" pos:end="83:27"><name pos:start="83:12" pos:end="83:17">iso_td</name><operator pos:start="83:18" pos:end="83:18">.</operator><name pos:start="83:19" pos:end="83:24">offset</name><index pos:start="83:25" pos:end="83:27">[<expr pos:start="83:26" pos:end="83:26"><literal type="number" pos:start="83:26" pos:end="83:26">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="83:30" pos:end="83:45"><expr pos:start="83:30" pos:end="83:45"><name pos:start="83:30" pos:end="83:45"><name pos:start="83:30" pos:end="83:35">iso_td</name><operator pos:start="83:36" pos:end="83:36">.</operator><name pos:start="83:37" pos:end="83:42">offset</name><index pos:start="83:43" pos:end="83:45">[<expr pos:start="83:44" pos:end="83:44"><literal type="number" pos:start="83:44" pos:end="83:44">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="83:48" pos:end="83:63"><expr pos:start="83:48" pos:end="83:63"><name pos:start="83:48" pos:end="83:63"><name pos:start="83:48" pos:end="83:53">iso_td</name><operator pos:start="83:54" pos:end="83:54">.</operator><name pos:start="83:55" pos:end="83:60">offset</name><index pos:start="83:61" pos:end="83:63">[<expr pos:start="83:62" pos:end="83:62"><literal type="number" pos:start="83:62" pos:end="83:62">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="83:66" pos:end="83:81"><expr pos:start="83:66" pos:end="83:81"><name pos:start="83:66" pos:end="83:81"><name pos:start="83:66" pos:end="83:71">iso_td</name><operator pos:start="83:72" pos:end="83:72">.</operator><name pos:start="83:73" pos:end="83:78">offset</name><index pos:start="83:79" pos:end="83:81">[<expr pos:start="83:80" pos:end="83:80"><literal type="number" pos:start="83:80" pos:end="83:80">3</literal></expr>]</index></name></expr></argument>,

           <argument pos:start="85:12" pos:end="85:27"><expr pos:start="85:12" pos:end="85:27"><name pos:start="85:12" pos:end="85:27"><name pos:start="85:12" pos:end="85:17">iso_td</name><operator pos:start="85:18" pos:end="85:18">.</operator><name pos:start="85:19" pos:end="85:24">offset</name><index pos:start="85:25" pos:end="85:27">[<expr pos:start="85:26" pos:end="85:26"><literal type="number" pos:start="85:26" pos:end="85:26">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="85:30" pos:end="85:45"><expr pos:start="85:30" pos:end="85:45"><name pos:start="85:30" pos:end="85:45"><name pos:start="85:30" pos:end="85:35">iso_td</name><operator pos:start="85:36" pos:end="85:36">.</operator><name pos:start="85:37" pos:end="85:42">offset</name><index pos:start="85:43" pos:end="85:45">[<expr pos:start="85:44" pos:end="85:44"><literal type="number" pos:start="85:44" pos:end="85:44">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="85:48" pos:end="85:63"><expr pos:start="85:48" pos:end="85:63"><name pos:start="85:48" pos:end="85:63"><name pos:start="85:48" pos:end="85:53">iso_td</name><operator pos:start="85:54" pos:end="85:54">.</operator><name pos:start="85:55" pos:end="85:60">offset</name><index pos:start="85:61" pos:end="85:63">[<expr pos:start="85:62" pos:end="85:62"><literal type="number" pos:start="85:62" pos:end="85:62">6</literal></expr>]</index></name></expr></argument>, <argument pos:start="85:66" pos:end="85:81"><expr pos:start="85:66" pos:end="85:81"><name pos:start="85:66" pos:end="85:81"><name pos:start="85:66" pos:end="85:71">iso_td</name><operator pos:start="85:72" pos:end="85:72">.</operator><name pos:start="85:73" pos:end="85:78">offset</name><index pos:start="85:79" pos:end="85:81">[<expr pos:start="85:80" pos:end="85:80"><literal type="number" pos:start="85:80" pos:end="85:80">7</literal></expr>]</index></name></expr></argument>,

           <argument pos:start="87:12" pos:end="87:29"><expr pos:start="87:12" pos:end="87:29"><name pos:start="87:12" pos:end="87:29"><name pos:start="87:12" pos:end="87:15">ohci</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:29">frame_number</name></name></expr></argument>, <argument pos:start="87:32" pos:end="87:45"><expr pos:start="87:32" pos:end="87:45"><name pos:start="87:32" pos:end="87:45">starting_frame</name></expr></argument>, 

           <argument pos:start="89:12" pos:end="89:22"><expr pos:start="89:12" pos:end="89:22"><name pos:start="89:12" pos:end="89:22">frame_count</name></expr></argument>, <argument pos:start="89:25" pos:end="89:45"><expr pos:start="89:25" pos:end="89:45"><name pos:start="89:25" pos:end="89:45">relative_frame_number</name></expr></argument>,         

           <argument pos:start="91:12" pos:end="91:39"><expr pos:start="91:12" pos:end="91:39"><call pos:start="91:12" pos:end="91:39"><name pos:start="91:12" pos:end="91:18">OHCI_BM</name><argument_list pos:start="91:19" pos:end="91:39">(<argument pos:start="91:20" pos:end="91:31"><expr pos:start="91:20" pos:end="91:31"><name pos:start="91:20" pos:end="91:31"><name pos:start="91:20" pos:end="91:25">iso_td</name><operator pos:start="91:26" pos:end="91:26">.</operator><name pos:start="91:27" pos:end="91:31">flags</name></name></expr></argument>, <argument pos:start="91:34" pos:end="91:38"><expr pos:start="91:34" pos:end="91:38"><name pos:start="91:34" pos:end="91:38">TD_DI</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="91:42" pos:end="91:69"><expr pos:start="91:42" pos:end="91:69"><call pos:start="91:42" pos:end="91:69"><name pos:start="91:42" pos:end="91:48">OHCI_BM</name><argument_list pos:start="91:49" pos:end="91:69">(<argument pos:start="91:50" pos:end="91:61"><expr pos:start="91:50" pos:end="91:61"><name pos:start="91:50" pos:end="91:61"><name pos:start="91:50" pos:end="91:55">iso_td</name><operator pos:start="91:56" pos:end="91:56">.</operator><name pos:start="91:57" pos:end="91:61">flags</name></name></expr></argument>, <argument pos:start="91:64" pos:end="91:68"><expr pos:start="91:64" pos:end="91:68"><name pos:start="91:64" pos:end="91:68">TD_CC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="93:1" pos:end="93:6">#<cpp:directive pos:start="93:2" pos:end="93:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="97:5" pos:end="133:5"><if pos:start="97:5" pos:end="103:5">if <condition pos:start="97:8" pos:end="97:34">(<expr pos:start="97:9" pos:end="97:33"><name pos:start="97:9" pos:end="97:29">relative_frame_number</name> <operator pos:start="97:31" pos:end="97:31">&lt;</operator> <literal type="number" pos:start="97:33" pos:end="97:33">0</literal></expr>)</condition> <block pos:start="97:36" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:17">

        <expr_stmt pos:start="99:9" pos:end="99:70"><expr pos:start="99:9" pos:end="99:69"><call pos:start="99:9" pos:end="99:69"><name pos:start="99:9" pos:end="99:15">DPRINTF</name><argument_list pos:start="99:16" pos:end="99:69">(<argument pos:start="99:17" pos:end="99:45"><expr pos:start="99:17" pos:end="99:45"><literal type="string" pos:start="99:17" pos:end="99:45">"usb-ohci: ISO_TD R=%d &lt; 0\n"</literal></expr></argument>, <argument pos:start="99:48" pos:end="99:68"><expr pos:start="99:48" pos:end="99:68"><name pos:start="99:48" pos:end="99:68">relative_frame_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="101:9" pos:end="101:17">return <expr pos:start="101:16" pos:end="101:16"><literal type="number" pos:start="101:16" pos:end="101:16">1</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="103:7" pos:end="133:5">else if <condition pos:start="103:15" pos:end="103:51">(<expr pos:start="103:16" pos:end="103:50"><name pos:start="103:16" pos:end="103:36">relative_frame_number</name> <operator pos:start="103:38" pos:end="103:38">&gt;</operator> <name pos:start="103:40" pos:end="103:50">frame_count</name></expr>)</condition> <block pos:start="103:53" pos:end="133:5">{<block_content pos:start="109:9" pos:end="131:17">

        <comment type="block" pos:start="105:9" pos:end="107:44">/* ISO TD expired - retire the TD to the Done Queue and continue with

           the next ISO TD of the same ED */</comment>

        <expr_stmt pos:start="109:9" pos:end="111:28"><expr pos:start="109:9" pos:end="111:27"><call pos:start="109:9" pos:end="111:27"><name pos:start="109:9" pos:end="109:15">DPRINTF</name><argument_list pos:start="109:16" pos:end="111:27">(<argument pos:start="109:17" pos:end="109:49"><expr pos:start="109:17" pos:end="109:49"><literal type="string" pos:start="109:17" pos:end="109:49">"usb-ohci: ISO_TD R=%d &gt; FC=%d\n"</literal></expr></argument>, <argument pos:start="109:52" pos:end="109:72"><expr pos:start="109:52" pos:end="109:72"><name pos:start="109:52" pos:end="109:72">relative_frame_number</name></expr></argument>, 

               <argument pos:start="111:16" pos:end="111:26"><expr pos:start="111:16" pos:end="111:26"><name pos:start="111:16" pos:end="111:26">frame_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:62"><expr pos:start="113:9" pos:end="113:61"><call pos:start="113:9" pos:end="113:61"><name pos:start="113:9" pos:end="113:19">OHCI_SET_BM</name><argument_list pos:start="113:20" pos:end="113:61">(<argument pos:start="113:21" pos:end="113:32"><expr pos:start="113:21" pos:end="113:32"><name pos:start="113:21" pos:end="113:32"><name pos:start="113:21" pos:end="113:26">iso_td</name><operator pos:start="113:27" pos:end="113:27">.</operator><name pos:start="113:28" pos:end="113:32">flags</name></name></expr></argument>, <argument pos:start="113:35" pos:end="113:39"><expr pos:start="113:35" pos:end="113:39"><name pos:start="113:35" pos:end="113:39">TD_CC</name></expr></argument>, <argument pos:start="113:42" pos:end="113:60"><expr pos:start="113:42" pos:end="113:60"><name pos:start="113:42" pos:end="113:60">OHCI_CC_DATAOVERRUN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:36"><expr pos:start="115:9" pos:end="115:35"><name pos:start="115:9" pos:end="115:16"><name pos:start="115:9" pos:end="115:10">ed</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:16">head</name></name> <operator pos:start="115:18" pos:end="115:19">&amp;=</operator> <operator pos:start="115:21" pos:end="115:21">~</operator><name pos:start="115:22" pos:end="115:35">OHCI_DPTR_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:51"><expr pos:start="117:9" pos:end="117:50"><name pos:start="117:9" pos:end="117:16"><name pos:start="117:9" pos:end="117:10">ed</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:16">head</name></name> <operator pos:start="117:18" pos:end="117:19">|=</operator> <operator pos:start="117:21" pos:end="117:21">(</operator><name pos:start="117:22" pos:end="117:32"><name pos:start="117:22" pos:end="117:27">iso_td</name><operator pos:start="117:28" pos:end="117:28">.</operator><name pos:start="117:29" pos:end="117:32">next</name></name> <operator pos:start="117:34" pos:end="117:34">&amp;</operator> <name pos:start="117:36" pos:end="117:49">OHCI_DPTR_MASK</name><operator pos:start="117:50" pos:end="117:50">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:33"><expr pos:start="119:9" pos:end="119:32"><name pos:start="119:9" pos:end="119:19"><name pos:start="119:9" pos:end="119:14">iso_td</name><operator pos:start="119:15" pos:end="119:15">.</operator><name pos:start="119:16" pos:end="119:19">next</name></name> <operator pos:start="119:21" pos:end="119:21">=</operator> <name pos:start="119:23" pos:end="119:32"><name pos:start="119:23" pos:end="119:26">ohci</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:32">done</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:26"><expr pos:start="121:9" pos:end="121:25"><name pos:start="121:9" pos:end="121:18"><name pos:start="121:9" pos:end="121:12">ohci</name><operator pos:start="121:13" pos:end="121:14">-&gt;</operator><name pos:start="121:15" pos:end="121:18">done</name></name> <operator pos:start="121:20" pos:end="121:20">=</operator> <name pos:start="121:22" pos:end="121:25">addr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:41"><expr pos:start="123:9" pos:end="123:40"><name pos:start="123:9" pos:end="123:9">i</name> <operator pos:start="123:11" pos:end="123:11">=</operator> <call pos:start="123:13" pos:end="123:40"><name pos:start="123:13" pos:end="123:19">OHCI_BM</name><argument_list pos:start="123:20" pos:end="123:40">(<argument pos:start="123:21" pos:end="123:32"><expr pos:start="123:21" pos:end="123:32"><name pos:start="123:21" pos:end="123:32"><name pos:start="123:21" pos:end="123:26">iso_td</name><operator pos:start="123:27" pos:end="123:27">.</operator><name pos:start="123:28" pos:end="123:32">flags</name></name></expr></argument>, <argument pos:start="123:35" pos:end="123:39"><expr pos:start="123:35" pos:end="123:39"><name pos:start="123:35" pos:end="123:39">TD_DI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="127:33"><if pos:start="125:9" pos:end="127:33">if <condition pos:start="125:12" pos:end="125:33">(<expr pos:start="125:13" pos:end="125:32"><name pos:start="125:13" pos:end="125:13">i</name> <operator pos:start="125:15" pos:end="125:15">&lt;</operator> <name pos:start="125:17" pos:end="125:32"><name pos:start="125:17" pos:end="125:20">ohci</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:32">done_count</name></name></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:33"><block_content pos:start="127:13" pos:end="127:33">

            <expr_stmt pos:start="127:13" pos:end="127:33"><expr pos:start="127:13" pos:end="127:32"><name pos:start="127:13" pos:end="127:28"><name pos:start="127:13" pos:end="127:16">ohci</name><operator pos:start="127:17" pos:end="127:18">-&gt;</operator><name pos:start="127:19" pos:end="127:28">done_count</name></name> <operator pos:start="127:30" pos:end="127:30">=</operator> <name pos:start="127:32" pos:end="127:32">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:45"><expr pos:start="129:9" pos:end="129:44"><call pos:start="129:9" pos:end="129:44"><name pos:start="129:9" pos:end="129:23">ohci_put_iso_td</name><argument_list pos:start="129:24" pos:end="129:44">(<argument pos:start="129:25" pos:end="129:28"><expr pos:start="129:25" pos:end="129:28"><name pos:start="129:25" pos:end="129:28">ohci</name></expr></argument>, <argument pos:start="129:31" pos:end="129:34"><expr pos:start="129:31" pos:end="129:34"><name pos:start="129:31" pos:end="129:34">addr</name></expr></argument>, <argument pos:start="129:37" pos:end="129:43"><expr pos:start="129:37" pos:end="129:43"><operator pos:start="129:37" pos:end="129:37">&amp;</operator><name pos:start="129:38" pos:end="129:43">iso_td</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:17">return <expr pos:start="131:16" pos:end="131:16"><literal type="number" pos:start="131:16" pos:end="131:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:35"><expr pos:start="137:5" pos:end="137:34"><name pos:start="137:5" pos:end="137:7">dir</name> <operator pos:start="137:9" pos:end="137:9">=</operator> <call pos:start="137:11" pos:end="137:34"><name pos:start="137:11" pos:end="137:17">OHCI_BM</name><argument_list pos:start="137:18" pos:end="137:34">(<argument pos:start="137:19" pos:end="137:27"><expr pos:start="137:19" pos:end="137:27"><name pos:start="137:19" pos:end="137:27"><name pos:start="137:19" pos:end="137:20">ed</name><operator pos:start="137:21" pos:end="137:22">-&gt;</operator><name pos:start="137:23" pos:end="137:27">flags</name></name></expr></argument>, <argument pos:start="137:30" pos:end="137:33"><expr pos:start="137:30" pos:end="137:33"><name pos:start="137:30" pos:end="137:33">ED_D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="139:5" pos:end="183:5">switch <condition pos:start="139:12" pos:end="139:16">(<expr pos:start="139:13" pos:end="139:15"><name pos:start="139:13" pos:end="139:15">dir</name></expr>)</condition> <block pos:start="139:18" pos:end="183:5">{<block_content pos:start="141:5" pos:end="181:17">

    <case pos:start="141:5" pos:end="144:0">case <expr pos:start="141:10" pos:end="141:23"><name pos:start="141:10" pos:end="141:23">OHCI_TD_DIR_IN</name></expr>:</case>

<cpp:ifdef pos:start="143:1" pos:end="143:18">#<cpp:directive pos:start="143:2" pos:end="143:6">ifdef</cpp:directive> <name pos:start="143:8" pos:end="143:18">DEBUG_ISOCH</name></cpp:ifdef>

        <expr_stmt pos:start="145:9" pos:end="148:0"><expr pos:start="145:9" pos:end="145:18"><name pos:start="145:9" pos:end="145:11">str</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <literal type="string" pos:start="145:15" pos:end="145:18">"in"</literal></expr>;</expr_stmt>

<cpp:endif pos:start="147:1" pos:end="147:6">#<cpp:directive pos:start="147:2" pos:end="147:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="149:9" pos:end="149:27"><expr pos:start="149:9" pos:end="149:26"><name pos:start="149:9" pos:end="149:11">pid</name> <operator pos:start="149:13" pos:end="149:13">=</operator> <name pos:start="149:15" pos:end="149:26">USB_TOKEN_IN</name></expr>;</expr_stmt>

        <break pos:start="151:9" pos:end="151:14">break;</break>

    <case pos:start="153:5" pos:end="156:0">case <expr pos:start="153:10" pos:end="153:24"><name pos:start="153:10" pos:end="153:24">OHCI_TD_DIR_OUT</name></expr>:</case>

<cpp:ifdef pos:start="155:1" pos:end="155:18">#<cpp:directive pos:start="155:2" pos:end="155:6">ifdef</cpp:directive> <name pos:start="155:8" pos:end="155:18">DEBUG_ISOCH</name></cpp:ifdef>

        <expr_stmt pos:start="157:9" pos:end="160:0"><expr pos:start="157:9" pos:end="157:19"><name pos:start="157:9" pos:end="157:11">str</name> <operator pos:start="157:13" pos:end="157:13">=</operator> <literal type="string" pos:start="157:15" pos:end="157:19">"out"</literal></expr>;</expr_stmt>

<cpp:endif pos:start="159:1" pos:end="159:6">#<cpp:directive pos:start="159:2" pos:end="159:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="161:9" pos:end="161:28"><expr pos:start="161:9" pos:end="161:27"><name pos:start="161:9" pos:end="161:11">pid</name> <operator pos:start="161:13" pos:end="161:13">=</operator> <name pos:start="161:15" pos:end="161:27">USB_TOKEN_OUT</name></expr>;</expr_stmt>

        <break pos:start="163:9" pos:end="163:14">break;</break>

    <case pos:start="165:5" pos:end="168:0">case <expr pos:start="165:10" pos:end="165:26"><name pos:start="165:10" pos:end="165:26">OHCI_TD_DIR_SETUP</name></expr>:</case>

<cpp:ifdef pos:start="167:1" pos:end="167:18">#<cpp:directive pos:start="167:2" pos:end="167:6">ifdef</cpp:directive> <name pos:start="167:8" pos:end="167:18">DEBUG_ISOCH</name></cpp:ifdef>

        <expr_stmt pos:start="169:9" pos:end="172:0"><expr pos:start="169:9" pos:end="169:21"><name pos:start="169:9" pos:end="169:11">str</name> <operator pos:start="169:13" pos:end="169:13">=</operator> <literal type="string" pos:start="169:15" pos:end="169:21">"setup"</literal></expr>;</expr_stmt>

<cpp:endif pos:start="171:1" pos:end="171:6">#<cpp:directive pos:start="171:2" pos:end="171:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="173:9" pos:end="173:30"><expr pos:start="173:9" pos:end="173:29"><name pos:start="173:9" pos:end="173:11">pid</name> <operator pos:start="173:13" pos:end="173:13">=</operator> <name pos:start="173:15" pos:end="173:29">USB_TOKEN_SETUP</name></expr>;</expr_stmt>

        <break pos:start="175:9" pos:end="175:14">break;</break>

    <default pos:start="177:5" pos:end="177:12">default:</default>

        <expr_stmt pos:start="179:9" pos:end="179:52"><expr pos:start="179:9" pos:end="179:51"><call pos:start="179:9" pos:end="179:51"><name pos:start="179:9" pos:end="179:14">printf</name><argument_list pos:start="179:15" pos:end="179:51">(<argument pos:start="179:16" pos:end="179:45"><expr pos:start="179:16" pos:end="179:45"><literal type="string" pos:start="179:16" pos:end="179:45">"usb-ohci: Bad direction %d\n"</literal></expr></argument>, <argument pos:start="179:48" pos:end="179:50"><expr pos:start="179:48" pos:end="179:50"><name pos:start="179:48" pos:end="179:50">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="181:9" pos:end="181:17">return <expr pos:start="181:16" pos:end="181:16"><literal type="number" pos:start="181:16" pos:end="181:16">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="187:5" pos:end="193:5"><if pos:start="187:5" pos:end="193:5">if <condition pos:start="187:8" pos:end="187:33">(<expr pos:start="187:9" pos:end="187:32"><operator pos:start="187:9" pos:end="187:9">!</operator><name pos:start="187:10" pos:end="187:18"><name pos:start="187:10" pos:end="187:15">iso_td</name><operator pos:start="187:16" pos:end="187:16">.</operator><name pos:start="187:17" pos:end="187:18">bp</name></name> <operator pos:start="187:20" pos:end="187:21">||</operator> <operator pos:start="187:23" pos:end="187:23">!</operator><name pos:start="187:24" pos:end="187:32"><name pos:start="187:24" pos:end="187:29">iso_td</name><operator pos:start="187:30" pos:end="187:30">.</operator><name pos:start="187:31" pos:end="187:32">be</name></name></expr>)</condition> <block pos:start="187:35" pos:end="193:5">{<block_content pos:start="189:9" pos:end="191:17">

        <expr_stmt pos:start="189:9" pos:end="189:79"><expr pos:start="189:9" pos:end="189:78"><call pos:start="189:9" pos:end="189:78"><name pos:start="189:9" pos:end="189:14">printf</name><argument_list pos:start="189:15" pos:end="189:78">(<argument pos:start="189:16" pos:end="189:55"><expr pos:start="189:16" pos:end="189:55"><literal type="string" pos:start="189:16" pos:end="189:55">"usb-ohci: ISO_TD bp 0x%.8x be 0x%.8x\n"</literal></expr></argument>, <argument pos:start="189:58" pos:end="189:66"><expr pos:start="189:58" pos:end="189:66"><name pos:start="189:58" pos:end="189:66"><name pos:start="189:58" pos:end="189:63">iso_td</name><operator pos:start="189:64" pos:end="189:64">.</operator><name pos:start="189:65" pos:end="189:66">bp</name></name></expr></argument>, <argument pos:start="189:69" pos:end="189:77"><expr pos:start="189:69" pos:end="189:77"><name pos:start="189:69" pos:end="189:77"><name pos:start="189:69" pos:end="189:74">iso_td</name><operator pos:start="189:75" pos:end="189:75">.</operator><name pos:start="189:76" pos:end="189:77">be</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="191:9" pos:end="191:17">return <expr pos:start="191:16" pos:end="191:16"><literal type="number" pos:start="191:16" pos:end="191:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:56"><expr pos:start="197:5" pos:end="197:55"><name pos:start="197:5" pos:end="197:16">start_offset</name> <operator pos:start="197:18" pos:end="197:18">=</operator> <name pos:start="197:20" pos:end="197:55"><name pos:start="197:20" pos:end="197:25">iso_td</name><operator pos:start="197:26" pos:end="197:26">.</operator><name pos:start="197:27" pos:end="197:32">offset</name><index pos:start="197:33" pos:end="197:55">[<expr pos:start="197:34" pos:end="197:54"><name pos:start="197:34" pos:end="197:54">relative_frame_number</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:59"><expr pos:start="199:5" pos:end="199:58"><name pos:start="199:5" pos:end="199:15">next_offset</name> <operator pos:start="199:17" pos:end="199:17">=</operator> <name pos:start="199:19" pos:end="199:58"><name pos:start="199:19" pos:end="199:24">iso_td</name><operator pos:start="199:25" pos:end="199:25">.</operator><name pos:start="199:26" pos:end="199:31">offset</name><index pos:start="199:32" pos:end="199:58">[<expr pos:start="199:33" pos:end="199:57"><name pos:start="199:33" pos:end="199:53">relative_frame_number</name> <operator pos:start="199:55" pos:end="199:55">+</operator> <literal type="number" pos:start="199:57" pos:end="199:57">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="203:5" pos:end="215:5"><if pos:start="203:5" pos:end="215:5">if <condition pos:start="203:8" pos:end="207:51">(<expr pos:start="203:9" pos:end="207:50"><operator pos:start="203:9" pos:end="203:9">!</operator><operator pos:start="203:10" pos:end="203:10">(</operator><call pos:start="203:11" pos:end="203:42"><name pos:start="203:11" pos:end="203:17">OHCI_BM</name><argument_list pos:start="203:18" pos:end="203:42">(<argument pos:start="203:19" pos:end="203:30"><expr pos:start="203:19" pos:end="203:30"><name pos:start="203:19" pos:end="203:30">start_offset</name></expr></argument>, <argument pos:start="203:33" pos:end="203:41"><expr pos:start="203:33" pos:end="203:41"><name pos:start="203:33" pos:end="203:41">TD_PSW_CC</name></expr></argument>)</argument_list></call> <operator pos:start="203:44" pos:end="203:44">&amp;</operator> <literal type="number" pos:start="203:46" pos:end="203:48">0xe</literal><operator pos:start="203:49" pos:end="203:49">)</operator> <operator pos:start="203:51" pos:end="203:52">||</operator> 

        <operator pos:start="205:9" pos:end="205:9">(</operator><operator pos:start="205:10" pos:end="205:10">(</operator><name pos:start="205:11" pos:end="205:31">relative_frame_number</name> <operator pos:start="205:33" pos:end="205:33">&lt;</operator> <name pos:start="205:35" pos:end="205:45">frame_count</name><operator pos:start="205:46" pos:end="205:46">)</operator> <operator pos:start="205:48" pos:end="205:49">&amp;&amp;</operator> 

         <operator pos:start="207:10" pos:end="207:10">!</operator><operator pos:start="207:11" pos:end="207:11">(</operator><call pos:start="207:12" pos:end="207:42"><name pos:start="207:12" pos:end="207:18">OHCI_BM</name><argument_list pos:start="207:19" pos:end="207:42">(<argument pos:start="207:20" pos:end="207:30"><expr pos:start="207:20" pos:end="207:30"><name pos:start="207:20" pos:end="207:30">next_offset</name></expr></argument>, <argument pos:start="207:33" pos:end="207:41"><expr pos:start="207:33" pos:end="207:41"><name pos:start="207:33" pos:end="207:41">TD_PSW_CC</name></expr></argument>)</argument_list></call> <operator pos:start="207:44" pos:end="207:44">&amp;</operator> <literal type="number" pos:start="207:46" pos:end="207:48">0xe</literal><operator pos:start="207:49" pos:end="207:49">)</operator><operator pos:start="207:50" pos:end="207:50">)</operator></expr>)</condition> <block pos:start="207:53" pos:end="215:5">{<block_content pos:start="209:9" pos:end="213:17">

        <expr_stmt pos:start="209:9" pos:end="211:42"><expr pos:start="209:9" pos:end="211:41"><call pos:start="209:9" pos:end="211:41"><name pos:start="209:9" pos:end="209:14">printf</name><argument_list pos:start="209:15" pos:end="211:41">(<argument pos:start="209:16" pos:end="209:68"><expr pos:start="209:16" pos:end="209:68"><literal type="string" pos:start="209:16" pos:end="209:68">"usb-ohci: ISO_TD cc != not accessed 0x%.8x 0x%.8x\n"</literal></expr></argument>,

               <argument pos:start="211:16" pos:end="211:27"><expr pos:start="211:16" pos:end="211:27"><name pos:start="211:16" pos:end="211:27">start_offset</name></expr></argument>, <argument pos:start="211:30" pos:end="211:40"><expr pos:start="211:30" pos:end="211:40"><name pos:start="211:30" pos:end="211:40">next_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="213:9" pos:end="213:17">return <expr pos:start="213:16" pos:end="213:16"><literal type="number" pos:start="213:16" pos:end="213:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="219:5" pos:end="227:5"><if pos:start="219:5" pos:end="227:5">if <condition pos:start="219:8" pos:end="219:78">(<expr pos:start="219:9" pos:end="219:77"><operator pos:start="219:9" pos:end="219:9">(</operator><name pos:start="219:10" pos:end="219:30">relative_frame_number</name> <operator pos:start="219:32" pos:end="219:32">&lt;</operator> <name pos:start="219:34" pos:end="219:44">frame_count</name><operator pos:start="219:45" pos:end="219:45">)</operator> <operator pos:start="219:47" pos:end="219:48">&amp;&amp;</operator> <operator pos:start="219:50" pos:end="219:50">(</operator><name pos:start="219:51" pos:end="219:62">start_offset</name> <operator pos:start="219:64" pos:end="219:64">&gt;</operator> <name pos:start="219:66" pos:end="219:76">next_offset</name><operator pos:start="219:77" pos:end="219:77">)</operator></expr>)</condition> <block pos:start="219:80" pos:end="227:5">{<block_content pos:start="221:9" pos:end="225:17">

        <expr_stmt pos:start="221:9" pos:end="223:43"><expr pos:start="221:9" pos:end="223:42"><call pos:start="221:9" pos:end="223:42"><name pos:start="221:9" pos:end="221:14">printf</name><argument_list pos:start="221:15" pos:end="223:42">(<argument pos:start="221:16" pos:end="221:76"><expr pos:start="221:16" pos:end="221:76"><literal type="string" pos:start="221:16" pos:end="221:76">"usb-ohci: ISO_TD start_offset=0x%.8x &gt; next_offset=0x%.8x\n"</literal></expr></argument>,

                <argument pos:start="223:17" pos:end="223:28"><expr pos:start="223:17" pos:end="223:28"><name pos:start="223:17" pos:end="223:28">start_offset</name></expr></argument>, <argument pos:start="223:31" pos:end="223:41"><expr pos:start="223:31" pos:end="223:41"><name pos:start="223:31" pos:end="223:41">next_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="225:9" pos:end="225:17">return <expr pos:start="225:16" pos:end="225:16"><literal type="number" pos:start="225:16" pos:end="225:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="231:5" pos:end="243:5"><if pos:start="231:5" pos:end="237:5">if <condition pos:start="231:8" pos:end="231:37">(<expr pos:start="231:9" pos:end="231:36"><operator pos:start="231:9" pos:end="231:9">(</operator><name pos:start="231:10" pos:end="231:21">start_offset</name> <operator pos:start="231:23" pos:end="231:23">&amp;</operator> <literal type="number" pos:start="231:25" pos:end="231:30">0x1000</literal><operator pos:start="231:31" pos:end="231:31">)</operator> <operator pos:start="231:33" pos:end="231:34">==</operator> <literal type="number" pos:start="231:36" pos:end="231:36">0</literal></expr>)</condition> <block pos:start="231:39" pos:end="237:5">{<block_content pos:start="233:9" pos:end="235:46">

        <expr_stmt pos:start="233:9" pos:end="235:46"><expr pos:start="233:9" pos:end="235:45"><name pos:start="233:9" pos:end="233:18">start_addr</name> <operator pos:start="233:20" pos:end="233:20">=</operator> <operator pos:start="233:22" pos:end="233:22">(</operator><name pos:start="233:23" pos:end="233:31"><name pos:start="233:23" pos:end="233:28">iso_td</name><operator pos:start="233:29" pos:end="233:29">.</operator><name pos:start="233:30" pos:end="233:31">bp</name></name> <operator pos:start="233:33" pos:end="233:33">&amp;</operator> <name pos:start="233:35" pos:end="233:48">OHCI_PAGE_MASK</name><operator pos:start="233:49" pos:end="233:49">)</operator> <operator pos:start="233:51" pos:end="233:51">|</operator>

            <operator pos:start="235:13" pos:end="235:13">(</operator><name pos:start="235:14" pos:end="235:25">start_offset</name> <operator pos:start="235:27" pos:end="235:27">&amp;</operator> <name pos:start="235:29" pos:end="235:44">OHCI_OFFSET_MASK</name><operator pos:start="235:45" pos:end="235:45">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="237:7" pos:end="243:5">else <block pos:start="237:12" pos:end="243:5">{<block_content pos:start="239:9" pos:end="241:46">

        <expr_stmt pos:start="239:9" pos:end="241:46"><expr pos:start="239:9" pos:end="241:45"><name pos:start="239:9" pos:end="239:18">start_addr</name> <operator pos:start="239:20" pos:end="239:20">=</operator> <operator pos:start="239:22" pos:end="239:22">(</operator><name pos:start="239:23" pos:end="239:31"><name pos:start="239:23" pos:end="239:28">iso_td</name><operator pos:start="239:29" pos:end="239:29">.</operator><name pos:start="239:30" pos:end="239:31">be</name></name> <operator pos:start="239:33" pos:end="239:33">&amp;</operator> <name pos:start="239:35" pos:end="239:48">OHCI_PAGE_MASK</name><operator pos:start="239:49" pos:end="239:49">)</operator> <operator pos:start="239:51" pos:end="239:51">|</operator>

            <operator pos:start="241:13" pos:end="241:13">(</operator><name pos:start="241:14" pos:end="241:25">start_offset</name> <operator pos:start="241:27" pos:end="241:27">&amp;</operator> <name pos:start="241:29" pos:end="241:44">OHCI_OFFSET_MASK</name><operator pos:start="241:45" pos:end="241:45">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="247:5" pos:end="271:5"><if pos:start="247:5" pos:end="265:5">if <condition pos:start="247:8" pos:end="247:44">(<expr pos:start="247:9" pos:end="247:43"><name pos:start="247:9" pos:end="247:29">relative_frame_number</name> <operator pos:start="247:31" pos:end="247:31">&lt;</operator> <name pos:start="247:33" pos:end="247:43">frame_count</name></expr>)</condition> <block pos:start="247:46" pos:end="265:5">{<block_content pos:start="249:9" pos:end="263:9">

        <expr_stmt pos:start="249:9" pos:end="249:37"><expr pos:start="249:9" pos:end="249:36"><name pos:start="249:9" pos:end="249:18">end_offset</name> <operator pos:start="249:20" pos:end="249:20">=</operator> <name pos:start="249:22" pos:end="249:32">next_offset</name> <operator pos:start="249:34" pos:end="249:34">-</operator> <literal type="number" pos:start="249:36" pos:end="249:36">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="251:9" pos:end="263:9"><if pos:start="251:9" pos:end="257:9">if <condition pos:start="251:12" pos:end="251:39">(<expr pos:start="251:13" pos:end="251:38"><operator pos:start="251:13" pos:end="251:13">(</operator><name pos:start="251:14" pos:end="251:23">end_offset</name> <operator pos:start="251:25" pos:end="251:25">&amp;</operator> <literal type="number" pos:start="251:27" pos:end="251:32">0x1000</literal><operator pos:start="251:33" pos:end="251:33">)</operator> <operator pos:start="251:35" pos:end="251:36">==</operator> <literal type="number" pos:start="251:38" pos:end="251:38">0</literal></expr>)</condition> <block pos:start="251:41" pos:end="257:9">{<block_content pos:start="253:13" pos:end="255:48">

            <expr_stmt pos:start="253:13" pos:end="255:48"><expr pos:start="253:13" pos:end="255:47"><name pos:start="253:13" pos:end="253:20">end_addr</name> <operator pos:start="253:22" pos:end="253:22">=</operator> <operator pos:start="253:24" pos:end="253:24">(</operator><name pos:start="253:25" pos:end="253:33"><name pos:start="253:25" pos:end="253:30">iso_td</name><operator pos:start="253:31" pos:end="253:31">.</operator><name pos:start="253:32" pos:end="253:33">bp</name></name> <operator pos:start="253:35" pos:end="253:35">&amp;</operator> <name pos:start="253:37" pos:end="253:50">OHCI_PAGE_MASK</name><operator pos:start="253:51" pos:end="253:51">)</operator> <operator pos:start="253:53" pos:end="253:53">|</operator>

                <operator pos:start="255:17" pos:end="255:17">(</operator><name pos:start="255:18" pos:end="255:27">end_offset</name> <operator pos:start="255:29" pos:end="255:29">&amp;</operator> <name pos:start="255:31" pos:end="255:46">OHCI_OFFSET_MASK</name><operator pos:start="255:47" pos:end="255:47">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="257:11" pos:end="263:9">else <block pos:start="257:16" pos:end="263:9">{<block_content pos:start="259:13" pos:end="261:48">

            <expr_stmt pos:start="259:13" pos:end="261:48"><expr pos:start="259:13" pos:end="261:47"><name pos:start="259:13" pos:end="259:20">end_addr</name> <operator pos:start="259:22" pos:end="259:22">=</operator> <operator pos:start="259:24" pos:end="259:24">(</operator><name pos:start="259:25" pos:end="259:33"><name pos:start="259:25" pos:end="259:30">iso_td</name><operator pos:start="259:31" pos:end="259:31">.</operator><name pos:start="259:32" pos:end="259:33">be</name></name> <operator pos:start="259:35" pos:end="259:35">&amp;</operator> <name pos:start="259:37" pos:end="259:50">OHCI_PAGE_MASK</name><operator pos:start="259:51" pos:end="259:51">)</operator> <operator pos:start="259:53" pos:end="259:53">|</operator>

                <operator pos:start="261:17" pos:end="261:17">(</operator><name pos:start="261:18" pos:end="261:27">end_offset</name> <operator pos:start="261:29" pos:end="261:29">&amp;</operator> <name pos:start="261:31" pos:end="261:46">OHCI_OFFSET_MASK</name><operator pos:start="261:47" pos:end="261:47">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="265:7" pos:end="271:5">else <block pos:start="265:12" pos:end="271:5">{<block_content pos:start="269:9" pos:end="269:29">

        <comment type="block" pos:start="267:9" pos:end="267:39">/* Last packet in the ISO TD */</comment>

        <expr_stmt pos:start="269:9" pos:end="269:29"><expr pos:start="269:9" pos:end="269:28"><name pos:start="269:9" pos:end="269:16">end_addr</name> <operator pos:start="269:18" pos:end="269:18">=</operator> <name pos:start="269:20" pos:end="269:28"><name pos:start="269:20" pos:end="269:25">iso_td</name><operator pos:start="269:26" pos:end="269:26">.</operator><name pos:start="269:27" pos:end="269:28">be</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="275:5" pos:end="285:5"><if pos:start="275:5" pos:end="281:5">if <condition pos:start="275:8" pos:end="275:69">(<expr pos:start="275:9" pos:end="275:68"><operator pos:start="275:9" pos:end="275:9">(</operator><name pos:start="275:10" pos:end="275:19">start_addr</name> <operator pos:start="275:21" pos:end="275:21">&amp;</operator> <name pos:start="275:23" pos:end="275:36">OHCI_PAGE_MASK</name><operator pos:start="275:37" pos:end="275:37">)</operator> <operator pos:start="275:39" pos:end="275:40">!=</operator> <operator pos:start="275:42" pos:end="275:42">(</operator><name pos:start="275:43" pos:end="275:50">end_addr</name> <operator pos:start="275:52" pos:end="275:52">&amp;</operator> <name pos:start="275:54" pos:end="275:67">OHCI_PAGE_MASK</name><operator pos:start="275:68" pos:end="275:68">)</operator></expr>)</condition> <block pos:start="275:71" pos:end="281:5">{<block_content pos:start="277:9" pos:end="279:46">

        <expr_stmt pos:start="277:9" pos:end="279:46"><expr pos:start="277:9" pos:end="279:45"><name pos:start="277:9" pos:end="277:11">len</name> <operator pos:start="277:13" pos:end="277:13">=</operator> <operator pos:start="277:15" pos:end="277:15">(</operator><name pos:start="277:16" pos:end="277:23">end_addr</name> <operator pos:start="277:25" pos:end="277:25">&amp;</operator> <name pos:start="277:27" pos:end="277:42">OHCI_OFFSET_MASK</name><operator pos:start="277:43" pos:end="277:43">)</operator> <operator pos:start="277:45" pos:end="277:45">+</operator> <literal type="number" pos:start="277:47" pos:end="279:13">0x1001</literal>

            <operator pos:start="279:13" pos:end="279:13">-</operator> <operator pos:start="279:15" pos:end="279:15">(</operator><name pos:start="279:16" pos:end="279:25">start_addr</name> <operator pos:start="279:27" pos:end="279:27">&amp;</operator> <name pos:start="279:29" pos:end="279:44">OHCI_OFFSET_MASK</name><operator pos:start="279:45" pos:end="279:45">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="281:7" pos:end="285:5">else <block pos:start="281:12" pos:end="285:5">{<block_content pos:start="283:9" pos:end="283:40">

        <expr_stmt pos:start="283:9" pos:end="283:40"><expr pos:start="283:9" pos:end="283:39"><name pos:start="283:9" pos:end="283:11">len</name> <operator pos:start="283:13" pos:end="283:13">=</operator> <name pos:start="283:15" pos:end="283:22">end_addr</name> <operator pos:start="283:24" pos:end="283:24">-</operator> <name pos:start="283:26" pos:end="283:35">start_addr</name> <operator pos:start="283:37" pos:end="283:37">+</operator> <literal type="number" pos:start="283:39" pos:end="283:39">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="289:5" pos:end="293:5"><if pos:start="289:5" pos:end="293:5">if <condition pos:start="289:8" pos:end="289:37">(<expr pos:start="289:9" pos:end="289:36"><name pos:start="289:9" pos:end="289:11">len</name> <operator pos:start="289:13" pos:end="289:14">&amp;&amp;</operator> <name pos:start="289:16" pos:end="289:18">dir</name> <operator pos:start="289:20" pos:end="289:21">!=</operator> <name pos:start="289:23" pos:end="289:36">OHCI_TD_DIR_IN</name></expr>)</condition> <block pos:start="289:39" pos:end="293:5">{<block_content pos:start="291:9" pos:end="291:76">

        <expr_stmt pos:start="291:9" pos:end="291:76"><expr pos:start="291:9" pos:end="291:75"><call pos:start="291:9" pos:end="291:75"><name pos:start="291:9" pos:end="291:24">ohci_copy_iso_td</name><argument_list pos:start="291:25" pos:end="291:75">(<argument pos:start="291:26" pos:end="291:29"><expr pos:start="291:26" pos:end="291:29"><name pos:start="291:26" pos:end="291:29">ohci</name></expr></argument>, <argument pos:start="291:32" pos:end="291:41"><expr pos:start="291:32" pos:end="291:41"><name pos:start="291:32" pos:end="291:41">start_addr</name></expr></argument>, <argument pos:start="291:44" pos:end="291:51"><expr pos:start="291:44" pos:end="291:51"><name pos:start="291:44" pos:end="291:51">end_addr</name></expr></argument>, <argument pos:start="291:54" pos:end="291:66"><expr pos:start="291:54" pos:end="291:66"><name pos:start="291:54" pos:end="291:66"><name pos:start="291:54" pos:end="291:57">ohci</name><operator pos:start="291:58" pos:end="291:59">-&gt;</operator><name pos:start="291:60" pos:end="291:66">usb_buf</name></name></expr></argument>, <argument pos:start="291:69" pos:end="291:71"><expr pos:start="291:69" pos:end="291:71"><name pos:start="291:69" pos:end="291:71">len</name></expr></argument>, <argument pos:start="291:74" pos:end="291:74"><expr pos:start="291:74" pos:end="291:74"><literal type="number" pos:start="291:74" pos:end="291:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="297:5" pos:end="326:0"><if pos:start="297:5" pos:end="301:5">if <condition pos:start="297:8" pos:end="297:19">(<expr pos:start="297:9" pos:end="297:18"><name pos:start="297:9" pos:end="297:18">completion</name></expr>)</condition> <block pos:start="297:21" pos:end="301:5">{<block_content pos:start="299:9" pos:end="299:38">

        <expr_stmt pos:start="299:9" pos:end="299:38"><expr pos:start="299:9" pos:end="299:37"><name pos:start="299:9" pos:end="299:11">ret</name> <operator pos:start="299:13" pos:end="299:13">=</operator> <name pos:start="299:15" pos:end="299:37"><name pos:start="299:15" pos:end="299:18">ohci</name><operator pos:start="299:19" pos:end="299:20">-&gt;</operator><name pos:start="299:21" pos:end="299:30">usb_packet</name><operator pos:start="299:31" pos:end="299:31">.</operator><name pos:start="299:32" pos:end="299:37">result</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="301:7" pos:end="326:0">else <block pos:start="301:12" pos:end="326:0">{<block_content pos:start="303:9" pos:end="319:9">

        <expr_stmt pos:start="303:9" pos:end="307:52"><expr pos:start="303:9" pos:end="307:51"><call pos:start="303:9" pos:end="307:51"><name pos:start="303:9" pos:end="303:24">usb_packet_setup</name><argument_list pos:start="303:25" pos:end="307:51">(<argument pos:start="303:26" pos:end="303:42"><expr pos:start="303:26" pos:end="303:42"><operator pos:start="303:26" pos:end="303:26">&amp;</operator><name pos:start="303:27" pos:end="303:42"><name pos:start="303:27" pos:end="303:30">ohci</name><operator pos:start="303:31" pos:end="303:32">-&gt;</operator><name pos:start="303:33" pos:end="303:42">usb_packet</name></name></expr></argument>, <argument pos:start="303:45" pos:end="303:47"><expr pos:start="303:45" pos:end="303:47"><name pos:start="303:45" pos:end="303:47">pid</name></expr></argument>,

                         <argument pos:start="305:26" pos:end="305:50"><expr pos:start="305:26" pos:end="305:50"><call pos:start="305:26" pos:end="305:50"><name pos:start="305:26" pos:end="305:32">OHCI_BM</name><argument_list pos:start="305:33" pos:end="305:50">(<argument pos:start="305:34" pos:end="305:42"><expr pos:start="305:34" pos:end="305:42"><name pos:start="305:34" pos:end="305:42"><name pos:start="305:34" pos:end="305:35">ed</name><operator pos:start="305:36" pos:end="305:37">-&gt;</operator><name pos:start="305:38" pos:end="305:42">flags</name></name></expr></argument>, <argument pos:start="305:45" pos:end="305:49"><expr pos:start="305:45" pos:end="305:49"><name pos:start="305:45" pos:end="305:49">ED_FA</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="307:26" pos:end="307:50"><expr pos:start="307:26" pos:end="307:50"><call pos:start="307:26" pos:end="307:50"><name pos:start="307:26" pos:end="307:32">OHCI_BM</name><argument_list pos:start="307:33" pos:end="307:50">(<argument pos:start="307:34" pos:end="307:42"><expr pos:start="307:34" pos:end="307:42"><name pos:start="307:34" pos:end="307:42"><name pos:start="307:34" pos:end="307:35">ed</name><operator pos:start="307:36" pos:end="307:37">-&gt;</operator><name pos:start="307:38" pos:end="307:42">flags</name></name></expr></argument>, <argument pos:start="307:45" pos:end="307:49"><expr pos:start="307:45" pos:end="307:49"><name pos:start="307:45" pos:end="307:49">ED_EN</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:65"><expr pos:start="309:9" pos:end="309:64"><call pos:start="309:9" pos:end="309:64"><name pos:start="309:9" pos:end="309:25">usb_packet_addbuf</name><argument_list pos:start="309:26" pos:end="309:64">(<argument pos:start="309:27" pos:end="309:43"><expr pos:start="309:27" pos:end="309:43"><operator pos:start="309:27" pos:end="309:27">&amp;</operator><name pos:start="309:28" pos:end="309:43"><name pos:start="309:28" pos:end="309:31">ohci</name><operator pos:start="309:32" pos:end="309:33">-&gt;</operator><name pos:start="309:34" pos:end="309:43">usb_packet</name></name></expr></argument>, <argument pos:start="309:46" pos:end="309:58"><expr pos:start="309:46" pos:end="309:58"><name pos:start="309:46" pos:end="309:58"><name pos:start="309:46" pos:end="309:49">ohci</name><operator pos:start="309:50" pos:end="309:51">-&gt;</operator><name pos:start="309:52" pos:end="309:58">usb_buf</name></name></expr></argument>, <argument pos:start="309:61" pos:end="309:63"><expr pos:start="309:61" pos:end="309:63"><name pos:start="309:61" pos:end="309:63">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:63"><expr pos:start="311:9" pos:end="311:62"><name pos:start="311:9" pos:end="311:11">dev</name> <operator pos:start="311:13" pos:end="311:13">=</operator> <call pos:start="311:15" pos:end="311:62"><name pos:start="311:15" pos:end="311:30">ohci_find_device</name><argument_list pos:start="311:31" pos:end="311:62">(<argument pos:start="311:32" pos:end="311:35"><expr pos:start="311:32" pos:end="311:35"><name pos:start="311:32" pos:end="311:35">ohci</name></expr></argument>, <argument pos:start="311:38" pos:end="311:61"><expr pos:start="311:38" pos:end="311:61"><name pos:start="311:38" pos:end="311:61"><name pos:start="311:38" pos:end="311:41">ohci</name><operator pos:start="311:42" pos:end="311:43">-&gt;</operator><name pos:start="311:44" pos:end="311:53">usb_packet</name><operator pos:start="311:54" pos:end="311:54">.</operator><name pos:start="311:55" pos:end="311:61">devaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:56"><expr pos:start="313:9" pos:end="313:55"><name pos:start="313:9" pos:end="313:11">ret</name> <operator pos:start="313:13" pos:end="313:13">=</operator> <call pos:start="313:15" pos:end="313:55"><name pos:start="313:15" pos:end="313:31">usb_handle_packet</name><argument_list pos:start="313:32" pos:end="313:55">(<argument pos:start="313:33" pos:end="313:35"><expr pos:start="313:33" pos:end="313:35"><name pos:start="313:33" pos:end="313:35">dev</name></expr></argument>, <argument pos:start="313:38" pos:end="313:54"><expr pos:start="313:38" pos:end="313:54"><operator pos:start="313:38" pos:end="313:38">&amp;</operator><name pos:start="313:39" pos:end="313:54"><name pos:start="313:39" pos:end="313:42">ohci</name><operator pos:start="313:43" pos:end="313:44">-&gt;</operator><name pos:start="313:45" pos:end="313:54">usb_packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="315:9" pos:end="319:9"><if pos:start="315:9" pos:end="319:9">if <condition pos:start="315:12" pos:end="315:33">(<expr pos:start="315:13" pos:end="315:32"><name pos:start="315:13" pos:end="315:15">ret</name> <operator pos:start="315:17" pos:end="315:18">==</operator> <name pos:start="315:20" pos:end="315:32">USB_RET_ASYNC</name></expr>)</condition> <block pos:start="315:35" pos:end="319:9">{<block_content pos:start="317:13" pos:end="317:21">

            <return pos:start="317:13" pos:end="317:21">return <expr pos:start="317:20" pos:end="317:20"><literal type="number" pos:start="317:20" pos:end="317:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



<cpp:ifdef pos:start="325:1" pos:end="325:18">#<cpp:directive pos:start="325:2" pos:end="325:6">ifdef</cpp:directive> <name pos:start="325:8" pos:end="325:18">DEBUG_ISOCH</name></cpp:ifdef>

    <expr_stmt pos:start="327:5" pos:end="332:0"><expr pos:start="327:5" pos:end="329:73"><call pos:start="327:5" pos:end="329:73"><name pos:start="327:5" pos:end="327:10">printf</name><argument_list pos:start="327:11" pos:end="329:73">(<argument pos:start="327:12" pos:end="327:78"><expr pos:start="327:12" pos:end="327:78"><literal type="string" pos:start="327:12" pos:end="327:78">"so 0x%.8x eo 0x%.8x\nsa 0x%.8x ea 0x%.8x\ndir %s len %zu ret %d\n"</literal></expr></argument>,

           <argument pos:start="329:12" pos:end="329:23"><expr pos:start="329:12" pos:end="329:23"><name pos:start="329:12" pos:end="329:23">start_offset</name></expr></argument>, <argument pos:start="329:26" pos:end="329:35"><expr pos:start="329:26" pos:end="329:35"><name pos:start="329:26" pos:end="329:35">end_offset</name></expr></argument>, <argument pos:start="329:38" pos:end="329:47"><expr pos:start="329:38" pos:end="329:47"><name pos:start="329:38" pos:end="329:47">start_addr</name></expr></argument>, <argument pos:start="329:50" pos:end="329:57"><expr pos:start="329:50" pos:end="329:57"><name pos:start="329:50" pos:end="329:57">end_addr</name></expr></argument>, <argument pos:start="329:60" pos:end="329:62"><expr pos:start="329:60" pos:end="329:62"><name pos:start="329:60" pos:end="329:62">str</name></expr></argument>, <argument pos:start="329:65" pos:end="329:67"><expr pos:start="329:65" pos:end="329:67"><name pos:start="329:65" pos:end="329:67">len</name></expr></argument>, <argument pos:start="329:70" pos:end="329:72"><expr pos:start="329:70" pos:end="329:72"><name pos:start="329:70" pos:end="329:72">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="331:1" pos:end="331:6">#<cpp:directive pos:start="331:2" pos:end="331:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="335:5" pos:end="335:19">/* Writeback */</comment>

    <if_stmt pos:start="337:5" pos:end="427:5"><if pos:start="337:5" pos:end="349:5">if <condition pos:start="337:8" pos:end="337:56">(<expr pos:start="337:9" pos:end="337:55"><name pos:start="337:9" pos:end="337:11">dir</name> <operator pos:start="337:13" pos:end="337:14">==</operator> <name pos:start="337:16" pos:end="337:29">OHCI_TD_DIR_IN</name> <operator pos:start="337:31" pos:end="337:32">&amp;&amp;</operator> <name pos:start="337:34" pos:end="337:36">ret</name> <operator pos:start="337:38" pos:end="337:39">&gt;=</operator> <literal type="number" pos:start="337:41" pos:end="337:41">0</literal> <operator pos:start="337:43" pos:end="337:44">&amp;&amp;</operator> <name pos:start="337:46" pos:end="337:48">ret</name> <operator pos:start="337:50" pos:end="337:51">&lt;=</operator> <name pos:start="337:53" pos:end="337:55">len</name></expr>)</condition> <block pos:start="337:58" pos:end="349:5">{<block_content pos:start="341:9" pos:end="347:76">

        <comment type="block" pos:start="339:9" pos:end="339:35">/* IN transfer succeeded */</comment>

        <expr_stmt pos:start="341:9" pos:end="341:76"><expr pos:start="341:9" pos:end="341:75"><call pos:start="341:9" pos:end="341:75"><name pos:start="341:9" pos:end="341:24">ohci_copy_iso_td</name><argument_list pos:start="341:25" pos:end="341:75">(<argument pos:start="341:26" pos:end="341:29"><expr pos:start="341:26" pos:end="341:29"><name pos:start="341:26" pos:end="341:29">ohci</name></expr></argument>, <argument pos:start="341:32" pos:end="341:41"><expr pos:start="341:32" pos:end="341:41"><name pos:start="341:32" pos:end="341:41">start_addr</name></expr></argument>, <argument pos:start="341:44" pos:end="341:51"><expr pos:start="341:44" pos:end="341:51"><name pos:start="341:44" pos:end="341:51">end_addr</name></expr></argument>, <argument pos:start="341:54" pos:end="341:66"><expr pos:start="341:54" pos:end="341:66"><name pos:start="341:54" pos:end="341:66"><name pos:start="341:54" pos:end="341:57">ohci</name><operator pos:start="341:58" pos:end="341:59">-&gt;</operator><name pos:start="341:60" pos:end="341:66">usb_buf</name></name></expr></argument>, <argument pos:start="341:69" pos:end="341:71"><expr pos:start="341:69" pos:end="341:71"><name pos:start="341:69" pos:end="341:71">ret</name></expr></argument>, <argument pos:start="341:74" pos:end="341:74"><expr pos:start="341:74" pos:end="341:74"><literal type="number" pos:start="341:74" pos:end="341:74">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="343:9" pos:end="345:37"><expr pos:start="343:9" pos:end="345:36"><call pos:start="343:9" pos:end="345:36"><name pos:start="343:9" pos:end="343:19">OHCI_SET_BM</name><argument_list pos:start="343:20" pos:end="345:36">(<argument pos:start="343:21" pos:end="343:56"><expr pos:start="343:21" pos:end="343:56"><name pos:start="343:21" pos:end="343:56"><name pos:start="343:21" pos:end="343:26">iso_td</name><operator pos:start="343:27" pos:end="343:27">.</operator><name pos:start="343:28" pos:end="343:33">offset</name><index pos:start="343:34" pos:end="343:56">[<expr pos:start="343:35" pos:end="343:55"><name pos:start="343:35" pos:end="343:55">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="343:59" pos:end="343:67"><expr pos:start="343:59" pos:end="343:67"><name pos:start="343:59" pos:end="343:67">TD_PSW_CC</name></expr></argument>,

                    <argument pos:start="345:21" pos:end="345:35"><expr pos:start="345:21" pos:end="345:35"><name pos:start="345:21" pos:end="345:35">OHCI_CC_NOERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="347:9" pos:end="347:76"><expr pos:start="347:9" pos:end="347:75"><call pos:start="347:9" pos:end="347:75"><name pos:start="347:9" pos:end="347:19">OHCI_SET_BM</name><argument_list pos:start="347:20" pos:end="347:75">(<argument pos:start="347:21" pos:end="347:56"><expr pos:start="347:21" pos:end="347:56"><name pos:start="347:21" pos:end="347:56"><name pos:start="347:21" pos:end="347:26">iso_td</name><operator pos:start="347:27" pos:end="347:27">.</operator><name pos:start="347:28" pos:end="347:33">offset</name><index pos:start="347:34" pos:end="347:56">[<expr pos:start="347:35" pos:end="347:55"><name pos:start="347:35" pos:end="347:55">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="347:59" pos:end="347:69"><expr pos:start="347:59" pos:end="347:69"><name pos:start="347:59" pos:end="347:69">TD_PSW_SIZE</name></expr></argument>, <argument pos:start="347:72" pos:end="347:74"><expr pos:start="347:72" pos:end="347:74"><name pos:start="347:72" pos:end="347:74">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="349:7" pos:end="359:5">else if <condition pos:start="349:15" pos:end="349:52">(<expr pos:start="349:16" pos:end="349:51"><name pos:start="349:16" pos:end="349:18">dir</name> <operator pos:start="349:20" pos:end="349:21">==</operator> <name pos:start="349:23" pos:end="349:37">OHCI_TD_DIR_OUT</name> <operator pos:start="349:39" pos:end="349:40">&amp;&amp;</operator> <name pos:start="349:42" pos:end="349:44">ret</name> <operator pos:start="349:46" pos:end="349:47">==</operator> <name pos:start="349:49" pos:end="349:51">len</name></expr>)</condition> <block pos:start="349:54" pos:end="359:5">{<block_content pos:start="353:9" pos:end="357:74">

        <comment type="block" pos:start="351:9" pos:end="351:36">/* OUT transfer succeeded */</comment>

        <expr_stmt pos:start="353:9" pos:end="355:37"><expr pos:start="353:9" pos:end="355:36"><call pos:start="353:9" pos:end="355:36"><name pos:start="353:9" pos:end="353:19">OHCI_SET_BM</name><argument_list pos:start="353:20" pos:end="355:36">(<argument pos:start="353:21" pos:end="353:56"><expr pos:start="353:21" pos:end="353:56"><name pos:start="353:21" pos:end="353:56"><name pos:start="353:21" pos:end="353:26">iso_td</name><operator pos:start="353:27" pos:end="353:27">.</operator><name pos:start="353:28" pos:end="353:33">offset</name><index pos:start="353:34" pos:end="353:56">[<expr pos:start="353:35" pos:end="353:55"><name pos:start="353:35" pos:end="353:55">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="353:59" pos:end="353:67"><expr pos:start="353:59" pos:end="353:67"><name pos:start="353:59" pos:end="353:67">TD_PSW_CC</name></expr></argument>,

                    <argument pos:start="355:21" pos:end="355:35"><expr pos:start="355:21" pos:end="355:35"><name pos:start="355:21" pos:end="355:35">OHCI_CC_NOERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="357:9" pos:end="357:74"><expr pos:start="357:9" pos:end="357:73"><call pos:start="357:9" pos:end="357:73"><name pos:start="357:9" pos:end="357:19">OHCI_SET_BM</name><argument_list pos:start="357:20" pos:end="357:73">(<argument pos:start="357:21" pos:end="357:56"><expr pos:start="357:21" pos:end="357:56"><name pos:start="357:21" pos:end="357:56"><name pos:start="357:21" pos:end="357:26">iso_td</name><operator pos:start="357:27" pos:end="357:27">.</operator><name pos:start="357:28" pos:end="357:33">offset</name><index pos:start="357:34" pos:end="357:56">[<expr pos:start="357:35" pos:end="357:55"><name pos:start="357:35" pos:end="357:55">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="357:59" pos:end="357:69"><expr pos:start="357:59" pos:end="357:69"><name pos:start="357:59" pos:end="357:69">TD_PSW_SIZE</name></expr></argument>, <argument pos:start="357:72" pos:end="357:72"><expr pos:start="357:72" pos:end="357:72"><literal type="number" pos:start="357:72" pos:end="357:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="359:7" pos:end="427:5">else <block pos:start="359:12" pos:end="427:5">{<block_content pos:start="361:9" pos:end="425:9">

        <if_stmt pos:start="361:9" pos:end="425:9"><if pos:start="361:9" pos:end="373:9">if <condition pos:start="361:12" pos:end="361:32">(<expr pos:start="361:13" pos:end="361:31"><name pos:start="361:13" pos:end="361:15">ret</name> <operator pos:start="361:17" pos:end="361:17">&gt;</operator> <operator pos:start="361:19" pos:end="361:19">(</operator><name pos:start="361:20" pos:end="361:26">ssize_t</name><operator pos:start="361:27" pos:end="361:27">)</operator> <name pos:start="361:29" pos:end="361:31">len</name></expr>)</condition> <block pos:start="361:34" pos:end="373:9">{<block_content pos:start="363:13" pos:end="371:29">

            <expr_stmt pos:start="363:13" pos:end="363:65"><expr pos:start="363:13" pos:end="363:64"><call pos:start="363:13" pos:end="363:64"><name pos:start="363:13" pos:end="363:18">printf</name><argument_list pos:start="363:19" pos:end="363:64">(<argument pos:start="363:20" pos:end="363:53"><expr pos:start="363:20" pos:end="363:53"><literal type="string" pos:start="363:20" pos:end="363:53">"usb-ohci: DataOverrun %d &gt; %zu\n"</literal></expr></argument>, <argument pos:start="363:56" pos:end="363:58"><expr pos:start="363:56" pos:end="363:58"><name pos:start="363:56" pos:end="363:58">ret</name></expr></argument>, <argument pos:start="363:61" pos:end="363:63"><expr pos:start="363:61" pos:end="363:63"><name pos:start="363:61" pos:end="363:63">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="365:13" pos:end="367:45"><expr pos:start="365:13" pos:end="367:44"><call pos:start="365:13" pos:end="367:44"><name pos:start="365:13" pos:end="365:23">OHCI_SET_BM</name><argument_list pos:start="365:24" pos:end="367:44">(<argument pos:start="365:25" pos:end="365:60"><expr pos:start="365:25" pos:end="365:60"><name pos:start="365:25" pos:end="365:60"><name pos:start="365:25" pos:end="365:30">iso_td</name><operator pos:start="365:31" pos:end="365:31">.</operator><name pos:start="365:32" pos:end="365:37">offset</name><index pos:start="365:38" pos:end="365:60">[<expr pos:start="365:39" pos:end="365:59"><name pos:start="365:39" pos:end="365:59">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="365:63" pos:end="365:71"><expr pos:start="365:63" pos:end="365:71"><name pos:start="365:63" pos:end="365:71">TD_PSW_CC</name></expr></argument>,

                        <argument pos:start="367:25" pos:end="367:43"><expr pos:start="367:25" pos:end="367:43"><name pos:start="367:25" pos:end="367:43">OHCI_CC_DATAOVERRUN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="371:29"><expr pos:start="369:13" pos:end="371:28"><call pos:start="369:13" pos:end="371:28"><name pos:start="369:13" pos:end="369:23">OHCI_SET_BM</name><argument_list pos:start="369:24" pos:end="371:28">(<argument pos:start="369:25" pos:end="369:60"><expr pos:start="369:25" pos:end="369:60"><name pos:start="369:25" pos:end="369:60"><name pos:start="369:25" pos:end="369:30">iso_td</name><operator pos:start="369:31" pos:end="369:31">.</operator><name pos:start="369:32" pos:end="369:37">offset</name><index pos:start="369:38" pos:end="369:60">[<expr pos:start="369:39" pos:end="369:59"><name pos:start="369:39" pos:end="369:59">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="369:63" pos:end="369:73"><expr pos:start="369:63" pos:end="369:73"><name pos:start="369:63" pos:end="369:73">TD_PSW_SIZE</name></expr></argument>,

                        <argument pos:start="371:25" pos:end="371:27"><expr pos:start="371:25" pos:end="371:27"><name pos:start="371:25" pos:end="371:27">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="373:11" pos:end="381:9">else if <condition pos:start="373:19" pos:end="373:28">(<expr pos:start="373:20" pos:end="373:27"><name pos:start="373:20" pos:end="373:22">ret</name> <operator pos:start="373:24" pos:end="373:25">&gt;=</operator> <literal type="number" pos:start="373:27" pos:end="373:27">0</literal></expr>)</condition> <block pos:start="373:30" pos:end="381:9">{<block_content pos:start="375:13" pos:end="379:46">

            <expr_stmt pos:start="375:13" pos:end="375:55"><expr pos:start="375:13" pos:end="375:54"><call pos:start="375:13" pos:end="375:54"><name pos:start="375:13" pos:end="375:18">printf</name><argument_list pos:start="375:19" pos:end="375:54">(<argument pos:start="375:20" pos:end="375:48"><expr pos:start="375:20" pos:end="375:48"><literal type="string" pos:start="375:20" pos:end="375:48">"usb-ohci: DataUnderrun %d\n"</literal></expr></argument>, <argument pos:start="375:51" pos:end="375:53"><expr pos:start="375:51" pos:end="375:53"><name pos:start="375:51" pos:end="375:53">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="377:13" pos:end="379:46"><expr pos:start="377:13" pos:end="379:45"><call pos:start="377:13" pos:end="379:45"><name pos:start="377:13" pos:end="377:23">OHCI_SET_BM</name><argument_list pos:start="377:24" pos:end="379:45">(<argument pos:start="377:25" pos:end="377:60"><expr pos:start="377:25" pos:end="377:60"><name pos:start="377:25" pos:end="377:60"><name pos:start="377:25" pos:end="377:30">iso_td</name><operator pos:start="377:31" pos:end="377:31">.</operator><name pos:start="377:32" pos:end="377:37">offset</name><index pos:start="377:38" pos:end="377:60">[<expr pos:start="377:39" pos:end="377:59"><name pos:start="377:39" pos:end="377:59">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="377:63" pos:end="377:71"><expr pos:start="377:63" pos:end="377:71"><name pos:start="377:63" pos:end="377:71">TD_PSW_CC</name></expr></argument>,

                        <argument pos:start="379:25" pos:end="379:44"><expr pos:start="379:25" pos:end="379:44"><name pos:start="379:25" pos:end="379:44">OHCI_CC_DATAUNDERRUN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="381:11" pos:end="425:9">else <block pos:start="381:16" pos:end="425:9">{<block_content pos:start="383:13" pos:end="423:13">

            <switch pos:start="383:13" pos:end="423:13">switch <condition pos:start="383:20" pos:end="383:24">(<expr pos:start="383:21" pos:end="383:23"><name pos:start="383:21" pos:end="383:23">ret</name></expr>)</condition> <block pos:start="383:26" pos:end="423:13">{<block_content pos:start="385:13" pos:end="421:22">

            <case pos:start="385:13" pos:end="385:31">case <expr pos:start="385:18" pos:end="385:30"><name pos:start="385:18" pos:end="385:30">USB_RET_NODEV</name></expr>:</case>

                <expr_stmt pos:start="387:17" pos:end="389:57"><expr pos:start="387:17" pos:end="389:56"><call pos:start="387:17" pos:end="389:56"><name pos:start="387:17" pos:end="387:27">OHCI_SET_BM</name><argument_list pos:start="387:28" pos:end="389:56">(<argument pos:start="387:29" pos:end="387:64"><expr pos:start="387:29" pos:end="387:64"><name pos:start="387:29" pos:end="387:64"><name pos:start="387:29" pos:end="387:34">iso_td</name><operator pos:start="387:35" pos:end="387:35">.</operator><name pos:start="387:36" pos:end="387:41">offset</name><index pos:start="387:42" pos:end="387:64">[<expr pos:start="387:43" pos:end="387:63"><name pos:start="387:43" pos:end="387:63">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="387:67" pos:end="387:75"><expr pos:start="387:67" pos:end="387:75"><name pos:start="387:67" pos:end="387:75">TD_PSW_CC</name></expr></argument>,

                            <argument pos:start="389:29" pos:end="389:55"><expr pos:start="389:29" pos:end="389:55"><name pos:start="389:29" pos:end="389:55">OHCI_CC_DEVICENOTRESPONDING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="391:17" pos:end="393:31"><expr pos:start="391:17" pos:end="393:30"><call pos:start="391:17" pos:end="393:30"><name pos:start="391:17" pos:end="391:27">OHCI_SET_BM</name><argument_list pos:start="391:28" pos:end="393:30">(<argument pos:start="391:29" pos:end="391:64"><expr pos:start="391:29" pos:end="391:64"><name pos:start="391:29" pos:end="391:64"><name pos:start="391:29" pos:end="391:34">iso_td</name><operator pos:start="391:35" pos:end="391:35">.</operator><name pos:start="391:36" pos:end="391:41">offset</name><index pos:start="391:42" pos:end="391:64">[<expr pos:start="391:43" pos:end="391:63"><name pos:start="391:43" pos:end="391:63">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="391:67" pos:end="391:77"><expr pos:start="391:67" pos:end="391:77"><name pos:start="391:67" pos:end="391:77">TD_PSW_SIZE</name></expr></argument>,

                            <argument pos:start="393:29" pos:end="393:29"><expr pos:start="393:29" pos:end="393:29"><literal type="number" pos:start="393:29" pos:end="393:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="395:17" pos:end="395:22">break;</break>

            <case pos:start="397:13" pos:end="397:29">case <expr pos:start="397:18" pos:end="397:28"><name pos:start="397:18" pos:end="397:28">USB_RET_NAK</name></expr>:</case>

            <case pos:start="399:13" pos:end="399:31">case <expr pos:start="399:18" pos:end="399:30"><name pos:start="399:18" pos:end="399:30">USB_RET_STALL</name></expr>:</case>

                <expr_stmt pos:start="401:17" pos:end="401:60"><expr pos:start="401:17" pos:end="401:59"><call pos:start="401:17" pos:end="401:59"><name pos:start="401:17" pos:end="401:22">printf</name><argument_list pos:start="401:23" pos:end="401:59">(<argument pos:start="401:24" pos:end="401:53"><expr pos:start="401:24" pos:end="401:53"><literal type="string" pos:start="401:24" pos:end="401:53">"usb-ohci: got NAK/STALL %d\n"</literal></expr></argument>, <argument pos:start="401:56" pos:end="401:58"><expr pos:start="401:56" pos:end="401:58"><name pos:start="401:56" pos:end="401:58">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="403:17" pos:end="405:43"><expr pos:start="403:17" pos:end="405:42"><call pos:start="403:17" pos:end="405:42"><name pos:start="403:17" pos:end="403:27">OHCI_SET_BM</name><argument_list pos:start="403:28" pos:end="405:42">(<argument pos:start="403:29" pos:end="403:64"><expr pos:start="403:29" pos:end="403:64"><name pos:start="403:29" pos:end="403:64"><name pos:start="403:29" pos:end="403:34">iso_td</name><operator pos:start="403:35" pos:end="403:35">.</operator><name pos:start="403:36" pos:end="403:41">offset</name><index pos:start="403:42" pos:end="403:64">[<expr pos:start="403:43" pos:end="403:63"><name pos:start="403:43" pos:end="403:63">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="403:67" pos:end="403:75"><expr pos:start="403:67" pos:end="403:75"><name pos:start="403:67" pos:end="403:75">TD_PSW_CC</name></expr></argument>,

                            <argument pos:start="405:29" pos:end="405:41"><expr pos:start="405:29" pos:end="405:41"><name pos:start="405:29" pos:end="405:41">OHCI_CC_STALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="407:17" pos:end="409:31"><expr pos:start="407:17" pos:end="409:30"><call pos:start="407:17" pos:end="409:30"><name pos:start="407:17" pos:end="407:27">OHCI_SET_BM</name><argument_list pos:start="407:28" pos:end="409:30">(<argument pos:start="407:29" pos:end="407:64"><expr pos:start="407:29" pos:end="407:64"><name pos:start="407:29" pos:end="407:64"><name pos:start="407:29" pos:end="407:34">iso_td</name><operator pos:start="407:35" pos:end="407:35">.</operator><name pos:start="407:36" pos:end="407:41">offset</name><index pos:start="407:42" pos:end="407:64">[<expr pos:start="407:43" pos:end="407:63"><name pos:start="407:43" pos:end="407:63">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="407:67" pos:end="407:77"><expr pos:start="407:67" pos:end="407:77"><name pos:start="407:67" pos:end="407:77">TD_PSW_SIZE</name></expr></argument>,

                            <argument pos:start="409:29" pos:end="409:29"><expr pos:start="409:29" pos:end="409:29"><literal type="number" pos:start="409:29" pos:end="409:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="411:17" pos:end="411:22">break;</break>

            <default pos:start="413:13" pos:end="413:20">default:</default>

                <expr_stmt pos:start="415:17" pos:end="415:66"><expr pos:start="415:17" pos:end="415:65"><call pos:start="415:17" pos:end="415:65"><name pos:start="415:17" pos:end="415:22">printf</name><argument_list pos:start="415:23" pos:end="415:65">(<argument pos:start="415:24" pos:end="415:59"><expr pos:start="415:24" pos:end="415:59"><literal type="string" pos:start="415:24" pos:end="415:59">"usb-ohci: Bad device response %d\n"</literal></expr></argument>, <argument pos:start="415:62" pos:end="415:64"><expr pos:start="415:62" pos:end="415:64"><name pos:start="415:62" pos:end="415:64">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="417:17" pos:end="419:51"><expr pos:start="417:17" pos:end="419:50"><call pos:start="417:17" pos:end="419:50"><name pos:start="417:17" pos:end="417:27">OHCI_SET_BM</name><argument_list pos:start="417:28" pos:end="419:50">(<argument pos:start="417:29" pos:end="417:64"><expr pos:start="417:29" pos:end="417:64"><name pos:start="417:29" pos:end="417:64"><name pos:start="417:29" pos:end="417:34">iso_td</name><operator pos:start="417:35" pos:end="417:35">.</operator><name pos:start="417:36" pos:end="417:41">offset</name><index pos:start="417:42" pos:end="417:64">[<expr pos:start="417:43" pos:end="417:63"><name pos:start="417:43" pos:end="417:63">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="417:67" pos:end="417:75"><expr pos:start="417:67" pos:end="417:75"><name pos:start="417:67" pos:end="417:75">TD_PSW_CC</name></expr></argument>,

                            <argument pos:start="419:29" pos:end="419:49"><expr pos:start="419:29" pos:end="419:49"><name pos:start="419:29" pos:end="419:49">OHCI_CC_UNDEXPETEDPID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="421:17" pos:end="421:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="431:5" pos:end="451:5"><if pos:start="431:5" pos:end="451:5">if <condition pos:start="431:8" pos:end="431:45">(<expr pos:start="431:9" pos:end="431:44"><name pos:start="431:9" pos:end="431:29">relative_frame_number</name> <operator pos:start="431:31" pos:end="431:32">==</operator> <name pos:start="431:34" pos:end="431:44">frame_count</name></expr>)</condition> <block pos:start="431:47" pos:end="451:5">{<block_content pos:start="435:9" pos:end="449:33">

        <comment type="block" pos:start="433:9" pos:end="433:74">/* Last data packet of ISO TD - retire the TD to the Done Queue */</comment>

        <expr_stmt pos:start="435:9" pos:end="435:58"><expr pos:start="435:9" pos:end="435:57"><call pos:start="435:9" pos:end="435:57"><name pos:start="435:9" pos:end="435:19">OHCI_SET_BM</name><argument_list pos:start="435:20" pos:end="435:57">(<argument pos:start="435:21" pos:end="435:32"><expr pos:start="435:21" pos:end="435:32"><name pos:start="435:21" pos:end="435:32"><name pos:start="435:21" pos:end="435:26">iso_td</name><operator pos:start="435:27" pos:end="435:27">.</operator><name pos:start="435:28" pos:end="435:32">flags</name></name></expr></argument>, <argument pos:start="435:35" pos:end="435:39"><expr pos:start="435:35" pos:end="435:39"><name pos:start="435:35" pos:end="435:39">TD_CC</name></expr></argument>, <argument pos:start="435:42" pos:end="435:56"><expr pos:start="435:42" pos:end="435:56"><name pos:start="435:42" pos:end="435:56">OHCI_CC_NOERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="437:9" pos:end="437:36"><expr pos:start="437:9" pos:end="437:35"><name pos:start="437:9" pos:end="437:16"><name pos:start="437:9" pos:end="437:10">ed</name><operator pos:start="437:11" pos:end="437:12">-&gt;</operator><name pos:start="437:13" pos:end="437:16">head</name></name> <operator pos:start="437:18" pos:end="437:19">&amp;=</operator> <operator pos:start="437:21" pos:end="437:21">~</operator><name pos:start="437:22" pos:end="437:35">OHCI_DPTR_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="439:9" pos:end="439:51"><expr pos:start="439:9" pos:end="439:50"><name pos:start="439:9" pos:end="439:16"><name pos:start="439:9" pos:end="439:10">ed</name><operator pos:start="439:11" pos:end="439:12">-&gt;</operator><name pos:start="439:13" pos:end="439:16">head</name></name> <operator pos:start="439:18" pos:end="439:19">|=</operator> <operator pos:start="439:21" pos:end="439:21">(</operator><name pos:start="439:22" pos:end="439:32"><name pos:start="439:22" pos:end="439:27">iso_td</name><operator pos:start="439:28" pos:end="439:28">.</operator><name pos:start="439:29" pos:end="439:32">next</name></name> <operator pos:start="439:34" pos:end="439:34">&amp;</operator> <name pos:start="439:36" pos:end="439:49">OHCI_DPTR_MASK</name><operator pos:start="439:50" pos:end="439:50">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="441:9" pos:end="441:33"><expr pos:start="441:9" pos:end="441:32"><name pos:start="441:9" pos:end="441:19"><name pos:start="441:9" pos:end="441:14">iso_td</name><operator pos:start="441:15" pos:end="441:15">.</operator><name pos:start="441:16" pos:end="441:19">next</name></name> <operator pos:start="441:21" pos:end="441:21">=</operator> <name pos:start="441:23" pos:end="441:32"><name pos:start="441:23" pos:end="441:26">ohci</name><operator pos:start="441:27" pos:end="441:28">-&gt;</operator><name pos:start="441:29" pos:end="441:32">done</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="443:9" pos:end="443:26"><expr pos:start="443:9" pos:end="443:25"><name pos:start="443:9" pos:end="443:18"><name pos:start="443:9" pos:end="443:12">ohci</name><operator pos:start="443:13" pos:end="443:14">-&gt;</operator><name pos:start="443:15" pos:end="443:18">done</name></name> <operator pos:start="443:20" pos:end="443:20">=</operator> <name pos:start="443:22" pos:end="443:25">addr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="445:9" pos:end="445:41"><expr pos:start="445:9" pos:end="445:40"><name pos:start="445:9" pos:end="445:9">i</name> <operator pos:start="445:11" pos:end="445:11">=</operator> <call pos:start="445:13" pos:end="445:40"><name pos:start="445:13" pos:end="445:19">OHCI_BM</name><argument_list pos:start="445:20" pos:end="445:40">(<argument pos:start="445:21" pos:end="445:32"><expr pos:start="445:21" pos:end="445:32"><name pos:start="445:21" pos:end="445:32"><name pos:start="445:21" pos:end="445:26">iso_td</name><operator pos:start="445:27" pos:end="445:27">.</operator><name pos:start="445:28" pos:end="445:32">flags</name></name></expr></argument>, <argument pos:start="445:35" pos:end="445:39"><expr pos:start="445:35" pos:end="445:39"><name pos:start="445:35" pos:end="445:39">TD_DI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="447:9" pos:end="449:33"><if pos:start="447:9" pos:end="449:33">if <condition pos:start="447:12" pos:end="447:33">(<expr pos:start="447:13" pos:end="447:32"><name pos:start="447:13" pos:end="447:13">i</name> <operator pos:start="447:15" pos:end="447:15">&lt;</operator> <name pos:start="447:17" pos:end="447:32"><name pos:start="447:17" pos:end="447:20">ohci</name><operator pos:start="447:21" pos:end="447:22">-&gt;</operator><name pos:start="447:23" pos:end="447:32">done_count</name></name></expr>)</condition><block type="pseudo" pos:start="449:13" pos:end="449:33"><block_content pos:start="449:13" pos:end="449:33">

            <expr_stmt pos:start="449:13" pos:end="449:33"><expr pos:start="449:13" pos:end="449:32"><name pos:start="449:13" pos:end="449:28"><name pos:start="449:13" pos:end="449:16">ohci</name><operator pos:start="449:17" pos:end="449:18">-&gt;</operator><name pos:start="449:19" pos:end="449:28">done_count</name></name> <operator pos:start="449:30" pos:end="449:30">=</operator> <name pos:start="449:32" pos:end="449:32">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="453:5" pos:end="453:41"><expr pos:start="453:5" pos:end="453:40"><call pos:start="453:5" pos:end="453:40"><name pos:start="453:5" pos:end="453:19">ohci_put_iso_td</name><argument_list pos:start="453:20" pos:end="453:40">(<argument pos:start="453:21" pos:end="453:24"><expr pos:start="453:21" pos:end="453:24"><name pos:start="453:21" pos:end="453:24">ohci</name></expr></argument>, <argument pos:start="453:27" pos:end="453:30"><expr pos:start="453:27" pos:end="453:30"><name pos:start="453:27" pos:end="453:30">addr</name></expr></argument>, <argument pos:start="453:33" pos:end="453:39"><expr pos:start="453:33" pos:end="453:39"><operator pos:start="453:33" pos:end="453:33">&amp;</operator><name pos:start="453:34" pos:end="453:39">iso_td</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="455:5" pos:end="455:13">return <expr pos:start="455:12" pos:end="455:12"><literal type="number" pos:start="455:12" pos:end="455:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
