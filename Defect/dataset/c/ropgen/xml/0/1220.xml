<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1220.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">virtio_net_set_features</name><parameter_list pos:start="1:36" pos:end="1:74">(<parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><name pos:start="1:37" pos:end="1:48">VirtIODevice</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">vdev</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:73"><decl pos:start="1:57" pos:end="1:73"><type pos:start="1:57" pos:end="1:73"><name pos:start="1:57" pos:end="1:64">uint32_t</name></type> <name pos:start="1:66" pos:end="1:73">features</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:5">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VirtIONet</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">n</name> <init pos:start="5:18" pos:end="5:35">= <expr pos:start="5:20" pos:end="5:35"><call pos:start="5:20" pos:end="5:35"><name pos:start="5:20" pos:end="5:29">VIRTIO_NET</name><argument_list pos:start="5:30" pos:end="5:35">(<argument pos:start="5:31" pos:end="5:34"><expr pos:start="5:31" pos:end="5:34"><name pos:start="5:31" pos:end="5:34">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="13:74"><expr pos:start="11:5" pos:end="13:73"><call pos:start="11:5" pos:end="13:73"><name pos:start="11:5" pos:end="11:29">virtio_net_set_multiqueue</name><argument_list pos:start="11:30" pos:end="13:73">(<argument pos:start="11:31" pos:end="11:31"><expr pos:start="11:31" pos:end="11:31"><name pos:start="11:31" pos:end="11:31">n</name></expr></argument>, <argument pos:start="11:34" pos:end="11:70"><expr pos:start="11:34" pos:end="11:70"><operator pos:start="11:34" pos:end="11:34">!</operator><operator pos:start="11:35" pos:end="11:35">!</operator><operator pos:start="11:36" pos:end="11:36">(</operator><name pos:start="11:37" pos:end="11:44">features</name> <operator pos:start="11:46" pos:end="11:46">&amp;</operator> <operator pos:start="11:48" pos:end="11:48">(</operator><literal type="number" pos:start="11:49" pos:end="11:49">1</literal> <operator pos:start="11:51" pos:end="11:52">&lt;&lt;</operator> <name pos:start="11:54" pos:end="11:68">VIRTIO_NET_F_MQ</name><operator pos:start="11:69" pos:end="11:69">)</operator><operator pos:start="11:70" pos:end="11:70">)</operator></expr></argument>,

                              <argument pos:start="13:31" pos:end="13:72"><expr pos:start="13:31" pos:end="13:72"><operator pos:start="13:31" pos:end="13:31">!</operator><operator pos:start="13:32" pos:end="13:32">!</operator><operator pos:start="13:33" pos:end="13:33">(</operator><name pos:start="13:34" pos:end="13:41">features</name> <operator pos:start="13:43" pos:end="13:43">&amp;</operator> <operator pos:start="13:45" pos:end="13:45">(</operator><literal type="number" pos:start="13:46" pos:end="13:46">1</literal> <operator pos:start="13:48" pos:end="13:49">&lt;&lt;</operator> <name pos:start="13:51" pos:end="13:70">VIRTIO_NET_F_CTRL_VQ</name><operator pos:start="13:71" pos:end="13:71">)</operator><operator pos:start="13:72" pos:end="13:72">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:80"><expr pos:start="17:5" pos:end="17:79"><call pos:start="17:5" pos:end="17:79"><name pos:start="17:5" pos:end="17:30">virtio_net_set_mrg_rx_bufs</name><argument_list pos:start="17:31" pos:end="17:79">(<argument pos:start="17:32" pos:end="17:32"><expr pos:start="17:32" pos:end="17:32"><name pos:start="17:32" pos:end="17:32">n</name></expr></argument>, <argument pos:start="17:35" pos:end="17:78"><expr pos:start="17:35" pos:end="17:78"><operator pos:start="17:35" pos:end="17:35">!</operator><operator pos:start="17:36" pos:end="17:36">!</operator><operator pos:start="17:37" pos:end="17:37">(</operator><name pos:start="17:38" pos:end="17:45">features</name> <operator pos:start="17:47" pos:end="17:47">&amp;</operator> <operator pos:start="17:49" pos:end="17:49">(</operator><literal type="number" pos:start="17:50" pos:end="17:50">1</literal> <operator pos:start="17:52" pos:end="17:53">&lt;&lt;</operator> <name pos:start="17:55" pos:end="17:76">VIRTIO_NET_F_MRG_RXBUF</name><operator pos:start="17:77" pos:end="17:77">)</operator><operator pos:start="17:78" pos:end="17:78">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="35:5"><if pos:start="21:5" pos:end="35:5">if <condition pos:start="21:8" pos:end="21:24">(<expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:9">n</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:23">has_vnet_hdr</name></name></expr>)</condition> <block pos:start="21:26" pos:end="35:5">{<block_content pos:start="23:9" pos:end="33:67">

        <expr_stmt pos:start="23:9" pos:end="33:67"><expr pos:start="23:9" pos:end="33:66"><call pos:start="23:9" pos:end="33:66"><name pos:start="23:9" pos:end="23:23">tap_set_offload</name><argument_list pos:start="23:24" pos:end="33:66">(<argument pos:start="23:25" pos:end="23:58"><expr pos:start="23:25" pos:end="23:58"><call pos:start="23:25" pos:end="23:52"><name pos:start="23:25" pos:end="23:41">qemu_get_subqueue</name><argument_list pos:start="23:42" pos:end="23:52">(<argument pos:start="23:43" pos:end="23:48"><expr pos:start="23:43" pos:end="23:48"><name pos:start="23:43" pos:end="23:48"><name pos:start="23:43" pos:end="23:43">n</name><operator pos:start="23:44" pos:end="23:45">-&gt;</operator><name pos:start="23:46" pos:end="23:48">nic</name></name></expr></argument>, <argument pos:start="23:51" pos:end="23:51"><expr pos:start="23:51" pos:end="23:51"><literal type="number" pos:start="23:51" pos:end="23:51">0</literal></expr></argument>)</argument_list></call><operator pos:start="23:53" pos:end="23:54">-&gt;</operator><name pos:start="23:55" pos:end="23:58">peer</name></expr></argument>,

                        <argument pos:start="25:25" pos:end="25:65"><expr pos:start="25:25" pos:end="25:65"><operator pos:start="25:25" pos:end="25:25">(</operator><name pos:start="25:26" pos:end="25:33">features</name> <operator pos:start="25:35" pos:end="25:36">&gt;&gt;</operator> <name pos:start="25:38" pos:end="25:60">VIRTIO_NET_F_GUEST_CSUM</name><operator pos:start="25:61" pos:end="25:61">)</operator> <operator pos:start="25:63" pos:end="25:63">&amp;</operator> <literal type="number" pos:start="25:65" pos:end="25:65">1</literal></expr></argument>,

                        <argument pos:start="27:25" pos:end="27:65"><expr pos:start="27:25" pos:end="27:65"><operator pos:start="27:25" pos:end="27:25">(</operator><name pos:start="27:26" pos:end="27:33">features</name> <operator pos:start="27:35" pos:end="27:36">&gt;&gt;</operator> <name pos:start="27:38" pos:end="27:60">VIRTIO_NET_F_GUEST_TSO4</name><operator pos:start="27:61" pos:end="27:61">)</operator> <operator pos:start="27:63" pos:end="27:63">&amp;</operator> <literal type="number" pos:start="27:65" pos:end="27:65">1</literal></expr></argument>,

                        <argument pos:start="29:25" pos:end="29:65"><expr pos:start="29:25" pos:end="29:65"><operator pos:start="29:25" pos:end="29:25">(</operator><name pos:start="29:26" pos:end="29:33">features</name> <operator pos:start="29:35" pos:end="29:36">&gt;&gt;</operator> <name pos:start="29:38" pos:end="29:60">VIRTIO_NET_F_GUEST_TSO6</name><operator pos:start="29:61" pos:end="29:61">)</operator> <operator pos:start="29:63" pos:end="29:63">&amp;</operator> <literal type="number" pos:start="29:65" pos:end="29:65">1</literal></expr></argument>,

                        <argument pos:start="31:25" pos:end="31:65"><expr pos:start="31:25" pos:end="31:65"><operator pos:start="31:25" pos:end="31:25">(</operator><name pos:start="31:26" pos:end="31:33">features</name> <operator pos:start="31:35" pos:end="31:36">&gt;&gt;</operator> <name pos:start="31:38" pos:end="31:59">VIRTIO_NET_F_GUEST_ECN</name><operator pos:start="31:60" pos:end="31:60">)</operator>  <operator pos:start="31:63" pos:end="31:63">&amp;</operator> <literal type="number" pos:start="31:65" pos:end="31:65">1</literal></expr></argument>,

                        <argument pos:start="33:25" pos:end="33:65"><expr pos:start="33:25" pos:end="33:65"><operator pos:start="33:25" pos:end="33:25">(</operator><name pos:start="33:26" pos:end="33:33">features</name> <operator pos:start="33:35" pos:end="33:36">&gt;&gt;</operator> <name pos:start="33:38" pos:end="33:59">VIRTIO_NET_F_GUEST_UFO</name><operator pos:start="33:60" pos:end="33:60">)</operator>  <operator pos:start="33:63" pos:end="33:63">&amp;</operator> <literal type="number" pos:start="33:65" pos:end="33:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="39:5" pos:end="59:5">for <control pos:start="39:9" pos:end="39:40">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init>  <condition pos:start="39:18" pos:end="39:35"><expr pos:start="39:18" pos:end="39:34"><name pos:start="39:18" pos:end="39:18">i</name> <operator pos:start="39:20" pos:end="39:20">&lt;</operator> <name pos:start="39:22" pos:end="39:34"><name pos:start="39:22" pos:end="39:22">n</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:34">max_queues</name></name></expr>;</condition> <incr pos:start="39:37" pos:end="39:39"><expr pos:start="39:37" pos:end="39:39"><name pos:start="39:37" pos:end="39:37">i</name><operator pos:start="39:38" pos:end="39:39">++</operator></expr></incr>)</control> <block pos:start="39:42" pos:end="59:5">{<block_content pos:start="41:9" pos:end="57:70">

        <decl_stmt pos:start="41:9" pos:end="41:58"><decl pos:start="41:9" pos:end="41:57"><type pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:22">NetClientState</name> <modifier pos:start="41:24" pos:end="41:24">*</modifier></type><name pos:start="41:25" pos:end="41:26">nc</name> <init pos:start="41:28" pos:end="41:57">= <expr pos:start="41:30" pos:end="41:57"><call pos:start="41:30" pos:end="41:57"><name pos:start="41:30" pos:end="41:46">qemu_get_subqueue</name><argument_list pos:start="41:47" pos:end="41:57">(<argument pos:start="41:48" pos:end="41:53"><expr pos:start="41:48" pos:end="41:53"><name pos:start="41:48" pos:end="41:53"><name pos:start="41:48" pos:end="41:48">n</name><operator pos:start="41:49" pos:end="41:50">-&gt;</operator><name pos:start="41:51" pos:end="41:53">nic</name></name></expr></argument>, <argument pos:start="41:56" pos:end="41:56"><expr pos:start="41:56" pos:end="41:56"><name pos:start="41:56" pos:end="41:56">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:77">(<expr pos:start="45:13" pos:end="45:76"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:21"><name pos:start="45:14" pos:end="45:15">nc</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:21">peer</name></name> <operator pos:start="45:23" pos:end="45:24">||</operator> <name pos:start="45:26" pos:end="45:45"><name pos:start="45:26" pos:end="45:27">nc</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:33">peer</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:39">info</name><operator pos:start="45:40" pos:end="45:41">-&gt;</operator><name pos:start="45:42" pos:end="45:45">type</name></name> <operator pos:start="45:47" pos:end="45:48">!=</operator> <name pos:start="45:50" pos:end="45:76">NET_CLIENT_OPTIONS_KIND_TAP</name></expr>)</condition> <block pos:start="45:79" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:21">

            <continue pos:start="47:13" pos:end="47:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:41">(<expr pos:start="51:13" pos:end="51:40"><operator pos:start="51:13" pos:end="51:13">!</operator><call pos:start="51:14" pos:end="51:40"><name pos:start="51:14" pos:end="51:30">tap_get_vhost_net</name><argument_list pos:start="51:31" pos:end="51:40">(<argument pos:start="51:32" pos:end="51:39"><expr pos:start="51:32" pos:end="51:39"><name pos:start="51:32" pos:end="51:39"><name pos:start="51:32" pos:end="51:33">nc</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:39">peer</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:43" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:21">

            <continue pos:start="53:13" pos:end="53:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:70"><expr pos:start="57:9" pos:end="57:69"><call pos:start="57:9" pos:end="57:69"><name pos:start="57:9" pos:end="57:30">vhost_net_ack_features</name><argument_list pos:start="57:31" pos:end="57:69">(<argument pos:start="57:32" pos:end="57:58"><expr pos:start="57:32" pos:end="57:58"><call pos:start="57:32" pos:end="57:58"><name pos:start="57:32" pos:end="57:48">tap_get_vhost_net</name><argument_list pos:start="57:49" pos:end="57:58">(<argument pos:start="57:50" pos:end="57:57"><expr pos:start="57:50" pos:end="57:57"><name pos:start="57:50" pos:end="57:57"><name pos:start="57:50" pos:end="57:51">nc</name><operator pos:start="57:52" pos:end="57:53">-&gt;</operator><name pos:start="57:54" pos:end="57:57">peer</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="57:61" pos:end="57:68"><expr pos:start="57:61" pos:end="57:68"><name pos:start="57:61" pos:end="57:68">features</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
