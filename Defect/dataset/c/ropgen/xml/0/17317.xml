<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17317.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:12"><specifier pos:start="1:1" pos:end="1:5">const</specifier> <name pos:start="1:7" pos:end="1:10">char</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:27">get_feature_xml</name><parameter_list pos:start="1:28" pos:end="1:76">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:36">CPUState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">env</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:56"><decl pos:start="1:44" pos:end="1:56"><type pos:start="1:44" pos:end="1:56"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:53">char</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">p</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:75"><decl pos:start="1:59" pos:end="1:75"><type pos:start="1:59" pos:end="1:75"><specifier pos:start="1:59" pos:end="1:63">const</specifier> <name pos:start="1:65" pos:end="1:68">char</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier><modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:75">newp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:43">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:28"><specifier pos:start="5:5" pos:end="5:10">extern</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> <name pos:start="5:18" pos:end="5:21">char</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier><specifier pos:start="5:24" pos:end="5:28">const</specifier></type> <name pos:start="5:30" pos:end="5:45"><name pos:start="5:30" pos:end="5:40">xml_builtin</name><index pos:start="5:41" pos:end="5:42">[]</index><index pos:start="5:43" pos:end="5:45">[<expr pos:start="5:44" pos:end="5:44"><literal type="number" pos:start="5:44" pos:end="5:44">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:14">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:20">name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:15"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <name pos:start="13:12" pos:end="13:15">char</name></type> <name pos:start="13:17" pos:end="13:32"><name pos:start="13:17" pos:end="13:26">target_xml</name><index pos:start="13:27" pos:end="13:32">[<expr pos:start="13:28" pos:end="13:31"><literal type="number" pos:start="13:28" pos:end="13:31">1024</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:12"><expr pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:7">len</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <literal type="number" pos:start="17:11" pos:end="17:11">0</literal></expr>;</expr_stmt>

    <while pos:start="19:5" pos:end="21:14">while <condition pos:start="19:11" pos:end="19:35">(<expr pos:start="19:12" pos:end="19:34"><name pos:start="19:12" pos:end="19:17"><name pos:start="19:12" pos:end="19:12">p</name><index pos:start="19:13" pos:end="19:17">[<expr pos:start="19:14" pos:end="19:16"><name pos:start="19:14" pos:end="19:16">len</name></expr>]</index></name> <operator pos:start="19:19" pos:end="19:20">&amp;&amp;</operator> <name pos:start="19:22" pos:end="19:27"><name pos:start="19:22" pos:end="19:22">p</name><index pos:start="19:23" pos:end="19:27">[<expr pos:start="19:24" pos:end="19:26"><name pos:start="19:24" pos:end="19:26">len</name></expr>]</index></name> <operator pos:start="19:29" pos:end="19:30">!=</operator> <literal type="char" pos:start="19:32" pos:end="19:34">':'</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:14"><block_content pos:start="21:9" pos:end="21:14">

        <expr_stmt pos:start="21:9" pos:end="21:14"><expr pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:11">len</name><operator pos:start="21:12" pos:end="21:13">++</operator></expr>;</expr_stmt></block_content></block></while>

    <expr_stmt pos:start="23:5" pos:end="23:20"><expr pos:start="23:5" pos:end="23:19"><operator pos:start="23:5" pos:end="23:5">*</operator><name pos:start="23:6" pos:end="23:9">newp</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <name pos:start="23:13" pos:end="23:13">p</name> <operator pos:start="23:15" pos:end="23:15">+</operator> <name pos:start="23:17" pos:end="23:19">len</name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:16"><expr pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:8">name</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <name pos:start="27:12" pos:end="27:15">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="69:5"><if pos:start="29:5" pos:end="69:5">if <condition pos:start="29:8" pos:end="29:43">(<expr pos:start="29:9" pos:end="29:42"><call pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:15">strncmp</name><argument_list pos:start="29:16" pos:end="29:37">(<argument pos:start="29:17" pos:end="29:17"><expr pos:start="29:17" pos:end="29:17"><name pos:start="29:17" pos:end="29:17">p</name></expr></argument>, <argument pos:start="29:20" pos:end="29:31"><expr pos:start="29:20" pos:end="29:31"><literal type="string" pos:start="29:20" pos:end="29:31">"target.xml"</literal></expr></argument>, <argument pos:start="29:34" pos:end="29:36"><expr pos:start="29:34" pos:end="29:36"><name pos:start="29:34" pos:end="29:36">len</name></expr></argument>)</argument_list></call> <operator pos:start="29:39" pos:end="29:40">==</operator> <literal type="number" pos:start="29:42" pos:end="29:42">0</literal></expr>)</condition> <block pos:start="29:45" pos:end="69:5">{<block_content pos:start="33:9" pos:end="67:26">

        <comment type="block" pos:start="31:9" pos:end="31:57">/* Generate the XML description for this CPU.  */</comment>

        <if_stmt pos:start="33:9" pos:end="65:9"><if pos:start="33:9" pos:end="65:9">if <condition pos:start="33:12" pos:end="33:27">(<expr pos:start="33:13" pos:end="33:26"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:26"><name pos:start="33:14" pos:end="33:23">target_xml</name><index pos:start="33:24" pos:end="33:26">[<expr pos:start="33:25" pos:end="33:25"><literal type="number" pos:start="33:25" pos:end="33:25">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="33:29" pos:end="65:9">{<block_content pos:start="35:13" pos:end="63:44">

            <decl_stmt pos:start="35:13" pos:end="35:32"><decl pos:start="35:13" pos:end="35:31"><type pos:start="35:13" pos:end="35:30"><name pos:start="35:13" pos:end="35:28">GDBRegisterState</name> <modifier pos:start="35:30" pos:end="35:30">*</modifier></type><name pos:start="35:31" pos:end="35:31">r</name></decl>;</decl_stmt>



            <expr_stmt pos:start="39:13" pos:end="49:34"><expr pos:start="39:13" pos:end="49:33"><call pos:start="39:13" pos:end="49:33"><name pos:start="39:13" pos:end="39:19">sprintf</name><argument_list pos:start="39:20" pos:end="49:33">(<argument pos:start="39:21" pos:end="39:30"><expr pos:start="39:21" pos:end="39:30"><name pos:start="39:21" pos:end="39:30">target_xml</name></expr></argument>,

                    <argument pos:start="41:21" pos:end="47:47"><expr pos:start="41:21" pos:end="47:47"><literal type="string" pos:start="41:21" pos:end="41:45">"&lt;?xml version=\"1.0\"?&gt;"</literal>

                    <literal type="string" pos:start="43:21" pos:end="43:65">"&lt;!DOCTYPE target SYSTEM \"gdb-target.dtd\"&gt;"</literal>

                    <literal type="string" pos:start="45:21" pos:end="45:30">"&lt;target&gt;"</literal>

                    <literal type="string" pos:start="47:21" pos:end="47:47">"&lt;xi:include href=\"%s\"/&gt;"</literal></expr></argument>,

                    <argument pos:start="49:21" pos:end="49:32"><expr pos:start="49:21" pos:end="49:32"><name pos:start="49:21" pos:end="49:32">GDB_CORE_XML</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="53:13" pos:end="61:13">for <control pos:start="53:17" pos:end="53:51">(<init pos:start="53:18" pos:end="53:35"><expr pos:start="53:18" pos:end="53:34"><name pos:start="53:18" pos:end="53:18">r</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <name pos:start="53:22" pos:end="53:34"><name pos:start="53:22" pos:end="53:24">env</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:34">gdb_regs</name></name></expr>;</init> <condition pos:start="53:37" pos:end="53:38"><expr pos:start="53:37" pos:end="53:37"><name pos:start="53:37" pos:end="53:37">r</name></expr>;</condition> <incr pos:start="53:40" pos:end="53:50"><expr pos:start="53:40" pos:end="53:50"><name pos:start="53:40" pos:end="53:40">r</name> <operator pos:start="53:42" pos:end="53:42">=</operator> <name pos:start="53:44" pos:end="53:50"><name pos:start="53:44" pos:end="53:44">r</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:50">next</name></name></expr></incr>)</control> <block pos:start="53:53" pos:end="61:13">{<block_content pos:start="55:17" pos:end="59:43">

                <expr_stmt pos:start="55:17" pos:end="55:58"><expr pos:start="55:17" pos:end="55:57"><call pos:start="55:17" pos:end="55:57"><name pos:start="55:17" pos:end="55:22">strcat</name><argument_list pos:start="55:23" pos:end="55:57">(<argument pos:start="55:24" pos:end="55:33"><expr pos:start="55:24" pos:end="55:33"><name pos:start="55:24" pos:end="55:33">target_xml</name></expr></argument>, <argument pos:start="55:36" pos:end="55:56"><expr pos:start="55:36" pos:end="55:56"><literal type="string" pos:start="55:36" pos:end="55:56">"&lt;xi:include href=\""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:43"><expr pos:start="57:17" pos:end="57:42"><call pos:start="57:17" pos:end="57:42"><name pos:start="57:17" pos:end="57:22">strcat</name><argument_list pos:start="57:23" pos:end="57:42">(<argument pos:start="57:24" pos:end="57:33"><expr pos:start="57:24" pos:end="57:33"><name pos:start="57:24" pos:end="57:33">target_xml</name></expr></argument>, <argument pos:start="57:36" pos:end="57:41"><expr pos:start="57:36" pos:end="57:41"><name pos:start="57:36" pos:end="57:41"><name pos:start="57:36" pos:end="57:36">r</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:41">xml</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:43"><expr pos:start="59:17" pos:end="59:42"><call pos:start="59:17" pos:end="59:42"><name pos:start="59:17" pos:end="59:22">strcat</name><argument_list pos:start="59:23" pos:end="59:42">(<argument pos:start="59:24" pos:end="59:33"><expr pos:start="59:24" pos:end="59:33"><name pos:start="59:24" pos:end="59:33">target_xml</name></expr></argument>, <argument pos:start="59:36" pos:end="59:41"><expr pos:start="59:36" pos:end="59:41"><literal type="string" pos:start="59:36" pos:end="59:41">"\"/&gt;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="63:13" pos:end="63:44"><expr pos:start="63:13" pos:end="63:43"><call pos:start="63:13" pos:end="63:43"><name pos:start="63:13" pos:end="63:18">strcat</name><argument_list pos:start="63:19" pos:end="63:43">(<argument pos:start="63:20" pos:end="63:29"><expr pos:start="63:20" pos:end="63:29"><name pos:start="63:20" pos:end="63:29">target_xml</name></expr></argument>, <argument pos:start="63:32" pos:end="63:42"><expr pos:start="63:32" pos:end="63:42"><literal type="string" pos:start="63:32" pos:end="63:42">"&lt;/target&gt;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="67:9" pos:end="67:26">return <expr pos:start="67:16" pos:end="67:25"><name pos:start="67:16" pos:end="67:25">target_xml</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="71:5" pos:end="79:5">for <control pos:start="71:9" pos:end="71:22">(<init pos:start="71:10" pos:end="71:15"><expr pos:start="71:10" pos:end="71:14"><name pos:start="71:10" pos:end="71:10">i</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <literal type="number" pos:start="71:14" pos:end="71:14">0</literal></expr>;</init> <condition pos:start="71:17" pos:end="71:17">;</condition> <incr pos:start="71:19" pos:end="71:21"><expr pos:start="71:19" pos:end="71:21"><name pos:start="71:19" pos:end="71:19">i</name><operator pos:start="71:20" pos:end="71:21">++</operator></expr></incr>)</control> <block pos:start="71:24" pos:end="79:5">{<block_content pos:start="73:9" pos:end="77:18">

        <expr_stmt pos:start="73:9" pos:end="73:33"><expr pos:start="73:9" pos:end="73:32"><name pos:start="73:9" pos:end="73:12">name</name> <operator pos:start="73:14" pos:end="73:14">=</operator> <name pos:start="73:16" pos:end="73:32"><name pos:start="73:16" pos:end="73:26">xml_builtin</name><index pos:start="73:27" pos:end="73:29">[<expr pos:start="73:28" pos:end="73:28"><name pos:start="73:28" pos:end="73:28">i</name></expr>]</index><index pos:start="73:30" pos:end="73:32">[<expr pos:start="73:31" pos:end="73:31"><literal type="number" pos:start="73:31" pos:end="73:31">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="77:18"><if pos:start="75:9" pos:end="77:18">if <condition pos:start="75:12" pos:end="75:73">(<expr pos:start="75:13" pos:end="75:72"><operator pos:start="75:13" pos:end="75:13">!</operator><name pos:start="75:14" pos:end="75:17">name</name> <operator pos:start="75:19" pos:end="75:20">||</operator> <operator pos:start="75:22" pos:end="75:22">(</operator><call pos:start="75:23" pos:end="75:43"><name pos:start="75:23" pos:end="75:29">strncmp</name><argument_list pos:start="75:30" pos:end="75:43">(<argument pos:start="75:31" pos:end="75:34"><expr pos:start="75:31" pos:end="75:34"><name pos:start="75:31" pos:end="75:34">name</name></expr></argument>, <argument pos:start="75:37" pos:end="75:37"><expr pos:start="75:37" pos:end="75:37"><name pos:start="75:37" pos:end="75:37">p</name></expr></argument>, <argument pos:start="75:40" pos:end="75:42"><expr pos:start="75:40" pos:end="75:42"><name pos:start="75:40" pos:end="75:42">len</name></expr></argument>)</argument_list></call> <operator pos:start="75:45" pos:end="75:46">==</operator> <literal type="number" pos:start="75:48" pos:end="75:48">0</literal> <operator pos:start="75:50" pos:end="75:51">&amp;&amp;</operator> <call pos:start="75:53" pos:end="75:64"><name pos:start="75:53" pos:end="75:58">strlen</name><argument_list pos:start="75:59" pos:end="75:64">(<argument pos:start="75:60" pos:end="75:63"><expr pos:start="75:60" pos:end="75:63"><name pos:start="75:60" pos:end="75:63">name</name></expr></argument>)</argument_list></call> <operator pos:start="75:66" pos:end="75:67">==</operator> <name pos:start="75:69" pos:end="75:71">len</name><operator pos:start="75:72" pos:end="75:72">)</operator></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:18"><block_content pos:start="77:13" pos:end="77:18">

            <break pos:start="77:13" pos:end="77:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="81:5" pos:end="81:43">return <expr pos:start="81:12" pos:end="81:42"><ternary pos:start="81:12" pos:end="81:42"><condition pos:start="81:12" pos:end="81:17"><expr pos:start="81:12" pos:end="81:15"><name pos:start="81:12" pos:end="81:15">name</name></expr> ?</condition><then pos:start="81:19" pos:end="81:35"> <expr pos:start="81:19" pos:end="81:35"><name pos:start="81:19" pos:end="81:35"><name pos:start="81:19" pos:end="81:29">xml_builtin</name><index pos:start="81:30" pos:end="81:32">[<expr pos:start="81:31" pos:end="81:31"><name pos:start="81:31" pos:end="81:31">i</name></expr>]</index><index pos:start="81:33" pos:end="81:35">[<expr pos:start="81:34" pos:end="81:34"><literal type="number" pos:start="81:34" pos:end="81:34">1</literal></expr>]</index></name></expr> </then><else pos:start="81:37" pos:end="81:42">: <expr pos:start="81:39" pos:end="81:42"><name pos:start="81:39" pos:end="81:42">NULL</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
