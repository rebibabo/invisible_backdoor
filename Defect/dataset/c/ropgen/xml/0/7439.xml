<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7439.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">virtio_blk_data_plane_stop</name><parameter_list pos:start="1:32" pos:end="1:56">(<parameter pos:start="1:33" pos:end="1:55"><decl pos:start="1:33" pos:end="1:55"><type pos:start="1:33" pos:end="1:54"><name pos:start="1:33" pos:end="1:52">VirtIOBlockDataPlane</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:24">

    <decl_stmt pos:start="5:5" pos:end="5:63"><decl pos:start="5:5" pos:end="5:62"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">BusState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">qbus</name> <init pos:start="5:20" pos:end="5:62">= <expr pos:start="5:22" pos:end="5:62"><call pos:start="5:22" pos:end="5:62"><name pos:start="5:22" pos:end="5:24">BUS</name><argument_list pos:start="5:25" pos:end="5:62">(<argument pos:start="5:26" pos:end="5:61"><expr pos:start="5:26" pos:end="5:61"><call pos:start="5:26" pos:end="5:61"><name pos:start="5:26" pos:end="5:44">qdev_get_parent_bus</name><argument_list pos:start="5:45" pos:end="5:61">(<argument pos:start="5:46" pos:end="5:60"><expr pos:start="5:46" pos:end="5:60"><call pos:start="5:46" pos:end="5:60"><name pos:start="5:46" pos:end="5:51">DEVICE</name><argument_list pos:start="5:52" pos:end="5:60">(<argument pos:start="5:53" pos:end="5:59"><expr pos:start="5:53" pos:end="5:59"><name pos:start="5:53" pos:end="5:59"><name pos:start="5:53" pos:end="5:53">s</name><operator pos:start="5:54" pos:end="5:55">-&gt;</operator><name pos:start="5:56" pos:end="5:59">vdev</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VirtioBusClass</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">k</name> <init pos:start="7:23" pos:end="7:50">= <expr pos:start="7:25" pos:end="7:50"><call pos:start="7:25" pos:end="7:50"><name pos:start="7:25" pos:end="7:44">VIRTIO_BUS_GET_CLASS</name><argument_list pos:start="7:45" pos:end="7:50">(<argument pos:start="7:46" pos:end="7:49"><expr pos:start="7:46" pos:end="7:49"><name pos:start="7:46" pos:end="7:49">qbus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">VirtIOBlock</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:21">vblk</name> <init pos:start="9:23" pos:end="9:43">= <expr pos:start="9:25" pos:end="9:43"><call pos:start="9:25" pos:end="9:43"><name pos:start="9:25" pos:end="9:34">VIRTIO_BLK</name><argument_list pos:start="9:35" pos:end="9:43">(<argument pos:start="9:36" pos:end="9:42"><expr pos:start="9:36" pos:end="9:42"><name pos:start="9:36" pos:end="9:42"><name pos:start="9:36" pos:end="9:36">s</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:42">vdev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:39"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:17">nvqs</name> <init pos:start="13:19" pos:end="13:39">= <expr pos:start="13:21" pos:end="13:39"><name pos:start="13:21" pos:end="13:39"><name pos:start="13:21" pos:end="13:21">s</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:27">conf</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:39">num_queues</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:48">(<expr pos:start="17:9" pos:end="17:47"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:32"><name pos:start="17:10" pos:end="17:13">vblk</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:32">dataplane_started</name></name> <operator pos:start="17:34" pos:end="17:35">||</operator> <name pos:start="17:37" pos:end="17:47"><name pos:start="17:37" pos:end="17:37">s</name><operator pos:start="17:38" pos:end="17:39">-&gt;</operator><name pos:start="17:40" pos:end="17:47">stopping</name></name></expr>)</condition> <block pos:start="17:50" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:15">

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:32">/* Better luck next time. */</comment>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:33">(<expr pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:12">vblk</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:32">dataplane_disabled</name></name></expr>)</condition> <block pos:start="27:35" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:15">

        <expr_stmt pos:start="29:9" pos:end="29:41"><expr pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:12">vblk</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:32">dataplane_disabled</name></name> <operator pos:start="29:34" pos:end="29:34">=</operator> <name pos:start="29:36" pos:end="29:40">false</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:40"><expr pos:start="31:9" pos:end="31:39"><name pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:12">vblk</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:31">dataplane_started</name></name> <operator pos:start="31:33" pos:end="31:33">=</operator> <name pos:start="31:35" pos:end="31:39">false</name></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:23"><expr pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:15">stopping</name></name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:22">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:40"><expr pos:start="39:5" pos:end="39:39"><call pos:start="39:5" pos:end="39:39"><name pos:start="39:5" pos:end="39:36">trace_virtio_blk_data_plane_stop</name><argument_list pos:start="39:37" pos:end="39:39">(<argument pos:start="39:38" pos:end="39:38"><expr pos:start="39:38" pos:end="39:38"><name pos:start="39:38" pos:end="39:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:32"><expr pos:start="43:5" pos:end="43:31"><call pos:start="43:5" pos:end="43:31"><name pos:start="43:5" pos:end="43:23">aio_context_acquire</name><argument_list pos:start="43:24" pos:end="43:31">(<argument pos:start="43:25" pos:end="43:30"><expr pos:start="43:25" pos:end="43:30"><name pos:start="43:25" pos:end="43:30"><name pos:start="43:25" pos:end="43:25">s</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:30">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:56">/* Stop notifications for new requests from guest */</comment>

    <for pos:start="49:5" pos:end="57:5">for <control pos:start="49:9" pos:end="49:30">(<init pos:start="49:10" pos:end="49:15"><expr pos:start="49:10" pos:end="49:14"><name pos:start="49:10" pos:end="49:10">i</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">0</literal></expr>;</init> <condition pos:start="49:17" pos:end="49:25"><expr pos:start="49:17" pos:end="49:24"><name pos:start="49:17" pos:end="49:17">i</name> <operator pos:start="49:19" pos:end="49:19">&lt;</operator> <name pos:start="49:21" pos:end="49:24">nvqs</name></expr>;</condition> <incr pos:start="49:27" pos:end="49:29"><expr pos:start="49:27" pos:end="49:29"><name pos:start="49:27" pos:end="49:27">i</name><operator pos:start="49:28" pos:end="49:29">++</operator></expr></incr>)</control> <block pos:start="49:32" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:69">

        <decl_stmt pos:start="51:9" pos:end="51:53"><decl pos:start="51:9" pos:end="51:52"><type pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:17">VirtQueue</name> <modifier pos:start="51:19" pos:end="51:19">*</modifier></type><name pos:start="51:20" pos:end="51:21">vq</name> <init pos:start="51:23" pos:end="51:52">= <expr pos:start="51:25" pos:end="51:52"><call pos:start="51:25" pos:end="51:52"><name pos:start="51:25" pos:end="51:40">virtio_get_queue</name><argument_list pos:start="51:41" pos:end="51:52">(<argument pos:start="51:42" pos:end="51:48"><expr pos:start="51:42" pos:end="51:48"><name pos:start="51:42" pos:end="51:48"><name pos:start="51:42" pos:end="51:42">s</name><operator pos:start="51:43" pos:end="51:44">-&gt;</operator><name pos:start="51:45" pos:end="51:48">vdev</name></name></expr></argument>, <argument pos:start="51:51" pos:end="51:51"><expr pos:start="51:51" pos:end="51:51"><name pos:start="51:51" pos:end="51:51">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:69"><expr pos:start="55:9" pos:end="55:68"><call pos:start="55:9" pos:end="55:68"><name pos:start="55:9" pos:end="55:50">virtio_queue_aio_set_host_notifier_handler</name><argument_list pos:start="55:51" pos:end="55:68">(<argument pos:start="55:52" pos:end="55:53"><expr pos:start="55:52" pos:end="55:53"><name pos:start="55:52" pos:end="55:53">vq</name></expr></argument>, <argument pos:start="55:56" pos:end="55:61"><expr pos:start="55:56" pos:end="55:61"><name pos:start="55:56" pos:end="55:61"><name pos:start="55:56" pos:end="55:56">s</name><operator pos:start="55:57" pos:end="55:58">-&gt;</operator><name pos:start="55:59" pos:end="55:61">ctx</name></name></expr></argument>, <argument pos:start="55:64" pos:end="55:67"><expr pos:start="55:64" pos:end="55:67"><name pos:start="55:64" pos:end="55:67">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="61:5" pos:end="61:56">/* Drain and switch bs back to the QEMU main loop */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:67"><expr pos:start="63:5" pos:end="63:66"><call pos:start="63:5" pos:end="63:66"><name pos:start="63:5" pos:end="63:23">blk_set_aio_context</name><argument_list pos:start="63:24" pos:end="63:66">(<argument pos:start="63:25" pos:end="63:41"><expr pos:start="63:25" pos:end="63:41"><name pos:start="63:25" pos:end="63:41"><name pos:start="63:25" pos:end="63:25">s</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:31">conf</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:37">conf</name><operator pos:start="63:38" pos:end="63:38">.</operator><name pos:start="63:39" pos:end="63:41">blk</name></name></expr></argument>, <argument pos:start="63:44" pos:end="63:65"><expr pos:start="63:44" pos:end="63:65"><call pos:start="63:44" pos:end="63:65"><name pos:start="63:44" pos:end="63:63">qemu_get_aio_context</name><argument_list pos:start="63:64" pos:end="63:65">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:32"><expr pos:start="67:5" pos:end="67:31"><call pos:start="67:5" pos:end="67:31"><name pos:start="67:5" pos:end="67:23">aio_context_release</name><argument_list pos:start="67:24" pos:end="67:31">(<argument pos:start="67:25" pos:end="67:30"><expr pos:start="67:25" pos:end="67:30"><name pos:start="67:25" pos:end="67:30"><name pos:start="67:25" pos:end="67:25">s</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:30">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="71:5" pos:end="75:5">for <control pos:start="71:9" pos:end="71:30">(<init pos:start="71:10" pos:end="71:15"><expr pos:start="71:10" pos:end="71:14"><name pos:start="71:10" pos:end="71:10">i</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <literal type="number" pos:start="71:14" pos:end="71:14">0</literal></expr>;</init> <condition pos:start="71:17" pos:end="71:25"><expr pos:start="71:17" pos:end="71:24"><name pos:start="71:17" pos:end="71:17">i</name> <operator pos:start="71:19" pos:end="71:19">&lt;</operator> <name pos:start="71:21" pos:end="71:24">nvqs</name></expr>;</condition> <incr pos:start="71:27" pos:end="71:29"><expr pos:start="71:27" pos:end="71:29"><name pos:start="71:27" pos:end="71:27">i</name><operator pos:start="71:28" pos:end="71:29">++</operator></expr></incr>)</control> <block pos:start="71:32" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:65">

        <expr_stmt pos:start="73:9" pos:end="73:65"><expr pos:start="73:9" pos:end="73:64"><call pos:start="73:9" pos:end="73:64"><name pos:start="73:9" pos:end="73:36">virtio_bus_set_host_notifier</name><argument_list pos:start="73:37" pos:end="73:64">(<argument pos:start="73:38" pos:end="73:53"><expr pos:start="73:38" pos:end="73:53"><call pos:start="73:38" pos:end="73:53"><name pos:start="73:38" pos:end="73:47">VIRTIO_BUS</name><argument_list pos:start="73:48" pos:end="73:53">(<argument pos:start="73:49" pos:end="73:52"><expr pos:start="73:49" pos:end="73:52"><name pos:start="73:49" pos:end="73:52">qbus</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="73:56" pos:end="73:56"><expr pos:start="73:56" pos:end="73:56"><name pos:start="73:56" pos:end="73:56">i</name></expr></argument>, <argument pos:start="73:59" pos:end="73:63"><expr pos:start="73:59" pos:end="73:63"><name pos:start="73:59" pos:end="73:63">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="79:5" pos:end="79:39">/* Clean up guest notifier (irq) */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:54"><expr pos:start="81:5" pos:end="81:53"><call pos:start="81:5" pos:end="81:53"><name pos:start="81:5" pos:end="81:26"><name pos:start="81:5" pos:end="81:5">k</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:26">set_guest_notifiers</name></name><argument_list pos:start="81:27" pos:end="81:53">(<argument pos:start="81:28" pos:end="81:39"><expr pos:start="81:28" pos:end="81:39"><name pos:start="81:28" pos:end="81:39"><name pos:start="81:28" pos:end="81:31">qbus</name><operator pos:start="81:32" pos:end="81:33">-&gt;</operator><name pos:start="81:34" pos:end="81:39">parent</name></name></expr></argument>, <argument pos:start="81:42" pos:end="81:45"><expr pos:start="81:42" pos:end="81:45"><name pos:start="81:42" pos:end="81:45">nvqs</name></expr></argument>, <argument pos:start="81:48" pos:end="81:52"><expr pos:start="81:48" pos:end="81:52"><name pos:start="81:48" pos:end="81:52">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:36"><expr pos:start="85:5" pos:end="85:35"><name pos:start="85:5" pos:end="85:27"><name pos:start="85:5" pos:end="85:8">vblk</name><operator pos:start="85:9" pos:end="85:10">-&gt;</operator><name pos:start="85:11" pos:end="85:27">dataplane_started</name></name> <operator pos:start="85:29" pos:end="85:29">=</operator> <name pos:start="85:31" pos:end="85:35">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:24"><expr pos:start="87:5" pos:end="87:23"><name pos:start="87:5" pos:end="87:15"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:15">stopping</name></name> <operator pos:start="87:17" pos:end="87:17">=</operator> <name pos:start="87:19" pos:end="87:23">false</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
