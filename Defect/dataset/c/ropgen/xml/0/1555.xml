<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1555.c" pos:tabs="8"><function pos:start="1:1" pos:end="2473:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">gen_farith</name> <parameter_list pos:start="1:24" pos:end="3:55">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:41"><name pos:start="1:25" pos:end="1:36">DisasContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">ctx</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:59"><decl pos:start="1:44" pos:end="1:59"><type pos:start="1:44" pos:end="1:59"><name pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:47">enum</name> <name pos:start="1:49" pos:end="1:55">fopcode</name></name></type> <name pos:start="1:57" pos:end="1:59">op1</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:30"><decl pos:start="3:25" pos:end="3:30"><type pos:start="3:25" pos:end="3:30"><name pos:start="3:25" pos:end="3:27">int</name></type> <name pos:start="3:29" pos:end="3:30">ft</name></decl></parameter>, <parameter pos:start="3:33" pos:end="3:38"><decl pos:start="3:33" pos:end="3:38"><type pos:start="3:33" pos:end="3:38"><name pos:start="3:33" pos:end="3:35">int</name></type> <name pos:start="3:37" pos:end="3:38">fs</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:46"><decl pos:start="3:41" pos:end="3:46"><type pos:start="3:41" pos:end="3:46"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:46">fd</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:54"><decl pos:start="3:49" pos:end="3:54"><type pos:start="3:49" pos:end="3:54"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:54">cc</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="2473:1">{<block_content pos:start="7:5" pos:end="2471:5">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">opn</name> <init pos:start="7:21" pos:end="7:30">= <expr pos:start="7:23" pos:end="7:30"><literal type="string" pos:start="7:23" pos:end="7:30">"farith"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="43:6"><decl pos:start="9:5" pos:end="43:5"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:27"><name pos:start="9:17" pos:end="9:25">condnames</name><index pos:start="9:26" pos:end="9:27">[]</index></name> <init pos:start="9:29" pos:end="43:5">= <expr pos:start="9:31" pos:end="43:5"><block pos:start="9:31" pos:end="43:5">{

            <expr pos:start="11:13" pos:end="11:17"><literal type="string" pos:start="11:13" pos:end="11:17">"c.f"</literal></expr>,

            <expr pos:start="13:13" pos:end="13:18"><literal type="string" pos:start="13:13" pos:end="13:18">"c.un"</literal></expr>,

            <expr pos:start="15:13" pos:end="15:18"><literal type="string" pos:start="15:13" pos:end="15:18">"c.eq"</literal></expr>,

            <expr pos:start="17:13" pos:end="17:19"><literal type="string" pos:start="17:13" pos:end="17:19">"c.ueq"</literal></expr>,

            <expr pos:start="19:13" pos:end="19:19"><literal type="string" pos:start="19:13" pos:end="19:19">"c.olt"</literal></expr>,

            <expr pos:start="21:13" pos:end="21:19"><literal type="string" pos:start="21:13" pos:end="21:19">"c.ult"</literal></expr>,

            <expr pos:start="23:13" pos:end="23:19"><literal type="string" pos:start="23:13" pos:end="23:19">"c.ole"</literal></expr>,

            <expr pos:start="25:13" pos:end="25:19"><literal type="string" pos:start="25:13" pos:end="25:19">"c.ule"</literal></expr>,

            <expr pos:start="27:13" pos:end="27:18"><literal type="string" pos:start="27:13" pos:end="27:18">"c.sf"</literal></expr>,

            <expr pos:start="29:13" pos:end="29:20"><literal type="string" pos:start="29:13" pos:end="29:20">"c.ngle"</literal></expr>,

            <expr pos:start="31:13" pos:end="31:19"><literal type="string" pos:start="31:13" pos:end="31:19">"c.seq"</literal></expr>,

            <expr pos:start="33:13" pos:end="33:19"><literal type="string" pos:start="33:13" pos:end="33:19">"c.ngl"</literal></expr>,

            <expr pos:start="35:13" pos:end="35:18"><literal type="string" pos:start="35:13" pos:end="35:18">"c.lt"</literal></expr>,

            <expr pos:start="37:13" pos:end="37:19"><literal type="string" pos:start="37:13" pos:end="37:19">"c.nge"</literal></expr>,

            <expr pos:start="39:13" pos:end="39:18"><literal type="string" pos:start="39:13" pos:end="39:18">"c.le"</literal></expr>,

            <expr pos:start="41:13" pos:end="41:19"><literal type="string" pos:start="41:13" pos:end="41:19">"c.ngt"</literal></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="45:5" pos:end="79:6"><decl pos:start="45:5" pos:end="79:5"><type pos:start="45:5" pos:end="45:16"><specifier pos:start="45:5" pos:end="45:9">const</specifier> <name pos:start="45:11" pos:end="45:14">char</name> <modifier pos:start="45:16" pos:end="45:16">*</modifier></type><name pos:start="45:17" pos:end="45:31"><name pos:start="45:17" pos:end="45:29">condnames_abs</name><index pos:start="45:30" pos:end="45:31">[]</index></name> <init pos:start="45:33" pos:end="79:5">= <expr pos:start="45:35" pos:end="79:5"><block pos:start="45:35" pos:end="79:5">{

            <expr pos:start="47:13" pos:end="47:20"><literal type="string" pos:start="47:13" pos:end="47:20">"cabs.f"</literal></expr>,

            <expr pos:start="49:13" pos:end="49:21"><literal type="string" pos:start="49:13" pos:end="49:21">"cabs.un"</literal></expr>,

            <expr pos:start="51:13" pos:end="51:21"><literal type="string" pos:start="51:13" pos:end="51:21">"cabs.eq"</literal></expr>,

            <expr pos:start="53:13" pos:end="53:22"><literal type="string" pos:start="53:13" pos:end="53:22">"cabs.ueq"</literal></expr>,

            <expr pos:start="55:13" pos:end="55:22"><literal type="string" pos:start="55:13" pos:end="55:22">"cabs.olt"</literal></expr>,

            <expr pos:start="57:13" pos:end="57:22"><literal type="string" pos:start="57:13" pos:end="57:22">"cabs.ult"</literal></expr>,

            <expr pos:start="59:13" pos:end="59:22"><literal type="string" pos:start="59:13" pos:end="59:22">"cabs.ole"</literal></expr>,

            <expr pos:start="61:13" pos:end="61:22"><literal type="string" pos:start="61:13" pos:end="61:22">"cabs.ule"</literal></expr>,

            <expr pos:start="63:13" pos:end="63:21"><literal type="string" pos:start="63:13" pos:end="63:21">"cabs.sf"</literal></expr>,

            <expr pos:start="65:13" pos:end="65:23"><literal type="string" pos:start="65:13" pos:end="65:23">"cabs.ngle"</literal></expr>,

            <expr pos:start="67:13" pos:end="67:22"><literal type="string" pos:start="67:13" pos:end="67:22">"cabs.seq"</literal></expr>,

            <expr pos:start="69:13" pos:end="69:22"><literal type="string" pos:start="69:13" pos:end="69:22">"cabs.ngl"</literal></expr>,

            <expr pos:start="71:13" pos:end="71:21"><literal type="string" pos:start="71:13" pos:end="71:21">"cabs.lt"</literal></expr>,

            <expr pos:start="73:13" pos:end="73:22"><literal type="string" pos:start="73:13" pos:end="73:22">"cabs.nge"</literal></expr>,

            <expr pos:start="75:13" pos:end="75:21"><literal type="string" pos:start="75:13" pos:end="75:21">"cabs.le"</literal></expr>,

            <expr pos:start="77:13" pos:end="77:22"><literal type="string" pos:start="77:13" pos:end="77:22">"cabs.ngt"</literal></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <enum pos:start="81:5" pos:end="81:52">enum <block pos:start="81:10" pos:end="81:34">{ <decl pos:start="81:12" pos:end="81:16"><name pos:start="81:12" pos:end="81:16">BINOP</name></decl>, <decl pos:start="81:19" pos:end="81:23"><name pos:start="81:19" pos:end="81:23">CMPOP</name></decl>, <decl pos:start="81:26" pos:end="81:32"><name pos:start="81:26" pos:end="81:32">OTHEROP</name></decl> }</block> <decl pos:start="81:36" pos:end="81:51"><name pos:start="81:36" pos:end="81:41">optype</name> <init pos:start="81:43" pos:end="81:51">= <expr pos:start="81:45" pos:end="81:51"><name pos:start="81:45" pos:end="81:51">OTHEROP</name></expr></init></decl>;</enum>

    <decl_stmt pos:start="83:5" pos:end="83:39"><decl pos:start="83:5" pos:end="83:38"><type pos:start="83:5" pos:end="83:12"><name pos:start="83:5" pos:end="83:12">uint32_t</name></type> <name pos:start="83:14" pos:end="83:17">func</name> <init pos:start="83:19" pos:end="83:38">= <expr pos:start="83:21" pos:end="83:38"><name pos:start="83:21" pos:end="83:31"><name pos:start="83:21" pos:end="83:23">ctx</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:31">opcode</name></name> <operator pos:start="83:33" pos:end="83:33">&amp;</operator> <literal type="number" pos:start="83:35" pos:end="83:38">0x3f</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="87:5" pos:end="2447:5">switch <condition pos:start="87:12" pos:end="87:16">(<expr pos:start="87:13" pos:end="87:15"><name pos:start="87:13" pos:end="87:15">op1</name></expr>)</condition> <block pos:start="87:18" pos:end="2447:5">{<block_content pos:start="89:5" pos:end="2445:15">

    <case pos:start="89:5" pos:end="89:19">case <expr pos:start="89:10" pos:end="89:18"><name pos:start="89:10" pos:end="89:18">OPC_ADD_S</name></expr>:</case>

        <block pos:start="91:9" pos:end="111:9">{<block_content pos:start="93:13" pos:end="109:35">

            <decl_stmt pos:start="93:13" pos:end="93:46"><decl pos:start="93:13" pos:end="93:45"><type pos:start="93:13" pos:end="93:20"><name pos:start="93:13" pos:end="93:20">TCGv_i32</name></type> <name pos:start="93:22" pos:end="93:24">fp0</name> <init pos:start="93:26" pos:end="93:45">= <expr pos:start="93:28" pos:end="93:45"><call pos:start="93:28" pos:end="93:45"><name pos:start="93:28" pos:end="93:43">tcg_temp_new_i32</name><argument_list pos:start="93:44" pos:end="93:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="95:13" pos:end="95:46"><decl pos:start="95:13" pos:end="95:45"><type pos:start="95:13" pos:end="95:20"><name pos:start="95:13" pos:end="95:20">TCGv_i32</name></type> <name pos:start="95:22" pos:end="95:24">fp1</name> <init pos:start="95:26" pos:end="95:45">= <expr pos:start="95:28" pos:end="95:45"><call pos:start="95:28" pos:end="95:45"><name pos:start="95:28" pos:end="95:43">tcg_temp_new_i32</name><argument_list pos:start="95:44" pos:end="95:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="99:13" pos:end="99:36"><expr pos:start="99:13" pos:end="99:35"><call pos:start="99:13" pos:end="99:35"><name pos:start="99:13" pos:end="99:26">gen_load_fpr32</name><argument_list pos:start="99:27" pos:end="99:35">(<argument pos:start="99:28" pos:end="99:30"><expr pos:start="99:28" pos:end="99:30"><name pos:start="99:28" pos:end="99:30">fp0</name></expr></argument>, <argument pos:start="99:33" pos:end="99:34"><expr pos:start="99:33" pos:end="99:34"><name pos:start="99:33" pos:end="99:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:36"><expr pos:start="101:13" pos:end="101:35"><call pos:start="101:13" pos:end="101:35"><name pos:start="101:13" pos:end="101:26">gen_load_fpr32</name><argument_list pos:start="101:27" pos:end="101:35">(<argument pos:start="101:28" pos:end="101:30"><expr pos:start="101:28" pos:end="101:30"><name pos:start="101:28" pos:end="101:30">fp1</name></expr></argument>, <argument pos:start="101:33" pos:end="101:34"><expr pos:start="101:33" pos:end="101:34"><name pos:start="101:33" pos:end="101:34">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:59"><expr pos:start="103:13" pos:end="103:58"><call pos:start="103:13" pos:end="103:58"><name pos:start="103:13" pos:end="103:34">gen_helper_float_add_s</name><argument_list pos:start="103:35" pos:end="103:58">(<argument pos:start="103:36" pos:end="103:38"><expr pos:start="103:36" pos:end="103:38"><name pos:start="103:36" pos:end="103:38">fp0</name></expr></argument>, <argument pos:start="103:41" pos:end="103:47"><expr pos:start="103:41" pos:end="103:47"><name pos:start="103:41" pos:end="103:47">cpu_env</name></expr></argument>, <argument pos:start="103:50" pos:end="103:52"><expr pos:start="103:50" pos:end="103:52"><name pos:start="103:50" pos:end="103:52">fp0</name></expr></argument>, <argument pos:start="103:55" pos:end="103:57"><expr pos:start="103:55" pos:end="103:57"><name pos:start="103:55" pos:end="103:57">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:35"><expr pos:start="105:13" pos:end="105:34"><call pos:start="105:13" pos:end="105:34"><name pos:start="105:13" pos:end="105:29">tcg_temp_free_i32</name><argument_list pos:start="105:30" pos:end="105:34">(<argument pos:start="105:31" pos:end="105:33"><expr pos:start="105:31" pos:end="105:33"><name pos:start="105:31" pos:end="105:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:37"><expr pos:start="107:13" pos:end="107:36"><call pos:start="107:13" pos:end="107:36"><name pos:start="107:13" pos:end="107:27">gen_store_fpr32</name><argument_list pos:start="107:28" pos:end="107:36">(<argument pos:start="107:29" pos:end="107:31"><expr pos:start="107:29" pos:end="107:31"><name pos:start="107:29" pos:end="107:31">fp0</name></expr></argument>, <argument pos:start="107:34" pos:end="107:35"><expr pos:start="107:34" pos:end="107:35"><name pos:start="107:34" pos:end="107:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:35"><expr pos:start="109:13" pos:end="109:34"><call pos:start="109:13" pos:end="109:34"><name pos:start="109:13" pos:end="109:29">tcg_temp_free_i32</name><argument_list pos:start="109:30" pos:end="109:34">(<argument pos:start="109:31" pos:end="109:33"><expr pos:start="109:31" pos:end="109:33"><name pos:start="109:31" pos:end="109:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="113:9" pos:end="113:22"><expr pos:start="113:9" pos:end="113:21"><name pos:start="113:9" pos:end="113:11">opn</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <literal type="string" pos:start="113:15" pos:end="113:21">"add.s"</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:23"><expr pos:start="115:9" pos:end="115:22"><name pos:start="115:9" pos:end="115:14">optype</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <name pos:start="115:18" pos:end="115:22">BINOP</name></expr>;</expr_stmt>

        <break pos:start="117:9" pos:end="117:14">break;</break>

    <case pos:start="119:5" pos:end="119:19">case <expr pos:start="119:10" pos:end="119:18"><name pos:start="119:10" pos:end="119:18">OPC_SUB_S</name></expr>:</case>

        <block pos:start="121:9" pos:end="141:9">{<block_content pos:start="123:13" pos:end="139:35">

            <decl_stmt pos:start="123:13" pos:end="123:46"><decl pos:start="123:13" pos:end="123:45"><type pos:start="123:13" pos:end="123:20"><name pos:start="123:13" pos:end="123:20">TCGv_i32</name></type> <name pos:start="123:22" pos:end="123:24">fp0</name> <init pos:start="123:26" pos:end="123:45">= <expr pos:start="123:28" pos:end="123:45"><call pos:start="123:28" pos:end="123:45"><name pos:start="123:28" pos:end="123:43">tcg_temp_new_i32</name><argument_list pos:start="123:44" pos:end="123:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="125:13" pos:end="125:46"><decl pos:start="125:13" pos:end="125:45"><type pos:start="125:13" pos:end="125:20"><name pos:start="125:13" pos:end="125:20">TCGv_i32</name></type> <name pos:start="125:22" pos:end="125:24">fp1</name> <init pos:start="125:26" pos:end="125:45">= <expr pos:start="125:28" pos:end="125:45"><call pos:start="125:28" pos:end="125:45"><name pos:start="125:28" pos:end="125:43">tcg_temp_new_i32</name><argument_list pos:start="125:44" pos:end="125:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="129:13" pos:end="129:36"><expr pos:start="129:13" pos:end="129:35"><call pos:start="129:13" pos:end="129:35"><name pos:start="129:13" pos:end="129:26">gen_load_fpr32</name><argument_list pos:start="129:27" pos:end="129:35">(<argument pos:start="129:28" pos:end="129:30"><expr pos:start="129:28" pos:end="129:30"><name pos:start="129:28" pos:end="129:30">fp0</name></expr></argument>, <argument pos:start="129:33" pos:end="129:34"><expr pos:start="129:33" pos:end="129:34"><name pos:start="129:33" pos:end="129:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:36"><expr pos:start="131:13" pos:end="131:35"><call pos:start="131:13" pos:end="131:35"><name pos:start="131:13" pos:end="131:26">gen_load_fpr32</name><argument_list pos:start="131:27" pos:end="131:35">(<argument pos:start="131:28" pos:end="131:30"><expr pos:start="131:28" pos:end="131:30"><name pos:start="131:28" pos:end="131:30">fp1</name></expr></argument>, <argument pos:start="131:33" pos:end="131:34"><expr pos:start="131:33" pos:end="131:34"><name pos:start="131:33" pos:end="131:34">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:59"><expr pos:start="133:13" pos:end="133:58"><call pos:start="133:13" pos:end="133:58"><name pos:start="133:13" pos:end="133:34">gen_helper_float_sub_s</name><argument_list pos:start="133:35" pos:end="133:58">(<argument pos:start="133:36" pos:end="133:38"><expr pos:start="133:36" pos:end="133:38"><name pos:start="133:36" pos:end="133:38">fp0</name></expr></argument>, <argument pos:start="133:41" pos:end="133:47"><expr pos:start="133:41" pos:end="133:47"><name pos:start="133:41" pos:end="133:47">cpu_env</name></expr></argument>, <argument pos:start="133:50" pos:end="133:52"><expr pos:start="133:50" pos:end="133:52"><name pos:start="133:50" pos:end="133:52">fp0</name></expr></argument>, <argument pos:start="133:55" pos:end="133:57"><expr pos:start="133:55" pos:end="133:57"><name pos:start="133:55" pos:end="133:57">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:35"><expr pos:start="135:13" pos:end="135:34"><call pos:start="135:13" pos:end="135:34"><name pos:start="135:13" pos:end="135:29">tcg_temp_free_i32</name><argument_list pos:start="135:30" pos:end="135:34">(<argument pos:start="135:31" pos:end="135:33"><expr pos:start="135:31" pos:end="135:33"><name pos:start="135:31" pos:end="135:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:37"><expr pos:start="137:13" pos:end="137:36"><call pos:start="137:13" pos:end="137:36"><name pos:start="137:13" pos:end="137:27">gen_store_fpr32</name><argument_list pos:start="137:28" pos:end="137:36">(<argument pos:start="137:29" pos:end="137:31"><expr pos:start="137:29" pos:end="137:31"><name pos:start="137:29" pos:end="137:31">fp0</name></expr></argument>, <argument pos:start="137:34" pos:end="137:35"><expr pos:start="137:34" pos:end="137:35"><name pos:start="137:34" pos:end="137:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:35"><expr pos:start="139:13" pos:end="139:34"><call pos:start="139:13" pos:end="139:34"><name pos:start="139:13" pos:end="139:29">tcg_temp_free_i32</name><argument_list pos:start="139:30" pos:end="139:34">(<argument pos:start="139:31" pos:end="139:33"><expr pos:start="139:31" pos:end="139:33"><name pos:start="139:31" pos:end="139:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="143:9" pos:end="143:22"><expr pos:start="143:9" pos:end="143:21"><name pos:start="143:9" pos:end="143:11">opn</name> <operator pos:start="143:13" pos:end="143:13">=</operator> <literal type="string" pos:start="143:15" pos:end="143:21">"sub.s"</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:23"><expr pos:start="145:9" pos:end="145:22"><name pos:start="145:9" pos:end="145:14">optype</name> <operator pos:start="145:16" pos:end="145:16">=</operator> <name pos:start="145:18" pos:end="145:22">BINOP</name></expr>;</expr_stmt>

        <break pos:start="147:9" pos:end="147:14">break;</break>

    <case pos:start="149:5" pos:end="149:19">case <expr pos:start="149:10" pos:end="149:18"><name pos:start="149:10" pos:end="149:18">OPC_MUL_S</name></expr>:</case>

        <block pos:start="151:9" pos:end="171:9">{<block_content pos:start="153:13" pos:end="169:35">

            <decl_stmt pos:start="153:13" pos:end="153:46"><decl pos:start="153:13" pos:end="153:45"><type pos:start="153:13" pos:end="153:20"><name pos:start="153:13" pos:end="153:20">TCGv_i32</name></type> <name pos:start="153:22" pos:end="153:24">fp0</name> <init pos:start="153:26" pos:end="153:45">= <expr pos:start="153:28" pos:end="153:45"><call pos:start="153:28" pos:end="153:45"><name pos:start="153:28" pos:end="153:43">tcg_temp_new_i32</name><argument_list pos:start="153:44" pos:end="153:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="155:13" pos:end="155:46"><decl pos:start="155:13" pos:end="155:45"><type pos:start="155:13" pos:end="155:20"><name pos:start="155:13" pos:end="155:20">TCGv_i32</name></type> <name pos:start="155:22" pos:end="155:24">fp1</name> <init pos:start="155:26" pos:end="155:45">= <expr pos:start="155:28" pos:end="155:45"><call pos:start="155:28" pos:end="155:45"><name pos:start="155:28" pos:end="155:43">tcg_temp_new_i32</name><argument_list pos:start="155:44" pos:end="155:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="159:13" pos:end="159:36"><expr pos:start="159:13" pos:end="159:35"><call pos:start="159:13" pos:end="159:35"><name pos:start="159:13" pos:end="159:26">gen_load_fpr32</name><argument_list pos:start="159:27" pos:end="159:35">(<argument pos:start="159:28" pos:end="159:30"><expr pos:start="159:28" pos:end="159:30"><name pos:start="159:28" pos:end="159:30">fp0</name></expr></argument>, <argument pos:start="159:33" pos:end="159:34"><expr pos:start="159:33" pos:end="159:34"><name pos:start="159:33" pos:end="159:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:36"><expr pos:start="161:13" pos:end="161:35"><call pos:start="161:13" pos:end="161:35"><name pos:start="161:13" pos:end="161:26">gen_load_fpr32</name><argument_list pos:start="161:27" pos:end="161:35">(<argument pos:start="161:28" pos:end="161:30"><expr pos:start="161:28" pos:end="161:30"><name pos:start="161:28" pos:end="161:30">fp1</name></expr></argument>, <argument pos:start="161:33" pos:end="161:34"><expr pos:start="161:33" pos:end="161:34"><name pos:start="161:33" pos:end="161:34">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:59"><expr pos:start="163:13" pos:end="163:58"><call pos:start="163:13" pos:end="163:58"><name pos:start="163:13" pos:end="163:34">gen_helper_float_mul_s</name><argument_list pos:start="163:35" pos:end="163:58">(<argument pos:start="163:36" pos:end="163:38"><expr pos:start="163:36" pos:end="163:38"><name pos:start="163:36" pos:end="163:38">fp0</name></expr></argument>, <argument pos:start="163:41" pos:end="163:47"><expr pos:start="163:41" pos:end="163:47"><name pos:start="163:41" pos:end="163:47">cpu_env</name></expr></argument>, <argument pos:start="163:50" pos:end="163:52"><expr pos:start="163:50" pos:end="163:52"><name pos:start="163:50" pos:end="163:52">fp0</name></expr></argument>, <argument pos:start="163:55" pos:end="163:57"><expr pos:start="163:55" pos:end="163:57"><name pos:start="163:55" pos:end="163:57">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:35"><expr pos:start="165:13" pos:end="165:34"><call pos:start="165:13" pos:end="165:34"><name pos:start="165:13" pos:end="165:29">tcg_temp_free_i32</name><argument_list pos:start="165:30" pos:end="165:34">(<argument pos:start="165:31" pos:end="165:33"><expr pos:start="165:31" pos:end="165:33"><name pos:start="165:31" pos:end="165:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:37"><expr pos:start="167:13" pos:end="167:36"><call pos:start="167:13" pos:end="167:36"><name pos:start="167:13" pos:end="167:27">gen_store_fpr32</name><argument_list pos:start="167:28" pos:end="167:36">(<argument pos:start="167:29" pos:end="167:31"><expr pos:start="167:29" pos:end="167:31"><name pos:start="167:29" pos:end="167:31">fp0</name></expr></argument>, <argument pos:start="167:34" pos:end="167:35"><expr pos:start="167:34" pos:end="167:35"><name pos:start="167:34" pos:end="167:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:35"><expr pos:start="169:13" pos:end="169:34"><call pos:start="169:13" pos:end="169:34"><name pos:start="169:13" pos:end="169:29">tcg_temp_free_i32</name><argument_list pos:start="169:30" pos:end="169:34">(<argument pos:start="169:31" pos:end="169:33"><expr pos:start="169:31" pos:end="169:33"><name pos:start="169:31" pos:end="169:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="173:9" pos:end="173:22"><expr pos:start="173:9" pos:end="173:21"><name pos:start="173:9" pos:end="173:11">opn</name> <operator pos:start="173:13" pos:end="173:13">=</operator> <literal type="string" pos:start="173:15" pos:end="173:21">"mul.s"</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:23"><expr pos:start="175:9" pos:end="175:22"><name pos:start="175:9" pos:end="175:14">optype</name> <operator pos:start="175:16" pos:end="175:16">=</operator> <name pos:start="175:18" pos:end="175:22">BINOP</name></expr>;</expr_stmt>

        <break pos:start="177:9" pos:end="177:14">break;</break>

    <case pos:start="179:5" pos:end="179:19">case <expr pos:start="179:10" pos:end="179:18"><name pos:start="179:10" pos:end="179:18">OPC_DIV_S</name></expr>:</case>

        <block pos:start="181:9" pos:end="201:9">{<block_content pos:start="183:13" pos:end="199:35">

            <decl_stmt pos:start="183:13" pos:end="183:46"><decl pos:start="183:13" pos:end="183:45"><type pos:start="183:13" pos:end="183:20"><name pos:start="183:13" pos:end="183:20">TCGv_i32</name></type> <name pos:start="183:22" pos:end="183:24">fp0</name> <init pos:start="183:26" pos:end="183:45">= <expr pos:start="183:28" pos:end="183:45"><call pos:start="183:28" pos:end="183:45"><name pos:start="183:28" pos:end="183:43">tcg_temp_new_i32</name><argument_list pos:start="183:44" pos:end="183:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="185:13" pos:end="185:46"><decl pos:start="185:13" pos:end="185:45"><type pos:start="185:13" pos:end="185:20"><name pos:start="185:13" pos:end="185:20">TCGv_i32</name></type> <name pos:start="185:22" pos:end="185:24">fp1</name> <init pos:start="185:26" pos:end="185:45">= <expr pos:start="185:28" pos:end="185:45"><call pos:start="185:28" pos:end="185:45"><name pos:start="185:28" pos:end="185:43">tcg_temp_new_i32</name><argument_list pos:start="185:44" pos:end="185:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="189:13" pos:end="189:36"><expr pos:start="189:13" pos:end="189:35"><call pos:start="189:13" pos:end="189:35"><name pos:start="189:13" pos:end="189:26">gen_load_fpr32</name><argument_list pos:start="189:27" pos:end="189:35">(<argument pos:start="189:28" pos:end="189:30"><expr pos:start="189:28" pos:end="189:30"><name pos:start="189:28" pos:end="189:30">fp0</name></expr></argument>, <argument pos:start="189:33" pos:end="189:34"><expr pos:start="189:33" pos:end="189:34"><name pos:start="189:33" pos:end="189:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:36"><expr pos:start="191:13" pos:end="191:35"><call pos:start="191:13" pos:end="191:35"><name pos:start="191:13" pos:end="191:26">gen_load_fpr32</name><argument_list pos:start="191:27" pos:end="191:35">(<argument pos:start="191:28" pos:end="191:30"><expr pos:start="191:28" pos:end="191:30"><name pos:start="191:28" pos:end="191:30">fp1</name></expr></argument>, <argument pos:start="191:33" pos:end="191:34"><expr pos:start="191:33" pos:end="191:34"><name pos:start="191:33" pos:end="191:34">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:59"><expr pos:start="193:13" pos:end="193:58"><call pos:start="193:13" pos:end="193:58"><name pos:start="193:13" pos:end="193:34">gen_helper_float_div_s</name><argument_list pos:start="193:35" pos:end="193:58">(<argument pos:start="193:36" pos:end="193:38"><expr pos:start="193:36" pos:end="193:38"><name pos:start="193:36" pos:end="193:38">fp0</name></expr></argument>, <argument pos:start="193:41" pos:end="193:47"><expr pos:start="193:41" pos:end="193:47"><name pos:start="193:41" pos:end="193:47">cpu_env</name></expr></argument>, <argument pos:start="193:50" pos:end="193:52"><expr pos:start="193:50" pos:end="193:52"><name pos:start="193:50" pos:end="193:52">fp0</name></expr></argument>, <argument pos:start="193:55" pos:end="193:57"><expr pos:start="193:55" pos:end="193:57"><name pos:start="193:55" pos:end="193:57">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:35"><expr pos:start="195:13" pos:end="195:34"><call pos:start="195:13" pos:end="195:34"><name pos:start="195:13" pos:end="195:29">tcg_temp_free_i32</name><argument_list pos:start="195:30" pos:end="195:34">(<argument pos:start="195:31" pos:end="195:33"><expr pos:start="195:31" pos:end="195:33"><name pos:start="195:31" pos:end="195:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:37"><expr pos:start="197:13" pos:end="197:36"><call pos:start="197:13" pos:end="197:36"><name pos:start="197:13" pos:end="197:27">gen_store_fpr32</name><argument_list pos:start="197:28" pos:end="197:36">(<argument pos:start="197:29" pos:end="197:31"><expr pos:start="197:29" pos:end="197:31"><name pos:start="197:29" pos:end="197:31">fp0</name></expr></argument>, <argument pos:start="197:34" pos:end="197:35"><expr pos:start="197:34" pos:end="197:35"><name pos:start="197:34" pos:end="197:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:35"><expr pos:start="199:13" pos:end="199:34"><call pos:start="199:13" pos:end="199:34"><name pos:start="199:13" pos:end="199:29">tcg_temp_free_i32</name><argument_list pos:start="199:30" pos:end="199:34">(<argument pos:start="199:31" pos:end="199:33"><expr pos:start="199:31" pos:end="199:33"><name pos:start="199:31" pos:end="199:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="203:9" pos:end="203:22"><expr pos:start="203:9" pos:end="203:21"><name pos:start="203:9" pos:end="203:11">opn</name> <operator pos:start="203:13" pos:end="203:13">=</operator> <literal type="string" pos:start="203:15" pos:end="203:21">"div.s"</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:23"><expr pos:start="205:9" pos:end="205:22"><name pos:start="205:9" pos:end="205:14">optype</name> <operator pos:start="205:16" pos:end="205:16">=</operator> <name pos:start="205:18" pos:end="205:22">BINOP</name></expr>;</expr_stmt>

        <break pos:start="207:9" pos:end="207:14">break;</break>

    <case pos:start="209:5" pos:end="209:20">case <expr pos:start="209:10" pos:end="209:19"><name pos:start="209:10" pos:end="209:19">OPC_SQRT_S</name></expr>:</case>

        <block pos:start="211:9" pos:end="225:9">{<block_content pos:start="213:13" pos:end="223:35">

            <decl_stmt pos:start="213:13" pos:end="213:46"><decl pos:start="213:13" pos:end="213:45"><type pos:start="213:13" pos:end="213:20"><name pos:start="213:13" pos:end="213:20">TCGv_i32</name></type> <name pos:start="213:22" pos:end="213:24">fp0</name> <init pos:start="213:26" pos:end="213:45">= <expr pos:start="213:28" pos:end="213:45"><call pos:start="213:28" pos:end="213:45"><name pos:start="213:28" pos:end="213:43">tcg_temp_new_i32</name><argument_list pos:start="213:44" pos:end="213:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="217:13" pos:end="217:36"><expr pos:start="217:13" pos:end="217:35"><call pos:start="217:13" pos:end="217:35"><name pos:start="217:13" pos:end="217:26">gen_load_fpr32</name><argument_list pos:start="217:27" pos:end="217:35">(<argument pos:start="217:28" pos:end="217:30"><expr pos:start="217:28" pos:end="217:30"><name pos:start="217:28" pos:end="217:30">fp0</name></expr></argument>, <argument pos:start="217:33" pos:end="217:34"><expr pos:start="217:33" pos:end="217:34"><name pos:start="217:33" pos:end="217:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:55"><expr pos:start="219:13" pos:end="219:54"><call pos:start="219:13" pos:end="219:54"><name pos:start="219:13" pos:end="219:35">gen_helper_float_sqrt_s</name><argument_list pos:start="219:36" pos:end="219:54">(<argument pos:start="219:37" pos:end="219:39"><expr pos:start="219:37" pos:end="219:39"><name pos:start="219:37" pos:end="219:39">fp0</name></expr></argument>, <argument pos:start="219:42" pos:end="219:48"><expr pos:start="219:42" pos:end="219:48"><name pos:start="219:42" pos:end="219:48">cpu_env</name></expr></argument>, <argument pos:start="219:51" pos:end="219:53"><expr pos:start="219:51" pos:end="219:53"><name pos:start="219:51" pos:end="219:53">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:37"><expr pos:start="221:13" pos:end="221:36"><call pos:start="221:13" pos:end="221:36"><name pos:start="221:13" pos:end="221:27">gen_store_fpr32</name><argument_list pos:start="221:28" pos:end="221:36">(<argument pos:start="221:29" pos:end="221:31"><expr pos:start="221:29" pos:end="221:31"><name pos:start="221:29" pos:end="221:31">fp0</name></expr></argument>, <argument pos:start="221:34" pos:end="221:35"><expr pos:start="221:34" pos:end="221:35"><name pos:start="221:34" pos:end="221:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:35"><expr pos:start="223:13" pos:end="223:34"><call pos:start="223:13" pos:end="223:34"><name pos:start="223:13" pos:end="223:29">tcg_temp_free_i32</name><argument_list pos:start="223:30" pos:end="223:34">(<argument pos:start="223:31" pos:end="223:33"><expr pos:start="223:31" pos:end="223:33"><name pos:start="223:31" pos:end="223:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="227:9" pos:end="227:23"><expr pos:start="227:9" pos:end="227:22"><name pos:start="227:9" pos:end="227:11">opn</name> <operator pos:start="227:13" pos:end="227:13">=</operator> <literal type="string" pos:start="227:15" pos:end="227:22">"sqrt.s"</literal></expr>;</expr_stmt>

        <break pos:start="229:9" pos:end="229:14">break;</break>

    <case pos:start="231:5" pos:end="231:19">case <expr pos:start="231:10" pos:end="231:18"><name pos:start="231:10" pos:end="231:18">OPC_ABS_S</name></expr>:</case>

        <block pos:start="233:9" pos:end="247:9">{<block_content pos:start="235:13" pos:end="245:35">

            <decl_stmt pos:start="235:13" pos:end="235:46"><decl pos:start="235:13" pos:end="235:45"><type pos:start="235:13" pos:end="235:20"><name pos:start="235:13" pos:end="235:20">TCGv_i32</name></type> <name pos:start="235:22" pos:end="235:24">fp0</name> <init pos:start="235:26" pos:end="235:45">= <expr pos:start="235:28" pos:end="235:45"><call pos:start="235:28" pos:end="235:45"><name pos:start="235:28" pos:end="235:43">tcg_temp_new_i32</name><argument_list pos:start="235:44" pos:end="235:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="239:13" pos:end="239:36"><expr pos:start="239:13" pos:end="239:35"><call pos:start="239:13" pos:end="239:35"><name pos:start="239:13" pos:end="239:26">gen_load_fpr32</name><argument_list pos:start="239:27" pos:end="239:35">(<argument pos:start="239:28" pos:end="239:30"><expr pos:start="239:28" pos:end="239:30"><name pos:start="239:28" pos:end="239:30">fp0</name></expr></argument>, <argument pos:start="239:33" pos:end="239:34"><expr pos:start="239:33" pos:end="239:34"><name pos:start="239:33" pos:end="239:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:45"><expr pos:start="241:13" pos:end="241:44"><call pos:start="241:13" pos:end="241:44"><name pos:start="241:13" pos:end="241:34">gen_helper_float_abs_s</name><argument_list pos:start="241:35" pos:end="241:44">(<argument pos:start="241:36" pos:end="241:38"><expr pos:start="241:36" pos:end="241:38"><name pos:start="241:36" pos:end="241:38">fp0</name></expr></argument>, <argument pos:start="241:41" pos:end="241:43"><expr pos:start="241:41" pos:end="241:43"><name pos:start="241:41" pos:end="241:43">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:37"><expr pos:start="243:13" pos:end="243:36"><call pos:start="243:13" pos:end="243:36"><name pos:start="243:13" pos:end="243:27">gen_store_fpr32</name><argument_list pos:start="243:28" pos:end="243:36">(<argument pos:start="243:29" pos:end="243:31"><expr pos:start="243:29" pos:end="243:31"><name pos:start="243:29" pos:end="243:31">fp0</name></expr></argument>, <argument pos:start="243:34" pos:end="243:35"><expr pos:start="243:34" pos:end="243:35"><name pos:start="243:34" pos:end="243:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:35"><expr pos:start="245:13" pos:end="245:34"><call pos:start="245:13" pos:end="245:34"><name pos:start="245:13" pos:end="245:29">tcg_temp_free_i32</name><argument_list pos:start="245:30" pos:end="245:34">(<argument pos:start="245:31" pos:end="245:33"><expr pos:start="245:31" pos:end="245:33"><name pos:start="245:31" pos:end="245:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="249:9" pos:end="249:22"><expr pos:start="249:9" pos:end="249:21"><name pos:start="249:9" pos:end="249:11">opn</name> <operator pos:start="249:13" pos:end="249:13">=</operator> <literal type="string" pos:start="249:15" pos:end="249:21">"abs.s"</literal></expr>;</expr_stmt>

        <break pos:start="251:9" pos:end="251:14">break;</break>

    <case pos:start="253:5" pos:end="253:19">case <expr pos:start="253:10" pos:end="253:18"><name pos:start="253:10" pos:end="253:18">OPC_MOV_S</name></expr>:</case>

        <block pos:start="255:9" pos:end="267:9">{<block_content pos:start="257:13" pos:end="265:35">

            <decl_stmt pos:start="257:13" pos:end="257:46"><decl pos:start="257:13" pos:end="257:45"><type pos:start="257:13" pos:end="257:20"><name pos:start="257:13" pos:end="257:20">TCGv_i32</name></type> <name pos:start="257:22" pos:end="257:24">fp0</name> <init pos:start="257:26" pos:end="257:45">= <expr pos:start="257:28" pos:end="257:45"><call pos:start="257:28" pos:end="257:45"><name pos:start="257:28" pos:end="257:43">tcg_temp_new_i32</name><argument_list pos:start="257:44" pos:end="257:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="261:13" pos:end="261:36"><expr pos:start="261:13" pos:end="261:35"><call pos:start="261:13" pos:end="261:35"><name pos:start="261:13" pos:end="261:26">gen_load_fpr32</name><argument_list pos:start="261:27" pos:end="261:35">(<argument pos:start="261:28" pos:end="261:30"><expr pos:start="261:28" pos:end="261:30"><name pos:start="261:28" pos:end="261:30">fp0</name></expr></argument>, <argument pos:start="261:33" pos:end="261:34"><expr pos:start="261:33" pos:end="261:34"><name pos:start="261:33" pos:end="261:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:37"><expr pos:start="263:13" pos:end="263:36"><call pos:start="263:13" pos:end="263:36"><name pos:start="263:13" pos:end="263:27">gen_store_fpr32</name><argument_list pos:start="263:28" pos:end="263:36">(<argument pos:start="263:29" pos:end="263:31"><expr pos:start="263:29" pos:end="263:31"><name pos:start="263:29" pos:end="263:31">fp0</name></expr></argument>, <argument pos:start="263:34" pos:end="263:35"><expr pos:start="263:34" pos:end="263:35"><name pos:start="263:34" pos:end="263:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:35"><expr pos:start="265:13" pos:end="265:34"><call pos:start="265:13" pos:end="265:34"><name pos:start="265:13" pos:end="265:29">tcg_temp_free_i32</name><argument_list pos:start="265:30" pos:end="265:34">(<argument pos:start="265:31" pos:end="265:33"><expr pos:start="265:31" pos:end="265:33"><name pos:start="265:31" pos:end="265:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="269:9" pos:end="269:22"><expr pos:start="269:9" pos:end="269:21"><name pos:start="269:9" pos:end="269:11">opn</name> <operator pos:start="269:13" pos:end="269:13">=</operator> <literal type="string" pos:start="269:15" pos:end="269:21">"mov.s"</literal></expr>;</expr_stmt>

        <break pos:start="271:9" pos:end="271:14">break;</break>

    <case pos:start="273:5" pos:end="273:19">case <expr pos:start="273:10" pos:end="273:18"><name pos:start="273:10" pos:end="273:18">OPC_NEG_S</name></expr>:</case>

        <block pos:start="275:9" pos:end="289:9">{<block_content pos:start="277:13" pos:end="287:35">

            <decl_stmt pos:start="277:13" pos:end="277:46"><decl pos:start="277:13" pos:end="277:45"><type pos:start="277:13" pos:end="277:20"><name pos:start="277:13" pos:end="277:20">TCGv_i32</name></type> <name pos:start="277:22" pos:end="277:24">fp0</name> <init pos:start="277:26" pos:end="277:45">= <expr pos:start="277:28" pos:end="277:45"><call pos:start="277:28" pos:end="277:45"><name pos:start="277:28" pos:end="277:43">tcg_temp_new_i32</name><argument_list pos:start="277:44" pos:end="277:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="281:13" pos:end="281:36"><expr pos:start="281:13" pos:end="281:35"><call pos:start="281:13" pos:end="281:35"><name pos:start="281:13" pos:end="281:26">gen_load_fpr32</name><argument_list pos:start="281:27" pos:end="281:35">(<argument pos:start="281:28" pos:end="281:30"><expr pos:start="281:28" pos:end="281:30"><name pos:start="281:28" pos:end="281:30">fp0</name></expr></argument>, <argument pos:start="281:33" pos:end="281:34"><expr pos:start="281:33" pos:end="281:34"><name pos:start="281:33" pos:end="281:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="283:13" pos:end="283:45"><expr pos:start="283:13" pos:end="283:44"><call pos:start="283:13" pos:end="283:44"><name pos:start="283:13" pos:end="283:34">gen_helper_float_chs_s</name><argument_list pos:start="283:35" pos:end="283:44">(<argument pos:start="283:36" pos:end="283:38"><expr pos:start="283:36" pos:end="283:38"><name pos:start="283:36" pos:end="283:38">fp0</name></expr></argument>, <argument pos:start="283:41" pos:end="283:43"><expr pos:start="283:41" pos:end="283:43"><name pos:start="283:41" pos:end="283:43">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="285:13" pos:end="285:37"><expr pos:start="285:13" pos:end="285:36"><call pos:start="285:13" pos:end="285:36"><name pos:start="285:13" pos:end="285:27">gen_store_fpr32</name><argument_list pos:start="285:28" pos:end="285:36">(<argument pos:start="285:29" pos:end="285:31"><expr pos:start="285:29" pos:end="285:31"><name pos:start="285:29" pos:end="285:31">fp0</name></expr></argument>, <argument pos:start="285:34" pos:end="285:35"><expr pos:start="285:34" pos:end="285:35"><name pos:start="285:34" pos:end="285:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:35"><expr pos:start="287:13" pos:end="287:34"><call pos:start="287:13" pos:end="287:34"><name pos:start="287:13" pos:end="287:29">tcg_temp_free_i32</name><argument_list pos:start="287:30" pos:end="287:34">(<argument pos:start="287:31" pos:end="287:33"><expr pos:start="287:31" pos:end="287:33"><name pos:start="287:31" pos:end="287:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="291:9" pos:end="291:22"><expr pos:start="291:9" pos:end="291:21"><name pos:start="291:9" pos:end="291:11">opn</name> <operator pos:start="291:13" pos:end="291:13">=</operator> <literal type="string" pos:start="291:15" pos:end="291:21">"neg.s"</literal></expr>;</expr_stmt>

        <break pos:start="293:9" pos:end="293:14">break;</break>

    <case pos:start="295:5" pos:end="295:23">case <expr pos:start="295:10" pos:end="295:22"><name pos:start="295:10" pos:end="295:22">OPC_ROUND_L_S</name></expr>:</case>

        <expr_stmt pos:start="297:9" pos:end="297:33"><expr pos:start="297:9" pos:end="297:32"><call pos:start="297:9" pos:end="297:32"><name pos:start="297:9" pos:end="297:27">check_cp1_64bitmode</name><argument_list pos:start="297:28" pos:end="297:32">(<argument pos:start="297:29" pos:end="297:31"><expr pos:start="297:29" pos:end="297:31"><name pos:start="297:29" pos:end="297:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="299:9" pos:end="317:9">{<block_content pos:start="301:13" pos:end="315:36">

            <decl_stmt pos:start="301:13" pos:end="301:47"><decl pos:start="301:13" pos:end="301:46"><type pos:start="301:13" pos:end="301:20"><name pos:start="301:13" pos:end="301:20">TCGv_i32</name></type> <name pos:start="301:22" pos:end="301:25">fp32</name> <init pos:start="301:27" pos:end="301:46">= <expr pos:start="301:29" pos:end="301:46"><call pos:start="301:29" pos:end="301:46"><name pos:start="301:29" pos:end="301:44">tcg_temp_new_i32</name><argument_list pos:start="301:45" pos:end="301:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="303:13" pos:end="303:47"><decl pos:start="303:13" pos:end="303:46"><type pos:start="303:13" pos:end="303:20"><name pos:start="303:13" pos:end="303:20">TCGv_i64</name></type> <name pos:start="303:22" pos:end="303:25">fp64</name> <init pos:start="303:27" pos:end="303:46">= <expr pos:start="303:29" pos:end="303:46"><call pos:start="303:29" pos:end="303:46"><name pos:start="303:29" pos:end="303:44">tcg_temp_new_i64</name><argument_list pos:start="303:45" pos:end="303:46">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="307:13" pos:end="307:37"><expr pos:start="307:13" pos:end="307:36"><call pos:start="307:13" pos:end="307:36"><name pos:start="307:13" pos:end="307:26">gen_load_fpr32</name><argument_list pos:start="307:27" pos:end="307:36">(<argument pos:start="307:28" pos:end="307:31"><expr pos:start="307:28" pos:end="307:31"><name pos:start="307:28" pos:end="307:31">fp32</name></expr></argument>, <argument pos:start="307:34" pos:end="307:35"><expr pos:start="307:34" pos:end="307:35"><name pos:start="307:34" pos:end="307:35">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:59"><expr pos:start="309:13" pos:end="309:58"><call pos:start="309:13" pos:end="309:58"><name pos:start="309:13" pos:end="309:37">gen_helper_float_roundl_s</name><argument_list pos:start="309:38" pos:end="309:58">(<argument pos:start="309:39" pos:end="309:42"><expr pos:start="309:39" pos:end="309:42"><name pos:start="309:39" pos:end="309:42">fp64</name></expr></argument>, <argument pos:start="309:45" pos:end="309:51"><expr pos:start="309:45" pos:end="309:51"><name pos:start="309:45" pos:end="309:51">cpu_env</name></expr></argument>, <argument pos:start="309:54" pos:end="309:57"><expr pos:start="309:54" pos:end="309:57"><name pos:start="309:54" pos:end="309:57">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="311:13" pos:end="311:36"><expr pos:start="311:13" pos:end="311:35"><call pos:start="311:13" pos:end="311:35"><name pos:start="311:13" pos:end="311:29">tcg_temp_free_i32</name><argument_list pos:start="311:30" pos:end="311:35">(<argument pos:start="311:31" pos:end="311:34"><expr pos:start="311:31" pos:end="311:34"><name pos:start="311:31" pos:end="311:34">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="313:13" pos:end="313:43"><expr pos:start="313:13" pos:end="313:42"><call pos:start="313:13" pos:end="313:42"><name pos:start="313:13" pos:end="313:27">gen_store_fpr64</name><argument_list pos:start="313:28" pos:end="313:42">(<argument pos:start="313:29" pos:end="313:31"><expr pos:start="313:29" pos:end="313:31"><name pos:start="313:29" pos:end="313:31">ctx</name></expr></argument>, <argument pos:start="313:34" pos:end="313:37"><expr pos:start="313:34" pos:end="313:37"><name pos:start="313:34" pos:end="313:37">fp64</name></expr></argument>, <argument pos:start="313:40" pos:end="313:41"><expr pos:start="313:40" pos:end="313:41"><name pos:start="313:40" pos:end="313:41">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:36"><expr pos:start="315:13" pos:end="315:35"><call pos:start="315:13" pos:end="315:35"><name pos:start="315:13" pos:end="315:29">tcg_temp_free_i64</name><argument_list pos:start="315:30" pos:end="315:35">(<argument pos:start="315:31" pos:end="315:34"><expr pos:start="315:31" pos:end="315:34"><name pos:start="315:31" pos:end="315:34">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="319:9" pos:end="319:26"><expr pos:start="319:9" pos:end="319:25"><name pos:start="319:9" pos:end="319:11">opn</name> <operator pos:start="319:13" pos:end="319:13">=</operator> <literal type="string" pos:start="319:15" pos:end="319:25">"round.l.s"</literal></expr>;</expr_stmt>

        <break pos:start="321:9" pos:end="321:14">break;</break>

    <case pos:start="323:5" pos:end="323:23">case <expr pos:start="323:10" pos:end="323:22"><name pos:start="323:10" pos:end="323:22">OPC_TRUNC_L_S</name></expr>:</case>

        <expr_stmt pos:start="325:9" pos:end="325:33"><expr pos:start="325:9" pos:end="325:32"><call pos:start="325:9" pos:end="325:32"><name pos:start="325:9" pos:end="325:27">check_cp1_64bitmode</name><argument_list pos:start="325:28" pos:end="325:32">(<argument pos:start="325:29" pos:end="325:31"><expr pos:start="325:29" pos:end="325:31"><name pos:start="325:29" pos:end="325:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="327:9" pos:end="345:9">{<block_content pos:start="329:13" pos:end="343:36">

            <decl_stmt pos:start="329:13" pos:end="329:47"><decl pos:start="329:13" pos:end="329:46"><type pos:start="329:13" pos:end="329:20"><name pos:start="329:13" pos:end="329:20">TCGv_i32</name></type> <name pos:start="329:22" pos:end="329:25">fp32</name> <init pos:start="329:27" pos:end="329:46">= <expr pos:start="329:29" pos:end="329:46"><call pos:start="329:29" pos:end="329:46"><name pos:start="329:29" pos:end="329:44">tcg_temp_new_i32</name><argument_list pos:start="329:45" pos:end="329:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="331:13" pos:end="331:47"><decl pos:start="331:13" pos:end="331:46"><type pos:start="331:13" pos:end="331:20"><name pos:start="331:13" pos:end="331:20">TCGv_i64</name></type> <name pos:start="331:22" pos:end="331:25">fp64</name> <init pos:start="331:27" pos:end="331:46">= <expr pos:start="331:29" pos:end="331:46"><call pos:start="331:29" pos:end="331:46"><name pos:start="331:29" pos:end="331:44">tcg_temp_new_i64</name><argument_list pos:start="331:45" pos:end="331:46">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="335:13" pos:end="335:37"><expr pos:start="335:13" pos:end="335:36"><call pos:start="335:13" pos:end="335:36"><name pos:start="335:13" pos:end="335:26">gen_load_fpr32</name><argument_list pos:start="335:27" pos:end="335:36">(<argument pos:start="335:28" pos:end="335:31"><expr pos:start="335:28" pos:end="335:31"><name pos:start="335:28" pos:end="335:31">fp32</name></expr></argument>, <argument pos:start="335:34" pos:end="335:35"><expr pos:start="335:34" pos:end="335:35"><name pos:start="335:34" pos:end="335:35">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:59"><expr pos:start="337:13" pos:end="337:58"><call pos:start="337:13" pos:end="337:58"><name pos:start="337:13" pos:end="337:37">gen_helper_float_truncl_s</name><argument_list pos:start="337:38" pos:end="337:58">(<argument pos:start="337:39" pos:end="337:42"><expr pos:start="337:39" pos:end="337:42"><name pos:start="337:39" pos:end="337:42">fp64</name></expr></argument>, <argument pos:start="337:45" pos:end="337:51"><expr pos:start="337:45" pos:end="337:51"><name pos:start="337:45" pos:end="337:51">cpu_env</name></expr></argument>, <argument pos:start="337:54" pos:end="337:57"><expr pos:start="337:54" pos:end="337:57"><name pos:start="337:54" pos:end="337:57">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:36"><expr pos:start="339:13" pos:end="339:35"><call pos:start="339:13" pos:end="339:35"><name pos:start="339:13" pos:end="339:29">tcg_temp_free_i32</name><argument_list pos:start="339:30" pos:end="339:35">(<argument pos:start="339:31" pos:end="339:34"><expr pos:start="339:31" pos:end="339:34"><name pos:start="339:31" pos:end="339:34">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="341:13" pos:end="341:43"><expr pos:start="341:13" pos:end="341:42"><call pos:start="341:13" pos:end="341:42"><name pos:start="341:13" pos:end="341:27">gen_store_fpr64</name><argument_list pos:start="341:28" pos:end="341:42">(<argument pos:start="341:29" pos:end="341:31"><expr pos:start="341:29" pos:end="341:31"><name pos:start="341:29" pos:end="341:31">ctx</name></expr></argument>, <argument pos:start="341:34" pos:end="341:37"><expr pos:start="341:34" pos:end="341:37"><name pos:start="341:34" pos:end="341:37">fp64</name></expr></argument>, <argument pos:start="341:40" pos:end="341:41"><expr pos:start="341:40" pos:end="341:41"><name pos:start="341:40" pos:end="341:41">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="343:13" pos:end="343:36"><expr pos:start="343:13" pos:end="343:35"><call pos:start="343:13" pos:end="343:35"><name pos:start="343:13" pos:end="343:29">tcg_temp_free_i64</name><argument_list pos:start="343:30" pos:end="343:35">(<argument pos:start="343:31" pos:end="343:34"><expr pos:start="343:31" pos:end="343:34"><name pos:start="343:31" pos:end="343:34">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="347:9" pos:end="347:26"><expr pos:start="347:9" pos:end="347:25"><name pos:start="347:9" pos:end="347:11">opn</name> <operator pos:start="347:13" pos:end="347:13">=</operator> <literal type="string" pos:start="347:15" pos:end="347:25">"trunc.l.s"</literal></expr>;</expr_stmt>

        <break pos:start="349:9" pos:end="349:14">break;</break>

    <case pos:start="351:5" pos:end="351:22">case <expr pos:start="351:10" pos:end="351:21"><name pos:start="351:10" pos:end="351:21">OPC_CEIL_L_S</name></expr>:</case>

        <expr_stmt pos:start="353:9" pos:end="353:33"><expr pos:start="353:9" pos:end="353:32"><call pos:start="353:9" pos:end="353:32"><name pos:start="353:9" pos:end="353:27">check_cp1_64bitmode</name><argument_list pos:start="353:28" pos:end="353:32">(<argument pos:start="353:29" pos:end="353:31"><expr pos:start="353:29" pos:end="353:31"><name pos:start="353:29" pos:end="353:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="355:9" pos:end="373:9">{<block_content pos:start="357:13" pos:end="371:36">

            <decl_stmt pos:start="357:13" pos:end="357:47"><decl pos:start="357:13" pos:end="357:46"><type pos:start="357:13" pos:end="357:20"><name pos:start="357:13" pos:end="357:20">TCGv_i32</name></type> <name pos:start="357:22" pos:end="357:25">fp32</name> <init pos:start="357:27" pos:end="357:46">= <expr pos:start="357:29" pos:end="357:46"><call pos:start="357:29" pos:end="357:46"><name pos:start="357:29" pos:end="357:44">tcg_temp_new_i32</name><argument_list pos:start="357:45" pos:end="357:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="359:13" pos:end="359:47"><decl pos:start="359:13" pos:end="359:46"><type pos:start="359:13" pos:end="359:20"><name pos:start="359:13" pos:end="359:20">TCGv_i64</name></type> <name pos:start="359:22" pos:end="359:25">fp64</name> <init pos:start="359:27" pos:end="359:46">= <expr pos:start="359:29" pos:end="359:46"><call pos:start="359:29" pos:end="359:46"><name pos:start="359:29" pos:end="359:44">tcg_temp_new_i64</name><argument_list pos:start="359:45" pos:end="359:46">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="363:13" pos:end="363:37"><expr pos:start="363:13" pos:end="363:36"><call pos:start="363:13" pos:end="363:36"><name pos:start="363:13" pos:end="363:26">gen_load_fpr32</name><argument_list pos:start="363:27" pos:end="363:36">(<argument pos:start="363:28" pos:end="363:31"><expr pos:start="363:28" pos:end="363:31"><name pos:start="363:28" pos:end="363:31">fp32</name></expr></argument>, <argument pos:start="363:34" pos:end="363:35"><expr pos:start="363:34" pos:end="363:35"><name pos:start="363:34" pos:end="363:35">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="365:13" pos:end="365:58"><expr pos:start="365:13" pos:end="365:57"><call pos:start="365:13" pos:end="365:57"><name pos:start="365:13" pos:end="365:36">gen_helper_float_ceill_s</name><argument_list pos:start="365:37" pos:end="365:57">(<argument pos:start="365:38" pos:end="365:41"><expr pos:start="365:38" pos:end="365:41"><name pos:start="365:38" pos:end="365:41">fp64</name></expr></argument>, <argument pos:start="365:44" pos:end="365:50"><expr pos:start="365:44" pos:end="365:50"><name pos:start="365:44" pos:end="365:50">cpu_env</name></expr></argument>, <argument pos:start="365:53" pos:end="365:56"><expr pos:start="365:53" pos:end="365:56"><name pos:start="365:53" pos:end="365:56">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="367:13" pos:end="367:36"><expr pos:start="367:13" pos:end="367:35"><call pos:start="367:13" pos:end="367:35"><name pos:start="367:13" pos:end="367:29">tcg_temp_free_i32</name><argument_list pos:start="367:30" pos:end="367:35">(<argument pos:start="367:31" pos:end="367:34"><expr pos:start="367:31" pos:end="367:34"><name pos:start="367:31" pos:end="367:34">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:43"><expr pos:start="369:13" pos:end="369:42"><call pos:start="369:13" pos:end="369:42"><name pos:start="369:13" pos:end="369:27">gen_store_fpr64</name><argument_list pos:start="369:28" pos:end="369:42">(<argument pos:start="369:29" pos:end="369:31"><expr pos:start="369:29" pos:end="369:31"><name pos:start="369:29" pos:end="369:31">ctx</name></expr></argument>, <argument pos:start="369:34" pos:end="369:37"><expr pos:start="369:34" pos:end="369:37"><name pos:start="369:34" pos:end="369:37">fp64</name></expr></argument>, <argument pos:start="369:40" pos:end="369:41"><expr pos:start="369:40" pos:end="369:41"><name pos:start="369:40" pos:end="369:41">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="371:13" pos:end="371:36"><expr pos:start="371:13" pos:end="371:35"><call pos:start="371:13" pos:end="371:35"><name pos:start="371:13" pos:end="371:29">tcg_temp_free_i64</name><argument_list pos:start="371:30" pos:end="371:35">(<argument pos:start="371:31" pos:end="371:34"><expr pos:start="371:31" pos:end="371:34"><name pos:start="371:31" pos:end="371:34">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="375:9" pos:end="375:25"><expr pos:start="375:9" pos:end="375:24"><name pos:start="375:9" pos:end="375:11">opn</name> <operator pos:start="375:13" pos:end="375:13">=</operator> <literal type="string" pos:start="375:15" pos:end="375:24">"ceil.l.s"</literal></expr>;</expr_stmt>

        <break pos:start="377:9" pos:end="377:14">break;</break>

    <case pos:start="379:5" pos:end="379:23">case <expr pos:start="379:10" pos:end="379:22"><name pos:start="379:10" pos:end="379:22">OPC_FLOOR_L_S</name></expr>:</case>

        <expr_stmt pos:start="381:9" pos:end="381:33"><expr pos:start="381:9" pos:end="381:32"><call pos:start="381:9" pos:end="381:32"><name pos:start="381:9" pos:end="381:27">check_cp1_64bitmode</name><argument_list pos:start="381:28" pos:end="381:32">(<argument pos:start="381:29" pos:end="381:31"><expr pos:start="381:29" pos:end="381:31"><name pos:start="381:29" pos:end="381:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="383:9" pos:end="401:9">{<block_content pos:start="385:13" pos:end="399:36">

            <decl_stmt pos:start="385:13" pos:end="385:47"><decl pos:start="385:13" pos:end="385:46"><type pos:start="385:13" pos:end="385:20"><name pos:start="385:13" pos:end="385:20">TCGv_i32</name></type> <name pos:start="385:22" pos:end="385:25">fp32</name> <init pos:start="385:27" pos:end="385:46">= <expr pos:start="385:29" pos:end="385:46"><call pos:start="385:29" pos:end="385:46"><name pos:start="385:29" pos:end="385:44">tcg_temp_new_i32</name><argument_list pos:start="385:45" pos:end="385:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="387:13" pos:end="387:47"><decl pos:start="387:13" pos:end="387:46"><type pos:start="387:13" pos:end="387:20"><name pos:start="387:13" pos:end="387:20">TCGv_i64</name></type> <name pos:start="387:22" pos:end="387:25">fp64</name> <init pos:start="387:27" pos:end="387:46">= <expr pos:start="387:29" pos:end="387:46"><call pos:start="387:29" pos:end="387:46"><name pos:start="387:29" pos:end="387:44">tcg_temp_new_i64</name><argument_list pos:start="387:45" pos:end="387:46">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="391:13" pos:end="391:37"><expr pos:start="391:13" pos:end="391:36"><call pos:start="391:13" pos:end="391:36"><name pos:start="391:13" pos:end="391:26">gen_load_fpr32</name><argument_list pos:start="391:27" pos:end="391:36">(<argument pos:start="391:28" pos:end="391:31"><expr pos:start="391:28" pos:end="391:31"><name pos:start="391:28" pos:end="391:31">fp32</name></expr></argument>, <argument pos:start="391:34" pos:end="391:35"><expr pos:start="391:34" pos:end="391:35"><name pos:start="391:34" pos:end="391:35">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="393:13" pos:end="393:59"><expr pos:start="393:13" pos:end="393:58"><call pos:start="393:13" pos:end="393:58"><name pos:start="393:13" pos:end="393:37">gen_helper_float_floorl_s</name><argument_list pos:start="393:38" pos:end="393:58">(<argument pos:start="393:39" pos:end="393:42"><expr pos:start="393:39" pos:end="393:42"><name pos:start="393:39" pos:end="393:42">fp64</name></expr></argument>, <argument pos:start="393:45" pos:end="393:51"><expr pos:start="393:45" pos:end="393:51"><name pos:start="393:45" pos:end="393:51">cpu_env</name></expr></argument>, <argument pos:start="393:54" pos:end="393:57"><expr pos:start="393:54" pos:end="393:57"><name pos:start="393:54" pos:end="393:57">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="395:13" pos:end="395:36"><expr pos:start="395:13" pos:end="395:35"><call pos:start="395:13" pos:end="395:35"><name pos:start="395:13" pos:end="395:29">tcg_temp_free_i32</name><argument_list pos:start="395:30" pos:end="395:35">(<argument pos:start="395:31" pos:end="395:34"><expr pos:start="395:31" pos:end="395:34"><name pos:start="395:31" pos:end="395:34">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="397:13" pos:end="397:43"><expr pos:start="397:13" pos:end="397:42"><call pos:start="397:13" pos:end="397:42"><name pos:start="397:13" pos:end="397:27">gen_store_fpr64</name><argument_list pos:start="397:28" pos:end="397:42">(<argument pos:start="397:29" pos:end="397:31"><expr pos:start="397:29" pos:end="397:31"><name pos:start="397:29" pos:end="397:31">ctx</name></expr></argument>, <argument pos:start="397:34" pos:end="397:37"><expr pos:start="397:34" pos:end="397:37"><name pos:start="397:34" pos:end="397:37">fp64</name></expr></argument>, <argument pos:start="397:40" pos:end="397:41"><expr pos:start="397:40" pos:end="397:41"><name pos:start="397:40" pos:end="397:41">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="399:13" pos:end="399:36"><expr pos:start="399:13" pos:end="399:35"><call pos:start="399:13" pos:end="399:35"><name pos:start="399:13" pos:end="399:29">tcg_temp_free_i64</name><argument_list pos:start="399:30" pos:end="399:35">(<argument pos:start="399:31" pos:end="399:34"><expr pos:start="399:31" pos:end="399:34"><name pos:start="399:31" pos:end="399:34">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="403:9" pos:end="403:26"><expr pos:start="403:9" pos:end="403:25"><name pos:start="403:9" pos:end="403:11">opn</name> <operator pos:start="403:13" pos:end="403:13">=</operator> <literal type="string" pos:start="403:15" pos:end="403:25">"floor.l.s"</literal></expr>;</expr_stmt>

        <break pos:start="405:9" pos:end="405:14">break;</break>

    <case pos:start="407:5" pos:end="407:23">case <expr pos:start="407:10" pos:end="407:22"><name pos:start="407:10" pos:end="407:22">OPC_ROUND_W_S</name></expr>:</case>

        <block pos:start="409:9" pos:end="423:9">{<block_content pos:start="411:13" pos:end="421:35">

            <decl_stmt pos:start="411:13" pos:end="411:46"><decl pos:start="411:13" pos:end="411:45"><type pos:start="411:13" pos:end="411:20"><name pos:start="411:13" pos:end="411:20">TCGv_i32</name></type> <name pos:start="411:22" pos:end="411:24">fp0</name> <init pos:start="411:26" pos:end="411:45">= <expr pos:start="411:28" pos:end="411:45"><call pos:start="411:28" pos:end="411:45"><name pos:start="411:28" pos:end="411:43">tcg_temp_new_i32</name><argument_list pos:start="411:44" pos:end="411:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="415:13" pos:end="415:36"><expr pos:start="415:13" pos:end="415:35"><call pos:start="415:13" pos:end="415:35"><name pos:start="415:13" pos:end="415:26">gen_load_fpr32</name><argument_list pos:start="415:27" pos:end="415:35">(<argument pos:start="415:28" pos:end="415:30"><expr pos:start="415:28" pos:end="415:30"><name pos:start="415:28" pos:end="415:30">fp0</name></expr></argument>, <argument pos:start="415:33" pos:end="415:34"><expr pos:start="415:33" pos:end="415:34"><name pos:start="415:33" pos:end="415:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="417:13" pos:end="417:57"><expr pos:start="417:13" pos:end="417:56"><call pos:start="417:13" pos:end="417:56"><name pos:start="417:13" pos:end="417:37">gen_helper_float_roundw_s</name><argument_list pos:start="417:38" pos:end="417:56">(<argument pos:start="417:39" pos:end="417:41"><expr pos:start="417:39" pos:end="417:41"><name pos:start="417:39" pos:end="417:41">fp0</name></expr></argument>, <argument pos:start="417:44" pos:end="417:50"><expr pos:start="417:44" pos:end="417:50"><name pos:start="417:44" pos:end="417:50">cpu_env</name></expr></argument>, <argument pos:start="417:53" pos:end="417:55"><expr pos:start="417:53" pos:end="417:55"><name pos:start="417:53" pos:end="417:55">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="419:13" pos:end="419:37"><expr pos:start="419:13" pos:end="419:36"><call pos:start="419:13" pos:end="419:36"><name pos:start="419:13" pos:end="419:27">gen_store_fpr32</name><argument_list pos:start="419:28" pos:end="419:36">(<argument pos:start="419:29" pos:end="419:31"><expr pos:start="419:29" pos:end="419:31"><name pos:start="419:29" pos:end="419:31">fp0</name></expr></argument>, <argument pos:start="419:34" pos:end="419:35"><expr pos:start="419:34" pos:end="419:35"><name pos:start="419:34" pos:end="419:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="421:13" pos:end="421:35"><expr pos:start="421:13" pos:end="421:34"><call pos:start="421:13" pos:end="421:34"><name pos:start="421:13" pos:end="421:29">tcg_temp_free_i32</name><argument_list pos:start="421:30" pos:end="421:34">(<argument pos:start="421:31" pos:end="421:33"><expr pos:start="421:31" pos:end="421:33"><name pos:start="421:31" pos:end="421:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="425:9" pos:end="425:26"><expr pos:start="425:9" pos:end="425:25"><name pos:start="425:9" pos:end="425:11">opn</name> <operator pos:start="425:13" pos:end="425:13">=</operator> <literal type="string" pos:start="425:15" pos:end="425:25">"round.w.s"</literal></expr>;</expr_stmt>

        <break pos:start="427:9" pos:end="427:14">break;</break>

    <case pos:start="429:5" pos:end="429:23">case <expr pos:start="429:10" pos:end="429:22"><name pos:start="429:10" pos:end="429:22">OPC_TRUNC_W_S</name></expr>:</case>

        <block pos:start="431:9" pos:end="445:9">{<block_content pos:start="433:13" pos:end="443:35">

            <decl_stmt pos:start="433:13" pos:end="433:46"><decl pos:start="433:13" pos:end="433:45"><type pos:start="433:13" pos:end="433:20"><name pos:start="433:13" pos:end="433:20">TCGv_i32</name></type> <name pos:start="433:22" pos:end="433:24">fp0</name> <init pos:start="433:26" pos:end="433:45">= <expr pos:start="433:28" pos:end="433:45"><call pos:start="433:28" pos:end="433:45"><name pos:start="433:28" pos:end="433:43">tcg_temp_new_i32</name><argument_list pos:start="433:44" pos:end="433:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="437:13" pos:end="437:36"><expr pos:start="437:13" pos:end="437:35"><call pos:start="437:13" pos:end="437:35"><name pos:start="437:13" pos:end="437:26">gen_load_fpr32</name><argument_list pos:start="437:27" pos:end="437:35">(<argument pos:start="437:28" pos:end="437:30"><expr pos:start="437:28" pos:end="437:30"><name pos:start="437:28" pos:end="437:30">fp0</name></expr></argument>, <argument pos:start="437:33" pos:end="437:34"><expr pos:start="437:33" pos:end="437:34"><name pos:start="437:33" pos:end="437:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="439:13" pos:end="439:57"><expr pos:start="439:13" pos:end="439:56"><call pos:start="439:13" pos:end="439:56"><name pos:start="439:13" pos:end="439:37">gen_helper_float_truncw_s</name><argument_list pos:start="439:38" pos:end="439:56">(<argument pos:start="439:39" pos:end="439:41"><expr pos:start="439:39" pos:end="439:41"><name pos:start="439:39" pos:end="439:41">fp0</name></expr></argument>, <argument pos:start="439:44" pos:end="439:50"><expr pos:start="439:44" pos:end="439:50"><name pos:start="439:44" pos:end="439:50">cpu_env</name></expr></argument>, <argument pos:start="439:53" pos:end="439:55"><expr pos:start="439:53" pos:end="439:55"><name pos:start="439:53" pos:end="439:55">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="441:13" pos:end="441:37"><expr pos:start="441:13" pos:end="441:36"><call pos:start="441:13" pos:end="441:36"><name pos:start="441:13" pos:end="441:27">gen_store_fpr32</name><argument_list pos:start="441:28" pos:end="441:36">(<argument pos:start="441:29" pos:end="441:31"><expr pos:start="441:29" pos:end="441:31"><name pos:start="441:29" pos:end="441:31">fp0</name></expr></argument>, <argument pos:start="441:34" pos:end="441:35"><expr pos:start="441:34" pos:end="441:35"><name pos:start="441:34" pos:end="441:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="443:13" pos:end="443:35"><expr pos:start="443:13" pos:end="443:34"><call pos:start="443:13" pos:end="443:34"><name pos:start="443:13" pos:end="443:29">tcg_temp_free_i32</name><argument_list pos:start="443:30" pos:end="443:34">(<argument pos:start="443:31" pos:end="443:33"><expr pos:start="443:31" pos:end="443:33"><name pos:start="443:31" pos:end="443:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="447:9" pos:end="447:26"><expr pos:start="447:9" pos:end="447:25"><name pos:start="447:9" pos:end="447:11">opn</name> <operator pos:start="447:13" pos:end="447:13">=</operator> <literal type="string" pos:start="447:15" pos:end="447:25">"trunc.w.s"</literal></expr>;</expr_stmt>

        <break pos:start="449:9" pos:end="449:14">break;</break>

    <case pos:start="451:5" pos:end="451:22">case <expr pos:start="451:10" pos:end="451:21"><name pos:start="451:10" pos:end="451:21">OPC_CEIL_W_S</name></expr>:</case>

        <block pos:start="453:9" pos:end="467:9">{<block_content pos:start="455:13" pos:end="465:35">

            <decl_stmt pos:start="455:13" pos:end="455:46"><decl pos:start="455:13" pos:end="455:45"><type pos:start="455:13" pos:end="455:20"><name pos:start="455:13" pos:end="455:20">TCGv_i32</name></type> <name pos:start="455:22" pos:end="455:24">fp0</name> <init pos:start="455:26" pos:end="455:45">= <expr pos:start="455:28" pos:end="455:45"><call pos:start="455:28" pos:end="455:45"><name pos:start="455:28" pos:end="455:43">tcg_temp_new_i32</name><argument_list pos:start="455:44" pos:end="455:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="459:13" pos:end="459:36"><expr pos:start="459:13" pos:end="459:35"><call pos:start="459:13" pos:end="459:35"><name pos:start="459:13" pos:end="459:26">gen_load_fpr32</name><argument_list pos:start="459:27" pos:end="459:35">(<argument pos:start="459:28" pos:end="459:30"><expr pos:start="459:28" pos:end="459:30"><name pos:start="459:28" pos:end="459:30">fp0</name></expr></argument>, <argument pos:start="459:33" pos:end="459:34"><expr pos:start="459:33" pos:end="459:34"><name pos:start="459:33" pos:end="459:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="461:13" pos:end="461:56"><expr pos:start="461:13" pos:end="461:55"><call pos:start="461:13" pos:end="461:55"><name pos:start="461:13" pos:end="461:36">gen_helper_float_ceilw_s</name><argument_list pos:start="461:37" pos:end="461:55">(<argument pos:start="461:38" pos:end="461:40"><expr pos:start="461:38" pos:end="461:40"><name pos:start="461:38" pos:end="461:40">fp0</name></expr></argument>, <argument pos:start="461:43" pos:end="461:49"><expr pos:start="461:43" pos:end="461:49"><name pos:start="461:43" pos:end="461:49">cpu_env</name></expr></argument>, <argument pos:start="461:52" pos:end="461:54"><expr pos:start="461:52" pos:end="461:54"><name pos:start="461:52" pos:end="461:54">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="463:13" pos:end="463:37"><expr pos:start="463:13" pos:end="463:36"><call pos:start="463:13" pos:end="463:36"><name pos:start="463:13" pos:end="463:27">gen_store_fpr32</name><argument_list pos:start="463:28" pos:end="463:36">(<argument pos:start="463:29" pos:end="463:31"><expr pos:start="463:29" pos:end="463:31"><name pos:start="463:29" pos:end="463:31">fp0</name></expr></argument>, <argument pos:start="463:34" pos:end="463:35"><expr pos:start="463:34" pos:end="463:35"><name pos:start="463:34" pos:end="463:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="465:13" pos:end="465:35"><expr pos:start="465:13" pos:end="465:34"><call pos:start="465:13" pos:end="465:34"><name pos:start="465:13" pos:end="465:29">tcg_temp_free_i32</name><argument_list pos:start="465:30" pos:end="465:34">(<argument pos:start="465:31" pos:end="465:33"><expr pos:start="465:31" pos:end="465:33"><name pos:start="465:31" pos:end="465:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="469:9" pos:end="469:25"><expr pos:start="469:9" pos:end="469:24"><name pos:start="469:9" pos:end="469:11">opn</name> <operator pos:start="469:13" pos:end="469:13">=</operator> <literal type="string" pos:start="469:15" pos:end="469:24">"ceil.w.s"</literal></expr>;</expr_stmt>

        <break pos:start="471:9" pos:end="471:14">break;</break>

    <case pos:start="473:5" pos:end="473:23">case <expr pos:start="473:10" pos:end="473:22"><name pos:start="473:10" pos:end="473:22">OPC_FLOOR_W_S</name></expr>:</case>

        <block pos:start="475:9" pos:end="489:9">{<block_content pos:start="477:13" pos:end="487:35">

            <decl_stmt pos:start="477:13" pos:end="477:46"><decl pos:start="477:13" pos:end="477:45"><type pos:start="477:13" pos:end="477:20"><name pos:start="477:13" pos:end="477:20">TCGv_i32</name></type> <name pos:start="477:22" pos:end="477:24">fp0</name> <init pos:start="477:26" pos:end="477:45">= <expr pos:start="477:28" pos:end="477:45"><call pos:start="477:28" pos:end="477:45"><name pos:start="477:28" pos:end="477:43">tcg_temp_new_i32</name><argument_list pos:start="477:44" pos:end="477:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="481:13" pos:end="481:36"><expr pos:start="481:13" pos:end="481:35"><call pos:start="481:13" pos:end="481:35"><name pos:start="481:13" pos:end="481:26">gen_load_fpr32</name><argument_list pos:start="481:27" pos:end="481:35">(<argument pos:start="481:28" pos:end="481:30"><expr pos:start="481:28" pos:end="481:30"><name pos:start="481:28" pos:end="481:30">fp0</name></expr></argument>, <argument pos:start="481:33" pos:end="481:34"><expr pos:start="481:33" pos:end="481:34"><name pos:start="481:33" pos:end="481:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="483:13" pos:end="483:57"><expr pos:start="483:13" pos:end="483:56"><call pos:start="483:13" pos:end="483:56"><name pos:start="483:13" pos:end="483:37">gen_helper_float_floorw_s</name><argument_list pos:start="483:38" pos:end="483:56">(<argument pos:start="483:39" pos:end="483:41"><expr pos:start="483:39" pos:end="483:41"><name pos:start="483:39" pos:end="483:41">fp0</name></expr></argument>, <argument pos:start="483:44" pos:end="483:50"><expr pos:start="483:44" pos:end="483:50"><name pos:start="483:44" pos:end="483:50">cpu_env</name></expr></argument>, <argument pos:start="483:53" pos:end="483:55"><expr pos:start="483:53" pos:end="483:55"><name pos:start="483:53" pos:end="483:55">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="485:13" pos:end="485:37"><expr pos:start="485:13" pos:end="485:36"><call pos:start="485:13" pos:end="485:36"><name pos:start="485:13" pos:end="485:27">gen_store_fpr32</name><argument_list pos:start="485:28" pos:end="485:36">(<argument pos:start="485:29" pos:end="485:31"><expr pos:start="485:29" pos:end="485:31"><name pos:start="485:29" pos:end="485:31">fp0</name></expr></argument>, <argument pos:start="485:34" pos:end="485:35"><expr pos:start="485:34" pos:end="485:35"><name pos:start="485:34" pos:end="485:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="487:13" pos:end="487:35"><expr pos:start="487:13" pos:end="487:34"><call pos:start="487:13" pos:end="487:34"><name pos:start="487:13" pos:end="487:29">tcg_temp_free_i32</name><argument_list pos:start="487:30" pos:end="487:34">(<argument pos:start="487:31" pos:end="487:33"><expr pos:start="487:31" pos:end="487:33"><name pos:start="487:31" pos:end="487:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="491:9" pos:end="491:26"><expr pos:start="491:9" pos:end="491:25"><name pos:start="491:9" pos:end="491:11">opn</name> <operator pos:start="491:13" pos:end="491:13">=</operator> <literal type="string" pos:start="491:15" pos:end="491:25">"floor.w.s"</literal></expr>;</expr_stmt>

        <break pos:start="493:9" pos:end="493:14">break;</break>

    <case pos:start="495:5" pos:end="495:21">case <expr pos:start="495:10" pos:end="495:20"><name pos:start="495:10" pos:end="495:20">OPC_MOVCF_S</name></expr>:</case>

        <expr_stmt pos:start="497:9" pos:end="497:55"><expr pos:start="497:9" pos:end="497:54"><call pos:start="497:9" pos:end="497:54"><name pos:start="497:9" pos:end="497:19">gen_movcf_s</name><argument_list pos:start="497:20" pos:end="497:54">(<argument pos:start="497:21" pos:end="497:22"><expr pos:start="497:21" pos:end="497:22"><name pos:start="497:21" pos:end="497:22">fs</name></expr></argument>, <argument pos:start="497:25" pos:end="497:26"><expr pos:start="497:25" pos:end="497:26"><name pos:start="497:25" pos:end="497:26">fd</name></expr></argument>, <argument pos:start="497:29" pos:end="497:43"><expr pos:start="497:29" pos:end="497:43"><operator pos:start="497:29" pos:end="497:29">(</operator><name pos:start="497:30" pos:end="497:31">ft</name> <operator pos:start="497:33" pos:end="497:34">&gt;&gt;</operator> <literal type="number" pos:start="497:36" pos:end="497:36">2</literal><operator pos:start="497:37" pos:end="497:37">)</operator> <operator pos:start="497:39" pos:end="497:39">&amp;</operator> <literal type="number" pos:start="497:41" pos:end="497:43">0x7</literal></expr></argument>, <argument pos:start="497:46" pos:end="497:53"><expr pos:start="497:46" pos:end="497:53"><name pos:start="497:46" pos:end="497:47">ft</name> <operator pos:start="497:49" pos:end="497:49">&amp;</operator> <literal type="number" pos:start="497:51" pos:end="497:53">0x1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="499:9" pos:end="499:24"><expr pos:start="499:9" pos:end="499:23"><name pos:start="499:9" pos:end="499:11">opn</name> <operator pos:start="499:13" pos:end="499:13">=</operator> <literal type="string" pos:start="499:15" pos:end="499:23">"movcf.s"</literal></expr>;</expr_stmt>

        <break pos:start="501:9" pos:end="501:14">break;</break>

    <case pos:start="503:5" pos:end="503:20">case <expr pos:start="503:10" pos:end="503:19"><name pos:start="503:10" pos:end="503:19">OPC_MOVZ_S</name></expr>:</case>

        <block pos:start="505:9" pos:end="529:9">{<block_content pos:start="507:13" pos:end="527:30">

            <decl_stmt pos:start="507:13" pos:end="507:37"><decl pos:start="507:13" pos:end="507:36"><type pos:start="507:13" pos:end="507:15"><name pos:start="507:13" pos:end="507:15">int</name></type> <name pos:start="507:17" pos:end="507:18">l1</name> <init pos:start="507:20" pos:end="507:36">= <expr pos:start="507:22" pos:end="507:36"><call pos:start="507:22" pos:end="507:36"><name pos:start="507:22" pos:end="507:34">gen_new_label</name><argument_list pos:start="507:35" pos:end="507:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="509:13" pos:end="509:25"><decl pos:start="509:13" pos:end="509:24"><type pos:start="509:13" pos:end="509:20"><name pos:start="509:13" pos:end="509:20">TCGv_i32</name></type> <name pos:start="509:22" pos:end="509:24">fp0</name></decl>;</decl_stmt>



            <if_stmt pos:start="513:13" pos:end="517:13"><if pos:start="513:13" pos:end="517:13">if <condition pos:start="513:16" pos:end="513:24">(<expr pos:start="513:17" pos:end="513:23"><name pos:start="513:17" pos:end="513:18">ft</name> <operator pos:start="513:20" pos:end="513:21">!=</operator> <literal type="number" pos:start="513:23" pos:end="513:23">0</literal></expr>)</condition> <block pos:start="513:26" pos:end="517:13">{<block_content pos:start="515:17" pos:end="515:68">

                <expr_stmt pos:start="515:17" pos:end="515:68"><expr pos:start="515:17" pos:end="515:67"><call pos:start="515:17" pos:end="515:67"><name pos:start="515:17" pos:end="515:34">tcg_gen_brcondi_tl</name><argument_list pos:start="515:35" pos:end="515:67">(<argument pos:start="515:36" pos:end="515:46"><expr pos:start="515:36" pos:end="515:46"><name pos:start="515:36" pos:end="515:46">TCG_COND_NE</name></expr></argument>, <argument pos:start="515:49" pos:end="515:59"><expr pos:start="515:49" pos:end="515:59"><name pos:start="515:49" pos:end="515:59"><name pos:start="515:49" pos:end="515:55">cpu_gpr</name><index pos:start="515:56" pos:end="515:59">[<expr pos:start="515:57" pos:end="515:58"><name pos:start="515:57" pos:end="515:58">ft</name></expr>]</index></name></expr></argument>, <argument pos:start="515:62" pos:end="515:62"><expr pos:start="515:62" pos:end="515:62"><literal type="number" pos:start="515:62" pos:end="515:62">0</literal></expr></argument>, <argument pos:start="515:65" pos:end="515:66"><expr pos:start="515:65" pos:end="515:66"><name pos:start="515:65" pos:end="515:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="519:13" pos:end="519:37"><expr pos:start="519:13" pos:end="519:36"><name pos:start="519:13" pos:end="519:15">fp0</name> <operator pos:start="519:17" pos:end="519:17">=</operator> <call pos:start="519:19" pos:end="519:36"><name pos:start="519:19" pos:end="519:34">tcg_temp_new_i32</name><argument_list pos:start="519:35" pos:end="519:36">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="521:13" pos:end="521:36"><expr pos:start="521:13" pos:end="521:35"><call pos:start="521:13" pos:end="521:35"><name pos:start="521:13" pos:end="521:26">gen_load_fpr32</name><argument_list pos:start="521:27" pos:end="521:35">(<argument pos:start="521:28" pos:end="521:30"><expr pos:start="521:28" pos:end="521:30"><name pos:start="521:28" pos:end="521:30">fp0</name></expr></argument>, <argument pos:start="521:33" pos:end="521:34"><expr pos:start="521:33" pos:end="521:34"><name pos:start="521:33" pos:end="521:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="523:13" pos:end="523:37"><expr pos:start="523:13" pos:end="523:36"><call pos:start="523:13" pos:end="523:36"><name pos:start="523:13" pos:end="523:27">gen_store_fpr32</name><argument_list pos:start="523:28" pos:end="523:36">(<argument pos:start="523:29" pos:end="523:31"><expr pos:start="523:29" pos:end="523:31"><name pos:start="523:29" pos:end="523:31">fp0</name></expr></argument>, <argument pos:start="523:34" pos:end="523:35"><expr pos:start="523:34" pos:end="523:35"><name pos:start="523:34" pos:end="523:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="525:13" pos:end="525:35"><expr pos:start="525:13" pos:end="525:34"><call pos:start="525:13" pos:end="525:34"><name pos:start="525:13" pos:end="525:29">tcg_temp_free_i32</name><argument_list pos:start="525:30" pos:end="525:34">(<argument pos:start="525:31" pos:end="525:33"><expr pos:start="525:31" pos:end="525:33"><name pos:start="525:31" pos:end="525:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="527:13" pos:end="527:30"><expr pos:start="527:13" pos:end="527:29"><call pos:start="527:13" pos:end="527:29"><name pos:start="527:13" pos:end="527:25">gen_set_label</name><argument_list pos:start="527:26" pos:end="527:29">(<argument pos:start="527:27" pos:end="527:28"><expr pos:start="527:27" pos:end="527:28"><name pos:start="527:27" pos:end="527:28">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="531:9" pos:end="531:23"><expr pos:start="531:9" pos:end="531:22"><name pos:start="531:9" pos:end="531:11">opn</name> <operator pos:start="531:13" pos:end="531:13">=</operator> <literal type="string" pos:start="531:15" pos:end="531:22">"movz.s"</literal></expr>;</expr_stmt>

        <break pos:start="533:9" pos:end="533:14">break;</break>

    <case pos:start="535:5" pos:end="535:20">case <expr pos:start="535:10" pos:end="535:19"><name pos:start="535:10" pos:end="535:19">OPC_MOVN_S</name></expr>:</case>

        <block pos:start="537:9" pos:end="561:9">{<block_content pos:start="539:13" pos:end="559:13">

            <decl_stmt pos:start="539:13" pos:end="539:37"><decl pos:start="539:13" pos:end="539:36"><type pos:start="539:13" pos:end="539:15"><name pos:start="539:13" pos:end="539:15">int</name></type> <name pos:start="539:17" pos:end="539:18">l1</name> <init pos:start="539:20" pos:end="539:36">= <expr pos:start="539:22" pos:end="539:36"><call pos:start="539:22" pos:end="539:36"><name pos:start="539:22" pos:end="539:34">gen_new_label</name><argument_list pos:start="539:35" pos:end="539:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="541:13" pos:end="541:25"><decl pos:start="541:13" pos:end="541:24"><type pos:start="541:13" pos:end="541:20"><name pos:start="541:13" pos:end="541:20">TCGv_i32</name></type> <name pos:start="541:22" pos:end="541:24">fp0</name></decl>;</decl_stmt>



            <if_stmt pos:start="545:13" pos:end="559:13"><if pos:start="545:13" pos:end="559:13">if <condition pos:start="545:16" pos:end="545:24">(<expr pos:start="545:17" pos:end="545:23"><name pos:start="545:17" pos:end="545:18">ft</name> <operator pos:start="545:20" pos:end="545:21">!=</operator> <literal type="number" pos:start="545:23" pos:end="545:23">0</literal></expr>)</condition> <block pos:start="545:26" pos:end="559:13">{<block_content pos:start="547:17" pos:end="557:34">

                <expr_stmt pos:start="547:17" pos:end="547:68"><expr pos:start="547:17" pos:end="547:67"><call pos:start="547:17" pos:end="547:67"><name pos:start="547:17" pos:end="547:34">tcg_gen_brcondi_tl</name><argument_list pos:start="547:35" pos:end="547:67">(<argument pos:start="547:36" pos:end="547:46"><expr pos:start="547:36" pos:end="547:46"><name pos:start="547:36" pos:end="547:46">TCG_COND_EQ</name></expr></argument>, <argument pos:start="547:49" pos:end="547:59"><expr pos:start="547:49" pos:end="547:59"><name pos:start="547:49" pos:end="547:59"><name pos:start="547:49" pos:end="547:55">cpu_gpr</name><index pos:start="547:56" pos:end="547:59">[<expr pos:start="547:57" pos:end="547:58"><name pos:start="547:57" pos:end="547:58">ft</name></expr>]</index></name></expr></argument>, <argument pos:start="547:62" pos:end="547:62"><expr pos:start="547:62" pos:end="547:62"><literal type="number" pos:start="547:62" pos:end="547:62">0</literal></expr></argument>, <argument pos:start="547:65" pos:end="547:66"><expr pos:start="547:65" pos:end="547:66"><name pos:start="547:65" pos:end="547:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="549:17" pos:end="549:41"><expr pos:start="549:17" pos:end="549:40"><name pos:start="549:17" pos:end="549:19">fp0</name> <operator pos:start="549:21" pos:end="549:21">=</operator> <call pos:start="549:23" pos:end="549:40"><name pos:start="549:23" pos:end="549:38">tcg_temp_new_i32</name><argument_list pos:start="549:39" pos:end="549:40">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="551:17" pos:end="551:40"><expr pos:start="551:17" pos:end="551:39"><call pos:start="551:17" pos:end="551:39"><name pos:start="551:17" pos:end="551:30">gen_load_fpr32</name><argument_list pos:start="551:31" pos:end="551:39">(<argument pos:start="551:32" pos:end="551:34"><expr pos:start="551:32" pos:end="551:34"><name pos:start="551:32" pos:end="551:34">fp0</name></expr></argument>, <argument pos:start="551:37" pos:end="551:38"><expr pos:start="551:37" pos:end="551:38"><name pos:start="551:37" pos:end="551:38">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="553:17" pos:end="553:41"><expr pos:start="553:17" pos:end="553:40"><call pos:start="553:17" pos:end="553:40"><name pos:start="553:17" pos:end="553:31">gen_store_fpr32</name><argument_list pos:start="553:32" pos:end="553:40">(<argument pos:start="553:33" pos:end="553:35"><expr pos:start="553:33" pos:end="553:35"><name pos:start="553:33" pos:end="553:35">fp0</name></expr></argument>, <argument pos:start="553:38" pos:end="553:39"><expr pos:start="553:38" pos:end="553:39"><name pos:start="553:38" pos:end="553:39">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="555:17" pos:end="555:39"><expr pos:start="555:17" pos:end="555:38"><call pos:start="555:17" pos:end="555:38"><name pos:start="555:17" pos:end="555:33">tcg_temp_free_i32</name><argument_list pos:start="555:34" pos:end="555:38">(<argument pos:start="555:35" pos:end="555:37"><expr pos:start="555:35" pos:end="555:37"><name pos:start="555:35" pos:end="555:37">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="557:17" pos:end="557:34"><expr pos:start="557:17" pos:end="557:33"><call pos:start="557:17" pos:end="557:33"><name pos:start="557:17" pos:end="557:29">gen_set_label</name><argument_list pos:start="557:30" pos:end="557:33">(<argument pos:start="557:31" pos:end="557:32"><expr pos:start="557:31" pos:end="557:32"><name pos:start="557:31" pos:end="557:32">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="563:9" pos:end="563:23"><expr pos:start="563:9" pos:end="563:22"><name pos:start="563:9" pos:end="563:11">opn</name> <operator pos:start="563:13" pos:end="563:13">=</operator> <literal type="string" pos:start="563:15" pos:end="563:22">"movn.s"</literal></expr>;</expr_stmt>

        <break pos:start="565:9" pos:end="565:14">break;</break>

    <case pos:start="567:5" pos:end="567:21">case <expr pos:start="567:10" pos:end="567:20"><name pos:start="567:10" pos:end="567:20">OPC_RECIP_S</name></expr>:</case>

        <expr_stmt pos:start="569:9" pos:end="569:25"><expr pos:start="569:9" pos:end="569:24"><call pos:start="569:9" pos:end="569:24"><name pos:start="569:9" pos:end="569:19">check_cop1x</name><argument_list pos:start="569:20" pos:end="569:24">(<argument pos:start="569:21" pos:end="569:23"><expr pos:start="569:21" pos:end="569:23"><name pos:start="569:21" pos:end="569:23">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="571:9" pos:end="585:9">{<block_content pos:start="573:13" pos:end="583:35">

            <decl_stmt pos:start="573:13" pos:end="573:46"><decl pos:start="573:13" pos:end="573:45"><type pos:start="573:13" pos:end="573:20"><name pos:start="573:13" pos:end="573:20">TCGv_i32</name></type> <name pos:start="573:22" pos:end="573:24">fp0</name> <init pos:start="573:26" pos:end="573:45">= <expr pos:start="573:28" pos:end="573:45"><call pos:start="573:28" pos:end="573:45"><name pos:start="573:28" pos:end="573:43">tcg_temp_new_i32</name><argument_list pos:start="573:44" pos:end="573:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="577:13" pos:end="577:36"><expr pos:start="577:13" pos:end="577:35"><call pos:start="577:13" pos:end="577:35"><name pos:start="577:13" pos:end="577:26">gen_load_fpr32</name><argument_list pos:start="577:27" pos:end="577:35">(<argument pos:start="577:28" pos:end="577:30"><expr pos:start="577:28" pos:end="577:30"><name pos:start="577:28" pos:end="577:30">fp0</name></expr></argument>, <argument pos:start="577:33" pos:end="577:34"><expr pos:start="577:33" pos:end="577:34"><name pos:start="577:33" pos:end="577:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="579:13" pos:end="579:56"><expr pos:start="579:13" pos:end="579:55"><call pos:start="579:13" pos:end="579:55"><name pos:start="579:13" pos:end="579:36">gen_helper_float_recip_s</name><argument_list pos:start="579:37" pos:end="579:55">(<argument pos:start="579:38" pos:end="579:40"><expr pos:start="579:38" pos:end="579:40"><name pos:start="579:38" pos:end="579:40">fp0</name></expr></argument>, <argument pos:start="579:43" pos:end="579:49"><expr pos:start="579:43" pos:end="579:49"><name pos:start="579:43" pos:end="579:49">cpu_env</name></expr></argument>, <argument pos:start="579:52" pos:end="579:54"><expr pos:start="579:52" pos:end="579:54"><name pos:start="579:52" pos:end="579:54">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="581:13" pos:end="581:37"><expr pos:start="581:13" pos:end="581:36"><call pos:start="581:13" pos:end="581:36"><name pos:start="581:13" pos:end="581:27">gen_store_fpr32</name><argument_list pos:start="581:28" pos:end="581:36">(<argument pos:start="581:29" pos:end="581:31"><expr pos:start="581:29" pos:end="581:31"><name pos:start="581:29" pos:end="581:31">fp0</name></expr></argument>, <argument pos:start="581:34" pos:end="581:35"><expr pos:start="581:34" pos:end="581:35"><name pos:start="581:34" pos:end="581:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="583:13" pos:end="583:35"><expr pos:start="583:13" pos:end="583:34"><call pos:start="583:13" pos:end="583:34"><name pos:start="583:13" pos:end="583:29">tcg_temp_free_i32</name><argument_list pos:start="583:30" pos:end="583:34">(<argument pos:start="583:31" pos:end="583:33"><expr pos:start="583:31" pos:end="583:33"><name pos:start="583:31" pos:end="583:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="587:9" pos:end="587:24"><expr pos:start="587:9" pos:end="587:23"><name pos:start="587:9" pos:end="587:11">opn</name> <operator pos:start="587:13" pos:end="587:13">=</operator> <literal type="string" pos:start="587:15" pos:end="587:23">"recip.s"</literal></expr>;</expr_stmt>

        <break pos:start="589:9" pos:end="589:14">break;</break>

    <case pos:start="591:5" pos:end="591:21">case <expr pos:start="591:10" pos:end="591:20"><name pos:start="591:10" pos:end="591:20">OPC_RSQRT_S</name></expr>:</case>

        <expr_stmt pos:start="593:9" pos:end="593:25"><expr pos:start="593:9" pos:end="593:24"><call pos:start="593:9" pos:end="593:24"><name pos:start="593:9" pos:end="593:19">check_cop1x</name><argument_list pos:start="593:20" pos:end="593:24">(<argument pos:start="593:21" pos:end="593:23"><expr pos:start="593:21" pos:end="593:23"><name pos:start="593:21" pos:end="593:23">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="595:9" pos:end="609:9">{<block_content pos:start="597:13" pos:end="607:35">

            <decl_stmt pos:start="597:13" pos:end="597:46"><decl pos:start="597:13" pos:end="597:45"><type pos:start="597:13" pos:end="597:20"><name pos:start="597:13" pos:end="597:20">TCGv_i32</name></type> <name pos:start="597:22" pos:end="597:24">fp0</name> <init pos:start="597:26" pos:end="597:45">= <expr pos:start="597:28" pos:end="597:45"><call pos:start="597:28" pos:end="597:45"><name pos:start="597:28" pos:end="597:43">tcg_temp_new_i32</name><argument_list pos:start="597:44" pos:end="597:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="601:13" pos:end="601:36"><expr pos:start="601:13" pos:end="601:35"><call pos:start="601:13" pos:end="601:35"><name pos:start="601:13" pos:end="601:26">gen_load_fpr32</name><argument_list pos:start="601:27" pos:end="601:35">(<argument pos:start="601:28" pos:end="601:30"><expr pos:start="601:28" pos:end="601:30"><name pos:start="601:28" pos:end="601:30">fp0</name></expr></argument>, <argument pos:start="601:33" pos:end="601:34"><expr pos:start="601:33" pos:end="601:34"><name pos:start="601:33" pos:end="601:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="603:13" pos:end="603:56"><expr pos:start="603:13" pos:end="603:55"><call pos:start="603:13" pos:end="603:55"><name pos:start="603:13" pos:end="603:36">gen_helper_float_rsqrt_s</name><argument_list pos:start="603:37" pos:end="603:55">(<argument pos:start="603:38" pos:end="603:40"><expr pos:start="603:38" pos:end="603:40"><name pos:start="603:38" pos:end="603:40">fp0</name></expr></argument>, <argument pos:start="603:43" pos:end="603:49"><expr pos:start="603:43" pos:end="603:49"><name pos:start="603:43" pos:end="603:49">cpu_env</name></expr></argument>, <argument pos:start="603:52" pos:end="603:54"><expr pos:start="603:52" pos:end="603:54"><name pos:start="603:52" pos:end="603:54">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="605:13" pos:end="605:37"><expr pos:start="605:13" pos:end="605:36"><call pos:start="605:13" pos:end="605:36"><name pos:start="605:13" pos:end="605:27">gen_store_fpr32</name><argument_list pos:start="605:28" pos:end="605:36">(<argument pos:start="605:29" pos:end="605:31"><expr pos:start="605:29" pos:end="605:31"><name pos:start="605:29" pos:end="605:31">fp0</name></expr></argument>, <argument pos:start="605:34" pos:end="605:35"><expr pos:start="605:34" pos:end="605:35"><name pos:start="605:34" pos:end="605:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="607:13" pos:end="607:35"><expr pos:start="607:13" pos:end="607:34"><call pos:start="607:13" pos:end="607:34"><name pos:start="607:13" pos:end="607:29">tcg_temp_free_i32</name><argument_list pos:start="607:30" pos:end="607:34">(<argument pos:start="607:31" pos:end="607:33"><expr pos:start="607:31" pos:end="607:33"><name pos:start="607:31" pos:end="607:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="611:9" pos:end="611:24"><expr pos:start="611:9" pos:end="611:23"><name pos:start="611:9" pos:end="611:11">opn</name> <operator pos:start="611:13" pos:end="611:13">=</operator> <literal type="string" pos:start="611:15" pos:end="611:23">"rsqrt.s"</literal></expr>;</expr_stmt>

        <break pos:start="613:9" pos:end="613:14">break;</break>

    <case pos:start="615:5" pos:end="615:22">case <expr pos:start="615:10" pos:end="615:21"><name pos:start="615:10" pos:end="615:21">OPC_RECIP2_S</name></expr>:</case>

        <expr_stmt pos:start="617:9" pos:end="617:33"><expr pos:start="617:9" pos:end="617:32"><call pos:start="617:9" pos:end="617:32"><name pos:start="617:9" pos:end="617:27">check_cp1_64bitmode</name><argument_list pos:start="617:28" pos:end="617:32">(<argument pos:start="617:29" pos:end="617:31"><expr pos:start="617:29" pos:end="617:31"><name pos:start="617:29" pos:end="617:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="619:9" pos:end="639:9">{<block_content pos:start="621:13" pos:end="637:35">

            <decl_stmt pos:start="621:13" pos:end="621:46"><decl pos:start="621:13" pos:end="621:45"><type pos:start="621:13" pos:end="621:20"><name pos:start="621:13" pos:end="621:20">TCGv_i32</name></type> <name pos:start="621:22" pos:end="621:24">fp0</name> <init pos:start="621:26" pos:end="621:45">= <expr pos:start="621:28" pos:end="621:45"><call pos:start="621:28" pos:end="621:45"><name pos:start="621:28" pos:end="621:43">tcg_temp_new_i32</name><argument_list pos:start="621:44" pos:end="621:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="623:13" pos:end="623:46"><decl pos:start="623:13" pos:end="623:45"><type pos:start="623:13" pos:end="623:20"><name pos:start="623:13" pos:end="623:20">TCGv_i32</name></type> <name pos:start="623:22" pos:end="623:24">fp1</name> <init pos:start="623:26" pos:end="623:45">= <expr pos:start="623:28" pos:end="623:45"><call pos:start="623:28" pos:end="623:45"><name pos:start="623:28" pos:end="623:43">tcg_temp_new_i32</name><argument_list pos:start="623:44" pos:end="623:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="627:13" pos:end="627:36"><expr pos:start="627:13" pos:end="627:35"><call pos:start="627:13" pos:end="627:35"><name pos:start="627:13" pos:end="627:26">gen_load_fpr32</name><argument_list pos:start="627:27" pos:end="627:35">(<argument pos:start="627:28" pos:end="627:30"><expr pos:start="627:28" pos:end="627:30"><name pos:start="627:28" pos:end="627:30">fp0</name></expr></argument>, <argument pos:start="627:33" pos:end="627:34"><expr pos:start="627:33" pos:end="627:34"><name pos:start="627:33" pos:end="627:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="629:13" pos:end="629:36"><expr pos:start="629:13" pos:end="629:35"><call pos:start="629:13" pos:end="629:35"><name pos:start="629:13" pos:end="629:26">gen_load_fpr32</name><argument_list pos:start="629:27" pos:end="629:35">(<argument pos:start="629:28" pos:end="629:30"><expr pos:start="629:28" pos:end="629:30"><name pos:start="629:28" pos:end="629:30">fp1</name></expr></argument>, <argument pos:start="629:33" pos:end="629:34"><expr pos:start="629:33" pos:end="629:34"><name pos:start="629:33" pos:end="629:34">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="631:13" pos:end="631:62"><expr pos:start="631:13" pos:end="631:61"><call pos:start="631:13" pos:end="631:61"><name pos:start="631:13" pos:end="631:37">gen_helper_float_recip2_s</name><argument_list pos:start="631:38" pos:end="631:61">(<argument pos:start="631:39" pos:end="631:41"><expr pos:start="631:39" pos:end="631:41"><name pos:start="631:39" pos:end="631:41">fp0</name></expr></argument>, <argument pos:start="631:44" pos:end="631:50"><expr pos:start="631:44" pos:end="631:50"><name pos:start="631:44" pos:end="631:50">cpu_env</name></expr></argument>, <argument pos:start="631:53" pos:end="631:55"><expr pos:start="631:53" pos:end="631:55"><name pos:start="631:53" pos:end="631:55">fp0</name></expr></argument>, <argument pos:start="631:58" pos:end="631:60"><expr pos:start="631:58" pos:end="631:60"><name pos:start="631:58" pos:end="631:60">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="633:13" pos:end="633:35"><expr pos:start="633:13" pos:end="633:34"><call pos:start="633:13" pos:end="633:34"><name pos:start="633:13" pos:end="633:29">tcg_temp_free_i32</name><argument_list pos:start="633:30" pos:end="633:34">(<argument pos:start="633:31" pos:end="633:33"><expr pos:start="633:31" pos:end="633:33"><name pos:start="633:31" pos:end="633:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="635:13" pos:end="635:37"><expr pos:start="635:13" pos:end="635:36"><call pos:start="635:13" pos:end="635:36"><name pos:start="635:13" pos:end="635:27">gen_store_fpr32</name><argument_list pos:start="635:28" pos:end="635:36">(<argument pos:start="635:29" pos:end="635:31"><expr pos:start="635:29" pos:end="635:31"><name pos:start="635:29" pos:end="635:31">fp0</name></expr></argument>, <argument pos:start="635:34" pos:end="635:35"><expr pos:start="635:34" pos:end="635:35"><name pos:start="635:34" pos:end="635:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="637:13" pos:end="637:35"><expr pos:start="637:13" pos:end="637:34"><call pos:start="637:13" pos:end="637:34"><name pos:start="637:13" pos:end="637:29">tcg_temp_free_i32</name><argument_list pos:start="637:30" pos:end="637:34">(<argument pos:start="637:31" pos:end="637:33"><expr pos:start="637:31" pos:end="637:33"><name pos:start="637:31" pos:end="637:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="641:9" pos:end="641:25"><expr pos:start="641:9" pos:end="641:24"><name pos:start="641:9" pos:end="641:11">opn</name> <operator pos:start="641:13" pos:end="641:13">=</operator> <literal type="string" pos:start="641:15" pos:end="641:24">"recip2.s"</literal></expr>;</expr_stmt>

        <break pos:start="643:9" pos:end="643:14">break;</break>

    <case pos:start="645:5" pos:end="645:22">case <expr pos:start="645:10" pos:end="645:21"><name pos:start="645:10" pos:end="645:21">OPC_RECIP1_S</name></expr>:</case>

        <expr_stmt pos:start="647:9" pos:end="647:33"><expr pos:start="647:9" pos:end="647:32"><call pos:start="647:9" pos:end="647:32"><name pos:start="647:9" pos:end="647:27">check_cp1_64bitmode</name><argument_list pos:start="647:28" pos:end="647:32">(<argument pos:start="647:29" pos:end="647:31"><expr pos:start="647:29" pos:end="647:31"><name pos:start="647:29" pos:end="647:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="649:9" pos:end="663:9">{<block_content pos:start="651:13" pos:end="661:35">

            <decl_stmt pos:start="651:13" pos:end="651:46"><decl pos:start="651:13" pos:end="651:45"><type pos:start="651:13" pos:end="651:20"><name pos:start="651:13" pos:end="651:20">TCGv_i32</name></type> <name pos:start="651:22" pos:end="651:24">fp0</name> <init pos:start="651:26" pos:end="651:45">= <expr pos:start="651:28" pos:end="651:45"><call pos:start="651:28" pos:end="651:45"><name pos:start="651:28" pos:end="651:43">tcg_temp_new_i32</name><argument_list pos:start="651:44" pos:end="651:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="655:13" pos:end="655:36"><expr pos:start="655:13" pos:end="655:35"><call pos:start="655:13" pos:end="655:35"><name pos:start="655:13" pos:end="655:26">gen_load_fpr32</name><argument_list pos:start="655:27" pos:end="655:35">(<argument pos:start="655:28" pos:end="655:30"><expr pos:start="655:28" pos:end="655:30"><name pos:start="655:28" pos:end="655:30">fp0</name></expr></argument>, <argument pos:start="655:33" pos:end="655:34"><expr pos:start="655:33" pos:end="655:34"><name pos:start="655:33" pos:end="655:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="657:13" pos:end="657:57"><expr pos:start="657:13" pos:end="657:56"><call pos:start="657:13" pos:end="657:56"><name pos:start="657:13" pos:end="657:37">gen_helper_float_recip1_s</name><argument_list pos:start="657:38" pos:end="657:56">(<argument pos:start="657:39" pos:end="657:41"><expr pos:start="657:39" pos:end="657:41"><name pos:start="657:39" pos:end="657:41">fp0</name></expr></argument>, <argument pos:start="657:44" pos:end="657:50"><expr pos:start="657:44" pos:end="657:50"><name pos:start="657:44" pos:end="657:50">cpu_env</name></expr></argument>, <argument pos:start="657:53" pos:end="657:55"><expr pos:start="657:53" pos:end="657:55"><name pos:start="657:53" pos:end="657:55">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="659:13" pos:end="659:37"><expr pos:start="659:13" pos:end="659:36"><call pos:start="659:13" pos:end="659:36"><name pos:start="659:13" pos:end="659:27">gen_store_fpr32</name><argument_list pos:start="659:28" pos:end="659:36">(<argument pos:start="659:29" pos:end="659:31"><expr pos:start="659:29" pos:end="659:31"><name pos:start="659:29" pos:end="659:31">fp0</name></expr></argument>, <argument pos:start="659:34" pos:end="659:35"><expr pos:start="659:34" pos:end="659:35"><name pos:start="659:34" pos:end="659:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="661:13" pos:end="661:35"><expr pos:start="661:13" pos:end="661:34"><call pos:start="661:13" pos:end="661:34"><name pos:start="661:13" pos:end="661:29">tcg_temp_free_i32</name><argument_list pos:start="661:30" pos:end="661:34">(<argument pos:start="661:31" pos:end="661:33"><expr pos:start="661:31" pos:end="661:33"><name pos:start="661:31" pos:end="661:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="665:9" pos:end="665:25"><expr pos:start="665:9" pos:end="665:24"><name pos:start="665:9" pos:end="665:11">opn</name> <operator pos:start="665:13" pos:end="665:13">=</operator> <literal type="string" pos:start="665:15" pos:end="665:24">"recip1.s"</literal></expr>;</expr_stmt>

        <break pos:start="667:9" pos:end="667:14">break;</break>

    <case pos:start="669:5" pos:end="669:22">case <expr pos:start="669:10" pos:end="669:21"><name pos:start="669:10" pos:end="669:21">OPC_RSQRT1_S</name></expr>:</case>

        <expr_stmt pos:start="671:9" pos:end="671:33"><expr pos:start="671:9" pos:end="671:32"><call pos:start="671:9" pos:end="671:32"><name pos:start="671:9" pos:end="671:27">check_cp1_64bitmode</name><argument_list pos:start="671:28" pos:end="671:32">(<argument pos:start="671:29" pos:end="671:31"><expr pos:start="671:29" pos:end="671:31"><name pos:start="671:29" pos:end="671:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="673:9" pos:end="687:9">{<block_content pos:start="675:13" pos:end="685:35">

            <decl_stmt pos:start="675:13" pos:end="675:46"><decl pos:start="675:13" pos:end="675:45"><type pos:start="675:13" pos:end="675:20"><name pos:start="675:13" pos:end="675:20">TCGv_i32</name></type> <name pos:start="675:22" pos:end="675:24">fp0</name> <init pos:start="675:26" pos:end="675:45">= <expr pos:start="675:28" pos:end="675:45"><call pos:start="675:28" pos:end="675:45"><name pos:start="675:28" pos:end="675:43">tcg_temp_new_i32</name><argument_list pos:start="675:44" pos:end="675:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="679:13" pos:end="679:36"><expr pos:start="679:13" pos:end="679:35"><call pos:start="679:13" pos:end="679:35"><name pos:start="679:13" pos:end="679:26">gen_load_fpr32</name><argument_list pos:start="679:27" pos:end="679:35">(<argument pos:start="679:28" pos:end="679:30"><expr pos:start="679:28" pos:end="679:30"><name pos:start="679:28" pos:end="679:30">fp0</name></expr></argument>, <argument pos:start="679:33" pos:end="679:34"><expr pos:start="679:33" pos:end="679:34"><name pos:start="679:33" pos:end="679:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="681:13" pos:end="681:57"><expr pos:start="681:13" pos:end="681:56"><call pos:start="681:13" pos:end="681:56"><name pos:start="681:13" pos:end="681:37">gen_helper_float_rsqrt1_s</name><argument_list pos:start="681:38" pos:end="681:56">(<argument pos:start="681:39" pos:end="681:41"><expr pos:start="681:39" pos:end="681:41"><name pos:start="681:39" pos:end="681:41">fp0</name></expr></argument>, <argument pos:start="681:44" pos:end="681:50"><expr pos:start="681:44" pos:end="681:50"><name pos:start="681:44" pos:end="681:50">cpu_env</name></expr></argument>, <argument pos:start="681:53" pos:end="681:55"><expr pos:start="681:53" pos:end="681:55"><name pos:start="681:53" pos:end="681:55">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="683:13" pos:end="683:37"><expr pos:start="683:13" pos:end="683:36"><call pos:start="683:13" pos:end="683:36"><name pos:start="683:13" pos:end="683:27">gen_store_fpr32</name><argument_list pos:start="683:28" pos:end="683:36">(<argument pos:start="683:29" pos:end="683:31"><expr pos:start="683:29" pos:end="683:31"><name pos:start="683:29" pos:end="683:31">fp0</name></expr></argument>, <argument pos:start="683:34" pos:end="683:35"><expr pos:start="683:34" pos:end="683:35"><name pos:start="683:34" pos:end="683:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="685:13" pos:end="685:35"><expr pos:start="685:13" pos:end="685:34"><call pos:start="685:13" pos:end="685:34"><name pos:start="685:13" pos:end="685:29">tcg_temp_free_i32</name><argument_list pos:start="685:30" pos:end="685:34">(<argument pos:start="685:31" pos:end="685:33"><expr pos:start="685:31" pos:end="685:33"><name pos:start="685:31" pos:end="685:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="689:9" pos:end="689:25"><expr pos:start="689:9" pos:end="689:24"><name pos:start="689:9" pos:end="689:11">opn</name> <operator pos:start="689:13" pos:end="689:13">=</operator> <literal type="string" pos:start="689:15" pos:end="689:24">"rsqrt1.s"</literal></expr>;</expr_stmt>

        <break pos:start="691:9" pos:end="691:14">break;</break>

    <case pos:start="693:5" pos:end="693:22">case <expr pos:start="693:10" pos:end="693:21"><name pos:start="693:10" pos:end="693:21">OPC_RSQRT2_S</name></expr>:</case>

        <expr_stmt pos:start="695:9" pos:end="695:33"><expr pos:start="695:9" pos:end="695:32"><call pos:start="695:9" pos:end="695:32"><name pos:start="695:9" pos:end="695:27">check_cp1_64bitmode</name><argument_list pos:start="695:28" pos:end="695:32">(<argument pos:start="695:29" pos:end="695:31"><expr pos:start="695:29" pos:end="695:31"><name pos:start="695:29" pos:end="695:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="697:9" pos:end="717:9">{<block_content pos:start="699:13" pos:end="715:35">

            <decl_stmt pos:start="699:13" pos:end="699:46"><decl pos:start="699:13" pos:end="699:45"><type pos:start="699:13" pos:end="699:20"><name pos:start="699:13" pos:end="699:20">TCGv_i32</name></type> <name pos:start="699:22" pos:end="699:24">fp0</name> <init pos:start="699:26" pos:end="699:45">= <expr pos:start="699:28" pos:end="699:45"><call pos:start="699:28" pos:end="699:45"><name pos:start="699:28" pos:end="699:43">tcg_temp_new_i32</name><argument_list pos:start="699:44" pos:end="699:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="701:13" pos:end="701:46"><decl pos:start="701:13" pos:end="701:45"><type pos:start="701:13" pos:end="701:20"><name pos:start="701:13" pos:end="701:20">TCGv_i32</name></type> <name pos:start="701:22" pos:end="701:24">fp1</name> <init pos:start="701:26" pos:end="701:45">= <expr pos:start="701:28" pos:end="701:45"><call pos:start="701:28" pos:end="701:45"><name pos:start="701:28" pos:end="701:43">tcg_temp_new_i32</name><argument_list pos:start="701:44" pos:end="701:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="705:13" pos:end="705:36"><expr pos:start="705:13" pos:end="705:35"><call pos:start="705:13" pos:end="705:35"><name pos:start="705:13" pos:end="705:26">gen_load_fpr32</name><argument_list pos:start="705:27" pos:end="705:35">(<argument pos:start="705:28" pos:end="705:30"><expr pos:start="705:28" pos:end="705:30"><name pos:start="705:28" pos:end="705:30">fp0</name></expr></argument>, <argument pos:start="705:33" pos:end="705:34"><expr pos:start="705:33" pos:end="705:34"><name pos:start="705:33" pos:end="705:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="707:13" pos:end="707:36"><expr pos:start="707:13" pos:end="707:35"><call pos:start="707:13" pos:end="707:35"><name pos:start="707:13" pos:end="707:26">gen_load_fpr32</name><argument_list pos:start="707:27" pos:end="707:35">(<argument pos:start="707:28" pos:end="707:30"><expr pos:start="707:28" pos:end="707:30"><name pos:start="707:28" pos:end="707:30">fp1</name></expr></argument>, <argument pos:start="707:33" pos:end="707:34"><expr pos:start="707:33" pos:end="707:34"><name pos:start="707:33" pos:end="707:34">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="709:13" pos:end="709:62"><expr pos:start="709:13" pos:end="709:61"><call pos:start="709:13" pos:end="709:61"><name pos:start="709:13" pos:end="709:37">gen_helper_float_rsqrt2_s</name><argument_list pos:start="709:38" pos:end="709:61">(<argument pos:start="709:39" pos:end="709:41"><expr pos:start="709:39" pos:end="709:41"><name pos:start="709:39" pos:end="709:41">fp0</name></expr></argument>, <argument pos:start="709:44" pos:end="709:50"><expr pos:start="709:44" pos:end="709:50"><name pos:start="709:44" pos:end="709:50">cpu_env</name></expr></argument>, <argument pos:start="709:53" pos:end="709:55"><expr pos:start="709:53" pos:end="709:55"><name pos:start="709:53" pos:end="709:55">fp0</name></expr></argument>, <argument pos:start="709:58" pos:end="709:60"><expr pos:start="709:58" pos:end="709:60"><name pos:start="709:58" pos:end="709:60">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="711:13" pos:end="711:35"><expr pos:start="711:13" pos:end="711:34"><call pos:start="711:13" pos:end="711:34"><name pos:start="711:13" pos:end="711:29">tcg_temp_free_i32</name><argument_list pos:start="711:30" pos:end="711:34">(<argument pos:start="711:31" pos:end="711:33"><expr pos:start="711:31" pos:end="711:33"><name pos:start="711:31" pos:end="711:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="713:13" pos:end="713:37"><expr pos:start="713:13" pos:end="713:36"><call pos:start="713:13" pos:end="713:36"><name pos:start="713:13" pos:end="713:27">gen_store_fpr32</name><argument_list pos:start="713:28" pos:end="713:36">(<argument pos:start="713:29" pos:end="713:31"><expr pos:start="713:29" pos:end="713:31"><name pos:start="713:29" pos:end="713:31">fp0</name></expr></argument>, <argument pos:start="713:34" pos:end="713:35"><expr pos:start="713:34" pos:end="713:35"><name pos:start="713:34" pos:end="713:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="715:13" pos:end="715:35"><expr pos:start="715:13" pos:end="715:34"><call pos:start="715:13" pos:end="715:34"><name pos:start="715:13" pos:end="715:29">tcg_temp_free_i32</name><argument_list pos:start="715:30" pos:end="715:34">(<argument pos:start="715:31" pos:end="715:33"><expr pos:start="715:31" pos:end="715:33"><name pos:start="715:31" pos:end="715:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="719:9" pos:end="719:25"><expr pos:start="719:9" pos:end="719:24"><name pos:start="719:9" pos:end="719:11">opn</name> <operator pos:start="719:13" pos:end="719:13">=</operator> <literal type="string" pos:start="719:15" pos:end="719:24">"rsqrt2.s"</literal></expr>;</expr_stmt>

        <break pos:start="721:9" pos:end="721:14">break;</break>

    <case pos:start="723:5" pos:end="723:21">case <expr pos:start="723:10" pos:end="723:20"><name pos:start="723:10" pos:end="723:20">OPC_CVT_D_S</name></expr>:</case>

        <expr_stmt pos:start="725:9" pos:end="725:37"><expr pos:start="725:9" pos:end="725:36"><call pos:start="725:9" pos:end="725:36"><name pos:start="725:9" pos:end="725:27">check_cp1_registers</name><argument_list pos:start="725:28" pos:end="725:36">(<argument pos:start="725:29" pos:end="725:31"><expr pos:start="725:29" pos:end="725:31"><name pos:start="725:29" pos:end="725:31">ctx</name></expr></argument>, <argument pos:start="725:34" pos:end="725:35"><expr pos:start="725:34" pos:end="725:35"><name pos:start="725:34" pos:end="725:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="727:9" pos:end="745:9">{<block_content pos:start="729:13" pos:end="743:36">

            <decl_stmt pos:start="729:13" pos:end="729:47"><decl pos:start="729:13" pos:end="729:46"><type pos:start="729:13" pos:end="729:20"><name pos:start="729:13" pos:end="729:20">TCGv_i32</name></type> <name pos:start="729:22" pos:end="729:25">fp32</name> <init pos:start="729:27" pos:end="729:46">= <expr pos:start="729:29" pos:end="729:46"><call pos:start="729:29" pos:end="729:46"><name pos:start="729:29" pos:end="729:44">tcg_temp_new_i32</name><argument_list pos:start="729:45" pos:end="729:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="731:13" pos:end="731:47"><decl pos:start="731:13" pos:end="731:46"><type pos:start="731:13" pos:end="731:20"><name pos:start="731:13" pos:end="731:20">TCGv_i64</name></type> <name pos:start="731:22" pos:end="731:25">fp64</name> <init pos:start="731:27" pos:end="731:46">= <expr pos:start="731:29" pos:end="731:46"><call pos:start="731:29" pos:end="731:46"><name pos:start="731:29" pos:end="731:44">tcg_temp_new_i64</name><argument_list pos:start="731:45" pos:end="731:46">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="735:13" pos:end="735:37"><expr pos:start="735:13" pos:end="735:36"><call pos:start="735:13" pos:end="735:36"><name pos:start="735:13" pos:end="735:26">gen_load_fpr32</name><argument_list pos:start="735:27" pos:end="735:36">(<argument pos:start="735:28" pos:end="735:31"><expr pos:start="735:28" pos:end="735:31"><name pos:start="735:28" pos:end="735:31">fp32</name></expr></argument>, <argument pos:start="735:34" pos:end="735:35"><expr pos:start="735:34" pos:end="735:35"><name pos:start="735:34" pos:end="735:35">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="737:13" pos:end="737:57"><expr pos:start="737:13" pos:end="737:56"><call pos:start="737:13" pos:end="737:56"><name pos:start="737:13" pos:end="737:35">gen_helper_float_cvtd_s</name><argument_list pos:start="737:36" pos:end="737:56">(<argument pos:start="737:37" pos:end="737:40"><expr pos:start="737:37" pos:end="737:40"><name pos:start="737:37" pos:end="737:40">fp64</name></expr></argument>, <argument pos:start="737:43" pos:end="737:49"><expr pos:start="737:43" pos:end="737:49"><name pos:start="737:43" pos:end="737:49">cpu_env</name></expr></argument>, <argument pos:start="737:52" pos:end="737:55"><expr pos:start="737:52" pos:end="737:55"><name pos:start="737:52" pos:end="737:55">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="739:13" pos:end="739:36"><expr pos:start="739:13" pos:end="739:35"><call pos:start="739:13" pos:end="739:35"><name pos:start="739:13" pos:end="739:29">tcg_temp_free_i32</name><argument_list pos:start="739:30" pos:end="739:35">(<argument pos:start="739:31" pos:end="739:34"><expr pos:start="739:31" pos:end="739:34"><name pos:start="739:31" pos:end="739:34">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="741:13" pos:end="741:43"><expr pos:start="741:13" pos:end="741:42"><call pos:start="741:13" pos:end="741:42"><name pos:start="741:13" pos:end="741:27">gen_store_fpr64</name><argument_list pos:start="741:28" pos:end="741:42">(<argument pos:start="741:29" pos:end="741:31"><expr pos:start="741:29" pos:end="741:31"><name pos:start="741:29" pos:end="741:31">ctx</name></expr></argument>, <argument pos:start="741:34" pos:end="741:37"><expr pos:start="741:34" pos:end="741:37"><name pos:start="741:34" pos:end="741:37">fp64</name></expr></argument>, <argument pos:start="741:40" pos:end="741:41"><expr pos:start="741:40" pos:end="741:41"><name pos:start="741:40" pos:end="741:41">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="743:13" pos:end="743:36"><expr pos:start="743:13" pos:end="743:35"><call pos:start="743:13" pos:end="743:35"><name pos:start="743:13" pos:end="743:29">tcg_temp_free_i64</name><argument_list pos:start="743:30" pos:end="743:35">(<argument pos:start="743:31" pos:end="743:34"><expr pos:start="743:31" pos:end="743:34"><name pos:start="743:31" pos:end="743:34">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="747:9" pos:end="747:24"><expr pos:start="747:9" pos:end="747:23"><name pos:start="747:9" pos:end="747:11">opn</name> <operator pos:start="747:13" pos:end="747:13">=</operator> <literal type="string" pos:start="747:15" pos:end="747:23">"cvt.d.s"</literal></expr>;</expr_stmt>

        <break pos:start="749:9" pos:end="749:14">break;</break>

    <case pos:start="751:5" pos:end="751:21">case <expr pos:start="751:10" pos:end="751:20"><name pos:start="751:10" pos:end="751:20">OPC_CVT_W_S</name></expr>:</case>

        <block pos:start="753:9" pos:end="767:9">{<block_content pos:start="755:13" pos:end="765:35">

            <decl_stmt pos:start="755:13" pos:end="755:46"><decl pos:start="755:13" pos:end="755:45"><type pos:start="755:13" pos:end="755:20"><name pos:start="755:13" pos:end="755:20">TCGv_i32</name></type> <name pos:start="755:22" pos:end="755:24">fp0</name> <init pos:start="755:26" pos:end="755:45">= <expr pos:start="755:28" pos:end="755:45"><call pos:start="755:28" pos:end="755:45"><name pos:start="755:28" pos:end="755:43">tcg_temp_new_i32</name><argument_list pos:start="755:44" pos:end="755:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="759:13" pos:end="759:36"><expr pos:start="759:13" pos:end="759:35"><call pos:start="759:13" pos:end="759:35"><name pos:start="759:13" pos:end="759:26">gen_load_fpr32</name><argument_list pos:start="759:27" pos:end="759:35">(<argument pos:start="759:28" pos:end="759:30"><expr pos:start="759:28" pos:end="759:30"><name pos:start="759:28" pos:end="759:30">fp0</name></expr></argument>, <argument pos:start="759:33" pos:end="759:34"><expr pos:start="759:33" pos:end="759:34"><name pos:start="759:33" pos:end="759:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="761:13" pos:end="761:55"><expr pos:start="761:13" pos:end="761:54"><call pos:start="761:13" pos:end="761:54"><name pos:start="761:13" pos:end="761:35">gen_helper_float_cvtw_s</name><argument_list pos:start="761:36" pos:end="761:54">(<argument pos:start="761:37" pos:end="761:39"><expr pos:start="761:37" pos:end="761:39"><name pos:start="761:37" pos:end="761:39">fp0</name></expr></argument>, <argument pos:start="761:42" pos:end="761:48"><expr pos:start="761:42" pos:end="761:48"><name pos:start="761:42" pos:end="761:48">cpu_env</name></expr></argument>, <argument pos:start="761:51" pos:end="761:53"><expr pos:start="761:51" pos:end="761:53"><name pos:start="761:51" pos:end="761:53">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="763:13" pos:end="763:37"><expr pos:start="763:13" pos:end="763:36"><call pos:start="763:13" pos:end="763:36"><name pos:start="763:13" pos:end="763:27">gen_store_fpr32</name><argument_list pos:start="763:28" pos:end="763:36">(<argument pos:start="763:29" pos:end="763:31"><expr pos:start="763:29" pos:end="763:31"><name pos:start="763:29" pos:end="763:31">fp0</name></expr></argument>, <argument pos:start="763:34" pos:end="763:35"><expr pos:start="763:34" pos:end="763:35"><name pos:start="763:34" pos:end="763:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="765:13" pos:end="765:35"><expr pos:start="765:13" pos:end="765:34"><call pos:start="765:13" pos:end="765:34"><name pos:start="765:13" pos:end="765:29">tcg_temp_free_i32</name><argument_list pos:start="765:30" pos:end="765:34">(<argument pos:start="765:31" pos:end="765:33"><expr pos:start="765:31" pos:end="765:33"><name pos:start="765:31" pos:end="765:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="769:9" pos:end="769:24"><expr pos:start="769:9" pos:end="769:23"><name pos:start="769:9" pos:end="769:11">opn</name> <operator pos:start="769:13" pos:end="769:13">=</operator> <literal type="string" pos:start="769:15" pos:end="769:23">"cvt.w.s"</literal></expr>;</expr_stmt>

        <break pos:start="771:9" pos:end="771:14">break;</break>

    <case pos:start="773:5" pos:end="773:21">case <expr pos:start="773:10" pos:end="773:20"><name pos:start="773:10" pos:end="773:20">OPC_CVT_L_S</name></expr>:</case>

        <expr_stmt pos:start="775:9" pos:end="775:33"><expr pos:start="775:9" pos:end="775:32"><call pos:start="775:9" pos:end="775:32"><name pos:start="775:9" pos:end="775:27">check_cp1_64bitmode</name><argument_list pos:start="775:28" pos:end="775:32">(<argument pos:start="775:29" pos:end="775:31"><expr pos:start="775:29" pos:end="775:31"><name pos:start="775:29" pos:end="775:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="777:9" pos:end="795:9">{<block_content pos:start="779:13" pos:end="793:36">

            <decl_stmt pos:start="779:13" pos:end="779:47"><decl pos:start="779:13" pos:end="779:46"><type pos:start="779:13" pos:end="779:20"><name pos:start="779:13" pos:end="779:20">TCGv_i32</name></type> <name pos:start="779:22" pos:end="779:25">fp32</name> <init pos:start="779:27" pos:end="779:46">= <expr pos:start="779:29" pos:end="779:46"><call pos:start="779:29" pos:end="779:46"><name pos:start="779:29" pos:end="779:44">tcg_temp_new_i32</name><argument_list pos:start="779:45" pos:end="779:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="781:13" pos:end="781:47"><decl pos:start="781:13" pos:end="781:46"><type pos:start="781:13" pos:end="781:20"><name pos:start="781:13" pos:end="781:20">TCGv_i64</name></type> <name pos:start="781:22" pos:end="781:25">fp64</name> <init pos:start="781:27" pos:end="781:46">= <expr pos:start="781:29" pos:end="781:46"><call pos:start="781:29" pos:end="781:46"><name pos:start="781:29" pos:end="781:44">tcg_temp_new_i64</name><argument_list pos:start="781:45" pos:end="781:46">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="785:13" pos:end="785:37"><expr pos:start="785:13" pos:end="785:36"><call pos:start="785:13" pos:end="785:36"><name pos:start="785:13" pos:end="785:26">gen_load_fpr32</name><argument_list pos:start="785:27" pos:end="785:36">(<argument pos:start="785:28" pos:end="785:31"><expr pos:start="785:28" pos:end="785:31"><name pos:start="785:28" pos:end="785:31">fp32</name></expr></argument>, <argument pos:start="785:34" pos:end="785:35"><expr pos:start="785:34" pos:end="785:35"><name pos:start="785:34" pos:end="785:35">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="787:13" pos:end="787:57"><expr pos:start="787:13" pos:end="787:56"><call pos:start="787:13" pos:end="787:56"><name pos:start="787:13" pos:end="787:35">gen_helper_float_cvtl_s</name><argument_list pos:start="787:36" pos:end="787:56">(<argument pos:start="787:37" pos:end="787:40"><expr pos:start="787:37" pos:end="787:40"><name pos:start="787:37" pos:end="787:40">fp64</name></expr></argument>, <argument pos:start="787:43" pos:end="787:49"><expr pos:start="787:43" pos:end="787:49"><name pos:start="787:43" pos:end="787:49">cpu_env</name></expr></argument>, <argument pos:start="787:52" pos:end="787:55"><expr pos:start="787:52" pos:end="787:55"><name pos:start="787:52" pos:end="787:55">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="789:13" pos:end="789:36"><expr pos:start="789:13" pos:end="789:35"><call pos:start="789:13" pos:end="789:35"><name pos:start="789:13" pos:end="789:29">tcg_temp_free_i32</name><argument_list pos:start="789:30" pos:end="789:35">(<argument pos:start="789:31" pos:end="789:34"><expr pos:start="789:31" pos:end="789:34"><name pos:start="789:31" pos:end="789:34">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="791:13" pos:end="791:43"><expr pos:start="791:13" pos:end="791:42"><call pos:start="791:13" pos:end="791:42"><name pos:start="791:13" pos:end="791:27">gen_store_fpr64</name><argument_list pos:start="791:28" pos:end="791:42">(<argument pos:start="791:29" pos:end="791:31"><expr pos:start="791:29" pos:end="791:31"><name pos:start="791:29" pos:end="791:31">ctx</name></expr></argument>, <argument pos:start="791:34" pos:end="791:37"><expr pos:start="791:34" pos:end="791:37"><name pos:start="791:34" pos:end="791:37">fp64</name></expr></argument>, <argument pos:start="791:40" pos:end="791:41"><expr pos:start="791:40" pos:end="791:41"><name pos:start="791:40" pos:end="791:41">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="793:13" pos:end="793:36"><expr pos:start="793:13" pos:end="793:35"><call pos:start="793:13" pos:end="793:35"><name pos:start="793:13" pos:end="793:29">tcg_temp_free_i64</name><argument_list pos:start="793:30" pos:end="793:35">(<argument pos:start="793:31" pos:end="793:34"><expr pos:start="793:31" pos:end="793:34"><name pos:start="793:31" pos:end="793:34">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="797:9" pos:end="797:24"><expr pos:start="797:9" pos:end="797:23"><name pos:start="797:9" pos:end="797:11">opn</name> <operator pos:start="797:13" pos:end="797:13">=</operator> <literal type="string" pos:start="797:15" pos:end="797:23">"cvt.l.s"</literal></expr>;</expr_stmt>

        <break pos:start="799:9" pos:end="799:14">break;</break>

    <case pos:start="801:5" pos:end="801:22">case <expr pos:start="801:10" pos:end="801:21"><name pos:start="801:10" pos:end="801:21">OPC_CVT_PS_S</name></expr>:</case>

        <expr_stmt pos:start="803:9" pos:end="803:33"><expr pos:start="803:9" pos:end="803:32"><call pos:start="803:9" pos:end="803:32"><name pos:start="803:9" pos:end="803:27">check_cp1_64bitmode</name><argument_list pos:start="803:28" pos:end="803:32">(<argument pos:start="803:29" pos:end="803:31"><expr pos:start="803:29" pos:end="803:31"><name pos:start="803:29" pos:end="803:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="805:9" pos:end="829:9">{<block_content pos:start="807:13" pos:end="827:36">

            <decl_stmt pos:start="807:13" pos:end="807:47"><decl pos:start="807:13" pos:end="807:46"><type pos:start="807:13" pos:end="807:20"><name pos:start="807:13" pos:end="807:20">TCGv_i64</name></type> <name pos:start="807:22" pos:end="807:25">fp64</name> <init pos:start="807:27" pos:end="807:46">= <expr pos:start="807:29" pos:end="807:46"><call pos:start="807:29" pos:end="807:46"><name pos:start="807:29" pos:end="807:44">tcg_temp_new_i64</name><argument_list pos:start="807:45" pos:end="807:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="809:13" pos:end="809:49"><decl pos:start="809:13" pos:end="809:48"><type pos:start="809:13" pos:end="809:20"><name pos:start="809:13" pos:end="809:20">TCGv_i32</name></type> <name pos:start="809:22" pos:end="809:27">fp32_0</name> <init pos:start="809:29" pos:end="809:48">= <expr pos:start="809:31" pos:end="809:48"><call pos:start="809:31" pos:end="809:48"><name pos:start="809:31" pos:end="809:46">tcg_temp_new_i32</name><argument_list pos:start="809:47" pos:end="809:48">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="811:13" pos:end="811:49"><decl pos:start="811:13" pos:end="811:48"><type pos:start="811:13" pos:end="811:20"><name pos:start="811:13" pos:end="811:20">TCGv_i32</name></type> <name pos:start="811:22" pos:end="811:27">fp32_1</name> <init pos:start="811:29" pos:end="811:48">= <expr pos:start="811:31" pos:end="811:48"><call pos:start="811:31" pos:end="811:48"><name pos:start="811:31" pos:end="811:46">tcg_temp_new_i32</name><argument_list pos:start="811:47" pos:end="811:48">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="815:13" pos:end="815:39"><expr pos:start="815:13" pos:end="815:38"><call pos:start="815:13" pos:end="815:38"><name pos:start="815:13" pos:end="815:26">gen_load_fpr32</name><argument_list pos:start="815:27" pos:end="815:38">(<argument pos:start="815:28" pos:end="815:33"><expr pos:start="815:28" pos:end="815:33"><name pos:start="815:28" pos:end="815:33">fp32_0</name></expr></argument>, <argument pos:start="815:36" pos:end="815:37"><expr pos:start="815:36" pos:end="815:37"><name pos:start="815:36" pos:end="815:37">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="817:13" pos:end="817:39"><expr pos:start="817:13" pos:end="817:38"><call pos:start="817:13" pos:end="817:38"><name pos:start="817:13" pos:end="817:26">gen_load_fpr32</name><argument_list pos:start="817:27" pos:end="817:38">(<argument pos:start="817:28" pos:end="817:33"><expr pos:start="817:28" pos:end="817:33"><name pos:start="817:28" pos:end="817:33">fp32_1</name></expr></argument>, <argument pos:start="817:36" pos:end="817:37"><expr pos:start="817:36" pos:end="817:37"><name pos:start="817:36" pos:end="817:37">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="819:13" pos:end="819:57"><expr pos:start="819:13" pos:end="819:56"><call pos:start="819:13" pos:end="819:56"><name pos:start="819:13" pos:end="819:34">tcg_gen_concat_i32_i64</name><argument_list pos:start="819:35" pos:end="819:56">(<argument pos:start="819:36" pos:end="819:39"><expr pos:start="819:36" pos:end="819:39"><name pos:start="819:36" pos:end="819:39">fp64</name></expr></argument>, <argument pos:start="819:42" pos:end="819:47"><expr pos:start="819:42" pos:end="819:47"><name pos:start="819:42" pos:end="819:47">fp32_1</name></expr></argument>, <argument pos:start="819:50" pos:end="819:55"><expr pos:start="819:50" pos:end="819:55"><name pos:start="819:50" pos:end="819:55">fp32_0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="821:13" pos:end="821:38"><expr pos:start="821:13" pos:end="821:37"><call pos:start="821:13" pos:end="821:37"><name pos:start="821:13" pos:end="821:29">tcg_temp_free_i32</name><argument_list pos:start="821:30" pos:end="821:37">(<argument pos:start="821:31" pos:end="821:36"><expr pos:start="821:31" pos:end="821:36"><name pos:start="821:31" pos:end="821:36">fp32_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="823:13" pos:end="823:38"><expr pos:start="823:13" pos:end="823:37"><call pos:start="823:13" pos:end="823:37"><name pos:start="823:13" pos:end="823:29">tcg_temp_free_i32</name><argument_list pos:start="823:30" pos:end="823:37">(<argument pos:start="823:31" pos:end="823:36"><expr pos:start="823:31" pos:end="823:36"><name pos:start="823:31" pos:end="823:36">fp32_0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="825:13" pos:end="825:43"><expr pos:start="825:13" pos:end="825:42"><call pos:start="825:13" pos:end="825:42"><name pos:start="825:13" pos:end="825:27">gen_store_fpr64</name><argument_list pos:start="825:28" pos:end="825:42">(<argument pos:start="825:29" pos:end="825:31"><expr pos:start="825:29" pos:end="825:31"><name pos:start="825:29" pos:end="825:31">ctx</name></expr></argument>, <argument pos:start="825:34" pos:end="825:37"><expr pos:start="825:34" pos:end="825:37"><name pos:start="825:34" pos:end="825:37">fp64</name></expr></argument>, <argument pos:start="825:40" pos:end="825:41"><expr pos:start="825:40" pos:end="825:41"><name pos:start="825:40" pos:end="825:41">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="827:13" pos:end="827:36"><expr pos:start="827:13" pos:end="827:35"><call pos:start="827:13" pos:end="827:35"><name pos:start="827:13" pos:end="827:29">tcg_temp_free_i64</name><argument_list pos:start="827:30" pos:end="827:35">(<argument pos:start="827:31" pos:end="827:34"><expr pos:start="827:31" pos:end="827:34"><name pos:start="827:31" pos:end="827:34">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="831:9" pos:end="831:25"><expr pos:start="831:9" pos:end="831:24"><name pos:start="831:9" pos:end="831:11">opn</name> <operator pos:start="831:13" pos:end="831:13">=</operator> <literal type="string" pos:start="831:15" pos:end="831:24">"cvt.ps.s"</literal></expr>;</expr_stmt>

        <break pos:start="833:9" pos:end="833:14">break;</break>

    <case pos:start="835:5" pos:end="835:21">case <expr pos:start="835:10" pos:end="835:20"><name pos:start="835:10" pos:end="835:20">OPC_CMP_F_S</name></expr>:</case>

    <case pos:start="837:5" pos:end="837:22">case <expr pos:start="837:10" pos:end="837:21"><name pos:start="837:10" pos:end="837:21">OPC_CMP_UN_S</name></expr>:</case>

    <case pos:start="839:5" pos:end="839:22">case <expr pos:start="839:10" pos:end="839:21"><name pos:start="839:10" pos:end="839:21">OPC_CMP_EQ_S</name></expr>:</case>

    <case pos:start="841:5" pos:end="841:23">case <expr pos:start="841:10" pos:end="841:22"><name pos:start="841:10" pos:end="841:22">OPC_CMP_UEQ_S</name></expr>:</case>

    <case pos:start="843:5" pos:end="843:23">case <expr pos:start="843:10" pos:end="843:22"><name pos:start="843:10" pos:end="843:22">OPC_CMP_OLT_S</name></expr>:</case>

    <case pos:start="845:5" pos:end="845:23">case <expr pos:start="845:10" pos:end="845:22"><name pos:start="845:10" pos:end="845:22">OPC_CMP_ULT_S</name></expr>:</case>

    <case pos:start="847:5" pos:end="847:23">case <expr pos:start="847:10" pos:end="847:22"><name pos:start="847:10" pos:end="847:22">OPC_CMP_OLE_S</name></expr>:</case>

    <case pos:start="849:5" pos:end="849:23">case <expr pos:start="849:10" pos:end="849:22"><name pos:start="849:10" pos:end="849:22">OPC_CMP_ULE_S</name></expr>:</case>

    <case pos:start="851:5" pos:end="851:22">case <expr pos:start="851:10" pos:end="851:21"><name pos:start="851:10" pos:end="851:21">OPC_CMP_SF_S</name></expr>:</case>

    <case pos:start="853:5" pos:end="853:24">case <expr pos:start="853:10" pos:end="853:23"><name pos:start="853:10" pos:end="853:23">OPC_CMP_NGLE_S</name></expr>:</case>

    <case pos:start="855:5" pos:end="855:23">case <expr pos:start="855:10" pos:end="855:22"><name pos:start="855:10" pos:end="855:22">OPC_CMP_SEQ_S</name></expr>:</case>

    <case pos:start="857:5" pos:end="857:23">case <expr pos:start="857:10" pos:end="857:22"><name pos:start="857:10" pos:end="857:22">OPC_CMP_NGL_S</name></expr>:</case>

    <case pos:start="859:5" pos:end="859:22">case <expr pos:start="859:10" pos:end="859:21"><name pos:start="859:10" pos:end="859:21">OPC_CMP_LT_S</name></expr>:</case>

    <case pos:start="861:5" pos:end="861:23">case <expr pos:start="861:10" pos:end="861:22"><name pos:start="861:10" pos:end="861:22">OPC_CMP_NGE_S</name></expr>:</case>

    <case pos:start="863:5" pos:end="863:22">case <expr pos:start="863:10" pos:end="863:21"><name pos:start="863:10" pos:end="863:21">OPC_CMP_LE_S</name></expr>:</case>

    <case pos:start="865:5" pos:end="865:23">case <expr pos:start="865:10" pos:end="865:22"><name pos:start="865:10" pos:end="865:22">OPC_CMP_NGT_S</name></expr>:</case>

        <if_stmt pos:start="867:9" pos:end="879:9"><if pos:start="867:9" pos:end="873:9">if <condition pos:start="867:12" pos:end="867:35">(<expr pos:start="867:13" pos:end="867:34"><name pos:start="867:13" pos:end="867:23"><name pos:start="867:13" pos:end="867:15">ctx</name><operator pos:start="867:16" pos:end="867:17">-&gt;</operator><name pos:start="867:18" pos:end="867:23">opcode</name></name> <operator pos:start="867:25" pos:end="867:25">&amp;</operator> <operator pos:start="867:27" pos:end="867:27">(</operator><literal type="number" pos:start="867:28" pos:end="867:28">1</literal> <operator pos:start="867:30" pos:end="867:31">&lt;&lt;</operator> <literal type="number" pos:start="867:33" pos:end="867:33">6</literal><operator pos:start="867:34" pos:end="867:34">)</operator></expr>)</condition> <block pos:start="867:37" pos:end="873:9">{<block_content pos:start="869:13" pos:end="871:41">

            <expr_stmt pos:start="869:13" pos:end="869:51"><expr pos:start="869:13" pos:end="869:50"><call pos:start="869:13" pos:end="869:50"><name pos:start="869:13" pos:end="869:24">gen_cmpabs_s</name><argument_list pos:start="869:25" pos:end="869:50">(<argument pos:start="869:26" pos:end="869:28"><expr pos:start="869:26" pos:end="869:28"><name pos:start="869:26" pos:end="869:28">ctx</name></expr></argument>, <argument pos:start="869:31" pos:end="869:37"><expr pos:start="869:31" pos:end="869:37"><name pos:start="869:31" pos:end="869:34">func</name><operator pos:start="869:35" pos:end="869:35">-</operator><literal type="number" pos:start="869:36" pos:end="869:37">48</literal></expr></argument>, <argument pos:start="869:40" pos:end="869:41"><expr pos:start="869:40" pos:end="869:41"><name pos:start="869:40" pos:end="869:41">ft</name></expr></argument>, <argument pos:start="869:44" pos:end="869:45"><expr pos:start="869:44" pos:end="869:45"><name pos:start="869:44" pos:end="869:45">fs</name></expr></argument>, <argument pos:start="869:48" pos:end="869:49"><expr pos:start="869:48" pos:end="869:49"><name pos:start="869:48" pos:end="869:49">cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="871:13" pos:end="871:41"><expr pos:start="871:13" pos:end="871:40"><name pos:start="871:13" pos:end="871:15">opn</name> <operator pos:start="871:17" pos:end="871:17">=</operator> <name pos:start="871:19" pos:end="871:40"><name pos:start="871:19" pos:end="871:31">condnames_abs</name><index pos:start="871:32" pos:end="871:40">[<expr pos:start="871:33" pos:end="871:39"><name pos:start="871:33" pos:end="871:36">func</name><operator pos:start="871:37" pos:end="871:37">-</operator><literal type="number" pos:start="871:38" pos:end="871:39">48</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="873:11" pos:end="879:9">else <block pos:start="873:16" pos:end="879:9">{<block_content pos:start="875:13" pos:end="877:37">

            <expr_stmt pos:start="875:13" pos:end="875:48"><expr pos:start="875:13" pos:end="875:47"><call pos:start="875:13" pos:end="875:47"><name pos:start="875:13" pos:end="875:21">gen_cmp_s</name><argument_list pos:start="875:22" pos:end="875:47">(<argument pos:start="875:23" pos:end="875:25"><expr pos:start="875:23" pos:end="875:25"><name pos:start="875:23" pos:end="875:25">ctx</name></expr></argument>, <argument pos:start="875:28" pos:end="875:34"><expr pos:start="875:28" pos:end="875:34"><name pos:start="875:28" pos:end="875:31">func</name><operator pos:start="875:32" pos:end="875:32">-</operator><literal type="number" pos:start="875:33" pos:end="875:34">48</literal></expr></argument>, <argument pos:start="875:37" pos:end="875:38"><expr pos:start="875:37" pos:end="875:38"><name pos:start="875:37" pos:end="875:38">ft</name></expr></argument>, <argument pos:start="875:41" pos:end="875:42"><expr pos:start="875:41" pos:end="875:42"><name pos:start="875:41" pos:end="875:42">fs</name></expr></argument>, <argument pos:start="875:45" pos:end="875:46"><expr pos:start="875:45" pos:end="875:46"><name pos:start="875:45" pos:end="875:46">cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="877:13" pos:end="877:37"><expr pos:start="877:13" pos:end="877:36"><name pos:start="877:13" pos:end="877:15">opn</name> <operator pos:start="877:17" pos:end="877:17">=</operator> <name pos:start="877:19" pos:end="877:36"><name pos:start="877:19" pos:end="877:27">condnames</name><index pos:start="877:28" pos:end="877:36">[<expr pos:start="877:29" pos:end="877:35"><name pos:start="877:29" pos:end="877:32">func</name><operator pos:start="877:33" pos:end="877:33">-</operator><literal type="number" pos:start="877:34" pos:end="877:35">48</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="881:9" pos:end="881:14">break;</break>

    <case pos:start="883:5" pos:end="883:19">case <expr pos:start="883:10" pos:end="883:18"><name pos:start="883:10" pos:end="883:18">OPC_ADD_D</name></expr>:</case>

        <expr_stmt pos:start="885:9" pos:end="885:47"><expr pos:start="885:9" pos:end="885:46"><call pos:start="885:9" pos:end="885:46"><name pos:start="885:9" pos:end="885:27">check_cp1_registers</name><argument_list pos:start="885:28" pos:end="885:46">(<argument pos:start="885:29" pos:end="885:31"><expr pos:start="885:29" pos:end="885:31"><name pos:start="885:29" pos:end="885:31">ctx</name></expr></argument>, <argument pos:start="885:34" pos:end="885:45"><expr pos:start="885:34" pos:end="885:45"><name pos:start="885:34" pos:end="885:35">fs</name> <operator pos:start="885:37" pos:end="885:37">|</operator> <name pos:start="885:39" pos:end="885:40">ft</name> <operator pos:start="885:42" pos:end="885:42">|</operator> <name pos:start="885:44" pos:end="885:45">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="887:9" pos:end="907:9">{<block_content pos:start="889:13" pos:end="905:35">

            <decl_stmt pos:start="889:13" pos:end="889:46"><decl pos:start="889:13" pos:end="889:45"><type pos:start="889:13" pos:end="889:20"><name pos:start="889:13" pos:end="889:20">TCGv_i64</name></type> <name pos:start="889:22" pos:end="889:24">fp0</name> <init pos:start="889:26" pos:end="889:45">= <expr pos:start="889:28" pos:end="889:45"><call pos:start="889:28" pos:end="889:45"><name pos:start="889:28" pos:end="889:43">tcg_temp_new_i64</name><argument_list pos:start="889:44" pos:end="889:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="891:13" pos:end="891:46"><decl pos:start="891:13" pos:end="891:45"><type pos:start="891:13" pos:end="891:20"><name pos:start="891:13" pos:end="891:20">TCGv_i64</name></type> <name pos:start="891:22" pos:end="891:24">fp1</name> <init pos:start="891:26" pos:end="891:45">= <expr pos:start="891:28" pos:end="891:45"><call pos:start="891:28" pos:end="891:45"><name pos:start="891:28" pos:end="891:43">tcg_temp_new_i64</name><argument_list pos:start="891:44" pos:end="891:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="895:13" pos:end="895:41"><expr pos:start="895:13" pos:end="895:40"><call pos:start="895:13" pos:end="895:40"><name pos:start="895:13" pos:end="895:26">gen_load_fpr64</name><argument_list pos:start="895:27" pos:end="895:40">(<argument pos:start="895:28" pos:end="895:30"><expr pos:start="895:28" pos:end="895:30"><name pos:start="895:28" pos:end="895:30">ctx</name></expr></argument>, <argument pos:start="895:33" pos:end="895:35"><expr pos:start="895:33" pos:end="895:35"><name pos:start="895:33" pos:end="895:35">fp0</name></expr></argument>, <argument pos:start="895:38" pos:end="895:39"><expr pos:start="895:38" pos:end="895:39"><name pos:start="895:38" pos:end="895:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="897:13" pos:end="897:41"><expr pos:start="897:13" pos:end="897:40"><call pos:start="897:13" pos:end="897:40"><name pos:start="897:13" pos:end="897:26">gen_load_fpr64</name><argument_list pos:start="897:27" pos:end="897:40">(<argument pos:start="897:28" pos:end="897:30"><expr pos:start="897:28" pos:end="897:30"><name pos:start="897:28" pos:end="897:30">ctx</name></expr></argument>, <argument pos:start="897:33" pos:end="897:35"><expr pos:start="897:33" pos:end="897:35"><name pos:start="897:33" pos:end="897:35">fp1</name></expr></argument>, <argument pos:start="897:38" pos:end="897:39"><expr pos:start="897:38" pos:end="897:39"><name pos:start="897:38" pos:end="897:39">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="899:13" pos:end="899:59"><expr pos:start="899:13" pos:end="899:58"><call pos:start="899:13" pos:end="899:58"><name pos:start="899:13" pos:end="899:34">gen_helper_float_add_d</name><argument_list pos:start="899:35" pos:end="899:58">(<argument pos:start="899:36" pos:end="899:38"><expr pos:start="899:36" pos:end="899:38"><name pos:start="899:36" pos:end="899:38">fp0</name></expr></argument>, <argument pos:start="899:41" pos:end="899:47"><expr pos:start="899:41" pos:end="899:47"><name pos:start="899:41" pos:end="899:47">cpu_env</name></expr></argument>, <argument pos:start="899:50" pos:end="899:52"><expr pos:start="899:50" pos:end="899:52"><name pos:start="899:50" pos:end="899:52">fp0</name></expr></argument>, <argument pos:start="899:55" pos:end="899:57"><expr pos:start="899:55" pos:end="899:57"><name pos:start="899:55" pos:end="899:57">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="901:13" pos:end="901:35"><expr pos:start="901:13" pos:end="901:34"><call pos:start="901:13" pos:end="901:34"><name pos:start="901:13" pos:end="901:29">tcg_temp_free_i64</name><argument_list pos:start="901:30" pos:end="901:34">(<argument pos:start="901:31" pos:end="901:33"><expr pos:start="901:31" pos:end="901:33"><name pos:start="901:31" pos:end="901:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="903:13" pos:end="903:42"><expr pos:start="903:13" pos:end="903:41"><call pos:start="903:13" pos:end="903:41"><name pos:start="903:13" pos:end="903:27">gen_store_fpr64</name><argument_list pos:start="903:28" pos:end="903:41">(<argument pos:start="903:29" pos:end="903:31"><expr pos:start="903:29" pos:end="903:31"><name pos:start="903:29" pos:end="903:31">ctx</name></expr></argument>, <argument pos:start="903:34" pos:end="903:36"><expr pos:start="903:34" pos:end="903:36"><name pos:start="903:34" pos:end="903:36">fp0</name></expr></argument>, <argument pos:start="903:39" pos:end="903:40"><expr pos:start="903:39" pos:end="903:40"><name pos:start="903:39" pos:end="903:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="905:13" pos:end="905:35"><expr pos:start="905:13" pos:end="905:34"><call pos:start="905:13" pos:end="905:34"><name pos:start="905:13" pos:end="905:29">tcg_temp_free_i64</name><argument_list pos:start="905:30" pos:end="905:34">(<argument pos:start="905:31" pos:end="905:33"><expr pos:start="905:31" pos:end="905:33"><name pos:start="905:31" pos:end="905:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="909:9" pos:end="909:22"><expr pos:start="909:9" pos:end="909:21"><name pos:start="909:9" pos:end="909:11">opn</name> <operator pos:start="909:13" pos:end="909:13">=</operator> <literal type="string" pos:start="909:15" pos:end="909:21">"add.d"</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="911:9" pos:end="911:23"><expr pos:start="911:9" pos:end="911:22"><name pos:start="911:9" pos:end="911:14">optype</name> <operator pos:start="911:16" pos:end="911:16">=</operator> <name pos:start="911:18" pos:end="911:22">BINOP</name></expr>;</expr_stmt>

        <break pos:start="913:9" pos:end="913:14">break;</break>

    <case pos:start="915:5" pos:end="915:19">case <expr pos:start="915:10" pos:end="915:18"><name pos:start="915:10" pos:end="915:18">OPC_SUB_D</name></expr>:</case>

        <expr_stmt pos:start="917:9" pos:end="917:47"><expr pos:start="917:9" pos:end="917:46"><call pos:start="917:9" pos:end="917:46"><name pos:start="917:9" pos:end="917:27">check_cp1_registers</name><argument_list pos:start="917:28" pos:end="917:46">(<argument pos:start="917:29" pos:end="917:31"><expr pos:start="917:29" pos:end="917:31"><name pos:start="917:29" pos:end="917:31">ctx</name></expr></argument>, <argument pos:start="917:34" pos:end="917:45"><expr pos:start="917:34" pos:end="917:45"><name pos:start="917:34" pos:end="917:35">fs</name> <operator pos:start="917:37" pos:end="917:37">|</operator> <name pos:start="917:39" pos:end="917:40">ft</name> <operator pos:start="917:42" pos:end="917:42">|</operator> <name pos:start="917:44" pos:end="917:45">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="919:9" pos:end="939:9">{<block_content pos:start="921:13" pos:end="937:35">

            <decl_stmt pos:start="921:13" pos:end="921:46"><decl pos:start="921:13" pos:end="921:45"><type pos:start="921:13" pos:end="921:20"><name pos:start="921:13" pos:end="921:20">TCGv_i64</name></type> <name pos:start="921:22" pos:end="921:24">fp0</name> <init pos:start="921:26" pos:end="921:45">= <expr pos:start="921:28" pos:end="921:45"><call pos:start="921:28" pos:end="921:45"><name pos:start="921:28" pos:end="921:43">tcg_temp_new_i64</name><argument_list pos:start="921:44" pos:end="921:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="923:13" pos:end="923:46"><decl pos:start="923:13" pos:end="923:45"><type pos:start="923:13" pos:end="923:20"><name pos:start="923:13" pos:end="923:20">TCGv_i64</name></type> <name pos:start="923:22" pos:end="923:24">fp1</name> <init pos:start="923:26" pos:end="923:45">= <expr pos:start="923:28" pos:end="923:45"><call pos:start="923:28" pos:end="923:45"><name pos:start="923:28" pos:end="923:43">tcg_temp_new_i64</name><argument_list pos:start="923:44" pos:end="923:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="927:13" pos:end="927:41"><expr pos:start="927:13" pos:end="927:40"><call pos:start="927:13" pos:end="927:40"><name pos:start="927:13" pos:end="927:26">gen_load_fpr64</name><argument_list pos:start="927:27" pos:end="927:40">(<argument pos:start="927:28" pos:end="927:30"><expr pos:start="927:28" pos:end="927:30"><name pos:start="927:28" pos:end="927:30">ctx</name></expr></argument>, <argument pos:start="927:33" pos:end="927:35"><expr pos:start="927:33" pos:end="927:35"><name pos:start="927:33" pos:end="927:35">fp0</name></expr></argument>, <argument pos:start="927:38" pos:end="927:39"><expr pos:start="927:38" pos:end="927:39"><name pos:start="927:38" pos:end="927:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="929:13" pos:end="929:41"><expr pos:start="929:13" pos:end="929:40"><call pos:start="929:13" pos:end="929:40"><name pos:start="929:13" pos:end="929:26">gen_load_fpr64</name><argument_list pos:start="929:27" pos:end="929:40">(<argument pos:start="929:28" pos:end="929:30"><expr pos:start="929:28" pos:end="929:30"><name pos:start="929:28" pos:end="929:30">ctx</name></expr></argument>, <argument pos:start="929:33" pos:end="929:35"><expr pos:start="929:33" pos:end="929:35"><name pos:start="929:33" pos:end="929:35">fp1</name></expr></argument>, <argument pos:start="929:38" pos:end="929:39"><expr pos:start="929:38" pos:end="929:39"><name pos:start="929:38" pos:end="929:39">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="931:13" pos:end="931:59"><expr pos:start="931:13" pos:end="931:58"><call pos:start="931:13" pos:end="931:58"><name pos:start="931:13" pos:end="931:34">gen_helper_float_sub_d</name><argument_list pos:start="931:35" pos:end="931:58">(<argument pos:start="931:36" pos:end="931:38"><expr pos:start="931:36" pos:end="931:38"><name pos:start="931:36" pos:end="931:38">fp0</name></expr></argument>, <argument pos:start="931:41" pos:end="931:47"><expr pos:start="931:41" pos:end="931:47"><name pos:start="931:41" pos:end="931:47">cpu_env</name></expr></argument>, <argument pos:start="931:50" pos:end="931:52"><expr pos:start="931:50" pos:end="931:52"><name pos:start="931:50" pos:end="931:52">fp0</name></expr></argument>, <argument pos:start="931:55" pos:end="931:57"><expr pos:start="931:55" pos:end="931:57"><name pos:start="931:55" pos:end="931:57">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="933:13" pos:end="933:35"><expr pos:start="933:13" pos:end="933:34"><call pos:start="933:13" pos:end="933:34"><name pos:start="933:13" pos:end="933:29">tcg_temp_free_i64</name><argument_list pos:start="933:30" pos:end="933:34">(<argument pos:start="933:31" pos:end="933:33"><expr pos:start="933:31" pos:end="933:33"><name pos:start="933:31" pos:end="933:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="935:13" pos:end="935:42"><expr pos:start="935:13" pos:end="935:41"><call pos:start="935:13" pos:end="935:41"><name pos:start="935:13" pos:end="935:27">gen_store_fpr64</name><argument_list pos:start="935:28" pos:end="935:41">(<argument pos:start="935:29" pos:end="935:31"><expr pos:start="935:29" pos:end="935:31"><name pos:start="935:29" pos:end="935:31">ctx</name></expr></argument>, <argument pos:start="935:34" pos:end="935:36"><expr pos:start="935:34" pos:end="935:36"><name pos:start="935:34" pos:end="935:36">fp0</name></expr></argument>, <argument pos:start="935:39" pos:end="935:40"><expr pos:start="935:39" pos:end="935:40"><name pos:start="935:39" pos:end="935:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="937:13" pos:end="937:35"><expr pos:start="937:13" pos:end="937:34"><call pos:start="937:13" pos:end="937:34"><name pos:start="937:13" pos:end="937:29">tcg_temp_free_i64</name><argument_list pos:start="937:30" pos:end="937:34">(<argument pos:start="937:31" pos:end="937:33"><expr pos:start="937:31" pos:end="937:33"><name pos:start="937:31" pos:end="937:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="941:9" pos:end="941:22"><expr pos:start="941:9" pos:end="941:21"><name pos:start="941:9" pos:end="941:11">opn</name> <operator pos:start="941:13" pos:end="941:13">=</operator> <literal type="string" pos:start="941:15" pos:end="941:21">"sub.d"</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="943:9" pos:end="943:23"><expr pos:start="943:9" pos:end="943:22"><name pos:start="943:9" pos:end="943:14">optype</name> <operator pos:start="943:16" pos:end="943:16">=</operator> <name pos:start="943:18" pos:end="943:22">BINOP</name></expr>;</expr_stmt>

        <break pos:start="945:9" pos:end="945:14">break;</break>

    <case pos:start="947:5" pos:end="947:19">case <expr pos:start="947:10" pos:end="947:18"><name pos:start="947:10" pos:end="947:18">OPC_MUL_D</name></expr>:</case>

        <expr_stmt pos:start="949:9" pos:end="949:47"><expr pos:start="949:9" pos:end="949:46"><call pos:start="949:9" pos:end="949:46"><name pos:start="949:9" pos:end="949:27">check_cp1_registers</name><argument_list pos:start="949:28" pos:end="949:46">(<argument pos:start="949:29" pos:end="949:31"><expr pos:start="949:29" pos:end="949:31"><name pos:start="949:29" pos:end="949:31">ctx</name></expr></argument>, <argument pos:start="949:34" pos:end="949:45"><expr pos:start="949:34" pos:end="949:45"><name pos:start="949:34" pos:end="949:35">fs</name> <operator pos:start="949:37" pos:end="949:37">|</operator> <name pos:start="949:39" pos:end="949:40">ft</name> <operator pos:start="949:42" pos:end="949:42">|</operator> <name pos:start="949:44" pos:end="949:45">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="951:9" pos:end="971:9">{<block_content pos:start="953:13" pos:end="969:35">

            <decl_stmt pos:start="953:13" pos:end="953:46"><decl pos:start="953:13" pos:end="953:45"><type pos:start="953:13" pos:end="953:20"><name pos:start="953:13" pos:end="953:20">TCGv_i64</name></type> <name pos:start="953:22" pos:end="953:24">fp0</name> <init pos:start="953:26" pos:end="953:45">= <expr pos:start="953:28" pos:end="953:45"><call pos:start="953:28" pos:end="953:45"><name pos:start="953:28" pos:end="953:43">tcg_temp_new_i64</name><argument_list pos:start="953:44" pos:end="953:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="955:13" pos:end="955:46"><decl pos:start="955:13" pos:end="955:45"><type pos:start="955:13" pos:end="955:20"><name pos:start="955:13" pos:end="955:20">TCGv_i64</name></type> <name pos:start="955:22" pos:end="955:24">fp1</name> <init pos:start="955:26" pos:end="955:45">= <expr pos:start="955:28" pos:end="955:45"><call pos:start="955:28" pos:end="955:45"><name pos:start="955:28" pos:end="955:43">tcg_temp_new_i64</name><argument_list pos:start="955:44" pos:end="955:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="959:13" pos:end="959:41"><expr pos:start="959:13" pos:end="959:40"><call pos:start="959:13" pos:end="959:40"><name pos:start="959:13" pos:end="959:26">gen_load_fpr64</name><argument_list pos:start="959:27" pos:end="959:40">(<argument pos:start="959:28" pos:end="959:30"><expr pos:start="959:28" pos:end="959:30"><name pos:start="959:28" pos:end="959:30">ctx</name></expr></argument>, <argument pos:start="959:33" pos:end="959:35"><expr pos:start="959:33" pos:end="959:35"><name pos:start="959:33" pos:end="959:35">fp0</name></expr></argument>, <argument pos:start="959:38" pos:end="959:39"><expr pos:start="959:38" pos:end="959:39"><name pos:start="959:38" pos:end="959:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="961:13" pos:end="961:41"><expr pos:start="961:13" pos:end="961:40"><call pos:start="961:13" pos:end="961:40"><name pos:start="961:13" pos:end="961:26">gen_load_fpr64</name><argument_list pos:start="961:27" pos:end="961:40">(<argument pos:start="961:28" pos:end="961:30"><expr pos:start="961:28" pos:end="961:30"><name pos:start="961:28" pos:end="961:30">ctx</name></expr></argument>, <argument pos:start="961:33" pos:end="961:35"><expr pos:start="961:33" pos:end="961:35"><name pos:start="961:33" pos:end="961:35">fp1</name></expr></argument>, <argument pos:start="961:38" pos:end="961:39"><expr pos:start="961:38" pos:end="961:39"><name pos:start="961:38" pos:end="961:39">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="963:13" pos:end="963:59"><expr pos:start="963:13" pos:end="963:58"><call pos:start="963:13" pos:end="963:58"><name pos:start="963:13" pos:end="963:34">gen_helper_float_mul_d</name><argument_list pos:start="963:35" pos:end="963:58">(<argument pos:start="963:36" pos:end="963:38"><expr pos:start="963:36" pos:end="963:38"><name pos:start="963:36" pos:end="963:38">fp0</name></expr></argument>, <argument pos:start="963:41" pos:end="963:47"><expr pos:start="963:41" pos:end="963:47"><name pos:start="963:41" pos:end="963:47">cpu_env</name></expr></argument>, <argument pos:start="963:50" pos:end="963:52"><expr pos:start="963:50" pos:end="963:52"><name pos:start="963:50" pos:end="963:52">fp0</name></expr></argument>, <argument pos:start="963:55" pos:end="963:57"><expr pos:start="963:55" pos:end="963:57"><name pos:start="963:55" pos:end="963:57">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="965:13" pos:end="965:35"><expr pos:start="965:13" pos:end="965:34"><call pos:start="965:13" pos:end="965:34"><name pos:start="965:13" pos:end="965:29">tcg_temp_free_i64</name><argument_list pos:start="965:30" pos:end="965:34">(<argument pos:start="965:31" pos:end="965:33"><expr pos:start="965:31" pos:end="965:33"><name pos:start="965:31" pos:end="965:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="967:13" pos:end="967:42"><expr pos:start="967:13" pos:end="967:41"><call pos:start="967:13" pos:end="967:41"><name pos:start="967:13" pos:end="967:27">gen_store_fpr64</name><argument_list pos:start="967:28" pos:end="967:41">(<argument pos:start="967:29" pos:end="967:31"><expr pos:start="967:29" pos:end="967:31"><name pos:start="967:29" pos:end="967:31">ctx</name></expr></argument>, <argument pos:start="967:34" pos:end="967:36"><expr pos:start="967:34" pos:end="967:36"><name pos:start="967:34" pos:end="967:36">fp0</name></expr></argument>, <argument pos:start="967:39" pos:end="967:40"><expr pos:start="967:39" pos:end="967:40"><name pos:start="967:39" pos:end="967:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="969:13" pos:end="969:35"><expr pos:start="969:13" pos:end="969:34"><call pos:start="969:13" pos:end="969:34"><name pos:start="969:13" pos:end="969:29">tcg_temp_free_i64</name><argument_list pos:start="969:30" pos:end="969:34">(<argument pos:start="969:31" pos:end="969:33"><expr pos:start="969:31" pos:end="969:33"><name pos:start="969:31" pos:end="969:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="973:9" pos:end="973:22"><expr pos:start="973:9" pos:end="973:21"><name pos:start="973:9" pos:end="973:11">opn</name> <operator pos:start="973:13" pos:end="973:13">=</operator> <literal type="string" pos:start="973:15" pos:end="973:21">"mul.d"</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="975:9" pos:end="975:23"><expr pos:start="975:9" pos:end="975:22"><name pos:start="975:9" pos:end="975:14">optype</name> <operator pos:start="975:16" pos:end="975:16">=</operator> <name pos:start="975:18" pos:end="975:22">BINOP</name></expr>;</expr_stmt>

        <break pos:start="977:9" pos:end="977:14">break;</break>

    <case pos:start="979:5" pos:end="979:19">case <expr pos:start="979:10" pos:end="979:18"><name pos:start="979:10" pos:end="979:18">OPC_DIV_D</name></expr>:</case>

        <expr_stmt pos:start="981:9" pos:end="981:47"><expr pos:start="981:9" pos:end="981:46"><call pos:start="981:9" pos:end="981:46"><name pos:start="981:9" pos:end="981:27">check_cp1_registers</name><argument_list pos:start="981:28" pos:end="981:46">(<argument pos:start="981:29" pos:end="981:31"><expr pos:start="981:29" pos:end="981:31"><name pos:start="981:29" pos:end="981:31">ctx</name></expr></argument>, <argument pos:start="981:34" pos:end="981:45"><expr pos:start="981:34" pos:end="981:45"><name pos:start="981:34" pos:end="981:35">fs</name> <operator pos:start="981:37" pos:end="981:37">|</operator> <name pos:start="981:39" pos:end="981:40">ft</name> <operator pos:start="981:42" pos:end="981:42">|</operator> <name pos:start="981:44" pos:end="981:45">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="983:9" pos:end="1003:9">{<block_content pos:start="985:13" pos:end="1001:35">

            <decl_stmt pos:start="985:13" pos:end="985:46"><decl pos:start="985:13" pos:end="985:45"><type pos:start="985:13" pos:end="985:20"><name pos:start="985:13" pos:end="985:20">TCGv_i64</name></type> <name pos:start="985:22" pos:end="985:24">fp0</name> <init pos:start="985:26" pos:end="985:45">= <expr pos:start="985:28" pos:end="985:45"><call pos:start="985:28" pos:end="985:45"><name pos:start="985:28" pos:end="985:43">tcg_temp_new_i64</name><argument_list pos:start="985:44" pos:end="985:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="987:13" pos:end="987:46"><decl pos:start="987:13" pos:end="987:45"><type pos:start="987:13" pos:end="987:20"><name pos:start="987:13" pos:end="987:20">TCGv_i64</name></type> <name pos:start="987:22" pos:end="987:24">fp1</name> <init pos:start="987:26" pos:end="987:45">= <expr pos:start="987:28" pos:end="987:45"><call pos:start="987:28" pos:end="987:45"><name pos:start="987:28" pos:end="987:43">tcg_temp_new_i64</name><argument_list pos:start="987:44" pos:end="987:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="991:13" pos:end="991:41"><expr pos:start="991:13" pos:end="991:40"><call pos:start="991:13" pos:end="991:40"><name pos:start="991:13" pos:end="991:26">gen_load_fpr64</name><argument_list pos:start="991:27" pos:end="991:40">(<argument pos:start="991:28" pos:end="991:30"><expr pos:start="991:28" pos:end="991:30"><name pos:start="991:28" pos:end="991:30">ctx</name></expr></argument>, <argument pos:start="991:33" pos:end="991:35"><expr pos:start="991:33" pos:end="991:35"><name pos:start="991:33" pos:end="991:35">fp0</name></expr></argument>, <argument pos:start="991:38" pos:end="991:39"><expr pos:start="991:38" pos:end="991:39"><name pos:start="991:38" pos:end="991:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="993:13" pos:end="993:41"><expr pos:start="993:13" pos:end="993:40"><call pos:start="993:13" pos:end="993:40"><name pos:start="993:13" pos:end="993:26">gen_load_fpr64</name><argument_list pos:start="993:27" pos:end="993:40">(<argument pos:start="993:28" pos:end="993:30"><expr pos:start="993:28" pos:end="993:30"><name pos:start="993:28" pos:end="993:30">ctx</name></expr></argument>, <argument pos:start="993:33" pos:end="993:35"><expr pos:start="993:33" pos:end="993:35"><name pos:start="993:33" pos:end="993:35">fp1</name></expr></argument>, <argument pos:start="993:38" pos:end="993:39"><expr pos:start="993:38" pos:end="993:39"><name pos:start="993:38" pos:end="993:39">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="995:13" pos:end="995:59"><expr pos:start="995:13" pos:end="995:58"><call pos:start="995:13" pos:end="995:58"><name pos:start="995:13" pos:end="995:34">gen_helper_float_div_d</name><argument_list pos:start="995:35" pos:end="995:58">(<argument pos:start="995:36" pos:end="995:38"><expr pos:start="995:36" pos:end="995:38"><name pos:start="995:36" pos:end="995:38">fp0</name></expr></argument>, <argument pos:start="995:41" pos:end="995:47"><expr pos:start="995:41" pos:end="995:47"><name pos:start="995:41" pos:end="995:47">cpu_env</name></expr></argument>, <argument pos:start="995:50" pos:end="995:52"><expr pos:start="995:50" pos:end="995:52"><name pos:start="995:50" pos:end="995:52">fp0</name></expr></argument>, <argument pos:start="995:55" pos:end="995:57"><expr pos:start="995:55" pos:end="995:57"><name pos:start="995:55" pos:end="995:57">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="997:13" pos:end="997:35"><expr pos:start="997:13" pos:end="997:34"><call pos:start="997:13" pos:end="997:34"><name pos:start="997:13" pos:end="997:29">tcg_temp_free_i64</name><argument_list pos:start="997:30" pos:end="997:34">(<argument pos:start="997:31" pos:end="997:33"><expr pos:start="997:31" pos:end="997:33"><name pos:start="997:31" pos:end="997:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="999:13" pos:end="999:42"><expr pos:start="999:13" pos:end="999:41"><call pos:start="999:13" pos:end="999:41"><name pos:start="999:13" pos:end="999:27">gen_store_fpr64</name><argument_list pos:start="999:28" pos:end="999:41">(<argument pos:start="999:29" pos:end="999:31"><expr pos:start="999:29" pos:end="999:31"><name pos:start="999:29" pos:end="999:31">ctx</name></expr></argument>, <argument pos:start="999:34" pos:end="999:36"><expr pos:start="999:34" pos:end="999:36"><name pos:start="999:34" pos:end="999:36">fp0</name></expr></argument>, <argument pos:start="999:39" pos:end="999:40"><expr pos:start="999:39" pos:end="999:40"><name pos:start="999:39" pos:end="999:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1001:13" pos:end="1001:35"><expr pos:start="1001:13" pos:end="1001:34"><call pos:start="1001:13" pos:end="1001:34"><name pos:start="1001:13" pos:end="1001:29">tcg_temp_free_i64</name><argument_list pos:start="1001:30" pos:end="1001:34">(<argument pos:start="1001:31" pos:end="1001:33"><expr pos:start="1001:31" pos:end="1001:33"><name pos:start="1001:31" pos:end="1001:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1005:9" pos:end="1005:22"><expr pos:start="1005:9" pos:end="1005:21"><name pos:start="1005:9" pos:end="1005:11">opn</name> <operator pos:start="1005:13" pos:end="1005:13">=</operator> <literal type="string" pos:start="1005:15" pos:end="1005:21">"div.d"</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1007:9" pos:end="1007:23"><expr pos:start="1007:9" pos:end="1007:22"><name pos:start="1007:9" pos:end="1007:14">optype</name> <operator pos:start="1007:16" pos:end="1007:16">=</operator> <name pos:start="1007:18" pos:end="1007:22">BINOP</name></expr>;</expr_stmt>

        <break pos:start="1009:9" pos:end="1009:14">break;</break>

    <case pos:start="1011:5" pos:end="1011:20">case <expr pos:start="1011:10" pos:end="1011:19"><name pos:start="1011:10" pos:end="1011:19">OPC_SQRT_D</name></expr>:</case>

        <expr_stmt pos:start="1013:9" pos:end="1013:42"><expr pos:start="1013:9" pos:end="1013:41"><call pos:start="1013:9" pos:end="1013:41"><name pos:start="1013:9" pos:end="1013:27">check_cp1_registers</name><argument_list pos:start="1013:28" pos:end="1013:41">(<argument pos:start="1013:29" pos:end="1013:31"><expr pos:start="1013:29" pos:end="1013:31"><name pos:start="1013:29" pos:end="1013:31">ctx</name></expr></argument>, <argument pos:start="1013:34" pos:end="1013:40"><expr pos:start="1013:34" pos:end="1013:40"><name pos:start="1013:34" pos:end="1013:35">fs</name> <operator pos:start="1013:37" pos:end="1013:37">|</operator> <name pos:start="1013:39" pos:end="1013:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1015:9" pos:end="1029:9">{<block_content pos:start="1017:13" pos:end="1027:35">

            <decl_stmt pos:start="1017:13" pos:end="1017:46"><decl pos:start="1017:13" pos:end="1017:45"><type pos:start="1017:13" pos:end="1017:20"><name pos:start="1017:13" pos:end="1017:20">TCGv_i64</name></type> <name pos:start="1017:22" pos:end="1017:24">fp0</name> <init pos:start="1017:26" pos:end="1017:45">= <expr pos:start="1017:28" pos:end="1017:45"><call pos:start="1017:28" pos:end="1017:45"><name pos:start="1017:28" pos:end="1017:43">tcg_temp_new_i64</name><argument_list pos:start="1017:44" pos:end="1017:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1021:13" pos:end="1021:41"><expr pos:start="1021:13" pos:end="1021:40"><call pos:start="1021:13" pos:end="1021:40"><name pos:start="1021:13" pos:end="1021:26">gen_load_fpr64</name><argument_list pos:start="1021:27" pos:end="1021:40">(<argument pos:start="1021:28" pos:end="1021:30"><expr pos:start="1021:28" pos:end="1021:30"><name pos:start="1021:28" pos:end="1021:30">ctx</name></expr></argument>, <argument pos:start="1021:33" pos:end="1021:35"><expr pos:start="1021:33" pos:end="1021:35"><name pos:start="1021:33" pos:end="1021:35">fp0</name></expr></argument>, <argument pos:start="1021:38" pos:end="1021:39"><expr pos:start="1021:38" pos:end="1021:39"><name pos:start="1021:38" pos:end="1021:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1023:13" pos:end="1023:55"><expr pos:start="1023:13" pos:end="1023:54"><call pos:start="1023:13" pos:end="1023:54"><name pos:start="1023:13" pos:end="1023:35">gen_helper_float_sqrt_d</name><argument_list pos:start="1023:36" pos:end="1023:54">(<argument pos:start="1023:37" pos:end="1023:39"><expr pos:start="1023:37" pos:end="1023:39"><name pos:start="1023:37" pos:end="1023:39">fp0</name></expr></argument>, <argument pos:start="1023:42" pos:end="1023:48"><expr pos:start="1023:42" pos:end="1023:48"><name pos:start="1023:42" pos:end="1023:48">cpu_env</name></expr></argument>, <argument pos:start="1023:51" pos:end="1023:53"><expr pos:start="1023:51" pos:end="1023:53"><name pos:start="1023:51" pos:end="1023:53">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1025:13" pos:end="1025:42"><expr pos:start="1025:13" pos:end="1025:41"><call pos:start="1025:13" pos:end="1025:41"><name pos:start="1025:13" pos:end="1025:27">gen_store_fpr64</name><argument_list pos:start="1025:28" pos:end="1025:41">(<argument pos:start="1025:29" pos:end="1025:31"><expr pos:start="1025:29" pos:end="1025:31"><name pos:start="1025:29" pos:end="1025:31">ctx</name></expr></argument>, <argument pos:start="1025:34" pos:end="1025:36"><expr pos:start="1025:34" pos:end="1025:36"><name pos:start="1025:34" pos:end="1025:36">fp0</name></expr></argument>, <argument pos:start="1025:39" pos:end="1025:40"><expr pos:start="1025:39" pos:end="1025:40"><name pos:start="1025:39" pos:end="1025:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1027:13" pos:end="1027:35"><expr pos:start="1027:13" pos:end="1027:34"><call pos:start="1027:13" pos:end="1027:34"><name pos:start="1027:13" pos:end="1027:29">tcg_temp_free_i64</name><argument_list pos:start="1027:30" pos:end="1027:34">(<argument pos:start="1027:31" pos:end="1027:33"><expr pos:start="1027:31" pos:end="1027:33"><name pos:start="1027:31" pos:end="1027:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1031:9" pos:end="1031:23"><expr pos:start="1031:9" pos:end="1031:22"><name pos:start="1031:9" pos:end="1031:11">opn</name> <operator pos:start="1031:13" pos:end="1031:13">=</operator> <literal type="string" pos:start="1031:15" pos:end="1031:22">"sqrt.d"</literal></expr>;</expr_stmt>

        <break pos:start="1033:9" pos:end="1033:14">break;</break>

    <case pos:start="1035:5" pos:end="1035:19">case <expr pos:start="1035:10" pos:end="1035:18"><name pos:start="1035:10" pos:end="1035:18">OPC_ABS_D</name></expr>:</case>

        <expr_stmt pos:start="1037:9" pos:end="1037:42"><expr pos:start="1037:9" pos:end="1037:41"><call pos:start="1037:9" pos:end="1037:41"><name pos:start="1037:9" pos:end="1037:27">check_cp1_registers</name><argument_list pos:start="1037:28" pos:end="1037:41">(<argument pos:start="1037:29" pos:end="1037:31"><expr pos:start="1037:29" pos:end="1037:31"><name pos:start="1037:29" pos:end="1037:31">ctx</name></expr></argument>, <argument pos:start="1037:34" pos:end="1037:40"><expr pos:start="1037:34" pos:end="1037:40"><name pos:start="1037:34" pos:end="1037:35">fs</name> <operator pos:start="1037:37" pos:end="1037:37">|</operator> <name pos:start="1037:39" pos:end="1037:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1039:9" pos:end="1053:9">{<block_content pos:start="1041:13" pos:end="1051:35">

            <decl_stmt pos:start="1041:13" pos:end="1041:46"><decl pos:start="1041:13" pos:end="1041:45"><type pos:start="1041:13" pos:end="1041:20"><name pos:start="1041:13" pos:end="1041:20">TCGv_i64</name></type> <name pos:start="1041:22" pos:end="1041:24">fp0</name> <init pos:start="1041:26" pos:end="1041:45">= <expr pos:start="1041:28" pos:end="1041:45"><call pos:start="1041:28" pos:end="1041:45"><name pos:start="1041:28" pos:end="1041:43">tcg_temp_new_i64</name><argument_list pos:start="1041:44" pos:end="1041:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1045:13" pos:end="1045:41"><expr pos:start="1045:13" pos:end="1045:40"><call pos:start="1045:13" pos:end="1045:40"><name pos:start="1045:13" pos:end="1045:26">gen_load_fpr64</name><argument_list pos:start="1045:27" pos:end="1045:40">(<argument pos:start="1045:28" pos:end="1045:30"><expr pos:start="1045:28" pos:end="1045:30"><name pos:start="1045:28" pos:end="1045:30">ctx</name></expr></argument>, <argument pos:start="1045:33" pos:end="1045:35"><expr pos:start="1045:33" pos:end="1045:35"><name pos:start="1045:33" pos:end="1045:35">fp0</name></expr></argument>, <argument pos:start="1045:38" pos:end="1045:39"><expr pos:start="1045:38" pos:end="1045:39"><name pos:start="1045:38" pos:end="1045:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1047:13" pos:end="1047:45"><expr pos:start="1047:13" pos:end="1047:44"><call pos:start="1047:13" pos:end="1047:44"><name pos:start="1047:13" pos:end="1047:34">gen_helper_float_abs_d</name><argument_list pos:start="1047:35" pos:end="1047:44">(<argument pos:start="1047:36" pos:end="1047:38"><expr pos:start="1047:36" pos:end="1047:38"><name pos:start="1047:36" pos:end="1047:38">fp0</name></expr></argument>, <argument pos:start="1047:41" pos:end="1047:43"><expr pos:start="1047:41" pos:end="1047:43"><name pos:start="1047:41" pos:end="1047:43">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1049:13" pos:end="1049:42"><expr pos:start="1049:13" pos:end="1049:41"><call pos:start="1049:13" pos:end="1049:41"><name pos:start="1049:13" pos:end="1049:27">gen_store_fpr64</name><argument_list pos:start="1049:28" pos:end="1049:41">(<argument pos:start="1049:29" pos:end="1049:31"><expr pos:start="1049:29" pos:end="1049:31"><name pos:start="1049:29" pos:end="1049:31">ctx</name></expr></argument>, <argument pos:start="1049:34" pos:end="1049:36"><expr pos:start="1049:34" pos:end="1049:36"><name pos:start="1049:34" pos:end="1049:36">fp0</name></expr></argument>, <argument pos:start="1049:39" pos:end="1049:40"><expr pos:start="1049:39" pos:end="1049:40"><name pos:start="1049:39" pos:end="1049:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1051:13" pos:end="1051:35"><expr pos:start="1051:13" pos:end="1051:34"><call pos:start="1051:13" pos:end="1051:34"><name pos:start="1051:13" pos:end="1051:29">tcg_temp_free_i64</name><argument_list pos:start="1051:30" pos:end="1051:34">(<argument pos:start="1051:31" pos:end="1051:33"><expr pos:start="1051:31" pos:end="1051:33"><name pos:start="1051:31" pos:end="1051:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1055:9" pos:end="1055:22"><expr pos:start="1055:9" pos:end="1055:21"><name pos:start="1055:9" pos:end="1055:11">opn</name> <operator pos:start="1055:13" pos:end="1055:13">=</operator> <literal type="string" pos:start="1055:15" pos:end="1055:21">"abs.d"</literal></expr>;</expr_stmt>

        <break pos:start="1057:9" pos:end="1057:14">break;</break>

    <case pos:start="1059:5" pos:end="1059:19">case <expr pos:start="1059:10" pos:end="1059:18"><name pos:start="1059:10" pos:end="1059:18">OPC_MOV_D</name></expr>:</case>

        <expr_stmt pos:start="1061:9" pos:end="1061:42"><expr pos:start="1061:9" pos:end="1061:41"><call pos:start="1061:9" pos:end="1061:41"><name pos:start="1061:9" pos:end="1061:27">check_cp1_registers</name><argument_list pos:start="1061:28" pos:end="1061:41">(<argument pos:start="1061:29" pos:end="1061:31"><expr pos:start="1061:29" pos:end="1061:31"><name pos:start="1061:29" pos:end="1061:31">ctx</name></expr></argument>, <argument pos:start="1061:34" pos:end="1061:40"><expr pos:start="1061:34" pos:end="1061:40"><name pos:start="1061:34" pos:end="1061:35">fs</name> <operator pos:start="1061:37" pos:end="1061:37">|</operator> <name pos:start="1061:39" pos:end="1061:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1063:9" pos:end="1075:9">{<block_content pos:start="1065:13" pos:end="1073:35">

            <decl_stmt pos:start="1065:13" pos:end="1065:46"><decl pos:start="1065:13" pos:end="1065:45"><type pos:start="1065:13" pos:end="1065:20"><name pos:start="1065:13" pos:end="1065:20">TCGv_i64</name></type> <name pos:start="1065:22" pos:end="1065:24">fp0</name> <init pos:start="1065:26" pos:end="1065:45">= <expr pos:start="1065:28" pos:end="1065:45"><call pos:start="1065:28" pos:end="1065:45"><name pos:start="1065:28" pos:end="1065:43">tcg_temp_new_i64</name><argument_list pos:start="1065:44" pos:end="1065:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1069:13" pos:end="1069:41"><expr pos:start="1069:13" pos:end="1069:40"><call pos:start="1069:13" pos:end="1069:40"><name pos:start="1069:13" pos:end="1069:26">gen_load_fpr64</name><argument_list pos:start="1069:27" pos:end="1069:40">(<argument pos:start="1069:28" pos:end="1069:30"><expr pos:start="1069:28" pos:end="1069:30"><name pos:start="1069:28" pos:end="1069:30">ctx</name></expr></argument>, <argument pos:start="1069:33" pos:end="1069:35"><expr pos:start="1069:33" pos:end="1069:35"><name pos:start="1069:33" pos:end="1069:35">fp0</name></expr></argument>, <argument pos:start="1069:38" pos:end="1069:39"><expr pos:start="1069:38" pos:end="1069:39"><name pos:start="1069:38" pos:end="1069:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1071:13" pos:end="1071:42"><expr pos:start="1071:13" pos:end="1071:41"><call pos:start="1071:13" pos:end="1071:41"><name pos:start="1071:13" pos:end="1071:27">gen_store_fpr64</name><argument_list pos:start="1071:28" pos:end="1071:41">(<argument pos:start="1071:29" pos:end="1071:31"><expr pos:start="1071:29" pos:end="1071:31"><name pos:start="1071:29" pos:end="1071:31">ctx</name></expr></argument>, <argument pos:start="1071:34" pos:end="1071:36"><expr pos:start="1071:34" pos:end="1071:36"><name pos:start="1071:34" pos:end="1071:36">fp0</name></expr></argument>, <argument pos:start="1071:39" pos:end="1071:40"><expr pos:start="1071:39" pos:end="1071:40"><name pos:start="1071:39" pos:end="1071:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1073:13" pos:end="1073:35"><expr pos:start="1073:13" pos:end="1073:34"><call pos:start="1073:13" pos:end="1073:34"><name pos:start="1073:13" pos:end="1073:29">tcg_temp_free_i64</name><argument_list pos:start="1073:30" pos:end="1073:34">(<argument pos:start="1073:31" pos:end="1073:33"><expr pos:start="1073:31" pos:end="1073:33"><name pos:start="1073:31" pos:end="1073:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1077:9" pos:end="1077:22"><expr pos:start="1077:9" pos:end="1077:21"><name pos:start="1077:9" pos:end="1077:11">opn</name> <operator pos:start="1077:13" pos:end="1077:13">=</operator> <literal type="string" pos:start="1077:15" pos:end="1077:21">"mov.d"</literal></expr>;</expr_stmt>

        <break pos:start="1079:9" pos:end="1079:14">break;</break>

    <case pos:start="1081:5" pos:end="1081:19">case <expr pos:start="1081:10" pos:end="1081:18"><name pos:start="1081:10" pos:end="1081:18">OPC_NEG_D</name></expr>:</case>

        <expr_stmt pos:start="1083:9" pos:end="1083:42"><expr pos:start="1083:9" pos:end="1083:41"><call pos:start="1083:9" pos:end="1083:41"><name pos:start="1083:9" pos:end="1083:27">check_cp1_registers</name><argument_list pos:start="1083:28" pos:end="1083:41">(<argument pos:start="1083:29" pos:end="1083:31"><expr pos:start="1083:29" pos:end="1083:31"><name pos:start="1083:29" pos:end="1083:31">ctx</name></expr></argument>, <argument pos:start="1083:34" pos:end="1083:40"><expr pos:start="1083:34" pos:end="1083:40"><name pos:start="1083:34" pos:end="1083:35">fs</name> <operator pos:start="1083:37" pos:end="1083:37">|</operator> <name pos:start="1083:39" pos:end="1083:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1085:9" pos:end="1099:9">{<block_content pos:start="1087:13" pos:end="1097:35">

            <decl_stmt pos:start="1087:13" pos:end="1087:46"><decl pos:start="1087:13" pos:end="1087:45"><type pos:start="1087:13" pos:end="1087:20"><name pos:start="1087:13" pos:end="1087:20">TCGv_i64</name></type> <name pos:start="1087:22" pos:end="1087:24">fp0</name> <init pos:start="1087:26" pos:end="1087:45">= <expr pos:start="1087:28" pos:end="1087:45"><call pos:start="1087:28" pos:end="1087:45"><name pos:start="1087:28" pos:end="1087:43">tcg_temp_new_i64</name><argument_list pos:start="1087:44" pos:end="1087:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1091:13" pos:end="1091:41"><expr pos:start="1091:13" pos:end="1091:40"><call pos:start="1091:13" pos:end="1091:40"><name pos:start="1091:13" pos:end="1091:26">gen_load_fpr64</name><argument_list pos:start="1091:27" pos:end="1091:40">(<argument pos:start="1091:28" pos:end="1091:30"><expr pos:start="1091:28" pos:end="1091:30"><name pos:start="1091:28" pos:end="1091:30">ctx</name></expr></argument>, <argument pos:start="1091:33" pos:end="1091:35"><expr pos:start="1091:33" pos:end="1091:35"><name pos:start="1091:33" pos:end="1091:35">fp0</name></expr></argument>, <argument pos:start="1091:38" pos:end="1091:39"><expr pos:start="1091:38" pos:end="1091:39"><name pos:start="1091:38" pos:end="1091:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1093:13" pos:end="1093:45"><expr pos:start="1093:13" pos:end="1093:44"><call pos:start="1093:13" pos:end="1093:44"><name pos:start="1093:13" pos:end="1093:34">gen_helper_float_chs_d</name><argument_list pos:start="1093:35" pos:end="1093:44">(<argument pos:start="1093:36" pos:end="1093:38"><expr pos:start="1093:36" pos:end="1093:38"><name pos:start="1093:36" pos:end="1093:38">fp0</name></expr></argument>, <argument pos:start="1093:41" pos:end="1093:43"><expr pos:start="1093:41" pos:end="1093:43"><name pos:start="1093:41" pos:end="1093:43">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1095:13" pos:end="1095:42"><expr pos:start="1095:13" pos:end="1095:41"><call pos:start="1095:13" pos:end="1095:41"><name pos:start="1095:13" pos:end="1095:27">gen_store_fpr64</name><argument_list pos:start="1095:28" pos:end="1095:41">(<argument pos:start="1095:29" pos:end="1095:31"><expr pos:start="1095:29" pos:end="1095:31"><name pos:start="1095:29" pos:end="1095:31">ctx</name></expr></argument>, <argument pos:start="1095:34" pos:end="1095:36"><expr pos:start="1095:34" pos:end="1095:36"><name pos:start="1095:34" pos:end="1095:36">fp0</name></expr></argument>, <argument pos:start="1095:39" pos:end="1095:40"><expr pos:start="1095:39" pos:end="1095:40"><name pos:start="1095:39" pos:end="1095:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1097:13" pos:end="1097:35"><expr pos:start="1097:13" pos:end="1097:34"><call pos:start="1097:13" pos:end="1097:34"><name pos:start="1097:13" pos:end="1097:29">tcg_temp_free_i64</name><argument_list pos:start="1097:30" pos:end="1097:34">(<argument pos:start="1097:31" pos:end="1097:33"><expr pos:start="1097:31" pos:end="1097:33"><name pos:start="1097:31" pos:end="1097:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1101:9" pos:end="1101:22"><expr pos:start="1101:9" pos:end="1101:21"><name pos:start="1101:9" pos:end="1101:11">opn</name> <operator pos:start="1101:13" pos:end="1101:13">=</operator> <literal type="string" pos:start="1101:15" pos:end="1101:21">"neg.d"</literal></expr>;</expr_stmt>

        <break pos:start="1103:9" pos:end="1103:14">break;</break>

    <case pos:start="1105:5" pos:end="1105:23">case <expr pos:start="1105:10" pos:end="1105:22"><name pos:start="1105:10" pos:end="1105:22">OPC_ROUND_L_D</name></expr>:</case>

        <expr_stmt pos:start="1107:9" pos:end="1107:33"><expr pos:start="1107:9" pos:end="1107:32"><call pos:start="1107:9" pos:end="1107:32"><name pos:start="1107:9" pos:end="1107:27">check_cp1_64bitmode</name><argument_list pos:start="1107:28" pos:end="1107:32">(<argument pos:start="1107:29" pos:end="1107:31"><expr pos:start="1107:29" pos:end="1107:31"><name pos:start="1107:29" pos:end="1107:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1109:9" pos:end="1123:9">{<block_content pos:start="1111:13" pos:end="1121:35">

            <decl_stmt pos:start="1111:13" pos:end="1111:46"><decl pos:start="1111:13" pos:end="1111:45"><type pos:start="1111:13" pos:end="1111:20"><name pos:start="1111:13" pos:end="1111:20">TCGv_i64</name></type> <name pos:start="1111:22" pos:end="1111:24">fp0</name> <init pos:start="1111:26" pos:end="1111:45">= <expr pos:start="1111:28" pos:end="1111:45"><call pos:start="1111:28" pos:end="1111:45"><name pos:start="1111:28" pos:end="1111:43">tcg_temp_new_i64</name><argument_list pos:start="1111:44" pos:end="1111:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1115:13" pos:end="1115:41"><expr pos:start="1115:13" pos:end="1115:40"><call pos:start="1115:13" pos:end="1115:40"><name pos:start="1115:13" pos:end="1115:26">gen_load_fpr64</name><argument_list pos:start="1115:27" pos:end="1115:40">(<argument pos:start="1115:28" pos:end="1115:30"><expr pos:start="1115:28" pos:end="1115:30"><name pos:start="1115:28" pos:end="1115:30">ctx</name></expr></argument>, <argument pos:start="1115:33" pos:end="1115:35"><expr pos:start="1115:33" pos:end="1115:35"><name pos:start="1115:33" pos:end="1115:35">fp0</name></expr></argument>, <argument pos:start="1115:38" pos:end="1115:39"><expr pos:start="1115:38" pos:end="1115:39"><name pos:start="1115:38" pos:end="1115:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1117:13" pos:end="1117:57"><expr pos:start="1117:13" pos:end="1117:56"><call pos:start="1117:13" pos:end="1117:56"><name pos:start="1117:13" pos:end="1117:37">gen_helper_float_roundl_d</name><argument_list pos:start="1117:38" pos:end="1117:56">(<argument pos:start="1117:39" pos:end="1117:41"><expr pos:start="1117:39" pos:end="1117:41"><name pos:start="1117:39" pos:end="1117:41">fp0</name></expr></argument>, <argument pos:start="1117:44" pos:end="1117:50"><expr pos:start="1117:44" pos:end="1117:50"><name pos:start="1117:44" pos:end="1117:50">cpu_env</name></expr></argument>, <argument pos:start="1117:53" pos:end="1117:55"><expr pos:start="1117:53" pos:end="1117:55"><name pos:start="1117:53" pos:end="1117:55">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1119:13" pos:end="1119:42"><expr pos:start="1119:13" pos:end="1119:41"><call pos:start="1119:13" pos:end="1119:41"><name pos:start="1119:13" pos:end="1119:27">gen_store_fpr64</name><argument_list pos:start="1119:28" pos:end="1119:41">(<argument pos:start="1119:29" pos:end="1119:31"><expr pos:start="1119:29" pos:end="1119:31"><name pos:start="1119:29" pos:end="1119:31">ctx</name></expr></argument>, <argument pos:start="1119:34" pos:end="1119:36"><expr pos:start="1119:34" pos:end="1119:36"><name pos:start="1119:34" pos:end="1119:36">fp0</name></expr></argument>, <argument pos:start="1119:39" pos:end="1119:40"><expr pos:start="1119:39" pos:end="1119:40"><name pos:start="1119:39" pos:end="1119:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1121:13" pos:end="1121:35"><expr pos:start="1121:13" pos:end="1121:34"><call pos:start="1121:13" pos:end="1121:34"><name pos:start="1121:13" pos:end="1121:29">tcg_temp_free_i64</name><argument_list pos:start="1121:30" pos:end="1121:34">(<argument pos:start="1121:31" pos:end="1121:33"><expr pos:start="1121:31" pos:end="1121:33"><name pos:start="1121:31" pos:end="1121:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1125:9" pos:end="1125:26"><expr pos:start="1125:9" pos:end="1125:25"><name pos:start="1125:9" pos:end="1125:11">opn</name> <operator pos:start="1125:13" pos:end="1125:13">=</operator> <literal type="string" pos:start="1125:15" pos:end="1125:25">"round.l.d"</literal></expr>;</expr_stmt>

        <break pos:start="1127:9" pos:end="1127:14">break;</break>

    <case pos:start="1129:5" pos:end="1129:23">case <expr pos:start="1129:10" pos:end="1129:22"><name pos:start="1129:10" pos:end="1129:22">OPC_TRUNC_L_D</name></expr>:</case>

        <expr_stmt pos:start="1131:9" pos:end="1131:33"><expr pos:start="1131:9" pos:end="1131:32"><call pos:start="1131:9" pos:end="1131:32"><name pos:start="1131:9" pos:end="1131:27">check_cp1_64bitmode</name><argument_list pos:start="1131:28" pos:end="1131:32">(<argument pos:start="1131:29" pos:end="1131:31"><expr pos:start="1131:29" pos:end="1131:31"><name pos:start="1131:29" pos:end="1131:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1133:9" pos:end="1147:9">{<block_content pos:start="1135:13" pos:end="1145:35">

            <decl_stmt pos:start="1135:13" pos:end="1135:46"><decl pos:start="1135:13" pos:end="1135:45"><type pos:start="1135:13" pos:end="1135:20"><name pos:start="1135:13" pos:end="1135:20">TCGv_i64</name></type> <name pos:start="1135:22" pos:end="1135:24">fp0</name> <init pos:start="1135:26" pos:end="1135:45">= <expr pos:start="1135:28" pos:end="1135:45"><call pos:start="1135:28" pos:end="1135:45"><name pos:start="1135:28" pos:end="1135:43">tcg_temp_new_i64</name><argument_list pos:start="1135:44" pos:end="1135:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1139:13" pos:end="1139:41"><expr pos:start="1139:13" pos:end="1139:40"><call pos:start="1139:13" pos:end="1139:40"><name pos:start="1139:13" pos:end="1139:26">gen_load_fpr64</name><argument_list pos:start="1139:27" pos:end="1139:40">(<argument pos:start="1139:28" pos:end="1139:30"><expr pos:start="1139:28" pos:end="1139:30"><name pos:start="1139:28" pos:end="1139:30">ctx</name></expr></argument>, <argument pos:start="1139:33" pos:end="1139:35"><expr pos:start="1139:33" pos:end="1139:35"><name pos:start="1139:33" pos:end="1139:35">fp0</name></expr></argument>, <argument pos:start="1139:38" pos:end="1139:39"><expr pos:start="1139:38" pos:end="1139:39"><name pos:start="1139:38" pos:end="1139:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1141:13" pos:end="1141:57"><expr pos:start="1141:13" pos:end="1141:56"><call pos:start="1141:13" pos:end="1141:56"><name pos:start="1141:13" pos:end="1141:37">gen_helper_float_truncl_d</name><argument_list pos:start="1141:38" pos:end="1141:56">(<argument pos:start="1141:39" pos:end="1141:41"><expr pos:start="1141:39" pos:end="1141:41"><name pos:start="1141:39" pos:end="1141:41">fp0</name></expr></argument>, <argument pos:start="1141:44" pos:end="1141:50"><expr pos:start="1141:44" pos:end="1141:50"><name pos:start="1141:44" pos:end="1141:50">cpu_env</name></expr></argument>, <argument pos:start="1141:53" pos:end="1141:55"><expr pos:start="1141:53" pos:end="1141:55"><name pos:start="1141:53" pos:end="1141:55">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1143:13" pos:end="1143:42"><expr pos:start="1143:13" pos:end="1143:41"><call pos:start="1143:13" pos:end="1143:41"><name pos:start="1143:13" pos:end="1143:27">gen_store_fpr64</name><argument_list pos:start="1143:28" pos:end="1143:41">(<argument pos:start="1143:29" pos:end="1143:31"><expr pos:start="1143:29" pos:end="1143:31"><name pos:start="1143:29" pos:end="1143:31">ctx</name></expr></argument>, <argument pos:start="1143:34" pos:end="1143:36"><expr pos:start="1143:34" pos:end="1143:36"><name pos:start="1143:34" pos:end="1143:36">fp0</name></expr></argument>, <argument pos:start="1143:39" pos:end="1143:40"><expr pos:start="1143:39" pos:end="1143:40"><name pos:start="1143:39" pos:end="1143:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1145:13" pos:end="1145:35"><expr pos:start="1145:13" pos:end="1145:34"><call pos:start="1145:13" pos:end="1145:34"><name pos:start="1145:13" pos:end="1145:29">tcg_temp_free_i64</name><argument_list pos:start="1145:30" pos:end="1145:34">(<argument pos:start="1145:31" pos:end="1145:33"><expr pos:start="1145:31" pos:end="1145:33"><name pos:start="1145:31" pos:end="1145:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1149:9" pos:end="1149:26"><expr pos:start="1149:9" pos:end="1149:25"><name pos:start="1149:9" pos:end="1149:11">opn</name> <operator pos:start="1149:13" pos:end="1149:13">=</operator> <literal type="string" pos:start="1149:15" pos:end="1149:25">"trunc.l.d"</literal></expr>;</expr_stmt>

        <break pos:start="1151:9" pos:end="1151:14">break;</break>

    <case pos:start="1153:5" pos:end="1153:22">case <expr pos:start="1153:10" pos:end="1153:21"><name pos:start="1153:10" pos:end="1153:21">OPC_CEIL_L_D</name></expr>:</case>

        <expr_stmt pos:start="1155:9" pos:end="1155:33"><expr pos:start="1155:9" pos:end="1155:32"><call pos:start="1155:9" pos:end="1155:32"><name pos:start="1155:9" pos:end="1155:27">check_cp1_64bitmode</name><argument_list pos:start="1155:28" pos:end="1155:32">(<argument pos:start="1155:29" pos:end="1155:31"><expr pos:start="1155:29" pos:end="1155:31"><name pos:start="1155:29" pos:end="1155:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1157:9" pos:end="1171:9">{<block_content pos:start="1159:13" pos:end="1169:35">

            <decl_stmt pos:start="1159:13" pos:end="1159:46"><decl pos:start="1159:13" pos:end="1159:45"><type pos:start="1159:13" pos:end="1159:20"><name pos:start="1159:13" pos:end="1159:20">TCGv_i64</name></type> <name pos:start="1159:22" pos:end="1159:24">fp0</name> <init pos:start="1159:26" pos:end="1159:45">= <expr pos:start="1159:28" pos:end="1159:45"><call pos:start="1159:28" pos:end="1159:45"><name pos:start="1159:28" pos:end="1159:43">tcg_temp_new_i64</name><argument_list pos:start="1159:44" pos:end="1159:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1163:13" pos:end="1163:41"><expr pos:start="1163:13" pos:end="1163:40"><call pos:start="1163:13" pos:end="1163:40"><name pos:start="1163:13" pos:end="1163:26">gen_load_fpr64</name><argument_list pos:start="1163:27" pos:end="1163:40">(<argument pos:start="1163:28" pos:end="1163:30"><expr pos:start="1163:28" pos:end="1163:30"><name pos:start="1163:28" pos:end="1163:30">ctx</name></expr></argument>, <argument pos:start="1163:33" pos:end="1163:35"><expr pos:start="1163:33" pos:end="1163:35"><name pos:start="1163:33" pos:end="1163:35">fp0</name></expr></argument>, <argument pos:start="1163:38" pos:end="1163:39"><expr pos:start="1163:38" pos:end="1163:39"><name pos:start="1163:38" pos:end="1163:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1165:13" pos:end="1165:56"><expr pos:start="1165:13" pos:end="1165:55"><call pos:start="1165:13" pos:end="1165:55"><name pos:start="1165:13" pos:end="1165:36">gen_helper_float_ceill_d</name><argument_list pos:start="1165:37" pos:end="1165:55">(<argument pos:start="1165:38" pos:end="1165:40"><expr pos:start="1165:38" pos:end="1165:40"><name pos:start="1165:38" pos:end="1165:40">fp0</name></expr></argument>, <argument pos:start="1165:43" pos:end="1165:49"><expr pos:start="1165:43" pos:end="1165:49"><name pos:start="1165:43" pos:end="1165:49">cpu_env</name></expr></argument>, <argument pos:start="1165:52" pos:end="1165:54"><expr pos:start="1165:52" pos:end="1165:54"><name pos:start="1165:52" pos:end="1165:54">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1167:13" pos:end="1167:42"><expr pos:start="1167:13" pos:end="1167:41"><call pos:start="1167:13" pos:end="1167:41"><name pos:start="1167:13" pos:end="1167:27">gen_store_fpr64</name><argument_list pos:start="1167:28" pos:end="1167:41">(<argument pos:start="1167:29" pos:end="1167:31"><expr pos:start="1167:29" pos:end="1167:31"><name pos:start="1167:29" pos:end="1167:31">ctx</name></expr></argument>, <argument pos:start="1167:34" pos:end="1167:36"><expr pos:start="1167:34" pos:end="1167:36"><name pos:start="1167:34" pos:end="1167:36">fp0</name></expr></argument>, <argument pos:start="1167:39" pos:end="1167:40"><expr pos:start="1167:39" pos:end="1167:40"><name pos:start="1167:39" pos:end="1167:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1169:13" pos:end="1169:35"><expr pos:start="1169:13" pos:end="1169:34"><call pos:start="1169:13" pos:end="1169:34"><name pos:start="1169:13" pos:end="1169:29">tcg_temp_free_i64</name><argument_list pos:start="1169:30" pos:end="1169:34">(<argument pos:start="1169:31" pos:end="1169:33"><expr pos:start="1169:31" pos:end="1169:33"><name pos:start="1169:31" pos:end="1169:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1173:9" pos:end="1173:25"><expr pos:start="1173:9" pos:end="1173:24"><name pos:start="1173:9" pos:end="1173:11">opn</name> <operator pos:start="1173:13" pos:end="1173:13">=</operator> <literal type="string" pos:start="1173:15" pos:end="1173:24">"ceil.l.d"</literal></expr>;</expr_stmt>

        <break pos:start="1175:9" pos:end="1175:14">break;</break>

    <case pos:start="1177:5" pos:end="1177:23">case <expr pos:start="1177:10" pos:end="1177:22"><name pos:start="1177:10" pos:end="1177:22">OPC_FLOOR_L_D</name></expr>:</case>

        <expr_stmt pos:start="1179:9" pos:end="1179:33"><expr pos:start="1179:9" pos:end="1179:32"><call pos:start="1179:9" pos:end="1179:32"><name pos:start="1179:9" pos:end="1179:27">check_cp1_64bitmode</name><argument_list pos:start="1179:28" pos:end="1179:32">(<argument pos:start="1179:29" pos:end="1179:31"><expr pos:start="1179:29" pos:end="1179:31"><name pos:start="1179:29" pos:end="1179:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1181:9" pos:end="1195:9">{<block_content pos:start="1183:13" pos:end="1193:35">

            <decl_stmt pos:start="1183:13" pos:end="1183:46"><decl pos:start="1183:13" pos:end="1183:45"><type pos:start="1183:13" pos:end="1183:20"><name pos:start="1183:13" pos:end="1183:20">TCGv_i64</name></type> <name pos:start="1183:22" pos:end="1183:24">fp0</name> <init pos:start="1183:26" pos:end="1183:45">= <expr pos:start="1183:28" pos:end="1183:45"><call pos:start="1183:28" pos:end="1183:45"><name pos:start="1183:28" pos:end="1183:43">tcg_temp_new_i64</name><argument_list pos:start="1183:44" pos:end="1183:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1187:13" pos:end="1187:41"><expr pos:start="1187:13" pos:end="1187:40"><call pos:start="1187:13" pos:end="1187:40"><name pos:start="1187:13" pos:end="1187:26">gen_load_fpr64</name><argument_list pos:start="1187:27" pos:end="1187:40">(<argument pos:start="1187:28" pos:end="1187:30"><expr pos:start="1187:28" pos:end="1187:30"><name pos:start="1187:28" pos:end="1187:30">ctx</name></expr></argument>, <argument pos:start="1187:33" pos:end="1187:35"><expr pos:start="1187:33" pos:end="1187:35"><name pos:start="1187:33" pos:end="1187:35">fp0</name></expr></argument>, <argument pos:start="1187:38" pos:end="1187:39"><expr pos:start="1187:38" pos:end="1187:39"><name pos:start="1187:38" pos:end="1187:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1189:13" pos:end="1189:57"><expr pos:start="1189:13" pos:end="1189:56"><call pos:start="1189:13" pos:end="1189:56"><name pos:start="1189:13" pos:end="1189:37">gen_helper_float_floorl_d</name><argument_list pos:start="1189:38" pos:end="1189:56">(<argument pos:start="1189:39" pos:end="1189:41"><expr pos:start="1189:39" pos:end="1189:41"><name pos:start="1189:39" pos:end="1189:41">fp0</name></expr></argument>, <argument pos:start="1189:44" pos:end="1189:50"><expr pos:start="1189:44" pos:end="1189:50"><name pos:start="1189:44" pos:end="1189:50">cpu_env</name></expr></argument>, <argument pos:start="1189:53" pos:end="1189:55"><expr pos:start="1189:53" pos:end="1189:55"><name pos:start="1189:53" pos:end="1189:55">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1191:13" pos:end="1191:42"><expr pos:start="1191:13" pos:end="1191:41"><call pos:start="1191:13" pos:end="1191:41"><name pos:start="1191:13" pos:end="1191:27">gen_store_fpr64</name><argument_list pos:start="1191:28" pos:end="1191:41">(<argument pos:start="1191:29" pos:end="1191:31"><expr pos:start="1191:29" pos:end="1191:31"><name pos:start="1191:29" pos:end="1191:31">ctx</name></expr></argument>, <argument pos:start="1191:34" pos:end="1191:36"><expr pos:start="1191:34" pos:end="1191:36"><name pos:start="1191:34" pos:end="1191:36">fp0</name></expr></argument>, <argument pos:start="1191:39" pos:end="1191:40"><expr pos:start="1191:39" pos:end="1191:40"><name pos:start="1191:39" pos:end="1191:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1193:13" pos:end="1193:35"><expr pos:start="1193:13" pos:end="1193:34"><call pos:start="1193:13" pos:end="1193:34"><name pos:start="1193:13" pos:end="1193:29">tcg_temp_free_i64</name><argument_list pos:start="1193:30" pos:end="1193:34">(<argument pos:start="1193:31" pos:end="1193:33"><expr pos:start="1193:31" pos:end="1193:33"><name pos:start="1193:31" pos:end="1193:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1197:9" pos:end="1197:26"><expr pos:start="1197:9" pos:end="1197:25"><name pos:start="1197:9" pos:end="1197:11">opn</name> <operator pos:start="1197:13" pos:end="1197:13">=</operator> <literal type="string" pos:start="1197:15" pos:end="1197:25">"floor.l.d"</literal></expr>;</expr_stmt>

        <break pos:start="1199:9" pos:end="1199:14">break;</break>

    <case pos:start="1201:5" pos:end="1201:23">case <expr pos:start="1201:10" pos:end="1201:22"><name pos:start="1201:10" pos:end="1201:22">OPC_ROUND_W_D</name></expr>:</case>

        <expr_stmt pos:start="1203:9" pos:end="1203:37"><expr pos:start="1203:9" pos:end="1203:36"><call pos:start="1203:9" pos:end="1203:36"><name pos:start="1203:9" pos:end="1203:27">check_cp1_registers</name><argument_list pos:start="1203:28" pos:end="1203:36">(<argument pos:start="1203:29" pos:end="1203:31"><expr pos:start="1203:29" pos:end="1203:31"><name pos:start="1203:29" pos:end="1203:31">ctx</name></expr></argument>, <argument pos:start="1203:34" pos:end="1203:35"><expr pos:start="1203:34" pos:end="1203:35"><name pos:start="1203:34" pos:end="1203:35">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1205:9" pos:end="1223:9">{<block_content pos:start="1207:13" pos:end="1221:36">

            <decl_stmt pos:start="1207:13" pos:end="1207:47"><decl pos:start="1207:13" pos:end="1207:46"><type pos:start="1207:13" pos:end="1207:20"><name pos:start="1207:13" pos:end="1207:20">TCGv_i32</name></type> <name pos:start="1207:22" pos:end="1207:25">fp32</name> <init pos:start="1207:27" pos:end="1207:46">= <expr pos:start="1207:29" pos:end="1207:46"><call pos:start="1207:29" pos:end="1207:46"><name pos:start="1207:29" pos:end="1207:44">tcg_temp_new_i32</name><argument_list pos:start="1207:45" pos:end="1207:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1209:13" pos:end="1209:47"><decl pos:start="1209:13" pos:end="1209:46"><type pos:start="1209:13" pos:end="1209:20"><name pos:start="1209:13" pos:end="1209:20">TCGv_i64</name></type> <name pos:start="1209:22" pos:end="1209:25">fp64</name> <init pos:start="1209:27" pos:end="1209:46">= <expr pos:start="1209:29" pos:end="1209:46"><call pos:start="1209:29" pos:end="1209:46"><name pos:start="1209:29" pos:end="1209:44">tcg_temp_new_i64</name><argument_list pos:start="1209:45" pos:end="1209:46">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1213:13" pos:end="1213:42"><expr pos:start="1213:13" pos:end="1213:41"><call pos:start="1213:13" pos:end="1213:41"><name pos:start="1213:13" pos:end="1213:26">gen_load_fpr64</name><argument_list pos:start="1213:27" pos:end="1213:41">(<argument pos:start="1213:28" pos:end="1213:30"><expr pos:start="1213:28" pos:end="1213:30"><name pos:start="1213:28" pos:end="1213:30">ctx</name></expr></argument>, <argument pos:start="1213:33" pos:end="1213:36"><expr pos:start="1213:33" pos:end="1213:36"><name pos:start="1213:33" pos:end="1213:36">fp64</name></expr></argument>, <argument pos:start="1213:39" pos:end="1213:40"><expr pos:start="1213:39" pos:end="1213:40"><name pos:start="1213:39" pos:end="1213:40">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1215:13" pos:end="1215:59"><expr pos:start="1215:13" pos:end="1215:58"><call pos:start="1215:13" pos:end="1215:58"><name pos:start="1215:13" pos:end="1215:37">gen_helper_float_roundw_d</name><argument_list pos:start="1215:38" pos:end="1215:58">(<argument pos:start="1215:39" pos:end="1215:42"><expr pos:start="1215:39" pos:end="1215:42"><name pos:start="1215:39" pos:end="1215:42">fp32</name></expr></argument>, <argument pos:start="1215:45" pos:end="1215:51"><expr pos:start="1215:45" pos:end="1215:51"><name pos:start="1215:45" pos:end="1215:51">cpu_env</name></expr></argument>, <argument pos:start="1215:54" pos:end="1215:57"><expr pos:start="1215:54" pos:end="1215:57"><name pos:start="1215:54" pos:end="1215:57">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1217:13" pos:end="1217:36"><expr pos:start="1217:13" pos:end="1217:35"><call pos:start="1217:13" pos:end="1217:35"><name pos:start="1217:13" pos:end="1217:29">tcg_temp_free_i64</name><argument_list pos:start="1217:30" pos:end="1217:35">(<argument pos:start="1217:31" pos:end="1217:34"><expr pos:start="1217:31" pos:end="1217:34"><name pos:start="1217:31" pos:end="1217:34">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1219:13" pos:end="1219:38"><expr pos:start="1219:13" pos:end="1219:37"><call pos:start="1219:13" pos:end="1219:37"><name pos:start="1219:13" pos:end="1219:27">gen_store_fpr32</name><argument_list pos:start="1219:28" pos:end="1219:37">(<argument pos:start="1219:29" pos:end="1219:32"><expr pos:start="1219:29" pos:end="1219:32"><name pos:start="1219:29" pos:end="1219:32">fp32</name></expr></argument>, <argument pos:start="1219:35" pos:end="1219:36"><expr pos:start="1219:35" pos:end="1219:36"><name pos:start="1219:35" pos:end="1219:36">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1221:13" pos:end="1221:36"><expr pos:start="1221:13" pos:end="1221:35"><call pos:start="1221:13" pos:end="1221:35"><name pos:start="1221:13" pos:end="1221:29">tcg_temp_free_i32</name><argument_list pos:start="1221:30" pos:end="1221:35">(<argument pos:start="1221:31" pos:end="1221:34"><expr pos:start="1221:31" pos:end="1221:34"><name pos:start="1221:31" pos:end="1221:34">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1225:9" pos:end="1225:26"><expr pos:start="1225:9" pos:end="1225:25"><name pos:start="1225:9" pos:end="1225:11">opn</name> <operator pos:start="1225:13" pos:end="1225:13">=</operator> <literal type="string" pos:start="1225:15" pos:end="1225:25">"round.w.d"</literal></expr>;</expr_stmt>

        <break pos:start="1227:9" pos:end="1227:14">break;</break>

    <case pos:start="1229:5" pos:end="1229:23">case <expr pos:start="1229:10" pos:end="1229:22"><name pos:start="1229:10" pos:end="1229:22">OPC_TRUNC_W_D</name></expr>:</case>

        <expr_stmt pos:start="1231:9" pos:end="1231:37"><expr pos:start="1231:9" pos:end="1231:36"><call pos:start="1231:9" pos:end="1231:36"><name pos:start="1231:9" pos:end="1231:27">check_cp1_registers</name><argument_list pos:start="1231:28" pos:end="1231:36">(<argument pos:start="1231:29" pos:end="1231:31"><expr pos:start="1231:29" pos:end="1231:31"><name pos:start="1231:29" pos:end="1231:31">ctx</name></expr></argument>, <argument pos:start="1231:34" pos:end="1231:35"><expr pos:start="1231:34" pos:end="1231:35"><name pos:start="1231:34" pos:end="1231:35">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1233:9" pos:end="1251:9">{<block_content pos:start="1235:13" pos:end="1249:36">

            <decl_stmt pos:start="1235:13" pos:end="1235:47"><decl pos:start="1235:13" pos:end="1235:46"><type pos:start="1235:13" pos:end="1235:20"><name pos:start="1235:13" pos:end="1235:20">TCGv_i32</name></type> <name pos:start="1235:22" pos:end="1235:25">fp32</name> <init pos:start="1235:27" pos:end="1235:46">= <expr pos:start="1235:29" pos:end="1235:46"><call pos:start="1235:29" pos:end="1235:46"><name pos:start="1235:29" pos:end="1235:44">tcg_temp_new_i32</name><argument_list pos:start="1235:45" pos:end="1235:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1237:13" pos:end="1237:47"><decl pos:start="1237:13" pos:end="1237:46"><type pos:start="1237:13" pos:end="1237:20"><name pos:start="1237:13" pos:end="1237:20">TCGv_i64</name></type> <name pos:start="1237:22" pos:end="1237:25">fp64</name> <init pos:start="1237:27" pos:end="1237:46">= <expr pos:start="1237:29" pos:end="1237:46"><call pos:start="1237:29" pos:end="1237:46"><name pos:start="1237:29" pos:end="1237:44">tcg_temp_new_i64</name><argument_list pos:start="1237:45" pos:end="1237:46">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1241:13" pos:end="1241:42"><expr pos:start="1241:13" pos:end="1241:41"><call pos:start="1241:13" pos:end="1241:41"><name pos:start="1241:13" pos:end="1241:26">gen_load_fpr64</name><argument_list pos:start="1241:27" pos:end="1241:41">(<argument pos:start="1241:28" pos:end="1241:30"><expr pos:start="1241:28" pos:end="1241:30"><name pos:start="1241:28" pos:end="1241:30">ctx</name></expr></argument>, <argument pos:start="1241:33" pos:end="1241:36"><expr pos:start="1241:33" pos:end="1241:36"><name pos:start="1241:33" pos:end="1241:36">fp64</name></expr></argument>, <argument pos:start="1241:39" pos:end="1241:40"><expr pos:start="1241:39" pos:end="1241:40"><name pos:start="1241:39" pos:end="1241:40">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1243:13" pos:end="1243:59"><expr pos:start="1243:13" pos:end="1243:58"><call pos:start="1243:13" pos:end="1243:58"><name pos:start="1243:13" pos:end="1243:37">gen_helper_float_truncw_d</name><argument_list pos:start="1243:38" pos:end="1243:58">(<argument pos:start="1243:39" pos:end="1243:42"><expr pos:start="1243:39" pos:end="1243:42"><name pos:start="1243:39" pos:end="1243:42">fp32</name></expr></argument>, <argument pos:start="1243:45" pos:end="1243:51"><expr pos:start="1243:45" pos:end="1243:51"><name pos:start="1243:45" pos:end="1243:51">cpu_env</name></expr></argument>, <argument pos:start="1243:54" pos:end="1243:57"><expr pos:start="1243:54" pos:end="1243:57"><name pos:start="1243:54" pos:end="1243:57">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1245:13" pos:end="1245:36"><expr pos:start="1245:13" pos:end="1245:35"><call pos:start="1245:13" pos:end="1245:35"><name pos:start="1245:13" pos:end="1245:29">tcg_temp_free_i64</name><argument_list pos:start="1245:30" pos:end="1245:35">(<argument pos:start="1245:31" pos:end="1245:34"><expr pos:start="1245:31" pos:end="1245:34"><name pos:start="1245:31" pos:end="1245:34">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1247:13" pos:end="1247:38"><expr pos:start="1247:13" pos:end="1247:37"><call pos:start="1247:13" pos:end="1247:37"><name pos:start="1247:13" pos:end="1247:27">gen_store_fpr32</name><argument_list pos:start="1247:28" pos:end="1247:37">(<argument pos:start="1247:29" pos:end="1247:32"><expr pos:start="1247:29" pos:end="1247:32"><name pos:start="1247:29" pos:end="1247:32">fp32</name></expr></argument>, <argument pos:start="1247:35" pos:end="1247:36"><expr pos:start="1247:35" pos:end="1247:36"><name pos:start="1247:35" pos:end="1247:36">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1249:13" pos:end="1249:36"><expr pos:start="1249:13" pos:end="1249:35"><call pos:start="1249:13" pos:end="1249:35"><name pos:start="1249:13" pos:end="1249:29">tcg_temp_free_i32</name><argument_list pos:start="1249:30" pos:end="1249:35">(<argument pos:start="1249:31" pos:end="1249:34"><expr pos:start="1249:31" pos:end="1249:34"><name pos:start="1249:31" pos:end="1249:34">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1253:9" pos:end="1253:26"><expr pos:start="1253:9" pos:end="1253:25"><name pos:start="1253:9" pos:end="1253:11">opn</name> <operator pos:start="1253:13" pos:end="1253:13">=</operator> <literal type="string" pos:start="1253:15" pos:end="1253:25">"trunc.w.d"</literal></expr>;</expr_stmt>

        <break pos:start="1255:9" pos:end="1255:14">break;</break>

    <case pos:start="1257:5" pos:end="1257:22">case <expr pos:start="1257:10" pos:end="1257:21"><name pos:start="1257:10" pos:end="1257:21">OPC_CEIL_W_D</name></expr>:</case>

        <expr_stmt pos:start="1259:9" pos:end="1259:37"><expr pos:start="1259:9" pos:end="1259:36"><call pos:start="1259:9" pos:end="1259:36"><name pos:start="1259:9" pos:end="1259:27">check_cp1_registers</name><argument_list pos:start="1259:28" pos:end="1259:36">(<argument pos:start="1259:29" pos:end="1259:31"><expr pos:start="1259:29" pos:end="1259:31"><name pos:start="1259:29" pos:end="1259:31">ctx</name></expr></argument>, <argument pos:start="1259:34" pos:end="1259:35"><expr pos:start="1259:34" pos:end="1259:35"><name pos:start="1259:34" pos:end="1259:35">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1261:9" pos:end="1279:9">{<block_content pos:start="1263:13" pos:end="1277:36">

            <decl_stmt pos:start="1263:13" pos:end="1263:47"><decl pos:start="1263:13" pos:end="1263:46"><type pos:start="1263:13" pos:end="1263:20"><name pos:start="1263:13" pos:end="1263:20">TCGv_i32</name></type> <name pos:start="1263:22" pos:end="1263:25">fp32</name> <init pos:start="1263:27" pos:end="1263:46">= <expr pos:start="1263:29" pos:end="1263:46"><call pos:start="1263:29" pos:end="1263:46"><name pos:start="1263:29" pos:end="1263:44">tcg_temp_new_i32</name><argument_list pos:start="1263:45" pos:end="1263:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1265:13" pos:end="1265:47"><decl pos:start="1265:13" pos:end="1265:46"><type pos:start="1265:13" pos:end="1265:20"><name pos:start="1265:13" pos:end="1265:20">TCGv_i64</name></type> <name pos:start="1265:22" pos:end="1265:25">fp64</name> <init pos:start="1265:27" pos:end="1265:46">= <expr pos:start="1265:29" pos:end="1265:46"><call pos:start="1265:29" pos:end="1265:46"><name pos:start="1265:29" pos:end="1265:44">tcg_temp_new_i64</name><argument_list pos:start="1265:45" pos:end="1265:46">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1269:13" pos:end="1269:42"><expr pos:start="1269:13" pos:end="1269:41"><call pos:start="1269:13" pos:end="1269:41"><name pos:start="1269:13" pos:end="1269:26">gen_load_fpr64</name><argument_list pos:start="1269:27" pos:end="1269:41">(<argument pos:start="1269:28" pos:end="1269:30"><expr pos:start="1269:28" pos:end="1269:30"><name pos:start="1269:28" pos:end="1269:30">ctx</name></expr></argument>, <argument pos:start="1269:33" pos:end="1269:36"><expr pos:start="1269:33" pos:end="1269:36"><name pos:start="1269:33" pos:end="1269:36">fp64</name></expr></argument>, <argument pos:start="1269:39" pos:end="1269:40"><expr pos:start="1269:39" pos:end="1269:40"><name pos:start="1269:39" pos:end="1269:40">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1271:13" pos:end="1271:58"><expr pos:start="1271:13" pos:end="1271:57"><call pos:start="1271:13" pos:end="1271:57"><name pos:start="1271:13" pos:end="1271:36">gen_helper_float_ceilw_d</name><argument_list pos:start="1271:37" pos:end="1271:57">(<argument pos:start="1271:38" pos:end="1271:41"><expr pos:start="1271:38" pos:end="1271:41"><name pos:start="1271:38" pos:end="1271:41">fp32</name></expr></argument>, <argument pos:start="1271:44" pos:end="1271:50"><expr pos:start="1271:44" pos:end="1271:50"><name pos:start="1271:44" pos:end="1271:50">cpu_env</name></expr></argument>, <argument pos:start="1271:53" pos:end="1271:56"><expr pos:start="1271:53" pos:end="1271:56"><name pos:start="1271:53" pos:end="1271:56">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1273:13" pos:end="1273:36"><expr pos:start="1273:13" pos:end="1273:35"><call pos:start="1273:13" pos:end="1273:35"><name pos:start="1273:13" pos:end="1273:29">tcg_temp_free_i64</name><argument_list pos:start="1273:30" pos:end="1273:35">(<argument pos:start="1273:31" pos:end="1273:34"><expr pos:start="1273:31" pos:end="1273:34"><name pos:start="1273:31" pos:end="1273:34">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1275:13" pos:end="1275:38"><expr pos:start="1275:13" pos:end="1275:37"><call pos:start="1275:13" pos:end="1275:37"><name pos:start="1275:13" pos:end="1275:27">gen_store_fpr32</name><argument_list pos:start="1275:28" pos:end="1275:37">(<argument pos:start="1275:29" pos:end="1275:32"><expr pos:start="1275:29" pos:end="1275:32"><name pos:start="1275:29" pos:end="1275:32">fp32</name></expr></argument>, <argument pos:start="1275:35" pos:end="1275:36"><expr pos:start="1275:35" pos:end="1275:36"><name pos:start="1275:35" pos:end="1275:36">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1277:13" pos:end="1277:36"><expr pos:start="1277:13" pos:end="1277:35"><call pos:start="1277:13" pos:end="1277:35"><name pos:start="1277:13" pos:end="1277:29">tcg_temp_free_i32</name><argument_list pos:start="1277:30" pos:end="1277:35">(<argument pos:start="1277:31" pos:end="1277:34"><expr pos:start="1277:31" pos:end="1277:34"><name pos:start="1277:31" pos:end="1277:34">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1281:9" pos:end="1281:25"><expr pos:start="1281:9" pos:end="1281:24"><name pos:start="1281:9" pos:end="1281:11">opn</name> <operator pos:start="1281:13" pos:end="1281:13">=</operator> <literal type="string" pos:start="1281:15" pos:end="1281:24">"ceil.w.d"</literal></expr>;</expr_stmt>

        <break pos:start="1283:9" pos:end="1283:14">break;</break>

    <case pos:start="1285:5" pos:end="1285:23">case <expr pos:start="1285:10" pos:end="1285:22"><name pos:start="1285:10" pos:end="1285:22">OPC_FLOOR_W_D</name></expr>:</case>

        <expr_stmt pos:start="1287:9" pos:end="1287:37"><expr pos:start="1287:9" pos:end="1287:36"><call pos:start="1287:9" pos:end="1287:36"><name pos:start="1287:9" pos:end="1287:27">check_cp1_registers</name><argument_list pos:start="1287:28" pos:end="1287:36">(<argument pos:start="1287:29" pos:end="1287:31"><expr pos:start="1287:29" pos:end="1287:31"><name pos:start="1287:29" pos:end="1287:31">ctx</name></expr></argument>, <argument pos:start="1287:34" pos:end="1287:35"><expr pos:start="1287:34" pos:end="1287:35"><name pos:start="1287:34" pos:end="1287:35">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1289:9" pos:end="1307:9">{<block_content pos:start="1291:13" pos:end="1305:36">

            <decl_stmt pos:start="1291:13" pos:end="1291:47"><decl pos:start="1291:13" pos:end="1291:46"><type pos:start="1291:13" pos:end="1291:20"><name pos:start="1291:13" pos:end="1291:20">TCGv_i32</name></type> <name pos:start="1291:22" pos:end="1291:25">fp32</name> <init pos:start="1291:27" pos:end="1291:46">= <expr pos:start="1291:29" pos:end="1291:46"><call pos:start="1291:29" pos:end="1291:46"><name pos:start="1291:29" pos:end="1291:44">tcg_temp_new_i32</name><argument_list pos:start="1291:45" pos:end="1291:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1293:13" pos:end="1293:47"><decl pos:start="1293:13" pos:end="1293:46"><type pos:start="1293:13" pos:end="1293:20"><name pos:start="1293:13" pos:end="1293:20">TCGv_i64</name></type> <name pos:start="1293:22" pos:end="1293:25">fp64</name> <init pos:start="1293:27" pos:end="1293:46">= <expr pos:start="1293:29" pos:end="1293:46"><call pos:start="1293:29" pos:end="1293:46"><name pos:start="1293:29" pos:end="1293:44">tcg_temp_new_i64</name><argument_list pos:start="1293:45" pos:end="1293:46">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1297:13" pos:end="1297:42"><expr pos:start="1297:13" pos:end="1297:41"><call pos:start="1297:13" pos:end="1297:41"><name pos:start="1297:13" pos:end="1297:26">gen_load_fpr64</name><argument_list pos:start="1297:27" pos:end="1297:41">(<argument pos:start="1297:28" pos:end="1297:30"><expr pos:start="1297:28" pos:end="1297:30"><name pos:start="1297:28" pos:end="1297:30">ctx</name></expr></argument>, <argument pos:start="1297:33" pos:end="1297:36"><expr pos:start="1297:33" pos:end="1297:36"><name pos:start="1297:33" pos:end="1297:36">fp64</name></expr></argument>, <argument pos:start="1297:39" pos:end="1297:40"><expr pos:start="1297:39" pos:end="1297:40"><name pos:start="1297:39" pos:end="1297:40">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1299:13" pos:end="1299:59"><expr pos:start="1299:13" pos:end="1299:58"><call pos:start="1299:13" pos:end="1299:58"><name pos:start="1299:13" pos:end="1299:37">gen_helper_float_floorw_d</name><argument_list pos:start="1299:38" pos:end="1299:58">(<argument pos:start="1299:39" pos:end="1299:42"><expr pos:start="1299:39" pos:end="1299:42"><name pos:start="1299:39" pos:end="1299:42">fp32</name></expr></argument>, <argument pos:start="1299:45" pos:end="1299:51"><expr pos:start="1299:45" pos:end="1299:51"><name pos:start="1299:45" pos:end="1299:51">cpu_env</name></expr></argument>, <argument pos:start="1299:54" pos:end="1299:57"><expr pos:start="1299:54" pos:end="1299:57"><name pos:start="1299:54" pos:end="1299:57">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1301:13" pos:end="1301:36"><expr pos:start="1301:13" pos:end="1301:35"><call pos:start="1301:13" pos:end="1301:35"><name pos:start="1301:13" pos:end="1301:29">tcg_temp_free_i64</name><argument_list pos:start="1301:30" pos:end="1301:35">(<argument pos:start="1301:31" pos:end="1301:34"><expr pos:start="1301:31" pos:end="1301:34"><name pos:start="1301:31" pos:end="1301:34">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1303:13" pos:end="1303:38"><expr pos:start="1303:13" pos:end="1303:37"><call pos:start="1303:13" pos:end="1303:37"><name pos:start="1303:13" pos:end="1303:27">gen_store_fpr32</name><argument_list pos:start="1303:28" pos:end="1303:37">(<argument pos:start="1303:29" pos:end="1303:32"><expr pos:start="1303:29" pos:end="1303:32"><name pos:start="1303:29" pos:end="1303:32">fp32</name></expr></argument>, <argument pos:start="1303:35" pos:end="1303:36"><expr pos:start="1303:35" pos:end="1303:36"><name pos:start="1303:35" pos:end="1303:36">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1305:13" pos:end="1305:36"><expr pos:start="1305:13" pos:end="1305:35"><call pos:start="1305:13" pos:end="1305:35"><name pos:start="1305:13" pos:end="1305:29">tcg_temp_free_i32</name><argument_list pos:start="1305:30" pos:end="1305:35">(<argument pos:start="1305:31" pos:end="1305:34"><expr pos:start="1305:31" pos:end="1305:34"><name pos:start="1305:31" pos:end="1305:34">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1309:9" pos:end="1309:26"><expr pos:start="1309:9" pos:end="1309:25"><name pos:start="1309:9" pos:end="1309:11">opn</name> <operator pos:start="1309:13" pos:end="1309:13">=</operator> <literal type="string" pos:start="1309:15" pos:end="1309:25">"floor.w.d"</literal></expr>;</expr_stmt>

        <break pos:start="1311:9" pos:end="1311:14">break;</break>

    <case pos:start="1313:5" pos:end="1313:21">case <expr pos:start="1313:10" pos:end="1313:20"><name pos:start="1313:10" pos:end="1313:20">OPC_MOVCF_D</name></expr>:</case>

        <expr_stmt pos:start="1315:9" pos:end="1315:60"><expr pos:start="1315:9" pos:end="1315:59"><call pos:start="1315:9" pos:end="1315:59"><name pos:start="1315:9" pos:end="1315:19">gen_movcf_d</name><argument_list pos:start="1315:20" pos:end="1315:59">(<argument pos:start="1315:21" pos:end="1315:23"><expr pos:start="1315:21" pos:end="1315:23"><name pos:start="1315:21" pos:end="1315:23">ctx</name></expr></argument>, <argument pos:start="1315:26" pos:end="1315:27"><expr pos:start="1315:26" pos:end="1315:27"><name pos:start="1315:26" pos:end="1315:27">fs</name></expr></argument>, <argument pos:start="1315:30" pos:end="1315:31"><expr pos:start="1315:30" pos:end="1315:31"><name pos:start="1315:30" pos:end="1315:31">fd</name></expr></argument>, <argument pos:start="1315:34" pos:end="1315:48"><expr pos:start="1315:34" pos:end="1315:48"><operator pos:start="1315:34" pos:end="1315:34">(</operator><name pos:start="1315:35" pos:end="1315:36">ft</name> <operator pos:start="1315:38" pos:end="1315:39">&gt;&gt;</operator> <literal type="number" pos:start="1315:41" pos:end="1315:41">2</literal><operator pos:start="1315:42" pos:end="1315:42">)</operator> <operator pos:start="1315:44" pos:end="1315:44">&amp;</operator> <literal type="number" pos:start="1315:46" pos:end="1315:48">0x7</literal></expr></argument>, <argument pos:start="1315:51" pos:end="1315:58"><expr pos:start="1315:51" pos:end="1315:58"><name pos:start="1315:51" pos:end="1315:52">ft</name> <operator pos:start="1315:54" pos:end="1315:54">&amp;</operator> <literal type="number" pos:start="1315:56" pos:end="1315:58">0x1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1317:9" pos:end="1317:24"><expr pos:start="1317:9" pos:end="1317:23"><name pos:start="1317:9" pos:end="1317:11">opn</name> <operator pos:start="1317:13" pos:end="1317:13">=</operator> <literal type="string" pos:start="1317:15" pos:end="1317:23">"movcf.d"</literal></expr>;</expr_stmt>

        <break pos:start="1319:9" pos:end="1319:14">break;</break>

    <case pos:start="1321:5" pos:end="1321:20">case <expr pos:start="1321:10" pos:end="1321:19"><name pos:start="1321:10" pos:end="1321:19">OPC_MOVZ_D</name></expr>:</case>

        <block pos:start="1323:9" pos:end="1347:9">{<block_content pos:start="1325:13" pos:end="1345:30">

            <decl_stmt pos:start="1325:13" pos:end="1325:37"><decl pos:start="1325:13" pos:end="1325:36"><type pos:start="1325:13" pos:end="1325:15"><name pos:start="1325:13" pos:end="1325:15">int</name></type> <name pos:start="1325:17" pos:end="1325:18">l1</name> <init pos:start="1325:20" pos:end="1325:36">= <expr pos:start="1325:22" pos:end="1325:36"><call pos:start="1325:22" pos:end="1325:36"><name pos:start="1325:22" pos:end="1325:34">gen_new_label</name><argument_list pos:start="1325:35" pos:end="1325:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1327:13" pos:end="1327:25"><decl pos:start="1327:13" pos:end="1327:24"><type pos:start="1327:13" pos:end="1327:20"><name pos:start="1327:13" pos:end="1327:20">TCGv_i64</name></type> <name pos:start="1327:22" pos:end="1327:24">fp0</name></decl>;</decl_stmt>



            <if_stmt pos:start="1331:13" pos:end="1335:13"><if pos:start="1331:13" pos:end="1335:13">if <condition pos:start="1331:16" pos:end="1331:24">(<expr pos:start="1331:17" pos:end="1331:23"><name pos:start="1331:17" pos:end="1331:18">ft</name> <operator pos:start="1331:20" pos:end="1331:21">!=</operator> <literal type="number" pos:start="1331:23" pos:end="1331:23">0</literal></expr>)</condition> <block pos:start="1331:26" pos:end="1335:13">{<block_content pos:start="1333:17" pos:end="1333:68">

                <expr_stmt pos:start="1333:17" pos:end="1333:68"><expr pos:start="1333:17" pos:end="1333:67"><call pos:start="1333:17" pos:end="1333:67"><name pos:start="1333:17" pos:end="1333:34">tcg_gen_brcondi_tl</name><argument_list pos:start="1333:35" pos:end="1333:67">(<argument pos:start="1333:36" pos:end="1333:46"><expr pos:start="1333:36" pos:end="1333:46"><name pos:start="1333:36" pos:end="1333:46">TCG_COND_NE</name></expr></argument>, <argument pos:start="1333:49" pos:end="1333:59"><expr pos:start="1333:49" pos:end="1333:59"><name pos:start="1333:49" pos:end="1333:59"><name pos:start="1333:49" pos:end="1333:55">cpu_gpr</name><index pos:start="1333:56" pos:end="1333:59">[<expr pos:start="1333:57" pos:end="1333:58"><name pos:start="1333:57" pos:end="1333:58">ft</name></expr>]</index></name></expr></argument>, <argument pos:start="1333:62" pos:end="1333:62"><expr pos:start="1333:62" pos:end="1333:62"><literal type="number" pos:start="1333:62" pos:end="1333:62">0</literal></expr></argument>, <argument pos:start="1333:65" pos:end="1333:66"><expr pos:start="1333:65" pos:end="1333:66"><name pos:start="1333:65" pos:end="1333:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1337:13" pos:end="1337:37"><expr pos:start="1337:13" pos:end="1337:36"><name pos:start="1337:13" pos:end="1337:15">fp0</name> <operator pos:start="1337:17" pos:end="1337:17">=</operator> <call pos:start="1337:19" pos:end="1337:36"><name pos:start="1337:19" pos:end="1337:34">tcg_temp_new_i64</name><argument_list pos:start="1337:35" pos:end="1337:36">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1339:13" pos:end="1339:41"><expr pos:start="1339:13" pos:end="1339:40"><call pos:start="1339:13" pos:end="1339:40"><name pos:start="1339:13" pos:end="1339:26">gen_load_fpr64</name><argument_list pos:start="1339:27" pos:end="1339:40">(<argument pos:start="1339:28" pos:end="1339:30"><expr pos:start="1339:28" pos:end="1339:30"><name pos:start="1339:28" pos:end="1339:30">ctx</name></expr></argument>, <argument pos:start="1339:33" pos:end="1339:35"><expr pos:start="1339:33" pos:end="1339:35"><name pos:start="1339:33" pos:end="1339:35">fp0</name></expr></argument>, <argument pos:start="1339:38" pos:end="1339:39"><expr pos:start="1339:38" pos:end="1339:39"><name pos:start="1339:38" pos:end="1339:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1341:13" pos:end="1341:42"><expr pos:start="1341:13" pos:end="1341:41"><call pos:start="1341:13" pos:end="1341:41"><name pos:start="1341:13" pos:end="1341:27">gen_store_fpr64</name><argument_list pos:start="1341:28" pos:end="1341:41">(<argument pos:start="1341:29" pos:end="1341:31"><expr pos:start="1341:29" pos:end="1341:31"><name pos:start="1341:29" pos:end="1341:31">ctx</name></expr></argument>, <argument pos:start="1341:34" pos:end="1341:36"><expr pos:start="1341:34" pos:end="1341:36"><name pos:start="1341:34" pos:end="1341:36">fp0</name></expr></argument>, <argument pos:start="1341:39" pos:end="1341:40"><expr pos:start="1341:39" pos:end="1341:40"><name pos:start="1341:39" pos:end="1341:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1343:13" pos:end="1343:35"><expr pos:start="1343:13" pos:end="1343:34"><call pos:start="1343:13" pos:end="1343:34"><name pos:start="1343:13" pos:end="1343:29">tcg_temp_free_i64</name><argument_list pos:start="1343:30" pos:end="1343:34">(<argument pos:start="1343:31" pos:end="1343:33"><expr pos:start="1343:31" pos:end="1343:33"><name pos:start="1343:31" pos:end="1343:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1345:13" pos:end="1345:30"><expr pos:start="1345:13" pos:end="1345:29"><call pos:start="1345:13" pos:end="1345:29"><name pos:start="1345:13" pos:end="1345:25">gen_set_label</name><argument_list pos:start="1345:26" pos:end="1345:29">(<argument pos:start="1345:27" pos:end="1345:28"><expr pos:start="1345:27" pos:end="1345:28"><name pos:start="1345:27" pos:end="1345:28">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1349:9" pos:end="1349:23"><expr pos:start="1349:9" pos:end="1349:22"><name pos:start="1349:9" pos:end="1349:11">opn</name> <operator pos:start="1349:13" pos:end="1349:13">=</operator> <literal type="string" pos:start="1349:15" pos:end="1349:22">"movz.d"</literal></expr>;</expr_stmt>

        <break pos:start="1351:9" pos:end="1351:14">break;</break>

    <case pos:start="1353:5" pos:end="1353:20">case <expr pos:start="1353:10" pos:end="1353:19"><name pos:start="1353:10" pos:end="1353:19">OPC_MOVN_D</name></expr>:</case>

        <block pos:start="1355:9" pos:end="1379:9">{<block_content pos:start="1357:13" pos:end="1377:13">

            <decl_stmt pos:start="1357:13" pos:end="1357:37"><decl pos:start="1357:13" pos:end="1357:36"><type pos:start="1357:13" pos:end="1357:15"><name pos:start="1357:13" pos:end="1357:15">int</name></type> <name pos:start="1357:17" pos:end="1357:18">l1</name> <init pos:start="1357:20" pos:end="1357:36">= <expr pos:start="1357:22" pos:end="1357:36"><call pos:start="1357:22" pos:end="1357:36"><name pos:start="1357:22" pos:end="1357:34">gen_new_label</name><argument_list pos:start="1357:35" pos:end="1357:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1359:13" pos:end="1359:25"><decl pos:start="1359:13" pos:end="1359:24"><type pos:start="1359:13" pos:end="1359:20"><name pos:start="1359:13" pos:end="1359:20">TCGv_i64</name></type> <name pos:start="1359:22" pos:end="1359:24">fp0</name></decl>;</decl_stmt>



            <if_stmt pos:start="1363:13" pos:end="1377:13"><if pos:start="1363:13" pos:end="1377:13">if <condition pos:start="1363:16" pos:end="1363:24">(<expr pos:start="1363:17" pos:end="1363:23"><name pos:start="1363:17" pos:end="1363:18">ft</name> <operator pos:start="1363:20" pos:end="1363:21">!=</operator> <literal type="number" pos:start="1363:23" pos:end="1363:23">0</literal></expr>)</condition> <block pos:start="1363:26" pos:end="1377:13">{<block_content pos:start="1365:17" pos:end="1375:34">

                <expr_stmt pos:start="1365:17" pos:end="1365:68"><expr pos:start="1365:17" pos:end="1365:67"><call pos:start="1365:17" pos:end="1365:67"><name pos:start="1365:17" pos:end="1365:34">tcg_gen_brcondi_tl</name><argument_list pos:start="1365:35" pos:end="1365:67">(<argument pos:start="1365:36" pos:end="1365:46"><expr pos:start="1365:36" pos:end="1365:46"><name pos:start="1365:36" pos:end="1365:46">TCG_COND_EQ</name></expr></argument>, <argument pos:start="1365:49" pos:end="1365:59"><expr pos:start="1365:49" pos:end="1365:59"><name pos:start="1365:49" pos:end="1365:59"><name pos:start="1365:49" pos:end="1365:55">cpu_gpr</name><index pos:start="1365:56" pos:end="1365:59">[<expr pos:start="1365:57" pos:end="1365:58"><name pos:start="1365:57" pos:end="1365:58">ft</name></expr>]</index></name></expr></argument>, <argument pos:start="1365:62" pos:end="1365:62"><expr pos:start="1365:62" pos:end="1365:62"><literal type="number" pos:start="1365:62" pos:end="1365:62">0</literal></expr></argument>, <argument pos:start="1365:65" pos:end="1365:66"><expr pos:start="1365:65" pos:end="1365:66"><name pos:start="1365:65" pos:end="1365:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1367:17" pos:end="1367:41"><expr pos:start="1367:17" pos:end="1367:40"><name pos:start="1367:17" pos:end="1367:19">fp0</name> <operator pos:start="1367:21" pos:end="1367:21">=</operator> <call pos:start="1367:23" pos:end="1367:40"><name pos:start="1367:23" pos:end="1367:38">tcg_temp_new_i64</name><argument_list pos:start="1367:39" pos:end="1367:40">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1369:17" pos:end="1369:45"><expr pos:start="1369:17" pos:end="1369:44"><call pos:start="1369:17" pos:end="1369:44"><name pos:start="1369:17" pos:end="1369:30">gen_load_fpr64</name><argument_list pos:start="1369:31" pos:end="1369:44">(<argument pos:start="1369:32" pos:end="1369:34"><expr pos:start="1369:32" pos:end="1369:34"><name pos:start="1369:32" pos:end="1369:34">ctx</name></expr></argument>, <argument pos:start="1369:37" pos:end="1369:39"><expr pos:start="1369:37" pos:end="1369:39"><name pos:start="1369:37" pos:end="1369:39">fp0</name></expr></argument>, <argument pos:start="1369:42" pos:end="1369:43"><expr pos:start="1369:42" pos:end="1369:43"><name pos:start="1369:42" pos:end="1369:43">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1371:17" pos:end="1371:46"><expr pos:start="1371:17" pos:end="1371:45"><call pos:start="1371:17" pos:end="1371:45"><name pos:start="1371:17" pos:end="1371:31">gen_store_fpr64</name><argument_list pos:start="1371:32" pos:end="1371:45">(<argument pos:start="1371:33" pos:end="1371:35"><expr pos:start="1371:33" pos:end="1371:35"><name pos:start="1371:33" pos:end="1371:35">ctx</name></expr></argument>, <argument pos:start="1371:38" pos:end="1371:40"><expr pos:start="1371:38" pos:end="1371:40"><name pos:start="1371:38" pos:end="1371:40">fp0</name></expr></argument>, <argument pos:start="1371:43" pos:end="1371:44"><expr pos:start="1371:43" pos:end="1371:44"><name pos:start="1371:43" pos:end="1371:44">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1373:17" pos:end="1373:39"><expr pos:start="1373:17" pos:end="1373:38"><call pos:start="1373:17" pos:end="1373:38"><name pos:start="1373:17" pos:end="1373:33">tcg_temp_free_i64</name><argument_list pos:start="1373:34" pos:end="1373:38">(<argument pos:start="1373:35" pos:end="1373:37"><expr pos:start="1373:35" pos:end="1373:37"><name pos:start="1373:35" pos:end="1373:37">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1375:17" pos:end="1375:34"><expr pos:start="1375:17" pos:end="1375:33"><call pos:start="1375:17" pos:end="1375:33"><name pos:start="1375:17" pos:end="1375:29">gen_set_label</name><argument_list pos:start="1375:30" pos:end="1375:33">(<argument pos:start="1375:31" pos:end="1375:32"><expr pos:start="1375:31" pos:end="1375:32"><name pos:start="1375:31" pos:end="1375:32">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1381:9" pos:end="1381:23"><expr pos:start="1381:9" pos:end="1381:22"><name pos:start="1381:9" pos:end="1381:11">opn</name> <operator pos:start="1381:13" pos:end="1381:13">=</operator> <literal type="string" pos:start="1381:15" pos:end="1381:22">"movn.d"</literal></expr>;</expr_stmt>

        <break pos:start="1383:9" pos:end="1383:14">break;</break>

    <case pos:start="1385:5" pos:end="1385:21">case <expr pos:start="1385:10" pos:end="1385:20"><name pos:start="1385:10" pos:end="1385:20">OPC_RECIP_D</name></expr>:</case>

        <expr_stmt pos:start="1387:9" pos:end="1387:33"><expr pos:start="1387:9" pos:end="1387:32"><call pos:start="1387:9" pos:end="1387:32"><name pos:start="1387:9" pos:end="1387:27">check_cp1_64bitmode</name><argument_list pos:start="1387:28" pos:end="1387:32">(<argument pos:start="1387:29" pos:end="1387:31"><expr pos:start="1387:29" pos:end="1387:31"><name pos:start="1387:29" pos:end="1387:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1389:9" pos:end="1403:9">{<block_content pos:start="1391:13" pos:end="1401:35">

            <decl_stmt pos:start="1391:13" pos:end="1391:46"><decl pos:start="1391:13" pos:end="1391:45"><type pos:start="1391:13" pos:end="1391:20"><name pos:start="1391:13" pos:end="1391:20">TCGv_i64</name></type> <name pos:start="1391:22" pos:end="1391:24">fp0</name> <init pos:start="1391:26" pos:end="1391:45">= <expr pos:start="1391:28" pos:end="1391:45"><call pos:start="1391:28" pos:end="1391:45"><name pos:start="1391:28" pos:end="1391:43">tcg_temp_new_i64</name><argument_list pos:start="1391:44" pos:end="1391:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1395:13" pos:end="1395:41"><expr pos:start="1395:13" pos:end="1395:40"><call pos:start="1395:13" pos:end="1395:40"><name pos:start="1395:13" pos:end="1395:26">gen_load_fpr64</name><argument_list pos:start="1395:27" pos:end="1395:40">(<argument pos:start="1395:28" pos:end="1395:30"><expr pos:start="1395:28" pos:end="1395:30"><name pos:start="1395:28" pos:end="1395:30">ctx</name></expr></argument>, <argument pos:start="1395:33" pos:end="1395:35"><expr pos:start="1395:33" pos:end="1395:35"><name pos:start="1395:33" pos:end="1395:35">fp0</name></expr></argument>, <argument pos:start="1395:38" pos:end="1395:39"><expr pos:start="1395:38" pos:end="1395:39"><name pos:start="1395:38" pos:end="1395:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1397:13" pos:end="1397:56"><expr pos:start="1397:13" pos:end="1397:55"><call pos:start="1397:13" pos:end="1397:55"><name pos:start="1397:13" pos:end="1397:36">gen_helper_float_recip_d</name><argument_list pos:start="1397:37" pos:end="1397:55">(<argument pos:start="1397:38" pos:end="1397:40"><expr pos:start="1397:38" pos:end="1397:40"><name pos:start="1397:38" pos:end="1397:40">fp0</name></expr></argument>, <argument pos:start="1397:43" pos:end="1397:49"><expr pos:start="1397:43" pos:end="1397:49"><name pos:start="1397:43" pos:end="1397:49">cpu_env</name></expr></argument>, <argument pos:start="1397:52" pos:end="1397:54"><expr pos:start="1397:52" pos:end="1397:54"><name pos:start="1397:52" pos:end="1397:54">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1399:13" pos:end="1399:42"><expr pos:start="1399:13" pos:end="1399:41"><call pos:start="1399:13" pos:end="1399:41"><name pos:start="1399:13" pos:end="1399:27">gen_store_fpr64</name><argument_list pos:start="1399:28" pos:end="1399:41">(<argument pos:start="1399:29" pos:end="1399:31"><expr pos:start="1399:29" pos:end="1399:31"><name pos:start="1399:29" pos:end="1399:31">ctx</name></expr></argument>, <argument pos:start="1399:34" pos:end="1399:36"><expr pos:start="1399:34" pos:end="1399:36"><name pos:start="1399:34" pos:end="1399:36">fp0</name></expr></argument>, <argument pos:start="1399:39" pos:end="1399:40"><expr pos:start="1399:39" pos:end="1399:40"><name pos:start="1399:39" pos:end="1399:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1401:13" pos:end="1401:35"><expr pos:start="1401:13" pos:end="1401:34"><call pos:start="1401:13" pos:end="1401:34"><name pos:start="1401:13" pos:end="1401:29">tcg_temp_free_i64</name><argument_list pos:start="1401:30" pos:end="1401:34">(<argument pos:start="1401:31" pos:end="1401:33"><expr pos:start="1401:31" pos:end="1401:33"><name pos:start="1401:31" pos:end="1401:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1405:9" pos:end="1405:24"><expr pos:start="1405:9" pos:end="1405:23"><name pos:start="1405:9" pos:end="1405:11">opn</name> <operator pos:start="1405:13" pos:end="1405:13">=</operator> <literal type="string" pos:start="1405:15" pos:end="1405:23">"recip.d"</literal></expr>;</expr_stmt>

        <break pos:start="1407:9" pos:end="1407:14">break;</break>

    <case pos:start="1409:5" pos:end="1409:21">case <expr pos:start="1409:10" pos:end="1409:20"><name pos:start="1409:10" pos:end="1409:20">OPC_RSQRT_D</name></expr>:</case>

        <expr_stmt pos:start="1411:9" pos:end="1411:33"><expr pos:start="1411:9" pos:end="1411:32"><call pos:start="1411:9" pos:end="1411:32"><name pos:start="1411:9" pos:end="1411:27">check_cp1_64bitmode</name><argument_list pos:start="1411:28" pos:end="1411:32">(<argument pos:start="1411:29" pos:end="1411:31"><expr pos:start="1411:29" pos:end="1411:31"><name pos:start="1411:29" pos:end="1411:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1413:9" pos:end="1427:9">{<block_content pos:start="1415:13" pos:end="1425:35">

            <decl_stmt pos:start="1415:13" pos:end="1415:46"><decl pos:start="1415:13" pos:end="1415:45"><type pos:start="1415:13" pos:end="1415:20"><name pos:start="1415:13" pos:end="1415:20">TCGv_i64</name></type> <name pos:start="1415:22" pos:end="1415:24">fp0</name> <init pos:start="1415:26" pos:end="1415:45">= <expr pos:start="1415:28" pos:end="1415:45"><call pos:start="1415:28" pos:end="1415:45"><name pos:start="1415:28" pos:end="1415:43">tcg_temp_new_i64</name><argument_list pos:start="1415:44" pos:end="1415:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1419:13" pos:end="1419:41"><expr pos:start="1419:13" pos:end="1419:40"><call pos:start="1419:13" pos:end="1419:40"><name pos:start="1419:13" pos:end="1419:26">gen_load_fpr64</name><argument_list pos:start="1419:27" pos:end="1419:40">(<argument pos:start="1419:28" pos:end="1419:30"><expr pos:start="1419:28" pos:end="1419:30"><name pos:start="1419:28" pos:end="1419:30">ctx</name></expr></argument>, <argument pos:start="1419:33" pos:end="1419:35"><expr pos:start="1419:33" pos:end="1419:35"><name pos:start="1419:33" pos:end="1419:35">fp0</name></expr></argument>, <argument pos:start="1419:38" pos:end="1419:39"><expr pos:start="1419:38" pos:end="1419:39"><name pos:start="1419:38" pos:end="1419:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1421:13" pos:end="1421:56"><expr pos:start="1421:13" pos:end="1421:55"><call pos:start="1421:13" pos:end="1421:55"><name pos:start="1421:13" pos:end="1421:36">gen_helper_float_rsqrt_d</name><argument_list pos:start="1421:37" pos:end="1421:55">(<argument pos:start="1421:38" pos:end="1421:40"><expr pos:start="1421:38" pos:end="1421:40"><name pos:start="1421:38" pos:end="1421:40">fp0</name></expr></argument>, <argument pos:start="1421:43" pos:end="1421:49"><expr pos:start="1421:43" pos:end="1421:49"><name pos:start="1421:43" pos:end="1421:49">cpu_env</name></expr></argument>, <argument pos:start="1421:52" pos:end="1421:54"><expr pos:start="1421:52" pos:end="1421:54"><name pos:start="1421:52" pos:end="1421:54">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1423:13" pos:end="1423:42"><expr pos:start="1423:13" pos:end="1423:41"><call pos:start="1423:13" pos:end="1423:41"><name pos:start="1423:13" pos:end="1423:27">gen_store_fpr64</name><argument_list pos:start="1423:28" pos:end="1423:41">(<argument pos:start="1423:29" pos:end="1423:31"><expr pos:start="1423:29" pos:end="1423:31"><name pos:start="1423:29" pos:end="1423:31">ctx</name></expr></argument>, <argument pos:start="1423:34" pos:end="1423:36"><expr pos:start="1423:34" pos:end="1423:36"><name pos:start="1423:34" pos:end="1423:36">fp0</name></expr></argument>, <argument pos:start="1423:39" pos:end="1423:40"><expr pos:start="1423:39" pos:end="1423:40"><name pos:start="1423:39" pos:end="1423:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1425:13" pos:end="1425:35"><expr pos:start="1425:13" pos:end="1425:34"><call pos:start="1425:13" pos:end="1425:34"><name pos:start="1425:13" pos:end="1425:29">tcg_temp_free_i64</name><argument_list pos:start="1425:30" pos:end="1425:34">(<argument pos:start="1425:31" pos:end="1425:33"><expr pos:start="1425:31" pos:end="1425:33"><name pos:start="1425:31" pos:end="1425:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1429:9" pos:end="1429:24"><expr pos:start="1429:9" pos:end="1429:23"><name pos:start="1429:9" pos:end="1429:11">opn</name> <operator pos:start="1429:13" pos:end="1429:13">=</operator> <literal type="string" pos:start="1429:15" pos:end="1429:23">"rsqrt.d"</literal></expr>;</expr_stmt>

        <break pos:start="1431:9" pos:end="1431:14">break;</break>

    <case pos:start="1433:5" pos:end="1433:22">case <expr pos:start="1433:10" pos:end="1433:21"><name pos:start="1433:10" pos:end="1433:21">OPC_RECIP2_D</name></expr>:</case>

        <expr_stmt pos:start="1435:9" pos:end="1435:33"><expr pos:start="1435:9" pos:end="1435:32"><call pos:start="1435:9" pos:end="1435:32"><name pos:start="1435:9" pos:end="1435:27">check_cp1_64bitmode</name><argument_list pos:start="1435:28" pos:end="1435:32">(<argument pos:start="1435:29" pos:end="1435:31"><expr pos:start="1435:29" pos:end="1435:31"><name pos:start="1435:29" pos:end="1435:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1437:9" pos:end="1457:9">{<block_content pos:start="1439:13" pos:end="1455:35">

            <decl_stmt pos:start="1439:13" pos:end="1439:46"><decl pos:start="1439:13" pos:end="1439:45"><type pos:start="1439:13" pos:end="1439:20"><name pos:start="1439:13" pos:end="1439:20">TCGv_i64</name></type> <name pos:start="1439:22" pos:end="1439:24">fp0</name> <init pos:start="1439:26" pos:end="1439:45">= <expr pos:start="1439:28" pos:end="1439:45"><call pos:start="1439:28" pos:end="1439:45"><name pos:start="1439:28" pos:end="1439:43">tcg_temp_new_i64</name><argument_list pos:start="1439:44" pos:end="1439:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1441:13" pos:end="1441:46"><decl pos:start="1441:13" pos:end="1441:45"><type pos:start="1441:13" pos:end="1441:20"><name pos:start="1441:13" pos:end="1441:20">TCGv_i64</name></type> <name pos:start="1441:22" pos:end="1441:24">fp1</name> <init pos:start="1441:26" pos:end="1441:45">= <expr pos:start="1441:28" pos:end="1441:45"><call pos:start="1441:28" pos:end="1441:45"><name pos:start="1441:28" pos:end="1441:43">tcg_temp_new_i64</name><argument_list pos:start="1441:44" pos:end="1441:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1445:13" pos:end="1445:41"><expr pos:start="1445:13" pos:end="1445:40"><call pos:start="1445:13" pos:end="1445:40"><name pos:start="1445:13" pos:end="1445:26">gen_load_fpr64</name><argument_list pos:start="1445:27" pos:end="1445:40">(<argument pos:start="1445:28" pos:end="1445:30"><expr pos:start="1445:28" pos:end="1445:30"><name pos:start="1445:28" pos:end="1445:30">ctx</name></expr></argument>, <argument pos:start="1445:33" pos:end="1445:35"><expr pos:start="1445:33" pos:end="1445:35"><name pos:start="1445:33" pos:end="1445:35">fp0</name></expr></argument>, <argument pos:start="1445:38" pos:end="1445:39"><expr pos:start="1445:38" pos:end="1445:39"><name pos:start="1445:38" pos:end="1445:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1447:13" pos:end="1447:41"><expr pos:start="1447:13" pos:end="1447:40"><call pos:start="1447:13" pos:end="1447:40"><name pos:start="1447:13" pos:end="1447:26">gen_load_fpr64</name><argument_list pos:start="1447:27" pos:end="1447:40">(<argument pos:start="1447:28" pos:end="1447:30"><expr pos:start="1447:28" pos:end="1447:30"><name pos:start="1447:28" pos:end="1447:30">ctx</name></expr></argument>, <argument pos:start="1447:33" pos:end="1447:35"><expr pos:start="1447:33" pos:end="1447:35"><name pos:start="1447:33" pos:end="1447:35">fp1</name></expr></argument>, <argument pos:start="1447:38" pos:end="1447:39"><expr pos:start="1447:38" pos:end="1447:39"><name pos:start="1447:38" pos:end="1447:39">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1449:13" pos:end="1449:62"><expr pos:start="1449:13" pos:end="1449:61"><call pos:start="1449:13" pos:end="1449:61"><name pos:start="1449:13" pos:end="1449:37">gen_helper_float_recip2_d</name><argument_list pos:start="1449:38" pos:end="1449:61">(<argument pos:start="1449:39" pos:end="1449:41"><expr pos:start="1449:39" pos:end="1449:41"><name pos:start="1449:39" pos:end="1449:41">fp0</name></expr></argument>, <argument pos:start="1449:44" pos:end="1449:50"><expr pos:start="1449:44" pos:end="1449:50"><name pos:start="1449:44" pos:end="1449:50">cpu_env</name></expr></argument>, <argument pos:start="1449:53" pos:end="1449:55"><expr pos:start="1449:53" pos:end="1449:55"><name pos:start="1449:53" pos:end="1449:55">fp0</name></expr></argument>, <argument pos:start="1449:58" pos:end="1449:60"><expr pos:start="1449:58" pos:end="1449:60"><name pos:start="1449:58" pos:end="1449:60">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1451:13" pos:end="1451:35"><expr pos:start="1451:13" pos:end="1451:34"><call pos:start="1451:13" pos:end="1451:34"><name pos:start="1451:13" pos:end="1451:29">tcg_temp_free_i64</name><argument_list pos:start="1451:30" pos:end="1451:34">(<argument pos:start="1451:31" pos:end="1451:33"><expr pos:start="1451:31" pos:end="1451:33"><name pos:start="1451:31" pos:end="1451:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1453:13" pos:end="1453:42"><expr pos:start="1453:13" pos:end="1453:41"><call pos:start="1453:13" pos:end="1453:41"><name pos:start="1453:13" pos:end="1453:27">gen_store_fpr64</name><argument_list pos:start="1453:28" pos:end="1453:41">(<argument pos:start="1453:29" pos:end="1453:31"><expr pos:start="1453:29" pos:end="1453:31"><name pos:start="1453:29" pos:end="1453:31">ctx</name></expr></argument>, <argument pos:start="1453:34" pos:end="1453:36"><expr pos:start="1453:34" pos:end="1453:36"><name pos:start="1453:34" pos:end="1453:36">fp0</name></expr></argument>, <argument pos:start="1453:39" pos:end="1453:40"><expr pos:start="1453:39" pos:end="1453:40"><name pos:start="1453:39" pos:end="1453:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1455:13" pos:end="1455:35"><expr pos:start="1455:13" pos:end="1455:34"><call pos:start="1455:13" pos:end="1455:34"><name pos:start="1455:13" pos:end="1455:29">tcg_temp_free_i64</name><argument_list pos:start="1455:30" pos:end="1455:34">(<argument pos:start="1455:31" pos:end="1455:33"><expr pos:start="1455:31" pos:end="1455:33"><name pos:start="1455:31" pos:end="1455:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1459:9" pos:end="1459:25"><expr pos:start="1459:9" pos:end="1459:24"><name pos:start="1459:9" pos:end="1459:11">opn</name> <operator pos:start="1459:13" pos:end="1459:13">=</operator> <literal type="string" pos:start="1459:15" pos:end="1459:24">"recip2.d"</literal></expr>;</expr_stmt>

        <break pos:start="1461:9" pos:end="1461:14">break;</break>

    <case pos:start="1463:5" pos:end="1463:22">case <expr pos:start="1463:10" pos:end="1463:21"><name pos:start="1463:10" pos:end="1463:21">OPC_RECIP1_D</name></expr>:</case>

        <expr_stmt pos:start="1465:9" pos:end="1465:33"><expr pos:start="1465:9" pos:end="1465:32"><call pos:start="1465:9" pos:end="1465:32"><name pos:start="1465:9" pos:end="1465:27">check_cp1_64bitmode</name><argument_list pos:start="1465:28" pos:end="1465:32">(<argument pos:start="1465:29" pos:end="1465:31"><expr pos:start="1465:29" pos:end="1465:31"><name pos:start="1465:29" pos:end="1465:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1467:9" pos:end="1481:9">{<block_content pos:start="1469:13" pos:end="1479:35">

            <decl_stmt pos:start="1469:13" pos:end="1469:46"><decl pos:start="1469:13" pos:end="1469:45"><type pos:start="1469:13" pos:end="1469:20"><name pos:start="1469:13" pos:end="1469:20">TCGv_i64</name></type> <name pos:start="1469:22" pos:end="1469:24">fp0</name> <init pos:start="1469:26" pos:end="1469:45">= <expr pos:start="1469:28" pos:end="1469:45"><call pos:start="1469:28" pos:end="1469:45"><name pos:start="1469:28" pos:end="1469:43">tcg_temp_new_i64</name><argument_list pos:start="1469:44" pos:end="1469:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1473:13" pos:end="1473:41"><expr pos:start="1473:13" pos:end="1473:40"><call pos:start="1473:13" pos:end="1473:40"><name pos:start="1473:13" pos:end="1473:26">gen_load_fpr64</name><argument_list pos:start="1473:27" pos:end="1473:40">(<argument pos:start="1473:28" pos:end="1473:30"><expr pos:start="1473:28" pos:end="1473:30"><name pos:start="1473:28" pos:end="1473:30">ctx</name></expr></argument>, <argument pos:start="1473:33" pos:end="1473:35"><expr pos:start="1473:33" pos:end="1473:35"><name pos:start="1473:33" pos:end="1473:35">fp0</name></expr></argument>, <argument pos:start="1473:38" pos:end="1473:39"><expr pos:start="1473:38" pos:end="1473:39"><name pos:start="1473:38" pos:end="1473:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1475:13" pos:end="1475:57"><expr pos:start="1475:13" pos:end="1475:56"><call pos:start="1475:13" pos:end="1475:56"><name pos:start="1475:13" pos:end="1475:37">gen_helper_float_recip1_d</name><argument_list pos:start="1475:38" pos:end="1475:56">(<argument pos:start="1475:39" pos:end="1475:41"><expr pos:start="1475:39" pos:end="1475:41"><name pos:start="1475:39" pos:end="1475:41">fp0</name></expr></argument>, <argument pos:start="1475:44" pos:end="1475:50"><expr pos:start="1475:44" pos:end="1475:50"><name pos:start="1475:44" pos:end="1475:50">cpu_env</name></expr></argument>, <argument pos:start="1475:53" pos:end="1475:55"><expr pos:start="1475:53" pos:end="1475:55"><name pos:start="1475:53" pos:end="1475:55">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1477:13" pos:end="1477:42"><expr pos:start="1477:13" pos:end="1477:41"><call pos:start="1477:13" pos:end="1477:41"><name pos:start="1477:13" pos:end="1477:27">gen_store_fpr64</name><argument_list pos:start="1477:28" pos:end="1477:41">(<argument pos:start="1477:29" pos:end="1477:31"><expr pos:start="1477:29" pos:end="1477:31"><name pos:start="1477:29" pos:end="1477:31">ctx</name></expr></argument>, <argument pos:start="1477:34" pos:end="1477:36"><expr pos:start="1477:34" pos:end="1477:36"><name pos:start="1477:34" pos:end="1477:36">fp0</name></expr></argument>, <argument pos:start="1477:39" pos:end="1477:40"><expr pos:start="1477:39" pos:end="1477:40"><name pos:start="1477:39" pos:end="1477:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1479:13" pos:end="1479:35"><expr pos:start="1479:13" pos:end="1479:34"><call pos:start="1479:13" pos:end="1479:34"><name pos:start="1479:13" pos:end="1479:29">tcg_temp_free_i64</name><argument_list pos:start="1479:30" pos:end="1479:34">(<argument pos:start="1479:31" pos:end="1479:33"><expr pos:start="1479:31" pos:end="1479:33"><name pos:start="1479:31" pos:end="1479:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1483:9" pos:end="1483:25"><expr pos:start="1483:9" pos:end="1483:24"><name pos:start="1483:9" pos:end="1483:11">opn</name> <operator pos:start="1483:13" pos:end="1483:13">=</operator> <literal type="string" pos:start="1483:15" pos:end="1483:24">"recip1.d"</literal></expr>;</expr_stmt>

        <break pos:start="1485:9" pos:end="1485:14">break;</break>

    <case pos:start="1487:5" pos:end="1487:22">case <expr pos:start="1487:10" pos:end="1487:21"><name pos:start="1487:10" pos:end="1487:21">OPC_RSQRT1_D</name></expr>:</case>

        <expr_stmt pos:start="1489:9" pos:end="1489:33"><expr pos:start="1489:9" pos:end="1489:32"><call pos:start="1489:9" pos:end="1489:32"><name pos:start="1489:9" pos:end="1489:27">check_cp1_64bitmode</name><argument_list pos:start="1489:28" pos:end="1489:32">(<argument pos:start="1489:29" pos:end="1489:31"><expr pos:start="1489:29" pos:end="1489:31"><name pos:start="1489:29" pos:end="1489:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1491:9" pos:end="1505:9">{<block_content pos:start="1493:13" pos:end="1503:35">

            <decl_stmt pos:start="1493:13" pos:end="1493:46"><decl pos:start="1493:13" pos:end="1493:45"><type pos:start="1493:13" pos:end="1493:20"><name pos:start="1493:13" pos:end="1493:20">TCGv_i64</name></type> <name pos:start="1493:22" pos:end="1493:24">fp0</name> <init pos:start="1493:26" pos:end="1493:45">= <expr pos:start="1493:28" pos:end="1493:45"><call pos:start="1493:28" pos:end="1493:45"><name pos:start="1493:28" pos:end="1493:43">tcg_temp_new_i64</name><argument_list pos:start="1493:44" pos:end="1493:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1497:13" pos:end="1497:41"><expr pos:start="1497:13" pos:end="1497:40"><call pos:start="1497:13" pos:end="1497:40"><name pos:start="1497:13" pos:end="1497:26">gen_load_fpr64</name><argument_list pos:start="1497:27" pos:end="1497:40">(<argument pos:start="1497:28" pos:end="1497:30"><expr pos:start="1497:28" pos:end="1497:30"><name pos:start="1497:28" pos:end="1497:30">ctx</name></expr></argument>, <argument pos:start="1497:33" pos:end="1497:35"><expr pos:start="1497:33" pos:end="1497:35"><name pos:start="1497:33" pos:end="1497:35">fp0</name></expr></argument>, <argument pos:start="1497:38" pos:end="1497:39"><expr pos:start="1497:38" pos:end="1497:39"><name pos:start="1497:38" pos:end="1497:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1499:13" pos:end="1499:57"><expr pos:start="1499:13" pos:end="1499:56"><call pos:start="1499:13" pos:end="1499:56"><name pos:start="1499:13" pos:end="1499:37">gen_helper_float_rsqrt1_d</name><argument_list pos:start="1499:38" pos:end="1499:56">(<argument pos:start="1499:39" pos:end="1499:41"><expr pos:start="1499:39" pos:end="1499:41"><name pos:start="1499:39" pos:end="1499:41">fp0</name></expr></argument>, <argument pos:start="1499:44" pos:end="1499:50"><expr pos:start="1499:44" pos:end="1499:50"><name pos:start="1499:44" pos:end="1499:50">cpu_env</name></expr></argument>, <argument pos:start="1499:53" pos:end="1499:55"><expr pos:start="1499:53" pos:end="1499:55"><name pos:start="1499:53" pos:end="1499:55">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1501:13" pos:end="1501:42"><expr pos:start="1501:13" pos:end="1501:41"><call pos:start="1501:13" pos:end="1501:41"><name pos:start="1501:13" pos:end="1501:27">gen_store_fpr64</name><argument_list pos:start="1501:28" pos:end="1501:41">(<argument pos:start="1501:29" pos:end="1501:31"><expr pos:start="1501:29" pos:end="1501:31"><name pos:start="1501:29" pos:end="1501:31">ctx</name></expr></argument>, <argument pos:start="1501:34" pos:end="1501:36"><expr pos:start="1501:34" pos:end="1501:36"><name pos:start="1501:34" pos:end="1501:36">fp0</name></expr></argument>, <argument pos:start="1501:39" pos:end="1501:40"><expr pos:start="1501:39" pos:end="1501:40"><name pos:start="1501:39" pos:end="1501:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1503:13" pos:end="1503:35"><expr pos:start="1503:13" pos:end="1503:34"><call pos:start="1503:13" pos:end="1503:34"><name pos:start="1503:13" pos:end="1503:29">tcg_temp_free_i64</name><argument_list pos:start="1503:30" pos:end="1503:34">(<argument pos:start="1503:31" pos:end="1503:33"><expr pos:start="1503:31" pos:end="1503:33"><name pos:start="1503:31" pos:end="1503:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1507:9" pos:end="1507:25"><expr pos:start="1507:9" pos:end="1507:24"><name pos:start="1507:9" pos:end="1507:11">opn</name> <operator pos:start="1507:13" pos:end="1507:13">=</operator> <literal type="string" pos:start="1507:15" pos:end="1507:24">"rsqrt1.d"</literal></expr>;</expr_stmt>

        <break pos:start="1509:9" pos:end="1509:14">break;</break>

    <case pos:start="1511:5" pos:end="1511:22">case <expr pos:start="1511:10" pos:end="1511:21"><name pos:start="1511:10" pos:end="1511:21">OPC_RSQRT2_D</name></expr>:</case>

        <expr_stmt pos:start="1513:9" pos:end="1513:33"><expr pos:start="1513:9" pos:end="1513:32"><call pos:start="1513:9" pos:end="1513:32"><name pos:start="1513:9" pos:end="1513:27">check_cp1_64bitmode</name><argument_list pos:start="1513:28" pos:end="1513:32">(<argument pos:start="1513:29" pos:end="1513:31"><expr pos:start="1513:29" pos:end="1513:31"><name pos:start="1513:29" pos:end="1513:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1515:9" pos:end="1535:9">{<block_content pos:start="1517:13" pos:end="1533:35">

            <decl_stmt pos:start="1517:13" pos:end="1517:46"><decl pos:start="1517:13" pos:end="1517:45"><type pos:start="1517:13" pos:end="1517:20"><name pos:start="1517:13" pos:end="1517:20">TCGv_i64</name></type> <name pos:start="1517:22" pos:end="1517:24">fp0</name> <init pos:start="1517:26" pos:end="1517:45">= <expr pos:start="1517:28" pos:end="1517:45"><call pos:start="1517:28" pos:end="1517:45"><name pos:start="1517:28" pos:end="1517:43">tcg_temp_new_i64</name><argument_list pos:start="1517:44" pos:end="1517:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1519:13" pos:end="1519:46"><decl pos:start="1519:13" pos:end="1519:45"><type pos:start="1519:13" pos:end="1519:20"><name pos:start="1519:13" pos:end="1519:20">TCGv_i64</name></type> <name pos:start="1519:22" pos:end="1519:24">fp1</name> <init pos:start="1519:26" pos:end="1519:45">= <expr pos:start="1519:28" pos:end="1519:45"><call pos:start="1519:28" pos:end="1519:45"><name pos:start="1519:28" pos:end="1519:43">tcg_temp_new_i64</name><argument_list pos:start="1519:44" pos:end="1519:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1523:13" pos:end="1523:41"><expr pos:start="1523:13" pos:end="1523:40"><call pos:start="1523:13" pos:end="1523:40"><name pos:start="1523:13" pos:end="1523:26">gen_load_fpr64</name><argument_list pos:start="1523:27" pos:end="1523:40">(<argument pos:start="1523:28" pos:end="1523:30"><expr pos:start="1523:28" pos:end="1523:30"><name pos:start="1523:28" pos:end="1523:30">ctx</name></expr></argument>, <argument pos:start="1523:33" pos:end="1523:35"><expr pos:start="1523:33" pos:end="1523:35"><name pos:start="1523:33" pos:end="1523:35">fp0</name></expr></argument>, <argument pos:start="1523:38" pos:end="1523:39"><expr pos:start="1523:38" pos:end="1523:39"><name pos:start="1523:38" pos:end="1523:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1525:13" pos:end="1525:41"><expr pos:start="1525:13" pos:end="1525:40"><call pos:start="1525:13" pos:end="1525:40"><name pos:start="1525:13" pos:end="1525:26">gen_load_fpr64</name><argument_list pos:start="1525:27" pos:end="1525:40">(<argument pos:start="1525:28" pos:end="1525:30"><expr pos:start="1525:28" pos:end="1525:30"><name pos:start="1525:28" pos:end="1525:30">ctx</name></expr></argument>, <argument pos:start="1525:33" pos:end="1525:35"><expr pos:start="1525:33" pos:end="1525:35"><name pos:start="1525:33" pos:end="1525:35">fp1</name></expr></argument>, <argument pos:start="1525:38" pos:end="1525:39"><expr pos:start="1525:38" pos:end="1525:39"><name pos:start="1525:38" pos:end="1525:39">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1527:13" pos:end="1527:62"><expr pos:start="1527:13" pos:end="1527:61"><call pos:start="1527:13" pos:end="1527:61"><name pos:start="1527:13" pos:end="1527:37">gen_helper_float_rsqrt2_d</name><argument_list pos:start="1527:38" pos:end="1527:61">(<argument pos:start="1527:39" pos:end="1527:41"><expr pos:start="1527:39" pos:end="1527:41"><name pos:start="1527:39" pos:end="1527:41">fp0</name></expr></argument>, <argument pos:start="1527:44" pos:end="1527:50"><expr pos:start="1527:44" pos:end="1527:50"><name pos:start="1527:44" pos:end="1527:50">cpu_env</name></expr></argument>, <argument pos:start="1527:53" pos:end="1527:55"><expr pos:start="1527:53" pos:end="1527:55"><name pos:start="1527:53" pos:end="1527:55">fp0</name></expr></argument>, <argument pos:start="1527:58" pos:end="1527:60"><expr pos:start="1527:58" pos:end="1527:60"><name pos:start="1527:58" pos:end="1527:60">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1529:13" pos:end="1529:35"><expr pos:start="1529:13" pos:end="1529:34"><call pos:start="1529:13" pos:end="1529:34"><name pos:start="1529:13" pos:end="1529:29">tcg_temp_free_i64</name><argument_list pos:start="1529:30" pos:end="1529:34">(<argument pos:start="1529:31" pos:end="1529:33"><expr pos:start="1529:31" pos:end="1529:33"><name pos:start="1529:31" pos:end="1529:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1531:13" pos:end="1531:42"><expr pos:start="1531:13" pos:end="1531:41"><call pos:start="1531:13" pos:end="1531:41"><name pos:start="1531:13" pos:end="1531:27">gen_store_fpr64</name><argument_list pos:start="1531:28" pos:end="1531:41">(<argument pos:start="1531:29" pos:end="1531:31"><expr pos:start="1531:29" pos:end="1531:31"><name pos:start="1531:29" pos:end="1531:31">ctx</name></expr></argument>, <argument pos:start="1531:34" pos:end="1531:36"><expr pos:start="1531:34" pos:end="1531:36"><name pos:start="1531:34" pos:end="1531:36">fp0</name></expr></argument>, <argument pos:start="1531:39" pos:end="1531:40"><expr pos:start="1531:39" pos:end="1531:40"><name pos:start="1531:39" pos:end="1531:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1533:13" pos:end="1533:35"><expr pos:start="1533:13" pos:end="1533:34"><call pos:start="1533:13" pos:end="1533:34"><name pos:start="1533:13" pos:end="1533:29">tcg_temp_free_i64</name><argument_list pos:start="1533:30" pos:end="1533:34">(<argument pos:start="1533:31" pos:end="1533:33"><expr pos:start="1533:31" pos:end="1533:33"><name pos:start="1533:31" pos:end="1533:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1537:9" pos:end="1537:25"><expr pos:start="1537:9" pos:end="1537:24"><name pos:start="1537:9" pos:end="1537:11">opn</name> <operator pos:start="1537:13" pos:end="1537:13">=</operator> <literal type="string" pos:start="1537:15" pos:end="1537:24">"rsqrt2.d"</literal></expr>;</expr_stmt>

        <break pos:start="1539:9" pos:end="1539:14">break;</break>

    <case pos:start="1541:5" pos:end="1541:21">case <expr pos:start="1541:10" pos:end="1541:20"><name pos:start="1541:10" pos:end="1541:20">OPC_CMP_F_D</name></expr>:</case>

    <case pos:start="1543:5" pos:end="1543:22">case <expr pos:start="1543:10" pos:end="1543:21"><name pos:start="1543:10" pos:end="1543:21">OPC_CMP_UN_D</name></expr>:</case>

    <case pos:start="1545:5" pos:end="1545:22">case <expr pos:start="1545:10" pos:end="1545:21"><name pos:start="1545:10" pos:end="1545:21">OPC_CMP_EQ_D</name></expr>:</case>

    <case pos:start="1547:5" pos:end="1547:23">case <expr pos:start="1547:10" pos:end="1547:22"><name pos:start="1547:10" pos:end="1547:22">OPC_CMP_UEQ_D</name></expr>:</case>

    <case pos:start="1549:5" pos:end="1549:23">case <expr pos:start="1549:10" pos:end="1549:22"><name pos:start="1549:10" pos:end="1549:22">OPC_CMP_OLT_D</name></expr>:</case>

    <case pos:start="1551:5" pos:end="1551:23">case <expr pos:start="1551:10" pos:end="1551:22"><name pos:start="1551:10" pos:end="1551:22">OPC_CMP_ULT_D</name></expr>:</case>

    <case pos:start="1553:5" pos:end="1553:23">case <expr pos:start="1553:10" pos:end="1553:22"><name pos:start="1553:10" pos:end="1553:22">OPC_CMP_OLE_D</name></expr>:</case>

    <case pos:start="1555:5" pos:end="1555:23">case <expr pos:start="1555:10" pos:end="1555:22"><name pos:start="1555:10" pos:end="1555:22">OPC_CMP_ULE_D</name></expr>:</case>

    <case pos:start="1557:5" pos:end="1557:22">case <expr pos:start="1557:10" pos:end="1557:21"><name pos:start="1557:10" pos:end="1557:21">OPC_CMP_SF_D</name></expr>:</case>

    <case pos:start="1559:5" pos:end="1559:24">case <expr pos:start="1559:10" pos:end="1559:23"><name pos:start="1559:10" pos:end="1559:23">OPC_CMP_NGLE_D</name></expr>:</case>

    <case pos:start="1561:5" pos:end="1561:23">case <expr pos:start="1561:10" pos:end="1561:22"><name pos:start="1561:10" pos:end="1561:22">OPC_CMP_SEQ_D</name></expr>:</case>

    <case pos:start="1563:5" pos:end="1563:23">case <expr pos:start="1563:10" pos:end="1563:22"><name pos:start="1563:10" pos:end="1563:22">OPC_CMP_NGL_D</name></expr>:</case>

    <case pos:start="1565:5" pos:end="1565:22">case <expr pos:start="1565:10" pos:end="1565:21"><name pos:start="1565:10" pos:end="1565:21">OPC_CMP_LT_D</name></expr>:</case>

    <case pos:start="1567:5" pos:end="1567:23">case <expr pos:start="1567:10" pos:end="1567:22"><name pos:start="1567:10" pos:end="1567:22">OPC_CMP_NGE_D</name></expr>:</case>

    <case pos:start="1569:5" pos:end="1569:22">case <expr pos:start="1569:10" pos:end="1569:21"><name pos:start="1569:10" pos:end="1569:21">OPC_CMP_LE_D</name></expr>:</case>

    <case pos:start="1571:5" pos:end="1571:23">case <expr pos:start="1571:10" pos:end="1571:22"><name pos:start="1571:10" pos:end="1571:22">OPC_CMP_NGT_D</name></expr>:</case>

        <if_stmt pos:start="1573:9" pos:end="1585:9"><if pos:start="1573:9" pos:end="1579:9">if <condition pos:start="1573:12" pos:end="1573:35">(<expr pos:start="1573:13" pos:end="1573:34"><name pos:start="1573:13" pos:end="1573:23"><name pos:start="1573:13" pos:end="1573:15">ctx</name><operator pos:start="1573:16" pos:end="1573:17">-&gt;</operator><name pos:start="1573:18" pos:end="1573:23">opcode</name></name> <operator pos:start="1573:25" pos:end="1573:25">&amp;</operator> <operator pos:start="1573:27" pos:end="1573:27">(</operator><literal type="number" pos:start="1573:28" pos:end="1573:28">1</literal> <operator pos:start="1573:30" pos:end="1573:31">&lt;&lt;</operator> <literal type="number" pos:start="1573:33" pos:end="1573:33">6</literal><operator pos:start="1573:34" pos:end="1573:34">)</operator></expr>)</condition> <block pos:start="1573:37" pos:end="1579:9">{<block_content pos:start="1575:13" pos:end="1577:41">

            <expr_stmt pos:start="1575:13" pos:end="1575:51"><expr pos:start="1575:13" pos:end="1575:50"><call pos:start="1575:13" pos:end="1575:50"><name pos:start="1575:13" pos:end="1575:24">gen_cmpabs_d</name><argument_list pos:start="1575:25" pos:end="1575:50">(<argument pos:start="1575:26" pos:end="1575:28"><expr pos:start="1575:26" pos:end="1575:28"><name pos:start="1575:26" pos:end="1575:28">ctx</name></expr></argument>, <argument pos:start="1575:31" pos:end="1575:37"><expr pos:start="1575:31" pos:end="1575:37"><name pos:start="1575:31" pos:end="1575:34">func</name><operator pos:start="1575:35" pos:end="1575:35">-</operator><literal type="number" pos:start="1575:36" pos:end="1575:37">48</literal></expr></argument>, <argument pos:start="1575:40" pos:end="1575:41"><expr pos:start="1575:40" pos:end="1575:41"><name pos:start="1575:40" pos:end="1575:41">ft</name></expr></argument>, <argument pos:start="1575:44" pos:end="1575:45"><expr pos:start="1575:44" pos:end="1575:45"><name pos:start="1575:44" pos:end="1575:45">fs</name></expr></argument>, <argument pos:start="1575:48" pos:end="1575:49"><expr pos:start="1575:48" pos:end="1575:49"><name pos:start="1575:48" pos:end="1575:49">cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1577:13" pos:end="1577:41"><expr pos:start="1577:13" pos:end="1577:40"><name pos:start="1577:13" pos:end="1577:15">opn</name> <operator pos:start="1577:17" pos:end="1577:17">=</operator> <name pos:start="1577:19" pos:end="1577:40"><name pos:start="1577:19" pos:end="1577:31">condnames_abs</name><index pos:start="1577:32" pos:end="1577:40">[<expr pos:start="1577:33" pos:end="1577:39"><name pos:start="1577:33" pos:end="1577:36">func</name><operator pos:start="1577:37" pos:end="1577:37">-</operator><literal type="number" pos:start="1577:38" pos:end="1577:39">48</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="1579:11" pos:end="1585:9">else <block pos:start="1579:16" pos:end="1585:9">{<block_content pos:start="1581:13" pos:end="1583:37">

            <expr_stmt pos:start="1581:13" pos:end="1581:48"><expr pos:start="1581:13" pos:end="1581:47"><call pos:start="1581:13" pos:end="1581:47"><name pos:start="1581:13" pos:end="1581:21">gen_cmp_d</name><argument_list pos:start="1581:22" pos:end="1581:47">(<argument pos:start="1581:23" pos:end="1581:25"><expr pos:start="1581:23" pos:end="1581:25"><name pos:start="1581:23" pos:end="1581:25">ctx</name></expr></argument>, <argument pos:start="1581:28" pos:end="1581:34"><expr pos:start="1581:28" pos:end="1581:34"><name pos:start="1581:28" pos:end="1581:31">func</name><operator pos:start="1581:32" pos:end="1581:32">-</operator><literal type="number" pos:start="1581:33" pos:end="1581:34">48</literal></expr></argument>, <argument pos:start="1581:37" pos:end="1581:38"><expr pos:start="1581:37" pos:end="1581:38"><name pos:start="1581:37" pos:end="1581:38">ft</name></expr></argument>, <argument pos:start="1581:41" pos:end="1581:42"><expr pos:start="1581:41" pos:end="1581:42"><name pos:start="1581:41" pos:end="1581:42">fs</name></expr></argument>, <argument pos:start="1581:45" pos:end="1581:46"><expr pos:start="1581:45" pos:end="1581:46"><name pos:start="1581:45" pos:end="1581:46">cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1583:13" pos:end="1583:37"><expr pos:start="1583:13" pos:end="1583:36"><name pos:start="1583:13" pos:end="1583:15">opn</name> <operator pos:start="1583:17" pos:end="1583:17">=</operator> <name pos:start="1583:19" pos:end="1583:36"><name pos:start="1583:19" pos:end="1583:27">condnames</name><index pos:start="1583:28" pos:end="1583:36">[<expr pos:start="1583:29" pos:end="1583:35"><name pos:start="1583:29" pos:end="1583:32">func</name><operator pos:start="1583:33" pos:end="1583:33">-</operator><literal type="number" pos:start="1583:34" pos:end="1583:35">48</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="1587:9" pos:end="1587:14">break;</break>

    <case pos:start="1589:5" pos:end="1589:21">case <expr pos:start="1589:10" pos:end="1589:20"><name pos:start="1589:10" pos:end="1589:20">OPC_CVT_S_D</name></expr>:</case>

        <expr_stmt pos:start="1591:9" pos:end="1591:37"><expr pos:start="1591:9" pos:end="1591:36"><call pos:start="1591:9" pos:end="1591:36"><name pos:start="1591:9" pos:end="1591:27">check_cp1_registers</name><argument_list pos:start="1591:28" pos:end="1591:36">(<argument pos:start="1591:29" pos:end="1591:31"><expr pos:start="1591:29" pos:end="1591:31"><name pos:start="1591:29" pos:end="1591:31">ctx</name></expr></argument>, <argument pos:start="1591:34" pos:end="1591:35"><expr pos:start="1591:34" pos:end="1591:35"><name pos:start="1591:34" pos:end="1591:35">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1593:9" pos:end="1611:9">{<block_content pos:start="1595:13" pos:end="1609:36">

            <decl_stmt pos:start="1595:13" pos:end="1595:47"><decl pos:start="1595:13" pos:end="1595:46"><type pos:start="1595:13" pos:end="1595:20"><name pos:start="1595:13" pos:end="1595:20">TCGv_i32</name></type> <name pos:start="1595:22" pos:end="1595:25">fp32</name> <init pos:start="1595:27" pos:end="1595:46">= <expr pos:start="1595:29" pos:end="1595:46"><call pos:start="1595:29" pos:end="1595:46"><name pos:start="1595:29" pos:end="1595:44">tcg_temp_new_i32</name><argument_list pos:start="1595:45" pos:end="1595:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1597:13" pos:end="1597:47"><decl pos:start="1597:13" pos:end="1597:46"><type pos:start="1597:13" pos:end="1597:20"><name pos:start="1597:13" pos:end="1597:20">TCGv_i64</name></type> <name pos:start="1597:22" pos:end="1597:25">fp64</name> <init pos:start="1597:27" pos:end="1597:46">= <expr pos:start="1597:29" pos:end="1597:46"><call pos:start="1597:29" pos:end="1597:46"><name pos:start="1597:29" pos:end="1597:44">tcg_temp_new_i64</name><argument_list pos:start="1597:45" pos:end="1597:46">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1601:13" pos:end="1601:42"><expr pos:start="1601:13" pos:end="1601:41"><call pos:start="1601:13" pos:end="1601:41"><name pos:start="1601:13" pos:end="1601:26">gen_load_fpr64</name><argument_list pos:start="1601:27" pos:end="1601:41">(<argument pos:start="1601:28" pos:end="1601:30"><expr pos:start="1601:28" pos:end="1601:30"><name pos:start="1601:28" pos:end="1601:30">ctx</name></expr></argument>, <argument pos:start="1601:33" pos:end="1601:36"><expr pos:start="1601:33" pos:end="1601:36"><name pos:start="1601:33" pos:end="1601:36">fp64</name></expr></argument>, <argument pos:start="1601:39" pos:end="1601:40"><expr pos:start="1601:39" pos:end="1601:40"><name pos:start="1601:39" pos:end="1601:40">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1603:13" pos:end="1603:57"><expr pos:start="1603:13" pos:end="1603:56"><call pos:start="1603:13" pos:end="1603:56"><name pos:start="1603:13" pos:end="1603:35">gen_helper_float_cvts_d</name><argument_list pos:start="1603:36" pos:end="1603:56">(<argument pos:start="1603:37" pos:end="1603:40"><expr pos:start="1603:37" pos:end="1603:40"><name pos:start="1603:37" pos:end="1603:40">fp32</name></expr></argument>, <argument pos:start="1603:43" pos:end="1603:49"><expr pos:start="1603:43" pos:end="1603:49"><name pos:start="1603:43" pos:end="1603:49">cpu_env</name></expr></argument>, <argument pos:start="1603:52" pos:end="1603:55"><expr pos:start="1603:52" pos:end="1603:55"><name pos:start="1603:52" pos:end="1603:55">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1605:13" pos:end="1605:36"><expr pos:start="1605:13" pos:end="1605:35"><call pos:start="1605:13" pos:end="1605:35"><name pos:start="1605:13" pos:end="1605:29">tcg_temp_free_i64</name><argument_list pos:start="1605:30" pos:end="1605:35">(<argument pos:start="1605:31" pos:end="1605:34"><expr pos:start="1605:31" pos:end="1605:34"><name pos:start="1605:31" pos:end="1605:34">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1607:13" pos:end="1607:38"><expr pos:start="1607:13" pos:end="1607:37"><call pos:start="1607:13" pos:end="1607:37"><name pos:start="1607:13" pos:end="1607:27">gen_store_fpr32</name><argument_list pos:start="1607:28" pos:end="1607:37">(<argument pos:start="1607:29" pos:end="1607:32"><expr pos:start="1607:29" pos:end="1607:32"><name pos:start="1607:29" pos:end="1607:32">fp32</name></expr></argument>, <argument pos:start="1607:35" pos:end="1607:36"><expr pos:start="1607:35" pos:end="1607:36"><name pos:start="1607:35" pos:end="1607:36">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1609:13" pos:end="1609:36"><expr pos:start="1609:13" pos:end="1609:35"><call pos:start="1609:13" pos:end="1609:35"><name pos:start="1609:13" pos:end="1609:29">tcg_temp_free_i32</name><argument_list pos:start="1609:30" pos:end="1609:35">(<argument pos:start="1609:31" pos:end="1609:34"><expr pos:start="1609:31" pos:end="1609:34"><name pos:start="1609:31" pos:end="1609:34">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1613:9" pos:end="1613:24"><expr pos:start="1613:9" pos:end="1613:23"><name pos:start="1613:9" pos:end="1613:11">opn</name> <operator pos:start="1613:13" pos:end="1613:13">=</operator> <literal type="string" pos:start="1613:15" pos:end="1613:23">"cvt.s.d"</literal></expr>;</expr_stmt>

        <break pos:start="1615:9" pos:end="1615:14">break;</break>

    <case pos:start="1617:5" pos:end="1617:21">case <expr pos:start="1617:10" pos:end="1617:20"><name pos:start="1617:10" pos:end="1617:20">OPC_CVT_W_D</name></expr>:</case>

        <expr_stmt pos:start="1619:9" pos:end="1619:37"><expr pos:start="1619:9" pos:end="1619:36"><call pos:start="1619:9" pos:end="1619:36"><name pos:start="1619:9" pos:end="1619:27">check_cp1_registers</name><argument_list pos:start="1619:28" pos:end="1619:36">(<argument pos:start="1619:29" pos:end="1619:31"><expr pos:start="1619:29" pos:end="1619:31"><name pos:start="1619:29" pos:end="1619:31">ctx</name></expr></argument>, <argument pos:start="1619:34" pos:end="1619:35"><expr pos:start="1619:34" pos:end="1619:35"><name pos:start="1619:34" pos:end="1619:35">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1621:9" pos:end="1639:9">{<block_content pos:start="1623:13" pos:end="1637:36">

            <decl_stmt pos:start="1623:13" pos:end="1623:47"><decl pos:start="1623:13" pos:end="1623:46"><type pos:start="1623:13" pos:end="1623:20"><name pos:start="1623:13" pos:end="1623:20">TCGv_i32</name></type> <name pos:start="1623:22" pos:end="1623:25">fp32</name> <init pos:start="1623:27" pos:end="1623:46">= <expr pos:start="1623:29" pos:end="1623:46"><call pos:start="1623:29" pos:end="1623:46"><name pos:start="1623:29" pos:end="1623:44">tcg_temp_new_i32</name><argument_list pos:start="1623:45" pos:end="1623:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1625:13" pos:end="1625:47"><decl pos:start="1625:13" pos:end="1625:46"><type pos:start="1625:13" pos:end="1625:20"><name pos:start="1625:13" pos:end="1625:20">TCGv_i64</name></type> <name pos:start="1625:22" pos:end="1625:25">fp64</name> <init pos:start="1625:27" pos:end="1625:46">= <expr pos:start="1625:29" pos:end="1625:46"><call pos:start="1625:29" pos:end="1625:46"><name pos:start="1625:29" pos:end="1625:44">tcg_temp_new_i64</name><argument_list pos:start="1625:45" pos:end="1625:46">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1629:13" pos:end="1629:42"><expr pos:start="1629:13" pos:end="1629:41"><call pos:start="1629:13" pos:end="1629:41"><name pos:start="1629:13" pos:end="1629:26">gen_load_fpr64</name><argument_list pos:start="1629:27" pos:end="1629:41">(<argument pos:start="1629:28" pos:end="1629:30"><expr pos:start="1629:28" pos:end="1629:30"><name pos:start="1629:28" pos:end="1629:30">ctx</name></expr></argument>, <argument pos:start="1629:33" pos:end="1629:36"><expr pos:start="1629:33" pos:end="1629:36"><name pos:start="1629:33" pos:end="1629:36">fp64</name></expr></argument>, <argument pos:start="1629:39" pos:end="1629:40"><expr pos:start="1629:39" pos:end="1629:40"><name pos:start="1629:39" pos:end="1629:40">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1631:13" pos:end="1631:57"><expr pos:start="1631:13" pos:end="1631:56"><call pos:start="1631:13" pos:end="1631:56"><name pos:start="1631:13" pos:end="1631:35">gen_helper_float_cvtw_d</name><argument_list pos:start="1631:36" pos:end="1631:56">(<argument pos:start="1631:37" pos:end="1631:40"><expr pos:start="1631:37" pos:end="1631:40"><name pos:start="1631:37" pos:end="1631:40">fp32</name></expr></argument>, <argument pos:start="1631:43" pos:end="1631:49"><expr pos:start="1631:43" pos:end="1631:49"><name pos:start="1631:43" pos:end="1631:49">cpu_env</name></expr></argument>, <argument pos:start="1631:52" pos:end="1631:55"><expr pos:start="1631:52" pos:end="1631:55"><name pos:start="1631:52" pos:end="1631:55">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1633:13" pos:end="1633:36"><expr pos:start="1633:13" pos:end="1633:35"><call pos:start="1633:13" pos:end="1633:35"><name pos:start="1633:13" pos:end="1633:29">tcg_temp_free_i64</name><argument_list pos:start="1633:30" pos:end="1633:35">(<argument pos:start="1633:31" pos:end="1633:34"><expr pos:start="1633:31" pos:end="1633:34"><name pos:start="1633:31" pos:end="1633:34">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1635:13" pos:end="1635:38"><expr pos:start="1635:13" pos:end="1635:37"><call pos:start="1635:13" pos:end="1635:37"><name pos:start="1635:13" pos:end="1635:27">gen_store_fpr32</name><argument_list pos:start="1635:28" pos:end="1635:37">(<argument pos:start="1635:29" pos:end="1635:32"><expr pos:start="1635:29" pos:end="1635:32"><name pos:start="1635:29" pos:end="1635:32">fp32</name></expr></argument>, <argument pos:start="1635:35" pos:end="1635:36"><expr pos:start="1635:35" pos:end="1635:36"><name pos:start="1635:35" pos:end="1635:36">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1637:13" pos:end="1637:36"><expr pos:start="1637:13" pos:end="1637:35"><call pos:start="1637:13" pos:end="1637:35"><name pos:start="1637:13" pos:end="1637:29">tcg_temp_free_i32</name><argument_list pos:start="1637:30" pos:end="1637:35">(<argument pos:start="1637:31" pos:end="1637:34"><expr pos:start="1637:31" pos:end="1637:34"><name pos:start="1637:31" pos:end="1637:34">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1641:9" pos:end="1641:24"><expr pos:start="1641:9" pos:end="1641:23"><name pos:start="1641:9" pos:end="1641:11">opn</name> <operator pos:start="1641:13" pos:end="1641:13">=</operator> <literal type="string" pos:start="1641:15" pos:end="1641:23">"cvt.w.d"</literal></expr>;</expr_stmt>

        <break pos:start="1643:9" pos:end="1643:14">break;</break>

    <case pos:start="1645:5" pos:end="1645:21">case <expr pos:start="1645:10" pos:end="1645:20"><name pos:start="1645:10" pos:end="1645:20">OPC_CVT_L_D</name></expr>:</case>

        <expr_stmt pos:start="1647:9" pos:end="1647:33"><expr pos:start="1647:9" pos:end="1647:32"><call pos:start="1647:9" pos:end="1647:32"><name pos:start="1647:9" pos:end="1647:27">check_cp1_64bitmode</name><argument_list pos:start="1647:28" pos:end="1647:32">(<argument pos:start="1647:29" pos:end="1647:31"><expr pos:start="1647:29" pos:end="1647:31"><name pos:start="1647:29" pos:end="1647:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1649:9" pos:end="1663:9">{<block_content pos:start="1651:13" pos:end="1661:35">

            <decl_stmt pos:start="1651:13" pos:end="1651:46"><decl pos:start="1651:13" pos:end="1651:45"><type pos:start="1651:13" pos:end="1651:20"><name pos:start="1651:13" pos:end="1651:20">TCGv_i64</name></type> <name pos:start="1651:22" pos:end="1651:24">fp0</name> <init pos:start="1651:26" pos:end="1651:45">= <expr pos:start="1651:28" pos:end="1651:45"><call pos:start="1651:28" pos:end="1651:45"><name pos:start="1651:28" pos:end="1651:43">tcg_temp_new_i64</name><argument_list pos:start="1651:44" pos:end="1651:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1655:13" pos:end="1655:41"><expr pos:start="1655:13" pos:end="1655:40"><call pos:start="1655:13" pos:end="1655:40"><name pos:start="1655:13" pos:end="1655:26">gen_load_fpr64</name><argument_list pos:start="1655:27" pos:end="1655:40">(<argument pos:start="1655:28" pos:end="1655:30"><expr pos:start="1655:28" pos:end="1655:30"><name pos:start="1655:28" pos:end="1655:30">ctx</name></expr></argument>, <argument pos:start="1655:33" pos:end="1655:35"><expr pos:start="1655:33" pos:end="1655:35"><name pos:start="1655:33" pos:end="1655:35">fp0</name></expr></argument>, <argument pos:start="1655:38" pos:end="1655:39"><expr pos:start="1655:38" pos:end="1655:39"><name pos:start="1655:38" pos:end="1655:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1657:13" pos:end="1657:55"><expr pos:start="1657:13" pos:end="1657:54"><call pos:start="1657:13" pos:end="1657:54"><name pos:start="1657:13" pos:end="1657:35">gen_helper_float_cvtl_d</name><argument_list pos:start="1657:36" pos:end="1657:54">(<argument pos:start="1657:37" pos:end="1657:39"><expr pos:start="1657:37" pos:end="1657:39"><name pos:start="1657:37" pos:end="1657:39">fp0</name></expr></argument>, <argument pos:start="1657:42" pos:end="1657:48"><expr pos:start="1657:42" pos:end="1657:48"><name pos:start="1657:42" pos:end="1657:48">cpu_env</name></expr></argument>, <argument pos:start="1657:51" pos:end="1657:53"><expr pos:start="1657:51" pos:end="1657:53"><name pos:start="1657:51" pos:end="1657:53">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1659:13" pos:end="1659:42"><expr pos:start="1659:13" pos:end="1659:41"><call pos:start="1659:13" pos:end="1659:41"><name pos:start="1659:13" pos:end="1659:27">gen_store_fpr64</name><argument_list pos:start="1659:28" pos:end="1659:41">(<argument pos:start="1659:29" pos:end="1659:31"><expr pos:start="1659:29" pos:end="1659:31"><name pos:start="1659:29" pos:end="1659:31">ctx</name></expr></argument>, <argument pos:start="1659:34" pos:end="1659:36"><expr pos:start="1659:34" pos:end="1659:36"><name pos:start="1659:34" pos:end="1659:36">fp0</name></expr></argument>, <argument pos:start="1659:39" pos:end="1659:40"><expr pos:start="1659:39" pos:end="1659:40"><name pos:start="1659:39" pos:end="1659:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1661:13" pos:end="1661:35"><expr pos:start="1661:13" pos:end="1661:34"><call pos:start="1661:13" pos:end="1661:34"><name pos:start="1661:13" pos:end="1661:29">tcg_temp_free_i64</name><argument_list pos:start="1661:30" pos:end="1661:34">(<argument pos:start="1661:31" pos:end="1661:33"><expr pos:start="1661:31" pos:end="1661:33"><name pos:start="1661:31" pos:end="1661:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1665:9" pos:end="1665:24"><expr pos:start="1665:9" pos:end="1665:23"><name pos:start="1665:9" pos:end="1665:11">opn</name> <operator pos:start="1665:13" pos:end="1665:13">=</operator> <literal type="string" pos:start="1665:15" pos:end="1665:23">"cvt.l.d"</literal></expr>;</expr_stmt>

        <break pos:start="1667:9" pos:end="1667:14">break;</break>

    <case pos:start="1669:5" pos:end="1669:21">case <expr pos:start="1669:10" pos:end="1669:20"><name pos:start="1669:10" pos:end="1669:20">OPC_CVT_S_W</name></expr>:</case>

        <block pos:start="1671:9" pos:end="1685:9">{<block_content pos:start="1673:13" pos:end="1683:35">

            <decl_stmt pos:start="1673:13" pos:end="1673:46"><decl pos:start="1673:13" pos:end="1673:45"><type pos:start="1673:13" pos:end="1673:20"><name pos:start="1673:13" pos:end="1673:20">TCGv_i32</name></type> <name pos:start="1673:22" pos:end="1673:24">fp0</name> <init pos:start="1673:26" pos:end="1673:45">= <expr pos:start="1673:28" pos:end="1673:45"><call pos:start="1673:28" pos:end="1673:45"><name pos:start="1673:28" pos:end="1673:43">tcg_temp_new_i32</name><argument_list pos:start="1673:44" pos:end="1673:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1677:13" pos:end="1677:36"><expr pos:start="1677:13" pos:end="1677:35"><call pos:start="1677:13" pos:end="1677:35"><name pos:start="1677:13" pos:end="1677:26">gen_load_fpr32</name><argument_list pos:start="1677:27" pos:end="1677:35">(<argument pos:start="1677:28" pos:end="1677:30"><expr pos:start="1677:28" pos:end="1677:30"><name pos:start="1677:28" pos:end="1677:30">fp0</name></expr></argument>, <argument pos:start="1677:33" pos:end="1677:34"><expr pos:start="1677:33" pos:end="1677:34"><name pos:start="1677:33" pos:end="1677:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1679:13" pos:end="1679:55"><expr pos:start="1679:13" pos:end="1679:54"><call pos:start="1679:13" pos:end="1679:54"><name pos:start="1679:13" pos:end="1679:35">gen_helper_float_cvts_w</name><argument_list pos:start="1679:36" pos:end="1679:54">(<argument pos:start="1679:37" pos:end="1679:39"><expr pos:start="1679:37" pos:end="1679:39"><name pos:start="1679:37" pos:end="1679:39">fp0</name></expr></argument>, <argument pos:start="1679:42" pos:end="1679:48"><expr pos:start="1679:42" pos:end="1679:48"><name pos:start="1679:42" pos:end="1679:48">cpu_env</name></expr></argument>, <argument pos:start="1679:51" pos:end="1679:53"><expr pos:start="1679:51" pos:end="1679:53"><name pos:start="1679:51" pos:end="1679:53">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1681:13" pos:end="1681:37"><expr pos:start="1681:13" pos:end="1681:36"><call pos:start="1681:13" pos:end="1681:36"><name pos:start="1681:13" pos:end="1681:27">gen_store_fpr32</name><argument_list pos:start="1681:28" pos:end="1681:36">(<argument pos:start="1681:29" pos:end="1681:31"><expr pos:start="1681:29" pos:end="1681:31"><name pos:start="1681:29" pos:end="1681:31">fp0</name></expr></argument>, <argument pos:start="1681:34" pos:end="1681:35"><expr pos:start="1681:34" pos:end="1681:35"><name pos:start="1681:34" pos:end="1681:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1683:13" pos:end="1683:35"><expr pos:start="1683:13" pos:end="1683:34"><call pos:start="1683:13" pos:end="1683:34"><name pos:start="1683:13" pos:end="1683:29">tcg_temp_free_i32</name><argument_list pos:start="1683:30" pos:end="1683:34">(<argument pos:start="1683:31" pos:end="1683:33"><expr pos:start="1683:31" pos:end="1683:33"><name pos:start="1683:31" pos:end="1683:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1687:9" pos:end="1687:24"><expr pos:start="1687:9" pos:end="1687:23"><name pos:start="1687:9" pos:end="1687:11">opn</name> <operator pos:start="1687:13" pos:end="1687:13">=</operator> <literal type="string" pos:start="1687:15" pos:end="1687:23">"cvt.s.w"</literal></expr>;</expr_stmt>

        <break pos:start="1689:9" pos:end="1689:14">break;</break>

    <case pos:start="1691:5" pos:end="1691:21">case <expr pos:start="1691:10" pos:end="1691:20"><name pos:start="1691:10" pos:end="1691:20">OPC_CVT_D_W</name></expr>:</case>

        <expr_stmt pos:start="1693:9" pos:end="1693:37"><expr pos:start="1693:9" pos:end="1693:36"><call pos:start="1693:9" pos:end="1693:36"><name pos:start="1693:9" pos:end="1693:27">check_cp1_registers</name><argument_list pos:start="1693:28" pos:end="1693:36">(<argument pos:start="1693:29" pos:end="1693:31"><expr pos:start="1693:29" pos:end="1693:31"><name pos:start="1693:29" pos:end="1693:31">ctx</name></expr></argument>, <argument pos:start="1693:34" pos:end="1693:35"><expr pos:start="1693:34" pos:end="1693:35"><name pos:start="1693:34" pos:end="1693:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1695:9" pos:end="1713:9">{<block_content pos:start="1697:13" pos:end="1711:36">

            <decl_stmt pos:start="1697:13" pos:end="1697:47"><decl pos:start="1697:13" pos:end="1697:46"><type pos:start="1697:13" pos:end="1697:20"><name pos:start="1697:13" pos:end="1697:20">TCGv_i32</name></type> <name pos:start="1697:22" pos:end="1697:25">fp32</name> <init pos:start="1697:27" pos:end="1697:46">= <expr pos:start="1697:29" pos:end="1697:46"><call pos:start="1697:29" pos:end="1697:46"><name pos:start="1697:29" pos:end="1697:44">tcg_temp_new_i32</name><argument_list pos:start="1697:45" pos:end="1697:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1699:13" pos:end="1699:47"><decl pos:start="1699:13" pos:end="1699:46"><type pos:start="1699:13" pos:end="1699:20"><name pos:start="1699:13" pos:end="1699:20">TCGv_i64</name></type> <name pos:start="1699:22" pos:end="1699:25">fp64</name> <init pos:start="1699:27" pos:end="1699:46">= <expr pos:start="1699:29" pos:end="1699:46"><call pos:start="1699:29" pos:end="1699:46"><name pos:start="1699:29" pos:end="1699:44">tcg_temp_new_i64</name><argument_list pos:start="1699:45" pos:end="1699:46">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1703:13" pos:end="1703:37"><expr pos:start="1703:13" pos:end="1703:36"><call pos:start="1703:13" pos:end="1703:36"><name pos:start="1703:13" pos:end="1703:26">gen_load_fpr32</name><argument_list pos:start="1703:27" pos:end="1703:36">(<argument pos:start="1703:28" pos:end="1703:31"><expr pos:start="1703:28" pos:end="1703:31"><name pos:start="1703:28" pos:end="1703:31">fp32</name></expr></argument>, <argument pos:start="1703:34" pos:end="1703:35"><expr pos:start="1703:34" pos:end="1703:35"><name pos:start="1703:34" pos:end="1703:35">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1705:13" pos:end="1705:57"><expr pos:start="1705:13" pos:end="1705:56"><call pos:start="1705:13" pos:end="1705:56"><name pos:start="1705:13" pos:end="1705:35">gen_helper_float_cvtd_w</name><argument_list pos:start="1705:36" pos:end="1705:56">(<argument pos:start="1705:37" pos:end="1705:40"><expr pos:start="1705:37" pos:end="1705:40"><name pos:start="1705:37" pos:end="1705:40">fp64</name></expr></argument>, <argument pos:start="1705:43" pos:end="1705:49"><expr pos:start="1705:43" pos:end="1705:49"><name pos:start="1705:43" pos:end="1705:49">cpu_env</name></expr></argument>, <argument pos:start="1705:52" pos:end="1705:55"><expr pos:start="1705:52" pos:end="1705:55"><name pos:start="1705:52" pos:end="1705:55">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1707:13" pos:end="1707:36"><expr pos:start="1707:13" pos:end="1707:35"><call pos:start="1707:13" pos:end="1707:35"><name pos:start="1707:13" pos:end="1707:29">tcg_temp_free_i32</name><argument_list pos:start="1707:30" pos:end="1707:35">(<argument pos:start="1707:31" pos:end="1707:34"><expr pos:start="1707:31" pos:end="1707:34"><name pos:start="1707:31" pos:end="1707:34">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1709:13" pos:end="1709:43"><expr pos:start="1709:13" pos:end="1709:42"><call pos:start="1709:13" pos:end="1709:42"><name pos:start="1709:13" pos:end="1709:27">gen_store_fpr64</name><argument_list pos:start="1709:28" pos:end="1709:42">(<argument pos:start="1709:29" pos:end="1709:31"><expr pos:start="1709:29" pos:end="1709:31"><name pos:start="1709:29" pos:end="1709:31">ctx</name></expr></argument>, <argument pos:start="1709:34" pos:end="1709:37"><expr pos:start="1709:34" pos:end="1709:37"><name pos:start="1709:34" pos:end="1709:37">fp64</name></expr></argument>, <argument pos:start="1709:40" pos:end="1709:41"><expr pos:start="1709:40" pos:end="1709:41"><name pos:start="1709:40" pos:end="1709:41">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1711:13" pos:end="1711:36"><expr pos:start="1711:13" pos:end="1711:35"><call pos:start="1711:13" pos:end="1711:35"><name pos:start="1711:13" pos:end="1711:29">tcg_temp_free_i64</name><argument_list pos:start="1711:30" pos:end="1711:35">(<argument pos:start="1711:31" pos:end="1711:34"><expr pos:start="1711:31" pos:end="1711:34"><name pos:start="1711:31" pos:end="1711:34">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1715:9" pos:end="1715:24"><expr pos:start="1715:9" pos:end="1715:23"><name pos:start="1715:9" pos:end="1715:11">opn</name> <operator pos:start="1715:13" pos:end="1715:13">=</operator> <literal type="string" pos:start="1715:15" pos:end="1715:23">"cvt.d.w"</literal></expr>;</expr_stmt>

        <break pos:start="1717:9" pos:end="1717:14">break;</break>

    <case pos:start="1719:5" pos:end="1719:21">case <expr pos:start="1719:10" pos:end="1719:20"><name pos:start="1719:10" pos:end="1719:20">OPC_CVT_S_L</name></expr>:</case>

        <expr_stmt pos:start="1721:9" pos:end="1721:33"><expr pos:start="1721:9" pos:end="1721:32"><call pos:start="1721:9" pos:end="1721:32"><name pos:start="1721:9" pos:end="1721:27">check_cp1_64bitmode</name><argument_list pos:start="1721:28" pos:end="1721:32">(<argument pos:start="1721:29" pos:end="1721:31"><expr pos:start="1721:29" pos:end="1721:31"><name pos:start="1721:29" pos:end="1721:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1723:9" pos:end="1741:9">{<block_content pos:start="1725:13" pos:end="1739:36">

            <decl_stmt pos:start="1725:13" pos:end="1725:47"><decl pos:start="1725:13" pos:end="1725:46"><type pos:start="1725:13" pos:end="1725:20"><name pos:start="1725:13" pos:end="1725:20">TCGv_i32</name></type> <name pos:start="1725:22" pos:end="1725:25">fp32</name> <init pos:start="1725:27" pos:end="1725:46">= <expr pos:start="1725:29" pos:end="1725:46"><call pos:start="1725:29" pos:end="1725:46"><name pos:start="1725:29" pos:end="1725:44">tcg_temp_new_i32</name><argument_list pos:start="1725:45" pos:end="1725:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1727:13" pos:end="1727:47"><decl pos:start="1727:13" pos:end="1727:46"><type pos:start="1727:13" pos:end="1727:20"><name pos:start="1727:13" pos:end="1727:20">TCGv_i64</name></type> <name pos:start="1727:22" pos:end="1727:25">fp64</name> <init pos:start="1727:27" pos:end="1727:46">= <expr pos:start="1727:29" pos:end="1727:46"><call pos:start="1727:29" pos:end="1727:46"><name pos:start="1727:29" pos:end="1727:44">tcg_temp_new_i64</name><argument_list pos:start="1727:45" pos:end="1727:46">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1731:13" pos:end="1731:42"><expr pos:start="1731:13" pos:end="1731:41"><call pos:start="1731:13" pos:end="1731:41"><name pos:start="1731:13" pos:end="1731:26">gen_load_fpr64</name><argument_list pos:start="1731:27" pos:end="1731:41">(<argument pos:start="1731:28" pos:end="1731:30"><expr pos:start="1731:28" pos:end="1731:30"><name pos:start="1731:28" pos:end="1731:30">ctx</name></expr></argument>, <argument pos:start="1731:33" pos:end="1731:36"><expr pos:start="1731:33" pos:end="1731:36"><name pos:start="1731:33" pos:end="1731:36">fp64</name></expr></argument>, <argument pos:start="1731:39" pos:end="1731:40"><expr pos:start="1731:39" pos:end="1731:40"><name pos:start="1731:39" pos:end="1731:40">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1733:13" pos:end="1733:57"><expr pos:start="1733:13" pos:end="1733:56"><call pos:start="1733:13" pos:end="1733:56"><name pos:start="1733:13" pos:end="1733:35">gen_helper_float_cvts_l</name><argument_list pos:start="1733:36" pos:end="1733:56">(<argument pos:start="1733:37" pos:end="1733:40"><expr pos:start="1733:37" pos:end="1733:40"><name pos:start="1733:37" pos:end="1733:40">fp32</name></expr></argument>, <argument pos:start="1733:43" pos:end="1733:49"><expr pos:start="1733:43" pos:end="1733:49"><name pos:start="1733:43" pos:end="1733:49">cpu_env</name></expr></argument>, <argument pos:start="1733:52" pos:end="1733:55"><expr pos:start="1733:52" pos:end="1733:55"><name pos:start="1733:52" pos:end="1733:55">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1735:13" pos:end="1735:36"><expr pos:start="1735:13" pos:end="1735:35"><call pos:start="1735:13" pos:end="1735:35"><name pos:start="1735:13" pos:end="1735:29">tcg_temp_free_i64</name><argument_list pos:start="1735:30" pos:end="1735:35">(<argument pos:start="1735:31" pos:end="1735:34"><expr pos:start="1735:31" pos:end="1735:34"><name pos:start="1735:31" pos:end="1735:34">fp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1737:13" pos:end="1737:38"><expr pos:start="1737:13" pos:end="1737:37"><call pos:start="1737:13" pos:end="1737:37"><name pos:start="1737:13" pos:end="1737:27">gen_store_fpr32</name><argument_list pos:start="1737:28" pos:end="1737:37">(<argument pos:start="1737:29" pos:end="1737:32"><expr pos:start="1737:29" pos:end="1737:32"><name pos:start="1737:29" pos:end="1737:32">fp32</name></expr></argument>, <argument pos:start="1737:35" pos:end="1737:36"><expr pos:start="1737:35" pos:end="1737:36"><name pos:start="1737:35" pos:end="1737:36">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1739:13" pos:end="1739:36"><expr pos:start="1739:13" pos:end="1739:35"><call pos:start="1739:13" pos:end="1739:35"><name pos:start="1739:13" pos:end="1739:29">tcg_temp_free_i32</name><argument_list pos:start="1739:30" pos:end="1739:35">(<argument pos:start="1739:31" pos:end="1739:34"><expr pos:start="1739:31" pos:end="1739:34"><name pos:start="1739:31" pos:end="1739:34">fp32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1743:9" pos:end="1743:24"><expr pos:start="1743:9" pos:end="1743:23"><name pos:start="1743:9" pos:end="1743:11">opn</name> <operator pos:start="1743:13" pos:end="1743:13">=</operator> <literal type="string" pos:start="1743:15" pos:end="1743:23">"cvt.s.l"</literal></expr>;</expr_stmt>

        <break pos:start="1745:9" pos:end="1745:14">break;</break>

    <case pos:start="1747:5" pos:end="1747:21">case <expr pos:start="1747:10" pos:end="1747:20"><name pos:start="1747:10" pos:end="1747:20">OPC_CVT_D_L</name></expr>:</case>

        <expr_stmt pos:start="1749:9" pos:end="1749:33"><expr pos:start="1749:9" pos:end="1749:32"><call pos:start="1749:9" pos:end="1749:32"><name pos:start="1749:9" pos:end="1749:27">check_cp1_64bitmode</name><argument_list pos:start="1749:28" pos:end="1749:32">(<argument pos:start="1749:29" pos:end="1749:31"><expr pos:start="1749:29" pos:end="1749:31"><name pos:start="1749:29" pos:end="1749:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1751:9" pos:end="1765:9">{<block_content pos:start="1753:13" pos:end="1763:35">

            <decl_stmt pos:start="1753:13" pos:end="1753:46"><decl pos:start="1753:13" pos:end="1753:45"><type pos:start="1753:13" pos:end="1753:20"><name pos:start="1753:13" pos:end="1753:20">TCGv_i64</name></type> <name pos:start="1753:22" pos:end="1753:24">fp0</name> <init pos:start="1753:26" pos:end="1753:45">= <expr pos:start="1753:28" pos:end="1753:45"><call pos:start="1753:28" pos:end="1753:45"><name pos:start="1753:28" pos:end="1753:43">tcg_temp_new_i64</name><argument_list pos:start="1753:44" pos:end="1753:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1757:13" pos:end="1757:41"><expr pos:start="1757:13" pos:end="1757:40"><call pos:start="1757:13" pos:end="1757:40"><name pos:start="1757:13" pos:end="1757:26">gen_load_fpr64</name><argument_list pos:start="1757:27" pos:end="1757:40">(<argument pos:start="1757:28" pos:end="1757:30"><expr pos:start="1757:28" pos:end="1757:30"><name pos:start="1757:28" pos:end="1757:30">ctx</name></expr></argument>, <argument pos:start="1757:33" pos:end="1757:35"><expr pos:start="1757:33" pos:end="1757:35"><name pos:start="1757:33" pos:end="1757:35">fp0</name></expr></argument>, <argument pos:start="1757:38" pos:end="1757:39"><expr pos:start="1757:38" pos:end="1757:39"><name pos:start="1757:38" pos:end="1757:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1759:13" pos:end="1759:55"><expr pos:start="1759:13" pos:end="1759:54"><call pos:start="1759:13" pos:end="1759:54"><name pos:start="1759:13" pos:end="1759:35">gen_helper_float_cvtd_l</name><argument_list pos:start="1759:36" pos:end="1759:54">(<argument pos:start="1759:37" pos:end="1759:39"><expr pos:start="1759:37" pos:end="1759:39"><name pos:start="1759:37" pos:end="1759:39">fp0</name></expr></argument>, <argument pos:start="1759:42" pos:end="1759:48"><expr pos:start="1759:42" pos:end="1759:48"><name pos:start="1759:42" pos:end="1759:48">cpu_env</name></expr></argument>, <argument pos:start="1759:51" pos:end="1759:53"><expr pos:start="1759:51" pos:end="1759:53"><name pos:start="1759:51" pos:end="1759:53">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1761:13" pos:end="1761:42"><expr pos:start="1761:13" pos:end="1761:41"><call pos:start="1761:13" pos:end="1761:41"><name pos:start="1761:13" pos:end="1761:27">gen_store_fpr64</name><argument_list pos:start="1761:28" pos:end="1761:41">(<argument pos:start="1761:29" pos:end="1761:31"><expr pos:start="1761:29" pos:end="1761:31"><name pos:start="1761:29" pos:end="1761:31">ctx</name></expr></argument>, <argument pos:start="1761:34" pos:end="1761:36"><expr pos:start="1761:34" pos:end="1761:36"><name pos:start="1761:34" pos:end="1761:36">fp0</name></expr></argument>, <argument pos:start="1761:39" pos:end="1761:40"><expr pos:start="1761:39" pos:end="1761:40"><name pos:start="1761:39" pos:end="1761:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1763:13" pos:end="1763:35"><expr pos:start="1763:13" pos:end="1763:34"><call pos:start="1763:13" pos:end="1763:34"><name pos:start="1763:13" pos:end="1763:29">tcg_temp_free_i64</name><argument_list pos:start="1763:30" pos:end="1763:34">(<argument pos:start="1763:31" pos:end="1763:33"><expr pos:start="1763:31" pos:end="1763:33"><name pos:start="1763:31" pos:end="1763:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1767:9" pos:end="1767:24"><expr pos:start="1767:9" pos:end="1767:23"><name pos:start="1767:9" pos:end="1767:11">opn</name> <operator pos:start="1767:13" pos:end="1767:13">=</operator> <literal type="string" pos:start="1767:15" pos:end="1767:23">"cvt.d.l"</literal></expr>;</expr_stmt>

        <break pos:start="1769:9" pos:end="1769:14">break;</break>

    <case pos:start="1771:5" pos:end="1771:23">case <expr pos:start="1771:10" pos:end="1771:22"><name pos:start="1771:10" pos:end="1771:22">OPC_CVT_PS_PW</name></expr>:</case>

        <expr_stmt pos:start="1773:9" pos:end="1773:33"><expr pos:start="1773:9" pos:end="1773:32"><call pos:start="1773:9" pos:end="1773:32"><name pos:start="1773:9" pos:end="1773:27">check_cp1_64bitmode</name><argument_list pos:start="1773:28" pos:end="1773:32">(<argument pos:start="1773:29" pos:end="1773:31"><expr pos:start="1773:29" pos:end="1773:31"><name pos:start="1773:29" pos:end="1773:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1775:9" pos:end="1789:9">{<block_content pos:start="1777:13" pos:end="1787:35">

            <decl_stmt pos:start="1777:13" pos:end="1777:46"><decl pos:start="1777:13" pos:end="1777:45"><type pos:start="1777:13" pos:end="1777:20"><name pos:start="1777:13" pos:end="1777:20">TCGv_i64</name></type> <name pos:start="1777:22" pos:end="1777:24">fp0</name> <init pos:start="1777:26" pos:end="1777:45">= <expr pos:start="1777:28" pos:end="1777:45"><call pos:start="1777:28" pos:end="1777:45"><name pos:start="1777:28" pos:end="1777:43">tcg_temp_new_i64</name><argument_list pos:start="1777:44" pos:end="1777:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1781:13" pos:end="1781:41"><expr pos:start="1781:13" pos:end="1781:40"><call pos:start="1781:13" pos:end="1781:40"><name pos:start="1781:13" pos:end="1781:26">gen_load_fpr64</name><argument_list pos:start="1781:27" pos:end="1781:40">(<argument pos:start="1781:28" pos:end="1781:30"><expr pos:start="1781:28" pos:end="1781:30"><name pos:start="1781:28" pos:end="1781:30">ctx</name></expr></argument>, <argument pos:start="1781:33" pos:end="1781:35"><expr pos:start="1781:33" pos:end="1781:35"><name pos:start="1781:33" pos:end="1781:35">fp0</name></expr></argument>, <argument pos:start="1781:38" pos:end="1781:39"><expr pos:start="1781:38" pos:end="1781:39"><name pos:start="1781:38" pos:end="1781:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1783:13" pos:end="1783:57"><expr pos:start="1783:13" pos:end="1783:56"><call pos:start="1783:13" pos:end="1783:56"><name pos:start="1783:13" pos:end="1783:37">gen_helper_float_cvtps_pw</name><argument_list pos:start="1783:38" pos:end="1783:56">(<argument pos:start="1783:39" pos:end="1783:41"><expr pos:start="1783:39" pos:end="1783:41"><name pos:start="1783:39" pos:end="1783:41">fp0</name></expr></argument>, <argument pos:start="1783:44" pos:end="1783:50"><expr pos:start="1783:44" pos:end="1783:50"><name pos:start="1783:44" pos:end="1783:50">cpu_env</name></expr></argument>, <argument pos:start="1783:53" pos:end="1783:55"><expr pos:start="1783:53" pos:end="1783:55"><name pos:start="1783:53" pos:end="1783:55">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1785:13" pos:end="1785:42"><expr pos:start="1785:13" pos:end="1785:41"><call pos:start="1785:13" pos:end="1785:41"><name pos:start="1785:13" pos:end="1785:27">gen_store_fpr64</name><argument_list pos:start="1785:28" pos:end="1785:41">(<argument pos:start="1785:29" pos:end="1785:31"><expr pos:start="1785:29" pos:end="1785:31"><name pos:start="1785:29" pos:end="1785:31">ctx</name></expr></argument>, <argument pos:start="1785:34" pos:end="1785:36"><expr pos:start="1785:34" pos:end="1785:36"><name pos:start="1785:34" pos:end="1785:36">fp0</name></expr></argument>, <argument pos:start="1785:39" pos:end="1785:40"><expr pos:start="1785:39" pos:end="1785:40"><name pos:start="1785:39" pos:end="1785:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1787:13" pos:end="1787:35"><expr pos:start="1787:13" pos:end="1787:34"><call pos:start="1787:13" pos:end="1787:34"><name pos:start="1787:13" pos:end="1787:29">tcg_temp_free_i64</name><argument_list pos:start="1787:30" pos:end="1787:34">(<argument pos:start="1787:31" pos:end="1787:33"><expr pos:start="1787:31" pos:end="1787:33"><name pos:start="1787:31" pos:end="1787:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1791:9" pos:end="1791:26"><expr pos:start="1791:9" pos:end="1791:25"><name pos:start="1791:9" pos:end="1791:11">opn</name> <operator pos:start="1791:13" pos:end="1791:13">=</operator> <literal type="string" pos:start="1791:15" pos:end="1791:25">"cvt.ps.pw"</literal></expr>;</expr_stmt>

        <break pos:start="1793:9" pos:end="1793:14">break;</break>

    <case pos:start="1795:5" pos:end="1795:20">case <expr pos:start="1795:10" pos:end="1795:19"><name pos:start="1795:10" pos:end="1795:19">OPC_ADD_PS</name></expr>:</case>

        <expr_stmt pos:start="1797:9" pos:end="1797:33"><expr pos:start="1797:9" pos:end="1797:32"><call pos:start="1797:9" pos:end="1797:32"><name pos:start="1797:9" pos:end="1797:27">check_cp1_64bitmode</name><argument_list pos:start="1797:28" pos:end="1797:32">(<argument pos:start="1797:29" pos:end="1797:31"><expr pos:start="1797:29" pos:end="1797:31"><name pos:start="1797:29" pos:end="1797:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1799:9" pos:end="1819:9">{<block_content pos:start="1801:13" pos:end="1817:35">

            <decl_stmt pos:start="1801:13" pos:end="1801:46"><decl pos:start="1801:13" pos:end="1801:45"><type pos:start="1801:13" pos:end="1801:20"><name pos:start="1801:13" pos:end="1801:20">TCGv_i64</name></type> <name pos:start="1801:22" pos:end="1801:24">fp0</name> <init pos:start="1801:26" pos:end="1801:45">= <expr pos:start="1801:28" pos:end="1801:45"><call pos:start="1801:28" pos:end="1801:45"><name pos:start="1801:28" pos:end="1801:43">tcg_temp_new_i64</name><argument_list pos:start="1801:44" pos:end="1801:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1803:13" pos:end="1803:46"><decl pos:start="1803:13" pos:end="1803:45"><type pos:start="1803:13" pos:end="1803:20"><name pos:start="1803:13" pos:end="1803:20">TCGv_i64</name></type> <name pos:start="1803:22" pos:end="1803:24">fp1</name> <init pos:start="1803:26" pos:end="1803:45">= <expr pos:start="1803:28" pos:end="1803:45"><call pos:start="1803:28" pos:end="1803:45"><name pos:start="1803:28" pos:end="1803:43">tcg_temp_new_i64</name><argument_list pos:start="1803:44" pos:end="1803:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1807:13" pos:end="1807:41"><expr pos:start="1807:13" pos:end="1807:40"><call pos:start="1807:13" pos:end="1807:40"><name pos:start="1807:13" pos:end="1807:26">gen_load_fpr64</name><argument_list pos:start="1807:27" pos:end="1807:40">(<argument pos:start="1807:28" pos:end="1807:30"><expr pos:start="1807:28" pos:end="1807:30"><name pos:start="1807:28" pos:end="1807:30">ctx</name></expr></argument>, <argument pos:start="1807:33" pos:end="1807:35"><expr pos:start="1807:33" pos:end="1807:35"><name pos:start="1807:33" pos:end="1807:35">fp0</name></expr></argument>, <argument pos:start="1807:38" pos:end="1807:39"><expr pos:start="1807:38" pos:end="1807:39"><name pos:start="1807:38" pos:end="1807:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1809:13" pos:end="1809:41"><expr pos:start="1809:13" pos:end="1809:40"><call pos:start="1809:13" pos:end="1809:40"><name pos:start="1809:13" pos:end="1809:26">gen_load_fpr64</name><argument_list pos:start="1809:27" pos:end="1809:40">(<argument pos:start="1809:28" pos:end="1809:30"><expr pos:start="1809:28" pos:end="1809:30"><name pos:start="1809:28" pos:end="1809:30">ctx</name></expr></argument>, <argument pos:start="1809:33" pos:end="1809:35"><expr pos:start="1809:33" pos:end="1809:35"><name pos:start="1809:33" pos:end="1809:35">fp1</name></expr></argument>, <argument pos:start="1809:38" pos:end="1809:39"><expr pos:start="1809:38" pos:end="1809:39"><name pos:start="1809:38" pos:end="1809:39">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1811:13" pos:end="1811:60"><expr pos:start="1811:13" pos:end="1811:59"><call pos:start="1811:13" pos:end="1811:59"><name pos:start="1811:13" pos:end="1811:35">gen_helper_float_add_ps</name><argument_list pos:start="1811:36" pos:end="1811:59">(<argument pos:start="1811:37" pos:end="1811:39"><expr pos:start="1811:37" pos:end="1811:39"><name pos:start="1811:37" pos:end="1811:39">fp0</name></expr></argument>, <argument pos:start="1811:42" pos:end="1811:48"><expr pos:start="1811:42" pos:end="1811:48"><name pos:start="1811:42" pos:end="1811:48">cpu_env</name></expr></argument>, <argument pos:start="1811:51" pos:end="1811:53"><expr pos:start="1811:51" pos:end="1811:53"><name pos:start="1811:51" pos:end="1811:53">fp0</name></expr></argument>, <argument pos:start="1811:56" pos:end="1811:58"><expr pos:start="1811:56" pos:end="1811:58"><name pos:start="1811:56" pos:end="1811:58">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1813:13" pos:end="1813:35"><expr pos:start="1813:13" pos:end="1813:34"><call pos:start="1813:13" pos:end="1813:34"><name pos:start="1813:13" pos:end="1813:29">tcg_temp_free_i64</name><argument_list pos:start="1813:30" pos:end="1813:34">(<argument pos:start="1813:31" pos:end="1813:33"><expr pos:start="1813:31" pos:end="1813:33"><name pos:start="1813:31" pos:end="1813:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1815:13" pos:end="1815:42"><expr pos:start="1815:13" pos:end="1815:41"><call pos:start="1815:13" pos:end="1815:41"><name pos:start="1815:13" pos:end="1815:27">gen_store_fpr64</name><argument_list pos:start="1815:28" pos:end="1815:41">(<argument pos:start="1815:29" pos:end="1815:31"><expr pos:start="1815:29" pos:end="1815:31"><name pos:start="1815:29" pos:end="1815:31">ctx</name></expr></argument>, <argument pos:start="1815:34" pos:end="1815:36"><expr pos:start="1815:34" pos:end="1815:36"><name pos:start="1815:34" pos:end="1815:36">fp0</name></expr></argument>, <argument pos:start="1815:39" pos:end="1815:40"><expr pos:start="1815:39" pos:end="1815:40"><name pos:start="1815:39" pos:end="1815:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1817:13" pos:end="1817:35"><expr pos:start="1817:13" pos:end="1817:34"><call pos:start="1817:13" pos:end="1817:34"><name pos:start="1817:13" pos:end="1817:29">tcg_temp_free_i64</name><argument_list pos:start="1817:30" pos:end="1817:34">(<argument pos:start="1817:31" pos:end="1817:33"><expr pos:start="1817:31" pos:end="1817:33"><name pos:start="1817:31" pos:end="1817:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1821:9" pos:end="1821:23"><expr pos:start="1821:9" pos:end="1821:22"><name pos:start="1821:9" pos:end="1821:11">opn</name> <operator pos:start="1821:13" pos:end="1821:13">=</operator> <literal type="string" pos:start="1821:15" pos:end="1821:22">"add.ps"</literal></expr>;</expr_stmt>

        <break pos:start="1823:9" pos:end="1823:14">break;</break>

    <case pos:start="1825:5" pos:end="1825:20">case <expr pos:start="1825:10" pos:end="1825:19"><name pos:start="1825:10" pos:end="1825:19">OPC_SUB_PS</name></expr>:</case>

        <expr_stmt pos:start="1827:9" pos:end="1827:33"><expr pos:start="1827:9" pos:end="1827:32"><call pos:start="1827:9" pos:end="1827:32"><name pos:start="1827:9" pos:end="1827:27">check_cp1_64bitmode</name><argument_list pos:start="1827:28" pos:end="1827:32">(<argument pos:start="1827:29" pos:end="1827:31"><expr pos:start="1827:29" pos:end="1827:31"><name pos:start="1827:29" pos:end="1827:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1829:9" pos:end="1849:9">{<block_content pos:start="1831:13" pos:end="1847:35">

            <decl_stmt pos:start="1831:13" pos:end="1831:46"><decl pos:start="1831:13" pos:end="1831:45"><type pos:start="1831:13" pos:end="1831:20"><name pos:start="1831:13" pos:end="1831:20">TCGv_i64</name></type> <name pos:start="1831:22" pos:end="1831:24">fp0</name> <init pos:start="1831:26" pos:end="1831:45">= <expr pos:start="1831:28" pos:end="1831:45"><call pos:start="1831:28" pos:end="1831:45"><name pos:start="1831:28" pos:end="1831:43">tcg_temp_new_i64</name><argument_list pos:start="1831:44" pos:end="1831:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1833:13" pos:end="1833:46"><decl pos:start="1833:13" pos:end="1833:45"><type pos:start="1833:13" pos:end="1833:20"><name pos:start="1833:13" pos:end="1833:20">TCGv_i64</name></type> <name pos:start="1833:22" pos:end="1833:24">fp1</name> <init pos:start="1833:26" pos:end="1833:45">= <expr pos:start="1833:28" pos:end="1833:45"><call pos:start="1833:28" pos:end="1833:45"><name pos:start="1833:28" pos:end="1833:43">tcg_temp_new_i64</name><argument_list pos:start="1833:44" pos:end="1833:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1837:13" pos:end="1837:41"><expr pos:start="1837:13" pos:end="1837:40"><call pos:start="1837:13" pos:end="1837:40"><name pos:start="1837:13" pos:end="1837:26">gen_load_fpr64</name><argument_list pos:start="1837:27" pos:end="1837:40">(<argument pos:start="1837:28" pos:end="1837:30"><expr pos:start="1837:28" pos:end="1837:30"><name pos:start="1837:28" pos:end="1837:30">ctx</name></expr></argument>, <argument pos:start="1837:33" pos:end="1837:35"><expr pos:start="1837:33" pos:end="1837:35"><name pos:start="1837:33" pos:end="1837:35">fp0</name></expr></argument>, <argument pos:start="1837:38" pos:end="1837:39"><expr pos:start="1837:38" pos:end="1837:39"><name pos:start="1837:38" pos:end="1837:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1839:13" pos:end="1839:41"><expr pos:start="1839:13" pos:end="1839:40"><call pos:start="1839:13" pos:end="1839:40"><name pos:start="1839:13" pos:end="1839:26">gen_load_fpr64</name><argument_list pos:start="1839:27" pos:end="1839:40">(<argument pos:start="1839:28" pos:end="1839:30"><expr pos:start="1839:28" pos:end="1839:30"><name pos:start="1839:28" pos:end="1839:30">ctx</name></expr></argument>, <argument pos:start="1839:33" pos:end="1839:35"><expr pos:start="1839:33" pos:end="1839:35"><name pos:start="1839:33" pos:end="1839:35">fp1</name></expr></argument>, <argument pos:start="1839:38" pos:end="1839:39"><expr pos:start="1839:38" pos:end="1839:39"><name pos:start="1839:38" pos:end="1839:39">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1841:13" pos:end="1841:60"><expr pos:start="1841:13" pos:end="1841:59"><call pos:start="1841:13" pos:end="1841:59"><name pos:start="1841:13" pos:end="1841:35">gen_helper_float_sub_ps</name><argument_list pos:start="1841:36" pos:end="1841:59">(<argument pos:start="1841:37" pos:end="1841:39"><expr pos:start="1841:37" pos:end="1841:39"><name pos:start="1841:37" pos:end="1841:39">fp0</name></expr></argument>, <argument pos:start="1841:42" pos:end="1841:48"><expr pos:start="1841:42" pos:end="1841:48"><name pos:start="1841:42" pos:end="1841:48">cpu_env</name></expr></argument>, <argument pos:start="1841:51" pos:end="1841:53"><expr pos:start="1841:51" pos:end="1841:53"><name pos:start="1841:51" pos:end="1841:53">fp0</name></expr></argument>, <argument pos:start="1841:56" pos:end="1841:58"><expr pos:start="1841:56" pos:end="1841:58"><name pos:start="1841:56" pos:end="1841:58">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1843:13" pos:end="1843:35"><expr pos:start="1843:13" pos:end="1843:34"><call pos:start="1843:13" pos:end="1843:34"><name pos:start="1843:13" pos:end="1843:29">tcg_temp_free_i64</name><argument_list pos:start="1843:30" pos:end="1843:34">(<argument pos:start="1843:31" pos:end="1843:33"><expr pos:start="1843:31" pos:end="1843:33"><name pos:start="1843:31" pos:end="1843:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1845:13" pos:end="1845:42"><expr pos:start="1845:13" pos:end="1845:41"><call pos:start="1845:13" pos:end="1845:41"><name pos:start="1845:13" pos:end="1845:27">gen_store_fpr64</name><argument_list pos:start="1845:28" pos:end="1845:41">(<argument pos:start="1845:29" pos:end="1845:31"><expr pos:start="1845:29" pos:end="1845:31"><name pos:start="1845:29" pos:end="1845:31">ctx</name></expr></argument>, <argument pos:start="1845:34" pos:end="1845:36"><expr pos:start="1845:34" pos:end="1845:36"><name pos:start="1845:34" pos:end="1845:36">fp0</name></expr></argument>, <argument pos:start="1845:39" pos:end="1845:40"><expr pos:start="1845:39" pos:end="1845:40"><name pos:start="1845:39" pos:end="1845:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1847:13" pos:end="1847:35"><expr pos:start="1847:13" pos:end="1847:34"><call pos:start="1847:13" pos:end="1847:34"><name pos:start="1847:13" pos:end="1847:29">tcg_temp_free_i64</name><argument_list pos:start="1847:30" pos:end="1847:34">(<argument pos:start="1847:31" pos:end="1847:33"><expr pos:start="1847:31" pos:end="1847:33"><name pos:start="1847:31" pos:end="1847:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1851:9" pos:end="1851:23"><expr pos:start="1851:9" pos:end="1851:22"><name pos:start="1851:9" pos:end="1851:11">opn</name> <operator pos:start="1851:13" pos:end="1851:13">=</operator> <literal type="string" pos:start="1851:15" pos:end="1851:22">"sub.ps"</literal></expr>;</expr_stmt>

        <break pos:start="1853:9" pos:end="1853:14">break;</break>

    <case pos:start="1855:5" pos:end="1855:20">case <expr pos:start="1855:10" pos:end="1855:19"><name pos:start="1855:10" pos:end="1855:19">OPC_MUL_PS</name></expr>:</case>

        <expr_stmt pos:start="1857:9" pos:end="1857:33"><expr pos:start="1857:9" pos:end="1857:32"><call pos:start="1857:9" pos:end="1857:32"><name pos:start="1857:9" pos:end="1857:27">check_cp1_64bitmode</name><argument_list pos:start="1857:28" pos:end="1857:32">(<argument pos:start="1857:29" pos:end="1857:31"><expr pos:start="1857:29" pos:end="1857:31"><name pos:start="1857:29" pos:end="1857:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1859:9" pos:end="1879:9">{<block_content pos:start="1861:13" pos:end="1877:35">

            <decl_stmt pos:start="1861:13" pos:end="1861:46"><decl pos:start="1861:13" pos:end="1861:45"><type pos:start="1861:13" pos:end="1861:20"><name pos:start="1861:13" pos:end="1861:20">TCGv_i64</name></type> <name pos:start="1861:22" pos:end="1861:24">fp0</name> <init pos:start="1861:26" pos:end="1861:45">= <expr pos:start="1861:28" pos:end="1861:45"><call pos:start="1861:28" pos:end="1861:45"><name pos:start="1861:28" pos:end="1861:43">tcg_temp_new_i64</name><argument_list pos:start="1861:44" pos:end="1861:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1863:13" pos:end="1863:46"><decl pos:start="1863:13" pos:end="1863:45"><type pos:start="1863:13" pos:end="1863:20"><name pos:start="1863:13" pos:end="1863:20">TCGv_i64</name></type> <name pos:start="1863:22" pos:end="1863:24">fp1</name> <init pos:start="1863:26" pos:end="1863:45">= <expr pos:start="1863:28" pos:end="1863:45"><call pos:start="1863:28" pos:end="1863:45"><name pos:start="1863:28" pos:end="1863:43">tcg_temp_new_i64</name><argument_list pos:start="1863:44" pos:end="1863:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1867:13" pos:end="1867:41"><expr pos:start="1867:13" pos:end="1867:40"><call pos:start="1867:13" pos:end="1867:40"><name pos:start="1867:13" pos:end="1867:26">gen_load_fpr64</name><argument_list pos:start="1867:27" pos:end="1867:40">(<argument pos:start="1867:28" pos:end="1867:30"><expr pos:start="1867:28" pos:end="1867:30"><name pos:start="1867:28" pos:end="1867:30">ctx</name></expr></argument>, <argument pos:start="1867:33" pos:end="1867:35"><expr pos:start="1867:33" pos:end="1867:35"><name pos:start="1867:33" pos:end="1867:35">fp0</name></expr></argument>, <argument pos:start="1867:38" pos:end="1867:39"><expr pos:start="1867:38" pos:end="1867:39"><name pos:start="1867:38" pos:end="1867:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1869:13" pos:end="1869:41"><expr pos:start="1869:13" pos:end="1869:40"><call pos:start="1869:13" pos:end="1869:40"><name pos:start="1869:13" pos:end="1869:26">gen_load_fpr64</name><argument_list pos:start="1869:27" pos:end="1869:40">(<argument pos:start="1869:28" pos:end="1869:30"><expr pos:start="1869:28" pos:end="1869:30"><name pos:start="1869:28" pos:end="1869:30">ctx</name></expr></argument>, <argument pos:start="1869:33" pos:end="1869:35"><expr pos:start="1869:33" pos:end="1869:35"><name pos:start="1869:33" pos:end="1869:35">fp1</name></expr></argument>, <argument pos:start="1869:38" pos:end="1869:39"><expr pos:start="1869:38" pos:end="1869:39"><name pos:start="1869:38" pos:end="1869:39">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1871:13" pos:end="1871:60"><expr pos:start="1871:13" pos:end="1871:59"><call pos:start="1871:13" pos:end="1871:59"><name pos:start="1871:13" pos:end="1871:35">gen_helper_float_mul_ps</name><argument_list pos:start="1871:36" pos:end="1871:59">(<argument pos:start="1871:37" pos:end="1871:39"><expr pos:start="1871:37" pos:end="1871:39"><name pos:start="1871:37" pos:end="1871:39">fp0</name></expr></argument>, <argument pos:start="1871:42" pos:end="1871:48"><expr pos:start="1871:42" pos:end="1871:48"><name pos:start="1871:42" pos:end="1871:48">cpu_env</name></expr></argument>, <argument pos:start="1871:51" pos:end="1871:53"><expr pos:start="1871:51" pos:end="1871:53"><name pos:start="1871:51" pos:end="1871:53">fp0</name></expr></argument>, <argument pos:start="1871:56" pos:end="1871:58"><expr pos:start="1871:56" pos:end="1871:58"><name pos:start="1871:56" pos:end="1871:58">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1873:13" pos:end="1873:35"><expr pos:start="1873:13" pos:end="1873:34"><call pos:start="1873:13" pos:end="1873:34"><name pos:start="1873:13" pos:end="1873:29">tcg_temp_free_i64</name><argument_list pos:start="1873:30" pos:end="1873:34">(<argument pos:start="1873:31" pos:end="1873:33"><expr pos:start="1873:31" pos:end="1873:33"><name pos:start="1873:31" pos:end="1873:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1875:13" pos:end="1875:42"><expr pos:start="1875:13" pos:end="1875:41"><call pos:start="1875:13" pos:end="1875:41"><name pos:start="1875:13" pos:end="1875:27">gen_store_fpr64</name><argument_list pos:start="1875:28" pos:end="1875:41">(<argument pos:start="1875:29" pos:end="1875:31"><expr pos:start="1875:29" pos:end="1875:31"><name pos:start="1875:29" pos:end="1875:31">ctx</name></expr></argument>, <argument pos:start="1875:34" pos:end="1875:36"><expr pos:start="1875:34" pos:end="1875:36"><name pos:start="1875:34" pos:end="1875:36">fp0</name></expr></argument>, <argument pos:start="1875:39" pos:end="1875:40"><expr pos:start="1875:39" pos:end="1875:40"><name pos:start="1875:39" pos:end="1875:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1877:13" pos:end="1877:35"><expr pos:start="1877:13" pos:end="1877:34"><call pos:start="1877:13" pos:end="1877:34"><name pos:start="1877:13" pos:end="1877:29">tcg_temp_free_i64</name><argument_list pos:start="1877:30" pos:end="1877:34">(<argument pos:start="1877:31" pos:end="1877:33"><expr pos:start="1877:31" pos:end="1877:33"><name pos:start="1877:31" pos:end="1877:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1881:9" pos:end="1881:23"><expr pos:start="1881:9" pos:end="1881:22"><name pos:start="1881:9" pos:end="1881:11">opn</name> <operator pos:start="1881:13" pos:end="1881:13">=</operator> <literal type="string" pos:start="1881:15" pos:end="1881:22">"mul.ps"</literal></expr>;</expr_stmt>

        <break pos:start="1883:9" pos:end="1883:14">break;</break>

    <case pos:start="1885:5" pos:end="1885:20">case <expr pos:start="1885:10" pos:end="1885:19"><name pos:start="1885:10" pos:end="1885:19">OPC_ABS_PS</name></expr>:</case>

        <expr_stmt pos:start="1887:9" pos:end="1887:33"><expr pos:start="1887:9" pos:end="1887:32"><call pos:start="1887:9" pos:end="1887:32"><name pos:start="1887:9" pos:end="1887:27">check_cp1_64bitmode</name><argument_list pos:start="1887:28" pos:end="1887:32">(<argument pos:start="1887:29" pos:end="1887:31"><expr pos:start="1887:29" pos:end="1887:31"><name pos:start="1887:29" pos:end="1887:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1889:9" pos:end="1903:9">{<block_content pos:start="1891:13" pos:end="1901:35">

            <decl_stmt pos:start="1891:13" pos:end="1891:46"><decl pos:start="1891:13" pos:end="1891:45"><type pos:start="1891:13" pos:end="1891:20"><name pos:start="1891:13" pos:end="1891:20">TCGv_i64</name></type> <name pos:start="1891:22" pos:end="1891:24">fp0</name> <init pos:start="1891:26" pos:end="1891:45">= <expr pos:start="1891:28" pos:end="1891:45"><call pos:start="1891:28" pos:end="1891:45"><name pos:start="1891:28" pos:end="1891:43">tcg_temp_new_i64</name><argument_list pos:start="1891:44" pos:end="1891:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1895:13" pos:end="1895:41"><expr pos:start="1895:13" pos:end="1895:40"><call pos:start="1895:13" pos:end="1895:40"><name pos:start="1895:13" pos:end="1895:26">gen_load_fpr64</name><argument_list pos:start="1895:27" pos:end="1895:40">(<argument pos:start="1895:28" pos:end="1895:30"><expr pos:start="1895:28" pos:end="1895:30"><name pos:start="1895:28" pos:end="1895:30">ctx</name></expr></argument>, <argument pos:start="1895:33" pos:end="1895:35"><expr pos:start="1895:33" pos:end="1895:35"><name pos:start="1895:33" pos:end="1895:35">fp0</name></expr></argument>, <argument pos:start="1895:38" pos:end="1895:39"><expr pos:start="1895:38" pos:end="1895:39"><name pos:start="1895:38" pos:end="1895:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1897:13" pos:end="1897:46"><expr pos:start="1897:13" pos:end="1897:45"><call pos:start="1897:13" pos:end="1897:45"><name pos:start="1897:13" pos:end="1897:35">gen_helper_float_abs_ps</name><argument_list pos:start="1897:36" pos:end="1897:45">(<argument pos:start="1897:37" pos:end="1897:39"><expr pos:start="1897:37" pos:end="1897:39"><name pos:start="1897:37" pos:end="1897:39">fp0</name></expr></argument>, <argument pos:start="1897:42" pos:end="1897:44"><expr pos:start="1897:42" pos:end="1897:44"><name pos:start="1897:42" pos:end="1897:44">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1899:13" pos:end="1899:42"><expr pos:start="1899:13" pos:end="1899:41"><call pos:start="1899:13" pos:end="1899:41"><name pos:start="1899:13" pos:end="1899:27">gen_store_fpr64</name><argument_list pos:start="1899:28" pos:end="1899:41">(<argument pos:start="1899:29" pos:end="1899:31"><expr pos:start="1899:29" pos:end="1899:31"><name pos:start="1899:29" pos:end="1899:31">ctx</name></expr></argument>, <argument pos:start="1899:34" pos:end="1899:36"><expr pos:start="1899:34" pos:end="1899:36"><name pos:start="1899:34" pos:end="1899:36">fp0</name></expr></argument>, <argument pos:start="1899:39" pos:end="1899:40"><expr pos:start="1899:39" pos:end="1899:40"><name pos:start="1899:39" pos:end="1899:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1901:13" pos:end="1901:35"><expr pos:start="1901:13" pos:end="1901:34"><call pos:start="1901:13" pos:end="1901:34"><name pos:start="1901:13" pos:end="1901:29">tcg_temp_free_i64</name><argument_list pos:start="1901:30" pos:end="1901:34">(<argument pos:start="1901:31" pos:end="1901:33"><expr pos:start="1901:31" pos:end="1901:33"><name pos:start="1901:31" pos:end="1901:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1905:9" pos:end="1905:23"><expr pos:start="1905:9" pos:end="1905:22"><name pos:start="1905:9" pos:end="1905:11">opn</name> <operator pos:start="1905:13" pos:end="1905:13">=</operator> <literal type="string" pos:start="1905:15" pos:end="1905:22">"abs.ps"</literal></expr>;</expr_stmt>

        <break pos:start="1907:9" pos:end="1907:14">break;</break>

    <case pos:start="1909:5" pos:end="1909:20">case <expr pos:start="1909:10" pos:end="1909:19"><name pos:start="1909:10" pos:end="1909:19">OPC_MOV_PS</name></expr>:</case>

        <expr_stmt pos:start="1911:9" pos:end="1911:33"><expr pos:start="1911:9" pos:end="1911:32"><call pos:start="1911:9" pos:end="1911:32"><name pos:start="1911:9" pos:end="1911:27">check_cp1_64bitmode</name><argument_list pos:start="1911:28" pos:end="1911:32">(<argument pos:start="1911:29" pos:end="1911:31"><expr pos:start="1911:29" pos:end="1911:31"><name pos:start="1911:29" pos:end="1911:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1913:9" pos:end="1925:9">{<block_content pos:start="1915:13" pos:end="1923:35">

            <decl_stmt pos:start="1915:13" pos:end="1915:46"><decl pos:start="1915:13" pos:end="1915:45"><type pos:start="1915:13" pos:end="1915:20"><name pos:start="1915:13" pos:end="1915:20">TCGv_i64</name></type> <name pos:start="1915:22" pos:end="1915:24">fp0</name> <init pos:start="1915:26" pos:end="1915:45">= <expr pos:start="1915:28" pos:end="1915:45"><call pos:start="1915:28" pos:end="1915:45"><name pos:start="1915:28" pos:end="1915:43">tcg_temp_new_i64</name><argument_list pos:start="1915:44" pos:end="1915:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1919:13" pos:end="1919:41"><expr pos:start="1919:13" pos:end="1919:40"><call pos:start="1919:13" pos:end="1919:40"><name pos:start="1919:13" pos:end="1919:26">gen_load_fpr64</name><argument_list pos:start="1919:27" pos:end="1919:40">(<argument pos:start="1919:28" pos:end="1919:30"><expr pos:start="1919:28" pos:end="1919:30"><name pos:start="1919:28" pos:end="1919:30">ctx</name></expr></argument>, <argument pos:start="1919:33" pos:end="1919:35"><expr pos:start="1919:33" pos:end="1919:35"><name pos:start="1919:33" pos:end="1919:35">fp0</name></expr></argument>, <argument pos:start="1919:38" pos:end="1919:39"><expr pos:start="1919:38" pos:end="1919:39"><name pos:start="1919:38" pos:end="1919:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1921:13" pos:end="1921:42"><expr pos:start="1921:13" pos:end="1921:41"><call pos:start="1921:13" pos:end="1921:41"><name pos:start="1921:13" pos:end="1921:27">gen_store_fpr64</name><argument_list pos:start="1921:28" pos:end="1921:41">(<argument pos:start="1921:29" pos:end="1921:31"><expr pos:start="1921:29" pos:end="1921:31"><name pos:start="1921:29" pos:end="1921:31">ctx</name></expr></argument>, <argument pos:start="1921:34" pos:end="1921:36"><expr pos:start="1921:34" pos:end="1921:36"><name pos:start="1921:34" pos:end="1921:36">fp0</name></expr></argument>, <argument pos:start="1921:39" pos:end="1921:40"><expr pos:start="1921:39" pos:end="1921:40"><name pos:start="1921:39" pos:end="1921:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1923:13" pos:end="1923:35"><expr pos:start="1923:13" pos:end="1923:34"><call pos:start="1923:13" pos:end="1923:34"><name pos:start="1923:13" pos:end="1923:29">tcg_temp_free_i64</name><argument_list pos:start="1923:30" pos:end="1923:34">(<argument pos:start="1923:31" pos:end="1923:33"><expr pos:start="1923:31" pos:end="1923:33"><name pos:start="1923:31" pos:end="1923:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1927:9" pos:end="1927:23"><expr pos:start="1927:9" pos:end="1927:22"><name pos:start="1927:9" pos:end="1927:11">opn</name> <operator pos:start="1927:13" pos:end="1927:13">=</operator> <literal type="string" pos:start="1927:15" pos:end="1927:22">"mov.ps"</literal></expr>;</expr_stmt>

        <break pos:start="1929:9" pos:end="1929:14">break;</break>

    <case pos:start="1931:5" pos:end="1931:20">case <expr pos:start="1931:10" pos:end="1931:19"><name pos:start="1931:10" pos:end="1931:19">OPC_NEG_PS</name></expr>:</case>

        <expr_stmt pos:start="1933:9" pos:end="1933:33"><expr pos:start="1933:9" pos:end="1933:32"><call pos:start="1933:9" pos:end="1933:32"><name pos:start="1933:9" pos:end="1933:27">check_cp1_64bitmode</name><argument_list pos:start="1933:28" pos:end="1933:32">(<argument pos:start="1933:29" pos:end="1933:31"><expr pos:start="1933:29" pos:end="1933:31"><name pos:start="1933:29" pos:end="1933:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1935:9" pos:end="1949:9">{<block_content pos:start="1937:13" pos:end="1947:35">

            <decl_stmt pos:start="1937:13" pos:end="1937:46"><decl pos:start="1937:13" pos:end="1937:45"><type pos:start="1937:13" pos:end="1937:20"><name pos:start="1937:13" pos:end="1937:20">TCGv_i64</name></type> <name pos:start="1937:22" pos:end="1937:24">fp0</name> <init pos:start="1937:26" pos:end="1937:45">= <expr pos:start="1937:28" pos:end="1937:45"><call pos:start="1937:28" pos:end="1937:45"><name pos:start="1937:28" pos:end="1937:43">tcg_temp_new_i64</name><argument_list pos:start="1937:44" pos:end="1937:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="1941:13" pos:end="1941:41"><expr pos:start="1941:13" pos:end="1941:40"><call pos:start="1941:13" pos:end="1941:40"><name pos:start="1941:13" pos:end="1941:26">gen_load_fpr64</name><argument_list pos:start="1941:27" pos:end="1941:40">(<argument pos:start="1941:28" pos:end="1941:30"><expr pos:start="1941:28" pos:end="1941:30"><name pos:start="1941:28" pos:end="1941:30">ctx</name></expr></argument>, <argument pos:start="1941:33" pos:end="1941:35"><expr pos:start="1941:33" pos:end="1941:35"><name pos:start="1941:33" pos:end="1941:35">fp0</name></expr></argument>, <argument pos:start="1941:38" pos:end="1941:39"><expr pos:start="1941:38" pos:end="1941:39"><name pos:start="1941:38" pos:end="1941:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1943:13" pos:end="1943:46"><expr pos:start="1943:13" pos:end="1943:45"><call pos:start="1943:13" pos:end="1943:45"><name pos:start="1943:13" pos:end="1943:35">gen_helper_float_chs_ps</name><argument_list pos:start="1943:36" pos:end="1943:45">(<argument pos:start="1943:37" pos:end="1943:39"><expr pos:start="1943:37" pos:end="1943:39"><name pos:start="1943:37" pos:end="1943:39">fp0</name></expr></argument>, <argument pos:start="1943:42" pos:end="1943:44"><expr pos:start="1943:42" pos:end="1943:44"><name pos:start="1943:42" pos:end="1943:44">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1945:13" pos:end="1945:42"><expr pos:start="1945:13" pos:end="1945:41"><call pos:start="1945:13" pos:end="1945:41"><name pos:start="1945:13" pos:end="1945:27">gen_store_fpr64</name><argument_list pos:start="1945:28" pos:end="1945:41">(<argument pos:start="1945:29" pos:end="1945:31"><expr pos:start="1945:29" pos:end="1945:31"><name pos:start="1945:29" pos:end="1945:31">ctx</name></expr></argument>, <argument pos:start="1945:34" pos:end="1945:36"><expr pos:start="1945:34" pos:end="1945:36"><name pos:start="1945:34" pos:end="1945:36">fp0</name></expr></argument>, <argument pos:start="1945:39" pos:end="1945:40"><expr pos:start="1945:39" pos:end="1945:40"><name pos:start="1945:39" pos:end="1945:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1947:13" pos:end="1947:35"><expr pos:start="1947:13" pos:end="1947:34"><call pos:start="1947:13" pos:end="1947:34"><name pos:start="1947:13" pos:end="1947:29">tcg_temp_free_i64</name><argument_list pos:start="1947:30" pos:end="1947:34">(<argument pos:start="1947:31" pos:end="1947:33"><expr pos:start="1947:31" pos:end="1947:33"><name pos:start="1947:31" pos:end="1947:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1951:9" pos:end="1951:23"><expr pos:start="1951:9" pos:end="1951:22"><name pos:start="1951:9" pos:end="1951:11">opn</name> <operator pos:start="1951:13" pos:end="1951:13">=</operator> <literal type="string" pos:start="1951:15" pos:end="1951:22">"neg.ps"</literal></expr>;</expr_stmt>

        <break pos:start="1953:9" pos:end="1953:14">break;</break>

    <case pos:start="1955:5" pos:end="1955:22">case <expr pos:start="1955:10" pos:end="1955:21"><name pos:start="1955:10" pos:end="1955:21">OPC_MOVCF_PS</name></expr>:</case>

        <expr_stmt pos:start="1957:9" pos:end="1957:33"><expr pos:start="1957:9" pos:end="1957:32"><call pos:start="1957:9" pos:end="1957:32"><name pos:start="1957:9" pos:end="1957:27">check_cp1_64bitmode</name><argument_list pos:start="1957:28" pos:end="1957:32">(<argument pos:start="1957:29" pos:end="1957:31"><expr pos:start="1957:29" pos:end="1957:31"><name pos:start="1957:29" pos:end="1957:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1959:9" pos:end="1959:56"><expr pos:start="1959:9" pos:end="1959:55"><call pos:start="1959:9" pos:end="1959:55"><name pos:start="1959:9" pos:end="1959:20">gen_movcf_ps</name><argument_list pos:start="1959:21" pos:end="1959:55">(<argument pos:start="1959:22" pos:end="1959:23"><expr pos:start="1959:22" pos:end="1959:23"><name pos:start="1959:22" pos:end="1959:23">fs</name></expr></argument>, <argument pos:start="1959:26" pos:end="1959:27"><expr pos:start="1959:26" pos:end="1959:27"><name pos:start="1959:26" pos:end="1959:27">fd</name></expr></argument>, <argument pos:start="1959:30" pos:end="1959:44"><expr pos:start="1959:30" pos:end="1959:44"><operator pos:start="1959:30" pos:end="1959:30">(</operator><name pos:start="1959:31" pos:end="1959:32">ft</name> <operator pos:start="1959:34" pos:end="1959:35">&gt;&gt;</operator> <literal type="number" pos:start="1959:37" pos:end="1959:37">2</literal><operator pos:start="1959:38" pos:end="1959:38">)</operator> <operator pos:start="1959:40" pos:end="1959:40">&amp;</operator> <literal type="number" pos:start="1959:42" pos:end="1959:44">0x7</literal></expr></argument>, <argument pos:start="1959:47" pos:end="1959:54"><expr pos:start="1959:47" pos:end="1959:54"><name pos:start="1959:47" pos:end="1959:48">ft</name> <operator pos:start="1959:50" pos:end="1959:50">&amp;</operator> <literal type="number" pos:start="1959:52" pos:end="1959:54">0x1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1961:9" pos:end="1961:25"><expr pos:start="1961:9" pos:end="1961:24"><name pos:start="1961:9" pos:end="1961:11">opn</name> <operator pos:start="1961:13" pos:end="1961:13">=</operator> <literal type="string" pos:start="1961:15" pos:end="1961:24">"movcf.ps"</literal></expr>;</expr_stmt>

        <break pos:start="1963:9" pos:end="1963:14">break;</break>

    <case pos:start="1965:5" pos:end="1965:21">case <expr pos:start="1965:10" pos:end="1965:20"><name pos:start="1965:10" pos:end="1965:20">OPC_MOVZ_PS</name></expr>:</case>

        <expr_stmt pos:start="1967:9" pos:end="1967:33"><expr pos:start="1967:9" pos:end="1967:32"><call pos:start="1967:9" pos:end="1967:32"><name pos:start="1967:9" pos:end="1967:27">check_cp1_64bitmode</name><argument_list pos:start="1967:28" pos:end="1967:32">(<argument pos:start="1967:29" pos:end="1967:31"><expr pos:start="1967:29" pos:end="1967:31"><name pos:start="1967:29" pos:end="1967:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1969:9" pos:end="1991:9">{<block_content pos:start="1971:13" pos:end="1989:30">

            <decl_stmt pos:start="1971:13" pos:end="1971:37"><decl pos:start="1971:13" pos:end="1971:36"><type pos:start="1971:13" pos:end="1971:15"><name pos:start="1971:13" pos:end="1971:15">int</name></type> <name pos:start="1971:17" pos:end="1971:18">l1</name> <init pos:start="1971:20" pos:end="1971:36">= <expr pos:start="1971:22" pos:end="1971:36"><call pos:start="1971:22" pos:end="1971:36"><name pos:start="1971:22" pos:end="1971:34">gen_new_label</name><argument_list pos:start="1971:35" pos:end="1971:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1973:13" pos:end="1973:25"><decl pos:start="1973:13" pos:end="1973:24"><type pos:start="1973:13" pos:end="1973:20"><name pos:start="1973:13" pos:end="1973:20">TCGv_i64</name></type> <name pos:start="1973:22" pos:end="1973:24">fp0</name></decl>;</decl_stmt>



            <if_stmt pos:start="1977:13" pos:end="1979:68"><if pos:start="1977:13" pos:end="1979:68">if <condition pos:start="1977:16" pos:end="1977:24">(<expr pos:start="1977:17" pos:end="1977:23"><name pos:start="1977:17" pos:end="1977:18">ft</name> <operator pos:start="1977:20" pos:end="1977:21">!=</operator> <literal type="number" pos:start="1977:23" pos:end="1977:23">0</literal></expr>)</condition><block type="pseudo" pos:start="1979:17" pos:end="1979:68"><block_content pos:start="1979:17" pos:end="1979:68">

                <expr_stmt pos:start="1979:17" pos:end="1979:68"><expr pos:start="1979:17" pos:end="1979:67"><call pos:start="1979:17" pos:end="1979:67"><name pos:start="1979:17" pos:end="1979:34">tcg_gen_brcondi_tl</name><argument_list pos:start="1979:35" pos:end="1979:67">(<argument pos:start="1979:36" pos:end="1979:46"><expr pos:start="1979:36" pos:end="1979:46"><name pos:start="1979:36" pos:end="1979:46">TCG_COND_NE</name></expr></argument>, <argument pos:start="1979:49" pos:end="1979:59"><expr pos:start="1979:49" pos:end="1979:59"><name pos:start="1979:49" pos:end="1979:59"><name pos:start="1979:49" pos:end="1979:55">cpu_gpr</name><index pos:start="1979:56" pos:end="1979:59">[<expr pos:start="1979:57" pos:end="1979:58"><name pos:start="1979:57" pos:end="1979:58">ft</name></expr>]</index></name></expr></argument>, <argument pos:start="1979:62" pos:end="1979:62"><expr pos:start="1979:62" pos:end="1979:62"><literal type="number" pos:start="1979:62" pos:end="1979:62">0</literal></expr></argument>, <argument pos:start="1979:65" pos:end="1979:66"><expr pos:start="1979:65" pos:end="1979:66"><name pos:start="1979:65" pos:end="1979:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1981:13" pos:end="1981:37"><expr pos:start="1981:13" pos:end="1981:36"><name pos:start="1981:13" pos:end="1981:15">fp0</name> <operator pos:start="1981:17" pos:end="1981:17">=</operator> <call pos:start="1981:19" pos:end="1981:36"><name pos:start="1981:19" pos:end="1981:34">tcg_temp_new_i64</name><argument_list pos:start="1981:35" pos:end="1981:36">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1983:13" pos:end="1983:41"><expr pos:start="1983:13" pos:end="1983:40"><call pos:start="1983:13" pos:end="1983:40"><name pos:start="1983:13" pos:end="1983:26">gen_load_fpr64</name><argument_list pos:start="1983:27" pos:end="1983:40">(<argument pos:start="1983:28" pos:end="1983:30"><expr pos:start="1983:28" pos:end="1983:30"><name pos:start="1983:28" pos:end="1983:30">ctx</name></expr></argument>, <argument pos:start="1983:33" pos:end="1983:35"><expr pos:start="1983:33" pos:end="1983:35"><name pos:start="1983:33" pos:end="1983:35">fp0</name></expr></argument>, <argument pos:start="1983:38" pos:end="1983:39"><expr pos:start="1983:38" pos:end="1983:39"><name pos:start="1983:38" pos:end="1983:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1985:13" pos:end="1985:42"><expr pos:start="1985:13" pos:end="1985:41"><call pos:start="1985:13" pos:end="1985:41"><name pos:start="1985:13" pos:end="1985:27">gen_store_fpr64</name><argument_list pos:start="1985:28" pos:end="1985:41">(<argument pos:start="1985:29" pos:end="1985:31"><expr pos:start="1985:29" pos:end="1985:31"><name pos:start="1985:29" pos:end="1985:31">ctx</name></expr></argument>, <argument pos:start="1985:34" pos:end="1985:36"><expr pos:start="1985:34" pos:end="1985:36"><name pos:start="1985:34" pos:end="1985:36">fp0</name></expr></argument>, <argument pos:start="1985:39" pos:end="1985:40"><expr pos:start="1985:39" pos:end="1985:40"><name pos:start="1985:39" pos:end="1985:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1987:13" pos:end="1987:35"><expr pos:start="1987:13" pos:end="1987:34"><call pos:start="1987:13" pos:end="1987:34"><name pos:start="1987:13" pos:end="1987:29">tcg_temp_free_i64</name><argument_list pos:start="1987:30" pos:end="1987:34">(<argument pos:start="1987:31" pos:end="1987:33"><expr pos:start="1987:31" pos:end="1987:33"><name pos:start="1987:31" pos:end="1987:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1989:13" pos:end="1989:30"><expr pos:start="1989:13" pos:end="1989:29"><call pos:start="1989:13" pos:end="1989:29"><name pos:start="1989:13" pos:end="1989:25">gen_set_label</name><argument_list pos:start="1989:26" pos:end="1989:29">(<argument pos:start="1989:27" pos:end="1989:28"><expr pos:start="1989:27" pos:end="1989:28"><name pos:start="1989:27" pos:end="1989:28">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="1993:9" pos:end="1993:24"><expr pos:start="1993:9" pos:end="1993:23"><name pos:start="1993:9" pos:end="1993:11">opn</name> <operator pos:start="1993:13" pos:end="1993:13">=</operator> <literal type="string" pos:start="1993:15" pos:end="1993:23">"movz.ps"</literal></expr>;</expr_stmt>

        <break pos:start="1995:9" pos:end="1995:14">break;</break>

    <case pos:start="1997:5" pos:end="1997:21">case <expr pos:start="1997:10" pos:end="1997:20"><name pos:start="1997:10" pos:end="1997:20">OPC_MOVN_PS</name></expr>:</case>

        <expr_stmt pos:start="1999:9" pos:end="1999:33"><expr pos:start="1999:9" pos:end="1999:32"><call pos:start="1999:9" pos:end="1999:32"><name pos:start="1999:9" pos:end="1999:27">check_cp1_64bitmode</name><argument_list pos:start="1999:28" pos:end="1999:32">(<argument pos:start="1999:29" pos:end="1999:31"><expr pos:start="1999:29" pos:end="1999:31"><name pos:start="1999:29" pos:end="1999:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="2001:9" pos:end="2025:9">{<block_content pos:start="2003:13" pos:end="2023:13">

            <decl_stmt pos:start="2003:13" pos:end="2003:37"><decl pos:start="2003:13" pos:end="2003:36"><type pos:start="2003:13" pos:end="2003:15"><name pos:start="2003:13" pos:end="2003:15">int</name></type> <name pos:start="2003:17" pos:end="2003:18">l1</name> <init pos:start="2003:20" pos:end="2003:36">= <expr pos:start="2003:22" pos:end="2003:36"><call pos:start="2003:22" pos:end="2003:36"><name pos:start="2003:22" pos:end="2003:34">gen_new_label</name><argument_list pos:start="2003:35" pos:end="2003:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="2005:13" pos:end="2005:25"><decl pos:start="2005:13" pos:end="2005:24"><type pos:start="2005:13" pos:end="2005:20"><name pos:start="2005:13" pos:end="2005:20">TCGv_i64</name></type> <name pos:start="2005:22" pos:end="2005:24">fp0</name></decl>;</decl_stmt>



            <if_stmt pos:start="2009:13" pos:end="2023:13"><if pos:start="2009:13" pos:end="2023:13">if <condition pos:start="2009:16" pos:end="2009:24">(<expr pos:start="2009:17" pos:end="2009:23"><name pos:start="2009:17" pos:end="2009:18">ft</name> <operator pos:start="2009:20" pos:end="2009:21">!=</operator> <literal type="number" pos:start="2009:23" pos:end="2009:23">0</literal></expr>)</condition> <block pos:start="2009:26" pos:end="2023:13">{<block_content pos:start="2011:17" pos:end="2021:34">

                <expr_stmt pos:start="2011:17" pos:end="2011:68"><expr pos:start="2011:17" pos:end="2011:67"><call pos:start="2011:17" pos:end="2011:67"><name pos:start="2011:17" pos:end="2011:34">tcg_gen_brcondi_tl</name><argument_list pos:start="2011:35" pos:end="2011:67">(<argument pos:start="2011:36" pos:end="2011:46"><expr pos:start="2011:36" pos:end="2011:46"><name pos:start="2011:36" pos:end="2011:46">TCG_COND_EQ</name></expr></argument>, <argument pos:start="2011:49" pos:end="2011:59"><expr pos:start="2011:49" pos:end="2011:59"><name pos:start="2011:49" pos:end="2011:59"><name pos:start="2011:49" pos:end="2011:55">cpu_gpr</name><index pos:start="2011:56" pos:end="2011:59">[<expr pos:start="2011:57" pos:end="2011:58"><name pos:start="2011:57" pos:end="2011:58">ft</name></expr>]</index></name></expr></argument>, <argument pos:start="2011:62" pos:end="2011:62"><expr pos:start="2011:62" pos:end="2011:62"><literal type="number" pos:start="2011:62" pos:end="2011:62">0</literal></expr></argument>, <argument pos:start="2011:65" pos:end="2011:66"><expr pos:start="2011:65" pos:end="2011:66"><name pos:start="2011:65" pos:end="2011:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2013:17" pos:end="2013:41"><expr pos:start="2013:17" pos:end="2013:40"><name pos:start="2013:17" pos:end="2013:19">fp0</name> <operator pos:start="2013:21" pos:end="2013:21">=</operator> <call pos:start="2013:23" pos:end="2013:40"><name pos:start="2013:23" pos:end="2013:38">tcg_temp_new_i64</name><argument_list pos:start="2013:39" pos:end="2013:40">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2015:17" pos:end="2015:45"><expr pos:start="2015:17" pos:end="2015:44"><call pos:start="2015:17" pos:end="2015:44"><name pos:start="2015:17" pos:end="2015:30">gen_load_fpr64</name><argument_list pos:start="2015:31" pos:end="2015:44">(<argument pos:start="2015:32" pos:end="2015:34"><expr pos:start="2015:32" pos:end="2015:34"><name pos:start="2015:32" pos:end="2015:34">ctx</name></expr></argument>, <argument pos:start="2015:37" pos:end="2015:39"><expr pos:start="2015:37" pos:end="2015:39"><name pos:start="2015:37" pos:end="2015:39">fp0</name></expr></argument>, <argument pos:start="2015:42" pos:end="2015:43"><expr pos:start="2015:42" pos:end="2015:43"><name pos:start="2015:42" pos:end="2015:43">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2017:17" pos:end="2017:46"><expr pos:start="2017:17" pos:end="2017:45"><call pos:start="2017:17" pos:end="2017:45"><name pos:start="2017:17" pos:end="2017:31">gen_store_fpr64</name><argument_list pos:start="2017:32" pos:end="2017:45">(<argument pos:start="2017:33" pos:end="2017:35"><expr pos:start="2017:33" pos:end="2017:35"><name pos:start="2017:33" pos:end="2017:35">ctx</name></expr></argument>, <argument pos:start="2017:38" pos:end="2017:40"><expr pos:start="2017:38" pos:end="2017:40"><name pos:start="2017:38" pos:end="2017:40">fp0</name></expr></argument>, <argument pos:start="2017:43" pos:end="2017:44"><expr pos:start="2017:43" pos:end="2017:44"><name pos:start="2017:43" pos:end="2017:44">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2019:17" pos:end="2019:39"><expr pos:start="2019:17" pos:end="2019:38"><call pos:start="2019:17" pos:end="2019:38"><name pos:start="2019:17" pos:end="2019:33">tcg_temp_free_i64</name><argument_list pos:start="2019:34" pos:end="2019:38">(<argument pos:start="2019:35" pos:end="2019:37"><expr pos:start="2019:35" pos:end="2019:37"><name pos:start="2019:35" pos:end="2019:37">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2021:17" pos:end="2021:34"><expr pos:start="2021:17" pos:end="2021:33"><call pos:start="2021:17" pos:end="2021:33"><name pos:start="2021:17" pos:end="2021:29">gen_set_label</name><argument_list pos:start="2021:30" pos:end="2021:33">(<argument pos:start="2021:31" pos:end="2021:32"><expr pos:start="2021:31" pos:end="2021:32"><name pos:start="2021:31" pos:end="2021:32">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="2027:9" pos:end="2027:24"><expr pos:start="2027:9" pos:end="2027:23"><name pos:start="2027:9" pos:end="2027:11">opn</name> <operator pos:start="2027:13" pos:end="2027:13">=</operator> <literal type="string" pos:start="2027:15" pos:end="2027:23">"movn.ps"</literal></expr>;</expr_stmt>

        <break pos:start="2029:9" pos:end="2029:14">break;</break>

    <case pos:start="2031:5" pos:end="2031:21">case <expr pos:start="2031:10" pos:end="2031:20"><name pos:start="2031:10" pos:end="2031:20">OPC_ADDR_PS</name></expr>:</case>

        <expr_stmt pos:start="2033:9" pos:end="2033:33"><expr pos:start="2033:9" pos:end="2033:32"><call pos:start="2033:9" pos:end="2033:32"><name pos:start="2033:9" pos:end="2033:27">check_cp1_64bitmode</name><argument_list pos:start="2033:28" pos:end="2033:32">(<argument pos:start="2033:29" pos:end="2033:31"><expr pos:start="2033:29" pos:end="2033:31"><name pos:start="2033:29" pos:end="2033:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="2035:9" pos:end="2055:9">{<block_content pos:start="2037:13" pos:end="2053:35">

            <decl_stmt pos:start="2037:13" pos:end="2037:46"><decl pos:start="2037:13" pos:end="2037:45"><type pos:start="2037:13" pos:end="2037:20"><name pos:start="2037:13" pos:end="2037:20">TCGv_i64</name></type> <name pos:start="2037:22" pos:end="2037:24">fp0</name> <init pos:start="2037:26" pos:end="2037:45">= <expr pos:start="2037:28" pos:end="2037:45"><call pos:start="2037:28" pos:end="2037:45"><name pos:start="2037:28" pos:end="2037:43">tcg_temp_new_i64</name><argument_list pos:start="2037:44" pos:end="2037:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="2039:13" pos:end="2039:46"><decl pos:start="2039:13" pos:end="2039:45"><type pos:start="2039:13" pos:end="2039:20"><name pos:start="2039:13" pos:end="2039:20">TCGv_i64</name></type> <name pos:start="2039:22" pos:end="2039:24">fp1</name> <init pos:start="2039:26" pos:end="2039:45">= <expr pos:start="2039:28" pos:end="2039:45"><call pos:start="2039:28" pos:end="2039:45"><name pos:start="2039:28" pos:end="2039:43">tcg_temp_new_i64</name><argument_list pos:start="2039:44" pos:end="2039:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="2043:13" pos:end="2043:41"><expr pos:start="2043:13" pos:end="2043:40"><call pos:start="2043:13" pos:end="2043:40"><name pos:start="2043:13" pos:end="2043:26">gen_load_fpr64</name><argument_list pos:start="2043:27" pos:end="2043:40">(<argument pos:start="2043:28" pos:end="2043:30"><expr pos:start="2043:28" pos:end="2043:30"><name pos:start="2043:28" pos:end="2043:30">ctx</name></expr></argument>, <argument pos:start="2043:33" pos:end="2043:35"><expr pos:start="2043:33" pos:end="2043:35"><name pos:start="2043:33" pos:end="2043:35">fp0</name></expr></argument>, <argument pos:start="2043:38" pos:end="2043:39"><expr pos:start="2043:38" pos:end="2043:39"><name pos:start="2043:38" pos:end="2043:39">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2045:13" pos:end="2045:41"><expr pos:start="2045:13" pos:end="2045:40"><call pos:start="2045:13" pos:end="2045:40"><name pos:start="2045:13" pos:end="2045:26">gen_load_fpr64</name><argument_list pos:start="2045:27" pos:end="2045:40">(<argument pos:start="2045:28" pos:end="2045:30"><expr pos:start="2045:28" pos:end="2045:30"><name pos:start="2045:28" pos:end="2045:30">ctx</name></expr></argument>, <argument pos:start="2045:33" pos:end="2045:35"><expr pos:start="2045:33" pos:end="2045:35"><name pos:start="2045:33" pos:end="2045:35">fp1</name></expr></argument>, <argument pos:start="2045:38" pos:end="2045:39"><expr pos:start="2045:38" pos:end="2045:39"><name pos:start="2045:38" pos:end="2045:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2047:13" pos:end="2047:61"><expr pos:start="2047:13" pos:end="2047:60"><call pos:start="2047:13" pos:end="2047:60"><name pos:start="2047:13" pos:end="2047:36">gen_helper_float_addr_ps</name><argument_list pos:start="2047:37" pos:end="2047:60">(<argument pos:start="2047:38" pos:end="2047:40"><expr pos:start="2047:38" pos:end="2047:40"><name pos:start="2047:38" pos:end="2047:40">fp0</name></expr></argument>, <argument pos:start="2047:43" pos:end="2047:49"><expr pos:start="2047:43" pos:end="2047:49"><name pos:start="2047:43" pos:end="2047:49">cpu_env</name></expr></argument>, <argument pos:start="2047:52" pos:end="2047:54"><expr pos:start="2047:52" pos:end="2047:54"><name pos:start="2047:52" pos:end="2047:54">fp0</name></expr></argument>, <argument pos:start="2047:57" pos:end="2047:59"><expr pos:start="2047:57" pos:end="2047:59"><name pos:start="2047:57" pos:end="2047:59">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2049:13" pos:end="2049:35"><expr pos:start="2049:13" pos:end="2049:34"><call pos:start="2049:13" pos:end="2049:34"><name pos:start="2049:13" pos:end="2049:29">tcg_temp_free_i64</name><argument_list pos:start="2049:30" pos:end="2049:34">(<argument pos:start="2049:31" pos:end="2049:33"><expr pos:start="2049:31" pos:end="2049:33"><name pos:start="2049:31" pos:end="2049:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2051:13" pos:end="2051:42"><expr pos:start="2051:13" pos:end="2051:41"><call pos:start="2051:13" pos:end="2051:41"><name pos:start="2051:13" pos:end="2051:27">gen_store_fpr64</name><argument_list pos:start="2051:28" pos:end="2051:41">(<argument pos:start="2051:29" pos:end="2051:31"><expr pos:start="2051:29" pos:end="2051:31"><name pos:start="2051:29" pos:end="2051:31">ctx</name></expr></argument>, <argument pos:start="2051:34" pos:end="2051:36"><expr pos:start="2051:34" pos:end="2051:36"><name pos:start="2051:34" pos:end="2051:36">fp0</name></expr></argument>, <argument pos:start="2051:39" pos:end="2051:40"><expr pos:start="2051:39" pos:end="2051:40"><name pos:start="2051:39" pos:end="2051:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2053:13" pos:end="2053:35"><expr pos:start="2053:13" pos:end="2053:34"><call pos:start="2053:13" pos:end="2053:34"><name pos:start="2053:13" pos:end="2053:29">tcg_temp_free_i64</name><argument_list pos:start="2053:30" pos:end="2053:34">(<argument pos:start="2053:31" pos:end="2053:33"><expr pos:start="2053:31" pos:end="2053:33"><name pos:start="2053:31" pos:end="2053:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="2057:9" pos:end="2057:24"><expr pos:start="2057:9" pos:end="2057:23"><name pos:start="2057:9" pos:end="2057:11">opn</name> <operator pos:start="2057:13" pos:end="2057:13">=</operator> <literal type="string" pos:start="2057:15" pos:end="2057:23">"addr.ps"</literal></expr>;</expr_stmt>

        <break pos:start="2059:9" pos:end="2059:14">break;</break>

    <case pos:start="2061:5" pos:end="2061:21">case <expr pos:start="2061:10" pos:end="2061:20"><name pos:start="2061:10" pos:end="2061:20">OPC_MULR_PS</name></expr>:</case>

        <expr_stmt pos:start="2063:9" pos:end="2063:33"><expr pos:start="2063:9" pos:end="2063:32"><call pos:start="2063:9" pos:end="2063:32"><name pos:start="2063:9" pos:end="2063:27">check_cp1_64bitmode</name><argument_list pos:start="2063:28" pos:end="2063:32">(<argument pos:start="2063:29" pos:end="2063:31"><expr pos:start="2063:29" pos:end="2063:31"><name pos:start="2063:29" pos:end="2063:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="2065:9" pos:end="2085:9">{<block_content pos:start="2067:13" pos:end="2083:35">

            <decl_stmt pos:start="2067:13" pos:end="2067:46"><decl pos:start="2067:13" pos:end="2067:45"><type pos:start="2067:13" pos:end="2067:20"><name pos:start="2067:13" pos:end="2067:20">TCGv_i64</name></type> <name pos:start="2067:22" pos:end="2067:24">fp0</name> <init pos:start="2067:26" pos:end="2067:45">= <expr pos:start="2067:28" pos:end="2067:45"><call pos:start="2067:28" pos:end="2067:45"><name pos:start="2067:28" pos:end="2067:43">tcg_temp_new_i64</name><argument_list pos:start="2067:44" pos:end="2067:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="2069:13" pos:end="2069:46"><decl pos:start="2069:13" pos:end="2069:45"><type pos:start="2069:13" pos:end="2069:20"><name pos:start="2069:13" pos:end="2069:20">TCGv_i64</name></type> <name pos:start="2069:22" pos:end="2069:24">fp1</name> <init pos:start="2069:26" pos:end="2069:45">= <expr pos:start="2069:28" pos:end="2069:45"><call pos:start="2069:28" pos:end="2069:45"><name pos:start="2069:28" pos:end="2069:43">tcg_temp_new_i64</name><argument_list pos:start="2069:44" pos:end="2069:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="2073:13" pos:end="2073:41"><expr pos:start="2073:13" pos:end="2073:40"><call pos:start="2073:13" pos:end="2073:40"><name pos:start="2073:13" pos:end="2073:26">gen_load_fpr64</name><argument_list pos:start="2073:27" pos:end="2073:40">(<argument pos:start="2073:28" pos:end="2073:30"><expr pos:start="2073:28" pos:end="2073:30"><name pos:start="2073:28" pos:end="2073:30">ctx</name></expr></argument>, <argument pos:start="2073:33" pos:end="2073:35"><expr pos:start="2073:33" pos:end="2073:35"><name pos:start="2073:33" pos:end="2073:35">fp0</name></expr></argument>, <argument pos:start="2073:38" pos:end="2073:39"><expr pos:start="2073:38" pos:end="2073:39"><name pos:start="2073:38" pos:end="2073:39">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2075:13" pos:end="2075:41"><expr pos:start="2075:13" pos:end="2075:40"><call pos:start="2075:13" pos:end="2075:40"><name pos:start="2075:13" pos:end="2075:26">gen_load_fpr64</name><argument_list pos:start="2075:27" pos:end="2075:40">(<argument pos:start="2075:28" pos:end="2075:30"><expr pos:start="2075:28" pos:end="2075:30"><name pos:start="2075:28" pos:end="2075:30">ctx</name></expr></argument>, <argument pos:start="2075:33" pos:end="2075:35"><expr pos:start="2075:33" pos:end="2075:35"><name pos:start="2075:33" pos:end="2075:35">fp1</name></expr></argument>, <argument pos:start="2075:38" pos:end="2075:39"><expr pos:start="2075:38" pos:end="2075:39"><name pos:start="2075:38" pos:end="2075:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2077:13" pos:end="2077:61"><expr pos:start="2077:13" pos:end="2077:60"><call pos:start="2077:13" pos:end="2077:60"><name pos:start="2077:13" pos:end="2077:36">gen_helper_float_mulr_ps</name><argument_list pos:start="2077:37" pos:end="2077:60">(<argument pos:start="2077:38" pos:end="2077:40"><expr pos:start="2077:38" pos:end="2077:40"><name pos:start="2077:38" pos:end="2077:40">fp0</name></expr></argument>, <argument pos:start="2077:43" pos:end="2077:49"><expr pos:start="2077:43" pos:end="2077:49"><name pos:start="2077:43" pos:end="2077:49">cpu_env</name></expr></argument>, <argument pos:start="2077:52" pos:end="2077:54"><expr pos:start="2077:52" pos:end="2077:54"><name pos:start="2077:52" pos:end="2077:54">fp0</name></expr></argument>, <argument pos:start="2077:57" pos:end="2077:59"><expr pos:start="2077:57" pos:end="2077:59"><name pos:start="2077:57" pos:end="2077:59">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2079:13" pos:end="2079:35"><expr pos:start="2079:13" pos:end="2079:34"><call pos:start="2079:13" pos:end="2079:34"><name pos:start="2079:13" pos:end="2079:29">tcg_temp_free_i64</name><argument_list pos:start="2079:30" pos:end="2079:34">(<argument pos:start="2079:31" pos:end="2079:33"><expr pos:start="2079:31" pos:end="2079:33"><name pos:start="2079:31" pos:end="2079:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2081:13" pos:end="2081:42"><expr pos:start="2081:13" pos:end="2081:41"><call pos:start="2081:13" pos:end="2081:41"><name pos:start="2081:13" pos:end="2081:27">gen_store_fpr64</name><argument_list pos:start="2081:28" pos:end="2081:41">(<argument pos:start="2081:29" pos:end="2081:31"><expr pos:start="2081:29" pos:end="2081:31"><name pos:start="2081:29" pos:end="2081:31">ctx</name></expr></argument>, <argument pos:start="2081:34" pos:end="2081:36"><expr pos:start="2081:34" pos:end="2081:36"><name pos:start="2081:34" pos:end="2081:36">fp0</name></expr></argument>, <argument pos:start="2081:39" pos:end="2081:40"><expr pos:start="2081:39" pos:end="2081:40"><name pos:start="2081:39" pos:end="2081:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2083:13" pos:end="2083:35"><expr pos:start="2083:13" pos:end="2083:34"><call pos:start="2083:13" pos:end="2083:34"><name pos:start="2083:13" pos:end="2083:29">tcg_temp_free_i64</name><argument_list pos:start="2083:30" pos:end="2083:34">(<argument pos:start="2083:31" pos:end="2083:33"><expr pos:start="2083:31" pos:end="2083:33"><name pos:start="2083:31" pos:end="2083:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="2087:9" pos:end="2087:24"><expr pos:start="2087:9" pos:end="2087:23"><name pos:start="2087:9" pos:end="2087:11">opn</name> <operator pos:start="2087:13" pos:end="2087:13">=</operator> <literal type="string" pos:start="2087:15" pos:end="2087:23">"mulr.ps"</literal></expr>;</expr_stmt>

        <break pos:start="2089:9" pos:end="2089:14">break;</break>

    <case pos:start="2091:5" pos:end="2091:23">case <expr pos:start="2091:10" pos:end="2091:22"><name pos:start="2091:10" pos:end="2091:22">OPC_RECIP2_PS</name></expr>:</case>

        <expr_stmt pos:start="2093:9" pos:end="2093:33"><expr pos:start="2093:9" pos:end="2093:32"><call pos:start="2093:9" pos:end="2093:32"><name pos:start="2093:9" pos:end="2093:27">check_cp1_64bitmode</name><argument_list pos:start="2093:28" pos:end="2093:32">(<argument pos:start="2093:29" pos:end="2093:31"><expr pos:start="2093:29" pos:end="2093:31"><name pos:start="2093:29" pos:end="2093:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="2095:9" pos:end="2115:9">{<block_content pos:start="2097:13" pos:end="2113:35">

            <decl_stmt pos:start="2097:13" pos:end="2097:46"><decl pos:start="2097:13" pos:end="2097:45"><type pos:start="2097:13" pos:end="2097:20"><name pos:start="2097:13" pos:end="2097:20">TCGv_i64</name></type> <name pos:start="2097:22" pos:end="2097:24">fp0</name> <init pos:start="2097:26" pos:end="2097:45">= <expr pos:start="2097:28" pos:end="2097:45"><call pos:start="2097:28" pos:end="2097:45"><name pos:start="2097:28" pos:end="2097:43">tcg_temp_new_i64</name><argument_list pos:start="2097:44" pos:end="2097:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="2099:13" pos:end="2099:46"><decl pos:start="2099:13" pos:end="2099:45"><type pos:start="2099:13" pos:end="2099:20"><name pos:start="2099:13" pos:end="2099:20">TCGv_i64</name></type> <name pos:start="2099:22" pos:end="2099:24">fp1</name> <init pos:start="2099:26" pos:end="2099:45">= <expr pos:start="2099:28" pos:end="2099:45"><call pos:start="2099:28" pos:end="2099:45"><name pos:start="2099:28" pos:end="2099:43">tcg_temp_new_i64</name><argument_list pos:start="2099:44" pos:end="2099:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="2103:13" pos:end="2103:41"><expr pos:start="2103:13" pos:end="2103:40"><call pos:start="2103:13" pos:end="2103:40"><name pos:start="2103:13" pos:end="2103:26">gen_load_fpr64</name><argument_list pos:start="2103:27" pos:end="2103:40">(<argument pos:start="2103:28" pos:end="2103:30"><expr pos:start="2103:28" pos:end="2103:30"><name pos:start="2103:28" pos:end="2103:30">ctx</name></expr></argument>, <argument pos:start="2103:33" pos:end="2103:35"><expr pos:start="2103:33" pos:end="2103:35"><name pos:start="2103:33" pos:end="2103:35">fp0</name></expr></argument>, <argument pos:start="2103:38" pos:end="2103:39"><expr pos:start="2103:38" pos:end="2103:39"><name pos:start="2103:38" pos:end="2103:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2105:13" pos:end="2105:41"><expr pos:start="2105:13" pos:end="2105:40"><call pos:start="2105:13" pos:end="2105:40"><name pos:start="2105:13" pos:end="2105:26">gen_load_fpr64</name><argument_list pos:start="2105:27" pos:end="2105:40">(<argument pos:start="2105:28" pos:end="2105:30"><expr pos:start="2105:28" pos:end="2105:30"><name pos:start="2105:28" pos:end="2105:30">ctx</name></expr></argument>, <argument pos:start="2105:33" pos:end="2105:35"><expr pos:start="2105:33" pos:end="2105:35"><name pos:start="2105:33" pos:end="2105:35">fp1</name></expr></argument>, <argument pos:start="2105:38" pos:end="2105:39"><expr pos:start="2105:38" pos:end="2105:39"><name pos:start="2105:38" pos:end="2105:39">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2107:13" pos:end="2107:63"><expr pos:start="2107:13" pos:end="2107:62"><call pos:start="2107:13" pos:end="2107:62"><name pos:start="2107:13" pos:end="2107:38">gen_helper_float_recip2_ps</name><argument_list pos:start="2107:39" pos:end="2107:62">(<argument pos:start="2107:40" pos:end="2107:42"><expr pos:start="2107:40" pos:end="2107:42"><name pos:start="2107:40" pos:end="2107:42">fp0</name></expr></argument>, <argument pos:start="2107:45" pos:end="2107:51"><expr pos:start="2107:45" pos:end="2107:51"><name pos:start="2107:45" pos:end="2107:51">cpu_env</name></expr></argument>, <argument pos:start="2107:54" pos:end="2107:56"><expr pos:start="2107:54" pos:end="2107:56"><name pos:start="2107:54" pos:end="2107:56">fp0</name></expr></argument>, <argument pos:start="2107:59" pos:end="2107:61"><expr pos:start="2107:59" pos:end="2107:61"><name pos:start="2107:59" pos:end="2107:61">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2109:13" pos:end="2109:35"><expr pos:start="2109:13" pos:end="2109:34"><call pos:start="2109:13" pos:end="2109:34"><name pos:start="2109:13" pos:end="2109:29">tcg_temp_free_i64</name><argument_list pos:start="2109:30" pos:end="2109:34">(<argument pos:start="2109:31" pos:end="2109:33"><expr pos:start="2109:31" pos:end="2109:33"><name pos:start="2109:31" pos:end="2109:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2111:13" pos:end="2111:42"><expr pos:start="2111:13" pos:end="2111:41"><call pos:start="2111:13" pos:end="2111:41"><name pos:start="2111:13" pos:end="2111:27">gen_store_fpr64</name><argument_list pos:start="2111:28" pos:end="2111:41">(<argument pos:start="2111:29" pos:end="2111:31"><expr pos:start="2111:29" pos:end="2111:31"><name pos:start="2111:29" pos:end="2111:31">ctx</name></expr></argument>, <argument pos:start="2111:34" pos:end="2111:36"><expr pos:start="2111:34" pos:end="2111:36"><name pos:start="2111:34" pos:end="2111:36">fp0</name></expr></argument>, <argument pos:start="2111:39" pos:end="2111:40"><expr pos:start="2111:39" pos:end="2111:40"><name pos:start="2111:39" pos:end="2111:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2113:13" pos:end="2113:35"><expr pos:start="2113:13" pos:end="2113:34"><call pos:start="2113:13" pos:end="2113:34"><name pos:start="2113:13" pos:end="2113:29">tcg_temp_free_i64</name><argument_list pos:start="2113:30" pos:end="2113:34">(<argument pos:start="2113:31" pos:end="2113:33"><expr pos:start="2113:31" pos:end="2113:33"><name pos:start="2113:31" pos:end="2113:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="2117:9" pos:end="2117:26"><expr pos:start="2117:9" pos:end="2117:25"><name pos:start="2117:9" pos:end="2117:11">opn</name> <operator pos:start="2117:13" pos:end="2117:13">=</operator> <literal type="string" pos:start="2117:15" pos:end="2117:25">"recip2.ps"</literal></expr>;</expr_stmt>

        <break pos:start="2119:9" pos:end="2119:14">break;</break>

    <case pos:start="2121:5" pos:end="2121:23">case <expr pos:start="2121:10" pos:end="2121:22"><name pos:start="2121:10" pos:end="2121:22">OPC_RECIP1_PS</name></expr>:</case>

        <expr_stmt pos:start="2123:9" pos:end="2123:33"><expr pos:start="2123:9" pos:end="2123:32"><call pos:start="2123:9" pos:end="2123:32"><name pos:start="2123:9" pos:end="2123:27">check_cp1_64bitmode</name><argument_list pos:start="2123:28" pos:end="2123:32">(<argument pos:start="2123:29" pos:end="2123:31"><expr pos:start="2123:29" pos:end="2123:31"><name pos:start="2123:29" pos:end="2123:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="2125:9" pos:end="2139:9">{<block_content pos:start="2127:13" pos:end="2137:35">

            <decl_stmt pos:start="2127:13" pos:end="2127:46"><decl pos:start="2127:13" pos:end="2127:45"><type pos:start="2127:13" pos:end="2127:20"><name pos:start="2127:13" pos:end="2127:20">TCGv_i64</name></type> <name pos:start="2127:22" pos:end="2127:24">fp0</name> <init pos:start="2127:26" pos:end="2127:45">= <expr pos:start="2127:28" pos:end="2127:45"><call pos:start="2127:28" pos:end="2127:45"><name pos:start="2127:28" pos:end="2127:43">tcg_temp_new_i64</name><argument_list pos:start="2127:44" pos:end="2127:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="2131:13" pos:end="2131:41"><expr pos:start="2131:13" pos:end="2131:40"><call pos:start="2131:13" pos:end="2131:40"><name pos:start="2131:13" pos:end="2131:26">gen_load_fpr64</name><argument_list pos:start="2131:27" pos:end="2131:40">(<argument pos:start="2131:28" pos:end="2131:30"><expr pos:start="2131:28" pos:end="2131:30"><name pos:start="2131:28" pos:end="2131:30">ctx</name></expr></argument>, <argument pos:start="2131:33" pos:end="2131:35"><expr pos:start="2131:33" pos:end="2131:35"><name pos:start="2131:33" pos:end="2131:35">fp0</name></expr></argument>, <argument pos:start="2131:38" pos:end="2131:39"><expr pos:start="2131:38" pos:end="2131:39"><name pos:start="2131:38" pos:end="2131:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2133:13" pos:end="2133:58"><expr pos:start="2133:13" pos:end="2133:57"><call pos:start="2133:13" pos:end="2133:57"><name pos:start="2133:13" pos:end="2133:38">gen_helper_float_recip1_ps</name><argument_list pos:start="2133:39" pos:end="2133:57">(<argument pos:start="2133:40" pos:end="2133:42"><expr pos:start="2133:40" pos:end="2133:42"><name pos:start="2133:40" pos:end="2133:42">fp0</name></expr></argument>, <argument pos:start="2133:45" pos:end="2133:51"><expr pos:start="2133:45" pos:end="2133:51"><name pos:start="2133:45" pos:end="2133:51">cpu_env</name></expr></argument>, <argument pos:start="2133:54" pos:end="2133:56"><expr pos:start="2133:54" pos:end="2133:56"><name pos:start="2133:54" pos:end="2133:56">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2135:13" pos:end="2135:42"><expr pos:start="2135:13" pos:end="2135:41"><call pos:start="2135:13" pos:end="2135:41"><name pos:start="2135:13" pos:end="2135:27">gen_store_fpr64</name><argument_list pos:start="2135:28" pos:end="2135:41">(<argument pos:start="2135:29" pos:end="2135:31"><expr pos:start="2135:29" pos:end="2135:31"><name pos:start="2135:29" pos:end="2135:31">ctx</name></expr></argument>, <argument pos:start="2135:34" pos:end="2135:36"><expr pos:start="2135:34" pos:end="2135:36"><name pos:start="2135:34" pos:end="2135:36">fp0</name></expr></argument>, <argument pos:start="2135:39" pos:end="2135:40"><expr pos:start="2135:39" pos:end="2135:40"><name pos:start="2135:39" pos:end="2135:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2137:13" pos:end="2137:35"><expr pos:start="2137:13" pos:end="2137:34"><call pos:start="2137:13" pos:end="2137:34"><name pos:start="2137:13" pos:end="2137:29">tcg_temp_free_i64</name><argument_list pos:start="2137:30" pos:end="2137:34">(<argument pos:start="2137:31" pos:end="2137:33"><expr pos:start="2137:31" pos:end="2137:33"><name pos:start="2137:31" pos:end="2137:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="2141:9" pos:end="2141:26"><expr pos:start="2141:9" pos:end="2141:25"><name pos:start="2141:9" pos:end="2141:11">opn</name> <operator pos:start="2141:13" pos:end="2141:13">=</operator> <literal type="string" pos:start="2141:15" pos:end="2141:25">"recip1.ps"</literal></expr>;</expr_stmt>

        <break pos:start="2143:9" pos:end="2143:14">break;</break>

    <case pos:start="2145:5" pos:end="2145:23">case <expr pos:start="2145:10" pos:end="2145:22"><name pos:start="2145:10" pos:end="2145:22">OPC_RSQRT1_PS</name></expr>:</case>

        <expr_stmt pos:start="2147:9" pos:end="2147:33"><expr pos:start="2147:9" pos:end="2147:32"><call pos:start="2147:9" pos:end="2147:32"><name pos:start="2147:9" pos:end="2147:27">check_cp1_64bitmode</name><argument_list pos:start="2147:28" pos:end="2147:32">(<argument pos:start="2147:29" pos:end="2147:31"><expr pos:start="2147:29" pos:end="2147:31"><name pos:start="2147:29" pos:end="2147:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="2149:9" pos:end="2163:9">{<block_content pos:start="2151:13" pos:end="2161:35">

            <decl_stmt pos:start="2151:13" pos:end="2151:46"><decl pos:start="2151:13" pos:end="2151:45"><type pos:start="2151:13" pos:end="2151:20"><name pos:start="2151:13" pos:end="2151:20">TCGv_i64</name></type> <name pos:start="2151:22" pos:end="2151:24">fp0</name> <init pos:start="2151:26" pos:end="2151:45">= <expr pos:start="2151:28" pos:end="2151:45"><call pos:start="2151:28" pos:end="2151:45"><name pos:start="2151:28" pos:end="2151:43">tcg_temp_new_i64</name><argument_list pos:start="2151:44" pos:end="2151:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="2155:13" pos:end="2155:41"><expr pos:start="2155:13" pos:end="2155:40"><call pos:start="2155:13" pos:end="2155:40"><name pos:start="2155:13" pos:end="2155:26">gen_load_fpr64</name><argument_list pos:start="2155:27" pos:end="2155:40">(<argument pos:start="2155:28" pos:end="2155:30"><expr pos:start="2155:28" pos:end="2155:30"><name pos:start="2155:28" pos:end="2155:30">ctx</name></expr></argument>, <argument pos:start="2155:33" pos:end="2155:35"><expr pos:start="2155:33" pos:end="2155:35"><name pos:start="2155:33" pos:end="2155:35">fp0</name></expr></argument>, <argument pos:start="2155:38" pos:end="2155:39"><expr pos:start="2155:38" pos:end="2155:39"><name pos:start="2155:38" pos:end="2155:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2157:13" pos:end="2157:58"><expr pos:start="2157:13" pos:end="2157:57"><call pos:start="2157:13" pos:end="2157:57"><name pos:start="2157:13" pos:end="2157:38">gen_helper_float_rsqrt1_ps</name><argument_list pos:start="2157:39" pos:end="2157:57">(<argument pos:start="2157:40" pos:end="2157:42"><expr pos:start="2157:40" pos:end="2157:42"><name pos:start="2157:40" pos:end="2157:42">fp0</name></expr></argument>, <argument pos:start="2157:45" pos:end="2157:51"><expr pos:start="2157:45" pos:end="2157:51"><name pos:start="2157:45" pos:end="2157:51">cpu_env</name></expr></argument>, <argument pos:start="2157:54" pos:end="2157:56"><expr pos:start="2157:54" pos:end="2157:56"><name pos:start="2157:54" pos:end="2157:56">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2159:13" pos:end="2159:42"><expr pos:start="2159:13" pos:end="2159:41"><call pos:start="2159:13" pos:end="2159:41"><name pos:start="2159:13" pos:end="2159:27">gen_store_fpr64</name><argument_list pos:start="2159:28" pos:end="2159:41">(<argument pos:start="2159:29" pos:end="2159:31"><expr pos:start="2159:29" pos:end="2159:31"><name pos:start="2159:29" pos:end="2159:31">ctx</name></expr></argument>, <argument pos:start="2159:34" pos:end="2159:36"><expr pos:start="2159:34" pos:end="2159:36"><name pos:start="2159:34" pos:end="2159:36">fp0</name></expr></argument>, <argument pos:start="2159:39" pos:end="2159:40"><expr pos:start="2159:39" pos:end="2159:40"><name pos:start="2159:39" pos:end="2159:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2161:13" pos:end="2161:35"><expr pos:start="2161:13" pos:end="2161:34"><call pos:start="2161:13" pos:end="2161:34"><name pos:start="2161:13" pos:end="2161:29">tcg_temp_free_i64</name><argument_list pos:start="2161:30" pos:end="2161:34">(<argument pos:start="2161:31" pos:end="2161:33"><expr pos:start="2161:31" pos:end="2161:33"><name pos:start="2161:31" pos:end="2161:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="2165:9" pos:end="2165:26"><expr pos:start="2165:9" pos:end="2165:25"><name pos:start="2165:9" pos:end="2165:11">opn</name> <operator pos:start="2165:13" pos:end="2165:13">=</operator> <literal type="string" pos:start="2165:15" pos:end="2165:25">"rsqrt1.ps"</literal></expr>;</expr_stmt>

        <break pos:start="2167:9" pos:end="2167:14">break;</break>

    <case pos:start="2169:5" pos:end="2169:23">case <expr pos:start="2169:10" pos:end="2169:22"><name pos:start="2169:10" pos:end="2169:22">OPC_RSQRT2_PS</name></expr>:</case>

        <expr_stmt pos:start="2171:9" pos:end="2171:33"><expr pos:start="2171:9" pos:end="2171:32"><call pos:start="2171:9" pos:end="2171:32"><name pos:start="2171:9" pos:end="2171:27">check_cp1_64bitmode</name><argument_list pos:start="2171:28" pos:end="2171:32">(<argument pos:start="2171:29" pos:end="2171:31"><expr pos:start="2171:29" pos:end="2171:31"><name pos:start="2171:29" pos:end="2171:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="2173:9" pos:end="2193:9">{<block_content pos:start="2175:13" pos:end="2191:35">

            <decl_stmt pos:start="2175:13" pos:end="2175:46"><decl pos:start="2175:13" pos:end="2175:45"><type pos:start="2175:13" pos:end="2175:20"><name pos:start="2175:13" pos:end="2175:20">TCGv_i64</name></type> <name pos:start="2175:22" pos:end="2175:24">fp0</name> <init pos:start="2175:26" pos:end="2175:45">= <expr pos:start="2175:28" pos:end="2175:45"><call pos:start="2175:28" pos:end="2175:45"><name pos:start="2175:28" pos:end="2175:43">tcg_temp_new_i64</name><argument_list pos:start="2175:44" pos:end="2175:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="2177:13" pos:end="2177:46"><decl pos:start="2177:13" pos:end="2177:45"><type pos:start="2177:13" pos:end="2177:20"><name pos:start="2177:13" pos:end="2177:20">TCGv_i64</name></type> <name pos:start="2177:22" pos:end="2177:24">fp1</name> <init pos:start="2177:26" pos:end="2177:45">= <expr pos:start="2177:28" pos:end="2177:45"><call pos:start="2177:28" pos:end="2177:45"><name pos:start="2177:28" pos:end="2177:43">tcg_temp_new_i64</name><argument_list pos:start="2177:44" pos:end="2177:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="2181:13" pos:end="2181:41"><expr pos:start="2181:13" pos:end="2181:40"><call pos:start="2181:13" pos:end="2181:40"><name pos:start="2181:13" pos:end="2181:26">gen_load_fpr64</name><argument_list pos:start="2181:27" pos:end="2181:40">(<argument pos:start="2181:28" pos:end="2181:30"><expr pos:start="2181:28" pos:end="2181:30"><name pos:start="2181:28" pos:end="2181:30">ctx</name></expr></argument>, <argument pos:start="2181:33" pos:end="2181:35"><expr pos:start="2181:33" pos:end="2181:35"><name pos:start="2181:33" pos:end="2181:35">fp0</name></expr></argument>, <argument pos:start="2181:38" pos:end="2181:39"><expr pos:start="2181:38" pos:end="2181:39"><name pos:start="2181:38" pos:end="2181:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2183:13" pos:end="2183:41"><expr pos:start="2183:13" pos:end="2183:40"><call pos:start="2183:13" pos:end="2183:40"><name pos:start="2183:13" pos:end="2183:26">gen_load_fpr64</name><argument_list pos:start="2183:27" pos:end="2183:40">(<argument pos:start="2183:28" pos:end="2183:30"><expr pos:start="2183:28" pos:end="2183:30"><name pos:start="2183:28" pos:end="2183:30">ctx</name></expr></argument>, <argument pos:start="2183:33" pos:end="2183:35"><expr pos:start="2183:33" pos:end="2183:35"><name pos:start="2183:33" pos:end="2183:35">fp1</name></expr></argument>, <argument pos:start="2183:38" pos:end="2183:39"><expr pos:start="2183:38" pos:end="2183:39"><name pos:start="2183:38" pos:end="2183:39">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2185:13" pos:end="2185:63"><expr pos:start="2185:13" pos:end="2185:62"><call pos:start="2185:13" pos:end="2185:62"><name pos:start="2185:13" pos:end="2185:38">gen_helper_float_rsqrt2_ps</name><argument_list pos:start="2185:39" pos:end="2185:62">(<argument pos:start="2185:40" pos:end="2185:42"><expr pos:start="2185:40" pos:end="2185:42"><name pos:start="2185:40" pos:end="2185:42">fp0</name></expr></argument>, <argument pos:start="2185:45" pos:end="2185:51"><expr pos:start="2185:45" pos:end="2185:51"><name pos:start="2185:45" pos:end="2185:51">cpu_env</name></expr></argument>, <argument pos:start="2185:54" pos:end="2185:56"><expr pos:start="2185:54" pos:end="2185:56"><name pos:start="2185:54" pos:end="2185:56">fp0</name></expr></argument>, <argument pos:start="2185:59" pos:end="2185:61"><expr pos:start="2185:59" pos:end="2185:61"><name pos:start="2185:59" pos:end="2185:61">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2187:13" pos:end="2187:35"><expr pos:start="2187:13" pos:end="2187:34"><call pos:start="2187:13" pos:end="2187:34"><name pos:start="2187:13" pos:end="2187:29">tcg_temp_free_i64</name><argument_list pos:start="2187:30" pos:end="2187:34">(<argument pos:start="2187:31" pos:end="2187:33"><expr pos:start="2187:31" pos:end="2187:33"><name pos:start="2187:31" pos:end="2187:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2189:13" pos:end="2189:42"><expr pos:start="2189:13" pos:end="2189:41"><call pos:start="2189:13" pos:end="2189:41"><name pos:start="2189:13" pos:end="2189:27">gen_store_fpr64</name><argument_list pos:start="2189:28" pos:end="2189:41">(<argument pos:start="2189:29" pos:end="2189:31"><expr pos:start="2189:29" pos:end="2189:31"><name pos:start="2189:29" pos:end="2189:31">ctx</name></expr></argument>, <argument pos:start="2189:34" pos:end="2189:36"><expr pos:start="2189:34" pos:end="2189:36"><name pos:start="2189:34" pos:end="2189:36">fp0</name></expr></argument>, <argument pos:start="2189:39" pos:end="2189:40"><expr pos:start="2189:39" pos:end="2189:40"><name pos:start="2189:39" pos:end="2189:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2191:13" pos:end="2191:35"><expr pos:start="2191:13" pos:end="2191:34"><call pos:start="2191:13" pos:end="2191:34"><name pos:start="2191:13" pos:end="2191:29">tcg_temp_free_i64</name><argument_list pos:start="2191:30" pos:end="2191:34">(<argument pos:start="2191:31" pos:end="2191:33"><expr pos:start="2191:31" pos:end="2191:33"><name pos:start="2191:31" pos:end="2191:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="2195:9" pos:end="2195:26"><expr pos:start="2195:9" pos:end="2195:25"><name pos:start="2195:9" pos:end="2195:11">opn</name> <operator pos:start="2195:13" pos:end="2195:13">=</operator> <literal type="string" pos:start="2195:15" pos:end="2195:25">"rsqrt2.ps"</literal></expr>;</expr_stmt>

        <break pos:start="2197:9" pos:end="2197:14">break;</break>

    <case pos:start="2199:5" pos:end="2199:22">case <expr pos:start="2199:10" pos:end="2199:21"><name pos:start="2199:10" pos:end="2199:21">OPC_CVT_S_PU</name></expr>:</case>

        <expr_stmt pos:start="2201:9" pos:end="2201:33"><expr pos:start="2201:9" pos:end="2201:32"><call pos:start="2201:9" pos:end="2201:32"><name pos:start="2201:9" pos:end="2201:27">check_cp1_64bitmode</name><argument_list pos:start="2201:28" pos:end="2201:32">(<argument pos:start="2201:29" pos:end="2201:31"><expr pos:start="2201:29" pos:end="2201:31"><name pos:start="2201:29" pos:end="2201:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="2203:9" pos:end="2217:9">{<block_content pos:start="2205:13" pos:end="2215:35">

            <decl_stmt pos:start="2205:13" pos:end="2205:46"><decl pos:start="2205:13" pos:end="2205:45"><type pos:start="2205:13" pos:end="2205:20"><name pos:start="2205:13" pos:end="2205:20">TCGv_i32</name></type> <name pos:start="2205:22" pos:end="2205:24">fp0</name> <init pos:start="2205:26" pos:end="2205:45">= <expr pos:start="2205:28" pos:end="2205:45"><call pos:start="2205:28" pos:end="2205:45"><name pos:start="2205:28" pos:end="2205:43">tcg_temp_new_i32</name><argument_list pos:start="2205:44" pos:end="2205:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="2209:13" pos:end="2209:37"><expr pos:start="2209:13" pos:end="2209:36"><call pos:start="2209:13" pos:end="2209:36"><name pos:start="2209:13" pos:end="2209:27">gen_load_fpr32h</name><argument_list pos:start="2209:28" pos:end="2209:36">(<argument pos:start="2209:29" pos:end="2209:31"><expr pos:start="2209:29" pos:end="2209:31"><name pos:start="2209:29" pos:end="2209:31">fp0</name></expr></argument>, <argument pos:start="2209:34" pos:end="2209:35"><expr pos:start="2209:34" pos:end="2209:35"><name pos:start="2209:34" pos:end="2209:35">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2211:13" pos:end="2211:56"><expr pos:start="2211:13" pos:end="2211:55"><call pos:start="2211:13" pos:end="2211:55"><name pos:start="2211:13" pos:end="2211:36">gen_helper_float_cvts_pu</name><argument_list pos:start="2211:37" pos:end="2211:55">(<argument pos:start="2211:38" pos:end="2211:40"><expr pos:start="2211:38" pos:end="2211:40"><name pos:start="2211:38" pos:end="2211:40">fp0</name></expr></argument>, <argument pos:start="2211:43" pos:end="2211:49"><expr pos:start="2211:43" pos:end="2211:49"><name pos:start="2211:43" pos:end="2211:49">cpu_env</name></expr></argument>, <argument pos:start="2211:52" pos:end="2211:54"><expr pos:start="2211:52" pos:end="2211:54"><name pos:start="2211:52" pos:end="2211:54">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2213:13" pos:end="2213:37"><expr pos:start="2213:13" pos:end="2213:36"><call pos:start="2213:13" pos:end="2213:36"><name pos:start="2213:13" pos:end="2213:27">gen_store_fpr32</name><argument_list pos:start="2213:28" pos:end="2213:36">(<argument pos:start="2213:29" pos:end="2213:31"><expr pos:start="2213:29" pos:end="2213:31"><name pos:start="2213:29" pos:end="2213:31">fp0</name></expr></argument>, <argument pos:start="2213:34" pos:end="2213:35"><expr pos:start="2213:34" pos:end="2213:35"><name pos:start="2213:34" pos:end="2213:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2215:13" pos:end="2215:35"><expr pos:start="2215:13" pos:end="2215:34"><call pos:start="2215:13" pos:end="2215:34"><name pos:start="2215:13" pos:end="2215:29">tcg_temp_free_i32</name><argument_list pos:start="2215:30" pos:end="2215:34">(<argument pos:start="2215:31" pos:end="2215:33"><expr pos:start="2215:31" pos:end="2215:33"><name pos:start="2215:31" pos:end="2215:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="2219:9" pos:end="2219:25"><expr pos:start="2219:9" pos:end="2219:24"><name pos:start="2219:9" pos:end="2219:11">opn</name> <operator pos:start="2219:13" pos:end="2219:13">=</operator> <literal type="string" pos:start="2219:15" pos:end="2219:24">"cvt.s.pu"</literal></expr>;</expr_stmt>

        <break pos:start="2221:9" pos:end="2221:14">break;</break>

    <case pos:start="2223:5" pos:end="2223:23">case <expr pos:start="2223:10" pos:end="2223:22"><name pos:start="2223:10" pos:end="2223:22">OPC_CVT_PW_PS</name></expr>:</case>

        <expr_stmt pos:start="2225:9" pos:end="2225:33"><expr pos:start="2225:9" pos:end="2225:32"><call pos:start="2225:9" pos:end="2225:32"><name pos:start="2225:9" pos:end="2225:27">check_cp1_64bitmode</name><argument_list pos:start="2225:28" pos:end="2225:32">(<argument pos:start="2225:29" pos:end="2225:31"><expr pos:start="2225:29" pos:end="2225:31"><name pos:start="2225:29" pos:end="2225:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="2227:9" pos:end="2241:9">{<block_content pos:start="2229:13" pos:end="2239:35">

            <decl_stmt pos:start="2229:13" pos:end="2229:46"><decl pos:start="2229:13" pos:end="2229:45"><type pos:start="2229:13" pos:end="2229:20"><name pos:start="2229:13" pos:end="2229:20">TCGv_i64</name></type> <name pos:start="2229:22" pos:end="2229:24">fp0</name> <init pos:start="2229:26" pos:end="2229:45">= <expr pos:start="2229:28" pos:end="2229:45"><call pos:start="2229:28" pos:end="2229:45"><name pos:start="2229:28" pos:end="2229:43">tcg_temp_new_i64</name><argument_list pos:start="2229:44" pos:end="2229:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="2233:13" pos:end="2233:41"><expr pos:start="2233:13" pos:end="2233:40"><call pos:start="2233:13" pos:end="2233:40"><name pos:start="2233:13" pos:end="2233:26">gen_load_fpr64</name><argument_list pos:start="2233:27" pos:end="2233:40">(<argument pos:start="2233:28" pos:end="2233:30"><expr pos:start="2233:28" pos:end="2233:30"><name pos:start="2233:28" pos:end="2233:30">ctx</name></expr></argument>, <argument pos:start="2233:33" pos:end="2233:35"><expr pos:start="2233:33" pos:end="2233:35"><name pos:start="2233:33" pos:end="2233:35">fp0</name></expr></argument>, <argument pos:start="2233:38" pos:end="2233:39"><expr pos:start="2233:38" pos:end="2233:39"><name pos:start="2233:38" pos:end="2233:39">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2235:13" pos:end="2235:57"><expr pos:start="2235:13" pos:end="2235:56"><call pos:start="2235:13" pos:end="2235:56"><name pos:start="2235:13" pos:end="2235:37">gen_helper_float_cvtpw_ps</name><argument_list pos:start="2235:38" pos:end="2235:56">(<argument pos:start="2235:39" pos:end="2235:41"><expr pos:start="2235:39" pos:end="2235:41"><name pos:start="2235:39" pos:end="2235:41">fp0</name></expr></argument>, <argument pos:start="2235:44" pos:end="2235:50"><expr pos:start="2235:44" pos:end="2235:50"><name pos:start="2235:44" pos:end="2235:50">cpu_env</name></expr></argument>, <argument pos:start="2235:53" pos:end="2235:55"><expr pos:start="2235:53" pos:end="2235:55"><name pos:start="2235:53" pos:end="2235:55">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2237:13" pos:end="2237:42"><expr pos:start="2237:13" pos:end="2237:41"><call pos:start="2237:13" pos:end="2237:41"><name pos:start="2237:13" pos:end="2237:27">gen_store_fpr64</name><argument_list pos:start="2237:28" pos:end="2237:41">(<argument pos:start="2237:29" pos:end="2237:31"><expr pos:start="2237:29" pos:end="2237:31"><name pos:start="2237:29" pos:end="2237:31">ctx</name></expr></argument>, <argument pos:start="2237:34" pos:end="2237:36"><expr pos:start="2237:34" pos:end="2237:36"><name pos:start="2237:34" pos:end="2237:36">fp0</name></expr></argument>, <argument pos:start="2237:39" pos:end="2237:40"><expr pos:start="2237:39" pos:end="2237:40"><name pos:start="2237:39" pos:end="2237:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2239:13" pos:end="2239:35"><expr pos:start="2239:13" pos:end="2239:34"><call pos:start="2239:13" pos:end="2239:34"><name pos:start="2239:13" pos:end="2239:29">tcg_temp_free_i64</name><argument_list pos:start="2239:30" pos:end="2239:34">(<argument pos:start="2239:31" pos:end="2239:33"><expr pos:start="2239:31" pos:end="2239:33"><name pos:start="2239:31" pos:end="2239:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="2243:9" pos:end="2243:26"><expr pos:start="2243:9" pos:end="2243:25"><name pos:start="2243:9" pos:end="2243:11">opn</name> <operator pos:start="2243:13" pos:end="2243:13">=</operator> <literal type="string" pos:start="2243:15" pos:end="2243:25">"cvt.pw.ps"</literal></expr>;</expr_stmt>

        <break pos:start="2245:9" pos:end="2245:14">break;</break>

    <case pos:start="2247:5" pos:end="2247:22">case <expr pos:start="2247:10" pos:end="2247:21"><name pos:start="2247:10" pos:end="2247:21">OPC_CVT_S_PL</name></expr>:</case>

        <expr_stmt pos:start="2249:9" pos:end="2249:33"><expr pos:start="2249:9" pos:end="2249:32"><call pos:start="2249:9" pos:end="2249:32"><name pos:start="2249:9" pos:end="2249:27">check_cp1_64bitmode</name><argument_list pos:start="2249:28" pos:end="2249:32">(<argument pos:start="2249:29" pos:end="2249:31"><expr pos:start="2249:29" pos:end="2249:31"><name pos:start="2249:29" pos:end="2249:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="2251:9" pos:end="2265:9">{<block_content pos:start="2253:13" pos:end="2263:35">

            <decl_stmt pos:start="2253:13" pos:end="2253:46"><decl pos:start="2253:13" pos:end="2253:45"><type pos:start="2253:13" pos:end="2253:20"><name pos:start="2253:13" pos:end="2253:20">TCGv_i32</name></type> <name pos:start="2253:22" pos:end="2253:24">fp0</name> <init pos:start="2253:26" pos:end="2253:45">= <expr pos:start="2253:28" pos:end="2253:45"><call pos:start="2253:28" pos:end="2253:45"><name pos:start="2253:28" pos:end="2253:43">tcg_temp_new_i32</name><argument_list pos:start="2253:44" pos:end="2253:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="2257:13" pos:end="2257:36"><expr pos:start="2257:13" pos:end="2257:35"><call pos:start="2257:13" pos:end="2257:35"><name pos:start="2257:13" pos:end="2257:26">gen_load_fpr32</name><argument_list pos:start="2257:27" pos:end="2257:35">(<argument pos:start="2257:28" pos:end="2257:30"><expr pos:start="2257:28" pos:end="2257:30"><name pos:start="2257:28" pos:end="2257:30">fp0</name></expr></argument>, <argument pos:start="2257:33" pos:end="2257:34"><expr pos:start="2257:33" pos:end="2257:34"><name pos:start="2257:33" pos:end="2257:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2259:13" pos:end="2259:56"><expr pos:start="2259:13" pos:end="2259:55"><call pos:start="2259:13" pos:end="2259:55"><name pos:start="2259:13" pos:end="2259:36">gen_helper_float_cvts_pl</name><argument_list pos:start="2259:37" pos:end="2259:55">(<argument pos:start="2259:38" pos:end="2259:40"><expr pos:start="2259:38" pos:end="2259:40"><name pos:start="2259:38" pos:end="2259:40">fp0</name></expr></argument>, <argument pos:start="2259:43" pos:end="2259:49"><expr pos:start="2259:43" pos:end="2259:49"><name pos:start="2259:43" pos:end="2259:49">cpu_env</name></expr></argument>, <argument pos:start="2259:52" pos:end="2259:54"><expr pos:start="2259:52" pos:end="2259:54"><name pos:start="2259:52" pos:end="2259:54">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2261:13" pos:end="2261:37"><expr pos:start="2261:13" pos:end="2261:36"><call pos:start="2261:13" pos:end="2261:36"><name pos:start="2261:13" pos:end="2261:27">gen_store_fpr32</name><argument_list pos:start="2261:28" pos:end="2261:36">(<argument pos:start="2261:29" pos:end="2261:31"><expr pos:start="2261:29" pos:end="2261:31"><name pos:start="2261:29" pos:end="2261:31">fp0</name></expr></argument>, <argument pos:start="2261:34" pos:end="2261:35"><expr pos:start="2261:34" pos:end="2261:35"><name pos:start="2261:34" pos:end="2261:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2263:13" pos:end="2263:35"><expr pos:start="2263:13" pos:end="2263:34"><call pos:start="2263:13" pos:end="2263:34"><name pos:start="2263:13" pos:end="2263:29">tcg_temp_free_i32</name><argument_list pos:start="2263:30" pos:end="2263:34">(<argument pos:start="2263:31" pos:end="2263:33"><expr pos:start="2263:31" pos:end="2263:33"><name pos:start="2263:31" pos:end="2263:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="2267:9" pos:end="2267:25"><expr pos:start="2267:9" pos:end="2267:24"><name pos:start="2267:9" pos:end="2267:11">opn</name> <operator pos:start="2267:13" pos:end="2267:13">=</operator> <literal type="string" pos:start="2267:15" pos:end="2267:24">"cvt.s.pl"</literal></expr>;</expr_stmt>

        <break pos:start="2269:9" pos:end="2269:14">break;</break>

    <case pos:start="2271:5" pos:end="2271:20">case <expr pos:start="2271:10" pos:end="2271:19"><name pos:start="2271:10" pos:end="2271:19">OPC_PLL_PS</name></expr>:</case>

        <expr_stmt pos:start="2273:9" pos:end="2273:33"><expr pos:start="2273:9" pos:end="2273:32"><call pos:start="2273:9" pos:end="2273:32"><name pos:start="2273:9" pos:end="2273:27">check_cp1_64bitmode</name><argument_list pos:start="2273:28" pos:end="2273:32">(<argument pos:start="2273:29" pos:end="2273:31"><expr pos:start="2273:29" pos:end="2273:31"><name pos:start="2273:29" pos:end="2273:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="2275:9" pos:end="2295:9">{<block_content pos:start="2277:13" pos:end="2293:35">

            <decl_stmt pos:start="2277:13" pos:end="2277:46"><decl pos:start="2277:13" pos:end="2277:45"><type pos:start="2277:13" pos:end="2277:20"><name pos:start="2277:13" pos:end="2277:20">TCGv_i32</name></type> <name pos:start="2277:22" pos:end="2277:24">fp0</name> <init pos:start="2277:26" pos:end="2277:45">= <expr pos:start="2277:28" pos:end="2277:45"><call pos:start="2277:28" pos:end="2277:45"><name pos:start="2277:28" pos:end="2277:43">tcg_temp_new_i32</name><argument_list pos:start="2277:44" pos:end="2277:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="2279:13" pos:end="2279:46"><decl pos:start="2279:13" pos:end="2279:45"><type pos:start="2279:13" pos:end="2279:20"><name pos:start="2279:13" pos:end="2279:20">TCGv_i32</name></type> <name pos:start="2279:22" pos:end="2279:24">fp1</name> <init pos:start="2279:26" pos:end="2279:45">= <expr pos:start="2279:28" pos:end="2279:45"><call pos:start="2279:28" pos:end="2279:45"><name pos:start="2279:28" pos:end="2279:43">tcg_temp_new_i32</name><argument_list pos:start="2279:44" pos:end="2279:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="2283:13" pos:end="2283:36"><expr pos:start="2283:13" pos:end="2283:35"><call pos:start="2283:13" pos:end="2283:35"><name pos:start="2283:13" pos:end="2283:26">gen_load_fpr32</name><argument_list pos:start="2283:27" pos:end="2283:35">(<argument pos:start="2283:28" pos:end="2283:30"><expr pos:start="2283:28" pos:end="2283:30"><name pos:start="2283:28" pos:end="2283:30">fp0</name></expr></argument>, <argument pos:start="2283:33" pos:end="2283:34"><expr pos:start="2283:33" pos:end="2283:34"><name pos:start="2283:33" pos:end="2283:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2285:13" pos:end="2285:36"><expr pos:start="2285:13" pos:end="2285:35"><call pos:start="2285:13" pos:end="2285:35"><name pos:start="2285:13" pos:end="2285:26">gen_load_fpr32</name><argument_list pos:start="2285:27" pos:end="2285:35">(<argument pos:start="2285:28" pos:end="2285:30"><expr pos:start="2285:28" pos:end="2285:30"><name pos:start="2285:28" pos:end="2285:30">fp1</name></expr></argument>, <argument pos:start="2285:33" pos:end="2285:34"><expr pos:start="2285:33" pos:end="2285:34"><name pos:start="2285:33" pos:end="2285:34">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2287:13" pos:end="2287:38"><expr pos:start="2287:13" pos:end="2287:37"><call pos:start="2287:13" pos:end="2287:37"><name pos:start="2287:13" pos:end="2287:28">gen_store_fpr32h</name><argument_list pos:start="2287:29" pos:end="2287:37">(<argument pos:start="2287:30" pos:end="2287:32"><expr pos:start="2287:30" pos:end="2287:32"><name pos:start="2287:30" pos:end="2287:32">fp0</name></expr></argument>, <argument pos:start="2287:35" pos:end="2287:36"><expr pos:start="2287:35" pos:end="2287:36"><name pos:start="2287:35" pos:end="2287:36">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2289:13" pos:end="2289:37"><expr pos:start="2289:13" pos:end="2289:36"><call pos:start="2289:13" pos:end="2289:36"><name pos:start="2289:13" pos:end="2289:27">gen_store_fpr32</name><argument_list pos:start="2289:28" pos:end="2289:36">(<argument pos:start="2289:29" pos:end="2289:31"><expr pos:start="2289:29" pos:end="2289:31"><name pos:start="2289:29" pos:end="2289:31">fp1</name></expr></argument>, <argument pos:start="2289:34" pos:end="2289:35"><expr pos:start="2289:34" pos:end="2289:35"><name pos:start="2289:34" pos:end="2289:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2291:13" pos:end="2291:35"><expr pos:start="2291:13" pos:end="2291:34"><call pos:start="2291:13" pos:end="2291:34"><name pos:start="2291:13" pos:end="2291:29">tcg_temp_free_i32</name><argument_list pos:start="2291:30" pos:end="2291:34">(<argument pos:start="2291:31" pos:end="2291:33"><expr pos:start="2291:31" pos:end="2291:33"><name pos:start="2291:31" pos:end="2291:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2293:13" pos:end="2293:35"><expr pos:start="2293:13" pos:end="2293:34"><call pos:start="2293:13" pos:end="2293:34"><name pos:start="2293:13" pos:end="2293:29">tcg_temp_free_i32</name><argument_list pos:start="2293:30" pos:end="2293:34">(<argument pos:start="2293:31" pos:end="2293:33"><expr pos:start="2293:31" pos:end="2293:33"><name pos:start="2293:31" pos:end="2293:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="2297:9" pos:end="2297:23"><expr pos:start="2297:9" pos:end="2297:22"><name pos:start="2297:9" pos:end="2297:11">opn</name> <operator pos:start="2297:13" pos:end="2297:13">=</operator> <literal type="string" pos:start="2297:15" pos:end="2297:22">"pll.ps"</literal></expr>;</expr_stmt>

        <break pos:start="2299:9" pos:end="2299:14">break;</break>

    <case pos:start="2301:5" pos:end="2301:20">case <expr pos:start="2301:10" pos:end="2301:19"><name pos:start="2301:10" pos:end="2301:19">OPC_PLU_PS</name></expr>:</case>

        <expr_stmt pos:start="2303:9" pos:end="2303:33"><expr pos:start="2303:9" pos:end="2303:32"><call pos:start="2303:9" pos:end="2303:32"><name pos:start="2303:9" pos:end="2303:27">check_cp1_64bitmode</name><argument_list pos:start="2303:28" pos:end="2303:32">(<argument pos:start="2303:29" pos:end="2303:31"><expr pos:start="2303:29" pos:end="2303:31"><name pos:start="2303:29" pos:end="2303:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="2305:9" pos:end="2325:9">{<block_content pos:start="2307:13" pos:end="2323:35">

            <decl_stmt pos:start="2307:13" pos:end="2307:46"><decl pos:start="2307:13" pos:end="2307:45"><type pos:start="2307:13" pos:end="2307:20"><name pos:start="2307:13" pos:end="2307:20">TCGv_i32</name></type> <name pos:start="2307:22" pos:end="2307:24">fp0</name> <init pos:start="2307:26" pos:end="2307:45">= <expr pos:start="2307:28" pos:end="2307:45"><call pos:start="2307:28" pos:end="2307:45"><name pos:start="2307:28" pos:end="2307:43">tcg_temp_new_i32</name><argument_list pos:start="2307:44" pos:end="2307:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="2309:13" pos:end="2309:46"><decl pos:start="2309:13" pos:end="2309:45"><type pos:start="2309:13" pos:end="2309:20"><name pos:start="2309:13" pos:end="2309:20">TCGv_i32</name></type> <name pos:start="2309:22" pos:end="2309:24">fp1</name> <init pos:start="2309:26" pos:end="2309:45">= <expr pos:start="2309:28" pos:end="2309:45"><call pos:start="2309:28" pos:end="2309:45"><name pos:start="2309:28" pos:end="2309:43">tcg_temp_new_i32</name><argument_list pos:start="2309:44" pos:end="2309:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="2313:13" pos:end="2313:36"><expr pos:start="2313:13" pos:end="2313:35"><call pos:start="2313:13" pos:end="2313:35"><name pos:start="2313:13" pos:end="2313:26">gen_load_fpr32</name><argument_list pos:start="2313:27" pos:end="2313:35">(<argument pos:start="2313:28" pos:end="2313:30"><expr pos:start="2313:28" pos:end="2313:30"><name pos:start="2313:28" pos:end="2313:30">fp0</name></expr></argument>, <argument pos:start="2313:33" pos:end="2313:34"><expr pos:start="2313:33" pos:end="2313:34"><name pos:start="2313:33" pos:end="2313:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2315:13" pos:end="2315:37"><expr pos:start="2315:13" pos:end="2315:36"><call pos:start="2315:13" pos:end="2315:36"><name pos:start="2315:13" pos:end="2315:27">gen_load_fpr32h</name><argument_list pos:start="2315:28" pos:end="2315:36">(<argument pos:start="2315:29" pos:end="2315:31"><expr pos:start="2315:29" pos:end="2315:31"><name pos:start="2315:29" pos:end="2315:31">fp1</name></expr></argument>, <argument pos:start="2315:34" pos:end="2315:35"><expr pos:start="2315:34" pos:end="2315:35"><name pos:start="2315:34" pos:end="2315:35">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2317:13" pos:end="2317:37"><expr pos:start="2317:13" pos:end="2317:36"><call pos:start="2317:13" pos:end="2317:36"><name pos:start="2317:13" pos:end="2317:27">gen_store_fpr32</name><argument_list pos:start="2317:28" pos:end="2317:36">(<argument pos:start="2317:29" pos:end="2317:31"><expr pos:start="2317:29" pos:end="2317:31"><name pos:start="2317:29" pos:end="2317:31">fp1</name></expr></argument>, <argument pos:start="2317:34" pos:end="2317:35"><expr pos:start="2317:34" pos:end="2317:35"><name pos:start="2317:34" pos:end="2317:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2319:13" pos:end="2319:38"><expr pos:start="2319:13" pos:end="2319:37"><call pos:start="2319:13" pos:end="2319:37"><name pos:start="2319:13" pos:end="2319:28">gen_store_fpr32h</name><argument_list pos:start="2319:29" pos:end="2319:37">(<argument pos:start="2319:30" pos:end="2319:32"><expr pos:start="2319:30" pos:end="2319:32"><name pos:start="2319:30" pos:end="2319:32">fp0</name></expr></argument>, <argument pos:start="2319:35" pos:end="2319:36"><expr pos:start="2319:35" pos:end="2319:36"><name pos:start="2319:35" pos:end="2319:36">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2321:13" pos:end="2321:35"><expr pos:start="2321:13" pos:end="2321:34"><call pos:start="2321:13" pos:end="2321:34"><name pos:start="2321:13" pos:end="2321:29">tcg_temp_free_i32</name><argument_list pos:start="2321:30" pos:end="2321:34">(<argument pos:start="2321:31" pos:end="2321:33"><expr pos:start="2321:31" pos:end="2321:33"><name pos:start="2321:31" pos:end="2321:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2323:13" pos:end="2323:35"><expr pos:start="2323:13" pos:end="2323:34"><call pos:start="2323:13" pos:end="2323:34"><name pos:start="2323:13" pos:end="2323:29">tcg_temp_free_i32</name><argument_list pos:start="2323:30" pos:end="2323:34">(<argument pos:start="2323:31" pos:end="2323:33"><expr pos:start="2323:31" pos:end="2323:33"><name pos:start="2323:31" pos:end="2323:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="2327:9" pos:end="2327:23"><expr pos:start="2327:9" pos:end="2327:22"><name pos:start="2327:9" pos:end="2327:11">opn</name> <operator pos:start="2327:13" pos:end="2327:13">=</operator> <literal type="string" pos:start="2327:15" pos:end="2327:22">"plu.ps"</literal></expr>;</expr_stmt>

        <break pos:start="2329:9" pos:end="2329:14">break;</break>

    <case pos:start="2331:5" pos:end="2331:20">case <expr pos:start="2331:10" pos:end="2331:19"><name pos:start="2331:10" pos:end="2331:19">OPC_PUL_PS</name></expr>:</case>

        <expr_stmt pos:start="2333:9" pos:end="2333:33"><expr pos:start="2333:9" pos:end="2333:32"><call pos:start="2333:9" pos:end="2333:32"><name pos:start="2333:9" pos:end="2333:27">check_cp1_64bitmode</name><argument_list pos:start="2333:28" pos:end="2333:32">(<argument pos:start="2333:29" pos:end="2333:31"><expr pos:start="2333:29" pos:end="2333:31"><name pos:start="2333:29" pos:end="2333:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="2335:9" pos:end="2355:9">{<block_content pos:start="2337:13" pos:end="2353:35">

            <decl_stmt pos:start="2337:13" pos:end="2337:46"><decl pos:start="2337:13" pos:end="2337:45"><type pos:start="2337:13" pos:end="2337:20"><name pos:start="2337:13" pos:end="2337:20">TCGv_i32</name></type> <name pos:start="2337:22" pos:end="2337:24">fp0</name> <init pos:start="2337:26" pos:end="2337:45">= <expr pos:start="2337:28" pos:end="2337:45"><call pos:start="2337:28" pos:end="2337:45"><name pos:start="2337:28" pos:end="2337:43">tcg_temp_new_i32</name><argument_list pos:start="2337:44" pos:end="2337:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="2339:13" pos:end="2339:46"><decl pos:start="2339:13" pos:end="2339:45"><type pos:start="2339:13" pos:end="2339:20"><name pos:start="2339:13" pos:end="2339:20">TCGv_i32</name></type> <name pos:start="2339:22" pos:end="2339:24">fp1</name> <init pos:start="2339:26" pos:end="2339:45">= <expr pos:start="2339:28" pos:end="2339:45"><call pos:start="2339:28" pos:end="2339:45"><name pos:start="2339:28" pos:end="2339:43">tcg_temp_new_i32</name><argument_list pos:start="2339:44" pos:end="2339:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="2343:13" pos:end="2343:37"><expr pos:start="2343:13" pos:end="2343:36"><call pos:start="2343:13" pos:end="2343:36"><name pos:start="2343:13" pos:end="2343:27">gen_load_fpr32h</name><argument_list pos:start="2343:28" pos:end="2343:36">(<argument pos:start="2343:29" pos:end="2343:31"><expr pos:start="2343:29" pos:end="2343:31"><name pos:start="2343:29" pos:end="2343:31">fp0</name></expr></argument>, <argument pos:start="2343:34" pos:end="2343:35"><expr pos:start="2343:34" pos:end="2343:35"><name pos:start="2343:34" pos:end="2343:35">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2345:13" pos:end="2345:36"><expr pos:start="2345:13" pos:end="2345:35"><call pos:start="2345:13" pos:end="2345:35"><name pos:start="2345:13" pos:end="2345:26">gen_load_fpr32</name><argument_list pos:start="2345:27" pos:end="2345:35">(<argument pos:start="2345:28" pos:end="2345:30"><expr pos:start="2345:28" pos:end="2345:30"><name pos:start="2345:28" pos:end="2345:30">fp1</name></expr></argument>, <argument pos:start="2345:33" pos:end="2345:34"><expr pos:start="2345:33" pos:end="2345:34"><name pos:start="2345:33" pos:end="2345:34">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2347:13" pos:end="2347:37"><expr pos:start="2347:13" pos:end="2347:36"><call pos:start="2347:13" pos:end="2347:36"><name pos:start="2347:13" pos:end="2347:27">gen_store_fpr32</name><argument_list pos:start="2347:28" pos:end="2347:36">(<argument pos:start="2347:29" pos:end="2347:31"><expr pos:start="2347:29" pos:end="2347:31"><name pos:start="2347:29" pos:end="2347:31">fp1</name></expr></argument>, <argument pos:start="2347:34" pos:end="2347:35"><expr pos:start="2347:34" pos:end="2347:35"><name pos:start="2347:34" pos:end="2347:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2349:13" pos:end="2349:38"><expr pos:start="2349:13" pos:end="2349:37"><call pos:start="2349:13" pos:end="2349:37"><name pos:start="2349:13" pos:end="2349:28">gen_store_fpr32h</name><argument_list pos:start="2349:29" pos:end="2349:37">(<argument pos:start="2349:30" pos:end="2349:32"><expr pos:start="2349:30" pos:end="2349:32"><name pos:start="2349:30" pos:end="2349:32">fp0</name></expr></argument>, <argument pos:start="2349:35" pos:end="2349:36"><expr pos:start="2349:35" pos:end="2349:36"><name pos:start="2349:35" pos:end="2349:36">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2351:13" pos:end="2351:35"><expr pos:start="2351:13" pos:end="2351:34"><call pos:start="2351:13" pos:end="2351:34"><name pos:start="2351:13" pos:end="2351:29">tcg_temp_free_i32</name><argument_list pos:start="2351:30" pos:end="2351:34">(<argument pos:start="2351:31" pos:end="2351:33"><expr pos:start="2351:31" pos:end="2351:33"><name pos:start="2351:31" pos:end="2351:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2353:13" pos:end="2353:35"><expr pos:start="2353:13" pos:end="2353:34"><call pos:start="2353:13" pos:end="2353:34"><name pos:start="2353:13" pos:end="2353:29">tcg_temp_free_i32</name><argument_list pos:start="2353:30" pos:end="2353:34">(<argument pos:start="2353:31" pos:end="2353:33"><expr pos:start="2353:31" pos:end="2353:33"><name pos:start="2353:31" pos:end="2353:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="2357:9" pos:end="2357:23"><expr pos:start="2357:9" pos:end="2357:22"><name pos:start="2357:9" pos:end="2357:11">opn</name> <operator pos:start="2357:13" pos:end="2357:13">=</operator> <literal type="string" pos:start="2357:15" pos:end="2357:22">"pul.ps"</literal></expr>;</expr_stmt>

        <break pos:start="2359:9" pos:end="2359:14">break;</break>

    <case pos:start="2361:5" pos:end="2361:20">case <expr pos:start="2361:10" pos:end="2361:19"><name pos:start="2361:10" pos:end="2361:19">OPC_PUU_PS</name></expr>:</case>

        <expr_stmt pos:start="2363:9" pos:end="2363:33"><expr pos:start="2363:9" pos:end="2363:32"><call pos:start="2363:9" pos:end="2363:32"><name pos:start="2363:9" pos:end="2363:27">check_cp1_64bitmode</name><argument_list pos:start="2363:28" pos:end="2363:32">(<argument pos:start="2363:29" pos:end="2363:31"><expr pos:start="2363:29" pos:end="2363:31"><name pos:start="2363:29" pos:end="2363:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="2365:9" pos:end="2385:9">{<block_content pos:start="2367:13" pos:end="2383:35">

            <decl_stmt pos:start="2367:13" pos:end="2367:46"><decl pos:start="2367:13" pos:end="2367:45"><type pos:start="2367:13" pos:end="2367:20"><name pos:start="2367:13" pos:end="2367:20">TCGv_i32</name></type> <name pos:start="2367:22" pos:end="2367:24">fp0</name> <init pos:start="2367:26" pos:end="2367:45">= <expr pos:start="2367:28" pos:end="2367:45"><call pos:start="2367:28" pos:end="2367:45"><name pos:start="2367:28" pos:end="2367:43">tcg_temp_new_i32</name><argument_list pos:start="2367:44" pos:end="2367:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="2369:13" pos:end="2369:46"><decl pos:start="2369:13" pos:end="2369:45"><type pos:start="2369:13" pos:end="2369:20"><name pos:start="2369:13" pos:end="2369:20">TCGv_i32</name></type> <name pos:start="2369:22" pos:end="2369:24">fp1</name> <init pos:start="2369:26" pos:end="2369:45">= <expr pos:start="2369:28" pos:end="2369:45"><call pos:start="2369:28" pos:end="2369:45"><name pos:start="2369:28" pos:end="2369:43">tcg_temp_new_i32</name><argument_list pos:start="2369:44" pos:end="2369:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="2373:13" pos:end="2373:37"><expr pos:start="2373:13" pos:end="2373:36"><call pos:start="2373:13" pos:end="2373:36"><name pos:start="2373:13" pos:end="2373:27">gen_load_fpr32h</name><argument_list pos:start="2373:28" pos:end="2373:36">(<argument pos:start="2373:29" pos:end="2373:31"><expr pos:start="2373:29" pos:end="2373:31"><name pos:start="2373:29" pos:end="2373:31">fp0</name></expr></argument>, <argument pos:start="2373:34" pos:end="2373:35"><expr pos:start="2373:34" pos:end="2373:35"><name pos:start="2373:34" pos:end="2373:35">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2375:13" pos:end="2375:37"><expr pos:start="2375:13" pos:end="2375:36"><call pos:start="2375:13" pos:end="2375:36"><name pos:start="2375:13" pos:end="2375:27">gen_load_fpr32h</name><argument_list pos:start="2375:28" pos:end="2375:36">(<argument pos:start="2375:29" pos:end="2375:31"><expr pos:start="2375:29" pos:end="2375:31"><name pos:start="2375:29" pos:end="2375:31">fp1</name></expr></argument>, <argument pos:start="2375:34" pos:end="2375:35"><expr pos:start="2375:34" pos:end="2375:35"><name pos:start="2375:34" pos:end="2375:35">ft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2377:13" pos:end="2377:37"><expr pos:start="2377:13" pos:end="2377:36"><call pos:start="2377:13" pos:end="2377:36"><name pos:start="2377:13" pos:end="2377:27">gen_store_fpr32</name><argument_list pos:start="2377:28" pos:end="2377:36">(<argument pos:start="2377:29" pos:end="2377:31"><expr pos:start="2377:29" pos:end="2377:31"><name pos:start="2377:29" pos:end="2377:31">fp1</name></expr></argument>, <argument pos:start="2377:34" pos:end="2377:35"><expr pos:start="2377:34" pos:end="2377:35"><name pos:start="2377:34" pos:end="2377:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2379:13" pos:end="2379:38"><expr pos:start="2379:13" pos:end="2379:37"><call pos:start="2379:13" pos:end="2379:37"><name pos:start="2379:13" pos:end="2379:28">gen_store_fpr32h</name><argument_list pos:start="2379:29" pos:end="2379:37">(<argument pos:start="2379:30" pos:end="2379:32"><expr pos:start="2379:30" pos:end="2379:32"><name pos:start="2379:30" pos:end="2379:32">fp0</name></expr></argument>, <argument pos:start="2379:35" pos:end="2379:36"><expr pos:start="2379:35" pos:end="2379:36"><name pos:start="2379:35" pos:end="2379:36">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2381:13" pos:end="2381:35"><expr pos:start="2381:13" pos:end="2381:34"><call pos:start="2381:13" pos:end="2381:34"><name pos:start="2381:13" pos:end="2381:29">tcg_temp_free_i32</name><argument_list pos:start="2381:30" pos:end="2381:34">(<argument pos:start="2381:31" pos:end="2381:33"><expr pos:start="2381:31" pos:end="2381:33"><name pos:start="2381:31" pos:end="2381:33">fp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2383:13" pos:end="2383:35"><expr pos:start="2383:13" pos:end="2383:34"><call pos:start="2383:13" pos:end="2383:34"><name pos:start="2383:13" pos:end="2383:29">tcg_temp_free_i32</name><argument_list pos:start="2383:30" pos:end="2383:34">(<argument pos:start="2383:31" pos:end="2383:33"><expr pos:start="2383:31" pos:end="2383:33"><name pos:start="2383:31" pos:end="2383:33">fp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="2387:9" pos:end="2387:23"><expr pos:start="2387:9" pos:end="2387:22"><name pos:start="2387:9" pos:end="2387:11">opn</name> <operator pos:start="2387:13" pos:end="2387:13">=</operator> <literal type="string" pos:start="2387:15" pos:end="2387:22">"puu.ps"</literal></expr>;</expr_stmt>

        <break pos:start="2389:9" pos:end="2389:14">break;</break>

    <case pos:start="2391:5" pos:end="2391:22">case <expr pos:start="2391:10" pos:end="2391:21"><name pos:start="2391:10" pos:end="2391:21">OPC_CMP_F_PS</name></expr>:</case>

    <case pos:start="2393:5" pos:end="2393:23">case <expr pos:start="2393:10" pos:end="2393:22"><name pos:start="2393:10" pos:end="2393:22">OPC_CMP_UN_PS</name></expr>:</case>

    <case pos:start="2395:5" pos:end="2395:23">case <expr pos:start="2395:10" pos:end="2395:22"><name pos:start="2395:10" pos:end="2395:22">OPC_CMP_EQ_PS</name></expr>:</case>

    <case pos:start="2397:5" pos:end="2397:24">case <expr pos:start="2397:10" pos:end="2397:23"><name pos:start="2397:10" pos:end="2397:23">OPC_CMP_UEQ_PS</name></expr>:</case>

    <case pos:start="2399:5" pos:end="2399:24">case <expr pos:start="2399:10" pos:end="2399:23"><name pos:start="2399:10" pos:end="2399:23">OPC_CMP_OLT_PS</name></expr>:</case>

    <case pos:start="2401:5" pos:end="2401:24">case <expr pos:start="2401:10" pos:end="2401:23"><name pos:start="2401:10" pos:end="2401:23">OPC_CMP_ULT_PS</name></expr>:</case>

    <case pos:start="2403:5" pos:end="2403:24">case <expr pos:start="2403:10" pos:end="2403:23"><name pos:start="2403:10" pos:end="2403:23">OPC_CMP_OLE_PS</name></expr>:</case>

    <case pos:start="2405:5" pos:end="2405:24">case <expr pos:start="2405:10" pos:end="2405:23"><name pos:start="2405:10" pos:end="2405:23">OPC_CMP_ULE_PS</name></expr>:</case>

    <case pos:start="2407:5" pos:end="2407:23">case <expr pos:start="2407:10" pos:end="2407:22"><name pos:start="2407:10" pos:end="2407:22">OPC_CMP_SF_PS</name></expr>:</case>

    <case pos:start="2409:5" pos:end="2409:25">case <expr pos:start="2409:10" pos:end="2409:24"><name pos:start="2409:10" pos:end="2409:24">OPC_CMP_NGLE_PS</name></expr>:</case>

    <case pos:start="2411:5" pos:end="2411:24">case <expr pos:start="2411:10" pos:end="2411:23"><name pos:start="2411:10" pos:end="2411:23">OPC_CMP_SEQ_PS</name></expr>:</case>

    <case pos:start="2413:5" pos:end="2413:24">case <expr pos:start="2413:10" pos:end="2413:23"><name pos:start="2413:10" pos:end="2413:23">OPC_CMP_NGL_PS</name></expr>:</case>

    <case pos:start="2415:5" pos:end="2415:23">case <expr pos:start="2415:10" pos:end="2415:22"><name pos:start="2415:10" pos:end="2415:22">OPC_CMP_LT_PS</name></expr>:</case>

    <case pos:start="2417:5" pos:end="2417:24">case <expr pos:start="2417:10" pos:end="2417:23"><name pos:start="2417:10" pos:end="2417:23">OPC_CMP_NGE_PS</name></expr>:</case>

    <case pos:start="2419:5" pos:end="2419:23">case <expr pos:start="2419:10" pos:end="2419:22"><name pos:start="2419:10" pos:end="2419:22">OPC_CMP_LE_PS</name></expr>:</case>

    <case pos:start="2421:5" pos:end="2421:24">case <expr pos:start="2421:10" pos:end="2421:23"><name pos:start="2421:10" pos:end="2421:23">OPC_CMP_NGT_PS</name></expr>:</case>

        <if_stmt pos:start="2423:9" pos:end="2435:9"><if pos:start="2423:9" pos:end="2429:9">if <condition pos:start="2423:12" pos:end="2423:35">(<expr pos:start="2423:13" pos:end="2423:34"><name pos:start="2423:13" pos:end="2423:23"><name pos:start="2423:13" pos:end="2423:15">ctx</name><operator pos:start="2423:16" pos:end="2423:17">-&gt;</operator><name pos:start="2423:18" pos:end="2423:23">opcode</name></name> <operator pos:start="2423:25" pos:end="2423:25">&amp;</operator> <operator pos:start="2423:27" pos:end="2423:27">(</operator><literal type="number" pos:start="2423:28" pos:end="2423:28">1</literal> <operator pos:start="2423:30" pos:end="2423:31">&lt;&lt;</operator> <literal type="number" pos:start="2423:33" pos:end="2423:33">6</literal><operator pos:start="2423:34" pos:end="2423:34">)</operator></expr>)</condition> <block pos:start="2423:37" pos:end="2429:9">{<block_content pos:start="2425:13" pos:end="2427:41">

            <expr_stmt pos:start="2425:13" pos:end="2425:52"><expr pos:start="2425:13" pos:end="2425:51"><call pos:start="2425:13" pos:end="2425:51"><name pos:start="2425:13" pos:end="2425:25">gen_cmpabs_ps</name><argument_list pos:start="2425:26" pos:end="2425:51">(<argument pos:start="2425:27" pos:end="2425:29"><expr pos:start="2425:27" pos:end="2425:29"><name pos:start="2425:27" pos:end="2425:29">ctx</name></expr></argument>, <argument pos:start="2425:32" pos:end="2425:38"><expr pos:start="2425:32" pos:end="2425:38"><name pos:start="2425:32" pos:end="2425:35">func</name><operator pos:start="2425:36" pos:end="2425:36">-</operator><literal type="number" pos:start="2425:37" pos:end="2425:38">48</literal></expr></argument>, <argument pos:start="2425:41" pos:end="2425:42"><expr pos:start="2425:41" pos:end="2425:42"><name pos:start="2425:41" pos:end="2425:42">ft</name></expr></argument>, <argument pos:start="2425:45" pos:end="2425:46"><expr pos:start="2425:45" pos:end="2425:46"><name pos:start="2425:45" pos:end="2425:46">fs</name></expr></argument>, <argument pos:start="2425:49" pos:end="2425:50"><expr pos:start="2425:49" pos:end="2425:50"><name pos:start="2425:49" pos:end="2425:50">cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2427:13" pos:end="2427:41"><expr pos:start="2427:13" pos:end="2427:40"><name pos:start="2427:13" pos:end="2427:15">opn</name> <operator pos:start="2427:17" pos:end="2427:17">=</operator> <name pos:start="2427:19" pos:end="2427:40"><name pos:start="2427:19" pos:end="2427:31">condnames_abs</name><index pos:start="2427:32" pos:end="2427:40">[<expr pos:start="2427:33" pos:end="2427:39"><name pos:start="2427:33" pos:end="2427:36">func</name><operator pos:start="2427:37" pos:end="2427:37">-</operator><literal type="number" pos:start="2427:38" pos:end="2427:39">48</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="2429:11" pos:end="2435:9">else <block pos:start="2429:16" pos:end="2435:9">{<block_content pos:start="2431:13" pos:end="2433:37">

            <expr_stmt pos:start="2431:13" pos:end="2431:49"><expr pos:start="2431:13" pos:end="2431:48"><call pos:start="2431:13" pos:end="2431:48"><name pos:start="2431:13" pos:end="2431:22">gen_cmp_ps</name><argument_list pos:start="2431:23" pos:end="2431:48">(<argument pos:start="2431:24" pos:end="2431:26"><expr pos:start="2431:24" pos:end="2431:26"><name pos:start="2431:24" pos:end="2431:26">ctx</name></expr></argument>, <argument pos:start="2431:29" pos:end="2431:35"><expr pos:start="2431:29" pos:end="2431:35"><name pos:start="2431:29" pos:end="2431:32">func</name><operator pos:start="2431:33" pos:end="2431:33">-</operator><literal type="number" pos:start="2431:34" pos:end="2431:35">48</literal></expr></argument>, <argument pos:start="2431:38" pos:end="2431:39"><expr pos:start="2431:38" pos:end="2431:39"><name pos:start="2431:38" pos:end="2431:39">ft</name></expr></argument>, <argument pos:start="2431:42" pos:end="2431:43"><expr pos:start="2431:42" pos:end="2431:43"><name pos:start="2431:42" pos:end="2431:43">fs</name></expr></argument>, <argument pos:start="2431:46" pos:end="2431:47"><expr pos:start="2431:46" pos:end="2431:47"><name pos:start="2431:46" pos:end="2431:47">cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2433:13" pos:end="2433:37"><expr pos:start="2433:13" pos:end="2433:36"><name pos:start="2433:13" pos:end="2433:15">opn</name> <operator pos:start="2433:17" pos:end="2433:17">=</operator> <name pos:start="2433:19" pos:end="2433:36"><name pos:start="2433:19" pos:end="2433:27">condnames</name><index pos:start="2433:28" pos:end="2433:36">[<expr pos:start="2433:29" pos:end="2433:35"><name pos:start="2433:29" pos:end="2433:32">func</name><operator pos:start="2433:33" pos:end="2433:33">-</operator><literal type="number" pos:start="2433:34" pos:end="2433:35">48</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="2437:9" pos:end="2437:14">break;</break>

    <default pos:start="2439:5" pos:end="2439:12">default:</default>

        <expr_stmt pos:start="2441:9" pos:end="2441:24"><expr pos:start="2441:9" pos:end="2441:23"><call pos:start="2441:9" pos:end="2441:23"><name pos:start="2441:9" pos:end="2441:18">MIPS_INVAL</name><argument_list pos:start="2441:19" pos:end="2441:23">(<argument pos:start="2441:20" pos:end="2441:22"><expr pos:start="2441:20" pos:end="2441:22"><name pos:start="2441:20" pos:end="2441:22">opn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2443:9" pos:end="2443:42"><expr pos:start="2443:9" pos:end="2443:41"><call pos:start="2443:9" pos:end="2443:41"><name pos:start="2443:9" pos:end="2443:26">generate_exception</name> <argument_list pos:start="2443:28" pos:end="2443:41">(<argument pos:start="2443:29" pos:end="2443:31"><expr pos:start="2443:29" pos:end="2443:31"><name pos:start="2443:29" pos:end="2443:31">ctx</name></expr></argument>, <argument pos:start="2443:34" pos:end="2443:40"><expr pos:start="2443:34" pos:end="2443:40"><name pos:start="2443:34" pos:end="2443:40">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="2445:9" pos:end="2445:15">return;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="2449:5" pos:end="2449:14"><expr pos:start="2449:5" pos:end="2449:13"><operator pos:start="2449:5" pos:end="2449:5">(</operator><name pos:start="2449:6" pos:end="2449:9">void</name><operator pos:start="2449:10" pos:end="2449:10">)</operator><name pos:start="2449:11" pos:end="2449:13">opn</name></expr>;</expr_stmt> <comment type="block" pos:start="2449:16" pos:end="2449:45">/* avoid a compiler warning */</comment>

    <switch pos:start="2451:5" pos:end="2471:5">switch <condition pos:start="2451:12" pos:end="2451:19">(<expr pos:start="2451:13" pos:end="2451:18"><name pos:start="2451:13" pos:end="2451:18">optype</name></expr>)</condition> <block pos:start="2451:21" pos:end="2471:5">{<block_content pos:start="2453:5" pos:end="2469:14">

    <case pos:start="2453:5" pos:end="2453:15">case <expr pos:start="2453:10" pos:end="2453:14"><name pos:start="2453:10" pos:end="2453:14">BINOP</name></expr>:</case>

        <expr_stmt pos:start="2455:9" pos:end="2455:86"><expr pos:start="2455:9" pos:end="2455:85"><call pos:start="2455:9" pos:end="2455:85"><name pos:start="2455:9" pos:end="2455:18">MIPS_DEBUG</name><argument_list pos:start="2455:19" pos:end="2455:85">(<argument pos:start="2455:20" pos:end="2455:34"><expr pos:start="2455:20" pos:end="2455:34"><literal type="string" pos:start="2455:20" pos:end="2455:34">"%s %s, %s, %s"</literal></expr></argument>, <argument pos:start="2455:37" pos:end="2455:39"><expr pos:start="2455:37" pos:end="2455:39"><name pos:start="2455:37" pos:end="2455:39">opn</name></expr></argument>, <argument pos:start="2455:42" pos:end="2455:54"><expr pos:start="2455:42" pos:end="2455:54"><name pos:start="2455:42" pos:end="2455:54"><name pos:start="2455:42" pos:end="2455:50">fregnames</name><index pos:start="2455:51" pos:end="2455:54">[<expr pos:start="2455:52" pos:end="2455:53"><name pos:start="2455:52" pos:end="2455:53">fd</name></expr>]</index></name></expr></argument>, <argument pos:start="2455:57" pos:end="2455:69"><expr pos:start="2455:57" pos:end="2455:69"><name pos:start="2455:57" pos:end="2455:69"><name pos:start="2455:57" pos:end="2455:65">fregnames</name><index pos:start="2455:66" pos:end="2455:69">[<expr pos:start="2455:67" pos:end="2455:68"><name pos:start="2455:67" pos:end="2455:68">fs</name></expr>]</index></name></expr></argument>, <argument pos:start="2455:72" pos:end="2455:84"><expr pos:start="2455:72" pos:end="2455:84"><name pos:start="2455:72" pos:end="2455:84"><name pos:start="2455:72" pos:end="2455:80">fregnames</name><index pos:start="2455:81" pos:end="2455:84">[<expr pos:start="2455:82" pos:end="2455:83"><name pos:start="2455:82" pos:end="2455:83">ft</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2457:9" pos:end="2457:14">break;</break>

    <case pos:start="2459:5" pos:end="2459:15">case <expr pos:start="2459:10" pos:end="2459:14"><name pos:start="2459:10" pos:end="2459:14">CMPOP</name></expr>:</case>

        <expr_stmt pos:start="2461:9" pos:end="2461:66"><expr pos:start="2461:9" pos:end="2461:65"><call pos:start="2461:9" pos:end="2461:65"><name pos:start="2461:9" pos:end="2461:18">MIPS_DEBUG</name><argument_list pos:start="2461:19" pos:end="2461:65">(<argument pos:start="2461:20" pos:end="2461:29"><expr pos:start="2461:20" pos:end="2461:29"><literal type="string" pos:start="2461:20" pos:end="2461:29">"%s %s,%s"</literal></expr></argument>, <argument pos:start="2461:32" pos:end="2461:34"><expr pos:start="2461:32" pos:end="2461:34"><name pos:start="2461:32" pos:end="2461:34">opn</name></expr></argument>, <argument pos:start="2461:37" pos:end="2461:49"><expr pos:start="2461:37" pos:end="2461:49"><name pos:start="2461:37" pos:end="2461:49"><name pos:start="2461:37" pos:end="2461:45">fregnames</name><index pos:start="2461:46" pos:end="2461:49">[<expr pos:start="2461:47" pos:end="2461:48"><name pos:start="2461:47" pos:end="2461:48">fs</name></expr>]</index></name></expr></argument>, <argument pos:start="2461:52" pos:end="2461:64"><expr pos:start="2461:52" pos:end="2461:64"><name pos:start="2461:52" pos:end="2461:64"><name pos:start="2461:52" pos:end="2461:60">fregnames</name><index pos:start="2461:61" pos:end="2461:64">[<expr pos:start="2461:62" pos:end="2461:63"><name pos:start="2461:62" pos:end="2461:63">ft</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2463:9" pos:end="2463:14">break;</break>

    <default pos:start="2465:5" pos:end="2465:12">default:</default>

        <expr_stmt pos:start="2467:9" pos:end="2467:66"><expr pos:start="2467:9" pos:end="2467:65"><call pos:start="2467:9" pos:end="2467:65"><name pos:start="2467:9" pos:end="2467:18">MIPS_DEBUG</name><argument_list pos:start="2467:19" pos:end="2467:65">(<argument pos:start="2467:20" pos:end="2467:29"><expr pos:start="2467:20" pos:end="2467:29"><literal type="string" pos:start="2467:20" pos:end="2467:29">"%s %s,%s"</literal></expr></argument>, <argument pos:start="2467:32" pos:end="2467:34"><expr pos:start="2467:32" pos:end="2467:34"><name pos:start="2467:32" pos:end="2467:34">opn</name></expr></argument>, <argument pos:start="2467:37" pos:end="2467:49"><expr pos:start="2467:37" pos:end="2467:49"><name pos:start="2467:37" pos:end="2467:49"><name pos:start="2467:37" pos:end="2467:45">fregnames</name><index pos:start="2467:46" pos:end="2467:49">[<expr pos:start="2467:47" pos:end="2467:48"><name pos:start="2467:47" pos:end="2467:48">fd</name></expr>]</index></name></expr></argument>, <argument pos:start="2467:52" pos:end="2467:64"><expr pos:start="2467:52" pos:end="2467:64"><name pos:start="2467:52" pos:end="2467:64"><name pos:start="2467:52" pos:end="2467:60">fregnames</name><index pos:start="2467:61" pos:end="2467:64">[<expr pos:start="2467:62" pos:end="2467:63"><name pos:start="2467:62" pos:end="2467:63">fs</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2469:9" pos:end="2469:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
