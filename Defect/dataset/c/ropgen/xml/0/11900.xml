<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11900.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">rom_add_file</name><parameter_list pos:start="1:17" pos:end="3:60">(<parameter pos:start="1:18" pos:end="1:33"><decl pos:start="1:18" pos:end="1:33"><type pos:start="1:18" pos:end="1:33"><specifier pos:start="1:18" pos:end="1:22">const</specifier> <name pos:start="1:24" pos:end="1:27">char</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:33">file</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:53">fw_dir</name></decl></parameter>,

                 <parameter pos:start="3:18" pos:end="3:40"><decl pos:start="3:18" pos:end="3:40"><type pos:start="3:18" pos:end="3:40"><name pos:start="3:18" pos:end="3:35">target_phys_addr_t</name></type> <name pos:start="3:37" pos:end="3:40">addr</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:59"><decl pos:start="3:43" pos:end="3:59"><type pos:start="3:43" pos:end="3:59"><name pos:start="3:43" pos:end="3:49">int32_t</name></type> <name pos:start="3:51" pos:end="3:59">bootindex</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="133:1">{<block_content pos:start="7:5" pos:end="131:14">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:7">Rom</name> <modifier pos:start="7:9" pos:end="7:9">*</modifier></type><name pos:start="7:10" pos:end="7:12">rom</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">rc</name></decl>, <decl pos:start="9:13" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:14">fd</name> <init pos:start="9:16" pos:end="9:19">= <expr pos:start="9:18" pos:end="9:19"><operator pos:start="9:18" pos:end="9:18">-</operator><literal type="number" pos:start="9:19" pos:end="9:19">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:21"><name pos:start="11:10" pos:end="11:16">devpath</name><index pos:start="11:17" pos:end="11:21">[<expr pos:start="11:18" pos:end="11:20"><literal type="number" pos:start="11:18" pos:end="11:20">100</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:34"><expr pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:7">rom</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:33"><name pos:start="15:11" pos:end="15:19">g_malloc0</name><argument_list pos:start="15:20" pos:end="15:33">(<argument pos:start="15:21" pos:end="15:32"><expr pos:start="15:21" pos:end="15:32"><sizeof pos:start="15:21" pos:end="15:32">sizeof<argument_list pos:start="15:27" pos:end="15:32">(<argument pos:start="15:28" pos:end="15:31"><expr pos:start="15:28" pos:end="15:31"><operator pos:start="15:28" pos:end="15:28">*</operator><name pos:start="15:29" pos:end="15:31">rom</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:7">rom</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:13">name</name></name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:30"><name pos:start="17:17" pos:end="17:24">g_strdup</name><argument_list pos:start="17:25" pos:end="17:30">(<argument pos:start="17:26" pos:end="17:29"><expr pos:start="17:26" pos:end="17:29"><name pos:start="17:26" pos:end="17:29">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:63"><expr pos:start="19:5" pos:end="19:62"><name pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:7">rom</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:13">path</name></name> <operator pos:start="19:15" pos:end="19:15">=</operator> <call pos:start="19:17" pos:end="19:62"><name pos:start="19:17" pos:end="19:30">qemu_find_file</name><argument_list pos:start="19:31" pos:end="19:62">(<argument pos:start="19:32" pos:end="19:50"><expr pos:start="19:32" pos:end="19:50"><name pos:start="19:32" pos:end="19:50">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="19:53" pos:end="19:61"><expr pos:start="19:53" pos:end="19:61"><name pos:start="19:53" pos:end="19:61"><name pos:start="19:53" pos:end="19:55">rom</name><operator pos:start="19:56" pos:end="19:57">-&gt;</operator><name pos:start="19:58" pos:end="19:61">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:11">rom</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:17">path</name></name> <operator pos:start="21:19" pos:end="21:20">==</operator> <name pos:start="21:22" pos:end="21:25">NULL</name></expr>)</condition> <block pos:start="21:28" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:35">

        <expr_stmt pos:start="23:9" pos:end="23:35"><expr pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:11">rom</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:17">path</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <call pos:start="23:21" pos:end="23:34"><name pos:start="23:21" pos:end="23:28">g_strdup</name><argument_list pos:start="23:29" pos:end="23:34">(<argument pos:start="23:30" pos:end="23:33"><expr pos:start="23:30" pos:end="23:33"><name pos:start="23:30" pos:end="23:33">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:46"><expr pos:start="29:5" pos:end="29:45"><name pos:start="29:5" pos:end="29:6">fd</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <call pos:start="29:10" pos:end="29:45"><name pos:start="29:10" pos:end="29:13">open</name><argument_list pos:start="29:14" pos:end="29:45">(<argument pos:start="29:15" pos:end="29:23"><expr pos:start="29:15" pos:end="29:23"><name pos:start="29:15" pos:end="29:23"><name pos:start="29:15" pos:end="29:17">rom</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:23">path</name></name></expr></argument>, <argument pos:start="29:26" pos:end="29:44"><expr pos:start="29:26" pos:end="29:44"><name pos:start="29:26" pos:end="29:33">O_RDONLY</name> <operator pos:start="29:35" pos:end="29:35">|</operator> <name pos:start="29:37" pos:end="29:44">O_BINARY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:17">(<expr pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:10">fd</name> <operator pos:start="31:12" pos:end="31:13">==</operator> <operator pos:start="31:15" pos:end="31:15">-</operator><literal type="number" pos:start="31:16" pos:end="31:16">1</literal></expr>)</condition> <block pos:start="31:19" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:17">

        <expr_stmt pos:start="33:9" pos:end="35:44"><expr pos:start="33:9" pos:end="35:43"><call pos:start="33:9" pos:end="35:43"><name pos:start="33:9" pos:end="33:15">fprintf</name><argument_list pos:start="33:16" pos:end="35:43">(<argument pos:start="33:17" pos:end="33:22"><expr pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:22">stderr</name></expr></argument>, <argument pos:start="33:25" pos:end="33:62"><expr pos:start="33:25" pos:end="33:62"><literal type="string" pos:start="33:25" pos:end="33:62">"Could not open option rom '%s': %s\n"</literal></expr></argument>,

                <argument pos:start="35:17" pos:end="35:25"><expr pos:start="35:17" pos:end="35:25"><name pos:start="35:17" pos:end="35:25"><name pos:start="35:17" pos:end="35:19">rom</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:25">path</name></name></expr></argument>, <argument pos:start="35:28" pos:end="35:42"><expr pos:start="35:28" pos:end="35:42"><call pos:start="35:28" pos:end="35:42"><name pos:start="35:28" pos:end="35:35">strerror</name><argument_list pos:start="35:36" pos:end="35:42">(<argument pos:start="35:37" pos:end="35:41"><expr pos:start="35:37" pos:end="35:41"><name pos:start="35:37" pos:end="35:41">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="37:9" pos:end="37:17">goto <name pos:start="37:14" pos:end="37:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:15">(<expr pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:14">fw_dir</name></expr>)</condition> <block pos:start="43:17" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:38">

        <expr_stmt pos:start="45:9" pos:end="45:40"><expr pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:11">rom</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:19">fw_dir</name></name>  <operator pos:start="45:22" pos:end="45:22">=</operator> <call pos:start="45:24" pos:end="45:39"><name pos:start="45:24" pos:end="45:31">g_strdup</name><argument_list pos:start="45:32" pos:end="45:39">(<argument pos:start="45:33" pos:end="45:38"><expr pos:start="45:33" pos:end="45:38"><name pos:start="45:33" pos:end="45:38">fw_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:38"><expr pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:11">rom</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:20">fw_file</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <call pos:start="47:24" pos:end="47:37"><name pos:start="47:24" pos:end="47:31">g_strdup</name><argument_list pos:start="47:32" pos:end="47:37">(<argument pos:start="47:33" pos:end="47:36"><expr pos:start="47:33" pos:end="47:36"><name pos:start="47:33" pos:end="47:36">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:24"><expr pos:start="51:5" pos:end="51:23"><name pos:start="51:5" pos:end="51:13"><name pos:start="51:5" pos:end="51:7">rom</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:13">addr</name></name>    <operator pos:start="51:18" pos:end="51:18">=</operator> <name pos:start="51:20" pos:end="51:23">addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:42"><expr pos:start="53:5" pos:end="53:41"><name pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:7">rom</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:16">romsize</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <call pos:start="53:20" pos:end="53:41"><name pos:start="53:20" pos:end="53:24">lseek</name><argument_list pos:start="53:25" pos:end="53:41">(<argument pos:start="53:26" pos:end="53:27"><expr pos:start="53:26" pos:end="53:27"><name pos:start="53:26" pos:end="53:27">fd</name></expr></argument>, <argument pos:start="53:30" pos:end="53:30"><expr pos:start="53:30" pos:end="53:30"><literal type="number" pos:start="53:30" pos:end="53:30">0</literal></expr></argument>, <argument pos:start="53:33" pos:end="53:40"><expr pos:start="53:33" pos:end="53:40"><name pos:start="53:33" pos:end="53:40">SEEK_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:43"><expr pos:start="55:5" pos:end="55:42"><name pos:start="55:5" pos:end="55:13"><name pos:start="55:5" pos:end="55:7">rom</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:13">data</name></name>    <operator pos:start="55:18" pos:end="55:18">=</operator> <call pos:start="55:20" pos:end="55:42"><name pos:start="55:20" pos:end="55:28">g_malloc0</name><argument_list pos:start="55:29" pos:end="55:42">(<argument pos:start="55:30" pos:end="55:41"><expr pos:start="55:30" pos:end="55:41"><name pos:start="55:30" pos:end="55:41"><name pos:start="55:30" pos:end="55:32">rom</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:41">romsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:27"><expr pos:start="57:5" pos:end="57:26"><call pos:start="57:5" pos:end="57:26"><name pos:start="57:5" pos:end="57:9">lseek</name><argument_list pos:start="57:10" pos:end="57:26">(<argument pos:start="57:11" pos:end="57:12"><expr pos:start="57:11" pos:end="57:12"><name pos:start="57:11" pos:end="57:12">fd</name></expr></argument>, <argument pos:start="57:15" pos:end="57:15"><expr pos:start="57:15" pos:end="57:15"><literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr></argument>, <argument pos:start="57:18" pos:end="57:25"><expr pos:start="57:18" pos:end="57:25"><name pos:start="57:18" pos:end="57:25">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:43"><expr pos:start="59:5" pos:end="59:42"><name pos:start="59:5" pos:end="59:6">rc</name> <operator pos:start="59:8" pos:end="59:8">=</operator> <call pos:start="59:10" pos:end="59:42"><name pos:start="59:10" pos:end="59:13">read</name><argument_list pos:start="59:14" pos:end="59:42">(<argument pos:start="59:15" pos:end="59:16"><expr pos:start="59:15" pos:end="59:16"><name pos:start="59:15" pos:end="59:16">fd</name></expr></argument>, <argument pos:start="59:19" pos:end="59:27"><expr pos:start="59:19" pos:end="59:27"><name pos:start="59:19" pos:end="59:27"><name pos:start="59:19" pos:end="59:21">rom</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:27">data</name></name></expr></argument>, <argument pos:start="59:30" pos:end="59:41"><expr pos:start="59:30" pos:end="59:41"><name pos:start="59:30" pos:end="59:41"><name pos:start="59:30" pos:end="59:32">rom</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:41">romsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="69:5"><if pos:start="61:5" pos:end="69:5">if <condition pos:start="61:8" pos:end="61:27">(<expr pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:10">rc</name> <operator pos:start="61:12" pos:end="61:13">!=</operator> <name pos:start="61:15" pos:end="61:26"><name pos:start="61:15" pos:end="61:17">rom</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:26">romsize</name></name></expr>)</condition> <block pos:start="61:29" pos:end="69:5">{<block_content pos:start="63:9" pos:end="67:17">

        <expr_stmt pos:start="63:9" pos:end="65:45"><expr pos:start="63:9" pos:end="65:44"><call pos:start="63:9" pos:end="65:44"><name pos:start="63:9" pos:end="63:15">fprintf</name><argument_list pos:start="63:16" pos:end="65:44">(<argument pos:start="63:17" pos:end="63:22"><expr pos:start="63:17" pos:end="63:22"><name pos:start="63:17" pos:end="63:22">stderr</name></expr></argument>, <argument pos:start="63:25" pos:end="63:77"><expr pos:start="63:25" pos:end="63:77"><literal type="string" pos:start="63:25" pos:end="63:77">"rom: file %-20s: read error: rc=%d (expected %zd)\n"</literal></expr></argument>,

                <argument pos:start="65:17" pos:end="65:25"><expr pos:start="65:17" pos:end="65:25"><name pos:start="65:17" pos:end="65:25"><name pos:start="65:17" pos:end="65:19">rom</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:25">name</name></name></expr></argument>, <argument pos:start="65:28" pos:end="65:29"><expr pos:start="65:28" pos:end="65:29"><name pos:start="65:28" pos:end="65:29">rc</name></expr></argument>, <argument pos:start="65:32" pos:end="65:43"><expr pos:start="65:32" pos:end="65:43"><name pos:start="65:32" pos:end="65:43"><name pos:start="65:32" pos:end="65:34">rom</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:43">romsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="67:9" pos:end="67:17">goto <name pos:start="67:14" pos:end="67:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:14"><expr pos:start="71:5" pos:end="71:13"><call pos:start="71:5" pos:end="71:13"><name pos:start="71:5" pos:end="71:9">close</name><argument_list pos:start="71:10" pos:end="71:13">(<argument pos:start="71:11" pos:end="71:12"><expr pos:start="71:11" pos:end="71:12"><name pos:start="71:11" pos:end="71:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:20"><expr pos:start="73:5" pos:end="73:19"><call pos:start="73:5" pos:end="73:19"><name pos:start="73:5" pos:end="73:14">rom_insert</name><argument_list pos:start="73:15" pos:end="73:19">(<argument pos:start="73:16" pos:end="73:18"><expr pos:start="73:16" pos:end="73:18"><name pos:start="73:16" pos:end="73:18">rom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="107:5"><if pos:start="75:5" pos:end="103:5">if <condition pos:start="75:8" pos:end="75:31">(<expr pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:20"><name pos:start="75:9" pos:end="75:11">rom</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:20">fw_file</name></name> <operator pos:start="75:22" pos:end="75:23">&amp;&amp;</operator> <name pos:start="75:25" pos:end="75:30">fw_cfg</name></expr>)</condition> <block pos:start="75:33" pos:end="103:5">{<block_content pos:start="77:9" pos:end="101:68">

        <decl_stmt pos:start="77:9" pos:end="77:29"><decl pos:start="77:9" pos:end="77:28"><type pos:start="77:9" pos:end="77:20"><specifier pos:start="77:9" pos:end="77:13">const</specifier> <name pos:start="77:15" pos:end="77:18">char</name> <modifier pos:start="77:20" pos:end="77:20">*</modifier></type><name pos:start="77:21" pos:end="77:28">basename</name></decl>;</decl_stmt>

        <decl_stmt pos:start="79:9" pos:end="79:30"><decl pos:start="79:9" pos:end="79:29"><type pos:start="79:9" pos:end="79:12"><name pos:start="79:9" pos:end="79:12">char</name></type> <name pos:start="79:14" pos:end="79:29"><name pos:start="79:14" pos:end="79:25">fw_file_name</name><index pos:start="79:26" pos:end="79:29">[<expr pos:start="79:27" pos:end="79:28"><literal type="number" pos:start="79:27" pos:end="79:28">56</literal></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:46"><expr pos:start="83:9" pos:end="83:45"><name pos:start="83:9" pos:end="83:16">basename</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <call pos:start="83:20" pos:end="83:45"><name pos:start="83:20" pos:end="83:26">strrchr</name><argument_list pos:start="83:27" pos:end="83:45">(<argument pos:start="83:28" pos:end="83:39"><expr pos:start="83:28" pos:end="83:39"><name pos:start="83:28" pos:end="83:39"><name pos:start="83:28" pos:end="83:30">rom</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:39">fw_file</name></name></expr></argument>, <argument pos:start="83:42" pos:end="83:44"><expr pos:start="83:42" pos:end="83:44"><literal type="char" pos:start="83:42" pos:end="83:44">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="93:9"><if pos:start="85:9" pos:end="89:9">if <condition pos:start="85:12" pos:end="85:21">(<expr pos:start="85:13" pos:end="85:20"><name pos:start="85:13" pos:end="85:20">basename</name></expr>)</condition> <block pos:start="85:23" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:23">

            <expr_stmt pos:start="87:13" pos:end="87:23"><expr pos:start="87:13" pos:end="87:22"><name pos:start="87:13" pos:end="87:20">basename</name><operator pos:start="87:21" pos:end="87:22">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="89:11" pos:end="93:9">else <block pos:start="89:16" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:36">

            <expr_stmt pos:start="91:13" pos:end="91:36"><expr pos:start="91:13" pos:end="91:35"><name pos:start="91:13" pos:end="91:20">basename</name> <operator pos:start="91:22" pos:end="91:22">=</operator> <name pos:start="91:24" pos:end="91:35"><name pos:start="91:24" pos:end="91:26">rom</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:35">fw_file</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="97:27"><expr pos:start="95:9" pos:end="97:26"><call pos:start="95:9" pos:end="97:26"><name pos:start="95:9" pos:end="95:16">snprintf</name><argument_list pos:start="95:17" pos:end="97:26">(<argument pos:start="95:18" pos:end="95:29"><expr pos:start="95:18" pos:end="95:29"><name pos:start="95:18" pos:end="95:29">fw_file_name</name></expr></argument>, <argument pos:start="95:32" pos:end="95:51"><expr pos:start="95:32" pos:end="95:51"><sizeof pos:start="95:32" pos:end="95:51">sizeof<argument_list pos:start="95:38" pos:end="95:51">(<argument pos:start="95:39" pos:end="95:50"><expr pos:start="95:39" pos:end="95:50"><name pos:start="95:39" pos:end="95:50">fw_file_name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="95:54" pos:end="95:60"><expr pos:start="95:54" pos:end="95:60"><literal type="string" pos:start="95:54" pos:end="95:60">"%s/%s"</literal></expr></argument>, <argument pos:start="95:63" pos:end="95:73"><expr pos:start="95:63" pos:end="95:73"><name pos:start="95:63" pos:end="95:73"><name pos:start="95:63" pos:end="95:65">rom</name><operator pos:start="95:66" pos:end="95:67">-&gt;</operator><name pos:start="95:68" pos:end="95:73">fw_dir</name></name></expr></argument>,

                 <argument pos:start="97:18" pos:end="97:25"><expr pos:start="97:18" pos:end="97:25"><name pos:start="97:18" pos:end="97:25">basename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:71"><expr pos:start="99:9" pos:end="99:70"><call pos:start="99:9" pos:end="99:70"><name pos:start="99:9" pos:end="99:23">fw_cfg_add_file</name><argument_list pos:start="99:24" pos:end="99:70">(<argument pos:start="99:25" pos:end="99:30"><expr pos:start="99:25" pos:end="99:30"><name pos:start="99:25" pos:end="99:30">fw_cfg</name></expr></argument>, <argument pos:start="99:33" pos:end="99:44"><expr pos:start="99:33" pos:end="99:44"><name pos:start="99:33" pos:end="99:44">fw_file_name</name></expr></argument>, <argument pos:start="99:47" pos:end="99:55"><expr pos:start="99:47" pos:end="99:55"><name pos:start="99:47" pos:end="99:55"><name pos:start="99:47" pos:end="99:49">rom</name><operator pos:start="99:50" pos:end="99:51">-&gt;</operator><name pos:start="99:52" pos:end="99:55">data</name></name></expr></argument>, <argument pos:start="99:58" pos:end="99:69"><expr pos:start="99:58" pos:end="99:69"><name pos:start="99:58" pos:end="99:69"><name pos:start="99:58" pos:end="99:60">rom</name><operator pos:start="99:61" pos:end="99:62">-&gt;</operator><name pos:start="99:63" pos:end="99:69">romsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:68"><expr pos:start="101:9" pos:end="101:67"><call pos:start="101:9" pos:end="101:67"><name pos:start="101:9" pos:end="101:16">snprintf</name><argument_list pos:start="101:17" pos:end="101:67">(<argument pos:start="101:18" pos:end="101:24"><expr pos:start="101:18" pos:end="101:24"><name pos:start="101:18" pos:end="101:24">devpath</name></expr></argument>, <argument pos:start="101:27" pos:end="101:41"><expr pos:start="101:27" pos:end="101:41"><sizeof pos:start="101:27" pos:end="101:41">sizeof<argument_list pos:start="101:33" pos:end="101:41">(<argument pos:start="101:34" pos:end="101:40"><expr pos:start="101:34" pos:end="101:40"><name pos:start="101:34" pos:end="101:40">devpath</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="101:44" pos:end="101:52"><expr pos:start="101:44" pos:end="101:52"><literal type="string" pos:start="101:44" pos:end="101:52">"/rom@%s"</literal></expr></argument>, <argument pos:start="101:55" pos:end="101:66"><expr pos:start="101:55" pos:end="101:66"><name pos:start="101:55" pos:end="101:66">fw_file_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="103:7" pos:end="107:5">else <block pos:start="103:12" pos:end="107:5">{<block_content pos:start="105:9" pos:end="105:73">

        <expr_stmt pos:start="105:9" pos:end="105:73"><expr pos:start="105:9" pos:end="105:72"><call pos:start="105:9" pos:end="105:72"><name pos:start="105:9" pos:end="105:16">snprintf</name><argument_list pos:start="105:17" pos:end="105:72">(<argument pos:start="105:18" pos:end="105:24"><expr pos:start="105:18" pos:end="105:24"><name pos:start="105:18" pos:end="105:24">devpath</name></expr></argument>, <argument pos:start="105:27" pos:end="105:41"><expr pos:start="105:27" pos:end="105:41"><sizeof pos:start="105:27" pos:end="105:41">sizeof<argument_list pos:start="105:33" pos:end="105:41">(<argument pos:start="105:34" pos:end="105:40"><expr pos:start="105:34" pos:end="105:40"><name pos:start="105:34" pos:end="105:40">devpath</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="105:44" pos:end="105:65"><expr pos:start="105:44" pos:end="105:65"><literal type="string" pos:start="105:44" pos:end="105:50">"/rom@"</literal> <name pos:start="105:52" pos:end="105:65">TARGET_FMT_plx</name></expr></argument>, <argument pos:start="105:68" pos:end="105:71"><expr pos:start="105:68" pos:end="105:71"><name pos:start="105:68" pos:end="105:71">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:51"><expr pos:start="111:5" pos:end="111:50"><call pos:start="111:5" pos:end="111:50"><name pos:start="111:5" pos:end="111:24">add_boot_device_path</name><argument_list pos:start="111:25" pos:end="111:50">(<argument pos:start="111:26" pos:end="111:34"><expr pos:start="111:26" pos:end="111:34"><name pos:start="111:26" pos:end="111:34">bootindex</name></expr></argument>, <argument pos:start="111:37" pos:end="111:40"><expr pos:start="111:37" pos:end="111:40"><name pos:start="111:37" pos:end="111:40">NULL</name></expr></argument>, <argument pos:start="111:43" pos:end="111:49"><expr pos:start="111:43" pos:end="111:49"><name pos:start="111:43" pos:end="111:49">devpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="113:5" pos:end="113:13">return <expr pos:start="113:12" pos:end="113:12"><literal type="number" pos:start="113:12" pos:end="113:12">0</literal></expr>;</return>



<label pos:start="117:1" pos:end="117:4"><name pos:start="117:1" pos:end="117:3">err</name>:</label>

    <if_stmt pos:start="119:5" pos:end="121:18"><if pos:start="119:5" pos:end="121:18">if <condition pos:start="119:8" pos:end="119:17">(<expr pos:start="119:9" pos:end="119:16"><name pos:start="119:9" pos:end="119:10">fd</name> <operator pos:start="119:12" pos:end="119:13">!=</operator> <operator pos:start="119:15" pos:end="119:15">-</operator><literal type="number" pos:start="119:16" pos:end="119:16">1</literal></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:18"><block_content pos:start="121:9" pos:end="121:18">

        <expr_stmt pos:start="121:9" pos:end="121:18"><expr pos:start="121:9" pos:end="121:17"><call pos:start="121:9" pos:end="121:17"><name pos:start="121:9" pos:end="121:13">close</name><argument_list pos:start="121:14" pos:end="121:17">(<argument pos:start="121:15" pos:end="121:16"><expr pos:start="121:15" pos:end="121:16"><name pos:start="121:15" pos:end="121:16">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:22"><expr pos:start="123:5" pos:end="123:21"><call pos:start="123:5" pos:end="123:21"><name pos:start="123:5" pos:end="123:10">g_free</name><argument_list pos:start="123:11" pos:end="123:21">(<argument pos:start="123:12" pos:end="123:20"><expr pos:start="123:12" pos:end="123:20"><name pos:start="123:12" pos:end="123:20"><name pos:start="123:12" pos:end="123:14">rom</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:20">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:22"><expr pos:start="125:5" pos:end="125:21"><call pos:start="125:5" pos:end="125:21"><name pos:start="125:5" pos:end="125:10">g_free</name><argument_list pos:start="125:11" pos:end="125:21">(<argument pos:start="125:12" pos:end="125:20"><expr pos:start="125:12" pos:end="125:20"><name pos:start="125:12" pos:end="125:20"><name pos:start="125:12" pos:end="125:14">rom</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:20">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:22"><expr pos:start="127:5" pos:end="127:21"><call pos:start="127:5" pos:end="127:21"><name pos:start="127:5" pos:end="127:10">g_free</name><argument_list pos:start="127:11" pos:end="127:21">(<argument pos:start="127:12" pos:end="127:20"><expr pos:start="127:12" pos:end="127:20"><name pos:start="127:12" pos:end="127:20"><name pos:start="127:12" pos:end="127:14">rom</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:20">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:16"><expr pos:start="129:5" pos:end="129:15"><call pos:start="129:5" pos:end="129:15"><name pos:start="129:5" pos:end="129:10">g_free</name><argument_list pos:start="129:11" pos:end="129:15">(<argument pos:start="129:12" pos:end="129:14"><expr pos:start="129:12" pos:end="129:14"><name pos:start="129:12" pos:end="129:14">rom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="131:5" pos:end="131:14">return <expr pos:start="131:12" pos:end="131:13"><operator pos:start="131:12" pos:end="131:12">-</operator><literal type="number" pos:start="131:13" pos:end="131:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
