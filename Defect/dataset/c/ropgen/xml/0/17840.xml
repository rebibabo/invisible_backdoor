<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17840.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:16">body</name><parameter_list pos:start="1:17" pos:end="1:50">(<parameter pos:start="1:18" pos:end="1:33"><decl pos:start="1:18" pos:end="1:33"><type pos:start="1:18" pos:end="1:30"><name pos:start="1:18" pos:end="1:25">uint32_t</name></type> <name pos:start="1:27" pos:end="1:33"><name pos:start="1:27" pos:end="1:30">ABCD</name><index pos:start="1:31" pos:end="1:33">[<expr pos:start="1:32" pos:end="1:32"><literal type="number" pos:start="1:32" pos:end="1:32">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:49"><decl pos:start="1:36" pos:end="1:49"><type pos:start="1:36" pos:end="1:45"><name pos:start="1:36" pos:end="1:43">uint32_t</name></type> <name pos:start="1:45" pos:end="1:49"><name pos:start="1:45" pos:end="1:45">X</name><index pos:start="1:46" pos:end="1:49">[<expr pos:start="1:47" pos:end="1:48"><literal type="number" pos:start="1:47" pos:end="1:48">16</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:17">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:7">int</name> <name pos:start="5:9" pos:end="5:9">i</name></type> <name pos:start="5:11" pos:end="5:19">av_unused</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:14">t</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:14">a</name> <init pos:start="9:16" pos:end="9:24">= <expr pos:start="9:18" pos:end="9:24"><name pos:start="9:18" pos:end="9:24"><name pos:start="9:18" pos:end="9:21">ABCD</name><index pos:start="9:22" pos:end="9:24">[<expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:14">b</name> <init pos:start="11:16" pos:end="11:24">= <expr pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:21">ABCD</name><index pos:start="11:22" pos:end="11:24">[<expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:14">c</name> <init pos:start="13:16" pos:end="13:24">= <expr pos:start="13:18" pos:end="13:24"><name pos:start="13:18" pos:end="13:24"><name pos:start="13:18" pos:end="13:21">ABCD</name><index pos:start="13:22" pos:end="13:24">[<expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="20:0"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:14">d</name> <init pos:start="15:16" pos:end="15:24">= <expr pos:start="15:18" pos:end="15:24"><name pos:start="15:18" pos:end="15:24"><name pos:start="15:18" pos:end="15:21">ABCD</name><index pos:start="15:22" pos:end="15:24">[<expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="19:1" pos:end="19:18">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:18">HAVE_BIGENDIAN</name></expr></cpp:if>

    <for pos:start="21:5" pos:end="30:0">for <control pos:start="21:9" pos:end="21:28">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:23"><expr pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <literal type="number" pos:start="21:21" pos:end="21:22">16</literal></expr>;</condition> <incr pos:start="21:25" pos:end="21:27"><expr pos:start="21:25" pos:end="21:27"><name pos:start="21:25" pos:end="21:25">i</name><operator pos:start="21:26" pos:end="21:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:9" pos:end="30:0"><block_content pos:start="23:9" pos:end="30:0">

        <expr_stmt pos:start="23:9" pos:end="30:0"><expr pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:12"><name pos:start="23:9" pos:end="23:9">X</name><index pos:start="23:10" pos:end="23:12">[<expr pos:start="23:11" pos:end="23:11"><name pos:start="23:11" pos:end="23:11">i</name></expr>]</index></name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:31"><name pos:start="23:16" pos:end="23:25">av_bswap32</name><argument_list pos:start="23:26" pos:end="23:31">(<argument pos:start="23:27" pos:end="23:30"><expr pos:start="23:27" pos:end="23:30"><name pos:start="23:27" pos:end="23:30"><name pos:start="23:27" pos:end="23:27">X</name><index pos:start="23:28" pos:end="23:30">[<expr pos:start="23:29" pos:end="23:29"><name pos:start="23:29" pos:end="23:29">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="29:1" pos:end="29:16">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:16">CONFIG_SMALL</name></expr></cpp:if>

    <for pos:start="31:5" pos:end="56:0">for <control pos:start="31:9" pos:end="31:28">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:23"><expr pos:start="31:17" pos:end="31:22"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <literal type="number" pos:start="31:21" pos:end="31:22">64</literal></expr>;</condition> <incr pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><name pos:start="31:25" pos:end="31:25">i</name><operator pos:start="31:26" pos:end="31:27">++</operator></expr></incr>)</control> <block pos:start="31:30" pos:end="56:0">{<block_content pos:start="33:9" pos:end="43:14">

        <expr_stmt pos:start="33:9" pos:end="33:28"><expr pos:start="33:9" pos:end="33:27"><call pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:12">CORE</name><argument_list pos:start="33:13" pos:end="33:27">(<argument pos:start="33:14" pos:end="33:14"><expr pos:start="33:14" pos:end="33:14"><name pos:start="33:14" pos:end="33:14">i</name></expr></argument>, <argument pos:start="33:17" pos:end="33:17"><expr pos:start="33:17" pos:end="33:17"><name pos:start="33:17" pos:end="33:17">a</name></expr></argument>, <argument pos:start="33:20" pos:end="33:20"><expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">b</name></expr></argument>, <argument pos:start="33:23" pos:end="33:23"><expr pos:start="33:23" pos:end="33:23"><name pos:start="33:23" pos:end="33:23">c</name></expr></argument>, <argument pos:start="33:26" pos:end="33:26"><expr pos:start="33:26" pos:end="33:26"><name pos:start="33:26" pos:end="33:26">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:14"><expr pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:9">t</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <name pos:start="35:13" pos:end="35:13">d</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:14"><expr pos:start="37:9" pos:end="37:13"><name pos:start="37:9" pos:end="37:9">d</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <name pos:start="37:13" pos:end="37:13">c</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:14"><expr pos:start="39:9" pos:end="39:13"><name pos:start="39:9" pos:end="39:9">c</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <name pos:start="39:13" pos:end="39:13">b</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:14"><expr pos:start="41:9" pos:end="41:13"><name pos:start="41:9" pos:end="41:9">b</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <name pos:start="41:13" pos:end="41:13">a</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:14"><expr pos:start="43:9" pos:end="43:13"><name pos:start="43:9" pos:end="43:9">a</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <name pos:start="43:13" pos:end="43:13">t</name></expr>;</expr_stmt>

    </block_content>}</block></for>

<cpp:else pos:start="47:1" pos:end="47:5">#<cpp:directive pos:start="47:2" pos:end="47:5">else</cpp:directive></cpp:else>

<cpp:define pos:start="49:1" pos:end="53:44">#<cpp:directive pos:start="49:2" pos:end="49:7">define</cpp:directive> <cpp:macro pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:13">CORE2</name><parameter_list pos:start="49:14" pos:end="49:16">(<parameter pos:start="49:15" pos:end="49:15"><type pos:start="49:15" pos:end="49:15"><name pos:start="49:15" pos:end="49:15">i</name></type></parameter>)</parameter_list></cpp:macro>                                                        \

    <cpp:value pos:start="51:5" pos:end="53:44">CORE( i,   a,b,c,d); CORE((i+1),d,a,b,c);                           \

    CORE((i+2),c,d,a,b); CORE((i+3),b,c,d,a)</cpp:value></cpp:define>

<cpp:define pos:start="55:1" pos:end="55:68">#<cpp:directive pos:start="55:2" pos:end="55:7">define</cpp:directive> <cpp:macro pos:start="55:9" pos:end="55:16"><name pos:start="55:9" pos:end="55:13">CORE4</name><parameter_list pos:start="55:14" pos:end="55:16">(<parameter pos:start="55:15" pos:end="55:15"><type pos:start="55:15" pos:end="55:15"><name pos:start="55:15" pos:end="55:15">i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="55:18" pos:end="55:68">CORE2(i); CORE2((i+4)); CORE2((i+8)); CORE2((i+12))</cpp:value></cpp:define>

    <expr_stmt pos:start="57:5" pos:end="57:13"><expr pos:start="57:5" pos:end="57:12"><call pos:start="57:5" pos:end="57:12"><name pos:start="57:5" pos:end="57:9">CORE4</name><argument_list pos:start="57:10" pos:end="57:12">(<argument pos:start="57:11" pos:end="57:11"><expr pos:start="57:11" pos:end="57:11"><literal type="number" pos:start="57:11" pos:end="57:11">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="57:15" pos:end="57:24"><expr pos:start="57:15" pos:end="57:23"><call pos:start="57:15" pos:end="57:23"><name pos:start="57:15" pos:end="57:19">CORE4</name><argument_list pos:start="57:20" pos:end="57:23">(<argument pos:start="57:21" pos:end="57:22"><expr pos:start="57:21" pos:end="57:22"><literal type="number" pos:start="57:21" pos:end="57:22">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="57:26" pos:end="57:35"><expr pos:start="57:26" pos:end="57:34"><call pos:start="57:26" pos:end="57:34"><name pos:start="57:26" pos:end="57:30">CORE4</name><argument_list pos:start="57:31" pos:end="57:34">(<argument pos:start="57:32" pos:end="57:33"><expr pos:start="57:32" pos:end="57:33"><literal type="number" pos:start="57:32" pos:end="57:33">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="57:37" pos:end="60:0"><expr pos:start="57:37" pos:end="57:45"><call pos:start="57:37" pos:end="57:45"><name pos:start="57:37" pos:end="57:41">CORE4</name><argument_list pos:start="57:42" pos:end="57:45">(<argument pos:start="57:43" pos:end="57:44"><expr pos:start="57:43" pos:end="57:44"><literal type="number" pos:start="57:43" pos:end="57:44">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="59:1" pos:end="59:6">#<cpp:directive pos:start="59:2" pos:end="59:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="63:5" pos:end="63:17"><expr pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:11"><name pos:start="63:5" pos:end="63:8">ABCD</name><index pos:start="63:9" pos:end="63:11">[<expr pos:start="63:10" pos:end="63:10"><literal type="number" pos:start="63:10" pos:end="63:10">0</literal></expr>]</index></name> <operator pos:start="63:13" pos:end="63:14">+=</operator> <name pos:start="63:16" pos:end="63:16">d</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:17"><expr pos:start="65:5" pos:end="65:16"><name pos:start="65:5" pos:end="65:11"><name pos:start="65:5" pos:end="65:8">ABCD</name><index pos:start="65:9" pos:end="65:11">[<expr pos:start="65:10" pos:end="65:10"><literal type="number" pos:start="65:10" pos:end="65:10">1</literal></expr>]</index></name> <operator pos:start="65:13" pos:end="65:14">+=</operator> <name pos:start="65:16" pos:end="65:16">c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:17"><expr pos:start="67:5" pos:end="67:16"><name pos:start="67:5" pos:end="67:11"><name pos:start="67:5" pos:end="67:8">ABCD</name><index pos:start="67:9" pos:end="67:11">[<expr pos:start="67:10" pos:end="67:10"><literal type="number" pos:start="67:10" pos:end="67:10">2</literal></expr>]</index></name> <operator pos:start="67:13" pos:end="67:14">+=</operator> <name pos:start="67:16" pos:end="67:16">b</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:17"><expr pos:start="69:5" pos:end="69:16"><name pos:start="69:5" pos:end="69:11"><name pos:start="69:5" pos:end="69:8">ABCD</name><index pos:start="69:9" pos:end="69:11">[<expr pos:start="69:10" pos:end="69:10"><literal type="number" pos:start="69:10" pos:end="69:10">3</literal></expr>]</index></name> <operator pos:start="69:13" pos:end="69:14">+=</operator> <name pos:start="69:16" pos:end="69:16">a</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
