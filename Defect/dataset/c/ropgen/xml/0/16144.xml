<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16144.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">conditional_wait</name><parameter_list pos:start="1:28" pos:end="1:46">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:41">DBDMA_channel</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">ch</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">dbdma_cmd</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:22">current</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><operator pos:start="5:26" pos:end="5:26">&amp;</operator><name pos:start="5:27" pos:end="5:37"><name pos:start="5:27" pos:end="5:28">ch</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:37">current</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:17">wait</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:21">sel_mask</name></decl>, <decl pos:start="9:24" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:24" pos:end="9:32">sel_value</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:19">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">cond</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:40"><expr pos:start="17:5" pos:end="17:39"><call pos:start="17:5" pos:end="17:39"><name pos:start="17:5" pos:end="17:17">DBDMA_DPRINTF</name><argument_list pos:start="17:18" pos:end="17:39">(<argument pos:start="17:19" pos:end="17:38"><expr pos:start="17:19" pos:end="17:38"><literal type="string" pos:start="17:19" pos:end="17:38">"conditional_wait\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:53"><expr pos:start="21:5" pos:end="21:52"><name pos:start="21:5" pos:end="21:8">wait</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:40"><name pos:start="21:12" pos:end="21:22">le16_to_cpu</name><argument_list pos:start="21:23" pos:end="21:40">(<argument pos:start="21:24" pos:end="21:39"><expr pos:start="21:24" pos:end="21:39"><name pos:start="21:24" pos:end="21:39"><name pos:start="21:24" pos:end="21:30">current</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:39">command</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:42" pos:end="21:42">&amp;</operator> <name pos:start="21:44" pos:end="21:52">WAIT_MASK</name></expr>;</expr_stmt>



    <switch pos:start="25:5" pos:end="35:5">switch<condition pos:start="25:11" pos:end="25:16">(<expr pos:start="25:12" pos:end="25:15"><name pos:start="25:12" pos:end="25:15">wait</name></expr>)</condition> <block pos:start="25:18" pos:end="35:5">{<block_content pos:start="27:5" pos:end="33:17">

    <case pos:start="27:5" pos:end="27:20">case <expr pos:start="27:10" pos:end="27:19"><name pos:start="27:10" pos:end="27:19">WAIT_NEVER</name></expr>:</case>  <comment type="block" pos:start="27:23" pos:end="27:38">/* don't wait */</comment>

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return>

    <case pos:start="31:5" pos:end="31:21">case <expr pos:start="31:10" pos:end="31:20"><name pos:start="31:10" pos:end="31:20">WAIT_ALWAYS</name></expr>:</case> <comment type="block" pos:start="31:23" pos:end="31:39">/* always wait */</comment>

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="39:5" pos:end="39:59"><expr pos:start="39:5" pos:end="39:58"><name pos:start="39:5" pos:end="39:10">status</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:48"><name pos:start="39:14" pos:end="39:24">be32_to_cpu</name><argument_list pos:start="39:25" pos:end="39:48">(<argument pos:start="39:26" pos:end="39:47"><expr pos:start="39:26" pos:end="39:47"><name pos:start="39:26" pos:end="39:47"><name pos:start="39:26" pos:end="39:27">ch</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:33">regs</name><index pos:start="39:34" pos:end="39:47">[<expr pos:start="39:35" pos:end="39:46"><name pos:start="39:35" pos:end="39:46">DBDMA_STATUS</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="39:50" pos:end="39:50">&amp;</operator> <name pos:start="39:52" pos:end="39:58">DEVSTAT</name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:68"><expr pos:start="43:5" pos:end="43:67"><name pos:start="43:5" pos:end="43:12">sel_mask</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <operator pos:start="43:16" pos:end="43:16">(</operator><call pos:start="43:17" pos:end="43:53"><name pos:start="43:17" pos:end="43:27">be32_to_cpu</name><argument_list pos:start="43:28" pos:end="43:53">(<argument pos:start="43:29" pos:end="43:52"><expr pos:start="43:29" pos:end="43:52"><name pos:start="43:29" pos:end="43:52"><name pos:start="43:29" pos:end="43:30">ch</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:36">regs</name><index pos:start="43:37" pos:end="43:52">[<expr pos:start="43:38" pos:end="43:51"><name pos:start="43:38" pos:end="43:51">DBDMA_WAIT_SEL</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="43:55" pos:end="43:56">&gt;&gt;</operator> <literal type="number" pos:start="43:58" pos:end="43:59">16</literal><operator pos:start="43:60" pos:end="43:60">)</operator> <operator pos:start="43:62" pos:end="43:62">&amp;</operator> <literal type="number" pos:start="43:64" pos:end="43:67">0x0f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:61"><expr pos:start="45:5" pos:end="45:60"><name pos:start="45:5" pos:end="45:13">sel_value</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <call pos:start="45:17" pos:end="45:53"><name pos:start="45:17" pos:end="45:27">be32_to_cpu</name><argument_list pos:start="45:28" pos:end="45:53">(<argument pos:start="45:29" pos:end="45:52"><expr pos:start="45:29" pos:end="45:52"><name pos:start="45:29" pos:end="45:52"><name pos:start="45:29" pos:end="45:30">ch</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:36">regs</name><index pos:start="45:37" pos:end="45:52">[<expr pos:start="45:38" pos:end="45:51"><name pos:start="45:38" pos:end="45:51">DBDMA_WAIT_SEL</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="45:55" pos:end="45:55">&amp;</operator> <literal type="number" pos:start="45:57" pos:end="45:60">0x0f</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:57"><expr pos:start="49:5" pos:end="49:56"><name pos:start="49:5" pos:end="49:8">cond</name> <operator pos:start="49:10" pos:end="49:10">=</operator> <operator pos:start="49:12" pos:end="49:12">(</operator><name pos:start="49:13" pos:end="49:18">status</name> <operator pos:start="49:20" pos:end="49:20">&amp;</operator> <name pos:start="49:22" pos:end="49:29">sel_mask</name><operator pos:start="49:30" pos:end="49:30">)</operator> <operator pos:start="49:32" pos:end="49:33">==</operator> <operator pos:start="49:35" pos:end="49:35">(</operator><name pos:start="49:36" pos:end="49:44">sel_value</name> <operator pos:start="49:46" pos:end="49:46">&amp;</operator> <name pos:start="49:48" pos:end="49:55">sel_mask</name><operator pos:start="49:56" pos:end="49:56">)</operator></expr>;</expr_stmt>



    <switch pos:start="53:5" pos:end="71:5">switch<condition pos:start="53:11" pos:end="53:16">(<expr pos:start="53:12" pos:end="53:15"><name pos:start="53:12" pos:end="53:15">wait</name></expr>)</condition> <block pos:start="53:18" pos:end="71:5">{<block_content pos:start="55:5" pos:end="69:17">

    <case pos:start="55:5" pos:end="55:20">case <expr pos:start="55:10" pos:end="55:19"><name pos:start="55:10" pos:end="55:19">WAIT_IFSET</name></expr>:</case>  <comment type="block" pos:start="55:23" pos:end="55:54">/* wait if condition bit is 1 */</comment>

        <if_stmt pos:start="57:9" pos:end="59:21"><if pos:start="57:9" pos:end="59:21">if <condition pos:start="57:12" pos:end="57:17">(<expr pos:start="57:13" pos:end="57:16"><name pos:start="57:13" pos:end="57:16">cond</name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:21"><block_content pos:start="59:13" pos:end="59:21">

            <return pos:start="59:13" pos:end="59:21">return <expr pos:start="59:20" pos:end="59:20"><literal type="number" pos:start="59:20" pos:end="59:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <return pos:start="61:9" pos:end="61:17">return <expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>;</return>

    <case pos:start="63:5" pos:end="63:20">case <expr pos:start="63:10" pos:end="63:19"><name pos:start="63:10" pos:end="63:19">WAIT_IFCLR</name></expr>:</case>  <comment type="block" pos:start="63:23" pos:end="63:54">/* wait if condition bit is 0 */</comment>

        <if_stmt pos:start="65:9" pos:end="67:21"><if pos:start="65:9" pos:end="67:21">if <condition pos:start="65:12" pos:end="65:18">(<expr pos:start="65:13" pos:end="65:17"><operator pos:start="65:13" pos:end="65:13">!</operator><name pos:start="65:14" pos:end="65:17">cond</name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:21"><block_content pos:start="67:13" pos:end="67:21">

            <return pos:start="67:13" pos:end="67:21">return <expr pos:start="67:20" pos:end="67:20"><literal type="number" pos:start="67:20" pos:end="67:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <return pos:start="69:9" pos:end="69:17">return <expr pos:start="69:16" pos:end="69:16"><literal type="number" pos:start="69:16" pos:end="69:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
