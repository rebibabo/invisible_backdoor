<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20950.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">omap_sti_fifo_write</name><parameter_list pos:start="1:32" pos:end="3:31">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:69"><decl pos:start="1:47" pos:end="1:69"><type pos:start="1:47" pos:end="1:69"><name pos:start="1:47" pos:end="1:64">target_phys_addr_t</name></type> <name pos:start="1:66" pos:end="1:69">addr</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:30"><decl pos:start="3:17" pos:end="3:30"><type pos:start="3:17" pos:end="3:30"><name pos:start="3:17" pos:end="3:24">uint32_t</name></type> <name pos:start="3:26" pos:end="3:30">value</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:5">

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:55"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:21">omap_sti_s</name></name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:55">= <expr pos:start="7:28" pos:end="7:55"><operator pos:start="7:28" pos:end="7:28">(</operator>struct <name pos:start="7:36" pos:end="7:45">omap_sti_s</name> <operator pos:start="7:47" pos:end="7:47">*</operator><operator pos:start="7:48" pos:end="7:48">)</operator> <name pos:start="7:50" pos:end="7:55">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">offset</name> <init pos:start="9:16" pos:end="9:39">= <expr pos:start="9:18" pos:end="9:39"><name pos:start="9:18" pos:end="9:21">addr</name> <operator pos:start="9:23" pos:end="9:23">-</operator> <name pos:start="9:25" pos:end="9:39"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:39">channel_base</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">ch</name> <init pos:start="11:12" pos:end="11:24">= <expr pos:start="11:14" pos:end="11:24"><name pos:start="11:14" pos:end="11:19">offset</name> <operator pos:start="11:21" pos:end="11:22">&gt;&gt;</operator> <literal type="number" pos:start="11:24" pos:end="11:24">6</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:16">byte</name> <init pos:start="13:18" pos:end="13:24">= <expr pos:start="13:20" pos:end="13:24"><name pos:start="13:20" pos:end="13:24">value</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="37:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:40">(<expr pos:start="17:9" pos:end="17:39"><name pos:start="17:9" pos:end="17:10">ch</name> <operator pos:start="17:12" pos:end="17:13">==</operator> <name pos:start="17:15" pos:end="17:39">STI_TRACE_CONTROL_CHANNEL</name></expr>)</condition> <block pos:start="17:42" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:40">

        <comment type="block" pos:start="19:9" pos:end="19:42">/* Flush channel &lt;i&gt;value&lt;/i&gt;.  */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:40"><expr pos:start="21:9" pos:end="21:39"><call pos:start="21:9" pos:end="21:39"><name pos:start="21:9" pos:end="21:22">qemu_chr_write</name><argument_list pos:start="21:23" pos:end="21:39">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:24">s</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:29">chr</name></name></expr></argument>, <argument pos:start="21:32" pos:end="21:35"><expr pos:start="21:32" pos:end="21:35"><literal type="string" pos:start="21:32" pos:end="21:35">"\r"</literal></expr></argument>, <argument pos:start="21:38" pos:end="21:38"><expr pos:start="21:38" pos:end="21:38"><literal type="number" pos:start="21:38" pos:end="21:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="37:5">else if <condition pos:start="23:15" pos:end="23:52">(<expr pos:start="23:16" pos:end="23:51"><name pos:start="23:16" pos:end="23:17">ch</name> <operator pos:start="23:19" pos:end="23:20">==</operator> <name pos:start="23:22" pos:end="23:46">STI_TRACE_CONSOLE_CHANNEL</name> <operator pos:start="23:48" pos:end="23:49">||</operator> <literal type="number" pos:start="23:51" pos:end="23:51">1</literal></expr>)</condition> <block pos:start="23:54" pos:end="37:5">{<block_content pos:start="25:9" pos:end="35:45">

        <if_stmt pos:start="25:9" pos:end="35:45"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:43">(<expr pos:start="25:13" pos:end="25:42"><name pos:start="25:13" pos:end="25:17">value</name> <operator pos:start="25:19" pos:end="25:20">==</operator> <literal type="number" pos:start="25:22" pos:end="25:25">0xc0</literal> <operator pos:start="25:27" pos:end="25:28">||</operator> <name pos:start="25:30" pos:end="25:34">value</name> <operator pos:start="25:36" pos:end="25:37">==</operator> <literal type="number" pos:start="25:39" pos:end="25:42">0xc3</literal></expr>)</condition> <block pos:start="25:45" pos:end="29:9">{<block_content>

            <comment type="block" pos:start="27:13" pos:end="27:42">/* Open channel &lt;i&gt;ch&lt;/i&gt;.  */</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="29:11" pos:end="31:44">else if <condition pos:start="29:19" pos:end="29:33">(<expr pos:start="29:20" pos:end="29:32"><name pos:start="29:20" pos:end="29:24">value</name> <operator pos:start="29:26" pos:end="29:27">==</operator> <literal type="number" pos:start="29:29" pos:end="29:32">0x00</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:44"><block_content pos:start="31:13" pos:end="31:44">

            <expr_stmt pos:start="31:13" pos:end="31:44"><expr pos:start="31:13" pos:end="31:43"><call pos:start="31:13" pos:end="31:43"><name pos:start="31:13" pos:end="31:26">qemu_chr_write</name><argument_list pos:start="31:27" pos:end="31:43">(<argument pos:start="31:28" pos:end="31:33"><expr pos:start="31:28" pos:end="31:33"><name pos:start="31:28" pos:end="31:33"><name pos:start="31:28" pos:end="31:28">s</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:33">chr</name></name></expr></argument>, <argument pos:start="31:36" pos:end="31:39"><expr pos:start="31:36" pos:end="31:39"><literal type="string" pos:start="31:36" pos:end="31:39">"\n"</literal></expr></argument>, <argument pos:start="31:42" pos:end="31:42"><expr pos:start="31:42" pos:end="31:42"><literal type="number" pos:start="31:42" pos:end="31:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="33:9" pos:end="35:45">else<block type="pseudo" pos:start="35:13" pos:end="35:45"><block_content pos:start="35:13" pos:end="35:45">

            <expr_stmt pos:start="35:13" pos:end="35:45"><expr pos:start="35:13" pos:end="35:44"><call pos:start="35:13" pos:end="35:44"><name pos:start="35:13" pos:end="35:26">qemu_chr_write</name><argument_list pos:start="35:27" pos:end="35:44">(<argument pos:start="35:28" pos:end="35:33"><expr pos:start="35:28" pos:end="35:33"><name pos:start="35:28" pos:end="35:33"><name pos:start="35:28" pos:end="35:28">s</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:33">chr</name></name></expr></argument>, <argument pos:start="35:36" pos:end="35:40"><expr pos:start="35:36" pos:end="35:40"><operator pos:start="35:36" pos:end="35:36">&amp;</operator><name pos:start="35:37" pos:end="35:40">byte</name></expr></argument>, <argument pos:start="35:43" pos:end="35:43"><expr pos:start="35:43" pos:end="35:43"><literal type="number" pos:start="35:43" pos:end="35:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
