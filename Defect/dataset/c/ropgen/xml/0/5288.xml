<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5288.c" pos:tabs="8"><function pos:start="1:1" pos:end="703:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">ffserver_parse_config_stream</name><parameter_list pos:start="1:40" pos:end="3:79">(<parameter pos:start="1:41" pos:end="1:62"><decl pos:start="1:41" pos:end="1:62"><type pos:start="1:41" pos:end="1:62"><name pos:start="1:41" pos:end="1:54">FFServerConfig</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:62">config</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:79"><decl pos:start="1:65" pos:end="1:79"><type pos:start="1:65" pos:end="1:79"><specifier pos:start="1:65" pos:end="1:69">const</specifier> <name pos:start="1:71" pos:end="1:74">char</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:79">cmd</name></decl></parameter>, <parameter pos:start="1:82" pos:end="1:95"><decl pos:start="1:82" pos:end="1:95"><type pos:start="1:82" pos:end="1:95"><specifier pos:start="1:82" pos:end="1:86">const</specifier> <name pos:start="1:88" pos:end="1:91">char</name> <modifier pos:start="1:93" pos:end="1:93">*</modifier><modifier pos:start="1:94" pos:end="1:94">*</modifier></type><name pos:start="1:95" pos:end="1:95">p</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:52"><decl pos:start="3:41" pos:end="3:52"><type pos:start="3:41" pos:end="3:52"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:52">line_num</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:78"><decl pos:start="3:55" pos:end="3:78"><type pos:start="3:55" pos:end="3:78"><name pos:start="3:55" pos:end="3:68">FFServerStream</name> <modifier pos:start="3:70" pos:end="3:70">*</modifier><modifier pos:start="3:71" pos:end="3:71">*</modifier></type><name pos:start="3:72" pos:end="3:78">pstream</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="703:1">{<block_content pos:start="7:5" pos:end="701:27">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:18"><name pos:start="7:10" pos:end="7:12">arg</name><index pos:start="7:13" pos:end="7:18">[<expr pos:start="7:14" pos:end="7:17"><literal type="number" pos:start="7:14" pos:end="7:17">1024</literal></expr>]</index></name></decl>, <decl pos:start="7:21" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:21" pos:end="7:30"><name pos:start="7:21" pos:end="7:24">arg2</name><index pos:start="7:25" pos:end="7:30">[<expr pos:start="7:26" pos:end="7:29"><literal type="number" pos:start="7:26" pos:end="7:29">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">FFServerStream</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:26">stream</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">val</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><call pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:14">av_assert0</name><argument_list pos:start="15:15" pos:end="15:23">(<argument pos:start="15:16" pos:end="15:22"><expr pos:start="15:16" pos:end="15:22"><name pos:start="15:16" pos:end="15:22">pstream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:10">stream</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <operator pos:start="17:14" pos:end="17:14">*</operator><name pos:start="17:15" pos:end="17:21">pstream</name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="73:5"><if pos:start="21:5" pos:end="73:5">if <condition pos:start="21:8" pos:end="21:39">(<expr pos:start="21:9" pos:end="21:38"><operator pos:start="21:9" pos:end="21:9">!</operator><call pos:start="21:10" pos:end="21:38"><name pos:start="21:10" pos:end="21:22">av_strcasecmp</name><argument_list pos:start="21:23" pos:end="21:38">(<argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">cmd</name></expr></argument>, <argument pos:start="21:29" pos:end="21:37"><expr pos:start="21:29" pos:end="21:37"><literal type="string" pos:start="21:29" pos:end="21:37">"&lt;Stream"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:41" pos:end="73:5">{<block_content pos:start="23:9" pos:end="71:17">

        <decl_stmt pos:start="23:9" pos:end="23:16"><decl pos:start="23:9" pos:end="23:15"><type pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:12">char</name> <modifier pos:start="23:14" pos:end="23:14">*</modifier></type><name pos:start="23:15" pos:end="23:15">q</name></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:26"><decl pos:start="25:9" pos:end="25:25"><type pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:22">FFServerStream</name> <modifier pos:start="25:24" pos:end="25:24">*</modifier></type><name pos:start="25:25" pos:end="25:25">s</name></decl>;</decl_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:52"><expr pos:start="27:9" pos:end="27:51"><name pos:start="27:9" pos:end="27:14">stream</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:51"><name pos:start="27:18" pos:end="27:27">av_mallocz</name><argument_list pos:start="27:28" pos:end="27:51">(<argument pos:start="27:29" pos:end="27:50"><expr pos:start="27:29" pos:end="27:50"><sizeof pos:start="27:29" pos:end="27:50">sizeof<argument_list pos:start="27:35" pos:end="27:50">(<argument pos:start="27:36" pos:end="27:49"><expr pos:start="27:36" pos:end="27:49"><name pos:start="27:36" pos:end="27:49">FFServerStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="31:35"><if pos:start="29:9" pos:end="31:35">if <condition pos:start="29:12" pos:end="29:20">(<expr pos:start="29:13" pos:end="29:19"><operator pos:start="29:13" pos:end="29:13">!</operator><name pos:start="29:14" pos:end="29:19">stream</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:35"><block_content pos:start="31:13" pos:end="31:35">

            <return pos:start="31:13" pos:end="31:35">return <expr pos:start="31:20" pos:end="31:34"><call pos:start="31:20" pos:end="31:34"><name pos:start="31:20" pos:end="31:26">AVERROR</name><argument_list pos:start="31:27" pos:end="31:34">(<argument pos:start="31:28" pos:end="31:33"><expr pos:start="31:28" pos:end="31:33"><name pos:start="31:28" pos:end="31:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:72"><expr pos:start="33:9" pos:end="33:71"><call pos:start="33:9" pos:end="33:71"><name pos:start="33:9" pos:end="33:24">ffserver_get_arg</name><argument_list pos:start="33:25" pos:end="33:71">(<argument pos:start="33:26" pos:end="33:41"><expr pos:start="33:26" pos:end="33:41"><name pos:start="33:26" pos:end="33:41"><name pos:start="33:26" pos:end="33:31">stream</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:41">filename</name></name></expr></argument>, <argument pos:start="33:44" pos:end="33:67"><expr pos:start="33:44" pos:end="33:67"><sizeof pos:start="33:44" pos:end="33:67">sizeof<argument_list pos:start="33:50" pos:end="33:67">(<argument pos:start="33:51" pos:end="33:66"><expr pos:start="33:51" pos:end="33:66"><name pos:start="33:51" pos:end="33:66"><name pos:start="33:51" pos:end="33:56">stream</name><operator pos:start="33:57" pos:end="33:58">-&gt;</operator><name pos:start="33:59" pos:end="33:66">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:70" pos:end="33:70"><expr pos:start="33:70" pos:end="33:70"><name pos:start="33:70" pos:end="33:70">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:43"><expr pos:start="35:9" pos:end="35:42"><name pos:start="35:9" pos:end="35:9">q</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <call pos:start="35:13" pos:end="35:42"><name pos:start="35:13" pos:end="35:19">strrchr</name><argument_list pos:start="35:20" pos:end="35:42">(<argument pos:start="35:21" pos:end="35:36"><expr pos:start="35:21" pos:end="35:36"><name pos:start="35:21" pos:end="35:36"><name pos:start="35:21" pos:end="35:26">stream</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:36">filename</name></name></expr></argument>, <argument pos:start="35:39" pos:end="35:41"><expr pos:start="35:39" pos:end="35:41"><literal type="char" pos:start="35:39" pos:end="35:41">'&gt;'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="39:22"><if pos:start="37:9" pos:end="39:22">if <condition pos:start="37:12" pos:end="37:14">(<expr pos:start="37:13" pos:end="37:13"><name pos:start="37:13" pos:end="37:13">q</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:22"><block_content pos:start="39:13" pos:end="39:22">

            <expr_stmt pos:start="39:13" pos:end="39:22"><expr pos:start="39:13" pos:end="39:21"><operator pos:start="39:13" pos:end="39:13">*</operator><name pos:start="39:14" pos:end="39:14">q</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="char" pos:start="39:18" pos:end="39:21">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <for pos:start="43:9" pos:end="49:9">for <control pos:start="43:13" pos:end="43:54">(<init pos:start="43:14" pos:end="43:38"><expr pos:start="43:14" pos:end="43:37"><name pos:start="43:14" pos:end="43:14">s</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <name pos:start="43:18" pos:end="43:37"><name pos:start="43:18" pos:end="43:23">config</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:37">first_stream</name></name></expr>;</init> <condition pos:start="43:40" pos:end="43:41"><expr pos:start="43:40" pos:end="43:40"><name pos:start="43:40" pos:end="43:40">s</name></expr>;</condition> <incr pos:start="43:43" pos:end="43:53"><expr pos:start="43:43" pos:end="43:53"><name pos:start="43:43" pos:end="43:43">s</name> <operator pos:start="43:45" pos:end="43:45">=</operator> <name pos:start="43:47" pos:end="43:53"><name pos:start="43:47" pos:end="43:47">s</name><operator pos:start="43:48" pos:end="43:49">-&gt;</operator><name pos:start="43:50" pos:end="43:53">next</name></name></expr></incr>)</control> <block pos:start="43:56" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:71">

            <if_stmt pos:start="45:13" pos:end="47:71"><if pos:start="45:13" pos:end="47:71">if <condition pos:start="45:16" pos:end="45:55">(<expr pos:start="45:17" pos:end="45:54"><operator pos:start="45:17" pos:end="45:17">!</operator><call pos:start="45:18" pos:end="45:54"><name pos:start="45:18" pos:end="45:23">strcmp</name><argument_list pos:start="45:24" pos:end="45:54">(<argument pos:start="45:25" pos:end="45:40"><expr pos:start="45:25" pos:end="45:40"><name pos:start="45:25" pos:end="45:40"><name pos:start="45:25" pos:end="45:30">stream</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:40">filename</name></name></expr></argument>, <argument pos:start="45:43" pos:end="45:53"><expr pos:start="45:43" pos:end="45:53"><name pos:start="45:43" pos:end="45:53"><name pos:start="45:43" pos:end="45:43">s</name><operator pos:start="45:44" pos:end="45:45">-&gt;</operator><name pos:start="45:46" pos:end="45:53">filename</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:71"><block_content pos:start="47:17" pos:end="47:71">

                <expr_stmt pos:start="47:17" pos:end="47:71"><expr pos:start="47:17" pos:end="47:70"><call pos:start="47:17" pos:end="47:70"><name pos:start="47:17" pos:end="47:21">ERROR</name><argument_list pos:start="47:22" pos:end="47:70">(<argument pos:start="47:23" pos:end="47:56"><expr pos:start="47:23" pos:end="47:56"><literal type="string" pos:start="47:23" pos:end="47:56">"Stream '%s' already registered\n"</literal></expr></argument>, <argument pos:start="47:59" pos:end="47:69"><expr pos:start="47:59" pos:end="47:69"><name pos:start="47:59" pos:end="47:69"><name pos:start="47:59" pos:end="47:59">s</name><operator pos:start="47:60" pos:end="47:61">-&gt;</operator><name pos:start="47:62" pos:end="47:69">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="53:9" pos:end="53:74"><expr pos:start="53:9" pos:end="53:73"><name pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:14">stream</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:19">fmt</name></name> <operator pos:start="53:21" pos:end="53:21">=</operator> <call pos:start="53:23" pos:end="53:73"><name pos:start="53:23" pos:end="53:43">ffserver_guess_format</name><argument_list pos:start="53:44" pos:end="53:73">(<argument pos:start="53:45" pos:end="53:48"><expr pos:start="53:45" pos:end="53:48"><name pos:start="53:45" pos:end="53:48">NULL</name></expr></argument>, <argument pos:start="53:51" pos:end="53:66"><expr pos:start="53:51" pos:end="53:66"><name pos:start="53:51" pos:end="53:66"><name pos:start="53:51" pos:end="53:56">stream</name><operator pos:start="53:57" pos:end="53:58">-&gt;</operator><name pos:start="53:59" pos:end="53:66">filename</name></name></expr></argument>, <argument pos:start="53:69" pos:end="53:72"><expr pos:start="53:69" pos:end="53:72"><name pos:start="53:69" pos:end="53:72">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="67:9"><if pos:start="55:9" pos:end="61:9">if <condition pos:start="55:12" pos:end="55:24">(<expr pos:start="55:13" pos:end="55:23"><name pos:start="55:13" pos:end="55:23"><name pos:start="55:13" pos:end="55:18">stream</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:23">fmt</name></name></expr>)</condition> <block pos:start="55:26" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:56">

            <expr_stmt pos:start="57:13" pos:end="57:56"><expr pos:start="57:13" pos:end="57:55"><name pos:start="57:13" pos:end="57:28"><name pos:start="57:13" pos:end="57:18">config</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:28">audio_id</name></name> <operator pos:start="57:30" pos:end="57:30">=</operator> <name pos:start="57:32" pos:end="57:55"><name pos:start="57:32" pos:end="57:37">stream</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:42">fmt</name><operator pos:start="57:43" pos:end="57:44">-&gt;</operator><name pos:start="57:45" pos:end="57:55">audio_codec</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:56"><expr pos:start="59:13" pos:end="59:55"><name pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:18">config</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:28">video_id</name></name> <operator pos:start="59:30" pos:end="59:30">=</operator> <name pos:start="59:32" pos:end="59:55"><name pos:start="59:32" pos:end="59:37">stream</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:42">fmt</name><operator pos:start="59:43" pos:end="59:44">-&gt;</operator><name pos:start="59:45" pos:end="59:55">video_codec</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="67:9">else <block pos:start="61:16" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:48">

            <expr_stmt pos:start="63:13" pos:end="63:48"><expr pos:start="63:13" pos:end="63:47"><name pos:start="63:13" pos:end="63:28"><name pos:start="63:13" pos:end="63:18">config</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:28">audio_id</name></name> <operator pos:start="63:30" pos:end="63:30">=</operator> <name pos:start="63:32" pos:end="63:47">AV_CODEC_ID_NONE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:48"><expr pos:start="65:13" pos:end="65:47"><name pos:start="65:13" pos:end="65:28"><name pos:start="65:13" pos:end="65:18">config</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:28">video_id</name></name> <operator pos:start="65:30" pos:end="65:30">=</operator> <name pos:start="65:32" pos:end="65:47">AV_CODEC_ID_NONE</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:26"><expr pos:start="69:9" pos:end="69:25"><operator pos:start="69:9" pos:end="69:9">*</operator><name pos:start="69:10" pos:end="69:16">pstream</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:25">stream</name></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:17">return <expr pos:start="71:16" pos:end="71:16"><literal type="number" pos:start="71:16" pos:end="71:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:23"><expr pos:start="75:5" pos:end="75:22"><call pos:start="75:5" pos:end="75:22"><name pos:start="75:5" pos:end="75:14">av_assert0</name><argument_list pos:start="75:15" pos:end="75:22">(<argument pos:start="75:16" pos:end="75:21"><expr pos:start="75:16" pos:end="75:21"><name pos:start="75:16" pos:end="75:21">stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="681:5"><if pos:start="77:5" pos:end="103:5">if <condition pos:start="77:8" pos:end="77:36">(<expr pos:start="77:9" pos:end="77:35"><operator pos:start="77:9" pos:end="77:9">!</operator><call pos:start="77:10" pos:end="77:35"><name pos:start="77:10" pos:end="77:22">av_strcasecmp</name><argument_list pos:start="77:23" pos:end="77:35">(<argument pos:start="77:24" pos:end="77:26"><expr pos:start="77:24" pos:end="77:26"><name pos:start="77:24" pos:end="77:26">cmd</name></expr></argument>, <argument pos:start="77:29" pos:end="77:34"><expr pos:start="77:29" pos:end="77:34"><literal type="string" pos:start="77:29" pos:end="77:34">"Feed"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:38" pos:end="103:5">{<block_content pos:start="79:9" pos:end="101:33">

        <decl_stmt pos:start="79:9" pos:end="79:30"><decl pos:start="79:9" pos:end="79:29"><type pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:22">FFServerStream</name> <modifier pos:start="79:24" pos:end="79:24">*</modifier></type><name pos:start="79:25" pos:end="79:29">sfeed</name></decl>;</decl_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:46"><expr pos:start="81:9" pos:end="81:45"><call pos:start="81:9" pos:end="81:45"><name pos:start="81:9" pos:end="81:24">ffserver_get_arg</name><argument_list pos:start="81:25" pos:end="81:45">(<argument pos:start="81:26" pos:end="81:28"><expr pos:start="81:26" pos:end="81:28"><name pos:start="81:26" pos:end="81:28">arg</name></expr></argument>, <argument pos:start="81:31" pos:end="81:41"><expr pos:start="81:31" pos:end="81:41"><sizeof pos:start="81:31" pos:end="81:41">sizeof<argument_list pos:start="81:37" pos:end="81:41">(<argument pos:start="81:38" pos:end="81:40"><expr pos:start="81:38" pos:end="81:40"><name pos:start="81:38" pos:end="81:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="81:44" pos:end="81:44"><expr pos:start="81:44" pos:end="81:44"><name pos:start="81:44" pos:end="81:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:35"><expr pos:start="83:9" pos:end="83:34"><name pos:start="83:9" pos:end="83:13">sfeed</name> <operator pos:start="83:15" pos:end="83:15">=</operator> <name pos:start="83:17" pos:end="83:34"><name pos:start="83:17" pos:end="83:22">config</name><operator pos:start="83:23" pos:end="83:24">-&gt;</operator><name pos:start="83:25" pos:end="83:34">first_feed</name></name></expr>;</expr_stmt>

        <while pos:start="85:9" pos:end="93:9">while <condition pos:start="85:15" pos:end="85:21">(<expr pos:start="85:16" pos:end="85:20"><name pos:start="85:16" pos:end="85:20">sfeed</name></expr>)</condition> <block pos:start="85:23" pos:end="93:9">{<block_content pos:start="87:13" pos:end="91:37">

            <if_stmt pos:start="87:13" pos:end="89:22"><if pos:start="87:13" pos:end="89:22">if <condition pos:start="87:16" pos:end="87:46">(<expr pos:start="87:17" pos:end="87:45"><operator pos:start="87:17" pos:end="87:17">!</operator><call pos:start="87:18" pos:end="87:45"><name pos:start="87:18" pos:end="87:23">strcmp</name><argument_list pos:start="87:24" pos:end="87:45">(<argument pos:start="87:25" pos:end="87:39"><expr pos:start="87:25" pos:end="87:39"><name pos:start="87:25" pos:end="87:39"><name pos:start="87:25" pos:end="87:29">sfeed</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:39">filename</name></name></expr></argument>, <argument pos:start="87:42" pos:end="87:44"><expr pos:start="87:42" pos:end="87:44"><name pos:start="87:42" pos:end="87:44">arg</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="89:17" pos:end="89:22"><block_content pos:start="89:17" pos:end="89:22">

                <break pos:start="89:17" pos:end="89:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:37"><expr pos:start="91:13" pos:end="91:36"><name pos:start="91:13" pos:end="91:17">sfeed</name> <operator pos:start="91:19" pos:end="91:19">=</operator> <name pos:start="91:21" pos:end="91:36"><name pos:start="91:21" pos:end="91:25">sfeed</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:36">next_feed</name></name></expr>;</expr_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="95:9" pos:end="101:33"><if pos:start="95:9" pos:end="97:97">if <condition pos:start="95:12" pos:end="95:19">(<expr pos:start="95:13" pos:end="95:18"><operator pos:start="95:13" pos:end="95:13">!</operator><name pos:start="95:14" pos:end="95:18">sfeed</name></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:97"><block_content pos:start="97:13" pos:end="97:97">

            <expr_stmt pos:start="97:13" pos:end="97:97"><expr pos:start="97:13" pos:end="97:96"><call pos:start="97:13" pos:end="97:96"><name pos:start="97:13" pos:end="97:17">ERROR</name><argument_list pos:start="97:18" pos:end="97:96">(<argument pos:start="97:19" pos:end="97:72"><expr pos:start="97:19" pos:end="97:72"><literal type="string" pos:start="97:19" pos:end="97:72">"Feed with name '%s' for stream '%s' is not defined\n"</literal></expr></argument>, <argument pos:start="97:75" pos:end="97:77"><expr pos:start="97:75" pos:end="97:77"><name pos:start="97:75" pos:end="97:77">arg</name></expr></argument>, <argument pos:start="97:80" pos:end="97:95"><expr pos:start="97:80" pos:end="97:95"><name pos:start="97:80" pos:end="97:95"><name pos:start="97:80" pos:end="97:85">stream</name><operator pos:start="97:86" pos:end="97:87">-&gt;</operator><name pos:start="97:88" pos:end="97:95">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="99:9" pos:end="101:33">else<block type="pseudo" pos:start="101:13" pos:end="101:33"><block_content pos:start="101:13" pos:end="101:33">

            <expr_stmt pos:start="101:13" pos:end="101:33"><expr pos:start="101:13" pos:end="101:32"><name pos:start="101:13" pos:end="101:24"><name pos:start="101:13" pos:end="101:18">stream</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:24">feed</name></name> <operator pos:start="101:26" pos:end="101:26">=</operator> <name pos:start="101:28" pos:end="101:32">sfeed</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="103:7" pos:end="139:5">else if <condition pos:start="103:15" pos:end="103:45">(<expr pos:start="103:16" pos:end="103:44"><operator pos:start="103:16" pos:end="103:16">!</operator><call pos:start="103:17" pos:end="103:44"><name pos:start="103:17" pos:end="103:29">av_strcasecmp</name><argument_list pos:start="103:30" pos:end="103:44">(<argument pos:start="103:31" pos:end="103:33"><expr pos:start="103:31" pos:end="103:33"><name pos:start="103:31" pos:end="103:33">cmd</name></expr></argument>, <argument pos:start="103:36" pos:end="103:43"><expr pos:start="103:36" pos:end="103:43"><literal type="string" pos:start="103:36" pos:end="103:43">"Format"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="103:47" pos:end="139:5">{<block_content pos:start="105:9" pos:end="137:9">

        <expr_stmt pos:start="105:9" pos:end="105:46"><expr pos:start="105:9" pos:end="105:45"><call pos:start="105:9" pos:end="105:45"><name pos:start="105:9" pos:end="105:24">ffserver_get_arg</name><argument_list pos:start="105:25" pos:end="105:45">(<argument pos:start="105:26" pos:end="105:28"><expr pos:start="105:26" pos:end="105:28"><name pos:start="105:26" pos:end="105:28">arg</name></expr></argument>, <argument pos:start="105:31" pos:end="105:41"><expr pos:start="105:31" pos:end="105:41"><sizeof pos:start="105:31" pos:end="105:41">sizeof<argument_list pos:start="105:37" pos:end="105:41">(<argument pos:start="105:38" pos:end="105:40"><expr pos:start="105:38" pos:end="105:40"><name pos:start="105:38" pos:end="105:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="105:44" pos:end="105:44"><expr pos:start="105:44" pos:end="105:44"><name pos:start="105:44" pos:end="105:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="129:9"><if pos:start="107:9" pos:end="113:9">if <condition pos:start="107:12" pos:end="107:35">(<expr pos:start="107:13" pos:end="107:34"><operator pos:start="107:13" pos:end="107:13">!</operator><call pos:start="107:14" pos:end="107:34"><name pos:start="107:14" pos:end="107:19">strcmp</name><argument_list pos:start="107:20" pos:end="107:34">(<argument pos:start="107:21" pos:end="107:23"><expr pos:start="107:21" pos:end="107:23"><name pos:start="107:21" pos:end="107:23">arg</name></expr></argument>, <argument pos:start="107:26" pos:end="107:33"><expr pos:start="107:26" pos:end="107:33"><literal type="string" pos:start="107:26" pos:end="107:33">"status"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:37" pos:end="113:9">{<block_content pos:start="109:13" pos:end="111:31">

            <expr_stmt pos:start="109:13" pos:end="109:53"><expr pos:start="109:13" pos:end="109:52"><name pos:start="109:13" pos:end="109:31"><name pos:start="109:13" pos:end="109:18">stream</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:31">stream_type</name></name> <operator pos:start="109:33" pos:end="109:33">=</operator> <name pos:start="109:35" pos:end="109:52">STREAM_TYPE_STATUS</name></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:31"><expr pos:start="111:13" pos:end="111:30"><name pos:start="111:13" pos:end="111:23"><name pos:start="111:13" pos:end="111:18">stream</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:23">fmt</name></name> <operator pos:start="111:25" pos:end="111:25">=</operator> <name pos:start="111:27" pos:end="111:30">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="113:11" pos:end="129:9">else <block pos:start="113:16" pos:end="129:9">{<block_content pos:start="115:13" pos:end="127:51">

            <expr_stmt pos:start="115:13" pos:end="115:51"><expr pos:start="115:13" pos:end="115:50"><name pos:start="115:13" pos:end="115:31"><name pos:start="115:13" pos:end="115:18">stream</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:31">stream_type</name></name> <operator pos:start="115:33" pos:end="115:33">=</operator> <name pos:start="115:35" pos:end="115:50">STREAM_TYPE_LIVE</name></expr>;</expr_stmt>

            <comment type="block" pos:start="117:13" pos:end="117:69">/* JPEG cannot be used here, so use single frame MJPEG */</comment>

            <if_stmt pos:start="119:13" pos:end="121:37"><if pos:start="119:13" pos:end="121:37">if <condition pos:start="119:16" pos:end="119:37">(<expr pos:start="119:17" pos:end="119:36"><operator pos:start="119:17" pos:end="119:17">!</operator><call pos:start="119:18" pos:end="119:36"><name pos:start="119:18" pos:end="119:23">strcmp</name><argument_list pos:start="119:24" pos:end="119:36">(<argument pos:start="119:25" pos:end="119:27"><expr pos:start="119:25" pos:end="119:27"><name pos:start="119:25" pos:end="119:27">arg</name></expr></argument>, <argument pos:start="119:30" pos:end="119:35"><expr pos:start="119:30" pos:end="119:35"><literal type="string" pos:start="119:30" pos:end="119:35">"jpeg"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="121:17" pos:end="121:37"><block_content pos:start="121:17" pos:end="121:37">

                <expr_stmt pos:start="121:17" pos:end="121:37"><expr pos:start="121:17" pos:end="121:36"><call pos:start="121:17" pos:end="121:36"><name pos:start="121:17" pos:end="121:22">strcpy</name><argument_list pos:start="121:23" pos:end="121:36">(<argument pos:start="121:24" pos:end="121:26"><expr pos:start="121:24" pos:end="121:26"><name pos:start="121:24" pos:end="121:26">arg</name></expr></argument>, <argument pos:start="121:29" pos:end="121:35"><expr pos:start="121:29" pos:end="121:35"><literal type="string" pos:start="121:29" pos:end="121:35">"mjpeg"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:65"><expr pos:start="123:13" pos:end="123:64"><name pos:start="123:13" pos:end="123:23"><name pos:start="123:13" pos:end="123:18">stream</name><operator pos:start="123:19" pos:end="123:20">-&gt;</operator><name pos:start="123:21" pos:end="123:23">fmt</name></name> <operator pos:start="123:25" pos:end="123:25">=</operator> <call pos:start="123:27" pos:end="123:64"><name pos:start="123:27" pos:end="123:47">ffserver_guess_format</name><argument_list pos:start="123:48" pos:end="123:64">(<argument pos:start="123:49" pos:end="123:51"><expr pos:start="123:49" pos:end="123:51"><name pos:start="123:49" pos:end="123:51">arg</name></expr></argument>, <argument pos:start="123:54" pos:end="123:57"><expr pos:start="123:54" pos:end="123:57"><name pos:start="123:54" pos:end="123:57">NULL</name></expr></argument>, <argument pos:start="123:60" pos:end="123:63"><expr pos:start="123:60" pos:end="123:63"><name pos:start="123:60" pos:end="123:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="125:13" pos:end="127:51"><if pos:start="125:13" pos:end="127:51">if <condition pos:start="125:16" pos:end="125:29">(<expr pos:start="125:17" pos:end="125:28"><operator pos:start="125:17" pos:end="125:17">!</operator><name pos:start="125:18" pos:end="125:28"><name pos:start="125:18" pos:end="125:23">stream</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:28">fmt</name></name></expr>)</condition><block type="pseudo" pos:start="127:17" pos:end="127:51"><block_content pos:start="127:17" pos:end="127:51">

                <expr_stmt pos:start="127:17" pos:end="127:51"><expr pos:start="127:17" pos:end="127:50"><call pos:start="127:17" pos:end="127:50"><name pos:start="127:17" pos:end="127:21">ERROR</name><argument_list pos:start="127:22" pos:end="127:50">(<argument pos:start="127:23" pos:end="127:44"><expr pos:start="127:23" pos:end="127:44"><literal type="string" pos:start="127:23" pos:end="127:44">"Unknown Format: %s\n"</literal></expr></argument>, <argument pos:start="127:47" pos:end="127:49"><expr pos:start="127:47" pos:end="127:49"><name pos:start="127:47" pos:end="127:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="131:9" pos:end="137:9"><if pos:start="131:9" pos:end="137:9">if <condition pos:start="131:12" pos:end="131:24">(<expr pos:start="131:13" pos:end="131:23"><name pos:start="131:13" pos:end="131:23"><name pos:start="131:13" pos:end="131:18">stream</name><operator pos:start="131:19" pos:end="131:20">-&gt;</operator><name pos:start="131:21" pos:end="131:23">fmt</name></name></expr>)</condition> <block pos:start="131:26" pos:end="137:9">{<block_content pos:start="133:13" pos:end="135:56">

            <expr_stmt pos:start="133:13" pos:end="133:56"><expr pos:start="133:13" pos:end="133:55"><name pos:start="133:13" pos:end="133:28"><name pos:start="133:13" pos:end="133:18">config</name><operator pos:start="133:19" pos:end="133:20">-&gt;</operator><name pos:start="133:21" pos:end="133:28">audio_id</name></name> <operator pos:start="133:30" pos:end="133:30">=</operator> <name pos:start="133:32" pos:end="133:55"><name pos:start="133:32" pos:end="133:37">stream</name><operator pos:start="133:38" pos:end="133:39">-&gt;</operator><name pos:start="133:40" pos:end="133:42">fmt</name><operator pos:start="133:43" pos:end="133:44">-&gt;</operator><name pos:start="133:45" pos:end="133:55">audio_codec</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:56"><expr pos:start="135:13" pos:end="135:55"><name pos:start="135:13" pos:end="135:28"><name pos:start="135:13" pos:end="135:18">config</name><operator pos:start="135:19" pos:end="135:20">-&gt;</operator><name pos:start="135:21" pos:end="135:28">video_id</name></name> <operator pos:start="135:30" pos:end="135:30">=</operator> <name pos:start="135:32" pos:end="135:55"><name pos:start="135:32" pos:end="135:37">stream</name><operator pos:start="135:38" pos:end="135:39">-&gt;</operator><name pos:start="135:40" pos:end="135:42">fmt</name><operator pos:start="135:43" pos:end="135:44">-&gt;</operator><name pos:start="135:45" pos:end="135:55">video_codec</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="139:7" pos:end="149:5">else if <condition pos:start="139:15" pos:end="139:50">(<expr pos:start="139:16" pos:end="139:49"><operator pos:start="139:16" pos:end="139:16">!</operator><call pos:start="139:17" pos:end="139:49"><name pos:start="139:17" pos:end="139:29">av_strcasecmp</name><argument_list pos:start="139:30" pos:end="139:49">(<argument pos:start="139:31" pos:end="139:33"><expr pos:start="139:31" pos:end="139:33"><name pos:start="139:31" pos:end="139:33">cmd</name></expr></argument>, <argument pos:start="139:36" pos:end="139:48"><expr pos:start="139:36" pos:end="139:48"><literal type="string" pos:start="139:36" pos:end="139:48">"InputFormat"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="139:52" pos:end="149:5">{<block_content pos:start="141:9" pos:end="147:53">

        <expr_stmt pos:start="141:9" pos:end="141:46"><expr pos:start="141:9" pos:end="141:45"><call pos:start="141:9" pos:end="141:45"><name pos:start="141:9" pos:end="141:24">ffserver_get_arg</name><argument_list pos:start="141:25" pos:end="141:45">(<argument pos:start="141:26" pos:end="141:28"><expr pos:start="141:26" pos:end="141:28"><name pos:start="141:26" pos:end="141:28">arg</name></expr></argument>, <argument pos:start="141:31" pos:end="141:41"><expr pos:start="141:31" pos:end="141:41"><sizeof pos:start="141:31" pos:end="141:41">sizeof<argument_list pos:start="141:37" pos:end="141:41">(<argument pos:start="141:38" pos:end="141:40"><expr pos:start="141:38" pos:end="141:40"><name pos:start="141:38" pos:end="141:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="141:44" pos:end="141:44"><expr pos:start="141:44" pos:end="141:44"><name pos:start="141:44" pos:end="141:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:49"><expr pos:start="143:9" pos:end="143:48"><name pos:start="143:9" pos:end="143:20"><name pos:start="143:9" pos:end="143:14">stream</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:20">ifmt</name></name> <operator pos:start="143:22" pos:end="143:22">=</operator> <call pos:start="143:24" pos:end="143:48"><name pos:start="143:24" pos:end="143:43">av_find_input_format</name><argument_list pos:start="143:44" pos:end="143:48">(<argument pos:start="143:45" pos:end="143:47"><expr pos:start="143:45" pos:end="143:47"><name pos:start="143:45" pos:end="143:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="145:9" pos:end="147:53"><if pos:start="145:9" pos:end="147:53">if <condition pos:start="145:12" pos:end="145:26">(<expr pos:start="145:13" pos:end="145:25"><operator pos:start="145:13" pos:end="145:13">!</operator><name pos:start="145:14" pos:end="145:25"><name pos:start="145:14" pos:end="145:19">stream</name><operator pos:start="145:20" pos:end="145:21">-&gt;</operator><name pos:start="145:22" pos:end="145:25">ifmt</name></name></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="147:53"><block_content pos:start="147:13" pos:end="147:53">

            <expr_stmt pos:start="147:13" pos:end="147:53"><expr pos:start="147:13" pos:end="147:52"><call pos:start="147:13" pos:end="147:52"><name pos:start="147:13" pos:end="147:17">ERROR</name><argument_list pos:start="147:18" pos:end="147:52">(<argument pos:start="147:19" pos:end="147:46"><expr pos:start="147:19" pos:end="147:46"><literal type="string" pos:start="147:19" pos:end="147:46">"Unknown input format: %s\n"</literal></expr></argument>, <argument pos:start="147:49" pos:end="147:51"><expr pos:start="147:49" pos:end="147:51"><name pos:start="147:49" pos:end="147:51">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="149:7" pos:end="159:5">else if <condition pos:start="149:15" pos:end="149:49">(<expr pos:start="149:16" pos:end="149:48"><operator pos:start="149:16" pos:end="149:16">!</operator><call pos:start="149:17" pos:end="149:48"><name pos:start="149:17" pos:end="149:29">av_strcasecmp</name><argument_list pos:start="149:30" pos:end="149:48">(<argument pos:start="149:31" pos:end="149:33"><expr pos:start="149:31" pos:end="149:33"><name pos:start="149:31" pos:end="149:33">cmd</name></expr></argument>, <argument pos:start="149:36" pos:end="149:47"><expr pos:start="149:36" pos:end="149:47"><literal type="string" pos:start="149:36" pos:end="149:47">"FaviconURL"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="149:51" pos:end="159:5">{<block_content pos:start="151:9" pos:end="157:68">

        <if_stmt pos:start="151:9" pos:end="157:68"><if pos:start="151:9" pos:end="153:86">if <condition pos:start="151:12" pos:end="151:54">(<expr pos:start="151:13" pos:end="151:53"><name pos:start="151:13" pos:end="151:31"><name pos:start="151:13" pos:end="151:18">stream</name><operator pos:start="151:19" pos:end="151:20">-&gt;</operator><name pos:start="151:21" pos:end="151:31">stream_type</name></name> <operator pos:start="151:33" pos:end="151:34">==</operator> <name pos:start="151:36" pos:end="151:53">STREAM_TYPE_STATUS</name></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:86"><block_content pos:start="153:13" pos:end="153:86">

            <expr_stmt pos:start="153:13" pos:end="153:86"><expr pos:start="153:13" pos:end="153:85"><call pos:start="153:13" pos:end="153:85"><name pos:start="153:13" pos:end="153:28">ffserver_get_arg</name><argument_list pos:start="153:29" pos:end="153:85">(<argument pos:start="153:30" pos:end="153:50"><expr pos:start="153:30" pos:end="153:50"><name pos:start="153:30" pos:end="153:50"><name pos:start="153:30" pos:end="153:35">stream</name><operator pos:start="153:36" pos:end="153:37">-&gt;</operator><name pos:start="153:38" pos:end="153:50">feed_filename</name></name></expr></argument>, <argument pos:start="153:53" pos:end="153:81"><expr pos:start="153:53" pos:end="153:81"><sizeof pos:start="153:53" pos:end="153:81">sizeof<argument_list pos:start="153:59" pos:end="153:81">(<argument pos:start="153:60" pos:end="153:80"><expr pos:start="153:60" pos:end="153:80"><name pos:start="153:60" pos:end="153:80"><name pos:start="153:60" pos:end="153:65">stream</name><operator pos:start="153:66" pos:end="153:67">-&gt;</operator><name pos:start="153:68" pos:end="153:80">feed_filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="153:84" pos:end="153:84"><expr pos:start="153:84" pos:end="153:84"><name pos:start="153:84" pos:end="153:84">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="155:9" pos:end="157:68">else<block type="pseudo" pos:start="157:13" pos:end="157:68"><block_content pos:start="157:13" pos:end="157:68">

            <expr_stmt pos:start="157:13" pos:end="157:68"><expr pos:start="157:13" pos:end="157:67"><call pos:start="157:13" pos:end="157:67"><name pos:start="157:13" pos:end="157:17">ERROR</name><argument_list pos:start="157:18" pos:end="157:67">(<argument pos:start="157:19" pos:end="157:66"><expr pos:start="157:19" pos:end="157:66"><literal type="string" pos:start="157:19" pos:end="157:66">"FaviconURL only permitted for status streams\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="159:7" pos:end="187:5">else if <condition pos:start="159:15" pos:end="165:44">(<expr pos:start="159:16" pos:end="165:43"><operator pos:start="159:16" pos:end="159:16">!</operator><call pos:start="159:17" pos:end="159:44"><name pos:start="159:17" pos:end="159:29">av_strcasecmp</name><argument_list pos:start="159:30" pos:end="159:44">(<argument pos:start="159:31" pos:end="159:33"><expr pos:start="159:31" pos:end="159:33"><name pos:start="159:31" pos:end="159:33">cmd</name></expr></argument>, <argument pos:start="159:36" pos:end="159:43"><expr pos:start="159:36" pos:end="159:43"><literal type="string" pos:start="159:36" pos:end="159:43">"Author"</literal></expr></argument>)</argument_list></call>    <operator pos:start="159:49" pos:end="159:50">||</operator>

               <operator pos:start="161:16" pos:end="161:16">!</operator><call pos:start="161:17" pos:end="161:45"><name pos:start="161:17" pos:end="161:29">av_strcasecmp</name><argument_list pos:start="161:30" pos:end="161:45">(<argument pos:start="161:31" pos:end="161:33"><expr pos:start="161:31" pos:end="161:33"><name pos:start="161:31" pos:end="161:33">cmd</name></expr></argument>, <argument pos:start="161:36" pos:end="161:44"><expr pos:start="161:36" pos:end="161:44"><literal type="string" pos:start="161:36" pos:end="161:44">"Comment"</literal></expr></argument>)</argument_list></call>   <operator pos:start="161:49" pos:end="161:50">||</operator>

               <operator pos:start="163:16" pos:end="163:16">!</operator><call pos:start="163:17" pos:end="163:47"><name pos:start="163:17" pos:end="163:29">av_strcasecmp</name><argument_list pos:start="163:30" pos:end="163:47">(<argument pos:start="163:31" pos:end="163:33"><expr pos:start="163:31" pos:end="163:33"><name pos:start="163:31" pos:end="163:33">cmd</name></expr></argument>, <argument pos:start="163:36" pos:end="163:46"><expr pos:start="163:36" pos:end="163:46"><literal type="string" pos:start="163:36" pos:end="163:46">"Copyright"</literal></expr></argument>)</argument_list></call> <operator pos:start="163:49" pos:end="163:50">||</operator>

               <operator pos:start="165:16" pos:end="165:16">!</operator><call pos:start="165:17" pos:end="165:43"><name pos:start="165:17" pos:end="165:29">av_strcasecmp</name><argument_list pos:start="165:30" pos:end="165:43">(<argument pos:start="165:31" pos:end="165:33"><expr pos:start="165:31" pos:end="165:33"><name pos:start="165:31" pos:end="165:33">cmd</name></expr></argument>, <argument pos:start="165:36" pos:end="165:42"><expr pos:start="165:36" pos:end="165:42"><literal type="string" pos:start="165:36" pos:end="165:42">"Title"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="165:46" pos:end="187:5">{<block_content pos:start="167:9" pos:end="185:23">

        <decl_stmt pos:start="167:9" pos:end="167:21"><decl pos:start="167:9" pos:end="167:20"><type pos:start="167:9" pos:end="167:12"><name pos:start="167:9" pos:end="167:12">char</name></type> <name pos:start="167:14" pos:end="167:20"><name pos:start="167:14" pos:end="167:16">key</name><index pos:start="167:17" pos:end="167:20">[<expr pos:start="167:18" pos:end="167:19"><literal type="number" pos:start="167:18" pos:end="167:19">32</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="169:9" pos:end="169:14"><decl pos:start="169:9" pos:end="169:13"><type pos:start="169:9" pos:end="169:11"><name pos:start="169:9" pos:end="169:11">int</name></type> <name pos:start="169:13" pos:end="169:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:46"><expr pos:start="171:9" pos:end="171:45"><call pos:start="171:9" pos:end="171:45"><name pos:start="171:9" pos:end="171:24">ffserver_get_arg</name><argument_list pos:start="171:25" pos:end="171:45">(<argument pos:start="171:26" pos:end="171:28"><expr pos:start="171:26" pos:end="171:28"><name pos:start="171:26" pos:end="171:28">arg</name></expr></argument>, <argument pos:start="171:31" pos:end="171:41"><expr pos:start="171:31" pos:end="171:41"><sizeof pos:start="171:31" pos:end="171:41">sizeof<argument_list pos:start="171:37" pos:end="171:41">(<argument pos:start="171:38" pos:end="171:40"><expr pos:start="171:38" pos:end="171:40"><name pos:start="171:38" pos:end="171:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="171:44" pos:end="171:44"><expr pos:start="171:44" pos:end="171:44"><name pos:start="171:44" pos:end="171:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="173:9" pos:end="175:40">for <control pos:start="173:13" pos:end="173:41">(<init pos:start="173:14" pos:end="173:19"><expr pos:start="173:14" pos:end="173:18"><name pos:start="173:14" pos:end="173:14">i</name> <operator pos:start="173:16" pos:end="173:16">=</operator> <literal type="number" pos:start="173:18" pos:end="173:18">0</literal></expr>;</init> <condition pos:start="173:21" pos:end="173:36"><expr pos:start="173:21" pos:end="173:35"><name pos:start="173:21" pos:end="173:21">i</name> <operator pos:start="173:23" pos:end="173:23">&lt;</operator> <call pos:start="173:25" pos:end="173:35"><name pos:start="173:25" pos:end="173:30">strlen</name><argument_list pos:start="173:31" pos:end="173:35">(<argument pos:start="173:32" pos:end="173:34"><expr pos:start="173:32" pos:end="173:34"><name pos:start="173:32" pos:end="173:34">cmd</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="173:38" pos:end="173:40"><expr pos:start="173:38" pos:end="173:40"><name pos:start="173:38" pos:end="173:38">i</name><operator pos:start="173:39" pos:end="173:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="175:13" pos:end="175:40"><block_content pos:start="175:13" pos:end="175:40">

            <expr_stmt pos:start="175:13" pos:end="175:40"><expr pos:start="175:13" pos:end="175:39"><name pos:start="175:13" pos:end="175:18"><name pos:start="175:13" pos:end="175:15">key</name><index pos:start="175:16" pos:end="175:18">[<expr pos:start="175:17" pos:end="175:17"><name pos:start="175:17" pos:end="175:17">i</name></expr>]</index></name> <operator pos:start="175:20" pos:end="175:20">=</operator> <call pos:start="175:22" pos:end="175:39"><name pos:start="175:22" pos:end="175:31">av_tolower</name><argument_list pos:start="175:32" pos:end="175:39">(<argument pos:start="175:33" pos:end="175:38"><expr pos:start="175:33" pos:end="175:38"><name pos:start="175:33" pos:end="175:38"><name pos:start="175:33" pos:end="175:35">cmd</name><index pos:start="175:36" pos:end="175:38">[<expr pos:start="175:37" pos:end="175:37"><name pos:start="175:37" pos:end="175:37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="177:9" pos:end="177:19"><expr pos:start="177:9" pos:end="177:18"><name pos:start="177:9" pos:end="177:14"><name pos:start="177:9" pos:end="177:11">key</name><index pos:start="177:12" pos:end="177:14">[<expr pos:start="177:13" pos:end="177:13"><name pos:start="177:13" pos:end="177:13">i</name></expr>]</index></name> <operator pos:start="177:16" pos:end="177:16">=</operator> <literal type="number" pos:start="177:18" pos:end="177:18">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="181:63"><expr pos:start="179:9" pos:end="181:62"><call pos:start="179:9" pos:end="181:62"><name pos:start="179:9" pos:end="179:15">WARNING</name><argument_list pos:start="179:16" pos:end="181:62">(<argument pos:start="179:17" pos:end="181:51"><expr pos:start="179:17" pos:end="181:51"><literal type="string" pos:start="179:17" pos:end="179:67">"'%s' option in configuration file is deprecated, "</literal>

                <literal type="string" pos:start="181:17" pos:end="181:51">"use 'Metadata %s VALUE' instead\n"</literal></expr></argument>, <argument pos:start="181:54" pos:end="181:56"><expr pos:start="181:54" pos:end="181:56"><name pos:start="181:54" pos:end="181:56">cmd</name></expr></argument>, <argument pos:start="181:59" pos:end="181:61"><expr pos:start="181:59" pos:end="181:61"><name pos:start="181:59" pos:end="181:61">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="183:9" pos:end="185:23"><if pos:start="183:9" pos:end="185:23">if <condition pos:start="183:12" pos:end="183:60">(<expr pos:start="183:13" pos:end="183:59"><call pos:start="183:13" pos:end="183:55"><name pos:start="183:13" pos:end="183:23">av_dict_set</name><argument_list pos:start="183:24" pos:end="183:55">(<argument pos:start="183:25" pos:end="183:41"><expr pos:start="183:25" pos:end="183:41"><operator pos:start="183:25" pos:end="183:25">&amp;</operator><name pos:start="183:26" pos:end="183:41"><name pos:start="183:26" pos:end="183:31">stream</name><operator pos:start="183:32" pos:end="183:33">-&gt;</operator><name pos:start="183:34" pos:end="183:41">metadata</name></name></expr></argument>, <argument pos:start="183:44" pos:end="183:46"><expr pos:start="183:44" pos:end="183:46"><name pos:start="183:44" pos:end="183:46">key</name></expr></argument>, <argument pos:start="183:49" pos:end="183:51"><expr pos:start="183:49" pos:end="183:51"><name pos:start="183:49" pos:end="183:51">arg</name></expr></argument>, <argument pos:start="183:54" pos:end="183:54"><expr pos:start="183:54" pos:end="183:54"><literal type="number" pos:start="183:54" pos:end="183:54">0</literal></expr></argument>)</argument_list></call> <operator pos:start="183:57" pos:end="183:57">&lt;</operator> <literal type="number" pos:start="183:59" pos:end="183:59">0</literal></expr>)</condition><block type="pseudo" pos:start="185:13" pos:end="185:23"><block_content pos:start="185:13" pos:end="185:23">

            <goto pos:start="185:13" pos:end="185:23">goto <name pos:start="185:18" pos:end="185:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="187:7" pos:end="197:5">else if <condition pos:start="187:15" pos:end="187:47">(<expr pos:start="187:16" pos:end="187:46"><operator pos:start="187:16" pos:end="187:16">!</operator><call pos:start="187:17" pos:end="187:46"><name pos:start="187:17" pos:end="187:29">av_strcasecmp</name><argument_list pos:start="187:30" pos:end="187:46">(<argument pos:start="187:31" pos:end="187:33"><expr pos:start="187:31" pos:end="187:33"><name pos:start="187:31" pos:end="187:33">cmd</name></expr></argument>, <argument pos:start="187:36" pos:end="187:45"><expr pos:start="187:36" pos:end="187:45"><literal type="string" pos:start="187:36" pos:end="187:45">"Metadata"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="187:49" pos:end="197:5">{<block_content pos:start="189:9" pos:end="195:23">

        <expr_stmt pos:start="189:9" pos:end="189:46"><expr pos:start="189:9" pos:end="189:45"><call pos:start="189:9" pos:end="189:45"><name pos:start="189:9" pos:end="189:24">ffserver_get_arg</name><argument_list pos:start="189:25" pos:end="189:45">(<argument pos:start="189:26" pos:end="189:28"><expr pos:start="189:26" pos:end="189:28"><name pos:start="189:26" pos:end="189:28">arg</name></expr></argument>, <argument pos:start="189:31" pos:end="189:41"><expr pos:start="189:31" pos:end="189:41"><sizeof pos:start="189:31" pos:end="189:41">sizeof<argument_list pos:start="189:37" pos:end="189:41">(<argument pos:start="189:38" pos:end="189:40"><expr pos:start="189:38" pos:end="189:40"><name pos:start="189:38" pos:end="189:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="189:44" pos:end="189:44"><expr pos:start="189:44" pos:end="189:44"><name pos:start="189:44" pos:end="189:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:48"><expr pos:start="191:9" pos:end="191:47"><call pos:start="191:9" pos:end="191:47"><name pos:start="191:9" pos:end="191:24">ffserver_get_arg</name><argument_list pos:start="191:25" pos:end="191:47">(<argument pos:start="191:26" pos:end="191:29"><expr pos:start="191:26" pos:end="191:29"><name pos:start="191:26" pos:end="191:29">arg2</name></expr></argument>, <argument pos:start="191:32" pos:end="191:43"><expr pos:start="191:32" pos:end="191:43"><sizeof pos:start="191:32" pos:end="191:43">sizeof<argument_list pos:start="191:38" pos:end="191:43">(<argument pos:start="191:39" pos:end="191:42"><expr pos:start="191:39" pos:end="191:42"><name pos:start="191:39" pos:end="191:42">arg2</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="191:46" pos:end="191:46"><expr pos:start="191:46" pos:end="191:46"><name pos:start="191:46" pos:end="191:46">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="193:9" pos:end="195:23"><if pos:start="193:9" pos:end="195:23">if <condition pos:start="193:12" pos:end="193:61">(<expr pos:start="193:13" pos:end="193:60"><call pos:start="193:13" pos:end="193:56"><name pos:start="193:13" pos:end="193:23">av_dict_set</name><argument_list pos:start="193:24" pos:end="193:56">(<argument pos:start="193:25" pos:end="193:41"><expr pos:start="193:25" pos:end="193:41"><operator pos:start="193:25" pos:end="193:25">&amp;</operator><name pos:start="193:26" pos:end="193:41"><name pos:start="193:26" pos:end="193:31">stream</name><operator pos:start="193:32" pos:end="193:33">-&gt;</operator><name pos:start="193:34" pos:end="193:41">metadata</name></name></expr></argument>, <argument pos:start="193:44" pos:end="193:46"><expr pos:start="193:44" pos:end="193:46"><name pos:start="193:44" pos:end="193:46">arg</name></expr></argument>, <argument pos:start="193:49" pos:end="193:52"><expr pos:start="193:49" pos:end="193:52"><name pos:start="193:49" pos:end="193:52">arg2</name></expr></argument>, <argument pos:start="193:55" pos:end="193:55"><expr pos:start="193:55" pos:end="193:55"><literal type="number" pos:start="193:55" pos:end="193:55">0</literal></expr></argument>)</argument_list></call> <operator pos:start="193:58" pos:end="193:58">&lt;</operator> <literal type="number" pos:start="193:60" pos:end="193:60">0</literal></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:23"><block_content pos:start="195:13" pos:end="195:23">

            <goto pos:start="195:13" pos:end="195:23">goto <name pos:start="195:18" pos:end="195:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="197:7" pos:end="203:5">else if <condition pos:start="197:15" pos:end="197:46">(<expr pos:start="197:16" pos:end="197:45"><operator pos:start="197:16" pos:end="197:16">!</operator><call pos:start="197:17" pos:end="197:45"><name pos:start="197:17" pos:end="197:29">av_strcasecmp</name><argument_list pos:start="197:30" pos:end="197:45">(<argument pos:start="197:31" pos:end="197:33"><expr pos:start="197:31" pos:end="197:33"><name pos:start="197:31" pos:end="197:33">cmd</name></expr></argument>, <argument pos:start="197:36" pos:end="197:44"><expr pos:start="197:36" pos:end="197:44"><literal type="string" pos:start="197:36" pos:end="197:44">"Preroll"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="197:48" pos:end="203:5">{<block_content pos:start="199:9" pos:end="201:45">

        <expr_stmt pos:start="199:9" pos:end="199:46"><expr pos:start="199:9" pos:end="199:45"><call pos:start="199:9" pos:end="199:45"><name pos:start="199:9" pos:end="199:24">ffserver_get_arg</name><argument_list pos:start="199:25" pos:end="199:45">(<argument pos:start="199:26" pos:end="199:28"><expr pos:start="199:26" pos:end="199:28"><name pos:start="199:26" pos:end="199:28">arg</name></expr></argument>, <argument pos:start="199:31" pos:end="199:41"><expr pos:start="199:31" pos:end="199:41"><sizeof pos:start="199:31" pos:end="199:41">sizeof<argument_list pos:start="199:37" pos:end="199:41">(<argument pos:start="199:38" pos:end="199:40"><expr pos:start="199:38" pos:end="199:40"><name pos:start="199:38" pos:end="199:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="199:44" pos:end="199:44"><expr pos:start="199:44" pos:end="199:44"><name pos:start="199:44" pos:end="199:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:45"><expr pos:start="201:9" pos:end="201:44"><name pos:start="201:9" pos:end="201:25"><name pos:start="201:9" pos:end="201:14">stream</name><operator pos:start="201:15" pos:end="201:16">-&gt;</operator><name pos:start="201:17" pos:end="201:25">prebuffer</name></name> <operator pos:start="201:27" pos:end="201:27">=</operator> <call pos:start="201:29" pos:end="201:37"><name pos:start="201:29" pos:end="201:32">atof</name><argument_list pos:start="201:33" pos:end="201:37">(<argument pos:start="201:34" pos:end="201:36"><expr pos:start="201:34" pos:end="201:36"><name pos:start="201:34" pos:end="201:36">arg</name></expr></argument>)</argument_list></call> <operator pos:start="201:39" pos:end="201:39">*</operator> <literal type="number" pos:start="201:41" pos:end="201:44">1000</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="203:7" pos:end="207:5">else if <condition pos:start="203:15" pos:end="203:53">(<expr pos:start="203:16" pos:end="203:52"><operator pos:start="203:16" pos:end="203:16">!</operator><call pos:start="203:17" pos:end="203:52"><name pos:start="203:17" pos:end="203:29">av_strcasecmp</name><argument_list pos:start="203:30" pos:end="203:52">(<argument pos:start="203:31" pos:end="203:33"><expr pos:start="203:31" pos:end="203:33"><name pos:start="203:31" pos:end="203:33">cmd</name></expr></argument>, <argument pos:start="203:36" pos:end="203:51"><expr pos:start="203:36" pos:end="203:51"><literal type="string" pos:start="203:36" pos:end="203:51">"StartSendOnKey"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="203:55" pos:end="207:5">{<block_content pos:start="205:9" pos:end="205:32">

        <expr_stmt pos:start="205:9" pos:end="205:32"><expr pos:start="205:9" pos:end="205:31"><name pos:start="205:9" pos:end="205:27"><name pos:start="205:9" pos:end="205:14">stream</name><operator pos:start="205:15" pos:end="205:16">-&gt;</operator><name pos:start="205:17" pos:end="205:27">send_on_key</name></name> <operator pos:start="205:29" pos:end="205:29">=</operator> <literal type="number" pos:start="205:31" pos:end="205:31">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="207:7" pos:end="217:5">else if <condition pos:start="207:15" pos:end="207:49">(<expr pos:start="207:16" pos:end="207:48"><operator pos:start="207:16" pos:end="207:16">!</operator><call pos:start="207:17" pos:end="207:48"><name pos:start="207:17" pos:end="207:29">av_strcasecmp</name><argument_list pos:start="207:30" pos:end="207:48">(<argument pos:start="207:31" pos:end="207:33"><expr pos:start="207:31" pos:end="207:33"><name pos:start="207:31" pos:end="207:33">cmd</name></expr></argument>, <argument pos:start="207:36" pos:end="207:47"><expr pos:start="207:36" pos:end="207:47"><literal type="string" pos:start="207:36" pos:end="207:47">"AudioCodec"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="207:51" pos:end="217:5">{<block_content pos:start="209:9" pos:end="215:51">

        <expr_stmt pos:start="209:9" pos:end="209:46"><expr pos:start="209:9" pos:end="209:45"><call pos:start="209:9" pos:end="209:45"><name pos:start="209:9" pos:end="209:24">ffserver_get_arg</name><argument_list pos:start="209:25" pos:end="209:45">(<argument pos:start="209:26" pos:end="209:28"><expr pos:start="209:26" pos:end="209:28"><name pos:start="209:26" pos:end="209:28">arg</name></expr></argument>, <argument pos:start="209:31" pos:end="209:41"><expr pos:start="209:31" pos:end="209:41"><sizeof pos:start="209:31" pos:end="209:41">sizeof<argument_list pos:start="209:37" pos:end="209:41">(<argument pos:start="209:38" pos:end="209:40"><expr pos:start="209:38" pos:end="209:40"><name pos:start="209:38" pos:end="209:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="209:44" pos:end="209:44"><expr pos:start="209:44" pos:end="209:44"><name pos:start="209:44" pos:end="209:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:62"><expr pos:start="211:9" pos:end="211:61"><name pos:start="211:9" pos:end="211:24"><name pos:start="211:9" pos:end="211:14">config</name><operator pos:start="211:15" pos:end="211:16">-&gt;</operator><name pos:start="211:17" pos:end="211:24">audio_id</name></name> <operator pos:start="211:26" pos:end="211:26">=</operator> <call pos:start="211:28" pos:end="211:61"><name pos:start="211:28" pos:end="211:36">opt_codec</name><argument_list pos:start="211:37" pos:end="211:61">(<argument pos:start="211:38" pos:end="211:40"><expr pos:start="211:38" pos:end="211:40"><name pos:start="211:38" pos:end="211:40">arg</name></expr></argument>, <argument pos:start="211:43" pos:end="211:60"><expr pos:start="211:43" pos:end="211:60"><name pos:start="211:43" pos:end="211:60">AVMEDIA_TYPE_AUDIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="213:9" pos:end="215:51"><if pos:start="213:9" pos:end="215:51">if <condition pos:start="213:12" pos:end="213:49">(<expr pos:start="213:13" pos:end="213:48"><name pos:start="213:13" pos:end="213:28"><name pos:start="213:13" pos:end="213:18">config</name><operator pos:start="213:19" pos:end="213:20">-&gt;</operator><name pos:start="213:21" pos:end="213:28">audio_id</name></name> <operator pos:start="213:30" pos:end="213:31">==</operator> <name pos:start="213:33" pos:end="213:48">AV_CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="215:13" pos:end="215:51"><block_content pos:start="215:13" pos:end="215:51">

            <expr_stmt pos:start="215:13" pos:end="215:51"><expr pos:start="215:13" pos:end="215:50"><call pos:start="215:13" pos:end="215:50"><name pos:start="215:13" pos:end="215:17">ERROR</name><argument_list pos:start="215:18" pos:end="215:50">(<argument pos:start="215:19" pos:end="215:44"><expr pos:start="215:19" pos:end="215:44"><literal type="string" pos:start="215:19" pos:end="215:44">"Unknown AudioCodec: %s\n"</literal></expr></argument>, <argument pos:start="215:47" pos:end="215:49"><expr pos:start="215:47" pos:end="215:49"><name pos:start="215:47" pos:end="215:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="217:7" pos:end="227:5">else if <condition pos:start="217:15" pos:end="217:49">(<expr pos:start="217:16" pos:end="217:48"><operator pos:start="217:16" pos:end="217:16">!</operator><call pos:start="217:17" pos:end="217:48"><name pos:start="217:17" pos:end="217:29">av_strcasecmp</name><argument_list pos:start="217:30" pos:end="217:48">(<argument pos:start="217:31" pos:end="217:33"><expr pos:start="217:31" pos:end="217:33"><name pos:start="217:31" pos:end="217:33">cmd</name></expr></argument>, <argument pos:start="217:36" pos:end="217:47"><expr pos:start="217:36" pos:end="217:47"><literal type="string" pos:start="217:36" pos:end="217:47">"VideoCodec"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="217:51" pos:end="227:5">{<block_content pos:start="219:9" pos:end="225:51">

        <expr_stmt pos:start="219:9" pos:end="219:46"><expr pos:start="219:9" pos:end="219:45"><call pos:start="219:9" pos:end="219:45"><name pos:start="219:9" pos:end="219:24">ffserver_get_arg</name><argument_list pos:start="219:25" pos:end="219:45">(<argument pos:start="219:26" pos:end="219:28"><expr pos:start="219:26" pos:end="219:28"><name pos:start="219:26" pos:end="219:28">arg</name></expr></argument>, <argument pos:start="219:31" pos:end="219:41"><expr pos:start="219:31" pos:end="219:41"><sizeof pos:start="219:31" pos:end="219:41">sizeof<argument_list pos:start="219:37" pos:end="219:41">(<argument pos:start="219:38" pos:end="219:40"><expr pos:start="219:38" pos:end="219:40"><name pos:start="219:38" pos:end="219:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="219:44" pos:end="219:44"><expr pos:start="219:44" pos:end="219:44"><name pos:start="219:44" pos:end="219:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:62"><expr pos:start="221:9" pos:end="221:61"><name pos:start="221:9" pos:end="221:24"><name pos:start="221:9" pos:end="221:14">config</name><operator pos:start="221:15" pos:end="221:16">-&gt;</operator><name pos:start="221:17" pos:end="221:24">video_id</name></name> <operator pos:start="221:26" pos:end="221:26">=</operator> <call pos:start="221:28" pos:end="221:61"><name pos:start="221:28" pos:end="221:36">opt_codec</name><argument_list pos:start="221:37" pos:end="221:61">(<argument pos:start="221:38" pos:end="221:40"><expr pos:start="221:38" pos:end="221:40"><name pos:start="221:38" pos:end="221:40">arg</name></expr></argument>, <argument pos:start="221:43" pos:end="221:60"><expr pos:start="221:43" pos:end="221:60"><name pos:start="221:43" pos:end="221:60">AVMEDIA_TYPE_VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="223:9" pos:end="225:51"><if pos:start="223:9" pos:end="225:51">if <condition pos:start="223:12" pos:end="223:49">(<expr pos:start="223:13" pos:end="223:48"><name pos:start="223:13" pos:end="223:28"><name pos:start="223:13" pos:end="223:18">config</name><operator pos:start="223:19" pos:end="223:20">-&gt;</operator><name pos:start="223:21" pos:end="223:28">video_id</name></name> <operator pos:start="223:30" pos:end="223:31">==</operator> <name pos:start="223:33" pos:end="223:48">AV_CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="225:13" pos:end="225:51"><block_content pos:start="225:13" pos:end="225:51">

            <expr_stmt pos:start="225:13" pos:end="225:51"><expr pos:start="225:13" pos:end="225:50"><call pos:start="225:13" pos:end="225:50"><name pos:start="225:13" pos:end="225:17">ERROR</name><argument_list pos:start="225:18" pos:end="225:50">(<argument pos:start="225:19" pos:end="225:44"><expr pos:start="225:19" pos:end="225:44"><literal type="string" pos:start="225:19" pos:end="225:44">"Unknown VideoCodec: %s\n"</literal></expr></argument>, <argument pos:start="225:47" pos:end="225:49"><expr pos:start="225:47" pos:end="225:49"><name pos:start="225:47" pos:end="225:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="227:7" pos:end="233:5">else if <condition pos:start="227:15" pos:end="227:46">(<expr pos:start="227:16" pos:end="227:45"><operator pos:start="227:16" pos:end="227:16">!</operator><call pos:start="227:17" pos:end="227:45"><name pos:start="227:17" pos:end="227:29">av_strcasecmp</name><argument_list pos:start="227:30" pos:end="227:45">(<argument pos:start="227:31" pos:end="227:33"><expr pos:start="227:31" pos:end="227:33"><name pos:start="227:31" pos:end="227:33">cmd</name></expr></argument>, <argument pos:start="227:36" pos:end="227:44"><expr pos:start="227:36" pos:end="227:44"><literal type="string" pos:start="227:36" pos:end="227:44">"MaxTime"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="227:48" pos:end="233:5">{<block_content pos:start="229:9" pos:end="231:44">

        <expr_stmt pos:start="229:9" pos:end="229:46"><expr pos:start="229:9" pos:end="229:45"><call pos:start="229:9" pos:end="229:45"><name pos:start="229:9" pos:end="229:24">ffserver_get_arg</name><argument_list pos:start="229:25" pos:end="229:45">(<argument pos:start="229:26" pos:end="229:28"><expr pos:start="229:26" pos:end="229:28"><name pos:start="229:26" pos:end="229:28">arg</name></expr></argument>, <argument pos:start="229:31" pos:end="229:41"><expr pos:start="229:31" pos:end="229:41"><sizeof pos:start="229:31" pos:end="229:41">sizeof<argument_list pos:start="229:37" pos:end="229:41">(<argument pos:start="229:38" pos:end="229:40"><expr pos:start="229:38" pos:end="229:40"><name pos:start="229:38" pos:end="229:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="229:44" pos:end="229:44"><expr pos:start="229:44" pos:end="229:44"><name pos:start="229:44" pos:end="229:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:44"><expr pos:start="231:9" pos:end="231:43"><name pos:start="231:9" pos:end="231:24"><name pos:start="231:9" pos:end="231:14">stream</name><operator pos:start="231:15" pos:end="231:16">-&gt;</operator><name pos:start="231:17" pos:end="231:24">max_time</name></name> <operator pos:start="231:26" pos:end="231:26">=</operator> <call pos:start="231:28" pos:end="231:36"><name pos:start="231:28" pos:end="231:31">atof</name><argument_list pos:start="231:32" pos:end="231:36">(<argument pos:start="231:33" pos:end="231:35"><expr pos:start="231:33" pos:end="231:35"><name pos:start="231:33" pos:end="231:35">arg</name></expr></argument>)</argument_list></call> <operator pos:start="231:38" pos:end="231:38">*</operator> <literal type="number" pos:start="231:40" pos:end="231:43">1000</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="233:7" pos:end="245:5">else if <condition pos:start="233:15" pos:end="233:51">(<expr pos:start="233:16" pos:end="233:50"><operator pos:start="233:16" pos:end="233:16">!</operator><call pos:start="233:17" pos:end="233:50"><name pos:start="233:17" pos:end="233:29">av_strcasecmp</name><argument_list pos:start="233:30" pos:end="233:50">(<argument pos:start="233:31" pos:end="233:33"><expr pos:start="233:31" pos:end="233:33"><name pos:start="233:31" pos:end="233:33">cmd</name></expr></argument>, <argument pos:start="233:36" pos:end="233:49"><expr pos:start="233:36" pos:end="233:49"><literal type="string" pos:start="233:36" pos:end="233:49">"AudioBitRate"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="233:53" pos:end="245:5">{<block_content pos:start="235:9" pos:end="243:23">

        <decl_stmt pos:start="235:9" pos:end="235:16"><decl pos:start="235:9" pos:end="235:15"><type pos:start="235:9" pos:end="235:13"><name pos:start="235:9" pos:end="235:13">float</name></type> <name pos:start="235:15" pos:end="235:15">f</name></decl>;</decl_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:46"><expr pos:start="237:9" pos:end="237:45"><call pos:start="237:9" pos:end="237:45"><name pos:start="237:9" pos:end="237:24">ffserver_get_arg</name><argument_list pos:start="237:25" pos:end="237:45">(<argument pos:start="237:26" pos:end="237:28"><expr pos:start="237:26" pos:end="237:28"><name pos:start="237:26" pos:end="237:28">arg</name></expr></argument>, <argument pos:start="237:31" pos:end="237:41"><expr pos:start="237:31" pos:end="237:41"><sizeof pos:start="237:31" pos:end="237:41">sizeof<argument_list pos:start="237:37" pos:end="237:41">(<argument pos:start="237:38" pos:end="237:40"><expr pos:start="237:38" pos:end="237:40"><name pos:start="237:38" pos:end="237:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="237:44" pos:end="237:44"><expr pos:start="237:44" pos:end="237:44"><name pos:start="237:44" pos:end="237:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:108"><expr pos:start="239:9" pos:end="239:107"><call pos:start="239:9" pos:end="239:107"><name pos:start="239:9" pos:end="239:32">ffserver_set_float_param</name><argument_list pos:start="239:33" pos:end="239:107">(<argument pos:start="239:34" pos:end="239:35"><expr pos:start="239:34" pos:end="239:35"><operator pos:start="239:34" pos:end="239:34">&amp;</operator><name pos:start="239:35" pos:end="239:35">f</name></expr></argument>, <argument pos:start="239:38" pos:end="239:40"><expr pos:start="239:38" pos:end="239:40"><name pos:start="239:38" pos:end="239:40">arg</name></expr></argument>, <argument pos:start="239:43" pos:end="239:46"><expr pos:start="239:43" pos:end="239:46"><literal type="number" pos:start="239:43" pos:end="239:46">1000</literal></expr></argument>, <argument pos:start="239:49" pos:end="239:49"><expr pos:start="239:49" pos:end="239:49"><literal type="number" pos:start="239:49" pos:end="239:49">0</literal></expr></argument>, <argument pos:start="239:52" pos:end="239:58"><expr pos:start="239:52" pos:end="239:58"><name pos:start="239:52" pos:end="239:58">FLT_MAX</name></expr></argument>, <argument pos:start="239:61" pos:end="239:66"><expr pos:start="239:61" pos:end="239:66"><name pos:start="239:61" pos:end="239:66">config</name></expr></argument>, <argument pos:start="239:69" pos:end="239:76"><expr pos:start="239:69" pos:end="239:76"><name pos:start="239:69" pos:end="239:76">line_num</name></expr></argument>, <argument pos:start="239:79" pos:end="239:96"><expr pos:start="239:79" pos:end="239:96"><literal type="string" pos:start="239:79" pos:end="239:96">"Invalid %s: %s\n"</literal></expr></argument>, <argument pos:start="239:99" pos:end="239:101"><expr pos:start="239:99" pos:end="239:101"><name pos:start="239:99" pos:end="239:101">cmd</name></expr></argument>, <argument pos:start="239:104" pos:end="239:106"><expr pos:start="239:104" pos:end="239:106"><name pos:start="239:104" pos:end="239:106">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="241:9" pos:end="243:23"><if pos:start="241:9" pos:end="243:23">if <condition pos:start="241:12" pos:end="241:72">(<expr pos:start="241:13" pos:end="241:71"><call pos:start="241:13" pos:end="241:67"><name pos:start="241:13" pos:end="241:27">av_dict_set_int</name><argument_list pos:start="241:28" pos:end="241:67">(<argument pos:start="241:29" pos:end="241:47"><expr pos:start="241:29" pos:end="241:47"><operator pos:start="241:29" pos:end="241:29">&amp;</operator><name pos:start="241:30" pos:end="241:47"><name pos:start="241:30" pos:end="241:35">config</name><operator pos:start="241:36" pos:end="241:37">-&gt;</operator><name pos:start="241:38" pos:end="241:47">audio_conf</name></name></expr></argument>, <argument pos:start="241:50" pos:end="241:52"><expr pos:start="241:50" pos:end="241:52"><name pos:start="241:50" pos:end="241:52">cmd</name></expr></argument>, <argument pos:start="241:55" pos:end="241:63"><expr pos:start="241:55" pos:end="241:63"><call pos:start="241:55" pos:end="241:63"><name pos:start="241:55" pos:end="241:60">lrintf</name><argument_list pos:start="241:61" pos:end="241:63">(<argument pos:start="241:62" pos:end="241:62"><expr pos:start="241:62" pos:end="241:62"><name pos:start="241:62" pos:end="241:62">f</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="241:66" pos:end="241:66"><expr pos:start="241:66" pos:end="241:66"><literal type="number" pos:start="241:66" pos:end="241:66">0</literal></expr></argument>)</argument_list></call> <operator pos:start="241:69" pos:end="241:69">&lt;</operator> <literal type="number" pos:start="241:71" pos:end="241:71">0</literal></expr>)</condition><block type="pseudo" pos:start="243:13" pos:end="243:23"><block_content pos:start="243:13" pos:end="243:23">

            <goto pos:start="243:13" pos:end="243:23">goto <name pos:start="243:18" pos:end="243:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="245:7" pos:end="255:5">else if <condition pos:start="245:15" pos:end="245:52">(<expr pos:start="245:16" pos:end="245:51"><operator pos:start="245:16" pos:end="245:16">!</operator><call pos:start="245:17" pos:end="245:51"><name pos:start="245:17" pos:end="245:29">av_strcasecmp</name><argument_list pos:start="245:30" pos:end="245:51">(<argument pos:start="245:31" pos:end="245:33"><expr pos:start="245:31" pos:end="245:33"><name pos:start="245:31" pos:end="245:33">cmd</name></expr></argument>, <argument pos:start="245:36" pos:end="245:50"><expr pos:start="245:36" pos:end="245:50"><literal type="string" pos:start="245:36" pos:end="245:50">"AudioChannels"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="245:54" pos:end="255:5">{<block_content pos:start="247:9" pos:end="253:23">

        <expr_stmt pos:start="247:9" pos:end="247:46"><expr pos:start="247:9" pos:end="247:45"><call pos:start="247:9" pos:end="247:45"><name pos:start="247:9" pos:end="247:24">ffserver_get_arg</name><argument_list pos:start="247:25" pos:end="247:45">(<argument pos:start="247:26" pos:end="247:28"><expr pos:start="247:26" pos:end="247:28"><name pos:start="247:26" pos:end="247:28">arg</name></expr></argument>, <argument pos:start="247:31" pos:end="247:41"><expr pos:start="247:31" pos:end="247:41"><sizeof pos:start="247:31" pos:end="247:41">sizeof<argument_list pos:start="247:37" pos:end="247:41">(<argument pos:start="247:38" pos:end="247:40"><expr pos:start="247:38" pos:end="247:40"><name pos:start="247:38" pos:end="247:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="247:44" pos:end="247:44"><expr pos:start="247:44" pos:end="247:44"><name pos:start="247:44" pos:end="247:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:118"><expr pos:start="249:9" pos:end="249:117"><call pos:start="249:9" pos:end="249:117"><name pos:start="249:9" pos:end="249:30">ffserver_set_int_param</name><argument_list pos:start="249:31" pos:end="249:117">(<argument pos:start="249:32" pos:end="249:35"><expr pos:start="249:32" pos:end="249:35"><name pos:start="249:32" pos:end="249:35">NULL</name></expr></argument>, <argument pos:start="249:38" pos:end="249:40"><expr pos:start="249:38" pos:end="249:40"><name pos:start="249:38" pos:end="249:40">arg</name></expr></argument>, <argument pos:start="249:43" pos:end="249:43"><expr pos:start="249:43" pos:end="249:43"><literal type="number" pos:start="249:43" pos:end="249:43">0</literal></expr></argument>, <argument pos:start="249:46" pos:end="249:46"><expr pos:start="249:46" pos:end="249:46"><literal type="number" pos:start="249:46" pos:end="249:46">1</literal></expr></argument>, <argument pos:start="249:49" pos:end="249:49"><expr pos:start="249:49" pos:end="249:49"><literal type="number" pos:start="249:49" pos:end="249:49">8</literal></expr></argument>, <argument pos:start="249:52" pos:end="249:57"><expr pos:start="249:52" pos:end="249:57"><name pos:start="249:52" pos:end="249:57">config</name></expr></argument>, <argument pos:start="249:60" pos:end="249:67"><expr pos:start="249:60" pos:end="249:67"><name pos:start="249:60" pos:end="249:67">line_num</name></expr></argument>, <argument pos:start="249:70" pos:end="249:106"><expr pos:start="249:70" pos:end="249:106"><literal type="string" pos:start="249:70" pos:end="249:106">"Invalid %s: %s, valid range is 1-8."</literal></expr></argument>, <argument pos:start="249:109" pos:end="249:111"><expr pos:start="249:109" pos:end="249:111"><name pos:start="249:109" pos:end="249:111">cmd</name></expr></argument>, <argument pos:start="249:114" pos:end="249:116"><expr pos:start="249:114" pos:end="249:116"><name pos:start="249:114" pos:end="249:116">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="251:9" pos:end="253:23"><if pos:start="251:9" pos:end="253:23">if <condition pos:start="251:12" pos:end="251:62">(<expr pos:start="251:13" pos:end="251:61"><call pos:start="251:13" pos:end="251:57"><name pos:start="251:13" pos:end="251:23">av_dict_set</name><argument_list pos:start="251:24" pos:end="251:57">(<argument pos:start="251:25" pos:end="251:43"><expr pos:start="251:25" pos:end="251:43"><operator pos:start="251:25" pos:end="251:25">&amp;</operator><name pos:start="251:26" pos:end="251:43"><name pos:start="251:26" pos:end="251:31">config</name><operator pos:start="251:32" pos:end="251:33">-&gt;</operator><name pos:start="251:34" pos:end="251:43">audio_conf</name></name></expr></argument>, <argument pos:start="251:46" pos:end="251:48"><expr pos:start="251:46" pos:end="251:48"><name pos:start="251:46" pos:end="251:48">cmd</name></expr></argument>, <argument pos:start="251:51" pos:end="251:53"><expr pos:start="251:51" pos:end="251:53"><name pos:start="251:51" pos:end="251:53">arg</name></expr></argument>, <argument pos:start="251:56" pos:end="251:56"><expr pos:start="251:56" pos:end="251:56"><literal type="number" pos:start="251:56" pos:end="251:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="251:59" pos:end="251:59">&lt;</operator> <literal type="number" pos:start="251:61" pos:end="251:61">0</literal></expr>)</condition><block type="pseudo" pos:start="253:13" pos:end="253:23"><block_content pos:start="253:13" pos:end="253:23">

            <goto pos:start="253:13" pos:end="253:23">goto <name pos:start="253:18" pos:end="253:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="255:7" pos:end="265:5">else if <condition pos:start="255:15" pos:end="255:54">(<expr pos:start="255:16" pos:end="255:53"><operator pos:start="255:16" pos:end="255:16">!</operator><call pos:start="255:17" pos:end="255:53"><name pos:start="255:17" pos:end="255:29">av_strcasecmp</name><argument_list pos:start="255:30" pos:end="255:53">(<argument pos:start="255:31" pos:end="255:33"><expr pos:start="255:31" pos:end="255:33"><name pos:start="255:31" pos:end="255:33">cmd</name></expr></argument>, <argument pos:start="255:36" pos:end="255:52"><expr pos:start="255:36" pos:end="255:52"><literal type="string" pos:start="255:36" pos:end="255:52">"AudioSampleRate"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="255:56" pos:end="265:5">{<block_content pos:start="257:9" pos:end="263:23">

        <expr_stmt pos:start="257:9" pos:end="257:46"><expr pos:start="257:9" pos:end="257:45"><call pos:start="257:9" pos:end="257:45"><name pos:start="257:9" pos:end="257:24">ffserver_get_arg</name><argument_list pos:start="257:25" pos:end="257:45">(<argument pos:start="257:26" pos:end="257:28"><expr pos:start="257:26" pos:end="257:28"><name pos:start="257:26" pos:end="257:28">arg</name></expr></argument>, <argument pos:start="257:31" pos:end="257:41"><expr pos:start="257:31" pos:end="257:41"><sizeof pos:start="257:31" pos:end="257:41">sizeof<argument_list pos:start="257:37" pos:end="257:41">(<argument pos:start="257:38" pos:end="257:40"><expr pos:start="257:38" pos:end="257:40"><name pos:start="257:38" pos:end="257:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="257:44" pos:end="257:44"><expr pos:start="257:44" pos:end="257:44"><name pos:start="257:44" pos:end="257:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:103"><expr pos:start="259:9" pos:end="259:102"><call pos:start="259:9" pos:end="259:102"><name pos:start="259:9" pos:end="259:30">ffserver_set_int_param</name><argument_list pos:start="259:31" pos:end="259:102">(<argument pos:start="259:32" pos:end="259:35"><expr pos:start="259:32" pos:end="259:35"><name pos:start="259:32" pos:end="259:35">NULL</name></expr></argument>, <argument pos:start="259:38" pos:end="259:40"><expr pos:start="259:38" pos:end="259:40"><name pos:start="259:38" pos:end="259:40">arg</name></expr></argument>, <argument pos:start="259:43" pos:end="259:43"><expr pos:start="259:43" pos:end="259:43"><literal type="number" pos:start="259:43" pos:end="259:43">0</literal></expr></argument>, <argument pos:start="259:46" pos:end="259:46"><expr pos:start="259:46" pos:end="259:46"><literal type="number" pos:start="259:46" pos:end="259:46">0</literal></expr></argument>, <argument pos:start="259:49" pos:end="259:55"><expr pos:start="259:49" pos:end="259:55"><name pos:start="259:49" pos:end="259:55">INT_MAX</name></expr></argument>, <argument pos:start="259:58" pos:end="259:63"><expr pos:start="259:58" pos:end="259:63"><name pos:start="259:58" pos:end="259:63">config</name></expr></argument>, <argument pos:start="259:66" pos:end="259:73"><expr pos:start="259:66" pos:end="259:73"><name pos:start="259:66" pos:end="259:73">line_num</name></expr></argument>, <argument pos:start="259:76" pos:end="259:91"><expr pos:start="259:76" pos:end="259:91"><literal type="string" pos:start="259:76" pos:end="259:91">"Invalid %s: %s"</literal></expr></argument>, <argument pos:start="259:94" pos:end="259:96"><expr pos:start="259:94" pos:end="259:96"><name pos:start="259:94" pos:end="259:96">cmd</name></expr></argument>, <argument pos:start="259:99" pos:end="259:101"><expr pos:start="259:99" pos:end="259:101"><name pos:start="259:99" pos:end="259:101">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="261:9" pos:end="263:23"><if pos:start="261:9" pos:end="263:23">if <condition pos:start="261:12" pos:end="261:62">(<expr pos:start="261:13" pos:end="261:61"><call pos:start="261:13" pos:end="261:57"><name pos:start="261:13" pos:end="261:23">av_dict_set</name><argument_list pos:start="261:24" pos:end="261:57">(<argument pos:start="261:25" pos:end="261:43"><expr pos:start="261:25" pos:end="261:43"><operator pos:start="261:25" pos:end="261:25">&amp;</operator><name pos:start="261:26" pos:end="261:43"><name pos:start="261:26" pos:end="261:31">config</name><operator pos:start="261:32" pos:end="261:33">-&gt;</operator><name pos:start="261:34" pos:end="261:43">audio_conf</name></name></expr></argument>, <argument pos:start="261:46" pos:end="261:48"><expr pos:start="261:46" pos:end="261:48"><name pos:start="261:46" pos:end="261:48">cmd</name></expr></argument>, <argument pos:start="261:51" pos:end="261:53"><expr pos:start="261:51" pos:end="261:53"><name pos:start="261:51" pos:end="261:53">arg</name></expr></argument>, <argument pos:start="261:56" pos:end="261:56"><expr pos:start="261:56" pos:end="261:56"><literal type="number" pos:start="261:56" pos:end="261:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="261:59" pos:end="261:59">&lt;</operator> <literal type="number" pos:start="261:61" pos:end="261:61">0</literal></expr>)</condition><block type="pseudo" pos:start="263:13" pos:end="263:23"><block_content pos:start="263:13" pos:end="263:23">

            <goto pos:start="263:13" pos:end="263:23">goto <name pos:start="263:18" pos:end="263:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="265:7" pos:end="283:5">else if <condition pos:start="265:15" pos:end="265:56">(<expr pos:start="265:16" pos:end="265:55"><operator pos:start="265:16" pos:end="265:16">!</operator><call pos:start="265:17" pos:end="265:55"><name pos:start="265:17" pos:end="265:29">av_strcasecmp</name><argument_list pos:start="265:30" pos:end="265:55">(<argument pos:start="265:31" pos:end="265:33"><expr pos:start="265:31" pos:end="265:33"><name pos:start="265:31" pos:end="265:33">cmd</name></expr></argument>, <argument pos:start="265:36" pos:end="265:54"><expr pos:start="265:36" pos:end="265:54"><literal type="string" pos:start="265:36" pos:end="265:54">"VideoBitRateRange"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="265:58" pos:end="283:5">{<block_content pos:start="267:9" pos:end="281:96">

        <decl_stmt pos:start="267:9" pos:end="267:29"><decl pos:start="267:9" pos:end="267:19"><type pos:start="267:9" pos:end="267:11"><name pos:start="267:9" pos:end="267:11">int</name></type> <name pos:start="267:13" pos:end="267:19">minrate</name></decl>, <decl pos:start="267:22" pos:end="267:28"><type ref="prev" pos:start="267:9" pos:end="267:11"/><name pos:start="267:22" pos:end="267:28">maxrate</name></decl>;</decl_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:46"><expr pos:start="269:9" pos:end="269:45"><call pos:start="269:9" pos:end="269:45"><name pos:start="269:9" pos:end="269:24">ffserver_get_arg</name><argument_list pos:start="269:25" pos:end="269:45">(<argument pos:start="269:26" pos:end="269:28"><expr pos:start="269:26" pos:end="269:28"><name pos:start="269:26" pos:end="269:28">arg</name></expr></argument>, <argument pos:start="269:31" pos:end="269:41"><expr pos:start="269:31" pos:end="269:41"><sizeof pos:start="269:31" pos:end="269:41">sizeof<argument_list pos:start="269:37" pos:end="269:41">(<argument pos:start="269:38" pos:end="269:40"><expr pos:start="269:38" pos:end="269:40"><name pos:start="269:38" pos:end="269:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="269:44" pos:end="269:44"><expr pos:start="269:44" pos:end="269:44"><name pos:start="269:44" pos:end="269:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="271:9" pos:end="281:96"><if pos:start="271:9" pos:end="279:9">if <condition pos:start="271:12" pos:end="271:58">(<expr pos:start="271:13" pos:end="271:57"><call pos:start="271:13" pos:end="271:52"><name pos:start="271:13" pos:end="271:18">sscanf</name><argument_list pos:start="271:19" pos:end="271:52">(<argument pos:start="271:20" pos:end="271:22"><expr pos:start="271:20" pos:end="271:22"><name pos:start="271:20" pos:end="271:22">arg</name></expr></argument>, <argument pos:start="271:25" pos:end="271:31"><expr pos:start="271:25" pos:end="271:31"><literal type="string" pos:start="271:25" pos:end="271:31">"%d-%d"</literal></expr></argument>, <argument pos:start="271:34" pos:end="271:41"><expr pos:start="271:34" pos:end="271:41"><operator pos:start="271:34" pos:end="271:34">&amp;</operator><name pos:start="271:35" pos:end="271:41">minrate</name></expr></argument>, <argument pos:start="271:44" pos:end="271:51"><expr pos:start="271:44" pos:end="271:51"><operator pos:start="271:44" pos:end="271:44">&amp;</operator><name pos:start="271:45" pos:end="271:51">maxrate</name></expr></argument>)</argument_list></call> <operator pos:start="271:54" pos:end="271:55">==</operator> <literal type="number" pos:start="271:57" pos:end="271:57">2</literal></expr>)</condition> <block pos:start="271:60" pos:end="279:9">{<block_content pos:start="273:13" pos:end="277:27">

            <if_stmt pos:start="273:13" pos:end="277:27"><if pos:start="273:13" pos:end="277:27">if <condition pos:start="273:16" pos:end="275:93">(<expr pos:start="273:17" pos:end="275:92"><call pos:start="273:17" pos:end="273:88"><name pos:start="273:17" pos:end="273:31">av_dict_set_int</name><argument_list pos:start="273:32" pos:end="273:88">(<argument pos:start="273:33" pos:end="273:51"><expr pos:start="273:33" pos:end="273:51"><operator pos:start="273:33" pos:end="273:33">&amp;</operator><name pos:start="273:34" pos:end="273:51"><name pos:start="273:34" pos:end="273:39">config</name><operator pos:start="273:40" pos:end="273:41">-&gt;</operator><name pos:start="273:42" pos:end="273:51">video_conf</name></name></expr></argument>, <argument pos:start="273:54" pos:end="273:75"><expr pos:start="273:54" pos:end="273:75"><literal type="string" pos:start="273:54" pos:end="273:75">"VideoBitRateRangeMin"</literal></expr></argument>, <argument pos:start="273:78" pos:end="273:84"><expr pos:start="273:78" pos:end="273:84"><name pos:start="273:78" pos:end="273:84">minrate</name></expr></argument>, <argument pos:start="273:87" pos:end="273:87"><expr pos:start="273:87" pos:end="273:87"><literal type="number" pos:start="273:87" pos:end="273:87">0</literal></expr></argument>)</argument_list></call> <operator pos:start="273:90" pos:end="273:90">&lt;</operator> <literal type="number" pos:start="273:92" pos:end="273:92">0</literal> <operator pos:start="273:94" pos:end="273:95">||</operator>

                <call pos:start="275:17" pos:end="275:88"><name pos:start="275:17" pos:end="275:31">av_dict_set_int</name><argument_list pos:start="275:32" pos:end="275:88">(<argument pos:start="275:33" pos:end="275:51"><expr pos:start="275:33" pos:end="275:51"><operator pos:start="275:33" pos:end="275:33">&amp;</operator><name pos:start="275:34" pos:end="275:51"><name pos:start="275:34" pos:end="275:39">config</name><operator pos:start="275:40" pos:end="275:41">-&gt;</operator><name pos:start="275:42" pos:end="275:51">video_conf</name></name></expr></argument>, <argument pos:start="275:54" pos:end="275:75"><expr pos:start="275:54" pos:end="275:75"><literal type="string" pos:start="275:54" pos:end="275:75">"VideoBitRateRangeMax"</literal></expr></argument>, <argument pos:start="275:78" pos:end="275:84"><expr pos:start="275:78" pos:end="275:84"><name pos:start="275:78" pos:end="275:84">maxrate</name></expr></argument>, <argument pos:start="275:87" pos:end="275:87"><expr pos:start="275:87" pos:end="275:87"><literal type="number" pos:start="275:87" pos:end="275:87">0</literal></expr></argument>)</argument_list></call> <operator pos:start="275:90" pos:end="275:90">&lt;</operator> <literal type="number" pos:start="275:92" pos:end="275:92">0</literal></expr>)</condition><block type="pseudo" pos:start="277:17" pos:end="277:27"><block_content pos:start="277:17" pos:end="277:27">

                <goto pos:start="277:17" pos:end="277:27">goto <name pos:start="277:22" pos:end="277:26">nomem</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="279:11" pos:end="281:96">else<block type="pseudo" pos:start="281:13" pos:end="281:96"><block_content pos:start="281:13" pos:end="281:96">

            <expr_stmt pos:start="281:13" pos:end="281:96"><expr pos:start="281:13" pos:end="281:95"><call pos:start="281:13" pos:end="281:95"><name pos:start="281:13" pos:end="281:17">ERROR</name><argument_list pos:start="281:18" pos:end="281:95">(<argument pos:start="281:19" pos:end="281:89"><expr pos:start="281:19" pos:end="281:89"><literal type="string" pos:start="281:19" pos:end="281:89">"Incorrect format for VideoBitRateRange -- should be &lt;min&gt;-&lt;max&gt;: %s\n"</literal></expr></argument>, <argument pos:start="281:92" pos:end="281:94"><expr pos:start="281:92" pos:end="281:94"><name pos:start="281:92" pos:end="281:94">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="283:7" pos:end="293:5">else if <condition pos:start="283:15" pos:end="283:44">(<expr pos:start="283:16" pos:end="283:43"><operator pos:start="283:16" pos:end="283:16">!</operator><call pos:start="283:17" pos:end="283:43"><name pos:start="283:17" pos:end="283:29">av_strcasecmp</name><argument_list pos:start="283:30" pos:end="283:43">(<argument pos:start="283:31" pos:end="283:33"><expr pos:start="283:31" pos:end="283:33"><name pos:start="283:31" pos:end="283:33">cmd</name></expr></argument>, <argument pos:start="283:36" pos:end="283:42"><expr pos:start="283:36" pos:end="283:42"><literal type="string" pos:start="283:36" pos:end="283:42">"Debug"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="283:46" pos:end="293:5">{<block_content pos:start="285:9" pos:end="291:23">

        <expr_stmt pos:start="285:9" pos:end="285:46"><expr pos:start="285:9" pos:end="285:45"><call pos:start="285:9" pos:end="285:45"><name pos:start="285:9" pos:end="285:24">ffserver_get_arg</name><argument_list pos:start="285:25" pos:end="285:45">(<argument pos:start="285:26" pos:end="285:28"><expr pos:start="285:26" pos:end="285:28"><name pos:start="285:26" pos:end="285:28">arg</name></expr></argument>, <argument pos:start="285:31" pos:end="285:41"><expr pos:start="285:31" pos:end="285:41"><sizeof pos:start="285:31" pos:end="285:41">sizeof<argument_list pos:start="285:37" pos:end="285:41">(<argument pos:start="285:38" pos:end="285:40"><expr pos:start="285:38" pos:end="285:40"><name pos:start="285:38" pos:end="285:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="285:44" pos:end="285:44"><expr pos:start="285:44" pos:end="285:44"><name pos:start="285:44" pos:end="285:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:109"><expr pos:start="287:9" pos:end="287:108"><call pos:start="287:9" pos:end="287:108"><name pos:start="287:9" pos:end="287:30">ffserver_set_int_param</name><argument_list pos:start="287:31" pos:end="287:108">(<argument pos:start="287:32" pos:end="287:35"><expr pos:start="287:32" pos:end="287:35"><name pos:start="287:32" pos:end="287:35">NULL</name></expr></argument>, <argument pos:start="287:38" pos:end="287:40"><expr pos:start="287:38" pos:end="287:40"><name pos:start="287:38" pos:end="287:40">arg</name></expr></argument>, <argument pos:start="287:43" pos:end="287:43"><expr pos:start="287:43" pos:end="287:43"><literal type="number" pos:start="287:43" pos:end="287:43">0</literal></expr></argument>, <argument pos:start="287:46" pos:end="287:52"><expr pos:start="287:46" pos:end="287:52"><name pos:start="287:46" pos:end="287:52">INT_MIN</name></expr></argument>, <argument pos:start="287:55" pos:end="287:61"><expr pos:start="287:55" pos:end="287:61"><name pos:start="287:55" pos:end="287:61">INT_MAX</name></expr></argument>, <argument pos:start="287:64" pos:end="287:69"><expr pos:start="287:64" pos:end="287:69"><name pos:start="287:64" pos:end="287:69">config</name></expr></argument>, <argument pos:start="287:72" pos:end="287:79"><expr pos:start="287:72" pos:end="287:79"><name pos:start="287:72" pos:end="287:79">line_num</name></expr></argument>, <argument pos:start="287:82" pos:end="287:97"><expr pos:start="287:82" pos:end="287:97"><literal type="string" pos:start="287:82" pos:end="287:97">"Invalid %s: %s"</literal></expr></argument>, <argument pos:start="287:100" pos:end="287:102"><expr pos:start="287:100" pos:end="287:102"><name pos:start="287:100" pos:end="287:102">cmd</name></expr></argument>, <argument pos:start="287:105" pos:end="287:107"><expr pos:start="287:105" pos:end="287:107"><name pos:start="287:105" pos:end="287:107">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="289:9" pos:end="291:23"><if pos:start="289:9" pos:end="291:23">if <condition pos:start="289:12" pos:end="289:62">(<expr pos:start="289:13" pos:end="289:61"><call pos:start="289:13" pos:end="289:57"><name pos:start="289:13" pos:end="289:23">av_dict_set</name><argument_list pos:start="289:24" pos:end="289:57">(<argument pos:start="289:25" pos:end="289:43"><expr pos:start="289:25" pos:end="289:43"><operator pos:start="289:25" pos:end="289:25">&amp;</operator><name pos:start="289:26" pos:end="289:43"><name pos:start="289:26" pos:end="289:31">config</name><operator pos:start="289:32" pos:end="289:33">-&gt;</operator><name pos:start="289:34" pos:end="289:43">video_conf</name></name></expr></argument>, <argument pos:start="289:46" pos:end="289:48"><expr pos:start="289:46" pos:end="289:48"><name pos:start="289:46" pos:end="289:48">cmd</name></expr></argument>, <argument pos:start="289:51" pos:end="289:53"><expr pos:start="289:51" pos:end="289:53"><name pos:start="289:51" pos:end="289:53">arg</name></expr></argument>, <argument pos:start="289:56" pos:end="289:56"><expr pos:start="289:56" pos:end="289:56"><literal type="number" pos:start="289:56" pos:end="289:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="289:59" pos:end="289:59">&lt;</operator> <literal type="number" pos:start="289:61" pos:end="289:61">0</literal></expr>)</condition><block type="pseudo" pos:start="291:13" pos:end="291:23"><block_content pos:start="291:13" pos:end="291:23">

            <goto pos:start="291:13" pos:end="291:23">goto <name pos:start="291:18" pos:end="291:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="293:7" pos:end="303:5">else if <condition pos:start="293:15" pos:end="293:45">(<expr pos:start="293:16" pos:end="293:44"><operator pos:start="293:16" pos:end="293:16">!</operator><call pos:start="293:17" pos:end="293:44"><name pos:start="293:17" pos:end="293:29">av_strcasecmp</name><argument_list pos:start="293:30" pos:end="293:44">(<argument pos:start="293:31" pos:end="293:33"><expr pos:start="293:31" pos:end="293:33"><name pos:start="293:31" pos:end="293:33">cmd</name></expr></argument>, <argument pos:start="293:36" pos:end="293:43"><expr pos:start="293:36" pos:end="293:43"><literal type="string" pos:start="293:36" pos:end="293:43">"Strict"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="293:47" pos:end="303:5">{<block_content pos:start="295:9" pos:end="301:23">

        <expr_stmt pos:start="295:9" pos:end="295:46"><expr pos:start="295:9" pos:end="295:45"><call pos:start="295:9" pos:end="295:45"><name pos:start="295:9" pos:end="295:24">ffserver_get_arg</name><argument_list pos:start="295:25" pos:end="295:45">(<argument pos:start="295:26" pos:end="295:28"><expr pos:start="295:26" pos:end="295:28"><name pos:start="295:26" pos:end="295:28">arg</name></expr></argument>, <argument pos:start="295:31" pos:end="295:41"><expr pos:start="295:31" pos:end="295:41"><sizeof pos:start="295:31" pos:end="295:41">sizeof<argument_list pos:start="295:37" pos:end="295:41">(<argument pos:start="295:38" pos:end="295:40"><expr pos:start="295:38" pos:end="295:40"><name pos:start="295:38" pos:end="295:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="295:44" pos:end="295:44"><expr pos:start="295:44" pos:end="295:44"><name pos:start="295:44" pos:end="295:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:109"><expr pos:start="297:9" pos:end="297:108"><call pos:start="297:9" pos:end="297:108"><name pos:start="297:9" pos:end="297:30">ffserver_set_int_param</name><argument_list pos:start="297:31" pos:end="297:108">(<argument pos:start="297:32" pos:end="297:35"><expr pos:start="297:32" pos:end="297:35"><name pos:start="297:32" pos:end="297:35">NULL</name></expr></argument>, <argument pos:start="297:38" pos:end="297:40"><expr pos:start="297:38" pos:end="297:40"><name pos:start="297:38" pos:end="297:40">arg</name></expr></argument>, <argument pos:start="297:43" pos:end="297:43"><expr pos:start="297:43" pos:end="297:43"><literal type="number" pos:start="297:43" pos:end="297:43">0</literal></expr></argument>, <argument pos:start="297:46" pos:end="297:52"><expr pos:start="297:46" pos:end="297:52"><name pos:start="297:46" pos:end="297:52">INT_MIN</name></expr></argument>, <argument pos:start="297:55" pos:end="297:61"><expr pos:start="297:55" pos:end="297:61"><name pos:start="297:55" pos:end="297:61">INT_MAX</name></expr></argument>, <argument pos:start="297:64" pos:end="297:69"><expr pos:start="297:64" pos:end="297:69"><name pos:start="297:64" pos:end="297:69">config</name></expr></argument>, <argument pos:start="297:72" pos:end="297:79"><expr pos:start="297:72" pos:end="297:79"><name pos:start="297:72" pos:end="297:79">line_num</name></expr></argument>, <argument pos:start="297:82" pos:end="297:97"><expr pos:start="297:82" pos:end="297:97"><literal type="string" pos:start="297:82" pos:end="297:97">"Invalid %s: %s"</literal></expr></argument>, <argument pos:start="297:100" pos:end="297:102"><expr pos:start="297:100" pos:end="297:102"><name pos:start="297:100" pos:end="297:102">cmd</name></expr></argument>, <argument pos:start="297:105" pos:end="297:107"><expr pos:start="297:105" pos:end="297:107"><name pos:start="297:105" pos:end="297:107">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="299:9" pos:end="301:23"><if pos:start="299:9" pos:end="301:23">if <condition pos:start="299:12" pos:end="299:62">(<expr pos:start="299:13" pos:end="299:61"><call pos:start="299:13" pos:end="299:57"><name pos:start="299:13" pos:end="299:23">av_dict_set</name><argument_list pos:start="299:24" pos:end="299:57">(<argument pos:start="299:25" pos:end="299:43"><expr pos:start="299:25" pos:end="299:43"><operator pos:start="299:25" pos:end="299:25">&amp;</operator><name pos:start="299:26" pos:end="299:43"><name pos:start="299:26" pos:end="299:31">config</name><operator pos:start="299:32" pos:end="299:33">-&gt;</operator><name pos:start="299:34" pos:end="299:43">video_conf</name></name></expr></argument>, <argument pos:start="299:46" pos:end="299:48"><expr pos:start="299:46" pos:end="299:48"><name pos:start="299:46" pos:end="299:48">cmd</name></expr></argument>, <argument pos:start="299:51" pos:end="299:53"><expr pos:start="299:51" pos:end="299:53"><name pos:start="299:51" pos:end="299:53">arg</name></expr></argument>, <argument pos:start="299:56" pos:end="299:56"><expr pos:start="299:56" pos:end="299:56"><literal type="number" pos:start="299:56" pos:end="299:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="299:59" pos:end="299:59">&lt;</operator> <literal type="number" pos:start="299:61" pos:end="299:61">0</literal></expr>)</condition><block type="pseudo" pos:start="301:13" pos:end="301:23"><block_content pos:start="301:13" pos:end="301:23">

            <goto pos:start="301:13" pos:end="301:23">goto <name pos:start="301:18" pos:end="301:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="303:7" pos:end="313:5">else if <condition pos:start="303:15" pos:end="303:54">(<expr pos:start="303:16" pos:end="303:53"><operator pos:start="303:16" pos:end="303:16">!</operator><call pos:start="303:17" pos:end="303:53"><name pos:start="303:17" pos:end="303:29">av_strcasecmp</name><argument_list pos:start="303:30" pos:end="303:53">(<argument pos:start="303:31" pos:end="303:33"><expr pos:start="303:31" pos:end="303:33"><name pos:start="303:31" pos:end="303:33">cmd</name></expr></argument>, <argument pos:start="303:36" pos:end="303:52"><expr pos:start="303:36" pos:end="303:52"><literal type="string" pos:start="303:36" pos:end="303:52">"VideoBufferSize"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="303:56" pos:end="313:5">{<block_content pos:start="305:9" pos:end="311:23">

        <expr_stmt pos:start="305:9" pos:end="305:46"><expr pos:start="305:9" pos:end="305:45"><call pos:start="305:9" pos:end="305:45"><name pos:start="305:9" pos:end="305:24">ffserver_get_arg</name><argument_list pos:start="305:25" pos:end="305:45">(<argument pos:start="305:26" pos:end="305:28"><expr pos:start="305:26" pos:end="305:28"><name pos:start="305:26" pos:end="305:28">arg</name></expr></argument>, <argument pos:start="305:31" pos:end="305:41"><expr pos:start="305:31" pos:end="305:41"><sizeof pos:start="305:31" pos:end="305:41">sizeof<argument_list pos:start="305:37" pos:end="305:41">(<argument pos:start="305:38" pos:end="305:40"><expr pos:start="305:38" pos:end="305:40"><name pos:start="305:38" pos:end="305:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="305:44" pos:end="305:44"><expr pos:start="305:44" pos:end="305:44"><name pos:start="305:44" pos:end="305:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:108"><expr pos:start="307:9" pos:end="307:107"><call pos:start="307:9" pos:end="307:107"><name pos:start="307:9" pos:end="307:30">ffserver_set_int_param</name><argument_list pos:start="307:31" pos:end="307:107">(<argument pos:start="307:32" pos:end="307:35"><expr pos:start="307:32" pos:end="307:35"><name pos:start="307:32" pos:end="307:35">NULL</name></expr></argument>, <argument pos:start="307:38" pos:end="307:40"><expr pos:start="307:38" pos:end="307:40"><name pos:start="307:38" pos:end="307:40">arg</name></expr></argument>, <argument pos:start="307:43" pos:end="307:48"><expr pos:start="307:43" pos:end="307:48"><literal type="number" pos:start="307:43" pos:end="307:43">8</literal><operator pos:start="307:44" pos:end="307:44">*</operator><literal type="number" pos:start="307:45" pos:end="307:48">1024</literal></expr></argument>, <argument pos:start="307:51" pos:end="307:51"><expr pos:start="307:51" pos:end="307:51"><literal type="number" pos:start="307:51" pos:end="307:51">0</literal></expr></argument>, <argument pos:start="307:54" pos:end="307:60"><expr pos:start="307:54" pos:end="307:60"><name pos:start="307:54" pos:end="307:60">INT_MAX</name></expr></argument>, <argument pos:start="307:63" pos:end="307:68"><expr pos:start="307:63" pos:end="307:68"><name pos:start="307:63" pos:end="307:68">config</name></expr></argument>, <argument pos:start="307:71" pos:end="307:78"><expr pos:start="307:71" pos:end="307:78"><name pos:start="307:71" pos:end="307:78">line_num</name></expr></argument>, <argument pos:start="307:81" pos:end="307:96"><expr pos:start="307:81" pos:end="307:96"><literal type="string" pos:start="307:81" pos:end="307:96">"Invalid %s: %s"</literal></expr></argument>, <argument pos:start="307:99" pos:end="307:101"><expr pos:start="307:99" pos:end="307:101"><name pos:start="307:99" pos:end="307:101">cmd</name></expr></argument>, <argument pos:start="307:104" pos:end="307:106"><expr pos:start="307:104" pos:end="307:106"><name pos:start="307:104" pos:end="307:106">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="309:9" pos:end="311:23"><if pos:start="309:9" pos:end="311:23">if <condition pos:start="309:12" pos:end="309:62">(<expr pos:start="309:13" pos:end="309:61"><call pos:start="309:13" pos:end="309:57"><name pos:start="309:13" pos:end="309:23">av_dict_set</name><argument_list pos:start="309:24" pos:end="309:57">(<argument pos:start="309:25" pos:end="309:43"><expr pos:start="309:25" pos:end="309:43"><operator pos:start="309:25" pos:end="309:25">&amp;</operator><name pos:start="309:26" pos:end="309:43"><name pos:start="309:26" pos:end="309:31">config</name><operator pos:start="309:32" pos:end="309:33">-&gt;</operator><name pos:start="309:34" pos:end="309:43">video_conf</name></name></expr></argument>, <argument pos:start="309:46" pos:end="309:48"><expr pos:start="309:46" pos:end="309:48"><name pos:start="309:46" pos:end="309:48">cmd</name></expr></argument>, <argument pos:start="309:51" pos:end="309:53"><expr pos:start="309:51" pos:end="309:53"><name pos:start="309:51" pos:end="309:53">arg</name></expr></argument>, <argument pos:start="309:56" pos:end="309:56"><expr pos:start="309:56" pos:end="309:56"><literal type="number" pos:start="309:56" pos:end="309:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="309:59" pos:end="309:59">&lt;</operator> <literal type="number" pos:start="309:61" pos:end="309:61">0</literal></expr>)</condition><block type="pseudo" pos:start="311:13" pos:end="311:23"><block_content pos:start="311:13" pos:end="311:23">

            <goto pos:start="311:13" pos:end="311:23">goto <name pos:start="311:18" pos:end="311:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="313:7" pos:end="323:5">else if <condition pos:start="313:15" pos:end="313:60">(<expr pos:start="313:16" pos:end="313:59"><operator pos:start="313:16" pos:end="313:16">!</operator><call pos:start="313:17" pos:end="313:59"><name pos:start="313:17" pos:end="313:29">av_strcasecmp</name><argument_list pos:start="313:30" pos:end="313:59">(<argument pos:start="313:31" pos:end="313:33"><expr pos:start="313:31" pos:end="313:33"><name pos:start="313:31" pos:end="313:33">cmd</name></expr></argument>, <argument pos:start="313:36" pos:end="313:58"><expr pos:start="313:36" pos:end="313:58"><literal type="string" pos:start="313:36" pos:end="313:58">"VideoBitRateTolerance"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="313:62" pos:end="323:5">{<block_content pos:start="315:9" pos:end="321:23">

        <expr_stmt pos:start="315:9" pos:end="315:46"><expr pos:start="315:9" pos:end="315:45"><call pos:start="315:9" pos:end="315:45"><name pos:start="315:9" pos:end="315:24">ffserver_get_arg</name><argument_list pos:start="315:25" pos:end="315:45">(<argument pos:start="315:26" pos:end="315:28"><expr pos:start="315:26" pos:end="315:28"><name pos:start="315:26" pos:end="315:28">arg</name></expr></argument>, <argument pos:start="315:31" pos:end="315:41"><expr pos:start="315:31" pos:end="315:41"><sizeof pos:start="315:31" pos:end="315:41">sizeof<argument_list pos:start="315:37" pos:end="315:41">(<argument pos:start="315:38" pos:end="315:40"><expr pos:start="315:38" pos:end="315:40"><name pos:start="315:38" pos:end="315:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="315:44" pos:end="315:44"><expr pos:start="315:44" pos:end="315:44"><name pos:start="315:44" pos:end="315:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:112"><expr pos:start="317:9" pos:end="317:111"><call pos:start="317:9" pos:end="317:111"><name pos:start="317:9" pos:end="317:30">ffserver_set_int_param</name><argument_list pos:start="317:31" pos:end="317:111">(<argument pos:start="317:32" pos:end="317:35"><expr pos:start="317:32" pos:end="317:35"><name pos:start="317:32" pos:end="317:35">NULL</name></expr></argument>, <argument pos:start="317:38" pos:end="317:40"><expr pos:start="317:38" pos:end="317:40"><name pos:start="317:38" pos:end="317:40">arg</name></expr></argument>, <argument pos:start="317:43" pos:end="317:46"><expr pos:start="317:43" pos:end="317:46"><literal type="number" pos:start="317:43" pos:end="317:46">1000</literal></expr></argument>, <argument pos:start="317:49" pos:end="317:55"><expr pos:start="317:49" pos:end="317:55"><name pos:start="317:49" pos:end="317:55">INT_MIN</name></expr></argument>, <argument pos:start="317:58" pos:end="317:64"><expr pos:start="317:58" pos:end="317:64"><name pos:start="317:58" pos:end="317:64">INT_MAX</name></expr></argument>, <argument pos:start="317:67" pos:end="317:72"><expr pos:start="317:67" pos:end="317:72"><name pos:start="317:67" pos:end="317:72">config</name></expr></argument>, <argument pos:start="317:75" pos:end="317:82"><expr pos:start="317:75" pos:end="317:82"><name pos:start="317:75" pos:end="317:82">line_num</name></expr></argument>, <argument pos:start="317:85" pos:end="317:100"><expr pos:start="317:85" pos:end="317:100"><literal type="string" pos:start="317:85" pos:end="317:100">"Invalid %s: %s"</literal></expr></argument>, <argument pos:start="317:103" pos:end="317:105"><expr pos:start="317:103" pos:end="317:105"><name pos:start="317:103" pos:end="317:105">cmd</name></expr></argument>, <argument pos:start="317:108" pos:end="317:110"><expr pos:start="317:108" pos:end="317:110"><name pos:start="317:108" pos:end="317:110">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="319:9" pos:end="321:23"><if pos:start="319:9" pos:end="321:23">if <condition pos:start="319:12" pos:end="319:62">(<expr pos:start="319:13" pos:end="319:61"><call pos:start="319:13" pos:end="319:57"><name pos:start="319:13" pos:end="319:23">av_dict_set</name><argument_list pos:start="319:24" pos:end="319:57">(<argument pos:start="319:25" pos:end="319:43"><expr pos:start="319:25" pos:end="319:43"><operator pos:start="319:25" pos:end="319:25">&amp;</operator><name pos:start="319:26" pos:end="319:43"><name pos:start="319:26" pos:end="319:31">config</name><operator pos:start="319:32" pos:end="319:33">-&gt;</operator><name pos:start="319:34" pos:end="319:43">video_conf</name></name></expr></argument>, <argument pos:start="319:46" pos:end="319:48"><expr pos:start="319:46" pos:end="319:48"><name pos:start="319:46" pos:end="319:48">cmd</name></expr></argument>, <argument pos:start="319:51" pos:end="319:53"><expr pos:start="319:51" pos:end="319:53"><name pos:start="319:51" pos:end="319:53">arg</name></expr></argument>, <argument pos:start="319:56" pos:end="319:56"><expr pos:start="319:56" pos:end="319:56"><literal type="number" pos:start="319:56" pos:end="319:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="319:59" pos:end="319:59">&lt;</operator> <literal type="number" pos:start="319:61" pos:end="319:61">0</literal></expr>)</condition><block type="pseudo" pos:start="321:13" pos:end="321:23"><block_content pos:start="321:13" pos:end="321:23">

            <goto pos:start="321:13" pos:end="321:23">goto <name pos:start="321:18" pos:end="321:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="323:7" pos:end="333:5">else if <condition pos:start="323:15" pos:end="323:51">(<expr pos:start="323:16" pos:end="323:50"><operator pos:start="323:16" pos:end="323:16">!</operator><call pos:start="323:17" pos:end="323:50"><name pos:start="323:17" pos:end="323:29">av_strcasecmp</name><argument_list pos:start="323:30" pos:end="323:50">(<argument pos:start="323:31" pos:end="323:33"><expr pos:start="323:31" pos:end="323:33"><name pos:start="323:31" pos:end="323:33">cmd</name></expr></argument>, <argument pos:start="323:36" pos:end="323:49"><expr pos:start="323:36" pos:end="323:49"><literal type="string" pos:start="323:36" pos:end="323:49">"VideoBitRate"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="323:53" pos:end="333:5">{<block_content pos:start="325:9" pos:end="331:22">

        <expr_stmt pos:start="325:9" pos:end="325:46"><expr pos:start="325:9" pos:end="325:45"><call pos:start="325:9" pos:end="325:45"><name pos:start="325:9" pos:end="325:24">ffserver_get_arg</name><argument_list pos:start="325:25" pos:end="325:45">(<argument pos:start="325:26" pos:end="325:28"><expr pos:start="325:26" pos:end="325:28"><name pos:start="325:26" pos:end="325:28">arg</name></expr></argument>, <argument pos:start="325:31" pos:end="325:41"><expr pos:start="325:31" pos:end="325:41"><sizeof pos:start="325:31" pos:end="325:41">sizeof<argument_list pos:start="325:37" pos:end="325:41">(<argument pos:start="325:38" pos:end="325:40"><expr pos:start="325:38" pos:end="325:40"><name pos:start="325:38" pos:end="325:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="325:44" pos:end="325:44"><expr pos:start="325:44" pos:end="325:44"><name pos:start="325:44" pos:end="325:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="327:9" pos:end="327:106"><expr pos:start="327:9" pos:end="327:105"><call pos:start="327:9" pos:end="327:105"><name pos:start="327:9" pos:end="327:30">ffserver_set_int_param</name><argument_list pos:start="327:31" pos:end="327:105">(<argument pos:start="327:32" pos:end="327:35"><expr pos:start="327:32" pos:end="327:35"><name pos:start="327:32" pos:end="327:35">NULL</name></expr></argument>, <argument pos:start="327:38" pos:end="327:40"><expr pos:start="327:38" pos:end="327:40"><name pos:start="327:38" pos:end="327:40">arg</name></expr></argument>, <argument pos:start="327:43" pos:end="327:46"><expr pos:start="327:43" pos:end="327:46"><literal type="number" pos:start="327:43" pos:end="327:46">1000</literal></expr></argument>, <argument pos:start="327:49" pos:end="327:49"><expr pos:start="327:49" pos:end="327:49"><literal type="number" pos:start="327:49" pos:end="327:49">0</literal></expr></argument>, <argument pos:start="327:52" pos:end="327:58"><expr pos:start="327:52" pos:end="327:58"><name pos:start="327:52" pos:end="327:58">INT_MAX</name></expr></argument>, <argument pos:start="327:61" pos:end="327:66"><expr pos:start="327:61" pos:end="327:66"><name pos:start="327:61" pos:end="327:66">config</name></expr></argument>, <argument pos:start="327:69" pos:end="327:76"><expr pos:start="327:69" pos:end="327:76"><name pos:start="327:69" pos:end="327:76">line_num</name></expr></argument>, <argument pos:start="327:79" pos:end="327:94"><expr pos:start="327:79" pos:end="327:94"><literal type="string" pos:start="327:79" pos:end="327:94">"Invalid %s: %s"</literal></expr></argument>, <argument pos:start="327:97" pos:end="327:99"><expr pos:start="327:97" pos:end="327:99"><name pos:start="327:97" pos:end="327:99">cmd</name></expr></argument>, <argument pos:start="327:102" pos:end="327:104"><expr pos:start="327:102" pos:end="327:104"><name pos:start="327:102" pos:end="327:104">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="329:9" pos:end="331:22"><if pos:start="329:9" pos:end="331:22">if <condition pos:start="329:12" pos:end="329:62">(<expr pos:start="329:13" pos:end="329:61"><call pos:start="329:13" pos:end="329:57"><name pos:start="329:13" pos:end="329:23">av_dict_set</name><argument_list pos:start="329:24" pos:end="329:57">(<argument pos:start="329:25" pos:end="329:43"><expr pos:start="329:25" pos:end="329:43"><operator pos:start="329:25" pos:end="329:25">&amp;</operator><name pos:start="329:26" pos:end="329:43"><name pos:start="329:26" pos:end="329:31">config</name><operator pos:start="329:32" pos:end="329:33">-&gt;</operator><name pos:start="329:34" pos:end="329:43">video_conf</name></name></expr></argument>, <argument pos:start="329:46" pos:end="329:48"><expr pos:start="329:46" pos:end="329:48"><name pos:start="329:46" pos:end="329:48">cmd</name></expr></argument>, <argument pos:start="329:51" pos:end="329:53"><expr pos:start="329:51" pos:end="329:53"><name pos:start="329:51" pos:end="329:53">arg</name></expr></argument>, <argument pos:start="329:56" pos:end="329:56"><expr pos:start="329:56" pos:end="329:56"><literal type="number" pos:start="329:56" pos:end="329:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="329:59" pos:end="329:59">&lt;</operator> <literal type="number" pos:start="329:61" pos:end="329:61">0</literal></expr>)</condition><block type="pseudo" pos:start="331:12" pos:end="331:22"><block_content pos:start="331:12" pos:end="331:22">

           <goto pos:start="331:12" pos:end="331:22">goto <name pos:start="331:17" pos:end="331:21">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="333:7" pos:end="355:5">else if <condition pos:start="333:15" pos:end="333:48">(<expr pos:start="333:16" pos:end="333:47"><operator pos:start="333:16" pos:end="333:16">!</operator><call pos:start="333:17" pos:end="333:47"><name pos:start="333:17" pos:end="333:29">av_strcasecmp</name><argument_list pos:start="333:30" pos:end="333:47">(<argument pos:start="333:31" pos:end="333:33"><expr pos:start="333:31" pos:end="333:33"><name pos:start="333:31" pos:end="333:33">cmd</name></expr></argument>, <argument pos:start="333:36" pos:end="333:46"><expr pos:start="333:36" pos:end="333:46"><literal type="string" pos:start="333:36" pos:end="333:46">"VideoSize"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="333:50" pos:end="355:5">{<block_content pos:start="335:9" pos:end="353:23">

        <decl_stmt pos:start="335:9" pos:end="335:22"><decl pos:start="335:9" pos:end="335:15"><type pos:start="335:9" pos:end="335:11"><name pos:start="335:9" pos:end="335:11">int</name></type> <name pos:start="335:13" pos:end="335:15">ret</name></decl>, <decl pos:start="335:18" pos:end="335:18"><type ref="prev" pos:start="335:9" pos:end="335:11"/><name pos:start="335:18" pos:end="335:18">w</name></decl>, <decl pos:start="335:21" pos:end="335:21"><type ref="prev" pos:start="335:9" pos:end="335:11"/><name pos:start="335:21" pos:end="335:21">h</name></decl>;</decl_stmt>

        <expr_stmt pos:start="337:9" pos:end="337:46"><expr pos:start="337:9" pos:end="337:45"><call pos:start="337:9" pos:end="337:45"><name pos:start="337:9" pos:end="337:24">ffserver_get_arg</name><argument_list pos:start="337:25" pos:end="337:45">(<argument pos:start="337:26" pos:end="337:28"><expr pos:start="337:26" pos:end="337:28"><name pos:start="337:26" pos:end="337:28">arg</name></expr></argument>, <argument pos:start="337:31" pos:end="337:41"><expr pos:start="337:31" pos:end="337:41"><sizeof pos:start="337:31" pos:end="337:41">sizeof<argument_list pos:start="337:37" pos:end="337:41">(<argument pos:start="337:38" pos:end="337:40"><expr pos:start="337:38" pos:end="337:40"><name pos:start="337:38" pos:end="337:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="337:44" pos:end="337:44"><expr pos:start="337:44" pos:end="337:44"><name pos:start="337:44" pos:end="337:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="339:9" pos:end="339:47"><expr pos:start="339:9" pos:end="339:46"><name pos:start="339:9" pos:end="339:11">ret</name> <operator pos:start="339:13" pos:end="339:13">=</operator> <call pos:start="339:15" pos:end="339:46"><name pos:start="339:15" pos:end="339:33">av_parse_video_size</name><argument_list pos:start="339:34" pos:end="339:46">(<argument pos:start="339:35" pos:end="339:36"><expr pos:start="339:35" pos:end="339:36"><operator pos:start="339:35" pos:end="339:35">&amp;</operator><name pos:start="339:36" pos:end="339:36">w</name></expr></argument>, <argument pos:start="339:39" pos:end="339:40"><expr pos:start="339:39" pos:end="339:40"><operator pos:start="339:39" pos:end="339:39">&amp;</operator><name pos:start="339:40" pos:end="339:40">h</name></expr></argument>, <argument pos:start="339:43" pos:end="339:45"><expr pos:start="339:43" pos:end="339:45"><name pos:start="339:43" pos:end="339:45">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="341:9" pos:end="347:59"><if pos:start="341:9" pos:end="343:52">if <condition pos:start="341:12" pos:end="341:20">(<expr pos:start="341:13" pos:end="341:19"><name pos:start="341:13" pos:end="341:15">ret</name> <operator pos:start="341:17" pos:end="341:17">&lt;</operator> <literal type="number" pos:start="341:19" pos:end="341:19">0</literal></expr>)</condition><block type="pseudo" pos:start="343:13" pos:end="343:52"><block_content pos:start="343:13" pos:end="343:52">

            <expr_stmt pos:start="343:13" pos:end="343:52"><expr pos:start="343:13" pos:end="343:51"><call pos:start="343:13" pos:end="343:51"><name pos:start="343:13" pos:end="343:17">ERROR</name><argument_list pos:start="343:18" pos:end="343:51">(<argument pos:start="343:19" pos:end="343:45"><expr pos:start="343:19" pos:end="343:45"><literal type="string" pos:start="343:19" pos:end="343:45">"Invalid video size '%s'\n"</literal></expr></argument>, <argument pos:start="343:48" pos:end="343:50"><expr pos:start="343:48" pos:end="343:50"><name pos:start="343:48" pos:end="343:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="345:9" pos:end="347:59">else if <condition pos:start="345:17" pos:end="345:38">(<expr pos:start="345:18" pos:end="345:37"><operator pos:start="345:18" pos:end="345:18">(</operator><name pos:start="345:19" pos:end="345:19">w</name> <operator pos:start="345:21" pos:end="345:21">%</operator> <literal type="number" pos:start="345:23" pos:end="345:24">16</literal><operator pos:start="345:25" pos:end="345:25">)</operator> <operator pos:start="345:27" pos:end="345:28">||</operator> <operator pos:start="345:30" pos:end="345:30">(</operator><name pos:start="345:31" pos:end="345:31">h</name> <operator pos:start="345:33" pos:end="345:33">%</operator> <literal type="number" pos:start="345:35" pos:end="345:36">16</literal><operator pos:start="345:37" pos:end="345:37">)</operator></expr>)</condition><block type="pseudo" pos:start="347:13" pos:end="347:59"><block_content pos:start="347:13" pos:end="347:59">

            <expr_stmt pos:start="347:13" pos:end="347:59"><expr pos:start="347:13" pos:end="347:58"><call pos:start="347:13" pos:end="347:58"><name pos:start="347:13" pos:end="347:17">ERROR</name><argument_list pos:start="347:18" pos:end="347:58">(<argument pos:start="347:19" pos:end="347:57"><expr pos:start="347:19" pos:end="347:57"><literal type="string" pos:start="347:19" pos:end="347:57">"Image size must be a multiple of 16\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="349:9" pos:end="353:23"><if pos:start="349:9" pos:end="353:23">if <condition pos:start="349:12" pos:end="351:78">(<expr pos:start="349:13" pos:end="351:77"><call pos:start="349:13" pos:end="349:72"><name pos:start="349:13" pos:end="349:27">av_dict_set_int</name><argument_list pos:start="349:28" pos:end="349:72">(<argument pos:start="349:29" pos:end="349:47"><expr pos:start="349:29" pos:end="349:47"><operator pos:start="349:29" pos:end="349:29">&amp;</operator><name pos:start="349:30" pos:end="349:47"><name pos:start="349:30" pos:end="349:35">config</name><operator pos:start="349:36" pos:end="349:37">-&gt;</operator><name pos:start="349:38" pos:end="349:47">video_conf</name></name></expr></argument>, <argument pos:start="349:50" pos:end="349:65"><expr pos:start="349:50" pos:end="349:65"><literal type="string" pos:start="349:50" pos:end="349:65">"VideoSizeWidth"</literal></expr></argument>, <argument pos:start="349:68" pos:end="349:68"><expr pos:start="349:68" pos:end="349:68"><name pos:start="349:68" pos:end="349:68">w</name></expr></argument>, <argument pos:start="349:71" pos:end="349:71"><expr pos:start="349:71" pos:end="349:71"><literal type="number" pos:start="349:71" pos:end="349:71">0</literal></expr></argument>)</argument_list></call> <operator pos:start="349:74" pos:end="349:74">&lt;</operator> <literal type="number" pos:start="349:76" pos:end="349:76">0</literal> <operator pos:start="349:78" pos:end="349:79">||</operator>

            <call pos:start="351:13" pos:end="351:73"><name pos:start="351:13" pos:end="351:27">av_dict_set_int</name><argument_list pos:start="351:28" pos:end="351:73">(<argument pos:start="351:29" pos:end="351:47"><expr pos:start="351:29" pos:end="351:47"><operator pos:start="351:29" pos:end="351:29">&amp;</operator><name pos:start="351:30" pos:end="351:47"><name pos:start="351:30" pos:end="351:35">config</name><operator pos:start="351:36" pos:end="351:37">-&gt;</operator><name pos:start="351:38" pos:end="351:47">video_conf</name></name></expr></argument>, <argument pos:start="351:50" pos:end="351:66"><expr pos:start="351:50" pos:end="351:66"><literal type="string" pos:start="351:50" pos:end="351:66">"VideoSizeHeight"</literal></expr></argument>, <argument pos:start="351:69" pos:end="351:69"><expr pos:start="351:69" pos:end="351:69"><name pos:start="351:69" pos:end="351:69">h</name></expr></argument>, <argument pos:start="351:72" pos:end="351:72"><expr pos:start="351:72" pos:end="351:72"><literal type="number" pos:start="351:72" pos:end="351:72">0</literal></expr></argument>)</argument_list></call> <operator pos:start="351:75" pos:end="351:75">&lt;</operator> <literal type="number" pos:start="351:77" pos:end="351:77">0</literal></expr>)</condition><block type="pseudo" pos:start="353:13" pos:end="353:23"><block_content pos:start="353:13" pos:end="353:23">

            <goto pos:start="353:13" pos:end="353:23">goto <name pos:start="353:18" pos:end="353:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="355:7" pos:end="375:5">else if <condition pos:start="355:15" pos:end="355:53">(<expr pos:start="355:16" pos:end="355:52"><operator pos:start="355:16" pos:end="355:16">!</operator><call pos:start="355:17" pos:end="355:52"><name pos:start="355:17" pos:end="355:29">av_strcasecmp</name><argument_list pos:start="355:30" pos:end="355:52">(<argument pos:start="355:31" pos:end="355:33"><expr pos:start="355:31" pos:end="355:33"><name pos:start="355:31" pos:end="355:33">cmd</name></expr></argument>, <argument pos:start="355:36" pos:end="355:51"><expr pos:start="355:36" pos:end="355:51"><literal type="string" pos:start="355:36" pos:end="355:51">"VideoFrameRate"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="355:55" pos:end="375:5">{<block_content pos:start="357:9" pos:end="373:9">

        <decl_stmt pos:start="357:9" pos:end="357:30"><decl pos:start="357:9" pos:end="357:29"><type pos:start="357:9" pos:end="357:18"><name pos:start="357:9" pos:end="357:18">AVRational</name></type> <name pos:start="357:20" pos:end="357:29">frame_rate</name></decl>;</decl_stmt>

        <expr_stmt pos:start="359:9" pos:end="359:46"><expr pos:start="359:9" pos:end="359:45"><call pos:start="359:9" pos:end="359:45"><name pos:start="359:9" pos:end="359:24">ffserver_get_arg</name><argument_list pos:start="359:25" pos:end="359:45">(<argument pos:start="359:26" pos:end="359:28"><expr pos:start="359:26" pos:end="359:28"><name pos:start="359:26" pos:end="359:28">arg</name></expr></argument>, <argument pos:start="359:31" pos:end="359:41"><expr pos:start="359:31" pos:end="359:41"><sizeof pos:start="359:31" pos:end="359:41">sizeof<argument_list pos:start="359:37" pos:end="359:41">(<argument pos:start="359:38" pos:end="359:40"><expr pos:start="359:38" pos:end="359:40"><name pos:start="359:38" pos:end="359:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="359:44" pos:end="359:44"><expr pos:start="359:44" pos:end="359:44"><name pos:start="359:44" pos:end="359:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="361:9" pos:end="373:9"><if pos:start="361:9" pos:end="365:9">if <condition pos:start="361:12" pos:end="361:54">(<expr pos:start="361:13" pos:end="361:53"><call pos:start="361:13" pos:end="361:49"><name pos:start="361:13" pos:end="361:31">av_parse_video_rate</name><argument_list pos:start="361:32" pos:end="361:49">(<argument pos:start="361:33" pos:end="361:43"><expr pos:start="361:33" pos:end="361:43"><operator pos:start="361:33" pos:end="361:33">&amp;</operator><name pos:start="361:34" pos:end="361:43">frame_rate</name></expr></argument>, <argument pos:start="361:46" pos:end="361:48"><expr pos:start="361:46" pos:end="361:48"><name pos:start="361:46" pos:end="361:48">arg</name></expr></argument>)</argument_list></call> <operator pos:start="361:51" pos:end="361:51">&lt;</operator> <literal type="number" pos:start="361:53" pos:end="361:53">0</literal></expr>)</condition> <block pos:start="361:56" pos:end="365:9">{<block_content pos:start="363:13" pos:end="363:53">

            <expr_stmt pos:start="363:13" pos:end="363:53"><expr pos:start="363:13" pos:end="363:52"><call pos:start="363:13" pos:end="363:52"><name pos:start="363:13" pos:end="363:17">ERROR</name><argument_list pos:start="363:18" pos:end="363:52">(<argument pos:start="363:19" pos:end="363:46"><expr pos:start="363:19" pos:end="363:46"><literal type="string" pos:start="363:19" pos:end="363:46">"Incorrect frame rate: %s\n"</literal></expr></argument>, <argument pos:start="363:49" pos:end="363:51"><expr pos:start="363:49" pos:end="363:51"><name pos:start="363:49" pos:end="363:51">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="365:11" pos:end="373:9">else <block pos:start="365:16" pos:end="373:9">{<block_content pos:start="367:13" pos:end="371:27">

            <if_stmt pos:start="367:13" pos:end="371:27"><if pos:start="367:13" pos:end="371:27">if <condition pos:start="367:16" pos:end="369:97">(<expr pos:start="367:17" pos:end="369:96"><call pos:start="367:17" pos:end="367:92"><name pos:start="367:17" pos:end="367:31">av_dict_set_int</name><argument_list pos:start="367:32" pos:end="367:92">(<argument pos:start="367:33" pos:end="367:51"><expr pos:start="367:33" pos:end="367:51"><operator pos:start="367:33" pos:end="367:33">&amp;</operator><name pos:start="367:34" pos:end="367:51"><name pos:start="367:34" pos:end="367:39">config</name><operator pos:start="367:40" pos:end="367:41">-&gt;</operator><name pos:start="367:42" pos:end="367:51">video_conf</name></name></expr></argument>, <argument pos:start="367:54" pos:end="367:72"><expr pos:start="367:54" pos:end="367:72"><literal type="string" pos:start="367:54" pos:end="367:72">"VideoFrameRateNum"</literal></expr></argument>, <argument pos:start="367:75" pos:end="367:88"><expr pos:start="367:75" pos:end="367:88"><name pos:start="367:75" pos:end="367:88"><name pos:start="367:75" pos:end="367:84">frame_rate</name><operator pos:start="367:85" pos:end="367:85">.</operator><name pos:start="367:86" pos:end="367:88">num</name></name></expr></argument>, <argument pos:start="367:91" pos:end="367:91"><expr pos:start="367:91" pos:end="367:91"><literal type="number" pos:start="367:91" pos:end="367:91">0</literal></expr></argument>)</argument_list></call> <operator pos:start="367:94" pos:end="367:94">&lt;</operator> <literal type="number" pos:start="367:96" pos:end="367:96">0</literal> <operator pos:start="367:98" pos:end="367:99">||</operator>

                <call pos:start="369:17" pos:end="369:92"><name pos:start="369:17" pos:end="369:31">av_dict_set_int</name><argument_list pos:start="369:32" pos:end="369:92">(<argument pos:start="369:33" pos:end="369:51"><expr pos:start="369:33" pos:end="369:51"><operator pos:start="369:33" pos:end="369:33">&amp;</operator><name pos:start="369:34" pos:end="369:51"><name pos:start="369:34" pos:end="369:39">config</name><operator pos:start="369:40" pos:end="369:41">-&gt;</operator><name pos:start="369:42" pos:end="369:51">video_conf</name></name></expr></argument>, <argument pos:start="369:54" pos:end="369:72"><expr pos:start="369:54" pos:end="369:72"><literal type="string" pos:start="369:54" pos:end="369:72">"VideoFrameRateDen"</literal></expr></argument>, <argument pos:start="369:75" pos:end="369:88"><expr pos:start="369:75" pos:end="369:88"><name pos:start="369:75" pos:end="369:88"><name pos:start="369:75" pos:end="369:84">frame_rate</name><operator pos:start="369:85" pos:end="369:85">.</operator><name pos:start="369:86" pos:end="369:88">den</name></name></expr></argument>, <argument pos:start="369:91" pos:end="369:91"><expr pos:start="369:91" pos:end="369:91"><literal type="number" pos:start="369:91" pos:end="369:91">0</literal></expr></argument>)</argument_list></call> <operator pos:start="369:94" pos:end="369:94">&lt;</operator> <literal type="number" pos:start="369:96" pos:end="369:96">0</literal></expr>)</condition><block type="pseudo" pos:start="371:17" pos:end="371:27"><block_content pos:start="371:17" pos:end="371:27">

                <goto pos:start="371:17" pos:end="371:27">goto <name pos:start="371:22" pos:end="371:26">nomem</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="375:7" pos:end="391:5">else if <condition pos:start="375:15" pos:end="375:50">(<expr pos:start="375:16" pos:end="375:49"><operator pos:start="375:16" pos:end="375:16">!</operator><call pos:start="375:17" pos:end="375:49"><name pos:start="375:17" pos:end="375:29">av_strcasecmp</name><argument_list pos:start="375:30" pos:end="375:49">(<argument pos:start="375:31" pos:end="375:33"><expr pos:start="375:31" pos:end="375:33"><name pos:start="375:31" pos:end="375:33">cmd</name></expr></argument>, <argument pos:start="375:36" pos:end="375:48"><expr pos:start="375:36" pos:end="375:48"><literal type="string" pos:start="375:36" pos:end="375:48">"PixelFormat"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="375:52" pos:end="391:5">{<block_content pos:start="377:9" pos:end="389:23">

        <decl_stmt pos:start="377:9" pos:end="377:35"><decl pos:start="377:9" pos:end="377:34"><type pos:start="377:9" pos:end="377:26"><name pos:start="377:9" pos:end="377:26"><name pos:start="377:9" pos:end="377:12">enum</name> <name pos:start="377:14" pos:end="377:26">AVPixelFormat</name></name></type> <name pos:start="377:28" pos:end="377:34">pix_fmt</name></decl>;</decl_stmt>

        <expr_stmt pos:start="379:9" pos:end="379:46"><expr pos:start="379:9" pos:end="379:45"><call pos:start="379:9" pos:end="379:45"><name pos:start="379:9" pos:end="379:24">ffserver_get_arg</name><argument_list pos:start="379:25" pos:end="379:45">(<argument pos:start="379:26" pos:end="379:28"><expr pos:start="379:26" pos:end="379:28"><name pos:start="379:26" pos:end="379:28">arg</name></expr></argument>, <argument pos:start="379:31" pos:end="379:41"><expr pos:start="379:31" pos:end="379:41"><sizeof pos:start="379:31" pos:end="379:41">sizeof<argument_list pos:start="379:37" pos:end="379:41">(<argument pos:start="379:38" pos:end="379:40"><expr pos:start="379:38" pos:end="379:40"><name pos:start="379:38" pos:end="379:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="379:44" pos:end="379:44"><expr pos:start="379:44" pos:end="379:44"><name pos:start="379:44" pos:end="379:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="381:9" pos:end="381:38"><expr pos:start="381:9" pos:end="381:37"><name pos:start="381:9" pos:end="381:15">pix_fmt</name> <operator pos:start="381:17" pos:end="381:17">=</operator> <call pos:start="381:19" pos:end="381:37"><name pos:start="381:19" pos:end="381:32">av_get_pix_fmt</name><argument_list pos:start="381:33" pos:end="381:37">(<argument pos:start="381:34" pos:end="381:36"><expr pos:start="381:34" pos:end="381:36"><name pos:start="381:34" pos:end="381:36">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="383:9" pos:end="385:53"><if pos:start="383:9" pos:end="385:53">if <condition pos:start="383:12" pos:end="383:39">(<expr pos:start="383:13" pos:end="383:38"><name pos:start="383:13" pos:end="383:19">pix_fmt</name> <operator pos:start="383:21" pos:end="383:22">==</operator> <name pos:start="383:24" pos:end="383:38">AV_PIX_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="385:13" pos:end="385:53"><block_content pos:start="385:13" pos:end="385:53">

            <expr_stmt pos:start="385:13" pos:end="385:53"><expr pos:start="385:13" pos:end="385:52"><call pos:start="385:13" pos:end="385:52"><name pos:start="385:13" pos:end="385:17">ERROR</name><argument_list pos:start="385:18" pos:end="385:52">(<argument pos:start="385:19" pos:end="385:46"><expr pos:start="385:19" pos:end="385:46"><literal type="string" pos:start="385:19" pos:end="385:46">"Unknown pixel format: %s\n"</literal></expr></argument>, <argument pos:start="385:49" pos:end="385:51"><expr pos:start="385:49" pos:end="385:51"><name pos:start="385:49" pos:end="385:51">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="387:9" pos:end="389:23"><if pos:start="387:9" pos:end="389:23">if <condition pos:start="387:12" pos:end="387:70">(<expr pos:start="387:13" pos:end="387:69"><call pos:start="387:13" pos:end="387:65"><name pos:start="387:13" pos:end="387:27">av_dict_set_int</name><argument_list pos:start="387:28" pos:end="387:65">(<argument pos:start="387:29" pos:end="387:47"><expr pos:start="387:29" pos:end="387:47"><operator pos:start="387:29" pos:end="387:29">&amp;</operator><name pos:start="387:30" pos:end="387:47"><name pos:start="387:30" pos:end="387:35">config</name><operator pos:start="387:36" pos:end="387:37">-&gt;</operator><name pos:start="387:38" pos:end="387:47">video_conf</name></name></expr></argument>, <argument pos:start="387:50" pos:end="387:52"><expr pos:start="387:50" pos:end="387:52"><name pos:start="387:50" pos:end="387:52">cmd</name></expr></argument>, <argument pos:start="387:55" pos:end="387:61"><expr pos:start="387:55" pos:end="387:61"><name pos:start="387:55" pos:end="387:61">pix_fmt</name></expr></argument>, <argument pos:start="387:64" pos:end="387:64"><expr pos:start="387:64" pos:end="387:64"><literal type="number" pos:start="387:64" pos:end="387:64">0</literal></expr></argument>)</argument_list></call> <operator pos:start="387:67" pos:end="387:67">&lt;</operator> <literal type="number" pos:start="387:69" pos:end="387:69">0</literal></expr>)</condition><block type="pseudo" pos:start="389:13" pos:end="389:23"><block_content pos:start="389:13" pos:end="389:23">

            <goto pos:start="389:13" pos:end="389:23">goto <name pos:start="389:18" pos:end="389:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="391:7" pos:end="401:5">else if <condition pos:start="391:15" pos:end="391:51">(<expr pos:start="391:16" pos:end="391:50"><operator pos:start="391:16" pos:end="391:16">!</operator><call pos:start="391:17" pos:end="391:50"><name pos:start="391:17" pos:end="391:29">av_strcasecmp</name><argument_list pos:start="391:30" pos:end="391:50">(<argument pos:start="391:31" pos:end="391:33"><expr pos:start="391:31" pos:end="391:33"><name pos:start="391:31" pos:end="391:33">cmd</name></expr></argument>, <argument pos:start="391:36" pos:end="391:49"><expr pos:start="391:36" pos:end="391:49"><literal type="string" pos:start="391:36" pos:end="391:49">"VideoGopSize"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="391:53" pos:end="401:5">{<block_content pos:start="393:9" pos:end="399:23">

        <expr_stmt pos:start="393:9" pos:end="393:46"><expr pos:start="393:9" pos:end="393:45"><call pos:start="393:9" pos:end="393:45"><name pos:start="393:9" pos:end="393:24">ffserver_get_arg</name><argument_list pos:start="393:25" pos:end="393:45">(<argument pos:start="393:26" pos:end="393:28"><expr pos:start="393:26" pos:end="393:28"><name pos:start="393:26" pos:end="393:28">arg</name></expr></argument>, <argument pos:start="393:31" pos:end="393:41"><expr pos:start="393:31" pos:end="393:41"><sizeof pos:start="393:31" pos:end="393:41">sizeof<argument_list pos:start="393:37" pos:end="393:41">(<argument pos:start="393:38" pos:end="393:40"><expr pos:start="393:38" pos:end="393:40"><name pos:start="393:38" pos:end="393:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="393:44" pos:end="393:44"><expr pos:start="393:44" pos:end="393:44"><name pos:start="393:44" pos:end="393:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="395:9" pos:end="395:109"><expr pos:start="395:9" pos:end="395:108"><call pos:start="395:9" pos:end="395:108"><name pos:start="395:9" pos:end="395:30">ffserver_set_int_param</name><argument_list pos:start="395:31" pos:end="395:108">(<argument pos:start="395:32" pos:end="395:35"><expr pos:start="395:32" pos:end="395:35"><name pos:start="395:32" pos:end="395:35">NULL</name></expr></argument>, <argument pos:start="395:38" pos:end="395:40"><expr pos:start="395:38" pos:end="395:40"><name pos:start="395:38" pos:end="395:40">arg</name></expr></argument>, <argument pos:start="395:43" pos:end="395:43"><expr pos:start="395:43" pos:end="395:43"><literal type="number" pos:start="395:43" pos:end="395:43">0</literal></expr></argument>, <argument pos:start="395:46" pos:end="395:52"><expr pos:start="395:46" pos:end="395:52"><name pos:start="395:46" pos:end="395:52">INT_MIN</name></expr></argument>, <argument pos:start="395:55" pos:end="395:61"><expr pos:start="395:55" pos:end="395:61"><name pos:start="395:55" pos:end="395:61">INT_MAX</name></expr></argument>, <argument pos:start="395:64" pos:end="395:69"><expr pos:start="395:64" pos:end="395:69"><name pos:start="395:64" pos:end="395:69">config</name></expr></argument>, <argument pos:start="395:72" pos:end="395:79"><expr pos:start="395:72" pos:end="395:79"><name pos:start="395:72" pos:end="395:79">line_num</name></expr></argument>, <argument pos:start="395:82" pos:end="395:97"><expr pos:start="395:82" pos:end="395:97"><literal type="string" pos:start="395:82" pos:end="395:97">"Invalid %s: %s"</literal></expr></argument>, <argument pos:start="395:100" pos:end="395:102"><expr pos:start="395:100" pos:end="395:102"><name pos:start="395:100" pos:end="395:102">cmd</name></expr></argument>, <argument pos:start="395:105" pos:end="395:107"><expr pos:start="395:105" pos:end="395:107"><name pos:start="395:105" pos:end="395:107">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="397:9" pos:end="399:23"><if pos:start="397:9" pos:end="399:23">if <condition pos:start="397:12" pos:end="397:62">(<expr pos:start="397:13" pos:end="397:61"><call pos:start="397:13" pos:end="397:57"><name pos:start="397:13" pos:end="397:23">av_dict_set</name><argument_list pos:start="397:24" pos:end="397:57">(<argument pos:start="397:25" pos:end="397:43"><expr pos:start="397:25" pos:end="397:43"><operator pos:start="397:25" pos:end="397:25">&amp;</operator><name pos:start="397:26" pos:end="397:43"><name pos:start="397:26" pos:end="397:31">config</name><operator pos:start="397:32" pos:end="397:33">-&gt;</operator><name pos:start="397:34" pos:end="397:43">video_conf</name></name></expr></argument>, <argument pos:start="397:46" pos:end="397:48"><expr pos:start="397:46" pos:end="397:48"><name pos:start="397:46" pos:end="397:48">cmd</name></expr></argument>, <argument pos:start="397:51" pos:end="397:53"><expr pos:start="397:51" pos:end="397:53"><name pos:start="397:51" pos:end="397:53">arg</name></expr></argument>, <argument pos:start="397:56" pos:end="397:56"><expr pos:start="397:56" pos:end="397:56"><literal type="number" pos:start="397:56" pos:end="397:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="397:59" pos:end="397:59">&lt;</operator> <literal type="number" pos:start="397:61" pos:end="397:61">0</literal></expr>)</condition><block type="pseudo" pos:start="399:13" pos:end="399:23"><block_content pos:start="399:13" pos:end="399:23">

            <goto pos:start="399:13" pos:end="399:23">goto <name pos:start="399:18" pos:end="399:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="401:7" pos:end="407:5">else if <condition pos:start="401:15" pos:end="401:53">(<expr pos:start="401:16" pos:end="401:52"><operator pos:start="401:16" pos:end="401:16">!</operator><call pos:start="401:17" pos:end="401:52"><name pos:start="401:17" pos:end="401:29">av_strcasecmp</name><argument_list pos:start="401:30" pos:end="401:52">(<argument pos:start="401:31" pos:end="401:33"><expr pos:start="401:31" pos:end="401:33"><name pos:start="401:31" pos:end="401:33">cmd</name></expr></argument>, <argument pos:start="401:36" pos:end="401:51"><expr pos:start="401:36" pos:end="401:51"><literal type="string" pos:start="401:36" pos:end="401:51">"VideoIntraOnly"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="401:55" pos:end="407:5">{<block_content pos:start="403:9" pos:end="405:23">

        <if_stmt pos:start="403:9" pos:end="405:23"><if pos:start="403:9" pos:end="405:23">if <condition pos:start="403:12" pos:end="403:62">(<expr pos:start="403:13" pos:end="403:61"><call pos:start="403:13" pos:end="403:57"><name pos:start="403:13" pos:end="403:23">av_dict_set</name><argument_list pos:start="403:24" pos:end="403:57">(<argument pos:start="403:25" pos:end="403:43"><expr pos:start="403:25" pos:end="403:43"><operator pos:start="403:25" pos:end="403:25">&amp;</operator><name pos:start="403:26" pos:end="403:43"><name pos:start="403:26" pos:end="403:31">config</name><operator pos:start="403:32" pos:end="403:33">-&gt;</operator><name pos:start="403:34" pos:end="403:43">video_conf</name></name></expr></argument>, <argument pos:start="403:46" pos:end="403:48"><expr pos:start="403:46" pos:end="403:48"><name pos:start="403:46" pos:end="403:48">cmd</name></expr></argument>, <argument pos:start="403:51" pos:end="403:53"><expr pos:start="403:51" pos:end="403:53"><literal type="string" pos:start="403:51" pos:end="403:53">"1"</literal></expr></argument>, <argument pos:start="403:56" pos:end="403:56"><expr pos:start="403:56" pos:end="403:56"><literal type="number" pos:start="403:56" pos:end="403:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="403:59" pos:end="403:59">&lt;</operator> <literal type="number" pos:start="403:61" pos:end="403:61">0</literal></expr>)</condition><block type="pseudo" pos:start="405:13" pos:end="405:23"><block_content pos:start="405:13" pos:end="405:23">

            <goto pos:start="405:13" pos:end="405:23">goto <name pos:start="405:18" pos:end="405:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="407:7" pos:end="413:5">else if <condition pos:start="407:15" pos:end="407:55">(<expr pos:start="407:16" pos:end="407:54"><operator pos:start="407:16" pos:end="407:16">!</operator><call pos:start="407:17" pos:end="407:54"><name pos:start="407:17" pos:end="407:29">av_strcasecmp</name><argument_list pos:start="407:30" pos:end="407:54">(<argument pos:start="407:31" pos:end="407:33"><expr pos:start="407:31" pos:end="407:33"><name pos:start="407:31" pos:end="407:33">cmd</name></expr></argument>, <argument pos:start="407:36" pos:end="407:53"><expr pos:start="407:36" pos:end="407:53"><literal type="string" pos:start="407:36" pos:end="407:53">"VideoHighQuality"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="407:57" pos:end="413:5">{<block_content pos:start="409:9" pos:end="411:23">

        <if_stmt pos:start="409:9" pos:end="411:23"><if pos:start="409:9" pos:end="411:23">if <condition pos:start="409:12" pos:end="409:61">(<expr pos:start="409:13" pos:end="409:60"><call pos:start="409:13" pos:end="409:56"><name pos:start="409:13" pos:end="409:23">av_dict_set</name><argument_list pos:start="409:24" pos:end="409:56">(<argument pos:start="409:25" pos:end="409:43"><expr pos:start="409:25" pos:end="409:43"><operator pos:start="409:25" pos:end="409:25">&amp;</operator><name pos:start="409:26" pos:end="409:43"><name pos:start="409:26" pos:end="409:31">config</name><operator pos:start="409:32" pos:end="409:33">-&gt;</operator><name pos:start="409:34" pos:end="409:43">video_conf</name></name></expr></argument>, <argument pos:start="409:46" pos:end="409:48"><expr pos:start="409:46" pos:end="409:48"><name pos:start="409:46" pos:end="409:48">cmd</name></expr></argument>, <argument pos:start="409:51" pos:end="409:52"><expr pos:start="409:51" pos:end="409:52"><literal type="string" pos:start="409:51" pos:end="409:52">""</literal></expr></argument>, <argument pos:start="409:55" pos:end="409:55"><expr pos:start="409:55" pos:end="409:55"><literal type="number" pos:start="409:55" pos:end="409:55">0</literal></expr></argument>)</argument_list></call> <operator pos:start="409:58" pos:end="409:58">&lt;</operator> <literal type="number" pos:start="409:60" pos:end="409:60">0</literal></expr>)</condition><block type="pseudo" pos:start="411:13" pos:end="411:23"><block_content pos:start="411:13" pos:end="411:23">

            <goto pos:start="411:13" pos:end="411:23">goto <name pos:start="411:18" pos:end="411:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="413:7" pos:end="419:5">else if <condition pos:start="413:15" pos:end="413:57">(<expr pos:start="413:16" pos:end="413:56"><operator pos:start="413:16" pos:end="413:16">!</operator><call pos:start="413:17" pos:end="413:56"><name pos:start="413:17" pos:end="413:29">av_strcasecmp</name><argument_list pos:start="413:30" pos:end="413:56">(<argument pos:start="413:31" pos:end="413:33"><expr pos:start="413:31" pos:end="413:33"><name pos:start="413:31" pos:end="413:33">cmd</name></expr></argument>, <argument pos:start="413:36" pos:end="413:55"><expr pos:start="413:36" pos:end="413:55"><literal type="string" pos:start="413:36" pos:end="413:55">"Video4MotionVector"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="413:59" pos:end="419:5">{<block_content pos:start="415:9" pos:end="417:23">

        <if_stmt pos:start="415:9" pos:end="417:23"><if pos:start="415:9" pos:end="417:23">if <condition pos:start="415:12" pos:end="415:61">(<expr pos:start="415:13" pos:end="415:60"><call pos:start="415:13" pos:end="415:56"><name pos:start="415:13" pos:end="415:23">av_dict_set</name><argument_list pos:start="415:24" pos:end="415:56">(<argument pos:start="415:25" pos:end="415:43"><expr pos:start="415:25" pos:end="415:43"><operator pos:start="415:25" pos:end="415:25">&amp;</operator><name pos:start="415:26" pos:end="415:43"><name pos:start="415:26" pos:end="415:31">config</name><operator pos:start="415:32" pos:end="415:33">-&gt;</operator><name pos:start="415:34" pos:end="415:43">video_conf</name></name></expr></argument>, <argument pos:start="415:46" pos:end="415:48"><expr pos:start="415:46" pos:end="415:48"><name pos:start="415:46" pos:end="415:48">cmd</name></expr></argument>, <argument pos:start="415:51" pos:end="415:52"><expr pos:start="415:51" pos:end="415:52"><literal type="string" pos:start="415:51" pos:end="415:52">""</literal></expr></argument>, <argument pos:start="415:55" pos:end="415:55"><expr pos:start="415:55" pos:end="415:55"><literal type="number" pos:start="415:55" pos:end="415:55">0</literal></expr></argument>)</argument_list></call> <operator pos:start="415:58" pos:end="415:58">&lt;</operator> <literal type="number" pos:start="415:60" pos:end="415:60">0</literal></expr>)</condition><block type="pseudo" pos:start="417:13" pos:end="417:23"><block_content pos:start="417:13" pos:end="417:23">

            <goto pos:start="417:13" pos:end="417:23">goto <name pos:start="417:18" pos:end="417:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="419:7" pos:end="441:5">else if <condition pos:start="419:15" pos:end="421:52">(<expr pos:start="419:16" pos:end="421:51"><operator pos:start="419:16" pos:end="419:16">!</operator><call pos:start="419:17" pos:end="419:51"><name pos:start="419:17" pos:end="419:29">av_strcasecmp</name><argument_list pos:start="419:30" pos:end="419:51">(<argument pos:start="419:31" pos:end="419:33"><expr pos:start="419:31" pos:end="419:33"><name pos:start="419:31" pos:end="419:33">cmd</name></expr></argument>, <argument pos:start="419:36" pos:end="419:50"><expr pos:start="419:36" pos:end="419:50"><literal type="string" pos:start="419:36" pos:end="419:50">"AVOptionVideo"</literal></expr></argument>)</argument_list></call> <operator pos:start="419:53" pos:end="419:54">||</operator>

               <operator pos:start="421:16" pos:end="421:16">!</operator><call pos:start="421:17" pos:end="421:51"><name pos:start="421:17" pos:end="421:29">av_strcasecmp</name><argument_list pos:start="421:30" pos:end="421:51">(<argument pos:start="421:31" pos:end="421:33"><expr pos:start="421:31" pos:end="421:33"><name pos:start="421:31" pos:end="421:33">cmd</name></expr></argument>, <argument pos:start="421:36" pos:end="421:50"><expr pos:start="421:36" pos:end="421:50"><literal type="string" pos:start="421:36" pos:end="421:50">"AVOptionAudio"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="421:54" pos:end="441:5">{<block_content pos:start="423:9" pos:end="439:23">

        <decl_stmt pos:start="423:9" pos:end="423:28"><decl pos:start="423:9" pos:end="423:27"><type pos:start="423:9" pos:end="423:23"><name pos:start="423:9" pos:end="423:20">AVDictionary</name> <modifier pos:start="423:22" pos:end="423:22">*</modifier><modifier pos:start="423:23" pos:end="423:23">*</modifier></type><name pos:start="423:24" pos:end="423:27">dict</name></decl>;</decl_stmt>

        <expr_stmt pos:start="425:9" pos:end="425:46"><expr pos:start="425:9" pos:end="425:45"><call pos:start="425:9" pos:end="425:45"><name pos:start="425:9" pos:end="425:24">ffserver_get_arg</name><argument_list pos:start="425:25" pos:end="425:45">(<argument pos:start="425:26" pos:end="425:28"><expr pos:start="425:26" pos:end="425:28"><name pos:start="425:26" pos:end="425:28">arg</name></expr></argument>, <argument pos:start="425:31" pos:end="425:41"><expr pos:start="425:31" pos:end="425:41"><sizeof pos:start="425:31" pos:end="425:41">sizeof<argument_list pos:start="425:37" pos:end="425:41">(<argument pos:start="425:38" pos:end="425:40"><expr pos:start="425:38" pos:end="425:40"><name pos:start="425:38" pos:end="425:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="425:44" pos:end="425:44"><expr pos:start="425:44" pos:end="425:44"><name pos:start="425:44" pos:end="425:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="427:9" pos:end="427:48"><expr pos:start="427:9" pos:end="427:47"><call pos:start="427:9" pos:end="427:47"><name pos:start="427:9" pos:end="427:24">ffserver_get_arg</name><argument_list pos:start="427:25" pos:end="427:47">(<argument pos:start="427:26" pos:end="427:29"><expr pos:start="427:26" pos:end="427:29"><name pos:start="427:26" pos:end="427:29">arg2</name></expr></argument>, <argument pos:start="427:32" pos:end="427:43"><expr pos:start="427:32" pos:end="427:43"><sizeof pos:start="427:32" pos:end="427:43">sizeof<argument_list pos:start="427:38" pos:end="427:43">(<argument pos:start="427:39" pos:end="427:42"><expr pos:start="427:39" pos:end="427:42"><name pos:start="427:39" pos:end="427:42">arg2</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="427:46" pos:end="427:46"><expr pos:start="427:46" pos:end="427:46"><name pos:start="427:46" pos:end="427:46">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="429:9" pos:end="435:39"><if pos:start="429:9" pos:end="431:39">if <condition pos:start="429:12" pos:end="429:49">(<expr pos:start="429:13" pos:end="429:48"><operator pos:start="429:13" pos:end="429:13">!</operator><call pos:start="429:14" pos:end="429:48"><name pos:start="429:14" pos:end="429:26">av_strcasecmp</name><argument_list pos:start="429:27" pos:end="429:48">(<argument pos:start="429:28" pos:end="429:30"><expr pos:start="429:28" pos:end="429:30"><name pos:start="429:28" pos:end="429:30">cmd</name></expr></argument>, <argument pos:start="429:33" pos:end="429:47"><expr pos:start="429:33" pos:end="429:47"><literal type="string" pos:start="429:33" pos:end="429:47">"AVOptionVideo"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="431:13" pos:end="431:39"><block_content pos:start="431:13" pos:end="431:39">

            <expr_stmt pos:start="431:13" pos:end="431:39"><expr pos:start="431:13" pos:end="431:38"><name pos:start="431:13" pos:end="431:16">dict</name> <operator pos:start="431:18" pos:end="431:18">=</operator> <operator pos:start="431:20" pos:end="431:20">&amp;</operator><name pos:start="431:21" pos:end="431:38"><name pos:start="431:21" pos:end="431:26">config</name><operator pos:start="431:27" pos:end="431:28">-&gt;</operator><name pos:start="431:29" pos:end="431:38">video_opts</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="433:9" pos:end="435:39">else<block type="pseudo" pos:start="435:13" pos:end="435:39"><block_content pos:start="435:13" pos:end="435:39">

            <expr_stmt pos:start="435:13" pos:end="435:39"><expr pos:start="435:13" pos:end="435:38"><name pos:start="435:13" pos:end="435:16">dict</name> <operator pos:start="435:18" pos:end="435:18">=</operator> <operator pos:start="435:20" pos:end="435:20">&amp;</operator><name pos:start="435:21" pos:end="435:38"><name pos:start="435:21" pos:end="435:26">config</name><operator pos:start="435:27" pos:end="435:28">-&gt;</operator><name pos:start="435:29" pos:end="435:38">audio_opts</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="437:9" pos:end="439:23"><if pos:start="437:9" pos:end="439:23">if <condition pos:start="437:12" pos:end="437:48">(<expr pos:start="437:13" pos:end="437:47"><call pos:start="437:13" pos:end="437:43"><name pos:start="437:13" pos:end="437:23">av_dict_set</name><argument_list pos:start="437:24" pos:end="437:43">(<argument pos:start="437:25" pos:end="437:28"><expr pos:start="437:25" pos:end="437:28"><name pos:start="437:25" pos:end="437:28">dict</name></expr></argument>, <argument pos:start="437:31" pos:end="437:33"><expr pos:start="437:31" pos:end="437:33"><name pos:start="437:31" pos:end="437:33">arg</name></expr></argument>, <argument pos:start="437:36" pos:end="437:39"><expr pos:start="437:36" pos:end="437:39"><name pos:start="437:36" pos:end="437:39">arg2</name></expr></argument>, <argument pos:start="437:42" pos:end="437:42"><expr pos:start="437:42" pos:end="437:42"><literal type="number" pos:start="437:42" pos:end="437:42">0</literal></expr></argument>)</argument_list></call> <operator pos:start="437:45" pos:end="437:45">&lt;</operator> <literal type="number" pos:start="437:47" pos:end="437:47">0</literal></expr>)</condition><block type="pseudo" pos:start="439:13" pos:end="439:23"><block_content pos:start="439:13" pos:end="439:23">

            <goto pos:start="439:13" pos:end="439:23">goto <name pos:start="439:18" pos:end="439:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="441:7" pos:end="469:5">else if <condition pos:start="441:15" pos:end="443:52">(<expr pos:start="441:16" pos:end="443:51"><operator pos:start="441:16" pos:end="441:16">!</operator><call pos:start="441:17" pos:end="441:51"><name pos:start="441:17" pos:end="441:29">av_strcasecmp</name><argument_list pos:start="441:30" pos:end="441:51">(<argument pos:start="441:31" pos:end="441:33"><expr pos:start="441:31" pos:end="441:33"><name pos:start="441:31" pos:end="441:33">cmd</name></expr></argument>, <argument pos:start="441:36" pos:end="441:50"><expr pos:start="441:36" pos:end="441:50"><literal type="string" pos:start="441:36" pos:end="441:50">"AVPresetVideo"</literal></expr></argument>)</argument_list></call> <operator pos:start="441:53" pos:end="441:54">||</operator>

               <operator pos:start="443:16" pos:end="443:16">!</operator><call pos:start="443:17" pos:end="443:51"><name pos:start="443:17" pos:end="443:29">av_strcasecmp</name><argument_list pos:start="443:30" pos:end="443:51">(<argument pos:start="443:31" pos:end="443:33"><expr pos:start="443:31" pos:end="443:33"><name pos:start="443:31" pos:end="443:33">cmd</name></expr></argument>, <argument pos:start="443:36" pos:end="443:50"><expr pos:start="443:36" pos:end="443:50"><literal type="string" pos:start="443:36" pos:end="443:50">"AVPresetAudio"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="443:54" pos:end="469:5">{<block_content pos:start="445:9" pos:end="467:35">

        <decl_stmt pos:start="445:9" pos:end="445:29"><decl pos:start="445:9" pos:end="445:28"><type pos:start="445:9" pos:end="445:15"><name pos:start="445:9" pos:end="445:12">char</name> <modifier pos:start="445:14" pos:end="445:14">*</modifier><modifier pos:start="445:15" pos:end="445:15">*</modifier></type><name pos:start="445:16" pos:end="445:21">preset</name> <init pos:start="445:23" pos:end="445:28">= <expr pos:start="445:25" pos:end="445:28"><name pos:start="445:25" pos:end="445:28">NULL</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="447:9" pos:end="447:46"><expr pos:start="447:9" pos:end="447:45"><call pos:start="447:9" pos:end="447:45"><name pos:start="447:9" pos:end="447:24">ffserver_get_arg</name><argument_list pos:start="447:25" pos:end="447:45">(<argument pos:start="447:26" pos:end="447:28"><expr pos:start="447:26" pos:end="447:28"><name pos:start="447:26" pos:end="447:28">arg</name></expr></argument>, <argument pos:start="447:31" pos:end="447:41"><expr pos:start="447:31" pos:end="447:41"><sizeof pos:start="447:31" pos:end="447:41">sizeof<argument_list pos:start="447:37" pos:end="447:41">(<argument pos:start="447:38" pos:end="447:40"><expr pos:start="447:38" pos:end="447:40"><name pos:start="447:38" pos:end="447:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="447:44" pos:end="447:44"><expr pos:start="447:44" pos:end="447:44"><name pos:start="447:44" pos:end="447:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="449:9" pos:end="461:9"><if pos:start="449:9" pos:end="455:9">if <condition pos:start="449:12" pos:end="449:49">(<expr pos:start="449:13" pos:end="449:48"><operator pos:start="449:13" pos:end="449:13">!</operator><call pos:start="449:14" pos:end="449:48"><name pos:start="449:14" pos:end="449:26">av_strcasecmp</name><argument_list pos:start="449:27" pos:end="449:48">(<argument pos:start="449:28" pos:end="449:30"><expr pos:start="449:28" pos:end="449:30"><name pos:start="449:28" pos:end="449:30">cmd</name></expr></argument>, <argument pos:start="449:33" pos:end="449:47"><expr pos:start="449:33" pos:end="449:47"><literal type="string" pos:start="449:33" pos:end="449:47">"AVPresetVideo"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="449:51" pos:end="455:9">{<block_content pos:start="451:13" pos:end="453:71">

            <expr_stmt pos:start="451:13" pos:end="451:43"><expr pos:start="451:13" pos:end="451:42"><name pos:start="451:13" pos:end="451:18">preset</name> <operator pos:start="451:20" pos:end="451:20">=</operator> <operator pos:start="451:22" pos:end="451:22">&amp;</operator><name pos:start="451:23" pos:end="451:42"><name pos:start="451:23" pos:end="451:28">config</name><operator pos:start="451:29" pos:end="451:30">-&gt;</operator><name pos:start="451:31" pos:end="451:42">video_preset</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="453:13" pos:end="453:71"><expr pos:start="453:13" pos:end="453:70"><call pos:start="453:13" pos:end="453:70"><name pos:start="453:13" pos:end="453:31">ffserver_opt_preset</name><argument_list pos:start="453:32" pos:end="453:70">(<argument pos:start="453:33" pos:end="453:35"><expr pos:start="453:33" pos:end="453:35"><name pos:start="453:33" pos:end="453:35">arg</name></expr></argument>, <argument pos:start="453:38" pos:end="453:41"><expr pos:start="453:38" pos:end="453:41"><name pos:start="453:38" pos:end="453:41">NULL</name></expr></argument>, <argument pos:start="453:44" pos:end="453:44"><expr pos:start="453:44" pos:end="453:44"><literal type="number" pos:start="453:44" pos:end="453:44">0</literal></expr></argument>, <argument pos:start="453:47" pos:end="453:50"><expr pos:start="453:47" pos:end="453:50"><name pos:start="453:47" pos:end="453:50">NULL</name></expr></argument>, <argument pos:start="453:53" pos:end="453:69"><expr pos:start="453:53" pos:end="453:69"><operator pos:start="453:53" pos:end="453:53">&amp;</operator><name pos:start="453:54" pos:end="453:69"><name pos:start="453:54" pos:end="453:59">config</name><operator pos:start="453:60" pos:end="453:61">-&gt;</operator><name pos:start="453:62" pos:end="453:69">video_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="455:11" pos:end="461:9">else <block pos:start="455:16" pos:end="461:9">{<block_content pos:start="457:13" pos:end="459:71">

            <expr_stmt pos:start="457:13" pos:end="457:43"><expr pos:start="457:13" pos:end="457:42"><name pos:start="457:13" pos:end="457:18">preset</name> <operator pos:start="457:20" pos:end="457:20">=</operator> <operator pos:start="457:22" pos:end="457:22">&amp;</operator><name pos:start="457:23" pos:end="457:42"><name pos:start="457:23" pos:end="457:28">config</name><operator pos:start="457:29" pos:end="457:30">-&gt;</operator><name pos:start="457:31" pos:end="457:42">audio_preset</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="459:13" pos:end="459:71"><expr pos:start="459:13" pos:end="459:70"><call pos:start="459:13" pos:end="459:70"><name pos:start="459:13" pos:end="459:31">ffserver_opt_preset</name><argument_list pos:start="459:32" pos:end="459:70">(<argument pos:start="459:33" pos:end="459:35"><expr pos:start="459:33" pos:end="459:35"><name pos:start="459:33" pos:end="459:35">arg</name></expr></argument>, <argument pos:start="459:38" pos:end="459:41"><expr pos:start="459:38" pos:end="459:41"><name pos:start="459:38" pos:end="459:41">NULL</name></expr></argument>, <argument pos:start="459:44" pos:end="459:44"><expr pos:start="459:44" pos:end="459:44"><literal type="number" pos:start="459:44" pos:end="459:44">0</literal></expr></argument>, <argument pos:start="459:47" pos:end="459:63"><expr pos:start="459:47" pos:end="459:63"><operator pos:start="459:47" pos:end="459:47">&amp;</operator><name pos:start="459:48" pos:end="459:63"><name pos:start="459:48" pos:end="459:53">config</name><operator pos:start="459:54" pos:end="459:55">-&gt;</operator><name pos:start="459:56" pos:end="459:63">audio_id</name></name></expr></argument>, <argument pos:start="459:66" pos:end="459:69"><expr pos:start="459:66" pos:end="459:69"><name pos:start="459:66" pos:end="459:69">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="463:9" pos:end="463:33"><expr pos:start="463:9" pos:end="463:32"><operator pos:start="463:9" pos:end="463:9">*</operator><name pos:start="463:10" pos:end="463:15">preset</name> <operator pos:start="463:17" pos:end="463:17">=</operator> <call pos:start="463:19" pos:end="463:32"><name pos:start="463:19" pos:end="463:27">av_strdup</name><argument_list pos:start="463:28" pos:end="463:32">(<argument pos:start="463:29" pos:end="463:31"><expr pos:start="463:29" pos:end="463:31"><name pos:start="463:29" pos:end="463:31">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="465:9" pos:end="467:35"><if pos:start="465:9" pos:end="467:35">if <condition pos:start="465:12" pos:end="465:20">(<expr pos:start="465:13" pos:end="465:19"><operator pos:start="465:13" pos:end="465:13">!</operator><name pos:start="465:14" pos:end="465:19">preset</name></expr>)</condition><block type="pseudo" pos:start="467:13" pos:end="467:35"><block_content pos:start="467:13" pos:end="467:35">

            <return pos:start="467:13" pos:end="467:35">return <expr pos:start="467:20" pos:end="467:34"><call pos:start="467:20" pos:end="467:34"><name pos:start="467:20" pos:end="467:26">AVERROR</name><argument_list pos:start="467:27" pos:end="467:34">(<argument pos:start="467:28" pos:end="467:33"><expr pos:start="467:28" pos:end="467:33"><name pos:start="467:28" pos:end="467:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="469:7" pos:end="481:5">else if <condition pos:start="469:15" pos:end="469:47">(<expr pos:start="469:16" pos:end="469:46"><operator pos:start="469:16" pos:end="469:16">!</operator><call pos:start="469:17" pos:end="469:46"><name pos:start="469:17" pos:end="469:29">av_strcasecmp</name><argument_list pos:start="469:30" pos:end="469:46">(<argument pos:start="469:31" pos:end="469:33"><expr pos:start="469:31" pos:end="469:33"><name pos:start="469:31" pos:end="469:33">cmd</name></expr></argument>, <argument pos:start="469:36" pos:end="469:45"><expr pos:start="469:36" pos:end="469:45"><literal type="string" pos:start="469:36" pos:end="469:45">"VideoTag"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="469:49" pos:end="481:5">{<block_content pos:start="471:9" pos:end="479:9">

        <expr_stmt pos:start="471:9" pos:end="471:46"><expr pos:start="471:9" pos:end="471:45"><call pos:start="471:9" pos:end="471:45"><name pos:start="471:9" pos:end="471:24">ffserver_get_arg</name><argument_list pos:start="471:25" pos:end="471:45">(<argument pos:start="471:26" pos:end="471:28"><expr pos:start="471:26" pos:end="471:28"><name pos:start="471:26" pos:end="471:28">arg</name></expr></argument>, <argument pos:start="471:31" pos:end="471:41"><expr pos:start="471:31" pos:end="471:41"><sizeof pos:start="471:31" pos:end="471:41">sizeof<argument_list pos:start="471:37" pos:end="471:41">(<argument pos:start="471:38" pos:end="471:40"><expr pos:start="471:38" pos:end="471:40"><name pos:start="471:38" pos:end="471:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="471:44" pos:end="471:44"><expr pos:start="471:44" pos:end="471:44"><name pos:start="471:44" pos:end="471:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="473:9" pos:end="479:9"><if pos:start="473:9" pos:end="479:9">if <condition pos:start="473:12" pos:end="473:29">(<expr pos:start="473:13" pos:end="473:28"><call pos:start="473:13" pos:end="473:23"><name pos:start="473:13" pos:end="473:18">strlen</name><argument_list pos:start="473:19" pos:end="473:23">(<argument pos:start="473:20" pos:end="473:22"><expr pos:start="473:20" pos:end="473:22"><name pos:start="473:20" pos:end="473:22">arg</name></expr></argument>)</argument_list></call> <operator pos:start="473:25" pos:end="473:26">==</operator> <literal type="number" pos:start="473:28" pos:end="473:28">4</literal></expr>)</condition> <block pos:start="473:31" pos:end="479:9">{<block_content pos:start="475:13" pos:end="477:27">

            <if_stmt pos:start="475:13" pos:end="477:27"><if pos:start="475:13" pos:end="477:27">if <condition pos:start="475:16" pos:end="475:75">(<expr pos:start="475:17" pos:end="475:74"><call pos:start="475:17" pos:end="475:70"><name pos:start="475:17" pos:end="475:27">av_dict_set</name><argument_list pos:start="475:28" pos:end="475:70">(<argument pos:start="475:29" pos:end="475:47"><expr pos:start="475:29" pos:end="475:47"><operator pos:start="475:29" pos:end="475:29">&amp;</operator><name pos:start="475:30" pos:end="475:47"><name pos:start="475:30" pos:end="475:35">config</name><operator pos:start="475:36" pos:end="475:37">-&gt;</operator><name pos:start="475:38" pos:end="475:47">video_conf</name></name></expr></argument>, <argument pos:start="475:50" pos:end="475:59"><expr pos:start="475:50" pos:end="475:59"><literal type="string" pos:start="475:50" pos:end="475:59">"VideoTag"</literal></expr></argument>, <argument pos:start="475:62" pos:end="475:66"><expr pos:start="475:62" pos:end="475:66"><literal type="string" pos:start="475:62" pos:end="475:66">"arg"</literal></expr></argument>, <argument pos:start="475:69" pos:end="475:69"><expr pos:start="475:69" pos:end="475:69"><literal type="number" pos:start="475:69" pos:end="475:69">0</literal></expr></argument>)</argument_list></call> <operator pos:start="475:72" pos:end="475:72">&lt;</operator> <literal type="number" pos:start="475:74" pos:end="475:74">0</literal></expr>)</condition><block type="pseudo" pos:start="477:17" pos:end="477:27"><block_content pos:start="477:17" pos:end="477:27">

                <goto pos:start="477:17" pos:end="477:27">goto <name pos:start="477:22" pos:end="477:26">nomem</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="481:7" pos:end="487:5">else if <condition pos:start="481:15" pos:end="481:47">(<expr pos:start="481:16" pos:end="481:46"><operator pos:start="481:16" pos:end="481:16">!</operator><call pos:start="481:17" pos:end="481:46"><name pos:start="481:17" pos:end="481:29">av_strcasecmp</name><argument_list pos:start="481:30" pos:end="481:46">(<argument pos:start="481:31" pos:end="481:33"><expr pos:start="481:31" pos:end="481:33"><name pos:start="481:31" pos:end="481:33">cmd</name></expr></argument>, <argument pos:start="481:36" pos:end="481:45"><expr pos:start="481:36" pos:end="481:45"><literal type="string" pos:start="481:36" pos:end="481:45">"BitExact"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="481:49" pos:end="487:5">{<block_content pos:start="483:9" pos:end="485:23">

        <if_stmt pos:start="483:9" pos:end="485:23"><if pos:start="483:9" pos:end="485:23">if <condition pos:start="483:12" pos:end="483:61">(<expr pos:start="483:13" pos:end="483:60"><call pos:start="483:13" pos:end="483:56"><name pos:start="483:13" pos:end="483:23">av_dict_set</name><argument_list pos:start="483:24" pos:end="483:56">(<argument pos:start="483:25" pos:end="483:43"><expr pos:start="483:25" pos:end="483:43"><operator pos:start="483:25" pos:end="483:25">&amp;</operator><name pos:start="483:26" pos:end="483:43"><name pos:start="483:26" pos:end="483:31">config</name><operator pos:start="483:32" pos:end="483:33">-&gt;</operator><name pos:start="483:34" pos:end="483:43">video_conf</name></name></expr></argument>, <argument pos:start="483:46" pos:end="483:48"><expr pos:start="483:46" pos:end="483:48"><name pos:start="483:46" pos:end="483:48">cmd</name></expr></argument>, <argument pos:start="483:51" pos:end="483:52"><expr pos:start="483:51" pos:end="483:52"><literal type="string" pos:start="483:51" pos:end="483:52">""</literal></expr></argument>, <argument pos:start="483:55" pos:end="483:55"><expr pos:start="483:55" pos:end="483:55"><literal type="number" pos:start="483:55" pos:end="483:55">0</literal></expr></argument>)</argument_list></call> <operator pos:start="483:58" pos:end="483:58">&lt;</operator> <literal type="number" pos:start="483:60" pos:end="483:60">0</literal></expr>)</condition><block type="pseudo" pos:start="485:13" pos:end="485:23"><block_content pos:start="485:13" pos:end="485:23">

            <goto pos:start="485:13" pos:end="485:23">goto <name pos:start="485:18" pos:end="485:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="487:7" pos:end="493:5">else if <condition pos:start="487:15" pos:end="487:49">(<expr pos:start="487:16" pos:end="487:48"><operator pos:start="487:16" pos:end="487:16">!</operator><call pos:start="487:17" pos:end="487:48"><name pos:start="487:17" pos:end="487:29">av_strcasecmp</name><argument_list pos:start="487:30" pos:end="487:48">(<argument pos:start="487:31" pos:end="487:33"><expr pos:start="487:31" pos:end="487:33"><name pos:start="487:31" pos:end="487:33">cmd</name></expr></argument>, <argument pos:start="487:36" pos:end="487:47"><expr pos:start="487:36" pos:end="487:47"><literal type="string" pos:start="487:36" pos:end="487:47">"DctFastint"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="487:51" pos:end="493:5">{<block_content pos:start="489:9" pos:end="491:23">

        <if_stmt pos:start="489:9" pos:end="491:23"><if pos:start="489:9" pos:end="491:23">if <condition pos:start="489:12" pos:end="489:61">(<expr pos:start="489:13" pos:end="489:60"><call pos:start="489:13" pos:end="489:56"><name pos:start="489:13" pos:end="489:23">av_dict_set</name><argument_list pos:start="489:24" pos:end="489:56">(<argument pos:start="489:25" pos:end="489:43"><expr pos:start="489:25" pos:end="489:43"><operator pos:start="489:25" pos:end="489:25">&amp;</operator><name pos:start="489:26" pos:end="489:43"><name pos:start="489:26" pos:end="489:31">config</name><operator pos:start="489:32" pos:end="489:33">-&gt;</operator><name pos:start="489:34" pos:end="489:43">video_conf</name></name></expr></argument>, <argument pos:start="489:46" pos:end="489:48"><expr pos:start="489:46" pos:end="489:48"><name pos:start="489:46" pos:end="489:48">cmd</name></expr></argument>, <argument pos:start="489:51" pos:end="489:52"><expr pos:start="489:51" pos:end="489:52"><literal type="string" pos:start="489:51" pos:end="489:52">""</literal></expr></argument>, <argument pos:start="489:55" pos:end="489:55"><expr pos:start="489:55" pos:end="489:55"><literal type="number" pos:start="489:55" pos:end="489:55">0</literal></expr></argument>)</argument_list></call> <operator pos:start="489:58" pos:end="489:58">&lt;</operator> <literal type="number" pos:start="489:60" pos:end="489:60">0</literal></expr>)</condition><block type="pseudo" pos:start="491:13" pos:end="491:23"><block_content pos:start="491:13" pos:end="491:23">

            <goto pos:start="491:13" pos:end="491:23">goto <name pos:start="491:18" pos:end="491:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="493:7" pos:end="499:5">else if <condition pos:start="493:15" pos:end="493:49">(<expr pos:start="493:16" pos:end="493:48"><operator pos:start="493:16" pos:end="493:16">!</operator><call pos:start="493:17" pos:end="493:48"><name pos:start="493:17" pos:end="493:29">av_strcasecmp</name><argument_list pos:start="493:30" pos:end="493:48">(<argument pos:start="493:31" pos:end="493:33"><expr pos:start="493:31" pos:end="493:33"><name pos:start="493:31" pos:end="493:33">cmd</name></expr></argument>, <argument pos:start="493:36" pos:end="493:47"><expr pos:start="493:36" pos:end="493:47"><literal type="string" pos:start="493:36" pos:end="493:47">"IdctSimple"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="493:51" pos:end="499:5">{<block_content pos:start="495:9" pos:end="497:23">

        <if_stmt pos:start="495:9" pos:end="497:23"><if pos:start="495:9" pos:end="497:23">if <condition pos:start="495:12" pos:end="495:61">(<expr pos:start="495:13" pos:end="495:60"><call pos:start="495:13" pos:end="495:56"><name pos:start="495:13" pos:end="495:23">av_dict_set</name><argument_list pos:start="495:24" pos:end="495:56">(<argument pos:start="495:25" pos:end="495:43"><expr pos:start="495:25" pos:end="495:43"><operator pos:start="495:25" pos:end="495:25">&amp;</operator><name pos:start="495:26" pos:end="495:43"><name pos:start="495:26" pos:end="495:31">config</name><operator pos:start="495:32" pos:end="495:33">-&gt;</operator><name pos:start="495:34" pos:end="495:43">video_conf</name></name></expr></argument>, <argument pos:start="495:46" pos:end="495:48"><expr pos:start="495:46" pos:end="495:48"><name pos:start="495:46" pos:end="495:48">cmd</name></expr></argument>, <argument pos:start="495:51" pos:end="495:52"><expr pos:start="495:51" pos:end="495:52"><literal type="string" pos:start="495:51" pos:end="495:52">""</literal></expr></argument>, <argument pos:start="495:55" pos:end="495:55"><expr pos:start="495:55" pos:end="495:55"><literal type="number" pos:start="495:55" pos:end="495:55">0</literal></expr></argument>)</argument_list></call> <operator pos:start="495:58" pos:end="495:58">&lt;</operator> <literal type="number" pos:start="495:60" pos:end="495:60">0</literal></expr>)</condition><block type="pseudo" pos:start="497:13" pos:end="497:23"><block_content pos:start="497:13" pos:end="497:23">

            <goto pos:start="497:13" pos:end="497:23">goto <name pos:start="497:18" pos:end="497:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="499:7" pos:end="507:5">else if <condition pos:start="499:15" pos:end="499:45">(<expr pos:start="499:16" pos:end="499:44"><operator pos:start="499:16" pos:end="499:16">!</operator><call pos:start="499:17" pos:end="499:44"><name pos:start="499:17" pos:end="499:29">av_strcasecmp</name><argument_list pos:start="499:30" pos:end="499:44">(<argument pos:start="499:31" pos:end="499:33"><expr pos:start="499:31" pos:end="499:33"><name pos:start="499:31" pos:end="499:33">cmd</name></expr></argument>, <argument pos:start="499:36" pos:end="499:43"><expr pos:start="499:36" pos:end="499:43"><literal type="string" pos:start="499:36" pos:end="499:43">"Qscale"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="499:47" pos:end="507:5">{<block_content pos:start="501:9" pos:end="505:23">

        <expr_stmt pos:start="501:9" pos:end="501:46"><expr pos:start="501:9" pos:end="501:45"><call pos:start="501:9" pos:end="501:45"><name pos:start="501:9" pos:end="501:24">ffserver_get_arg</name><argument_list pos:start="501:25" pos:end="501:45">(<argument pos:start="501:26" pos:end="501:28"><expr pos:start="501:26" pos:end="501:28"><name pos:start="501:26" pos:end="501:28">arg</name></expr></argument>, <argument pos:start="501:31" pos:end="501:41"><expr pos:start="501:31" pos:end="501:41"><sizeof pos:start="501:31" pos:end="501:41">sizeof<argument_list pos:start="501:37" pos:end="501:41">(<argument pos:start="501:38" pos:end="501:40"><expr pos:start="501:38" pos:end="501:40"><name pos:start="501:38" pos:end="501:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="501:44" pos:end="501:44"><expr pos:start="501:44" pos:end="501:44"><name pos:start="501:44" pos:end="501:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="503:9" pos:end="505:23"><if pos:start="503:9" pos:end="505:23">if <condition pos:start="503:12" pos:end="503:62">(<expr pos:start="503:13" pos:end="503:61"><call pos:start="503:13" pos:end="503:57"><name pos:start="503:13" pos:end="503:23">av_dict_set</name><argument_list pos:start="503:24" pos:end="503:57">(<argument pos:start="503:25" pos:end="503:43"><expr pos:start="503:25" pos:end="503:43"><operator pos:start="503:25" pos:end="503:25">&amp;</operator><name pos:start="503:26" pos:end="503:43"><name pos:start="503:26" pos:end="503:31">config</name><operator pos:start="503:32" pos:end="503:33">-&gt;</operator><name pos:start="503:34" pos:end="503:43">video_conf</name></name></expr></argument>, <argument pos:start="503:46" pos:end="503:48"><expr pos:start="503:46" pos:end="503:48"><name pos:start="503:46" pos:end="503:48">cmd</name></expr></argument>, <argument pos:start="503:51" pos:end="503:53"><expr pos:start="503:51" pos:end="503:53"><name pos:start="503:51" pos:end="503:53">arg</name></expr></argument>, <argument pos:start="503:56" pos:end="503:56"><expr pos:start="503:56" pos:end="503:56"><literal type="number" pos:start="503:56" pos:end="503:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="503:59" pos:end="503:59">&lt;</operator> <literal type="number" pos:start="503:61" pos:end="503:61">0</literal></expr>)</condition><block type="pseudo" pos:start="505:13" pos:end="505:23"><block_content pos:start="505:13" pos:end="505:23">

            <goto pos:start="505:13" pos:end="505:23">goto <name pos:start="505:18" pos:end="505:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="507:7" pos:end="517:5">else if <condition pos:start="507:15" pos:end="507:49">(<expr pos:start="507:16" pos:end="507:48"><operator pos:start="507:16" pos:end="507:16">!</operator><call pos:start="507:17" pos:end="507:48"><name pos:start="507:17" pos:end="507:29">av_strcasecmp</name><argument_list pos:start="507:30" pos:end="507:48">(<argument pos:start="507:31" pos:end="507:33"><expr pos:start="507:31" pos:end="507:33"><name pos:start="507:31" pos:end="507:33">cmd</name></expr></argument>, <argument pos:start="507:36" pos:end="507:47"><expr pos:start="507:36" pos:end="507:47"><literal type="string" pos:start="507:36" pos:end="507:47">"VideoQDiff"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="507:51" pos:end="517:5">{<block_content pos:start="509:9" pos:end="515:23">

        <expr_stmt pos:start="509:9" pos:end="509:46"><expr pos:start="509:9" pos:end="509:45"><call pos:start="509:9" pos:end="509:45"><name pos:start="509:9" pos:end="509:24">ffserver_get_arg</name><argument_list pos:start="509:25" pos:end="509:45">(<argument pos:start="509:26" pos:end="509:28"><expr pos:start="509:26" pos:end="509:28"><name pos:start="509:26" pos:end="509:28">arg</name></expr></argument>, <argument pos:start="509:31" pos:end="509:41"><expr pos:start="509:31" pos:end="509:41"><sizeof pos:start="509:31" pos:end="509:41">sizeof<argument_list pos:start="509:37" pos:end="509:41">(<argument pos:start="509:38" pos:end="509:40"><expr pos:start="509:38" pos:end="509:40"><name pos:start="509:38" pos:end="509:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="509:44" pos:end="509:44"><expr pos:start="509:44" pos:end="509:44"><name pos:start="509:44" pos:end="509:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="511:9" pos:end="511:96"><expr pos:start="511:9" pos:end="511:95"><call pos:start="511:9" pos:end="511:95"><name pos:start="511:9" pos:end="511:30">ffserver_set_int_param</name><argument_list pos:start="511:31" pos:end="511:95">(<argument pos:start="511:32" pos:end="511:35"><expr pos:start="511:32" pos:end="511:35"><name pos:start="511:32" pos:end="511:35">NULL</name></expr></argument>, <argument pos:start="511:38" pos:end="511:40"><expr pos:start="511:38" pos:end="511:40"><name pos:start="511:38" pos:end="511:40">arg</name></expr></argument>, <argument pos:start="511:43" pos:end="511:43"><expr pos:start="511:43" pos:end="511:43"><literal type="number" pos:start="511:43" pos:end="511:43">0</literal></expr></argument>, <argument pos:start="511:46" pos:end="511:46"><expr pos:start="511:46" pos:end="511:46"><literal type="number" pos:start="511:46" pos:end="511:46">1</literal></expr></argument>, <argument pos:start="511:49" pos:end="511:50"><expr pos:start="511:49" pos:end="511:50"><literal type="number" pos:start="511:49" pos:end="511:50">31</literal></expr></argument>, <argument pos:start="511:53" pos:end="511:58"><expr pos:start="511:53" pos:end="511:58"><name pos:start="511:53" pos:end="511:58">config</name></expr></argument>, <argument pos:start="511:61" pos:end="511:68"><expr pos:start="511:61" pos:end="511:68"><name pos:start="511:61" pos:end="511:68">line_num</name></expr></argument>, <argument pos:start="511:71" pos:end="511:89"><expr pos:start="511:71" pos:end="511:89"><literal type="string" pos:start="511:71" pos:end="511:89">"%s out of range\n"</literal></expr></argument>, <argument pos:start="511:92" pos:end="511:94"><expr pos:start="511:92" pos:end="511:94"><name pos:start="511:92" pos:end="511:94">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="513:9" pos:end="515:23"><if pos:start="513:9" pos:end="515:23">if <condition pos:start="513:12" pos:end="513:62">(<expr pos:start="513:13" pos:end="513:61"><call pos:start="513:13" pos:end="513:57"><name pos:start="513:13" pos:end="513:23">av_dict_set</name><argument_list pos:start="513:24" pos:end="513:57">(<argument pos:start="513:25" pos:end="513:43"><expr pos:start="513:25" pos:end="513:43"><operator pos:start="513:25" pos:end="513:25">&amp;</operator><name pos:start="513:26" pos:end="513:43"><name pos:start="513:26" pos:end="513:31">config</name><operator pos:start="513:32" pos:end="513:33">-&gt;</operator><name pos:start="513:34" pos:end="513:43">video_conf</name></name></expr></argument>, <argument pos:start="513:46" pos:end="513:48"><expr pos:start="513:46" pos:end="513:48"><name pos:start="513:46" pos:end="513:48">cmd</name></expr></argument>, <argument pos:start="513:51" pos:end="513:53"><expr pos:start="513:51" pos:end="513:53"><name pos:start="513:51" pos:end="513:53">arg</name></expr></argument>, <argument pos:start="513:56" pos:end="513:56"><expr pos:start="513:56" pos:end="513:56"><literal type="number" pos:start="513:56" pos:end="513:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="513:59" pos:end="513:59">&lt;</operator> <literal type="number" pos:start="513:61" pos:end="513:61">0</literal></expr>)</condition><block type="pseudo" pos:start="515:13" pos:end="515:23"><block_content pos:start="515:13" pos:end="515:23">

            <goto pos:start="515:13" pos:end="515:23">goto <name pos:start="515:18" pos:end="515:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="517:7" pos:end="527:5">else if <condition pos:start="517:15" pos:end="517:48">(<expr pos:start="517:16" pos:end="517:47"><operator pos:start="517:16" pos:end="517:16">!</operator><call pos:start="517:17" pos:end="517:47"><name pos:start="517:17" pos:end="517:29">av_strcasecmp</name><argument_list pos:start="517:30" pos:end="517:47">(<argument pos:start="517:31" pos:end="517:33"><expr pos:start="517:31" pos:end="517:33"><name pos:start="517:31" pos:end="517:33">cmd</name></expr></argument>, <argument pos:start="517:36" pos:end="517:46"><expr pos:start="517:36" pos:end="517:46"><literal type="string" pos:start="517:36" pos:end="517:46">"VideoQMax"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="517:50" pos:end="527:5">{<block_content pos:start="519:9" pos:end="525:23">

        <expr_stmt pos:start="519:9" pos:end="519:46"><expr pos:start="519:9" pos:end="519:45"><call pos:start="519:9" pos:end="519:45"><name pos:start="519:9" pos:end="519:24">ffserver_get_arg</name><argument_list pos:start="519:25" pos:end="519:45">(<argument pos:start="519:26" pos:end="519:28"><expr pos:start="519:26" pos:end="519:28"><name pos:start="519:26" pos:end="519:28">arg</name></expr></argument>, <argument pos:start="519:31" pos:end="519:41"><expr pos:start="519:31" pos:end="519:41"><sizeof pos:start="519:31" pos:end="519:41">sizeof<argument_list pos:start="519:37" pos:end="519:41">(<argument pos:start="519:38" pos:end="519:40"><expr pos:start="519:38" pos:end="519:40"><name pos:start="519:38" pos:end="519:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="519:44" pos:end="519:44"><expr pos:start="519:44" pos:end="519:44"><name pos:start="519:44" pos:end="519:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="521:9" pos:end="521:96"><expr pos:start="521:9" pos:end="521:95"><call pos:start="521:9" pos:end="521:95"><name pos:start="521:9" pos:end="521:30">ffserver_set_int_param</name><argument_list pos:start="521:31" pos:end="521:95">(<argument pos:start="521:32" pos:end="521:35"><expr pos:start="521:32" pos:end="521:35"><name pos:start="521:32" pos:end="521:35">NULL</name></expr></argument>, <argument pos:start="521:38" pos:end="521:40"><expr pos:start="521:38" pos:end="521:40"><name pos:start="521:38" pos:end="521:40">arg</name></expr></argument>, <argument pos:start="521:43" pos:end="521:43"><expr pos:start="521:43" pos:end="521:43"><literal type="number" pos:start="521:43" pos:end="521:43">0</literal></expr></argument>, <argument pos:start="521:46" pos:end="521:46"><expr pos:start="521:46" pos:end="521:46"><literal type="number" pos:start="521:46" pos:end="521:46">1</literal></expr></argument>, <argument pos:start="521:49" pos:end="521:50"><expr pos:start="521:49" pos:end="521:50"><literal type="number" pos:start="521:49" pos:end="521:50">31</literal></expr></argument>, <argument pos:start="521:53" pos:end="521:58"><expr pos:start="521:53" pos:end="521:58"><name pos:start="521:53" pos:end="521:58">config</name></expr></argument>, <argument pos:start="521:61" pos:end="521:68"><expr pos:start="521:61" pos:end="521:68"><name pos:start="521:61" pos:end="521:68">line_num</name></expr></argument>, <argument pos:start="521:71" pos:end="521:89"><expr pos:start="521:71" pos:end="521:89"><literal type="string" pos:start="521:71" pos:end="521:89">"%s out of range\n"</literal></expr></argument>, <argument pos:start="521:92" pos:end="521:94"><expr pos:start="521:92" pos:end="521:94"><name pos:start="521:92" pos:end="521:94">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="523:9" pos:end="525:23"><if pos:start="523:9" pos:end="525:23">if <condition pos:start="523:12" pos:end="523:62">(<expr pos:start="523:13" pos:end="523:61"><call pos:start="523:13" pos:end="523:57"><name pos:start="523:13" pos:end="523:23">av_dict_set</name><argument_list pos:start="523:24" pos:end="523:57">(<argument pos:start="523:25" pos:end="523:43"><expr pos:start="523:25" pos:end="523:43"><operator pos:start="523:25" pos:end="523:25">&amp;</operator><name pos:start="523:26" pos:end="523:43"><name pos:start="523:26" pos:end="523:31">config</name><operator pos:start="523:32" pos:end="523:33">-&gt;</operator><name pos:start="523:34" pos:end="523:43">video_conf</name></name></expr></argument>, <argument pos:start="523:46" pos:end="523:48"><expr pos:start="523:46" pos:end="523:48"><name pos:start="523:46" pos:end="523:48">cmd</name></expr></argument>, <argument pos:start="523:51" pos:end="523:53"><expr pos:start="523:51" pos:end="523:53"><name pos:start="523:51" pos:end="523:53">arg</name></expr></argument>, <argument pos:start="523:56" pos:end="523:56"><expr pos:start="523:56" pos:end="523:56"><literal type="number" pos:start="523:56" pos:end="523:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="523:59" pos:end="523:59">&lt;</operator> <literal type="number" pos:start="523:61" pos:end="523:61">0</literal></expr>)</condition><block type="pseudo" pos:start="525:13" pos:end="525:23"><block_content pos:start="525:13" pos:end="525:23">

            <goto pos:start="525:13" pos:end="525:23">goto <name pos:start="525:18" pos:end="525:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="527:7" pos:end="537:5">else if <condition pos:start="527:15" pos:end="527:48">(<expr pos:start="527:16" pos:end="527:47"><operator pos:start="527:16" pos:end="527:16">!</operator><call pos:start="527:17" pos:end="527:47"><name pos:start="527:17" pos:end="527:29">av_strcasecmp</name><argument_list pos:start="527:30" pos:end="527:47">(<argument pos:start="527:31" pos:end="527:33"><expr pos:start="527:31" pos:end="527:33"><name pos:start="527:31" pos:end="527:33">cmd</name></expr></argument>, <argument pos:start="527:36" pos:end="527:46"><expr pos:start="527:36" pos:end="527:46"><literal type="string" pos:start="527:36" pos:end="527:46">"VideoQMin"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="527:50" pos:end="537:5">{<block_content pos:start="529:9" pos:end="535:23">

        <expr_stmt pos:start="529:9" pos:end="529:46"><expr pos:start="529:9" pos:end="529:45"><call pos:start="529:9" pos:end="529:45"><name pos:start="529:9" pos:end="529:24">ffserver_get_arg</name><argument_list pos:start="529:25" pos:end="529:45">(<argument pos:start="529:26" pos:end="529:28"><expr pos:start="529:26" pos:end="529:28"><name pos:start="529:26" pos:end="529:28">arg</name></expr></argument>, <argument pos:start="529:31" pos:end="529:41"><expr pos:start="529:31" pos:end="529:41"><sizeof pos:start="529:31" pos:end="529:41">sizeof<argument_list pos:start="529:37" pos:end="529:41">(<argument pos:start="529:38" pos:end="529:40"><expr pos:start="529:38" pos:end="529:40"><name pos:start="529:38" pos:end="529:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="529:44" pos:end="529:44"><expr pos:start="529:44" pos:end="529:44"><name pos:start="529:44" pos:end="529:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="531:9" pos:end="531:96"><expr pos:start="531:9" pos:end="531:95"><call pos:start="531:9" pos:end="531:95"><name pos:start="531:9" pos:end="531:30">ffserver_set_int_param</name><argument_list pos:start="531:31" pos:end="531:95">(<argument pos:start="531:32" pos:end="531:35"><expr pos:start="531:32" pos:end="531:35"><name pos:start="531:32" pos:end="531:35">NULL</name></expr></argument>, <argument pos:start="531:38" pos:end="531:40"><expr pos:start="531:38" pos:end="531:40"><name pos:start="531:38" pos:end="531:40">arg</name></expr></argument>, <argument pos:start="531:43" pos:end="531:43"><expr pos:start="531:43" pos:end="531:43"><literal type="number" pos:start="531:43" pos:end="531:43">0</literal></expr></argument>, <argument pos:start="531:46" pos:end="531:46"><expr pos:start="531:46" pos:end="531:46"><literal type="number" pos:start="531:46" pos:end="531:46">1</literal></expr></argument>, <argument pos:start="531:49" pos:end="531:50"><expr pos:start="531:49" pos:end="531:50"><literal type="number" pos:start="531:49" pos:end="531:50">31</literal></expr></argument>, <argument pos:start="531:53" pos:end="531:58"><expr pos:start="531:53" pos:end="531:58"><name pos:start="531:53" pos:end="531:58">config</name></expr></argument>, <argument pos:start="531:61" pos:end="531:68"><expr pos:start="531:61" pos:end="531:68"><name pos:start="531:61" pos:end="531:68">line_num</name></expr></argument>, <argument pos:start="531:71" pos:end="531:89"><expr pos:start="531:71" pos:end="531:89"><literal type="string" pos:start="531:71" pos:end="531:89">"%s out of range\n"</literal></expr></argument>, <argument pos:start="531:92" pos:end="531:94"><expr pos:start="531:92" pos:end="531:94"><name pos:start="531:92" pos:end="531:94">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="533:9" pos:end="535:23"><if pos:start="533:9" pos:end="535:23">if <condition pos:start="533:12" pos:end="533:62">(<expr pos:start="533:13" pos:end="533:61"><call pos:start="533:13" pos:end="533:57"><name pos:start="533:13" pos:end="533:23">av_dict_set</name><argument_list pos:start="533:24" pos:end="533:57">(<argument pos:start="533:25" pos:end="533:43"><expr pos:start="533:25" pos:end="533:43"><operator pos:start="533:25" pos:end="533:25">&amp;</operator><name pos:start="533:26" pos:end="533:43"><name pos:start="533:26" pos:end="533:31">config</name><operator pos:start="533:32" pos:end="533:33">-&gt;</operator><name pos:start="533:34" pos:end="533:43">video_conf</name></name></expr></argument>, <argument pos:start="533:46" pos:end="533:48"><expr pos:start="533:46" pos:end="533:48"><name pos:start="533:46" pos:end="533:48">cmd</name></expr></argument>, <argument pos:start="533:51" pos:end="533:53"><expr pos:start="533:51" pos:end="533:53"><name pos:start="533:51" pos:end="533:53">arg</name></expr></argument>, <argument pos:start="533:56" pos:end="533:56"><expr pos:start="533:56" pos:end="533:56"><literal type="number" pos:start="533:56" pos:end="533:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="533:59" pos:end="533:59">&lt;</operator> <literal type="number" pos:start="533:61" pos:end="533:61">0</literal></expr>)</condition><block type="pseudo" pos:start="535:13" pos:end="535:23"><block_content pos:start="535:13" pos:end="535:23">

            <goto pos:start="535:13" pos:end="535:23">goto <name pos:start="535:18" pos:end="535:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="537:7" pos:end="547:5">else if <condition pos:start="537:15" pos:end="537:47">(<expr pos:start="537:16" pos:end="537:46"><operator pos:start="537:16" pos:end="537:16">!</operator><call pos:start="537:17" pos:end="537:46"><name pos:start="537:17" pos:end="537:29">av_strcasecmp</name><argument_list pos:start="537:30" pos:end="537:46">(<argument pos:start="537:31" pos:end="537:33"><expr pos:start="537:31" pos:end="537:33"><name pos:start="537:31" pos:end="537:33">cmd</name></expr></argument>, <argument pos:start="537:36" pos:end="537:45"><expr pos:start="537:36" pos:end="537:45"><literal type="string" pos:start="537:36" pos:end="537:45">"LumiMask"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="537:49" pos:end="547:5">{<block_content pos:start="539:9" pos:end="545:23">

        <expr_stmt pos:start="539:9" pos:end="539:46"><expr pos:start="539:9" pos:end="539:45"><call pos:start="539:9" pos:end="539:45"><name pos:start="539:9" pos:end="539:24">ffserver_get_arg</name><argument_list pos:start="539:25" pos:end="539:45">(<argument pos:start="539:26" pos:end="539:28"><expr pos:start="539:26" pos:end="539:28"><name pos:start="539:26" pos:end="539:28">arg</name></expr></argument>, <argument pos:start="539:31" pos:end="539:41"><expr pos:start="539:31" pos:end="539:41"><sizeof pos:start="539:31" pos:end="539:41">sizeof<argument_list pos:start="539:37" pos:end="539:41">(<argument pos:start="539:38" pos:end="539:40"><expr pos:start="539:38" pos:end="539:40"><name pos:start="539:38" pos:end="539:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="539:44" pos:end="539:44"><expr pos:start="539:44" pos:end="539:44"><name pos:start="539:44" pos:end="539:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="541:9" pos:end="541:112"><expr pos:start="541:9" pos:end="541:111"><call pos:start="541:9" pos:end="541:111"><name pos:start="541:9" pos:end="541:32">ffserver_set_float_param</name><argument_list pos:start="541:33" pos:end="541:111">(<argument pos:start="541:34" pos:end="541:37"><expr pos:start="541:34" pos:end="541:37"><name pos:start="541:34" pos:end="541:37">NULL</name></expr></argument>, <argument pos:start="541:40" pos:end="541:42"><expr pos:start="541:40" pos:end="541:42"><name pos:start="541:40" pos:end="541:42">arg</name></expr></argument>, <argument pos:start="541:45" pos:end="541:45"><expr pos:start="541:45" pos:end="541:45"><literal type="number" pos:start="541:45" pos:end="541:45">0</literal></expr></argument>, <argument pos:start="541:48" pos:end="541:55"><expr pos:start="541:48" pos:end="541:55"><operator pos:start="541:48" pos:end="541:48">-</operator><name pos:start="541:49" pos:end="541:55">FLT_MAX</name></expr></argument>, <argument pos:start="541:58" pos:end="541:64"><expr pos:start="541:58" pos:end="541:64"><name pos:start="541:58" pos:end="541:64">FLT_MAX</name></expr></argument>, <argument pos:start="541:67" pos:end="541:72"><expr pos:start="541:67" pos:end="541:72"><name pos:start="541:67" pos:end="541:72">config</name></expr></argument>, <argument pos:start="541:75" pos:end="541:82"><expr pos:start="541:75" pos:end="541:82"><name pos:start="541:75" pos:end="541:82">line_num</name></expr></argument>, <argument pos:start="541:85" pos:end="541:100"><expr pos:start="541:85" pos:end="541:100"><literal type="string" pos:start="541:85" pos:end="541:100">"Invalid %s: %s"</literal></expr></argument>, <argument pos:start="541:103" pos:end="541:105"><expr pos:start="541:103" pos:end="541:105"><name pos:start="541:103" pos:end="541:105">cmd</name></expr></argument>, <argument pos:start="541:108" pos:end="541:110"><expr pos:start="541:108" pos:end="541:110"><name pos:start="541:108" pos:end="541:110">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="543:9" pos:end="545:23"><if pos:start="543:9" pos:end="545:23">if <condition pos:start="543:12" pos:end="543:62">(<expr pos:start="543:13" pos:end="543:61"><call pos:start="543:13" pos:end="543:57"><name pos:start="543:13" pos:end="543:23">av_dict_set</name><argument_list pos:start="543:24" pos:end="543:57">(<argument pos:start="543:25" pos:end="543:43"><expr pos:start="543:25" pos:end="543:43"><operator pos:start="543:25" pos:end="543:25">&amp;</operator><name pos:start="543:26" pos:end="543:43"><name pos:start="543:26" pos:end="543:31">config</name><operator pos:start="543:32" pos:end="543:33">-&gt;</operator><name pos:start="543:34" pos:end="543:43">video_conf</name></name></expr></argument>, <argument pos:start="543:46" pos:end="543:48"><expr pos:start="543:46" pos:end="543:48"><name pos:start="543:46" pos:end="543:48">cmd</name></expr></argument>, <argument pos:start="543:51" pos:end="543:53"><expr pos:start="543:51" pos:end="543:53"><name pos:start="543:51" pos:end="543:53">arg</name></expr></argument>, <argument pos:start="543:56" pos:end="543:56"><expr pos:start="543:56" pos:end="543:56"><literal type="number" pos:start="543:56" pos:end="543:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="543:59" pos:end="543:59">&lt;</operator> <literal type="number" pos:start="543:61" pos:end="543:61">0</literal></expr>)</condition><block type="pseudo" pos:start="545:13" pos:end="545:23"><block_content pos:start="545:13" pos:end="545:23">

            <goto pos:start="545:13" pos:end="545:23">goto <name pos:start="545:18" pos:end="545:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="547:7" pos:end="557:5">else if <condition pos:start="547:15" pos:end="547:47">(<expr pos:start="547:16" pos:end="547:46"><operator pos:start="547:16" pos:end="547:16">!</operator><call pos:start="547:17" pos:end="547:46"><name pos:start="547:17" pos:end="547:29">av_strcasecmp</name><argument_list pos:start="547:30" pos:end="547:46">(<argument pos:start="547:31" pos:end="547:33"><expr pos:start="547:31" pos:end="547:33"><name pos:start="547:31" pos:end="547:33">cmd</name></expr></argument>, <argument pos:start="547:36" pos:end="547:45"><expr pos:start="547:36" pos:end="547:45"><literal type="string" pos:start="547:36" pos:end="547:45">"DarkMask"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="547:49" pos:end="557:5">{<block_content pos:start="549:9" pos:end="555:23">

        <expr_stmt pos:start="549:9" pos:end="549:46"><expr pos:start="549:9" pos:end="549:45"><call pos:start="549:9" pos:end="549:45"><name pos:start="549:9" pos:end="549:24">ffserver_get_arg</name><argument_list pos:start="549:25" pos:end="549:45">(<argument pos:start="549:26" pos:end="549:28"><expr pos:start="549:26" pos:end="549:28"><name pos:start="549:26" pos:end="549:28">arg</name></expr></argument>, <argument pos:start="549:31" pos:end="549:41"><expr pos:start="549:31" pos:end="549:41"><sizeof pos:start="549:31" pos:end="549:41">sizeof<argument_list pos:start="549:37" pos:end="549:41">(<argument pos:start="549:38" pos:end="549:40"><expr pos:start="549:38" pos:end="549:40"><name pos:start="549:38" pos:end="549:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="549:44" pos:end="549:44"><expr pos:start="549:44" pos:end="549:44"><name pos:start="549:44" pos:end="549:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="551:9" pos:end="551:112"><expr pos:start="551:9" pos:end="551:111"><call pos:start="551:9" pos:end="551:111"><name pos:start="551:9" pos:end="551:32">ffserver_set_float_param</name><argument_list pos:start="551:33" pos:end="551:111">(<argument pos:start="551:34" pos:end="551:37"><expr pos:start="551:34" pos:end="551:37"><name pos:start="551:34" pos:end="551:37">NULL</name></expr></argument>, <argument pos:start="551:40" pos:end="551:42"><expr pos:start="551:40" pos:end="551:42"><name pos:start="551:40" pos:end="551:42">arg</name></expr></argument>, <argument pos:start="551:45" pos:end="551:45"><expr pos:start="551:45" pos:end="551:45"><literal type="number" pos:start="551:45" pos:end="551:45">0</literal></expr></argument>, <argument pos:start="551:48" pos:end="551:55"><expr pos:start="551:48" pos:end="551:55"><operator pos:start="551:48" pos:end="551:48">-</operator><name pos:start="551:49" pos:end="551:55">FLT_MAX</name></expr></argument>, <argument pos:start="551:58" pos:end="551:64"><expr pos:start="551:58" pos:end="551:64"><name pos:start="551:58" pos:end="551:64">FLT_MAX</name></expr></argument>, <argument pos:start="551:67" pos:end="551:72"><expr pos:start="551:67" pos:end="551:72"><name pos:start="551:67" pos:end="551:72">config</name></expr></argument>, <argument pos:start="551:75" pos:end="551:82"><expr pos:start="551:75" pos:end="551:82"><name pos:start="551:75" pos:end="551:82">line_num</name></expr></argument>, <argument pos:start="551:85" pos:end="551:100"><expr pos:start="551:85" pos:end="551:100"><literal type="string" pos:start="551:85" pos:end="551:100">"Invalid %s: %s"</literal></expr></argument>, <argument pos:start="551:103" pos:end="551:105"><expr pos:start="551:103" pos:end="551:105"><name pos:start="551:103" pos:end="551:105">cmd</name></expr></argument>, <argument pos:start="551:108" pos:end="551:110"><expr pos:start="551:108" pos:end="551:110"><name pos:start="551:108" pos:end="551:110">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="553:9" pos:end="555:23"><if pos:start="553:9" pos:end="555:23">if <condition pos:start="553:12" pos:end="553:62">(<expr pos:start="553:13" pos:end="553:61"><call pos:start="553:13" pos:end="553:57"><name pos:start="553:13" pos:end="553:23">av_dict_set</name><argument_list pos:start="553:24" pos:end="553:57">(<argument pos:start="553:25" pos:end="553:43"><expr pos:start="553:25" pos:end="553:43"><operator pos:start="553:25" pos:end="553:25">&amp;</operator><name pos:start="553:26" pos:end="553:43"><name pos:start="553:26" pos:end="553:31">config</name><operator pos:start="553:32" pos:end="553:33">-&gt;</operator><name pos:start="553:34" pos:end="553:43">video_conf</name></name></expr></argument>, <argument pos:start="553:46" pos:end="553:48"><expr pos:start="553:46" pos:end="553:48"><name pos:start="553:46" pos:end="553:48">cmd</name></expr></argument>, <argument pos:start="553:51" pos:end="553:53"><expr pos:start="553:51" pos:end="553:53"><name pos:start="553:51" pos:end="553:53">arg</name></expr></argument>, <argument pos:start="553:56" pos:end="553:56"><expr pos:start="553:56" pos:end="553:56"><literal type="number" pos:start="553:56" pos:end="553:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="553:59" pos:end="553:59">&lt;</operator> <literal type="number" pos:start="553:61" pos:end="553:61">0</literal></expr>)</condition><block type="pseudo" pos:start="555:13" pos:end="555:23"><block_content pos:start="555:13" pos:end="555:23">

            <goto pos:start="555:13" pos:end="555:23">goto <name pos:start="555:18" pos:end="555:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="557:7" pos:end="561:5">else if <condition pos:start="557:15" pos:end="557:46">(<expr pos:start="557:16" pos:end="557:45"><operator pos:start="557:16" pos:end="557:16">!</operator><call pos:start="557:17" pos:end="557:45"><name pos:start="557:17" pos:end="557:29">av_strcasecmp</name><argument_list pos:start="557:30" pos:end="557:45">(<argument pos:start="557:31" pos:end="557:33"><expr pos:start="557:31" pos:end="557:33"><name pos:start="557:31" pos:end="557:33">cmd</name></expr></argument>, <argument pos:start="557:36" pos:end="557:44"><expr pos:start="557:36" pos:end="557:44"><literal type="string" pos:start="557:36" pos:end="557:44">"NoVideo"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="557:48" pos:end="561:5">{<block_content pos:start="559:9" pos:end="559:44">

        <expr_stmt pos:start="559:9" pos:end="559:44"><expr pos:start="559:9" pos:end="559:43"><name pos:start="559:9" pos:end="559:24"><name pos:start="559:9" pos:end="559:14">config</name><operator pos:start="559:15" pos:end="559:16">-&gt;</operator><name pos:start="559:17" pos:end="559:24">video_id</name></name> <operator pos:start="559:26" pos:end="559:26">=</operator> <name pos:start="559:28" pos:end="559:43">AV_CODEC_ID_NONE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="561:7" pos:end="565:5">else if <condition pos:start="561:15" pos:end="561:46">(<expr pos:start="561:16" pos:end="561:45"><operator pos:start="561:16" pos:end="561:16">!</operator><call pos:start="561:17" pos:end="561:45"><name pos:start="561:17" pos:end="561:29">av_strcasecmp</name><argument_list pos:start="561:30" pos:end="561:45">(<argument pos:start="561:31" pos:end="561:33"><expr pos:start="561:31" pos:end="561:33"><name pos:start="561:31" pos:end="561:33">cmd</name></expr></argument>, <argument pos:start="561:36" pos:end="561:44"><expr pos:start="561:36" pos:end="561:44"><literal type="string" pos:start="561:36" pos:end="561:44">"NoAudio"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="561:48" pos:end="565:5">{<block_content pos:start="563:9" pos:end="563:44">

        <expr_stmt pos:start="563:9" pos:end="563:44"><expr pos:start="563:9" pos:end="563:43"><name pos:start="563:9" pos:end="563:24"><name pos:start="563:9" pos:end="563:14">config</name><operator pos:start="563:15" pos:end="563:16">-&gt;</operator><name pos:start="563:17" pos:end="563:24">audio_id</name></name> <operator pos:start="563:26" pos:end="563:26">=</operator> <name pos:start="563:28" pos:end="563:43">AV_CODEC_ID_NONE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="565:7" pos:end="569:5">else if <condition pos:start="565:15" pos:end="565:42">(<expr pos:start="565:16" pos:end="565:41"><operator pos:start="565:16" pos:end="565:16">!</operator><call pos:start="565:17" pos:end="565:41"><name pos:start="565:17" pos:end="565:29">av_strcasecmp</name><argument_list pos:start="565:30" pos:end="565:41">(<argument pos:start="565:31" pos:end="565:33"><expr pos:start="565:31" pos:end="565:33"><name pos:start="565:31" pos:end="565:33">cmd</name></expr></argument>, <argument pos:start="565:36" pos:end="565:40"><expr pos:start="565:36" pos:end="565:40"><literal type="string" pos:start="565:36" pos:end="565:40">"ACL"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="565:44" pos:end="569:5">{<block_content pos:start="567:9" pos:end="567:83">

        <expr_stmt pos:start="567:9" pos:end="567:83"><expr pos:start="567:9" pos:end="567:82"><call pos:start="567:9" pos:end="567:82"><name pos:start="567:9" pos:end="567:30">ffserver_parse_acl_row</name><argument_list pos:start="567:31" pos:end="567:82">(<argument pos:start="567:32" pos:end="567:37"><expr pos:start="567:32" pos:end="567:37"><name pos:start="567:32" pos:end="567:37">stream</name></expr></argument>, <argument pos:start="567:40" pos:end="567:43"><expr pos:start="567:40" pos:end="567:43"><name pos:start="567:40" pos:end="567:43">NULL</name></expr></argument>, <argument pos:start="567:46" pos:end="567:49"><expr pos:start="567:46" pos:end="567:49"><name pos:start="567:46" pos:end="567:49">NULL</name></expr></argument>, <argument pos:start="567:52" pos:end="567:53"><expr pos:start="567:52" pos:end="567:53"><operator pos:start="567:52" pos:end="567:52">*</operator><name pos:start="567:53" pos:end="567:53">p</name></expr></argument>, <argument pos:start="567:56" pos:end="567:71"><expr pos:start="567:56" pos:end="567:71"><name pos:start="567:56" pos:end="567:71"><name pos:start="567:56" pos:end="567:61">config</name><operator pos:start="567:62" pos:end="567:63">-&gt;</operator><name pos:start="567:64" pos:end="567:71">filename</name></name></expr></argument>, <argument pos:start="567:74" pos:end="567:81"><expr pos:start="567:74" pos:end="567:81"><name pos:start="567:74" pos:end="567:81">line_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="569:7" pos:end="573:5">else if <condition pos:start="569:15" pos:end="569:49">(<expr pos:start="569:16" pos:end="569:48"><operator pos:start="569:16" pos:end="569:16">!</operator><call pos:start="569:17" pos:end="569:48"><name pos:start="569:17" pos:end="569:29">av_strcasecmp</name><argument_list pos:start="569:30" pos:end="569:48">(<argument pos:start="569:31" pos:end="569:33"><expr pos:start="569:31" pos:end="569:33"><name pos:start="569:31" pos:end="569:33">cmd</name></expr></argument>, <argument pos:start="569:36" pos:end="569:47"><expr pos:start="569:36" pos:end="569:47"><literal type="string" pos:start="569:36" pos:end="569:47">"DynamicACL"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="569:51" pos:end="573:5">{<block_content pos:start="571:9" pos:end="571:78">

        <expr_stmt pos:start="571:9" pos:end="571:78"><expr pos:start="571:9" pos:end="571:77"><call pos:start="571:9" pos:end="571:77"><name pos:start="571:9" pos:end="571:24">ffserver_get_arg</name><argument_list pos:start="571:25" pos:end="571:77">(<argument pos:start="571:26" pos:end="571:44"><expr pos:start="571:26" pos:end="571:44"><name pos:start="571:26" pos:end="571:44"><name pos:start="571:26" pos:end="571:31">stream</name><operator pos:start="571:32" pos:end="571:33">-&gt;</operator><name pos:start="571:34" pos:end="571:44">dynamic_acl</name></name></expr></argument>, <argument pos:start="571:47" pos:end="571:73"><expr pos:start="571:47" pos:end="571:73"><sizeof pos:start="571:47" pos:end="571:73">sizeof<argument_list pos:start="571:53" pos:end="571:73">(<argument pos:start="571:54" pos:end="571:72"><expr pos:start="571:54" pos:end="571:72"><name pos:start="571:54" pos:end="571:72"><name pos:start="571:54" pos:end="571:59">stream</name><operator pos:start="571:60" pos:end="571:61">-&gt;</operator><name pos:start="571:62" pos:end="571:72">dynamic_acl</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="571:76" pos:end="571:76"><expr pos:start="571:76" pos:end="571:76"><name pos:start="571:76" pos:end="571:76">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="573:7" pos:end="581:5">else if <condition pos:start="573:15" pos:end="573:49">(<expr pos:start="573:16" pos:end="573:48"><operator pos:start="573:16" pos:end="573:16">!</operator><call pos:start="573:17" pos:end="573:48"><name pos:start="573:17" pos:end="573:29">av_strcasecmp</name><argument_list pos:start="573:30" pos:end="573:48">(<argument pos:start="573:31" pos:end="573:33"><expr pos:start="573:31" pos:end="573:33"><name pos:start="573:31" pos:end="573:33">cmd</name></expr></argument>, <argument pos:start="573:36" pos:end="573:47"><expr pos:start="573:36" pos:end="573:47"><literal type="string" pos:start="573:36" pos:end="573:47">"RTSPOption"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="573:51" pos:end="581:5">{<block_content pos:start="575:9" pos:end="579:45">

        <expr_stmt pos:start="575:9" pos:end="575:46"><expr pos:start="575:9" pos:end="575:45"><call pos:start="575:9" pos:end="575:45"><name pos:start="575:9" pos:end="575:24">ffserver_get_arg</name><argument_list pos:start="575:25" pos:end="575:45">(<argument pos:start="575:26" pos:end="575:28"><expr pos:start="575:26" pos:end="575:28"><name pos:start="575:26" pos:end="575:28">arg</name></expr></argument>, <argument pos:start="575:31" pos:end="575:41"><expr pos:start="575:31" pos:end="575:41"><sizeof pos:start="575:31" pos:end="575:41">sizeof<argument_list pos:start="575:37" pos:end="575:41">(<argument pos:start="575:38" pos:end="575:40"><expr pos:start="575:38" pos:end="575:40"><name pos:start="575:38" pos:end="575:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="575:44" pos:end="575:44"><expr pos:start="575:44" pos:end="575:44"><name pos:start="575:44" pos:end="575:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="577:9" pos:end="577:39"><expr pos:start="577:9" pos:end="577:38"><call pos:start="577:9" pos:end="577:38"><name pos:start="577:9" pos:end="577:16">av_freep</name><argument_list pos:start="577:17" pos:end="577:38">(<argument pos:start="577:18" pos:end="577:37"><expr pos:start="577:18" pos:end="577:37"><operator pos:start="577:18" pos:end="577:18">&amp;</operator><name pos:start="577:19" pos:end="577:37"><name pos:start="577:19" pos:end="577:24">stream</name><operator pos:start="577:25" pos:end="577:26">-&gt;</operator><name pos:start="577:27" pos:end="577:37">rtsp_option</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="579:9" pos:end="579:45"><expr pos:start="579:9" pos:end="579:44"><name pos:start="579:9" pos:end="579:27"><name pos:start="579:9" pos:end="579:14">stream</name><operator pos:start="579:15" pos:end="579:16">-&gt;</operator><name pos:start="579:17" pos:end="579:27">rtsp_option</name></name> <operator pos:start="579:29" pos:end="579:29">=</operator> <call pos:start="579:31" pos:end="579:44"><name pos:start="579:31" pos:end="579:39">av_strdup</name><argument_list pos:start="579:40" pos:end="579:44">(<argument pos:start="579:41" pos:end="579:43"><expr pos:start="579:41" pos:end="579:43"><name pos:start="579:41" pos:end="579:43">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="581:7" pos:end="593:5">else if <condition pos:start="581:15" pos:end="581:55">(<expr pos:start="581:16" pos:end="581:54"><operator pos:start="581:16" pos:end="581:16">!</operator><call pos:start="581:17" pos:end="581:54"><name pos:start="581:17" pos:end="581:29">av_strcasecmp</name><argument_list pos:start="581:30" pos:end="581:54">(<argument pos:start="581:31" pos:end="581:33"><expr pos:start="581:31" pos:end="581:33"><name pos:start="581:31" pos:end="581:33">cmd</name></expr></argument>, <argument pos:start="581:36" pos:end="581:53"><expr pos:start="581:36" pos:end="581:53"><literal type="string" pos:start="581:36" pos:end="581:53">"MulticastAddress"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="581:57" pos:end="593:5">{<block_content pos:start="583:9" pos:end="591:25">

        <expr_stmt pos:start="583:9" pos:end="583:46"><expr pos:start="583:9" pos:end="583:45"><call pos:start="583:9" pos:end="583:45"><name pos:start="583:9" pos:end="583:24">ffserver_get_arg</name><argument_list pos:start="583:25" pos:end="583:45">(<argument pos:start="583:26" pos:end="583:28"><expr pos:start="583:26" pos:end="583:28"><name pos:start="583:26" pos:end="583:28">arg</name></expr></argument>, <argument pos:start="583:31" pos:end="583:41"><expr pos:start="583:31" pos:end="583:41"><sizeof pos:start="583:31" pos:end="583:41">sizeof<argument_list pos:start="583:37" pos:end="583:41">(<argument pos:start="583:38" pos:end="583:40"><expr pos:start="583:38" pos:end="583:40"><name pos:start="583:38" pos:end="583:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="583:44" pos:end="583:44"><expr pos:start="583:44" pos:end="583:44"><name pos:start="583:44" pos:end="583:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="585:9" pos:end="587:56"><if pos:start="585:9" pos:end="587:56">if <condition pos:start="585:12" pos:end="585:58">(<expr pos:start="585:13" pos:end="585:57"><call pos:start="585:13" pos:end="585:52"><name pos:start="585:13" pos:end="585:24">resolve_host</name><argument_list pos:start="585:25" pos:end="585:52">(<argument pos:start="585:26" pos:end="585:46"><expr pos:start="585:26" pos:end="585:46"><operator pos:start="585:26" pos:end="585:26">&amp;</operator><name pos:start="585:27" pos:end="585:46"><name pos:start="585:27" pos:end="585:32">stream</name><operator pos:start="585:33" pos:end="585:34">-&gt;</operator><name pos:start="585:35" pos:end="585:46">multicast_ip</name></name></expr></argument>, <argument pos:start="585:49" pos:end="585:51"><expr pos:start="585:49" pos:end="585:51"><name pos:start="585:49" pos:end="585:51">arg</name></expr></argument>)</argument_list></call> <operator pos:start="585:54" pos:end="585:55">!=</operator> <literal type="number" pos:start="585:57" pos:end="585:57">0</literal></expr>)</condition><block type="pseudo" pos:start="587:13" pos:end="587:56"><block_content pos:start="587:13" pos:end="587:56">

            <expr_stmt pos:start="587:13" pos:end="587:56"><expr pos:start="587:13" pos:end="587:55"><call pos:start="587:13" pos:end="587:55"><name pos:start="587:13" pos:end="587:17">ERROR</name><argument_list pos:start="587:18" pos:end="587:55">(<argument pos:start="587:19" pos:end="587:49"><expr pos:start="587:19" pos:end="587:49"><literal type="string" pos:start="587:19" pos:end="587:49">"Invalid host/IP address: %s\n"</literal></expr></argument>, <argument pos:start="587:52" pos:end="587:54"><expr pos:start="587:52" pos:end="587:54"><name pos:start="587:52" pos:end="587:54">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="589:9" pos:end="589:33"><expr pos:start="589:9" pos:end="589:32"><name pos:start="589:9" pos:end="589:28"><name pos:start="589:9" pos:end="589:14">stream</name><operator pos:start="589:15" pos:end="589:16">-&gt;</operator><name pos:start="589:17" pos:end="589:28">is_multicast</name></name> <operator pos:start="589:30" pos:end="589:30">=</operator> <literal type="number" pos:start="589:32" pos:end="589:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="591:9" pos:end="591:25"><expr pos:start="591:9" pos:end="591:24"><name pos:start="591:9" pos:end="591:20"><name pos:start="591:9" pos:end="591:14">stream</name><operator pos:start="591:15" pos:end="591:16">-&gt;</operator><name pos:start="591:17" pos:end="591:20">loop</name></name> <operator pos:start="591:22" pos:end="591:22">=</operator> <literal type="number" pos:start="591:24" pos:end="591:24">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="591:27" pos:end="591:50">/* default is looping */</comment>

    </block_content>}</block></if> <if type="elseif" pos:start="593:7" pos:end="601:5">else if <condition pos:start="593:15" pos:end="593:52">(<expr pos:start="593:16" pos:end="593:51"><operator pos:start="593:16" pos:end="593:16">!</operator><call pos:start="593:17" pos:end="593:51"><name pos:start="593:17" pos:end="593:29">av_strcasecmp</name><argument_list pos:start="593:30" pos:end="593:51">(<argument pos:start="593:31" pos:end="593:33"><expr pos:start="593:31" pos:end="593:33"><name pos:start="593:31" pos:end="593:33">cmd</name></expr></argument>, <argument pos:start="593:36" pos:end="593:50"><expr pos:start="593:36" pos:end="593:50"><literal type="string" pos:start="593:36" pos:end="593:50">"MulticastPort"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="593:54" pos:end="601:5">{<block_content pos:start="595:9" pos:end="599:37">

        <expr_stmt pos:start="595:9" pos:end="595:46"><expr pos:start="595:9" pos:end="595:45"><call pos:start="595:9" pos:end="595:45"><name pos:start="595:9" pos:end="595:24">ffserver_get_arg</name><argument_list pos:start="595:25" pos:end="595:45">(<argument pos:start="595:26" pos:end="595:28"><expr pos:start="595:26" pos:end="595:28"><name pos:start="595:26" pos:end="595:28">arg</name></expr></argument>, <argument pos:start="595:31" pos:end="595:41"><expr pos:start="595:31" pos:end="595:41"><sizeof pos:start="595:31" pos:end="595:41">sizeof<argument_list pos:start="595:37" pos:end="595:41">(<argument pos:start="595:38" pos:end="595:40"><expr pos:start="595:38" pos:end="595:40"><name pos:start="595:38" pos:end="595:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="595:44" pos:end="595:44"><expr pos:start="595:44" pos:end="595:44"><name pos:start="595:44" pos:end="595:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="597:9" pos:end="597:109"><expr pos:start="597:9" pos:end="597:108"><call pos:start="597:9" pos:end="597:108"><name pos:start="597:9" pos:end="597:30">ffserver_set_int_param</name><argument_list pos:start="597:31" pos:end="597:108">(<argument pos:start="597:32" pos:end="597:35"><expr pos:start="597:32" pos:end="597:35"><operator pos:start="597:32" pos:end="597:32">&amp;</operator><name pos:start="597:33" pos:end="597:35">val</name></expr></argument>, <argument pos:start="597:38" pos:end="597:40"><expr pos:start="597:38" pos:end="597:40"><name pos:start="597:38" pos:end="597:40">arg</name></expr></argument>, <argument pos:start="597:43" pos:end="597:43"><expr pos:start="597:43" pos:end="597:43"><literal type="number" pos:start="597:43" pos:end="597:43">0</literal></expr></argument>, <argument pos:start="597:46" pos:end="597:46"><expr pos:start="597:46" pos:end="597:46"><literal type="number" pos:start="597:46" pos:end="597:46">1</literal></expr></argument>, <argument pos:start="597:49" pos:end="597:53"><expr pos:start="597:49" pos:end="597:53"><literal type="number" pos:start="597:49" pos:end="597:53">65535</literal></expr></argument>, <argument pos:start="597:56" pos:end="597:61"><expr pos:start="597:56" pos:end="597:61"><name pos:start="597:56" pos:end="597:61">config</name></expr></argument>, <argument pos:start="597:64" pos:end="597:71"><expr pos:start="597:64" pos:end="597:71"><name pos:start="597:64" pos:end="597:71">line_num</name></expr></argument>, <argument pos:start="597:74" pos:end="597:102"><expr pos:start="597:74" pos:end="597:102"><literal type="string" pos:start="597:74" pos:end="597:102">"Invalid MulticastPort: %s\n"</literal></expr></argument>, <argument pos:start="597:105" pos:end="597:107"><expr pos:start="597:105" pos:end="597:107"><name pos:start="597:105" pos:end="597:107">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="599:9" pos:end="599:37"><expr pos:start="599:9" pos:end="599:36"><name pos:start="599:9" pos:end="599:30"><name pos:start="599:9" pos:end="599:14">stream</name><operator pos:start="599:15" pos:end="599:16">-&gt;</operator><name pos:start="599:17" pos:end="599:30">multicast_port</name></name> <operator pos:start="599:32" pos:end="599:32">=</operator> <name pos:start="599:34" pos:end="599:36">val</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="601:7" pos:end="609:5">else if <condition pos:start="601:15" pos:end="601:51">(<expr pos:start="601:16" pos:end="601:50"><operator pos:start="601:16" pos:end="601:16">!</operator><call pos:start="601:17" pos:end="601:50"><name pos:start="601:17" pos:end="601:29">av_strcasecmp</name><argument_list pos:start="601:30" pos:end="601:50">(<argument pos:start="601:31" pos:end="601:33"><expr pos:start="601:31" pos:end="601:33"><name pos:start="601:31" pos:end="601:33">cmd</name></expr></argument>, <argument pos:start="601:36" pos:end="601:49"><expr pos:start="601:36" pos:end="601:49"><literal type="string" pos:start="601:36" pos:end="601:49">"MulticastTTL"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="601:53" pos:end="609:5">{<block_content pos:start="603:9" pos:end="607:36">

        <expr_stmt pos:start="603:9" pos:end="603:46"><expr pos:start="603:9" pos:end="603:45"><call pos:start="603:9" pos:end="603:45"><name pos:start="603:9" pos:end="603:24">ffserver_get_arg</name><argument_list pos:start="603:25" pos:end="603:45">(<argument pos:start="603:26" pos:end="603:28"><expr pos:start="603:26" pos:end="603:28"><name pos:start="603:26" pos:end="603:28">arg</name></expr></argument>, <argument pos:start="603:31" pos:end="603:41"><expr pos:start="603:31" pos:end="603:41"><sizeof pos:start="603:31" pos:end="603:41">sizeof<argument_list pos:start="603:37" pos:end="603:41">(<argument pos:start="603:38" pos:end="603:40"><expr pos:start="603:38" pos:end="603:40"><name pos:start="603:38" pos:end="603:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="603:44" pos:end="603:44"><expr pos:start="603:44" pos:end="603:44"><name pos:start="603:44" pos:end="603:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="605:9" pos:end="605:116"><expr pos:start="605:9" pos:end="605:115"><call pos:start="605:9" pos:end="605:115"><name pos:start="605:9" pos:end="605:30">ffserver_set_int_param</name><argument_list pos:start="605:31" pos:end="605:115">(<argument pos:start="605:32" pos:end="605:35"><expr pos:start="605:32" pos:end="605:35"><operator pos:start="605:32" pos:end="605:32">&amp;</operator><name pos:start="605:33" pos:end="605:35">val</name></expr></argument>, <argument pos:start="605:38" pos:end="605:40"><expr pos:start="605:38" pos:end="605:40"><name pos:start="605:38" pos:end="605:40">arg</name></expr></argument>, <argument pos:start="605:43" pos:end="605:43"><expr pos:start="605:43" pos:end="605:43"><literal type="number" pos:start="605:43" pos:end="605:43">0</literal></expr></argument>, <argument pos:start="605:46" pos:end="605:52"><expr pos:start="605:46" pos:end="605:52"><name pos:start="605:46" pos:end="605:52">INT_MIN</name></expr></argument>, <argument pos:start="605:55" pos:end="605:61"><expr pos:start="605:55" pos:end="605:61"><name pos:start="605:55" pos:end="605:61">INT_MAX</name></expr></argument>, <argument pos:start="605:64" pos:end="605:69"><expr pos:start="605:64" pos:end="605:69"><name pos:start="605:64" pos:end="605:69">config</name></expr></argument>, <argument pos:start="605:72" pos:end="605:79"><expr pos:start="605:72" pos:end="605:79"><name pos:start="605:72" pos:end="605:79">line_num</name></expr></argument>, <argument pos:start="605:82" pos:end="605:109"><expr pos:start="605:82" pos:end="605:109"><literal type="string" pos:start="605:82" pos:end="605:109">"Invalid MulticastTTL: %s\n"</literal></expr></argument>, <argument pos:start="605:112" pos:end="605:114"><expr pos:start="605:112" pos:end="605:114"><name pos:start="605:112" pos:end="605:114">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="607:9" pos:end="607:36"><expr pos:start="607:9" pos:end="607:35"><name pos:start="607:9" pos:end="607:29"><name pos:start="607:9" pos:end="607:14">stream</name><operator pos:start="607:15" pos:end="607:16">-&gt;</operator><name pos:start="607:17" pos:end="607:29">multicast_ttl</name></name> <operator pos:start="607:31" pos:end="607:31">=</operator> <name pos:start="607:33" pos:end="607:35">val</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="609:7" pos:end="613:5">else if <condition pos:start="609:15" pos:end="609:45">(<expr pos:start="609:16" pos:end="609:44"><operator pos:start="609:16" pos:end="609:16">!</operator><call pos:start="609:17" pos:end="609:44"><name pos:start="609:17" pos:end="609:29">av_strcasecmp</name><argument_list pos:start="609:30" pos:end="609:44">(<argument pos:start="609:31" pos:end="609:33"><expr pos:start="609:31" pos:end="609:33"><name pos:start="609:31" pos:end="609:33">cmd</name></expr></argument>, <argument pos:start="609:36" pos:end="609:43"><expr pos:start="609:36" pos:end="609:43"><literal type="string" pos:start="609:36" pos:end="609:43">"NoLoop"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="609:47" pos:end="613:5">{<block_content pos:start="611:9" pos:end="611:25">

        <expr_stmt pos:start="611:9" pos:end="611:25"><expr pos:start="611:9" pos:end="611:24"><name pos:start="611:9" pos:end="611:20"><name pos:start="611:9" pos:end="611:14">stream</name><operator pos:start="611:15" pos:end="611:16">-&gt;</operator><name pos:start="611:17" pos:end="611:20">loop</name></name> <operator pos:start="611:22" pos:end="611:22">=</operator> <literal type="number" pos:start="611:24" pos:end="611:24">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="613:7" pos:end="673:5">else if <condition pos:start="613:15" pos:end="613:48">(<expr pos:start="613:16" pos:end="613:47"><operator pos:start="613:16" pos:end="613:16">!</operator><call pos:start="613:17" pos:end="613:47"><name pos:start="613:17" pos:end="613:29">av_strcasecmp</name><argument_list pos:start="613:30" pos:end="613:47">(<argument pos:start="613:31" pos:end="613:33"><expr pos:start="613:31" pos:end="613:33"><name pos:start="613:31" pos:end="613:33">cmd</name></expr></argument>, <argument pos:start="613:36" pos:end="613:46"><expr pos:start="613:36" pos:end="613:46"><literal type="string" pos:start="613:36" pos:end="613:46">"&lt;/Stream&gt;"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="613:50" pos:end="673:5">{<block_content pos:start="615:9" pos:end="671:24">

        <if_stmt pos:start="615:9" pos:end="657:9"><if pos:start="615:9" pos:end="657:9">if <condition pos:start="615:12" pos:end="615:81">(<expr pos:start="615:13" pos:end="615:80"><name pos:start="615:13" pos:end="615:24"><name pos:start="615:13" pos:end="615:18">stream</name><operator pos:start="615:19" pos:end="615:20">-&gt;</operator><name pos:start="615:21" pos:end="615:24">feed</name></name> <operator pos:start="615:26" pos:end="615:27">&amp;&amp;</operator> <name pos:start="615:29" pos:end="615:39"><name pos:start="615:29" pos:end="615:34">stream</name><operator pos:start="615:35" pos:end="615:36">-&gt;</operator><name pos:start="615:37" pos:end="615:39">fmt</name></name> <operator pos:start="615:41" pos:end="615:42">&amp;&amp;</operator> <call pos:start="615:44" pos:end="615:75"><name pos:start="615:44" pos:end="615:49">strcmp</name><argument_list pos:start="615:50" pos:end="615:75">(<argument pos:start="615:51" pos:end="615:67"><expr pos:start="615:51" pos:end="615:67"><name pos:start="615:51" pos:end="615:67"><name pos:start="615:51" pos:end="615:56">stream</name><operator pos:start="615:57" pos:end="615:58">-&gt;</operator><name pos:start="615:59" pos:end="615:61">fmt</name><operator pos:start="615:62" pos:end="615:63">-&gt;</operator><name pos:start="615:64" pos:end="615:67">name</name></name></expr></argument>, <argument pos:start="615:70" pos:end="615:74"><expr pos:start="615:70" pos:end="615:74"><literal type="string" pos:start="615:70" pos:end="615:74">"ffm"</literal></expr></argument>)</argument_list></call> <operator pos:start="615:77" pos:end="615:78">!=</operator> <literal type="number" pos:start="615:80" pos:end="615:80">0</literal></expr>)</condition> <block pos:start="615:83" pos:end="657:9">{<block_content pos:start="617:13" pos:end="655:13">

            <if_stmt pos:start="617:13" pos:end="635:13"><if pos:start="617:13" pos:end="635:13">if <condition pos:start="617:16" pos:end="617:53">(<expr pos:start="617:17" pos:end="617:52"><name pos:start="617:17" pos:end="617:32"><name pos:start="617:17" pos:end="617:22">config</name><operator pos:start="617:23" pos:end="617:24">-&gt;</operator><name pos:start="617:25" pos:end="617:32">audio_id</name></name> <operator pos:start="617:34" pos:end="617:35">!=</operator> <name pos:start="617:37" pos:end="617:52">AV_CODEC_ID_NONE</name></expr>)</condition> <block pos:start="617:55" pos:end="635:13">{<block_content pos:start="619:17" pos:end="633:45">

                <decl_stmt pos:start="619:17" pos:end="619:107"><decl pos:start="619:17" pos:end="619:106"><type pos:start="619:17" pos:end="619:32"><name pos:start="619:17" pos:end="619:30">AVCodecContext</name> <modifier pos:start="619:32" pos:end="619:32">*</modifier></type><name pos:start="619:33" pos:end="619:41">audio_enc</name> <init pos:start="619:43" pos:end="619:106">= <expr pos:start="619:45" pos:end="619:106"><call pos:start="619:45" pos:end="619:106"><name pos:start="619:45" pos:end="619:66">avcodec_alloc_context3</name><argument_list pos:start="619:67" pos:end="619:106">(<argument pos:start="619:68" pos:end="619:105"><expr pos:start="619:68" pos:end="619:105"><call pos:start="619:68" pos:end="619:105"><name pos:start="619:68" pos:end="619:87">avcodec_find_encoder</name><argument_list pos:start="619:88" pos:end="619:105">(<argument pos:start="619:89" pos:end="619:104"><expr pos:start="619:89" pos:end="619:104"><name pos:start="619:89" pos:end="619:104"><name pos:start="619:89" pos:end="619:94">config</name><operator pos:start="619:95" pos:end="619:96">-&gt;</operator><name pos:start="619:97" pos:end="619:104">audio_id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="621:17" pos:end="627:64"><if pos:start="621:17" pos:end="627:64">if <condition pos:start="621:20" pos:end="625:56">(<expr pos:start="621:21" pos:end="625:55"><name pos:start="621:21" pos:end="621:40"><name pos:start="621:21" pos:end="621:26">config</name><operator pos:start="621:27" pos:end="621:28">-&gt;</operator><name pos:start="621:29" pos:end="621:40">audio_preset</name></name> <operator pos:start="621:42" pos:end="621:43">&amp;&amp;</operator>

                    <call pos:start="623:21" pos:end="625:51"><name pos:start="623:21" pos:end="623:39">ffserver_opt_preset</name><argument_list pos:start="623:40" pos:end="625:51">(<argument pos:start="623:41" pos:end="623:43"><expr pos:start="623:41" pos:end="623:43"><name pos:start="623:41" pos:end="623:43">arg</name></expr></argument>, <argument pos:start="623:46" pos:end="623:54"><expr pos:start="623:46" pos:end="623:54"><name pos:start="623:46" pos:end="623:54">audio_enc</name></expr></argument>, <argument pos:start="623:57" pos:end="623:106"><expr pos:start="623:57" pos:end="623:106"><name pos:start="623:57" pos:end="623:79">AV_OPT_FLAG_AUDIO_PARAM</name><operator pos:start="623:80" pos:end="623:80">|</operator><name pos:start="623:81" pos:end="623:106">AV_OPT_FLAG_ENCODING_PARAM</name></expr></argument>,

                                        <argument pos:start="625:41" pos:end="625:44"><expr pos:start="625:41" pos:end="625:44"><name pos:start="625:41" pos:end="625:44">NULL</name></expr></argument>, <argument pos:start="625:47" pos:end="625:50"><expr pos:start="625:47" pos:end="625:50"><name pos:start="625:47" pos:end="625:50">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="625:53" pos:end="625:53">&lt;</operator> <literal type="number" pos:start="625:55" pos:end="625:55">0</literal></expr>)</condition><block type="pseudo" pos:start="627:21" pos:end="627:64"><block_content pos:start="627:21" pos:end="627:64">

                    <expr_stmt pos:start="627:21" pos:end="627:64"><expr pos:start="627:21" pos:end="627:63"><call pos:start="627:21" pos:end="627:63"><name pos:start="627:21" pos:end="627:25">ERROR</name><argument_list pos:start="627:26" pos:end="627:63">(<argument pos:start="627:27" pos:end="627:57"><expr pos:start="627:27" pos:end="627:57"><literal type="string" pos:start="627:27" pos:end="627:57">"Could not apply preset '%s'\n"</literal></expr></argument>, <argument pos:start="627:60" pos:end="627:62"><expr pos:start="627:60" pos:end="627:62"><name pos:start="627:60" pos:end="627:62">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="629:17" pos:end="631:37"><if pos:start="629:17" pos:end="631:37">if <condition pos:start="629:20" pos:end="629:105">(<expr pos:start="629:21" pos:end="629:104"><call pos:start="629:21" pos:end="629:100"><name pos:start="629:21" pos:end="629:48">ffserver_apply_stream_config</name><argument_list pos:start="629:49" pos:end="629:100">(<argument pos:start="629:50" pos:end="629:58"><expr pos:start="629:50" pos:end="629:58"><name pos:start="629:50" pos:end="629:58">audio_enc</name></expr></argument>, <argument pos:start="629:61" pos:end="629:78"><expr pos:start="629:61" pos:end="629:78"><name pos:start="629:61" pos:end="629:78"><name pos:start="629:61" pos:end="629:66">config</name><operator pos:start="629:67" pos:end="629:68">-&gt;</operator><name pos:start="629:69" pos:end="629:78">audio_conf</name></name></expr></argument>, <argument pos:start="629:81" pos:end="629:99"><expr pos:start="629:81" pos:end="629:99"><operator pos:start="629:81" pos:end="629:81">&amp;</operator><name pos:start="629:82" pos:end="629:99"><name pos:start="629:82" pos:end="629:87">config</name><operator pos:start="629:88" pos:end="629:89">-&gt;</operator><name pos:start="629:90" pos:end="629:99">audio_opts</name></name></expr></argument>)</argument_list></call> <operator pos:start="629:102" pos:end="629:102">&lt;</operator> <literal type="number" pos:start="629:104" pos:end="629:104">0</literal></expr>)</condition><block type="pseudo" pos:start="631:21" pos:end="631:37"><block_content pos:start="631:21" pos:end="631:37">

                    <expr_stmt pos:start="631:21" pos:end="631:37"><expr pos:start="631:21" pos:end="631:36"><name pos:start="631:21" pos:end="631:34"><name pos:start="631:21" pos:end="631:26">config</name><operator pos:start="631:27" pos:end="631:28">-&gt;</operator><name pos:start="631:29" pos:end="631:34">errors</name></name><operator pos:start="631:35" pos:end="631:36">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="633:17" pos:end="633:45"><expr pos:start="633:17" pos:end="633:44"><call pos:start="633:17" pos:end="633:44"><name pos:start="633:17" pos:end="633:25">add_codec</name><argument_list pos:start="633:26" pos:end="633:44">(<argument pos:start="633:27" pos:end="633:32"><expr pos:start="633:27" pos:end="633:32"><name pos:start="633:27" pos:end="633:32">stream</name></expr></argument>, <argument pos:start="633:35" pos:end="633:43"><expr pos:start="633:35" pos:end="633:43"><name pos:start="633:35" pos:end="633:43">audio_enc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="637:13" pos:end="655:13"><if pos:start="637:13" pos:end="655:13">if <condition pos:start="637:16" pos:end="637:53">(<expr pos:start="637:17" pos:end="637:52"><name pos:start="637:17" pos:end="637:32"><name pos:start="637:17" pos:end="637:22">config</name><operator pos:start="637:23" pos:end="637:24">-&gt;</operator><name pos:start="637:25" pos:end="637:32">video_id</name></name> <operator pos:start="637:34" pos:end="637:35">!=</operator> <name pos:start="637:37" pos:end="637:52">AV_CODEC_ID_NONE</name></expr>)</condition> <block pos:start="637:55" pos:end="655:13">{<block_content pos:start="639:17" pos:end="653:45">

                <decl_stmt pos:start="639:17" pos:end="639:107"><decl pos:start="639:17" pos:end="639:106"><type pos:start="639:17" pos:end="639:32"><name pos:start="639:17" pos:end="639:30">AVCodecContext</name> <modifier pos:start="639:32" pos:end="639:32">*</modifier></type><name pos:start="639:33" pos:end="639:41">video_enc</name> <init pos:start="639:43" pos:end="639:106">= <expr pos:start="639:45" pos:end="639:106"><call pos:start="639:45" pos:end="639:106"><name pos:start="639:45" pos:end="639:66">avcodec_alloc_context3</name><argument_list pos:start="639:67" pos:end="639:106">(<argument pos:start="639:68" pos:end="639:105"><expr pos:start="639:68" pos:end="639:105"><call pos:start="639:68" pos:end="639:105"><name pos:start="639:68" pos:end="639:87">avcodec_find_encoder</name><argument_list pos:start="639:88" pos:end="639:105">(<argument pos:start="639:89" pos:end="639:104"><expr pos:start="639:89" pos:end="639:104"><name pos:start="639:89" pos:end="639:104"><name pos:start="639:89" pos:end="639:94">config</name><operator pos:start="639:95" pos:end="639:96">-&gt;</operator><name pos:start="639:97" pos:end="639:104">video_id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="641:17" pos:end="647:64"><if pos:start="641:17" pos:end="647:64">if <condition pos:start="641:20" pos:end="645:56">(<expr pos:start="641:21" pos:end="645:55"><name pos:start="641:21" pos:end="641:40"><name pos:start="641:21" pos:end="641:26">config</name><operator pos:start="641:27" pos:end="641:28">-&gt;</operator><name pos:start="641:29" pos:end="641:40">video_preset</name></name> <operator pos:start="641:42" pos:end="641:43">&amp;&amp;</operator>

                    <call pos:start="643:21" pos:end="645:51"><name pos:start="643:21" pos:end="643:39">ffserver_opt_preset</name><argument_list pos:start="643:40" pos:end="645:51">(<argument pos:start="643:41" pos:end="643:43"><expr pos:start="643:41" pos:end="643:43"><name pos:start="643:41" pos:end="643:43">arg</name></expr></argument>, <argument pos:start="643:46" pos:end="643:54"><expr pos:start="643:46" pos:end="643:54"><name pos:start="643:46" pos:end="643:54">video_enc</name></expr></argument>, <argument pos:start="643:57" pos:end="643:106"><expr pos:start="643:57" pos:end="643:106"><name pos:start="643:57" pos:end="643:79">AV_OPT_FLAG_VIDEO_PARAM</name><operator pos:start="643:80" pos:end="643:80">|</operator><name pos:start="643:81" pos:end="643:106">AV_OPT_FLAG_ENCODING_PARAM</name></expr></argument>,

                                        <argument pos:start="645:41" pos:end="645:44"><expr pos:start="645:41" pos:end="645:44"><name pos:start="645:41" pos:end="645:44">NULL</name></expr></argument>, <argument pos:start="645:47" pos:end="645:50"><expr pos:start="645:47" pos:end="645:50"><name pos:start="645:47" pos:end="645:50">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="645:53" pos:end="645:53">&lt;</operator> <literal type="number" pos:start="645:55" pos:end="645:55">0</literal></expr>)</condition><block type="pseudo" pos:start="647:21" pos:end="647:64"><block_content pos:start="647:21" pos:end="647:64">

                    <expr_stmt pos:start="647:21" pos:end="647:64"><expr pos:start="647:21" pos:end="647:63"><call pos:start="647:21" pos:end="647:63"><name pos:start="647:21" pos:end="647:25">ERROR</name><argument_list pos:start="647:26" pos:end="647:63">(<argument pos:start="647:27" pos:end="647:57"><expr pos:start="647:27" pos:end="647:57"><literal type="string" pos:start="647:27" pos:end="647:57">"Could not apply preset '%s'\n"</literal></expr></argument>, <argument pos:start="647:60" pos:end="647:62"><expr pos:start="647:60" pos:end="647:62"><name pos:start="647:60" pos:end="647:62">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="649:17" pos:end="651:37"><if pos:start="649:17" pos:end="651:37">if <condition pos:start="649:20" pos:end="649:105">(<expr pos:start="649:21" pos:end="649:104"><call pos:start="649:21" pos:end="649:100"><name pos:start="649:21" pos:end="649:48">ffserver_apply_stream_config</name><argument_list pos:start="649:49" pos:end="649:100">(<argument pos:start="649:50" pos:end="649:58"><expr pos:start="649:50" pos:end="649:58"><name pos:start="649:50" pos:end="649:58">video_enc</name></expr></argument>, <argument pos:start="649:61" pos:end="649:78"><expr pos:start="649:61" pos:end="649:78"><name pos:start="649:61" pos:end="649:78"><name pos:start="649:61" pos:end="649:66">config</name><operator pos:start="649:67" pos:end="649:68">-&gt;</operator><name pos:start="649:69" pos:end="649:78">video_conf</name></name></expr></argument>, <argument pos:start="649:81" pos:end="649:99"><expr pos:start="649:81" pos:end="649:99"><operator pos:start="649:81" pos:end="649:81">&amp;</operator><name pos:start="649:82" pos:end="649:99"><name pos:start="649:82" pos:end="649:87">config</name><operator pos:start="649:88" pos:end="649:89">-&gt;</operator><name pos:start="649:90" pos:end="649:99">video_opts</name></name></expr></argument>)</argument_list></call> <operator pos:start="649:102" pos:end="649:102">&lt;</operator> <literal type="number" pos:start="649:104" pos:end="649:104">0</literal></expr>)</condition><block type="pseudo" pos:start="651:21" pos:end="651:37"><block_content pos:start="651:21" pos:end="651:37">

                    <expr_stmt pos:start="651:21" pos:end="651:37"><expr pos:start="651:21" pos:end="651:36"><name pos:start="651:21" pos:end="651:34"><name pos:start="651:21" pos:end="651:26">config</name><operator pos:start="651:27" pos:end="651:28">-&gt;</operator><name pos:start="651:29" pos:end="651:34">errors</name></name><operator pos:start="651:35" pos:end="651:36">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="653:17" pos:end="653:45"><expr pos:start="653:17" pos:end="653:44"><call pos:start="653:17" pos:end="653:44"><name pos:start="653:17" pos:end="653:25">add_codec</name><argument_list pos:start="653:26" pos:end="653:44">(<argument pos:start="653:27" pos:end="653:32"><expr pos:start="653:27" pos:end="653:32"><name pos:start="653:27" pos:end="653:32">stream</name></expr></argument>, <argument pos:start="653:35" pos:end="653:43"><expr pos:start="653:35" pos:end="653:43"><name pos:start="653:35" pos:end="653:43">video_enc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="659:9" pos:end="659:42"><expr pos:start="659:9" pos:end="659:41"><call pos:start="659:9" pos:end="659:41"><name pos:start="659:9" pos:end="659:20">av_dict_free</name><argument_list pos:start="659:21" pos:end="659:41">(<argument pos:start="659:22" pos:end="659:40"><expr pos:start="659:22" pos:end="659:40"><operator pos:start="659:22" pos:end="659:22">&amp;</operator><name pos:start="659:23" pos:end="659:40"><name pos:start="659:23" pos:end="659:28">config</name><operator pos:start="659:29" pos:end="659:30">-&gt;</operator><name pos:start="659:31" pos:end="659:40">video_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="661:9" pos:end="661:42"><expr pos:start="661:9" pos:end="661:41"><call pos:start="661:9" pos:end="661:41"><name pos:start="661:9" pos:end="661:20">av_dict_free</name><argument_list pos:start="661:21" pos:end="661:41">(<argument pos:start="661:22" pos:end="661:40"><expr pos:start="661:22" pos:end="661:40"><operator pos:start="661:22" pos:end="661:22">&amp;</operator><name pos:start="661:23" pos:end="661:40"><name pos:start="661:23" pos:end="661:28">config</name><operator pos:start="661:29" pos:end="661:30">-&gt;</operator><name pos:start="661:31" pos:end="661:40">video_conf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="663:9" pos:end="663:42"><expr pos:start="663:9" pos:end="663:41"><call pos:start="663:9" pos:end="663:41"><name pos:start="663:9" pos:end="663:20">av_dict_free</name><argument_list pos:start="663:21" pos:end="663:41">(<argument pos:start="663:22" pos:end="663:40"><expr pos:start="663:22" pos:end="663:40"><operator pos:start="663:22" pos:end="663:22">&amp;</operator><name pos:start="663:23" pos:end="663:40"><name pos:start="663:23" pos:end="663:28">config</name><operator pos:start="663:29" pos:end="663:30">-&gt;</operator><name pos:start="663:31" pos:end="663:40">audio_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="665:9" pos:end="665:42"><expr pos:start="665:9" pos:end="665:41"><call pos:start="665:9" pos:end="665:41"><name pos:start="665:9" pos:end="665:20">av_dict_free</name><argument_list pos:start="665:21" pos:end="665:41">(<argument pos:start="665:22" pos:end="665:40"><expr pos:start="665:22" pos:end="665:40"><operator pos:start="665:22" pos:end="665:22">&amp;</operator><name pos:start="665:23" pos:end="665:40"><name pos:start="665:23" pos:end="665:28">config</name><operator pos:start="665:29" pos:end="665:30">-&gt;</operator><name pos:start="665:31" pos:end="665:40">audio_conf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="667:9" pos:end="667:40"><expr pos:start="667:9" pos:end="667:39"><call pos:start="667:9" pos:end="667:39"><name pos:start="667:9" pos:end="667:16">av_freep</name><argument_list pos:start="667:17" pos:end="667:39">(<argument pos:start="667:18" pos:end="667:38"><expr pos:start="667:18" pos:end="667:38"><operator pos:start="667:18" pos:end="667:18">&amp;</operator><name pos:start="667:19" pos:end="667:38"><name pos:start="667:19" pos:end="667:24">config</name><operator pos:start="667:25" pos:end="667:26">-&gt;</operator><name pos:start="667:27" pos:end="667:38">video_preset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="669:9" pos:end="669:40"><expr pos:start="669:9" pos:end="669:39"><call pos:start="669:9" pos:end="669:39"><name pos:start="669:9" pos:end="669:16">av_freep</name><argument_list pos:start="669:17" pos:end="669:39">(<argument pos:start="669:18" pos:end="669:38"><expr pos:start="669:18" pos:end="669:38"><operator pos:start="669:18" pos:end="669:18">&amp;</operator><name pos:start="669:19" pos:end="669:38"><name pos:start="669:19" pos:end="669:24">config</name><operator pos:start="669:25" pos:end="669:26">-&gt;</operator><name pos:start="669:27" pos:end="669:38">audio_preset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="671:9" pos:end="671:24"><expr pos:start="671:9" pos:end="671:23"><operator pos:start="671:9" pos:end="671:9">*</operator><name pos:start="671:10" pos:end="671:16">pstream</name> <operator pos:start="671:18" pos:end="671:18">=</operator> <name pos:start="671:20" pos:end="671:23">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="673:7" pos:end="677:5">else if <condition pos:start="673:15" pos:end="673:82">(<expr pos:start="673:16" pos:end="673:81"><operator pos:start="673:16" pos:end="673:16">!</operator><call pos:start="673:17" pos:end="673:42"><name pos:start="673:17" pos:end="673:29">av_strcasecmp</name><argument_list pos:start="673:30" pos:end="673:42">(<argument pos:start="673:31" pos:end="673:33"><expr pos:start="673:31" pos:end="673:33"><name pos:start="673:31" pos:end="673:33">cmd</name></expr></argument>, <argument pos:start="673:36" pos:end="673:41"><expr pos:start="673:36" pos:end="673:41"><literal type="string" pos:start="673:36" pos:end="673:41">"File"</literal></expr></argument>)</argument_list></call> <operator pos:start="673:44" pos:end="673:45">||</operator> <operator pos:start="673:47" pos:end="673:47">!</operator><call pos:start="673:48" pos:end="673:81"><name pos:start="673:48" pos:end="673:60">av_strcasecmp</name><argument_list pos:start="673:61" pos:end="673:81">(<argument pos:start="673:62" pos:end="673:64"><expr pos:start="673:62" pos:end="673:64"><name pos:start="673:62" pos:end="673:64">cmd</name></expr></argument>, <argument pos:start="673:67" pos:end="673:80"><expr pos:start="673:67" pos:end="673:80"><literal type="string" pos:start="673:67" pos:end="673:80">"ReadOnlyFile"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="673:84" pos:end="677:5">{<block_content pos:start="675:9" pos:end="675:82">

        <expr_stmt pos:start="675:9" pos:end="675:82"><expr pos:start="675:9" pos:end="675:81"><call pos:start="675:9" pos:end="675:81"><name pos:start="675:9" pos:end="675:24">ffserver_get_arg</name><argument_list pos:start="675:25" pos:end="675:81">(<argument pos:start="675:26" pos:end="675:46"><expr pos:start="675:26" pos:end="675:46"><name pos:start="675:26" pos:end="675:46"><name pos:start="675:26" pos:end="675:31">stream</name><operator pos:start="675:32" pos:end="675:33">-&gt;</operator><name pos:start="675:34" pos:end="675:46">feed_filename</name></name></expr></argument>, <argument pos:start="675:49" pos:end="675:77"><expr pos:start="675:49" pos:end="675:77"><sizeof pos:start="675:49" pos:end="675:77">sizeof<argument_list pos:start="675:55" pos:end="675:77">(<argument pos:start="675:56" pos:end="675:76"><expr pos:start="675:56" pos:end="675:76"><name pos:start="675:56" pos:end="675:76"><name pos:start="675:56" pos:end="675:61">stream</name><operator pos:start="675:62" pos:end="675:63">-&gt;</operator><name pos:start="675:64" pos:end="675:76">feed_filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="675:80" pos:end="675:80"><expr pos:start="675:80" pos:end="675:80"><name pos:start="675:80" pos:end="675:80">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="677:7" pos:end="681:5">else <block pos:start="677:12" pos:end="681:5">{<block_content pos:start="679:9" pos:end="679:68">

        <expr_stmt pos:start="679:9" pos:end="679:68"><expr pos:start="679:9" pos:end="679:67"><call pos:start="679:9" pos:end="679:67"><name pos:start="679:9" pos:end="679:13">ERROR</name><argument_list pos:start="679:14" pos:end="679:67">(<argument pos:start="679:15" pos:end="679:61"><expr pos:start="679:15" pos:end="679:61"><literal type="string" pos:start="679:15" pos:end="679:61">"Invalid entry '%s' inside &lt;Stream&gt;&lt;/Stream&gt;\n"</literal></expr></argument>, <argument pos:start="679:64" pos:end="679:66"><expr pos:start="679:64" pos:end="679:66"><name pos:start="679:64" pos:end="679:66">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="683:5" pos:end="683:13">return <expr pos:start="683:12" pos:end="683:12"><literal type="number" pos:start="683:12" pos:end="683:12">0</literal></expr>;</return>

  <label pos:start="685:3" pos:end="685:8"><name pos:start="685:3" pos:end="685:7">nomem</name>:</label>

    <expr_stmt pos:start="687:5" pos:end="687:61"><expr pos:start="687:5" pos:end="687:60"><call pos:start="687:5" pos:end="687:60"><name pos:start="687:5" pos:end="687:10">av_log</name><argument_list pos:start="687:11" pos:end="687:60">(<argument pos:start="687:12" pos:end="687:15"><expr pos:start="687:12" pos:end="687:15"><name pos:start="687:12" pos:end="687:15">NULL</name></expr></argument>, <argument pos:start="687:18" pos:end="687:29"><expr pos:start="687:18" pos:end="687:29"><name pos:start="687:18" pos:end="687:29">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="687:32" pos:end="687:59"><expr pos:start="687:32" pos:end="687:59"><literal type="string" pos:start="687:32" pos:end="687:59">"Out of memory. Aborting.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="689:5" pos:end="689:38"><expr pos:start="689:5" pos:end="689:37"><call pos:start="689:5" pos:end="689:37"><name pos:start="689:5" pos:end="689:16">av_dict_free</name><argument_list pos:start="689:17" pos:end="689:37">(<argument pos:start="689:18" pos:end="689:36"><expr pos:start="689:18" pos:end="689:36"><operator pos:start="689:18" pos:end="689:18">&amp;</operator><name pos:start="689:19" pos:end="689:36"><name pos:start="689:19" pos:end="689:24">config</name><operator pos:start="689:25" pos:end="689:26">-&gt;</operator><name pos:start="689:27" pos:end="689:36">video_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="691:5" pos:end="691:38"><expr pos:start="691:5" pos:end="691:37"><call pos:start="691:5" pos:end="691:37"><name pos:start="691:5" pos:end="691:16">av_dict_free</name><argument_list pos:start="691:17" pos:end="691:37">(<argument pos:start="691:18" pos:end="691:36"><expr pos:start="691:18" pos:end="691:36"><operator pos:start="691:18" pos:end="691:18">&amp;</operator><name pos:start="691:19" pos:end="691:36"><name pos:start="691:19" pos:end="691:24">config</name><operator pos:start="691:25" pos:end="691:26">-&gt;</operator><name pos:start="691:27" pos:end="691:36">video_conf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="693:5" pos:end="693:38"><expr pos:start="693:5" pos:end="693:37"><call pos:start="693:5" pos:end="693:37"><name pos:start="693:5" pos:end="693:16">av_dict_free</name><argument_list pos:start="693:17" pos:end="693:37">(<argument pos:start="693:18" pos:end="693:36"><expr pos:start="693:18" pos:end="693:36"><operator pos:start="693:18" pos:end="693:18">&amp;</operator><name pos:start="693:19" pos:end="693:36"><name pos:start="693:19" pos:end="693:24">config</name><operator pos:start="693:25" pos:end="693:26">-&gt;</operator><name pos:start="693:27" pos:end="693:36">audio_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="695:5" pos:end="695:38"><expr pos:start="695:5" pos:end="695:37"><call pos:start="695:5" pos:end="695:37"><name pos:start="695:5" pos:end="695:16">av_dict_free</name><argument_list pos:start="695:17" pos:end="695:37">(<argument pos:start="695:18" pos:end="695:36"><expr pos:start="695:18" pos:end="695:36"><operator pos:start="695:18" pos:end="695:18">&amp;</operator><name pos:start="695:19" pos:end="695:36"><name pos:start="695:19" pos:end="695:24">config</name><operator pos:start="695:25" pos:end="695:26">-&gt;</operator><name pos:start="695:27" pos:end="695:36">audio_conf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="697:5" pos:end="697:36"><expr pos:start="697:5" pos:end="697:35"><call pos:start="697:5" pos:end="697:35"><name pos:start="697:5" pos:end="697:12">av_freep</name><argument_list pos:start="697:13" pos:end="697:35">(<argument pos:start="697:14" pos:end="697:34"><expr pos:start="697:14" pos:end="697:34"><operator pos:start="697:14" pos:end="697:14">&amp;</operator><name pos:start="697:15" pos:end="697:34"><name pos:start="697:15" pos:end="697:20">config</name><operator pos:start="697:21" pos:end="697:22">-&gt;</operator><name pos:start="697:23" pos:end="697:34">video_preset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="699:5" pos:end="699:36"><expr pos:start="699:5" pos:end="699:35"><call pos:start="699:5" pos:end="699:35"><name pos:start="699:5" pos:end="699:12">av_freep</name><argument_list pos:start="699:13" pos:end="699:35">(<argument pos:start="699:14" pos:end="699:34"><expr pos:start="699:14" pos:end="699:34"><operator pos:start="699:14" pos:end="699:14">&amp;</operator><name pos:start="699:15" pos:end="699:34"><name pos:start="699:15" pos:end="699:20">config</name><operator pos:start="699:21" pos:end="699:22">-&gt;</operator><name pos:start="699:23" pos:end="699:34">audio_preset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="701:5" pos:end="701:27">return <expr pos:start="701:12" pos:end="701:26"><call pos:start="701:12" pos:end="701:26"><name pos:start="701:12" pos:end="701:18">AVERROR</name><argument_list pos:start="701:19" pos:end="701:26">(<argument pos:start="701:20" pos:end="701:25"><expr pos:start="701:20" pos:end="701:25"><name pos:start="701:20" pos:end="701:25">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
