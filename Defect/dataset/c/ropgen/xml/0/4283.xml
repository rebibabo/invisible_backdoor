<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4283.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:32">virtio_scsi_handle_ctrl_req</name><parameter_list pos:start="1:33" pos:end="1:67">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:43">VirtIOSCSI</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:66"><decl pos:start="1:49" pos:end="1:66"><type pos:start="1:49" pos:end="1:66"><name pos:start="1:49" pos:end="1:61">VirtIOSCSIReq</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">req</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:5">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">VirtIODevice</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:22">vdev</name> <init pos:start="5:24" pos:end="5:42">= <expr pos:start="5:26" pos:end="5:42"><operator pos:start="5:26" pos:end="5:26">(</operator><name pos:start="5:27" pos:end="5:38">VirtIODevice</name> <operator pos:start="5:40" pos:end="5:40">*</operator><operator pos:start="5:41" pos:end="5:41">)</operator><name pos:start="5:42" pos:end="5:42">s</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">r</name> <init pos:start="9:11" pos:end="9:13">= <expr pos:start="9:13" pos:end="9:13"><literal type="number" pos:start="9:13" pos:end="9:13">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="15:52">(<expr pos:start="13:9" pos:end="15:51"><call pos:start="13:9" pos:end="15:36"><name pos:start="13:9" pos:end="13:18">iov_to_buf</name><argument_list pos:start="13:19" pos:end="15:36">(<argument pos:start="13:20" pos:end="13:35"><expr pos:start="13:20" pos:end="13:35"><name pos:start="13:20" pos:end="13:35"><name pos:start="13:20" pos:end="13:22">req</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:28">elem</name><operator pos:start="13:29" pos:end="13:29">.</operator><name pos:start="13:30" pos:end="13:35">out_sg</name></name></expr></argument>, <argument pos:start="13:38" pos:end="13:54"><expr pos:start="13:38" pos:end="13:54"><name pos:start="13:38" pos:end="13:54"><name pos:start="13:38" pos:end="13:40">req</name><operator pos:start="13:41" pos:end="13:42">-&gt;</operator><name pos:start="13:43" pos:end="13:46">elem</name><operator pos:start="13:47" pos:end="13:47">.</operator><name pos:start="13:48" pos:end="13:54">out_num</name></name></expr></argument>, <argument pos:start="13:57" pos:end="13:57"><expr pos:start="13:57" pos:end="13:57"><literal type="number" pos:start="13:57" pos:end="13:57">0</literal></expr></argument>,

                <argument pos:start="15:17" pos:end="15:21"><expr pos:start="15:17" pos:end="15:21"><operator pos:start="15:17" pos:end="15:17">&amp;</operator><name pos:start="15:18" pos:end="15:21">type</name></expr></argument>, <argument pos:start="15:24" pos:end="15:35"><expr pos:start="15:24" pos:end="15:35"><sizeof pos:start="15:24" pos:end="15:35">sizeof<argument_list pos:start="15:30" pos:end="15:35">(<argument pos:start="15:31" pos:end="15:34"><expr pos:start="15:31" pos:end="15:34"><name pos:start="15:31" pos:end="15:34">type</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="15:38" pos:end="15:38">&lt;</operator> <sizeof pos:start="15:40" pos:end="15:51">sizeof<argument_list pos:start="15:46" pos:end="15:51">(<argument pos:start="15:47" pos:end="15:50"><expr pos:start="15:47" pos:end="15:50"><name pos:start="15:47" pos:end="15:50">type</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="15:54" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:15">

        <expr_stmt pos:start="17:9" pos:end="17:30"><expr pos:start="17:9" pos:end="17:29"><call pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:27">virtio_scsi_bad_req</name><argument_list pos:start="17:28" pos:end="17:29">()</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:46"><expr pos:start="25:5" pos:end="25:45"><call pos:start="25:5" pos:end="25:45"><name pos:start="25:5" pos:end="25:19">virtio_tswap32s</name><argument_list pos:start="25:20" pos:end="25:45">(<argument pos:start="25:21" pos:end="25:24"><expr pos:start="25:21" pos:end="25:24"><name pos:start="25:21" pos:end="25:24">vdev</name></expr></argument>, <argument pos:start="25:27" pos:end="25:44"><expr pos:start="25:27" pos:end="25:44"><operator pos:start="25:27" pos:end="25:27">&amp;</operator><name pos:start="25:28" pos:end="25:44"><name pos:start="25:28" pos:end="25:30">req</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:35">req</name><operator pos:start="25:36" pos:end="25:36">.</operator><name pos:start="25:37" pos:end="25:39">tmf</name><operator pos:start="25:40" pos:end="25:40">.</operator><name pos:start="25:41" pos:end="25:44">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="61:5"><if pos:start="27:5" pos:end="43:5">if <condition pos:start="27:8" pos:end="27:47">(<expr pos:start="27:9" pos:end="27:46"><name pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:11">req</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:16">req</name><operator pos:start="27:17" pos:end="27:17">.</operator><name pos:start="27:18" pos:end="27:20">tmf</name><operator pos:start="27:21" pos:end="27:21">.</operator><name pos:start="27:22" pos:end="27:25">type</name></name> <operator pos:start="27:27" pos:end="27:28">==</operator> <name pos:start="27:30" pos:end="27:46">VIRTIO_SCSI_T_TMF</name></expr>)</condition> <block pos:start="27:49" pos:end="43:5">{<block_content pos:start="29:9" pos:end="39:9">

        <if_stmt pos:start="29:9" pos:end="39:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="31:55">(<expr pos:start="29:13" pos:end="31:54"><call pos:start="29:13" pos:end="31:50"><name pos:start="29:13" pos:end="29:33">virtio_scsi_parse_req</name><argument_list pos:start="29:34" pos:end="31:50">(<argument pos:start="29:35" pos:end="29:37"><expr pos:start="29:35" pos:end="29:37"><name pos:start="29:35" pos:end="29:37">req</name></expr></argument>, <argument pos:start="29:40" pos:end="29:67"><expr pos:start="29:40" pos:end="29:67"><sizeof pos:start="29:40" pos:end="29:67">sizeof<argument_list pos:start="29:46" pos:end="29:67">(<argument pos:start="29:47" pos:end="29:66"><expr pos:start="29:47" pos:end="29:66"><name pos:start="29:47" pos:end="29:66">VirtIOSCSICtrlTMFReq</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                    <argument pos:start="31:21" pos:end="31:49"><expr pos:start="31:21" pos:end="31:49"><sizeof pos:start="31:21" pos:end="31:49">sizeof<argument_list pos:start="31:27" pos:end="31:49">(<argument pos:start="31:28" pos:end="31:48"><expr pos:start="31:28" pos:end="31:48"><name pos:start="31:28" pos:end="31:48">VirtIOSCSICtrlTMFResp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="31:52" pos:end="31:52">&lt;</operator> <literal type="number" pos:start="31:54" pos:end="31:54">0</literal></expr>)</condition> <block pos:start="31:57" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:34">

            <expr_stmt pos:start="33:13" pos:end="33:34"><expr pos:start="33:13" pos:end="33:33"><call pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:31">virtio_scsi_bad_req</name><argument_list pos:start="33:32" pos:end="33:33">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="35:11" pos:end="39:9">else <block pos:start="35:16" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:43">

            <expr_stmt pos:start="37:13" pos:end="37:43"><expr pos:start="37:13" pos:end="37:42"><name pos:start="37:13" pos:end="37:13">r</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <call pos:start="37:17" pos:end="37:42"><name pos:start="37:17" pos:end="37:34">virtio_scsi_do_tmf</name><argument_list pos:start="37:35" pos:end="37:42">(<argument pos:start="37:36" pos:end="37:36"><expr pos:start="37:36" pos:end="37:36"><name pos:start="37:36" pos:end="37:36">s</name></expr></argument>, <argument pos:start="37:39" pos:end="37:41"><expr pos:start="37:39" pos:end="37:41"><name pos:start="37:39" pos:end="37:41">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="61:5">else if <condition pos:start="43:15" pos:end="45:60">(<expr pos:start="43:16" pos:end="45:59"><name pos:start="43:16" pos:end="43:32"><name pos:start="43:16" pos:end="43:18">req</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:23">req</name><operator pos:start="43:24" pos:end="43:24">.</operator><name pos:start="43:25" pos:end="43:27">tmf</name><operator pos:start="43:28" pos:end="43:28">.</operator><name pos:start="43:29" pos:end="43:32">type</name></name> <operator pos:start="43:34" pos:end="43:35">==</operator> <name pos:start="43:37" pos:end="43:58">VIRTIO_SCSI_T_AN_QUERY</name> <operator pos:start="43:60" pos:end="43:61">||</operator>

            <name pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:15">req</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:20">req</name><operator pos:start="45:21" pos:end="45:21">.</operator><name pos:start="45:22" pos:end="45:24">tmf</name><operator pos:start="45:25" pos:end="45:25">.</operator><name pos:start="45:26" pos:end="45:29">type</name></name> <operator pos:start="45:31" pos:end="45:32">==</operator> <name pos:start="45:34" pos:end="45:59">VIRTIO_SCSI_T_AN_SUBSCRIBE</name></expr>)</condition> <block pos:start="45:62" pos:end="61:5">{<block_content pos:start="47:9" pos:end="59:9">

        <if_stmt pos:start="47:9" pos:end="59:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="49:54">(<expr pos:start="47:13" pos:end="49:53"><call pos:start="47:13" pos:end="49:49"><name pos:start="47:13" pos:end="47:33">virtio_scsi_parse_req</name><argument_list pos:start="47:34" pos:end="49:49">(<argument pos:start="47:35" pos:end="47:37"><expr pos:start="47:35" pos:end="47:37"><name pos:start="47:35" pos:end="47:37">req</name></expr></argument>, <argument pos:start="47:40" pos:end="47:66"><expr pos:start="47:40" pos:end="47:66"><sizeof pos:start="47:40" pos:end="47:66">sizeof<argument_list pos:start="47:46" pos:end="47:66">(<argument pos:start="47:47" pos:end="47:65"><expr pos:start="47:47" pos:end="47:65"><name pos:start="47:47" pos:end="47:65">VirtIOSCSICtrlANReq</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                    <argument pos:start="49:21" pos:end="49:48"><expr pos:start="49:21" pos:end="49:48"><sizeof pos:start="49:21" pos:end="49:48">sizeof<argument_list pos:start="49:27" pos:end="49:48">(<argument pos:start="49:28" pos:end="49:47"><expr pos:start="49:28" pos:end="49:47"><name pos:start="49:28" pos:end="49:47">VirtIOSCSICtrlANResp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="49:51" pos:end="49:51">&lt;</operator> <literal type="number" pos:start="49:53" pos:end="49:53">0</literal></expr>)</condition> <block pos:start="49:56" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:34">

            <expr_stmt pos:start="51:13" pos:end="51:34"><expr pos:start="51:13" pos:end="51:33"><call pos:start="51:13" pos:end="51:33"><name pos:start="51:13" pos:end="51:31">virtio_scsi_bad_req</name><argument_list pos:start="51:32" pos:end="51:33">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="53:11" pos:end="59:9">else <block pos:start="53:16" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:53">

            <expr_stmt pos:start="55:13" pos:end="55:42"><expr pos:start="55:13" pos:end="55:41"><name pos:start="55:13" pos:end="55:37"><name pos:start="55:13" pos:end="55:15">req</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:21">resp</name><operator pos:start="55:22" pos:end="55:22">.</operator><name pos:start="55:23" pos:end="55:24">an</name><operator pos:start="55:25" pos:end="55:25">.</operator><name pos:start="55:26" pos:end="55:37">event_actual</name></name> <operator pos:start="55:39" pos:end="55:39">=</operator> <literal type="number" pos:start="55:41" pos:end="55:41">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:53"><expr pos:start="57:13" pos:end="57:52"><name pos:start="57:13" pos:end="57:33"><name pos:start="57:13" pos:end="57:15">req</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:21">resp</name><operator pos:start="57:22" pos:end="57:22">.</operator><name pos:start="57:23" pos:end="57:24">an</name><operator pos:start="57:25" pos:end="57:25">.</operator><name pos:start="57:26" pos:end="57:33">response</name></name> <operator pos:start="57:35" pos:end="57:35">=</operator> <name pos:start="57:37" pos:end="57:52">VIRTIO_SCSI_S_OK</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="63:5" pos:end="71:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:15">(<expr pos:start="63:9" pos:end="63:14"><name pos:start="63:9" pos:end="63:9">r</name> <operator pos:start="63:11" pos:end="63:12">==</operator> <literal type="number" pos:start="63:14" pos:end="63:14">0</literal></expr>)</condition> <block pos:start="63:17" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:38">

        <expr_stmt pos:start="65:9" pos:end="65:38"><expr pos:start="65:9" pos:end="65:37"><call pos:start="65:9" pos:end="65:37"><name pos:start="65:9" pos:end="65:32">virtio_scsi_complete_req</name><argument_list pos:start="65:33" pos:end="65:37">(<argument pos:start="65:34" pos:end="65:36"><expr pos:start="65:34" pos:end="65:36"><name pos:start="65:34" pos:end="65:36">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="67:7" pos:end="71:5">else <block pos:start="67:12" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:34">

        <expr_stmt pos:start="69:9" pos:end="69:34"><expr pos:start="69:9" pos:end="69:33"><call pos:start="69:9" pos:end="69:33"><name pos:start="69:9" pos:end="69:14">assert</name><argument_list pos:start="69:15" pos:end="69:33">(<argument pos:start="69:16" pos:end="69:32"><expr pos:start="69:16" pos:end="69:32"><name pos:start="69:16" pos:end="69:16">r</name> <operator pos:start="69:18" pos:end="69:19">==</operator> <operator pos:start="69:21" pos:end="69:21">-</operator><name pos:start="69:22" pos:end="69:32">EINPROGRESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
