<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1031.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">theora_decode_header</name><parameter_list pos:start="1:32" pos:end="1:72">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:71"><decl pos:start="1:56" pos:end="1:71"><type pos:start="1:56" pos:end="1:71"><name pos:start="1:56" pos:end="1:68">GetBitContext</name></type> <name pos:start="1:70" pos:end="1:71">gb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">Vp3DecodeContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">s</name> <init pos:start="5:25" pos:end="5:42">= <expr pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:31">avctx</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:39"><expr pos:start="9:5" pos:end="9:38"><name pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:13">theora</name></name> <operator pos:start="9:15" pos:end="9:15">=</operator> <call pos:start="9:17" pos:end="9:38"><name pos:start="9:17" pos:end="9:29">get_bits_long</name><argument_list pos:start="9:30" pos:end="9:38">(<argument pos:start="9:31" pos:end="9:33"><expr pos:start="9:31" pos:end="9:33"><operator pos:start="9:31" pos:end="9:31">&amp;</operator><name pos:start="9:32" pos:end="9:33">gb</name></expr></argument>, <argument pos:start="9:36" pos:end="9:37"><expr pos:start="9:36" pos:end="9:37"><literal type="number" pos:start="9:36" pos:end="9:37">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:75"><expr pos:start="11:5" pos:end="11:74"><call pos:start="11:5" pos:end="11:74"><name pos:start="11:5" pos:end="11:10">av_log</name><argument_list pos:start="11:11" pos:end="11:74">(<argument pos:start="11:12" pos:end="11:16"><expr pos:start="11:12" pos:end="11:16"><name pos:start="11:12" pos:end="11:16">avctx</name></expr></argument>, <argument pos:start="11:19" pos:end="11:29"><expr pos:start="11:19" pos:end="11:29"><name pos:start="11:19" pos:end="11:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="11:32" pos:end="11:62"><expr pos:start="11:32" pos:end="11:62"><literal type="string" pos:start="11:32" pos:end="11:62">"Theora bitstream version %X\n"</literal></expr></argument>, <argument pos:start="11:65" pos:end="11:73"><expr pos:start="11:65" pos:end="11:73"><name pos:start="11:65" pos:end="11:73"><name pos:start="11:65" pos:end="11:65">s</name><operator pos:start="11:66" pos:end="11:67">-&gt;</operator><name pos:start="11:68" pos:end="11:73">theora</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:73">/* 3.2.0 aka alpha3 has the same frame orientation as original vp3 */</comment>

    <comment type="block" pos:start="17:5" pos:end="17:70">/* but previous versions have the image flipped relative to vp3 */</comment>

    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:29">(<expr pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:17">theora</name></name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <literal type="number" pos:start="19:21" pos:end="19:28">0x030200</literal></expr>)</condition>

    <block pos:start="21:5" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:87">

        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:24">flipped_image</name></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <literal type="number" pos:start="23:28" pos:end="23:28">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:87"><expr pos:start="25:9" pos:end="25:86"><call pos:start="25:9" pos:end="25:86"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:86">(<argument pos:start="25:16" pos:end="25:20"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">avctx</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="25:37" pos:end="25:85"><expr pos:start="25:37" pos:end="25:85"><literal type="string" pos:start="25:37" pos:end="25:85">"Old (&lt;alpha3) Theora bitstream, flipped image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:38"><expr pos:start="31:5" pos:end="31:37"><name pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:12">width</name></name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:32"><name pos:start="31:16" pos:end="31:23">get_bits</name><argument_list pos:start="31:24" pos:end="31:32">(<argument pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><operator pos:start="31:25" pos:end="31:25">&amp;</operator><name pos:start="31:26" pos:end="31:27">gb</name></expr></argument>, <argument pos:start="31:30" pos:end="31:31"><expr pos:start="31:30" pos:end="31:31"><literal type="number" pos:start="31:30" pos:end="31:31">16</literal></expr></argument>)</argument_list></call> <operator pos:start="31:34" pos:end="31:35">&lt;&lt;</operator> <literal type="number" pos:start="31:37" pos:end="31:37">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:13">height</name></name> <operator pos:start="33:15" pos:end="33:15">=</operator> <call pos:start="33:17" pos:end="33:33"><name pos:start="33:17" pos:end="33:24">get_bits</name><argument_list pos:start="33:25" pos:end="33:33">(<argument pos:start="33:26" pos:end="33:28"><expr pos:start="33:26" pos:end="33:28"><operator pos:start="33:26" pos:end="33:26">&amp;</operator><name pos:start="33:27" pos:end="33:28">gb</name></expr></argument>, <argument pos:start="33:31" pos:end="33:32"><expr pos:start="33:31" pos:end="33:32"><literal type="number" pos:start="33:31" pos:end="33:32">16</literal></expr></argument>)</argument_list></call> <operator pos:start="33:35" pos:end="33:36">&lt;&lt;</operator> <literal type="number" pos:start="33:38" pos:end="33:38">4</literal></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if<condition pos:start="37:7" pos:end="37:60">(<expr pos:start="37:8" pos:end="37:59"><call pos:start="37:8" pos:end="37:59"><name pos:start="37:8" pos:end="37:31">avcodec_check_dimensions</name><argument_list pos:start="37:32" pos:end="37:59">(<argument pos:start="37:33" pos:end="37:37"><expr pos:start="37:33" pos:end="37:37"><name pos:start="37:33" pos:end="37:37">avctx</name></expr></argument>, <argument pos:start="37:40" pos:end="37:47"><expr pos:start="37:40" pos:end="37:47"><name pos:start="37:40" pos:end="37:47"><name pos:start="37:40" pos:end="37:40">s</name><operator pos:start="37:41" pos:end="37:42">-&gt;</operator><name pos:start="37:43" pos:end="37:47">width</name></name></expr></argument>, <argument pos:start="37:50" pos:end="37:58"><expr pos:start="37:50" pos:end="37:58"><name pos:start="37:50" pos:end="37:58"><name pos:start="37:50" pos:end="37:50">s</name><operator pos:start="37:51" pos:end="37:52">-&gt;</operator><name pos:start="37:53" pos:end="37:58">height</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="37:61" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:18">

        <expr_stmt pos:start="39:9" pos:end="39:89"><expr pos:start="39:9" pos:end="39:88"><call pos:start="39:9" pos:end="39:88"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:88">(<argument pos:start="39:16" pos:end="39:20"><expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:20">avctx</name></expr></argument>, <argument pos:start="39:23" pos:end="39:34"><expr pos:start="39:23" pos:end="39:34"><name pos:start="39:23" pos:end="39:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:37" pos:end="39:66"><expr pos:start="39:37" pos:end="39:66"><literal type="string" pos:start="39:37" pos:end="39:66">"Invalid dimensions (%dx%d)\n"</literal></expr></argument>, <argument pos:start="39:69" pos:end="39:76"><expr pos:start="39:69" pos:end="39:76"><name pos:start="39:69" pos:end="39:76"><name pos:start="39:69" pos:end="39:69">s</name><operator pos:start="39:70" pos:end="39:71">-&gt;</operator><name pos:start="39:72" pos:end="39:76">width</name></name></expr></argument>, <argument pos:start="39:79" pos:end="39:87"><expr pos:start="39:79" pos:end="39:87"><name pos:start="39:79" pos:end="39:87"><name pos:start="39:79" pos:end="39:79">s</name><operator pos:start="39:80" pos:end="39:81">-&gt;</operator><name pos:start="39:82" pos:end="39:87">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:31"><expr pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:16">width</name></name><operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:27"><name pos:start="41:19" pos:end="41:19">s</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:27">height</name></name><operator pos:start="41:28" pos:end="41:28">=</operator> <literal type="number" pos:start="41:30" pos:end="41:30">0</literal></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="79:5"><if pos:start="49:5" pos:end="69:5">if <condition pos:start="49:8" pos:end="49:30">(<expr pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:17">theora</name></name> <operator pos:start="49:19" pos:end="49:20">&gt;=</operator> <literal type="number" pos:start="49:22" pos:end="49:29">0x030400</literal></expr>)</condition>

    <block pos:start="51:5" pos:end="69:5">{<block_content pos:start="53:9" pos:end="67:27">

        <expr_stmt pos:start="53:9" pos:end="53:27"><expr pos:start="53:9" pos:end="53:26"><call pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:17">skip_bits</name><argument_list pos:start="53:18" pos:end="53:26">(<argument pos:start="53:19" pos:end="53:21"><expr pos:start="53:19" pos:end="53:21"><operator pos:start="53:19" pos:end="53:19">&amp;</operator><name pos:start="53:20" pos:end="53:21">gb</name></expr></argument>, <argument pos:start="53:24" pos:end="53:25"><expr pos:start="53:24" pos:end="53:25"><literal type="number" pos:start="53:24" pos:end="53:25">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="53:29" pos:end="53:72">/* total number of superblocks in a frame */</comment>

        <comment type="line" pos:start="55:9" pos:end="55:47">// fixme, the next field is 36bits long</comment>

        <expr_stmt pos:start="57:9" pos:end="57:27"><expr pos:start="57:9" pos:end="57:26"><call pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:17">skip_bits</name><argument_list pos:start="57:18" pos:end="57:26">(<argument pos:start="57:19" pos:end="57:21"><expr pos:start="57:19" pos:end="57:21"><operator pos:start="57:19" pos:end="57:19">&amp;</operator><name pos:start="57:20" pos:end="57:21">gb</name></expr></argument>, <argument pos:start="57:24" pos:end="57:25"><expr pos:start="57:24" pos:end="57:25"><literal type="number" pos:start="57:24" pos:end="57:25">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="57:29" pos:end="57:67">/* total number of blocks in a frame */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:26"><expr pos:start="59:9" pos:end="59:25"><call pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:17">skip_bits</name><argument_list pos:start="59:18" pos:end="59:25">(<argument pos:start="59:19" pos:end="59:21"><expr pos:start="59:19" pos:end="59:21"><operator pos:start="59:19" pos:end="59:19">&amp;</operator><name pos:start="59:20" pos:end="59:21">gb</name></expr></argument>, <argument pos:start="59:24" pos:end="59:24"><expr pos:start="59:24" pos:end="59:24"><literal type="number" pos:start="59:24" pos:end="59:24">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="59:28" pos:end="59:66">/* total number of blocks in a frame */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:27"><expr pos:start="61:9" pos:end="61:26"><call pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:17">skip_bits</name><argument_list pos:start="61:18" pos:end="61:26">(<argument pos:start="61:19" pos:end="61:21"><expr pos:start="61:19" pos:end="61:21"><operator pos:start="61:19" pos:end="61:19">&amp;</operator><name pos:start="61:20" pos:end="61:21">gb</name></expr></argument>, <argument pos:start="61:24" pos:end="61:25"><expr pos:start="61:24" pos:end="61:25"><literal type="number" pos:start="61:24" pos:end="61:25">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="61:29" pos:end="61:72">/* total number of macroblocks in a frame */</comment>



        <expr_stmt pos:start="65:9" pos:end="65:27"><expr pos:start="65:9" pos:end="65:26"><call pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:17">skip_bits</name><argument_list pos:start="65:18" pos:end="65:26">(<argument pos:start="65:19" pos:end="65:21"><expr pos:start="65:19" pos:end="65:21"><operator pos:start="65:19" pos:end="65:19">&amp;</operator><name pos:start="65:20" pos:end="65:21">gb</name></expr></argument>, <argument pos:start="65:24" pos:end="65:25"><expr pos:start="65:24" pos:end="65:25"><literal type="number" pos:start="65:24" pos:end="65:25">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="65:29" pos:end="65:45">/* frame width */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:27"><expr pos:start="67:9" pos:end="67:26"><call pos:start="67:9" pos:end="67:26"><name pos:start="67:9" pos:end="67:17">skip_bits</name><argument_list pos:start="67:18" pos:end="67:26">(<argument pos:start="67:19" pos:end="67:21"><expr pos:start="67:19" pos:end="67:21"><operator pos:start="67:19" pos:end="67:19">&amp;</operator><name pos:start="67:20" pos:end="67:21">gb</name></expr></argument>, <argument pos:start="67:24" pos:end="67:25"><expr pos:start="67:24" pos:end="67:25"><literal type="number" pos:start="67:24" pos:end="67:25">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="67:29" pos:end="67:46">/* frame height */</comment>

    </block_content>}</block></if>

    <else pos:start="71:5" pos:end="79:5">else

    <block pos:start="73:5" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:27">

        <expr_stmt pos:start="75:9" pos:end="75:27"><expr pos:start="75:9" pos:end="75:26"><call pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:17">skip_bits</name><argument_list pos:start="75:18" pos:end="75:26">(<argument pos:start="75:19" pos:end="75:21"><expr pos:start="75:19" pos:end="75:21"><operator pos:start="75:19" pos:end="75:19">&amp;</operator><name pos:start="75:20" pos:end="75:21">gb</name></expr></argument>, <argument pos:start="75:24" pos:end="75:25"><expr pos:start="75:24" pos:end="75:25"><literal type="number" pos:start="75:24" pos:end="75:25">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="75:29" pos:end="75:45">/* frame width */</comment>

        <expr_stmt pos:start="77:9" pos:end="77:27"><expr pos:start="77:9" pos:end="77:26"><call pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:17">skip_bits</name><argument_list pos:start="77:18" pos:end="77:26">(<argument pos:start="77:19" pos:end="77:21"><expr pos:start="77:19" pos:end="77:21"><operator pos:start="77:19" pos:end="77:19">&amp;</operator><name pos:start="77:20" pos:end="77:21">gb</name></expr></argument>, <argument pos:start="77:24" pos:end="77:25"><expr pos:start="77:24" pos:end="77:25"><literal type="number" pos:start="77:24" pos:end="77:25">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="77:29" pos:end="77:46">/* frame height */</comment>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:22"><expr pos:start="83:5" pos:end="83:21"><call pos:start="83:5" pos:end="83:21"><name pos:start="83:5" pos:end="83:13">skip_bits</name><argument_list pos:start="83:14" pos:end="83:21">(<argument pos:start="83:15" pos:end="83:17"><expr pos:start="83:15" pos:end="83:17"><operator pos:start="83:15" pos:end="83:15">&amp;</operator><name pos:start="83:16" pos:end="83:17">gb</name></expr></argument>, <argument pos:start="83:20" pos:end="83:20"><expr pos:start="83:20" pos:end="83:20"><literal type="number" pos:start="83:20" pos:end="83:20">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="83:24" pos:end="83:37">/* offset x */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:22"><expr pos:start="85:5" pos:end="85:21"><call pos:start="85:5" pos:end="85:21"><name pos:start="85:5" pos:end="85:13">skip_bits</name><argument_list pos:start="85:14" pos:end="85:21">(<argument pos:start="85:15" pos:end="85:17"><expr pos:start="85:15" pos:end="85:17"><operator pos:start="85:15" pos:end="85:15">&amp;</operator><name pos:start="85:16" pos:end="85:17">gb</name></expr></argument>, <argument pos:start="85:20" pos:end="85:20"><expr pos:start="85:20" pos:end="85:20"><literal type="number" pos:start="85:20" pos:end="85:20">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="85:24" pos:end="85:37">/* offset y */</comment>



    <expr_stmt pos:start="89:5" pos:end="89:23"><expr pos:start="89:5" pos:end="89:22"><call pos:start="89:5" pos:end="89:22"><name pos:start="89:5" pos:end="89:13">skip_bits</name><argument_list pos:start="89:14" pos:end="89:22">(<argument pos:start="89:15" pos:end="89:17"><expr pos:start="89:15" pos:end="89:17"><operator pos:start="89:15" pos:end="89:15">&amp;</operator><name pos:start="89:16" pos:end="89:17">gb</name></expr></argument>, <argument pos:start="89:20" pos:end="89:21"><expr pos:start="89:20" pos:end="89:21"><literal type="number" pos:start="89:20" pos:end="89:21">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="89:25" pos:end="89:43">/* fps numerator */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:23"><expr pos:start="91:5" pos:end="91:22"><call pos:start="91:5" pos:end="91:22"><name pos:start="91:5" pos:end="91:13">skip_bits</name><argument_list pos:start="91:14" pos:end="91:22">(<argument pos:start="91:15" pos:end="91:17"><expr pos:start="91:15" pos:end="91:17"><operator pos:start="91:15" pos:end="91:15">&amp;</operator><name pos:start="91:16" pos:end="91:17">gb</name></expr></argument>, <argument pos:start="91:20" pos:end="91:21"><expr pos:start="91:20" pos:end="91:21"><literal type="number" pos:start="91:20" pos:end="91:21">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="91:25" pos:end="91:45">/* fps denumerator */</comment>

    <expr_stmt pos:start="93:5" pos:end="93:23"><expr pos:start="93:5" pos:end="93:22"><call pos:start="93:5" pos:end="93:22"><name pos:start="93:5" pos:end="93:13">skip_bits</name><argument_list pos:start="93:14" pos:end="93:22">(<argument pos:start="93:15" pos:end="93:17"><expr pos:start="93:15" pos:end="93:17"><operator pos:start="93:15" pos:end="93:15">&amp;</operator><name pos:start="93:16" pos:end="93:17">gb</name></expr></argument>, <argument pos:start="93:20" pos:end="93:21"><expr pos:start="93:20" pos:end="93:21"><literal type="number" pos:start="93:20" pos:end="93:21">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="93:25" pos:end="93:46">/* aspect numerator */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:23"><expr pos:start="95:5" pos:end="95:22"><call pos:start="95:5" pos:end="95:22"><name pos:start="95:5" pos:end="95:13">skip_bits</name><argument_list pos:start="95:14" pos:end="95:22">(<argument pos:start="95:15" pos:end="95:17"><expr pos:start="95:15" pos:end="95:17"><operator pos:start="95:15" pos:end="95:15">&amp;</operator><name pos:start="95:16" pos:end="95:17">gb</name></expr></argument>, <argument pos:start="95:20" pos:end="95:21"><expr pos:start="95:20" pos:end="95:21"><literal type="number" pos:start="95:20" pos:end="95:21">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="95:25" pos:end="95:48">/* aspect denumerator */</comment>



    <if_stmt pos:start="99:5" pos:end="101:26"><if pos:start="99:5" pos:end="101:26">if <condition pos:start="99:8" pos:end="99:29">(<expr pos:start="99:9" pos:end="99:28"><name pos:start="99:9" pos:end="99:17"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:17">theora</name></name> <operator pos:start="99:19" pos:end="99:19">&lt;</operator> <literal type="number" pos:start="99:21" pos:end="99:28">0x030200</literal></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:26"><block_content pos:start="101:9" pos:end="101:26">

        <expr_stmt pos:start="101:9" pos:end="101:26"><expr pos:start="101:9" pos:end="101:25"><call pos:start="101:9" pos:end="101:25"><name pos:start="101:9" pos:end="101:17">skip_bits</name><argument_list pos:start="101:18" pos:end="101:25">(<argument pos:start="101:19" pos:end="101:21"><expr pos:start="101:19" pos:end="101:21"><operator pos:start="101:19" pos:end="101:19">&amp;</operator><name pos:start="101:20" pos:end="101:21">gb</name></expr></argument>, <argument pos:start="101:24" pos:end="101:24"><expr pos:start="101:24" pos:end="101:24"><literal type="number" pos:start="101:24" pos:end="101:24">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="101:28" pos:end="101:57">/* keyframe frequency force */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:22"><expr pos:start="103:5" pos:end="103:21"><call pos:start="103:5" pos:end="103:21"><name pos:start="103:5" pos:end="103:13">skip_bits</name><argument_list pos:start="103:14" pos:end="103:21">(<argument pos:start="103:15" pos:end="103:17"><expr pos:start="103:15" pos:end="103:17"><operator pos:start="103:15" pos:end="103:15">&amp;</operator><name pos:start="103:16" pos:end="103:17">gb</name></expr></argument>, <argument pos:start="103:20" pos:end="103:20"><expr pos:start="103:20" pos:end="103:20"><literal type="number" pos:start="103:20" pos:end="103:20">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="103:24" pos:end="103:39">/* colorspace */</comment>

    <if_stmt pos:start="105:5" pos:end="107:26"><if pos:start="105:5" pos:end="107:26">if <condition pos:start="105:8" pos:end="105:30">(<expr pos:start="105:9" pos:end="105:29"><name pos:start="105:9" pos:end="105:17"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:17">theora</name></name> <operator pos:start="105:19" pos:end="105:20">&gt;=</operator> <literal type="number" pos:start="105:22" pos:end="105:29">0x030400</literal></expr>)</condition><block type="pseudo" pos:start="107:9" pos:end="107:26"><block_content pos:start="107:9" pos:end="107:26">

        <expr_stmt pos:start="107:9" pos:end="107:26"><expr pos:start="107:9" pos:end="107:25"><call pos:start="107:9" pos:end="107:25"><name pos:start="107:9" pos:end="107:17">skip_bits</name><argument_list pos:start="107:18" pos:end="107:25">(<argument pos:start="107:19" pos:end="107:21"><expr pos:start="107:19" pos:end="107:21"><operator pos:start="107:19" pos:end="107:19">&amp;</operator><name pos:start="107:20" pos:end="107:21">gb</name></expr></argument>, <argument pos:start="107:24" pos:end="107:24"><expr pos:start="107:24" pos:end="107:24"><literal type="number" pos:start="107:24" pos:end="107:24">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="107:28" pos:end="107:62">/* pixel format: 420,res,422,444 */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:23"><expr pos:start="109:5" pos:end="109:22"><call pos:start="109:5" pos:end="109:22"><name pos:start="109:5" pos:end="109:13">skip_bits</name><argument_list pos:start="109:14" pos:end="109:22">(<argument pos:start="109:15" pos:end="109:17"><expr pos:start="109:15" pos:end="109:17"><operator pos:start="109:15" pos:end="109:15">&amp;</operator><name pos:start="109:16" pos:end="109:17">gb</name></expr></argument>, <argument pos:start="109:20" pos:end="109:21"><expr pos:start="109:20" pos:end="109:21"><literal type="number" pos:start="109:20" pos:end="109:21">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="109:25" pos:end="109:37">/* bitrate */</comment>



    <expr_stmt pos:start="113:5" pos:end="113:22"><expr pos:start="113:5" pos:end="113:21"><call pos:start="113:5" pos:end="113:21"><name pos:start="113:5" pos:end="113:13">skip_bits</name><argument_list pos:start="113:14" pos:end="113:21">(<argument pos:start="113:15" pos:end="113:17"><expr pos:start="113:15" pos:end="113:17"><operator pos:start="113:15" pos:end="113:15">&amp;</operator><name pos:start="113:16" pos:end="113:17">gb</name></expr></argument>, <argument pos:start="113:20" pos:end="113:20"><expr pos:start="113:20" pos:end="113:20"><literal type="number" pos:start="113:20" pos:end="113:20">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="113:24" pos:end="113:41">/* quality hint */</comment>



    <if_stmt pos:start="117:5" pos:end="129:5"><if pos:start="117:5" pos:end="129:5">if <condition pos:start="117:8" pos:end="117:30">(<expr pos:start="117:9" pos:end="117:29"><name pos:start="117:9" pos:end="117:17"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:17">theora</name></name> <operator pos:start="117:19" pos:end="117:20">&gt;=</operator> <literal type="number" pos:start="117:22" pos:end="117:29">0x030200</literal></expr>)</condition>

    <block pos:start="119:5" pos:end="129:5">{<block_content pos:start="121:9" pos:end="127:30">

        <expr_stmt pos:start="121:9" pos:end="121:26"><expr pos:start="121:9" pos:end="121:25"><call pos:start="121:9" pos:end="121:25"><name pos:start="121:9" pos:end="121:17">skip_bits</name><argument_list pos:start="121:18" pos:end="121:25">(<argument pos:start="121:19" pos:end="121:21"><expr pos:start="121:19" pos:end="121:21"><operator pos:start="121:19" pos:end="121:19">&amp;</operator><name pos:start="121:20" pos:end="121:21">gb</name></expr></argument>, <argument pos:start="121:24" pos:end="121:24"><expr pos:start="121:24" pos:end="121:24"><literal type="number" pos:start="121:24" pos:end="121:24">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="121:28" pos:end="121:57">/* keyframe frequency force */</comment>



        <if_stmt pos:start="125:9" pos:end="127:30"><if pos:start="125:9" pos:end="127:30">if <condition pos:start="125:12" pos:end="125:33">(<expr pos:start="125:13" pos:end="125:32"><name pos:start="125:13" pos:end="125:21"><name pos:start="125:13" pos:end="125:13">s</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:21">theora</name></name> <operator pos:start="125:23" pos:end="125:23">&lt;</operator> <literal type="number" pos:start="125:25" pos:end="125:32">0x030400</literal></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:30"><block_content pos:start="127:13" pos:end="127:30">

            <expr_stmt pos:start="127:13" pos:end="127:30"><expr pos:start="127:13" pos:end="127:29"><call pos:start="127:13" pos:end="127:29"><name pos:start="127:13" pos:end="127:21">skip_bits</name><argument_list pos:start="127:22" pos:end="127:29">(<argument pos:start="127:23" pos:end="127:25"><expr pos:start="127:23" pos:end="127:25"><operator pos:start="127:23" pos:end="127:23">&amp;</operator><name pos:start="127:24" pos:end="127:25">gb</name></expr></argument>, <argument pos:start="127:28" pos:end="127:28"><expr pos:start="127:28" pos:end="127:28"><literal type="number" pos:start="127:28" pos:end="127:28">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="127:32" pos:end="127:47">/* spare bits */</comment>

    </block_content>}</block></if></if_stmt>



<comment type="line" pos:start="133:1" pos:end="133:26">//    align_get_bits(&amp;gb);</comment>



    <expr_stmt pos:start="137:5" pos:end="137:28"><expr pos:start="137:5" pos:end="137:27"><name pos:start="137:5" pos:end="137:16"><name pos:start="137:5" pos:end="137:9">avctx</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:16">width</name></name> <operator pos:start="137:18" pos:end="137:18">=</operator> <name pos:start="137:20" pos:end="137:27"><name pos:start="137:20" pos:end="137:20">s</name><operator pos:start="137:21" pos:end="137:22">-&gt;</operator><name pos:start="137:23" pos:end="137:27">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:30"><expr pos:start="139:5" pos:end="139:29"><name pos:start="139:5" pos:end="139:17"><name pos:start="139:5" pos:end="139:9">avctx</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:17">height</name></name> <operator pos:start="139:19" pos:end="139:19">=</operator> <name pos:start="139:21" pos:end="139:29"><name pos:start="139:21" pos:end="139:21">s</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:29">height</name></name></expr>;</expr_stmt>



    <return pos:start="143:5" pos:end="143:13">return <expr pos:start="143:12" pos:end="143:12"><literal type="number" pos:start="143:12" pos:end="143:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
