<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1554.c" pos:tabs="8"><function pos:start="1:1" pos:end="281:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">cpu_sparc_handle_mmu_fault</name> <parameter_list pos:start="1:32" pos:end="3:58">(<parameter pos:start="1:33" pos:end="1:45"><decl pos:start="1:33" pos:end="1:45"><type pos:start="1:33" pos:end="1:45"><name pos:start="1:33" pos:end="1:40">CPUState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:63"><decl pos:start="1:48" pos:end="1:63"><type pos:start="1:48" pos:end="1:63"><name pos:start="1:48" pos:end="1:55">uint32_t</name></type> <name pos:start="1:57" pos:end="1:63">address</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:71"><decl pos:start="1:66" pos:end="1:71"><type pos:start="1:66" pos:end="1:71"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:71">rw</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:41"><decl pos:start="3:31" pos:end="3:41"><type pos:start="3:31" pos:end="3:41"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:41">is_user</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:57"><decl pos:start="3:44" pos:end="3:57"><type pos:start="3:44" pos:end="3:57"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:57">is_softmmu</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="281:1">{<block_content pos:start="7:5" pos:end="279:22">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">exception</name> <init pos:start="7:19" pos:end="7:21">= <expr pos:start="7:21" pos:end="7:21"><literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:56"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">access_type</name></decl>, <decl pos:start="9:22" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:33">access_perms</name> <init pos:start="9:35" pos:end="9:37">= <expr pos:start="9:37" pos:end="9:37"><literal type="number" pos:start="9:37" pos:end="9:37">0</literal></expr></init></decl>, <decl pos:start="9:40" pos:end="9:55"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:40" pos:end="9:51">access_index</name> <init pos:start="9:53" pos:end="9:55">= <expr pos:start="9:55" pos:end="9:55"><literal type="number" pos:start="9:55" pos:end="9:55">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:20">pde_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:16">pde</name></decl>, <decl pos:start="13:19" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:19" pos:end="13:27">virt_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:48"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">error_code</name> <init pos:start="15:20" pos:end="15:22">= <expr pos:start="15:22" pos:end="15:22"><literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr></init></decl>, <decl pos:start="15:25" pos:end="15:32"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:25" pos:end="15:32">is_dirty</name></decl>, <decl pos:start="15:35" pos:end="15:38"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:35" pos:end="15:38">prot</name></decl>, <decl pos:start="15:41" pos:end="15:47"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:41" pos:end="15:43">ret</name> <init pos:start="15:45" pos:end="15:47">= <expr pos:start="15:47" pos:end="15:47"><literal type="number" pos:start="15:47" pos:end="15:47">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:44"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:17">long</name></type> <name pos:start="17:19" pos:end="17:23">paddr</name></decl>, <decl pos:start="17:26" pos:end="17:30"><type ref="prev" pos:start="17:5" pos:end="17:17"/><name pos:start="17:26" pos:end="17:30">vaddr</name></decl>, <decl pos:start="17:33" pos:end="17:43"><type ref="prev" pos:start="17:5" pos:end="17:17"/><name pos:start="17:33" pos:end="17:43">page_offset</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:35"><expr pos:start="21:5" pos:end="21:34"><name pos:start="21:5" pos:end="21:15">access_type</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <name pos:start="21:19" pos:end="21:34"><name pos:start="21:19" pos:end="21:21">env</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:34">access_type</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:28">(<expr pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:11">env</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:27">user_mode_only</name></name></expr>)</condition> <block pos:start="23:30" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:22">

        <comment type="block" pos:start="25:9" pos:end="25:38">/* user mode only emulation */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:17"><expr pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <operator pos:start="27:15" pos:end="27:15">-</operator><literal type="number" pos:start="27:16" pos:end="27:16">2</literal></expr>;</expr_stmt>

        <goto pos:start="29:9" pos:end="29:22">goto <name pos:start="29:14" pos:end="29:21">do_fault</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:43"><expr pos:start="35:5" pos:end="35:42"><name pos:start="35:5" pos:end="35:13">virt_addr</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:23">address</name> <operator pos:start="35:25" pos:end="35:25">&amp;</operator> <name pos:start="35:27" pos:end="35:42">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="47:5"><if pos:start="37:5" pos:end="47:5">if <condition pos:start="37:8" pos:end="37:39">(<expr pos:start="37:9" pos:end="37:38"><operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:24"><name pos:start="37:10" pos:end="37:12">env</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:21">mmuregs</name><index pos:start="37:22" pos:end="37:24">[<expr pos:start="37:23" pos:end="37:23"><literal type="number" pos:start="37:23" pos:end="37:23">0</literal></expr>]</index></name> <operator pos:start="37:26" pos:end="37:26">&amp;</operator> <name pos:start="37:28" pos:end="37:32">MMU_E</name><operator pos:start="37:33" pos:end="37:33">)</operator> <operator pos:start="37:35" pos:end="37:36">==</operator> <literal type="number" pos:start="37:38" pos:end="37:38">0</literal></expr>)</condition> <block pos:start="37:41" pos:end="47:5">{<block_content pos:start="39:9" pos:end="45:24"> <comment type="block" pos:start="37:43" pos:end="37:60">/* MMU disabled */</comment>

	<expr_stmt pos:start="39:9" pos:end="39:24"><expr pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:13">paddr</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <name pos:start="39:17" pos:end="39:23">address</name></expr>;</expr_stmt>

	<expr_stmt pos:start="41:9" pos:end="41:55"><expr pos:start="41:9" pos:end="41:54"><name pos:start="41:9" pos:end="41:19">page_offset</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:29">address</name> <operator pos:start="41:31" pos:end="41:31">&amp;</operator> <operator pos:start="41:33" pos:end="41:33">(</operator><name pos:start="41:34" pos:end="41:49">TARGET_PAGE_SIZE</name> <operator pos:start="41:51" pos:end="41:51">-</operator> <literal type="number" pos:start="41:53" pos:end="41:53">1</literal><operator pos:start="41:54" pos:end="41:54">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:38"><expr pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:12">prot</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <name pos:start="43:16" pos:end="43:24">PAGE_READ</name> <operator pos:start="43:26" pos:end="43:26">|</operator> <name pos:start="43:28" pos:end="43:37">PAGE_WRITE</name></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:24">goto <name pos:start="45:14" pos:end="45:23">do_mapping</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:68">/* SPARC reference MMU table walk: Context table-&gt;L1-&gt;L2-&gt;PTE */</comment>

    <comment type="block" pos:start="53:5" pos:end="53:39">/* Context base + context number */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:78"><expr pos:start="55:5" pos:end="55:77"><name pos:start="55:5" pos:end="55:11">pde_ptr</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <name pos:start="55:15" pos:end="55:27">phys_ram_base</name> <operator pos:start="55:29" pos:end="55:29">+</operator> <operator pos:start="55:31" pos:end="55:31">(</operator><name pos:start="55:32" pos:end="55:46"><name pos:start="55:32" pos:end="55:34">env</name><operator pos:start="55:35" pos:end="55:36">-&gt;</operator><name pos:start="55:37" pos:end="55:43">mmuregs</name><index pos:start="55:44" pos:end="55:46">[<expr pos:start="55:45" pos:end="55:45"><literal type="number" pos:start="55:45" pos:end="55:45">1</literal></expr>]</index></name> <operator pos:start="55:48" pos:end="55:49">&lt;&lt;</operator> <literal type="number" pos:start="55:51" pos:end="55:51">4</literal><operator pos:start="55:52" pos:end="55:52">)</operator> <operator pos:start="55:54" pos:end="55:54">+</operator> <operator pos:start="55:56" pos:end="55:56">(</operator><name pos:start="55:57" pos:end="55:71"><name pos:start="55:57" pos:end="55:59">env</name><operator pos:start="55:60" pos:end="55:61">-&gt;</operator><name pos:start="55:62" pos:end="55:68">mmuregs</name><index pos:start="55:69" pos:end="55:71">[<expr pos:start="55:70" pos:end="55:70"><literal type="number" pos:start="55:70" pos:end="55:70">2</literal></expr>]</index></name> <operator pos:start="55:73" pos:end="55:74">&lt;&lt;</operator> <literal type="number" pos:start="55:76" pos:end="55:76">4</literal><operator pos:start="55:77" pos:end="55:77">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:34"><expr pos:start="57:5" pos:end="57:33"><name pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:7">env</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:20">access_type</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:33">ACCESS_MMU</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:27"><expr pos:start="59:5" pos:end="59:26"><name pos:start="59:5" pos:end="59:7">pde</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <call pos:start="59:11" pos:end="59:26"><name pos:start="59:11" pos:end="59:17">ldl_raw</name><argument_list pos:start="59:18" pos:end="59:26">(<argument pos:start="59:19" pos:end="59:25"><expr pos:start="59:19" pos:end="59:25"><name pos:start="59:19" pos:end="59:25">pde_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:17">/* Ctx pde */</comment>

    <switch pos:start="65:5" pos:end="177:5">switch <condition pos:start="65:12" pos:end="65:37">(<expr pos:start="65:13" pos:end="65:36"><name pos:start="65:13" pos:end="65:15">pde</name> <operator pos:start="65:17" pos:end="65:17">&amp;</operator> <name pos:start="65:19" pos:end="65:36">PTE_ENTRYTYPE_MASK</name></expr>)</condition> <block pos:start="65:39" pos:end="177:5">{<block_content pos:start="67:5" pos:end="175:9">

    <case pos:start="67:5" pos:end="67:11">case <expr pos:start="67:10" pos:end="67:10"><literal type="number" pos:start="67:10" pos:end="67:10">0</literal></expr>:</case> <comment type="block" pos:start="67:13" pos:end="67:25">/* Invalid */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:23"><expr pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:18">error_code</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <literal type="number" pos:start="69:22" pos:end="69:22">1</literal></expr>;</expr_stmt>

        <goto pos:start="71:9" pos:end="71:22">goto <name pos:start="71:14" pos:end="71:21">do_fault</name>;</goto>

    <case pos:start="73:5" pos:end="73:11">case <expr pos:start="73:10" pos:end="73:10"><literal type="number" pos:start="73:10" pos:end="73:10">2</literal></expr>:</case> <comment type="block" pos:start="73:13" pos:end="73:47">/* PTE, maybe should not happen? */</comment>

    <case pos:start="75:5" pos:end="75:11">case <expr pos:start="75:10" pos:end="75:10"><literal type="number" pos:start="75:10" pos:end="75:10">3</literal></expr>:</case> <comment type="block" pos:start="75:13" pos:end="75:26">/* Reserved */</comment>

        <expr_stmt pos:start="77:9" pos:end="77:23"><expr pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:18">error_code</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <literal type="number" pos:start="77:22" pos:end="77:22">4</literal></expr>;</expr_stmt>

        <goto pos:start="79:9" pos:end="79:22">goto <name pos:start="79:14" pos:end="79:21">do_fault</name>;</goto>

    <case pos:start="81:5" pos:end="81:11">case <expr pos:start="81:10" pos:end="81:10"><literal type="number" pos:start="81:10" pos:end="81:10">1</literal></expr>:</case> <comment type="block" pos:start="81:13" pos:end="81:24">/* L1 PDE */</comment>

	<expr_stmt pos:start="83:9" pos:end="83:77"><expr pos:start="83:9" pos:end="83:76"><name pos:start="83:9" pos:end="83:15">pde_ptr</name> <operator pos:start="83:17" pos:end="83:17">=</operator> <name pos:start="83:19" pos:end="83:31">phys_ram_base</name> <operator pos:start="83:33" pos:end="83:33">+</operator> <operator pos:start="83:35" pos:end="83:35">(</operator><operator pos:start="83:36" pos:end="83:36">(</operator><name pos:start="83:37" pos:end="83:43">address</name> <operator pos:start="83:45" pos:end="83:46">&gt;&gt;</operator> <literal type="number" pos:start="83:48" pos:end="83:49">22</literal><operator pos:start="83:50" pos:end="83:50">)</operator> <operator pos:start="83:52" pos:end="83:52">&amp;</operator> <operator pos:start="83:54" pos:end="83:54">~</operator><literal type="number" pos:start="83:55" pos:end="83:55">3</literal><operator pos:start="83:56" pos:end="83:56">)</operator> <operator pos:start="83:58" pos:end="83:58">+</operator> <operator pos:start="83:60" pos:end="83:60">(</operator><operator pos:start="83:61" pos:end="83:61">(</operator><name pos:start="83:62" pos:end="83:64">pde</name> <operator pos:start="83:66" pos:end="83:66">&amp;</operator> <operator pos:start="83:68" pos:end="83:68">~</operator><literal type="number" pos:start="83:69" pos:end="83:69">3</literal><operator pos:start="83:70" pos:end="83:70">)</operator> <operator pos:start="83:72" pos:end="83:73">&lt;&lt;</operator> <literal type="number" pos:start="83:75" pos:end="83:75">4</literal><operator pos:start="83:76" pos:end="83:76">)</operator></expr>;</expr_stmt>

	<expr_stmt pos:start="85:9" pos:end="85:31"><expr pos:start="85:9" pos:end="85:30"><name pos:start="85:9" pos:end="85:11">pde</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <call pos:start="85:15" pos:end="85:30"><name pos:start="85:15" pos:end="85:21">ldl_raw</name><argument_list pos:start="85:22" pos:end="85:30">(<argument pos:start="85:23" pos:end="85:29"><expr pos:start="85:23" pos:end="85:29"><name pos:start="85:23" pos:end="85:29">pde_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<switch pos:start="89:9" pos:end="175:9">switch <condition pos:start="89:16" pos:end="89:41">(<expr pos:start="89:17" pos:end="89:40"><name pos:start="89:17" pos:end="89:19">pde</name> <operator pos:start="89:21" pos:end="89:21">&amp;</operator> <name pos:start="89:23" pos:end="89:40">PTE_ENTRYTYPE_MASK</name></expr>)</condition> <block pos:start="89:43" pos:end="175:9">{<block_content pos:start="91:9" pos:end="173:45">

	<case pos:start="91:9" pos:end="91:15">case <expr pos:start="91:14" pos:end="91:14"><literal type="number" pos:start="91:14" pos:end="91:14">0</literal></expr>:</case> <comment type="block" pos:start="91:17" pos:end="91:29">/* Invalid */</comment>

	    <expr_stmt pos:start="93:13" pos:end="93:27"><expr pos:start="93:13" pos:end="93:26"><name pos:start="93:13" pos:end="93:22">error_code</name> <operator pos:start="93:24" pos:end="93:24">=</operator> <literal type="number" pos:start="93:26" pos:end="93:26">1</literal></expr>;</expr_stmt>

	    <goto pos:start="95:13" pos:end="95:26">goto <name pos:start="95:18" pos:end="95:25">do_fault</name>;</goto>

	<case pos:start="97:9" pos:end="97:15">case <expr pos:start="97:14" pos:end="97:14"><literal type="number" pos:start="97:14" pos:end="97:14">3</literal></expr>:</case> <comment type="block" pos:start="97:17" pos:end="97:30">/* Reserved */</comment>

	    <expr_stmt pos:start="99:13" pos:end="99:27"><expr pos:start="99:13" pos:end="99:26"><name pos:start="99:13" pos:end="99:22">error_code</name> <operator pos:start="99:24" pos:end="99:24">=</operator> <literal type="number" pos:start="99:26" pos:end="99:26">4</literal></expr>;</expr_stmt>

	    <goto pos:start="101:13" pos:end="101:26">goto <name pos:start="101:18" pos:end="101:25">do_fault</name>;</goto>

	<case pos:start="103:9" pos:end="103:15">case <expr pos:start="103:14" pos:end="103:14"><literal type="number" pos:start="103:14" pos:end="103:14">1</literal></expr>:</case> <comment type="block" pos:start="103:17" pos:end="103:28">/* L2 PDE */</comment>

	    <expr_stmt pos:start="105:13" pos:end="105:87"><expr pos:start="105:13" pos:end="105:86"><name pos:start="105:13" pos:end="105:19">pde_ptr</name> <operator pos:start="105:21" pos:end="105:21">=</operator> <name pos:start="105:23" pos:end="105:35">phys_ram_base</name> <operator pos:start="105:37" pos:end="105:37">+</operator> <operator pos:start="105:39" pos:end="105:39">(</operator><operator pos:start="105:40" pos:end="105:40">(</operator><name pos:start="105:41" pos:end="105:47">address</name> <operator pos:start="105:49" pos:end="105:49">&amp;</operator> <literal type="number" pos:start="105:51" pos:end="105:58">0xfc0000</literal><operator pos:start="105:59" pos:end="105:59">)</operator> <operator pos:start="105:61" pos:end="105:62">&gt;&gt;</operator> <literal type="number" pos:start="105:64" pos:end="105:65">16</literal><operator pos:start="105:66" pos:end="105:66">)</operator> <operator pos:start="105:68" pos:end="105:68">+</operator> <operator pos:start="105:70" pos:end="105:70">(</operator><operator pos:start="105:71" pos:end="105:71">(</operator><name pos:start="105:72" pos:end="105:74">pde</name> <operator pos:start="105:76" pos:end="105:76">&amp;</operator> <operator pos:start="105:78" pos:end="105:78">~</operator><literal type="number" pos:start="105:79" pos:end="105:79">3</literal><operator pos:start="105:80" pos:end="105:80">)</operator> <operator pos:start="105:82" pos:end="105:83">&lt;&lt;</operator> <literal type="number" pos:start="105:85" pos:end="105:85">4</literal><operator pos:start="105:86" pos:end="105:86">)</operator></expr>;</expr_stmt>

	    <expr_stmt pos:start="107:13" pos:end="107:35"><expr pos:start="107:13" pos:end="107:34"><name pos:start="107:13" pos:end="107:15">pde</name> <operator pos:start="107:17" pos:end="107:17">=</operator> <call pos:start="107:19" pos:end="107:34"><name pos:start="107:19" pos:end="107:25">ldl_raw</name><argument_list pos:start="107:26" pos:end="107:34">(<argument pos:start="107:27" pos:end="107:33"><expr pos:start="107:27" pos:end="107:33"><name pos:start="107:27" pos:end="107:33">pde_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	    <switch pos:start="111:13" pos:end="165:13">switch <condition pos:start="111:20" pos:end="111:45">(<expr pos:start="111:21" pos:end="111:44"><name pos:start="111:21" pos:end="111:23">pde</name> <operator pos:start="111:25" pos:end="111:25">&amp;</operator> <name pos:start="111:27" pos:end="111:44">PTE_ENTRYTYPE_MASK</name></expr>)</condition> <block pos:start="111:47" pos:end="165:13">{<block_content pos:start="113:13" pos:end="163:48">

	    <case pos:start="113:13" pos:end="113:19">case <expr pos:start="113:18" pos:end="113:18"><literal type="number" pos:start="113:18" pos:end="113:18">0</literal></expr>:</case> <comment type="block" pos:start="113:21" pos:end="113:33">/* Invalid */</comment>

		<expr_stmt pos:start="115:17" pos:end="115:31"><expr pos:start="115:17" pos:end="115:30"><name pos:start="115:17" pos:end="115:26">error_code</name> <operator pos:start="115:28" pos:end="115:28">=</operator> <literal type="number" pos:start="115:30" pos:end="115:30">1</literal></expr>;</expr_stmt>

		<goto pos:start="117:17" pos:end="117:30">goto <name pos:start="117:22" pos:end="117:29">do_fault</name>;</goto>

	    <case pos:start="119:13" pos:end="119:19">case <expr pos:start="119:18" pos:end="119:18"><literal type="number" pos:start="119:18" pos:end="119:18">3</literal></expr>:</case> <comment type="block" pos:start="119:21" pos:end="119:34">/* Reserved */</comment>

		<expr_stmt pos:start="121:17" pos:end="121:31"><expr pos:start="121:17" pos:end="121:30"><name pos:start="121:17" pos:end="121:26">error_code</name> <operator pos:start="121:28" pos:end="121:28">=</operator> <literal type="number" pos:start="121:30" pos:end="121:30">4</literal></expr>;</expr_stmt>

		<goto pos:start="123:17" pos:end="123:30">goto <name pos:start="123:22" pos:end="123:29">do_fault</name>;</goto>

	    <case pos:start="125:13" pos:end="125:19">case <expr pos:start="125:18" pos:end="125:18"><literal type="number" pos:start="125:18" pos:end="125:18">1</literal></expr>:</case> <comment type="block" pos:start="125:21" pos:end="125:32">/* L3 PDE */</comment>

		<expr_stmt pos:start="127:17" pos:end="127:90"><expr pos:start="127:17" pos:end="127:89"><name pos:start="127:17" pos:end="127:23">pde_ptr</name> <operator pos:start="127:25" pos:end="127:25">=</operator> <name pos:start="127:27" pos:end="127:39">phys_ram_base</name> <operator pos:start="127:41" pos:end="127:41">+</operator> <operator pos:start="127:43" pos:end="127:43">(</operator><operator pos:start="127:44" pos:end="127:44">(</operator><name pos:start="127:45" pos:end="127:51">address</name> <operator pos:start="127:53" pos:end="127:53">&amp;</operator> <literal type="number" pos:start="127:55" pos:end="127:61">0x3f000</literal><operator pos:start="127:62" pos:end="127:62">)</operator> <operator pos:start="127:64" pos:end="127:65">&gt;&gt;</operator> <literal type="number" pos:start="127:67" pos:end="127:68">10</literal><operator pos:start="127:69" pos:end="127:69">)</operator> <operator pos:start="127:71" pos:end="127:71">+</operator> <operator pos:start="127:73" pos:end="127:73">(</operator><operator pos:start="127:74" pos:end="127:74">(</operator><name pos:start="127:75" pos:end="127:77">pde</name> <operator pos:start="127:79" pos:end="127:79">&amp;</operator> <operator pos:start="127:81" pos:end="127:81">~</operator><literal type="number" pos:start="127:82" pos:end="127:82">3</literal><operator pos:start="127:83" pos:end="127:83">)</operator> <operator pos:start="127:85" pos:end="127:86">&lt;&lt;</operator> <literal type="number" pos:start="127:88" pos:end="127:88">4</literal><operator pos:start="127:89" pos:end="127:89">)</operator></expr>;</expr_stmt>

		<expr_stmt pos:start="129:17" pos:end="129:39"><expr pos:start="129:17" pos:end="129:38"><name pos:start="129:17" pos:end="129:19">pde</name> <operator pos:start="129:21" pos:end="129:21">=</operator> <call pos:start="129:23" pos:end="129:38"><name pos:start="129:23" pos:end="129:29">ldl_raw</name><argument_list pos:start="129:30" pos:end="129:38">(<argument pos:start="129:31" pos:end="129:37"><expr pos:start="129:31" pos:end="129:37"><name pos:start="129:31" pos:end="129:37">pde_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



		<switch pos:start="133:17" pos:end="155:17">switch <condition pos:start="133:24" pos:end="133:49">(<expr pos:start="133:25" pos:end="133:48"><name pos:start="133:25" pos:end="133:27">pde</name> <operator pos:start="133:29" pos:end="133:29">&amp;</operator> <name pos:start="133:31" pos:end="133:48">PTE_ENTRYTYPE_MASK</name></expr>)</condition> <block pos:start="133:51" pos:end="155:17">{<block_content pos:start="135:17" pos:end="153:88">

		<case pos:start="135:17" pos:end="135:23">case <expr pos:start="135:22" pos:end="135:22"><literal type="number" pos:start="135:22" pos:end="135:22">0</literal></expr>:</case> <comment type="block" pos:start="135:25" pos:end="135:37">/* Invalid */</comment>

		    <expr_stmt pos:start="137:21" pos:end="137:35"><expr pos:start="137:21" pos:end="137:34"><name pos:start="137:21" pos:end="137:30">error_code</name> <operator pos:start="137:32" pos:end="137:32">=</operator> <literal type="number" pos:start="137:34" pos:end="137:34">1</literal></expr>;</expr_stmt>

		    <goto pos:start="139:21" pos:end="139:34">goto <name pos:start="139:26" pos:end="139:33">do_fault</name>;</goto>

		<case pos:start="141:17" pos:end="141:23">case <expr pos:start="141:22" pos:end="141:22"><literal type="number" pos:start="141:22" pos:end="141:22">1</literal></expr>:</case> <comment type="block" pos:start="141:25" pos:end="141:52">/* PDE, should not happen */</comment>

		<case pos:start="143:17" pos:end="143:23">case <expr pos:start="143:22" pos:end="143:22"><literal type="number" pos:start="143:22" pos:end="143:22">3</literal></expr>:</case> <comment type="block" pos:start="143:25" pos:end="143:38">/* Reserved */</comment>

		    <expr_stmt pos:start="145:21" pos:end="145:35"><expr pos:start="145:21" pos:end="145:34"><name pos:start="145:21" pos:end="145:30">error_code</name> <operator pos:start="145:32" pos:end="145:32">=</operator> <literal type="number" pos:start="145:34" pos:end="145:34">4</literal></expr>;</expr_stmt>

		    <goto pos:start="147:21" pos:end="147:34">goto <name pos:start="147:26" pos:end="147:33">do_fault</name>;</goto>

		<case pos:start="149:17" pos:end="149:23">case <expr pos:start="149:22" pos:end="149:22"><literal type="number" pos:start="149:22" pos:end="149:22">2</literal></expr>:</case> <comment type="block" pos:start="149:25" pos:end="149:36">/* L3 PTE */</comment>

		    <expr_stmt pos:start="151:21" pos:end="151:59"><expr pos:start="151:21" pos:end="151:58"><name pos:start="151:21" pos:end="151:29">virt_addr</name> <operator pos:start="151:31" pos:end="151:31">=</operator> <name pos:start="151:33" pos:end="151:39">address</name> <operator pos:start="151:41" pos:end="151:41">&amp;</operator> <name pos:start="151:43" pos:end="151:58">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

		    <expr_stmt pos:start="153:21" pos:end="153:88"><expr pos:start="153:21" pos:end="153:87"><name pos:start="153:21" pos:end="153:31">page_offset</name> <operator pos:start="153:33" pos:end="153:33">=</operator> <operator pos:start="153:35" pos:end="153:35">(</operator><name pos:start="153:36" pos:end="153:42">address</name> <operator pos:start="153:44" pos:end="153:44">&amp;</operator> <name pos:start="153:46" pos:end="153:61">TARGET_PAGE_MASK</name><operator pos:start="153:62" pos:end="153:62">)</operator> <operator pos:start="153:64" pos:end="153:64">&amp;</operator> <operator pos:start="153:66" pos:end="153:66">(</operator><name pos:start="153:67" pos:end="153:82">TARGET_PAGE_SIZE</name> <operator pos:start="153:84" pos:end="153:84">-</operator> <literal type="number" pos:start="153:86" pos:end="153:86">1</literal><operator pos:start="153:87" pos:end="153:87">)</operator></expr>;</expr_stmt>

		</block_content>}</block></switch>

		<break pos:start="157:17" pos:end="157:22">break;</break>

	    <case pos:start="159:13" pos:end="159:19">case <expr pos:start="159:18" pos:end="159:18"><literal type="number" pos:start="159:18" pos:end="159:18">2</literal></expr>:</case> <comment type="block" pos:start="159:21" pos:end="159:32">/* L2 PTE */</comment>

		<expr_stmt pos:start="161:17" pos:end="161:47"><expr pos:start="161:17" pos:end="161:46"><name pos:start="161:17" pos:end="161:25">virt_addr</name> <operator pos:start="161:27" pos:end="161:27">=</operator> <name pos:start="161:29" pos:end="161:35">address</name> <operator pos:start="161:37" pos:end="161:37">&amp;</operator> <operator pos:start="161:39" pos:end="161:39">~</operator><literal type="number" pos:start="161:40" pos:end="161:46">0x3ffff</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="163:17" pos:end="163:48"><expr pos:start="163:17" pos:end="163:47"><name pos:start="163:17" pos:end="163:27">page_offset</name> <operator pos:start="163:29" pos:end="163:29">=</operator> <name pos:start="163:31" pos:end="163:37">address</name> <operator pos:start="163:39" pos:end="163:39">&amp;</operator> <literal type="number" pos:start="163:41" pos:end="163:47">0x3ffff</literal></expr>;</expr_stmt>

	    </block_content>}</block></switch>

	    <break pos:start="167:13" pos:end="167:18">break;</break>

	<case pos:start="169:9" pos:end="169:15">case <expr pos:start="169:14" pos:end="169:14"><literal type="number" pos:start="169:14" pos:end="169:14">2</literal></expr>:</case> <comment type="block" pos:start="169:17" pos:end="169:28">/* L1 PTE */</comment>

	    <expr_stmt pos:start="171:13" pos:end="171:44"><expr pos:start="171:13" pos:end="171:43"><name pos:start="171:13" pos:end="171:21">virt_addr</name> <operator pos:start="171:23" pos:end="171:23">=</operator> <name pos:start="171:25" pos:end="171:31">address</name> <operator pos:start="171:33" pos:end="171:33">&amp;</operator> <operator pos:start="171:35" pos:end="171:35">~</operator><literal type="number" pos:start="171:36" pos:end="171:43">0xffffff</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="173:13" pos:end="173:45"><expr pos:start="173:13" pos:end="173:44"><name pos:start="173:13" pos:end="173:23">page_offset</name> <operator pos:start="173:25" pos:end="173:25">=</operator> <name pos:start="173:27" pos:end="173:33">address</name> <operator pos:start="173:35" pos:end="173:35">&amp;</operator> <literal type="number" pos:start="173:37" pos:end="173:44">0xffffff</literal></expr>;</expr_stmt>

	</block_content>}</block></switch>

    </block_content>}</block></switch>



    <comment type="block" pos:start="181:5" pos:end="181:45">/* update page modified and dirty bits */</comment>

    <expr_stmt pos:start="183:5" pos:end="183:47"><expr pos:start="183:5" pos:end="183:46"><name pos:start="183:5" pos:end="183:12">is_dirty</name> <operator pos:start="183:14" pos:end="183:14">=</operator> <name pos:start="183:16" pos:end="183:17">rw</name> <operator pos:start="183:19" pos:end="183:20">&amp;&amp;</operator> <operator pos:start="183:22" pos:end="183:22">!</operator><operator pos:start="183:23" pos:end="183:23">(</operator><name pos:start="183:24" pos:end="183:26">pde</name> <operator pos:start="183:28" pos:end="183:28">&amp;</operator> <name pos:start="183:30" pos:end="183:45">PG_MODIFIED_MASK</name><operator pos:start="183:46" pos:end="183:46">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="185:5" pos:end="195:5"><if pos:start="185:5" pos:end="195:5">if <condition pos:start="185:8" pos:end="185:46">(<expr pos:start="185:9" pos:end="185:45"><operator pos:start="185:9" pos:end="185:9">!</operator><operator pos:start="185:10" pos:end="185:10">(</operator><name pos:start="185:11" pos:end="185:13">pde</name> <operator pos:start="185:15" pos:end="185:15">&amp;</operator> <name pos:start="185:17" pos:end="185:32">PG_ACCESSED_MASK</name><operator pos:start="185:33" pos:end="185:33">)</operator> <operator pos:start="185:35" pos:end="185:36">||</operator> <name pos:start="185:38" pos:end="185:45">is_dirty</name></expr>)</condition> <block pos:start="185:48" pos:end="195:5">{<block_content pos:start="187:9" pos:end="193:30">

	<expr_stmt pos:start="187:9" pos:end="187:32"><expr pos:start="187:9" pos:end="187:31"><name pos:start="187:9" pos:end="187:11">pde</name> <operator pos:start="187:13" pos:end="187:14">|=</operator> <name pos:start="187:16" pos:end="187:31">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

	<if_stmt pos:start="189:9" pos:end="191:36"><if pos:start="189:9" pos:end="191:36">if <condition pos:start="189:12" pos:end="189:21">(<expr pos:start="189:13" pos:end="189:20"><name pos:start="189:13" pos:end="189:20">is_dirty</name></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="191:36"><block_content pos:start="191:13" pos:end="191:36">

	    <expr_stmt pos:start="191:13" pos:end="191:36"><expr pos:start="191:13" pos:end="191:35"><name pos:start="191:13" pos:end="191:15">pde</name> <operator pos:start="191:17" pos:end="191:18">|=</operator> <name pos:start="191:20" pos:end="191:35">PG_MODIFIED_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt pos:start="193:9" pos:end="193:30"><expr pos:start="193:9" pos:end="193:29"><call pos:start="193:9" pos:end="193:29"><name pos:start="193:9" pos:end="193:15">stl_raw</name><argument_list pos:start="193:16" pos:end="193:29">(<argument pos:start="193:17" pos:end="193:23"><expr pos:start="193:17" pos:end="193:23"><name pos:start="193:17" pos:end="193:23">pde_ptr</name></expr></argument>, <argument pos:start="193:26" pos:end="193:28"><expr pos:start="193:26" pos:end="193:28"><name pos:start="193:26" pos:end="193:28">pde</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="199:5" pos:end="199:22">/* check access */</comment>

    <expr_stmt pos:start="201:5" pos:end="201:88"><expr pos:start="201:5" pos:end="201:87"><name pos:start="201:5" pos:end="201:16">access_index</name> <operator pos:start="201:18" pos:end="201:18">=</operator> <operator pos:start="201:20" pos:end="201:20">(</operator><name pos:start="201:21" pos:end="201:22">rw</name> <operator pos:start="201:24" pos:end="201:25">&lt;&lt;</operator> <literal type="number" pos:start="201:27" pos:end="201:27">2</literal><operator pos:start="201:28" pos:end="201:28">)</operator> <operator pos:start="201:30" pos:end="201:30">|</operator> <operator pos:start="201:32" pos:end="201:32">(</operator><ternary pos:start="201:33" pos:end="201:67"><condition pos:start="201:33" pos:end="201:61"><expr pos:start="201:33" pos:end="201:60"><operator pos:start="201:33" pos:end="201:33">(</operator><name pos:start="201:34" pos:end="201:44">access_type</name> <operator pos:start="201:46" pos:end="201:47">==</operator> <name pos:start="201:49" pos:end="201:59">ACCESS_CODE</name><operator pos:start="201:60" pos:end="201:60">)</operator></expr>?</condition><then pos:start="201:63" pos:end="201:63"> <expr pos:start="201:63" pos:end="201:63"><literal type="number" pos:start="201:63" pos:end="201:63">2</literal></expr> </then><else pos:start="201:65" pos:end="201:67">: <expr pos:start="201:67" pos:end="201:67"><literal type="number" pos:start="201:67" pos:end="201:67">0</literal></expr></else></ternary><operator pos:start="201:68" pos:end="201:68">)</operator> <operator pos:start="201:70" pos:end="201:70">|</operator> <operator pos:start="201:72" pos:end="201:72">(</operator><ternary pos:start="201:73" pos:end="201:86"><condition pos:start="201:73" pos:end="201:80"><expr pos:start="201:73" pos:end="201:79"><name pos:start="201:73" pos:end="201:79">is_user</name></expr>?</condition><then pos:start="201:82" pos:end="201:82"> <expr pos:start="201:82" pos:end="201:82"><literal type="number" pos:start="201:82" pos:end="201:82">0</literal></expr> </then><else pos:start="201:84" pos:end="201:86">: <expr pos:start="201:86" pos:end="201:86"><literal type="number" pos:start="201:86" pos:end="201:86">1</literal></expr></else></ternary><operator pos:start="201:87" pos:end="201:87">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:63"><expr pos:start="203:5" pos:end="203:62"><name pos:start="203:5" pos:end="203:16">access_perms</name> <operator pos:start="203:18" pos:end="203:18">=</operator> <operator pos:start="203:20" pos:end="203:20">(</operator><name pos:start="203:21" pos:end="203:23">pde</name> <operator pos:start="203:25" pos:end="203:25">&amp;</operator> <name pos:start="203:27" pos:end="203:41">PTE_ACCESS_MASK</name><operator pos:start="203:42" pos:end="203:42">)</operator> <operator pos:start="203:44" pos:end="203:45">&gt;&gt;</operator> <name pos:start="203:47" pos:end="203:62">PTE_ACCESS_SHIFT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:58"><expr pos:start="205:5" pos:end="205:57"><name pos:start="205:5" pos:end="205:14">error_code</name> <operator pos:start="205:16" pos:end="205:16">=</operator> <name pos:start="205:18" pos:end="205:57"><name pos:start="205:18" pos:end="205:29">access_table</name><index pos:start="205:30" pos:end="205:43">[<expr pos:start="205:31" pos:end="205:42"><name pos:start="205:31" pos:end="205:42">access_index</name></expr>]</index><index pos:start="205:44" pos:end="205:57">[<expr pos:start="205:45" pos:end="205:56"><name pos:start="205:45" pos:end="205:56">access_perms</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="207:5" pos:end="209:22"><if pos:start="207:5" pos:end="209:22">if <condition pos:start="207:8" pos:end="207:19">(<expr pos:start="207:9" pos:end="207:18"><name pos:start="207:9" pos:end="207:18">error_code</name></expr>)</condition><block type="pseudo" pos:start="209:9" pos:end="209:22"><block_content pos:start="209:9" pos:end="209:22">

	<goto pos:start="209:9" pos:end="209:22">goto <name pos:start="209:14" pos:end="209:21">do_fault</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="213:5" pos:end="213:40">/* the page can be put in the TLB */</comment>

    <expr_stmt pos:start="215:5" pos:end="215:21"><expr pos:start="215:5" pos:end="215:20"><name pos:start="215:5" pos:end="215:8">prot</name> <operator pos:start="215:10" pos:end="215:10">=</operator> <name pos:start="215:12" pos:end="215:20">PAGE_READ</name></expr>;</expr_stmt>

    <if_stmt pos:start="217:5" pos:end="227:5"><if pos:start="217:5" pos:end="227:5">if <condition pos:start="217:8" pos:end="217:31">(<expr pos:start="217:9" pos:end="217:30"><name pos:start="217:9" pos:end="217:11">pde</name> <operator pos:start="217:13" pos:end="217:13">&amp;</operator> <name pos:start="217:15" pos:end="217:30">PG_MODIFIED_MASK</name></expr>)</condition> <block pos:start="217:33" pos:end="227:5">{<block_content pos:start="223:9" pos:end="225:35">

        <comment type="block" pos:start="219:9" pos:end="221:30">/* only set write access if already dirty... otherwise wait

           for dirty access */</comment>

	<if_stmt pos:start="223:9" pos:end="225:35"><if pos:start="223:9" pos:end="225:35">if <condition pos:start="223:12" pos:end="223:44">(<expr pos:start="223:13" pos:end="223:43"><name pos:start="223:13" pos:end="223:43"><name pos:start="223:13" pos:end="223:20">rw_table</name><index pos:start="223:21" pos:end="223:29">[<expr pos:start="223:22" pos:end="223:28"><name pos:start="223:22" pos:end="223:28">is_user</name></expr>]</index><index pos:start="223:30" pos:end="223:43">[<expr pos:start="223:31" pos:end="223:42"><name pos:start="223:31" pos:end="223:42">access_perms</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="225:17" pos:end="225:35"><block_content pos:start="225:17" pos:end="225:35">

	        <expr_stmt pos:start="225:17" pos:end="225:35"><expr pos:start="225:17" pos:end="225:34"><name pos:start="225:17" pos:end="225:20">prot</name> <operator pos:start="225:22" pos:end="225:23">|=</operator> <name pos:start="225:25" pos:end="225:34">PAGE_WRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="231:5" pos:end="233:35">/* Even if large ptes, we map only one 4KB page in the cache to

       avoid filling it too fast */</comment>

    <expr_stmt pos:start="235:5" pos:end="235:43"><expr pos:start="235:5" pos:end="235:42"><name pos:start="235:5" pos:end="235:13">virt_addr</name> <operator pos:start="235:15" pos:end="235:15">=</operator> <name pos:start="235:17" pos:end="235:23">address</name> <operator pos:start="235:25" pos:end="235:25">&amp;</operator> <name pos:start="235:27" pos:end="235:42">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:55"><expr pos:start="237:5" pos:end="237:54"><name pos:start="237:5" pos:end="237:9">paddr</name> <operator pos:start="237:11" pos:end="237:11">=</operator> <operator pos:start="237:13" pos:end="237:13">(</operator><operator pos:start="237:14" pos:end="237:14">(</operator><name pos:start="237:15" pos:end="237:17">pde</name> <operator pos:start="237:19" pos:end="237:19">&amp;</operator> <name pos:start="237:21" pos:end="237:33">PTE_ADDR_MASK</name><operator pos:start="237:34" pos:end="237:34">)</operator> <operator pos:start="237:36" pos:end="237:37">&lt;&lt;</operator> <literal type="number" pos:start="237:39" pos:end="237:39">4</literal><operator pos:start="237:40" pos:end="237:40">)</operator> <operator pos:start="237:42" pos:end="237:42">+</operator> <name pos:start="237:44" pos:end="237:54">page_offset</name></expr>;</expr_stmt>



 <label pos:start="241:2" pos:end="241:12"><name pos:start="241:2" pos:end="241:11">do_mapping</name>:</label>

    <expr_stmt pos:start="243:5" pos:end="243:35"><expr pos:start="243:5" pos:end="243:34"><name pos:start="243:5" pos:end="243:20"><name pos:start="243:5" pos:end="243:7">env</name><operator pos:start="243:8" pos:end="243:9">-&gt;</operator><name pos:start="243:10" pos:end="243:20">access_type</name></name> <operator pos:start="243:22" pos:end="243:22">=</operator> <name pos:start="243:24" pos:end="243:34">access_type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:80"><expr pos:start="245:5" pos:end="245:79"><name pos:start="245:5" pos:end="245:9">vaddr</name> <operator pos:start="245:11" pos:end="245:11">=</operator> <name pos:start="245:13" pos:end="245:21">virt_addr</name> <operator pos:start="245:23" pos:end="245:23">+</operator> <operator pos:start="245:25" pos:end="245:25">(</operator><operator pos:start="245:26" pos:end="245:26">(</operator><name pos:start="245:27" pos:end="245:33">address</name> <operator pos:start="245:35" pos:end="245:35">&amp;</operator> <name pos:start="245:37" pos:end="245:52">TARGET_PAGE_MASK</name><operator pos:start="245:53" pos:end="245:53">)</operator> <operator pos:start="245:55" pos:end="245:55">&amp;</operator> <operator pos:start="245:57" pos:end="245:57">(</operator><name pos:start="245:58" pos:end="245:73">TARGET_PAGE_SIZE</name> <operator pos:start="245:75" pos:end="245:75">-</operator> <literal type="number" pos:start="245:77" pos:end="245:77">1</literal><operator pos:start="245:78" pos:end="245:78">)</operator><operator pos:start="245:79" pos:end="245:79">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="249:5" pos:end="249:69"><expr pos:start="249:5" pos:end="249:68"><name pos:start="249:5" pos:end="249:7">ret</name> <operator pos:start="249:9" pos:end="249:9">=</operator> <call pos:start="249:11" pos:end="249:68"><name pos:start="249:11" pos:end="249:22">tlb_set_page</name><argument_list pos:start="249:23" pos:end="249:68">(<argument pos:start="249:24" pos:end="249:26"><expr pos:start="249:24" pos:end="249:26"><name pos:start="249:24" pos:end="249:26">env</name></expr></argument>, <argument pos:start="249:29" pos:end="249:33"><expr pos:start="249:29" pos:end="249:33"><name pos:start="249:29" pos:end="249:33">vaddr</name></expr></argument>, <argument pos:start="249:36" pos:end="249:40"><expr pos:start="249:36" pos:end="249:40"><name pos:start="249:36" pos:end="249:40">paddr</name></expr></argument>, <argument pos:start="249:43" pos:end="249:46"><expr pos:start="249:43" pos:end="249:46"><name pos:start="249:43" pos:end="249:46">prot</name></expr></argument>, <argument pos:start="249:49" pos:end="249:55"><expr pos:start="249:49" pos:end="249:55"><name pos:start="249:49" pos:end="249:55">is_user</name></expr></argument>, <argument pos:start="249:58" pos:end="249:67"><expr pos:start="249:58" pos:end="249:67"><name pos:start="249:58" pos:end="249:67">is_softmmu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="251:5" pos:end="251:15">return <expr pos:start="251:12" pos:end="251:14"><name pos:start="251:12" pos:end="251:14">ret</name></expr>;</return>



 <label pos:start="255:2" pos:end="255:10"><name pos:start="255:2" pos:end="255:9">do_fault</name>:</label>

    <expr_stmt pos:start="257:5" pos:end="257:35"><expr pos:start="257:5" pos:end="257:34"><name pos:start="257:5" pos:end="257:20"><name pos:start="257:5" pos:end="257:7">env</name><operator pos:start="257:8" pos:end="257:9">-&gt;</operator><name pos:start="257:10" pos:end="257:20">access_type</name></name> <operator pos:start="257:22" pos:end="257:22">=</operator> <name pos:start="257:24" pos:end="257:34">access_type</name></expr>;</expr_stmt>

    <if_stmt pos:start="259:5" pos:end="261:28"><if pos:start="259:5" pos:end="261:28">if <condition pos:start="259:8" pos:end="259:24">(<expr pos:start="259:9" pos:end="259:23"><name pos:start="259:9" pos:end="259:23"><name pos:start="259:9" pos:end="259:11">env</name><operator pos:start="259:12" pos:end="259:13">-&gt;</operator><name pos:start="259:14" pos:end="259:20">mmuregs</name><index pos:start="259:21" pos:end="259:23">[<expr pos:start="259:22" pos:end="259:22"><literal type="number" pos:start="259:22" pos:end="259:22">3</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="261:9" pos:end="261:28"><block_content pos:start="261:9" pos:end="261:28"> <comment type="block" pos:start="259:26" pos:end="259:52">/* Fault status register */</comment>

	<expr_stmt pos:start="261:9" pos:end="261:28"><expr pos:start="261:9" pos:end="261:27"><name pos:start="261:9" pos:end="261:23"><name pos:start="261:9" pos:end="261:11">env</name><operator pos:start="261:12" pos:end="261:13">-&gt;</operator><name pos:start="261:14" pos:end="261:20">mmuregs</name><index pos:start="261:21" pos:end="261:23">[<expr pos:start="261:22" pos:end="261:22"><literal type="number" pos:start="261:22" pos:end="261:22">3</literal></expr>]</index></name> <operator pos:start="261:25" pos:end="261:25">=</operator> <literal type="number" pos:start="261:27" pos:end="261:27">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="261:30" pos:end="261:75">/* overflow (not read before another fault) */</comment>

    <expr_stmt pos:start="263:5" pos:end="263:67"><expr pos:start="263:5" pos:end="263:66"><name pos:start="263:5" pos:end="263:19"><name pos:start="263:5" pos:end="263:7">env</name><operator pos:start="263:8" pos:end="263:9">-&gt;</operator><name pos:start="263:10" pos:end="263:16">mmuregs</name><index pos:start="263:17" pos:end="263:19">[<expr pos:start="263:18" pos:end="263:18"><literal type="number" pos:start="263:18" pos:end="263:18">3</literal></expr>]</index></name> <operator pos:start="263:21" pos:end="263:22">|=</operator> <operator pos:start="263:24" pos:end="263:24">(</operator><name pos:start="263:25" pos:end="263:36">access_index</name> <operator pos:start="263:38" pos:end="263:39">&lt;&lt;</operator> <literal type="number" pos:start="263:41" pos:end="263:41">5</literal><operator pos:start="263:42" pos:end="263:42">)</operator> <operator pos:start="263:44" pos:end="263:44">|</operator> <operator pos:start="263:46" pos:end="263:46">(</operator><name pos:start="263:47" pos:end="263:56">error_code</name> <operator pos:start="263:58" pos:end="263:59">&lt;&lt;</operator> <literal type="number" pos:start="263:61" pos:end="263:61">2</literal><operator pos:start="263:62" pos:end="263:62">)</operator> <operator pos:start="263:64" pos:end="263:64">|</operator> <literal type="number" pos:start="263:66" pos:end="263:66">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:30"><expr pos:start="265:5" pos:end="265:29"><name pos:start="265:5" pos:end="265:19"><name pos:start="265:5" pos:end="265:7">env</name><operator pos:start="265:8" pos:end="265:9">-&gt;</operator><name pos:start="265:10" pos:end="265:16">mmuregs</name><index pos:start="265:17" pos:end="265:19">[<expr pos:start="265:18" pos:end="265:18"><literal type="number" pos:start="265:18" pos:end="265:18">4</literal></expr>]</index></name> <operator pos:start="265:21" pos:end="265:21">=</operator> <name pos:start="265:23" pos:end="265:29">address</name></expr>;</expr_stmt> <comment type="block" pos:start="265:32" pos:end="265:59">/* Fault address register */</comment>



    <if_stmt pos:start="269:5" pos:end="271:17"><if pos:start="269:5" pos:end="271:17">if <condition pos:start="269:8" pos:end="269:33">(<expr pos:start="269:9" pos:end="269:32"><name pos:start="269:9" pos:end="269:23"><name pos:start="269:9" pos:end="269:11">env</name><operator pos:start="269:12" pos:end="269:13">-&gt;</operator><name pos:start="269:14" pos:end="269:20">mmuregs</name><index pos:start="269:21" pos:end="269:23">[<expr pos:start="269:22" pos:end="269:22"><literal type="number" pos:start="269:22" pos:end="269:22">0</literal></expr>]</index></name> <operator pos:start="269:25" pos:end="269:25">&amp;</operator> <name pos:start="269:27" pos:end="269:32">MMU_NF</name></expr>)</condition><block type="pseudo" pos:start="271:9" pos:end="271:17"><block_content pos:start="271:9" pos:end="271:17"> <comment type="line" pos:start="269:35" pos:end="269:45">// No fault</comment>

	<return pos:start="271:9" pos:end="271:17">return <expr pos:start="271:16" pos:end="271:16"><literal type="number" pos:start="271:16" pos:end="271:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="275:5" pos:end="275:37"><expr pos:start="275:5" pos:end="275:36"><name pos:start="275:5" pos:end="275:24"><name pos:start="275:5" pos:end="275:7">env</name><operator pos:start="275:8" pos:end="275:9">-&gt;</operator><name pos:start="275:10" pos:end="275:24">exception_index</name></name> <operator pos:start="275:26" pos:end="275:26">=</operator> <name pos:start="275:28" pos:end="275:36">exception</name></expr>;</expr_stmt>

    <expr_stmt pos:start="277:5" pos:end="277:33"><expr pos:start="277:5" pos:end="277:32"><name pos:start="277:5" pos:end="277:19"><name pos:start="277:5" pos:end="277:7">env</name><operator pos:start="277:8" pos:end="277:9">-&gt;</operator><name pos:start="277:10" pos:end="277:19">error_code</name></name> <operator pos:start="277:21" pos:end="277:21">=</operator> <name pos:start="277:23" pos:end="277:32">error_code</name></expr>;</expr_stmt>

    <return pos:start="279:5" pos:end="279:22">return <expr pos:start="279:12" pos:end="279:21"><name pos:start="279:12" pos:end="279:21">error_code</name></expr>;</return>

</block_content>}</block></function>
</unit>
