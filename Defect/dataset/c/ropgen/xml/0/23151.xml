<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23151.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">vhost_net_start</name><parameter_list pos:start="1:20" pos:end="3:38">(<parameter pos:start="1:21" pos:end="1:41"><decl pos:start="1:21" pos:end="1:41"><type pos:start="1:21" pos:end="1:41"><name pos:start="1:21" pos:end="1:36"><name pos:start="1:21" pos:end="1:26">struct</name> <name pos:start="1:28" pos:end="1:36">vhost_net</name></name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">net</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:37"><decl pos:start="3:21" pos:end="3:37"><type pos:start="3:21" pos:end="3:37"><name pos:start="3:21" pos:end="3:32">VirtIODevice</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:37">dev</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="81:1">{<block_content pos:start="7:5" pos:end="79:13">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:27">vhost_vring_file</name></name></type> <name pos:start="7:29" pos:end="7:32">file</name> <init pos:start="7:34" pos:end="7:38">= <expr pos:start="7:36" pos:end="7:38"><block pos:start="7:36" pos:end="7:38">{ }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">r</name></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:64">(<expr pos:start="11:9" pos:end="11:63"><name pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:11">net</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:16">dev</name><operator pos:start="11:17" pos:end="11:17">.</operator><name pos:start="11:18" pos:end="11:31">acked_features</name></name> <operator pos:start="11:33" pos:end="11:33">&amp;</operator> <operator pos:start="11:35" pos:end="11:35">(</operator><literal type="number" pos:start="11:36" pos:end="11:36">1</literal> <operator pos:start="11:38" pos:end="11:39">&lt;&lt;</operator> <name pos:start="11:41" pos:end="11:62">VIRTIO_NET_F_MRG_RXBUF</name><operator pos:start="11:63" pos:end="11:63">)</operator></expr>)</condition> <block pos:start="11:66" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:70">

        <expr_stmt pos:start="13:9" pos:end="15:70"><expr pos:start="13:9" pos:end="15:69"><call pos:start="13:9" pos:end="15:69"><name pos:start="13:9" pos:end="13:28">tap_set_vnet_hdr_len</name><argument_list pos:start="13:29" pos:end="15:69">(<argument pos:start="13:30" pos:end="13:36"><expr pos:start="13:30" pos:end="13:36"><name pos:start="13:30" pos:end="13:36"><name pos:start="13:30" pos:end="13:32">net</name><operator pos:start="13:33" pos:end="13:34">-&gt;</operator><name pos:start="13:35" pos:end="13:36">vc</name></name></expr></argument>,

                             <argument pos:start="15:30" pos:end="15:68"><expr pos:start="15:30" pos:end="15:68"><sizeof pos:start="15:30" pos:end="15:68">sizeof<argument_list pos:start="15:36" pos:end="15:68">(<argument pos:start="15:37" pos:end="15:67"><expr pos:start="15:37" pos:end="15:67">struct <name pos:start="15:44" pos:end="15:67">virtio_net_hdr_mrg_rxbuf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:7">net</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:12">dev</name><operator pos:start="21:13" pos:end="21:13">.</operator><name pos:start="21:14" pos:end="21:17">nvqs</name></name> <operator pos:start="21:19" pos:end="21:19">=</operator> <literal type="number" pos:start="21:21" pos:end="21:21">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:7">net</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:12">dev</name><operator pos:start="23:13" pos:end="23:13">.</operator><name pos:start="23:14" pos:end="23:16">vqs</name></name> <operator pos:start="23:18" pos:end="23:18">=</operator> <name pos:start="23:20" pos:end="23:27"><name pos:start="23:20" pos:end="23:22">net</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:27">vqs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:40"><expr pos:start="25:5" pos:end="25:39"><name pos:start="25:5" pos:end="25:5">r</name> <operator pos:start="25:7" pos:end="25:7">=</operator> <call pos:start="25:9" pos:end="25:39"><name pos:start="25:9" pos:end="25:23">vhost_dev_start</name><argument_list pos:start="25:24" pos:end="25:39">(<argument pos:start="25:25" pos:end="25:33"><expr pos:start="25:25" pos:end="25:33"><operator pos:start="25:25" pos:end="25:25">&amp;</operator><name pos:start="25:26" pos:end="25:33"><name pos:start="25:26" pos:end="25:28">net</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:33">dev</name></name></expr></argument>, <argument pos:start="25:36" pos:end="25:38"><expr pos:start="25:36" pos:end="25:38"><name pos:start="25:36" pos:end="25:38">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:14">(<expr pos:start="27:9" pos:end="27:13"><name pos:start="27:9" pos:end="27:9">r</name> <operator pos:start="27:11" pos:end="27:11">&lt;</operator> <literal type="number" pos:start="27:13" pos:end="27:13">0</literal></expr>)</condition> <block pos:start="27:16" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:17">

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><name pos:start="29:16" pos:end="29:16">r</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><call pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:7">net</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:11">vc</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:17">info</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:23">poll</name></name><argument_list pos:start="35:24" pos:end="35:39">(<argument pos:start="35:25" pos:end="35:31"><expr pos:start="35:25" pos:end="35:31"><name pos:start="35:25" pos:end="35:31"><name pos:start="35:25" pos:end="35:27">net</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:31">vc</name></name></expr></argument>, <argument pos:start="35:34" pos:end="35:38"><expr pos:start="35:34" pos:end="35:38"><name pos:start="35:34" pos:end="35:38">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:56"><expr pos:start="37:5" pos:end="37:55"><call pos:start="37:5" pos:end="37:55"><name pos:start="37:5" pos:end="37:23">qemu_set_fd_handler</name><argument_list pos:start="37:24" pos:end="37:55">(<argument pos:start="37:25" pos:end="37:36"><expr pos:start="37:25" pos:end="37:36"><name pos:start="37:25" pos:end="37:36"><name pos:start="37:25" pos:end="37:27">net</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:36">backend</name></name></expr></argument>, <argument pos:start="37:39" pos:end="37:42"><expr pos:start="37:39" pos:end="37:42"><name pos:start="37:39" pos:end="37:42">NULL</name></expr></argument>, <argument pos:start="37:45" pos:end="37:48"><expr pos:start="37:45" pos:end="37:48"><name pos:start="37:45" pos:end="37:48">NULL</name></expr></argument>, <argument pos:start="37:51" pos:end="37:54"><expr pos:start="37:51" pos:end="37:54"><name pos:start="37:51" pos:end="37:54">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:27"><expr pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:11"><name pos:start="39:5" pos:end="39:8">file</name><operator pos:start="39:9" pos:end="39:9">.</operator><name pos:start="39:10" pos:end="39:11">fd</name></name> <operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:26"><name pos:start="39:15" pos:end="39:17">net</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:26">backend</name></name></expr>;</expr_stmt>

    <for pos:start="41:5" pos:end="53:5">for <control pos:start="41:9" pos:end="41:66">(<init pos:start="41:10" pos:end="41:24"><expr pos:start="41:10" pos:end="41:23"><name pos:start="41:10" pos:end="41:19"><name pos:start="41:10" pos:end="41:13">file</name><operator pos:start="41:14" pos:end="41:14">.</operator><name pos:start="41:15" pos:end="41:19">index</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <literal type="number" pos:start="41:23" pos:end="41:23">0</literal></expr>;</init> <condition pos:start="41:26" pos:end="41:52"><expr pos:start="41:26" pos:end="41:51"><name pos:start="41:26" pos:end="41:35"><name pos:start="41:26" pos:end="41:29">file</name><operator pos:start="41:30" pos:end="41:30">.</operator><name pos:start="41:31" pos:end="41:35">index</name></name> <operator pos:start="41:37" pos:end="41:37">&lt;</operator> <name pos:start="41:39" pos:end="41:51"><name pos:start="41:39" pos:end="41:41">net</name><operator pos:start="41:42" pos:end="41:43">-&gt;</operator><name pos:start="41:44" pos:end="41:46">dev</name><operator pos:start="41:47" pos:end="41:47">.</operator><name pos:start="41:48" pos:end="41:51">nvqs</name></name></expr>;</condition> <incr pos:start="41:54" pos:end="41:65"><expr pos:start="41:54" pos:end="41:65"><operator pos:start="41:54" pos:end="41:55">++</operator><name pos:start="41:56" pos:end="41:65"><name pos:start="41:56" pos:end="41:59">file</name><operator pos:start="41:60" pos:end="41:60">.</operator><name pos:start="41:61" pos:end="41:65">index</name></name></expr></incr>)</control> <block pos:start="41:68" pos:end="53:5">{<block_content pos:start="43:9" pos:end="51:9">

        <expr_stmt pos:start="43:9" pos:end="43:66"><expr pos:start="43:9" pos:end="43:65"><name pos:start="43:9" pos:end="43:9">r</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <call pos:start="43:13" pos:end="43:65"><name pos:start="43:13" pos:end="43:17">ioctl</name><argument_list pos:start="43:18" pos:end="43:65">(<argument pos:start="43:19" pos:end="43:34"><expr pos:start="43:19" pos:end="43:34"><name pos:start="43:19" pos:end="43:34"><name pos:start="43:19" pos:end="43:21">net</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:26">dev</name><operator pos:start="43:27" pos:end="43:27">.</operator><name pos:start="43:28" pos:end="43:34">control</name></name></expr></argument>, <argument pos:start="43:37" pos:end="43:57"><expr pos:start="43:37" pos:end="43:57"><name pos:start="43:37" pos:end="43:57">VHOST_NET_SET_BACKEND</name></expr></argument>, <argument pos:start="43:60" pos:end="43:64"><expr pos:start="43:60" pos:end="43:64"><operator pos:start="43:60" pos:end="43:60">&amp;</operator><name pos:start="43:61" pos:end="43:64">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:18">(<expr pos:start="45:13" pos:end="45:17"><name pos:start="45:13" pos:end="45:13">r</name> <operator pos:start="45:15" pos:end="45:15">&lt;</operator> <literal type="number" pos:start="45:17" pos:end="45:17">0</literal></expr>)</condition> <block pos:start="45:20" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:22">

            <expr_stmt pos:start="47:13" pos:end="47:23"><expr pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:13">r</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <operator pos:start="47:17" pos:end="47:17">-</operator><name pos:start="47:18" pos:end="47:22">errno</name></expr>;</expr_stmt>

            <goto pos:start="49:13" pos:end="49:22">goto <name pos:start="49:18" pos:end="49:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>

<label pos:start="57:1" pos:end="57:5"><name pos:start="57:1" pos:end="57:4">fail</name>:</label>

    <expr_stmt pos:start="59:5" pos:end="59:17"><expr pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:11"><name pos:start="59:5" pos:end="59:8">file</name><operator pos:start="59:9" pos:end="59:9">.</operator><name pos:start="59:10" pos:end="59:11">fd</name></name> <operator pos:start="59:13" pos:end="59:13">=</operator> <operator pos:start="59:15" pos:end="59:15">-</operator><literal type="number" pos:start="59:16" pos:end="59:16">1</literal></expr>;</expr_stmt>

    <while pos:start="61:5" pos:end="67:5">while <condition pos:start="61:11" pos:end="61:29">(<expr pos:start="61:12" pos:end="61:28"><operator pos:start="61:12" pos:end="61:13">--</operator><name pos:start="61:14" pos:end="61:23"><name pos:start="61:14" pos:end="61:17">file</name><operator pos:start="61:18" pos:end="61:18">.</operator><name pos:start="61:19" pos:end="61:23">index</name></name> <operator pos:start="61:25" pos:end="61:26">&gt;=</operator> <literal type="number" pos:start="61:28" pos:end="61:28">0</literal></expr>)</condition> <block pos:start="61:31" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:23">

        <decl_stmt pos:start="63:9" pos:end="63:70"><decl pos:start="63:9" pos:end="63:69"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:13">r</name> <init pos:start="63:15" pos:end="63:69">= <expr pos:start="63:17" pos:end="63:69"><call pos:start="63:17" pos:end="63:69"><name pos:start="63:17" pos:end="63:21">ioctl</name><argument_list pos:start="63:22" pos:end="63:69">(<argument pos:start="63:23" pos:end="63:38"><expr pos:start="63:23" pos:end="63:38"><name pos:start="63:23" pos:end="63:38"><name pos:start="63:23" pos:end="63:25">net</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:30">dev</name><operator pos:start="63:31" pos:end="63:31">.</operator><name pos:start="63:32" pos:end="63:38">control</name></name></expr></argument>, <argument pos:start="63:41" pos:end="63:61"><expr pos:start="63:41" pos:end="63:61"><name pos:start="63:41" pos:end="63:61">VHOST_NET_SET_BACKEND</name></expr></argument>, <argument pos:start="63:64" pos:end="63:68"><expr pos:start="63:64" pos:end="63:68"><operator pos:start="63:64" pos:end="63:64">&amp;</operator><name pos:start="63:65" pos:end="63:68">file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:23"><expr pos:start="65:9" pos:end="65:22"><call pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:14">assert</name><argument_list pos:start="65:15" pos:end="65:22">(<argument pos:start="65:16" pos:end="65:21"><expr pos:start="65:16" pos:end="65:21"><name pos:start="65:16" pos:end="65:16">r</name> <operator pos:start="65:18" pos:end="65:19">&gt;=</operator> <literal type="number" pos:start="65:21" pos:end="65:21">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="69:5" pos:end="69:39"><expr pos:start="69:5" pos:end="69:38"><call pos:start="69:5" pos:end="69:38"><name pos:start="69:5" pos:end="69:23"><name pos:start="69:5" pos:end="69:7">net</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:11">vc</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:17">info</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:23">poll</name></name><argument_list pos:start="69:24" pos:end="69:38">(<argument pos:start="69:25" pos:end="69:31"><expr pos:start="69:25" pos:end="69:31"><name pos:start="69:25" pos:end="69:31"><name pos:start="69:25" pos:end="69:27">net</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:31">vc</name></name></expr></argument>, <argument pos:start="69:34" pos:end="69:37"><expr pos:start="69:34" pos:end="69:37"><name pos:start="69:34" pos:end="69:37">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:35"><expr pos:start="71:5" pos:end="71:34"><call pos:start="71:5" pos:end="71:34"><name pos:start="71:5" pos:end="71:18">vhost_dev_stop</name><argument_list pos:start="71:19" pos:end="71:34">(<argument pos:start="71:20" pos:end="71:28"><expr pos:start="71:20" pos:end="71:28"><operator pos:start="71:20" pos:end="71:20">&amp;</operator><name pos:start="71:21" pos:end="71:28"><name pos:start="71:21" pos:end="71:23">net</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:28">dev</name></name></expr></argument>, <argument pos:start="71:31" pos:end="71:33"><expr pos:start="71:31" pos:end="71:33"><name pos:start="71:31" pos:end="71:33">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:64">(<expr pos:start="73:9" pos:end="73:63"><name pos:start="73:9" pos:end="73:31"><name pos:start="73:9" pos:end="73:11">net</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:16">dev</name><operator pos:start="73:17" pos:end="73:17">.</operator><name pos:start="73:18" pos:end="73:31">acked_features</name></name> <operator pos:start="73:33" pos:end="73:33">&amp;</operator> <operator pos:start="73:35" pos:end="73:35">(</operator><literal type="number" pos:start="73:36" pos:end="73:36">1</literal> <operator pos:start="73:38" pos:end="73:39">&lt;&lt;</operator> <name pos:start="73:41" pos:end="73:62">VIRTIO_NET_F_MRG_RXBUF</name><operator pos:start="73:63" pos:end="73:63">)</operator></expr>)</condition> <block pos:start="73:66" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:69">

        <expr_stmt pos:start="75:9" pos:end="75:69"><expr pos:start="75:9" pos:end="75:68"><call pos:start="75:9" pos:end="75:68"><name pos:start="75:9" pos:end="75:28">tap_set_vnet_hdr_len</name><argument_list pos:start="75:29" pos:end="75:68">(<argument pos:start="75:30" pos:end="75:36"><expr pos:start="75:30" pos:end="75:36"><name pos:start="75:30" pos:end="75:36"><name pos:start="75:30" pos:end="75:32">net</name><operator pos:start="75:33" pos:end="75:34">-&gt;</operator><name pos:start="75:35" pos:end="75:36">vc</name></name></expr></argument>, <argument pos:start="75:39" pos:end="75:67"><expr pos:start="75:39" pos:end="75:67"><sizeof pos:start="75:39" pos:end="75:67">sizeof<argument_list pos:start="75:45" pos:end="75:67">(<argument pos:start="75:46" pos:end="75:66"><expr pos:start="75:46" pos:end="75:66">struct <name pos:start="75:53" pos:end="75:66">virtio_net_hdr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><name pos:start="79:12" pos:end="79:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
