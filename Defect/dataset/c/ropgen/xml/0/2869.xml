<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2869.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">pxa2xx_update_display</name><parameter_list pos:start="1:34" pos:end="1:47">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:40"><name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:32">

    <decl_stmt pos:start="5:5" pos:end="5:62"><decl pos:start="5:5" pos:end="5:61"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:24">pxa2xx_lcdc_s</name></name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:27">s</name> <init pos:start="5:29" pos:end="5:61">= <expr pos:start="5:31" pos:end="5:61"><operator pos:start="5:31" pos:end="5:31">(</operator>struct <name pos:start="5:39" pos:end="5:51">pxa2xx_lcdc_s</name> <operator pos:start="5:53" pos:end="5:53">*</operator><operator pos:start="5:54" pos:end="5:54">)</operator> <name pos:start="5:56" pos:end="5:61">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22">target_phys_addr_t</name></type> <name pos:start="7:24" pos:end="7:28">fbptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">miny</name></decl>, <decl pos:start="9:15" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:18">maxy</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:11"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">ch</name></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="15:15"><if pos:start="13:5" pos:end="15:15">if <condition pos:start="13:8" pos:end="13:37">(<expr pos:start="13:9" pos:end="13:36"><operator pos:start="13:9" pos:end="13:9">!</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:23"><name pos:start="13:11" pos:end="13:11">s</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:20">control</name><index pos:start="13:21" pos:end="13:23">[<expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr>]</index></name> <operator pos:start="13:25" pos:end="13:25">&amp;</operator> <name pos:start="13:27" pos:end="13:35">LCCR0_ENB</name><operator pos:start="13:36" pos:end="13:36">)</operator></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:15"><block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:30"><expr pos:start="19:5" pos:end="19:29"><call pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:26">pxa2xx_descriptor_load</name><argument_list pos:start="19:27" pos:end="19:29">(<argument pos:start="19:28" pos:end="19:28"><expr pos:start="19:28" pos:end="19:28"><name pos:start="19:28" pos:end="19:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:26"><expr pos:start="23:5" pos:end="23:25"><call pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:22">pxa2xx_lcdc_resize</name><argument_list pos:start="23:23" pos:end="23:25">(<argument pos:start="23:24" pos:end="23:24"><expr pos:start="23:24" pos:end="23:24"><name pos:start="23:24" pos:end="23:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:8">miny</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <name pos:start="25:12" pos:end="25:18"><name pos:start="25:12" pos:end="25:12">s</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:18">yres</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:13"><expr pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:8">maxy</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:51"><expr pos:start="29:5" pos:end="29:50"><name pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:13">transp</name></name> <operator pos:start="29:15" pos:end="29:15">=</operator> <name pos:start="29:17" pos:end="29:28"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:25">dma_ch</name><index pos:start="29:26" pos:end="29:28">[<expr pos:start="29:27" pos:end="29:27"><literal type="number" pos:start="29:27" pos:end="29:27">2</literal></expr>]</index></name><operator pos:start="29:29" pos:end="29:29">.</operator><name pos:start="29:30" pos:end="29:31">up</name> <operator pos:start="29:33" pos:end="29:34">||</operator> <name pos:start="29:36" pos:end="29:47"><name pos:start="29:36" pos:end="29:36">s</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:44">dma_ch</name><index pos:start="29:45" pos:end="29:47">[<expr pos:start="29:46" pos:end="29:46"><literal type="number" pos:start="29:46" pos:end="29:46">3</literal></expr>]</index></name><operator pos:start="29:48" pos:end="29:48">.</operator><name pos:start="29:49" pos:end="29:50">up</name></expr>;</expr_stmt>

    <comment type="block" pos:start="31:5" pos:end="31:71">/* Note: With overlay planes the order depends on LCCR0 bit 25.  */</comment>

    <for pos:start="33:5" pos:end="97:9">for <control pos:start="33:9" pos:end="33:46">(<init pos:start="33:10" pos:end="33:16"><expr pos:start="33:10" pos:end="33:15"><name pos:start="33:10" pos:end="33:11">ch</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>;</init> <condition pos:start="33:18" pos:end="33:39"><expr pos:start="33:18" pos:end="33:38"><name pos:start="33:18" pos:end="33:19">ch</name> <operator pos:start="33:21" pos:end="33:21">&lt;</operator> <name pos:start="33:23" pos:end="33:38">PXA_LCDDMA_CHANS</name></expr>;</condition> <incr pos:start="33:41" pos:end="33:45"><expr pos:start="33:41" pos:end="33:45"><name pos:start="33:41" pos:end="33:42">ch</name> <operator pos:start="33:44" pos:end="33:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:9" pos:end="97:9"><block_content pos:start="35:9" pos:end="97:9">

        <if_stmt pos:start="35:9" pos:end="97:9"><if pos:start="35:9" pos:end="97:9">if <condition pos:start="35:12" pos:end="35:29">(<expr pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:21">dma_ch</name><index pos:start="35:22" pos:end="35:25">[<expr pos:start="35:23" pos:end="35:24"><name pos:start="35:23" pos:end="35:24">ch</name></expr>]</index></name><operator pos:start="35:26" pos:end="35:26">.</operator><name pos:start="35:27" pos:end="35:28">up</name></expr>)</condition> <block pos:start="35:31" pos:end="97:9">{<block_content pos:start="37:13" pos:end="95:13">

            <if_stmt pos:start="37:13" pos:end="43:13"><if pos:start="37:13" pos:end="43:13">if <condition pos:start="37:16" pos:end="37:38">(<expr pos:start="37:17" pos:end="37:37"><operator pos:start="37:17" pos:end="37:17">!</operator><name pos:start="37:18" pos:end="37:30"><name pos:start="37:18" pos:end="37:18">s</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:26">dma_ch</name><index pos:start="37:27" pos:end="37:30">[<expr pos:start="37:28" pos:end="37:29"><name pos:start="37:28" pos:end="37:29">ch</name></expr>]</index></name><operator pos:start="37:31" pos:end="37:31">.</operator><name pos:start="37:32" pos:end="37:37">source</name></expr>)</condition> <block pos:start="37:40" pos:end="43:13">{<block_content pos:start="39:17" pos:end="41:25">

                <expr_stmt pos:start="39:17" pos:end="39:42"><expr pos:start="39:17" pos:end="39:41"><call pos:start="39:17" pos:end="39:41"><name pos:start="39:17" pos:end="39:34">pxa2xx_dma_ber_set</name><argument_list pos:start="39:35" pos:end="39:41">(<argument pos:start="39:36" pos:end="39:36"><expr pos:start="39:36" pos:end="39:36"><name pos:start="39:36" pos:end="39:36">s</name></expr></argument>, <argument pos:start="39:39" pos:end="39:40"><expr pos:start="39:39" pos:end="39:40"><name pos:start="39:39" pos:end="39:40">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="41:17" pos:end="41:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:41"><expr pos:start="45:13" pos:end="45:40"><name pos:start="45:13" pos:end="45:17">fbptr</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:33"><name pos:start="45:21" pos:end="45:21">s</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:29">dma_ch</name><index pos:start="45:30" pos:end="45:33">[<expr pos:start="45:31" pos:end="45:32"><name pos:start="45:31" pos:end="45:32">ch</name></expr>]</index></name><operator pos:start="45:34" pos:end="45:34">.</operator><name pos:start="45:35" pos:end="45:40">source</name></expr>;</expr_stmt>

            <if_stmt pos:start="47:13" pos:end="55:13"><if pos:start="47:13" pos:end="55:13">if <condition pos:start="47:16" pos:end="49:64">(<expr pos:start="47:17" pos:end="49:63"><operator pos:start="47:17" pos:end="47:17">!</operator><operator pos:start="47:18" pos:end="47:18">(</operator><name pos:start="47:19" pos:end="47:23">fbptr</name> <operator pos:start="47:25" pos:end="47:26">&gt;=</operator> <name pos:start="47:28" pos:end="47:44">PXA2XX_SDRAM_BASE</name> <operator pos:start="47:46" pos:end="47:47">&amp;&amp;</operator>

                    <name pos:start="49:21" pos:end="49:25">fbptr</name> <operator pos:start="49:27" pos:end="49:28">&lt;=</operator> <name pos:start="49:30" pos:end="49:46">PXA2XX_SDRAM_BASE</name> <operator pos:start="49:48" pos:end="49:48">+</operator> <name pos:start="49:50" pos:end="49:62">phys_ram_size</name><operator pos:start="49:63" pos:end="49:63">)</operator></expr>)</condition> <block pos:start="49:66" pos:end="55:13">{<block_content pos:start="51:17" pos:end="53:25">

                <expr_stmt pos:start="51:17" pos:end="51:42"><expr pos:start="51:17" pos:end="51:41"><call pos:start="51:17" pos:end="51:41"><name pos:start="51:17" pos:end="51:34">pxa2xx_dma_ber_set</name><argument_list pos:start="51:35" pos:end="51:41">(<argument pos:start="51:36" pos:end="51:36"><expr pos:start="51:36" pos:end="51:36"><name pos:start="51:36" pos:end="51:36">s</name></expr></argument>, <argument pos:start="51:39" pos:end="51:40"><expr pos:start="51:39" pos:end="51:40"><name pos:start="51:39" pos:end="51:40">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="53:17" pos:end="53:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="59:13" pos:end="95:13"><if pos:start="59:13" pos:end="69:13">if <condition pos:start="59:16" pos:end="59:50">(<expr pos:start="59:17" pos:end="59:49"><name pos:start="59:17" pos:end="59:29"><name pos:start="59:17" pos:end="59:17">s</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:25">dma_ch</name><index pos:start="59:26" pos:end="59:29">[<expr pos:start="59:27" pos:end="59:28"><name pos:start="59:27" pos:end="59:28">ch</name></expr>]</index></name><operator pos:start="59:30" pos:end="59:30">.</operator><name pos:start="59:31" pos:end="59:37">command</name> <operator pos:start="59:39" pos:end="59:39">&amp;</operator> <name pos:start="59:41" pos:end="59:49">LDCMD_PAL</name></expr>)</condition> <block pos:start="59:52" pos:end="69:13">{<block_content pos:start="61:17" pos:end="67:52">

                <expr_stmt pos:start="61:17" pos:end="65:56"><expr pos:start="61:17" pos:end="65:55"><call pos:start="61:17" pos:end="65:55"><name pos:start="61:17" pos:end="61:40">cpu_physical_memory_read</name><argument_list pos:start="61:41" pos:end="65:55">(<argument pos:start="61:42" pos:end="61:46"><expr pos:start="61:42" pos:end="61:46"><name pos:start="61:42" pos:end="61:46">fbptr</name></expr></argument>, <argument pos:start="61:49" pos:end="61:69"><expr pos:start="61:49" pos:end="61:69"><name pos:start="61:49" pos:end="61:61"><name pos:start="61:49" pos:end="61:49">s</name><operator pos:start="61:50" pos:end="61:51">-&gt;</operator><name pos:start="61:52" pos:end="61:57">dma_ch</name><index pos:start="61:58" pos:end="61:61">[<expr pos:start="61:59" pos:end="61:60"><name pos:start="61:59" pos:end="61:60">ch</name></expr>]</index></name><operator pos:start="61:62" pos:end="61:62">.</operator><name pos:start="61:63" pos:end="61:69">pbuffer</name></expr></argument>,

                    <argument pos:start="63:21" pos:end="65:54"><expr pos:start="63:21" pos:end="65:54"><call pos:start="63:21" pos:end="65:54"><name pos:start="63:21" pos:end="63:23">MAX</name><argument_list pos:start="63:24" pos:end="65:54">(<argument pos:start="63:25" pos:end="63:59"><expr pos:start="63:25" pos:end="63:59"><call pos:start="63:25" pos:end="63:59"><name pos:start="63:25" pos:end="63:36">LDCMD_LENGTH</name><argument_list pos:start="63:37" pos:end="63:59">(<argument pos:start="63:38" pos:end="63:58"><expr pos:start="63:38" pos:end="63:58"><name pos:start="63:38" pos:end="63:50"><name pos:start="63:38" pos:end="63:38">s</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:46">dma_ch</name><index pos:start="63:47" pos:end="63:50">[<expr pos:start="63:48" pos:end="63:49"><name pos:start="63:48" pos:end="63:49">ch</name></expr>]</index></name><operator pos:start="63:51" pos:end="63:51">.</operator><name pos:start="63:52" pos:end="63:58">command</name></expr></argument>)</argument_list></call></expr></argument>,

                        <argument pos:start="65:25" pos:end="65:53"><expr pos:start="65:25" pos:end="65:53"><sizeof pos:start="65:25" pos:end="65:53">sizeof<argument_list pos:start="65:31" pos:end="65:53">(<argument pos:start="65:32" pos:end="65:52"><expr pos:start="65:32" pos:end="65:52"><name pos:start="65:32" pos:end="65:44"><name pos:start="65:32" pos:end="65:32">s</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:40">dma_ch</name><index pos:start="65:41" pos:end="65:44">[<expr pos:start="65:42" pos:end="65:43"><name pos:start="65:42" pos:end="65:43">ch</name></expr>]</index></name><operator pos:start="65:45" pos:end="65:45">.</operator><name pos:start="65:46" pos:end="65:52">pbuffer</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:52"><expr pos:start="67:17" pos:end="67:51"><call pos:start="67:17" pos:end="67:51"><name pos:start="67:17" pos:end="67:36">pxa2xx_palette_parse</name><argument_list pos:start="67:37" pos:end="67:51">(<argument pos:start="67:38" pos:end="67:38"><expr pos:start="67:38" pos:end="67:38"><name pos:start="67:38" pos:end="67:38">s</name></expr></argument>, <argument pos:start="67:41" pos:end="67:42"><expr pos:start="67:41" pos:end="67:42"><name pos:start="67:41" pos:end="67:42">ch</name></expr></argument>, <argument pos:start="67:45" pos:end="67:50"><expr pos:start="67:45" pos:end="67:50"><name pos:start="67:45" pos:end="67:50"><name pos:start="67:45" pos:end="67:45">s</name><operator pos:start="67:46" pos:end="67:47">-&gt;</operator><name pos:start="67:48" pos:end="67:50">bpp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="69:15" pos:end="95:13">else <block pos:start="69:20" pos:end="95:13">{<block_content pos:start="73:17" pos:end="93:42">

                <comment type="block" pos:start="71:17" pos:end="71:51">/* Do we need to reparse palette */</comment>

                <if_stmt pos:start="73:17" pos:end="75:56"><if pos:start="73:17" pos:end="75:56">if <condition pos:start="73:20" pos:end="73:62">(<expr pos:start="73:21" pos:end="73:61"><call pos:start="73:21" pos:end="73:47"><name pos:start="73:21" pos:end="73:32">LCCR4_PALFOR</name><argument_list pos:start="73:33" pos:end="73:47">(<argument pos:start="73:34" pos:end="73:46"><expr pos:start="73:34" pos:end="73:46"><name pos:start="73:34" pos:end="73:46"><name pos:start="73:34" pos:end="73:34">s</name><operator pos:start="73:35" pos:end="73:36">-&gt;</operator><name pos:start="73:37" pos:end="73:43">control</name><index pos:start="73:44" pos:end="73:46">[<expr pos:start="73:45" pos:end="73:45"><literal type="number" pos:start="73:45" pos:end="73:45">4</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="73:49" pos:end="73:50">!=</operator> <name pos:start="73:52" pos:end="73:61"><name pos:start="73:52" pos:end="73:52">s</name><operator pos:start="73:53" pos:end="73:54">-&gt;</operator><name pos:start="73:55" pos:end="73:61">pal_for</name></name></expr>)</condition><block type="pseudo" pos:start="75:21" pos:end="75:56"><block_content pos:start="75:21" pos:end="75:56">

                    <expr_stmt pos:start="75:21" pos:end="75:56"><expr pos:start="75:21" pos:end="75:55"><call pos:start="75:21" pos:end="75:55"><name pos:start="75:21" pos:end="75:40">pxa2xx_palette_parse</name><argument_list pos:start="75:41" pos:end="75:55">(<argument pos:start="75:42" pos:end="75:42"><expr pos:start="75:42" pos:end="75:42"><name pos:start="75:42" pos:end="75:42">s</name></expr></argument>, <argument pos:start="75:45" pos:end="75:46"><expr pos:start="75:45" pos:end="75:46"><name pos:start="75:45" pos:end="75:46">ch</name></expr></argument>, <argument pos:start="75:49" pos:end="75:54"><expr pos:start="75:49" pos:end="75:54"><name pos:start="75:49" pos:end="75:54"><name pos:start="75:49" pos:end="75:49">s</name><operator pos:start="75:50" pos:end="75:51">-&gt;</operator><name pos:start="75:52" pos:end="75:54">bpp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <comment type="block" pos:start="79:17" pos:end="79:37">/* ACK frame start */</comment>

                <expr_stmt pos:start="81:17" pos:end="81:42"><expr pos:start="81:17" pos:end="81:41"><call pos:start="81:17" pos:end="81:41"><name pos:start="81:17" pos:end="81:34">pxa2xx_dma_sof_set</name><argument_list pos:start="81:35" pos:end="81:41">(<argument pos:start="81:36" pos:end="81:36"><expr pos:start="81:36" pos:end="81:36"><name pos:start="81:36" pos:end="81:36">s</name></expr></argument>, <argument pos:start="81:39" pos:end="81:40"><expr pos:start="81:39" pos:end="81:40"><name pos:start="81:39" pos:end="81:40">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="85:17" pos:end="85:61"><expr pos:start="85:17" pos:end="85:60"><name pos:start="85:17" pos:end="85:29"><name pos:start="85:17" pos:end="85:17">s</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:25">dma_ch</name><index pos:start="85:26" pos:end="85:29">[<expr pos:start="85:27" pos:end="85:28"><name pos:start="85:27" pos:end="85:28">ch</name></expr>]</index></name><operator pos:start="85:30" pos:end="85:30">.</operator><call pos:start="85:31" pos:end="85:60"><name pos:start="85:31" pos:end="85:36">redraw</name><argument_list pos:start="85:37" pos:end="85:60">(<argument pos:start="85:38" pos:end="85:38"><expr pos:start="85:38" pos:end="85:38"><name pos:start="85:38" pos:end="85:38">s</name></expr></argument>, <argument pos:start="85:41" pos:end="85:45"><expr pos:start="85:41" pos:end="85:45"><name pos:start="85:41" pos:end="85:45">fbptr</name></expr></argument>, <argument pos:start="85:48" pos:end="85:52"><expr pos:start="85:48" pos:end="85:52"><operator pos:start="85:48" pos:end="85:48">&amp;</operator><name pos:start="85:49" pos:end="85:52">miny</name></expr></argument>, <argument pos:start="85:55" pos:end="85:59"><expr pos:start="85:55" pos:end="85:59"><operator pos:start="85:55" pos:end="85:55">&amp;</operator><name pos:start="85:56" pos:end="85:59">maxy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:35"><expr pos:start="87:17" pos:end="87:34"><name pos:start="87:17" pos:end="87:30"><name pos:start="87:17" pos:end="87:17">s</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:30">invalidated</name></name> <operator pos:start="87:32" pos:end="87:32">=</operator> <literal type="number" pos:start="87:34" pos:end="87:34">0</literal></expr>;</expr_stmt>



                <comment type="block" pos:start="91:17" pos:end="91:41">/* ACK frame completed */</comment>

                <expr_stmt pos:start="93:17" pos:end="93:42"><expr pos:start="93:17" pos:end="93:41"><call pos:start="93:17" pos:end="93:41"><name pos:start="93:17" pos:end="93:34">pxa2xx_dma_eof_set</name><argument_list pos:start="93:35" pos:end="93:41">(<argument pos:start="93:36" pos:end="93:36"><expr pos:start="93:36" pos:end="93:36"><name pos:start="93:36" pos:end="93:36">s</name></expr></argument>, <argument pos:start="93:39" pos:end="93:40"><expr pos:start="93:39" pos:end="93:40"><name pos:start="93:39" pos:end="93:40">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></for>



    <if_stmt pos:start="101:5" pos:end="109:5"><if pos:start="101:5" pos:end="109:5">if <condition pos:start="101:8" pos:end="101:34">(<expr pos:start="101:9" pos:end="101:33"><name pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:18">control</name><index pos:start="101:19" pos:end="101:21">[<expr pos:start="101:20" pos:end="101:20"><literal type="number" pos:start="101:20" pos:end="101:20">0</literal></expr>]</index></name> <operator pos:start="101:23" pos:end="101:23">&amp;</operator> <name pos:start="101:25" pos:end="101:33">LCCR0_DIS</name></expr>)</condition> <block pos:start="101:36" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:34">

        <comment type="block" pos:start="103:9" pos:end="103:38">/* ACK last frame completed */</comment>

        <expr_stmt pos:start="105:9" pos:end="105:36"><expr pos:start="105:9" pos:end="105:35"><name pos:start="105:9" pos:end="105:21"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:18">control</name><index pos:start="105:19" pos:end="105:21">[<expr pos:start="105:20" pos:end="105:20"><literal type="number" pos:start="105:20" pos:end="105:20">0</literal></expr>]</index></name> <operator pos:start="105:23" pos:end="105:24">&amp;=</operator> <operator pos:start="105:26" pos:end="105:26">~</operator><name pos:start="105:27" pos:end="105:35">LCCR0_ENB</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:34"><expr pos:start="107:9" pos:end="107:33"><name pos:start="107:9" pos:end="107:20"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:17">status</name><index pos:start="107:18" pos:end="107:20">[<expr pos:start="107:19" pos:end="107:19"><literal type="number" pos:start="107:19" pos:end="107:19">0</literal></expr>]</index></name> <operator pos:start="107:22" pos:end="107:23">|=</operator> <name pos:start="107:25" pos:end="107:33">LCSR0_LDD</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="123:5"><if pos:start="113:5" pos:end="123:5">if <condition pos:start="113:8" pos:end="113:18">(<expr pos:start="113:9" pos:end="113:17"><name pos:start="113:9" pos:end="113:12">miny</name> <operator pos:start="113:14" pos:end="113:15">&gt;=</operator> <literal type="number" pos:start="113:17" pos:end="113:17">0</literal></expr>)</condition> <block pos:start="113:20" pos:end="123:5">{<block_content pos:start="115:9" pos:end="121:54">

        <if_stmt pos:start="115:9" pos:end="121:54"><if pos:start="115:9" pos:end="117:54">if <condition pos:start="115:12" pos:end="115:27">(<expr pos:start="115:13" pos:end="115:26"><name pos:start="115:13" pos:end="115:26"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:26">orientation</name></name></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:54"><block_content pos:start="117:13" pos:end="117:54">

            <expr_stmt pos:start="117:13" pos:end="117:54"><expr pos:start="117:13" pos:end="117:53"><call pos:start="117:13" pos:end="117:53"><name pos:start="117:13" pos:end="117:22">dpy_update</name><argument_list pos:start="117:23" pos:end="117:53">(<argument pos:start="117:24" pos:end="117:28"><expr pos:start="117:24" pos:end="117:28"><name pos:start="117:24" pos:end="117:28"><name pos:start="117:24" pos:end="117:24">s</name><operator pos:start="117:25" pos:end="117:26">-&gt;</operator><name pos:start="117:27" pos:end="117:28">ds</name></name></expr></argument>, <argument pos:start="117:31" pos:end="117:34"><expr pos:start="117:31" pos:end="117:34"><name pos:start="117:31" pos:end="117:34">miny</name></expr></argument>, <argument pos:start="117:37" pos:end="117:37"><expr pos:start="117:37" pos:end="117:37"><literal type="number" pos:start="117:37" pos:end="117:37">0</literal></expr></argument>, <argument pos:start="117:40" pos:end="117:43"><expr pos:start="117:40" pos:end="117:43"><name pos:start="117:40" pos:end="117:43">maxy</name></expr></argument>, <argument pos:start="117:46" pos:end="117:52"><expr pos:start="117:46" pos:end="117:52"><name pos:start="117:46" pos:end="117:52"><name pos:start="117:46" pos:end="117:46">s</name><operator pos:start="117:47" pos:end="117:48">-&gt;</operator><name pos:start="117:49" pos:end="117:52">xres</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="119:9" pos:end="121:54">else<block type="pseudo" pos:start="121:13" pos:end="121:54"><block_content pos:start="121:13" pos:end="121:54">

            <expr_stmt pos:start="121:13" pos:end="121:54"><expr pos:start="121:13" pos:end="121:53"><call pos:start="121:13" pos:end="121:53"><name pos:start="121:13" pos:end="121:22">dpy_update</name><argument_list pos:start="121:23" pos:end="121:53">(<argument pos:start="121:24" pos:end="121:28"><expr pos:start="121:24" pos:end="121:28"><name pos:start="121:24" pos:end="121:28"><name pos:start="121:24" pos:end="121:24">s</name><operator pos:start="121:25" pos:end="121:26">-&gt;</operator><name pos:start="121:27" pos:end="121:28">ds</name></name></expr></argument>, <argument pos:start="121:31" pos:end="121:31"><expr pos:start="121:31" pos:end="121:31"><literal type="number" pos:start="121:31" pos:end="121:31">0</literal></expr></argument>, <argument pos:start="121:34" pos:end="121:37"><expr pos:start="121:34" pos:end="121:37"><name pos:start="121:34" pos:end="121:37">miny</name></expr></argument>, <argument pos:start="121:40" pos:end="121:46"><expr pos:start="121:40" pos:end="121:46"><name pos:start="121:40" pos:end="121:46"><name pos:start="121:40" pos:end="121:40">s</name><operator pos:start="121:41" pos:end="121:42">-&gt;</operator><name pos:start="121:43" pos:end="121:46">xres</name></name></expr></argument>, <argument pos:start="121:49" pos:end="121:52"><expr pos:start="121:49" pos:end="121:52"><name pos:start="121:49" pos:end="121:52">maxy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:30"><expr pos:start="125:5" pos:end="125:29"><call pos:start="125:5" pos:end="125:29"><name pos:start="125:5" pos:end="125:26">pxa2xx_lcdc_int_update</name><argument_list pos:start="125:27" pos:end="125:29">(<argument pos:start="125:28" pos:end="125:28"><expr pos:start="125:28" pos:end="125:28"><name pos:start="125:28" pos:end="125:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:32"><expr pos:start="129:5" pos:end="129:31"><call pos:start="129:5" pos:end="129:31"><name pos:start="129:5" pos:end="129:18">qemu_irq_raise</name><argument_list pos:start="129:19" pos:end="129:31">(<argument pos:start="129:20" pos:end="129:30"><expr pos:start="129:20" pos:end="129:30"><name pos:start="129:20" pos:end="129:30"><name pos:start="129:20" pos:end="129:20">s</name><operator pos:start="129:21" pos:end="129:22">-&gt;</operator><name pos:start="129:23" pos:end="129:30">vsync_cb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
