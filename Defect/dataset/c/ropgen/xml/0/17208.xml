<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17208.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:14">av_opt_set</name><parameter_list pos:start="1:15" pos:end="1:78">(<parameter pos:start="1:16" pos:end="1:24"><decl pos:start="1:16" pos:end="1:24"><type pos:start="1:16" pos:end="1:24"><name pos:start="1:16" pos:end="1:19">void</name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:24">obj</name></decl></parameter>, <parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:42"><specifier pos:start="1:27" pos:end="1:31">const</specifier> <name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">name</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:59"><decl pos:start="1:45" pos:end="1:59"><type pos:start="1:45" pos:end="1:59"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">val</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:77"><decl pos:start="1:62" pos:end="1:77"><type pos:start="1:62" pos:end="1:77"><name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:77">search_flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="139:1">{<block_content pos:start="5:5" pos:end="137:27">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">void</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:13">dst</name></decl>, <decl pos:start="7:16" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:26">target_obj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:84"><decl pos:start="9:5" pos:end="9:83"><type pos:start="9:5" pos:end="9:20"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:18">AVOption</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">o</name> <init pos:start="9:23" pos:end="9:83">= <expr pos:start="9:25" pos:end="9:83"><call pos:start="9:25" pos:end="9:83"><name pos:start="9:25" pos:end="9:36">av_opt_find2</name><argument_list pos:start="9:37" pos:end="9:83">(<argument pos:start="9:38" pos:end="9:40"><expr pos:start="9:38" pos:end="9:40"><name pos:start="9:38" pos:end="9:40">obj</name></expr></argument>, <argument pos:start="9:43" pos:end="9:46"><expr pos:start="9:43" pos:end="9:46"><name pos:start="9:43" pos:end="9:46">name</name></expr></argument>, <argument pos:start="9:49" pos:end="9:52"><expr pos:start="9:49" pos:end="9:52"><name pos:start="9:49" pos:end="9:52">NULL</name></expr></argument>, <argument pos:start="9:55" pos:end="9:55"><expr pos:start="9:55" pos:end="9:55"><literal type="number" pos:start="9:55" pos:end="9:55">0</literal></expr></argument>, <argument pos:start="9:58" pos:end="9:69"><expr pos:start="9:58" pos:end="9:69"><name pos:start="9:58" pos:end="9:69">search_flags</name></expr></argument>, <argument pos:start="9:72" pos:end="9:82"><expr pos:start="9:72" pos:end="9:82"><operator pos:start="9:72" pos:end="9:72">&amp;</operator><name pos:start="9:73" pos:end="9:82">target_obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="13:40"><if pos:start="11:5" pos:end="13:40">if <condition pos:start="11:8" pos:end="11:26">(<expr pos:start="11:9" pos:end="11:25"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:10">o</name> <operator pos:start="11:12" pos:end="11:13">||</operator> <operator pos:start="11:15" pos:end="11:15">!</operator><name pos:start="11:16" pos:end="11:25">target_obj</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:40"><block_content pos:start="13:9" pos:end="13:40">

        <return pos:start="13:9" pos:end="13:40">return <expr pos:start="13:16" pos:end="13:39"><name pos:start="13:16" pos:end="13:39">AVERROR_OPTION_NOT_FOUND</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="25:31"><if pos:start="15:5" pos:end="25:31">if <condition pos:start="15:8" pos:end="23:87">(<expr pos:start="15:9" pos:end="23:86"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:12">val</name> <operator pos:start="15:14" pos:end="15:15">&amp;&amp;</operator> <operator pos:start="15:17" pos:end="15:17">(</operator><name pos:start="15:18" pos:end="15:24"><name pos:start="15:18" pos:end="15:18">o</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:24">type</name></name> <operator pos:start="15:26" pos:end="15:27">!=</operator> <name pos:start="15:29" pos:end="15:46">AV_OPT_TYPE_STRING</name> <operator pos:start="15:48" pos:end="15:49">&amp;&amp;</operator>

                 <name pos:start="17:18" pos:end="17:24"><name pos:start="17:18" pos:end="17:18">o</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:24">type</name></name> <operator pos:start="17:26" pos:end="17:27">!=</operator> <name pos:start="17:29" pos:end="17:49">AV_OPT_TYPE_PIXEL_FMT</name> <operator pos:start="17:51" pos:end="17:52">&amp;&amp;</operator> <name pos:start="17:54" pos:end="17:60"><name pos:start="17:54" pos:end="17:54">o</name><operator pos:start="17:55" pos:end="17:56">-&gt;</operator><name pos:start="17:57" pos:end="17:60">type</name></name> <operator pos:start="17:62" pos:end="17:63">!=</operator> <name pos:start="17:65" pos:end="17:86">AV_OPT_TYPE_SAMPLE_FMT</name> <operator pos:start="17:88" pos:end="17:89">&amp;&amp;</operator>

                 <name pos:start="19:18" pos:end="19:24"><name pos:start="19:18" pos:end="19:18">o</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:24">type</name></name> <operator pos:start="19:26" pos:end="19:27">!=</operator> <name pos:start="19:29" pos:end="19:50">AV_OPT_TYPE_IMAGE_SIZE</name> <operator pos:start="19:52" pos:end="19:53">&amp;&amp;</operator> <name pos:start="19:55" pos:end="19:61"><name pos:start="19:55" pos:end="19:55">o</name><operator pos:start="19:56" pos:end="19:57">-&gt;</operator><name pos:start="19:58" pos:end="19:61">type</name></name> <operator pos:start="19:63" pos:end="19:64">!=</operator> <name pos:start="19:66" pos:end="19:87">AV_OPT_TYPE_VIDEO_RATE</name> <operator pos:start="19:89" pos:end="19:90">&amp;&amp;</operator>

                 <name pos:start="21:18" pos:end="21:24"><name pos:start="21:18" pos:end="21:18">o</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:24">type</name></name> <operator pos:start="21:26" pos:end="21:27">!=</operator> <name pos:start="21:29" pos:end="21:48">AV_OPT_TYPE_DURATION</name> <operator pos:start="21:50" pos:end="21:51">&amp;&amp;</operator> <name pos:start="21:53" pos:end="21:59"><name pos:start="21:53" pos:end="21:53">o</name><operator pos:start="21:54" pos:end="21:55">-&gt;</operator><name pos:start="21:56" pos:end="21:59">type</name></name> <operator pos:start="21:61" pos:end="21:62">!=</operator> <name pos:start="21:64" pos:end="21:80">AV_OPT_TYPE_COLOR</name> <operator pos:start="21:82" pos:end="21:83">&amp;&amp;</operator>

                 <name pos:start="23:18" pos:end="23:24"><name pos:start="23:18" pos:end="23:18">o</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:24">type</name></name> <operator pos:start="23:26" pos:end="23:27">!=</operator> <name pos:start="23:29" pos:end="23:54">AV_OPT_TYPE_CHANNEL_LAYOUT</name> <operator pos:start="23:56" pos:end="23:57">&amp;&amp;</operator> <name pos:start="23:59" pos:end="23:65"><name pos:start="23:59" pos:end="23:59">o</name><operator pos:start="23:60" pos:end="23:61">-&gt;</operator><name pos:start="23:62" pos:end="23:65">type</name></name> <operator pos:start="23:67" pos:end="23:68">!=</operator> <name pos:start="23:70" pos:end="23:85">AV_OPT_TYPE_BOOL</name><operator pos:start="23:86" pos:end="23:86">)</operator></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:31"><block_content pos:start="25:9" pos:end="25:31">

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="31:31"><if pos:start="29:5" pos:end="31:31">if <condition pos:start="29:8" pos:end="29:40">(<expr pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:9">o</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:16">flags</name></name> <operator pos:start="29:18" pos:end="29:18">&amp;</operator> <name pos:start="29:20" pos:end="29:39">AV_OPT_FLAG_READONLY</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:31"><block_content pos:start="31:9" pos:end="31:31">

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><call pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:22">AVERROR</name><argument_list pos:start="31:23" pos:end="31:30">(<argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:46"><expr pos:start="35:5" pos:end="35:45"><name pos:start="35:5" pos:end="35:7">dst</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <operator pos:start="35:11" pos:end="35:11">(</operator><operator pos:start="35:12" pos:end="35:12">(</operator><name pos:start="35:13" pos:end="35:19">uint8_t</name> <operator pos:start="35:21" pos:end="35:21">*</operator><operator pos:start="35:22" pos:end="35:22">)</operator><name pos:start="35:23" pos:end="35:32">target_obj</name><operator pos:start="35:33" pos:end="35:33">)</operator> <operator pos:start="35:35" pos:end="35:35">+</operator> <name pos:start="35:37" pos:end="35:45"><name pos:start="35:37" pos:end="35:37">o</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:45">offset</name></name></expr>;</expr_stmt>

    <switch pos:start="37:5" pos:end="131:5">switch <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:13">o</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:19">type</name></name></expr>)</condition> <block pos:start="37:22" pos:end="131:5">{<block_content pos:start="39:5" pos:end="129:14">

    <case pos:start="39:5" pos:end="39:26">case <expr pos:start="39:10" pos:end="39:25"><name pos:start="39:10" pos:end="39:25">AV_OPT_TYPE_BOOL</name></expr>:</case>

        <return pos:start="41:9" pos:end="41:49">return <expr pos:start="41:16" pos:end="41:48"><call pos:start="41:16" pos:end="41:48"><name pos:start="41:16" pos:end="41:30">set_string_bool</name><argument_list pos:start="41:31" pos:end="41:48">(<argument pos:start="41:32" pos:end="41:34"><expr pos:start="41:32" pos:end="41:34"><name pos:start="41:32" pos:end="41:34">obj</name></expr></argument>, <argument pos:start="41:37" pos:end="41:37"><expr pos:start="41:37" pos:end="41:37"><name pos:start="41:37" pos:end="41:37">o</name></expr></argument>, <argument pos:start="41:40" pos:end="41:42"><expr pos:start="41:40" pos:end="41:42"><name pos:start="41:40" pos:end="41:42">val</name></expr></argument>, <argument pos:start="41:45" pos:end="41:47"><expr pos:start="41:45" pos:end="41:47"><name pos:start="41:45" pos:end="41:47">dst</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="43:5" pos:end="43:28">case <expr pos:start="43:10" pos:end="43:27"><name pos:start="43:10" pos:end="43:27">AV_OPT_TYPE_STRING</name></expr>:</case>

        <return pos:start="45:9" pos:end="45:44">return <expr pos:start="45:16" pos:end="45:43"><call pos:start="45:16" pos:end="45:43"><name pos:start="45:16" pos:end="45:25">set_string</name><argument_list pos:start="45:26" pos:end="45:43">(<argument pos:start="45:27" pos:end="45:29"><expr pos:start="45:27" pos:end="45:29"><name pos:start="45:27" pos:end="45:29">obj</name></expr></argument>, <argument pos:start="45:32" pos:end="45:32"><expr pos:start="45:32" pos:end="45:32"><name pos:start="45:32" pos:end="45:32">o</name></expr></argument>, <argument pos:start="45:35" pos:end="45:37"><expr pos:start="45:35" pos:end="45:37"><name pos:start="45:35" pos:end="45:37">val</name></expr></argument>, <argument pos:start="45:40" pos:end="45:42"><expr pos:start="45:40" pos:end="45:42"><name pos:start="45:40" pos:end="45:42">dst</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="47:5" pos:end="47:28">case <expr pos:start="47:10" pos:end="47:27"><name pos:start="47:10" pos:end="47:27">AV_OPT_TYPE_BINARY</name></expr>:</case>

        <return pos:start="49:9" pos:end="49:51">return <expr pos:start="49:16" pos:end="49:50"><call pos:start="49:16" pos:end="49:50"><name pos:start="49:16" pos:end="49:32">set_string_binary</name><argument_list pos:start="49:33" pos:end="49:50">(<argument pos:start="49:34" pos:end="49:36"><expr pos:start="49:34" pos:end="49:36"><name pos:start="49:34" pos:end="49:36">obj</name></expr></argument>, <argument pos:start="49:39" pos:end="49:39"><expr pos:start="49:39" pos:end="49:39"><name pos:start="49:39" pos:end="49:39">o</name></expr></argument>, <argument pos:start="49:42" pos:end="49:44"><expr pos:start="49:42" pos:end="49:44"><name pos:start="49:42" pos:end="49:44">val</name></expr></argument>, <argument pos:start="49:47" pos:end="49:49"><expr pos:start="49:47" pos:end="49:49"><name pos:start="49:47" pos:end="49:49">dst</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="51:5" pos:end="51:27">case <expr pos:start="51:10" pos:end="51:26"><name pos:start="51:10" pos:end="51:26">AV_OPT_TYPE_FLAGS</name></expr>:</case>

    <case pos:start="53:5" pos:end="53:25">case <expr pos:start="53:10" pos:end="53:24"><name pos:start="53:10" pos:end="53:24">AV_OPT_TYPE_INT</name></expr>:</case>

    <case pos:start="55:5" pos:end="55:27">case <expr pos:start="55:10" pos:end="55:26"><name pos:start="55:10" pos:end="55:26">AV_OPT_TYPE_INT64</name></expr>:</case>

    <case pos:start="57:5" pos:end="57:27">case <expr pos:start="57:10" pos:end="57:26"><name pos:start="57:10" pos:end="57:26">AV_OPT_TYPE_FLOAT</name></expr>:</case>

    <case pos:start="59:5" pos:end="59:28">case <expr pos:start="59:10" pos:end="59:27"><name pos:start="59:10" pos:end="59:27">AV_OPT_TYPE_DOUBLE</name></expr>:</case>

    <case pos:start="61:5" pos:end="61:30">case <expr pos:start="61:10" pos:end="61:29"><name pos:start="61:10" pos:end="61:29">AV_OPT_TYPE_RATIONAL</name></expr>:</case>

        <return pos:start="63:9" pos:end="63:63">return <expr pos:start="63:16" pos:end="63:62"><call pos:start="63:16" pos:end="63:62"><name pos:start="63:16" pos:end="63:32">set_string_number</name><argument_list pos:start="63:33" pos:end="63:62">(<argument pos:start="63:34" pos:end="63:36"><expr pos:start="63:34" pos:end="63:36"><name pos:start="63:34" pos:end="63:36">obj</name></expr></argument>, <argument pos:start="63:39" pos:end="63:48"><expr pos:start="63:39" pos:end="63:48"><name pos:start="63:39" pos:end="63:48">target_obj</name></expr></argument>, <argument pos:start="63:51" pos:end="63:51"><expr pos:start="63:51" pos:end="63:51"><name pos:start="63:51" pos:end="63:51">o</name></expr></argument>, <argument pos:start="63:54" pos:end="63:56"><expr pos:start="63:54" pos:end="63:56"><name pos:start="63:54" pos:end="63:56">val</name></expr></argument>, <argument pos:start="63:59" pos:end="63:61"><expr pos:start="63:59" pos:end="63:61"><name pos:start="63:59" pos:end="63:61">dst</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="65:5" pos:end="65:32">case <expr pos:start="65:10" pos:end="65:31"><name pos:start="65:10" pos:end="65:31">AV_OPT_TYPE_IMAGE_SIZE</name></expr>:</case>

        <return pos:start="67:9" pos:end="67:55">return <expr pos:start="67:16" pos:end="67:54"><call pos:start="67:16" pos:end="67:54"><name pos:start="67:16" pos:end="67:36">set_string_image_size</name><argument_list pos:start="67:37" pos:end="67:54">(<argument pos:start="67:38" pos:end="67:40"><expr pos:start="67:38" pos:end="67:40"><name pos:start="67:38" pos:end="67:40">obj</name></expr></argument>, <argument pos:start="67:43" pos:end="67:43"><expr pos:start="67:43" pos:end="67:43"><name pos:start="67:43" pos:end="67:43">o</name></expr></argument>, <argument pos:start="67:46" pos:end="67:48"><expr pos:start="67:46" pos:end="67:48"><name pos:start="67:46" pos:end="67:48">val</name></expr></argument>, <argument pos:start="67:51" pos:end="67:53"><expr pos:start="67:51" pos:end="67:53"><name pos:start="67:51" pos:end="67:53">dst</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="69:5" pos:end="69:32">case <expr pos:start="69:10" pos:end="69:31"><name pos:start="69:10" pos:end="69:31">AV_OPT_TYPE_VIDEO_RATE</name></expr>:</case>

        <return pos:start="71:9" pos:end="71:55">return <expr pos:start="71:16" pos:end="71:54"><call pos:start="71:16" pos:end="71:54"><name pos:start="71:16" pos:end="71:36">set_string_video_rate</name><argument_list pos:start="71:37" pos:end="71:54">(<argument pos:start="71:38" pos:end="71:40"><expr pos:start="71:38" pos:end="71:40"><name pos:start="71:38" pos:end="71:40">obj</name></expr></argument>, <argument pos:start="71:43" pos:end="71:43"><expr pos:start="71:43" pos:end="71:43"><name pos:start="71:43" pos:end="71:43">o</name></expr></argument>, <argument pos:start="71:46" pos:end="71:48"><expr pos:start="71:46" pos:end="71:48"><name pos:start="71:46" pos:end="71:48">val</name></expr></argument>, <argument pos:start="71:51" pos:end="71:53"><expr pos:start="71:51" pos:end="71:53"><name pos:start="71:51" pos:end="71:53">dst</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="73:5" pos:end="73:31">case <expr pos:start="73:10" pos:end="73:30"><name pos:start="73:10" pos:end="73:30">AV_OPT_TYPE_PIXEL_FMT</name></expr>:</case>

        <return pos:start="75:9" pos:end="75:54">return <expr pos:start="75:16" pos:end="75:53"><call pos:start="75:16" pos:end="75:53"><name pos:start="75:16" pos:end="75:35">set_string_pixel_fmt</name><argument_list pos:start="75:36" pos:end="75:53">(<argument pos:start="75:37" pos:end="75:39"><expr pos:start="75:37" pos:end="75:39"><name pos:start="75:37" pos:end="75:39">obj</name></expr></argument>, <argument pos:start="75:42" pos:end="75:42"><expr pos:start="75:42" pos:end="75:42"><name pos:start="75:42" pos:end="75:42">o</name></expr></argument>, <argument pos:start="75:45" pos:end="75:47"><expr pos:start="75:45" pos:end="75:47"><name pos:start="75:45" pos:end="75:47">val</name></expr></argument>, <argument pos:start="75:50" pos:end="75:52"><expr pos:start="75:50" pos:end="75:52"><name pos:start="75:50" pos:end="75:52">dst</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="77:5" pos:end="77:32">case <expr pos:start="77:10" pos:end="77:31"><name pos:start="77:10" pos:end="77:31">AV_OPT_TYPE_SAMPLE_FMT</name></expr>:</case>

        <return pos:start="79:9" pos:end="79:55">return <expr pos:start="79:16" pos:end="79:54"><call pos:start="79:16" pos:end="79:54"><name pos:start="79:16" pos:end="79:36">set_string_sample_fmt</name><argument_list pos:start="79:37" pos:end="79:54">(<argument pos:start="79:38" pos:end="79:40"><expr pos:start="79:38" pos:end="79:40"><name pos:start="79:38" pos:end="79:40">obj</name></expr></argument>, <argument pos:start="79:43" pos:end="79:43"><expr pos:start="79:43" pos:end="79:43"><name pos:start="79:43" pos:end="79:43">o</name></expr></argument>, <argument pos:start="79:46" pos:end="79:48"><expr pos:start="79:46" pos:end="79:48"><name pos:start="79:46" pos:end="79:48">val</name></expr></argument>, <argument pos:start="79:51" pos:end="79:53"><expr pos:start="79:51" pos:end="79:53"><name pos:start="79:51" pos:end="79:53">dst</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="81:5" pos:end="81:30">case <expr pos:start="81:10" pos:end="81:29"><name pos:start="81:10" pos:end="81:29">AV_OPT_TYPE_DURATION</name></expr>:</case>

        <if_stmt pos:start="83:9" pos:end="97:9"><if pos:start="83:9" pos:end="89:9">if <condition pos:start="83:12" pos:end="83:17">(<expr pos:start="83:13" pos:end="83:16"><operator pos:start="83:13" pos:end="83:13">!</operator><name pos:start="83:14" pos:end="83:16">val</name></expr>)</condition> <block pos:start="83:19" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:21">

            <expr_stmt pos:start="85:13" pos:end="85:32"><expr pos:start="85:13" pos:end="85:31"><operator pos:start="85:13" pos:end="85:13">*</operator><operator pos:start="85:14" pos:end="85:14">(</operator><name pos:start="85:15" pos:end="85:21">int64_t</name> <operator pos:start="85:23" pos:end="85:23">*</operator><operator pos:start="85:24" pos:end="85:24">)</operator><name pos:start="85:25" pos:end="85:27">dst</name> <operator pos:start="85:29" pos:end="85:29">=</operator> <literal type="number" pos:start="85:31" pos:end="85:31">0</literal></expr>;</expr_stmt>

            <return pos:start="87:13" pos:end="87:21">return <expr pos:start="87:20" pos:end="87:20"><literal type="number" pos:start="87:20" pos:end="87:20">0</literal></expr>;</return>

        </block_content>}</block></if> <else pos:start="89:11" pos:end="97:9">else <block pos:start="89:16" pos:end="97:9">{<block_content pos:start="91:13" pos:end="95:23">

            <if_stmt pos:start="91:13" pos:end="93:100"><if pos:start="91:13" pos:end="93:100">if <condition pos:start="91:16" pos:end="91:55">(<expr pos:start="91:17" pos:end="91:54"><operator pos:start="91:17" pos:end="91:17">(</operator><name pos:start="91:18" pos:end="91:20">ret</name> <operator pos:start="91:22" pos:end="91:22">=</operator> <call pos:start="91:24" pos:end="91:49"><name pos:start="91:24" pos:end="91:36">av_parse_time</name><argument_list pos:start="91:37" pos:end="91:49">(<argument pos:start="91:38" pos:end="91:40"><expr pos:start="91:38" pos:end="91:40"><name pos:start="91:38" pos:end="91:40">dst</name></expr></argument>, <argument pos:start="91:43" pos:end="91:45"><expr pos:start="91:43" pos:end="91:45"><name pos:start="91:43" pos:end="91:45">val</name></expr></argument>, <argument pos:start="91:48" pos:end="91:48"><expr pos:start="91:48" pos:end="91:48"><literal type="number" pos:start="91:48" pos:end="91:48">1</literal></expr></argument>)</argument_list></call><operator pos:start="91:50" pos:end="91:50">)</operator> <operator pos:start="91:52" pos:end="91:52">&lt;</operator> <literal type="number" pos:start="91:54" pos:end="91:54">0</literal></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:100"><block_content pos:start="93:17" pos:end="93:100">

                <expr_stmt pos:start="93:17" pos:end="93:100"><expr pos:start="93:17" pos:end="93:99"><call pos:start="93:17" pos:end="93:99"><name pos:start="93:17" pos:end="93:22">av_log</name><argument_list pos:start="93:23" pos:end="93:99">(<argument pos:start="93:24" pos:end="93:26"><expr pos:start="93:24" pos:end="93:26"><name pos:start="93:24" pos:end="93:26">obj</name></expr></argument>, <argument pos:start="93:29" pos:end="93:40"><expr pos:start="93:29" pos:end="93:40"><name pos:start="93:29" pos:end="93:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:43" pos:end="93:93"><expr pos:start="93:43" pos:end="93:93"><literal type="string" pos:start="93:43" pos:end="93:93">"Unable to parse option value \"%s\" as duration\n"</literal></expr></argument>, <argument pos:start="93:96" pos:end="93:98"><expr pos:start="93:96" pos:end="93:98"><name pos:start="93:96" pos:end="93:98">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="95:13" pos:end="95:23">return <expr pos:start="95:20" pos:end="95:22"><name pos:start="95:20" pos:end="95:22">ret</name></expr>;</return>

        </block_content>}</block></else></if_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    <case pos:start="101:5" pos:end="101:27">case <expr pos:start="101:10" pos:end="101:26"><name pos:start="101:10" pos:end="101:26">AV_OPT_TYPE_COLOR</name></expr>:</case>

        <return pos:start="103:9" pos:end="103:50">return <expr pos:start="103:16" pos:end="103:49"><call pos:start="103:16" pos:end="103:49"><name pos:start="103:16" pos:end="103:31">set_string_color</name><argument_list pos:start="103:32" pos:end="103:49">(<argument pos:start="103:33" pos:end="103:35"><expr pos:start="103:33" pos:end="103:35"><name pos:start="103:33" pos:end="103:35">obj</name></expr></argument>, <argument pos:start="103:38" pos:end="103:38"><expr pos:start="103:38" pos:end="103:38"><name pos:start="103:38" pos:end="103:38">o</name></expr></argument>, <argument pos:start="103:41" pos:end="103:43"><expr pos:start="103:41" pos:end="103:43"><name pos:start="103:41" pos:end="103:43">val</name></expr></argument>, <argument pos:start="103:46" pos:end="103:48"><expr pos:start="103:46" pos:end="103:48"><name pos:start="103:46" pos:end="103:48">dst</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="105:5" pos:end="105:36">case <expr pos:start="105:10" pos:end="105:35"><name pos:start="105:10" pos:end="105:35">AV_OPT_TYPE_CHANNEL_LAYOUT</name></expr>:</case>

        <if_stmt pos:start="107:9" pos:end="127:9"><if pos:start="107:9" pos:end="111:9">if <condition pos:start="107:12" pos:end="107:41">(<expr pos:start="107:13" pos:end="107:40"><operator pos:start="107:13" pos:end="107:13">!</operator><name pos:start="107:14" pos:end="107:16">val</name> <operator pos:start="107:18" pos:end="107:19">||</operator> <operator pos:start="107:21" pos:end="107:21">!</operator><call pos:start="107:22" pos:end="107:40"><name pos:start="107:22" pos:end="107:27">strcmp</name><argument_list pos:start="107:28" pos:end="107:40">(<argument pos:start="107:29" pos:end="107:31"><expr pos:start="107:29" pos:end="107:31"><name pos:start="107:29" pos:end="107:31">val</name></expr></argument>, <argument pos:start="107:34" pos:end="107:39"><expr pos:start="107:34" pos:end="107:39"><literal type="string" pos:start="107:34" pos:end="107:39">"none"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:43" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:32">

            <expr_stmt pos:start="109:13" pos:end="109:32"><expr pos:start="109:13" pos:end="109:31"><operator pos:start="109:13" pos:end="109:13">*</operator><operator pos:start="109:14" pos:end="109:14">(</operator><name pos:start="109:15" pos:end="109:21">int64_t</name> <operator pos:start="109:23" pos:end="109:23">*</operator><operator pos:start="109:24" pos:end="109:24">)</operator><name pos:start="109:25" pos:end="109:27">dst</name> <operator pos:start="109:29" pos:end="109:29">=</operator> <literal type="number" pos:start="109:31" pos:end="109:31">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="111:11" pos:end="127:9">else <block pos:start="111:16" pos:end="127:9">{<block_content pos:start="113:13" pos:end="125:23">

            <decl_stmt pos:start="113:13" pos:end="113:52"><decl pos:start="113:13" pos:end="113:51"><type pos:start="113:13" pos:end="113:19"><name pos:start="113:13" pos:end="113:19">int64_t</name></type> <name pos:start="113:21" pos:end="113:22">cl</name> <init pos:start="113:24" pos:end="113:51">= <expr pos:start="113:26" pos:end="113:51"><call pos:start="113:26" pos:end="113:51"><name pos:start="113:26" pos:end="113:46">av_get_channel_layout</name><argument_list pos:start="113:47" pos:end="113:51">(<argument pos:start="113:48" pos:end="113:50"><expr pos:start="113:48" pos:end="113:50"><name pos:start="113:48" pos:end="113:50">val</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="115:13" pos:end="121:13"><if pos:start="115:13" pos:end="121:13">if <condition pos:start="115:16" pos:end="115:20">(<expr pos:start="115:17" pos:end="115:19"><operator pos:start="115:17" pos:end="115:17">!</operator><name pos:start="115:18" pos:end="115:19">cl</name></expr>)</condition> <block pos:start="115:22" pos:end="121:13">{<block_content pos:start="117:17" pos:end="119:38">

                <expr_stmt pos:start="117:17" pos:end="117:106"><expr pos:start="117:17" pos:end="117:105"><call pos:start="117:17" pos:end="117:105"><name pos:start="117:17" pos:end="117:22">av_log</name><argument_list pos:start="117:23" pos:end="117:105">(<argument pos:start="117:24" pos:end="117:26"><expr pos:start="117:24" pos:end="117:26"><name pos:start="117:24" pos:end="117:26">obj</name></expr></argument>, <argument pos:start="117:29" pos:end="117:40"><expr pos:start="117:29" pos:end="117:40"><name pos:start="117:29" pos:end="117:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="117:43" pos:end="117:99"><expr pos:start="117:43" pos:end="117:99"><literal type="string" pos:start="117:43" pos:end="117:99">"Unable to parse option value \"%s\" as channel layout\n"</literal></expr></argument>, <argument pos:start="117:102" pos:end="117:104"><expr pos:start="117:102" pos:end="117:104"><name pos:start="117:102" pos:end="117:104">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:38"><expr pos:start="119:17" pos:end="119:37"><name pos:start="119:17" pos:end="119:19">ret</name> <operator pos:start="119:21" pos:end="119:21">=</operator> <call pos:start="119:23" pos:end="119:37"><name pos:start="119:23" pos:end="119:29">AVERROR</name><argument_list pos:start="119:30" pos:end="119:37">(<argument pos:start="119:31" pos:end="119:36"><expr pos:start="119:31" pos:end="119:36"><name pos:start="119:31" pos:end="119:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:33"><expr pos:start="123:13" pos:end="123:32"><operator pos:start="123:13" pos:end="123:13">*</operator><operator pos:start="123:14" pos:end="123:14">(</operator><name pos:start="123:15" pos:end="123:21">int64_t</name> <operator pos:start="123:23" pos:end="123:23">*</operator><operator pos:start="123:24" pos:end="123:24">)</operator><name pos:start="123:25" pos:end="123:27">dst</name> <operator pos:start="123:29" pos:end="123:29">=</operator> <name pos:start="123:31" pos:end="123:32">cl</name></expr>;</expr_stmt>

            <return pos:start="125:13" pos:end="125:23">return <expr pos:start="125:20" pos:end="125:22"><name pos:start="125:20" pos:end="125:22">ret</name></expr>;</return>

        </block_content>}</block></else></if_stmt>

        <break pos:start="129:9" pos:end="129:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="135:5" pos:end="135:56"><expr pos:start="135:5" pos:end="135:55"><call pos:start="135:5" pos:end="135:55"><name pos:start="135:5" pos:end="135:10">av_log</name><argument_list pos:start="135:11" pos:end="135:55">(<argument pos:start="135:12" pos:end="135:14"><expr pos:start="135:12" pos:end="135:14"><name pos:start="135:12" pos:end="135:14">obj</name></expr></argument>, <argument pos:start="135:17" pos:end="135:28"><expr pos:start="135:17" pos:end="135:28"><name pos:start="135:17" pos:end="135:28">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="135:31" pos:end="135:54"><expr pos:start="135:31" pos:end="135:54"><literal type="string" pos:start="135:31" pos:end="135:54">"Invalid option type.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="137:5" pos:end="137:27">return <expr pos:start="137:12" pos:end="137:26"><call pos:start="137:12" pos:end="137:26"><name pos:start="137:12" pos:end="137:18">AVERROR</name><argument_list pos:start="137:19" pos:end="137:26">(<argument pos:start="137:20" pos:end="137:25"><expr pos:start="137:20" pos:end="137:25"><name pos:start="137:20" pos:end="137:25">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
