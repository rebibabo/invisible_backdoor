<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11279.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">read_channel_params</name><parameter_list pos:start="1:31" pos:end="3:67">(<parameter pos:start="1:32" pos:end="1:50"><decl pos:start="1:32" pos:end="1:50"><type pos:start="1:32" pos:end="1:50"><name pos:start="1:32" pos:end="1:47">MLPDecodeContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">m</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:71"><decl pos:start="1:53" pos:end="1:71"><type pos:start="1:53" pos:end="1:71"><name pos:start="1:53" pos:end="1:60">unsigned</name> <name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:71">substr</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:49"><decl pos:start="3:32" pos:end="3:49"><type pos:start="3:32" pos:end="3:49"><name pos:start="3:32" pos:end="3:44">GetBitContext</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:49">gbp</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:66"><decl pos:start="3:52" pos:end="3:66"><type pos:start="3:52" pos:end="3:66"><name pos:start="3:52" pos:end="3:59">unsigned</name> <name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:66">ch</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:13">

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">ChannelParams</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">cp</name> <init pos:start="7:23" pos:end="7:46">= <expr pos:start="7:25" pos:end="7:46"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:46"><name pos:start="7:26" pos:end="7:26">m</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:42">channel_params</name><index pos:start="7:43" pos:end="7:46">[<expr pos:start="7:44" pos:end="7:45"><name pos:start="7:44" pos:end="7:45">ch</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:48"><decl pos:start="9:5" pos:end="9:47"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">FilterParams</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">fir</name> <init pos:start="9:23" pos:end="9:47">= <expr pos:start="9:25" pos:end="9:47"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:47"><name pos:start="9:26" pos:end="9:27">cp</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:42">filter_params</name><index pos:start="9:43" pos:end="9:47">[<expr pos:start="9:44" pos:end="9:46"><name pos:start="9:44" pos:end="9:46">FIR</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:47"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">FilterParams</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:21">iir</name> <init pos:start="11:23" pos:end="11:47">= <expr pos:start="11:25" pos:end="11:47"><operator pos:start="11:25" pos:end="11:25">&amp;</operator><name pos:start="11:26" pos:end="11:47"><name pos:start="11:26" pos:end="11:27">cp</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:42">filter_params</name><index pos:start="11:43" pos:end="11:47">[<expr pos:start="11:44" pos:end="11:46"><name pos:start="11:44" pos:end="11:46">IIR</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:40"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">SubStream</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:16">s</name> <init pos:start="13:18" pos:end="13:40">= <expr pos:start="13:20" pos:end="13:40"><operator pos:start="13:20" pos:end="13:20">&amp;</operator><name pos:start="13:21" pos:end="13:40"><name pos:start="13:21" pos:end="13:21">m</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:32">substream</name><index pos:start="13:33" pos:end="13:40">[<expr pos:start="13:34" pos:end="13:39"><name pos:start="13:34" pos:end="13:39">substr</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:26"><if pos:start="17:5" pos:end="23:26">if <condition pos:start="17:8" pos:end="17:44">(<expr pos:start="17:9" pos:end="17:43"><name pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:31">param_presence_flags</name></name> <operator pos:start="17:33" pos:end="17:33">&amp;</operator> <name pos:start="17:35" pos:end="17:43">PARAM_FIR</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="23:26"><block_content pos:start="19:9" pos:end="23:26">

        <if_stmt pos:start="19:9" pos:end="23:26"><if pos:start="19:9" pos:end="23:26">if <condition pos:start="19:12" pos:end="19:27">(<expr pos:start="19:13" pos:end="19:26"><call pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:21">get_bits1</name><argument_list pos:start="19:22" pos:end="19:26">(<argument pos:start="19:23" pos:end="19:25"><expr pos:start="19:23" pos:end="19:25"><name pos:start="19:23" pos:end="19:25">gbp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="23:26"><block_content pos:start="21:13" pos:end="23:26">

            <if_stmt pos:start="21:13" pos:end="23:26"><if pos:start="21:13" pos:end="23:26">if <condition pos:start="21:16" pos:end="21:56">(<expr pos:start="21:17" pos:end="21:55"><call pos:start="21:17" pos:end="21:51"><name pos:start="21:17" pos:end="21:34">read_filter_params</name><argument_list pos:start="21:35" pos:end="21:51">(<argument pos:start="21:36" pos:end="21:36"><expr pos:start="21:36" pos:end="21:36"><name pos:start="21:36" pos:end="21:36">m</name></expr></argument>, <argument pos:start="21:39" pos:end="21:41"><expr pos:start="21:39" pos:end="21:41"><name pos:start="21:39" pos:end="21:41">gbp</name></expr></argument>, <argument pos:start="21:44" pos:end="21:45"><expr pos:start="21:44" pos:end="21:45"><name pos:start="21:44" pos:end="21:45">ch</name></expr></argument>, <argument pos:start="21:48" pos:end="21:50"><expr pos:start="21:48" pos:end="21:50"><name pos:start="21:48" pos:end="21:50">FIR</name></expr></argument>)</argument_list></call> <operator pos:start="21:53" pos:end="21:53">&lt;</operator> <literal type="number" pos:start="21:55" pos:end="21:55">0</literal></expr>)</condition><block type="pseudo" pos:start="23:17" pos:end="23:26"><block_content pos:start="23:17" pos:end="23:26">

                <return pos:start="23:17" pos:end="23:26">return <expr pos:start="23:24" pos:end="23:25"><operator pos:start="23:24" pos:end="23:24">-</operator><literal type="number" pos:start="23:25" pos:end="23:25">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="33:26"><if pos:start="27:5" pos:end="33:26">if <condition pos:start="27:8" pos:end="27:44">(<expr pos:start="27:9" pos:end="27:43"><name pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:31">param_presence_flags</name></name> <operator pos:start="27:33" pos:end="27:33">&amp;</operator> <name pos:start="27:35" pos:end="27:43">PARAM_IIR</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="33:26"><block_content pos:start="29:9" pos:end="33:26">

        <if_stmt pos:start="29:9" pos:end="33:26"><if pos:start="29:9" pos:end="33:26">if <condition pos:start="29:12" pos:end="29:27">(<expr pos:start="29:13" pos:end="29:26"><call pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:21">get_bits1</name><argument_list pos:start="29:22" pos:end="29:26">(<argument pos:start="29:23" pos:end="29:25"><expr pos:start="29:23" pos:end="29:25"><name pos:start="29:23" pos:end="29:25">gbp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="33:26"><block_content pos:start="31:13" pos:end="33:26">

            <if_stmt pos:start="31:13" pos:end="33:26"><if pos:start="31:13" pos:end="33:26">if <condition pos:start="31:16" pos:end="31:56">(<expr pos:start="31:17" pos:end="31:55"><call pos:start="31:17" pos:end="31:51"><name pos:start="31:17" pos:end="31:34">read_filter_params</name><argument_list pos:start="31:35" pos:end="31:51">(<argument pos:start="31:36" pos:end="31:36"><expr pos:start="31:36" pos:end="31:36"><name pos:start="31:36" pos:end="31:36">m</name></expr></argument>, <argument pos:start="31:39" pos:end="31:41"><expr pos:start="31:39" pos:end="31:41"><name pos:start="31:39" pos:end="31:41">gbp</name></expr></argument>, <argument pos:start="31:44" pos:end="31:45"><expr pos:start="31:44" pos:end="31:45"><name pos:start="31:44" pos:end="31:45">ch</name></expr></argument>, <argument pos:start="31:48" pos:end="31:50"><expr pos:start="31:48" pos:end="31:50"><name pos:start="31:48" pos:end="31:50">IIR</name></expr></argument>)</argument_list></call> <operator pos:start="31:53" pos:end="31:53">&lt;</operator> <literal type="number" pos:start="31:55" pos:end="31:55">0</literal></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:26"><block_content pos:start="33:17" pos:end="33:26">

                <return pos:start="33:17" pos:end="33:26">return <expr pos:start="33:24" pos:end="33:25"><operator pos:start="33:24" pos:end="33:24">-</operator><literal type="number" pos:start="33:25" pos:end="33:25">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="47:5"><if pos:start="37:5" pos:end="47:5">if <condition pos:start="37:8" pos:end="39:33">(<expr pos:start="37:9" pos:end="39:32"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:11">fir</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:18">order</name></name> <operator pos:start="37:20" pos:end="37:21">&amp;&amp;</operator> <name pos:start="37:23" pos:end="37:32"><name pos:start="37:23" pos:end="37:25">iir</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:32">order</name></name> <operator pos:start="37:34" pos:end="37:35">&amp;&amp;</operator>

        <name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:11">fir</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:18">shift</name></name> <operator pos:start="39:20" pos:end="39:21">!=</operator> <name pos:start="39:23" pos:end="39:32"><name pos:start="39:23" pos:end="39:25">iir</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:32">shift</name></name></expr>)</condition> <block pos:start="39:35" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:18">

        <expr_stmt pos:start="41:9" pos:end="43:70"><expr pos:start="41:9" pos:end="43:69"><call pos:start="41:9" pos:end="43:69"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="43:69">(<argument pos:start="41:16" pos:end="41:23"><expr pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:16">m</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:23">avctx</name></name></expr></argument>, <argument pos:start="41:26" pos:end="41:37"><expr pos:start="41:26" pos:end="41:37"><name pos:start="41:26" pos:end="41:37">AV_LOG_ERROR</name></expr></argument>,

                <argument pos:start="43:17" pos:end="43:68"><expr pos:start="43:17" pos:end="43:68"><literal type="string" pos:start="43:17" pos:end="43:68">"FIR and IIR filters must use the same precision.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:18">return <expr pos:start="45:16" pos:end="45:17"><operator pos:start="45:16" pos:end="45:16">-</operator><literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="49:5" pos:end="57:48">/* The FIR and IIR filters must have the same precision.

        * To simplify the filtering code, only the precision of the

        * FIR filter is considered. If only the IIR filter is employed,

        * the FIR filter precision is set to that of the IIR filter, so

        * that the filtering code can use it. */</comment>

    <if_stmt pos:start="59:5" pos:end="61:32"><if pos:start="59:5" pos:end="61:32">if <condition pos:start="59:8" pos:end="59:34">(<expr pos:start="59:9" pos:end="59:33"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:19"><name pos:start="59:10" pos:end="59:12">fir</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:19">order</name></name> <operator pos:start="59:21" pos:end="59:22">&amp;&amp;</operator> <name pos:start="59:24" pos:end="59:33"><name pos:start="59:24" pos:end="59:26">iir</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:33">order</name></name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:32"><block_content pos:start="61:9" pos:end="61:32">

        <expr_stmt pos:start="61:9" pos:end="61:32"><expr pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:11">fir</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:18">shift</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:31"><name pos:start="61:22" pos:end="61:24">iir</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:31">shift</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="69:49"><if pos:start="65:5" pos:end="69:49">if <condition pos:start="65:8" pos:end="65:51">(<expr pos:start="65:9" pos:end="65:50"><name pos:start="65:9" pos:end="65:31"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:31">param_presence_flags</name></name> <operator pos:start="65:33" pos:end="65:33">&amp;</operator> <name pos:start="65:35" pos:end="65:50">PARAM_HUFFOFFSET</name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="69:49"><block_content pos:start="67:9" pos:end="69:49">

        <if_stmt pos:start="67:9" pos:end="69:49"><if pos:start="67:9" pos:end="69:49">if <condition pos:start="67:12" pos:end="67:27">(<expr pos:start="67:13" pos:end="67:26"><call pos:start="67:13" pos:end="67:26"><name pos:start="67:13" pos:end="67:21">get_bits1</name><argument_list pos:start="67:22" pos:end="67:26">(<argument pos:start="67:23" pos:end="67:25"><expr pos:start="67:23" pos:end="67:25"><name pos:start="67:23" pos:end="67:25">gbp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:49"><block_content pos:start="69:13" pos:end="69:49">

            <expr_stmt pos:start="69:13" pos:end="69:49"><expr pos:start="69:13" pos:end="69:48"><name pos:start="69:13" pos:end="69:27"><name pos:start="69:13" pos:end="69:14">cp</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:27">huff_offset</name></name> <operator pos:start="69:29" pos:end="69:29">=</operator> <call pos:start="69:31" pos:end="69:48"><name pos:start="69:31" pos:end="69:39">get_sbits</name><argument_list pos:start="69:40" pos:end="69:48">(<argument pos:start="69:41" pos:end="69:43"><expr pos:start="69:41" pos:end="69:43"><name pos:start="69:41" pos:end="69:43">gbp</name></expr></argument>, <argument pos:start="69:46" pos:end="69:47"><expr pos:start="69:46" pos:end="69:47"><literal type="number" pos:start="69:46" pos:end="69:47">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:37"><expr pos:start="73:5" pos:end="73:36"><name pos:start="73:5" pos:end="73:16"><name pos:start="73:5" pos:end="73:6">cp</name><operator pos:start="73:7" pos:end="73:8">-&gt;</operator><name pos:start="73:9" pos:end="73:16">codebook</name></name>  <operator pos:start="73:19" pos:end="73:19">=</operator> <call pos:start="73:21" pos:end="73:36"><name pos:start="73:21" pos:end="73:28">get_bits</name><argument_list pos:start="73:29" pos:end="73:36">(<argument pos:start="73:30" pos:end="73:32"><expr pos:start="73:30" pos:end="73:32"><name pos:start="73:30" pos:end="73:32">gbp</name></expr></argument>, <argument pos:start="73:35" pos:end="73:35"><expr pos:start="73:35" pos:end="73:35"><literal type="number" pos:start="73:35" pos:end="73:35">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:37"><expr pos:start="75:5" pos:end="75:36"><name pos:start="75:5" pos:end="75:17"><name pos:start="75:5" pos:end="75:6">cp</name><operator pos:start="75:7" pos:end="75:8">-&gt;</operator><name pos:start="75:9" pos:end="75:17">huff_lsbs</name></name> <operator pos:start="75:19" pos:end="75:19">=</operator> <call pos:start="75:21" pos:end="75:36"><name pos:start="75:21" pos:end="75:28">get_bits</name><argument_list pos:start="75:29" pos:end="75:36">(<argument pos:start="75:30" pos:end="75:32"><expr pos:start="75:30" pos:end="75:32"><name pos:start="75:30" pos:end="75:32">gbp</name></expr></argument>, <argument pos:start="75:35" pos:end="75:35"><expr pos:start="75:35" pos:end="75:35"><literal type="number" pos:start="75:35" pos:end="75:35">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:62"><expr pos:start="79:5" pos:end="79:61"><name pos:start="79:5" pos:end="79:24"><name pos:start="79:5" pos:end="79:6">cp</name><operator pos:start="79:7" pos:end="79:8">-&gt;</operator><name pos:start="79:9" pos:end="79:24">sign_huff_offset</name></name> <operator pos:start="79:26" pos:end="79:26">=</operator> <call pos:start="79:28" pos:end="79:61"><name pos:start="79:28" pos:end="79:46">calculate_sign_huff</name><argument_list pos:start="79:47" pos:end="79:61">(<argument pos:start="79:48" pos:end="79:48"><expr pos:start="79:48" pos:end="79:48"><name pos:start="79:48" pos:end="79:48">m</name></expr></argument>, <argument pos:start="79:51" pos:end="79:56"><expr pos:start="79:51" pos:end="79:56"><name pos:start="79:51" pos:end="79:56">substr</name></expr></argument>, <argument pos:start="79:59" pos:end="79:60"><expr pos:start="79:59" pos:end="79:60"><name pos:start="79:59" pos:end="79:60">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:24">/* TODO: validate */</comment>



    <return pos:start="87:5" pos:end="87:13">return <expr pos:start="87:12" pos:end="87:12"><literal type="number" pos:start="87:12" pos:end="87:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
