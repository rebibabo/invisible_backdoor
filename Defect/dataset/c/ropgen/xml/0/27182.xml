<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27182.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">superio_ioport_writeb</name><parameter_list pos:start="1:34" pos:end="1:77">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">opaque</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">uint32_t</name></type> <name pos:start="1:58" pos:end="1:61">addr</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:76"><decl pos:start="1:64" pos:end="1:76"><type pos:start="1:64" pos:end="1:76"><name pos:start="1:64" pos:end="1:71">uint32_t</name></type> <name pos:start="1:73" pos:end="1:76">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:5">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">can_write</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">SuperIOConfig</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:31">superio_conf</name> <init pos:start="7:33" pos:end="7:40">= <expr pos:start="7:35" pos:end="7:40"><name pos:start="7:35" pos:end="7:40">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:77"><expr pos:start="11:5" pos:end="11:76"><call pos:start="11:5" pos:end="11:76"><name pos:start="11:5" pos:end="11:11">DPRINTF</name><argument_list pos:start="11:12" pos:end="11:76">(<argument pos:start="11:13" pos:end="11:63"><expr pos:start="11:13" pos:end="11:63"><literal type="string" pos:start="11:13" pos:end="11:63">"superio_ioport_writeb  address 0x%x  val 0x%x  \n"</literal></expr></argument>, <argument pos:start="11:66" pos:end="11:69"><expr pos:start="11:66" pos:end="11:69"><name pos:start="11:66" pos:end="11:69">addr</name></expr></argument>, <argument pos:start="11:72" pos:end="11:75"><expr pos:start="11:72" pos:end="11:75"><name pos:start="11:72" pos:end="11:75">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="89:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:22">(<expr pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:12">addr</name> <operator pos:start="13:14" pos:end="13:15">==</operator> <literal type="number" pos:start="13:17" pos:end="13:21">0x3f0</literal></expr>)</condition> <block pos:start="13:24" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:42">

        <expr_stmt pos:start="15:9" pos:end="15:42"><expr pos:start="15:9" pos:end="15:41"><name pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:20">superio_conf</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:27">index</name></name> <operator pos:start="15:29" pos:end="15:29">=</operator> <name pos:start="15:31" pos:end="15:34">data</name> <operator pos:start="15:36" pos:end="15:36">&amp;</operator> <literal type="number" pos:start="15:38" pos:end="15:41">0xff</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="89:5">else <block pos:start="17:12" pos:end="89:5">{<block_content pos:start="21:9" pos:end="87:64">

        <comment type="block" pos:start="19:9" pos:end="19:19">/* 0x3f1 */</comment>

        <switch pos:start="21:9" pos:end="85:9">switch <condition pos:start="21:16" pos:end="21:36">(<expr pos:start="21:17" pos:end="21:35"><name pos:start="21:17" pos:end="21:35"><name pos:start="21:17" pos:end="21:28">superio_conf</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:35">index</name></name></expr>)</condition> <block pos:start="21:38" pos:end="85:9">{<block_content pos:start="23:9" pos:end="83:13">

        <case pos:start="23:9" pos:end="23:27">case <expr pos:start="23:14" pos:end="23:26"><literal type="number" pos:start="23:14" pos:end="23:17">0x00</literal> <operator pos:start="23:19" pos:end="23:21">...</operator> <literal type="number" pos:start="23:23" pos:end="23:26">0xdf</literal></expr>:</case>

        <case pos:start="25:9" pos:end="25:18">case <expr pos:start="25:14" pos:end="25:17"><literal type="number" pos:start="25:14" pos:end="25:17">0xe4</literal></expr>:</case>

        <case pos:start="27:9" pos:end="27:18">case <expr pos:start="27:14" pos:end="27:17"><literal type="number" pos:start="27:14" pos:end="27:17">0xe5</literal></expr>:</case>

        <case pos:start="29:9" pos:end="29:27">case <expr pos:start="29:14" pos:end="29:26"><literal type="number" pos:start="29:14" pos:end="29:17">0xe9</literal> <operator pos:start="29:19" pos:end="29:21">...</operator> <literal type="number" pos:start="29:23" pos:end="29:26">0xed</literal></expr>:</case>

        <case pos:start="31:9" pos:end="31:18">case <expr pos:start="31:14" pos:end="31:17"><literal type="number" pos:start="31:14" pos:end="31:17">0xf3</literal></expr>:</case>

        <case pos:start="33:9" pos:end="33:18">case <expr pos:start="33:14" pos:end="33:17"><literal type="number" pos:start="33:14" pos:end="33:17">0xf5</literal></expr>:</case>

        <case pos:start="35:9" pos:end="35:18">case <expr pos:start="35:14" pos:end="35:17"><literal type="number" pos:start="35:14" pos:end="35:17">0xf7</literal></expr>:</case>

        <case pos:start="37:9" pos:end="37:27">case <expr pos:start="37:14" pos:end="37:26"><literal type="number" pos:start="37:14" pos:end="37:17">0xf9</literal> <operator pos:start="37:19" pos:end="37:21">...</operator> <literal type="number" pos:start="37:23" pos:end="37:26">0xfb</literal></expr>:</case>

        <case pos:start="39:9" pos:end="39:27">case <expr pos:start="39:14" pos:end="39:26"><literal type="number" pos:start="39:14" pos:end="39:17">0xfd</literal> <operator pos:start="39:19" pos:end="39:21">...</operator> <literal type="number" pos:start="39:23" pos:end="39:26">0xff</literal></expr>:</case>

            <expr_stmt pos:start="41:13" pos:end="41:26"><expr pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:21">can_write</name> <operator pos:start="41:23" pos:end="41:23">=</operator> <literal type="number" pos:start="41:25" pos:end="41:25">0</literal></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <default pos:start="45:9" pos:end="45:16">default:</default>

            <expr_stmt pos:start="47:13" pos:end="47:26"><expr pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:21">can_write</name> <operator pos:start="47:23" pos:end="47:23">=</operator> <literal type="number" pos:start="47:25" pos:end="47:25">1</literal></expr>;</expr_stmt>



            <if_stmt pos:start="51:13" pos:end="83:13"><if pos:start="51:13" pos:end="83:13">if <condition pos:start="51:16" pos:end="51:26">(<expr pos:start="51:17" pos:end="51:25"><name pos:start="51:17" pos:end="51:25">can_write</name></expr>)</condition> <block pos:start="51:28" pos:end="83:13">{<block_content pos:start="53:17" pos:end="81:17">

                <switch pos:start="53:17" pos:end="81:17">switch <condition pos:start="53:24" pos:end="53:44">(<expr pos:start="53:25" pos:end="53:43"><name pos:start="53:25" pos:end="53:43"><name pos:start="53:25" pos:end="53:36">superio_conf</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:43">index</name></name></expr>)</condition> <block pos:start="53:46" pos:end="81:17">{<block_content pos:start="55:17" pos:end="79:76">

                <case pos:start="55:17" pos:end="55:26">case <expr pos:start="55:22" pos:end="55:25"><literal type="number" pos:start="55:22" pos:end="55:25">0xe7</literal></expr>:</case>

                    <if_stmt pos:start="57:21" pos:end="61:21"><if pos:start="57:21" pos:end="61:21">if <condition pos:start="57:24" pos:end="57:46">(<expr pos:start="57:25" pos:end="57:45"><operator pos:start="57:25" pos:end="57:25">(</operator><name pos:start="57:26" pos:end="57:29">data</name> <operator pos:start="57:31" pos:end="57:31">&amp;</operator> <literal type="number" pos:start="57:33" pos:end="57:36">0xff</literal><operator pos:start="57:37" pos:end="57:37">)</operator> <operator pos:start="57:39" pos:end="57:40">!=</operator> <literal type="number" pos:start="57:42" pos:end="57:45">0xfe</literal></expr>)</condition> <block pos:start="57:48" pos:end="61:21">{<block_content pos:start="59:25" pos:end="59:73">

                        <expr_stmt pos:start="59:25" pos:end="59:73"><expr pos:start="59:25" pos:end="59:72"><call pos:start="59:25" pos:end="59:72"><name pos:start="59:25" pos:end="59:31">DPRINTF</name><argument_list pos:start="59:32" pos:end="59:72">(<argument pos:start="59:33" pos:end="59:71"><expr pos:start="59:33" pos:end="59:71"><literal type="string" pos:start="59:33" pos:end="59:71">"chage uart 1 base. unsupported yet \n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <break pos:start="63:21" pos:end="63:26">break;</break>

                <case pos:start="65:17" pos:end="65:26">case <expr pos:start="65:22" pos:end="65:25"><literal type="number" pos:start="65:22" pos:end="65:25">0xe8</literal></expr>:</case>

                    <if_stmt pos:start="67:21" pos:end="71:21"><if pos:start="67:21" pos:end="71:21">if <condition pos:start="67:24" pos:end="67:46">(<expr pos:start="67:25" pos:end="67:45"><operator pos:start="67:25" pos:end="67:25">(</operator><name pos:start="67:26" pos:end="67:29">data</name> <operator pos:start="67:31" pos:end="67:31">&amp;</operator> <literal type="number" pos:start="67:33" pos:end="67:36">0xff</literal><operator pos:start="67:37" pos:end="67:37">)</operator> <operator pos:start="67:39" pos:end="67:40">!=</operator> <literal type="number" pos:start="67:42" pos:end="67:45">0xbe</literal></expr>)</condition> <block pos:start="67:48" pos:end="71:21">{<block_content pos:start="69:25" pos:end="69:73">

                        <expr_stmt pos:start="69:25" pos:end="69:73"><expr pos:start="69:25" pos:end="69:72"><call pos:start="69:25" pos:end="69:72"><name pos:start="69:25" pos:end="69:31">DPRINTF</name><argument_list pos:start="69:32" pos:end="69:72">(<argument pos:start="69:33" pos:end="69:71"><expr pos:start="69:33" pos:end="69:71"><literal type="string" pos:start="69:33" pos:end="69:71">"chage uart 2 base. unsupported yet \n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <break pos:start="73:21" pos:end="73:26">break;</break>



                <default pos:start="77:17" pos:end="77:24">default:</default>

                    <expr_stmt pos:start="79:21" pos:end="79:76"><expr pos:start="79:21" pos:end="79:75"><name pos:start="79:21" pos:end="79:61"><name pos:start="79:21" pos:end="79:32">superio_conf</name><operator pos:start="79:33" pos:end="79:34">-&gt;</operator><name pos:start="79:35" pos:end="79:40">config</name><index pos:start="79:41" pos:end="79:61">[<expr pos:start="79:42" pos:end="79:60"><name pos:start="79:42" pos:end="79:60"><name pos:start="79:42" pos:end="79:53">superio_conf</name><operator pos:start="79:54" pos:end="79:55">-&gt;</operator><name pos:start="79:56" pos:end="79:60">index</name></name></expr>]</index></name> <operator pos:start="79:63" pos:end="79:63">=</operator> <name pos:start="79:65" pos:end="79:68">data</name> <operator pos:start="79:70" pos:end="79:70">&amp;</operator> <literal type="number" pos:start="79:72" pos:end="79:75">0xff</literal></expr>;</expr_stmt>

                </block_content>}</block></switch>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="87:9" pos:end="87:64"><expr pos:start="87:9" pos:end="87:63"><name pos:start="87:9" pos:end="87:49"><name pos:start="87:9" pos:end="87:20">superio_conf</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:28">config</name><index pos:start="87:29" pos:end="87:49">[<expr pos:start="87:30" pos:end="87:48"><name pos:start="87:30" pos:end="87:48"><name pos:start="87:30" pos:end="87:41">superio_conf</name><operator pos:start="87:42" pos:end="87:43">-&gt;</operator><name pos:start="87:44" pos:end="87:48">index</name></name></expr>]</index></name> <operator pos:start="87:51" pos:end="87:51">=</operator> <name pos:start="87:53" pos:end="87:56">data</name> <operator pos:start="87:58" pos:end="87:58">&amp;</operator> <literal type="number" pos:start="87:60" pos:end="87:63">0xff</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
