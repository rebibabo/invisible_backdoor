<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25227.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">decode_syncpoint</name><parameter_list pos:start="1:28" pos:end="1:76">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:38">NUTContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">nut</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:56"><decl pos:start="1:46" pos:end="1:56"><type pos:start="1:46" pos:end="1:56"><name pos:start="1:46" pos:end="1:52">int64_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:56">ts</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:75"><decl pos:start="1:59" pos:end="1:75"><type pos:start="1:59" pos:end="1:75"><name pos:start="1:59" pos:end="1:65">int64_t</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:75">back_ptr</name></decl></parameter>)</parameter_list><block pos:start="1:77" pos:end="55:1">{<block_content pos:start="3:5" pos:end="53:13">

    <decl_stmt pos:start="3:5" pos:end="3:33"><decl pos:start="3:5" pos:end="3:32"><type pos:start="3:5" pos:end="3:21"><name pos:start="3:5" pos:end="3:19">AVFormatContext</name> <modifier pos:start="3:21" pos:end="3:21">*</modifier></type><name pos:start="3:22" pos:end="3:22">s</name><init pos:start="3:23" pos:end="3:32">= <expr pos:start="3:25" pos:end="3:32"><name pos:start="3:25" pos:end="3:32"><name pos:start="3:25" pos:end="3:27">nut</name><operator pos:start="3:28" pos:end="3:29">-&gt;</operator><name pos:start="3:30" pos:end="3:32">avf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ByteIOContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">bc</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">end</name></decl>, <decl pos:start="7:18" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:18" pos:end="7:20">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14">AVRational</name></type> <name pos:start="9:16" pos:end="9:24">time_base</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:45"><expr pos:start="13:5" pos:end="13:44"><name pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:7">nut</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:27">last_syncpoint_pos</name></name><operator pos:start="13:28" pos:end="13:28">=</operator> <call pos:start="13:30" pos:end="13:42"><name pos:start="13:30" pos:end="13:38">url_ftell</name><argument_list pos:start="13:39" pos:end="13:42">(<argument pos:start="13:40" pos:end="13:41"><expr pos:start="13:40" pos:end="13:41"><name pos:start="13:40" pos:end="13:41">bc</name></expr></argument>)</argument_list></call><operator pos:start="13:43" pos:end="13:43">-</operator><literal type="number" pos:start="13:44" pos:end="13:44">8</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:7">end</name><operator pos:start="17:8" pos:end="17:8">=</operator> <call pos:start="17:10" pos:end="17:37"><name pos:start="17:10" pos:end="17:25">get_packetheader</name><argument_list pos:start="17:26" pos:end="17:37">(<argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><name pos:start="17:27" pos:end="17:29">nut</name></expr></argument>, <argument pos:start="17:32" pos:end="17:33"><expr pos:start="17:32" pos:end="17:33"><name pos:start="17:32" pos:end="17:33">bc</name></expr></argument>, <argument pos:start="17:36" pos:end="17:36"><expr pos:start="17:36" pos:end="17:36"><literal type="number" pos:start="17:36" pos:end="17:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:25"><expr pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:7">end</name> <operator pos:start="19:9" pos:end="19:10">+=</operator> <call pos:start="19:12" pos:end="19:24"><name pos:start="19:12" pos:end="19:20">url_ftell</name><argument_list pos:start="19:21" pos:end="19:24">(<argument pos:start="19:22" pos:end="19:23"><expr pos:start="19:22" pos:end="19:23"><name pos:start="19:22" pos:end="19:23">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:7">tmp</name><operator pos:start="23:8" pos:end="23:8">=</operator> <call pos:start="23:10" pos:end="23:18"><name pos:start="23:10" pos:end="23:14">get_v</name><argument_list pos:start="23:15" pos:end="23:18">(<argument pos:start="23:16" pos:end="23:17"><expr pos:start="23:16" pos:end="23:17"><name pos:start="23:16" pos:end="23:17">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:54"><expr pos:start="25:5" pos:end="25:53"><operator pos:start="25:5" pos:end="25:5">*</operator><name pos:start="25:6" pos:end="25:13">back_ptr</name><operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:38"><name pos:start="25:16" pos:end="25:18">nut</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:38">last_syncpoint_pos</name></name> <operator pos:start="25:40" pos:end="25:40">-</operator> <literal type="number" pos:start="25:42" pos:end="25:43">16</literal><operator pos:start="25:44" pos:end="25:44">*</operator><call pos:start="25:45" pos:end="25:53"><name pos:start="25:45" pos:end="25:49">get_v</name><argument_list pos:start="25:50" pos:end="25:53">(<argument pos:start="25:51" pos:end="25:52"><expr pos:start="25:51" pos:end="25:52"><name pos:start="25:51" pos:end="25:52">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:18"><if pos:start="27:5" pos:end="29:18">if<condition pos:start="27:7" pos:end="27:21">(<expr pos:start="27:8" pos:end="27:20"><operator pos:start="27:8" pos:end="27:8">*</operator><name pos:start="27:9" pos:end="27:16">back_ptr</name> <operator pos:start="27:18" pos:end="27:18">&lt;</operator> <literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:18"><block_content pos:start="29:9" pos:end="29:18">

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:74"><expr pos:start="33:5" pos:end="33:73"><call pos:start="33:5" pos:end="33:73"><name pos:start="33:5" pos:end="33:19">ff_nut_reset_ts</name><argument_list pos:start="33:20" pos:end="33:73">(<argument pos:start="33:21" pos:end="33:23"><expr pos:start="33:21" pos:end="33:23"><name pos:start="33:21" pos:end="33:23">nut</name></expr></argument>, <argument pos:start="33:26" pos:end="33:67"><expr pos:start="33:26" pos:end="33:67"><name pos:start="33:26" pos:end="33:67"><name pos:start="33:26" pos:end="33:28">nut</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:39">time_base</name><index pos:start="33:40" pos:end="33:67">[<expr pos:start="33:41" pos:end="33:66"><name pos:start="33:41" pos:end="33:43">tmp</name> <operator pos:start="33:45" pos:end="33:45">%</operator> <name pos:start="33:47" pos:end="33:66"><name pos:start="33:47" pos:end="33:49">nut</name><operator pos:start="33:50" pos:end="33:51">-&gt;</operator><name pos:start="33:52" pos:end="33:66">time_base_count</name></name></expr>]</index></name></expr></argument>, <argument pos:start="33:70" pos:end="33:72"><expr pos:start="33:70" pos:end="33:72"><name pos:start="33:70" pos:end="33:72">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if<condition pos:start="37:7" pos:end="37:50">(<expr pos:start="37:8" pos:end="37:49"><call pos:start="37:8" pos:end="37:29"><name pos:start="37:8" pos:end="37:20">skip_reserved</name><argument_list pos:start="37:21" pos:end="37:29">(<argument pos:start="37:22" pos:end="37:23"><expr pos:start="37:22" pos:end="37:23"><name pos:start="37:22" pos:end="37:23">bc</name></expr></argument>, <argument pos:start="37:26" pos:end="37:28"><expr pos:start="37:26" pos:end="37:28"><name pos:start="37:26" pos:end="37:28">end</name></expr></argument>)</argument_list></call> <operator pos:start="37:31" pos:end="37:32">||</operator> <call pos:start="37:34" pos:end="37:49"><name pos:start="37:34" pos:end="37:45">get_checksum</name><argument_list pos:start="37:46" pos:end="37:49">(<argument pos:start="37:47" pos:end="37:48"><expr pos:start="37:47" pos:end="37:48"><name pos:start="37:47" pos:end="37:48">bc</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="37:51" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:18">

        <expr_stmt pos:start="39:9" pos:end="39:66"><expr pos:start="39:9" pos:end="39:65"><call pos:start="39:9" pos:end="39:65"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:65">(<argument pos:start="39:16" pos:end="39:16"><expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">s</name></expr></argument>, <argument pos:start="39:19" pos:end="39:30"><expr pos:start="39:19" pos:end="39:30"><name pos:start="39:19" pos:end="39:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:33" pos:end="39:64"><expr pos:start="39:33" pos:end="39:64"><literal type="string" pos:start="39:33" pos:end="39:64">"sync point checksum mismatch\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:88"><expr pos:start="47:5" pos:end="47:87"><operator pos:start="47:5" pos:end="47:5">*</operator><name pos:start="47:6" pos:end="47:7">ts</name><operator pos:start="47:8" pos:end="47:8">=</operator> <name pos:start="47:10" pos:end="47:12">tmp</name> <operator pos:start="47:14" pos:end="47:14">/</operator> <name pos:start="47:16" pos:end="47:28"><name pos:start="47:16" pos:end="47:16">s</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:28">nb_streams</name></name> <operator pos:start="47:30" pos:end="47:30">*</operator> <call pos:start="47:32" pos:end="47:74"><name pos:start="47:32" pos:end="47:37">av_q2d</name><argument_list pos:start="47:38" pos:end="47:74">(<argument pos:start="47:39" pos:end="47:73"><expr pos:start="47:39" pos:end="47:73"><name pos:start="47:39" pos:end="47:73"><name pos:start="47:39" pos:end="47:41">nut</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:52">time_base</name><index pos:start="47:53" pos:end="47:73">[<expr pos:start="47:54" pos:end="47:72"><name pos:start="47:54" pos:end="47:56">tmp</name> <operator pos:start="47:58" pos:end="47:58">%</operator> <name pos:start="47:60" pos:end="47:72"><name pos:start="47:60" pos:end="47:60">s</name><operator pos:start="47:61" pos:end="47:62">-&gt;</operator><name pos:start="47:63" pos:end="47:72">nb_streams</name></name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="47:75" pos:end="47:75">*</operator><name pos:start="47:76" pos:end="47:87">AV_TIME_BASE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:57"><expr pos:start="49:5" pos:end="49:56"><call pos:start="49:5" pos:end="49:56"><name pos:start="49:5" pos:end="49:10">add_sp</name><argument_list pos:start="49:11" pos:end="49:56">(<argument pos:start="49:12" pos:end="49:14"><expr pos:start="49:12" pos:end="49:14"><name pos:start="49:12" pos:end="49:14">nut</name></expr></argument>, <argument pos:start="49:17" pos:end="49:39"><expr pos:start="49:17" pos:end="49:39"><name pos:start="49:17" pos:end="49:39"><name pos:start="49:17" pos:end="49:19">nut</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:39">last_syncpoint_pos</name></name></expr></argument>, <argument pos:start="49:42" pos:end="49:50"><expr pos:start="49:42" pos:end="49:50"><operator pos:start="49:42" pos:end="49:42">*</operator><name pos:start="49:43" pos:end="49:50">back_ptr</name></expr></argument>, <argument pos:start="49:53" pos:end="49:55"><expr pos:start="49:53" pos:end="49:55"><operator pos:start="49:53" pos:end="49:53">*</operator><name pos:start="49:54" pos:end="49:55">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
