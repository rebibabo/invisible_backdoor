<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10234.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">hmp_info_snapshots</name><parameter_list pos:start="1:24" pos:end="1:57">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:31">Monitor</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">mon</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:56"><specifier pos:start="1:39" pos:end="1:43">const</specifier> <name pos:start="1:45" pos:end="1:49">QDict</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:56">qdict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="123:32">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">BlockDriverState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">bs</name></decl>, <decl pos:start="5:27" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:22"><modifier pos:start="5:27" pos:end="5:27">*</modifier></type><name pos:start="5:28" pos:end="5:30">bs1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">QEMUSnapshotInfo</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:28">sn_tab</name></decl>, <decl pos:start="7:31" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:22"><modifier pos:start="7:31" pos:end="7:31">*</modifier></type><name pos:start="7:32" pos:end="7:33">sn</name></decl>, <decl pos:start="7:36" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:22"/><name pos:start="7:36" pos:end="7:36">s</name></decl>, <decl pos:start="7:39" pos:end="7:51"><type ref="prev" pos:start="7:5" pos:end="7:22"><modifier pos:start="7:39" pos:end="7:39">*</modifier></type><name pos:start="7:40" pos:end="7:46">sn_info</name> <init pos:start="7:48" pos:end="7:51">= <expr pos:start="7:50" pos:end="7:51"><operator pos:start="7:50" pos:end="7:50">&amp;</operator><name pos:start="7:51" pos:end="7:51">s</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">nb_sns</name></decl>, <decl pos:start="9:17" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:17">i</name></decl>, <decl pos:start="9:20" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:22">ret</name></decl>, <decl pos:start="9:25" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:33">available</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">total</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:7">int</name> <modifier pos:start="13:9" pos:end="13:9">*</modifier></type><name pos:start="13:10" pos:end="13:28">available_snapshots</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:6">bs</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <call pos:start="17:10" pos:end="17:26"><name pos:start="17:10" pos:end="17:24">find_vmstate_bs</name><argument_list pos:start="17:25" pos:end="17:26">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:12">(<expr pos:start="19:9" pos:end="19:11"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:11">bs</name></expr>)</condition> <block pos:start="19:14" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:15">

        <expr_stmt pos:start="21:9" pos:end="21:78"><expr pos:start="21:9" pos:end="21:77"><call pos:start="21:9" pos:end="21:77"><name pos:start="21:9" pos:end="21:22">monitor_printf</name><argument_list pos:start="21:23" pos:end="21:77">(<argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">mon</name></expr></argument>, <argument pos:start="21:29" pos:end="21:76"><expr pos:start="21:29" pos:end="21:76"><literal type="string" pos:start="21:29" pos:end="21:76">"No available block device supports snapshots\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:10">nb_sns</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:44"><name pos:start="29:14" pos:end="29:31">bdrv_snapshot_list</name><argument_list pos:start="29:32" pos:end="29:44">(<argument pos:start="29:33" pos:end="29:34"><expr pos:start="29:33" pos:end="29:34"><name pos:start="29:33" pos:end="29:34">bs</name></expr></argument>, <argument pos:start="29:37" pos:end="29:43"><expr pos:start="29:37" pos:end="29:43"><operator pos:start="29:37" pos:end="29:37">&amp;</operator><name pos:start="29:38" pos:end="29:43">sn_tab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:19">(<expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:14">nb_sns</name> <operator pos:start="31:16" pos:end="31:16">&lt;</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>)</condition> <block pos:start="31:21" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:15">

        <expr_stmt pos:start="33:9" pos:end="33:70"><expr pos:start="33:9" pos:end="33:69"><call pos:start="33:9" pos:end="33:69"><name pos:start="33:9" pos:end="33:22">monitor_printf</name><argument_list pos:start="33:23" pos:end="33:69">(<argument pos:start="33:24" pos:end="33:26"><expr pos:start="33:24" pos:end="33:26"><name pos:start="33:24" pos:end="33:26">mon</name></expr></argument>, <argument pos:start="33:29" pos:end="33:60"><expr pos:start="33:29" pos:end="33:60"><literal type="string" pos:start="33:29" pos:end="33:60">"bdrv_snapshot_list: error %d\n"</literal></expr></argument>, <argument pos:start="33:63" pos:end="33:68"><expr pos:start="33:63" pos:end="33:68"><name pos:start="33:63" pos:end="33:68">nb_sns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:20">(<expr pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:14">nb_sns</name> <operator pos:start="41:16" pos:end="41:17">==</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>)</condition> <block pos:start="41:22" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:15">

        <expr_stmt pos:start="43:9" pos:end="43:65"><expr pos:start="43:9" pos:end="43:64"><call pos:start="43:9" pos:end="43:64"><name pos:start="43:9" pos:end="43:22">monitor_printf</name><argument_list pos:start="43:23" pos:end="43:64">(<argument pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><name pos:start="43:24" pos:end="43:26">mon</name></expr></argument>, <argument pos:start="43:29" pos:end="43:63"><expr pos:start="43:29" pos:end="43:63"><literal type="string" pos:start="43:29" pos:end="43:63">"There is no snapshot available.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:46"><expr pos:start="51:5" pos:end="51:45"><name pos:start="51:5" pos:end="51:23">available_snapshots</name> <operator pos:start="51:25" pos:end="51:25">=</operator> <call pos:start="51:27" pos:end="51:45"><name pos:start="51:27" pos:end="51:32">g_new0</name><argument_list pos:start="51:33" pos:end="51:45">(<argument pos:start="51:34" pos:end="51:36"><expr pos:start="51:34" pos:end="51:36"><name pos:start="51:34" pos:end="51:36">int</name></expr></argument>, <argument pos:start="51:39" pos:end="51:44"><expr pos:start="51:39" pos:end="51:44"><name pos:start="51:39" pos:end="51:44">nb_sns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:14"><expr pos:start="53:5" pos:end="53:13"><name pos:start="53:5" pos:end="53:9">total</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <literal type="number" pos:start="53:13" pos:end="53:13">0</literal></expr>;</expr_stmt>

    <for pos:start="55:5" pos:end="93:5">for <control pos:start="55:9" pos:end="55:32">(<init pos:start="55:10" pos:end="55:15"><expr pos:start="55:10" pos:end="55:14"><name pos:start="55:10" pos:end="55:10">i</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>;</init> <condition pos:start="55:17" pos:end="55:27"><expr pos:start="55:17" pos:end="55:26"><name pos:start="55:17" pos:end="55:17">i</name> <operator pos:start="55:19" pos:end="55:19">&lt;</operator> <name pos:start="55:21" pos:end="55:26">nb_sns</name></expr>;</condition> <incr pos:start="55:29" pos:end="55:31"><expr pos:start="55:29" pos:end="55:31"><name pos:start="55:29" pos:end="55:29">i</name><operator pos:start="55:30" pos:end="55:31">++</operator></expr></incr>)</control> <block pos:start="55:34" pos:end="93:5">{<block_content pos:start="57:9" pos:end="91:9">

        <expr_stmt pos:start="57:9" pos:end="57:24"><expr pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:10">sn</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <operator pos:start="57:14" pos:end="57:14">&amp;</operator><name pos:start="57:15" pos:end="57:23"><name pos:start="57:15" pos:end="57:20">sn_tab</name><index pos:start="57:21" pos:end="57:23">[<expr pos:start="57:22" pos:end="57:22"><name pos:start="57:22" pos:end="57:22">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:22"><expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:17">available</name> <operator pos:start="59:19" pos:end="59:19">=</operator> <literal type="number" pos:start="59:21" pos:end="59:21">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:19"><expr pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:11">bs1</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <name pos:start="61:15" pos:end="61:18">NULL</name></expr>;</expr_stmt>



        <while pos:start="65:9" pos:end="81:9">while <condition pos:start="65:15" pos:end="65:38">(<expr pos:start="65:16" pos:end="65:37"><operator pos:start="65:16" pos:end="65:16">(</operator><name pos:start="65:17" pos:end="65:19">bs1</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <call pos:start="65:23" pos:end="65:36"><name pos:start="65:23" pos:end="65:31">bdrv_next</name><argument_list pos:start="65:32" pos:end="65:36">(<argument pos:start="65:33" pos:end="65:35"><expr pos:start="65:33" pos:end="65:35"><name pos:start="65:33" pos:end="65:35">bs1</name></expr></argument>)</argument_list></call><operator pos:start="65:37" pos:end="65:37">)</operator></expr>)</condition> <block pos:start="65:40" pos:end="81:9">{<block_content pos:start="67:13" pos:end="79:13">

            <if_stmt pos:start="67:13" pos:end="79:13"><if pos:start="67:13" pos:end="79:13">if <condition pos:start="67:16" pos:end="67:52">(<expr pos:start="67:17" pos:end="67:51"><call pos:start="67:17" pos:end="67:38"><name pos:start="67:17" pos:end="67:33">bdrv_can_snapshot</name><argument_list pos:start="67:34" pos:end="67:38">(<argument pos:start="67:35" pos:end="67:37"><expr pos:start="67:35" pos:end="67:37"><name pos:start="67:35" pos:end="67:37">bs1</name></expr></argument>)</argument_list></call> <operator pos:start="67:40" pos:end="67:41">&amp;&amp;</operator> <name pos:start="67:43" pos:end="67:45">bs1</name> <operator pos:start="67:47" pos:end="67:48">!=</operator> <name pos:start="67:50" pos:end="67:51">bs</name></expr>)</condition> <block pos:start="67:54" pos:end="79:13">{<block_content pos:start="69:17" pos:end="77:17">

                <expr_stmt pos:start="69:17" pos:end="69:67"><expr pos:start="69:17" pos:end="69:66"><name pos:start="69:17" pos:end="69:19">ret</name> <operator pos:start="69:21" pos:end="69:21">=</operator> <call pos:start="69:23" pos:end="69:66"><name pos:start="69:23" pos:end="69:40">bdrv_snapshot_find</name><argument_list pos:start="69:41" pos:end="69:66">(<argument pos:start="69:42" pos:end="69:44"><expr pos:start="69:42" pos:end="69:44"><name pos:start="69:42" pos:end="69:44">bs1</name></expr></argument>, <argument pos:start="69:47" pos:end="69:53"><expr pos:start="69:47" pos:end="69:53"><name pos:start="69:47" pos:end="69:53">sn_info</name></expr></argument>, <argument pos:start="69:56" pos:end="69:65"><expr pos:start="69:56" pos:end="69:65"><name pos:start="69:56" pos:end="69:65"><name pos:start="69:56" pos:end="69:57">sn</name><operator pos:start="69:58" pos:end="69:59">-&gt;</operator><name pos:start="69:60" pos:end="69:65">id_str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="71:17" pos:end="77:17"><if pos:start="71:17" pos:end="77:17">if <condition pos:start="71:20" pos:end="71:28">(<expr pos:start="71:21" pos:end="71:27"><name pos:start="71:21" pos:end="71:23">ret</name> <operator pos:start="71:25" pos:end="71:25">&lt;</operator> <literal type="number" pos:start="71:27" pos:end="71:27">0</literal></expr>)</condition> <block pos:start="71:30" pos:end="77:17">{<block_content pos:start="73:21" pos:end="75:26">

                    <expr_stmt pos:start="73:21" pos:end="73:34"><expr pos:start="73:21" pos:end="73:33"><name pos:start="73:21" pos:end="73:29">available</name> <operator pos:start="73:31" pos:end="73:31">=</operator> <literal type="number" pos:start="73:33" pos:end="73:33">0</literal></expr>;</expr_stmt>

                    <break pos:start="75:21" pos:end="75:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>



        <if_stmt pos:start="85:9" pos:end="91:9"><if pos:start="85:9" pos:end="91:9">if <condition pos:start="85:12" pos:end="85:22">(<expr pos:start="85:13" pos:end="85:21"><name pos:start="85:13" pos:end="85:21">available</name></expr>)</condition> <block pos:start="85:24" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:20">

            <expr_stmt pos:start="87:13" pos:end="87:43"><expr pos:start="87:13" pos:end="87:42"><name pos:start="87:13" pos:end="87:38"><name pos:start="87:13" pos:end="87:31">available_snapshots</name><index pos:start="87:32" pos:end="87:38">[<expr pos:start="87:33" pos:end="87:37"><name pos:start="87:33" pos:end="87:37">total</name></expr>]</index></name> <operator pos:start="87:40" pos:end="87:40">=</operator> <name pos:start="87:42" pos:end="87:42">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:20"><expr pos:start="89:13" pos:end="89:19"><name pos:start="89:13" pos:end="89:17">total</name><operator pos:start="89:18" pos:end="89:19">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="97:5" pos:end="117:5"><if pos:start="97:5" pos:end="113:5">if <condition pos:start="97:8" pos:end="97:18">(<expr pos:start="97:9" pos:end="97:17"><name pos:start="97:9" pos:end="97:13">total</name> <operator pos:start="97:15" pos:end="97:15">&gt;</operator> <literal type="number" pos:start="97:17" pos:end="97:17">0</literal></expr>)</condition> <block pos:start="97:20" pos:end="113:5">{<block_content pos:start="99:9" pos:end="111:9">

        <expr_stmt pos:start="99:9" pos:end="99:72"><expr pos:start="99:9" pos:end="99:71"><call pos:start="99:9" pos:end="99:71"><name pos:start="99:9" pos:end="99:26">bdrv_snapshot_dump</name><argument_list pos:start="99:27" pos:end="99:71">(<argument pos:start="99:28" pos:end="99:59"><expr pos:start="99:28" pos:end="99:59"><operator pos:start="99:28" pos:end="99:28">(</operator><name pos:start="99:29" pos:end="99:44">fprintf_function</name><operator pos:start="99:45" pos:end="99:45">)</operator><name pos:start="99:46" pos:end="99:59">monitor_printf</name></expr></argument>, <argument pos:start="99:62" pos:end="99:64"><expr pos:start="99:62" pos:end="99:64"><name pos:start="99:62" pos:end="99:64">mon</name></expr></argument>, <argument pos:start="99:67" pos:end="99:70"><expr pos:start="99:67" pos:end="99:70"><name pos:start="99:67" pos:end="99:70">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:34"><expr pos:start="101:9" pos:end="101:33"><call pos:start="101:9" pos:end="101:33"><name pos:start="101:9" pos:end="101:22">monitor_printf</name><argument_list pos:start="101:23" pos:end="101:33">(<argument pos:start="101:24" pos:end="101:26"><expr pos:start="101:24" pos:end="101:26"><name pos:start="101:24" pos:end="101:26">mon</name></expr></argument>, <argument pos:start="101:29" pos:end="101:32"><expr pos:start="101:29" pos:end="101:32"><literal type="string" pos:start="101:29" pos:end="101:32">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="103:9" pos:end="111:9">for <control pos:start="103:13" pos:end="103:35">(<init pos:start="103:14" pos:end="103:19"><expr pos:start="103:14" pos:end="103:18"><name pos:start="103:14" pos:end="103:14">i</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <literal type="number" pos:start="103:18" pos:end="103:18">0</literal></expr>;</init> <condition pos:start="103:21" pos:end="103:30"><expr pos:start="103:21" pos:end="103:29"><name pos:start="103:21" pos:end="103:21">i</name> <operator pos:start="103:23" pos:end="103:23">&lt;</operator> <name pos:start="103:25" pos:end="103:29">total</name></expr>;</condition> <incr pos:start="103:32" pos:end="103:34"><expr pos:start="103:32" pos:end="103:34"><name pos:start="103:32" pos:end="103:32">i</name><operator pos:start="103:33" pos:end="103:34">++</operator></expr></incr>)</control> <block pos:start="103:37" pos:end="111:9">{<block_content pos:start="105:13" pos:end="109:38">

            <expr_stmt pos:start="105:13" pos:end="105:49"><expr pos:start="105:13" pos:end="105:48"><name pos:start="105:13" pos:end="105:14">sn</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <operator pos:start="105:18" pos:end="105:18">&amp;</operator><name pos:start="105:19" pos:end="105:48"><name pos:start="105:19" pos:end="105:24">sn_tab</name><index pos:start="105:25" pos:end="105:48">[<expr pos:start="105:26" pos:end="105:47"><name pos:start="105:26" pos:end="105:47"><name pos:start="105:26" pos:end="105:44">available_snapshots</name><index pos:start="105:45" pos:end="105:47">[<expr pos:start="105:46" pos:end="105:46"><name pos:start="105:46" pos:end="105:46">i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:74"><expr pos:start="107:13" pos:end="107:73"><call pos:start="107:13" pos:end="107:73"><name pos:start="107:13" pos:end="107:30">bdrv_snapshot_dump</name><argument_list pos:start="107:31" pos:end="107:73">(<argument pos:start="107:32" pos:end="107:63"><expr pos:start="107:32" pos:end="107:63"><operator pos:start="107:32" pos:end="107:32">(</operator><name pos:start="107:33" pos:end="107:48">fprintf_function</name><operator pos:start="107:49" pos:end="107:49">)</operator><name pos:start="107:50" pos:end="107:63">monitor_printf</name></expr></argument>, <argument pos:start="107:66" pos:end="107:68"><expr pos:start="107:66" pos:end="107:68"><name pos:start="107:66" pos:end="107:68">mon</name></expr></argument>, <argument pos:start="107:71" pos:end="107:72"><expr pos:start="107:71" pos:end="107:72"><name pos:start="107:71" pos:end="107:72">sn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:38"><expr pos:start="109:13" pos:end="109:37"><call pos:start="109:13" pos:end="109:37"><name pos:start="109:13" pos:end="109:26">monitor_printf</name><argument_list pos:start="109:27" pos:end="109:37">(<argument pos:start="109:28" pos:end="109:30"><expr pos:start="109:28" pos:end="109:30"><name pos:start="109:28" pos:end="109:30">mon</name></expr></argument>, <argument pos:start="109:33" pos:end="109:36"><expr pos:start="109:33" pos:end="109:36"><literal type="string" pos:start="109:33" pos:end="109:36">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="113:7" pos:end="117:5">else <block pos:start="113:12" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:73">

        <expr_stmt pos:start="115:9" pos:end="115:73"><expr pos:start="115:9" pos:end="115:72"><call pos:start="115:9" pos:end="115:72"><name pos:start="115:9" pos:end="115:22">monitor_printf</name><argument_list pos:start="115:23" pos:end="115:72">(<argument pos:start="115:24" pos:end="115:26"><expr pos:start="115:24" pos:end="115:26"><name pos:start="115:24" pos:end="115:26">mon</name></expr></argument>, <argument pos:start="115:29" pos:end="115:71"><expr pos:start="115:29" pos:end="115:71"><literal type="string" pos:start="115:29" pos:end="115:71">"There is no suitable snapshot available\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:19"><expr pos:start="121:5" pos:end="121:18"><call pos:start="121:5" pos:end="121:18"><name pos:start="121:5" pos:end="121:10">g_free</name><argument_list pos:start="121:11" pos:end="121:18">(<argument pos:start="121:12" pos:end="121:17"><expr pos:start="121:12" pos:end="121:17"><name pos:start="121:12" pos:end="121:17">sn_tab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:32"><expr pos:start="123:5" pos:end="123:31"><call pos:start="123:5" pos:end="123:31"><name pos:start="123:5" pos:end="123:10">g_free</name><argument_list pos:start="123:11" pos:end="123:31">(<argument pos:start="123:12" pos:end="123:30"><expr pos:start="123:12" pos:end="123:30"><name pos:start="123:12" pos:end="123:30">available_snapshots</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



</block_content>}</block></function>
</unit>
