<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3031.c" pos:tabs="8"><function pos:start="1:1" pos:end="197:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">get_cluster_offset</name><parameter_list pos:start="1:30" pos:end="11:61">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:46">BlockDriverState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">bs</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:54"><decl pos:start="3:37" pos:end="3:54"><type pos:start="3:37" pos:end="3:54"><name pos:start="3:37" pos:end="3:46">VmdkExtent</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:54">extent</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:56"><decl pos:start="5:37" pos:end="5:56"><type pos:start="5:37" pos:end="5:56"><name pos:start="5:37" pos:end="5:48">VmdkMetaData</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:56">m_data</name></decl></parameter>,

                                    <parameter pos:start="7:37" pos:end="7:51"><decl pos:start="7:37" pos:end="7:51"><type pos:start="7:37" pos:end="7:51"><name pos:start="7:37" pos:end="7:44">uint64_t</name></type> <name pos:start="7:46" pos:end="7:51">offset</name></decl></parameter>,

                                    <parameter pos:start="9:37" pos:end="9:48"><decl pos:start="9:37" pos:end="9:48"><type pos:start="9:37" pos:end="9:48"><name pos:start="9:37" pos:end="9:39">int</name></type> <name pos:start="9:41" pos:end="9:48">allocate</name></decl></parameter>,

                                    <parameter pos:start="11:37" pos:end="11:60"><decl pos:start="11:37" pos:end="11:60"><type pos:start="11:37" pos:end="11:60"><name pos:start="11:37" pos:end="11:44">uint64_t</name> <modifier pos:start="11:46" pos:end="11:46">*</modifier></type><name pos:start="11:47" pos:end="11:60">cluster_offset</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="197:1">{<block_content pos:start="15:5" pos:end="195:13">

    <decl_stmt pos:start="15:5" pos:end="15:47"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:25">l1_index</name></decl>, <decl pos:start="15:28" pos:end="15:36"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:28" pos:end="15:36">l2_offset</name></decl>, <decl pos:start="15:39" pos:end="15:46"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:39" pos:end="15:46">l2_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:17">min_index</name></decl>, <decl pos:start="17:20" pos:end="17:20"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:20" pos:end="17:20">i</name></decl>, <decl pos:start="17:23" pos:end="17:23"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:23" pos:end="17:23">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:43"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:22">min_count</name></decl>, <decl pos:start="19:25" pos:end="19:33"><type ref="prev" pos:start="19:5" pos:end="19:12"><modifier pos:start="19:25" pos:end="19:25">*</modifier></type><name pos:start="19:26" pos:end="19:33">l2_table</name></decl>, <decl pos:start="19:36" pos:end="19:42"><type ref="prev" pos:start="19:5" pos:end="19:12"/><name pos:start="19:36" pos:end="19:38">tmp</name> <init pos:start="19:40" pos:end="19:42">= <expr pos:start="19:42" pos:end="19:42"><literal type="number" pos:start="19:42" pos:end="19:42">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:26"><if pos:start="23:5" pos:end="25:26">if <condition pos:start="23:8" pos:end="23:15">(<expr pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:14">m_data</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:26"><block_content pos:start="25:9" pos:end="25:26">

        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:14">m_data</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:21">valid</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <literal type="number" pos:start="25:25" pos:end="25:25">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:21">(<expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:14">extent</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:20">flat</name></name></expr>)</condition> <block pos:start="27:23" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:17">

        <expr_stmt pos:start="29:9" pos:end="29:52"><expr pos:start="29:9" pos:end="29:51"><operator pos:start="29:9" pos:end="29:9">*</operator><name pos:start="29:10" pos:end="29:23">cluster_offset</name> <operator pos:start="29:25" pos:end="29:25">=</operator> <name pos:start="29:27" pos:end="29:51"><name pos:start="29:27" pos:end="29:32">extent</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:51">flat_start_offset</name></name></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:56"><expr pos:start="37:5" pos:end="37:55"><name pos:start="37:5" pos:end="37:12">l1_index</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <operator pos:start="37:16" pos:end="37:16">(</operator><name pos:start="37:17" pos:end="37:22">offset</name> <operator pos:start="37:24" pos:end="37:25">&gt;&gt;</operator> <literal type="number" pos:start="37:27" pos:end="37:27">9</literal><operator pos:start="37:28" pos:end="37:28">)</operator> <operator pos:start="37:30" pos:end="37:30">/</operator> <name pos:start="37:32" pos:end="37:55"><name pos:start="37:32" pos:end="37:37">extent</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:55">l1_entry_sectors</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:36">(<expr pos:start="39:9" pos:end="39:35"><name pos:start="39:9" pos:end="39:16">l1_index</name> <operator pos:start="39:18" pos:end="39:19">&gt;=</operator> <name pos:start="39:21" pos:end="39:35"><name pos:start="39:21" pos:end="39:26">extent</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:35">l1_size</name></name></expr>)</condition> <block pos:start="39:38" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:18">

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:43"><expr pos:start="45:5" pos:end="45:42"><name pos:start="45:5" pos:end="45:13">l2_offset</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <name pos:start="45:17" pos:end="45:42"><name pos:start="45:17" pos:end="45:22">extent</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:32">l1_table</name><index pos:start="45:33" pos:end="45:42">[<expr pos:start="45:34" pos:end="45:41"><name pos:start="45:34" pos:end="45:41">l1_index</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:19">(<expr pos:start="47:9" pos:end="47:18"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:18">l2_offset</name></expr>)</condition> <block pos:start="47:21" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:18">

        <return pos:start="49:9" pos:end="49:18">return <expr pos:start="49:16" pos:end="49:17"><operator pos:start="49:16" pos:end="49:16">-</operator><literal type="number" pos:start="49:17" pos:end="49:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="53:5" pos:end="75:5">for <control pos:start="53:9" pos:end="53:39">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:34"><expr pos:start="53:17" pos:end="53:33"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:33">L2_CACHE_SIZE</name></expr>;</condition> <incr pos:start="53:36" pos:end="53:38"><expr pos:start="53:36" pos:end="53:38"><name pos:start="53:36" pos:end="53:36">i</name><operator pos:start="53:37" pos:end="53:38">++</operator></expr></incr>)</control> <block pos:start="53:41" pos:end="75:5">{<block_content pos:start="55:9" pos:end="73:9">

        <if_stmt pos:start="55:9" pos:end="73:9"><if pos:start="55:9" pos:end="73:9">if <condition pos:start="55:12" pos:end="55:53">(<expr pos:start="55:13" pos:end="55:52"><name pos:start="55:13" pos:end="55:21">l2_offset</name> <operator pos:start="55:23" pos:end="55:24">==</operator> <name pos:start="55:26" pos:end="55:52"><name pos:start="55:26" pos:end="55:31">extent</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:49">l2_cache_offsets</name><index pos:start="55:50" pos:end="55:52">[<expr pos:start="55:51" pos:end="55:51"><name pos:start="55:51" pos:end="55:51">i</name></expr>]</index></name></expr>)</condition> <block pos:start="55:55" pos:end="73:9">{<block_content pos:start="59:13" pos:end="71:23">

            <comment type="block" pos:start="57:13" pos:end="57:41">/* increment the hit count */</comment>

            <if_stmt pos:start="59:13" pos:end="67:13"><if pos:start="59:13" pos:end="67:13">if <condition pos:start="59:16" pos:end="59:59">(<expr pos:start="59:17" pos:end="59:58"><operator pos:start="59:17" pos:end="59:18">++</operator><name pos:start="59:19" pos:end="59:44"><name pos:start="59:19" pos:end="59:24">extent</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:41">l2_cache_counts</name><index pos:start="59:42" pos:end="59:44">[<expr pos:start="59:43" pos:end="59:43"><name pos:start="59:43" pos:end="59:43">i</name></expr>]</index></name> <operator pos:start="59:46" pos:end="59:47">==</operator> <literal type="number" pos:start="59:49" pos:end="59:58">0xffffffff</literal></expr>)</condition> <block pos:start="59:61" pos:end="67:13">{<block_content pos:start="61:17" pos:end="65:17">

                <for pos:start="61:17" pos:end="65:17">for <control pos:start="61:21" pos:end="61:51">(<init pos:start="61:22" pos:end="61:27"><expr pos:start="61:22" pos:end="61:26"><name pos:start="61:22" pos:end="61:22">j</name> <operator pos:start="61:24" pos:end="61:24">=</operator> <literal type="number" pos:start="61:26" pos:end="61:26">0</literal></expr>;</init> <condition pos:start="61:29" pos:end="61:46"><expr pos:start="61:29" pos:end="61:45"><name pos:start="61:29" pos:end="61:29">j</name> <operator pos:start="61:31" pos:end="61:31">&lt;</operator> <name pos:start="61:33" pos:end="61:45">L2_CACHE_SIZE</name></expr>;</condition> <incr pos:start="61:48" pos:end="61:50"><expr pos:start="61:48" pos:end="61:50"><name pos:start="61:48" pos:end="61:48">j</name><operator pos:start="61:49" pos:end="61:50">++</operator></expr></incr>)</control> <block pos:start="61:53" pos:end="65:17">{<block_content pos:start="63:21" pos:end="63:53">

                    <expr_stmt pos:start="63:21" pos:end="63:53"><expr pos:start="63:21" pos:end="63:52"><name pos:start="63:21" pos:end="63:46"><name pos:start="63:21" pos:end="63:26">extent</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:43">l2_cache_counts</name><index pos:start="63:44" pos:end="63:46">[<expr pos:start="63:45" pos:end="63:45"><name pos:start="63:45" pos:end="63:45">j</name></expr>]</index></name> <operator pos:start="63:48" pos:end="63:50">&gt;&gt;=</operator> <literal type="number" pos:start="63:52" pos:end="63:52">1</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:64"><expr pos:start="69:13" pos:end="69:63"><name pos:start="69:13" pos:end="69:20">l2_table</name> <operator pos:start="69:22" pos:end="69:22">=</operator> <name pos:start="69:24" pos:end="69:39"><name pos:start="69:24" pos:end="69:29">extent</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:39">l2_cache</name></name> <operator pos:start="69:41" pos:end="69:41">+</operator> <operator pos:start="69:43" pos:end="69:43">(</operator><name pos:start="69:44" pos:end="69:44">i</name> <operator pos:start="69:46" pos:end="69:46">*</operator> <name pos:start="69:48" pos:end="69:62"><name pos:start="69:48" pos:end="69:53">extent</name><operator pos:start="69:54" pos:end="69:55">-&gt;</operator><name pos:start="69:56" pos:end="69:62">l2_size</name></name><operator pos:start="69:63" pos:end="69:63">)</operator></expr>;</expr_stmt>

            <goto pos:start="71:13" pos:end="71:23">goto <name pos:start="71:18" pos:end="71:22">found</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="77:5" pos:end="77:59">/* not found: load a new entry in the least used one */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:18"><expr pos:start="79:5" pos:end="79:17"><name pos:start="79:5" pos:end="79:13">min_index</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <literal type="number" pos:start="79:17" pos:end="79:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:27"><expr pos:start="81:5" pos:end="81:26"><name pos:start="81:5" pos:end="81:13">min_count</name> <operator pos:start="81:15" pos:end="81:15">=</operator> <literal type="number" pos:start="81:17" pos:end="81:26">0xffffffff</literal></expr>;</expr_stmt>

    <for pos:start="83:5" pos:end="93:5">for <control pos:start="83:9" pos:end="83:39">(<init pos:start="83:10" pos:end="83:15"><expr pos:start="83:10" pos:end="83:14"><name pos:start="83:10" pos:end="83:10">i</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <literal type="number" pos:start="83:14" pos:end="83:14">0</literal></expr>;</init> <condition pos:start="83:17" pos:end="83:34"><expr pos:start="83:17" pos:end="83:33"><name pos:start="83:17" pos:end="83:17">i</name> <operator pos:start="83:19" pos:end="83:19">&lt;</operator> <name pos:start="83:21" pos:end="83:33">L2_CACHE_SIZE</name></expr>;</condition> <incr pos:start="83:36" pos:end="83:38"><expr pos:start="83:36" pos:end="83:38"><name pos:start="83:36" pos:end="83:36">i</name><operator pos:start="83:37" pos:end="83:38">++</operator></expr></incr>)</control> <block pos:start="83:41" pos:end="93:5">{<block_content pos:start="85:9" pos:end="91:9">

        <if_stmt pos:start="85:9" pos:end="91:9"><if pos:start="85:9" pos:end="91:9">if <condition pos:start="85:12" pos:end="85:51">(<expr pos:start="85:13" pos:end="85:50"><name pos:start="85:13" pos:end="85:38"><name pos:start="85:13" pos:end="85:18">extent</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:35">l2_cache_counts</name><index pos:start="85:36" pos:end="85:38">[<expr pos:start="85:37" pos:end="85:37"><name pos:start="85:37" pos:end="85:37">i</name></expr>]</index></name> <operator pos:start="85:40" pos:end="85:40">&lt;</operator> <name pos:start="85:42" pos:end="85:50">min_count</name></expr>)</condition> <block pos:start="85:53" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:26">

            <expr_stmt pos:start="87:13" pos:end="87:51"><expr pos:start="87:13" pos:end="87:50"><name pos:start="87:13" pos:end="87:21">min_count</name> <operator pos:start="87:23" pos:end="87:23">=</operator> <name pos:start="87:25" pos:end="87:50"><name pos:start="87:25" pos:end="87:30">extent</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:47">l2_cache_counts</name><index pos:start="87:48" pos:end="87:50">[<expr pos:start="87:49" pos:end="87:49"><name pos:start="87:49" pos:end="87:49">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:26"><expr pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:21">min_index</name> <operator pos:start="89:23" pos:end="89:23">=</operator> <name pos:start="89:25" pos:end="89:25">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="95:5" pos:end="95:64"><expr pos:start="95:5" pos:end="95:63"><name pos:start="95:5" pos:end="95:12">l2_table</name> <operator pos:start="95:14" pos:end="95:14">=</operator> <name pos:start="95:16" pos:end="95:31"><name pos:start="95:16" pos:end="95:21">extent</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:31">l2_cache</name></name> <operator pos:start="95:33" pos:end="95:33">+</operator> <operator pos:start="95:35" pos:end="95:35">(</operator><name pos:start="95:36" pos:end="95:44">min_index</name> <operator pos:start="95:46" pos:end="95:46">*</operator> <name pos:start="95:48" pos:end="95:62"><name pos:start="95:48" pos:end="95:53">extent</name><operator pos:start="95:54" pos:end="95:55">-&gt;</operator><name pos:start="95:56" pos:end="95:62">l2_size</name></name><operator pos:start="95:63" pos:end="95:63">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="111:5"><if pos:start="97:5" pos:end="111:5">if <condition pos:start="97:8" pos:end="107:52">(<expr pos:start="97:9" pos:end="107:51"><call pos:start="97:9" pos:end="107:13"><name pos:start="97:9" pos:end="97:18">bdrv_pread</name><argument_list pos:start="97:19" pos:end="107:13">(

                <argument pos:start="99:17" pos:end="99:28"><expr pos:start="99:17" pos:end="99:28"><name pos:start="99:17" pos:end="99:28"><name pos:start="99:17" pos:end="99:22">extent</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:28">file</name></name></expr></argument>,

                <argument pos:start="101:17" pos:end="101:40"><expr pos:start="101:17" pos:end="101:40"><operator pos:start="101:17" pos:end="101:17">(</operator><name pos:start="101:18" pos:end="101:24">int64_t</name><operator pos:start="101:25" pos:end="101:25">)</operator><name pos:start="101:26" pos:end="101:34">l2_offset</name> <operator pos:start="101:36" pos:end="101:36">*</operator> <literal type="number" pos:start="101:38" pos:end="101:40">512</literal></expr></argument>,

                <argument pos:start="103:17" pos:end="103:24"><expr pos:start="103:17" pos:end="103:24"><name pos:start="103:17" pos:end="103:24">l2_table</name></expr></argument>,

                <argument pos:start="105:17" pos:end="105:50"><expr pos:start="105:17" pos:end="105:50"><name pos:start="105:17" pos:end="105:31"><name pos:start="105:17" pos:end="105:22">extent</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:31">l2_size</name></name> <operator pos:start="105:33" pos:end="105:33">*</operator> <sizeof pos:start="105:35" pos:end="105:50">sizeof<argument_list pos:start="105:41" pos:end="105:50">(<argument pos:start="105:42" pos:end="105:49"><expr pos:start="105:42" pos:end="105:49"><name pos:start="105:42" pos:end="105:49">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>

            )</argument_list></call> <operator pos:start="107:15" pos:end="107:16">!=</operator> <name pos:start="107:18" pos:end="107:32"><name pos:start="107:18" pos:end="107:23">extent</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:32">l2_size</name></name> <operator pos:start="107:34" pos:end="107:34">*</operator> <sizeof pos:start="107:36" pos:end="107:51">sizeof<argument_list pos:start="107:42" pos:end="107:51">(<argument pos:start="107:43" pos:end="107:50"><expr pos:start="107:43" pos:end="107:50"><name pos:start="107:43" pos:end="107:50">uint32_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="107:54" pos:end="111:5">{<block_content pos:start="109:9" pos:end="109:18">

        <return pos:start="109:9" pos:end="109:18">return <expr pos:start="109:16" pos:end="109:17"><operator pos:start="109:16" pos:end="109:16">-</operator><literal type="number" pos:start="109:17" pos:end="109:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:52"><expr pos:start="115:5" pos:end="115:51"><name pos:start="115:5" pos:end="115:39"><name pos:start="115:5" pos:end="115:10">extent</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:28">l2_cache_offsets</name><index pos:start="115:29" pos:end="115:39">[<expr pos:start="115:30" pos:end="115:38"><name pos:start="115:30" pos:end="115:38">min_index</name></expr>]</index></name> <operator pos:start="115:41" pos:end="115:41">=</operator> <name pos:start="115:43" pos:end="115:51">l2_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:43"><expr pos:start="117:5" pos:end="117:42"><name pos:start="117:5" pos:end="117:38"><name pos:start="117:5" pos:end="117:10">extent</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:27">l2_cache_counts</name><index pos:start="117:28" pos:end="117:38">[<expr pos:start="117:29" pos:end="117:37"><name pos:start="117:29" pos:end="117:37">min_index</name></expr>]</index></name> <operator pos:start="117:40" pos:end="117:40">=</operator> <literal type="number" pos:start="117:42" pos:end="117:42">1</literal></expr>;</expr_stmt>

 <label pos:start="119:2" pos:end="119:7"><name pos:start="119:2" pos:end="119:6">found</name>:</label>

    <expr_stmt pos:start="121:5" pos:end="121:75"><expr pos:start="121:5" pos:end="121:74"><name pos:start="121:5" pos:end="121:12">l2_index</name> <operator pos:start="121:14" pos:end="121:14">=</operator> <operator pos:start="121:16" pos:end="121:16">(</operator><operator pos:start="121:17" pos:end="121:17">(</operator><name pos:start="121:18" pos:end="121:23">offset</name> <operator pos:start="121:25" pos:end="121:26">&gt;&gt;</operator> <literal type="number" pos:start="121:28" pos:end="121:28">9</literal><operator pos:start="121:29" pos:end="121:29">)</operator> <operator pos:start="121:31" pos:end="121:31">/</operator> <name pos:start="121:33" pos:end="121:55"><name pos:start="121:33" pos:end="121:38">extent</name><operator pos:start="121:39" pos:end="121:40">-&gt;</operator><name pos:start="121:41" pos:end="121:55">cluster_sectors</name></name><operator pos:start="121:56" pos:end="121:56">)</operator> <operator pos:start="121:58" pos:end="121:58">%</operator> <name pos:start="121:60" pos:end="121:74"><name pos:start="121:60" pos:end="121:65">extent</name><operator pos:start="121:66" pos:end="121:67">-&gt;</operator><name pos:start="121:68" pos:end="121:74">l2_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:54"><expr pos:start="123:5" pos:end="123:53"><operator pos:start="123:5" pos:end="123:5">*</operator><name pos:start="123:6" pos:end="123:19">cluster_offset</name> <operator pos:start="123:21" pos:end="123:21">=</operator> <call pos:start="123:23" pos:end="123:53"><name pos:start="123:23" pos:end="123:33">le32_to_cpu</name><argument_list pos:start="123:34" pos:end="123:53">(<argument pos:start="123:35" pos:end="123:52"><expr pos:start="123:35" pos:end="123:52"><name pos:start="123:35" pos:end="123:52"><name pos:start="123:35" pos:end="123:42">l2_table</name><index pos:start="123:43" pos:end="123:52">[<expr pos:start="123:44" pos:end="123:51"><name pos:start="123:44" pos:end="123:51">l2_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="127:5" pos:end="191:5"><if pos:start="127:5" pos:end="191:5">if <condition pos:start="127:8" pos:end="127:25">(<expr pos:start="127:9" pos:end="127:24"><operator pos:start="127:9" pos:end="127:9">!</operator><operator pos:start="127:10" pos:end="127:10">*</operator><name pos:start="127:11" pos:end="127:24">cluster_offset</name></expr>)</condition> <block pos:start="127:27" pos:end="191:5">{<block_content pos:start="129:9" pos:end="189:9">

        <if_stmt pos:start="129:9" pos:end="133:9"><if pos:start="129:9" pos:end="133:9">if <condition pos:start="129:12" pos:end="129:22">(<expr pos:start="129:13" pos:end="129:21"><operator pos:start="129:13" pos:end="129:13">!</operator><name pos:start="129:14" pos:end="129:21">allocate</name></expr>)</condition> <block pos:start="129:24" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:22">

            <return pos:start="131:13" pos:end="131:22">return <expr pos:start="131:20" pos:end="131:21"><operator pos:start="131:20" pos:end="131:20">-</operator><literal type="number" pos:start="131:21" pos:end="131:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="137:9" pos:end="137:73">// Avoid the L2 tables update for the images that have snapshots.</comment>

        <expr_stmt pos:start="139:9" pos:end="139:55"><expr pos:start="139:9" pos:end="139:54"><operator pos:start="139:9" pos:end="139:9">*</operator><name pos:start="139:10" pos:end="139:23">cluster_offset</name> <operator pos:start="139:25" pos:end="139:25">=</operator> <call pos:start="139:27" pos:end="139:54"><name pos:start="139:27" pos:end="139:40">bdrv_getlength</name><argument_list pos:start="139:41" pos:end="139:54">(<argument pos:start="139:42" pos:end="139:53"><expr pos:start="139:42" pos:end="139:53"><name pos:start="139:42" pos:end="139:53"><name pos:start="139:42" pos:end="139:47">extent</name><operator pos:start="139:48" pos:end="139:49">-&gt;</operator><name pos:start="139:50" pos:end="139:53">file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="147:10"><expr pos:start="141:9" pos:end="147:9"><call pos:start="141:9" pos:end="147:9"><name pos:start="141:9" pos:end="141:21">bdrv_truncate</name><argument_list pos:start="141:22" pos:end="147:9">(

            <argument pos:start="143:13" pos:end="143:24"><expr pos:start="143:13" pos:end="143:24"><name pos:start="143:13" pos:end="143:24"><name pos:start="143:13" pos:end="143:18">extent</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:24">file</name></name></expr></argument>,

            <argument pos:start="145:13" pos:end="145:60"><expr pos:start="145:13" pos:end="145:60"><operator pos:start="145:13" pos:end="145:13">*</operator><name pos:start="145:14" pos:end="145:27">cluster_offset</name> <operator pos:start="145:29" pos:end="145:29">+</operator> <operator pos:start="145:31" pos:end="145:31">(</operator><name pos:start="145:32" pos:end="145:54"><name pos:start="145:32" pos:end="145:37">extent</name><operator pos:start="145:38" pos:end="145:39">-&gt;</operator><name pos:start="145:40" pos:end="145:54">cluster_sectors</name></name> <operator pos:start="145:56" pos:end="145:57">&lt;&lt;</operator> <literal type="number" pos:start="145:59" pos:end="145:59">9</literal><operator pos:start="145:60" pos:end="145:60">)</operator></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="151:9" pos:end="151:30"><expr pos:start="151:9" pos:end="151:29"><operator pos:start="151:9" pos:end="151:9">*</operator><name pos:start="151:10" pos:end="151:23">cluster_offset</name> <operator pos:start="151:25" pos:end="151:27">&gt;&gt;=</operator> <literal type="number" pos:start="151:29" pos:end="151:29">9</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:43"><expr pos:start="153:9" pos:end="153:42"><name pos:start="153:9" pos:end="153:11">tmp</name> <operator pos:start="153:13" pos:end="153:13">=</operator> <call pos:start="153:15" pos:end="153:42"><name pos:start="153:15" pos:end="153:25">cpu_to_le32</name><argument_list pos:start="153:26" pos:end="153:42">(<argument pos:start="153:27" pos:end="153:41"><expr pos:start="153:27" pos:end="153:41"><operator pos:start="153:27" pos:end="153:27">*</operator><name pos:start="153:28" pos:end="153:41">cluster_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:33"><expr pos:start="155:9" pos:end="155:32"><name pos:start="155:9" pos:end="155:26"><name pos:start="155:9" pos:end="155:16">l2_table</name><index pos:start="155:17" pos:end="155:26">[<expr pos:start="155:18" pos:end="155:25"><name pos:start="155:18" pos:end="155:25">l2_index</name></expr>]</index></name> <operator pos:start="155:28" pos:end="155:28">=</operator> <name pos:start="155:30" pos:end="155:32">tmp</name></expr>;</expr_stmt>



        <comment type="block" pos:start="159:9" pos:end="167:11">/* First of all we write grain itself, to avoid race condition

         * that may to corrupt the image.

         * This problem may occur because of insufficient space on host disk

         * or inappropriate VM shutdown.

         */</comment>

        <if_stmt pos:start="169:9" pos:end="173:22"><if pos:start="169:9" pos:end="173:22">if <condition pos:start="169:12" pos:end="171:69">(<expr pos:start="169:13" pos:end="171:68"><call pos:start="169:13" pos:end="171:62"><name pos:start="169:13" pos:end="169:29">get_whole_cluster</name><argument_list pos:start="169:30" pos:end="171:62">(

                <argument pos:start="171:17" pos:end="171:18"><expr pos:start="171:17" pos:end="171:18"><name pos:start="171:17" pos:end="171:18">bs</name></expr></argument>, <argument pos:start="171:21" pos:end="171:26"><expr pos:start="171:21" pos:end="171:26"><name pos:start="171:21" pos:end="171:26">extent</name></expr></argument>, <argument pos:start="171:29" pos:end="171:43"><expr pos:start="171:29" pos:end="171:43"><operator pos:start="171:29" pos:end="171:29">*</operator><name pos:start="171:30" pos:end="171:43">cluster_offset</name></expr></argument>, <argument pos:start="171:46" pos:end="171:51"><expr pos:start="171:46" pos:end="171:51"><name pos:start="171:46" pos:end="171:51">offset</name></expr></argument>, <argument pos:start="171:54" pos:end="171:61"><expr pos:start="171:54" pos:end="171:61"><name pos:start="171:54" pos:end="171:61">allocate</name></expr></argument>)</argument_list></call> <operator pos:start="171:64" pos:end="171:65">==</operator> <operator pos:start="171:67" pos:end="171:67">-</operator><literal type="number" pos:start="171:68" pos:end="171:68">1</literal></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:22"><block_content pos:start="173:13" pos:end="173:22">

            <return pos:start="173:13" pos:end="173:22">return <expr pos:start="173:20" pos:end="173:21"><operator pos:start="173:20" pos:end="173:20">-</operator><literal type="number" pos:start="173:21" pos:end="173:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="177:9" pos:end="189:9"><if pos:start="177:9" pos:end="189:9">if <condition pos:start="177:12" pos:end="177:19">(<expr pos:start="177:13" pos:end="177:18"><name pos:start="177:13" pos:end="177:18">m_data</name></expr>)</condition> <block pos:start="177:21" pos:end="189:9">{<block_content pos:start="179:13" pos:end="187:30">

            <expr_stmt pos:start="179:13" pos:end="179:33"><expr pos:start="179:13" pos:end="179:32"><name pos:start="179:13" pos:end="179:26"><name pos:start="179:13" pos:end="179:18">m_data</name><operator pos:start="179:19" pos:end="179:20">-&gt;</operator><name pos:start="179:21" pos:end="179:26">offset</name></name> <operator pos:start="179:28" pos:end="179:28">=</operator> <name pos:start="179:30" pos:end="179:32">tmp</name></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:40"><expr pos:start="181:13" pos:end="181:39"><name pos:start="181:13" pos:end="181:28"><name pos:start="181:13" pos:end="181:18">m_data</name><operator pos:start="181:19" pos:end="181:20">-&gt;</operator><name pos:start="181:21" pos:end="181:28">l1_index</name></name> <operator pos:start="181:30" pos:end="181:30">=</operator> <name pos:start="181:32" pos:end="181:39">l1_index</name></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:40"><expr pos:start="183:13" pos:end="183:39"><name pos:start="183:13" pos:end="183:28"><name pos:start="183:13" pos:end="183:18">m_data</name><operator pos:start="183:19" pos:end="183:20">-&gt;</operator><name pos:start="183:21" pos:end="183:28">l2_index</name></name> <operator pos:start="183:30" pos:end="183:30">=</operator> <name pos:start="183:32" pos:end="183:39">l2_index</name></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:42"><expr pos:start="185:13" pos:end="185:41"><name pos:start="185:13" pos:end="185:29"><name pos:start="185:13" pos:end="185:18">m_data</name><operator pos:start="185:19" pos:end="185:20">-&gt;</operator><name pos:start="185:21" pos:end="185:29">l2_offset</name></name> <operator pos:start="185:31" pos:end="185:31">=</operator> <name pos:start="185:33" pos:end="185:41">l2_offset</name></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:30"><expr pos:start="187:13" pos:end="187:29"><name pos:start="187:13" pos:end="187:25"><name pos:start="187:13" pos:end="187:18">m_data</name><operator pos:start="187:19" pos:end="187:20">-&gt;</operator><name pos:start="187:21" pos:end="187:25">valid</name></name> <operator pos:start="187:27" pos:end="187:27">=</operator> <literal type="number" pos:start="187:29" pos:end="187:29">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:26"><expr pos:start="193:5" pos:end="193:25"><operator pos:start="193:5" pos:end="193:5">*</operator><name pos:start="193:6" pos:end="193:19">cluster_offset</name> <operator pos:start="193:21" pos:end="193:23">&lt;&lt;=</operator> <literal type="number" pos:start="193:25" pos:end="193:25">9</literal></expr>;</expr_stmt>

    <return pos:start="195:5" pos:end="195:13">return <expr pos:start="195:12" pos:end="195:12"><literal type="number" pos:start="195:12" pos:end="195:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
