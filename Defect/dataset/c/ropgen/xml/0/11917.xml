<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11917.c" pos:tabs="8"><function pos:start="1:1" pos:end="293:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">init_proc_e500</name> <parameter_list pos:start="1:28" pos:end="1:58">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:39">CPUPPCState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">env</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:57"><decl pos:start="1:47" pos:end="1:57"><type pos:start="1:47" pos:end="1:57"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:57">version</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="293:1">{<block_content pos:start="5:5" pos:end="291:26">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:23"><name pos:start="5:14" pos:end="5:20">tlbncfg</name><index pos:start="5:21" pos:end="5:23">[<expr pos:start="5:22" pos:end="5:22"><literal type="number" pos:start="5:22" pos:end="5:22">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:22">ivor_mask</name> <init pos:start="7:24" pos:end="7:46">= <expr pos:start="7:26" pos:end="7:46"><literal type="number" pos:start="7:26" pos:end="7:46">0x0000000F0000FFFFULL</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="14:0"><decl pos:start="9:5" pos:end="11:28"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:19">l1cfg0</name> <init pos:start="9:21" pos:end="11:28">= <expr pos:start="9:23" pos:end="11:28"><literal type="number" pos:start="9:23" pos:end="9:28">0x3800</literal>  <comment type="block" pos:start="9:31" pos:end="9:42">/* 8 ways */</comment>

                    <operator pos:start="11:21" pos:end="11:21">|</operator> <literal type="number" pos:start="11:23" pos:end="11:28">0x0020</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="11:31" pos:end="11:41">/* 32 kb */</comment>

<cpp:if pos:start="13:1" pos:end="13:30">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:30"><operator pos:start="13:5" pos:end="13:5">!</operator><call pos:start="13:6" pos:end="13:30"><name pos:start="13:6" pos:end="13:12">defined</name><argument_list pos:start="13:13" pos:end="13:30">(<argument pos:start="13:14" pos:end="13:29"><expr pos:start="13:14" pos:end="13:29"><name pos:start="13:14" pos:end="13:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <decl_stmt pos:start="15:5" pos:end="18:0"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="21:5" pos:end="21:19">/* Time base */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><call pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:11">gen_tbl</name><argument_list pos:start="23:12" pos:end="23:16">(<argument pos:start="23:13" pos:end="23:15"><expr pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="25:5" pos:end="33:7">/*

     * XXX The e500 doesn't implement IVOR7 and IVOR9, but doesn't

     *     complain when accessing them.

     * gen_spr_BookE(env, 0x0000000F0000FD7FULL);

     */</comment>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:30">(<expr pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:15">version</name> <operator pos:start="35:17" pos:end="35:18">==</operator> <name pos:start="35:20" pos:end="35:29">fsl_e500mc</name></expr>)</condition> <block pos:start="35:32" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:42">

        <expr_stmt pos:start="37:9" pos:end="37:42"><expr pos:start="37:9" pos:end="37:41"><name pos:start="37:9" pos:end="37:17">ivor_mask</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <literal type="number" pos:start="37:21" pos:end="37:41">0x000003FE0000FFFFULL</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><call pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:17">gen_spr_BookE</name><argument_list pos:start="41:18" pos:end="41:33">(<argument pos:start="41:19" pos:end="41:21"><expr pos:start="41:19" pos:end="41:21"><name pos:start="41:19" pos:end="41:21">env</name></expr></argument>, <argument pos:start="41:24" pos:end="41:32"><expr pos:start="41:24" pos:end="41:32"><name pos:start="41:24" pos:end="41:32">ivor_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="43:5" pos:end="43:34">/* Processor identification */</comment>

    <expr_stmt pos:start="45:5" pos:end="51:29"><expr pos:start="45:5" pos:end="51:28"><call pos:start="45:5" pos:end="51:28"><name pos:start="45:5" pos:end="45:16">spr_register</name><argument_list pos:start="45:17" pos:end="51:28">(<argument pos:start="45:18" pos:end="45:20"><expr pos:start="45:18" pos:end="45:20"><name pos:start="45:18" pos:end="45:20">env</name></expr></argument>, <argument pos:start="45:23" pos:end="45:35"><expr pos:start="45:23" pos:end="45:35"><name pos:start="45:23" pos:end="45:35">SPR_BOOKE_PIR</name></expr></argument>, <argument pos:start="45:38" pos:end="45:42"><expr pos:start="45:38" pos:end="45:42"><literal type="string" pos:start="45:38" pos:end="45:42">"PIR"</literal></expr></argument>,

                 <argument pos:start="47:18" pos:end="47:29"><expr pos:start="47:18" pos:end="47:29"><name pos:start="47:18" pos:end="47:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="47:32" pos:end="47:43"><expr pos:start="47:32" pos:end="47:43"><name pos:start="47:32" pos:end="47:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="49:18" pos:end="49:34"><expr pos:start="49:18" pos:end="49:34"><operator pos:start="49:18" pos:end="49:18">&amp;</operator><name pos:start="49:19" pos:end="49:34">spr_read_generic</name></expr></argument>, <argument pos:start="49:37" pos:end="49:50"><expr pos:start="49:37" pos:end="49:50"><operator pos:start="49:37" pos:end="49:37">&amp;</operator><name pos:start="49:38" pos:end="49:50">spr_write_pir</name></expr></argument>,

                 <argument pos:start="51:18" pos:end="51:27"><expr pos:start="51:18" pos:end="51:27"><literal type="number" pos:start="51:18" pos:end="51:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="53:5" pos:end="53:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="55:5" pos:end="66:0"><expr pos:start="55:5" pos:end="61:28"><call pos:start="55:5" pos:end="61:28"><name pos:start="55:5" pos:end="55:16">spr_register</name><argument_list pos:start="55:17" pos:end="61:28">(<argument pos:start="55:18" pos:end="55:20"><expr pos:start="55:18" pos:end="55:20"><name pos:start="55:18" pos:end="55:20">env</name></expr></argument>, <argument pos:start="55:23" pos:end="55:39"><expr pos:start="55:23" pos:end="55:39"><name pos:start="55:23" pos:end="55:39">SPR_BOOKE_SPEFSCR</name></expr></argument>, <argument pos:start="55:42" pos:end="55:50"><expr pos:start="55:42" pos:end="55:50"><literal type="string" pos:start="55:42" pos:end="55:50">"SPEFSCR"</literal></expr></argument>,

                 <argument pos:start="57:18" pos:end="57:34"><expr pos:start="57:18" pos:end="57:34"><operator pos:start="57:18" pos:end="57:18">&amp;</operator><name pos:start="57:19" pos:end="57:34">spr_read_spefscr</name></expr></argument>, <argument pos:start="57:37" pos:end="57:54"><expr pos:start="57:37" pos:end="57:54"><operator pos:start="57:37" pos:end="57:37">&amp;</operator><name pos:start="57:38" pos:end="57:54">spr_write_spefscr</name></expr></argument>,

                 <argument pos:start="59:18" pos:end="59:34"><expr pos:start="59:18" pos:end="59:34"><operator pos:start="59:18" pos:end="59:18">&amp;</operator><name pos:start="59:19" pos:end="59:34">spr_read_spefscr</name></expr></argument>, <argument pos:start="59:37" pos:end="59:54"><expr pos:start="59:37" pos:end="59:54"><operator pos:start="59:37" pos:end="59:37">&amp;</operator><name pos:start="59:38" pos:end="59:54">spr_write_spefscr</name></expr></argument>,

                 <argument pos:start="61:18" pos:end="61:27"><expr pos:start="61:18" pos:end="61:27"><literal type="number" pos:start="61:18" pos:end="61:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="63:5" pos:end="63:27">/* Memory management */</comment>

<cpp:if pos:start="65:1" pos:end="65:29">#<cpp:directive pos:start="65:2" pos:end="65:3">if</cpp:directive> <expr pos:start="65:5" pos:end="65:29"><call pos:start="65:5" pos:end="65:29"><name pos:start="65:5" pos:end="65:11">defined</name><argument_list pos:start="65:12" pos:end="65:29">(<argument pos:start="65:13" pos:end="65:28"><expr pos:start="65:13" pos:end="65:28"><name pos:start="65:13" pos:end="65:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="67:5" pos:end="67:31"><expr pos:start="67:5" pos:end="67:30"><name pos:start="67:5" pos:end="67:25"><name pos:start="67:5" pos:end="67:7">env</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:25">dcache_line_size</name></name> <operator pos:start="67:27" pos:end="67:27">=</operator> <literal type="number" pos:start="67:29" pos:end="67:30">32</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="72:0"><expr pos:start="69:5" pos:end="69:30"><name pos:start="69:5" pos:end="69:25"><name pos:start="69:5" pos:end="69:7">env</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:25">icache_line_size</name></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <literal type="number" pos:start="69:29" pos:end="69:30">32</literal></expr>;</expr_stmt>

<cpp:else pos:start="71:1" pos:end="71:5">#<cpp:directive pos:start="71:2" pos:end="71:5">else</cpp:directive></cpp:else> <comment type="block" pos:start="71:7" pos:end="71:38">/* !defined(CONFIG_USER_ONLY) */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:21"><expr pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:16"><name pos:start="73:5" pos:end="73:7">env</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:16">nb_pids</name></name> <operator pos:start="73:18" pos:end="73:18">=</operator> <literal type="number" pos:start="73:20" pos:end="73:20">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:21"><expr pos:start="75:5" pos:end="75:20"><name pos:start="75:5" pos:end="75:16"><name pos:start="75:5" pos:end="75:7">env</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:16">nb_ways</name></name> <operator pos:start="75:18" pos:end="75:18">=</operator> <literal type="number" pos:start="75:20" pos:end="75:20">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:21"><expr pos:start="77:5" pos:end="77:20"><name pos:start="77:5" pos:end="77:16"><name pos:start="77:5" pos:end="77:7">env</name><operator pos:start="77:8" pos:end="77:9">-&gt;</operator><name pos:start="77:10" pos:end="77:16">id_tlbs</name></name> <operator pos:start="77:18" pos:end="77:18">=</operator> <literal type="number" pos:start="77:20" pos:end="77:20">0</literal></expr>;</expr_stmt>

    <switch pos:start="79:5" pos:end="132:0">switch <condition pos:start="79:12" pos:end="79:20">(<expr pos:start="79:13" pos:end="79:19"><name pos:start="79:13" pos:end="79:19">version</name></expr>)</condition> <block pos:start="79:22" pos:end="132:0">{<block_content pos:start="81:5" pos:end="127:78">

    <case pos:start="81:5" pos:end="81:20">case <expr pos:start="81:10" pos:end="81:19"><name pos:start="81:10" pos:end="81:19">fsl_e500v1</name></expr>:</case>

        <comment type="block" pos:start="83:9" pos:end="83:20">/* e500v1 */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:50"><expr pos:start="85:9" pos:end="85:49"><name pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:15">tlbncfg</name><index pos:start="85:16" pos:end="85:18">[<expr pos:start="85:17" pos:end="85:17"><literal type="number" pos:start="85:17" pos:end="85:17">0</literal></expr>]</index></name> <operator pos:start="85:20" pos:end="85:20">=</operator> <call pos:start="85:22" pos:end="85:49"><name pos:start="85:22" pos:end="85:32">gen_tlbncfg</name><argument_list pos:start="85:33" pos:end="85:49">(<argument pos:start="85:34" pos:end="85:34"><expr pos:start="85:34" pos:end="85:34"><literal type="number" pos:start="85:34" pos:end="85:34">2</literal></expr></argument>, <argument pos:start="85:37" pos:end="85:37"><expr pos:start="85:37" pos:end="85:37"><literal type="number" pos:start="85:37" pos:end="85:37">1</literal></expr></argument>, <argument pos:start="85:40" pos:end="85:40"><expr pos:start="85:40" pos:end="85:40"><literal type="number" pos:start="85:40" pos:end="85:40">1</literal></expr></argument>, <argument pos:start="85:43" pos:end="85:43"><expr pos:start="85:43" pos:end="85:43"><literal type="number" pos:start="85:43" pos:end="85:43">0</literal></expr></argument>, <argument pos:start="85:46" pos:end="85:48"><expr pos:start="85:46" pos:end="85:48"><literal type="number" pos:start="85:46" pos:end="85:48">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:78"><expr pos:start="87:9" pos:end="87:77"><name pos:start="87:9" pos:end="87:18"><name pos:start="87:9" pos:end="87:15">tlbncfg</name><index pos:start="87:16" pos:end="87:18">[<expr pos:start="87:17" pos:end="87:17"><literal type="number" pos:start="87:17" pos:end="87:17">1</literal></expr>]</index></name> <operator pos:start="87:20" pos:end="87:20">=</operator> <call pos:start="87:22" pos:end="87:77"><name pos:start="87:22" pos:end="87:32">gen_tlbncfg</name><argument_list pos:start="87:33" pos:end="87:77">(<argument pos:start="87:34" pos:end="87:35"><expr pos:start="87:34" pos:end="87:35"><literal type="number" pos:start="87:34" pos:end="87:35">16</literal></expr></argument>, <argument pos:start="87:38" pos:end="87:38"><expr pos:start="87:38" pos:end="87:38"><literal type="number" pos:start="87:38" pos:end="87:38">1</literal></expr></argument>, <argument pos:start="87:41" pos:end="87:41"><expr pos:start="87:41" pos:end="87:41"><literal type="number" pos:start="87:41" pos:end="87:41">9</literal></expr></argument>, <argument pos:start="87:44" pos:end="87:72"><expr pos:start="87:44" pos:end="87:72"><name pos:start="87:44" pos:end="87:56">TLBnCFG_AVAIL</name> <operator pos:start="87:58" pos:end="87:58">|</operator> <name pos:start="87:60" pos:end="87:72">TLBnCFG_IPROT</name></expr></argument>, <argument pos:start="87:75" pos:end="87:76"><expr pos:start="87:75" pos:end="87:76"><literal type="number" pos:start="87:75" pos:end="87:76">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:35"><expr pos:start="89:9" pos:end="89:34"><name pos:start="89:9" pos:end="89:29"><name pos:start="89:9" pos:end="89:11">env</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:29">dcache_line_size</name></name> <operator pos:start="89:31" pos:end="89:31">=</operator> <literal type="number" pos:start="89:33" pos:end="89:34">32</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:35"><expr pos:start="91:9" pos:end="91:34"><name pos:start="91:9" pos:end="91:29"><name pos:start="91:9" pos:end="91:11">env</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:29">icache_line_size</name></name> <operator pos:start="91:31" pos:end="91:31">=</operator> <literal type="number" pos:start="91:33" pos:end="91:34">32</literal></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:20">case <expr pos:start="95:10" pos:end="95:19"><name pos:start="95:10" pos:end="95:19">fsl_e500v2</name></expr>:</case>

        <comment type="block" pos:start="97:9" pos:end="97:20">/* e500v2 */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:50"><expr pos:start="99:9" pos:end="99:49"><name pos:start="99:9" pos:end="99:18"><name pos:start="99:9" pos:end="99:15">tlbncfg</name><index pos:start="99:16" pos:end="99:18">[<expr pos:start="99:17" pos:end="99:17"><literal type="number" pos:start="99:17" pos:end="99:17">0</literal></expr>]</index></name> <operator pos:start="99:20" pos:end="99:20">=</operator> <call pos:start="99:22" pos:end="99:49"><name pos:start="99:22" pos:end="99:32">gen_tlbncfg</name><argument_list pos:start="99:33" pos:end="99:49">(<argument pos:start="99:34" pos:end="99:34"><expr pos:start="99:34" pos:end="99:34"><literal type="number" pos:start="99:34" pos:end="99:34">4</literal></expr></argument>, <argument pos:start="99:37" pos:end="99:37"><expr pos:start="99:37" pos:end="99:37"><literal type="number" pos:start="99:37" pos:end="99:37">1</literal></expr></argument>, <argument pos:start="99:40" pos:end="99:40"><expr pos:start="99:40" pos:end="99:40"><literal type="number" pos:start="99:40" pos:end="99:40">1</literal></expr></argument>, <argument pos:start="99:43" pos:end="99:43"><expr pos:start="99:43" pos:end="99:43"><literal type="number" pos:start="99:43" pos:end="99:43">0</literal></expr></argument>, <argument pos:start="99:46" pos:end="99:48"><expr pos:start="99:46" pos:end="99:48"><literal type="number" pos:start="99:46" pos:end="99:48">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:79"><expr pos:start="101:9" pos:end="101:78"><name pos:start="101:9" pos:end="101:18"><name pos:start="101:9" pos:end="101:15">tlbncfg</name><index pos:start="101:16" pos:end="101:18">[<expr pos:start="101:17" pos:end="101:17"><literal type="number" pos:start="101:17" pos:end="101:17">1</literal></expr>]</index></name> <operator pos:start="101:20" pos:end="101:20">=</operator> <call pos:start="101:22" pos:end="101:78"><name pos:start="101:22" pos:end="101:32">gen_tlbncfg</name><argument_list pos:start="101:33" pos:end="101:78">(<argument pos:start="101:34" pos:end="101:35"><expr pos:start="101:34" pos:end="101:35"><literal type="number" pos:start="101:34" pos:end="101:35">16</literal></expr></argument>, <argument pos:start="101:38" pos:end="101:38"><expr pos:start="101:38" pos:end="101:38"><literal type="number" pos:start="101:38" pos:end="101:38">1</literal></expr></argument>, <argument pos:start="101:41" pos:end="101:42"><expr pos:start="101:41" pos:end="101:42"><literal type="number" pos:start="101:41" pos:end="101:42">12</literal></expr></argument>, <argument pos:start="101:45" pos:end="101:73"><expr pos:start="101:45" pos:end="101:73"><name pos:start="101:45" pos:end="101:57">TLBnCFG_AVAIL</name> <operator pos:start="101:59" pos:end="101:59">|</operator> <name pos:start="101:61" pos:end="101:73">TLBnCFG_IPROT</name></expr></argument>, <argument pos:start="101:76" pos:end="101:77"><expr pos:start="101:76" pos:end="101:77"><literal type="number" pos:start="101:76" pos:end="101:77">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:35"><expr pos:start="103:9" pos:end="103:34"><name pos:start="103:9" pos:end="103:29"><name pos:start="103:9" pos:end="103:11">env</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:29">dcache_line_size</name></name> <operator pos:start="103:31" pos:end="103:31">=</operator> <literal type="number" pos:start="103:33" pos:end="103:34">32</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:35"><expr pos:start="105:9" pos:end="105:34"><name pos:start="105:9" pos:end="105:29"><name pos:start="105:9" pos:end="105:11">env</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:29">icache_line_size</name></name> <operator pos:start="105:31" pos:end="105:31">=</operator> <literal type="number" pos:start="105:33" pos:end="105:34">32</literal></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>

    <case pos:start="109:5" pos:end="109:20">case <expr pos:start="109:10" pos:end="109:19"><name pos:start="109:10" pos:end="109:19">fsl_e500mc</name></expr>:</case>

        <comment type="block" pos:start="111:9" pos:end="111:20">/* e500mc */</comment>

        <expr_stmt pos:start="113:9" pos:end="113:50"><expr pos:start="113:9" pos:end="113:49"><name pos:start="113:9" pos:end="113:18"><name pos:start="113:9" pos:end="113:15">tlbncfg</name><index pos:start="113:16" pos:end="113:18">[<expr pos:start="113:17" pos:end="113:17"><literal type="number" pos:start="113:17" pos:end="113:17">0</literal></expr>]</index></name> <operator pos:start="113:20" pos:end="113:20">=</operator> <call pos:start="113:22" pos:end="113:49"><name pos:start="113:22" pos:end="113:32">gen_tlbncfg</name><argument_list pos:start="113:33" pos:end="113:49">(<argument pos:start="113:34" pos:end="113:34"><expr pos:start="113:34" pos:end="113:34"><literal type="number" pos:start="113:34" pos:end="113:34">4</literal></expr></argument>, <argument pos:start="113:37" pos:end="113:37"><expr pos:start="113:37" pos:end="113:37"><literal type="number" pos:start="113:37" pos:end="113:37">1</literal></expr></argument>, <argument pos:start="113:40" pos:end="113:40"><expr pos:start="113:40" pos:end="113:40"><literal type="number" pos:start="113:40" pos:end="113:40">1</literal></expr></argument>, <argument pos:start="113:43" pos:end="113:43"><expr pos:start="113:43" pos:end="113:43"><literal type="number" pos:start="113:43" pos:end="113:43">0</literal></expr></argument>, <argument pos:start="113:46" pos:end="113:48"><expr pos:start="113:46" pos:end="113:48"><literal type="number" pos:start="113:46" pos:end="113:48">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:79"><expr pos:start="115:9" pos:end="115:78"><name pos:start="115:9" pos:end="115:18"><name pos:start="115:9" pos:end="115:15">tlbncfg</name><index pos:start="115:16" pos:end="115:18">[<expr pos:start="115:17" pos:end="115:17"><literal type="number" pos:start="115:17" pos:end="115:17">1</literal></expr>]</index></name> <operator pos:start="115:20" pos:end="115:20">=</operator> <call pos:start="115:22" pos:end="115:78"><name pos:start="115:22" pos:end="115:32">gen_tlbncfg</name><argument_list pos:start="115:33" pos:end="115:78">(<argument pos:start="115:34" pos:end="115:35"><expr pos:start="115:34" pos:end="115:35"><literal type="number" pos:start="115:34" pos:end="115:35">64</literal></expr></argument>, <argument pos:start="115:38" pos:end="115:38"><expr pos:start="115:38" pos:end="115:38"><literal type="number" pos:start="115:38" pos:end="115:38">1</literal></expr></argument>, <argument pos:start="115:41" pos:end="115:42"><expr pos:start="115:41" pos:end="115:42"><literal type="number" pos:start="115:41" pos:end="115:42">12</literal></expr></argument>, <argument pos:start="115:45" pos:end="115:73"><expr pos:start="115:45" pos:end="115:73"><name pos:start="115:45" pos:end="115:57">TLBnCFG_AVAIL</name> <operator pos:start="115:59" pos:end="115:59">|</operator> <name pos:start="115:61" pos:end="115:73">TLBnCFG_IPROT</name></expr></argument>, <argument pos:start="115:76" pos:end="115:77"><expr pos:start="115:76" pos:end="115:77"><literal type="number" pos:start="115:76" pos:end="115:77">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:35"><expr pos:start="117:9" pos:end="117:34"><name pos:start="117:9" pos:end="117:29"><name pos:start="117:9" pos:end="117:11">env</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:29">dcache_line_size</name></name> <operator pos:start="117:31" pos:end="117:31">=</operator> <literal type="number" pos:start="117:33" pos:end="117:34">64</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:35"><expr pos:start="119:9" pos:end="119:34"><name pos:start="119:9" pos:end="119:29"><name pos:start="119:9" pos:end="119:11">env</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:29">icache_line_size</name></name> <operator pos:start="119:31" pos:end="119:31">=</operator> <literal type="number" pos:start="119:33" pos:end="119:34">64</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:28"><expr pos:start="121:9" pos:end="121:27"><name pos:start="121:9" pos:end="121:14">l1cfg0</name> <operator pos:start="121:16" pos:end="121:17">|=</operator> <literal type="number" pos:start="121:19" pos:end="121:27">0x1000000</literal></expr>;</expr_stmt> <comment type="block" pos:start="121:30" pos:end="121:59">/* 64 byte cache block size */</comment>

        <break pos:start="123:9" pos:end="123:14">break;</break>

    <default pos:start="125:5" pos:end="125:12">default:</default>

        <expr_stmt pos:start="127:9" pos:end="127:78"><expr pos:start="127:9" pos:end="127:77"><call pos:start="127:9" pos:end="127:77"><name pos:start="127:9" pos:end="127:17">cpu_abort</name><argument_list pos:start="127:18" pos:end="127:77">(<argument pos:start="127:19" pos:end="127:21"><expr pos:start="127:19" pos:end="127:21"><name pos:start="127:19" pos:end="127:21">env</name></expr></argument>, <argument pos:start="127:24" pos:end="127:57"><expr pos:start="127:24" pos:end="127:57"><literal type="string" pos:start="127:24" pos:end="127:38">"Unknown CPU: "</literal> <name pos:start="127:40" pos:end="127:52">TARGET_FMT_lx</name> <literal type="string" pos:start="127:54" pos:end="127:57">"\n"</literal></expr></argument>, <argument pos:start="127:60" pos:end="127:76"><expr pos:start="127:60" pos:end="127:76"><name pos:start="127:60" pos:end="127:76"><name pos:start="127:60" pos:end="127:62">env</name><operator pos:start="127:63" pos:end="127:64">-&gt;</operator><name pos:start="127:65" pos:end="127:67">spr</name><index pos:start="127:68" pos:end="127:76">[<expr pos:start="127:69" pos:end="127:75"><name pos:start="127:69" pos:end="127:75">SPR_PVR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

<cpp:endif pos:start="131:1" pos:end="131:6">#<cpp:directive pos:start="131:2" pos:end="131:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="133:5" pos:end="133:47"><expr pos:start="133:5" pos:end="133:46"><call pos:start="133:5" pos:end="133:46"><name pos:start="133:5" pos:end="133:20">gen_spr_BookE206</name><argument_list pos:start="133:21" pos:end="133:46">(<argument pos:start="133:22" pos:end="133:24"><expr pos:start="133:22" pos:end="133:24"><name pos:start="133:22" pos:end="133:24">env</name></expr></argument>, <argument pos:start="133:27" pos:end="133:36"><expr pos:start="133:27" pos:end="133:36"><literal type="number" pos:start="133:27" pos:end="133:36">0x000000DF</literal></expr></argument>, <argument pos:start="133:39" pos:end="133:45"><expr pos:start="133:39" pos:end="133:45"><name pos:start="133:39" pos:end="133:45">tlbncfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="135:5" pos:end="135:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="137:5" pos:end="143:29"><expr pos:start="137:5" pos:end="143:28"><call pos:start="137:5" pos:end="143:28"><name pos:start="137:5" pos:end="137:16">spr_register</name><argument_list pos:start="137:17" pos:end="143:28">(<argument pos:start="137:18" pos:end="137:20"><expr pos:start="137:18" pos:end="137:20"><name pos:start="137:18" pos:end="137:20">env</name></expr></argument>, <argument pos:start="137:23" pos:end="137:30"><expr pos:start="137:23" pos:end="137:30"><name pos:start="137:23" pos:end="137:30">SPR_HID0</name></expr></argument>, <argument pos:start="137:33" pos:end="137:38"><expr pos:start="137:33" pos:end="137:38"><literal type="string" pos:start="137:33" pos:end="137:38">"HID0"</literal></expr></argument>,

                 <argument pos:start="139:18" pos:end="139:29"><expr pos:start="139:18" pos:end="139:29"><name pos:start="139:18" pos:end="139:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="139:32" pos:end="139:43"><expr pos:start="139:32" pos:end="139:43"><name pos:start="139:32" pos:end="139:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="141:18" pos:end="141:34"><expr pos:start="141:18" pos:end="141:34"><operator pos:start="141:18" pos:end="141:18">&amp;</operator><name pos:start="141:19" pos:end="141:34">spr_read_generic</name></expr></argument>, <argument pos:start="141:37" pos:end="141:54"><expr pos:start="141:37" pos:end="141:54"><operator pos:start="141:37" pos:end="141:37">&amp;</operator><name pos:start="141:38" pos:end="141:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="143:18" pos:end="143:27"><expr pos:start="143:18" pos:end="143:27"><literal type="number" pos:start="143:18" pos:end="143:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="145:5" pos:end="145:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="147:5" pos:end="153:29"><expr pos:start="147:5" pos:end="153:28"><call pos:start="147:5" pos:end="153:28"><name pos:start="147:5" pos:end="147:16">spr_register</name><argument_list pos:start="147:17" pos:end="153:28">(<argument pos:start="147:18" pos:end="147:20"><expr pos:start="147:18" pos:end="147:20"><name pos:start="147:18" pos:end="147:20">env</name></expr></argument>, <argument pos:start="147:23" pos:end="147:30"><expr pos:start="147:23" pos:end="147:30"><name pos:start="147:23" pos:end="147:30">SPR_HID1</name></expr></argument>, <argument pos:start="147:33" pos:end="147:38"><expr pos:start="147:33" pos:end="147:38"><literal type="string" pos:start="147:33" pos:end="147:38">"HID1"</literal></expr></argument>,

                 <argument pos:start="149:18" pos:end="149:29"><expr pos:start="149:18" pos:end="149:29"><name pos:start="149:18" pos:end="149:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="149:32" pos:end="149:43"><expr pos:start="149:32" pos:end="149:43"><name pos:start="149:32" pos:end="149:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="151:18" pos:end="151:34"><expr pos:start="151:18" pos:end="151:34"><operator pos:start="151:18" pos:end="151:18">&amp;</operator><name pos:start="151:19" pos:end="151:34">spr_read_generic</name></expr></argument>, <argument pos:start="151:37" pos:end="151:54"><expr pos:start="151:37" pos:end="151:54"><operator pos:start="151:37" pos:end="151:37">&amp;</operator><name pos:start="151:38" pos:end="151:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="153:18" pos:end="153:27"><expr pos:start="153:18" pos:end="153:27"><literal type="number" pos:start="153:18" pos:end="153:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="155:5" pos:end="155:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="157:5" pos:end="163:29"><expr pos:start="157:5" pos:end="163:28"><call pos:start="157:5" pos:end="163:28"><name pos:start="157:5" pos:end="157:16">spr_register</name><argument_list pos:start="157:17" pos:end="163:28">(<argument pos:start="157:18" pos:end="157:20"><expr pos:start="157:18" pos:end="157:20"><name pos:start="157:18" pos:end="157:20">env</name></expr></argument>, <argument pos:start="157:23" pos:end="157:36"><expr pos:start="157:23" pos:end="157:36"><name pos:start="157:23" pos:end="157:36">SPR_Exxx_BBEAR</name></expr></argument>, <argument pos:start="157:39" pos:end="157:45"><expr pos:start="157:39" pos:end="157:45"><literal type="string" pos:start="157:39" pos:end="157:45">"BBEAR"</literal></expr></argument>,

                 <argument pos:start="159:18" pos:end="159:29"><expr pos:start="159:18" pos:end="159:29"><name pos:start="159:18" pos:end="159:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="159:32" pos:end="159:43"><expr pos:start="159:32" pos:end="159:43"><name pos:start="159:32" pos:end="159:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="161:18" pos:end="161:34"><expr pos:start="161:18" pos:end="161:34"><operator pos:start="161:18" pos:end="161:18">&amp;</operator><name pos:start="161:19" pos:end="161:34">spr_read_generic</name></expr></argument>, <argument pos:start="161:37" pos:end="161:54"><expr pos:start="161:37" pos:end="161:54"><operator pos:start="161:37" pos:end="161:37">&amp;</operator><name pos:start="161:38" pos:end="161:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="163:18" pos:end="163:27"><expr pos:start="163:18" pos:end="163:27"><literal type="number" pos:start="163:18" pos:end="163:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="165:5" pos:end="165:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="167:5" pos:end="173:29"><expr pos:start="167:5" pos:end="173:28"><call pos:start="167:5" pos:end="173:28"><name pos:start="167:5" pos:end="167:16">spr_register</name><argument_list pos:start="167:17" pos:end="173:28">(<argument pos:start="167:18" pos:end="167:20"><expr pos:start="167:18" pos:end="167:20"><name pos:start="167:18" pos:end="167:20">env</name></expr></argument>, <argument pos:start="167:23" pos:end="167:36"><expr pos:start="167:23" pos:end="167:36"><name pos:start="167:23" pos:end="167:36">SPR_Exxx_BBTAR</name></expr></argument>, <argument pos:start="167:39" pos:end="167:45"><expr pos:start="167:39" pos:end="167:45"><literal type="string" pos:start="167:39" pos:end="167:45">"BBTAR"</literal></expr></argument>,

                 <argument pos:start="169:18" pos:end="169:29"><expr pos:start="169:18" pos:end="169:29"><name pos:start="169:18" pos:end="169:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="169:32" pos:end="169:43"><expr pos:start="169:32" pos:end="169:43"><name pos:start="169:32" pos:end="169:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="171:18" pos:end="171:34"><expr pos:start="171:18" pos:end="171:34"><operator pos:start="171:18" pos:end="171:18">&amp;</operator><name pos:start="171:19" pos:end="171:34">spr_read_generic</name></expr></argument>, <argument pos:start="171:37" pos:end="171:54"><expr pos:start="171:37" pos:end="171:54"><operator pos:start="171:37" pos:end="171:37">&amp;</operator><name pos:start="171:38" pos:end="171:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="173:18" pos:end="173:27"><expr pos:start="173:18" pos:end="173:27"><literal type="number" pos:start="173:18" pos:end="173:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="175:5" pos:end="175:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="177:5" pos:end="183:29"><expr pos:start="177:5" pos:end="183:28"><call pos:start="177:5" pos:end="183:28"><name pos:start="177:5" pos:end="177:16">spr_register</name><argument_list pos:start="177:17" pos:end="183:28">(<argument pos:start="177:18" pos:end="177:20"><expr pos:start="177:18" pos:end="177:20"><name pos:start="177:18" pos:end="177:20">env</name></expr></argument>, <argument pos:start="177:23" pos:end="177:35"><expr pos:start="177:23" pos:end="177:35"><name pos:start="177:23" pos:end="177:35">SPR_Exxx_MCAR</name></expr></argument>, <argument pos:start="177:38" pos:end="177:43"><expr pos:start="177:38" pos:end="177:43"><literal type="string" pos:start="177:38" pos:end="177:43">"MCAR"</literal></expr></argument>,

                 <argument pos:start="179:18" pos:end="179:29"><expr pos:start="179:18" pos:end="179:29"><name pos:start="179:18" pos:end="179:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="179:32" pos:end="179:43"><expr pos:start="179:32" pos:end="179:43"><name pos:start="179:32" pos:end="179:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="181:18" pos:end="181:34"><expr pos:start="181:18" pos:end="181:34"><operator pos:start="181:18" pos:end="181:18">&amp;</operator><name pos:start="181:19" pos:end="181:34">spr_read_generic</name></expr></argument>, <argument pos:start="181:37" pos:end="181:54"><expr pos:start="181:37" pos:end="181:54"><operator pos:start="181:37" pos:end="181:37">&amp;</operator><name pos:start="181:38" pos:end="181:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="183:18" pos:end="183:27"><expr pos:start="183:18" pos:end="183:27"><literal type="number" pos:start="183:18" pos:end="183:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="185:5" pos:end="185:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="187:5" pos:end="193:29"><expr pos:start="187:5" pos:end="193:28"><call pos:start="187:5" pos:end="193:28"><name pos:start="187:5" pos:end="187:16">spr_register</name><argument_list pos:start="187:17" pos:end="193:28">(<argument pos:start="187:18" pos:end="187:20"><expr pos:start="187:18" pos:end="187:20"><name pos:start="187:18" pos:end="187:20">env</name></expr></argument>, <argument pos:start="187:23" pos:end="187:36"><expr pos:start="187:23" pos:end="187:36"><name pos:start="187:23" pos:end="187:36">SPR_BOOKE_MCSR</name></expr></argument>, <argument pos:start="187:39" pos:end="187:44"><expr pos:start="187:39" pos:end="187:44"><literal type="string" pos:start="187:39" pos:end="187:44">"MCSR"</literal></expr></argument>,

                 <argument pos:start="189:18" pos:end="189:29"><expr pos:start="189:18" pos:end="189:29"><name pos:start="189:18" pos:end="189:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="189:32" pos:end="189:43"><expr pos:start="189:32" pos:end="189:43"><name pos:start="189:32" pos:end="189:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="191:18" pos:end="191:34"><expr pos:start="191:18" pos:end="191:34"><operator pos:start="191:18" pos:end="191:18">&amp;</operator><name pos:start="191:19" pos:end="191:34">spr_read_generic</name></expr></argument>, <argument pos:start="191:37" pos:end="191:54"><expr pos:start="191:37" pos:end="191:54"><operator pos:start="191:37" pos:end="191:37">&amp;</operator><name pos:start="191:38" pos:end="191:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="193:18" pos:end="193:27"><expr pos:start="193:18" pos:end="193:27"><literal type="number" pos:start="193:18" pos:end="193:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="195:5" pos:end="195:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="197:5" pos:end="203:29"><expr pos:start="197:5" pos:end="203:28"><call pos:start="197:5" pos:end="203:28"><name pos:start="197:5" pos:end="197:16">spr_register</name><argument_list pos:start="197:17" pos:end="203:28">(<argument pos:start="197:18" pos:end="197:20"><expr pos:start="197:18" pos:end="197:20"><name pos:start="197:18" pos:end="197:20">env</name></expr></argument>, <argument pos:start="197:23" pos:end="197:36"><expr pos:start="197:23" pos:end="197:36"><name pos:start="197:23" pos:end="197:36">SPR_Exxx_NPIDR</name></expr></argument>, <argument pos:start="197:39" pos:end="197:45"><expr pos:start="197:39" pos:end="197:45"><literal type="string" pos:start="197:39" pos:end="197:45">"NPIDR"</literal></expr></argument>,

                 <argument pos:start="199:18" pos:end="199:29"><expr pos:start="199:18" pos:end="199:29"><name pos:start="199:18" pos:end="199:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="199:32" pos:end="199:43"><expr pos:start="199:32" pos:end="199:43"><name pos:start="199:32" pos:end="199:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="201:18" pos:end="201:34"><expr pos:start="201:18" pos:end="201:34"><operator pos:start="201:18" pos:end="201:18">&amp;</operator><name pos:start="201:19" pos:end="201:34">spr_read_generic</name></expr></argument>, <argument pos:start="201:37" pos:end="201:54"><expr pos:start="201:37" pos:end="201:54"><operator pos:start="201:37" pos:end="201:37">&amp;</operator><name pos:start="201:38" pos:end="201:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="203:18" pos:end="203:27"><expr pos:start="203:18" pos:end="203:27"><literal type="number" pos:start="203:18" pos:end="203:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="205:5" pos:end="205:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="207:5" pos:end="213:29"><expr pos:start="207:5" pos:end="213:28"><call pos:start="207:5" pos:end="213:28"><name pos:start="207:5" pos:end="207:16">spr_register</name><argument_list pos:start="207:17" pos:end="213:28">(<argument pos:start="207:18" pos:end="207:20"><expr pos:start="207:18" pos:end="207:20"><name pos:start="207:18" pos:end="207:20">env</name></expr></argument>, <argument pos:start="207:23" pos:end="207:36"><expr pos:start="207:23" pos:end="207:36"><name pos:start="207:23" pos:end="207:36">SPR_Exxx_BUCSR</name></expr></argument>, <argument pos:start="207:39" pos:end="207:45"><expr pos:start="207:39" pos:end="207:45"><literal type="string" pos:start="207:39" pos:end="207:45">"BUCSR"</literal></expr></argument>,

                 <argument pos:start="209:18" pos:end="209:29"><expr pos:start="209:18" pos:end="209:29"><name pos:start="209:18" pos:end="209:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="209:32" pos:end="209:43"><expr pos:start="209:32" pos:end="209:43"><name pos:start="209:32" pos:end="209:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="211:18" pos:end="211:34"><expr pos:start="211:18" pos:end="211:34"><operator pos:start="211:18" pos:end="211:18">&amp;</operator><name pos:start="211:19" pos:end="211:34">spr_read_generic</name></expr></argument>, <argument pos:start="211:37" pos:end="211:54"><expr pos:start="211:37" pos:end="211:54"><operator pos:start="211:37" pos:end="211:37">&amp;</operator><name pos:start="211:38" pos:end="211:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="213:18" pos:end="213:27"><expr pos:start="213:18" pos:end="213:27"><literal type="number" pos:start="213:18" pos:end="213:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="215:5" pos:end="215:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="217:5" pos:end="223:25"><expr pos:start="217:5" pos:end="223:24"><call pos:start="217:5" pos:end="223:24"><name pos:start="217:5" pos:end="217:16">spr_register</name><argument_list pos:start="217:17" pos:end="223:24">(<argument pos:start="217:18" pos:end="217:20"><expr pos:start="217:18" pos:end="217:20"><name pos:start="217:18" pos:end="217:20">env</name></expr></argument>, <argument pos:start="217:23" pos:end="217:37"><expr pos:start="217:23" pos:end="217:37"><name pos:start="217:23" pos:end="217:37">SPR_Exxx_L1CFG0</name></expr></argument>, <argument pos:start="217:40" pos:end="217:47"><expr pos:start="217:40" pos:end="217:47"><literal type="string" pos:start="217:40" pos:end="217:47">"L1CFG0"</literal></expr></argument>,

                 <argument pos:start="219:18" pos:end="219:29"><expr pos:start="219:18" pos:end="219:29"><name pos:start="219:18" pos:end="219:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="219:32" pos:end="219:43"><expr pos:start="219:32" pos:end="219:43"><name pos:start="219:32" pos:end="219:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="221:18" pos:end="221:34"><expr pos:start="221:18" pos:end="221:34"><operator pos:start="221:18" pos:end="221:18">&amp;</operator><name pos:start="221:19" pos:end="221:34">spr_read_generic</name></expr></argument>, <argument pos:start="221:37" pos:end="221:54"><expr pos:start="221:37" pos:end="221:54"><operator pos:start="221:37" pos:end="221:37">&amp;</operator><name pos:start="221:38" pos:end="221:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="223:18" pos:end="223:23"><expr pos:start="223:18" pos:end="223:23"><name pos:start="223:18" pos:end="223:23">l1cfg0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="225:5" pos:end="225:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="227:5" pos:end="233:29"><expr pos:start="227:5" pos:end="233:28"><call pos:start="227:5" pos:end="233:28"><name pos:start="227:5" pos:end="227:16">spr_register</name><argument_list pos:start="227:17" pos:end="233:28">(<argument pos:start="227:18" pos:end="227:20"><expr pos:start="227:18" pos:end="227:20"><name pos:start="227:18" pos:end="227:20">env</name></expr></argument>, <argument pos:start="227:23" pos:end="227:37"><expr pos:start="227:23" pos:end="227:37"><name pos:start="227:23" pos:end="227:37">SPR_Exxx_L1CSR0</name></expr></argument>, <argument pos:start="227:40" pos:end="227:47"><expr pos:start="227:40" pos:end="227:47"><literal type="string" pos:start="227:40" pos:end="227:47">"L1CSR0"</literal></expr></argument>,

                 <argument pos:start="229:18" pos:end="229:29"><expr pos:start="229:18" pos:end="229:29"><name pos:start="229:18" pos:end="229:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="229:32" pos:end="229:43"><expr pos:start="229:32" pos:end="229:43"><name pos:start="229:32" pos:end="229:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="231:18" pos:end="231:34"><expr pos:start="231:18" pos:end="231:34"><operator pos:start="231:18" pos:end="231:18">&amp;</operator><name pos:start="231:19" pos:end="231:34">spr_read_generic</name></expr></argument>, <argument pos:start="231:37" pos:end="231:58"><expr pos:start="231:37" pos:end="231:58"><operator pos:start="231:37" pos:end="231:37">&amp;</operator><name pos:start="231:38" pos:end="231:58">spr_write_e500_l1csr0</name></expr></argument>,

                 <argument pos:start="233:18" pos:end="233:27"><expr pos:start="233:18" pos:end="233:27"><literal type="number" pos:start="233:18" pos:end="233:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="235:5" pos:end="235:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="237:5" pos:end="243:29"><expr pos:start="237:5" pos:end="243:28"><call pos:start="237:5" pos:end="243:28"><name pos:start="237:5" pos:end="237:16">spr_register</name><argument_list pos:start="237:17" pos:end="243:28">(<argument pos:start="237:18" pos:end="237:20"><expr pos:start="237:18" pos:end="237:20"><name pos:start="237:18" pos:end="237:20">env</name></expr></argument>, <argument pos:start="237:23" pos:end="237:37"><expr pos:start="237:23" pos:end="237:37"><name pos:start="237:23" pos:end="237:37">SPR_Exxx_L1CSR1</name></expr></argument>, <argument pos:start="237:40" pos:end="237:47"><expr pos:start="237:40" pos:end="237:47"><literal type="string" pos:start="237:40" pos:end="237:47">"L1CSR1"</literal></expr></argument>,

                 <argument pos:start="239:18" pos:end="239:29"><expr pos:start="239:18" pos:end="239:29"><name pos:start="239:18" pos:end="239:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="239:32" pos:end="239:43"><expr pos:start="239:32" pos:end="239:43"><name pos:start="239:32" pos:end="239:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="241:18" pos:end="241:34"><expr pos:start="241:18" pos:end="241:34"><operator pos:start="241:18" pos:end="241:18">&amp;</operator><name pos:start="241:19" pos:end="241:34">spr_read_generic</name></expr></argument>, <argument pos:start="241:37" pos:end="241:54"><expr pos:start="241:37" pos:end="241:54"><operator pos:start="241:37" pos:end="241:37">&amp;</operator><name pos:start="241:38" pos:end="241:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="243:18" pos:end="243:27"><expr pos:start="243:18" pos:end="243:27"><literal type="number" pos:start="243:18" pos:end="243:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="251:29"><expr pos:start="245:5" pos:end="251:28"><call pos:start="245:5" pos:end="251:28"><name pos:start="245:5" pos:end="245:16">spr_register</name><argument_list pos:start="245:17" pos:end="251:28">(<argument pos:start="245:18" pos:end="245:20"><expr pos:start="245:18" pos:end="245:20"><name pos:start="245:18" pos:end="245:20">env</name></expr></argument>, <argument pos:start="245:23" pos:end="245:38"><expr pos:start="245:23" pos:end="245:38"><name pos:start="245:23" pos:end="245:38">SPR_BOOKE_MCSRR0</name></expr></argument>, <argument pos:start="245:41" pos:end="245:48"><expr pos:start="245:41" pos:end="245:48"><literal type="string" pos:start="245:41" pos:end="245:48">"MCSRR0"</literal></expr></argument>,

                 <argument pos:start="247:18" pos:end="247:29"><expr pos:start="247:18" pos:end="247:29"><name pos:start="247:18" pos:end="247:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="247:32" pos:end="247:43"><expr pos:start="247:32" pos:end="247:43"><name pos:start="247:32" pos:end="247:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="249:18" pos:end="249:34"><expr pos:start="249:18" pos:end="249:34"><operator pos:start="249:18" pos:end="249:18">&amp;</operator><name pos:start="249:19" pos:end="249:34">spr_read_generic</name></expr></argument>, <argument pos:start="249:37" pos:end="249:54"><expr pos:start="249:37" pos:end="249:54"><operator pos:start="249:37" pos:end="249:37">&amp;</operator><name pos:start="249:38" pos:end="249:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="251:18" pos:end="251:27"><expr pos:start="251:18" pos:end="251:27"><literal type="number" pos:start="251:18" pos:end="251:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="259:29"><expr pos:start="253:5" pos:end="259:28"><call pos:start="253:5" pos:end="259:28"><name pos:start="253:5" pos:end="253:16">spr_register</name><argument_list pos:start="253:17" pos:end="259:28">(<argument pos:start="253:18" pos:end="253:20"><expr pos:start="253:18" pos:end="253:20"><name pos:start="253:18" pos:end="253:20">env</name></expr></argument>, <argument pos:start="253:23" pos:end="253:38"><expr pos:start="253:23" pos:end="253:38"><name pos:start="253:23" pos:end="253:38">SPR_BOOKE_MCSRR1</name></expr></argument>, <argument pos:start="253:41" pos:end="253:48"><expr pos:start="253:41" pos:end="253:48"><literal type="string" pos:start="253:41" pos:end="253:48">"MCSRR1"</literal></expr></argument>,

                 <argument pos:start="255:18" pos:end="255:29"><expr pos:start="255:18" pos:end="255:29"><name pos:start="255:18" pos:end="255:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="255:32" pos:end="255:43"><expr pos:start="255:32" pos:end="255:43"><name pos:start="255:32" pos:end="255:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="257:18" pos:end="257:34"><expr pos:start="257:18" pos:end="257:34"><operator pos:start="257:18" pos:end="257:18">&amp;</operator><name pos:start="257:19" pos:end="257:34">spr_read_generic</name></expr></argument>, <argument pos:start="257:37" pos:end="257:54"><expr pos:start="257:37" pos:end="257:54"><operator pos:start="257:37" pos:end="257:37">&amp;</operator><name pos:start="257:38" pos:end="257:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="259:18" pos:end="259:27"><expr pos:start="259:18" pos:end="259:27"><literal type="number" pos:start="259:18" pos:end="259:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="272:0"><expr pos:start="261:5" pos:end="267:28"><call pos:start="261:5" pos:end="267:28"><name pos:start="261:5" pos:end="261:16">spr_register</name><argument_list pos:start="261:17" pos:end="267:28">(<argument pos:start="261:18" pos:end="261:20"><expr pos:start="261:18" pos:end="261:20"><name pos:start="261:18" pos:end="261:20">env</name></expr></argument>, <argument pos:start="261:23" pos:end="261:33"><expr pos:start="261:23" pos:end="261:33"><name pos:start="261:23" pos:end="261:33">SPR_MMUCSR0</name></expr></argument>, <argument pos:start="261:36" pos:end="261:44"><expr pos:start="261:36" pos:end="261:44"><literal type="string" pos:start="261:36" pos:end="261:44">"MMUCSR0"</literal></expr></argument>,

                 <argument pos:start="263:18" pos:end="263:29"><expr pos:start="263:18" pos:end="263:29"><name pos:start="263:18" pos:end="263:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="263:32" pos:end="263:43"><expr pos:start="263:32" pos:end="263:43"><name pos:start="263:32" pos:end="263:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="265:18" pos:end="265:34"><expr pos:start="265:18" pos:end="265:34"><operator pos:start="265:18" pos:end="265:18">&amp;</operator><name pos:start="265:19" pos:end="265:34">spr_read_generic</name></expr></argument>, <argument pos:start="265:37" pos:end="265:63"><expr pos:start="265:37" pos:end="265:63"><operator pos:start="265:37" pos:end="265:37">&amp;</operator><name pos:start="265:38" pos:end="265:63">spr_write_booke206_mmucsr0</name></expr></argument>,

                 <argument pos:start="267:18" pos:end="267:27"><expr pos:start="267:18" pos:end="267:27"><literal type="number" pos:start="267:18" pos:end="267:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="271:1" pos:end="271:30">#<cpp:directive pos:start="271:2" pos:end="271:3">if</cpp:directive> <expr pos:start="271:5" pos:end="271:30"><operator pos:start="271:5" pos:end="271:5">!</operator><call pos:start="271:6" pos:end="271:30"><name pos:start="271:6" pos:end="271:12">defined</name><argument_list pos:start="271:13" pos:end="271:30">(<argument pos:start="271:14" pos:end="271:29"><expr pos:start="271:14" pos:end="271:29"><name pos:start="271:14" pos:end="271:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="273:5" pos:end="273:20"><expr pos:start="273:5" pos:end="273:19"><name pos:start="273:5" pos:end="273:15"><name pos:start="273:5" pos:end="273:7">env</name><operator pos:start="273:8" pos:end="273:9">-&gt;</operator><name pos:start="273:10" pos:end="273:15">nb_tlb</name></name> <operator pos:start="273:17" pos:end="273:17">=</operator> <literal type="number" pos:start="273:19" pos:end="273:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="275:5" pos:end="275:28"><expr pos:start="275:5" pos:end="275:27"><name pos:start="275:5" pos:end="275:17"><name pos:start="275:5" pos:end="275:7">env</name><operator pos:start="275:8" pos:end="275:9">-&gt;</operator><name pos:start="275:10" pos:end="275:17">tlb_type</name></name> <operator pos:start="275:19" pos:end="275:19">=</operator> <name pos:start="275:21" pos:end="275:27">TLB_MAS</name></expr>;</expr_stmt>

    <for pos:start="277:5" pos:end="284:0">for <control pos:start="277:9" pos:end="277:43">(<init pos:start="277:10" pos:end="277:15"><expr pos:start="277:10" pos:end="277:14"><name pos:start="277:10" pos:end="277:10">i</name> <operator pos:start="277:12" pos:end="277:12">=</operator> <literal type="number" pos:start="277:14" pos:end="277:14">0</literal></expr>;</init> <condition pos:start="277:17" pos:end="277:38"><expr pos:start="277:17" pos:end="277:37"><name pos:start="277:17" pos:end="277:17">i</name> <operator pos:start="277:19" pos:end="277:19">&lt;</operator> <name pos:start="277:21" pos:end="277:37">BOOKE206_MAX_TLBN</name></expr>;</condition> <incr pos:start="277:40" pos:end="277:42"><expr pos:start="277:40" pos:end="277:42"><name pos:start="277:40" pos:end="277:40">i</name><operator pos:start="277:41" pos:end="277:42">++</operator></expr></incr>)</control> <block pos:start="277:45" pos:end="284:0">{<block_content pos:start="279:9" pos:end="279:49">

        <expr_stmt pos:start="279:9" pos:end="279:49"><expr pos:start="279:9" pos:end="279:48"><name pos:start="279:9" pos:end="279:19"><name pos:start="279:9" pos:end="279:11">env</name><operator pos:start="279:12" pos:end="279:13">-&gt;</operator><name pos:start="279:14" pos:end="279:19">nb_tlb</name></name> <operator pos:start="279:21" pos:end="279:22">+=</operator> <call pos:start="279:24" pos:end="279:48"><name pos:start="279:24" pos:end="279:40">booke206_tlb_size</name><argument_list pos:start="279:41" pos:end="279:48">(<argument pos:start="279:42" pos:end="279:44"><expr pos:start="279:42" pos:end="279:44"><name pos:start="279:42" pos:end="279:44">env</name></expr></argument>, <argument pos:start="279:47" pos:end="279:47"><expr pos:start="279:47" pos:end="279:47"><name pos:start="279:47" pos:end="279:47">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

<cpp:endif pos:start="283:1" pos:end="283:6">#<cpp:directive pos:start="283:2" pos:end="283:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="287:5" pos:end="287:24"><expr pos:start="287:5" pos:end="287:23"><call pos:start="287:5" pos:end="287:23"><name pos:start="287:5" pos:end="287:18">init_excp_e200</name><argument_list pos:start="287:19" pos:end="287:23">(<argument pos:start="287:20" pos:end="287:22"><expr pos:start="287:20" pos:end="287:22"><name pos:start="287:20" pos:end="287:22">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="289:5" pos:end="289:42">/* Allocate hardware IRQ controller */</comment>

    <expr_stmt pos:start="291:5" pos:end="291:26"><expr pos:start="291:5" pos:end="291:25"><call pos:start="291:5" pos:end="291:25"><name pos:start="291:5" pos:end="291:20">ppce500_irq_init</name><argument_list pos:start="291:21" pos:end="291:25">(<argument pos:start="291:22" pos:end="291:24"><expr pos:start="291:22" pos:end="291:24"><name pos:start="291:22" pos:end="291:24">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
