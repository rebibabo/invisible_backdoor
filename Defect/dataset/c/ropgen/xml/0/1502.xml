<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1502.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:50">rtas_ibm_query_interrupt_source_number</name><parameter_list pos:start="1:51" pos:end="11:69">(<parameter pos:start="1:52" pos:end="1:74"><decl pos:start="1:52" pos:end="1:74"><type pos:start="1:52" pos:end="1:74"><name pos:start="1:52" pos:end="1:67">sPAPREnvironment</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:74">spapr</name></decl></parameter>,

                                                   <parameter pos:start="3:52" pos:end="3:65"><decl pos:start="3:52" pos:end="3:65"><type pos:start="3:52" pos:end="3:65"><name pos:start="3:52" pos:end="3:59">uint32_t</name></type> <name pos:start="3:61" pos:end="3:65">token</name></decl></parameter>,

                                                   <parameter pos:start="5:52" pos:end="5:65"><decl pos:start="5:52" pos:end="5:65"><type pos:start="5:52" pos:end="5:65"><name pos:start="5:52" pos:end="5:59">uint32_t</name></type> <name pos:start="5:61" pos:end="5:65">nargs</name></decl></parameter>,

                                                   <parameter pos:start="7:52" pos:end="7:68"><decl pos:start="7:52" pos:end="7:68"><type pos:start="7:52" pos:end="7:68"><name pos:start="7:52" pos:end="7:63">target_ulong</name></type> <name pos:start="7:65" pos:end="7:68">args</name></decl></parameter>,

                                                   <parameter pos:start="9:52" pos:end="9:64"><decl pos:start="9:52" pos:end="9:64"><type pos:start="9:52" pos:end="9:64"><name pos:start="9:52" pos:end="9:59">uint32_t</name></type> <name pos:start="9:61" pos:end="9:64">nret</name></decl></parameter>,

                                                   <parameter pos:start="11:52" pos:end="11:68"><decl pos:start="11:52" pos:end="11:68"><type pos:start="11:52" pos:end="11:68"><name pos:start="11:52" pos:end="11:63">target_ulong</name></type> <name pos:start="11:65" pos:end="11:68">rets</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="71:1">{<block_content pos:start="15:5" pos:end="69:24">

    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:43"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:24">config_addr</name> <init pos:start="15:26" pos:end="15:43">= <expr pos:start="15:28" pos:end="15:43"><call pos:start="15:28" pos:end="15:43"><name pos:start="15:28" pos:end="15:34">rtas_ld</name><argument_list pos:start="15:35" pos:end="15:43">(<argument pos:start="15:36" pos:end="15:39"><expr pos:start="15:36" pos:end="15:39"><name pos:start="15:36" pos:end="15:39">args</name></expr></argument>, <argument pos:start="15:42" pos:end="15:42"><expr pos:start="15:42" pos:end="15:42"><literal type="number" pos:start="15:42" pos:end="15:42">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:74"><decl pos:start="17:5" pos:end="17:73"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:17">buid</name> <init pos:start="17:19" pos:end="17:73">= <expr pos:start="17:21" pos:end="17:73"><operator pos:start="17:21" pos:end="17:21">(</operator><operator pos:start="17:22" pos:end="17:22">(</operator><name pos:start="17:23" pos:end="17:30">uint64_t</name><operator pos:start="17:31" pos:end="17:31">)</operator><call pos:start="17:32" pos:end="17:47"><name pos:start="17:32" pos:end="17:38">rtas_ld</name><argument_list pos:start="17:39" pos:end="17:47">(<argument pos:start="17:40" pos:end="17:43"><expr pos:start="17:40" pos:end="17:43"><name pos:start="17:40" pos:end="17:43">args</name></expr></argument>, <argument pos:start="17:46" pos:end="17:46"><expr pos:start="17:46" pos:end="17:46"><literal type="number" pos:start="17:46" pos:end="17:46">1</literal></expr></argument>)</argument_list></call> <operator pos:start="17:49" pos:end="17:50">&lt;&lt;</operator> <literal type="number" pos:start="17:52" pos:end="17:53">32</literal><operator pos:start="17:54" pos:end="17:54">)</operator> <operator pos:start="17:56" pos:end="17:56">|</operator> <call pos:start="17:58" pos:end="17:73"><name pos:start="17:58" pos:end="17:64">rtas_ld</name><argument_list pos:start="17:65" pos:end="17:73">(<argument pos:start="17:66" pos:end="17:69"><expr pos:start="17:66" pos:end="17:69"><name pos:start="17:66" pos:end="17:69">args</name></expr></argument>, <argument pos:start="17:72" pos:end="17:72"><expr pos:start="17:72" pos:end="17:72"><literal type="number" pos:start="17:72" pos:end="17:72">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:68"><decl pos:start="19:5" pos:end="19:34"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:16">int</name></type> <name pos:start="19:18" pos:end="19:29">intr_src_num</name> <init pos:start="19:31" pos:end="19:34">= <expr pos:start="19:33" pos:end="19:34"><operator pos:start="19:33" pos:end="19:33">-</operator><literal type="number" pos:start="19:34" pos:end="19:34">1</literal></expr></init></decl>, <decl pos:start="19:37" pos:end="19:67"><type ref="prev" pos:start="19:5" pos:end="19:16"/><name pos:start="19:37" pos:end="19:48">ioa_intr_num</name> <init pos:start="19:50" pos:end="19:67">= <expr pos:start="19:52" pos:end="19:67"><call pos:start="19:52" pos:end="19:67"><name pos:start="19:52" pos:end="19:58">rtas_ld</name><argument_list pos:start="19:59" pos:end="19:67">(<argument pos:start="19:60" pos:end="19:63"><expr pos:start="19:60" pos:end="19:63"><name pos:start="19:60" pos:end="19:63">args</name></expr></argument>, <argument pos:start="19:66" pos:end="19:66"><expr pos:start="19:66" pos:end="19:66"><literal type="number" pos:start="19:66" pos:end="19:66">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:13"><decl pos:start="21:5" pos:end="21:12"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:12">ndev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:30"><decl pos:start="23:5" pos:end="23:29"><type pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:17">sPAPRPHBState</name> <modifier pos:start="23:19" pos:end="23:19">*</modifier></type><name pos:start="23:20" pos:end="23:22">phb</name> <init pos:start="23:24" pos:end="23:29">= <expr pos:start="23:26" pos:end="23:29"><name pos:start="23:26" pos:end="23:29">NULL</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:28">/* Fins sPAPRPHBState */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:32"><expr pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:7">phb</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:31"><name pos:start="29:11" pos:end="29:18">find_phb</name><argument_list pos:start="29:19" pos:end="29:31">(<argument pos:start="29:20" pos:end="29:24"><expr pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:24">spapr</name></expr></argument>, <argument pos:start="29:27" pos:end="29:30"><expr pos:start="29:27" pos:end="29:30"><name pos:start="29:27" pos:end="29:30">buid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:13">(<expr pos:start="31:9" pos:end="31:12"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:12">phb</name></expr>)</condition> <block pos:start="31:15" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:15">

        <expr_stmt pos:start="33:9" pos:end="33:29"><expr pos:start="33:9" pos:end="33:28"><call pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:15">rtas_st</name><argument_list pos:start="33:16" pos:end="33:28">(<argument pos:start="33:17" pos:end="33:20"><expr pos:start="33:17" pos:end="33:20"><name pos:start="33:17" pos:end="33:20">rets</name></expr></argument>, <argument pos:start="33:23" pos:end="33:23"><expr pos:start="33:23" pos:end="33:23"><literal type="number" pos:start="33:23" pos:end="33:23">0</literal></expr></argument>, <argument pos:start="33:26" pos:end="33:27"><expr pos:start="33:26" pos:end="33:27"><operator pos:start="33:26" pos:end="33:26">-</operator><literal type="number" pos:start="33:27" pos:end="33:27">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="33:31" pos:end="33:51">/* Parameter error */</comment>

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:46">/* Find device descriptor and start IRQ */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:54"><expr pos:start="43:5" pos:end="43:53"><name pos:start="43:5" pos:end="43:8">ndev</name> <operator pos:start="43:10" pos:end="43:10">=</operator> <call pos:start="43:12" pos:end="43:53"><name pos:start="43:12" pos:end="43:28">spapr_msicfg_find</name><argument_list pos:start="43:29" pos:end="43:53">(<argument pos:start="43:30" pos:end="43:32"><expr pos:start="43:30" pos:end="43:32"><name pos:start="43:30" pos:end="43:32">phb</name></expr></argument>, <argument pos:start="43:35" pos:end="43:45"><expr pos:start="43:35" pos:end="43:45"><name pos:start="43:35" pos:end="43:45">config_addr</name></expr></argument>, <argument pos:start="43:48" pos:end="43:52"><expr pos:start="43:48" pos:end="43:52"><name pos:start="43:48" pos:end="43:52">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="45:17">(<expr pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:12">ndev</name> <operator pos:start="45:14" pos:end="45:14">&lt;</operator> <literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>)</condition> <block pos:start="45:19" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:15">

        <expr_stmt pos:start="47:9" pos:end="47:73"><expr pos:start="47:9" pos:end="47:72"><call pos:start="47:9" pos:end="47:72"><name pos:start="47:9" pos:end="47:27">trace_spapr_pci_msi</name><argument_list pos:start="47:28" pos:end="47:72">(<argument pos:start="47:29" pos:end="47:54"><expr pos:start="47:29" pos:end="47:54"><literal type="string" pos:start="47:29" pos:end="47:54">"MSI has not been enabled"</literal></expr></argument>, <argument pos:start="47:57" pos:end="47:58"><expr pos:start="47:57" pos:end="47:58"><operator pos:start="47:57" pos:end="47:57">-</operator><literal type="number" pos:start="47:58" pos:end="47:58">1</literal></expr></argument>, <argument pos:start="47:61" pos:end="47:71"><expr pos:start="47:61" pos:end="47:71"><name pos:start="47:61" pos:end="47:71">config_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><call pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:15">rtas_st</name><argument_list pos:start="49:16" pos:end="49:28">(<argument pos:start="49:17" pos:end="49:20"><expr pos:start="49:17" pos:end="49:20"><name pos:start="49:17" pos:end="49:20">rets</name></expr></argument>, <argument pos:start="49:23" pos:end="49:23"><expr pos:start="49:23" pos:end="49:23"><literal type="number" pos:start="49:23" pos:end="49:23">0</literal></expr></argument>, <argument pos:start="49:26" pos:end="49:27"><expr pos:start="49:26" pos:end="49:27"><operator pos:start="49:26" pos:end="49:26">-</operator><literal type="number" pos:start="49:27" pos:end="49:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="49:31" pos:end="49:50">/* Hardware error */</comment>

        <return pos:start="51:9" pos:end="51:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:59"><expr pos:start="57:5" pos:end="57:58"><name pos:start="57:5" pos:end="57:16">intr_src_num</name> <operator pos:start="57:18" pos:end="57:18">=</operator> <name pos:start="57:20" pos:end="57:39"><name pos:start="57:20" pos:end="57:22">phb</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:33">msi_table</name><index pos:start="57:34" pos:end="57:39">[<expr pos:start="57:35" pos:end="57:38"><name pos:start="57:35" pos:end="57:38">ndev</name></expr>]</index></name><operator pos:start="57:40" pos:end="57:40">.</operator><name pos:start="57:41" pos:end="57:43">irq</name> <operator pos:start="57:45" pos:end="57:45">+</operator> <name pos:start="57:47" pos:end="57:58">ioa_intr_num</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="61:73"><expr pos:start="59:5" pos:end="61:72"><call pos:start="59:5" pos:end="61:72"><name pos:start="59:5" pos:end="59:58">trace_spapr_pci_rtas_ibm_query_interrupt_source_number</name><argument_list pos:start="59:59" pos:end="61:72">(<argument pos:start="59:60" pos:end="59:71"><expr pos:start="59:60" pos:end="59:71"><name pos:start="59:60" pos:end="59:71">ioa_intr_num</name></expr></argument>,

                                                           <argument pos:start="61:60" pos:end="61:71"><expr pos:start="61:60" pos:end="61:71"><name pos:start="61:60" pos:end="61:71">intr_src_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:24"><expr pos:start="65:5" pos:end="65:23"><call pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:11">rtas_st</name><argument_list pos:start="65:12" pos:end="65:23">(<argument pos:start="65:13" pos:end="65:16"><expr pos:start="65:13" pos:end="65:16"><name pos:start="65:13" pos:end="65:16">rets</name></expr></argument>, <argument pos:start="65:19" pos:end="65:19"><expr pos:start="65:19" pos:end="65:19"><literal type="number" pos:start="65:19" pos:end="65:19">0</literal></expr></argument>, <argument pos:start="65:22" pos:end="65:22"><expr pos:start="65:22" pos:end="65:22"><literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:35"><expr pos:start="67:5" pos:end="67:34"><call pos:start="67:5" pos:end="67:34"><name pos:start="67:5" pos:end="67:11">rtas_st</name><argument_list pos:start="67:12" pos:end="67:34">(<argument pos:start="67:13" pos:end="67:16"><expr pos:start="67:13" pos:end="67:16"><name pos:start="67:13" pos:end="67:16">rets</name></expr></argument>, <argument pos:start="67:19" pos:end="67:19"><expr pos:start="67:19" pos:end="67:19"><literal type="number" pos:start="67:19" pos:end="67:19">1</literal></expr></argument>, <argument pos:start="67:22" pos:end="67:33"><expr pos:start="67:22" pos:end="67:33"><name pos:start="67:22" pos:end="67:33">intr_src_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:24"><expr pos:start="69:5" pos:end="69:23"><call pos:start="69:5" pos:end="69:23"><name pos:start="69:5" pos:end="69:11">rtas_st</name><argument_list pos:start="69:12" pos:end="69:23">(<argument pos:start="69:13" pos:end="69:16"><expr pos:start="69:13" pos:end="69:16"><name pos:start="69:13" pos:end="69:16">rets</name></expr></argument>, <argument pos:start="69:19" pos:end="69:19"><expr pos:start="69:19" pos:end="69:19"><literal type="number" pos:start="69:19" pos:end="69:19">2</literal></expr></argument>, <argument pos:start="69:22" pos:end="69:22"><expr pos:start="69:22" pos:end="69:22"><literal type="number" pos:start="69:22" pos:end="69:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><comment type="block" pos:start="69:25" pos:end="69:51">/* 0 == level; 1 == edge */</comment>

</block_content>}</block></function>
</unit>
