<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27165.c" pos:tabs="8"><function pos:start="1:1" pos:end="655:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">aac_encode_frame</name><parameter_list pos:start="1:28" pos:end="3:70">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:66"><decl pos:start="1:52" pos:end="1:66"><type pos:start="1:52" pos:end="1:66"><name pos:start="1:52" pos:end="1:59">AVPacket</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:66">avpkt</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:48"><decl pos:start="3:29" pos:end="3:48"><type pos:start="3:29" pos:end="3:48"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:41">AVFrame</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:48">frame</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:69"><decl pos:start="3:51" pos:end="3:69"><type pos:start="3:51" pos:end="3:69"><name pos:start="3:51" pos:end="3:53">int</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:69">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="655:1">{<block_content pos:start="7:5" pos:end="653:13">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">AACEncContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:39">= <expr pos:start="7:24" pos:end="7:39"><name pos:start="7:24" pos:end="7:39"><name pos:start="7:24" pos:end="7:28">avctx</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:66"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:9">float</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier><modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:19">samples</name> <init pos:start="9:21" pos:end="9:39">= <expr pos:start="9:23" pos:end="9:39"><name pos:start="9:23" pos:end="9:39"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:39">planar_samples</name></name></expr></init></decl>, <decl pos:start="9:42" pos:end="9:50"><type ref="prev" pos:start="9:5" pos:end="9:12"><modifier pos:start="9:42" pos:end="9:42">*</modifier></type><name pos:start="9:43" pos:end="9:50">samples2</name></decl>, <decl pos:start="9:53" pos:end="9:55"><type ref="prev" pos:start="9:5" pos:end="9:12"><modifier pos:start="9:53" pos:end="9:53">*</modifier></type><name pos:start="9:54" pos:end="9:55">la</name></decl>, <decl pos:start="9:58" pos:end="9:65"><type ref="prev" pos:start="9:5" pos:end="9:12"><modifier pos:start="9:58" pos:end="9:58">*</modifier></type><name pos:start="9:59" pos:end="9:65">overlap</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">ChannelElement</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:23">cpe</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:24">SingleChannelElement</name> <modifier pos:start="13:26" pos:end="13:26">*</modifier></type><name pos:start="13:27" pos:end="13:29">sce</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:29"><name pos:start="15:5" pos:end="15:27">IndividualChannelStream</name> <modifier pos:start="15:29" pos:end="15:29">*</modifier></type><name pos:start="15:30" pos:end="15:32">ics</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:61"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>, <decl pos:start="17:12" pos:end="17:14"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:14">its</name></decl>, <decl pos:start="17:17" pos:end="17:18"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:17" pos:end="17:18">ch</name></decl>, <decl pos:start="17:21" pos:end="17:21"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:21" pos:end="17:21">w</name></decl>, <decl pos:start="17:24" pos:end="17:28"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:24" pos:end="17:28">chans</name></decl>, <decl pos:start="17:31" pos:end="17:33"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:31" pos:end="17:33">tag</name></decl>, <decl pos:start="17:36" pos:end="17:43"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:36" pos:end="17:43">start_ch</name></decl>, <decl pos:start="17:46" pos:end="17:48"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:46" pos:end="17:48">ret</name></decl>, <decl pos:start="17:51" pos:end="17:60"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:51" pos:end="17:60">frame_bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:60"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:19">target_bits</name></decl>, <decl pos:start="19:22" pos:end="19:30"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:22" pos:end="19:30">rate_bits</name></decl>, <decl pos:start="19:33" pos:end="19:45"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:33" pos:end="19:45">too_many_bits</name></decl>, <decl pos:start="19:48" pos:end="19:59"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:48" pos:end="19:59">too_few_bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:62"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:15">ms_mode</name> <init pos:start="21:17" pos:end="21:19">= <expr pos:start="21:19" pos:end="21:19"><literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr></init></decl>, <decl pos:start="21:22" pos:end="21:32"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:22" pos:end="21:28">is_mode</name> <init pos:start="21:30" pos:end="21:32">= <expr pos:start="21:32" pos:end="21:32"><literal type="number" pos:start="21:32" pos:end="21:32">0</literal></expr></init></decl>, <decl pos:start="21:35" pos:end="21:46"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:35" pos:end="21:42">tns_mode</name> <init pos:start="21:44" pos:end="21:46">= <expr pos:start="21:46" pos:end="21:46"><literal type="number" pos:start="21:46" pos:end="21:46">0</literal></expr></init></decl>, <decl pos:start="21:49" pos:end="21:61"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:49" pos:end="21:57">pred_mode</name> <init pos:start="21:59" pos:end="21:61">= <expr pos:start="21:61" pos:end="21:61"><literal type="number" pos:start="21:61" pos:end="21:61">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:27"><decl pos:start="23:5" pos:end="23:26"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:23">chan_el_counter</name><index pos:start="23:24" pos:end="23:26">[<expr pos:start="23:25" pos:end="23:25"><literal type="number" pos:start="23:25" pos:end="23:25">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:46"><decl pos:start="25:5" pos:end="25:45"><type pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:19">FFPsyWindowInfo</name></type> <name pos:start="25:21" pos:end="25:45"><name pos:start="25:21" pos:end="25:27">windows</name><index pos:start="25:28" pos:end="25:45">[<expr pos:start="25:29" pos:end="25:44"><name pos:start="25:29" pos:end="25:44">AAC_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="31:17"><if pos:start="29:5" pos:end="31:17">if <condition pos:start="29:8" pos:end="29:27">(<expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:21">last_frame</name></name> <operator pos:start="29:23" pos:end="29:24">==</operator> <literal type="number" pos:start="29:26" pos:end="29:26">2</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:17"><block_content pos:start="31:9" pos:end="31:17">

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:36">/* add current frame to queue */</comment>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:14">(<expr pos:start="37:9" pos:end="37:13"><name pos:start="37:9" pos:end="37:13">frame</name></expr>)</condition> <block pos:start="37:16" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:23">

        <if_stmt pos:start="39:9" pos:end="41:23"><if pos:start="39:9" pos:end="41:23">if <condition pos:start="39:12" pos:end="39:56">(<expr pos:start="39:13" pos:end="39:55"><operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:16">ret</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="39:50"><name pos:start="39:20" pos:end="39:34">ff_af_queue_add</name><argument_list pos:start="39:35" pos:end="39:50">(<argument pos:start="39:36" pos:end="39:42"><expr pos:start="39:36" pos:end="39:42"><operator pos:start="39:36" pos:end="39:36">&amp;</operator><name pos:start="39:37" pos:end="39:42"><name pos:start="39:37" pos:end="39:37">s</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:42">afq</name></name></expr></argument>, <argument pos:start="39:45" pos:end="39:49"><expr pos:start="39:45" pos:end="39:49"><name pos:start="39:45" pos:end="39:49">frame</name></expr></argument>)</argument_list></call><operator pos:start="39:51" pos:end="39:51">)</operator> <operator pos:start="39:53" pos:end="39:53">&lt;</operator> <literal type="number" pos:start="39:55" pos:end="39:55">0</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:23"><block_content pos:start="41:13" pos:end="41:23">

            <return pos:start="41:13" pos:end="41:23">return <expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:33"><expr pos:start="47:5" pos:end="47:32"><call pos:start="47:5" pos:end="47:32"><name pos:start="47:5" pos:end="47:22">copy_input_samples</name><argument_list pos:start="47:23" pos:end="47:32">(<argument pos:start="47:24" pos:end="47:24"><expr pos:start="47:24" pos:end="47:24"><name pos:start="47:24" pos:end="47:24">s</name></expr></argument>, <argument pos:start="47:27" pos:end="47:31"><expr pos:start="47:27" pos:end="47:31"><name pos:start="47:27" pos:end="47:31">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="51:68"><if pos:start="49:5" pos:end="51:68">if <condition pos:start="49:8" pos:end="49:17">(<expr pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:16">psypp</name></name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:68"><block_content pos:start="51:9" pos:end="51:68">

        <expr_stmt pos:start="51:9" pos:end="51:68"><expr pos:start="51:9" pos:end="51:67"><call pos:start="51:9" pos:end="51:67"><name pos:start="51:9" pos:end="51:25">ff_psy_preprocess</name><argument_list pos:start="51:26" pos:end="51:67">(<argument pos:start="51:27" pos:end="51:34"><expr pos:start="51:27" pos:end="51:34"><name pos:start="51:27" pos:end="51:34"><name pos:start="51:27" pos:end="51:27">s</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:34">psypp</name></name></expr></argument>, <argument pos:start="51:37" pos:end="51:53"><expr pos:start="51:37" pos:end="51:53"><name pos:start="51:37" pos:end="51:53"><name pos:start="51:37" pos:end="51:37">s</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:53">planar_samples</name></name></expr></argument>, <argument pos:start="51:56" pos:end="51:66"><expr pos:start="51:56" pos:end="51:66"><name pos:start="51:56" pos:end="51:66"><name pos:start="51:56" pos:end="51:56">s</name><operator pos:start="51:57" pos:end="51:58">-&gt;</operator><name pos:start="51:59" pos:end="51:66">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="57:17"><if pos:start="55:5" pos:end="57:17">if <condition pos:start="55:8" pos:end="55:29">(<expr pos:start="55:9" pos:end="55:28"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:28"><name pos:start="55:10" pos:end="55:14">avctx</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:28">frame_number</name></name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:17"><block_content pos:start="57:9" pos:end="57:17">

        <return pos:start="57:9" pos:end="57:17">return <expr pos:start="57:16" pos:end="57:16"><literal type="number" pos:start="57:16" pos:end="57:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:17"><expr pos:start="61:5" pos:end="61:16"><name pos:start="61:5" pos:end="61:12">start_ch</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>;</expr_stmt>

    <for pos:start="63:5" pos:end="215:5">for <control pos:start="63:9" pos:end="63:40">(<init pos:start="63:10" pos:end="63:15"><expr pos:start="63:10" pos:end="63:14"><name pos:start="63:10" pos:end="63:10">i</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <literal type="number" pos:start="63:14" pos:end="63:14">0</literal></expr>;</init> <condition pos:start="63:17" pos:end="63:35"><expr pos:start="63:17" pos:end="63:34"><name pos:start="63:17" pos:end="63:17">i</name> <operator pos:start="63:19" pos:end="63:19">&lt;</operator> <name pos:start="63:21" pos:end="63:34"><name pos:start="63:21" pos:end="63:21">s</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:31">chan_map</name><index pos:start="63:32" pos:end="63:34">[<expr pos:start="63:33" pos:end="63:33"><literal type="number" pos:start="63:33" pos:end="63:33">0</literal></expr>]</index></name></expr>;</condition> <incr pos:start="63:37" pos:end="63:39"><expr pos:start="63:37" pos:end="63:39"><name pos:start="63:37" pos:end="63:37">i</name><operator pos:start="63:38" pos:end="63:39">++</operator></expr></incr>)</control> <block pos:start="63:42" pos:end="215:5">{<block_content pos:start="65:9" pos:end="213:26">

        <decl_stmt pos:start="65:9" pos:end="65:49"><decl pos:start="65:9" pos:end="65:48"><type pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:23">FFPsyWindowInfo</name><modifier pos:start="65:24" pos:end="65:24">*</modifier></type> <name pos:start="65:26" pos:end="65:27">wi</name> <init pos:start="65:29" pos:end="65:48">= <expr pos:start="65:31" pos:end="65:48"><name pos:start="65:31" pos:end="65:37">windows</name> <operator pos:start="65:39" pos:end="65:39">+</operator> <name pos:start="65:41" pos:end="65:48">start_ch</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:36"><expr pos:start="67:9" pos:end="67:35"><name pos:start="67:9" pos:end="67:11">tag</name>      <operator pos:start="67:18" pos:end="67:18">=</operator> <name pos:start="67:20" pos:end="67:35"><name pos:start="67:20" pos:end="67:20">s</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:30">chan_map</name><index pos:start="67:31" pos:end="67:35">[<expr pos:start="67:32" pos:end="67:34"><name pos:start="67:32" pos:end="67:32">i</name><operator pos:start="67:33" pos:end="67:33">+</operator><literal type="number" pos:start="67:34" pos:end="67:34">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:43"><expr pos:start="69:9" pos:end="69:42"><name pos:start="69:9" pos:end="69:13">chans</name>    <operator pos:start="69:18" pos:end="69:18">=</operator> <ternary pos:start="69:20" pos:end="69:42"><condition pos:start="69:20" pos:end="69:36"><expr pos:start="69:20" pos:end="69:34"><name pos:start="69:20" pos:end="69:22">tag</name> <operator pos:start="69:24" pos:end="69:25">==</operator> <name pos:start="69:27" pos:end="69:34">TYPE_CPE</name></expr> ?</condition><then pos:start="69:38" pos:end="69:38"> <expr pos:start="69:38" pos:end="69:38"><literal type="number" pos:start="69:38" pos:end="69:38">2</literal></expr> </then><else pos:start="69:40" pos:end="69:42">: <expr pos:start="69:42" pos:end="69:42"><literal type="number" pos:start="69:42" pos:end="69:42">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:30"><expr pos:start="71:9" pos:end="71:29"><name pos:start="71:9" pos:end="71:11">cpe</name>      <operator pos:start="71:18" pos:end="71:18">=</operator> <operator pos:start="71:20" pos:end="71:20">&amp;</operator><name pos:start="71:21" pos:end="71:29"><name pos:start="71:21" pos:end="71:21">s</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:26">cpe</name><index pos:start="71:27" pos:end="71:29">[<expr pos:start="71:28" pos:end="71:28"><name pos:start="71:28" pos:end="71:28">i</name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="73:9" pos:end="211:9">for <control pos:start="73:13" pos:end="73:38">(<init pos:start="73:14" pos:end="73:20"><expr pos:start="73:14" pos:end="73:19"><name pos:start="73:14" pos:end="73:15">ch</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <literal type="number" pos:start="73:19" pos:end="73:19">0</literal></expr>;</init> <condition pos:start="73:22" pos:end="73:32"><expr pos:start="73:22" pos:end="73:31"><name pos:start="73:22" pos:end="73:23">ch</name> <operator pos:start="73:25" pos:end="73:25">&lt;</operator> <name pos:start="73:27" pos:end="73:31">chans</name></expr>;</condition> <incr pos:start="73:34" pos:end="73:37"><expr pos:start="73:34" pos:end="73:37"><name pos:start="73:34" pos:end="73:35">ch</name><operator pos:start="73:36" pos:end="73:37">++</operator></expr></incr>)</control> <block pos:start="73:40" pos:end="211:9">{<block_content pos:start="75:13" pos:end="209:35">

            <decl_stmt pos:start="75:13" pos:end="75:40"><decl pos:start="75:13" pos:end="75:39"><type pos:start="75:13" pos:end="75:17"><name pos:start="75:13" pos:end="75:17">float</name></type> <name pos:start="75:19" pos:end="75:39">clip_avoidance_factor</name></decl>;</decl_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:31"><expr pos:start="77:13" pos:end="77:30"><name pos:start="77:13" pos:end="77:15">sce</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <operator pos:start="77:19" pos:end="77:19">&amp;</operator><name pos:start="77:20" pos:end="77:30"><name pos:start="77:20" pos:end="77:22">cpe</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:26">ch</name><index pos:start="77:27" pos:end="77:30">[<expr pos:start="77:28" pos:end="77:29"><name pos:start="77:28" pos:end="77:29">ch</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:28"><expr pos:start="79:13" pos:end="79:27"><name pos:start="79:13" pos:end="79:15">ics</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <operator pos:start="79:19" pos:end="79:19">&amp;</operator><name pos:start="79:20" pos:end="79:27"><name pos:start="79:20" pos:end="79:22">sce</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:27">ics</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:43"><expr pos:start="81:13" pos:end="81:42"><name pos:start="81:13" pos:end="81:26"><name pos:start="81:13" pos:end="81:13">s</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:26">cur_channel</name></name> <operator pos:start="81:28" pos:end="81:28">=</operator> <name pos:start="81:30" pos:end="81:37">start_ch</name> <operator pos:start="81:39" pos:end="81:39">+</operator> <name pos:start="81:41" pos:end="81:42">ch</name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:51"><expr pos:start="83:13" pos:end="83:50"><name pos:start="83:13" pos:end="83:19">overlap</name>  <operator pos:start="83:22" pos:end="83:22">=</operator> <operator pos:start="83:24" pos:end="83:24">&amp;</operator><name pos:start="83:25" pos:end="83:50"><name pos:start="83:25" pos:end="83:31">samples</name><index pos:start="83:32" pos:end="83:47">[<expr pos:start="83:33" pos:end="83:46"><name pos:start="83:33" pos:end="83:46"><name pos:start="83:33" pos:end="83:33">s</name><operator pos:start="83:34" pos:end="83:35">-&gt;</operator><name pos:start="83:36" pos:end="83:46">cur_channel</name></name></expr>]</index><index pos:start="83:48" pos:end="83:50">[<expr pos:start="83:49" pos:end="83:49"><literal type="number" pos:start="83:49" pos:end="83:49">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:38"><expr pos:start="85:13" pos:end="85:37"><name pos:start="85:13" pos:end="85:20">samples2</name> <operator pos:start="85:22" pos:end="85:22">=</operator> <name pos:start="85:24" pos:end="85:30">overlap</name> <operator pos:start="85:32" pos:end="85:32">+</operator> <literal type="number" pos:start="85:34" pos:end="85:37">1024</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:43"><expr pos:start="87:13" pos:end="87:42"><name pos:start="87:13" pos:end="87:14">la</name>       <operator pos:start="87:22" pos:end="87:22">=</operator> <name pos:start="87:24" pos:end="87:31">samples2</name> <operator pos:start="87:33" pos:end="87:33">+</operator> <operator pos:start="87:35" pos:end="87:35">(</operator><literal type="number" pos:start="87:36" pos:end="87:39">448</literal><operator pos:start="87:39" pos:end="87:39">+</operator><literal type="number" pos:start="87:40" pos:end="87:41">64</literal><operator pos:start="87:42" pos:end="87:42">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="91:26"><if pos:start="89:13" pos:end="91:26">if <condition pos:start="89:16" pos:end="89:23">(<expr pos:start="89:17" pos:end="89:22"><operator pos:start="89:17" pos:end="89:17">!</operator><name pos:start="89:18" pos:end="89:22">frame</name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:26"><block_content pos:start="91:17" pos:end="91:26">

                <expr_stmt pos:start="91:17" pos:end="91:26"><expr pos:start="91:17" pos:end="91:25"><name pos:start="91:17" pos:end="91:18">la</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <name pos:start="91:22" pos:end="91:25">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="93:13" pos:end="121:13"><if pos:start="93:13" pos:end="115:13">if <condition pos:start="93:16" pos:end="93:32">(<expr pos:start="93:17" pos:end="93:31"><name pos:start="93:17" pos:end="93:19">tag</name> <operator pos:start="93:21" pos:end="93:22">==</operator> <name pos:start="93:24" pos:end="93:31">TYPE_LFE</name></expr>)</condition> <block pos:start="93:34" pos:end="115:13">{<block_content pos:start="95:17" pos:end="113:64">

                <expr_stmt pos:start="95:17" pos:end="95:59"><expr pos:start="95:17" pos:end="95:58"><name pos:start="95:17" pos:end="95:22"><name pos:start="95:17" pos:end="95:18">wi</name><index pos:start="95:19" pos:end="95:22">[<expr pos:start="95:20" pos:end="95:21"><name pos:start="95:20" pos:end="95:21">ch</name></expr>]</index></name><operator pos:start="95:23" pos:end="95:23">.</operator><name pos:start="95:24" pos:end="95:37"><name pos:start="95:24" pos:end="95:34">window_type</name><index pos:start="95:35" pos:end="95:37">[<expr pos:start="95:36" pos:end="95:36"><literal type="number" pos:start="95:36" pos:end="95:36">0</literal></expr>]</index></name> <operator pos:start="95:39" pos:end="95:39">=</operator> <name pos:start="95:41" pos:end="95:58">ONLY_LONG_SEQUENCE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:42"><expr pos:start="97:17" pos:end="97:41"><name pos:start="97:17" pos:end="97:22"><name pos:start="97:17" pos:end="97:18">wi</name><index pos:start="97:19" pos:end="97:22">[<expr pos:start="97:20" pos:end="97:21"><name pos:start="97:20" pos:end="97:21">ch</name></expr>]</index></name><operator pos:start="97:23" pos:end="97:23">.</operator><name pos:start="97:24" pos:end="97:35">window_shape</name>   <operator pos:start="97:39" pos:end="97:39">=</operator> <literal type="number" pos:start="97:41" pos:end="97:41">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:42"><expr pos:start="99:17" pos:end="99:41"><name pos:start="99:17" pos:end="99:22"><name pos:start="99:17" pos:end="99:18">wi</name><index pos:start="99:19" pos:end="99:22">[<expr pos:start="99:20" pos:end="99:21"><name pos:start="99:20" pos:end="99:21">ch</name></expr>]</index></name><operator pos:start="99:23" pos:end="99:23">.</operator><name pos:start="99:24" pos:end="99:34">num_windows</name>    <operator pos:start="99:39" pos:end="99:39">=</operator> <literal type="number" pos:start="99:41" pos:end="99:41">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:42"><expr pos:start="101:17" pos:end="101:41"><name pos:start="101:17" pos:end="101:22"><name pos:start="101:17" pos:end="101:18">wi</name><index pos:start="101:19" pos:end="101:22">[<expr pos:start="101:20" pos:end="101:21"><name pos:start="101:20" pos:end="101:21">ch</name></expr>]</index></name><operator pos:start="101:23" pos:end="101:23">.</operator><name pos:start="101:24" pos:end="101:34"><name pos:start="101:24" pos:end="101:31">grouping</name><index pos:start="101:32" pos:end="101:34">[<expr pos:start="101:33" pos:end="101:33"><literal type="number" pos:start="101:33" pos:end="101:33">0</literal></expr>]</index></name>    <operator pos:start="101:39" pos:end="101:39">=</operator> <literal type="number" pos:start="101:41" pos:end="101:41">1</literal></expr>;</expr_stmt>



                <comment type="block" pos:start="105:17" pos:end="111:19">/* Only the lowest 12 coefficients are used in a LFE channel.

                 * The expression below results in only the bottom 8 coefficients

                 * being used for 11.025kHz to 16kHz sample rates.

                 */</comment>

                <expr_stmt pos:start="113:17" pos:end="113:64"><expr pos:start="113:17" pos:end="113:63"><name pos:start="113:17" pos:end="113:28"><name pos:start="113:17" pos:end="113:19">ics</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:28">num_swb</name></name> <operator pos:start="113:30" pos:end="113:30">=</operator> <ternary pos:start="113:32" pos:end="113:63"><condition pos:start="113:32" pos:end="113:57"><expr pos:start="113:32" pos:end="113:55"><name pos:start="113:32" pos:end="113:50"><name pos:start="113:32" pos:end="113:32">s</name><operator pos:start="113:33" pos:end="113:34">-&gt;</operator><name pos:start="113:35" pos:end="113:50">samplerate_index</name></name> <operator pos:start="113:52" pos:end="113:53">&gt;=</operator> <literal type="number" pos:start="113:55" pos:end="113:55">8</literal></expr> ?</condition><then pos:start="113:59" pos:end="113:59"> <expr pos:start="113:59" pos:end="113:59"><literal type="number" pos:start="113:59" pos:end="113:59">1</literal></expr> </then><else pos:start="113:61" pos:end="113:63">: <expr pos:start="113:63" pos:end="113:63"><literal type="number" pos:start="113:63" pos:end="113:63">3</literal></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="115:15" pos:end="121:13">else <block pos:start="115:20" pos:end="121:13">{<block_content pos:start="117:17" pos:end="119:71">

                <expr_stmt pos:start="117:17" pos:end="119:71"><expr pos:start="117:17" pos:end="119:70"><name pos:start="117:17" pos:end="117:22"><name pos:start="117:17" pos:end="117:18">wi</name><index pos:start="117:19" pos:end="117:22">[<expr pos:start="117:20" pos:end="117:21"><name pos:start="117:20" pos:end="117:21">ch</name></expr>]</index></name> <operator pos:start="117:24" pos:end="117:24">=</operator> <call pos:start="117:26" pos:end="119:70"><name pos:start="117:26" pos:end="117:45"><name pos:start="117:26" pos:end="117:26">s</name><operator pos:start="117:27" pos:end="117:28">-&gt;</operator><name pos:start="117:29" pos:end="117:31">psy</name><operator pos:start="117:32" pos:end="117:32">.</operator><name pos:start="117:33" pos:end="117:37">model</name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:45">window</name></name><argument_list pos:start="117:46" pos:end="119:70">(<argument pos:start="117:47" pos:end="117:53"><expr pos:start="117:47" pos:end="117:53"><operator pos:start="117:47" pos:end="117:47">&amp;</operator><name pos:start="117:48" pos:end="117:53"><name pos:start="117:48" pos:end="117:48">s</name><operator pos:start="117:49" pos:end="117:50">-&gt;</operator><name pos:start="117:51" pos:end="117:53">psy</name></name></expr></argument>, <argument pos:start="117:56" pos:end="117:63"><expr pos:start="117:56" pos:end="117:63"><name pos:start="117:56" pos:end="117:63">samples2</name></expr></argument>, <argument pos:start="117:66" pos:end="117:67"><expr pos:start="117:66" pos:end="117:67"><name pos:start="117:66" pos:end="117:67">la</name></expr></argument>, <argument pos:start="117:70" pos:end="117:83"><expr pos:start="117:70" pos:end="117:83"><name pos:start="117:70" pos:end="117:83"><name pos:start="117:70" pos:end="117:70">s</name><operator pos:start="117:71" pos:end="117:72">-&gt;</operator><name pos:start="117:73" pos:end="117:83">cur_channel</name></name></expr></argument>,

                                              <argument pos:start="119:47" pos:end="119:69"><expr pos:start="119:47" pos:end="119:69"><name pos:start="119:47" pos:end="119:69"><name pos:start="119:47" pos:end="119:49">ics</name><operator pos:start="119:50" pos:end="119:51">-&gt;</operator><name pos:start="119:52" pos:end="119:66">window_sequence</name><index pos:start="119:67" pos:end="119:69">[<expr pos:start="119:68" pos:end="119:68"><literal type="number" pos:start="119:68" pos:end="119:68">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:62"><expr pos:start="123:13" pos:end="123:61"><name pos:start="123:13" pos:end="123:35"><name pos:start="123:13" pos:end="123:15">ics</name><operator pos:start="123:16" pos:end="123:17">-&gt;</operator><name pos:start="123:18" pos:end="123:32">window_sequence</name><index pos:start="123:33" pos:end="123:35">[<expr pos:start="123:34" pos:end="123:34"><literal type="number" pos:start="123:34" pos:end="123:34">1</literal></expr>]</index></name> <operator pos:start="123:37" pos:end="123:37">=</operator> <name pos:start="123:39" pos:end="123:61"><name pos:start="123:39" pos:end="123:41">ics</name><operator pos:start="123:42" pos:end="123:43">-&gt;</operator><name pos:start="123:44" pos:end="123:58">window_sequence</name><index pos:start="123:59" pos:end="123:61">[<expr pos:start="123:60" pos:end="123:60"><literal type="number" pos:start="123:60" pos:end="123:60">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:60"><expr pos:start="125:13" pos:end="125:59"><name pos:start="125:13" pos:end="125:35"><name pos:start="125:13" pos:end="125:15">ics</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:32">window_sequence</name><index pos:start="125:33" pos:end="125:35">[<expr pos:start="125:34" pos:end="125:34"><literal type="number" pos:start="125:34" pos:end="125:34">0</literal></expr>]</index></name> <operator pos:start="125:37" pos:end="125:37">=</operator> <name pos:start="125:39" pos:end="125:44"><name pos:start="125:39" pos:end="125:40">wi</name><index pos:start="125:41" pos:end="125:44">[<expr pos:start="125:42" pos:end="125:43"><name pos:start="125:42" pos:end="125:43">ch</name></expr>]</index></name><operator pos:start="125:45" pos:end="125:45">.</operator><name pos:start="125:46" pos:end="125:59"><name pos:start="125:46" pos:end="125:56">window_type</name><index pos:start="125:57" pos:end="125:59">[<expr pos:start="125:58" pos:end="125:58"><literal type="number" pos:start="125:58" pos:end="125:58">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:60"><expr pos:start="127:13" pos:end="127:59"><name pos:start="127:13" pos:end="127:33"><name pos:start="127:13" pos:end="127:15">ics</name><operator pos:start="127:16" pos:end="127:17">-&gt;</operator><name pos:start="127:18" pos:end="127:30">use_kb_window</name><index pos:start="127:31" pos:end="127:33">[<expr pos:start="127:32" pos:end="127:32"><literal type="number" pos:start="127:32" pos:end="127:32">1</literal></expr>]</index></name>   <operator pos:start="127:37" pos:end="127:37">=</operator> <name pos:start="127:39" pos:end="127:59"><name pos:start="127:39" pos:end="127:41">ics</name><operator pos:start="127:42" pos:end="127:43">-&gt;</operator><name pos:start="127:44" pos:end="127:56">use_kb_window</name><index pos:start="127:57" pos:end="127:59">[<expr pos:start="127:58" pos:end="127:58"><literal type="number" pos:start="127:58" pos:end="127:58">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:58"><expr pos:start="129:13" pos:end="129:57"><name pos:start="129:13" pos:end="129:33"><name pos:start="129:13" pos:end="129:15">ics</name><operator pos:start="129:16" pos:end="129:17">-&gt;</operator><name pos:start="129:18" pos:end="129:30">use_kb_window</name><index pos:start="129:31" pos:end="129:33">[<expr pos:start="129:32" pos:end="129:32"><literal type="number" pos:start="129:32" pos:end="129:32">0</literal></expr>]</index></name>   <operator pos:start="129:37" pos:end="129:37">=</operator> <name pos:start="129:39" pos:end="129:44"><name pos:start="129:39" pos:end="129:40">wi</name><index pos:start="129:41" pos:end="129:44">[<expr pos:start="129:42" pos:end="129:43"><name pos:start="129:42" pos:end="129:43">ch</name></expr>]</index></name><operator pos:start="129:45" pos:end="129:45">.</operator><name pos:start="129:46" pos:end="129:57">window_shape</name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:57"><expr pos:start="131:13" pos:end="131:56"><name pos:start="131:13" pos:end="131:28"><name pos:start="131:13" pos:end="131:15">ics</name><operator pos:start="131:16" pos:end="131:17">-&gt;</operator><name pos:start="131:18" pos:end="131:28">num_windows</name></name>        <operator pos:start="131:37" pos:end="131:37">=</operator> <name pos:start="131:39" pos:end="131:44"><name pos:start="131:39" pos:end="131:40">wi</name><index pos:start="131:41" pos:end="131:44">[<expr pos:start="131:42" pos:end="131:43"><name pos:start="131:42" pos:end="131:43">ch</name></expr>]</index></name><operator pos:start="131:45" pos:end="131:45">.</operator><name pos:start="131:46" pos:end="131:56">num_windows</name></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:78"><expr pos:start="133:13" pos:end="133:77"><name pos:start="133:13" pos:end="133:26"><name pos:start="133:13" pos:end="133:15">ics</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:26">swb_sizes</name></name>          <operator pos:start="133:37" pos:end="133:37">=</operator> <name pos:start="133:39" pos:end="133:77"><name pos:start="133:39" pos:end="133:39">s</name><operator pos:start="133:40" pos:end="133:41">-&gt;</operator><name pos:start="133:42" pos:end="133:44">psy</name><operator pos:start="133:45" pos:end="133:45">.</operator><name pos:start="133:46" pos:end="133:50">bands</name>    <index pos:start="133:55" pos:end="133:77">[<expr pos:start="133:56" pos:end="133:76"><name pos:start="133:56" pos:end="133:71"><name pos:start="133:56" pos:end="133:58">ics</name><operator pos:start="133:59" pos:end="133:60">-&gt;</operator><name pos:start="133:61" pos:end="133:71">num_windows</name></name> <operator pos:start="133:73" pos:end="133:74">==</operator> <literal type="number" pos:start="133:76" pos:end="133:76">8</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:111"><expr pos:start="135:13" pos:end="135:110"><name pos:start="135:13" pos:end="135:24"><name pos:start="135:13" pos:end="135:15">ics</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:24">num_swb</name></name>            <operator pos:start="135:37" pos:end="135:37">=</operator> <ternary pos:start="135:39" pos:end="135:110"><condition pos:start="135:39" pos:end="135:55"><expr pos:start="135:39" pos:end="135:53"><name pos:start="135:39" pos:end="135:41">tag</name> <operator pos:start="135:43" pos:end="135:44">==</operator> <name pos:start="135:46" pos:end="135:53">TYPE_LFE</name></expr> ?</condition><then pos:start="135:57" pos:end="135:68"> <expr pos:start="135:57" pos:end="135:68"><name pos:start="135:57" pos:end="135:68"><name pos:start="135:57" pos:end="135:59">ics</name><operator pos:start="135:60" pos:end="135:61">-&gt;</operator><name pos:start="135:62" pos:end="135:68">num_swb</name></name></expr> </then><else pos:start="135:70" pos:end="135:110">: <expr pos:start="135:72" pos:end="135:110"><name pos:start="135:72" pos:end="135:110"><name pos:start="135:72" pos:end="135:72">s</name><operator pos:start="135:73" pos:end="135:74">-&gt;</operator><name pos:start="135:75" pos:end="135:77">psy</name><operator pos:start="135:78" pos:end="135:78">.</operator><name pos:start="135:79" pos:end="135:87">num_bands</name><index pos:start="135:88" pos:end="135:110">[<expr pos:start="135:89" pos:end="135:109"><name pos:start="135:89" pos:end="135:104"><name pos:start="135:89" pos:end="135:91">ics</name><operator pos:start="135:92" pos:end="135:93">-&gt;</operator><name pos:start="135:94" pos:end="135:104">num_windows</name></name> <operator pos:start="135:106" pos:end="135:107">==</operator> <literal type="number" pos:start="135:109" pos:end="135:109">8</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:72"><expr pos:start="137:13" pos:end="137:71"><name pos:start="137:13" pos:end="137:24"><name pos:start="137:13" pos:end="137:15">ics</name><operator pos:start="137:16" pos:end="137:17">-&gt;</operator><name pos:start="137:18" pos:end="137:24">max_sfb</name></name>            <operator pos:start="137:37" pos:end="137:37">=</operator> <call pos:start="137:39" pos:end="137:71"><name pos:start="137:39" pos:end="137:43">FFMIN</name><argument_list pos:start="137:44" pos:end="137:71">(<argument pos:start="137:45" pos:end="137:56"><expr pos:start="137:45" pos:end="137:56"><name pos:start="137:45" pos:end="137:56"><name pos:start="137:45" pos:end="137:47">ics</name><operator pos:start="137:48" pos:end="137:49">-&gt;</operator><name pos:start="137:50" pos:end="137:56">max_sfb</name></name></expr></argument>, <argument pos:start="137:59" pos:end="137:70"><expr pos:start="137:59" pos:end="137:70"><name pos:start="137:59" pos:end="137:70"><name pos:start="137:59" pos:end="137:61">ics</name><operator pos:start="137:62" pos:end="137:63">-&gt;</operator><name pos:start="137:64" pos:end="137:70">num_swb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="143:80"><expr pos:start="139:13" pos:end="143:79"><name pos:start="139:13" pos:end="139:27"><name pos:start="139:13" pos:end="139:15">ics</name><operator pos:start="139:16" pos:end="139:17">-&gt;</operator><name pos:start="139:18" pos:end="139:27">swb_offset</name></name>         <operator pos:start="139:37" pos:end="139:37">=</operator> <ternary pos:start="139:39" pos:end="143:79"><condition pos:start="139:39" pos:end="139:85"><expr pos:start="139:39" pos:end="139:83"><name pos:start="139:39" pos:end="139:44"><name pos:start="139:39" pos:end="139:40">wi</name><index pos:start="139:41" pos:end="139:44">[<expr pos:start="139:42" pos:end="139:43"><name pos:start="139:42" pos:end="139:43">ch</name></expr>]</index></name><operator pos:start="139:45" pos:end="139:45">.</operator><name pos:start="139:46" pos:end="139:59"><name pos:start="139:46" pos:end="139:56">window_type</name><index pos:start="139:57" pos:end="139:59">[<expr pos:start="139:58" pos:end="139:58"><literal type="number" pos:start="139:58" pos:end="139:58">0</literal></expr>]</index></name> <operator pos:start="139:61" pos:end="139:62">==</operator> <name pos:start="139:64" pos:end="139:83">EIGHT_SHORT_SEQUENCE</name></expr> ?</condition><then pos:start="141:41" pos:end="141:79">

                                        <expr pos:start="141:41" pos:end="141:79"><name pos:start="141:41" pos:end="141:79"><name pos:start="141:41" pos:end="141:57">ff_swb_offset_128</name> <index pos:start="141:59" pos:end="141:79">[<expr pos:start="141:60" pos:end="141:78"><name pos:start="141:60" pos:end="141:78"><name pos:start="141:60" pos:end="141:60">s</name><operator pos:start="141:61" pos:end="141:62">-&gt;</operator><name pos:start="141:63" pos:end="141:78">samplerate_index</name></name></expr>]</index></name></expr></then><else pos:start="141:80" pos:end="143:79">:

                                        <expr pos:start="143:41" pos:end="143:79"><name pos:start="143:41" pos:end="143:79"><name pos:start="143:41" pos:end="143:58">ff_swb_offset_1024</name><index pos:start="143:59" pos:end="143:79">[<expr pos:start="143:60" pos:end="143:78"><name pos:start="143:60" pos:end="143:78"><name pos:start="143:60" pos:end="143:60">s</name><operator pos:start="143:61" pos:end="143:62">-&gt;</operator><name pos:start="143:63" pos:end="143:78">samplerate_index</name></name></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="149:83"><expr pos:start="145:13" pos:end="149:82"><name pos:start="145:13" pos:end="145:30"><name pos:start="145:13" pos:end="145:15">ics</name><operator pos:start="145:16" pos:end="145:17">-&gt;</operator><name pos:start="145:18" pos:end="145:30">tns_max_bands</name></name>      <operator pos:start="145:37" pos:end="145:37">=</operator> <ternary pos:start="145:39" pos:end="149:82"><condition pos:start="145:39" pos:end="145:85"><expr pos:start="145:39" pos:end="145:83"><name pos:start="145:39" pos:end="145:44"><name pos:start="145:39" pos:end="145:40">wi</name><index pos:start="145:41" pos:end="145:44">[<expr pos:start="145:42" pos:end="145:43"><name pos:start="145:42" pos:end="145:43">ch</name></expr>]</index></name><operator pos:start="145:45" pos:end="145:45">.</operator><name pos:start="145:46" pos:end="145:59"><name pos:start="145:46" pos:end="145:56">window_type</name><index pos:start="145:57" pos:end="145:59">[<expr pos:start="145:58" pos:end="145:58"><literal type="number" pos:start="145:58" pos:end="145:58">0</literal></expr>]</index></name> <operator pos:start="145:61" pos:end="145:62">==</operator> <name pos:start="145:64" pos:end="145:83">EIGHT_SHORT_SEQUENCE</name></expr> ?</condition><then pos:start="147:41" pos:end="147:82">

                                        <expr pos:start="147:41" pos:end="147:82"><name pos:start="147:41" pos:end="147:82"><name pos:start="147:41" pos:end="147:60">ff_tns_max_bands_128</name> <index pos:start="147:62" pos:end="147:82">[<expr pos:start="147:63" pos:end="147:81"><name pos:start="147:63" pos:end="147:81"><name pos:start="147:63" pos:end="147:63">s</name><operator pos:start="147:64" pos:end="147:65">-&gt;</operator><name pos:start="147:66" pos:end="147:81">samplerate_index</name></name></expr>]</index></name></expr></then><else pos:start="147:83" pos:end="149:82">:

                                        <expr pos:start="149:41" pos:end="149:82"><name pos:start="149:41" pos:end="149:82"><name pos:start="149:41" pos:end="149:61">ff_tns_max_bands_1024</name><index pos:start="149:62" pos:end="149:82">[<expr pos:start="149:63" pos:end="149:81"><name pos:start="149:63" pos:end="149:81"><name pos:start="149:63" pos:end="149:63">s</name><operator pos:start="149:64" pos:end="149:65">-&gt;</operator><name pos:start="149:66" pos:end="149:81">samplerate_index</name></name></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:41"><expr pos:start="151:13" pos:end="151:40"><name pos:start="151:13" pos:end="151:33">clip_avoidance_factor</name> <operator pos:start="151:35" pos:end="151:35">=</operator> <literal type="number" pos:start="151:37" pos:end="151:40">0.0f</literal></expr>;</expr_stmt>

            <for pos:start="153:13" pos:end="155:55">for <control pos:start="153:17" pos:end="153:50">(<init pos:start="153:18" pos:end="153:23"><expr pos:start="153:18" pos:end="153:22"><name pos:start="153:18" pos:end="153:18">w</name> <operator pos:start="153:20" pos:end="153:20">=</operator> <literal type="number" pos:start="153:22" pos:end="153:22">0</literal></expr>;</init> <condition pos:start="153:25" pos:end="153:45"><expr pos:start="153:25" pos:end="153:44"><name pos:start="153:25" pos:end="153:25">w</name> <operator pos:start="153:27" pos:end="153:27">&lt;</operator> <name pos:start="153:29" pos:end="153:44"><name pos:start="153:29" pos:end="153:31">ics</name><operator pos:start="153:32" pos:end="153:33">-&gt;</operator><name pos:start="153:34" pos:end="153:44">num_windows</name></name></expr>;</condition> <incr pos:start="153:47" pos:end="153:49"><expr pos:start="153:47" pos:end="153:49"><name pos:start="153:47" pos:end="153:47">w</name><operator pos:start="153:48" pos:end="153:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="155:17" pos:end="155:55"><block_content pos:start="155:17" pos:end="155:55">

                <expr_stmt pos:start="155:17" pos:end="155:55"><expr pos:start="155:17" pos:end="155:54"><name pos:start="155:17" pos:end="155:33"><name pos:start="155:17" pos:end="155:19">ics</name><operator pos:start="155:20" pos:end="155:21">-&gt;</operator><name pos:start="155:22" pos:end="155:30">group_len</name><index pos:start="155:31" pos:end="155:33">[<expr pos:start="155:32" pos:end="155:32"><name pos:start="155:32" pos:end="155:32">w</name></expr>]</index></name> <operator pos:start="155:35" pos:end="155:35">=</operator> <name pos:start="155:37" pos:end="155:42"><name pos:start="155:37" pos:end="155:38">wi</name><index pos:start="155:39" pos:end="155:42">[<expr pos:start="155:40" pos:end="155:41"><name pos:start="155:40" pos:end="155:41">ch</name></expr>]</index></name><operator pos:start="155:43" pos:end="155:43">.</operator><name pos:start="155:44" pos:end="155:54"><name pos:start="155:44" pos:end="155:51">grouping</name><index pos:start="155:52" pos:end="155:54">[<expr pos:start="155:53" pos:end="155:53"><name pos:start="155:53" pos:end="155:53">w</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <for pos:start="157:13" pos:end="171:13">for <control pos:start="157:17" pos:end="157:50">(<init pos:start="157:18" pos:end="157:23"><expr pos:start="157:18" pos:end="157:22"><name pos:start="157:18" pos:end="157:18">w</name> <operator pos:start="157:20" pos:end="157:20">=</operator> <literal type="number" pos:start="157:22" pos:end="157:22">0</literal></expr>;</init> <condition pos:start="157:25" pos:end="157:45"><expr pos:start="157:25" pos:end="157:44"><name pos:start="157:25" pos:end="157:25">w</name> <operator pos:start="157:27" pos:end="157:27">&lt;</operator> <name pos:start="157:29" pos:end="157:44"><name pos:start="157:29" pos:end="157:31">ics</name><operator pos:start="157:32" pos:end="157:33">-&gt;</operator><name pos:start="157:34" pos:end="157:44">num_windows</name></name></expr>;</condition> <incr pos:start="157:47" pos:end="157:49"><expr pos:start="157:47" pos:end="157:49"><name pos:start="157:47" pos:end="157:47">w</name><operator pos:start="157:48" pos:end="157:49">++</operator></expr></incr>)</control> <block pos:start="157:52" pos:end="171:13">{<block_content pos:start="159:17" pos:end="169:17">

                <if_stmt pos:start="159:17" pos:end="169:17"><if pos:start="159:17" pos:end="165:17">if <condition pos:start="159:20" pos:end="159:63">(<expr pos:start="159:21" pos:end="159:62"><name pos:start="159:21" pos:end="159:26"><name pos:start="159:21" pos:end="159:22">wi</name><index pos:start="159:23" pos:end="159:26">[<expr pos:start="159:24" pos:end="159:25"><name pos:start="159:24" pos:end="159:25">ch</name></expr>]</index></name><operator pos:start="159:27" pos:end="159:27">.</operator><name pos:start="159:28" pos:end="159:38"><name pos:start="159:28" pos:end="159:35">clipping</name><index pos:start="159:36" pos:end="159:38">[<expr pos:start="159:37" pos:end="159:37"><name pos:start="159:37" pos:end="159:37">w</name></expr>]</index></name> <operator pos:start="159:40" pos:end="159:40">&gt;</operator> <name pos:start="159:42" pos:end="159:62">CLIP_AVOIDANCE_FACTOR</name></expr>)</condition> <block pos:start="159:65" pos:end="165:17">{<block_content pos:start="161:21" pos:end="163:93">

                    <expr_stmt pos:start="161:21" pos:end="161:48"><expr pos:start="161:21" pos:end="161:47"><name pos:start="161:21" pos:end="161:43"><name pos:start="161:21" pos:end="161:23">ics</name><operator pos:start="161:24" pos:end="161:25">-&gt;</operator><name pos:start="161:26" pos:end="161:40">window_clipping</name><index pos:start="161:41" pos:end="161:43">[<expr pos:start="161:42" pos:end="161:42"><name pos:start="161:42" pos:end="161:42">w</name></expr>]</index></name> <operator pos:start="161:45" pos:end="161:45">=</operator> <literal type="number" pos:start="161:47" pos:end="161:47">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="163:21" pos:end="163:93"><expr pos:start="163:21" pos:end="163:92"><name pos:start="163:21" pos:end="163:41">clip_avoidance_factor</name> <operator pos:start="163:43" pos:end="163:43">=</operator> <call pos:start="163:45" pos:end="163:92"><name pos:start="163:45" pos:end="163:49">FFMAX</name><argument_list pos:start="163:50" pos:end="163:92">(<argument pos:start="163:51" pos:end="163:71"><expr pos:start="163:51" pos:end="163:71"><name pos:start="163:51" pos:end="163:71">clip_avoidance_factor</name></expr></argument>, <argument pos:start="163:74" pos:end="163:91"><expr pos:start="163:74" pos:end="163:91"><name pos:start="163:74" pos:end="163:79"><name pos:start="163:74" pos:end="163:75">wi</name><index pos:start="163:76" pos:end="163:79">[<expr pos:start="163:77" pos:end="163:78"><name pos:start="163:77" pos:end="163:78">ch</name></expr>]</index></name><operator pos:start="163:80" pos:end="163:80">.</operator><name pos:start="163:81" pos:end="163:91"><name pos:start="163:81" pos:end="163:88">clipping</name><index pos:start="163:89" pos:end="163:91">[<expr pos:start="163:90" pos:end="163:90"><name pos:start="163:90" pos:end="163:90">w</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="165:19" pos:end="169:17">else <block pos:start="165:24" pos:end="169:17">{<block_content pos:start="167:21" pos:end="167:48">

                    <expr_stmt pos:start="167:21" pos:end="167:48"><expr pos:start="167:21" pos:end="167:47"><name pos:start="167:21" pos:end="167:43"><name pos:start="167:21" pos:end="167:23">ics</name><operator pos:start="167:24" pos:end="167:25">-&gt;</operator><name pos:start="167:26" pos:end="167:40">window_clipping</name><index pos:start="167:41" pos:end="167:43">[<expr pos:start="167:42" pos:end="167:42"><name pos:start="167:42" pos:end="167:42">w</name></expr>]</index></name> <operator pos:start="167:45" pos:end="167:45">=</operator> <literal type="number" pos:start="167:47" pos:end="167:47">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="173:13" pos:end="181:13"><if pos:start="173:13" pos:end="177:13">if <condition pos:start="173:16" pos:end="173:62">(<expr pos:start="173:17" pos:end="173:61"><name pos:start="173:17" pos:end="173:37">clip_avoidance_factor</name> <operator pos:start="173:39" pos:end="173:39">&gt;</operator> <name pos:start="173:41" pos:end="173:61">CLIP_AVOIDANCE_FACTOR</name></expr>)</condition> <block pos:start="173:64" pos:end="177:13">{<block_content pos:start="175:17" pos:end="175:91">

                <expr_stmt pos:start="175:17" pos:end="175:91"><expr pos:start="175:17" pos:end="175:90"><name pos:start="175:17" pos:end="175:42"><name pos:start="175:17" pos:end="175:19">ics</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:42">clip_avoidance_factor</name></name> <operator pos:start="175:44" pos:end="175:44">=</operator> <name pos:start="175:46" pos:end="175:66">CLIP_AVOIDANCE_FACTOR</name> <operator pos:start="175:68" pos:end="175:68">/</operator> <name pos:start="175:70" pos:end="175:90">clip_avoidance_factor</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="177:15" pos:end="181:13">else <block pos:start="177:20" pos:end="181:13">{<block_content pos:start="179:17" pos:end="179:50">

                <expr_stmt pos:start="179:17" pos:end="179:50"><expr pos:start="179:17" pos:end="179:49"><name pos:start="179:17" pos:end="179:42"><name pos:start="179:17" pos:end="179:19">ics</name><operator pos:start="179:20" pos:end="179:21">-&gt;</operator><name pos:start="179:22" pos:end="179:42">clip_avoidance_factor</name></name> <operator pos:start="179:44" pos:end="179:44">=</operator> <literal type="number" pos:start="179:46" pos:end="179:49">1.0f</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="185:13" pos:end="185:51"><expr pos:start="185:13" pos:end="185:50"><call pos:start="185:13" pos:end="185:50"><name pos:start="185:13" pos:end="185:33">apply_window_and_mdct</name><argument_list pos:start="185:34" pos:end="185:50">(<argument pos:start="185:35" pos:end="185:35"><expr pos:start="185:35" pos:end="185:35"><name pos:start="185:35" pos:end="185:35">s</name></expr></argument>, <argument pos:start="185:38" pos:end="185:40"><expr pos:start="185:38" pos:end="185:40"><name pos:start="185:38" pos:end="185:40">sce</name></expr></argument>, <argument pos:start="185:43" pos:end="185:49"><expr pos:start="185:43" pos:end="185:49"><name pos:start="185:43" pos:end="185:49">overlap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="189:13" pos:end="197:13"><if pos:start="189:13" pos:end="197:13">if <condition pos:start="189:16" pos:end="189:55">(<expr pos:start="189:17" pos:end="189:54"><name pos:start="189:17" pos:end="189:30"><name pos:start="189:17" pos:end="189:17">s</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:26">options</name><operator pos:start="189:27" pos:end="189:27">.</operator><name pos:start="189:28" pos:end="189:30">ltp</name></name> <operator pos:start="189:32" pos:end="189:33">&amp;&amp;</operator> <name pos:start="189:35" pos:end="189:54"><name pos:start="189:35" pos:end="189:35">s</name><operator pos:start="189:36" pos:end="189:37">-&gt;</operator><name pos:start="189:38" pos:end="189:42">coder</name><operator pos:start="189:43" pos:end="189:44">-&gt;</operator><name pos:start="189:45" pos:end="189:54">update_ltp</name></name></expr>)</condition> <block pos:start="189:57" pos:end="197:13">{<block_content pos:start="191:17" pos:end="195:80">

                <expr_stmt pos:start="191:17" pos:end="191:45"><expr pos:start="191:17" pos:end="191:44"><call pos:start="191:17" pos:end="191:44"><name pos:start="191:17" pos:end="191:36"><name pos:start="191:17" pos:end="191:17">s</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:24">coder</name><operator pos:start="191:25" pos:end="191:26">-&gt;</operator><name pos:start="191:27" pos:end="191:36">update_ltp</name></name><argument_list pos:start="191:37" pos:end="191:44">(<argument pos:start="191:38" pos:end="191:38"><expr pos:start="191:38" pos:end="191:38"><name pos:start="191:38" pos:end="191:38">s</name></expr></argument>, <argument pos:start="191:41" pos:end="191:43"><expr pos:start="191:41" pos:end="191:43"><name pos:start="191:41" pos:end="191:43">sce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:92"><expr pos:start="193:17" pos:end="193:91"><name pos:start="193:17" pos:end="193:57"><name pos:start="193:17" pos:end="193:28">apply_window</name><index pos:start="193:29" pos:end="193:57">[<expr pos:start="193:30" pos:end="193:56"><name pos:start="193:30" pos:end="193:56"><name pos:start="193:30" pos:end="193:32">sce</name><operator pos:start="193:33" pos:end="193:34">-&gt;</operator><name pos:start="193:35" pos:end="193:37">ics</name><operator pos:start="193:38" pos:end="193:38">.</operator><name pos:start="193:39" pos:end="193:53">window_sequence</name><index pos:start="193:54" pos:end="193:56">[<expr pos:start="193:55" pos:end="193:55"><literal type="number" pos:start="193:55" pos:end="193:55">0</literal></expr>]</index></name></expr>]</index></name><operator pos:start="193:58" pos:end="193:58">(</operator><name pos:start="193:59" pos:end="193:65"><name pos:start="193:59" pos:end="193:59">s</name><operator pos:start="193:60" pos:end="193:61">-&gt;</operator><name pos:start="193:62" pos:end="193:65">fdsp</name></name><operator pos:start="193:66" pos:end="193:66">,</operator> <name pos:start="193:68" pos:end="193:70">sce</name><operator pos:start="193:71" pos:end="193:71">,</operator> <operator pos:start="193:73" pos:end="193:73">&amp;</operator><name pos:start="193:74" pos:end="193:90"><name pos:start="193:74" pos:end="193:76">sce</name><operator pos:start="193:77" pos:end="193:78">-&gt;</operator><name pos:start="193:79" pos:end="193:87">ltp_state</name><index pos:start="193:88" pos:end="193:90">[<expr pos:start="193:89" pos:end="193:89"><literal type="number" pos:start="193:89" pos:end="193:89">0</literal></expr>]</index></name><operator pos:start="193:91" pos:end="193:91">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:80"><expr pos:start="195:17" pos:end="195:79"><call pos:start="195:17" pos:end="195:79"><name pos:start="195:17" pos:end="195:37"><name pos:start="195:17" pos:end="195:17">s</name><operator pos:start="195:18" pos:end="195:19">-&gt;</operator><name pos:start="195:20" pos:end="195:27">mdct1024</name><operator pos:start="195:28" pos:end="195:28">.</operator><name pos:start="195:29" pos:end="195:37">mdct_calc</name></name><argument_list pos:start="195:38" pos:end="195:79">(<argument pos:start="195:39" pos:end="195:50"><expr pos:start="195:39" pos:end="195:50"><operator pos:start="195:39" pos:end="195:39">&amp;</operator><name pos:start="195:40" pos:end="195:50"><name pos:start="195:40" pos:end="195:40">s</name><operator pos:start="195:41" pos:end="195:42">-&gt;</operator><name pos:start="195:43" pos:end="195:50">mdct1024</name></name></expr></argument>, <argument pos:start="195:53" pos:end="195:64"><expr pos:start="195:53" pos:end="195:64"><name pos:start="195:53" pos:end="195:64"><name pos:start="195:53" pos:end="195:55">sce</name><operator pos:start="195:56" pos:end="195:57">-&gt;</operator><name pos:start="195:58" pos:end="195:64">lcoeffs</name></name></expr></argument>, <argument pos:start="195:67" pos:end="195:78"><expr pos:start="195:67" pos:end="195:78"><name pos:start="195:67" pos:end="195:78"><name pos:start="195:67" pos:end="195:69">sce</name><operator pos:start="195:70" pos:end="195:71">-&gt;</operator><name pos:start="195:72" pos:end="195:78">ret_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="201:13" pos:end="207:13"><if pos:start="201:13" pos:end="207:13">if <condition pos:start="201:16" pos:end="201:42">(<expr pos:start="201:17" pos:end="201:41"><call pos:start="201:17" pos:end="201:41"><name pos:start="201:17" pos:end="201:21">isnan</name><argument_list pos:start="201:22" pos:end="201:41">(<argument pos:start="201:23" pos:end="201:40"><expr pos:start="201:23" pos:end="201:40"><name pos:start="201:23" pos:end="201:40"><name pos:start="201:23" pos:end="201:25">cpe</name><operator pos:start="201:26" pos:end="201:27">-&gt;</operator><name pos:start="201:28" pos:end="201:29">ch</name><operator pos:start="201:30" pos:end="201:31">-&gt;</operator><name pos:start="201:32" pos:end="201:37">coeffs</name><index pos:start="201:38" pos:end="201:40">[<expr pos:start="201:39" pos:end="201:39"><literal type="number" pos:start="201:39" pos:end="201:39">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="201:44" pos:end="207:13">{<block_content pos:start="203:17" pos:end="205:39">

                <expr_stmt pos:start="203:17" pos:end="203:68"><expr pos:start="203:17" pos:end="203:67"><call pos:start="203:17" pos:end="203:67"><name pos:start="203:17" pos:end="203:22">av_log</name><argument_list pos:start="203:23" pos:end="203:67">(<argument pos:start="203:24" pos:end="203:28"><expr pos:start="203:24" pos:end="203:28"><name pos:start="203:24" pos:end="203:28">avctx</name></expr></argument>, <argument pos:start="203:31" pos:end="203:42"><expr pos:start="203:31" pos:end="203:42"><name pos:start="203:31" pos:end="203:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="203:45" pos:end="203:66"><expr pos:start="203:45" pos:end="203:66"><literal type="string" pos:start="203:45" pos:end="203:66">"Input contains NaN\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="205:17" pos:end="205:39">return <expr pos:start="205:24" pos:end="205:38"><call pos:start="205:24" pos:end="205:38"><name pos:start="205:24" pos:end="205:30">AVERROR</name><argument_list pos:start="205:31" pos:end="205:38">(<argument pos:start="205:32" pos:end="205:37"><expr pos:start="205:32" pos:end="205:37"><name pos:start="205:32" pos:end="205:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:35"><expr pos:start="209:13" pos:end="209:34"><call pos:start="209:13" pos:end="209:34"><name pos:start="209:13" pos:end="209:26">avoid_clipping</name><argument_list pos:start="209:27" pos:end="209:34">(<argument pos:start="209:28" pos:end="209:28"><expr pos:start="209:28" pos:end="209:28"><name pos:start="209:28" pos:end="209:28">s</name></expr></argument>, <argument pos:start="209:31" pos:end="209:33"><expr pos:start="209:31" pos:end="209:33"><name pos:start="209:31" pos:end="209:33">sce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="213:9" pos:end="213:26"><expr pos:start="213:9" pos:end="213:25"><name pos:start="213:9" pos:end="213:16">start_ch</name> <operator pos:start="213:18" pos:end="213:19">+=</operator> <name pos:start="213:21" pos:end="213:25">chans</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="217:5" pos:end="219:19"><if pos:start="217:5" pos:end="219:19">if <condition pos:start="217:8" pos:end="217:74">(<expr pos:start="217:9" pos:end="217:73"><operator pos:start="217:9" pos:end="217:9">(</operator><name pos:start="217:10" pos:end="217:12">ret</name> <operator pos:start="217:14" pos:end="217:14">=</operator> <call pos:start="217:16" pos:end="217:68"><name pos:start="217:16" pos:end="217:31">ff_alloc_packet2</name><argument_list pos:start="217:32" pos:end="217:68">(<argument pos:start="217:33" pos:end="217:37"><expr pos:start="217:33" pos:end="217:37"><name pos:start="217:33" pos:end="217:37">avctx</name></expr></argument>, <argument pos:start="217:40" pos:end="217:44"><expr pos:start="217:40" pos:end="217:44"><name pos:start="217:40" pos:end="217:44">avpkt</name></expr></argument>, <argument pos:start="217:47" pos:end="217:64"><expr pos:start="217:47" pos:end="217:64"><literal type="number" pos:start="217:47" pos:end="217:50">8192</literal> <operator pos:start="217:52" pos:end="217:52">*</operator> <name pos:start="217:54" pos:end="217:64"><name pos:start="217:54" pos:end="217:54">s</name><operator pos:start="217:55" pos:end="217:56">-&gt;</operator><name pos:start="217:57" pos:end="217:64">channels</name></name></expr></argument>, <argument pos:start="217:67" pos:end="217:67"><expr pos:start="217:67" pos:end="217:67"><literal type="number" pos:start="217:67" pos:end="217:67">0</literal></expr></argument>)</argument_list></call><operator pos:start="217:69" pos:end="217:69">)</operator> <operator pos:start="217:71" pos:end="217:71">&lt;</operator> <literal type="number" pos:start="217:73" pos:end="217:73">0</literal></expr>)</condition><block type="pseudo" pos:start="219:9" pos:end="219:19"><block_content pos:start="219:9" pos:end="219:19">

        <return pos:start="219:9" pos:end="219:19">return <expr pos:start="219:16" pos:end="219:18"><name pos:start="219:16" pos:end="219:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:25"><expr pos:start="221:5" pos:end="221:24"><name pos:start="221:5" pos:end="221:14">frame_bits</name> <operator pos:start="221:16" pos:end="221:16">=</operator> <name pos:start="221:18" pos:end="221:20">its</name> <operator pos:start="221:22" pos:end="221:22">=</operator> <literal type="number" pos:start="221:24" pos:end="221:24">0</literal></expr>;</expr_stmt>

    <do pos:start="223:5" pos:end="611:16">do <block pos:start="223:8" pos:end="611:5">{<block_content pos:start="225:9" pos:end="609:9">

        <expr_stmt pos:start="225:9" pos:end="225:56"><expr pos:start="225:9" pos:end="225:55"><call pos:start="225:9" pos:end="225:55"><name pos:start="225:9" pos:end="225:21">init_put_bits</name><argument_list pos:start="225:22" pos:end="225:55">(<argument pos:start="225:23" pos:end="225:28"><expr pos:start="225:23" pos:end="225:28"><operator pos:start="225:23" pos:end="225:23">&amp;</operator><name pos:start="225:24" pos:end="225:28"><name pos:start="225:24" pos:end="225:24">s</name><operator pos:start="225:25" pos:end="225:26">-&gt;</operator><name pos:start="225:27" pos:end="225:28">pb</name></name></expr></argument>, <argument pos:start="225:31" pos:end="225:41"><expr pos:start="225:31" pos:end="225:41"><name pos:start="225:31" pos:end="225:41"><name pos:start="225:31" pos:end="225:35">avpkt</name><operator pos:start="225:36" pos:end="225:37">-&gt;</operator><name pos:start="225:38" pos:end="225:41">data</name></name></expr></argument>, <argument pos:start="225:44" pos:end="225:54"><expr pos:start="225:44" pos:end="225:54"><name pos:start="225:44" pos:end="225:54"><name pos:start="225:44" pos:end="225:48">avpkt</name><operator pos:start="225:49" pos:end="225:50">-&gt;</operator><name pos:start="225:51" pos:end="225:54">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="229:9" pos:end="231:52"><if pos:start="229:9" pos:end="231:52">if <condition pos:start="229:12" pos:end="229:88">(<expr pos:start="229:13" pos:end="229:87"><operator pos:start="229:13" pos:end="229:13">(</operator><name pos:start="229:14" pos:end="229:32"><name pos:start="229:14" pos:end="229:18">avctx</name><operator pos:start="229:19" pos:end="229:20">-&gt;</operator><name pos:start="229:21" pos:end="229:32">frame_number</name></name> <operator pos:start="229:34" pos:end="229:34">&amp;</operator> <literal type="number" pos:start="229:36" pos:end="229:39">0xFF</literal><operator pos:start="229:40" pos:end="229:40">)</operator><operator pos:start="229:41" pos:end="229:42">==</operator><literal type="number" pos:start="229:43" pos:end="229:43">1</literal> <operator pos:start="229:45" pos:end="229:46">&amp;&amp;</operator> <operator pos:start="229:48" pos:end="229:48">!</operator><operator pos:start="229:49" pos:end="229:49">(</operator><name pos:start="229:50" pos:end="229:61"><name pos:start="229:50" pos:end="229:54">avctx</name><operator pos:start="229:55" pos:end="229:56">-&gt;</operator><name pos:start="229:57" pos:end="229:61">flags</name></name> <operator pos:start="229:63" pos:end="229:63">&amp;</operator> <name pos:start="229:65" pos:end="229:86">AV_CODEC_FLAG_BITEXACT</name><operator pos:start="229:87" pos:end="229:87">)</operator></expr>)</condition><block type="pseudo" pos:start="231:13" pos:end="231:52"><block_content pos:start="231:13" pos:end="231:52">

            <expr_stmt pos:start="231:13" pos:end="231:52"><expr pos:start="231:13" pos:end="231:51"><call pos:start="231:13" pos:end="231:51"><name pos:start="231:13" pos:end="231:30">put_bitstream_info</name><argument_list pos:start="231:31" pos:end="231:51">(<argument pos:start="231:32" pos:end="231:32"><expr pos:start="231:32" pos:end="231:32"><name pos:start="231:32" pos:end="231:32">s</name></expr></argument>, <argument pos:start="231:35" pos:end="231:50"><expr pos:start="231:35" pos:end="231:50"><name pos:start="231:35" pos:end="231:50">LIBAVCODEC_IDENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:21"><expr pos:start="233:9" pos:end="233:20"><name pos:start="233:9" pos:end="233:16">start_ch</name> <operator pos:start="233:18" pos:end="233:18">=</operator> <literal type="number" pos:start="233:20" pos:end="233:20">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:24"><expr pos:start="235:9" pos:end="235:23"><name pos:start="235:9" pos:end="235:19">target_bits</name> <operator pos:start="235:21" pos:end="235:21">=</operator> <literal type="number" pos:start="235:23" pos:end="235:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:60"><expr pos:start="237:9" pos:end="237:59"><call pos:start="237:9" pos:end="237:59"><name pos:start="237:9" pos:end="237:14">memset</name><argument_list pos:start="237:15" pos:end="237:59">(<argument pos:start="237:16" pos:end="237:30"><expr pos:start="237:16" pos:end="237:30"><name pos:start="237:16" pos:end="237:30">chan_el_counter</name></expr></argument>, <argument pos:start="237:33" pos:end="237:33"><expr pos:start="237:33" pos:end="237:33"><literal type="number" pos:start="237:33" pos:end="237:33">0</literal></expr></argument>, <argument pos:start="237:36" pos:end="237:58"><expr pos:start="237:36" pos:end="237:58"><sizeof pos:start="237:36" pos:end="237:58">sizeof<argument_list pos:start="237:42" pos:end="237:58">(<argument pos:start="237:43" pos:end="237:57"><expr pos:start="237:43" pos:end="237:57"><name pos:start="237:43" pos:end="237:57">chan_el_counter</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="239:9" pos:end="489:9">for <control pos:start="239:13" pos:end="239:44">(<init pos:start="239:14" pos:end="239:19"><expr pos:start="239:14" pos:end="239:18"><name pos:start="239:14" pos:end="239:14">i</name> <operator pos:start="239:16" pos:end="239:16">=</operator> <literal type="number" pos:start="239:18" pos:end="239:18">0</literal></expr>;</init> <condition pos:start="239:21" pos:end="239:39"><expr pos:start="239:21" pos:end="239:38"><name pos:start="239:21" pos:end="239:21">i</name> <operator pos:start="239:23" pos:end="239:23">&lt;</operator> <name pos:start="239:25" pos:end="239:38"><name pos:start="239:25" pos:end="239:25">s</name><operator pos:start="239:26" pos:end="239:27">-&gt;</operator><name pos:start="239:28" pos:end="239:35">chan_map</name><index pos:start="239:36" pos:end="239:38">[<expr pos:start="239:37" pos:end="239:37"><literal type="number" pos:start="239:37" pos:end="239:37">0</literal></expr>]</index></name></expr>;</condition> <incr pos:start="239:41" pos:end="239:43"><expr pos:start="239:41" pos:end="239:43"><name pos:start="239:41" pos:end="239:41">i</name><operator pos:start="239:42" pos:end="239:43">++</operator></expr></incr>)</control> <block pos:start="239:46" pos:end="489:9">{<block_content pos:start="241:13" pos:end="487:30">

            <decl_stmt pos:start="241:13" pos:end="241:53"><decl pos:start="241:13" pos:end="241:52"><type pos:start="241:13" pos:end="241:28"><name pos:start="241:13" pos:end="241:27">FFPsyWindowInfo</name><modifier pos:start="241:28" pos:end="241:28">*</modifier></type> <name pos:start="241:30" pos:end="241:31">wi</name> <init pos:start="241:33" pos:end="241:52">= <expr pos:start="241:35" pos:end="241:52"><name pos:start="241:35" pos:end="241:41">windows</name> <operator pos:start="241:43" pos:end="241:43">+</operator> <name pos:start="241:45" pos:end="241:52">start_ch</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="243:13" pos:end="243:35"><decl pos:start="243:13" pos:end="243:34"><type pos:start="243:13" pos:end="243:25"><specifier pos:start="243:13" pos:end="243:17">const</specifier> <name pos:start="243:19" pos:end="243:23">float</name> <modifier pos:start="243:25" pos:end="243:25">*</modifier></type><name pos:start="243:26" pos:end="243:34"><name pos:start="243:26" pos:end="243:31">coeffs</name><index pos:start="243:32" pos:end="243:34">[<expr pos:start="243:33" pos:end="243:33"><literal type="number" pos:start="243:33" pos:end="243:33">2</literal></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:40"><expr pos:start="245:13" pos:end="245:39"><name pos:start="245:13" pos:end="245:15">tag</name>      <operator pos:start="245:22" pos:end="245:22">=</operator> <name pos:start="245:24" pos:end="245:39"><name pos:start="245:24" pos:end="245:24">s</name><operator pos:start="245:25" pos:end="245:26">-&gt;</operator><name pos:start="245:27" pos:end="245:34">chan_map</name><index pos:start="245:35" pos:end="245:39">[<expr pos:start="245:36" pos:end="245:38"><name pos:start="245:36" pos:end="245:36">i</name><operator pos:start="245:37" pos:end="245:37">+</operator><literal type="number" pos:start="245:38" pos:end="245:38">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:47"><expr pos:start="247:13" pos:end="247:46"><name pos:start="247:13" pos:end="247:17">chans</name>    <operator pos:start="247:22" pos:end="247:22">=</operator> <ternary pos:start="247:24" pos:end="247:46"><condition pos:start="247:24" pos:end="247:40"><expr pos:start="247:24" pos:end="247:38"><name pos:start="247:24" pos:end="247:26">tag</name> <operator pos:start="247:28" pos:end="247:29">==</operator> <name pos:start="247:31" pos:end="247:38">TYPE_CPE</name></expr> ?</condition><then pos:start="247:42" pos:end="247:42"> <expr pos:start="247:42" pos:end="247:42"><literal type="number" pos:start="247:42" pos:end="247:42">2</literal></expr> </then><else pos:start="247:44" pos:end="247:46">: <expr pos:start="247:46" pos:end="247:46"><literal type="number" pos:start="247:46" pos:end="247:46">1</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:34"><expr pos:start="249:13" pos:end="249:33"><name pos:start="249:13" pos:end="249:15">cpe</name>      <operator pos:start="249:22" pos:end="249:22">=</operator> <operator pos:start="249:24" pos:end="249:24">&amp;</operator><name pos:start="249:25" pos:end="249:33"><name pos:start="249:25" pos:end="249:25">s</name><operator pos:start="249:26" pos:end="249:27">-&gt;</operator><name pos:start="249:28" pos:end="249:30">cpe</name><index pos:start="249:31" pos:end="249:33">[<expr pos:start="249:32" pos:end="249:32"><name pos:start="249:32" pos:end="249:32">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:35"><expr pos:start="251:13" pos:end="251:34"><name pos:start="251:13" pos:end="251:30"><name pos:start="251:13" pos:end="251:15">cpe</name><operator pos:start="251:16" pos:end="251:17">-&gt;</operator><name pos:start="251:18" pos:end="251:30">common_window</name></name> <operator pos:start="251:32" pos:end="251:32">=</operator> <literal type="number" pos:start="251:34" pos:end="251:34">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:58"><expr pos:start="253:13" pos:end="253:57"><call pos:start="253:13" pos:end="253:57"><name pos:start="253:13" pos:end="253:18">memset</name><argument_list pos:start="253:19" pos:end="253:57">(<argument pos:start="253:20" pos:end="253:31"><expr pos:start="253:20" pos:end="253:31"><name pos:start="253:20" pos:end="253:31"><name pos:start="253:20" pos:end="253:22">cpe</name><operator pos:start="253:23" pos:end="253:24">-&gt;</operator><name pos:start="253:25" pos:end="253:31">is_mask</name></name></expr></argument>, <argument pos:start="253:34" pos:end="253:34"><expr pos:start="253:34" pos:end="253:34"><literal type="number" pos:start="253:34" pos:end="253:34">0</literal></expr></argument>, <argument pos:start="253:37" pos:end="253:56"><expr pos:start="253:37" pos:end="253:56"><sizeof pos:start="253:37" pos:end="253:56">sizeof<argument_list pos:start="253:43" pos:end="253:56">(<argument pos:start="253:44" pos:end="253:55"><expr pos:start="253:44" pos:end="253:55"><name pos:start="253:44" pos:end="253:55"><name pos:start="253:44" pos:end="253:46">cpe</name><operator pos:start="253:47" pos:end="253:48">-&gt;</operator><name pos:start="253:49" pos:end="253:55">is_mask</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:58"><expr pos:start="255:13" pos:end="255:57"><call pos:start="255:13" pos:end="255:57"><name pos:start="255:13" pos:end="255:18">memset</name><argument_list pos:start="255:19" pos:end="255:57">(<argument pos:start="255:20" pos:end="255:31"><expr pos:start="255:20" pos:end="255:31"><name pos:start="255:20" pos:end="255:31"><name pos:start="255:20" pos:end="255:22">cpe</name><operator pos:start="255:23" pos:end="255:24">-&gt;</operator><name pos:start="255:25" pos:end="255:31">ms_mask</name></name></expr></argument>, <argument pos:start="255:34" pos:end="255:34"><expr pos:start="255:34" pos:end="255:34"><literal type="number" pos:start="255:34" pos:end="255:34">0</literal></expr></argument>, <argument pos:start="255:37" pos:end="255:56"><expr pos:start="255:37" pos:end="255:56"><sizeof pos:start="255:37" pos:end="255:56">sizeof<argument_list pos:start="255:43" pos:end="255:56">(<argument pos:start="255:44" pos:end="255:55"><expr pos:start="255:44" pos:end="255:55"><name pos:start="255:44" pos:end="255:55"><name pos:start="255:44" pos:end="255:46">cpe</name><operator pos:start="255:47" pos:end="255:48">-&gt;</operator><name pos:start="255:49" pos:end="255:55">ms_mask</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="257:13" pos:end="257:37"><expr pos:start="257:13" pos:end="257:36"><call pos:start="257:13" pos:end="257:36"><name pos:start="257:13" pos:end="257:20">put_bits</name><argument_list pos:start="257:21" pos:end="257:36">(<argument pos:start="257:22" pos:end="257:27"><expr pos:start="257:22" pos:end="257:27"><operator pos:start="257:22" pos:end="257:22">&amp;</operator><name pos:start="257:23" pos:end="257:27"><name pos:start="257:23" pos:end="257:23">s</name><operator pos:start="257:24" pos:end="257:25">-&gt;</operator><name pos:start="257:26" pos:end="257:27">pb</name></name></expr></argument>, <argument pos:start="257:30" pos:end="257:30"><expr pos:start="257:30" pos:end="257:30"><literal type="number" pos:start="257:30" pos:end="257:30">3</literal></expr></argument>, <argument pos:start="257:33" pos:end="257:35"><expr pos:start="257:33" pos:end="257:35"><name pos:start="257:33" pos:end="257:35">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="259:13" pos:end="259:56"><expr pos:start="259:13" pos:end="259:55"><call pos:start="259:13" pos:end="259:55"><name pos:start="259:13" pos:end="259:20">put_bits</name><argument_list pos:start="259:21" pos:end="259:55">(<argument pos:start="259:22" pos:end="259:27"><expr pos:start="259:22" pos:end="259:27"><operator pos:start="259:22" pos:end="259:22">&amp;</operator><name pos:start="259:23" pos:end="259:27"><name pos:start="259:23" pos:end="259:23">s</name><operator pos:start="259:24" pos:end="259:25">-&gt;</operator><name pos:start="259:26" pos:end="259:27">pb</name></name></expr></argument>, <argument pos:start="259:30" pos:end="259:30"><expr pos:start="259:30" pos:end="259:30"><literal type="number" pos:start="259:30" pos:end="259:30">4</literal></expr></argument>, <argument pos:start="259:33" pos:end="259:54"><expr pos:start="259:33" pos:end="259:54"><name pos:start="259:33" pos:end="259:52"><name pos:start="259:33" pos:end="259:47">chan_el_counter</name><index pos:start="259:48" pos:end="259:52">[<expr pos:start="259:49" pos:end="259:51"><name pos:start="259:49" pos:end="259:51">tag</name></expr>]</index></name><operator pos:start="259:53" pos:end="259:54">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="261:13" pos:end="283:13">for <control pos:start="261:17" pos:end="261:42">(<init pos:start="261:18" pos:end="261:24"><expr pos:start="261:18" pos:end="261:23"><name pos:start="261:18" pos:end="261:19">ch</name> <operator pos:start="261:21" pos:end="261:21">=</operator> <literal type="number" pos:start="261:23" pos:end="261:23">0</literal></expr>;</init> <condition pos:start="261:26" pos:end="261:36"><expr pos:start="261:26" pos:end="261:35"><name pos:start="261:26" pos:end="261:27">ch</name> <operator pos:start="261:29" pos:end="261:29">&lt;</operator> <name pos:start="261:31" pos:end="261:35">chans</name></expr>;</condition> <incr pos:start="261:38" pos:end="261:41"><expr pos:start="261:38" pos:end="261:41"><name pos:start="261:38" pos:end="261:39">ch</name><operator pos:start="261:40" pos:end="261:41">++</operator></expr></incr>)</control> <block pos:start="261:44" pos:end="283:13">{<block_content pos:start="263:17" pos:end="281:46">

                <expr_stmt pos:start="263:17" pos:end="263:35"><expr pos:start="263:17" pos:end="263:34"><name pos:start="263:17" pos:end="263:19">sce</name> <operator pos:start="263:21" pos:end="263:21">=</operator> <operator pos:start="263:23" pos:end="263:23">&amp;</operator><name pos:start="263:24" pos:end="263:34"><name pos:start="263:24" pos:end="263:26">cpe</name><operator pos:start="263:27" pos:end="263:28">-&gt;</operator><name pos:start="263:29" pos:end="263:30">ch</name><index pos:start="263:31" pos:end="263:34">[<expr pos:start="263:32" pos:end="263:33"><name pos:start="263:32" pos:end="263:33">ch</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="265:17" pos:end="265:41"><expr pos:start="265:17" pos:end="265:40"><name pos:start="265:17" pos:end="265:26"><name pos:start="265:17" pos:end="265:22">coeffs</name><index pos:start="265:23" pos:end="265:26">[<expr pos:start="265:24" pos:end="265:25"><name pos:start="265:24" pos:end="265:25">ch</name></expr>]</index></name> <operator pos:start="265:28" pos:end="265:28">=</operator> <name pos:start="265:30" pos:end="265:40"><name pos:start="265:30" pos:end="265:32">sce</name><operator pos:start="265:33" pos:end="265:34">-&gt;</operator><name pos:start="265:35" pos:end="265:40">coeffs</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="267:17" pos:end="267:47"><expr pos:start="267:17" pos:end="267:46"><name pos:start="267:17" pos:end="267:42"><name pos:start="267:17" pos:end="267:19">sce</name><operator pos:start="267:20" pos:end="267:21">-&gt;</operator><name pos:start="267:22" pos:end="267:24">ics</name><operator pos:start="267:25" pos:end="267:25">.</operator><name pos:start="267:26" pos:end="267:42">predictor_present</name></name> <operator pos:start="267:44" pos:end="267:44">=</operator> <literal type="number" pos:start="267:46" pos:end="267:46">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="269:17" pos:end="269:41"><expr pos:start="269:17" pos:end="269:40"><name pos:start="269:17" pos:end="269:36"><name pos:start="269:17" pos:end="269:19">sce</name><operator pos:start="269:20" pos:end="269:21">-&gt;</operator><name pos:start="269:22" pos:end="269:24">ics</name><operator pos:start="269:25" pos:end="269:25">.</operator><name pos:start="269:26" pos:end="269:28">ltp</name><operator pos:start="269:29" pos:end="269:29">.</operator><name pos:start="269:30" pos:end="269:36">present</name></name> <operator pos:start="269:38" pos:end="269:38">=</operator> <literal type="number" pos:start="269:40" pos:end="269:40">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="271:17" pos:end="271:72"><expr pos:start="271:17" pos:end="271:71"><call pos:start="271:17" pos:end="271:71"><name pos:start="271:17" pos:end="271:22">memset</name><argument_list pos:start="271:23" pos:end="271:71">(<argument pos:start="271:24" pos:end="271:40"><expr pos:start="271:24" pos:end="271:40"><name pos:start="271:24" pos:end="271:40"><name pos:start="271:24" pos:end="271:26">sce</name><operator pos:start="271:27" pos:end="271:28">-&gt;</operator><name pos:start="271:29" pos:end="271:31">ics</name><operator pos:start="271:32" pos:end="271:32">.</operator><name pos:start="271:33" pos:end="271:35">ltp</name><operator pos:start="271:36" pos:end="271:36">.</operator><name pos:start="271:37" pos:end="271:40">used</name></name></expr></argument>, <argument pos:start="271:43" pos:end="271:43"><expr pos:start="271:43" pos:end="271:43"><literal type="number" pos:start="271:43" pos:end="271:43">0</literal></expr></argument>, <argument pos:start="271:46" pos:end="271:70"><expr pos:start="271:46" pos:end="271:70"><sizeof pos:start="271:46" pos:end="271:70">sizeof<argument_list pos:start="271:52" pos:end="271:70">(<argument pos:start="271:53" pos:end="271:69"><expr pos:start="271:53" pos:end="271:69"><name pos:start="271:53" pos:end="271:69"><name pos:start="271:53" pos:end="271:55">sce</name><operator pos:start="271:56" pos:end="271:57">-&gt;</operator><name pos:start="271:58" pos:end="271:60">ics</name><operator pos:start="271:61" pos:end="271:61">.</operator><name pos:start="271:62" pos:end="271:64">ltp</name><operator pos:start="271:65" pos:end="271:65">.</operator><name pos:start="271:66" pos:end="271:69">used</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="273:17" pos:end="273:86"><expr pos:start="273:17" pos:end="273:85"><call pos:start="273:17" pos:end="273:85"><name pos:start="273:17" pos:end="273:22">memset</name><argument_list pos:start="273:23" pos:end="273:85">(<argument pos:start="273:24" pos:end="273:47"><expr pos:start="273:24" pos:end="273:47"><name pos:start="273:24" pos:end="273:47"><name pos:start="273:24" pos:end="273:26">sce</name><operator pos:start="273:27" pos:end="273:28">-&gt;</operator><name pos:start="273:29" pos:end="273:31">ics</name><operator pos:start="273:32" pos:end="273:32">.</operator><name pos:start="273:33" pos:end="273:47">prediction_used</name></name></expr></argument>, <argument pos:start="273:50" pos:end="273:50"><expr pos:start="273:50" pos:end="273:50"><literal type="number" pos:start="273:50" pos:end="273:50">0</literal></expr></argument>, <argument pos:start="273:53" pos:end="273:84"><expr pos:start="273:53" pos:end="273:84"><sizeof pos:start="273:53" pos:end="273:84">sizeof<argument_list pos:start="273:59" pos:end="273:84">(<argument pos:start="273:60" pos:end="273:83"><expr pos:start="273:60" pos:end="273:83"><name pos:start="273:60" pos:end="273:83"><name pos:start="273:60" pos:end="273:62">sce</name><operator pos:start="273:63" pos:end="273:64">-&gt;</operator><name pos:start="273:65" pos:end="273:67">ics</name><operator pos:start="273:68" pos:end="273:68">.</operator><name pos:start="273:69" pos:end="273:83">prediction_used</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="275:17" pos:end="275:67"><expr pos:start="275:17" pos:end="275:66"><call pos:start="275:17" pos:end="275:66"><name pos:start="275:17" pos:end="275:22">memset</name><argument_list pos:start="275:23" pos:end="275:66">(<argument pos:start="275:24" pos:end="275:32"><expr pos:start="275:24" pos:end="275:32"><operator pos:start="275:24" pos:end="275:24">&amp;</operator><name pos:start="275:25" pos:end="275:32"><name pos:start="275:25" pos:end="275:27">sce</name><operator pos:start="275:28" pos:end="275:29">-&gt;</operator><name pos:start="275:30" pos:end="275:32">tns</name></name></expr></argument>, <argument pos:start="275:35" pos:end="275:35"><expr pos:start="275:35" pos:end="275:35"><literal type="number" pos:start="275:35" pos:end="275:35">0</literal></expr></argument>, <argument pos:start="275:38" pos:end="275:65"><expr pos:start="275:38" pos:end="275:65"><sizeof pos:start="275:38" pos:end="275:65">sizeof<argument_list pos:start="275:44" pos:end="275:65">(<argument pos:start="275:45" pos:end="275:64"><expr pos:start="275:45" pos:end="275:64"><name pos:start="275:45" pos:end="275:64">TemporalNoiseShaping</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="277:17" pos:end="281:46">for <control pos:start="277:21" pos:end="277:41">(<init pos:start="277:22" pos:end="277:27"><expr pos:start="277:22" pos:end="277:26"><name pos:start="277:22" pos:end="277:22">w</name> <operator pos:start="277:24" pos:end="277:24">=</operator> <literal type="number" pos:start="277:26" pos:end="277:26">0</literal></expr>;</init> <condition pos:start="277:29" pos:end="277:36"><expr pos:start="277:29" pos:end="277:35"><name pos:start="277:29" pos:end="277:29">w</name> <operator pos:start="277:31" pos:end="277:31">&lt;</operator> <literal type="number" pos:start="277:33" pos:end="277:35">128</literal></expr>;</condition> <incr pos:start="277:38" pos:end="277:40"><expr pos:start="277:38" pos:end="277:40"><name pos:start="277:38" pos:end="277:38">w</name><operator pos:start="277:39" pos:end="277:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="279:21" pos:end="281:46"><block_content pos:start="279:21" pos:end="281:46">

                    <if_stmt pos:start="279:21" pos:end="281:46"><if pos:start="279:21" pos:end="281:46">if <condition pos:start="279:24" pos:end="279:56">(<expr pos:start="279:25" pos:end="279:55"><name pos:start="279:25" pos:end="279:41"><name pos:start="279:25" pos:end="279:27">sce</name><operator pos:start="279:28" pos:end="279:29">-&gt;</operator><name pos:start="279:30" pos:end="279:38">band_type</name><index pos:start="279:39" pos:end="279:41">[<expr pos:start="279:40" pos:end="279:40"><name pos:start="279:40" pos:end="279:40">w</name></expr>]</index></name> <operator pos:start="279:43" pos:end="279:43">&gt;</operator> <name pos:start="279:45" pos:end="279:55">RESERVED_BT</name></expr>)</condition><block type="pseudo" pos:start="281:25" pos:end="281:46"><block_content pos:start="281:25" pos:end="281:46">

                        <expr_stmt pos:start="281:25" pos:end="281:46"><expr pos:start="281:25" pos:end="281:45"><name pos:start="281:25" pos:end="281:41"><name pos:start="281:25" pos:end="281:27">sce</name><operator pos:start="281:28" pos:end="281:29">-&gt;</operator><name pos:start="281:30" pos:end="281:38">band_type</name><index pos:start="281:39" pos:end="281:41">[<expr pos:start="281:40" pos:end="281:40"><name pos:start="281:40" pos:end="281:40">w</name></expr>]</index></name> <operator pos:start="281:43" pos:end="281:43">=</operator> <literal type="number" pos:start="281:45" pos:end="281:45">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

            </block_content>}</block></for>

            <expr_stmt pos:start="285:13" pos:end="285:37"><expr pos:start="285:13" pos:end="285:36"><name pos:start="285:13" pos:end="285:31"><name pos:start="285:13" pos:end="285:13">s</name><operator pos:start="285:14" pos:end="285:15">-&gt;</operator><name pos:start="285:16" pos:end="285:18">psy</name><operator pos:start="285:19" pos:end="285:19">.</operator><name pos:start="285:20" pos:end="285:25">bitres</name><operator pos:start="285:26" pos:end="285:26">.</operator><name pos:start="285:27" pos:end="285:31">alloc</name></name> <operator pos:start="285:33" pos:end="285:33">=</operator> <operator pos:start="285:35" pos:end="285:35">-</operator><literal type="number" pos:start="285:36" pos:end="285:36">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:70"><expr pos:start="287:13" pos:end="287:69"><name pos:start="287:13" pos:end="287:30"><name pos:start="287:13" pos:end="287:13">s</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:18">psy</name><operator pos:start="287:19" pos:end="287:19">.</operator><name pos:start="287:20" pos:end="287:25">bitres</name><operator pos:start="287:26" pos:end="287:26">.</operator><name pos:start="287:27" pos:end="287:30">bits</name></name> <operator pos:start="287:32" pos:end="287:32">=</operator> <name pos:start="287:34" pos:end="287:55"><name pos:start="287:34" pos:end="287:34">s</name><operator pos:start="287:35" pos:end="287:36">-&gt;</operator><name pos:start="287:37" pos:end="287:55">last_frame_pb_count</name></name> <operator pos:start="287:57" pos:end="287:57">/</operator> <name pos:start="287:59" pos:end="287:69"><name pos:start="287:59" pos:end="287:59">s</name><operator pos:start="287:60" pos:end="287:61">-&gt;</operator><name pos:start="287:62" pos:end="287:69">channels</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="289:13" pos:end="289:65"><expr pos:start="289:13" pos:end="289:64"><call pos:start="289:13" pos:end="289:64"><name pos:start="289:13" pos:end="289:33"><name pos:start="289:13" pos:end="289:13">s</name><operator pos:start="289:14" pos:end="289:15">-&gt;</operator><name pos:start="289:16" pos:end="289:18">psy</name><operator pos:start="289:19" pos:end="289:19">.</operator><name pos:start="289:20" pos:end="289:24">model</name><operator pos:start="289:25" pos:end="289:26">-&gt;</operator><name pos:start="289:27" pos:end="289:33">analyze</name></name><argument_list pos:start="289:34" pos:end="289:64">(<argument pos:start="289:35" pos:end="289:41"><expr pos:start="289:35" pos:end="289:41"><operator pos:start="289:35" pos:end="289:35">&amp;</operator><name pos:start="289:36" pos:end="289:41"><name pos:start="289:36" pos:end="289:36">s</name><operator pos:start="289:37" pos:end="289:38">-&gt;</operator><name pos:start="289:39" pos:end="289:41">psy</name></name></expr></argument>, <argument pos:start="289:44" pos:end="289:51"><expr pos:start="289:44" pos:end="289:51"><name pos:start="289:44" pos:end="289:51">start_ch</name></expr></argument>, <argument pos:start="289:54" pos:end="289:59"><expr pos:start="289:54" pos:end="289:59"><name pos:start="289:54" pos:end="289:59">coeffs</name></expr></argument>, <argument pos:start="289:62" pos:end="289:63"><expr pos:start="289:62" pos:end="289:63"><name pos:start="289:62" pos:end="289:63">wi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="291:13" pos:end="301:13"><if pos:start="291:13" pos:end="301:13">if <condition pos:start="291:16" pos:end="291:40">(<expr pos:start="291:17" pos:end="291:39"><name pos:start="291:17" pos:end="291:35"><name pos:start="291:17" pos:end="291:17">s</name><operator pos:start="291:18" pos:end="291:19">-&gt;</operator><name pos:start="291:20" pos:end="291:22">psy</name><operator pos:start="291:23" pos:end="291:23">.</operator><name pos:start="291:24" pos:end="291:29">bitres</name><operator pos:start="291:30" pos:end="291:30">.</operator><name pos:start="291:31" pos:end="291:35">alloc</name></name> <operator pos:start="291:37" pos:end="291:37">&gt;</operator> <literal type="number" pos:start="291:39" pos:end="291:39">0</literal></expr>)</condition> <block pos:start="291:42" pos:end="301:13">{<block_content pos:start="295:17" pos:end="299:45">

                <comment type="block" pos:start="293:17" pos:end="293:94">/* Lambda unused here on purpose, we need to take psy's unscaled allocation */</comment>

                <expr_stmt pos:start="295:17" pos:end="297:90"><expr pos:start="295:17" pos:end="297:89"><name pos:start="295:17" pos:end="295:27">target_bits</name> <operator pos:start="295:29" pos:end="295:30">+=</operator> <name pos:start="295:32" pos:end="295:50"><name pos:start="295:32" pos:end="295:32">s</name><operator pos:start="295:33" pos:end="295:34">-&gt;</operator><name pos:start="295:35" pos:end="295:37">psy</name><operator pos:start="295:38" pos:end="295:38">.</operator><name pos:start="295:39" pos:end="295:44">bitres</name><operator pos:start="295:45" pos:end="295:45">.</operator><name pos:start="295:46" pos:end="295:50">alloc</name></name>

                    <operator pos:start="297:21" pos:end="297:21">*</operator> <operator pos:start="297:23" pos:end="297:23">(</operator><name pos:start="297:24" pos:end="297:32"><name pos:start="297:24" pos:end="297:24">s</name><operator pos:start="297:25" pos:end="297:26">-&gt;</operator><name pos:start="297:27" pos:end="297:32">lambda</name></name> <operator pos:start="297:34" pos:end="297:34">/</operator> <operator pos:start="297:36" pos:end="297:36">(</operator><ternary pos:start="297:37" pos:end="297:87"><condition pos:start="297:37" pos:end="297:59"><expr pos:start="297:37" pos:end="297:57"><name pos:start="297:37" pos:end="297:57"><name pos:start="297:37" pos:end="297:41">avctx</name><operator pos:start="297:42" pos:end="297:43">-&gt;</operator><name pos:start="297:44" pos:end="297:57">global_quality</name></name></expr> ?</condition><then pos:start="297:61" pos:end="297:81"> <expr pos:start="297:61" pos:end="297:81"><name pos:start="297:61" pos:end="297:81"><name pos:start="297:61" pos:end="297:65">avctx</name><operator pos:start="297:66" pos:end="297:67">-&gt;</operator><name pos:start="297:68" pos:end="297:81">global_quality</name></name></expr> </then><else pos:start="297:83" pos:end="297:87">: <expr pos:start="297:85" pos:end="297:87"><literal type="number" pos:start="297:85" pos:end="297:87">120</literal></expr></else></ternary><operator pos:start="297:88" pos:end="297:88">)</operator><operator pos:start="297:89" pos:end="297:89">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="299:17" pos:end="299:45"><expr pos:start="299:17" pos:end="299:44"><name pos:start="299:17" pos:end="299:35"><name pos:start="299:17" pos:end="299:17">s</name><operator pos:start="299:18" pos:end="299:19">-&gt;</operator><name pos:start="299:20" pos:end="299:22">psy</name><operator pos:start="299:23" pos:end="299:23">.</operator><name pos:start="299:24" pos:end="299:29">bitres</name><operator pos:start="299:30" pos:end="299:30">.</operator><name pos:start="299:31" pos:end="299:35">alloc</name></name> <operator pos:start="299:37" pos:end="299:38">/=</operator> <name pos:start="299:40" pos:end="299:44">chans</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:30"><expr pos:start="303:13" pos:end="303:29"><name pos:start="303:13" pos:end="303:23"><name pos:start="303:13" pos:end="303:13">s</name><operator pos:start="303:14" pos:end="303:15">-&gt;</operator><name pos:start="303:16" pos:end="303:23">cur_type</name></name> <operator pos:start="303:25" pos:end="303:25">=</operator> <name pos:start="303:27" pos:end="303:29">tag</name></expr>;</expr_stmt>

            <for pos:start="305:13" pos:end="315:13">for <control pos:start="305:17" pos:end="305:42">(<init pos:start="305:18" pos:end="305:24"><expr pos:start="305:18" pos:end="305:23"><name pos:start="305:18" pos:end="305:19">ch</name> <operator pos:start="305:21" pos:end="305:21">=</operator> <literal type="number" pos:start="305:23" pos:end="305:23">0</literal></expr>;</init> <condition pos:start="305:26" pos:end="305:36"><expr pos:start="305:26" pos:end="305:35"><name pos:start="305:26" pos:end="305:27">ch</name> <operator pos:start="305:29" pos:end="305:29">&lt;</operator> <name pos:start="305:31" pos:end="305:35">chans</name></expr>;</condition> <incr pos:start="305:38" pos:end="305:41"><expr pos:start="305:38" pos:end="305:41"><name pos:start="305:38" pos:end="305:39">ch</name><operator pos:start="305:40" pos:end="305:41">++</operator></expr></incr>)</control> <block pos:start="305:44" pos:end="315:13">{<block_content pos:start="307:17" pos:end="313:83">

                <expr_stmt pos:start="307:17" pos:end="307:47"><expr pos:start="307:17" pos:end="307:46"><name pos:start="307:17" pos:end="307:30"><name pos:start="307:17" pos:end="307:17">s</name><operator pos:start="307:18" pos:end="307:19">-&gt;</operator><name pos:start="307:20" pos:end="307:30">cur_channel</name></name> <operator pos:start="307:32" pos:end="307:32">=</operator> <name pos:start="307:34" pos:end="307:41">start_ch</name> <operator pos:start="307:43" pos:end="307:43">+</operator> <name pos:start="307:45" pos:end="307:46">ch</name></expr>;</expr_stmt>

                <if_stmt pos:start="309:17" pos:end="311:63"><if pos:start="309:17" pos:end="311:63">if <condition pos:start="309:20" pos:end="309:57">(<expr pos:start="309:21" pos:end="309:56"><name pos:start="309:21" pos:end="309:34"><name pos:start="309:21" pos:end="309:21">s</name><operator pos:start="309:22" pos:end="309:23">-&gt;</operator><name pos:start="309:24" pos:end="309:30">options</name><operator pos:start="309:31" pos:end="309:31">.</operator><name pos:start="309:32" pos:end="309:34">pns</name></name> <operator pos:start="309:36" pos:end="309:37">&amp;&amp;</operator> <name pos:start="309:39" pos:end="309:56"><name pos:start="309:39" pos:end="309:39">s</name><operator pos:start="309:40" pos:end="309:41">-&gt;</operator><name pos:start="309:42" pos:end="309:46">coder</name><operator pos:start="309:47" pos:end="309:48">-&gt;</operator><name pos:start="309:49" pos:end="309:56">mark_pns</name></name></expr>)</condition><block type="pseudo" pos:start="311:21" pos:end="311:63"><block_content pos:start="311:21" pos:end="311:63">

                    <expr_stmt pos:start="311:21" pos:end="311:63"><expr pos:start="311:21" pos:end="311:62"><call pos:start="311:21" pos:end="311:62"><name pos:start="311:21" pos:end="311:38"><name pos:start="311:21" pos:end="311:21">s</name><operator pos:start="311:22" pos:end="311:23">-&gt;</operator><name pos:start="311:24" pos:end="311:28">coder</name><operator pos:start="311:29" pos:end="311:30">-&gt;</operator><name pos:start="311:31" pos:end="311:38">mark_pns</name></name><argument_list pos:start="311:39" pos:end="311:62">(<argument pos:start="311:40" pos:end="311:40"><expr pos:start="311:40" pos:end="311:40"><name pos:start="311:40" pos:end="311:40">s</name></expr></argument>, <argument pos:start="311:43" pos:end="311:47"><expr pos:start="311:43" pos:end="311:47"><name pos:start="311:43" pos:end="311:47">avctx</name></expr></argument>, <argument pos:start="311:50" pos:end="311:61"><expr pos:start="311:50" pos:end="311:61"><operator pos:start="311:50" pos:end="311:50">&amp;</operator><name pos:start="311:51" pos:end="311:61"><name pos:start="311:51" pos:end="311:53">cpe</name><operator pos:start="311:54" pos:end="311:55">-&gt;</operator><name pos:start="311:56" pos:end="311:57">ch</name><index pos:start="311:58" pos:end="311:61">[<expr pos:start="311:59" pos:end="311:60"><name pos:start="311:59" pos:end="311:60">ch</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="313:17" pos:end="313:83"><expr pos:start="313:17" pos:end="313:82"><call pos:start="313:17" pos:end="313:82"><name pos:start="313:17" pos:end="313:47"><name pos:start="313:17" pos:end="313:17">s</name><operator pos:start="313:18" pos:end="313:19">-&gt;</operator><name pos:start="313:20" pos:end="313:24">coder</name><operator pos:start="313:25" pos:end="313:26">-&gt;</operator><name pos:start="313:27" pos:end="313:47">search_for_quantizers</name></name><argument_list pos:start="313:48" pos:end="313:82">(<argument pos:start="313:49" pos:end="313:53"><expr pos:start="313:49" pos:end="313:53"><name pos:start="313:49" pos:end="313:53">avctx</name></expr></argument>, <argument pos:start="313:56" pos:end="313:56"><expr pos:start="313:56" pos:end="313:56"><name pos:start="313:56" pos:end="313:56">s</name></expr></argument>, <argument pos:start="313:59" pos:end="313:70"><expr pos:start="313:59" pos:end="313:70"><operator pos:start="313:59" pos:end="313:59">&amp;</operator><name pos:start="313:60" pos:end="313:70"><name pos:start="313:60" pos:end="313:62">cpe</name><operator pos:start="313:63" pos:end="313:64">-&gt;</operator><name pos:start="313:65" pos:end="313:66">ch</name><index pos:start="313:67" pos:end="313:70">[<expr pos:start="313:68" pos:end="313:69"><name pos:start="313:68" pos:end="313:69">ch</name></expr>]</index></name></expr></argument>, <argument pos:start="313:73" pos:end="313:81"><expr pos:start="313:73" pos:end="313:81"><name pos:start="313:73" pos:end="313:81"><name pos:start="313:73" pos:end="313:73">s</name><operator pos:start="313:74" pos:end="313:75">-&gt;</operator><name pos:start="313:76" pos:end="313:81">lambda</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="317:13" pos:end="339:13"><if pos:start="317:13" pos:end="339:13">if <condition pos:start="317:16" pos:end="321:62">(<expr pos:start="317:17" pos:end="321:61"><name pos:start="317:17" pos:end="317:21">chans</name> <operator pos:start="317:23" pos:end="317:23">&gt;</operator> <literal type="number" pos:start="317:25" pos:end="317:25">1</literal>

                <operator pos:start="319:17" pos:end="319:18">&amp;&amp;</operator> <name pos:start="319:20" pos:end="319:24"><name pos:start="319:20" pos:end="319:21">wi</name><index pos:start="319:22" pos:end="319:24">[<expr pos:start="319:23" pos:end="319:23"><literal type="number" pos:start="319:23" pos:end="319:23">0</literal></expr>]</index></name><operator pos:start="319:25" pos:end="319:25">.</operator><name pos:start="319:26" pos:end="319:39"><name pos:start="319:26" pos:end="319:36">window_type</name><index pos:start="319:37" pos:end="319:39">[<expr pos:start="319:38" pos:end="319:38"><literal type="number" pos:start="319:38" pos:end="319:38">0</literal></expr>]</index></name> <operator pos:start="319:41" pos:end="319:42">==</operator> <name pos:start="319:44" pos:end="319:48"><name pos:start="319:44" pos:end="319:45">wi</name><index pos:start="319:46" pos:end="319:48">[<expr pos:start="319:47" pos:end="319:47"><literal type="number" pos:start="319:47" pos:end="319:47">1</literal></expr>]</index></name><operator pos:start="319:49" pos:end="319:49">.</operator><name pos:start="319:50" pos:end="319:63"><name pos:start="319:50" pos:end="319:60">window_type</name><index pos:start="319:61" pos:end="319:63">[<expr pos:start="319:62" pos:end="319:62"><literal type="number" pos:start="319:62" pos:end="319:62">0</literal></expr>]</index></name>

                <operator pos:start="321:17" pos:end="321:18">&amp;&amp;</operator> <name pos:start="321:20" pos:end="321:24"><name pos:start="321:20" pos:end="321:21">wi</name><index pos:start="321:22" pos:end="321:24">[<expr pos:start="321:23" pos:end="321:23"><literal type="number" pos:start="321:23" pos:end="321:23">0</literal></expr>]</index></name><operator pos:start="321:25" pos:end="321:25">.</operator><name pos:start="321:26" pos:end="321:37">window_shape</name>   <operator pos:start="321:41" pos:end="321:42">==</operator> <name pos:start="321:44" pos:end="321:48"><name pos:start="321:44" pos:end="321:45">wi</name><index pos:start="321:46" pos:end="321:48">[<expr pos:start="321:47" pos:end="321:47"><literal type="number" pos:start="321:47" pos:end="321:47">1</literal></expr>]</index></name><operator pos:start="321:49" pos:end="321:49">.</operator><name pos:start="321:50" pos:end="321:61">window_shape</name></expr>)</condition> <block pos:start="321:64" pos:end="339:13">{<block_content pos:start="325:17" pos:end="337:17">



                <expr_stmt pos:start="325:17" pos:end="325:39"><expr pos:start="325:17" pos:end="325:38"><name pos:start="325:17" pos:end="325:34"><name pos:start="325:17" pos:end="325:19">cpe</name><operator pos:start="325:20" pos:end="325:21">-&gt;</operator><name pos:start="325:22" pos:end="325:34">common_window</name></name> <operator pos:start="325:36" pos:end="325:36">=</operator> <literal type="number" pos:start="325:38" pos:end="325:38">1</literal></expr>;</expr_stmt>

                <for pos:start="327:17" pos:end="337:17">for <control pos:start="327:21" pos:end="327:55">(<init pos:start="327:22" pos:end="327:27"><expr pos:start="327:22" pos:end="327:26"><name pos:start="327:22" pos:end="327:22">w</name> <operator pos:start="327:24" pos:end="327:24">=</operator> <literal type="number" pos:start="327:26" pos:end="327:26">0</literal></expr>;</init> <condition pos:start="327:29" pos:end="327:50"><expr pos:start="327:29" pos:end="327:49"><name pos:start="327:29" pos:end="327:29">w</name> <operator pos:start="327:31" pos:end="327:31">&lt;</operator> <name pos:start="327:33" pos:end="327:37"><name pos:start="327:33" pos:end="327:34">wi</name><index pos:start="327:35" pos:end="327:37">[<expr pos:start="327:36" pos:end="327:36"><literal type="number" pos:start="327:36" pos:end="327:36">0</literal></expr>]</index></name><operator pos:start="327:38" pos:end="327:38">.</operator><name pos:start="327:39" pos:end="327:49">num_windows</name></expr>;</condition> <incr pos:start="327:52" pos:end="327:54"><expr pos:start="327:52" pos:end="327:54"><name pos:start="327:52" pos:end="327:52">w</name><operator pos:start="327:53" pos:end="327:54">++</operator></expr></incr>)</control> <block pos:start="327:57" pos:end="337:17">{<block_content pos:start="329:21" pos:end="335:21">

                    <if_stmt pos:start="329:21" pos:end="335:21"><if pos:start="329:21" pos:end="335:21">if <condition pos:start="329:24" pos:end="329:63">(<expr pos:start="329:25" pos:end="329:62"><name pos:start="329:25" pos:end="329:29"><name pos:start="329:25" pos:end="329:26">wi</name><index pos:start="329:27" pos:end="329:29">[<expr pos:start="329:28" pos:end="329:28"><literal type="number" pos:start="329:28" pos:end="329:28">0</literal></expr>]</index></name><operator pos:start="329:30" pos:end="329:30">.</operator><name pos:start="329:31" pos:end="329:41"><name pos:start="329:31" pos:end="329:38">grouping</name><index pos:start="329:39" pos:end="329:41">[<expr pos:start="329:40" pos:end="329:40"><name pos:start="329:40" pos:end="329:40">w</name></expr>]</index></name> <operator pos:start="329:43" pos:end="329:44">!=</operator> <name pos:start="329:46" pos:end="329:50"><name pos:start="329:46" pos:end="329:47">wi</name><index pos:start="329:48" pos:end="329:50">[<expr pos:start="329:49" pos:end="329:49"><literal type="number" pos:start="329:49" pos:end="329:49">1</literal></expr>]</index></name><operator pos:start="329:51" pos:end="329:51">.</operator><name pos:start="329:52" pos:end="329:62"><name pos:start="329:52" pos:end="329:59">grouping</name><index pos:start="329:60" pos:end="329:62">[<expr pos:start="329:61" pos:end="329:61"><name pos:start="329:61" pos:end="329:61">w</name></expr>]</index></name></expr>)</condition> <block pos:start="329:65" pos:end="335:21">{<block_content pos:start="331:25" pos:end="333:30">

                        <expr_stmt pos:start="331:25" pos:end="331:47"><expr pos:start="331:25" pos:end="331:46"><name pos:start="331:25" pos:end="331:42"><name pos:start="331:25" pos:end="331:27">cpe</name><operator pos:start="331:28" pos:end="331:29">-&gt;</operator><name pos:start="331:30" pos:end="331:42">common_window</name></name> <operator pos:start="331:44" pos:end="331:44">=</operator> <literal type="number" pos:start="331:46" pos:end="331:46">0</literal></expr>;</expr_stmt>

                        <break pos:start="333:25" pos:end="333:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <for pos:start="341:13" pos:end="363:13">for <control pos:start="341:17" pos:end="341:42">(<init pos:start="341:18" pos:end="341:24"><expr pos:start="341:18" pos:end="341:23"><name pos:start="341:18" pos:end="341:19">ch</name> <operator pos:start="341:21" pos:end="341:21">=</operator> <literal type="number" pos:start="341:23" pos:end="341:23">0</literal></expr>;</init> <condition pos:start="341:26" pos:end="341:36"><expr pos:start="341:26" pos:end="341:35"><name pos:start="341:26" pos:end="341:27">ch</name> <operator pos:start="341:29" pos:end="341:29">&lt;</operator> <name pos:start="341:31" pos:end="341:35">chans</name></expr>;</condition> <incr pos:start="341:38" pos:end="341:41"><expr pos:start="341:38" pos:end="341:41"><name pos:start="341:38" pos:end="341:39">ch</name><operator pos:start="341:40" pos:end="341:41">++</operator></expr></incr>)</control> <block pos:start="341:44" pos:end="363:13">{<block_content pos:start="343:17" pos:end="361:60"> <comment type="block" pos:start="341:46" pos:end="341:62">/* TNS and PNS */</comment>

                <expr_stmt pos:start="343:17" pos:end="343:35"><expr pos:start="343:17" pos:end="343:34"><name pos:start="343:17" pos:end="343:19">sce</name> <operator pos:start="343:21" pos:end="343:21">=</operator> <operator pos:start="343:23" pos:end="343:23">&amp;</operator><name pos:start="343:24" pos:end="343:34"><name pos:start="343:24" pos:end="343:26">cpe</name><operator pos:start="343:27" pos:end="343:28">-&gt;</operator><name pos:start="343:29" pos:end="343:30">ch</name><index pos:start="343:31" pos:end="343:34">[<expr pos:start="343:32" pos:end="343:33"><name pos:start="343:32" pos:end="343:33">ch</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="345:17" pos:end="345:47"><expr pos:start="345:17" pos:end="345:46"><name pos:start="345:17" pos:end="345:30"><name pos:start="345:17" pos:end="345:17">s</name><operator pos:start="345:18" pos:end="345:19">-&gt;</operator><name pos:start="345:20" pos:end="345:30">cur_channel</name></name> <operator pos:start="345:32" pos:end="345:32">=</operator> <name pos:start="345:34" pos:end="345:41">start_ch</name> <operator pos:start="345:43" pos:end="345:43">+</operator> <name pos:start="345:45" pos:end="345:46">ch</name></expr>;</expr_stmt>

                <if_stmt pos:start="347:17" pos:end="349:53"><if pos:start="347:17" pos:end="349:53">if <condition pos:start="347:20" pos:end="347:63">(<expr pos:start="347:21" pos:end="347:62"><name pos:start="347:21" pos:end="347:34"><name pos:start="347:21" pos:end="347:21">s</name><operator pos:start="347:22" pos:end="347:23">-&gt;</operator><name pos:start="347:24" pos:end="347:30">options</name><operator pos:start="347:31" pos:end="347:31">.</operator><name pos:start="347:32" pos:end="347:34">tns</name></name> <operator pos:start="347:36" pos:end="347:37">&amp;&amp;</operator> <name pos:start="347:39" pos:end="347:62"><name pos:start="347:39" pos:end="347:39">s</name><operator pos:start="347:40" pos:end="347:41">-&gt;</operator><name pos:start="347:42" pos:end="347:46">coder</name><operator pos:start="347:47" pos:end="347:48">-&gt;</operator><name pos:start="347:49" pos:end="347:62">search_for_tns</name></name></expr>)</condition><block type="pseudo" pos:start="349:21" pos:end="349:53"><block_content pos:start="349:21" pos:end="349:53">

                    <expr_stmt pos:start="349:21" pos:end="349:53"><expr pos:start="349:21" pos:end="349:52"><call pos:start="349:21" pos:end="349:52"><name pos:start="349:21" pos:end="349:44"><name pos:start="349:21" pos:end="349:21">s</name><operator pos:start="349:22" pos:end="349:23">-&gt;</operator><name pos:start="349:24" pos:end="349:28">coder</name><operator pos:start="349:29" pos:end="349:30">-&gt;</operator><name pos:start="349:31" pos:end="349:44">search_for_tns</name></name><argument_list pos:start="349:45" pos:end="349:52">(<argument pos:start="349:46" pos:end="349:46"><expr pos:start="349:46" pos:end="349:46"><name pos:start="349:46" pos:end="349:46">s</name></expr></argument>, <argument pos:start="349:49" pos:end="349:51"><expr pos:start="349:49" pos:end="349:51"><name pos:start="349:49" pos:end="349:51">sce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="351:17" pos:end="353:53"><if pos:start="351:17" pos:end="353:53">if <condition pos:start="351:20" pos:end="351:63">(<expr pos:start="351:21" pos:end="351:62"><name pos:start="351:21" pos:end="351:34"><name pos:start="351:21" pos:end="351:21">s</name><operator pos:start="351:22" pos:end="351:23">-&gt;</operator><name pos:start="351:24" pos:end="351:30">options</name><operator pos:start="351:31" pos:end="351:31">.</operator><name pos:start="351:32" pos:end="351:34">tns</name></name> <operator pos:start="351:36" pos:end="351:37">&amp;&amp;</operator> <name pos:start="351:39" pos:end="351:62"><name pos:start="351:39" pos:end="351:39">s</name><operator pos:start="351:40" pos:end="351:41">-&gt;</operator><name pos:start="351:42" pos:end="351:46">coder</name><operator pos:start="351:47" pos:end="351:48">-&gt;</operator><name pos:start="351:49" pos:end="351:62">apply_tns_filt</name></name></expr>)</condition><block type="pseudo" pos:start="353:21" pos:end="353:53"><block_content pos:start="353:21" pos:end="353:53">

                    <expr_stmt pos:start="353:21" pos:end="353:53"><expr pos:start="353:21" pos:end="353:52"><call pos:start="353:21" pos:end="353:52"><name pos:start="353:21" pos:end="353:44"><name pos:start="353:21" pos:end="353:21">s</name><operator pos:start="353:22" pos:end="353:23">-&gt;</operator><name pos:start="353:24" pos:end="353:28">coder</name><operator pos:start="353:29" pos:end="353:30">-&gt;</operator><name pos:start="353:31" pos:end="353:44">apply_tns_filt</name></name><argument_list pos:start="353:45" pos:end="353:52">(<argument pos:start="353:46" pos:end="353:46"><expr pos:start="353:46" pos:end="353:46"><name pos:start="353:46" pos:end="353:46">s</name></expr></argument>, <argument pos:start="353:49" pos:end="353:51"><expr pos:start="353:49" pos:end="353:51"><name pos:start="353:49" pos:end="353:51">sce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="355:17" pos:end="357:33"><if pos:start="355:17" pos:end="357:33">if <condition pos:start="355:20" pos:end="355:37">(<expr pos:start="355:21" pos:end="355:36"><name pos:start="355:21" pos:end="355:36"><name pos:start="355:21" pos:end="355:23">sce</name><operator pos:start="355:24" pos:end="355:25">-&gt;</operator><name pos:start="355:26" pos:end="355:28">tns</name><operator pos:start="355:29" pos:end="355:29">.</operator><name pos:start="355:30" pos:end="355:36">present</name></name></expr>)</condition><block type="pseudo" pos:start="357:21" pos:end="357:33"><block_content pos:start="357:21" pos:end="357:33">

                    <expr_stmt pos:start="357:21" pos:end="357:33"><expr pos:start="357:21" pos:end="357:32"><name pos:start="357:21" pos:end="357:28">tns_mode</name> <operator pos:start="357:30" pos:end="357:30">=</operator> <literal type="number" pos:start="357:32" pos:end="357:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="359:17" pos:end="361:60"><if pos:start="359:17" pos:end="361:60">if <condition pos:start="359:20" pos:end="359:63">(<expr pos:start="359:21" pos:end="359:62"><name pos:start="359:21" pos:end="359:34"><name pos:start="359:21" pos:end="359:21">s</name><operator pos:start="359:22" pos:end="359:23">-&gt;</operator><name pos:start="359:24" pos:end="359:30">options</name><operator pos:start="359:31" pos:end="359:31">.</operator><name pos:start="359:32" pos:end="359:34">pns</name></name> <operator pos:start="359:36" pos:end="359:37">&amp;&amp;</operator> <name pos:start="359:39" pos:end="359:62"><name pos:start="359:39" pos:end="359:39">s</name><operator pos:start="359:40" pos:end="359:41">-&gt;</operator><name pos:start="359:42" pos:end="359:46">coder</name><operator pos:start="359:47" pos:end="359:48">-&gt;</operator><name pos:start="359:49" pos:end="359:62">search_for_pns</name></name></expr>)</condition><block type="pseudo" pos:start="361:21" pos:end="361:60"><block_content pos:start="361:21" pos:end="361:60">

                    <expr_stmt pos:start="361:21" pos:end="361:60"><expr pos:start="361:21" pos:end="361:59"><call pos:start="361:21" pos:end="361:59"><name pos:start="361:21" pos:end="361:44"><name pos:start="361:21" pos:end="361:21">s</name><operator pos:start="361:22" pos:end="361:23">-&gt;</operator><name pos:start="361:24" pos:end="361:28">coder</name><operator pos:start="361:29" pos:end="361:30">-&gt;</operator><name pos:start="361:31" pos:end="361:44">search_for_pns</name></name><argument_list pos:start="361:45" pos:end="361:59">(<argument pos:start="361:46" pos:end="361:46"><expr pos:start="361:46" pos:end="361:46"><name pos:start="361:46" pos:end="361:46">s</name></expr></argument>, <argument pos:start="361:49" pos:end="361:53"><expr pos:start="361:49" pos:end="361:53"><name pos:start="361:49" pos:end="361:53">avctx</name></expr></argument>, <argument pos:start="361:56" pos:end="361:58"><expr pos:start="361:56" pos:end="361:58"><name pos:start="361:56" pos:end="361:58">sce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="365:13" pos:end="365:38"><expr pos:start="365:13" pos:end="365:37"><name pos:start="365:13" pos:end="365:26"><name pos:start="365:13" pos:end="365:13">s</name><operator pos:start="365:14" pos:end="365:15">-&gt;</operator><name pos:start="365:16" pos:end="365:26">cur_channel</name></name> <operator pos:start="365:28" pos:end="365:28">=</operator> <name pos:start="365:30" pos:end="365:37">start_ch</name></expr>;</expr_stmt>

            <if_stmt pos:start="367:13" pos:end="377:13"><if pos:start="367:13" pos:end="377:13">if <condition pos:start="367:16" pos:end="367:44">(<expr pos:start="367:17" pos:end="367:43"><name pos:start="367:17" pos:end="367:43"><name pos:start="367:17" pos:end="367:17">s</name><operator pos:start="367:18" pos:end="367:19">-&gt;</operator><name pos:start="367:20" pos:end="367:26">options</name><operator pos:start="367:27" pos:end="367:27">.</operator><name pos:start="367:28" pos:end="367:43">intensity_stereo</name></name></expr>)</condition> <block pos:start="367:46" pos:end="377:13">{<block_content pos:start="369:17" pos:end="375:44"> <comment type="block" pos:start="367:48" pos:end="367:69">/* Intensity Stereo */</comment>

                <if_stmt pos:start="369:17" pos:end="371:59"><if pos:start="369:17" pos:end="371:59">if <condition pos:start="369:20" pos:end="369:44">(<expr pos:start="369:21" pos:end="369:43"><name pos:start="369:21" pos:end="369:43"><name pos:start="369:21" pos:end="369:21">s</name><operator pos:start="369:22" pos:end="369:23">-&gt;</operator><name pos:start="369:24" pos:end="369:28">coder</name><operator pos:start="369:29" pos:end="369:30">-&gt;</operator><name pos:start="369:31" pos:end="369:43">search_for_is</name></name></expr>)</condition><block type="pseudo" pos:start="371:21" pos:end="371:59"><block_content pos:start="371:21" pos:end="371:59">

                    <expr_stmt pos:start="371:21" pos:end="371:59"><expr pos:start="371:21" pos:end="371:58"><call pos:start="371:21" pos:end="371:58"><name pos:start="371:21" pos:end="371:43"><name pos:start="371:21" pos:end="371:21">s</name><operator pos:start="371:22" pos:end="371:23">-&gt;</operator><name pos:start="371:24" pos:end="371:28">coder</name><operator pos:start="371:29" pos:end="371:30">-&gt;</operator><name pos:start="371:31" pos:end="371:43">search_for_is</name></name><argument_list pos:start="371:44" pos:end="371:58">(<argument pos:start="371:45" pos:end="371:45"><expr pos:start="371:45" pos:end="371:45"><name pos:start="371:45" pos:end="371:45">s</name></expr></argument>, <argument pos:start="371:48" pos:end="371:52"><expr pos:start="371:48" pos:end="371:52"><name pos:start="371:48" pos:end="371:52">avctx</name></expr></argument>, <argument pos:start="371:55" pos:end="371:57"><expr pos:start="371:55" pos:end="371:57"><name pos:start="371:55" pos:end="371:57">cpe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="373:17" pos:end="373:46"><if pos:start="373:17" pos:end="373:46">if <condition pos:start="373:20" pos:end="373:33">(<expr pos:start="373:21" pos:end="373:32"><name pos:start="373:21" pos:end="373:32"><name pos:start="373:21" pos:end="373:23">cpe</name><operator pos:start="373:24" pos:end="373:25">-&gt;</operator><name pos:start="373:26" pos:end="373:32">is_mode</name></name></expr>)</condition><block type="pseudo" pos:start="373:35" pos:end="373:46"><block_content pos:start="373:35" pos:end="373:46"> <expr_stmt pos:start="373:35" pos:end="373:46"><expr pos:start="373:35" pos:end="373:45"><name pos:start="373:35" pos:end="373:41">is_mode</name> <operator pos:start="373:43" pos:end="373:43">=</operator> <literal type="number" pos:start="373:45" pos:end="373:45">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="375:17" pos:end="375:44"><expr pos:start="375:17" pos:end="375:43"><call pos:start="375:17" pos:end="375:43"><name pos:start="375:17" pos:end="375:38">apply_intensity_stereo</name><argument_list pos:start="375:39" pos:end="375:43">(<argument pos:start="375:40" pos:end="375:42"><expr pos:start="375:40" pos:end="375:42"><name pos:start="375:40" pos:end="375:42">cpe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="379:13" pos:end="413:13"><if pos:start="379:13" pos:end="413:13">if <condition pos:start="379:16" pos:end="379:32">(<expr pos:start="379:17" pos:end="379:31"><name pos:start="379:17" pos:end="379:31"><name pos:start="379:17" pos:end="379:17">s</name><operator pos:start="379:18" pos:end="379:19">-&gt;</operator><name pos:start="379:20" pos:end="379:26">options</name><operator pos:start="379:27" pos:end="379:27">.</operator><name pos:start="379:28" pos:end="379:31">pred</name></name></expr>)</condition> <block pos:start="379:34" pos:end="413:13">{<block_content pos:start="381:17" pos:end="411:42"> <comment type="block" pos:start="379:36" pos:end="379:51">/* Prediction */</comment>

                <for pos:start="381:17" pos:end="393:17">for <control pos:start="381:21" pos:end="381:46">(<init pos:start="381:22" pos:end="381:28"><expr pos:start="381:22" pos:end="381:27"><name pos:start="381:22" pos:end="381:23">ch</name> <operator pos:start="381:25" pos:end="381:25">=</operator> <literal type="number" pos:start="381:27" pos:end="381:27">0</literal></expr>;</init> <condition pos:start="381:30" pos:end="381:40"><expr pos:start="381:30" pos:end="381:39"><name pos:start="381:30" pos:end="381:31">ch</name> <operator pos:start="381:33" pos:end="381:33">&lt;</operator> <name pos:start="381:35" pos:end="381:39">chans</name></expr>;</condition> <incr pos:start="381:42" pos:end="381:45"><expr pos:start="381:42" pos:end="381:45"><name pos:start="381:42" pos:end="381:43">ch</name><operator pos:start="381:44" pos:end="381:45">++</operator></expr></incr>)</control> <block pos:start="381:48" pos:end="393:17">{<block_content pos:start="383:21" pos:end="391:73">

                    <expr_stmt pos:start="383:21" pos:end="383:39"><expr pos:start="383:21" pos:end="383:38"><name pos:start="383:21" pos:end="383:23">sce</name> <operator pos:start="383:25" pos:end="383:25">=</operator> <operator pos:start="383:27" pos:end="383:27">&amp;</operator><name pos:start="383:28" pos:end="383:38"><name pos:start="383:28" pos:end="383:30">cpe</name><operator pos:start="383:31" pos:end="383:32">-&gt;</operator><name pos:start="383:33" pos:end="383:34">ch</name><index pos:start="383:35" pos:end="383:38">[<expr pos:start="383:36" pos:end="383:37"><name pos:start="383:36" pos:end="383:37">ch</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="385:21" pos:end="385:51"><expr pos:start="385:21" pos:end="385:50"><name pos:start="385:21" pos:end="385:34"><name pos:start="385:21" pos:end="385:21">s</name><operator pos:start="385:22" pos:end="385:23">-&gt;</operator><name pos:start="385:24" pos:end="385:34">cur_channel</name></name> <operator pos:start="385:36" pos:end="385:36">=</operator> <name pos:start="385:38" pos:end="385:45">start_ch</name> <operator pos:start="385:47" pos:end="385:47">+</operator> <name pos:start="385:49" pos:end="385:50">ch</name></expr>;</expr_stmt>

                    <if_stmt pos:start="387:21" pos:end="389:58"><if pos:start="387:21" pos:end="389:58">if <condition pos:start="387:24" pos:end="387:69">(<expr pos:start="387:25" pos:end="387:68"><name pos:start="387:25" pos:end="387:39"><name pos:start="387:25" pos:end="387:25">s</name><operator pos:start="387:26" pos:end="387:27">-&gt;</operator><name pos:start="387:28" pos:end="387:34">options</name><operator pos:start="387:35" pos:end="387:35">.</operator><name pos:start="387:36" pos:end="387:39">pred</name></name> <operator pos:start="387:41" pos:end="387:42">&amp;&amp;</operator> <name pos:start="387:44" pos:end="387:68"><name pos:start="387:44" pos:end="387:44">s</name><operator pos:start="387:45" pos:end="387:46">-&gt;</operator><name pos:start="387:47" pos:end="387:51">coder</name><operator pos:start="387:52" pos:end="387:53">-&gt;</operator><name pos:start="387:54" pos:end="387:68">search_for_pred</name></name></expr>)</condition><block type="pseudo" pos:start="389:25" pos:end="389:58"><block_content pos:start="389:25" pos:end="389:58">

                        <expr_stmt pos:start="389:25" pos:end="389:58"><expr pos:start="389:25" pos:end="389:57"><call pos:start="389:25" pos:end="389:57"><name pos:start="389:25" pos:end="389:49"><name pos:start="389:25" pos:end="389:25">s</name><operator pos:start="389:26" pos:end="389:27">-&gt;</operator><name pos:start="389:28" pos:end="389:32">coder</name><operator pos:start="389:33" pos:end="389:34">-&gt;</operator><name pos:start="389:35" pos:end="389:49">search_for_pred</name></name><argument_list pos:start="389:50" pos:end="389:57">(<argument pos:start="389:51" pos:end="389:51"><expr pos:start="389:51" pos:end="389:51"><name pos:start="389:51" pos:end="389:51">s</name></expr></argument>, <argument pos:start="389:54" pos:end="389:56"><expr pos:start="389:54" pos:end="389:56"><name pos:start="389:54" pos:end="389:56">sce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="391:21" pos:end="391:73"><if pos:start="391:21" pos:end="391:73">if <condition pos:start="391:24" pos:end="391:58">(<expr pos:start="391:25" pos:end="391:57"><name pos:start="391:25" pos:end="391:35"><name pos:start="391:25" pos:end="391:27">cpe</name><operator pos:start="391:28" pos:end="391:29">-&gt;</operator><name pos:start="391:30" pos:end="391:31">ch</name><index pos:start="391:32" pos:end="391:35">[<expr pos:start="391:33" pos:end="391:34"><name pos:start="391:33" pos:end="391:34">ch</name></expr>]</index></name><operator pos:start="391:36" pos:end="391:36">.</operator><name pos:start="391:37" pos:end="391:57"><name pos:start="391:37" pos:end="391:39">ics</name><operator pos:start="391:40" pos:end="391:40">.</operator><name pos:start="391:41" pos:end="391:57">predictor_present</name></name></expr>)</condition><block type="pseudo" pos:start="391:60" pos:end="391:73"><block_content pos:start="391:60" pos:end="391:73"> <expr_stmt pos:start="391:60" pos:end="391:73"><expr pos:start="391:60" pos:end="391:72"><name pos:start="391:60" pos:end="391:68">pred_mode</name> <operator pos:start="391:70" pos:end="391:70">=</operator> <literal type="number" pos:start="391:72" pos:end="391:72">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="395:17" pos:end="397:57"><if pos:start="395:17" pos:end="397:57">if <condition pos:start="395:20" pos:end="395:49">(<expr pos:start="395:21" pos:end="395:48"><name pos:start="395:21" pos:end="395:48"><name pos:start="395:21" pos:end="395:21">s</name><operator pos:start="395:22" pos:end="395:23">-&gt;</operator><name pos:start="395:24" pos:end="395:28">coder</name><operator pos:start="395:29" pos:end="395:30">-&gt;</operator><name pos:start="395:31" pos:end="395:48">adjust_common_pred</name></name></expr>)</condition><block type="pseudo" pos:start="397:21" pos:end="397:57"><block_content pos:start="397:21" pos:end="397:57">

                    <expr_stmt pos:start="397:21" pos:end="397:57"><expr pos:start="397:21" pos:end="397:56"><call pos:start="397:21" pos:end="397:56"><name pos:start="397:21" pos:end="397:48"><name pos:start="397:21" pos:end="397:21">s</name><operator pos:start="397:22" pos:end="397:23">-&gt;</operator><name pos:start="397:24" pos:end="397:28">coder</name><operator pos:start="397:29" pos:end="397:30">-&gt;</operator><name pos:start="397:31" pos:end="397:48">adjust_common_pred</name></name><argument_list pos:start="397:49" pos:end="397:56">(<argument pos:start="397:50" pos:end="397:50"><expr pos:start="397:50" pos:end="397:50"><name pos:start="397:50" pos:end="397:50">s</name></expr></argument>, <argument pos:start="397:53" pos:end="397:55"><expr pos:start="397:53" pos:end="397:55"><name pos:start="397:53" pos:end="397:55">cpe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <for pos:start="399:17" pos:end="409:17">for <control pos:start="399:21" pos:end="399:46">(<init pos:start="399:22" pos:end="399:28"><expr pos:start="399:22" pos:end="399:27"><name pos:start="399:22" pos:end="399:23">ch</name> <operator pos:start="399:25" pos:end="399:25">=</operator> <literal type="number" pos:start="399:27" pos:end="399:27">0</literal></expr>;</init> <condition pos:start="399:30" pos:end="399:40"><expr pos:start="399:30" pos:end="399:39"><name pos:start="399:30" pos:end="399:31">ch</name> <operator pos:start="399:33" pos:end="399:33">&lt;</operator> <name pos:start="399:35" pos:end="399:39">chans</name></expr>;</condition> <incr pos:start="399:42" pos:end="399:45"><expr pos:start="399:42" pos:end="399:45"><name pos:start="399:42" pos:end="399:43">ch</name><operator pos:start="399:44" pos:end="399:45">++</operator></expr></incr>)</control> <block pos:start="399:48" pos:end="409:17">{<block_content pos:start="401:21" pos:end="407:58">

                    <expr_stmt pos:start="401:21" pos:end="401:39"><expr pos:start="401:21" pos:end="401:38"><name pos:start="401:21" pos:end="401:23">sce</name> <operator pos:start="401:25" pos:end="401:25">=</operator> <operator pos:start="401:27" pos:end="401:27">&amp;</operator><name pos:start="401:28" pos:end="401:38"><name pos:start="401:28" pos:end="401:30">cpe</name><operator pos:start="401:31" pos:end="401:32">-&gt;</operator><name pos:start="401:33" pos:end="401:34">ch</name><index pos:start="401:35" pos:end="401:38">[<expr pos:start="401:36" pos:end="401:37"><name pos:start="401:36" pos:end="401:37">ch</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="403:21" pos:end="403:51"><expr pos:start="403:21" pos:end="403:50"><name pos:start="403:21" pos:end="403:34"><name pos:start="403:21" pos:end="403:21">s</name><operator pos:start="403:22" pos:end="403:23">-&gt;</operator><name pos:start="403:24" pos:end="403:34">cur_channel</name></name> <operator pos:start="403:36" pos:end="403:36">=</operator> <name pos:start="403:38" pos:end="403:45">start_ch</name> <operator pos:start="403:47" pos:end="403:47">+</operator> <name pos:start="403:49" pos:end="403:50">ch</name></expr>;</expr_stmt>

                    <if_stmt pos:start="405:21" pos:end="407:58"><if pos:start="405:21" pos:end="407:58">if <condition pos:start="405:24" pos:end="405:69">(<expr pos:start="405:25" pos:end="405:68"><name pos:start="405:25" pos:end="405:39"><name pos:start="405:25" pos:end="405:25">s</name><operator pos:start="405:26" pos:end="405:27">-&gt;</operator><name pos:start="405:28" pos:end="405:34">options</name><operator pos:start="405:35" pos:end="405:35">.</operator><name pos:start="405:36" pos:end="405:39">pred</name></name> <operator pos:start="405:41" pos:end="405:42">&amp;&amp;</operator> <name pos:start="405:44" pos:end="405:68"><name pos:start="405:44" pos:end="405:44">s</name><operator pos:start="405:45" pos:end="405:46">-&gt;</operator><name pos:start="405:47" pos:end="405:51">coder</name><operator pos:start="405:52" pos:end="405:53">-&gt;</operator><name pos:start="405:54" pos:end="405:68">apply_main_pred</name></name></expr>)</condition><block type="pseudo" pos:start="407:25" pos:end="407:58"><block_content pos:start="407:25" pos:end="407:58">

                        <expr_stmt pos:start="407:25" pos:end="407:58"><expr pos:start="407:25" pos:end="407:57"><call pos:start="407:25" pos:end="407:57"><name pos:start="407:25" pos:end="407:49"><name pos:start="407:25" pos:end="407:25">s</name><operator pos:start="407:26" pos:end="407:27">-&gt;</operator><name pos:start="407:28" pos:end="407:32">coder</name><operator pos:start="407:33" pos:end="407:34">-&gt;</operator><name pos:start="407:35" pos:end="407:49">apply_main_pred</name></name><argument_list pos:start="407:50" pos:end="407:57">(<argument pos:start="407:51" pos:end="407:51"><expr pos:start="407:51" pos:end="407:51"><name pos:start="407:51" pos:end="407:51">s</name></expr></argument>, <argument pos:start="407:54" pos:end="407:56"><expr pos:start="407:54" pos:end="407:56"><name pos:start="407:54" pos:end="407:56">sce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="411:17" pos:end="411:42"><expr pos:start="411:17" pos:end="411:41"><name pos:start="411:17" pos:end="411:30"><name pos:start="411:17" pos:end="411:17">s</name><operator pos:start="411:18" pos:end="411:19">-&gt;</operator><name pos:start="411:20" pos:end="411:30">cur_channel</name></name> <operator pos:start="411:32" pos:end="411:32">=</operator> <name pos:start="411:34" pos:end="411:41">start_ch</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="415:13" pos:end="427:13"><if pos:start="415:13" pos:end="427:13">if <condition pos:start="415:16" pos:end="415:36">(<expr pos:start="415:17" pos:end="415:35"><name pos:start="415:17" pos:end="415:35"><name pos:start="415:17" pos:end="415:17">s</name><operator pos:start="415:18" pos:end="415:19">-&gt;</operator><name pos:start="415:20" pos:end="415:26">options</name><operator pos:start="415:27" pos:end="415:27">.</operator><name pos:start="415:28" pos:end="415:35">mid_side</name></name></expr>)</condition> <block pos:start="415:38" pos:end="427:13">{<block_content pos:start="417:17" pos:end="425:43"> <comment type="block" pos:start="415:40" pos:end="415:60">/* Mid/Side stereo */</comment>

                <if_stmt pos:start="417:17" pos:end="423:66"><if pos:start="417:17" pos:end="419:52">if <condition pos:start="417:20" pos:end="417:73">(<expr pos:start="417:21" pos:end="417:72"><name pos:start="417:21" pos:end="417:39"><name pos:start="417:21" pos:end="417:21">s</name><operator pos:start="417:22" pos:end="417:23">-&gt;</operator><name pos:start="417:24" pos:end="417:30">options</name><operator pos:start="417:31" pos:end="417:31">.</operator><name pos:start="417:32" pos:end="417:39">mid_side</name></name> <operator pos:start="417:41" pos:end="417:42">==</operator> <operator pos:start="417:44" pos:end="417:44">-</operator><literal type="number" pos:start="417:45" pos:end="417:45">1</literal> <operator pos:start="417:47" pos:end="417:48">&amp;&amp;</operator> <name pos:start="417:50" pos:end="417:72"><name pos:start="417:50" pos:end="417:50">s</name><operator pos:start="417:51" pos:end="417:52">-&gt;</operator><name pos:start="417:53" pos:end="417:57">coder</name><operator pos:start="417:58" pos:end="417:59">-&gt;</operator><name pos:start="417:60" pos:end="417:72">search_for_ms</name></name></expr>)</condition><block type="pseudo" pos:start="419:21" pos:end="419:52"><block_content pos:start="419:21" pos:end="419:52">

                    <expr_stmt pos:start="419:21" pos:end="419:52"><expr pos:start="419:21" pos:end="419:51"><call pos:start="419:21" pos:end="419:51"><name pos:start="419:21" pos:end="419:43"><name pos:start="419:21" pos:end="419:21">s</name><operator pos:start="419:22" pos:end="419:23">-&gt;</operator><name pos:start="419:24" pos:end="419:28">coder</name><operator pos:start="419:29" pos:end="419:30">-&gt;</operator><name pos:start="419:31" pos:end="419:43">search_for_ms</name></name><argument_list pos:start="419:44" pos:end="419:51">(<argument pos:start="419:45" pos:end="419:45"><expr pos:start="419:45" pos:end="419:45"><name pos:start="419:45" pos:end="419:45">s</name></expr></argument>, <argument pos:start="419:48" pos:end="419:50"><expr pos:start="419:48" pos:end="419:50"><name pos:start="419:48" pos:end="419:50">cpe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="421:17" pos:end="423:66">else if <condition pos:start="421:25" pos:end="421:44">(<expr pos:start="421:26" pos:end="421:43"><name pos:start="421:26" pos:end="421:43"><name pos:start="421:26" pos:end="421:28">cpe</name><operator pos:start="421:29" pos:end="421:30">-&gt;</operator><name pos:start="421:31" pos:end="421:43">common_window</name></name></expr>)</condition><block type="pseudo" pos:start="423:21" pos:end="423:66"><block_content pos:start="423:21" pos:end="423:66">

                    <expr_stmt pos:start="423:21" pos:end="423:66"><expr pos:start="423:21" pos:end="423:65"><call pos:start="423:21" pos:end="423:65"><name pos:start="423:21" pos:end="423:26">memset</name><argument_list pos:start="423:27" pos:end="423:65">(<argument pos:start="423:28" pos:end="423:39"><expr pos:start="423:28" pos:end="423:39"><name pos:start="423:28" pos:end="423:39"><name pos:start="423:28" pos:end="423:30">cpe</name><operator pos:start="423:31" pos:end="423:32">-&gt;</operator><name pos:start="423:33" pos:end="423:39">ms_mask</name></name></expr></argument>, <argument pos:start="423:42" pos:end="423:42"><expr pos:start="423:42" pos:end="423:42"><literal type="number" pos:start="423:42" pos:end="423:42">1</literal></expr></argument>, <argument pos:start="423:45" pos:end="423:64"><expr pos:start="423:45" pos:end="423:64"><sizeof pos:start="423:45" pos:end="423:64">sizeof<argument_list pos:start="423:51" pos:end="423:64">(<argument pos:start="423:52" pos:end="423:63"><expr pos:start="423:52" pos:end="423:63"><name pos:start="423:52" pos:end="423:63"><name pos:start="423:52" pos:end="423:54">cpe</name><operator pos:start="423:55" pos:end="423:56">-&gt;</operator><name pos:start="423:57" pos:end="423:63">ms_mask</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="425:17" pos:end="425:43"><expr pos:start="425:17" pos:end="425:42"><call pos:start="425:17" pos:end="425:42"><name pos:start="425:17" pos:end="425:37">apply_mid_side_stereo</name><argument_list pos:start="425:38" pos:end="425:42">(<argument pos:start="425:39" pos:end="425:41"><expr pos:start="425:39" pos:end="425:41"><name pos:start="425:39" pos:end="425:41">cpe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="429:13" pos:end="429:49"><expr pos:start="429:13" pos:end="429:48"><call pos:start="429:13" pos:end="429:48"><name pos:start="429:13" pos:end="429:36">adjust_frame_information</name><argument_list pos:start="429:37" pos:end="429:48">(<argument pos:start="429:38" pos:end="429:40"><expr pos:start="429:38" pos:end="429:40"><name pos:start="429:38" pos:end="429:40">cpe</name></expr></argument>, <argument pos:start="429:43" pos:end="429:47"><expr pos:start="429:43" pos:end="429:47"><name pos:start="429:43" pos:end="429:47">chans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="431:13" pos:end="453:13"><if pos:start="431:13" pos:end="453:13">if <condition pos:start="431:16" pos:end="431:31">(<expr pos:start="431:17" pos:end="431:30"><name pos:start="431:17" pos:end="431:30"><name pos:start="431:17" pos:end="431:17">s</name><operator pos:start="431:18" pos:end="431:19">-&gt;</operator><name pos:start="431:20" pos:end="431:26">options</name><operator pos:start="431:27" pos:end="431:27">.</operator><name pos:start="431:28" pos:end="431:30">ltp</name></name></expr>)</condition> <block pos:start="431:33" pos:end="453:13">{<block_content pos:start="433:17" pos:end="451:56"> <comment type="block" pos:start="431:35" pos:end="431:43">/* LTP */</comment>

                <for pos:start="433:17" pos:end="445:17">for <control pos:start="433:21" pos:end="433:46">(<init pos:start="433:22" pos:end="433:28"><expr pos:start="433:22" pos:end="433:27"><name pos:start="433:22" pos:end="433:23">ch</name> <operator pos:start="433:25" pos:end="433:25">=</operator> <literal type="number" pos:start="433:27" pos:end="433:27">0</literal></expr>;</init> <condition pos:start="433:30" pos:end="433:40"><expr pos:start="433:30" pos:end="433:39"><name pos:start="433:30" pos:end="433:31">ch</name> <operator pos:start="433:33" pos:end="433:33">&lt;</operator> <name pos:start="433:35" pos:end="433:39">chans</name></expr>;</condition> <incr pos:start="433:42" pos:end="433:45"><expr pos:start="433:42" pos:end="433:45"><name pos:start="433:42" pos:end="433:43">ch</name><operator pos:start="433:44" pos:end="433:45">++</operator></expr></incr>)</control> <block pos:start="433:48" pos:end="445:17">{<block_content pos:start="435:21" pos:end="443:60">

                    <expr_stmt pos:start="435:21" pos:end="435:39"><expr pos:start="435:21" pos:end="435:38"><name pos:start="435:21" pos:end="435:23">sce</name> <operator pos:start="435:25" pos:end="435:25">=</operator> <operator pos:start="435:27" pos:end="435:27">&amp;</operator><name pos:start="435:28" pos:end="435:38"><name pos:start="435:28" pos:end="435:30">cpe</name><operator pos:start="435:31" pos:end="435:32">-&gt;</operator><name pos:start="435:33" pos:end="435:34">ch</name><index pos:start="435:35" pos:end="435:38">[<expr pos:start="435:36" pos:end="435:37"><name pos:start="435:36" pos:end="435:37">ch</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="437:21" pos:end="437:51"><expr pos:start="437:21" pos:end="437:50"><name pos:start="437:21" pos:end="437:34"><name pos:start="437:21" pos:end="437:21">s</name><operator pos:start="437:22" pos:end="437:23">-&gt;</operator><name pos:start="437:24" pos:end="437:34">cur_channel</name></name> <operator pos:start="437:36" pos:end="437:36">=</operator> <name pos:start="437:38" pos:end="437:45">start_ch</name> <operator pos:start="437:47" pos:end="437:47">+</operator> <name pos:start="437:49" pos:end="437:50">ch</name></expr>;</expr_stmt>

                    <if_stmt pos:start="439:21" pos:end="441:77"><if pos:start="439:21" pos:end="441:77">if <condition pos:start="439:24" pos:end="439:49">(<expr pos:start="439:25" pos:end="439:48"><name pos:start="439:25" pos:end="439:48"><name pos:start="439:25" pos:end="439:25">s</name><operator pos:start="439:26" pos:end="439:27">-&gt;</operator><name pos:start="439:28" pos:end="439:32">coder</name><operator pos:start="439:33" pos:end="439:34">-&gt;</operator><name pos:start="439:35" pos:end="439:48">search_for_ltp</name></name></expr>)</condition><block type="pseudo" pos:start="441:25" pos:end="441:77"><block_content pos:start="441:25" pos:end="441:77">

                        <expr_stmt pos:start="441:25" pos:end="441:77"><expr pos:start="441:25" pos:end="441:76"><call pos:start="441:25" pos:end="441:76"><name pos:start="441:25" pos:end="441:48"><name pos:start="441:25" pos:end="441:25">s</name><operator pos:start="441:26" pos:end="441:27">-&gt;</operator><name pos:start="441:28" pos:end="441:32">coder</name><operator pos:start="441:33" pos:end="441:34">-&gt;</operator><name pos:start="441:35" pos:end="441:48">search_for_ltp</name></name><argument_list pos:start="441:49" pos:end="441:76">(<argument pos:start="441:50" pos:end="441:50"><expr pos:start="441:50" pos:end="441:50"><name pos:start="441:50" pos:end="441:50">s</name></expr></argument>, <argument pos:start="441:53" pos:end="441:55"><expr pos:start="441:53" pos:end="441:55"><name pos:start="441:53" pos:end="441:55">sce</name></expr></argument>, <argument pos:start="441:58" pos:end="441:75"><expr pos:start="441:58" pos:end="441:75"><name pos:start="441:58" pos:end="441:75"><name pos:start="441:58" pos:end="441:60">cpe</name><operator pos:start="441:61" pos:end="441:62">-&gt;</operator><name pos:start="441:63" pos:end="441:75">common_window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="443:21" pos:end="443:60"><if pos:start="443:21" pos:end="443:60">if <condition pos:start="443:24" pos:end="443:45">(<expr pos:start="443:25" pos:end="443:44"><name pos:start="443:25" pos:end="443:44"><name pos:start="443:25" pos:end="443:27">sce</name><operator pos:start="443:28" pos:end="443:29">-&gt;</operator><name pos:start="443:30" pos:end="443:32">ics</name><operator pos:start="443:33" pos:end="443:33">.</operator><name pos:start="443:34" pos:end="443:36">ltp</name><operator pos:start="443:37" pos:end="443:37">.</operator><name pos:start="443:38" pos:end="443:44">present</name></name></expr>)</condition><block type="pseudo" pos:start="443:47" pos:end="443:60"><block_content pos:start="443:47" pos:end="443:60"> <expr_stmt pos:start="443:47" pos:end="443:60"><expr pos:start="443:47" pos:end="443:59"><name pos:start="443:47" pos:end="443:55">pred_mode</name> <operator pos:start="443:57" pos:end="443:57">=</operator> <literal type="number" pos:start="443:59" pos:end="443:59">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="447:17" pos:end="447:42"><expr pos:start="447:17" pos:end="447:41"><name pos:start="447:17" pos:end="447:30"><name pos:start="447:17" pos:end="447:17">s</name><operator pos:start="447:18" pos:end="447:19">-&gt;</operator><name pos:start="447:20" pos:end="447:30">cur_channel</name></name> <operator pos:start="447:32" pos:end="447:32">=</operator> <name pos:start="447:34" pos:end="447:41">start_ch</name></expr>;</expr_stmt>

                <if_stmt pos:start="449:17" pos:end="451:56"><if pos:start="449:17" pos:end="451:56">if <condition pos:start="449:20" pos:end="449:48">(<expr pos:start="449:21" pos:end="449:47"><name pos:start="449:21" pos:end="449:47"><name pos:start="449:21" pos:end="449:21">s</name><operator pos:start="449:22" pos:end="449:23">-&gt;</operator><name pos:start="449:24" pos:end="449:28">coder</name><operator pos:start="449:29" pos:end="449:30">-&gt;</operator><name pos:start="449:31" pos:end="449:47">adjust_common_ltp</name></name></expr>)</condition><block type="pseudo" pos:start="451:21" pos:end="451:56"><block_content pos:start="451:21" pos:end="451:56">

                    <expr_stmt pos:start="451:21" pos:end="451:56"><expr pos:start="451:21" pos:end="451:55"><call pos:start="451:21" pos:end="451:55"><name pos:start="451:21" pos:end="451:47"><name pos:start="451:21" pos:end="451:21">s</name><operator pos:start="451:22" pos:end="451:23">-&gt;</operator><name pos:start="451:24" pos:end="451:28">coder</name><operator pos:start="451:29" pos:end="451:30">-&gt;</operator><name pos:start="451:31" pos:end="451:47">adjust_common_ltp</name></name><argument_list pos:start="451:48" pos:end="451:55">(<argument pos:start="451:49" pos:end="451:49"><expr pos:start="451:49" pos:end="451:49"><name pos:start="451:49" pos:end="451:49">s</name></expr></argument>, <argument pos:start="451:52" pos:end="451:54"><expr pos:start="451:52" pos:end="451:54"><name pos:start="451:52" pos:end="451:54">cpe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="455:13" pos:end="477:13"><if pos:start="455:13" pos:end="477:13">if <condition pos:start="455:16" pos:end="455:27">(<expr pos:start="455:17" pos:end="455:26"><name pos:start="455:17" pos:end="455:21">chans</name> <operator pos:start="455:23" pos:end="455:24">==</operator> <literal type="number" pos:start="455:26" pos:end="455:26">2</literal></expr>)</condition> <block pos:start="455:29" pos:end="477:13">{<block_content pos:start="457:17" pos:end="475:17">

                <expr_stmt pos:start="457:17" pos:end="457:56"><expr pos:start="457:17" pos:end="457:55"><call pos:start="457:17" pos:end="457:55"><name pos:start="457:17" pos:end="457:24">put_bits</name><argument_list pos:start="457:25" pos:end="457:55">(<argument pos:start="457:26" pos:end="457:31"><expr pos:start="457:26" pos:end="457:31"><operator pos:start="457:26" pos:end="457:26">&amp;</operator><name pos:start="457:27" pos:end="457:31"><name pos:start="457:27" pos:end="457:27">s</name><operator pos:start="457:28" pos:end="457:29">-&gt;</operator><name pos:start="457:30" pos:end="457:31">pb</name></name></expr></argument>, <argument pos:start="457:34" pos:end="457:34"><expr pos:start="457:34" pos:end="457:34"><literal type="number" pos:start="457:34" pos:end="457:34">1</literal></expr></argument>, <argument pos:start="457:37" pos:end="457:54"><expr pos:start="457:37" pos:end="457:54"><name pos:start="457:37" pos:end="457:54"><name pos:start="457:37" pos:end="457:39">cpe</name><operator pos:start="457:40" pos:end="457:41">-&gt;</operator><name pos:start="457:42" pos:end="457:54">common_window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="459:17" pos:end="475:17"><if pos:start="459:17" pos:end="475:17">if <condition pos:start="459:20" pos:end="459:39">(<expr pos:start="459:21" pos:end="459:38"><name pos:start="459:21" pos:end="459:38"><name pos:start="459:21" pos:end="459:23">cpe</name><operator pos:start="459:24" pos:end="459:25">-&gt;</operator><name pos:start="459:26" pos:end="459:38">common_window</name></name></expr>)</condition> <block pos:start="459:41" pos:end="475:17">{<block_content pos:start="461:21" pos:end="473:50">

                    <expr_stmt pos:start="461:21" pos:end="461:53"><expr pos:start="461:21" pos:end="461:52"><call pos:start="461:21" pos:end="461:52"><name pos:start="461:21" pos:end="461:32">put_ics_info</name><argument_list pos:start="461:33" pos:end="461:52">(<argument pos:start="461:34" pos:end="461:34"><expr pos:start="461:34" pos:end="461:34"><name pos:start="461:34" pos:end="461:34">s</name></expr></argument>, <argument pos:start="461:37" pos:end="461:51"><expr pos:start="461:37" pos:end="461:51"><operator pos:start="461:37" pos:end="461:37">&amp;</operator><name pos:start="461:38" pos:end="461:47"><name pos:start="461:38" pos:end="461:40">cpe</name><operator pos:start="461:41" pos:end="461:42">-&gt;</operator><name pos:start="461:43" pos:end="461:44">ch</name><index pos:start="461:45" pos:end="461:47">[<expr pos:start="461:46" pos:end="461:46"><literal type="number" pos:start="461:46" pos:end="461:46">0</literal></expr>]</index></name><operator pos:start="461:48" pos:end="461:48">.</operator><name pos:start="461:49" pos:end="461:51">ics</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="463:21" pos:end="465:67"><if pos:start="463:21" pos:end="465:67">if <condition pos:start="463:24" pos:end="463:51">(<expr pos:start="463:25" pos:end="463:50"><name pos:start="463:25" pos:end="463:50"><name pos:start="463:25" pos:end="463:25">s</name><operator pos:start="463:26" pos:end="463:27">-&gt;</operator><name pos:start="463:28" pos:end="463:32">coder</name><operator pos:start="463:33" pos:end="463:34">-&gt;</operator><name pos:start="463:35" pos:end="463:50">encode_main_pred</name></name></expr>)</condition><block type="pseudo" pos:start="465:25" pos:end="465:67"><block_content pos:start="465:25" pos:end="465:67">

                        <expr_stmt pos:start="465:25" pos:end="465:67"><expr pos:start="465:25" pos:end="465:66"><call pos:start="465:25" pos:end="465:66"><name pos:start="465:25" pos:end="465:50"><name pos:start="465:25" pos:end="465:25">s</name><operator pos:start="465:26" pos:end="465:27">-&gt;</operator><name pos:start="465:28" pos:end="465:32">coder</name><operator pos:start="465:33" pos:end="465:34">-&gt;</operator><name pos:start="465:35" pos:end="465:50">encode_main_pred</name></name><argument_list pos:start="465:51" pos:end="465:66">(<argument pos:start="465:52" pos:end="465:52"><expr pos:start="465:52" pos:end="465:52"><name pos:start="465:52" pos:end="465:52">s</name></expr></argument>, <argument pos:start="465:55" pos:end="465:65"><expr pos:start="465:55" pos:end="465:65"><operator pos:start="465:55" pos:end="465:55">&amp;</operator><name pos:start="465:56" pos:end="465:65"><name pos:start="465:56" pos:end="465:58">cpe</name><operator pos:start="465:59" pos:end="465:60">-&gt;</operator><name pos:start="465:61" pos:end="465:62">ch</name><index pos:start="465:63" pos:end="465:65">[<expr pos:start="465:64" pos:end="465:64"><literal type="number" pos:start="465:64" pos:end="465:64">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="467:21" pos:end="469:69"><if pos:start="467:21" pos:end="469:69">if <condition pos:start="467:24" pos:end="467:50">(<expr pos:start="467:25" pos:end="467:49"><name pos:start="467:25" pos:end="467:49"><name pos:start="467:25" pos:end="467:25">s</name><operator pos:start="467:26" pos:end="467:27">-&gt;</operator><name pos:start="467:28" pos:end="467:32">coder</name><operator pos:start="467:33" pos:end="467:34">-&gt;</operator><name pos:start="467:35" pos:end="467:49">encode_ltp_info</name></name></expr>)</condition><block type="pseudo" pos:start="469:25" pos:end="469:69"><block_content pos:start="469:25" pos:end="469:69">

                        <expr_stmt pos:start="469:25" pos:end="469:69"><expr pos:start="469:25" pos:end="469:68"><call pos:start="469:25" pos:end="469:68"><name pos:start="469:25" pos:end="469:49"><name pos:start="469:25" pos:end="469:25">s</name><operator pos:start="469:26" pos:end="469:27">-&gt;</operator><name pos:start="469:28" pos:end="469:32">coder</name><operator pos:start="469:33" pos:end="469:34">-&gt;</operator><name pos:start="469:35" pos:end="469:49">encode_ltp_info</name></name><argument_list pos:start="469:50" pos:end="469:68">(<argument pos:start="469:51" pos:end="469:51"><expr pos:start="469:51" pos:end="469:51"><name pos:start="469:51" pos:end="469:51">s</name></expr></argument>, <argument pos:start="469:54" pos:end="469:64"><expr pos:start="469:54" pos:end="469:64"><operator pos:start="469:54" pos:end="469:54">&amp;</operator><name pos:start="469:55" pos:end="469:64"><name pos:start="469:55" pos:end="469:57">cpe</name><operator pos:start="469:58" pos:end="469:59">-&gt;</operator><name pos:start="469:60" pos:end="469:61">ch</name><index pos:start="469:62" pos:end="469:64">[<expr pos:start="469:63" pos:end="469:63"><literal type="number" pos:start="469:63" pos:end="469:63">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="469:67" pos:end="469:67"><expr pos:start="469:67" pos:end="469:67"><literal type="number" pos:start="469:67" pos:end="469:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="471:21" pos:end="471:48"><expr pos:start="471:21" pos:end="471:47"><call pos:start="471:21" pos:end="471:47"><name pos:start="471:21" pos:end="471:34">encode_ms_info</name><argument_list pos:start="471:35" pos:end="471:47">(<argument pos:start="471:36" pos:end="471:41"><expr pos:start="471:36" pos:end="471:41"><operator pos:start="471:36" pos:end="471:36">&amp;</operator><name pos:start="471:37" pos:end="471:41"><name pos:start="471:37" pos:end="471:37">s</name><operator pos:start="471:38" pos:end="471:39">-&gt;</operator><name pos:start="471:40" pos:end="471:41">pb</name></name></expr></argument>, <argument pos:start="471:44" pos:end="471:46"><expr pos:start="471:44" pos:end="471:46"><name pos:start="471:44" pos:end="471:46">cpe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="473:21" pos:end="473:50"><if pos:start="473:21" pos:end="473:50">if <condition pos:start="473:24" pos:end="473:37">(<expr pos:start="473:25" pos:end="473:36"><name pos:start="473:25" pos:end="473:36"><name pos:start="473:25" pos:end="473:27">cpe</name><operator pos:start="473:28" pos:end="473:29">-&gt;</operator><name pos:start="473:30" pos:end="473:36">ms_mode</name></name></expr>)</condition><block type="pseudo" pos:start="473:39" pos:end="473:50"><block_content pos:start="473:39" pos:end="473:50"> <expr_stmt pos:start="473:39" pos:end="473:50"><expr pos:start="473:39" pos:end="473:49"><name pos:start="473:39" pos:end="473:45">ms_mode</name> <operator pos:start="473:47" pos:end="473:47">=</operator> <literal type="number" pos:start="473:49" pos:end="473:49">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <for pos:start="479:13" pos:end="485:13">for <control pos:start="479:17" pos:end="479:42">(<init pos:start="479:18" pos:end="479:24"><expr pos:start="479:18" pos:end="479:23"><name pos:start="479:18" pos:end="479:19">ch</name> <operator pos:start="479:21" pos:end="479:21">=</operator> <literal type="number" pos:start="479:23" pos:end="479:23">0</literal></expr>;</init> <condition pos:start="479:26" pos:end="479:36"><expr pos:start="479:26" pos:end="479:35"><name pos:start="479:26" pos:end="479:27">ch</name> <operator pos:start="479:29" pos:end="479:29">&lt;</operator> <name pos:start="479:31" pos:end="479:35">chans</name></expr>;</condition> <incr pos:start="479:38" pos:end="479:41"><expr pos:start="479:38" pos:end="479:41"><name pos:start="479:38" pos:end="479:39">ch</name><operator pos:start="479:40" pos:end="479:41">++</operator></expr></incr>)</control> <block pos:start="479:44" pos:end="485:13">{<block_content pos:start="481:17" pos:end="483:86">

                <expr_stmt pos:start="481:17" pos:end="481:47"><expr pos:start="481:17" pos:end="481:46"><name pos:start="481:17" pos:end="481:30"><name pos:start="481:17" pos:end="481:17">s</name><operator pos:start="481:18" pos:end="481:19">-&gt;</operator><name pos:start="481:20" pos:end="481:30">cur_channel</name></name> <operator pos:start="481:32" pos:end="481:32">=</operator> <name pos:start="481:34" pos:end="481:41">start_ch</name> <operator pos:start="481:43" pos:end="481:43">+</operator> <name pos:start="481:45" pos:end="481:46">ch</name></expr>;</expr_stmt>

                <expr_stmt pos:start="483:17" pos:end="483:86"><expr pos:start="483:17" pos:end="483:85"><call pos:start="483:17" pos:end="483:85"><name pos:start="483:17" pos:end="483:41">encode_individual_channel</name><argument_list pos:start="483:42" pos:end="483:85">(<argument pos:start="483:43" pos:end="483:47"><expr pos:start="483:43" pos:end="483:47"><name pos:start="483:43" pos:end="483:47">avctx</name></expr></argument>, <argument pos:start="483:50" pos:end="483:50"><expr pos:start="483:50" pos:end="483:50"><name pos:start="483:50" pos:end="483:50">s</name></expr></argument>, <argument pos:start="483:53" pos:end="483:64"><expr pos:start="483:53" pos:end="483:64"><operator pos:start="483:53" pos:end="483:53">&amp;</operator><name pos:start="483:54" pos:end="483:64"><name pos:start="483:54" pos:end="483:56">cpe</name><operator pos:start="483:57" pos:end="483:58">-&gt;</operator><name pos:start="483:59" pos:end="483:60">ch</name><index pos:start="483:61" pos:end="483:64">[<expr pos:start="483:62" pos:end="483:63"><name pos:start="483:62" pos:end="483:63">ch</name></expr>]</index></name></expr></argument>, <argument pos:start="483:67" pos:end="483:84"><expr pos:start="483:67" pos:end="483:84"><name pos:start="483:67" pos:end="483:84"><name pos:start="483:67" pos:end="483:69">cpe</name><operator pos:start="483:70" pos:end="483:71">-&gt;</operator><name pos:start="483:72" pos:end="483:84">common_window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="487:13" pos:end="487:30"><expr pos:start="487:13" pos:end="487:29"><name pos:start="487:13" pos:end="487:20">start_ch</name> <operator pos:start="487:22" pos:end="487:23">+=</operator> <name pos:start="487:25" pos:end="487:29">chans</name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="493:9" pos:end="499:9"><if pos:start="493:9" pos:end="499:9">if <condition pos:start="493:12" pos:end="493:45">(<expr pos:start="493:13" pos:end="493:44"><name pos:start="493:13" pos:end="493:24"><name pos:start="493:13" pos:end="493:17">avctx</name><operator pos:start="493:18" pos:end="493:19">-&gt;</operator><name pos:start="493:20" pos:end="493:24">flags</name></name> <operator pos:start="493:26" pos:end="493:26">&amp;</operator> <name pos:start="493:28" pos:end="493:44">CODEC_FLAG_QSCALE</name></expr>)</condition> <block pos:start="493:47" pos:end="499:9">{<block_content pos:start="497:13" pos:end="497:18">

            <comment type="block" pos:start="495:13" pos:end="495:71">/* When using a constant Q-scale, don't mess with lambda */</comment>

            <break pos:start="497:13" pos:end="497:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="503:9" pos:end="509:11">/* rate control stuff

         * allow between the nominal bitrate, and what psy's bit reservoir says to target

         * but drift towards the nominal bitrate always

         */</comment>

        <expr_stmt pos:start="511:9" pos:end="511:44"><expr pos:start="511:9" pos:end="511:43"><name pos:start="511:9" pos:end="511:18">frame_bits</name> <operator pos:start="511:20" pos:end="511:20">=</operator> <call pos:start="511:22" pos:end="511:43"><name pos:start="511:22" pos:end="511:35">put_bits_count</name><argument_list pos:start="511:36" pos:end="511:43">(<argument pos:start="511:37" pos:end="511:42"><expr pos:start="511:37" pos:end="511:42"><operator pos:start="511:37" pos:end="511:37">&amp;</operator><name pos:start="511:38" pos:end="511:42"><name pos:start="511:38" pos:end="511:38">s</name><operator pos:start="511:39" pos:end="511:40">-&gt;</operator><name pos:start="511:41" pos:end="511:42">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="513:9" pos:end="513:64"><expr pos:start="513:9" pos:end="513:63"><name pos:start="513:9" pos:end="513:17">rate_bits</name> <operator pos:start="513:19" pos:end="513:19">=</operator> <name pos:start="513:21" pos:end="513:35"><name pos:start="513:21" pos:end="513:25">avctx</name><operator pos:start="513:26" pos:end="513:27">-&gt;</operator><name pos:start="513:28" pos:end="513:35">bit_rate</name></name> <operator pos:start="513:37" pos:end="513:37">*</operator> <literal type="number" pos:start="513:39" pos:end="513:42">1024</literal> <operator pos:start="513:44" pos:end="513:44">/</operator> <name pos:start="513:46" pos:end="513:63"><name pos:start="513:46" pos:end="513:50">avctx</name><operator pos:start="513:51" pos:end="513:52">-&gt;</operator><name pos:start="513:53" pos:end="513:63">sample_rate</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="515:9" pos:end="515:61"><expr pos:start="515:9" pos:end="515:60"><name pos:start="515:9" pos:end="515:17">rate_bits</name> <operator pos:start="515:19" pos:end="515:19">=</operator> <call pos:start="515:21" pos:end="515:60"><name pos:start="515:21" pos:end="515:25">FFMIN</name><argument_list pos:start="515:26" pos:end="515:60">(<argument pos:start="515:27" pos:end="515:35"><expr pos:start="515:27" pos:end="515:35"><name pos:start="515:27" pos:end="515:35">rate_bits</name></expr></argument>, <argument pos:start="515:38" pos:end="515:59"><expr pos:start="515:38" pos:end="515:59"><literal type="number" pos:start="515:38" pos:end="515:41">6144</literal> <operator pos:start="515:43" pos:end="515:43">*</operator> <name pos:start="515:45" pos:end="515:55"><name pos:start="515:45" pos:end="515:45">s</name><operator pos:start="515:46" pos:end="515:47">-&gt;</operator><name pos:start="515:48" pos:end="515:55">channels</name></name> <operator pos:start="515:57" pos:end="515:57">-</operator> <literal type="number" pos:start="515:59" pos:end="515:59">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="517:9" pos:end="517:54"><expr pos:start="517:9" pos:end="517:53"><name pos:start="517:9" pos:end="517:21">too_many_bits</name> <operator pos:start="517:23" pos:end="517:23">=</operator> <call pos:start="517:25" pos:end="517:53"><name pos:start="517:25" pos:end="517:29">FFMAX</name><argument_list pos:start="517:30" pos:end="517:53">(<argument pos:start="517:31" pos:end="517:41"><expr pos:start="517:31" pos:end="517:41"><name pos:start="517:31" pos:end="517:41">target_bits</name></expr></argument>, <argument pos:start="517:44" pos:end="517:52"><expr pos:start="517:44" pos:end="517:52"><name pos:start="517:44" pos:end="517:52">rate_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="519:9" pos:end="519:69"><expr pos:start="519:9" pos:end="519:68"><name pos:start="519:9" pos:end="519:21">too_many_bits</name> <operator pos:start="519:23" pos:end="519:23">=</operator> <call pos:start="519:25" pos:end="519:68"><name pos:start="519:25" pos:end="519:29">FFMIN</name><argument_list pos:start="519:30" pos:end="519:68">(<argument pos:start="519:31" pos:end="519:43"><expr pos:start="519:31" pos:end="519:43"><name pos:start="519:31" pos:end="519:43">too_many_bits</name></expr></argument>, <argument pos:start="519:46" pos:end="519:67"><expr pos:start="519:46" pos:end="519:67"><literal type="number" pos:start="519:46" pos:end="519:49">6144</literal> <operator pos:start="519:51" pos:end="519:51">*</operator> <name pos:start="519:53" pos:end="519:63"><name pos:start="519:53" pos:end="519:53">s</name><operator pos:start="519:54" pos:end="519:55">-&gt;</operator><name pos:start="519:56" pos:end="519:63">channels</name></name> <operator pos:start="519:65" pos:end="519:65">-</operator> <literal type="number" pos:start="519:67" pos:end="519:67">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="521:9" pos:end="521:89"><expr pos:start="521:9" pos:end="521:88"><name pos:start="521:9" pos:end="521:20">too_few_bits</name> <operator pos:start="521:22" pos:end="521:22">=</operator> <call pos:start="521:24" pos:end="521:88"><name pos:start="521:24" pos:end="521:28">FFMIN</name><argument_list pos:start="521:29" pos:end="521:88">(<argument pos:start="521:30" pos:end="521:72"><expr pos:start="521:30" pos:end="521:72"><call pos:start="521:30" pos:end="521:72"><name pos:start="521:30" pos:end="521:34">FFMAX</name><argument_list pos:start="521:35" pos:end="521:72">(<argument pos:start="521:36" pos:end="521:58"><expr pos:start="521:36" pos:end="521:58"><name pos:start="521:36" pos:end="521:44">rate_bits</name> <operator pos:start="521:46" pos:end="521:46">-</operator> <name pos:start="521:48" pos:end="521:56">rate_bits</name><operator pos:start="521:57" pos:end="521:57">/</operator><literal type="number" pos:start="521:58" pos:end="521:58">4</literal></expr></argument>, <argument pos:start="521:61" pos:end="521:71"><expr pos:start="521:61" pos:end="521:71"><name pos:start="521:61" pos:end="521:71">target_bits</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="521:75" pos:end="521:87"><expr pos:start="521:75" pos:end="521:87"><name pos:start="521:75" pos:end="521:87">too_many_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="525:9" pos:end="525:65">/* When using ABR, be strict (but only for increasing) */</comment>

        <expr_stmt pos:start="527:9" pos:end="527:53"><expr pos:start="527:9" pos:end="527:52"><name pos:start="527:9" pos:end="527:20">too_few_bits</name> <operator pos:start="527:22" pos:end="527:22">=</operator> <name pos:start="527:24" pos:end="527:35">too_few_bits</name> <operator pos:start="527:37" pos:end="527:37">-</operator> <name pos:start="527:39" pos:end="527:50">too_few_bits</name><operator pos:start="527:51" pos:end="527:51">/</operator><literal type="number" pos:start="527:52" pos:end="527:52">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="529:9" pos:end="529:56"><expr pos:start="529:9" pos:end="529:55"><name pos:start="529:9" pos:end="529:21">too_many_bits</name> <operator pos:start="529:23" pos:end="529:23">=</operator> <name pos:start="529:25" pos:end="529:37">too_many_bits</name> <operator pos:start="529:39" pos:end="529:39">+</operator> <name pos:start="529:41" pos:end="529:53">too_many_bits</name><operator pos:start="529:54" pos:end="529:54">/</operator><literal type="number" pos:start="529:55" pos:end="529:55">2</literal></expr>;</expr_stmt>



        <if_stmt pos:start="533:9" pos:end="609:9"><if pos:start="533:9" pos:end="605:9">if <condition pos:start="533:12" pos:end="537:54">(   <expr pos:start="533:16" pos:end="537:51"><name pos:start="533:16" pos:end="533:18">its</name> <operator pos:start="533:20" pos:end="533:21">==</operator> <literal type="number" pos:start="533:23" pos:end="533:23">0</literal> <comment type="block" pos:start="533:25" pos:end="533:63">/* for steady-state Q-scale tracking */</comment>

            <operator pos:start="535:13" pos:end="535:14">||</operator> <operator pos:start="535:16" pos:end="535:16">(</operator><name pos:start="535:17" pos:end="535:19">its</name> <operator pos:start="535:21" pos:end="535:21">&lt;</operator> <literal type="number" pos:start="535:23" pos:end="535:23">5</literal> <operator pos:start="535:25" pos:end="535:26">&amp;&amp;</operator> <operator pos:start="535:28" pos:end="535:28">(</operator><name pos:start="535:29" pos:end="535:69"><name pos:start="535:29" pos:end="535:38">frame_bits</name> <argument_list type="generic" pos:start="535:40" pos:end="535:69">&lt; <argument pos:start="535:42" pos:end="535:67"><expr pos:start="535:42" pos:end="535:67"><name pos:start="535:42" pos:end="535:53">too_few_bits</name> <operator pos:start="535:55" pos:end="535:56">||</operator> <name pos:start="535:58" pos:end="535:67">frame_bits</name></expr></argument> &gt;</argument_list></name> <name pos:start="535:71" pos:end="535:83">too_many_bits</name><operator pos:start="535:84" pos:end="535:84">)</operator><operator pos:start="535:85" pos:end="535:85">)</operator>

            <operator pos:start="537:13" pos:end="537:14">||</operator> <name pos:start="537:16" pos:end="537:25">frame_bits</name> <operator pos:start="537:27" pos:end="537:28">&gt;=</operator> <literal type="number" pos:start="537:30" pos:end="537:33">6144</literal> <operator pos:start="537:35" pos:end="537:35">*</operator> <name pos:start="537:37" pos:end="537:47"><name pos:start="537:37" pos:end="537:37">s</name><operator pos:start="537:38" pos:end="537:39">-&gt;</operator><name pos:start="537:40" pos:end="537:47">channels</name></name> <operator pos:start="537:49" pos:end="537:49">-</operator> <literal type="number" pos:start="537:51" pos:end="537:51">3</literal></expr>  )</condition>

        <block pos:start="539:9" pos:end="605:9">{<block_content pos:start="541:13" pos:end="603:13">

            <decl_stmt pos:start="541:13" pos:end="541:58"><decl pos:start="541:13" pos:end="541:57"><type pos:start="541:13" pos:end="541:17"><name pos:start="541:13" pos:end="541:17">float</name></type> <name pos:start="541:19" pos:end="541:23">ratio</name> <init pos:start="541:25" pos:end="541:57">= <expr pos:start="541:27" pos:end="541:57"><operator pos:start="541:27" pos:end="541:27">(</operator><operator pos:start="541:28" pos:end="541:28">(</operator><name pos:start="541:29" pos:end="541:33">float</name><operator pos:start="541:34" pos:end="541:34">)</operator><name pos:start="541:35" pos:end="541:43">rate_bits</name><operator pos:start="541:44" pos:end="541:44">)</operator> <operator pos:start="541:46" pos:end="541:46">/</operator> <name pos:start="541:48" pos:end="541:57">frame_bits</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="545:13" pos:end="569:13"><if pos:start="545:13" pos:end="563:13">if <condition pos:start="545:16" pos:end="545:74">(<expr pos:start="545:17" pos:end="545:73"><name pos:start="545:17" pos:end="545:26">frame_bits</name> <operator pos:start="545:28" pos:end="545:29">&gt;=</operator> <name pos:start="545:31" pos:end="545:42">too_few_bits</name> <operator pos:start="545:44" pos:end="545:45">&amp;&amp;</operator> <name pos:start="545:47" pos:end="545:56">frame_bits</name> <operator pos:start="545:58" pos:end="545:59">&lt;=</operator> <name pos:start="545:61" pos:end="545:73">too_many_bits</name></expr>)</condition> <block pos:start="545:76" pos:end="563:13">{<block_content pos:start="559:17" pos:end="561:52">

                <comment type="block" pos:start="547:17" pos:end="557:19">/*

                 * This path is for steady-state Q-scale tracking

                 * When frame bits fall within the stable range, we still need to adjust

                 * lambda to maintain it like so in a stable fashion (large jumps in lambda

                 * create artifacts and should be avoided), but slowly

                 */</comment>

                <expr_stmt pos:start="559:17" pos:end="559:44"><expr pos:start="559:17" pos:end="559:43"><name pos:start="559:17" pos:end="559:21">ratio</name> <operator pos:start="559:23" pos:end="559:23">=</operator> <call pos:start="559:25" pos:end="559:43"><name pos:start="559:25" pos:end="559:29">sqrtf</name><argument_list pos:start="559:30" pos:end="559:43">(<argument pos:start="559:31" pos:end="559:42"><expr pos:start="559:31" pos:end="559:42"><call pos:start="559:31" pos:end="559:42"><name pos:start="559:31" pos:end="559:35">sqrtf</name><argument_list pos:start="559:36" pos:end="559:42">(<argument pos:start="559:37" pos:end="559:41"><expr pos:start="559:37" pos:end="559:41"><name pos:start="559:37" pos:end="559:41">ratio</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="561:17" pos:end="561:52"><expr pos:start="561:17" pos:end="561:51"><name pos:start="561:17" pos:end="561:21">ratio</name> <operator pos:start="561:23" pos:end="561:23">=</operator> <call pos:start="561:25" pos:end="561:51"><name pos:start="561:25" pos:end="561:32">av_clipf</name><argument_list pos:start="561:33" pos:end="561:51">(<argument pos:start="561:34" pos:end="561:38"><expr pos:start="561:34" pos:end="561:38"><name pos:start="561:34" pos:end="561:38">ratio</name></expr></argument>, <argument pos:start="561:41" pos:end="561:44"><expr pos:start="561:41" pos:end="561:44"><literal type="number" pos:start="561:41" pos:end="561:44">0.9f</literal></expr></argument>, <argument pos:start="561:47" pos:end="561:50"><expr pos:start="561:47" pos:end="561:50"><literal type="number" pos:start="561:47" pos:end="561:50">1.1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="563:15" pos:end="569:13">else <block pos:start="563:20" pos:end="569:13">{<block_content pos:start="567:17" pos:end="567:37">

                <comment type="block" pos:start="565:17" pos:end="565:40">/* Not so fast though */</comment>

                <expr_stmt pos:start="567:17" pos:end="567:37"><expr pos:start="567:17" pos:end="567:36"><name pos:start="567:17" pos:end="567:21">ratio</name> <operator pos:start="567:23" pos:end="567:23">=</operator> <call pos:start="567:25" pos:end="567:36"><name pos:start="567:25" pos:end="567:29">sqrtf</name><argument_list pos:start="567:30" pos:end="567:36">(<argument pos:start="567:31" pos:end="567:35"><expr pos:start="567:31" pos:end="567:35"><name pos:start="567:31" pos:end="567:35">ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="571:13" pos:end="571:58"><expr pos:start="571:13" pos:end="571:57"><name pos:start="571:13" pos:end="571:21"><name pos:start="571:13" pos:end="571:13">s</name><operator pos:start="571:14" pos:end="571:15">-&gt;</operator><name pos:start="571:16" pos:end="571:21">lambda</name></name> <operator pos:start="571:23" pos:end="571:23">=</operator> <call pos:start="571:25" pos:end="571:57"><name pos:start="571:25" pos:end="571:29">FFMIN</name><argument_list pos:start="571:30" pos:end="571:57">(<argument pos:start="571:31" pos:end="571:47"><expr pos:start="571:31" pos:end="571:47"><name pos:start="571:31" pos:end="571:39"><name pos:start="571:31" pos:end="571:31">s</name><operator pos:start="571:32" pos:end="571:33">-&gt;</operator><name pos:start="571:34" pos:end="571:39">lambda</name></name> <operator pos:start="571:41" pos:end="571:41">*</operator> <name pos:start="571:43" pos:end="571:47">ratio</name></expr></argument>, <argument pos:start="571:50" pos:end="571:56"><expr pos:start="571:50" pos:end="571:56"><literal type="number" pos:start="571:50" pos:end="571:56">65536.f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="575:13" pos:end="575:75">/* Keep iterating if we must reduce and lambda is in the sky */</comment>

            <if_stmt pos:start="577:13" pos:end="603:13"><if pos:start="577:13" pos:end="581:13">if <condition pos:start="577:16" pos:end="577:45">(<expr pos:start="577:17" pos:end="577:44"><name pos:start="577:17" pos:end="577:21">ratio</name> <operator pos:start="577:23" pos:end="577:23">&gt;</operator> <literal type="number" pos:start="577:25" pos:end="577:28">0.9f</literal> <operator pos:start="577:30" pos:end="577:31">&amp;&amp;</operator> <name pos:start="577:33" pos:end="577:37">ratio</name> <operator pos:start="577:39" pos:end="577:39">&lt;</operator> <literal type="number" pos:start="577:41" pos:end="577:44">1.1f</literal></expr>)</condition> <block pos:start="577:47" pos:end="581:13">{<block_content pos:start="579:17" pos:end="579:22">

                <break pos:start="579:17" pos:end="579:22">break;</break>

            </block_content>}</block></if> <else pos:start="581:15" pos:end="603:13">else <block pos:start="581:20" pos:end="603:13">{<block_content pos:start="583:17" pos:end="601:22">

                <if_stmt pos:start="583:17" pos:end="599:17"><if pos:start="583:17" pos:end="599:17">if <condition pos:start="583:20" pos:end="583:64">(<expr pos:start="583:21" pos:end="583:63"><name pos:start="583:21" pos:end="583:27">is_mode</name> <operator pos:start="583:29" pos:end="583:30">||</operator> <name pos:start="583:32" pos:end="583:38">ms_mode</name> <operator pos:start="583:40" pos:end="583:41">||</operator> <name pos:start="583:43" pos:end="583:50">tns_mode</name> <operator pos:start="583:52" pos:end="583:53">||</operator> <name pos:start="583:55" pos:end="583:63">pred_mode</name></expr>)</condition> <block pos:start="583:66" pos:end="599:17">{<block_content pos:start="585:21" pos:end="597:21">

                    <for pos:start="585:21" pos:end="597:21">for <control pos:start="585:25" pos:end="585:56">(<init pos:start="585:26" pos:end="585:31"><expr pos:start="585:26" pos:end="585:30"><name pos:start="585:26" pos:end="585:26">i</name> <operator pos:start="585:28" pos:end="585:28">=</operator> <literal type="number" pos:start="585:30" pos:end="585:30">0</literal></expr>;</init> <condition pos:start="585:33" pos:end="585:51"><expr pos:start="585:33" pos:end="585:50"><name pos:start="585:33" pos:end="585:33">i</name> <operator pos:start="585:35" pos:end="585:35">&lt;</operator> <name pos:start="585:37" pos:end="585:50"><name pos:start="585:37" pos:end="585:37">s</name><operator pos:start="585:38" pos:end="585:39">-&gt;</operator><name pos:start="585:40" pos:end="585:47">chan_map</name><index pos:start="585:48" pos:end="585:50">[<expr pos:start="585:49" pos:end="585:49"><literal type="number" pos:start="585:49" pos:end="585:49">0</literal></expr>]</index></name></expr>;</condition> <incr pos:start="585:53" pos:end="585:55"><expr pos:start="585:53" pos:end="585:55"><name pos:start="585:53" pos:end="585:53">i</name><operator pos:start="585:54" pos:end="585:55">++</operator></expr></incr>)</control> <block pos:start="585:58" pos:end="597:21">{<block_content pos:start="589:25" pos:end="595:104">

                        <comment type="line" pos:start="587:25" pos:end="587:46">// Must restore coeffs</comment>

                        <expr_stmt pos:start="589:25" pos:end="589:56"><expr pos:start="589:25" pos:end="589:55"><name pos:start="589:25" pos:end="589:29">chans</name> <operator pos:start="589:31" pos:end="589:31">=</operator> <ternary pos:start="589:33" pos:end="589:55"><condition pos:start="589:33" pos:end="589:49"><expr pos:start="589:33" pos:end="589:47"><name pos:start="589:33" pos:end="589:35">tag</name> <operator pos:start="589:37" pos:end="589:38">==</operator> <name pos:start="589:40" pos:end="589:47">TYPE_CPE</name></expr> ?</condition><then pos:start="589:51" pos:end="589:51"> <expr pos:start="589:51" pos:end="589:51"><literal type="number" pos:start="589:51" pos:end="589:51">2</literal></expr> </then><else pos:start="589:53" pos:end="589:55">: <expr pos:start="589:55" pos:end="589:55"><literal type="number" pos:start="589:55" pos:end="589:55">1</literal></expr></else></ternary></expr>;</expr_stmt>

                        <expr_stmt pos:start="591:25" pos:end="591:41"><expr pos:start="591:25" pos:end="591:40"><name pos:start="591:25" pos:end="591:27">cpe</name> <operator pos:start="591:29" pos:end="591:29">=</operator> <operator pos:start="591:31" pos:end="591:31">&amp;</operator><name pos:start="591:32" pos:end="591:40"><name pos:start="591:32" pos:end="591:32">s</name><operator pos:start="591:33" pos:end="591:34">-&gt;</operator><name pos:start="591:35" pos:end="591:37">cpe</name><index pos:start="591:38" pos:end="591:40">[<expr pos:start="591:39" pos:end="591:39"><name pos:start="591:39" pos:end="591:39">i</name></expr>]</index></name></expr>;</expr_stmt>

                        <for pos:start="593:25" pos:end="595:104">for <control pos:start="593:29" pos:end="593:54">(<init pos:start="593:30" pos:end="593:36"><expr pos:start="593:30" pos:end="593:35"><name pos:start="593:30" pos:end="593:31">ch</name> <operator pos:start="593:33" pos:end="593:33">=</operator> <literal type="number" pos:start="593:35" pos:end="593:35">0</literal></expr>;</init> <condition pos:start="593:38" pos:end="593:48"><expr pos:start="593:38" pos:end="593:47"><name pos:start="593:38" pos:end="593:39">ch</name> <operator pos:start="593:41" pos:end="593:41">&lt;</operator> <name pos:start="593:43" pos:end="593:47">chans</name></expr>;</condition> <incr pos:start="593:50" pos:end="593:53"><expr pos:start="593:50" pos:end="593:53"><name pos:start="593:50" pos:end="593:51">ch</name><operator pos:start="593:52" pos:end="593:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="595:29" pos:end="595:104"><block_content pos:start="595:29" pos:end="595:104">

                            <expr_stmt pos:start="595:29" pos:end="595:104"><expr pos:start="595:29" pos:end="595:103"><call pos:start="595:29" pos:end="595:103"><name pos:start="595:29" pos:end="595:34">memcpy</name><argument_list pos:start="595:35" pos:end="595:103">(<argument pos:start="595:36" pos:end="595:53"><expr pos:start="595:36" pos:end="595:53"><name pos:start="595:36" pos:end="595:46"><name pos:start="595:36" pos:end="595:38">cpe</name><operator pos:start="595:39" pos:end="595:40">-&gt;</operator><name pos:start="595:41" pos:end="595:42">ch</name><index pos:start="595:43" pos:end="595:46">[<expr pos:start="595:44" pos:end="595:45"><name pos:start="595:44" pos:end="595:45">ch</name></expr>]</index></name><operator pos:start="595:47" pos:end="595:47">.</operator><name pos:start="595:48" pos:end="595:53">coeffs</name></expr></argument>, <argument pos:start="595:56" pos:end="595:74"><expr pos:start="595:56" pos:end="595:74"><name pos:start="595:56" pos:end="595:66"><name pos:start="595:56" pos:end="595:58">cpe</name><operator pos:start="595:59" pos:end="595:60">-&gt;</operator><name pos:start="595:61" pos:end="595:62">ch</name><index pos:start="595:63" pos:end="595:66">[<expr pos:start="595:64" pos:end="595:65"><name pos:start="595:64" pos:end="595:65">ch</name></expr>]</index></name><operator pos:start="595:67" pos:end="595:67">.</operator><name pos:start="595:68" pos:end="595:74">pcoeffs</name></expr></argument>, <argument pos:start="595:77" pos:end="595:102"><expr pos:start="595:77" pos:end="595:102"><sizeof pos:start="595:77" pos:end="595:102">sizeof<argument_list pos:start="595:83" pos:end="595:102">(<argument pos:start="595:84" pos:end="595:101"><expr pos:start="595:84" pos:end="595:101"><name pos:start="595:84" pos:end="595:94"><name pos:start="595:84" pos:end="595:86">cpe</name><operator pos:start="595:87" pos:end="595:88">-&gt;</operator><name pos:start="595:89" pos:end="595:90">ch</name><index pos:start="595:91" pos:end="595:94">[<expr pos:start="595:92" pos:end="595:93"><name pos:start="595:92" pos:end="595:93">ch</name></expr>]</index></name><operator pos:start="595:95" pos:end="595:95">.</operator><name pos:start="595:96" pos:end="595:101">coeffs</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                    </block_content>}</block></for>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="601:17" pos:end="601:22"><expr pos:start="601:17" pos:end="601:21"><name pos:start="601:17" pos:end="601:19">its</name><operator pos:start="601:20" pos:end="601:21">++</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="605:11" pos:end="609:9">else <block pos:start="605:16" pos:end="609:9">{<block_content pos:start="607:13" pos:end="607:18">

            <break pos:start="607:13" pos:end="607:18">break;</break>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block> while <condition pos:start="611:13" pos:end="611:15">(<expr pos:start="611:14" pos:end="611:14"><literal type="number" pos:start="611:14" pos:end="611:14">1</literal></expr>)</condition>;</do>



    <if_stmt pos:start="615:5" pos:end="617:42"><if pos:start="615:5" pos:end="617:42">if <condition pos:start="615:8" pos:end="615:57">(<expr pos:start="615:9" pos:end="615:56"><name pos:start="615:9" pos:end="615:22"><name pos:start="615:9" pos:end="615:9">s</name><operator pos:start="615:10" pos:end="615:11">-&gt;</operator><name pos:start="615:12" pos:end="615:18">options</name><operator pos:start="615:19" pos:end="615:19">.</operator><name pos:start="615:20" pos:end="615:22">ltp</name></name> <operator pos:start="615:24" pos:end="615:25">&amp;&amp;</operator> <name pos:start="615:27" pos:end="615:56"><name pos:start="615:27" pos:end="615:27">s</name><operator pos:start="615:28" pos:end="615:29">-&gt;</operator><name pos:start="615:30" pos:end="615:34">coder</name><operator pos:start="615:35" pos:end="615:36">-&gt;</operator><name pos:start="615:37" pos:end="615:56">ltp_insert_new_frame</name></name></expr>)</condition><block type="pseudo" pos:start="617:9" pos:end="617:42"><block_content pos:start="617:9" pos:end="617:42">

        <expr_stmt pos:start="617:9" pos:end="617:42"><expr pos:start="617:9" pos:end="617:41"><call pos:start="617:9" pos:end="617:41"><name pos:start="617:9" pos:end="617:38"><name pos:start="617:9" pos:end="617:9">s</name><operator pos:start="617:10" pos:end="617:11">-&gt;</operator><name pos:start="617:12" pos:end="617:16">coder</name><operator pos:start="617:17" pos:end="617:18">-&gt;</operator><name pos:start="617:19" pos:end="617:38">ltp_insert_new_frame</name></name><argument_list pos:start="617:39" pos:end="617:41">(<argument pos:start="617:40" pos:end="617:40"><expr pos:start="617:40" pos:end="617:40"><name pos:start="617:40" pos:end="617:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="621:5" pos:end="621:34"><expr pos:start="621:5" pos:end="621:33"><call pos:start="621:5" pos:end="621:33"><name pos:start="621:5" pos:end="621:12">put_bits</name><argument_list pos:start="621:13" pos:end="621:33">(<argument pos:start="621:14" pos:end="621:19"><expr pos:start="621:14" pos:end="621:19"><operator pos:start="621:14" pos:end="621:14">&amp;</operator><name pos:start="621:15" pos:end="621:19"><name pos:start="621:15" pos:end="621:15">s</name><operator pos:start="621:16" pos:end="621:17">-&gt;</operator><name pos:start="621:18" pos:end="621:19">pb</name></name></expr></argument>, <argument pos:start="621:22" pos:end="621:22"><expr pos:start="621:22" pos:end="621:22"><literal type="number" pos:start="621:22" pos:end="621:22">3</literal></expr></argument>, <argument pos:start="621:25" pos:end="621:32"><expr pos:start="621:25" pos:end="621:32"><name pos:start="621:25" pos:end="621:32">TYPE_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="623:5" pos:end="623:27"><expr pos:start="623:5" pos:end="623:26"><call pos:start="623:5" pos:end="623:26"><name pos:start="623:5" pos:end="623:18">flush_put_bits</name><argument_list pos:start="623:19" pos:end="623:26">(<argument pos:start="623:20" pos:end="623:25"><expr pos:start="623:20" pos:end="623:25"><operator pos:start="623:20" pos:end="623:20">&amp;</operator><name pos:start="623:21" pos:end="623:25"><name pos:start="623:21" pos:end="623:21">s</name><operator pos:start="623:22" pos:end="623:23">-&gt;</operator><name pos:start="623:24" pos:end="623:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="627:5" pos:end="627:52"><expr pos:start="627:5" pos:end="627:51"><name pos:start="627:5" pos:end="627:26"><name pos:start="627:5" pos:end="627:5">s</name><operator pos:start="627:6" pos:end="627:7">-&gt;</operator><name pos:start="627:8" pos:end="627:26">last_frame_pb_count</name></name> <operator pos:start="627:28" pos:end="627:28">=</operator> <call pos:start="627:30" pos:end="627:51"><name pos:start="627:30" pos:end="627:43">put_bits_count</name><argument_list pos:start="627:44" pos:end="627:51">(<argument pos:start="627:45" pos:end="627:50"><expr pos:start="627:45" pos:end="627:50"><operator pos:start="627:45" pos:end="627:45">&amp;</operator><name pos:start="627:46" pos:end="627:50"><name pos:start="627:46" pos:end="627:46">s</name><operator pos:start="627:47" pos:end="627:48">-&gt;</operator><name pos:start="627:49" pos:end="627:50">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="631:5" pos:end="631:31"><expr pos:start="631:5" pos:end="631:30"><name pos:start="631:5" pos:end="631:17"><name pos:start="631:5" pos:end="631:5">s</name><operator pos:start="631:6" pos:end="631:7">-&gt;</operator><name pos:start="631:8" pos:end="631:17">lambda_sum</name></name> <operator pos:start="631:19" pos:end="631:20">+=</operator> <name pos:start="631:22" pos:end="631:30"><name pos:start="631:22" pos:end="631:22">s</name><operator pos:start="631:23" pos:end="631:24">-&gt;</operator><name pos:start="631:25" pos:end="631:30">lambda</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="633:5" pos:end="633:22"><expr pos:start="633:5" pos:end="633:21"><name pos:start="633:5" pos:end="633:19"><name pos:start="633:5" pos:end="633:5">s</name><operator pos:start="633:6" pos:end="633:7">-&gt;</operator><name pos:start="633:8" pos:end="633:19">lambda_count</name></name><operator pos:start="633:20" pos:end="633:21">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="637:5" pos:end="639:24"><if pos:start="637:5" pos:end="639:24">if <condition pos:start="637:8" pos:end="637:15">(<expr pos:start="637:9" pos:end="637:14"><operator pos:start="637:9" pos:end="637:9">!</operator><name pos:start="637:10" pos:end="637:14">frame</name></expr>)</condition><block type="pseudo" pos:start="639:9" pos:end="639:24"><block_content pos:start="639:9" pos:end="639:24">

        <expr_stmt pos:start="639:9" pos:end="639:24"><expr pos:start="639:9" pos:end="639:23"><name pos:start="639:9" pos:end="639:21"><name pos:start="639:9" pos:end="639:9">s</name><operator pos:start="639:10" pos:end="639:11">-&gt;</operator><name pos:start="639:12" pos:end="639:21">last_frame</name></name><operator pos:start="639:22" pos:end="639:23">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="643:5" pos:end="645:41"><expr pos:start="643:5" pos:end="645:40"><call pos:start="643:5" pos:end="645:40"><name pos:start="643:5" pos:end="643:22">ff_af_queue_remove</name><argument_list pos:start="643:23" pos:end="645:40">(<argument pos:start="643:24" pos:end="643:30"><expr pos:start="643:24" pos:end="643:30"><operator pos:start="643:24" pos:end="643:24">&amp;</operator><name pos:start="643:25" pos:end="643:30"><name pos:start="643:25" pos:end="643:25">s</name><operator pos:start="643:26" pos:end="643:27">-&gt;</operator><name pos:start="643:28" pos:end="643:30">afq</name></name></expr></argument>, <argument pos:start="643:33" pos:end="643:49"><expr pos:start="643:33" pos:end="643:49"><name pos:start="643:33" pos:end="643:49"><name pos:start="643:33" pos:end="643:37">avctx</name><operator pos:start="643:38" pos:end="643:39">-&gt;</operator><name pos:start="643:40" pos:end="643:49">frame_size</name></name></expr></argument>, <argument pos:start="643:52" pos:end="643:62"><expr pos:start="643:52" pos:end="643:62"><operator pos:start="643:52" pos:end="643:52">&amp;</operator><name pos:start="643:53" pos:end="643:62"><name pos:start="643:53" pos:end="643:57">avpkt</name><operator pos:start="643:58" pos:end="643:59">-&gt;</operator><name pos:start="643:60" pos:end="643:62">pts</name></name></expr></argument>,

                       <argument pos:start="645:24" pos:end="645:39"><expr pos:start="645:24" pos:end="645:39"><operator pos:start="645:24" pos:end="645:24">&amp;</operator><name pos:start="645:25" pos:end="645:39"><name pos:start="645:25" pos:end="645:29">avpkt</name><operator pos:start="645:30" pos:end="645:31">-&gt;</operator><name pos:start="645:32" pos:end="645:39">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="649:5" pos:end="649:46"><expr pos:start="649:5" pos:end="649:45"><name pos:start="649:5" pos:end="649:15"><name pos:start="649:5" pos:end="649:9">avpkt</name><operator pos:start="649:10" pos:end="649:11">-&gt;</operator><name pos:start="649:12" pos:end="649:15">size</name></name> <operator pos:start="649:17" pos:end="649:17">=</operator> <call pos:start="649:19" pos:end="649:40"><name pos:start="649:19" pos:end="649:32">put_bits_count</name><argument_list pos:start="649:33" pos:end="649:40">(<argument pos:start="649:34" pos:end="649:39"><expr pos:start="649:34" pos:end="649:39"><operator pos:start="649:34" pos:end="649:34">&amp;</operator><name pos:start="649:35" pos:end="649:39"><name pos:start="649:35" pos:end="649:35">s</name><operator pos:start="649:36" pos:end="649:37">-&gt;</operator><name pos:start="649:38" pos:end="649:39">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="649:42" pos:end="649:43">&gt;&gt;</operator> <literal type="number" pos:start="649:45" pos:end="649:45">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="651:5" pos:end="651:24"><expr pos:start="651:5" pos:end="651:23"><operator pos:start="651:5" pos:end="651:5">*</operator><name pos:start="651:6" pos:end="651:19">got_packet_ptr</name> <operator pos:start="651:21" pos:end="651:21">=</operator> <literal type="number" pos:start="651:23" pos:end="651:23">1</literal></expr>;</expr_stmt>

    <return pos:start="653:5" pos:end="653:13">return <expr pos:start="653:12" pos:end="653:12"><literal type="number" pos:start="653:12" pos:end="653:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
