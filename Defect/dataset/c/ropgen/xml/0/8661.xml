<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8661.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">gen_cop1_ldst</name><parameter_list pos:start="1:26" pos:end="3:46">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:38">DisasContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">ctx</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:56"><decl pos:start="1:46" pos:end="1:56"><type pos:start="1:46" pos:end="1:56"><name pos:start="1:46" pos:end="1:53">uint32_t</name></type> <name pos:start="1:55" pos:end="1:56">op</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:64"><decl pos:start="1:59" pos:end="1:64"><type pos:start="1:59" pos:end="1:64"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:64">rt</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:32"><decl pos:start="3:27" pos:end="3:32"><type pos:start="3:27" pos:end="3:32"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:32">rs</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:45"><decl pos:start="3:35" pos:end="3:45"><type pos:start="3:35" pos:end="3:45"><name pos:start="3:35" pos:end="3:41">int16_t</name></type> <name pos:start="3:43" pos:end="3:45">imm</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="19:1">{<block_content pos:start="7:5" pos:end="17:5">

    <if_stmt pos:start="7:5" pos:end="17:5"><if pos:start="7:5" pos:end="13:5">if <condition pos:start="7:8" pos:end="7:43">(<expr pos:start="7:9" pos:end="7:42"><name pos:start="7:9" pos:end="7:24"><name pos:start="7:9" pos:end="7:11">ctx</name><operator pos:start="7:12" pos:end="7:13">-&gt;</operator><name pos:start="7:14" pos:end="7:24">CP0_Config1</name></name> <operator pos:start="7:26" pos:end="7:26">&amp;</operator> <operator pos:start="7:28" pos:end="7:28">(</operator><literal type="number" pos:start="7:29" pos:end="7:29">1</literal> <operator pos:start="7:31" pos:end="7:32">&lt;&lt;</operator> <name pos:start="7:34" pos:end="7:41">CP0C1_FP</name><operator pos:start="7:42" pos:end="7:42">)</operator></expr>)</condition> <block pos:start="7:45" pos:end="13:5">{<block_content pos:start="9:9" pos:end="11:43">

        <expr_stmt pos:start="9:9" pos:end="9:31"><expr pos:start="9:9" pos:end="9:30"><call pos:start="9:9" pos:end="9:30"><name pos:start="9:9" pos:end="9:25">check_cp1_enabled</name><argument_list pos:start="9:26" pos:end="9:30">(<argument pos:start="9:27" pos:end="9:29"><expr pos:start="9:27" pos:end="9:29"><name pos:start="9:27" pos:end="9:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:43"><expr pos:start="11:9" pos:end="11:42"><call pos:start="11:9" pos:end="11:42"><name pos:start="11:9" pos:end="11:20">gen_flt_ldst</name><argument_list pos:start="11:21" pos:end="11:42">(<argument pos:start="11:22" pos:end="11:24"><expr pos:start="11:22" pos:end="11:24"><name pos:start="11:22" pos:end="11:24">ctx</name></expr></argument>, <argument pos:start="11:27" pos:end="11:28"><expr pos:start="11:27" pos:end="11:28"><name pos:start="11:27" pos:end="11:28">op</name></expr></argument>, <argument pos:start="11:31" pos:end="11:32"><expr pos:start="11:31" pos:end="11:32"><name pos:start="11:31" pos:end="11:32">rt</name></expr></argument>, <argument pos:start="11:35" pos:end="11:36"><expr pos:start="11:35" pos:end="11:36"><name pos:start="11:35" pos:end="11:36">rs</name></expr></argument>, <argument pos:start="11:39" pos:end="11:41"><expr pos:start="11:39" pos:end="11:41"><name pos:start="11:39" pos:end="11:41">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="13:7" pos:end="17:5">else <block pos:start="13:12" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:49">

        <expr_stmt pos:start="15:9" pos:end="15:49"><expr pos:start="15:9" pos:end="15:48"><call pos:start="15:9" pos:end="15:48"><name pos:start="15:9" pos:end="15:30">generate_exception_err</name><argument_list pos:start="15:31" pos:end="15:48">(<argument pos:start="15:32" pos:end="15:34"><expr pos:start="15:32" pos:end="15:34"><name pos:start="15:32" pos:end="15:34">ctx</name></expr></argument>, <argument pos:start="15:37" pos:end="15:44"><expr pos:start="15:37" pos:end="15:44"><name pos:start="15:37" pos:end="15:44">EXCP_CpU</name></expr></argument>, <argument pos:start="15:47" pos:end="15:47"><expr pos:start="15:47" pos:end="15:47"><literal type="number" pos:start="15:47" pos:end="15:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
