<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2198.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">MPA_encode_frame</name><parameter_list pos:start="1:28" pos:end="3:70">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:66"><decl pos:start="1:52" pos:end="1:66"><type pos:start="1:52" pos:end="1:66"><name pos:start="1:52" pos:end="1:59">AVPacket</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:66">avpkt</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:48"><decl pos:start="3:29" pos:end="3:48"><type pos:start="3:29" pos:end="3:48"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:41">AVFrame</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:48">frame</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:69"><decl pos:start="3:51" pos:end="3:69"><type pos:start="3:51" pos:end="3:69"><name pos:start="3:51" pos:end="3:53">int</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:69">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="75:1">{<block_content pos:start="7:5" pos:end="73:13">

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MpegAudioContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:23">s</name> <init pos:start="7:25" pos:end="7:42">= <expr pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:31">avctx</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:61"><decl pos:start="9:5" pos:end="9:60"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">int16_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:26">samples</name> <init pos:start="9:28" pos:end="9:60">= <expr pos:start="9:30" pos:end="9:60"><operator pos:start="9:30" pos:end="9:30">(</operator><specifier pos:start="9:31" pos:end="9:35">const</specifier> <name pos:start="9:37" pos:end="9:43">int16_t</name> <operator pos:start="9:45" pos:end="9:45">*</operator><operator pos:start="9:46" pos:end="9:46">)</operator><name pos:start="9:47" pos:end="9:60"><name pos:start="9:47" pos:end="9:51">frame</name><operator pos:start="9:52" pos:end="9:53">-&gt;</operator><name pos:start="9:54" pos:end="9:57">data</name><index pos:start="9:58" pos:end="9:60">[<expr pos:start="9:59" pos:end="9:59"><literal type="number" pos:start="9:59" pos:end="9:59">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">short</name></type> <name pos:start="11:11" pos:end="11:40"><name pos:start="11:11" pos:end="11:13">smr</name><index pos:start="11:14" pos:end="11:31">[<expr pos:start="11:15" pos:end="11:30"><name pos:start="11:15" pos:end="11:30">MPA_MAX_CHANNELS</name></expr>]</index><index pos:start="11:32" pos:end="11:40">[<expr pos:start="11:33" pos:end="11:39"><name pos:start="11:33" pos:end="11:39">SBLIMIT</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:55"><decl pos:start="13:5" pos:end="13:54"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">char</name></type> <name pos:start="13:19" pos:end="13:54"><name pos:start="13:19" pos:end="13:27">bit_alloc</name><index pos:start="13:28" pos:end="13:45">[<expr pos:start="13:29" pos:end="13:44"><name pos:start="13:29" pos:end="13:44">MPA_MAX_CHANNELS</name></expr>]</index><index pos:start="13:46" pos:end="13:54">[<expr pos:start="13:47" pos:end="13:53"><name pos:start="13:47" pos:end="13:53">SBLIMIT</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">padding</name></decl>, <decl pos:start="15:18" pos:end="15:18"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:18" pos:end="15:18">i</name></decl>, <decl pos:start="15:21" pos:end="15:23"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:21" pos:end="15:23">ret</name></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="23:5">for<control pos:start="19:8" pos:end="19:33">(<init pos:start="19:9" pos:end="19:12"><expr pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:9">i</name><operator pos:start="19:10" pos:end="19:10">=</operator><literal type="number" pos:start="19:11" pos:end="19:11">0</literal></expr>;</init><condition pos:start="19:13" pos:end="19:29"><expr pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:13">i</name><operator pos:start="19:14" pos:end="19:14">&lt;</operator><name pos:start="19:15" pos:end="19:28"><name pos:start="19:15" pos:end="19:15">s</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:28">nb_channels</name></name></expr>;</condition><incr pos:start="19:30" pos:end="19:32"><expr pos:start="19:30" pos:end="19:32"><name pos:start="19:30" pos:end="19:30">i</name><operator pos:start="19:31" pos:end="19:32">++</operator></expr></incr>)</control> <block pos:start="19:35" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:50">

        <expr_stmt pos:start="21:9" pos:end="21:50"><expr pos:start="21:9" pos:end="21:49"><call pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:14">filter</name><argument_list pos:start="21:15" pos:end="21:49">(<argument pos:start="21:16" pos:end="21:16"><expr pos:start="21:16" pos:end="21:16"><name pos:start="21:16" pos:end="21:16">s</name></expr></argument>, <argument pos:start="21:19" pos:end="21:19"><expr pos:start="21:19" pos:end="21:19"><name pos:start="21:19" pos:end="21:19">i</name></expr></argument>, <argument pos:start="21:22" pos:end="21:32"><expr pos:start="21:22" pos:end="21:32"><name pos:start="21:22" pos:end="21:28">samples</name> <operator pos:start="21:30" pos:end="21:30">+</operator> <name pos:start="21:32" pos:end="21:32">i</name></expr></argument>, <argument pos:start="21:35" pos:end="21:48"><expr pos:start="21:35" pos:end="21:48"><name pos:start="21:35" pos:end="21:48"><name pos:start="21:35" pos:end="21:35">s</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:48">nb_channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="27:5" pos:end="33:5">for<control pos:start="27:8" pos:end="27:33">(<init pos:start="27:9" pos:end="27:12"><expr pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:9">i</name><operator pos:start="27:10" pos:end="27:10">=</operator><literal type="number" pos:start="27:11" pos:end="27:11">0</literal></expr>;</init><condition pos:start="27:13" pos:end="27:29"><expr pos:start="27:13" pos:end="27:28"><name pos:start="27:13" pos:end="27:13">i</name><operator pos:start="27:14" pos:end="27:14">&lt;</operator><name pos:start="27:15" pos:end="27:28"><name pos:start="27:15" pos:end="27:15">s</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:28">nb_channels</name></name></expr>;</condition><incr pos:start="27:30" pos:end="27:32"><expr pos:start="27:30" pos:end="27:32"><name pos:start="27:30" pos:end="27:30">i</name><operator pos:start="27:31" pos:end="27:32">++</operator></expr></incr>)</control> <block pos:start="27:35" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:60">

        <expr_stmt pos:start="29:9" pos:end="31:60"><expr pos:start="29:9" pos:end="31:59"><call pos:start="29:9" pos:end="31:59"><name pos:start="29:9" pos:end="29:29">compute_scale_factors</name><argument_list pos:start="29:30" pos:end="31:59">(<argument pos:start="29:31" pos:end="29:31"><expr pos:start="29:31" pos:end="29:31"><name pos:start="29:31" pos:end="29:31">s</name></expr></argument>, <argument pos:start="29:34" pos:end="29:49"><expr pos:start="29:34" pos:end="29:49"><name pos:start="29:34" pos:end="29:49"><name pos:start="29:34" pos:end="29:34">s</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:46">scale_code</name><index pos:start="29:47" pos:end="29:49">[<expr pos:start="29:48" pos:end="29:48"><name pos:start="29:48" pos:end="29:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="29:52" pos:end="29:70"><expr pos:start="29:52" pos:end="29:70"><name pos:start="29:52" pos:end="29:70"><name pos:start="29:52" pos:end="29:52">s</name><operator pos:start="29:53" pos:end="29:54">-&gt;</operator><name pos:start="29:55" pos:end="29:67">scale_factors</name><index pos:start="29:68" pos:end="29:70">[<expr pos:start="29:69" pos:end="29:69"><name pos:start="29:69" pos:end="29:69">i</name></expr>]</index></name></expr></argument>,

                              <argument pos:start="31:31" pos:end="31:46"><expr pos:start="31:31" pos:end="31:46"><name pos:start="31:31" pos:end="31:46"><name pos:start="31:31" pos:end="31:31">s</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:43">sb_samples</name><index pos:start="31:44" pos:end="31:46">[<expr pos:start="31:45" pos:end="31:45"><name pos:start="31:45" pos:end="31:45">i</name></expr>]</index></name></expr></argument>, <argument pos:start="31:49" pos:end="31:58"><expr pos:start="31:49" pos:end="31:58"><name pos:start="31:49" pos:end="31:58"><name pos:start="31:49" pos:end="31:49">s</name><operator pos:start="31:50" pos:end="31:51">-&gt;</operator><name pos:start="31:52" pos:end="31:58">sblimit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="35:5" pos:end="39:5">for<control pos:start="35:8" pos:end="35:33">(<init pos:start="35:9" pos:end="35:12"><expr pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:9">i</name><operator pos:start="35:10" pos:end="35:10">=</operator><literal type="number" pos:start="35:11" pos:end="35:11">0</literal></expr>;</init><condition pos:start="35:13" pos:end="35:29"><expr pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:13">i</name><operator pos:start="35:14" pos:end="35:14">&lt;</operator><name pos:start="35:15" pos:end="35:28"><name pos:start="35:15" pos:end="35:15">s</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:28">nb_channels</name></name></expr>;</condition><incr pos:start="35:30" pos:end="35:32"><expr pos:start="35:30" pos:end="35:32"><name pos:start="35:30" pos:end="35:30">i</name><operator pos:start="35:31" pos:end="35:32">++</operator></expr></incr>)</control> <block pos:start="35:35" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:41">

        <expr_stmt pos:start="37:9" pos:end="37:41"><expr pos:start="37:9" pos:end="37:40"><call pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:29">psycho_acoustic_model</name><argument_list pos:start="37:30" pos:end="37:40">(<argument pos:start="37:31" pos:end="37:31"><expr pos:start="37:31" pos:end="37:31"><name pos:start="37:31" pos:end="37:31">s</name></expr></argument>, <argument pos:start="37:34" pos:end="37:39"><expr pos:start="37:34" pos:end="37:39"><name pos:start="37:34" pos:end="37:39"><name pos:start="37:34" pos:end="37:36">smr</name><index pos:start="37:37" pos:end="37:39">[<expr pos:start="37:38" pos:end="37:38"><name pos:start="37:38" pos:end="37:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="41:5" pos:end="41:56"><expr pos:start="41:5" pos:end="41:55"><call pos:start="41:5" pos:end="41:55"><name pos:start="41:5" pos:end="41:26">compute_bit_allocation</name><argument_list pos:start="41:27" pos:end="41:55">(<argument pos:start="41:28" pos:end="41:28"><expr pos:start="41:28" pos:end="41:28"><name pos:start="41:28" pos:end="41:28">s</name></expr></argument>, <argument pos:start="41:31" pos:end="41:33"><expr pos:start="41:31" pos:end="41:33"><name pos:start="41:31" pos:end="41:33">smr</name></expr></argument>, <argument pos:start="41:36" pos:end="41:44"><expr pos:start="41:36" pos:end="41:44"><name pos:start="41:36" pos:end="41:44">bit_alloc</name></expr></argument>, <argument pos:start="41:47" pos:end="41:54"><expr pos:start="41:47" pos:end="41:54"><operator pos:start="41:47" pos:end="41:47">&amp;</operator><name pos:start="41:48" pos:end="41:54">padding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:65">(<expr pos:start="45:9" pos:end="45:64"><operator pos:start="45:9" pos:end="45:9">(</operator><name pos:start="45:10" pos:end="45:12">ret</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <call pos:start="45:16" pos:end="45:63"><name pos:start="45:16" pos:end="45:30">ff_alloc_packet</name><argument_list pos:start="45:31" pos:end="45:63">(<argument pos:start="45:32" pos:end="45:36"><expr pos:start="45:32" pos:end="45:36"><name pos:start="45:32" pos:end="45:36">avpkt</name></expr></argument>, <argument pos:start="45:39" pos:end="45:62"><expr pos:start="45:39" pos:end="45:62"><name pos:start="45:39" pos:end="45:62">MPA_MAX_CODED_FRAME_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="45:64" pos:end="45:64">)</operator></expr>)</condition> <block pos:start="45:67" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:19">

        <expr_stmt pos:start="47:9" pos:end="47:69"><expr pos:start="47:9" pos:end="47:68"><call pos:start="47:9" pos:end="47:68"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="47:68">(<argument pos:start="47:16" pos:end="47:20"><expr pos:start="47:16" pos:end="47:20"><name pos:start="47:16" pos:end="47:20">avctx</name></expr></argument>, <argument pos:start="47:23" pos:end="47:34"><expr pos:start="47:23" pos:end="47:34"><name pos:start="47:23" pos:end="47:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:37" pos:end="47:67"><expr pos:start="47:37" pos:end="47:67"><literal type="string" pos:start="47:37" pos:end="47:67">"Error getting output packet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:19">return <expr pos:start="49:16" pos:end="49:18"><name pos:start="49:16" pos:end="49:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:52"><expr pos:start="55:5" pos:end="55:51"><call pos:start="55:5" pos:end="55:51"><name pos:start="55:5" pos:end="55:17">init_put_bits</name><argument_list pos:start="55:18" pos:end="55:51">(<argument pos:start="55:19" pos:end="55:24"><expr pos:start="55:19" pos:end="55:24"><operator pos:start="55:19" pos:end="55:19">&amp;</operator><name pos:start="55:20" pos:end="55:24"><name pos:start="55:20" pos:end="55:20">s</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:24">pb</name></name></expr></argument>, <argument pos:start="55:27" pos:end="55:37"><expr pos:start="55:27" pos:end="55:37"><name pos:start="55:27" pos:end="55:37"><name pos:start="55:27" pos:end="55:31">avpkt</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:37">data</name></name></expr></argument>, <argument pos:start="55:40" pos:end="55:50"><expr pos:start="55:40" pos:end="55:50"><name pos:start="55:40" pos:end="55:50"><name pos:start="55:40" pos:end="55:44">avpkt</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:50">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:40"><expr pos:start="59:5" pos:end="59:39"><call pos:start="59:5" pos:end="59:39"><name pos:start="59:5" pos:end="59:16">encode_frame</name><argument_list pos:start="59:17" pos:end="59:39">(<argument pos:start="59:18" pos:end="59:18"><expr pos:start="59:18" pos:end="59:18"><name pos:start="59:18" pos:end="59:18">s</name></expr></argument>, <argument pos:start="59:21" pos:end="59:29"><expr pos:start="59:21" pos:end="59:29"><name pos:start="59:21" pos:end="59:29">bit_alloc</name></expr></argument>, <argument pos:start="59:32" pos:end="59:38"><expr pos:start="59:32" pos:end="59:38"><name pos:start="59:32" pos:end="59:38">padding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="65:79"><if pos:start="63:5" pos:end="65:79">if <condition pos:start="63:8" pos:end="63:37">(<expr pos:start="63:9" pos:end="63:36"><name pos:start="63:9" pos:end="63:18"><name pos:start="63:9" pos:end="63:13">frame</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:18">pts</name></name> <operator pos:start="63:20" pos:end="63:21">!=</operator> <name pos:start="63:23" pos:end="63:36">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:79"><block_content pos:start="65:9" pos:end="65:79">

        <expr_stmt pos:start="65:9" pos:end="65:79"><expr pos:start="65:9" pos:end="65:78"><name pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:13">avpkt</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:18">pts</name></name> <operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:31"><name pos:start="65:22" pos:end="65:26">frame</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:31">pts</name></name> <operator pos:start="65:33" pos:end="65:33">-</operator> <call pos:start="65:35" pos:end="65:78"><name pos:start="65:35" pos:end="65:57">ff_samples_to_time_base</name><argument_list pos:start="65:58" pos:end="65:78">(<argument pos:start="65:59" pos:end="65:63"><expr pos:start="65:59" pos:end="65:63"><name pos:start="65:59" pos:end="65:63">avctx</name></expr></argument>, <argument pos:start="65:66" pos:end="65:77"><expr pos:start="65:66" pos:end="65:77"><name pos:start="65:66" pos:end="65:77"><name pos:start="65:66" pos:end="65:70">avctx</name><operator pos:start="65:71" pos:end="65:72">-&gt;</operator><name pos:start="65:73" pos:end="65:77">delay</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:45"><expr pos:start="69:5" pos:end="69:44"><name pos:start="69:5" pos:end="69:15"><name pos:start="69:5" pos:end="69:9">avpkt</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:15">size</name></name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:40"><name pos:start="69:19" pos:end="69:32">put_bits_count</name><argument_list pos:start="69:33" pos:end="69:40">(<argument pos:start="69:34" pos:end="69:39"><expr pos:start="69:34" pos:end="69:39"><operator pos:start="69:34" pos:end="69:34">&amp;</operator><name pos:start="69:35" pos:end="69:39"><name pos:start="69:35" pos:end="69:35">s</name><operator pos:start="69:36" pos:end="69:37">-&gt;</operator><name pos:start="69:38" pos:end="69:39">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="69:42" pos:end="69:42">/</operator> <literal type="number" pos:start="69:44" pos:end="69:44">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:24"><expr pos:start="71:5" pos:end="71:23"><operator pos:start="71:5" pos:end="71:5">*</operator><name pos:start="71:6" pos:end="71:19">got_packet_ptr</name> <operator pos:start="71:21" pos:end="71:21">=</operator> <literal type="number" pos:start="71:23" pos:end="71:23">1</literal></expr>;</expr_stmt>

    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
