<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13964.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">input_linux_event_keyboard</name><parameter_list pos:start="1:39" pos:end="1:52">(<parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:45"><name pos:start="1:40" pos:end="1:43">void</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:51">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">InputLinux</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">il</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:22">input_event</name></name></type> <name pos:start="7:24" pos:end="7:28">event</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">rc</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="37:5">for <control pos:start="13:9" pos:end="13:12">(<init pos:start="13:10" pos:end="13:10">;</init><condition pos:start="13:11" pos:end="13:11">;</condition><incr/>)</control> <block pos:start="13:14" pos:end="37:5">{<block_content pos:start="15:9" pos:end="35:48">

        <expr_stmt pos:start="15:9" pos:end="15:49"><expr pos:start="15:9" pos:end="15:48"><name pos:start="15:9" pos:end="15:10">rc</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:48"><name pos:start="15:14" pos:end="15:17">read</name><argument_list pos:start="15:18" pos:end="15:48">(<argument pos:start="15:19" pos:end="15:24"><expr pos:start="15:19" pos:end="15:24"><name pos:start="15:19" pos:end="15:24"><name pos:start="15:19" pos:end="15:20">il</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:24">fd</name></name></expr></argument>, <argument pos:start="15:27" pos:end="15:32"><expr pos:start="15:27" pos:end="15:32"><operator pos:start="15:27" pos:end="15:27">&amp;</operator><name pos:start="15:28" pos:end="15:32">event</name></expr></argument>, <argument pos:start="15:35" pos:end="15:47"><expr pos:start="15:35" pos:end="15:47"><sizeof pos:start="15:35" pos:end="15:47">sizeof<argument_list pos:start="15:41" pos:end="15:47">(<argument pos:start="15:42" pos:end="15:46"><expr pos:start="15:42" pos:end="15:46"><name pos:start="15:42" pos:end="15:46">event</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="31:9"><if pos:start="17:9" pos:end="31:9">if <condition pos:start="17:12" pos:end="17:32">(<expr pos:start="17:13" pos:end="17:31"><name pos:start="17:13" pos:end="17:14">rc</name> <operator pos:start="17:16" pos:end="17:17">!=</operator> <sizeof pos:start="17:19" pos:end="17:31">sizeof<argument_list pos:start="17:25" pos:end="17:31">(<argument pos:start="17:26" pos:end="17:30"><expr pos:start="17:26" pos:end="17:30"><name pos:start="17:26" pos:end="17:30">event</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="17:34" pos:end="31:9">{<block_content pos:start="19:13" pos:end="29:18">

            <if_stmt pos:start="19:13" pos:end="27:13"><if pos:start="19:13" pos:end="27:13">if <condition pos:start="19:16" pos:end="19:42">(<expr pos:start="19:17" pos:end="19:41"><name pos:start="19:17" pos:end="19:18">rc</name> <operator pos:start="19:20" pos:end="19:20">&lt;</operator> <literal type="number" pos:start="19:22" pos:end="19:22">0</literal> <operator pos:start="19:24" pos:end="19:25">&amp;&amp;</operator> <name pos:start="19:27" pos:end="19:31">errno</name> <operator pos:start="19:33" pos:end="19:34">!=</operator> <name pos:start="19:36" pos:end="19:41">EAGAIN</name></expr>)</condition> <block pos:start="19:44" pos:end="27:13">{<block_content pos:start="21:17" pos:end="25:30">

                <expr_stmt pos:start="21:17" pos:end="21:77"><expr pos:start="21:17" pos:end="21:76"><call pos:start="21:17" pos:end="21:76"><name pos:start="21:17" pos:end="21:23">fprintf</name><argument_list pos:start="21:24" pos:end="21:76">(<argument pos:start="21:25" pos:end="21:30"><expr pos:start="21:25" pos:end="21:30"><name pos:start="21:25" pos:end="21:30">stderr</name></expr></argument>, <argument pos:start="21:33" pos:end="21:48"><expr pos:start="21:33" pos:end="21:48"><literal type="string" pos:start="21:33" pos:end="21:48">"%s: read: %s\n"</literal></expr></argument>, <argument pos:start="21:51" pos:end="21:58"><expr pos:start="21:51" pos:end="21:58"><name pos:start="21:51" pos:end="21:58">__func__</name></expr></argument>, <argument pos:start="21:61" pos:end="21:75"><expr pos:start="21:61" pos:end="21:75"><call pos:start="21:61" pos:end="21:75"><name pos:start="21:61" pos:end="21:68">strerror</name><argument_list pos:start="21:69" pos:end="21:75">(<argument pos:start="21:70" pos:end="21:74"><expr pos:start="21:70" pos:end="21:74"><name pos:start="21:70" pos:end="21:74">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="23:17" pos:end="23:62"><expr pos:start="23:17" pos:end="23:61"><call pos:start="23:17" pos:end="23:61"><name pos:start="23:17" pos:end="23:35">qemu_set_fd_handler</name><argument_list pos:start="23:36" pos:end="23:61">(<argument pos:start="23:37" pos:end="23:42"><expr pos:start="23:37" pos:end="23:42"><name pos:start="23:37" pos:end="23:42"><name pos:start="23:37" pos:end="23:38">il</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:42">fd</name></name></expr></argument>, <argument pos:start="23:45" pos:end="23:48"><expr pos:start="23:45" pos:end="23:48"><name pos:start="23:45" pos:end="23:48">NULL</name></expr></argument>, <argument pos:start="23:51" pos:end="23:54"><expr pos:start="23:51" pos:end="23:54"><name pos:start="23:51" pos:end="23:54">NULL</name></expr></argument>, <argument pos:start="23:57" pos:end="23:60"><expr pos:start="23:57" pos:end="23:60"><name pos:start="23:57" pos:end="23:60">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="25:17" pos:end="25:30"><expr pos:start="25:17" pos:end="25:29"><call pos:start="25:17" pos:end="25:29"><name pos:start="25:17" pos:end="25:21">close</name><argument_list pos:start="25:22" pos:end="25:29">(<argument pos:start="25:23" pos:end="25:28"><expr pos:start="25:23" pos:end="25:28"><name pos:start="25:23" pos:end="25:28"><name pos:start="25:23" pos:end="25:24">il</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:28">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="29:13" pos:end="29:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:48"><expr pos:start="35:9" pos:end="35:47"><call pos:start="35:9" pos:end="35:47"><name pos:start="35:9" pos:end="35:35">input_linux_handle_keyboard</name><argument_list pos:start="35:36" pos:end="35:47">(<argument pos:start="35:37" pos:end="35:38"><expr pos:start="35:37" pos:end="35:38"><name pos:start="35:37" pos:end="35:38">il</name></expr></argument>, <argument pos:start="35:41" pos:end="35:46"><expr pos:start="35:41" pos:end="35:46"><operator pos:start="35:41" pos:end="35:41">&amp;</operator><name pos:start="35:42" pos:end="35:46">event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
