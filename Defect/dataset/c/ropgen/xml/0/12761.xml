<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12761.c" pos:tabs="8"><function pos:start="1:1" pos:end="225:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">readline_handle_byte</name><parameter_list pos:start="1:26" pos:end="1:52">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:39">ReadLineState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">rs</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:51"><decl pos:start="1:46" pos:end="1:51"><type pos:start="1:46" pos:end="1:51"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:51">ch</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="225:1">{<block_content pos:start="5:5" pos:end="223:24">

    <switch pos:start="5:5" pos:end="221:5">switch<condition pos:start="5:11" pos:end="5:25">(<expr pos:start="5:12" pos:end="5:24"><name pos:start="5:12" pos:end="5:24"><name pos:start="5:12" pos:end="5:13">rs</name><operator pos:start="5:14" pos:end="5:15">-&gt;</operator><name pos:start="5:16" pos:end="5:24">esc_state</name></name></expr>)</condition> <block pos:start="5:27" pos:end="221:5">{<block_content pos:start="7:5" pos:end="219:14">

    <case pos:start="7:5" pos:end="7:17">case <expr pos:start="7:10" pos:end="7:16"><name pos:start="7:10" pos:end="7:16">IS_NORM</name></expr>:</case>

        <switch pos:start="9:9" pos:end="97:9">switch<condition pos:start="9:15" pos:end="9:18">(<expr pos:start="9:16" pos:end="9:17"><name pos:start="9:16" pos:end="9:17">ch</name></expr>)</condition> <block pos:start="9:20" pos:end="97:9">{<block_content pos:start="11:9" pos:end="95:18">

        <case pos:start="11:9" pos:end="11:15">case <expr pos:start="11:14" pos:end="11:14"><literal type="number" pos:start="11:14" pos:end="11:14">1</literal></expr>:</case>

            <expr_stmt pos:start="13:13" pos:end="13:29"><expr pos:start="13:13" pos:end="13:28"><call pos:start="13:13" pos:end="13:28"><name pos:start="13:13" pos:end="13:24">readline_bol</name><argument_list pos:start="13:25" pos:end="13:28">(<argument pos:start="13:26" pos:end="13:27"><expr pos:start="13:26" pos:end="13:27"><name pos:start="13:26" pos:end="13:27">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="15:13" pos:end="15:18">break;</break>

        <case pos:start="17:9" pos:end="17:15">case <expr pos:start="17:14" pos:end="17:14"><literal type="number" pos:start="17:14" pos:end="17:14">4</literal></expr>:</case>

            <expr_stmt pos:start="19:13" pos:end="19:37"><expr pos:start="19:13" pos:end="19:36"><call pos:start="19:13" pos:end="19:36"><name pos:start="19:13" pos:end="19:32">readline_delete_char</name><argument_list pos:start="19:33" pos:end="19:36">(<argument pos:start="19:34" pos:end="19:35"><expr pos:start="19:34" pos:end="19:35"><name pos:start="19:34" pos:end="19:35">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="21:13" pos:end="21:18">break;</break>

        <case pos:start="23:9" pos:end="23:15">case <expr pos:start="23:14" pos:end="23:14"><literal type="number" pos:start="23:14" pos:end="23:14">5</literal></expr>:</case>

            <expr_stmt pos:start="25:13" pos:end="25:29"><expr pos:start="25:13" pos:end="25:28"><call pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:24">readline_eol</name><argument_list pos:start="25:25" pos:end="25:28">(<argument pos:start="25:26" pos:end="25:27"><expr pos:start="25:26" pos:end="25:27"><name pos:start="25:26" pos:end="25:27">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="27:13" pos:end="27:18">break;</break>

        <case pos:start="29:9" pos:end="29:15">case <expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">9</literal></expr>:</case>

            <expr_stmt pos:start="31:13" pos:end="31:36"><expr pos:start="31:13" pos:end="31:35"><call pos:start="31:13" pos:end="31:35"><name pos:start="31:13" pos:end="31:31">readline_completion</name><argument_list pos:start="31:32" pos:end="31:35">(<argument pos:start="31:33" pos:end="31:34"><expr pos:start="31:33" pos:end="31:34"><name pos:start="31:33" pos:end="31:34">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        <case pos:start="35:9" pos:end="35:16">case <expr pos:start="35:14" pos:end="35:15"><literal type="number" pos:start="35:14" pos:end="35:15">10</literal></expr>:</case>

        <case pos:start="37:9" pos:end="37:16">case <expr pos:start="37:14" pos:end="37:15"><literal type="number" pos:start="37:14" pos:end="37:15">13</literal></expr>:</case>

            <expr_stmt pos:start="39:13" pos:end="39:49"><expr pos:start="39:13" pos:end="39:48"><name pos:start="39:13" pos:end="39:41"><name pos:start="39:13" pos:end="39:14">rs</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:23">cmd_buf</name><index pos:start="39:24" pos:end="39:41">[<expr pos:start="39:25" pos:end="39:40"><name pos:start="39:25" pos:end="39:40"><name pos:start="39:25" pos:end="39:26">rs</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:40">cmd_buf_size</name></name></expr>]</index></name> <operator pos:start="39:43" pos:end="39:43">=</operator> <literal type="char" pos:start="39:45" pos:end="39:48">'\0'</literal></expr>;</expr_stmt>

            <if_stmt pos:start="41:13" pos:end="43:51"><if pos:start="41:13" pos:end="43:51">if <condition pos:start="41:16" pos:end="41:35">(<expr pos:start="41:17" pos:end="41:34"><operator pos:start="41:17" pos:end="41:17">!</operator><name pos:start="41:18" pos:end="41:34"><name pos:start="41:18" pos:end="41:19">rs</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:34">read_password</name></name></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="43:51"><block_content pos:start="43:17" pos:end="43:51">

                <expr_stmt pos:start="43:17" pos:end="43:51"><expr pos:start="43:17" pos:end="43:50"><call pos:start="43:17" pos:end="43:50"><name pos:start="43:17" pos:end="43:33">readline_hist_add</name><argument_list pos:start="43:34" pos:end="43:50">(<argument pos:start="43:35" pos:end="43:36"><expr pos:start="43:35" pos:end="43:36"><name pos:start="43:35" pos:end="43:36">rs</name></expr></argument>, <argument pos:start="43:39" pos:end="43:49"><expr pos:start="43:39" pos:end="43:49"><name pos:start="43:39" pos:end="43:49"><name pos:start="43:39" pos:end="43:40">rs</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:49">cmd_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:42"><expr pos:start="45:13" pos:end="45:41"><call pos:start="45:13" pos:end="45:41"><name pos:start="45:13" pos:end="45:26">monitor_printf</name><argument_list pos:start="45:27" pos:end="45:41">(<argument pos:start="45:28" pos:end="45:34"><expr pos:start="45:28" pos:end="45:34"><name pos:start="45:28" pos:end="45:34"><name pos:start="45:28" pos:end="45:29">rs</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:34">mon</name></name></expr></argument>, <argument pos:start="45:37" pos:end="45:40"><expr pos:start="45:37" pos:end="45:40"><literal type="string" pos:start="45:37" pos:end="45:40">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:34"><expr pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:29"><name pos:start="47:13" pos:end="47:14">rs</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:29">cmd_buf_index</name></name> <operator pos:start="47:31" pos:end="47:31">=</operator> <literal type="number" pos:start="47:33" pos:end="47:33">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:33"><expr pos:start="49:13" pos:end="49:32"><name pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:14">rs</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:28">cmd_buf_size</name></name> <operator pos:start="49:30" pos:end="49:30">=</operator> <literal type="number" pos:start="49:32" pos:end="49:32">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:39"><expr pos:start="51:13" pos:end="51:38"><name pos:start="51:13" pos:end="51:34"><name pos:start="51:13" pos:end="51:14">rs</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:34">last_cmd_buf_index</name></name> <operator pos:start="51:36" pos:end="51:36">=</operator> <literal type="number" pos:start="51:38" pos:end="51:38">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:38"><expr pos:start="53:13" pos:end="53:37"><name pos:start="53:13" pos:end="53:33"><name pos:start="53:13" pos:end="53:14">rs</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:33">last_cmd_buf_size</name></name> <operator pos:start="53:35" pos:end="53:35">=</operator> <literal type="number" pos:start="53:37" pos:end="53:37">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:73"><expr pos:start="55:13" pos:end="55:72"><call pos:start="55:13" pos:end="55:72"><name pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:14">rs</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:29">readline_func</name></name><argument_list pos:start="55:30" pos:end="55:72">(<argument pos:start="55:31" pos:end="55:37"><expr pos:start="55:31" pos:end="55:37"><name pos:start="55:31" pos:end="55:37"><name pos:start="55:31" pos:end="55:32">rs</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:37">mon</name></name></expr></argument>, <argument pos:start="55:40" pos:end="55:50"><expr pos:start="55:40" pos:end="55:50"><name pos:start="55:40" pos:end="55:50"><name pos:start="55:40" pos:end="55:41">rs</name><operator pos:start="55:42" pos:end="55:43">-&gt;</operator><name pos:start="55:44" pos:end="55:50">cmd_buf</name></name></expr></argument>, <argument pos:start="55:53" pos:end="55:71"><expr pos:start="55:53" pos:end="55:71"><name pos:start="55:53" pos:end="55:71"><name pos:start="55:53" pos:end="55:54">rs</name><operator pos:start="55:55" pos:end="55:56">-&gt;</operator><name pos:start="55:57" pos:end="55:71">readline_opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:16">case <expr pos:start="59:14" pos:end="59:15"><literal type="number" pos:start="59:14" pos:end="59:15">23</literal></expr>:</case>

            <comment type="block" pos:start="61:13" pos:end="61:20">/* ^W */</comment>

            <expr_stmt pos:start="63:13" pos:end="63:34"><expr pos:start="63:13" pos:end="63:33"><call pos:start="63:13" pos:end="63:33"><name pos:start="63:13" pos:end="63:29">readline_backword</name><argument_list pos:start="63:30" pos:end="63:33">(<argument pos:start="63:31" pos:end="63:32"><expr pos:start="63:31" pos:end="63:32"><name pos:start="63:31" pos:end="63:32">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        <case pos:start="67:9" pos:end="67:16">case <expr pos:start="67:14" pos:end="67:15"><literal type="number" pos:start="67:14" pos:end="67:15">27</literal></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="69:35"><expr pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:14">rs</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:25">esc_state</name></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <name pos:start="69:29" pos:end="69:34">IS_ESC</name></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        <case pos:start="73:9" pos:end="73:17">case <expr pos:start="73:14" pos:end="73:16"><literal type="number" pos:start="73:14" pos:end="73:16">127</literal></expr>:</case>

        <case pos:start="75:9" pos:end="75:15">case <expr pos:start="75:14" pos:end="75:14"><literal type="number" pos:start="75:14" pos:end="75:14">8</literal></expr>:</case>

            <expr_stmt pos:start="77:13" pos:end="77:35"><expr pos:start="77:13" pos:end="77:34"><call pos:start="77:13" pos:end="77:34"><name pos:start="77:13" pos:end="77:30">readline_backspace</name><argument_list pos:start="77:31" pos:end="77:34">(<argument pos:start="77:32" pos:end="77:33"><expr pos:start="77:32" pos:end="77:33"><name pos:start="77:32" pos:end="77:33">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

	<case pos:start="81:9" pos:end="81:17">case <expr pos:start="81:14" pos:end="81:16"><literal type="number" pos:start="81:14" pos:end="81:16">155</literal></expr>:</case>

            <expr_stmt pos:start="83:13" pos:end="83:35"><expr pos:start="83:13" pos:end="83:34"><name pos:start="83:13" pos:end="83:25"><name pos:start="83:13" pos:end="83:14">rs</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:25">esc_state</name></name> <operator pos:start="83:27" pos:end="83:27">=</operator> <name pos:start="83:29" pos:end="83:34">IS_CSI</name></expr>;</expr_stmt>

	    <break pos:start="85:13" pos:end="85:18">break;</break>

        <default pos:start="87:9" pos:end="87:16">default:</default>

            <if_stmt pos:start="89:13" pos:end="93:13"><if pos:start="89:13" pos:end="93:13">if <condition pos:start="89:16" pos:end="89:25">(<expr pos:start="89:17" pos:end="89:24"><name pos:start="89:17" pos:end="89:18">ch</name> <operator pos:start="89:20" pos:end="89:21">&gt;=</operator> <literal type="number" pos:start="89:23" pos:end="89:24">32</literal></expr>)</condition> <block pos:start="89:27" pos:end="93:13">{<block_content pos:start="91:17" pos:end="91:45">

                <expr_stmt pos:start="91:17" pos:end="91:45"><expr pos:start="91:17" pos:end="91:44"><call pos:start="91:17" pos:end="91:44"><name pos:start="91:17" pos:end="91:36">readline_insert_char</name><argument_list pos:start="91:37" pos:end="91:44">(<argument pos:start="91:38" pos:end="91:39"><expr pos:start="91:38" pos:end="91:39"><name pos:start="91:38" pos:end="91:39">rs</name></expr></argument>, <argument pos:start="91:42" pos:end="91:43"><expr pos:start="91:42" pos:end="91:43"><name pos:start="91:42" pos:end="91:43">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="95:13" pos:end="95:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    <case pos:start="101:5" pos:end="101:16">case <expr pos:start="101:10" pos:end="101:15"><name pos:start="101:10" pos:end="101:15">IS_ESC</name></expr>:</case>

        <if_stmt pos:start="103:9" pos:end="119:9"><if pos:start="103:9" pos:end="109:9">if <condition pos:start="103:12" pos:end="103:22">(<expr pos:start="103:13" pos:end="103:21"><name pos:start="103:13" pos:end="103:14">ch</name> <operator pos:start="103:16" pos:end="103:17">==</operator> <literal type="char" pos:start="103:19" pos:end="103:21">'['</literal></expr>)</condition> <block pos:start="103:24" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:30">

            <expr_stmt pos:start="105:13" pos:end="105:35"><expr pos:start="105:13" pos:end="105:34"><name pos:start="105:13" pos:end="105:25"><name pos:start="105:13" pos:end="105:14">rs</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:25">esc_state</name></name> <operator pos:start="105:27" pos:end="105:27">=</operator> <name pos:start="105:29" pos:end="105:34">IS_CSI</name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:30"><expr pos:start="107:13" pos:end="107:29"><name pos:start="107:13" pos:end="107:25"><name pos:start="107:13" pos:end="107:14">rs</name><operator pos:start="107:15" pos:end="107:16">-&gt;</operator><name pos:start="107:17" pos:end="107:25">esc_param</name></name> <operator pos:start="107:27" pos:end="107:27">=</operator> <literal type="number" pos:start="107:29" pos:end="107:29">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="109:11" pos:end="115:9">else if <condition pos:start="109:19" pos:end="109:29">(<expr pos:start="109:20" pos:end="109:28"><name pos:start="109:20" pos:end="109:21">ch</name> <operator pos:start="109:23" pos:end="109:24">==</operator> <literal type="char" pos:start="109:26" pos:end="109:28">'O'</literal></expr>)</condition> <block pos:start="109:31" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:30">

            <expr_stmt pos:start="111:13" pos:end="111:35"><expr pos:start="111:13" pos:end="111:34"><name pos:start="111:13" pos:end="111:25"><name pos:start="111:13" pos:end="111:14">rs</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:25">esc_state</name></name> <operator pos:start="111:27" pos:end="111:27">=</operator> <name pos:start="111:29" pos:end="111:34">IS_SS3</name></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:30"><expr pos:start="113:13" pos:end="113:29"><name pos:start="113:13" pos:end="113:25"><name pos:start="113:13" pos:end="113:14">rs</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:25">esc_param</name></name> <operator pos:start="113:27" pos:end="113:27">=</operator> <literal type="number" pos:start="113:29" pos:end="113:29">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="115:11" pos:end="119:9">else <block pos:start="115:16" pos:end="119:9">{<block_content pos:start="117:13" pos:end="117:36">

            <expr_stmt pos:start="117:13" pos:end="117:36"><expr pos:start="117:13" pos:end="117:35"><name pos:start="117:13" pos:end="117:25"><name pos:start="117:13" pos:end="117:14">rs</name><operator pos:start="117:15" pos:end="117:16">-&gt;</operator><name pos:start="117:17" pos:end="117:25">esc_state</name></name> <operator pos:start="117:27" pos:end="117:27">=</operator> <name pos:start="117:29" pos:end="117:35">IS_NORM</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    <case pos:start="123:5" pos:end="123:16">case <expr pos:start="123:10" pos:end="123:15"><name pos:start="123:10" pos:end="123:15">IS_CSI</name></expr>:</case>

        <switch pos:start="125:9" pos:end="191:9">switch<condition pos:start="125:15" pos:end="125:18">(<expr pos:start="125:16" pos:end="125:17"><name pos:start="125:16" pos:end="125:17">ch</name></expr>)</condition> <block pos:start="125:20" pos:end="191:9">{<block_content pos:start="127:9" pos:end="189:18">

	<case pos:start="127:9" pos:end="127:17">case <expr pos:start="127:14" pos:end="127:16"><literal type="char" pos:start="127:14" pos:end="127:16">'A'</literal></expr>:</case>

	<case pos:start="129:9" pos:end="129:17">case <expr pos:start="129:14" pos:end="129:16"><literal type="char" pos:start="129:14" pos:end="129:16">'F'</literal></expr>:</case>

	    <expr_stmt pos:start="131:13" pos:end="131:33"><expr pos:start="131:13" pos:end="131:32"><call pos:start="131:13" pos:end="131:32"><name pos:start="131:13" pos:end="131:28">readline_up_char</name><argument_list pos:start="131:29" pos:end="131:32">(<argument pos:start="131:30" pos:end="131:31"><expr pos:start="131:30" pos:end="131:31"><name pos:start="131:30" pos:end="131:31">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <break pos:start="133:13" pos:end="133:18">break;</break>

	<case pos:start="135:9" pos:end="135:17">case <expr pos:start="135:14" pos:end="135:16"><literal type="char" pos:start="135:14" pos:end="135:16">'B'</literal></expr>:</case>

	<case pos:start="137:9" pos:end="137:17">case <expr pos:start="137:14" pos:end="137:16"><literal type="char" pos:start="137:14" pos:end="137:16">'E'</literal></expr>:</case>

	    <expr_stmt pos:start="139:13" pos:end="139:35"><expr pos:start="139:13" pos:end="139:34"><call pos:start="139:13" pos:end="139:34"><name pos:start="139:13" pos:end="139:30">readline_down_char</name><argument_list pos:start="139:31" pos:end="139:34">(<argument pos:start="139:32" pos:end="139:33"><expr pos:start="139:32" pos:end="139:33"><name pos:start="139:32" pos:end="139:33">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <break pos:start="141:13" pos:end="141:18">break;</break>

        <case pos:start="143:9" pos:end="143:17">case <expr pos:start="143:14" pos:end="143:16"><literal type="char" pos:start="143:14" pos:end="143:16">'D'</literal></expr>:</case>

            <expr_stmt pos:start="145:13" pos:end="145:39"><expr pos:start="145:13" pos:end="145:38"><call pos:start="145:13" pos:end="145:38"><name pos:start="145:13" pos:end="145:34">readline_backward_char</name><argument_list pos:start="145:35" pos:end="145:38">(<argument pos:start="145:36" pos:end="145:37"><expr pos:start="145:36" pos:end="145:37"><name pos:start="145:36" pos:end="145:37">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="147:13" pos:end="147:18">break;</break>

        <case pos:start="149:9" pos:end="149:17">case <expr pos:start="149:14" pos:end="149:16"><literal type="char" pos:start="149:14" pos:end="149:16">'C'</literal></expr>:</case>

            <expr_stmt pos:start="151:13" pos:end="151:38"><expr pos:start="151:13" pos:end="151:37"><call pos:start="151:13" pos:end="151:37"><name pos:start="151:13" pos:end="151:33">readline_forward_char</name><argument_list pos:start="151:34" pos:end="151:37">(<argument pos:start="151:35" pos:end="151:36"><expr pos:start="151:35" pos:end="151:36"><name pos:start="151:35" pos:end="151:36">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="153:13" pos:end="153:18">break;</break>

        <case pos:start="155:9" pos:end="155:25">case <expr pos:start="155:14" pos:end="155:24"><literal type="char" pos:start="155:14" pos:end="155:16">'0'</literal> <operator pos:start="155:18" pos:end="155:20">...</operator> <literal type="char" pos:start="155:22" pos:end="155:24">'9'</literal></expr>:</case>

            <expr_stmt pos:start="157:13" pos:end="157:60"><expr pos:start="157:13" pos:end="157:59"><name pos:start="157:13" pos:end="157:25"><name pos:start="157:13" pos:end="157:14">rs</name><operator pos:start="157:15" pos:end="157:16">-&gt;</operator><name pos:start="157:17" pos:end="157:25">esc_param</name></name> <operator pos:start="157:27" pos:end="157:27">=</operator> <name pos:start="157:29" pos:end="157:41"><name pos:start="157:29" pos:end="157:30">rs</name><operator pos:start="157:31" pos:end="157:32">-&gt;</operator><name pos:start="157:33" pos:end="157:41">esc_param</name></name> <operator pos:start="157:43" pos:end="157:43">*</operator> <literal type="number" pos:start="157:45" pos:end="157:48">10</literal> <operator pos:start="157:48" pos:end="157:48">+</operator> <operator pos:start="157:50" pos:end="157:50">(</operator><name pos:start="157:51" pos:end="157:52">ch</name> <operator pos:start="157:54" pos:end="157:54">-</operator> <literal type="char" pos:start="157:56" pos:end="157:58">'0'</literal><operator pos:start="157:59" pos:end="157:59">)</operator></expr>;</expr_stmt>

            <goto pos:start="159:13" pos:end="159:25">goto <name pos:start="159:18" pos:end="159:24">the_end</name>;</goto>

        <case pos:start="161:9" pos:end="161:17">case <expr pos:start="161:14" pos:end="161:16"><literal type="char" pos:start="161:14" pos:end="161:16">'~'</literal></expr>:</case>

            <switch pos:start="163:13" pos:end="183:13">switch<condition pos:start="163:19" pos:end="163:33">(<expr pos:start="163:20" pos:end="163:32"><name pos:start="163:20" pos:end="163:32"><name pos:start="163:20" pos:end="163:21">rs</name><operator pos:start="163:22" pos:end="163:23">-&gt;</operator><name pos:start="163:24" pos:end="163:32">esc_param</name></name></expr>)</condition> <block pos:start="163:35" pos:end="183:13">{<block_content pos:start="165:13" pos:end="181:22">

            <case pos:start="165:13" pos:end="165:19">case <expr pos:start="165:18" pos:end="165:18"><literal type="number" pos:start="165:18" pos:end="165:18">1</literal></expr>:</case>

                <expr_stmt pos:start="167:17" pos:end="167:33"><expr pos:start="167:17" pos:end="167:32"><call pos:start="167:17" pos:end="167:32"><name pos:start="167:17" pos:end="167:28">readline_bol</name><argument_list pos:start="167:29" pos:end="167:32">(<argument pos:start="167:30" pos:end="167:31"><expr pos:start="167:30" pos:end="167:31"><name pos:start="167:30" pos:end="167:31">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="169:17" pos:end="169:22">break;</break>

            <case pos:start="171:13" pos:end="171:19">case <expr pos:start="171:18" pos:end="171:18"><literal type="number" pos:start="171:18" pos:end="171:18">3</literal></expr>:</case>

                <expr_stmt pos:start="173:17" pos:end="173:41"><expr pos:start="173:17" pos:end="173:40"><call pos:start="173:17" pos:end="173:40"><name pos:start="173:17" pos:end="173:36">readline_delete_char</name><argument_list pos:start="173:37" pos:end="173:40">(<argument pos:start="173:38" pos:end="173:39"><expr pos:start="173:38" pos:end="173:39"><name pos:start="173:38" pos:end="173:39">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="175:17" pos:end="175:22">break;</break>

            <case pos:start="177:13" pos:end="177:19">case <expr pos:start="177:18" pos:end="177:18"><literal type="number" pos:start="177:18" pos:end="177:18">4</literal></expr>:</case>

                <expr_stmt pos:start="179:17" pos:end="179:33"><expr pos:start="179:17" pos:end="179:32"><call pos:start="179:17" pos:end="179:32"><name pos:start="179:17" pos:end="179:28">readline_eol</name><argument_list pos:start="179:29" pos:end="179:32">(<argument pos:start="179:30" pos:end="179:31"><expr pos:start="179:30" pos:end="179:31"><name pos:start="179:30" pos:end="179:31">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="181:17" pos:end="181:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="185:13" pos:end="185:18">break;</break>

        <default pos:start="187:9" pos:end="187:16">default:</default>

            <break pos:start="189:13" pos:end="189:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="193:9" pos:end="193:32"><expr pos:start="193:9" pos:end="193:31"><name pos:start="193:9" pos:end="193:21"><name pos:start="193:9" pos:end="193:10">rs</name><operator pos:start="193:11" pos:end="193:12">-&gt;</operator><name pos:start="193:13" pos:end="193:21">esc_state</name></name> <operator pos:start="193:23" pos:end="193:23">=</operator> <name pos:start="193:25" pos:end="193:31">IS_NORM</name></expr>;</expr_stmt>

    <label pos:start="195:5" pos:end="195:12"><name pos:start="195:5" pos:end="195:11">the_end</name>:</label>

        <break pos:start="197:9" pos:end="197:14">break;</break>

    <case pos:start="199:5" pos:end="199:16">case <expr pos:start="199:10" pos:end="199:15"><name pos:start="199:10" pos:end="199:15">IS_SS3</name></expr>:</case>

        <switch pos:start="201:9" pos:end="215:9">switch<condition pos:start="201:15" pos:end="201:18">(<expr pos:start="201:16" pos:end="201:17"><name pos:start="201:16" pos:end="201:17">ch</name></expr>)</condition> <block pos:start="201:20" pos:end="215:9">{<block_content pos:start="203:9" pos:end="213:18">

        <case pos:start="203:9" pos:end="203:17">case <expr pos:start="203:14" pos:end="203:16"><literal type="char" pos:start="203:14" pos:end="203:16">'F'</literal></expr>:</case>

            <expr_stmt pos:start="205:13" pos:end="205:29"><expr pos:start="205:13" pos:end="205:28"><call pos:start="205:13" pos:end="205:28"><name pos:start="205:13" pos:end="205:24">readline_eol</name><argument_list pos:start="205:25" pos:end="205:28">(<argument pos:start="205:26" pos:end="205:27"><expr pos:start="205:26" pos:end="205:27"><name pos:start="205:26" pos:end="205:27">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="207:13" pos:end="207:18">break;</break>

        <case pos:start="209:9" pos:end="209:17">case <expr pos:start="209:14" pos:end="209:16"><literal type="char" pos:start="209:14" pos:end="209:16">'H'</literal></expr>:</case>

            <expr_stmt pos:start="211:13" pos:end="211:29"><expr pos:start="211:13" pos:end="211:28"><call pos:start="211:13" pos:end="211:28"><name pos:start="211:13" pos:end="211:24">readline_bol</name><argument_list pos:start="211:25" pos:end="211:28">(<argument pos:start="211:26" pos:end="211:27"><expr pos:start="211:26" pos:end="211:27"><name pos:start="211:26" pos:end="211:27">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="213:13" pos:end="213:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="217:9" pos:end="217:32"><expr pos:start="217:9" pos:end="217:31"><name pos:start="217:9" pos:end="217:21"><name pos:start="217:9" pos:end="217:10">rs</name><operator pos:start="217:11" pos:end="217:12">-&gt;</operator><name pos:start="217:13" pos:end="217:21">esc_state</name></name> <operator pos:start="217:23" pos:end="217:23">=</operator> <name pos:start="217:25" pos:end="217:31">IS_NORM</name></expr>;</expr_stmt>

        <break pos:start="219:9" pos:end="219:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="223:5" pos:end="223:24"><expr pos:start="223:5" pos:end="223:23"><call pos:start="223:5" pos:end="223:23"><name pos:start="223:5" pos:end="223:19">readline_update</name><argument_list pos:start="223:20" pos:end="223:23">(<argument pos:start="223:21" pos:end="223:22"><expr pos:start="223:21" pos:end="223:22"><name pos:start="223:21" pos:end="223:22">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
