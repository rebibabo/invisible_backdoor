<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16788.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:5"><name pos:start="1:1" pos:end="1:5">int32</name></type> <name pos:start="1:7" pos:end="1:36">float32_to_int32_round_to_zero</name><parameter_list pos:start="1:37" pos:end="1:62">( <parameter pos:start="1:39" pos:end="1:60"><decl pos:start="1:39" pos:end="1:60"><type pos:start="1:39" pos:end="1:47"><name pos:start="1:39" pos:end="1:45">float32</name> <name pos:start="1:47" pos:end="1:47">a</name></type> <name pos:start="1:49" pos:end="1:60">STATUS_PARAM</name></decl></parameter> )</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="57:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">flag</name></type> <name pos:start="5:10" pos:end="5:14">aSign</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">int16</name></type> <name pos:start="7:11" pos:end="7:14">aExp</name></decl>, <decl pos:start="7:17" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:17" pos:end="7:26">shiftCount</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">bits32</name></type> <name pos:start="9:12" pos:end="9:15">aSig</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">int32</name></type> <name pos:start="11:11" pos:end="11:11">z</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:8">aSig</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:34"><name pos:start="15:12" pos:end="15:29">extractFloat32Frac</name><argument_list pos:start="15:30" pos:end="15:34">( <argument pos:start="15:32" pos:end="15:32"><expr pos:start="15:32" pos:end="15:32"><name pos:start="15:32" pos:end="15:32">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:8">aExp</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:33"><name pos:start="17:12" pos:end="17:28">extractFloat32Exp</name><argument_list pos:start="17:29" pos:end="17:33">( <argument pos:start="17:31" pos:end="17:31"><expr pos:start="17:31" pos:end="17:31"><name pos:start="17:31" pos:end="17:31">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:9">aSign</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:35"><name pos:start="19:13" pos:end="19:30">extractFloat32Sign</name><argument_list pos:start="19:31" pos:end="19:35">( <argument pos:start="19:33" pos:end="19:33"><expr pos:start="19:33" pos:end="19:33"><name pos:start="19:33" pos:end="19:33">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:14">shiftCount</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:21">aExp</name> <operator pos:start="21:23" pos:end="21:23">-</operator> <literal type="number" pos:start="21:25" pos:end="21:28">0x9E</literal></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="43:5"><if pos:start="23:5" pos:end="35:5">if <condition pos:start="23:8" pos:end="23:26">( <expr pos:start="23:10" pos:end="23:24"><literal type="number" pos:start="23:10" pos:end="23:10">0</literal> <operator pos:start="23:12" pos:end="23:13">&lt;=</operator> <name pos:start="23:15" pos:end="23:24">shiftCount</name></expr> )</condition> <block pos:start="23:28" pos:end="35:5">{<block_content pos:start="25:9" pos:end="33:36">

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:30">( <expr pos:start="25:14" pos:end="25:28"><name pos:start="25:14" pos:end="25:14">a</name> <operator pos:start="25:16" pos:end="25:17">!=</operator> <literal type="number" pos:start="25:19" pos:end="25:28">0xCF000000</literal></expr> )</condition> <block pos:start="25:32" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:77">

            <macro pos:start="27:13" pos:end="27:55"><name pos:start="27:13" pos:end="27:23">float_raise</name><argument_list pos:start="27:24" pos:end="27:55">( <argument pos:start="27:26" pos:end="27:54">float_flag_invalid STATUS_VAR</argument>)</argument_list></macro><empty_stmt pos:start="27:56" pos:end="27:56">;</empty_stmt>

            <if_stmt pos:start="29:13" pos:end="29:77"><if pos:start="29:13" pos:end="29:77">if <condition pos:start="29:16" pos:end="29:58">( <expr pos:start="29:18" pos:end="29:56"><operator pos:start="29:18" pos:end="29:18">!</operator> <name pos:start="29:20" pos:end="29:24">aSign</name> <operator pos:start="29:26" pos:end="29:27">||</operator> <operator pos:start="29:29" pos:end="29:29">(</operator> <operator pos:start="29:31" pos:end="29:31">(</operator> <name pos:start="29:33" pos:end="29:36">aExp</name> <operator pos:start="29:38" pos:end="29:39">==</operator> <literal type="number" pos:start="29:41" pos:end="29:44">0xFF</literal> <operator pos:start="29:46" pos:end="29:46">)</operator> <operator pos:start="29:48" pos:end="29:49">&amp;&amp;</operator> <name pos:start="29:51" pos:end="29:54">aSig</name> <operator pos:start="29:56" pos:end="29:56">)</operator></expr> )</condition><block type="pseudo" pos:start="29:60" pos:end="29:77"><block_content pos:start="29:60" pos:end="29:77"> <return pos:start="29:60" pos:end="29:77">return <expr pos:start="29:67" pos:end="29:76"><literal type="number" pos:start="29:67" pos:end="29:76">0x7FFFFFFF</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="33:9" pos:end="33:36">return <expr pos:start="33:16" pos:end="33:35"><operator pos:start="33:16" pos:end="33:16">(</operator><name pos:start="33:17" pos:end="33:23">sbits32</name><operator pos:start="33:24" pos:end="33:24">)</operator> <literal type="number" pos:start="33:26" pos:end="33:35">0x80000000</literal></expr>;</return>

    </block_content>}</block></if>

    <if type="elseif" pos:start="37:5" pos:end="43:5">else if <condition pos:start="37:13" pos:end="37:28">( <expr pos:start="37:15" pos:end="37:26"><name pos:start="37:15" pos:end="37:18">aExp</name> <operator pos:start="37:20" pos:end="37:21">&lt;=</operator> <literal type="number" pos:start="37:23" pos:end="37:26">0x7E</literal></expr> )</condition> <block pos:start="37:30" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:17">

        <if_stmt pos:start="39:9" pos:end="39:79"><if pos:start="39:9" pos:end="39:79">if <condition pos:start="39:12" pos:end="39:26">( <expr pos:start="39:14" pos:end="39:24"><name pos:start="39:14" pos:end="39:17">aExp</name> <operator pos:start="39:19" pos:end="39:19">|</operator> <name pos:start="39:21" pos:end="39:24">aSig</name></expr> )</condition><block type="pseudo" pos:start="39:28" pos:end="39:79"><block_content pos:start="39:28" pos:end="39:79"> <expr_stmt pos:start="39:28" pos:end="39:79"><expr pos:start="39:28" pos:end="39:78"><call pos:start="39:28" pos:end="39:56"><name pos:start="39:28" pos:end="39:33">STATUS</name><argument_list pos:start="39:34" pos:end="39:56">(<argument pos:start="39:35" pos:end="39:55"><expr pos:start="39:35" pos:end="39:55"><name pos:start="39:35" pos:end="39:55">float_exception_flags</name></expr></argument>)</argument_list></call> <operator pos:start="39:58" pos:end="39:59">|=</operator> <name pos:start="39:61" pos:end="39:78">float_flag_inexact</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="41:9" pos:end="41:17">return <expr pos:start="41:16" pos:end="41:16"><literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:36"><expr pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:8">aSig</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <operator pos:start="45:12" pos:end="45:12">(</operator> <name pos:start="45:14" pos:end="45:17">aSig</name> <operator pos:start="45:19" pos:end="45:19">|</operator> <literal type="number" pos:start="45:21" pos:end="45:30">0x00800000</literal> <operator pos:start="45:32" pos:end="45:32">)</operator><operator pos:start="45:33" pos:end="45:34">&lt;&lt;</operator><literal type="number" pos:start="45:35" pos:end="45:35">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:31"><expr pos:start="47:5" pos:end="47:30"><name pos:start="47:5" pos:end="47:5">z</name> <operator pos:start="47:7" pos:end="47:7">=</operator> <name pos:start="47:9" pos:end="47:12">aSig</name><operator pos:start="47:13" pos:end="47:14">&gt;&gt;</operator><operator pos:start="47:15" pos:end="47:15">(</operator> <operator pos:start="47:17" pos:end="47:17">-</operator> <name pos:start="47:19" pos:end="47:28">shiftCount</name> <operator pos:start="47:30" pos:end="47:30">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="53:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:49">( <expr pos:start="49:10" pos:end="49:47"><operator pos:start="49:10" pos:end="49:10">(</operator><name pos:start="49:11" pos:end="49:16">bits32</name><operator pos:start="49:17" pos:end="49:17">)</operator> <operator pos:start="49:19" pos:end="49:19">(</operator> <name pos:start="49:21" pos:end="49:24">aSig</name><operator pos:start="49:25" pos:end="49:26">&lt;&lt;</operator><operator pos:start="49:27" pos:end="49:27">(</operator> <name pos:start="49:29" pos:end="49:38">shiftCount</name> <operator pos:start="49:40" pos:end="49:40">&amp;</operator> <literal type="number" pos:start="49:42" pos:end="49:43">31</literal> <operator pos:start="49:45" pos:end="49:45">)</operator> <operator pos:start="49:47" pos:end="49:47">)</operator></expr> )</condition> <block pos:start="49:51" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:60">

        <expr_stmt pos:start="51:9" pos:end="51:60"><expr pos:start="51:9" pos:end="51:59"><call pos:start="51:9" pos:end="51:37"><name pos:start="51:9" pos:end="51:14">STATUS</name><argument_list pos:start="51:15" pos:end="51:37">(<argument pos:start="51:16" pos:end="51:36"><expr pos:start="51:16" pos:end="51:36"><name pos:start="51:16" pos:end="51:36">float_exception_flags</name></expr></argument>)</argument_list></call> <operator pos:start="51:39" pos:end="51:40">|=</operator> <name pos:start="51:42" pos:end="51:59">float_flag_inexact</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="55:5" pos:end="55:25"><if pos:start="55:5" pos:end="55:25">if <condition pos:start="55:8" pos:end="55:16">( <expr pos:start="55:10" pos:end="55:14"><name pos:start="55:10" pos:end="55:14">aSign</name></expr> )</condition><block type="pseudo" pos:start="55:18" pos:end="55:25"><block_content pos:start="55:18" pos:end="55:25"> <expr_stmt pos:start="55:18" pos:end="55:25"><expr pos:start="55:18" pos:end="55:24"><name pos:start="55:18" pos:end="55:18">z</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <operator pos:start="55:22" pos:end="55:22">-</operator> <name pos:start="55:24" pos:end="55:24">z</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><name pos:start="57:12" pos:end="57:12">z</name></expr>;</return>



</block_content>}</block></function>
</unit>
