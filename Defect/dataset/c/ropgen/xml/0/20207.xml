<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20207.c" pos:tabs="8"><function pos:start="1:1" pos:end="347:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">qemu_spice_init</name><parameter_list pos:start="1:21" pos:end="1:26">(<parameter pos:start="1:22" pos:end="1:25"><decl pos:start="1:22" pos:end="1:25"><type pos:start="1:22" pos:end="1:25"><name pos:start="1:22" pos:end="1:25">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="347:1">{<block_content pos:start="5:5" pos:end="345:29">

    <decl_stmt pos:start="5:5" pos:end="5:57"><decl pos:start="5:5" pos:end="5:56"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">QemuOpts</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">opts</name> <init pos:start="5:20" pos:end="5:56">= <expr pos:start="5:22" pos:end="5:56"><call pos:start="5:22" pos:end="5:56"><name pos:start="5:22" pos:end="5:33">QTAILQ_FIRST</name><argument_list pos:start="5:34" pos:end="5:56">(<argument pos:start="5:35" pos:end="5:55"><expr pos:start="5:35" pos:end="5:55"><operator pos:start="5:35" pos:end="5:35">&amp;</operator><name pos:start="5:36" pos:end="5:55"><name pos:start="5:36" pos:end="5:50">qemu_spice_opts</name><operator pos:start="5:51" pos:end="5:51">.</operator><name pos:start="5:52" pos:end="5:55">head</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="13:28"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:24">password</name></decl>, <decl pos:start="7:27" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:16"><modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:30">str</name></decl>, <decl pos:start="7:33" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:16"><modifier pos:start="7:33" pos:end="7:33">*</modifier></type><name pos:start="7:34" pos:end="7:41">x509_dir</name></decl>, <decl pos:start="7:44" pos:end="7:48"><type ref="prev" pos:start="7:5" pos:end="7:16"><modifier pos:start="7:44" pos:end="7:44">*</modifier></type><name pos:start="7:45" pos:end="7:48">addr</name></decl>,

        <decl pos:start="9:9" pos:end="9:33"><type ref="prev" pos:start="7:5" pos:end="7:16"><modifier pos:start="9:9" pos:end="9:9">*</modifier></type><name pos:start="9:10" pos:end="9:26">x509_key_password</name> <init pos:start="9:28" pos:end="9:33">= <expr pos:start="9:30" pos:end="9:33"><name pos:start="9:30" pos:end="9:33">NULL</name></expr></init></decl>,

        <decl pos:start="11:9" pos:end="11:28"><type ref="prev" pos:start="7:5" pos:end="7:16"><modifier pos:start="11:9" pos:end="11:9">*</modifier></type><name pos:start="11:10" pos:end="11:21">x509_dh_file</name> <init pos:start="11:23" pos:end="11:28">= <expr pos:start="11:25" pos:end="11:28"><name pos:start="11:25" pos:end="11:28">NULL</name></expr></init></decl>,

        <decl pos:start="13:9" pos:end="13:27"><type ref="prev" pos:start="7:5" pos:end="7:16"><modifier pos:start="13:9" pos:end="13:9">*</modifier></type><name pos:start="13:10" pos:end="13:20">tls_ciphers</name> <init pos:start="13:22" pos:end="13:27">= <expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="19:33"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:23">x509_key_file</name> <init pos:start="15:25" pos:end="15:30">= <expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:30">NULL</name></expr></init></decl>,

        <decl pos:start="17:9" pos:end="17:30"><type ref="prev" pos:start="15:5" pos:end="15:10"><modifier pos:start="17:9" pos:end="17:9">*</modifier></type><name pos:start="17:10" pos:end="17:23">x509_cert_file</name> <init pos:start="17:25" pos:end="17:30">= <expr pos:start="17:27" pos:end="17:30"><name pos:start="17:27" pos:end="17:30">NULL</name></expr></init></decl>,

        <decl pos:start="19:9" pos:end="19:32"><type ref="prev" pos:start="15:5" pos:end="15:10"><modifier pos:start="19:9" pos:end="19:9">*</modifier></type><name pos:start="19:10" pos:end="19:25">x509_cacert_file</name> <init pos:start="19:27" pos:end="19:32">= <expr pos:start="19:29" pos:end="19:32"><name pos:start="19:29" pos:end="19:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:40"><decl pos:start="21:5" pos:end="21:12"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:12">port</name></decl>, <decl pos:start="21:15" pos:end="21:22"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:15" pos:end="21:22">tls_port</name></decl>, <decl pos:start="21:25" pos:end="21:27"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:25" pos:end="21:27">len</name></decl>, <decl pos:start="21:30" pos:end="21:39"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:30" pos:end="21:39">addr_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:42"><decl pos:start="23:5" pos:end="23:41"><type pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:29">spice_image_compression_t</name></type> <name pos:start="23:31" pos:end="23:41">compression</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:38"><decl pos:start="25:5" pos:end="25:37"><type pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:27">spice_wan_compression_t</name></type> <name pos:start="25:29" pos:end="25:37">wan_compr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><call pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:24">qemu_thread_get_self</name><argument_list pos:start="29:25" pos:end="29:29">(<argument pos:start="29:26" pos:end="29:28"><expr pos:start="29:26" pos:end="29:28"><operator pos:start="29:26" pos:end="29:26">&amp;</operator><name pos:start="29:27" pos:end="29:28">me</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



   <if_stmt pos:start="33:4" pos:end="37:5"><if pos:start="33:4" pos:end="37:5">if <condition pos:start="33:7" pos:end="33:13">(<expr pos:start="33:8" pos:end="33:12"><operator pos:start="33:8" pos:end="33:8">!</operator><name pos:start="33:9" pos:end="33:12">opts</name></expr>)</condition> <block pos:start="33:15" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:15">

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:48"><expr pos:start="39:5" pos:end="39:47"><name pos:start="39:5" pos:end="39:8">port</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <call pos:start="39:12" pos:end="39:47"><name pos:start="39:12" pos:end="39:30">qemu_opt_get_number</name><argument_list pos:start="39:31" pos:end="39:47">(<argument pos:start="39:32" pos:end="39:35"><expr pos:start="39:32" pos:end="39:35"><name pos:start="39:32" pos:end="39:35">opts</name></expr></argument>, <argument pos:start="39:38" pos:end="39:43"><expr pos:start="39:38" pos:end="39:43"><literal type="string" pos:start="39:38" pos:end="39:43">"port"</literal></expr></argument>, <argument pos:start="39:46" pos:end="39:46"><expr pos:start="39:46" pos:end="39:46"><literal type="number" pos:start="39:46" pos:end="39:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:56"><expr pos:start="41:5" pos:end="41:55"><name pos:start="41:5" pos:end="41:12">tls_port</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <call pos:start="41:16" pos:end="41:55"><name pos:start="41:16" pos:end="41:34">qemu_opt_get_number</name><argument_list pos:start="41:35" pos:end="41:55">(<argument pos:start="41:36" pos:end="41:39"><expr pos:start="41:36" pos:end="41:39"><name pos:start="41:36" pos:end="41:39">opts</name></expr></argument>, <argument pos:start="41:42" pos:end="41:51"><expr pos:start="41:42" pos:end="41:51"><literal type="string" pos:start="41:42" pos:end="41:51">"tls-port"</literal></expr></argument>, <argument pos:start="41:54" pos:end="41:54"><expr pos:start="41:54" pos:end="41:54"><literal type="number" pos:start="41:54" pos:end="41:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:27">(<expr pos:start="43:9" pos:end="43:26"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:13">port</name> <operator pos:start="43:15" pos:end="43:16">&amp;&amp;</operator> <operator pos:start="43:18" pos:end="43:18">!</operator><name pos:start="43:19" pos:end="43:26">tls_port</name></expr>)</condition> <block pos:start="43:29" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:16">

        <expr_stmt pos:start="45:9" pos:end="45:74"><expr pos:start="45:9" pos:end="45:73"><call pos:start="45:9" pos:end="45:73"><name pos:start="45:9" pos:end="45:15">fprintf</name><argument_list pos:start="45:16" pos:end="45:73">(<argument pos:start="45:17" pos:end="45:22"><expr pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:22">stderr</name></expr></argument>, <argument pos:start="45:25" pos:end="45:72"><expr pos:start="45:25" pos:end="45:72"><literal type="string" pos:start="45:25" pos:end="45:72">"neither port nor tls-port specified for spice."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:16"><expr pos:start="47:9" pos:end="47:15"><call pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:12">exit</name><argument_list pos:start="47:13" pos:end="47:15">(<argument pos:start="47:14" pos:end="47:14"><expr pos:start="47:14" pos:end="47:14"><literal type="number" pos:start="47:14" pos:end="47:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:33">(<expr pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:12">port</name> <argument_list type="generic" pos:start="51:14" pos:end="51:26">&lt; <argument pos:start="51:16" pos:end="51:24"><expr pos:start="51:16" pos:end="51:24"><literal type="number" pos:start="51:16" pos:end="51:16">0</literal> <operator pos:start="51:18" pos:end="51:19">||</operator> <name pos:start="51:21" pos:end="51:24">port</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="51:28" pos:end="51:32">65535</literal></expr>)</condition> <block pos:start="51:35" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:16">

        <expr_stmt pos:start="53:9" pos:end="53:54"><expr pos:start="53:9" pos:end="53:53"><call pos:start="53:9" pos:end="53:53"><name pos:start="53:9" pos:end="53:15">fprintf</name><argument_list pos:start="53:16" pos:end="53:53">(<argument pos:start="53:17" pos:end="53:22"><expr pos:start="53:17" pos:end="53:22"><name pos:start="53:17" pos:end="53:22">stderr</name></expr></argument>, <argument pos:start="53:25" pos:end="53:52"><expr pos:start="53:25" pos:end="53:52"><literal type="string" pos:start="53:25" pos:end="53:52">"spice port is out of range"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:16"><expr pos:start="55:9" pos:end="55:15"><call pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:12">exit</name><argument_list pos:start="55:13" pos:end="55:15">(<argument pos:start="55:14" pos:end="55:14"><expr pos:start="55:14" pos:end="55:14"><literal type="number" pos:start="55:14" pos:end="55:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:41">(<expr pos:start="59:9" pos:end="59:40"><name pos:start="59:9" pos:end="59:34"><name pos:start="59:9" pos:end="59:16">tls_port</name> <argument_list type="generic" pos:start="59:18" pos:end="59:34">&lt; <argument pos:start="59:20" pos:end="59:32"><expr pos:start="59:20" pos:end="59:32"><literal type="number" pos:start="59:20" pos:end="59:20">0</literal> <operator pos:start="59:22" pos:end="59:23">||</operator> <name pos:start="59:25" pos:end="59:32">tls_port</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="59:36" pos:end="59:40">65535</literal></expr>)</condition> <block pos:start="59:43" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:16">

        <expr_stmt pos:start="61:9" pos:end="61:58"><expr pos:start="61:9" pos:end="61:57"><call pos:start="61:9" pos:end="61:57"><name pos:start="61:9" pos:end="61:15">fprintf</name><argument_list pos:start="61:16" pos:end="61:57">(<argument pos:start="61:17" pos:end="61:22"><expr pos:start="61:17" pos:end="61:22"><name pos:start="61:17" pos:end="61:22">stderr</name></expr></argument>, <argument pos:start="61:25" pos:end="61:56"><expr pos:start="61:25" pos:end="61:56"><literal type="string" pos:start="61:25" pos:end="61:56">"spice tls-port is out of range"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:16"><expr pos:start="63:9" pos:end="63:15"><call pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:12">exit</name><argument_list pos:start="63:13" pos:end="63:15">(<argument pos:start="63:14" pos:end="63:14"><expr pos:start="63:14" pos:end="63:14"><literal type="number" pos:start="63:14" pos:end="63:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:46"><expr pos:start="67:5" pos:end="67:45"><name pos:start="67:5" pos:end="67:12">password</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <call pos:start="67:16" pos:end="67:45"><name pos:start="67:16" pos:end="67:27">qemu_opt_get</name><argument_list pos:start="67:28" pos:end="67:45">(<argument pos:start="67:29" pos:end="67:32"><expr pos:start="67:29" pos:end="67:32"><name pos:start="67:29" pos:end="67:32">opts</name></expr></argument>, <argument pos:start="67:35" pos:end="67:44"><expr pos:start="67:35" pos:end="67:44"><literal type="string" pos:start="67:35" pos:end="67:44">"password"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="71:5" pos:end="139:5"><if pos:start="71:5" pos:end="139:5">if <condition pos:start="71:8" pos:end="71:17">(<expr pos:start="71:9" pos:end="71:16"><name pos:start="71:9" pos:end="71:16">tls_port</name></expr>)</condition> <block pos:start="71:19" pos:end="139:5">{<block_content pos:start="73:9" pos:end="137:56">

        <expr_stmt pos:start="73:9" pos:end="73:50"><expr pos:start="73:9" pos:end="73:49"><name pos:start="73:9" pos:end="73:16">x509_dir</name> <operator pos:start="73:18" pos:end="73:18">=</operator> <call pos:start="73:20" pos:end="73:49"><name pos:start="73:20" pos:end="73:31">qemu_opt_get</name><argument_list pos:start="73:32" pos:end="73:49">(<argument pos:start="73:33" pos:end="73:36"><expr pos:start="73:33" pos:end="73:36"><name pos:start="73:33" pos:end="73:36">opts</name></expr></argument>, <argument pos:start="73:39" pos:end="73:48"><expr pos:start="73:39" pos:end="73:48"><literal type="string" pos:start="73:39" pos:end="73:48">"x509-dir"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="79:9"><if pos:start="75:9" pos:end="79:9">if <condition pos:start="75:12" pos:end="75:29">(<expr pos:start="75:13" pos:end="75:28"><name pos:start="75:13" pos:end="75:16">NULL</name> <operator pos:start="75:18" pos:end="75:19">==</operator> <name pos:start="75:21" pos:end="75:28">x509_dir</name></expr>)</condition> <block pos:start="75:31" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:27">

            <expr_stmt pos:start="77:13" pos:end="77:27"><expr pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:20">x509_dir</name> <operator pos:start="77:22" pos:end="77:22">=</operator> <literal type="string" pos:start="77:24" pos:end="77:26">"."</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:36"><expr pos:start="81:9" pos:end="81:35"><name pos:start="81:9" pos:end="81:11">len</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <call pos:start="81:15" pos:end="81:30"><name pos:start="81:15" pos:end="81:20">strlen</name><argument_list pos:start="81:21" pos:end="81:30">(<argument pos:start="81:22" pos:end="81:29"><expr pos:start="81:22" pos:end="81:29"><name pos:start="81:22" pos:end="81:29">x509_dir</name></expr></argument>)</argument_list></call> <operator pos:start="81:32" pos:end="81:32">+</operator> <literal type="number" pos:start="81:34" pos:end="81:35">32</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:50"><expr pos:start="85:9" pos:end="85:49"><name pos:start="85:9" pos:end="85:11">str</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <call pos:start="85:15" pos:end="85:49"><name pos:start="85:15" pos:end="85:26">qemu_opt_get</name><argument_list pos:start="85:27" pos:end="85:49">(<argument pos:start="85:28" pos:end="85:31"><expr pos:start="85:28" pos:end="85:31"><name pos:start="85:28" pos:end="85:31">opts</name></expr></argument>, <argument pos:start="85:34" pos:end="85:48"><expr pos:start="85:34" pos:end="85:48"><literal type="string" pos:start="85:34" pos:end="85:48">"x509-key-file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="97:9"><if pos:start="87:9" pos:end="91:9">if <condition pos:start="87:12" pos:end="87:16">(<expr pos:start="87:13" pos:end="87:15"><name pos:start="87:13" pos:end="87:15">str</name></expr>)</condition> <block pos:start="87:18" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:42">

            <expr_stmt pos:start="89:13" pos:end="89:42"><expr pos:start="89:13" pos:end="89:41"><name pos:start="89:13" pos:end="89:25">x509_key_file</name> <operator pos:start="89:27" pos:end="89:27">=</operator> <call pos:start="89:29" pos:end="89:41"><name pos:start="89:29" pos:end="89:36">g_strdup</name><argument_list pos:start="89:37" pos:end="89:41">(<argument pos:start="89:38" pos:end="89:40"><expr pos:start="89:38" pos:end="89:40"><name pos:start="89:38" pos:end="89:40">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="91:11" pos:end="97:9">else <block pos:start="91:16" pos:end="97:9">{<block_content pos:start="93:13" pos:end="95:82">

            <expr_stmt pos:start="93:13" pos:end="93:42"><expr pos:start="93:13" pos:end="93:41"><name pos:start="93:13" pos:end="93:25">x509_key_file</name> <operator pos:start="93:27" pos:end="93:27">=</operator> <call pos:start="93:29" pos:end="93:41"><name pos:start="93:29" pos:end="93:36">g_malloc</name><argument_list pos:start="93:37" pos:end="93:41">(<argument pos:start="93:38" pos:end="93:40"><expr pos:start="93:38" pos:end="93:40"><name pos:start="93:38" pos:end="93:40">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:82"><expr pos:start="95:13" pos:end="95:81"><call pos:start="95:13" pos:end="95:81"><name pos:start="95:13" pos:end="95:20">snprintf</name><argument_list pos:start="95:21" pos:end="95:81">(<argument pos:start="95:22" pos:end="95:34"><expr pos:start="95:22" pos:end="95:34"><name pos:start="95:22" pos:end="95:34">x509_key_file</name></expr></argument>, <argument pos:start="95:37" pos:end="95:39"><expr pos:start="95:37" pos:end="95:39"><name pos:start="95:37" pos:end="95:39">len</name></expr></argument>, <argument pos:start="95:42" pos:end="95:48"><expr pos:start="95:42" pos:end="95:48"><literal type="string" pos:start="95:42" pos:end="95:48">"%s/%s"</literal></expr></argument>, <argument pos:start="95:51" pos:end="95:58"><expr pos:start="95:51" pos:end="95:58"><name pos:start="95:51" pos:end="95:58">x509_dir</name></expr></argument>, <argument pos:start="95:61" pos:end="95:80"><expr pos:start="95:61" pos:end="95:80"><name pos:start="95:61" pos:end="95:80">X509_SERVER_KEY_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:51"><expr pos:start="101:9" pos:end="101:50"><name pos:start="101:9" pos:end="101:11">str</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <call pos:start="101:15" pos:end="101:50"><name pos:start="101:15" pos:end="101:26">qemu_opt_get</name><argument_list pos:start="101:27" pos:end="101:50">(<argument pos:start="101:28" pos:end="101:31"><expr pos:start="101:28" pos:end="101:31"><name pos:start="101:28" pos:end="101:31">opts</name></expr></argument>, <argument pos:start="101:34" pos:end="101:49"><expr pos:start="101:34" pos:end="101:49"><literal type="string" pos:start="101:34" pos:end="101:49">"x509-cert-file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="113:9"><if pos:start="103:9" pos:end="107:9">if <condition pos:start="103:12" pos:end="103:16">(<expr pos:start="103:13" pos:end="103:15"><name pos:start="103:13" pos:end="103:15">str</name></expr>)</condition> <block pos:start="103:18" pos:end="107:9">{<block_content pos:start="105:13" pos:end="105:43">

            <expr_stmt pos:start="105:13" pos:end="105:43"><expr pos:start="105:13" pos:end="105:42"><name pos:start="105:13" pos:end="105:26">x509_cert_file</name> <operator pos:start="105:28" pos:end="105:28">=</operator> <call pos:start="105:30" pos:end="105:42"><name pos:start="105:30" pos:end="105:37">g_strdup</name><argument_list pos:start="105:38" pos:end="105:42">(<argument pos:start="105:39" pos:end="105:41"><expr pos:start="105:39" pos:end="105:41"><name pos:start="105:39" pos:end="105:41">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="107:11" pos:end="113:9">else <block pos:start="107:16" pos:end="113:9">{<block_content pos:start="109:13" pos:end="111:84">

            <expr_stmt pos:start="109:13" pos:end="109:43"><expr pos:start="109:13" pos:end="109:42"><name pos:start="109:13" pos:end="109:26">x509_cert_file</name> <operator pos:start="109:28" pos:end="109:28">=</operator> <call pos:start="109:30" pos:end="109:42"><name pos:start="109:30" pos:end="109:37">g_malloc</name><argument_list pos:start="109:38" pos:end="109:42">(<argument pos:start="109:39" pos:end="109:41"><expr pos:start="109:39" pos:end="109:41"><name pos:start="109:39" pos:end="109:41">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:84"><expr pos:start="111:13" pos:end="111:83"><call pos:start="111:13" pos:end="111:83"><name pos:start="111:13" pos:end="111:20">snprintf</name><argument_list pos:start="111:21" pos:end="111:83">(<argument pos:start="111:22" pos:end="111:35"><expr pos:start="111:22" pos:end="111:35"><name pos:start="111:22" pos:end="111:35">x509_cert_file</name></expr></argument>, <argument pos:start="111:38" pos:end="111:40"><expr pos:start="111:38" pos:end="111:40"><name pos:start="111:38" pos:end="111:40">len</name></expr></argument>, <argument pos:start="111:43" pos:end="111:49"><expr pos:start="111:43" pos:end="111:49"><literal type="string" pos:start="111:43" pos:end="111:49">"%s/%s"</literal></expr></argument>, <argument pos:start="111:52" pos:end="111:59"><expr pos:start="111:52" pos:end="111:59"><name pos:start="111:52" pos:end="111:59">x509_dir</name></expr></argument>, <argument pos:start="111:62" pos:end="111:82"><expr pos:start="111:62" pos:end="111:82"><name pos:start="111:62" pos:end="111:82">X509_SERVER_CERT_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:53"><expr pos:start="117:9" pos:end="117:52"><name pos:start="117:9" pos:end="117:11">str</name> <operator pos:start="117:13" pos:end="117:13">=</operator> <call pos:start="117:15" pos:end="117:52"><name pos:start="117:15" pos:end="117:26">qemu_opt_get</name><argument_list pos:start="117:27" pos:end="117:52">(<argument pos:start="117:28" pos:end="117:31"><expr pos:start="117:28" pos:end="117:31"><name pos:start="117:28" pos:end="117:31">opts</name></expr></argument>, <argument pos:start="117:34" pos:end="117:51"><expr pos:start="117:34" pos:end="117:51"><literal type="string" pos:start="117:34" pos:end="117:51">"x509-cacert-file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="119:9" pos:end="129:9"><if pos:start="119:9" pos:end="123:9">if <condition pos:start="119:12" pos:end="119:16">(<expr pos:start="119:13" pos:end="119:15"><name pos:start="119:13" pos:end="119:15">str</name></expr>)</condition> <block pos:start="119:18" pos:end="123:9">{<block_content pos:start="121:13" pos:end="121:45">

            <expr_stmt pos:start="121:13" pos:end="121:45"><expr pos:start="121:13" pos:end="121:44"><name pos:start="121:13" pos:end="121:28">x509_cacert_file</name> <operator pos:start="121:30" pos:end="121:30">=</operator> <call pos:start="121:32" pos:end="121:44"><name pos:start="121:32" pos:end="121:39">g_strdup</name><argument_list pos:start="121:40" pos:end="121:44">(<argument pos:start="121:41" pos:end="121:43"><expr pos:start="121:41" pos:end="121:43"><name pos:start="121:41" pos:end="121:43">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="123:11" pos:end="129:9">else <block pos:start="123:16" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:82">

            <expr_stmt pos:start="125:13" pos:end="125:45"><expr pos:start="125:13" pos:end="125:44"><name pos:start="125:13" pos:end="125:28">x509_cacert_file</name> <operator pos:start="125:30" pos:end="125:30">=</operator> <call pos:start="125:32" pos:end="125:44"><name pos:start="125:32" pos:end="125:39">g_malloc</name><argument_list pos:start="125:40" pos:end="125:44">(<argument pos:start="125:41" pos:end="125:43"><expr pos:start="125:41" pos:end="125:43"><name pos:start="125:41" pos:end="125:43">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:82"><expr pos:start="127:13" pos:end="127:81"><call pos:start="127:13" pos:end="127:81"><name pos:start="127:13" pos:end="127:20">snprintf</name><argument_list pos:start="127:21" pos:end="127:81">(<argument pos:start="127:22" pos:end="127:37"><expr pos:start="127:22" pos:end="127:37"><name pos:start="127:22" pos:end="127:37">x509_cacert_file</name></expr></argument>, <argument pos:start="127:40" pos:end="127:42"><expr pos:start="127:40" pos:end="127:42"><name pos:start="127:40" pos:end="127:42">len</name></expr></argument>, <argument pos:start="127:45" pos:end="127:51"><expr pos:start="127:45" pos:end="127:51"><literal type="string" pos:start="127:45" pos:end="127:51">"%s/%s"</literal></expr></argument>, <argument pos:start="127:54" pos:end="127:61"><expr pos:start="127:54" pos:end="127:61"><name pos:start="127:54" pos:end="127:61">x509_dir</name></expr></argument>, <argument pos:start="127:64" pos:end="127:80"><expr pos:start="127:64" pos:end="127:80"><name pos:start="127:64" pos:end="127:80">X509_CA_CERT_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:68"><expr pos:start="133:9" pos:end="133:67"><name pos:start="133:9" pos:end="133:25">x509_key_password</name> <operator pos:start="133:27" pos:end="133:27">=</operator> <call pos:start="133:29" pos:end="133:67"><name pos:start="133:29" pos:end="133:40">qemu_opt_get</name><argument_list pos:start="133:41" pos:end="133:67">(<argument pos:start="133:42" pos:end="133:45"><expr pos:start="133:42" pos:end="133:45"><name pos:start="133:42" pos:end="133:45">opts</name></expr></argument>, <argument pos:start="133:48" pos:end="133:66"><expr pos:start="133:48" pos:end="133:66"><literal type="string" pos:start="133:48" pos:end="133:66">"x509-key-password"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:58"><expr pos:start="135:9" pos:end="135:57"><name pos:start="135:9" pos:end="135:20">x509_dh_file</name> <operator pos:start="135:22" pos:end="135:22">=</operator> <call pos:start="135:24" pos:end="135:57"><name pos:start="135:24" pos:end="135:35">qemu_opt_get</name><argument_list pos:start="135:36" pos:end="135:57">(<argument pos:start="135:37" pos:end="135:40"><expr pos:start="135:37" pos:end="135:40"><name pos:start="135:37" pos:end="135:40">opts</name></expr></argument>, <argument pos:start="135:43" pos:end="135:56"><expr pos:start="135:43" pos:end="135:56"><literal type="string" pos:start="135:43" pos:end="135:56">"x509-dh-file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:56"><expr pos:start="137:9" pos:end="137:55"><name pos:start="137:9" pos:end="137:19">tls_ciphers</name> <operator pos:start="137:21" pos:end="137:21">=</operator> <call pos:start="137:23" pos:end="137:55"><name pos:start="137:23" pos:end="137:34">qemu_opt_get</name><argument_list pos:start="137:35" pos:end="137:55">(<argument pos:start="137:36" pos:end="137:39"><expr pos:start="137:36" pos:end="137:39"><name pos:start="137:36" pos:end="137:39">opts</name></expr></argument>, <argument pos:start="137:42" pos:end="137:54"><expr pos:start="137:42" pos:end="137:54"><literal type="string" pos:start="137:42" pos:end="137:54">"tls-ciphers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:38"><expr pos:start="143:5" pos:end="143:37"><name pos:start="143:5" pos:end="143:8">addr</name> <operator pos:start="143:10" pos:end="143:10">=</operator> <call pos:start="143:12" pos:end="143:37"><name pos:start="143:12" pos:end="143:23">qemu_opt_get</name><argument_list pos:start="143:24" pos:end="143:37">(<argument pos:start="143:25" pos:end="143:28"><expr pos:start="143:25" pos:end="143:28"><name pos:start="143:25" pos:end="143:28">opts</name></expr></argument>, <argument pos:start="143:31" pos:end="143:36"><expr pos:start="143:31" pos:end="143:36"><literal type="string" pos:start="143:31" pos:end="143:36">"addr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:19"><expr pos:start="145:5" pos:end="145:18"><name pos:start="145:5" pos:end="145:14">addr_flags</name> <operator pos:start="145:16" pos:end="145:16">=</operator> <literal type="number" pos:start="145:18" pos:end="145:18">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="147:5" pos:end="155:5"><if pos:start="147:5" pos:end="151:5">if <condition pos:start="147:8" pos:end="147:43">(<expr pos:start="147:9" pos:end="147:42"><call pos:start="147:9" pos:end="147:42"><name pos:start="147:9" pos:end="147:25">qemu_opt_get_bool</name><argument_list pos:start="147:26" pos:end="147:42">(<argument pos:start="147:27" pos:end="147:30"><expr pos:start="147:27" pos:end="147:30"><name pos:start="147:27" pos:end="147:30">opts</name></expr></argument>, <argument pos:start="147:33" pos:end="147:38"><expr pos:start="147:33" pos:end="147:38"><literal type="string" pos:start="147:33" pos:end="147:38">"ipv4"</literal></expr></argument>, <argument pos:start="147:41" pos:end="147:41"><expr pos:start="147:41" pos:end="147:41"><literal type="number" pos:start="147:41" pos:end="147:41">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="147:45" pos:end="151:5">{<block_content pos:start="149:9" pos:end="149:48">

        <expr_stmt pos:start="149:9" pos:end="149:48"><expr pos:start="149:9" pos:end="149:47"><name pos:start="149:9" pos:end="149:18">addr_flags</name> <operator pos:start="149:20" pos:end="149:21">|=</operator> <name pos:start="149:23" pos:end="149:47">SPICE_ADDR_FLAG_IPV4_ONLY</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="151:7" pos:end="155:5">else if <condition pos:start="151:15" pos:end="151:50">(<expr pos:start="151:16" pos:end="151:49"><call pos:start="151:16" pos:end="151:49"><name pos:start="151:16" pos:end="151:32">qemu_opt_get_bool</name><argument_list pos:start="151:33" pos:end="151:49">(<argument pos:start="151:34" pos:end="151:37"><expr pos:start="151:34" pos:end="151:37"><name pos:start="151:34" pos:end="151:37">opts</name></expr></argument>, <argument pos:start="151:40" pos:end="151:45"><expr pos:start="151:40" pos:end="151:45"><literal type="string" pos:start="151:40" pos:end="151:45">"ipv6"</literal></expr></argument>, <argument pos:start="151:48" pos:end="151:48"><expr pos:start="151:48" pos:end="151:48"><literal type="number" pos:start="151:48" pos:end="151:48">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="151:52" pos:end="155:5">{<block_content pos:start="153:9" pos:end="153:48">

        <expr_stmt pos:start="153:9" pos:end="153:48"><expr pos:start="153:9" pos:end="153:47"><name pos:start="153:9" pos:end="153:18">addr_flags</name> <operator pos:start="153:20" pos:end="153:21">|=</operator> <name pos:start="153:23" pos:end="153:47">SPICE_ADDR_FLAG_IPV6_ONLY</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:38"><expr pos:start="159:5" pos:end="159:37"><name pos:start="159:5" pos:end="159:16">spice_server</name> <operator pos:start="159:18" pos:end="159:18">=</operator> <call pos:start="159:20" pos:end="159:37"><name pos:start="159:20" pos:end="159:35">spice_server_new</name><argument_list pos:start="159:36" pos:end="159:37">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:70"><expr pos:start="161:5" pos:end="161:69"><call pos:start="161:5" pos:end="161:69"><name pos:start="161:5" pos:end="161:25">spice_server_set_addr</name><argument_list pos:start="161:26" pos:end="161:69">(<argument pos:start="161:27" pos:end="161:38"><expr pos:start="161:27" pos:end="161:38"><name pos:start="161:27" pos:end="161:38">spice_server</name></expr></argument>, <argument pos:start="161:41" pos:end="161:56"><expr pos:start="161:41" pos:end="161:56"><ternary pos:start="161:41" pos:end="161:56"><condition pos:start="161:41" pos:end="161:46"><expr pos:start="161:41" pos:end="161:44"><name pos:start="161:41" pos:end="161:44">addr</name></expr> ?</condition><then pos:start="161:48" pos:end="161:51"> <expr pos:start="161:48" pos:end="161:51"><name pos:start="161:48" pos:end="161:51">addr</name></expr> </then><else pos:start="161:53" pos:end="161:56">: <expr pos:start="161:55" pos:end="161:56"><literal type="string" pos:start="161:55" pos:end="161:56">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="161:59" pos:end="161:68"><expr pos:start="161:59" pos:end="161:68"><name pos:start="161:59" pos:end="161:68">addr_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="163:5" pos:end="167:5"><if pos:start="163:5" pos:end="167:5">if <condition pos:start="163:8" pos:end="163:13">(<expr pos:start="163:9" pos:end="163:12"><name pos:start="163:9" pos:end="163:12">port</name></expr>)</condition> <block pos:start="163:15" pos:end="167:5">{<block_content pos:start="165:9" pos:end="165:50">

        <expr_stmt pos:start="165:9" pos:end="165:50"><expr pos:start="165:9" pos:end="165:49"><call pos:start="165:9" pos:end="165:49"><name pos:start="165:9" pos:end="165:29">spice_server_set_port</name><argument_list pos:start="165:30" pos:end="165:49">(<argument pos:start="165:31" pos:end="165:42"><expr pos:start="165:31" pos:end="165:42"><name pos:start="165:31" pos:end="165:42">spice_server</name></expr></argument>, <argument pos:start="165:45" pos:end="165:48"><expr pos:start="165:45" pos:end="165:48"><name pos:start="165:45" pos:end="165:48">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="169:5" pos:end="185:5"><if pos:start="169:5" pos:end="185:5">if <condition pos:start="169:8" pos:end="169:17">(<expr pos:start="169:9" pos:end="169:16"><name pos:start="169:9" pos:end="169:16">tls_port</name></expr>)</condition> <block pos:start="169:19" pos:end="185:5">{<block_content pos:start="171:9" pos:end="183:42">

        <expr_stmt pos:start="171:9" pos:end="183:42"><expr pos:start="171:9" pos:end="183:41"><call pos:start="171:9" pos:end="183:41"><name pos:start="171:9" pos:end="171:28">spice_server_set_tls</name><argument_list pos:start="171:29" pos:end="183:41">(<argument pos:start="171:30" pos:end="171:41"><expr pos:start="171:30" pos:end="171:41"><name pos:start="171:30" pos:end="171:41">spice_server</name></expr></argument>, <argument pos:start="171:44" pos:end="171:51"><expr pos:start="171:44" pos:end="171:51"><name pos:start="171:44" pos:end="171:51">tls_port</name></expr></argument>,

                             <argument pos:start="173:30" pos:end="173:45"><expr pos:start="173:30" pos:end="173:45"><name pos:start="173:30" pos:end="173:45">x509_cacert_file</name></expr></argument>,

                             <argument pos:start="175:30" pos:end="175:43"><expr pos:start="175:30" pos:end="175:43"><name pos:start="175:30" pos:end="175:43">x509_cert_file</name></expr></argument>,

                             <argument pos:start="177:30" pos:end="177:42"><expr pos:start="177:30" pos:end="177:42"><name pos:start="177:30" pos:end="177:42">x509_key_file</name></expr></argument>,

                             <argument pos:start="179:30" pos:end="179:46"><expr pos:start="179:30" pos:end="179:46"><name pos:start="179:30" pos:end="179:46">x509_key_password</name></expr></argument>,

                             <argument pos:start="181:30" pos:end="181:41"><expr pos:start="181:30" pos:end="181:41"><name pos:start="181:30" pos:end="181:41">x509_dh_file</name></expr></argument>,

                             <argument pos:start="183:30" pos:end="183:40"><expr pos:start="183:30" pos:end="183:40"><name pos:start="183:30" pos:end="183:40">tls_ciphers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="187:5" pos:end="191:5"><if pos:start="187:5" pos:end="191:5">if <condition pos:start="187:8" pos:end="187:17">(<expr pos:start="187:9" pos:end="187:16"><name pos:start="187:9" pos:end="187:16">password</name></expr>)</condition> <block pos:start="187:19" pos:end="191:5">{<block_content pos:start="189:9" pos:end="189:65">

        <expr_stmt pos:start="189:9" pos:end="189:65"><expr pos:start="189:9" pos:end="189:64"><call pos:start="189:9" pos:end="189:64"><name pos:start="189:9" pos:end="189:31">spice_server_set_ticket</name><argument_list pos:start="189:32" pos:end="189:64">(<argument pos:start="189:33" pos:end="189:44"><expr pos:start="189:33" pos:end="189:44"><name pos:start="189:33" pos:end="189:44">spice_server</name></expr></argument>, <argument pos:start="189:47" pos:end="189:54"><expr pos:start="189:47" pos:end="189:54"><name pos:start="189:47" pos:end="189:54">password</name></expr></argument>, <argument pos:start="189:57" pos:end="189:57"><expr pos:start="189:57" pos:end="189:57"><literal type="number" pos:start="189:57" pos:end="189:57">0</literal></expr></argument>, <argument pos:start="189:60" pos:end="189:60"><expr pos:start="189:60" pos:end="189:60"><literal type="number" pos:start="189:60" pos:end="189:60">0</literal></expr></argument>, <argument pos:start="189:63" pos:end="189:63"><expr pos:start="189:63" pos:end="189:63"><literal type="number" pos:start="189:63" pos:end="189:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="193:5" pos:end="215:5"><if pos:start="193:5" pos:end="215:5">if <condition pos:start="193:8" pos:end="193:43">(<expr pos:start="193:9" pos:end="193:42"><call pos:start="193:9" pos:end="193:42"><name pos:start="193:9" pos:end="193:25">qemu_opt_get_bool</name><argument_list pos:start="193:26" pos:end="193:42">(<argument pos:start="193:27" pos:end="193:30"><expr pos:start="193:27" pos:end="193:30"><name pos:start="193:27" pos:end="193:30">opts</name></expr></argument>, <argument pos:start="193:33" pos:end="193:38"><expr pos:start="193:33" pos:end="193:38"><literal type="string" pos:start="193:33" pos:end="193:38">"sasl"</literal></expr></argument>, <argument pos:start="193:41" pos:end="193:41"><expr pos:start="193:41" pos:end="193:41"><literal type="number" pos:start="193:41" pos:end="193:41">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="193:45" pos:end="215:5">{<block_content pos:start="197:9" pos:end="214:0">

<cpp:if pos:start="195:1" pos:end="195:36">#<cpp:directive pos:start="195:2" pos:end="195:3">if</cpp:directive> <expr pos:start="195:5" pos:end="195:36"><name pos:start="195:5" pos:end="195:24">SPICE_SERVER_VERSION</name> <operator pos:start="195:26" pos:end="195:27">&gt;=</operator> <literal type="number" pos:start="195:29" pos:end="195:36">0x000900</literal></expr></cpp:if> <comment type="block" pos:start="195:38" pos:end="195:48">/* 0.9.0 */</comment>

        <if_stmt pos:start="197:9" pos:end="208:0"><if pos:start="197:9" pos:end="208:0">if <condition pos:start="197:12" pos:end="199:57">(<expr pos:start="197:13" pos:end="199:56"><call pos:start="197:13" pos:end="197:63"><name pos:start="197:13" pos:end="197:41">spice_server_set_sasl_appname</name><argument_list pos:start="197:42" pos:end="197:63">(<argument pos:start="197:43" pos:end="197:54"><expr pos:start="197:43" pos:end="197:54"><name pos:start="197:43" pos:end="197:54">spice_server</name></expr></argument>, <argument pos:start="197:57" pos:end="197:62"><expr pos:start="197:57" pos:end="197:62"><literal type="string" pos:start="197:57" pos:end="197:62">"qemu"</literal></expr></argument>)</argument_list></call> <operator pos:start="197:65" pos:end="197:66">==</operator> <operator pos:start="197:68" pos:end="197:68">-</operator><literal type="number" pos:start="197:69" pos:end="197:69">1</literal> <operator pos:start="197:71" pos:end="197:72">||</operator>

            <call pos:start="199:13" pos:end="199:50"><name pos:start="199:13" pos:end="199:33">spice_server_set_sasl</name><argument_list pos:start="199:34" pos:end="199:50">(<argument pos:start="199:35" pos:end="199:46"><expr pos:start="199:35" pos:end="199:46"><name pos:start="199:35" pos:end="199:46">spice_server</name></expr></argument>, <argument pos:start="199:49" pos:end="199:49"><expr pos:start="199:49" pos:end="199:49"><literal type="number" pos:start="199:49" pos:end="199:49">1</literal></expr></argument>)</argument_list></call> <operator pos:start="199:52" pos:end="199:53">==</operator> <operator pos:start="199:55" pos:end="199:55">-</operator><literal type="number" pos:start="199:56" pos:end="199:56">1</literal></expr>)</condition> <block pos:start="199:59" pos:end="208:0">{<block_content pos:start="201:13" pos:end="203:20">

            <expr_stmt pos:start="201:13" pos:end="201:62"><expr pos:start="201:13" pos:end="201:61"><call pos:start="201:13" pos:end="201:61"><name pos:start="201:13" pos:end="201:19">fprintf</name><argument_list pos:start="201:20" pos:end="201:61">(<argument pos:start="201:21" pos:end="201:26"><expr pos:start="201:21" pos:end="201:26"><name pos:start="201:21" pos:end="201:26">stderr</name></expr></argument>, <argument pos:start="201:29" pos:end="201:60"><expr pos:start="201:29" pos:end="201:60"><literal type="string" pos:start="201:29" pos:end="201:60">"spice: failed to enable sasl\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:20"><expr pos:start="203:13" pos:end="203:19"><call pos:start="203:13" pos:end="203:19"><name pos:start="203:13" pos:end="203:16">exit</name><argument_list pos:start="203:17" pos:end="203:19">(<argument pos:start="203:18" pos:end="203:18"><expr pos:start="203:18" pos:end="203:18"><literal type="number" pos:start="203:18" pos:end="203:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:else pos:start="207:1" pos:end="207:5">#<cpp:directive pos:start="207:2" pos:end="207:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="209:9" pos:end="209:82"><expr pos:start="209:9" pos:end="209:81"><call pos:start="209:9" pos:end="209:81"><name pos:start="209:9" pos:end="209:15">fprintf</name><argument_list pos:start="209:16" pos:end="209:81">(<argument pos:start="209:17" pos:end="209:22"><expr pos:start="209:17" pos:end="209:22"><name pos:start="209:17" pos:end="209:22">stderr</name></expr></argument>, <argument pos:start="209:25" pos:end="209:80"><expr pos:start="209:25" pos:end="209:80"><literal type="string" pos:start="209:25" pos:end="209:80">"spice: sasl is not available (spice &gt;= 0.9 required)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="214:0"><expr pos:start="211:9" pos:end="211:15"><call pos:start="211:9" pos:end="211:15"><name pos:start="211:9" pos:end="211:12">exit</name><argument_list pos:start="211:13" pos:end="211:15">(<argument pos:start="211:14" pos:end="211:14"><expr pos:start="211:14" pos:end="211:14"><literal type="number" pos:start="211:14" pos:end="211:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="213:1" pos:end="213:6">#<cpp:directive pos:start="213:2" pos:end="213:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="217:5" pos:end="228:0"><if pos:start="217:5" pos:end="228:0">if <condition pos:start="217:8" pos:end="217:56">(<expr pos:start="217:9" pos:end="217:55"><call pos:start="217:9" pos:end="217:55"><name pos:start="217:9" pos:end="217:25">qemu_opt_get_bool</name><argument_list pos:start="217:26" pos:end="217:55">(<argument pos:start="217:27" pos:end="217:30"><expr pos:start="217:27" pos:end="217:30"><name pos:start="217:27" pos:end="217:30">opts</name></expr></argument>, <argument pos:start="217:33" pos:end="217:51"><expr pos:start="217:33" pos:end="217:51"><literal type="string" pos:start="217:33" pos:end="217:51">"disable-ticketing"</literal></expr></argument>, <argument pos:start="217:54" pos:end="217:54"><expr pos:start="217:54" pos:end="217:54"><literal type="number" pos:start="217:54" pos:end="217:54">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="217:58" pos:end="228:0">{<block_content pos:start="219:9" pos:end="221:46">

        <expr_stmt pos:start="219:9" pos:end="219:22"><expr pos:start="219:9" pos:end="219:21"><name pos:start="219:9" pos:end="219:12">auth</name> <operator pos:start="219:14" pos:end="219:14">=</operator> <literal type="string" pos:start="219:16" pos:end="219:21">"none"</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:46"><expr pos:start="221:9" pos:end="221:45"><call pos:start="221:9" pos:end="221:45"><name pos:start="221:9" pos:end="221:31">spice_server_set_noauth</name><argument_list pos:start="221:32" pos:end="221:45">(<argument pos:start="221:33" pos:end="221:44"><expr pos:start="221:33" pos:end="221:44"><name pos:start="221:33" pos:end="221:44">spice_server</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="227:1" pos:end="227:36">#<cpp:directive pos:start="227:2" pos:end="227:3">if</cpp:directive> <expr pos:start="227:5" pos:end="227:36"><name pos:start="227:5" pos:end="227:24">SPICE_SERVER_VERSION</name> <operator pos:start="227:26" pos:end="227:27">&gt;=</operator> <literal type="number" pos:start="227:29" pos:end="227:36">0x000801</literal></expr></cpp:if>

    <if_stmt pos:start="229:5" pos:end="236:0"><if pos:start="229:5" pos:end="236:0">if <condition pos:start="229:8" pos:end="229:57">(<expr pos:start="229:9" pos:end="229:56"><call pos:start="229:9" pos:end="229:56"><name pos:start="229:9" pos:end="229:25">qemu_opt_get_bool</name><argument_list pos:start="229:26" pos:end="229:56">(<argument pos:start="229:27" pos:end="229:30"><expr pos:start="229:27" pos:end="229:30"><name pos:start="229:27" pos:end="229:30">opts</name></expr></argument>, <argument pos:start="229:33" pos:end="229:52"><expr pos:start="229:33" pos:end="229:52"><literal type="string" pos:start="229:33" pos:end="229:52">"disable-copy-paste"</literal></expr></argument>, <argument pos:start="229:55" pos:end="229:55"><expr pos:start="229:55" pos:end="229:55"><literal type="number" pos:start="229:55" pos:end="229:55">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="229:59" pos:end="236:0">{<block_content pos:start="231:9" pos:end="231:62">

        <expr_stmt pos:start="231:9" pos:end="231:62"><expr pos:start="231:9" pos:end="231:61"><call pos:start="231:9" pos:end="231:61"><name pos:start="231:9" pos:end="231:40">spice_server_set_agent_copypaste</name><argument_list pos:start="231:41" pos:end="231:61">(<argument pos:start="231:42" pos:end="231:53"><expr pos:start="231:42" pos:end="231:53"><name pos:start="231:42" pos:end="231:53">spice_server</name></expr></argument>, <argument pos:start="231:56" pos:end="231:60"><expr pos:start="231:56" pos:end="231:60"><name pos:start="231:56" pos:end="231:60">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="235:1" pos:end="235:6">#<cpp:directive pos:start="235:2" pos:end="235:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="239:5" pos:end="239:48"><expr pos:start="239:5" pos:end="239:47"><name pos:start="239:5" pos:end="239:15">compression</name> <operator pos:start="239:17" pos:end="239:17">=</operator> <name pos:start="239:19" pos:end="239:47">SPICE_IMAGE_COMPRESS_AUTO_GLZ</name></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="241:50"><expr pos:start="241:5" pos:end="241:49"><name pos:start="241:5" pos:end="241:7">str</name> <operator pos:start="241:9" pos:end="241:9">=</operator> <call pos:start="241:11" pos:end="241:49"><name pos:start="241:11" pos:end="241:22">qemu_opt_get</name><argument_list pos:start="241:23" pos:end="241:49">(<argument pos:start="241:24" pos:end="241:27"><expr pos:start="241:24" pos:end="241:27"><name pos:start="241:24" pos:end="241:27">opts</name></expr></argument>, <argument pos:start="241:30" pos:end="241:48"><expr pos:start="241:30" pos:end="241:48"><literal type="string" pos:start="241:30" pos:end="241:48">"image-compression"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="243:5" pos:end="247:5"><if pos:start="243:5" pos:end="247:5">if <condition pos:start="243:8" pos:end="243:12">(<expr pos:start="243:9" pos:end="243:11"><name pos:start="243:9" pos:end="243:11">str</name></expr>)</condition> <block pos:start="243:14" pos:end="247:5">{<block_content pos:start="245:9" pos:end="245:45">

        <expr_stmt pos:start="245:9" pos:end="245:45"><expr pos:start="245:9" pos:end="245:44"><name pos:start="245:9" pos:end="245:19">compression</name> <operator pos:start="245:21" pos:end="245:21">=</operator> <call pos:start="245:23" pos:end="245:44"><name pos:start="245:23" pos:end="245:39">parse_compression</name><argument_list pos:start="245:40" pos:end="245:44">(<argument pos:start="245:41" pos:end="245:43"><expr pos:start="245:41" pos:end="245:43"><name pos:start="245:41" pos:end="245:43">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:66"><expr pos:start="249:5" pos:end="249:65"><call pos:start="249:5" pos:end="249:65"><name pos:start="249:5" pos:end="249:38">spice_server_set_image_compression</name><argument_list pos:start="249:39" pos:end="249:65">(<argument pos:start="249:40" pos:end="249:51"><expr pos:start="249:40" pos:end="249:51"><name pos:start="249:40" pos:end="249:51">spice_server</name></expr></argument>, <argument pos:start="249:54" pos:end="249:64"><expr pos:start="249:54" pos:end="249:64"><name pos:start="249:54" pos:end="249:64">compression</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="253:5" pos:end="253:43"><expr pos:start="253:5" pos:end="253:42"><name pos:start="253:5" pos:end="253:13">wan_compr</name> <operator pos:start="253:15" pos:end="253:15">=</operator> <name pos:start="253:17" pos:end="253:42">SPICE_WAN_COMPRESSION_AUTO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="255:5" pos:end="255:53"><expr pos:start="255:5" pos:end="255:52"><name pos:start="255:5" pos:end="255:7">str</name> <operator pos:start="255:9" pos:end="255:9">=</operator> <call pos:start="255:11" pos:end="255:52"><name pos:start="255:11" pos:end="255:22">qemu_opt_get</name><argument_list pos:start="255:23" pos:end="255:52">(<argument pos:start="255:24" pos:end="255:27"><expr pos:start="255:24" pos:end="255:27"><name pos:start="255:24" pos:end="255:27">opts</name></expr></argument>, <argument pos:start="255:30" pos:end="255:51"><expr pos:start="255:30" pos:end="255:51"><literal type="string" pos:start="255:30" pos:end="255:51">"jpeg-wan-compression"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="257:5" pos:end="261:5"><if pos:start="257:5" pos:end="261:5">if <condition pos:start="257:8" pos:end="257:12">(<expr pos:start="257:9" pos:end="257:11"><name pos:start="257:9" pos:end="257:11">str</name></expr>)</condition> <block pos:start="257:14" pos:end="261:5">{<block_content pos:start="259:9" pos:end="259:47">

        <expr_stmt pos:start="259:9" pos:end="259:47"><expr pos:start="259:9" pos:end="259:46"><name pos:start="259:9" pos:end="259:17">wan_compr</name> <operator pos:start="259:19" pos:end="259:19">=</operator> <call pos:start="259:21" pos:end="259:46"><name pos:start="259:21" pos:end="259:41">parse_wan_compression</name><argument_list pos:start="259:42" pos:end="259:46">(<argument pos:start="259:43" pos:end="259:45"><expr pos:start="259:43" pos:end="259:45"><name pos:start="259:43" pos:end="259:45">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:63"><expr pos:start="263:5" pos:end="263:62"><call pos:start="263:5" pos:end="263:62"><name pos:start="263:5" pos:end="263:37">spice_server_set_jpeg_compression</name><argument_list pos:start="263:38" pos:end="263:62">(<argument pos:start="263:39" pos:end="263:50"><expr pos:start="263:39" pos:end="263:50"><name pos:start="263:39" pos:end="263:50">spice_server</name></expr></argument>, <argument pos:start="263:53" pos:end="263:61"><expr pos:start="263:53" pos:end="263:61"><name pos:start="263:53" pos:end="263:61">wan_compr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="267:5" pos:end="267:43"><expr pos:start="267:5" pos:end="267:42"><name pos:start="267:5" pos:end="267:13">wan_compr</name> <operator pos:start="267:15" pos:end="267:15">=</operator> <name pos:start="267:17" pos:end="267:42">SPICE_WAN_COMPRESSION_AUTO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="269:5" pos:end="269:57"><expr pos:start="269:5" pos:end="269:56"><name pos:start="269:5" pos:end="269:7">str</name> <operator pos:start="269:9" pos:end="269:9">=</operator> <call pos:start="269:11" pos:end="269:56"><name pos:start="269:11" pos:end="269:22">qemu_opt_get</name><argument_list pos:start="269:23" pos:end="269:56">(<argument pos:start="269:24" pos:end="269:27"><expr pos:start="269:24" pos:end="269:27"><name pos:start="269:24" pos:end="269:27">opts</name></expr></argument>, <argument pos:start="269:30" pos:end="269:55"><expr pos:start="269:30" pos:end="269:55"><literal type="string" pos:start="269:30" pos:end="269:55">"zlib-glz-wan-compression"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="271:5" pos:end="275:5"><if pos:start="271:5" pos:end="275:5">if <condition pos:start="271:8" pos:end="271:12">(<expr pos:start="271:9" pos:end="271:11"><name pos:start="271:9" pos:end="271:11">str</name></expr>)</condition> <block pos:start="271:14" pos:end="275:5">{<block_content pos:start="273:9" pos:end="273:47">

        <expr_stmt pos:start="273:9" pos:end="273:47"><expr pos:start="273:9" pos:end="273:46"><name pos:start="273:9" pos:end="273:17">wan_compr</name> <operator pos:start="273:19" pos:end="273:19">=</operator> <call pos:start="273:21" pos:end="273:46"><name pos:start="273:21" pos:end="273:41">parse_wan_compression</name><argument_list pos:start="273:42" pos:end="273:46">(<argument pos:start="273:43" pos:end="273:45"><expr pos:start="273:43" pos:end="273:45"><name pos:start="273:43" pos:end="273:45">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="277:5" pos:end="277:67"><expr pos:start="277:5" pos:end="277:66"><call pos:start="277:5" pos:end="277:66"><name pos:start="277:5" pos:end="277:41">spice_server_set_zlib_glz_compression</name><argument_list pos:start="277:42" pos:end="277:66">(<argument pos:start="277:43" pos:end="277:54"><expr pos:start="277:43" pos:end="277:54"><name pos:start="277:43" pos:end="277:54">spice_server</name></expr></argument>, <argument pos:start="277:57" pos:end="277:65"><expr pos:start="277:57" pos:end="277:65"><name pos:start="277:57" pos:end="277:65">wan_compr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="281:5" pos:end="281:48"><expr pos:start="281:5" pos:end="281:47"><name pos:start="281:5" pos:end="281:7">str</name> <operator pos:start="281:9" pos:end="281:9">=</operator> <call pos:start="281:11" pos:end="281:47"><name pos:start="281:11" pos:end="281:22">qemu_opt_get</name><argument_list pos:start="281:23" pos:end="281:47">(<argument pos:start="281:24" pos:end="281:27"><expr pos:start="281:24" pos:end="281:27"><name pos:start="281:24" pos:end="281:27">opts</name></expr></argument>, <argument pos:start="281:30" pos:end="281:46"><expr pos:start="281:30" pos:end="281:46"><literal type="string" pos:start="281:30" pos:end="281:46">"streaming-video"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="283:5" pos:end="289:5"><if pos:start="283:5" pos:end="289:5">if <condition pos:start="283:8" pos:end="283:12">(<expr pos:start="283:9" pos:end="283:11"><name pos:start="283:9" pos:end="283:11">str</name></expr>)</condition> <block pos:start="283:14" pos:end="289:5">{<block_content pos:start="285:9" pos:end="287:72">

        <decl_stmt pos:start="285:9" pos:end="285:54"><decl pos:start="285:9" pos:end="285:53"><type pos:start="285:9" pos:end="285:11"><name pos:start="285:9" pos:end="285:11">int</name></type> <name pos:start="285:13" pos:end="285:27">streaming_video</name> <init pos:start="285:29" pos:end="285:53">= <expr pos:start="285:31" pos:end="285:53"><call pos:start="285:31" pos:end="285:53"><name pos:start="285:31" pos:end="285:48">parse_stream_video</name><argument_list pos:start="285:49" pos:end="285:53">(<argument pos:start="285:50" pos:end="285:52"><expr pos:start="285:50" pos:end="285:52"><name pos:start="285:50" pos:end="285:52">str</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:72"><expr pos:start="287:9" pos:end="287:71"><call pos:start="287:9" pos:end="287:71"><name pos:start="287:9" pos:end="287:40">spice_server_set_streaming_video</name><argument_list pos:start="287:41" pos:end="287:71">(<argument pos:start="287:42" pos:end="287:53"><expr pos:start="287:42" pos:end="287:53"><name pos:start="287:42" pos:end="287:53">spice_server</name></expr></argument>, <argument pos:start="287:56" pos:end="287:70"><expr pos:start="287:56" pos:end="287:70"><name pos:start="287:56" pos:end="287:70">streaming_video</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="293:5" pos:end="295:66"><expr pos:start="293:5" pos:end="295:65"><call pos:start="293:5" pos:end="295:65"><name pos:start="293:5" pos:end="293:32">spice_server_set_agent_mouse</name>

        <argument_list pos:start="295:9" pos:end="295:65">(<argument pos:start="295:10" pos:end="295:21"><expr pos:start="295:10" pos:end="295:21"><name pos:start="295:10" pos:end="295:21">spice_server</name></expr></argument>, <argument pos:start="295:24" pos:end="295:64"><expr pos:start="295:24" pos:end="295:64"><call pos:start="295:24" pos:end="295:64"><name pos:start="295:24" pos:end="295:40">qemu_opt_get_bool</name><argument_list pos:start="295:41" pos:end="295:64">(<argument pos:start="295:42" pos:end="295:45"><expr pos:start="295:42" pos:end="295:45"><name pos:start="295:42" pos:end="295:45">opts</name></expr></argument>, <argument pos:start="295:48" pos:end="295:60"><expr pos:start="295:48" pos:end="295:60"><literal type="string" pos:start="295:48" pos:end="295:60">"agent-mouse"</literal></expr></argument>, <argument pos:start="295:63" pos:end="295:63"><expr pos:start="295:63" pos:end="295:63"><literal type="number" pos:start="295:63" pos:end="295:63">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="297:5" pos:end="299:75"><expr pos:start="297:5" pos:end="299:74"><call pos:start="297:5" pos:end="299:74"><name pos:start="297:5" pos:end="297:41">spice_server_set_playback_compression</name>

        <argument_list pos:start="299:9" pos:end="299:74">(<argument pos:start="299:10" pos:end="299:21"><expr pos:start="299:10" pos:end="299:21"><name pos:start="299:10" pos:end="299:21">spice_server</name></expr></argument>, <argument pos:start="299:24" pos:end="299:73"><expr pos:start="299:24" pos:end="299:73"><call pos:start="299:24" pos:end="299:73"><name pos:start="299:24" pos:end="299:40">qemu_opt_get_bool</name><argument_list pos:start="299:41" pos:end="299:73">(<argument pos:start="299:42" pos:end="299:45"><expr pos:start="299:42" pos:end="299:45"><name pos:start="299:42" pos:end="299:45">opts</name></expr></argument>, <argument pos:start="299:48" pos:end="299:69"><expr pos:start="299:48" pos:end="299:69"><literal type="string" pos:start="299:48" pos:end="299:69">"playback-compression"</literal></expr></argument>, <argument pos:start="299:72" pos:end="299:72"><expr pos:start="299:72" pos:end="299:72"><literal type="number" pos:start="299:72" pos:end="299:72">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="303:5" pos:end="303:49"><expr pos:start="303:5" pos:end="303:48"><call pos:start="303:5" pos:end="303:48"><name pos:start="303:5" pos:end="303:20">qemu_opt_foreach</name><argument_list pos:start="303:21" pos:end="303:48">(<argument pos:start="303:22" pos:end="303:25"><expr pos:start="303:22" pos:end="303:25"><name pos:start="303:22" pos:end="303:25">opts</name></expr></argument>, <argument pos:start="303:28" pos:end="303:38"><expr pos:start="303:28" pos:end="303:38"><name pos:start="303:28" pos:end="303:38">add_channel</name></expr></argument>, <argument pos:start="303:41" pos:end="303:44"><expr pos:start="303:41" pos:end="303:44"><name pos:start="303:41" pos:end="303:44">NULL</name></expr></argument>, <argument pos:start="303:47" pos:end="303:47"><expr pos:start="303:47" pos:end="303:47"><literal type="number" pos:start="303:47" pos:end="303:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="307:5" pos:end="313:5"><if pos:start="307:5" pos:end="313:5">if <condition pos:start="307:8" pos:end="307:62">(<expr pos:start="307:9" pos:end="307:61"><literal type="number" pos:start="307:9" pos:end="307:9">0</literal> <operator pos:start="307:11" pos:end="307:12">!=</operator> <call pos:start="307:14" pos:end="307:61"><name pos:start="307:14" pos:end="307:30">spice_server_init</name><argument_list pos:start="307:31" pos:end="307:61">(<argument pos:start="307:32" pos:end="307:43"><expr pos:start="307:32" pos:end="307:43"><name pos:start="307:32" pos:end="307:43">spice_server</name></expr></argument>, <argument pos:start="307:46" pos:end="307:60"><expr pos:start="307:46" pos:end="307:60"><operator pos:start="307:46" pos:end="307:46">&amp;</operator><name pos:start="307:47" pos:end="307:60">core_interface</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="307:64" pos:end="313:5">{<block_content pos:start="309:9" pos:end="311:16">

        <expr_stmt pos:start="309:9" pos:end="309:61"><expr pos:start="309:9" pos:end="309:60"><call pos:start="309:9" pos:end="309:60"><name pos:start="309:9" pos:end="309:15">fprintf</name><argument_list pos:start="309:16" pos:end="309:60">(<argument pos:start="309:17" pos:end="309:22"><expr pos:start="309:17" pos:end="309:22"><name pos:start="309:17" pos:end="309:22">stderr</name></expr></argument>, <argument pos:start="309:25" pos:end="309:59"><expr pos:start="309:25" pos:end="309:59"><literal type="string" pos:start="309:25" pos:end="309:59">"failed to initialize spice server"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:16"><expr pos:start="311:9" pos:end="311:15"><call pos:start="311:9" pos:end="311:15"><name pos:start="311:9" pos:end="311:12">exit</name><argument_list pos:start="311:13" pos:end="311:15">(<argument pos:start="311:14" pos:end="311:14"><expr pos:start="311:14" pos:end="311:14"><literal type="number" pos:start="311:14" pos:end="311:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt><empty_stmt pos:start="313:6" pos:end="313:6">;</empty_stmt>

    <expr_stmt pos:start="315:5" pos:end="315:20"><expr pos:start="315:5" pos:end="315:19"><name pos:start="315:5" pos:end="315:15">using_spice</name> <operator pos:start="315:17" pos:end="315:17">=</operator> <literal type="number" pos:start="315:19" pos:end="315:19">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="319:5" pos:end="319:54"><expr pos:start="319:5" pos:end="319:53"><name pos:start="319:5" pos:end="319:26"><name pos:start="319:5" pos:end="319:19">migration_state</name><operator pos:start="319:20" pos:end="319:20">.</operator><name pos:start="319:21" pos:end="319:26">notify</name></name> <operator pos:start="319:28" pos:end="319:28">=</operator> <name pos:start="319:30" pos:end="319:53">migration_state_notifier</name></expr>;</expr_stmt>

    <expr_stmt pos:start="321:5" pos:end="324:0"><expr pos:start="321:5" pos:end="321:57"><call pos:start="321:5" pos:end="321:57"><name pos:start="321:5" pos:end="321:39">add_migration_state_change_notifier</name><argument_list pos:start="321:40" pos:end="321:57">(<argument pos:start="321:41" pos:end="321:56"><expr pos:start="321:41" pos:end="321:56"><operator pos:start="321:41" pos:end="321:41">&amp;</operator><name pos:start="321:42" pos:end="321:56">migration_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="323:1" pos:end="323:32">#<cpp:directive pos:start="323:2" pos:end="323:6">ifdef</cpp:directive> <name pos:start="323:8" pos:end="323:32">SPICE_INTERFACE_MIGRATION</name></cpp:ifdef>

    <expr_stmt pos:start="325:5" pos:end="325:57"><expr pos:start="325:5" pos:end="325:56"><name pos:start="325:5" pos:end="325:30"><name pos:start="325:5" pos:end="325:17">spice_migrate</name><operator pos:start="325:18" pos:end="325:18">.</operator><name pos:start="325:19" pos:end="325:21">sin</name><operator pos:start="325:22" pos:end="325:22">.</operator><name pos:start="325:23" pos:end="325:26">base</name><operator pos:start="325:27" pos:end="325:27">.</operator><name pos:start="325:28" pos:end="325:30">sif</name></name> <operator pos:start="325:32" pos:end="325:32">=</operator> <operator pos:start="325:34" pos:end="325:34">&amp;</operator><name pos:start="325:35" pos:end="325:56"><name pos:start="325:35" pos:end="325:51">migrate_interface</name><operator pos:start="325:52" pos:end="325:52">.</operator><name pos:start="325:53" pos:end="325:56">base</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="327:5" pos:end="327:45"><expr pos:start="327:5" pos:end="327:44"><name pos:start="327:5" pos:end="327:37"><name pos:start="327:5" pos:end="327:17">spice_migrate</name><operator pos:start="327:18" pos:end="327:18">.</operator><name pos:start="327:19" pos:end="327:34">connect_complete</name><operator pos:start="327:35" pos:end="327:35">.</operator><name pos:start="327:36" pos:end="327:37">cb</name></name> <operator pos:start="327:39" pos:end="327:39">=</operator> <name pos:start="327:41" pos:end="327:44">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="329:5" pos:end="332:0"><expr pos:start="329:5" pos:end="329:53"><call pos:start="329:5" pos:end="329:53"><name pos:start="329:5" pos:end="329:28">qemu_spice_add_interface</name><argument_list pos:start="329:29" pos:end="329:53">(<argument pos:start="329:30" pos:end="329:52"><expr pos:start="329:30" pos:end="329:52"><operator pos:start="329:30" pos:end="329:30">&amp;</operator><name pos:start="329:31" pos:end="329:52"><name pos:start="329:31" pos:end="329:43">spice_migrate</name><operator pos:start="329:44" pos:end="329:44">.</operator><name pos:start="329:45" pos:end="329:47">sin</name><operator pos:start="329:48" pos:end="329:48">.</operator><name pos:start="329:49" pos:end="329:52">base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="331:1" pos:end="331:6">#<cpp:directive pos:start="331:2" pos:end="331:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="335:5" pos:end="335:28"><expr pos:start="335:5" pos:end="335:27"><call pos:start="335:5" pos:end="335:27"><name pos:start="335:5" pos:end="335:25">qemu_spice_input_init</name><argument_list pos:start="335:26" pos:end="335:27">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="337:5" pos:end="337:28"><expr pos:start="337:5" pos:end="337:27"><call pos:start="337:5" pos:end="337:27"><name pos:start="337:5" pos:end="337:25">qemu_spice_audio_init</name><argument_list pos:start="337:26" pos:end="337:27">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="341:5" pos:end="341:26"><expr pos:start="341:5" pos:end="341:25"><call pos:start="341:5" pos:end="341:25"><name pos:start="341:5" pos:end="341:10">g_free</name><argument_list pos:start="341:11" pos:end="341:25">(<argument pos:start="341:12" pos:end="341:24"><expr pos:start="341:12" pos:end="341:24"><name pos:start="341:12" pos:end="341:24">x509_key_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="343:5" pos:end="343:27"><expr pos:start="343:5" pos:end="343:26"><call pos:start="343:5" pos:end="343:26"><name pos:start="343:5" pos:end="343:10">g_free</name><argument_list pos:start="343:11" pos:end="343:26">(<argument pos:start="343:12" pos:end="343:25"><expr pos:start="343:12" pos:end="343:25"><name pos:start="343:12" pos:end="343:25">x509_cert_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="345:5" pos:end="345:29"><expr pos:start="345:5" pos:end="345:28"><call pos:start="345:5" pos:end="345:28"><name pos:start="345:5" pos:end="345:10">g_free</name><argument_list pos:start="345:11" pos:end="345:28">(<argument pos:start="345:12" pos:end="345:27"><expr pos:start="345:12" pos:end="345:27"><name pos:start="345:12" pos:end="345:27">x509_cacert_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
