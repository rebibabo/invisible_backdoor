<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3063.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:16"><name pos:start="1:1" pos:end="1:6">struct</name> <name pos:start="1:8" pos:end="1:16">vhost_net</name></name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:32">vhost_net_init</name><parameter_list pos:start="1:33" pos:end="1:58">(<parameter pos:start="1:34" pos:end="1:57"><decl pos:start="1:34" pos:end="1:57"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:48">VhostNetOptions</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:57">options</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:16">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">r</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:77"><decl pos:start="7:5" pos:end="7:76"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">bool</name></type> <name pos:start="7:10" pos:end="7:23">backend_kernel</name> <init pos:start="7:25" pos:end="7:76">= <expr pos:start="7:27" pos:end="7:76"><name pos:start="7:27" pos:end="7:47"><name pos:start="7:27" pos:end="7:33">options</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:47">backend_type</name></name> <operator pos:start="7:49" pos:end="7:50">==</operator> <name pos:start="7:52" pos:end="7:76">VHOST_BACKEND_TYPE_KERNEL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:20">vhost_net</name></name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:25">net</name> <init pos:start="9:27" pos:end="9:49">= <expr pos:start="9:29" pos:end="9:49"><call pos:start="9:29" pos:end="9:49"><name pos:start="9:29" pos:end="9:36">g_malloc</name><argument_list pos:start="9:37" pos:end="9:49">(<argument pos:start="9:38" pos:end="9:48"><expr pos:start="9:38" pos:end="9:48"><sizeof pos:start="9:38" pos:end="9:43">sizeof <name/></sizeof>*<name pos:start="9:46" pos:end="9:48">net</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:30">(<expr pos:start="13:9" pos:end="13:29"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:29"><name pos:start="13:10" pos:end="13:16">options</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:29">net_backend</name></name></expr>)</condition> <block pos:start="13:32" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:18">

        <expr_stmt pos:start="15:9" pos:end="15:72"><expr pos:start="15:9" pos:end="15:71"><call pos:start="15:9" pos:end="15:71"><name pos:start="15:9" pos:end="15:15">fprintf</name><argument_list pos:start="15:16" pos:end="15:71">(<argument pos:start="15:17" pos:end="15:22"><expr pos:start="15:17" pos:end="15:22"><name pos:start="15:17" pos:end="15:22">stderr</name></expr></argument>, <argument pos:start="15:25" pos:end="15:70"><expr pos:start="15:25" pos:end="15:70"><literal type="string" pos:start="15:25" pos:end="15:70">"vhost-net requires net backend to be setup\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="17:9" pos:end="17:18">goto <name pos:start="17:14" pos:end="17:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="45:5"><if pos:start="23:5" pos:end="39:5">if <condition pos:start="23:8" pos:end="23:23">(<expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:22">backend_kernel</name></expr>)</condition> <block pos:start="23:25" pos:end="39:5">{<block_content pos:start="25:9" pos:end="37:25">

        <expr_stmt pos:start="25:9" pos:end="25:51"><expr pos:start="25:9" pos:end="25:50"><name pos:start="25:9" pos:end="25:9">r</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:50"><name pos:start="25:13" pos:end="25:28">vhost_net_get_fd</name><argument_list pos:start="25:29" pos:end="25:50">(<argument pos:start="25:30" pos:end="25:49"><expr pos:start="25:30" pos:end="25:49"><name pos:start="25:30" pos:end="25:49"><name pos:start="25:30" pos:end="25:36">options</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:49">net_backend</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:18">(<expr pos:start="27:13" pos:end="27:17"><name pos:start="27:13" pos:end="27:13">r</name> <operator pos:start="27:15" pos:end="27:15">&lt;</operator> <literal type="number" pos:start="27:17" pos:end="27:17">0</literal></expr>)</condition> <block pos:start="27:20" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:22">

            <goto pos:start="29:13" pos:end="29:22">goto <name pos:start="29:18" pos:end="29:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="35:52"><expr pos:start="33:9" pos:end="35:51"><name pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:11">net</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:16">dev</name><operator pos:start="33:17" pos:end="33:17">.</operator><name pos:start="33:18" pos:end="33:33">backend_features</name></name> <operator pos:start="33:35" pos:end="33:35">=</operator> <ternary pos:start="33:37" pos:end="35:51"><condition pos:start="33:37" pos:end="35:13"><expr pos:start="33:37" pos:end="33:75"><call pos:start="33:37" pos:end="33:75"><name pos:start="33:37" pos:end="33:53">qemu_has_vnet_hdr</name><argument_list pos:start="33:54" pos:end="33:75">(<argument pos:start="33:55" pos:end="33:74"><expr pos:start="33:55" pos:end="33:74"><name pos:start="33:55" pos:end="33:74"><name pos:start="33:55" pos:end="33:61">options</name><operator pos:start="33:62" pos:end="33:63">-&gt;</operator><name pos:start="33:64" pos:end="33:74">net_backend</name></name></expr></argument>)</argument_list></call></expr>

            ?</condition><then pos:start="35:15" pos:end="35:15"> <expr pos:start="35:15" pos:end="35:15"><literal type="number" pos:start="35:15" pos:end="35:15">0</literal></expr> </then><else pos:start="35:17" pos:end="35:51">: <expr pos:start="35:19" pos:end="35:51"><operator pos:start="35:19" pos:end="35:19">(</operator><literal type="number" pos:start="35:20" pos:end="35:20">1</literal> <operator pos:start="35:22" pos:end="35:23">&lt;&lt;</operator> <name pos:start="35:25" pos:end="35:50">VHOST_NET_F_VIRTIO_NET_HDR</name><operator pos:start="35:51" pos:end="35:51">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:25"><expr pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:11">net</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:20">backend</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <name pos:start="37:24" pos:end="37:24">r</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="45:5">else <block pos:start="39:12" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:26">

        <expr_stmt pos:start="41:9" pos:end="41:38"><expr pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:11">net</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:16">dev</name><operator pos:start="41:17" pos:end="41:17">.</operator><name pos:start="41:18" pos:end="41:33">backend_features</name></name> <operator pos:start="41:35" pos:end="41:35">=</operator> <literal type="number" pos:start="41:37" pos:end="41:37">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:26"><expr pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:11">net</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:20">backend</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <operator pos:start="43:24" pos:end="43:24">-</operator><literal type="number" pos:start="43:25" pos:end="43:25">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:35"><expr pos:start="47:5" pos:end="47:34"><name pos:start="47:5" pos:end="47:11"><name pos:start="47:5" pos:end="47:7">net</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:11">nc</name></name> <operator pos:start="47:13" pos:end="47:13">=</operator> <name pos:start="47:15" pos:end="47:34"><name pos:start="47:15" pos:end="47:21">options</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:34">net_backend</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:22"><expr pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:7">net</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:12">dev</name><operator pos:start="51:13" pos:end="51:13">.</operator><name pos:start="51:14" pos:end="51:17">nvqs</name></name> <operator pos:start="51:19" pos:end="51:19">=</operator> <literal type="number" pos:start="51:21" pos:end="51:21">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:28"><expr pos:start="53:5" pos:end="53:27"><name pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:7">net</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:12">dev</name><operator pos:start="53:13" pos:end="53:13">.</operator><name pos:start="53:14" pos:end="53:16">vqs</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:27"><name pos:start="53:20" pos:end="53:22">net</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:27">vqs</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="59:62"><expr pos:start="57:5" pos:end="59:61"><name pos:start="57:5" pos:end="57:5">r</name> <operator pos:start="57:7" pos:end="57:7">=</operator> <call pos:start="57:9" pos:end="59:61"><name pos:start="57:9" pos:end="57:22">vhost_dev_init</name><argument_list pos:start="57:23" pos:end="59:61">(<argument pos:start="57:24" pos:end="57:32"><expr pos:start="57:24" pos:end="57:32"><operator pos:start="57:24" pos:end="57:24">&amp;</operator><name pos:start="57:25" pos:end="57:32"><name pos:start="57:25" pos:end="57:27">net</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:32">dev</name></name></expr></argument>, <argument pos:start="57:35" pos:end="57:49"><expr pos:start="57:35" pos:end="57:49"><name pos:start="57:35" pos:end="57:49"><name pos:start="57:35" pos:end="57:41">options</name><operator pos:start="57:42" pos:end="57:43">-&gt;</operator><name pos:start="57:44" pos:end="57:49">opaque</name></name></expr></argument>,

                       <argument pos:start="59:24" pos:end="59:44"><expr pos:start="59:24" pos:end="59:44"><name pos:start="59:24" pos:end="59:44"><name pos:start="59:24" pos:end="59:30">options</name><operator pos:start="59:31" pos:end="59:32">-&gt;</operator><name pos:start="59:33" pos:end="59:44">backend_type</name></name></expr></argument>, <argument pos:start="59:47" pos:end="59:60"><expr pos:start="59:47" pos:end="59:60"><name pos:start="59:47" pos:end="59:60"><name pos:start="59:47" pos:end="59:53">options</name><operator pos:start="59:54" pos:end="59:55">-&gt;</operator><name pos:start="59:56" pos:end="59:60">force</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:14">(<expr pos:start="61:9" pos:end="61:13"><name pos:start="61:9" pos:end="61:9">r</name> <operator pos:start="61:11" pos:end="61:11">&lt;</operator> <literal type="number" pos:start="61:13" pos:end="61:13">0</literal></expr>)</condition> <block pos:start="61:16" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:18">

        <goto pos:start="63:9" pos:end="63:18">goto <name pos:start="63:14" pos:end="63:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="69:72">(<expr pos:start="67:9" pos:end="69:71"><operator pos:start="67:9" pos:end="67:9">!</operator><call pos:start="67:10" pos:end="69:71"><name pos:start="67:10" pos:end="67:30">qemu_has_vnet_hdr_len</name><argument_list pos:start="67:31" pos:end="69:71">(<argument pos:start="67:32" pos:end="67:51"><expr pos:start="67:32" pos:end="67:51"><name pos:start="67:32" pos:end="67:51"><name pos:start="67:32" pos:end="67:38">options</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:51">net_backend</name></name></expr></argument>,

                               <argument pos:start="69:32" pos:end="69:70"><expr pos:start="69:32" pos:end="69:70"><sizeof pos:start="69:32" pos:end="69:70">sizeof<argument_list pos:start="69:38" pos:end="69:70">(<argument pos:start="69:39" pos:end="69:69"><expr pos:start="69:39" pos:end="69:69">struct <name pos:start="69:46" pos:end="69:69">virtio_net_hdr_mrg_rxbuf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:74" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:60">

        <expr_stmt pos:start="71:9" pos:end="71:60"><expr pos:start="71:9" pos:end="71:59"><name pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:11">net</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:16">dev</name><operator pos:start="71:17" pos:end="71:17">.</operator><name pos:start="71:18" pos:end="71:25">features</name></name> <operator pos:start="71:27" pos:end="71:28">&amp;=</operator> <operator pos:start="71:30" pos:end="71:30">~</operator><operator pos:start="71:31" pos:end="71:31">(</operator><literal type="number" pos:start="71:32" pos:end="71:32">1</literal> <operator pos:start="71:34" pos:end="71:35">&lt;&lt;</operator> <name pos:start="71:37" pos:end="71:58">VIRTIO_NET_F_MRG_RXBUF</name><operator pos:start="71:59" pos:end="71:59">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="75:5" pos:end="91:5"><if pos:start="75:5" pos:end="91:5">if <condition pos:start="75:8" pos:end="75:23">(<expr pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:22">backend_kernel</name></expr>)</condition> <block pos:start="75:25" pos:end="91:5">{<block_content pos:start="77:9" pos:end="89:9">

        <if_stmt pos:start="77:9" pos:end="89:9"><if pos:start="77:9" pos:end="89:9">if <condition pos:start="77:12" pos:end="77:59">(<expr pos:start="77:13" pos:end="77:58"><operator pos:start="77:13" pos:end="77:13">~</operator><name pos:start="77:14" pos:end="77:30"><name pos:start="77:14" pos:end="77:16">net</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:21">dev</name><operator pos:start="77:22" pos:end="77:22">.</operator><name pos:start="77:23" pos:end="77:30">features</name></name> <operator pos:start="77:32" pos:end="77:32">&amp;</operator> <name pos:start="77:34" pos:end="77:58"><name pos:start="77:34" pos:end="77:36">net</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:41">dev</name><operator pos:start="77:42" pos:end="77:42">.</operator><name pos:start="77:43" pos:end="77:58">backend_features</name></name></expr>)</condition> <block pos:start="77:61" pos:end="89:9">{<block_content pos:start="79:13" pos:end="87:22">

            <expr_stmt pos:start="79:13" pos:end="83:79"><expr pos:start="79:13" pos:end="83:78"><call pos:start="79:13" pos:end="83:78"><name pos:start="79:13" pos:end="79:19">fprintf</name><argument_list pos:start="79:20" pos:end="83:78">(<argument pos:start="79:21" pos:end="79:26"><expr pos:start="79:21" pos:end="79:26"><name pos:start="79:21" pos:end="79:26">stderr</name></expr></argument>, <argument pos:start="79:29" pos:end="81:35"><expr pos:start="79:29" pos:end="81:35"><literal type="string" pos:start="79:29" pos:end="79:56">"vhost lacks feature mask %"</literal> <name pos:start="79:58" pos:end="79:63">PRIu64</name>

                   <literal type="string" pos:start="81:20" pos:end="81:35">" for backend\n"</literal></expr></argument>,

                   <argument pos:start="83:20" pos:end="83:77"><expr pos:start="83:20" pos:end="83:77"><operator pos:start="83:20" pos:end="83:20">(</operator><name pos:start="83:21" pos:end="83:28">uint64_t</name><operator pos:start="83:29" pos:end="83:29">)</operator><operator pos:start="83:30" pos:end="83:30">(</operator><operator pos:start="83:31" pos:end="83:31">~</operator><name pos:start="83:32" pos:end="83:48"><name pos:start="83:32" pos:end="83:34">net</name><operator pos:start="83:35" pos:end="83:36">-&gt;</operator><name pos:start="83:37" pos:end="83:39">dev</name><operator pos:start="83:40" pos:end="83:40">.</operator><name pos:start="83:41" pos:end="83:48">features</name></name> <operator pos:start="83:50" pos:end="83:50">&amp;</operator> <name pos:start="83:52" pos:end="83:76"><name pos:start="83:52" pos:end="83:54">net</name><operator pos:start="83:55" pos:end="83:56">-&gt;</operator><name pos:start="83:57" pos:end="83:59">dev</name><operator pos:start="83:60" pos:end="83:60">.</operator><name pos:start="83:61" pos:end="83:76">backend_features</name></name><operator pos:start="83:77" pos:end="83:77">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:41"><expr pos:start="85:13" pos:end="85:40"><call pos:start="85:13" pos:end="85:40"><name pos:start="85:13" pos:end="85:29">vhost_dev_cleanup</name><argument_list pos:start="85:30" pos:end="85:40">(<argument pos:start="85:31" pos:end="85:39"><expr pos:start="85:31" pos:end="85:39"><operator pos:start="85:31" pos:end="85:31">&amp;</operator><name pos:start="85:32" pos:end="85:39"><name pos:start="85:32" pos:end="85:34">net</name><operator pos:start="85:35" pos:end="85:36">-&gt;</operator><name pos:start="85:37" pos:end="85:39">dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="87:13" pos:end="87:22">goto <name pos:start="87:18" pos:end="87:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="93:5" pos:end="93:56">/* Set sane init value. Override when guest acks. */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:35"><expr pos:start="95:5" pos:end="95:34"><call pos:start="95:5" pos:end="95:34"><name pos:start="95:5" pos:end="95:26">vhost_net_ack_features</name><argument_list pos:start="95:27" pos:end="95:34">(<argument pos:start="95:28" pos:end="95:30"><expr pos:start="95:28" pos:end="95:30"><name pos:start="95:28" pos:end="95:30">net</name></expr></argument>, <argument pos:start="95:33" pos:end="95:33"><expr pos:start="95:33" pos:end="95:33"><literal type="number" pos:start="95:33" pos:end="95:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="97:5" pos:end="97:15">return <expr pos:start="97:12" pos:end="97:14"><name pos:start="97:12" pos:end="97:14">net</name></expr>;</return>

<label pos:start="99:1" pos:end="99:5"><name pos:start="99:1" pos:end="99:4">fail</name>:</label>

    <expr_stmt pos:start="101:5" pos:end="101:16"><expr pos:start="101:5" pos:end="101:15"><call pos:start="101:5" pos:end="101:15"><name pos:start="101:5" pos:end="101:10">g_free</name><argument_list pos:start="101:11" pos:end="101:15">(<argument pos:start="101:12" pos:end="101:14"><expr pos:start="101:12" pos:end="101:14"><name pos:start="101:12" pos:end="101:14">net</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="103:5" pos:end="103:16">return <expr pos:start="103:12" pos:end="103:15"><name pos:start="103:12" pos:end="103:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
