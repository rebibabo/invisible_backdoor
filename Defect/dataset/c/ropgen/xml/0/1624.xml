<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1624.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">tcg_gen_atomic_cmpxchg_i32</name><parameter_list pos:start="1:32" pos:end="3:74">(<parameter pos:start="1:33" pos:end="1:45"><decl pos:start="1:33" pos:end="1:45"><type pos:start="1:33" pos:end="1:45"><name pos:start="1:33" pos:end="1:40">TCGv_i32</name></type> <name pos:start="1:42" pos:end="1:45">retv</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:56"><decl pos:start="1:48" pos:end="1:56"><type pos:start="1:48" pos:end="1:56"><name pos:start="1:48" pos:end="1:51">TCGv</name></type> <name pos:start="1:53" pos:end="1:56">addr</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:71"><decl pos:start="1:59" pos:end="1:71"><type pos:start="1:59" pos:end="1:71"><name pos:start="1:59" pos:end="1:66">TCGv_i32</name></type> <name pos:start="1:68" pos:end="1:71">cmpv</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:45"><decl pos:start="3:33" pos:end="3:45"><type pos:start="3:33" pos:end="3:45"><name pos:start="3:33" pos:end="3:40">TCGv_i32</name></type> <name pos:start="3:42" pos:end="3:45">newv</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:57"><decl pos:start="3:48" pos:end="3:57"><type pos:start="3:48" pos:end="3:57"><name pos:start="3:48" pos:end="3:53">TCGArg</name></type> <name pos:start="3:55" pos:end="3:57">idx</name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:73"><decl pos:start="3:60" pos:end="3:73"><type pos:start="3:60" pos:end="3:73"><name pos:start="3:60" pos:end="3:67">TCGMemOp</name></type> <name pos:start="3:69" pos:end="3:73">memop</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="85:1">{<block_content pos:start="7:5" pos:end="83:5">

    <expr_stmt pos:start="7:5" pos:end="7:48"><expr pos:start="7:5" pos:end="7:47"><name pos:start="7:5" pos:end="7:9">memop</name> <operator pos:start="7:11" pos:end="7:11">=</operator> <call pos:start="7:13" pos:end="7:47"><name pos:start="7:13" pos:end="7:34">tcg_canonicalize_memop</name><argument_list pos:start="7:35" pos:end="7:47">(<argument pos:start="7:36" pos:end="7:40"><expr pos:start="7:36" pos:end="7:40"><name pos:start="7:36" pos:end="7:40">memop</name></expr></argument>, <argument pos:start="7:43" pos:end="7:43"><expr pos:start="7:43" pos:end="7:43"><literal type="number" pos:start="7:43" pos:end="7:43">0</literal></expr></argument>, <argument pos:start="7:46" pos:end="7:46"><expr pos:start="7:46" pos:end="7:46"><literal type="number" pos:start="7:46" pos:end="7:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="11:5" pos:end="83:5"><if pos:start="11:5" pos:end="45:5">if <condition pos:start="11:8" pos:end="11:23">(<expr pos:start="11:9" pos:end="11:22"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:22">parallel_cpus</name></expr>)</condition> <block pos:start="11:25" pos:end="45:5">{<block_content pos:start="13:9" pos:end="43:30">

        <decl_stmt pos:start="13:9" pos:end="13:41"><decl pos:start="13:9" pos:end="13:40"><type pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:16">TCGv_i32</name></type> <name pos:start="13:18" pos:end="13:19">t1</name> <init pos:start="13:21" pos:end="13:40">= <expr pos:start="13:23" pos:end="13:40"><call pos:start="13:23" pos:end="13:40"><name pos:start="13:23" pos:end="13:38">tcg_temp_new_i32</name><argument_list pos:start="13:39" pos:end="13:40">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:41"><decl pos:start="15:9" pos:end="15:40"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">TCGv_i32</name></type> <name pos:start="15:18" pos:end="15:19">t2</name> <init pos:start="15:21" pos:end="15:40">= <expr pos:start="15:23" pos:end="15:40"><call pos:start="15:23" pos:end="15:40"><name pos:start="15:23" pos:end="15:38">tcg_temp_new_i32</name><argument_list pos:start="15:39" pos:end="15:40">()</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="19:9" pos:end="19:51"><expr pos:start="19:9" pos:end="19:50"><call pos:start="19:9" pos:end="19:50"><name pos:start="19:9" pos:end="19:23">tcg_gen_ext_i32</name><argument_list pos:start="19:24" pos:end="19:50">(<argument pos:start="19:25" pos:end="19:26"><expr pos:start="19:25" pos:end="19:26"><name pos:start="19:25" pos:end="19:26">t2</name></expr></argument>, <argument pos:start="19:29" pos:end="19:32"><expr pos:start="19:29" pos:end="19:32"><name pos:start="19:29" pos:end="19:32">cmpv</name></expr></argument>, <argument pos:start="19:35" pos:end="19:49"><expr pos:start="19:35" pos:end="19:49"><name pos:start="19:35" pos:end="19:39">memop</name> <operator pos:start="19:41" pos:end="19:41">&amp;</operator> <name pos:start="19:43" pos:end="19:49">MO_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:61"><expr pos:start="23:9" pos:end="23:60"><call pos:start="23:9" pos:end="23:60"><name pos:start="23:9" pos:end="23:27">tcg_gen_qemu_ld_i32</name><argument_list pos:start="23:28" pos:end="23:60">(<argument pos:start="23:29" pos:end="23:30"><expr pos:start="23:29" pos:end="23:30"><name pos:start="23:29" pos:end="23:30">t1</name></expr></argument>, <argument pos:start="23:33" pos:end="23:36"><expr pos:start="23:33" pos:end="23:36"><name pos:start="23:33" pos:end="23:36">addr</name></expr></argument>, <argument pos:start="23:39" pos:end="23:41"><expr pos:start="23:39" pos:end="23:41"><name pos:start="23:39" pos:end="23:41">idx</name></expr></argument>, <argument pos:start="23:44" pos:end="23:59"><expr pos:start="23:44" pos:end="23:59"><name pos:start="23:44" pos:end="23:48">memop</name> <operator pos:start="23:50" pos:end="23:50">&amp;</operator> <operator pos:start="23:52" pos:end="23:52">~</operator><name pos:start="23:53" pos:end="23:59">MO_SIGN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:63"><expr pos:start="25:9" pos:end="25:62"><call pos:start="25:9" pos:end="25:62"><name pos:start="25:9" pos:end="25:27">tcg_gen_movcond_i32</name><argument_list pos:start="25:28" pos:end="25:62">(<argument pos:start="25:29" pos:end="25:39"><expr pos:start="25:29" pos:end="25:39"><name pos:start="25:29" pos:end="25:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="25:42" pos:end="25:43"><expr pos:start="25:42" pos:end="25:43"><name pos:start="25:42" pos:end="25:43">t2</name></expr></argument>, <argument pos:start="25:46" pos:end="25:47"><expr pos:start="25:46" pos:end="25:47"><name pos:start="25:46" pos:end="25:47">t1</name></expr></argument>, <argument pos:start="25:50" pos:end="25:51"><expr pos:start="25:50" pos:end="25:51"><name pos:start="25:50" pos:end="25:51">t2</name></expr></argument>, <argument pos:start="25:54" pos:end="25:57"><expr pos:start="25:54" pos:end="25:57"><name pos:start="25:54" pos:end="25:57">newv</name></expr></argument>, <argument pos:start="25:60" pos:end="25:61"><expr pos:start="25:60" pos:end="25:61"><name pos:start="25:60" pos:end="25:61">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:50"><expr pos:start="27:9" pos:end="27:49"><call pos:start="27:9" pos:end="27:49"><name pos:start="27:9" pos:end="27:27">tcg_gen_qemu_st_i32</name><argument_list pos:start="27:28" pos:end="27:49">(<argument pos:start="27:29" pos:end="27:30"><expr pos:start="27:29" pos:end="27:30"><name pos:start="27:29" pos:end="27:30">t2</name></expr></argument>, <argument pos:start="27:33" pos:end="27:36"><expr pos:start="27:33" pos:end="27:36"><name pos:start="27:33" pos:end="27:36">addr</name></expr></argument>, <argument pos:start="27:39" pos:end="27:41"><expr pos:start="27:39" pos:end="27:41"><name pos:start="27:39" pos:end="27:41">idx</name></expr></argument>, <argument pos:start="27:44" pos:end="27:48"><expr pos:start="27:44" pos:end="27:48"><name pos:start="27:44" pos:end="27:48">memop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:30"><expr pos:start="29:9" pos:end="29:29"><call pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:25">tcg_temp_free_i32</name><argument_list pos:start="29:26" pos:end="29:29">(<argument pos:start="29:27" pos:end="29:28"><expr pos:start="29:27" pos:end="29:28"><name pos:start="29:27" pos:end="29:28">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="33:9" pos:end="41:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:28">(<expr pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:17">memop</name> <operator pos:start="33:19" pos:end="33:19">&amp;</operator> <name pos:start="33:21" pos:end="33:27">MO_SIGN</name></expr>)</condition> <block pos:start="33:30" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:45">

            <expr_stmt pos:start="35:13" pos:end="35:45"><expr pos:start="35:13" pos:end="35:44"><call pos:start="35:13" pos:end="35:44"><name pos:start="35:13" pos:end="35:27">tcg_gen_ext_i32</name><argument_list pos:start="35:28" pos:end="35:44">(<argument pos:start="35:29" pos:end="35:32"><expr pos:start="35:29" pos:end="35:32"><name pos:start="35:29" pos:end="35:32">retv</name></expr></argument>, <argument pos:start="35:35" pos:end="35:36"><expr pos:start="35:35" pos:end="35:36"><name pos:start="35:35" pos:end="35:36">t1</name></expr></argument>, <argument pos:start="35:39" pos:end="35:43"><expr pos:start="35:39" pos:end="35:43"><name pos:start="35:39" pos:end="35:43">memop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="37:11" pos:end="41:9">else <block pos:start="37:16" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:38">

            <expr_stmt pos:start="39:13" pos:end="39:38"><expr pos:start="39:13" pos:end="39:37"><call pos:start="39:13" pos:end="39:37"><name pos:start="39:13" pos:end="39:27">tcg_gen_mov_i32</name><argument_list pos:start="39:28" pos:end="39:37">(<argument pos:start="39:29" pos:end="39:32"><expr pos:start="39:29" pos:end="39:32"><name pos:start="39:29" pos:end="39:32">retv</name></expr></argument>, <argument pos:start="39:35" pos:end="39:36"><expr pos:start="39:35" pos:end="39:36"><name pos:start="39:35" pos:end="39:36">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><call pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:25">tcg_temp_free_i32</name><argument_list pos:start="43:26" pos:end="43:29">(<argument pos:start="43:27" pos:end="43:28"><expr pos:start="43:27" pos:end="43:28"><name pos:start="43:27" pos:end="43:28">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="83:5">else <block pos:start="45:12" pos:end="83:5">{<block_content pos:start="47:9" pos:end="81:9">

        <decl_stmt pos:start="47:9" pos:end="47:30"><decl pos:start="47:9" pos:end="47:29"><type pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:25">gen_atomic_cx_i32</name></type> <name pos:start="47:27" pos:end="47:29">gen</name></decl>;</decl_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:58"><expr pos:start="51:9" pos:end="51:57"><name pos:start="51:9" pos:end="51:11">gen</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <name pos:start="51:15" pos:end="51:57"><name pos:start="51:15" pos:end="51:27">table_cmpxchg</name><index pos:start="51:28" pos:end="51:57">[<expr pos:start="51:29" pos:end="51:56"><name pos:start="51:29" pos:end="51:33">memop</name> <operator pos:start="51:35" pos:end="51:35">&amp;</operator> <operator pos:start="51:37" pos:end="51:37">(</operator><name pos:start="51:38" pos:end="51:44">MO_SIZE</name> <operator pos:start="51:46" pos:end="51:46">|</operator> <name pos:start="51:48" pos:end="51:55">MO_BSWAP</name><operator pos:start="51:56" pos:end="51:56">)</operator></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="58:0"><expr pos:start="53:9" pos:end="53:37"><call pos:start="53:9" pos:end="53:37"><name pos:start="53:9" pos:end="53:24">tcg_debug_assert</name><argument_list pos:start="53:25" pos:end="53:37">(<argument pos:start="53:26" pos:end="53:36"><expr pos:start="53:26" pos:end="53:36"><name pos:start="53:26" pos:end="53:28">gen</name> <operator pos:start="53:30" pos:end="53:31">!=</operator> <name pos:start="53:33" pos:end="53:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="57:1" pos:end="57:21">#<cpp:directive pos:start="57:2" pos:end="57:6">ifdef</cpp:directive> <name pos:start="57:8" pos:end="57:21">CONFIG_SOFTMMU</name></cpp:ifdef>

        <block pos:start="59:9" pos:end="70:0">{<block_content pos:start="61:13" pos:end="65:34">

            <decl_stmt pos:start="61:13" pos:end="61:79"><decl pos:start="61:13" pos:end="61:78"><type pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:20">TCGv_i32</name></type> <name pos:start="61:22" pos:end="61:23">oi</name> <init pos:start="61:25" pos:end="61:78">= <expr pos:start="61:27" pos:end="61:78"><call pos:start="61:27" pos:end="61:78"><name pos:start="61:27" pos:end="61:39">tcg_const_i32</name><argument_list pos:start="61:40" pos:end="61:78">(<argument pos:start="61:41" pos:end="61:77"><expr pos:start="61:41" pos:end="61:77"><call pos:start="61:41" pos:end="61:77"><name pos:start="61:41" pos:end="61:54">make_memop_idx</name><argument_list pos:start="61:55" pos:end="61:77">(<argument pos:start="61:56" pos:end="61:71"><expr pos:start="61:56" pos:end="61:71"><name pos:start="61:56" pos:end="61:60">memop</name> <operator pos:start="61:62" pos:end="61:62">&amp;</operator> <operator pos:start="61:64" pos:end="61:64">~</operator><name pos:start="61:65" pos:end="61:71">MO_SIGN</name></expr></argument>, <argument pos:start="61:74" pos:end="61:76"><expr pos:start="61:74" pos:end="61:76"><name pos:start="61:74" pos:end="61:76">idx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:61"><expr pos:start="63:13" pos:end="63:60"><call pos:start="63:13" pos:end="63:60"><name pos:start="63:13" pos:end="63:15">gen</name><argument_list pos:start="63:16" pos:end="63:60">(<argument pos:start="63:17" pos:end="63:20"><expr pos:start="63:17" pos:end="63:20"><name pos:start="63:17" pos:end="63:20">retv</name></expr></argument>, <argument pos:start="63:23" pos:end="63:37"><expr pos:start="63:23" pos:end="63:37"><name pos:start="63:23" pos:end="63:37"><name pos:start="63:23" pos:end="63:29">tcg_ctx</name><operator pos:start="63:30" pos:end="63:30">.</operator><name pos:start="63:31" pos:end="63:37">tcg_env</name></name></expr></argument>, <argument pos:start="63:40" pos:end="63:43"><expr pos:start="63:40" pos:end="63:43"><name pos:start="63:40" pos:end="63:43">addr</name></expr></argument>, <argument pos:start="63:46" pos:end="63:49"><expr pos:start="63:46" pos:end="63:49"><name pos:start="63:46" pos:end="63:49">cmpv</name></expr></argument>, <argument pos:start="63:52" pos:end="63:55"><expr pos:start="63:52" pos:end="63:55"><name pos:start="63:52" pos:end="63:55">newv</name></expr></argument>, <argument pos:start="63:58" pos:end="63:59"><expr pos:start="63:58" pos:end="63:59"><name pos:start="63:58" pos:end="63:59">oi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:34"><expr pos:start="65:13" pos:end="65:33"><call pos:start="65:13" pos:end="65:33"><name pos:start="65:13" pos:end="65:29">tcg_temp_free_i32</name><argument_list pos:start="65:30" pos:end="65:33">(<argument pos:start="65:31" pos:end="65:32"><expr pos:start="65:31" pos:end="65:32"><name pos:start="65:31" pos:end="65:32">oi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

<cpp:else pos:start="69:1" pos:end="69:5">#<cpp:directive pos:start="69:2" pos:end="69:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="71:9" pos:end="74:0"><expr pos:start="71:9" pos:end="71:52"><call pos:start="71:9" pos:end="71:52"><name pos:start="71:9" pos:end="71:11">gen</name><argument_list pos:start="71:12" pos:end="71:52">(<argument pos:start="71:13" pos:end="71:16"><expr pos:start="71:13" pos:end="71:16"><name pos:start="71:13" pos:end="71:16">retv</name></expr></argument>, <argument pos:start="71:19" pos:end="71:33"><expr pos:start="71:19" pos:end="71:33"><name pos:start="71:19" pos:end="71:33"><name pos:start="71:19" pos:end="71:25">tcg_ctx</name><operator pos:start="71:26" pos:end="71:26">.</operator><name pos:start="71:27" pos:end="71:33">tcg_env</name></name></expr></argument>, <argument pos:start="71:36" pos:end="71:39"><expr pos:start="71:36" pos:end="71:39"><name pos:start="71:36" pos:end="71:39">addr</name></expr></argument>, <argument pos:start="71:42" pos:end="71:45"><expr pos:start="71:42" pos:end="71:45"><name pos:start="71:42" pos:end="71:45">cmpv</name></expr></argument>, <argument pos:start="71:48" pos:end="71:51"><expr pos:start="71:48" pos:end="71:51"><name pos:start="71:48" pos:end="71:51">newv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="73:1" pos:end="73:6">#<cpp:directive pos:start="73:2" pos:end="73:6">endif</cpp:directive></cpp:endif>



        <if_stmt pos:start="77:9" pos:end="81:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:28">(<expr pos:start="77:13" pos:end="77:27"><name pos:start="77:13" pos:end="77:17">memop</name> <operator pos:start="77:19" pos:end="77:19">&amp;</operator> <name pos:start="77:21" pos:end="77:27">MO_SIGN</name></expr>)</condition> <block pos:start="77:30" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:47">

            <expr_stmt pos:start="79:13" pos:end="79:47"><expr pos:start="79:13" pos:end="79:46"><call pos:start="79:13" pos:end="79:46"><name pos:start="79:13" pos:end="79:27">tcg_gen_ext_i32</name><argument_list pos:start="79:28" pos:end="79:46">(<argument pos:start="79:29" pos:end="79:32"><expr pos:start="79:29" pos:end="79:32"><name pos:start="79:29" pos:end="79:32">retv</name></expr></argument>, <argument pos:start="79:35" pos:end="79:38"><expr pos:start="79:35" pos:end="79:38"><name pos:start="79:35" pos:end="79:38">retv</name></expr></argument>, <argument pos:start="79:41" pos:end="79:45"><expr pos:start="79:41" pos:end="79:45"><name pos:start="79:41" pos:end="79:45">memop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
