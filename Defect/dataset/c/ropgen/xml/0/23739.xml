<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23739.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">virtio_blk_load</name><parameter_list pos:start="1:27" pos:end="1:69">(<parameter pos:start="1:28" pos:end="1:38"><decl pos:start="1:28" pos:end="1:38"><type pos:start="1:28" pos:end="1:38"><name pos:start="1:28" pos:end="1:35">QEMUFile</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">f</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:44">void</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:52">opaque</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:68"><decl pos:start="1:55" pos:end="1:68"><type pos:start="1:55" pos:end="1:68"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:68">version_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">VirtIOBlock</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:23"><if pos:start="9:5" pos:end="11:23">if <condition pos:start="9:8" pos:end="9:24">(<expr pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:18">version_id</name> <operator pos:start="9:20" pos:end="9:21">!=</operator> <literal type="number" pos:start="9:23" pos:end="9:23">2</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:23"><block_content pos:start="11:9" pos:end="11:23">

        <return pos:start="11:9" pos:end="11:23">return <expr pos:start="11:16" pos:end="11:22"><operator pos:start="11:16" pos:end="11:16">-</operator><name pos:start="11:17" pos:end="11:22">EINVAL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><call pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:15">virtio_load</name><argument_list pos:start="15:16" pos:end="15:28">(<argument pos:start="15:17" pos:end="15:24"><expr pos:start="15:17" pos:end="15:24"><operator pos:start="15:17" pos:end="15:17">&amp;</operator><name pos:start="15:18" pos:end="15:24"><name pos:start="15:18" pos:end="15:18">s</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:24">vdev</name></name></expr></argument>, <argument pos:start="15:27" pos:end="15:27"><expr pos:start="15:27" pos:end="15:27"><name pos:start="15:27" pos:end="15:27">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="17:5" pos:end="27:5">while <condition pos:start="17:11" pos:end="17:29">(<expr pos:start="17:12" pos:end="17:28"><call pos:start="17:12" pos:end="17:28"><name pos:start="17:12" pos:end="17:25">qemu_get_sbyte</name><argument_list pos:start="17:26" pos:end="17:28">(<argument pos:start="17:27" pos:end="17:27"><expr pos:start="17:27" pos:end="17:27"><name pos:start="17:27" pos:end="17:27">f</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:31" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:26">

        <decl_stmt pos:start="19:9" pos:end="19:58"><decl pos:start="19:9" pos:end="19:57"><type pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:22">VirtIOBlockReq</name> <modifier pos:start="19:24" pos:end="19:24">*</modifier></type><name pos:start="19:25" pos:end="19:27">req</name> <init pos:start="19:29" pos:end="19:57">= <expr pos:start="19:31" pos:end="19:57"><call pos:start="19:31" pos:end="19:57"><name pos:start="19:31" pos:end="19:54">virtio_blk_alloc_request</name><argument_list pos:start="19:55" pos:end="19:57">(<argument pos:start="19:56" pos:end="19:56"><expr pos:start="19:56" pos:end="19:56"><name pos:start="19:56" pos:end="19:56">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:74"><expr pos:start="21:9" pos:end="21:73"><call pos:start="21:9" pos:end="21:73"><name pos:start="21:9" pos:end="21:23">qemu_get_buffer</name><argument_list pos:start="21:24" pos:end="21:73">(<argument pos:start="21:25" pos:end="21:25"><expr pos:start="21:25" pos:end="21:25"><name pos:start="21:25" pos:end="21:25">f</name></expr></argument>, <argument pos:start="21:28" pos:end="21:53"><expr pos:start="21:28" pos:end="21:53"><operator pos:start="21:28" pos:end="21:28">(</operator><name pos:start="21:29" pos:end="21:36">unsigned</name> <name pos:start="21:38" pos:end="21:41">char</name><operator pos:start="21:42" pos:end="21:42">*</operator><operator pos:start="21:43" pos:end="21:43">)</operator><operator pos:start="21:44" pos:end="21:44">&amp;</operator><name pos:start="21:45" pos:end="21:53"><name pos:start="21:45" pos:end="21:47">req</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:53">elem</name></name></expr></argument>, <argument pos:start="21:56" pos:end="21:72"><expr pos:start="21:56" pos:end="21:72"><sizeof pos:start="21:56" pos:end="21:72">sizeof<argument_list pos:start="21:62" pos:end="21:72">(<argument pos:start="21:63" pos:end="21:71"><expr pos:start="21:63" pos:end="21:71"><name pos:start="21:63" pos:end="21:71"><name pos:start="21:63" pos:end="21:65">req</name><operator pos:start="21:66" pos:end="21:67">-&gt;</operator><name pos:start="21:68" pos:end="21:71">elem</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:26"><expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:11">req</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:17">next</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:25"><name pos:start="23:21" pos:end="23:21">s</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:25">rq</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:13">rq</name></name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:25"><name pos:start="25:17" pos:end="25:19">req</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:25">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="31:5" pos:end="31:13">return <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
