<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11004.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">nbd_co_writev_1</name><parameter_list pos:start="1:27" pos:end="5:38">(<parameter pos:start="1:28" pos:end="1:51"><decl pos:start="1:28" pos:end="1:51"><type pos:start="1:28" pos:end="1:51"><name pos:start="1:28" pos:end="1:43">NbdClientSession</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:51">client</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:71"><decl pos:start="1:54" pos:end="1:71"><type pos:start="1:54" pos:end="1:71"><name pos:start="1:54" pos:end="1:60">int64_t</name></type> <name pos:start="1:62" pos:end="1:71">sector_num</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:41"><decl pos:start="3:28" pos:end="3:41"><type pos:start="3:28" pos:end="3:41"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:41">nb_sectors</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:61"><decl pos:start="3:44" pos:end="3:61"><type pos:start="3:44" pos:end="3:61"><name pos:start="3:44" pos:end="3:55">QEMUIOVector</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:61">qiov</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:37"><decl pos:start="5:28" pos:end="5:37"><type pos:start="5:28" pos:end="5:37"><name pos:start="5:28" pos:end="5:30">int</name></type> <name pos:start="5:32" pos:end="5:37">offset</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="51:1">{<block_content pos:start="9:5" pos:end="49:24">

    <decl_stmt pos:start="9:5" pos:end="9:59"><decl pos:start="9:5" pos:end="9:58"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:22">nbd_request</name></name></type> <name pos:start="9:24" pos:end="9:30">request</name> <init pos:start="9:32" pos:end="9:58">= <expr pos:start="9:34" pos:end="9:58"><block pos:start="9:34" pos:end="9:58">{ <expr pos:start="9:36" pos:end="9:56"><operator pos:start="9:36" pos:end="9:36">.</operator><name pos:start="9:37" pos:end="9:40">type</name> <operator pos:start="9:42" pos:end="9:42">=</operator> <name pos:start="9:44" pos:end="9:56">NBD_CMD_WRITE</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:20">nbd_reply</name></name></type> <name pos:start="11:22" pos:end="11:26">reply</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">ssize_t</name></type> <name pos:start="13:13" pos:end="13:15">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="19:47">(<expr pos:start="17:9" pos:end="19:46"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:44"><name pos:start="17:10" pos:end="17:32">bdrv_enable_write_cache</name><argument_list pos:start="17:33" pos:end="17:44">(<argument pos:start="17:34" pos:end="17:43"><expr pos:start="17:34" pos:end="17:43"><name pos:start="17:34" pos:end="17:43"><name pos:start="17:34" pos:end="17:39">client</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:43">bs</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:46" pos:end="17:47">&amp;&amp;</operator>

        <operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:25"><name pos:start="19:10" pos:end="19:15">client</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:25">nbdflags</name></name> <operator pos:start="19:27" pos:end="19:27">&amp;</operator> <name pos:start="19:29" pos:end="19:45">NBD_FLAG_SEND_FUA</name><operator pos:start="19:46" pos:end="19:46">)</operator></expr>)</condition> <block pos:start="19:49" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:41">

        <expr_stmt pos:start="21:9" pos:end="21:41"><expr pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:15">request</name><operator pos:start="21:16" pos:end="21:16">.</operator><name pos:start="21:17" pos:end="21:20">type</name></name> <operator pos:start="21:22" pos:end="21:23">|=</operator> <name pos:start="21:25" pos:end="21:40">NBD_CMD_FLAG_FUA</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:11">request</name><operator pos:start="27:12" pos:end="27:12">.</operator><name pos:start="27:13" pos:end="27:16">from</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <name pos:start="27:20" pos:end="27:29">sector_num</name> <operator pos:start="27:31" pos:end="27:31">*</operator> <literal type="number" pos:start="27:33" pos:end="27:35">512</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:11">request</name><operator pos:start="29:12" pos:end="29:12">.</operator><name pos:start="29:13" pos:end="29:15">len</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:28">nb_sectors</name> <operator pos:start="29:30" pos:end="29:30">*</operator> <literal type="number" pos:start="29:32" pos:end="29:34">512</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><call pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:23">nbd_coroutine_start</name><argument_list pos:start="33:24" pos:end="33:41">(<argument pos:start="33:25" pos:end="33:30"><expr pos:start="33:25" pos:end="33:30"><name pos:start="33:25" pos:end="33:30">client</name></expr></argument>, <argument pos:start="33:33" pos:end="33:40"><expr pos:start="33:33" pos:end="33:40"><operator pos:start="33:33" pos:end="33:33">&amp;</operator><name pos:start="33:34" pos:end="33:40">request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:62"><expr pos:start="35:5" pos:end="35:61"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:61"><name pos:start="35:11" pos:end="35:29">nbd_co_send_request</name><argument_list pos:start="35:30" pos:end="35:61">(<argument pos:start="35:31" pos:end="35:36"><expr pos:start="35:31" pos:end="35:36"><name pos:start="35:31" pos:end="35:36">client</name></expr></argument>, <argument pos:start="35:39" pos:end="35:46"><expr pos:start="35:39" pos:end="35:46"><operator pos:start="35:39" pos:end="35:39">&amp;</operator><name pos:start="35:40" pos:end="35:46">request</name></expr></argument>, <argument pos:start="35:49" pos:end="35:52"><expr pos:start="35:49" pos:end="35:52"><name pos:start="35:49" pos:end="35:52">qiov</name></expr></argument>, <argument pos:start="35:55" pos:end="35:60"><expr pos:start="35:55" pos:end="35:60"><name pos:start="35:55" pos:end="35:60">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:16">(<expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">&lt;</operator> <literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>)</condition> <block pos:start="37:18" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:27">

        <expr_stmt pos:start="39:9" pos:end="39:27"><expr pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:13">reply</name><operator pos:start="39:14" pos:end="39:14">.</operator><name pos:start="39:15" pos:end="39:19">error</name></name> <operator pos:start="39:21" pos:end="39:21">=</operator> <operator pos:start="39:23" pos:end="39:23">-</operator><name pos:start="39:24" pos:end="39:26">ret</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="45:5">else <block pos:start="41:12" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:64">

        <expr_stmt pos:start="43:9" pos:end="43:64"><expr pos:start="43:9" pos:end="43:63"><call pos:start="43:9" pos:end="43:63"><name pos:start="43:9" pos:end="43:28">nbd_co_receive_reply</name><argument_list pos:start="43:29" pos:end="43:63">(<argument pos:start="43:30" pos:end="43:35"><expr pos:start="43:30" pos:end="43:35"><name pos:start="43:30" pos:end="43:35">client</name></expr></argument>, <argument pos:start="43:38" pos:end="43:45"><expr pos:start="43:38" pos:end="43:45"><operator pos:start="43:38" pos:end="43:38">&amp;</operator><name pos:start="43:39" pos:end="43:45">request</name></expr></argument>, <argument pos:start="43:48" pos:end="43:53"><expr pos:start="43:48" pos:end="43:53"><operator pos:start="43:48" pos:end="43:48">&amp;</operator><name pos:start="43:49" pos:end="43:53">reply</name></expr></argument>, <argument pos:start="43:56" pos:end="43:59"><expr pos:start="43:56" pos:end="43:59"><name pos:start="43:56" pos:end="43:59">NULL</name></expr></argument>, <argument pos:start="43:62" pos:end="43:62"><expr pos:start="43:62" pos:end="43:62"><literal type="number" pos:start="43:62" pos:end="43:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:40"><expr pos:start="47:5" pos:end="47:39"><call pos:start="47:5" pos:end="47:39"><name pos:start="47:5" pos:end="47:21">nbd_coroutine_end</name><argument_list pos:start="47:22" pos:end="47:39">(<argument pos:start="47:23" pos:end="47:28"><expr pos:start="47:23" pos:end="47:28"><name pos:start="47:23" pos:end="47:28">client</name></expr></argument>, <argument pos:start="47:31" pos:end="47:38"><expr pos:start="47:31" pos:end="47:38"><operator pos:start="47:31" pos:end="47:31">&amp;</operator><name pos:start="47:32" pos:end="47:38">request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="49:5" pos:end="49:24">return <expr pos:start="49:12" pos:end="49:23"><operator pos:start="49:12" pos:end="49:12">-</operator><name pos:start="49:13" pos:end="49:23"><name pos:start="49:13" pos:end="49:17">reply</name><operator pos:start="49:18" pos:end="49:18">.</operator><name pos:start="49:19" pos:end="49:23">error</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
