<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2637.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:22"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:22">uint64_t</name></type> <name pos:start="1:24" pos:end="1:44">fload_invalid_op_excp</name><parameter_list pos:start="1:45" pos:end="1:70">(<parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><name pos:start="1:46" pos:end="1:56">CPUPPCState</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">env</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:69"><decl pos:start="1:64" pos:end="1:69"><type pos:start="1:64" pos:end="1:69"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:69">op</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="163:1">{<block_content pos:start="5:5" pos:end="161:15">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:16">ret</name> <init pos:start="5:18" pos:end="5:20">= <expr pos:start="5:20" pos:end="5:20"><literal type="number" pos:start="5:20" pos:end="5:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">ve</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:18"><expr pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:6">ve</name> <operator pos:start="11:8" pos:end="11:8">=</operator> <name pos:start="11:10" pos:end="11:17">fpscr_ve</name></expr>;</expr_stmt>

    <switch pos:start="13:5" pos:end="135:5">switch <condition pos:start="13:12" pos:end="13:15">(<expr pos:start="13:13" pos:end="13:14"><name pos:start="13:13" pos:end="13:14">op</name></expr>)</condition> <block pos:start="13:17" pos:end="135:5">{<block_content pos:start="15:5" pos:end="133:14">

    <case pos:start="15:5" pos:end="15:32">case <expr pos:start="15:10" pos:end="15:31"><name pos:start="15:10" pos:end="15:31">POWERPC_EXCP_FP_VXSNAN</name></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:40"><expr pos:start="17:9" pos:end="17:39"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:11">env</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:18">fpscr</name></name> <operator pos:start="17:20" pos:end="17:21">|=</operator> <literal type="number" pos:start="17:23" pos:end="17:23">1</literal> <operator pos:start="17:25" pos:end="17:26">&lt;&lt;</operator> <name pos:start="17:28" pos:end="17:39">FPSCR_VXSNAN</name></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:32">case <expr pos:start="21:10" pos:end="21:31"><name pos:start="21:10" pos:end="21:31">POWERPC_EXCP_FP_VXSOFT</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:11">env</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:18">fpscr</name></name> <operator pos:start="23:20" pos:end="23:21">|=</operator> <literal type="number" pos:start="23:23" pos:end="23:23">1</literal> <operator pos:start="23:25" pos:end="23:26">&lt;&lt;</operator> <name pos:start="23:28" pos:end="23:39">FPSCR_VXSOFT</name></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:31">case <expr pos:start="27:10" pos:end="27:30"><name pos:start="27:10" pos:end="27:30">POWERPC_EXCP_FP_VXISI</name></expr>:</case>

        <comment type="block" pos:start="29:9" pos:end="29:49">/* Magnitude subtraction of infinities */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:39"><expr pos:start="31:9" pos:end="31:38"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:11">env</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:18">fpscr</name></name> <operator pos:start="31:20" pos:end="31:21">|=</operator> <literal type="number" pos:start="31:23" pos:end="31:23">1</literal> <operator pos:start="31:25" pos:end="31:26">&lt;&lt;</operator> <name pos:start="31:28" pos:end="31:38">FPSCR_VXISI</name></expr>;</expr_stmt>

        <goto pos:start="33:9" pos:end="33:26">goto <name pos:start="33:14" pos:end="33:25">update_arith</name>;</goto>

    <case pos:start="35:5" pos:end="35:31">case <expr pos:start="35:10" pos:end="35:30"><name pos:start="35:10" pos:end="35:30">POWERPC_EXCP_FP_VXIDI</name></expr>:</case>

        <comment type="block" pos:start="37:9" pos:end="37:46">/* Division of infinity by infinity */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:39"><expr pos:start="39:9" pos:end="39:38"><name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:11">env</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:18">fpscr</name></name> <operator pos:start="39:20" pos:end="39:21">|=</operator> <literal type="number" pos:start="39:23" pos:end="39:23">1</literal> <operator pos:start="39:25" pos:end="39:26">&lt;&lt;</operator> <name pos:start="39:28" pos:end="39:38">FPSCR_VXIDI</name></expr>;</expr_stmt>

        <goto pos:start="41:9" pos:end="41:26">goto <name pos:start="41:14" pos:end="41:25">update_arith</name>;</goto>

    <case pos:start="43:5" pos:end="43:31">case <expr pos:start="43:10" pos:end="43:30"><name pos:start="43:10" pos:end="43:30">POWERPC_EXCP_FP_VXZDZ</name></expr>:</case>

        <comment type="block" pos:start="45:9" pos:end="45:38">/* Division of zero by zero */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:39"><expr pos:start="47:9" pos:end="47:38"><name pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:11">env</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:18">fpscr</name></name> <operator pos:start="47:20" pos:end="47:21">|=</operator> <literal type="number" pos:start="47:23" pos:end="47:23">1</literal> <operator pos:start="47:25" pos:end="47:26">&lt;&lt;</operator> <name pos:start="47:28" pos:end="47:38">FPSCR_VXZDZ</name></expr>;</expr_stmt>

        <goto pos:start="49:9" pos:end="49:26">goto <name pos:start="49:14" pos:end="49:25">update_arith</name>;</goto>

    <case pos:start="51:5" pos:end="51:31">case <expr pos:start="51:10" pos:end="51:30"><name pos:start="51:10" pos:end="51:30">POWERPC_EXCP_FP_VXIMZ</name></expr>:</case>

        <comment type="block" pos:start="53:9" pos:end="53:48">/* Multiplication of zero by infinity */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:39"><expr pos:start="55:9" pos:end="55:38"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:11">env</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:18">fpscr</name></name> <operator pos:start="55:20" pos:end="55:21">|=</operator> <literal type="number" pos:start="55:23" pos:end="55:23">1</literal> <operator pos:start="55:25" pos:end="55:26">&lt;&lt;</operator> <name pos:start="55:28" pos:end="55:38">FPSCR_VXIMZ</name></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:26">goto <name pos:start="57:14" pos:end="57:25">update_arith</name>;</goto>

    <case pos:start="59:5" pos:end="59:30">case <expr pos:start="59:10" pos:end="59:29"><name pos:start="59:10" pos:end="59:29">POWERPC_EXCP_FP_VXVC</name></expr>:</case>

        <comment type="block" pos:start="61:9" pos:end="61:39">/* Ordered comparison of NaN */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:38"><expr pos:start="63:9" pos:end="63:37"><name pos:start="63:9" pos:end="63:18"><name pos:start="63:9" pos:end="63:11">env</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:18">fpscr</name></name> <operator pos:start="63:20" pos:end="63:21">|=</operator> <literal type="number" pos:start="63:23" pos:end="63:23">1</literal> <operator pos:start="63:25" pos:end="63:26">&lt;&lt;</operator> <name pos:start="63:28" pos:end="63:37">FPSCR_VXVC</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:43"><expr pos:start="65:9" pos:end="65:42"><name pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:11">env</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:18">fpscr</name></name> <operator pos:start="65:20" pos:end="65:21">&amp;=</operator> <operator pos:start="65:23" pos:end="65:23">~</operator><operator pos:start="65:24" pos:end="65:24">(</operator><literal type="number" pos:start="65:25" pos:end="65:27">0xF</literal> <operator pos:start="65:29" pos:end="65:30">&lt;&lt;</operator> <name pos:start="65:32" pos:end="65:41">FPSCR_FPCC</name><operator pos:start="65:42" pos:end="65:42">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:41"><expr pos:start="67:9" pos:end="67:40"><name pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:11">env</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:18">fpscr</name></name> <operator pos:start="67:20" pos:end="67:21">|=</operator> <literal type="number" pos:start="67:23" pos:end="67:26">0x11</literal> <operator pos:start="67:28" pos:end="67:29">&lt;&lt;</operator> <name pos:start="67:31" pos:end="67:40">FPSCR_FPCC</name></expr>;</expr_stmt>

        <comment type="block" pos:start="69:9" pos:end="69:72">/* We must update the target FPR before raising the exception */</comment>

        <if_stmt pos:start="71:9" pos:end="85:9"><if pos:start="71:9" pos:end="85:9">if <condition pos:start="71:12" pos:end="71:20">(<expr pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:14">ve</name> <operator pos:start="71:16" pos:end="71:17">!=</operator> <literal type="number" pos:start="71:19" pos:end="71:19">0</literal></expr>)</condition> <block pos:start="71:22" pos:end="85:9">{<block_content pos:start="73:13" pos:end="83:19">

            <expr_stmt pos:start="73:13" pos:end="73:56"><expr pos:start="73:13" pos:end="73:55"><name pos:start="73:13" pos:end="73:32"><name pos:start="73:13" pos:end="73:15">env</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:32">exception_index</name></name> <operator pos:start="73:34" pos:end="73:34">=</operator> <name pos:start="73:36" pos:end="73:55">POWERPC_EXCP_PROGRAM</name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:69"><expr pos:start="75:13" pos:end="75:68"><name pos:start="75:13" pos:end="75:27"><name pos:start="75:13" pos:end="75:15">env</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:27">error_code</name></name> <operator pos:start="75:29" pos:end="75:29">=</operator> <name pos:start="75:31" pos:end="75:45">POWERPC_EXCP_FP</name> <operator pos:start="75:47" pos:end="75:47">|</operator> <name pos:start="75:49" pos:end="75:68">POWERPC_EXCP_FP_VXVC</name></expr>;</expr_stmt>

            <comment type="block" pos:start="77:13" pos:end="77:69">/* Update the floating-point enabled exception summary */</comment>

            <expr_stmt pos:start="79:13" pos:end="79:41"><expr pos:start="79:13" pos:end="79:40"><name pos:start="79:13" pos:end="79:22"><name pos:start="79:13" pos:end="79:15">env</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:22">fpscr</name></name> <operator pos:start="79:24" pos:end="79:25">|=</operator> <literal type="number" pos:start="79:27" pos:end="79:27">1</literal> <operator pos:start="79:29" pos:end="79:30">&lt;&lt;</operator> <name pos:start="79:32" pos:end="79:40">FPSCR_FEX</name></expr>;</expr_stmt>

            <comment type="block" pos:start="81:13" pos:end="81:39">/* Exception is differed */</comment>

            <expr_stmt pos:start="83:13" pos:end="83:19"><expr pos:start="83:13" pos:end="83:18"><name pos:start="83:13" pos:end="83:14">ve</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <literal type="number" pos:start="83:18" pos:end="83:18">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <case pos:start="89:5" pos:end="89:32">case <expr pos:start="89:10" pos:end="89:31"><name pos:start="89:10" pos:end="89:31">POWERPC_EXCP_FP_VXSQRT</name></expr>:</case>

        <comment type="block" pos:start="91:9" pos:end="91:46">/* Square root of a negative number */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:40"><expr pos:start="93:9" pos:end="93:39"><name pos:start="93:9" pos:end="93:18"><name pos:start="93:9" pos:end="93:11">env</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:18">fpscr</name></name> <operator pos:start="93:20" pos:end="93:21">|=</operator> <literal type="number" pos:start="93:23" pos:end="93:23">1</literal> <operator pos:start="93:25" pos:end="93:26">&lt;&lt;</operator> <name pos:start="93:28" pos:end="93:39">FPSCR_VXSQRT</name></expr>;</expr_stmt>

    <label pos:start="95:5" pos:end="95:17"><name pos:start="95:5" pos:end="95:16">update_arith</name>:</label>

        <expr_stmt pos:start="97:9" pos:end="97:59"><expr pos:start="97:9" pos:end="97:58"><name pos:start="97:9" pos:end="97:18"><name pos:start="97:9" pos:end="97:11">env</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:18">fpscr</name></name> <operator pos:start="97:20" pos:end="97:21">&amp;=</operator> <operator pos:start="97:23" pos:end="97:23">~</operator><operator pos:start="97:24" pos:end="97:24">(</operator><operator pos:start="97:25" pos:end="97:25">(</operator><literal type="number" pos:start="97:26" pos:end="97:26">1</literal> <operator pos:start="97:28" pos:end="97:29">&lt;&lt;</operator> <name pos:start="97:31" pos:end="97:38">FPSCR_FR</name><operator pos:start="97:39" pos:end="97:39">)</operator> <operator pos:start="97:41" pos:end="97:41">|</operator> <operator pos:start="97:43" pos:end="97:43">(</operator><literal type="number" pos:start="97:44" pos:end="97:44">1</literal> <operator pos:start="97:46" pos:end="97:47">&lt;&lt;</operator> <name pos:start="97:49" pos:end="97:56">FPSCR_FI</name><operator pos:start="97:57" pos:end="97:57">)</operator><operator pos:start="97:58" pos:end="97:58">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="109:9"><if pos:start="99:9" pos:end="109:9">if <condition pos:start="99:12" pos:end="99:20">(<expr pos:start="99:13" pos:end="99:19"><name pos:start="99:13" pos:end="99:14">ve</name> <operator pos:start="99:16" pos:end="99:17">==</operator> <literal type="number" pos:start="99:19" pos:end="99:19">0</literal></expr>)</condition> <block pos:start="99:22" pos:end="109:9">{<block_content pos:start="103:13" pos:end="107:45">

            <comment type="block" pos:start="101:13" pos:end="101:45">/* Set the result to quiet NaN */</comment>

            <expr_stmt pos:start="103:13" pos:end="103:40"><expr pos:start="103:13" pos:end="103:39"><name pos:start="103:13" pos:end="103:15">ret</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <literal type="number" pos:start="103:19" pos:end="103:39">0x7FF8000000000000ULL</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:47"><expr pos:start="105:13" pos:end="105:46"><name pos:start="105:13" pos:end="105:22"><name pos:start="105:13" pos:end="105:15">env</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:22">fpscr</name></name> <operator pos:start="105:24" pos:end="105:25">&amp;=</operator> <operator pos:start="105:27" pos:end="105:27">~</operator><operator pos:start="105:28" pos:end="105:28">(</operator><literal type="number" pos:start="105:29" pos:end="105:31">0xF</literal> <operator pos:start="105:33" pos:end="105:34">&lt;&lt;</operator> <name pos:start="105:36" pos:end="105:45">FPSCR_FPCC</name><operator pos:start="105:46" pos:end="105:46">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:45"><expr pos:start="107:13" pos:end="107:44"><name pos:start="107:13" pos:end="107:22"><name pos:start="107:13" pos:end="107:15">env</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:22">fpscr</name></name> <operator pos:start="107:24" pos:end="107:25">|=</operator> <literal type="number" pos:start="107:27" pos:end="107:30">0x11</literal> <operator pos:start="107:32" pos:end="107:33">&lt;&lt;</operator> <name pos:start="107:35" pos:end="107:44">FPSCR_FPCC</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="111:9" pos:end="111:14">break;</break>

    <case pos:start="113:5" pos:end="113:31">case <expr pos:start="113:10" pos:end="113:30"><name pos:start="113:10" pos:end="113:30">POWERPC_EXCP_FP_VXCVI</name></expr>:</case>

        <comment type="block" pos:start="115:9" pos:end="115:32">/* Invalid conversion */</comment>

        <expr_stmt pos:start="117:9" pos:end="117:39"><expr pos:start="117:9" pos:end="117:38"><name pos:start="117:9" pos:end="117:18"><name pos:start="117:9" pos:end="117:11">env</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:18">fpscr</name></name> <operator pos:start="117:20" pos:end="117:21">|=</operator> <literal type="number" pos:start="117:23" pos:end="117:23">1</literal> <operator pos:start="117:25" pos:end="117:26">&lt;&lt;</operator> <name pos:start="117:28" pos:end="117:38">FPSCR_VXCVI</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:59"><expr pos:start="119:9" pos:end="119:58"><name pos:start="119:9" pos:end="119:18"><name pos:start="119:9" pos:end="119:11">env</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:18">fpscr</name></name> <operator pos:start="119:20" pos:end="119:21">&amp;=</operator> <operator pos:start="119:23" pos:end="119:23">~</operator><operator pos:start="119:24" pos:end="119:24">(</operator><operator pos:start="119:25" pos:end="119:25">(</operator><literal type="number" pos:start="119:26" pos:end="119:26">1</literal> <operator pos:start="119:28" pos:end="119:29">&lt;&lt;</operator> <name pos:start="119:31" pos:end="119:38">FPSCR_FR</name><operator pos:start="119:39" pos:end="119:39">)</operator> <operator pos:start="119:41" pos:end="119:41">|</operator> <operator pos:start="119:43" pos:end="119:43">(</operator><literal type="number" pos:start="119:44" pos:end="119:44">1</literal> <operator pos:start="119:46" pos:end="119:47">&lt;&lt;</operator> <name pos:start="119:49" pos:end="119:56">FPSCR_FI</name><operator pos:start="119:57" pos:end="119:57">)</operator><operator pos:start="119:58" pos:end="119:58">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="131:9"><if pos:start="121:9" pos:end="131:9">if <condition pos:start="121:12" pos:end="121:20">(<expr pos:start="121:13" pos:end="121:19"><name pos:start="121:13" pos:end="121:14">ve</name> <operator pos:start="121:16" pos:end="121:17">==</operator> <literal type="number" pos:start="121:19" pos:end="121:19">0</literal></expr>)</condition> <block pos:start="121:22" pos:end="131:9">{<block_content pos:start="125:13" pos:end="129:45">

            <comment type="block" pos:start="123:13" pos:end="123:45">/* Set the result to quiet NaN */</comment>

            <expr_stmt pos:start="125:13" pos:end="125:40"><expr pos:start="125:13" pos:end="125:39"><name pos:start="125:13" pos:end="125:15">ret</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <literal type="number" pos:start="125:19" pos:end="125:39">0x7FF8000000000000ULL</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:47"><expr pos:start="127:13" pos:end="127:46"><name pos:start="127:13" pos:end="127:22"><name pos:start="127:13" pos:end="127:15">env</name><operator pos:start="127:16" pos:end="127:17">-&gt;</operator><name pos:start="127:18" pos:end="127:22">fpscr</name></name> <operator pos:start="127:24" pos:end="127:25">&amp;=</operator> <operator pos:start="127:27" pos:end="127:27">~</operator><operator pos:start="127:28" pos:end="127:28">(</operator><literal type="number" pos:start="127:29" pos:end="127:31">0xF</literal> <operator pos:start="127:33" pos:end="127:34">&lt;&lt;</operator> <name pos:start="127:36" pos:end="127:45">FPSCR_FPCC</name><operator pos:start="127:46" pos:end="127:46">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:45"><expr pos:start="129:13" pos:end="129:44"><name pos:start="129:13" pos:end="129:22"><name pos:start="129:13" pos:end="129:15">env</name><operator pos:start="129:16" pos:end="129:17">-&gt;</operator><name pos:start="129:18" pos:end="129:22">fpscr</name></name> <operator pos:start="129:24" pos:end="129:25">|=</operator> <literal type="number" pos:start="129:27" pos:end="129:30">0x11</literal> <operator pos:start="129:32" pos:end="129:33">&lt;&lt;</operator> <name pos:start="129:35" pos:end="129:44">FPSCR_FPCC</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="133:9" pos:end="133:14">break;</break>

    </block_content>}</block></switch>

    <comment type="block" pos:start="137:5" pos:end="137:61">/* Update the floating-point invalid operation summary */</comment>

    <expr_stmt pos:start="139:5" pos:end="139:32"><expr pos:start="139:5" pos:end="139:31"><name pos:start="139:5" pos:end="139:14"><name pos:start="139:5" pos:end="139:7">env</name><operator pos:start="139:8" pos:end="139:9">-&gt;</operator><name pos:start="139:10" pos:end="139:14">fpscr</name></name> <operator pos:start="139:16" pos:end="139:17">|=</operator> <literal type="number" pos:start="139:19" pos:end="139:19">1</literal> <operator pos:start="139:21" pos:end="139:22">&lt;&lt;</operator> <name pos:start="139:24" pos:end="139:31">FPSCR_VX</name></expr>;</expr_stmt>

    <comment type="block" pos:start="141:5" pos:end="141:53">/* Update the floating-point exception summary */</comment>

    <expr_stmt pos:start="143:5" pos:end="143:32"><expr pos:start="143:5" pos:end="143:31"><name pos:start="143:5" pos:end="143:14"><name pos:start="143:5" pos:end="143:7">env</name><operator pos:start="143:8" pos:end="143:9">-&gt;</operator><name pos:start="143:10" pos:end="143:14">fpscr</name></name> <operator pos:start="143:16" pos:end="143:17">|=</operator> <literal type="number" pos:start="143:19" pos:end="143:19">1</literal> <operator pos:start="143:21" pos:end="143:22">&lt;&lt;</operator> <name pos:start="143:24" pos:end="143:31">FPSCR_FX</name></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="159:5"><if pos:start="145:5" pos:end="159:5">if <condition pos:start="145:8" pos:end="145:16">(<expr pos:start="145:9" pos:end="145:15"><name pos:start="145:9" pos:end="145:10">ve</name> <operator pos:start="145:12" pos:end="145:13">!=</operator> <literal type="number" pos:start="145:15" pos:end="145:15">0</literal></expr>)</condition> <block pos:start="145:18" pos:end="159:5">{<block_content pos:start="149:9" pos:end="157:9">

        <comment type="block" pos:start="147:9" pos:end="147:65">/* Update the floating-point enabled exception summary */</comment>

        <expr_stmt pos:start="149:9" pos:end="149:37"><expr pos:start="149:9" pos:end="149:36"><name pos:start="149:9" pos:end="149:18"><name pos:start="149:9" pos:end="149:11">env</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:18">fpscr</name></name> <operator pos:start="149:20" pos:end="149:21">|=</operator> <literal type="number" pos:start="149:23" pos:end="149:23">1</literal> <operator pos:start="149:25" pos:end="149:26">&lt;&lt;</operator> <name pos:start="149:28" pos:end="149:36">FPSCR_FEX</name></expr>;</expr_stmt>

        <if_stmt pos:start="151:9" pos:end="157:9"><if pos:start="151:9" pos:end="157:9">if <condition pos:start="151:12" pos:end="151:41">(<expr pos:start="151:13" pos:end="151:40"><name pos:start="151:13" pos:end="151:19">msr_fe0</name> <operator pos:start="151:21" pos:end="151:22">!=</operator> <literal type="number" pos:start="151:24" pos:end="151:24">0</literal> <operator pos:start="151:26" pos:end="151:27">||</operator> <name pos:start="151:29" pos:end="151:35">msr_fe1</name> <operator pos:start="151:37" pos:end="151:38">!=</operator> <literal type="number" pos:start="151:40" pos:end="151:40">0</literal></expr>)</condition> <block pos:start="151:43" pos:end="157:9">{<block_content pos:start="153:13" pos:end="155:61">

            <expr_stmt pos:start="153:13" pos:end="155:61"><expr pos:start="153:13" pos:end="155:60"><call pos:start="153:13" pos:end="155:60"><name pos:start="153:13" pos:end="153:38">helper_raise_exception_err</name><argument_list pos:start="153:39" pos:end="155:60">(<argument pos:start="153:40" pos:end="153:42"><expr pos:start="153:40" pos:end="153:42"><name pos:start="153:40" pos:end="153:42">env</name></expr></argument>, <argument pos:start="153:45" pos:end="153:64"><expr pos:start="153:45" pos:end="153:64"><name pos:start="153:45" pos:end="153:64">POWERPC_EXCP_PROGRAM</name></expr></argument>,

                                       <argument pos:start="155:40" pos:end="155:59"><expr pos:start="155:40" pos:end="155:59"><name pos:start="155:40" pos:end="155:54">POWERPC_EXCP_FP</name> <operator pos:start="155:56" pos:end="155:56">|</operator> <name pos:start="155:58" pos:end="155:59">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="161:5" pos:end="161:15">return <expr pos:start="161:12" pos:end="161:14"><name pos:start="161:12" pos:end="161:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
