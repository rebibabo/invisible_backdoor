<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24305.c" pos:tabs="8"><function pos:start="1:1" pos:end="237:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:29">put_pixels16_xy2_altivec</name><parameter_list pos:start="1:30" pos:end="1:92">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:37">uint8_t</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type> <name pos:start="1:41" pos:end="1:45">block</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:69"><decl pos:start="1:48" pos:end="1:69"><type pos:start="1:48" pos:end="1:69"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:60">uint8_t</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type> <name pos:start="1:64" pos:end="1:69">pixels</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:84"><decl pos:start="1:72" pos:end="1:84"><type pos:start="1:72" pos:end="1:84"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:84">line_size</name></decl></parameter>, <parameter pos:start="1:87" pos:end="1:91"><decl pos:start="1:87" pos:end="1:91"><type pos:start="1:87" pos:end="1:91"><name pos:start="1:87" pos:end="1:89">int</name></type> <name pos:start="1:91" pos:end="1:91">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="237:1">{<block_content pos:start="5:1" pos:end="236:0">

<expr_stmt pos:start="5:1" pos:end="8:0"><expr pos:start="5:1" pos:end="5:52"><call pos:start="5:1" pos:end="5:52"><name pos:start="5:1" pos:end="5:19">POWERPC_TBL_DECLARE</name><argument_list pos:start="5:20" pos:end="5:52">(<argument pos:start="5:21" pos:end="5:48"><expr pos:start="5:21" pos:end="5:48"><name pos:start="5:21" pos:end="5:48">altivec_put_pixels16_xy2_num</name></expr></argument>, <argument pos:start="5:51" pos:end="5:51"><expr pos:start="5:51" pos:end="5:51"><literal type="number" pos:start="5:51" pos:end="5:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="7:1" pos:end="7:35">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:35">ALTIVEC_USE_REFERENCE_C_CODE</name></cpp:ifdef>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">j</name></decl>;</decl_stmt>

<expr_stmt pos:start="11:1" pos:end="11:57"><expr pos:start="11:1" pos:end="11:56"><call pos:start="11:1" pos:end="11:56"><name pos:start="11:1" pos:end="11:23">POWERPC_TBL_START_COUNT</name><argument_list pos:start="11:24" pos:end="11:56">(<argument pos:start="11:25" pos:end="11:52"><expr pos:start="11:25" pos:end="11:52"><name pos:start="11:25" pos:end="11:52">altivec_put_pixels16_xy2_num</name></expr></argument>, <argument pos:start="11:55" pos:end="11:55"><expr pos:start="11:55" pos:end="11:55"><literal type="number" pos:start="11:55" pos:end="11:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <for pos:start="13:7" pos:end="73:5">for <control pos:start="13:11" pos:end="13:29">(<init pos:start="13:12" pos:end="13:17"><expr pos:start="13:12" pos:end="13:16"><name pos:start="13:12" pos:end="13:12">j</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</init> <condition pos:start="13:19" pos:end="13:24"><expr pos:start="13:19" pos:end="13:23"><name pos:start="13:19" pos:end="13:19">j</name> <operator pos:start="13:21" pos:end="13:21">&lt;</operator> <literal type="number" pos:start="13:23" pos:end="13:23">4</literal></expr>;</condition> <incr pos:start="13:26" pos:end="13:28"><expr pos:start="13:26" pos:end="13:28"><name pos:start="13:26" pos:end="13:26">j</name><operator pos:start="13:27" pos:end="13:28">++</operator></expr></incr>)</control> <block pos:start="13:31" pos:end="73:5">{<block_content pos:start="15:7" pos:end="71:33">

      <decl_stmt pos:start="15:7" pos:end="15:12"><decl pos:start="15:7" pos:end="15:11"><type pos:start="15:7" pos:end="15:9"><name pos:start="15:7" pos:end="15:9">int</name></type> <name pos:start="15:11" pos:end="15:11">i</name></decl>;</decl_stmt>

      <decl_stmt pos:start="17:7" pos:end="17:71"><decl pos:start="17:7" pos:end="17:70"><type pos:start="17:7" pos:end="17:20"><specifier pos:start="17:7" pos:end="17:11">const</specifier> <name pos:start="17:13" pos:end="17:20">uint32_t</name></type> <name pos:start="17:22" pos:end="17:22">a</name> <init pos:start="17:24" pos:end="17:70">= <expr pos:start="17:26" pos:end="17:70"><operator pos:start="17:26" pos:end="17:26">(</operator><operator pos:start="17:27" pos:end="17:27">(</operator><operator pos:start="17:28" pos:end="17:28">(</operator><specifier pos:start="17:29" pos:end="17:33">const</specifier> struct <name pos:start="17:42" pos:end="17:53">unaligned_32</name> <operator pos:start="17:55" pos:end="17:55">*</operator><operator pos:start="17:56" pos:end="17:56">)</operator> <operator pos:start="17:58" pos:end="17:58">(</operator><name pos:start="17:59" pos:end="17:64">pixels</name><operator pos:start="17:65" pos:end="17:65">)</operator><operator pos:start="17:66" pos:end="17:66">)</operator><operator pos:start="17:67" pos:end="17:68">-&gt;</operator><name pos:start="17:69" pos:end="17:69">l</name><operator pos:start="17:70" pos:end="17:70">)</operator></expr></init></decl>;</decl_stmt>

      <decl_stmt pos:start="19:7" pos:end="21:58"><decl pos:start="19:7" pos:end="21:57"><type pos:start="19:7" pos:end="19:20"><specifier pos:start="19:7" pos:end="19:11">const</specifier> <name pos:start="19:13" pos:end="19:20">uint32_t</name></type> <name pos:start="19:22" pos:end="19:22">b</name> <init pos:start="19:24" pos:end="21:57">=

        <expr pos:start="21:9" pos:end="21:57"><operator pos:start="21:9" pos:end="21:9">(</operator><operator pos:start="21:10" pos:end="21:10">(</operator><operator pos:start="21:11" pos:end="21:11">(</operator><specifier pos:start="21:12" pos:end="21:16">const</specifier> struct <name pos:start="21:25" pos:end="21:36">unaligned_32</name> <operator pos:start="21:38" pos:end="21:38">*</operator><operator pos:start="21:39" pos:end="21:39">)</operator> <operator pos:start="21:41" pos:end="21:41">(</operator><name pos:start="21:42" pos:end="21:47">pixels</name> <operator pos:start="21:49" pos:end="21:49">+</operator> <literal type="number" pos:start="21:51" pos:end="21:51">1</literal><operator pos:start="21:52" pos:end="21:52">)</operator><operator pos:start="21:53" pos:end="21:53">)</operator><operator pos:start="21:54" pos:end="21:55">-&gt;</operator><name pos:start="21:56" pos:end="21:56">l</name><operator pos:start="21:57" pos:end="21:57">)</operator></expr></init></decl>;</decl_stmt>

      <decl_stmt pos:start="23:7" pos:end="25:63"><decl pos:start="23:7" pos:end="25:62"><type pos:start="23:7" pos:end="23:14"><name pos:start="23:7" pos:end="23:14">uint32_t</name></type> <name pos:start="23:16" pos:end="23:17">l0</name> <init pos:start="23:19" pos:end="25:62">=

        <expr pos:start="25:9" pos:end="25:62"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:10">a</name> <operator pos:start="25:12" pos:end="25:12">&amp;</operator> <literal type="number" pos:start="25:14" pos:end="25:25">0x03030303UL</literal><operator pos:start="25:26" pos:end="25:26">)</operator> <operator pos:start="25:28" pos:end="25:28">+</operator> <operator pos:start="25:30" pos:end="25:30">(</operator><name pos:start="25:31" pos:end="25:31">b</name> <operator pos:start="25:33" pos:end="25:33">&amp;</operator> <literal type="number" pos:start="25:35" pos:end="25:46">0x03030303UL</literal><operator pos:start="25:47" pos:end="25:47">)</operator> <operator pos:start="25:49" pos:end="25:49">+</operator> <literal type="number" pos:start="25:51" pos:end="25:62">0x02020202UL</literal></expr></init></decl>;</decl_stmt>

      <decl_stmt pos:start="27:7" pos:end="29:62"><decl pos:start="27:7" pos:end="29:61"><type pos:start="27:7" pos:end="27:14"><name pos:start="27:7" pos:end="27:14">uint32_t</name></type> <name pos:start="27:16" pos:end="27:17">h0</name> <init pos:start="27:19" pos:end="29:61">=

        <expr pos:start="29:9" pos:end="29:61"><operator pos:start="29:9" pos:end="29:9">(</operator><operator pos:start="29:10" pos:end="29:10">(</operator><name pos:start="29:11" pos:end="29:11">a</name> <operator pos:start="29:13" pos:end="29:13">&amp;</operator> <literal type="number" pos:start="29:15" pos:end="29:26">0xFCFCFCFCUL</literal><operator pos:start="29:27" pos:end="29:27">)</operator> <operator pos:start="29:29" pos:end="29:30">&gt;&gt;</operator> <literal type="number" pos:start="29:32" pos:end="29:32">2</literal><operator pos:start="29:33" pos:end="29:33">)</operator> <operator pos:start="29:35" pos:end="29:35">+</operator> <operator pos:start="29:37" pos:end="29:37">(</operator><operator pos:start="29:38" pos:end="29:38">(</operator><name pos:start="29:39" pos:end="29:39">b</name> <operator pos:start="29:41" pos:end="29:41">&amp;</operator> <literal type="number" pos:start="29:43" pos:end="29:54">0xFCFCFCFCUL</literal><operator pos:start="29:55" pos:end="29:55">)</operator> <operator pos:start="29:57" pos:end="29:58">&gt;&gt;</operator> <literal type="number" pos:start="29:60" pos:end="29:60">2</literal><operator pos:start="29:61" pos:end="29:61">)</operator></expr></init></decl>;</decl_stmt>

      <decl_stmt pos:start="31:7" pos:end="31:22"><decl pos:start="31:7" pos:end="31:17"><type pos:start="31:7" pos:end="31:14"><name pos:start="31:7" pos:end="31:14">uint32_t</name></type> <name pos:start="31:16" pos:end="31:17">l1</name></decl>, <decl pos:start="31:20" pos:end="31:21"><type ref="prev" pos:start="31:7" pos:end="31:14"/><name pos:start="31:20" pos:end="31:21">h1</name></decl>;</decl_stmt>

      <expr_stmt pos:start="33:7" pos:end="33:26"><expr pos:start="33:7" pos:end="33:25"><name pos:start="33:7" pos:end="33:12">pixels</name> <operator pos:start="33:14" pos:end="33:15">+=</operator> <name pos:start="33:17" pos:end="33:25">line_size</name></expr>;</expr_stmt>

      <for pos:start="35:7" pos:end="69:7">for <control pos:start="35:11" pos:end="35:32">(<init pos:start="35:12" pos:end="35:17"><expr pos:start="35:12" pos:end="35:16"><name pos:start="35:12" pos:end="35:12">i</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</init> <condition pos:start="35:19" pos:end="35:24"><expr pos:start="35:19" pos:end="35:23"><name pos:start="35:19" pos:end="35:19">i</name> <operator pos:start="35:21" pos:end="35:21">&lt;</operator> <name pos:start="35:23" pos:end="35:23">h</name></expr>;</condition> <incr pos:start="35:26" pos:end="35:31"><expr pos:start="35:26" pos:end="35:31"><name pos:start="35:26" pos:end="35:26">i</name> <operator pos:start="35:28" pos:end="35:29">+=</operator> <literal type="number" pos:start="35:31" pos:end="35:31">2</literal></expr></incr>)</control> <block pos:start="35:34" pos:end="69:7">{<block_content pos:start="37:9" pos:end="67:27">

        <decl_stmt pos:start="37:9" pos:end="37:67"><decl pos:start="37:9" pos:end="37:66"><type pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:16">uint32_t</name></type> <name pos:start="37:18" pos:end="37:18">a</name> <init pos:start="37:20" pos:end="37:66">= <expr pos:start="37:22" pos:end="37:66"><operator pos:start="37:22" pos:end="37:22">(</operator><operator pos:start="37:23" pos:end="37:23">(</operator><operator pos:start="37:24" pos:end="37:24">(</operator><specifier pos:start="37:25" pos:end="37:29">const</specifier> struct <name pos:start="37:38" pos:end="37:49">unaligned_32</name> <operator pos:start="37:51" pos:end="37:51">*</operator><operator pos:start="37:52" pos:end="37:52">)</operator> <operator pos:start="37:54" pos:end="37:54">(</operator><name pos:start="37:55" pos:end="37:60">pixels</name><operator pos:start="37:61" pos:end="37:61">)</operator><operator pos:start="37:62" pos:end="37:62">)</operator><operator pos:start="37:63" pos:end="37:64">-&gt;</operator><name pos:start="37:65" pos:end="37:65">l</name><operator pos:start="37:66" pos:end="37:66">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:71"><decl pos:start="39:9" pos:end="39:70"><type pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:16">uint32_t</name></type> <name pos:start="39:18" pos:end="39:18">b</name> <init pos:start="39:20" pos:end="39:70">= <expr pos:start="39:22" pos:end="39:70"><operator pos:start="39:22" pos:end="39:22">(</operator><operator pos:start="39:23" pos:end="39:23">(</operator><operator pos:start="39:24" pos:end="39:24">(</operator><specifier pos:start="39:25" pos:end="39:29">const</specifier> struct <name pos:start="39:38" pos:end="39:49">unaligned_32</name> <operator pos:start="39:51" pos:end="39:51">*</operator><operator pos:start="39:52" pos:end="39:52">)</operator> <operator pos:start="39:54" pos:end="39:54">(</operator><name pos:start="39:55" pos:end="39:60">pixels</name> <operator pos:start="39:62" pos:end="39:62">+</operator> <literal type="number" pos:start="39:64" pos:end="39:64">1</literal><operator pos:start="39:65" pos:end="39:65">)</operator><operator pos:start="39:66" pos:end="39:66">)</operator><operator pos:start="39:67" pos:end="39:68">-&gt;</operator><name pos:start="39:69" pos:end="39:69">l</name><operator pos:start="39:70" pos:end="39:70">)</operator></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:53"><expr pos:start="41:9" pos:end="41:52"><name pos:start="41:9" pos:end="41:10">l1</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <operator pos:start="41:14" pos:end="41:14">(</operator><name pos:start="41:15" pos:end="41:15">a</name> <operator pos:start="41:17" pos:end="41:17">&amp;</operator> <literal type="number" pos:start="41:19" pos:end="41:30">0x03030303UL</literal><operator pos:start="41:31" pos:end="41:31">)</operator> <operator pos:start="41:33" pos:end="41:33">+</operator> <operator pos:start="41:35" pos:end="41:35">(</operator><name pos:start="41:36" pos:end="41:36">b</name> <operator pos:start="41:38" pos:end="41:38">&amp;</operator> <literal type="number" pos:start="41:40" pos:end="41:51">0x03030303UL</literal><operator pos:start="41:52" pos:end="41:52">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:67"><expr pos:start="43:9" pos:end="43:66"><name pos:start="43:9" pos:end="43:10">h1</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <operator pos:start="43:14" pos:end="43:14">(</operator><operator pos:start="43:15" pos:end="43:15">(</operator><name pos:start="43:16" pos:end="43:16">a</name> <operator pos:start="43:18" pos:end="43:18">&amp;</operator> <literal type="number" pos:start="43:20" pos:end="43:31">0xFCFCFCFCUL</literal><operator pos:start="43:32" pos:end="43:32">)</operator> <operator pos:start="43:34" pos:end="43:35">&gt;&gt;</operator> <literal type="number" pos:start="43:37" pos:end="43:37">2</literal><operator pos:start="43:38" pos:end="43:38">)</operator> <operator pos:start="43:40" pos:end="43:40">+</operator> <operator pos:start="43:42" pos:end="43:42">(</operator><operator pos:start="43:43" pos:end="43:43">(</operator><name pos:start="43:44" pos:end="43:44">b</name> <operator pos:start="43:46" pos:end="43:46">&amp;</operator> <literal type="number" pos:start="43:48" pos:end="43:59">0xFCFCFCFCUL</literal><operator pos:start="43:60" pos:end="43:60">)</operator> <operator pos:start="43:62" pos:end="43:63">&gt;&gt;</operator> <literal type="number" pos:start="43:65" pos:end="43:65">2</literal><operator pos:start="43:66" pos:end="43:66">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="47:54"><expr pos:start="45:9" pos:end="47:53"><operator pos:start="45:9" pos:end="45:9">*</operator><operator pos:start="45:10" pos:end="45:10">(</operator><operator pos:start="45:11" pos:end="45:11">(</operator><name pos:start="45:12" pos:end="45:19">uint32_t</name> <operator pos:start="45:21" pos:end="45:21">*</operator><operator pos:start="45:22" pos:end="45:22">)</operator> <name pos:start="45:24" pos:end="45:28">block</name><operator pos:start="45:29" pos:end="45:29">)</operator> <operator pos:start="45:31" pos:end="45:31">=</operator>

          <name pos:start="47:11" pos:end="47:12">h0</name> <operator pos:start="47:14" pos:end="47:14">+</operator> <name pos:start="47:16" pos:end="47:17">h1</name> <operator pos:start="47:19" pos:end="47:19">+</operator> <operator pos:start="47:21" pos:end="47:21">(</operator><operator pos:start="47:22" pos:end="47:22">(</operator><operator pos:start="47:23" pos:end="47:23">(</operator><name pos:start="47:24" pos:end="47:25">l0</name> <operator pos:start="47:27" pos:end="47:27">+</operator> <name pos:start="47:29" pos:end="47:30">l1</name><operator pos:start="47:31" pos:end="47:31">)</operator> <operator pos:start="47:33" pos:end="47:34">&gt;&gt;</operator> <literal type="number" pos:start="47:36" pos:end="47:36">2</literal><operator pos:start="47:37" pos:end="47:37">)</operator> <operator pos:start="47:39" pos:end="47:39">&amp;</operator> <literal type="number" pos:start="47:41" pos:end="47:52">0x0F0F0F0FUL</literal><operator pos:start="47:53" pos:end="47:53">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:28"><expr pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:14">pixels</name> <operator pos:start="49:16" pos:end="49:17">+=</operator> <name pos:start="49:19" pos:end="49:27">line_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:27"><expr pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:13">block</name> <operator pos:start="51:15" pos:end="51:16">+=</operator> <name pos:start="51:18" pos:end="51:26">line_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:58"><expr pos:start="53:9" pos:end="53:57"><name pos:start="53:9" pos:end="53:9">a</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <operator pos:start="53:13" pos:end="53:13">(</operator><operator pos:start="53:14" pos:end="53:14">(</operator><operator pos:start="53:15" pos:end="53:15">(</operator><specifier pos:start="53:16" pos:end="53:20">const</specifier> struct <name pos:start="53:29" pos:end="53:40">unaligned_32</name> <operator pos:start="53:42" pos:end="53:42">*</operator><operator pos:start="53:43" pos:end="53:43">)</operator> <operator pos:start="53:45" pos:end="53:45">(</operator><name pos:start="53:46" pos:end="53:51">pixels</name><operator pos:start="53:52" pos:end="53:52">)</operator><operator pos:start="53:53" pos:end="53:53">)</operator><operator pos:start="53:54" pos:end="53:55">-&gt;</operator><name pos:start="53:56" pos:end="53:56">l</name><operator pos:start="53:57" pos:end="53:57">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:62"><expr pos:start="55:9" pos:end="55:61"><name pos:start="55:9" pos:end="55:9">b</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <operator pos:start="55:13" pos:end="55:13">(</operator><operator pos:start="55:14" pos:end="55:14">(</operator><operator pos:start="55:15" pos:end="55:15">(</operator><specifier pos:start="55:16" pos:end="55:20">const</specifier> struct <name pos:start="55:29" pos:end="55:40">unaligned_32</name> <operator pos:start="55:42" pos:end="55:42">*</operator><operator pos:start="55:43" pos:end="55:43">)</operator> <operator pos:start="55:45" pos:end="55:45">(</operator><name pos:start="55:46" pos:end="55:51">pixels</name> <operator pos:start="55:53" pos:end="55:53">+</operator> <literal type="number" pos:start="55:55" pos:end="55:55">1</literal><operator pos:start="55:56" pos:end="55:56">)</operator><operator pos:start="55:57" pos:end="55:57">)</operator><operator pos:start="55:58" pos:end="55:59">-&gt;</operator><name pos:start="55:60" pos:end="55:60">l</name><operator pos:start="55:61" pos:end="55:61">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:68"><expr pos:start="57:9" pos:end="57:67"><name pos:start="57:9" pos:end="57:10">l0</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <operator pos:start="57:14" pos:end="57:14">(</operator><name pos:start="57:15" pos:end="57:15">a</name> <operator pos:start="57:17" pos:end="57:17">&amp;</operator> <literal type="number" pos:start="57:19" pos:end="57:30">0x03030303UL</literal><operator pos:start="57:31" pos:end="57:31">)</operator> <operator pos:start="57:33" pos:end="57:33">+</operator> <operator pos:start="57:35" pos:end="57:35">(</operator><name pos:start="57:36" pos:end="57:36">b</name> <operator pos:start="57:38" pos:end="57:38">&amp;</operator> <literal type="number" pos:start="57:40" pos:end="57:51">0x03030303UL</literal><operator pos:start="57:52" pos:end="57:52">)</operator> <operator pos:start="57:54" pos:end="57:54">+</operator> <literal type="number" pos:start="57:56" pos:end="57:67">0x02020202UL</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:67"><expr pos:start="59:9" pos:end="59:66"><name pos:start="59:9" pos:end="59:10">h0</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <operator pos:start="59:14" pos:end="59:14">(</operator><operator pos:start="59:15" pos:end="59:15">(</operator><name pos:start="59:16" pos:end="59:16">a</name> <operator pos:start="59:18" pos:end="59:18">&amp;</operator> <literal type="number" pos:start="59:20" pos:end="59:31">0xFCFCFCFCUL</literal><operator pos:start="59:32" pos:end="59:32">)</operator> <operator pos:start="59:34" pos:end="59:35">&gt;&gt;</operator> <literal type="number" pos:start="59:37" pos:end="59:37">2</literal><operator pos:start="59:38" pos:end="59:38">)</operator> <operator pos:start="59:40" pos:end="59:40">+</operator> <operator pos:start="59:42" pos:end="59:42">(</operator><operator pos:start="59:43" pos:end="59:43">(</operator><name pos:start="59:44" pos:end="59:44">b</name> <operator pos:start="59:46" pos:end="59:46">&amp;</operator> <literal type="number" pos:start="59:48" pos:end="59:59">0xFCFCFCFCUL</literal><operator pos:start="59:60" pos:end="59:60">)</operator> <operator pos:start="59:62" pos:end="59:63">&gt;&gt;</operator> <literal type="number" pos:start="59:65" pos:end="59:65">2</literal><operator pos:start="59:66" pos:end="59:66">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="63:54"><expr pos:start="61:9" pos:end="63:53"><operator pos:start="61:9" pos:end="61:9">*</operator><operator pos:start="61:10" pos:end="61:10">(</operator><operator pos:start="61:11" pos:end="61:11">(</operator><name pos:start="61:12" pos:end="61:19">uint32_t</name> <operator pos:start="61:21" pos:end="61:21">*</operator><operator pos:start="61:22" pos:end="61:22">)</operator> <name pos:start="61:24" pos:end="61:28">block</name><operator pos:start="61:29" pos:end="61:29">)</operator> <operator pos:start="61:31" pos:end="61:31">=</operator>

          <name pos:start="63:11" pos:end="63:12">h0</name> <operator pos:start="63:14" pos:end="63:14">+</operator> <name pos:start="63:16" pos:end="63:17">h1</name> <operator pos:start="63:19" pos:end="63:19">+</operator> <operator pos:start="63:21" pos:end="63:21">(</operator><operator pos:start="63:22" pos:end="63:22">(</operator><operator pos:start="63:23" pos:end="63:23">(</operator><name pos:start="63:24" pos:end="63:25">l0</name> <operator pos:start="63:27" pos:end="63:27">+</operator> <name pos:start="63:29" pos:end="63:30">l1</name><operator pos:start="63:31" pos:end="63:31">)</operator> <operator pos:start="63:33" pos:end="63:34">&gt;&gt;</operator> <literal type="number" pos:start="63:36" pos:end="63:36">2</literal><operator pos:start="63:37" pos:end="63:37">)</operator> <operator pos:start="63:39" pos:end="63:39">&amp;</operator> <literal type="number" pos:start="63:41" pos:end="63:52">0x0F0F0F0FUL</literal><operator pos:start="63:53" pos:end="63:53">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:28"><expr pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:14">pixels</name> <operator pos:start="65:16" pos:end="65:17">+=</operator> <name pos:start="65:19" pos:end="65:27">line_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:27"><expr pos:start="67:9" pos:end="67:26"><name pos:start="67:9" pos:end="67:13">block</name> <operator pos:start="67:15" pos:end="67:16">+=</operator> <name pos:start="67:18" pos:end="67:26">line_size</name></expr>;</expr_stmt>

      </block_content>}</block></for> <expr_stmt pos:start="69:9" pos:end="69:42"><expr pos:start="69:9" pos:end="69:41"><name pos:start="69:9" pos:end="69:14">pixels</name> <operator pos:start="69:16" pos:end="69:17">+=</operator> <literal type="number" pos:start="69:19" pos:end="69:21">4</literal> <operator pos:start="69:21" pos:end="69:21">-</operator> <name pos:start="69:23" pos:end="69:31">line_size</name> <operator pos:start="69:33" pos:end="69:33">*</operator> <operator pos:start="69:35" pos:end="69:35">(</operator><name pos:start="69:36" pos:end="69:36">h</name> <operator pos:start="69:38" pos:end="69:38">+</operator> <literal type="number" pos:start="69:40" pos:end="69:40">1</literal><operator pos:start="69:41" pos:end="69:41">)</operator></expr>;</expr_stmt>

      <expr_stmt pos:start="71:7" pos:end="71:33"><expr pos:start="71:7" pos:end="71:32"><name pos:start="71:7" pos:end="71:11">block</name> <operator pos:start="71:13" pos:end="71:14">+=</operator> <literal type="number" pos:start="71:16" pos:end="71:18">4</literal> <operator pos:start="71:18" pos:end="71:18">-</operator> <name pos:start="71:20" pos:end="71:28">line_size</name> <operator pos:start="71:30" pos:end="71:30">*</operator> <name pos:start="71:32" pos:end="71:32">h</name></expr>;</expr_stmt>

    </block_content>}</block></for>



<expr_stmt pos:start="77:1" pos:end="82:0"><expr pos:start="77:1" pos:end="77:55"><call pos:start="77:1" pos:end="77:55"><name pos:start="77:1" pos:end="77:22">POWERPC_TBL_STOP_COUNT</name><argument_list pos:start="77:23" pos:end="77:55">(<argument pos:start="77:24" pos:end="77:51"><expr pos:start="77:24" pos:end="77:51"><name pos:start="77:24" pos:end="77:51">altivec_put_pixels16_xy2_num</name></expr></argument>, <argument pos:start="77:54" pos:end="77:54"><expr pos:start="77:54" pos:end="77:54"><literal type="number" pos:start="77:54" pos:end="77:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:else pos:start="81:1" pos:end="81:5">#<cpp:directive pos:start="81:2" pos:end="81:5">else</cpp:directive></cpp:else> <comment type="block" pos:start="81:7" pos:end="81:40">/* ALTIVEC_USE_REFERENCE_C_CODE */</comment>

   <decl_stmt pos:start="83:4" pos:end="83:18"><decl pos:start="83:4" pos:end="83:17"><type pos:start="83:4" pos:end="83:15"><specifier pos:start="83:4" pos:end="83:11">register</specifier> <name pos:start="83:13" pos:end="83:15">int</name></type> <name pos:start="83:17" pos:end="83:17">i</name></decl>;</decl_stmt>

   <decl_stmt pos:start="85:4" pos:end="87:44"><decl pos:start="85:4" pos:end="87:13"><type pos:start="85:4" pos:end="85:32"><specifier pos:start="85:4" pos:end="85:11">register</specifier> <name pos:start="85:13" pos:end="85:18">vector</name> <name pos:start="85:20" pos:end="85:27">unsigned</name> <name pos:start="85:29" pos:end="85:32">char</name></type>

     <name pos:start="87:6" pos:end="87:13">pixelsv1</name></decl>, <decl pos:start="87:16" pos:end="87:23"><type ref="prev" pos:start="85:4" pos:end="85:32"/><name pos:start="87:16" pos:end="87:23">pixelsv2</name></decl>, <decl pos:start="87:26" pos:end="87:33"><type ref="prev" pos:start="85:4" pos:end="85:32"/><name pos:start="87:26" pos:end="87:33">pixelsv3</name></decl>, <decl pos:start="87:36" pos:end="87:43"><type ref="prev" pos:start="85:4" pos:end="85:32"/><name pos:start="87:36" pos:end="87:43">pixelsv4</name></decl>;</decl_stmt>

   <decl_stmt pos:start="89:4" pos:end="91:26"><decl pos:start="89:4" pos:end="91:11"><type pos:start="89:4" pos:end="89:32"><specifier pos:start="89:4" pos:end="89:11">register</specifier> <name pos:start="89:13" pos:end="89:18">vector</name> <name pos:start="89:20" pos:end="89:27">unsigned</name> <name pos:start="89:29" pos:end="89:32">char</name></type>

     <name pos:start="91:6" pos:end="91:11">blockv</name></decl>, <decl pos:start="91:14" pos:end="91:18"><type ref="prev" pos:start="89:4" pos:end="89:32"/><name pos:start="91:14" pos:end="91:18">temp1</name></decl>, <decl pos:start="91:21" pos:end="91:25"><type ref="prev" pos:start="89:4" pos:end="89:32"/><name pos:start="91:21" pos:end="91:25">temp2</name></decl>;</decl_stmt>

   <decl_stmt pos:start="93:4" pos:end="97:35"><decl pos:start="93:4" pos:end="95:15"><type pos:start="93:4" pos:end="93:33"><specifier pos:start="93:4" pos:end="93:11">register</specifier> <name pos:start="93:13" pos:end="93:18">vector</name> <name pos:start="93:20" pos:end="93:27">unsigned</name> <name pos:start="93:29" pos:end="93:33">short</name></type>

     <name pos:start="95:6" pos:end="95:15">pixelssum1</name></decl>, <decl pos:start="95:18" pos:end="95:27"><type ref="prev" pos:start="93:4" pos:end="93:33"/><name pos:start="95:18" pos:end="95:27">pixelssum2</name></decl>, <decl pos:start="95:30" pos:end="95:34"><type ref="prev" pos:start="93:4" pos:end="93:33"/><name pos:start="95:30" pos:end="95:34">temp3</name></decl>,

     <decl pos:start="97:6" pos:end="97:15"><type ref="prev" pos:start="93:4" pos:end="93:33"/><name pos:start="97:6" pos:end="97:15">pixelssum3</name></decl>, <decl pos:start="97:18" pos:end="97:27"><type ref="prev" pos:start="93:4" pos:end="93:33"/><name pos:start="97:18" pos:end="97:27">pixelssum4</name></decl>, <decl pos:start="97:30" pos:end="97:34"><type ref="prev" pos:start="93:4" pos:end="93:33"/><name pos:start="97:30" pos:end="97:34">temp4</name></decl>;</decl_stmt>

   <decl_stmt pos:start="99:4" pos:end="99:92"><decl pos:start="99:4" pos:end="99:91"><type pos:start="99:4" pos:end="99:38"><specifier pos:start="99:4" pos:end="99:11">register</specifier> <specifier pos:start="99:13" pos:end="99:17">const</specifier> <name pos:start="99:19" pos:end="99:24">vector</name> <name pos:start="99:26" pos:end="99:33">unsigned</name> <name pos:start="99:35" pos:end="99:38">char</name></type> <name pos:start="99:40" pos:end="99:45">vczero</name> <init pos:start="99:47" pos:end="99:91">= <expr pos:start="99:49" pos:end="99:91"><operator pos:start="99:49" pos:end="99:49">(</operator><specifier pos:start="99:50" pos:end="99:54">const</specifier> <name pos:start="99:56" pos:end="99:61">vector</name> <name pos:start="99:63" pos:end="99:70">unsigned</name> <name pos:start="99:72" pos:end="99:75">char</name><operator pos:start="99:76" pos:end="99:76">)</operator><call pos:start="99:77" pos:end="99:91"><name pos:start="99:77" pos:end="99:88">vec_splat_u8</name><argument_list pos:start="99:89" pos:end="99:91">(<argument pos:start="99:90" pos:end="99:90"><expr pos:start="99:90" pos:end="99:90"><literal type="number" pos:start="99:90" pos:end="99:90">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

   <decl_stmt pos:start="101:4" pos:end="101:94"><decl pos:start="101:4" pos:end="101:93"><type pos:start="101:4" pos:end="101:39"><specifier pos:start="101:4" pos:end="101:11">register</specifier> <specifier pos:start="101:13" pos:end="101:17">const</specifier> <name pos:start="101:19" pos:end="101:24">vector</name> <name pos:start="101:26" pos:end="101:33">unsigned</name> <name pos:start="101:35" pos:end="101:39">short</name></type> <name pos:start="101:41" pos:end="101:45">vctwo</name> <init pos:start="101:47" pos:end="101:93">= <expr pos:start="101:49" pos:end="101:93"><operator pos:start="101:49" pos:end="101:49">(</operator><specifier pos:start="101:50" pos:end="101:54">const</specifier> <name pos:start="101:56" pos:end="101:61">vector</name> <name pos:start="101:63" pos:end="101:70">unsigned</name> <name pos:start="101:72" pos:end="101:76">short</name><operator pos:start="101:77" pos:end="101:77">)</operator><call pos:start="101:78" pos:end="101:93"><name pos:start="101:78" pos:end="101:90">vec_splat_u16</name><argument_list pos:start="101:91" pos:end="101:93">(<argument pos:start="101:92" pos:end="101:92"><expr pos:start="101:92" pos:end="101:92"><literal type="number" pos:start="101:92" pos:end="101:92">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<expr_stmt pos:start="105:1" pos:end="105:57"><expr pos:start="105:1" pos:end="105:56"><call pos:start="105:1" pos:end="105:56"><name pos:start="105:1" pos:end="105:23">POWERPC_TBL_START_COUNT</name><argument_list pos:start="105:24" pos:end="105:56">(<argument pos:start="105:25" pos:end="105:52"><expr pos:start="105:25" pos:end="105:52"><name pos:start="105:25" pos:end="105:52">altivec_put_pixels16_xy2_num</name></expr></argument>, <argument pos:start="105:55" pos:end="105:55"><expr pos:start="105:55" pos:end="105:55"><literal type="number" pos:start="105:55" pos:end="105:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

 

   <expr_stmt pos:start="109:4" pos:end="109:29"><expr pos:start="109:4" pos:end="109:28"><name pos:start="109:4" pos:end="109:8">temp1</name> <operator pos:start="109:10" pos:end="109:10">=</operator> <call pos:start="109:12" pos:end="109:28"><name pos:start="109:12" pos:end="109:17">vec_ld</name><argument_list pos:start="109:18" pos:end="109:28">(<argument pos:start="109:19" pos:end="109:19"><expr pos:start="109:19" pos:end="109:19"><literal type="number" pos:start="109:19" pos:end="109:19">0</literal></expr></argument>, <argument pos:start="109:22" pos:end="109:27"><expr pos:start="109:22" pos:end="109:27"><name pos:start="109:22" pos:end="109:27">pixels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <expr_stmt pos:start="111:4" pos:end="111:30"><expr pos:start="111:4" pos:end="111:29"><name pos:start="111:4" pos:end="111:8">temp2</name> <operator pos:start="111:10" pos:end="111:10">=</operator> <call pos:start="111:12" pos:end="111:29"><name pos:start="111:12" pos:end="111:17">vec_ld</name><argument_list pos:start="111:18" pos:end="111:29">(<argument pos:start="111:19" pos:end="111:20"><expr pos:start="111:19" pos:end="111:20"><literal type="number" pos:start="111:19" pos:end="111:20">16</literal></expr></argument>, <argument pos:start="111:23" pos:end="111:28"><expr pos:start="111:23" pos:end="111:28"><name pos:start="111:23" pos:end="111:28">pixels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <expr_stmt pos:start="113:4" pos:end="113:58"><expr pos:start="113:4" pos:end="113:57"><name pos:start="113:4" pos:end="113:11">pixelsv1</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <call pos:start="113:15" pos:end="113:57"><name pos:start="113:15" pos:end="113:22">vec_perm</name><argument_list pos:start="113:23" pos:end="113:57">(<argument pos:start="113:24" pos:end="113:28"><expr pos:start="113:24" pos:end="113:28"><name pos:start="113:24" pos:end="113:28">temp1</name></expr></argument>, <argument pos:start="113:31" pos:end="113:35"><expr pos:start="113:31" pos:end="113:35"><name pos:start="113:31" pos:end="113:35">temp2</name></expr></argument>, <argument pos:start="113:38" pos:end="113:56"><expr pos:start="113:38" pos:end="113:56"><call pos:start="113:38" pos:end="113:56"><name pos:start="113:38" pos:end="113:45">vec_lvsl</name><argument_list pos:start="113:46" pos:end="113:56">(<argument pos:start="113:47" pos:end="113:47"><expr pos:start="113:47" pos:end="113:47"><literal type="number" pos:start="113:47" pos:end="113:47">0</literal></expr></argument>, <argument pos:start="113:50" pos:end="113:55"><expr pos:start="113:50" pos:end="113:55"><name pos:start="113:50" pos:end="113:55">pixels</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <if_stmt pos:start="115:4" pos:end="129:4"><if pos:start="115:4" pos:end="121:4">if <condition pos:start="115:7" pos:end="115:61">(<expr pos:start="115:8" pos:end="115:60"><operator pos:start="115:8" pos:end="115:8">(</operator><operator pos:start="115:9" pos:end="115:9">(</operator><operator pos:start="115:10" pos:end="115:10">(</operator><name pos:start="115:11" pos:end="115:18">unsigned</name> <name pos:start="115:20" pos:end="115:23">long</name><operator pos:start="115:24" pos:end="115:24">)</operator><name pos:start="115:25" pos:end="115:30">pixels</name><operator pos:start="115:31" pos:end="115:31">)</operator> <operator pos:start="115:33" pos:end="115:33">&amp;</operator> <literal type="number" pos:start="115:35" pos:end="115:44">0x0000000F</literal><operator pos:start="115:45" pos:end="115:45">)</operator> <operator pos:start="115:47" pos:end="115:48">==</operator>  <literal type="number" pos:start="115:51" pos:end="115:60">0x0000000F</literal></expr>)</condition>

   <block pos:start="117:4" pos:end="121:4">{<block_content pos:start="119:6" pos:end="119:22">

     <expr_stmt pos:start="119:6" pos:end="119:22"><expr pos:start="119:6" pos:end="119:21"><name pos:start="119:6" pos:end="119:13">pixelsv2</name> <operator pos:start="119:15" pos:end="119:15">=</operator> <name pos:start="119:17" pos:end="119:21">temp2</name></expr>;</expr_stmt>

   </block_content>}</block></if>

   <else pos:start="123:4" pos:end="129:4">else

   <block pos:start="125:4" pos:end="129:4">{<block_content pos:start="127:6" pos:end="127:60">

     <expr_stmt pos:start="127:6" pos:end="127:60"><expr pos:start="127:6" pos:end="127:59"><name pos:start="127:6" pos:end="127:13">pixelsv2</name> <operator pos:start="127:15" pos:end="127:15">=</operator> <call pos:start="127:17" pos:end="127:59"><name pos:start="127:17" pos:end="127:24">vec_perm</name><argument_list pos:start="127:25" pos:end="127:59">(<argument pos:start="127:26" pos:end="127:30"><expr pos:start="127:26" pos:end="127:30"><name pos:start="127:26" pos:end="127:30">temp1</name></expr></argument>, <argument pos:start="127:33" pos:end="127:37"><expr pos:start="127:33" pos:end="127:37"><name pos:start="127:33" pos:end="127:37">temp2</name></expr></argument>, <argument pos:start="127:40" pos:end="127:58"><expr pos:start="127:40" pos:end="127:58"><call pos:start="127:40" pos:end="127:58"><name pos:start="127:40" pos:end="127:47">vec_lvsl</name><argument_list pos:start="127:48" pos:end="127:58">(<argument pos:start="127:49" pos:end="127:49"><expr pos:start="127:49" pos:end="127:49"><literal type="number" pos:start="127:49" pos:end="127:49">1</literal></expr></argument>, <argument pos:start="127:52" pos:end="127:57"><expr pos:start="127:52" pos:end="127:57"><name pos:start="127:52" pos:end="127:57">pixels</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   </block_content>}</block></else></if_stmt>

   <expr_stmt pos:start="131:4" pos:end="131:43"><expr pos:start="131:4" pos:end="131:42"><name pos:start="131:4" pos:end="131:11">pixelsv3</name> <operator pos:start="131:13" pos:end="131:13">=</operator> <call pos:start="131:15" pos:end="131:42"><name pos:start="131:15" pos:end="131:24">vec_mergel</name><argument_list pos:start="131:25" pos:end="131:42">(<argument pos:start="131:26" pos:end="131:31"><expr pos:start="131:26" pos:end="131:31"><name pos:start="131:26" pos:end="131:31">vczero</name></expr></argument>, <argument pos:start="131:34" pos:end="131:41"><expr pos:start="131:34" pos:end="131:41"><name pos:start="131:34" pos:end="131:41">pixelsv1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <expr_stmt pos:start="133:4" pos:end="133:43"><expr pos:start="133:4" pos:end="133:42"><name pos:start="133:4" pos:end="133:11">pixelsv4</name> <operator pos:start="133:13" pos:end="133:13">=</operator> <call pos:start="133:15" pos:end="133:42"><name pos:start="133:15" pos:end="133:24">vec_mergel</name><argument_list pos:start="133:25" pos:end="133:42">(<argument pos:start="133:26" pos:end="133:31"><expr pos:start="133:26" pos:end="133:31"><name pos:start="133:26" pos:end="133:31">vczero</name></expr></argument>, <argument pos:start="133:34" pos:end="133:41"><expr pos:start="133:34" pos:end="133:41"><name pos:start="133:34" pos:end="133:41">pixelsv2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <expr_stmt pos:start="135:4" pos:end="135:43"><expr pos:start="135:4" pos:end="135:42"><name pos:start="135:4" pos:end="135:11">pixelsv1</name> <operator pos:start="135:13" pos:end="135:13">=</operator> <call pos:start="135:15" pos:end="135:42"><name pos:start="135:15" pos:end="135:24">vec_mergeh</name><argument_list pos:start="135:25" pos:end="135:42">(<argument pos:start="135:26" pos:end="135:31"><expr pos:start="135:26" pos:end="135:31"><name pos:start="135:26" pos:end="135:31">vczero</name></expr></argument>, <argument pos:start="135:34" pos:end="135:41"><expr pos:start="135:34" pos:end="135:41"><name pos:start="135:34" pos:end="135:41">pixelsv1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <expr_stmt pos:start="137:4" pos:end="137:43"><expr pos:start="137:4" pos:end="137:42"><name pos:start="137:4" pos:end="137:11">pixelsv2</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <call pos:start="137:15" pos:end="137:42"><name pos:start="137:15" pos:end="137:24">vec_mergeh</name><argument_list pos:start="137:25" pos:end="137:42">(<argument pos:start="137:26" pos:end="137:31"><expr pos:start="137:26" pos:end="137:31"><name pos:start="137:26" pos:end="137:31">vczero</name></expr></argument>, <argument pos:start="137:34" pos:end="137:41"><expr pos:start="137:34" pos:end="137:41"><name pos:start="137:34" pos:end="137:41">pixelsv2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <expr_stmt pos:start="139:4" pos:end="141:57"><expr pos:start="139:4" pos:end="141:56"><name pos:start="139:4" pos:end="139:13">pixelssum3</name> <operator pos:start="139:15" pos:end="139:15">=</operator> <call pos:start="139:17" pos:end="141:56"><name pos:start="139:17" pos:end="139:23">vec_add</name><argument_list pos:start="139:24" pos:end="141:56">(<argument pos:start="139:25" pos:end="139:55"><expr pos:start="139:25" pos:end="139:55"><operator pos:start="139:25" pos:end="139:25">(</operator><name pos:start="139:26" pos:end="139:31">vector</name> <name pos:start="139:33" pos:end="139:40">unsigned</name> <name pos:start="139:42" pos:end="139:46">short</name><operator pos:start="139:47" pos:end="139:47">)</operator><name pos:start="139:48" pos:end="139:55">pixelsv3</name></expr></argument>,

                        <argument pos:start="141:25" pos:end="141:55"><expr pos:start="141:25" pos:end="141:55"><operator pos:start="141:25" pos:end="141:25">(</operator><name pos:start="141:26" pos:end="141:31">vector</name> <name pos:start="141:33" pos:end="141:40">unsigned</name> <name pos:start="141:42" pos:end="141:46">short</name><operator pos:start="141:47" pos:end="141:47">)</operator><name pos:start="141:48" pos:end="141:55">pixelsv4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <expr_stmt pos:start="143:4" pos:end="143:43"><expr pos:start="143:4" pos:end="143:42"><name pos:start="143:4" pos:end="143:13">pixelssum3</name> <operator pos:start="143:15" pos:end="143:15">=</operator> <call pos:start="143:17" pos:end="143:42"><name pos:start="143:17" pos:end="143:23">vec_add</name><argument_list pos:start="143:24" pos:end="143:42">(<argument pos:start="143:25" pos:end="143:34"><expr pos:start="143:25" pos:end="143:34"><name pos:start="143:25" pos:end="143:34">pixelssum3</name></expr></argument>, <argument pos:start="143:37" pos:end="143:41"><expr pos:start="143:37" pos:end="143:41"><name pos:start="143:37" pos:end="143:41">vctwo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <expr_stmt pos:start="145:4" pos:end="147:57"><expr pos:start="145:4" pos:end="147:56"><name pos:start="145:4" pos:end="145:13">pixelssum1</name> <operator pos:start="145:15" pos:end="145:15">=</operator> <call pos:start="145:17" pos:end="147:56"><name pos:start="145:17" pos:end="145:23">vec_add</name><argument_list pos:start="145:24" pos:end="147:56">(<argument pos:start="145:25" pos:end="145:55"><expr pos:start="145:25" pos:end="145:55"><operator pos:start="145:25" pos:end="145:25">(</operator><name pos:start="145:26" pos:end="145:31">vector</name> <name pos:start="145:33" pos:end="145:40">unsigned</name> <name pos:start="145:42" pos:end="145:46">short</name><operator pos:start="145:47" pos:end="145:47">)</operator><name pos:start="145:48" pos:end="145:55">pixelsv1</name></expr></argument>,

                        <argument pos:start="147:25" pos:end="147:55"><expr pos:start="147:25" pos:end="147:55"><operator pos:start="147:25" pos:end="147:25">(</operator><name pos:start="147:26" pos:end="147:31">vector</name> <name pos:start="147:33" pos:end="147:40">unsigned</name> <name pos:start="147:42" pos:end="147:46">short</name><operator pos:start="147:47" pos:end="147:47">)</operator><name pos:start="147:48" pos:end="147:55">pixelsv2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <expr_stmt pos:start="149:4" pos:end="149:43"><expr pos:start="149:4" pos:end="149:42"><name pos:start="149:4" pos:end="149:13">pixelssum1</name> <operator pos:start="149:15" pos:end="149:15">=</operator> <call pos:start="149:17" pos:end="149:42"><name pos:start="149:17" pos:end="149:23">vec_add</name><argument_list pos:start="149:24" pos:end="149:42">(<argument pos:start="149:25" pos:end="149:34"><expr pos:start="149:25" pos:end="149:34"><name pos:start="149:25" pos:end="149:34">pixelssum1</name></expr></argument>, <argument pos:start="149:37" pos:end="149:41"><expr pos:start="149:37" pos:end="149:41"><name pos:start="149:37" pos:end="149:41">vctwo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   

   <for pos:start="153:4" pos:end="229:4">for <control pos:start="153:8" pos:end="153:27">(<init pos:start="153:9" pos:end="153:14"><expr pos:start="153:9" pos:end="153:13"><name pos:start="153:9" pos:end="153:9">i</name> <operator pos:start="153:11" pos:end="153:11">=</operator> <literal type="number" pos:start="153:13" pos:end="153:13">0</literal></expr>;</init> <condition pos:start="153:16" pos:end="153:22"><expr pos:start="153:16" pos:end="153:20"><name pos:start="153:16" pos:end="153:16">i</name> <operator pos:start="153:18" pos:end="153:18">&lt;</operator> <name pos:start="153:20" pos:end="153:20">h</name></expr> ;</condition> <incr pos:start="153:24" pos:end="153:26"><expr pos:start="153:24" pos:end="153:26"><name pos:start="153:24" pos:end="153:24">i</name><operator pos:start="153:25" pos:end="153:26">++</operator></expr></incr>)</control> <block pos:start="153:29" pos:end="229:4">{<block_content pos:start="155:6" pos:end="227:25">

     <expr_stmt pos:start="155:6" pos:end="155:31"><expr pos:start="155:6" pos:end="155:30"><name pos:start="155:6" pos:end="155:11">blockv</name> <operator pos:start="155:13" pos:end="155:13">=</operator> <call pos:start="155:15" pos:end="155:30"><name pos:start="155:15" pos:end="155:20">vec_ld</name><argument_list pos:start="155:21" pos:end="155:30">(<argument pos:start="155:22" pos:end="155:22"><expr pos:start="155:22" pos:end="155:22"><literal type="number" pos:start="155:22" pos:end="155:22">0</literal></expr></argument>, <argument pos:start="155:25" pos:end="155:29"><expr pos:start="155:25" pos:end="155:29"><name pos:start="155:25" pos:end="155:29">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



     <expr_stmt pos:start="159:6" pos:end="159:39"><expr pos:start="159:6" pos:end="159:38"><name pos:start="159:6" pos:end="159:10">temp1</name> <operator pos:start="159:12" pos:end="159:12">=</operator> <call pos:start="159:14" pos:end="159:38"><name pos:start="159:14" pos:end="159:19">vec_ld</name><argument_list pos:start="159:20" pos:end="159:38">(<argument pos:start="159:21" pos:end="159:29"><expr pos:start="159:21" pos:end="159:29"><name pos:start="159:21" pos:end="159:29">line_size</name></expr></argument>, <argument pos:start="159:32" pos:end="159:37"><expr pos:start="159:32" pos:end="159:37"><name pos:start="159:32" pos:end="159:37">pixels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt pos:start="161:6" pos:end="161:44"><expr pos:start="161:6" pos:end="161:43"><name pos:start="161:6" pos:end="161:10">temp2</name> <operator pos:start="161:12" pos:end="161:12">=</operator> <call pos:start="161:14" pos:end="161:43"><name pos:start="161:14" pos:end="161:19">vec_ld</name><argument_list pos:start="161:20" pos:end="161:43">(<argument pos:start="161:21" pos:end="161:34"><expr pos:start="161:21" pos:end="161:34"><name pos:start="161:21" pos:end="161:29">line_size</name> <operator pos:start="161:31" pos:end="161:31">+</operator> <literal type="number" pos:start="161:33" pos:end="161:34">16</literal></expr></argument>, <argument pos:start="161:37" pos:end="161:42"><expr pos:start="161:37" pos:end="161:42"><name pos:start="161:37" pos:end="161:42">pixels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt pos:start="163:6" pos:end="163:68"><expr pos:start="163:6" pos:end="163:67"><name pos:start="163:6" pos:end="163:13">pixelsv1</name> <operator pos:start="163:15" pos:end="163:15">=</operator> <call pos:start="163:17" pos:end="163:67"><name pos:start="163:17" pos:end="163:24">vec_perm</name><argument_list pos:start="163:25" pos:end="163:67">(<argument pos:start="163:26" pos:end="163:30"><expr pos:start="163:26" pos:end="163:30"><name pos:start="163:26" pos:end="163:30">temp1</name></expr></argument>, <argument pos:start="163:33" pos:end="163:37"><expr pos:start="163:33" pos:end="163:37"><name pos:start="163:33" pos:end="163:37">temp2</name></expr></argument>, <argument pos:start="163:40" pos:end="163:66"><expr pos:start="163:40" pos:end="163:66"><call pos:start="163:40" pos:end="163:66"><name pos:start="163:40" pos:end="163:47">vec_lvsl</name><argument_list pos:start="163:48" pos:end="163:66">(<argument pos:start="163:49" pos:end="163:57"><expr pos:start="163:49" pos:end="163:57"><name pos:start="163:49" pos:end="163:57">line_size</name></expr></argument>, <argument pos:start="163:60" pos:end="163:65"><expr pos:start="163:60" pos:end="163:65"><name pos:start="163:60" pos:end="163:65">pixels</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <if_stmt pos:start="165:6" pos:end="179:6"><if pos:start="165:6" pos:end="171:6">if <condition pos:start="165:9" pos:end="165:77">(<expr pos:start="165:10" pos:end="165:76"><operator pos:start="165:10" pos:end="165:10">(</operator><operator pos:start="165:11" pos:end="165:11">(</operator><operator pos:start="165:12" pos:end="165:12">(</operator><operator pos:start="165:13" pos:end="165:13">(</operator><name pos:start="165:14" pos:end="165:21">unsigned</name> <name pos:start="165:23" pos:end="165:26">long</name><operator pos:start="165:27" pos:end="165:27">)</operator><name pos:start="165:28" pos:end="165:33">pixels</name><operator pos:start="165:34" pos:end="165:34">)</operator> <operator pos:start="165:36" pos:end="165:36">+</operator> <name pos:start="165:38" pos:end="165:46">line_size</name><operator pos:start="165:47" pos:end="165:47">)</operator> <operator pos:start="165:49" pos:end="165:49">&amp;</operator> <literal type="number" pos:start="165:51" pos:end="165:60">0x0000000F</literal><operator pos:start="165:61" pos:end="165:61">)</operator> <operator pos:start="165:63" pos:end="165:64">==</operator>  <literal type="number" pos:start="165:67" pos:end="165:76">0x0000000F</literal></expr>)</condition>

     <block pos:start="167:6" pos:end="171:6">{<block_content pos:start="169:8" pos:end="169:24">

       <expr_stmt pos:start="169:8" pos:end="169:24"><expr pos:start="169:8" pos:end="169:23"><name pos:start="169:8" pos:end="169:15">pixelsv2</name> <operator pos:start="169:17" pos:end="169:17">=</operator> <name pos:start="169:19" pos:end="169:23">temp2</name></expr>;</expr_stmt>

     </block_content>}</block></if>

     <else pos:start="173:6" pos:end="179:6">else

     <block pos:start="175:6" pos:end="179:6">{<block_content pos:start="177:8" pos:end="177:74">

       <expr_stmt pos:start="177:8" pos:end="177:74"><expr pos:start="177:8" pos:end="177:73"><name pos:start="177:8" pos:end="177:15">pixelsv2</name> <operator pos:start="177:17" pos:end="177:17">=</operator> <call pos:start="177:19" pos:end="177:73"><name pos:start="177:19" pos:end="177:26">vec_perm</name><argument_list pos:start="177:27" pos:end="177:73">(<argument pos:start="177:28" pos:end="177:32"><expr pos:start="177:28" pos:end="177:32"><name pos:start="177:28" pos:end="177:32">temp1</name></expr></argument>, <argument pos:start="177:35" pos:end="177:39"><expr pos:start="177:35" pos:end="177:39"><name pos:start="177:35" pos:end="177:39">temp2</name></expr></argument>, <argument pos:start="177:42" pos:end="177:72"><expr pos:start="177:42" pos:end="177:72"><call pos:start="177:42" pos:end="177:72"><name pos:start="177:42" pos:end="177:49">vec_lvsl</name><argument_list pos:start="177:50" pos:end="177:72">(<argument pos:start="177:51" pos:end="177:63"><expr pos:start="177:51" pos:end="177:63"><name pos:start="177:51" pos:end="177:59">line_size</name> <operator pos:start="177:61" pos:end="177:61">+</operator> <literal type="number" pos:start="177:63" pos:end="177:63">1</literal></expr></argument>, <argument pos:start="177:66" pos:end="177:71"><expr pos:start="177:66" pos:end="177:71"><name pos:start="177:66" pos:end="177:71">pixels</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     </block_content>}</block></else></if_stmt>



     <expr_stmt pos:start="183:6" pos:end="183:45"><expr pos:start="183:6" pos:end="183:44"><name pos:start="183:6" pos:end="183:13">pixelsv3</name> <operator pos:start="183:15" pos:end="183:15">=</operator> <call pos:start="183:17" pos:end="183:44"><name pos:start="183:17" pos:end="183:26">vec_mergel</name><argument_list pos:start="183:27" pos:end="183:44">(<argument pos:start="183:28" pos:end="183:33"><expr pos:start="183:28" pos:end="183:33"><name pos:start="183:28" pos:end="183:33">vczero</name></expr></argument>, <argument pos:start="183:36" pos:end="183:43"><expr pos:start="183:36" pos:end="183:43"><name pos:start="183:36" pos:end="183:43">pixelsv1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt pos:start="185:6" pos:end="185:45"><expr pos:start="185:6" pos:end="185:44"><name pos:start="185:6" pos:end="185:13">pixelsv4</name> <operator pos:start="185:15" pos:end="185:15">=</operator> <call pos:start="185:17" pos:end="185:44"><name pos:start="185:17" pos:end="185:26">vec_mergel</name><argument_list pos:start="185:27" pos:end="185:44">(<argument pos:start="185:28" pos:end="185:33"><expr pos:start="185:28" pos:end="185:33"><name pos:start="185:28" pos:end="185:33">vczero</name></expr></argument>, <argument pos:start="185:36" pos:end="185:43"><expr pos:start="185:36" pos:end="185:43"><name pos:start="185:36" pos:end="185:43">pixelsv2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt pos:start="187:6" pos:end="187:45"><expr pos:start="187:6" pos:end="187:44"><name pos:start="187:6" pos:end="187:13">pixelsv1</name> <operator pos:start="187:15" pos:end="187:15">=</operator> <call pos:start="187:17" pos:end="187:44"><name pos:start="187:17" pos:end="187:26">vec_mergeh</name><argument_list pos:start="187:27" pos:end="187:44">(<argument pos:start="187:28" pos:end="187:33"><expr pos:start="187:28" pos:end="187:33"><name pos:start="187:28" pos:end="187:33">vczero</name></expr></argument>, <argument pos:start="187:36" pos:end="187:43"><expr pos:start="187:36" pos:end="187:43"><name pos:start="187:36" pos:end="187:43">pixelsv1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt pos:start="189:6" pos:end="189:45"><expr pos:start="189:6" pos:end="189:44"><name pos:start="189:6" pos:end="189:13">pixelsv2</name> <operator pos:start="189:15" pos:end="189:15">=</operator> <call pos:start="189:17" pos:end="189:44"><name pos:start="189:17" pos:end="189:26">vec_mergeh</name><argument_list pos:start="189:27" pos:end="189:44">(<argument pos:start="189:28" pos:end="189:33"><expr pos:start="189:28" pos:end="189:33"><name pos:start="189:28" pos:end="189:33">vczero</name></expr></argument>, <argument pos:start="189:36" pos:end="189:43"><expr pos:start="189:36" pos:end="189:43"><name pos:start="189:36" pos:end="189:43">pixelsv2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     

     <expr_stmt pos:start="193:6" pos:end="195:59"><expr pos:start="193:6" pos:end="195:58"><name pos:start="193:6" pos:end="193:15">pixelssum4</name> <operator pos:start="193:17" pos:end="193:17">=</operator> <call pos:start="193:19" pos:end="195:58"><name pos:start="193:19" pos:end="193:25">vec_add</name><argument_list pos:start="193:26" pos:end="195:58">(<argument pos:start="193:27" pos:end="193:57"><expr pos:start="193:27" pos:end="193:57"><operator pos:start="193:27" pos:end="193:27">(</operator><name pos:start="193:28" pos:end="193:33">vector</name> <name pos:start="193:35" pos:end="193:42">unsigned</name> <name pos:start="193:44" pos:end="193:48">short</name><operator pos:start="193:49" pos:end="193:49">)</operator><name pos:start="193:50" pos:end="193:57">pixelsv3</name></expr></argument>,

                          <argument pos:start="195:27" pos:end="195:57"><expr pos:start="195:27" pos:end="195:57"><operator pos:start="195:27" pos:end="195:27">(</operator><name pos:start="195:28" pos:end="195:33">vector</name> <name pos:start="195:35" pos:end="195:42">unsigned</name> <name pos:start="195:44" pos:end="195:48">short</name><operator pos:start="195:49" pos:end="195:49">)</operator><name pos:start="195:50" pos:end="195:57">pixelsv4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt pos:start="197:6" pos:end="199:59"><expr pos:start="197:6" pos:end="199:58"><name pos:start="197:6" pos:end="197:15">pixelssum2</name> <operator pos:start="197:17" pos:end="197:17">=</operator> <call pos:start="197:19" pos:end="199:58"><name pos:start="197:19" pos:end="197:25">vec_add</name><argument_list pos:start="197:26" pos:end="199:58">(<argument pos:start="197:27" pos:end="197:57"><expr pos:start="197:27" pos:end="197:57"><operator pos:start="197:27" pos:end="197:27">(</operator><name pos:start="197:28" pos:end="197:33">vector</name> <name pos:start="197:35" pos:end="197:42">unsigned</name> <name pos:start="197:44" pos:end="197:48">short</name><operator pos:start="197:49" pos:end="197:49">)</operator><name pos:start="197:50" pos:end="197:57">pixelsv1</name></expr></argument>,

                          <argument pos:start="199:27" pos:end="199:57"><expr pos:start="199:27" pos:end="199:57"><operator pos:start="199:27" pos:end="199:27">(</operator><name pos:start="199:28" pos:end="199:33">vector</name> <name pos:start="199:35" pos:end="199:42">unsigned</name> <name pos:start="199:44" pos:end="199:48">short</name><operator pos:start="199:49" pos:end="199:49">)</operator><name pos:start="199:50" pos:end="199:57">pixelsv2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt pos:start="201:6" pos:end="201:45"><expr pos:start="201:6" pos:end="201:44"><name pos:start="201:6" pos:end="201:10">temp4</name> <operator pos:start="201:12" pos:end="201:12">=</operator> <call pos:start="201:14" pos:end="201:44"><name pos:start="201:14" pos:end="201:20">vec_add</name><argument_list pos:start="201:21" pos:end="201:44">(<argument pos:start="201:22" pos:end="201:31"><expr pos:start="201:22" pos:end="201:31"><name pos:start="201:22" pos:end="201:31">pixelssum3</name></expr></argument>, <argument pos:start="201:34" pos:end="201:43"><expr pos:start="201:34" pos:end="201:43"><name pos:start="201:34" pos:end="201:43">pixelssum4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt pos:start="203:6" pos:end="203:35"><expr pos:start="203:6" pos:end="203:34"><name pos:start="203:6" pos:end="203:10">temp4</name> <operator pos:start="203:12" pos:end="203:12">=</operator> <call pos:start="203:14" pos:end="203:34"><name pos:start="203:14" pos:end="203:20">vec_sra</name><argument_list pos:start="203:21" pos:end="203:34">(<argument pos:start="203:22" pos:end="203:26"><expr pos:start="203:22" pos:end="203:26"><name pos:start="203:22" pos:end="203:26">temp4</name></expr></argument>, <argument pos:start="203:29" pos:end="203:33"><expr pos:start="203:29" pos:end="203:33"><name pos:start="203:29" pos:end="203:33">vctwo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt pos:start="205:6" pos:end="205:45"><expr pos:start="205:6" pos:end="205:44"><name pos:start="205:6" pos:end="205:10">temp3</name> <operator pos:start="205:12" pos:end="205:12">=</operator> <call pos:start="205:14" pos:end="205:44"><name pos:start="205:14" pos:end="205:20">vec_add</name><argument_list pos:start="205:21" pos:end="205:44">(<argument pos:start="205:22" pos:end="205:31"><expr pos:start="205:22" pos:end="205:31"><name pos:start="205:22" pos:end="205:31">pixelssum1</name></expr></argument>, <argument pos:start="205:34" pos:end="205:43"><expr pos:start="205:34" pos:end="205:43"><name pos:start="205:34" pos:end="205:43">pixelssum2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt pos:start="207:6" pos:end="207:35"><expr pos:start="207:6" pos:end="207:34"><name pos:start="207:6" pos:end="207:10">temp3</name> <operator pos:start="207:12" pos:end="207:12">=</operator> <call pos:start="207:14" pos:end="207:34"><name pos:start="207:14" pos:end="207:20">vec_sra</name><argument_list pos:start="207:21" pos:end="207:34">(<argument pos:start="207:22" pos:end="207:26"><expr pos:start="207:22" pos:end="207:26"><name pos:start="207:22" pos:end="207:26">temp3</name></expr></argument>, <argument pos:start="207:29" pos:end="207:33"><expr pos:start="207:29" pos:end="207:33"><name pos:start="207:29" pos:end="207:33">vctwo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



     <expr_stmt pos:start="211:6" pos:end="211:45"><expr pos:start="211:6" pos:end="211:44"><name pos:start="211:6" pos:end="211:15">pixelssum3</name> <operator pos:start="211:17" pos:end="211:17">=</operator> <call pos:start="211:19" pos:end="211:44"><name pos:start="211:19" pos:end="211:25">vec_add</name><argument_list pos:start="211:26" pos:end="211:44">(<argument pos:start="211:27" pos:end="211:36"><expr pos:start="211:27" pos:end="211:36"><name pos:start="211:27" pos:end="211:36">pixelssum4</name></expr></argument>, <argument pos:start="211:39" pos:end="211:43"><expr pos:start="211:39" pos:end="211:43"><name pos:start="211:39" pos:end="211:43">vctwo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt pos:start="213:6" pos:end="213:45"><expr pos:start="213:6" pos:end="213:44"><name pos:start="213:6" pos:end="213:15">pixelssum1</name> <operator pos:start="213:17" pos:end="213:17">=</operator> <call pos:start="213:19" pos:end="213:44"><name pos:start="213:19" pos:end="213:25">vec_add</name><argument_list pos:start="213:26" pos:end="213:44">(<argument pos:start="213:27" pos:end="213:36"><expr pos:start="213:27" pos:end="213:36"><name pos:start="213:27" pos:end="213:36">pixelssum2</name></expr></argument>, <argument pos:start="213:39" pos:end="213:43"><expr pos:start="213:39" pos:end="213:43"><name pos:start="213:39" pos:end="213:43">vctwo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



     <expr_stmt pos:start="217:6" pos:end="217:39"><expr pos:start="217:6" pos:end="217:38"><name pos:start="217:6" pos:end="217:11">blockv</name> <operator pos:start="217:13" pos:end="217:13">=</operator> <call pos:start="217:15" pos:end="217:38"><name pos:start="217:15" pos:end="217:24">vec_packsu</name><argument_list pos:start="217:25" pos:end="217:38">(<argument pos:start="217:26" pos:end="217:30"><expr pos:start="217:26" pos:end="217:30"><name pos:start="217:26" pos:end="217:30">temp3</name></expr></argument>, <argument pos:start="217:33" pos:end="217:37"><expr pos:start="217:33" pos:end="217:37"><name pos:start="217:33" pos:end="217:37">temp4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     

     <expr_stmt pos:start="221:6" pos:end="221:30"><expr pos:start="221:6" pos:end="221:29"><call pos:start="221:6" pos:end="221:29"><name pos:start="221:6" pos:end="221:11">vec_st</name><argument_list pos:start="221:12" pos:end="221:29">(<argument pos:start="221:13" pos:end="221:18"><expr pos:start="221:13" pos:end="221:18"><name pos:start="221:13" pos:end="221:18">blockv</name></expr></argument>, <argument pos:start="221:21" pos:end="221:21"><expr pos:start="221:21" pos:end="221:21"><literal type="number" pos:start="221:21" pos:end="221:21">0</literal></expr></argument>, <argument pos:start="221:24" pos:end="221:28"><expr pos:start="221:24" pos:end="221:28"><name pos:start="221:24" pos:end="221:28">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     

     <expr_stmt pos:start="225:6" pos:end="225:24"><expr pos:start="225:6" pos:end="225:23"><name pos:start="225:6" pos:end="225:10">block</name> <operator pos:start="225:12" pos:end="225:13">+=</operator> <name pos:start="225:15" pos:end="225:23">line_size</name></expr>;</expr_stmt>

     <expr_stmt pos:start="227:6" pos:end="227:25"><expr pos:start="227:6" pos:end="227:24"><name pos:start="227:6" pos:end="227:11">pixels</name> <operator pos:start="227:13" pos:end="227:14">+=</operator> <name pos:start="227:16" pos:end="227:24">line_size</name></expr>;</expr_stmt>

   </block_content>}</block></for>

   

<expr_stmt pos:start="233:1" pos:end="236:0"><expr pos:start="233:1" pos:end="233:55"><call pos:start="233:1" pos:end="233:55"><name pos:start="233:1" pos:end="233:22">POWERPC_TBL_STOP_COUNT</name><argument_list pos:start="233:23" pos:end="233:55">(<argument pos:start="233:24" pos:end="233:51"><expr pos:start="233:24" pos:end="233:51"><name pos:start="233:24" pos:end="233:51">altivec_put_pixels16_xy2_num</name></expr></argument>, <argument pos:start="233:54" pos:end="233:54"><expr pos:start="233:54" pos:end="233:54"><literal type="number" pos:start="233:54" pos:end="233:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="235:1" pos:end="235:6">#<cpp:directive pos:start="235:2" pos:end="235:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="235:8" pos:end="235:41">/* ALTIVEC_USE_REFERENCE_C_CODE */</comment>

</block_content>}</block></function>
</unit>
