<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26949.c" pos:tabs="8"><function pos:start="1:1" pos:end="421:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">vga_draw_graphic</name><parameter_list pos:start="1:29" pos:end="1:58">(<parameter pos:start="1:30" pos:end="1:40"><decl pos:start="1:30" pos:end="1:40"><type pos:start="1:30" pos:end="1:40"><name pos:start="1:30" pos:end="1:37">VGAState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:57">full_update</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="421:1">{<block_content pos:start="5:5" pos:end="421:1">

    <decl_stmt pos:start="5:5" pos:end="5:87"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">y1</name></decl>, <decl pos:start="5:13" pos:end="5:13"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:13">y</name></decl>, <decl pos:start="5:16" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:21">update</name></decl>, <decl pos:start="5:24" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:24" pos:end="5:31">page_min</name></decl>, <decl pos:start="5:34" pos:end="5:41"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:34" pos:end="5:41">page_max</name></decl>, <decl pos:start="5:44" pos:end="5:51"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:44" pos:end="5:51">linesize</name></decl>, <decl pos:start="5:54" pos:end="5:60"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:54" pos:end="5:60">y_start</name></decl>, <decl pos:start="5:63" pos:end="5:73"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:63" pos:end="5:73">double_scan</name></decl>, <decl pos:start="5:76" pos:end="5:79"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:76" pos:end="5:79">mask</name></decl>, <decl pos:start="5:82" pos:end="5:86"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:82" pos:end="5:86">depth</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:78"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">width</name></decl>, <decl pos:start="7:16" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:21">height</name></decl>, <decl pos:start="7:24" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:36">shift_control</name></decl>, <decl pos:start="7:39" pos:end="7:49"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:39" pos:end="7:49">line_offset</name></decl>, <decl pos:start="7:52" pos:end="7:56"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:52" pos:end="7:56">page0</name></decl>, <decl pos:start="7:59" pos:end="7:63"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:59" pos:end="7:63">page1</name></decl>, <decl pos:start="7:66" pos:end="7:71"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:66" pos:end="7:71">bwidth</name></decl>, <decl pos:start="7:74" pos:end="7:77"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:74" pos:end="7:77">bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">disp_width</name></decl>, <decl pos:start="9:21" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:30">multi_scan</name></decl>, <decl pos:start="9:33" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:33" pos:end="9:41">multi_run</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:14">v</name></decl>, <decl pos:start="13:17" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:17" pos:end="13:21">addr1</name></decl>, <decl pos:start="13:24" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:24" pos:end="13:27">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:38"><decl pos:start="15:5" pos:end="15:37"><type pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:22">vga_draw_line_func</name> <modifier pos:start="15:24" pos:end="15:24">*</modifier></type><name pos:start="15:25" pos:end="15:37">vga_draw_line</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:42"><expr pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:15">full_update</name> <operator pos:start="19:17" pos:end="19:18">|=</operator> <call pos:start="19:20" pos:end="19:41"><name pos:start="19:20" pos:end="19:38">update_basic_params</name><argument_list pos:start="19:39" pos:end="19:41">(<argument pos:start="19:40" pos:end="19:40"><expr pos:start="19:40" pos:end="19:40"><name pos:start="19:40" pos:end="19:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="25:33"><if pos:start="23:5" pos:end="25:33">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:20">full_update</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:33"><block_content pos:start="25:9" pos:end="25:33">

        <expr_stmt pos:start="25:9" pos:end="25:33"><expr pos:start="25:9" pos:end="25:32"><call pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:29">vga_sync_dirty_bitmap</name><argument_list pos:start="25:30" pos:end="25:32">(<argument pos:start="25:31" pos:end="25:31"><expr pos:start="25:31" pos:end="25:31"><name pos:start="25:31" pos:end="25:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:42"><expr pos:start="29:5" pos:end="29:41"><call pos:start="29:5" pos:end="29:41"><name pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:21">get_resolution</name></name><argument_list pos:start="29:22" pos:end="29:41">(<argument pos:start="29:23" pos:end="29:23"><expr pos:start="29:23" pos:end="29:23"><name pos:start="29:23" pos:end="29:23">s</name></expr></argument>, <argument pos:start="29:26" pos:end="29:31"><expr pos:start="29:26" pos:end="29:31"><operator pos:start="29:26" pos:end="29:26">&amp;</operator><name pos:start="29:27" pos:end="29:31">width</name></expr></argument>, <argument pos:start="29:34" pos:end="29:40"><expr pos:start="29:34" pos:end="29:40"><operator pos:start="29:34" pos:end="29:34">&amp;</operator><name pos:start="29:35" pos:end="29:40">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:14">disp_width</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:22">width</name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:43"><expr pos:start="35:5" pos:end="35:42"><name pos:start="35:5" pos:end="35:17">shift_control</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <operator pos:start="35:21" pos:end="35:21">(</operator><name pos:start="35:22" pos:end="35:32"><name pos:start="35:22" pos:end="35:22">s</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:26">gr</name><index pos:start="35:27" pos:end="35:32">[<expr pos:start="35:28" pos:end="35:31"><literal type="number" pos:start="35:28" pos:end="35:31">0x05</literal></expr>]</index></name> <operator pos:start="35:34" pos:end="35:35">&gt;&gt;</operator> <literal type="number" pos:start="35:37" pos:end="35:37">5</literal><operator pos:start="35:38" pos:end="35:38">)</operator> <operator pos:start="35:40" pos:end="35:40">&amp;</operator> <literal type="number" pos:start="35:42" pos:end="35:42">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:37"><expr pos:start="37:5" pos:end="37:36"><name pos:start="37:5" pos:end="37:15">double_scan</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <operator pos:start="37:19" pos:end="37:19">(</operator><name pos:start="37:20" pos:end="37:30"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:24">cr</name><index pos:start="37:25" pos:end="37:30">[<expr pos:start="37:26" pos:end="37:29"><literal type="number" pos:start="37:26" pos:end="37:29">0x09</literal></expr>]</index></name> <operator pos:start="37:32" pos:end="37:33">&gt;&gt;</operator> <literal type="number" pos:start="37:35" pos:end="37:35">7</literal><operator pos:start="37:36" pos:end="37:36">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="51:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:27">(<expr pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:21">shift_control</name> <operator pos:start="39:23" pos:end="39:24">!=</operator> <literal type="number" pos:start="39:26" pos:end="39:26">1</literal></expr>)</condition> <block pos:start="39:29" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:69">

        <expr_stmt pos:start="41:9" pos:end="41:69"><expr pos:start="41:9" pos:end="41:68"><name pos:start="41:9" pos:end="41:18">multi_scan</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <operator pos:start="41:22" pos:end="41:22">(</operator><operator pos:start="41:23" pos:end="41:23">(</operator><operator pos:start="41:24" pos:end="41:24">(</operator><name pos:start="41:25" pos:end="41:35"><name pos:start="41:25" pos:end="41:25">s</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:29">cr</name><index pos:start="41:30" pos:end="41:35">[<expr pos:start="41:31" pos:end="41:34"><literal type="number" pos:start="41:31" pos:end="41:34">0x09</literal></expr>]</index></name> <operator pos:start="41:37" pos:end="41:37">&amp;</operator> <literal type="number" pos:start="41:39" pos:end="41:42">0x1f</literal><operator pos:start="41:43" pos:end="41:43">)</operator> <operator pos:start="41:45" pos:end="41:45">+</operator> <literal type="number" pos:start="41:47" pos:end="41:47">1</literal><operator pos:start="41:48" pos:end="41:48">)</operator> <operator pos:start="41:50" pos:end="41:51">&lt;&lt;</operator> <name pos:start="41:53" pos:end="41:63">double_scan</name><operator pos:start="41:64" pos:end="41:64">)</operator> <operator pos:start="41:66" pos:end="41:66">-</operator> <literal type="number" pos:start="41:68" pos:end="41:68">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="51:5">else <block pos:start="43:12" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:33">

        <comment type="block" pos:start="45:9" pos:end="45:49">/* in CGA modes, multi_scan is ignored */</comment>

        <comment type="block" pos:start="47:9" pos:end="47:34">/* XXX: is it correct ? */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:33"><expr pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:18">multi_scan</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:32">double_scan</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:27"><expr pos:start="53:5" pos:end="53:26"><name pos:start="53:5" pos:end="53:13">multi_run</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <name pos:start="53:17" pos:end="53:26">multi_scan</name></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="65:5"><if pos:start="55:5" pos:end="65:5">if <condition pos:start="55:8" pos:end="57:38">(<expr pos:start="55:9" pos:end="57:37"><name pos:start="55:9" pos:end="55:21">shift_control</name> <operator pos:start="55:23" pos:end="55:24">!=</operator> <name pos:start="55:26" pos:end="55:41"><name pos:start="55:26" pos:end="55:26">s</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:41">shift_control</name></name> <operator pos:start="55:43" pos:end="55:44">||</operator>

        <name pos:start="57:9" pos:end="57:19">double_scan</name> <operator pos:start="57:21" pos:end="57:22">!=</operator> <name pos:start="57:24" pos:end="57:37"><name pos:start="57:24" pos:end="57:24">s</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:37">double_scan</name></name></expr>)</condition> <block pos:start="57:40" pos:end="65:5">{<block_content pos:start="59:9" pos:end="63:37">

        <expr_stmt pos:start="59:9" pos:end="59:24"><expr pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:19">full_update</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <literal type="number" pos:start="59:23" pos:end="59:23">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:41"><expr pos:start="61:9" pos:end="61:40"><name pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:24">shift_control</name></name> <operator pos:start="61:26" pos:end="61:26">=</operator> <name pos:start="61:28" pos:end="61:40">shift_control</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:37"><expr pos:start="63:9" pos:end="63:36"><name pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:22">double_scan</name></name> <operator pos:start="63:24" pos:end="63:24">=</operator> <name pos:start="63:26" pos:end="63:36">double_scan</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:26"><expr pos:start="69:5" pos:end="69:25"><name pos:start="69:5" pos:end="69:9">depth</name> <operator pos:start="69:11" pos:end="69:11">=</operator> <call pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:22">get_bpp</name></name><argument_list pos:start="69:23" pos:end="69:25">(<argument pos:start="69:24" pos:end="69:24"><expr pos:start="69:24" pos:end="69:24"><name pos:start="69:24" pos:end="69:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="421:1"><if pos:start="71:5" pos:end="421:1">if <condition pos:start="71:8" pos:end="77:31">(<expr pos:start="71:9" pos:end="77:30"><name pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:22">line_offset</name></name> <operator pos:start="71:24" pos:end="71:25">!=</operator> <name pos:start="71:27" pos:end="71:45"><name pos:start="71:27" pos:end="71:27">s</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:45">last_line_offset</name></name> <operator pos:start="71:47" pos:end="71:48">||</operator>

        <name pos:start="73:9" pos:end="73:18">disp_width</name> <operator pos:start="73:20" pos:end="73:21">!=</operator> <name pos:start="73:23" pos:end="73:35"><name pos:start="73:23" pos:end="73:23">s</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:35">last_width</name></name> <operator pos:start="73:37" pos:end="73:38">||</operator>

        <name pos:start="75:9" pos:end="75:14">height</name> <operator pos:start="75:16" pos:end="75:17">!=</operator> <name pos:start="75:19" pos:end="75:32"><name pos:start="75:19" pos:end="75:19">s</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:32">last_height</name></name> <operator pos:start="75:34" pos:end="75:35">||</operator>

        <name pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:21">last_depth</name></name> <operator pos:start="77:23" pos:end="77:24">!=</operator> <name pos:start="77:26" pos:end="77:30">depth</name></expr>)</condition> <block pos:start="77:33" pos:end="421:1">{<block_content pos:start="81:9" pos:end="419:64">

<cpp:if pos:start="79:1" pos:end="79:63">#<cpp:directive pos:start="79:2" pos:end="79:3">if</cpp:directive> <expr pos:start="79:5" pos:end="79:63"><call pos:start="79:5" pos:end="79:28"><name pos:start="79:5" pos:end="79:11">defined</name><argument_list pos:start="79:12" pos:end="79:28">(<argument pos:start="79:13" pos:end="79:27"><expr pos:start="79:13" pos:end="79:27"><name pos:start="79:13" pos:end="79:27">WORDS_BIGENDIAN</name></expr></argument>)</argument_list></call> <operator pos:start="79:30" pos:end="79:31">==</operator> <call pos:start="79:33" pos:end="79:63"><name pos:start="79:33" pos:end="79:39">defined</name><argument_list pos:start="79:40" pos:end="79:63">(<argument pos:start="79:41" pos:end="79:62"><expr pos:start="79:41" pos:end="79:62"><name pos:start="79:41" pos:end="79:62">TARGET_WORDS_BIGENDIAN</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="81:9" pos:end="141:5"><if pos:start="81:9" pos:end="133:5">if <condition pos:start="81:12" pos:end="81:39">(<expr pos:start="81:13" pos:end="81:38"><name pos:start="81:13" pos:end="81:17">depth</name> <operator pos:start="81:19" pos:end="81:20">==</operator> <literal type="number" pos:start="81:22" pos:end="81:23">16</literal> <operator pos:start="81:25" pos:end="81:26">||</operator> <name pos:start="81:28" pos:end="81:32">depth</name> <operator pos:start="81:34" pos:end="81:35">==</operator> <literal type="number" pos:start="81:37" pos:end="81:38">32</literal></expr>)</condition> <block pos:start="81:41" pos:end="133:5">{<block_content pos:start="85:9" pos:end="131:24">

<cpp:else pos:start="83:1" pos:end="83:5">#<cpp:directive pos:start="83:2" pos:end="83:5">else</cpp:directive></cpp:else>

        <if_stmt pos:start="85:9" pos:end="117:9"><if pos:start="85:9" pos:end="113:9">if <condition pos:start="85:12" pos:end="85:24">(<expr pos:start="85:13" pos:end="85:23"><name pos:start="85:13" pos:end="85:17">depth</name> <operator pos:start="85:19" pos:end="85:20">==</operator> <literal type="number" pos:start="85:22" pos:end="85:23">32</literal></expr>)</condition> <block pos:start="85:26" pos:end="113:9">{<block_content pos:start="89:13" pos:end="111:13">

<cpp:endif pos:start="87:1" pos:end="87:6">#<cpp:directive pos:start="87:2" pos:end="87:6">endif</cpp:directive></cpp:endif>

            <if_stmt pos:start="89:13" pos:end="111:13"><if pos:start="89:13" pos:end="107:13">if <condition pos:start="89:16" pos:end="89:37">(<expr pos:start="89:17" pos:end="89:36"><call pos:start="89:17" pos:end="89:36"><name pos:start="89:17" pos:end="89:34">is_graphic_console</name><argument_list pos:start="89:35" pos:end="89:36">()</argument_list></call></expr>)</condition> <block pos:start="89:39" pos:end="107:13">{<block_content pos:start="91:17" pos:end="105:34">

                <expr_stmt pos:start="91:17" pos:end="91:48"><expr pos:start="91:17" pos:end="91:47"><call pos:start="91:17" pos:end="91:47"><name pos:start="91:17" pos:end="91:40">qemu_free_displaysurface</name><argument_list pos:start="91:41" pos:end="91:47">(<argument pos:start="91:42" pos:end="91:46"><expr pos:start="91:42" pos:end="91:46"><name pos:start="91:42" pos:end="91:46"><name pos:start="91:42" pos:end="91:42">s</name><operator pos:start="91:43" pos:end="91:44">-&gt;</operator><name pos:start="91:45" pos:end="91:46">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="100:0"><expr pos:start="93:17" pos:end="97:97"><name pos:start="93:17" pos:end="93:30"><name pos:start="93:17" pos:end="93:17">s</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:21">ds</name><operator pos:start="93:22" pos:end="93:23">-&gt;</operator><name pos:start="93:24" pos:end="93:30">surface</name></name> <operator pos:start="93:32" pos:end="93:32">=</operator> <call pos:start="93:34" pos:end="97:97"><name pos:start="93:34" pos:end="93:64">qemu_create_displaysurface_from</name><argument_list pos:start="93:65" pos:end="97:97">(<argument pos:start="93:66" pos:end="93:75"><expr pos:start="93:66" pos:end="93:75"><name pos:start="93:66" pos:end="93:75">disp_width</name></expr></argument>, <argument pos:start="93:78" pos:end="93:83"><expr pos:start="93:78" pos:end="93:83"><name pos:start="93:78" pos:end="93:83">height</name></expr></argument>, <argument pos:start="93:86" pos:end="93:90"><expr pos:start="93:86" pos:end="93:90"><name pos:start="93:86" pos:end="93:90">depth</name></expr></argument>,

                                                               <argument pos:start="95:64" pos:end="95:77"><expr pos:start="95:64" pos:end="95:77"><name pos:start="95:64" pos:end="95:77"><name pos:start="95:64" pos:end="95:64">s</name><operator pos:start="95:65" pos:end="95:66">-&gt;</operator><name pos:start="95:67" pos:end="95:77">line_offset</name></name></expr></argument>,

                                                               <argument pos:start="97:64" pos:end="97:96"><expr pos:start="97:64" pos:end="97:96"><name pos:start="97:64" pos:end="97:74"><name pos:start="97:64" pos:end="97:64">s</name><operator pos:start="97:65" pos:end="97:66">-&gt;</operator><name pos:start="97:67" pos:end="97:74">vram_ptr</name></name> <operator pos:start="97:76" pos:end="97:76">+</operator> <operator pos:start="97:78" pos:end="97:78">(</operator><name pos:start="97:79" pos:end="97:91"><name pos:start="97:79" pos:end="97:79">s</name><operator pos:start="97:80" pos:end="97:81">-&gt;</operator><name pos:start="97:82" pos:end="97:91">start_addr</name></name> <operator pos:start="97:93" pos:end="97:93">*</operator> <literal type="number" pos:start="97:95" pos:end="97:95">4</literal><operator pos:start="97:96" pos:end="97:96">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="99:1" pos:end="99:63">#<cpp:directive pos:start="99:2" pos:end="99:3">if</cpp:directive> <expr pos:start="99:5" pos:end="99:63"><call pos:start="99:5" pos:end="99:28"><name pos:start="99:5" pos:end="99:11">defined</name><argument_list pos:start="99:12" pos:end="99:28">(<argument pos:start="99:13" pos:end="99:27"><expr pos:start="99:13" pos:end="99:27"><name pos:start="99:13" pos:end="99:27">WORDS_BIGENDIAN</name></expr></argument>)</argument_list></call> <operator pos:start="99:30" pos:end="99:31">!=</operator> <call pos:start="99:33" pos:end="99:63"><name pos:start="99:33" pos:end="99:39">defined</name><argument_list pos:start="99:40" pos:end="99:63">(<argument pos:start="99:41" pos:end="99:62"><expr pos:start="99:41" pos:end="99:62"><name pos:start="99:41" pos:end="99:62">TARGET_WORDS_BIGENDIAN</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <expr_stmt pos:start="101:17" pos:end="104:0"><expr pos:start="101:17" pos:end="101:81"><name pos:start="101:17" pos:end="101:34"><name pos:start="101:17" pos:end="101:17">s</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:21">ds</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:30">surface</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:34">pf</name></name> <operator pos:start="101:36" pos:end="101:36">=</operator> <call pos:start="101:38" pos:end="101:81"><name pos:start="101:38" pos:end="101:74">qemu_different_endianness_pixelformat</name><argument_list pos:start="101:75" pos:end="101:81">(<argument pos:start="101:76" pos:end="101:80"><expr pos:start="101:76" pos:end="101:80"><name pos:start="101:76" pos:end="101:80">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="103:1" pos:end="103:6">#<cpp:directive pos:start="103:2" pos:end="103:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="105:17" pos:end="105:34"><expr pos:start="105:17" pos:end="105:33"><call pos:start="105:17" pos:end="105:33"><name pos:start="105:17" pos:end="105:26">dpy_resize</name><argument_list pos:start="105:27" pos:end="105:33">(<argument pos:start="105:28" pos:end="105:32"><expr pos:start="105:28" pos:end="105:32"><name pos:start="105:28" pos:end="105:32"><name pos:start="105:28" pos:end="105:28">s</name><operator pos:start="105:29" pos:end="105:30">-&gt;</operator><name pos:start="105:31" pos:end="105:32">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="107:15" pos:end="111:13">else <block pos:start="107:20" pos:end="111:13">{<block_content pos:start="109:17" pos:end="109:63">

                <expr_stmt pos:start="109:17" pos:end="109:63"><expr pos:start="109:17" pos:end="109:62"><call pos:start="109:17" pos:end="109:62"><name pos:start="109:17" pos:end="109:35">qemu_console_resize</name><argument_list pos:start="109:36" pos:end="109:62">(<argument pos:start="109:37" pos:end="109:41"><expr pos:start="109:37" pos:end="109:41"><name pos:start="109:37" pos:end="109:41"><name pos:start="109:37" pos:end="109:37">s</name><operator pos:start="109:38" pos:end="109:39">-&gt;</operator><name pos:start="109:40" pos:end="109:41">ds</name></name></expr></argument>, <argument pos:start="109:44" pos:end="109:53"><expr pos:start="109:44" pos:end="109:53"><name pos:start="109:44" pos:end="109:53">disp_width</name></expr></argument>, <argument pos:start="109:56" pos:end="109:61"><expr pos:start="109:56" pos:end="109:61"><name pos:start="109:56" pos:end="109:61">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="113:11" pos:end="117:9">else <block pos:start="113:16" pos:end="117:9">{<block_content pos:start="115:13" pos:end="115:59">

            <expr_stmt pos:start="115:13" pos:end="115:59"><expr pos:start="115:13" pos:end="115:58"><call pos:start="115:13" pos:end="115:58"><name pos:start="115:13" pos:end="115:31">qemu_console_resize</name><argument_list pos:start="115:32" pos:end="115:58">(<argument pos:start="115:33" pos:end="115:37"><expr pos:start="115:33" pos:end="115:37"><name pos:start="115:33" pos:end="115:37"><name pos:start="115:33" pos:end="115:33">s</name><operator pos:start="115:34" pos:end="115:35">-&gt;</operator><name pos:start="115:36" pos:end="115:37">ds</name></name></expr></argument>, <argument pos:start="115:40" pos:end="115:49"><expr pos:start="115:40" pos:end="115:49"><name pos:start="115:40" pos:end="115:49">disp_width</name></expr></argument>, <argument pos:start="115:52" pos:end="115:57"><expr pos:start="115:52" pos:end="115:57"><name pos:start="115:52" pos:end="115:57">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:39"><expr pos:start="119:9" pos:end="119:38"><name pos:start="119:9" pos:end="119:25"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:25">last_scr_width</name></name> <operator pos:start="119:27" pos:end="119:27">=</operator> <name pos:start="119:29" pos:end="119:38">disp_width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:36"><expr pos:start="121:9" pos:end="121:35"><name pos:start="121:9" pos:end="121:26"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:26">last_scr_height</name></name> <operator pos:start="121:28" pos:end="121:28">=</operator> <name pos:start="121:30" pos:end="121:35">height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:35"><expr pos:start="123:9" pos:end="123:34"><name pos:start="123:9" pos:end="123:21"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:21">last_width</name></name> <operator pos:start="123:23" pos:end="123:23">=</operator> <name pos:start="123:25" pos:end="123:34">disp_width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:32"><expr pos:start="125:9" pos:end="125:31"><name pos:start="125:9" pos:end="125:22"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:22">last_height</name></name> <operator pos:start="125:24" pos:end="125:24">=</operator> <name pos:start="125:26" pos:end="125:31">height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:45"><expr pos:start="127:9" pos:end="127:44"><name pos:start="127:9" pos:end="127:27"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:27">last_line_offset</name></name> <operator pos:start="127:29" pos:end="127:29">=</operator> <name pos:start="127:31" pos:end="127:44"><name pos:start="127:31" pos:end="127:31">s</name><operator pos:start="127:32" pos:end="127:33">-&gt;</operator><name pos:start="127:34" pos:end="127:44">line_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:30"><expr pos:start="129:9" pos:end="129:29"><name pos:start="129:9" pos:end="129:21"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:21">last_depth</name></name> <operator pos:start="129:23" pos:end="129:23">=</operator> <name pos:start="129:25" pos:end="129:29">depth</name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:24"><expr pos:start="131:9" pos:end="131:23"><name pos:start="131:9" pos:end="131:19">full_update</name> <operator pos:start="131:21" pos:end="131:21">=</operator> <literal type="number" pos:start="131:23" pos:end="131:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="133:7" pos:end="141:5">else if <condition pos:start="133:15" pos:end="135:90">(<expr pos:start="133:16" pos:end="135:89"><call pos:start="133:16" pos:end="133:35"><name pos:start="133:16" pos:end="133:33">is_graphic_console</name><argument_list pos:start="133:34" pos:end="133:35">()</argument_list></call> <operator pos:start="133:37" pos:end="133:38">&amp;&amp;</operator> <call pos:start="133:40" pos:end="133:71"><name pos:start="133:40" pos:end="133:55">is_buffer_shared</name><argument_list pos:start="133:56" pos:end="133:71">(<argument pos:start="133:57" pos:end="133:70"><expr pos:start="133:57" pos:end="133:70"><name pos:start="133:57" pos:end="133:70"><name pos:start="133:57" pos:end="133:57">s</name><operator pos:start="133:58" pos:end="133:59">-&gt;</operator><name pos:start="133:60" pos:end="133:61">ds</name><operator pos:start="133:62" pos:end="133:63">-&gt;</operator><name pos:start="133:64" pos:end="133:70">surface</name></name></expr></argument>)</argument_list></call> <operator pos:start="133:73" pos:end="133:74">&amp;&amp;</operator>

               <operator pos:start="135:16" pos:end="135:16">(</operator><name pos:start="135:17" pos:end="135:27">full_update</name> <operator pos:start="135:29" pos:end="135:30">||</operator> <name pos:start="135:32" pos:end="135:51"><name pos:start="135:32" pos:end="135:32">s</name><operator pos:start="135:33" pos:end="135:34">-&gt;</operator><name pos:start="135:35" pos:end="135:36">ds</name><operator pos:start="135:37" pos:end="135:38">-&gt;</operator><name pos:start="135:39" pos:end="135:45">surface</name><operator pos:start="135:46" pos:end="135:47">-&gt;</operator><name pos:start="135:48" pos:end="135:51">data</name></name> <operator pos:start="135:53" pos:end="135:54">!=</operator> <name pos:start="135:56" pos:end="135:66"><name pos:start="135:56" pos:end="135:56">s</name><operator pos:start="135:57" pos:end="135:58">-&gt;</operator><name pos:start="135:59" pos:end="135:66">vram_ptr</name></name> <operator pos:start="135:68" pos:end="135:68">+</operator> <operator pos:start="135:70" pos:end="135:70">(</operator><name pos:start="135:71" pos:end="135:83"><name pos:start="135:71" pos:end="135:71">s</name><operator pos:start="135:72" pos:end="135:73">-&gt;</operator><name pos:start="135:74" pos:end="135:83">start_addr</name></name> <operator pos:start="135:85" pos:end="135:85">*</operator> <literal type="number" pos:start="135:87" pos:end="135:87">4</literal><operator pos:start="135:88" pos:end="135:88">)</operator><operator pos:start="135:89" pos:end="135:89">)</operator></expr>)</condition> <block pos:start="135:92" pos:end="141:5">{<block_content pos:start="137:9" pos:end="139:27">

        <expr_stmt pos:start="137:9" pos:end="137:65"><expr pos:start="137:9" pos:end="137:64"><name pos:start="137:9" pos:end="137:28"><name pos:start="137:9" pos:end="137:9">s</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:13">ds</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:22">surface</name><operator pos:start="137:23" pos:end="137:24">-&gt;</operator><name pos:start="137:25" pos:end="137:28">data</name></name> <operator pos:start="137:30" pos:end="137:30">=</operator> <name pos:start="137:32" pos:end="137:42"><name pos:start="137:32" pos:end="137:32">s</name><operator pos:start="137:33" pos:end="137:34">-&gt;</operator><name pos:start="137:35" pos:end="137:42">vram_ptr</name></name> <operator pos:start="137:44" pos:end="137:44">+</operator> <operator pos:start="137:46" pos:end="137:46">(</operator><name pos:start="137:47" pos:end="137:59"><name pos:start="137:47" pos:end="137:47">s</name><operator pos:start="137:48" pos:end="137:49">-&gt;</operator><name pos:start="137:50" pos:end="137:59">start_addr</name></name> <operator pos:start="137:61" pos:end="137:61">*</operator> <literal type="number" pos:start="137:63" pos:end="137:63">4</literal><operator pos:start="137:64" pos:end="137:64">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:27"><expr pos:start="139:9" pos:end="139:26"><call pos:start="139:9" pos:end="139:26"><name pos:start="139:9" pos:end="139:19">dpy_setdata</name><argument_list pos:start="139:20" pos:end="139:26">(<argument pos:start="139:21" pos:end="139:25"><expr pos:start="139:21" pos:end="139:25"><name pos:start="139:21" pos:end="139:25"><name pos:start="139:21" pos:end="139:21">s</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:25">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="145:5" pos:end="147:55"><expr pos:start="145:5" pos:end="147:54"><name pos:start="145:5" pos:end="145:19"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:19">rgb_to_pixel</name></name> <operator pos:start="145:21" pos:end="145:21">=</operator>

        <name pos:start="147:9" pos:end="147:54"><name pos:start="147:9" pos:end="147:30">rgb_to_pixel_dup_table</name><index pos:start="147:31" pos:end="147:54">[<expr pos:start="147:32" pos:end="147:53"><call pos:start="147:32" pos:end="147:53"><name pos:start="147:32" pos:end="147:46">get_depth_index</name><argument_list pos:start="147:47" pos:end="147:53">(<argument pos:start="147:48" pos:end="147:52"><expr pos:start="147:48" pos:end="147:52"><name pos:start="147:48" pos:end="147:52"><name pos:start="147:48" pos:end="147:48">s</name><operator pos:start="147:49" pos:end="147:50">-&gt;</operator><name pos:start="147:51" pos:end="147:52">ds</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="151:5" pos:end="247:5"><if pos:start="151:5" pos:end="169:5">if <condition pos:start="151:8" pos:end="151:27">(<expr pos:start="151:9" pos:end="151:26"><name pos:start="151:9" pos:end="151:21">shift_control</name> <operator pos:start="151:23" pos:end="151:24">==</operator> <literal type="number" pos:start="151:26" pos:end="151:26">0</literal></expr>)</condition> <block pos:start="151:29" pos:end="169:5">{<block_content pos:start="153:9" pos:end="167:17">

        <expr_stmt pos:start="153:9" pos:end="153:43"><expr pos:start="153:9" pos:end="153:42"><name pos:start="153:9" pos:end="153:19">full_update</name> <operator pos:start="153:21" pos:end="153:22">|=</operator> <call pos:start="153:24" pos:end="153:42"><name pos:start="153:24" pos:end="153:39">update_palette16</name><argument_list pos:start="153:40" pos:end="153:42">(<argument pos:start="153:41" pos:end="153:41"><expr pos:start="153:41" pos:end="153:41"><name pos:start="153:41" pos:end="153:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="155:9" pos:end="165:9"><if pos:start="155:9" pos:end="161:9">if <condition pos:start="155:12" pos:end="155:28">(<expr pos:start="155:13" pos:end="155:27"><name pos:start="155:13" pos:end="155:23"><name pos:start="155:13" pos:end="155:13">s</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:17">sr</name><index pos:start="155:18" pos:end="155:23">[<expr pos:start="155:19" pos:end="155:22"><literal type="number" pos:start="155:19" pos:end="155:22">0x01</literal></expr>]</index></name> <operator pos:start="155:25" pos:end="155:25">&amp;</operator> <literal type="number" pos:start="155:27" pos:end="155:27">8</literal></expr>)</condition> <block pos:start="155:30" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:29">

            <expr_stmt pos:start="157:13" pos:end="157:33"><expr pos:start="157:13" pos:end="157:32"><name pos:start="157:13" pos:end="157:13">v</name> <operator pos:start="157:15" pos:end="157:15">=</operator> <name pos:start="157:17" pos:end="157:32">VGA_DRAW_LINE4D2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:29"><expr pos:start="159:13" pos:end="159:28"><name pos:start="159:13" pos:end="159:22">disp_width</name> <operator pos:start="159:24" pos:end="159:26">&lt;&lt;=</operator> <literal type="number" pos:start="159:28" pos:end="159:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="161:11" pos:end="165:9">else <block pos:start="161:16" pos:end="165:9">{<block_content pos:start="163:13" pos:end="163:31">

            <expr_stmt pos:start="163:13" pos:end="163:31"><expr pos:start="163:13" pos:end="163:30"><name pos:start="163:13" pos:end="163:13">v</name> <operator pos:start="163:15" pos:end="163:15">=</operator> <name pos:start="163:17" pos:end="163:30">VGA_DRAW_LINE4</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:17"><expr pos:start="167:9" pos:end="167:16"><name pos:start="167:9" pos:end="167:12">bits</name> <operator pos:start="167:14" pos:end="167:14">=</operator> <literal type="number" pos:start="167:16" pos:end="167:16">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="169:7" pos:end="187:5">else if <condition pos:start="169:15" pos:end="169:34">(<expr pos:start="169:16" pos:end="169:33"><name pos:start="169:16" pos:end="169:28">shift_control</name> <operator pos:start="169:30" pos:end="169:31">==</operator> <literal type="number" pos:start="169:33" pos:end="169:33">1</literal></expr>)</condition> <block pos:start="169:36" pos:end="187:5">{<block_content pos:start="171:9" pos:end="185:17">

        <expr_stmt pos:start="171:9" pos:end="171:43"><expr pos:start="171:9" pos:end="171:42"><name pos:start="171:9" pos:end="171:19">full_update</name> <operator pos:start="171:21" pos:end="171:22">|=</operator> <call pos:start="171:24" pos:end="171:42"><name pos:start="171:24" pos:end="171:39">update_palette16</name><argument_list pos:start="171:40" pos:end="171:42">(<argument pos:start="171:41" pos:end="171:41"><expr pos:start="171:41" pos:end="171:41"><name pos:start="171:41" pos:end="171:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="183:9"><if pos:start="173:9" pos:end="179:9">if <condition pos:start="173:12" pos:end="173:28">(<expr pos:start="173:13" pos:end="173:27"><name pos:start="173:13" pos:end="173:23"><name pos:start="173:13" pos:end="173:13">s</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:17">sr</name><index pos:start="173:18" pos:end="173:23">[<expr pos:start="173:19" pos:end="173:22"><literal type="number" pos:start="173:19" pos:end="173:22">0x01</literal></expr>]</index></name> <operator pos:start="173:25" pos:end="173:25">&amp;</operator> <literal type="number" pos:start="173:27" pos:end="173:27">8</literal></expr>)</condition> <block pos:start="173:30" pos:end="179:9">{<block_content pos:start="175:13" pos:end="177:29">

            <expr_stmt pos:start="175:13" pos:end="175:33"><expr pos:start="175:13" pos:end="175:32"><name pos:start="175:13" pos:end="175:13">v</name> <operator pos:start="175:15" pos:end="175:15">=</operator> <name pos:start="175:17" pos:end="175:32">VGA_DRAW_LINE2D2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:29"><expr pos:start="177:13" pos:end="177:28"><name pos:start="177:13" pos:end="177:22">disp_width</name> <operator pos:start="177:24" pos:end="177:26">&lt;&lt;=</operator> <literal type="number" pos:start="177:28" pos:end="177:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="179:11" pos:end="183:9">else <block pos:start="179:16" pos:end="183:9">{<block_content pos:start="181:13" pos:end="181:31">

            <expr_stmt pos:start="181:13" pos:end="181:31"><expr pos:start="181:13" pos:end="181:30"><name pos:start="181:13" pos:end="181:13">v</name> <operator pos:start="181:15" pos:end="181:15">=</operator> <name pos:start="181:17" pos:end="181:30">VGA_DRAW_LINE2</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:17"><expr pos:start="185:9" pos:end="185:16"><name pos:start="185:9" pos:end="185:12">bits</name> <operator pos:start="185:14" pos:end="185:14">=</operator> <literal type="number" pos:start="185:16" pos:end="185:16">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="187:7" pos:end="247:5">else <block pos:start="187:12" pos:end="247:5">{<block_content pos:start="189:9" pos:end="245:9">

        <switch pos:start="189:9" pos:end="245:9">switch<condition pos:start="189:15" pos:end="189:29">(<expr pos:start="189:16" pos:end="189:28"><call pos:start="189:16" pos:end="189:28"><name pos:start="189:16" pos:end="189:25"><name pos:start="189:16" pos:end="189:16">s</name><operator pos:start="189:17" pos:end="189:18">-&gt;</operator><name pos:start="189:19" pos:end="189:25">get_bpp</name></name><argument_list pos:start="189:26" pos:end="189:28">(<argument pos:start="189:27" pos:end="189:27"><expr pos:start="189:27" pos:end="189:27"><name pos:start="189:27" pos:end="189:27">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="189:31" pos:end="245:9">{<block_content pos:start="191:9" pos:end="243:18">

        <default pos:start="191:9" pos:end="191:16">default:</default>

        <case pos:start="193:9" pos:end="193:15">case <expr pos:start="193:14" pos:end="193:14"><literal type="number" pos:start="193:14" pos:end="193:14">0</literal></expr>:</case>

            <expr_stmt pos:start="195:13" pos:end="195:48"><expr pos:start="195:13" pos:end="195:47"><name pos:start="195:13" pos:end="195:23">full_update</name> <operator pos:start="195:25" pos:end="195:26">|=</operator> <call pos:start="195:28" pos:end="195:47"><name pos:start="195:28" pos:end="195:44">update_palette256</name><argument_list pos:start="195:45" pos:end="195:47">(<argument pos:start="195:46" pos:end="195:46"><expr pos:start="195:46" pos:end="195:46"><name pos:start="195:46" pos:end="195:46">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:33"><expr pos:start="197:13" pos:end="197:32"><name pos:start="197:13" pos:end="197:13">v</name> <operator pos:start="197:15" pos:end="197:15">=</operator> <name pos:start="197:17" pos:end="197:32">VGA_DRAW_LINE8D2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:21"><expr pos:start="199:13" pos:end="199:20"><name pos:start="199:13" pos:end="199:16">bits</name> <operator pos:start="199:18" pos:end="199:18">=</operator> <literal type="number" pos:start="199:20" pos:end="199:20">4</literal></expr>;</expr_stmt>

            <break pos:start="201:13" pos:end="201:18">break;</break>

        <case pos:start="203:9" pos:end="203:15">case <expr pos:start="203:14" pos:end="203:14"><literal type="number" pos:start="203:14" pos:end="203:14">8</literal></expr>:</case>

            <expr_stmt pos:start="205:13" pos:end="205:48"><expr pos:start="205:13" pos:end="205:47"><name pos:start="205:13" pos:end="205:23">full_update</name> <operator pos:start="205:25" pos:end="205:26">|=</operator> <call pos:start="205:28" pos:end="205:47"><name pos:start="205:28" pos:end="205:44">update_palette256</name><argument_list pos:start="205:45" pos:end="205:47">(<argument pos:start="205:46" pos:end="205:46"><expr pos:start="205:46" pos:end="205:46"><name pos:start="205:46" pos:end="205:46">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:31"><expr pos:start="207:13" pos:end="207:30"><name pos:start="207:13" pos:end="207:13">v</name> <operator pos:start="207:15" pos:end="207:15">=</operator> <name pos:start="207:17" pos:end="207:30">VGA_DRAW_LINE8</name></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:21"><expr pos:start="209:13" pos:end="209:20"><name pos:start="209:13" pos:end="209:16">bits</name> <operator pos:start="209:18" pos:end="209:18">=</operator> <literal type="number" pos:start="209:20" pos:end="209:20">8</literal></expr>;</expr_stmt>

            <break pos:start="211:13" pos:end="211:18">break;</break>

        <case pos:start="213:9" pos:end="213:16">case <expr pos:start="213:14" pos:end="213:15"><literal type="number" pos:start="213:14" pos:end="213:15">15</literal></expr>:</case>

            <expr_stmt pos:start="215:13" pos:end="215:32"><expr pos:start="215:13" pos:end="215:31"><name pos:start="215:13" pos:end="215:13">v</name> <operator pos:start="215:15" pos:end="215:15">=</operator> <name pos:start="215:17" pos:end="215:31">VGA_DRAW_LINE15</name></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:22"><expr pos:start="217:13" pos:end="217:21"><name pos:start="217:13" pos:end="217:16">bits</name> <operator pos:start="217:18" pos:end="217:18">=</operator> <literal type="number" pos:start="217:20" pos:end="217:21">16</literal></expr>;</expr_stmt>

            <break pos:start="219:13" pos:end="219:18">break;</break>

        <case pos:start="221:9" pos:end="221:16">case <expr pos:start="221:14" pos:end="221:15"><literal type="number" pos:start="221:14" pos:end="221:15">16</literal></expr>:</case>

            <expr_stmt pos:start="223:13" pos:end="223:32"><expr pos:start="223:13" pos:end="223:31"><name pos:start="223:13" pos:end="223:13">v</name> <operator pos:start="223:15" pos:end="223:15">=</operator> <name pos:start="223:17" pos:end="223:31">VGA_DRAW_LINE16</name></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:22"><expr pos:start="225:13" pos:end="225:21"><name pos:start="225:13" pos:end="225:16">bits</name> <operator pos:start="225:18" pos:end="225:18">=</operator> <literal type="number" pos:start="225:20" pos:end="225:21">16</literal></expr>;</expr_stmt>

            <break pos:start="227:13" pos:end="227:18">break;</break>

        <case pos:start="229:9" pos:end="229:16">case <expr pos:start="229:14" pos:end="229:15"><literal type="number" pos:start="229:14" pos:end="229:15">24</literal></expr>:</case>

            <expr_stmt pos:start="231:13" pos:end="231:32"><expr pos:start="231:13" pos:end="231:31"><name pos:start="231:13" pos:end="231:13">v</name> <operator pos:start="231:15" pos:end="231:15">=</operator> <name pos:start="231:17" pos:end="231:31">VGA_DRAW_LINE24</name></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:22"><expr pos:start="233:13" pos:end="233:21"><name pos:start="233:13" pos:end="233:16">bits</name> <operator pos:start="233:18" pos:end="233:18">=</operator> <literal type="number" pos:start="233:20" pos:end="233:21">24</literal></expr>;</expr_stmt>

            <break pos:start="235:13" pos:end="235:18">break;</break>

        <case pos:start="237:9" pos:end="237:16">case <expr pos:start="237:14" pos:end="237:15"><literal type="number" pos:start="237:14" pos:end="237:15">32</literal></expr>:</case>

            <expr_stmt pos:start="239:13" pos:end="239:32"><expr pos:start="239:13" pos:end="239:31"><name pos:start="239:13" pos:end="239:13">v</name> <operator pos:start="239:15" pos:end="239:15">=</operator> <name pos:start="239:17" pos:end="239:31">VGA_DRAW_LINE32</name></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:22"><expr pos:start="241:13" pos:end="241:21"><name pos:start="241:13" pos:end="241:16">bits</name> <operator pos:start="241:18" pos:end="241:18">=</operator> <literal type="number" pos:start="241:20" pos:end="241:21">32</literal></expr>;</expr_stmt>

            <break pos:start="243:13" pos:end="243:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:80"><expr pos:start="249:5" pos:end="249:79"><name pos:start="249:5" pos:end="249:17">vga_draw_line</name> <operator pos:start="249:19" pos:end="249:19">=</operator> <name pos:start="249:21" pos:end="249:79"><name pos:start="249:21" pos:end="249:39">vga_draw_line_table</name><index pos:start="249:40" pos:end="249:79">[<expr pos:start="249:41" pos:end="249:78"><name pos:start="249:41" pos:end="249:41">v</name> <operator pos:start="249:43" pos:end="249:43">*</operator> <name pos:start="249:45" pos:end="249:53">NB_DEPTHS</name> <operator pos:start="249:55" pos:end="249:55">+</operator> <call pos:start="249:57" pos:end="249:78"><name pos:start="249:57" pos:end="249:71">get_depth_index</name><argument_list pos:start="249:72" pos:end="249:78">(<argument pos:start="249:73" pos:end="249:77"><expr pos:start="249:73" pos:end="249:77"><name pos:start="249:73" pos:end="249:77"><name pos:start="249:73" pos:end="249:73">s</name><operator pos:start="249:74" pos:end="249:75">-&gt;</operator><name pos:start="249:76" pos:end="249:77">ds</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="253:5" pos:end="255:32"><if pos:start="253:5" pos:end="255:32">if <condition pos:start="253:8" pos:end="253:66">(<expr pos:start="253:9" pos:end="253:65"><operator pos:start="253:9" pos:end="253:9">!</operator><call pos:start="253:10" pos:end="253:41"><name pos:start="253:10" pos:end="253:25">is_buffer_shared</name><argument_list pos:start="253:26" pos:end="253:41">(<argument pos:start="253:27" pos:end="253:40"><expr pos:start="253:27" pos:end="253:40"><name pos:start="253:27" pos:end="253:40"><name pos:start="253:27" pos:end="253:27">s</name><operator pos:start="253:28" pos:end="253:29">-&gt;</operator><name pos:start="253:30" pos:end="253:31">ds</name><operator pos:start="253:32" pos:end="253:33">-&gt;</operator><name pos:start="253:34" pos:end="253:40">surface</name></name></expr></argument>)</argument_list></call> <operator pos:start="253:43" pos:end="253:44">&amp;&amp;</operator> <name pos:start="253:46" pos:end="253:65"><name pos:start="253:46" pos:end="253:46">s</name><operator pos:start="253:47" pos:end="253:48">-&gt;</operator><name pos:start="253:49" pos:end="253:65">cursor_invalidate</name></name></expr>)</condition><block type="pseudo" pos:start="255:9" pos:end="255:32"><block_content pos:start="255:9" pos:end="255:32">

        <expr_stmt pos:start="255:9" pos:end="255:32"><expr pos:start="255:9" pos:end="255:31"><call pos:start="255:9" pos:end="255:31"><name pos:start="255:9" pos:end="255:28"><name pos:start="255:9" pos:end="255:9">s</name><operator pos:start="255:10" pos:end="255:11">-&gt;</operator><name pos:start="255:12" pos:end="255:28">cursor_invalidate</name></name><argument_list pos:start="255:29" pos:end="255:31">(<argument pos:start="255:30" pos:end="255:30"><expr pos:start="255:30" pos:end="255:30"><name pos:start="255:30" pos:end="255:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="259:5" pos:end="268:0"><expr pos:start="259:5" pos:end="259:32"><name pos:start="259:5" pos:end="259:15">line_offset</name> <operator pos:start="259:17" pos:end="259:17">=</operator> <name pos:start="259:19" pos:end="259:32"><name pos:start="259:19" pos:end="259:19">s</name><operator pos:start="259:20" pos:end="259:21">-&gt;</operator><name pos:start="259:22" pos:end="259:32">line_offset</name></name></expr>;</expr_stmt>

<cpp:if pos:start="261:1" pos:end="261:5">#<cpp:directive pos:start="261:2" pos:end="261:3">if</cpp:directive> <expr pos:start="261:5" pos:end="261:5"><literal type="number" pos:start="261:5" pos:end="261:5">0</literal></expr></cpp:if>

    printf("w=%d h=%d v=%d line_offset=%d cr[0x09]=0x%02x cr[0x17]=0x%02x linecmp=%d sr[0x01]=0x%02x\n",

           width, height, v, line_offset, s-&gt;cr[9], s-&gt;cr[0x17], s-&gt;line_compare, s-&gt;sr[0x01]);

<cpp:endif pos:start="267:1" pos:end="267:6">#<cpp:directive pos:start="267:2" pos:end="267:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="269:5" pos:end="269:32"><expr pos:start="269:5" pos:end="269:31"><name pos:start="269:5" pos:end="269:9">addr1</name> <operator pos:start="269:11" pos:end="269:11">=</operator> <operator pos:start="269:13" pos:end="269:13">(</operator><name pos:start="269:14" pos:end="269:26"><name pos:start="269:14" pos:end="269:14">s</name><operator pos:start="269:15" pos:end="269:16">-&gt;</operator><name pos:start="269:17" pos:end="269:26">start_addr</name></name> <operator pos:start="269:28" pos:end="269:28">*</operator> <literal type="number" pos:start="269:30" pos:end="269:30">4</literal><operator pos:start="269:31" pos:end="269:31">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="271:5" pos:end="271:36"><expr pos:start="271:5" pos:end="271:35"><name pos:start="271:5" pos:end="271:10">bwidth</name> <operator pos:start="271:12" pos:end="271:12">=</operator> <operator pos:start="271:14" pos:end="271:14">(</operator><name pos:start="271:15" pos:end="271:19">width</name> <operator pos:start="271:21" pos:end="271:21">*</operator> <name pos:start="271:23" pos:end="271:26">bits</name> <operator pos:start="271:28" pos:end="271:28">+</operator> <literal type="number" pos:start="271:30" pos:end="271:30">7</literal><operator pos:start="271:31" pos:end="271:31">)</operator> <operator pos:start="271:33" pos:end="271:33">/</operator> <literal type="number" pos:start="271:35" pos:end="271:35">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="273:5" pos:end="273:17"><expr pos:start="273:5" pos:end="273:16"><name pos:start="273:5" pos:end="273:11">y_start</name> <operator pos:start="273:13" pos:end="273:13">=</operator> <operator pos:start="273:15" pos:end="273:15">-</operator><literal type="number" pos:start="273:16" pos:end="273:16">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="275:5" pos:end="275:26"><expr pos:start="275:5" pos:end="275:25"><name pos:start="275:5" pos:end="275:12">page_min</name> <operator pos:start="275:14" pos:end="275:14">=</operator> <literal type="number" pos:start="275:16" pos:end="275:25">0x7fffffff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="277:5" pos:end="277:18"><expr pos:start="277:5" pos:end="277:17"><name pos:start="277:5" pos:end="277:12">page_max</name> <operator pos:start="277:14" pos:end="277:14">=</operator> <operator pos:start="277:16" pos:end="277:16">-</operator><literal type="number" pos:start="277:17" pos:end="277:17">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="279:5" pos:end="279:27"><expr pos:start="279:5" pos:end="279:26"><name pos:start="279:5" pos:end="279:5">d</name> <operator pos:start="279:7" pos:end="279:7">=</operator> <call pos:start="279:9" pos:end="279:26"><name pos:start="279:9" pos:end="279:19">ds_get_data</name><argument_list pos:start="279:20" pos:end="279:26">(<argument pos:start="279:21" pos:end="279:25"><expr pos:start="279:21" pos:end="279:25"><name pos:start="279:21" pos:end="279:25"><name pos:start="279:21" pos:end="279:21">s</name><operator pos:start="279:22" pos:end="279:23">-&gt;</operator><name pos:start="279:24" pos:end="279:25">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="281:5" pos:end="281:38"><expr pos:start="281:5" pos:end="281:37"><name pos:start="281:5" pos:end="281:12">linesize</name> <operator pos:start="281:14" pos:end="281:14">=</operator> <call pos:start="281:16" pos:end="281:37"><name pos:start="281:16" pos:end="281:30">ds_get_linesize</name><argument_list pos:start="281:31" pos:end="281:37">(<argument pos:start="281:32" pos:end="281:36"><expr pos:start="281:32" pos:end="281:36"><name pos:start="281:32" pos:end="281:36"><name pos:start="281:32" pos:end="281:32">s</name><operator pos:start="281:33" pos:end="281:34">-&gt;</operator><name pos:start="281:35" pos:end="281:36">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="283:5" pos:end="283:11"><expr pos:start="283:5" pos:end="283:10"><name pos:start="283:5" pos:end="283:6">y1</name> <operator pos:start="283:8" pos:end="283:8">=</operator> <literal type="number" pos:start="283:10" pos:end="283:10">0</literal></expr>;</expr_stmt>

    <for pos:start="285:5" pos:end="397:5">for<control pos:start="285:8" pos:end="285:31">(<init pos:start="285:9" pos:end="285:14"><expr pos:start="285:9" pos:end="285:13"><name pos:start="285:9" pos:end="285:9">y</name> <operator pos:start="285:11" pos:end="285:11">=</operator> <literal type="number" pos:start="285:13" pos:end="285:13">0</literal></expr>;</init> <condition pos:start="285:16" pos:end="285:26"><expr pos:start="285:16" pos:end="285:25"><name pos:start="285:16" pos:end="285:16">y</name> <operator pos:start="285:18" pos:end="285:18">&lt;</operator> <name pos:start="285:20" pos:end="285:25">height</name></expr>;</condition> <incr pos:start="285:28" pos:end="285:30"><expr pos:start="285:28" pos:end="285:30"><name pos:start="285:28" pos:end="285:28">y</name><operator pos:start="285:29" pos:end="285:30">++</operator></expr></incr>)</control> <block pos:start="285:33" pos:end="397:5">{<block_content pos:start="287:9" pos:end="395:22">

        <expr_stmt pos:start="287:9" pos:end="287:21"><expr pos:start="287:9" pos:end="287:20"><name pos:start="287:9" pos:end="287:12">addr</name> <operator pos:start="287:14" pos:end="287:14">=</operator> <name pos:start="287:16" pos:end="287:20">addr1</name></expr>;</expr_stmt>

        <if_stmt pos:start="289:9" pos:end="299:9"><if pos:start="289:9" pos:end="299:9">if <condition pos:start="289:12" pos:end="289:31">(<expr pos:start="289:13" pos:end="289:30"><operator pos:start="289:13" pos:end="289:13">!</operator><operator pos:start="289:14" pos:end="289:14">(</operator><name pos:start="289:15" pos:end="289:25"><name pos:start="289:15" pos:end="289:15">s</name><operator pos:start="289:16" pos:end="289:17">-&gt;</operator><name pos:start="289:18" pos:end="289:19">cr</name><index pos:start="289:20" pos:end="289:25">[<expr pos:start="289:21" pos:end="289:24"><literal type="number" pos:start="289:21" pos:end="289:24">0x17</literal></expr>]</index></name> <operator pos:start="289:27" pos:end="289:27">&amp;</operator> <literal type="number" pos:start="289:29" pos:end="289:29">1</literal><operator pos:start="289:30" pos:end="289:30">)</operator></expr>)</condition> <block pos:start="289:33" pos:end="299:9">{<block_content pos:start="291:13" pos:end="297:64">

            <decl_stmt pos:start="291:13" pos:end="291:22"><decl pos:start="291:13" pos:end="291:21"><type pos:start="291:13" pos:end="291:15"><name pos:start="291:13" pos:end="291:15">int</name></type> <name pos:start="291:17" pos:end="291:21">shift</name></decl>;</decl_stmt>

            <comment type="block" pos:start="293:13" pos:end="293:44">/* CGA compatibility handling */</comment>

            <expr_stmt pos:start="295:13" pos:end="295:50"><expr pos:start="295:13" pos:end="295:49"><name pos:start="295:13" pos:end="295:17">shift</name> <operator pos:start="295:19" pos:end="295:19">=</operator> <literal type="number" pos:start="295:21" pos:end="295:24">14</literal> <operator pos:start="295:24" pos:end="295:24">+</operator> <operator pos:start="295:26" pos:end="295:26">(</operator><operator pos:start="295:27" pos:end="295:27">(</operator><name pos:start="295:28" pos:end="295:38"><name pos:start="295:28" pos:end="295:28">s</name><operator pos:start="295:29" pos:end="295:30">-&gt;</operator><name pos:start="295:31" pos:end="295:32">cr</name><index pos:start="295:33" pos:end="295:38">[<expr pos:start="295:34" pos:end="295:37"><literal type="number" pos:start="295:34" pos:end="295:37">0x17</literal></expr>]</index></name> <operator pos:start="295:40" pos:end="295:41">&gt;&gt;</operator> <literal type="number" pos:start="295:43" pos:end="295:43">6</literal><operator pos:start="295:44" pos:end="295:44">)</operator> <operator pos:start="295:46" pos:end="295:46">&amp;</operator> <literal type="number" pos:start="295:48" pos:end="295:48">1</literal><operator pos:start="295:49" pos:end="295:49">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:64"><expr pos:start="297:13" pos:end="297:63"><name pos:start="297:13" pos:end="297:16">addr</name> <operator pos:start="297:18" pos:end="297:18">=</operator> <operator pos:start="297:20" pos:end="297:20">(</operator><name pos:start="297:21" pos:end="297:24">addr</name> <operator pos:start="297:26" pos:end="297:26">&amp;</operator> <operator pos:start="297:28" pos:end="297:28">~</operator><operator pos:start="297:29" pos:end="297:29">(</operator><literal type="number" pos:start="297:30" pos:end="297:30">1</literal> <operator pos:start="297:32" pos:end="297:33">&lt;&lt;</operator> <name pos:start="297:35" pos:end="297:39">shift</name><operator pos:start="297:40" pos:end="297:40">)</operator><operator pos:start="297:41" pos:end="297:41">)</operator> <operator pos:start="297:43" pos:end="297:43">|</operator> <operator pos:start="297:45" pos:end="297:45">(</operator><operator pos:start="297:46" pos:end="297:46">(</operator><name pos:start="297:47" pos:end="297:48">y1</name> <operator pos:start="297:50" pos:end="297:50">&amp;</operator> <literal type="number" pos:start="297:52" pos:end="297:52">1</literal><operator pos:start="297:53" pos:end="297:53">)</operator> <operator pos:start="297:55" pos:end="297:56">&lt;&lt;</operator> <name pos:start="297:58" pos:end="297:62">shift</name><operator pos:start="297:63" pos:end="297:63">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="301:9" pos:end="305:9"><if pos:start="301:9" pos:end="305:9">if <condition pos:start="301:12" pos:end="301:31">(<expr pos:start="301:13" pos:end="301:30"><operator pos:start="301:13" pos:end="301:13">!</operator><operator pos:start="301:14" pos:end="301:14">(</operator><name pos:start="301:15" pos:end="301:25"><name pos:start="301:15" pos:end="301:15">s</name><operator pos:start="301:16" pos:end="301:17">-&gt;</operator><name pos:start="301:18" pos:end="301:19">cr</name><index pos:start="301:20" pos:end="301:25">[<expr pos:start="301:21" pos:end="301:24"><literal type="number" pos:start="301:21" pos:end="301:24">0x17</literal></expr>]</index></name> <operator pos:start="301:27" pos:end="301:27">&amp;</operator> <literal type="number" pos:start="301:29" pos:end="301:29">2</literal><operator pos:start="301:30" pos:end="301:30">)</operator></expr>)</condition> <block pos:start="301:33" pos:end="305:9">{<block_content pos:start="303:13" pos:end="303:55">

            <expr_stmt pos:start="303:13" pos:end="303:55"><expr pos:start="303:13" pos:end="303:54"><name pos:start="303:13" pos:end="303:16">addr</name> <operator pos:start="303:18" pos:end="303:18">=</operator> <operator pos:start="303:20" pos:end="303:20">(</operator><name pos:start="303:21" pos:end="303:24">addr</name> <operator pos:start="303:26" pos:end="303:26">&amp;</operator> <operator pos:start="303:28" pos:end="303:28">~</operator><literal type="number" pos:start="303:29" pos:end="303:34">0x8000</literal><operator pos:start="303:35" pos:end="303:35">)</operator> <operator pos:start="303:37" pos:end="303:37">|</operator> <operator pos:start="303:39" pos:end="303:39">(</operator><operator pos:start="303:40" pos:end="303:40">(</operator><name pos:start="303:41" pos:end="303:42">y1</name> <operator pos:start="303:44" pos:end="303:44">&amp;</operator> <literal type="number" pos:start="303:46" pos:end="303:46">2</literal><operator pos:start="303:47" pos:end="303:47">)</operator> <operator pos:start="303:49" pos:end="303:50">&lt;&lt;</operator> <literal type="number" pos:start="303:52" pos:end="303:53">14</literal><operator pos:start="303:54" pos:end="303:54">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:59"><expr pos:start="307:9" pos:end="307:58"><name pos:start="307:9" pos:end="307:13">page0</name> <operator pos:start="307:15" pos:end="307:15">=</operator> <name pos:start="307:17" pos:end="307:30"><name pos:start="307:17" pos:end="307:17">s</name><operator pos:start="307:18" pos:end="307:19">-&gt;</operator><name pos:start="307:20" pos:end="307:30">vram_offset</name></name> <operator pos:start="307:32" pos:end="307:32">+</operator> <operator pos:start="307:34" pos:end="307:34">(</operator><name pos:start="307:35" pos:end="307:38">addr</name> <operator pos:start="307:40" pos:end="307:40">&amp;</operator> <name pos:start="307:42" pos:end="307:57">TARGET_PAGE_MASK</name><operator pos:start="307:58" pos:end="307:58">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:74"><expr pos:start="309:9" pos:end="309:73"><name pos:start="309:9" pos:end="309:13">page1</name> <operator pos:start="309:15" pos:end="309:15">=</operator> <name pos:start="309:17" pos:end="309:30"><name pos:start="309:17" pos:end="309:17">s</name><operator pos:start="309:18" pos:end="309:19">-&gt;</operator><name pos:start="309:20" pos:end="309:30">vram_offset</name></name> <operator pos:start="309:32" pos:end="309:32">+</operator> <operator pos:start="309:34" pos:end="309:34">(</operator><operator pos:start="309:35" pos:end="309:35">(</operator><name pos:start="309:36" pos:end="309:39">addr</name> <operator pos:start="309:41" pos:end="309:41">+</operator> <name pos:start="309:43" pos:end="309:48">bwidth</name> <operator pos:start="309:50" pos:end="309:50">-</operator> <literal type="number" pos:start="309:52" pos:end="309:52">1</literal><operator pos:start="309:53" pos:end="309:53">)</operator> <operator pos:start="309:55" pos:end="309:55">&amp;</operator> <name pos:start="309:57" pos:end="309:72">TARGET_PAGE_MASK</name><operator pos:start="309:73" pos:end="309:73">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="315:65"><expr pos:start="311:9" pos:end="315:64"><name pos:start="311:9" pos:end="311:14">update</name> <operator pos:start="311:16" pos:end="311:16">=</operator> <name pos:start="311:18" pos:end="311:28">full_update</name> <operator pos:start="311:30" pos:end="311:30">|</operator>

            <call pos:start="313:13" pos:end="313:64"><name pos:start="313:13" pos:end="313:41">cpu_physical_memory_get_dirty</name><argument_list pos:start="313:42" pos:end="313:64">(<argument pos:start="313:43" pos:end="313:47"><expr pos:start="313:43" pos:end="313:47"><name pos:start="313:43" pos:end="313:47">page0</name></expr></argument>, <argument pos:start="313:50" pos:end="313:63"><expr pos:start="313:50" pos:end="313:63"><name pos:start="313:50" pos:end="313:63">VGA_DIRTY_FLAG</name></expr></argument>)</argument_list></call> <operator pos:start="313:66" pos:end="313:66">|</operator>

            <call pos:start="315:13" pos:end="315:64"><name pos:start="315:13" pos:end="315:41">cpu_physical_memory_get_dirty</name><argument_list pos:start="315:42" pos:end="315:64">(<argument pos:start="315:43" pos:end="315:47"><expr pos:start="315:43" pos:end="315:47"><name pos:start="315:43" pos:end="315:47">page1</name></expr></argument>, <argument pos:start="315:50" pos:end="315:63"><expr pos:start="315:50" pos:end="315:63"><name pos:start="315:50" pos:end="315:63">VGA_DIRTY_FLAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="317:9" pos:end="325:9"><if pos:start="317:9" pos:end="325:9">if <condition pos:start="317:12" pos:end="317:47">(<expr pos:start="317:13" pos:end="317:46"><operator pos:start="317:13" pos:end="317:13">(</operator><name pos:start="317:14" pos:end="317:18">page1</name> <operator pos:start="317:20" pos:end="317:20">-</operator> <name pos:start="317:22" pos:end="317:26">page0</name><operator pos:start="317:27" pos:end="317:27">)</operator> <operator pos:start="317:29" pos:end="317:29">&gt;</operator> <name pos:start="317:31" pos:end="317:46">TARGET_PAGE_SIZE</name></expr>)</condition> <block pos:start="317:49" pos:end="325:9">{<block_content pos:start="321:13" pos:end="323:68">

            <comment type="block" pos:start="319:13" pos:end="319:52">/* if wide line, can use another page */</comment>

            <expr_stmt pos:start="321:13" pos:end="323:68"><expr pos:start="321:13" pos:end="323:67"><name pos:start="321:13" pos:end="321:18">update</name> <operator pos:start="321:20" pos:end="321:21">|=</operator> <call pos:start="321:23" pos:end="323:67"><name pos:start="321:23" pos:end="321:51">cpu_physical_memory_get_dirty</name><argument_list pos:start="321:52" pos:end="323:67">(<argument pos:start="321:53" pos:end="321:76"><expr pos:start="321:53" pos:end="321:76"><name pos:start="321:53" pos:end="321:57">page0</name> <operator pos:start="321:59" pos:end="321:59">+</operator> <name pos:start="321:61" pos:end="321:76">TARGET_PAGE_SIZE</name></expr></argument>,

                                                    <argument pos:start="323:53" pos:end="323:66"><expr pos:start="323:53" pos:end="323:66"><name pos:start="323:53" pos:end="323:66">VGA_DIRTY_FLAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="327:9" pos:end="327:59">/* explicit invalidation for the hardware cursor */</comment>

        <expr_stmt pos:start="329:9" pos:end="329:69"><expr pos:start="329:9" pos:end="329:68"><name pos:start="329:9" pos:end="329:14">update</name> <operator pos:start="329:16" pos:end="329:17">|=</operator> <operator pos:start="329:19" pos:end="329:19">(</operator><name pos:start="329:20" pos:end="329:49"><name pos:start="329:20" pos:end="329:20">s</name><operator pos:start="329:21" pos:end="329:22">-&gt;</operator><name pos:start="329:23" pos:end="329:41">invalidated_y_table</name><index pos:start="329:42" pos:end="329:49">[<expr pos:start="329:43" pos:end="329:48"><name pos:start="329:43" pos:end="329:43">y</name> <operator pos:start="329:45" pos:end="329:46">&gt;&gt;</operator> <literal type="number" pos:start="329:48" pos:end="329:48">5</literal></expr>]</index></name> <operator pos:start="329:51" pos:end="329:52">&gt;&gt;</operator> <operator pos:start="329:54" pos:end="329:54">(</operator><name pos:start="329:55" pos:end="329:55">y</name> <operator pos:start="329:57" pos:end="329:57">&amp;</operator> <literal type="number" pos:start="329:59" pos:end="329:62">0x1f</literal><operator pos:start="329:63" pos:end="329:63">)</operator><operator pos:start="329:64" pos:end="329:64">)</operator> <operator pos:start="329:66" pos:end="329:66">&amp;</operator> <literal type="number" pos:start="329:68" pos:end="329:68">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="331:9" pos:end="369:9"><if pos:start="331:9" pos:end="355:9">if <condition pos:start="331:12" pos:end="331:19">(<expr pos:start="331:13" pos:end="331:18"><name pos:start="331:13" pos:end="331:18">update</name></expr>)</condition> <block pos:start="331:21" pos:end="355:9">{<block_content pos:start="333:13" pos:end="353:13">

            <if_stmt pos:start="333:13" pos:end="335:28"><if pos:start="333:13" pos:end="335:28">if <condition pos:start="333:16" pos:end="333:28">(<expr pos:start="333:17" pos:end="333:27"><name pos:start="333:17" pos:end="333:23">y_start</name> <operator pos:start="333:25" pos:end="333:25">&lt;</operator> <literal type="number" pos:start="333:27" pos:end="333:27">0</literal></expr>)</condition><block type="pseudo" pos:start="335:17" pos:end="335:28"><block_content pos:start="335:17" pos:end="335:28">

                <expr_stmt pos:start="335:17" pos:end="335:28"><expr pos:start="335:17" pos:end="335:27"><name pos:start="335:17" pos:end="335:23">y_start</name> <operator pos:start="335:25" pos:end="335:25">=</operator> <name pos:start="335:27" pos:end="335:27">y</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="337:13" pos:end="339:33"><if pos:start="337:13" pos:end="339:33">if <condition pos:start="337:16" pos:end="337:33">(<expr pos:start="337:17" pos:end="337:32"><name pos:start="337:17" pos:end="337:21">page0</name> <operator pos:start="337:23" pos:end="337:23">&lt;</operator> <name pos:start="337:25" pos:end="337:32">page_min</name></expr>)</condition><block type="pseudo" pos:start="339:17" pos:end="339:33"><block_content pos:start="339:17" pos:end="339:33">

                <expr_stmt pos:start="339:17" pos:end="339:33"><expr pos:start="339:17" pos:end="339:32"><name pos:start="339:17" pos:end="339:24">page_min</name> <operator pos:start="339:26" pos:end="339:26">=</operator> <name pos:start="339:28" pos:end="339:32">page0</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="341:13" pos:end="343:33"><if pos:start="341:13" pos:end="343:33">if <condition pos:start="341:16" pos:end="341:33">(<expr pos:start="341:17" pos:end="341:32"><name pos:start="341:17" pos:end="341:21">page1</name> <operator pos:start="341:23" pos:end="341:23">&gt;</operator> <name pos:start="341:25" pos:end="341:32">page_max</name></expr>)</condition><block type="pseudo" pos:start="343:17" pos:end="343:33"><block_content pos:start="343:17" pos:end="343:33">

                <expr_stmt pos:start="343:17" pos:end="343:33"><expr pos:start="343:17" pos:end="343:32"><name pos:start="343:17" pos:end="343:24">page_max</name> <operator pos:start="343:26" pos:end="343:26">=</operator> <name pos:start="343:28" pos:end="343:32">page1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="345:13" pos:end="353:13"><if pos:start="345:13" pos:end="353:13">if <condition pos:start="345:16" pos:end="345:52">(<expr pos:start="345:17" pos:end="345:51"><operator pos:start="345:17" pos:end="345:17">!</operator><operator pos:start="345:18" pos:end="345:18">(</operator><call pos:start="345:19" pos:end="345:50"><name pos:start="345:19" pos:end="345:34">is_buffer_shared</name><argument_list pos:start="345:35" pos:end="345:50">(<argument pos:start="345:36" pos:end="345:49"><expr pos:start="345:36" pos:end="345:49"><name pos:start="345:36" pos:end="345:49"><name pos:start="345:36" pos:end="345:36">s</name><operator pos:start="345:37" pos:end="345:38">-&gt;</operator><name pos:start="345:39" pos:end="345:40">ds</name><operator pos:start="345:41" pos:end="345:42">-&gt;</operator><name pos:start="345:43" pos:end="345:49">surface</name></name></expr></argument>)</argument_list></call><operator pos:start="345:51" pos:end="345:51">)</operator></expr>)</condition> <block pos:start="345:54" pos:end="353:13">{<block_content pos:start="347:17" pos:end="351:49">

                <expr_stmt pos:start="347:17" pos:end="347:63"><expr pos:start="347:17" pos:end="347:62"><call pos:start="347:17" pos:end="347:62"><name pos:start="347:17" pos:end="347:29">vga_draw_line</name><argument_list pos:start="347:30" pos:end="347:62">(<argument pos:start="347:31" pos:end="347:31"><expr pos:start="347:31" pos:end="347:31"><name pos:start="347:31" pos:end="347:31">s</name></expr></argument>, <argument pos:start="347:34" pos:end="347:34"><expr pos:start="347:34" pos:end="347:34"><name pos:start="347:34" pos:end="347:34">d</name></expr></argument>, <argument pos:start="347:37" pos:end="347:54"><expr pos:start="347:37" pos:end="347:54"><name pos:start="347:37" pos:end="347:47"><name pos:start="347:37" pos:end="347:37">s</name><operator pos:start="347:38" pos:end="347:39">-&gt;</operator><name pos:start="347:40" pos:end="347:47">vram_ptr</name></name> <operator pos:start="347:49" pos:end="347:49">+</operator> <name pos:start="347:51" pos:end="347:54">addr</name></expr></argument>, <argument pos:start="347:57" pos:end="347:61"><expr pos:start="347:57" pos:end="347:61"><name pos:start="347:57" pos:end="347:61">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="349:17" pos:end="351:49"><if pos:start="349:17" pos:end="351:49">if <condition pos:start="349:20" pos:end="349:40">(<expr pos:start="349:21" pos:end="349:39"><name pos:start="349:21" pos:end="349:39"><name pos:start="349:21" pos:end="349:21">s</name><operator pos:start="349:22" pos:end="349:23">-&gt;</operator><name pos:start="349:24" pos:end="349:39">cursor_draw_line</name></name></expr>)</condition><block type="pseudo" pos:start="351:21" pos:end="351:49"><block_content pos:start="351:21" pos:end="351:49">

                    <expr_stmt pos:start="351:21" pos:end="351:49"><expr pos:start="351:21" pos:end="351:48"><call pos:start="351:21" pos:end="351:48"><name pos:start="351:21" pos:end="351:39"><name pos:start="351:21" pos:end="351:21">s</name><operator pos:start="351:22" pos:end="351:23">-&gt;</operator><name pos:start="351:24" pos:end="351:39">cursor_draw_line</name></name><argument_list pos:start="351:40" pos:end="351:48">(<argument pos:start="351:41" pos:end="351:41"><expr pos:start="351:41" pos:end="351:41"><name pos:start="351:41" pos:end="351:41">s</name></expr></argument>, <argument pos:start="351:44" pos:end="351:44"><expr pos:start="351:44" pos:end="351:44"><name pos:start="351:44" pos:end="351:44">d</name></expr></argument>, <argument pos:start="351:47" pos:end="351:47"><expr pos:start="351:47" pos:end="351:47"><name pos:start="351:47" pos:end="351:47">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="355:11" pos:end="369:9">else <block pos:start="355:16" pos:end="369:9">{<block_content pos:start="357:13" pos:end="367:13">

            <if_stmt pos:start="357:13" pos:end="367:13"><if pos:start="357:13" pos:end="367:13">if <condition pos:start="357:16" pos:end="357:29">(<expr pos:start="357:17" pos:end="357:28"><name pos:start="357:17" pos:end="357:23">y_start</name> <operator pos:start="357:25" pos:end="357:26">&gt;=</operator> <literal type="number" pos:start="357:28" pos:end="357:28">0</literal></expr>)</condition> <block pos:start="357:31" pos:end="367:13">{<block_content pos:start="361:17" pos:end="365:29">

                <comment type="block" pos:start="359:17" pos:end="359:38">/* flush to display */</comment>

                <expr_stmt pos:start="361:17" pos:end="363:52"><expr pos:start="361:17" pos:end="363:51"><call pos:start="361:17" pos:end="363:51"><name pos:start="361:17" pos:end="361:26">dpy_update</name><argument_list pos:start="361:27" pos:end="363:51">(<argument pos:start="361:28" pos:end="361:32"><expr pos:start="361:28" pos:end="361:32"><name pos:start="361:28" pos:end="361:32"><name pos:start="361:28" pos:end="361:28">s</name><operator pos:start="361:29" pos:end="361:30">-&gt;</operator><name pos:start="361:31" pos:end="361:32">ds</name></name></expr></argument>, <argument pos:start="361:35" pos:end="361:35"><expr pos:start="361:35" pos:end="361:35"><literal type="number" pos:start="361:35" pos:end="361:35">0</literal></expr></argument>, <argument pos:start="361:38" pos:end="361:44"><expr pos:start="361:38" pos:end="361:44"><name pos:start="361:38" pos:end="361:44">y_start</name></expr></argument>,

                           <argument pos:start="363:28" pos:end="363:37"><expr pos:start="363:28" pos:end="363:37"><name pos:start="363:28" pos:end="363:37">disp_width</name></expr></argument>, <argument pos:start="363:40" pos:end="363:50"><expr pos:start="363:40" pos:end="363:50"><name pos:start="363:40" pos:end="363:40">y</name> <operator pos:start="363:42" pos:end="363:42">-</operator> <name pos:start="363:44" pos:end="363:50">y_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="365:17" pos:end="365:29"><expr pos:start="365:17" pos:end="365:28"><name pos:start="365:17" pos:end="365:23">y_start</name> <operator pos:start="365:25" pos:end="365:25">=</operator> <operator pos:start="365:27" pos:end="365:27">-</operator><literal type="number" pos:start="365:28" pos:end="365:28">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="371:9" pos:end="387:9"><if pos:start="371:9" pos:end="383:9">if <condition pos:start="371:12" pos:end="371:23">(<expr pos:start="371:13" pos:end="371:22"><operator pos:start="371:13" pos:end="371:13">!</operator><name pos:start="371:14" pos:end="371:22">multi_run</name></expr>)</condition> <block pos:start="371:25" pos:end="383:9">{<block_content pos:start="373:13" pos:end="381:35">

            <expr_stmt pos:start="373:13" pos:end="373:41"><expr pos:start="373:13" pos:end="373:40"><name pos:start="373:13" pos:end="373:16">mask</name> <operator pos:start="373:18" pos:end="373:18">=</operator> <operator pos:start="373:20" pos:end="373:20">(</operator><name pos:start="373:21" pos:end="373:31"><name pos:start="373:21" pos:end="373:21">s</name><operator pos:start="373:22" pos:end="373:23">-&gt;</operator><name pos:start="373:24" pos:end="373:25">cr</name><index pos:start="373:26" pos:end="373:31">[<expr pos:start="373:27" pos:end="373:30"><literal type="number" pos:start="373:27" pos:end="373:30">0x17</literal></expr>]</index></name> <operator pos:start="373:33" pos:end="373:33">&amp;</operator> <literal type="number" pos:start="373:35" pos:end="373:35">3</literal><operator pos:start="373:36" pos:end="373:36">)</operator> <operator pos:start="373:38" pos:end="373:38">^</operator> <literal type="number" pos:start="373:40" pos:end="373:40">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="375:13" pos:end="377:37"><if pos:start="375:13" pos:end="377:37">if <condition pos:start="375:16" pos:end="375:36">(<expr pos:start="375:17" pos:end="375:35"><operator pos:start="375:17" pos:end="375:17">(</operator><name pos:start="375:18" pos:end="375:19">y1</name> <operator pos:start="375:21" pos:end="375:21">&amp;</operator> <name pos:start="375:23" pos:end="375:26">mask</name><operator pos:start="375:27" pos:end="375:27">)</operator> <operator pos:start="375:29" pos:end="375:30">==</operator> <name pos:start="375:32" pos:end="375:35">mask</name></expr>)</condition><block type="pseudo" pos:start="377:17" pos:end="377:37"><block_content pos:start="377:17" pos:end="377:37">

                <expr_stmt pos:start="377:17" pos:end="377:37"><expr pos:start="377:17" pos:end="377:36"><name pos:start="377:17" pos:end="377:21">addr1</name> <operator pos:start="377:23" pos:end="377:24">+=</operator> <name pos:start="377:26" pos:end="377:36">line_offset</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="379:13" pos:end="379:17"><expr pos:start="379:13" pos:end="379:16"><name pos:start="379:13" pos:end="379:14">y1</name><operator pos:start="379:15" pos:end="379:16">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="381:13" pos:end="381:35"><expr pos:start="381:13" pos:end="381:34"><name pos:start="381:13" pos:end="381:21">multi_run</name> <operator pos:start="381:23" pos:end="381:23">=</operator> <name pos:start="381:25" pos:end="381:34">multi_scan</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="383:11" pos:end="387:9">else <block pos:start="383:16" pos:end="387:9">{<block_content pos:start="385:13" pos:end="385:24">

            <expr_stmt pos:start="385:13" pos:end="385:24"><expr pos:start="385:13" pos:end="385:23"><name pos:start="385:13" pos:end="385:21">multi_run</name><operator pos:start="385:22" pos:end="385:23">--</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="389:9" pos:end="389:54">/* line compare acts on the displayed lines */</comment>

        <if_stmt pos:start="391:9" pos:end="393:22"><if pos:start="391:9" pos:end="393:22">if <condition pos:start="391:12" pos:end="391:33">(<expr pos:start="391:13" pos:end="391:32"><name pos:start="391:13" pos:end="391:13">y</name> <operator pos:start="391:15" pos:end="391:16">==</operator> <name pos:start="391:18" pos:end="391:32"><name pos:start="391:18" pos:end="391:18">s</name><operator pos:start="391:19" pos:end="391:20">-&gt;</operator><name pos:start="391:21" pos:end="391:32">line_compare</name></name></expr>)</condition><block type="pseudo" pos:start="393:13" pos:end="393:22"><block_content pos:start="393:13" pos:end="393:22">

            <expr_stmt pos:start="393:13" pos:end="393:22"><expr pos:start="393:13" pos:end="393:21"><name pos:start="393:13" pos:end="393:17">addr1</name> <operator pos:start="393:19" pos:end="393:19">=</operator> <literal type="number" pos:start="393:21" pos:end="393:21">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="395:9" pos:end="395:22"><expr pos:start="395:9" pos:end="395:21"><name pos:start="395:9" pos:end="395:9">d</name> <operator pos:start="395:11" pos:end="395:12">+=</operator> <name pos:start="395:14" pos:end="395:21">linesize</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="399:5" pos:end="407:5"><if pos:start="399:5" pos:end="407:5">if <condition pos:start="399:8" pos:end="399:21">(<expr pos:start="399:9" pos:end="399:20"><name pos:start="399:9" pos:end="399:15">y_start</name> <operator pos:start="399:17" pos:end="399:18">&gt;=</operator> <literal type="number" pos:start="399:20" pos:end="399:20">0</literal></expr>)</condition> <block pos:start="399:23" pos:end="407:5">{<block_content pos:start="403:9" pos:end="405:44">

        <comment type="block" pos:start="401:9" pos:end="401:30">/* flush to display */</comment>

        <expr_stmt pos:start="403:9" pos:end="405:44"><expr pos:start="403:9" pos:end="405:43"><call pos:start="403:9" pos:end="405:43"><name pos:start="403:9" pos:end="403:18">dpy_update</name><argument_list pos:start="403:19" pos:end="405:43">(<argument pos:start="403:20" pos:end="403:24"><expr pos:start="403:20" pos:end="403:24"><name pos:start="403:20" pos:end="403:24"><name pos:start="403:20" pos:end="403:20">s</name><operator pos:start="403:21" pos:end="403:22">-&gt;</operator><name pos:start="403:23" pos:end="403:24">ds</name></name></expr></argument>, <argument pos:start="403:27" pos:end="403:27"><expr pos:start="403:27" pos:end="403:27"><literal type="number" pos:start="403:27" pos:end="403:27">0</literal></expr></argument>, <argument pos:start="403:30" pos:end="403:36"><expr pos:start="403:30" pos:end="403:36"><name pos:start="403:30" pos:end="403:36">y_start</name></expr></argument>,

                   <argument pos:start="405:20" pos:end="405:29"><expr pos:start="405:20" pos:end="405:29"><name pos:start="405:20" pos:end="405:29">disp_width</name></expr></argument>, <argument pos:start="405:32" pos:end="405:42"><expr pos:start="405:32" pos:end="405:42"><name pos:start="405:32" pos:end="405:32">y</name> <operator pos:start="405:34" pos:end="405:34">-</operator> <name pos:start="405:36" pos:end="405:42">y_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="409:5" pos:end="409:30">/* reset modified pages */</comment>

    <if_stmt pos:start="411:5" pos:end="417:5"><if pos:start="411:5" pos:end="417:5">if <condition pos:start="411:8" pos:end="411:23">(<expr pos:start="411:9" pos:end="411:22"><name pos:start="411:9" pos:end="411:16">page_max</name> <operator pos:start="411:18" pos:end="411:19">!=</operator> <operator pos:start="411:21" pos:end="411:21">-</operator><literal type="number" pos:start="411:22" pos:end="411:22">1</literal></expr>)</condition> <block pos:start="411:25" pos:end="417:5">{<block_content pos:start="413:9" pos:end="415:56">

        <expr_stmt pos:start="413:9" pos:end="415:56"><expr pos:start="413:9" pos:end="415:55"><call pos:start="413:9" pos:end="415:55"><name pos:start="413:9" pos:end="413:39">cpu_physical_memory_reset_dirty</name><argument_list pos:start="413:40" pos:end="415:55">(<argument pos:start="413:41" pos:end="413:48"><expr pos:start="413:41" pos:end="413:48"><name pos:start="413:41" pos:end="413:48">page_min</name></expr></argument>, <argument pos:start="413:51" pos:end="413:77"><expr pos:start="413:51" pos:end="413:77"><name pos:start="413:51" pos:end="413:58">page_max</name> <operator pos:start="413:60" pos:end="413:60">+</operator> <name pos:start="413:62" pos:end="413:77">TARGET_PAGE_SIZE</name></expr></argument>,

                                        <argument pos:start="415:41" pos:end="415:54"><expr pos:start="415:41" pos:end="415:54"><name pos:start="415:41" pos:end="415:54">VGA_DIRTY_FLAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="419:5" pos:end="419:64"><expr pos:start="419:5" pos:end="419:63"><call pos:start="419:5" pos:end="419:63"><name pos:start="419:5" pos:end="419:10">memset</name><argument_list pos:start="419:11" pos:end="419:63">(<argument pos:start="419:12" pos:end="419:33"><expr pos:start="419:12" pos:end="419:33"><name pos:start="419:12" pos:end="419:33"><name pos:start="419:12" pos:end="419:12">s</name><operator pos:start="419:13" pos:end="419:14">-&gt;</operator><name pos:start="419:15" pos:end="419:33">invalidated_y_table</name></name></expr></argument>, <argument pos:start="419:36" pos:end="419:36"><expr pos:start="419:36" pos:end="419:36"><literal type="number" pos:start="419:36" pos:end="419:36">0</literal></expr></argument>, <argument pos:start="419:39" pos:end="419:62"><expr pos:start="419:39" pos:end="419:62"><operator pos:start="419:39" pos:end="419:39">(</operator><operator pos:start="419:40" pos:end="419:40">(</operator><name pos:start="419:41" pos:end="419:46">height</name> <operator pos:start="419:48" pos:end="419:48">+</operator> <literal type="number" pos:start="419:50" pos:end="419:51">31</literal><operator pos:start="419:52" pos:end="419:52">)</operator> <operator pos:start="419:54" pos:end="419:55">&gt;&gt;</operator> <literal type="number" pos:start="419:57" pos:end="419:57">5</literal><operator pos:start="419:58" pos:end="419:58">)</operator> <operator pos:start="419:60" pos:end="419:60">*</operator> <literal type="number" pos:start="419:62" pos:end="419:62">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt></block_content></block></function>
</unit>
