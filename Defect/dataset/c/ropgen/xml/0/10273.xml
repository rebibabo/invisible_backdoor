<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10273.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">cpu_loop</name><parameter_list pos:start="1:14" pos:end="1:36">(<parameter pos:start="1:15" pos:end="1:35"><decl pos:start="1:15" pos:end="1:35"><type pos:start="1:15" pos:end="1:32"><name pos:start="1:15" pos:end="1:30">CPUOpenRISCState</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="169:1">{<block_content pos:start="5:5" pos:end="167:5">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:49">= <expr pos:start="5:20" pos:end="5:49"><call pos:start="5:20" pos:end="5:49"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:49">(<argument pos:start="5:24" pos:end="5:48"><expr pos:start="5:24" pos:end="5:48"><call pos:start="5:24" pos:end="5:48"><name pos:start="5:24" pos:end="5:43">openrisc_env_get_cpu</name><argument_list pos:start="5:44" pos:end="5:48">(<argument pos:start="5:45" pos:end="5:47"><expr pos:start="5:45" pos:end="5:47"><name pos:start="5:45" pos:end="5:47">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">trapnr</name></decl>, <decl pos:start="7:17" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:22">gdbsig</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="167:5">for <control pos:start="11:9" pos:end="11:12">(<init pos:start="11:10" pos:end="11:10">;</init><condition pos:start="11:11" pos:end="11:11">;</condition><incr/>)</control> <block pos:start="11:14" pos:end="167:5">{<block_content pos:start="13:9" pos:end="165:37">

        <expr_stmt pos:start="13:9" pos:end="13:27"><expr pos:start="13:9" pos:end="13:26"><call pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:22">cpu_exec_start</name><argument_list pos:start="13:23" pos:end="13:26">(<argument pos:start="13:24" pos:end="13:25"><expr pos:start="13:24" pos:end="13:25"><name pos:start="13:24" pos:end="13:25">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:39"><expr pos:start="15:9" pos:end="15:38"><name pos:start="15:9" pos:end="15:14">trapnr</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:38"><name pos:start="15:18" pos:end="15:34">cpu_openrisc_exec</name><argument_list pos:start="15:35" pos:end="15:38">(<argument pos:start="15:36" pos:end="15:37"><expr pos:start="15:36" pos:end="15:37"><name pos:start="15:36" pos:end="15:37">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:25"><expr pos:start="17:9" pos:end="17:24"><call pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:20">cpu_exec_end</name><argument_list pos:start="17:21" pos:end="17:24">(<argument pos:start="17:22" pos:end="17:23"><expr pos:start="17:22" pos:end="17:23"><name pos:start="17:22" pos:end="17:23">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:19"><expr pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:14">gdbsig</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>;</expr_stmt>



        <switch pos:start="23:9" pos:end="149:9">switch <condition pos:start="23:16" pos:end="23:23">(<expr pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:22">trapnr</name></expr>)</condition> <block pos:start="23:25" pos:end="149:9">{<block_content pos:start="25:9" pos:end="147:18">

        <case pos:start="25:9" pos:end="25:24">case <expr pos:start="25:14" pos:end="25:23"><name pos:start="25:14" pos:end="25:23">EXCP_RESET</name></expr>:</case>

            <expr_stmt pos:start="27:13" pos:end="27:68"><expr pos:start="27:13" pos:end="27:67"><call pos:start="27:13" pos:end="27:67"><name pos:start="27:13" pos:end="27:20">qemu_log</name><argument_list pos:start="27:21" pos:end="27:67">(<argument pos:start="27:22" pos:end="27:57"><expr pos:start="27:22" pos:end="27:57"><literal type="string" pos:start="27:22" pos:end="27:57">"\nReset request, exit, pc is %#x\n"</literal></expr></argument>, <argument pos:start="27:60" pos:end="27:66"><expr pos:start="27:60" pos:end="27:66"><name pos:start="27:60" pos:end="27:66"><name pos:start="27:60" pos:end="27:62">env</name><operator pos:start="27:63" pos:end="27:64">-&gt;</operator><name pos:start="27:65" pos:end="27:66">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:31"><expr pos:start="29:13" pos:end="29:30"><call pos:start="29:13" pos:end="29:30"><name pos:start="29:13" pos:end="29:16">exit</name><argument_list pos:start="29:17" pos:end="29:30">(<argument pos:start="29:18" pos:end="29:29"><expr pos:start="29:18" pos:end="29:29"><name pos:start="29:18" pos:end="29:29">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        <case pos:start="33:9" pos:end="33:25">case <expr pos:start="33:14" pos:end="33:24"><name pos:start="33:14" pos:end="33:24">EXCP_BUSERR</name></expr>:</case>

            <expr_stmt pos:start="35:13" pos:end="35:64"><expr pos:start="35:13" pos:end="35:63"><call pos:start="35:13" pos:end="35:63"><name pos:start="35:13" pos:end="35:20">qemu_log</name><argument_list pos:start="35:21" pos:end="35:63">(<argument pos:start="35:22" pos:end="35:53"><expr pos:start="35:22" pos:end="35:53"><literal type="string" pos:start="35:22" pos:end="35:53">"\nBus error, exit, pc is %#x\n"</literal></expr></argument>, <argument pos:start="35:56" pos:end="35:62"><expr pos:start="35:56" pos:end="35:62"><name pos:start="35:56" pos:end="35:62"><name pos:start="35:56" pos:end="35:58">env</name><operator pos:start="35:59" pos:end="35:60">-&gt;</operator><name pos:start="35:61" pos:end="35:62">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:35"><expr pos:start="37:13" pos:end="37:34"><name pos:start="37:13" pos:end="37:18">gdbsig</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:34">TARGET_SIGBUS</name></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        <case pos:start="41:9" pos:end="41:22">case <expr pos:start="41:14" pos:end="41:21"><name pos:start="41:14" pos:end="41:21">EXCP_DPF</name></expr>:</case>

        <case pos:start="43:9" pos:end="43:22">case <expr pos:start="43:14" pos:end="43:21"><name pos:start="43:14" pos:end="43:21">EXCP_IPF</name></expr>:</case>

            <expr_stmt pos:start="45:13" pos:end="45:51"><expr pos:start="45:13" pos:end="45:50"><call pos:start="45:13" pos:end="45:50"><name pos:start="45:13" pos:end="45:26">cpu_dump_state</name><argument_list pos:start="45:27" pos:end="45:50">(<argument pos:start="45:28" pos:end="45:29"><expr pos:start="45:28" pos:end="45:29"><name pos:start="45:28" pos:end="45:29">cs</name></expr></argument>, <argument pos:start="45:32" pos:end="45:37"><expr pos:start="45:32" pos:end="45:37"><name pos:start="45:32" pos:end="45:37">stderr</name></expr></argument>, <argument pos:start="45:40" pos:end="45:46"><expr pos:start="45:40" pos:end="45:46"><name pos:start="45:40" pos:end="45:46">fprintf</name></expr></argument>, <argument pos:start="45:49" pos:end="45:49"><expr pos:start="45:49" pos:end="45:49"><literal type="number" pos:start="45:49" pos:end="45:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:36"><expr pos:start="47:13" pos:end="47:35"><name pos:start="47:13" pos:end="47:18">gdbsig</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:35">TARGET_SIGSEGV</name></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        <case pos:start="51:9" pos:end="51:23">case <expr pos:start="51:14" pos:end="51:22"><name pos:start="51:14" pos:end="51:22">EXCP_TICK</name></expr>:</case>

            <expr_stmt pos:start="53:13" pos:end="53:67"><expr pos:start="53:13" pos:end="53:66"><call pos:start="53:13" pos:end="53:66"><name pos:start="53:13" pos:end="53:20">qemu_log</name><argument_list pos:start="53:21" pos:end="53:66">(<argument pos:start="53:22" pos:end="53:56"><expr pos:start="53:22" pos:end="53:56"><literal type="string" pos:start="53:22" pos:end="53:56">"\nTick time interrupt pc is %#x\n"</literal></expr></argument>, <argument pos:start="53:59" pos:end="53:65"><expr pos:start="53:59" pos:end="53:65"><name pos:start="53:59" pos:end="53:65"><name pos:start="53:59" pos:end="53:61">env</name><operator pos:start="53:62" pos:end="53:63">-&gt;</operator><name pos:start="53:64" pos:end="53:65">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>

        <case pos:start="57:9" pos:end="57:24">case <expr pos:start="57:14" pos:end="57:23"><name pos:start="57:14" pos:end="57:23">EXCP_ALIGN</name></expr>:</case>

            <expr_stmt pos:start="59:13" pos:end="59:57"><expr pos:start="59:13" pos:end="59:56"><call pos:start="59:13" pos:end="59:56"><name pos:start="59:13" pos:end="59:20">qemu_log</name><argument_list pos:start="59:21" pos:end="59:56">(<argument pos:start="59:22" pos:end="59:46"><expr pos:start="59:22" pos:end="59:46"><literal type="string" pos:start="59:22" pos:end="59:46">"\nAlignment pc is %#x\n"</literal></expr></argument>, <argument pos:start="59:49" pos:end="59:55"><expr pos:start="59:49" pos:end="59:55"><name pos:start="59:49" pos:end="59:55"><name pos:start="59:49" pos:end="59:51">env</name><operator pos:start="59:52" pos:end="59:53">-&gt;</operator><name pos:start="59:54" pos:end="59:55">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:35"><expr pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:18">gdbsig</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:34">TARGET_SIGBUS</name></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <case pos:start="65:9" pos:end="65:26">case <expr pos:start="65:14" pos:end="65:25"><name pos:start="65:14" pos:end="65:25">EXCP_ILLEGAL</name></expr>:</case>

            <expr_stmt pos:start="67:13" pos:end="67:66"><expr pos:start="67:13" pos:end="67:65"><call pos:start="67:13" pos:end="67:65"><name pos:start="67:13" pos:end="67:20">qemu_log</name><argument_list pos:start="67:21" pos:end="67:65">(<argument pos:start="67:22" pos:end="67:55"><expr pos:start="67:22" pos:end="67:55"><literal type="string" pos:start="67:22" pos:end="67:55">"\nIllegal instructionpc is %#x\n"</literal></expr></argument>, <argument pos:start="67:58" pos:end="67:64"><expr pos:start="67:58" pos:end="67:64"><name pos:start="67:58" pos:end="67:64"><name pos:start="67:58" pos:end="67:60">env</name><operator pos:start="67:61" pos:end="67:62">-&gt;</operator><name pos:start="67:63" pos:end="67:64">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:35"><expr pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:18">gdbsig</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <name pos:start="69:22" pos:end="69:34">TARGET_SIGILL</name></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        <case pos:start="73:9" pos:end="73:22">case <expr pos:start="73:14" pos:end="73:21"><name pos:start="73:14" pos:end="73:21">EXCP_INT</name></expr>:</case>

            <expr_stmt pos:start="75:13" pos:end="75:65"><expr pos:start="75:13" pos:end="75:64"><call pos:start="75:13" pos:end="75:64"><name pos:start="75:13" pos:end="75:20">qemu_log</name><argument_list pos:start="75:21" pos:end="75:64">(<argument pos:start="75:22" pos:end="75:54"><expr pos:start="75:22" pos:end="75:54"><literal type="string" pos:start="75:22" pos:end="75:54">"\nExternal interruptpc is %#x\n"</literal></expr></argument>, <argument pos:start="75:57" pos:end="75:63"><expr pos:start="75:57" pos:end="75:63"><name pos:start="75:57" pos:end="75:63"><name pos:start="75:57" pos:end="75:59">env</name><operator pos:start="75:60" pos:end="75:61">-&gt;</operator><name pos:start="75:62" pos:end="75:63">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="77:13" pos:end="77:18">break;</break>

        <case pos:start="79:9" pos:end="79:27">case <expr pos:start="79:14" pos:end="79:26"><name pos:start="79:14" pos:end="79:26">EXCP_DTLBMISS</name></expr>:</case>

        <case pos:start="81:9" pos:end="81:27">case <expr pos:start="81:14" pos:end="81:26"><name pos:start="81:14" pos:end="81:26">EXCP_ITLBMISS</name></expr>:</case>

            <expr_stmt pos:start="83:13" pos:end="83:37"><expr pos:start="83:13" pos:end="83:36"><call pos:start="83:13" pos:end="83:36"><name pos:start="83:13" pos:end="83:20">qemu_log</name><argument_list pos:start="83:21" pos:end="83:36">(<argument pos:start="83:22" pos:end="83:35"><expr pos:start="83:22" pos:end="83:35"><literal type="string" pos:start="83:22" pos:end="83:35">"\nTLB miss\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>

        <case pos:start="87:9" pos:end="87:24">case <expr pos:start="87:14" pos:end="87:23"><name pos:start="87:14" pos:end="87:23">EXCP_RANGE</name></expr>:</case>

            <expr_stmt pos:start="89:13" pos:end="89:34"><expr pos:start="89:13" pos:end="89:33"><call pos:start="89:13" pos:end="89:33"><name pos:start="89:13" pos:end="89:20">qemu_log</name><argument_list pos:start="89:21" pos:end="89:33">(<argument pos:start="89:22" pos:end="89:32"><expr pos:start="89:22" pos:end="89:32"><literal type="string" pos:start="89:22" pos:end="89:32">"\nRange\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:36"><expr pos:start="91:13" pos:end="91:35"><name pos:start="91:13" pos:end="91:18">gdbsig</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <name pos:start="91:22" pos:end="91:35">TARGET_SIGSEGV</name></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:26">case <expr pos:start="95:14" pos:end="95:25"><name pos:start="95:14" pos:end="95:25">EXCP_SYSCALL</name></expr>:</case>

            <expr_stmt pos:start="97:13" pos:end="97:25"><expr pos:start="97:13" pos:end="97:24"><name pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:15">env</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:19">pc</name></name> <operator pos:start="97:21" pos:end="97:22">+=</operator> <literal type="number" pos:start="97:24" pos:end="97:24">4</literal></expr>;</expr_stmt>   <comment type="block" pos:start="97:29" pos:end="97:40">/* 0xc00; */</comment>

            <expr_stmt pos:start="99:13" pos:end="113:57"><expr pos:start="99:13" pos:end="113:56"><name pos:start="99:13" pos:end="99:24"><name pos:start="99:13" pos:end="99:15">env</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:20">gpr</name><index pos:start="99:21" pos:end="99:24">[<expr pos:start="99:22" pos:end="99:23"><literal type="number" pos:start="99:22" pos:end="99:23">11</literal></expr>]</index></name> <operator pos:start="99:26" pos:end="99:26">=</operator> <call pos:start="99:28" pos:end="113:56"><name pos:start="99:28" pos:end="99:37">do_syscall</name><argument_list pos:start="99:38" pos:end="113:56">(<argument pos:start="99:39" pos:end="99:41"><expr pos:start="99:39" pos:end="99:41"><name pos:start="99:39" pos:end="99:41">env</name></expr></argument>,

                                      <argument pos:start="101:39" pos:end="101:50"><expr pos:start="101:39" pos:end="101:50"><name pos:start="101:39" pos:end="101:50"><name pos:start="101:39" pos:end="101:41">env</name><operator pos:start="101:42" pos:end="101:43">-&gt;</operator><name pos:start="101:44" pos:end="101:46">gpr</name><index pos:start="101:47" pos:end="101:50">[<expr pos:start="101:48" pos:end="101:49"><literal type="number" pos:start="101:48" pos:end="101:49">11</literal></expr>]</index></name></expr></argument>, <comment type="block" pos:start="101:53" pos:end="101:76">/* return value       */</comment>

                                      <argument pos:start="103:39" pos:end="103:49"><expr pos:start="103:39" pos:end="103:49"><name pos:start="103:39" pos:end="103:49"><name pos:start="103:39" pos:end="103:41">env</name><operator pos:start="103:42" pos:end="103:43">-&gt;</operator><name pos:start="103:44" pos:end="103:46">gpr</name><index pos:start="103:47" pos:end="103:49">[<expr pos:start="103:48" pos:end="103:48"><literal type="number" pos:start="103:48" pos:end="103:48">3</literal></expr>]</index></name></expr></argument>,  <comment type="block" pos:start="103:53" pos:end="103:76">/* r3 - r7 are params */</comment>

                                      <argument pos:start="105:39" pos:end="105:49"><expr pos:start="105:39" pos:end="105:49"><name pos:start="105:39" pos:end="105:49"><name pos:start="105:39" pos:end="105:41">env</name><operator pos:start="105:42" pos:end="105:43">-&gt;</operator><name pos:start="105:44" pos:end="105:46">gpr</name><index pos:start="105:47" pos:end="105:49">[<expr pos:start="105:48" pos:end="105:48"><literal type="number" pos:start="105:48" pos:end="105:48">4</literal></expr>]</index></name></expr></argument>,

                                      <argument pos:start="107:39" pos:end="107:49"><expr pos:start="107:39" pos:end="107:49"><name pos:start="107:39" pos:end="107:49"><name pos:start="107:39" pos:end="107:41">env</name><operator pos:start="107:42" pos:end="107:43">-&gt;</operator><name pos:start="107:44" pos:end="107:46">gpr</name><index pos:start="107:47" pos:end="107:49">[<expr pos:start="107:48" pos:end="107:48"><literal type="number" pos:start="107:48" pos:end="107:48">5</literal></expr>]</index></name></expr></argument>,

                                      <argument pos:start="109:39" pos:end="109:49"><expr pos:start="109:39" pos:end="109:49"><name pos:start="109:39" pos:end="109:49"><name pos:start="109:39" pos:end="109:41">env</name><operator pos:start="109:42" pos:end="109:43">-&gt;</operator><name pos:start="109:44" pos:end="109:46">gpr</name><index pos:start="109:47" pos:end="109:49">[<expr pos:start="109:48" pos:end="109:48"><literal type="number" pos:start="109:48" pos:end="109:48">6</literal></expr>]</index></name></expr></argument>,

                                      <argument pos:start="111:39" pos:end="111:49"><expr pos:start="111:39" pos:end="111:49"><name pos:start="111:39" pos:end="111:49"><name pos:start="111:39" pos:end="111:41">env</name><operator pos:start="111:42" pos:end="111:43">-&gt;</operator><name pos:start="111:44" pos:end="111:46">gpr</name><index pos:start="111:47" pos:end="111:49">[<expr pos:start="111:48" pos:end="111:48"><literal type="number" pos:start="111:48" pos:end="111:48">7</literal></expr>]</index></name></expr></argument>,

                                      <argument pos:start="113:39" pos:end="113:49"><expr pos:start="113:39" pos:end="113:49"><name pos:start="113:39" pos:end="113:49"><name pos:start="113:39" pos:end="113:41">env</name><operator pos:start="113:42" pos:end="113:43">-&gt;</operator><name pos:start="113:44" pos:end="113:46">gpr</name><index pos:start="113:47" pos:end="113:49">[<expr pos:start="113:48" pos:end="113:48"><literal type="number" pos:start="113:48" pos:end="113:48">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="113:52" pos:end="113:52"><expr pos:start="113:52" pos:end="113:52"><literal type="number" pos:start="113:52" pos:end="113:52">0</literal></expr></argument>, <argument pos:start="113:55" pos:end="113:55"><expr pos:start="113:55" pos:end="113:55"><literal type="number" pos:start="113:55" pos:end="113:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        <case pos:start="117:9" pos:end="117:22">case <expr pos:start="117:14" pos:end="117:21"><name pos:start="117:14" pos:end="117:21">EXCP_FPE</name></expr>:</case>

            <expr_stmt pos:start="119:13" pos:end="119:49"><expr pos:start="119:13" pos:end="119:48"><call pos:start="119:13" pos:end="119:48"><name pos:start="119:13" pos:end="119:20">qemu_log</name><argument_list pos:start="119:21" pos:end="119:48">(<argument pos:start="119:22" pos:end="119:47"><expr pos:start="119:22" pos:end="119:47"><literal type="string" pos:start="119:22" pos:end="119:47">"\nFloating point error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        <case pos:start="123:9" pos:end="123:23">case <expr pos:start="123:14" pos:end="123:22"><name pos:start="123:14" pos:end="123:22">EXCP_TRAP</name></expr>:</case>

            <expr_stmt pos:start="125:13" pos:end="125:33"><expr pos:start="125:13" pos:end="125:32"><call pos:start="125:13" pos:end="125:32"><name pos:start="125:13" pos:end="125:20">qemu_log</name><argument_list pos:start="125:21" pos:end="125:32">(<argument pos:start="125:22" pos:end="125:31"><expr pos:start="125:22" pos:end="125:31"><literal type="string" pos:start="125:22" pos:end="125:31">"\nTrap\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:36"><expr pos:start="127:13" pos:end="127:35"><name pos:start="127:13" pos:end="127:18">gdbsig</name> <operator pos:start="127:20" pos:end="127:20">=</operator> <name pos:start="127:22" pos:end="127:35">TARGET_SIGTRAP</name></expr>;</expr_stmt>

            <break pos:start="129:13" pos:end="129:18">break;</break>

        <case pos:start="131:9" pos:end="131:21">case <expr pos:start="131:14" pos:end="131:20"><name pos:start="131:14" pos:end="131:20">EXCP_NR</name></expr>:</case>

            <expr_stmt pos:start="133:13" pos:end="133:31"><expr pos:start="133:13" pos:end="133:30"><call pos:start="133:13" pos:end="133:30"><name pos:start="133:13" pos:end="133:20">qemu_log</name><argument_list pos:start="133:21" pos:end="133:30">(<argument pos:start="133:22" pos:end="133:29"><expr pos:start="133:22" pos:end="133:29"><literal type="string" pos:start="133:22" pos:end="133:29">"\nNR\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="135:13" pos:end="135:18">break;</break>

        <default pos:start="137:9" pos:end="137:16">default:</default>

            <expr_stmt pos:start="139:13" pos:end="141:29"><expr pos:start="139:13" pos:end="141:28"><call pos:start="139:13" pos:end="141:28"><name pos:start="139:13" pos:end="139:20">qemu_log</name><argument_list pos:start="139:21" pos:end="141:28">(<argument pos:start="139:22" pos:end="139:71"><expr pos:start="139:22" pos:end="139:71"><literal type="string" pos:start="139:22" pos:end="139:71">"\nqemu: unhandled CPU exception %#x - aborting\n"</literal></expr></argument>,

                     <argument pos:start="141:22" pos:end="141:27"><expr pos:start="141:22" pos:end="141:27"><name pos:start="141:22" pos:end="141:27">trapnr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:51"><expr pos:start="143:13" pos:end="143:50"><call pos:start="143:13" pos:end="143:50"><name pos:start="143:13" pos:end="143:26">cpu_dump_state</name><argument_list pos:start="143:27" pos:end="143:50">(<argument pos:start="143:28" pos:end="143:29"><expr pos:start="143:28" pos:end="143:29"><name pos:start="143:28" pos:end="143:29">cs</name></expr></argument>, <argument pos:start="143:32" pos:end="143:37"><expr pos:start="143:32" pos:end="143:37"><name pos:start="143:32" pos:end="143:37">stderr</name></expr></argument>, <argument pos:start="143:40" pos:end="143:46"><expr pos:start="143:40" pos:end="143:46"><name pos:start="143:40" pos:end="143:46">fprintf</name></expr></argument>, <argument pos:start="143:49" pos:end="143:49"><expr pos:start="143:49" pos:end="143:49"><literal type="number" pos:start="143:49" pos:end="143:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:35"><expr pos:start="145:13" pos:end="145:34"><name pos:start="145:13" pos:end="145:18">gdbsig</name> <operator pos:start="145:20" pos:end="145:20">=</operator> <name pos:start="145:22" pos:end="145:34">TARGET_SIGILL</name></expr>;</expr_stmt>

            <break pos:start="147:13" pos:end="147:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="151:9" pos:end="161:9"><if pos:start="151:9" pos:end="161:9">if <condition pos:start="151:12" pos:end="151:19">(<expr pos:start="151:13" pos:end="151:18"><name pos:start="151:13" pos:end="151:18">gdbsig</name></expr>)</condition> <block pos:start="151:21" pos:end="161:9">{<block_content pos:start="153:13" pos:end="159:13">

            <expr_stmt pos:start="153:13" pos:end="153:38"><expr pos:start="153:13" pos:end="153:37"><call pos:start="153:13" pos:end="153:37"><name pos:start="153:13" pos:end="153:25">gdb_handlesig</name><argument_list pos:start="153:26" pos:end="153:37">(<argument pos:start="153:27" pos:end="153:28"><expr pos:start="153:27" pos:end="153:28"><name pos:start="153:27" pos:end="153:28">cs</name></expr></argument>, <argument pos:start="153:31" pos:end="153:36"><expr pos:start="153:31" pos:end="153:36"><name pos:start="153:31" pos:end="153:36">gdbsig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="155:13" pos:end="159:13"><if pos:start="155:13" pos:end="159:13">if <condition pos:start="155:16" pos:end="155:41">(<expr pos:start="155:17" pos:end="155:40"><name pos:start="155:17" pos:end="155:22">gdbsig</name> <operator pos:start="155:24" pos:end="155:25">!=</operator> <name pos:start="155:27" pos:end="155:40">TARGET_SIGTRAP</name></expr>)</condition> <block pos:start="155:43" pos:end="159:13">{<block_content pos:start="157:17" pos:end="157:35">

                <expr_stmt pos:start="157:17" pos:end="157:35"><expr pos:start="157:17" pos:end="157:34"><call pos:start="157:17" pos:end="157:34"><name pos:start="157:17" pos:end="157:20">exit</name><argument_list pos:start="157:21" pos:end="157:34">(<argument pos:start="157:22" pos:end="157:33"><expr pos:start="157:22" pos:end="157:33"><name pos:start="157:22" pos:end="157:33">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="165:9" pos:end="165:37"><expr pos:start="165:9" pos:end="165:36"><call pos:start="165:9" pos:end="165:36"><name pos:start="165:9" pos:end="165:31">process_pending_signals</name><argument_list pos:start="165:32" pos:end="165:36">(<argument pos:start="165:33" pos:end="165:35"><expr pos:start="165:33" pos:end="165:35"><name pos:start="165:33" pos:end="165:35">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
