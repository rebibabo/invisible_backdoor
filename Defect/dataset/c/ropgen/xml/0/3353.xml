<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3353.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">CharDriverState</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:44">qmp_chardev_open_udp</name><parameter_list pos:start="1:45" pos:end="7:58">(<parameter pos:start="1:46" pos:end="1:59"><decl pos:start="1:46" pos:end="1:59"><type pos:start="1:46" pos:end="1:59"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:55">char</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:59">id</name></decl></parameter>,

                                             <parameter pos:start="3:46" pos:end="3:68"><decl pos:start="3:46" pos:end="3:68"><type pos:start="3:46" pos:end="3:68"><name pos:start="3:46" pos:end="3:59">ChardevBackend</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:68">backend</name></decl></parameter>,

                                             <parameter pos:start="5:46" pos:end="5:63"><decl pos:start="5:46" pos:end="5:63"><type pos:start="5:46" pos:end="5:63"><name pos:start="5:46" pos:end="5:58">ChardevReturn</name> <modifier pos:start="5:60" pos:end="5:60">*</modifier></type><name pos:start="5:61" pos:end="5:63">ret</name></decl></parameter>,

                                             <parameter pos:start="7:46" pos:end="7:57"><decl pos:start="7:46" pos:end="7:57"><type pos:start="7:46" pos:end="7:57"><name pos:start="7:46" pos:end="7:50">Error</name> <modifier pos:start="7:52" pos:end="7:52">*</modifier><modifier pos:start="7:53" pos:end="7:53">*</modifier></type><name pos:start="7:54" pos:end="7:57">errp</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="33:1">{<block_content pos:start="11:5" pos:end="31:49">

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">ChardevUdp</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:19">udp</name> <init pos:start="11:21" pos:end="11:36">= <expr pos:start="11:23" pos:end="11:36"><name pos:start="11:23" pos:end="11:36"><name pos:start="11:23" pos:end="11:29">backend</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:32">u</name><operator pos:start="11:33" pos:end="11:33">.</operator><name pos:start="11:34" pos:end="11:36">udp</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:54"><decl pos:start="13:5" pos:end="13:53"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">ChardevCommon</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:25">common</name> <init pos:start="13:27" pos:end="13:53">= <expr pos:start="13:29" pos:end="13:53"><call pos:start="13:29" pos:end="13:53"><name pos:start="13:29" pos:end="13:48">qapi_ChardevUdp_base</name><argument_list pos:start="13:49" pos:end="13:53">(<argument pos:start="13:50" pos:end="13:52"><expr pos:start="13:50" pos:end="13:52"><name pos:start="13:50" pos:end="13:52">udp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:54"><decl pos:start="15:5" pos:end="15:53"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:20">QIOChannelSocket</name> <modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:26">sioc</name> <init pos:start="15:28" pos:end="15:53">= <expr pos:start="15:30" pos:end="15:53"><call pos:start="15:30" pos:end="15:53"><name pos:start="15:30" pos:end="15:51">qio_channel_socket_new</name><argument_list pos:start="15:52" pos:end="15:53">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="29:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="23:48">(<expr pos:start="19:9" pos:end="23:47"><call pos:start="19:9" pos:end="23:43"><name pos:start="19:9" pos:end="19:37">qio_channel_socket_dgram_sync</name><argument_list pos:start="19:38" pos:end="23:43">(<argument pos:start="19:39" pos:end="19:42"><expr pos:start="19:39" pos:end="19:42"><name pos:start="19:39" pos:end="19:42">sioc</name></expr></argument>,

                                      <argument pos:start="21:39" pos:end="21:48"><expr pos:start="21:39" pos:end="21:48"><name pos:start="21:39" pos:end="21:48"><name pos:start="21:39" pos:end="21:41">udp</name><operator pos:start="21:42" pos:end="21:43">-&gt;</operator><name pos:start="21:44" pos:end="21:48">local</name></name></expr></argument>, <argument pos:start="21:51" pos:end="21:61"><expr pos:start="21:51" pos:end="21:61"><name pos:start="21:51" pos:end="21:61"><name pos:start="21:51" pos:end="21:53">udp</name><operator pos:start="21:54" pos:end="21:55">-&gt;</operator><name pos:start="21:56" pos:end="21:61">remote</name></name></expr></argument>,

                                      <argument pos:start="23:39" pos:end="23:42"><expr pos:start="23:39" pos:end="23:42"><name pos:start="23:39" pos:end="23:42">errp</name></expr></argument>)</argument_list></call> <operator pos:start="23:45" pos:end="23:45">&lt;</operator> <literal type="number" pos:start="23:47" pos:end="23:47">0</literal></expr>)</condition> <block pos:start="23:50" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:20">

        <expr_stmt pos:start="25:9" pos:end="25:35"><expr pos:start="25:9" pos:end="25:34"><call pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:20">object_unref</name><argument_list pos:start="25:21" pos:end="25:34">(<argument pos:start="25:22" pos:end="25:33"><expr pos:start="25:22" pos:end="25:33"><call pos:start="25:22" pos:end="25:33"><name pos:start="25:22" pos:end="25:27">OBJECT</name><argument_list pos:start="25:28" pos:end="25:33">(<argument pos:start="25:29" pos:end="25:32"><expr pos:start="25:29" pos:end="25:32"><name pos:start="25:29" pos:end="25:32">sioc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:20">return <expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="31:5" pos:end="31:49">return <expr pos:start="31:12" pos:end="31:48"><call pos:start="31:12" pos:end="31:48"><name pos:start="31:12" pos:end="31:28">qemu_chr_open_udp</name><argument_list pos:start="31:29" pos:end="31:48">(<argument pos:start="31:30" pos:end="31:33"><expr pos:start="31:30" pos:end="31:33"><name pos:start="31:30" pos:end="31:33">sioc</name></expr></argument>, <argument pos:start="31:36" pos:end="31:41"><expr pos:start="31:36" pos:end="31:41"><name pos:start="31:36" pos:end="31:41">common</name></expr></argument>, <argument pos:start="31:44" pos:end="31:47"><expr pos:start="31:44" pos:end="31:47"><name pos:start="31:44" pos:end="31:47">errp</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
