<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1268.c" pos:tabs="8"><function pos:start="1:1" pos:end="533:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">dca_subframe_header</name><parameter_list pos:start="1:31" pos:end="1:80">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:41">DCAContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:62">base_channel</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:79"><decl pos:start="1:65" pos:end="1:79"><type pos:start="1:65" pos:end="1:79"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:79">block_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="533:1">{<block_content pos:start="7:5" pos:end="531:13">

    <comment type="block" pos:start="5:5" pos:end="5:47">/* Primary audio coding side information */</comment>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">j</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">k</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:35"><if pos:start="11:5" pos:end="13:35">if <condition pos:start="11:8" pos:end="11:34">(<expr pos:start="11:9" pos:end="11:33"><call pos:start="11:9" pos:end="11:29"><name pos:start="11:9" pos:end="11:21">get_bits_left</name><argument_list pos:start="11:22" pos:end="11:29">(<argument pos:start="11:23" pos:end="11:28"><expr pos:start="11:23" pos:end="11:28"><operator pos:start="11:23" pos:end="11:23">&amp;</operator><name pos:start="11:24" pos:end="11:28"><name pos:start="11:24" pos:end="11:24">s</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="11:31" pos:end="11:31">&lt;</operator> <literal type="number" pos:start="11:33" pos:end="11:33">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:35"><block_content pos:start="13:9" pos:end="13:35">

        <return pos:start="13:9" pos:end="13:35">return <expr pos:start="13:16" pos:end="13:34"><name pos:start="13:16" pos:end="13:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:22">(<expr pos:start="17:9" pos:end="17:21"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:21">base_channel</name></expr>)</condition> <block pos:start="17:24" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:70">

        <expr_stmt pos:start="19:9" pos:end="19:74"><expr pos:start="19:9" pos:end="19:73"><name pos:start="19:9" pos:end="19:44"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:23">subsubframes</name><index pos:start="19:24" pos:end="19:44">[<expr pos:start="19:25" pos:end="19:43"><name pos:start="19:25" pos:end="19:43"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:43">current_subframe</name></name></expr>]</index></name>    <operator pos:start="19:49" pos:end="19:49">=</operator> <call pos:start="19:51" pos:end="19:69"><name pos:start="19:51" pos:end="19:58">get_bits</name><argument_list pos:start="19:59" pos:end="19:69">(<argument pos:start="19:60" pos:end="19:65"><expr pos:start="19:60" pos:end="19:65"><operator pos:start="19:60" pos:end="19:60">&amp;</operator><name pos:start="19:61" pos:end="19:65"><name pos:start="19:61" pos:end="19:61">s</name><operator pos:start="19:62" pos:end="19:63">-&gt;</operator><name pos:start="19:64" pos:end="19:65">gb</name></name></expr></argument>, <argument pos:start="19:68" pos:end="19:68"><expr pos:start="19:68" pos:end="19:68"><literal type="number" pos:start="19:68" pos:end="19:68">2</literal></expr></argument>)</argument_list></call> <operator pos:start="19:71" pos:end="19:71">+</operator> <literal type="number" pos:start="19:73" pos:end="19:73">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:70"><expr pos:start="21:9" pos:end="21:69"><name pos:start="21:9" pos:end="21:47"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:26">partial_samples</name><index pos:start="21:27" pos:end="21:47">[<expr pos:start="21:28" pos:end="21:46"><name pos:start="21:28" pos:end="21:46"><name pos:start="21:28" pos:end="21:28">s</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:46">current_subframe</name></name></expr>]</index></name> <operator pos:start="21:49" pos:end="21:49">=</operator> <call pos:start="21:51" pos:end="21:69"><name pos:start="21:51" pos:end="21:58">get_bits</name><argument_list pos:start="21:59" pos:end="21:69">(<argument pos:start="21:60" pos:end="21:65"><expr pos:start="21:60" pos:end="21:65"><operator pos:start="21:60" pos:end="21:60">&amp;</operator><name pos:start="21:61" pos:end="21:65"><name pos:start="21:61" pos:end="21:61">s</name><operator pos:start="21:62" pos:end="21:63">-&gt;</operator><name pos:start="21:64" pos:end="21:65">gb</name></name></expr></argument>, <argument pos:start="21:68" pos:end="21:68"><expr pos:start="21:68" pos:end="21:68"><literal type="number" pos:start="21:68" pos:end="21:68">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="27:5" pos:end="33:5">for <control pos:start="27:9" pos:end="27:53">(<init pos:start="27:10" pos:end="27:26"><expr pos:start="27:10" pos:end="27:25"><name pos:start="27:10" pos:end="27:10">j</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:25">base_channel</name></expr>;</init> <condition pos:start="27:28" pos:end="27:48"><expr pos:start="27:28" pos:end="27:47"><name pos:start="27:28" pos:end="27:28">j</name> <operator pos:start="27:30" pos:end="27:30">&lt;</operator> <name pos:start="27:32" pos:end="27:47"><name pos:start="27:32" pos:end="27:32">s</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:47">prim_channels</name></name></expr>;</condition> <incr pos:start="27:50" pos:end="27:52"><expr pos:start="27:50" pos:end="27:52"><name pos:start="27:50" pos:end="27:50">j</name><operator pos:start="27:51" pos:end="27:52">++</operator></expr></incr>)</control> <block pos:start="27:55" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:59">

        <for pos:start="29:9" pos:end="31:59">for <control pos:start="29:13" pos:end="29:52">(<init pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">k</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>;</init> <condition pos:start="29:21" pos:end="29:47"><expr pos:start="29:21" pos:end="29:46"><name pos:start="29:21" pos:end="29:21">k</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <name pos:start="29:25" pos:end="29:46"><name pos:start="29:25" pos:end="29:25">s</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:43">subband_activity</name><index pos:start="29:44" pos:end="29:46">[<expr pos:start="29:45" pos:end="29:45"><name pos:start="29:45" pos:end="29:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="29:49" pos:end="29:51"><expr pos:start="29:49" pos:end="29:51"><name pos:start="29:49" pos:end="29:49">k</name><operator pos:start="29:50" pos:end="29:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="31:13" pos:end="31:59"><block_content pos:start="31:13" pos:end="31:59">

            <expr_stmt pos:start="31:13" pos:end="31:59"><expr pos:start="31:13" pos:end="31:58"><name pos:start="31:13" pos:end="31:36"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:30">prediction_mode</name><index pos:start="31:31" pos:end="31:33">[<expr pos:start="31:32" pos:end="31:32"><name pos:start="31:32" pos:end="31:32">j</name></expr>]</index><index pos:start="31:34" pos:end="31:36">[<expr pos:start="31:35" pos:end="31:35"><name pos:start="31:35" pos:end="31:35">k</name></expr>]</index></name> <operator pos:start="31:38" pos:end="31:38">=</operator> <call pos:start="31:40" pos:end="31:58"><name pos:start="31:40" pos:end="31:47">get_bits</name><argument_list pos:start="31:48" pos:end="31:58">(<argument pos:start="31:49" pos:end="31:54"><expr pos:start="31:49" pos:end="31:54"><operator pos:start="31:49" pos:end="31:49">&amp;</operator><name pos:start="31:50" pos:end="31:54"><name pos:start="31:50" pos:end="31:50">s</name><operator pos:start="31:51" pos:end="31:52">-&gt;</operator><name pos:start="31:53" pos:end="31:54">gb</name></name></expr></argument>, <argument pos:start="31:57" pos:end="31:57"><expr pos:start="31:57" pos:end="31:57"><literal type="number" pos:start="31:57" pos:end="31:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="37:5" pos:end="37:33">/* Get prediction codebook */</comment>

    <for pos:start="39:5" pos:end="53:5">for <control pos:start="39:9" pos:end="39:53">(<init pos:start="39:10" pos:end="39:26"><expr pos:start="39:10" pos:end="39:25"><name pos:start="39:10" pos:end="39:10">j</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:25">base_channel</name></expr>;</init> <condition pos:start="39:28" pos:end="39:48"><expr pos:start="39:28" pos:end="39:47"><name pos:start="39:28" pos:end="39:28">j</name> <operator pos:start="39:30" pos:end="39:30">&lt;</operator> <name pos:start="39:32" pos:end="39:47"><name pos:start="39:32" pos:end="39:32">s</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:47">prim_channels</name></name></expr>;</condition> <incr pos:start="39:50" pos:end="39:52"><expr pos:start="39:50" pos:end="39:52"><name pos:start="39:50" pos:end="39:50">j</name><operator pos:start="39:51" pos:end="39:52">++</operator></expr></incr>)</control> <block pos:start="39:55" pos:end="53:5">{<block_content pos:start="41:9" pos:end="51:9">

        <for pos:start="41:9" pos:end="51:9">for <control pos:start="41:13" pos:end="41:52">(<init pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">k</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>;</init> <condition pos:start="41:21" pos:end="41:47"><expr pos:start="41:21" pos:end="41:46"><name pos:start="41:21" pos:end="41:21">k</name> <operator pos:start="41:23" pos:end="41:23">&lt;</operator> <name pos:start="41:25" pos:end="41:46"><name pos:start="41:25" pos:end="41:25">s</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:43">subband_activity</name><index pos:start="41:44" pos:end="41:46">[<expr pos:start="41:45" pos:end="41:45"><name pos:start="41:45" pos:end="41:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="41:49" pos:end="41:51"><expr pos:start="41:49" pos:end="41:51"><name pos:start="41:49" pos:end="41:49">k</name><operator pos:start="41:50" pos:end="41:51">++</operator></expr></incr>)</control> <block pos:start="41:54" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:13">

            <if_stmt pos:start="43:13" pos:end="49:13"><if pos:start="43:13" pos:end="49:13">if <condition pos:start="43:16" pos:end="43:45">(<expr pos:start="43:17" pos:end="43:44"><name pos:start="43:17" pos:end="43:40"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:34">prediction_mode</name><index pos:start="43:35" pos:end="43:37">[<expr pos:start="43:36" pos:end="43:36"><name pos:start="43:36" pos:end="43:36">j</name></expr>]</index><index pos:start="43:38" pos:end="43:40">[<expr pos:start="43:39" pos:end="43:39"><name pos:start="43:39" pos:end="43:39">k</name></expr>]</index></name> <operator pos:start="43:42" pos:end="43:42">&gt;</operator> <literal type="number" pos:start="43:44" pos:end="43:44">0</literal></expr>)</condition> <block pos:start="43:47" pos:end="49:13">{<block_content pos:start="47:17" pos:end="47:62">

                <comment type="block" pos:start="45:17" pos:end="45:57">/* (Prediction coefficient VQ address) */</comment>

                <expr_stmt pos:start="47:17" pos:end="47:62"><expr pos:start="47:17" pos:end="47:61"><name pos:start="47:17" pos:end="47:38"><name pos:start="47:17" pos:end="47:17">s</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:32">prediction_vq</name><index pos:start="47:33" pos:end="47:35">[<expr pos:start="47:34" pos:end="47:34"><name pos:start="47:34" pos:end="47:34">j</name></expr>]</index><index pos:start="47:36" pos:end="47:38">[<expr pos:start="47:37" pos:end="47:37"><name pos:start="47:37" pos:end="47:37">k</name></expr>]</index></name> <operator pos:start="47:40" pos:end="47:40">=</operator> <call pos:start="47:42" pos:end="47:61"><name pos:start="47:42" pos:end="47:49">get_bits</name><argument_list pos:start="47:50" pos:end="47:61">(<argument pos:start="47:51" pos:end="47:56"><expr pos:start="47:51" pos:end="47:56"><operator pos:start="47:51" pos:end="47:51">&amp;</operator><name pos:start="47:52" pos:end="47:56"><name pos:start="47:52" pos:end="47:52">s</name><operator pos:start="47:53" pos:end="47:54">-&gt;</operator><name pos:start="47:55" pos:end="47:56">gb</name></name></expr></argument>, <argument pos:start="47:59" pos:end="47:60"><expr pos:start="47:59" pos:end="47:60"><literal type="number" pos:start="47:59" pos:end="47:60">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="57:5" pos:end="57:30">/* Bit allocation index */</comment>

    <for pos:start="59:5" pos:end="101:5">for <control pos:start="59:9" pos:end="59:53">(<init pos:start="59:10" pos:end="59:26"><expr pos:start="59:10" pos:end="59:25"><name pos:start="59:10" pos:end="59:10">j</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <name pos:start="59:14" pos:end="59:25">base_channel</name></expr>;</init> <condition pos:start="59:28" pos:end="59:48"><expr pos:start="59:28" pos:end="59:47"><name pos:start="59:28" pos:end="59:28">j</name> <operator pos:start="59:30" pos:end="59:30">&lt;</operator> <name pos:start="59:32" pos:end="59:47"><name pos:start="59:32" pos:end="59:32">s</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:47">prim_channels</name></name></expr>;</condition> <incr pos:start="59:50" pos:end="59:52"><expr pos:start="59:50" pos:end="59:52"><name pos:start="59:50" pos:end="59:50">j</name><operator pos:start="59:51" pos:end="59:52">++</operator></expr></incr>)</control> <block pos:start="59:55" pos:end="101:5">{<block_content pos:start="61:9" pos:end="99:9">

        <for pos:start="61:9" pos:end="99:9">for <control pos:start="61:13" pos:end="61:52">(<init pos:start="61:14" pos:end="61:19"><expr pos:start="61:14" pos:end="61:18"><name pos:start="61:14" pos:end="61:14">k</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>;</init> <condition pos:start="61:21" pos:end="61:47"><expr pos:start="61:21" pos:end="61:46"><name pos:start="61:21" pos:end="61:21">k</name> <operator pos:start="61:23" pos:end="61:23">&lt;</operator> <name pos:start="61:25" pos:end="61:46"><name pos:start="61:25" pos:end="61:25">s</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:43">vq_start_subband</name><index pos:start="61:44" pos:end="61:46">[<expr pos:start="61:45" pos:end="61:45"><name pos:start="61:45" pos:end="61:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="61:49" pos:end="61:51"><expr pos:start="61:49" pos:end="61:51"><name pos:start="61:49" pos:end="61:49">k</name><operator pos:start="61:50" pos:end="61:51">++</operator></expr></incr>)</control> <block pos:start="61:54" pos:end="99:9">{<block_content pos:start="63:13" pos:end="97:13">

            <if_stmt pos:start="63:13" pos:end="85:13"><if pos:start="63:13" pos:end="65:56">if <condition pos:start="63:16" pos:end="63:44">(<expr pos:start="63:17" pos:end="63:43"><name pos:start="63:17" pos:end="63:38"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:35">bitalloc_huffman</name><index pos:start="63:36" pos:end="63:38">[<expr pos:start="63:37" pos:end="63:37"><name pos:start="63:37" pos:end="63:37">j</name></expr>]</index></name> <operator pos:start="63:40" pos:end="63:41">==</operator> <literal type="number" pos:start="63:43" pos:end="63:43">6</literal></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:56"><block_content pos:start="65:17" pos:end="65:56">

                <expr_stmt pos:start="65:17" pos:end="65:56"><expr pos:start="65:17" pos:end="65:55"><name pos:start="65:17" pos:end="65:33"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:27">bitalloc</name><index pos:start="65:28" pos:end="65:30">[<expr pos:start="65:29" pos:end="65:29"><name pos:start="65:29" pos:end="65:29">j</name></expr>]</index><index pos:start="65:31" pos:end="65:33">[<expr pos:start="65:32" pos:end="65:32"><name pos:start="65:32" pos:end="65:32">k</name></expr>]</index></name> <operator pos:start="65:35" pos:end="65:35">=</operator> <call pos:start="65:37" pos:end="65:55"><name pos:start="65:37" pos:end="65:44">get_bits</name><argument_list pos:start="65:45" pos:end="65:55">(<argument pos:start="65:46" pos:end="65:51"><expr pos:start="65:46" pos:end="65:51"><operator pos:start="65:46" pos:end="65:46">&amp;</operator><name pos:start="65:47" pos:end="65:51"><name pos:start="65:47" pos:end="65:47">s</name><operator pos:start="65:48" pos:end="65:49">-&gt;</operator><name pos:start="65:50" pos:end="65:51">gb</name></name></expr></argument>, <argument pos:start="65:54" pos:end="65:54"><expr pos:start="65:54" pos:end="65:54"><literal type="number" pos:start="65:54" pos:end="65:54">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="67:13" pos:end="69:56">else if <condition pos:start="67:21" pos:end="67:49">(<expr pos:start="67:22" pos:end="67:48"><name pos:start="67:22" pos:end="67:43"><name pos:start="67:22" pos:end="67:22">s</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:40">bitalloc_huffman</name><index pos:start="67:41" pos:end="67:43">[<expr pos:start="67:42" pos:end="67:42"><name pos:start="67:42" pos:end="67:42">j</name></expr>]</index></name> <operator pos:start="67:45" pos:end="67:46">==</operator> <literal type="number" pos:start="67:48" pos:end="67:48">5</literal></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:56"><block_content pos:start="69:17" pos:end="69:56">

                <expr_stmt pos:start="69:17" pos:end="69:56"><expr pos:start="69:17" pos:end="69:55"><name pos:start="69:17" pos:end="69:33"><name pos:start="69:17" pos:end="69:17">s</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:27">bitalloc</name><index pos:start="69:28" pos:end="69:30">[<expr pos:start="69:29" pos:end="69:29"><name pos:start="69:29" pos:end="69:29">j</name></expr>]</index><index pos:start="69:31" pos:end="69:33">[<expr pos:start="69:32" pos:end="69:32"><name pos:start="69:32" pos:end="69:32">k</name></expr>]</index></name> <operator pos:start="69:35" pos:end="69:35">=</operator> <call pos:start="69:37" pos:end="69:55"><name pos:start="69:37" pos:end="69:44">get_bits</name><argument_list pos:start="69:45" pos:end="69:55">(<argument pos:start="69:46" pos:end="69:51"><expr pos:start="69:46" pos:end="69:51"><operator pos:start="69:46" pos:end="69:46">&amp;</operator><name pos:start="69:47" pos:end="69:51"><name pos:start="69:47" pos:end="69:47">s</name><operator pos:start="69:48" pos:end="69:49">-&gt;</operator><name pos:start="69:50" pos:end="69:51">gb</name></name></expr></argument>, <argument pos:start="69:54" pos:end="69:54"><expr pos:start="69:54" pos:end="69:54"><literal type="number" pos:start="69:54" pos:end="69:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="71:13" pos:end="79:13">else if <condition pos:start="71:21" pos:end="71:49">(<expr pos:start="71:22" pos:end="71:48"><name pos:start="71:22" pos:end="71:43"><name pos:start="71:22" pos:end="71:22">s</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:40">bitalloc_huffman</name><index pos:start="71:41" pos:end="71:43">[<expr pos:start="71:42" pos:end="71:42"><name pos:start="71:42" pos:end="71:42">j</name></expr>]</index></name> <operator pos:start="71:45" pos:end="71:46">==</operator> <literal type="number" pos:start="71:48" pos:end="71:48">7</literal></expr>)</condition> <block pos:start="71:51" pos:end="79:13">{<block_content pos:start="73:17" pos:end="77:43">

                <expr_stmt pos:start="73:17" pos:end="75:57"><expr pos:start="73:17" pos:end="75:56"><call pos:start="73:17" pos:end="75:56"><name pos:start="73:17" pos:end="73:22">av_log</name><argument_list pos:start="73:23" pos:end="75:56">(<argument pos:start="73:24" pos:end="73:31"><expr pos:start="73:24" pos:end="73:31"><name pos:start="73:24" pos:end="73:31"><name pos:start="73:24" pos:end="73:24">s</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:31">avctx</name></name></expr></argument>, <argument pos:start="73:34" pos:end="73:45"><expr pos:start="73:34" pos:end="73:45"><name pos:start="73:34" pos:end="73:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="75:24" pos:end="75:55"><expr pos:start="75:24" pos:end="75:55"><literal type="string" pos:start="75:24" pos:end="75:55">"Invalid bit allocation index\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="77:17" pos:end="77:43">return <expr pos:start="77:24" pos:end="77:42"><name pos:start="77:24" pos:end="77:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if> <else pos:start="79:15" pos:end="85:13">else <block pos:start="79:20" pos:end="85:13">{<block_content pos:start="81:17" pos:end="83:86">

                <expr_stmt pos:start="81:17" pos:end="83:86"><expr pos:start="81:17" pos:end="83:85"><name pos:start="81:17" pos:end="81:33"><name pos:start="81:17" pos:end="81:17">s</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:27">bitalloc</name><index pos:start="81:28" pos:end="81:30">[<expr pos:start="81:29" pos:end="81:29"><name pos:start="81:29" pos:end="81:29">j</name></expr>]</index><index pos:start="81:31" pos:end="81:33">[<expr pos:start="81:32" pos:end="81:32"><name pos:start="81:32" pos:end="81:32">k</name></expr>]</index></name> <operator pos:start="81:35" pos:end="81:35">=</operator>

                    <call pos:start="83:21" pos:end="83:85"><name pos:start="83:21" pos:end="83:32">get_bitalloc</name><argument_list pos:start="83:33" pos:end="83:85">(<argument pos:start="83:34" pos:end="83:39"><expr pos:start="83:34" pos:end="83:39"><operator pos:start="83:34" pos:end="83:34">&amp;</operator><name pos:start="83:35" pos:end="83:39"><name pos:start="83:35" pos:end="83:35">s</name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:39">gb</name></name></expr></argument>, <argument pos:start="83:42" pos:end="83:60"><expr pos:start="83:42" pos:end="83:60"><operator pos:start="83:42" pos:end="83:42">&amp;</operator><name pos:start="83:43" pos:end="83:60">dca_bitalloc_index</name></expr></argument>, <argument pos:start="83:63" pos:end="83:84"><expr pos:start="83:63" pos:end="83:84"><name pos:start="83:63" pos:end="83:84"><name pos:start="83:63" pos:end="83:63">s</name><operator pos:start="83:64" pos:end="83:65">-&gt;</operator><name pos:start="83:66" pos:end="83:81">bitalloc_huffman</name><index pos:start="83:82" pos:end="83:84">[<expr pos:start="83:83" pos:end="83:83"><name pos:start="83:83" pos:end="83:83">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="89:13" pos:end="97:13"><if pos:start="89:13" pos:end="97:13">if <condition pos:start="89:16" pos:end="89:39">(<expr pos:start="89:17" pos:end="89:38"><name pos:start="89:17" pos:end="89:33"><name pos:start="89:17" pos:end="89:17">s</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:27">bitalloc</name><index pos:start="89:28" pos:end="89:30">[<expr pos:start="89:29" pos:end="89:29"><name pos:start="89:29" pos:end="89:29">j</name></expr>]</index><index pos:start="89:31" pos:end="89:33">[<expr pos:start="89:32" pos:end="89:32"><name pos:start="89:32" pos:end="89:32">k</name></expr>]</index></name> <operator pos:start="89:35" pos:end="89:35">&gt;</operator> <literal type="number" pos:start="89:37" pos:end="89:38">26</literal></expr>)</condition> <block pos:start="89:41" pos:end="97:13">{<block_content pos:start="95:17" pos:end="95:43">

                <comment type="line" pos:start="91:17" pos:end="91:91">// av_log(s-&gt;avctx, AV_LOG_DEBUG, "bitalloc index [%i][%i] too big (%i)\n",</comment>

                <comment type="line" pos:start="93:17" pos:end="93:51">//        j, k, s-&gt;bitalloc[j][k]);</comment>

                <return pos:start="95:17" pos:end="95:43">return <expr pos:start="95:24" pos:end="95:42"><name pos:start="95:24" pos:end="95:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="105:5" pos:end="105:25">/* Transition mode */</comment>

    <for pos:start="107:5" pos:end="125:5">for <control pos:start="107:9" pos:end="107:53">(<init pos:start="107:10" pos:end="107:26"><expr pos:start="107:10" pos:end="107:25"><name pos:start="107:10" pos:end="107:10">j</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <name pos:start="107:14" pos:end="107:25">base_channel</name></expr>;</init> <condition pos:start="107:28" pos:end="107:48"><expr pos:start="107:28" pos:end="107:47"><name pos:start="107:28" pos:end="107:28">j</name> <operator pos:start="107:30" pos:end="107:30">&lt;</operator> <name pos:start="107:32" pos:end="107:47"><name pos:start="107:32" pos:end="107:32">s</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:47">prim_channels</name></name></expr>;</condition> <incr pos:start="107:50" pos:end="107:52"><expr pos:start="107:50" pos:end="107:52"><name pos:start="107:50" pos:end="107:50">j</name><operator pos:start="107:51" pos:end="107:52">++</operator></expr></incr>)</control> <block pos:start="107:55" pos:end="125:5">{<block_content pos:start="109:9" pos:end="123:9">

        <for pos:start="109:9" pos:end="123:9">for <control pos:start="109:13" pos:end="109:52">(<init pos:start="109:14" pos:end="109:19"><expr pos:start="109:14" pos:end="109:18"><name pos:start="109:14" pos:end="109:14">k</name> <operator pos:start="109:16" pos:end="109:16">=</operator> <literal type="number" pos:start="109:18" pos:end="109:18">0</literal></expr>;</init> <condition pos:start="109:21" pos:end="109:47"><expr pos:start="109:21" pos:end="109:46"><name pos:start="109:21" pos:end="109:21">k</name> <operator pos:start="109:23" pos:end="109:23">&lt;</operator> <name pos:start="109:25" pos:end="109:46"><name pos:start="109:25" pos:end="109:25">s</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:43">subband_activity</name><index pos:start="109:44" pos:end="109:46">[<expr pos:start="109:45" pos:end="109:45"><name pos:start="109:45" pos:end="109:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="109:49" pos:end="109:51"><expr pos:start="109:49" pos:end="109:51"><name pos:start="109:49" pos:end="109:49">k</name><operator pos:start="109:50" pos:end="109:51">++</operator></expr></incr>)</control> <block pos:start="109:54" pos:end="123:9">{<block_content pos:start="111:13" pos:end="121:13">

            <expr_stmt pos:start="111:13" pos:end="111:41"><expr pos:start="111:13" pos:end="111:40"><name pos:start="111:13" pos:end="111:36"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:30">transition_mode</name><index pos:start="111:31" pos:end="111:33">[<expr pos:start="111:32" pos:end="111:32"><name pos:start="111:32" pos:end="111:32">j</name></expr>]</index><index pos:start="111:34" pos:end="111:36">[<expr pos:start="111:35" pos:end="111:35"><name pos:start="111:35" pos:end="111:35">k</name></expr>]</index></name> <operator pos:start="111:38" pos:end="111:38">=</operator> <literal type="number" pos:start="111:40" pos:end="111:40">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="113:13" pos:end="121:13"><if pos:start="113:13" pos:end="121:13">if <condition pos:start="113:16" pos:end="115:68">(<expr pos:start="113:17" pos:end="115:67"><name pos:start="113:17" pos:end="113:52"><name pos:start="113:17" pos:end="113:17">s</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:31">subsubframes</name><index pos:start="113:32" pos:end="113:52">[<expr pos:start="113:33" pos:end="113:51"><name pos:start="113:33" pos:end="113:51"><name pos:start="113:33" pos:end="113:33">s</name><operator pos:start="113:34" pos:end="113:35">-&gt;</operator><name pos:start="113:36" pos:end="113:51">current_subframe</name></name></expr>]</index></name> <operator pos:start="113:54" pos:end="113:54">&gt;</operator> <literal type="number" pos:start="113:56" pos:end="113:56">1</literal> <operator pos:start="113:58" pos:end="113:59">&amp;&amp;</operator>

                <name pos:start="115:17" pos:end="115:65"><name pos:start="115:17" pos:end="115:17">k</name> <argument_list type="generic" pos:start="115:19" pos:end="115:65">&lt; <argument pos:start="115:21" pos:end="115:63"><expr pos:start="115:21" pos:end="115:63"><name pos:start="115:21" pos:end="115:42"><name pos:start="115:21" pos:end="115:21">s</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:39">vq_start_subband</name><index pos:start="115:40" pos:end="115:42">[<expr pos:start="115:41" pos:end="115:41"><name pos:start="115:41" pos:end="115:41">j</name></expr>]</index></name> <operator pos:start="115:44" pos:end="115:45">&amp;&amp;</operator> <name pos:start="115:47" pos:end="115:63"><name pos:start="115:47" pos:end="115:47">s</name><operator pos:start="115:48" pos:end="115:49">-&gt;</operator><name pos:start="115:50" pos:end="115:57">bitalloc</name><index pos:start="115:58" pos:end="115:60">[<expr pos:start="115:59" pos:end="115:59"><name pos:start="115:59" pos:end="115:59">j</name></expr>]</index><index pos:start="115:61" pos:end="115:63">[<expr pos:start="115:62" pos:end="115:62"><name pos:start="115:62" pos:end="115:62">k</name></expr>]</index></name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="115:67" pos:end="115:67">0</literal></expr>)</condition> <block pos:start="115:70" pos:end="121:13">{<block_content pos:start="117:17" pos:end="119:78">

                <expr_stmt pos:start="117:17" pos:end="119:78"><expr pos:start="117:17" pos:end="119:77"><name pos:start="117:17" pos:end="117:40"><name pos:start="117:17" pos:end="117:17">s</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:34">transition_mode</name><index pos:start="117:35" pos:end="117:37">[<expr pos:start="117:36" pos:end="117:36"><name pos:start="117:36" pos:end="117:36">j</name></expr>]</index><index pos:start="117:38" pos:end="117:40">[<expr pos:start="117:39" pos:end="117:39"><name pos:start="117:39" pos:end="117:39">k</name></expr>]</index></name> <operator pos:start="117:42" pos:end="117:42">=</operator>

                    <call pos:start="119:21" pos:end="119:77"><name pos:start="119:21" pos:end="119:32">get_bitalloc</name><argument_list pos:start="119:33" pos:end="119:77">(<argument pos:start="119:34" pos:end="119:39"><expr pos:start="119:34" pos:end="119:39"><operator pos:start="119:34" pos:end="119:34">&amp;</operator><name pos:start="119:35" pos:end="119:39"><name pos:start="119:35" pos:end="119:35">s</name><operator pos:start="119:36" pos:end="119:37">-&gt;</operator><name pos:start="119:38" pos:end="119:39">gb</name></name></expr></argument>, <argument pos:start="119:42" pos:end="119:51"><expr pos:start="119:42" pos:end="119:51"><operator pos:start="119:42" pos:end="119:42">&amp;</operator><name pos:start="119:43" pos:end="119:51">dca_tmode</name></expr></argument>, <argument pos:start="119:54" pos:end="119:76"><expr pos:start="119:54" pos:end="119:76"><name pos:start="119:54" pos:end="119:76"><name pos:start="119:54" pos:end="119:54">s</name><operator pos:start="119:55" pos:end="119:56">-&gt;</operator><name pos:start="119:57" pos:end="119:73">transient_huffman</name><index pos:start="119:74" pos:end="119:76">[<expr pos:start="119:75" pos:end="119:75"><name pos:start="119:75" pos:end="119:75">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="129:5" pos:end="131:35"><if pos:start="129:5" pos:end="131:35">if <condition pos:start="129:8" pos:end="129:34">(<expr pos:start="129:9" pos:end="129:33"><call pos:start="129:9" pos:end="129:29"><name pos:start="129:9" pos:end="129:21">get_bits_left</name><argument_list pos:start="129:22" pos:end="129:29">(<argument pos:start="129:23" pos:end="129:28"><expr pos:start="129:23" pos:end="129:28"><operator pos:start="129:23" pos:end="129:23">&amp;</operator><name pos:start="129:24" pos:end="129:28"><name pos:start="129:24" pos:end="129:24">s</name><operator pos:start="129:25" pos:end="129:26">-&gt;</operator><name pos:start="129:27" pos:end="129:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="129:31" pos:end="129:31">&lt;</operator> <literal type="number" pos:start="129:33" pos:end="129:33">0</literal></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:35"><block_content pos:start="131:9" pos:end="131:35">

        <return pos:start="131:9" pos:end="131:35">return <expr pos:start="131:16" pos:end="131:34"><name pos:start="131:16" pos:end="131:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="135:5" pos:end="189:5">for <control pos:start="135:9" pos:end="135:53">(<init pos:start="135:10" pos:end="135:26"><expr pos:start="135:10" pos:end="135:25"><name pos:start="135:10" pos:end="135:10">j</name> <operator pos:start="135:12" pos:end="135:12">=</operator> <name pos:start="135:14" pos:end="135:25">base_channel</name></expr>;</init> <condition pos:start="135:28" pos:end="135:48"><expr pos:start="135:28" pos:end="135:47"><name pos:start="135:28" pos:end="135:28">j</name> <operator pos:start="135:30" pos:end="135:30">&lt;</operator> <name pos:start="135:32" pos:end="135:47"><name pos:start="135:32" pos:end="135:32">s</name><operator pos:start="135:33" pos:end="135:34">-&gt;</operator><name pos:start="135:35" pos:end="135:47">prim_channels</name></name></expr>;</condition> <incr pos:start="135:50" pos:end="135:52"><expr pos:start="135:50" pos:end="135:52"><name pos:start="135:50" pos:end="135:50">j</name><operator pos:start="135:51" pos:end="135:52">++</operator></expr></incr>)</control> <block pos:start="135:55" pos:end="189:5">{<block_content pos:start="137:9" pos:end="187:9">

        <decl_stmt pos:start="137:9" pos:end="137:36"><decl pos:start="137:9" pos:end="137:35"><type pos:start="137:9" pos:end="137:24"><specifier pos:start="137:9" pos:end="137:13">const</specifier> <name pos:start="137:15" pos:end="137:22">uint32_t</name> <modifier pos:start="137:24" pos:end="137:24">*</modifier></type><name pos:start="137:25" pos:end="137:35">scale_table</name></decl>;</decl_stmt>

        <decl_stmt pos:start="139:9" pos:end="139:22"><decl pos:start="139:9" pos:end="139:21"><type pos:start="139:9" pos:end="139:11"><name pos:start="139:9" pos:end="139:11">int</name></type> <name pos:start="139:13" pos:end="139:21">scale_sum</name></decl>;</decl_stmt>



        <expr_stmt pos:start="143:9" pos:end="145:78"><expr pos:start="143:9" pos:end="145:77"><call pos:start="143:9" pos:end="145:77"><name pos:start="143:9" pos:end="143:14">memset</name><argument_list pos:start="143:15" pos:end="145:77">(<argument pos:start="143:16" pos:end="143:33"><expr pos:start="143:16" pos:end="143:33"><name pos:start="143:16" pos:end="143:33"><name pos:start="143:16" pos:end="143:16">s</name><operator pos:start="143:17" pos:end="143:18">-&gt;</operator><name pos:start="143:19" pos:end="143:30">scale_factor</name><index pos:start="143:31" pos:end="143:33">[<expr pos:start="143:32" pos:end="143:32"><name pos:start="143:32" pos:end="143:32">j</name></expr>]</index></name></expr></argument>, <argument pos:start="143:36" pos:end="143:36"><expr pos:start="143:36" pos:end="143:36"><literal type="number" pos:start="143:36" pos:end="143:36">0</literal></expr></argument>,

               <argument pos:start="145:16" pos:end="145:76"><expr pos:start="145:16" pos:end="145:76"><name pos:start="145:16" pos:end="145:37"><name pos:start="145:16" pos:end="145:16">s</name><operator pos:start="145:17" pos:end="145:18">-&gt;</operator><name pos:start="145:19" pos:end="145:34">subband_activity</name><index pos:start="145:35" pos:end="145:37">[<expr pos:start="145:36" pos:end="145:36"><name pos:start="145:36" pos:end="145:36">j</name></expr>]</index></name> <operator pos:start="145:39" pos:end="145:39">*</operator> <sizeof pos:start="145:41" pos:end="145:72">sizeof<argument_list pos:start="145:47" pos:end="145:72">(<argument pos:start="145:48" pos:end="145:71"><expr pos:start="145:48" pos:end="145:71"><name pos:start="145:48" pos:end="145:71"><name pos:start="145:48" pos:end="145:48">s</name><operator pos:start="145:49" pos:end="145:50">-&gt;</operator><name pos:start="145:51" pos:end="145:62">scale_factor</name><index pos:start="145:63" pos:end="145:65">[<expr pos:start="145:64" pos:end="145:64"><literal type="number" pos:start="145:64" pos:end="145:64">0</literal></expr>]</index><index pos:start="145:66" pos:end="145:68">[<expr pos:start="145:67" pos:end="145:67"><literal type="number" pos:start="145:67" pos:end="145:67">0</literal></expr>]</index><index pos:start="145:69" pos:end="145:71">[<expr pos:start="145:70" pos:end="145:70"><literal type="number" pos:start="145:70" pos:end="145:70">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="145:74" pos:end="145:74">*</operator> <literal type="number" pos:start="145:76" pos:end="145:76">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="149:9" pos:end="155:46"><if pos:start="149:9" pos:end="151:46">if <condition pos:start="149:12" pos:end="149:43">(<expr pos:start="149:13" pos:end="149:42"><name pos:start="149:13" pos:end="149:37"><name pos:start="149:13" pos:end="149:13">s</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:34">scalefactor_huffman</name><index pos:start="149:35" pos:end="149:37">[<expr pos:start="149:36" pos:end="149:36"><name pos:start="149:36" pos:end="149:36">j</name></expr>]</index></name> <operator pos:start="149:39" pos:end="149:40">==</operator> <literal type="number" pos:start="149:42" pos:end="149:42">6</literal></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:46"><block_content pos:start="151:13" pos:end="151:46">

            <expr_stmt pos:start="151:13" pos:end="151:46"><expr pos:start="151:13" pos:end="151:45"><name pos:start="151:13" pos:end="151:23">scale_table</name> <operator pos:start="151:25" pos:end="151:25">=</operator> <name pos:start="151:27" pos:end="151:45">scale_factor_quant7</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="153:9" pos:end="155:46">else<block type="pseudo" pos:start="155:13" pos:end="155:46"><block_content pos:start="155:13" pos:end="155:46">

            <expr_stmt pos:start="155:13" pos:end="155:46"><expr pos:start="155:13" pos:end="155:45"><name pos:start="155:13" pos:end="155:23">scale_table</name> <operator pos:start="155:25" pos:end="155:25">=</operator> <name pos:start="155:27" pos:end="155:45">scale_factor_quant6</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <comment type="block" pos:start="159:9" pos:end="159:64">/* When huffman coded, only the difference is encoded */</comment>

        <expr_stmt pos:start="161:9" pos:end="161:22"><expr pos:start="161:9" pos:end="161:21"><name pos:start="161:9" pos:end="161:17">scale_sum</name> <operator pos:start="161:19" pos:end="161:19">=</operator> <literal type="number" pos:start="161:21" pos:end="161:21">0</literal></expr>;</expr_stmt>



        <for pos:start="165:9" pos:end="187:9">for <control pos:start="165:13" pos:end="165:52">(<init pos:start="165:14" pos:end="165:19"><expr pos:start="165:14" pos:end="165:18"><name pos:start="165:14" pos:end="165:14">k</name> <operator pos:start="165:16" pos:end="165:16">=</operator> <literal type="number" pos:start="165:18" pos:end="165:18">0</literal></expr>;</init> <condition pos:start="165:21" pos:end="165:47"><expr pos:start="165:21" pos:end="165:46"><name pos:start="165:21" pos:end="165:21">k</name> <operator pos:start="165:23" pos:end="165:23">&lt;</operator> <name pos:start="165:25" pos:end="165:46"><name pos:start="165:25" pos:end="165:25">s</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:43">subband_activity</name><index pos:start="165:44" pos:end="165:46">[<expr pos:start="165:45" pos:end="165:45"><name pos:start="165:45" pos:end="165:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="165:49" pos:end="165:51"><expr pos:start="165:49" pos:end="165:51"><name pos:start="165:49" pos:end="165:49">k</name><operator pos:start="165:50" pos:end="165:51">++</operator></expr></incr>)</control> <block pos:start="165:54" pos:end="187:9">{<block_content pos:start="167:13" pos:end="185:13">

            <if_stmt pos:start="167:13" pos:end="173:13"><if pos:start="167:13" pos:end="173:13">if <condition pos:start="167:16" pos:end="167:69">(<expr pos:start="167:17" pos:end="167:68"><name pos:start="167:17" pos:end="167:17">k</name> <operator pos:start="167:19" pos:end="167:20">&gt;=</operator> <name pos:start="167:22" pos:end="167:43"><name pos:start="167:22" pos:end="167:22">s</name><operator pos:start="167:23" pos:end="167:24">-&gt;</operator><name pos:start="167:25" pos:end="167:40">vq_start_subband</name><index pos:start="167:41" pos:end="167:43">[<expr pos:start="167:42" pos:end="167:42"><name pos:start="167:42" pos:end="167:42">j</name></expr>]</index></name> <operator pos:start="167:45" pos:end="167:46">||</operator> <name pos:start="167:48" pos:end="167:64"><name pos:start="167:48" pos:end="167:48">s</name><operator pos:start="167:49" pos:end="167:50">-&gt;</operator><name pos:start="167:51" pos:end="167:58">bitalloc</name><index pos:start="167:59" pos:end="167:61">[<expr pos:start="167:60" pos:end="167:60"><name pos:start="167:60" pos:end="167:60">j</name></expr>]</index><index pos:start="167:62" pos:end="167:64">[<expr pos:start="167:63" pos:end="167:63"><name pos:start="167:63" pos:end="167:63">k</name></expr>]</index></name> <operator pos:start="167:66" pos:end="167:66">&gt;</operator> <literal type="number" pos:start="167:68" pos:end="167:68">0</literal></expr>)</condition> <block pos:start="167:71" pos:end="173:13">{<block_content pos:start="169:17" pos:end="171:66">

                <expr_stmt pos:start="169:17" pos:end="169:84"><expr pos:start="169:17" pos:end="169:83"><name pos:start="169:17" pos:end="169:25">scale_sum</name> <operator pos:start="169:27" pos:end="169:27">=</operator> <call pos:start="169:29" pos:end="169:83"><name pos:start="169:29" pos:end="169:37">get_scale</name><argument_list pos:start="169:38" pos:end="169:83">(<argument pos:start="169:39" pos:end="169:44"><expr pos:start="169:39" pos:end="169:44"><operator pos:start="169:39" pos:end="169:39">&amp;</operator><name pos:start="169:40" pos:end="169:44"><name pos:start="169:40" pos:end="169:40">s</name><operator pos:start="169:41" pos:end="169:42">-&gt;</operator><name pos:start="169:43" pos:end="169:44">gb</name></name></expr></argument>, <argument pos:start="169:47" pos:end="169:71"><expr pos:start="169:47" pos:end="169:71"><name pos:start="169:47" pos:end="169:71"><name pos:start="169:47" pos:end="169:47">s</name><operator pos:start="169:48" pos:end="169:49">-&gt;</operator><name pos:start="169:50" pos:end="169:68">scalefactor_huffman</name><index pos:start="169:69" pos:end="169:71">[<expr pos:start="169:70" pos:end="169:70"><name pos:start="169:70" pos:end="169:70">j</name></expr>]</index></name></expr></argument>, <argument pos:start="169:74" pos:end="169:82"><expr pos:start="169:74" pos:end="169:82"><name pos:start="169:74" pos:end="169:82">scale_sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:66"><expr pos:start="171:17" pos:end="171:65"><name pos:start="171:17" pos:end="171:40"><name pos:start="171:17" pos:end="171:17">s</name><operator pos:start="171:18" pos:end="171:19">-&gt;</operator><name pos:start="171:20" pos:end="171:31">scale_factor</name><index pos:start="171:32" pos:end="171:34">[<expr pos:start="171:33" pos:end="171:33"><name pos:start="171:33" pos:end="171:33">j</name></expr>]</index><index pos:start="171:35" pos:end="171:37">[<expr pos:start="171:36" pos:end="171:36"><name pos:start="171:36" pos:end="171:36">k</name></expr>]</index><index pos:start="171:38" pos:end="171:40">[<expr pos:start="171:39" pos:end="171:39"><literal type="number" pos:start="171:39" pos:end="171:39">0</literal></expr>]</index></name> <operator pos:start="171:42" pos:end="171:42">=</operator> <name pos:start="171:44" pos:end="171:65"><name pos:start="171:44" pos:end="171:54">scale_table</name><index pos:start="171:55" pos:end="171:65">[<expr pos:start="171:56" pos:end="171:64"><name pos:start="171:56" pos:end="171:64">scale_sum</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="177:13" pos:end="185:13"><if pos:start="177:13" pos:end="185:13">if <condition pos:start="177:16" pos:end="177:71">(<expr pos:start="177:17" pos:end="177:70"><name pos:start="177:17" pos:end="177:17">k</name> <operator pos:start="177:19" pos:end="177:19">&lt;</operator> <name pos:start="177:21" pos:end="177:42"><name pos:start="177:21" pos:end="177:21">s</name><operator pos:start="177:22" pos:end="177:23">-&gt;</operator><name pos:start="177:24" pos:end="177:39">vq_start_subband</name><index pos:start="177:40" pos:end="177:42">[<expr pos:start="177:41" pos:end="177:41"><name pos:start="177:41" pos:end="177:41">j</name></expr>]</index></name> <operator pos:start="177:44" pos:end="177:45">&amp;&amp;</operator> <name pos:start="177:47" pos:end="177:70"><name pos:start="177:47" pos:end="177:47">s</name><operator pos:start="177:48" pos:end="177:49">-&gt;</operator><name pos:start="177:50" pos:end="177:64">transition_mode</name><index pos:start="177:65" pos:end="177:67">[<expr pos:start="177:66" pos:end="177:66"><name pos:start="177:66" pos:end="177:66">j</name></expr>]</index><index pos:start="177:68" pos:end="177:70">[<expr pos:start="177:69" pos:end="177:69"><name pos:start="177:69" pos:end="177:69">k</name></expr>]</index></name></expr>)</condition> <block pos:start="177:73" pos:end="185:13">{<block_content pos:start="181:17" pos:end="183:66">

                <comment type="block" pos:start="179:17" pos:end="179:45">/* Get second scale factor */</comment>

                <expr_stmt pos:start="181:17" pos:end="181:84"><expr pos:start="181:17" pos:end="181:83"><name pos:start="181:17" pos:end="181:25">scale_sum</name> <operator pos:start="181:27" pos:end="181:27">=</operator> <call pos:start="181:29" pos:end="181:83"><name pos:start="181:29" pos:end="181:37">get_scale</name><argument_list pos:start="181:38" pos:end="181:83">(<argument pos:start="181:39" pos:end="181:44"><expr pos:start="181:39" pos:end="181:44"><operator pos:start="181:39" pos:end="181:39">&amp;</operator><name pos:start="181:40" pos:end="181:44"><name pos:start="181:40" pos:end="181:40">s</name><operator pos:start="181:41" pos:end="181:42">-&gt;</operator><name pos:start="181:43" pos:end="181:44">gb</name></name></expr></argument>, <argument pos:start="181:47" pos:end="181:71"><expr pos:start="181:47" pos:end="181:71"><name pos:start="181:47" pos:end="181:71"><name pos:start="181:47" pos:end="181:47">s</name><operator pos:start="181:48" pos:end="181:49">-&gt;</operator><name pos:start="181:50" pos:end="181:68">scalefactor_huffman</name><index pos:start="181:69" pos:end="181:71">[<expr pos:start="181:70" pos:end="181:70"><name pos:start="181:70" pos:end="181:70">j</name></expr>]</index></name></expr></argument>, <argument pos:start="181:74" pos:end="181:82"><expr pos:start="181:74" pos:end="181:82"><name pos:start="181:74" pos:end="181:82">scale_sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:66"><expr pos:start="183:17" pos:end="183:65"><name pos:start="183:17" pos:end="183:40"><name pos:start="183:17" pos:end="183:17">s</name><operator pos:start="183:18" pos:end="183:19">-&gt;</operator><name pos:start="183:20" pos:end="183:31">scale_factor</name><index pos:start="183:32" pos:end="183:34">[<expr pos:start="183:33" pos:end="183:33"><name pos:start="183:33" pos:end="183:33">j</name></expr>]</index><index pos:start="183:35" pos:end="183:37">[<expr pos:start="183:36" pos:end="183:36"><name pos:start="183:36" pos:end="183:36">k</name></expr>]</index><index pos:start="183:38" pos:end="183:40">[<expr pos:start="183:39" pos:end="183:39"><literal type="number" pos:start="183:39" pos:end="183:39">1</literal></expr>]</index></name> <operator pos:start="183:42" pos:end="183:42">=</operator> <name pos:start="183:44" pos:end="183:65"><name pos:start="183:44" pos:end="183:54">scale_table</name><index pos:start="183:55" pos:end="183:65">[<expr pos:start="183:56" pos:end="183:64"><name pos:start="183:56" pos:end="183:64">scale_sum</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="193:5" pos:end="193:52">/* Joint subband scale factor codebook select */</comment>

    <for pos:start="195:5" pos:end="203:5">for <control pos:start="195:9" pos:end="195:53">(<init pos:start="195:10" pos:end="195:26"><expr pos:start="195:10" pos:end="195:25"><name pos:start="195:10" pos:end="195:10">j</name> <operator pos:start="195:12" pos:end="195:12">=</operator> <name pos:start="195:14" pos:end="195:25">base_channel</name></expr>;</init> <condition pos:start="195:28" pos:end="195:48"><expr pos:start="195:28" pos:end="195:47"><name pos:start="195:28" pos:end="195:28">j</name> <operator pos:start="195:30" pos:end="195:30">&lt;</operator> <name pos:start="195:32" pos:end="195:47"><name pos:start="195:32" pos:end="195:32">s</name><operator pos:start="195:33" pos:end="195:34">-&gt;</operator><name pos:start="195:35" pos:end="195:47">prim_channels</name></name></expr>;</condition> <incr pos:start="195:50" pos:end="195:52"><expr pos:start="195:50" pos:end="195:52"><name pos:start="195:50" pos:end="195:50">j</name><operator pos:start="195:51" pos:end="195:52">++</operator></expr></incr>)</control> <block pos:start="195:55" pos:end="203:5">{<block_content pos:start="199:9" pos:end="201:51">

        <comment type="block" pos:start="197:9" pos:end="197:62">/* Transmitted only if joint subband coding enabled */</comment>

        <if_stmt pos:start="199:9" pos:end="201:51"><if pos:start="199:9" pos:end="201:51">if <condition pos:start="199:12" pos:end="199:38">(<expr pos:start="199:13" pos:end="199:37"><name pos:start="199:13" pos:end="199:33"><name pos:start="199:13" pos:end="199:13">s</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:30">joint_intensity</name><index pos:start="199:31" pos:end="199:33">[<expr pos:start="199:32" pos:end="199:32"><name pos:start="199:32" pos:end="199:32">j</name></expr>]</index></name> <operator pos:start="199:35" pos:end="199:35">&gt;</operator> <literal type="number" pos:start="199:37" pos:end="199:37">0</literal></expr>)</condition><block type="pseudo" pos:start="201:13" pos:end="201:51"><block_content pos:start="201:13" pos:end="201:51">

            <expr_stmt pos:start="201:13" pos:end="201:51"><expr pos:start="201:13" pos:end="201:50"><name pos:start="201:13" pos:end="201:28"><name pos:start="201:13" pos:end="201:13">s</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:25">joint_huff</name><index pos:start="201:26" pos:end="201:28">[<expr pos:start="201:27" pos:end="201:27"><name pos:start="201:27" pos:end="201:27">j</name></expr>]</index></name> <operator pos:start="201:30" pos:end="201:30">=</operator> <call pos:start="201:32" pos:end="201:50"><name pos:start="201:32" pos:end="201:39">get_bits</name><argument_list pos:start="201:40" pos:end="201:50">(<argument pos:start="201:41" pos:end="201:46"><expr pos:start="201:41" pos:end="201:46"><operator pos:start="201:41" pos:end="201:41">&amp;</operator><name pos:start="201:42" pos:end="201:46"><name pos:start="201:42" pos:end="201:42">s</name><operator pos:start="201:43" pos:end="201:44">-&gt;</operator><name pos:start="201:45" pos:end="201:46">gb</name></name></expr></argument>, <argument pos:start="201:49" pos:end="201:49"><expr pos:start="201:49" pos:end="201:49"><literal type="number" pos:start="201:49" pos:end="201:49">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="207:5" pos:end="209:35"><if pos:start="207:5" pos:end="209:35">if <condition pos:start="207:8" pos:end="207:34">(<expr pos:start="207:9" pos:end="207:33"><call pos:start="207:9" pos:end="207:29"><name pos:start="207:9" pos:end="207:21">get_bits_left</name><argument_list pos:start="207:22" pos:end="207:29">(<argument pos:start="207:23" pos:end="207:28"><expr pos:start="207:23" pos:end="207:28"><operator pos:start="207:23" pos:end="207:23">&amp;</operator><name pos:start="207:24" pos:end="207:28"><name pos:start="207:24" pos:end="207:24">s</name><operator pos:start="207:25" pos:end="207:26">-&gt;</operator><name pos:start="207:27" pos:end="207:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="207:31" pos:end="207:31">&lt;</operator> <literal type="number" pos:start="207:33" pos:end="207:33">0</literal></expr>)</condition><block type="pseudo" pos:start="209:9" pos:end="209:35"><block_content pos:start="209:9" pos:end="209:35">

        <return pos:start="209:9" pos:end="209:35">return <expr pos:start="209:16" pos:end="209:34"><name pos:start="209:16" pos:end="209:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="213:5" pos:end="213:48">/* Scale factors for joint subband coding */</comment>

    <for pos:start="215:5" pos:end="261:5">for <control pos:start="215:9" pos:end="215:53">(<init pos:start="215:10" pos:end="215:26"><expr pos:start="215:10" pos:end="215:25"><name pos:start="215:10" pos:end="215:10">j</name> <operator pos:start="215:12" pos:end="215:12">=</operator> <name pos:start="215:14" pos:end="215:25">base_channel</name></expr>;</init> <condition pos:start="215:28" pos:end="215:48"><expr pos:start="215:28" pos:end="215:47"><name pos:start="215:28" pos:end="215:28">j</name> <operator pos:start="215:30" pos:end="215:30">&lt;</operator> <name pos:start="215:32" pos:end="215:47"><name pos:start="215:32" pos:end="215:32">s</name><operator pos:start="215:33" pos:end="215:34">-&gt;</operator><name pos:start="215:35" pos:end="215:47">prim_channels</name></name></expr>;</condition> <incr pos:start="215:50" pos:end="215:52"><expr pos:start="215:50" pos:end="215:52"><name pos:start="215:50" pos:end="215:50">j</name><operator pos:start="215:51" pos:end="215:52">++</operator></expr></incr>)</control> <block pos:start="215:55" pos:end="261:5">{<block_content pos:start="217:9" pos:end="259:9">

        <decl_stmt pos:start="217:9" pos:end="217:27"><decl pos:start="217:9" pos:end="217:26"><type pos:start="217:9" pos:end="217:11"><name pos:start="217:9" pos:end="217:11">int</name></type> <name pos:start="217:13" pos:end="217:26">source_channel</name></decl>;</decl_stmt>



        <comment type="block" pos:start="221:9" pos:end="221:62">/* Transmitted only if joint subband coding enabled */</comment>

        <if_stmt pos:start="223:9" pos:end="259:9"><if pos:start="223:9" pos:end="259:9">if <condition pos:start="223:12" pos:end="223:38">(<expr pos:start="223:13" pos:end="223:37"><name pos:start="223:13" pos:end="223:33"><name pos:start="223:13" pos:end="223:13">s</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:30">joint_intensity</name><index pos:start="223:31" pos:end="223:33">[<expr pos:start="223:32" pos:end="223:32"><name pos:start="223:32" pos:end="223:32">j</name></expr>]</index></name> <operator pos:start="223:35" pos:end="223:35">&gt;</operator> <literal type="number" pos:start="223:37" pos:end="223:37">0</literal></expr>)</condition> <block pos:start="223:40" pos:end="259:9">{<block_content pos:start="225:13" pos:end="257:13">

            <decl_stmt pos:start="225:13" pos:end="225:26"><decl pos:start="225:13" pos:end="225:25"><type pos:start="225:13" pos:end="225:15"><name pos:start="225:13" pos:end="225:15">int</name></type> <name pos:start="225:17" pos:end="225:21">scale</name> <init pos:start="225:23" pos:end="225:25">= <expr pos:start="225:25" pos:end="225:25"><literal type="number" pos:start="225:25" pos:end="225:25">0</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:55"><expr pos:start="227:13" pos:end="227:54"><name pos:start="227:13" pos:end="227:26">source_channel</name> <operator pos:start="227:28" pos:end="227:28">=</operator> <name pos:start="227:30" pos:end="227:50"><name pos:start="227:30" pos:end="227:30">s</name><operator pos:start="227:31" pos:end="227:32">-&gt;</operator><name pos:start="227:33" pos:end="227:47">joint_intensity</name><index pos:start="227:48" pos:end="227:50">[<expr pos:start="227:49" pos:end="227:49"><name pos:start="227:49" pos:end="227:49">j</name></expr>]</index></name> <operator pos:start="227:52" pos:end="227:52">-</operator> <literal type="number" pos:start="227:54" pos:end="227:54">1</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="231:13" pos:end="233:62">/* When huffman coded, only the difference is encoded

             * (is this valid as well for joint scales ???) */</comment>



            <for pos:start="237:13" pos:end="245:13">for <control pos:start="237:17" pos:end="237:90">(<init pos:start="237:18" pos:end="237:44"><expr pos:start="237:18" pos:end="237:43"><name pos:start="237:18" pos:end="237:18">k</name> <operator pos:start="237:20" pos:end="237:20">=</operator> <name pos:start="237:22" pos:end="237:43"><name pos:start="237:22" pos:end="237:22">s</name><operator pos:start="237:23" pos:end="237:24">-&gt;</operator><name pos:start="237:25" pos:end="237:40">subband_activity</name><index pos:start="237:41" pos:end="237:43">[<expr pos:start="237:42" pos:end="237:42"><name pos:start="237:42" pos:end="237:42">j</name></expr>]</index></name></expr>;</init> <condition pos:start="237:46" pos:end="237:85"><expr pos:start="237:46" pos:end="237:84"><name pos:start="237:46" pos:end="237:46">k</name> <operator pos:start="237:48" pos:end="237:48">&lt;</operator> <name pos:start="237:50" pos:end="237:84"><name pos:start="237:50" pos:end="237:50">s</name><operator pos:start="237:51" pos:end="237:52">-&gt;</operator><name pos:start="237:53" pos:end="237:68">subband_activity</name><index pos:start="237:69" pos:end="237:84">[<expr pos:start="237:70" pos:end="237:83"><name pos:start="237:70" pos:end="237:83">source_channel</name></expr>]</index></name></expr>;</condition> <incr pos:start="237:87" pos:end="237:89"><expr pos:start="237:87" pos:end="237:89"><name pos:start="237:87" pos:end="237:87">k</name><operator pos:start="237:88" pos:end="237:89">++</operator></expr></incr>)</control> <block pos:start="237:92" pos:end="245:13">{<block_content pos:start="239:17" pos:end="243:52">

                <expr_stmt pos:start="239:17" pos:end="239:63"><expr pos:start="239:17" pos:end="239:62"><name pos:start="239:17" pos:end="239:21">scale</name> <operator pos:start="239:23" pos:end="239:23">=</operator> <call pos:start="239:25" pos:end="239:62"><name pos:start="239:25" pos:end="239:33">get_scale</name><argument_list pos:start="239:34" pos:end="239:62">(<argument pos:start="239:35" pos:end="239:40"><expr pos:start="239:35" pos:end="239:40"><operator pos:start="239:35" pos:end="239:35">&amp;</operator><name pos:start="239:36" pos:end="239:40"><name pos:start="239:36" pos:end="239:36">s</name><operator pos:start="239:37" pos:end="239:38">-&gt;</operator><name pos:start="239:39" pos:end="239:40">gb</name></name></expr></argument>, <argument pos:start="239:43" pos:end="239:58"><expr pos:start="239:43" pos:end="239:58"><name pos:start="239:43" pos:end="239:58"><name pos:start="239:43" pos:end="239:43">s</name><operator pos:start="239:44" pos:end="239:45">-&gt;</operator><name pos:start="239:46" pos:end="239:55">joint_huff</name><index pos:start="239:56" pos:end="239:58">[<expr pos:start="239:57" pos:end="239:57"><name pos:start="239:57" pos:end="239:57">j</name></expr>]</index></name></expr></argument>, <argument pos:start="239:61" pos:end="239:61"><expr pos:start="239:61" pos:end="239:61"><literal type="number" pos:start="239:61" pos:end="239:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="241:17" pos:end="241:28"><expr pos:start="241:17" pos:end="241:27"><name pos:start="241:17" pos:end="241:21">scale</name> <operator pos:start="241:23" pos:end="241:24">+=</operator> <literal type="number" pos:start="241:26" pos:end="241:27">64</literal></expr>;</expr_stmt>    <comment type="block" pos:start="241:33" pos:end="241:42">/* bias */</comment>

                <expr_stmt pos:start="243:17" pos:end="243:52"><expr pos:start="243:17" pos:end="243:51"><name pos:start="243:17" pos:end="243:43"><name pos:start="243:17" pos:end="243:17">s</name><operator pos:start="243:18" pos:end="243:19">-&gt;</operator><name pos:start="243:20" pos:end="243:37">joint_scale_factor</name><index pos:start="243:38" pos:end="243:40">[<expr pos:start="243:39" pos:end="243:39"><name pos:start="243:39" pos:end="243:39">j</name></expr>]</index><index pos:start="243:41" pos:end="243:43">[<expr pos:start="243:42" pos:end="243:42"><name pos:start="243:42" pos:end="243:42">k</name></expr>]</index></name> <operator pos:start="243:45" pos:end="243:45">=</operator> <name pos:start="243:47" pos:end="243:51">scale</name></expr>;</expr_stmt>    <comment type="block" pos:start="243:57" pos:end="243:86">/*joint_scale_table[scale]; */</comment>

            </block_content>}</block></for>



            <if_stmt pos:start="249:13" pos:end="257:13"><if pos:start="249:13" pos:end="257:13">if <condition pos:start="249:16" pos:end="249:40">(<expr pos:start="249:17" pos:end="249:39"><operator pos:start="249:17" pos:end="249:17">!</operator><operator pos:start="249:18" pos:end="249:18">(</operator><name pos:start="249:19" pos:end="249:31"><name pos:start="249:19" pos:end="249:19">s</name><operator pos:start="249:20" pos:end="249:21">-&gt;</operator><name pos:start="249:22" pos:end="249:31">debug_flag</name></name> <operator pos:start="249:33" pos:end="249:33">&amp;</operator> <literal type="number" pos:start="249:35" pos:end="249:38">0x02</literal><operator pos:start="249:39" pos:end="249:39">)</operator></expr>)</condition> <block pos:start="249:42" pos:end="257:13">{<block_content pos:start="251:17" pos:end="255:38">

                <expr_stmt pos:start="251:17" pos:end="253:62"><expr pos:start="251:17" pos:end="253:61"><call pos:start="251:17" pos:end="253:61"><name pos:start="251:17" pos:end="251:22">av_log</name><argument_list pos:start="251:23" pos:end="253:61">(<argument pos:start="251:24" pos:end="251:31"><expr pos:start="251:24" pos:end="251:31"><name pos:start="251:24" pos:end="251:31"><name pos:start="251:24" pos:end="251:24">s</name><operator pos:start="251:25" pos:end="251:26">-&gt;</operator><name pos:start="251:27" pos:end="251:31">avctx</name></name></expr></argument>, <argument pos:start="251:34" pos:end="251:45"><expr pos:start="251:34" pos:end="251:45"><name pos:start="251:34" pos:end="251:45">AV_LOG_DEBUG</name></expr></argument>,

                       <argument pos:start="253:24" pos:end="253:60"><expr pos:start="253:24" pos:end="253:60"><literal type="string" pos:start="253:24" pos:end="253:60">"Joint stereo coding not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="255:17" pos:end="255:38"><expr pos:start="255:17" pos:end="255:37"><name pos:start="255:17" pos:end="255:29"><name pos:start="255:17" pos:end="255:17">s</name><operator pos:start="255:18" pos:end="255:19">-&gt;</operator><name pos:start="255:20" pos:end="255:29">debug_flag</name></name> <operator pos:start="255:31" pos:end="255:32">|=</operator> <literal type="number" pos:start="255:34" pos:end="255:37">0x02</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="265:5" pos:end="265:37">/* Stereo downmix coefficients */</comment>

    <if_stmt pos:start="267:5" pos:end="293:5"><if pos:start="267:5" pos:end="293:5">if <condition pos:start="267:8" pos:end="267:46">(<expr pos:start="267:9" pos:end="267:45"><operator pos:start="267:9" pos:end="267:9">!</operator><name pos:start="267:10" pos:end="267:21">base_channel</name> <operator pos:start="267:23" pos:end="267:24">&amp;&amp;</operator> <name pos:start="267:26" pos:end="267:41"><name pos:start="267:26" pos:end="267:26">s</name><operator pos:start="267:27" pos:end="267:28">-&gt;</operator><name pos:start="267:29" pos:end="267:41">prim_channels</name></name> <operator pos:start="267:43" pos:end="267:43">&gt;</operator> <literal type="number" pos:start="267:45" pos:end="267:45">2</literal></expr>)</condition> <block pos:start="267:48" pos:end="293:5">{<block_content pos:start="269:9" pos:end="291:9">

        <if_stmt pos:start="269:9" pos:end="291:9"><if pos:start="269:9" pos:end="279:9">if <condition pos:start="269:12" pos:end="269:23">(<expr pos:start="269:13" pos:end="269:22"><name pos:start="269:13" pos:end="269:22"><name pos:start="269:13" pos:end="269:13">s</name><operator pos:start="269:14" pos:end="269:15">-&gt;</operator><name pos:start="269:16" pos:end="269:22">downmix</name></name></expr>)</condition> <block pos:start="269:25" pos:end="279:9">{<block_content pos:start="271:13" pos:end="277:13">

            <for pos:start="271:13" pos:end="277:13">for <control pos:start="271:17" pos:end="271:61">(<init pos:start="271:18" pos:end="271:34"><expr pos:start="271:18" pos:end="271:33"><name pos:start="271:18" pos:end="271:18">j</name> <operator pos:start="271:20" pos:end="271:20">=</operator> <name pos:start="271:22" pos:end="271:33">base_channel</name></expr>;</init> <condition pos:start="271:36" pos:end="271:56"><expr pos:start="271:36" pos:end="271:55"><name pos:start="271:36" pos:end="271:36">j</name> <operator pos:start="271:38" pos:end="271:38">&lt;</operator> <name pos:start="271:40" pos:end="271:55"><name pos:start="271:40" pos:end="271:40">s</name><operator pos:start="271:41" pos:end="271:42">-&gt;</operator><name pos:start="271:43" pos:end="271:55">prim_channels</name></name></expr>;</condition> <incr pos:start="271:58" pos:end="271:60"><expr pos:start="271:58" pos:end="271:60"><name pos:start="271:58" pos:end="271:58">j</name><operator pos:start="271:59" pos:end="271:60">++</operator></expr></incr>)</control> <block pos:start="271:63" pos:end="277:13">{<block_content pos:start="273:17" pos:end="275:60">

                <expr_stmt pos:start="273:17" pos:end="273:60"><expr pos:start="273:17" pos:end="273:59"><name pos:start="273:17" pos:end="273:37"><name pos:start="273:17" pos:end="273:17">s</name><operator pos:start="273:18" pos:end="273:19">-&gt;</operator><name pos:start="273:20" pos:end="273:31">downmix_coef</name><index pos:start="273:32" pos:end="273:34">[<expr pos:start="273:33" pos:end="273:33"><name pos:start="273:33" pos:end="273:33">j</name></expr>]</index><index pos:start="273:35" pos:end="273:37">[<expr pos:start="273:36" pos:end="273:36"><literal type="number" pos:start="273:36" pos:end="273:36">0</literal></expr>]</index></name> <operator pos:start="273:39" pos:end="273:39">=</operator> <call pos:start="273:41" pos:end="273:59"><name pos:start="273:41" pos:end="273:48">get_bits</name><argument_list pos:start="273:49" pos:end="273:59">(<argument pos:start="273:50" pos:end="273:55"><expr pos:start="273:50" pos:end="273:55"><operator pos:start="273:50" pos:end="273:50">&amp;</operator><name pos:start="273:51" pos:end="273:55"><name pos:start="273:51" pos:end="273:51">s</name><operator pos:start="273:52" pos:end="273:53">-&gt;</operator><name pos:start="273:54" pos:end="273:55">gb</name></name></expr></argument>, <argument pos:start="273:58" pos:end="273:58"><expr pos:start="273:58" pos:end="273:58"><literal type="number" pos:start="273:58" pos:end="273:58">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="275:17" pos:end="275:60"><expr pos:start="275:17" pos:end="275:59"><name pos:start="275:17" pos:end="275:37"><name pos:start="275:17" pos:end="275:17">s</name><operator pos:start="275:18" pos:end="275:19">-&gt;</operator><name pos:start="275:20" pos:end="275:31">downmix_coef</name><index pos:start="275:32" pos:end="275:34">[<expr pos:start="275:33" pos:end="275:33"><name pos:start="275:33" pos:end="275:33">j</name></expr>]</index><index pos:start="275:35" pos:end="275:37">[<expr pos:start="275:36" pos:end="275:36"><literal type="number" pos:start="275:36" pos:end="275:36">1</literal></expr>]</index></name> <operator pos:start="275:39" pos:end="275:39">=</operator> <call pos:start="275:41" pos:end="275:59"><name pos:start="275:41" pos:end="275:48">get_bits</name><argument_list pos:start="275:49" pos:end="275:59">(<argument pos:start="275:50" pos:end="275:55"><expr pos:start="275:50" pos:end="275:55"><operator pos:start="275:50" pos:end="275:50">&amp;</operator><name pos:start="275:51" pos:end="275:55"><name pos:start="275:51" pos:end="275:51">s</name><operator pos:start="275:52" pos:end="275:53">-&gt;</operator><name pos:start="275:54" pos:end="275:55">gb</name></name></expr></argument>, <argument pos:start="275:58" pos:end="275:58"><expr pos:start="275:58" pos:end="275:58"><literal type="number" pos:start="275:58" pos:end="275:58">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="279:11" pos:end="291:9">else <block pos:start="279:16" pos:end="291:9">{<block_content pos:start="281:13" pos:end="289:13">

            <decl_stmt pos:start="281:13" pos:end="281:49"><decl pos:start="281:13" pos:end="281:48"><type pos:start="281:13" pos:end="281:15"><name pos:start="281:13" pos:end="281:15">int</name></type> <name pos:start="281:17" pos:end="281:18">am</name> <init pos:start="281:20" pos:end="281:48">= <expr pos:start="281:22" pos:end="281:48"><name pos:start="281:22" pos:end="281:29"><name pos:start="281:22" pos:end="281:22">s</name><operator pos:start="281:23" pos:end="281:24">-&gt;</operator><name pos:start="281:25" pos:end="281:29">amode</name></name> <operator pos:start="281:31" pos:end="281:31">&amp;</operator> <name pos:start="281:33" pos:end="281:48">DCA_CHANNEL_MASK</name></expr></init></decl>;</decl_stmt>

            <for pos:start="283:13" pos:end="289:13">for <control pos:start="283:17" pos:end="283:61">(<init pos:start="283:18" pos:end="283:34"><expr pos:start="283:18" pos:end="283:33"><name pos:start="283:18" pos:end="283:18">j</name> <operator pos:start="283:20" pos:end="283:20">=</operator> <name pos:start="283:22" pos:end="283:33">base_channel</name></expr>;</init> <condition pos:start="283:36" pos:end="283:56"><expr pos:start="283:36" pos:end="283:55"><name pos:start="283:36" pos:end="283:36">j</name> <operator pos:start="283:38" pos:end="283:38">&lt;</operator> <name pos:start="283:40" pos:end="283:55"><name pos:start="283:40" pos:end="283:40">s</name><operator pos:start="283:41" pos:end="283:42">-&gt;</operator><name pos:start="283:43" pos:end="283:55">prim_channels</name></name></expr>;</condition> <incr pos:start="283:58" pos:end="283:60"><expr pos:start="283:58" pos:end="283:60"><name pos:start="283:58" pos:end="283:58">j</name><operator pos:start="283:59" pos:end="283:60">++</operator></expr></incr>)</control> <block pos:start="283:63" pos:end="289:13">{<block_content pos:start="285:17" pos:end="287:69">

                <expr_stmt pos:start="285:17" pos:end="285:69"><expr pos:start="285:17" pos:end="285:68"><name pos:start="285:17" pos:end="285:37"><name pos:start="285:17" pos:end="285:17">s</name><operator pos:start="285:18" pos:end="285:19">-&gt;</operator><name pos:start="285:20" pos:end="285:31">downmix_coef</name><index pos:start="285:32" pos:end="285:34">[<expr pos:start="285:33" pos:end="285:33"><name pos:start="285:33" pos:end="285:33">j</name></expr>]</index><index pos:start="285:35" pos:end="285:37">[<expr pos:start="285:36" pos:end="285:36"><literal type="number" pos:start="285:36" pos:end="285:36">0</literal></expr>]</index></name> <operator pos:start="285:39" pos:end="285:39">=</operator> <name pos:start="285:41" pos:end="285:68"><name pos:start="285:41" pos:end="285:58">dca_default_coeffs</name><index pos:start="285:59" pos:end="285:62">[<expr pos:start="285:60" pos:end="285:61"><name pos:start="285:60" pos:end="285:61">am</name></expr>]</index><index pos:start="285:63" pos:end="285:65">[<expr pos:start="285:64" pos:end="285:64"><name pos:start="285:64" pos:end="285:64">j</name></expr>]</index><index pos:start="285:66" pos:end="285:68">[<expr pos:start="285:67" pos:end="285:67"><literal type="number" pos:start="285:67" pos:end="285:67">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="287:17" pos:end="287:69"><expr pos:start="287:17" pos:end="287:68"><name pos:start="287:17" pos:end="287:37"><name pos:start="287:17" pos:end="287:17">s</name><operator pos:start="287:18" pos:end="287:19">-&gt;</operator><name pos:start="287:20" pos:end="287:31">downmix_coef</name><index pos:start="287:32" pos:end="287:34">[<expr pos:start="287:33" pos:end="287:33"><name pos:start="287:33" pos:end="287:33">j</name></expr>]</index><index pos:start="287:35" pos:end="287:37">[<expr pos:start="287:36" pos:end="287:36"><literal type="number" pos:start="287:36" pos:end="287:36">1</literal></expr>]</index></name> <operator pos:start="287:39" pos:end="287:39">=</operator> <name pos:start="287:41" pos:end="287:68"><name pos:start="287:41" pos:end="287:58">dca_default_coeffs</name><index pos:start="287:59" pos:end="287:62">[<expr pos:start="287:60" pos:end="287:61"><name pos:start="287:60" pos:end="287:61">am</name></expr>]</index><index pos:start="287:63" pos:end="287:65">[<expr pos:start="287:64" pos:end="287:64"><name pos:start="287:64" pos:end="287:64">j</name></expr>]</index><index pos:start="287:66" pos:end="287:68">[<expr pos:start="287:67" pos:end="287:67"><literal type="number" pos:start="287:67" pos:end="287:67">1</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="297:5" pos:end="297:35">/* Dynamic range coefficient */</comment>

    <if_stmt pos:start="299:5" pos:end="301:47"><if pos:start="299:5" pos:end="301:47">if <condition pos:start="299:8" pos:end="299:37">(<expr pos:start="299:9" pos:end="299:36"><operator pos:start="299:9" pos:end="299:9">!</operator><name pos:start="299:10" pos:end="299:21">base_channel</name> <operator pos:start="299:23" pos:end="299:24">&amp;&amp;</operator> <name pos:start="299:26" pos:end="299:36"><name pos:start="299:26" pos:end="299:26">s</name><operator pos:start="299:27" pos:end="299:28">-&gt;</operator><name pos:start="299:29" pos:end="299:36">dynrange</name></name></expr>)</condition><block type="pseudo" pos:start="301:9" pos:end="301:47"><block_content pos:start="301:9" pos:end="301:47">

        <expr_stmt pos:start="301:9" pos:end="301:47"><expr pos:start="301:9" pos:end="301:46"><name pos:start="301:9" pos:end="301:24"><name pos:start="301:9" pos:end="301:9">s</name><operator pos:start="301:10" pos:end="301:11">-&gt;</operator><name pos:start="301:12" pos:end="301:24">dynrange_coef</name></name> <operator pos:start="301:26" pos:end="301:26">=</operator> <call pos:start="301:28" pos:end="301:46"><name pos:start="301:28" pos:end="301:35">get_bits</name><argument_list pos:start="301:36" pos:end="301:46">(<argument pos:start="301:37" pos:end="301:42"><expr pos:start="301:37" pos:end="301:42"><operator pos:start="301:37" pos:end="301:37">&amp;</operator><name pos:start="301:38" pos:end="301:42"><name pos:start="301:38" pos:end="301:38">s</name><operator pos:start="301:39" pos:end="301:40">-&gt;</operator><name pos:start="301:41" pos:end="301:42">gb</name></name></expr></argument>, <argument pos:start="301:45" pos:end="301:45"><expr pos:start="301:45" pos:end="301:45"><literal type="number" pos:start="301:45" pos:end="301:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="305:5" pos:end="305:41">/* Side information CRC check word */</comment>

    <if_stmt pos:start="307:5" pos:end="311:5"><if pos:start="307:5" pos:end="311:5">if <condition pos:start="307:8" pos:end="307:23">(<expr pos:start="307:9" pos:end="307:22"><name pos:start="307:9" pos:end="307:22"><name pos:start="307:9" pos:end="307:9">s</name><operator pos:start="307:10" pos:end="307:11">-&gt;</operator><name pos:start="307:12" pos:end="307:22">crc_present</name></name></expr>)</condition> <block pos:start="307:25" pos:end="311:5">{<block_content pos:start="309:9" pos:end="309:29">

        <expr_stmt pos:start="309:9" pos:end="309:29"><expr pos:start="309:9" pos:end="309:28"><call pos:start="309:9" pos:end="309:28"><name pos:start="309:9" pos:end="309:16">get_bits</name><argument_list pos:start="309:17" pos:end="309:28">(<argument pos:start="309:18" pos:end="309:23"><expr pos:start="309:18" pos:end="309:23"><operator pos:start="309:18" pos:end="309:18">&amp;</operator><name pos:start="309:19" pos:end="309:23"><name pos:start="309:19" pos:end="309:19">s</name><operator pos:start="309:20" pos:end="309:21">-&gt;</operator><name pos:start="309:22" pos:end="309:23">gb</name></name></expr></argument>, <argument pos:start="309:26" pos:end="309:27"><expr pos:start="309:26" pos:end="309:27"><literal type="number" pos:start="309:26" pos:end="309:27">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="315:5" pos:end="319:7">/*

     * Primary audio data arrays

     */</comment>



    <comment type="block" pos:start="323:5" pos:end="323:44">/* VQ encoded high frequency subbands */</comment>

    <for pos:start="325:5" pos:end="331:57">for <control pos:start="325:9" pos:end="325:53">(<init pos:start="325:10" pos:end="325:26"><expr pos:start="325:10" pos:end="325:25"><name pos:start="325:10" pos:end="325:10">j</name> <operator pos:start="325:12" pos:end="325:12">=</operator> <name pos:start="325:14" pos:end="325:25">base_channel</name></expr>;</init> <condition pos:start="325:28" pos:end="325:48"><expr pos:start="325:28" pos:end="325:47"><name pos:start="325:28" pos:end="325:28">j</name> <operator pos:start="325:30" pos:end="325:30">&lt;</operator> <name pos:start="325:32" pos:end="325:47"><name pos:start="325:32" pos:end="325:32">s</name><operator pos:start="325:33" pos:end="325:34">-&gt;</operator><name pos:start="325:35" pos:end="325:47">prim_channels</name></name></expr>;</condition> <incr pos:start="325:50" pos:end="325:52"><expr pos:start="325:50" pos:end="325:52"><name pos:start="325:50" pos:end="325:50">j</name><operator pos:start="325:51" pos:end="325:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="327:9" pos:end="331:57"><block_content pos:start="327:9" pos:end="331:57">

        <for pos:start="327:9" pos:end="331:57">for <control pos:start="327:13" pos:end="327:73">(<init pos:start="327:14" pos:end="327:40"><expr pos:start="327:14" pos:end="327:39"><name pos:start="327:14" pos:end="327:14">k</name> <operator pos:start="327:16" pos:end="327:16">=</operator> <name pos:start="327:18" pos:end="327:39"><name pos:start="327:18" pos:end="327:18">s</name><operator pos:start="327:19" pos:end="327:20">-&gt;</operator><name pos:start="327:21" pos:end="327:36">vq_start_subband</name><index pos:start="327:37" pos:end="327:39">[<expr pos:start="327:38" pos:end="327:38"><name pos:start="327:38" pos:end="327:38">j</name></expr>]</index></name></expr>;</init> <condition pos:start="327:42" pos:end="327:68"><expr pos:start="327:42" pos:end="327:67"><name pos:start="327:42" pos:end="327:42">k</name> <operator pos:start="327:44" pos:end="327:44">&lt;</operator> <name pos:start="327:46" pos:end="327:67"><name pos:start="327:46" pos:end="327:46">s</name><operator pos:start="327:47" pos:end="327:48">-&gt;</operator><name pos:start="327:49" pos:end="327:64">subband_activity</name><index pos:start="327:65" pos:end="327:67">[<expr pos:start="327:66" pos:end="327:66"><name pos:start="327:66" pos:end="327:66">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="327:70" pos:end="327:72"><expr pos:start="327:70" pos:end="327:72"><name pos:start="327:70" pos:end="327:70">k</name><operator pos:start="327:71" pos:end="327:72">++</operator></expr></incr>)</control><block type="pseudo" pos:start="331:13" pos:end="331:57"><block_content pos:start="331:13" pos:end="331:57">

            <comment type="block" pos:start="329:13" pos:end="329:40">/* 1 vector -&gt; 32 samples */</comment>

            <expr_stmt pos:start="331:13" pos:end="331:57"><expr pos:start="331:13" pos:end="331:56"><name pos:start="331:13" pos:end="331:33"><name pos:start="331:13" pos:end="331:13">s</name><operator pos:start="331:14" pos:end="331:15">-&gt;</operator><name pos:start="331:16" pos:end="331:27">high_freq_vq</name><index pos:start="331:28" pos:end="331:30">[<expr pos:start="331:29" pos:end="331:29"><name pos:start="331:29" pos:end="331:29">j</name></expr>]</index><index pos:start="331:31" pos:end="331:33">[<expr pos:start="331:32" pos:end="331:32"><name pos:start="331:32" pos:end="331:32">k</name></expr>]</index></name> <operator pos:start="331:35" pos:end="331:35">=</operator> <call pos:start="331:37" pos:end="331:56"><name pos:start="331:37" pos:end="331:44">get_bits</name><argument_list pos:start="331:45" pos:end="331:56">(<argument pos:start="331:46" pos:end="331:51"><expr pos:start="331:46" pos:end="331:51"><operator pos:start="331:46" pos:end="331:46">&amp;</operator><name pos:start="331:47" pos:end="331:51"><name pos:start="331:47" pos:end="331:47">s</name><operator pos:start="331:48" pos:end="331:49">-&gt;</operator><name pos:start="331:50" pos:end="331:51">gb</name></name></expr></argument>, <argument pos:start="331:54" pos:end="331:55"><expr pos:start="331:54" pos:end="331:55"><literal type="number" pos:start="331:54" pos:end="331:55">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>



    <comment type="block" pos:start="335:5" pos:end="335:35">/* Low frequency effect data */</comment>

    <if_stmt pos:start="337:5" pos:end="380:0"><if pos:start="337:5" pos:end="380:0">if <condition pos:start="337:8" pos:end="337:32">(<expr pos:start="337:9" pos:end="337:31"><operator pos:start="337:9" pos:end="337:9">!</operator><name pos:start="337:10" pos:end="337:21">base_channel</name> <operator pos:start="337:23" pos:end="337:24">&amp;&amp;</operator> <name pos:start="337:26" pos:end="337:31"><name pos:start="337:26" pos:end="337:26">s</name><operator pos:start="337:27" pos:end="337:28">-&gt;</operator><name pos:start="337:29" pos:end="337:31">lfe</name></name></expr>)</condition> <block pos:start="337:34" pos:end="380:0">{<block_content pos:start="341:9" pos:end="373:40">

        <comment type="block" pos:start="339:9" pos:end="339:25">/* LFE samples */</comment>

        <decl_stmt pos:start="341:9" pos:end="341:57"><decl pos:start="341:9" pos:end="341:56"><type pos:start="341:9" pos:end="341:11"><name pos:start="341:9" pos:end="341:11">int</name></type> <name pos:start="341:13" pos:end="341:23">lfe_samples</name> <init pos:start="341:25" pos:end="341:56">= <expr pos:start="341:27" pos:end="341:56"><literal type="number" pos:start="341:27" pos:end="341:27">2</literal> <operator pos:start="341:29" pos:end="341:29">*</operator> <name pos:start="341:31" pos:end="341:36"><name pos:start="341:31" pos:end="341:31">s</name><operator pos:start="341:32" pos:end="341:33">-&gt;</operator><name pos:start="341:34" pos:end="341:36">lfe</name></name> <operator pos:start="341:38" pos:end="341:38">*</operator> <operator pos:start="341:40" pos:end="341:40">(</operator><literal type="number" pos:start="341:41" pos:end="341:43">4</literal> <operator pos:start="341:43" pos:end="341:43">+</operator> <name pos:start="341:45" pos:end="341:55">block_index</name><operator pos:start="341:56" pos:end="341:56">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="343:9" pos:end="343:99"><decl pos:start="343:9" pos:end="343:98"><type pos:start="343:9" pos:end="343:11"><name pos:start="343:9" pos:end="343:11">int</name></type> <name pos:start="343:13" pos:end="343:26">lfe_end_sample</name> <init pos:start="343:28" pos:end="343:98">= <expr pos:start="343:30" pos:end="343:98"><literal type="number" pos:start="343:30" pos:end="343:30">2</literal> <operator pos:start="343:32" pos:end="343:32">*</operator> <name pos:start="343:34" pos:end="343:39"><name pos:start="343:34" pos:end="343:34">s</name><operator pos:start="343:35" pos:end="343:36">-&gt;</operator><name pos:start="343:37" pos:end="343:39">lfe</name></name> <operator pos:start="343:41" pos:end="343:41">*</operator> <operator pos:start="343:43" pos:end="343:43">(</operator><literal type="number" pos:start="343:44" pos:end="343:46">4</literal> <operator pos:start="343:46" pos:end="343:46">+</operator> <name pos:start="343:48" pos:end="343:58">block_index</name> <operator pos:start="343:60" pos:end="343:60">+</operator> <name pos:start="343:62" pos:end="343:97"><name pos:start="343:62" pos:end="343:62">s</name><operator pos:start="343:63" pos:end="343:64">-&gt;</operator><name pos:start="343:65" pos:end="343:76">subsubframes</name><index pos:start="343:77" pos:end="343:97">[<expr pos:start="343:78" pos:end="343:96"><name pos:start="343:78" pos:end="343:96"><name pos:start="343:78" pos:end="343:78">s</name><operator pos:start="343:79" pos:end="343:80">-&gt;</operator><name pos:start="343:81" pos:end="343:96">current_subframe</name></name></expr>]</index></name><operator pos:start="343:98" pos:end="343:98">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="345:9" pos:end="345:24"><decl pos:start="345:9" pos:end="345:23"><type pos:start="345:9" pos:end="345:13"><name pos:start="345:9" pos:end="345:13">float</name></type> <name pos:start="345:15" pos:end="345:23">lfe_scale</name></decl>;</decl_stmt>



        <for pos:start="349:9" pos:end="355:9">for <control pos:start="349:13" pos:end="349:54">(<init pos:start="349:14" pos:end="349:29"><expr pos:start="349:14" pos:end="349:28"><name pos:start="349:14" pos:end="349:14">j</name> <operator pos:start="349:16" pos:end="349:16">=</operator> <name pos:start="349:18" pos:end="349:28">lfe_samples</name></expr>;</init> <condition pos:start="349:31" pos:end="349:49"><expr pos:start="349:31" pos:end="349:48"><name pos:start="349:31" pos:end="349:31">j</name> <operator pos:start="349:33" pos:end="349:33">&lt;</operator> <name pos:start="349:35" pos:end="349:48">lfe_end_sample</name></expr>;</condition> <incr pos:start="349:51" pos:end="349:53"><expr pos:start="349:51" pos:end="349:53"><name pos:start="349:51" pos:end="349:51">j</name><operator pos:start="349:52" pos:end="349:53">++</operator></expr></incr>)</control> <block pos:start="349:56" pos:end="355:9">{<block_content pos:start="353:13" pos:end="353:50">

            <comment type="block" pos:start="351:13" pos:end="351:35">/* Signed 8 bits int */</comment>

            <expr_stmt pos:start="353:13" pos:end="353:50"><expr pos:start="353:13" pos:end="353:49"><name pos:start="353:13" pos:end="353:26"><name pos:start="353:13" pos:end="353:13">s</name><operator pos:start="353:14" pos:end="353:15">-&gt;</operator><name pos:start="353:16" pos:end="353:23">lfe_data</name><index pos:start="353:24" pos:end="353:26">[<expr pos:start="353:25" pos:end="353:25"><name pos:start="353:25" pos:end="353:25">j</name></expr>]</index></name> <operator pos:start="353:28" pos:end="353:28">=</operator> <call pos:start="353:30" pos:end="353:49"><name pos:start="353:30" pos:end="353:38">get_sbits</name><argument_list pos:start="353:39" pos:end="353:49">(<argument pos:start="353:40" pos:end="353:45"><expr pos:start="353:40" pos:end="353:45"><operator pos:start="353:40" pos:end="353:40">&amp;</operator><name pos:start="353:41" pos:end="353:45"><name pos:start="353:41" pos:end="353:41">s</name><operator pos:start="353:42" pos:end="353:43">-&gt;</operator><name pos:start="353:44" pos:end="353:45">gb</name></name></expr></argument>, <argument pos:start="353:48" pos:end="353:48"><expr pos:start="353:48" pos:end="353:48"><literal type="number" pos:start="353:48" pos:end="353:48">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="359:9" pos:end="359:32">/* Scale factor index */</comment>

        <expr_stmt pos:start="361:9" pos:end="361:71"><expr pos:start="361:9" pos:end="361:70"><name pos:start="361:9" pos:end="361:27"><name pos:start="361:9" pos:end="361:9">s</name><operator pos:start="361:10" pos:end="361:11">-&gt;</operator><name pos:start="361:12" pos:end="361:27">lfe_scale_factor</name></name> <operator pos:start="361:29" pos:end="361:29">=</operator> <name pos:start="361:31" pos:end="361:70"><name pos:start="361:31" pos:end="361:49">scale_factor_quant7</name><index pos:start="361:50" pos:end="361:70">[<expr pos:start="361:51" pos:end="361:69"><call pos:start="361:51" pos:end="361:69"><name pos:start="361:51" pos:end="361:58">get_bits</name><argument_list pos:start="361:59" pos:end="361:69">(<argument pos:start="361:60" pos:end="361:65"><expr pos:start="361:60" pos:end="361:65"><operator pos:start="361:60" pos:end="361:60">&amp;</operator><name pos:start="361:61" pos:end="361:65"><name pos:start="361:61" pos:end="361:61">s</name><operator pos:start="361:62" pos:end="361:63">-&gt;</operator><name pos:start="361:64" pos:end="361:65">gb</name></name></expr></argument>, <argument pos:start="361:68" pos:end="361:68"><expr pos:start="361:68" pos:end="361:68"><literal type="number" pos:start="361:68" pos:end="361:68">8</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>



        <comment type="block" pos:start="365:9" pos:end="365:51">/* Quantization step size * scale factor */</comment>

        <expr_stmt pos:start="367:9" pos:end="367:48"><expr pos:start="367:9" pos:end="367:47"><name pos:start="367:9" pos:end="367:17">lfe_scale</name> <operator pos:start="367:19" pos:end="367:19">=</operator> <literal type="number" pos:start="367:21" pos:end="367:25">0.035</literal> <operator pos:start="367:27" pos:end="367:27">*</operator> <name pos:start="367:29" pos:end="367:47"><name pos:start="367:29" pos:end="367:29">s</name><operator pos:start="367:30" pos:end="367:31">-&gt;</operator><name pos:start="367:32" pos:end="367:47">lfe_scale_factor</name></name></expr>;</expr_stmt>



        <for pos:start="371:9" pos:end="373:40">for <control pos:start="371:13" pos:end="371:54">(<init pos:start="371:14" pos:end="371:29"><expr pos:start="371:14" pos:end="371:28"><name pos:start="371:14" pos:end="371:14">j</name> <operator pos:start="371:16" pos:end="371:16">=</operator> <name pos:start="371:18" pos:end="371:28">lfe_samples</name></expr>;</init> <condition pos:start="371:31" pos:end="371:49"><expr pos:start="371:31" pos:end="371:48"><name pos:start="371:31" pos:end="371:31">j</name> <operator pos:start="371:33" pos:end="371:33">&lt;</operator> <name pos:start="371:35" pos:end="371:48">lfe_end_sample</name></expr>;</condition> <incr pos:start="371:51" pos:end="371:53"><expr pos:start="371:51" pos:end="371:53"><name pos:start="371:51" pos:end="371:51">j</name><operator pos:start="371:52" pos:end="371:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="373:13" pos:end="373:40"><block_content pos:start="373:13" pos:end="373:40">

            <expr_stmt pos:start="373:13" pos:end="373:40"><expr pos:start="373:13" pos:end="373:39"><name pos:start="373:13" pos:end="373:26"><name pos:start="373:13" pos:end="373:13">s</name><operator pos:start="373:14" pos:end="373:15">-&gt;</operator><name pos:start="373:16" pos:end="373:23">lfe_data</name><index pos:start="373:24" pos:end="373:26">[<expr pos:start="373:25" pos:end="373:25"><name pos:start="373:25" pos:end="373:25">j</name></expr>]</index></name> <operator pos:start="373:28" pos:end="373:29">*=</operator> <name pos:start="373:31" pos:end="373:39">lfe_scale</name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="379:1" pos:end="379:12">#<cpp:directive pos:start="379:2" pos:end="379:6">ifdef</cpp:directive> <name pos:start="379:8" pos:end="379:12">TRACE</name></cpp:ifdef>

    <expr_stmt pos:start="381:5" pos:end="383:49"><expr pos:start="381:5" pos:end="383:48"><call pos:start="381:5" pos:end="383:48"><name pos:start="381:5" pos:end="381:10">av_log</name><argument_list pos:start="381:11" pos:end="383:48">(<argument pos:start="381:12" pos:end="381:19"><expr pos:start="381:12" pos:end="381:19"><name pos:start="381:12" pos:end="381:19"><name pos:start="381:12" pos:end="381:12">s</name><operator pos:start="381:13" pos:end="381:14">-&gt;</operator><name pos:start="381:15" pos:end="381:19">avctx</name></name></expr></argument>, <argument pos:start="381:22" pos:end="381:33"><expr pos:start="381:22" pos:end="381:33"><name pos:start="381:22" pos:end="381:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="381:36" pos:end="381:55"><expr pos:start="381:36" pos:end="381:55"><literal type="string" pos:start="381:36" pos:end="381:55">"subsubframes: %i\n"</literal></expr></argument>,

           <argument pos:start="383:12" pos:end="383:47"><expr pos:start="383:12" pos:end="383:47"><name pos:start="383:12" pos:end="383:47"><name pos:start="383:12" pos:end="383:12">s</name><operator pos:start="383:13" pos:end="383:14">-&gt;</operator><name pos:start="383:15" pos:end="383:26">subsubframes</name><index pos:start="383:27" pos:end="383:47">[<expr pos:start="383:28" pos:end="383:46"><name pos:start="383:28" pos:end="383:46"><name pos:start="383:28" pos:end="383:28">s</name><operator pos:start="383:29" pos:end="383:30">-&gt;</operator><name pos:start="383:31" pos:end="383:46">current_subframe</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="385:5" pos:end="387:52"><expr pos:start="385:5" pos:end="387:51"><call pos:start="385:5" pos:end="387:51"><name pos:start="385:5" pos:end="385:10">av_log</name><argument_list pos:start="385:11" pos:end="387:51">(<argument pos:start="385:12" pos:end="385:19"><expr pos:start="385:12" pos:end="385:19"><name pos:start="385:12" pos:end="385:19"><name pos:start="385:12" pos:end="385:12">s</name><operator pos:start="385:13" pos:end="385:14">-&gt;</operator><name pos:start="385:15" pos:end="385:19">avctx</name></name></expr></argument>, <argument pos:start="385:22" pos:end="385:33"><expr pos:start="385:22" pos:end="385:33"><name pos:start="385:22" pos:end="385:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="385:36" pos:end="385:58"><expr pos:start="385:36" pos:end="385:58"><literal type="string" pos:start="385:36" pos:end="385:58">"partial samples: %i\n"</literal></expr></argument>,

           <argument pos:start="387:12" pos:end="387:50"><expr pos:start="387:12" pos:end="387:50"><name pos:start="387:12" pos:end="387:50"><name pos:start="387:12" pos:end="387:12">s</name><operator pos:start="387:13" pos:end="387:14">-&gt;</operator><name pos:start="387:15" pos:end="387:29">partial_samples</name><index pos:start="387:30" pos:end="387:50">[<expr pos:start="387:31" pos:end="387:49"><name pos:start="387:31" pos:end="387:49"><name pos:start="387:31" pos:end="387:31">s</name><operator pos:start="387:32" pos:end="387:33">-&gt;</operator><name pos:start="387:34" pos:end="387:49">current_subframe</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="391:5" pos:end="401:5">for <control pos:start="391:9" pos:end="391:53">(<init pos:start="391:10" pos:end="391:26"><expr pos:start="391:10" pos:end="391:25"><name pos:start="391:10" pos:end="391:10">j</name> <operator pos:start="391:12" pos:end="391:12">=</operator> <name pos:start="391:14" pos:end="391:25">base_channel</name></expr>;</init> <condition pos:start="391:28" pos:end="391:48"><expr pos:start="391:28" pos:end="391:47"><name pos:start="391:28" pos:end="391:28">j</name> <operator pos:start="391:30" pos:end="391:30">&lt;</operator> <name pos:start="391:32" pos:end="391:47"><name pos:start="391:32" pos:end="391:32">s</name><operator pos:start="391:33" pos:end="391:34">-&gt;</operator><name pos:start="391:35" pos:end="391:47">prim_channels</name></name></expr>;</condition> <incr pos:start="391:50" pos:end="391:52"><expr pos:start="391:50" pos:end="391:52"><name pos:start="391:50" pos:end="391:50">j</name><operator pos:start="391:51" pos:end="391:52">++</operator></expr></incr>)</control> <block pos:start="391:55" pos:end="401:5">{<block_content pos:start="393:9" pos:end="399:45">

        <expr_stmt pos:start="393:9" pos:end="393:59"><expr pos:start="393:9" pos:end="393:58"><call pos:start="393:9" pos:end="393:58"><name pos:start="393:9" pos:end="393:14">av_log</name><argument_list pos:start="393:15" pos:end="393:58">(<argument pos:start="393:16" pos:end="393:23"><expr pos:start="393:16" pos:end="393:23"><name pos:start="393:16" pos:end="393:23"><name pos:start="393:16" pos:end="393:16">s</name><operator pos:start="393:17" pos:end="393:18">-&gt;</operator><name pos:start="393:19" pos:end="393:23">avctx</name></name></expr></argument>, <argument pos:start="393:26" pos:end="393:37"><expr pos:start="393:26" pos:end="393:37"><name pos:start="393:26" pos:end="393:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="393:40" pos:end="393:57"><expr pos:start="393:40" pos:end="393:57"><literal type="string" pos:start="393:40" pos:end="393:57">"prediction mode:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="395:9" pos:end="397:76">for <control pos:start="395:13" pos:end="395:52">(<init pos:start="395:14" pos:end="395:19"><expr pos:start="395:14" pos:end="395:18"><name pos:start="395:14" pos:end="395:14">k</name> <operator pos:start="395:16" pos:end="395:16">=</operator> <literal type="number" pos:start="395:18" pos:end="395:18">0</literal></expr>;</init> <condition pos:start="395:21" pos:end="395:47"><expr pos:start="395:21" pos:end="395:46"><name pos:start="395:21" pos:end="395:21">k</name> <operator pos:start="395:23" pos:end="395:23">&lt;</operator> <name pos:start="395:25" pos:end="395:46"><name pos:start="395:25" pos:end="395:25">s</name><operator pos:start="395:26" pos:end="395:27">-&gt;</operator><name pos:start="395:28" pos:end="395:43">subband_activity</name><index pos:start="395:44" pos:end="395:46">[<expr pos:start="395:45" pos:end="395:45"><name pos:start="395:45" pos:end="395:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="395:49" pos:end="395:51"><expr pos:start="395:49" pos:end="395:51"><name pos:start="395:49" pos:end="395:49">k</name><operator pos:start="395:50" pos:end="395:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="397:13" pos:end="397:76"><block_content pos:start="397:13" pos:end="397:76">

            <expr_stmt pos:start="397:13" pos:end="397:76"><expr pos:start="397:13" pos:end="397:75"><call pos:start="397:13" pos:end="397:75"><name pos:start="397:13" pos:end="397:18">av_log</name><argument_list pos:start="397:19" pos:end="397:75">(<argument pos:start="397:20" pos:end="397:27"><expr pos:start="397:20" pos:end="397:27"><name pos:start="397:20" pos:end="397:27"><name pos:start="397:20" pos:end="397:20">s</name><operator pos:start="397:21" pos:end="397:22">-&gt;</operator><name pos:start="397:23" pos:end="397:27">avctx</name></name></expr></argument>, <argument pos:start="397:30" pos:end="397:41"><expr pos:start="397:30" pos:end="397:41"><name pos:start="397:30" pos:end="397:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="397:44" pos:end="397:48"><expr pos:start="397:44" pos:end="397:48"><literal type="string" pos:start="397:44" pos:end="397:48">" %i"</literal></expr></argument>, <argument pos:start="397:51" pos:end="397:74"><expr pos:start="397:51" pos:end="397:74"><name pos:start="397:51" pos:end="397:74"><name pos:start="397:51" pos:end="397:51">s</name><operator pos:start="397:52" pos:end="397:53">-&gt;</operator><name pos:start="397:54" pos:end="397:68">prediction_mode</name><index pos:start="397:69" pos:end="397:71">[<expr pos:start="397:70" pos:end="397:70"><name pos:start="397:70" pos:end="397:70">j</name></expr>]</index><index pos:start="397:72" pos:end="397:74">[<expr pos:start="397:73" pos:end="397:73"><name pos:start="397:73" pos:end="397:73">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="399:9" pos:end="399:45"><expr pos:start="399:9" pos:end="399:44"><call pos:start="399:9" pos:end="399:44"><name pos:start="399:9" pos:end="399:14">av_log</name><argument_list pos:start="399:15" pos:end="399:44">(<argument pos:start="399:16" pos:end="399:23"><expr pos:start="399:16" pos:end="399:23"><name pos:start="399:16" pos:end="399:23"><name pos:start="399:16" pos:end="399:16">s</name><operator pos:start="399:17" pos:end="399:18">-&gt;</operator><name pos:start="399:19" pos:end="399:23">avctx</name></name></expr></argument>, <argument pos:start="399:26" pos:end="399:37"><expr pos:start="399:26" pos:end="399:37"><name pos:start="399:26" pos:end="399:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="399:40" pos:end="399:43"><expr pos:start="399:40" pos:end="399:43"><literal type="string" pos:start="399:40" pos:end="399:43">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="403:5" pos:end="419:5">for <control pos:start="403:9" pos:end="403:53">(<init pos:start="403:10" pos:end="403:26"><expr pos:start="403:10" pos:end="403:25"><name pos:start="403:10" pos:end="403:10">j</name> <operator pos:start="403:12" pos:end="403:12">=</operator> <name pos:start="403:14" pos:end="403:25">base_channel</name></expr>;</init> <condition pos:start="403:28" pos:end="403:48"><expr pos:start="403:28" pos:end="403:47"><name pos:start="403:28" pos:end="403:28">j</name> <operator pos:start="403:30" pos:end="403:30">&lt;</operator> <name pos:start="403:32" pos:end="403:47"><name pos:start="403:32" pos:end="403:32">s</name><operator pos:start="403:33" pos:end="403:34">-&gt;</operator><name pos:start="403:35" pos:end="403:47">prim_channels</name></name></expr>;</condition> <incr pos:start="403:50" pos:end="403:52"><expr pos:start="403:50" pos:end="403:52"><name pos:start="403:50" pos:end="403:50">j</name><operator pos:start="403:51" pos:end="403:52">++</operator></expr></incr>)</control> <block pos:start="403:55" pos:end="419:5">{<block_content pos:start="405:9" pos:end="417:71">

        <for pos:start="405:9" pos:end="417:71">for <control pos:start="405:13" pos:end="405:52">(<init pos:start="405:14" pos:end="405:19"><expr pos:start="405:14" pos:end="405:18"><name pos:start="405:14" pos:end="405:14">k</name> <operator pos:start="405:16" pos:end="405:16">=</operator> <literal type="number" pos:start="405:18" pos:end="405:18">0</literal></expr>;</init> <condition pos:start="405:21" pos:end="405:47"><expr pos:start="405:21" pos:end="405:46"><name pos:start="405:21" pos:end="405:21">k</name> <operator pos:start="405:23" pos:end="405:23">&lt;</operator> <name pos:start="405:25" pos:end="405:46"><name pos:start="405:25" pos:end="405:25">s</name><operator pos:start="405:26" pos:end="405:27">-&gt;</operator><name pos:start="405:28" pos:end="405:43">subband_activity</name><index pos:start="405:44" pos:end="405:46">[<expr pos:start="405:45" pos:end="405:45"><name pos:start="405:45" pos:end="405:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="405:49" pos:end="405:51"><expr pos:start="405:49" pos:end="405:51"><name pos:start="405:49" pos:end="405:49">k</name><operator pos:start="405:50" pos:end="405:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="407:13" pos:end="417:71"><block_content pos:start="407:13" pos:end="417:71">

            <expr_stmt pos:start="407:13" pos:end="417:71"><expr pos:start="407:13" pos:end="417:70"><call pos:start="407:13" pos:end="417:70"><name pos:start="407:13" pos:end="407:18">av_log</name><argument_list pos:start="407:19" pos:end="417:70">(<argument pos:start="407:20" pos:end="407:27"><expr pos:start="407:20" pos:end="407:27"><name pos:start="407:20" pos:end="407:27"><name pos:start="407:20" pos:end="407:20">s</name><operator pos:start="407:21" pos:end="407:22">-&gt;</operator><name pos:start="407:23" pos:end="407:27">avctx</name></name></expr></argument>, <argument pos:start="407:30" pos:end="407:41"><expr pos:start="407:30" pos:end="407:41"><name pos:start="407:30" pos:end="407:41">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="409:20" pos:end="409:55"><expr pos:start="409:20" pos:end="409:55"><literal type="string" pos:start="409:20" pos:end="409:55">"prediction coefs: %f, %f, %f, %f\n"</literal></expr></argument>,

                   <argument pos:start="411:20" pos:end="411:69"><expr pos:start="411:20" pos:end="411:69"><operator pos:start="411:20" pos:end="411:20">(</operator><name pos:start="411:21" pos:end="411:25">float</name><operator pos:start="411:26" pos:end="411:26">)</operator> <name pos:start="411:28" pos:end="411:62"><name pos:start="411:28" pos:end="411:35">adpcm_vb</name><index pos:start="411:36" pos:end="411:59">[<expr pos:start="411:37" pos:end="411:58"><name pos:start="411:37" pos:end="411:58"><name pos:start="411:37" pos:end="411:37">s</name><operator pos:start="411:38" pos:end="411:39">-&gt;</operator><name pos:start="411:40" pos:end="411:52">prediction_vq</name><index pos:start="411:53" pos:end="411:55">[<expr pos:start="411:54" pos:end="411:54"><name pos:start="411:54" pos:end="411:54">j</name></expr>]</index><index pos:start="411:56" pos:end="411:58">[<expr pos:start="411:57" pos:end="411:57"><name pos:start="411:57" pos:end="411:57">k</name></expr>]</index></name></expr>]</index><index pos:start="411:60" pos:end="411:62">[<expr pos:start="411:61" pos:end="411:61"><literal type="number" pos:start="411:61" pos:end="411:61">0</literal></expr>]</index></name> <operator pos:start="411:64" pos:end="411:64">/</operator> <literal type="number" pos:start="411:66" pos:end="411:69">8192</literal></expr></argument>,

                   <argument pos:start="413:20" pos:end="413:69"><expr pos:start="413:20" pos:end="413:69"><operator pos:start="413:20" pos:end="413:20">(</operator><name pos:start="413:21" pos:end="413:25">float</name><operator pos:start="413:26" pos:end="413:26">)</operator> <name pos:start="413:28" pos:end="413:62"><name pos:start="413:28" pos:end="413:35">adpcm_vb</name><index pos:start="413:36" pos:end="413:59">[<expr pos:start="413:37" pos:end="413:58"><name pos:start="413:37" pos:end="413:58"><name pos:start="413:37" pos:end="413:37">s</name><operator pos:start="413:38" pos:end="413:39">-&gt;</operator><name pos:start="413:40" pos:end="413:52">prediction_vq</name><index pos:start="413:53" pos:end="413:55">[<expr pos:start="413:54" pos:end="413:54"><name pos:start="413:54" pos:end="413:54">j</name></expr>]</index><index pos:start="413:56" pos:end="413:58">[<expr pos:start="413:57" pos:end="413:57"><name pos:start="413:57" pos:end="413:57">k</name></expr>]</index></name></expr>]</index><index pos:start="413:60" pos:end="413:62">[<expr pos:start="413:61" pos:end="413:61"><literal type="number" pos:start="413:61" pos:end="413:61">1</literal></expr>]</index></name> <operator pos:start="413:64" pos:end="413:64">/</operator> <literal type="number" pos:start="413:66" pos:end="413:69">8192</literal></expr></argument>,

                   <argument pos:start="415:20" pos:end="415:69"><expr pos:start="415:20" pos:end="415:69"><operator pos:start="415:20" pos:end="415:20">(</operator><name pos:start="415:21" pos:end="415:25">float</name><operator pos:start="415:26" pos:end="415:26">)</operator> <name pos:start="415:28" pos:end="415:62"><name pos:start="415:28" pos:end="415:35">adpcm_vb</name><index pos:start="415:36" pos:end="415:59">[<expr pos:start="415:37" pos:end="415:58"><name pos:start="415:37" pos:end="415:58"><name pos:start="415:37" pos:end="415:37">s</name><operator pos:start="415:38" pos:end="415:39">-&gt;</operator><name pos:start="415:40" pos:end="415:52">prediction_vq</name><index pos:start="415:53" pos:end="415:55">[<expr pos:start="415:54" pos:end="415:54"><name pos:start="415:54" pos:end="415:54">j</name></expr>]</index><index pos:start="415:56" pos:end="415:58">[<expr pos:start="415:57" pos:end="415:57"><name pos:start="415:57" pos:end="415:57">k</name></expr>]</index></name></expr>]</index><index pos:start="415:60" pos:end="415:62">[<expr pos:start="415:61" pos:end="415:61"><literal type="number" pos:start="415:61" pos:end="415:61">2</literal></expr>]</index></name> <operator pos:start="415:64" pos:end="415:64">/</operator> <literal type="number" pos:start="415:66" pos:end="415:69">8192</literal></expr></argument>,

                   <argument pos:start="417:20" pos:end="417:69"><expr pos:start="417:20" pos:end="417:69"><operator pos:start="417:20" pos:end="417:20">(</operator><name pos:start="417:21" pos:end="417:25">float</name><operator pos:start="417:26" pos:end="417:26">)</operator> <name pos:start="417:28" pos:end="417:62"><name pos:start="417:28" pos:end="417:35">adpcm_vb</name><index pos:start="417:36" pos:end="417:59">[<expr pos:start="417:37" pos:end="417:58"><name pos:start="417:37" pos:end="417:58"><name pos:start="417:37" pos:end="417:37">s</name><operator pos:start="417:38" pos:end="417:39">-&gt;</operator><name pos:start="417:40" pos:end="417:52">prediction_vq</name><index pos:start="417:53" pos:end="417:55">[<expr pos:start="417:54" pos:end="417:54"><name pos:start="417:54" pos:end="417:54">j</name></expr>]</index><index pos:start="417:56" pos:end="417:58">[<expr pos:start="417:57" pos:end="417:57"><name pos:start="417:57" pos:end="417:57">k</name></expr>]</index></name></expr>]</index><index pos:start="417:60" pos:end="417:62">[<expr pos:start="417:61" pos:end="417:61"><literal type="number" pos:start="417:61" pos:end="417:61">3</literal></expr>]</index></name> <operator pos:start="417:64" pos:end="417:64">/</operator> <literal type="number" pos:start="417:66" pos:end="417:69">8192</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for>

    <for pos:start="421:5" pos:end="431:5">for <control pos:start="421:9" pos:end="421:53">(<init pos:start="421:10" pos:end="421:26"><expr pos:start="421:10" pos:end="421:25"><name pos:start="421:10" pos:end="421:10">j</name> <operator pos:start="421:12" pos:end="421:12">=</operator> <name pos:start="421:14" pos:end="421:25">base_channel</name></expr>;</init> <condition pos:start="421:28" pos:end="421:48"><expr pos:start="421:28" pos:end="421:47"><name pos:start="421:28" pos:end="421:28">j</name> <operator pos:start="421:30" pos:end="421:30">&lt;</operator> <name pos:start="421:32" pos:end="421:47"><name pos:start="421:32" pos:end="421:32">s</name><operator pos:start="421:33" pos:end="421:34">-&gt;</operator><name pos:start="421:35" pos:end="421:47">prim_channels</name></name></expr>;</condition> <incr pos:start="421:50" pos:end="421:52"><expr pos:start="421:50" pos:end="421:52"><name pos:start="421:50" pos:end="421:50">j</name><operator pos:start="421:51" pos:end="421:52">++</operator></expr></incr>)</control> <block pos:start="421:55" pos:end="431:5">{<block_content pos:start="423:9" pos:end="429:45">

        <expr_stmt pos:start="423:9" pos:end="423:59"><expr pos:start="423:9" pos:end="423:58"><call pos:start="423:9" pos:end="423:58"><name pos:start="423:9" pos:end="423:14">av_log</name><argument_list pos:start="423:15" pos:end="423:58">(<argument pos:start="423:16" pos:end="423:23"><expr pos:start="423:16" pos:end="423:23"><name pos:start="423:16" pos:end="423:23"><name pos:start="423:16" pos:end="423:16">s</name><operator pos:start="423:17" pos:end="423:18">-&gt;</operator><name pos:start="423:19" pos:end="423:23">avctx</name></name></expr></argument>, <argument pos:start="423:26" pos:end="423:37"><expr pos:start="423:26" pos:end="423:37"><name pos:start="423:26" pos:end="423:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="423:40" pos:end="423:57"><expr pos:start="423:40" pos:end="423:57"><literal type="string" pos:start="423:40" pos:end="423:57">"bitalloc index: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="425:9" pos:end="427:72">for <control pos:start="425:13" pos:end="425:52">(<init pos:start="425:14" pos:end="425:19"><expr pos:start="425:14" pos:end="425:18"><name pos:start="425:14" pos:end="425:14">k</name> <operator pos:start="425:16" pos:end="425:16">=</operator> <literal type="number" pos:start="425:18" pos:end="425:18">0</literal></expr>;</init> <condition pos:start="425:21" pos:end="425:47"><expr pos:start="425:21" pos:end="425:46"><name pos:start="425:21" pos:end="425:21">k</name> <operator pos:start="425:23" pos:end="425:23">&lt;</operator> <name pos:start="425:25" pos:end="425:46"><name pos:start="425:25" pos:end="425:25">s</name><operator pos:start="425:26" pos:end="425:27">-&gt;</operator><name pos:start="425:28" pos:end="425:43">vq_start_subband</name><index pos:start="425:44" pos:end="425:46">[<expr pos:start="425:45" pos:end="425:45"><name pos:start="425:45" pos:end="425:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="425:49" pos:end="425:51"><expr pos:start="425:49" pos:end="425:51"><name pos:start="425:49" pos:end="425:49">k</name><operator pos:start="425:50" pos:end="425:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="427:13" pos:end="427:72"><block_content pos:start="427:13" pos:end="427:72">

            <expr_stmt pos:start="427:13" pos:end="427:72"><expr pos:start="427:13" pos:end="427:71"><call pos:start="427:13" pos:end="427:71"><name pos:start="427:13" pos:end="427:18">av_log</name><argument_list pos:start="427:19" pos:end="427:71">(<argument pos:start="427:20" pos:end="427:27"><expr pos:start="427:20" pos:end="427:27"><name pos:start="427:20" pos:end="427:27"><name pos:start="427:20" pos:end="427:20">s</name><operator pos:start="427:21" pos:end="427:22">-&gt;</operator><name pos:start="427:23" pos:end="427:27">avctx</name></name></expr></argument>, <argument pos:start="427:30" pos:end="427:41"><expr pos:start="427:30" pos:end="427:41"><name pos:start="427:30" pos:end="427:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="427:44" pos:end="427:51"><expr pos:start="427:44" pos:end="427:51"><literal type="string" pos:start="427:44" pos:end="427:51">"%2.2i "</literal></expr></argument>, <argument pos:start="427:54" pos:end="427:70"><expr pos:start="427:54" pos:end="427:70"><name pos:start="427:54" pos:end="427:70"><name pos:start="427:54" pos:end="427:54">s</name><operator pos:start="427:55" pos:end="427:56">-&gt;</operator><name pos:start="427:57" pos:end="427:64">bitalloc</name><index pos:start="427:65" pos:end="427:67">[<expr pos:start="427:66" pos:end="427:66"><name pos:start="427:66" pos:end="427:66">j</name></expr>]</index><index pos:start="427:68" pos:end="427:70">[<expr pos:start="427:69" pos:end="427:69"><name pos:start="427:69" pos:end="427:69">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="429:9" pos:end="429:45"><expr pos:start="429:9" pos:end="429:44"><call pos:start="429:9" pos:end="429:44"><name pos:start="429:9" pos:end="429:14">av_log</name><argument_list pos:start="429:15" pos:end="429:44">(<argument pos:start="429:16" pos:end="429:23"><expr pos:start="429:16" pos:end="429:23"><name pos:start="429:16" pos:end="429:23"><name pos:start="429:16" pos:end="429:16">s</name><operator pos:start="429:17" pos:end="429:18">-&gt;</operator><name pos:start="429:19" pos:end="429:23">avctx</name></name></expr></argument>, <argument pos:start="429:26" pos:end="429:37"><expr pos:start="429:26" pos:end="429:37"><name pos:start="429:26" pos:end="429:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="429:40" pos:end="429:43"><expr pos:start="429:40" pos:end="429:43"><literal type="string" pos:start="429:40" pos:end="429:43">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="433:5" pos:end="443:5">for <control pos:start="433:9" pos:end="433:53">(<init pos:start="433:10" pos:end="433:26"><expr pos:start="433:10" pos:end="433:25"><name pos:start="433:10" pos:end="433:10">j</name> <operator pos:start="433:12" pos:end="433:12">=</operator> <name pos:start="433:14" pos:end="433:25">base_channel</name></expr>;</init> <condition pos:start="433:28" pos:end="433:48"><expr pos:start="433:28" pos:end="433:47"><name pos:start="433:28" pos:end="433:28">j</name> <operator pos:start="433:30" pos:end="433:30">&lt;</operator> <name pos:start="433:32" pos:end="433:47"><name pos:start="433:32" pos:end="433:32">s</name><operator pos:start="433:33" pos:end="433:34">-&gt;</operator><name pos:start="433:35" pos:end="433:47">prim_channels</name></name></expr>;</condition> <incr pos:start="433:50" pos:end="433:52"><expr pos:start="433:50" pos:end="433:52"><name pos:start="433:50" pos:end="433:50">j</name><operator pos:start="433:51" pos:end="433:52">++</operator></expr></incr>)</control> <block pos:start="433:55" pos:end="443:5">{<block_content pos:start="435:9" pos:end="441:45">

        <expr_stmt pos:start="435:9" pos:end="435:59"><expr pos:start="435:9" pos:end="435:58"><call pos:start="435:9" pos:end="435:58"><name pos:start="435:9" pos:end="435:14">av_log</name><argument_list pos:start="435:15" pos:end="435:58">(<argument pos:start="435:16" pos:end="435:23"><expr pos:start="435:16" pos:end="435:23"><name pos:start="435:16" pos:end="435:23"><name pos:start="435:16" pos:end="435:16">s</name><operator pos:start="435:17" pos:end="435:18">-&gt;</operator><name pos:start="435:19" pos:end="435:23">avctx</name></name></expr></argument>, <argument pos:start="435:26" pos:end="435:37"><expr pos:start="435:26" pos:end="435:37"><name pos:start="435:26" pos:end="435:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="435:40" pos:end="435:57"><expr pos:start="435:40" pos:end="435:57"><literal type="string" pos:start="435:40" pos:end="435:57">"Transition mode:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="437:9" pos:end="439:76">for <control pos:start="437:13" pos:end="437:52">(<init pos:start="437:14" pos:end="437:19"><expr pos:start="437:14" pos:end="437:18"><name pos:start="437:14" pos:end="437:14">k</name> <operator pos:start="437:16" pos:end="437:16">=</operator> <literal type="number" pos:start="437:18" pos:end="437:18">0</literal></expr>;</init> <condition pos:start="437:21" pos:end="437:47"><expr pos:start="437:21" pos:end="437:46"><name pos:start="437:21" pos:end="437:21">k</name> <operator pos:start="437:23" pos:end="437:23">&lt;</operator> <name pos:start="437:25" pos:end="437:46"><name pos:start="437:25" pos:end="437:25">s</name><operator pos:start="437:26" pos:end="437:27">-&gt;</operator><name pos:start="437:28" pos:end="437:43">subband_activity</name><index pos:start="437:44" pos:end="437:46">[<expr pos:start="437:45" pos:end="437:45"><name pos:start="437:45" pos:end="437:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="437:49" pos:end="437:51"><expr pos:start="437:49" pos:end="437:51"><name pos:start="437:49" pos:end="437:49">k</name><operator pos:start="437:50" pos:end="437:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="439:13" pos:end="439:76"><block_content pos:start="439:13" pos:end="439:76">

            <expr_stmt pos:start="439:13" pos:end="439:76"><expr pos:start="439:13" pos:end="439:75"><call pos:start="439:13" pos:end="439:75"><name pos:start="439:13" pos:end="439:18">av_log</name><argument_list pos:start="439:19" pos:end="439:75">(<argument pos:start="439:20" pos:end="439:27"><expr pos:start="439:20" pos:end="439:27"><name pos:start="439:20" pos:end="439:27"><name pos:start="439:20" pos:end="439:20">s</name><operator pos:start="439:21" pos:end="439:22">-&gt;</operator><name pos:start="439:23" pos:end="439:27">avctx</name></name></expr></argument>, <argument pos:start="439:30" pos:end="439:41"><expr pos:start="439:30" pos:end="439:41"><name pos:start="439:30" pos:end="439:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="439:44" pos:end="439:48"><expr pos:start="439:44" pos:end="439:48"><literal type="string" pos:start="439:44" pos:end="439:48">" %i"</literal></expr></argument>, <argument pos:start="439:51" pos:end="439:74"><expr pos:start="439:51" pos:end="439:74"><name pos:start="439:51" pos:end="439:74"><name pos:start="439:51" pos:end="439:51">s</name><operator pos:start="439:52" pos:end="439:53">-&gt;</operator><name pos:start="439:54" pos:end="439:68">transition_mode</name><index pos:start="439:69" pos:end="439:71">[<expr pos:start="439:70" pos:end="439:70"><name pos:start="439:70" pos:end="439:70">j</name></expr>]</index><index pos:start="439:72" pos:end="439:74">[<expr pos:start="439:73" pos:end="439:73"><name pos:start="439:73" pos:end="439:73">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="441:9" pos:end="441:45"><expr pos:start="441:9" pos:end="441:44"><call pos:start="441:9" pos:end="441:44"><name pos:start="441:9" pos:end="441:14">av_log</name><argument_list pos:start="441:15" pos:end="441:44">(<argument pos:start="441:16" pos:end="441:23"><expr pos:start="441:16" pos:end="441:23"><name pos:start="441:16" pos:end="441:23"><name pos:start="441:16" pos:end="441:16">s</name><operator pos:start="441:17" pos:end="441:18">-&gt;</operator><name pos:start="441:19" pos:end="441:23">avctx</name></name></expr></argument>, <argument pos:start="441:26" pos:end="441:37"><expr pos:start="441:26" pos:end="441:37"><name pos:start="441:26" pos:end="441:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="441:40" pos:end="441:43"><expr pos:start="441:40" pos:end="441:43"><literal type="string" pos:start="441:40" pos:end="441:43">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="445:5" pos:end="463:5">for <control pos:start="445:9" pos:end="445:53">(<init pos:start="445:10" pos:end="445:26"><expr pos:start="445:10" pos:end="445:25"><name pos:start="445:10" pos:end="445:10">j</name> <operator pos:start="445:12" pos:end="445:12">=</operator> <name pos:start="445:14" pos:end="445:25">base_channel</name></expr>;</init> <condition pos:start="445:28" pos:end="445:48"><expr pos:start="445:28" pos:end="445:47"><name pos:start="445:28" pos:end="445:28">j</name> <operator pos:start="445:30" pos:end="445:30">&lt;</operator> <name pos:start="445:32" pos:end="445:47"><name pos:start="445:32" pos:end="445:32">s</name><operator pos:start="445:33" pos:end="445:34">-&gt;</operator><name pos:start="445:35" pos:end="445:47">prim_channels</name></name></expr>;</condition> <incr pos:start="445:50" pos:end="445:52"><expr pos:start="445:50" pos:end="445:52"><name pos:start="445:50" pos:end="445:50">j</name><operator pos:start="445:51" pos:end="445:52">++</operator></expr></incr>)</control> <block pos:start="445:55" pos:end="463:5">{<block_content pos:start="447:9" pos:end="461:45">

        <expr_stmt pos:start="447:9" pos:end="447:56"><expr pos:start="447:9" pos:end="447:55"><call pos:start="447:9" pos:end="447:55"><name pos:start="447:9" pos:end="447:14">av_log</name><argument_list pos:start="447:15" pos:end="447:55">(<argument pos:start="447:16" pos:end="447:23"><expr pos:start="447:16" pos:end="447:23"><name pos:start="447:16" pos:end="447:23"><name pos:start="447:16" pos:end="447:16">s</name><operator pos:start="447:17" pos:end="447:18">-&gt;</operator><name pos:start="447:19" pos:end="447:23">avctx</name></name></expr></argument>, <argument pos:start="447:26" pos:end="447:37"><expr pos:start="447:26" pos:end="447:37"><name pos:start="447:26" pos:end="447:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="447:40" pos:end="447:54"><expr pos:start="447:40" pos:end="447:54"><literal type="string" pos:start="447:40" pos:end="447:54">"Scale factor:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="449:9" pos:end="459:9">for <control pos:start="449:13" pos:end="449:52">(<init pos:start="449:14" pos:end="449:19"><expr pos:start="449:14" pos:end="449:18"><name pos:start="449:14" pos:end="449:14">k</name> <operator pos:start="449:16" pos:end="449:16">=</operator> <literal type="number" pos:start="449:18" pos:end="449:18">0</literal></expr>;</init> <condition pos:start="449:21" pos:end="449:47"><expr pos:start="449:21" pos:end="449:46"><name pos:start="449:21" pos:end="449:21">k</name> <operator pos:start="449:23" pos:end="449:23">&lt;</operator> <name pos:start="449:25" pos:end="449:46"><name pos:start="449:25" pos:end="449:25">s</name><operator pos:start="449:26" pos:end="449:27">-&gt;</operator><name pos:start="449:28" pos:end="449:43">subband_activity</name><index pos:start="449:44" pos:end="449:46">[<expr pos:start="449:45" pos:end="449:45"><name pos:start="449:45" pos:end="449:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="449:49" pos:end="449:51"><expr pos:start="449:49" pos:end="449:51"><name pos:start="449:49" pos:end="449:49">k</name><operator pos:start="449:50" pos:end="449:51">++</operator></expr></incr>)</control> <block pos:start="449:54" pos:end="459:9">{<block_content pos:start="451:13" pos:end="457:83">

            <if_stmt pos:start="451:13" pos:end="453:80"><if pos:start="451:13" pos:end="453:80">if <condition pos:start="451:16" pos:end="451:69">(<expr pos:start="451:17" pos:end="451:68"><name pos:start="451:17" pos:end="451:17">k</name> <operator pos:start="451:19" pos:end="451:20">&gt;=</operator> <name pos:start="451:22" pos:end="451:43"><name pos:start="451:22" pos:end="451:22">s</name><operator pos:start="451:23" pos:end="451:24">-&gt;</operator><name pos:start="451:25" pos:end="451:40">vq_start_subband</name><index pos:start="451:41" pos:end="451:43">[<expr pos:start="451:42" pos:end="451:42"><name pos:start="451:42" pos:end="451:42">j</name></expr>]</index></name> <operator pos:start="451:45" pos:end="451:46">||</operator> <name pos:start="451:48" pos:end="451:64"><name pos:start="451:48" pos:end="451:48">s</name><operator pos:start="451:49" pos:end="451:50">-&gt;</operator><name pos:start="451:51" pos:end="451:58">bitalloc</name><index pos:start="451:59" pos:end="451:61">[<expr pos:start="451:60" pos:end="451:60"><name pos:start="451:60" pos:end="451:60">j</name></expr>]</index><index pos:start="451:62" pos:end="451:64">[<expr pos:start="451:63" pos:end="451:63"><name pos:start="451:63" pos:end="451:63">k</name></expr>]</index></name> <operator pos:start="451:66" pos:end="451:66">&gt;</operator> <literal type="number" pos:start="451:68" pos:end="451:68">0</literal></expr>)</condition><block type="pseudo" pos:start="453:17" pos:end="453:80"><block_content pos:start="453:17" pos:end="453:80">

                <expr_stmt pos:start="453:17" pos:end="453:80"><expr pos:start="453:17" pos:end="453:79"><call pos:start="453:17" pos:end="453:79"><name pos:start="453:17" pos:end="453:22">av_log</name><argument_list pos:start="453:23" pos:end="453:79">(<argument pos:start="453:24" pos:end="453:31"><expr pos:start="453:24" pos:end="453:31"><name pos:start="453:24" pos:end="453:31"><name pos:start="453:24" pos:end="453:24">s</name><operator pos:start="453:25" pos:end="453:26">-&gt;</operator><name pos:start="453:27" pos:end="453:31">avctx</name></name></expr></argument>, <argument pos:start="453:34" pos:end="453:45"><expr pos:start="453:34" pos:end="453:45"><name pos:start="453:34" pos:end="453:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="453:48" pos:end="453:52"><expr pos:start="453:48" pos:end="453:52"><literal type="string" pos:start="453:48" pos:end="453:52">" %i"</literal></expr></argument>, <argument pos:start="453:55" pos:end="453:78"><expr pos:start="453:55" pos:end="453:78"><name pos:start="453:55" pos:end="453:78"><name pos:start="453:55" pos:end="453:55">s</name><operator pos:start="453:56" pos:end="453:57">-&gt;</operator><name pos:start="453:58" pos:end="453:69">scale_factor</name><index pos:start="453:70" pos:end="453:72">[<expr pos:start="453:71" pos:end="453:71"><name pos:start="453:71" pos:end="453:71">j</name></expr>]</index><index pos:start="453:73" pos:end="453:75">[<expr pos:start="453:74" pos:end="453:74"><name pos:start="453:74" pos:end="453:74">k</name></expr>]</index><index pos:start="453:76" pos:end="453:78">[<expr pos:start="453:77" pos:end="453:77"><literal type="number" pos:start="453:77" pos:end="453:77">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="455:13" pos:end="457:83"><if pos:start="455:13" pos:end="457:83">if <condition pos:start="455:16" pos:end="455:71">(<expr pos:start="455:17" pos:end="455:70"><name pos:start="455:17" pos:end="455:17">k</name> <operator pos:start="455:19" pos:end="455:19">&lt;</operator> <name pos:start="455:21" pos:end="455:42"><name pos:start="455:21" pos:end="455:21">s</name><operator pos:start="455:22" pos:end="455:23">-&gt;</operator><name pos:start="455:24" pos:end="455:39">vq_start_subband</name><index pos:start="455:40" pos:end="455:42">[<expr pos:start="455:41" pos:end="455:41"><name pos:start="455:41" pos:end="455:41">j</name></expr>]</index></name> <operator pos:start="455:44" pos:end="455:45">&amp;&amp;</operator> <name pos:start="455:47" pos:end="455:70"><name pos:start="455:47" pos:end="455:47">s</name><operator pos:start="455:48" pos:end="455:49">-&gt;</operator><name pos:start="455:50" pos:end="455:64">transition_mode</name><index pos:start="455:65" pos:end="455:67">[<expr pos:start="455:66" pos:end="455:66"><name pos:start="455:66" pos:end="455:66">j</name></expr>]</index><index pos:start="455:68" pos:end="455:70">[<expr pos:start="455:69" pos:end="455:69"><name pos:start="455:69" pos:end="455:69">k</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="457:17" pos:end="457:83"><block_content pos:start="457:17" pos:end="457:83">

                <expr_stmt pos:start="457:17" pos:end="457:83"><expr pos:start="457:17" pos:end="457:82"><call pos:start="457:17" pos:end="457:82"><name pos:start="457:17" pos:end="457:22">av_log</name><argument_list pos:start="457:23" pos:end="457:82">(<argument pos:start="457:24" pos:end="457:31"><expr pos:start="457:24" pos:end="457:31"><name pos:start="457:24" pos:end="457:31"><name pos:start="457:24" pos:end="457:24">s</name><operator pos:start="457:25" pos:end="457:26">-&gt;</operator><name pos:start="457:27" pos:end="457:31">avctx</name></name></expr></argument>, <argument pos:start="457:34" pos:end="457:45"><expr pos:start="457:34" pos:end="457:45"><name pos:start="457:34" pos:end="457:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="457:48" pos:end="457:55"><expr pos:start="457:48" pos:end="457:55"><literal type="string" pos:start="457:48" pos:end="457:55">" %i(t)"</literal></expr></argument>, <argument pos:start="457:58" pos:end="457:81"><expr pos:start="457:58" pos:end="457:81"><name pos:start="457:58" pos:end="457:81"><name pos:start="457:58" pos:end="457:58">s</name><operator pos:start="457:59" pos:end="457:60">-&gt;</operator><name pos:start="457:61" pos:end="457:72">scale_factor</name><index pos:start="457:73" pos:end="457:75">[<expr pos:start="457:74" pos:end="457:74"><name pos:start="457:74" pos:end="457:74">j</name></expr>]</index><index pos:start="457:76" pos:end="457:78">[<expr pos:start="457:77" pos:end="457:77"><name pos:start="457:77" pos:end="457:77">k</name></expr>]</index><index pos:start="457:79" pos:end="457:81">[<expr pos:start="457:80" pos:end="457:80"><literal type="number" pos:start="457:80" pos:end="457:80">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="461:9" pos:end="461:45"><expr pos:start="461:9" pos:end="461:44"><call pos:start="461:9" pos:end="461:44"><name pos:start="461:9" pos:end="461:14">av_log</name><argument_list pos:start="461:15" pos:end="461:44">(<argument pos:start="461:16" pos:end="461:23"><expr pos:start="461:16" pos:end="461:23"><name pos:start="461:16" pos:end="461:23"><name pos:start="461:16" pos:end="461:16">s</name><operator pos:start="461:17" pos:end="461:18">-&gt;</operator><name pos:start="461:19" pos:end="461:23">avctx</name></name></expr></argument>, <argument pos:start="461:26" pos:end="461:37"><expr pos:start="461:26" pos:end="461:37"><name pos:start="461:26" pos:end="461:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="461:40" pos:end="461:43"><expr pos:start="461:40" pos:end="461:43"><literal type="string" pos:start="461:40" pos:end="461:43">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="465:5" pos:end="481:5">for <control pos:start="465:9" pos:end="465:53">(<init pos:start="465:10" pos:end="465:26"><expr pos:start="465:10" pos:end="465:25"><name pos:start="465:10" pos:end="465:10">j</name> <operator pos:start="465:12" pos:end="465:12">=</operator> <name pos:start="465:14" pos:end="465:25">base_channel</name></expr>;</init> <condition pos:start="465:28" pos:end="465:48"><expr pos:start="465:28" pos:end="465:47"><name pos:start="465:28" pos:end="465:28">j</name> <operator pos:start="465:30" pos:end="465:30">&lt;</operator> <name pos:start="465:32" pos:end="465:47"><name pos:start="465:32" pos:end="465:32">s</name><operator pos:start="465:33" pos:end="465:34">-&gt;</operator><name pos:start="465:35" pos:end="465:47">prim_channels</name></name></expr>;</condition> <incr pos:start="465:50" pos:end="465:52"><expr pos:start="465:50" pos:end="465:52"><name pos:start="465:50" pos:end="465:50">j</name><operator pos:start="465:51" pos:end="465:52">++</operator></expr></incr>)</control> <block pos:start="465:55" pos:end="481:5">{<block_content pos:start="467:9" pos:end="479:9">

        <if_stmt pos:start="467:9" pos:end="479:9"><if pos:start="467:9" pos:end="479:9">if <condition pos:start="467:12" pos:end="467:38">(<expr pos:start="467:13" pos:end="467:37"><name pos:start="467:13" pos:end="467:33"><name pos:start="467:13" pos:end="467:13">s</name><operator pos:start="467:14" pos:end="467:15">-&gt;</operator><name pos:start="467:16" pos:end="467:30">joint_intensity</name><index pos:start="467:31" pos:end="467:33">[<expr pos:start="467:32" pos:end="467:32"><name pos:start="467:32" pos:end="467:32">j</name></expr>]</index></name> <operator pos:start="467:35" pos:end="467:35">&gt;</operator> <literal type="number" pos:start="467:37" pos:end="467:37">0</literal></expr>)</condition> <block pos:start="467:40" pos:end="479:9">{<block_content pos:start="469:13" pos:end="477:49">

            <decl_stmt pos:start="469:13" pos:end="469:59"><decl pos:start="469:13" pos:end="469:58"><type pos:start="469:13" pos:end="469:15"><name pos:start="469:13" pos:end="469:15">int</name></type> <name pos:start="469:17" pos:end="469:30">source_channel</name> <init pos:start="469:32" pos:end="469:58">= <expr pos:start="469:34" pos:end="469:58"><name pos:start="469:34" pos:end="469:54"><name pos:start="469:34" pos:end="469:34">s</name><operator pos:start="469:35" pos:end="469:36">-&gt;</operator><name pos:start="469:37" pos:end="469:51">joint_intensity</name><index pos:start="469:52" pos:end="469:54">[<expr pos:start="469:53" pos:end="469:53"><name pos:start="469:53" pos:end="469:53">j</name></expr>]</index></name> <operator pos:start="469:56" pos:end="469:56">-</operator> <literal type="number" pos:start="469:58" pos:end="469:58">1</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="471:13" pos:end="471:74"><expr pos:start="471:13" pos:end="471:73"><call pos:start="471:13" pos:end="471:73"><name pos:start="471:13" pos:end="471:18">av_log</name><argument_list pos:start="471:19" pos:end="471:73">(<argument pos:start="471:20" pos:end="471:27"><expr pos:start="471:20" pos:end="471:27"><name pos:start="471:20" pos:end="471:27"><name pos:start="471:20" pos:end="471:20">s</name><operator pos:start="471:21" pos:end="471:22">-&gt;</operator><name pos:start="471:23" pos:end="471:27">avctx</name></name></expr></argument>, <argument pos:start="471:30" pos:end="471:41"><expr pos:start="471:30" pos:end="471:41"><name pos:start="471:30" pos:end="471:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="471:44" pos:end="471:72"><expr pos:start="471:44" pos:end="471:72"><literal type="string" pos:start="471:44" pos:end="471:72">"Joint scale factor index:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="473:13" pos:end="475:83">for <control pos:start="473:17" pos:end="473:90">(<init pos:start="473:18" pos:end="473:44"><expr pos:start="473:18" pos:end="473:43"><name pos:start="473:18" pos:end="473:18">k</name> <operator pos:start="473:20" pos:end="473:20">=</operator> <name pos:start="473:22" pos:end="473:43"><name pos:start="473:22" pos:end="473:22">s</name><operator pos:start="473:23" pos:end="473:24">-&gt;</operator><name pos:start="473:25" pos:end="473:40">subband_activity</name><index pos:start="473:41" pos:end="473:43">[<expr pos:start="473:42" pos:end="473:42"><name pos:start="473:42" pos:end="473:42">j</name></expr>]</index></name></expr>;</init> <condition pos:start="473:46" pos:end="473:85"><expr pos:start="473:46" pos:end="473:84"><name pos:start="473:46" pos:end="473:46">k</name> <operator pos:start="473:48" pos:end="473:48">&lt;</operator> <name pos:start="473:50" pos:end="473:84"><name pos:start="473:50" pos:end="473:50">s</name><operator pos:start="473:51" pos:end="473:52">-&gt;</operator><name pos:start="473:53" pos:end="473:68">subband_activity</name><index pos:start="473:69" pos:end="473:84">[<expr pos:start="473:70" pos:end="473:83"><name pos:start="473:70" pos:end="473:83">source_channel</name></expr>]</index></name></expr>;</condition> <incr pos:start="473:87" pos:end="473:89"><expr pos:start="473:87" pos:end="473:89"><name pos:start="473:87" pos:end="473:87">k</name><operator pos:start="473:88" pos:end="473:89">++</operator></expr></incr>)</control><block type="pseudo" pos:start="475:17" pos:end="475:83"><block_content pos:start="475:17" pos:end="475:83">

                <expr_stmt pos:start="475:17" pos:end="475:83"><expr pos:start="475:17" pos:end="475:82"><call pos:start="475:17" pos:end="475:82"><name pos:start="475:17" pos:end="475:22">av_log</name><argument_list pos:start="475:23" pos:end="475:82">(<argument pos:start="475:24" pos:end="475:31"><expr pos:start="475:24" pos:end="475:31"><name pos:start="475:24" pos:end="475:31"><name pos:start="475:24" pos:end="475:24">s</name><operator pos:start="475:25" pos:end="475:26">-&gt;</operator><name pos:start="475:27" pos:end="475:31">avctx</name></name></expr></argument>, <argument pos:start="475:34" pos:end="475:45"><expr pos:start="475:34" pos:end="475:45"><name pos:start="475:34" pos:end="475:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="475:48" pos:end="475:52"><expr pos:start="475:48" pos:end="475:52"><literal type="string" pos:start="475:48" pos:end="475:52">" %i"</literal></expr></argument>, <argument pos:start="475:55" pos:end="475:81"><expr pos:start="475:55" pos:end="475:81"><name pos:start="475:55" pos:end="475:81"><name pos:start="475:55" pos:end="475:55">s</name><operator pos:start="475:56" pos:end="475:57">-&gt;</operator><name pos:start="475:58" pos:end="475:75">joint_scale_factor</name><index pos:start="475:76" pos:end="475:78">[<expr pos:start="475:77" pos:end="475:77"><name pos:start="475:77" pos:end="475:77">j</name></expr>]</index><index pos:start="475:79" pos:end="475:81">[<expr pos:start="475:80" pos:end="475:80"><name pos:start="475:80" pos:end="475:80">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="477:13" pos:end="477:49"><expr pos:start="477:13" pos:end="477:48"><call pos:start="477:13" pos:end="477:48"><name pos:start="477:13" pos:end="477:18">av_log</name><argument_list pos:start="477:19" pos:end="477:48">(<argument pos:start="477:20" pos:end="477:27"><expr pos:start="477:20" pos:end="477:27"><name pos:start="477:20" pos:end="477:27"><name pos:start="477:20" pos:end="477:20">s</name><operator pos:start="477:21" pos:end="477:22">-&gt;</operator><name pos:start="477:23" pos:end="477:27">avctx</name></name></expr></argument>, <argument pos:start="477:30" pos:end="477:41"><expr pos:start="477:30" pos:end="477:41"><name pos:start="477:30" pos:end="477:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="477:44" pos:end="477:47"><expr pos:start="477:44" pos:end="477:47"><literal type="string" pos:start="477:44" pos:end="477:47">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="483:5" pos:end="501:5"><if pos:start="483:5" pos:end="501:5">if <condition pos:start="483:8" pos:end="483:60">(<expr pos:start="483:9" pos:end="483:59"><operator pos:start="483:9" pos:end="483:9">!</operator><name pos:start="483:10" pos:end="483:21">base_channel</name> <operator pos:start="483:23" pos:end="483:24">&amp;&amp;</operator> <name pos:start="483:26" pos:end="483:41"><name pos:start="483:26" pos:end="483:26">s</name><operator pos:start="483:27" pos:end="483:28">-&gt;</operator><name pos:start="483:29" pos:end="483:41">prim_channels</name></name> <operator pos:start="483:43" pos:end="483:43">&gt;</operator> <literal type="number" pos:start="483:45" pos:end="483:45">2</literal> <operator pos:start="483:47" pos:end="483:48">&amp;&amp;</operator> <name pos:start="483:50" pos:end="483:59"><name pos:start="483:50" pos:end="483:50">s</name><operator pos:start="483:51" pos:end="483:52">-&gt;</operator><name pos:start="483:53" pos:end="483:59">downmix</name></name></expr>)</condition> <block pos:start="483:62" pos:end="501:5">{<block_content pos:start="485:9" pos:end="499:45">

        <expr_stmt pos:start="485:9" pos:end="485:60"><expr pos:start="485:9" pos:end="485:59"><call pos:start="485:9" pos:end="485:59"><name pos:start="485:9" pos:end="485:14">av_log</name><argument_list pos:start="485:15" pos:end="485:59">(<argument pos:start="485:16" pos:end="485:23"><expr pos:start="485:16" pos:end="485:23"><name pos:start="485:16" pos:end="485:23"><name pos:start="485:16" pos:end="485:16">s</name><operator pos:start="485:17" pos:end="485:18">-&gt;</operator><name pos:start="485:19" pos:end="485:23">avctx</name></name></expr></argument>, <argument pos:start="485:26" pos:end="485:37"><expr pos:start="485:26" pos:end="485:37"><name pos:start="485:26" pos:end="485:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="485:40" pos:end="485:58"><expr pos:start="485:40" pos:end="485:58"><literal type="string" pos:start="485:40" pos:end="485:58">"Downmix coeffs:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="487:9" pos:end="497:9">for <control pos:start="487:13" pos:end="487:46">(<init pos:start="487:14" pos:end="487:19"><expr pos:start="487:14" pos:end="487:18"><name pos:start="487:14" pos:end="487:14">j</name> <operator pos:start="487:16" pos:end="487:16">=</operator> <literal type="number" pos:start="487:18" pos:end="487:18">0</literal></expr>;</init> <condition pos:start="487:21" pos:end="487:41"><expr pos:start="487:21" pos:end="487:40"><name pos:start="487:21" pos:end="487:21">j</name> <operator pos:start="487:23" pos:end="487:23">&lt;</operator> <name pos:start="487:25" pos:end="487:40"><name pos:start="487:25" pos:end="487:25">s</name><operator pos:start="487:26" pos:end="487:27">-&gt;</operator><name pos:start="487:28" pos:end="487:40">prim_channels</name></name></expr>;</condition> <incr pos:start="487:43" pos:end="487:45"><expr pos:start="487:43" pos:end="487:45"><name pos:start="487:43" pos:end="487:43">j</name><operator pos:start="487:44" pos:end="487:45">++</operator></expr></incr>)</control> <block pos:start="487:48" pos:end="497:9">{<block_content pos:start="489:13" pos:end="495:62">

            <expr_stmt pos:start="489:13" pos:end="491:62"><expr pos:start="489:13" pos:end="491:61"><call pos:start="489:13" pos:end="491:61"><name pos:start="489:13" pos:end="489:18">av_log</name><argument_list pos:start="489:19" pos:end="491:61">(<argument pos:start="489:20" pos:end="489:27"><expr pos:start="489:20" pos:end="489:27"><name pos:start="489:20" pos:end="489:27"><name pos:start="489:20" pos:end="489:20">s</name><operator pos:start="489:21" pos:end="489:22">-&gt;</operator><name pos:start="489:23" pos:end="489:27">avctx</name></name></expr></argument>, <argument pos:start="489:30" pos:end="489:41"><expr pos:start="489:30" pos:end="489:41"><name pos:start="489:30" pos:end="489:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="489:44" pos:end="489:65"><expr pos:start="489:44" pos:end="489:65"><literal type="string" pos:start="489:44" pos:end="489:65">"Channel 0, %d = %f\n"</literal></expr></argument>, <argument pos:start="489:68" pos:end="489:68"><expr pos:start="489:68" pos:end="489:68"><name pos:start="489:68" pos:end="489:68">j</name></expr></argument>,

                   <argument pos:start="491:20" pos:end="491:60"><expr pos:start="491:20" pos:end="491:60"><name pos:start="491:20" pos:end="491:60"><name pos:start="491:20" pos:end="491:37">dca_downmix_coeffs</name><index pos:start="491:38" pos:end="491:60">[<expr pos:start="491:39" pos:end="491:59"><name pos:start="491:39" pos:end="491:59"><name pos:start="491:39" pos:end="491:39">s</name><operator pos:start="491:40" pos:end="491:41">-&gt;</operator><name pos:start="491:42" pos:end="491:53">downmix_coef</name><index pos:start="491:54" pos:end="491:56">[<expr pos:start="491:55" pos:end="491:55"><name pos:start="491:55" pos:end="491:55">j</name></expr>]</index><index pos:start="491:57" pos:end="491:59">[<expr pos:start="491:58" pos:end="491:58"><literal type="number" pos:start="491:58" pos:end="491:58">0</literal></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="493:13" pos:end="495:62"><expr pos:start="493:13" pos:end="495:61"><call pos:start="493:13" pos:end="495:61"><name pos:start="493:13" pos:end="493:18">av_log</name><argument_list pos:start="493:19" pos:end="495:61">(<argument pos:start="493:20" pos:end="493:27"><expr pos:start="493:20" pos:end="493:27"><name pos:start="493:20" pos:end="493:27"><name pos:start="493:20" pos:end="493:20">s</name><operator pos:start="493:21" pos:end="493:22">-&gt;</operator><name pos:start="493:23" pos:end="493:27">avctx</name></name></expr></argument>, <argument pos:start="493:30" pos:end="493:41"><expr pos:start="493:30" pos:end="493:41"><name pos:start="493:30" pos:end="493:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="493:44" pos:end="493:65"><expr pos:start="493:44" pos:end="493:65"><literal type="string" pos:start="493:44" pos:end="493:65">"Channel 1, %d = %f\n"</literal></expr></argument>, <argument pos:start="493:68" pos:end="493:68"><expr pos:start="493:68" pos:end="493:68"><name pos:start="493:68" pos:end="493:68">j</name></expr></argument>,

                   <argument pos:start="495:20" pos:end="495:60"><expr pos:start="495:20" pos:end="495:60"><name pos:start="495:20" pos:end="495:60"><name pos:start="495:20" pos:end="495:37">dca_downmix_coeffs</name><index pos:start="495:38" pos:end="495:60">[<expr pos:start="495:39" pos:end="495:59"><name pos:start="495:39" pos:end="495:59"><name pos:start="495:39" pos:end="495:39">s</name><operator pos:start="495:40" pos:end="495:41">-&gt;</operator><name pos:start="495:42" pos:end="495:53">downmix_coef</name><index pos:start="495:54" pos:end="495:56">[<expr pos:start="495:55" pos:end="495:55"><name pos:start="495:55" pos:end="495:55">j</name></expr>]</index><index pos:start="495:57" pos:end="495:59">[<expr pos:start="495:58" pos:end="495:58"><literal type="number" pos:start="495:58" pos:end="495:58">1</literal></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="499:9" pos:end="499:45"><expr pos:start="499:9" pos:end="499:44"><call pos:start="499:9" pos:end="499:44"><name pos:start="499:9" pos:end="499:14">av_log</name><argument_list pos:start="499:15" pos:end="499:44">(<argument pos:start="499:16" pos:end="499:23"><expr pos:start="499:16" pos:end="499:23"><name pos:start="499:16" pos:end="499:23"><name pos:start="499:16" pos:end="499:16">s</name><operator pos:start="499:17" pos:end="499:18">-&gt;</operator><name pos:start="499:19" pos:end="499:23">avctx</name></name></expr></argument>, <argument pos:start="499:26" pos:end="499:37"><expr pos:start="499:26" pos:end="499:37"><name pos:start="499:26" pos:end="499:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="499:40" pos:end="499:43"><expr pos:start="499:40" pos:end="499:43"><literal type="string" pos:start="499:40" pos:end="499:43">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="503:5" pos:end="507:84">for <control pos:start="503:9" pos:end="503:53">(<init pos:start="503:10" pos:end="503:26"><expr pos:start="503:10" pos:end="503:25"><name pos:start="503:10" pos:end="503:10">j</name> <operator pos:start="503:12" pos:end="503:12">=</operator> <name pos:start="503:14" pos:end="503:25">base_channel</name></expr>;</init> <condition pos:start="503:28" pos:end="503:48"><expr pos:start="503:28" pos:end="503:47"><name pos:start="503:28" pos:end="503:28">j</name> <operator pos:start="503:30" pos:end="503:30">&lt;</operator> <name pos:start="503:32" pos:end="503:47"><name pos:start="503:32" pos:end="503:32">s</name><operator pos:start="503:33" pos:end="503:34">-&gt;</operator><name pos:start="503:35" pos:end="503:47">prim_channels</name></name></expr>;</condition> <incr pos:start="503:50" pos:end="503:52"><expr pos:start="503:50" pos:end="503:52"><name pos:start="503:50" pos:end="503:50">j</name><operator pos:start="503:51" pos:end="503:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="505:9" pos:end="507:84"><block_content pos:start="505:9" pos:end="507:84">

        <for pos:start="505:9" pos:end="507:84">for <control pos:start="505:13" pos:end="505:73">(<init pos:start="505:14" pos:end="505:40"><expr pos:start="505:14" pos:end="505:39"><name pos:start="505:14" pos:end="505:14">k</name> <operator pos:start="505:16" pos:end="505:16">=</operator> <name pos:start="505:18" pos:end="505:39"><name pos:start="505:18" pos:end="505:18">s</name><operator pos:start="505:19" pos:end="505:20">-&gt;</operator><name pos:start="505:21" pos:end="505:36">vq_start_subband</name><index pos:start="505:37" pos:end="505:39">[<expr pos:start="505:38" pos:end="505:38"><name pos:start="505:38" pos:end="505:38">j</name></expr>]</index></name></expr>;</init> <condition pos:start="505:42" pos:end="505:68"><expr pos:start="505:42" pos:end="505:67"><name pos:start="505:42" pos:end="505:42">k</name> <operator pos:start="505:44" pos:end="505:44">&lt;</operator> <name pos:start="505:46" pos:end="505:67"><name pos:start="505:46" pos:end="505:46">s</name><operator pos:start="505:47" pos:end="505:48">-&gt;</operator><name pos:start="505:49" pos:end="505:64">subband_activity</name><index pos:start="505:65" pos:end="505:67">[<expr pos:start="505:66" pos:end="505:66"><name pos:start="505:66" pos:end="505:66">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="505:70" pos:end="505:72"><expr pos:start="505:70" pos:end="505:72"><name pos:start="505:70" pos:end="505:70">k</name><operator pos:start="505:71" pos:end="505:72">++</operator></expr></incr>)</control><block type="pseudo" pos:start="507:13" pos:end="507:84"><block_content pos:start="507:13" pos:end="507:84">

            <expr_stmt pos:start="507:13" pos:end="507:84"><expr pos:start="507:13" pos:end="507:83"><call pos:start="507:13" pos:end="507:83"><name pos:start="507:13" pos:end="507:18">av_log</name><argument_list pos:start="507:19" pos:end="507:83">(<argument pos:start="507:20" pos:end="507:27"><expr pos:start="507:20" pos:end="507:27"><name pos:start="507:20" pos:end="507:27"><name pos:start="507:20" pos:end="507:20">s</name><operator pos:start="507:21" pos:end="507:22">-&gt;</operator><name pos:start="507:23" pos:end="507:27">avctx</name></name></expr></argument>, <argument pos:start="507:30" pos:end="507:41"><expr pos:start="507:30" pos:end="507:41"><name pos:start="507:30" pos:end="507:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="507:44" pos:end="507:59"><expr pos:start="507:44" pos:end="507:59"><literal type="string" pos:start="507:44" pos:end="507:59">"VQ index: %i\n"</literal></expr></argument>, <argument pos:start="507:62" pos:end="507:82"><expr pos:start="507:62" pos:end="507:82"><name pos:start="507:62" pos:end="507:82"><name pos:start="507:62" pos:end="507:62">s</name><operator pos:start="507:63" pos:end="507:64">-&gt;</operator><name pos:start="507:65" pos:end="507:76">high_freq_vq</name><index pos:start="507:77" pos:end="507:79">[<expr pos:start="507:78" pos:end="507:78"><name pos:start="507:78" pos:end="507:78">j</name></expr>]</index><index pos:start="507:80" pos:end="507:82">[<expr pos:start="507:81" pos:end="507:81"><name pos:start="507:81" pos:end="507:81">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

    <if_stmt pos:start="509:5" pos:end="528:0"><if pos:start="509:5" pos:end="528:0">if <condition pos:start="509:8" pos:end="509:32">(<expr pos:start="509:9" pos:end="509:31"><operator pos:start="509:9" pos:end="509:9">!</operator><name pos:start="509:10" pos:end="509:21">base_channel</name> <operator pos:start="509:23" pos:end="509:24">&amp;&amp;</operator> <name pos:start="509:26" pos:end="509:31"><name pos:start="509:26" pos:end="509:26">s</name><operator pos:start="509:27" pos:end="509:28">-&gt;</operator><name pos:start="509:29" pos:end="509:31">lfe</name></name></expr>)</condition> <block pos:start="509:34" pos:end="528:0">{<block_content pos:start="511:9" pos:end="523:45">

        <decl_stmt pos:start="511:9" pos:end="511:57"><decl pos:start="511:9" pos:end="511:56"><type pos:start="511:9" pos:end="511:11"><name pos:start="511:9" pos:end="511:11">int</name></type> <name pos:start="511:13" pos:end="511:23">lfe_samples</name> <init pos:start="511:25" pos:end="511:56">= <expr pos:start="511:27" pos:end="511:56"><literal type="number" pos:start="511:27" pos:end="511:27">2</literal> <operator pos:start="511:29" pos:end="511:29">*</operator> <name pos:start="511:31" pos:end="511:36"><name pos:start="511:31" pos:end="511:31">s</name><operator pos:start="511:32" pos:end="511:33">-&gt;</operator><name pos:start="511:34" pos:end="511:36">lfe</name></name> <operator pos:start="511:38" pos:end="511:38">*</operator> <operator pos:start="511:40" pos:end="511:40">(</operator><literal type="number" pos:start="511:41" pos:end="511:43">4</literal> <operator pos:start="511:43" pos:end="511:43">+</operator> <name pos:start="511:45" pos:end="511:55">block_index</name><operator pos:start="511:56" pos:end="511:56">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="513:9" pos:end="513:99"><decl pos:start="513:9" pos:end="513:98"><type pos:start="513:9" pos:end="513:11"><name pos:start="513:9" pos:end="513:11">int</name></type> <name pos:start="513:13" pos:end="513:26">lfe_end_sample</name> <init pos:start="513:28" pos:end="513:98">= <expr pos:start="513:30" pos:end="513:98"><literal type="number" pos:start="513:30" pos:end="513:30">2</literal> <operator pos:start="513:32" pos:end="513:32">*</operator> <name pos:start="513:34" pos:end="513:39"><name pos:start="513:34" pos:end="513:34">s</name><operator pos:start="513:35" pos:end="513:36">-&gt;</operator><name pos:start="513:37" pos:end="513:39">lfe</name></name> <operator pos:start="513:41" pos:end="513:41">*</operator> <operator pos:start="513:43" pos:end="513:43">(</operator><literal type="number" pos:start="513:44" pos:end="513:46">4</literal> <operator pos:start="513:46" pos:end="513:46">+</operator> <name pos:start="513:48" pos:end="513:58">block_index</name> <operator pos:start="513:60" pos:end="513:60">+</operator> <name pos:start="513:62" pos:end="513:97"><name pos:start="513:62" pos:end="513:62">s</name><operator pos:start="513:63" pos:end="513:64">-&gt;</operator><name pos:start="513:65" pos:end="513:76">subsubframes</name><index pos:start="513:77" pos:end="513:97">[<expr pos:start="513:78" pos:end="513:96"><name pos:start="513:78" pos:end="513:96"><name pos:start="513:78" pos:end="513:78">s</name><operator pos:start="513:79" pos:end="513:80">-&gt;</operator><name pos:start="513:81" pos:end="513:96">current_subframe</name></name></expr>]</index></name><operator pos:start="513:98" pos:end="513:98">)</operator></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="517:9" pos:end="517:57"><expr pos:start="517:9" pos:end="517:56"><call pos:start="517:9" pos:end="517:56"><name pos:start="517:9" pos:end="517:14">av_log</name><argument_list pos:start="517:15" pos:end="517:56">(<argument pos:start="517:16" pos:end="517:23"><expr pos:start="517:16" pos:end="517:23"><name pos:start="517:16" pos:end="517:23"><name pos:start="517:16" pos:end="517:16">s</name><operator pos:start="517:17" pos:end="517:18">-&gt;</operator><name pos:start="517:19" pos:end="517:23">avctx</name></name></expr></argument>, <argument pos:start="517:26" pos:end="517:37"><expr pos:start="517:26" pos:end="517:37"><name pos:start="517:26" pos:end="517:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="517:40" pos:end="517:55"><expr pos:start="517:40" pos:end="517:55"><literal type="string" pos:start="517:40" pos:end="517:55">"LFE samples:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="519:9" pos:end="521:66">for <control pos:start="519:13" pos:end="519:54">(<init pos:start="519:14" pos:end="519:29"><expr pos:start="519:14" pos:end="519:28"><name pos:start="519:14" pos:end="519:14">j</name> <operator pos:start="519:16" pos:end="519:16">=</operator> <name pos:start="519:18" pos:end="519:28">lfe_samples</name></expr>;</init> <condition pos:start="519:31" pos:end="519:49"><expr pos:start="519:31" pos:end="519:48"><name pos:start="519:31" pos:end="519:31">j</name> <operator pos:start="519:33" pos:end="519:33">&lt;</operator> <name pos:start="519:35" pos:end="519:48">lfe_end_sample</name></expr>;</condition> <incr pos:start="519:51" pos:end="519:53"><expr pos:start="519:51" pos:end="519:53"><name pos:start="519:51" pos:end="519:51">j</name><operator pos:start="519:52" pos:end="519:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="521:13" pos:end="521:66"><block_content pos:start="521:13" pos:end="521:66">

            <expr_stmt pos:start="521:13" pos:end="521:66"><expr pos:start="521:13" pos:end="521:65"><call pos:start="521:13" pos:end="521:65"><name pos:start="521:13" pos:end="521:18">av_log</name><argument_list pos:start="521:19" pos:end="521:65">(<argument pos:start="521:20" pos:end="521:27"><expr pos:start="521:20" pos:end="521:27"><name pos:start="521:20" pos:end="521:27"><name pos:start="521:20" pos:end="521:20">s</name><operator pos:start="521:21" pos:end="521:22">-&gt;</operator><name pos:start="521:23" pos:end="521:27">avctx</name></name></expr></argument>, <argument pos:start="521:30" pos:end="521:41"><expr pos:start="521:30" pos:end="521:41"><name pos:start="521:30" pos:end="521:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="521:44" pos:end="521:48"><expr pos:start="521:44" pos:end="521:48"><literal type="string" pos:start="521:44" pos:end="521:48">" %f"</literal></expr></argument>, <argument pos:start="521:51" pos:end="521:64"><expr pos:start="521:51" pos:end="521:64"><name pos:start="521:51" pos:end="521:64"><name pos:start="521:51" pos:end="521:51">s</name><operator pos:start="521:52" pos:end="521:53">-&gt;</operator><name pos:start="521:54" pos:end="521:61">lfe_data</name><index pos:start="521:62" pos:end="521:64">[<expr pos:start="521:63" pos:end="521:63"><name pos:start="521:63" pos:end="521:63">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="523:9" pos:end="523:45"><expr pos:start="523:9" pos:end="523:44"><call pos:start="523:9" pos:end="523:44"><name pos:start="523:9" pos:end="523:14">av_log</name><argument_list pos:start="523:15" pos:end="523:44">(<argument pos:start="523:16" pos:end="523:23"><expr pos:start="523:16" pos:end="523:23"><name pos:start="523:16" pos:end="523:23"><name pos:start="523:16" pos:end="523:16">s</name><operator pos:start="523:17" pos:end="523:18">-&gt;</operator><name pos:start="523:19" pos:end="523:23">avctx</name></name></expr></argument>, <argument pos:start="523:26" pos:end="523:37"><expr pos:start="523:26" pos:end="523:37"><name pos:start="523:26" pos:end="523:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="523:40" pos:end="523:43"><expr pos:start="523:40" pos:end="523:43"><literal type="string" pos:start="523:40" pos:end="523:43">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="527:1" pos:end="527:6">#<cpp:directive pos:start="527:2" pos:end="527:6">endif</cpp:directive></cpp:endif>



    <return pos:start="531:5" pos:end="531:13">return <expr pos:start="531:12" pos:end="531:12"><literal type="number" pos:start="531:12" pos:end="531:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
