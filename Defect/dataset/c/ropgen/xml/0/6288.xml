<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6288.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:32">icp_control_read</name><parameter_list pos:start="1:33" pos:end="3:47">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:72"><decl pos:start="1:48" pos:end="1:72"><type pos:start="1:48" pos:end="1:72"><name pos:start="1:48" pos:end="1:65">target_phys_addr_t</name></type> <name pos:start="1:67" pos:end="1:72">offset</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:46"><decl pos:start="3:34" pos:end="3:46"><type pos:start="3:34" pos:end="3:46"><name pos:start="3:34" pos:end="3:41">unsigned</name></type> <name pos:start="3:43" pos:end="3:46">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="33:1">{<block_content pos:start="7:5" pos:end="31:5">

    <switch pos:start="7:5" pos:end="31:5">switch <condition pos:start="7:12" pos:end="7:24">(<expr pos:start="7:13" pos:end="7:23"><name pos:start="7:13" pos:end="7:18">offset</name> <operator pos:start="7:20" pos:end="7:21">&gt;&gt;</operator> <literal type="number" pos:start="7:23" pos:end="7:23">2</literal></expr>)</condition> <block pos:start="7:26" pos:end="31:5">{<block_content pos:start="9:5" pos:end="29:17">

    <case pos:start="9:5" pos:end="9:11">case <expr pos:start="9:10" pos:end="9:10"><literal type="number" pos:start="9:10" pos:end="9:10">0</literal></expr>:</case> <comment type="block" pos:start="9:13" pos:end="9:28">/* CP_IDFIELD */</comment>

        <return pos:start="11:9" pos:end="11:26">return <expr pos:start="11:16" pos:end="11:25"><literal type="number" pos:start="11:16" pos:end="11:25">0x41034003</literal></expr>;</return>

    <case pos:start="13:5" pos:end="13:11">case <expr pos:start="13:10" pos:end="13:10"><literal type="number" pos:start="13:10" pos:end="13:10">1</literal></expr>:</case> <comment type="block" pos:start="13:13" pos:end="13:30">/* CP_FLASHPROG */</comment>

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return>

    <case pos:start="17:5" pos:end="17:11">case <expr pos:start="17:10" pos:end="17:10"><literal type="number" pos:start="17:10" pos:end="17:10">2</literal></expr>:</case> <comment type="block" pos:start="17:13" pos:end="17:27">/* CP_INTREG */</comment>

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return>

    <case pos:start="21:5" pos:end="21:11">case <expr pos:start="21:10" pos:end="21:10"><literal type="number" pos:start="21:10" pos:end="21:10">3</literal></expr>:</case> <comment type="block" pos:start="21:13" pos:end="21:27">/* CP_DECODE */</comment>

        <return pos:start="23:9" pos:end="23:20">return <expr pos:start="23:16" pos:end="23:19"><literal type="number" pos:start="23:16" pos:end="23:19">0x11</literal></expr>;</return>

    <default pos:start="25:5" pos:end="25:12">default:</default>

        <expr_stmt pos:start="27:9" pos:end="27:67"><expr pos:start="27:9" pos:end="27:66"><call pos:start="27:9" pos:end="27:66"><name pos:start="27:9" pos:end="27:16">hw_error</name><argument_list pos:start="27:17" pos:end="27:66">(<argument pos:start="27:18" pos:end="27:52"><expr pos:start="27:18" pos:end="27:52"><literal type="string" pos:start="27:18" pos:end="27:52">"icp_control_read: Bad offset %x\n"</literal></expr></argument>, <argument pos:start="27:55" pos:end="27:65"><expr pos:start="27:55" pos:end="27:65"><operator pos:start="27:55" pos:end="27:55">(</operator><name pos:start="27:56" pos:end="27:58">int</name><operator pos:start="27:59" pos:end="27:59">)</operator><name pos:start="27:60" pos:end="27:65">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
