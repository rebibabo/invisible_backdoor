<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23148.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">ssize_t</name></type> <name pos:start="1:9" pos:end="1:29">migrate_fd_put_buffer</name><parameter_list pos:start="1:30" pos:end="1:74">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:60"><decl pos:start="1:45" pos:end="1:60"><type pos:start="1:45" pos:end="1:60"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">void</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">data</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:73"><decl pos:start="1:63" pos:end="1:73"><type pos:start="1:63" pos:end="1:73"><name pos:start="1:63" pos:end="1:68">size_t</name></type> <name pos:start="1:70" pos:end="1:73">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:15">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">FdMigrationState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">s</name> <init pos:start="5:25" pos:end="5:32">= <expr pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:32">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">ssize_t</name></type> <name pos:start="7:13" pos:end="7:15">ret</name></decl>;</decl_stmt>



    <do pos:start="11:5" pos:end="15:92">do <block pos:start="11:8" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:38">

        <expr_stmt pos:start="13:9" pos:end="13:38"><expr pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:37"><name pos:start="13:15" pos:end="13:22"><name pos:start="13:15" pos:end="13:15">s</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:22">write</name></name><argument_list pos:start="13:23" pos:end="13:37">(<argument pos:start="13:24" pos:end="13:24"><expr pos:start="13:24" pos:end="13:24"><name pos:start="13:24" pos:end="13:24">s</name></expr></argument>, <argument pos:start="13:27" pos:end="13:30"><expr pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:30">data</name></expr></argument>, <argument pos:start="13:33" pos:end="13:36"><expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="15:13" pos:end="15:91">(<expr pos:start="15:14" pos:end="15:90"><name pos:start="15:14" pos:end="15:16">ret</name> <operator pos:start="15:18" pos:end="15:19">==</operator> <operator pos:start="15:21" pos:end="15:21">-</operator><literal type="number" pos:start="15:22" pos:end="15:22">1</literal> <operator pos:start="15:24" pos:end="15:25">&amp;&amp;</operator> <operator pos:start="15:27" pos:end="15:27">(</operator><operator pos:start="15:28" pos:end="15:28">(</operator><call pos:start="15:29" pos:end="15:43"><name pos:start="15:29" pos:end="15:40"><name pos:start="15:29" pos:end="15:29">s</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:40">get_error</name></name><argument_list pos:start="15:41" pos:end="15:43">(<argument pos:start="15:42" pos:end="15:42"><expr pos:start="15:42" pos:end="15:42"><name pos:start="15:42" pos:end="15:42">s</name></expr></argument>)</argument_list></call><operator pos:start="15:44" pos:end="15:44">)</operator> <operator pos:start="15:46" pos:end="15:47">==</operator> <name pos:start="15:49" pos:end="15:53">EINTR</name> <operator pos:start="15:55" pos:end="15:56">||</operator> <operator pos:start="15:58" pos:end="15:58">(</operator><call pos:start="15:59" pos:end="15:73"><name pos:start="15:59" pos:end="15:70"><name pos:start="15:59" pos:end="15:59">s</name><operator pos:start="15:60" pos:end="15:61">-&gt;</operator><name pos:start="15:62" pos:end="15:70">get_error</name></name><argument_list pos:start="15:71" pos:end="15:73">(<argument pos:start="15:72" pos:end="15:72"><expr pos:start="15:72" pos:end="15:72"><name pos:start="15:72" pos:end="15:72">s</name></expr></argument>)</argument_list></call><operator pos:start="15:74" pos:end="15:74">)</operator> <operator pos:start="15:76" pos:end="15:77">==</operator> <name pos:start="15:79" pos:end="15:89">EWOULDBLOCK</name><operator pos:start="15:90" pos:end="15:90">)</operator></expr>)</condition>;</do>



    <if_stmt pos:start="19:5" pos:end="21:33"><if pos:start="19:5" pos:end="21:33">if <condition pos:start="19:8" pos:end="19:18">(<expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:14">==</operator> <operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:33"><block_content pos:start="21:9" pos:end="21:33">

        <expr_stmt pos:start="21:9" pos:end="21:33"><expr pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <operator pos:start="21:15" pos:end="21:15">-</operator><operator pos:start="21:16" pos:end="21:16">(</operator><call pos:start="21:17" pos:end="21:31"><name pos:start="21:17" pos:end="21:28"><name pos:start="21:17" pos:end="21:17">s</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:28">get_error</name></name><argument_list pos:start="21:29" pos:end="21:31">(<argument pos:start="21:30" pos:end="21:30"><expr pos:start="21:30" pos:end="21:30"><name pos:start="21:30" pos:end="21:30">s</name></expr></argument>)</argument_list></call><operator pos:start="21:32" pos:end="21:32">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="27:74"><if pos:start="25:5" pos:end="27:74">if <condition pos:start="25:8" pos:end="25:23">(<expr pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:14">==</operator> <operator pos:start="25:16" pos:end="25:16">-</operator><name pos:start="25:17" pos:end="25:22">EAGAIN</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:74"><block_content pos:start="27:9" pos:end="27:74">

        <expr_stmt pos:start="27:9" pos:end="27:74"><expr pos:start="27:9" pos:end="27:73"><call pos:start="27:9" pos:end="27:73"><name pos:start="27:9" pos:end="27:28">qemu_set_fd_handler2</name><argument_list pos:start="27:29" pos:end="27:73">(<argument pos:start="27:30" pos:end="27:34"><expr pos:start="27:30" pos:end="27:34"><name pos:start="27:30" pos:end="27:34"><name pos:start="27:30" pos:end="27:30">s</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:34">fd</name></name></expr></argument>, <argument pos:start="27:37" pos:end="27:40"><expr pos:start="27:37" pos:end="27:40"><name pos:start="27:37" pos:end="27:40">NULL</name></expr></argument>, <argument pos:start="27:43" pos:end="27:46"><expr pos:start="27:43" pos:end="27:46"><name pos:start="27:43" pos:end="27:46">NULL</name></expr></argument>, <argument pos:start="27:49" pos:end="27:69"><expr pos:start="27:49" pos:end="27:69"><name pos:start="27:49" pos:end="27:69">migrate_fd_put_notify</name></expr></argument>, <argument pos:start="27:72" pos:end="27:72"><expr pos:start="27:72" pos:end="27:72"><name pos:start="27:72" pos:end="27:72">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="31:5" pos:end="31:15">return <expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
