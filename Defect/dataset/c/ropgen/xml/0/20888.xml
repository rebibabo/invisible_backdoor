<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20888.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">asf_write_packet</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">AVPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">ASFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">asf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">ASFStream</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:21">stream</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:20">duration</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVCodecContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:25">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:21">packet_st</name></decl>, <decl pos:start="13:24" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:24" pos:end="13:26">pts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">start_sec</name></decl>, <decl pos:start="15:20" pos:end="15:20"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:20" pos:end="15:20">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">flags</name> <init pos:start="17:15" pos:end="17:26">= <expr pos:start="17:17" pos:end="17:26"><name pos:start="17:17" pos:end="17:26"><name pos:start="17:17" pos:end="17:19">pkt</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:26">flags</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:50"><expr pos:start="21:5" pos:end="21:49"><name pos:start="21:5" pos:end="21:9">codec</name>  <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:42"><name pos:start="21:14" pos:end="21:14">s</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:23">streams</name><index pos:start="21:24" pos:end="21:42">[<expr pos:start="21:25" pos:end="21:41"><name pos:start="21:25" pos:end="21:41"><name pos:start="21:25" pos:end="21:27">pkt</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:41">stream_index</name></name></expr>]</index></name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:49">codec</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:46"><expr pos:start="23:5" pos:end="23:45"><name pos:start="23:5" pos:end="23:10">stream</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <operator pos:start="23:14" pos:end="23:14">&amp;</operator><name pos:start="23:15" pos:end="23:45"><name pos:start="23:15" pos:end="23:17">asf</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:26">streams</name><index pos:start="23:27" pos:end="23:45">[<expr pos:start="23:28" pos:end="23:44"><name pos:start="23:28" pos:end="23:44"><name pos:start="23:28" pos:end="23:30">pkt</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:44">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="29:34"><if pos:start="27:5" pos:end="29:34">if <condition pos:start="27:8" pos:end="27:48">(<expr pos:start="27:9" pos:end="27:47"><name pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:13">codec</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:25">codec_type</name></name> <operator pos:start="27:27" pos:end="27:28">==</operator> <name pos:start="27:30" pos:end="27:47">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:34"><block_content pos:start="29:9" pos:end="29:34">

        <expr_stmt pos:start="29:9" pos:end="29:34"><expr pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:13">flags</name> <operator pos:start="29:15" pos:end="29:16">&amp;=</operator> <operator pos:start="29:18" pos:end="29:18">~</operator><name pos:start="29:19" pos:end="29:33">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:61"><expr pos:start="33:5" pos:end="33:60"><name pos:start="33:5" pos:end="33:7">pts</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <ternary pos:start="33:11" pos:end="33:60"><condition pos:start="33:11" pos:end="33:40"><expr pos:start="33:11" pos:end="33:38"><operator pos:start="33:11" pos:end="33:11">(</operator><name pos:start="33:12" pos:end="33:19"><name pos:start="33:12" pos:end="33:14">pkt</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:19">pts</name></name> <operator pos:start="33:21" pos:end="33:22">!=</operator> <name pos:start="33:24" pos:end="33:37">AV_NOPTS_VALUE</name><operator pos:start="33:38" pos:end="33:38">)</operator></expr> ?</condition><then pos:start="33:42" pos:end="33:49"> <expr pos:start="33:42" pos:end="33:49"><name pos:start="33:42" pos:end="33:49"><name pos:start="33:42" pos:end="33:44">pkt</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:49">pts</name></name></expr> </then><else pos:start="33:51" pos:end="33:60">: <expr pos:start="33:53" pos:end="33:60"><name pos:start="33:53" pos:end="33:60"><name pos:start="33:53" pos:end="33:55">pkt</name><operator pos:start="33:56" pos:end="33:57">-&gt;</operator><name pos:start="33:58" pos:end="33:60">dts</name></name></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="47:5"><if pos:start="37:5" pos:end="47:5">if <condition pos:start="37:8" pos:end="37:16">(<expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:11">pts</name> <operator pos:start="37:13" pos:end="37:13">&lt;</operator> <literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>)</condition> <block pos:start="37:18" pos:end="47:5">{<block_content pos:start="39:9" pos:end="45:31">

        <expr_stmt pos:start="39:9" pos:end="43:39"><expr pos:start="39:9" pos:end="43:38"><call pos:start="39:9" pos:end="43:38"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="43:38">(<argument pos:start="39:16" pos:end="39:16"><expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">s</name></expr></argument>, <argument pos:start="39:19" pos:end="39:30"><expr pos:start="39:19" pos:end="39:30"><name pos:start="39:19" pos:end="39:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="41:16" pos:end="41:70"><expr pos:start="41:16" pos:end="41:70"><literal type="string" pos:start="41:16" pos:end="41:60">"Negative dts not supported stream %d, dts %"</literal><name pos:start="41:61" pos:end="41:66">PRId64</name><literal type="string" pos:start="41:67" pos:end="41:70">"\n"</literal></expr></argument>,

               <argument pos:start="43:16" pos:end="43:32"><expr pos:start="43:16" pos:end="43:32"><name pos:start="43:16" pos:end="43:32"><name pos:start="43:16" pos:end="43:18">pkt</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:32">stream_index</name></name></expr></argument>, <argument pos:start="43:35" pos:end="43:37"><expr pos:start="43:35" pos:end="43:37"><name pos:start="43:35" pos:end="43:37">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:31">return <expr pos:start="45:16" pos:end="45:30"><call pos:start="45:16" pos:end="45:30"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:30">(<argument pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:34"><expr pos:start="51:5" pos:end="51:33"><call pos:start="51:5" pos:end="51:33"><name pos:start="51:5" pos:end="51:10">assert</name><argument_list pos:start="51:11" pos:end="51:33">(<argument pos:start="51:12" pos:end="51:32"><expr pos:start="51:12" pos:end="51:32"><name pos:start="51:12" pos:end="51:14">pts</name> <operator pos:start="51:16" pos:end="51:17">!=</operator> <name pos:start="51:19" pos:end="51:32">AV_NOPTS_VALUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:32"><expr pos:start="53:5" pos:end="53:31"><name pos:start="53:5" pos:end="53:12">duration</name>      <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:23">pts</name> <operator pos:start="53:25" pos:end="53:25">*</operator> <literal type="number" pos:start="53:27" pos:end="53:31">10000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:75"><expr pos:start="55:5" pos:end="55:74"><name pos:start="55:5" pos:end="55:17"><name pos:start="55:5" pos:end="55:7">asf</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:17">duration</name></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <call pos:start="55:21" pos:end="55:74"><name pos:start="55:21" pos:end="55:25">FFMAX</name><argument_list pos:start="55:26" pos:end="55:74">(<argument pos:start="55:27" pos:end="55:39"><expr pos:start="55:27" pos:end="55:39"><name pos:start="55:27" pos:end="55:39"><name pos:start="55:27" pos:end="55:29">asf</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:39">duration</name></name></expr></argument>, <argument pos:start="55:42" pos:end="55:73"><expr pos:start="55:42" pos:end="55:73"><name pos:start="55:42" pos:end="55:49">duration</name> <operator pos:start="55:51" pos:end="55:51">+</operator> <name pos:start="55:53" pos:end="55:65"><name pos:start="55:53" pos:end="55:55">pkt</name><operator pos:start="55:56" pos:end="55:57">-&gt;</operator><name pos:start="55:58" pos:end="55:65">duration</name></name> <operator pos:start="55:67" pos:end="55:67">*</operator> <literal type="number" pos:start="55:69" pos:end="55:73">10000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:32"><expr pos:start="59:5" pos:end="59:31"><name pos:start="59:5" pos:end="59:13">packet_st</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <name pos:start="59:17" pos:end="59:31"><name pos:start="59:17" pos:end="59:19">asf</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:31">nb_packets</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="63:53"><expr pos:start="61:5" pos:end="63:52"><call pos:start="61:5" pos:end="63:52"><name pos:start="61:5" pos:end="61:13">put_frame</name><argument_list pos:start="61:14" pos:end="63:52">(<argument pos:start="61:15" pos:end="61:15"><expr pos:start="61:15" pos:end="61:15"><name pos:start="61:15" pos:end="61:15">s</name></expr></argument>, <argument pos:start="61:18" pos:end="61:23"><expr pos:start="61:18" pos:end="61:23"><name pos:start="61:18" pos:end="61:23">stream</name></expr></argument>, <argument pos:start="61:26" pos:end="61:54"><expr pos:start="61:26" pos:end="61:54"><name pos:start="61:26" pos:end="61:54"><name pos:start="61:26" pos:end="61:26">s</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:35">streams</name><index pos:start="61:36" pos:end="61:54">[<expr pos:start="61:37" pos:end="61:53"><name pos:start="61:37" pos:end="61:53"><name pos:start="61:37" pos:end="61:39">pkt</name><operator pos:start="61:40" pos:end="61:41">-&gt;</operator><name pos:start="61:42" pos:end="61:53">stream_index</name></name></expr>]</index></name></expr></argument>,

              <argument pos:start="63:15" pos:end="63:22"><expr pos:start="63:15" pos:end="63:22"><name pos:start="63:15" pos:end="63:22"><name pos:start="63:15" pos:end="63:17">pkt</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:22">dts</name></name></expr></argument>, <argument pos:start="63:25" pos:end="63:33"><expr pos:start="63:25" pos:end="63:33"><name pos:start="63:25" pos:end="63:33"><name pos:start="63:25" pos:end="63:27">pkt</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:33">data</name></name></expr></argument>, <argument pos:start="63:36" pos:end="63:44"><expr pos:start="63:36" pos:end="63:44"><name pos:start="63:36" pos:end="63:44"><name pos:start="63:36" pos:end="63:38">pkt</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:44">size</name></name></expr></argument>, <argument pos:start="63:47" pos:end="63:51"><expr pos:start="63:47" pos:end="63:51"><name pos:start="63:47" pos:end="63:51">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:21">/* check index */</comment>

    <if_stmt pos:start="69:5" pos:end="107:5"><if pos:start="69:5" pos:end="107:5">if <condition pos:start="69:8" pos:end="69:57">(<expr pos:start="69:9" pos:end="69:56"><operator pos:start="69:9" pos:end="69:9">(</operator><operator pos:start="69:10" pos:end="69:10">!</operator><name pos:start="69:11" pos:end="69:26"><name pos:start="69:11" pos:end="69:13">asf</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:26">is_streamed</name></name><operator pos:start="69:27" pos:end="69:27">)</operator> <operator pos:start="69:29" pos:end="69:30">&amp;&amp;</operator> <operator pos:start="69:32" pos:end="69:32">(</operator><name pos:start="69:33" pos:end="69:37">flags</name> <operator pos:start="69:39" pos:end="69:39">&amp;</operator> <name pos:start="69:41" pos:end="69:55">AV_PKT_FLAG_KEY</name><operator pos:start="69:56" pos:end="69:56">)</operator></expr>)</condition> <block pos:start="69:59" pos:end="107:5">{<block_content pos:start="71:9" pos:end="105:9">

        <expr_stmt pos:start="71:9" pos:end="71:56"><expr pos:start="71:9" pos:end="71:55"><name pos:start="71:9" pos:end="71:17">start_sec</name> <operator pos:start="71:19" pos:end="71:19">=</operator> <operator pos:start="71:21" pos:end="71:21">(</operator><name pos:start="71:22" pos:end="71:24">int</name><operator pos:start="71:25" pos:end="71:25">)</operator><operator pos:start="71:26" pos:end="71:26">(</operator><name pos:start="71:27" pos:end="71:34">duration</name> <operator pos:start="71:36" pos:end="71:36">/</operator> <call pos:start="71:38" pos:end="71:54"><name pos:start="71:38" pos:end="71:44">INT64_C</name><argument_list pos:start="71:45" pos:end="71:54">(<argument pos:start="71:46" pos:end="71:53"><expr pos:start="71:46" pos:end="71:53"><literal type="number" pos:start="71:46" pos:end="71:53">10000000</literal></expr></argument>)</argument_list></call><operator pos:start="71:55" pos:end="71:55">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="105:9"><if pos:start="73:9" pos:end="105:9">if <condition pos:start="73:12" pos:end="73:74">(<expr pos:start="73:13" pos:end="73:73"><name pos:start="73:13" pos:end="73:21">start_sec</name> <operator pos:start="73:23" pos:end="73:24">!=</operator> <operator pos:start="73:26" pos:end="73:26">(</operator><name pos:start="73:27" pos:end="73:29">int</name><operator pos:start="73:30" pos:end="73:30">)</operator><operator pos:start="73:31" pos:end="73:31">(</operator><name pos:start="73:32" pos:end="73:52"><name pos:start="73:32" pos:end="73:34">asf</name><operator pos:start="73:35" pos:end="73:36">-&gt;</operator><name pos:start="73:37" pos:end="73:52">last_indexed_pts</name></name> <operator pos:start="73:54" pos:end="73:54">/</operator> <call pos:start="73:56" pos:end="73:72"><name pos:start="73:56" pos:end="73:62">INT64_C</name><argument_list pos:start="73:63" pos:end="73:72">(<argument pos:start="73:64" pos:end="73:71"><expr pos:start="73:64" pos:end="73:71"><literal type="number" pos:start="73:64" pos:end="73:71">10000000</literal></expr></argument>)</argument_list></call><operator pos:start="73:73" pos:end="73:73">)</operator></expr>)</condition> <block pos:start="73:76" pos:end="105:9">{<block_content pos:start="75:13" pos:end="103:45">

            <for pos:start="75:13" pos:end="99:13">for <control pos:start="75:17" pos:end="75:61">(<init pos:start="75:18" pos:end="75:41"><expr pos:start="75:18" pos:end="75:40"><name pos:start="75:18" pos:end="75:18">i</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <name pos:start="75:22" pos:end="75:40"><name pos:start="75:22" pos:end="75:24">asf</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:40">nb_index_count</name></name></expr>;</init> <condition pos:start="75:43" pos:end="75:56"><expr pos:start="75:43" pos:end="75:55"><name pos:start="75:43" pos:end="75:43">i</name> <operator pos:start="75:45" pos:end="75:45">&lt;</operator> <name pos:start="75:47" pos:end="75:55">start_sec</name></expr>;</condition> <incr pos:start="75:58" pos:end="75:60"><expr pos:start="75:58" pos:end="75:60"><name pos:start="75:58" pos:end="75:58">i</name><operator pos:start="75:59" pos:end="75:60">++</operator></expr></incr>)</control> <block pos:start="75:63" pos:end="99:13">{<block_content pos:start="77:17" pos:end="97:97">

                <if_stmt pos:start="77:17" pos:end="87:17"><if pos:start="77:17" pos:end="87:17">if <condition pos:start="77:20" pos:end="77:52">(<expr pos:start="77:21" pos:end="77:51"><name pos:start="77:21" pos:end="77:21">i</name> <operator pos:start="77:23" pos:end="77:24">&gt;=</operator> <name pos:start="77:26" pos:end="77:51"><name pos:start="77:26" pos:end="77:28">asf</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:51">nb_index_memory_alloc</name></name></expr>)</condition> <block pos:start="77:54" pos:end="87:17">{<block_content pos:start="79:21" pos:end="85:101">

                    <expr_stmt pos:start="79:21" pos:end="79:66"><expr pos:start="79:21" pos:end="79:65"><name pos:start="79:21" pos:end="79:46"><name pos:start="79:21" pos:end="79:23">asf</name><operator pos:start="79:24" pos:end="79:25">-&gt;</operator><name pos:start="79:26" pos:end="79:46">nb_index_memory_alloc</name></name> <operator pos:start="79:48" pos:end="79:49">+=</operator> <name pos:start="79:51" pos:end="79:65">ASF_INDEX_BLOCK</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="81:21" pos:end="85:101"><expr pos:start="81:21" pos:end="85:100"><name pos:start="81:21" pos:end="81:34"><name pos:start="81:21" pos:end="81:23">asf</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:34">index_ptr</name></name>              <operator pos:start="81:49" pos:end="81:49">=</operator> <operator pos:start="81:51" pos:end="81:51">(</operator><name pos:start="81:52" pos:end="81:59">ASFIndex</name> <operator pos:start="81:61" pos:end="81:61">*</operator><operator pos:start="81:62" pos:end="81:62">)</operator><call pos:start="81:63" pos:end="85:100"><name pos:start="81:63" pos:end="81:72">av_realloc</name><argument_list pos:start="81:73" pos:end="85:100">(<argument pos:start="81:74" pos:end="81:87"><expr pos:start="81:74" pos:end="81:87"><name pos:start="81:74" pos:end="81:87"><name pos:start="81:74" pos:end="81:76">asf</name><operator pos:start="81:77" pos:end="81:78">-&gt;</operator><name pos:start="81:79" pos:end="81:87">index_ptr</name></name></expr></argument>,

                                                                         <argument pos:start="83:74" pos:end="85:99"><expr pos:start="83:74" pos:end="85:99"><sizeof pos:start="83:74" pos:end="83:89">sizeof<argument_list pos:start="83:80" pos:end="83:89">(<argument pos:start="83:81" pos:end="83:88"><expr pos:start="83:81" pos:end="83:88"><name pos:start="83:81" pos:end="83:88">ASFIndex</name></expr></argument>)</argument_list></sizeof> <operator pos:start="83:91" pos:end="83:91">*</operator>

                                                                         <name pos:start="85:74" pos:end="85:99"><name pos:start="85:74" pos:end="85:76">asf</name><operator pos:start="85:77" pos:end="85:78">-&gt;</operator><name pos:start="85:79" pos:end="85:99">nb_index_memory_alloc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="line" pos:start="89:17" pos:end="89:24">// store</comment>

                <expr_stmt pos:start="91:17" pos:end="91:70"><expr pos:start="91:17" pos:end="91:69"><name pos:start="91:17" pos:end="91:33"><name pos:start="91:17" pos:end="91:19">asf</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:30">index_ptr</name><index pos:start="91:31" pos:end="91:33">[<expr pos:start="91:32" pos:end="91:32"><name pos:start="91:32" pos:end="91:32">i</name></expr>]</index></name><operator pos:start="91:34" pos:end="91:34">.</operator><name pos:start="91:35" pos:end="91:47">packet_number</name> <operator pos:start="91:49" pos:end="91:49">=</operator> <operator pos:start="91:51" pos:end="91:51">(</operator><name pos:start="91:52" pos:end="91:59">uint32_t</name><operator pos:start="91:60" pos:end="91:60">)</operator><name pos:start="91:61" pos:end="91:69">packet_st</name></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:90"><expr pos:start="93:17" pos:end="93:89"><name pos:start="93:17" pos:end="93:33"><name pos:start="93:17" pos:end="93:19">asf</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:30">index_ptr</name><index pos:start="93:31" pos:end="93:33">[<expr pos:start="93:32" pos:end="93:32"><name pos:start="93:32" pos:end="93:32">i</name></expr>]</index></name><operator pos:start="93:34" pos:end="93:34">.</operator><name pos:start="93:35" pos:end="93:46">packet_count</name>  <operator pos:start="93:49" pos:end="93:49">=</operator> <operator pos:start="93:51" pos:end="93:51">(</operator><name pos:start="93:52" pos:end="93:59">uint16_t</name><operator pos:start="93:60" pos:end="93:60">)</operator><operator pos:start="93:61" pos:end="93:61">(</operator><name pos:start="93:62" pos:end="93:76"><name pos:start="93:62" pos:end="93:64">asf</name><operator pos:start="93:65" pos:end="93:66">-&gt;</operator><name pos:start="93:67" pos:end="93:76">nb_packets</name></name> <operator pos:start="93:78" pos:end="93:78">-</operator> <name pos:start="93:80" pos:end="93:88">packet_st</name><operator pos:start="93:89" pos:end="93:89">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="97:97"><expr pos:start="95:17" pos:end="97:96"><name pos:start="95:17" pos:end="95:35"><name pos:start="95:17" pos:end="95:19">asf</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:35">maximum_packet</name></name>             <operator pos:start="95:49" pos:end="95:49">=</operator> <call pos:start="95:51" pos:end="97:96"><name pos:start="95:51" pos:end="95:55">FFMAX</name><argument_list pos:start="95:56" pos:end="97:96">(<argument pos:start="95:57" pos:end="95:75"><expr pos:start="95:57" pos:end="95:75"><name pos:start="95:57" pos:end="95:75"><name pos:start="95:57" pos:end="95:59">asf</name><operator pos:start="95:60" pos:end="95:61">-&gt;</operator><name pos:start="95:62" pos:end="95:75">maximum_packet</name></name></expr></argument>,

                                                        <argument pos:start="97:57" pos:end="97:95"><expr pos:start="97:57" pos:end="97:95"><operator pos:start="97:57" pos:end="97:57">(</operator><name pos:start="97:58" pos:end="97:65">uint16_t</name><operator pos:start="97:66" pos:end="97:66">)</operator><operator pos:start="97:67" pos:end="97:67">(</operator><name pos:start="97:68" pos:end="97:82"><name pos:start="97:68" pos:end="97:70">asf</name><operator pos:start="97:71" pos:end="97:72">-&gt;</operator><name pos:start="97:73" pos:end="97:82">nb_packets</name></name> <operator pos:start="97:84" pos:end="97:84">-</operator> <name pos:start="97:86" pos:end="97:94">packet_st</name><operator pos:start="97:95" pos:end="97:95">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="101:13" pos:end="101:46"><expr pos:start="101:13" pos:end="101:45"><name pos:start="101:13" pos:end="101:31"><name pos:start="101:13" pos:end="101:15">asf</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:31">nb_index_count</name></name>   <operator pos:start="101:35" pos:end="101:35">=</operator> <name pos:start="101:37" pos:end="101:45">start_sec</name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:45"><expr pos:start="103:13" pos:end="103:44"><name pos:start="103:13" pos:end="103:33"><name pos:start="103:13" pos:end="103:15">asf</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:33">last_indexed_pts</name></name> <operator pos:start="103:35" pos:end="103:35">=</operator> <name pos:start="103:37" pos:end="103:44">duration</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="109:5" pos:end="109:13">return <expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
