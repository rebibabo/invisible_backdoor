<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14919.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:23">show_parts</name><parameter_list pos:start="1:24" pos:end="1:34">(<parameter pos:start="1:25" pos:end="1:33"><decl pos:start="1:25" pos:end="1:33"><type pos:start="1:25" pos:end="1:30"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:16">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:16">device</name> <init pos:start="5:18" pos:end="5:22">= <expr pos:start="5:20" pos:end="5:22"><name pos:start="5:20" pos:end="5:22">arg</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">nbd</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="19:7">/* linux just needs an open() to trigger

     * the partition table update

     * but remember to load the module with max_part != 0 :

     *     modprobe nbd max_part=63

     */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:31"><expr pos:start="21:5" pos:end="21:30"><name pos:start="21:5" pos:end="21:7">nbd</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:30"><name pos:start="21:11" pos:end="21:14">open</name><argument_list pos:start="21:15" pos:end="21:30">(<argument pos:start="21:16" pos:end="21:21"><expr pos:start="21:16" pos:end="21:21"><name pos:start="21:16" pos:end="21:21">device</name></expr></argument>, <argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">O_RDWR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:18">(<expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:11">nbd</name> <operator pos:start="23:13" pos:end="23:14">!=</operator> <operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>)</condition> <block pos:start="23:20" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:19">

        <expr_stmt pos:start="25:9" pos:end="25:19"><expr pos:start="25:9" pos:end="25:18"><call pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:13">close</name><argument_list pos:start="25:14" pos:end="25:18">(<argument pos:start="25:15" pos:end="25:17"><expr pos:start="25:15" pos:end="25:17"><name pos:start="25:15" pos:end="25:17">nbd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="29:5" pos:end="29:16">return <expr pos:start="29:12" pos:end="29:15"><name pos:start="29:12" pos:end="29:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
