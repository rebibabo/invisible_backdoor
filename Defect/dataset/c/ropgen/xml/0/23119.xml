<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23119.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">acpi_setup</name><parameter_list pos:start="1:16" pos:end="1:40">(<parameter pos:start="1:17" pos:end="1:39"><decl pos:start="1:17" pos:end="1:39"><type pos:start="1:17" pos:end="1:29"><name pos:start="1:17" pos:end="1:27">PcGuestInfo</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:39">guest_info</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="135:1">{<block_content pos:start="5:5" pos:end="133:46">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:19">AcpiBuildTables</name></type> <name pos:start="5:21" pos:end="5:26">tables</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AcpiBuildState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:31">build_state</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:28">(<expr pos:start="11:9" pos:end="11:27"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:27"><name pos:start="11:10" pos:end="11:19">guest_info</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:27">fw_cfg</name></name></expr>)</condition> <block pos:start="11:30" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:56"><expr pos:start="13:9" pos:end="13:55"><call pos:start="13:9" pos:end="13:55"><name pos:start="13:9" pos:end="13:26">ACPI_BUILD_DPRINTF</name><argument_list pos:start="13:27" pos:end="13:55">(<argument pos:start="13:28" pos:end="13:54"><expr pos:start="13:28" pos:end="13:54"><literal type="string" pos:start="13:28" pos:end="13:54">"No fw cfg. Bailing out.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:36">(<expr pos:start="21:9" pos:end="21:35"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:35"><name pos:start="21:10" pos:end="21:19">guest_info</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:35">has_acpi_build</name></name></expr>)</condition> <block pos:start="21:38" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <expr_stmt pos:start="23:9" pos:end="23:66"><expr pos:start="23:9" pos:end="23:65"><call pos:start="23:9" pos:end="23:65"><name pos:start="23:9" pos:end="23:26">ACPI_BUILD_DPRINTF</name><argument_list pos:start="23:27" pos:end="23:65">(<argument pos:start="23:28" pos:end="23:64"><expr pos:start="23:28" pos:end="23:64"><literal type="string" pos:start="23:28" pos:end="23:64">"ACPI build disabled. Bailing out.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:22">(<expr pos:start="31:9" pos:end="31:21"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:21">acpi_enabled</name></expr>)</condition> <block pos:start="31:24" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:15">

        <expr_stmt pos:start="33:9" pos:end="33:60"><expr pos:start="33:9" pos:end="33:59"><call pos:start="33:9" pos:end="33:59"><name pos:start="33:9" pos:end="33:26">ACPI_BUILD_DPRINTF</name><argument_list pos:start="33:27" pos:end="33:59">(<argument pos:start="33:28" pos:end="33:58"><expr pos:start="33:28" pos:end="33:58"><literal type="string" pos:start="33:28" pos:end="33:58">"ACPI disabled. Bailing out.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:49"><expr pos:start="41:5" pos:end="41:48"><name pos:start="41:5" pos:end="41:15">build_state</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:48"><name pos:start="41:19" pos:end="41:27">g_malloc0</name><argument_list pos:start="41:28" pos:end="41:48">(<argument pos:start="41:29" pos:end="41:47"><expr pos:start="41:29" pos:end="41:47"><sizeof pos:start="41:29" pos:end="41:34">sizeof <name/></sizeof>*<name pos:start="41:37" pos:end="41:47">build_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:41"><expr pos:start="45:5" pos:end="45:40"><name pos:start="45:5" pos:end="45:27"><name pos:start="45:5" pos:end="45:15">build_state</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:27">guest_info</name></name> <operator pos:start="45:29" pos:end="45:29">=</operator> <name pos:start="45:31" pos:end="45:40">guest_info</name></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><call pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:21">acpi_set_pci_info</name><argument_list pos:start="49:22" pos:end="49:23">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:36"><expr pos:start="53:5" pos:end="53:35"><call pos:start="53:5" pos:end="53:35"><name pos:start="53:5" pos:end="53:26">acpi_build_tables_init</name><argument_list pos:start="53:27" pos:end="53:35">(<argument pos:start="53:28" pos:end="53:34"><expr pos:start="53:28" pos:end="53:34"><operator pos:start="53:28" pos:end="53:28">&amp;</operator><name pos:start="53:29" pos:end="53:34">tables</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:49"><expr pos:start="55:5" pos:end="55:48"><call pos:start="55:5" pos:end="55:48"><name pos:start="55:5" pos:end="55:14">acpi_build</name><argument_list pos:start="55:15" pos:end="55:48">(<argument pos:start="55:16" pos:end="55:38"><expr pos:start="55:16" pos:end="55:38"><name pos:start="55:16" pos:end="55:38"><name pos:start="55:16" pos:end="55:26">build_state</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:38">guest_info</name></name></expr></argument>, <argument pos:start="55:41" pos:end="55:47"><expr pos:start="55:41" pos:end="55:47"><operator pos:start="55:41" pos:end="55:41">&amp;</operator><name pos:start="55:42" pos:end="55:47">tables</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:36">/* Now expose it all to Guest */</comment>

    <expr_stmt pos:start="61:5" pos:end="65:74"><expr pos:start="61:5" pos:end="65:73"><name pos:start="61:5" pos:end="61:26"><name pos:start="61:5" pos:end="61:15">build_state</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:26">table_ram</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <call pos:start="61:30" pos:end="65:73"><name pos:start="61:30" pos:end="61:46">acpi_add_rom_blob</name><argument_list pos:start="61:47" pos:end="65:73">(<argument pos:start="61:48" pos:end="61:58"><expr pos:start="61:48" pos:end="61:58"><name pos:start="61:48" pos:end="61:58">build_state</name></expr></argument>, <argument pos:start="61:61" pos:end="61:77"><expr pos:start="61:61" pos:end="61:77"><name pos:start="61:61" pos:end="61:77"><name pos:start="61:61" pos:end="61:66">tables</name><operator pos:start="61:67" pos:end="61:67">.</operator><name pos:start="61:68" pos:end="61:77">table_data</name></name></expr></argument>,

                                               <argument pos:start="63:48" pos:end="63:68"><expr pos:start="63:48" pos:end="63:68"><name pos:start="63:48" pos:end="63:68">ACPI_BUILD_TABLE_FILE</name></expr></argument>,

                                               <argument pos:start="65:48" pos:end="65:72"><expr pos:start="65:48" pos:end="65:72"><name pos:start="65:48" pos:end="65:72">ACPI_BUILD_TABLE_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:51"><expr pos:start="67:5" pos:end="67:50"><call pos:start="67:5" pos:end="67:50"><name pos:start="67:5" pos:end="67:10">assert</name><argument_list pos:start="67:11" pos:end="67:50">(<argument pos:start="67:12" pos:end="67:49"><expr pos:start="67:12" pos:end="67:49"><name pos:start="67:12" pos:end="67:33"><name pos:start="67:12" pos:end="67:22">build_state</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:33">table_ram</name></name> <operator pos:start="67:35" pos:end="67:36">!=</operator> <name pos:start="67:38" pos:end="67:49">RAM_ADDR_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:63"><expr pos:start="69:5" pos:end="69:62"><name pos:start="69:5" pos:end="69:27"><name pos:start="69:5" pos:end="69:15">build_state</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:27">table_size</name></name> <operator pos:start="69:29" pos:end="69:29">=</operator> <call pos:start="69:31" pos:end="69:62"><name pos:start="69:31" pos:end="69:43">acpi_data_len</name><argument_list pos:start="69:44" pos:end="69:62">(<argument pos:start="69:45" pos:end="69:61"><expr pos:start="69:45" pos:end="69:61"><name pos:start="69:45" pos:end="69:61"><name pos:start="69:45" pos:end="69:50">tables</name><operator pos:start="69:51" pos:end="69:51">.</operator><name pos:start="69:52" pos:end="69:61">table_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="75:77"><expr pos:start="73:5" pos:end="75:76"><name pos:start="73:5" pos:end="73:27"><name pos:start="73:5" pos:end="73:15">build_state</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:27">linker_ram</name></name> <operator pos:start="73:29" pos:end="73:29">=</operator>

        <call pos:start="75:9" pos:end="75:76"><name pos:start="75:9" pos:end="75:25">acpi_add_rom_blob</name><argument_list pos:start="75:26" pos:end="75:76">(<argument pos:start="75:27" pos:end="75:37"><expr pos:start="75:27" pos:end="75:37"><name pos:start="75:27" pos:end="75:37">build_state</name></expr></argument>, <argument pos:start="75:40" pos:end="75:52"><expr pos:start="75:40" pos:end="75:52"><name pos:start="75:40" pos:end="75:52"><name pos:start="75:40" pos:end="75:45">tables</name><operator pos:start="75:46" pos:end="75:46">.</operator><name pos:start="75:47" pos:end="75:52">linker</name></name></expr></argument>, <argument pos:start="75:55" pos:end="75:72"><expr pos:start="75:55" pos:end="75:72"><literal type="string" pos:start="75:55" pos:end="75:72">"etc/table-loader"</literal></expr></argument>, <argument pos:start="75:75" pos:end="75:75"><expr pos:start="75:75" pos:end="75:75"><literal type="number" pos:start="75:75" pos:end="75:75">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:60"><expr pos:start="77:5" pos:end="77:59"><name pos:start="77:5" pos:end="77:28"><name pos:start="77:5" pos:end="77:15">build_state</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:28">linker_size</name></name> <operator pos:start="77:30" pos:end="77:30">=</operator> <call pos:start="77:32" pos:end="77:59"><name pos:start="77:32" pos:end="77:44">acpi_data_len</name><argument_list pos:start="77:45" pos:end="77:59">(<argument pos:start="77:46" pos:end="77:58"><expr pos:start="77:46" pos:end="77:58"><name pos:start="77:46" pos:end="77:58"><name pos:start="77:46" pos:end="77:51">tables</name><operator pos:start="77:52" pos:end="77:52">.</operator><name pos:start="77:53" pos:end="77:58">linker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="83:73"><expr pos:start="81:5" pos:end="83:72"><call pos:start="81:5" pos:end="83:72"><name pos:start="81:5" pos:end="81:19">fw_cfg_add_file</name><argument_list pos:start="81:20" pos:end="83:72">(<argument pos:start="81:21" pos:end="81:38"><expr pos:start="81:21" pos:end="81:38"><name pos:start="81:21" pos:end="81:38"><name pos:start="81:21" pos:end="81:30">guest_info</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:38">fw_cfg</name></name></expr></argument>, <argument pos:start="81:41" pos:end="81:62"><expr pos:start="81:41" pos:end="81:62"><name pos:start="81:41" pos:end="81:62">ACPI_BUILD_TPMLOG_FILE</name></expr></argument>,

                    <argument pos:start="83:21" pos:end="83:40"><expr pos:start="83:21" pos:end="83:40"><name pos:start="83:21" pos:end="83:40"><name pos:start="83:21" pos:end="83:26">tables</name><operator pos:start="83:27" pos:end="83:27">.</operator><name pos:start="83:28" pos:end="83:34">tcpalog</name><operator pos:start="83:35" pos:end="83:36">-&gt;</operator><name pos:start="83:37" pos:end="83:40">data</name></name></expr></argument>, <argument pos:start="83:43" pos:end="83:71"><expr pos:start="83:43" pos:end="83:71"><call pos:start="83:43" pos:end="83:71"><name pos:start="83:43" pos:end="83:55">acpi_data_len</name><argument_list pos:start="83:56" pos:end="83:71">(<argument pos:start="83:57" pos:end="83:70"><expr pos:start="83:57" pos:end="83:70"><name pos:start="83:57" pos:end="83:70"><name pos:start="83:57" pos:end="83:62">tables</name><operator pos:start="83:63" pos:end="83:63">.</operator><name pos:start="83:64" pos:end="83:70">tcpalog</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="115:5"><if pos:start="87:5" pos:end="107:5">if <condition pos:start="87:8" pos:end="87:39">(<expr pos:start="87:9" pos:end="87:38"><name pos:start="87:9" pos:end="87:38"><name pos:start="87:9" pos:end="87:18">guest_info</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:38">has_immutable_rsdp</name></name></expr>)</condition> <block pos:start="87:41" pos:end="107:5">{<block_content pos:start="99:9" pos:end="105:46">

        <comment type="block" pos:start="89:9" pos:end="97:11">/*

         * Keep for compatibility with old machine types.

         * Though RSDP is small, its contents isn't immutable, so

         * update it along with the rest of tables on guest access.

         */</comment>

        <expr_stmt pos:start="99:9" pos:end="103:80"><expr pos:start="99:9" pos:end="103:79"><call pos:start="99:9" pos:end="103:79"><name pos:start="99:9" pos:end="99:32">fw_cfg_add_file_callback</name><argument_list pos:start="99:33" pos:end="103:79">(<argument pos:start="99:34" pos:end="99:51"><expr pos:start="99:34" pos:end="99:51"><name pos:start="99:34" pos:end="99:51"><name pos:start="99:34" pos:end="99:43">guest_info</name><operator pos:start="99:44" pos:end="99:45">-&gt;</operator><name pos:start="99:46" pos:end="99:51">fw_cfg</name></name></expr></argument>, <argument pos:start="99:54" pos:end="99:73"><expr pos:start="99:54" pos:end="99:73"><name pos:start="99:54" pos:end="99:73">ACPI_BUILD_RSDP_FILE</name></expr></argument>,

                                 <argument pos:start="101:34" pos:end="101:50"><expr pos:start="101:34" pos:end="101:50"><name pos:start="101:34" pos:end="101:50">acpi_build_update</name></expr></argument>, <argument pos:start="101:53" pos:end="101:63"><expr pos:start="101:53" pos:end="101:63"><name pos:start="101:53" pos:end="101:63">build_state</name></expr></argument>,

                                 <argument pos:start="103:34" pos:end="103:50"><expr pos:start="103:34" pos:end="103:50"><name pos:start="103:34" pos:end="103:50"><name pos:start="103:34" pos:end="103:39">tables</name><operator pos:start="103:40" pos:end="103:40">.</operator><name pos:start="103:41" pos:end="103:44">rsdp</name><operator pos:start="103:45" pos:end="103:46">-&gt;</operator><name pos:start="103:47" pos:end="103:50">data</name></name></expr></argument>, <argument pos:start="103:53" pos:end="103:78"><expr pos:start="103:53" pos:end="103:78"><call pos:start="103:53" pos:end="103:78"><name pos:start="103:53" pos:end="103:65">acpi_data_len</name><argument_list pos:start="103:66" pos:end="103:78">(<argument pos:start="103:67" pos:end="103:77"><expr pos:start="103:67" pos:end="103:77"><name pos:start="103:67" pos:end="103:77"><name pos:start="103:67" pos:end="103:72">tables</name><operator pos:start="103:73" pos:end="103:73">.</operator><name pos:start="103:74" pos:end="103:77">rsdp</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:46"><expr pos:start="105:9" pos:end="105:45"><name pos:start="105:9" pos:end="105:25"><name pos:start="105:9" pos:end="105:19">build_state</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:25">rsdp</name></name> <operator pos:start="105:27" pos:end="105:27">=</operator> <name pos:start="105:29" pos:end="105:45"><name pos:start="105:29" pos:end="105:34">tables</name><operator pos:start="105:35" pos:end="105:35">.</operator><name pos:start="105:36" pos:end="105:39">rsdp</name><operator pos:start="105:40" pos:end="105:41">-&gt;</operator><name pos:start="105:42" pos:end="105:45">data</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="107:7" pos:end="115:5">else <block pos:start="107:12" pos:end="115:5">{<block_content pos:start="109:9" pos:end="113:10">

        <expr_stmt pos:start="109:9" pos:end="113:10"><expr pos:start="109:9" pos:end="113:9"><name pos:start="109:9" pos:end="109:25"><name pos:start="109:9" pos:end="109:19">build_state</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:25">rsdp</name></name> <operator pos:start="109:27" pos:end="109:27">=</operator> <call pos:start="109:29" pos:end="113:9"><name pos:start="109:29" pos:end="109:44">qemu_get_ram_ptr</name><argument_list pos:start="109:45" pos:end="113:9">(

            <argument pos:start="111:13" pos:end="111:80"><expr pos:start="111:13" pos:end="111:80"><call pos:start="111:13" pos:end="111:80"><name pos:start="111:13" pos:end="111:29">acpi_add_rom_blob</name><argument_list pos:start="111:30" pos:end="111:80">(<argument pos:start="111:31" pos:end="111:41"><expr pos:start="111:31" pos:end="111:41"><name pos:start="111:31" pos:end="111:41">build_state</name></expr></argument>, <argument pos:start="111:44" pos:end="111:54"><expr pos:start="111:44" pos:end="111:54"><name pos:start="111:44" pos:end="111:54"><name pos:start="111:44" pos:end="111:49">tables</name><operator pos:start="111:50" pos:end="111:50">.</operator><name pos:start="111:51" pos:end="111:54">rsdp</name></name></expr></argument>, <argument pos:start="111:57" pos:end="111:76"><expr pos:start="111:57" pos:end="111:76"><name pos:start="111:57" pos:end="111:76">ACPI_BUILD_RSDP_FILE</name></expr></argument>, <argument pos:start="111:79" pos:end="111:79"><expr pos:start="111:79" pos:end="111:79"><literal type="number" pos:start="111:79" pos:end="111:79">0</literal></expr></argument>)</argument_list></call></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:55"><expr pos:start="119:5" pos:end="119:54"><call pos:start="119:5" pos:end="119:54"><name pos:start="119:5" pos:end="119:23">qemu_register_reset</name><argument_list pos:start="119:24" pos:end="119:54">(<argument pos:start="119:25" pos:end="119:40"><expr pos:start="119:25" pos:end="119:40"><name pos:start="119:25" pos:end="119:40">acpi_build_reset</name></expr></argument>, <argument pos:start="119:43" pos:end="119:53"><expr pos:start="119:43" pos:end="119:53"><name pos:start="119:43" pos:end="119:53">build_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:34"><expr pos:start="121:5" pos:end="121:33"><call pos:start="121:5" pos:end="121:33"><name pos:start="121:5" pos:end="121:20">acpi_build_reset</name><argument_list pos:start="121:21" pos:end="121:33">(<argument pos:start="121:22" pos:end="121:32"><expr pos:start="121:22" pos:end="121:32"><name pos:start="121:22" pos:end="121:32">build_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:64"><expr pos:start="123:5" pos:end="123:63"><call pos:start="123:5" pos:end="123:63"><name pos:start="123:5" pos:end="123:20">vmstate_register</name><argument_list pos:start="123:21" pos:end="123:63">(<argument pos:start="123:22" pos:end="123:25"><expr pos:start="123:22" pos:end="123:25"><name pos:start="123:22" pos:end="123:25">NULL</name></expr></argument>, <argument pos:start="123:28" pos:end="123:28"><expr pos:start="123:28" pos:end="123:28"><literal type="number" pos:start="123:28" pos:end="123:28">0</literal></expr></argument>, <argument pos:start="123:31" pos:end="123:49"><expr pos:start="123:31" pos:end="123:49"><operator pos:start="123:31" pos:end="123:31">&amp;</operator><name pos:start="123:32" pos:end="123:49">vmstate_acpi_build</name></expr></argument>, <argument pos:start="123:52" pos:end="123:62"><expr pos:start="123:52" pos:end="123:62"><name pos:start="123:52" pos:end="123:62">build_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="127:5" pos:end="131:7">/* Cleanup tables but don't free the memory: we track it

     * in build_state.

     */</comment>

    <expr_stmt pos:start="133:5" pos:end="133:46"><expr pos:start="133:5" pos:end="133:45"><call pos:start="133:5" pos:end="133:45"><name pos:start="133:5" pos:end="133:29">acpi_build_tables_cleanup</name><argument_list pos:start="133:30" pos:end="133:45">(<argument pos:start="133:31" pos:end="133:37"><expr pos:start="133:31" pos:end="133:37"><operator pos:start="133:31" pos:end="133:31">&amp;</operator><name pos:start="133:32" pos:end="133:37">tables</name></expr></argument>, <argument pos:start="133:40" pos:end="133:44"><expr pos:start="133:40" pos:end="133:44"><name pos:start="133:40" pos:end="133:44">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
