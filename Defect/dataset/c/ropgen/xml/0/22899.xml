<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22899.c" pos:tabs="8"><function pos:start="1:1" pos:end="321:1"><type pos:start="1:1" pos:end="1:22"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">FFPsyWindowInfo</name></type> <name pos:start="1:24" pos:end="1:38">psy_lame_window</name><parameter_list pos:start="1:39" pos:end="5:66">(<parameter pos:start="1:40" pos:end="1:56"><decl pos:start="1:40" pos:end="1:56"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:51">FFPsyContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">ctx</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:59"><decl pos:start="3:40" pos:end="3:59"><type pos:start="3:40" pos:end="3:59"><specifier pos:start="3:40" pos:end="3:44">const</specifier> <name pos:start="3:46" pos:end="3:52">int16_t</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:59">audio</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:78"><decl pos:start="3:62" pos:end="3:78"><type pos:start="3:62" pos:end="3:78"><specifier pos:start="3:62" pos:end="3:66">const</specifier> <name pos:start="3:68" pos:end="3:74">int16_t</name> <modifier pos:start="3:76" pos:end="3:76">*</modifier></type><name pos:start="3:77" pos:end="3:78">la</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:50"><decl pos:start="5:40" pos:end="5:50"><type pos:start="5:40" pos:end="5:50"><name pos:start="5:40" pos:end="5:42">int</name></type> <name pos:start="5:44" pos:end="5:50">channel</name></decl></parameter>, <parameter pos:start="5:53" pos:end="5:65"><decl pos:start="5:53" pos:end="5:65"><type pos:start="5:53" pos:end="5:65"><name pos:start="5:53" pos:end="5:55">int</name></type> <name pos:start="5:57" pos:end="5:65">prev_type</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="321:1">{<block_content pos:start="9:5" pos:end="319:14">

    <decl_stmt pos:start="9:5" pos:end="9:64"><decl pos:start="9:5" pos:end="9:63"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">AacPsyContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:23">pctx</name> <init pos:start="9:25" pos:end="9:63">= <expr pos:start="9:27" pos:end="9:63"><operator pos:start="9:27" pos:end="9:27">(</operator><name pos:start="9:28" pos:end="9:40">AacPsyContext</name><operator pos:start="9:41" pos:end="9:41">*</operator><operator pos:start="9:42" pos:end="9:42">)</operator> <name pos:start="9:44" pos:end="9:63"><name pos:start="9:44" pos:end="9:46">ctx</name><operator pos:start="9:47" pos:end="9:48">-&gt;</operator><name pos:start="9:49" pos:end="9:63">model_priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">AacPsyChannel</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">pch</name>  <init pos:start="11:25" pos:end="11:44">= <expr pos:start="11:27" pos:end="11:44"><operator pos:start="11:27" pos:end="11:27">&amp;</operator><name pos:start="11:28" pos:end="11:44"><name pos:start="11:28" pos:end="11:31">pctx</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:35">ch</name><index pos:start="11:36" pos:end="11:44">[<expr pos:start="11:37" pos:end="11:43"><name pos:start="11:37" pos:end="11:43">channel</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">grouping</name>     <init pos:start="13:22" pos:end="13:24">= <expr pos:start="13:24" pos:end="13:24"><literal type="number" pos:start="13:24" pos:end="13:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:20">uselongblock</name> <init pos:start="15:22" pos:end="15:24">= <expr pos:start="15:24" pos:end="15:24"><literal type="number" pos:start="15:24" pos:end="15:24">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:50"><decl pos:start="17:5" pos:end="17:49"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:41"><name pos:start="17:9" pos:end="17:15">attacks</name><index pos:start="17:16" pos:end="17:41">[<expr pos:start="17:17" pos:end="17:40"><name pos:start="17:17" pos:end="17:36">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="17:38" pos:end="17:38">+</operator> <literal type="number" pos:start="17:40" pos:end="17:40">1</literal></expr>]</index></name> <init pos:start="17:43" pos:end="17:49">= <expr pos:start="17:45" pos:end="17:49"><block pos:start="17:45" pos:end="17:49">{ <expr pos:start="17:47" pos:end="17:47"><literal type="number" pos:start="17:47" pos:end="17:47">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:19">FFPsyWindowInfo</name></type> <name pos:start="21:21" pos:end="21:22">wi</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><call pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:10">memset</name><argument_list pos:start="25:11" pos:end="25:30">(<argument pos:start="25:12" pos:end="25:14"><expr pos:start="25:12" pos:end="25:14"><operator pos:start="25:12" pos:end="25:12">&amp;</operator><name pos:start="25:13" pos:end="25:14">wi</name></expr></argument>, <argument pos:start="25:17" pos:end="25:17"><expr pos:start="25:17" pos:end="25:17"><literal type="number" pos:start="25:17" pos:end="25:17">0</literal></expr></argument>, <argument pos:start="25:20" pos:end="25:29"><expr pos:start="25:20" pos:end="25:29"><sizeof pos:start="25:20" pos:end="25:29">sizeof<argument_list pos:start="25:26" pos:end="25:29">(<argument pos:start="25:27" pos:end="25:28"><expr pos:start="25:27" pos:end="25:28"><name pos:start="25:27" pos:end="25:28">wi</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="239:5"><if pos:start="27:5" pos:end="233:5">if <condition pos:start="27:8" pos:end="27:11">(<expr pos:start="27:9" pos:end="27:10"><name pos:start="27:9" pos:end="27:10">la</name></expr>)</condition> <block pos:start="27:13" pos:end="233:5">{<block_content pos:start="29:9" pos:end="231:9">

        <decl_stmt pos:start="29:9" pos:end="29:43"><decl pos:start="29:9" pos:end="29:42"><type pos:start="29:9" pos:end="29:13"><name pos:start="29:9" pos:end="29:13">float</name></type> <name pos:start="29:15" pos:end="29:42"><name pos:start="29:15" pos:end="29:21">hpfsmpl</name><index pos:start="29:22" pos:end="29:42">[<expr pos:start="29:23" pos:end="29:41"><name pos:start="29:23" pos:end="29:41">AAC_BLOCK_SIZE_LONG</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:34"><decl pos:start="31:9" pos:end="31:33"><type pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:13">float</name> <specifier pos:start="31:15" pos:end="31:19">const</specifier> <modifier pos:start="31:21" pos:end="31:21">*</modifier></type><name pos:start="31:22" pos:end="31:23">pf</name> <init pos:start="31:25" pos:end="31:33">= <expr pos:start="31:27" pos:end="31:33"><name pos:start="31:27" pos:end="31:33">hpfsmpl</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:84"><decl pos:start="33:9" pos:end="33:83"><type pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:13">float</name></type> <name pos:start="33:15" pos:end="33:83"><name pos:start="33:15" pos:end="33:30">attack_intensity</name><index pos:start="33:31" pos:end="33:83">[<expr pos:start="33:32" pos:end="33:82"><operator pos:start="33:32" pos:end="33:32">(</operator><name pos:start="33:33" pos:end="33:52">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="33:54" pos:end="33:54">+</operator> <literal type="number" pos:start="33:56" pos:end="33:56">1</literal><operator pos:start="33:57" pos:end="33:57">)</operator> <operator pos:start="33:59" pos:end="33:59">*</operator> <name pos:start="33:61" pos:end="33:82">PSY_LAME_NUM_SUBBLOCKS</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:83"><decl pos:start="35:9" pos:end="35:82"><type pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:13">float</name></type> <name pos:start="35:15" pos:end="35:82"><name pos:start="35:15" pos:end="35:29">energy_subshort</name><index pos:start="35:30" pos:end="35:82">[<expr pos:start="35:31" pos:end="35:81"><operator pos:start="35:31" pos:end="35:31">(</operator><name pos:start="35:32" pos:end="35:51">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="35:53" pos:end="35:53">+</operator> <literal type="number" pos:start="35:55" pos:end="35:55">1</literal><operator pos:start="35:56" pos:end="35:56">)</operator> <operator pos:start="35:58" pos:end="35:58">*</operator> <name pos:start="35:60" pos:end="35:81">PSY_LAME_NUM_SUBBLOCKS</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:61"><decl pos:start="37:9" pos:end="37:60"><type pos:start="37:9" pos:end="37:13"><name pos:start="37:9" pos:end="37:13">float</name></type> <name pos:start="37:15" pos:end="37:52"><name pos:start="37:15" pos:end="37:26">energy_short</name><index pos:start="37:27" pos:end="37:52">[<expr pos:start="37:28" pos:end="37:51"><name pos:start="37:28" pos:end="37:47">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="37:49" pos:end="37:49">+</operator> <literal type="number" pos:start="37:51" pos:end="37:51">1</literal></expr>]</index></name> <init pos:start="37:54" pos:end="37:60">= <expr pos:start="37:56" pos:end="37:60"><block pos:start="37:56" pos:end="37:60">{ <expr pos:start="37:58" pos:end="37:58"><literal type="number" pos:start="37:58" pos:end="37:58">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:41"><decl pos:start="39:9" pos:end="39:40"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:17">chans</name> <init pos:start="39:19" pos:end="39:40">= <expr pos:start="39:21" pos:end="39:40"><name pos:start="39:21" pos:end="39:40"><name pos:start="39:21" pos:end="39:23">ctx</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:30">avctx</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:40">channels</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:89"><decl pos:start="41:9" pos:end="41:88"><type pos:start="41:9" pos:end="41:23"><specifier pos:start="41:9" pos:end="41:13">const</specifier> <name pos:start="41:15" pos:end="41:21">int16_t</name> <modifier pos:start="41:23" pos:end="41:23">*</modifier></type><name pos:start="41:24" pos:end="41:29">firbuf</name> <init pos:start="41:31" pos:end="41:88">= <expr pos:start="41:33" pos:end="41:88"><name pos:start="41:33" pos:end="41:34">la</name> <operator pos:start="41:36" pos:end="41:36">+</operator> <operator pos:start="41:38" pos:end="41:38">(</operator><name pos:start="41:39" pos:end="41:58">AAC_BLOCK_SIZE_SHORT</name><operator pos:start="41:59" pos:end="41:59">/</operator><literal type="number" pos:start="41:60" pos:end="41:62">4</literal> <operator pos:start="41:62" pos:end="41:62">-</operator> <name pos:start="41:64" pos:end="41:79">PSY_LAME_FIR_LEN</name><operator pos:start="41:80" pos:end="41:80">)</operator> <operator pos:start="41:82" pos:end="41:82">*</operator> <name pos:start="41:84" pos:end="41:88">chans</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:27"><decl pos:start="43:9" pos:end="43:13"><type pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">int</name></type> <name pos:start="43:13" pos:end="43:13">j</name></decl>, <decl pos:start="43:16" pos:end="43:26"><type ref="prev" pos:start="43:9" pos:end="43:11"/><name pos:start="43:16" pos:end="43:22">att_sum</name> <init pos:start="43:24" pos:end="43:26">= <expr pos:start="43:26" pos:end="43:26"><literal type="number" pos:start="43:26" pos:end="43:26">0</literal></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="47:9" pos:end="47:58">/* LAME comment: apply high pass filter of fs/4 */</comment>

        <for pos:start="49:9" pos:end="67:9">for <control pos:start="49:13" pos:end="49:49">(<init pos:start="49:14" pos:end="49:19"><expr pos:start="49:14" pos:end="49:18"><name pos:start="49:14" pos:end="49:14">i</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>;</init> <condition pos:start="49:21" pos:end="49:44"><expr pos:start="49:21" pos:end="49:43"><name pos:start="49:21" pos:end="49:21">i</name> <operator pos:start="49:23" pos:end="49:23">&lt;</operator> <name pos:start="49:25" pos:end="49:43">AAC_BLOCK_SIZE_LONG</name></expr>;</condition> <incr pos:start="49:46" pos:end="49:48"><expr pos:start="49:46" pos:end="49:48"><name pos:start="49:46" pos:end="49:46">i</name><operator pos:start="49:47" pos:end="49:48">++</operator></expr></incr>)</control> <block pos:start="49:51" pos:end="67:9">{<block_content pos:start="51:13" pos:end="65:37">

            <decl_stmt pos:start="51:13" pos:end="51:29"><decl pos:start="51:13" pos:end="51:22"><type pos:start="51:13" pos:end="51:17"><name pos:start="51:13" pos:end="51:17">float</name></type> <name pos:start="51:19" pos:end="51:22">sum1</name></decl>, <decl pos:start="51:25" pos:end="51:28"><type ref="prev" pos:start="51:13" pos:end="51:17"/><name pos:start="51:25" pos:end="51:28">sum2</name></decl>;</decl_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:70"><expr pos:start="53:13" pos:end="53:69"><name pos:start="53:13" pos:end="53:16">sum1</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:69"><name pos:start="53:20" pos:end="53:25">firbuf</name><index pos:start="53:26" pos:end="53:69">[<expr pos:start="53:27" pos:end="53:68"><operator pos:start="53:27" pos:end="53:27">(</operator><name pos:start="53:28" pos:end="53:28">i</name> <operator pos:start="53:30" pos:end="53:30">+</operator> <operator pos:start="53:32" pos:end="53:32">(</operator><operator pos:start="53:33" pos:end="53:33">(</operator><name pos:start="53:34" pos:end="53:49">PSY_LAME_FIR_LEN</name> <operator pos:start="53:51" pos:end="53:51">-</operator> <literal type="number" pos:start="53:53" pos:end="53:53">1</literal><operator pos:start="53:54" pos:end="53:54">)</operator> <operator pos:start="53:56" pos:end="53:56">/</operator> <literal type="number" pos:start="53:58" pos:end="53:58">2</literal><operator pos:start="53:59" pos:end="53:59">)</operator><operator pos:start="53:60" pos:end="53:60">)</operator> <operator pos:start="53:62" pos:end="53:62">*</operator> <name pos:start="53:64" pos:end="53:68">chans</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:23"><expr pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:16">sum2</name> <operator pos:start="55:18" pos:end="55:18">=</operator> <literal type="number" pos:start="55:20" pos:end="55:22">0.0</literal></expr>;</expr_stmt>

            <for pos:start="57:13" pos:end="63:13">for <control pos:start="57:17" pos:end="57:69">(<init pos:start="57:18" pos:end="57:23"><expr pos:start="57:18" pos:end="57:22"><name pos:start="57:18" pos:end="57:18">j</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <literal type="number" pos:start="57:22" pos:end="57:22">0</literal></expr>;</init> <condition pos:start="57:25" pos:end="57:61"><expr pos:start="57:25" pos:end="57:60"><name pos:start="57:25" pos:end="57:25">j</name> <operator pos:start="57:27" pos:end="57:27">&lt;</operator> <operator pos:start="57:29" pos:end="57:29">(</operator><operator pos:start="57:30" pos:end="57:30">(</operator><name pos:start="57:31" pos:end="57:46">PSY_LAME_FIR_LEN</name> <operator pos:start="57:48" pos:end="57:48">-</operator> <literal type="number" pos:start="57:50" pos:end="57:50">1</literal><operator pos:start="57:51" pos:end="57:51">)</operator> <operator pos:start="57:53" pos:end="57:53">/</operator> <literal type="number" pos:start="57:55" pos:end="57:55">2</literal><operator pos:start="57:56" pos:end="57:56">)</operator> <operator pos:start="57:58" pos:end="57:58">-</operator> <literal type="number" pos:start="57:60" pos:end="57:60">1</literal></expr>;</condition> <incr pos:start="57:63" pos:end="57:68"><expr pos:start="57:63" pos:end="57:68"><name pos:start="57:63" pos:end="57:63">j</name> <operator pos:start="57:65" pos:end="57:66">+=</operator> <literal type="number" pos:start="57:68" pos:end="57:68">2</literal></expr></incr>)</control> <block pos:start="57:71" pos:end="63:13">{<block_content pos:start="59:17" pos:end="61:127">

                <expr_stmt pos:start="59:17" pos:end="59:115"><expr pos:start="59:17" pos:end="59:114"><name pos:start="59:17" pos:end="59:20">sum1</name> <operator pos:start="59:22" pos:end="59:23">+=</operator> <name pos:start="59:25" pos:end="59:41"><name pos:start="59:25" pos:end="59:38">psy_fir_coeffs</name><index pos:start="59:39" pos:end="59:41">[<expr pos:start="59:40" pos:end="59:40"><name pos:start="59:40" pos:end="59:40">j</name></expr>]</index></name> <operator pos:start="59:43" pos:end="59:43">*</operator> <operator pos:start="59:45" pos:end="59:45">(</operator><name pos:start="59:46" pos:end="59:68"><name pos:start="59:46" pos:end="59:51">firbuf</name><index pos:start="59:52" pos:end="59:68">[<expr pos:start="59:53" pos:end="59:67"><operator pos:start="59:53" pos:end="59:53">(</operator><name pos:start="59:54" pos:end="59:54">i</name> <operator pos:start="59:56" pos:end="59:56">+</operator> <name pos:start="59:58" pos:end="59:58">j</name><operator pos:start="59:59" pos:end="59:59">)</operator> <operator pos:start="59:61" pos:end="59:61">*</operator> <name pos:start="59:63" pos:end="59:67">chans</name></expr>]</index></name> <operator pos:start="59:70" pos:end="59:70">+</operator> <name pos:start="59:72" pos:end="59:113"><name pos:start="59:72" pos:end="59:77">firbuf</name><index pos:start="59:78" pos:end="59:113">[<expr pos:start="59:79" pos:end="59:112"><operator pos:start="59:79" pos:end="59:79">(</operator><name pos:start="59:80" pos:end="59:80">i</name> <operator pos:start="59:82" pos:end="59:82">+</operator> <name pos:start="59:84" pos:end="59:99">PSY_LAME_FIR_LEN</name> <operator pos:start="59:101" pos:end="59:101">-</operator> <name pos:start="59:103" pos:end="59:103">j</name><operator pos:start="59:104" pos:end="59:104">)</operator> <operator pos:start="59:106" pos:end="59:106">*</operator> <name pos:start="59:108" pos:end="59:112">chans</name></expr>]</index></name><operator pos:start="59:114" pos:end="59:114">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:127"><expr pos:start="61:17" pos:end="61:126"><name pos:start="61:17" pos:end="61:20">sum2</name> <operator pos:start="61:22" pos:end="61:23">+=</operator> <name pos:start="61:25" pos:end="61:45"><name pos:start="61:25" pos:end="61:38">psy_fir_coeffs</name><index pos:start="61:39" pos:end="61:45">[<expr pos:start="61:40" pos:end="61:44"><name pos:start="61:40" pos:end="61:40">j</name> <operator pos:start="61:42" pos:end="61:42">+</operator> <literal type="number" pos:start="61:44" pos:end="61:44">1</literal></expr>]</index></name> <operator pos:start="61:47" pos:end="61:47">*</operator> <operator pos:start="61:49" pos:end="61:49">(</operator><name pos:start="61:50" pos:end="61:76"><name pos:start="61:50" pos:end="61:55">firbuf</name><index pos:start="61:56" pos:end="61:76">[<expr pos:start="61:57" pos:end="61:75"><operator pos:start="61:57" pos:end="61:57">(</operator><name pos:start="61:58" pos:end="61:58">i</name> <operator pos:start="61:60" pos:end="61:60">+</operator> <name pos:start="61:62" pos:end="61:62">j</name> <operator pos:start="61:64" pos:end="61:64">+</operator> <literal type="number" pos:start="61:66" pos:end="61:66">1</literal><operator pos:start="61:67" pos:end="61:67">)</operator> <operator pos:start="61:69" pos:end="61:69">*</operator> <name pos:start="61:71" pos:end="61:75">chans</name></expr>]</index></name> <operator pos:start="61:78" pos:end="61:78">+</operator> <name pos:start="61:80" pos:end="61:125"><name pos:start="61:80" pos:end="61:85">firbuf</name><index pos:start="61:86" pos:end="61:125">[<expr pos:start="61:87" pos:end="61:124"><operator pos:start="61:87" pos:end="61:87">(</operator><name pos:start="61:88" pos:end="61:88">i</name> <operator pos:start="61:90" pos:end="61:90">+</operator> <name pos:start="61:92" pos:end="61:107">PSY_LAME_FIR_LEN</name> <operator pos:start="61:109" pos:end="61:109">-</operator> <name pos:start="61:111" pos:end="61:111">j</name> <operator pos:start="61:113" pos:end="61:113">-</operator> <literal type="number" pos:start="61:115" pos:end="61:115">1</literal><operator pos:start="61:116" pos:end="61:116">)</operator> <operator pos:start="61:118" pos:end="61:118">*</operator> <name pos:start="61:120" pos:end="61:124">chans</name></expr>]</index></name><operator pos:start="61:126" pos:end="61:126">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="65:13" pos:end="65:37"><expr pos:start="65:13" pos:end="65:36"><name pos:start="65:13" pos:end="65:22"><name pos:start="65:13" pos:end="65:19">hpfsmpl</name><index pos:start="65:20" pos:end="65:22">[<expr pos:start="65:21" pos:end="65:21"><name pos:start="65:21" pos:end="65:21">i</name></expr>]</index></name> <operator pos:start="65:24" pos:end="65:24">=</operator> <name pos:start="65:26" pos:end="65:29">sum1</name> <operator pos:start="65:31" pos:end="65:31">+</operator> <name pos:start="65:33" pos:end="65:36">sum2</name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="71:9" pos:end="71:59">/* Calculate the energies of each sub-shortblock */</comment>

        <for pos:start="73:9" pos:end="83:9">for <control pos:start="73:13" pos:end="73:52">(<init pos:start="73:14" pos:end="73:19"><expr pos:start="73:14" pos:end="73:18"><name pos:start="73:14" pos:end="73:14">i</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <literal type="number" pos:start="73:18" pos:end="73:18">0</literal></expr>;</init> <condition pos:start="73:21" pos:end="73:47"><expr pos:start="73:21" pos:end="73:46"><name pos:start="73:21" pos:end="73:21">i</name> <operator pos:start="73:23" pos:end="73:23">&lt;</operator> <name pos:start="73:25" pos:end="73:46">PSY_LAME_NUM_SUBBLOCKS</name></expr>;</condition> <incr pos:start="73:49" pos:end="73:51"><expr pos:start="73:49" pos:end="73:51"><name pos:start="73:49" pos:end="73:49">i</name><operator pos:start="73:50" pos:end="73:51">++</operator></expr></incr>)</control> <block pos:start="73:54" pos:end="83:9">{<block_content pos:start="75:13" pos:end="81:50">

            <expr_stmt pos:start="75:13" pos:end="75:118"><expr pos:start="75:13" pos:end="75:117"><name pos:start="75:13" pos:end="75:30"><name pos:start="75:13" pos:end="75:27">energy_subshort</name><index pos:start="75:28" pos:end="75:30">[<expr pos:start="75:29" pos:end="75:29"><name pos:start="75:29" pos:end="75:29">i</name></expr>]</index></name> <operator pos:start="75:32" pos:end="75:32">=</operator> <name pos:start="75:34" pos:end="75:117"><name pos:start="75:34" pos:end="75:36">pch</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:58">prev_energy_subshort</name><index pos:start="75:59" pos:end="75:117">[<expr pos:start="75:60" pos:end="75:116"><name pos:start="75:60" pos:end="75:60">i</name> <operator pos:start="75:62" pos:end="75:62">+</operator> <operator pos:start="75:64" pos:end="75:64">(</operator><operator pos:start="75:65" pos:end="75:65">(</operator><name pos:start="75:66" pos:end="75:85">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="75:87" pos:end="75:87">-</operator> <literal type="number" pos:start="75:89" pos:end="75:89">1</literal><operator pos:start="75:90" pos:end="75:90">)</operator> <operator pos:start="75:92" pos:end="75:92">*</operator> <name pos:start="75:94" pos:end="75:115">PSY_LAME_NUM_SUBBLOCKS</name><operator pos:start="75:116" pos:end="75:116">)</operator></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:113"><expr pos:start="77:13" pos:end="77:112"><call pos:start="77:13" pos:end="77:112"><name pos:start="77:13" pos:end="77:18">assert</name><argument_list pos:start="77:19" pos:end="77:112">(<argument pos:start="77:20" pos:end="77:111"><expr pos:start="77:20" pos:end="77:111"><name pos:start="77:20" pos:end="77:107"><name pos:start="77:20" pos:end="77:22">pch</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:44">prev_energy_subshort</name><index pos:start="77:45" pos:end="77:107">[<expr pos:start="77:46" pos:end="77:106"><name pos:start="77:46" pos:end="77:46">i</name> <operator pos:start="77:48" pos:end="77:48">+</operator> <operator pos:start="77:50" pos:end="77:50">(</operator><operator pos:start="77:51" pos:end="77:51">(</operator><name pos:start="77:52" pos:end="77:71">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="77:73" pos:end="77:73">-</operator> <literal type="number" pos:start="77:75" pos:end="77:75">2</literal><operator pos:start="77:76" pos:end="77:76">)</operator> <operator pos:start="77:78" pos:end="77:78">*</operator> <name pos:start="77:80" pos:end="77:101">PSY_LAME_NUM_SUBBLOCKS</name> <operator pos:start="77:103" pos:end="77:103">+</operator> <literal type="number" pos:start="77:105" pos:end="77:105">1</literal><operator pos:start="77:106" pos:end="77:106">)</operator></expr>]</index></name> <operator pos:start="77:109" pos:end="77:109">&gt;</operator> <literal type="number" pos:start="77:111" pos:end="77:111">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:144"><expr pos:start="79:13" pos:end="79:143"><name pos:start="79:13" pos:end="79:31"><name pos:start="79:13" pos:end="79:28">attack_intensity</name><index pos:start="79:29" pos:end="79:31">[<expr pos:start="79:30" pos:end="79:30"><name pos:start="79:30" pos:end="79:30">i</name></expr>]</index></name> <operator pos:start="79:33" pos:end="79:33">=</operator> <name pos:start="79:35" pos:end="79:52"><name pos:start="79:35" pos:end="79:49">energy_subshort</name><index pos:start="79:50" pos:end="79:52">[<expr pos:start="79:51" pos:end="79:51"><name pos:start="79:51" pos:end="79:51">i</name></expr>]</index></name> <operator pos:start="79:54" pos:end="79:54">/</operator> <name pos:start="79:56" pos:end="79:143"><name pos:start="79:56" pos:end="79:58">pch</name><operator pos:start="79:59" pos:end="79:60">-&gt;</operator><name pos:start="79:61" pos:end="79:80">prev_energy_subshort</name><index pos:start="79:81" pos:end="79:143">[<expr pos:start="79:82" pos:end="79:142"><name pos:start="79:82" pos:end="79:82">i</name> <operator pos:start="79:84" pos:end="79:84">+</operator> <operator pos:start="79:86" pos:end="79:86">(</operator><operator pos:start="79:87" pos:end="79:87">(</operator><name pos:start="79:88" pos:end="79:107">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="79:109" pos:end="79:109">-</operator> <literal type="number" pos:start="79:111" pos:end="79:111">2</literal><operator pos:start="79:112" pos:end="79:112">)</operator> <operator pos:start="79:114" pos:end="79:114">*</operator> <name pos:start="79:116" pos:end="79:137">PSY_LAME_NUM_SUBBLOCKS</name> <operator pos:start="79:139" pos:end="79:139">+</operator> <literal type="number" pos:start="79:141" pos:end="79:141">1</literal><operator pos:start="79:142" pos:end="79:142">)</operator></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:50"><expr pos:start="81:13" pos:end="81:49"><name pos:start="81:13" pos:end="81:27"><name pos:start="81:13" pos:end="81:24">energy_short</name><index pos:start="81:25" pos:end="81:27">[<expr pos:start="81:26" pos:end="81:26"><literal type="number" pos:start="81:26" pos:end="81:26">0</literal></expr>]</index></name> <operator pos:start="81:29" pos:end="81:30">+=</operator> <name pos:start="81:32" pos:end="81:49"><name pos:start="81:32" pos:end="81:46">energy_subshort</name><index pos:start="81:47" pos:end="81:49">[<expr pos:start="81:48" pos:end="81:48"><name pos:start="81:48" pos:end="81:48">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <for pos:start="87:9" pos:end="131:9">for <control pos:start="87:13" pos:end="87:75">(<init pos:start="87:14" pos:end="87:19"><expr pos:start="87:14" pos:end="87:18"><name pos:start="87:14" pos:end="87:14">i</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <literal type="number" pos:start="87:18" pos:end="87:18">0</literal></expr>;</init> <condition pos:start="87:21" pos:end="87:70"><expr pos:start="87:21" pos:end="87:69"><name pos:start="87:21" pos:end="87:21">i</name> <operator pos:start="87:23" pos:end="87:23">&lt;</operator> <name pos:start="87:25" pos:end="87:44">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="87:46" pos:end="87:46">*</operator> <name pos:start="87:48" pos:end="87:69">PSY_LAME_NUM_SUBBLOCKS</name></expr>;</condition> <incr pos:start="87:72" pos:end="87:74"><expr pos:start="87:72" pos:end="87:74"><name pos:start="87:72" pos:end="87:72">i</name><operator pos:start="87:73" pos:end="87:74">++</operator></expr></incr>)</control> <block pos:start="87:77" pos:end="131:9">{<block_content pos:start="89:13" pos:end="129:61">

            <decl_stmt pos:start="89:13" pos:end="89:112"><decl pos:start="89:13" pos:end="89:111"><type pos:start="89:13" pos:end="89:30"><name pos:start="89:13" pos:end="89:17">float</name> <specifier pos:start="89:19" pos:end="89:23">const</specifier> <modifier pos:start="89:25" pos:end="89:25">*</modifier><specifier pos:start="89:26" pos:end="89:30">const</specifier></type> <name pos:start="89:32" pos:end="89:34">pfe</name> <init pos:start="89:36" pos:end="89:111">= <expr pos:start="89:38" pos:end="89:111"><name pos:start="89:38" pos:end="89:39">pf</name> <operator pos:start="89:41" pos:end="89:41">+</operator> <name pos:start="89:43" pos:end="89:61">AAC_BLOCK_SIZE_LONG</name> <operator pos:start="89:63" pos:end="89:63">/</operator> <operator pos:start="89:65" pos:end="89:65">(</operator><name pos:start="89:66" pos:end="89:85">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="89:87" pos:end="89:87">*</operator> <name pos:start="89:89" pos:end="89:110">PSY_LAME_NUM_SUBBLOCKS</name><operator pos:start="89:111" pos:end="89:111">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="91:13" pos:end="91:27"><decl pos:start="91:13" pos:end="91:26"><type pos:start="91:13" pos:end="91:17"><name pos:start="91:13" pos:end="91:17">float</name></type> <name pos:start="91:19" pos:end="91:19">p</name> <init pos:start="91:21" pos:end="91:26">= <expr pos:start="91:23" pos:end="91:26"><literal type="number" pos:start="91:23" pos:end="91:26">1.0f</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="93:13" pos:end="97:35">for <control pos:start="93:17" pos:end="93:34">(<init pos:start="93:18" pos:end="93:18">;</init> <condition pos:start="93:20" pos:end="93:28"><expr pos:start="93:20" pos:end="93:27"><name pos:start="93:20" pos:end="93:21">pf</name> <operator pos:start="93:23" pos:end="93:23">&lt;</operator> <name pos:start="93:25" pos:end="93:27">pfe</name></expr>;</condition> <incr pos:start="93:30" pos:end="93:33"><expr pos:start="93:30" pos:end="93:33"><name pos:start="93:30" pos:end="93:31">pf</name><operator pos:start="93:32" pos:end="93:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="95:17" pos:end="97:35"><block_content pos:start="95:17" pos:end="97:35">

                <if_stmt pos:start="95:17" pos:end="97:35"><if pos:start="95:17" pos:end="97:35">if <condition pos:start="95:20" pos:end="95:35">(<expr pos:start="95:21" pos:end="95:34"><name pos:start="95:21" pos:end="95:21">p</name> <operator pos:start="95:23" pos:end="95:23">&lt;</operator> <call pos:start="95:25" pos:end="95:34"><name pos:start="95:25" pos:end="95:29">fabsf</name><argument_list pos:start="95:30" pos:end="95:34">(<argument pos:start="95:31" pos:end="95:33"><expr pos:start="95:31" pos:end="95:33"><operator pos:start="95:31" pos:end="95:31">*</operator><name pos:start="95:32" pos:end="95:33">pf</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="97:21" pos:end="97:35"><block_content pos:start="97:21" pos:end="97:35">

                    <expr_stmt pos:start="97:21" pos:end="97:35"><expr pos:start="97:21" pos:end="97:34"><name pos:start="97:21" pos:end="97:21">p</name> <operator pos:start="97:23" pos:end="97:23">=</operator> <call pos:start="97:25" pos:end="97:34"><name pos:start="97:25" pos:end="97:29">fabsf</name><argument_list pos:start="97:30" pos:end="97:34">(<argument pos:start="97:31" pos:end="97:33"><expr pos:start="97:31" pos:end="97:33"><operator pos:start="97:31" pos:end="97:31">*</operator><name pos:start="97:32" pos:end="97:33">pf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

            <expr_stmt pos:start="99:13" pos:end="99:91"><expr pos:start="99:13" pos:end="99:90"><name pos:start="99:13" pos:end="99:40"><name pos:start="99:13" pos:end="99:15">pch</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:37">prev_energy_subshort</name><index pos:start="99:38" pos:end="99:40">[<expr pos:start="99:39" pos:end="99:39"><name pos:start="99:39" pos:end="99:39">i</name></expr>]</index></name> <operator pos:start="99:42" pos:end="99:42">=</operator> <name pos:start="99:44" pos:end="99:86"><name pos:start="99:44" pos:end="99:58">energy_subshort</name><index pos:start="99:59" pos:end="99:86">[<expr pos:start="99:60" pos:end="99:85"><name pos:start="99:60" pos:end="99:60">i</name> <operator pos:start="99:62" pos:end="99:62">+</operator> <name pos:start="99:64" pos:end="99:85">PSY_LAME_NUM_SUBBLOCKS</name></expr>]</index></name> <operator pos:start="99:88" pos:end="99:88">=</operator> <name pos:start="99:90" pos:end="99:90">p</name></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:62"><expr pos:start="101:13" pos:end="101:61"><name pos:start="101:13" pos:end="101:56"><name pos:start="101:13" pos:end="101:24">energy_short</name><index pos:start="101:25" pos:end="101:56">[<expr pos:start="101:26" pos:end="101:55"><literal type="number" pos:start="101:26" pos:end="101:26">1</literal> <operator pos:start="101:28" pos:end="101:28">+</operator> <name pos:start="101:30" pos:end="101:30">i</name> <operator pos:start="101:32" pos:end="101:32">/</operator> <name pos:start="101:34" pos:end="101:55">PSY_LAME_NUM_SUBBLOCKS</name></expr>]</index></name> <operator pos:start="101:58" pos:end="101:59">+=</operator> <name pos:start="101:61" pos:end="101:61">p</name></expr>;</expr_stmt>

            <comment type="block" pos:start="103:13" pos:end="115:15">/* FIXME: The indexes below are [i + 3 - 2] in the LAME source.

             *          Obviously the 3 and 2 have some significance, or this would be just [i + 1]

             *          (which is what we use here). What the 3 stands for is ambigious, as it is both

             *          number of short blocks, and the number of sub-short blocks.

             *          It seems that LAME is comparing each sub-block to sub-block + 1 in the

             *          previous block.

             */</comment>

            <if_stmt pos:start="117:13" pos:end="127:24"><if pos:start="117:13" pos:end="119:47">if <condition pos:start="117:16" pos:end="117:43">(<expr pos:start="117:17" pos:end="117:42"><name pos:start="117:17" pos:end="117:17">p</name> <operator pos:start="117:19" pos:end="117:19">&gt;</operator> <name pos:start="117:21" pos:end="117:42"><name pos:start="117:21" pos:end="117:35">energy_subshort</name><index pos:start="117:36" pos:end="117:42">[<expr pos:start="117:37" pos:end="117:41"><name pos:start="117:37" pos:end="117:37">i</name> <operator pos:start="117:39" pos:end="117:39">+</operator> <literal type="number" pos:start="117:41" pos:end="117:41">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="119:17" pos:end="119:47"><block_content pos:start="119:17" pos:end="119:47">

                <expr_stmt pos:start="119:17" pos:end="119:47"><expr pos:start="119:17" pos:end="119:46"><name pos:start="119:17" pos:end="119:17">p</name> <operator pos:start="119:19" pos:end="119:19">=</operator> <name pos:start="119:21" pos:end="119:21">p</name> <operator pos:start="119:23" pos:end="119:23">/</operator> <name pos:start="119:25" pos:end="119:46"><name pos:start="119:25" pos:end="119:39">energy_subshort</name><index pos:start="119:40" pos:end="119:46">[<expr pos:start="119:41" pos:end="119:45"><name pos:start="119:41" pos:end="119:41">i</name> <operator pos:start="119:43" pos:end="119:43">+</operator> <literal type="number" pos:start="119:45" pos:end="119:45">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="121:13" pos:end="123:57">else if <condition pos:start="121:21" pos:end="121:56">(<expr pos:start="121:22" pos:end="121:55"><name pos:start="121:22" pos:end="121:43"><name pos:start="121:22" pos:end="121:36">energy_subshort</name><index pos:start="121:37" pos:end="121:43">[<expr pos:start="121:38" pos:end="121:42"><name pos:start="121:38" pos:end="121:38">i</name> <operator pos:start="121:40" pos:end="121:40">+</operator> <literal type="number" pos:start="121:42" pos:end="121:42">1</literal></expr>]</index></name> <operator pos:start="121:45" pos:end="121:45">&gt;</operator> <name pos:start="121:47" pos:end="121:47">p</name> <operator pos:start="121:49" pos:end="121:49">*</operator> <literal type="number" pos:start="121:51" pos:end="121:55">10.0f</literal></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:57"><block_content pos:start="123:17" pos:end="123:57">

                <expr_stmt pos:start="123:17" pos:end="123:57"><expr pos:start="123:17" pos:end="123:56"><name pos:start="123:17" pos:end="123:17">p</name> <operator pos:start="123:19" pos:end="123:19">=</operator> <name pos:start="123:21" pos:end="123:42"><name pos:start="123:21" pos:end="123:35">energy_subshort</name><index pos:start="123:36" pos:end="123:42">[<expr pos:start="123:37" pos:end="123:41"><name pos:start="123:37" pos:end="123:37">i</name> <operator pos:start="123:39" pos:end="123:39">+</operator> <literal type="number" pos:start="123:41" pos:end="123:41">1</literal></expr>]</index></name> <operator pos:start="123:44" pos:end="123:44">/</operator> <operator pos:start="123:46" pos:end="123:46">(</operator><name pos:start="123:47" pos:end="123:47">p</name> <operator pos:start="123:49" pos:end="123:49">*</operator> <literal type="number" pos:start="123:51" pos:end="123:55">10.0f</literal><operator pos:start="123:56" pos:end="123:56">)</operator></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="125:13" pos:end="127:24">else<block type="pseudo" pos:start="127:17" pos:end="127:24"><block_content pos:start="127:17" pos:end="127:24">

                <expr_stmt pos:start="127:17" pos:end="127:24"><expr pos:start="127:17" pos:end="127:23"><name pos:start="127:17" pos:end="127:17">p</name> <operator pos:start="127:19" pos:end="127:19">=</operator> <literal type="number" pos:start="127:21" pos:end="127:23">0.0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:61"><expr pos:start="129:13" pos:end="129:60"><name pos:start="129:13" pos:end="129:56"><name pos:start="129:13" pos:end="129:28">attack_intensity</name><index pos:start="129:29" pos:end="129:56">[<expr pos:start="129:30" pos:end="129:55"><name pos:start="129:30" pos:end="129:30">i</name> <operator pos:start="129:32" pos:end="129:32">+</operator> <name pos:start="129:34" pos:end="129:55">PSY_LAME_NUM_SUBBLOCKS</name></expr>]</index></name> <operator pos:start="129:58" pos:end="129:58">=</operator> <name pos:start="129:60" pos:end="129:60">p</name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="135:9" pos:end="135:53">/* compare energy between sub-short blocks */</comment>

        <for pos:start="137:9" pos:end="143:91">for <control pos:start="137:13" pos:end="137:81">(<init pos:start="137:14" pos:end="137:19"><expr pos:start="137:14" pos:end="137:18"><name pos:start="137:14" pos:end="137:14">i</name> <operator pos:start="137:16" pos:end="137:16">=</operator> <literal type="number" pos:start="137:18" pos:end="137:18">0</literal></expr>;</init> <condition pos:start="137:21" pos:end="137:76"><expr pos:start="137:21" pos:end="137:75"><name pos:start="137:21" pos:end="137:21">i</name> <operator pos:start="137:23" pos:end="137:23">&lt;</operator> <operator pos:start="137:25" pos:end="137:25">(</operator><name pos:start="137:26" pos:end="137:45">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="137:47" pos:end="137:47">+</operator> <literal type="number" pos:start="137:49" pos:end="137:49">1</literal><operator pos:start="137:50" pos:end="137:50">)</operator> <operator pos:start="137:52" pos:end="137:52">*</operator> <name pos:start="137:54" pos:end="137:75">PSY_LAME_NUM_SUBBLOCKS</name></expr>;</condition> <incr pos:start="137:78" pos:end="137:80"><expr pos:start="137:78" pos:end="137:80"><name pos:start="137:78" pos:end="137:78">i</name><operator pos:start="137:79" pos:end="137:80">++</operator></expr></incr>)</control><block type="pseudo" pos:start="139:13" pos:end="143:91"><block_content pos:start="139:13" pos:end="143:91">

            <if_stmt pos:start="139:13" pos:end="143:91"><if pos:start="139:13" pos:end="143:91">if <condition pos:start="139:16" pos:end="139:53">(<expr pos:start="139:17" pos:end="139:52"><operator pos:start="139:17" pos:end="139:17">!</operator><name pos:start="139:18" pos:end="139:52"><name pos:start="139:18" pos:end="139:24">attacks</name><index pos:start="139:25" pos:end="139:52">[<expr pos:start="139:26" pos:end="139:51"><name pos:start="139:26" pos:end="139:26">i</name> <operator pos:start="139:28" pos:end="139:28">/</operator> <name pos:start="139:30" pos:end="139:51">PSY_LAME_NUM_SUBBLOCKS</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="141:17" pos:end="143:91"><block_content pos:start="141:17" pos:end="143:91">

                <if_stmt pos:start="141:17" pos:end="143:91"><if pos:start="141:17" pos:end="143:91">if <condition pos:start="141:20" pos:end="141:64">(<expr pos:start="141:21" pos:end="141:63"><name pos:start="141:21" pos:end="141:39"><name pos:start="141:21" pos:end="141:36">attack_intensity</name><index pos:start="141:37" pos:end="141:39">[<expr pos:start="141:38" pos:end="141:38"><name pos:start="141:38" pos:end="141:38">i</name></expr>]</index></name> <operator pos:start="141:41" pos:end="141:41">&gt;</operator> <name pos:start="141:43" pos:end="141:63"><name pos:start="141:43" pos:end="141:45">pch</name><operator pos:start="141:46" pos:end="141:47">-&gt;</operator><name pos:start="141:48" pos:end="141:63">attack_threshold</name></name></expr>)</condition><block type="pseudo" pos:start="143:21" pos:end="143:91"><block_content pos:start="143:21" pos:end="143:91">

                    <expr_stmt pos:start="143:21" pos:end="143:91"><expr pos:start="143:21" pos:end="143:90"><name pos:start="143:21" pos:end="143:55"><name pos:start="143:21" pos:end="143:27">attacks</name><index pos:start="143:28" pos:end="143:55">[<expr pos:start="143:29" pos:end="143:54"><name pos:start="143:29" pos:end="143:29">i</name> <operator pos:start="143:31" pos:end="143:31">/</operator> <name pos:start="143:33" pos:end="143:54">PSY_LAME_NUM_SUBBLOCKS</name></expr>]</index></name> <operator pos:start="143:57" pos:end="143:57">=</operator> <operator pos:start="143:59" pos:end="143:59">(</operator><name pos:start="143:60" pos:end="143:60">i</name> <operator pos:start="143:62" pos:end="143:62">%</operator> <name pos:start="143:64" pos:end="143:85">PSY_LAME_NUM_SUBBLOCKS</name><operator pos:start="143:86" pos:end="143:86">)</operator> <operator pos:start="143:88" pos:end="143:88">+</operator> <literal type="number" pos:start="143:90" pos:end="143:90">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for>



        <comment type="block" pos:start="147:9" pos:end="147:96">/* should have energy change between short blocks, in order to avoid periodic signals */</comment>

        <comment type="block" pos:start="149:9" pos:end="149:68">/* Good samples to show the effect are Trumpet test songs */</comment>

        <comment type="block" pos:start="151:9" pos:end="151:82">/* GB: tuned (1) to avoid too many short blocks for test sample TRUMPET */</comment>

        <comment type="block" pos:start="153:9" pos:end="153:93">/* RH: tuned (2) to let enough short blocks through for test sample FSOL and SNAPS */</comment>

        <for pos:start="155:9" pos:end="179:9">for <control pos:start="155:13" pos:end="155:54">(<init pos:start="155:14" pos:end="155:19"><expr pos:start="155:14" pos:end="155:18"><name pos:start="155:14" pos:end="155:14">i</name> <operator pos:start="155:16" pos:end="155:16">=</operator> <literal type="number" pos:start="155:18" pos:end="155:18">1</literal></expr>;</init> <condition pos:start="155:21" pos:end="155:49"><expr pos:start="155:21" pos:end="155:48"><name pos:start="155:21" pos:end="155:21">i</name> <operator pos:start="155:23" pos:end="155:23">&lt;</operator> <name pos:start="155:25" pos:end="155:44">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="155:46" pos:end="155:46">+</operator> <literal type="number" pos:start="155:48" pos:end="155:48">1</literal></expr>;</condition> <incr pos:start="155:51" pos:end="155:53"><expr pos:start="155:51" pos:end="155:53"><name pos:start="155:51" pos:end="155:51">i</name><operator pos:start="155:52" pos:end="155:53">++</operator></expr></incr>)</control> <block pos:start="155:56" pos:end="179:9">{<block_content pos:start="157:13" pos:end="177:34">

            <decl_stmt pos:start="157:13" pos:end="157:48"><decl pos:start="157:13" pos:end="157:47"><type pos:start="157:13" pos:end="157:23"><name pos:start="157:13" pos:end="157:17">float</name> <specifier pos:start="157:19" pos:end="157:23">const</specifier></type> <name pos:start="157:25" pos:end="157:25">u</name> <init pos:start="157:27" pos:end="157:47">= <expr pos:start="157:29" pos:end="157:47"><name pos:start="157:29" pos:end="157:47"><name pos:start="157:29" pos:end="157:40">energy_short</name><index pos:start="157:41" pos:end="157:47">[<expr pos:start="157:42" pos:end="157:46"><name pos:start="157:42" pos:end="157:42">i</name> <operator pos:start="157:44" pos:end="157:44">-</operator> <literal type="number" pos:start="157:46" pos:end="157:46">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="159:13" pos:end="159:44"><decl pos:start="159:13" pos:end="159:43"><type pos:start="159:13" pos:end="159:23"><name pos:start="159:13" pos:end="159:17">float</name> <specifier pos:start="159:19" pos:end="159:23">const</specifier></type> <name pos:start="159:25" pos:end="159:25">v</name> <init pos:start="159:27" pos:end="159:43">= <expr pos:start="159:29" pos:end="159:43"><name pos:start="159:29" pos:end="159:43"><name pos:start="159:29" pos:end="159:40">energy_short</name><index pos:start="159:41" pos:end="159:43">[<expr pos:start="159:42" pos:end="159:42"><name pos:start="159:42" pos:end="159:42">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="161:13" pos:end="161:40"><decl pos:start="161:13" pos:end="161:39"><type pos:start="161:13" pos:end="161:23"><name pos:start="161:13" pos:end="161:17">float</name> <specifier pos:start="161:19" pos:end="161:23">const</specifier></type> <name pos:start="161:25" pos:end="161:25">m</name> <init pos:start="161:27" pos:end="161:39">= <expr pos:start="161:29" pos:end="161:39"><call pos:start="161:29" pos:end="161:39"><name pos:start="161:29" pos:end="161:33">FFMAX</name><argument_list pos:start="161:34" pos:end="161:39">(<argument pos:start="161:35" pos:end="161:35"><expr pos:start="161:35" pos:end="161:35"><name pos:start="161:35" pos:end="161:35">u</name></expr></argument>, <argument pos:start="161:38" pos:end="161:38"><expr pos:start="161:38" pos:end="161:38"><name pos:start="161:38" pos:end="161:38">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="163:13" pos:end="175:13"><if pos:start="163:13" pos:end="175:13">if <condition pos:start="163:16" pos:end="163:26">(<expr pos:start="163:17" pos:end="163:25"><name pos:start="163:17" pos:end="163:17">m</name> <operator pos:start="163:19" pos:end="163:19">&lt;</operator> <literal type="number" pos:start="163:21" pos:end="163:25">40000</literal></expr>)</condition> <block pos:start="163:28" pos:end="175:13">{<block_content pos:start="165:17" pos:end="173:17">                          <comment type="block" pos:start="163:55" pos:end="163:63">/* (2) */</comment>

                <if_stmt pos:start="165:17" pos:end="173:17"><if pos:start="165:17" pos:end="173:17">if <condition pos:start="165:20" pos:end="165:49">(<expr pos:start="165:21" pos:end="165:48"><name pos:start="165:21" pos:end="165:21">u</name> <operator pos:start="165:23" pos:end="165:23">&lt;</operator> <literal type="number" pos:start="165:25" pos:end="165:28">1.7f</literal> <operator pos:start="165:30" pos:end="165:30">*</operator> <name pos:start="165:32" pos:end="165:32">v</name> <operator pos:start="165:34" pos:end="165:35">&amp;&amp;</operator> <name pos:start="165:37" pos:end="165:37">v</name> <operator pos:start="165:39" pos:end="165:39">&lt;</operator> <literal type="number" pos:start="165:41" pos:end="165:44">1.7f</literal> <operator pos:start="165:46" pos:end="165:46">*</operator> <name pos:start="165:48" pos:end="165:48">u</name></expr>)</condition> <block pos:start="165:51" pos:end="173:17">{<block_content pos:start="167:21" pos:end="171:35">   <comment type="block" pos:start="165:55" pos:end="165:63">/* (1) */</comment>

                    <if_stmt pos:start="167:21" pos:end="169:39"><if pos:start="167:21" pos:end="169:39">if <condition pos:start="167:24" pos:end="167:58">(<expr pos:start="167:25" pos:end="167:57"><name pos:start="167:25" pos:end="167:25">i</name> <operator pos:start="167:27" pos:end="167:28">==</operator> <literal type="number" pos:start="167:30" pos:end="167:30">1</literal> <operator pos:start="167:32" pos:end="167:33">&amp;&amp;</operator> <name pos:start="167:35" pos:end="167:44"><name pos:start="167:35" pos:end="167:41">attacks</name><index pos:start="167:42" pos:end="167:44">[<expr pos:start="167:43" pos:end="167:43"><literal type="number" pos:start="167:43" pos:end="167:43">0</literal></expr>]</index></name> <operator pos:start="167:46" pos:end="167:46">&lt;</operator> <name pos:start="167:48" pos:end="167:57"><name pos:start="167:48" pos:end="167:54">attacks</name><index pos:start="167:55" pos:end="167:57">[<expr pos:start="167:56" pos:end="167:56"><name pos:start="167:56" pos:end="167:56">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="169:25" pos:end="169:39"><block_content pos:start="169:25" pos:end="169:39">

                        <expr_stmt pos:start="169:25" pos:end="169:39"><expr pos:start="169:25" pos:end="169:38"><name pos:start="169:25" pos:end="169:34"><name pos:start="169:25" pos:end="169:31">attacks</name><index pos:start="169:32" pos:end="169:34">[<expr pos:start="169:33" pos:end="169:33"><literal type="number" pos:start="169:33" pos:end="169:33">0</literal></expr>]</index></name> <operator pos:start="169:36" pos:end="169:36">=</operator> <literal type="number" pos:start="169:38" pos:end="169:38">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="171:21" pos:end="171:35"><expr pos:start="171:21" pos:end="171:34"><name pos:start="171:21" pos:end="171:30"><name pos:start="171:21" pos:end="171:27">attacks</name><index pos:start="171:28" pos:end="171:30">[<expr pos:start="171:29" pos:end="171:29"><name pos:start="171:29" pos:end="171:29">i</name></expr>]</index></name> <operator pos:start="171:32" pos:end="171:32">=</operator> <literal type="number" pos:start="171:34" pos:end="171:34">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:34"><expr pos:start="177:13" pos:end="177:33"><name pos:start="177:13" pos:end="177:19">att_sum</name> <operator pos:start="177:21" pos:end="177:22">+=</operator> <name pos:start="177:24" pos:end="177:33"><name pos:start="177:24" pos:end="177:30">attacks</name><index pos:start="177:31" pos:end="177:33">[<expr pos:start="177:32" pos:end="177:32"><name pos:start="177:32" pos:end="177:32">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="183:9" pos:end="185:27"><if pos:start="183:9" pos:end="185:27">if <condition pos:start="183:12" pos:end="183:43">(<expr pos:start="183:13" pos:end="183:42"><name pos:start="183:13" pos:end="183:22"><name pos:start="183:13" pos:end="183:19">attacks</name><index pos:start="183:20" pos:end="183:22">[<expr pos:start="183:21" pos:end="183:21"><literal type="number" pos:start="183:21" pos:end="183:21">0</literal></expr>]</index></name> <operator pos:start="183:24" pos:end="183:25">&lt;=</operator> <name pos:start="183:27" pos:end="183:42"><name pos:start="183:27" pos:end="183:29">pch</name><operator pos:start="183:30" pos:end="183:31">-&gt;</operator><name pos:start="183:32" pos:end="183:42">prev_attack</name></name></expr>)</condition><block type="pseudo" pos:start="185:13" pos:end="185:27"><block_content pos:start="185:13" pos:end="185:27">

            <expr_stmt pos:start="185:13" pos:end="185:27"><expr pos:start="185:13" pos:end="185:26"><name pos:start="185:13" pos:end="185:22"><name pos:start="185:13" pos:end="185:19">attacks</name><index pos:start="185:20" pos:end="185:22">[<expr pos:start="185:21" pos:end="185:21"><literal type="number" pos:start="185:21" pos:end="185:21">0</literal></expr>]</index></name> <operator pos:start="185:24" pos:end="185:24">=</operator> <literal type="number" pos:start="185:26" pos:end="185:26">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="189:9" pos:end="189:30"><expr pos:start="189:9" pos:end="189:29"><name pos:start="189:9" pos:end="189:15">att_sum</name> <operator pos:start="189:17" pos:end="189:18">+=</operator> <name pos:start="189:20" pos:end="189:29"><name pos:start="189:20" pos:end="189:26">attacks</name><index pos:start="189:27" pos:end="189:29">[<expr pos:start="189:28" pos:end="189:28"><literal type="number" pos:start="189:28" pos:end="189:28">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <comment type="block" pos:start="191:9" pos:end="191:107">/* 3 below indicates the previous attack happened in the last sub-block of the previous sequence */</comment>

        <if_stmt pos:start="193:9" pos:end="231:9"><if pos:start="193:9" pos:end="231:9">if <condition pos:start="193:12" pos:end="193:45">(<expr pos:start="193:13" pos:end="193:44"><name pos:start="193:13" pos:end="193:28"><name pos:start="193:13" pos:end="193:15">pch</name><operator pos:start="193:16" pos:end="193:17">-&gt;</operator><name pos:start="193:18" pos:end="193:28">prev_attack</name></name> <operator pos:start="193:30" pos:end="193:31">==</operator> <literal type="number" pos:start="193:33" pos:end="193:33">3</literal> <operator pos:start="193:35" pos:end="193:36">||</operator> <name pos:start="193:38" pos:end="193:44">att_sum</name></expr>)</condition> <block pos:start="193:47" pos:end="231:9">{<block_content pos:start="195:13" pos:end="229:31">

            <expr_stmt pos:start="195:13" pos:end="195:29"><expr pos:start="195:13" pos:end="195:28"><name pos:start="195:13" pos:end="195:24">uselongblock</name> <operator pos:start="195:26" pos:end="195:26">=</operator> <literal type="number" pos:start="195:28" pos:end="195:28">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="199:13" pos:end="201:31"><if pos:start="199:13" pos:end="201:31">if <condition pos:start="199:16" pos:end="199:41">(<expr pos:start="199:17" pos:end="199:40"><name pos:start="199:17" pos:end="199:26"><name pos:start="199:17" pos:end="199:23">attacks</name><index pos:start="199:24" pos:end="199:26">[<expr pos:start="199:25" pos:end="199:25"><literal type="number" pos:start="199:25" pos:end="199:25">1</literal></expr>]</index></name> <operator pos:start="199:28" pos:end="199:29">&amp;&amp;</operator> <name pos:start="199:31" pos:end="199:40"><name pos:start="199:31" pos:end="199:37">attacks</name><index pos:start="199:38" pos:end="199:40">[<expr pos:start="199:39" pos:end="199:39"><literal type="number" pos:start="199:39" pos:end="199:39">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="201:17" pos:end="201:31"><block_content pos:start="201:17" pos:end="201:31">

                <expr_stmt pos:start="201:17" pos:end="201:31"><expr pos:start="201:17" pos:end="201:30"><name pos:start="201:17" pos:end="201:26"><name pos:start="201:17" pos:end="201:23">attacks</name><index pos:start="201:24" pos:end="201:26">[<expr pos:start="201:25" pos:end="201:25"><literal type="number" pos:start="201:25" pos:end="201:25">1</literal></expr>]</index></name> <operator pos:start="201:28" pos:end="201:28">=</operator> <literal type="number" pos:start="201:30" pos:end="201:30">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="203:13" pos:end="205:31"><if pos:start="203:13" pos:end="205:31">if <condition pos:start="203:16" pos:end="203:41">(<expr pos:start="203:17" pos:end="203:40"><name pos:start="203:17" pos:end="203:26"><name pos:start="203:17" pos:end="203:23">attacks</name><index pos:start="203:24" pos:end="203:26">[<expr pos:start="203:25" pos:end="203:25"><literal type="number" pos:start="203:25" pos:end="203:25">2</literal></expr>]</index></name> <operator pos:start="203:28" pos:end="203:29">&amp;&amp;</operator> <name pos:start="203:31" pos:end="203:40"><name pos:start="203:31" pos:end="203:37">attacks</name><index pos:start="203:38" pos:end="203:40">[<expr pos:start="203:39" pos:end="203:39"><literal type="number" pos:start="203:39" pos:end="203:39">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="205:17" pos:end="205:31"><block_content pos:start="205:17" pos:end="205:31">

                <expr_stmt pos:start="205:17" pos:end="205:31"><expr pos:start="205:17" pos:end="205:30"><name pos:start="205:17" pos:end="205:26"><name pos:start="205:17" pos:end="205:23">attacks</name><index pos:start="205:24" pos:end="205:26">[<expr pos:start="205:25" pos:end="205:25"><literal type="number" pos:start="205:25" pos:end="205:25">2</literal></expr>]</index></name> <operator pos:start="205:28" pos:end="205:28">=</operator> <literal type="number" pos:start="205:30" pos:end="205:30">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="207:13" pos:end="209:31"><if pos:start="207:13" pos:end="209:31">if <condition pos:start="207:16" pos:end="207:41">(<expr pos:start="207:17" pos:end="207:40"><name pos:start="207:17" pos:end="207:26"><name pos:start="207:17" pos:end="207:23">attacks</name><index pos:start="207:24" pos:end="207:26">[<expr pos:start="207:25" pos:end="207:25"><literal type="number" pos:start="207:25" pos:end="207:25">3</literal></expr>]</index></name> <operator pos:start="207:28" pos:end="207:29">&amp;&amp;</operator> <name pos:start="207:31" pos:end="207:40"><name pos:start="207:31" pos:end="207:37">attacks</name><index pos:start="207:38" pos:end="207:40">[<expr pos:start="207:39" pos:end="207:39"><literal type="number" pos:start="207:39" pos:end="207:39">2</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="209:17" pos:end="209:31"><block_content pos:start="209:17" pos:end="209:31">

                <expr_stmt pos:start="209:17" pos:end="209:31"><expr pos:start="209:17" pos:end="209:30"><name pos:start="209:17" pos:end="209:26"><name pos:start="209:17" pos:end="209:23">attacks</name><index pos:start="209:24" pos:end="209:26">[<expr pos:start="209:25" pos:end="209:25"><literal type="number" pos:start="209:25" pos:end="209:25">3</literal></expr>]</index></name> <operator pos:start="209:28" pos:end="209:28">=</operator> <literal type="number" pos:start="209:30" pos:end="209:30">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="211:13" pos:end="213:31"><if pos:start="211:13" pos:end="213:31">if <condition pos:start="211:16" pos:end="211:41">(<expr pos:start="211:17" pos:end="211:40"><name pos:start="211:17" pos:end="211:26"><name pos:start="211:17" pos:end="211:23">attacks</name><index pos:start="211:24" pos:end="211:26">[<expr pos:start="211:25" pos:end="211:25"><literal type="number" pos:start="211:25" pos:end="211:25">4</literal></expr>]</index></name> <operator pos:start="211:28" pos:end="211:29">&amp;&amp;</operator> <name pos:start="211:31" pos:end="211:40"><name pos:start="211:31" pos:end="211:37">attacks</name><index pos:start="211:38" pos:end="211:40">[<expr pos:start="211:39" pos:end="211:39"><literal type="number" pos:start="211:39" pos:end="211:39">3</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="213:17" pos:end="213:31"><block_content pos:start="213:17" pos:end="213:31">

                <expr_stmt pos:start="213:17" pos:end="213:31"><expr pos:start="213:17" pos:end="213:30"><name pos:start="213:17" pos:end="213:26"><name pos:start="213:17" pos:end="213:23">attacks</name><index pos:start="213:24" pos:end="213:26">[<expr pos:start="213:25" pos:end="213:25"><literal type="number" pos:start="213:25" pos:end="213:25">4</literal></expr>]</index></name> <operator pos:start="213:28" pos:end="213:28">=</operator> <literal type="number" pos:start="213:30" pos:end="213:30">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="215:13" pos:end="217:31"><if pos:start="215:13" pos:end="217:31">if <condition pos:start="215:16" pos:end="215:41">(<expr pos:start="215:17" pos:end="215:40"><name pos:start="215:17" pos:end="215:26"><name pos:start="215:17" pos:end="215:23">attacks</name><index pos:start="215:24" pos:end="215:26">[<expr pos:start="215:25" pos:end="215:25"><literal type="number" pos:start="215:25" pos:end="215:25">5</literal></expr>]</index></name> <operator pos:start="215:28" pos:end="215:29">&amp;&amp;</operator> <name pos:start="215:31" pos:end="215:40"><name pos:start="215:31" pos:end="215:37">attacks</name><index pos:start="215:38" pos:end="215:40">[<expr pos:start="215:39" pos:end="215:39"><literal type="number" pos:start="215:39" pos:end="215:39">4</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="217:17" pos:end="217:31"><block_content pos:start="217:17" pos:end="217:31">

                <expr_stmt pos:start="217:17" pos:end="217:31"><expr pos:start="217:17" pos:end="217:30"><name pos:start="217:17" pos:end="217:26"><name pos:start="217:17" pos:end="217:23">attacks</name><index pos:start="217:24" pos:end="217:26">[<expr pos:start="217:25" pos:end="217:25"><literal type="number" pos:start="217:25" pos:end="217:25">5</literal></expr>]</index></name> <operator pos:start="217:28" pos:end="217:28">=</operator> <literal type="number" pos:start="217:30" pos:end="217:30">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="219:13" pos:end="221:31"><if pos:start="219:13" pos:end="221:31">if <condition pos:start="219:16" pos:end="219:41">(<expr pos:start="219:17" pos:end="219:40"><name pos:start="219:17" pos:end="219:26"><name pos:start="219:17" pos:end="219:23">attacks</name><index pos:start="219:24" pos:end="219:26">[<expr pos:start="219:25" pos:end="219:25"><literal type="number" pos:start="219:25" pos:end="219:25">6</literal></expr>]</index></name> <operator pos:start="219:28" pos:end="219:29">&amp;&amp;</operator> <name pos:start="219:31" pos:end="219:40"><name pos:start="219:31" pos:end="219:37">attacks</name><index pos:start="219:38" pos:end="219:40">[<expr pos:start="219:39" pos:end="219:39"><literal type="number" pos:start="219:39" pos:end="219:39">5</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="221:17" pos:end="221:31"><block_content pos:start="221:17" pos:end="221:31">

                <expr_stmt pos:start="221:17" pos:end="221:31"><expr pos:start="221:17" pos:end="221:30"><name pos:start="221:17" pos:end="221:26"><name pos:start="221:17" pos:end="221:23">attacks</name><index pos:start="221:24" pos:end="221:26">[<expr pos:start="221:25" pos:end="221:25"><literal type="number" pos:start="221:25" pos:end="221:25">6</literal></expr>]</index></name> <operator pos:start="221:28" pos:end="221:28">=</operator> <literal type="number" pos:start="221:30" pos:end="221:30">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="223:13" pos:end="225:31"><if pos:start="223:13" pos:end="225:31">if <condition pos:start="223:16" pos:end="223:41">(<expr pos:start="223:17" pos:end="223:40"><name pos:start="223:17" pos:end="223:26"><name pos:start="223:17" pos:end="223:23">attacks</name><index pos:start="223:24" pos:end="223:26">[<expr pos:start="223:25" pos:end="223:25"><literal type="number" pos:start="223:25" pos:end="223:25">7</literal></expr>]</index></name> <operator pos:start="223:28" pos:end="223:29">&amp;&amp;</operator> <name pos:start="223:31" pos:end="223:40"><name pos:start="223:31" pos:end="223:37">attacks</name><index pos:start="223:38" pos:end="223:40">[<expr pos:start="223:39" pos:end="223:39"><literal type="number" pos:start="223:39" pos:end="223:39">6</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="225:17" pos:end="225:31"><block_content pos:start="225:17" pos:end="225:31">

                <expr_stmt pos:start="225:17" pos:end="225:31"><expr pos:start="225:17" pos:end="225:30"><name pos:start="225:17" pos:end="225:26"><name pos:start="225:17" pos:end="225:23">attacks</name><index pos:start="225:24" pos:end="225:26">[<expr pos:start="225:25" pos:end="225:25"><literal type="number" pos:start="225:25" pos:end="225:25">7</literal></expr>]</index></name> <operator pos:start="225:28" pos:end="225:28">=</operator> <literal type="number" pos:start="225:30" pos:end="225:30">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="227:13" pos:end="229:31"><if pos:start="227:13" pos:end="229:31">if <condition pos:start="227:16" pos:end="227:41">(<expr pos:start="227:17" pos:end="227:40"><name pos:start="227:17" pos:end="227:26"><name pos:start="227:17" pos:end="227:23">attacks</name><index pos:start="227:24" pos:end="227:26">[<expr pos:start="227:25" pos:end="227:25"><literal type="number" pos:start="227:25" pos:end="227:25">8</literal></expr>]</index></name> <operator pos:start="227:28" pos:end="227:29">&amp;&amp;</operator> <name pos:start="227:31" pos:end="227:40"><name pos:start="227:31" pos:end="227:37">attacks</name><index pos:start="227:38" pos:end="227:40">[<expr pos:start="227:39" pos:end="227:39"><literal type="number" pos:start="227:39" pos:end="227:39">7</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="229:17" pos:end="229:31"><block_content pos:start="229:17" pos:end="229:31">

                <expr_stmt pos:start="229:17" pos:end="229:31"><expr pos:start="229:17" pos:end="229:30"><name pos:start="229:17" pos:end="229:26"><name pos:start="229:17" pos:end="229:23">attacks</name><index pos:start="229:24" pos:end="229:26">[<expr pos:start="229:25" pos:end="229:25"><literal type="number" pos:start="229:25" pos:end="229:25">8</literal></expr>]</index></name> <operator pos:start="229:28" pos:end="229:28">=</operator> <literal type="number" pos:start="229:30" pos:end="229:30">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="233:7" pos:end="239:5">else <block pos:start="233:12" pos:end="239:5">{<block_content pos:start="237:9" pos:end="237:60">

        <comment type="block" pos:start="235:9" pos:end="235:88">/* We have no lookahead info, so just use same type as the previous sequence. */</comment>

        <expr_stmt pos:start="237:9" pos:end="237:60"><expr pos:start="237:9" pos:end="237:59"><name pos:start="237:9" pos:end="237:20">uselongblock</name> <operator pos:start="237:22" pos:end="237:22">=</operator> <operator pos:start="237:24" pos:end="237:24">!</operator><operator pos:start="237:25" pos:end="237:25">(</operator><name pos:start="237:26" pos:end="237:34">prev_type</name> <operator pos:start="237:36" pos:end="237:37">==</operator> <name pos:start="237:39" pos:end="237:58">EIGHT_SHORT_SEQUENCE</name><operator pos:start="237:59" pos:end="237:59">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="243:5" pos:end="243:50"><expr pos:start="243:5" pos:end="243:49"><call pos:start="243:5" pos:end="243:49"><name pos:start="243:5" pos:end="243:25">lame_apply_block_type</name><argument_list pos:start="243:26" pos:end="243:49">(<argument pos:start="243:27" pos:end="243:29"><expr pos:start="243:27" pos:end="243:29"><name pos:start="243:27" pos:end="243:29">pch</name></expr></argument>, <argument pos:start="243:32" pos:end="243:34"><expr pos:start="243:32" pos:end="243:34"><operator pos:start="243:32" pos:end="243:32">&amp;</operator><name pos:start="243:33" pos:end="243:34">wi</name></expr></argument>, <argument pos:start="243:37" pos:end="243:48"><expr pos:start="243:37" pos:end="243:48"><name pos:start="243:37" pos:end="243:48">uselongblock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="247:5" pos:end="247:34"><expr pos:start="247:5" pos:end="247:33"><name pos:start="247:5" pos:end="247:21"><name pos:start="247:5" pos:end="247:6">wi</name><operator pos:start="247:7" pos:end="247:7">.</operator><name pos:start="247:8" pos:end="247:18">window_type</name><index pos:start="247:19" pos:end="247:21">[<expr pos:start="247:20" pos:end="247:20"><literal type="number" pos:start="247:20" pos:end="247:20">1</literal></expr>]</index></name> <operator pos:start="247:23" pos:end="247:23">=</operator> <name pos:start="247:25" pos:end="247:33">prev_type</name></expr>;</expr_stmt>

    <if_stmt pos:start="249:5" pos:end="283:5"><if pos:start="249:5" pos:end="263:5">if <condition pos:start="249:8" pos:end="249:50">(<expr pos:start="249:9" pos:end="249:49"><name pos:start="249:9" pos:end="249:25"><name pos:start="249:9" pos:end="249:10">wi</name><operator pos:start="249:11" pos:end="249:11">.</operator><name pos:start="249:12" pos:end="249:22">window_type</name><index pos:start="249:23" pos:end="249:25">[<expr pos:start="249:24" pos:end="249:24"><literal type="number" pos:start="249:24" pos:end="249:24">0</literal></expr>]</index></name> <operator pos:start="249:27" pos:end="249:28">!=</operator> <name pos:start="249:30" pos:end="249:49">EIGHT_SHORT_SEQUENCE</name></expr>)</condition> <block pos:start="249:52" pos:end="263:5">{<block_content pos:start="251:9" pos:end="261:32">

        <expr_stmt pos:start="251:9" pos:end="251:28"><expr pos:start="251:9" pos:end="251:27"><name pos:start="251:9" pos:end="251:22"><name pos:start="251:9" pos:end="251:10">wi</name><operator pos:start="251:11" pos:end="251:11">.</operator><name pos:start="251:12" pos:end="251:22">num_windows</name></name>  <operator pos:start="251:25" pos:end="251:25">=</operator> <literal type="number" pos:start="251:27" pos:end="251:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="253:9" pos:end="253:28"><expr pos:start="253:9" pos:end="253:27"><name pos:start="253:9" pos:end="253:22"><name pos:start="253:9" pos:end="253:10">wi</name><operator pos:start="253:11" pos:end="253:11">.</operator><name pos:start="253:12" pos:end="253:19">grouping</name><index pos:start="253:20" pos:end="253:22">[<expr pos:start="253:21" pos:end="253:21"><literal type="number" pos:start="253:21" pos:end="253:21">0</literal></expr>]</index></name>  <operator pos:start="253:25" pos:end="253:25">=</operator> <literal type="number" pos:start="253:27" pos:end="253:27">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="255:9" pos:end="261:32"><if pos:start="255:9" pos:end="257:32">if <condition pos:start="255:12" pos:end="255:53">(<expr pos:start="255:13" pos:end="255:52"><name pos:start="255:13" pos:end="255:29"><name pos:start="255:13" pos:end="255:14">wi</name><operator pos:start="255:15" pos:end="255:15">.</operator><name pos:start="255:16" pos:end="255:26">window_type</name><index pos:start="255:27" pos:end="255:29">[<expr pos:start="255:28" pos:end="255:28"><literal type="number" pos:start="255:28" pos:end="255:28">0</literal></expr>]</index></name> <operator pos:start="255:31" pos:end="255:32">==</operator> <name pos:start="255:34" pos:end="255:52">LONG_START_SEQUENCE</name></expr>)</condition><block type="pseudo" pos:start="257:13" pos:end="257:32"><block_content pos:start="257:13" pos:end="257:32">

            <expr_stmt pos:start="257:13" pos:end="257:32"><expr pos:start="257:13" pos:end="257:31"><name pos:start="257:13" pos:end="257:27"><name pos:start="257:13" pos:end="257:14">wi</name><operator pos:start="257:15" pos:end="257:15">.</operator><name pos:start="257:16" pos:end="257:27">window_shape</name></name> <operator pos:start="257:29" pos:end="257:29">=</operator> <literal type="number" pos:start="257:31" pos:end="257:31">0</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="259:9" pos:end="261:32">else<block type="pseudo" pos:start="261:13" pos:end="261:32"><block_content pos:start="261:13" pos:end="261:32">

            <expr_stmt pos:start="261:13" pos:end="261:32"><expr pos:start="261:13" pos:end="261:31"><name pos:start="261:13" pos:end="261:27"><name pos:start="261:13" pos:end="261:14">wi</name><operator pos:start="261:15" pos:end="261:15">.</operator><name pos:start="261:16" pos:end="261:27">window_shape</name></name> <operator pos:start="261:29" pos:end="261:29">=</operator> <literal type="number" pos:start="261:31" pos:end="261:31">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="263:7" pos:end="283:5">else <block pos:start="263:12" pos:end="283:5">{<block_content pos:start="265:9" pos:end="281:9">

        <decl_stmt pos:start="265:9" pos:end="265:24"><decl pos:start="265:9" pos:end="265:23"><type pos:start="265:9" pos:end="265:11"><name pos:start="265:9" pos:end="265:11">int</name></type> <name pos:start="265:13" pos:end="265:19">lastgrp</name> <init pos:start="265:21" pos:end="265:23">= <expr pos:start="265:23" pos:end="265:23"><literal type="number" pos:start="265:23" pos:end="265:23">0</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="269:9" pos:end="269:27"><expr pos:start="269:9" pos:end="269:26"><name pos:start="269:9" pos:end="269:22"><name pos:start="269:9" pos:end="269:10">wi</name><operator pos:start="269:11" pos:end="269:11">.</operator><name pos:start="269:12" pos:end="269:22">num_windows</name></name> <operator pos:start="269:24" pos:end="269:24">=</operator> <literal type="number" pos:start="269:26" pos:end="269:26">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:28"><expr pos:start="271:9" pos:end="271:27"><name pos:start="271:9" pos:end="271:23"><name pos:start="271:9" pos:end="271:10">wi</name><operator pos:start="271:11" pos:end="271:11">.</operator><name pos:start="271:12" pos:end="271:23">window_shape</name></name> <operator pos:start="271:25" pos:end="271:25">=</operator> <literal type="number" pos:start="271:27" pos:end="271:27">0</literal></expr>;</expr_stmt>

        <for pos:start="273:9" pos:end="281:9">for <control pos:start="273:13" pos:end="273:31">(<init pos:start="273:14" pos:end="273:19"><expr pos:start="273:14" pos:end="273:18"><name pos:start="273:14" pos:end="273:14">i</name> <operator pos:start="273:16" pos:end="273:16">=</operator> <literal type="number" pos:start="273:18" pos:end="273:18">0</literal></expr>;</init> <condition pos:start="273:21" pos:end="273:26"><expr pos:start="273:21" pos:end="273:25"><name pos:start="273:21" pos:end="273:21">i</name> <operator pos:start="273:23" pos:end="273:23">&lt;</operator> <literal type="number" pos:start="273:25" pos:end="273:25">8</literal></expr>;</condition> <incr pos:start="273:28" pos:end="273:30"><expr pos:start="273:28" pos:end="273:30"><name pos:start="273:28" pos:end="273:28">i</name><operator pos:start="273:29" pos:end="273:30">++</operator></expr></incr>)</control> <block pos:start="273:33" pos:end="281:9">{<block_content pos:start="275:13" pos:end="279:35">

            <if_stmt pos:start="275:13" pos:end="277:28"><if pos:start="275:13" pos:end="277:28">if <condition pos:start="275:16" pos:end="275:49">(<expr pos:start="275:17" pos:end="275:48"><operator pos:start="275:17" pos:end="275:17">!</operator><operator pos:start="275:18" pos:end="275:18">(</operator><operator pos:start="275:19" pos:end="275:19">(</operator><name pos:start="275:20" pos:end="275:37"><name pos:start="275:20" pos:end="275:22">pch</name><operator pos:start="275:23" pos:end="275:24">-&gt;</operator><name pos:start="275:25" pos:end="275:37">next_grouping</name></name> <operator pos:start="275:39" pos:end="275:40">&gt;&gt;</operator> <name pos:start="275:42" pos:end="275:42">i</name><operator pos:start="275:43" pos:end="275:43">)</operator> <operator pos:start="275:45" pos:end="275:45">&amp;</operator> <literal type="number" pos:start="275:47" pos:end="275:47">1</literal><operator pos:start="275:48" pos:end="275:48">)</operator></expr>)</condition><block type="pseudo" pos:start="277:17" pos:end="277:28"><block_content pos:start="277:17" pos:end="277:28">

                <expr_stmt pos:start="277:17" pos:end="277:28"><expr pos:start="277:17" pos:end="277:27"><name pos:start="277:17" pos:end="277:23">lastgrp</name> <operator pos:start="277:25" pos:end="277:25">=</operator> <name pos:start="277:27" pos:end="277:27">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="279:13" pos:end="279:35"><expr pos:start="279:13" pos:end="279:34"><name pos:start="279:13" pos:end="279:32"><name pos:start="279:13" pos:end="279:14">wi</name><operator pos:start="279:15" pos:end="279:15">.</operator><name pos:start="279:16" pos:end="279:23">grouping</name><index pos:start="279:24" pos:end="279:32">[<expr pos:start="279:25" pos:end="279:31"><name pos:start="279:25" pos:end="279:31">lastgrp</name></expr>]</index></name><operator pos:start="279:33" pos:end="279:34">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="287:5" pos:end="297:7">/* Determine grouping, based on the location of the first attack, and save for

     * the next frame.

     * FIXME: Move this to analysis.

     * TODO: Tune groupings depending on attack location

     * TODO: Handle more than one attack in a group

     */</comment>

    <for pos:start="299:5" pos:end="309:5">for <control pos:start="299:9" pos:end="299:27">(<init pos:start="299:10" pos:end="299:15"><expr pos:start="299:10" pos:end="299:14"><name pos:start="299:10" pos:end="299:10">i</name> <operator pos:start="299:12" pos:end="299:12">=</operator> <literal type="number" pos:start="299:14" pos:end="299:14">0</literal></expr>;</init> <condition pos:start="299:17" pos:end="299:22"><expr pos:start="299:17" pos:end="299:21"><name pos:start="299:17" pos:end="299:17">i</name> <operator pos:start="299:19" pos:end="299:19">&lt;</operator> <literal type="number" pos:start="299:21" pos:end="299:21">9</literal></expr>;</condition> <incr pos:start="299:24" pos:end="299:26"><expr pos:start="299:24" pos:end="299:26"><name pos:start="299:24" pos:end="299:24">i</name><operator pos:start="299:25" pos:end="299:26">++</operator></expr></incr>)</control> <block pos:start="299:29" pos:end="309:5">{<block_content pos:start="301:9" pos:end="307:9">

        <if_stmt pos:start="301:9" pos:end="307:9"><if pos:start="301:9" pos:end="307:9">if <condition pos:start="301:12" pos:end="301:23">(<expr pos:start="301:13" pos:end="301:22"><name pos:start="301:13" pos:end="301:22"><name pos:start="301:13" pos:end="301:19">attacks</name><index pos:start="301:20" pos:end="301:22">[<expr pos:start="301:21" pos:end="301:21"><name pos:start="301:21" pos:end="301:21">i</name></expr>]</index></name></expr>)</condition> <block pos:start="301:25" pos:end="307:9">{<block_content pos:start="303:13" pos:end="305:18">

            <expr_stmt pos:start="303:13" pos:end="303:25"><expr pos:start="303:13" pos:end="303:24"><name pos:start="303:13" pos:end="303:20">grouping</name> <operator pos:start="303:22" pos:end="303:22">=</operator> <name pos:start="303:24" pos:end="303:24">i</name></expr>;</expr_stmt>

            <break pos:start="305:13" pos:end="305:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="311:5" pos:end="311:51"><expr pos:start="311:5" pos:end="311:50"><name pos:start="311:5" pos:end="311:22"><name pos:start="311:5" pos:end="311:7">pch</name><operator pos:start="311:8" pos:end="311:9">-&gt;</operator><name pos:start="311:10" pos:end="311:22">next_grouping</name></name> <operator pos:start="311:24" pos:end="311:24">=</operator> <name pos:start="311:26" pos:end="311:50"><name pos:start="311:26" pos:end="311:40">window_grouping</name><index pos:start="311:41" pos:end="311:50">[<expr pos:start="311:42" pos:end="311:49"><name pos:start="311:42" pos:end="311:49">grouping</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="315:5" pos:end="315:34"><expr pos:start="315:5" pos:end="315:33"><name pos:start="315:5" pos:end="315:20"><name pos:start="315:5" pos:end="315:7">pch</name><operator pos:start="315:8" pos:end="315:9">-&gt;</operator><name pos:start="315:10" pos:end="315:20">prev_attack</name></name> <operator pos:start="315:22" pos:end="315:22">=</operator> <name pos:start="315:24" pos:end="315:33"><name pos:start="315:24" pos:end="315:30">attacks</name><index pos:start="315:31" pos:end="315:33">[<expr pos:start="315:32" pos:end="315:32"><literal type="number" pos:start="315:32" pos:end="315:32">8</literal></expr>]</index></name></expr>;</expr_stmt>



    <return pos:start="319:5" pos:end="319:14">return <expr pos:start="319:12" pos:end="319:13"><name pos:start="319:12" pos:end="319:13">wi</name></expr>;</return>

</block_content>}</block></function>
</unit>
