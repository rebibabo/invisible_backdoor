<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12626.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">validate_numa_cpus</name><parameter_list pos:start="1:31" pos:end="1:36">(<parameter pos:start="1:32" pos:end="1:35"><decl pos:start="1:32" pos:end="1:35"><type pos:start="1:32" pos:end="1:35"><name pos:start="1:32" pos:end="1:35">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:22">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:51"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">long</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:28">seen_cpus</name> <init pos:start="7:30" pos:end="7:51">= <expr pos:start="7:32" pos:end="7:51"><call pos:start="7:32" pos:end="7:51"><name pos:start="7:32" pos:end="7:41">bitmap_new</name><argument_list pos:start="7:42" pos:end="7:51">(<argument pos:start="7:43" pos:end="7:50"><expr pos:start="7:43" pos:end="7:50"><name pos:start="7:43" pos:end="7:50">max_cpus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="33:5">for <control pos:start="11:9" pos:end="11:39">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:34"><expr pos:start="11:17" pos:end="11:33"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:33">nb_numa_nodes</name></expr>;</condition> <incr pos:start="11:36" pos:end="11:38"><expr pos:start="11:36" pos:end="11:38"><name pos:start="11:36" pos:end="11:36">i</name><operator pos:start="11:37" pos:end="11:38">++</operator></expr></incr>)</control> <block pos:start="11:41" pos:end="33:5">{<block_content pos:start="13:9" pos:end="31:51">

        <if_stmt pos:start="13:9" pos:end="27:9"><if pos:start="13:9" pos:end="27:9">if <condition pos:start="13:12" pos:end="13:74">(<expr pos:start="13:13" pos:end="13:73"><call pos:start="13:13" pos:end="13:73"><name pos:start="13:13" pos:end="13:29">bitmap_intersects</name><argument_list pos:start="13:30" pos:end="13:73">(<argument pos:start="13:31" pos:end="13:39"><expr pos:start="13:31" pos:end="13:39"><name pos:start="13:31" pos:end="13:39">seen_cpus</name></expr></argument>, <argument pos:start="13:42" pos:end="13:62"><expr pos:start="13:42" pos:end="13:62"><name pos:start="13:42" pos:end="13:53"><name pos:start="13:42" pos:end="13:50">numa_info</name><index pos:start="13:51" pos:end="13:53">[<expr pos:start="13:52" pos:end="13:52"><name pos:start="13:52" pos:end="13:52">i</name></expr>]</index></name><operator pos:start="13:54" pos:end="13:54">.</operator><name pos:start="13:55" pos:end="13:62">node_cpu</name></expr></argument>, <argument pos:start="13:65" pos:end="13:72"><expr pos:start="13:65" pos:end="13:72"><name pos:start="13:65" pos:end="13:72">max_cpus</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:76" pos:end="27:9">{<block_content pos:start="15:13" pos:end="25:31">

            <expr_stmt pos:start="15:13" pos:end="17:56"><expr pos:start="15:13" pos:end="17:55"><call pos:start="15:13" pos:end="17:55"><name pos:start="15:13" pos:end="15:22">bitmap_and</name><argument_list pos:start="15:23" pos:end="17:55">(<argument pos:start="15:24" pos:end="15:32"><expr pos:start="15:24" pos:end="15:32"><name pos:start="15:24" pos:end="15:32">seen_cpus</name></expr></argument>, <argument pos:start="15:35" pos:end="15:43"><expr pos:start="15:35" pos:end="15:43"><name pos:start="15:35" pos:end="15:43">seen_cpus</name></expr></argument>,

                       <argument pos:start="17:24" pos:end="17:44"><expr pos:start="17:24" pos:end="17:44"><name pos:start="17:24" pos:end="17:35"><name pos:start="17:24" pos:end="17:32">numa_info</name><index pos:start="17:33" pos:end="17:35">[<expr pos:start="17:34" pos:end="17:34"><name pos:start="17:34" pos:end="17:34">i</name></expr>]</index></name><operator pos:start="17:36" pos:end="17:36">.</operator><name pos:start="17:37" pos:end="17:44">node_cpu</name></expr></argument>, <argument pos:start="17:47" pos:end="17:54"><expr pos:start="17:47" pos:end="17:54"><name pos:start="17:47" pos:end="17:54">max_cpus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="19:13" pos:end="21:62"><expr pos:start="19:13" pos:end="21:61"><call pos:start="19:13" pos:end="21:61"><name pos:start="19:13" pos:end="19:24">error_report</name><argument_list pos:start="19:25" pos:end="21:61">(<argument pos:start="19:26" pos:end="19:68"><expr pos:start="19:26" pos:end="19:68"><literal type="string" pos:start="19:26" pos:end="19:68">"CPU(s) present in multiple NUMA nodes: %s"</literal></expr></argument>,

                         <argument pos:start="21:26" pos:end="21:60"><expr pos:start="21:26" pos:end="21:60"><call pos:start="21:26" pos:end="21:60"><name pos:start="21:26" pos:end="21:39">enumerate_cpus</name><argument_list pos:start="21:40" pos:end="21:60">(<argument pos:start="21:41" pos:end="21:49"><expr pos:start="21:41" pos:end="21:49"><name pos:start="21:41" pos:end="21:49">seen_cpus</name></expr></argument>, <argument pos:start="21:52" pos:end="21:59"><expr pos:start="21:52" pos:end="21:59"><name pos:start="21:52" pos:end="21:59">max_cpus</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:30"><expr pos:start="23:13" pos:end="23:29"><call pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:18">g_free</name><argument_list pos:start="23:19" pos:end="23:29">(<argument pos:start="23:20" pos:end="23:28"><expr pos:start="23:20" pos:end="23:28"><name pos:start="23:20" pos:end="23:28">seen_cpus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:31"><expr pos:start="25:13" pos:end="25:30"><call pos:start="25:13" pos:end="25:30"><name pos:start="25:13" pos:end="25:16">exit</name><argument_list pos:start="25:17" pos:end="25:30">(<argument pos:start="25:18" pos:end="25:29"><expr pos:start="25:18" pos:end="25:29"><name pos:start="25:18" pos:end="25:29">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="31:51"><expr pos:start="29:9" pos:end="31:50"><call pos:start="29:9" pos:end="31:50"><name pos:start="29:9" pos:end="29:17">bitmap_or</name><argument_list pos:start="29:18" pos:end="31:50">(<argument pos:start="29:19" pos:end="29:27"><expr pos:start="29:19" pos:end="29:27"><name pos:start="29:19" pos:end="29:27">seen_cpus</name></expr></argument>, <argument pos:start="29:30" pos:end="29:38"><expr pos:start="29:30" pos:end="29:38"><name pos:start="29:30" pos:end="29:38">seen_cpus</name></expr></argument>,

                  <argument pos:start="31:19" pos:end="31:39"><expr pos:start="31:19" pos:end="31:39"><name pos:start="31:19" pos:end="31:30"><name pos:start="31:19" pos:end="31:27">numa_info</name><index pos:start="31:28" pos:end="31:30">[<expr pos:start="31:29" pos:end="31:29"><name pos:start="31:29" pos:end="31:29">i</name></expr>]</index></name><operator pos:start="31:31" pos:end="31:31">.</operator><name pos:start="31:32" pos:end="31:39">node_cpu</name></expr></argument>, <argument pos:start="31:42" pos:end="31:49"><expr pos:start="31:42" pos:end="31:49"><name pos:start="31:42" pos:end="31:49">max_cpus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="37:5" pos:end="53:5"><if pos:start="37:5" pos:end="53:5">if <condition pos:start="37:8" pos:end="37:42">(<expr pos:start="37:9" pos:end="37:41"><operator pos:start="37:9" pos:end="37:9">!</operator><call pos:start="37:10" pos:end="37:41"><name pos:start="37:10" pos:end="37:20">bitmap_full</name><argument_list pos:start="37:21" pos:end="37:41">(<argument pos:start="37:22" pos:end="37:30"><expr pos:start="37:22" pos:end="37:30"><name pos:start="37:22" pos:end="37:30">seen_cpus</name></expr></argument>, <argument pos:start="37:33" pos:end="37:40"><expr pos:start="37:33" pos:end="37:40"><name pos:start="37:33" pos:end="37:40">max_cpus</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:44" pos:end="53:5">{<block_content pos:start="39:9" pos:end="51:20">

        <decl_stmt pos:start="39:9" pos:end="39:18"><decl pos:start="39:9" pos:end="39:17"><type pos:start="39:9" pos:end="39:14"><name pos:start="39:9" pos:end="39:12">char</name> <modifier pos:start="39:14" pos:end="39:14">*</modifier></type><name pos:start="39:15" pos:end="39:17">msg</name></decl>;</decl_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:58"><expr pos:start="41:9" pos:end="41:57"><call pos:start="41:9" pos:end="41:57"><name pos:start="41:9" pos:end="41:25">bitmap_complement</name><argument_list pos:start="41:26" pos:end="41:57">(<argument pos:start="41:27" pos:end="41:35"><expr pos:start="41:27" pos:end="41:35"><name pos:start="41:27" pos:end="41:35">seen_cpus</name></expr></argument>, <argument pos:start="41:38" pos:end="41:46"><expr pos:start="41:38" pos:end="41:46"><name pos:start="41:38" pos:end="41:46">seen_cpus</name></expr></argument>, <argument pos:start="41:49" pos:end="41:56"><expr pos:start="41:49" pos:end="41:56"><name pos:start="41:49" pos:end="41:56">max_cpus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:50"><expr pos:start="43:9" pos:end="43:49"><name pos:start="43:9" pos:end="43:11">msg</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:49"><name pos:start="43:15" pos:end="43:28">enumerate_cpus</name><argument_list pos:start="43:29" pos:end="43:49">(<argument pos:start="43:30" pos:end="43:38"><expr pos:start="43:30" pos:end="43:38"><name pos:start="43:30" pos:end="43:38">seen_cpus</name></expr></argument>, <argument pos:start="43:41" pos:end="43:48"><expr pos:start="43:41" pos:end="43:48"><name pos:start="43:41" pos:end="43:48">max_cpus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:79"><expr pos:start="45:9" pos:end="45:78"><call pos:start="45:9" pos:end="45:78"><name pos:start="45:9" pos:end="45:20">error_report</name><argument_list pos:start="45:21" pos:end="45:78">(<argument pos:start="45:22" pos:end="45:72"><expr pos:start="45:22" pos:end="45:72"><literal type="string" pos:start="45:22" pos:end="45:72">"warning: CPU(s) not present in any NUMA nodes: %s"</literal></expr></argument>, <argument pos:start="45:75" pos:end="45:77"><expr pos:start="45:75" pos:end="45:77"><name pos:start="45:75" pos:end="45:77">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="49:39"><expr pos:start="47:9" pos:end="49:38"><call pos:start="47:9" pos:end="49:38"><name pos:start="47:9" pos:end="47:20">error_report</name><argument_list pos:start="47:21" pos:end="49:38">(<argument pos:start="47:22" pos:end="49:37"><expr pos:start="47:22" pos:end="49:37"><literal type="string" pos:start="47:22" pos:end="47:77">"warning: All CPU(s) up to maxcpus should be described "</literal>

                     <literal type="string" pos:start="49:22" pos:end="49:37">"in NUMA config"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:20"><expr pos:start="51:9" pos:end="51:19"><call pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:14">g_free</name><argument_list pos:start="51:15" pos:end="51:19">(<argument pos:start="51:16" pos:end="51:18"><expr pos:start="51:16" pos:end="51:18"><name pos:start="51:16" pos:end="51:18">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:22"><expr pos:start="55:5" pos:end="55:21"><call pos:start="55:5" pos:end="55:21"><name pos:start="55:5" pos:end="55:10">g_free</name><argument_list pos:start="55:11" pos:end="55:21">(<argument pos:start="55:12" pos:end="55:20"><expr pos:start="55:12" pos:end="55:20"><name pos:start="55:12" pos:end="55:20">seen_cpus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
