<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8654.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">fbdev_read_packet</name><parameter_list pos:start="1:29" pos:end="1:67">(<parameter pos:start="1:30" pos:end="1:51"><decl pos:start="1:30" pos:end="1:51"><type pos:start="1:30" pos:end="1:51"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:66"><decl pos:start="1:54" pos:end="1:66"><type pos:start="1:54" pos:end="1:66"><name pos:start="1:54" pos:end="1:61">AVPacket</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="103:1">{<block_content pos:start="5:5" pos:end="101:29">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">FBDevContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:23">fbdev</name> <init pos:start="5:25" pos:end="5:42">= <expr pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:31">avctx</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:19">curtime</name></decl>, <decl pos:start="7:22" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:22" pos:end="7:26">delay</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:19">timespec</name></name></type> <name pos:start="9:21" pos:end="9:22">ts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">pin</name></decl>, <decl pos:start="13:19" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:23">pout</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:41"><if pos:start="17:5" pos:end="19:41">if <condition pos:start="17:8" pos:end="17:44">(<expr pos:start="17:9" pos:end="17:43"><name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:13">fbdev</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:25">time_frame</name></name> <operator pos:start="17:27" pos:end="17:28">==</operator> <name pos:start="17:30" pos:end="17:43">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:41"><block_content pos:start="19:9" pos:end="19:41">

        <expr_stmt pos:start="19:9" pos:end="19:41"><expr pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:13">fbdev</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:25">time_frame</name></name> <operator pos:start="19:27" pos:end="19:27">=</operator> <call pos:start="19:29" pos:end="19:40"><name pos:start="19:29" pos:end="19:38">av_gettime</name><argument_list pos:start="19:39" pos:end="19:40">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:38">/* wait based on the frame rate */</comment>

    <while pos:start="25:5" pos:end="55:5">while <condition pos:start="25:11" pos:end="25:13">(<expr pos:start="25:12" pos:end="25:12"><literal type="number" pos:start="25:12" pos:end="25:12">1</literal></expr>)</condition> <block pos:start="25:15" pos:end="55:5">{<block_content pos:start="27:9" pos:end="53:45">

        <expr_stmt pos:start="27:9" pos:end="27:31"><expr pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:15">curtime</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:30"><name pos:start="27:19" pos:end="27:28">av_gettime</name><argument_list pos:start="27:29" pos:end="27:30">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:13">delay</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <name pos:start="29:17" pos:end="29:33"><name pos:start="29:17" pos:end="29:21">fbdev</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:33">time_frame</name></name> <operator pos:start="29:35" pos:end="29:35">-</operator> <name pos:start="29:37" pos:end="29:43">curtime</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="35:51"><expr pos:start="31:9" pos:end="35:50"><call pos:start="31:9" pos:end="35:50"><name pos:start="31:9" pos:end="31:15">av_dlog</name><argument_list pos:start="31:16" pos:end="35:50">(<argument pos:start="31:17" pos:end="31:21"><expr pos:start="31:17" pos:end="31:21"><name pos:start="31:17" pos:end="31:21">avctx</name></expr></argument>,

                <argument pos:start="33:17" pos:end="33:74"><expr pos:start="33:17" pos:end="33:74"><literal type="string" pos:start="33:17" pos:end="33:30">"time_frame:%"</literal><name pos:start="33:31" pos:end="33:36">PRId64</name><literal type="string" pos:start="33:37" pos:end="33:48">" curtime:%"</literal><name pos:start="33:49" pos:end="33:54">PRId64</name><literal type="string" pos:start="33:55" pos:end="33:64">" delay:%"</literal><name pos:start="33:65" pos:end="33:70">PRId64</name><literal type="string" pos:start="33:71" pos:end="33:74">"\n"</literal></expr></argument>,

                <argument pos:start="35:17" pos:end="35:33"><expr pos:start="35:17" pos:end="35:33"><name pos:start="35:17" pos:end="35:33"><name pos:start="35:17" pos:end="35:21">fbdev</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:33">time_frame</name></name></expr></argument>, <argument pos:start="35:36" pos:end="35:42"><expr pos:start="35:36" pos:end="35:42"><name pos:start="35:36" pos:end="35:42">curtime</name></expr></argument>, <argument pos:start="35:45" pos:end="35:49"><expr pos:start="35:45" pos:end="35:49"><name pos:start="35:45" pos:end="35:49">delay</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:23">(<expr pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:17">delay</name> <operator pos:start="37:19" pos:end="37:20">&lt;=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>)</condition> <block pos:start="37:25" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:18">

            <expr_stmt pos:start="39:13" pos:end="39:77"><expr pos:start="39:13" pos:end="39:76"><name pos:start="39:13" pos:end="39:29"><name pos:start="39:13" pos:end="39:17">fbdev</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:29">time_frame</name></name> <operator pos:start="39:31" pos:end="39:32">+=</operator> <call pos:start="39:34" pos:end="39:49"><name pos:start="39:34" pos:end="39:40">INT64_C</name><argument_list pos:start="39:41" pos:end="39:49">(<argument pos:start="39:42" pos:end="39:48"><expr pos:start="39:42" pos:end="39:48"><literal type="number" pos:start="39:42" pos:end="39:48">1000000</literal></expr></argument>)</argument_list></call> <operator pos:start="39:51" pos:end="39:51">*</operator> <call pos:start="39:53" pos:end="39:76"><name pos:start="39:53" pos:end="39:58">av_q2d</name><argument_list pos:start="39:59" pos:end="39:76">(<argument pos:start="39:60" pos:end="39:75"><expr pos:start="39:60" pos:end="39:75"><name pos:start="39:60" pos:end="39:75"><name pos:start="39:60" pos:end="39:64">fbdev</name><operator pos:start="39:65" pos:end="39:66">-&gt;</operator><name pos:start="39:67" pos:end="39:75">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="41:13" pos:end="41:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="45:9" pos:end="47:35"><if pos:start="45:9" pos:end="47:35">if <condition pos:start="45:12" pos:end="45:47">(<expr pos:start="45:13" pos:end="45:46"><name pos:start="45:13" pos:end="45:24"><name pos:start="45:13" pos:end="45:17">avctx</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:24">flags</name></name> <operator pos:start="45:26" pos:end="45:26">&amp;</operator> <name pos:start="45:28" pos:end="45:46">AVFMT_FLAG_NONBLOCK</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:35"><block_content pos:start="47:13" pos:end="47:35">

            <return pos:start="47:13" pos:end="47:35">return <expr pos:start="47:20" pos:end="47:34"><call pos:start="47:20" pos:end="47:34"><name pos:start="47:20" pos:end="47:26">AVERROR</name><argument_list pos:start="47:27" pos:end="47:34">(<argument pos:start="47:28" pos:end="47:33"><expr pos:start="47:28" pos:end="47:33"><name pos:start="47:28" pos:end="47:33">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:38"><expr pos:start="49:9" pos:end="49:37"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:10">ts</name><operator pos:start="49:11" pos:end="49:11">.</operator><name pos:start="49:12" pos:end="49:17">tv_sec</name></name>  <operator pos:start="49:20" pos:end="49:20">=</operator>  <name pos:start="49:23" pos:end="49:27">delay</name> <operator pos:start="49:29" pos:end="49:29">/</operator> <literal type="number" pos:start="49:31" pos:end="49:37">1000000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:46"><expr pos:start="51:9" pos:end="51:45"><name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:10">ts</name><operator pos:start="51:11" pos:end="51:11">.</operator><name pos:start="51:12" pos:end="51:18">tv_nsec</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <operator pos:start="51:22" pos:end="51:22">(</operator><name pos:start="51:23" pos:end="51:27">delay</name> <operator pos:start="51:29" pos:end="51:29">%</operator> <literal type="number" pos:start="51:31" pos:end="51:37">1000000</literal><operator pos:start="51:38" pos:end="51:38">)</operator> <operator pos:start="51:40" pos:end="51:40">*</operator> <literal type="number" pos:start="51:42" pos:end="51:45">1000</literal></expr>;</expr_stmt>

        <while pos:start="53:9" pos:end="53:45">while <condition pos:start="53:15" pos:end="53:44">(<expr pos:start="53:16" pos:end="53:43"><call pos:start="53:16" pos:end="53:34"><name pos:start="53:16" pos:end="53:24">nanosleep</name><argument_list pos:start="53:25" pos:end="53:34">(<argument pos:start="53:26" pos:end="53:28"><expr pos:start="53:26" pos:end="53:28"><operator pos:start="53:26" pos:end="53:26">&amp;</operator><name pos:start="53:27" pos:end="53:28">ts</name></expr></argument>, <argument pos:start="53:31" pos:end="53:33"><expr pos:start="53:31" pos:end="53:33"><operator pos:start="53:31" pos:end="53:31">&amp;</operator><name pos:start="53:32" pos:end="53:33">ts</name></expr></argument>)</argument_list></call> <operator pos:start="53:36" pos:end="53:37">==</operator> <name pos:start="53:39" pos:end="53:43">EINTR</name></expr>)</condition><block type="pseudo" pos:start="53:45" pos:end="53:45"><block_content pos:start="53:45" pos:end="53:45"><empty_stmt pos:start="53:45" pos:end="53:45">;</empty_stmt></block_content></block></while>

    </block_content>}</block></while>



    <if_stmt pos:start="59:5" pos:end="61:19"><if pos:start="59:5" pos:end="61:19">if <condition pos:start="59:8" pos:end="59:58">(<expr pos:start="59:9" pos:end="59:57"><operator pos:start="59:9" pos:end="59:9">(</operator><name pos:start="59:10" pos:end="59:12">ret</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <call pos:start="59:16" pos:end="59:52"><name pos:start="59:16" pos:end="59:28">av_new_packet</name><argument_list pos:start="59:29" pos:end="59:52">(<argument pos:start="59:30" pos:end="59:32"><expr pos:start="59:30" pos:end="59:32"><name pos:start="59:30" pos:end="59:32">pkt</name></expr></argument>, <argument pos:start="59:35" pos:end="59:51"><expr pos:start="59:35" pos:end="59:51"><name pos:start="59:35" pos:end="59:51"><name pos:start="59:35" pos:end="59:39">fbdev</name><operator pos:start="59:40" pos:end="59:41">-&gt;</operator><name pos:start="59:42" pos:end="59:51">frame_size</name></name></expr></argument>)</argument_list></call><operator pos:start="59:53" pos:end="59:53">)</operator> <operator pos:start="59:55" pos:end="59:55">&lt;</operator> <literal type="number" pos:start="59:57" pos:end="59:57">0</literal></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:19"><block_content pos:start="61:9" pos:end="61:19">

        <return pos:start="61:9" pos:end="61:19">return <expr pos:start="61:16" pos:end="61:18"><name pos:start="61:16" pos:end="61:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:79">/* refresh fbdev-&gt;varinfo, visible data position may change at each call */</comment>

    <if_stmt pos:start="67:5" pos:end="71:72"><if pos:start="67:5" pos:end="71:72">if <condition pos:start="67:8" pos:end="67:67">(<expr pos:start="67:9" pos:end="67:66"><call pos:start="67:9" pos:end="67:62"><name pos:start="67:9" pos:end="67:13">ioctl</name><argument_list pos:start="67:14" pos:end="67:62">(<argument pos:start="67:15" pos:end="67:23"><expr pos:start="67:15" pos:end="67:23"><name pos:start="67:15" pos:end="67:23"><name pos:start="67:15" pos:end="67:19">fbdev</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:23">fd</name></name></expr></argument>, <argument pos:start="67:26" pos:end="67:44"><expr pos:start="67:26" pos:end="67:44"><name pos:start="67:26" pos:end="67:44">FBIOGET_VSCREENINFO</name></expr></argument>, <argument pos:start="67:47" pos:end="67:61"><expr pos:start="67:47" pos:end="67:61"><operator pos:start="67:47" pos:end="67:47">&amp;</operator><name pos:start="67:48" pos:end="67:61"><name pos:start="67:48" pos:end="67:52">fbdev</name><operator pos:start="67:53" pos:end="67:54">-&gt;</operator><name pos:start="67:55" pos:end="67:61">varinfo</name></name></expr></argument>)</argument_list></call> <operator pos:start="67:64" pos:end="67:64">&lt;</operator> <literal type="number" pos:start="67:66" pos:end="67:66">0</literal></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="71:72"><block_content pos:start="69:9" pos:end="71:72">

        <expr_stmt pos:start="69:9" pos:end="71:72"><expr pos:start="69:9" pos:end="71:71"><call pos:start="69:9" pos:end="71:71"><name pos:start="69:9" pos:end="69:14">av_log</name><argument_list pos:start="69:15" pos:end="71:71">(<argument pos:start="69:16" pos:end="69:20"><expr pos:start="69:16" pos:end="69:20"><name pos:start="69:16" pos:end="69:20">avctx</name></expr></argument>, <argument pos:start="69:23" pos:end="69:36"><expr pos:start="69:23" pos:end="69:36"><name pos:start="69:23" pos:end="69:36">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="71:16" pos:end="71:53"><expr pos:start="71:16" pos:end="71:53"><literal type="string" pos:start="71:16" pos:end="71:53">"Error refreshing variable info: %s\n"</literal></expr></argument>, <argument pos:start="71:56" pos:end="71:70"><expr pos:start="71:56" pos:end="71:70"><call pos:start="71:56" pos:end="71:70"><name pos:start="71:56" pos:end="71:63">strerror</name><argument_list pos:start="71:64" pos:end="71:70">(<argument pos:start="71:65" pos:end="71:69"><expr pos:start="71:65" pos:end="71:69"><name pos:start="71:65" pos:end="71:69">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:23"><expr pos:start="75:5" pos:end="75:22"><name pos:start="75:5" pos:end="75:12"><name pos:start="75:5" pos:end="75:7">pkt</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:12">pts</name></name> <operator pos:start="75:14" pos:end="75:14">=</operator> <name pos:start="75:16" pos:end="75:22">curtime</name></expr>;</expr_stmt>



    <comment type="block" pos:start="79:5" pos:end="79:37">/* compute visible data offset */</comment>

    <expr_stmt pos:start="81:5" pos:end="83:76"><expr pos:start="81:5" pos:end="83:75"><name pos:start="81:5" pos:end="81:7">pin</name> <operator pos:start="81:9" pos:end="81:9">=</operator> <name pos:start="81:11" pos:end="81:21"><name pos:start="81:11" pos:end="81:15">fbdev</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:21">data</name></name> <operator pos:start="81:23" pos:end="81:23">+</operator> <name pos:start="81:25" pos:end="81:46"><name pos:start="81:25" pos:end="81:29">fbdev</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:46">bytes_per_pixel</name></name> <operator pos:start="81:48" pos:end="81:48">*</operator> <name pos:start="81:50" pos:end="81:71"><name pos:start="81:50" pos:end="81:54">fbdev</name><operator pos:start="81:55" pos:end="81:56">-&gt;</operator><name pos:start="81:57" pos:end="81:63">varinfo</name><operator pos:start="81:64" pos:end="81:64">.</operator><name pos:start="81:65" pos:end="81:71">xoffset</name></name> <operator pos:start="81:73" pos:end="81:73">+</operator>

                        <name pos:start="83:25" pos:end="83:46"><name pos:start="83:25" pos:end="83:29">fbdev</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:38">varinfo</name><operator pos:start="83:39" pos:end="83:39">.</operator><name pos:start="83:40" pos:end="83:46">yoffset</name></name> <operator pos:start="83:48" pos:end="83:48">*</operator> <name pos:start="83:50" pos:end="83:75"><name pos:start="83:50" pos:end="83:54">fbdev</name><operator pos:start="83:55" pos:end="83:56">-&gt;</operator><name pos:start="83:57" pos:end="83:63">fixinfo</name><operator pos:start="83:64" pos:end="83:64">.</operator><name pos:start="83:65" pos:end="83:75">line_length</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:21"><expr pos:start="85:5" pos:end="85:20"><name pos:start="85:5" pos:end="85:8">pout</name> <operator pos:start="85:10" pos:end="85:10">=</operator> <name pos:start="85:12" pos:end="85:20"><name pos:start="85:12" pos:end="85:14">pkt</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:20">data</name></name></expr>;</expr_stmt>



    <for pos:start="89:5" pos:end="97:5">for <control pos:start="89:9" pos:end="89:39">(<init pos:start="89:10" pos:end="89:15"><expr pos:start="89:10" pos:end="89:14"><name pos:start="89:10" pos:end="89:10">i</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <literal type="number" pos:start="89:14" pos:end="89:14">0</literal></expr>;</init> <condition pos:start="89:17" pos:end="89:34"><expr pos:start="89:17" pos:end="89:33"><name pos:start="89:17" pos:end="89:17">i</name> <operator pos:start="89:19" pos:end="89:19">&lt;</operator> <name pos:start="89:21" pos:end="89:33"><name pos:start="89:21" pos:end="89:25">fbdev</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:33">heigth</name></name></expr>;</condition> <incr pos:start="89:36" pos:end="89:38"><expr pos:start="89:36" pos:end="89:38"><name pos:start="89:36" pos:end="89:36">i</name><operator pos:start="89:37" pos:end="89:38">++</operator></expr></incr>)</control> <block pos:start="89:41" pos:end="97:5">{<block_content pos:start="91:9" pos:end="95:38">

        <expr_stmt pos:start="91:9" pos:end="91:49"><expr pos:start="91:9" pos:end="91:48"><call pos:start="91:9" pos:end="91:48"><name pos:start="91:9" pos:end="91:14">memcpy</name><argument_list pos:start="91:15" pos:end="91:48">(<argument pos:start="91:16" pos:end="91:19"><expr pos:start="91:16" pos:end="91:19"><name pos:start="91:16" pos:end="91:19">pout</name></expr></argument>, <argument pos:start="91:22" pos:end="91:24"><expr pos:start="91:22" pos:end="91:24"><name pos:start="91:22" pos:end="91:24">pin</name></expr></argument>, <argument pos:start="91:27" pos:end="91:47"><expr pos:start="91:27" pos:end="91:47"><name pos:start="91:27" pos:end="91:47"><name pos:start="91:27" pos:end="91:31">fbdev</name><operator pos:start="91:32" pos:end="91:33">-&gt;</operator><name pos:start="91:34" pos:end="91:47">frame_linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:43"><expr pos:start="93:9" pos:end="93:42"><name pos:start="93:9" pos:end="93:11">pin</name>  <operator pos:start="93:14" pos:end="93:15">+=</operator> <name pos:start="93:17" pos:end="93:42"><name pos:start="93:17" pos:end="93:21">fbdev</name><operator pos:start="93:22" pos:end="93:23">-&gt;</operator><name pos:start="93:24" pos:end="93:30">fixinfo</name><operator pos:start="93:31" pos:end="93:31">.</operator><name pos:start="93:32" pos:end="93:42">line_length</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:38"><expr pos:start="95:9" pos:end="95:37"><name pos:start="95:9" pos:end="95:12">pout</name> <operator pos:start="95:14" pos:end="95:15">+=</operator> <name pos:start="95:17" pos:end="95:37"><name pos:start="95:17" pos:end="95:21">fbdev</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:37">frame_linesize</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="101:5" pos:end="101:29">return <expr pos:start="101:12" pos:end="101:28"><name pos:start="101:12" pos:end="101:28"><name pos:start="101:12" pos:end="101:16">fbdev</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:28">frame_size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
