<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24183.c" pos:tabs="8"><function pos:start="1:1" pos:end="249:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:33">vmsvga_value_read</name><parameter_list pos:start="1:34" pos:end="1:65">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">opaque</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:64"><decl pos:start="1:49" pos:end="1:64"><type pos:start="1:49" pos:end="1:64"><name pos:start="1:49" pos:end="1:56">uint32_t</name></type> <name pos:start="1:58" pos:end="1:64">address</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="249:1">{<block_content pos:start="5:5" pos:end="247:13">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:17">caps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:25">vmsvga_state_s</name></name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:28">s</name> <init pos:start="7:30" pos:end="7:37">= <expr pos:start="7:32" pos:end="7:37"><name pos:start="7:32" pos:end="7:37">opaque</name></expr></init></decl>;</decl_stmt>

    <switch pos:start="9:5" pos:end="243:5">switch <condition pos:start="9:12" pos:end="9:21">(<expr pos:start="9:13" pos:end="9:20"><name pos:start="9:13" pos:end="9:20"><name pos:start="9:13" pos:end="9:13">s</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:20">index</name></name></expr>)</condition> <block pos:start="9:23" pos:end="243:5">{<block_content pos:start="11:5" pos:end="241:66">

    <case pos:start="11:5" pos:end="11:21">case <expr pos:start="11:10" pos:end="11:20"><name pos:start="11:10" pos:end="11:20">SVGA_REG_ID</name></expr>:</case>

        <return pos:start="13:9" pos:end="13:25">return <expr pos:start="13:16" pos:end="13:24"><name pos:start="13:16" pos:end="13:24"><name pos:start="13:16" pos:end="13:16">s</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:24">svgaid</name></name></expr>;</return>



    <case pos:start="17:5" pos:end="17:25">case <expr pos:start="17:10" pos:end="17:24"><name pos:start="17:10" pos:end="17:24">SVGA_REG_ENABLE</name></expr>:</case>

        <return pos:start="19:9" pos:end="19:25">return <expr pos:start="19:16" pos:end="19:24"><name pos:start="19:16" pos:end="19:24"><name pos:start="19:16" pos:end="19:16">s</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:24">enable</name></name></expr>;</return>



    <case pos:start="23:5" pos:end="23:24">case <expr pos:start="23:10" pos:end="23:23"><name pos:start="23:10" pos:end="23:23">SVGA_REG_WIDTH</name></expr>:</case>

        <return pos:start="25:9" pos:end="25:24">return <expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:23">width</name></name></expr>;</return>



    <case pos:start="29:5" pos:end="29:25">case <expr pos:start="29:10" pos:end="29:24"><name pos:start="29:10" pos:end="29:24">SVGA_REG_HEIGHT</name></expr>:</case>

        <return pos:start="31:9" pos:end="31:25">return <expr pos:start="31:16" pos:end="31:24"><name pos:start="31:16" pos:end="31:24"><name pos:start="31:16" pos:end="31:16">s</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:24">height</name></name></expr>;</return>



    <case pos:start="35:5" pos:end="35:28">case <expr pos:start="35:10" pos:end="35:27"><name pos:start="35:10" pos:end="35:27">SVGA_REG_MAX_WIDTH</name></expr>:</case>

        <return pos:start="37:9" pos:end="37:30">return <expr pos:start="37:16" pos:end="37:29"><name pos:start="37:16" pos:end="37:29">SVGA_MAX_WIDTH</name></expr>;</return>



    <case pos:start="41:5" pos:end="41:29">case <expr pos:start="41:10" pos:end="41:28"><name pos:start="41:10" pos:end="41:28">SVGA_REG_MAX_HEIGHT</name></expr>:</case>

        <return pos:start="43:9" pos:end="43:31">return <expr pos:start="43:16" pos:end="43:30"><name pos:start="43:16" pos:end="43:30">SVGA_MAX_HEIGHT</name></expr>;</return>



    <case pos:start="47:5" pos:end="47:24">case <expr pos:start="47:10" pos:end="47:23"><name pos:start="47:10" pos:end="47:23">SVGA_REG_DEPTH</name></expr>:</case>

        <return pos:start="49:9" pos:end="49:24">return <expr pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:16">s</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:23">depth</name></name></expr>;</return>



    <case pos:start="53:5" pos:end="53:33">case <expr pos:start="53:10" pos:end="53:32"><name pos:start="53:10" pos:end="53:32">SVGA_REG_BITS_PER_PIXEL</name></expr>:</case>

        <return pos:start="55:9" pos:end="55:35">return <expr pos:start="55:16" pos:end="55:34"><operator pos:start="55:16" pos:end="55:16">(</operator><name pos:start="55:17" pos:end="55:24"><name pos:start="55:17" pos:end="55:17">s</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:24">depth</name></name> <operator pos:start="55:26" pos:end="55:26">+</operator> <literal type="number" pos:start="55:28" pos:end="55:28">7</literal><operator pos:start="55:29" pos:end="55:29">)</operator> <operator pos:start="55:31" pos:end="55:31">&amp;</operator> <operator pos:start="55:33" pos:end="55:33">~</operator><literal type="number" pos:start="55:34" pos:end="55:34">7</literal></expr>;</return>



    <case pos:start="59:5" pos:end="59:30">case <expr pos:start="59:10" pos:end="59:29"><name pos:start="59:10" pos:end="59:29">SVGA_REG_PSEUDOCOLOR</name></expr>:</case>

        <return pos:start="61:9" pos:end="61:19">return <expr pos:start="61:16" pos:end="61:18"><literal type="number" pos:start="61:16" pos:end="61:18">0x0</literal></expr>;</return>



    <case pos:start="65:5" pos:end="65:27">case <expr pos:start="65:10" pos:end="65:26"><name pos:start="65:10" pos:end="65:26">SVGA_REG_RED_MASK</name></expr>:</case>

        <return pos:start="67:9" pos:end="67:23">return <expr pos:start="67:16" pos:end="67:22"><name pos:start="67:16" pos:end="67:22"><name pos:start="67:16" pos:end="67:16">s</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:22">wred</name></name></expr>;</return>

    <case pos:start="69:5" pos:end="69:29">case <expr pos:start="69:10" pos:end="69:28"><name pos:start="69:10" pos:end="69:28">SVGA_REG_GREEN_MASK</name></expr>:</case>

        <return pos:start="71:9" pos:end="71:25">return <expr pos:start="71:16" pos:end="71:24"><name pos:start="71:16" pos:end="71:24"><name pos:start="71:16" pos:end="71:16">s</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:24">wgreen</name></name></expr>;</return>

    <case pos:start="73:5" pos:end="73:28">case <expr pos:start="73:10" pos:end="73:27"><name pos:start="73:10" pos:end="73:27">SVGA_REG_BLUE_MASK</name></expr>:</case>

        <return pos:start="75:9" pos:end="75:24">return <expr pos:start="75:16" pos:end="75:23"><name pos:start="75:16" pos:end="75:23"><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:23">wblue</name></name></expr>;</return>



    <case pos:start="79:5" pos:end="79:33">case <expr pos:start="79:10" pos:end="79:32"><name pos:start="79:10" pos:end="79:32">SVGA_REG_BYTES_PER_LINE</name></expr>:</case>

        <return pos:start="81:9" pos:end="81:52">return <expr pos:start="81:16" pos:end="81:51"><operator pos:start="81:16" pos:end="81:16">(</operator><operator pos:start="81:17" pos:end="81:17">(</operator><name pos:start="81:18" pos:end="81:25"><name pos:start="81:18" pos:end="81:18">s</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:25">depth</name></name> <operator pos:start="81:27" pos:end="81:27">+</operator> <literal type="number" pos:start="81:29" pos:end="81:29">7</literal><operator pos:start="81:30" pos:end="81:30">)</operator> <operator pos:start="81:32" pos:end="81:33">&gt;&gt;</operator> <literal type="number" pos:start="81:35" pos:end="81:35">3</literal><operator pos:start="81:36" pos:end="81:36">)</operator> <operator pos:start="81:38" pos:end="81:38">*</operator> <name pos:start="81:40" pos:end="81:51"><name pos:start="81:40" pos:end="81:40">s</name><operator pos:start="81:41" pos:end="81:42">-&gt;</operator><name pos:start="81:43" pos:end="81:51">new_width</name></name></expr>;</return>



    <case pos:start="85:5" pos:end="85:27">case <expr pos:start="85:10" pos:end="85:26"><name pos:start="85:10" pos:end="85:26">SVGA_REG_FB_START</name></expr>:</case> <block pos:start="85:29" pos:end="93:5">{<block_content pos:start="87:9" pos:end="91:54">

        <decl_stmt pos:start="87:9" pos:end="89:63"><decl pos:start="87:9" pos:end="89:62"><type pos:start="87:9" pos:end="87:35"><name pos:start="87:9" pos:end="87:33"><name pos:start="87:9" pos:end="87:14">struct</name> <name pos:start="87:16" pos:end="87:33">pci_vmsvga_state_s</name></name> <modifier pos:start="87:35" pos:end="87:35">*</modifier></type><name pos:start="87:36" pos:end="87:45">pci_vmsvga</name>

            <init pos:start="89:13" pos:end="89:62">= <expr pos:start="89:15" pos:end="89:62"><call pos:start="89:15" pos:end="89:62"><name pos:start="89:15" pos:end="89:26">container_of</name><argument_list pos:start="89:27" pos:end="89:62">(<argument pos:start="89:28" pos:end="89:28"><expr pos:start="89:28" pos:end="89:28"><name pos:start="89:28" pos:end="89:28">s</name></expr></argument>, <argument pos:start="89:31" pos:end="89:55"><expr pos:start="89:31" pos:end="89:55">struct <name pos:start="89:38" pos:end="89:55">pci_vmsvga_state_s</name></expr></argument>, <argument pos:start="89:58" pos:end="89:61"><expr pos:start="89:58" pos:end="89:61"><name pos:start="89:58" pos:end="89:61">chip</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <return pos:start="91:9" pos:end="91:54">return <expr pos:start="91:16" pos:end="91:53"><call pos:start="91:16" pos:end="91:53"><name pos:start="91:16" pos:end="91:31">pci_get_bar_addr</name><argument_list pos:start="91:32" pos:end="91:53">(<argument pos:start="91:33" pos:end="91:49"><expr pos:start="91:33" pos:end="91:49"><operator pos:start="91:33" pos:end="91:33">&amp;</operator><name pos:start="91:34" pos:end="91:49"><name pos:start="91:34" pos:end="91:43">pci_vmsvga</name><operator pos:start="91:44" pos:end="91:45">-&gt;</operator><name pos:start="91:46" pos:end="91:49">card</name></name></expr></argument>, <argument pos:start="91:52" pos:end="91:52"><expr pos:start="91:52" pos:end="91:52"><literal type="number" pos:start="91:52" pos:end="91:52">1</literal></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block>



    <case pos:start="97:5" pos:end="97:28">case <expr pos:start="97:10" pos:end="97:27"><name pos:start="97:10" pos:end="97:27">SVGA_REG_FB_OFFSET</name></expr>:</case>

        <return pos:start="99:9" pos:end="99:19">return <expr pos:start="99:16" pos:end="99:18"><literal type="number" pos:start="99:16" pos:end="99:18">0x0</literal></expr>;</return>



    <case pos:start="103:5" pos:end="103:28">case <expr pos:start="103:10" pos:end="103:27"><name pos:start="103:10" pos:end="103:27">SVGA_REG_VRAM_SIZE</name></expr>:</case>

        <return pos:start="105:9" pos:end="105:32">return <expr pos:start="105:16" pos:end="105:31"><name pos:start="105:16" pos:end="105:31"><name pos:start="105:16" pos:end="105:16">s</name><operator pos:start="105:17" pos:end="105:18">-&gt;</operator><name pos:start="105:19" pos:end="105:21">vga</name><operator pos:start="105:22" pos:end="105:22">.</operator><name pos:start="105:23" pos:end="105:31">vram_size</name></name></expr>;</return>



    <case pos:start="109:5" pos:end="109:26">case <expr pos:start="109:10" pos:end="109:25"><name pos:start="109:10" pos:end="109:25">SVGA_REG_FB_SIZE</name></expr>:</case>

        <return pos:start="111:9" pos:end="111:26">return <expr pos:start="111:16" pos:end="111:25"><name pos:start="111:16" pos:end="111:25"><name pos:start="111:16" pos:end="111:16">s</name><operator pos:start="111:17" pos:end="111:18">-&gt;</operator><name pos:start="111:19" pos:end="111:25">fb_size</name></name></expr>;</return>



    <case pos:start="115:5" pos:end="115:31">case <expr pos:start="115:10" pos:end="115:30"><name pos:start="115:10" pos:end="115:30">SVGA_REG_CAPABILITIES</name></expr>:</case>

        <expr_stmt pos:start="117:9" pos:end="120:0"><expr pos:start="117:9" pos:end="117:28"><name pos:start="117:9" pos:end="117:12">caps</name> <operator pos:start="117:14" pos:end="117:14">=</operator> <name pos:start="117:16" pos:end="117:28">SVGA_CAP_NONE</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="119:1" pos:end="119:20">#<cpp:directive pos:start="119:2" pos:end="119:6">ifdef</cpp:directive> <name pos:start="119:8" pos:end="119:20">HW_RECT_ACCEL</name></cpp:ifdef>

        <expr_stmt pos:start="121:9" pos:end="126:0"><expr pos:start="121:9" pos:end="121:34"><name pos:start="121:9" pos:end="121:12">caps</name> <operator pos:start="121:14" pos:end="121:15">|=</operator> <name pos:start="121:17" pos:end="121:34">SVGA_CAP_RECT_COPY</name></expr>;</expr_stmt>

<cpp:endif pos:start="123:1" pos:end="123:6">#<cpp:directive pos:start="123:2" pos:end="123:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="125:1" pos:end="125:20">#<cpp:directive pos:start="125:2" pos:end="125:6">ifdef</cpp:directive> <name pos:start="125:8" pos:end="125:20">HW_FILL_ACCEL</name></cpp:ifdef>

        <expr_stmt pos:start="127:9" pos:end="132:0"><expr pos:start="127:9" pos:end="127:34"><name pos:start="127:9" pos:end="127:12">caps</name> <operator pos:start="127:14" pos:end="127:15">|=</operator> <name pos:start="127:17" pos:end="127:34">SVGA_CAP_RECT_FILL</name></expr>;</expr_stmt>

<cpp:endif pos:start="129:1" pos:end="129:6">#<cpp:directive pos:start="129:2" pos:end="129:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="131:1" pos:end="131:21">#<cpp:directive pos:start="131:2" pos:end="131:6">ifdef</cpp:directive> <name pos:start="131:8" pos:end="131:21">HW_MOUSE_ACCEL</name></cpp:ifdef>

        <if_stmt pos:start="133:9" pos:end="142:0"><if pos:start="133:9" pos:end="142:0">if <condition pos:start="133:12" pos:end="133:51">(<expr pos:start="133:13" pos:end="133:50"><call pos:start="133:13" pos:end="133:50"><name pos:start="133:13" pos:end="133:39">dpy_cursor_define_supported</name><argument_list pos:start="133:40" pos:end="133:50">(<argument pos:start="133:41" pos:end="133:49"><expr pos:start="133:41" pos:end="133:49"><name pos:start="133:41" pos:end="133:49"><name pos:start="133:41" pos:end="133:41">s</name><operator pos:start="133:42" pos:end="133:43">-&gt;</operator><name pos:start="133:44" pos:end="133:46">vga</name><operator pos:start="133:47" pos:end="133:47">.</operator><name pos:start="133:48" pos:end="133:49">ds</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="133:53" pos:end="142:0">{<block_content pos:start="135:13" pos:end="137:43">

            <expr_stmt pos:start="135:13" pos:end="137:43"><expr pos:start="135:13" pos:end="137:42"><name pos:start="135:13" pos:end="135:16">caps</name> <operator pos:start="135:18" pos:end="135:19">|=</operator> <name pos:start="135:21" pos:end="135:35">SVGA_CAP_CURSOR</name> <operator pos:start="135:37" pos:end="135:37">|</operator> <name pos:start="135:39" pos:end="135:62">SVGA_CAP_CURSOR_BYPASS_2</name> <operator pos:start="135:64" pos:end="135:64">|</operator>

                    <name pos:start="137:21" pos:end="137:42">SVGA_CAP_CURSOR_BYPASS</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="141:1" pos:end="141:6">#<cpp:directive pos:start="141:2" pos:end="141:6">endif</cpp:directive></cpp:endif>

        <return pos:start="143:9" pos:end="143:20">return <expr pos:start="143:16" pos:end="143:19"><name pos:start="143:16" pos:end="143:19">caps</name></expr>;</return>



    <case pos:start="147:5" pos:end="147:28">case <expr pos:start="147:10" pos:end="147:27"><name pos:start="147:10" pos:end="147:27">SVGA_REG_MEM_START</name></expr>:</case> <block pos:start="147:30" pos:end="155:5">{<block_content pos:start="149:9" pos:end="153:54">

        <decl_stmt pos:start="149:9" pos:end="151:63"><decl pos:start="149:9" pos:end="151:62"><type pos:start="149:9" pos:end="149:35"><name pos:start="149:9" pos:end="149:33"><name pos:start="149:9" pos:end="149:14">struct</name> <name pos:start="149:16" pos:end="149:33">pci_vmsvga_state_s</name></name> <modifier pos:start="149:35" pos:end="149:35">*</modifier></type><name pos:start="149:36" pos:end="149:45">pci_vmsvga</name>

            <init pos:start="151:13" pos:end="151:62">= <expr pos:start="151:15" pos:end="151:62"><call pos:start="151:15" pos:end="151:62"><name pos:start="151:15" pos:end="151:26">container_of</name><argument_list pos:start="151:27" pos:end="151:62">(<argument pos:start="151:28" pos:end="151:28"><expr pos:start="151:28" pos:end="151:28"><name pos:start="151:28" pos:end="151:28">s</name></expr></argument>, <argument pos:start="151:31" pos:end="151:55"><expr pos:start="151:31" pos:end="151:55">struct <name pos:start="151:38" pos:end="151:55">pci_vmsvga_state_s</name></expr></argument>, <argument pos:start="151:58" pos:end="151:61"><expr pos:start="151:58" pos:end="151:61"><name pos:start="151:58" pos:end="151:61">chip</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <return pos:start="153:9" pos:end="153:54">return <expr pos:start="153:16" pos:end="153:53"><call pos:start="153:16" pos:end="153:53"><name pos:start="153:16" pos:end="153:31">pci_get_bar_addr</name><argument_list pos:start="153:32" pos:end="153:53">(<argument pos:start="153:33" pos:end="153:49"><expr pos:start="153:33" pos:end="153:49"><operator pos:start="153:33" pos:end="153:33">&amp;</operator><name pos:start="153:34" pos:end="153:49"><name pos:start="153:34" pos:end="153:43">pci_vmsvga</name><operator pos:start="153:44" pos:end="153:45">-&gt;</operator><name pos:start="153:46" pos:end="153:49">card</name></name></expr></argument>, <argument pos:start="153:52" pos:end="153:52"><expr pos:start="153:52" pos:end="153:52"><literal type="number" pos:start="153:52" pos:end="153:52">2</literal></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block>



    <case pos:start="159:5" pos:end="159:27">case <expr pos:start="159:10" pos:end="159:26"><name pos:start="159:10" pos:end="159:26">SVGA_REG_MEM_SIZE</name></expr>:</case>

        <return pos:start="161:9" pos:end="161:28">return <expr pos:start="161:16" pos:end="161:27"><name pos:start="161:16" pos:end="161:27"><name pos:start="161:16" pos:end="161:16">s</name><operator pos:start="161:17" pos:end="161:18">-&gt;</operator><name pos:start="161:19" pos:end="161:27">fifo_size</name></name></expr>;</return>



    <case pos:start="165:5" pos:end="165:30">case <expr pos:start="165:10" pos:end="165:29"><name pos:start="165:10" pos:end="165:29">SVGA_REG_CONFIG_DONE</name></expr>:</case>

        <return pos:start="167:9" pos:end="167:25">return <expr pos:start="167:16" pos:end="167:24"><name pos:start="167:16" pos:end="167:24"><name pos:start="167:16" pos:end="167:16">s</name><operator pos:start="167:17" pos:end="167:18">-&gt;</operator><name pos:start="167:19" pos:end="167:24">config</name></name></expr>;</return>



    <case pos:start="171:5" pos:end="171:23">case <expr pos:start="171:10" pos:end="171:22"><name pos:start="171:10" pos:end="171:22">SVGA_REG_SYNC</name></expr>:</case>

    <case pos:start="173:5" pos:end="173:23">case <expr pos:start="173:10" pos:end="173:22"><name pos:start="173:10" pos:end="173:22">SVGA_REG_BUSY</name></expr>:</case>

        <return pos:start="175:9" pos:end="175:26">return <expr pos:start="175:16" pos:end="175:25"><name pos:start="175:16" pos:end="175:25"><name pos:start="175:16" pos:end="175:16">s</name><operator pos:start="175:17" pos:end="175:18">-&gt;</operator><name pos:start="175:19" pos:end="175:25">syncing</name></name></expr>;</return>



    <case pos:start="179:5" pos:end="179:27">case <expr pos:start="179:10" pos:end="179:26"><name pos:start="179:10" pos:end="179:26">SVGA_REG_GUEST_ID</name></expr>:</case>

        <return pos:start="181:9" pos:end="181:24">return <expr pos:start="181:16" pos:end="181:23"><name pos:start="181:16" pos:end="181:23"><name pos:start="181:16" pos:end="181:16">s</name><operator pos:start="181:17" pos:end="181:18">-&gt;</operator><name pos:start="181:19" pos:end="181:23">guest</name></name></expr>;</return>



    <case pos:start="185:5" pos:end="185:28">case <expr pos:start="185:10" pos:end="185:27"><name pos:start="185:10" pos:end="185:27">SVGA_REG_CURSOR_ID</name></expr>:</case>

        <return pos:start="187:9" pos:end="187:28">return <expr pos:start="187:16" pos:end="187:27"><name pos:start="187:16" pos:end="187:27"><name pos:start="187:16" pos:end="187:16">s</name><operator pos:start="187:17" pos:end="187:18">-&gt;</operator><name pos:start="187:19" pos:end="187:24">cursor</name><operator pos:start="187:25" pos:end="187:25">.</operator><name pos:start="187:26" pos:end="187:27">id</name></name></expr>;</return>



    <case pos:start="191:5" pos:end="191:27">case <expr pos:start="191:10" pos:end="191:26"><name pos:start="191:10" pos:end="191:26">SVGA_REG_CURSOR_X</name></expr>:</case>

        <return pos:start="193:9" pos:end="193:27">return <expr pos:start="193:16" pos:end="193:26"><name pos:start="193:16" pos:end="193:26"><name pos:start="193:16" pos:end="193:16">s</name><operator pos:start="193:17" pos:end="193:18">-&gt;</operator><name pos:start="193:19" pos:end="193:24">cursor</name><operator pos:start="193:25" pos:end="193:25">.</operator><name pos:start="193:26" pos:end="193:26">x</name></name></expr>;</return>



    <case pos:start="197:5" pos:end="197:27">case <expr pos:start="197:10" pos:end="197:26"><name pos:start="197:10" pos:end="197:26">SVGA_REG_CURSOR_Y</name></expr>:</case>

        <return pos:start="199:9" pos:end="199:27">return <expr pos:start="199:16" pos:end="199:26"><name pos:start="199:16" pos:end="199:26"><name pos:start="199:16" pos:end="199:16">s</name><operator pos:start="199:17" pos:end="199:18">-&gt;</operator><name pos:start="199:19" pos:end="199:24">cursor</name><operator pos:start="199:25" pos:end="199:25">.</operator><name pos:start="199:26" pos:end="199:26">x</name></name></expr>;</return>



    <case pos:start="203:5" pos:end="203:28">case <expr pos:start="203:10" pos:end="203:27"><name pos:start="203:10" pos:end="203:27">SVGA_REG_CURSOR_ON</name></expr>:</case>

        <return pos:start="205:9" pos:end="205:28">return <expr pos:start="205:16" pos:end="205:27"><name pos:start="205:16" pos:end="205:27"><name pos:start="205:16" pos:end="205:16">s</name><operator pos:start="205:17" pos:end="205:18">-&gt;</operator><name pos:start="205:19" pos:end="205:24">cursor</name><operator pos:start="205:25" pos:end="205:25">.</operator><name pos:start="205:26" pos:end="205:27">on</name></name></expr>;</return>



    <case pos:start="209:5" pos:end="209:38">case <expr pos:start="209:10" pos:end="209:37"><name pos:start="209:10" pos:end="209:37">SVGA_REG_HOST_BITS_PER_PIXEL</name></expr>:</case>

        <return pos:start="211:9" pos:end="211:35">return <expr pos:start="211:16" pos:end="211:34"><operator pos:start="211:16" pos:end="211:16">(</operator><name pos:start="211:17" pos:end="211:24"><name pos:start="211:17" pos:end="211:17">s</name><operator pos:start="211:18" pos:end="211:19">-&gt;</operator><name pos:start="211:20" pos:end="211:24">depth</name></name> <operator pos:start="211:26" pos:end="211:26">+</operator> <literal type="number" pos:start="211:28" pos:end="211:28">7</literal><operator pos:start="211:29" pos:end="211:29">)</operator> <operator pos:start="211:31" pos:end="211:31">&amp;</operator> <operator pos:start="211:33" pos:end="211:33">~</operator><literal type="number" pos:start="211:34" pos:end="211:34">7</literal></expr>;</return>



    <case pos:start="215:5" pos:end="215:31">case <expr pos:start="215:10" pos:end="215:30"><name pos:start="215:10" pos:end="215:30">SVGA_REG_SCRATCH_SIZE</name></expr>:</case>

        <return pos:start="217:9" pos:end="217:31">return <expr pos:start="217:16" pos:end="217:30"><name pos:start="217:16" pos:end="217:30"><name pos:start="217:16" pos:end="217:16">s</name><operator pos:start="217:17" pos:end="217:18">-&gt;</operator><name pos:start="217:19" pos:end="217:30">scratch_size</name></name></expr>;</return>



    <case pos:start="221:5" pos:end="221:27">case <expr pos:start="221:10" pos:end="221:26"><name pos:start="221:10" pos:end="221:26">SVGA_REG_MEM_REGS</name></expr>:</case>

    <case pos:start="223:5" pos:end="223:31">case <expr pos:start="223:10" pos:end="223:30"><name pos:start="223:10" pos:end="223:30">SVGA_REG_NUM_DISPLAYS</name></expr>:</case>

    <case pos:start="225:5" pos:end="225:28">case <expr pos:start="225:10" pos:end="225:27"><name pos:start="225:10" pos:end="225:27">SVGA_REG_PITCHLOCK</name></expr>:</case>

    <case pos:start="227:5" pos:end="227:48">case <expr pos:start="227:10" pos:end="227:47"><name pos:start="227:10" pos:end="227:26">SVGA_PALETTE_BASE</name> <operator pos:start="227:28" pos:end="227:30">...</operator> <name pos:start="227:32" pos:end="227:47">SVGA_PALETTE_END</name></expr>:</case>

        <return pos:start="229:9" pos:end="229:17">return <expr pos:start="229:16" pos:end="229:16"><literal type="number" pos:start="229:16" pos:end="229:16">0</literal></expr>;</return>



    <default pos:start="233:5" pos:end="233:12">default:</default>

        <if_stmt pos:start="235:9" pos:end="239:60"><if pos:start="235:9" pos:end="239:60">if <condition pos:start="235:12" pos:end="237:63">(<expr pos:start="235:13" pos:end="237:62"><name pos:start="235:13" pos:end="235:20"><name pos:start="235:13" pos:end="235:13">s</name><operator pos:start="235:14" pos:end="235:15">-&gt;</operator><name pos:start="235:16" pos:end="235:20">index</name></name> <operator pos:start="235:22" pos:end="235:23">&gt;=</operator> <name pos:start="235:25" pos:end="235:41">SVGA_SCRATCH_BASE</name> <operator pos:start="235:43" pos:end="235:44">&amp;&amp;</operator>

                <name pos:start="237:17" pos:end="237:24"><name pos:start="237:17" pos:end="237:17">s</name><operator pos:start="237:18" pos:end="237:19">-&gt;</operator><name pos:start="237:20" pos:end="237:24">index</name></name> <operator pos:start="237:26" pos:end="237:26">&lt;</operator> <name pos:start="237:28" pos:end="237:44">SVGA_SCRATCH_BASE</name> <operator pos:start="237:46" pos:end="237:46">+</operator> <name pos:start="237:48" pos:end="237:62"><name pos:start="237:48" pos:end="237:48">s</name><operator pos:start="237:49" pos:end="237:50">-&gt;</operator><name pos:start="237:51" pos:end="237:62">scratch_size</name></name></expr>)</condition><block type="pseudo" pos:start="239:13" pos:end="239:60"><block_content pos:start="239:13" pos:end="239:60">

            <return pos:start="239:13" pos:end="239:60">return <expr pos:start="239:20" pos:end="239:59"><name pos:start="239:20" pos:end="239:59"><name pos:start="239:20" pos:end="239:20">s</name><operator pos:start="239:21" pos:end="239:22">-&gt;</operator><name pos:start="239:23" pos:end="239:29">scratch</name><index pos:start="239:30" pos:end="239:59">[<expr pos:start="239:31" pos:end="239:58"><name pos:start="239:31" pos:end="239:38"><name pos:start="239:31" pos:end="239:31">s</name><operator pos:start="239:32" pos:end="239:33">-&gt;</operator><name pos:start="239:34" pos:end="239:38">index</name></name> <operator pos:start="239:40" pos:end="239:40">-</operator> <name pos:start="239:42" pos:end="239:58">SVGA_SCRATCH_BASE</name></expr>]</index></name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:66"><expr pos:start="241:9" pos:end="241:65"><call pos:start="241:9" pos:end="241:65"><name pos:start="241:9" pos:end="241:14">printf</name><argument_list pos:start="241:15" pos:end="241:65">(<argument pos:start="241:16" pos:end="241:40"><expr pos:start="241:16" pos:end="241:40"><literal type="string" pos:start="241:16" pos:end="241:40">"%s: Bad register %02x\n"</literal></expr></argument>, <argument pos:start="241:43" pos:end="241:54"><expr pos:start="241:43" pos:end="241:54"><name pos:start="241:43" pos:end="241:54">__FUNCTION__</name></expr></argument>, <argument pos:start="241:57" pos:end="241:64"><expr pos:start="241:57" pos:end="241:64"><name pos:start="241:57" pos:end="241:64"><name pos:start="241:57" pos:end="241:57">s</name><operator pos:start="241:58" pos:end="241:59">-&gt;</operator><name pos:start="241:60" pos:end="241:64">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <return pos:start="247:5" pos:end="247:13">return <expr pos:start="247:12" pos:end="247:12"><literal type="number" pos:start="247:12" pos:end="247:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
