<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22289.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">stpcifc_service_call</name><parameter_list pos:start="1:25" pos:end="1:77">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:32">S390CPU</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">cpu</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:49"><decl pos:start="1:40" pos:end="1:49"><type pos:start="1:40" pos:end="1:49"><name pos:start="1:40" pos:end="1:46">uint8_t</name></type> <name pos:start="1:48" pos:end="1:49">r1</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:64"><decl pos:start="1:52" pos:end="1:64"><type pos:start="1:52" pos:end="1:64"><name pos:start="1:52" pos:end="1:59">uint64_t</name></type> <name pos:start="1:61" pos:end="1:64">fiba</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:76"><decl pos:start="1:67" pos:end="1:76"><type pos:start="1:67" pos:end="1:76"><name pos:start="1:67" pos:end="1:73">uint8_t</name></type> <name pos:start="1:75" pos:end="1:76">ar</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">CPUS390XState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">env</name> <init pos:start="5:24" pos:end="5:34">= <expr pos:start="5:26" pos:end="5:34"><operator pos:start="5:26" pos:end="5:26">&amp;</operator><name pos:start="5:27" pos:end="5:34"><name pos:start="5:27" pos:end="5:29">cpu</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:34">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:15">fh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">ZpciFib</name></type> <name pos:start="9:13" pos:end="9:15">fib</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">S390PCIBusDevice</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:27">pbdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:17">data</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:15">cc</name> <init pos:start="15:17" pos:end="15:32">= <expr pos:start="15:19" pos:end="15:32"><name pos:start="15:19" pos:end="15:32">ZPCI_PCI_LS_OK</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:40">(<expr pos:start="19:9" pos:end="19:39"><name pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:11">env</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:16">psw</name><operator pos:start="19:17" pos:end="19:17">.</operator><name pos:start="19:18" pos:end="19:21">mask</name></name> <operator pos:start="19:23" pos:end="19:23">&amp;</operator> <name pos:start="19:25" pos:end="19:39">PSW_MASK_PSTATE</name></expr>)</condition> <block pos:start="19:42" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:17">

        <expr_stmt pos:start="21:9" pos:end="21:50"><expr pos:start="21:9" pos:end="21:49"><call pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:25">program_interrupt</name><argument_list pos:start="21:26" pos:end="21:49">(<argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">env</name></expr></argument>, <argument pos:start="21:32" pos:end="21:45"><expr pos:start="21:32" pos:end="21:45"><name pos:start="21:32" pos:end="21:45">PGM_PRIVILEGED</name></expr></argument>, <argument pos:start="21:48" pos:end="21:48"><expr pos:start="21:48" pos:end="21:48"><literal type="number" pos:start="21:48" pos:end="21:48">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:6">fh</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <name pos:start="29:10" pos:end="29:22"><name pos:start="29:10" pos:end="29:12">env</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:18">regs</name><index pos:start="29:19" pos:end="29:22">[<expr pos:start="29:20" pos:end="29:21"><name pos:start="29:20" pos:end="29:21">r1</name></expr>]</index></name> <operator pos:start="29:24" pos:end="29:25">&gt;&gt;</operator> <literal type="number" pos:start="29:27" pos:end="29:28">32</literal></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:19">(<expr pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:12">fiba</name> <operator pos:start="33:14" pos:end="33:14">&amp;</operator> <literal type="number" pos:start="33:16" pos:end="33:18">0x7</literal></expr>)</condition> <block pos:start="33:21" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:17">

        <expr_stmt pos:start="35:9" pos:end="35:53"><expr pos:start="35:9" pos:end="35:52"><call pos:start="35:9" pos:end="35:52"><name pos:start="35:9" pos:end="35:25">program_interrupt</name><argument_list pos:start="35:26" pos:end="35:52">(<argument pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><name pos:start="35:27" pos:end="35:29">env</name></expr></argument>, <argument pos:start="35:32" pos:end="35:48"><expr pos:start="35:32" pos:end="35:48"><name pos:start="35:32" pos:end="35:48">PGM_SPECIFICATION</name></expr></argument>, <argument pos:start="35:51" pos:end="35:51"><expr pos:start="35:51" pos:end="35:51"><literal type="number" pos:start="35:51" pos:end="35:51">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:40"><expr pos:start="43:5" pos:end="43:39"><name pos:start="43:5" pos:end="43:9">pbdev</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <call pos:start="43:13" pos:end="43:39"><name pos:start="43:13" pos:end="43:35">s390_pci_find_dev_by_fh</name><argument_list pos:start="43:36" pos:end="43:39">(<argument pos:start="43:37" pos:end="43:38"><expr pos:start="43:37" pos:end="43:38"><name pos:start="43:37" pos:end="43:38">fh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:15">(<expr pos:start="45:9" pos:end="45:14"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:14">pbdev</name></expr>)</condition> <block pos:start="45:17" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:17">

        <expr_stmt pos:start="47:9" pos:end="47:45"><expr pos:start="47:9" pos:end="47:44"><call pos:start="47:9" pos:end="47:44"><name pos:start="47:9" pos:end="47:13">setcc</name><argument_list pos:start="47:14" pos:end="47:44">(<argument pos:start="47:15" pos:end="47:17"><expr pos:start="47:15" pos:end="47:17"><name pos:start="47:15" pos:end="47:17">cpu</name></expr></argument>, <argument pos:start="47:20" pos:end="47:43"><expr pos:start="47:20" pos:end="47:43"><name pos:start="47:20" pos:end="47:43">ZPCI_PCI_LS_INVAL_HANDLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:33"><expr pos:start="55:5" pos:end="55:32"><call pos:start="55:5" pos:end="55:32"><name pos:start="55:5" pos:end="55:10">memset</name><argument_list pos:start="55:11" pos:end="55:32">(<argument pos:start="55:12" pos:end="55:15"><expr pos:start="55:12" pos:end="55:15"><operator pos:start="55:12" pos:end="55:12">&amp;</operator><name pos:start="55:13" pos:end="55:15">fib</name></expr></argument>, <argument pos:start="55:18" pos:end="55:18"><expr pos:start="55:18" pos:end="55:18"><literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr></argument>, <argument pos:start="55:21" pos:end="55:31"><expr pos:start="55:21" pos:end="55:31"><sizeof pos:start="55:21" pos:end="55:31">sizeof<argument_list pos:start="55:27" pos:end="55:31">(<argument pos:start="55:28" pos:end="55:30"><expr pos:start="55:28" pos:end="55:30"><name pos:start="55:28" pos:end="55:30">fib</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:32"><expr pos:start="57:5" pos:end="57:31"><call pos:start="57:5" pos:end="57:31"><name pos:start="57:5" pos:end="57:9">stq_p</name><argument_list pos:start="57:10" pos:end="57:31">(<argument pos:start="57:11" pos:end="57:18"><expr pos:start="57:11" pos:end="57:18"><operator pos:start="57:11" pos:end="57:11">&amp;</operator><name pos:start="57:12" pos:end="57:18"><name pos:start="57:12" pos:end="57:14">fib</name><operator pos:start="57:15" pos:end="57:15">.</operator><name pos:start="57:16" pos:end="57:18">pba</name></name></expr></argument>, <argument pos:start="57:21" pos:end="57:30"><expr pos:start="57:21" pos:end="57:30"><name pos:start="57:21" pos:end="57:30"><name pos:start="57:21" pos:end="57:25">pbdev</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:30">pba</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:32"><expr pos:start="59:5" pos:end="59:31"><call pos:start="59:5" pos:end="59:31"><name pos:start="59:5" pos:end="59:9">stq_p</name><argument_list pos:start="59:10" pos:end="59:31">(<argument pos:start="59:11" pos:end="59:18"><expr pos:start="59:11" pos:end="59:18"><operator pos:start="59:11" pos:end="59:11">&amp;</operator><name pos:start="59:12" pos:end="59:18"><name pos:start="59:12" pos:end="59:14">fib</name><operator pos:start="59:15" pos:end="59:15">.</operator><name pos:start="59:16" pos:end="59:18">pal</name></name></expr></argument>, <argument pos:start="59:21" pos:end="59:30"><expr pos:start="59:21" pos:end="59:30"><name pos:start="59:21" pos:end="59:30"><name pos:start="59:21" pos:end="59:25">pbdev</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:30">pal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:36"><expr pos:start="61:5" pos:end="61:35"><call pos:start="61:5" pos:end="61:35"><name pos:start="61:5" pos:end="61:9">stq_p</name><argument_list pos:start="61:10" pos:end="61:35">(<argument pos:start="61:11" pos:end="61:19"><expr pos:start="61:11" pos:end="61:19"><operator pos:start="61:11" pos:end="61:11">&amp;</operator><name pos:start="61:12" pos:end="61:19"><name pos:start="61:12" pos:end="61:14">fib</name><operator pos:start="61:15" pos:end="61:15">.</operator><name pos:start="61:16" pos:end="61:19">iota</name></name></expr></argument>, <argument pos:start="61:22" pos:end="61:34"><expr pos:start="61:22" pos:end="61:34"><name pos:start="61:22" pos:end="61:34"><name pos:start="61:22" pos:end="61:26">pbdev</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:34">g_iota</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:53"><expr pos:start="63:5" pos:end="63:52"><call pos:start="63:5" pos:end="63:52"><name pos:start="63:5" pos:end="63:9">stq_p</name><argument_list pos:start="63:10" pos:end="63:52">(<argument pos:start="63:11" pos:end="63:19"><expr pos:start="63:11" pos:end="63:19"><operator pos:start="63:11" pos:end="63:11">&amp;</operator><name pos:start="63:12" pos:end="63:19"><name pos:start="63:12" pos:end="63:14">fib</name><operator pos:start="63:15" pos:end="63:15">.</operator><name pos:start="63:16" pos:end="63:19">aibv</name></name></expr></argument>, <argument pos:start="63:22" pos:end="63:51"><expr pos:start="63:22" pos:end="63:51"><name pos:start="63:22" pos:end="63:51"><name pos:start="63:22" pos:end="63:26">pbdev</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:34">routes</name><operator pos:start="63:35" pos:end="63:35">.</operator><name pos:start="63:36" pos:end="63:42">adapter</name><operator pos:start="63:43" pos:end="63:43">.</operator><name pos:start="63:44" pos:end="63:51">ind_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:57"><expr pos:start="65:5" pos:end="65:56"><call pos:start="65:5" pos:end="65:56"><name pos:start="65:5" pos:end="65:9">stq_p</name><argument_list pos:start="65:10" pos:end="65:56">(<argument pos:start="65:11" pos:end="65:19"><expr pos:start="65:11" pos:end="65:19"><operator pos:start="65:11" pos:end="65:11">&amp;</operator><name pos:start="65:12" pos:end="65:19"><name pos:start="65:12" pos:end="65:14">fib</name><operator pos:start="65:15" pos:end="65:15">.</operator><name pos:start="65:16" pos:end="65:19">aisb</name></name></expr></argument>, <argument pos:start="65:22" pos:end="65:55"><expr pos:start="65:22" pos:end="65:55"><name pos:start="65:22" pos:end="65:55"><name pos:start="65:22" pos:end="65:26">pbdev</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:34">routes</name><operator pos:start="65:35" pos:end="65:35">.</operator><name pos:start="65:36" pos:end="65:42">adapter</name><operator pos:start="65:43" pos:end="65:43">.</operator><name pos:start="65:44" pos:end="65:55">summary_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:42"><expr pos:start="67:5" pos:end="67:41"><call pos:start="67:5" pos:end="67:41"><name pos:start="67:5" pos:end="67:9">stq_p</name><argument_list pos:start="67:10" pos:end="67:41">(<argument pos:start="67:11" pos:end="67:23"><expr pos:start="67:11" pos:end="67:23"><operator pos:start="67:11" pos:end="67:11">&amp;</operator><name pos:start="67:12" pos:end="67:23"><name pos:start="67:12" pos:end="67:14">fib</name><operator pos:start="67:15" pos:end="67:15">.</operator><name pos:start="67:16" pos:end="67:23">fmb_addr</name></name></expr></argument>, <argument pos:start="67:26" pos:end="67:40"><expr pos:start="67:26" pos:end="67:40"><name pos:start="67:26" pos:end="67:40"><name pos:start="67:26" pos:end="67:30">pbdev</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:40">fmb_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="75:78"><expr pos:start="71:5" pos:end="75:77"><name pos:start="71:5" pos:end="71:8">data</name> <operator pos:start="71:10" pos:end="71:10">=</operator> <operator pos:start="71:12" pos:end="71:12">(</operator><operator pos:start="71:13" pos:end="71:13">(</operator><name pos:start="71:14" pos:end="71:21">uint32_t</name><operator pos:start="71:22" pos:end="71:22">)</operator><name pos:start="71:23" pos:end="71:32"><name pos:start="71:23" pos:end="71:27">pbdev</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:32">isc</name></name> <operator pos:start="71:34" pos:end="71:35">&lt;&lt;</operator> <literal type="number" pos:start="71:37" pos:end="71:38">28</literal><operator pos:start="71:39" pos:end="71:39">)</operator> <operator pos:start="71:41" pos:end="71:41">|</operator> <operator pos:start="71:43" pos:end="71:43">(</operator><operator pos:start="71:44" pos:end="71:44">(</operator><name pos:start="71:45" pos:end="71:52">uint32_t</name><operator pos:start="71:53" pos:end="71:53">)</operator><name pos:start="71:54" pos:end="71:63"><name pos:start="71:54" pos:end="71:58">pbdev</name><operator pos:start="71:59" pos:end="71:60">-&gt;</operator><name pos:start="71:61" pos:end="71:63">noi</name></name> <operator pos:start="71:65" pos:end="71:66">&lt;&lt;</operator> <literal type="number" pos:start="71:68" pos:end="71:69">16</literal><operator pos:start="71:70" pos:end="71:70">)</operator> <operator pos:start="71:72" pos:end="71:72">|</operator>

           <operator pos:start="73:12" pos:end="73:12">(</operator><operator pos:start="73:13" pos:end="73:13">(</operator><name pos:start="73:14" pos:end="73:21">uint32_t</name><operator pos:start="73:22" pos:end="73:22">)</operator><name pos:start="73:23" pos:end="73:54"><name pos:start="73:23" pos:end="73:27">pbdev</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:35">routes</name><operator pos:start="73:36" pos:end="73:36">.</operator><name pos:start="73:37" pos:end="73:43">adapter</name><operator pos:start="73:44" pos:end="73:44">.</operator><name pos:start="73:45" pos:end="73:54">ind_offset</name></name> <operator pos:start="73:56" pos:end="73:57">&lt;&lt;</operator> <literal type="number" pos:start="73:59" pos:end="73:59">8</literal><operator pos:start="73:60" pos:end="73:60">)</operator> <operator pos:start="73:62" pos:end="73:62">|</operator>

           <operator pos:start="75:12" pos:end="75:12">(</operator><operator pos:start="75:13" pos:end="75:13">(</operator><name pos:start="75:14" pos:end="75:21">uint32_t</name><operator pos:start="75:22" pos:end="75:22">)</operator><name pos:start="75:23" pos:end="75:32"><name pos:start="75:23" pos:end="75:27">pbdev</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:32">sum</name></name> <operator pos:start="75:34" pos:end="75:35">&lt;&lt;</operator> <literal type="number" pos:start="75:37" pos:end="75:37">7</literal><operator pos:start="75:38" pos:end="75:38">)</operator> <operator pos:start="75:40" pos:end="75:40">|</operator> <name pos:start="75:42" pos:end="75:77"><name pos:start="75:42" pos:end="75:46">pbdev</name><operator pos:start="75:47" pos:end="75:48">-&gt;</operator><name pos:start="75:49" pos:end="75:54">routes</name><operator pos:start="75:55" pos:end="75:55">.</operator><name pos:start="75:56" pos:end="75:62">adapter</name><operator pos:start="75:63" pos:end="75:63">.</operator><name pos:start="75:64" pos:end="75:77">summary_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:27"><expr pos:start="77:5" pos:end="77:26"><call pos:start="77:5" pos:end="77:26"><name pos:start="77:5" pos:end="77:9">stl_p</name><argument_list pos:start="77:10" pos:end="77:26">(<argument pos:start="77:11" pos:end="77:19"><expr pos:start="77:11" pos:end="77:19"><operator pos:start="77:11" pos:end="77:11">&amp;</operator><name pos:start="77:12" pos:end="77:19"><name pos:start="77:12" pos:end="77:14">fib</name><operator pos:start="77:15" pos:end="77:15">.</operator><name pos:start="77:16" pos:end="77:19">data</name></name></expr></argument>, <argument pos:start="77:22" pos:end="77:25"><expr pos:start="77:22" pos:end="77:25"><name pos:start="77:22" pos:end="77:25">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="85:5"><if pos:start="81:5" pos:end="85:5">if <condition pos:start="81:8" pos:end="81:35">(<expr pos:start="81:9" pos:end="81:34"><name pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:13">pbdev</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:17">fh</name></name> <operator pos:start="81:19" pos:end="81:19">&amp;</operator> <name pos:start="81:21" pos:end="81:34">FH_MASK_ENABLE</name></expr>)</condition> <block pos:start="81:37" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:23">

        <expr_stmt pos:start="83:9" pos:end="83:23"><expr pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:14"><name pos:start="83:9" pos:end="83:11">fib</name><operator pos:start="83:12" pos:end="83:12">.</operator><name pos:start="83:13" pos:end="83:14">fc</name></name> <operator pos:start="83:16" pos:end="83:17">|=</operator> <literal type="number" pos:start="83:19" pos:end="83:22">0x80</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="93:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:27">(<expr pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:13">pbdev</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:26">error_state</name></name></expr>)</condition> <block pos:start="89:29" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:23">

        <expr_stmt pos:start="91:9" pos:end="91:23"><expr pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:14"><name pos:start="91:9" pos:end="91:11">fib</name><operator pos:start="91:12" pos:end="91:12">.</operator><name pos:start="91:13" pos:end="91:14">fc</name></name> <operator pos:start="91:16" pos:end="91:17">|=</operator> <literal type="number" pos:start="91:19" pos:end="91:22">0x40</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="97:5" pos:end="101:5"><if pos:start="97:5" pos:end="101:5">if <condition pos:start="97:8" pos:end="97:29">(<expr pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:13">pbdev</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:28">lgstg_blocked</name></name></expr>)</condition> <block pos:start="97:31" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:23">

        <expr_stmt pos:start="99:9" pos:end="99:23"><expr pos:start="99:9" pos:end="99:22"><name pos:start="99:9" pos:end="99:14"><name pos:start="99:9" pos:end="99:11">fib</name><operator pos:start="99:12" pos:end="99:12">.</operator><name pos:start="99:13" pos:end="99:14">fc</name></name> <operator pos:start="99:16" pos:end="99:17">|=</operator> <literal type="number" pos:start="99:19" pos:end="99:22">0x20</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="105:5" pos:end="109:5"><if pos:start="105:5" pos:end="109:5">if <condition pos:start="105:8" pos:end="105:22">(<expr pos:start="105:9" pos:end="105:21"><name pos:start="105:9" pos:end="105:21"><name pos:start="105:9" pos:end="105:13">pbdev</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:21">g_iota</name></name></expr>)</condition> <block pos:start="105:24" pos:end="109:5">{<block_content pos:start="107:9" pos:end="107:23">

        <expr_stmt pos:start="107:9" pos:end="107:23"><expr pos:start="107:9" pos:end="107:22"><name pos:start="107:9" pos:end="107:14"><name pos:start="107:9" pos:end="107:11">fib</name><operator pos:start="107:12" pos:end="107:12">.</operator><name pos:start="107:13" pos:end="107:14">fc</name></name> <operator pos:start="107:16" pos:end="107:17">|=</operator> <literal type="number" pos:start="107:19" pos:end="107:22">0x10</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="117:5"><if pos:start="113:5" pos:end="117:5">if <condition pos:start="113:8" pos:end="113:77">(<expr pos:start="113:9" pos:end="113:76"><call pos:start="113:9" pos:end="113:76"><name pos:start="113:9" pos:end="113:31">s390_cpu_virt_mem_write</name><argument_list pos:start="113:32" pos:end="113:76">(<argument pos:start="113:33" pos:end="113:35"><expr pos:start="113:33" pos:end="113:35"><name pos:start="113:33" pos:end="113:35">cpu</name></expr></argument>, <argument pos:start="113:38" pos:end="113:41"><expr pos:start="113:38" pos:end="113:41"><name pos:start="113:38" pos:end="113:41">fiba</name></expr></argument>, <argument pos:start="113:44" pos:end="113:45"><expr pos:start="113:44" pos:end="113:45"><name pos:start="113:44" pos:end="113:45">ar</name></expr></argument>, <argument pos:start="113:48" pos:end="113:62"><expr pos:start="113:48" pos:end="113:62"><operator pos:start="113:48" pos:end="113:48">(</operator><name pos:start="113:49" pos:end="113:55">uint8_t</name> <operator pos:start="113:57" pos:end="113:57">*</operator><operator pos:start="113:58" pos:end="113:58">)</operator><operator pos:start="113:59" pos:end="113:59">&amp;</operator><name pos:start="113:60" pos:end="113:62">fib</name></expr></argument>, <argument pos:start="113:65" pos:end="113:75"><expr pos:start="113:65" pos:end="113:75"><sizeof pos:start="113:65" pos:end="113:75">sizeof<argument_list pos:start="113:71" pos:end="113:75">(<argument pos:start="113:72" pos:end="113:74"><expr pos:start="113:72" pos:end="113:74"><name pos:start="113:72" pos:end="113:74">fib</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:79" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:17">

        <return pos:start="115:9" pos:end="115:17">return <expr pos:start="115:16" pos:end="115:16"><literal type="number" pos:start="115:16" pos:end="115:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:19"><expr pos:start="121:5" pos:end="121:18"><call pos:start="121:5" pos:end="121:18"><name pos:start="121:5" pos:end="121:9">setcc</name><argument_list pos:start="121:10" pos:end="121:18">(<argument pos:start="121:11" pos:end="121:13"><expr pos:start="121:11" pos:end="121:13"><name pos:start="121:11" pos:end="121:13">cpu</name></expr></argument>, <argument pos:start="121:16" pos:end="121:17"><expr pos:start="121:16" pos:end="121:17"><name pos:start="121:16" pos:end="121:17">cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="123:5" pos:end="123:13">return <expr pos:start="123:12" pos:end="123:12"><literal type="number" pos:start="123:12" pos:end="123:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
