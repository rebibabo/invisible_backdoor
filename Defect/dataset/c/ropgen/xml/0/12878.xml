<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12878.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">cpu_gdb_read_register</name><parameter_list pos:start="1:33" pos:end="1:72">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:41">CPUState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">env</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:64"><decl pos:start="1:49" pos:end="1:64"><type pos:start="1:49" pos:end="1:64"><name pos:start="1:49" pos:end="1:55">uint8_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:64">mem_buf</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:71"><decl pos:start="1:67" pos:end="1:71"><type pos:start="1:67" pos:end="1:71"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:71">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:13">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:15">(<expr pos:start="5:9" pos:end="5:14"><name pos:start="5:9" pos:end="5:9">n</name> <operator pos:start="5:11" pos:end="5:11">&lt;</operator> <literal type="number" pos:start="5:13" pos:end="5:14">32</literal></expr>)</condition> <block pos:start="5:17" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:40">

        <expr_stmt pos:start="7:9" pos:end="7:40"><expr pos:start="7:9" pos:end="7:39"><call pos:start="7:9" pos:end="7:39"><name pos:start="7:9" pos:end="7:16">GET_REGL</name><argument_list pos:start="7:17" pos:end="7:39">(<argument pos:start="7:18" pos:end="7:38"><expr pos:start="7:18" pos:end="7:38"><name pos:start="7:18" pos:end="7:38"><name pos:start="7:18" pos:end="7:20">env</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:31">active_tc</name><operator pos:start="7:32" pos:end="7:32">.</operator><name pos:start="7:33" pos:end="7:35">gpr</name><index pos:start="7:36" pos:end="7:38">[<expr pos:start="7:37" pos:end="7:37"><name pos:start="7:37" pos:end="7:37">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="11:5" pos:end="33:5"><if pos:start="11:5" pos:end="33:5">if <condition pos:start="11:8" pos:end="11:43">(<expr pos:start="11:9" pos:end="11:42"><name pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:11">env</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:24">CP0_Config1</name></name> <operator pos:start="11:26" pos:end="11:26">&amp;</operator> <operator pos:start="11:28" pos:end="11:28">(</operator><literal type="number" pos:start="11:29" pos:end="11:29">1</literal> <operator pos:start="11:31" pos:end="11:32">&lt;&lt;</operator> <name pos:start="11:34" pos:end="11:41">CP0C1_FP</name><operator pos:start="11:42" pos:end="11:42">)</operator></expr>)</condition> <block pos:start="11:45" pos:end="33:5">{<block_content pos:start="13:9" pos:end="31:9">

        <if_stmt pos:start="13:9" pos:end="23:9"><if pos:start="13:9" pos:end="23:9">if <condition pos:start="13:12" pos:end="13:30">(<expr pos:start="13:13" pos:end="13:29"><name pos:start="13:13" pos:end="13:13">n</name> <operator pos:start="13:15" pos:end="13:16">&gt;=</operator> <literal type="number" pos:start="13:18" pos:end="13:19">38</literal> <operator pos:start="13:21" pos:end="13:22">&amp;&amp;</operator> <name pos:start="13:24" pos:end="13:24">n</name> <operator pos:start="13:26" pos:end="13:26">&lt;</operator> <literal type="number" pos:start="13:28" pos:end="13:29">70</literal></expr>)</condition> <block pos:start="13:32" pos:end="23:9">{<block_content pos:start="15:13" pos:end="21:71">

            <if_stmt pos:start="15:13" pos:end="21:71"><if pos:start="15:13" pos:end="17:56">if <condition pos:start="15:16" pos:end="15:50">(<expr pos:start="15:17" pos:end="15:49"><name pos:start="15:17" pos:end="15:31"><name pos:start="15:17" pos:end="15:19">env</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:31">CP0_Status</name></name> <operator pos:start="15:33" pos:end="15:33">&amp;</operator> <operator pos:start="15:35" pos:end="15:35">(</operator><literal type="number" pos:start="15:36" pos:end="15:36">1</literal> <operator pos:start="15:38" pos:end="15:39">&lt;&lt;</operator> <name pos:start="15:41" pos:end="15:48">CP0St_FR</name><operator pos:start="15:49" pos:end="15:49">)</operator></expr>)</condition><block type="pseudo" pos:start="17:17" pos:end="17:56"><block_content pos:start="17:17" pos:end="17:56">

		<expr_stmt pos:start="17:17" pos:end="17:56"><expr pos:start="17:17" pos:end="17:55"><call pos:start="17:17" pos:end="17:55"><name pos:start="17:17" pos:end="17:24">GET_REGL</name><argument_list pos:start="17:25" pos:end="17:55">(<argument pos:start="17:26" pos:end="17:54"><expr pos:start="17:26" pos:end="17:54"><name pos:start="17:26" pos:end="17:52"><name pos:start="17:26" pos:end="17:28">env</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:40">active_fpu</name><operator pos:start="17:41" pos:end="17:41">.</operator><name pos:start="17:42" pos:end="17:44">fpr</name><index pos:start="17:45" pos:end="17:52">[<expr pos:start="17:46" pos:end="17:51"><name pos:start="17:46" pos:end="17:46">n</name> <operator pos:start="17:48" pos:end="17:48">-</operator> <literal type="number" pos:start="17:50" pos:end="17:51">38</literal></expr>]</index></name><operator pos:start="17:53" pos:end="17:53">.</operator><name pos:start="17:54" pos:end="17:54">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="19:13" pos:end="21:71">else<block type="pseudo" pos:start="21:17" pos:end="21:71"><block_content pos:start="21:17" pos:end="21:71">

		<expr_stmt pos:start="21:17" pos:end="21:71"><expr pos:start="21:17" pos:end="21:70"><call pos:start="21:17" pos:end="21:70"><name pos:start="21:17" pos:end="21:24">GET_REGL</name><argument_list pos:start="21:25" pos:end="21:70">(<argument pos:start="21:26" pos:end="21:69"><expr pos:start="21:26" pos:end="21:69"><name pos:start="21:26" pos:end="21:52"><name pos:start="21:26" pos:end="21:28">env</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:40">active_fpu</name><operator pos:start="21:41" pos:end="21:41">.</operator><name pos:start="21:42" pos:end="21:44">fpr</name><index pos:start="21:45" pos:end="21:52">[<expr pos:start="21:46" pos:end="21:51"><name pos:start="21:46" pos:end="21:46">n</name> <operator pos:start="21:48" pos:end="21:48">-</operator> <literal type="number" pos:start="21:50" pos:end="21:51">38</literal></expr>]</index></name><operator pos:start="21:53" pos:end="21:53">.</operator><name pos:start="21:54" pos:end="21:69"><name pos:start="21:54" pos:end="21:54">w</name><index pos:start="21:55" pos:end="21:69">[<expr pos:start="21:56" pos:end="21:68"><name pos:start="21:56" pos:end="21:68">FP_ENDIAN_IDX</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="25:9" pos:end="31:9">switch <condition pos:start="25:16" pos:end="25:18">(<expr pos:start="25:17" pos:end="25:17"><name pos:start="25:17" pos:end="25:17">n</name></expr>)</condition> <block pos:start="25:20" pos:end="31:9">{<block_content pos:start="27:9" pos:end="29:57">

        <case pos:start="27:9" pos:end="27:16">case <expr pos:start="27:14" pos:end="27:15"><literal type="number" pos:start="27:14" pos:end="27:15">70</literal></expr>:</case> <expr_stmt pos:start="27:18" pos:end="27:58"><expr pos:start="27:18" pos:end="27:57"><call pos:start="27:18" pos:end="27:57"><name pos:start="27:18" pos:end="27:25">GET_REGL</name><argument_list pos:start="27:26" pos:end="27:57">(<argument pos:start="27:27" pos:end="27:56"><expr pos:start="27:27" pos:end="27:56"><operator pos:start="27:27" pos:end="27:27">(</operator><name pos:start="27:28" pos:end="27:34">int32_t</name><operator pos:start="27:35" pos:end="27:35">)</operator><name pos:start="27:36" pos:end="27:56"><name pos:start="27:36" pos:end="27:38">env</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:50">active_fpu</name><operator pos:start="27:51" pos:end="27:51">.</operator><name pos:start="27:52" pos:end="27:56">fcr31</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <case pos:start="29:9" pos:end="29:16">case <expr pos:start="29:14" pos:end="29:15"><literal type="number" pos:start="29:14" pos:end="29:15">71</literal></expr>:</case> <expr_stmt pos:start="29:18" pos:end="29:57"><expr pos:start="29:18" pos:end="29:56"><call pos:start="29:18" pos:end="29:56"><name pos:start="29:18" pos:end="29:25">GET_REGL</name><argument_list pos:start="29:26" pos:end="29:56">(<argument pos:start="29:27" pos:end="29:55"><expr pos:start="29:27" pos:end="29:55"><operator pos:start="29:27" pos:end="29:27">(</operator><name pos:start="29:28" pos:end="29:34">int32_t</name><operator pos:start="29:35" pos:end="29:35">)</operator><name pos:start="29:36" pos:end="29:55"><name pos:start="29:36" pos:end="29:38">env</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:50">active_fpu</name><operator pos:start="29:51" pos:end="29:51">.</operator><name pos:start="29:52" pos:end="29:55">fcr0</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="35:5" pos:end="53:5">switch <condition pos:start="35:12" pos:end="35:14">(<expr pos:start="35:13" pos:end="35:13"><name pos:start="35:13" pos:end="35:13">n</name></expr>)</condition> <block pos:start="35:16" pos:end="53:5">{<block_content pos:start="37:5" pos:end="51:46">

    <case pos:start="37:5" pos:end="37:12">case <expr pos:start="37:10" pos:end="37:11"><literal type="number" pos:start="37:10" pos:end="37:11">32</literal></expr>:</case> <expr_stmt pos:start="37:14" pos:end="37:48"><expr pos:start="37:14" pos:end="37:47"><call pos:start="37:14" pos:end="37:47"><name pos:start="37:14" pos:end="37:21">GET_REGL</name><argument_list pos:start="37:22" pos:end="37:47">(<argument pos:start="37:23" pos:end="37:46"><expr pos:start="37:23" pos:end="37:46"><operator pos:start="37:23" pos:end="37:23">(</operator><name pos:start="37:24" pos:end="37:30">int32_t</name><operator pos:start="37:31" pos:end="37:31">)</operator><name pos:start="37:32" pos:end="37:46"><name pos:start="37:32" pos:end="37:34">env</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:46">CP0_Status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <case pos:start="39:5" pos:end="39:12">case <expr pos:start="39:10" pos:end="39:11"><literal type="number" pos:start="39:10" pos:end="39:11">33</literal></expr>:</case> <expr_stmt pos:start="39:14" pos:end="39:44"><expr pos:start="39:14" pos:end="39:43"><call pos:start="39:14" pos:end="39:43"><name pos:start="39:14" pos:end="39:21">GET_REGL</name><argument_list pos:start="39:22" pos:end="39:43">(<argument pos:start="39:23" pos:end="39:42"><expr pos:start="39:23" pos:end="39:42"><name pos:start="39:23" pos:end="39:42"><name pos:start="39:23" pos:end="39:25">env</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:36">active_tc</name><operator pos:start="39:37" pos:end="39:37">.</operator><name pos:start="39:38" pos:end="39:39">LO</name><index pos:start="39:40" pos:end="39:42">[<expr pos:start="39:41" pos:end="39:41"><literal type="number" pos:start="39:41" pos:end="39:41">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <case pos:start="41:5" pos:end="41:12">case <expr pos:start="41:10" pos:end="41:11"><literal type="number" pos:start="41:10" pos:end="41:11">34</literal></expr>:</case> <expr_stmt pos:start="41:14" pos:end="41:44"><expr pos:start="41:14" pos:end="41:43"><call pos:start="41:14" pos:end="41:43"><name pos:start="41:14" pos:end="41:21">GET_REGL</name><argument_list pos:start="41:22" pos:end="41:43">(<argument pos:start="41:23" pos:end="41:42"><expr pos:start="41:23" pos:end="41:42"><name pos:start="41:23" pos:end="41:42"><name pos:start="41:23" pos:end="41:25">env</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:36">active_tc</name><operator pos:start="41:37" pos:end="41:37">.</operator><name pos:start="41:38" pos:end="41:39">HI</name><index pos:start="41:40" pos:end="41:42">[<expr pos:start="41:41" pos:end="41:41"><literal type="number" pos:start="41:41" pos:end="41:41">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <case pos:start="43:5" pos:end="43:12">case <expr pos:start="43:10" pos:end="43:11"><literal type="number" pos:start="43:10" pos:end="43:11">35</literal></expr>:</case> <expr_stmt pos:start="43:14" pos:end="43:41"><expr pos:start="43:14" pos:end="43:40"><call pos:start="43:14" pos:end="43:40"><name pos:start="43:14" pos:end="43:21">GET_REGL</name><argument_list pos:start="43:22" pos:end="43:40">(<argument pos:start="43:23" pos:end="43:39"><expr pos:start="43:23" pos:end="43:39"><name pos:start="43:23" pos:end="43:39"><name pos:start="43:23" pos:end="43:25">env</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:39">CP0_BadVAddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <case pos:start="45:5" pos:end="45:12">case <expr pos:start="45:10" pos:end="45:11"><literal type="number" pos:start="45:10" pos:end="45:11">36</literal></expr>:</case> <expr_stmt pos:start="45:14" pos:end="45:47"><expr pos:start="45:14" pos:end="45:46"><call pos:start="45:14" pos:end="45:46"><name pos:start="45:14" pos:end="45:21">GET_REGL</name><argument_list pos:start="45:22" pos:end="45:46">(<argument pos:start="45:23" pos:end="45:45"><expr pos:start="45:23" pos:end="45:45"><operator pos:start="45:23" pos:end="45:23">(</operator><name pos:start="45:24" pos:end="45:30">int32_t</name><operator pos:start="45:31" pos:end="45:31">)</operator><name pos:start="45:32" pos:end="45:45"><name pos:start="45:32" pos:end="45:34">env</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:45">CP0_Cause</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <case pos:start="47:5" pos:end="47:12">case <expr pos:start="47:10" pos:end="47:11"><literal type="number" pos:start="47:10" pos:end="47:11">37</literal></expr>:</case> <expr_stmt pos:start="47:14" pos:end="47:41"><expr pos:start="47:14" pos:end="47:40"><call pos:start="47:14" pos:end="47:40"><name pos:start="47:14" pos:end="47:21">GET_REGL</name><argument_list pos:start="47:22" pos:end="47:40">(<argument pos:start="47:23" pos:end="47:39"><expr pos:start="47:23" pos:end="47:39"><name pos:start="47:23" pos:end="47:39"><name pos:start="47:23" pos:end="47:25">env</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:36">active_tc</name><operator pos:start="47:37" pos:end="47:37">.</operator><name pos:start="47:38" pos:end="47:39">PC</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <case pos:start="49:5" pos:end="49:12">case <expr pos:start="49:10" pos:end="49:11"><literal type="number" pos:start="49:10" pos:end="49:11">72</literal></expr>:</case> <expr_stmt pos:start="49:14" pos:end="49:25"><expr pos:start="49:14" pos:end="49:24"><call pos:start="49:14" pos:end="49:24"><name pos:start="49:14" pos:end="49:21">GET_REGL</name><argument_list pos:start="49:22" pos:end="49:24">(<argument pos:start="49:23" pos:end="49:23"><expr pos:start="49:23" pos:end="49:23"><literal type="number" pos:start="49:23" pos:end="49:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="49:27" pos:end="49:34">/* fp */</comment>

    <case pos:start="51:5" pos:end="51:12">case <expr pos:start="51:10" pos:end="51:11"><literal type="number" pos:start="51:10" pos:end="51:11">89</literal></expr>:</case> <expr_stmt pos:start="51:14" pos:end="51:46"><expr pos:start="51:14" pos:end="51:45"><call pos:start="51:14" pos:end="51:45"><name pos:start="51:14" pos:end="51:21">GET_REGL</name><argument_list pos:start="51:22" pos:end="51:45">(<argument pos:start="51:23" pos:end="51:44"><expr pos:start="51:23" pos:end="51:44"><operator pos:start="51:23" pos:end="51:23">(</operator><name pos:start="51:24" pos:end="51:30">int32_t</name><operator pos:start="51:31" pos:end="51:31">)</operator><name pos:start="51:32" pos:end="51:44"><name pos:start="51:32" pos:end="51:34">env</name><operator pos:start="51:35" pos:end="51:36">-&gt;</operator><name pos:start="51:37" pos:end="51:44">CP0_PRid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="55:27">(<expr pos:start="55:9" pos:end="55:26"><name pos:start="55:9" pos:end="55:9">n</name> <operator pos:start="55:11" pos:end="55:12">&gt;=</operator> <literal type="number" pos:start="55:14" pos:end="55:15">73</literal> <operator pos:start="55:17" pos:end="55:18">&amp;&amp;</operator> <name pos:start="55:20" pos:end="55:20">n</name> <operator pos:start="55:22" pos:end="55:23">&lt;=</operator> <literal type="number" pos:start="55:25" pos:end="55:26">88</literal></expr>)</condition> <block pos:start="55:29" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:20">

	<comment type="block" pos:start="57:9" pos:end="57:32">/* 16 embedded regs.  */</comment>

	<expr_stmt pos:start="59:9" pos:end="59:20"><expr pos:start="59:9" pos:end="59:19"><call pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:16">GET_REGL</name><argument_list pos:start="59:17" pos:end="59:19">(<argument pos:start="59:18" pos:end="59:18"><expr pos:start="59:18" pos:end="59:18"><literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
