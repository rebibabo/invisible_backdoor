<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24086.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">usb_host_update_interfaces</name><parameter_list pos:start="1:38" pos:end="1:76">(<parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:56"><name pos:start="1:39" pos:end="1:51">USBHostDevice</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">dev</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:75"><decl pos:start="1:59" pos:end="1:75"><type pos:start="1:59" pos:end="1:75"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:75">configuration</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="153:1">{<block_content pos:start="5:5" pos:end="151:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:21">dev_descr_len</name></decl>, <decl pos:start="5:24" pos:end="5:39"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:24" pos:end="5:39">config_descr_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">interface</name></decl>, <decl pos:start="7:20" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:32">nb_interfaces</name></decl>, <decl pos:start="7:35" pos:end="7:51"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:35" pos:end="7:51">nb_configurations</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:14">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if <condition pos:start="13:8" pos:end="13:27">(<expr pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:21">configuration</name> <operator pos:start="13:23" pos:end="13:24">==</operator> <literal type="number" pos:start="13:26" pos:end="13:26">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17"> <comment type="block" pos:start="13:29" pos:end="13:56">/* address state - ignore */</comment>

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:10"><expr pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:5">i</name> <operator pos:start="19:7" pos:end="19:7">=</operator> <literal type="number" pos:start="19:9" pos:end="19:9">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:17">dev_descr_len</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:33"><name pos:start="21:21" pos:end="21:23">dev</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:30">descr</name><index pos:start="21:31" pos:end="21:33">[<expr pos:start="21:32" pos:end="21:32"><literal type="number" pos:start="21:32" pos:end="21:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:39">(<expr pos:start="23:9" pos:end="23:38"><name pos:start="23:9" pos:end="23:21">dev_descr_len</name> <operator pos:start="23:23" pos:end="23:23">&gt;</operator> <name pos:start="23:25" pos:end="23:38"><name pos:start="23:25" pos:end="23:27">dev</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:38">descr_len</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <goto pos:start="25:9" pos:end="25:18">goto <name pos:start="25:14" pos:end="25:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:39"><expr pos:start="27:5" pos:end="27:38"><name pos:start="27:5" pos:end="27:21">nb_configurations</name> <operator pos:start="27:23" pos:end="27:23">=</operator> <name pos:start="27:25" pos:end="27:38"><name pos:start="27:25" pos:end="27:27">dev</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:34">descr</name><index pos:start="27:35" pos:end="27:38">[<expr pos:start="27:36" pos:end="27:37"><literal type="number" pos:start="27:36" pos:end="27:37">17</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:5">i</name> <operator pos:start="31:7" pos:end="31:8">+=</operator> <name pos:start="31:10" pos:end="31:22">dev_descr_len</name></expr>;</expr_stmt>

    <while pos:start="33:5" pos:end="63:5">while <condition pos:start="33:11" pos:end="33:30">(<expr pos:start="33:12" pos:end="33:29"><name pos:start="33:12" pos:end="33:12">i</name> <operator pos:start="33:14" pos:end="33:14">&lt;</operator> <name pos:start="33:16" pos:end="33:29"><name pos:start="33:16" pos:end="33:18">dev</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:29">descr_len</name></name></expr>)</condition> <block pos:start="33:32" pos:end="63:5">{<block_content pos:start="37:9" pos:end="61:30">

<cpp:ifdef pos:start="35:1" pos:end="35:12">#<cpp:directive pos:start="35:2" pos:end="35:6">ifdef</cpp:directive> <name pos:start="35:8" pos:end="35:12">DEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="37:9" pos:end="42:0"><expr pos:start="37:9" pos:end="39:46"><call pos:start="37:9" pos:end="39:46"><name pos:start="37:9" pos:end="37:14">printf</name><argument_list pos:start="37:15" pos:end="39:46">(<argument pos:start="37:16" pos:end="37:57"><expr pos:start="37:16" pos:end="37:57"><literal type="string" pos:start="37:16" pos:end="37:57">"i is %d, descr_len is %d, dl %d, dt %d\n"</literal></expr></argument>, <argument pos:start="37:60" pos:end="37:60"><expr pos:start="37:60" pos:end="37:60"><name pos:start="37:60" pos:end="37:60">i</name></expr></argument>, <argument pos:start="37:63" pos:end="37:76"><expr pos:start="37:63" pos:end="37:76"><name pos:start="37:63" pos:end="37:76"><name pos:start="37:63" pos:end="37:65">dev</name><operator pos:start="37:66" pos:end="37:67">-&gt;</operator><name pos:start="37:68" pos:end="37:76">descr_len</name></name></expr></argument>,

               <argument pos:start="39:16" pos:end="39:28"><expr pos:start="39:16" pos:end="39:28"><name pos:start="39:16" pos:end="39:28"><name pos:start="39:16" pos:end="39:18">dev</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:25">descr</name><index pos:start="39:26" pos:end="39:28">[<expr pos:start="39:27" pos:end="39:27"><name pos:start="39:27" pos:end="39:27">i</name></expr>]</index></name></expr></argument>, <argument pos:start="39:31" pos:end="39:45"><expr pos:start="39:31" pos:end="39:45"><name pos:start="39:31" pos:end="39:45"><name pos:start="39:31" pos:end="39:33">dev</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:40">descr</name><index pos:start="39:41" pos:end="39:45">[<expr pos:start="39:42" pos:end="39:44"><name pos:start="39:42" pos:end="39:42">i</name><operator pos:start="39:43" pos:end="39:43">+</operator><literal type="number" pos:start="39:44" pos:end="39:44">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="41:1" pos:end="41:6">#<cpp:directive pos:start="41:2" pos:end="41:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:45">(<expr pos:start="43:13" pos:end="43:44"><name pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:15">dev</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:22">descr</name><index pos:start="43:23" pos:end="43:27">[<expr pos:start="43:24" pos:end="43:26"><name pos:start="43:24" pos:end="43:24">i</name><operator pos:start="43:25" pos:end="43:25">+</operator><literal type="number" pos:start="43:26" pos:end="43:26">1</literal></expr>]</index></name> <operator pos:start="43:29" pos:end="43:30">!=</operator> <name pos:start="43:32" pos:end="43:44">USB_DT_CONFIG</name></expr>)</condition> <block pos:start="43:47" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:21">

            <expr_stmt pos:start="45:13" pos:end="45:31"><expr pos:start="45:13" pos:end="45:30"><name pos:start="45:13" pos:end="45:13">i</name> <operator pos:start="45:15" pos:end="45:16">+=</operator> <name pos:start="45:18" pos:end="45:30"><name pos:start="45:18" pos:end="45:20">dev</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:27">descr</name><index pos:start="45:28" pos:end="45:30">[<expr pos:start="45:29" pos:end="45:29"><name pos:start="45:29" pos:end="45:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <continue pos:start="47:13" pos:end="47:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:41"><expr pos:start="51:9" pos:end="51:40"><name pos:start="51:9" pos:end="51:24">config_descr_len</name> <operator pos:start="51:26" pos:end="51:26">=</operator> <name pos:start="51:28" pos:end="51:40"><name pos:start="51:28" pos:end="51:30">dev</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:37">descr</name><index pos:start="51:38" pos:end="51:40">[<expr pos:start="51:39" pos:end="51:39"><name pos:start="51:39" pos:end="51:39">i</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="55:9" pos:end="57:18"><if pos:start="55:9" pos:end="57:18">if <condition pos:start="55:12" pos:end="55:47">(<expr pos:start="55:13" pos:end="55:46"><name pos:start="55:13" pos:end="55:25">configuration</name> <operator pos:start="55:27" pos:end="55:28">==</operator> <name pos:start="55:30" pos:end="55:46"><name pos:start="55:30" pos:end="55:32">dev</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:39">descr</name><index pos:start="55:40" pos:end="55:46">[<expr pos:start="55:41" pos:end="55:45"><name pos:start="55:41" pos:end="55:41">i</name> <operator pos:start="55:43" pos:end="55:43">+</operator> <literal type="number" pos:start="55:45" pos:end="55:45">5</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:18"><block_content pos:start="57:13" pos:end="57:18">

            <break pos:start="57:13" pos:end="57:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:30"><expr pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:9">i</name> <operator pos:start="61:11" pos:end="61:12">+=</operator> <name pos:start="61:14" pos:end="61:29">config_descr_len</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:28">(<expr pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:9">i</name> <operator pos:start="67:11" pos:end="67:12">&gt;=</operator> <name pos:start="67:14" pos:end="67:27"><name pos:start="67:14" pos:end="67:16">dev</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:27">descr_len</name></name></expr>)</condition> <block pos:start="67:30" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:18">

        <expr_stmt pos:start="69:9" pos:end="69:75"><expr pos:start="69:9" pos:end="69:74"><call pos:start="69:9" pos:end="69:74"><name pos:start="69:9" pos:end="69:14">printf</name><argument_list pos:start="69:15" pos:end="69:74">(<argument pos:start="69:16" pos:end="69:73"><expr pos:start="69:16" pos:end="69:73"><literal type="string" pos:start="69:16" pos:end="69:73">"usb_host: error - device has no matching configuration\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="71:9" pos:end="71:18">goto <name pos:start="71:14" pos:end="71:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="80:0"><expr pos:start="75:5" pos:end="75:37"><name pos:start="75:5" pos:end="75:17">nb_interfaces</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <name pos:start="75:21" pos:end="75:37"><name pos:start="75:21" pos:end="75:23">dev</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:30">descr</name><index pos:start="75:31" pos:end="75:37">[<expr pos:start="75:32" pos:end="75:36"><name pos:start="75:32" pos:end="75:32">i</name> <operator pos:start="75:34" pos:end="75:34">+</operator> <literal type="number" pos:start="75:36" pos:end="75:36">4</literal></expr>]</index></name></expr>;</expr_stmt>



<cpp:ifdef pos:start="79:1" pos:end="79:26">#<cpp:directive pos:start="79:2" pos:end="79:6">ifdef</cpp:directive> <name pos:start="79:8" pos:end="79:26">USBDEVFS_DISCONNECT</name></cpp:ifdef>

    <comment type="block" pos:start="81:5" pos:end="81:47">/* earlier Linux 2.4 do not support that */</comment>

    <block pos:start="83:5" pos:end="108:0">{<block_content pos:start="85:9" pos:end="103:9">

        <decl_stmt pos:start="85:9" pos:end="85:35"><decl pos:start="85:9" pos:end="85:34"><type pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:14">struct</name> <name pos:start="85:16" pos:end="85:29">usbdevfs_ioctl</name></name></type> <name pos:start="85:31" pos:end="85:34">ctrl</name></decl>;</decl_stmt>

        <for pos:start="87:9" pos:end="103:9">for <control pos:start="87:13" pos:end="87:67">(<init pos:start="87:14" pos:end="87:27"><expr pos:start="87:14" pos:end="87:26"><name pos:start="87:14" pos:end="87:22">interface</name> <operator pos:start="87:24" pos:end="87:24">=</operator> <literal type="number" pos:start="87:26" pos:end="87:26">0</literal></expr>;</init> <condition pos:start="87:29" pos:end="87:54"><expr pos:start="87:29" pos:end="87:53"><name pos:start="87:29" pos:end="87:37">interface</name> <operator pos:start="87:39" pos:end="87:39">&lt;</operator> <name pos:start="87:41" pos:end="87:53">nb_interfaces</name></expr>;</condition> <incr pos:start="87:56" pos:end="87:66"><expr pos:start="87:56" pos:end="87:66"><name pos:start="87:56" pos:end="87:64">interface</name><operator pos:start="87:65" pos:end="87:66">++</operator></expr></incr>)</control> <block pos:start="87:69" pos:end="103:9">{<block_content pos:start="89:13" pos:end="101:13">

            <expr_stmt pos:start="89:13" pos:end="89:50"><expr pos:start="89:13" pos:end="89:49"><name pos:start="89:13" pos:end="89:27"><name pos:start="89:13" pos:end="89:16">ctrl</name><operator pos:start="89:17" pos:end="89:17">.</operator><name pos:start="89:18" pos:end="89:27">ioctl_code</name></name> <operator pos:start="89:29" pos:end="89:29">=</operator> <name pos:start="89:31" pos:end="89:49">USBDEVFS_DISCONNECT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:34"><expr pos:start="91:13" pos:end="91:33"><name pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:16">ctrl</name><operator pos:start="91:17" pos:end="91:17">.</operator><name pos:start="91:18" pos:end="91:21">ifno</name></name> <operator pos:start="91:23" pos:end="91:23">=</operator> <name pos:start="91:25" pos:end="91:33">interface</name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:56"><expr pos:start="93:13" pos:end="93:55"><name pos:start="93:13" pos:end="93:15">ret</name> <operator pos:start="93:17" pos:end="93:17">=</operator> <call pos:start="93:19" pos:end="93:55"><name pos:start="93:19" pos:end="93:23">ioctl</name><argument_list pos:start="93:24" pos:end="93:55">(<argument pos:start="93:25" pos:end="93:31"><expr pos:start="93:25" pos:end="93:31"><name pos:start="93:25" pos:end="93:31"><name pos:start="93:25" pos:end="93:27">dev</name><operator pos:start="93:28" pos:end="93:29">-&gt;</operator><name pos:start="93:30" pos:end="93:31">fd</name></name></expr></argument>, <argument pos:start="93:34" pos:end="93:47"><expr pos:start="93:34" pos:end="93:47"><name pos:start="93:34" pos:end="93:47">USBDEVFS_IOCTL</name></expr></argument>, <argument pos:start="93:50" pos:end="93:54"><expr pos:start="93:50" pos:end="93:54"><operator pos:start="93:50" pos:end="93:50">&amp;</operator><name pos:start="93:51" pos:end="93:54">ctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="101:13"><if pos:start="95:13" pos:end="101:13">if <condition pos:start="95:16" pos:end="95:44">(<expr pos:start="95:17" pos:end="95:43"><name pos:start="95:17" pos:end="95:19">ret</name> <operator pos:start="95:21" pos:end="95:21">&lt;</operator> <literal type="number" pos:start="95:23" pos:end="95:23">0</literal> <operator pos:start="95:25" pos:end="95:26">&amp;&amp;</operator> <name pos:start="95:28" pos:end="95:32">errno</name> <operator pos:start="95:34" pos:end="95:35">!=</operator> <name pos:start="95:37" pos:end="95:43">ENODATA</name></expr>)</condition> <block pos:start="95:46" pos:end="101:13">{<block_content pos:start="97:17" pos:end="99:26">

                <expr_stmt pos:start="97:17" pos:end="97:46"><expr pos:start="97:17" pos:end="97:45"><call pos:start="97:17" pos:end="97:45"><name pos:start="97:17" pos:end="97:22">perror</name><argument_list pos:start="97:23" pos:end="97:45">(<argument pos:start="97:24" pos:end="97:44"><expr pos:start="97:24" pos:end="97:44"><literal type="string" pos:start="97:24" pos:end="97:44">"USBDEVFS_DISCONNECT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="99:17" pos:end="99:26">goto <name pos:start="99:22" pos:end="99:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block>

<cpp:endif pos:start="107:1" pos:end="107:6">#<cpp:directive pos:start="107:2" pos:end="107:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="111:5" pos:end="111:51">/* XXX: only grab if all interfaces are free */</comment>

    <for pos:start="113:5" pos:end="142:0">for <control pos:start="113:9" pos:end="113:63">(<init pos:start="113:10" pos:end="113:23"><expr pos:start="113:10" pos:end="113:22"><name pos:start="113:10" pos:end="113:18">interface</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <literal type="number" pos:start="113:22" pos:end="113:22">0</literal></expr>;</init> <condition pos:start="113:25" pos:end="113:50"><expr pos:start="113:25" pos:end="113:49"><name pos:start="113:25" pos:end="113:33">interface</name> <operator pos:start="113:35" pos:end="113:35">&lt;</operator> <name pos:start="113:37" pos:end="113:49">nb_interfaces</name></expr>;</condition> <incr pos:start="113:52" pos:end="113:62"><expr pos:start="113:52" pos:end="113:62"><name pos:start="113:52" pos:end="113:60">interface</name><operator pos:start="113:61" pos:end="113:62">++</operator></expr></incr>)</control> <block pos:start="113:65" pos:end="142:0">{<block_content pos:start="115:9" pos:end="135:9">

        <expr_stmt pos:start="115:9" pos:end="115:66"><expr pos:start="115:9" pos:end="115:65"><name pos:start="115:9" pos:end="115:11">ret</name> <operator pos:start="115:13" pos:end="115:13">=</operator> <call pos:start="115:15" pos:end="115:65"><name pos:start="115:15" pos:end="115:19">ioctl</name><argument_list pos:start="115:20" pos:end="115:65">(<argument pos:start="115:21" pos:end="115:27"><expr pos:start="115:21" pos:end="115:27"><name pos:start="115:21" pos:end="115:27"><name pos:start="115:21" pos:end="115:23">dev</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:27">fd</name></name></expr></argument>, <argument pos:start="115:30" pos:end="115:52"><expr pos:start="115:30" pos:end="115:52"><name pos:start="115:30" pos:end="115:52">USBDEVFS_CLAIMINTERFACE</name></expr></argument>, <argument pos:start="115:55" pos:end="115:64"><expr pos:start="115:55" pos:end="115:64"><operator pos:start="115:55" pos:end="115:55">&amp;</operator><name pos:start="115:56" pos:end="115:64">interface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="135:9"><if pos:start="117:9" pos:end="135:9">if <condition pos:start="117:12" pos:end="117:20">(<expr pos:start="117:13" pos:end="117:19"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:17">&lt;</operator> <literal type="number" pos:start="117:19" pos:end="117:19">0</literal></expr>)</condition> <block pos:start="117:22" pos:end="135:9">{<block_content pos:start="119:13" pos:end="133:21">

            <if_stmt pos:start="119:13" pos:end="129:13"><if pos:start="119:13" pos:end="125:13">if <condition pos:start="119:16" pos:end="119:31">(<expr pos:start="119:17" pos:end="119:30"><name pos:start="119:17" pos:end="119:21">errno</name> <operator pos:start="119:23" pos:end="119:24">==</operator> <name pos:start="119:26" pos:end="119:30">EBUSY</name></expr>)</condition> <block pos:start="119:33" pos:end="125:13">{<block_content pos:start="121:17" pos:end="123:72">

                <expr_stmt pos:start="121:17" pos:end="123:72"><expr pos:start="121:17" pos:end="123:71"><call pos:start="121:17" pos:end="123:71"><name pos:start="121:17" pos:end="121:23">fprintf</name><argument_list pos:start="121:24" pos:end="123:71">(<argument pos:start="121:25" pos:end="121:30"><expr pos:start="121:25" pos:end="121:30"><name pos:start="121:25" pos:end="121:30">stderr</name></expr></argument>,

                        <argument pos:start="123:25" pos:end="123:70"><expr pos:start="123:25" pos:end="123:70"><literal type="string" pos:start="123:25" pos:end="123:70">"usb_host: warning - device already grabbed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="125:15" pos:end="129:13">else <block pos:start="125:20" pos:end="129:13">{<block_content pos:start="127:17" pos:end="127:50">

                <expr_stmt pos:start="127:17" pos:end="127:50"><expr pos:start="127:17" pos:end="127:49"><call pos:start="127:17" pos:end="127:49"><name pos:start="127:17" pos:end="127:22">perror</name><argument_list pos:start="127:23" pos:end="127:49">(<argument pos:start="127:24" pos:end="127:48"><expr pos:start="127:24" pos:end="127:48"><literal type="string" pos:start="127:24" pos:end="127:48">"USBDEVFS_CLAIMINTERFACE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        <label pos:start="131:9" pos:end="131:13"><name pos:start="131:9" pos:end="131:12">fail</name>:</label>

            <return pos:start="133:13" pos:end="133:21">return <expr pos:start="133:20" pos:end="133:20"><literal type="number" pos:start="133:20" pos:end="133:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



<cpp:ifdef pos:start="141:1" pos:end="141:12">#<cpp:directive pos:start="141:2" pos:end="141:6">ifdef</cpp:directive> <name pos:start="141:8" pos:end="141:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="143:5" pos:end="148:0"><expr pos:start="143:5" pos:end="145:40"><call pos:start="143:5" pos:end="145:40"><name pos:start="143:5" pos:end="143:10">printf</name><argument_list pos:start="143:11" pos:end="145:40">(<argument pos:start="143:12" pos:end="143:67"><expr pos:start="143:12" pos:end="143:67"><literal type="string" pos:start="143:12" pos:end="143:67">"usb_host: %d interfaces claimed for configuration %d\n"</literal></expr></argument>,

           <argument pos:start="145:12" pos:end="145:24"><expr pos:start="145:12" pos:end="145:24"><name pos:start="145:12" pos:end="145:24">nb_interfaces</name></expr></argument>, <argument pos:start="145:27" pos:end="145:39"><expr pos:start="145:27" pos:end="145:39"><name pos:start="145:27" pos:end="145:39">configuration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="147:1" pos:end="147:6">#<cpp:directive pos:start="147:2" pos:end="147:6">endif</cpp:directive></cpp:endif>



    <return pos:start="151:5" pos:end="151:13">return <expr pos:start="151:12" pos:end="151:12"><literal type="number" pos:start="151:12" pos:end="151:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
