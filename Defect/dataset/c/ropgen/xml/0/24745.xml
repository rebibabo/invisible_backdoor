<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24745.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name> <specifier pos:start="1:12" pos:end="1:17">inline</specifier></type> <name pos:start="1:19" pos:end="1:30">get_mb_score</name><parameter_list pos:start="1:31" pos:end="3:45">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:45">MpegEncContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type> <name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:57"><decl pos:start="1:52" pos:end="1:57"><type pos:start="1:52" pos:end="1:57"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:57">mx</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:65"><decl pos:start="1:60" pos:end="1:65"><type pos:start="1:60" pos:end="1:65"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:65">my</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:80"><decl pos:start="1:68" pos:end="1:80"><type pos:start="1:68" pos:end="1:80"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:80">src_index</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:44"><decl pos:start="3:32" pos:end="3:44"><type pos:start="3:32" pos:end="3:44"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:44">ref_index</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="9:5" pos:end="59:13">

<comment type="line" pos:start="7:1" pos:end="7:63">//    const int check_luma= s-&gt;dsp.me_sub_cmp != s-&gt;dsp.mb_cmp;</comment>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:28"><name pos:start="9:5" pos:end="9:20">MotionEstContext</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier> <specifier pos:start="9:24" pos:end="9:28">const</specifier></type> <name pos:start="9:30" pos:end="9:30">c</name><init pos:start="9:31" pos:end="9:38">= <expr pos:start="9:33" pos:end="9:38"><operator pos:start="9:33" pos:end="9:33">&amp;</operator><name pos:start="9:34" pos:end="9:38"><name pos:start="9:34" pos:end="9:34">s</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:38">me</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:18">size</name><init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:15">h</name><init pos:start="13:16" pos:end="13:19">= <expr pos:start="13:18" pos:end="13:19"><literal type="number" pos:start="13:18" pos:end="13:19">16</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:51"><decl pos:start="15:5" pos:end="15:50"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:28">penalty_factor</name><init pos:start="15:29" pos:end="15:50">= <expr pos:start="15:31" pos:end="15:50"><name pos:start="15:31" pos:end="15:50"><name pos:start="15:31" pos:end="15:31">c</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:50">mb_penalty_factor</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:19">flags</name><init pos:start="17:20" pos:end="17:32">= <expr pos:start="17:22" pos:end="17:32"><name pos:start="17:22" pos:end="17:32"><name pos:start="17:22" pos:end="17:22">c</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:32">mb_flags</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:38"><decl pos:start="19:5" pos:end="19:37"><type pos:start="19:5" pos:end="19:13"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:13">int</name></type> <name pos:start="19:15" pos:end="19:18">qpel</name><init pos:start="19:19" pos:end="19:37">= <expr pos:start="19:21" pos:end="19:37"><name pos:start="19:21" pos:end="19:25">flags</name> <operator pos:start="19:27" pos:end="19:27">&amp;</operator> <name pos:start="19:29" pos:end="19:37">FLAG_QPEL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:29"><decl pos:start="21:5" pos:end="21:28"><type pos:start="21:5" pos:end="21:13"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:13">int</name></type> <name pos:start="21:15" pos:end="21:18">mask</name><init pos:start="21:19" pos:end="21:28">= <expr pos:start="21:21" pos:end="21:28"><literal type="number" pos:start="21:21" pos:end="21:22">1</literal><operator pos:start="21:22" pos:end="21:22">+</operator><literal type="number" pos:start="21:23" pos:end="21:23">2</literal><operator pos:start="21:24" pos:end="21:24">*</operator><name pos:start="21:25" pos:end="21:28">qpel</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:40"><decl pos:start="23:5" pos:end="23:23"><type pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:15">me_cmp_func</name></type> <name pos:start="23:17" pos:end="23:23">cmp_sub</name></decl>, <decl pos:start="23:26" pos:end="23:39"><type ref="prev" pos:start="23:5" pos:end="23:15"/><name pos:start="23:26" pos:end="23:39">chroma_cmp_sub</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:10"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">d</name></decl>;</decl_stmt>



    <decl_stmt pos:start="29:5" pos:end="37:33"><decl pos:start="29:5" pos:end="37:32"><type pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:15">LOAD_COMMON</name></type>

    

 <comment type="line" pos:start="33:2" pos:end="33:18">//FIXME factorize</comment>



    <name pos:start="37:5" pos:end="37:11">cmp_sub</name><init pos:start="37:12" pos:end="37:32">= <expr pos:start="37:14" pos:end="37:32"><name pos:start="37:14" pos:end="37:32"><name pos:start="37:14" pos:end="37:14">s</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:19">dsp</name><operator pos:start="37:20" pos:end="37:20">.</operator><name pos:start="37:21" pos:end="37:26">mb_cmp</name><index pos:start="37:27" pos:end="37:32">[<expr pos:start="37:28" pos:end="37:31"><name pos:start="37:28" pos:end="37:31">size</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:42"><expr pos:start="39:5" pos:end="39:41"><name pos:start="39:5" pos:end="39:18">chroma_cmp_sub</name><operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:41"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:26">dsp</name><operator pos:start="39:27" pos:end="39:27">.</operator><name pos:start="39:28" pos:end="39:33">mb_cmp</name><index pos:start="39:34" pos:end="39:41">[<expr pos:start="39:35" pos:end="39:40"><name pos:start="39:35" pos:end="39:38">size</name><operator pos:start="39:39" pos:end="39:39">+</operator><literal type="number" pos:start="39:40" pos:end="39:40">1</literal></expr>]</index></name></expr>;</expr_stmt>

    

    <expr_stmt pos:start="43:5" pos:end="43:21"><expr pos:start="43:5" pos:end="43:20"><call pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:10">assert</name><argument_list pos:start="43:11" pos:end="43:20">(<argument pos:start="43:12" pos:end="43:19"><expr pos:start="43:12" pos:end="43:19"><operator pos:start="43:12" pos:end="43:12">!</operator><name pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:13">c</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:19">skip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:53"><expr pos:start="45:5" pos:end="45:52"><call pos:start="45:5" pos:end="45:52"><name pos:start="45:5" pos:end="45:10">assert</name><argument_list pos:start="45:11" pos:end="45:52">(<argument pos:start="45:12" pos:end="45:51"><expr pos:start="45:12" pos:end="45:51"><name pos:start="45:12" pos:end="45:31"><name pos:start="45:12" pos:end="45:12">c</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:19">avctx</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:31">me_sub_cmp</name></name> <operator pos:start="45:33" pos:end="45:34">!=</operator> <name pos:start="45:36" pos:end="45:51"><name pos:start="45:36" pos:end="45:36">c</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:43">avctx</name><operator pos:start="45:44" pos:end="45:45">-&gt;</operator><name pos:start="45:46" pos:end="45:51">mb_cmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:123"><expr pos:start="49:5" pos:end="49:122"><name pos:start="49:5" pos:end="49:5">d</name><operator pos:start="49:6" pos:end="49:6">=</operator> <call pos:start="49:8" pos:end="49:122"><name pos:start="49:8" pos:end="49:10">cmp</name><argument_list pos:start="49:11" pos:end="49:122">(<argument pos:start="49:12" pos:end="49:12"><expr pos:start="49:12" pos:end="49:12"><name pos:start="49:12" pos:end="49:12">s</name></expr></argument>, <argument pos:start="49:15" pos:end="49:26"><expr pos:start="49:15" pos:end="49:26"><name pos:start="49:15" pos:end="49:16">mx</name><operator pos:start="49:17" pos:end="49:18">&gt;&gt;</operator><operator pos:start="49:19" pos:end="49:19">(</operator><name pos:start="49:20" pos:end="49:23">qpel</name><operator pos:start="49:24" pos:end="49:24">+</operator><literal type="number" pos:start="49:25" pos:end="49:25">1</literal><operator pos:start="49:26" pos:end="49:26">)</operator></expr></argument>, <argument pos:start="49:29" pos:end="49:40"><expr pos:start="49:29" pos:end="49:40"><name pos:start="49:29" pos:end="49:30">my</name><operator pos:start="49:31" pos:end="49:32">&gt;&gt;</operator><operator pos:start="49:33" pos:end="49:33">(</operator><name pos:start="49:34" pos:end="49:37">qpel</name><operator pos:start="49:38" pos:end="49:38">+</operator><literal type="number" pos:start="49:39" pos:end="49:39">1</literal><operator pos:start="49:40" pos:end="49:40">)</operator></expr></argument>, <argument pos:start="49:43" pos:end="49:49"><expr pos:start="49:43" pos:end="49:49"><name pos:start="49:43" pos:end="49:44">mx</name><operator pos:start="49:45" pos:end="49:45">&amp;</operator><name pos:start="49:46" pos:end="49:49">mask</name></expr></argument>, <argument pos:start="49:52" pos:end="49:58"><expr pos:start="49:52" pos:end="49:58"><name pos:start="49:52" pos:end="49:53">my</name><operator pos:start="49:54" pos:end="49:54">&amp;</operator><name pos:start="49:55" pos:end="49:58">mask</name></expr></argument>, <argument pos:start="49:61" pos:end="49:64"><expr pos:start="49:61" pos:end="49:64"><name pos:start="49:61" pos:end="49:64">size</name></expr></argument>, <argument pos:start="49:67" pos:end="49:67"><expr pos:start="49:67" pos:end="49:67"><name pos:start="49:67" pos:end="49:67">h</name></expr></argument>, <argument pos:start="49:70" pos:end="49:78"><expr pos:start="49:70" pos:end="49:78"><name pos:start="49:70" pos:end="49:78">ref_index</name></expr></argument>, <argument pos:start="49:81" pos:end="49:89"><expr pos:start="49:81" pos:end="49:89"><name pos:start="49:81" pos:end="49:89">src_index</name></expr></argument>, <argument pos:start="49:92" pos:end="49:98"><expr pos:start="49:92" pos:end="49:98"><name pos:start="49:92" pos:end="49:98">cmp_sub</name></expr></argument>, <argument pos:start="49:101" pos:end="49:114"><expr pos:start="49:101" pos:end="49:114"><name pos:start="49:101" pos:end="49:114">chroma_cmp_sub</name></expr></argument>, <argument pos:start="49:117" pos:end="49:121"><expr pos:start="49:117" pos:end="49:121"><name pos:start="49:117" pos:end="49:121">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="51:5" pos:end="51:60">//FIXME check cbp before adding penalty for (0,0) vector</comment>

    <if_stmt pos:start="53:5" pos:end="55:80"><if pos:start="53:5" pos:end="55:80">if<condition pos:start="53:7" pos:end="53:26">(<expr pos:start="53:8" pos:end="53:25"><name pos:start="53:8" pos:end="53:9">mx</name> <operator pos:start="53:11" pos:end="53:12">||</operator> <name pos:start="53:14" pos:end="53:15">my</name> <operator pos:start="53:17" pos:end="53:18">||</operator> <name pos:start="53:20" pos:end="53:23">size</name><operator pos:start="53:24" pos:end="53:24">&gt;</operator><literal type="number" pos:start="53:25" pos:end="53:25">0</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:80"><block_content pos:start="55:9" pos:end="55:80">

        <expr_stmt pos:start="55:9" pos:end="55:80"><expr pos:start="55:9" pos:end="55:79"><name pos:start="55:9" pos:end="55:9">d</name> <operator pos:start="55:11" pos:end="55:12">+=</operator> <operator pos:start="55:14" pos:end="55:14">(</operator><name pos:start="55:15" pos:end="55:37"><name pos:start="55:15" pos:end="55:24">mv_penalty</name><index pos:start="55:25" pos:end="55:37">[<expr pos:start="55:26" pos:end="55:36"><name pos:start="55:26" pos:end="55:27">mx</name> <operator pos:start="55:29" pos:end="55:29">-</operator> <name pos:start="55:31" pos:end="55:36">pred_x</name></expr>]</index></name> <operator pos:start="55:39" pos:end="55:39">+</operator> <name pos:start="55:41" pos:end="55:63"><name pos:start="55:41" pos:end="55:50">mv_penalty</name><index pos:start="55:51" pos:end="55:63">[<expr pos:start="55:52" pos:end="55:62"><name pos:start="55:52" pos:end="55:53">my</name> <operator pos:start="55:55" pos:end="55:55">-</operator> <name pos:start="55:57" pos:end="55:62">pred_y</name></expr>]</index></name><operator pos:start="55:64" pos:end="55:64">)</operator><operator pos:start="55:65" pos:end="55:65">*</operator><name pos:start="55:66" pos:end="55:79">penalty_factor</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        

    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><name pos:start="59:12" pos:end="59:12">d</name></expr>;</return>

</block_content>}</block></function>
</unit>
