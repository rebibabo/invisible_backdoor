<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15186.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">s390x_cpu_set_id</name><parameter_list pos:start="1:29" pos:end="3:56">(<parameter pos:start="1:30" pos:end="1:40"><decl pos:start="1:30" pos:end="1:40"><type pos:start="1:30" pos:end="1:40"><name pos:start="1:30" pos:end="1:35">Object</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">obj</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:52"><decl pos:start="1:43" pos:end="1:52"><type pos:start="1:43" pos:end="1:52"><name pos:start="1:43" pos:end="1:49">Visitor</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">v</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:70"><decl pos:start="1:55" pos:end="1:70"><type pos:start="1:55" pos:end="1:70"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:64">char</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:70">name</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:41"><decl pos:start="3:30" pos:end="3:41"><type pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:33">void</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:41">opaque</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:55"><decl pos:start="3:44" pos:end="3:55"><type pos:start="3:44" pos:end="3:55"><name pos:start="3:44" pos:end="3:48">Error</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier><modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:55">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:20">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">S390CPU</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">cpu</name> <init pos:start="7:18" pos:end="7:32">= <expr pos:start="7:20" pos:end="7:32"><call pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:27">S390_CPU</name><argument_list pos:start="7:28" pos:end="7:32">(<argument pos:start="7:29" pos:end="7:31"><expr pos:start="7:29" pos:end="7:31"><name pos:start="7:29" pos:end="7:31">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">DeviceState</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">dev</name> <init pos:start="9:22" pos:end="9:34">= <expr pos:start="9:24" pos:end="9:34"><call pos:start="9:24" pos:end="9:34"><name pos:start="9:24" pos:end="9:29">DEVICE</name><argument_list pos:start="9:30" pos:end="9:34">(<argument pos:start="9:31" pos:end="9:33"><expr pos:start="9:31" pos:end="9:33"><name pos:start="9:31" pos:end="9:33">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:17"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">int64_t</name></type> <name pos:start="11:19" pos:end="11:21">min</name> <init pos:start="11:23" pos:end="11:25">= <expr pos:start="11:25" pos:end="11:25"><literal type="number" pos:start="11:25" pos:end="11:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:17"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">int64_t</name></type> <name pos:start="13:19" pos:end="13:21">max</name> <init pos:start="13:23" pos:end="13:34">= <expr pos:start="13:25" pos:end="13:34"><name pos:start="13:25" pos:end="13:34">UINT32_MAX</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Error</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:14">err</name> <init pos:start="15:16" pos:end="15:21">= <expr pos:start="15:18" pos:end="15:21"><name pos:start="15:18" pos:end="15:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:17">value</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:22">(<expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:11">dev</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:21">realized</name></name></expr>)</condition> <block pos:start="21:24" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:15">

        <expr_stmt pos:start="23:9" pos:end="25:70"><expr pos:start="23:9" pos:end="25:69"><call pos:start="23:9" pos:end="25:69"><name pos:start="23:9" pos:end="23:18">error_setg</name><argument_list pos:start="23:19" pos:end="25:69">(<argument pos:start="23:20" pos:end="23:23"><expr pos:start="23:20" pos:end="23:23"><name pos:start="23:20" pos:end="23:23">errp</name></expr></argument>, <argument pos:start="23:26" pos:end="25:36"><expr pos:start="23:26" pos:end="25:36"><literal type="string" pos:start="23:26" pos:end="23:70">"Attempt to set property '%s' on '%s' after "</literal>

                   <literal type="string" pos:start="25:20" pos:end="25:36">"it was realized"</literal></expr></argument>, <argument pos:start="25:39" pos:end="25:42"><expr pos:start="25:39" pos:end="25:42"><name pos:start="25:39" pos:end="25:42">name</name></expr></argument>, <argument pos:start="25:45" pos:end="25:68"><expr pos:start="25:45" pos:end="25:68"><call pos:start="25:45" pos:end="25:68"><name pos:start="25:45" pos:end="25:63">object_get_typename</name><argument_list pos:start="25:64" pos:end="25:68">(<argument pos:start="25:65" pos:end="25:67"><expr pos:start="25:65" pos:end="25:67"><name pos:start="25:65" pos:end="25:67">obj</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><call pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:18">visit_type_int</name><argument_list pos:start="33:19" pos:end="33:41">(<argument pos:start="33:20" pos:end="33:20"><expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">v</name></expr></argument>, <argument pos:start="33:23" pos:end="33:26"><expr pos:start="33:23" pos:end="33:26"><name pos:start="33:23" pos:end="33:26">name</name></expr></argument>, <argument pos:start="33:29" pos:end="33:34"><expr pos:start="33:29" pos:end="33:34"><operator pos:start="33:29" pos:end="33:29">&amp;</operator><name pos:start="33:30" pos:end="33:34">value</name></expr></argument>, <argument pos:start="33:37" pos:end="33:40"><expr pos:start="33:37" pos:end="33:40"><operator pos:start="33:37" pos:end="33:37">&amp;</operator><name pos:start="33:38" pos:end="33:40">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:12">(<expr pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">err</name></expr>)</condition> <block pos:start="35:14" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:15">

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><call pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:23">error_propagate</name><argument_list pos:start="37:24" pos:end="37:34">(<argument pos:start="37:25" pos:end="37:28"><expr pos:start="37:25" pos:end="37:28"><name pos:start="37:25" pos:end="37:28">errp</name></expr></argument>, <argument pos:start="37:31" pos:end="37:33"><expr pos:start="37:31" pos:end="37:33"><name pos:start="37:31" pos:end="37:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="53:5"><if pos:start="43:5" pos:end="53:5">if <condition pos:start="43:8" pos:end="43:35">(<expr pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:13">value</name> <argument_list type="generic" pos:start="43:15" pos:end="43:30">&lt; <argument pos:start="43:17" pos:end="43:28"><expr pos:start="43:17" pos:end="43:28"><name pos:start="43:17" pos:end="43:19">min</name> <operator pos:start="43:21" pos:end="43:22">||</operator> <name pos:start="43:24" pos:end="43:28">value</name></expr></argument> &gt;</argument_list></name> <name pos:start="43:32" pos:end="43:34">max</name></expr>)</condition> <block pos:start="43:37" pos:end="53:5">{<block_content pos:start="45:9" pos:end="51:15">

        <expr_stmt pos:start="45:9" pos:end="49:68"><expr pos:start="45:9" pos:end="49:67"><call pos:start="45:9" pos:end="49:67"><name pos:start="45:9" pos:end="45:18">error_setg</name><argument_list pos:start="45:19" pos:end="49:67">(<argument pos:start="45:20" pos:end="45:23"><expr pos:start="45:20" pos:end="45:23"><name pos:start="45:20" pos:end="45:23">errp</name></expr></argument>, <argument pos:start="45:26" pos:end="47:66"><expr pos:start="45:26" pos:end="47:66"><literal type="string" pos:start="45:26" pos:end="45:62">"Property %s.%s doesn't take value %"</literal> <name pos:start="45:64" pos:end="45:69">PRId64</name>

                   <literal type="string" pos:start="47:20" pos:end="47:33">" (minimum: %"</literal> <name pos:start="47:35" pos:end="47:40">PRId64</name> <literal type="string" pos:start="47:42" pos:end="47:55">", maximum: %"</literal> <name pos:start="47:57" pos:end="47:62">PRId64</name> <literal type="string" pos:start="47:64" pos:end="47:66">")"</literal></expr></argument> ,

                   <argument pos:start="49:20" pos:end="49:43"><expr pos:start="49:20" pos:end="49:43"><call pos:start="49:20" pos:end="49:43"><name pos:start="49:20" pos:end="49:38">object_get_typename</name><argument_list pos:start="49:39" pos:end="49:43">(<argument pos:start="49:40" pos:end="49:42"><expr pos:start="49:40" pos:end="49:42"><name pos:start="49:40" pos:end="49:42">obj</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:46" pos:end="49:49"><expr pos:start="49:46" pos:end="49:49"><name pos:start="49:46" pos:end="49:49">name</name></expr></argument>, <argument pos:start="49:52" pos:end="49:56"><expr pos:start="49:52" pos:end="49:56"><name pos:start="49:52" pos:end="49:56">value</name></expr></argument>, <argument pos:start="49:59" pos:end="49:61"><expr pos:start="49:59" pos:end="49:61"><name pos:start="49:59" pos:end="49:61">min</name></expr></argument>, <argument pos:start="49:64" pos:end="49:66"><expr pos:start="49:64" pos:end="49:66"><name pos:start="49:64" pos:end="49:66">max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:20"><expr pos:start="55:5" pos:end="55:19"><name pos:start="55:5" pos:end="55:11"><name pos:start="55:5" pos:end="55:7">cpu</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:11">id</name></name> <operator pos:start="55:13" pos:end="55:13">=</operator> <name pos:start="55:15" pos:end="55:19">value</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
