<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10993.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">exynos4210_fimd_update</name><parameter_list pos:start="1:35" pos:end="1:48">(<parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:41"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="155:1">{<block_content pos:start="5:5" pos:end="153:34">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:58"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23">Exynos4210fimdState</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:26">s</name> <init pos:start="5:28" pos:end="5:58">= <expr pos:start="5:30" pos:end="5:58"><operator pos:start="5:30" pos:end="5:30">(</operator><name pos:start="5:31" pos:end="5:49">Exynos4210fimdState</name> <operator pos:start="5:51" pos:end="5:51">*</operator><operator pos:start="5:52" pos:end="5:52">)</operator><name pos:start="5:53" pos:end="5:58">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:24">Exynos4210fimdWindow</name> <modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:27">w</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:15">line</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:22">target_phys_addr_t</name></type> <name pos:start="11:24" pos:end="11:35">fb_line_addr</name></decl>, <decl pos:start="11:38" pos:end="11:45"><type ref="prev" pos:start="11:5" pos:end="11:22"/><name pos:start="11:38" pos:end="11:45">inc_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">scrn_height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:52"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">first_line</name> <init pos:start="15:20" pos:end="15:23">= <expr pos:start="15:22" pos:end="15:23"><operator pos:start="15:22" pos:end="15:22">-</operator><literal type="number" pos:start="15:23" pos:end="15:23">1</literal></expr></init></decl>, <decl pos:start="15:26" pos:end="15:39"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:26" pos:end="15:34">last_line</name> <init pos:start="15:36" pos:end="15:39">= <expr pos:start="15:38" pos:end="15:39"><operator pos:start="15:38" pos:end="15:38">-</operator><literal type="number" pos:start="15:39" pos:end="15:39">1</literal></expr></init></decl>, <decl pos:start="15:42" pos:end="15:51"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:42" pos:end="15:51">scrn_width</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">bool</name></type> <name pos:start="17:10" pos:end="17:14">blend</name> <init pos:start="17:16" pos:end="17:22">= <expr pos:start="17:18" pos:end="17:22"><name pos:start="17:18" pos:end="17:22">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:25">host_fb_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:8"><name pos:start="21:5" pos:end="21:8">bool</name></type> <name pos:start="21:10" pos:end="21:17">is_dirty</name> <init pos:start="21:19" pos:end="21:25">= <expr pos:start="21:21" pos:end="21:25"><name pos:start="21:21" pos:end="21:25">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:75"><decl pos:start="23:5" pos:end="23:74"><type pos:start="23:5" pos:end="23:13"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:13">int</name></type> <name pos:start="23:15" pos:end="23:26">global_width</name> <init pos:start="23:28" pos:end="23:74">= <expr pos:start="23:30" pos:end="23:74"><operator pos:start="23:30" pos:end="23:30">(</operator><name pos:start="23:31" pos:end="23:43"><name pos:start="23:31" pos:end="23:31">s</name><operator pos:start="23:32" pos:end="23:33">-&gt;</operator><name pos:start="23:34" pos:end="23:40">vidtcon</name><index pos:start="23:41" pos:end="23:43">[<expr pos:start="23:42" pos:end="23:42"><literal type="number" pos:start="23:42" pos:end="23:42">2</literal></expr>]</index></name> <operator pos:start="23:45" pos:end="23:45">&amp;</operator> <name pos:start="23:47" pos:end="23:69">FIMD_VIDTCON2_SIZE_MASK</name><operator pos:start="23:70" pos:end="23:70">)</operator> <operator pos:start="23:72" pos:end="23:72">+</operator> <literal type="number" pos:start="23:74" pos:end="23:74">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="27:41"><decl pos:start="25:5" pos:end="27:40"><type pos:start="25:5" pos:end="25:13"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:13">int</name></type> <name pos:start="25:15" pos:end="25:27">global_height</name> <init pos:start="25:29" pos:end="27:40">= <expr pos:start="25:31" pos:end="27:40"><operator pos:start="25:31" pos:end="25:31">(</operator><operator pos:start="25:32" pos:end="25:32">(</operator><name pos:start="25:33" pos:end="25:45"><name pos:start="25:33" pos:end="25:33">s</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:42">vidtcon</name><index pos:start="25:43" pos:end="25:45">[<expr pos:start="25:44" pos:end="25:44"><literal type="number" pos:start="25:44" pos:end="25:44">2</literal></expr>]</index></name> <operator pos:start="25:47" pos:end="25:48">&gt;&gt;</operator> <name pos:start="25:50" pos:end="25:72">FIMD_VIDTCON2_VER_SHIFT</name><operator pos:start="25:73" pos:end="25:73">)</operator> <operator pos:start="25:75" pos:end="25:75">&amp;</operator>

            <name pos:start="27:13" pos:end="27:35">FIMD_VIDTCON2_SIZE_MASK</name><operator pos:start="27:36" pos:end="27:36">)</operator> <operator pos:start="27:38" pos:end="27:38">+</operator> <literal type="number" pos:start="27:40" pos:end="27:40">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="33:24">(<expr pos:start="31:9" pos:end="33:23"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:10">s</name> <operator pos:start="31:12" pos:end="31:13">||</operator> <operator pos:start="31:15" pos:end="31:15">!</operator><name pos:start="31:16" pos:end="31:25"><name pos:start="31:16" pos:end="31:16">s</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:25">console</name></name> <operator pos:start="31:27" pos:end="31:28">||</operator> <operator pos:start="31:30" pos:end="31:30">!</operator><call pos:start="31:31" pos:end="31:63"><name pos:start="31:31" pos:end="31:51">ds_get_bits_per_pixel</name><argument_list pos:start="31:52" pos:end="31:63">(<argument pos:start="31:53" pos:end="31:62"><expr pos:start="31:53" pos:end="31:62"><name pos:start="31:53" pos:end="31:62"><name pos:start="31:53" pos:end="31:53">s</name><operator pos:start="31:54" pos:end="31:55">-&gt;</operator><name pos:start="31:56" pos:end="31:62">console</name></name></expr></argument>)</argument_list></call> <operator pos:start="31:65" pos:end="31:66">||</operator>

            <operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:23"><name pos:start="33:14" pos:end="33:14">s</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:23">enabled</name></name></expr>)</condition> <block pos:start="33:26" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:15">

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:36"><expr pos:start="39:5" pos:end="39:35"><call pos:start="39:5" pos:end="39:35"><name pos:start="39:5" pos:end="39:32">exynos4210_update_resolution</name><argument_list pos:start="39:33" pos:end="39:35">(<argument pos:start="39:34" pos:end="39:34"><expr pos:start="39:34" pos:end="39:34"><name pos:start="39:34" pos:end="39:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="43:5" pos:end="109:5">for <control pos:start="43:9" pos:end="43:40">(<init pos:start="43:10" pos:end="43:15"><expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:10">i</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>;</init> <condition pos:start="43:17" pos:end="43:35"><expr pos:start="43:17" pos:end="43:34"><name pos:start="43:17" pos:end="43:17">i</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <name pos:start="43:21" pos:end="43:34">NUM_OF_WINDOWS</name></expr>;</condition> <incr pos:start="43:37" pos:end="43:39"><expr pos:start="43:37" pos:end="43:39"><name pos:start="43:37" pos:end="43:37">i</name><operator pos:start="43:38" pos:end="43:39">++</operator></expr></incr>)</control> <block pos:start="43:42" pos:end="109:5">{<block_content pos:start="45:9" pos:end="107:9">

        <expr_stmt pos:start="45:9" pos:end="45:26"><expr pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:9">w</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <operator pos:start="45:13" pos:end="45:13">&amp;</operator><name pos:start="45:14" pos:end="45:25"><name pos:start="45:14" pos:end="45:14">s</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:22">window</name><index pos:start="45:23" pos:end="45:25">[<expr pos:start="45:24" pos:end="45:24"><name pos:start="45:24" pos:end="45:24">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="107:9"><if pos:start="47:9" pos:end="107:9">if <condition pos:start="47:12" pos:end="47:63">(<expr pos:start="47:13" pos:end="47:62"><operator pos:start="47:13" pos:end="47:13">(</operator><name pos:start="47:14" pos:end="47:22"><name pos:start="47:14" pos:end="47:14">w</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:22">wincon</name></name> <operator pos:start="47:24" pos:end="47:24">&amp;</operator> <name pos:start="47:26" pos:end="47:42">FIMD_WINCON_ENWIN</name><operator pos:start="47:43" pos:end="47:43">)</operator> <operator pos:start="47:45" pos:end="47:46">&amp;&amp;</operator> <name pos:start="47:48" pos:end="47:62"><name pos:start="47:48" pos:end="47:48">w</name><operator pos:start="47:49" pos:end="47:50">-&gt;</operator><name pos:start="47:51" pos:end="47:62">host_fb_addr</name></name></expr>)</condition> <block pos:start="47:65" pos:end="107:9">{<block_content pos:start="49:13" pos:end="105:25">

            <expr_stmt pos:start="49:13" pos:end="49:59"><expr pos:start="49:13" pos:end="49:58"><name pos:start="49:13" pos:end="49:23">scrn_height</name> <operator pos:start="49:25" pos:end="49:25">=</operator> <name pos:start="49:27" pos:end="49:39"><name pos:start="49:27" pos:end="49:27">w</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:39">rightbot_y</name></name> <operator pos:start="49:41" pos:end="49:41">-</operator> <name pos:start="49:43" pos:end="49:54"><name pos:start="49:43" pos:end="49:43">w</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:54">lefttop_y</name></name> <operator pos:start="49:56" pos:end="49:56">+</operator> <literal type="number" pos:start="49:58" pos:end="49:58">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:43"><expr pos:start="51:13" pos:end="51:42"><name pos:start="51:13" pos:end="51:22">scrn_width</name> <operator pos:start="51:24" pos:end="51:24">=</operator> <name pos:start="51:26" pos:end="51:42"><name pos:start="51:26" pos:end="51:26">w</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:42">virtpage_width</name></name></expr>;</expr_stmt>

            <comment type="block" pos:start="53:13" pos:end="53:61">/* Total width of virtual screen page in bytes */</comment>

            <expr_stmt pos:start="55:13" pos:end="55:56"><expr pos:start="55:13" pos:end="55:55"><name pos:start="55:13" pos:end="55:20">inc_size</name> <operator pos:start="55:22" pos:end="55:22">=</operator> <name pos:start="55:24" pos:end="55:33">scrn_width</name> <operator pos:start="55:35" pos:end="55:35">+</operator> <name pos:start="55:37" pos:end="55:55"><name pos:start="55:37" pos:end="55:37">w</name><operator pos:start="55:38" pos:end="55:39">-&gt;</operator><name pos:start="55:40" pos:end="55:55">virtpage_offsize</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:63"><expr pos:start="57:13" pos:end="57:62"><call pos:start="57:13" pos:end="57:62"><name pos:start="57:13" pos:end="57:43">memory_region_sync_dirty_bitmap</name><argument_list pos:start="57:44" pos:end="57:62">(<argument pos:start="57:45" pos:end="57:61"><expr pos:start="57:45" pos:end="57:61"><name pos:start="57:45" pos:end="57:61"><name pos:start="57:45" pos:end="57:45">w</name><operator pos:start="57:46" pos:end="57:47">-&gt;</operator><name pos:start="57:48" pos:end="57:58">mem_section</name><operator pos:start="57:59" pos:end="57:59">.</operator><name pos:start="57:60" pos:end="57:61">mr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:43"><expr pos:start="59:13" pos:end="59:42"><name pos:start="59:13" pos:end="59:24">host_fb_addr</name> <operator pos:start="59:26" pos:end="59:26">=</operator> <name pos:start="59:28" pos:end="59:42"><name pos:start="59:28" pos:end="59:28">w</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:42">host_fb_addr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:63"><expr pos:start="61:13" pos:end="61:62"><name pos:start="61:13" pos:end="61:24">fb_line_addr</name> <operator pos:start="61:26" pos:end="61:26">=</operator> <name pos:start="61:28" pos:end="61:62"><name pos:start="61:28" pos:end="61:28">w</name><operator pos:start="61:29" pos:end="61:30">-&gt;</operator><name pos:start="61:31" pos:end="61:41">mem_section</name><operator pos:start="61:42" pos:end="61:42">.</operator><name pos:start="61:43" pos:end="61:62">offset_within_region</name></name></expr>;</expr_stmt>



            <for pos:start="65:13" pos:end="97:13">for <control pos:start="65:17" pos:end="65:54">(<init pos:start="65:18" pos:end="65:26"><expr pos:start="65:18" pos:end="65:25"><name pos:start="65:18" pos:end="65:21">line</name> <operator pos:start="65:23" pos:end="65:23">=</operator> <literal type="number" pos:start="65:25" pos:end="65:25">0</literal></expr>;</init> <condition pos:start="65:28" pos:end="65:46"><expr pos:start="65:28" pos:end="65:45"><name pos:start="65:28" pos:end="65:31">line</name> <operator pos:start="65:33" pos:end="65:33">&lt;</operator> <name pos:start="65:35" pos:end="65:45">scrn_height</name></expr>;</condition> <incr pos:start="65:48" pos:end="65:53"><expr pos:start="65:48" pos:end="65:53"><name pos:start="65:48" pos:end="65:51">line</name><operator pos:start="65:52" pos:end="65:53">++</operator></expr></incr>)</control> <block pos:start="65:56" pos:end="97:13">{<block_content pos:start="67:17" pos:end="95:33">

                <expr_stmt pos:start="67:17" pos:end="69:72"><expr pos:start="67:17" pos:end="69:71"><name pos:start="67:17" pos:end="67:24">is_dirty</name> <operator pos:start="67:26" pos:end="67:26">=</operator> <call pos:start="67:28" pos:end="69:71"><name pos:start="67:28" pos:end="67:50">memory_region_get_dirty</name><argument_list pos:start="67:51" pos:end="69:71">(<argument pos:start="67:52" pos:end="67:68"><expr pos:start="67:52" pos:end="67:68"><name pos:start="67:52" pos:end="67:68"><name pos:start="67:52" pos:end="67:52">w</name><operator pos:start="67:53" pos:end="67:54">-&gt;</operator><name pos:start="67:55" pos:end="67:65">mem_section</name><operator pos:start="67:66" pos:end="67:66">.</operator><name pos:start="67:67" pos:end="67:68">mr</name></name></expr></argument>,

                            <argument pos:start="69:29" pos:end="69:40"><expr pos:start="69:29" pos:end="69:40"><name pos:start="69:29" pos:end="69:40">fb_line_addr</name></expr></argument>, <argument pos:start="69:43" pos:end="69:52"><expr pos:start="69:43" pos:end="69:52"><name pos:start="69:43" pos:end="69:52">scrn_width</name></expr></argument>, <argument pos:start="69:55" pos:end="69:70"><expr pos:start="69:55" pos:end="69:70"><name pos:start="69:55" pos:end="69:70">DIRTY_MEMORY_VGA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="73:17" pos:end="89:17"><if pos:start="73:17" pos:end="89:17">if <condition pos:start="73:20" pos:end="73:46">(<expr pos:start="73:21" pos:end="73:45"><name pos:start="73:21" pos:end="73:33"><name pos:start="73:21" pos:end="73:21">s</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:33">invalidate</name></name> <operator pos:start="73:35" pos:end="73:36">||</operator> <name pos:start="73:38" pos:end="73:45">is_dirty</name></expr>)</condition> <block pos:start="73:48" pos:end="89:17">{<block_content pos:start="75:21" pos:end="87:57">

                    <if_stmt pos:start="75:21" pos:end="79:21"><if pos:start="75:21" pos:end="79:21">if <condition pos:start="75:24" pos:end="75:41">(<expr pos:start="75:25" pos:end="75:40"><name pos:start="75:25" pos:end="75:34">first_line</name> <operator pos:start="75:36" pos:end="75:37">==</operator> <operator pos:start="75:39" pos:end="75:39">-</operator><literal type="number" pos:start="75:40" pos:end="75:40">1</literal></expr>)</condition> <block pos:start="75:43" pos:end="79:21">{<block_content pos:start="77:25" pos:end="77:42">

                        <expr_stmt pos:start="77:25" pos:end="77:42"><expr pos:start="77:25" pos:end="77:41"><name pos:start="77:25" pos:end="77:34">first_line</name> <operator pos:start="77:36" pos:end="77:36">=</operator> <name pos:start="77:38" pos:end="77:41">line</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="81:21" pos:end="81:37"><expr pos:start="81:21" pos:end="81:36"><name pos:start="81:21" pos:end="81:29">last_line</name> <operator pos:start="81:31" pos:end="81:31">=</operator> <name pos:start="81:33" pos:end="81:36">line</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="83:21" pos:end="87:57"><expr pos:start="83:21" pos:end="87:56"><call pos:start="83:21" pos:end="87:56"><name pos:start="83:21" pos:end="83:32"><name pos:start="83:21" pos:end="83:21">w</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:32">draw_line</name></name><argument_list pos:start="83:33" pos:end="87:56">(<argument pos:start="83:34" pos:end="83:34"><expr pos:start="83:34" pos:end="83:34"><name pos:start="83:34" pos:end="83:34">w</name></expr></argument>, <argument pos:start="83:37" pos:end="83:48"><expr pos:start="83:37" pos:end="83:48"><name pos:start="83:37" pos:end="83:48">host_fb_addr</name></expr></argument>, <argument pos:start="83:51" pos:end="87:48"><expr pos:start="83:51" pos:end="87:48"><name pos:start="83:51" pos:end="83:56"><name pos:start="83:51" pos:end="83:51">s</name><operator pos:start="83:52" pos:end="83:53">-&gt;</operator><name pos:start="83:54" pos:end="83:56">ifb</name></name> <operator pos:start="83:58" pos:end="83:58">+</operator>

                        <name pos:start="85:25" pos:end="85:36"><name pos:start="85:25" pos:end="85:25">w</name><operator pos:start="85:26" pos:end="85:27">-&gt;</operator><name pos:start="85:28" pos:end="85:36">lefttop_x</name></name> <operator pos:start="85:38" pos:end="85:38">*</operator> <name pos:start="85:40" pos:end="85:48">RGBA_SIZE</name> <operator pos:start="85:50" pos:end="85:50">+</operator> <operator pos:start="85:52" pos:end="85:52">(</operator><name pos:start="85:53" pos:end="85:64"><name pos:start="85:53" pos:end="85:53">w</name><operator pos:start="85:54" pos:end="85:55">-&gt;</operator><name pos:start="85:56" pos:end="85:64">lefttop_y</name></name> <operator pos:start="85:66" pos:end="85:66">+</operator> <name pos:start="85:68" pos:end="85:71">line</name><operator pos:start="85:72" pos:end="85:72">)</operator> <operator pos:start="85:74" pos:end="85:74">*</operator>

                        <name pos:start="87:25" pos:end="87:36">global_width</name> <operator pos:start="87:38" pos:end="87:38">*</operator> <name pos:start="87:40" pos:end="87:48">RGBA_SIZE</name></expr></argument>, <argument pos:start="87:51" pos:end="87:55"><expr pos:start="87:51" pos:end="87:55"><name pos:start="87:51" pos:end="87:55">blend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:41"><expr pos:start="91:17" pos:end="91:40"><name pos:start="91:17" pos:end="91:28">host_fb_addr</name> <operator pos:start="91:30" pos:end="91:31">+=</operator> <name pos:start="91:33" pos:end="91:40">inc_size</name></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:41"><expr pos:start="93:17" pos:end="93:40"><name pos:start="93:17" pos:end="93:28">fb_line_addr</name> <operator pos:start="93:30" pos:end="93:31">+=</operator> <name pos:start="93:33" pos:end="93:40">inc_size</name></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:33"><expr pos:start="95:17" pos:end="95:32"><name pos:start="95:17" pos:end="95:24">is_dirty</name> <operator pos:start="95:26" pos:end="95:26">=</operator> <name pos:start="95:28" pos:end="95:32">false</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="99:13" pos:end="103:45"><expr pos:start="99:13" pos:end="103:44"><call pos:start="99:13" pos:end="103:44"><name pos:start="99:13" pos:end="99:37">memory_region_reset_dirty</name><argument_list pos:start="99:38" pos:end="103:44">(<argument pos:start="99:39" pos:end="99:55"><expr pos:start="99:39" pos:end="99:55"><name pos:start="99:39" pos:end="99:55"><name pos:start="99:39" pos:end="99:39">w</name><operator pos:start="99:40" pos:end="99:41">-&gt;</operator><name pos:start="99:42" pos:end="99:52">mem_section</name><operator pos:start="99:53" pos:end="99:53">.</operator><name pos:start="99:54" pos:end="99:55">mr</name></name></expr></argument>,

                <argument pos:start="101:17" pos:end="101:51"><expr pos:start="101:17" pos:end="101:51"><name pos:start="101:17" pos:end="101:51"><name pos:start="101:17" pos:end="101:17">w</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:30">mem_section</name><operator pos:start="101:31" pos:end="101:31">.</operator><name pos:start="101:32" pos:end="101:51">offset_within_region</name></name></expr></argument>,

                <argument pos:start="103:17" pos:end="103:25"><expr pos:start="103:17" pos:end="103:25"><name pos:start="103:17" pos:end="103:25"><name pos:start="103:17" pos:end="103:17">w</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:25">fb_len</name></name></expr></argument>, <argument pos:start="103:28" pos:end="103:43"><expr pos:start="103:28" pos:end="103:43"><name pos:start="103:28" pos:end="103:43">DIRTY_MEMORY_VGA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:25"><expr pos:start="105:13" pos:end="105:24"><name pos:start="105:13" pos:end="105:17">blend</name> <operator pos:start="105:19" pos:end="105:19">=</operator> <name pos:start="105:21" pos:end="105:24">true</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="113:5" pos:end="113:47">/* Copy resulting image to QEMU_CONSOLE. */</comment>

    <if_stmt pos:start="115:5" pos:end="141:5"><if pos:start="115:5" pos:end="141:5">if <condition pos:start="115:8" pos:end="115:24">(<expr pos:start="115:9" pos:end="115:23"><name pos:start="115:9" pos:end="115:18">first_line</name> <operator pos:start="115:20" pos:end="115:21">&gt;=</operator> <literal type="number" pos:start="115:23" pos:end="115:23">0</literal></expr>)</condition> <block pos:start="115:26" pos:end="141:5">{<block_content pos:start="117:9" pos:end="139:66">

        <decl_stmt pos:start="117:9" pos:end="117:19"><decl pos:start="117:9" pos:end="117:18"><type pos:start="117:9" pos:end="117:17"><name pos:start="117:9" pos:end="117:15">uint8_t</name> <modifier pos:start="117:17" pos:end="117:17">*</modifier></type><name pos:start="117:18" pos:end="117:18">d</name></decl>;</decl_stmt>

        <decl_stmt pos:start="119:9" pos:end="119:16"><decl pos:start="119:9" pos:end="119:15"><type pos:start="119:9" pos:end="119:11"><name pos:start="119:9" pos:end="119:11">int</name></type> <name pos:start="119:13" pos:end="119:15">bpp</name></decl>;</decl_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:48"><expr pos:start="123:9" pos:end="123:47"><name pos:start="123:9" pos:end="123:11">bpp</name> <operator pos:start="123:13" pos:end="123:13">=</operator> <call pos:start="123:15" pos:end="123:47"><name pos:start="123:15" pos:end="123:35">ds_get_bits_per_pixel</name><argument_list pos:start="123:36" pos:end="123:47">(<argument pos:start="123:37" pos:end="123:46"><expr pos:start="123:37" pos:end="123:46"><name pos:start="123:37" pos:end="123:46"><name pos:start="123:37" pos:end="123:37">s</name><operator pos:start="123:38" pos:end="123:39">-&gt;</operator><name pos:start="123:40" pos:end="123:46">console</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:37"><expr pos:start="125:9" pos:end="125:36"><call pos:start="125:9" pos:end="125:36"><name pos:start="125:9" pos:end="125:31">fimd_update_putpix_qemu</name><argument_list pos:start="125:32" pos:end="125:36">(<argument pos:start="125:33" pos:end="125:35"><expr pos:start="125:33" pos:end="125:35"><name pos:start="125:33" pos:end="125:35">bpp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:29"><expr pos:start="127:9" pos:end="127:28"><name pos:start="127:9" pos:end="127:11">bpp</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <operator pos:start="127:15" pos:end="127:15">(</operator><name pos:start="127:16" pos:end="127:18">bpp</name> <operator pos:start="127:20" pos:end="127:20">+</operator> <literal type="number" pos:start="127:22" pos:end="127:22">1</literal><operator pos:start="127:23" pos:end="127:23">)</operator> <operator pos:start="127:25" pos:end="127:26">&gt;&gt;</operator> <literal type="number" pos:start="127:28" pos:end="127:28">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:36"><expr pos:start="129:9" pos:end="129:35"><name pos:start="129:9" pos:end="129:9">d</name> <operator pos:start="129:11" pos:end="129:11">=</operator> <call pos:start="129:13" pos:end="129:35"><name pos:start="129:13" pos:end="129:23">ds_get_data</name><argument_list pos:start="129:24" pos:end="129:35">(<argument pos:start="129:25" pos:end="129:34"><expr pos:start="129:25" pos:end="129:34"><name pos:start="129:25" pos:end="129:34"><name pos:start="129:25" pos:end="129:25">s</name><operator pos:start="129:26" pos:end="129:27">-&gt;</operator><name pos:start="129:28" pos:end="129:34">console</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="131:9" pos:end="137:9">for <control pos:start="131:13" pos:end="131:58">(<init pos:start="131:14" pos:end="131:31"><expr pos:start="131:14" pos:end="131:30"><name pos:start="131:14" pos:end="131:17">line</name> <operator pos:start="131:19" pos:end="131:19">=</operator> <name pos:start="131:21" pos:end="131:30">first_line</name></expr>;</init> <condition pos:start="131:33" pos:end="131:50"><expr pos:start="131:33" pos:end="131:49"><name pos:start="131:33" pos:end="131:36">line</name> <operator pos:start="131:38" pos:end="131:39">&lt;=</operator> <name pos:start="131:41" pos:end="131:49">last_line</name></expr>;</condition> <incr pos:start="131:52" pos:end="131:57"><expr pos:start="131:52" pos:end="131:57"><name pos:start="131:52" pos:end="131:55">line</name><operator pos:start="131:56" pos:end="131:57">++</operator></expr></incr>)</control> <block pos:start="131:60" pos:end="137:9">{<block_content pos:start="133:13" pos:end="135:62">

            <expr_stmt pos:start="133:13" pos:end="135:62"><expr pos:start="133:13" pos:end="135:61"><call pos:start="133:13" pos:end="135:61"><name pos:start="133:13" pos:end="133:33">fimd_copy_line_toqemu</name><argument_list pos:start="133:34" pos:end="135:61">(<argument pos:start="133:35" pos:end="133:46"><expr pos:start="133:35" pos:end="133:46"><name pos:start="133:35" pos:end="133:46">global_width</name></expr></argument>, <argument pos:start="133:49" pos:end="135:29"><expr pos:start="133:49" pos:end="135:29"><name pos:start="133:49" pos:end="133:54"><name pos:start="133:49" pos:end="133:49">s</name><operator pos:start="133:50" pos:end="133:51">-&gt;</operator><name pos:start="133:52" pos:end="133:54">ifb</name></name> <operator pos:start="133:56" pos:end="133:56">+</operator> <name pos:start="133:58" pos:end="133:69">global_width</name> <operator pos:start="133:71" pos:end="133:71">*</operator> <name pos:start="133:73" pos:end="133:76">line</name> <operator pos:start="133:78" pos:end="133:78">*</operator>

                    <name pos:start="135:21" pos:end="135:29">RGBA_SIZE</name></expr></argument>, <argument pos:start="135:32" pos:end="135:60"><expr pos:start="135:32" pos:end="135:60"><name pos:start="135:32" pos:end="135:32">d</name> <operator pos:start="135:34" pos:end="135:34">+</operator> <name pos:start="135:36" pos:end="135:47">global_width</name> <operator pos:start="135:49" pos:end="135:49">*</operator> <name pos:start="135:51" pos:end="135:54">line</name> <operator pos:start="135:56" pos:end="135:56">*</operator> <name pos:start="135:58" pos:end="135:60">bpp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="139:9" pos:end="139:66"><expr pos:start="139:9" pos:end="139:65"><call pos:start="139:9" pos:end="139:65"><name pos:start="139:9" pos:end="139:18">dpy_update</name><argument_list pos:start="139:19" pos:end="139:65">(<argument pos:start="139:20" pos:end="139:29"><expr pos:start="139:20" pos:end="139:29"><name pos:start="139:20" pos:end="139:29"><name pos:start="139:20" pos:end="139:20">s</name><operator pos:start="139:21" pos:end="139:22">-&gt;</operator><name pos:start="139:23" pos:end="139:29">console</name></name></expr></argument>, <argument pos:start="139:32" pos:end="139:32"><expr pos:start="139:32" pos:end="139:32"><literal type="number" pos:start="139:32" pos:end="139:32">0</literal></expr></argument>, <argument pos:start="139:35" pos:end="139:35"><expr pos:start="139:35" pos:end="139:35"><literal type="number" pos:start="139:35" pos:end="139:35">0</literal></expr></argument>, <argument pos:start="139:38" pos:end="139:49"><expr pos:start="139:38" pos:end="139:49"><name pos:start="139:38" pos:end="139:49">global_width</name></expr></argument>, <argument pos:start="139:52" pos:end="139:64"><expr pos:start="139:52" pos:end="139:64"><name pos:start="139:52" pos:end="139:64">global_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:26"><expr pos:start="143:5" pos:end="143:25"><name pos:start="143:5" pos:end="143:17"><name pos:start="143:5" pos:end="143:5">s</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:17">invalidate</name></name> <operator pos:start="143:19" pos:end="143:19">=</operator> <name pos:start="143:21" pos:end="143:25">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:46"><expr pos:start="145:5" pos:end="145:45"><name pos:start="145:5" pos:end="145:19"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:16">vidintcon</name><index pos:start="145:17" pos:end="145:19">[<expr pos:start="145:18" pos:end="145:18"><literal type="number" pos:start="145:18" pos:end="145:18">1</literal></expr>]</index></name> <operator pos:start="145:21" pos:end="145:22">|=</operator> <name pos:start="145:24" pos:end="145:45">FIMD_VIDINT_INTFRMPEND</name></expr>;</expr_stmt>

    <if_stmt pos:start="147:5" pos:end="151:5"><if pos:start="147:5" pos:end="151:5">if <condition pos:start="147:8" pos:end="147:51">(<expr pos:start="147:9" pos:end="147:50"><operator pos:start="147:9" pos:end="147:9">(</operator><name pos:start="147:10" pos:end="147:21"><name pos:start="147:10" pos:end="147:10">s</name><operator pos:start="147:11" pos:end="147:12">-&gt;</operator><name pos:start="147:13" pos:end="147:18">vidcon</name><index pos:start="147:19" pos:end="147:21">[<expr pos:start="147:20" pos:end="147:20"><literal type="number" pos:start="147:20" pos:end="147:20">0</literal></expr>]</index></name> <operator pos:start="147:23" pos:end="147:23">&amp;</operator> <name pos:start="147:25" pos:end="147:44">FIMD_VIDCON0_ENVID_F</name><operator pos:start="147:45" pos:end="147:45">)</operator> <operator pos:start="147:47" pos:end="147:48">==</operator> <literal type="number" pos:start="147:50" pos:end="147:50">0</literal></expr>)</condition> <block pos:start="147:53" pos:end="151:5">{<block_content pos:start="149:9" pos:end="149:41">

        <expr_stmt pos:start="149:9" pos:end="149:41"><expr pos:start="149:9" pos:end="149:40"><call pos:start="149:9" pos:end="149:40"><name pos:start="149:9" pos:end="149:30">exynos4210_fimd_enable</name><argument_list pos:start="149:31" pos:end="149:40">(<argument pos:start="149:32" pos:end="149:32"><expr pos:start="149:32" pos:end="149:32"><name pos:start="149:32" pos:end="149:32">s</name></expr></argument>, <argument pos:start="149:35" pos:end="149:39"><expr pos:start="149:35" pos:end="149:39"><name pos:start="149:35" pos:end="149:39">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:34"><expr pos:start="153:5" pos:end="153:33"><call pos:start="153:5" pos:end="153:33"><name pos:start="153:5" pos:end="153:30">exynos4210_fimd_update_irq</name><argument_list pos:start="153:31" pos:end="153:33">(<argument pos:start="153:32" pos:end="153:32"><expr pos:start="153:32" pos:end="153:32"><name pos:start="153:32" pos:end="153:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
