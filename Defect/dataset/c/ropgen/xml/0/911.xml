<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/911.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">pxa2xx_gpio_write</name><parameter_list pos:start="1:30" pos:end="3:60">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:50">hwaddr</name></type> <name pos:start="1:52" pos:end="1:57">offset</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:44"><decl pos:start="3:31" pos:end="3:44"><type pos:start="3:31" pos:end="3:44"><name pos:start="3:31" pos:end="3:38">uint64_t</name></type> <name pos:start="3:40" pos:end="3:44">value</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:59"><decl pos:start="3:47" pos:end="3:59"><type pos:start="3:47" pos:end="3:59"><name pos:start="3:47" pos:end="3:54">unsigned</name></type> <name pos:start="3:56" pos:end="3:59">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="99:1">{<block_content pos:start="7:5" pos:end="97:5">

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">PXA2xxGPIOInfo</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:49">= <expr pos:start="7:25" pos:end="7:49"><operator pos:start="7:25" pos:end="7:25">(</operator><name pos:start="7:26" pos:end="7:39">PXA2xxGPIOInfo</name> <operator pos:start="7:41" pos:end="7:41">*</operator><operator pos:start="7:42" pos:end="7:42">)</operator> <name pos:start="7:44" pos:end="7:49">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">bank</name></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="13:15"><if pos:start="11:5" pos:end="13:15">if <condition pos:start="11:8" pos:end="11:24">(<expr pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:14">offset</name> <operator pos:start="11:16" pos:end="11:17">&gt;=</operator> <literal type="number" pos:start="11:19" pos:end="11:23">0x200</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:15"><block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:41"><expr pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:8">bank</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <name pos:start="17:12" pos:end="17:35"><name pos:start="17:12" pos:end="17:27">pxa2xx_gpio_regs</name><index pos:start="17:28" pos:end="17:35">[<expr pos:start="17:29" pos:end="17:34"><name pos:start="17:29" pos:end="17:34">offset</name></expr>]</index></name><operator pos:start="17:36" pos:end="17:36">.</operator><name pos:start="17:37" pos:end="17:40">bank</name></expr>;</expr_stmt>

    <switch pos:start="19:5" pos:end="97:5">switch <condition pos:start="19:12" pos:end="19:41">(<expr pos:start="19:13" pos:end="19:40"><name pos:start="19:13" pos:end="19:36"><name pos:start="19:13" pos:end="19:28">pxa2xx_gpio_regs</name><index pos:start="19:29" pos:end="19:36">[<expr pos:start="19:30" pos:end="19:35"><name pos:start="19:30" pos:end="19:35">offset</name></expr>]</index></name><operator pos:start="19:37" pos:end="19:37">.</operator><name pos:start="19:38" pos:end="19:40">reg</name></expr>)</condition> <block pos:start="19:43" pos:end="97:5">{<block_content pos:start="21:5" pos:end="95:71">

    <case pos:start="21:5" pos:end="21:14">case <expr pos:start="21:10" pos:end="21:13"><name pos:start="21:10" pos:end="21:13">GPDR</name></expr>:</case>		<comment type="block" pos:start="21:25" pos:end="21:58">/* GPIO Pin-Direction registers */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:14">dir</name><index pos:start="23:15" pos:end="23:20">[<expr pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:19">bank</name></expr>]</index></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:28">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:38"><expr pos:start="25:9" pos:end="25:37"><call pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:34">pxa2xx_gpio_handler_update</name><argument_list pos:start="25:35" pos:end="25:37">(<argument pos:start="25:36" pos:end="25:36"><expr pos:start="25:36" pos:end="25:36"><name pos:start="25:36" pos:end="25:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>



    <case pos:start="31:5" pos:end="31:14">case <expr pos:start="31:10" pos:end="31:13"><name pos:start="31:10" pos:end="31:13">GPSR</name></expr>:</case>		<comment type="block" pos:start="31:25" pos:end="31:59">/* GPIO Pin-Output Set registers */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:33"><expr pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:17">olevel</name><index pos:start="33:18" pos:end="33:23">[<expr pos:start="33:19" pos:end="33:22"><name pos:start="33:19" pos:end="33:22">bank</name></expr>]</index></name> <operator pos:start="33:25" pos:end="33:26">|=</operator> <name pos:start="33:28" pos:end="33:32">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:38"><expr pos:start="35:9" pos:end="35:37"><call pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:34">pxa2xx_gpio_handler_update</name><argument_list pos:start="35:35" pos:end="35:37">(<argument pos:start="35:36" pos:end="35:36"><expr pos:start="35:36" pos:end="35:36"><name pos:start="35:36" pos:end="35:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>



    <case pos:start="41:5" pos:end="41:14">case <expr pos:start="41:10" pos:end="41:13"><name pos:start="41:10" pos:end="41:13">GPCR</name></expr>:</case>		<comment type="block" pos:start="41:25" pos:end="41:61">/* GPIO Pin-Output Clear registers */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:34"><expr pos:start="43:9" pos:end="43:33"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:17">olevel</name><index pos:start="43:18" pos:end="43:23">[<expr pos:start="43:19" pos:end="43:22"><name pos:start="43:19" pos:end="43:22">bank</name></expr>]</index></name> <operator pos:start="43:25" pos:end="43:26">&amp;=</operator> <operator pos:start="43:28" pos:end="43:28">~</operator><name pos:start="43:29" pos:end="43:33">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:38"><expr pos:start="45:9" pos:end="45:37"><call pos:start="45:9" pos:end="45:37"><name pos:start="45:9" pos:end="45:34">pxa2xx_gpio_handler_update</name><argument_list pos:start="45:35" pos:end="45:37">(<argument pos:start="45:36" pos:end="45:36"><expr pos:start="45:36" pos:end="45:36"><name pos:start="45:36" pos:end="45:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>



    <case pos:start="51:5" pos:end="51:14">case <expr pos:start="51:10" pos:end="51:13"><name pos:start="51:10" pos:end="51:13">GRER</name></expr>:</case>		<comment type="block" pos:start="51:25" pos:end="51:70">/* GPIO Rising-Edge Detect Enable registers */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:32"><expr pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:17">rising</name><index pos:start="53:18" pos:end="53:23">[<expr pos:start="53:19" pos:end="53:22"><name pos:start="53:19" pos:end="53:22">bank</name></expr>]</index></name> <operator pos:start="53:25" pos:end="53:25">=</operator> <name pos:start="53:27" pos:end="53:31">value</name></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>



    <case pos:start="59:5" pos:end="59:14">case <expr pos:start="59:10" pos:end="59:13"><name pos:start="59:10" pos:end="59:13">GFER</name></expr>:</case>		<comment type="block" pos:start="59:25" pos:end="59:71">/* GPIO Falling-Edge Detect Enable registers */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:33"><expr pos:start="61:9" pos:end="61:32"><name pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:18">falling</name><index pos:start="61:19" pos:end="61:24">[<expr pos:start="61:20" pos:end="61:23"><name pos:start="61:20" pos:end="61:23">bank</name></expr>]</index></name> <operator pos:start="61:26" pos:end="61:26">=</operator> <name pos:start="61:28" pos:end="61:32">value</name></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>



    <case pos:start="67:5" pos:end="67:16">case <expr pos:start="67:10" pos:end="67:15"><name pos:start="67:10" pos:end="67:15">GAFR_L</name></expr>:</case>	<comment type="block" pos:start="67:25" pos:end="67:63">/* GPIO Alternate Function registers */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:34"><expr pos:start="69:9" pos:end="69:33"><name pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:15">gafr</name><index pos:start="69:16" pos:end="69:25">[<expr pos:start="69:17" pos:end="69:24"><name pos:start="69:17" pos:end="69:20">bank</name> <operator pos:start="69:22" pos:end="69:22">*</operator> <literal type="number" pos:start="69:24" pos:end="69:24">2</literal></expr>]</index></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <name pos:start="69:29" pos:end="69:33">value</name></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>



    <case pos:start="75:5" pos:end="75:16">case <expr pos:start="75:10" pos:end="75:15"><name pos:start="75:10" pos:end="75:15">GAFR_U</name></expr>:</case>	<comment type="block" pos:start="75:25" pos:end="75:63">/* GPIO Alternate Function registers */</comment>

        <expr_stmt pos:start="77:9" pos:end="77:38"><expr pos:start="77:9" pos:end="77:37"><name pos:start="77:9" pos:end="77:29"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:15">gafr</name><index pos:start="77:16" pos:end="77:29">[<expr pos:start="77:17" pos:end="77:28"><name pos:start="77:17" pos:end="77:20">bank</name> <operator pos:start="77:22" pos:end="77:22">*</operator> <literal type="number" pos:start="77:24" pos:end="77:24">2</literal> <operator pos:start="77:26" pos:end="77:26">+</operator> <literal type="number" pos:start="77:28" pos:end="77:28">1</literal></expr>]</index></name> <operator pos:start="77:31" pos:end="77:31">=</operator> <name pos:start="77:33" pos:end="77:37">value</name></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>



    <case pos:start="83:5" pos:end="83:14">case <expr pos:start="83:10" pos:end="83:13"><name pos:start="83:10" pos:end="83:13">GEDR</name></expr>:</case>		<comment type="block" pos:start="83:25" pos:end="83:63">/* GPIO Edge Detect Status registers */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:34"><expr pos:start="85:9" pos:end="85:33"><name pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:17">status</name><index pos:start="85:18" pos:end="85:23">[<expr pos:start="85:19" pos:end="85:22"><name pos:start="85:19" pos:end="85:22">bank</name></expr>]</index></name> <operator pos:start="85:25" pos:end="85:26">&amp;=</operator> <operator pos:start="85:28" pos:end="85:28">~</operator><name pos:start="85:29" pos:end="85:33">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:34"><expr pos:start="87:9" pos:end="87:33"><call pos:start="87:9" pos:end="87:33"><name pos:start="87:9" pos:end="87:30">pxa2xx_gpio_irq_update</name><argument_list pos:start="87:31" pos:end="87:33">(<argument pos:start="87:32" pos:end="87:32"><expr pos:start="87:32" pos:end="87:32"><name pos:start="87:32" pos:end="87:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>



    <default pos:start="93:5" pos:end="93:12">default:</default>

        <expr_stmt pos:start="95:9" pos:end="95:71"><expr pos:start="95:9" pos:end="95:70"><call pos:start="95:9" pos:end="95:70"><name pos:start="95:9" pos:end="95:16">hw_error</name><argument_list pos:start="95:17" pos:end="95:70">(<argument pos:start="95:18" pos:end="95:47"><expr pos:start="95:18" pos:end="95:47"><literal type="string" pos:start="95:18" pos:end="95:34">"%s: Bad offset "</literal> <name pos:start="95:36" pos:end="95:42">REG_FMT</name> <literal type="string" pos:start="95:44" pos:end="95:47">"\n"</literal></expr></argument>, <argument pos:start="95:50" pos:end="95:61"><expr pos:start="95:50" pos:end="95:61"><name pos:start="95:50" pos:end="95:61">__FUNCTION__</name></expr></argument>, <argument pos:start="95:64" pos:end="95:69"><expr pos:start="95:64" pos:end="95:69"><name pos:start="95:64" pos:end="95:69">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
