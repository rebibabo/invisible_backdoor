<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7319.c" pos:tabs="8"><function pos:start="1:1" pos:end="325:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">process_input</name><parameter_list pos:start="1:25" pos:end="1:30">(<parameter pos:start="1:26" pos:end="1:29"><decl pos:start="1:26" pos:end="1:29"><type pos:start="1:26" pos:end="1:29"><name pos:start="1:26" pos:end="1:29">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="325:1">{<block_content pos:start="5:5" pos:end="323:13">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">InputFile</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">ifile</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">is</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">InputStream</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">ist</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">AVPacket</name></type> <name pos:start="11:14" pos:end="11:16">pkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:14">i</name></decl>, <decl pos:start="13:17" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:17" pos:end="13:17">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">file_index</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:49">/* select the stream that we must read now */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:14">file_index</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:36"><name pos:start="21:18" pos:end="21:34">select_input_file</name><argument_list pos:start="21:35" pos:end="21:36">()</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="23:5" pos:end="23:33">/* if none, if is finished */</comment>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:25">(<expr pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:18">file_index</name> <operator pos:start="25:20" pos:end="25:21">==</operator> <operator pos:start="25:23" pos:end="25:23">-</operator><literal type="number" pos:start="25:24" pos:end="25:24">2</literal></expr>)</condition> <block pos:start="25:27" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:31">

        <expr_stmt pos:start="27:9" pos:end="27:24"><expr pos:start="27:9" pos:end="27:22"><call pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:20">poll_filters</name><argument_list pos:start="27:21" pos:end="27:22">()</argument_list></call></expr> ;</expr_stmt>

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="49:5"><if pos:start="33:5" pos:end="49:5">if <condition pos:start="33:8" pos:end="33:23">(<expr pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:18">file_index</name> <operator pos:start="33:20" pos:end="33:20">&lt;</operator> <literal type="number" pos:start="33:22" pos:end="33:22">0</literal></expr>)</condition> <block pos:start="33:25" pos:end="49:5">{<block_content pos:start="35:9" pos:end="47:27">

        <if_stmt pos:start="35:9" pos:end="43:9"><if pos:start="35:9" pos:end="43:9">if <condition pos:start="35:12" pos:end="35:25">(<expr pos:start="35:13" pos:end="35:24"><call pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:22">got_eagain</name><argument_list pos:start="35:23" pos:end="35:24">()</argument_list></call></expr>)</condition> <block pos:start="35:27" pos:end="43:9">{<block_content pos:start="37:13" pos:end="41:35">

            <expr_stmt pos:start="37:13" pos:end="37:27"><expr pos:start="37:13" pos:end="37:26"><call pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:24">reset_eagain</name><argument_list pos:start="37:25" pos:end="37:26">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:29"><expr pos:start="39:13" pos:end="39:28"><call pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:21">av_usleep</name><argument_list pos:start="39:22" pos:end="39:28">(<argument pos:start="39:23" pos:end="39:27"><expr pos:start="39:23" pos:end="39:27"><literal type="number" pos:start="39:23" pos:end="39:27">10000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:35">return <expr pos:start="41:20" pos:end="41:34"><call pos:start="41:20" pos:end="41:34"><name pos:start="41:20" pos:end="41:26">AVERROR</name><argument_list pos:start="41:27" pos:end="41:34">(<argument pos:start="41:28" pos:end="41:33"><expr pos:start="41:28" pos:end="41:33"><name pos:start="41:28" pos:end="41:33">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:82"><expr pos:start="45:9" pos:end="45:81"><call pos:start="45:9" pos:end="45:81"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:81">(<argument pos:start="45:16" pos:end="45:19"><expr pos:start="45:16" pos:end="45:19"><name pos:start="45:16" pos:end="45:19">NULL</name></expr></argument>, <argument pos:start="45:22" pos:end="45:35"><expr pos:start="45:22" pos:end="45:35"><name pos:start="45:22" pos:end="45:35">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="45:38" pos:end="45:80"><expr pos:start="45:38" pos:end="45:80"><literal type="string" pos:start="45:38" pos:end="45:80">"No more inputs to read from, finishing.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:27">return <expr pos:start="47:16" pos:end="47:26"><name pos:start="47:16" pos:end="47:26">AVERROR_EOF</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:36"><expr pos:start="51:5" pos:end="51:35"><name pos:start="51:5" pos:end="51:9">ifile</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <name pos:start="51:13" pos:end="51:35"><name pos:start="51:13" pos:end="51:23">input_files</name><index pos:start="51:24" pos:end="51:35">[<expr pos:start="51:25" pos:end="51:34"><name pos:start="51:25" pos:end="51:34">file_index</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:21"><expr pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:6">is</name>  <operator pos:start="55:9" pos:end="55:9">=</operator> <name pos:start="55:11" pos:end="55:20"><name pos:start="55:11" pos:end="55:15">ifile</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:20">ctx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:40"><expr pos:start="57:5" pos:end="57:39"><name pos:start="57:5" pos:end="57:7">ret</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <call pos:start="57:11" pos:end="57:39"><name pos:start="57:11" pos:end="57:26">get_input_packet</name><argument_list pos:start="57:27" pos:end="57:39">(<argument pos:start="57:28" pos:end="57:32"><expr pos:start="57:28" pos:end="57:32"><name pos:start="57:28" pos:end="57:32">ifile</name></expr></argument>, <argument pos:start="57:35" pos:end="57:38"><expr pos:start="57:35" pos:end="57:38"><operator pos:start="57:35" pos:end="57:35">&amp;</operator><name pos:start="57:36" pos:end="57:38">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:31">(<expr pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:14">==</operator> <call pos:start="61:16" pos:end="61:30"><name pos:start="61:16" pos:end="61:22">AVERROR</name><argument_list pos:start="61:23" pos:end="61:30">(<argument pos:start="61:24" pos:end="61:29"><expr pos:start="61:24" pos:end="61:29"><name pos:start="61:24" pos:end="61:29">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:33" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:19">

        <expr_stmt pos:start="63:9" pos:end="63:26"><expr pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:13">ifile</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:21">eagain</name></name> <operator pos:start="63:23" pos:end="63:23">=</operator> <literal type="number" pos:start="63:25" pos:end="63:25">1</literal></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:19">return <expr pos:start="65:16" pos:end="65:18"><name pos:start="65:16" pos:end="65:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="69:5" pos:end="107:5"><if pos:start="69:5" pos:end="107:5">if <condition pos:start="69:8" pos:end="69:16">(<expr pos:start="69:9" pos:end="69:15"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">&lt;</operator> <literal type="number" pos:start="69:15" pos:end="69:15">0</literal></expr>)</condition> <block pos:start="69:18" pos:end="107:5">{<block_content pos:start="71:9" pos:end="105:35">

        <if_stmt pos:start="71:9" pos:end="79:9"><if pos:start="71:9" pos:end="79:9">if <condition pos:start="71:12" pos:end="71:31">(<expr pos:start="71:13" pos:end="71:30"><name pos:start="71:13" pos:end="71:15">ret</name> <operator pos:start="71:17" pos:end="71:18">!=</operator> <name pos:start="71:20" pos:end="71:30">AVERROR_EOF</name></expr>)</condition> <block pos:start="71:33" pos:end="79:9">{<block_content pos:start="73:13" pos:end="77:32">

            <expr_stmt pos:start="73:13" pos:end="73:43"><expr pos:start="73:13" pos:end="73:42"><call pos:start="73:13" pos:end="73:42"><name pos:start="73:13" pos:end="73:23">print_error</name><argument_list pos:start="73:24" pos:end="73:42">(<argument pos:start="73:25" pos:end="73:36"><expr pos:start="73:25" pos:end="73:36"><name pos:start="73:25" pos:end="73:36"><name pos:start="73:25" pos:end="73:26">is</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:36">filename</name></name></expr></argument>, <argument pos:start="73:39" pos:end="73:41"><expr pos:start="73:39" pos:end="73:41"><name pos:start="73:39" pos:end="73:41">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="75:13" pos:end="77:32"><if pos:start="75:13" pos:end="77:32">if <condition pos:start="75:16" pos:end="75:30">(<expr pos:start="75:17" pos:end="75:29"><name pos:start="75:17" pos:end="75:29">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:32"><block_content pos:start="77:17" pos:end="77:32">

                <expr_stmt pos:start="77:17" pos:end="77:32"><expr pos:start="77:17" pos:end="77:31"><call pos:start="77:17" pos:end="77:31"><name pos:start="77:17" pos:end="77:28">exit_program</name><argument_list pos:start="77:29" pos:end="77:31">(<argument pos:start="77:30" pos:end="77:30"><expr pos:start="77:30" pos:end="77:30"><literal type="number" pos:start="77:30" pos:end="77:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:31"><expr pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:13">ifile</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:26">eof_reached</name></name> <operator pos:start="81:28" pos:end="81:28">=</operator> <literal type="number" pos:start="81:30" pos:end="81:30">1</literal></expr>;</expr_stmt>



        <for pos:start="85:9" pos:end="95:9">for <control pos:start="85:13" pos:end="85:47">(<init pos:start="85:14" pos:end="85:19"><expr pos:start="85:14" pos:end="85:18"><name pos:start="85:14" pos:end="85:14">i</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <literal type="number" pos:start="85:18" pos:end="85:18">0</literal></expr>;</init> <condition pos:start="85:21" pos:end="85:42"><expr pos:start="85:21" pos:end="85:41"><name pos:start="85:21" pos:end="85:21">i</name> <operator pos:start="85:23" pos:end="85:23">&lt;</operator> <name pos:start="85:25" pos:end="85:41"><name pos:start="85:25" pos:end="85:29">ifile</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:41">nb_streams</name></name></expr>;</condition> <incr pos:start="85:44" pos:end="85:46"><expr pos:start="85:44" pos:end="85:46"><name pos:start="85:44" pos:end="85:44">i</name><operator pos:start="85:45" pos:end="85:46">++</operator></expr></incr>)</control> <block pos:start="85:49" pos:end="95:9">{<block_content pos:start="87:13" pos:end="93:27">

            <expr_stmt pos:start="87:13" pos:end="87:54"><expr pos:start="87:13" pos:end="87:53"><name pos:start="87:13" pos:end="87:15">ist</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <name pos:start="87:19" pos:end="87:53"><name pos:start="87:19" pos:end="87:31">input_streams</name><index pos:start="87:32" pos:end="87:53">[<expr pos:start="87:33" pos:end="87:52"><name pos:start="87:33" pos:end="87:48"><name pos:start="87:33" pos:end="87:37">ifile</name><operator pos:start="87:38" pos:end="87:39">-&gt;</operator><name pos:start="87:40" pos:end="87:48">ist_index</name></name> <operator pos:start="87:50" pos:end="87:50">+</operator> <name pos:start="87:52" pos:end="87:52">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="91:41"><if pos:start="89:13" pos:end="91:41">if <condition pos:start="89:16" pos:end="89:37">(<expr pos:start="89:17" pos:end="89:36"><name pos:start="89:17" pos:end="89:36"><name pos:start="89:17" pos:end="89:19">ist</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:36">decoding_needed</name></name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:41"><block_content pos:start="91:17" pos:end="91:41">

                <expr_stmt pos:start="91:17" pos:end="91:41"><expr pos:start="91:17" pos:end="91:40"><call pos:start="91:17" pos:end="91:40"><name pos:start="91:17" pos:end="91:29">output_packet</name><argument_list pos:start="91:30" pos:end="91:40">(<argument pos:start="91:31" pos:end="91:33"><expr pos:start="91:31" pos:end="91:33"><name pos:start="91:31" pos:end="91:33">ist</name></expr></argument>, <argument pos:start="91:36" pos:end="91:39"><expr pos:start="91:36" pos:end="91:39"><name pos:start="91:36" pos:end="91:39">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:27"><expr pos:start="93:13" pos:end="93:26"><call pos:start="93:13" pos:end="93:26"><name pos:start="93:13" pos:end="93:24">poll_filters</name><argument_list pos:start="93:25" pos:end="93:26">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="99:9" pos:end="105:35"><if pos:start="99:9" pos:end="101:31">if <condition pos:start="99:12" pos:end="99:25">(<expr pos:start="99:13" pos:end="99:24"><name pos:start="99:13" pos:end="99:24">opt_shortest</name></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:31"><block_content pos:start="101:13" pos:end="101:31">

            <return pos:start="101:13" pos:end="101:31">return <expr pos:start="101:20" pos:end="101:30"><name pos:start="101:20" pos:end="101:30">AVERROR_EOF</name></expr>;</return></block_content></block></if>

        <else pos:start="103:9" pos:end="105:35">else<block type="pseudo" pos:start="105:13" pos:end="105:35"><block_content pos:start="105:13" pos:end="105:35">

            <return pos:start="105:13" pos:end="105:35">return <expr pos:start="105:20" pos:end="105:34"><call pos:start="105:20" pos:end="105:34"><name pos:start="105:20" pos:end="105:26">AVERROR</name><argument_list pos:start="105:27" pos:end="105:34">(<argument pos:start="105:28" pos:end="105:33"><expr pos:start="105:28" pos:end="105:33"><name pos:start="105:28" pos:end="105:33">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:19"><expr pos:start="111:5" pos:end="111:18"><call pos:start="111:5" pos:end="111:18"><name pos:start="111:5" pos:end="111:16">reset_eagain</name><argument_list pos:start="111:17" pos:end="111:18">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:20">(<expr pos:start="115:9" pos:end="115:19"><name pos:start="115:9" pos:end="115:19">do_pkt_dump</name></expr>)</condition> <block pos:start="115:22" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:56">

        <expr_stmt pos:start="117:9" pos:end="119:56"><expr pos:start="117:9" pos:end="119:55"><call pos:start="117:9" pos:end="119:55"><name pos:start="117:9" pos:end="117:24">av_pkt_dump_log2</name><argument_list pos:start="117:25" pos:end="119:55">(<argument pos:start="117:26" pos:end="117:29"><expr pos:start="117:26" pos:end="117:29"><name pos:start="117:26" pos:end="117:29">NULL</name></expr></argument>, <argument pos:start="117:32" pos:end="117:43"><expr pos:start="117:32" pos:end="117:43"><name pos:start="117:32" pos:end="117:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="117:46" pos:end="117:49"><expr pos:start="117:46" pos:end="117:49"><operator pos:start="117:46" pos:end="117:46">&amp;</operator><name pos:start="117:47" pos:end="117:49">pkt</name></expr></argument>, <argument pos:start="117:52" pos:end="117:62"><expr pos:start="117:52" pos:end="117:62"><name pos:start="117:52" pos:end="117:62">do_hex_dump</name></expr></argument>,

                         <argument pos:start="119:26" pos:end="119:54"><expr pos:start="119:26" pos:end="119:54"><name pos:start="119:26" pos:end="119:54"><name pos:start="119:26" pos:end="119:27">is</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:36">streams</name><index pos:start="119:37" pos:end="119:54">[<expr pos:start="119:38" pos:end="119:53"><name pos:start="119:38" pos:end="119:53"><name pos:start="119:38" pos:end="119:40">pkt</name><operator pos:start="119:41" pos:end="119:41">.</operator><name pos:start="119:42" pos:end="119:53">stream_index</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="123:5" pos:end="125:48">/* the following test is needed in case new streams appear

       dynamically in stream : we ignore them */</comment>

    <if_stmt pos:start="127:5" pos:end="133:5"><if pos:start="127:5" pos:end="133:5">if <condition pos:start="127:8" pos:end="127:46">(<expr pos:start="127:9" pos:end="127:45"><name pos:start="127:9" pos:end="127:24"><name pos:start="127:9" pos:end="127:11">pkt</name><operator pos:start="127:12" pos:end="127:12">.</operator><name pos:start="127:13" pos:end="127:24">stream_index</name></name> <operator pos:start="127:26" pos:end="127:27">&gt;=</operator> <name pos:start="127:29" pos:end="127:45"><name pos:start="127:29" pos:end="127:33">ifile</name><operator pos:start="127:34" pos:end="127:35">-&gt;</operator><name pos:start="127:36" pos:end="127:45">nb_streams</name></name></expr>)</condition> <block pos:start="127:48" pos:end="133:5">{<block_content pos:start="129:9" pos:end="131:28">

        <expr_stmt pos:start="129:9" pos:end="129:44"><expr pos:start="129:9" pos:end="129:43"><call pos:start="129:9" pos:end="129:43"><name pos:start="129:9" pos:end="129:25">report_new_stream</name><argument_list pos:start="129:26" pos:end="129:43">(<argument pos:start="129:27" pos:end="129:36"><expr pos:start="129:27" pos:end="129:36"><name pos:start="129:27" pos:end="129:36">file_index</name></expr></argument>, <argument pos:start="129:39" pos:end="129:42"><expr pos:start="129:39" pos:end="129:42"><operator pos:start="129:39" pos:end="129:39">&amp;</operator><name pos:start="129:40" pos:end="129:42">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="131:9" pos:end="131:28">goto <name pos:start="131:14" pos:end="131:27">discard_packet</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:61"><expr pos:start="137:5" pos:end="137:60"><name pos:start="137:5" pos:end="137:7">ist</name> <operator pos:start="137:9" pos:end="137:9">=</operator> <name pos:start="137:11" pos:end="137:60"><name pos:start="137:11" pos:end="137:23">input_streams</name><index pos:start="137:24" pos:end="137:60">[<expr pos:start="137:25" pos:end="137:59"><name pos:start="137:25" pos:end="137:40"><name pos:start="137:25" pos:end="137:29">ifile</name><operator pos:start="137:30" pos:end="137:31">-&gt;</operator><name pos:start="137:32" pos:end="137:40">ist_index</name></name> <operator pos:start="137:42" pos:end="137:42">+</operator> <name pos:start="137:44" pos:end="137:59"><name pos:start="137:44" pos:end="137:46">pkt</name><operator pos:start="137:47" pos:end="137:47">.</operator><name pos:start="137:48" pos:end="137:59">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="139:5" pos:end="141:28"><if pos:start="139:5" pos:end="141:28">if <condition pos:start="139:8" pos:end="139:21">(<expr pos:start="139:9" pos:end="139:20"><name pos:start="139:9" pos:end="139:20"><name pos:start="139:9" pos:end="139:11">ist</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:20">discard</name></name></expr>)</condition><block type="pseudo" pos:start="141:9" pos:end="141:28"><block_content pos:start="141:9" pos:end="141:28">

        <goto pos:start="141:9" pos:end="141:28">goto <name pos:start="141:14" pos:end="141:27">discard_packet</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="145:5" pos:end="169:5"><if pos:start="145:5" pos:end="169:5">if<condition pos:start="145:7" pos:end="145:127">(<expr pos:start="145:8" pos:end="145:126"><operator pos:start="145:8" pos:end="145:8">!</operator><name pos:start="145:9" pos:end="145:33"><name pos:start="145:9" pos:end="145:11">ist</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:33">wrap_correction_done</name></name> <operator pos:start="145:35" pos:end="145:36">&amp;&amp;</operator> <name pos:start="145:38" pos:end="145:60"><name pos:start="145:38" pos:end="145:48">input_files</name><index pos:start="145:49" pos:end="145:60">[<expr pos:start="145:50" pos:end="145:59"><name pos:start="145:50" pos:end="145:59">file_index</name></expr>]</index></name><operator pos:start="145:61" pos:end="145:62">-&gt;</operator><name pos:start="145:63" pos:end="145:77"><name pos:start="145:63" pos:end="145:65">ctx</name><operator pos:start="145:66" pos:end="145:67">-&gt;</operator><name pos:start="145:68" pos:end="145:77">start_time</name></name> <operator pos:start="145:79" pos:end="145:80">!=</operator> <name pos:start="145:82" pos:end="145:95">AV_NOPTS_VALUE</name> <operator pos:start="145:97" pos:end="145:98">&amp;&amp;</operator> <name pos:start="145:100" pos:end="145:121"><name pos:start="145:100" pos:end="145:102">ist</name><operator pos:start="145:103" pos:end="145:104">-&gt;</operator><name pos:start="145:105" pos:end="145:106">st</name><operator pos:start="145:107" pos:end="145:108">-&gt;</operator><name pos:start="145:109" pos:end="145:121">pts_wrap_bits</name></name> <operator pos:start="145:123" pos:end="145:123">&lt;</operator> <literal type="number" pos:start="145:125" pos:end="145:126">64</literal></expr>)</condition><block pos:start="145:128" pos:end="169:5">{<block_content pos:start="147:9" pos:end="167:9">

        <decl_stmt pos:start="147:9" pos:end="147:116"><decl pos:start="147:9" pos:end="147:115"><type pos:start="147:9" pos:end="147:16"><name pos:start="147:9" pos:end="147:16">uint64_t</name></type> <name pos:start="147:18" pos:end="147:22">stime</name> <init pos:start="147:24" pos:end="147:115">= <expr pos:start="147:26" pos:end="147:115"><call pos:start="147:26" pos:end="147:115"><name pos:start="147:26" pos:end="147:37">av_rescale_q</name><argument_list pos:start="147:38" pos:end="147:115">(<argument pos:start="147:39" pos:end="147:78"><expr pos:start="147:39" pos:end="147:78"><name pos:start="147:39" pos:end="147:61"><name pos:start="147:39" pos:end="147:49">input_files</name><index pos:start="147:50" pos:end="147:61">[<expr pos:start="147:51" pos:end="147:60"><name pos:start="147:51" pos:end="147:60">file_index</name></expr>]</index></name><operator pos:start="147:62" pos:end="147:63">-&gt;</operator><name pos:start="147:64" pos:end="147:78"><name pos:start="147:64" pos:end="147:66">ctx</name><operator pos:start="147:67" pos:end="147:68">-&gt;</operator><name pos:start="147:69" pos:end="147:78">start_time</name></name></expr></argument>, <argument pos:start="147:81" pos:end="147:94"><expr pos:start="147:81" pos:end="147:94"><name pos:start="147:81" pos:end="147:94">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="147:97" pos:end="147:114"><expr pos:start="147:97" pos:end="147:114"><name pos:start="147:97" pos:end="147:114"><name pos:start="147:97" pos:end="147:99">ist</name><operator pos:start="147:100" pos:end="147:101">-&gt;</operator><name pos:start="147:102" pos:end="147:103">st</name><operator pos:start="147:104" pos:end="147:105">-&gt;</operator><name pos:start="147:106" pos:end="147:114">time_base</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="149:9" pos:end="149:63"><decl pos:start="149:9" pos:end="149:62"><type pos:start="149:9" pos:end="149:16"><name pos:start="149:9" pos:end="149:16">uint64_t</name></type> <name pos:start="149:18" pos:end="149:23">stime2</name><init pos:start="149:24" pos:end="149:62">= <expr pos:start="149:26" pos:end="149:62"><name pos:start="149:26" pos:end="149:30">stime</name> <operator pos:start="149:32" pos:end="149:32">+</operator> <operator pos:start="149:34" pos:end="149:34">(</operator><literal type="number" pos:start="149:35" pos:end="149:37">1LL</literal><operator pos:start="149:38" pos:end="149:39">&lt;&lt;</operator><name pos:start="149:40" pos:end="149:61"><name pos:start="149:40" pos:end="149:42">ist</name><operator pos:start="149:43" pos:end="149:44">-&gt;</operator><name pos:start="149:45" pos:end="149:46">st</name><operator pos:start="149:47" pos:end="149:48">-&gt;</operator><name pos:start="149:49" pos:end="149:61">pts_wrap_bits</name></name><operator pos:start="149:62" pos:end="149:62">)</operator></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:38"><expr pos:start="151:9" pos:end="151:37"><name pos:start="151:9" pos:end="151:33"><name pos:start="151:9" pos:end="151:11">ist</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:33">wrap_correction_done</name></name> <operator pos:start="151:35" pos:end="151:35">=</operator> <literal type="number" pos:start="151:37" pos:end="151:37">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="153:9" pos:end="159:9"><if pos:start="153:9" pos:end="159:9">if<condition pos:start="153:11" pos:end="153:94">(<expr pos:start="153:12" pos:end="153:93"><name pos:start="153:12" pos:end="153:18"><name pos:start="153:12" pos:end="153:14">pkt</name><operator pos:start="153:15" pos:end="153:15">.</operator><name pos:start="153:16" pos:end="153:18">dts</name></name> <operator pos:start="153:20" pos:end="153:21">!=</operator> <name pos:start="153:23" pos:end="153:36">AV_NOPTS_VALUE</name> <operator pos:start="153:38" pos:end="153:39">&amp;&amp;</operator> <name pos:start="153:41" pos:end="153:47"><name pos:start="153:41" pos:end="153:43">pkt</name><operator pos:start="153:44" pos:end="153:44">.</operator><name pos:start="153:45" pos:end="153:47">dts</name></name> <operator pos:start="153:49" pos:end="153:49">&gt;</operator> <name pos:start="153:51" pos:end="153:55">stime</name> <operator pos:start="153:57" pos:end="153:58">&amp;&amp;</operator> <name pos:start="153:60" pos:end="153:66"><name pos:start="153:60" pos:end="153:62">pkt</name><operator pos:start="153:63" pos:end="153:63">.</operator><name pos:start="153:64" pos:end="153:66">dts</name></name> <operator pos:start="153:68" pos:end="153:68">-</operator> <name pos:start="153:70" pos:end="153:74">stime</name> <operator pos:start="153:76" pos:end="153:76">&gt;</operator> <name pos:start="153:78" pos:end="153:83">stime2</name> <operator pos:start="153:85" pos:end="153:85">-</operator> <name pos:start="153:87" pos:end="153:93"><name pos:start="153:87" pos:end="153:89">pkt</name><operator pos:start="153:90" pos:end="153:90">.</operator><name pos:start="153:91" pos:end="153:93">dts</name></name></expr>)</condition> <block pos:start="153:96" pos:end="159:9">{<block_content pos:start="155:13" pos:end="157:42">

            <expr_stmt pos:start="155:13" pos:end="155:51"><expr pos:start="155:13" pos:end="155:50"><name pos:start="155:13" pos:end="155:19"><name pos:start="155:13" pos:end="155:15">pkt</name><operator pos:start="155:16" pos:end="155:16">.</operator><name pos:start="155:17" pos:end="155:19">dts</name></name> <operator pos:start="155:21" pos:end="155:22">-=</operator> <literal type="number" pos:start="155:24" pos:end="155:26">1LL</literal><operator pos:start="155:27" pos:end="155:28">&lt;&lt;</operator><name pos:start="155:29" pos:end="155:50"><name pos:start="155:29" pos:end="155:31">ist</name><operator pos:start="155:32" pos:end="155:33">-&gt;</operator><name pos:start="155:34" pos:end="155:35">st</name><operator pos:start="155:36" pos:end="155:37">-&gt;</operator><name pos:start="155:38" pos:end="155:50">pts_wrap_bits</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:42"><expr pos:start="157:13" pos:end="157:41"><name pos:start="157:13" pos:end="157:37"><name pos:start="157:13" pos:end="157:15">ist</name><operator pos:start="157:16" pos:end="157:17">-&gt;</operator><name pos:start="157:18" pos:end="157:37">wrap_correction_done</name></name> <operator pos:start="157:39" pos:end="157:39">=</operator> <literal type="number" pos:start="157:41" pos:end="157:41">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="161:9" pos:end="167:9"><if pos:start="161:9" pos:end="167:9">if<condition pos:start="161:11" pos:end="161:94">(<expr pos:start="161:12" pos:end="161:93"><name pos:start="161:12" pos:end="161:18"><name pos:start="161:12" pos:end="161:14">pkt</name><operator pos:start="161:15" pos:end="161:15">.</operator><name pos:start="161:16" pos:end="161:18">pts</name></name> <operator pos:start="161:20" pos:end="161:21">!=</operator> <name pos:start="161:23" pos:end="161:36">AV_NOPTS_VALUE</name> <operator pos:start="161:38" pos:end="161:39">&amp;&amp;</operator> <name pos:start="161:41" pos:end="161:47"><name pos:start="161:41" pos:end="161:43">pkt</name><operator pos:start="161:44" pos:end="161:44">.</operator><name pos:start="161:45" pos:end="161:47">pts</name></name> <operator pos:start="161:49" pos:end="161:49">&gt;</operator> <name pos:start="161:51" pos:end="161:55">stime</name> <operator pos:start="161:57" pos:end="161:58">&amp;&amp;</operator> <name pos:start="161:60" pos:end="161:66"><name pos:start="161:60" pos:end="161:62">pkt</name><operator pos:start="161:63" pos:end="161:63">.</operator><name pos:start="161:64" pos:end="161:66">pts</name></name> <operator pos:start="161:68" pos:end="161:68">-</operator> <name pos:start="161:70" pos:end="161:74">stime</name> <operator pos:start="161:76" pos:end="161:76">&gt;</operator> <name pos:start="161:78" pos:end="161:83">stime2</name> <operator pos:start="161:85" pos:end="161:85">-</operator> <name pos:start="161:87" pos:end="161:93"><name pos:start="161:87" pos:end="161:89">pkt</name><operator pos:start="161:90" pos:end="161:90">.</operator><name pos:start="161:91" pos:end="161:93">pts</name></name></expr>)</condition> <block pos:start="161:96" pos:end="167:9">{<block_content pos:start="163:13" pos:end="165:42">

            <expr_stmt pos:start="163:13" pos:end="163:51"><expr pos:start="163:13" pos:end="163:50"><name pos:start="163:13" pos:end="163:19"><name pos:start="163:13" pos:end="163:15">pkt</name><operator pos:start="163:16" pos:end="163:16">.</operator><name pos:start="163:17" pos:end="163:19">pts</name></name> <operator pos:start="163:21" pos:end="163:22">-=</operator> <literal type="number" pos:start="163:24" pos:end="163:26">1LL</literal><operator pos:start="163:27" pos:end="163:28">&lt;&lt;</operator><name pos:start="163:29" pos:end="163:50"><name pos:start="163:29" pos:end="163:31">ist</name><operator pos:start="163:32" pos:end="163:33">-&gt;</operator><name pos:start="163:34" pos:end="163:35">st</name><operator pos:start="163:36" pos:end="163:37">-&gt;</operator><name pos:start="163:38" pos:end="163:50">pts_wrap_bits</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:42"><expr pos:start="165:13" pos:end="165:41"><name pos:start="165:13" pos:end="165:37"><name pos:start="165:13" pos:end="165:15">ist</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:37">wrap_correction_done</name></name> <operator pos:start="165:39" pos:end="165:39">=</operator> <literal type="number" pos:start="165:41" pos:end="165:41">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="173:5" pos:end="175:86"><if pos:start="173:5" pos:end="175:86">if <condition pos:start="173:8" pos:end="173:34">(<expr pos:start="173:9" pos:end="173:33"><name pos:start="173:9" pos:end="173:15"><name pos:start="173:9" pos:end="173:11">pkt</name><operator pos:start="173:12" pos:end="173:12">.</operator><name pos:start="173:13" pos:end="173:15">dts</name></name> <operator pos:start="173:17" pos:end="173:18">!=</operator> <name pos:start="173:20" pos:end="173:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="175:9" pos:end="175:86"><block_content pos:start="175:9" pos:end="175:86">

        <expr_stmt pos:start="175:9" pos:end="175:86"><expr pos:start="175:9" pos:end="175:85"><name pos:start="175:9" pos:end="175:15"><name pos:start="175:9" pos:end="175:11">pkt</name><operator pos:start="175:12" pos:end="175:12">.</operator><name pos:start="175:13" pos:end="175:15">dts</name></name> <operator pos:start="175:17" pos:end="175:18">+=</operator> <call pos:start="175:20" pos:end="175:85"><name pos:start="175:20" pos:end="175:31">av_rescale_q</name><argument_list pos:start="175:32" pos:end="175:85">(<argument pos:start="175:33" pos:end="175:48"><expr pos:start="175:33" pos:end="175:48"><name pos:start="175:33" pos:end="175:48"><name pos:start="175:33" pos:end="175:37">ifile</name><operator pos:start="175:38" pos:end="175:39">-&gt;</operator><name pos:start="175:40" pos:end="175:48">ts_offset</name></name></expr></argument>, <argument pos:start="175:51" pos:end="175:64"><expr pos:start="175:51" pos:end="175:64"><name pos:start="175:51" pos:end="175:64">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="175:67" pos:end="175:84"><expr pos:start="175:67" pos:end="175:84"><name pos:start="175:67" pos:end="175:84"><name pos:start="175:67" pos:end="175:69">ist</name><operator pos:start="175:70" pos:end="175:71">-&gt;</operator><name pos:start="175:72" pos:end="175:73">st</name><operator pos:start="175:74" pos:end="175:75">-&gt;</operator><name pos:start="175:76" pos:end="175:84">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="177:5" pos:end="179:86"><if pos:start="177:5" pos:end="179:86">if <condition pos:start="177:8" pos:end="177:34">(<expr pos:start="177:9" pos:end="177:33"><name pos:start="177:9" pos:end="177:15"><name pos:start="177:9" pos:end="177:11">pkt</name><operator pos:start="177:12" pos:end="177:12">.</operator><name pos:start="177:13" pos:end="177:15">pts</name></name> <operator pos:start="177:17" pos:end="177:18">!=</operator> <name pos:start="177:20" pos:end="177:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="179:9" pos:end="179:86"><block_content pos:start="179:9" pos:end="179:86">

        <expr_stmt pos:start="179:9" pos:end="179:86"><expr pos:start="179:9" pos:end="179:85"><name pos:start="179:9" pos:end="179:15"><name pos:start="179:9" pos:end="179:11">pkt</name><operator pos:start="179:12" pos:end="179:12">.</operator><name pos:start="179:13" pos:end="179:15">pts</name></name> <operator pos:start="179:17" pos:end="179:18">+=</operator> <call pos:start="179:20" pos:end="179:85"><name pos:start="179:20" pos:end="179:31">av_rescale_q</name><argument_list pos:start="179:32" pos:end="179:85">(<argument pos:start="179:33" pos:end="179:48"><expr pos:start="179:33" pos:end="179:48"><name pos:start="179:33" pos:end="179:48"><name pos:start="179:33" pos:end="179:37">ifile</name><operator pos:start="179:38" pos:end="179:39">-&gt;</operator><name pos:start="179:40" pos:end="179:48">ts_offset</name></name></expr></argument>, <argument pos:start="179:51" pos:end="179:64"><expr pos:start="179:51" pos:end="179:64"><name pos:start="179:51" pos:end="179:64">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="179:67" pos:end="179:84"><expr pos:start="179:67" pos:end="179:84"><name pos:start="179:67" pos:end="179:84"><name pos:start="179:67" pos:end="179:69">ist</name><operator pos:start="179:70" pos:end="179:71">-&gt;</operator><name pos:start="179:72" pos:end="179:73">st</name><operator pos:start="179:74" pos:end="179:75">-&gt;</operator><name pos:start="179:76" pos:end="179:84">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="183:5" pos:end="185:33"><if pos:start="183:5" pos:end="185:33">if <condition pos:start="183:8" pos:end="183:34">(<expr pos:start="183:9" pos:end="183:33"><name pos:start="183:9" pos:end="183:15"><name pos:start="183:9" pos:end="183:11">pkt</name><operator pos:start="183:12" pos:end="183:12">.</operator><name pos:start="183:13" pos:end="183:15">pts</name></name> <operator pos:start="183:17" pos:end="183:18">!=</operator> <name pos:start="183:20" pos:end="183:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="185:9" pos:end="185:33"><block_content pos:start="185:9" pos:end="185:33">

        <expr_stmt pos:start="185:9" pos:end="185:33"><expr pos:start="185:9" pos:end="185:32"><name pos:start="185:9" pos:end="185:15"><name pos:start="185:9" pos:end="185:11">pkt</name><operator pos:start="185:12" pos:end="185:12">.</operator><name pos:start="185:13" pos:end="185:15">pts</name></name> <operator pos:start="185:17" pos:end="185:18">*=</operator> <name pos:start="185:20" pos:end="185:32"><name pos:start="185:20" pos:end="185:22">ist</name><operator pos:start="185:23" pos:end="185:24">-&gt;</operator><name pos:start="185:25" pos:end="185:32">ts_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="187:5" pos:end="189:33"><if pos:start="187:5" pos:end="189:33">if <condition pos:start="187:8" pos:end="187:34">(<expr pos:start="187:9" pos:end="187:33"><name pos:start="187:9" pos:end="187:15"><name pos:start="187:9" pos:end="187:11">pkt</name><operator pos:start="187:12" pos:end="187:12">.</operator><name pos:start="187:13" pos:end="187:15">dts</name></name> <operator pos:start="187:17" pos:end="187:18">!=</operator> <name pos:start="187:20" pos:end="187:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="189:9" pos:end="189:33"><block_content pos:start="189:9" pos:end="189:33">

        <expr_stmt pos:start="189:9" pos:end="189:33"><expr pos:start="189:9" pos:end="189:32"><name pos:start="189:9" pos:end="189:15"><name pos:start="189:9" pos:end="189:11">pkt</name><operator pos:start="189:12" pos:end="189:12">.</operator><name pos:start="189:13" pos:end="189:15">dts</name></name> <operator pos:start="189:17" pos:end="189:18">*=</operator> <name pos:start="189:20" pos:end="189:32"><name pos:start="189:20" pos:end="189:22">ist</name><operator pos:start="189:23" pos:end="189:24">-&gt;</operator><name pos:start="189:25" pos:end="189:32">ts_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="193:5" pos:end="211:5"><if pos:start="193:5" pos:end="211:5">if <condition pos:start="193:8" pos:end="193:17">(<expr pos:start="193:9" pos:end="193:16"><name pos:start="193:9" pos:end="193:16">debug_ts</name></expr>)</condition> <block pos:start="193:19" pos:end="211:5">{<block_content pos:start="195:9" pos:end="209:57">

        <expr_stmt pos:start="195:9" pos:end="209:57"><expr pos:start="195:9" pos:end="209:56"><call pos:start="195:9" pos:end="209:56"><name pos:start="195:9" pos:end="195:14">av_log</name><argument_list pos:start="195:15" pos:end="209:56">(<argument pos:start="195:16" pos:end="195:19"><expr pos:start="195:16" pos:end="195:19"><name pos:start="195:16" pos:end="195:19">NULL</name></expr></argument>, <argument pos:start="195:22" pos:end="195:32"><expr pos:start="195:22" pos:end="195:32"><name pos:start="195:22" pos:end="195:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="195:35" pos:end="197:146"><expr pos:start="195:35" pos:end="197:146"><literal type="string" pos:start="195:35" pos:end="195:68">"demuxer -&gt; ist_index:%d type:%s "</literal>

                <literal type="string" pos:start="197:17" pos:end="197:136">"next_dts:%s next_dts_time:%s next_pts:%s next_pts_time:%s  pkt_pts:%s pkt_pts_time:%s pkt_dts:%s pkt_dts_time:%s off:%"</literal><name pos:start="197:137" pos:end="197:142">PRId64</name><literal type="string" pos:start="197:143" pos:end="197:146">"\n"</literal></expr></argument>,

                <argument pos:start="199:17" pos:end="199:51"><expr pos:start="199:17" pos:end="199:51"><name pos:start="199:17" pos:end="199:32"><name pos:start="199:17" pos:end="199:21">ifile</name><operator pos:start="199:22" pos:end="199:23">-&gt;</operator><name pos:start="199:24" pos:end="199:32">ist_index</name></name> <operator pos:start="199:34" pos:end="199:34">+</operator> <name pos:start="199:36" pos:end="199:51"><name pos:start="199:36" pos:end="199:38">pkt</name><operator pos:start="199:39" pos:end="199:39">.</operator><name pos:start="199:40" pos:end="199:51">stream_index</name></name></expr></argument>, <argument pos:start="199:54" pos:end="199:105"><expr pos:start="199:54" pos:end="199:105"><call pos:start="199:54" pos:end="199:105"><name pos:start="199:54" pos:end="199:77">av_get_media_type_string</name><argument_list pos:start="199:78" pos:end="199:105">(<argument pos:start="199:79" pos:end="199:104"><expr pos:start="199:79" pos:end="199:104"><name pos:start="199:79" pos:end="199:104"><name pos:start="199:79" pos:end="199:81">ist</name><operator pos:start="199:82" pos:end="199:83">-&gt;</operator><name pos:start="199:84" pos:end="199:85">st</name><operator pos:start="199:86" pos:end="199:87">-&gt;</operator><name pos:start="199:88" pos:end="199:92">codec</name><operator pos:start="199:93" pos:end="199:94">-&gt;</operator><name pos:start="199:95" pos:end="199:104">codec_type</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="201:17" pos:end="201:40"><expr pos:start="201:17" pos:end="201:40"><call pos:start="201:17" pos:end="201:40"><name pos:start="201:17" pos:end="201:25">av_ts2str</name><argument_list pos:start="201:26" pos:end="201:40">(<argument pos:start="201:27" pos:end="201:39"><expr pos:start="201:27" pos:end="201:39"><name pos:start="201:27" pos:end="201:39"><name pos:start="201:27" pos:end="201:29">ist</name><operator pos:start="201:30" pos:end="201:31">-&gt;</operator><name pos:start="201:32" pos:end="201:39">next_dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="201:43" pos:end="201:87"><expr pos:start="201:43" pos:end="201:87"><call pos:start="201:43" pos:end="201:87"><name pos:start="201:43" pos:end="201:55">av_ts2timestr</name><argument_list pos:start="201:56" pos:end="201:87">(<argument pos:start="201:57" pos:end="201:69"><expr pos:start="201:57" pos:end="201:69"><name pos:start="201:57" pos:end="201:69"><name pos:start="201:57" pos:end="201:59">ist</name><operator pos:start="201:60" pos:end="201:61">-&gt;</operator><name pos:start="201:62" pos:end="201:69">next_dts</name></name></expr></argument>, <argument pos:start="201:72" pos:end="201:86"><expr pos:start="201:72" pos:end="201:86"><operator pos:start="201:72" pos:end="201:72">&amp;</operator><name pos:start="201:73" pos:end="201:86">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="203:17" pos:end="203:40"><expr pos:start="203:17" pos:end="203:40"><call pos:start="203:17" pos:end="203:40"><name pos:start="203:17" pos:end="203:25">av_ts2str</name><argument_list pos:start="203:26" pos:end="203:40">(<argument pos:start="203:27" pos:end="203:39"><expr pos:start="203:27" pos:end="203:39"><name pos:start="203:27" pos:end="203:39"><name pos:start="203:27" pos:end="203:29">ist</name><operator pos:start="203:30" pos:end="203:31">-&gt;</operator><name pos:start="203:32" pos:end="203:39">next_pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="203:43" pos:end="203:87"><expr pos:start="203:43" pos:end="203:87"><call pos:start="203:43" pos:end="203:87"><name pos:start="203:43" pos:end="203:55">av_ts2timestr</name><argument_list pos:start="203:56" pos:end="203:87">(<argument pos:start="203:57" pos:end="203:69"><expr pos:start="203:57" pos:end="203:69"><name pos:start="203:57" pos:end="203:69"><name pos:start="203:57" pos:end="203:59">ist</name><operator pos:start="203:60" pos:end="203:61">-&gt;</operator><name pos:start="203:62" pos:end="203:69">next_pts</name></name></expr></argument>, <argument pos:start="203:72" pos:end="203:86"><expr pos:start="203:72" pos:end="203:86"><operator pos:start="203:72" pos:end="203:72">&amp;</operator><name pos:start="203:73" pos:end="203:86">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="205:17" pos:end="205:34"><expr pos:start="205:17" pos:end="205:34"><call pos:start="205:17" pos:end="205:34"><name pos:start="205:17" pos:end="205:25">av_ts2str</name><argument_list pos:start="205:26" pos:end="205:34">(<argument pos:start="205:27" pos:end="205:33"><expr pos:start="205:27" pos:end="205:33"><name pos:start="205:27" pos:end="205:33"><name pos:start="205:27" pos:end="205:29">pkt</name><operator pos:start="205:30" pos:end="205:30">.</operator><name pos:start="205:31" pos:end="205:33">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="205:37" pos:end="205:79"><expr pos:start="205:37" pos:end="205:79"><call pos:start="205:37" pos:end="205:79"><name pos:start="205:37" pos:end="205:49">av_ts2timestr</name><argument_list pos:start="205:50" pos:end="205:79">(<argument pos:start="205:51" pos:end="205:57"><expr pos:start="205:51" pos:end="205:57"><name pos:start="205:51" pos:end="205:57"><name pos:start="205:51" pos:end="205:53">pkt</name><operator pos:start="205:54" pos:end="205:54">.</operator><name pos:start="205:55" pos:end="205:57">pts</name></name></expr></argument>, <argument pos:start="205:60" pos:end="205:78"><expr pos:start="205:60" pos:end="205:78"><operator pos:start="205:60" pos:end="205:60">&amp;</operator><name pos:start="205:61" pos:end="205:78"><name pos:start="205:61" pos:end="205:63">ist</name><operator pos:start="205:64" pos:end="205:65">-&gt;</operator><name pos:start="205:66" pos:end="205:67">st</name><operator pos:start="205:68" pos:end="205:69">-&gt;</operator><name pos:start="205:70" pos:end="205:78">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="207:17" pos:end="207:34"><expr pos:start="207:17" pos:end="207:34"><call pos:start="207:17" pos:end="207:34"><name pos:start="207:17" pos:end="207:25">av_ts2str</name><argument_list pos:start="207:26" pos:end="207:34">(<argument pos:start="207:27" pos:end="207:33"><expr pos:start="207:27" pos:end="207:33"><name pos:start="207:27" pos:end="207:33"><name pos:start="207:27" pos:end="207:29">pkt</name><operator pos:start="207:30" pos:end="207:30">.</operator><name pos:start="207:31" pos:end="207:33">dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="207:37" pos:end="207:79"><expr pos:start="207:37" pos:end="207:79"><call pos:start="207:37" pos:end="207:79"><name pos:start="207:37" pos:end="207:49">av_ts2timestr</name><argument_list pos:start="207:50" pos:end="207:79">(<argument pos:start="207:51" pos:end="207:57"><expr pos:start="207:51" pos:end="207:57"><name pos:start="207:51" pos:end="207:57"><name pos:start="207:51" pos:end="207:53">pkt</name><operator pos:start="207:54" pos:end="207:54">.</operator><name pos:start="207:55" pos:end="207:57">dts</name></name></expr></argument>, <argument pos:start="207:60" pos:end="207:78"><expr pos:start="207:60" pos:end="207:78"><operator pos:start="207:60" pos:end="207:60">&amp;</operator><name pos:start="207:61" pos:end="207:78"><name pos:start="207:61" pos:end="207:63">ist</name><operator pos:start="207:64" pos:end="207:65">-&gt;</operator><name pos:start="207:66" pos:end="207:67">st</name><operator pos:start="207:68" pos:end="207:69">-&gt;</operator><name pos:start="207:70" pos:end="207:78">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="209:17" pos:end="209:55"><expr pos:start="209:17" pos:end="209:55"><name pos:start="209:17" pos:end="209:44"><name pos:start="209:17" pos:end="209:27">input_files</name><index pos:start="209:28" pos:end="209:44">[<expr pos:start="209:29" pos:end="209:43"><name pos:start="209:29" pos:end="209:43"><name pos:start="209:29" pos:end="209:31">ist</name><operator pos:start="209:32" pos:end="209:33">-&gt;</operator><name pos:start="209:34" pos:end="209:43">file_index</name></name></expr>]</index></name><operator pos:start="209:45" pos:end="209:46">-&gt;</operator><name pos:start="209:47" pos:end="209:55">ts_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="215:5" pos:end="285:5"><if pos:start="215:5" pos:end="285:5">if <condition pos:start="215:8" pos:end="217:17">(<expr pos:start="215:9" pos:end="217:16"><name pos:start="215:9" pos:end="215:15"><name pos:start="215:9" pos:end="215:11">pkt</name><operator pos:start="215:12" pos:end="215:12">.</operator><name pos:start="215:13" pos:end="215:15">dts</name></name> <operator pos:start="215:17" pos:end="215:18">!=</operator> <name pos:start="215:20" pos:end="215:33">AV_NOPTS_VALUE</name> <operator pos:start="215:35" pos:end="215:36">&amp;&amp;</operator> <name pos:start="215:38" pos:end="215:50"><name pos:start="215:38" pos:end="215:40">ist</name><operator pos:start="215:41" pos:end="215:42">-&gt;</operator><name pos:start="215:43" pos:end="215:50">next_dts</name></name> <operator pos:start="215:52" pos:end="215:53">!=</operator> <name pos:start="215:55" pos:end="215:68">AV_NOPTS_VALUE</name> <operator pos:start="215:70" pos:end="215:71">&amp;&amp;</operator>

        <operator pos:start="217:9" pos:end="217:9">!</operator><name pos:start="217:10" pos:end="217:16">copy_ts</name></expr>)</condition> <block pos:start="217:19" pos:end="285:5">{<block_content pos:start="219:9" pos:end="283:9">

        <decl_stmt pos:start="219:9" pos:end="219:84"><decl pos:start="219:9" pos:end="219:83"><type pos:start="219:9" pos:end="219:15"><name pos:start="219:9" pos:end="219:15">int64_t</name></type> <name pos:start="219:17" pos:end="219:23">pkt_dts</name> <init pos:start="219:25" pos:end="219:83">= <expr pos:start="219:27" pos:end="219:83"><call pos:start="219:27" pos:end="219:83"><name pos:start="219:27" pos:end="219:38">av_rescale_q</name><argument_list pos:start="219:39" pos:end="219:83">(<argument pos:start="219:40" pos:end="219:46"><expr pos:start="219:40" pos:end="219:46"><name pos:start="219:40" pos:end="219:46"><name pos:start="219:40" pos:end="219:42">pkt</name><operator pos:start="219:43" pos:end="219:43">.</operator><name pos:start="219:44" pos:end="219:46">dts</name></name></expr></argument>, <argument pos:start="219:49" pos:end="219:66"><expr pos:start="219:49" pos:end="219:66"><name pos:start="219:49" pos:end="219:66"><name pos:start="219:49" pos:end="219:51">ist</name><operator pos:start="219:52" pos:end="219:53">-&gt;</operator><name pos:start="219:54" pos:end="219:55">st</name><operator pos:start="219:56" pos:end="219:57">-&gt;</operator><name pos:start="219:58" pos:end="219:66">time_base</name></name></expr></argument>, <argument pos:start="219:69" pos:end="219:82"><expr pos:start="219:69" pos:end="219:82"><name pos:start="219:69" pos:end="219:82">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="221:9" pos:end="221:50"><decl pos:start="221:9" pos:end="221:49"><type pos:start="221:9" pos:end="221:15"><name pos:start="221:9" pos:end="221:15">int64_t</name></type> <name pos:start="221:17" pos:end="221:21">delta</name>   <init pos:start="221:25" pos:end="221:49">= <expr pos:start="221:27" pos:end="221:49"><name pos:start="221:27" pos:end="221:33">pkt_dts</name> <operator pos:start="221:35" pos:end="221:35">-</operator> <name pos:start="221:37" pos:end="221:49"><name pos:start="221:37" pos:end="221:39">ist</name><operator pos:start="221:40" pos:end="221:41">-&gt;</operator><name pos:start="221:42" pos:end="221:49">next_dts</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="223:9" pos:end="283:9"><if pos:start="223:9" pos:end="249:9">if <condition pos:start="223:12" pos:end="223:50">(<expr pos:start="223:13" pos:end="223:49"><name pos:start="223:13" pos:end="223:30"><name pos:start="223:13" pos:end="223:14">is</name><operator pos:start="223:15" pos:end="223:16">-&gt;</operator><name pos:start="223:17" pos:end="223:23">iformat</name><operator pos:start="223:24" pos:end="223:25">-&gt;</operator><name pos:start="223:26" pos:end="223:30">flags</name></name> <operator pos:start="223:32" pos:end="223:32">&amp;</operator> <name pos:start="223:34" pos:end="223:49">AVFMT_TS_DISCONT</name></expr>)</condition> <block pos:start="223:52" pos:end="249:9">{<block_content pos:start="225:9" pos:end="247:9">

        <if_stmt pos:start="225:9" pos:end="247:9"><if pos:start="225:9" pos:end="247:9">if<condition pos:start="225:11" pos:end="231:31">(<expr pos:start="225:12" pos:end="231:30"><name pos:start="225:12" pos:end="225:16">delta</name> <operator pos:start="225:18" pos:end="225:18">&lt;</operator> <operator pos:start="225:20" pos:end="225:20">-</operator><literal type="number" pos:start="225:21" pos:end="225:23">1LL</literal><operator pos:start="225:24" pos:end="225:24">*</operator><name pos:start="225:25" pos:end="225:43">dts_delta_threshold</name><operator pos:start="225:44" pos:end="225:44">*</operator><name pos:start="225:45" pos:end="225:56">AV_TIME_BASE</name> <operator pos:start="225:58" pos:end="225:59">||</operator>

            <operator pos:start="227:13" pos:end="227:13">(</operator><name pos:start="227:14" pos:end="227:18">delta</name> <operator pos:start="227:20" pos:end="227:20">&gt;</operator> <literal type="number" pos:start="227:22" pos:end="227:24">1LL</literal><operator pos:start="227:25" pos:end="227:25">*</operator><name pos:start="227:26" pos:end="227:44">dts_delta_threshold</name><operator pos:start="227:45" pos:end="227:45">*</operator><name pos:start="227:46" pos:end="227:57">AV_TIME_BASE</name> <operator pos:start="227:59" pos:end="227:60">&amp;&amp;</operator>

                <name pos:start="229:17" pos:end="229:42"><name pos:start="229:17" pos:end="229:19">ist</name><operator pos:start="229:20" pos:end="229:21">-&gt;</operator><name pos:start="229:22" pos:end="229:23">st</name><operator pos:start="229:24" pos:end="229:25">-&gt;</operator><name pos:start="229:26" pos:end="229:30">codec</name><operator pos:start="229:31" pos:end="229:32">-&gt;</operator><name pos:start="229:33" pos:end="229:42">codec_type</name></name> <operator pos:start="229:44" pos:end="229:45">!=</operator> <name pos:start="229:47" pos:end="229:67">AVMEDIA_TYPE_SUBTITLE</name><operator pos:start="229:68" pos:end="229:68">)</operator> <operator pos:start="229:70" pos:end="229:71">||</operator>

            <name pos:start="231:13" pos:end="231:19">pkt_dts</name><operator pos:start="231:20" pos:end="231:20">+</operator><literal type="number" pos:start="231:21" pos:end="231:21">1</literal><operator pos:start="231:22" pos:end="231:22">&lt;</operator><name pos:start="231:23" pos:end="231:30"><name pos:start="231:23" pos:end="231:25">ist</name><operator pos:start="231:26" pos:end="231:27">-&gt;</operator><name pos:start="231:28" pos:end="231:30">pts</name></name></expr>)</condition><block pos:start="231:32" pos:end="247:9">{<block_content pos:start="233:13" pos:end="245:83">

            <expr_stmt pos:start="233:13" pos:end="233:38"><expr pos:start="233:13" pos:end="233:37"><name pos:start="233:13" pos:end="233:28"><name pos:start="233:13" pos:end="233:17">ifile</name><operator pos:start="233:18" pos:end="233:19">-&gt;</operator><name pos:start="233:20" pos:end="233:28">ts_offset</name></name> <operator pos:start="233:30" pos:end="233:31">-=</operator> <name pos:start="233:33" pos:end="233:37">delta</name></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="239:44"><expr pos:start="235:13" pos:end="239:43"><call pos:start="235:13" pos:end="239:43"><name pos:start="235:13" pos:end="235:18">av_log</name><argument_list pos:start="235:19" pos:end="239:43">(<argument pos:start="235:20" pos:end="235:23"><expr pos:start="235:20" pos:end="235:23"><name pos:start="235:20" pos:end="235:23">NULL</name></expr></argument>, <argument pos:start="235:26" pos:end="235:37"><expr pos:start="235:26" pos:end="235:37"><name pos:start="235:26" pos:end="235:37">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="237:20" pos:end="237:79"><expr pos:start="237:20" pos:end="237:79"><literal type="string" pos:start="237:20" pos:end="237:46">"timestamp discontinuity %"</literal><name pos:start="237:47" pos:end="237:52">PRId64</name><literal type="string" pos:start="237:53" pos:end="237:69">", new offset= %"</literal><name pos:start="237:70" pos:end="237:75">PRId64</name><literal type="string" pos:start="237:76" pos:end="237:79">"\n"</literal></expr></argument>,

                   <argument pos:start="239:20" pos:end="239:24"><expr pos:start="239:20" pos:end="239:24"><name pos:start="239:20" pos:end="239:24">delta</name></expr></argument>, <argument pos:start="239:27" pos:end="239:42"><expr pos:start="239:27" pos:end="239:42"><name pos:start="239:27" pos:end="239:42"><name pos:start="239:27" pos:end="239:31">ifile</name><operator pos:start="239:32" pos:end="239:33">-&gt;</operator><name pos:start="239:34" pos:end="239:42">ts_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:79"><expr pos:start="241:13" pos:end="241:78"><name pos:start="241:13" pos:end="241:19"><name pos:start="241:13" pos:end="241:15">pkt</name><operator pos:start="241:16" pos:end="241:16">.</operator><name pos:start="241:17" pos:end="241:19">dts</name></name> <operator pos:start="241:21" pos:end="241:22">-=</operator> <call pos:start="241:24" pos:end="241:78"><name pos:start="241:24" pos:end="241:35">av_rescale_q</name><argument_list pos:start="241:36" pos:end="241:78">(<argument pos:start="241:37" pos:end="241:41"><expr pos:start="241:37" pos:end="241:41"><name pos:start="241:37" pos:end="241:41">delta</name></expr></argument>, <argument pos:start="241:44" pos:end="241:57"><expr pos:start="241:44" pos:end="241:57"><name pos:start="241:44" pos:end="241:57">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="241:60" pos:end="241:77"><expr pos:start="241:60" pos:end="241:77"><name pos:start="241:60" pos:end="241:77"><name pos:start="241:60" pos:end="241:62">ist</name><operator pos:start="241:63" pos:end="241:64">-&gt;</operator><name pos:start="241:65" pos:end="241:66">st</name><operator pos:start="241:67" pos:end="241:68">-&gt;</operator><name pos:start="241:69" pos:end="241:77">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="243:13" pos:end="245:83"><if pos:start="243:13" pos:end="245:83">if <condition pos:start="243:16" pos:end="243:42">(<expr pos:start="243:17" pos:end="243:41"><name pos:start="243:17" pos:end="243:23"><name pos:start="243:17" pos:end="243:19">pkt</name><operator pos:start="243:20" pos:end="243:20">.</operator><name pos:start="243:21" pos:end="243:23">pts</name></name> <operator pos:start="243:25" pos:end="243:26">!=</operator> <name pos:start="243:28" pos:end="243:41">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="245:17" pos:end="245:83"><block_content pos:start="245:17" pos:end="245:83">

                <expr_stmt pos:start="245:17" pos:end="245:83"><expr pos:start="245:17" pos:end="245:82"><name pos:start="245:17" pos:end="245:23"><name pos:start="245:17" pos:end="245:19">pkt</name><operator pos:start="245:20" pos:end="245:20">.</operator><name pos:start="245:21" pos:end="245:23">pts</name></name> <operator pos:start="245:25" pos:end="245:26">-=</operator> <call pos:start="245:28" pos:end="245:82"><name pos:start="245:28" pos:end="245:39">av_rescale_q</name><argument_list pos:start="245:40" pos:end="245:82">(<argument pos:start="245:41" pos:end="245:45"><expr pos:start="245:41" pos:end="245:45"><name pos:start="245:41" pos:end="245:45">delta</name></expr></argument>, <argument pos:start="245:48" pos:end="245:61"><expr pos:start="245:48" pos:end="245:61"><name pos:start="245:48" pos:end="245:61">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="245:64" pos:end="245:81"><expr pos:start="245:64" pos:end="245:81"><name pos:start="245:64" pos:end="245:81"><name pos:start="245:64" pos:end="245:66">ist</name><operator pos:start="245:67" pos:end="245:68">-&gt;</operator><name pos:start="245:69" pos:end="245:70">st</name><operator pos:start="245:71" pos:end="245:72">-&gt;</operator><name pos:start="245:73" pos:end="245:81">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="249:11" pos:end="283:9">else <block pos:start="249:16" pos:end="283:9">{<block_content pos:start="251:13" pos:end="281:13">

            <if_stmt pos:start="251:13" pos:end="261:13"><if pos:start="251:13" pos:end="261:13">if <condition pos:start="251:16" pos:end="255:39">( <expr pos:start="251:18" pos:end="255:38"><name pos:start="251:18" pos:end="251:22">delta</name> <operator pos:start="251:24" pos:end="251:24">&lt;</operator> <operator pos:start="251:26" pos:end="251:26">-</operator><literal type="number" pos:start="251:27" pos:end="251:29">1LL</literal><operator pos:start="251:30" pos:end="251:30">*</operator><name pos:start="251:31" pos:end="251:49">dts_error_threshold</name><operator pos:start="251:50" pos:end="251:50">*</operator><name pos:start="251:51" pos:end="251:62">AV_TIME_BASE</name> <operator pos:start="251:64" pos:end="251:65">||</operator>

                <operator pos:start="253:17" pos:end="253:17">(</operator><name pos:start="253:18" pos:end="253:22">delta</name> <operator pos:start="253:24" pos:end="253:24">&gt;</operator> <literal type="number" pos:start="253:26" pos:end="253:28">1LL</literal><operator pos:start="253:29" pos:end="253:29">*</operator><name pos:start="253:30" pos:end="253:48">dts_error_threshold</name><operator pos:start="253:49" pos:end="253:49">*</operator><name pos:start="253:50" pos:end="253:61">AV_TIME_BASE</name> <operator pos:start="253:63" pos:end="253:64">&amp;&amp;</operator> <name pos:start="253:66" pos:end="253:91"><name pos:start="253:66" pos:end="253:68">ist</name><operator pos:start="253:69" pos:end="253:70">-&gt;</operator><name pos:start="253:71" pos:end="253:72">st</name><operator pos:start="253:73" pos:end="253:74">-&gt;</operator><name pos:start="253:75" pos:end="253:79">codec</name><operator pos:start="253:80" pos:end="253:81">-&gt;</operator><name pos:start="253:82" pos:end="253:91">codec_type</name></name> <operator pos:start="253:93" pos:end="253:94">!=</operator> <name pos:start="253:96" pos:end="253:116">AVMEDIA_TYPE_SUBTITLE</name><operator pos:start="253:117" pos:end="253:117">)</operator> <operator pos:start="253:119" pos:end="253:120">||</operator>

                    <name pos:start="255:21" pos:end="255:27">pkt_dts</name><operator pos:start="255:28" pos:end="255:28">+</operator><literal type="number" pos:start="255:29" pos:end="255:29">1</literal><operator pos:start="255:30" pos:end="255:30">&lt;</operator><name pos:start="255:31" pos:end="255:38"><name pos:start="255:31" pos:end="255:33">ist</name><operator pos:start="255:34" pos:end="255:35">-&gt;</operator><name pos:start="255:36" pos:end="255:38">pts</name></name></expr>)</condition><block pos:start="255:40" pos:end="261:13">{<block_content pos:start="257:17" pos:end="259:41">

                <expr_stmt pos:start="257:17" pos:end="257:145"><expr pos:start="257:17" pos:end="257:144"><call pos:start="257:17" pos:end="257:144"><name pos:start="257:17" pos:end="257:22">av_log</name><argument_list pos:start="257:23" pos:end="257:144">(<argument pos:start="257:24" pos:end="257:27"><expr pos:start="257:24" pos:end="257:27"><name pos:start="257:24" pos:end="257:27">NULL</name></expr></argument>, <argument pos:start="257:30" pos:end="257:43"><expr pos:start="257:30" pos:end="257:43"><name pos:start="257:30" pos:end="257:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="257:46" pos:end="257:101"><expr pos:start="257:46" pos:end="257:101"><literal type="string" pos:start="257:46" pos:end="257:52">"DTS %"</literal><name pos:start="257:53" pos:end="257:58">PRId64</name><literal type="string" pos:start="257:59" pos:end="257:68">", next:%"</literal><name pos:start="257:69" pos:end="257:74">PRId64</name><literal type="string" pos:start="257:75" pos:end="257:101">" st:%d invalid dropping\n"</literal></expr></argument>, <argument pos:start="257:104" pos:end="257:110"><expr pos:start="257:104" pos:end="257:110"><name pos:start="257:104" pos:end="257:110"><name pos:start="257:104" pos:end="257:106">pkt</name><operator pos:start="257:107" pos:end="257:107">.</operator><name pos:start="257:108" pos:end="257:110">dts</name></name></expr></argument>, <argument pos:start="257:113" pos:end="257:125"><expr pos:start="257:113" pos:end="257:125"><name pos:start="257:113" pos:end="257:125"><name pos:start="257:113" pos:end="257:115">ist</name><operator pos:start="257:116" pos:end="257:117">-&gt;</operator><name pos:start="257:118" pos:end="257:125">next_dts</name></name></expr></argument>, <argument pos:start="257:128" pos:end="257:143"><expr pos:start="257:128" pos:end="257:143"><name pos:start="257:128" pos:end="257:143"><name pos:start="257:128" pos:end="257:130">pkt</name><operator pos:start="257:131" pos:end="257:131">.</operator><name pos:start="257:132" pos:end="257:143">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="259:17" pos:end="259:41"><expr pos:start="259:17" pos:end="259:40"><name pos:start="259:17" pos:end="259:23"><name pos:start="259:17" pos:end="259:19">pkt</name><operator pos:start="259:20" pos:end="259:20">.</operator><name pos:start="259:21" pos:end="259:23">dts</name></name> <operator pos:start="259:25" pos:end="259:25">=</operator> <name pos:start="259:27" pos:end="259:40">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="263:13" pos:end="281:13"><if pos:start="263:13" pos:end="281:13">if <condition pos:start="263:16" pos:end="263:42">(<expr pos:start="263:17" pos:end="263:41"><name pos:start="263:17" pos:end="263:23"><name pos:start="263:17" pos:end="263:19">pkt</name><operator pos:start="263:20" pos:end="263:20">.</operator><name pos:start="263:21" pos:end="263:23">pts</name></name> <operator pos:start="263:25" pos:end="263:26">!=</operator> <name pos:start="263:28" pos:end="263:41">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="263:43" pos:end="281:13">{<block_content pos:start="265:17" pos:end="279:17">

                <decl_stmt pos:start="265:17" pos:end="265:92"><decl pos:start="265:17" pos:end="265:91"><type pos:start="265:17" pos:end="265:23"><name pos:start="265:17" pos:end="265:23">int64_t</name></type> <name pos:start="265:25" pos:end="265:31">pkt_pts</name> <init pos:start="265:33" pos:end="265:91">= <expr pos:start="265:35" pos:end="265:91"><call pos:start="265:35" pos:end="265:91"><name pos:start="265:35" pos:end="265:46">av_rescale_q</name><argument_list pos:start="265:47" pos:end="265:91">(<argument pos:start="265:48" pos:end="265:54"><expr pos:start="265:48" pos:end="265:54"><name pos:start="265:48" pos:end="265:54"><name pos:start="265:48" pos:end="265:50">pkt</name><operator pos:start="265:51" pos:end="265:51">.</operator><name pos:start="265:52" pos:end="265:54">pts</name></name></expr></argument>, <argument pos:start="265:57" pos:end="265:74"><expr pos:start="265:57" pos:end="265:74"><name pos:start="265:57" pos:end="265:74"><name pos:start="265:57" pos:end="265:59">ist</name><operator pos:start="265:60" pos:end="265:61">-&gt;</operator><name pos:start="265:62" pos:end="265:63">st</name><operator pos:start="265:64" pos:end="265:65">-&gt;</operator><name pos:start="265:66" pos:end="265:74">time_base</name></name></expr></argument>, <argument pos:start="265:77" pos:end="265:90"><expr pos:start="265:77" pos:end="265:90"><name pos:start="265:77" pos:end="265:90">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="267:17" pos:end="267:50"><expr pos:start="267:17" pos:end="267:49"><name pos:start="267:17" pos:end="267:21">delta</name>   <operator pos:start="267:25" pos:end="267:25">=</operator> <name pos:start="267:27" pos:end="267:33">pkt_pts</name> <operator pos:start="267:35" pos:end="267:35">-</operator> <name pos:start="267:37" pos:end="267:49"><name pos:start="267:37" pos:end="267:39">ist</name><operator pos:start="267:40" pos:end="267:41">-&gt;</operator><name pos:start="267:42" pos:end="267:49">next_dts</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="269:17" pos:end="279:17"><if pos:start="269:17" pos:end="279:17">if <condition pos:start="269:20" pos:end="273:39">( <expr pos:start="269:22" pos:end="273:38"><name pos:start="269:22" pos:end="269:26">delta</name> <operator pos:start="269:28" pos:end="269:28">&lt;</operator> <operator pos:start="269:30" pos:end="269:30">-</operator><literal type="number" pos:start="269:31" pos:end="269:33">1LL</literal><operator pos:start="269:34" pos:end="269:34">*</operator><name pos:start="269:35" pos:end="269:53">dts_error_threshold</name><operator pos:start="269:54" pos:end="269:54">*</operator><name pos:start="269:55" pos:end="269:66">AV_TIME_BASE</name> <operator pos:start="269:68" pos:end="269:69">||</operator>

                    <operator pos:start="271:21" pos:end="271:21">(</operator><name pos:start="271:22" pos:end="271:26">delta</name> <operator pos:start="271:28" pos:end="271:28">&gt;</operator> <literal type="number" pos:start="271:30" pos:end="271:32">1LL</literal><operator pos:start="271:33" pos:end="271:33">*</operator><name pos:start="271:34" pos:end="271:52">dts_error_threshold</name><operator pos:start="271:53" pos:end="271:53">*</operator><name pos:start="271:54" pos:end="271:65">AV_TIME_BASE</name> <operator pos:start="271:67" pos:end="271:68">&amp;&amp;</operator> <name pos:start="271:70" pos:end="271:95"><name pos:start="271:70" pos:end="271:72">ist</name><operator pos:start="271:73" pos:end="271:74">-&gt;</operator><name pos:start="271:75" pos:end="271:76">st</name><operator pos:start="271:77" pos:end="271:78">-&gt;</operator><name pos:start="271:79" pos:end="271:83">codec</name><operator pos:start="271:84" pos:end="271:85">-&gt;</operator><name pos:start="271:86" pos:end="271:95">codec_type</name></name> <operator pos:start="271:97" pos:end="271:98">!=</operator> <name pos:start="271:100" pos:end="271:120">AVMEDIA_TYPE_SUBTITLE</name><operator pos:start="271:121" pos:end="271:121">)</operator> <operator pos:start="271:123" pos:end="271:124">||</operator>

                    <name pos:start="273:21" pos:end="273:27">pkt_pts</name><operator pos:start="273:28" pos:end="273:28">+</operator><literal type="number" pos:start="273:29" pos:end="273:29">1</literal><operator pos:start="273:30" pos:end="273:30">&lt;</operator><name pos:start="273:31" pos:end="273:38"><name pos:start="273:31" pos:end="273:33">ist</name><operator pos:start="273:34" pos:end="273:35">-&gt;</operator><name pos:start="273:36" pos:end="273:38">pts</name></name></expr>)</condition> <block pos:start="273:41" pos:end="279:17">{<block_content pos:start="275:21" pos:end="277:45">

                    <expr_stmt pos:start="275:21" pos:end="275:149"><expr pos:start="275:21" pos:end="275:148"><call pos:start="275:21" pos:end="275:148"><name pos:start="275:21" pos:end="275:26">av_log</name><argument_list pos:start="275:27" pos:end="275:148">(<argument pos:start="275:28" pos:end="275:31"><expr pos:start="275:28" pos:end="275:31"><name pos:start="275:28" pos:end="275:31">NULL</name></expr></argument>, <argument pos:start="275:34" pos:end="275:47"><expr pos:start="275:34" pos:end="275:47"><name pos:start="275:34" pos:end="275:47">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="275:50" pos:end="275:105"><expr pos:start="275:50" pos:end="275:105"><literal type="string" pos:start="275:50" pos:end="275:56">"PTS %"</literal><name pos:start="275:57" pos:end="275:62">PRId64</name><literal type="string" pos:start="275:63" pos:end="275:72">", next:%"</literal><name pos:start="275:73" pos:end="275:78">PRId64</name><literal type="string" pos:start="275:79" pos:end="275:105">" invalid dropping st:%d\n"</literal></expr></argument>, <argument pos:start="275:108" pos:end="275:114"><expr pos:start="275:108" pos:end="275:114"><name pos:start="275:108" pos:end="275:114"><name pos:start="275:108" pos:end="275:110">pkt</name><operator pos:start="275:111" pos:end="275:111">.</operator><name pos:start="275:112" pos:end="275:114">pts</name></name></expr></argument>, <argument pos:start="275:117" pos:end="275:129"><expr pos:start="275:117" pos:end="275:129"><name pos:start="275:117" pos:end="275:129"><name pos:start="275:117" pos:end="275:119">ist</name><operator pos:start="275:120" pos:end="275:121">-&gt;</operator><name pos:start="275:122" pos:end="275:129">next_dts</name></name></expr></argument>, <argument pos:start="275:132" pos:end="275:147"><expr pos:start="275:132" pos:end="275:147"><name pos:start="275:132" pos:end="275:147"><name pos:start="275:132" pos:end="275:134">pkt</name><operator pos:start="275:135" pos:end="275:135">.</operator><name pos:start="275:136" pos:end="275:147">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="277:21" pos:end="277:45"><expr pos:start="277:21" pos:end="277:44"><name pos:start="277:21" pos:end="277:27"><name pos:start="277:21" pos:end="277:23">pkt</name><operator pos:start="277:24" pos:end="277:24">.</operator><name pos:start="277:25" pos:end="277:27">pts</name></name> <operator pos:start="277:29" pos:end="277:29">=</operator> <name pos:start="277:31" pos:end="277:44">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="289:5" pos:end="289:38"><expr pos:start="289:5" pos:end="289:37"><call pos:start="289:5" pos:end="289:37"><name pos:start="289:5" pos:end="289:23">sub2video_heartbeat</name><argument_list pos:start="289:24" pos:end="289:37">(<argument pos:start="289:25" pos:end="289:27"><expr pos:start="289:25" pos:end="289:27"><name pos:start="289:25" pos:end="289:27">ist</name></expr></argument>, <argument pos:start="289:30" pos:end="289:36"><expr pos:start="289:30" pos:end="289:36"><name pos:start="289:30" pos:end="289:36"><name pos:start="289:30" pos:end="289:32">pkt</name><operator pos:start="289:33" pos:end="289:33">.</operator><name pos:start="289:34" pos:end="289:36">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="293:5" pos:end="313:5"><if pos:start="293:5" pos:end="313:5">if <condition pos:start="293:8" pos:end="295:59">(<expr pos:start="293:9" pos:end="295:58"><operator pos:start="293:9" pos:end="293:9">(</operator><name pos:start="293:10" pos:end="293:12">ret</name> <operator pos:start="293:14" pos:end="293:14">=</operator> <call pos:start="293:16" pos:end="293:39"><name pos:start="293:16" pos:end="293:28">output_packet</name><argument_list pos:start="293:29" pos:end="293:39">(<argument pos:start="293:30" pos:end="293:32"><expr pos:start="293:30" pos:end="293:32"><name pos:start="293:30" pos:end="293:32">ist</name></expr></argument>, <argument pos:start="293:35" pos:end="293:38"><expr pos:start="293:35" pos:end="293:38"><operator pos:start="293:35" pos:end="293:35">&amp;</operator><name pos:start="293:36" pos:end="293:38">pkt</name></expr></argument>)</argument_list></call><operator pos:start="293:40" pos:end="293:40">)</operator> <operator pos:start="293:42" pos:end="293:42">&lt;</operator> <literal type="number" pos:start="293:44" pos:end="293:44">0</literal> <operator pos:start="293:46" pos:end="293:47">||</operator>

        <operator pos:start="295:9" pos:end="295:9">(</operator><operator pos:start="295:10" pos:end="295:10">(</operator><name pos:start="295:11" pos:end="295:13">ret</name> <operator pos:start="295:15" pos:end="295:15">=</operator> <call pos:start="295:17" pos:end="295:30"><name pos:start="295:17" pos:end="295:28">poll_filters</name><argument_list pos:start="295:29" pos:end="295:30">()</argument_list></call><operator pos:start="295:31" pos:end="295:31">)</operator> <operator pos:start="295:33" pos:end="295:33">&lt;</operator> <literal type="number" pos:start="295:35" pos:end="295:35">0</literal> <operator pos:start="295:37" pos:end="295:38">&amp;&amp;</operator> <name pos:start="295:40" pos:end="295:42">ret</name> <operator pos:start="295:44" pos:end="295:45">!=</operator> <name pos:start="295:47" pos:end="295:57">AVERROR_EOF</name><operator pos:start="295:58" pos:end="295:58">)</operator></expr>)</condition> <block pos:start="295:61" pos:end="313:5">{<block_content pos:start="297:9" pos:end="311:31">

        <decl_stmt pos:start="297:9" pos:end="297:22"><decl pos:start="297:9" pos:end="297:21"><type pos:start="297:9" pos:end="297:12"><name pos:start="297:9" pos:end="297:12">char</name></type> <name pos:start="297:14" pos:end="297:21"><name pos:start="297:14" pos:end="297:16">buf</name><index pos:start="297:17" pos:end="297:21">[<expr pos:start="297:18" pos:end="297:20"><literal type="number" pos:start="297:18" pos:end="297:20">128</literal></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:43"><expr pos:start="299:9" pos:end="299:42"><call pos:start="299:9" pos:end="299:42"><name pos:start="299:9" pos:end="299:19">av_strerror</name><argument_list pos:start="299:20" pos:end="299:42">(<argument pos:start="299:21" pos:end="299:23"><expr pos:start="299:21" pos:end="299:23"><name pos:start="299:21" pos:end="299:23">ret</name></expr></argument>, <argument pos:start="299:26" pos:end="299:28"><expr pos:start="299:26" pos:end="299:28"><name pos:start="299:26" pos:end="299:28">buf</name></expr></argument>, <argument pos:start="299:31" pos:end="299:41"><expr pos:start="299:31" pos:end="299:41"><sizeof pos:start="299:31" pos:end="299:41">sizeof<argument_list pos:start="299:37" pos:end="299:41">(<argument pos:start="299:38" pos:end="299:40"><expr pos:start="299:38" pos:end="299:40"><name pos:start="299:38" pos:end="299:40">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="301:9" pos:end="303:54"><expr pos:start="301:9" pos:end="303:53"><call pos:start="301:9" pos:end="303:53"><name pos:start="301:9" pos:end="301:14">av_log</name><argument_list pos:start="301:15" pos:end="303:53">(<argument pos:start="301:16" pos:end="301:19"><expr pos:start="301:16" pos:end="301:19"><name pos:start="301:16" pos:end="301:19">NULL</name></expr></argument>, <argument pos:start="301:22" pos:end="301:33"><expr pos:start="301:22" pos:end="301:33"><name pos:start="301:22" pos:end="301:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="301:36" pos:end="301:77"><expr pos:start="301:36" pos:end="301:77"><literal type="string" pos:start="301:36" pos:end="301:77">"Error while decoding stream #%d:%d: %s\n"</literal></expr></argument>,

                <argument pos:start="303:17" pos:end="303:31"><expr pos:start="303:17" pos:end="303:31"><name pos:start="303:17" pos:end="303:31"><name pos:start="303:17" pos:end="303:19">ist</name><operator pos:start="303:20" pos:end="303:21">-&gt;</operator><name pos:start="303:22" pos:end="303:31">file_index</name></name></expr></argument>, <argument pos:start="303:34" pos:end="303:47"><expr pos:start="303:34" pos:end="303:47"><name pos:start="303:34" pos:end="303:47"><name pos:start="303:34" pos:end="303:36">ist</name><operator pos:start="303:37" pos:end="303:38">-&gt;</operator><name pos:start="303:39" pos:end="303:40">st</name><operator pos:start="303:41" pos:end="303:42">-&gt;</operator><name pos:start="303:43" pos:end="303:47">index</name></name></expr></argument>, <argument pos:start="303:50" pos:end="303:52"><expr pos:start="303:50" pos:end="303:52"><name pos:start="303:50" pos:end="303:52">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="305:9" pos:end="307:28"><if pos:start="305:9" pos:end="307:28">if <condition pos:start="305:12" pos:end="305:26">(<expr pos:start="305:13" pos:end="305:25"><name pos:start="305:13" pos:end="305:25">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="307:13" pos:end="307:28"><block_content pos:start="307:13" pos:end="307:28">

            <expr_stmt pos:start="307:13" pos:end="307:28"><expr pos:start="307:13" pos:end="307:27"><call pos:start="307:13" pos:end="307:27"><name pos:start="307:13" pos:end="307:24">exit_program</name><argument_list pos:start="307:25" pos:end="307:27">(<argument pos:start="307:26" pos:end="307:26"><expr pos:start="307:26" pos:end="307:26"><literal type="number" pos:start="307:26" pos:end="307:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:29"><expr pos:start="309:9" pos:end="309:28"><call pos:start="309:9" pos:end="309:28"><name pos:start="309:9" pos:end="309:22">av_free_packet</name><argument_list pos:start="309:23" pos:end="309:28">(<argument pos:start="309:24" pos:end="309:27"><expr pos:start="309:24" pos:end="309:27"><operator pos:start="309:24" pos:end="309:24">&amp;</operator><name pos:start="309:25" pos:end="309:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="311:9" pos:end="311:31">return <expr pos:start="311:16" pos:end="311:30"><call pos:start="311:16" pos:end="311:30"><name pos:start="311:16" pos:end="311:22">AVERROR</name><argument_list pos:start="311:23" pos:end="311:30">(<argument pos:start="311:24" pos:end="311:29"><expr pos:start="311:24" pos:end="311:29"><name pos:start="311:24" pos:end="311:29">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



<label pos:start="317:1" pos:end="317:15"><name pos:start="317:1" pos:end="317:14">discard_packet</name>:</label>

    <expr_stmt pos:start="319:5" pos:end="319:25"><expr pos:start="319:5" pos:end="319:24"><call pos:start="319:5" pos:end="319:24"><name pos:start="319:5" pos:end="319:18">av_free_packet</name><argument_list pos:start="319:19" pos:end="319:24">(<argument pos:start="319:20" pos:end="319:23"><expr pos:start="319:20" pos:end="319:23"><operator pos:start="319:20" pos:end="319:20">&amp;</operator><name pos:start="319:21" pos:end="319:23">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="323:5" pos:end="323:13">return <expr pos:start="323:12" pos:end="323:12"><literal type="number" pos:start="323:12" pos:end="323:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
