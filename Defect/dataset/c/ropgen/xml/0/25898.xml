<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25898.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:28">void</name></type> <name pos:start="1:30" pos:end="1:48">filter_level_for_mb</name><parameter_list pos:start="1:49" pos:end="1:105">(<parameter pos:start="1:50" pos:end="1:62"><decl pos:start="1:50" pos:end="1:62"><type pos:start="1:50" pos:end="1:62"><name pos:start="1:50" pos:end="1:59">VP8Context</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:62">s</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:81"><decl pos:start="1:65" pos:end="1:81"><type pos:start="1:65" pos:end="1:81"><name pos:start="1:65" pos:end="1:77">VP8Macroblock</name> <modifier pos:start="1:79" pos:end="1:79">*</modifier></type><name pos:start="1:80" pos:end="1:81">mb</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:103"><decl pos:start="1:84" pos:end="1:103"><type pos:start="1:84" pos:end="1:103"><name pos:start="1:84" pos:end="1:100">VP8FilterStrength</name> <modifier pos:start="1:102" pos:end="1:102">*</modifier></type><name pos:start="1:103" pos:end="1:103">f</name></decl></parameter> )</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:89">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:22">interior_limit</name></decl>, <decl pos:start="5:25" pos:end="5:36"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:25" pos:end="5:36">filter_level</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="19:39"><if pos:start="9:5" pos:end="17:5">if <condition pos:start="9:8" pos:end="9:32">(<expr pos:start="9:9" pos:end="9:31"><name pos:start="9:9" pos:end="9:31"><name pos:start="9:9" pos:end="9:9">s</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:23">segmentation</name><operator pos:start="9:24" pos:end="9:24">.</operator><name pos:start="9:25" pos:end="9:31">enabled</name></name></expr>)</condition> <block pos:start="9:34" pos:end="17:5">{<block_content pos:start="11:9" pos:end="15:44">

        <expr_stmt pos:start="11:9" pos:end="11:64"><expr pos:start="11:9" pos:end="11:63"><name pos:start="11:9" pos:end="11:20">filter_level</name> <operator pos:start="11:22" pos:end="11:22">=</operator> <name pos:start="11:24" pos:end="11:63"><name pos:start="11:24" pos:end="11:24">s</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:38">segmentation</name><operator pos:start="11:39" pos:end="11:39">.</operator><name pos:start="11:40" pos:end="11:51">filter_level</name><index pos:start="11:52" pos:end="11:63">[<expr pos:start="11:53" pos:end="11:62"><name pos:start="11:53" pos:end="11:62"><name pos:start="11:53" pos:end="11:53">s</name><operator pos:start="11:54" pos:end="11:55">-&gt;</operator><name pos:start="11:56" pos:end="11:62">segment</name></name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="13:9" pos:end="15:44"><if pos:start="13:9" pos:end="15:44">if <condition pos:start="13:12" pos:end="13:43">(<expr pos:start="13:13" pos:end="13:42"><operator pos:start="13:13" pos:end="13:13">!</operator><name pos:start="13:14" pos:end="13:42"><name pos:start="13:14" pos:end="13:14">s</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:28">segmentation</name><operator pos:start="13:29" pos:end="13:29">.</operator><name pos:start="13:30" pos:end="13:42">absolute_vals</name></name></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:44"><block_content pos:start="15:13" pos:end="15:44">

            <expr_stmt pos:start="15:13" pos:end="15:44"><expr pos:start="15:13" pos:end="15:43"><name pos:start="15:13" pos:end="15:24">filter_level</name> <operator pos:start="15:26" pos:end="15:27">+=</operator> <name pos:start="15:29" pos:end="15:43"><name pos:start="15:29" pos:end="15:29">s</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:37">filter</name><operator pos:start="15:38" pos:end="15:38">.</operator><name pos:start="15:39" pos:end="15:43">level</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="19:39">else<block type="pseudo" pos:start="19:9" pos:end="19:39"><block_content pos:start="19:9" pos:end="19:39">

        <expr_stmt pos:start="19:9" pos:end="19:39"><expr pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:20">filter_level</name> <operator pos:start="19:22" pos:end="19:22">=</operator> <name pos:start="19:24" pos:end="19:38"><name pos:start="19:24" pos:end="19:24">s</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:32">filter</name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:38">level</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="23:5" pos:end="36:0"><if pos:start="23:5" pos:end="36:0">if <condition pos:start="23:8" pos:end="23:28">(<expr pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:19">lf_delta</name><operator pos:start="23:20" pos:end="23:20">.</operator><name pos:start="23:21" pos:end="23:27">enabled</name></name></expr>)</condition> <block pos:start="23:30" pos:end="36:0">{<block_content pos:start="25:9" pos:end="27:51">

        <expr_stmt pos:start="25:9" pos:end="25:55"><expr pos:start="25:9" pos:end="25:54"><name pos:start="25:9" pos:end="25:20">filter_level</name> <operator pos:start="25:22" pos:end="25:23">+=</operator> <name pos:start="25:25" pos:end="25:54"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:35">lf_delta</name><operator pos:start="25:36" pos:end="25:36">.</operator><name pos:start="25:37" pos:end="25:39">ref</name><index pos:start="25:40" pos:end="25:54">[<expr pos:start="25:41" pos:end="25:53"><name pos:start="25:41" pos:end="25:53"><name pos:start="25:41" pos:end="25:42">mb</name><operator pos:start="25:43" pos:end="25:44">-&gt;</operator><name pos:start="25:45" pos:end="25:53">ref_frame</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:51"><expr pos:start="27:9" pos:end="27:50"><name pos:start="27:9" pos:end="27:20">filter_level</name> <operator pos:start="27:22" pos:end="27:23">+=</operator> <name pos:start="27:25" pos:end="27:50"><name pos:start="27:25" pos:end="27:25">s</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:35">lf_delta</name><operator pos:start="27:36" pos:end="27:36">.</operator><name pos:start="27:37" pos:end="27:40">mode</name><index pos:start="27:41" pos:end="27:50">[<expr pos:start="27:42" pos:end="27:49"><name pos:start="27:42" pos:end="27:49"><name pos:start="27:42" pos:end="27:43">mb</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:49">mode</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<comment type="block" pos:start="33:1" pos:end="33:70">/* Like av_clip for inputs 0 and max, where max is equal to (2^n-1) */</comment>

<cpp:define pos:start="35:1" pos:end="35:64">#<cpp:directive pos:start="35:2" pos:end="35:7">define</cpp:directive> <cpp:macro pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:16">POW2CLIP</name><parameter_list pos:start="35:17" pos:end="35:23">(<parameter pos:start="35:18" pos:end="35:18"><type pos:start="35:18" pos:end="35:18"><name pos:start="35:18" pos:end="35:18">x</name></type></parameter>,<parameter pos:start="35:20" pos:end="35:22"><type pos:start="35:20" pos:end="35:22"><name pos:start="35:20" pos:end="35:22">max</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="35:25" pos:end="35:64">(((x) &amp; ~max) ? (-(x))&gt;&gt;31 &amp; max : (x));</cpp:value></cpp:define>

    <expr_stmt pos:start="37:5" pos:end="37:46"><expr pos:start="37:5" pos:end="37:45"><name pos:start="37:5" pos:end="37:16">filter_level</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:45"><name pos:start="37:20" pos:end="37:27">POW2CLIP</name><argument_list pos:start="37:28" pos:end="37:45">(<argument pos:start="37:29" pos:end="37:40"><expr pos:start="37:29" pos:end="37:40"><name pos:start="37:29" pos:end="37:40">filter_level</name></expr></argument>, <argument pos:start="37:43" pos:end="37:44"><expr pos:start="37:43" pos:end="37:44"><literal type="number" pos:start="37:43" pos:end="37:44">63</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:18">interior_limit</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:33">filter_level</name></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:28">(<expr pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:17">filter</name><operator pos:start="43:18" pos:end="43:18">.</operator><name pos:start="43:19" pos:end="43:27">sharpness</name></name></expr>)</condition> <block pos:start="43:30" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:72">

        <expr_stmt pos:start="45:9" pos:end="45:59"><expr pos:start="45:9" pos:end="45:58"><name pos:start="45:9" pos:end="45:22">interior_limit</name> <operator pos:start="45:24" pos:end="45:26">&gt;&gt;=</operator> <ternary pos:start="45:28" pos:end="45:58"><condition pos:start="45:28" pos:end="45:52"><expr pos:start="45:28" pos:end="45:50"><name pos:start="45:28" pos:end="45:46"><name pos:start="45:28" pos:end="45:28">s</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:36">filter</name><operator pos:start="45:37" pos:end="45:37">.</operator><name pos:start="45:38" pos:end="45:46">sharpness</name></name> <operator pos:start="45:48" pos:end="45:48">&gt;</operator> <literal type="number" pos:start="45:50" pos:end="45:50">4</literal></expr> ?</condition><then pos:start="45:54" pos:end="45:54"> <expr pos:start="45:54" pos:end="45:54"><literal type="number" pos:start="45:54" pos:end="45:54">2</literal></expr> </then><else pos:start="45:56" pos:end="45:58">: <expr pos:start="45:58" pos:end="45:58"><literal type="number" pos:start="45:58" pos:end="45:58">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:72"><expr pos:start="47:9" pos:end="47:71"><name pos:start="47:9" pos:end="47:22">interior_limit</name> <operator pos:start="47:24" pos:end="47:24">=</operator> <call pos:start="47:26" pos:end="47:71"><name pos:start="47:26" pos:end="47:30">FFMIN</name><argument_list pos:start="47:31" pos:end="47:71">(<argument pos:start="47:32" pos:end="47:45"><expr pos:start="47:32" pos:end="47:45"><name pos:start="47:32" pos:end="47:45">interior_limit</name></expr></argument>, <argument pos:start="47:48" pos:end="47:70"><expr pos:start="47:48" pos:end="47:70"><literal type="number" pos:start="47:48" pos:end="47:50">9</literal> <operator pos:start="47:50" pos:end="47:50">-</operator> <name pos:start="47:52" pos:end="47:70"><name pos:start="47:52" pos:end="47:52">s</name><operator pos:start="47:53" pos:end="47:54">-&gt;</operator><name pos:start="47:55" pos:end="47:60">filter</name><operator pos:start="47:61" pos:end="47:61">.</operator><name pos:start="47:62" pos:end="47:70">sharpness</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:46"><expr pos:start="51:5" pos:end="51:45"><name pos:start="51:5" pos:end="51:18">interior_limit</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <call pos:start="51:22" pos:end="51:45"><name pos:start="51:22" pos:end="51:26">FFMAX</name><argument_list pos:start="51:27" pos:end="51:45">(<argument pos:start="51:28" pos:end="51:41"><expr pos:start="51:28" pos:end="51:41"><name pos:start="51:28" pos:end="51:41">interior_limit</name></expr></argument>, <argument pos:start="51:44" pos:end="51:44"><expr pos:start="51:44" pos:end="51:44"><literal type="number" pos:start="51:44" pos:end="51:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:35"><expr pos:start="55:5" pos:end="55:34"><name pos:start="55:5" pos:end="55:19"><name pos:start="55:5" pos:end="55:5">f</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:19">filter_level</name></name> <operator pos:start="55:21" pos:end="55:21">=</operator> <name pos:start="55:23" pos:end="55:34">filter_level</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:36"><expr pos:start="57:5" pos:end="57:35"><name pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:5">f</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:18">inner_limit</name></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:35">interior_limit</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:89"><expr pos:start="59:5" pos:end="59:88"><name pos:start="59:5" pos:end="59:19"><name pos:start="59:5" pos:end="59:5">f</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:19">inner_filter</name></name> <operator pos:start="59:21" pos:end="59:21">=</operator> <operator pos:start="59:23" pos:end="59:23">!</operator><name pos:start="59:24" pos:end="59:31"><name pos:start="59:24" pos:end="59:25">mb</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:31">skip</name></name> <operator pos:start="59:33" pos:end="59:34">||</operator> <name pos:start="59:36" pos:end="59:43"><name pos:start="59:36" pos:end="59:37">mb</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:43">mode</name></name> <operator pos:start="59:45" pos:end="59:46">==</operator> <name pos:start="59:48" pos:end="59:56">MODE_I4x4</name> <operator pos:start="59:58" pos:end="59:59">||</operator> <name pos:start="59:61" pos:end="59:68"><name pos:start="59:61" pos:end="59:62">mb</name><operator pos:start="59:63" pos:end="59:64">-&gt;</operator><name pos:start="59:65" pos:end="59:68">mode</name></name> <operator pos:start="59:70" pos:end="59:71">==</operator> <name pos:start="59:73" pos:end="59:88">VP8_MVMODE_SPLIT</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
