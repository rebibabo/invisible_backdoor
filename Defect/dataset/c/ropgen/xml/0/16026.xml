<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16026.c" pos:tabs="8"><function pos:start="1:1" pos:end="281:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">tmu2_start</name><parameter_list pos:start="1:23" pos:end="1:45">(<parameter pos:start="1:24" pos:end="1:44"><decl pos:start="1:24" pos:end="1:44"><type pos:start="1:24" pos:end="1:43"><name pos:start="1:24" pos:end="1:41">MilkymistTMU2State</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="281:1">{<block_content pos:start="5:5" pos:end="279:27">

    <decl_stmt pos:start="5:5" pos:end="19:6"><decl pos:start="5:5" pos:end="19:5"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:25"><name pos:start="5:9" pos:end="5:22">pbuffer_attrib</name><index pos:start="5:23" pos:end="5:25">[<expr pos:start="5:24" pos:end="5:24"><literal type="number" pos:start="5:24" pos:end="5:24">6</literal></expr>]</index></name> <init pos:start="5:27" pos:end="19:5">= <expr pos:start="5:29" pos:end="19:5"><block pos:start="5:29" pos:end="19:5">{

        <expr pos:start="7:9" pos:end="7:25"><name pos:start="7:9" pos:end="7:25">GLX_PBUFFER_WIDTH</name></expr>,

        <expr pos:start="9:9" pos:end="9:9"><literal type="number" pos:start="9:9" pos:end="9:9">0</literal></expr>,

        <expr pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:26">GLX_PBUFFER_HEIGHT</name></expr>,

        <expr pos:start="13:9" pos:end="13:9"><literal type="number" pos:start="13:9" pos:end="13:9">0</literal></expr>,

        <expr pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:30">GLX_PRESERVED_CONTENTS</name></expr>,

        <expr pos:start="17:9" pos:end="17:12"><name pos:start="17:9" pos:end="17:12">True</name></expr>

    }</block></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="23:5" pos:end="23:23"><decl pos:start="23:5" pos:end="23:22"><type pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:14">GLXPbuffer</name></type> <name pos:start="23:16" pos:end="23:22">pbuffer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:19"><decl pos:start="25:5" pos:end="25:18"><type pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:10">GLuint</name></type> <name pos:start="25:12" pos:end="25:18">texture</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:13"><decl pos:start="27:5" pos:end="27:12"><type pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:8">void</name> <modifier pos:start="27:10" pos:end="27:10">*</modifier></type><name pos:start="27:11" pos:end="27:12">fb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:30"><decl pos:start="29:5" pos:end="29:29"><type pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:22">target_phys_addr_t</name></type> <name pos:start="29:24" pos:end="29:29">fb_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:15"><decl pos:start="31:5" pos:end="31:14"><type pos:start="31:5" pos:end="31:10"><name pos:start="31:5" pos:end="31:8">void</name> <modifier pos:start="31:10" pos:end="31:10">*</modifier></type><name pos:start="31:11" pos:end="31:14">mesh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:32"><decl pos:start="33:5" pos:end="33:31"><type pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:22">target_phys_addr_t</name></type> <name pos:start="33:24" pos:end="33:31">mesh_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:12"><decl pos:start="35:5" pos:end="35:11"><type pos:start="35:5" pos:end="35:9"><name pos:start="35:5" pos:end="35:9">float</name></type> <name pos:start="35:11" pos:end="35:11">m</name></decl>;</decl_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:33"><expr pos:start="39:5" pos:end="39:32"><call pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:30">trace_milkymist_tmu2_start</name><argument_list pos:start="39:31" pos:end="39:32">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:53">/* Create and set up a suitable OpenGL context */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:43"><expr pos:start="45:5" pos:end="45:42"><name pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:18">pbuffer_attrib</name><index pos:start="45:19" pos:end="45:21">[<expr pos:start="45:20" pos:end="45:20"><literal type="number" pos:start="45:20" pos:end="45:20">1</literal></expr>]</index></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:42"><name pos:start="45:25" pos:end="45:25">s</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:31">regs</name><index pos:start="45:32" pos:end="45:42">[<expr pos:start="45:33" pos:end="45:41"><name pos:start="45:33" pos:end="45:41">R_DSTHRES</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:43"><expr pos:start="47:5" pos:end="47:42"><name pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:18">pbuffer_attrib</name><index pos:start="47:19" pos:end="47:21">[<expr pos:start="47:20" pos:end="47:20"><literal type="number" pos:start="47:20" pos:end="47:20">3</literal></expr>]</index></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <name pos:start="47:25" pos:end="47:42"><name pos:start="47:25" pos:end="47:25">s</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:31">regs</name><index pos:start="47:32" pos:end="47:42">[<expr pos:start="47:33" pos:end="47:41"><name pos:start="47:33" pos:end="47:41">R_DSTVRES</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:73"><expr pos:start="49:5" pos:end="49:72"><name pos:start="49:5" pos:end="49:11">pbuffer</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:72"><name pos:start="49:15" pos:end="49:30">glXCreatePbuffer</name><argument_list pos:start="49:31" pos:end="49:72">(<argument pos:start="49:32" pos:end="49:37"><expr pos:start="49:32" pos:end="49:37"><name pos:start="49:32" pos:end="49:37"><name pos:start="49:32" pos:end="49:32">s</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:37">dpy</name></name></expr></argument>, <argument pos:start="49:40" pos:end="49:55"><expr pos:start="49:40" pos:end="49:55"><name pos:start="49:40" pos:end="49:55"><name pos:start="49:40" pos:end="49:40">s</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:55">glx_fb_config</name></name></expr></argument>, <argument pos:start="49:58" pos:end="49:71"><expr pos:start="49:58" pos:end="49:71"><name pos:start="49:58" pos:end="49:71">pbuffer_attrib</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:68"><expr pos:start="51:5" pos:end="51:67"><call pos:start="51:5" pos:end="51:67"><name pos:start="51:5" pos:end="51:25">glXMakeContextCurrent</name><argument_list pos:start="51:26" pos:end="51:67">(<argument pos:start="51:27" pos:end="51:32"><expr pos:start="51:27" pos:end="51:32"><name pos:start="51:27" pos:end="51:32"><name pos:start="51:27" pos:end="51:27">s</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:32">dpy</name></name></expr></argument>, <argument pos:start="51:35" pos:end="51:41"><expr pos:start="51:35" pos:end="51:41"><name pos:start="51:35" pos:end="51:41">pbuffer</name></expr></argument>, <argument pos:start="51:44" pos:end="51:50"><expr pos:start="51:44" pos:end="51:50"><name pos:start="51:44" pos:end="51:50">pbuffer</name></expr></argument>, <argument pos:start="51:53" pos:end="51:66"><expr pos:start="51:53" pos:end="51:66"><name pos:start="51:53" pos:end="51:66"><name pos:start="51:53" pos:end="51:53">s</name><operator pos:start="51:54" pos:end="51:55">-&gt;</operator><name pos:start="51:56" pos:end="51:66">glx_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:60">/* Fixup endianness. TODO: would it work on BE hosts? */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:43"><expr pos:start="57:5" pos:end="57:42"><call pos:start="57:5" pos:end="57:42"><name pos:start="57:5" pos:end="57:17">glPixelStorei</name><argument_list pos:start="57:18" pos:end="57:42">(<argument pos:start="57:19" pos:end="57:38"><expr pos:start="57:19" pos:end="57:38"><name pos:start="57:19" pos:end="57:38">GL_UNPACK_SWAP_BYTES</name></expr></argument>, <argument pos:start="57:41" pos:end="57:41"><expr pos:start="57:41" pos:end="57:41"><literal type="number" pos:start="57:41" pos:end="57:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:41"><expr pos:start="59:5" pos:end="59:40"><call pos:start="59:5" pos:end="59:40"><name pos:start="59:5" pos:end="59:17">glPixelStorei</name><argument_list pos:start="59:18" pos:end="59:40">(<argument pos:start="59:19" pos:end="59:36"><expr pos:start="59:19" pos:end="59:36"><name pos:start="59:19" pos:end="59:36">GL_PACK_SWAP_BYTES</name></expr></argument>, <argument pos:start="59:39" pos:end="59:39"><expr pos:start="59:39" pos:end="59:39"><literal type="number" pos:start="59:39" pos:end="59:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:23">/* Row alignment */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:42"><expr pos:start="65:5" pos:end="65:41"><call pos:start="65:5" pos:end="65:41"><name pos:start="65:5" pos:end="65:17">glPixelStorei</name><argument_list pos:start="65:18" pos:end="65:41">(<argument pos:start="65:19" pos:end="65:37"><expr pos:start="65:19" pos:end="65:37"><name pos:start="65:19" pos:end="65:37">GL_UNPACK_ALIGNMENT</name></expr></argument>, <argument pos:start="65:40" pos:end="65:40"><expr pos:start="65:40" pos:end="65:40"><literal type="number" pos:start="65:40" pos:end="65:40">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:40"><expr pos:start="67:5" pos:end="67:39"><call pos:start="67:5" pos:end="67:39"><name pos:start="67:5" pos:end="67:17">glPixelStorei</name><argument_list pos:start="67:18" pos:end="67:39">(<argument pos:start="67:19" pos:end="67:35"><expr pos:start="67:19" pos:end="67:35"><name pos:start="67:19" pos:end="67:35">GL_PACK_ALIGNMENT</name></expr></argument>, <argument pos:start="67:38" pos:end="67:38"><expr pos:start="67:38" pos:end="67:38"><literal type="number" pos:start="67:38" pos:end="67:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:65">/* Read the QEMU source framebuffer into an OpenGL texture */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:31"><expr pos:start="73:5" pos:end="73:30"><call pos:start="73:5" pos:end="73:30"><name pos:start="73:5" pos:end="73:17">glGenTextures</name><argument_list pos:start="73:18" pos:end="73:30">(<argument pos:start="73:19" pos:end="73:19"><expr pos:start="73:19" pos:end="73:19"><literal type="number" pos:start="73:19" pos:end="73:19">1</literal></expr></argument>, <argument pos:start="73:22" pos:end="73:29"><expr pos:start="73:22" pos:end="73:29"><operator pos:start="73:22" pos:end="73:22">&amp;</operator><name pos:start="73:23" pos:end="73:29">texture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:42"><expr pos:start="75:5" pos:end="75:41"><call pos:start="75:5" pos:end="75:41"><name pos:start="75:5" pos:end="75:17">glBindTexture</name><argument_list pos:start="75:18" pos:end="75:41">(<argument pos:start="75:19" pos:end="75:31"><expr pos:start="75:19" pos:end="75:31"><name pos:start="75:19" pos:end="75:31">GL_TEXTURE_2D</name></expr></argument>, <argument pos:start="75:34" pos:end="75:40"><expr pos:start="75:34" pos:end="75:40"><name pos:start="75:34" pos:end="75:40">texture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:53"><expr pos:start="77:5" pos:end="77:52"><name pos:start="77:5" pos:end="77:10">fb_len</name> <operator pos:start="77:12" pos:end="77:12">=</operator> <literal type="number" pos:start="77:14" pos:end="77:14">2</literal><operator pos:start="77:15" pos:end="77:15">*</operator><name pos:start="77:16" pos:end="77:33"><name pos:start="77:16" pos:end="77:16">s</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:22">regs</name><index pos:start="77:23" pos:end="77:33">[<expr pos:start="77:24" pos:end="77:32"><name pos:start="77:24" pos:end="77:32">R_TEXHRES</name></expr>]</index></name><operator pos:start="77:34" pos:end="77:34">*</operator><name pos:start="77:35" pos:end="77:52"><name pos:start="77:35" pos:end="77:35">s</name><operator pos:start="77:36" pos:end="77:37">-&gt;</operator><name pos:start="77:38" pos:end="77:41">regs</name><index pos:start="77:42" pos:end="77:52">[<expr pos:start="77:43" pos:end="77:51"><name pos:start="77:43" pos:end="77:51">R_TEXVRES</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:65"><expr pos:start="79:5" pos:end="79:64"><name pos:start="79:5" pos:end="79:6">fb</name> <operator pos:start="79:8" pos:end="79:8">=</operator> <call pos:start="79:10" pos:end="79:64"><name pos:start="79:10" pos:end="79:32">cpu_physical_memory_map</name><argument_list pos:start="79:33" pos:end="79:64">(<argument pos:start="79:34" pos:end="79:51"><expr pos:start="79:34" pos:end="79:51"><name pos:start="79:34" pos:end="79:51"><name pos:start="79:34" pos:end="79:34">s</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:40">regs</name><index pos:start="79:41" pos:end="79:51">[<expr pos:start="79:42" pos:end="79:50"><name pos:start="79:42" pos:end="79:50">R_TEXFBUF</name></expr>]</index></name></expr></argument>, <argument pos:start="79:54" pos:end="79:60"><expr pos:start="79:54" pos:end="79:60"><operator pos:start="79:54" pos:end="79:54">&amp;</operator><name pos:start="79:55" pos:end="79:60">fb_len</name></expr></argument>, <argument pos:start="79:63" pos:end="79:63"><expr pos:start="79:63" pos:end="79:63"><literal type="number" pos:start="79:63" pos:end="79:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="91:5"><if pos:start="81:5" pos:end="91:5">if <condition pos:start="81:8" pos:end="81:19">(<expr pos:start="81:9" pos:end="81:18"><name pos:start="81:9" pos:end="81:10">fb</name> <operator pos:start="81:12" pos:end="81:13">==</operator> <name pos:start="81:15" pos:end="81:18">NULL</name></expr>)</condition> <block pos:start="81:21" pos:end="91:5">{<block_content pos:start="83:9" pos:end="89:15">

        <expr_stmt pos:start="83:9" pos:end="83:38"><expr pos:start="83:9" pos:end="83:37"><call pos:start="83:9" pos:end="83:37"><name pos:start="83:9" pos:end="83:24">glDeleteTextures</name><argument_list pos:start="83:25" pos:end="83:37">(<argument pos:start="83:26" pos:end="83:26"><expr pos:start="83:26" pos:end="83:26"><literal type="number" pos:start="83:26" pos:end="83:26">1</literal></expr></argument>, <argument pos:start="83:29" pos:end="83:36"><expr pos:start="83:29" pos:end="83:36"><operator pos:start="83:29" pos:end="83:29">&amp;</operator><name pos:start="83:30" pos:end="83:36">texture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:56"><expr pos:start="85:9" pos:end="85:55"><call pos:start="85:9" pos:end="85:55"><name pos:start="85:9" pos:end="85:29">glXMakeContextCurrent</name><argument_list pos:start="85:30" pos:end="85:55">(<argument pos:start="85:31" pos:end="85:36"><expr pos:start="85:31" pos:end="85:36"><name pos:start="85:31" pos:end="85:36"><name pos:start="85:31" pos:end="85:31">s</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:36">dpy</name></name></expr></argument>, <argument pos:start="85:39" pos:end="85:42"><expr pos:start="85:39" pos:end="85:42"><name pos:start="85:39" pos:end="85:42">None</name></expr></argument>, <argument pos:start="85:45" pos:end="85:48"><expr pos:start="85:45" pos:end="85:48"><name pos:start="85:45" pos:end="85:48">None</name></expr></argument>, <argument pos:start="85:51" pos:end="85:54"><expr pos:start="85:51" pos:end="85:54"><name pos:start="85:51" pos:end="85:54">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:43"><expr pos:start="87:9" pos:end="87:42"><call pos:start="87:9" pos:end="87:42"><name pos:start="87:9" pos:end="87:25">glXDestroyPbuffer</name><argument_list pos:start="87:26" pos:end="87:42">(<argument pos:start="87:27" pos:end="87:32"><expr pos:start="87:27" pos:end="87:32"><name pos:start="87:27" pos:end="87:32"><name pos:start="87:27" pos:end="87:27">s</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:32">dpy</name></name></expr></argument>, <argument pos:start="87:35" pos:end="87:41"><expr pos:start="87:35" pos:end="87:41"><name pos:start="87:35" pos:end="87:41">pbuffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="89:9" pos:end="89:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="93:5" pos:end="95:52"><expr pos:start="93:5" pos:end="95:51"><call pos:start="93:5" pos:end="95:51"><name pos:start="93:5" pos:end="93:16">glTexImage2D</name><argument_list pos:start="93:17" pos:end="95:51">(<argument pos:start="93:18" pos:end="93:30"><expr pos:start="93:18" pos:end="93:30"><name pos:start="93:18" pos:end="93:30">GL_TEXTURE_2D</name></expr></argument>, <argument pos:start="93:33" pos:end="93:33"><expr pos:start="93:33" pos:end="93:33"><literal type="number" pos:start="93:33" pos:end="93:33">0</literal></expr></argument>, <argument pos:start="93:36" pos:end="93:36"><expr pos:start="93:36" pos:end="93:36"><literal type="number" pos:start="93:36" pos:end="93:36">3</literal></expr></argument>, <argument pos:start="93:39" pos:end="93:56"><expr pos:start="93:39" pos:end="93:56"><name pos:start="93:39" pos:end="93:56"><name pos:start="93:39" pos:end="93:39">s</name><operator pos:start="93:40" pos:end="93:41">-&gt;</operator><name pos:start="93:42" pos:end="93:45">regs</name><index pos:start="93:46" pos:end="93:56">[<expr pos:start="93:47" pos:end="93:55"><name pos:start="93:47" pos:end="93:55">R_TEXHRES</name></expr>]</index></name></expr></argument>, <argument pos:start="93:59" pos:end="93:76"><expr pos:start="93:59" pos:end="93:76"><name pos:start="93:59" pos:end="93:76"><name pos:start="93:59" pos:end="93:59">s</name><operator pos:start="93:60" pos:end="93:61">-&gt;</operator><name pos:start="93:62" pos:end="93:65">regs</name><index pos:start="93:66" pos:end="93:76">[<expr pos:start="93:67" pos:end="93:75"><name pos:start="93:67" pos:end="93:75">R_TEXVRES</name></expr>]</index></name></expr></argument>,

            <argument pos:start="95:13" pos:end="95:13"><expr pos:start="95:13" pos:end="95:13"><literal type="number" pos:start="95:13" pos:end="95:13">0</literal></expr></argument>, <argument pos:start="95:16" pos:end="95:21"><expr pos:start="95:16" pos:end="95:21"><name pos:start="95:16" pos:end="95:21">GL_RGB</name></expr></argument>, <argument pos:start="95:24" pos:end="95:46"><expr pos:start="95:24" pos:end="95:46"><name pos:start="95:24" pos:end="95:46">GL_UNSIGNED_SHORT_5_6_5</name></expr></argument>, <argument pos:start="95:49" pos:end="95:50"><expr pos:start="95:49" pos:end="95:50"><name pos:start="95:49" pos:end="95:50">fb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:53"><expr pos:start="97:5" pos:end="97:52"><call pos:start="97:5" pos:end="97:52"><name pos:start="97:5" pos:end="97:29">cpu_physical_memory_unmap</name><argument_list pos:start="97:30" pos:end="97:52">(<argument pos:start="97:31" pos:end="97:32"><expr pos:start="97:31" pos:end="97:32"><name pos:start="97:31" pos:end="97:32">fb</name></expr></argument>, <argument pos:start="97:35" pos:end="97:40"><expr pos:start="97:35" pos:end="97:40"><name pos:start="97:35" pos:end="97:40">fb_len</name></expr></argument>, <argument pos:start="97:43" pos:end="97:43"><expr pos:start="97:43" pos:end="97:43"><literal type="number" pos:start="97:43" pos:end="97:43">0</literal></expr></argument>, <argument pos:start="97:46" pos:end="97:51"><expr pos:start="97:46" pos:end="97:51"><name pos:start="97:46" pos:end="97:51">fb_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="101:5" pos:end="101:34">/* Set up texturing options */</comment>

    <comment type="block" pos:start="103:5" pos:end="113:7">/* WARNING:

     * Many cases of TMU2 masking are not supported by OpenGL.

     * We only implement the most common ones:

     *  - full bilinear filtering vs. nearest texel

     *  - texture clamping vs. texture wrapping

     */</comment>

    <if_stmt pos:start="115:5" pos:end="127:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:44">(<expr pos:start="115:9" pos:end="115:43"><operator pos:start="115:9" pos:end="115:9">(</operator><name pos:start="115:10" pos:end="115:28"><name pos:start="115:10" pos:end="115:10">s</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:16">regs</name><index pos:start="115:17" pos:end="115:28">[<expr pos:start="115:18" pos:end="115:27"><name pos:start="115:18" pos:end="115:27">R_TEXHMASK</name></expr>]</index></name> <operator pos:start="115:30" pos:end="115:30">&amp;</operator> <literal type="number" pos:start="115:32" pos:end="115:35">0x3f</literal><operator pos:start="115:36" pos:end="115:36">)</operator> <operator pos:start="115:38" pos:end="115:38">&gt;</operator> <literal type="number" pos:start="115:40" pos:end="115:43">0x20</literal></expr>)</condition> <block pos:start="115:46" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:73">

        <expr_stmt pos:start="117:9" pos:end="117:73"><expr pos:start="117:9" pos:end="117:72"><call pos:start="117:9" pos:end="117:72"><name pos:start="117:9" pos:end="117:23">glTexParameteri</name><argument_list pos:start="117:24" pos:end="117:72">(<argument pos:start="117:25" pos:end="117:37"><expr pos:start="117:25" pos:end="117:37"><name pos:start="117:25" pos:end="117:37">GL_TEXTURE_2D</name></expr></argument>, <argument pos:start="117:40" pos:end="117:60"><expr pos:start="117:40" pos:end="117:60"><name pos:start="117:40" pos:end="117:60">GL_TEXTURE_MIN_FILTER</name></expr></argument>, <argument pos:start="117:63" pos:end="117:71"><expr pos:start="117:63" pos:end="117:71"><name pos:start="117:63" pos:end="117:71">GL_LINEAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:73"><expr pos:start="119:9" pos:end="119:72"><call pos:start="119:9" pos:end="119:72"><name pos:start="119:9" pos:end="119:23">glTexParameteri</name><argument_list pos:start="119:24" pos:end="119:72">(<argument pos:start="119:25" pos:end="119:37"><expr pos:start="119:25" pos:end="119:37"><name pos:start="119:25" pos:end="119:37">GL_TEXTURE_2D</name></expr></argument>, <argument pos:start="119:40" pos:end="119:60"><expr pos:start="119:40" pos:end="119:60"><name pos:start="119:40" pos:end="119:60">GL_TEXTURE_MAG_FILTER</name></expr></argument>, <argument pos:start="119:63" pos:end="119:71"><expr pos:start="119:63" pos:end="119:71"><name pos:start="119:63" pos:end="119:71">GL_LINEAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="121:7" pos:end="127:5">else <block pos:start="121:12" pos:end="127:5">{<block_content pos:start="123:9" pos:end="125:74">

        <expr_stmt pos:start="123:9" pos:end="123:74"><expr pos:start="123:9" pos:end="123:73"><call pos:start="123:9" pos:end="123:73"><name pos:start="123:9" pos:end="123:23">glTexParameteri</name><argument_list pos:start="123:24" pos:end="123:73">(<argument pos:start="123:25" pos:end="123:37"><expr pos:start="123:25" pos:end="123:37"><name pos:start="123:25" pos:end="123:37">GL_TEXTURE_2D</name></expr></argument>, <argument pos:start="123:40" pos:end="123:60"><expr pos:start="123:40" pos:end="123:60"><name pos:start="123:40" pos:end="123:60">GL_TEXTURE_MIN_FILTER</name></expr></argument>, <argument pos:start="123:63" pos:end="123:72"><expr pos:start="123:63" pos:end="123:72"><name pos:start="123:63" pos:end="123:72">GL_NEAREST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:74"><expr pos:start="125:9" pos:end="125:73"><call pos:start="125:9" pos:end="125:73"><name pos:start="125:9" pos:end="125:23">glTexParameteri</name><argument_list pos:start="125:24" pos:end="125:73">(<argument pos:start="125:25" pos:end="125:37"><expr pos:start="125:25" pos:end="125:37"><name pos:start="125:25" pos:end="125:37">GL_TEXTURE_2D</name></expr></argument>, <argument pos:start="125:40" pos:end="125:60"><expr pos:start="125:40" pos:end="125:60"><name pos:start="125:40" pos:end="125:60">GL_TEXTURE_MAG_FILTER</name></expr></argument>, <argument pos:start="125:63" pos:end="125:72"><expr pos:start="125:63" pos:end="125:72"><name pos:start="125:63" pos:end="125:72">GL_NEAREST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="129:5" pos:end="137:5"><if pos:start="129:5" pos:end="133:5">if <condition pos:start="129:8" pos:end="129:56">(<expr pos:start="129:9" pos:end="129:55"><operator pos:start="129:9" pos:end="129:9">(</operator><name pos:start="129:10" pos:end="129:28"><name pos:start="129:10" pos:end="129:10">s</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:16">regs</name><index pos:start="129:17" pos:end="129:28">[<expr pos:start="129:18" pos:end="129:27"><name pos:start="129:18" pos:end="129:27">R_TEXHMASK</name></expr>]</index></name> <operator pos:start="129:30" pos:end="129:31">&gt;&gt;</operator> <literal type="number" pos:start="129:33" pos:end="129:33">6</literal><operator pos:start="129:34" pos:end="129:34">)</operator> <operator pos:start="129:36" pos:end="129:36">&amp;</operator> <name pos:start="129:38" pos:end="129:55"><name pos:start="129:38" pos:end="129:38">s</name><operator pos:start="129:39" pos:end="129:40">-&gt;</operator><name pos:start="129:41" pos:end="129:44">regs</name><index pos:start="129:45" pos:end="129:55">[<expr pos:start="129:46" pos:end="129:54"><name pos:start="129:46" pos:end="129:54">R_TEXHRES</name></expr>]</index></name></expr>)</condition> <block pos:start="129:58" pos:end="133:5">{<block_content pos:start="131:9" pos:end="131:68">

        <expr_stmt pos:start="131:9" pos:end="131:68"><expr pos:start="131:9" pos:end="131:67"><call pos:start="131:9" pos:end="131:67"><name pos:start="131:9" pos:end="131:23">glTexParameteri</name><argument_list pos:start="131:24" pos:end="131:67">(<argument pos:start="131:25" pos:end="131:37"><expr pos:start="131:25" pos:end="131:37"><name pos:start="131:25" pos:end="131:37">GL_TEXTURE_2D</name></expr></argument>, <argument pos:start="131:40" pos:end="131:56"><expr pos:start="131:40" pos:end="131:56"><name pos:start="131:40" pos:end="131:56">GL_TEXTURE_WRAP_S</name></expr></argument>, <argument pos:start="131:59" pos:end="131:66"><expr pos:start="131:59" pos:end="131:66"><name pos:start="131:59" pos:end="131:66">GL_CLAMP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="133:7" pos:end="137:5">else <block pos:start="133:12" pos:end="137:5">{<block_content pos:start="135:9" pos:end="135:69">

        <expr_stmt pos:start="135:9" pos:end="135:69"><expr pos:start="135:9" pos:end="135:68"><call pos:start="135:9" pos:end="135:68"><name pos:start="135:9" pos:end="135:23">glTexParameteri</name><argument_list pos:start="135:24" pos:end="135:68">(<argument pos:start="135:25" pos:end="135:37"><expr pos:start="135:25" pos:end="135:37"><name pos:start="135:25" pos:end="135:37">GL_TEXTURE_2D</name></expr></argument>, <argument pos:start="135:40" pos:end="135:56"><expr pos:start="135:40" pos:end="135:56"><name pos:start="135:40" pos:end="135:56">GL_TEXTURE_WRAP_S</name></expr></argument>, <argument pos:start="135:59" pos:end="135:67"><expr pos:start="135:59" pos:end="135:67"><name pos:start="135:59" pos:end="135:67">GL_REPEAT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="139:5" pos:end="147:5"><if pos:start="139:5" pos:end="143:5">if <condition pos:start="139:8" pos:end="139:56">(<expr pos:start="139:9" pos:end="139:55"><operator pos:start="139:9" pos:end="139:9">(</operator><name pos:start="139:10" pos:end="139:28"><name pos:start="139:10" pos:end="139:10">s</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:16">regs</name><index pos:start="139:17" pos:end="139:28">[<expr pos:start="139:18" pos:end="139:27"><name pos:start="139:18" pos:end="139:27">R_TEXVMASK</name></expr>]</index></name> <operator pos:start="139:30" pos:end="139:31">&gt;&gt;</operator> <literal type="number" pos:start="139:33" pos:end="139:33">6</literal><operator pos:start="139:34" pos:end="139:34">)</operator> <operator pos:start="139:36" pos:end="139:36">&amp;</operator> <name pos:start="139:38" pos:end="139:55"><name pos:start="139:38" pos:end="139:38">s</name><operator pos:start="139:39" pos:end="139:40">-&gt;</operator><name pos:start="139:41" pos:end="139:44">regs</name><index pos:start="139:45" pos:end="139:55">[<expr pos:start="139:46" pos:end="139:54"><name pos:start="139:46" pos:end="139:54">R_TEXVRES</name></expr>]</index></name></expr>)</condition> <block pos:start="139:58" pos:end="143:5">{<block_content pos:start="141:9" pos:end="141:68">

        <expr_stmt pos:start="141:9" pos:end="141:68"><expr pos:start="141:9" pos:end="141:67"><call pos:start="141:9" pos:end="141:67"><name pos:start="141:9" pos:end="141:23">glTexParameteri</name><argument_list pos:start="141:24" pos:end="141:67">(<argument pos:start="141:25" pos:end="141:37"><expr pos:start="141:25" pos:end="141:37"><name pos:start="141:25" pos:end="141:37">GL_TEXTURE_2D</name></expr></argument>, <argument pos:start="141:40" pos:end="141:56"><expr pos:start="141:40" pos:end="141:56"><name pos:start="141:40" pos:end="141:56">GL_TEXTURE_WRAP_T</name></expr></argument>, <argument pos:start="141:59" pos:end="141:66"><expr pos:start="141:59" pos:end="141:66"><name pos:start="141:59" pos:end="141:66">GL_CLAMP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="143:7" pos:end="147:5">else <block pos:start="143:12" pos:end="147:5">{<block_content pos:start="145:9" pos:end="145:69">

        <expr_stmt pos:start="145:9" pos:end="145:69"><expr pos:start="145:9" pos:end="145:68"><call pos:start="145:9" pos:end="145:68"><name pos:start="145:9" pos:end="145:23">glTexParameteri</name><argument_list pos:start="145:24" pos:end="145:68">(<argument pos:start="145:25" pos:end="145:37"><expr pos:start="145:25" pos:end="145:37"><name pos:start="145:25" pos:end="145:37">GL_TEXTURE_2D</name></expr></argument>, <argument pos:start="145:40" pos:end="145:56"><expr pos:start="145:40" pos:end="145:56"><name pos:start="145:40" pos:end="145:56">GL_TEXTURE_WRAP_T</name></expr></argument>, <argument pos:start="145:59" pos:end="145:67"><expr pos:start="145:59" pos:end="145:67"><name pos:start="145:59" pos:end="145:67">GL_REPEAT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="151:5" pos:end="151:32">/* Translucency and decay */</comment>

    <expr_stmt pos:start="153:5" pos:end="153:23"><expr pos:start="153:5" pos:end="153:22"><call pos:start="153:5" pos:end="153:22"><name pos:start="153:5" pos:end="153:12">glEnable</name><argument_list pos:start="153:13" pos:end="153:22">(<argument pos:start="153:14" pos:end="153:21"><expr pos:start="153:14" pos:end="153:21"><name pos:start="153:14" pos:end="153:21">GL_BLEND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:54"><expr pos:start="155:5" pos:end="155:53"><call pos:start="155:5" pos:end="155:53"><name pos:start="155:5" pos:end="155:15">glBlendFunc</name><argument_list pos:start="155:16" pos:end="155:53">(<argument pos:start="155:17" pos:end="155:28"><expr pos:start="155:17" pos:end="155:28"><name pos:start="155:17" pos:end="155:28">GL_SRC_ALPHA</name></expr></argument>, <argument pos:start="155:31" pos:end="155:52"><expr pos:start="155:31" pos:end="155:52"><name pos:start="155:31" pos:end="155:52">GL_ONE_MINUS_SRC_ALPHA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:51"><expr pos:start="157:5" pos:end="157:50"><name pos:start="157:5" pos:end="157:5">m</name> <operator pos:start="157:7" pos:end="157:7">=</operator> <operator pos:start="157:9" pos:end="157:9">(</operator><name pos:start="157:10" pos:end="157:14">float</name><operator pos:start="157:15" pos:end="157:15">)</operator><operator pos:start="157:16" pos:end="157:16">(</operator><name pos:start="157:17" pos:end="157:37"><name pos:start="157:17" pos:end="157:17">s</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:23">regs</name><index pos:start="157:24" pos:end="157:37">[<expr pos:start="157:25" pos:end="157:36"><name pos:start="157:25" pos:end="157:36">R_BRIGHTNESS</name></expr>]</index></name> <operator pos:start="157:39" pos:end="157:39">+</operator> <literal type="number" pos:start="157:41" pos:end="157:41">1</literal><operator pos:start="157:42" pos:end="157:42">)</operator> <operator pos:start="157:44" pos:end="157:44">/</operator> <literal type="number" pos:start="157:46" pos:end="157:50">64.0f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:62"><expr pos:start="159:5" pos:end="159:61"><call pos:start="159:5" pos:end="159:61"><name pos:start="159:5" pos:end="159:13">glColor4f</name><argument_list pos:start="159:14" pos:end="159:61">(<argument pos:start="159:15" pos:end="159:15"><expr pos:start="159:15" pos:end="159:15"><name pos:start="159:15" pos:end="159:15">m</name></expr></argument>, <argument pos:start="159:18" pos:end="159:18"><expr pos:start="159:18" pos:end="159:18"><name pos:start="159:18" pos:end="159:18">m</name></expr></argument>, <argument pos:start="159:21" pos:end="159:21"><expr pos:start="159:21" pos:end="159:21"><name pos:start="159:21" pos:end="159:21">m</name></expr></argument>, <argument pos:start="159:24" pos:end="159:60"><expr pos:start="159:24" pos:end="159:60"><operator pos:start="159:24" pos:end="159:24">(</operator><name pos:start="159:25" pos:end="159:29">float</name><operator pos:start="159:30" pos:end="159:30">)</operator><operator pos:start="159:31" pos:end="159:31">(</operator><name pos:start="159:32" pos:end="159:47"><name pos:start="159:32" pos:end="159:32">s</name><operator pos:start="159:33" pos:end="159:34">-&gt;</operator><name pos:start="159:35" pos:end="159:38">regs</name><index pos:start="159:39" pos:end="159:47">[<expr pos:start="159:40" pos:end="159:46"><name pos:start="159:40" pos:end="159:46">R_ALPHA</name></expr>]</index></name> <operator pos:start="159:49" pos:end="159:49">+</operator> <literal type="number" pos:start="159:51" pos:end="159:51">1</literal><operator pos:start="159:52" pos:end="159:52">)</operator> <operator pos:start="159:54" pos:end="159:54">/</operator> <literal type="number" pos:start="159:56" pos:end="159:60">64.0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="163:5" pos:end="163:69">/* Read the QEMU dest. framebuffer into the OpenGL framebuffer */</comment>

    <expr_stmt pos:start="165:5" pos:end="165:57"><expr pos:start="165:5" pos:end="165:56"><name pos:start="165:5" pos:end="165:10">fb_len</name> <operator pos:start="165:12" pos:end="165:12">=</operator> <literal type="number" pos:start="165:14" pos:end="165:14">2</literal> <operator pos:start="165:16" pos:end="165:16">*</operator> <name pos:start="165:18" pos:end="165:35"><name pos:start="165:18" pos:end="165:18">s</name><operator pos:start="165:19" pos:end="165:20">-&gt;</operator><name pos:start="165:21" pos:end="165:24">regs</name><index pos:start="165:25" pos:end="165:35">[<expr pos:start="165:26" pos:end="165:34"><name pos:start="165:26" pos:end="165:34">R_DSTHRES</name></expr>]</index></name> <operator pos:start="165:37" pos:end="165:37">*</operator> <name pos:start="165:39" pos:end="165:56"><name pos:start="165:39" pos:end="165:39">s</name><operator pos:start="165:40" pos:end="165:41">-&gt;</operator><name pos:start="165:42" pos:end="165:45">regs</name><index pos:start="165:46" pos:end="165:56">[<expr pos:start="165:47" pos:end="165:55"><name pos:start="165:47" pos:end="165:55">R_DSTVRES</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:65"><expr pos:start="167:5" pos:end="167:64"><name pos:start="167:5" pos:end="167:6">fb</name> <operator pos:start="167:8" pos:end="167:8">=</operator> <call pos:start="167:10" pos:end="167:64"><name pos:start="167:10" pos:end="167:32">cpu_physical_memory_map</name><argument_list pos:start="167:33" pos:end="167:64">(<argument pos:start="167:34" pos:end="167:51"><expr pos:start="167:34" pos:end="167:51"><name pos:start="167:34" pos:end="167:51"><name pos:start="167:34" pos:end="167:34">s</name><operator pos:start="167:35" pos:end="167:36">-&gt;</operator><name pos:start="167:37" pos:end="167:40">regs</name><index pos:start="167:41" pos:end="167:51">[<expr pos:start="167:42" pos:end="167:50"><name pos:start="167:42" pos:end="167:50">R_DSTFBUF</name></expr>]</index></name></expr></argument>, <argument pos:start="167:54" pos:end="167:60"><expr pos:start="167:54" pos:end="167:60"><operator pos:start="167:54" pos:end="167:54">&amp;</operator><name pos:start="167:55" pos:end="167:60">fb_len</name></expr></argument>, <argument pos:start="167:63" pos:end="167:63"><expr pos:start="167:63" pos:end="167:63"><literal type="number" pos:start="167:63" pos:end="167:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="169:5" pos:end="179:5"><if pos:start="169:5" pos:end="179:5">if <condition pos:start="169:8" pos:end="169:19">(<expr pos:start="169:9" pos:end="169:18"><name pos:start="169:9" pos:end="169:10">fb</name> <operator pos:start="169:12" pos:end="169:13">==</operator> <name pos:start="169:15" pos:end="169:18">NULL</name></expr>)</condition> <block pos:start="169:21" pos:end="179:5">{<block_content pos:start="171:9" pos:end="177:15">

        <expr_stmt pos:start="171:9" pos:end="171:38"><expr pos:start="171:9" pos:end="171:37"><call pos:start="171:9" pos:end="171:37"><name pos:start="171:9" pos:end="171:24">glDeleteTextures</name><argument_list pos:start="171:25" pos:end="171:37">(<argument pos:start="171:26" pos:end="171:26"><expr pos:start="171:26" pos:end="171:26"><literal type="number" pos:start="171:26" pos:end="171:26">1</literal></expr></argument>, <argument pos:start="171:29" pos:end="171:36"><expr pos:start="171:29" pos:end="171:36"><operator pos:start="171:29" pos:end="171:29">&amp;</operator><name pos:start="171:30" pos:end="171:36">texture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:56"><expr pos:start="173:9" pos:end="173:55"><call pos:start="173:9" pos:end="173:55"><name pos:start="173:9" pos:end="173:29">glXMakeContextCurrent</name><argument_list pos:start="173:30" pos:end="173:55">(<argument pos:start="173:31" pos:end="173:36"><expr pos:start="173:31" pos:end="173:36"><name pos:start="173:31" pos:end="173:36"><name pos:start="173:31" pos:end="173:31">s</name><operator pos:start="173:32" pos:end="173:33">-&gt;</operator><name pos:start="173:34" pos:end="173:36">dpy</name></name></expr></argument>, <argument pos:start="173:39" pos:end="173:42"><expr pos:start="173:39" pos:end="173:42"><name pos:start="173:39" pos:end="173:42">None</name></expr></argument>, <argument pos:start="173:45" pos:end="173:48"><expr pos:start="173:45" pos:end="173:48"><name pos:start="173:45" pos:end="173:48">None</name></expr></argument>, <argument pos:start="173:51" pos:end="173:54"><expr pos:start="173:51" pos:end="173:54"><name pos:start="173:51" pos:end="173:54">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:43"><expr pos:start="175:9" pos:end="175:42"><call pos:start="175:9" pos:end="175:42"><name pos:start="175:9" pos:end="175:25">glXDestroyPbuffer</name><argument_list pos:start="175:26" pos:end="175:42">(<argument pos:start="175:27" pos:end="175:32"><expr pos:start="175:27" pos:end="175:32"><name pos:start="175:27" pos:end="175:32"><name pos:start="175:27" pos:end="175:27">s</name><operator pos:start="175:28" pos:end="175:29">-&gt;</operator><name pos:start="175:30" pos:end="175:32">dpy</name></name></expr></argument>, <argument pos:start="175:35" pos:end="175:41"><expr pos:start="175:35" pos:end="175:41"><name pos:start="175:35" pos:end="175:41">pbuffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="177:9" pos:end="177:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="183:5" pos:end="185:41"><expr pos:start="183:5" pos:end="185:40"><call pos:start="183:5" pos:end="185:40"><name pos:start="183:5" pos:end="183:16">glDrawPixels</name><argument_list pos:start="183:17" pos:end="185:40">(<argument pos:start="183:18" pos:end="183:35"><expr pos:start="183:18" pos:end="183:35"><name pos:start="183:18" pos:end="183:35"><name pos:start="183:18" pos:end="183:18">s</name><operator pos:start="183:19" pos:end="183:20">-&gt;</operator><name pos:start="183:21" pos:end="183:24">regs</name><index pos:start="183:25" pos:end="183:35">[<expr pos:start="183:26" pos:end="183:34"><name pos:start="183:26" pos:end="183:34">R_DSTHRES</name></expr>]</index></name></expr></argument>, <argument pos:start="183:38" pos:end="183:55"><expr pos:start="183:38" pos:end="183:55"><name pos:start="183:38" pos:end="183:55"><name pos:start="183:38" pos:end="183:38">s</name><operator pos:start="183:39" pos:end="183:40">-&gt;</operator><name pos:start="183:41" pos:end="183:44">regs</name><index pos:start="183:45" pos:end="183:55">[<expr pos:start="183:46" pos:end="183:54"><name pos:start="183:46" pos:end="183:54">R_DSTVRES</name></expr>]</index></name></expr></argument>, <argument pos:start="183:58" pos:end="183:63"><expr pos:start="183:58" pos:end="183:63"><name pos:start="183:58" pos:end="183:63">GL_RGB</name></expr></argument>,

            <argument pos:start="185:13" pos:end="185:35"><expr pos:start="185:13" pos:end="185:35"><name pos:start="185:13" pos:end="185:35">GL_UNSIGNED_SHORT_5_6_5</name></expr></argument>, <argument pos:start="185:38" pos:end="185:39"><expr pos:start="185:38" pos:end="185:39"><name pos:start="185:38" pos:end="185:39">fb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:53"><expr pos:start="187:5" pos:end="187:52"><call pos:start="187:5" pos:end="187:52"><name pos:start="187:5" pos:end="187:29">cpu_physical_memory_unmap</name><argument_list pos:start="187:30" pos:end="187:52">(<argument pos:start="187:31" pos:end="187:32"><expr pos:start="187:31" pos:end="187:32"><name pos:start="187:31" pos:end="187:32">fb</name></expr></argument>, <argument pos:start="187:35" pos:end="187:40"><expr pos:start="187:35" pos:end="187:40"><name pos:start="187:35" pos:end="187:40">fb_len</name></expr></argument>, <argument pos:start="187:43" pos:end="187:43"><expr pos:start="187:43" pos:end="187:43"><literal type="number" pos:start="187:43" pos:end="187:43">0</literal></expr></argument>, <argument pos:start="187:46" pos:end="187:51"><expr pos:start="187:46" pos:end="187:51"><name pos:start="187:46" pos:end="187:51">fb_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:61"><expr pos:start="189:5" pos:end="189:60"><call pos:start="189:5" pos:end="189:60"><name pos:start="189:5" pos:end="189:14">glViewport</name><argument_list pos:start="189:15" pos:end="189:60">(<argument pos:start="189:16" pos:end="189:16"><expr pos:start="189:16" pos:end="189:16"><literal type="number" pos:start="189:16" pos:end="189:16">0</literal></expr></argument>, <argument pos:start="189:19" pos:end="189:19"><expr pos:start="189:19" pos:end="189:19"><literal type="number" pos:start="189:19" pos:end="189:19">0</literal></expr></argument>, <argument pos:start="189:22" pos:end="189:39"><expr pos:start="189:22" pos:end="189:39"><name pos:start="189:22" pos:end="189:39"><name pos:start="189:22" pos:end="189:22">s</name><operator pos:start="189:23" pos:end="189:24">-&gt;</operator><name pos:start="189:25" pos:end="189:28">regs</name><index pos:start="189:29" pos:end="189:39">[<expr pos:start="189:30" pos:end="189:38"><name pos:start="189:30" pos:end="189:38">R_DSTHRES</name></expr>]</index></name></expr></argument>, <argument pos:start="189:42" pos:end="189:59"><expr pos:start="189:42" pos:end="189:59"><name pos:start="189:42" pos:end="189:59"><name pos:start="189:42" pos:end="189:42">s</name><operator pos:start="189:43" pos:end="189:44">-&gt;</operator><name pos:start="189:45" pos:end="189:48">regs</name><index pos:start="189:49" pos:end="189:59">[<expr pos:start="189:50" pos:end="189:58"><name pos:start="189:50" pos:end="189:58">R_DSTVRES</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:32"><expr pos:start="191:5" pos:end="191:31"><call pos:start="191:5" pos:end="191:31"><name pos:start="191:5" pos:end="191:16">glMatrixMode</name><argument_list pos:start="191:17" pos:end="191:31">(<argument pos:start="191:18" pos:end="191:30"><expr pos:start="191:18" pos:end="191:30"><name pos:start="191:18" pos:end="191:30">GL_PROJECTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:21"><expr pos:start="193:5" pos:end="193:20"><call pos:start="193:5" pos:end="193:20"><name pos:start="193:5" pos:end="193:18">glLoadIdentity</name><argument_list pos:start="193:19" pos:end="193:20">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:73"><expr pos:start="195:5" pos:end="195:72"><call pos:start="195:5" pos:end="195:72"><name pos:start="195:5" pos:end="195:11">glOrtho</name><argument_list pos:start="195:12" pos:end="195:72">(<argument pos:start="195:13" pos:end="195:15"><expr pos:start="195:13" pos:end="195:15"><literal type="number" pos:start="195:13" pos:end="195:15">0.0</literal></expr></argument>, <argument pos:start="195:18" pos:end="195:35"><expr pos:start="195:18" pos:end="195:35"><name pos:start="195:18" pos:end="195:35"><name pos:start="195:18" pos:end="195:18">s</name><operator pos:start="195:19" pos:end="195:20">-&gt;</operator><name pos:start="195:21" pos:end="195:24">regs</name><index pos:start="195:25" pos:end="195:35">[<expr pos:start="195:26" pos:end="195:34"><name pos:start="195:26" pos:end="195:34">R_DSTHRES</name></expr>]</index></name></expr></argument>, <argument pos:start="195:38" pos:end="195:40"><expr pos:start="195:38" pos:end="195:40"><literal type="number" pos:start="195:38" pos:end="195:40">0.0</literal></expr></argument>, <argument pos:start="195:43" pos:end="195:60"><expr pos:start="195:43" pos:end="195:60"><name pos:start="195:43" pos:end="195:60"><name pos:start="195:43" pos:end="195:43">s</name><operator pos:start="195:44" pos:end="195:45">-&gt;</operator><name pos:start="195:46" pos:end="195:49">regs</name><index pos:start="195:50" pos:end="195:60">[<expr pos:start="195:51" pos:end="195:59"><name pos:start="195:51" pos:end="195:59">R_DSTVRES</name></expr>]</index></name></expr></argument>, <argument pos:start="195:63" pos:end="195:66"><expr pos:start="195:63" pos:end="195:66"><operator pos:start="195:63" pos:end="195:63">-</operator><literal type="number" pos:start="195:64" pos:end="195:66">1.0</literal></expr></argument>, <argument pos:start="195:69" pos:end="195:71"><expr pos:start="195:69" pos:end="195:71"><literal type="number" pos:start="195:69" pos:end="195:71">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:31"><expr pos:start="197:5" pos:end="197:30"><call pos:start="197:5" pos:end="197:30"><name pos:start="197:5" pos:end="197:16">glMatrixMode</name><argument_list pos:start="197:17" pos:end="197:30">(<argument pos:start="197:18" pos:end="197:29"><expr pos:start="197:18" pos:end="197:29"><name pos:start="197:18" pos:end="197:29">GL_MODELVIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="201:5" pos:end="201:25">/* Map the texture */</comment>

    <expr_stmt pos:start="203:5" pos:end="203:63"><expr pos:start="203:5" pos:end="203:62"><name pos:start="203:5" pos:end="203:12">mesh_len</name> <operator pos:start="203:14" pos:end="203:14">=</operator> <name pos:start="203:16" pos:end="203:27">MESH_MAXSIZE</name><operator pos:start="203:28" pos:end="203:28">*</operator><name pos:start="203:29" pos:end="203:40">MESH_MAXSIZE</name><operator pos:start="203:41" pos:end="203:41">*</operator><sizeof pos:start="203:42" pos:end="203:62">sizeof<argument_list pos:start="203:48" pos:end="203:62">(<argument pos:start="203:49" pos:end="203:61"><expr pos:start="203:49" pos:end="203:61">struct <name pos:start="203:56" pos:end="203:61">vertex</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:74"><expr pos:start="205:5" pos:end="205:73"><name pos:start="205:5" pos:end="205:8">mesh</name> <operator pos:start="205:10" pos:end="205:10">=</operator> <call pos:start="205:12" pos:end="205:73"><name pos:start="205:12" pos:end="205:34">cpu_physical_memory_map</name><argument_list pos:start="205:35" pos:end="205:73">(<argument pos:start="205:36" pos:end="205:58"><expr pos:start="205:36" pos:end="205:58"><name pos:start="205:36" pos:end="205:58"><name pos:start="205:36" pos:end="205:36">s</name><operator pos:start="205:37" pos:end="205:38">-&gt;</operator><name pos:start="205:39" pos:end="205:42">regs</name><index pos:start="205:43" pos:end="205:58">[<expr pos:start="205:44" pos:end="205:57"><name pos:start="205:44" pos:end="205:57">R_VERTICESADDR</name></expr>]</index></name></expr></argument>, <argument pos:start="205:61" pos:end="205:69"><expr pos:start="205:61" pos:end="205:69"><operator pos:start="205:61" pos:end="205:61">&amp;</operator><name pos:start="205:62" pos:end="205:69">mesh_len</name></expr></argument>, <argument pos:start="205:72" pos:end="205:72"><expr pos:start="205:72" pos:end="205:72"><literal type="number" pos:start="205:72" pos:end="205:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="207:5" pos:end="217:5"><if pos:start="207:5" pos:end="217:5">if <condition pos:start="207:8" pos:end="207:21">(<expr pos:start="207:9" pos:end="207:20"><name pos:start="207:9" pos:end="207:12">mesh</name> <operator pos:start="207:14" pos:end="207:15">==</operator> <name pos:start="207:17" pos:end="207:20">NULL</name></expr>)</condition> <block pos:start="207:23" pos:end="217:5">{<block_content pos:start="209:9" pos:end="215:15">

        <expr_stmt pos:start="209:9" pos:end="209:38"><expr pos:start="209:9" pos:end="209:37"><call pos:start="209:9" pos:end="209:37"><name pos:start="209:9" pos:end="209:24">glDeleteTextures</name><argument_list pos:start="209:25" pos:end="209:37">(<argument pos:start="209:26" pos:end="209:26"><expr pos:start="209:26" pos:end="209:26"><literal type="number" pos:start="209:26" pos:end="209:26">1</literal></expr></argument>, <argument pos:start="209:29" pos:end="209:36"><expr pos:start="209:29" pos:end="209:36"><operator pos:start="209:29" pos:end="209:29">&amp;</operator><name pos:start="209:30" pos:end="209:36">texture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:56"><expr pos:start="211:9" pos:end="211:55"><call pos:start="211:9" pos:end="211:55"><name pos:start="211:9" pos:end="211:29">glXMakeContextCurrent</name><argument_list pos:start="211:30" pos:end="211:55">(<argument pos:start="211:31" pos:end="211:36"><expr pos:start="211:31" pos:end="211:36"><name pos:start="211:31" pos:end="211:36"><name pos:start="211:31" pos:end="211:31">s</name><operator pos:start="211:32" pos:end="211:33">-&gt;</operator><name pos:start="211:34" pos:end="211:36">dpy</name></name></expr></argument>, <argument pos:start="211:39" pos:end="211:42"><expr pos:start="211:39" pos:end="211:42"><name pos:start="211:39" pos:end="211:42">None</name></expr></argument>, <argument pos:start="211:45" pos:end="211:48"><expr pos:start="211:45" pos:end="211:48"><name pos:start="211:45" pos:end="211:48">None</name></expr></argument>, <argument pos:start="211:51" pos:end="211:54"><expr pos:start="211:51" pos:end="211:54"><name pos:start="211:51" pos:end="211:54">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:43"><expr pos:start="213:9" pos:end="213:42"><call pos:start="213:9" pos:end="213:42"><name pos:start="213:9" pos:end="213:25">glXDestroyPbuffer</name><argument_list pos:start="213:26" pos:end="213:42">(<argument pos:start="213:27" pos:end="213:32"><expr pos:start="213:27" pos:end="213:32"><name pos:start="213:27" pos:end="213:32"><name pos:start="213:27" pos:end="213:27">s</name><operator pos:start="213:28" pos:end="213:29">-&gt;</operator><name pos:start="213:30" pos:end="213:32">dpy</name></name></expr></argument>, <argument pos:start="213:35" pos:end="213:41"><expr pos:start="213:35" pos:end="213:41"><name pos:start="213:35" pos:end="213:41">pbuffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="215:9" pos:end="215:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="221:5" pos:end="229:54"><expr pos:start="221:5" pos:end="229:53"><call pos:start="221:5" pos:end="229:53"><name pos:start="221:5" pos:end="221:15">tmu2_gl_map</name><argument_list pos:start="221:16" pos:end="229:53">(<argument pos:start="221:17" pos:end="221:37"><expr pos:start="221:17" pos:end="221:37"><operator pos:start="221:17" pos:end="221:17">(</operator>struct <name pos:start="221:25" pos:end="221:30">vertex</name> <operator pos:start="221:32" pos:end="221:32">*</operator><operator pos:start="221:33" pos:end="221:33">)</operator><name pos:start="221:34" pos:end="221:37">mesh</name></expr></argument>,

        <argument pos:start="223:9" pos:end="223:26"><expr pos:start="223:9" pos:end="223:26"><name pos:start="223:9" pos:end="223:26"><name pos:start="223:9" pos:end="223:9">s</name><operator pos:start="223:10" pos:end="223:11">-&gt;</operator><name pos:start="223:12" pos:end="223:15">regs</name><index pos:start="223:16" pos:end="223:26">[<expr pos:start="223:17" pos:end="223:25"><name pos:start="223:17" pos:end="223:25">R_TEXHRES</name></expr>]</index></name></expr></argument>, <argument pos:start="223:29" pos:end="223:46"><expr pos:start="223:29" pos:end="223:46"><name pos:start="223:29" pos:end="223:46"><name pos:start="223:29" pos:end="223:29">s</name><operator pos:start="223:30" pos:end="223:31">-&gt;</operator><name pos:start="223:32" pos:end="223:35">regs</name><index pos:start="223:36" pos:end="223:46">[<expr pos:start="223:37" pos:end="223:45"><name pos:start="223:37" pos:end="223:45">R_TEXVRES</name></expr>]</index></name></expr></argument>,

        <argument pos:start="225:9" pos:end="225:28"><expr pos:start="225:9" pos:end="225:28"><name pos:start="225:9" pos:end="225:28"><name pos:start="225:9" pos:end="225:9">s</name><operator pos:start="225:10" pos:end="225:11">-&gt;</operator><name pos:start="225:12" pos:end="225:15">regs</name><index pos:start="225:16" pos:end="225:28">[<expr pos:start="225:17" pos:end="225:27"><name pos:start="225:17" pos:end="225:27">R_HMESHLAST</name></expr>]</index></name></expr></argument>, <argument pos:start="225:31" pos:end="225:50"><expr pos:start="225:31" pos:end="225:50"><name pos:start="225:31" pos:end="225:50"><name pos:start="225:31" pos:end="225:31">s</name><operator pos:start="225:32" pos:end="225:33">-&gt;</operator><name pos:start="225:34" pos:end="225:37">regs</name><index pos:start="225:38" pos:end="225:50">[<expr pos:start="225:39" pos:end="225:49"><name pos:start="225:39" pos:end="225:49">R_VMESHLAST</name></expr>]</index></name></expr></argument>,

        <argument pos:start="227:9" pos:end="227:29"><expr pos:start="227:9" pos:end="227:29"><name pos:start="227:9" pos:end="227:29"><name pos:start="227:9" pos:end="227:9">s</name><operator pos:start="227:10" pos:end="227:11">-&gt;</operator><name pos:start="227:12" pos:end="227:15">regs</name><index pos:start="227:16" pos:end="227:29">[<expr pos:start="227:17" pos:end="227:28"><name pos:start="227:17" pos:end="227:28">R_DSTHOFFSET</name></expr>]</index></name></expr></argument>, <argument pos:start="227:32" pos:end="227:52"><expr pos:start="227:32" pos:end="227:52"><name pos:start="227:32" pos:end="227:52"><name pos:start="227:32" pos:end="227:32">s</name><operator pos:start="227:33" pos:end="227:34">-&gt;</operator><name pos:start="227:35" pos:end="227:38">regs</name><index pos:start="227:39" pos:end="227:52">[<expr pos:start="227:40" pos:end="227:51"><name pos:start="227:40" pos:end="227:51">R_DSTVOFFSET</name></expr>]</index></name></expr></argument>,

        <argument pos:start="229:9" pos:end="229:29"><expr pos:start="229:9" pos:end="229:29"><name pos:start="229:9" pos:end="229:29"><name pos:start="229:9" pos:end="229:9">s</name><operator pos:start="229:10" pos:end="229:11">-&gt;</operator><name pos:start="229:12" pos:end="229:15">regs</name><index pos:start="229:16" pos:end="229:29">[<expr pos:start="229:17" pos:end="229:28"><name pos:start="229:17" pos:end="229:28">R_DSTSQUAREW</name></expr>]</index></name></expr></argument>, <argument pos:start="229:32" pos:end="229:52"><expr pos:start="229:32" pos:end="229:52"><name pos:start="229:32" pos:end="229:52"><name pos:start="229:32" pos:end="229:32">s</name><operator pos:start="229:33" pos:end="229:34">-&gt;</operator><name pos:start="229:35" pos:end="229:38">regs</name><index pos:start="229:39" pos:end="229:52">[<expr pos:start="229:40" pos:end="229:51"><name pos:start="229:40" pos:end="229:51">R_DSTSQUAREH</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="231:5" pos:end="231:59"><expr pos:start="231:5" pos:end="231:58"><call pos:start="231:5" pos:end="231:58"><name pos:start="231:5" pos:end="231:29">cpu_physical_memory_unmap</name><argument_list pos:start="231:30" pos:end="231:58">(<argument pos:start="231:31" pos:end="231:34"><expr pos:start="231:31" pos:end="231:34"><name pos:start="231:31" pos:end="231:34">mesh</name></expr></argument>, <argument pos:start="231:37" pos:end="231:44"><expr pos:start="231:37" pos:end="231:44"><name pos:start="231:37" pos:end="231:44">mesh_len</name></expr></argument>, <argument pos:start="231:47" pos:end="231:47"><expr pos:start="231:47" pos:end="231:47"><literal type="number" pos:start="231:47" pos:end="231:47">0</literal></expr></argument>, <argument pos:start="231:50" pos:end="231:57"><expr pos:start="231:50" pos:end="231:57"><name pos:start="231:50" pos:end="231:57">mesh_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="235:5" pos:end="235:67">/* Write back the OpenGL framebuffer to the QEMU framebuffer */</comment>

    <expr_stmt pos:start="237:5" pos:end="237:57"><expr pos:start="237:5" pos:end="237:56"><name pos:start="237:5" pos:end="237:10">fb_len</name> <operator pos:start="237:12" pos:end="237:12">=</operator> <literal type="number" pos:start="237:14" pos:end="237:14">2</literal> <operator pos:start="237:16" pos:end="237:16">*</operator> <name pos:start="237:18" pos:end="237:35"><name pos:start="237:18" pos:end="237:18">s</name><operator pos:start="237:19" pos:end="237:20">-&gt;</operator><name pos:start="237:21" pos:end="237:24">regs</name><index pos:start="237:25" pos:end="237:35">[<expr pos:start="237:26" pos:end="237:34"><name pos:start="237:26" pos:end="237:34">R_DSTHRES</name></expr>]</index></name> <operator pos:start="237:37" pos:end="237:37">*</operator> <name pos:start="237:39" pos:end="237:56"><name pos:start="237:39" pos:end="237:39">s</name><operator pos:start="237:40" pos:end="237:41">-&gt;</operator><name pos:start="237:42" pos:end="237:45">regs</name><index pos:start="237:46" pos:end="237:56">[<expr pos:start="237:47" pos:end="237:55"><name pos:start="237:47" pos:end="237:55">R_DSTVRES</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:65"><expr pos:start="239:5" pos:end="239:64"><name pos:start="239:5" pos:end="239:6">fb</name> <operator pos:start="239:8" pos:end="239:8">=</operator> <call pos:start="239:10" pos:end="239:64"><name pos:start="239:10" pos:end="239:32">cpu_physical_memory_map</name><argument_list pos:start="239:33" pos:end="239:64">(<argument pos:start="239:34" pos:end="239:51"><expr pos:start="239:34" pos:end="239:51"><name pos:start="239:34" pos:end="239:51"><name pos:start="239:34" pos:end="239:34">s</name><operator pos:start="239:35" pos:end="239:36">-&gt;</operator><name pos:start="239:37" pos:end="239:40">regs</name><index pos:start="239:41" pos:end="239:51">[<expr pos:start="239:42" pos:end="239:50"><name pos:start="239:42" pos:end="239:50">R_DSTFBUF</name></expr>]</index></name></expr></argument>, <argument pos:start="239:54" pos:end="239:60"><expr pos:start="239:54" pos:end="239:60"><operator pos:start="239:54" pos:end="239:54">&amp;</operator><name pos:start="239:55" pos:end="239:60">fb_len</name></expr></argument>, <argument pos:start="239:63" pos:end="239:63"><expr pos:start="239:63" pos:end="239:63"><literal type="number" pos:start="239:63" pos:end="239:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="241:5" pos:end="251:5"><if pos:start="241:5" pos:end="251:5">if <condition pos:start="241:8" pos:end="241:19">(<expr pos:start="241:9" pos:end="241:18"><name pos:start="241:9" pos:end="241:10">fb</name> <operator pos:start="241:12" pos:end="241:13">==</operator> <name pos:start="241:15" pos:end="241:18">NULL</name></expr>)</condition> <block pos:start="241:21" pos:end="251:5">{<block_content pos:start="243:9" pos:end="249:15">

        <expr_stmt pos:start="243:9" pos:end="243:38"><expr pos:start="243:9" pos:end="243:37"><call pos:start="243:9" pos:end="243:37"><name pos:start="243:9" pos:end="243:24">glDeleteTextures</name><argument_list pos:start="243:25" pos:end="243:37">(<argument pos:start="243:26" pos:end="243:26"><expr pos:start="243:26" pos:end="243:26"><literal type="number" pos:start="243:26" pos:end="243:26">1</literal></expr></argument>, <argument pos:start="243:29" pos:end="243:36"><expr pos:start="243:29" pos:end="243:36"><operator pos:start="243:29" pos:end="243:29">&amp;</operator><name pos:start="243:30" pos:end="243:36">texture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:56"><expr pos:start="245:9" pos:end="245:55"><call pos:start="245:9" pos:end="245:55"><name pos:start="245:9" pos:end="245:29">glXMakeContextCurrent</name><argument_list pos:start="245:30" pos:end="245:55">(<argument pos:start="245:31" pos:end="245:36"><expr pos:start="245:31" pos:end="245:36"><name pos:start="245:31" pos:end="245:36"><name pos:start="245:31" pos:end="245:31">s</name><operator pos:start="245:32" pos:end="245:33">-&gt;</operator><name pos:start="245:34" pos:end="245:36">dpy</name></name></expr></argument>, <argument pos:start="245:39" pos:end="245:42"><expr pos:start="245:39" pos:end="245:42"><name pos:start="245:39" pos:end="245:42">None</name></expr></argument>, <argument pos:start="245:45" pos:end="245:48"><expr pos:start="245:45" pos:end="245:48"><name pos:start="245:45" pos:end="245:48">None</name></expr></argument>, <argument pos:start="245:51" pos:end="245:54"><expr pos:start="245:51" pos:end="245:54"><name pos:start="245:51" pos:end="245:54">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:43"><expr pos:start="247:9" pos:end="247:42"><call pos:start="247:9" pos:end="247:42"><name pos:start="247:9" pos:end="247:25">glXDestroyPbuffer</name><argument_list pos:start="247:26" pos:end="247:42">(<argument pos:start="247:27" pos:end="247:32"><expr pos:start="247:27" pos:end="247:32"><name pos:start="247:27" pos:end="247:32"><name pos:start="247:27" pos:end="247:27">s</name><operator pos:start="247:28" pos:end="247:29">-&gt;</operator><name pos:start="247:30" pos:end="247:32">dpy</name></name></expr></argument>, <argument pos:start="247:35" pos:end="247:41"><expr pos:start="247:35" pos:end="247:41"><name pos:start="247:35" pos:end="247:41">pbuffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="249:9" pos:end="249:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="255:5" pos:end="257:41"><expr pos:start="255:5" pos:end="257:40"><call pos:start="255:5" pos:end="257:40"><name pos:start="255:5" pos:end="255:16">glReadPixels</name><argument_list pos:start="255:17" pos:end="257:40">(<argument pos:start="255:18" pos:end="255:18"><expr pos:start="255:18" pos:end="255:18"><literal type="number" pos:start="255:18" pos:end="255:18">0</literal></expr></argument>, <argument pos:start="255:21" pos:end="255:21"><expr pos:start="255:21" pos:end="255:21"><literal type="number" pos:start="255:21" pos:end="255:21">0</literal></expr></argument>, <argument pos:start="255:24" pos:end="255:41"><expr pos:start="255:24" pos:end="255:41"><name pos:start="255:24" pos:end="255:41"><name pos:start="255:24" pos:end="255:24">s</name><operator pos:start="255:25" pos:end="255:26">-&gt;</operator><name pos:start="255:27" pos:end="255:30">regs</name><index pos:start="255:31" pos:end="255:41">[<expr pos:start="255:32" pos:end="255:40"><name pos:start="255:32" pos:end="255:40">R_DSTHRES</name></expr>]</index></name></expr></argument>, <argument pos:start="255:44" pos:end="255:61"><expr pos:start="255:44" pos:end="255:61"><name pos:start="255:44" pos:end="255:61"><name pos:start="255:44" pos:end="255:44">s</name><operator pos:start="255:45" pos:end="255:46">-&gt;</operator><name pos:start="255:47" pos:end="255:50">regs</name><index pos:start="255:51" pos:end="255:61">[<expr pos:start="255:52" pos:end="255:60"><name pos:start="255:52" pos:end="255:60">R_DSTVRES</name></expr>]</index></name></expr></argument>, <argument pos:start="255:64" pos:end="255:69"><expr pos:start="255:64" pos:end="255:69"><name pos:start="255:64" pos:end="255:69">GL_RGB</name></expr></argument>,

            <argument pos:start="257:13" pos:end="257:35"><expr pos:start="257:13" pos:end="257:35"><name pos:start="257:13" pos:end="257:35">GL_UNSIGNED_SHORT_5_6_5</name></expr></argument>, <argument pos:start="257:38" pos:end="257:39"><expr pos:start="257:38" pos:end="257:39"><name pos:start="257:38" pos:end="257:39">fb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:53"><expr pos:start="259:5" pos:end="259:52"><call pos:start="259:5" pos:end="259:52"><name pos:start="259:5" pos:end="259:29">cpu_physical_memory_unmap</name><argument_list pos:start="259:30" pos:end="259:52">(<argument pos:start="259:31" pos:end="259:32"><expr pos:start="259:31" pos:end="259:32"><name pos:start="259:31" pos:end="259:32">fb</name></expr></argument>, <argument pos:start="259:35" pos:end="259:40"><expr pos:start="259:35" pos:end="259:40"><name pos:start="259:35" pos:end="259:40">fb_len</name></expr></argument>, <argument pos:start="259:43" pos:end="259:43"><expr pos:start="259:43" pos:end="259:43"><literal type="number" pos:start="259:43" pos:end="259:43">1</literal></expr></argument>, <argument pos:start="259:46" pos:end="259:51"><expr pos:start="259:46" pos:end="259:51"><name pos:start="259:46" pos:end="259:51">fb_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="263:5" pos:end="263:28">/* Free OpenGL allocs */</comment>

    <expr_stmt pos:start="265:5" pos:end="265:34"><expr pos:start="265:5" pos:end="265:33"><call pos:start="265:5" pos:end="265:33"><name pos:start="265:5" pos:end="265:20">glDeleteTextures</name><argument_list pos:start="265:21" pos:end="265:33">(<argument pos:start="265:22" pos:end="265:22"><expr pos:start="265:22" pos:end="265:22"><literal type="number" pos:start="265:22" pos:end="265:22">1</literal></expr></argument>, <argument pos:start="265:25" pos:end="265:32"><expr pos:start="265:25" pos:end="265:32"><operator pos:start="265:25" pos:end="265:25">&amp;</operator><name pos:start="265:26" pos:end="265:32">texture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="267:5" pos:end="267:52"><expr pos:start="267:5" pos:end="267:51"><call pos:start="267:5" pos:end="267:51"><name pos:start="267:5" pos:end="267:25">glXMakeContextCurrent</name><argument_list pos:start="267:26" pos:end="267:51">(<argument pos:start="267:27" pos:end="267:32"><expr pos:start="267:27" pos:end="267:32"><name pos:start="267:27" pos:end="267:32"><name pos:start="267:27" pos:end="267:27">s</name><operator pos:start="267:28" pos:end="267:29">-&gt;</operator><name pos:start="267:30" pos:end="267:32">dpy</name></name></expr></argument>, <argument pos:start="267:35" pos:end="267:38"><expr pos:start="267:35" pos:end="267:38"><name pos:start="267:35" pos:end="267:38">None</name></expr></argument>, <argument pos:start="267:41" pos:end="267:44"><expr pos:start="267:41" pos:end="267:44"><name pos:start="267:41" pos:end="267:44">None</name></expr></argument>, <argument pos:start="267:47" pos:end="267:50"><expr pos:start="267:47" pos:end="267:50"><name pos:start="267:47" pos:end="267:50">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="269:5" pos:end="269:39"><expr pos:start="269:5" pos:end="269:38"><call pos:start="269:5" pos:end="269:38"><name pos:start="269:5" pos:end="269:21">glXDestroyPbuffer</name><argument_list pos:start="269:22" pos:end="269:38">(<argument pos:start="269:23" pos:end="269:28"><expr pos:start="269:23" pos:end="269:28"><name pos:start="269:23" pos:end="269:28"><name pos:start="269:23" pos:end="269:23">s</name><operator pos:start="269:24" pos:end="269:25">-&gt;</operator><name pos:start="269:26" pos:end="269:28">dpy</name></name></expr></argument>, <argument pos:start="269:31" pos:end="269:37"><expr pos:start="269:31" pos:end="269:37"><name pos:start="269:31" pos:end="269:37">pbuffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="273:5" pos:end="273:38"><expr pos:start="273:5" pos:end="273:37"><name pos:start="273:5" pos:end="273:18"><name pos:start="273:5" pos:end="273:5">s</name><operator pos:start="273:6" pos:end="273:7">-&gt;</operator><name pos:start="273:8" pos:end="273:11">regs</name><index pos:start="273:12" pos:end="273:18">[<expr pos:start="273:13" pos:end="273:17"><name pos:start="273:13" pos:end="273:17">R_CTL</name></expr>]</index></name> <operator pos:start="273:20" pos:end="273:21">&amp;=</operator> <operator pos:start="273:23" pos:end="273:23">~</operator><name pos:start="273:24" pos:end="273:37">CTL_START_BUSY</name></expr>;</expr_stmt>



    <expr_stmt pos:start="277:5" pos:end="277:37"><expr pos:start="277:5" pos:end="277:36"><call pos:start="277:5" pos:end="277:36"><name pos:start="277:5" pos:end="277:34">trace_milkymist_tmu2_pulse_irq</name><argument_list pos:start="277:35" pos:end="277:36">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="279:5" pos:end="279:27"><expr pos:start="279:5" pos:end="279:26"><call pos:start="279:5" pos:end="279:26"><name pos:start="279:5" pos:end="279:18">qemu_irq_pulse</name><argument_list pos:start="279:19" pos:end="279:26">(<argument pos:start="279:20" pos:end="279:25"><expr pos:start="279:20" pos:end="279:25"><name pos:start="279:20" pos:end="279:25"><name pos:start="279:20" pos:end="279:20">s</name><operator pos:start="279:21" pos:end="279:22">-&gt;</operator><name pos:start="279:23" pos:end="279:25">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
