<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25444.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">decode_clnpass</name><parameter_list pos:start="1:27" pos:end="5:43">(<parameter pos:start="1:28" pos:end="1:52"><decl pos:start="1:28" pos:end="1:52"><type pos:start="1:28" pos:end="1:52"><name pos:start="1:28" pos:end="1:49">Jpeg2000DecoderContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:75"><decl pos:start="1:55" pos:end="1:75"><type pos:start="1:55" pos:end="1:75"><name pos:start="1:55" pos:end="1:71">Jpeg2000T1Context</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:75">t1</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:36"><decl pos:start="3:28" pos:end="3:36"><type pos:start="3:28" pos:end="3:36"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:36">width</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:48"><decl pos:start="3:39" pos:end="3:48"><type pos:start="3:39" pos:end="3:48"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:48">height</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:58"><decl pos:start="3:51" pos:end="3:58"><type pos:start="3:51" pos:end="3:58"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:58">bpno</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:70"><decl pos:start="3:61" pos:end="3:70"><type pos:start="3:61" pos:end="3:70"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:70">bandno</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:42"><decl pos:start="5:28" pos:end="5:42"><type pos:start="5:28" pos:end="5:42"><name pos:start="5:28" pos:end="5:30">int</name></type> <name pos:start="5:32" pos:end="5:42">seg_symbols</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="117:1">{<block_content pos:start="9:5" pos:end="115:5">

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">mask</name> <init pos:start="9:14" pos:end="9:30">= <expr pos:start="9:16" pos:end="9:30"><literal type="number" pos:start="9:16" pos:end="9:16">3</literal> <operator pos:start="9:18" pos:end="9:19">&lt;&lt;</operator> <operator pos:start="9:21" pos:end="9:21">(</operator><name pos:start="9:22" pos:end="9:25">bpno</name> <operator pos:start="9:27" pos:end="9:27">-</operator> <literal type="number" pos:start="9:29" pos:end="9:29">1</literal><operator pos:start="9:30" pos:end="9:30">)</operator></expr></init></decl>, <decl pos:start="9:33" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:33" pos:end="9:34">y0</name></decl>, <decl pos:start="9:37" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:37" pos:end="9:37">x</name></decl>, <decl pos:start="9:40" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:40" pos:end="9:40">y</name></decl>, <decl pos:start="9:43" pos:end="9:48"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:43" pos:end="9:48">runlen</name></decl>, <decl pos:start="9:51" pos:end="9:53"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:51" pos:end="9:53">dec</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="95:9">for <control pos:start="13:9" pos:end="13:38">(<init pos:start="13:10" pos:end="13:16"><expr pos:start="13:10" pos:end="13:15"><name pos:start="13:10" pos:end="13:11">y0</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr>;</init> <condition pos:start="13:18" pos:end="13:29"><expr pos:start="13:18" pos:end="13:28"><name pos:start="13:18" pos:end="13:19">y0</name> <operator pos:start="13:21" pos:end="13:21">&lt;</operator> <name pos:start="13:23" pos:end="13:28">height</name></expr>;</condition> <incr pos:start="13:31" pos:end="13:37"><expr pos:start="13:31" pos:end="13:37"><name pos:start="13:31" pos:end="13:32">y0</name> <operator pos:start="13:34" pos:end="13:35">+=</operator> <literal type="number" pos:start="13:37" pos:end="13:37">4</literal></expr></incr>)</control><block type="pseudo" pos:start="15:9" pos:end="95:9"><block_content pos:start="15:9" pos:end="95:9">

        <for pos:start="15:9" pos:end="95:9">for <control pos:start="15:13" pos:end="15:35">(<init pos:start="15:14" pos:end="15:19"><expr pos:start="15:14" pos:end="15:18"><name pos:start="15:14" pos:end="15:14">x</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>;</init> <condition pos:start="15:21" pos:end="15:30"><expr pos:start="15:21" pos:end="15:29"><name pos:start="15:21" pos:end="15:21">x</name> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <name pos:start="15:25" pos:end="15:29">width</name></expr>;</condition> <incr pos:start="15:32" pos:end="15:34"><expr pos:start="15:32" pos:end="15:34"><name pos:start="15:32" pos:end="15:32">x</name><operator pos:start="15:33" pos:end="15:34">++</operator></expr></incr>)</control> <block pos:start="15:37" pos:end="95:9">{<block_content pos:start="17:13" pos:end="93:13">

            <if_stmt pos:start="17:13" pos:end="49:13"><if pos:start="17:13" pos:end="43:13">if <condition pos:start="17:16" pos:end="25:105">(<expr pos:start="17:17" pos:end="25:104"><name pos:start="17:17" pos:end="17:18">y0</name> <operator pos:start="17:20" pos:end="17:20">+</operator> <literal type="number" pos:start="17:22" pos:end="17:22">3</literal> <operator pos:start="17:24" pos:end="17:24">&lt;</operator> <name pos:start="17:26" pos:end="17:31">height</name> <operator pos:start="17:33" pos:end="17:34">&amp;&amp;</operator>

                <operator pos:start="19:17" pos:end="19:17">!</operator><operator pos:start="19:18" pos:end="19:18">(</operator><operator pos:start="19:19" pos:end="19:19">(</operator><name pos:start="19:20" pos:end="19:43"><name pos:start="19:20" pos:end="19:21">t1</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:28">flags</name><index pos:start="19:29" pos:end="19:36">[<expr pos:start="19:30" pos:end="19:35"><name pos:start="19:30" pos:end="19:31">y0</name> <operator pos:start="19:33" pos:end="19:33">+</operator> <literal type="number" pos:start="19:35" pos:end="19:35">1</literal></expr>]</index><index pos:start="19:37" pos:end="19:43">[<expr pos:start="19:38" pos:end="19:42"><name pos:start="19:38" pos:end="19:38">x</name> <operator pos:start="19:40" pos:end="19:40">+</operator> <literal type="number" pos:start="19:42" pos:end="19:42">1</literal></expr>]</index></name> <operator pos:start="19:45" pos:end="19:45">&amp;</operator> <operator pos:start="19:47" pos:end="19:47">(</operator><name pos:start="19:48" pos:end="19:65">JPEG2000_T1_SIG_NB</name> <operator pos:start="19:67" pos:end="19:67">|</operator> <name pos:start="19:69" pos:end="19:83">JPEG2000_T1_VIS</name> <operator pos:start="19:85" pos:end="19:85">|</operator> <name pos:start="19:87" pos:end="19:101">JPEG2000_T1_SIG</name><operator pos:start="19:102" pos:end="19:102">)</operator><operator pos:start="19:103" pos:end="19:103">)</operator> <operator pos:start="19:105" pos:end="19:106">||</operator>

                  <operator pos:start="21:19" pos:end="21:19">(</operator><name pos:start="21:20" pos:end="21:43"><name pos:start="21:20" pos:end="21:21">t1</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:28">flags</name><index pos:start="21:29" pos:end="21:36">[<expr pos:start="21:30" pos:end="21:35"><name pos:start="21:30" pos:end="21:31">y0</name> <operator pos:start="21:33" pos:end="21:33">+</operator> <literal type="number" pos:start="21:35" pos:end="21:35">2</literal></expr>]</index><index pos:start="21:37" pos:end="21:43">[<expr pos:start="21:38" pos:end="21:42"><name pos:start="21:38" pos:end="21:38">x</name> <operator pos:start="21:40" pos:end="21:40">+</operator> <literal type="number" pos:start="21:42" pos:end="21:42">1</literal></expr>]</index></name> <operator pos:start="21:45" pos:end="21:45">&amp;</operator> <operator pos:start="21:47" pos:end="21:47">(</operator><name pos:start="21:48" pos:end="21:65">JPEG2000_T1_SIG_NB</name> <operator pos:start="21:67" pos:end="21:67">|</operator> <name pos:start="21:69" pos:end="21:83">JPEG2000_T1_VIS</name> <operator pos:start="21:85" pos:end="21:85">|</operator> <name pos:start="21:87" pos:end="21:101">JPEG2000_T1_SIG</name><operator pos:start="21:102" pos:end="21:102">)</operator><operator pos:start="21:103" pos:end="21:103">)</operator> <operator pos:start="21:105" pos:end="21:106">||</operator>

                  <operator pos:start="23:19" pos:end="23:19">(</operator><name pos:start="23:20" pos:end="23:43"><name pos:start="23:20" pos:end="23:21">t1</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:28">flags</name><index pos:start="23:29" pos:end="23:36">[<expr pos:start="23:30" pos:end="23:35"><name pos:start="23:30" pos:end="23:31">y0</name> <operator pos:start="23:33" pos:end="23:33">+</operator> <literal type="number" pos:start="23:35" pos:end="23:35">3</literal></expr>]</index><index pos:start="23:37" pos:end="23:43">[<expr pos:start="23:38" pos:end="23:42"><name pos:start="23:38" pos:end="23:38">x</name> <operator pos:start="23:40" pos:end="23:40">+</operator> <literal type="number" pos:start="23:42" pos:end="23:42">1</literal></expr>]</index></name> <operator pos:start="23:45" pos:end="23:45">&amp;</operator> <operator pos:start="23:47" pos:end="23:47">(</operator><name pos:start="23:48" pos:end="23:65">JPEG2000_T1_SIG_NB</name> <operator pos:start="23:67" pos:end="23:67">|</operator> <name pos:start="23:69" pos:end="23:83">JPEG2000_T1_VIS</name> <operator pos:start="23:85" pos:end="23:85">|</operator> <name pos:start="23:87" pos:end="23:101">JPEG2000_T1_SIG</name><operator pos:start="23:102" pos:end="23:102">)</operator><operator pos:start="23:103" pos:end="23:103">)</operator> <operator pos:start="23:105" pos:end="23:106">||</operator>

                  <operator pos:start="25:19" pos:end="25:19">(</operator><name pos:start="25:20" pos:end="25:43"><name pos:start="25:20" pos:end="25:21">t1</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:28">flags</name><index pos:start="25:29" pos:end="25:36">[<expr pos:start="25:30" pos:end="25:35"><name pos:start="25:30" pos:end="25:31">y0</name> <operator pos:start="25:33" pos:end="25:33">+</operator> <literal type="number" pos:start="25:35" pos:end="25:35">4</literal></expr>]</index><index pos:start="25:37" pos:end="25:43">[<expr pos:start="25:38" pos:end="25:42"><name pos:start="25:38" pos:end="25:38">x</name> <operator pos:start="25:40" pos:end="25:40">+</operator> <literal type="number" pos:start="25:42" pos:end="25:42">1</literal></expr>]</index></name> <operator pos:start="25:45" pos:end="25:45">&amp;</operator> <operator pos:start="25:47" pos:end="25:47">(</operator><name pos:start="25:48" pos:end="25:65">JPEG2000_T1_SIG_NB</name> <operator pos:start="25:67" pos:end="25:67">|</operator> <name pos:start="25:69" pos:end="25:83">JPEG2000_T1_VIS</name> <operator pos:start="25:85" pos:end="25:85">|</operator> <name pos:start="25:87" pos:end="25:101">JPEG2000_T1_SIG</name><operator pos:start="25:102" pos:end="25:102">)</operator><operator pos:start="25:103" pos:end="25:103">)</operator><operator pos:start="25:104" pos:end="25:104">)</operator></expr>)</condition> <block pos:start="25:107" pos:end="43:13">{<block_content pos:start="27:17" pos:end="41:24">

                <if_stmt pos:start="27:17" pos:end="29:29"><if pos:start="27:17" pos:end="29:29">if <condition pos:start="27:20" pos:end="27:76">(<expr pos:start="27:21" pos:end="27:75"><operator pos:start="27:21" pos:end="27:21">!</operator><call pos:start="27:22" pos:end="27:75"><name pos:start="27:22" pos:end="27:34">ff_mqc_decode</name><argument_list pos:start="27:35" pos:end="27:75">(<argument pos:start="27:36" pos:end="27:43"><expr pos:start="27:36" pos:end="27:43"><operator pos:start="27:36" pos:end="27:36">&amp;</operator><name pos:start="27:37" pos:end="27:43"><name pos:start="27:37" pos:end="27:38">t1</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:43">mqc</name></name></expr></argument>, <argument pos:start="27:46" pos:end="27:74"><expr pos:start="27:46" pos:end="27:74"><name pos:start="27:46" pos:end="27:62"><name pos:start="27:46" pos:end="27:47">t1</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:52">mqc</name><operator pos:start="27:53" pos:end="27:53">.</operator><name pos:start="27:54" pos:end="27:62">cx_states</name></name> <operator pos:start="27:64" pos:end="27:64">+</operator> <name pos:start="27:66" pos:end="27:74">MQC_CX_RL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:21" pos:end="29:29"><block_content pos:start="29:21" pos:end="29:29">

                    <continue pos:start="29:21" pos:end="29:29">continue;</continue></block_content></block></if></if_stmt>

                <expr_stmt pos:start="31:17" pos:end="33:71"><expr pos:start="31:17" pos:end="33:70"><name pos:start="31:17" pos:end="31:22">runlen</name> <operator pos:start="31:24" pos:end="31:24">=</operator> <call pos:start="31:26" pos:end="33:70"><name pos:start="31:26" pos:end="31:38">ff_mqc_decode</name><argument_list pos:start="31:39" pos:end="33:70">(<argument pos:start="31:40" pos:end="31:47"><expr pos:start="31:40" pos:end="31:47"><operator pos:start="31:40" pos:end="31:40">&amp;</operator><name pos:start="31:41" pos:end="31:47"><name pos:start="31:41" pos:end="31:42">t1</name><operator pos:start="31:43" pos:end="31:44">-&gt;</operator><name pos:start="31:45" pos:end="31:47">mqc</name></name></expr></argument>,

                                       <argument pos:start="33:40" pos:end="33:69"><expr pos:start="33:40" pos:end="33:69"><name pos:start="33:40" pos:end="33:56"><name pos:start="33:40" pos:end="33:41">t1</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:46">mqc</name><operator pos:start="33:47" pos:end="33:47">.</operator><name pos:start="33:48" pos:end="33:56">cx_states</name></name> <operator pos:start="33:58" pos:end="33:58">+</operator> <name pos:start="33:60" pos:end="33:69">MQC_CX_UNI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="35:17" pos:end="39:67"><expr pos:start="35:17" pos:end="39:66"><name pos:start="35:17" pos:end="35:22">runlen</name> <operator pos:start="35:24" pos:end="35:24">=</operator> <operator pos:start="35:26" pos:end="35:26">(</operator><name pos:start="35:27" pos:end="35:32">runlen</name> <operator pos:start="35:34" pos:end="35:35">&lt;&lt;</operator> <literal type="number" pos:start="35:37" pos:end="35:37">1</literal><operator pos:start="35:38" pos:end="35:38">)</operator> <operator pos:start="35:40" pos:end="35:40">|</operator> <call pos:start="35:42" pos:end="39:66"><name pos:start="35:42" pos:end="35:54">ff_mqc_decode</name><argument_list pos:start="35:55" pos:end="39:66">(<argument pos:start="35:56" pos:end="35:63"><expr pos:start="35:56" pos:end="35:63"><operator pos:start="35:56" pos:end="35:56">&amp;</operator><name pos:start="35:57" pos:end="35:63"><name pos:start="35:57" pos:end="35:58">t1</name><operator pos:start="35:59" pos:end="35:60">-&gt;</operator><name pos:start="35:61" pos:end="35:63">mqc</name></name></expr></argument>,

                                                       <argument pos:start="37:56" pos:end="39:65"><expr pos:start="37:56" pos:end="39:65"><name pos:start="37:56" pos:end="37:72"><name pos:start="37:56" pos:end="37:57">t1</name><operator pos:start="37:58" pos:end="37:59">-&gt;</operator><name pos:start="37:60" pos:end="37:62">mqc</name><operator pos:start="37:63" pos:end="37:63">.</operator><name pos:start="37:64" pos:end="37:72">cx_states</name></name> <operator pos:start="37:74" pos:end="37:74">+</operator>

                                                       <name pos:start="39:56" pos:end="39:65">MQC_CX_UNI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:24"><expr pos:start="41:17" pos:end="41:23"><name pos:start="41:17" pos:end="41:19">dec</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <literal type="number" pos:start="41:23" pos:end="41:23">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="43:15" pos:end="49:13">else <block pos:start="43:20" pos:end="49:13">{<block_content pos:start="45:17" pos:end="47:27">

                <expr_stmt pos:start="45:17" pos:end="45:27"><expr pos:start="45:17" pos:end="45:26"><name pos:start="45:17" pos:end="45:22">runlen</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <literal type="number" pos:start="45:26" pos:end="45:26">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:27"><expr pos:start="47:17" pos:end="47:26"><name pos:start="47:17" pos:end="47:19">dec</name>    <operator pos:start="47:24" pos:end="47:24">=</operator> <literal type="number" pos:start="47:26" pos:end="47:26">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <for pos:start="53:13" pos:end="93:13">for <control pos:start="53:17" pos:end="53:64">(<init pos:start="53:18" pos:end="53:33"><expr pos:start="53:18" pos:end="53:32"><name pos:start="53:18" pos:end="53:18">y</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <name pos:start="53:22" pos:end="53:23">y0</name> <operator pos:start="53:25" pos:end="53:25">+</operator> <name pos:start="53:27" pos:end="53:32">runlen</name></expr>;</init> <condition pos:start="53:35" pos:end="53:59"><expr pos:start="53:35" pos:end="53:58"><name pos:start="53:35" pos:end="53:35">y</name> <operator pos:start="53:37" pos:end="53:37">&lt;</operator> <name pos:start="53:39" pos:end="53:40">y0</name> <operator pos:start="53:42" pos:end="53:42">+</operator> <literal type="number" pos:start="53:44" pos:end="53:44">4</literal> <operator pos:start="53:46" pos:end="53:47">&amp;&amp;</operator> <name pos:start="53:49" pos:end="53:49">y</name> <operator pos:start="53:51" pos:end="53:51">&lt;</operator> <name pos:start="53:53" pos:end="53:58">height</name></expr>;</condition> <incr pos:start="53:61" pos:end="53:63"><expr pos:start="53:61" pos:end="53:63"><name pos:start="53:61" pos:end="53:61">y</name><operator pos:start="53:62" pos:end="53:63">++</operator></expr></incr>)</control> <block pos:start="53:66" pos:end="93:13">{<block_content pos:start="55:17" pos:end="91:60">

                <if_stmt pos:start="55:17" pos:end="67:17"><if pos:start="55:17" pos:end="67:17">if <condition pos:start="55:20" pos:end="55:25">(<expr pos:start="55:21" pos:end="55:24"><operator pos:start="55:21" pos:end="55:21">!</operator><name pos:start="55:22" pos:end="55:24">dec</name></expr>)</condition> <block pos:start="55:27" pos:end="67:17">{<block_content pos:start="57:21" pos:end="65:76">

                    <if_stmt pos:start="57:21" pos:end="65:76"><if pos:start="57:21" pos:end="65:76">if <condition pos:start="57:24" pos:end="57:89">(<expr pos:start="57:25" pos:end="57:88"><operator pos:start="57:25" pos:end="57:25">!</operator><operator pos:start="57:26" pos:end="57:26">(</operator><name pos:start="57:27" pos:end="57:49"><name pos:start="57:27" pos:end="57:28">t1</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:35">flags</name><index pos:start="57:36" pos:end="57:42">[<expr pos:start="57:37" pos:end="57:41"><name pos:start="57:37" pos:end="57:37">y</name> <operator pos:start="57:39" pos:end="57:39">+</operator> <literal type="number" pos:start="57:41" pos:end="57:41">1</literal></expr>]</index><index pos:start="57:43" pos:end="57:49">[<expr pos:start="57:44" pos:end="57:48"><name pos:start="57:44" pos:end="57:44">x</name> <operator pos:start="57:46" pos:end="57:46">+</operator> <literal type="number" pos:start="57:48" pos:end="57:48">1</literal></expr>]</index></name> <operator pos:start="57:51" pos:end="57:51">&amp;</operator> <operator pos:start="57:53" pos:end="57:53">(</operator><name pos:start="57:54" pos:end="57:68">JPEG2000_T1_SIG</name> <operator pos:start="57:70" pos:end="57:70">|</operator> <name pos:start="57:72" pos:end="57:86">JPEG2000_T1_VIS</name><operator pos:start="57:87" pos:end="57:87">)</operator><operator pos:start="57:88" pos:end="57:88">)</operator></expr>)</condition><block type="pseudo" pos:start="59:25" pos:end="65:76"><block_content pos:start="59:25" pos:end="65:76">

                        <expr_stmt pos:start="59:25" pos:end="65:76"><expr pos:start="59:25" pos:end="65:75"><name pos:start="59:25" pos:end="59:27">dec</name> <operator pos:start="59:29" pos:end="59:29">=</operator> <call pos:start="59:31" pos:end="65:75"><name pos:start="59:31" pos:end="59:43">ff_mqc_decode</name><argument_list pos:start="59:44" pos:end="65:75">(<argument pos:start="59:45" pos:end="59:52"><expr pos:start="59:45" pos:end="59:52"><operator pos:start="59:45" pos:end="59:45">&amp;</operator><name pos:start="59:46" pos:end="59:52"><name pos:start="59:46" pos:end="59:47">t1</name><operator pos:start="59:48" pos:end="59:49">-&gt;</operator><name pos:start="59:50" pos:end="59:52">mqc</name></name></expr></argument>,

                                            <argument pos:start="61:45" pos:end="65:74"><expr pos:start="61:45" pos:end="65:74"><name pos:start="61:45" pos:end="61:61"><name pos:start="61:45" pos:end="61:46">t1</name><operator pos:start="61:47" pos:end="61:48">-&gt;</operator><name pos:start="61:49" pos:end="61:51">mqc</name><operator pos:start="61:52" pos:end="61:52">.</operator><name pos:start="61:53" pos:end="61:61">cx_states</name></name> <operator pos:start="61:63" pos:end="61:63">+</operator>

                                            <call pos:start="63:45" pos:end="65:74"><name pos:start="63:45" pos:end="63:67">ff_jpeg2000_getsigctxno</name><argument_list pos:start="63:68" pos:end="65:74">(<argument pos:start="63:69" pos:end="63:91"><expr pos:start="63:69" pos:end="63:91"><name pos:start="63:69" pos:end="63:91"><name pos:start="63:69" pos:end="63:70">t1</name><operator pos:start="63:71" pos:end="63:72">-&gt;</operator><name pos:start="63:73" pos:end="63:77">flags</name><index pos:start="63:78" pos:end="63:84">[<expr pos:start="63:79" pos:end="63:83"><name pos:start="63:79" pos:end="63:79">y</name> <operator pos:start="63:81" pos:end="63:81">+</operator> <literal type="number" pos:start="63:83" pos:end="63:83">1</literal></expr>]</index><index pos:start="63:85" pos:end="63:91">[<expr pos:start="63:86" pos:end="63:90"><name pos:start="63:86" pos:end="63:86">x</name> <operator pos:start="63:88" pos:end="63:88">+</operator> <literal type="number" pos:start="63:90" pos:end="63:90">1</literal></expr>]</index></name></expr></argument>,

                                                                   <argument pos:start="65:68" pos:end="65:73"><expr pos:start="65:68" pos:end="65:73"><name pos:start="65:68" pos:end="65:73">bandno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="69:17" pos:end="87:17"><if pos:start="69:17" pos:end="87:17">if <condition pos:start="69:20" pos:end="69:24">(<expr pos:start="69:21" pos:end="69:23"><name pos:start="69:21" pos:end="69:23">dec</name></expr>)</condition> <block pos:start="69:26" pos:end="87:17">{<block_content pos:start="71:21" pos:end="85:79">

                    <decl_stmt pos:start="71:21" pos:end="71:31"><decl pos:start="71:21" pos:end="71:30"><type pos:start="71:21" pos:end="71:23"><name pos:start="71:21" pos:end="71:23">int</name></type> <name pos:start="71:25" pos:end="71:30">xorbit</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="73:21" pos:end="75:65"><decl pos:start="73:21" pos:end="75:64"><type pos:start="73:21" pos:end="73:23"><name pos:start="73:21" pos:end="73:23">int</name></type> <name pos:start="73:25" pos:end="73:29">ctxno</name> <init pos:start="73:31" pos:end="75:64">= <expr pos:start="73:33" pos:end="75:64"><call pos:start="73:33" pos:end="75:64"><name pos:start="73:33" pos:end="73:55">ff_jpeg2000_getsgnctxno</name><argument_list pos:start="73:56" pos:end="75:64">(<argument pos:start="73:57" pos:end="73:79"><expr pos:start="73:57" pos:end="73:79"><name pos:start="73:57" pos:end="73:79"><name pos:start="73:57" pos:end="73:58">t1</name><operator pos:start="73:59" pos:end="73:60">-&gt;</operator><name pos:start="73:61" pos:end="73:65">flags</name><index pos:start="73:66" pos:end="73:72">[<expr pos:start="73:67" pos:end="73:71"><name pos:start="73:67" pos:end="73:67">y</name> <operator pos:start="73:69" pos:end="73:69">+</operator> <literal type="number" pos:start="73:71" pos:end="73:71">1</literal></expr>]</index><index pos:start="73:73" pos:end="73:79">[<expr pos:start="73:74" pos:end="73:78"><name pos:start="73:74" pos:end="73:74">x</name> <operator pos:start="73:76" pos:end="73:76">+</operator> <literal type="number" pos:start="73:78" pos:end="73:78">1</literal></expr>]</index></name></expr></argument>,

                                                        <argument pos:start="75:57" pos:end="75:63"><expr pos:start="75:57" pos:end="75:63"><operator pos:start="75:57" pos:end="75:57">&amp;</operator><name pos:start="75:58" pos:end="75:63">xorbit</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="77:21" pos:end="83:52"><expr pos:start="77:21" pos:end="83:51"><name pos:start="77:21" pos:end="77:34"><name pos:start="77:21" pos:end="77:22">t1</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:28">data</name><index pos:start="77:29" pos:end="77:31">[<expr pos:start="77:30" pos:end="77:30"><name pos:start="77:30" pos:end="77:30">y</name></expr>]</index><index pos:start="77:32" pos:end="77:34">[<expr pos:start="77:33" pos:end="77:33"><name pos:start="77:33" pos:end="77:33">x</name></expr>]</index></name> <operator pos:start="77:36" pos:end="77:36">=</operator> <ternary pos:start="77:38" pos:end="83:51"><condition pos:start="77:38" pos:end="83:38"><expr pos:start="77:38" pos:end="81:45"><operator pos:start="77:38" pos:end="77:38">(</operator><call pos:start="77:39" pos:end="79:78"><name pos:start="77:39" pos:end="77:51">ff_mqc_decode</name><argument_list pos:start="77:52" pos:end="79:78">(<argument pos:start="77:53" pos:end="77:60"><expr pos:start="77:53" pos:end="77:60"><operator pos:start="77:53" pos:end="77:53">&amp;</operator><name pos:start="77:54" pos:end="77:60"><name pos:start="77:54" pos:end="77:55">t1</name><operator pos:start="77:56" pos:end="77:57">-&gt;</operator><name pos:start="77:58" pos:end="77:60">mqc</name></name></expr></argument>,

                                                    <argument pos:start="79:53" pos:end="79:77"><expr pos:start="79:53" pos:end="79:77"><name pos:start="79:53" pos:end="79:69"><name pos:start="79:53" pos:end="79:54">t1</name><operator pos:start="79:55" pos:end="79:56">-&gt;</operator><name pos:start="79:57" pos:end="79:59">mqc</name><operator pos:start="79:60" pos:end="79:60">.</operator><name pos:start="79:61" pos:end="79:69">cx_states</name></name> <operator pos:start="79:71" pos:end="79:71">+</operator> <name pos:start="79:73" pos:end="79:77">ctxno</name></expr></argument>)</argument_list></call> <operator pos:start="79:80" pos:end="79:80">^</operator>

                                      <name pos:start="81:39" pos:end="81:44">xorbit</name><operator pos:start="81:45" pos:end="81:45">)</operator></expr>

                                     ?</condition><then pos:start="83:40" pos:end="83:44"> <expr pos:start="83:40" pos:end="83:44"><operator pos:start="83:40" pos:end="83:40">-</operator><name pos:start="83:41" pos:end="83:44">mask</name></expr> </then><else pos:start="83:46" pos:end="83:51">: <expr pos:start="83:48" pos:end="83:51"><name pos:start="83:48" pos:end="83:51">mask</name></expr></else></ternary></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:79"><expr pos:start="85:21" pos:end="85:78"><call pos:start="85:21" pos:end="85:78"><name pos:start="85:21" pos:end="85:48">ff_jpeg2000_set_significance</name><argument_list pos:start="85:49" pos:end="85:78">(<argument pos:start="85:50" pos:end="85:51"><expr pos:start="85:50" pos:end="85:51"><name pos:start="85:50" pos:end="85:51">t1</name></expr></argument>, <argument pos:start="85:54" pos:end="85:54"><expr pos:start="85:54" pos:end="85:54"><name pos:start="85:54" pos:end="85:54">x</name></expr></argument>, <argument pos:start="85:57" pos:end="85:57"><expr pos:start="85:57" pos:end="85:57"><name pos:start="85:57" pos:end="85:57">y</name></expr></argument>, <argument pos:start="85:60" pos:end="85:77"><expr pos:start="85:60" pos:end="85:77"><name pos:start="85:60" pos:end="85:73"><name pos:start="85:60" pos:end="85:61">t1</name><operator pos:start="85:62" pos:end="85:63">-&gt;</operator><name pos:start="85:64" pos:end="85:67">data</name><index pos:start="85:68" pos:end="85:70">[<expr pos:start="85:69" pos:end="85:69"><name pos:start="85:69" pos:end="85:69">y</name></expr>]</index><index pos:start="85:71" pos:end="85:73">[<expr pos:start="85:72" pos:end="85:72"><name pos:start="85:72" pos:end="85:72">x</name></expr>]</index></name> <operator pos:start="85:75" pos:end="85:75">&lt;</operator> <literal type="number" pos:start="85:77" pos:end="85:77">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:24"><expr pos:start="89:17" pos:end="89:23"><name pos:start="89:17" pos:end="89:19">dec</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <literal type="number" pos:start="89:23" pos:end="89:23">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:60"><expr pos:start="91:17" pos:end="91:59"><name pos:start="91:17" pos:end="91:39"><name pos:start="91:17" pos:end="91:18">t1</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:25">flags</name><index pos:start="91:26" pos:end="91:32">[<expr pos:start="91:27" pos:end="91:31"><name pos:start="91:27" pos:end="91:27">y</name> <operator pos:start="91:29" pos:end="91:29">+</operator> <literal type="number" pos:start="91:31" pos:end="91:31">1</literal></expr>]</index><index pos:start="91:33" pos:end="91:39">[<expr pos:start="91:34" pos:end="91:38"><name pos:start="91:34" pos:end="91:34">x</name> <operator pos:start="91:36" pos:end="91:36">+</operator> <literal type="number" pos:start="91:38" pos:end="91:38">1</literal></expr>]</index></name> <operator pos:start="91:41" pos:end="91:42">&amp;=</operator> <operator pos:start="91:44" pos:end="91:44">~</operator><name pos:start="91:45" pos:end="91:59">JPEG2000_T1_VIS</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for></block_content></block></for>

    <if_stmt pos:start="97:5" pos:end="115:5"><if pos:start="97:5" pos:end="115:5">if <condition pos:start="97:8" pos:end="97:20">(<expr pos:start="97:9" pos:end="97:19"><name pos:start="97:9" pos:end="97:19">seg_symbols</name></expr>)</condition> <block pos:start="97:22" pos:end="115:5">{<block_content pos:start="99:9" pos:end="113:60">

        <decl_stmt pos:start="99:9" pos:end="99:16"><decl pos:start="99:9" pos:end="99:15"><type pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:11">int</name></type> <name pos:start="99:13" pos:end="99:15">val</name></decl>;</decl_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:70"><expr pos:start="101:9" pos:end="101:69"><name pos:start="101:9" pos:end="101:11">val</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <call pos:start="101:15" pos:end="101:69"><name pos:start="101:15" pos:end="101:27">ff_mqc_decode</name><argument_list pos:start="101:28" pos:end="101:69">(<argument pos:start="101:29" pos:end="101:36"><expr pos:start="101:29" pos:end="101:36"><operator pos:start="101:29" pos:end="101:29">&amp;</operator><name pos:start="101:30" pos:end="101:36"><name pos:start="101:30" pos:end="101:31">t1</name><operator pos:start="101:32" pos:end="101:33">-&gt;</operator><name pos:start="101:34" pos:end="101:36">mqc</name></name></expr></argument>, <argument pos:start="101:39" pos:end="101:68"><expr pos:start="101:39" pos:end="101:68"><name pos:start="101:39" pos:end="101:55"><name pos:start="101:39" pos:end="101:40">t1</name><operator pos:start="101:41" pos:end="101:42">-&gt;</operator><name pos:start="101:43" pos:end="101:45">mqc</name><operator pos:start="101:46" pos:end="101:46">.</operator><name pos:start="101:47" pos:end="101:55">cx_states</name></name> <operator pos:start="101:57" pos:end="101:57">+</operator> <name pos:start="101:59" pos:end="101:68">MQC_CX_UNI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:83"><expr pos:start="103:9" pos:end="103:82"><name pos:start="103:9" pos:end="103:11">val</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <operator pos:start="103:15" pos:end="103:15">(</operator><name pos:start="103:16" pos:end="103:18">val</name> <operator pos:start="103:20" pos:end="103:21">&lt;&lt;</operator> <literal type="number" pos:start="103:23" pos:end="103:23">1</literal><operator pos:start="103:24" pos:end="103:24">)</operator> <operator pos:start="103:26" pos:end="103:26">+</operator> <call pos:start="103:28" pos:end="103:82"><name pos:start="103:28" pos:end="103:40">ff_mqc_decode</name><argument_list pos:start="103:41" pos:end="103:82">(<argument pos:start="103:42" pos:end="103:49"><expr pos:start="103:42" pos:end="103:49"><operator pos:start="103:42" pos:end="103:42">&amp;</operator><name pos:start="103:43" pos:end="103:49"><name pos:start="103:43" pos:end="103:44">t1</name><operator pos:start="103:45" pos:end="103:46">-&gt;</operator><name pos:start="103:47" pos:end="103:49">mqc</name></name></expr></argument>, <argument pos:start="103:52" pos:end="103:81"><expr pos:start="103:52" pos:end="103:81"><name pos:start="103:52" pos:end="103:68"><name pos:start="103:52" pos:end="103:53">t1</name><operator pos:start="103:54" pos:end="103:55">-&gt;</operator><name pos:start="103:56" pos:end="103:58">mqc</name><operator pos:start="103:59" pos:end="103:59">.</operator><name pos:start="103:60" pos:end="103:68">cx_states</name></name> <operator pos:start="103:70" pos:end="103:70">+</operator> <name pos:start="103:72" pos:end="103:81">MQC_CX_UNI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:83"><expr pos:start="105:9" pos:end="105:82"><name pos:start="105:9" pos:end="105:11">val</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <operator pos:start="105:15" pos:end="105:15">(</operator><name pos:start="105:16" pos:end="105:18">val</name> <operator pos:start="105:20" pos:end="105:21">&lt;&lt;</operator> <literal type="number" pos:start="105:23" pos:end="105:23">1</literal><operator pos:start="105:24" pos:end="105:24">)</operator> <operator pos:start="105:26" pos:end="105:26">+</operator> <call pos:start="105:28" pos:end="105:82"><name pos:start="105:28" pos:end="105:40">ff_mqc_decode</name><argument_list pos:start="105:41" pos:end="105:82">(<argument pos:start="105:42" pos:end="105:49"><expr pos:start="105:42" pos:end="105:49"><operator pos:start="105:42" pos:end="105:42">&amp;</operator><name pos:start="105:43" pos:end="105:49"><name pos:start="105:43" pos:end="105:44">t1</name><operator pos:start="105:45" pos:end="105:46">-&gt;</operator><name pos:start="105:47" pos:end="105:49">mqc</name></name></expr></argument>, <argument pos:start="105:52" pos:end="105:81"><expr pos:start="105:52" pos:end="105:81"><name pos:start="105:52" pos:end="105:68"><name pos:start="105:52" pos:end="105:53">t1</name><operator pos:start="105:54" pos:end="105:55">-&gt;</operator><name pos:start="105:56" pos:end="105:58">mqc</name><operator pos:start="105:59" pos:end="105:59">.</operator><name pos:start="105:60" pos:end="105:68">cx_states</name></name> <operator pos:start="105:70" pos:end="105:70">+</operator> <name pos:start="105:72" pos:end="105:81">MQC_CX_UNI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:83"><expr pos:start="107:9" pos:end="107:82"><name pos:start="107:9" pos:end="107:11">val</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <operator pos:start="107:15" pos:end="107:15">(</operator><name pos:start="107:16" pos:end="107:18">val</name> <operator pos:start="107:20" pos:end="107:21">&lt;&lt;</operator> <literal type="number" pos:start="107:23" pos:end="107:23">1</literal><operator pos:start="107:24" pos:end="107:24">)</operator> <operator pos:start="107:26" pos:end="107:26">+</operator> <call pos:start="107:28" pos:end="107:82"><name pos:start="107:28" pos:end="107:40">ff_mqc_decode</name><argument_list pos:start="107:41" pos:end="107:82">(<argument pos:start="107:42" pos:end="107:49"><expr pos:start="107:42" pos:end="107:49"><operator pos:start="107:42" pos:end="107:42">&amp;</operator><name pos:start="107:43" pos:end="107:49"><name pos:start="107:43" pos:end="107:44">t1</name><operator pos:start="107:45" pos:end="107:46">-&gt;</operator><name pos:start="107:47" pos:end="107:49">mqc</name></name></expr></argument>, <argument pos:start="107:52" pos:end="107:81"><expr pos:start="107:52" pos:end="107:81"><name pos:start="107:52" pos:end="107:68"><name pos:start="107:52" pos:end="107:53">t1</name><operator pos:start="107:54" pos:end="107:55">-&gt;</operator><name pos:start="107:56" pos:end="107:58">mqc</name><operator pos:start="107:59" pos:end="107:59">.</operator><name pos:start="107:60" pos:end="107:68">cx_states</name></name> <operator pos:start="107:70" pos:end="107:70">+</operator> <name pos:start="107:72" pos:end="107:81">MQC_CX_UNI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="113:60"><if pos:start="109:9" pos:end="113:60">if <condition pos:start="109:12" pos:end="109:23">(<expr pos:start="109:13" pos:end="109:22"><name pos:start="109:13" pos:end="109:15">val</name> <operator pos:start="109:17" pos:end="109:18">!=</operator> <literal type="number" pos:start="109:20" pos:end="109:22">0xa</literal></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="113:60"><block_content pos:start="111:13" pos:end="113:60">

            <expr_stmt pos:start="111:13" pos:end="113:60"><expr pos:start="111:13" pos:end="113:59"><call pos:start="111:13" pos:end="113:59"><name pos:start="111:13" pos:end="111:18">av_log</name><argument_list pos:start="111:19" pos:end="113:59">(<argument pos:start="111:20" pos:end="111:27"><expr pos:start="111:20" pos:end="111:27"><name pos:start="111:20" pos:end="111:27"><name pos:start="111:20" pos:end="111:20">s</name><operator pos:start="111:21" pos:end="111:22">-&gt;</operator><name pos:start="111:23" pos:end="111:27">avctx</name></name></expr></argument>, <argument pos:start="111:30" pos:end="111:41"><expr pos:start="111:30" pos:end="111:41"><name pos:start="111:30" pos:end="111:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="113:20" pos:end="113:58"><expr pos:start="113:20" pos:end="113:58"><literal type="string" pos:start="113:20" pos:end="113:58">"Segmentation symbol value incorrect\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
