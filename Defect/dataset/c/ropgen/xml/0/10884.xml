<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10884.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">dec10_reg_scc</name><parameter_list pos:start="1:26" pos:end="1:43">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:38">DisasContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:24">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">cond</name> <init pos:start="5:14" pos:end="5:22">= <expr pos:start="5:16" pos:end="5:22"><name pos:start="5:16" pos:end="5:22"><name pos:start="5:16" pos:end="5:17">dc</name><operator pos:start="5:18" pos:end="5:19">-&gt;</operator><name pos:start="5:20" pos:end="5:22">dst</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:50"><expr pos:start="9:5" pos:end="9:49"><call pos:start="9:5" pos:end="9:49"><name pos:start="9:5" pos:end="9:11">LOG_DIS</name><argument_list pos:start="9:12" pos:end="9:49">(<argument pos:start="9:13" pos:end="9:24"><expr pos:start="9:13" pos:end="9:24"><literal type="string" pos:start="9:13" pos:end="9:24">"s%s $r%u\n"</literal></expr></argument>, <argument pos:start="9:27" pos:end="9:39"><expr pos:start="9:27" pos:end="9:39"><call pos:start="9:27" pos:end="9:39"><name pos:start="9:27" pos:end="9:33">cc_name</name><argument_list pos:start="9:34" pos:end="9:39">(<argument pos:start="9:35" pos:end="9:38"><expr pos:start="9:35" pos:end="9:38"><name pos:start="9:35" pos:end="9:38">cond</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="9:42" pos:end="9:48"><expr pos:start="9:42" pos:end="9:48"><name pos:start="9:42" pos:end="9:48"><name pos:start="9:42" pos:end="9:43">dc</name><operator pos:start="9:44" pos:end="9:45">-&gt;</operator><name pos:start="9:46" pos:end="9:48">src</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="35:5"><if pos:start="13:5" pos:end="31:5">if <condition pos:start="13:8" pos:end="13:21">(<expr pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:12">cond</name> <operator pos:start="13:14" pos:end="13:15">!=</operator> <name pos:start="13:17" pos:end="13:20">CC_A</name></expr>)</condition>

    <block pos:start="15:5" pos:end="31:5">{<block_content pos:start="17:9" pos:end="29:26">

        <decl_stmt pos:start="17:9" pos:end="17:15"><decl pos:start="17:9" pos:end="17:14"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:14">l1</name></decl>;</decl_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:46"><expr pos:start="21:9" pos:end="21:45"><call pos:start="21:9" pos:end="21:45"><name pos:start="21:9" pos:end="21:18">gen_tst_cc</name> <argument_list pos:start="21:20" pos:end="21:45">(<argument pos:start="21:21" pos:end="21:22"><expr pos:start="21:21" pos:end="21:22"><name pos:start="21:21" pos:end="21:22">dc</name></expr></argument>, <argument pos:start="21:25" pos:end="21:38"><expr pos:start="21:25" pos:end="21:38"><name pos:start="21:25" pos:end="21:38"><name pos:start="21:25" pos:end="21:29">cpu_R</name><index pos:start="21:30" pos:end="21:38">[<expr pos:start="21:31" pos:end="21:37"><name pos:start="21:31" pos:end="21:37"><name pos:start="21:31" pos:end="21:32">dc</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:37">src</name></name></expr>]</index></name></expr></argument>, <argument pos:start="21:41" pos:end="21:44"><expr pos:start="21:41" pos:end="21:44"><name pos:start="21:41" pos:end="21:44">cond</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:10">l1</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <call pos:start="23:14" pos:end="23:28"><name pos:start="23:14" pos:end="23:26">gen_new_label</name><argument_list pos:start="23:27" pos:end="23:28">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:63"><expr pos:start="25:9" pos:end="25:62"><call pos:start="25:9" pos:end="25:62"><name pos:start="25:9" pos:end="25:26">tcg_gen_brcondi_tl</name><argument_list pos:start="25:27" pos:end="25:62">(<argument pos:start="25:28" pos:end="25:38"><expr pos:start="25:28" pos:end="25:38"><name pos:start="25:28" pos:end="25:38">TCG_COND_EQ</name></expr></argument>, <argument pos:start="25:41" pos:end="25:54"><expr pos:start="25:41" pos:end="25:54"><name pos:start="25:41" pos:end="25:54"><name pos:start="25:41" pos:end="25:45">cpu_R</name><index pos:start="25:46" pos:end="25:54">[<expr pos:start="25:47" pos:end="25:53"><name pos:start="25:47" pos:end="25:53"><name pos:start="25:47" pos:end="25:48">dc</name><operator pos:start="25:49" pos:end="25:50">-&gt;</operator><name pos:start="25:51" pos:end="25:53">src</name></name></expr>]</index></name></expr></argument>, <argument pos:start="25:57" pos:end="25:57"><expr pos:start="25:57" pos:end="25:57"><literal type="number" pos:start="25:57" pos:end="25:57">0</literal></expr></argument>, <argument pos:start="25:60" pos:end="25:61"><expr pos:start="25:60" pos:end="25:61"><name pos:start="25:60" pos:end="25:61">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:43"><expr pos:start="27:9" pos:end="27:42"><call pos:start="27:9" pos:end="27:42"><name pos:start="27:9" pos:end="27:23">tcg_gen_movi_tl</name><argument_list pos:start="27:24" pos:end="27:42">(<argument pos:start="27:25" pos:end="27:38"><expr pos:start="27:25" pos:end="27:38"><name pos:start="27:25" pos:end="27:38"><name pos:start="27:25" pos:end="27:29">cpu_R</name><index pos:start="27:30" pos:end="27:38">[<expr pos:start="27:31" pos:end="27:37"><name pos:start="27:31" pos:end="27:37"><name pos:start="27:31" pos:end="27:32">dc</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:37">src</name></name></expr>]</index></name></expr></argument>, <argument pos:start="27:41" pos:end="27:41"><expr pos:start="27:41" pos:end="27:41"><literal type="number" pos:start="27:41" pos:end="27:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:26"><expr pos:start="29:9" pos:end="29:25"><call pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:21">gen_set_label</name><argument_list pos:start="29:22" pos:end="29:25">(<argument pos:start="29:23" pos:end="29:24"><expr pos:start="29:23" pos:end="29:24"><name pos:start="29:23" pos:end="29:24">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="35:5">else <block pos:start="31:12" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:43">

        <expr_stmt pos:start="33:9" pos:end="33:43"><expr pos:start="33:9" pos:end="33:42"><call pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:23">tcg_gen_movi_tl</name><argument_list pos:start="33:24" pos:end="33:42">(<argument pos:start="33:25" pos:end="33:38"><expr pos:start="33:25" pos:end="33:38"><name pos:start="33:25" pos:end="33:38"><name pos:start="33:25" pos:end="33:29">cpu_R</name><index pos:start="33:30" pos:end="33:38">[<expr pos:start="33:31" pos:end="33:37"><name pos:start="33:31" pos:end="33:37"><name pos:start="33:31" pos:end="33:32">dc</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:37">src</name></name></expr>]</index></name></expr></argument>, <argument pos:start="33:41" pos:end="33:41"><expr pos:start="33:41" pos:end="33:41"><literal type="number" pos:start="33:41" pos:end="33:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><call pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:16">cris_cc_mask</name><argument_list pos:start="39:17" pos:end="39:23">(<argument pos:start="39:18" pos:end="39:19"><expr pos:start="39:18" pos:end="39:19"><name pos:start="39:18" pos:end="39:19">dc</name></expr></argument>, <argument pos:start="39:22" pos:end="39:22"><expr pos:start="39:22" pos:end="39:22"><literal type="number" pos:start="39:22" pos:end="39:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
