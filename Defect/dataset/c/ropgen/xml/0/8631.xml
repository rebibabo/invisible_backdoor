<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8631.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">rtas_ibm_slot_error_detail</name><parameter_list pos:start="1:39" pos:end="9:57">(<parameter pos:start="1:40" pos:end="1:54"><decl pos:start="1:40" pos:end="1:54"><type pos:start="1:40" pos:end="1:54"><name pos:start="1:40" pos:end="1:49">PowerPCCPU</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">cpu</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:62"><decl pos:start="3:40" pos:end="3:62"><type pos:start="3:40" pos:end="3:62"><name pos:start="3:40" pos:end="3:55">sPAPREnvironment</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:62">spapr</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:53"><decl pos:start="5:40" pos:end="5:53"><type pos:start="5:40" pos:end="5:53"><name pos:start="5:40" pos:end="5:47">uint32_t</name></type> <name pos:start="5:49" pos:end="5:53">token</name></decl></parameter>, <parameter pos:start="5:56" pos:end="5:69"><decl pos:start="5:56" pos:end="5:69"><type pos:start="5:56" pos:end="5:69"><name pos:start="5:56" pos:end="5:63">uint32_t</name></type> <name pos:start="5:65" pos:end="5:69">nargs</name></decl></parameter>,

                                       <parameter pos:start="7:40" pos:end="7:56"><decl pos:start="7:40" pos:end="7:56"><type pos:start="7:40" pos:end="7:56"><name pos:start="7:40" pos:end="7:51">target_ulong</name></type> <name pos:start="7:53" pos:end="7:56">args</name></decl></parameter>, <parameter pos:start="7:59" pos:end="7:71"><decl pos:start="7:59" pos:end="7:71"><type pos:start="7:59" pos:end="7:71"><name pos:start="7:59" pos:end="7:66">uint32_t</name></type> <name pos:start="7:68" pos:end="7:71">nret</name></decl></parameter>,

                                       <parameter pos:start="9:40" pos:end="9:56"><decl pos:start="9:40" pos:end="9:56"><type pos:start="9:40" pos:end="9:56"><name pos:start="9:40" pos:end="9:51">target_ulong</name></type> <name pos:start="9:53" pos:end="9:56">rets</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="83:1">{<block_content pos:start="13:5" pos:end="81:43">

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">sPAPRPHBState</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:23">sphb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:17">sPAPRPHBClass</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:22">spc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">option</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint64_t</name></type> <name pos:start="19:14" pos:end="19:17">buid</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:36">(<expr pos:start="23:9" pos:end="23:35"><operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:14">nargs</name> <operator pos:start="23:16" pos:end="23:17">!=</operator> <literal type="number" pos:start="23:19" pos:end="23:19">8</literal><operator pos:start="23:20" pos:end="23:20">)</operator> <operator pos:start="23:22" pos:end="23:23">||</operator> <operator pos:start="23:25" pos:end="23:25">(</operator><name pos:start="23:26" pos:end="23:29">nret</name> <operator pos:start="23:31" pos:end="23:32">!=</operator> <literal type="number" pos:start="23:34" pos:end="23:34">1</literal><operator pos:start="23:35" pos:end="23:35">)</operator></expr>)</condition> <block pos:start="23:38" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:30">

        <goto pos:start="25:9" pos:end="25:30">goto <name pos:start="25:14" pos:end="25:29">param_error_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:65"><expr pos:start="31:5" pos:end="31:64"><name pos:start="31:5" pos:end="31:8">buid</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <operator pos:start="31:12" pos:end="31:12">(</operator><operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:21">uint64_t</name><operator pos:start="31:22" pos:end="31:22">)</operator><call pos:start="31:23" pos:end="31:38"><name pos:start="31:23" pos:end="31:29">rtas_ld</name><argument_list pos:start="31:30" pos:end="31:38">(<argument pos:start="31:31" pos:end="31:34"><expr pos:start="31:31" pos:end="31:34"><name pos:start="31:31" pos:end="31:34">args</name></expr></argument>, <argument pos:start="31:37" pos:end="31:37"><expr pos:start="31:37" pos:end="31:37"><literal type="number" pos:start="31:37" pos:end="31:37">1</literal></expr></argument>)</argument_list></call> <operator pos:start="31:40" pos:end="31:41">&lt;&lt;</operator> <literal type="number" pos:start="31:43" pos:end="31:44">32</literal><operator pos:start="31:45" pos:end="31:45">)</operator> <operator pos:start="31:47" pos:end="31:47">|</operator> <call pos:start="31:49" pos:end="31:64"><name pos:start="31:49" pos:end="31:55">rtas_ld</name><argument_list pos:start="31:56" pos:end="31:64">(<argument pos:start="31:57" pos:end="31:60"><expr pos:start="31:57" pos:end="31:60"><name pos:start="31:57" pos:end="31:60">args</name></expr></argument>, <argument pos:start="31:63" pos:end="31:63"><expr pos:start="31:63" pos:end="31:63"><literal type="number" pos:start="31:63" pos:end="31:63">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:33"><expr pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:8">sphb</name> <operator pos:start="33:10" pos:end="33:10">=</operator> <call pos:start="33:12" pos:end="33:32"><name pos:start="33:12" pos:end="33:19">find_phb</name><argument_list pos:start="33:20" pos:end="33:32">(<argument pos:start="33:21" pos:end="33:25"><expr pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:25">spapr</name></expr></argument>, <argument pos:start="33:28" pos:end="33:31"><expr pos:start="33:28" pos:end="33:31"><name pos:start="33:28" pos:end="33:31">buid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:14">(<expr pos:start="35:9" pos:end="35:13"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:13">sphb</name></expr>)</condition> <block pos:start="35:16" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:30">

        <goto pos:start="37:9" pos:end="37:30">goto <name pos:start="37:14" pos:end="37:29">param_error_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:48"><expr pos:start="43:5" pos:end="43:47"><name pos:start="43:5" pos:end="43:7">spc</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:47"><name pos:start="43:11" pos:end="43:41">SPAPR_PCI_HOST_BRIDGE_GET_CLASS</name><argument_list pos:start="43:42" pos:end="43:47">(<argument pos:start="43:43" pos:end="43:46"><expr pos:start="43:43" pos:end="43:46"><name pos:start="43:43" pos:end="43:46">sphb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:29">(<expr pos:start="45:9" pos:end="45:28"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:28"><name pos:start="45:10" pos:end="45:12">spc</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:28">eeh_set_option</name></name></expr>)</condition> <block pos:start="45:31" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:30">

        <goto pos:start="47:9" pos:end="47:30">goto <name pos:start="47:14" pos:end="47:29">param_error_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:30"><expr pos:start="53:5" pos:end="53:29"><name pos:start="53:5" pos:end="53:10">option</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <call pos:start="53:14" pos:end="53:29"><name pos:start="53:14" pos:end="53:20">rtas_ld</name><argument_list pos:start="53:21" pos:end="53:29">(<argument pos:start="53:22" pos:end="53:25"><expr pos:start="53:22" pos:end="53:25"><name pos:start="53:22" pos:end="53:25">args</name></expr></argument>, <argument pos:start="53:28" pos:end="53:28"><expr pos:start="53:28" pos:end="53:28"><literal type="number" pos:start="53:28" pos:end="53:28">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="55:5" pos:end="67:5">switch <condition pos:start="55:12" pos:end="55:19">(<expr pos:start="55:13" pos:end="55:18"><name pos:start="55:13" pos:end="55:18">option</name></expr>)</condition> <block pos:start="55:21" pos:end="67:5">{<block_content pos:start="57:5" pos:end="65:30">

    <case pos:start="57:5" pos:end="57:32">case <expr pos:start="57:10" pos:end="57:31"><name pos:start="57:10" pos:end="57:31">RTAS_SLOT_TEMP_ERR_LOG</name></expr>:</case>

    <case pos:start="59:5" pos:end="59:32">case <expr pos:start="59:10" pos:end="59:31"><name pos:start="59:10" pos:end="59:31">RTAS_SLOT_PERM_ERR_LOG</name></expr>:</case>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <default pos:start="63:5" pos:end="63:12">default:</default>

        <goto pos:start="65:9" pos:end="65:30">goto <name pos:start="65:14" pos:end="65:29">param_error_exit</name>;</goto>

    </block_content>}</block></switch>



    <comment type="block" pos:start="71:5" pos:end="71:37">/* We don't have error log yet */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:47"><expr pos:start="73:5" pos:end="73:46"><call pos:start="73:5" pos:end="73:46"><name pos:start="73:5" pos:end="73:11">rtas_st</name><argument_list pos:start="73:12" pos:end="73:46">(<argument pos:start="73:13" pos:end="73:16"><expr pos:start="73:13" pos:end="73:16"><name pos:start="73:13" pos:end="73:16">rets</name></expr></argument>, <argument pos:start="73:19" pos:end="73:19"><expr pos:start="73:19" pos:end="73:19"><literal type="number" pos:start="73:19" pos:end="73:19">0</literal></expr></argument>, <argument pos:start="73:22" pos:end="73:45"><expr pos:start="73:22" pos:end="73:45"><name pos:start="73:22" pos:end="73:45">RTAS_OUT_NO_ERRORS_FOUND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="75:5" pos:end="75:11">return;</return>



<label pos:start="79:1" pos:end="79:17"><name pos:start="79:1" pos:end="79:16">param_error_exit</name>:</label>

    <expr_stmt pos:start="81:5" pos:end="81:43"><expr pos:start="81:5" pos:end="81:42"><call pos:start="81:5" pos:end="81:42"><name pos:start="81:5" pos:end="81:11">rtas_st</name><argument_list pos:start="81:12" pos:end="81:42">(<argument pos:start="81:13" pos:end="81:16"><expr pos:start="81:13" pos:end="81:16"><name pos:start="81:13" pos:end="81:16">rets</name></expr></argument>, <argument pos:start="81:19" pos:end="81:19"><expr pos:start="81:19" pos:end="81:19"><literal type="number" pos:start="81:19" pos:end="81:19">0</literal></expr></argument>, <argument pos:start="81:22" pos:end="81:41"><expr pos:start="81:22" pos:end="81:41"><name pos:start="81:22" pos:end="81:41">RTAS_OUT_PARAM_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
