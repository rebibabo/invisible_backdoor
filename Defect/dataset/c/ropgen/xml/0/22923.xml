<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22923.c" pos:tabs="8"><function pos:start="1:1" pos:end="259:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">fourxm_read_header</name><parameter_list pos:start="1:30" pos:end="3:53">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:52"><decl pos:start="3:31" pos:end="3:52"><type pos:start="3:31" pos:end="3:52"><name pos:start="3:31" pos:end="3:48">AVFormatParameters</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:52">ap</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="259:1">{<block_content pos:start="7:5" pos:end="257:13">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">ByteIOContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">pb</name> <init pos:start="7:23" pos:end="7:29">= <expr pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:27">fourcc_tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:21">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">header_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:46"><decl pos:start="15:5" pos:end="15:45"><type pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:22">FourxmDemuxContext</name> <modifier pos:start="15:24" pos:end="15:24">*</modifier></type><name pos:start="15:25" pos:end="15:30">fourxm</name> <init pos:start="15:32" pos:end="15:45">= <expr pos:start="15:34" pos:end="15:45"><name pos:start="15:34" pos:end="15:45"><name pos:start="15:34" pos:end="15:34">s</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:17">char</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:25">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:27"><decl pos:start="21:5" pos:end="21:26"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:21">current_track</name> <init pos:start="21:23" pos:end="21:26">= <expr pos:start="21:25" pos:end="21:26"><operator pos:start="21:25" pos:end="21:25">-</operator><literal type="number" pos:start="21:26" pos:end="21:26">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:17"><decl pos:start="23:5" pos:end="23:16"><type pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:12">AVStream</name> <modifier pos:start="23:14" pos:end="23:14">*</modifier></type><name pos:start="23:15" pos:end="23:16">st</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:10">fourxm</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:23">track_count</name></name> <operator pos:start="27:25" pos:end="27:25">=</operator> <literal type="number" pos:start="27:27" pos:end="27:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:10">fourxm</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:18">tracks</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:25">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:31"><expr pos:start="31:5" pos:end="31:30"><name pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:10">fourxm</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:26">selected_track</name></name> <operator pos:start="31:28" pos:end="31:28">=</operator> <literal type="number" pos:start="31:30" pos:end="31:30">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:22"><expr pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:10">fourxm</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:15">fps</name></name> <operator pos:start="33:17" pos:end="33:17">=</operator> <literal type="number" pos:start="33:19" pos:end="33:21">1.0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:41">/* skip the first 3 32-bit numbers */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:32"><expr pos:start="39:5" pos:end="39:31"><call pos:start="39:5" pos:end="39:31"><name pos:start="39:5" pos:end="39:13">url_fseek</name><argument_list pos:start="39:14" pos:end="39:31">(<argument pos:start="39:15" pos:end="39:16"><expr pos:start="39:15" pos:end="39:16"><name pos:start="39:15" pos:end="39:16">pb</name></expr></argument>, <argument pos:start="39:19" pos:end="39:20"><expr pos:start="39:19" pos:end="39:20"><literal type="number" pos:start="39:19" pos:end="39:20">12</literal></expr></argument>, <argument pos:start="39:23" pos:end="39:30"><expr pos:start="39:23" pos:end="39:30"><name pos:start="39:23" pos:end="39:30">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:29">/* check for LIST-HEAD */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:22"><expr pos:start="45:5" pos:end="45:21"><call pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:19">GET_LIST_HEADER</name><argument_list pos:start="45:20" pos:end="45:21">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:27"><expr pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:15">header_size</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:22">size</name> <operator pos:start="47:24" pos:end="47:24">-</operator> <literal type="number" pos:start="47:26" pos:end="47:26">4</literal></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="51:35"><if pos:start="49:5" pos:end="51:35">if <condition pos:start="49:8" pos:end="49:43">(<expr pos:start="49:9" pos:end="49:42"><name pos:start="49:9" pos:end="49:18">fourcc_tag</name> <operator pos:start="49:20" pos:end="49:21">!=</operator> <name pos:start="49:23" pos:end="49:30">HEAD_TAG</name> <operator pos:start="49:32" pos:end="49:33">||</operator> <name pos:start="49:35" pos:end="49:38">size</name> <operator pos:start="49:40" pos:end="49:40">&lt;</operator> <literal type="number" pos:start="49:42" pos:end="49:42">4</literal></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:35"><block_content pos:start="51:9" pos:end="51:35">

        <return pos:start="51:9" pos:end="51:35">return <expr pos:start="51:16" pos:end="51:34"><name pos:start="51:16" pos:end="51:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:64">/* allocate space for the header and load the whole thing */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:36"><expr pos:start="57:5" pos:end="57:35"><name pos:start="57:5" pos:end="57:10">header</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <call pos:start="57:14" pos:end="57:35"><name pos:start="57:14" pos:end="57:22">av_malloc</name><argument_list pos:start="57:23" pos:end="57:35">(<argument pos:start="57:24" pos:end="57:34"><expr pos:start="57:24" pos:end="57:34"><name pos:start="57:24" pos:end="57:34">header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="61:31"><if pos:start="59:5" pos:end="61:31">if <condition pos:start="59:8" pos:end="59:16">(<expr pos:start="59:9" pos:end="59:15"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:15">header</name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:31"><block_content pos:start="61:9" pos:end="61:31">

        <return pos:start="61:9" pos:end="61:31">return <expr pos:start="61:16" pos:end="61:30"><call pos:start="61:16" pos:end="61:30"><name pos:start="61:16" pos:end="61:22">AVERROR</name><argument_list pos:start="61:23" pos:end="61:30">(<argument pos:start="61:24" pos:end="61:29"><expr pos:start="61:24" pos:end="61:29"><name pos:start="61:24" pos:end="61:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="63:5" pos:end="65:28"><if pos:start="63:5" pos:end="65:28">if <condition pos:start="63:8" pos:end="63:59">(<expr pos:start="63:9" pos:end="63:58"><call pos:start="63:9" pos:end="63:43"><name pos:start="63:9" pos:end="63:18">get_buffer</name><argument_list pos:start="63:19" pos:end="63:43">(<argument pos:start="63:20" pos:end="63:21"><expr pos:start="63:20" pos:end="63:21"><name pos:start="63:20" pos:end="63:21">pb</name></expr></argument>, <argument pos:start="63:24" pos:end="63:29"><expr pos:start="63:24" pos:end="63:29"><name pos:start="63:24" pos:end="63:29">header</name></expr></argument>, <argument pos:start="63:32" pos:end="63:42"><expr pos:start="63:32" pos:end="63:42"><name pos:start="63:32" pos:end="63:42">header_size</name></expr></argument>)</argument_list></call> <operator pos:start="63:45" pos:end="63:46">!=</operator> <name pos:start="63:48" pos:end="63:58">header_size</name></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:28"><block_content pos:start="65:9" pos:end="65:28">

        <return pos:start="65:9" pos:end="65:28">return <expr pos:start="65:16" pos:end="65:27"><call pos:start="65:16" pos:end="65:27"><name pos:start="65:16" pos:end="65:22">AVERROR</name><argument_list pos:start="65:23" pos:end="65:27">(<argument pos:start="65:24" pos:end="65:26"><expr pos:start="65:24" pos:end="65:26"><name pos:start="65:24" pos:end="65:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:80">/* take the lazy approach and search for any and all vtrk and strk chunks */</comment>

    <for pos:start="71:5" pos:end="231:5">for <control pos:start="71:9" pos:end="71:41">(<init pos:start="71:10" pos:end="71:15"><expr pos:start="71:10" pos:end="71:14"><name pos:start="71:10" pos:end="71:10">i</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <literal type="number" pos:start="71:14" pos:end="71:14">0</literal></expr>;</init> <condition pos:start="71:17" pos:end="71:36"><expr pos:start="71:17" pos:end="71:35"><name pos:start="71:17" pos:end="71:17">i</name> <operator pos:start="71:19" pos:end="71:19">&lt;</operator> <name pos:start="71:21" pos:end="71:31">header_size</name> <operator pos:start="71:33" pos:end="71:33">-</operator> <literal type="number" pos:start="71:35" pos:end="71:35">8</literal></expr>;</condition> <incr pos:start="71:38" pos:end="71:40"><expr pos:start="71:38" pos:end="71:40"><name pos:start="71:38" pos:end="71:38">i</name><operator pos:start="71:39" pos:end="71:40">++</operator></expr></incr>)</control> <block pos:start="71:43" pos:end="231:5">{<block_content pos:start="73:9" pos:end="229:9">

        <expr_stmt pos:start="73:9" pos:end="73:41"><expr pos:start="73:9" pos:end="73:40"><name pos:start="73:9" pos:end="73:18">fourcc_tag</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <call pos:start="73:22" pos:end="73:40"><name pos:start="73:22" pos:end="73:28">AV_RL32</name><argument_list pos:start="73:29" pos:end="73:40">(<argument pos:start="73:30" pos:end="73:39"><expr pos:start="73:30" pos:end="73:39"><operator pos:start="73:30" pos:end="73:30">&amp;</operator><name pos:start="73:31" pos:end="73:39"><name pos:start="73:31" pos:end="73:36">header</name><index pos:start="73:37" pos:end="73:39">[<expr pos:start="73:38" pos:end="73:38"><name pos:start="73:38" pos:end="73:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:39"><expr pos:start="75:9" pos:end="75:38"><name pos:start="75:9" pos:end="75:12">size</name> <operator pos:start="75:14" pos:end="75:14">=</operator> <call pos:start="75:16" pos:end="75:38"><name pos:start="75:16" pos:end="75:22">AV_RL32</name><argument_list pos:start="75:23" pos:end="75:38">(<argument pos:start="75:24" pos:end="75:37"><expr pos:start="75:24" pos:end="75:37"><operator pos:start="75:24" pos:end="75:24">&amp;</operator><name pos:start="75:25" pos:end="75:37"><name pos:start="75:25" pos:end="75:30">header</name><index pos:start="75:31" pos:end="75:37">[<expr pos:start="75:32" pos:end="75:36"><name pos:start="75:32" pos:end="75:32">i</name> <operator pos:start="75:34" pos:end="75:34">+</operator> <literal type="number" pos:start="75:36" pos:end="75:36">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="79:9" pos:end="229:9"><if pos:start="79:9" pos:end="83:9">if <condition pos:start="79:12" pos:end="79:35">(<expr pos:start="79:13" pos:end="79:34"><name pos:start="79:13" pos:end="79:22">fourcc_tag</name> <operator pos:start="79:24" pos:end="79:25">==</operator> <name pos:start="79:27" pos:end="79:34">std__TAG</name></expr>)</condition> <block pos:start="79:37" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:63">

            <expr_stmt pos:start="81:13" pos:end="81:63"><expr pos:start="81:13" pos:end="81:62"><name pos:start="81:13" pos:end="81:23"><name pos:start="81:13" pos:end="81:18">fourxm</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:23">fps</name></name> <operator pos:start="81:25" pos:end="81:25">=</operator> <call pos:start="81:27" pos:end="81:62"><name pos:start="81:27" pos:end="81:36">av_int2flt</name><argument_list pos:start="81:37" pos:end="81:62">(<argument pos:start="81:38" pos:end="81:61"><expr pos:start="81:38" pos:end="81:61"><call pos:start="81:38" pos:end="81:61"><name pos:start="81:38" pos:end="81:44">AV_RL32</name><argument_list pos:start="81:45" pos:end="81:61">(<argument pos:start="81:46" pos:end="81:60"><expr pos:start="81:46" pos:end="81:60"><operator pos:start="81:46" pos:end="81:46">&amp;</operator><name pos:start="81:47" pos:end="81:60"><name pos:start="81:47" pos:end="81:52">header</name><index pos:start="81:53" pos:end="81:60">[<expr pos:start="81:54" pos:end="81:59"><name pos:start="81:54" pos:end="81:54">i</name> <operator pos:start="81:56" pos:end="81:56">+</operator> <literal type="number" pos:start="81:58" pos:end="81:59">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="83:11" pos:end="135:9">else if <condition pos:start="83:19" pos:end="83:42">(<expr pos:start="83:20" pos:end="83:41"><name pos:start="83:20" pos:end="83:29">fourcc_tag</name> <operator pos:start="83:31" pos:end="83:32">==</operator> <name pos:start="83:34" pos:end="83:41">vtrk_TAG</name></expr>)</condition> <block pos:start="83:44" pos:end="135:9">{<block_content pos:start="87:13" pos:end="133:26">

            <comment type="block" pos:start="85:13" pos:end="85:49">/* check that there is enough data */</comment>

            <if_stmt pos:start="87:13" pos:end="93:13"><if pos:start="87:13" pos:end="93:13">if <condition pos:start="87:16" pos:end="87:34">(<expr pos:start="87:17" pos:end="87:33"><name pos:start="87:17" pos:end="87:20">size</name> <operator pos:start="87:22" pos:end="87:23">!=</operator> <name pos:start="87:25" pos:end="87:33">vtrk_SIZE</name></expr>)</condition> <block pos:start="87:36" pos:end="93:13">{<block_content pos:start="89:17" pos:end="91:43">

                <expr_stmt pos:start="89:17" pos:end="89:32"><expr pos:start="89:17" pos:end="89:31"><call pos:start="89:17" pos:end="89:31"><name pos:start="89:17" pos:end="89:23">av_free</name><argument_list pos:start="89:24" pos:end="89:31">(<argument pos:start="89:25" pos:end="89:30"><expr pos:start="89:25" pos:end="89:30"><name pos:start="89:25" pos:end="89:30">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="91:17" pos:end="91:43">return <expr pos:start="91:24" pos:end="91:42"><name pos:start="91:24" pos:end="91:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:53"><expr pos:start="95:13" pos:end="95:52"><name pos:start="95:13" pos:end="95:25"><name pos:start="95:13" pos:end="95:18">fourxm</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:25">width</name></name> <operator pos:start="95:27" pos:end="95:27">=</operator> <call pos:start="95:29" pos:end="95:52"><name pos:start="95:29" pos:end="95:35">AV_RL32</name><argument_list pos:start="95:36" pos:end="95:52">(<argument pos:start="95:37" pos:end="95:51"><expr pos:start="95:37" pos:end="95:51"><operator pos:start="95:37" pos:end="95:37">&amp;</operator><name pos:start="95:38" pos:end="95:51"><name pos:start="95:38" pos:end="95:43">header</name><index pos:start="95:44" pos:end="95:51">[<expr pos:start="95:45" pos:end="95:50"><name pos:start="95:45" pos:end="95:45">i</name> <operator pos:start="95:47" pos:end="95:47">+</operator> <literal type="number" pos:start="95:49" pos:end="95:50">36</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:54"><expr pos:start="97:13" pos:end="97:53"><name pos:start="97:13" pos:end="97:26"><name pos:start="97:13" pos:end="97:18">fourxm</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:26">height</name></name> <operator pos:start="97:28" pos:end="97:28">=</operator> <call pos:start="97:30" pos:end="97:53"><name pos:start="97:30" pos:end="97:36">AV_RL32</name><argument_list pos:start="97:37" pos:end="97:53">(<argument pos:start="97:38" pos:end="97:52"><expr pos:start="97:38" pos:end="97:52"><operator pos:start="97:38" pos:end="97:38">&amp;</operator><name pos:start="97:39" pos:end="97:52"><name pos:start="97:39" pos:end="97:44">header</name><index pos:start="97:45" pos:end="97:52">[<expr pos:start="97:46" pos:end="97:51"><name pos:start="97:46" pos:end="97:46">i</name> <operator pos:start="97:48" pos:end="97:48">+</operator> <literal type="number" pos:start="97:50" pos:end="97:51">40</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="101:13" pos:end="101:41">/* allocate a new AVStream */</comment>

            <expr_stmt pos:start="103:13" pos:end="103:37"><expr pos:start="103:13" pos:end="103:36"><name pos:start="103:13" pos:end="103:14">st</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <call pos:start="103:18" pos:end="103:36"><name pos:start="103:18" pos:end="103:30">av_new_stream</name><argument_list pos:start="103:31" pos:end="103:36">(<argument pos:start="103:32" pos:end="103:32"><expr pos:start="103:32" pos:end="103:32"><name pos:start="103:32" pos:end="103:32">s</name></expr></argument>, <argument pos:start="103:35" pos:end="103:35"><expr pos:start="103:35" pos:end="103:35"><literal type="number" pos:start="103:35" pos:end="103:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="107:39"><if pos:start="105:13" pos:end="107:39">if <condition pos:start="105:16" pos:end="105:20">(<expr pos:start="105:17" pos:end="105:19"><operator pos:start="105:17" pos:end="105:17">!</operator><name pos:start="105:18" pos:end="105:19">st</name></expr>)</condition><block type="pseudo" pos:start="107:17" pos:end="107:39"><block_content pos:start="107:17" pos:end="107:39">

                <return pos:start="107:17" pos:end="107:39">return <expr pos:start="107:24" pos:end="107:38"><call pos:start="107:24" pos:end="107:38"><name pos:start="107:24" pos:end="107:30">AVERROR</name><argument_list pos:start="107:31" pos:end="107:38">(<argument pos:start="107:32" pos:end="107:37"><expr pos:start="107:32" pos:end="107:37"><name pos:start="107:32" pos:end="107:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:52"><expr pos:start="109:13" pos:end="109:51"><call pos:start="109:13" pos:end="109:51"><name pos:start="109:13" pos:end="109:27">av_set_pts_info</name><argument_list pos:start="109:28" pos:end="109:51">(<argument pos:start="109:29" pos:end="109:30"><expr pos:start="109:29" pos:end="109:30"><name pos:start="109:29" pos:end="109:30">st</name></expr></argument>, <argument pos:start="109:33" pos:end="109:34"><expr pos:start="109:33" pos:end="109:34"><literal type="number" pos:start="109:33" pos:end="109:34">60</literal></expr></argument>, <argument pos:start="109:37" pos:end="109:37"><expr pos:start="109:37" pos:end="109:37"><literal type="number" pos:start="109:37" pos:end="109:37">1</literal></expr></argument>, <argument pos:start="109:40" pos:end="109:50"><expr pos:start="109:40" pos:end="109:50"><name pos:start="109:40" pos:end="109:50"><name pos:start="109:40" pos:end="109:45">fourxm</name><operator pos:start="109:46" pos:end="109:47">-&gt;</operator><name pos:start="109:48" pos:end="109:50">fps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="113:13" pos:end="113:51"><expr pos:start="113:13" pos:end="113:50"><name pos:start="113:13" pos:end="113:38"><name pos:start="113:13" pos:end="113:18">fourxm</name><operator pos:start="113:19" pos:end="113:20">-&gt;</operator><name pos:start="113:21" pos:end="113:38">video_stream_index</name></name> <operator pos:start="113:40" pos:end="113:40">=</operator> <name pos:start="113:42" pos:end="113:50"><name pos:start="113:42" pos:end="113:43">st</name><operator pos:start="113:44" pos:end="113:45">-&gt;</operator><name pos:start="113:46" pos:end="113:50">index</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="117:13" pos:end="117:53"><expr pos:start="117:13" pos:end="117:52"><name pos:start="117:13" pos:end="117:33"><name pos:start="117:13" pos:end="117:14">st</name><operator pos:start="117:15" pos:end="117:16">-&gt;</operator><name pos:start="117:17" pos:end="117:21">codec</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:33">codec_type</name></name> <operator pos:start="117:35" pos:end="117:35">=</operator> <name pos:start="117:37" pos:end="117:52">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:47"><expr pos:start="119:13" pos:end="119:46"><name pos:start="119:13" pos:end="119:31"><name pos:start="119:13" pos:end="119:14">st</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:21">codec</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:31">codec_id</name></name> <operator pos:start="119:33" pos:end="119:33">=</operator> <name pos:start="119:35" pos:end="119:46">CODEC_ID_4XM</name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:42"><expr pos:start="121:13" pos:end="121:41"><name pos:start="121:13" pos:end="121:37"><name pos:start="121:13" pos:end="121:14">st</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:21">codec</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:37">extradata_size</name></name> <operator pos:start="121:39" pos:end="121:39">=</operator> <literal type="number" pos:start="121:41" pos:end="121:41">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:48"><expr pos:start="123:13" pos:end="123:47"><name pos:start="123:13" pos:end="123:32"><name pos:start="123:13" pos:end="123:14">st</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:21">codec</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:32">extradata</name></name> <operator pos:start="123:34" pos:end="123:34">=</operator> <call pos:start="123:36" pos:end="123:47"><name pos:start="123:36" pos:end="123:44">av_malloc</name><argument_list pos:start="123:45" pos:end="123:47">(<argument pos:start="123:46" pos:end="123:46"><expr pos:start="123:46" pos:end="123:46"><literal type="number" pos:start="123:46" pos:end="123:46">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:68"><expr pos:start="125:13" pos:end="125:67"><call pos:start="125:13" pos:end="125:67"><name pos:start="125:13" pos:end="125:19">AV_WL32</name><argument_list pos:start="125:20" pos:end="125:67">(<argument pos:start="125:21" pos:end="125:40"><expr pos:start="125:21" pos:end="125:40"><name pos:start="125:21" pos:end="125:40"><name pos:start="125:21" pos:end="125:22">st</name><operator pos:start="125:23" pos:end="125:24">-&gt;</operator><name pos:start="125:25" pos:end="125:29">codec</name><operator pos:start="125:30" pos:end="125:31">-&gt;</operator><name pos:start="125:32" pos:end="125:40">extradata</name></name></expr></argument>, <argument pos:start="125:43" pos:end="125:66"><expr pos:start="125:43" pos:end="125:66"><call pos:start="125:43" pos:end="125:66"><name pos:start="125:43" pos:end="125:49">AV_RL32</name><argument_list pos:start="125:50" pos:end="125:66">(<argument pos:start="125:51" pos:end="125:65"><expr pos:start="125:51" pos:end="125:65"><operator pos:start="125:51" pos:end="125:51">&amp;</operator><name pos:start="125:52" pos:end="125:65"><name pos:start="125:52" pos:end="125:57">header</name><index pos:start="125:58" pos:end="125:65">[<expr pos:start="125:59" pos:end="125:64"><name pos:start="125:59" pos:end="125:59">i</name> <operator pos:start="125:61" pos:end="125:61">+</operator> <literal type="number" pos:start="125:63" pos:end="125:64">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:45"><expr pos:start="127:13" pos:end="127:44"><name pos:start="127:13" pos:end="127:28"><name pos:start="127:13" pos:end="127:14">st</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:21">codec</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:28">width</name></name> <operator pos:start="127:30" pos:end="127:30">=</operator> <name pos:start="127:32" pos:end="127:44"><name pos:start="127:32" pos:end="127:37">fourxm</name><operator pos:start="127:38" pos:end="127:39">-&gt;</operator><name pos:start="127:40" pos:end="127:44">width</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:47"><expr pos:start="129:13" pos:end="129:46"><name pos:start="129:13" pos:end="129:29"><name pos:start="129:13" pos:end="129:14">st</name><operator pos:start="129:15" pos:end="129:16">-&gt;</operator><name pos:start="129:17" pos:end="129:21">codec</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:29">height</name></name> <operator pos:start="129:31" pos:end="129:31">=</operator> <name pos:start="129:33" pos:end="129:46"><name pos:start="129:33" pos:end="129:38">fourxm</name><operator pos:start="129:39" pos:end="129:40">-&gt;</operator><name pos:start="129:41" pos:end="129:46">height</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="133:13" pos:end="133:26"><expr pos:start="133:13" pos:end="133:25"><name pos:start="133:13" pos:end="133:13">i</name> <operator pos:start="133:15" pos:end="133:16">+=</operator> <literal type="number" pos:start="133:18" pos:end="133:20">8</literal> <operator pos:start="133:20" pos:end="133:20">+</operator> <name pos:start="133:22" pos:end="133:25">size</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="135:11" pos:end="229:9">else if <condition pos:start="135:19" pos:end="135:42">(<expr pos:start="135:20" pos:end="135:41"><name pos:start="135:20" pos:end="135:29">fourcc_tag</name> <operator pos:start="135:31" pos:end="135:32">==</operator> <name pos:start="135:34" pos:end="135:41">strk_TAG</name></expr>)</condition> <block pos:start="135:44" pos:end="229:9">{<block_content pos:start="139:13" pos:end="227:57">

            <comment type="block" pos:start="137:13" pos:end="137:49">/* check that there is enough data */</comment>

            <if_stmt pos:start="139:13" pos:end="145:13"><if pos:start="139:13" pos:end="145:13">if <condition pos:start="139:16" pos:end="139:34">(<expr pos:start="139:17" pos:end="139:33"><name pos:start="139:17" pos:end="139:20">size</name> <operator pos:start="139:22" pos:end="139:23">!=</operator> <name pos:start="139:25" pos:end="139:33">strk_SIZE</name></expr>)</condition> <block pos:start="139:36" pos:end="145:13">{<block_content pos:start="141:17" pos:end="143:43">

                <expr_stmt pos:start="141:17" pos:end="141:32"><expr pos:start="141:17" pos:end="141:31"><call pos:start="141:17" pos:end="141:31"><name pos:start="141:17" pos:end="141:23">av_free</name><argument_list pos:start="141:24" pos:end="141:31">(<argument pos:start="141:25" pos:end="141:30"><expr pos:start="141:25" pos:end="141:30"><name pos:start="141:25" pos:end="141:30">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="143:17" pos:end="143:43">return <expr pos:start="143:24" pos:end="143:42"><name pos:start="143:24" pos:end="143:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:52"><expr pos:start="147:13" pos:end="147:51"><name pos:start="147:13" pos:end="147:25">current_track</name> <operator pos:start="147:27" pos:end="147:27">=</operator> <call pos:start="147:29" pos:end="147:51"><name pos:start="147:29" pos:end="147:35">AV_RL32</name><argument_list pos:start="147:36" pos:end="147:51">(<argument pos:start="147:37" pos:end="147:50"><expr pos:start="147:37" pos:end="147:50"><operator pos:start="147:37" pos:end="147:37">&amp;</operator><name pos:start="147:38" pos:end="147:50"><name pos:start="147:38" pos:end="147:43">header</name><index pos:start="147:44" pos:end="147:50">[<expr pos:start="147:45" pos:end="147:49"><name pos:start="147:45" pos:end="147:45">i</name> <operator pos:start="147:47" pos:end="147:47">+</operator> <literal type="number" pos:start="147:49" pos:end="147:49">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="149:13" pos:end="169:13"><if pos:start="149:13" pos:end="169:13">if <condition pos:start="149:16" pos:end="149:56">(<expr pos:start="149:17" pos:end="149:55"><name pos:start="149:17" pos:end="149:29">current_track</name> <operator pos:start="149:31" pos:end="149:31">+</operator> <literal type="number" pos:start="149:33" pos:end="149:33">1</literal> <operator pos:start="149:35" pos:end="149:35">&gt;</operator> <name pos:start="149:37" pos:end="149:55"><name pos:start="149:37" pos:end="149:42">fourxm</name><operator pos:start="149:43" pos:end="149:44">-&gt;</operator><name pos:start="149:45" pos:end="149:55">track_count</name></name></expr>)</condition> <block pos:start="149:58" pos:end="169:13">{<block_content pos:start="151:17" pos:end="167:17">

                <expr_stmt pos:start="151:17" pos:end="151:56"><expr pos:start="151:17" pos:end="151:55"><name pos:start="151:17" pos:end="151:35"><name pos:start="151:17" pos:end="151:22">fourxm</name><operator pos:start="151:23" pos:end="151:24">-&gt;</operator><name pos:start="151:25" pos:end="151:35">track_count</name></name> <operator pos:start="151:37" pos:end="151:37">=</operator> <name pos:start="151:39" pos:end="151:51">current_track</name> <operator pos:start="151:53" pos:end="151:53">+</operator> <literal type="number" pos:start="151:55" pos:end="151:55">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="153:17" pos:end="155:30"><if pos:start="153:17" pos:end="155:30">if<condition pos:start="153:19" pos:end="153:82">(<expr pos:start="153:20" pos:end="153:81"><operator pos:start="153:20" pos:end="153:20">(</operator><name pos:start="153:21" pos:end="153:28">unsigned</name><operator pos:start="153:29" pos:end="153:29">)</operator><name pos:start="153:30" pos:end="153:48"><name pos:start="153:30" pos:end="153:35">fourxm</name><operator pos:start="153:36" pos:end="153:37">-&gt;</operator><name pos:start="153:38" pos:end="153:48">track_count</name></name> <operator pos:start="153:50" pos:end="153:51">&gt;=</operator> <name pos:start="153:53" pos:end="153:60">UINT_MAX</name> <operator pos:start="153:62" pos:end="153:62">/</operator> <sizeof pos:start="153:64" pos:end="153:81">sizeof<argument_list pos:start="153:70" pos:end="153:81">(<argument pos:start="153:71" pos:end="153:80"><expr pos:start="153:71" pos:end="153:80"><name pos:start="153:71" pos:end="153:80">AudioTrack</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="155:21" pos:end="155:30"><block_content pos:start="155:21" pos:end="155:30">

                    <return pos:start="155:21" pos:end="155:30">return <expr pos:start="155:28" pos:end="155:29"><operator pos:start="155:28" pos:end="155:28">-</operator><literal type="number" pos:start="155:29" pos:end="155:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="157:17" pos:end="159:62"><expr pos:start="157:17" pos:end="159:61"><name pos:start="157:17" pos:end="157:30"><name pos:start="157:17" pos:end="157:22">fourxm</name><operator pos:start="157:23" pos:end="157:24">-&gt;</operator><name pos:start="157:25" pos:end="157:30">tracks</name></name> <operator pos:start="157:32" pos:end="157:32">=</operator> <call pos:start="157:34" pos:end="159:61"><name pos:start="157:34" pos:end="157:43">av_realloc</name><argument_list pos:start="157:44" pos:end="159:61">(<argument pos:start="157:45" pos:end="157:58"><expr pos:start="157:45" pos:end="157:58"><name pos:start="157:45" pos:end="157:58"><name pos:start="157:45" pos:end="157:50">fourxm</name><operator pos:start="157:51" pos:end="157:52">-&gt;</operator><name pos:start="157:53" pos:end="157:58">tracks</name></name></expr></argument>,

                    <argument pos:start="159:21" pos:end="159:60"><expr pos:start="159:21" pos:end="159:60"><name pos:start="159:21" pos:end="159:39"><name pos:start="159:21" pos:end="159:26">fourxm</name><operator pos:start="159:27" pos:end="159:28">-&gt;</operator><name pos:start="159:29" pos:end="159:39">track_count</name></name> <operator pos:start="159:41" pos:end="159:41">*</operator> <sizeof pos:start="159:43" pos:end="159:60">sizeof<argument_list pos:start="159:49" pos:end="159:60">(<argument pos:start="159:50" pos:end="159:59"><expr pos:start="159:50" pos:end="159:59"><name pos:start="159:50" pos:end="159:59">AudioTrack</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="161:17" pos:end="167:17"><if pos:start="161:17" pos:end="167:17">if <condition pos:start="161:20" pos:end="161:36">(<expr pos:start="161:21" pos:end="161:35"><operator pos:start="161:21" pos:end="161:21">!</operator><name pos:start="161:22" pos:end="161:35"><name pos:start="161:22" pos:end="161:27">fourxm</name><operator pos:start="161:28" pos:end="161:29">-&gt;</operator><name pos:start="161:30" pos:end="161:35">tracks</name></name></expr>)</condition> <block pos:start="161:38" pos:end="167:17">{<block_content pos:start="163:21" pos:end="165:43">

                    <expr_stmt pos:start="163:21" pos:end="163:36"><expr pos:start="163:21" pos:end="163:35"><call pos:start="163:21" pos:end="163:35"><name pos:start="163:21" pos:end="163:27">av_free</name><argument_list pos:start="163:28" pos:end="163:35">(<argument pos:start="163:29" pos:end="163:34"><expr pos:start="163:29" pos:end="163:34"><name pos:start="163:29" pos:end="163:34">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="165:21" pos:end="165:43">return <expr pos:start="165:28" pos:end="165:42"><call pos:start="165:28" pos:end="165:42"><name pos:start="165:28" pos:end="165:34">AVERROR</name><argument_list pos:start="165:35" pos:end="165:42">(<argument pos:start="165:36" pos:end="165:41"><expr pos:start="165:36" pos:end="165:41"><name pos:start="165:36" pos:end="165:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:75"><expr pos:start="171:13" pos:end="171:74"><name pos:start="171:13" pos:end="171:41"><name pos:start="171:13" pos:end="171:18">fourxm</name><operator pos:start="171:19" pos:end="171:20">-&gt;</operator><name pos:start="171:21" pos:end="171:26">tracks</name><index pos:start="171:27" pos:end="171:41">[<expr pos:start="171:28" pos:end="171:40"><name pos:start="171:28" pos:end="171:40">current_track</name></expr>]</index></name><operator pos:start="171:42" pos:end="171:42">.</operator><name pos:start="171:43" pos:end="171:47">adpcm</name> <operator pos:start="171:49" pos:end="171:49">=</operator> <call pos:start="171:51" pos:end="171:74"><name pos:start="171:51" pos:end="171:57">AV_RL32</name><argument_list pos:start="171:58" pos:end="171:74">(<argument pos:start="171:59" pos:end="171:73"><expr pos:start="171:59" pos:end="171:73"><operator pos:start="171:59" pos:end="171:59">&amp;</operator><name pos:start="171:60" pos:end="171:73"><name pos:start="171:60" pos:end="171:65">header</name><index pos:start="171:66" pos:end="171:73">[<expr pos:start="171:67" pos:end="171:72"><name pos:start="171:67" pos:end="171:67">i</name> <operator pos:start="171:69" pos:end="171:69">+</operator> <literal type="number" pos:start="171:71" pos:end="171:72">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:78"><expr pos:start="173:13" pos:end="173:77"><name pos:start="173:13" pos:end="173:41"><name pos:start="173:13" pos:end="173:18">fourxm</name><operator pos:start="173:19" pos:end="173:20">-&gt;</operator><name pos:start="173:21" pos:end="173:26">tracks</name><index pos:start="173:27" pos:end="173:41">[<expr pos:start="173:28" pos:end="173:40"><name pos:start="173:28" pos:end="173:40">current_track</name></expr>]</index></name><operator pos:start="173:42" pos:end="173:42">.</operator><name pos:start="173:43" pos:end="173:50">channels</name> <operator pos:start="173:52" pos:end="173:52">=</operator> <call pos:start="173:54" pos:end="173:77"><name pos:start="173:54" pos:end="173:60">AV_RL32</name><argument_list pos:start="173:61" pos:end="173:77">(<argument pos:start="173:62" pos:end="173:76"><expr pos:start="173:62" pos:end="173:76"><operator pos:start="173:62" pos:end="173:62">&amp;</operator><name pos:start="173:63" pos:end="173:76"><name pos:start="173:63" pos:end="173:68">header</name><index pos:start="173:69" pos:end="173:76">[<expr pos:start="173:70" pos:end="173:75"><name pos:start="173:70" pos:end="173:70">i</name> <operator pos:start="173:72" pos:end="173:72">+</operator> <literal type="number" pos:start="173:74" pos:end="173:75">36</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:81"><expr pos:start="175:13" pos:end="175:80"><name pos:start="175:13" pos:end="175:41"><name pos:start="175:13" pos:end="175:18">fourxm</name><operator pos:start="175:19" pos:end="175:20">-&gt;</operator><name pos:start="175:21" pos:end="175:26">tracks</name><index pos:start="175:27" pos:end="175:41">[<expr pos:start="175:28" pos:end="175:40"><name pos:start="175:28" pos:end="175:40">current_track</name></expr>]</index></name><operator pos:start="175:42" pos:end="175:42">.</operator><name pos:start="175:43" pos:end="175:53">sample_rate</name> <operator pos:start="175:55" pos:end="175:55">=</operator> <call pos:start="175:57" pos:end="175:80"><name pos:start="175:57" pos:end="175:63">AV_RL32</name><argument_list pos:start="175:64" pos:end="175:80">(<argument pos:start="175:65" pos:end="175:79"><expr pos:start="175:65" pos:end="175:79"><operator pos:start="175:65" pos:end="175:65">&amp;</operator><name pos:start="175:66" pos:end="175:79"><name pos:start="175:66" pos:end="175:71">header</name><index pos:start="175:72" pos:end="175:79">[<expr pos:start="175:73" pos:end="175:78"><name pos:start="175:73" pos:end="175:73">i</name> <operator pos:start="175:75" pos:end="175:75">+</operator> <literal type="number" pos:start="175:77" pos:end="175:78">40</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:74"><expr pos:start="177:13" pos:end="177:73"><name pos:start="177:13" pos:end="177:41"><name pos:start="177:13" pos:end="177:18">fourxm</name><operator pos:start="177:19" pos:end="177:20">-&gt;</operator><name pos:start="177:21" pos:end="177:26">tracks</name><index pos:start="177:27" pos:end="177:41">[<expr pos:start="177:28" pos:end="177:40"><name pos:start="177:28" pos:end="177:40">current_track</name></expr>]</index></name><operator pos:start="177:42" pos:end="177:42">.</operator><name pos:start="177:43" pos:end="177:46">bits</name> <operator pos:start="177:48" pos:end="177:48">=</operator> <call pos:start="177:50" pos:end="177:73"><name pos:start="177:50" pos:end="177:56">AV_RL32</name><argument_list pos:start="177:57" pos:end="177:73">(<argument pos:start="177:58" pos:end="177:72"><expr pos:start="177:58" pos:end="177:72"><operator pos:start="177:58" pos:end="177:58">&amp;</operator><name pos:start="177:59" pos:end="177:72"><name pos:start="177:59" pos:end="177:64">header</name><index pos:start="177:65" pos:end="177:72">[<expr pos:start="177:66" pos:end="177:71"><name pos:start="177:66" pos:end="177:66">i</name> <operator pos:start="177:68" pos:end="177:68">+</operator> <literal type="number" pos:start="177:70" pos:end="177:71">44</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:26"><expr pos:start="179:13" pos:end="179:25"><name pos:start="179:13" pos:end="179:13">i</name> <operator pos:start="179:15" pos:end="179:16">+=</operator> <literal type="number" pos:start="179:18" pos:end="179:20">8</literal> <operator pos:start="179:20" pos:end="179:20">+</operator> <name pos:start="179:22" pos:end="179:25">size</name></expr>;</expr_stmt>



            <comment type="block" pos:start="183:13" pos:end="183:41">/* allocate a new AVStream */</comment>

            <expr_stmt pos:start="185:13" pos:end="185:49"><expr pos:start="185:13" pos:end="185:48"><name pos:start="185:13" pos:end="185:14">st</name> <operator pos:start="185:16" pos:end="185:16">=</operator> <call pos:start="185:18" pos:end="185:48"><name pos:start="185:18" pos:end="185:30">av_new_stream</name><argument_list pos:start="185:31" pos:end="185:48">(<argument pos:start="185:32" pos:end="185:32"><expr pos:start="185:32" pos:end="185:32"><name pos:start="185:32" pos:end="185:32">s</name></expr></argument>, <argument pos:start="185:35" pos:end="185:47"><expr pos:start="185:35" pos:end="185:47"><name pos:start="185:35" pos:end="185:47">current_track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="187:13" pos:end="189:39"><if pos:start="187:13" pos:end="189:39">if <condition pos:start="187:16" pos:end="187:20">(<expr pos:start="187:17" pos:end="187:19"><operator pos:start="187:17" pos:end="187:17">!</operator><name pos:start="187:18" pos:end="187:19">st</name></expr>)</condition><block type="pseudo" pos:start="189:17" pos:end="189:39"><block_content pos:start="189:17" pos:end="189:39">

                <return pos:start="189:17" pos:end="189:39">return <expr pos:start="189:24" pos:end="189:38"><call pos:start="189:24" pos:end="189:38"><name pos:start="189:24" pos:end="189:30">AVERROR</name><argument_list pos:start="189:31" pos:end="189:38">(<argument pos:start="189:32" pos:end="189:37"><expr pos:start="189:32" pos:end="189:37"><name pos:start="189:32" pos:end="189:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="193:13" pos:end="193:82"><expr pos:start="193:13" pos:end="193:81"><call pos:start="193:13" pos:end="193:81"><name pos:start="193:13" pos:end="193:27">av_set_pts_info</name><argument_list pos:start="193:28" pos:end="193:81">(<argument pos:start="193:29" pos:end="193:30"><expr pos:start="193:29" pos:end="193:30"><name pos:start="193:29" pos:end="193:30">st</name></expr></argument>, <argument pos:start="193:33" pos:end="193:34"><expr pos:start="193:33" pos:end="193:34"><literal type="number" pos:start="193:33" pos:end="193:34">60</literal></expr></argument>, <argument pos:start="193:37" pos:end="193:37"><expr pos:start="193:37" pos:end="193:37"><literal type="number" pos:start="193:37" pos:end="193:37">1</literal></expr></argument>, <argument pos:start="193:40" pos:end="193:80"><expr pos:start="193:40" pos:end="193:80"><name pos:start="193:40" pos:end="193:68"><name pos:start="193:40" pos:end="193:45">fourxm</name><operator pos:start="193:46" pos:end="193:47">-&gt;</operator><name pos:start="193:48" pos:end="193:53">tracks</name><index pos:start="193:54" pos:end="193:68">[<expr pos:start="193:55" pos:end="193:67"><name pos:start="193:55" pos:end="193:67">current_track</name></expr>]</index></name><operator pos:start="193:69" pos:end="193:69">.</operator><name pos:start="193:70" pos:end="193:80">sample_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="197:13" pos:end="197:67"><expr pos:start="197:13" pos:end="197:66"><name pos:start="197:13" pos:end="197:41"><name pos:start="197:13" pos:end="197:18">fourxm</name><operator pos:start="197:19" pos:end="197:20">-&gt;</operator><name pos:start="197:21" pos:end="197:26">tracks</name><index pos:start="197:27" pos:end="197:41">[<expr pos:start="197:28" pos:end="197:40"><name pos:start="197:28" pos:end="197:40">current_track</name></expr>]</index></name><operator pos:start="197:42" pos:end="197:42">.</operator><name pos:start="197:43" pos:end="197:54">stream_index</name> <operator pos:start="197:56" pos:end="197:56">=</operator> <name pos:start="197:58" pos:end="197:66"><name pos:start="197:58" pos:end="197:59">st</name><operator pos:start="197:60" pos:end="197:61">-&gt;</operator><name pos:start="197:62" pos:end="197:66">index</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="201:13" pos:end="201:53"><expr pos:start="201:13" pos:end="201:52"><name pos:start="201:13" pos:end="201:33"><name pos:start="201:13" pos:end="201:14">st</name><operator pos:start="201:15" pos:end="201:16">-&gt;</operator><name pos:start="201:17" pos:end="201:21">codec</name><operator pos:start="201:22" pos:end="201:23">-&gt;</operator><name pos:start="201:24" pos:end="201:33">codec_type</name></name> <operator pos:start="201:35" pos:end="201:35">=</operator> <name pos:start="201:37" pos:end="201:52">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:37"><expr pos:start="203:13" pos:end="203:36"><name pos:start="203:13" pos:end="203:32"><name pos:start="203:13" pos:end="203:14">st</name><operator pos:start="203:15" pos:end="203:16">-&gt;</operator><name pos:start="203:17" pos:end="203:21">codec</name><operator pos:start="203:22" pos:end="203:23">-&gt;</operator><name pos:start="203:24" pos:end="203:32">codec_tag</name></name> <operator pos:start="203:34" pos:end="203:34">=</operator> <literal type="number" pos:start="203:36" pos:end="203:36">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:73"><expr pos:start="205:13" pos:end="205:72"><name pos:start="205:13" pos:end="205:31"><name pos:start="205:13" pos:end="205:14">st</name><operator pos:start="205:15" pos:end="205:16">-&gt;</operator><name pos:start="205:17" pos:end="205:21">codec</name><operator pos:start="205:22" pos:end="205:23">-&gt;</operator><name pos:start="205:24" pos:end="205:31">channels</name></name> <operator pos:start="205:33" pos:end="205:33">=</operator> <name pos:start="205:35" pos:end="205:63"><name pos:start="205:35" pos:end="205:40">fourxm</name><operator pos:start="205:41" pos:end="205:42">-&gt;</operator><name pos:start="205:43" pos:end="205:48">tracks</name><index pos:start="205:49" pos:end="205:63">[<expr pos:start="205:50" pos:end="205:62"><name pos:start="205:50" pos:end="205:62">current_track</name></expr>]</index></name><operator pos:start="205:64" pos:end="205:64">.</operator><name pos:start="205:65" pos:end="205:72">channels</name></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:79"><expr pos:start="207:13" pos:end="207:78"><name pos:start="207:13" pos:end="207:34"><name pos:start="207:13" pos:end="207:14">st</name><operator pos:start="207:15" pos:end="207:16">-&gt;</operator><name pos:start="207:17" pos:end="207:21">codec</name><operator pos:start="207:22" pos:end="207:23">-&gt;</operator><name pos:start="207:24" pos:end="207:34">sample_rate</name></name> <operator pos:start="207:36" pos:end="207:36">=</operator> <name pos:start="207:38" pos:end="207:66"><name pos:start="207:38" pos:end="207:43">fourxm</name><operator pos:start="207:44" pos:end="207:45">-&gt;</operator><name pos:start="207:46" pos:end="207:51">tracks</name><index pos:start="207:52" pos:end="207:66">[<expr pos:start="207:53" pos:end="207:65"><name pos:start="207:53" pos:end="207:65">current_track</name></expr>]</index></name><operator pos:start="207:67" pos:end="207:67">.</operator><name pos:start="207:68" pos:end="207:78">sample_rate</name></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:82"><expr pos:start="209:13" pos:end="209:81"><name pos:start="209:13" pos:end="209:44"><name pos:start="209:13" pos:end="209:14">st</name><operator pos:start="209:15" pos:end="209:16">-&gt;</operator><name pos:start="209:17" pos:end="209:21">codec</name><operator pos:start="209:22" pos:end="209:23">-&gt;</operator><name pos:start="209:24" pos:end="209:44">bits_per_coded_sample</name></name> <operator pos:start="209:46" pos:end="209:46">=</operator> <name pos:start="209:48" pos:end="209:76"><name pos:start="209:48" pos:end="209:53">fourxm</name><operator pos:start="209:54" pos:end="209:55">-&gt;</operator><name pos:start="209:56" pos:end="209:61">tracks</name><index pos:start="209:62" pos:end="209:76">[<expr pos:start="209:63" pos:end="209:75"><name pos:start="209:63" pos:end="209:75">current_track</name></expr>]</index></name><operator pos:start="209:77" pos:end="209:77">.</operator><name pos:start="209:78" pos:end="209:81">bits</name></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="213:49"><expr pos:start="211:13" pos:end="213:48"><name pos:start="211:13" pos:end="211:31"><name pos:start="211:13" pos:end="211:14">st</name><operator pos:start="211:15" pos:end="211:16">-&gt;</operator><name pos:start="211:17" pos:end="211:21">codec</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:31">bit_rate</name></name> <operator pos:start="211:33" pos:end="211:33">=</operator> <name pos:start="211:35" pos:end="211:53"><name pos:start="211:35" pos:end="211:36">st</name><operator pos:start="211:37" pos:end="211:38">-&gt;</operator><name pos:start="211:39" pos:end="211:43">codec</name><operator pos:start="211:44" pos:end="211:45">-&gt;</operator><name pos:start="211:46" pos:end="211:53">channels</name></name> <operator pos:start="211:55" pos:end="211:55">*</operator> <name pos:start="211:57" pos:end="211:78"><name pos:start="211:57" pos:end="211:58">st</name><operator pos:start="211:59" pos:end="211:60">-&gt;</operator><name pos:start="211:61" pos:end="211:65">codec</name><operator pos:start="211:66" pos:end="211:67">-&gt;</operator><name pos:start="211:68" pos:end="211:78">sample_rate</name></name> <operator pos:start="211:80" pos:end="211:80">*</operator>

                <name pos:start="213:17" pos:end="213:48"><name pos:start="213:17" pos:end="213:18">st</name><operator pos:start="213:19" pos:end="213:20">-&gt;</operator><name pos:start="213:21" pos:end="213:25">codec</name><operator pos:start="213:26" pos:end="213:27">-&gt;</operator><name pos:start="213:28" pos:end="213:48">bits_per_coded_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:92"><expr pos:start="215:13" pos:end="215:91"><name pos:start="215:13" pos:end="215:34"><name pos:start="215:13" pos:end="215:14">st</name><operator pos:start="215:15" pos:end="215:16">-&gt;</operator><name pos:start="215:17" pos:end="215:21">codec</name><operator pos:start="215:22" pos:end="215:23">-&gt;</operator><name pos:start="215:24" pos:end="215:34">block_align</name></name> <operator pos:start="215:36" pos:end="215:36">=</operator> <name pos:start="215:38" pos:end="215:56"><name pos:start="215:38" pos:end="215:39">st</name><operator pos:start="215:40" pos:end="215:41">-&gt;</operator><name pos:start="215:42" pos:end="215:46">codec</name><operator pos:start="215:47" pos:end="215:48">-&gt;</operator><name pos:start="215:49" pos:end="215:56">channels</name></name> <operator pos:start="215:58" pos:end="215:58">*</operator> <name pos:start="215:60" pos:end="215:91"><name pos:start="215:60" pos:end="215:61">st</name><operator pos:start="215:62" pos:end="215:63">-&gt;</operator><name pos:start="215:64" pos:end="215:68">codec</name><operator pos:start="215:69" pos:end="215:70">-&gt;</operator><name pos:start="215:71" pos:end="215:91">bits_per_coded_sample</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="217:13" pos:end="227:57"><if pos:start="217:13" pos:end="219:57">if <condition pos:start="217:16" pos:end="217:52">(<expr pos:start="217:17" pos:end="217:51"><name pos:start="217:17" pos:end="217:45"><name pos:start="217:17" pos:end="217:22">fourxm</name><operator pos:start="217:23" pos:end="217:24">-&gt;</operator><name pos:start="217:25" pos:end="217:30">tracks</name><index pos:start="217:31" pos:end="217:45">[<expr pos:start="217:32" pos:end="217:44"><name pos:start="217:32" pos:end="217:44">current_track</name></expr>]</index></name><operator pos:start="217:46" pos:end="217:46">.</operator><name pos:start="217:47" pos:end="217:51">adpcm</name></expr>)</condition><block type="pseudo" pos:start="219:17" pos:end="219:57"><block_content pos:start="219:17" pos:end="219:57">

                <expr_stmt pos:start="219:17" pos:end="219:57"><expr pos:start="219:17" pos:end="219:56"><name pos:start="219:17" pos:end="219:35"><name pos:start="219:17" pos:end="219:18">st</name><operator pos:start="219:19" pos:end="219:20">-&gt;</operator><name pos:start="219:21" pos:end="219:25">codec</name><operator pos:start="219:26" pos:end="219:27">-&gt;</operator><name pos:start="219:28" pos:end="219:35">codec_id</name></name> <operator pos:start="219:37" pos:end="219:37">=</operator> <name pos:start="219:39" pos:end="219:56">CODEC_ID_ADPCM_4XM</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="221:13" pos:end="223:54">else if <condition pos:start="221:21" pos:end="221:59">(<expr pos:start="221:22" pos:end="221:58"><name pos:start="221:22" pos:end="221:53"><name pos:start="221:22" pos:end="221:23">st</name><operator pos:start="221:24" pos:end="221:25">-&gt;</operator><name pos:start="221:26" pos:end="221:30">codec</name><operator pos:start="221:31" pos:end="221:32">-&gt;</operator><name pos:start="221:33" pos:end="221:53">bits_per_coded_sample</name></name> <operator pos:start="221:55" pos:end="221:56">==</operator> <literal type="number" pos:start="221:58" pos:end="221:58">8</literal></expr>)</condition><block type="pseudo" pos:start="223:17" pos:end="223:54"><block_content pos:start="223:17" pos:end="223:54">

                <expr_stmt pos:start="223:17" pos:end="223:54"><expr pos:start="223:17" pos:end="223:53"><name pos:start="223:17" pos:end="223:35"><name pos:start="223:17" pos:end="223:18">st</name><operator pos:start="223:19" pos:end="223:20">-&gt;</operator><name pos:start="223:21" pos:end="223:25">codec</name><operator pos:start="223:26" pos:end="223:27">-&gt;</operator><name pos:start="223:28" pos:end="223:35">codec_id</name></name> <operator pos:start="223:37" pos:end="223:37">=</operator> <name pos:start="223:39" pos:end="223:53">CODEC_ID_PCM_U8</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="225:13" pos:end="227:57">else<block type="pseudo" pos:start="227:17" pos:end="227:57"><block_content pos:start="227:17" pos:end="227:57">

                <expr_stmt pos:start="227:17" pos:end="227:57"><expr pos:start="227:17" pos:end="227:56"><name pos:start="227:17" pos:end="227:35"><name pos:start="227:17" pos:end="227:18">st</name><operator pos:start="227:19" pos:end="227:20">-&gt;</operator><name pos:start="227:21" pos:end="227:25">codec</name><operator pos:start="227:26" pos:end="227:27">-&gt;</operator><name pos:start="227:28" pos:end="227:35">codec_id</name></name> <operator pos:start="227:37" pos:end="227:37">=</operator> <name pos:start="227:39" pos:end="227:56">CODEC_ID_PCM_S16LE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="235:5" pos:end="235:20"><expr pos:start="235:5" pos:end="235:19"><call pos:start="235:5" pos:end="235:19"><name pos:start="235:5" pos:end="235:11">av_free</name><argument_list pos:start="235:12" pos:end="235:19">(<argument pos:start="235:13" pos:end="235:18"><expr pos:start="235:13" pos:end="235:18"><name pos:start="235:13" pos:end="235:18">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="239:5" pos:end="239:76">/* skip over the LIST-MOVI chunk (which is where the stream should be */</comment>

    <expr_stmt pos:start="241:5" pos:end="241:22"><expr pos:start="241:5" pos:end="241:21"><call pos:start="241:5" pos:end="241:21"><name pos:start="241:5" pos:end="241:19">GET_LIST_HEADER</name><argument_list pos:start="241:20" pos:end="241:21">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="243:5" pos:end="245:35"><if pos:start="243:5" pos:end="245:35">if <condition pos:start="243:8" pos:end="243:31">(<expr pos:start="243:9" pos:end="243:30"><name pos:start="243:9" pos:end="243:18">fourcc_tag</name> <operator pos:start="243:20" pos:end="243:21">!=</operator> <name pos:start="243:23" pos:end="243:30">MOVI_TAG</name></expr>)</condition><block type="pseudo" pos:start="245:9" pos:end="245:35"><block_content pos:start="245:9" pos:end="245:35">

        <return pos:start="245:9" pos:end="245:35">return <expr pos:start="245:16" pos:end="245:34"><name pos:start="245:16" pos:end="245:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="249:5" pos:end="249:36">/* initialize context members */</comment>

    <expr_stmt pos:start="251:5" pos:end="251:27"><expr pos:start="251:5" pos:end="251:26"><name pos:start="251:5" pos:end="251:21"><name pos:start="251:5" pos:end="251:10">fourxm</name><operator pos:start="251:11" pos:end="251:12">-&gt;</operator><name pos:start="251:13" pos:end="251:21">video_pts</name></name> <operator pos:start="251:23" pos:end="251:23">=</operator> <operator pos:start="251:25" pos:end="251:25">-</operator><literal type="number" pos:start="251:26" pos:end="251:26">1</literal></expr>;</expr_stmt>  <comment type="block" pos:start="251:30" pos:end="251:61">/* first frame will push to 0 */</comment>

    <expr_stmt pos:start="253:5" pos:end="253:26"><expr pos:start="253:5" pos:end="253:25"><name pos:start="253:5" pos:end="253:21"><name pos:start="253:5" pos:end="253:10">fourxm</name><operator pos:start="253:11" pos:end="253:12">-&gt;</operator><name pos:start="253:13" pos:end="253:21">audio_pts</name></name> <operator pos:start="253:23" pos:end="253:23">=</operator> <literal type="number" pos:start="253:25" pos:end="253:25">0</literal></expr>;</expr_stmt>



    <return pos:start="257:5" pos:end="257:13">return <expr pos:start="257:12" pos:end="257:12"><literal type="number" pos:start="257:12" pos:end="257:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
