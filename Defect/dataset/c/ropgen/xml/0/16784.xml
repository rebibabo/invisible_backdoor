<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16784.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:29">ff_thread_release_buffer</name><parameter_list pos:start="1:30" pos:end="1:68">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:67"><decl pos:start="1:54" pos:end="1:67"><type pos:start="1:54" pos:end="1:67"><name pos:start="1:54" pos:end="1:64">ThreadFrame</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:67">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:46">

    <decl_stmt pos:start="5:5" pos:end="5:54"><decl pos:start="5:5" pos:end="5:53"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">PerThreadContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">p</name> <init pos:start="5:25" pos:end="5:53">= <expr pos:start="5:27" pos:end="5:53"><name pos:start="5:27" pos:end="5:53"><name pos:start="5:27" pos:end="5:31">avctx</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:41">internal</name><operator pos:start="5:42" pos:end="5:43">-&gt;</operator><name pos:start="5:44" pos:end="5:53">thread_ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">FrameThreadContext</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:28">fctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">dst</name></decl>, <decl pos:start="9:19" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">tmp</name></decl>;</decl_stmt>

<decl_stmt pos:start="11:1" pos:end="25:78"><decl pos:start="11:1" pos:end="25:77"><type pos:start="11:1" pos:end="13:7"><name pos:start="11:1" pos:end="11:31">FF_DISABLE_DEPRECATION_WARNINGS</name>

    <name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:23">can_direct_free</name> <init pos:start="13:25" pos:end="25:77">= <expr pos:start="13:27" pos:end="25:77"><operator pos:start="13:27" pos:end="13:27">!</operator><operator pos:start="13:28" pos:end="13:28">(</operator><name pos:start="13:29" pos:end="13:53"><name pos:start="13:29" pos:end="13:33">avctx</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:53">active_thread_type</name></name> <operator pos:start="13:55" pos:end="13:55">&amp;</operator> <name pos:start="13:57" pos:end="13:71">FF_THREAD_FRAME</name><operator pos:start="13:72" pos:end="13:72">)</operator> <operator pos:start="13:74" pos:end="13:75">||</operator>

                          <name pos:start="15:27" pos:end="15:54"><name pos:start="15:27" pos:end="15:31">avctx</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:54">thread_safe_callbacks</name></name>                   <operator pos:start="15:74" pos:end="15:75">||</operator>

                          <operator pos:start="17:27" pos:end="20:0">(</operator>

<cpp:if pos:start="19:1" pos:end="19:21">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:21">FF_API_GET_BUFFER</name></expr></cpp:if>

                           <operator pos:start="21:28" pos:end="21:28">!</operator><name pos:start="21:29" pos:end="21:45"><name pos:start="21:29" pos:end="21:33">avctx</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:45">get_buffer</name></name> <operator pos:start="21:47" pos:end="24:0">&amp;&amp;</operator>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

                           <name pos:start="25:28" pos:end="25:45"><name pos:start="25:28" pos:end="25:32">avctx</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:45">get_buffer2</name></name> <operator pos:start="25:47" pos:end="25:48">==</operator> <name pos:start="25:50" pos:end="25:76">avcodec_default_get_buffer2</name><operator pos:start="25:77" pos:end="25:77">)</operator></expr></init></decl>;</decl_stmt>

<macro pos:start="27:1" pos:end="27:30"><name pos:start="27:1" pos:end="27:30">FF_ENABLE_DEPRECATION_WARNINGS</name></macro>



    <if_stmt pos:start="31:5" pos:end="33:15"><if pos:start="31:5" pos:end="33:15">if <condition pos:start="31:8" pos:end="31:23">(<expr pos:start="31:9" pos:end="31:22"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:22"><name pos:start="31:10" pos:end="31:10">f</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:13">f</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:19">data</name><index pos:start="31:20" pos:end="31:22">[<expr pos:start="31:21" pos:end="31:21"><literal type="number" pos:start="31:21" pos:end="31:21">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:15"><block_content pos:start="33:9" pos:end="33:15">

        <return pos:start="33:9" pos:end="33:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="39:83"><if pos:start="37:5" pos:end="39:83">if <condition pos:start="37:8" pos:end="37:40">(<expr pos:start="37:9" pos:end="37:39"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:13">avctx</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:20">debug</name></name> <operator pos:start="37:22" pos:end="37:22">&amp;</operator> <name pos:start="37:24" pos:end="37:39">FF_DEBUG_BUFFERS</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:83"><block_content pos:start="39:9" pos:end="39:83">

        <expr_stmt pos:start="39:9" pos:end="39:83"><expr pos:start="39:9" pos:end="39:82"><call pos:start="39:9" pos:end="39:82"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:82">(<argument pos:start="39:16" pos:end="39:20"><expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:20">avctx</name></expr></argument>, <argument pos:start="39:23" pos:end="39:34"><expr pos:start="39:23" pos:end="39:34"><name pos:start="39:23" pos:end="39:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="39:37" pos:end="39:78"><expr pos:start="39:37" pos:end="39:78"><literal type="string" pos:start="39:37" pos:end="39:78">"thread_release_buffer called on pic %p\n"</literal></expr></argument>, <argument pos:start="39:81" pos:end="39:81"><expr pos:start="39:81" pos:end="39:81"><name pos:start="39:81" pos:end="39:81">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:34"><expr pos:start="43:5" pos:end="43:33"><call pos:start="43:5" pos:end="43:33"><name pos:start="43:5" pos:end="43:19">av_buffer_unref</name><argument_list pos:start="43:20" pos:end="43:33">(<argument pos:start="43:21" pos:end="43:32"><expr pos:start="43:21" pos:end="43:32"><operator pos:start="43:21" pos:end="43:21">&amp;</operator><name pos:start="43:22" pos:end="43:32"><name pos:start="43:22" pos:end="43:22">f</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:32">progress</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:23"><expr pos:start="45:5" pos:end="45:22"><name pos:start="45:5" pos:end="45:12"><name pos:start="45:5" pos:end="45:5">f</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:12">owner</name></name>    <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:22">NULL</name></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:24">(<expr pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:23">can_direct_free</name></expr>)</condition> <block pos:start="49:26" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:15">

        <expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><call pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:22">av_frame_unref</name><argument_list pos:start="51:23" pos:end="51:28">(<argument pos:start="51:24" pos:end="51:27"><expr pos:start="51:24" pos:end="51:27"><name pos:start="51:24" pos:end="51:27"><name pos:start="51:24" pos:end="51:24">f</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:27">f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:21"><expr pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:8">fctx</name> <operator pos:start="59:10" pos:end="59:10">=</operator> <name pos:start="59:12" pos:end="59:20"><name pos:start="59:12" pos:end="59:12">p</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:20">parent</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:44"><expr pos:start="61:5" pos:end="61:43"><call pos:start="61:5" pos:end="61:43"><name pos:start="61:5" pos:end="61:22">pthread_mutex_lock</name><argument_list pos:start="61:23" pos:end="61:43">(<argument pos:start="61:24" pos:end="61:42"><expr pos:start="61:24" pos:end="61:42"><operator pos:start="61:24" pos:end="61:24">&amp;</operator><name pos:start="61:25" pos:end="61:42"><name pos:start="61:25" pos:end="61:28">fctx</name><operator pos:start="61:29" pos:end="61:30">-&gt;</operator><name pos:start="61:31" pos:end="61:42">buffer_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="65:5" pos:end="67:18"><if pos:start="65:5" pos:end="67:18">if <condition pos:start="65:8" pos:end="65:78">(<expr pos:start="65:9" pos:end="65:77"><name pos:start="65:9" pos:end="65:31"><name pos:start="65:9" pos:end="65:9">p</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:31">num_released_buffers</name></name> <operator pos:start="65:33" pos:end="65:33">+</operator> <literal type="number" pos:start="65:35" pos:end="65:35">1</literal> <operator pos:start="65:37" pos:end="65:38">&gt;=</operator> <name pos:start="65:40" pos:end="65:46">INT_MAX</name> <operator pos:start="65:48" pos:end="65:48">/</operator> <sizeof pos:start="65:50" pos:end="65:77">sizeof<argument_list pos:start="65:56" pos:end="65:77">(<argument pos:start="65:57" pos:end="65:76"><expr pos:start="65:57" pos:end="65:76"><operator pos:start="65:57" pos:end="65:57">*</operator><name pos:start="65:58" pos:end="65:76"><name pos:start="65:58" pos:end="65:58">p</name><operator pos:start="65:59" pos:end="65:60">-&gt;</operator><name pos:start="65:61" pos:end="65:76">released_buffers</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:18"><block_content pos:start="67:9" pos:end="67:18">

        <goto pos:start="67:9" pos:end="67:18">goto <name pos:start="67:14" pos:end="67:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="73:56"><expr pos:start="69:5" pos:end="73:55"><name pos:start="69:5" pos:end="69:7">tmp</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <call pos:start="69:11" pos:end="73:55"><name pos:start="69:11" pos:end="69:25">av_fast_realloc</name><argument_list pos:start="69:26" pos:end="73:55">(<argument pos:start="69:27" pos:end="69:45"><expr pos:start="69:27" pos:end="69:45"><name pos:start="69:27" pos:end="69:45"><name pos:start="69:27" pos:end="69:27">p</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:45">released_buffers</name></name></expr></argument>, <argument pos:start="69:48" pos:end="69:77"><expr pos:start="69:48" pos:end="69:77"><operator pos:start="69:48" pos:end="69:48">&amp;</operator><name pos:start="69:49" pos:end="69:77"><name pos:start="69:49" pos:end="69:49">p</name><operator pos:start="69:50" pos:end="69:51">-&gt;</operator><name pos:start="69:52" pos:end="69:77">released_buffers_allocated</name></name></expr></argument>,

                          <argument pos:start="71:27" pos:end="73:54"><expr pos:start="71:27" pos:end="73:54"><operator pos:start="71:27" pos:end="71:27">(</operator><name pos:start="71:28" pos:end="71:50"><name pos:start="71:28" pos:end="71:28">p</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:50">num_released_buffers</name></name> <operator pos:start="71:52" pos:end="71:52">+</operator> <literal type="number" pos:start="71:54" pos:end="71:54">1</literal><operator pos:start="71:55" pos:end="71:55">)</operator> <operator pos:start="71:57" pos:end="71:57">*</operator>

                          <sizeof pos:start="73:27" pos:end="73:54">sizeof<argument_list pos:start="73:33" pos:end="73:54">(<argument pos:start="73:34" pos:end="73:53"><expr pos:start="73:34" pos:end="73:53"><operator pos:start="73:34" pos:end="73:34">*</operator><name pos:start="73:35" pos:end="73:53"><name pos:start="73:35" pos:end="73:35">p</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:53">released_buffers</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="77:18"><if pos:start="75:5" pos:end="77:18">if <condition pos:start="75:8" pos:end="75:13">(<expr pos:start="75:9" pos:end="75:12"><operator pos:start="75:9" pos:end="75:9">!</operator><name pos:start="75:10" pos:end="75:12">tmp</name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:18"><block_content pos:start="77:9" pos:end="77:18">

        <goto pos:start="77:9" pos:end="77:18">goto <name pos:start="77:14" pos:end="77:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:30"><expr pos:start="79:5" pos:end="79:29"><name pos:start="79:5" pos:end="79:23"><name pos:start="79:5" pos:end="79:5">p</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:23">released_buffers</name></name> <operator pos:start="79:25" pos:end="79:25">=</operator> <name pos:start="79:27" pos:end="79:29">tmp</name></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:56"><expr pos:start="83:5" pos:end="83:55"><name pos:start="83:5" pos:end="83:7">dst</name> <operator pos:start="83:9" pos:end="83:9">=</operator> <operator pos:start="83:11" pos:end="83:11">&amp;</operator><name pos:start="83:12" pos:end="83:55"><name pos:start="83:12" pos:end="83:12">p</name><operator pos:start="83:13" pos:end="83:14">-&gt;</operator><name pos:start="83:15" pos:end="83:30">released_buffers</name><index pos:start="83:31" pos:end="83:55">[<expr pos:start="83:32" pos:end="83:54"><name pos:start="83:32" pos:end="83:54"><name pos:start="83:32" pos:end="83:32">p</name><operator pos:start="83:33" pos:end="83:34">-&gt;</operator><name pos:start="83:35" pos:end="83:54">num_released_buffers</name></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:33"><expr pos:start="85:5" pos:end="85:32"><call pos:start="85:5" pos:end="85:32"><name pos:start="85:5" pos:end="85:21">av_frame_move_ref</name><argument_list pos:start="85:22" pos:end="85:32">(<argument pos:start="85:23" pos:end="85:25"><expr pos:start="85:23" pos:end="85:25"><name pos:start="85:23" pos:end="85:25">dst</name></expr></argument>, <argument pos:start="85:28" pos:end="85:31"><expr pos:start="85:28" pos:end="85:31"><name pos:start="85:28" pos:end="85:31"><name pos:start="85:28" pos:end="85:28">f</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:31">f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:30"><expr pos:start="89:5" pos:end="89:29"><name pos:start="89:5" pos:end="89:27"><name pos:start="89:5" pos:end="89:5">p</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:27">num_released_buffers</name></name><operator pos:start="89:28" pos:end="89:29">++</operator></expr>;</expr_stmt>



<label pos:start="93:1" pos:end="93:5"><name pos:start="93:1" pos:end="93:4">fail</name>:</label>

    <expr_stmt pos:start="95:5" pos:end="95:46"><expr pos:start="95:5" pos:end="95:45"><call pos:start="95:5" pos:end="95:45"><name pos:start="95:5" pos:end="95:24">pthread_mutex_unlock</name><argument_list pos:start="95:25" pos:end="95:45">(<argument pos:start="95:26" pos:end="95:44"><expr pos:start="95:26" pos:end="95:44"><operator pos:start="95:26" pos:end="95:26">&amp;</operator><name pos:start="95:27" pos:end="95:44"><name pos:start="95:27" pos:end="95:30">fctx</name><operator pos:start="95:31" pos:end="95:32">-&gt;</operator><name pos:start="95:33" pos:end="95:44">buffer_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
