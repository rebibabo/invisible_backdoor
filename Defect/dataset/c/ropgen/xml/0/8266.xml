<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8266.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:62"><name pos:start="1:1" pos:end="1:17">opts_start_struct</name><argument_list pos:start="1:18" pos:end="3:62">(<argument pos:start="1:19" pos:end="1:28">Visitor *v</argument>, <argument pos:start="1:31" pos:end="1:40">void **obj</argument>, <argument pos:start="1:43" pos:end="1:58">const char *kind</argument>,

                  <argument pos:start="3:19" pos:end="3:34">const char *name</argument>, <argument pos:start="3:37" pos:end="3:47">size_t size</argument>, <argument pos:start="3:50" pos:end="3:61">Error **errp</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="55:1">{<block_content pos:start="7:5" pos:end="53:5">

    <decl_stmt pos:start="7:5" pos:end="7:57"><decl pos:start="7:5" pos:end="7:56"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">OptsVisitor</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">ov</name> <init pos:start="7:21" pos:end="7:56">= <expr pos:start="7:23" pos:end="7:56"><call pos:start="7:23" pos:end="7:56"><name pos:start="7:23" pos:end="7:31">DO_UPCAST</name><argument_list pos:start="7:32" pos:end="7:56">(<argument pos:start="7:33" pos:end="7:43"><expr pos:start="7:33" pos:end="7:43"><name pos:start="7:33" pos:end="7:43">OptsVisitor</name></expr></argument>, <argument pos:start="7:46" pos:end="7:52"><expr pos:start="7:46" pos:end="7:52"><name pos:start="7:46" pos:end="7:52">visitor</name></expr></argument>, <argument pos:start="7:55" pos:end="7:55"><expr pos:start="7:55" pos:end="7:55"><name pos:start="7:55" pos:end="7:55">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">QemuOpt</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">opt</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:42"><expr pos:start="13:5" pos:end="13:41"><operator pos:start="13:5" pos:end="13:5">*</operator><name pos:start="13:6" pos:end="13:8">obj</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:41"><name pos:start="13:12" pos:end="13:20">g_malloc0</name><argument_list pos:start="13:21" pos:end="13:41">(<argument pos:start="13:22" pos:end="13:40"><expr pos:start="13:22" pos:end="13:40"><ternary pos:start="13:22" pos:end="13:40"><condition pos:start="13:22" pos:end="13:31"><expr pos:start="13:22" pos:end="13:29"><name pos:start="13:22" pos:end="13:25">size</name> <operator pos:start="13:27" pos:end="13:27">&gt;</operator> <literal type="number" pos:start="13:29" pos:end="13:29">0</literal></expr> ?</condition><then pos:start="13:33" pos:end="13:36"> <expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">size</name></expr> </then><else pos:start="13:38" pos:end="13:40">: <expr pos:start="13:40" pos:end="13:40"><literal type="number" pos:start="13:40" pos:end="13:40">1</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:24">(<expr pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:10">ov</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:17">depth</name></name><operator pos:start="15:18" pos:end="15:19">++</operator> <operator pos:start="15:21" pos:end="15:21">&gt;</operator> <literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr>)</condition> <block pos:start="15:26" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="25:70"><expr pos:start="23:5" pos:end="25:69"><name pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:6">ov</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:24">unprocessed_opts</name></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <call pos:start="23:28" pos:end="25:69"><name pos:start="23:28" pos:end="23:48">g_hash_table_new_full</name><argument_list pos:start="23:49" pos:end="25:69">(<argument pos:start="23:50" pos:end="23:60"><expr pos:start="23:50" pos:end="23:60"><operator pos:start="23:50" pos:end="23:50">&amp;</operator><name pos:start="23:51" pos:end="23:60">g_str_hash</name></expr></argument>, <argument pos:start="23:63" pos:end="23:74"><expr pos:start="23:63" pos:end="23:74"><operator pos:start="23:63" pos:end="23:63">&amp;</operator><name pos:start="23:64" pos:end="23:74">g_str_equal</name></expr></argument>,

                                                 <argument pos:start="25:50" pos:end="25:53"><expr pos:start="25:50" pos:end="25:53"><name pos:start="25:50" pos:end="25:53">NULL</name></expr></argument>, <argument pos:start="25:56" pos:end="25:68"><expr pos:start="25:56" pos:end="25:68"><operator pos:start="25:56" pos:end="25:56">&amp;</operator><name pos:start="25:57" pos:end="25:68">destroy_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="27:5" pos:end="27:51"><name pos:start="27:5" pos:end="27:18">QTAILQ_FOREACH</name><argument_list pos:start="27:19" pos:end="27:51">(<argument pos:start="27:20" pos:end="27:22">opt</argument>, <argument pos:start="27:25" pos:end="27:44">&amp;ov-&gt;opts_root-&gt;head</argument>, <argument pos:start="27:47" pos:end="27:50">next</argument>)</argument_list></macro> <block pos:start="27:53" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:55">

        <comment type="block" pos:start="29:9" pos:end="29:55">/* ensured by qemu-option.c::opts_do_parse() */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:45"><expr pos:start="31:9" pos:end="31:44"><call pos:start="31:9" pos:end="31:44"><name pos:start="31:9" pos:end="31:14">assert</name><argument_list pos:start="31:15" pos:end="31:44">(<argument pos:start="31:16" pos:end="31:43"><expr pos:start="31:16" pos:end="31:43"><call pos:start="31:16" pos:end="31:38"><name pos:start="31:16" pos:end="31:21">strcmp</name><argument_list pos:start="31:22" pos:end="31:38">(<argument pos:start="31:23" pos:end="31:31"><expr pos:start="31:23" pos:end="31:31"><name pos:start="31:23" pos:end="31:31"><name pos:start="31:23" pos:end="31:25">opt</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:31">name</name></name></expr></argument>, <argument pos:start="31:34" pos:end="31:37"><expr pos:start="31:34" pos:end="31:37"><literal type="string" pos:start="31:34" pos:end="31:37">"id"</literal></expr></argument>)</argument_list></call> <operator pos:start="31:40" pos:end="31:41">!=</operator> <literal type="number" pos:start="31:43" pos:end="31:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:55"><expr pos:start="35:9" pos:end="35:54"><call pos:start="35:9" pos:end="35:54"><name pos:start="35:9" pos:end="35:27">opts_visitor_insert</name><argument_list pos:start="35:28" pos:end="35:54">(<argument pos:start="35:29" pos:end="35:48"><expr pos:start="35:29" pos:end="35:48"><name pos:start="35:29" pos:end="35:48"><name pos:start="35:29" pos:end="35:30">ov</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:48">unprocessed_opts</name></name></expr></argument>, <argument pos:start="35:51" pos:end="35:53"><expr pos:start="35:51" pos:end="35:53"><name pos:start="35:51" pos:end="35:53">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <if_stmt pos:start="41:5" pos:end="53:5"><if pos:start="41:5" pos:end="53:5">if <condition pos:start="41:8" pos:end="41:34">(<expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:10">ov</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:21">opts_root</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:25">id</name></name> <operator pos:start="41:27" pos:end="41:28">!=</operator> <name pos:start="41:30" pos:end="41:33">NULL</name></expr>)</condition> <block pos:start="41:36" pos:end="53:5">{<block_content pos:start="43:9" pos:end="51:67">

        <expr_stmt pos:start="43:9" pos:end="43:61"><expr pos:start="43:9" pos:end="43:60"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:10">ov</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:23">fake_id_opt</name></name> <operator pos:start="43:25" pos:end="43:25">=</operator> <call pos:start="43:27" pos:end="43:60"><name pos:start="43:27" pos:end="43:35">g_malloc0</name><argument_list pos:start="43:36" pos:end="43:60">(<argument pos:start="43:37" pos:end="43:59"><expr pos:start="43:37" pos:end="43:59"><sizeof pos:start="43:37" pos:end="43:42">sizeof <name/></sizeof>*<name pos:start="43:45" pos:end="43:59"><name pos:start="43:45" pos:end="43:46">ov</name><operator pos:start="43:47" pos:end="43:48">-&gt;</operator><name pos:start="43:49" pos:end="43:59">fake_id_opt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:37"><expr pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:10">ov</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:23">fake_id_opt</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:29">name</name></name> <operator pos:start="47:31" pos:end="47:31">=</operator> <literal type="string" pos:start="47:33" pos:end="47:36">"id"</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:49"><expr pos:start="49:9" pos:end="49:48"><name pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:10">ov</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:23">fake_id_opt</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:28">str</name></name> <operator pos:start="49:30" pos:end="49:30">=</operator> <name pos:start="49:32" pos:end="49:48"><name pos:start="49:32" pos:end="49:33">ov</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:44">opts_root</name><operator pos:start="49:45" pos:end="49:46">-&gt;</operator><name pos:start="49:47" pos:end="49:48">id</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:67"><expr pos:start="51:9" pos:end="51:66"><call pos:start="51:9" pos:end="51:66"><name pos:start="51:9" pos:end="51:27">opts_visitor_insert</name><argument_list pos:start="51:28" pos:end="51:66">(<argument pos:start="51:29" pos:end="51:48"><expr pos:start="51:29" pos:end="51:48"><name pos:start="51:29" pos:end="51:48"><name pos:start="51:29" pos:end="51:30">ov</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:48">unprocessed_opts</name></name></expr></argument>, <argument pos:start="51:51" pos:end="51:65"><expr pos:start="51:51" pos:end="51:65"><name pos:start="51:51" pos:end="51:65"><name pos:start="51:51" pos:end="51:52">ov</name><operator pos:start="51:53" pos:end="51:54">-&gt;</operator><name pos:start="51:55" pos:end="51:65">fake_id_opt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block>
</unit>
