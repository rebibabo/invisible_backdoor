<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11901.c" pos:tabs="8"><function pos:start="1:1" pos:end="371:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">hls_write_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="371:1">{<block_content pos:start="5:5" pos:end="369:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">HLSContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">hls</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:11">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:23">pattern</name> <init pos:start="11:25" pos:end="11:33">= <expr pos:start="11:27" pos:end="11:33"><literal type="string" pos:start="11:27" pos:end="11:33">"%d.ts"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:49"><decl pos:start="13:5" pos:end="13:48"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:37">pattern_localtime_fmt</name> <init pos:start="13:39" pos:end="13:48">= <expr pos:start="13:41" pos:end="13:48"><literal type="string" pos:start="13:41" pos:end="13:48">"-%s.ts"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:39"><decl pos:start="15:5" pos:end="15:38"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:27">vtt_pattern</name> <init pos:start="15:29" pos:end="15:38">= <expr pos:start="15:31" pos:end="15:38"><literal type="string" pos:start="15:31" pos:end="15:38">"%d.vtt"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:16">AVDictionary</name> <modifier pos:start="17:18" pos:end="17:18">*</modifier></type><name pos:start="17:19" pos:end="17:25">options</name> <init pos:start="17:27" pos:end="17:32">= <expr pos:start="17:29" pos:end="17:32"><name pos:start="17:29" pos:end="17:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:21">basename_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:25">vtt_basename_size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:46"><expr pos:start="25:5" pos:end="25:45"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:7">hls</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:17">sequence</name></name>       <operator pos:start="25:25" pos:end="25:25">=</operator> <name pos:start="25:27" pos:end="25:45"><name pos:start="25:27" pos:end="25:29">hls</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:45">start_sequence</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:87"><expr pos:start="27:5" pos:end="27:86"><name pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:7">hls</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:23">recording_time</name></name> <operator pos:start="27:25" pos:end="27:25">=</operator> <operator pos:start="27:27" pos:end="27:27">(</operator><ternary pos:start="27:28" pos:end="27:70"><condition pos:start="27:28" pos:end="27:43"><expr pos:start="27:28" pos:end="27:41"><name pos:start="27:28" pos:end="27:41"><name pos:start="27:28" pos:end="27:30">hls</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:41">init_time</name></name></expr> ?</condition><then pos:start="27:45" pos:end="27:58"> <expr pos:start="27:45" pos:end="27:58"><name pos:start="27:45" pos:end="27:58"><name pos:start="27:45" pos:end="27:47">hls</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:58">init_time</name></name></expr> </then><else pos:start="27:60" pos:end="27:70">: <expr pos:start="27:62" pos:end="27:70"><name pos:start="27:62" pos:end="27:70"><name pos:start="27:62" pos:end="27:64">hls</name><operator pos:start="27:65" pos:end="27:66">-&gt;</operator><name pos:start="27:67" pos:end="27:70">time</name></name></expr></else></ternary><operator pos:start="27:71" pos:end="27:71">)</operator> <operator pos:start="27:73" pos:end="27:73">*</operator> <name pos:start="27:75" pos:end="27:86">AV_TIME_BASE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:41"><expr pos:start="29:5" pos:end="29:40"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:7">hls</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:18">start_pts</name></name>      <operator pos:start="29:25" pos:end="29:25">=</operator> <name pos:start="29:27" pos:end="29:40">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:43">(<expr pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:11">hls</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:18">flags</name></name> <operator pos:start="33:20" pos:end="33:20">&amp;</operator> <name pos:start="33:22" pos:end="33:42">HLS_PROGRAM_DATE_TIME</name></expr>)</condition> <block pos:start="33:45" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:43">

        <decl_stmt pos:start="35:9" pos:end="35:20"><decl pos:start="35:9" pos:end="35:19"><type pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:14">time_t</name></type> <name pos:start="35:16" pos:end="35:19">now0</name></decl>;</decl_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:20"><expr pos:start="37:9" pos:end="37:19"><call pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:12">time</name><argument_list pos:start="37:13" pos:end="37:19">(<argument pos:start="37:14" pos:end="37:18"><expr pos:start="37:14" pos:end="37:18"><operator pos:start="37:14" pos:end="37:14">&amp;</operator><name pos:start="37:15" pos:end="37:18">now0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:43"><expr pos:start="39:9" pos:end="39:42"><name pos:start="39:9" pos:end="39:35"><name pos:start="39:9" pos:end="39:11">hls</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:35">initial_prog_date_time</name></name> <operator pos:start="39:37" pos:end="39:37">=</operator> <name pos:start="39:39" pos:end="39:42">now0</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="57:5"><if pos:start="45:5" pos:end="57:5">if <condition pos:start="45:8" pos:end="45:32">(<expr pos:start="45:9" pos:end="45:31"><name pos:start="45:9" pos:end="45:31"><name pos:start="45:9" pos:end="45:11">hls</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:31">format_options_str</name></name></expr>)</condition> <block pos:start="45:34" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:9">

        <expr_stmt pos:start="47:9" pos:end="47:95"><expr pos:start="47:9" pos:end="47:94"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:94"><name pos:start="47:15" pos:end="47:34">av_dict_parse_string</name><argument_list pos:start="47:35" pos:end="47:94">(<argument pos:start="47:36" pos:end="47:55"><expr pos:start="47:36" pos:end="47:55"><operator pos:start="47:36" pos:end="47:36">&amp;</operator><name pos:start="47:37" pos:end="47:55"><name pos:start="47:37" pos:end="47:39">hls</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:55">format_options</name></name></expr></argument>, <argument pos:start="47:58" pos:end="47:80"><expr pos:start="47:58" pos:end="47:80"><name pos:start="47:58" pos:end="47:80"><name pos:start="47:58" pos:end="47:60">hls</name><operator pos:start="47:61" pos:end="47:62">-&gt;</operator><name pos:start="47:63" pos:end="47:80">format_options_str</name></name></expr></argument>, <argument pos:start="47:83" pos:end="47:85"><expr pos:start="47:83" pos:end="47:85"><literal type="string" pos:start="47:83" pos:end="47:85">"="</literal></expr></argument>, <argument pos:start="47:88" pos:end="47:90"><expr pos:start="47:88" pos:end="47:90"><literal type="string" pos:start="47:88" pos:end="47:90">":"</literal></expr></argument>, <argument pos:start="47:93" pos:end="47:93"><expr pos:start="47:93" pos:end="47:93"><literal type="number" pos:start="47:93" pos:end="47:93">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:20">(<expr pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">&lt;</operator> <literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>)</condition> <block pos:start="49:22" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:22">

            <expr_stmt pos:start="51:13" pos:end="51:107"><expr pos:start="51:13" pos:end="51:106"><call pos:start="51:13" pos:end="51:106"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="51:106">(<argument pos:start="51:20" pos:end="51:20"><expr pos:start="51:20" pos:end="51:20"><name pos:start="51:20" pos:end="51:20">s</name></expr></argument>, <argument pos:start="51:23" pos:end="51:34"><expr pos:start="51:23" pos:end="51:34"><name pos:start="51:23" pos:end="51:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:37" pos:end="51:80"><expr pos:start="51:37" pos:end="51:80"><literal type="string" pos:start="51:37" pos:end="51:80">"Could not parse format options list '%s'\n"</literal></expr></argument>, <argument pos:start="51:83" pos:end="51:105"><expr pos:start="51:83" pos:end="51:105"><name pos:start="51:83" pos:end="51:105"><name pos:start="51:83" pos:end="51:85">hls</name><operator pos:start="51:86" pos:end="51:87">-&gt;</operator><name pos:start="51:88" pos:end="51:105">format_options_str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="53:13" pos:end="53:22">goto <name pos:start="53:18" pos:end="53:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="61:5" pos:end="71:5">for <control pos:start="61:9" pos:end="61:39">(<init pos:start="61:10" pos:end="61:15"><expr pos:start="61:10" pos:end="61:14"><name pos:start="61:10" pos:end="61:10">i</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <literal type="number" pos:start="61:14" pos:end="61:14">0</literal></expr>;</init> <condition pos:start="61:17" pos:end="61:34"><expr pos:start="61:17" pos:end="61:33"><name pos:start="61:17" pos:end="61:17">i</name> <operator pos:start="61:19" pos:end="61:19">&lt;</operator> <name pos:start="61:21" pos:end="61:33"><name pos:start="61:21" pos:end="61:21">s</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:33">nb_streams</name></name></expr>;</condition> <incr pos:start="61:36" pos:end="61:38"><expr pos:start="61:36" pos:end="61:38"><name pos:start="61:36" pos:end="61:36">i</name><operator pos:start="61:37" pos:end="61:38">++</operator></expr></incr>)</control> <block pos:start="61:41" pos:end="71:5">{<block_content pos:start="63:9" pos:end="69:73">

        <expr_stmt pos:start="63:9" pos:end="65:70"><expr pos:start="63:9" pos:end="65:69"><name pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:11">hls</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:22">has_video</name></name> <operator pos:start="63:24" pos:end="63:25">+=</operator>

            <name pos:start="65:13" pos:end="65:25"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:22">streams</name><index pos:start="65:23" pos:end="65:25">[<expr pos:start="65:24" pos:end="65:24"><name pos:start="65:24" pos:end="65:24">i</name></expr>]</index></name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:47"><name pos:start="65:28" pos:end="65:35">codecpar</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:47">codec_type</name></name> <operator pos:start="65:49" pos:end="65:50">==</operator> <name pos:start="65:52" pos:end="65:69">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="69:73"><expr pos:start="67:9" pos:end="69:72"><name pos:start="67:9" pos:end="67:25"><name pos:start="67:9" pos:end="67:11">hls</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:25">has_subtitle</name></name> <operator pos:start="67:27" pos:end="67:28">+=</operator>

            <name pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:22">streams</name><index pos:start="69:23" pos:end="69:25">[<expr pos:start="69:24" pos:end="69:24"><name pos:start="69:24" pos:end="69:24">i</name></expr>]</index></name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:47"><name pos:start="69:28" pos:end="69:35">codecpar</name><operator pos:start="69:36" pos:end="69:37">-&gt;</operator><name pos:start="69:38" pos:end="69:47">codec_type</name></name> <operator pos:start="69:49" pos:end="69:50">==</operator> <name pos:start="69:52" pos:end="69:72">AVMEDIA_TYPE_SUBTITLE</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="75:5" pos:end="81:47"><if pos:start="75:5" pos:end="81:47">if <condition pos:start="75:8" pos:end="75:27">(<expr pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:11">hls</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:22">has_video</name></name> <operator pos:start="75:24" pos:end="75:24">&gt;</operator> <literal type="number" pos:start="75:26" pos:end="75:26">1</literal></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="81:47"><block_content pos:start="77:9" pos:end="81:47">

        <expr_stmt pos:start="77:9" pos:end="81:47"><expr pos:start="77:9" pos:end="81:46"><call pos:start="77:9" pos:end="81:46"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="81:46">(<argument pos:start="77:16" pos:end="77:16"><expr pos:start="77:16" pos:end="77:16"><name pos:start="77:16" pos:end="77:16">s</name></expr></argument>, <argument pos:start="77:19" pos:end="77:32"><expr pos:start="77:19" pos:end="77:32"><name pos:start="77:19" pos:end="77:32">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="79:16" pos:end="81:45"><expr pos:start="79:16" pos:end="81:45"><literal type="string" pos:start="79:16" pos:end="79:58">"More than a single video stream present, "</literal>

               <literal type="string" pos:start="81:16" pos:end="81:45">"expect issues decoding it.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:57"><expr pos:start="85:5" pos:end="85:56"><name pos:start="85:5" pos:end="85:16"><name pos:start="85:5" pos:end="85:7">hls</name><operator pos:start="85:8" pos:end="85:9">-&gt;</operator><name pos:start="85:10" pos:end="85:16">oformat</name></name> <operator pos:start="85:18" pos:end="85:18">=</operator> <call pos:start="85:20" pos:end="85:56"><name pos:start="85:20" pos:end="85:34">av_guess_format</name><argument_list pos:start="85:35" pos:end="85:56">(<argument pos:start="85:36" pos:end="85:43"><expr pos:start="85:36" pos:end="85:43"><literal type="string" pos:start="85:36" pos:end="85:43">"mpegts"</literal></expr></argument>, <argument pos:start="85:46" pos:end="85:49"><expr pos:start="85:46" pos:end="85:49"><name pos:start="85:46" pos:end="85:49">NULL</name></expr></argument>, <argument pos:start="85:52" pos:end="85:55"><expr pos:start="85:52" pos:end="85:55"><name pos:start="85:52" pos:end="85:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="89:5" pos:end="95:5"><if pos:start="89:5" pos:end="95:5">if <condition pos:start="89:8" pos:end="89:22">(<expr pos:start="89:9" pos:end="89:21"><operator pos:start="89:9" pos:end="89:9">!</operator><name pos:start="89:10" pos:end="89:21"><name pos:start="89:10" pos:end="89:12">hls</name><operator pos:start="89:13" pos:end="89:14">-&gt;</operator><name pos:start="89:15" pos:end="89:21">oformat</name></name></expr>)</condition> <block pos:start="89:24" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:18">

        <expr_stmt pos:start="91:9" pos:end="91:38"><expr pos:start="91:9" pos:end="91:37"><name pos:start="91:9" pos:end="91:11">ret</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <name pos:start="91:15" pos:end="91:37">AVERROR_MUXER_NOT_FOUND</name></expr>;</expr_stmt>

        <goto pos:start="93:9" pos:end="93:18">goto <name pos:start="93:14" pos:end="93:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="111:5"><if pos:start="99:5" pos:end="111:5">if<condition pos:start="99:7" pos:end="99:25">(<expr pos:start="99:8" pos:end="99:24"><name pos:start="99:8" pos:end="99:24"><name pos:start="99:8" pos:end="99:10">hls</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:24">has_subtitle</name></name></expr>)</condition> <block pos:start="99:27" pos:end="111:5">{<block_content pos:start="101:9" pos:end="109:9">

        <expr_stmt pos:start="101:9" pos:end="101:65"><expr pos:start="101:9" pos:end="101:64"><name pos:start="101:9" pos:end="101:24"><name pos:start="101:9" pos:end="101:11">hls</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:24">vtt_oformat</name></name> <operator pos:start="101:26" pos:end="101:26">=</operator> <call pos:start="101:28" pos:end="101:64"><name pos:start="101:28" pos:end="101:42">av_guess_format</name><argument_list pos:start="101:43" pos:end="101:64">(<argument pos:start="101:44" pos:end="101:51"><expr pos:start="101:44" pos:end="101:51"><literal type="string" pos:start="101:44" pos:end="101:51">"webvtt"</literal></expr></argument>, <argument pos:start="101:54" pos:end="101:57"><expr pos:start="101:54" pos:end="101:57"><name pos:start="101:54" pos:end="101:57">NULL</name></expr></argument>, <argument pos:start="101:60" pos:end="101:63"><expr pos:start="101:60" pos:end="101:63"><name pos:start="101:60" pos:end="101:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="109:9"><if pos:start="103:9" pos:end="109:9">if <condition pos:start="103:12" pos:end="103:26">(<expr pos:start="103:13" pos:end="103:25"><operator pos:start="103:13" pos:end="103:13">!</operator><name pos:start="103:14" pos:end="103:25"><name pos:start="103:14" pos:end="103:16">hls</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:25">oformat</name></name></expr>)</condition> <block pos:start="103:28" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:22">

            <expr_stmt pos:start="105:13" pos:end="105:42"><expr pos:start="105:13" pos:end="105:41"><name pos:start="105:13" pos:end="105:15">ret</name> <operator pos:start="105:17" pos:end="105:17">=</operator> <name pos:start="105:19" pos:end="105:41">AVERROR_MUXER_NOT_FOUND</name></expr>;</expr_stmt>

            <goto pos:start="107:13" pos:end="107:22">goto <name pos:start="107:18" pos:end="107:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="115:5" pos:end="177:5"><if pos:start="115:5" pos:end="127:5">if <condition pos:start="115:8" pos:end="115:30">(<expr pos:start="115:9" pos:end="115:29"><name pos:start="115:9" pos:end="115:29"><name pos:start="115:9" pos:end="115:11">hls</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:29">segment_filename</name></name></expr>)</condition> <block pos:start="115:32" pos:end="127:5">{<block_content pos:start="117:9" pos:end="125:9">

        <expr_stmt pos:start="117:9" pos:end="117:57"><expr pos:start="117:9" pos:end="117:56"><name pos:start="117:9" pos:end="117:21"><name pos:start="117:9" pos:end="117:11">hls</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:21">basename</name></name> <operator pos:start="117:23" pos:end="117:23">=</operator> <call pos:start="117:25" pos:end="117:56"><name pos:start="117:25" pos:end="117:33">av_strdup</name><argument_list pos:start="117:34" pos:end="117:56">(<argument pos:start="117:35" pos:end="117:55"><expr pos:start="117:35" pos:end="117:55"><name pos:start="117:35" pos:end="117:55"><name pos:start="117:35" pos:end="117:37">hls</name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:55">segment_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="119:9" pos:end="125:9"><if pos:start="119:9" pos:end="125:9">if <condition pos:start="119:12" pos:end="119:27">(<expr pos:start="119:13" pos:end="119:26"><operator pos:start="119:13" pos:end="119:13">!</operator><name pos:start="119:14" pos:end="119:26"><name pos:start="119:14" pos:end="119:16">hls</name><operator pos:start="119:17" pos:end="119:18">-&gt;</operator><name pos:start="119:19" pos:end="119:26">basename</name></name></expr>)</condition> <block pos:start="119:29" pos:end="125:9">{<block_content pos:start="121:13" pos:end="123:22">

            <expr_stmt pos:start="121:13" pos:end="121:34"><expr pos:start="121:13" pos:end="121:33"><name pos:start="121:13" pos:end="121:15">ret</name> <operator pos:start="121:17" pos:end="121:17">=</operator> <call pos:start="121:19" pos:end="121:33"><name pos:start="121:19" pos:end="121:25">AVERROR</name><argument_list pos:start="121:26" pos:end="121:33">(<argument pos:start="121:27" pos:end="121:32"><expr pos:start="121:27" pos:end="121:32"><name pos:start="121:27" pos:end="121:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="123:13" pos:end="123:22">goto <name pos:start="123:18" pos:end="123:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="127:7" pos:end="177:5">else <block pos:start="127:12" pos:end="177:5">{<block_content pos:start="129:9" pos:end="175:9">

        <if_stmt pos:start="129:9" pos:end="131:28"><if pos:start="129:9" pos:end="131:28">if <condition pos:start="129:12" pos:end="129:41">(<expr pos:start="129:13" pos:end="129:40"><name pos:start="129:13" pos:end="129:22"><name pos:start="129:13" pos:end="129:15">hls</name><operator pos:start="129:16" pos:end="129:17">-&gt;</operator><name pos:start="129:18" pos:end="129:22">flags</name></name> <operator pos:start="129:24" pos:end="129:24">&amp;</operator> <name pos:start="129:26" pos:end="129:40">HLS_SINGLE_FILE</name></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:28"><block_content pos:start="131:13" pos:end="131:28">

            <expr_stmt pos:start="131:13" pos:end="131:28"><expr pos:start="131:13" pos:end="131:27"><name pos:start="131:13" pos:end="131:19">pattern</name> <operator pos:start="131:21" pos:end="131:21">=</operator> <literal type="string" pos:start="131:23" pos:end="131:27">".ts"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="135:9" pos:end="143:9"><if pos:start="135:9" pos:end="139:9">if <condition pos:start="135:12" pos:end="135:31">(<expr pos:start="135:13" pos:end="135:30"><name pos:start="135:13" pos:end="135:30"><name pos:start="135:13" pos:end="135:15">hls</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:30">use_localtime</name></name></expr>)</condition> <block pos:start="135:33" pos:end="139:9">{<block_content pos:start="137:13" pos:end="137:84">

            <expr_stmt pos:start="137:13" pos:end="137:84"><expr pos:start="137:13" pos:end="137:83"><name pos:start="137:13" pos:end="137:25">basename_size</name> <operator pos:start="137:27" pos:end="137:27">=</operator> <call pos:start="137:29" pos:end="137:47"><name pos:start="137:29" pos:end="137:34">strlen</name><argument_list pos:start="137:35" pos:end="137:47">(<argument pos:start="137:36" pos:end="137:46"><expr pos:start="137:36" pos:end="137:46"><name pos:start="137:36" pos:end="137:46"><name pos:start="137:36" pos:end="137:36">s</name><operator pos:start="137:37" pos:end="137:38">-&gt;</operator><name pos:start="137:39" pos:end="137:46">filename</name></name></expr></argument>)</argument_list></call> <operator pos:start="137:49" pos:end="137:49">+</operator> <call pos:start="137:51" pos:end="137:79"><name pos:start="137:51" pos:end="137:56">strlen</name><argument_list pos:start="137:57" pos:end="137:79">(<argument pos:start="137:58" pos:end="137:78"><expr pos:start="137:58" pos:end="137:78"><name pos:start="137:58" pos:end="137:78">pattern_localtime_fmt</name></expr></argument>)</argument_list></call> <operator pos:start="137:81" pos:end="137:81">+</operator> <literal type="number" pos:start="137:83" pos:end="137:83">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="139:11" pos:end="143:9">else <block pos:start="139:16" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:70">

            <expr_stmt pos:start="141:13" pos:end="141:70"><expr pos:start="141:13" pos:end="141:69"><name pos:start="141:13" pos:end="141:25">basename_size</name> <operator pos:start="141:27" pos:end="141:27">=</operator> <call pos:start="141:29" pos:end="141:47"><name pos:start="141:29" pos:end="141:34">strlen</name><argument_list pos:start="141:35" pos:end="141:47">(<argument pos:start="141:36" pos:end="141:46"><expr pos:start="141:36" pos:end="141:46"><name pos:start="141:36" pos:end="141:46"><name pos:start="141:36" pos:end="141:36">s</name><operator pos:start="141:37" pos:end="141:38">-&gt;</operator><name pos:start="141:39" pos:end="141:46">filename</name></name></expr></argument>)</argument_list></call> <operator pos:start="141:49" pos:end="141:49">+</operator> <call pos:start="141:51" pos:end="141:65"><name pos:start="141:51" pos:end="141:56">strlen</name><argument_list pos:start="141:57" pos:end="141:65">(<argument pos:start="141:58" pos:end="141:64"><expr pos:start="141:58" pos:end="141:64"><name pos:start="141:58" pos:end="141:64">pattern</name></expr></argument>)</argument_list></call> <operator pos:start="141:67" pos:end="141:67">+</operator> <literal type="number" pos:start="141:69" pos:end="141:69">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:49"><expr pos:start="145:9" pos:end="145:48"><name pos:start="145:9" pos:end="145:21"><name pos:start="145:9" pos:end="145:11">hls</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:21">basename</name></name> <operator pos:start="145:23" pos:end="145:23">=</operator> <call pos:start="145:25" pos:end="145:48"><name pos:start="145:25" pos:end="145:33">av_malloc</name><argument_list pos:start="145:34" pos:end="145:48">(<argument pos:start="145:35" pos:end="145:47"><expr pos:start="145:35" pos:end="145:47"><name pos:start="145:35" pos:end="145:47">basename_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="153:9"><if pos:start="147:9" pos:end="153:9">if <condition pos:start="147:12" pos:end="147:27">(<expr pos:start="147:13" pos:end="147:26"><operator pos:start="147:13" pos:end="147:13">!</operator><name pos:start="147:14" pos:end="147:26"><name pos:start="147:14" pos:end="147:16">hls</name><operator pos:start="147:17" pos:end="147:18">-&gt;</operator><name pos:start="147:19" pos:end="147:26">basename</name></name></expr>)</condition> <block pos:start="147:29" pos:end="153:9">{<block_content pos:start="149:13" pos:end="151:22">

            <expr_stmt pos:start="149:13" pos:end="149:34"><expr pos:start="149:13" pos:end="149:33"><name pos:start="149:13" pos:end="149:15">ret</name> <operator pos:start="149:17" pos:end="149:17">=</operator> <call pos:start="149:19" pos:end="149:33"><name pos:start="149:19" pos:end="149:25">AVERROR</name><argument_list pos:start="149:26" pos:end="149:33">(<argument pos:start="149:27" pos:end="149:32"><expr pos:start="149:27" pos:end="149:32"><name pos:start="149:27" pos:end="149:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="151:13" pos:end="151:22">goto <name pos:start="151:18" pos:end="151:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:62"><expr pos:start="157:9" pos:end="157:61"><call pos:start="157:9" pos:end="157:61"><name pos:start="157:9" pos:end="157:18">av_strlcpy</name><argument_list pos:start="157:19" pos:end="157:61">(<argument pos:start="157:20" pos:end="157:32"><expr pos:start="157:20" pos:end="157:32"><name pos:start="157:20" pos:end="157:32"><name pos:start="157:20" pos:end="157:22">hls</name><operator pos:start="157:23" pos:end="157:24">-&gt;</operator><name pos:start="157:25" pos:end="157:32">basename</name></name></expr></argument>, <argument pos:start="157:35" pos:end="157:45"><expr pos:start="157:35" pos:end="157:45"><name pos:start="157:35" pos:end="157:45"><name pos:start="157:35" pos:end="157:35">s</name><operator pos:start="157:36" pos:end="157:37">-&gt;</operator><name pos:start="157:38" pos:end="157:45">filename</name></name></expr></argument>, <argument pos:start="157:48" pos:end="157:60"><expr pos:start="157:48" pos:end="157:60"><name pos:start="157:48" pos:end="157:60">basename_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="161:9" pos:end="161:40"><expr pos:start="161:9" pos:end="161:39"><name pos:start="161:9" pos:end="161:9">p</name> <operator pos:start="161:11" pos:end="161:11">=</operator> <call pos:start="161:13" pos:end="161:39"><name pos:start="161:13" pos:end="161:19">strrchr</name><argument_list pos:start="161:20" pos:end="161:39">(<argument pos:start="161:21" pos:end="161:33"><expr pos:start="161:21" pos:end="161:33"><name pos:start="161:21" pos:end="161:33"><name pos:start="161:21" pos:end="161:23">hls</name><operator pos:start="161:24" pos:end="161:25">-&gt;</operator><name pos:start="161:26" pos:end="161:33">basename</name></name></expr></argument>, <argument pos:start="161:36" pos:end="161:38"><expr pos:start="161:36" pos:end="161:38"><literal type="char" pos:start="161:36" pos:end="161:38">'.'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="163:9" pos:end="165:22"><if pos:start="163:9" pos:end="165:22">if <condition pos:start="163:12" pos:end="163:14">(<expr pos:start="163:13" pos:end="163:13"><name pos:start="163:13" pos:end="163:13">p</name></expr>)</condition><block type="pseudo" pos:start="165:13" pos:end="165:22"><block_content pos:start="165:13" pos:end="165:22">

            <expr_stmt pos:start="165:13" pos:end="165:22"><expr pos:start="165:13" pos:end="165:21"><operator pos:start="165:13" pos:end="165:13">*</operator><name pos:start="165:14" pos:end="165:14">p</name> <operator pos:start="165:16" pos:end="165:16">=</operator> <literal type="char" pos:start="165:18" pos:end="165:21">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="167:9" pos:end="175:9"><if pos:start="167:9" pos:end="171:9">if <condition pos:start="167:12" pos:end="167:31">(<expr pos:start="167:13" pos:end="167:30"><name pos:start="167:13" pos:end="167:30"><name pos:start="167:13" pos:end="167:15">hls</name><operator pos:start="167:16" pos:end="167:17">-&gt;</operator><name pos:start="167:18" pos:end="167:30">use_localtime</name></name></expr>)</condition> <block pos:start="167:33" pos:end="171:9">{<block_content pos:start="169:13" pos:end="169:76">

            <expr_stmt pos:start="169:13" pos:end="169:76"><expr pos:start="169:13" pos:end="169:75"><call pos:start="169:13" pos:end="169:75"><name pos:start="169:13" pos:end="169:22">av_strlcat</name><argument_list pos:start="169:23" pos:end="169:75">(<argument pos:start="169:24" pos:end="169:36"><expr pos:start="169:24" pos:end="169:36"><name pos:start="169:24" pos:end="169:36"><name pos:start="169:24" pos:end="169:26">hls</name><operator pos:start="169:27" pos:end="169:28">-&gt;</operator><name pos:start="169:29" pos:end="169:36">basename</name></name></expr></argument>, <argument pos:start="169:39" pos:end="169:59"><expr pos:start="169:39" pos:end="169:59"><name pos:start="169:39" pos:end="169:59">pattern_localtime_fmt</name></expr></argument>, <argument pos:start="169:62" pos:end="169:74"><expr pos:start="169:62" pos:end="169:74"><name pos:start="169:62" pos:end="169:74">basename_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="171:11" pos:end="175:9">else <block pos:start="171:16" pos:end="175:9">{<block_content pos:start="173:13" pos:end="173:62">

            <expr_stmt pos:start="173:13" pos:end="173:62"><expr pos:start="173:13" pos:end="173:61"><call pos:start="173:13" pos:end="173:61"><name pos:start="173:13" pos:end="173:22">av_strlcat</name><argument_list pos:start="173:23" pos:end="173:61">(<argument pos:start="173:24" pos:end="173:36"><expr pos:start="173:24" pos:end="173:36"><name pos:start="173:24" pos:end="173:36"><name pos:start="173:24" pos:end="173:26">hls</name><operator pos:start="173:27" pos:end="173:28">-&gt;</operator><name pos:start="173:29" pos:end="173:36">basename</name></name></expr></argument>, <argument pos:start="173:39" pos:end="173:45"><expr pos:start="173:39" pos:end="173:45"><name pos:start="173:39" pos:end="173:45">pattern</name></expr></argument>, <argument pos:start="173:48" pos:end="173:60"><expr pos:start="173:48" pos:end="173:60"><name pos:start="173:48" pos:end="173:60">basename_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="179:5" pos:end="187:5"><if pos:start="179:5" pos:end="187:5">if <condition pos:start="179:8" pos:end="179:77">(<expr pos:start="179:9" pos:end="179:76"><operator pos:start="179:9" pos:end="179:9">!</operator><name pos:start="179:10" pos:end="179:27"><name pos:start="179:10" pos:end="179:12">hls</name><operator pos:start="179:13" pos:end="179:14">-&gt;</operator><name pos:start="179:15" pos:end="179:27">use_localtime</name></name> <operator pos:start="179:29" pos:end="179:30">&amp;&amp;</operator> <operator pos:start="179:32" pos:end="179:32">(</operator><name pos:start="179:33" pos:end="179:42"><name pos:start="179:33" pos:end="179:35">hls</name><operator pos:start="179:36" pos:end="179:37">-&gt;</operator><name pos:start="179:38" pos:end="179:42">flags</name></name> <operator pos:start="179:44" pos:end="179:44">&amp;</operator> <name pos:start="179:46" pos:end="179:75">HLS_SECOND_LEVEL_SEGMENT_INDEX</name><operator pos:start="179:76" pos:end="179:76">)</operator></expr>)</condition> <block pos:start="179:79" pos:end="187:5">{<block_content pos:start="181:9" pos:end="185:18">

        <expr_stmt pos:start="181:9" pos:end="181:109"><expr pos:start="181:9" pos:end="181:108"><call pos:start="181:9" pos:end="181:108"><name pos:start="181:9" pos:end="181:14">av_log</name><argument_list pos:start="181:15" pos:end="181:108">(<argument pos:start="181:16" pos:end="181:18"><expr pos:start="181:16" pos:end="181:18"><name pos:start="181:16" pos:end="181:18">hls</name></expr></argument>, <argument pos:start="181:21" pos:end="181:32"><expr pos:start="181:21" pos:end="181:32"><name pos:start="181:21" pos:end="181:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="181:35" pos:end="181:107"><expr pos:start="181:35" pos:end="181:107"><literal type="string" pos:start="181:35" pos:end="181:107">"second_level_segment_index hls_flag requires use_localtime to be true\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:30"><expr pos:start="183:9" pos:end="183:29"><name pos:start="183:9" pos:end="183:11">ret</name> <operator pos:start="183:13" pos:end="183:13">=</operator> <call pos:start="183:15" pos:end="183:29"><name pos:start="183:15" pos:end="183:21">AVERROR</name><argument_list pos:start="183:22" pos:end="183:29">(<argument pos:start="183:23" pos:end="183:28"><expr pos:start="183:23" pos:end="183:28"><name pos:start="183:23" pos:end="183:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="185:9" pos:end="185:18">goto <name pos:start="185:14" pos:end="185:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="189:5" pos:end="243:5"><if pos:start="189:5" pos:end="243:5">if<condition pos:start="189:7" pos:end="189:25">(<expr pos:start="189:8" pos:end="189:24"><name pos:start="189:8" pos:end="189:24"><name pos:start="189:8" pos:end="189:10">hls</name><operator pos:start="189:11" pos:end="189:12">-&gt;</operator><name pos:start="189:13" pos:end="189:24">has_subtitle</name></name></expr>)</condition> <block pos:start="189:27" pos:end="243:5">{<block_content pos:start="193:9" pos:end="241:70">



        <if_stmt pos:start="193:9" pos:end="195:33"><if pos:start="193:9" pos:end="195:33">if <condition pos:start="193:12" pos:end="193:41">(<expr pos:start="193:13" pos:end="193:40"><name pos:start="193:13" pos:end="193:22"><name pos:start="193:13" pos:end="193:15">hls</name><operator pos:start="193:16" pos:end="193:17">-&gt;</operator><name pos:start="193:18" pos:end="193:22">flags</name></name> <operator pos:start="193:24" pos:end="193:24">&amp;</operator> <name pos:start="193:26" pos:end="193:40">HLS_SINGLE_FILE</name></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:33"><block_content pos:start="195:13" pos:end="195:33">

            <expr_stmt pos:start="195:13" pos:end="195:33"><expr pos:start="195:13" pos:end="195:32"><name pos:start="195:13" pos:end="195:23">vtt_pattern</name> <operator pos:start="195:25" pos:end="195:25">=</operator> <literal type="string" pos:start="195:27" pos:end="195:32">".vtt"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:74"><expr pos:start="197:9" pos:end="197:73"><name pos:start="197:9" pos:end="197:25">vtt_basename_size</name> <operator pos:start="197:27" pos:end="197:27">=</operator> <call pos:start="197:29" pos:end="197:47"><name pos:start="197:29" pos:end="197:34">strlen</name><argument_list pos:start="197:35" pos:end="197:47">(<argument pos:start="197:36" pos:end="197:46"><expr pos:start="197:36" pos:end="197:46"><name pos:start="197:36" pos:end="197:46"><name pos:start="197:36" pos:end="197:36">s</name><operator pos:start="197:37" pos:end="197:38">-&gt;</operator><name pos:start="197:39" pos:end="197:46">filename</name></name></expr></argument>)</argument_list></call> <operator pos:start="197:49" pos:end="197:49">+</operator> <call pos:start="197:51" pos:end="197:69"><name pos:start="197:51" pos:end="197:56">strlen</name><argument_list pos:start="197:57" pos:end="197:69">(<argument pos:start="197:58" pos:end="197:68"><expr pos:start="197:58" pos:end="197:68"><name pos:start="197:58" pos:end="197:68">vtt_pattern</name></expr></argument>)</argument_list></call> <operator pos:start="197:71" pos:end="197:71">+</operator> <literal type="number" pos:start="197:73" pos:end="197:73">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:57"><expr pos:start="199:9" pos:end="199:56"><name pos:start="199:9" pos:end="199:25"><name pos:start="199:9" pos:end="199:11">hls</name><operator pos:start="199:12" pos:end="199:13">-&gt;</operator><name pos:start="199:14" pos:end="199:25">vtt_basename</name></name> <operator pos:start="199:27" pos:end="199:27">=</operator> <call pos:start="199:29" pos:end="199:56"><name pos:start="199:29" pos:end="199:37">av_malloc</name><argument_list pos:start="199:38" pos:end="199:56">(<argument pos:start="199:39" pos:end="199:55"><expr pos:start="199:39" pos:end="199:55"><name pos:start="199:39" pos:end="199:55">vtt_basename_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="201:9" pos:end="207:9"><if pos:start="201:9" pos:end="207:9">if <condition pos:start="201:12" pos:end="201:31">(<expr pos:start="201:13" pos:end="201:30"><operator pos:start="201:13" pos:end="201:13">!</operator><name pos:start="201:14" pos:end="201:30"><name pos:start="201:14" pos:end="201:16">hls</name><operator pos:start="201:17" pos:end="201:18">-&gt;</operator><name pos:start="201:19" pos:end="201:30">vtt_basename</name></name></expr>)</condition> <block pos:start="201:33" pos:end="207:9">{<block_content pos:start="203:13" pos:end="205:22">

            <expr_stmt pos:start="203:13" pos:end="203:34"><expr pos:start="203:13" pos:end="203:33"><name pos:start="203:13" pos:end="203:15">ret</name> <operator pos:start="203:17" pos:end="203:17">=</operator> <call pos:start="203:19" pos:end="203:33"><name pos:start="203:19" pos:end="203:25">AVERROR</name><argument_list pos:start="203:26" pos:end="203:33">(<argument pos:start="203:27" pos:end="203:32"><expr pos:start="203:27" pos:end="203:32"><name pos:start="203:27" pos:end="203:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="205:13" pos:end="205:22">goto <name pos:start="205:18" pos:end="205:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:58"><expr pos:start="209:9" pos:end="209:57"><name pos:start="209:9" pos:end="209:26"><name pos:start="209:9" pos:end="209:11">hls</name><operator pos:start="209:12" pos:end="209:13">-&gt;</operator><name pos:start="209:14" pos:end="209:26">vtt_m3u8_name</name></name> <operator pos:start="209:28" pos:end="209:28">=</operator> <call pos:start="209:30" pos:end="209:57"><name pos:start="209:30" pos:end="209:38">av_malloc</name><argument_list pos:start="209:39" pos:end="209:57">(<argument pos:start="209:40" pos:end="209:56"><expr pos:start="209:40" pos:end="209:56"><name pos:start="209:40" pos:end="209:56">vtt_basename_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="211:9" pos:end="217:9"><if pos:start="211:9" pos:end="217:9">if <condition pos:start="211:12" pos:end="211:33">(<expr pos:start="211:13" pos:end="211:31"><operator pos:start="211:13" pos:end="211:13">!</operator><name pos:start="211:14" pos:end="211:31"><name pos:start="211:14" pos:end="211:16">hls</name><operator pos:start="211:17" pos:end="211:18">-&gt;</operator><name pos:start="211:19" pos:end="211:31">vtt_m3u8_name</name></name></expr> )</condition> <block pos:start="211:35" pos:end="217:9">{<block_content pos:start="213:13" pos:end="215:22">

            <expr_stmt pos:start="213:13" pos:end="213:34"><expr pos:start="213:13" pos:end="213:33"><name pos:start="213:13" pos:end="213:15">ret</name> <operator pos:start="213:17" pos:end="213:17">=</operator> <call pos:start="213:19" pos:end="213:33"><name pos:start="213:19" pos:end="213:25">AVERROR</name><argument_list pos:start="213:26" pos:end="213:33">(<argument pos:start="213:27" pos:end="213:32"><expr pos:start="213:27" pos:end="213:32"><name pos:start="213:27" pos:end="213:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="215:13" pos:end="215:22">goto <name pos:start="215:18" pos:end="215:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:70"><expr pos:start="219:9" pos:end="219:69"><call pos:start="219:9" pos:end="219:69"><name pos:start="219:9" pos:end="219:18">av_strlcpy</name><argument_list pos:start="219:19" pos:end="219:69">(<argument pos:start="219:20" pos:end="219:36"><expr pos:start="219:20" pos:end="219:36"><name pos:start="219:20" pos:end="219:36"><name pos:start="219:20" pos:end="219:22">hls</name><operator pos:start="219:23" pos:end="219:24">-&gt;</operator><name pos:start="219:25" pos:end="219:36">vtt_basename</name></name></expr></argument>, <argument pos:start="219:39" pos:end="219:49"><expr pos:start="219:39" pos:end="219:49"><name pos:start="219:39" pos:end="219:49"><name pos:start="219:39" pos:end="219:39">s</name><operator pos:start="219:40" pos:end="219:41">-&gt;</operator><name pos:start="219:42" pos:end="219:49">filename</name></name></expr></argument>, <argument pos:start="219:52" pos:end="219:68"><expr pos:start="219:52" pos:end="219:68"><name pos:start="219:52" pos:end="219:68">vtt_basename_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:44"><expr pos:start="221:9" pos:end="221:43"><name pos:start="221:9" pos:end="221:9">p</name> <operator pos:start="221:11" pos:end="221:11">=</operator> <call pos:start="221:13" pos:end="221:43"><name pos:start="221:13" pos:end="221:19">strrchr</name><argument_list pos:start="221:20" pos:end="221:43">(<argument pos:start="221:21" pos:end="221:37"><expr pos:start="221:21" pos:end="221:37"><name pos:start="221:21" pos:end="221:37"><name pos:start="221:21" pos:end="221:23">hls</name><operator pos:start="221:24" pos:end="221:25">-&gt;</operator><name pos:start="221:26" pos:end="221:37">vtt_basename</name></name></expr></argument>, <argument pos:start="221:40" pos:end="221:42"><expr pos:start="221:40" pos:end="221:42"><literal type="char" pos:start="221:40" pos:end="221:42">'.'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="223:9" pos:end="225:22"><if pos:start="223:9" pos:end="225:22">if <condition pos:start="223:12" pos:end="223:14">(<expr pos:start="223:13" pos:end="223:13"><name pos:start="223:13" pos:end="223:13">p</name></expr>)</condition><block type="pseudo" pos:start="225:13" pos:end="225:22"><block_content pos:start="225:13" pos:end="225:22">

            <expr_stmt pos:start="225:13" pos:end="225:22"><expr pos:start="225:13" pos:end="225:21"><operator pos:start="225:13" pos:end="225:13">*</operator><name pos:start="225:14" pos:end="225:14">p</name> <operator pos:start="225:16" pos:end="225:16">=</operator> <literal type="char" pos:start="225:18" pos:end="225:21">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="229:9" pos:end="239:9"><if pos:start="229:9" pos:end="233:9">if<condition pos:start="229:11" pos:end="229:36">( <expr pos:start="229:13" pos:end="229:34"><name pos:start="229:13" pos:end="229:34"><name pos:start="229:13" pos:end="229:15">hls</name><operator pos:start="229:16" pos:end="229:17">-&gt;</operator><name pos:start="229:18" pos:end="229:34">subtitle_filename</name></name></expr> )</condition> <block pos:start="229:38" pos:end="233:9">{<block_content pos:start="231:13" pos:end="231:63">

            <expr_stmt pos:start="231:13" pos:end="231:63"><expr pos:start="231:13" pos:end="231:62"><call pos:start="231:13" pos:end="231:62"><name pos:start="231:13" pos:end="231:18">strcpy</name><argument_list pos:start="231:19" pos:end="231:62">(<argument pos:start="231:20" pos:end="231:37"><expr pos:start="231:20" pos:end="231:37"><name pos:start="231:20" pos:end="231:37"><name pos:start="231:20" pos:end="231:22">hls</name><operator pos:start="231:23" pos:end="231:24">-&gt;</operator><name pos:start="231:25" pos:end="231:37">vtt_m3u8_name</name></name></expr></argument>, <argument pos:start="231:40" pos:end="231:61"><expr pos:start="231:40" pos:end="231:61"><name pos:start="231:40" pos:end="231:61"><name pos:start="231:40" pos:end="231:42">hls</name><operator pos:start="231:43" pos:end="231:44">-&gt;</operator><name pos:start="231:45" pos:end="231:61">subtitle_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="233:11" pos:end="239:9">else <block pos:start="233:16" pos:end="239:9">{<block_content pos:start="235:13" pos:end="237:75">

            <expr_stmt pos:start="235:13" pos:end="235:58"><expr pos:start="235:13" pos:end="235:57"><call pos:start="235:13" pos:end="235:57"><name pos:start="235:13" pos:end="235:18">strcpy</name><argument_list pos:start="235:19" pos:end="235:57">(<argument pos:start="235:20" pos:end="235:37"><expr pos:start="235:20" pos:end="235:37"><name pos:start="235:20" pos:end="235:37"><name pos:start="235:20" pos:end="235:22">hls</name><operator pos:start="235:23" pos:end="235:24">-&gt;</operator><name pos:start="235:25" pos:end="235:37">vtt_m3u8_name</name></name></expr></argument>, <argument pos:start="235:40" pos:end="235:56"><expr pos:start="235:40" pos:end="235:56"><name pos:start="235:40" pos:end="235:56"><name pos:start="235:40" pos:end="235:42">hls</name><operator pos:start="235:43" pos:end="235:44">-&gt;</operator><name pos:start="235:45" pos:end="235:56">vtt_basename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:75"><expr pos:start="237:13" pos:end="237:74"><call pos:start="237:13" pos:end="237:74"><name pos:start="237:13" pos:end="237:22">av_strlcat</name><argument_list pos:start="237:23" pos:end="237:74">(<argument pos:start="237:24" pos:end="237:41"><expr pos:start="237:24" pos:end="237:41"><name pos:start="237:24" pos:end="237:41"><name pos:start="237:24" pos:end="237:26">hls</name><operator pos:start="237:27" pos:end="237:28">-&gt;</operator><name pos:start="237:29" pos:end="237:41">vtt_m3u8_name</name></name></expr></argument>, <argument pos:start="237:44" pos:end="237:54"><expr pos:start="237:44" pos:end="237:54"><literal type="string" pos:start="237:44" pos:end="237:54">"_vtt.m3u8"</literal></expr></argument>, <argument pos:start="237:57" pos:end="237:73"><expr pos:start="237:57" pos:end="237:73"><name pos:start="237:57" pos:end="237:73">vtt_basename_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:70"><expr pos:start="241:9" pos:end="241:69"><call pos:start="241:9" pos:end="241:69"><name pos:start="241:9" pos:end="241:18">av_strlcat</name><argument_list pos:start="241:19" pos:end="241:69">(<argument pos:start="241:20" pos:end="241:36"><expr pos:start="241:20" pos:end="241:36"><name pos:start="241:20" pos:end="241:36"><name pos:start="241:20" pos:end="241:22">hls</name><operator pos:start="241:23" pos:end="241:24">-&gt;</operator><name pos:start="241:25" pos:end="241:36">vtt_basename</name></name></expr></argument>, <argument pos:start="241:39" pos:end="241:49"><expr pos:start="241:39" pos:end="241:49"><name pos:start="241:39" pos:end="241:49">vtt_pattern</name></expr></argument>, <argument pos:start="241:52" pos:end="241:68"><expr pos:start="241:52" pos:end="241:68"><name pos:start="241:52" pos:end="241:68">vtt_basename_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="247:5" pos:end="249:18"><if pos:start="247:5" pos:end="249:18">if <condition pos:start="247:8" pos:end="247:36">(<expr pos:start="247:9" pos:end="247:35"><operator pos:start="247:9" pos:end="247:9">(</operator><name pos:start="247:10" pos:end="247:12">ret</name> <operator pos:start="247:14" pos:end="247:14">=</operator> <call pos:start="247:16" pos:end="247:30"><name pos:start="247:16" pos:end="247:27">hls_mux_init</name><argument_list pos:start="247:28" pos:end="247:30">(<argument pos:start="247:29" pos:end="247:29"><expr pos:start="247:29" pos:end="247:29"><name pos:start="247:29" pos:end="247:29">s</name></expr></argument>)</argument_list></call><operator pos:start="247:31" pos:end="247:31">)</operator> <operator pos:start="247:33" pos:end="247:33">&lt;</operator> <literal type="number" pos:start="247:35" pos:end="247:35">0</literal></expr>)</condition><block type="pseudo" pos:start="249:9" pos:end="249:18"><block_content pos:start="249:9" pos:end="249:18">

        <goto pos:start="249:9" pos:end="249:18">goto <name pos:start="249:14" pos:end="249:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="253:5" pos:end="271:5"><if pos:start="253:5" pos:end="271:5">if <condition pos:start="253:8" pos:end="253:37">(<expr pos:start="253:9" pos:end="253:36"><name pos:start="253:9" pos:end="253:18"><name pos:start="253:9" pos:end="253:11">hls</name><operator pos:start="253:12" pos:end="253:13">-&gt;</operator><name pos:start="253:14" pos:end="253:18">flags</name></name> <operator pos:start="253:20" pos:end="253:20">&amp;</operator> <name pos:start="253:22" pos:end="253:36">HLS_APPEND_LIST</name></expr>)</condition> <block pos:start="253:39" pos:end="271:5">{<block_content pos:start="255:9" pos:end="269:9">

        <expr_stmt pos:start="255:9" pos:end="255:39"><expr pos:start="255:9" pos:end="255:38"><call pos:start="255:9" pos:end="255:38"><name pos:start="255:9" pos:end="255:22">parse_playlist</name><argument_list pos:start="255:23" pos:end="255:38">(<argument pos:start="255:24" pos:end="255:24"><expr pos:start="255:24" pos:end="255:24"><name pos:start="255:24" pos:end="255:24">s</name></expr></argument>, <argument pos:start="255:27" pos:end="255:37"><expr pos:start="255:27" pos:end="255:37"><name pos:start="255:27" pos:end="255:37"><name pos:start="255:27" pos:end="255:27">s</name><operator pos:start="255:28" pos:end="255:29">-&gt;</operator><name pos:start="255:30" pos:end="255:37">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:31"><expr pos:start="257:9" pos:end="257:30"><name pos:start="257:9" pos:end="257:26"><name pos:start="257:9" pos:end="257:11">hls</name><operator pos:start="257:12" pos:end="257:13">-&gt;</operator><name pos:start="257:14" pos:end="257:26">discontinuity</name></name> <operator pos:start="257:28" pos:end="257:28">=</operator> <literal type="number" pos:start="257:30" pos:end="257:30">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="259:9" pos:end="269:9"><if pos:start="259:9" pos:end="269:9">if <condition pos:start="259:12" pos:end="259:31">(<expr pos:start="259:13" pos:end="259:30"><name pos:start="259:13" pos:end="259:26"><name pos:start="259:13" pos:end="259:15">hls</name><operator pos:start="259:16" pos:end="259:17">-&gt;</operator><name pos:start="259:18" pos:end="259:26">init_time</name></name> <operator pos:start="259:28" pos:end="259:28">&gt;</operator> <literal type="number" pos:start="259:30" pos:end="259:30">0</literal></expr>)</condition> <block pos:start="259:33" pos:end="269:9">{<block_content pos:start="261:13" pos:end="267:59">

            <expr_stmt pos:start="261:13" pos:end="263:65"><expr pos:start="261:13" pos:end="263:64"><call pos:start="261:13" pos:end="263:64"><name pos:start="261:13" pos:end="261:18">av_log</name><argument_list pos:start="261:19" pos:end="263:64">(<argument pos:start="261:20" pos:end="261:20"><expr pos:start="261:20" pos:end="261:20"><name pos:start="261:20" pos:end="261:20">s</name></expr></argument>, <argument pos:start="261:23" pos:end="261:36"><expr pos:start="261:23" pos:end="261:36"><name pos:start="261:23" pos:end="261:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="261:39" pos:end="263:63"><expr pos:start="261:39" pos:end="263:63"><literal type="string" pos:start="261:39" pos:end="261:88">"append_list mode does not support hls_init_time,"</literal>

                   <literal type="string" pos:start="263:20" pos:end="263:63">" hls_init_time value will have no effect\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:31"><expr pos:start="265:13" pos:end="265:30"><name pos:start="265:13" pos:end="265:26"><name pos:start="265:13" pos:end="265:15">hls</name><operator pos:start="265:16" pos:end="265:17">-&gt;</operator><name pos:start="265:18" pos:end="265:26">init_time</name></name> <operator pos:start="265:28" pos:end="265:28">=</operator> <literal type="number" pos:start="265:30" pos:end="265:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:59"><expr pos:start="267:13" pos:end="267:58"><name pos:start="267:13" pos:end="267:31"><name pos:start="267:13" pos:end="267:15">hls</name><operator pos:start="267:16" pos:end="267:17">-&gt;</operator><name pos:start="267:18" pos:end="267:31">recording_time</name></name> <operator pos:start="267:33" pos:end="267:33">=</operator> <name pos:start="267:35" pos:end="267:43"><name pos:start="267:35" pos:end="267:37">hls</name><operator pos:start="267:38" pos:end="267:39">-&gt;</operator><name pos:start="267:40" pos:end="267:43">time</name></name> <operator pos:start="267:45" pos:end="267:45">*</operator> <name pos:start="267:47" pos:end="267:58">AV_TIME_BASE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="275:5" pos:end="277:18"><if pos:start="275:5" pos:end="277:18">if <condition pos:start="275:8" pos:end="275:33">(<expr pos:start="275:9" pos:end="275:32"><operator pos:start="275:9" pos:end="275:9">(</operator><name pos:start="275:10" pos:end="275:12">ret</name> <operator pos:start="275:14" pos:end="275:14">=</operator> <call pos:start="275:16" pos:end="275:27"><name pos:start="275:16" pos:end="275:24">hls_start</name><argument_list pos:start="275:25" pos:end="275:27">(<argument pos:start="275:26" pos:end="275:26"><expr pos:start="275:26" pos:end="275:26"><name pos:start="275:26" pos:end="275:26">s</name></expr></argument>)</argument_list></call><operator pos:start="275:28" pos:end="275:28">)</operator> <operator pos:start="275:30" pos:end="275:30">&lt;</operator> <literal type="number" pos:start="275:32" pos:end="275:32">0</literal></expr>)</condition><block type="pseudo" pos:start="277:9" pos:end="277:18"><block_content pos:start="277:9" pos:end="277:18">

        <goto pos:start="277:9" pos:end="277:18">goto <name pos:start="277:14" pos:end="277:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="281:5" pos:end="281:51"><expr pos:start="281:5" pos:end="281:50"><call pos:start="281:5" pos:end="281:50"><name pos:start="281:5" pos:end="281:16">av_dict_copy</name><argument_list pos:start="281:17" pos:end="281:50">(<argument pos:start="281:18" pos:end="281:25"><expr pos:start="281:18" pos:end="281:25"><operator pos:start="281:18" pos:end="281:18">&amp;</operator><name pos:start="281:19" pos:end="281:25">options</name></expr></argument>, <argument pos:start="281:28" pos:end="281:46"><expr pos:start="281:28" pos:end="281:46"><name pos:start="281:28" pos:end="281:46"><name pos:start="281:28" pos:end="281:30">hls</name><operator pos:start="281:31" pos:end="281:32">-&gt;</operator><name pos:start="281:33" pos:end="281:46">format_options</name></name></expr></argument>, <argument pos:start="281:49" pos:end="281:49"><expr pos:start="281:49" pos:end="281:49"><literal type="number" pos:start="281:49" pos:end="281:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="283:5" pos:end="283:52"><expr pos:start="283:5" pos:end="283:51"><name pos:start="283:5" pos:end="283:7">ret</name> <operator pos:start="283:9" pos:end="283:9">=</operator> <call pos:start="283:11" pos:end="283:51"><name pos:start="283:11" pos:end="283:31">avformat_write_header</name><argument_list pos:start="283:32" pos:end="283:51">(<argument pos:start="283:33" pos:end="283:40"><expr pos:start="283:33" pos:end="283:40"><name pos:start="283:33" pos:end="283:40"><name pos:start="283:33" pos:end="283:35">hls</name><operator pos:start="283:36" pos:end="283:37">-&gt;</operator><name pos:start="283:38" pos:end="283:40">avf</name></name></expr></argument>, <argument pos:start="283:43" pos:end="283:50"><expr pos:start="283:43" pos:end="283:50"><operator pos:start="283:43" pos:end="283:43">&amp;</operator><name pos:start="283:44" pos:end="283:50">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="285:5" pos:end="293:5"><if pos:start="285:5" pos:end="293:5">if <condition pos:start="285:8" pos:end="285:31">(<expr pos:start="285:9" pos:end="285:30"><call pos:start="285:9" pos:end="285:30"><name pos:start="285:9" pos:end="285:21">av_dict_count</name><argument_list pos:start="285:22" pos:end="285:30">(<argument pos:start="285:23" pos:end="285:29"><expr pos:start="285:23" pos:end="285:29"><name pos:start="285:23" pos:end="285:29">options</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="285:33" pos:end="293:5">{<block_content pos:start="287:9" pos:end="291:18">

        <expr_stmt pos:start="287:9" pos:end="287:121"><expr pos:start="287:9" pos:end="287:120"><call pos:start="287:9" pos:end="287:120"><name pos:start="287:9" pos:end="287:14">av_log</name><argument_list pos:start="287:15" pos:end="287:120">(<argument pos:start="287:16" pos:end="287:16"><expr pos:start="287:16" pos:end="287:16"><name pos:start="287:16" pos:end="287:16">s</name></expr></argument>, <argument pos:start="287:19" pos:end="287:30"><expr pos:start="287:19" pos:end="287:30"><name pos:start="287:19" pos:end="287:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="287:33" pos:end="287:94"><expr pos:start="287:33" pos:end="287:94"><literal type="string" pos:start="287:33" pos:end="287:94">"Some of provided format options in '%s' are not recognized\n"</literal></expr></argument>, <argument pos:start="287:97" pos:end="287:119"><expr pos:start="287:97" pos:end="287:119"><name pos:start="287:97" pos:end="287:119"><name pos:start="287:97" pos:end="287:99">hls</name><operator pos:start="287:100" pos:end="287:101">-&gt;</operator><name pos:start="287:102" pos:end="287:119">format_options_str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:30"><expr pos:start="289:9" pos:end="289:29"><name pos:start="289:9" pos:end="289:11">ret</name> <operator pos:start="289:13" pos:end="289:13">=</operator> <call pos:start="289:15" pos:end="289:29"><name pos:start="289:15" pos:end="289:21">AVERROR</name><argument_list pos:start="289:22" pos:end="289:29">(<argument pos:start="289:23" pos:end="289:28"><expr pos:start="289:23" pos:end="289:28"><name pos:start="289:23" pos:end="289:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="291:9" pos:end="291:18">goto <name pos:start="291:14" pos:end="291:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="295:5" pos:end="295:56">//av_assert0(s-&gt;nb_streams == hls-&gt;avf-&gt;nb_streams);</comment>

    <for pos:start="297:5" pos:end="343:5">for <control pos:start="297:9" pos:end="297:39">(<init pos:start="297:10" pos:end="297:15"><expr pos:start="297:10" pos:end="297:14"><name pos:start="297:10" pos:end="297:10">i</name> <operator pos:start="297:12" pos:end="297:12">=</operator> <literal type="number" pos:start="297:14" pos:end="297:14">0</literal></expr>;</init> <condition pos:start="297:17" pos:end="297:34"><expr pos:start="297:17" pos:end="297:33"><name pos:start="297:17" pos:end="297:17">i</name> <operator pos:start="297:19" pos:end="297:19">&lt;</operator> <name pos:start="297:21" pos:end="297:33"><name pos:start="297:21" pos:end="297:21">s</name><operator pos:start="297:22" pos:end="297:23">-&gt;</operator><name pos:start="297:24" pos:end="297:33">nb_streams</name></name></expr>;</condition> <incr pos:start="297:36" pos:end="297:38"><expr pos:start="297:36" pos:end="297:38"><name pos:start="297:36" pos:end="297:36">i</name><operator pos:start="297:37" pos:end="297:38">++</operator></expr></incr>)</control> <block pos:start="297:41" pos:end="343:5">{<block_content pos:start="299:9" pos:end="341:113">

        <decl_stmt pos:start="299:9" pos:end="299:27"><decl pos:start="299:9" pos:end="299:26"><type pos:start="299:9" pos:end="299:18"><name pos:start="299:9" pos:end="299:16">AVStream</name> <modifier pos:start="299:18" pos:end="299:18">*</modifier></type><name pos:start="299:19" pos:end="299:26">inner_st</name></decl>;</decl_stmt>

        <decl_stmt pos:start="301:9" pos:end="301:43"><decl pos:start="301:9" pos:end="301:42"><type pos:start="301:9" pos:end="301:18"><name pos:start="301:9" pos:end="301:16">AVStream</name> <modifier pos:start="301:18" pos:end="301:18">*</modifier></type><name pos:start="301:19" pos:end="301:26">outer_st</name> <init pos:start="301:28" pos:end="301:42">= <expr pos:start="301:30" pos:end="301:42"><name pos:start="301:30" pos:end="301:42"><name pos:start="301:30" pos:end="301:30">s</name><operator pos:start="301:31" pos:end="301:32">-&gt;</operator><name pos:start="301:33" pos:end="301:39">streams</name><index pos:start="301:40" pos:end="301:42">[<expr pos:start="301:41" pos:end="301:41"><name pos:start="301:41" pos:end="301:41">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="305:9" pos:end="319:9"><if pos:start="305:9" pos:end="319:9">if <condition pos:start="305:12" pos:end="305:34">(<expr pos:start="305:13" pos:end="305:33"><name pos:start="305:13" pos:end="305:29"><name pos:start="305:13" pos:end="305:15">hls</name><operator pos:start="305:16" pos:end="305:17">-&gt;</operator><name pos:start="305:18" pos:end="305:29">max_seg_size</name></name> <operator pos:start="305:31" pos:end="305:31">&gt;</operator> <literal type="number" pos:start="305:33" pos:end="305:33">0</literal></expr>)</condition> <block pos:start="305:36" pos:end="319:9">{<block_content pos:start="307:13" pos:end="317:13">

            <if_stmt pos:start="307:13" pos:end="317:13"><if pos:start="307:13" pos:end="317:13">if <condition pos:start="307:16" pos:end="309:67">(<expr pos:start="307:17" pos:end="309:66"><operator pos:start="307:17" pos:end="307:17">(</operator><name pos:start="307:18" pos:end="307:47"><name pos:start="307:18" pos:end="307:25">outer_st</name><operator pos:start="307:26" pos:end="307:27">-&gt;</operator><name pos:start="307:28" pos:end="307:35">codecpar</name><operator pos:start="307:36" pos:end="307:37">-&gt;</operator><name pos:start="307:38" pos:end="307:47">codec_type</name></name> <operator pos:start="307:49" pos:end="307:50">==</operator> <name pos:start="307:52" pos:end="307:69">AVMEDIA_TYPE_VIDEO</name><operator pos:start="307:70" pos:end="307:70">)</operator> <operator pos:start="307:72" pos:end="307:73">&amp;&amp;</operator>

                <operator pos:start="309:17" pos:end="309:17">(</operator><name pos:start="309:18" pos:end="309:45"><name pos:start="309:18" pos:end="309:25">outer_st</name><operator pos:start="309:26" pos:end="309:27">-&gt;</operator><name pos:start="309:28" pos:end="309:35">codecpar</name><operator pos:start="309:36" pos:end="309:37">-&gt;</operator><name pos:start="309:38" pos:end="309:45">bit_rate</name></name> <operator pos:start="309:47" pos:end="309:47">&gt;</operator> <name pos:start="309:49" pos:end="309:65"><name pos:start="309:49" pos:end="309:51">hls</name><operator pos:start="309:52" pos:end="309:53">-&gt;</operator><name pos:start="309:54" pos:end="309:65">max_seg_size</name></name><operator pos:start="309:66" pos:end="309:66">)</operator></expr>)</condition> <block pos:start="309:69" pos:end="317:13">{<block_content pos:start="311:17" pos:end="315:72">

                <expr_stmt pos:start="311:17" pos:end="315:72"><expr pos:start="311:17" pos:end="315:71"><call pos:start="311:17" pos:end="315:71"><name pos:start="311:17" pos:end="311:22">av_log</name><argument_list pos:start="311:23" pos:end="315:71">(<argument pos:start="311:24" pos:end="311:24"><expr pos:start="311:24" pos:end="311:24"><name pos:start="311:24" pos:end="311:24">s</name></expr></argument>, <argument pos:start="311:27" pos:end="311:40"><expr pos:start="311:27" pos:end="311:40"><name pos:start="311:27" pos:end="311:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="311:43" pos:end="313:90"><expr pos:start="311:43" pos:end="313:90"><literal type="string" pos:start="311:43" pos:end="311:96">"Your video bitrate is bigger than hls_segment_size, "</literal>

                       <literal type="string" pos:start="313:24" pos:end="313:27">"(%"</literal><name pos:start="313:28" pos:end="313:33">PRId64</name> <literal type="string" pos:start="313:35" pos:end="313:40">" &gt; %"</literal><name pos:start="313:41" pos:end="313:46">PRId64</name> <literal type="string" pos:start="313:48" pos:end="313:90">"), the result maybe not be what you want."</literal></expr></argument>,

                       <argument pos:start="315:24" pos:end="315:51"><expr pos:start="315:24" pos:end="315:51"><name pos:start="315:24" pos:end="315:51"><name pos:start="315:24" pos:end="315:31">outer_st</name><operator pos:start="315:32" pos:end="315:33">-&gt;</operator><name pos:start="315:34" pos:end="315:41">codecpar</name><operator pos:start="315:42" pos:end="315:43">-&gt;</operator><name pos:start="315:44" pos:end="315:51">bit_rate</name></name></expr></argument>, <argument pos:start="315:54" pos:end="315:70"><expr pos:start="315:54" pos:end="315:70"><name pos:start="315:54" pos:end="315:70"><name pos:start="315:54" pos:end="315:56">hls</name><operator pos:start="315:57" pos:end="315:58">-&gt;</operator><name pos:start="315:59" pos:end="315:70">max_seg_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="323:9" pos:end="339:9"><if pos:start="323:9" pos:end="325:44">if <condition pos:start="323:12" pos:end="323:68">(<expr pos:start="323:13" pos:end="323:67"><name pos:start="323:13" pos:end="323:42"><name pos:start="323:13" pos:end="323:20">outer_st</name><operator pos:start="323:21" pos:end="323:22">-&gt;</operator><name pos:start="323:23" pos:end="323:30">codecpar</name><operator pos:start="323:31" pos:end="323:32">-&gt;</operator><name pos:start="323:33" pos:end="323:42">codec_type</name></name> <operator pos:start="323:44" pos:end="323:45">!=</operator> <name pos:start="323:47" pos:end="323:67">AVMEDIA_TYPE_SUBTITLE</name></expr>)</condition><block type="pseudo" pos:start="325:13" pos:end="325:44"><block_content pos:start="325:13" pos:end="325:44">

            <expr_stmt pos:start="325:13" pos:end="325:44"><expr pos:start="325:13" pos:end="325:43"><name pos:start="325:13" pos:end="325:20">inner_st</name> <operator pos:start="325:22" pos:end="325:22">=</operator> <name pos:start="325:24" pos:end="325:43"><name pos:start="325:24" pos:end="325:26">hls</name><operator pos:start="325:27" pos:end="325:28">-&gt;</operator><name pos:start="325:29" pos:end="325:31">avf</name><operator pos:start="325:32" pos:end="325:33">-&gt;</operator><name pos:start="325:34" pos:end="325:40">streams</name><index pos:start="325:41" pos:end="325:43">[<expr pos:start="325:42" pos:end="325:42"><name pos:start="325:42" pos:end="325:42">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="327:9" pos:end="329:48">else if <condition pos:start="327:17" pos:end="327:30">(<expr pos:start="327:18" pos:end="327:29"><name pos:start="327:18" pos:end="327:29"><name pos:start="327:18" pos:end="327:20">hls</name><operator pos:start="327:21" pos:end="327:22">-&gt;</operator><name pos:start="327:23" pos:end="327:29">vtt_avf</name></name></expr>)</condition><block type="pseudo" pos:start="329:13" pos:end="329:48"><block_content pos:start="329:13" pos:end="329:48">

            <expr_stmt pos:start="329:13" pos:end="329:48"><expr pos:start="329:13" pos:end="329:47"><name pos:start="329:13" pos:end="329:20">inner_st</name> <operator pos:start="329:22" pos:end="329:22">=</operator> <name pos:start="329:24" pos:end="329:47"><name pos:start="329:24" pos:end="329:26">hls</name><operator pos:start="329:27" pos:end="329:28">-&gt;</operator><name pos:start="329:29" pos:end="329:35">vtt_avf</name><operator pos:start="329:36" pos:end="329:37">-&gt;</operator><name pos:start="329:38" pos:end="329:44">streams</name><index pos:start="329:45" pos:end="329:47">[<expr pos:start="329:46" pos:end="329:46"><literal type="number" pos:start="329:46" pos:end="329:46">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="331:9" pos:end="339:9">else <block pos:start="331:14" pos:end="339:9">{<block_content pos:start="335:13" pos:end="337:21">

            <comment type="block" pos:start="333:13" pos:end="333:76">/* We have a subtitle stream, when the user does not want one */</comment>

            <expr_stmt pos:start="335:13" pos:end="335:28"><expr pos:start="335:13" pos:end="335:27"><name pos:start="335:13" pos:end="335:20">inner_st</name> <operator pos:start="335:22" pos:end="335:22">=</operator> <name pos:start="335:24" pos:end="335:27">NULL</name></expr>;</expr_stmt>

            <continue pos:start="337:13" pos:end="337:21">continue;</continue>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="341:9" pos:end="341:113"><expr pos:start="341:9" pos:end="341:112"><call pos:start="341:9" pos:end="341:112"><name pos:start="341:9" pos:end="341:27">avpriv_set_pts_info</name><argument_list pos:start="341:28" pos:end="341:112">(<argument pos:start="341:29" pos:end="341:36"><expr pos:start="341:29" pos:end="341:36"><name pos:start="341:29" pos:end="341:36">outer_st</name></expr></argument>, <argument pos:start="341:39" pos:end="341:61"><expr pos:start="341:39" pos:end="341:61"><name pos:start="341:39" pos:end="341:61"><name pos:start="341:39" pos:end="341:46">inner_st</name><operator pos:start="341:47" pos:end="341:48">-&gt;</operator><name pos:start="341:49" pos:end="341:61">pts_wrap_bits</name></name></expr></argument>, <argument pos:start="341:64" pos:end="341:86"><expr pos:start="341:64" pos:end="341:86"><name pos:start="341:64" pos:end="341:86"><name pos:start="341:64" pos:end="341:71">inner_st</name><operator pos:start="341:72" pos:end="341:73">-&gt;</operator><name pos:start="341:74" pos:end="341:82">time_base</name><operator pos:start="341:83" pos:end="341:83">.</operator><name pos:start="341:84" pos:end="341:86">num</name></name></expr></argument>, <argument pos:start="341:89" pos:end="341:111"><expr pos:start="341:89" pos:end="341:111"><name pos:start="341:89" pos:end="341:111"><name pos:start="341:89" pos:end="341:96">inner_st</name><operator pos:start="341:97" pos:end="341:98">-&gt;</operator><name pos:start="341:99" pos:end="341:107">time_base</name><operator pos:start="341:108" pos:end="341:108">.</operator><name pos:start="341:109" pos:end="341:111">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

<label pos:start="345:1" pos:end="345:5"><name pos:start="345:1" pos:end="345:4">fail</name>:</label>



    <expr_stmt pos:start="349:5" pos:end="349:27"><expr pos:start="349:5" pos:end="349:26"><call pos:start="349:5" pos:end="349:26"><name pos:start="349:5" pos:end="349:16">av_dict_free</name><argument_list pos:start="349:17" pos:end="349:26">(<argument pos:start="349:18" pos:end="349:25"><expr pos:start="349:18" pos:end="349:25"><operator pos:start="349:18" pos:end="349:18">&amp;</operator><name pos:start="349:19" pos:end="349:25">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="351:5" pos:end="367:5"><if pos:start="351:5" pos:end="367:5">if <condition pos:start="351:8" pos:end="351:16">(<expr pos:start="351:9" pos:end="351:15"><name pos:start="351:9" pos:end="351:11">ret</name> <operator pos:start="351:13" pos:end="351:13">&lt;</operator> <literal type="number" pos:start="351:15" pos:end="351:15">0</literal></expr>)</condition> <block pos:start="351:18" pos:end="367:5">{<block_content pos:start="353:9" pos:end="363:48">

        <expr_stmt pos:start="353:9" pos:end="353:33"><expr pos:start="353:9" pos:end="353:32"><call pos:start="353:9" pos:end="353:32"><name pos:start="353:9" pos:end="353:16">av_freep</name><argument_list pos:start="353:17" pos:end="353:32">(<argument pos:start="353:18" pos:end="353:31"><expr pos:start="353:18" pos:end="353:31"><operator pos:start="353:18" pos:end="353:18">&amp;</operator><name pos:start="353:19" pos:end="353:31"><name pos:start="353:19" pos:end="353:21">hls</name><operator pos:start="353:22" pos:end="353:23">-&gt;</operator><name pos:start="353:24" pos:end="353:31">basename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="355:9" pos:end="355:37"><expr pos:start="355:9" pos:end="355:36"><call pos:start="355:9" pos:end="355:36"><name pos:start="355:9" pos:end="355:16">av_freep</name><argument_list pos:start="355:17" pos:end="355:36">(<argument pos:start="355:18" pos:end="355:35"><expr pos:start="355:18" pos:end="355:35"><operator pos:start="355:18" pos:end="355:18">&amp;</operator><name pos:start="355:19" pos:end="355:35"><name pos:start="355:19" pos:end="355:21">hls</name><operator pos:start="355:22" pos:end="355:23">-&gt;</operator><name pos:start="355:24" pos:end="355:35">vtt_basename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="357:9" pos:end="359:44"><if pos:start="357:9" pos:end="359:44">if <condition pos:start="357:12" pos:end="357:21">(<expr pos:start="357:13" pos:end="357:20"><name pos:start="357:13" pos:end="357:20"><name pos:start="357:13" pos:end="357:15">hls</name><operator pos:start="357:16" pos:end="357:17">-&gt;</operator><name pos:start="357:18" pos:end="357:20">avf</name></name></expr>)</condition><block type="pseudo" pos:start="359:13" pos:end="359:44"><block_content pos:start="359:13" pos:end="359:44">

            <expr_stmt pos:start="359:13" pos:end="359:44"><expr pos:start="359:13" pos:end="359:43"><call pos:start="359:13" pos:end="359:43"><name pos:start="359:13" pos:end="359:33">avformat_free_context</name><argument_list pos:start="359:34" pos:end="359:43">(<argument pos:start="359:35" pos:end="359:42"><expr pos:start="359:35" pos:end="359:42"><name pos:start="359:35" pos:end="359:42"><name pos:start="359:35" pos:end="359:37">hls</name><operator pos:start="359:38" pos:end="359:39">-&gt;</operator><name pos:start="359:40" pos:end="359:42">avf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="361:9" pos:end="363:48"><if pos:start="361:9" pos:end="363:48">if <condition pos:start="361:12" pos:end="361:25">(<expr pos:start="361:13" pos:end="361:24"><name pos:start="361:13" pos:end="361:24"><name pos:start="361:13" pos:end="361:15">hls</name><operator pos:start="361:16" pos:end="361:17">-&gt;</operator><name pos:start="361:18" pos:end="361:24">vtt_avf</name></name></expr>)</condition><block type="pseudo" pos:start="363:13" pos:end="363:48"><block_content pos:start="363:13" pos:end="363:48">

            <expr_stmt pos:start="363:13" pos:end="363:48"><expr pos:start="363:13" pos:end="363:47"><call pos:start="363:13" pos:end="363:47"><name pos:start="363:13" pos:end="363:33">avformat_free_context</name><argument_list pos:start="363:34" pos:end="363:47">(<argument pos:start="363:35" pos:end="363:46"><expr pos:start="363:35" pos:end="363:46"><name pos:start="363:35" pos:end="363:46"><name pos:start="363:35" pos:end="363:37">hls</name><operator pos:start="363:38" pos:end="363:39">-&gt;</operator><name pos:start="363:40" pos:end="363:46">vtt_avf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    </block_content>}</block></if></if_stmt>

    <return pos:start="369:5" pos:end="369:15">return <expr pos:start="369:12" pos:end="369:14"><name pos:start="369:12" pos:end="369:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
