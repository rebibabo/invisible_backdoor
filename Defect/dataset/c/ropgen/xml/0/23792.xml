<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23792.c" pos:tabs="8"><function pos:start="1:1" pos:end="337:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">vp8_decode_frame</name><parameter_list pos:start="1:28" pos:end="3:44">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:77"><decl pos:start="1:64" pos:end="1:77"><type pos:start="1:64" pos:end="1:77"><name pos:start="1:64" pos:end="1:66">int</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:77">data_size</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:43"><decl pos:start="3:29" pos:end="3:43"><type pos:start="3:29" pos:end="3:43"><name pos:start="3:29" pos:end="3:36">AVPacket</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:43">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="337:1">{<block_content pos:start="7:5" pos:end="335:23">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">VP8Context</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">s</name> <init pos:start="7:19" pos:end="7:36">= <expr pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:25">avctx</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:17">mb_x</name></decl>, <decl pos:start="9:20" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:23">mb_y</name></decl>, <decl pos:start="9:26" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:26" pos:end="9:26">i</name></decl>, <decl pos:start="9:29" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:29" pos:end="9:29">y</name></decl>, <decl pos:start="9:32" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:32" pos:end="9:41">referenced</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:8">enum</name> <name pos:start="11:10" pos:end="11:18">AVDiscard</name></name></type> <name pos:start="11:20" pos:end="11:30">skip_thresh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:21">curframe</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:19"><if pos:start="17:5" pos:end="19:19">if <condition pos:start="17:8" pos:end="17:69">(<expr pos:start="17:9" pos:end="17:68"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:12">ret</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:63"><name pos:start="17:16" pos:end="17:34">decode_frame_header</name><argument_list pos:start="17:35" pos:end="17:63">(<argument pos:start="17:36" pos:end="17:36"><expr pos:start="17:36" pos:end="17:36"><name pos:start="17:36" pos:end="17:36">s</name></expr></argument>, <argument pos:start="17:39" pos:end="17:49"><expr pos:start="17:39" pos:end="17:49"><name pos:start="17:39" pos:end="17:49"><name pos:start="17:39" pos:end="17:43">avpkt</name><operator pos:start="17:44" pos:end="17:45">-&gt;</operator><name pos:start="17:46" pos:end="17:49">data</name></name></expr></argument>, <argument pos:start="17:52" pos:end="17:62"><expr pos:start="17:52" pos:end="17:62"><name pos:start="17:52" pos:end="17:62"><name pos:start="17:52" pos:end="17:56">avpkt</name><operator pos:start="17:57" pos:end="17:58">-&gt;</operator><name pos:start="17:59" pos:end="17:62">size</name></name></expr></argument>)</argument_list></call><operator pos:start="17:64" pos:end="17:64">)</operator> <operator pos:start="17:66" pos:end="17:66">&lt;</operator> <literal type="number" pos:start="17:68" pos:end="17:68">0</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:19"><block_content pos:start="19:9" pos:end="19:19">

        <return pos:start="19:9" pos:end="19:19">return <expr pos:start="19:16" pos:end="19:18"><name pos:start="19:16" pos:end="19:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="25:74"><expr pos:start="23:5" pos:end="25:73"><name pos:start="23:5" pos:end="23:14">referenced</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:31"><name pos:start="23:18" pos:end="23:18">s</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:31">update_last</name></name> <operator pos:start="23:33" pos:end="23:34">||</operator> <name pos:start="23:36" pos:end="23:51"><name pos:start="23:36" pos:end="23:36">s</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:51">update_golden</name></name> <operator pos:start="23:53" pos:end="23:54">==</operator> <name pos:start="23:56" pos:end="23:73">VP56_FRAME_CURRENT</name>

                                <operator pos:start="25:33" pos:end="25:34">||</operator> <name pos:start="25:36" pos:end="25:51"><name pos:start="25:36" pos:end="25:36">s</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:51">update_altref</name></name> <operator pos:start="25:53" pos:end="25:54">==</operator> <name pos:start="25:56" pos:end="25:73">VP56_FRAME_CURRENT</name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="31:68"><expr pos:start="29:5" pos:end="31:67"><name pos:start="29:5" pos:end="29:15">skip_thresh</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <ternary pos:start="29:19" pos:end="31:67"><condition pos:start="29:19" pos:end="29:31"><expr pos:start="29:19" pos:end="29:29"><operator pos:start="29:19" pos:end="29:19">!</operator><name pos:start="29:20" pos:end="29:29">referenced</name></expr> ?</condition><then pos:start="29:33" pos:end="29:48"> <expr pos:start="29:33" pos:end="29:48"><name pos:start="29:33" pos:end="29:48">AVDISCARD_NONREF</name></expr> </then><else pos:start="29:50" pos:end="31:67">:

                    <expr pos:start="31:21" pos:end="31:67"><ternary pos:start="31:21" pos:end="31:67"><condition pos:start="31:21" pos:end="31:34"><expr pos:start="31:21" pos:end="31:32"><operator pos:start="31:21" pos:end="31:21">!</operator><name pos:start="31:22" pos:end="31:32"><name pos:start="31:22" pos:end="31:22">s</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:32">keyframe</name></name></expr> ?</condition><then pos:start="31:36" pos:end="31:51"> <expr pos:start="31:36" pos:end="31:51"><name pos:start="31:36" pos:end="31:51">AVDISCARD_NONKEY</name></expr> </then><else pos:start="31:53" pos:end="31:67">: <expr pos:start="31:55" pos:end="31:67"><name pos:start="31:55" pos:end="31:67">AVDISCARD_ALL</name></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:41">(<expr pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:13">avctx</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:25">skip_frame</name></name> <operator pos:start="35:27" pos:end="35:28">&gt;=</operator> <name pos:start="35:30" pos:end="35:40">skip_thresh</name></expr>)</condition> <block pos:start="35:43" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:25">

        <expr_stmt pos:start="37:9" pos:end="37:25"><expr pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:20">invisible</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <literal type="number" pos:start="37:24" pos:end="37:24">1</literal></expr>;</expr_stmt>

        <goto pos:start="39:9" pos:end="39:25">goto <name pos:start="39:14" pos:end="39:24">skip_decode</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="45:5" pos:end="57:9">for <control pos:start="45:9" pos:end="45:27">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:22"><expr pos:start="45:17" pos:end="45:21"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <literal type="number" pos:start="45:21" pos:end="45:21">4</literal></expr>;</condition> <incr pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:24">i</name><operator pos:start="45:25" pos:end="45:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:9" pos:end="57:9"><block_content pos:start="47:9" pos:end="57:9">

        <if_stmt pos:start="47:9" pos:end="57:9"><if pos:start="47:9" pos:end="57:9">if <condition pos:start="47:12" pos:end="51:59">(<expr pos:start="47:13" pos:end="51:58"><operator pos:start="47:13" pos:end="47:13">&amp;</operator><name pos:start="47:14" pos:end="47:25"><name pos:start="47:14" pos:end="47:14">s</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:22">frames</name><index pos:start="47:23" pos:end="47:25">[<expr pos:start="47:24" pos:end="47:24"><name pos:start="47:24" pos:end="47:24">i</name></expr>]</index></name> <operator pos:start="47:27" pos:end="47:28">!=</operator> <name pos:start="47:30" pos:end="47:59"><name pos:start="47:30" pos:end="47:30">s</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:38">framep</name><index pos:start="47:39" pos:end="47:59">[<expr pos:start="47:40" pos:end="47:58"><name pos:start="47:40" pos:end="47:58">VP56_FRAME_PREVIOUS</name></expr>]</index></name> <operator pos:start="47:61" pos:end="47:62">&amp;&amp;</operator>

            <operator pos:start="49:13" pos:end="49:13">&amp;</operator><name pos:start="49:14" pos:end="49:25"><name pos:start="49:14" pos:end="49:14">s</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:22">frames</name><index pos:start="49:23" pos:end="49:25">[<expr pos:start="49:24" pos:end="49:24"><name pos:start="49:24" pos:end="49:24">i</name></expr>]</index></name> <operator pos:start="49:27" pos:end="49:28">!=</operator> <name pos:start="49:30" pos:end="49:57"><name pos:start="49:30" pos:end="49:30">s</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:38">framep</name><index pos:start="49:39" pos:end="49:57">[<expr pos:start="49:40" pos:end="49:56"><name pos:start="49:40" pos:end="49:56">VP56_FRAME_GOLDEN</name></expr>]</index></name> <operator pos:start="49:59" pos:end="49:60">&amp;&amp;</operator>

            <operator pos:start="51:13" pos:end="51:13">&amp;</operator><name pos:start="51:14" pos:end="51:25"><name pos:start="51:14" pos:end="51:14">s</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:22">frames</name><index pos:start="51:23" pos:end="51:25">[<expr pos:start="51:24" pos:end="51:24"><name pos:start="51:24" pos:end="51:24">i</name></expr>]</index></name> <operator pos:start="51:27" pos:end="51:28">!=</operator> <name pos:start="51:30" pos:end="51:58"><name pos:start="51:30" pos:end="51:30">s</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:38">framep</name><index pos:start="51:39" pos:end="51:58">[<expr pos:start="51:40" pos:end="51:57"><name pos:start="51:40" pos:end="51:57">VP56_FRAME_GOLDEN2</name></expr>]</index></name></expr>)</condition> <block pos:start="51:61" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:18">

            <expr_stmt pos:start="53:13" pos:end="53:69"><expr pos:start="53:13" pos:end="53:68"><name pos:start="53:13" pos:end="53:20">curframe</name> <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:52"><name pos:start="53:24" pos:end="53:24">s</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:32">framep</name><index pos:start="53:33" pos:end="53:52">[<expr pos:start="53:34" pos:end="53:51"><name pos:start="53:34" pos:end="53:51">VP56_FRAME_CURRENT</name></expr>]</index></name> <operator pos:start="53:54" pos:end="53:54">=</operator> <operator pos:start="53:56" pos:end="53:56">&amp;</operator><name pos:start="53:57" pos:end="53:68"><name pos:start="53:57" pos:end="53:57">s</name><operator pos:start="53:58" pos:end="53:59">-&gt;</operator><name pos:start="53:60" pos:end="53:65">frames</name><index pos:start="53:66" pos:end="53:68">[<expr pos:start="53:67" pos:end="53:67"><name pos:start="53:67" pos:end="53:67">i</name></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>

        </block_content>}</block></if></if_stmt></block_content></block></for>

    <if_stmt pos:start="59:5" pos:end="61:47"><if pos:start="59:5" pos:end="61:47">if <condition pos:start="59:8" pos:end="59:26">(<expr pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:16">curframe</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:22">data</name><index pos:start="59:23" pos:end="59:25">[<expr pos:start="59:24" pos:end="59:24"><literal type="number" pos:start="59:24" pos:end="59:24">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:47"><block_content pos:start="61:9" pos:end="61:47">

        <expr_stmt pos:start="61:9" pos:end="61:47"><expr pos:start="61:9" pos:end="61:46"><call pos:start="61:9" pos:end="61:46"><name pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:13">avctx</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:29">release_buffer</name></name><argument_list pos:start="61:30" pos:end="61:46">(<argument pos:start="61:31" pos:end="61:35"><expr pos:start="61:31" pos:end="61:35"><name pos:start="61:31" pos:end="61:35">avctx</name></expr></argument>, <argument pos:start="61:38" pos:end="61:45"><expr pos:start="61:38" pos:end="61:45"><name pos:start="61:38" pos:end="61:45">curframe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:38"><expr pos:start="65:5" pos:end="65:37"><name pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:12">curframe</name><operator pos:start="65:13" pos:end="65:14">-&gt;</operator><name pos:start="65:15" pos:end="65:23">key_frame</name></name> <operator pos:start="65:25" pos:end="65:25">=</operator> <name pos:start="65:27" pos:end="65:37"><name pos:start="65:27" pos:end="65:27">s</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:37">keyframe</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:62"><expr pos:start="67:5" pos:end="67:61"><name pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:12">curframe</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:23">pict_type</name></name> <operator pos:start="67:25" pos:end="67:25">=</operator> <ternary pos:start="67:27" pos:end="67:61"><condition pos:start="67:27" pos:end="67:39"><expr pos:start="67:27" pos:end="67:37"><name pos:start="67:27" pos:end="67:37"><name pos:start="67:27" pos:end="67:27">s</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:37">keyframe</name></name></expr> ?</condition><then pos:start="67:41" pos:end="67:49"> <expr pos:start="67:41" pos:end="67:49"><name pos:start="67:41" pos:end="67:49">FF_I_TYPE</name></expr> </then><else pos:start="67:51" pos:end="67:61">: <expr pos:start="67:53" pos:end="67:61"><name pos:start="67:53" pos:end="67:61">FF_P_TYPE</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:45"><expr pos:start="69:5" pos:end="69:44"><name pos:start="69:5" pos:end="69:23"><name pos:start="69:5" pos:end="69:12">curframe</name><operator pos:start="69:13" pos:end="69:14">-&gt;</operator><name pos:start="69:15" pos:end="69:23">reference</name></name> <operator pos:start="69:25" pos:end="69:25">=</operator> <ternary pos:start="69:27" pos:end="69:44"><condition pos:start="69:27" pos:end="69:38"><expr pos:start="69:27" pos:end="69:36"><name pos:start="69:27" pos:end="69:36">referenced</name></expr> ?</condition><then pos:start="69:40" pos:end="69:40"> <expr pos:start="69:40" pos:end="69:40"><literal type="number" pos:start="69:40" pos:end="69:40">3</literal></expr> </then><else pos:start="69:42" pos:end="69:44">: <expr pos:start="69:44" pos:end="69:44"><literal type="number" pos:start="69:44" pos:end="69:44">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:51">(<expr pos:start="71:9" pos:end="71:50"><operator pos:start="71:9" pos:end="71:9">(</operator><name pos:start="71:10" pos:end="71:12">ret</name> <operator pos:start="71:14" pos:end="71:14">=</operator> <call pos:start="71:16" pos:end="71:49"><name pos:start="71:16" pos:end="71:32"><name pos:start="71:16" pos:end="71:20">avctx</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:32">get_buffer</name></name><argument_list pos:start="71:33" pos:end="71:49">(<argument pos:start="71:34" pos:end="71:38"><expr pos:start="71:34" pos:end="71:38"><name pos:start="71:34" pos:end="71:38">avctx</name></expr></argument>, <argument pos:start="71:41" pos:end="71:48"><expr pos:start="71:41" pos:end="71:48"><name pos:start="71:41" pos:end="71:48">curframe</name></expr></argument>)</argument_list></call><operator pos:start="71:50" pos:end="71:50">)</operator></expr>)</condition> <block pos:start="71:53" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:19">

        <expr_stmt pos:start="73:9" pos:end="73:62"><expr pos:start="73:9" pos:end="73:61"><call pos:start="73:9" pos:end="73:61"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="73:61">(<argument pos:start="73:16" pos:end="73:20"><expr pos:start="73:16" pos:end="73:20"><name pos:start="73:16" pos:end="73:20">avctx</name></expr></argument>, <argument pos:start="73:23" pos:end="73:34"><expr pos:start="73:23" pos:end="73:34"><name pos:start="73:23" pos:end="73:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:37" pos:end="73:60"><expr pos:start="73:37" pos:end="73:60"><literal type="string" pos:start="73:37" pos:end="73:60">"get_buffer() failed!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:19">return <expr pos:start="75:16" pos:end="75:18"><name pos:start="75:16" pos:end="75:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="81:5" pos:end="81:85">// Given that arithmetic probabilities are updated every frame, it's quite likely</comment>

    <comment type="line" pos:start="83:5" pos:end="83:84">// that the values we have on a random interframe are complete junk if we didn't</comment>

    <comment type="line" pos:start="85:5" pos:end="85:83">// start decode on a keyframe. So just don't display anything rather than junk.</comment>

    <if_stmt pos:start="87:5" pos:end="97:5"><if pos:start="87:5" pos:end="97:5">if <condition pos:start="87:8" pos:end="91:57">(<expr pos:start="87:9" pos:end="91:56"><operator pos:start="87:9" pos:end="87:9">!</operator><name pos:start="87:10" pos:end="87:20"><name pos:start="87:10" pos:end="87:10">s</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:20">keyframe</name></name> <operator pos:start="87:22" pos:end="87:23">&amp;&amp;</operator> <operator pos:start="87:25" pos:end="87:25">(</operator><operator pos:start="87:26" pos:end="87:26">!</operator><name pos:start="87:27" pos:end="87:56"><name pos:start="87:27" pos:end="87:27">s</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:35">framep</name><index pos:start="87:36" pos:end="87:56">[<expr pos:start="87:37" pos:end="87:55"><name pos:start="87:37" pos:end="87:55">VP56_FRAME_PREVIOUS</name></expr>]</index></name> <operator pos:start="87:58" pos:end="87:59">||</operator>

                         <operator pos:start="89:26" pos:end="89:26">!</operator><name pos:start="89:27" pos:end="89:54"><name pos:start="89:27" pos:end="89:27">s</name><operator pos:start="89:28" pos:end="89:29">-&gt;</operator><name pos:start="89:30" pos:end="89:35">framep</name><index pos:start="89:36" pos:end="89:54">[<expr pos:start="89:37" pos:end="89:53"><name pos:start="89:37" pos:end="89:53">VP56_FRAME_GOLDEN</name></expr>]</index></name> <operator pos:start="89:56" pos:end="89:57">||</operator>

                         <operator pos:start="91:26" pos:end="91:26">!</operator><name pos:start="91:27" pos:end="91:55"><name pos:start="91:27" pos:end="91:27">s</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:35">framep</name><index pos:start="91:36" pos:end="91:55">[<expr pos:start="91:37" pos:end="91:54"><name pos:start="91:37" pos:end="91:54">VP56_FRAME_GOLDEN2</name></expr>]</index></name><operator pos:start="91:56" pos:end="91:56">)</operator></expr>)</condition> <block pos:start="91:59" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:35">

        <expr_stmt pos:start="93:9" pos:end="93:91"><expr pos:start="93:9" pos:end="93:90"><call pos:start="93:9" pos:end="93:90"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:90">(<argument pos:start="93:16" pos:end="93:20"><expr pos:start="93:16" pos:end="93:20"><name pos:start="93:16" pos:end="93:20">avctx</name></expr></argument>, <argument pos:start="93:23" pos:end="93:36"><expr pos:start="93:23" pos:end="93:36"><name pos:start="93:23" pos:end="93:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="93:39" pos:end="93:89"><expr pos:start="93:39" pos:end="93:89"><literal type="string" pos:start="93:39" pos:end="93:89">"Discarding interframe without a prior keyframe!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:35">return <expr pos:start="95:16" pos:end="95:34"><name pos:start="95:16" pos:end="95:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:42"><expr pos:start="101:5" pos:end="101:41"><name pos:start="101:5" pos:end="101:15"><name pos:start="101:5" pos:end="101:5">s</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:15">linesize</name></name>   <operator pos:start="101:19" pos:end="101:19">=</operator> <name pos:start="101:21" pos:end="101:41"><name pos:start="101:21" pos:end="101:28">curframe</name><operator pos:start="101:29" pos:end="101:30">-&gt;</operator><name pos:start="101:31" pos:end="101:38">linesize</name><index pos:start="101:39" pos:end="101:41">[<expr pos:start="101:40" pos:end="101:40"><literal type="number" pos:start="101:40" pos:end="101:40">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:42"><expr pos:start="103:5" pos:end="103:41"><name pos:start="103:5" pos:end="103:17"><name pos:start="103:5" pos:end="103:5">s</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:17">uvlinesize</name></name> <operator pos:start="103:19" pos:end="103:19">=</operator> <name pos:start="103:21" pos:end="103:41"><name pos:start="103:21" pos:end="103:28">curframe</name><operator pos:start="103:29" pos:end="103:30">-&gt;</operator><name pos:start="103:31" pos:end="103:38">linesize</name><index pos:start="103:39" pos:end="103:41">[<expr pos:start="103:40" pos:end="103:40"><literal type="number" pos:start="103:40" pos:end="103:40">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="107:5" pos:end="109:55"><if pos:start="107:5" pos:end="109:55">if <condition pos:start="107:8" pos:end="107:28">(<expr pos:start="107:9" pos:end="107:27"><operator pos:start="107:9" pos:end="107:9">!</operator><name pos:start="107:10" pos:end="107:27"><name pos:start="107:10" pos:end="107:10">s</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:27">edge_emu_buffer</name></name></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:55"><block_content pos:start="109:9" pos:end="109:55">

        <expr_stmt pos:start="109:9" pos:end="109:55"><expr pos:start="109:9" pos:end="109:54"><name pos:start="109:9" pos:end="109:26"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:26">edge_emu_buffer</name></name> <operator pos:start="109:28" pos:end="109:28">=</operator> <call pos:start="109:30" pos:end="109:54"><name pos:start="109:30" pos:end="109:38">av_malloc</name><argument_list pos:start="109:39" pos:end="109:54">(<argument pos:start="109:40" pos:end="109:53"><expr pos:start="109:40" pos:end="109:53"><literal type="number" pos:start="109:40" pos:end="109:41">21</literal><operator pos:start="109:42" pos:end="109:42">*</operator><name pos:start="109:43" pos:end="109:53"><name pos:start="109:43" pos:end="109:43">s</name><operator pos:start="109:44" pos:end="109:45">-&gt;</operator><name pos:start="109:46" pos:end="109:53">linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:59"><expr pos:start="113:5" pos:end="113:58"><call pos:start="113:5" pos:end="113:58"><name pos:start="113:5" pos:end="113:10">memset</name><argument_list pos:start="113:11" pos:end="113:58">(<argument pos:start="113:12" pos:end="113:21"><expr pos:start="113:12" pos:end="113:21"><name pos:start="113:12" pos:end="113:21"><name pos:start="113:12" pos:end="113:12">s</name><operator pos:start="113:13" pos:end="113:14">-&gt;</operator><name pos:start="113:15" pos:end="113:21">top_nnz</name></name></expr></argument>, <argument pos:start="113:24" pos:end="113:24"><expr pos:start="113:24" pos:end="113:24"><literal type="number" pos:start="113:24" pos:end="113:24">0</literal></expr></argument>, <argument pos:start="113:27" pos:end="113:57"><expr pos:start="113:27" pos:end="113:57"><name pos:start="113:27" pos:end="113:37"><name pos:start="113:27" pos:end="113:27">s</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:37">mb_width</name></name><operator pos:start="113:38" pos:end="113:38">*</operator><sizeof pos:start="113:39" pos:end="113:57">sizeof<argument_list pos:start="113:45" pos:end="113:57">(<argument pos:start="113:46" pos:end="113:56"><expr pos:start="113:46" pos:end="113:56"><operator pos:start="113:46" pos:end="113:46">*</operator><name pos:start="113:47" pos:end="113:56"><name pos:start="113:47" pos:end="113:47">s</name><operator pos:start="113:48" pos:end="113:49">-&gt;</operator><name pos:start="113:50" pos:end="113:56">top_nnz</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="117:5" pos:end="117:43">// top edge of 127 for intra prediction</comment>

    <if_stmt pos:start="119:5" pos:end="127:5"><if pos:start="119:5" pos:end="127:5">if <condition pos:start="119:8" pos:end="119:46">(<expr pos:start="119:9" pos:end="119:45"><operator pos:start="119:9" pos:end="119:9">!</operator><operator pos:start="119:10" pos:end="119:10">(</operator><name pos:start="119:11" pos:end="119:22"><name pos:start="119:11" pos:end="119:15">avctx</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:22">flags</name></name> <operator pos:start="119:24" pos:end="119:24">&amp;</operator> <name pos:start="119:26" pos:end="119:44">CODEC_FLAG_EMU_EDGE</name><operator pos:start="119:45" pos:end="119:45">)</operator></expr>)</condition> <block pos:start="119:48" pos:end="127:5">{<block_content pos:start="121:9" pos:end="125:74">

        <expr_stmt pos:start="121:9" pos:end="121:74"><expr pos:start="121:9" pos:end="121:73"><call pos:start="121:9" pos:end="121:73"><name pos:start="121:9" pos:end="121:14">memset</name><argument_list pos:start="121:15" pos:end="121:73">(<argument pos:start="121:16" pos:end="121:50"><expr pos:start="121:16" pos:end="121:50"><name pos:start="121:16" pos:end="121:32"><name pos:start="121:16" pos:end="121:23">curframe</name><operator pos:start="121:24" pos:end="121:25">-&gt;</operator><name pos:start="121:26" pos:end="121:29">data</name><index pos:start="121:30" pos:end="121:32">[<expr pos:start="121:31" pos:end="121:31"><literal type="number" pos:start="121:31" pos:end="121:31">0</literal></expr>]</index></name> <operator pos:start="121:34" pos:end="121:34">-</operator> <name pos:start="121:36" pos:end="121:46"><name pos:start="121:36" pos:end="121:36">s</name><operator pos:start="121:37" pos:end="121:38">-&gt;</operator><name pos:start="121:39" pos:end="121:46">linesize</name></name>  <operator pos:start="121:49" pos:end="121:49">-</operator><literal type="number" pos:start="121:50" pos:end="121:50">1</literal></expr></argument>, <argument pos:start="121:53" pos:end="121:55"><expr pos:start="121:53" pos:end="121:55"><literal type="number" pos:start="121:53" pos:end="121:55">127</literal></expr></argument>, <argument pos:start="121:58" pos:end="121:72"><expr pos:start="121:58" pos:end="121:72"><name pos:start="121:58" pos:end="121:68"><name pos:start="121:58" pos:end="121:58">s</name><operator pos:start="121:59" pos:end="121:60">-&gt;</operator><name pos:start="121:61" pos:end="121:68">linesize</name></name>  <operator pos:start="121:71" pos:end="121:71">+</operator><literal type="number" pos:start="121:72" pos:end="121:72">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:74"><expr pos:start="123:9" pos:end="123:73"><call pos:start="123:9" pos:end="123:73"><name pos:start="123:9" pos:end="123:14">memset</name><argument_list pos:start="123:15" pos:end="123:73">(<argument pos:start="123:16" pos:end="123:50"><expr pos:start="123:16" pos:end="123:50"><name pos:start="123:16" pos:end="123:32"><name pos:start="123:16" pos:end="123:23">curframe</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:29">data</name><index pos:start="123:30" pos:end="123:32">[<expr pos:start="123:31" pos:end="123:31"><literal type="number" pos:start="123:31" pos:end="123:31">1</literal></expr>]</index></name> <operator pos:start="123:34" pos:end="123:34">-</operator> <name pos:start="123:36" pos:end="123:48"><name pos:start="123:36" pos:end="123:36">s</name><operator pos:start="123:37" pos:end="123:38">-&gt;</operator><name pos:start="123:39" pos:end="123:48">uvlinesize</name></name><operator pos:start="123:49" pos:end="123:49">-</operator><literal type="number" pos:start="123:50" pos:end="123:50">1</literal></expr></argument>, <argument pos:start="123:53" pos:end="123:55"><expr pos:start="123:53" pos:end="123:55"><literal type="number" pos:start="123:53" pos:end="123:55">127</literal></expr></argument>, <argument pos:start="123:58" pos:end="123:72"><expr pos:start="123:58" pos:end="123:72"><name pos:start="123:58" pos:end="123:70"><name pos:start="123:58" pos:end="123:58">s</name><operator pos:start="123:59" pos:end="123:60">-&gt;</operator><name pos:start="123:61" pos:end="123:70">uvlinesize</name></name><operator pos:start="123:71" pos:end="123:71">+</operator><literal type="number" pos:start="123:72" pos:end="123:72">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:74"><expr pos:start="125:9" pos:end="125:73"><call pos:start="125:9" pos:end="125:73"><name pos:start="125:9" pos:end="125:14">memset</name><argument_list pos:start="125:15" pos:end="125:73">(<argument pos:start="125:16" pos:end="125:50"><expr pos:start="125:16" pos:end="125:50"><name pos:start="125:16" pos:end="125:32"><name pos:start="125:16" pos:end="125:23">curframe</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:29">data</name><index pos:start="125:30" pos:end="125:32">[<expr pos:start="125:31" pos:end="125:31"><literal type="number" pos:start="125:31" pos:end="125:31">2</literal></expr>]</index></name> <operator pos:start="125:34" pos:end="125:34">-</operator> <name pos:start="125:36" pos:end="125:48"><name pos:start="125:36" pos:end="125:36">s</name><operator pos:start="125:37" pos:end="125:38">-&gt;</operator><name pos:start="125:39" pos:end="125:48">uvlinesize</name></name><operator pos:start="125:49" pos:end="125:49">-</operator><literal type="number" pos:start="125:50" pos:end="125:50">1</literal></expr></argument>, <argument pos:start="125:53" pos:end="125:55"><expr pos:start="125:53" pos:end="125:55"><literal type="number" pos:start="125:53" pos:end="125:55">127</literal></expr></argument>, <argument pos:start="125:58" pos:end="125:72"><expr pos:start="125:58" pos:end="125:72"><name pos:start="125:58" pos:end="125:70"><name pos:start="125:58" pos:end="125:58">s</name><operator pos:start="125:59" pos:end="125:60">-&gt;</operator><name pos:start="125:61" pos:end="125:70">uvlinesize</name></name><operator pos:start="125:71" pos:end="125:71">+</operator><literal type="number" pos:start="125:72" pos:end="125:72">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="131:5" pos:end="249:5">for <control pos:start="131:9" pos:end="131:47">(<init pos:start="131:10" pos:end="131:18"><expr pos:start="131:10" pos:end="131:17"><name pos:start="131:10" pos:end="131:13">mb_y</name> <operator pos:start="131:15" pos:end="131:15">=</operator> <literal type="number" pos:start="131:17" pos:end="131:17">0</literal></expr>;</init> <condition pos:start="131:20" pos:end="131:39"><expr pos:start="131:20" pos:end="131:38"><name pos:start="131:20" pos:end="131:23">mb_y</name> <operator pos:start="131:25" pos:end="131:25">&lt;</operator> <name pos:start="131:27" pos:end="131:38"><name pos:start="131:27" pos:end="131:27">s</name><operator pos:start="131:28" pos:end="131:29">-&gt;</operator><name pos:start="131:30" pos:end="131:38">mb_height</name></name></expr>;</condition> <incr pos:start="131:41" pos:end="131:46"><expr pos:start="131:41" pos:end="131:46"><name pos:start="131:41" pos:end="131:44">mb_y</name><operator pos:start="131:45" pos:end="131:46">++</operator></expr></incr>)</control> <block pos:start="131:49" pos:end="249:5">{<block_content pos:start="133:9" pos:end="247:9">

        <decl_stmt pos:start="133:9" pos:end="133:84"><decl pos:start="133:9" pos:end="133:83"><type pos:start="133:9" pos:end="133:24"><name pos:start="133:9" pos:end="133:22">VP56RangeCoder</name> <modifier pos:start="133:24" pos:end="133:24">*</modifier></type><name pos:start="133:25" pos:end="133:25">c</name> <init pos:start="133:27" pos:end="133:83">= <expr pos:start="133:29" pos:end="133:83"><operator pos:start="133:29" pos:end="133:29">&amp;</operator><name pos:start="133:30" pos:end="133:83"><name pos:start="133:30" pos:end="133:30">s</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:47">coeff_partition</name><index pos:start="133:48" pos:end="133:83">[<expr pos:start="133:49" pos:end="133:82"><name pos:start="133:49" pos:end="133:52">mb_y</name> <operator pos:start="133:54" pos:end="133:54">&amp;</operator> <operator pos:start="133:56" pos:end="133:56">(</operator><name pos:start="133:57" pos:end="133:79"><name pos:start="133:57" pos:end="133:57">s</name><operator pos:start="133:58" pos:end="133:59">-&gt;</operator><name pos:start="133:60" pos:end="133:79">num_coeff_partitions</name></name><operator pos:start="133:80" pos:end="133:80">-</operator><literal type="number" pos:start="133:81" pos:end="133:81">1</literal><operator pos:start="133:82" pos:end="133:82">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="135:9" pos:end="135:63"><decl pos:start="135:9" pos:end="135:62"><type pos:start="135:9" pos:end="135:23"><name pos:start="135:9" pos:end="135:21">VP8Macroblock</name> <modifier pos:start="135:23" pos:end="135:23">*</modifier></type><name pos:start="135:24" pos:end="135:25">mb</name> <init pos:start="135:27" pos:end="135:62">= <expr pos:start="135:29" pos:end="135:62"><name pos:start="135:29" pos:end="135:42"><name pos:start="135:29" pos:end="135:29">s</name><operator pos:start="135:30" pos:end="135:31">-&gt;</operator><name pos:start="135:32" pos:end="135:42">macroblocks</name></name> <operator pos:start="135:44" pos:end="135:44">+</operator> <name pos:start="135:46" pos:end="135:49">mb_y</name><operator pos:start="135:50" pos:end="135:50">*</operator><name pos:start="135:51" pos:end="135:62"><name pos:start="135:51" pos:end="135:51">s</name><operator pos:start="135:52" pos:end="135:53">-&gt;</operator><name pos:start="135:54" pos:end="135:62">mb_stride</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="137:9" pos:end="137:72"><decl pos:start="137:9" pos:end="137:71"><type pos:start="137:9" pos:end="137:17"><name pos:start="137:9" pos:end="137:15">uint8_t</name> <modifier pos:start="137:17" pos:end="137:17">*</modifier></type><name pos:start="137:18" pos:end="137:25">intra4x4</name> <init pos:start="137:27" pos:end="137:71">= <expr pos:start="137:29" pos:end="137:71"><name pos:start="137:29" pos:end="137:49"><name pos:start="137:29" pos:end="137:29">s</name><operator pos:start="137:30" pos:end="137:31">-&gt;</operator><name pos:start="137:32" pos:end="137:49">intra4x4_pred_mode</name></name> <operator pos:start="137:51" pos:end="137:51">+</operator> <literal type="number" pos:start="137:53" pos:end="137:53">4</literal><operator pos:start="137:54" pos:end="137:54">*</operator><name pos:start="137:55" pos:end="137:58">mb_y</name><operator pos:start="137:59" pos:end="137:59">*</operator><name pos:start="137:60" pos:end="137:71"><name pos:start="137:60" pos:end="137:60">s</name><operator pos:start="137:61" pos:end="137:62">-&gt;</operator><name pos:start="137:63" pos:end="137:71">b4_stride</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="139:9" pos:end="147:10"><decl pos:start="139:9" pos:end="147:9"><type pos:start="139:9" pos:end="139:17"><name pos:start="139:9" pos:end="139:15">uint8_t</name> <modifier pos:start="139:17" pos:end="139:17">*</modifier></type><name pos:start="139:18" pos:end="139:23"><name pos:start="139:18" pos:end="139:20">dst</name><index pos:start="139:21" pos:end="139:23">[<expr pos:start="139:22" pos:end="139:22"><literal type="number" pos:start="139:22" pos:end="139:22">3</literal></expr>]</index></name> <init pos:start="139:25" pos:end="147:9">= <expr pos:start="139:27" pos:end="147:9"><block pos:start="139:27" pos:end="147:9">{

            <expr pos:start="141:13" pos:end="141:51"><name pos:start="141:13" pos:end="141:29"><name pos:start="141:13" pos:end="141:20">curframe</name><operator pos:start="141:21" pos:end="141:22">-&gt;</operator><name pos:start="141:23" pos:end="141:26">data</name><index pos:start="141:27" pos:end="141:29">[<expr pos:start="141:28" pos:end="141:28"><literal type="number" pos:start="141:28" pos:end="141:28">0</literal></expr>]</index></name> <operator pos:start="141:31" pos:end="141:31">+</operator> <literal type="number" pos:start="141:33" pos:end="141:34">16</literal><operator pos:start="141:35" pos:end="141:35">*</operator><name pos:start="141:36" pos:end="141:39">mb_y</name><operator pos:start="141:40" pos:end="141:40">*</operator><name pos:start="141:41" pos:end="141:51"><name pos:start="141:41" pos:end="141:41">s</name><operator pos:start="141:42" pos:end="141:43">-&gt;</operator><name pos:start="141:44" pos:end="141:51">linesize</name></name></expr>,

            <expr pos:start="143:13" pos:end="143:53"><name pos:start="143:13" pos:end="143:29"><name pos:start="143:13" pos:end="143:20">curframe</name><operator pos:start="143:21" pos:end="143:22">-&gt;</operator><name pos:start="143:23" pos:end="143:26">data</name><index pos:start="143:27" pos:end="143:29">[<expr pos:start="143:28" pos:end="143:28"><literal type="number" pos:start="143:28" pos:end="143:28">1</literal></expr>]</index></name> <operator pos:start="143:31" pos:end="143:31">+</operator>  <literal type="number" pos:start="143:34" pos:end="143:34">8</literal><operator pos:start="143:35" pos:end="143:35">*</operator><name pos:start="143:36" pos:end="143:39">mb_y</name><operator pos:start="143:40" pos:end="143:40">*</operator><name pos:start="143:41" pos:end="143:53"><name pos:start="143:41" pos:end="143:41">s</name><operator pos:start="143:42" pos:end="143:43">-&gt;</operator><name pos:start="143:44" pos:end="143:53">uvlinesize</name></name></expr>,

            <expr pos:start="145:13" pos:end="145:53"><name pos:start="145:13" pos:end="145:29"><name pos:start="145:13" pos:end="145:20">curframe</name><operator pos:start="145:21" pos:end="145:22">-&gt;</operator><name pos:start="145:23" pos:end="145:26">data</name><index pos:start="145:27" pos:end="145:29">[<expr pos:start="145:28" pos:end="145:28"><literal type="number" pos:start="145:28" pos:end="145:28">2</literal></expr>]</index></name> <operator pos:start="145:31" pos:end="145:31">+</operator>  <literal type="number" pos:start="145:34" pos:end="145:34">8</literal><operator pos:start="145:35" pos:end="145:35">*</operator><name pos:start="145:36" pos:end="145:39">mb_y</name><operator pos:start="145:40" pos:end="145:40">*</operator><name pos:start="145:41" pos:end="145:53"><name pos:start="145:41" pos:end="145:41">s</name><operator pos:start="145:42" pos:end="145:43">-&gt;</operator><name pos:start="145:44" pos:end="145:53">uvlinesize</name></name></expr>

        }</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="151:9" pos:end="151:52"><expr pos:start="151:9" pos:end="151:51"><call pos:start="151:9" pos:end="151:51"><name pos:start="151:9" pos:end="151:14">memset</name><argument_list pos:start="151:15" pos:end="151:51">(<argument pos:start="151:16" pos:end="151:26"><expr pos:start="151:16" pos:end="151:26"><name pos:start="151:16" pos:end="151:26"><name pos:start="151:16" pos:end="151:16">s</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:26">left_nnz</name></name></expr></argument>, <argument pos:start="151:29" pos:end="151:29"><expr pos:start="151:29" pos:end="151:29"><literal type="number" pos:start="151:29" pos:end="151:29">0</literal></expr></argument>, <argument pos:start="151:32" pos:end="151:50"><expr pos:start="151:32" pos:end="151:50"><sizeof pos:start="151:32" pos:end="151:50">sizeof<argument_list pos:start="151:38" pos:end="151:50">(<argument pos:start="151:39" pos:end="151:49"><expr pos:start="151:39" pos:end="151:49"><name pos:start="151:39" pos:end="151:49"><name pos:start="151:39" pos:end="151:39">s</name><operator pos:start="151:40" pos:end="151:41">-&gt;</operator><name pos:start="151:42" pos:end="151:49">left_nnz</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="line" pos:start="155:9" pos:end="155:48">// left edge of 129 for intra prediction</comment>

        <if_stmt pos:start="157:9" pos:end="163:60"><if pos:start="157:9" pos:end="163:60">if <condition pos:start="157:12" pos:end="157:50">(<expr pos:start="157:13" pos:end="157:49"><operator pos:start="157:13" pos:end="157:13">!</operator><operator pos:start="157:14" pos:end="157:14">(</operator><name pos:start="157:15" pos:end="157:26"><name pos:start="157:15" pos:end="157:19">avctx</name><operator pos:start="157:20" pos:end="157:21">-&gt;</operator><name pos:start="157:22" pos:end="157:26">flags</name></name> <operator pos:start="157:28" pos:end="157:28">&amp;</operator> <name pos:start="157:30" pos:end="157:48">CODEC_FLAG_EMU_EDGE</name><operator pos:start="157:49" pos:end="157:49">)</operator></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="163:60"><block_content pos:start="159:13" pos:end="163:60">

            <for pos:start="159:13" pos:end="163:60">for <control pos:start="159:17" pos:end="159:35">(<init pos:start="159:18" pos:end="159:23"><expr pos:start="159:18" pos:end="159:22"><name pos:start="159:18" pos:end="159:18">i</name> <operator pos:start="159:20" pos:end="159:20">=</operator> <literal type="number" pos:start="159:22" pos:end="159:22">0</literal></expr>;</init> <condition pos:start="159:25" pos:end="159:30"><expr pos:start="159:25" pos:end="159:29"><name pos:start="159:25" pos:end="159:25">i</name> <operator pos:start="159:27" pos:end="159:27">&lt;</operator> <literal type="number" pos:start="159:29" pos:end="159:29">3</literal></expr>;</condition> <incr pos:start="159:32" pos:end="159:34"><expr pos:start="159:32" pos:end="159:34"><name pos:start="159:32" pos:end="159:32">i</name><operator pos:start="159:33" pos:end="159:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="161:17" pos:end="163:60"><block_content pos:start="161:17" pos:end="163:60">

                <for pos:start="161:17" pos:end="163:60">for <control pos:start="161:21" pos:end="161:45">(<init pos:start="161:22" pos:end="161:27"><expr pos:start="161:22" pos:end="161:26"><name pos:start="161:22" pos:end="161:22">y</name> <operator pos:start="161:24" pos:end="161:24">=</operator> <literal type="number" pos:start="161:26" pos:end="161:26">0</literal></expr>;</init> <condition pos:start="161:29" pos:end="161:40"><expr pos:start="161:29" pos:end="161:39"><name pos:start="161:29" pos:end="161:35"><name pos:start="161:29" pos:end="161:29">y</name> <argument_list type="generic" pos:start="161:31" pos:end="161:35">&lt; <argument pos:start="161:33" pos:end="161:34"><expr pos:start="161:33" pos:end="161:34"><literal type="number" pos:start="161:33" pos:end="161:34">16</literal></expr></argument>&gt;</argument_list></name><operator pos:start="161:36" pos:end="161:36">&gt;</operator><operator pos:start="161:37" pos:end="161:37">!</operator><operator pos:start="161:38" pos:end="161:38">!</operator><name pos:start="161:39" pos:end="161:39">i</name></expr>;</condition> <incr pos:start="161:42" pos:end="161:44"><expr pos:start="161:42" pos:end="161:44"><name pos:start="161:42" pos:end="161:42">y</name><operator pos:start="161:43" pos:end="161:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="163:21" pos:end="163:60"><block_content pos:start="163:21" pos:end="163:60">

                    <expr_stmt pos:start="163:21" pos:end="163:60"><expr pos:start="163:21" pos:end="163:59"><name pos:start="163:21" pos:end="163:53"><name pos:start="163:21" pos:end="163:23">dst</name><index pos:start="163:24" pos:end="163:26">[<expr pos:start="163:25" pos:end="163:25"><name pos:start="163:25" pos:end="163:25">i</name></expr>]</index><index pos:start="163:27" pos:end="163:53">[<expr pos:start="163:28" pos:end="163:52"><name pos:start="163:28" pos:end="163:28">y</name><operator pos:start="163:29" pos:end="163:29">*</operator><name pos:start="163:30" pos:end="163:50"><name pos:start="163:30" pos:end="163:37">curframe</name><operator pos:start="163:38" pos:end="163:39">-&gt;</operator><name pos:start="163:40" pos:end="163:47">linesize</name><index pos:start="163:48" pos:end="163:50">[<expr pos:start="163:49" pos:end="163:49"><name pos:start="163:49" pos:end="163:49">i</name></expr>]</index></name><operator pos:start="163:51" pos:end="163:51">-</operator><literal type="number" pos:start="163:52" pos:end="163:52">1</literal></expr>]</index></name> <operator pos:start="163:55" pos:end="163:55">=</operator> <literal type="number" pos:start="163:57" pos:end="163:59">129</literal></expr>;</expr_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt>



        <for pos:start="167:9" pos:end="235:9">for <control pos:start="167:13" pos:end="167:50">(<init pos:start="167:14" pos:end="167:22"><expr pos:start="167:14" pos:end="167:21"><name pos:start="167:14" pos:end="167:17">mb_x</name> <operator pos:start="167:19" pos:end="167:19">=</operator> <literal type="number" pos:start="167:21" pos:end="167:21">0</literal></expr>;</init> <condition pos:start="167:24" pos:end="167:42"><expr pos:start="167:24" pos:end="167:41"><name pos:start="167:24" pos:end="167:27">mb_x</name> <operator pos:start="167:29" pos:end="167:29">&lt;</operator> <name pos:start="167:31" pos:end="167:41"><name pos:start="167:31" pos:end="167:31">s</name><operator pos:start="167:32" pos:end="167:33">-&gt;</operator><name pos:start="167:34" pos:end="167:41">mb_width</name></name></expr>;</condition> <incr pos:start="167:44" pos:end="167:49"><expr pos:start="167:44" pos:end="167:49"><name pos:start="167:44" pos:end="167:47">mb_x</name><operator pos:start="167:48" pos:end="167:49">++</operator></expr></incr>)</control> <block pos:start="167:52" pos:end="235:9">{<block_content pos:start="169:13" pos:end="233:17">

            <expr_stmt pos:start="169:13" pos:end="169:65"><expr pos:start="169:13" pos:end="169:64"><call pos:start="169:13" pos:end="169:64"><name pos:start="169:13" pos:end="169:26">decode_mb_mode</name><argument_list pos:start="169:27" pos:end="169:64">(<argument pos:start="169:28" pos:end="169:28"><expr pos:start="169:28" pos:end="169:28"><name pos:start="169:28" pos:end="169:28">s</name></expr></argument>, <argument pos:start="169:31" pos:end="169:32"><expr pos:start="169:31" pos:end="169:32"><name pos:start="169:31" pos:end="169:32">mb</name></expr></argument>, <argument pos:start="169:35" pos:end="169:38"><expr pos:start="169:35" pos:end="169:38"><name pos:start="169:35" pos:end="169:38">mb_x</name></expr></argument>, <argument pos:start="169:41" pos:end="169:44"><expr pos:start="169:41" pos:end="169:44"><name pos:start="169:41" pos:end="169:44">mb_y</name></expr></argument>, <argument pos:start="169:47" pos:end="169:63"><expr pos:start="169:47" pos:end="169:63"><name pos:start="169:47" pos:end="169:54">intra4x4</name> <operator pos:start="169:56" pos:end="169:56">+</operator> <literal type="number" pos:start="169:58" pos:end="169:58">4</literal><operator pos:start="169:59" pos:end="169:59">*</operator><name pos:start="169:60" pos:end="169:63">mb_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="173:13" pos:end="183:13"><if pos:start="173:13" pos:end="175:74">if <condition pos:start="173:16" pos:end="173:26">(<expr pos:start="173:17" pos:end="173:25"><operator pos:start="173:17" pos:end="173:17">!</operator><name pos:start="173:18" pos:end="173:25"><name pos:start="173:18" pos:end="173:19">mb</name><operator pos:start="173:20" pos:end="173:21">-&gt;</operator><name pos:start="173:22" pos:end="173:25">skip</name></name></expr>)</condition><block type="pseudo" pos:start="175:17" pos:end="175:74"><block_content pos:start="175:17" pos:end="175:74">

                <expr_stmt pos:start="175:17" pos:end="175:74"><expr pos:start="175:17" pos:end="175:73"><call pos:start="175:17" pos:end="175:73"><name pos:start="175:17" pos:end="175:32">decode_mb_coeffs</name><argument_list pos:start="175:33" pos:end="175:73">(<argument pos:start="175:34" pos:end="175:34"><expr pos:start="175:34" pos:end="175:34"><name pos:start="175:34" pos:end="175:34">s</name></expr></argument>, <argument pos:start="175:37" pos:end="175:37"><expr pos:start="175:37" pos:end="175:37"><name pos:start="175:37" pos:end="175:37">c</name></expr></argument>, <argument pos:start="175:40" pos:end="175:41"><expr pos:start="175:40" pos:end="175:41"><name pos:start="175:40" pos:end="175:41">mb</name></expr></argument>, <argument pos:start="175:44" pos:end="175:59"><expr pos:start="175:44" pos:end="175:59"><name pos:start="175:44" pos:end="175:59"><name pos:start="175:44" pos:end="175:44">s</name><operator pos:start="175:45" pos:end="175:46">-&gt;</operator><name pos:start="175:47" pos:end="175:53">top_nnz</name><index pos:start="175:54" pos:end="175:59">[<expr pos:start="175:55" pos:end="175:58"><name pos:start="175:55" pos:end="175:58">mb_x</name></expr>]</index></name></expr></argument>, <argument pos:start="175:62" pos:end="175:72"><expr pos:start="175:62" pos:end="175:72"><name pos:start="175:62" pos:end="175:72"><name pos:start="175:62" pos:end="175:62">s</name><operator pos:start="175:63" pos:end="175:64">-&gt;</operator><name pos:start="175:65" pos:end="175:72">left_nnz</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="177:13" pos:end="183:13">else <block pos:start="177:18" pos:end="183:13">{<block_content pos:start="179:17" pos:end="181:54">

                <expr_stmt pos:start="179:17" pos:end="179:52"><expr pos:start="179:17" pos:end="179:51"><call pos:start="179:17" pos:end="179:51"><name pos:start="179:17" pos:end="179:26">AV_ZERO128</name><argument_list pos:start="179:27" pos:end="179:51">(<argument pos:start="179:28" pos:end="179:50"><expr pos:start="179:28" pos:end="179:50"><name pos:start="179:28" pos:end="179:50"><name pos:start="179:28" pos:end="179:28">s</name><operator pos:start="179:29" pos:end="179:30">-&gt;</operator><name pos:start="179:31" pos:end="179:50">non_zero_count_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="line" pos:start="179:57" pos:end="179:63">// luma</comment>

                <expr_stmt pos:start="181:17" pos:end="181:54"><expr pos:start="181:17" pos:end="181:53"><call pos:start="181:17" pos:end="181:53"><name pos:start="181:17" pos:end="181:25">AV_ZERO64</name><argument_list pos:start="181:26" pos:end="181:53">(<argument pos:start="181:27" pos:end="181:52"><expr pos:start="181:27" pos:end="181:52"><name pos:start="181:27" pos:end="181:52"><name pos:start="181:27" pos:end="181:27">s</name><operator pos:start="181:28" pos:end="181:29">-&gt;</operator><name pos:start="181:30" pos:end="181:49">non_zero_count_cache</name><index pos:start="181:50" pos:end="181:52">[<expr pos:start="181:51" pos:end="181:51"><literal type="number" pos:start="181:51" pos:end="181:51">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="181:57" pos:end="181:65">// chroma</comment>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="187:13" pos:end="197:13"><if pos:start="187:13" pos:end="193:13">if <condition pos:start="187:16" pos:end="187:38">(<expr pos:start="187:17" pos:end="187:37"><name pos:start="187:17" pos:end="187:24"><name pos:start="187:17" pos:end="187:18">mb</name><operator pos:start="187:19" pos:end="187:20">-&gt;</operator><name pos:start="187:21" pos:end="187:24">mode</name></name> <operator pos:start="187:26" pos:end="187:27">&lt;=</operator> <name pos:start="187:29" pos:end="187:37">MODE_I4x4</name></expr>)</condition> <block pos:start="187:40" pos:end="193:13">{<block_content pos:start="189:17" pos:end="191:52">

                <expr_stmt pos:start="189:17" pos:end="189:73"><expr pos:start="189:17" pos:end="189:72"><call pos:start="189:17" pos:end="189:72"><name pos:start="189:17" pos:end="189:29">intra_predict</name><argument_list pos:start="189:30" pos:end="189:72">(<argument pos:start="189:31" pos:end="189:31"><expr pos:start="189:31" pos:end="189:31"><name pos:start="189:31" pos:end="189:31">s</name></expr></argument>, <argument pos:start="189:34" pos:end="189:36"><expr pos:start="189:34" pos:end="189:36"><name pos:start="189:34" pos:end="189:36">dst</name></expr></argument>, <argument pos:start="189:39" pos:end="189:40"><expr pos:start="189:39" pos:end="189:40"><name pos:start="189:39" pos:end="189:40">mb</name></expr></argument>, <argument pos:start="189:43" pos:end="189:59"><expr pos:start="189:43" pos:end="189:59"><name pos:start="189:43" pos:end="189:50">intra4x4</name> <operator pos:start="189:52" pos:end="189:52">+</operator> <literal type="number" pos:start="189:54" pos:end="189:54">4</literal><operator pos:start="189:55" pos:end="189:55">*</operator><name pos:start="189:56" pos:end="189:59">mb_x</name></expr></argument>, <argument pos:start="189:62" pos:end="189:65"><expr pos:start="189:62" pos:end="189:65"><name pos:start="189:62" pos:end="189:65">mb_x</name></expr></argument>, <argument pos:start="189:68" pos:end="189:71"><expr pos:start="189:68" pos:end="189:71"><name pos:start="189:68" pos:end="189:71">mb_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:52"><expr pos:start="191:17" pos:end="191:51"><call pos:start="191:17" pos:end="191:51"><name pos:start="191:17" pos:end="191:22">memset</name><argument_list pos:start="191:23" pos:end="191:51">(<argument pos:start="191:24" pos:end="191:30"><expr pos:start="191:24" pos:end="191:30"><name pos:start="191:24" pos:end="191:30"><name pos:start="191:24" pos:end="191:25">mb</name><operator pos:start="191:26" pos:end="191:27">-&gt;</operator><name pos:start="191:28" pos:end="191:30">bmv</name></name></expr></argument>, <argument pos:start="191:33" pos:end="191:33"><expr pos:start="191:33" pos:end="191:33"><literal type="number" pos:start="191:33" pos:end="191:33">0</literal></expr></argument>, <argument pos:start="191:36" pos:end="191:50"><expr pos:start="191:36" pos:end="191:50"><sizeof pos:start="191:36" pos:end="191:50">sizeof<argument_list pos:start="191:42" pos:end="191:50">(<argument pos:start="191:43" pos:end="191:49"><expr pos:start="191:43" pos:end="191:49"><name pos:start="191:43" pos:end="191:49"><name pos:start="191:43" pos:end="191:44">mb</name><operator pos:start="191:45" pos:end="191:46">-&gt;</operator><name pos:start="191:47" pos:end="191:49">bmv</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="193:15" pos:end="197:13">else <block pos:start="193:20" pos:end="197:13">{<block_content pos:start="195:17" pos:end="195:54">

                <expr_stmt pos:start="195:17" pos:end="195:54"><expr pos:start="195:17" pos:end="195:53"><call pos:start="195:17" pos:end="195:53"><name pos:start="195:17" pos:end="195:29">inter_predict</name><argument_list pos:start="195:30" pos:end="195:53">(<argument pos:start="195:31" pos:end="195:31"><expr pos:start="195:31" pos:end="195:31"><name pos:start="195:31" pos:end="195:31">s</name></expr></argument>, <argument pos:start="195:34" pos:end="195:36"><expr pos:start="195:34" pos:end="195:36"><name pos:start="195:34" pos:end="195:36">dst</name></expr></argument>, <argument pos:start="195:39" pos:end="195:40"><expr pos:start="195:39" pos:end="195:40"><name pos:start="195:39" pos:end="195:40">mb</name></expr></argument>, <argument pos:start="195:43" pos:end="195:46"><expr pos:start="195:43" pos:end="195:46"><name pos:start="195:43" pos:end="195:46">mb_x</name></expr></argument>, <argument pos:start="195:49" pos:end="195:52"><expr pos:start="195:49" pos:end="195:52"><name pos:start="195:49" pos:end="195:52">mb_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="201:13" pos:end="223:13"><if pos:start="201:13" pos:end="205:13">if <condition pos:start="201:16" pos:end="201:26">(<expr pos:start="201:17" pos:end="201:25"><operator pos:start="201:17" pos:end="201:17">!</operator><name pos:start="201:18" pos:end="201:25"><name pos:start="201:18" pos:end="201:19">mb</name><operator pos:start="201:20" pos:end="201:21">-&gt;</operator><name pos:start="201:22" pos:end="201:25">skip</name></name></expr>)</condition> <block pos:start="201:28" pos:end="205:13">{<block_content pos:start="203:17" pos:end="203:55">

                <expr_stmt pos:start="203:17" pos:end="203:55"><expr pos:start="203:17" pos:end="203:54"><call pos:start="203:17" pos:end="203:54"><name pos:start="203:17" pos:end="203:23">idct_mb</name><argument_list pos:start="203:24" pos:end="203:54">(<argument pos:start="203:25" pos:end="203:25"><expr pos:start="203:25" pos:end="203:25"><name pos:start="203:25" pos:end="203:25">s</name></expr></argument>, <argument pos:start="203:28" pos:end="203:33"><expr pos:start="203:28" pos:end="203:33"><name pos:start="203:28" pos:end="203:33"><name pos:start="203:28" pos:end="203:30">dst</name><index pos:start="203:31" pos:end="203:33">[<expr pos:start="203:32" pos:end="203:32"><literal type="number" pos:start="203:32" pos:end="203:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="203:36" pos:end="203:41"><expr pos:start="203:36" pos:end="203:41"><name pos:start="203:36" pos:end="203:41"><name pos:start="203:36" pos:end="203:38">dst</name><index pos:start="203:39" pos:end="203:41">[<expr pos:start="203:40" pos:end="203:40"><literal type="number" pos:start="203:40" pos:end="203:40">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="203:44" pos:end="203:49"><expr pos:start="203:44" pos:end="203:49"><name pos:start="203:44" pos:end="203:49"><name pos:start="203:44" pos:end="203:46">dst</name><index pos:start="203:47" pos:end="203:49">[<expr pos:start="203:48" pos:end="203:48"><literal type="number" pos:start="203:48" pos:end="203:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="203:52" pos:end="203:53"><expr pos:start="203:52" pos:end="203:53"><name pos:start="203:52" pos:end="203:53">mb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="205:15" pos:end="223:13">else <block pos:start="205:20" pos:end="223:13">{<block_content pos:start="207:17" pos:end="221:17">

                <expr_stmt pos:start="207:17" pos:end="207:39"><expr pos:start="207:17" pos:end="207:38"><call pos:start="207:17" pos:end="207:38"><name pos:start="207:17" pos:end="207:25">AV_ZERO64</name><argument_list pos:start="207:26" pos:end="207:38">(<argument pos:start="207:27" pos:end="207:37"><expr pos:start="207:27" pos:end="207:37"><name pos:start="207:27" pos:end="207:37"><name pos:start="207:27" pos:end="207:27">s</name><operator pos:start="207:28" pos:end="207:29">-&gt;</operator><name pos:start="207:30" pos:end="207:37">left_nnz</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:45"><expr pos:start="209:17" pos:end="209:44"><call pos:start="209:17" pos:end="209:44"><name pos:start="209:17" pos:end="209:23">AV_WN64</name><argument_list pos:start="209:24" pos:end="209:44">(<argument pos:start="209:25" pos:end="209:40"><expr pos:start="209:25" pos:end="209:40"><name pos:start="209:25" pos:end="209:40"><name pos:start="209:25" pos:end="209:25">s</name><operator pos:start="209:26" pos:end="209:27">-&gt;</operator><name pos:start="209:28" pos:end="209:34">top_nnz</name><index pos:start="209:35" pos:end="209:40">[<expr pos:start="209:36" pos:end="209:39"><name pos:start="209:36" pos:end="209:39">mb_x</name></expr>]</index></name></expr></argument>, <argument pos:start="209:43" pos:end="209:43"><expr pos:start="209:43" pos:end="209:43"><literal type="number" pos:start="209:43" pos:end="209:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="209:49" pos:end="209:75">// array of 9, so unaligned</comment>



                <comment type="line" pos:start="213:17" pos:end="213:91">// Reset DC block predictors if they would exist if the mb had coefficients</comment>

                <if_stmt pos:start="215:17" pos:end="221:17"><if pos:start="215:17" pos:end="221:17">if <condition pos:start="215:20" pos:end="215:74">(<expr pos:start="215:21" pos:end="215:73"><name pos:start="215:21" pos:end="215:28"><name pos:start="215:21" pos:end="215:22">mb</name><operator pos:start="215:23" pos:end="215:24">-&gt;</operator><name pos:start="215:25" pos:end="215:28">mode</name></name> <operator pos:start="215:30" pos:end="215:31">!=</operator> <name pos:start="215:33" pos:end="215:41">MODE_I4x4</name> <operator pos:start="215:43" pos:end="215:44">&amp;&amp;</operator> <name pos:start="215:46" pos:end="215:53"><name pos:start="215:46" pos:end="215:47">mb</name><operator pos:start="215:48" pos:end="215:49">-&gt;</operator><name pos:start="215:50" pos:end="215:53">mode</name></name> <operator pos:start="215:55" pos:end="215:56">!=</operator> <name pos:start="215:58" pos:end="215:73">VP8_MVMODE_SPLIT</name></expr>)</condition> <block pos:start="215:76" pos:end="221:17">{<block_content pos:start="217:21" pos:end="219:44">

                    <expr_stmt pos:start="217:21" pos:end="217:44"><expr pos:start="217:21" pos:end="217:43"><name pos:start="217:21" pos:end="217:34"><name pos:start="217:21" pos:end="217:21">s</name><operator pos:start="217:22" pos:end="217:23">-&gt;</operator><name pos:start="217:24" pos:end="217:31">left_nnz</name><index pos:start="217:32" pos:end="217:34">[<expr pos:start="217:33" pos:end="217:33"><literal type="number" pos:start="217:33" pos:end="217:33">8</literal></expr>]</index></name>      <operator pos:start="217:41" pos:end="217:41">=</operator> <literal type="number" pos:start="217:43" pos:end="217:43">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="219:21" pos:end="219:44"><expr pos:start="219:21" pos:end="219:43"><name pos:start="219:21" pos:end="219:39"><name pos:start="219:21" pos:end="219:21">s</name><operator pos:start="219:22" pos:end="219:23">-&gt;</operator><name pos:start="219:24" pos:end="219:30">top_nnz</name><index pos:start="219:31" pos:end="219:36">[<expr pos:start="219:32" pos:end="219:35"><name pos:start="219:32" pos:end="219:35">mb_x</name></expr>]</index><index pos:start="219:37" pos:end="219:39">[<expr pos:start="219:38" pos:end="219:38"><literal type="number" pos:start="219:38" pos:end="219:38">8</literal></expr>]</index></name> <operator pos:start="219:41" pos:end="219:41">=</operator> <literal type="number" pos:start="219:43" pos:end="219:43">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="227:13" pos:end="227:25"><expr pos:start="227:13" pos:end="227:24"><name pos:start="227:13" pos:end="227:18"><name pos:start="227:13" pos:end="227:15">dst</name><index pos:start="227:16" pos:end="227:18">[<expr pos:start="227:17" pos:end="227:17"><literal type="number" pos:start="227:17" pos:end="227:17">0</literal></expr>]</index></name> <operator pos:start="227:20" pos:end="227:21">+=</operator> <literal type="number" pos:start="227:23" pos:end="227:24">16</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:24"><expr pos:start="229:13" pos:end="229:23"><name pos:start="229:13" pos:end="229:18"><name pos:start="229:13" pos:end="229:15">dst</name><index pos:start="229:16" pos:end="229:18">[<expr pos:start="229:17" pos:end="229:17"><literal type="number" pos:start="229:17" pos:end="229:17">1</literal></expr>]</index></name> <operator pos:start="229:20" pos:end="229:21">+=</operator> <literal type="number" pos:start="229:23" pos:end="229:23">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:24"><expr pos:start="231:13" pos:end="231:23"><name pos:start="231:13" pos:end="231:18"><name pos:start="231:13" pos:end="231:15">dst</name><index pos:start="231:16" pos:end="231:18">[<expr pos:start="231:17" pos:end="231:17"><literal type="number" pos:start="231:17" pos:end="231:17">2</literal></expr>]</index></name> <operator pos:start="231:20" pos:end="231:21">+=</operator> <literal type="number" pos:start="231:23" pos:end="231:23">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:17"><expr pos:start="233:13" pos:end="233:16"><name pos:start="233:13" pos:end="233:14">mb</name><operator pos:start="233:15" pos:end="233:16">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="237:9" pos:end="247:9"><if pos:start="237:9" pos:end="247:9">if <condition pos:start="237:12" pos:end="237:77">(<expr pos:start="237:13" pos:end="237:76"><name pos:start="237:13" pos:end="237:16">mb_y</name> <operator pos:start="237:18" pos:end="237:19">&amp;&amp;</operator> <name pos:start="237:21" pos:end="237:35"><name pos:start="237:21" pos:end="237:21">s</name><operator pos:start="237:22" pos:end="237:23">-&gt;</operator><name pos:start="237:24" pos:end="237:29">filter</name><operator pos:start="237:30" pos:end="237:30">.</operator><name pos:start="237:31" pos:end="237:35">level</name></name> <operator pos:start="237:37" pos:end="237:38">&amp;&amp;</operator> <name pos:start="237:40" pos:end="237:62"><name pos:start="237:40" pos:end="237:44">avctx</name><operator pos:start="237:45" pos:end="237:46">-&gt;</operator><name pos:start="237:47" pos:end="237:62">skip_loop_filter</name></name> <operator pos:start="237:64" pos:end="237:64">&lt;</operator> <name pos:start="237:66" pos:end="237:76">skip_thresh</name></expr>)</condition> <block pos:start="237:79" pos:end="247:9">{<block_content pos:start="239:13" pos:end="245:41">

            <if_stmt pos:start="239:13" pos:end="245:41"><if pos:start="239:13" pos:end="241:48">if <condition pos:start="239:16" pos:end="239:33">(<expr pos:start="239:17" pos:end="239:32"><name pos:start="239:17" pos:end="239:32"><name pos:start="239:17" pos:end="239:17">s</name><operator pos:start="239:18" pos:end="239:19">-&gt;</operator><name pos:start="239:20" pos:end="239:25">filter</name><operator pos:start="239:26" pos:end="239:26">.</operator><name pos:start="239:27" pos:end="239:32">simple</name></name></expr>)</condition><block type="pseudo" pos:start="241:17" pos:end="241:48"><block_content pos:start="241:17" pos:end="241:48">

                <expr_stmt pos:start="241:17" pos:end="241:48"><expr pos:start="241:17" pos:end="241:47"><call pos:start="241:17" pos:end="241:47"><name pos:start="241:17" pos:end="241:36">filter_mb_row_simple</name><argument_list pos:start="241:37" pos:end="241:47">(<argument pos:start="241:38" pos:end="241:38"><expr pos:start="241:38" pos:end="241:38"><name pos:start="241:38" pos:end="241:38">s</name></expr></argument>, <argument pos:start="241:41" pos:end="241:46"><expr pos:start="241:41" pos:end="241:46"><name pos:start="241:41" pos:end="241:44">mb_y</name><operator pos:start="241:45" pos:end="241:45">-</operator><literal type="number" pos:start="241:46" pos:end="241:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="243:13" pos:end="245:41">else<block type="pseudo" pos:start="245:17" pos:end="245:41"><block_content pos:start="245:17" pos:end="245:41">

                <expr_stmt pos:start="245:17" pos:end="245:41"><expr pos:start="245:17" pos:end="245:40"><call pos:start="245:17" pos:end="245:40"><name pos:start="245:17" pos:end="245:29">filter_mb_row</name><argument_list pos:start="245:30" pos:end="245:40">(<argument pos:start="245:31" pos:end="245:31"><expr pos:start="245:31" pos:end="245:31"><name pos:start="245:31" pos:end="245:31">s</name></expr></argument>, <argument pos:start="245:34" pos:end="245:39"><expr pos:start="245:34" pos:end="245:39"><name pos:start="245:34" pos:end="245:37">mb_y</name><operator pos:start="245:38" pos:end="245:38">-</operator><literal type="number" pos:start="245:39" pos:end="245:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="251:5" pos:end="261:5"><if pos:start="251:5" pos:end="261:5">if <condition pos:start="251:8" pos:end="251:65">(<expr pos:start="251:9" pos:end="251:64"><name pos:start="251:9" pos:end="251:23"><name pos:start="251:9" pos:end="251:9">s</name><operator pos:start="251:10" pos:end="251:11">-&gt;</operator><name pos:start="251:12" pos:end="251:17">filter</name><operator pos:start="251:18" pos:end="251:18">.</operator><name pos:start="251:19" pos:end="251:23">level</name></name> <operator pos:start="251:25" pos:end="251:26">&amp;&amp;</operator> <name pos:start="251:28" pos:end="251:50"><name pos:start="251:28" pos:end="251:32">avctx</name><operator pos:start="251:33" pos:end="251:34">-&gt;</operator><name pos:start="251:35" pos:end="251:50">skip_loop_filter</name></name> <operator pos:start="251:52" pos:end="251:52">&lt;</operator> <name pos:start="251:54" pos:end="251:64">skip_thresh</name></expr>)</condition> <block pos:start="251:67" pos:end="261:5">{<block_content pos:start="253:9" pos:end="259:37">

        <if_stmt pos:start="253:9" pos:end="259:37"><if pos:start="253:9" pos:end="255:44">if <condition pos:start="253:12" pos:end="253:29">(<expr pos:start="253:13" pos:end="253:28"><name pos:start="253:13" pos:end="253:28"><name pos:start="253:13" pos:end="253:13">s</name><operator pos:start="253:14" pos:end="253:15">-&gt;</operator><name pos:start="253:16" pos:end="253:21">filter</name><operator pos:start="253:22" pos:end="253:22">.</operator><name pos:start="253:23" pos:end="253:28">simple</name></name></expr>)</condition><block type="pseudo" pos:start="255:13" pos:end="255:44"><block_content pos:start="255:13" pos:end="255:44">

            <expr_stmt pos:start="255:13" pos:end="255:44"><expr pos:start="255:13" pos:end="255:43"><call pos:start="255:13" pos:end="255:43"><name pos:start="255:13" pos:end="255:32">filter_mb_row_simple</name><argument_list pos:start="255:33" pos:end="255:43">(<argument pos:start="255:34" pos:end="255:34"><expr pos:start="255:34" pos:end="255:34"><name pos:start="255:34" pos:end="255:34">s</name></expr></argument>, <argument pos:start="255:37" pos:end="255:42"><expr pos:start="255:37" pos:end="255:42"><name pos:start="255:37" pos:end="255:40">mb_y</name><operator pos:start="255:41" pos:end="255:41">-</operator><literal type="number" pos:start="255:42" pos:end="255:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="257:9" pos:end="259:37">else<block type="pseudo" pos:start="259:13" pos:end="259:37"><block_content pos:start="259:13" pos:end="259:37">

            <expr_stmt pos:start="259:13" pos:end="259:37"><expr pos:start="259:13" pos:end="259:36"><call pos:start="259:13" pos:end="259:36"><name pos:start="259:13" pos:end="259:25">filter_mb_row</name><argument_list pos:start="259:26" pos:end="259:36">(<argument pos:start="259:27" pos:end="259:27"><expr pos:start="259:27" pos:end="259:27"><name pos:start="259:27" pos:end="259:27">s</name></expr></argument>, <argument pos:start="259:30" pos:end="259:35"><expr pos:start="259:30" pos:end="259:35"><name pos:start="259:30" pos:end="259:33">mb_y</name><operator pos:start="259:34" pos:end="259:34">-</operator><literal type="number" pos:start="259:35" pos:end="259:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="265:1" pos:end="265:12"><name pos:start="265:1" pos:end="265:11">skip_decode</name>:</label>

    <comment type="line" pos:start="267:5" pos:end="267:60">// if future frames don't use the updated probabilities,</comment>

    <comment type="line" pos:start="269:5" pos:end="269:40">// reset them to the values we saved</comment>

    <if_stmt pos:start="271:5" pos:end="273:32"><if pos:start="271:5" pos:end="273:32">if <condition pos:start="271:8" pos:end="271:33">(<expr pos:start="271:9" pos:end="271:32"><operator pos:start="271:9" pos:end="271:9">!</operator><name pos:start="271:10" pos:end="271:32"><name pos:start="271:10" pos:end="271:10">s</name><operator pos:start="271:11" pos:end="271:12">-&gt;</operator><name pos:start="271:13" pos:end="271:32">update_probabilities</name></name></expr>)</condition><block type="pseudo" pos:start="273:9" pos:end="273:32"><block_content pos:start="273:9" pos:end="273:32">

        <expr_stmt pos:start="273:9" pos:end="273:32"><expr pos:start="273:9" pos:end="273:31"><name pos:start="273:9" pos:end="273:18"><name pos:start="273:9" pos:end="273:9">s</name><operator pos:start="273:10" pos:end="273:11">-&gt;</operator><name pos:start="273:12" pos:end="273:15">prob</name><index pos:start="273:16" pos:end="273:18">[<expr pos:start="273:17" pos:end="273:17"><literal type="number" pos:start="273:17" pos:end="273:17">0</literal></expr>]</index></name> <operator pos:start="273:20" pos:end="273:20">=</operator> <name pos:start="273:22" pos:end="273:31"><name pos:start="273:22" pos:end="273:22">s</name><operator pos:start="273:23" pos:end="273:24">-&gt;</operator><name pos:start="273:25" pos:end="273:28">prob</name><index pos:start="273:29" pos:end="273:31">[<expr pos:start="273:30" pos:end="273:30"><literal type="number" pos:start="273:30" pos:end="273:30">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="277:5" pos:end="277:45">// check if golden and altref are swapped</comment>

    <if_stmt pos:start="279:5" pos:end="297:5"><if pos:start="279:5" pos:end="283:87">if <condition pos:start="279:8" pos:end="281:47">(<expr pos:start="279:9" pos:end="281:46"><name pos:start="279:9" pos:end="279:24"><name pos:start="279:9" pos:end="279:9">s</name><operator pos:start="279:10" pos:end="279:11">-&gt;</operator><name pos:start="279:12" pos:end="279:24">update_altref</name></name> <operator pos:start="279:26" pos:end="279:27">==</operator> <name pos:start="279:29" pos:end="279:45">VP56_FRAME_GOLDEN</name> <operator pos:start="279:47" pos:end="279:48">&amp;&amp;</operator>

        <name pos:start="281:9" pos:end="281:24"><name pos:start="281:9" pos:end="281:9">s</name><operator pos:start="281:10" pos:end="281:11">-&gt;</operator><name pos:start="281:12" pos:end="281:24">update_golden</name></name> <operator pos:start="281:26" pos:end="281:27">==</operator> <name pos:start="281:29" pos:end="281:46">VP56_FRAME_GOLDEN2</name></expr>)</condition><block type="pseudo" pos:start="283:9" pos:end="283:87"><block_content pos:start="283:9" pos:end="283:87">

        <expr_stmt pos:start="283:9" pos:end="283:87"><expr pos:start="283:9" pos:end="283:86"><call pos:start="283:9" pos:end="283:86"><name pos:start="283:9" pos:end="283:14">FFSWAP</name><argument_list pos:start="283:15" pos:end="283:86">(<argument pos:start="283:16" pos:end="283:24"><expr pos:start="283:16" pos:end="283:24"><name pos:start="283:16" pos:end="283:22">AVFrame</name> <operator pos:start="283:24" pos:end="283:24">*</operator></expr></argument>, <argument pos:start="283:27" pos:end="283:54"><expr pos:start="283:27" pos:end="283:54"><name pos:start="283:27" pos:end="283:54"><name pos:start="283:27" pos:end="283:27">s</name><operator pos:start="283:28" pos:end="283:29">-&gt;</operator><name pos:start="283:30" pos:end="283:35">framep</name><index pos:start="283:36" pos:end="283:54">[<expr pos:start="283:37" pos:end="283:53"><name pos:start="283:37" pos:end="283:53">VP56_FRAME_GOLDEN</name></expr>]</index></name></expr></argument>, <argument pos:start="283:57" pos:end="283:85"><expr pos:start="283:57" pos:end="283:85"><name pos:start="283:57" pos:end="283:85"><name pos:start="283:57" pos:end="283:57">s</name><operator pos:start="283:58" pos:end="283:59">-&gt;</operator><name pos:start="283:60" pos:end="283:65">framep</name><index pos:start="283:66" pos:end="283:85">[<expr pos:start="283:67" pos:end="283:84"><name pos:start="283:67" pos:end="283:84">VP56_FRAME_GOLDEN2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="285:5" pos:end="297:5">else <block pos:start="285:10" pos:end="297:5">{<block_content pos:start="287:9" pos:end="295:71">

        <if_stmt pos:start="287:9" pos:end="289:72"><if pos:start="287:9" pos:end="289:72">if <condition pos:start="287:12" pos:end="287:48">(<expr pos:start="287:13" pos:end="287:47"><name pos:start="287:13" pos:end="287:28"><name pos:start="287:13" pos:end="287:13">s</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:28">update_altref</name></name> <operator pos:start="287:30" pos:end="287:31">!=</operator> <name pos:start="287:33" pos:end="287:47">VP56_FRAME_NONE</name></expr>)</condition><block type="pseudo" pos:start="289:13" pos:end="289:72"><block_content pos:start="289:13" pos:end="289:72">

            <expr_stmt pos:start="289:13" pos:end="289:72"><expr pos:start="289:13" pos:end="289:71"><name pos:start="289:13" pos:end="289:41"><name pos:start="289:13" pos:end="289:13">s</name><operator pos:start="289:14" pos:end="289:15">-&gt;</operator><name pos:start="289:16" pos:end="289:21">framep</name><index pos:start="289:22" pos:end="289:41">[<expr pos:start="289:23" pos:end="289:40"><name pos:start="289:23" pos:end="289:40">VP56_FRAME_GOLDEN2</name></expr>]</index></name> <operator pos:start="289:43" pos:end="289:43">=</operator> <name pos:start="289:45" pos:end="289:71"><name pos:start="289:45" pos:end="289:45">s</name><operator pos:start="289:46" pos:end="289:47">-&gt;</operator><name pos:start="289:48" pos:end="289:53">framep</name><index pos:start="289:54" pos:end="289:71">[<expr pos:start="289:55" pos:end="289:70"><name pos:start="289:55" pos:end="289:70"><name pos:start="289:55" pos:end="289:55">s</name><operator pos:start="289:56" pos:end="289:57">-&gt;</operator><name pos:start="289:58" pos:end="289:70">update_altref</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="293:9" pos:end="295:71"><if pos:start="293:9" pos:end="295:71">if <condition pos:start="293:12" pos:end="293:48">(<expr pos:start="293:13" pos:end="293:47"><name pos:start="293:13" pos:end="293:28"><name pos:start="293:13" pos:end="293:13">s</name><operator pos:start="293:14" pos:end="293:15">-&gt;</operator><name pos:start="293:16" pos:end="293:28">update_golden</name></name> <operator pos:start="293:30" pos:end="293:31">!=</operator> <name pos:start="293:33" pos:end="293:47">VP56_FRAME_NONE</name></expr>)</condition><block type="pseudo" pos:start="295:13" pos:end="295:71"><block_content pos:start="295:13" pos:end="295:71">

            <expr_stmt pos:start="295:13" pos:end="295:71"><expr pos:start="295:13" pos:end="295:70"><name pos:start="295:13" pos:end="295:40"><name pos:start="295:13" pos:end="295:13">s</name><operator pos:start="295:14" pos:end="295:15">-&gt;</operator><name pos:start="295:16" pos:end="295:21">framep</name><index pos:start="295:22" pos:end="295:40">[<expr pos:start="295:23" pos:end="295:39"><name pos:start="295:23" pos:end="295:39">VP56_FRAME_GOLDEN</name></expr>]</index></name> <operator pos:start="295:42" pos:end="295:42">=</operator> <name pos:start="295:44" pos:end="295:70"><name pos:start="295:44" pos:end="295:44">s</name><operator pos:start="295:45" pos:end="295:46">-&gt;</operator><name pos:start="295:47" pos:end="295:52">framep</name><index pos:start="295:53" pos:end="295:70">[<expr pos:start="295:54" pos:end="295:69"><name pos:start="295:54" pos:end="295:69"><name pos:start="295:54" pos:end="295:54">s</name><operator pos:start="295:55" pos:end="295:56">-&gt;</operator><name pos:start="295:57" pos:end="295:69">update_golden</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="301:5" pos:end="303:71"><if pos:start="301:5" pos:end="303:71">if <condition pos:start="301:8" pos:end="301:23">(<expr pos:start="301:9" pos:end="301:22"><name pos:start="301:9" pos:end="301:22"><name pos:start="301:9" pos:end="301:9">s</name><operator pos:start="301:10" pos:end="301:11">-&gt;</operator><name pos:start="301:12" pos:end="301:22">update_last</name></name></expr>)</condition><block type="pseudo" pos:start="303:9" pos:end="303:71"><block_content pos:start="303:9" pos:end="303:71"> <comment type="line" pos:start="301:25" pos:end="301:41">// move cur-&gt;prev</comment>

        <expr_stmt pos:start="303:9" pos:end="303:71"><expr pos:start="303:9" pos:end="303:70"><name pos:start="303:9" pos:end="303:38"><name pos:start="303:9" pos:end="303:9">s</name><operator pos:start="303:10" pos:end="303:11">-&gt;</operator><name pos:start="303:12" pos:end="303:17">framep</name><index pos:start="303:18" pos:end="303:38">[<expr pos:start="303:19" pos:end="303:37"><name pos:start="303:19" pos:end="303:37">VP56_FRAME_PREVIOUS</name></expr>]</index></name> <operator pos:start="303:40" pos:end="303:40">=</operator> <name pos:start="303:42" pos:end="303:70"><name pos:start="303:42" pos:end="303:42">s</name><operator pos:start="303:43" pos:end="303:44">-&gt;</operator><name pos:start="303:45" pos:end="303:50">framep</name><index pos:start="303:51" pos:end="303:70">[<expr pos:start="303:52" pos:end="303:69"><name pos:start="303:52" pos:end="303:69">VP56_FRAME_CURRENT</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="307:5" pos:end="307:42">// release no longer referenced frames</comment>

    <for pos:start="309:5" pos:end="321:56">for <control pos:start="309:9" pos:end="309:27">(<init pos:start="309:10" pos:end="309:15"><expr pos:start="309:10" pos:end="309:14"><name pos:start="309:10" pos:end="309:10">i</name> <operator pos:start="309:12" pos:end="309:12">=</operator> <literal type="number" pos:start="309:14" pos:end="309:14">0</literal></expr>;</init> <condition pos:start="309:17" pos:end="309:22"><expr pos:start="309:17" pos:end="309:21"><name pos:start="309:17" pos:end="309:17">i</name> <operator pos:start="309:19" pos:end="309:19">&lt;</operator> <literal type="number" pos:start="309:21" pos:end="309:21">4</literal></expr>;</condition> <incr pos:start="309:24" pos:end="309:26"><expr pos:start="309:24" pos:end="309:26"><name pos:start="309:24" pos:end="309:24">i</name><operator pos:start="309:25" pos:end="309:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="311:9" pos:end="321:56"><block_content pos:start="311:9" pos:end="321:56">

        <if_stmt pos:start="311:9" pos:end="321:56"><if pos:start="311:9" pos:end="321:56">if <condition pos:start="311:12" pos:end="319:59">(<expr pos:start="311:13" pos:end="319:58"><name pos:start="311:13" pos:end="311:24"><name pos:start="311:13" pos:end="311:13">s</name><operator pos:start="311:14" pos:end="311:15">-&gt;</operator><name pos:start="311:16" pos:end="311:21">frames</name><index pos:start="311:22" pos:end="311:24">[<expr pos:start="311:23" pos:end="311:23"><name pos:start="311:23" pos:end="311:23">i</name></expr>]</index></name><operator pos:start="311:25" pos:end="311:25">.</operator><name pos:start="311:26" pos:end="311:32"><name pos:start="311:26" pos:end="311:29">data</name><index pos:start="311:30" pos:end="311:32">[<expr pos:start="311:31" pos:end="311:31"><literal type="number" pos:start="311:31" pos:end="311:31">0</literal></expr>]</index></name> <operator pos:start="311:34" pos:end="311:35">&amp;&amp;</operator>

            <operator pos:start="313:13" pos:end="313:13">&amp;</operator><name pos:start="313:14" pos:end="313:25"><name pos:start="313:14" pos:end="313:14">s</name><operator pos:start="313:15" pos:end="313:16">-&gt;</operator><name pos:start="313:17" pos:end="313:22">frames</name><index pos:start="313:23" pos:end="313:25">[<expr pos:start="313:24" pos:end="313:24"><name pos:start="313:24" pos:end="313:24">i</name></expr>]</index></name> <operator pos:start="313:27" pos:end="313:28">!=</operator> <name pos:start="313:30" pos:end="313:58"><name pos:start="313:30" pos:end="313:30">s</name><operator pos:start="313:31" pos:end="313:32">-&gt;</operator><name pos:start="313:33" pos:end="313:38">framep</name><index pos:start="313:39" pos:end="313:58">[<expr pos:start="313:40" pos:end="313:57"><name pos:start="313:40" pos:end="313:57">VP56_FRAME_CURRENT</name></expr>]</index></name> <operator pos:start="313:60" pos:end="313:61">&amp;&amp;</operator>

            <operator pos:start="315:13" pos:end="315:13">&amp;</operator><name pos:start="315:14" pos:end="315:25"><name pos:start="315:14" pos:end="315:14">s</name><operator pos:start="315:15" pos:end="315:16">-&gt;</operator><name pos:start="315:17" pos:end="315:22">frames</name><index pos:start="315:23" pos:end="315:25">[<expr pos:start="315:24" pos:end="315:24"><name pos:start="315:24" pos:end="315:24">i</name></expr>]</index></name> <operator pos:start="315:27" pos:end="315:28">!=</operator> <name pos:start="315:30" pos:end="315:59"><name pos:start="315:30" pos:end="315:30">s</name><operator pos:start="315:31" pos:end="315:32">-&gt;</operator><name pos:start="315:33" pos:end="315:38">framep</name><index pos:start="315:39" pos:end="315:59">[<expr pos:start="315:40" pos:end="315:58"><name pos:start="315:40" pos:end="315:58">VP56_FRAME_PREVIOUS</name></expr>]</index></name> <operator pos:start="315:61" pos:end="315:62">&amp;&amp;</operator>

            <operator pos:start="317:13" pos:end="317:13">&amp;</operator><name pos:start="317:14" pos:end="317:25"><name pos:start="317:14" pos:end="317:14">s</name><operator pos:start="317:15" pos:end="317:16">-&gt;</operator><name pos:start="317:17" pos:end="317:22">frames</name><index pos:start="317:23" pos:end="317:25">[<expr pos:start="317:24" pos:end="317:24"><name pos:start="317:24" pos:end="317:24">i</name></expr>]</index></name> <operator pos:start="317:27" pos:end="317:28">!=</operator> <name pos:start="317:30" pos:end="317:57"><name pos:start="317:30" pos:end="317:30">s</name><operator pos:start="317:31" pos:end="317:32">-&gt;</operator><name pos:start="317:33" pos:end="317:38">framep</name><index pos:start="317:39" pos:end="317:57">[<expr pos:start="317:40" pos:end="317:56"><name pos:start="317:40" pos:end="317:56">VP56_FRAME_GOLDEN</name></expr>]</index></name> <operator pos:start="317:59" pos:end="317:60">&amp;&amp;</operator>

            <operator pos:start="319:13" pos:end="319:13">&amp;</operator><name pos:start="319:14" pos:end="319:25"><name pos:start="319:14" pos:end="319:14">s</name><operator pos:start="319:15" pos:end="319:16">-&gt;</operator><name pos:start="319:17" pos:end="319:22">frames</name><index pos:start="319:23" pos:end="319:25">[<expr pos:start="319:24" pos:end="319:24"><name pos:start="319:24" pos:end="319:24">i</name></expr>]</index></name> <operator pos:start="319:27" pos:end="319:28">!=</operator> <name pos:start="319:30" pos:end="319:58"><name pos:start="319:30" pos:end="319:30">s</name><operator pos:start="319:31" pos:end="319:32">-&gt;</operator><name pos:start="319:33" pos:end="319:38">framep</name><index pos:start="319:39" pos:end="319:58">[<expr pos:start="319:40" pos:end="319:57"><name pos:start="319:40" pos:end="319:57">VP56_FRAME_GOLDEN2</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="321:13" pos:end="321:56"><block_content pos:start="321:13" pos:end="321:56">

            <expr_stmt pos:start="321:13" pos:end="321:56"><expr pos:start="321:13" pos:end="321:55"><call pos:start="321:13" pos:end="321:55"><name pos:start="321:13" pos:end="321:33"><name pos:start="321:13" pos:end="321:17">avctx</name><operator pos:start="321:18" pos:end="321:19">-&gt;</operator><name pos:start="321:20" pos:end="321:33">release_buffer</name></name><argument_list pos:start="321:34" pos:end="321:55">(<argument pos:start="321:35" pos:end="321:39"><expr pos:start="321:35" pos:end="321:39"><name pos:start="321:35" pos:end="321:39">avctx</name></expr></argument>, <argument pos:start="321:42" pos:end="321:54"><expr pos:start="321:42" pos:end="321:54"><operator pos:start="321:42" pos:end="321:42">&amp;</operator><name pos:start="321:43" pos:end="321:54"><name pos:start="321:43" pos:end="321:43">s</name><operator pos:start="321:44" pos:end="321:45">-&gt;</operator><name pos:start="321:46" pos:end="321:51">frames</name><index pos:start="321:52" pos:end="321:54">[<expr pos:start="321:53" pos:end="321:53"><name pos:start="321:53" pos:end="321:53">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



    <if_stmt pos:start="325:5" pos:end="331:5"><if pos:start="325:5" pos:end="331:5">if <condition pos:start="325:8" pos:end="325:22">(<expr pos:start="325:9" pos:end="325:21"><operator pos:start="325:9" pos:end="325:9">!</operator><name pos:start="325:10" pos:end="325:21"><name pos:start="325:10" pos:end="325:10">s</name><operator pos:start="325:11" pos:end="325:12">-&gt;</operator><name pos:start="325:13" pos:end="325:21">invisible</name></name></expr>)</condition> <block pos:start="325:24" pos:end="331:5">{<block_content pos:start="327:9" pos:end="329:37">

        <expr_stmt pos:start="327:9" pos:end="327:57"><expr pos:start="327:9" pos:end="327:56"><operator pos:start="327:9" pos:end="327:9">*</operator><operator pos:start="327:10" pos:end="327:10">(</operator><name pos:start="327:11" pos:end="327:17">AVFrame</name><operator pos:start="327:18" pos:end="327:18">*</operator><operator pos:start="327:19" pos:end="327:19">)</operator><name pos:start="327:20" pos:end="327:23">data</name> <operator pos:start="327:25" pos:end="327:25">=</operator> <operator pos:start="327:27" pos:end="327:27">*</operator><name pos:start="327:28" pos:end="327:56"><name pos:start="327:28" pos:end="327:28">s</name><operator pos:start="327:29" pos:end="327:30">-&gt;</operator><name pos:start="327:31" pos:end="327:36">framep</name><index pos:start="327:37" pos:end="327:56">[<expr pos:start="327:38" pos:end="327:55"><name pos:start="327:38" pos:end="327:55">VP56_FRAME_CURRENT</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="329:9" pos:end="329:37"><expr pos:start="329:9" pos:end="329:36"><operator pos:start="329:9" pos:end="329:9">*</operator><name pos:start="329:10" pos:end="329:18">data_size</name> <operator pos:start="329:20" pos:end="329:20">=</operator> <sizeof pos:start="329:22" pos:end="329:36">sizeof<argument_list pos:start="329:28" pos:end="329:36">(<argument pos:start="329:29" pos:end="329:35"><expr pos:start="329:29" pos:end="329:35"><name pos:start="329:29" pos:end="329:35">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="335:5" pos:end="335:23">return <expr pos:start="335:12" pos:end="335:22"><name pos:start="335:12" pos:end="335:22"><name pos:start="335:12" pos:end="335:16">avpkt</name><operator pos:start="335:17" pos:end="335:18">-&gt;</operator><name pos:start="335:19" pos:end="335:22">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
