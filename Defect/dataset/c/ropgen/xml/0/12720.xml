<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12720.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">QObject</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:27">parse_value</name><parameter_list pos:start="1:28" pos:end="1:81">(<parameter pos:start="1:29" pos:end="1:51"><decl pos:start="1:29" pos:end="1:51"><type pos:start="1:29" pos:end="1:51"><name pos:start="1:29" pos:end="1:45">JSONParserContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:51">ctxt</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:67"><decl pos:start="1:54" pos:end="1:67"><type pos:start="1:54" pos:end="1:67"><name pos:start="1:54" pos:end="1:58">QList</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier><modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:67">tokens</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:80"><decl pos:start="1:70" pos:end="1:80"><type pos:start="1:70" pos:end="1:80"><name pos:start="1:70" pos:end="1:76">va_list</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:80">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:15">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">QObject</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">obj</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:41"><expr pos:start="9:5" pos:end="9:40"><name pos:start="9:5" pos:end="9:7">obj</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:40"><name pos:start="9:11" pos:end="9:22">parse_object</name><argument_list pos:start="9:23" pos:end="9:40">(<argument pos:start="9:24" pos:end="9:27"><expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">ctxt</name></expr></argument>, <argument pos:start="9:30" pos:end="9:35"><expr pos:start="9:30" pos:end="9:35"><name pos:start="9:30" pos:end="9:35">tokens</name></expr></argument>, <argument pos:start="9:38" pos:end="9:39"><expr pos:start="9:38" pos:end="9:39"><name pos:start="9:38" pos:end="9:39">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:20">(<expr pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:11">obj</name> <operator pos:start="11:13" pos:end="11:14">==</operator> <name pos:start="11:16" pos:end="11:19">NULL</name></expr>)</condition> <block pos:start="11:22" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:44">

        <expr_stmt pos:start="13:9" pos:end="13:44"><expr pos:start="13:9" pos:end="13:43"><name pos:start="13:9" pos:end="13:11">obj</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:43"><name pos:start="13:15" pos:end="13:25">parse_array</name><argument_list pos:start="13:26" pos:end="13:43">(<argument pos:start="13:27" pos:end="13:30"><expr pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:30">ctxt</name></expr></argument>, <argument pos:start="13:33" pos:end="13:38"><expr pos:start="13:33" pos:end="13:38"><name pos:start="13:33" pos:end="13:38">tokens</name></expr></argument>, <argument pos:start="13:41" pos:end="13:42"><expr pos:start="13:41" pos:end="13:42"><name pos:start="13:41" pos:end="13:42">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:20">(<expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:11">obj</name> <operator pos:start="17:13" pos:end="17:14">==</operator> <name pos:start="17:16" pos:end="17:19">NULL</name></expr>)</condition> <block pos:start="17:22" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:45">

        <expr_stmt pos:start="19:9" pos:end="19:45"><expr pos:start="19:9" pos:end="19:44"><name pos:start="19:9" pos:end="19:11">obj</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:44"><name pos:start="19:15" pos:end="19:26">parse_escape</name><argument_list pos:start="19:27" pos:end="19:44">(<argument pos:start="19:28" pos:end="19:31"><expr pos:start="19:28" pos:end="19:31"><name pos:start="19:28" pos:end="19:31">ctxt</name></expr></argument>, <argument pos:start="19:34" pos:end="19:39"><expr pos:start="19:34" pos:end="19:39"><name pos:start="19:34" pos:end="19:39">tokens</name></expr></argument>, <argument pos:start="19:42" pos:end="19:43"><expr pos:start="19:42" pos:end="19:43"><name pos:start="19:42" pos:end="19:43">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:11">obj</name> <operator pos:start="23:13" pos:end="23:14">==</operator> <name pos:start="23:16" pos:end="23:19">NULL</name></expr>)</condition> <block pos:start="23:22" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:42">

        <expr_stmt pos:start="25:9" pos:end="25:42"><expr pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:11">obj</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:41"><name pos:start="25:15" pos:end="25:27">parse_keyword</name><argument_list pos:start="25:28" pos:end="25:41">(<argument pos:start="25:29" pos:end="25:32"><expr pos:start="25:29" pos:end="25:32"><name pos:start="25:29" pos:end="25:32">ctxt</name></expr></argument>, <argument pos:start="25:35" pos:end="25:40"><expr pos:start="25:35" pos:end="25:40"><name pos:start="25:35" pos:end="25:40">tokens</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt> 

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:20">(<expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:11">obj</name> <operator pos:start="29:13" pos:end="29:14">==</operator> <name pos:start="29:16" pos:end="29:19">NULL</name></expr>)</condition> <block pos:start="29:22" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:42">

        <expr_stmt pos:start="31:9" pos:end="31:42"><expr pos:start="31:9" pos:end="31:41"><name pos:start="31:9" pos:end="31:11">obj</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:41"><name pos:start="31:15" pos:end="31:27">parse_literal</name><argument_list pos:start="31:28" pos:end="31:41">(<argument pos:start="31:29" pos:end="31:32"><expr pos:start="31:29" pos:end="31:32"><name pos:start="31:29" pos:end="31:32">ctxt</name></expr></argument>, <argument pos:start="31:35" pos:end="31:40"><expr pos:start="31:35" pos:end="31:40"><name pos:start="31:35" pos:end="31:40">tokens</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="37:5" pos:end="37:15">return <expr pos:start="37:12" pos:end="37:14"><name pos:start="37:12" pos:end="37:14">obj</name></expr>;</return>

</block_content>}</block></function>
</unit>
