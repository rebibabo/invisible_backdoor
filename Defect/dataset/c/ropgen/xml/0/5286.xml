<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5286.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">qmp_pc_dimm_device_list</name><parameter_list pos:start="1:28" pos:end="1:54">(<parameter pos:start="1:29" pos:end="1:39"><decl pos:start="1:29" pos:end="1:39"><type pos:start="1:29" pos:end="1:39"><name pos:start="1:29" pos:end="1:34">Object</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">obj</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:53"><decl pos:start="1:42" pos:end="1:53"><type pos:start="1:42" pos:end="1:53"><name pos:start="1:42" pos:end="1:45">void</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:53">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:13">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:28"><name pos:start="5:5" pos:end="5:24">MemoryDeviceInfoList</name> <modifier pos:start="5:26" pos:end="5:26">*</modifier><modifier pos:start="5:27" pos:end="5:27">*</modifier><modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:32">prev</name> <init pos:start="5:34" pos:end="5:41">= <expr pos:start="5:36" pos:end="5:41"><name pos:start="5:36" pos:end="5:41">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="67:5"><if pos:start="9:5" pos:end="67:5">if <condition pos:start="9:8" pos:end="9:47">(<expr pos:start="9:9" pos:end="9:46"><call pos:start="9:9" pos:end="9:46"><name pos:start="9:9" pos:end="9:27">object_dynamic_cast</name><argument_list pos:start="9:28" pos:end="9:46">(<argument pos:start="9:29" pos:end="9:31"><expr pos:start="9:29" pos:end="9:31"><name pos:start="9:29" pos:end="9:31">obj</name></expr></argument>, <argument pos:start="9:34" pos:end="9:45"><expr pos:start="9:34" pos:end="9:45"><name pos:start="9:34" pos:end="9:45">TYPE_PC_DIMM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:49" pos:end="67:5">{<block_content pos:start="11:9" pos:end="65:9">

        <decl_stmt pos:start="11:9" pos:end="11:39"><decl pos:start="11:9" pos:end="11:38"><type pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:19">DeviceState</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:24">dev</name> <init pos:start="11:26" pos:end="11:38">= <expr pos:start="11:28" pos:end="11:38"><call pos:start="11:28" pos:end="11:38"><name pos:start="11:28" pos:end="11:33">DEVICE</name><argument_list pos:start="11:34" pos:end="11:38">(<argument pos:start="11:35" pos:end="11:37"><expr pos:start="11:35" pos:end="11:37"><name pos:start="11:35" pos:end="11:37">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="15:9" pos:end="65:9"><if pos:start="15:9" pos:end="65:9">if <condition pos:start="15:12" pos:end="15:26">(<expr pos:start="15:13" pos:end="15:25"><name pos:start="15:13" pos:end="15:25"><name pos:start="15:13" pos:end="15:15">dev</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:25">realized</name></name></expr>)</condition> <block pos:start="15:28" pos:end="65:9">{<block_content pos:start="17:13" pos:end="63:32">

            <decl_stmt pos:start="17:13" pos:end="17:73"><decl pos:start="17:13" pos:end="17:72"><type pos:start="17:13" pos:end="17:34"><name pos:start="17:13" pos:end="17:32">MemoryDeviceInfoList</name> <modifier pos:start="17:34" pos:end="17:34">*</modifier></type><name pos:start="17:35" pos:end="17:38">elem</name> <init pos:start="17:40" pos:end="17:72">= <expr pos:start="17:42" pos:end="17:72"><call pos:start="17:42" pos:end="17:72"><name pos:start="17:42" pos:end="17:47">g_new0</name><argument_list pos:start="17:48" pos:end="17:72">(<argument pos:start="17:49" pos:end="17:68"><expr pos:start="17:49" pos:end="17:68"><name pos:start="17:49" pos:end="17:68">MemoryDeviceInfoList</name></expr></argument>, <argument pos:start="17:71" pos:end="17:71"><expr pos:start="17:71" pos:end="17:71"><literal type="number" pos:start="17:71" pos:end="17:71">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="19:13" pos:end="19:65"><decl pos:start="19:13" pos:end="19:64"><type pos:start="19:13" pos:end="19:30"><name pos:start="19:13" pos:end="19:28">MemoryDeviceInfo</name> <modifier pos:start="19:30" pos:end="19:30">*</modifier></type><name pos:start="19:31" pos:end="19:34">info</name> <init pos:start="19:36" pos:end="19:64">= <expr pos:start="19:38" pos:end="19:64"><call pos:start="19:38" pos:end="19:64"><name pos:start="19:38" pos:end="19:43">g_new0</name><argument_list pos:start="19:44" pos:end="19:64">(<argument pos:start="19:45" pos:end="19:60"><expr pos:start="19:45" pos:end="19:60"><name pos:start="19:45" pos:end="19:60">MemoryDeviceInfo</name></expr></argument>, <argument pos:start="19:63" pos:end="19:63"><expr pos:start="19:63" pos:end="19:63"><literal type="number" pos:start="19:63" pos:end="19:63">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="21:13" pos:end="21:63"><decl pos:start="21:13" pos:end="21:62"><type pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:28">PCDIMMDeviceInfo</name> <modifier pos:start="21:30" pos:end="21:30">*</modifier></type><name pos:start="21:31" pos:end="21:32">di</name> <init pos:start="21:34" pos:end="21:62">= <expr pos:start="21:36" pos:end="21:62"><call pos:start="21:36" pos:end="21:62"><name pos:start="21:36" pos:end="21:41">g_new0</name><argument_list pos:start="21:42" pos:end="21:62">(<argument pos:start="21:43" pos:end="21:58"><expr pos:start="21:43" pos:end="21:58"><name pos:start="21:43" pos:end="21:58">PCDIMMDeviceInfo</name></expr></argument>, <argument pos:start="21:61" pos:end="21:61"><expr pos:start="21:61" pos:end="21:61"><literal type="number" pos:start="21:61" pos:end="21:61">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="23:13" pos:end="23:52"><decl pos:start="23:13" pos:end="23:51"><type pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:23">DeviceClass</name> <modifier pos:start="23:25" pos:end="23:25">*</modifier></type><name pos:start="23:26" pos:end="23:27">dc</name> <init pos:start="23:29" pos:end="23:51">= <expr pos:start="23:31" pos:end="23:51"><call pos:start="23:31" pos:end="23:51"><name pos:start="23:31" pos:end="23:46">DEVICE_GET_CLASS</name><argument_list pos:start="23:47" pos:end="23:51">(<argument pos:start="23:48" pos:end="23:50"><expr pos:start="23:48" pos:end="23:50"><name pos:start="23:48" pos:end="23:50">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="25:13" pos:end="25:46"><decl pos:start="25:13" pos:end="25:45"><type pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:24">PCDIMMDevice</name> <modifier pos:start="25:26" pos:end="25:26">*</modifier></type><name pos:start="25:27" pos:end="25:30">dimm</name> <init pos:start="25:32" pos:end="25:45">= <expr pos:start="25:34" pos:end="25:45"><call pos:start="25:34" pos:end="25:45"><name pos:start="25:34" pos:end="25:40">PC_DIMM</name><argument_list pos:start="25:41" pos:end="25:45">(<argument pos:start="25:42" pos:end="25:44"><expr pos:start="25:42" pos:end="25:44"><name pos:start="25:42" pos:end="25:44">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="29:13" pos:end="35:13"><if pos:start="29:13" pos:end="35:13">if <condition pos:start="29:16" pos:end="29:24">(<expr pos:start="29:17" pos:end="29:23"><name pos:start="29:17" pos:end="29:23"><name pos:start="29:17" pos:end="29:19">dev</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:23">id</name></name></expr>)</condition> <block pos:start="29:26" pos:end="35:13">{<block_content pos:start="31:17" pos:end="33:43">

                <expr_stmt pos:start="31:17" pos:end="31:34"><expr pos:start="31:17" pos:end="31:33"><name pos:start="31:17" pos:end="31:26"><name pos:start="31:17" pos:end="31:18">di</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:26">has_id</name></name> <operator pos:start="31:28" pos:end="31:28">=</operator> <name pos:start="31:30" pos:end="31:33">true</name></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:43"><expr pos:start="33:17" pos:end="33:42"><name pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:18">di</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:22">id</name></name> <operator pos:start="33:24" pos:end="33:24">=</operator> <call pos:start="33:26" pos:end="33:42"><name pos:start="33:26" pos:end="33:33">g_strdup</name><argument_list pos:start="33:34" pos:end="33:42">(<argument pos:start="33:35" pos:end="33:41"><expr pos:start="33:35" pos:end="33:41"><name pos:start="33:35" pos:end="33:41"><name pos:start="33:35" pos:end="33:37">dev</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:41">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:45"><expr pos:start="37:13" pos:end="37:44"><name pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:14">di</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:26">hotplugged</name></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <name pos:start="37:30" pos:end="37:44"><name pos:start="37:30" pos:end="37:32">dev</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:44">hotplugged</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:48"><expr pos:start="39:13" pos:end="39:47"><name pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:14">di</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:28">hotpluggable</name></name> <operator pos:start="39:30" pos:end="39:30">=</operator> <name pos:start="39:32" pos:end="39:47"><name pos:start="39:32" pos:end="39:33">dc</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:47">hotpluggable</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:34"><expr pos:start="41:13" pos:end="41:33"><name pos:start="41:13" pos:end="41:20"><name pos:start="41:13" pos:end="41:14">di</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:20">addr</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <name pos:start="41:24" pos:end="41:33"><name pos:start="41:24" pos:end="41:27">dimm</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:33">addr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:34"><expr pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:14">di</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:20">slot</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:33"><name pos:start="43:24" pos:end="43:27">dimm</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:33">slot</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:34"><expr pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:14">di</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:20">node</name></name> <operator pos:start="45:22" pos:end="45:22">=</operator> <name pos:start="45:24" pos:end="45:33"><name pos:start="45:24" pos:end="45:27">dimm</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:33">node</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="49:53"><expr pos:start="47:13" pos:end="49:52"><name pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:14">di</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:20">size</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <call pos:start="47:24" pos:end="49:52"><name pos:start="47:24" pos:end="47:46">object_property_get_int</name><argument_list pos:start="47:47" pos:end="49:52">(<argument pos:start="47:48" pos:end="47:59"><expr pos:start="47:48" pos:end="47:59"><call pos:start="47:48" pos:end="47:59"><name pos:start="47:48" pos:end="47:53">OBJECT</name><argument_list pos:start="47:54" pos:end="47:59">(<argument pos:start="47:55" pos:end="47:58"><expr pos:start="47:55" pos:end="47:58"><name pos:start="47:55" pos:end="47:58">dimm</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:62" pos:end="47:78"><expr pos:start="47:62" pos:end="47:78"><name pos:start="47:62" pos:end="47:78">PC_DIMM_SIZE_PROP</name></expr></argument>,

                                               <argument pos:start="49:48" pos:end="49:51"><expr pos:start="49:48" pos:end="49:51"><name pos:start="49:48" pos:end="49:51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:74"><expr pos:start="51:13" pos:end="51:73"><name pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:14">di</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:22">memdev</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <call pos:start="51:26" pos:end="51:73"><name pos:start="51:26" pos:end="51:50">object_get_canonical_path</name><argument_list pos:start="51:51" pos:end="51:73">(<argument pos:start="51:52" pos:end="51:72"><expr pos:start="51:52" pos:end="51:72"><call pos:start="51:52" pos:end="51:72"><name pos:start="51:52" pos:end="51:57">OBJECT</name><argument_list pos:start="51:58" pos:end="51:72">(<argument pos:start="51:59" pos:end="51:71"><expr pos:start="51:59" pos:end="51:71"><name pos:start="51:59" pos:end="51:71"><name pos:start="51:59" pos:end="51:62">dimm</name><operator pos:start="51:63" pos:end="51:64">-&gt;</operator><name pos:start="51:65" pos:end="51:71">hostmem</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="55:13" pos:end="55:28"><expr pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:16">info</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:22">dimm</name></name> <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:27">di</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:31"><expr pos:start="57:13" pos:end="57:30"><name pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:16">elem</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:23">value</name></name> <operator pos:start="57:25" pos:end="57:25">=</operator> <name pos:start="57:27" pos:end="57:30">info</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:30"><expr pos:start="59:13" pos:end="59:29"><name pos:start="59:13" pos:end="59:22"><name pos:start="59:13" pos:end="59:16">elem</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:22">next</name></name> <operator pos:start="59:24" pos:end="59:24">=</operator> <name pos:start="59:26" pos:end="59:29">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:26"><expr pos:start="61:13" pos:end="61:25"><operator pos:start="61:13" pos:end="61:13">*</operator><operator pos:start="61:14" pos:end="61:14">*</operator><name pos:start="61:15" pos:end="61:18">prev</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:25">elem</name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:32"><expr pos:start="63:13" pos:end="63:31"><operator pos:start="63:13" pos:end="63:13">*</operator><name pos:start="63:14" pos:end="63:17">prev</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <operator pos:start="63:21" pos:end="63:21">&amp;</operator><name pos:start="63:22" pos:end="63:31"><name pos:start="63:22" pos:end="63:25">elem</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:31">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:63"><expr pos:start="71:5" pos:end="71:62"><call pos:start="71:5" pos:end="71:62"><name pos:start="71:5" pos:end="71:24">object_child_foreach</name><argument_list pos:start="71:25" pos:end="71:62">(<argument pos:start="71:26" pos:end="71:28"><expr pos:start="71:26" pos:end="71:28"><name pos:start="71:26" pos:end="71:28">obj</name></expr></argument>, <argument pos:start="71:31" pos:end="71:53"><expr pos:start="71:31" pos:end="71:53"><name pos:start="71:31" pos:end="71:53">qmp_pc_dimm_device_list</name></expr></argument>, <argument pos:start="71:56" pos:end="71:61"><expr pos:start="71:56" pos:end="71:61"><name pos:start="71:56" pos:end="71:61">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
