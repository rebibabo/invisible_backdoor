<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18894.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">configure_rtc</name><parameter_list pos:start="1:26" pos:end="1:41">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:36"><name pos:start="1:27" pos:end="1:34">QemuOpts</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:40">opts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:5">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:21">value</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:39"><expr pos:start="9:5" pos:end="9:38"><name pos:start="9:5" pos:end="9:9">value</name> <operator pos:start="9:11" pos:end="9:11">=</operator> <call pos:start="9:13" pos:end="9:38"><name pos:start="9:13" pos:end="9:24">qemu_opt_get</name><argument_list pos:start="9:25" pos:end="9:38">(<argument pos:start="9:26" pos:end="9:29"><expr pos:start="9:26" pos:end="9:29"><name pos:start="9:26" pos:end="9:29">opts</name></expr></argument>, <argument pos:start="9:32" pos:end="9:37"><expr pos:start="9:32" pos:end="9:37"><literal type="string" pos:start="9:32" pos:end="9:37">"base"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="27:5"><if pos:start="11:5" pos:end="27:5">if <condition pos:start="11:8" pos:end="11:14">(<expr pos:start="11:9" pos:end="11:13"><name pos:start="11:9" pos:end="11:13">value</name></expr>)</condition> <block pos:start="11:16" pos:end="27:5">{<block_content pos:start="13:9" pos:end="25:9">

        <if_stmt pos:start="13:9" pos:end="25:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:34">(<expr pos:start="13:13" pos:end="13:33"><operator pos:start="13:13" pos:end="13:13">!</operator><call pos:start="13:14" pos:end="13:33"><name pos:start="13:14" pos:end="13:19">strcmp</name><argument_list pos:start="13:20" pos:end="13:33">(<argument pos:start="13:21" pos:end="13:25"><expr pos:start="13:21" pos:end="13:25"><name pos:start="13:21" pos:end="13:25">value</name></expr></argument>, <argument pos:start="13:28" pos:end="13:32"><expr pos:start="13:28" pos:end="13:32"><literal type="string" pos:start="13:28" pos:end="13:32">"utc"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:36" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:24">

            <expr_stmt pos:start="15:13" pos:end="15:24"><expr pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:19">rtc_utc</name> <operator pos:start="15:21" pos:end="15:21">=</operator> <literal type="number" pos:start="15:23" pos:end="15:23">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="17:11" pos:end="21:9">else if <condition pos:start="17:19" pos:end="17:47">(<expr pos:start="17:20" pos:end="17:46"><operator pos:start="17:20" pos:end="17:20">!</operator><call pos:start="17:21" pos:end="17:46"><name pos:start="17:21" pos:end="17:26">strcmp</name><argument_list pos:start="17:27" pos:end="17:46">(<argument pos:start="17:28" pos:end="17:32"><expr pos:start="17:28" pos:end="17:32"><name pos:start="17:28" pos:end="17:32">value</name></expr></argument>, <argument pos:start="17:35" pos:end="17:45"><expr pos:start="17:35" pos:end="17:45"><literal type="string" pos:start="17:35" pos:end="17:45">"localtime"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:49" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:24">

            <expr_stmt pos:start="19:13" pos:end="19:24"><expr pos:start="19:13" pos:end="19:23"><name pos:start="19:13" pos:end="19:19">rtc_utc</name> <operator pos:start="19:21" pos:end="19:21">=</operator> <literal type="number" pos:start="19:23" pos:end="19:23">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="21:11" pos:end="25:9">else <block pos:start="21:16" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:48">

            <expr_stmt pos:start="23:13" pos:end="23:48"><expr pos:start="23:13" pos:end="23:47"><call pos:start="23:13" pos:end="23:47"><name pos:start="23:13" pos:end="23:37">configure_rtc_date_offset</name><argument_list pos:start="23:38" pos:end="23:47">(<argument pos:start="23:39" pos:end="23:43"><expr pos:start="23:39" pos:end="23:43"><name pos:start="23:39" pos:end="23:43">value</name></expr></argument>, <argument pos:start="23:46" pos:end="23:46"><expr pos:start="23:46" pos:end="23:46"><literal type="number" pos:start="23:46" pos:end="23:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:40"><expr pos:start="29:5" pos:end="29:39"><name pos:start="29:5" pos:end="29:9">value</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <call pos:start="29:13" pos:end="29:39"><name pos:start="29:13" pos:end="29:24">qemu_opt_get</name><argument_list pos:start="29:25" pos:end="29:39">(<argument pos:start="29:26" pos:end="29:29"><expr pos:start="29:26" pos:end="29:29"><name pos:start="29:26" pos:end="29:29">opts</name></expr></argument>, <argument pos:start="29:32" pos:end="29:38"><expr pos:start="29:32" pos:end="29:38"><literal type="string" pos:start="29:32" pos:end="29:38">"clock"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="53:5"><if pos:start="31:5" pos:end="53:5">if <condition pos:start="31:8" pos:end="31:14">(<expr pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:13">value</name></expr>)</condition> <block pos:start="31:16" pos:end="53:5">{<block_content pos:start="33:9" pos:end="51:9">

        <if_stmt pos:start="33:9" pos:end="51:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:35">(<expr pos:start="33:13" pos:end="33:34"><operator pos:start="33:13" pos:end="33:13">!</operator><call pos:start="33:14" pos:end="33:34"><name pos:start="33:14" pos:end="33:19">strcmp</name><argument_list pos:start="33:20" pos:end="33:34">(<argument pos:start="33:21" pos:end="33:25"><expr pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:25">value</name></expr></argument>, <argument pos:start="33:28" pos:end="33:33"><expr pos:start="33:28" pos:end="33:33"><literal type="string" pos:start="33:28" pos:end="33:33">"host"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:37" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:40">

            <expr_stmt pos:start="35:13" pos:end="35:40"><expr pos:start="35:13" pos:end="35:39"><name pos:start="35:13" pos:end="35:21">rtc_clock</name> <operator pos:start="35:23" pos:end="35:23">=</operator> <name pos:start="35:25" pos:end="35:39">QEMU_CLOCK_HOST</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="37:11" pos:end="41:9">else if <condition pos:start="37:19" pos:end="37:40">(<expr pos:start="37:20" pos:end="37:39"><operator pos:start="37:20" pos:end="37:20">!</operator><call pos:start="37:21" pos:end="37:39"><name pos:start="37:21" pos:end="37:26">strcmp</name><argument_list pos:start="37:27" pos:end="37:39">(<argument pos:start="37:28" pos:end="37:32"><expr pos:start="37:28" pos:end="37:32"><name pos:start="37:28" pos:end="37:32">value</name></expr></argument>, <argument pos:start="37:35" pos:end="37:38"><expr pos:start="37:35" pos:end="37:38"><literal type="string" pos:start="37:35" pos:end="37:38">"rt"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:42" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:44">

            <expr_stmt pos:start="39:13" pos:end="39:44"><expr pos:start="39:13" pos:end="39:43"><name pos:start="39:13" pos:end="39:21">rtc_clock</name> <operator pos:start="39:23" pos:end="39:23">=</operator> <name pos:start="39:25" pos:end="39:43">QEMU_CLOCK_REALTIME</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="41:11" pos:end="45:9">else if <condition pos:start="41:19" pos:end="41:40">(<expr pos:start="41:20" pos:end="41:39"><operator pos:start="41:20" pos:end="41:20">!</operator><call pos:start="41:21" pos:end="41:39"><name pos:start="41:21" pos:end="41:26">strcmp</name><argument_list pos:start="41:27" pos:end="41:39">(<argument pos:start="41:28" pos:end="41:32"><expr pos:start="41:28" pos:end="41:32"><name pos:start="41:28" pos:end="41:32">value</name></expr></argument>, <argument pos:start="41:35" pos:end="41:38"><expr pos:start="41:35" pos:end="41:38"><literal type="string" pos:start="41:35" pos:end="41:38">"vm"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:42" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:43">

            <expr_stmt pos:start="43:13" pos:end="43:43"><expr pos:start="43:13" pos:end="43:42"><name pos:start="43:13" pos:end="43:21">rtc_clock</name> <operator pos:start="43:23" pos:end="43:23">=</operator> <name pos:start="43:25" pos:end="43:42">QEMU_CLOCK_VIRTUAL</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="45:11" pos:end="51:9">else <block pos:start="45:16" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:20">

            <expr_stmt pos:start="47:13" pos:end="47:72"><expr pos:start="47:13" pos:end="47:71"><call pos:start="47:13" pos:end="47:71"><name pos:start="47:13" pos:end="47:19">fprintf</name><argument_list pos:start="47:20" pos:end="47:71">(<argument pos:start="47:21" pos:end="47:26"><expr pos:start="47:21" pos:end="47:26"><name pos:start="47:21" pos:end="47:26">stderr</name></expr></argument>, <argument pos:start="47:29" pos:end="47:63"><expr pos:start="47:29" pos:end="47:63"><literal type="string" pos:start="47:29" pos:end="47:63">"qemu: invalid option value '%s'\n"</literal></expr></argument>, <argument pos:start="47:66" pos:end="47:70"><expr pos:start="47:66" pos:end="47:70"><name pos:start="47:66" pos:end="47:70">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:20"><expr pos:start="49:13" pos:end="49:19"><call pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:16">exit</name><argument_list pos:start="49:17" pos:end="49:19">(<argument pos:start="49:18" pos:end="49:18"><expr pos:start="49:18" pos:end="49:18"><literal type="number" pos:start="49:18" pos:end="49:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:43"><expr pos:start="55:5" pos:end="55:42"><name pos:start="55:5" pos:end="55:9">value</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <call pos:start="55:13" pos:end="55:42"><name pos:start="55:13" pos:end="55:24">qemu_opt_get</name><argument_list pos:start="55:25" pos:end="55:42">(<argument pos:start="55:26" pos:end="55:29"><expr pos:start="55:26" pos:end="55:29"><name pos:start="55:26" pos:end="55:29">opts</name></expr></argument>, <argument pos:start="55:32" pos:end="55:41"><expr pos:start="55:32" pos:end="55:41"><literal type="string" pos:start="55:32" pos:end="55:41">"driftfix"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="93:5"><if pos:start="57:5" pos:end="93:5">if <condition pos:start="57:8" pos:end="57:14">(<expr pos:start="57:9" pos:end="57:13"><name pos:start="57:9" pos:end="57:13">value</name></expr>)</condition> <block pos:start="57:16" pos:end="93:5">{<block_content pos:start="59:9" pos:end="91:9">

        <if_stmt pos:start="59:9" pos:end="91:9"><if pos:start="59:9" pos:end="81:9">if <condition pos:start="59:12" pos:end="59:35">(<expr pos:start="59:13" pos:end="59:34"><operator pos:start="59:13" pos:end="59:13">!</operator><call pos:start="59:14" pos:end="59:34"><name pos:start="59:14" pos:end="59:19">strcmp</name><argument_list pos:start="59:20" pos:end="59:34">(<argument pos:start="59:21" pos:end="59:25"><expr pos:start="59:21" pos:end="59:25"><name pos:start="59:21" pos:end="59:25">value</name></expr></argument>, <argument pos:start="59:28" pos:end="59:33"><expr pos:start="59:28" pos:end="59:33"><literal type="string" pos:start="59:28" pos:end="59:33">"slew"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:37" pos:end="81:9">{<block_content pos:start="61:13" pos:end="79:60">

            <decl_stmt pos:start="61:13" pos:end="75:14"><decl pos:start="61:13" pos:end="75:13"><type pos:start="61:13" pos:end="61:33"><specifier pos:start="61:13" pos:end="61:18">static</specifier> <name pos:start="61:20" pos:end="61:33">GlobalProperty</name></type> <name pos:start="61:35" pos:end="61:51"><name pos:start="61:35" pos:end="61:49">slew_lost_ticks</name><index pos:start="61:50" pos:end="61:51">[]</index></name> <init pos:start="61:53" pos:end="75:13">= <expr pos:start="61:55" pos:end="75:13"><block pos:start="61:55" pos:end="75:13">{

                <expr pos:start="63:17" pos:end="71:17"><block pos:start="63:17" pos:end="71:17">{

                    <expr pos:start="65:21" pos:end="65:45"><operator pos:start="65:21" pos:end="65:21">.</operator><name pos:start="65:22" pos:end="65:27">driver</name>   <operator pos:start="65:31" pos:end="65:31">=</operator> <literal type="string" pos:start="65:33" pos:end="65:45">"mc146818rtc"</literal></expr>,

                    <expr pos:start="67:21" pos:end="67:50"><operator pos:start="67:21" pos:end="67:21">.</operator><name pos:start="67:22" pos:end="67:29">property</name> <operator pos:start="67:31" pos:end="67:31">=</operator> <literal type="string" pos:start="67:33" pos:end="67:50">"lost_tick_policy"</literal></expr>,

                    <expr pos:start="69:21" pos:end="69:38"><operator pos:start="69:21" pos:end="69:21">.</operator><name pos:start="69:22" pos:end="69:26">value</name>    <operator pos:start="69:31" pos:end="69:31">=</operator> <literal type="string" pos:start="69:33" pos:end="69:38">"slew"</literal></expr>,

                }</block></expr>,

                <expr pos:start="73:17" pos:end="73:37"><block pos:start="73:17" pos:end="73:37">{ <comment type="block" pos:start="73:19" pos:end="73:35">/* end of list */</comment> }</block></expr>

            }</block></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="79:13" pos:end="79:60"><expr pos:start="79:13" pos:end="79:59"><call pos:start="79:13" pos:end="79:59"><name pos:start="79:13" pos:end="79:42">qdev_prop_register_global_list</name><argument_list pos:start="79:43" pos:end="79:59">(<argument pos:start="79:44" pos:end="79:58"><expr pos:start="79:44" pos:end="79:58"><name pos:start="79:44" pos:end="79:58">slew_lost_ticks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="81:11" pos:end="85:9">else if <condition pos:start="81:19" pos:end="81:42">(<expr pos:start="81:20" pos:end="81:41"><operator pos:start="81:20" pos:end="81:20">!</operator><call pos:start="81:21" pos:end="81:41"><name pos:start="81:21" pos:end="81:26">strcmp</name><argument_list pos:start="81:27" pos:end="81:41">(<argument pos:start="81:28" pos:end="81:32"><expr pos:start="81:28" pos:end="81:32"><name pos:start="81:28" pos:end="81:32">value</name></expr></argument>, <argument pos:start="81:35" pos:end="81:40"><expr pos:start="81:35" pos:end="81:40"><literal type="string" pos:start="81:35" pos:end="81:40">"none"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:44" pos:end="85:9">{<block_content>

            <comment type="block" pos:start="83:13" pos:end="83:36">/* discard is default */</comment>

        </block_content>}</block></if> <else pos:start="85:11" pos:end="91:9">else <block pos:start="85:16" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:20">

            <expr_stmt pos:start="87:13" pos:end="87:72"><expr pos:start="87:13" pos:end="87:71"><call pos:start="87:13" pos:end="87:71"><name pos:start="87:13" pos:end="87:19">fprintf</name><argument_list pos:start="87:20" pos:end="87:71">(<argument pos:start="87:21" pos:end="87:26"><expr pos:start="87:21" pos:end="87:26"><name pos:start="87:21" pos:end="87:26">stderr</name></expr></argument>, <argument pos:start="87:29" pos:end="87:63"><expr pos:start="87:29" pos:end="87:63"><literal type="string" pos:start="87:29" pos:end="87:63">"qemu: invalid option value '%s'\n"</literal></expr></argument>, <argument pos:start="87:66" pos:end="87:70"><expr pos:start="87:66" pos:end="87:70"><name pos:start="87:66" pos:end="87:70">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:20"><expr pos:start="89:13" pos:end="89:19"><call pos:start="89:13" pos:end="89:19"><name pos:start="89:13" pos:end="89:16">exit</name><argument_list pos:start="89:17" pos:end="89:19">(<argument pos:start="89:18" pos:end="89:18"><expr pos:start="89:18" pos:end="89:18"><literal type="number" pos:start="89:18" pos:end="89:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
