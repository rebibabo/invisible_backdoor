<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4969.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">check_threshold_8</name><parameter_list pos:start="1:30" pos:end="1:35">(<parameter pos:start="1:31" pos:end="1:34"><decl pos:start="1:31" pos:end="1:34"><type pos:start="1:31" pos:end="1:34"><name pos:start="1:31" pos:end="1:34">void</name></type></decl></parameter>)</parameter_list><block pos:start="1:36" pos:end="77:1">{<block_content pos:start="3:5" pos:end="75:5">

    <expr_stmt pos:start="3:5" pos:end="3:57"><expr pos:start="3:5" pos:end="3:56"><call pos:start="3:5" pos:end="3:56"><name pos:start="3:5" pos:end="3:20">LOCAL_ALIGNED_32</name><argument_list pos:start="3:21" pos:end="3:56">(<argument pos:start="3:22" pos:end="3:28"><expr pos:start="3:22" pos:end="3:28"><name pos:start="3:22" pos:end="3:28">uint8_t</name></expr></argument>, <argument pos:start="3:31" pos:end="3:32"><expr pos:start="3:31" pos:end="3:32"><name pos:start="3:31" pos:end="3:32">in</name></expr></argument>       , <argument pos:start="3:42" pos:end="3:55"><expr pos:start="3:42" pos:end="3:55"><index pos:start="3:42" pos:end="3:55">[<expr pos:start="3:43" pos:end="3:54"><name pos:start="3:43" pos:end="3:54">WIDTH_PADDED</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="5:5" pos:end="5:57"><expr pos:start="5:5" pos:end="5:56"><call pos:start="5:5" pos:end="5:56"><name pos:start="5:5" pos:end="5:20">LOCAL_ALIGNED_32</name><argument_list pos:start="5:21" pos:end="5:56">(<argument pos:start="5:22" pos:end="5:28"><expr pos:start="5:22" pos:end="5:28"><name pos:start="5:22" pos:end="5:28">uint8_t</name></expr></argument>, <argument pos:start="5:31" pos:end="5:39"><expr pos:start="5:31" pos:end="5:39"><name pos:start="5:31" pos:end="5:39">threshold</name></expr></argument>, <argument pos:start="5:42" pos:end="5:55"><expr pos:start="5:42" pos:end="5:55"><index pos:start="5:42" pos:end="5:55">[<expr pos:start="5:43" pos:end="5:54"><name pos:start="5:43" pos:end="5:54">WIDTH_PADDED</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:57"><expr pos:start="7:5" pos:end="7:56"><call pos:start="7:5" pos:end="7:56"><name pos:start="7:5" pos:end="7:20">LOCAL_ALIGNED_32</name><argument_list pos:start="7:21" pos:end="7:56">(<argument pos:start="7:22" pos:end="7:28"><expr pos:start="7:22" pos:end="7:28"><name pos:start="7:22" pos:end="7:28">uint8_t</name></expr></argument>, <argument pos:start="7:31" pos:end="7:33"><expr pos:start="7:31" pos:end="7:33"><name pos:start="7:31" pos:end="7:33">min</name></expr></argument>      , <argument pos:start="7:42" pos:end="7:55"><expr pos:start="7:42" pos:end="7:55"><index pos:start="7:42" pos:end="7:55">[<expr pos:start="7:43" pos:end="7:54"><name pos:start="7:43" pos:end="7:54">WIDTH_PADDED</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:57"><expr pos:start="9:5" pos:end="9:56"><call pos:start="9:5" pos:end="9:56"><name pos:start="9:5" pos:end="9:20">LOCAL_ALIGNED_32</name><argument_list pos:start="9:21" pos:end="9:56">(<argument pos:start="9:22" pos:end="9:28"><expr pos:start="9:22" pos:end="9:28"><name pos:start="9:22" pos:end="9:28">uint8_t</name></expr></argument>, <argument pos:start="9:31" pos:end="9:33"><expr pos:start="9:31" pos:end="9:33"><name pos:start="9:31" pos:end="9:33">max</name></expr></argument>      , <argument pos:start="9:42" pos:end="9:55"><expr pos:start="9:42" pos:end="9:55"><index pos:start="9:42" pos:end="9:55">[<expr pos:start="9:43" pos:end="9:54"><name pos:start="9:43" pos:end="9:54">WIDTH_PADDED</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:57"><expr pos:start="11:5" pos:end="11:56"><call pos:start="11:5" pos:end="11:56"><name pos:start="11:5" pos:end="11:20">LOCAL_ALIGNED_32</name><argument_list pos:start="11:21" pos:end="11:56">(<argument pos:start="11:22" pos:end="11:28"><expr pos:start="11:22" pos:end="11:28"><name pos:start="11:22" pos:end="11:28">uint8_t</name></expr></argument>, <argument pos:start="11:31" pos:end="11:37"><expr pos:start="11:31" pos:end="11:37"><name pos:start="11:31" pos:end="11:37">out_ref</name></expr></argument>  , <argument pos:start="11:42" pos:end="11:55"><expr pos:start="11:42" pos:end="11:55"><index pos:start="11:42" pos:end="11:55">[<expr pos:start="11:43" pos:end="11:54"><name pos:start="11:43" pos:end="11:54">WIDTH_PADDED</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:57"><expr pos:start="13:5" pos:end="13:56"><call pos:start="13:5" pos:end="13:56"><name pos:start="13:5" pos:end="13:20">LOCAL_ALIGNED_32</name><argument_list pos:start="13:21" pos:end="13:56">(<argument pos:start="13:22" pos:end="13:28"><expr pos:start="13:22" pos:end="13:28"><name pos:start="13:22" pos:end="13:28">uint8_t</name></expr></argument>, <argument pos:start="13:31" pos:end="13:37"><expr pos:start="13:31" pos:end="13:37"><name pos:start="13:31" pos:end="13:37">out_new</name></expr></argument>  , <argument pos:start="13:42" pos:end="13:55"><expr pos:start="13:42" pos:end="13:55"><index pos:start="13:42" pos:end="13:55">[<expr pos:start="13:43" pos:end="13:54"><name pos:start="13:43" pos:end="13:54">WIDTH_PADDED</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:39"><decl pos:start="15:5" pos:end="15:38"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:13">ptrdiff_t</name></type> <name pos:start="15:15" pos:end="15:23">line_size</name> <init pos:start="15:25" pos:end="15:38">= <expr pos:start="15:27" pos:end="15:38"><name pos:start="15:27" pos:end="15:38">WIDTH_PADDED</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">w</name> <init pos:start="17:11" pos:end="17:17">= <expr pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:17">WIDTH</name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:20">ThresholdContext</name></type> <name pos:start="21:22" pos:end="21:22">s</name></decl>;</decl_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:16"><expr pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:6">.</operator><name pos:start="23:7" pos:end="23:11">depth</name></name> <operator pos:start="23:13" pos:end="23:13">=</operator> <literal type="number" pos:start="23:15" pos:end="23:15">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><call pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:21">ff_threshold_init</name><argument_list pos:start="25:22" pos:end="25:25">(<argument pos:start="25:23" pos:end="25:24"><expr pos:start="25:23" pos:end="25:24"><operator pos:start="25:23" pos:end="25:23">&amp;</operator><name pos:start="25:24" pos:end="25:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <macro pos:start="29:5" pos:end="37:51"><name pos:start="29:5" pos:end="29:16">declare_func</name><argument_list pos:start="29:17" pos:end="37:51">(<argument pos:start="29:18" pos:end="29:21">void</argument>, <argument pos:start="29:24" pos:end="29:40">const uint8_t *in</argument>, <argument pos:start="29:43" pos:end="29:66">const uint8_t *threshold</argument>,

                 <argument pos:start="31:18" pos:end="31:35">const uint8_t *min</argument>, <argument pos:start="31:38" pos:end="31:55">const uint8_t *max</argument>, <argument pos:start="31:58" pos:end="31:69">uint8_t *out</argument>,

                 <argument pos:start="33:18" pos:end="33:36">ptrdiff_t ilinesize</argument>, <argument pos:start="33:39" pos:end="33:57">ptrdiff_t tlinesize</argument>,

                 <argument pos:start="35:18" pos:end="35:36">ptrdiff_t flinesize</argument>, <argument pos:start="35:39" pos:end="35:57">ptrdiff_t slinesize</argument>,

                 <argument pos:start="37:18" pos:end="37:36">ptrdiff_t olinesize</argument>, <argument pos:start="37:39" pos:end="37:43">int w</argument>, <argument pos:start="37:46" pos:end="37:50">int h</argument>)</argument_list></macro><empty_stmt pos:start="37:52" pos:end="37:52">;</empty_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:36"><expr pos:start="41:5" pos:end="41:35"><call pos:start="41:5" pos:end="41:35"><name pos:start="41:5" pos:end="41:10">memset</name><argument_list pos:start="41:11" pos:end="41:35">(<argument pos:start="41:12" pos:end="41:13"><expr pos:start="41:12" pos:end="41:13"><name pos:start="41:12" pos:end="41:13">in</name></expr></argument>,     <argument pos:start="41:20" pos:end="41:20"><expr pos:start="41:20" pos:end="41:20"><literal type="number" pos:start="41:20" pos:end="41:20">0</literal></expr></argument>, <argument pos:start="41:23" pos:end="41:34"><expr pos:start="41:23" pos:end="41:34"><name pos:start="41:23" pos:end="41:34">WIDTH_PADDED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:39"><expr pos:start="43:5" pos:end="43:38"><call pos:start="43:5" pos:end="43:38"><name pos:start="43:5" pos:end="43:10">memset</name><argument_list pos:start="43:11" pos:end="43:38">(<argument pos:start="43:12" pos:end="43:20"><expr pos:start="43:12" pos:end="43:20"><name pos:start="43:12" pos:end="43:20">threshold</name></expr></argument>, <argument pos:start="43:23" pos:end="43:23"><expr pos:start="43:23" pos:end="43:23"><literal type="number" pos:start="43:23" pos:end="43:23">0</literal></expr></argument>, <argument pos:start="43:26" pos:end="43:37"><expr pos:start="43:26" pos:end="43:37"><name pos:start="43:26" pos:end="43:37">WIDTH_PADDED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:33"><expr pos:start="45:5" pos:end="45:32"><call pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:10">memset</name><argument_list pos:start="45:11" pos:end="45:32">(<argument pos:start="45:12" pos:end="45:14"><expr pos:start="45:12" pos:end="45:14"><name pos:start="45:12" pos:end="45:14">min</name></expr></argument>, <argument pos:start="45:17" pos:end="45:17"><expr pos:start="45:17" pos:end="45:17"><literal type="number" pos:start="45:17" pos:end="45:17">0</literal></expr></argument>, <argument pos:start="45:20" pos:end="45:31"><expr pos:start="45:20" pos:end="45:31"><name pos:start="45:20" pos:end="45:31">WIDTH_PADDED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:33"><expr pos:start="47:5" pos:end="47:32"><call pos:start="47:5" pos:end="47:32"><name pos:start="47:5" pos:end="47:10">memset</name><argument_list pos:start="47:11" pos:end="47:32">(<argument pos:start="47:12" pos:end="47:14"><expr pos:start="47:12" pos:end="47:14"><name pos:start="47:12" pos:end="47:14">max</name></expr></argument>, <argument pos:start="47:17" pos:end="47:17"><expr pos:start="47:17" pos:end="47:17"><literal type="number" pos:start="47:17" pos:end="47:17">0</literal></expr></argument>, <argument pos:start="47:20" pos:end="47:31"><expr pos:start="47:20" pos:end="47:31"><name pos:start="47:20" pos:end="47:31">WIDTH_PADDED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:37"><expr pos:start="49:5" pos:end="49:36"><call pos:start="49:5" pos:end="49:36"><name pos:start="49:5" pos:end="49:10">memset</name><argument_list pos:start="49:11" pos:end="49:36">(<argument pos:start="49:12" pos:end="49:18"><expr pos:start="49:12" pos:end="49:18"><name pos:start="49:12" pos:end="49:18">out_ref</name></expr></argument>, <argument pos:start="49:21" pos:end="49:21"><expr pos:start="49:21" pos:end="49:21"><literal type="number" pos:start="49:21" pos:end="49:21">0</literal></expr></argument>, <argument pos:start="49:24" pos:end="49:35"><expr pos:start="49:24" pos:end="49:35"><name pos:start="49:24" pos:end="49:35">WIDTH_PADDED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:37"><expr pos:start="51:5" pos:end="51:36"><call pos:start="51:5" pos:end="51:36"><name pos:start="51:5" pos:end="51:10">memset</name><argument_list pos:start="51:11" pos:end="51:36">(<argument pos:start="51:12" pos:end="51:18"><expr pos:start="51:12" pos:end="51:18"><name pos:start="51:12" pos:end="51:18">out_new</name></expr></argument>, <argument pos:start="51:21" pos:end="51:21"><expr pos:start="51:21" pos:end="51:21"><literal type="number" pos:start="51:21" pos:end="51:21">0</literal></expr></argument>, <argument pos:start="51:24" pos:end="51:35"><expr pos:start="51:24" pos:end="51:35"><name pos:start="51:24" pos:end="51:35">WIDTH_PADDED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:33"><expr pos:start="53:5" pos:end="53:32"><call pos:start="53:5" pos:end="53:32"><name pos:start="53:5" pos:end="53:21">randomize_buffers</name><argument_list pos:start="53:22" pos:end="53:32">(<argument pos:start="53:23" pos:end="53:24"><expr pos:start="53:23" pos:end="53:24"><name pos:start="53:23" pos:end="53:24">in</name></expr></argument>, <argument pos:start="53:27" pos:end="53:31"><expr pos:start="53:27" pos:end="53:31"><name pos:start="53:27" pos:end="53:31">WIDTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:40"><expr pos:start="55:5" pos:end="55:39"><call pos:start="55:5" pos:end="55:39"><name pos:start="55:5" pos:end="55:21">randomize_buffers</name><argument_list pos:start="55:22" pos:end="55:39">(<argument pos:start="55:23" pos:end="55:31"><expr pos:start="55:23" pos:end="55:31"><name pos:start="55:23" pos:end="55:31">threshold</name></expr></argument>, <argument pos:start="55:34" pos:end="55:38"><expr pos:start="55:34" pos:end="55:38"><name pos:start="55:34" pos:end="55:38">WIDTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:34"><expr pos:start="57:5" pos:end="57:33"><call pos:start="57:5" pos:end="57:33"><name pos:start="57:5" pos:end="57:21">randomize_buffers</name><argument_list pos:start="57:22" pos:end="57:33">(<argument pos:start="57:23" pos:end="57:25"><expr pos:start="57:23" pos:end="57:25"><name pos:start="57:23" pos:end="57:25">min</name></expr></argument>, <argument pos:start="57:28" pos:end="57:32"><expr pos:start="57:28" pos:end="57:32"><name pos:start="57:28" pos:end="57:32">WIDTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:34"><expr pos:start="59:5" pos:end="59:33"><call pos:start="59:5" pos:end="59:33"><name pos:start="59:5" pos:end="59:21">randomize_buffers</name><argument_list pos:start="59:22" pos:end="59:33">(<argument pos:start="59:23" pos:end="59:25"><expr pos:start="59:23" pos:end="59:25"><name pos:start="59:23" pos:end="59:25">max</name></expr></argument>, <argument pos:start="59:28" pos:end="59:32"><expr pos:start="59:28" pos:end="59:32"><name pos:start="59:28" pos:end="59:32">WIDTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="75:5"><if pos:start="63:5" pos:end="75:5">if <condition pos:start="63:8" pos:end="63:46">(<expr pos:start="63:9" pos:end="63:45"><call pos:start="63:9" pos:end="63:45"><name pos:start="63:9" pos:end="63:18">check_func</name><argument_list pos:start="63:19" pos:end="63:45">(<argument pos:start="63:20" pos:end="63:30"><expr pos:start="63:20" pos:end="63:30"><name pos:start="63:20" pos:end="63:30"><name pos:start="63:20" pos:end="63:20">s</name><operator pos:start="63:21" pos:end="63:21">.</operator><name pos:start="63:22" pos:end="63:30">threshold</name></name></expr></argument>, <argument pos:start="63:33" pos:end="63:44"><expr pos:start="63:33" pos:end="63:44"><literal type="string" pos:start="63:33" pos:end="63:44">"threshold8"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="63:48" pos:end="75:5">{<block_content pos:start="65:9" pos:end="73:113">

        <expr_stmt pos:start="65:9" pos:end="65:112"><expr pos:start="65:9" pos:end="65:111"><call pos:start="65:9" pos:end="65:111"><name pos:start="65:9" pos:end="65:16">call_ref</name><argument_list pos:start="65:17" pos:end="65:111">(<argument pos:start="65:18" pos:end="65:19"><expr pos:start="65:18" pos:end="65:19"><name pos:start="65:18" pos:end="65:19">in</name></expr></argument>, <argument pos:start="65:22" pos:end="65:30"><expr pos:start="65:22" pos:end="65:30"><name pos:start="65:22" pos:end="65:30">threshold</name></expr></argument>, <argument pos:start="65:33" pos:end="65:35"><expr pos:start="65:33" pos:end="65:35"><name pos:start="65:33" pos:end="65:35">min</name></expr></argument>, <argument pos:start="65:38" pos:end="65:40"><expr pos:start="65:38" pos:end="65:40"><name pos:start="65:38" pos:end="65:40">max</name></expr></argument>, <argument pos:start="65:43" pos:end="65:49"><expr pos:start="65:43" pos:end="65:49"><name pos:start="65:43" pos:end="65:49">out_ref</name></expr></argument>, <argument pos:start="65:52" pos:end="65:60"><expr pos:start="65:52" pos:end="65:60"><name pos:start="65:52" pos:end="65:60">line_size</name></expr></argument>, <argument pos:start="65:63" pos:end="65:71"><expr pos:start="65:63" pos:end="65:71"><name pos:start="65:63" pos:end="65:71">line_size</name></expr></argument>, <argument pos:start="65:74" pos:end="65:82"><expr pos:start="65:74" pos:end="65:82"><name pos:start="65:74" pos:end="65:82">line_size</name></expr></argument>, <argument pos:start="65:85" pos:end="65:93"><expr pos:start="65:85" pos:end="65:93"><name pos:start="65:85" pos:end="65:93">line_size</name></expr></argument>, <argument pos:start="65:96" pos:end="65:104"><expr pos:start="65:96" pos:end="65:104"><name pos:start="65:96" pos:end="65:104">line_size</name></expr></argument>, <argument pos:start="65:107" pos:end="65:107"><expr pos:start="65:107" pos:end="65:107"><name pos:start="65:107" pos:end="65:107">w</name></expr></argument>, <argument pos:start="65:110" pos:end="65:110"><expr pos:start="65:110" pos:end="65:110"><literal type="number" pos:start="65:110" pos:end="65:110">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:112"><expr pos:start="67:9" pos:end="67:111"><call pos:start="67:9" pos:end="67:111"><name pos:start="67:9" pos:end="67:16">call_new</name><argument_list pos:start="67:17" pos:end="67:111">(<argument pos:start="67:18" pos:end="67:19"><expr pos:start="67:18" pos:end="67:19"><name pos:start="67:18" pos:end="67:19">in</name></expr></argument>, <argument pos:start="67:22" pos:end="67:30"><expr pos:start="67:22" pos:end="67:30"><name pos:start="67:22" pos:end="67:30">threshold</name></expr></argument>, <argument pos:start="67:33" pos:end="67:35"><expr pos:start="67:33" pos:end="67:35"><name pos:start="67:33" pos:end="67:35">min</name></expr></argument>, <argument pos:start="67:38" pos:end="67:40"><expr pos:start="67:38" pos:end="67:40"><name pos:start="67:38" pos:end="67:40">max</name></expr></argument>, <argument pos:start="67:43" pos:end="67:49"><expr pos:start="67:43" pos:end="67:49"><name pos:start="67:43" pos:end="67:49">out_new</name></expr></argument>, <argument pos:start="67:52" pos:end="67:60"><expr pos:start="67:52" pos:end="67:60"><name pos:start="67:52" pos:end="67:60">line_size</name></expr></argument>, <argument pos:start="67:63" pos:end="67:71"><expr pos:start="67:63" pos:end="67:71"><name pos:start="67:63" pos:end="67:71">line_size</name></expr></argument>, <argument pos:start="67:74" pos:end="67:82"><expr pos:start="67:74" pos:end="67:82"><name pos:start="67:74" pos:end="67:82">line_size</name></expr></argument>, <argument pos:start="67:85" pos:end="67:93"><expr pos:start="67:85" pos:end="67:93"><name pos:start="67:85" pos:end="67:93">line_size</name></expr></argument>, <argument pos:start="67:96" pos:end="67:104"><expr pos:start="67:96" pos:end="67:104"><name pos:start="67:96" pos:end="67:104">line_size</name></expr></argument>, <argument pos:start="67:107" pos:end="67:107"><expr pos:start="67:107" pos:end="67:107"><name pos:start="67:107" pos:end="67:107">w</name></expr></argument>, <argument pos:start="67:110" pos:end="67:110"><expr pos:start="67:110" pos:end="67:110"><literal type="number" pos:start="67:110" pos:end="67:110">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="71:19"><if pos:start="69:9" pos:end="71:19">if <condition pos:start="69:12" pos:end="69:40">(<expr pos:start="69:13" pos:end="69:39"><call pos:start="69:13" pos:end="69:39"><name pos:start="69:13" pos:end="69:18">memcmp</name><argument_list pos:start="69:19" pos:end="69:39">(<argument pos:start="69:20" pos:end="69:26"><expr pos:start="69:20" pos:end="69:26"><name pos:start="69:20" pos:end="69:26">out_ref</name></expr></argument>, <argument pos:start="69:29" pos:end="69:35"><expr pos:start="69:29" pos:end="69:35"><name pos:start="69:29" pos:end="69:35">out_new</name></expr></argument>, <argument pos:start="69:38" pos:end="69:38"><expr pos:start="69:38" pos:end="69:38"><name pos:start="69:38" pos:end="69:38">w</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:19"><block_content pos:start="71:13" pos:end="71:19">

            <expr_stmt pos:start="71:13" pos:end="71:19"><expr pos:start="71:13" pos:end="71:18"><call pos:start="71:13" pos:end="71:18"><name pos:start="71:13" pos:end="71:16">fail</name><argument_list pos:start="71:17" pos:end="71:18">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:113"><expr pos:start="73:9" pos:end="73:112"><call pos:start="73:9" pos:end="73:112"><name pos:start="73:9" pos:end="73:17">bench_new</name><argument_list pos:start="73:18" pos:end="73:112">(<argument pos:start="73:19" pos:end="73:20"><expr pos:start="73:19" pos:end="73:20"><name pos:start="73:19" pos:end="73:20">in</name></expr></argument>, <argument pos:start="73:23" pos:end="73:31"><expr pos:start="73:23" pos:end="73:31"><name pos:start="73:23" pos:end="73:31">threshold</name></expr></argument>, <argument pos:start="73:34" pos:end="73:36"><expr pos:start="73:34" pos:end="73:36"><name pos:start="73:34" pos:end="73:36">min</name></expr></argument>, <argument pos:start="73:39" pos:end="73:41"><expr pos:start="73:39" pos:end="73:41"><name pos:start="73:39" pos:end="73:41">max</name></expr></argument>, <argument pos:start="73:44" pos:end="73:50"><expr pos:start="73:44" pos:end="73:50"><name pos:start="73:44" pos:end="73:50">out_new</name></expr></argument>, <argument pos:start="73:53" pos:end="73:61"><expr pos:start="73:53" pos:end="73:61"><name pos:start="73:53" pos:end="73:61">line_size</name></expr></argument>, <argument pos:start="73:64" pos:end="73:72"><expr pos:start="73:64" pos:end="73:72"><name pos:start="73:64" pos:end="73:72">line_size</name></expr></argument>, <argument pos:start="73:75" pos:end="73:83"><expr pos:start="73:75" pos:end="73:83"><name pos:start="73:75" pos:end="73:83">line_size</name></expr></argument>, <argument pos:start="73:86" pos:end="73:94"><expr pos:start="73:86" pos:end="73:94"><name pos:start="73:86" pos:end="73:94">line_size</name></expr></argument>, <argument pos:start="73:97" pos:end="73:105"><expr pos:start="73:97" pos:end="73:105"><name pos:start="73:97" pos:end="73:105">line_size</name></expr></argument>, <argument pos:start="73:108" pos:end="73:108"><expr pos:start="73:108" pos:end="73:108"><name pos:start="73:108" pos:end="73:108">w</name></expr></argument>, <argument pos:start="73:111" pos:end="73:111"><expr pos:start="73:111" pos:end="73:111"><literal type="number" pos:start="73:111" pos:end="73:111">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
