<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11757.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">vqa_decode_init</name><parameter_list pos:start="1:27" pos:end="1:49">(<parameter pos:start="1:28" pos:end="1:48"><decl pos:start="1:28" pos:end="1:48"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:41">AVCodecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:48">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VqaContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:36">= <expr pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:25">avctx</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:29">vqa_header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>, <decl pos:start="9:15" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:28">codebook_index</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:21"><expr pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:12">avctx</name></name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:20">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:34"><expr pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:9">avctx</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:18">pix_fmt</name></name> <operator pos:start="15:20" pos:end="15:20">=</operator> <name pos:start="15:22" pos:end="15:33">PIX_FMT_PAL8</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><call pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:16">dsputil_init</name><argument_list pos:start="17:17" pos:end="17:32">(<argument pos:start="17:18" pos:end="17:24"><expr pos:start="17:18" pos:end="17:24"><operator pos:start="17:18" pos:end="17:18">&amp;</operator><name pos:start="17:19" pos:end="17:24"><name pos:start="17:19" pos:end="17:19">s</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:24">dsp</name></name></expr></argument>, <argument pos:start="17:27" pos:end="17:31"><expr pos:start="17:27" pos:end="17:31"><name pos:start="17:27" pos:end="17:31">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:41">/* make sure the extradata made it */</comment>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:52">(<expr pos:start="23:9" pos:end="23:51"><name pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:16">avctx</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:32">extradata_size</name></name> <operator pos:start="23:34" pos:end="23:35">!=</operator> <name pos:start="23:37" pos:end="23:51">VQA_HEADER_SIZE</name></expr>)</condition> <block pos:start="23:54" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:18">

        <expr_stmt pos:start="25:9" pos:end="25:104"><expr pos:start="25:9" pos:end="25:103"><call pos:start="25:9" pos:end="25:103"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:103">(<argument pos:start="25:16" pos:end="25:23"><expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:23">avctx</name></name></expr></argument>, <argument pos:start="25:26" pos:end="25:37"><expr pos:start="25:26" pos:end="25:37"><name pos:start="25:26" pos:end="25:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:40" pos:end="25:85"><expr pos:start="25:40" pos:end="25:85"><literal type="string" pos:start="25:40" pos:end="25:85">"  VQA video: expected extradata size of %d\n"</literal></expr></argument>, <argument pos:start="25:88" pos:end="25:102"><expr pos:start="25:88" pos:end="25:102"><name pos:start="25:88" pos:end="25:102">VQA_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:52">/* load up the VQA parameters from the header */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:54"><expr pos:start="35:5" pos:end="35:53"><name pos:start="35:5" pos:end="35:14">vqa_header</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <operator pos:start="35:18" pos:end="35:18">(</operator><name pos:start="35:19" pos:end="35:26">unsigned</name> <name pos:start="35:28" pos:end="35:31">char</name> <operator pos:start="35:33" pos:end="35:33">*</operator><operator pos:start="35:34" pos:end="35:34">)</operator><name pos:start="35:35" pos:end="35:53"><name pos:start="35:35" pos:end="35:35">s</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:42">avctx</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:53">extradata</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:35"><expr pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:18">vqa_version</name></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:34"><name pos:start="37:22" pos:end="37:31">vqa_header</name><index pos:start="37:32" pos:end="37:34">[<expr pos:start="37:33" pos:end="37:33"><literal type="number" pos:start="37:33" pos:end="37:33">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:39"><expr pos:start="39:5" pos:end="39:38"><name pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:12">width</name></name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:38"><name pos:start="39:16" pos:end="39:22">AV_RL16</name><argument_list pos:start="39:23" pos:end="39:38">(<argument pos:start="39:24" pos:end="39:37"><expr pos:start="39:24" pos:end="39:37"><operator pos:start="39:24" pos:end="39:24">&amp;</operator><name pos:start="39:25" pos:end="39:37"><name pos:start="39:25" pos:end="39:34">vqa_header</name><index pos:start="39:35" pos:end="39:37">[<expr pos:start="39:36" pos:end="39:36"><literal type="number" pos:start="39:36" pos:end="39:36">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:40"><expr pos:start="41:5" pos:end="41:39"><name pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:13">height</name></name> <operator pos:start="41:15" pos:end="41:15">=</operator> <call pos:start="41:17" pos:end="41:39"><name pos:start="41:17" pos:end="41:23">AV_RL16</name><argument_list pos:start="41:24" pos:end="41:39">(<argument pos:start="41:25" pos:end="41:38"><expr pos:start="41:25" pos:end="41:38"><operator pos:start="41:25" pos:end="41:25">&amp;</operator><name pos:start="41:26" pos:end="41:38"><name pos:start="41:26" pos:end="41:35">vqa_header</name><index pos:start="41:36" pos:end="41:38">[<expr pos:start="41:37" pos:end="41:37"><literal type="number" pos:start="41:37" pos:end="41:37">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if<condition pos:start="43:7" pos:end="43:60">(<expr pos:start="43:8" pos:end="43:59"><call pos:start="43:8" pos:end="43:59"><name pos:start="43:8" pos:end="43:31">avcodec_check_dimensions</name><argument_list pos:start="43:32" pos:end="43:59">(<argument pos:start="43:33" pos:end="43:37"><expr pos:start="43:33" pos:end="43:37"><name pos:start="43:33" pos:end="43:37">avctx</name></expr></argument>, <argument pos:start="43:40" pos:end="43:47"><expr pos:start="43:40" pos:end="43:47"><name pos:start="43:40" pos:end="43:47"><name pos:start="43:40" pos:end="43:40">s</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:47">width</name></name></expr></argument>, <argument pos:start="43:50" pos:end="43:58"><expr pos:start="43:50" pos:end="43:58"><name pos:start="43:50" pos:end="43:58"><name pos:start="43:50" pos:end="43:50">s</name><operator pos:start="43:51" pos:end="43:52">-&gt;</operator><name pos:start="43:53" pos:end="43:58">height</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="43:61" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:18">

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:16">width</name></name><operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:27"><name pos:start="45:19" pos:end="45:19">s</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:27">height</name></name><operator pos:start="45:28" pos:end="45:28">=</operator> <literal type="number" pos:start="45:30" pos:end="45:30">0</literal></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:37"><expr pos:start="51:5" pos:end="51:36"><name pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:19">vector_width</name></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:36"><name pos:start="51:23" pos:end="51:32">vqa_header</name><index pos:start="51:33" pos:end="51:36">[<expr pos:start="51:34" pos:end="51:35"><literal type="number" pos:start="51:34" pos:end="51:35">10</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:38"><expr pos:start="53:5" pos:end="53:37"><name pos:start="53:5" pos:end="53:20"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:20">vector_height</name></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:37"><name pos:start="53:24" pos:end="53:33">vqa_header</name><index pos:start="53:34" pos:end="53:37">[<expr pos:start="53:35" pos:end="53:36"><literal type="number" pos:start="53:35" pos:end="53:36">11</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:61"><expr pos:start="55:5" pos:end="55:60"><name pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:20">partial_count</name></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <name pos:start="55:24" pos:end="55:43"><name pos:start="55:24" pos:end="55:24">s</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:43">partial_countdown</name></name> <operator pos:start="55:45" pos:end="55:45">=</operator> <name pos:start="55:47" pos:end="55:60"><name pos:start="55:47" pos:end="55:56">vqa_header</name><index pos:start="55:57" pos:end="55:60">[<expr pos:start="55:58" pos:end="55:59"><literal type="number" pos:start="55:58" pos:end="55:59">13</literal></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:72">/* the vector dimensions have to meet very stringent requirements */</comment>

    <if_stmt pos:start="61:5" pos:end="69:5"><if pos:start="61:5" pos:end="69:5">if <condition pos:start="61:8" pos:end="63:61">(<expr pos:start="61:9" pos:end="63:60"><operator pos:start="61:9" pos:end="61:9">(</operator><name pos:start="61:10" pos:end="61:24"><name pos:start="61:10" pos:end="61:10">s</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:24">vector_width</name></name> <operator pos:start="61:26" pos:end="61:27">!=</operator> <literal type="number" pos:start="61:29" pos:end="61:29">4</literal><operator pos:start="61:30" pos:end="61:30">)</operator> <operator pos:start="61:32" pos:end="61:33">||</operator>

        <operator pos:start="63:9" pos:end="63:9">(</operator><operator pos:start="63:10" pos:end="63:10">(</operator><name pos:start="63:11" pos:end="63:26"><name pos:start="63:11" pos:end="63:11">s</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:26">vector_height</name></name> <operator pos:start="63:28" pos:end="63:29">!=</operator> <literal type="number" pos:start="63:31" pos:end="63:31">2</literal><operator pos:start="63:32" pos:end="63:32">)</operator> <operator pos:start="63:34" pos:end="63:35">&amp;&amp;</operator> <operator pos:start="63:37" pos:end="63:37">(</operator><name pos:start="63:38" pos:end="63:53"><name pos:start="63:38" pos:end="63:38">s</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:53">vector_height</name></name> <operator pos:start="63:55" pos:end="63:56">!=</operator> <literal type="number" pos:start="63:58" pos:end="63:58">4</literal><operator pos:start="63:59" pos:end="63:59">)</operator><operator pos:start="63:60" pos:end="63:60">)</operator></expr>)</condition> <block pos:start="63:63" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:18">

        <comment type="block" pos:start="65:9" pos:end="65:51">/* return without further initialization */</comment>

        <return pos:start="67:9" pos:end="67:18">return <expr pos:start="67:16" pos:end="67:17"><operator pos:start="67:16" pos:end="67:16">-</operator><literal type="number" pos:start="67:17" pos:end="67:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:28">/* allocate codebooks */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:41"><expr pos:start="75:5" pos:end="75:40"><name pos:start="75:5" pos:end="75:20"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:20">codebook_size</name></name> <operator pos:start="75:22" pos:end="75:22">=</operator> <name pos:start="75:24" pos:end="75:40">MAX_CODEBOOK_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:46"><expr pos:start="77:5" pos:end="77:45"><name pos:start="77:5" pos:end="77:15"><name pos:start="77:5" pos:end="77:5">s</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:15">codebook</name></name> <operator pos:start="77:17" pos:end="77:17">=</operator> <call pos:start="77:19" pos:end="77:45"><name pos:start="77:19" pos:end="77:27">av_malloc</name><argument_list pos:start="77:28" pos:end="77:45">(<argument pos:start="77:29" pos:end="77:44"><expr pos:start="77:29" pos:end="77:44"><name pos:start="77:29" pos:end="77:44"><name pos:start="77:29" pos:end="77:29">s</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:44">codebook_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:58"><expr pos:start="79:5" pos:end="79:57"><name pos:start="79:5" pos:end="79:27"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:27">next_codebook_buffer</name></name> <operator pos:start="79:29" pos:end="79:29">=</operator> <call pos:start="79:31" pos:end="79:57"><name pos:start="79:31" pos:end="79:39">av_malloc</name><argument_list pos:start="79:40" pos:end="79:57">(<argument pos:start="79:41" pos:end="79:56"><expr pos:start="79:41" pos:end="79:56"><name pos:start="79:41" pos:end="79:56"><name pos:start="79:41" pos:end="79:41">s</name><operator pos:start="79:42" pos:end="79:43">-&gt;</operator><name pos:start="79:44" pos:end="79:56">codebook_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:44">/* initialize the solid-color vectors */</comment>

    <if_stmt pos:start="85:5" pos:end="105:5"><if pos:start="85:5" pos:end="95:5">if <condition pos:start="85:8" pos:end="85:30">(<expr pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:24"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:24">vector_height</name></name> <operator pos:start="85:26" pos:end="85:27">==</operator> <literal type="number" pos:start="85:29" pos:end="85:29">4</literal></expr>)</condition> <block pos:start="85:32" pos:end="95:5">{<block_content pos:start="87:9" pos:end="93:50">

        <expr_stmt pos:start="87:9" pos:end="87:37"><expr pos:start="87:9" pos:end="87:36"><name pos:start="87:9" pos:end="87:22">codebook_index</name> <operator pos:start="87:24" pos:end="87:24">=</operator> <literal type="number" pos:start="87:26" pos:end="87:31">0xFF00</literal> <operator pos:start="87:33" pos:end="87:33">*</operator> <literal type="number" pos:start="87:35" pos:end="87:36">16</literal></expr>;</expr_stmt>

        <for pos:start="89:9" pos:end="93:50">for <control pos:start="89:13" pos:end="89:33">(<init pos:start="89:14" pos:end="89:19"><expr pos:start="89:14" pos:end="89:18"><name pos:start="89:14" pos:end="89:14">i</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <literal type="number" pos:start="89:18" pos:end="89:18">0</literal></expr>;</init> <condition pos:start="89:21" pos:end="89:28"><expr pos:start="89:21" pos:end="89:27"><name pos:start="89:21" pos:end="89:21">i</name> <operator pos:start="89:23" pos:end="89:23">&lt;</operator> <literal type="number" pos:start="89:25" pos:end="89:27">256</literal></expr>;</condition> <incr pos:start="89:30" pos:end="89:32"><expr pos:start="89:30" pos:end="89:32"><name pos:start="89:30" pos:end="89:30">i</name><operator pos:start="89:31" pos:end="89:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="91:13" pos:end="93:50"><block_content pos:start="91:13" pos:end="93:50">

            <for pos:start="91:13" pos:end="93:50">for <control pos:start="91:17" pos:end="91:36">(<init pos:start="91:18" pos:end="91:23"><expr pos:start="91:18" pos:end="91:22"><name pos:start="91:18" pos:end="91:18">j</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <literal type="number" pos:start="91:22" pos:end="91:22">0</literal></expr>;</init> <condition pos:start="91:25" pos:end="91:31"><expr pos:start="91:25" pos:end="91:30"><name pos:start="91:25" pos:end="91:25">j</name> <operator pos:start="91:27" pos:end="91:27">&lt;</operator> <literal type="number" pos:start="91:29" pos:end="91:30">16</literal></expr>;</condition> <incr pos:start="91:33" pos:end="91:35"><expr pos:start="91:33" pos:end="91:35"><name pos:start="91:33" pos:end="91:33">j</name><operator pos:start="91:34" pos:end="91:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="93:17" pos:end="93:50"><block_content pos:start="93:17" pos:end="93:50">

                <expr_stmt pos:start="93:17" pos:end="93:50"><expr pos:start="93:17" pos:end="93:49"><name pos:start="93:17" pos:end="93:45"><name pos:start="93:17" pos:end="93:17">s</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:27">codebook</name><index pos:start="93:28" pos:end="93:45">[<expr pos:start="93:29" pos:end="93:44"><name pos:start="93:29" pos:end="93:42">codebook_index</name><operator pos:start="93:43" pos:end="93:44">++</operator></expr>]</index></name> <operator pos:start="93:47" pos:end="93:47">=</operator> <name pos:start="93:49" pos:end="93:49">i</name></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="105:5">else <block pos:start="95:12" pos:end="105:5">{<block_content pos:start="97:9" pos:end="103:50">

        <expr_stmt pos:start="97:9" pos:end="97:35"><expr pos:start="97:9" pos:end="97:34"><name pos:start="97:9" pos:end="97:22">codebook_index</name> <operator pos:start="97:24" pos:end="97:24">=</operator> <literal type="number" pos:start="97:26" pos:end="97:30">0xF00</literal> <operator pos:start="97:32" pos:end="97:32">*</operator> <literal type="number" pos:start="97:34" pos:end="97:34">8</literal></expr>;</expr_stmt>

        <for pos:start="99:9" pos:end="103:50">for <control pos:start="99:13" pos:end="99:33">(<init pos:start="99:14" pos:end="99:19"><expr pos:start="99:14" pos:end="99:18"><name pos:start="99:14" pos:end="99:14">i</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <literal type="number" pos:start="99:18" pos:end="99:18">0</literal></expr>;</init> <condition pos:start="99:21" pos:end="99:28"><expr pos:start="99:21" pos:end="99:27"><name pos:start="99:21" pos:end="99:21">i</name> <operator pos:start="99:23" pos:end="99:23">&lt;</operator> <literal type="number" pos:start="99:25" pos:end="99:27">256</literal></expr>;</condition> <incr pos:start="99:30" pos:end="99:32"><expr pos:start="99:30" pos:end="99:32"><name pos:start="99:30" pos:end="99:30">i</name><operator pos:start="99:31" pos:end="99:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="101:13" pos:end="103:50"><block_content pos:start="101:13" pos:end="103:50">

            <for pos:start="101:13" pos:end="103:50">for <control pos:start="101:17" pos:end="101:35">(<init pos:start="101:18" pos:end="101:23"><expr pos:start="101:18" pos:end="101:22"><name pos:start="101:18" pos:end="101:18">j</name> <operator pos:start="101:20" pos:end="101:20">=</operator> <literal type="number" pos:start="101:22" pos:end="101:22">0</literal></expr>;</init> <condition pos:start="101:25" pos:end="101:30"><expr pos:start="101:25" pos:end="101:29"><name pos:start="101:25" pos:end="101:25">j</name> <operator pos:start="101:27" pos:end="101:27">&lt;</operator> <literal type="number" pos:start="101:29" pos:end="101:29">8</literal></expr>;</condition> <incr pos:start="101:32" pos:end="101:34"><expr pos:start="101:32" pos:end="101:34"><name pos:start="101:32" pos:end="101:32">j</name><operator pos:start="101:33" pos:end="101:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="103:17" pos:end="103:50"><block_content pos:start="103:17" pos:end="103:50">

                <expr_stmt pos:start="103:17" pos:end="103:50"><expr pos:start="103:17" pos:end="103:49"><name pos:start="103:17" pos:end="103:45"><name pos:start="103:17" pos:end="103:17">s</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:27">codebook</name><index pos:start="103:28" pos:end="103:45">[<expr pos:start="103:29" pos:end="103:44"><name pos:start="103:29" pos:end="103:42">codebook_index</name><operator pos:start="103:43" pos:end="103:44">++</operator></expr>]</index></name> <operator pos:start="103:47" pos:end="103:47">=</operator> <name pos:start="103:49" pos:end="103:49">i</name></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:38"><expr pos:start="107:5" pos:end="107:37"><name pos:start="107:5" pos:end="107:33"><name pos:start="107:5" pos:end="107:5">s</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:33">next_codebook_buffer_index</name></name> <operator pos:start="107:35" pos:end="107:35">=</operator> <literal type="number" pos:start="107:37" pos:end="107:37">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="111:5" pos:end="111:32">/* allocate decode buffer */</comment>

    <expr_stmt pos:start="113:5" pos:end="115:43"><expr pos:start="113:5" pos:end="115:42"><name pos:start="113:5" pos:end="113:25"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:25">decode_buffer_size</name></name> <operator pos:start="113:27" pos:end="113:27">=</operator> <operator pos:start="113:29" pos:end="113:29">(</operator><name pos:start="113:30" pos:end="113:37"><name pos:start="113:30" pos:end="113:30">s</name><operator pos:start="113:31" pos:end="113:32">-&gt;</operator><name pos:start="113:33" pos:end="113:37">width</name></name> <operator pos:start="113:39" pos:end="113:39">/</operator> <name pos:start="113:41" pos:end="113:55"><name pos:start="113:41" pos:end="113:41">s</name><operator pos:start="113:42" pos:end="113:43">-&gt;</operator><name pos:start="113:44" pos:end="113:55">vector_width</name></name><operator pos:start="113:56" pos:end="113:56">)</operator> <operator pos:start="113:58" pos:end="113:58">*</operator>

        <operator pos:start="115:9" pos:end="115:9">(</operator><name pos:start="115:10" pos:end="115:18"><name pos:start="115:10" pos:end="115:10">s</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:18">height</name></name> <operator pos:start="115:20" pos:end="115:20">/</operator> <name pos:start="115:22" pos:end="115:37"><name pos:start="115:22" pos:end="115:22">s</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:37">vector_height</name></name><operator pos:start="115:38" pos:end="115:38">)</operator> <operator pos:start="115:40" pos:end="115:40">*</operator> <literal type="number" pos:start="115:42" pos:end="115:42">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:56"><expr pos:start="117:5" pos:end="117:55"><name pos:start="117:5" pos:end="117:20"><name pos:start="117:5" pos:end="117:5">s</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:20">decode_buffer</name></name> <operator pos:start="117:22" pos:end="117:22">=</operator> <call pos:start="117:24" pos:end="117:55"><name pos:start="117:24" pos:end="117:32">av_malloc</name><argument_list pos:start="117:33" pos:end="117:55">(<argument pos:start="117:34" pos:end="117:54"><expr pos:start="117:34" pos:end="117:54"><name pos:start="117:34" pos:end="117:54"><name pos:start="117:34" pos:end="117:34">s</name><operator pos:start="117:35" pos:end="117:36">-&gt;</operator><name pos:start="117:37" pos:end="117:54">decode_buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:28"><expr pos:start="121:5" pos:end="121:27"><name pos:start="121:5" pos:end="121:20"><name pos:start="121:5" pos:end="121:5">s</name><operator pos:start="121:6" pos:end="121:7">-&gt;</operator><name pos:start="121:8" pos:end="121:12">frame</name><operator pos:start="121:13" pos:end="121:13">.</operator><name pos:start="121:14" pos:end="121:17">data</name><index pos:start="121:18" pos:end="121:20">[<expr pos:start="121:19" pos:end="121:19"><literal type="number" pos:start="121:19" pos:end="121:19">0</literal></expr>]</index></name> <operator pos:start="121:22" pos:end="121:22">=</operator> <name pos:start="121:24" pos:end="121:27">NULL</name></expr>;</expr_stmt>



    <return pos:start="125:5" pos:end="125:13">return <expr pos:start="125:12" pos:end="125:12"><literal type="number" pos:start="125:12" pos:end="125:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
