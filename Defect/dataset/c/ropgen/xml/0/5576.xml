<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5576.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">ide_init_drive</name><parameter_list pos:start="1:20" pos:end="1:71">(<parameter pos:start="1:21" pos:end="1:31"><decl pos:start="1:21" pos:end="1:31"><type pos:start="1:21" pos:end="1:31"><name pos:start="1:21" pos:end="1:28">IDEState</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:31">s</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:49"><decl pos:start="1:34" pos:end="1:49"><type pos:start="1:34" pos:end="1:49"><name pos:start="1:34" pos:end="1:42">DriveInfo</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">dinfo</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:70"><decl pos:start="1:52" pos:end="1:70"><type pos:start="1:52" pos:end="1:70"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:61">char</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:70">version</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:17">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">cylinders</name></decl>, <decl pos:start="5:20" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:24">heads</name></decl>, <decl pos:start="5:27" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:27" pos:end="5:30">secs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:23">nb_sectors</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="51:5"><if pos:start="11:5" pos:end="51:5">if <condition pos:start="11:8" pos:end="11:29">(<expr pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:13">dinfo</name> <operator pos:start="11:15" pos:end="11:16">&amp;&amp;</operator> <name pos:start="11:18" pos:end="11:28"><name pos:start="11:18" pos:end="11:22">dinfo</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:28">bdrv</name></name></expr>)</condition> <block pos:start="11:31" pos:end="51:5">{<block_content pos:start="13:9" pos:end="49:45">

        <expr_stmt pos:start="13:9" pos:end="13:28"><expr pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:13"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:13">bs</name></name> <operator pos:start="13:15" pos:end="13:15">=</operator> <name pos:start="13:17" pos:end="13:27"><name pos:start="13:17" pos:end="13:21">dinfo</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:27">bdrv</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:46"><expr pos:start="15:9" pos:end="15:45"><call pos:start="15:9" pos:end="15:45"><name pos:start="15:9" pos:end="15:25">bdrv_get_geometry</name><argument_list pos:start="15:26" pos:end="15:45">(<argument pos:start="15:27" pos:end="15:31"><expr pos:start="15:27" pos:end="15:31"><name pos:start="15:27" pos:end="15:31"><name pos:start="15:27" pos:end="15:27">s</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:31">bs</name></name></expr></argument>, <argument pos:start="15:34" pos:end="15:44"><expr pos:start="15:34" pos:end="15:44"><operator pos:start="15:34" pos:end="15:34">&amp;</operator><name pos:start="15:35" pos:end="15:44">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:62"><expr pos:start="17:9" pos:end="17:61"><call pos:start="17:9" pos:end="17:61"><name pos:start="17:9" pos:end="17:27">bdrv_guess_geometry</name><argument_list pos:start="17:28" pos:end="17:61">(<argument pos:start="17:29" pos:end="17:33"><expr pos:start="17:29" pos:end="17:33"><name pos:start="17:29" pos:end="17:33"><name pos:start="17:29" pos:end="17:29">s</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:33">bs</name></name></expr></argument>, <argument pos:start="17:36" pos:end="17:45"><expr pos:start="17:36" pos:end="17:45"><operator pos:start="17:36" pos:end="17:36">&amp;</operator><name pos:start="17:37" pos:end="17:45">cylinders</name></expr></argument>, <argument pos:start="17:48" pos:end="17:53"><expr pos:start="17:48" pos:end="17:53"><operator pos:start="17:48" pos:end="17:48">&amp;</operator><name pos:start="17:49" pos:end="17:53">heads</name></expr></argument>, <argument pos:start="17:56" pos:end="17:60"><expr pos:start="17:56" pos:end="17:60"><operator pos:start="17:56" pos:end="17:56">&amp;</operator><name pos:start="17:57" pos:end="17:60">secs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:33"><expr pos:start="19:9" pos:end="19:32"><name pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:20">cylinders</name></name> <operator pos:start="19:22" pos:end="19:22">=</operator> <name pos:start="19:24" pos:end="19:32">cylinders</name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:25"><expr pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:16">heads</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <name pos:start="21:20" pos:end="21:24">heads</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:26"><expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:18">sectors</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:25">secs</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:35"><expr pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:21">nb_sectors</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:34">nb_sectors</name></expr>;</expr_stmt>

        <comment type="block" pos:start="27:9" pos:end="29:31">/* The SMART values should be preserved across power cycles

           but they aren't.  */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:29"><expr pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:24">smart_enabled</name></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <literal type="number" pos:start="31:28" pos:end="31:28">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:25">smart_autosave</name></name> <operator pos:start="33:27" pos:end="33:27">=</operator> <literal type="number" pos:start="33:29" pos:end="33:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:28"><expr pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:23">smart_errors</name></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <literal type="number" pos:start="35:27" pos:end="35:27">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:36"><expr pos:start="37:9" pos:end="37:35"><name pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:31">smart_selftest_count</name></name> <operator pos:start="37:33" pos:end="37:33">=</operator> <literal type="number" pos:start="37:35" pos:end="37:35">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:57">(<expr pos:start="39:13" pos:end="39:56"><call pos:start="39:13" pos:end="39:37"><name pos:start="39:13" pos:end="39:30">bdrv_get_type_hint</name><argument_list pos:start="39:31" pos:end="39:37">(<argument pos:start="39:32" pos:end="39:36"><expr pos:start="39:32" pos:end="39:36"><name pos:start="39:32" pos:end="39:36"><name pos:start="39:32" pos:end="39:32">s</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:36">bs</name></name></expr></argument>)</argument_list></call> <operator pos:start="39:39" pos:end="39:40">==</operator> <name pos:start="39:42" pos:end="39:56">BDRV_TYPE_CDROM</name></expr>)</condition> <block pos:start="39:59" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:58">

            <expr_stmt pos:start="41:13" pos:end="41:28"><expr pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:23"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:23">is_cdrom</name></name> <operator pos:start="41:25" pos:end="41:25">=</operator> <literal type="number" pos:start="41:27" pos:end="41:27">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:58"><expr pos:start="43:13" pos:end="43:57"><call pos:start="43:13" pos:end="43:57"><name pos:start="43:13" pos:end="43:30">bdrv_set_change_cb</name><argument_list pos:start="43:31" pos:end="43:57">(<argument pos:start="43:32" pos:end="43:36"><expr pos:start="43:32" pos:end="43:36"><name pos:start="43:32" pos:end="43:36"><name pos:start="43:32" pos:end="43:32">s</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:36">bs</name></name></expr></argument>, <argument pos:start="43:39" pos:end="43:53"><expr pos:start="43:39" pos:end="43:53"><name pos:start="43:39" pos:end="43:53">cdrom_change_cb</name></expr></argument>, <argument pos:start="43:56" pos:end="43:56"><expr pos:start="43:56" pos:end="43:56"><name pos:start="43:56" pos:end="43:56">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="49:45"><expr pos:start="47:9" pos:end="49:44"><call pos:start="47:9" pos:end="49:44"><name pos:start="47:9" pos:end="47:15">strncpy</name><argument_list pos:start="47:16" pos:end="49:44">(<argument pos:start="47:17" pos:end="47:35"><expr pos:start="47:17" pos:end="47:35"><name pos:start="47:17" pos:end="47:35"><name pos:start="47:17" pos:end="47:17">s</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:35">drive_serial_str</name></name></expr></argument>, <argument pos:start="47:38" pos:end="47:60"><expr pos:start="47:38" pos:end="47:60"><call pos:start="47:38" pos:end="47:60"><name pos:start="47:38" pos:end="47:53">drive_get_serial</name><argument_list pos:start="47:54" pos:end="47:60">(<argument pos:start="47:55" pos:end="47:59"><expr pos:start="47:55" pos:end="47:59"><name pos:start="47:55" pos:end="47:59"><name pos:start="47:55" pos:end="47:55">s</name><operator pos:start="47:56" pos:end="47:57">-&gt;</operator><name pos:start="47:58" pos:end="47:59">bs</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="49:17" pos:end="49:43"><expr pos:start="49:17" pos:end="49:43"><sizeof pos:start="49:17" pos:end="49:43">sizeof<argument_list pos:start="49:23" pos:end="49:43">(<argument pos:start="49:24" pos:end="49:42"><expr pos:start="49:24" pos:end="49:42"><name pos:start="49:24" pos:end="49:42"><name pos:start="49:24" pos:end="49:24">s</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:42">drive_serial_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="57:44"><if pos:start="53:5" pos:end="57:44">if <condition pos:start="53:8" pos:end="53:41">(<expr pos:start="53:9" pos:end="53:40"><call pos:start="53:9" pos:end="53:35"><name pos:start="53:9" pos:end="53:14">strlen</name><argument_list pos:start="53:15" pos:end="53:35">(<argument pos:start="53:16" pos:end="53:34"><expr pos:start="53:16" pos:end="53:34"><name pos:start="53:16" pos:end="53:34"><name pos:start="53:16" pos:end="53:16">s</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:34">drive_serial_str</name></name></expr></argument>)</argument_list></call> <operator pos:start="53:37" pos:end="53:38">==</operator> <literal type="number" pos:start="53:40" pos:end="53:40">0</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="57:44"><block_content pos:start="55:9" pos:end="57:44">

        <expr_stmt pos:start="55:9" pos:end="57:44"><expr pos:start="55:9" pos:end="57:43"><call pos:start="55:9" pos:end="57:43"><name pos:start="55:9" pos:end="55:16">snprintf</name><argument_list pos:start="55:17" pos:end="57:43">(<argument pos:start="55:18" pos:end="55:36"><expr pos:start="55:18" pos:end="55:36"><name pos:start="55:18" pos:end="55:36"><name pos:start="55:18" pos:end="55:18">s</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:36">drive_serial_str</name></name></expr></argument>, <argument pos:start="55:39" pos:end="55:65"><expr pos:start="55:39" pos:end="55:65"><sizeof pos:start="55:39" pos:end="55:65">sizeof<argument_list pos:start="55:45" pos:end="55:65">(<argument pos:start="55:46" pos:end="55:64"><expr pos:start="55:46" pos:end="55:64"><name pos:start="55:46" pos:end="55:64"><name pos:start="55:46" pos:end="55:46">s</name><operator pos:start="55:47" pos:end="55:48">-&gt;</operator><name pos:start="55:49" pos:end="55:64">drive_serial_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                 <argument pos:start="57:18" pos:end="57:25"><expr pos:start="57:18" pos:end="57:25"><literal type="string" pos:start="57:18" pos:end="57:25">"QM%05d"</literal></expr></argument>, <argument pos:start="57:28" pos:end="57:42"><expr pos:start="57:28" pos:end="57:42"><name pos:start="57:28" pos:end="57:42"><name pos:start="57:28" pos:end="57:28">s</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:42">drive_serial</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:16">(<expr pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:15">version</name></expr>)</condition> <block pos:start="59:18" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:57">

        <expr_stmt pos:start="61:9" pos:end="61:57"><expr pos:start="61:9" pos:end="61:56"><call pos:start="61:9" pos:end="61:56"><name pos:start="61:9" pos:end="61:15">pstrcpy</name><argument_list pos:start="61:16" pos:end="61:56">(<argument pos:start="61:17" pos:end="61:26"><expr pos:start="61:17" pos:end="61:26"><name pos:start="61:17" pos:end="61:26"><name pos:start="61:17" pos:end="61:17">s</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:26">version</name></name></expr></argument>, <argument pos:start="61:29" pos:end="61:46"><expr pos:start="61:29" pos:end="61:46"><sizeof pos:start="61:29" pos:end="61:46">sizeof<argument_list pos:start="61:35" pos:end="61:46">(<argument pos:start="61:36" pos:end="61:45"><expr pos:start="61:36" pos:end="61:45"><name pos:start="61:36" pos:end="61:45"><name pos:start="61:36" pos:end="61:36">s</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:45">version</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="61:49" pos:end="61:55"><expr pos:start="61:49" pos:end="61:55"><name pos:start="61:49" pos:end="61:55">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="63:7" pos:end="67:5">else <block pos:start="63:12" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:62">

        <expr_stmt pos:start="65:9" pos:end="65:62"><expr pos:start="65:9" pos:end="65:61"><call pos:start="65:9" pos:end="65:61"><name pos:start="65:9" pos:end="65:15">pstrcpy</name><argument_list pos:start="65:16" pos:end="65:61">(<argument pos:start="65:17" pos:end="65:26"><expr pos:start="65:17" pos:end="65:26"><name pos:start="65:17" pos:end="65:26"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:26">version</name></name></expr></argument>, <argument pos:start="65:29" pos:end="65:46"><expr pos:start="65:29" pos:end="65:46"><sizeof pos:start="65:29" pos:end="65:46">sizeof<argument_list pos:start="65:35" pos:end="65:46">(<argument pos:start="65:36" pos:end="65:45"><expr pos:start="65:36" pos:end="65:45"><name pos:start="65:36" pos:end="65:45"><name pos:start="65:36" pos:end="65:36">s</name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:45">version</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="65:49" pos:end="65:60"><expr pos:start="65:49" pos:end="65:60"><name pos:start="65:49" pos:end="65:60">QEMU_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:17"><expr pos:start="69:5" pos:end="69:16"><call pos:start="69:5" pos:end="69:16"><name pos:start="69:5" pos:end="69:13">ide_reset</name><argument_list pos:start="69:14" pos:end="69:16">(<argument pos:start="69:15" pos:end="69:15"><expr pos:start="69:15" pos:end="69:15"><name pos:start="69:15" pos:end="69:15">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
