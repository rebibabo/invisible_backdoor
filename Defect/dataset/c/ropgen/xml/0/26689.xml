<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26689.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">pcm_bluray_parse_header</name><parameter_list pos:start="1:35" pos:end="3:57">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:56"><name pos:start="1:36" pos:end="1:49">AVCodecContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:56">avctx</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:56"><decl pos:start="3:36" pos:end="3:56"><type pos:start="3:36" pos:end="3:56"><specifier pos:start="3:36" pos:end="3:40">const</specifier> <name pos:start="3:42" pos:end="3:48">uint8_t</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:56">header</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="141:1">{<block_content pos:start="7:5" pos:end="139:13">

    <decl_stmt pos:start="7:5" pos:end="7:65"><decl pos:start="7:5" pos:end="7:64"><type pos:start="7:5" pos:end="7:24"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:24">uint8_t</name></type> <name pos:start="7:26" pos:end="7:44"><name pos:start="7:26" pos:end="7:41">bits_per_samples</name><index pos:start="7:42" pos:end="7:44">[<expr pos:start="7:43" pos:end="7:43"><literal type="number" pos:start="7:43" pos:end="7:43">4</literal></expr>]</index></name> <init pos:start="7:46" pos:end="7:64">= <expr pos:start="7:48" pos:end="7:64"><block pos:start="7:48" pos:end="7:64">{ <expr pos:start="7:50" pos:end="7:50"><literal type="number" pos:start="7:50" pos:end="7:50">0</literal></expr>, <expr pos:start="7:53" pos:end="7:54"><literal type="number" pos:start="7:53" pos:end="7:54">16</literal></expr>, <expr pos:start="7:57" pos:end="7:58"><literal type="number" pos:start="7:57" pos:end="7:58">20</literal></expr>, <expr pos:start="7:61" pos:end="7:62"><literal type="number" pos:start="7:61" pos:end="7:62">24</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="17:6"><decl pos:start="9:5" pos:end="17:5"><type pos:start="9:5" pos:end="9:25"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <specifier pos:start="9:12" pos:end="9:16">const</specifier> <name pos:start="9:18" pos:end="9:25">uint32_t</name></type> <name pos:start="9:27" pos:end="9:45"><name pos:start="9:27" pos:end="9:41">channel_layouts</name><index pos:start="9:42" pos:end="9:45">[<expr pos:start="9:43" pos:end="9:44"><literal type="number" pos:start="9:43" pos:end="9:44">16</literal></expr>]</index></name> <init pos:start="9:47" pos:end="17:5">= <expr pos:start="9:49" pos:end="17:5"><block pos:start="9:49" pos:end="17:5">{

        <expr pos:start="11:9" pos:end="11:9"><literal type="number" pos:start="11:9" pos:end="11:9">0</literal></expr>, <expr pos:start="11:12" pos:end="11:28"><name pos:start="11:12" pos:end="11:28">AV_CH_LAYOUT_MONO</name></expr>, <expr pos:start="11:31" pos:end="11:31"><literal type="number" pos:start="11:31" pos:end="11:31">0</literal></expr>, <expr pos:start="11:34" pos:end="11:52"><name pos:start="11:34" pos:end="11:52">AV_CH_LAYOUT_STEREO</name></expr>, <expr pos:start="11:55" pos:end="11:75"><name pos:start="11:55" pos:end="11:75">AV_CH_LAYOUT_SURROUND</name></expr>,

        <expr pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:24">AV_CH_LAYOUT_2_1</name></expr>, <expr pos:start="13:27" pos:end="13:46"><name pos:start="13:27" pos:end="13:46">AV_CH_LAYOUT_4POINT0</name></expr>, <expr pos:start="13:49" pos:end="13:64"><name pos:start="13:49" pos:end="13:64">AV_CH_LAYOUT_2_2</name></expr>, <expr pos:start="13:67" pos:end="13:86"><name pos:start="13:67" pos:end="13:86">AV_CH_LAYOUT_5POINT0</name></expr>,

        <expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:28">AV_CH_LAYOUT_5POINT1</name></expr>, <expr pos:start="15:31" pos:end="15:50"><name pos:start="15:31" pos:end="15:50">AV_CH_LAYOUT_7POINT0</name></expr>, <expr pos:start="15:53" pos:end="15:72"><name pos:start="15:53" pos:end="15:72">AV_CH_LAYOUT_7POINT1</name></expr>, <expr pos:start="15:75" pos:end="15:75"><literal type="number" pos:start="15:75" pos:end="15:75">0</literal></expr>, <expr pos:start="15:78" pos:end="15:78"><literal type="number" pos:start="15:78" pos:end="15:78">0</literal></expr>, <expr pos:start="15:81" pos:end="15:81"><literal type="number" pos:start="15:81" pos:end="15:81">0</literal></expr>, <expr pos:start="15:84" pos:end="15:84"><literal type="number" pos:start="15:84" pos:end="15:84">0</literal></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="23:6"><decl pos:start="19:5" pos:end="23:5"><type pos:start="19:5" pos:end="19:24"><specifier pos:start="19:5" pos:end="19:10">static</specifier> <specifier pos:start="19:12" pos:end="19:16">const</specifier> <name pos:start="19:18" pos:end="19:24">uint8_t</name></type> <name pos:start="19:26" pos:end="19:37"><name pos:start="19:26" pos:end="19:33">channels</name><index pos:start="19:34" pos:end="19:37">[<expr pos:start="19:35" pos:end="19:36"><literal type="number" pos:start="19:35" pos:end="19:36">16</literal></expr>]</index></name> <init pos:start="19:39" pos:end="23:5">= <expr pos:start="19:41" pos:end="23:5"><block pos:start="19:41" pos:end="23:5">{

        <expr pos:start="21:9" pos:end="21:9"><literal type="number" pos:start="21:9" pos:end="21:9">0</literal></expr>, <expr pos:start="21:12" pos:end="21:12"><literal type="number" pos:start="21:12" pos:end="21:12">1</literal></expr>, <expr pos:start="21:15" pos:end="21:15"><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>, <expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">2</literal></expr>, <expr pos:start="21:21" pos:end="21:21"><literal type="number" pos:start="21:21" pos:end="21:21">3</literal></expr>, <expr pos:start="21:24" pos:end="21:24"><literal type="number" pos:start="21:24" pos:end="21:24">3</literal></expr>, <expr pos:start="21:27" pos:end="21:27"><literal type="number" pos:start="21:27" pos:end="21:27">4</literal></expr>, <expr pos:start="21:30" pos:end="21:30"><literal type="number" pos:start="21:30" pos:end="21:30">4</literal></expr>, <expr pos:start="21:33" pos:end="21:33"><literal type="number" pos:start="21:33" pos:end="21:33">5</literal></expr>, <expr pos:start="21:36" pos:end="21:36"><literal type="number" pos:start="21:36" pos:end="21:36">6</literal></expr>, <expr pos:start="21:39" pos:end="21:39"><literal type="number" pos:start="21:39" pos:end="21:39">7</literal></expr>, <expr pos:start="21:42" pos:end="21:42"><literal type="number" pos:start="21:42" pos:end="21:42">8</literal></expr>, <expr pos:start="21:45" pos:end="21:45"><literal type="number" pos:start="21:45" pos:end="21:45">0</literal></expr>, <expr pos:start="21:48" pos:end="21:48"><literal type="number" pos:start="21:48" pos:end="21:48">0</literal></expr>, <expr pos:start="21:51" pos:end="21:51"><literal type="number" pos:start="21:51" pos:end="21:51">0</literal></expr>, <expr pos:start="21:54" pos:end="21:54"><literal type="number" pos:start="21:54" pos:end="21:54">0</literal></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:44"><decl pos:start="25:5" pos:end="25:43"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:11">uint8_t</name></type> <name pos:start="25:13" pos:end="25:26">channel_layout</name> <init pos:start="25:28" pos:end="25:43">= <expr pos:start="25:30" pos:end="25:43"><name pos:start="25:30" pos:end="25:38"><name pos:start="25:30" pos:end="25:35">header</name><index pos:start="25:36" pos:end="25:38">[<expr pos:start="25:37" pos:end="25:37"><literal type="number" pos:start="25:37" pos:end="25:37">2</literal></expr>]</index></name> <operator pos:start="25:40" pos:end="25:41">&gt;&gt;</operator> <literal type="number" pos:start="25:43" pos:end="25:43">4</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="33:60"><if pos:start="29:5" pos:end="33:60">if <condition pos:start="29:8" pos:end="29:42">(<expr pos:start="29:9" pos:end="29:41"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:13">avctx</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:20">debug</name></name> <operator pos:start="29:22" pos:end="29:22">&amp;</operator> <name pos:start="29:24" pos:end="29:41">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="33:60"><block_content pos:start="31:9" pos:end="33:60">

        <expr_stmt pos:start="31:9" pos:end="33:60"><expr pos:start="31:9" pos:end="33:59"><call pos:start="31:9" pos:end="33:59"><name pos:start="31:9" pos:end="31:15">av_dlog</name><argument_list pos:start="31:16" pos:end="33:59">(<argument pos:start="31:17" pos:end="31:21"><expr pos:start="31:17" pos:end="31:21"><name pos:start="31:17" pos:end="31:21">avctx</name></expr></argument>, <argument pos:start="31:24" pos:end="31:77"><expr pos:start="31:24" pos:end="31:77"><literal type="string" pos:start="31:24" pos:end="31:77">"pcm_bluray_parse_header: header = %02x%02x%02x%02x\n"</literal></expr></argument>,

                <argument pos:start="33:17" pos:end="33:25"><expr pos:start="33:17" pos:end="33:25"><name pos:start="33:17" pos:end="33:25"><name pos:start="33:17" pos:end="33:22">header</name><index pos:start="33:23" pos:end="33:25">[<expr pos:start="33:24" pos:end="33:24"><literal type="number" pos:start="33:24" pos:end="33:24">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="33:28" pos:end="33:36"><expr pos:start="33:28" pos:end="33:36"><name pos:start="33:28" pos:end="33:36"><name pos:start="33:28" pos:end="33:33">header</name><index pos:start="33:34" pos:end="33:36">[<expr pos:start="33:35" pos:end="33:35"><literal type="number" pos:start="33:35" pos:end="33:35">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="33:39" pos:end="33:47"><expr pos:start="33:39" pos:end="33:47"><name pos:start="33:39" pos:end="33:47"><name pos:start="33:39" pos:end="33:44">header</name><index pos:start="33:45" pos:end="33:47">[<expr pos:start="33:46" pos:end="33:46"><literal type="number" pos:start="33:46" pos:end="33:46">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="33:50" pos:end="33:58"><expr pos:start="33:50" pos:end="33:58"><name pos:start="33:50" pos:end="33:58"><name pos:start="33:50" pos:end="33:55">header</name><index pos:start="33:56" pos:end="33:58">[<expr pos:start="33:57" pos:end="33:57"><literal type="number" pos:start="33:57" pos:end="33:57">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:67">/* get the sample depth and derive the sample format from it */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:68"><expr pos:start="39:5" pos:end="39:67"><name pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:9">avctx</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:32">bits_per_coded_sample</name></name> <operator pos:start="39:34" pos:end="39:34">=</operator> <name pos:start="39:36" pos:end="39:67"><name pos:start="39:36" pos:end="39:51">bits_per_samples</name><index pos:start="39:52" pos:end="39:67">[<expr pos:start="39:53" pos:end="39:66"><name pos:start="39:53" pos:end="39:61"><name pos:start="39:53" pos:end="39:58">header</name><index pos:start="39:59" pos:end="39:61">[<expr pos:start="39:60" pos:end="39:60"><literal type="number" pos:start="39:60" pos:end="39:60">3</literal></expr>]</index></name> <operator pos:start="39:63" pos:end="39:64">&gt;&gt;</operator> <literal type="number" pos:start="39:66" pos:end="39:66">6</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:38">(<expr pos:start="41:9" pos:end="41:37"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:37"><name pos:start="41:10" pos:end="41:14">avctx</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:37">bits_per_coded_sample</name></name></expr>)</condition> <block pos:start="41:40" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:18">

        <expr_stmt pos:start="43:9" pos:end="43:70"><expr pos:start="43:9" pos:end="43:69"><call pos:start="43:9" pos:end="43:69"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:69">(<argument pos:start="43:16" pos:end="43:20"><expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">avctx</name></expr></argument>, <argument pos:start="43:23" pos:end="43:34"><expr pos:start="43:23" pos:end="43:34"><name pos:start="43:23" pos:end="43:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:37" pos:end="43:68"><expr pos:start="43:37" pos:end="43:68"><literal type="string" pos:start="43:37" pos:end="43:68">"unsupported sample depth (0)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:18">return <expr pos:start="45:16" pos:end="45:17"><operator pos:start="45:16" pos:end="45:16">-</operator><literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="51:79"><expr pos:start="49:5" pos:end="51:78"><name pos:start="49:5" pos:end="49:21"><name pos:start="49:5" pos:end="49:9">avctx</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:21">sample_fmt</name></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <ternary pos:start="49:25" pos:end="51:78"><condition pos:start="49:25" pos:end="49:60"><expr pos:start="49:25" pos:end="49:58"><name pos:start="49:25" pos:end="49:52"><name pos:start="49:25" pos:end="49:29">avctx</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:52">bits_per_coded_sample</name></name> <operator pos:start="49:54" pos:end="49:55">==</operator> <literal type="number" pos:start="49:57" pos:end="49:58">16</literal></expr> ?</condition><then pos:start="49:62" pos:end="49:78"> <expr pos:start="49:62" pos:end="49:78"><name pos:start="49:62" pos:end="49:78">AV_SAMPLE_FMT_S16</name></expr> </then><else pos:start="49:80" pos:end="51:78">:

                                                             <expr pos:start="51:62" pos:end="51:78"><name pos:start="51:62" pos:end="51:78">AV_SAMPLE_FMT_S32</name></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:66"><if pos:start="53:5" pos:end="55:66">if <condition pos:start="53:8" pos:end="53:47">(<expr pos:start="53:9" pos:end="53:46"><name pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:13">avctx</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:25">sample_fmt</name></name> <operator pos:start="53:27" pos:end="53:28">==</operator> <name pos:start="53:30" pos:end="53:46">AV_SAMPLE_FMT_S32</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:66"><block_content pos:start="55:9" pos:end="55:66">

        <expr_stmt pos:start="55:9" pos:end="55:66"><expr pos:start="55:9" pos:end="55:65"><name pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:13">avctx</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:34">bits_per_raw_sample</name></name> <operator pos:start="55:36" pos:end="55:36">=</operator> <name pos:start="55:38" pos:end="55:65"><name pos:start="55:38" pos:end="55:42">avctx</name><operator pos:start="55:43" pos:end="55:44">-&gt;</operator><name pos:start="55:45" pos:end="55:65">bits_per_coded_sample</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:65">/* get the sample rate. Not all values are known or exist. */</comment>

    <switch pos:start="61:5" pos:end="91:5">switch <condition pos:start="61:12" pos:end="61:29">(<expr pos:start="61:13" pos:end="61:28"><name pos:start="61:13" pos:end="61:21"><name pos:start="61:13" pos:end="61:18">header</name><index pos:start="61:19" pos:end="61:21">[<expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">2</literal></expr>]</index></name> <operator pos:start="61:23" pos:end="61:23">&amp;</operator> <literal type="number" pos:start="61:25" pos:end="61:28">0x0f</literal></expr>)</condition> <block pos:start="61:31" pos:end="91:5">{<block_content pos:start="63:5" pos:end="89:18">

    <case pos:start="63:5" pos:end="63:11">case <expr pos:start="63:10" pos:end="63:10"><literal type="number" pos:start="63:10" pos:end="63:10">1</literal></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:35"><expr pos:start="65:9" pos:end="65:34"><name pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:13">avctx</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:26">sample_rate</name></name> <operator pos:start="65:28" pos:end="65:28">=</operator> <literal type="number" pos:start="65:30" pos:end="65:34">48000</literal></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <case pos:start="69:5" pos:end="69:11">case <expr pos:start="69:10" pos:end="69:10"><literal type="number" pos:start="69:10" pos:end="69:10">4</literal></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="71:35"><expr pos:start="71:9" pos:end="71:34"><name pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:13">avctx</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:26">sample_rate</name></name> <operator pos:start="71:28" pos:end="71:28">=</operator> <literal type="number" pos:start="71:30" pos:end="71:34">96000</literal></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:11">case <expr pos:start="75:10" pos:end="75:10"><literal type="number" pos:start="75:10" pos:end="75:10">5</literal></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:36"><expr pos:start="77:9" pos:end="77:35"><name pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:13">avctx</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:26">sample_rate</name></name> <operator pos:start="77:28" pos:end="77:28">=</operator> <literal type="number" pos:start="77:30" pos:end="77:35">192000</literal></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <default pos:start="81:5" pos:end="81:12">default:</default>

        <expr_stmt pos:start="83:9" pos:end="83:31"><expr pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:26"><name pos:start="83:9" pos:end="83:13">avctx</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:26">sample_rate</name></name> <operator pos:start="83:28" pos:end="83:28">=</operator> <literal type="number" pos:start="83:30" pos:end="83:30">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="87:33"><expr pos:start="85:9" pos:end="87:32"><call pos:start="85:9" pos:end="87:32"><name pos:start="85:9" pos:end="85:14">av_log</name><argument_list pos:start="85:15" pos:end="87:32">(<argument pos:start="85:16" pos:end="85:20"><expr pos:start="85:16" pos:end="85:20"><name pos:start="85:16" pos:end="85:20">avctx</name></expr></argument>, <argument pos:start="85:23" pos:end="85:34"><expr pos:start="85:23" pos:end="85:34"><name pos:start="85:23" pos:end="85:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:37" pos:end="85:68"><expr pos:start="85:37" pos:end="85:68"><literal type="string" pos:start="85:37" pos:end="85:68">"unsupported sample rate (%d)\n"</literal></expr></argument>,

               <argument pos:start="87:16" pos:end="87:31"><expr pos:start="87:16" pos:end="87:31"><name pos:start="87:16" pos:end="87:24"><name pos:start="87:16" pos:end="87:21">header</name><index pos:start="87:22" pos:end="87:24">[<expr pos:start="87:23" pos:end="87:23"><literal type="number" pos:start="87:23" pos:end="87:23">2</literal></expr>]</index></name> <operator pos:start="87:26" pos:end="87:26">&amp;</operator> <literal type="number" pos:start="87:28" pos:end="87:31">0x0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="89:9" pos:end="89:18">return <expr pos:start="89:16" pos:end="89:17"><operator pos:start="89:16" pos:end="89:16">-</operator><literal type="number" pos:start="89:17" pos:end="89:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <comment type="block" pos:start="95:5" pos:end="105:7">/*

     * get the channel number (and mapping). Not all values are known or exist.

     * It must be noted that the number of channels in the MPEG stream can

     * differ from the actual meaningful number, e.g. mono audio still has two

     * channels, one being empty.

     */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:61"><expr pos:start="107:5" pos:end="107:60"><name pos:start="107:5" pos:end="107:25"><name pos:start="107:5" pos:end="107:9">avctx</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:25">channel_layout</name></name>  <operator pos:start="107:28" pos:end="107:28">=</operator> <name pos:start="107:30" pos:end="107:60"><name pos:start="107:30" pos:end="107:44">channel_layouts</name><index pos:start="107:45" pos:end="107:60">[<expr pos:start="107:46" pos:end="107:59"><name pos:start="107:46" pos:end="107:59">channel_layout</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:61"><expr pos:start="109:5" pos:end="109:60"><name pos:start="109:5" pos:end="109:19"><name pos:start="109:5" pos:end="109:9">avctx</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:19">channels</name></name>        <operator pos:start="109:28" pos:end="109:28">=</operator>        <name pos:start="109:37" pos:end="109:60"><name pos:start="109:37" pos:end="109:44">channels</name><index pos:start="109:45" pos:end="109:60">[<expr pos:start="109:46" pos:end="109:59"><name pos:start="109:46" pos:end="109:59">channel_layout</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="119:5"><if pos:start="111:5" pos:end="119:5">if <condition pos:start="111:8" pos:end="111:25">(<expr pos:start="111:9" pos:end="111:24"><operator pos:start="111:9" pos:end="111:9">!</operator><name pos:start="111:10" pos:end="111:24"><name pos:start="111:10" pos:end="111:14">avctx</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:24">channels</name></name></expr>)</condition> <block pos:start="111:27" pos:end="119:5">{<block_content pos:start="113:9" pos:end="117:18">

        <expr_stmt pos:start="113:9" pos:end="115:31"><expr pos:start="113:9" pos:end="115:30"><call pos:start="113:9" pos:end="115:30"><name pos:start="113:9" pos:end="113:14">av_log</name><argument_list pos:start="113:15" pos:end="115:30">(<argument pos:start="113:16" pos:end="113:20"><expr pos:start="113:16" pos:end="113:20"><name pos:start="113:16" pos:end="113:20">avctx</name></expr></argument>, <argument pos:start="113:23" pos:end="113:34"><expr pos:start="113:23" pos:end="113:34"><name pos:start="113:23" pos:end="113:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="113:37" pos:end="113:78"><expr pos:start="113:37" pos:end="113:78"><literal type="string" pos:start="113:37" pos:end="113:78">"unsupported channel configuration (%d)\n"</literal></expr></argument>,

               <argument pos:start="115:16" pos:end="115:29"><expr pos:start="115:16" pos:end="115:29"><name pos:start="115:16" pos:end="115:29">channel_layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="117:9" pos:end="117:18">return <expr pos:start="117:16" pos:end="117:17"><operator pos:start="117:16" pos:end="117:16">-</operator><literal type="number" pos:start="117:17" pos:end="117:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="125:51"><expr pos:start="123:5" pos:end="125:50"><name pos:start="123:5" pos:end="123:19"><name pos:start="123:5" pos:end="123:9">avctx</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:19">bit_rate</name></name> <operator pos:start="123:21" pos:end="123:21">=</operator> <name pos:start="123:23" pos:end="123:37"><name pos:start="123:23" pos:end="123:27">avctx</name><operator pos:start="123:28" pos:end="123:29">-&gt;</operator><name pos:start="123:30" pos:end="123:37">channels</name></name> <operator pos:start="123:39" pos:end="123:39">*</operator> <name pos:start="123:41" pos:end="123:58"><name pos:start="123:41" pos:end="123:45">avctx</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:58">sample_rate</name></name> <operator pos:start="123:60" pos:end="123:60">*</operator>

                      <name pos:start="125:23" pos:end="125:50"><name pos:start="125:23" pos:end="125:27">avctx</name><operator pos:start="125:28" pos:end="125:29">-&gt;</operator><name pos:start="125:30" pos:end="125:50">bits_per_coded_sample</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="129:5" pos:end="137:53"><if pos:start="129:5" pos:end="137:53">if <condition pos:start="129:8" pos:end="129:42">(<expr pos:start="129:9" pos:end="129:41"><name pos:start="129:9" pos:end="129:20"><name pos:start="129:9" pos:end="129:13">avctx</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:20">debug</name></name> <operator pos:start="129:22" pos:end="129:22">&amp;</operator> <name pos:start="129:24" pos:end="129:41">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="137:53"><block_content pos:start="131:9" pos:end="137:53">

        <expr_stmt pos:start="131:9" pos:end="137:53"><expr pos:start="131:9" pos:end="137:52"><call pos:start="131:9" pos:end="137:52"><name pos:start="131:9" pos:end="131:15">av_dlog</name><argument_list pos:start="131:16" pos:end="137:52">(<argument pos:start="131:17" pos:end="131:21"><expr pos:start="131:17" pos:end="131:21"><name pos:start="131:17" pos:end="131:21">avctx</name></expr></argument>,

                <argument pos:start="133:17" pos:end="133:93"><expr pos:start="133:17" pos:end="133:93"><literal type="string" pos:start="133:17" pos:end="133:93">"pcm_bluray_parse_header: %d channels, %d bits per sample, %d kHz, %d kbit\n"</literal></expr></argument>,

                <argument pos:start="135:17" pos:end="135:31"><expr pos:start="135:17" pos:end="135:31"><name pos:start="135:17" pos:end="135:31"><name pos:start="135:17" pos:end="135:21">avctx</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:31">channels</name></name></expr></argument>, <argument pos:start="135:34" pos:end="135:61"><expr pos:start="135:34" pos:end="135:61"><name pos:start="135:34" pos:end="135:61"><name pos:start="135:34" pos:end="135:38">avctx</name><operator pos:start="135:39" pos:end="135:40">-&gt;</operator><name pos:start="135:41" pos:end="135:61">bits_per_coded_sample</name></name></expr></argument>,

                <argument pos:start="137:17" pos:end="137:34"><expr pos:start="137:17" pos:end="137:34"><name pos:start="137:17" pos:end="137:34"><name pos:start="137:17" pos:end="137:21">avctx</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:34">sample_rate</name></name></expr></argument>, <argument pos:start="137:37" pos:end="137:51"><expr pos:start="137:37" pos:end="137:51"><name pos:start="137:37" pos:end="137:51"><name pos:start="137:37" pos:end="137:41">avctx</name><operator pos:start="137:42" pos:end="137:43">-&gt;</operator><name pos:start="137:44" pos:end="137:51">bit_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="139:5" pos:end="139:13">return <expr pos:start="139:12" pos:end="139:12"><literal type="number" pos:start="139:12" pos:end="139:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
