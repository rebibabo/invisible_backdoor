<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18116.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">qmp_input_push</name><parameter_list pos:start="1:27" pos:end="1:76">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:42">QmpInputVisitor</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">qiv</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:56">QObject</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">obj</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:75"><decl pos:start="1:64" pos:end="1:75"><type pos:start="1:64" pos:end="1:75"><name pos:start="1:64" pos:end="1:68">Error</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier><modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:75">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:20">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">GHashTable</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">h</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">StackObject</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">tos</name> <init pos:start="7:22" pos:end="7:49">= <expr pos:start="7:24" pos:end="7:49"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:49"><name pos:start="7:25" pos:end="7:27">qiv</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:34">stack</name><index pos:start="7:35" pos:end="7:49">[<expr pos:start="7:36" pos:end="7:48"><name pos:start="7:36" pos:end="7:48"><name pos:start="7:36" pos:end="7:38">qiv</name><operator pos:start="7:39" pos:end="7:40">-&gt;</operator><name pos:start="7:41" pos:end="7:48">nb_stack</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:16"><expr pos:start="11:5" pos:end="11:15"><call pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:15">(<argument pos:start="11:12" pos:end="11:14"><expr pos:start="11:12" pos:end="11:14"><name pos:start="11:12" pos:end="11:14">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:40">(<expr pos:start="13:9" pos:end="13:39"><name pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:11">qiv</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:21">nb_stack</name></name> <operator pos:start="13:23" pos:end="13:24">&gt;=</operator> <name pos:start="13:26" pos:end="13:39">QIV_STACK_SIZE</name></expr>)</condition> <block pos:start="13:42" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:55"><expr pos:start="15:9" pos:end="15:54"><call pos:start="15:9" pos:end="15:54"><name pos:start="15:9" pos:end="15:18">error_setg</name><argument_list pos:start="15:19" pos:end="15:54">(<argument pos:start="15:20" pos:end="15:23"><expr pos:start="15:20" pos:end="15:23"><name pos:start="15:20" pos:end="15:23">errp</name></expr></argument>, <argument pos:start="15:26" pos:end="15:53"><expr pos:start="15:26" pos:end="15:53"><literal type="string" pos:start="15:26" pos:end="15:53">"An internal buffer overran"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:7">tos</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:12">obj</name></name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:18">obj</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:20"><expr pos:start="25:5" pos:end="25:19"><call pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:10">assert</name><argument_list pos:start="25:11" pos:end="25:19">(<argument pos:start="25:12" pos:end="25:18"><expr pos:start="25:12" pos:end="25:18"><operator pos:start="25:12" pos:end="25:12">!</operator><name pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:15">tos</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:18">h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><call pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:10">assert</name><argument_list pos:start="27:11" pos:end="27:23">(<argument pos:start="27:12" pos:end="27:22"><expr pos:start="27:12" pos:end="27:22"><operator pos:start="27:12" pos:end="27:12">!</operator><name pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:15">tos</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:22">entry</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="45:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:56">(<expr pos:start="31:9" pos:end="31:55"><name pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:11">qiv</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:19">strict</name></name> <operator pos:start="31:21" pos:end="31:22">&amp;&amp;</operator> <call pos:start="31:24" pos:end="31:40"><name pos:start="31:24" pos:end="31:35">qobject_type</name><argument_list pos:start="31:36" pos:end="31:40">(<argument pos:start="31:37" pos:end="31:39"><expr pos:start="31:37" pos:end="31:39"><name pos:start="31:37" pos:end="31:39">obj</name></expr></argument>)</argument_list></call> <operator pos:start="31:42" pos:end="31:43">==</operator> <name pos:start="31:45" pos:end="31:55">QTYPE_QDICT</name></expr>)</condition> <block pos:start="31:58" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:19">

        <expr_stmt pos:start="33:9" pos:end="33:54"><expr pos:start="33:9" pos:end="33:53"><name pos:start="33:9" pos:end="33:9">h</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <call pos:start="33:13" pos:end="33:53"><name pos:start="33:13" pos:end="33:28">g_hash_table_new</name><argument_list pos:start="33:29" pos:end="33:53">(<argument pos:start="33:30" pos:end="33:39"><expr pos:start="33:30" pos:end="33:39"><name pos:start="33:30" pos:end="33:39">g_str_hash</name></expr></argument>, <argument pos:start="33:42" pos:end="33:52"><expr pos:start="33:42" pos:end="33:52"><name pos:start="33:42" pos:end="33:52">g_str_equal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:60"><expr pos:start="35:9" pos:end="35:59"><call pos:start="35:9" pos:end="35:59"><name pos:start="35:9" pos:end="35:18">qdict_iter</name><argument_list pos:start="35:19" pos:end="35:59">(<argument pos:start="35:20" pos:end="35:40"><expr pos:start="35:20" pos:end="35:40"><call pos:start="35:20" pos:end="35:40"><name pos:start="35:20" pos:end="35:35">qobject_to_qdict</name><argument_list pos:start="35:36" pos:end="35:40">(<argument pos:start="35:37" pos:end="35:39"><expr pos:start="35:37" pos:end="35:39"><name pos:start="35:37" pos:end="35:39">obj</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:43" pos:end="35:55"><expr pos:start="35:43" pos:end="35:55"><name pos:start="35:43" pos:end="35:55">qdict_add_key</name></expr></argument>, <argument pos:start="35:58" pos:end="35:58"><expr pos:start="35:58" pos:end="35:58"><name pos:start="35:58" pos:end="35:58">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:19"><expr pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:11">tos</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:14">h</name></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:18">h</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="39:7" pos:end="45:5">else if <condition pos:start="39:15" pos:end="39:48">(<expr pos:start="39:16" pos:end="39:47"><call pos:start="39:16" pos:end="39:32"><name pos:start="39:16" pos:end="39:27">qobject_type</name><argument_list pos:start="39:28" pos:end="39:32">(<argument pos:start="39:29" pos:end="39:31"><expr pos:start="39:29" pos:end="39:31"><name pos:start="39:29" pos:end="39:31">obj</name></expr></argument>)</argument_list></call> <operator pos:start="39:34" pos:end="39:35">==</operator> <name pos:start="39:37" pos:end="39:47">QTYPE_QLIST</name></expr>)</condition> <block pos:start="39:50" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:26">

        <expr_stmt pos:start="41:9" pos:end="41:56"><expr pos:start="41:9" pos:end="41:55"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:11">tos</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:18">entry</name></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <call pos:start="41:22" pos:end="41:55"><name pos:start="41:22" pos:end="41:32">qlist_first</name><argument_list pos:start="41:33" pos:end="41:55">(<argument pos:start="41:34" pos:end="41:54"><expr pos:start="41:34" pos:end="41:54"><call pos:start="41:34" pos:end="41:54"><name pos:start="41:34" pos:end="41:49">qobject_to_qlist</name><argument_list pos:start="41:50" pos:end="41:54">(<argument pos:start="41:51" pos:end="41:53"><expr pos:start="41:51" pos:end="41:53"><name pos:start="41:51" pos:end="41:53">obj</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:26"><expr pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:11">tos</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:18">first</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:25">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:20"><expr pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:17"><name pos:start="49:5" pos:end="49:7">qiv</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:17">nb_stack</name></name><operator pos:start="49:18" pos:end="49:19">++</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
