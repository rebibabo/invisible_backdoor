<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11761.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">sysctl_oldcvt</name><parameter_list pos:start="1:25" pos:end="1:68">(<parameter pos:start="1:26" pos:end="1:36"><decl pos:start="1:26" pos:end="1:36"><type pos:start="1:26" pos:end="1:36"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:36">holdp</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:52"><decl pos:start="1:39" pos:end="1:52"><type pos:start="1:39" pos:end="1:52"><name pos:start="1:39" pos:end="1:44">size_t</name></type> <name pos:start="1:46" pos:end="1:52">holdlen</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:67"><decl pos:start="1:55" pos:end="1:67"><type pos:start="1:55" pos:end="1:67"><name pos:start="1:55" pos:end="1:62">uint32_t</name></type> <name pos:start="1:64" pos:end="1:67">kind</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:13">

    <switch pos:start="5:5" pos:end="63:5">switch <condition pos:start="5:12" pos:end="5:27">(<expr pos:start="5:13" pos:end="5:26"><name pos:start="5:13" pos:end="5:16">kind</name> <operator pos:start="5:18" pos:end="5:18">&amp;</operator> <name pos:start="5:20" pos:end="5:26">CTLTYPE</name></expr>)</condition> <block pos:start="5:29" pos:end="63:5">{<block_content pos:start="7:5" pos:end="61:18">

    <case pos:start="7:5" pos:end="7:21">case <expr pos:start="7:10" pos:end="7:20"><name pos:start="7:10" pos:end="7:20">CTLTYPE_INT</name></expr>:</case>

    <case pos:start="9:5" pos:end="9:22">case <expr pos:start="9:10" pos:end="9:21"><name pos:start="9:10" pos:end="9:21">CTLTYPE_UINT</name></expr>:</case>

        <expr_stmt pos:start="11:9" pos:end="11:57"><expr pos:start="11:9" pos:end="11:56"><operator pos:start="11:9" pos:end="11:9">*</operator><operator pos:start="11:10" pos:end="11:10">(</operator><name pos:start="11:11" pos:end="11:18">uint32_t</name> <operator pos:start="11:20" pos:end="11:20">*</operator><operator pos:start="11:21" pos:end="11:21">)</operator><name pos:start="11:22" pos:end="11:26">holdp</name> <operator pos:start="11:28" pos:end="11:28">=</operator> <call pos:start="11:30" pos:end="11:56"><name pos:start="11:30" pos:end="11:36">tswap32</name><argument_list pos:start="11:37" pos:end="11:56">(<argument pos:start="11:38" pos:end="11:55"><expr pos:start="11:38" pos:end="11:55"><operator pos:start="11:38" pos:end="11:38">*</operator><operator pos:start="11:39" pos:end="11:39">(</operator><name pos:start="11:40" pos:end="11:47">uint32_t</name> <operator pos:start="11:49" pos:end="11:49">*</operator><operator pos:start="11:50" pos:end="11:50">)</operator><name pos:start="11:51" pos:end="11:55">holdp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="13:9" pos:end="16:0">break;</break>

<cpp:ifdef pos:start="15:1" pos:end="15:19">#<cpp:directive pos:start="15:2" pos:end="15:6">ifdef</cpp:directive> <name pos:start="15:8" pos:end="15:19">TARGET_ABI32</name></cpp:ifdef>

    <case pos:start="17:5" pos:end="17:22">case <expr pos:start="17:10" pos:end="17:21"><name pos:start="17:10" pos:end="17:21">CTLTYPE_LONG</name></expr>:</case>

    <case pos:start="19:5" pos:end="19:23">case <expr pos:start="19:10" pos:end="19:22"><name pos:start="19:10" pos:end="19:22">CTLTYPE_ULONG</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:53"><expr pos:start="21:9" pos:end="21:52"><operator pos:start="21:9" pos:end="21:9">*</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:18">uint32_t</name> <operator pos:start="21:20" pos:end="21:20">*</operator><operator pos:start="21:21" pos:end="21:21">)</operator><name pos:start="21:22" pos:end="21:26">holdp</name> <operator pos:start="21:28" pos:end="21:28">=</operator> <call pos:start="21:30" pos:end="21:52"><name pos:start="21:30" pos:end="21:36">tswap32</name><argument_list pos:start="21:37" pos:end="21:52">(<argument pos:start="21:38" pos:end="21:51"><expr pos:start="21:38" pos:end="21:51"><operator pos:start="21:38" pos:end="21:38">*</operator><operator pos:start="21:39" pos:end="21:39">(</operator><name pos:start="21:40" pos:end="21:43">long</name> <operator pos:start="21:45" pos:end="21:45">*</operator><operator pos:start="21:46" pos:end="21:46">)</operator><name pos:start="21:47" pos:end="21:51">holdp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="26:0">break;</break>

<cpp:else pos:start="25:1" pos:end="25:5">#<cpp:directive pos:start="25:2" pos:end="25:5">else</cpp:directive></cpp:else>

    <case pos:start="27:5" pos:end="27:22">case <expr pos:start="27:10" pos:end="27:21"><name pos:start="27:10" pos:end="27:21">CTLTYPE_LONG</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:53"><expr pos:start="29:9" pos:end="29:52"><operator pos:start="29:9" pos:end="29:9">*</operator><operator pos:start="29:10" pos:end="29:10">(</operator><name pos:start="29:11" pos:end="29:18">uint64_t</name> <operator pos:start="29:20" pos:end="29:20">*</operator><operator pos:start="29:21" pos:end="29:21">)</operator><name pos:start="29:22" pos:end="29:26">holdp</name> <operator pos:start="29:28" pos:end="29:28">=</operator> <call pos:start="29:30" pos:end="29:52"><name pos:start="29:30" pos:end="29:36">tswap64</name><argument_list pos:start="29:37" pos:end="29:52">(<argument pos:start="29:38" pos:end="29:51"><expr pos:start="29:38" pos:end="29:51"><operator pos:start="29:38" pos:end="29:38">*</operator><operator pos:start="29:39" pos:end="29:39">(</operator><name pos:start="29:40" pos:end="29:43">long</name> <operator pos:start="29:45" pos:end="29:45">*</operator><operator pos:start="29:46" pos:end="29:46">)</operator><name pos:start="29:47" pos:end="29:51">holdp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <case pos:start="31:5" pos:end="31:23">case <expr pos:start="31:10" pos:end="31:22"><name pos:start="31:10" pos:end="31:22">CTLTYPE_ULONG</name></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:62"><expr pos:start="33:9" pos:end="33:61"><operator pos:start="33:9" pos:end="33:9">*</operator><operator pos:start="33:10" pos:end="33:10">(</operator><name pos:start="33:11" pos:end="33:18">uint64_t</name> <operator pos:start="33:20" pos:end="33:20">*</operator><operator pos:start="33:21" pos:end="33:21">)</operator><name pos:start="33:22" pos:end="33:26">holdp</name> <operator pos:start="33:28" pos:end="33:28">=</operator> <call pos:start="33:30" pos:end="33:61"><name pos:start="33:30" pos:end="33:36">tswap64</name><argument_list pos:start="33:37" pos:end="33:61">(<argument pos:start="33:38" pos:end="33:60"><expr pos:start="33:38" pos:end="33:60"><operator pos:start="33:38" pos:end="33:38">*</operator><operator pos:start="33:39" pos:end="33:39">(</operator><name pos:start="33:40" pos:end="33:47">unsigned</name> <name pos:start="33:49" pos:end="33:52">long</name> <operator pos:start="33:54" pos:end="33:54">*</operator><operator pos:start="33:55" pos:end="33:55">)</operator><name pos:start="33:56" pos:end="33:60">holdp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="40:0">break;</break>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="39:1" pos:end="39:61">#<cpp:directive pos:start="39:2" pos:end="39:3">if</cpp:directive> <expr pos:start="39:5" pos:end="39:61"><operator pos:start="39:5" pos:end="39:5">!</operator><call pos:start="39:6" pos:end="39:31"><name pos:start="39:6" pos:end="39:12">defined</name><argument_list pos:start="39:13" pos:end="39:31">(<argument pos:start="39:14" pos:end="39:30"><expr pos:start="39:14" pos:end="39:30"><name pos:start="39:14" pos:end="39:30">__FreeBSD_version</name></expr></argument>)</argument_list></call> <operator pos:start="39:33" pos:end="39:34">||</operator> <name pos:start="39:36" pos:end="39:52">__FreeBSD_version</name> <operator pos:start="39:54" pos:end="39:54">&lt;</operator> <literal type="number" pos:start="39:56" pos:end="39:61">900031</literal></expr></cpp:if>

    <case pos:start="41:5" pos:end="44:0">case <expr pos:start="41:10" pos:end="41:21"><name pos:start="41:10" pos:end="41:21">CTLTYPE_QUAD</name></expr>:</case>

<cpp:else pos:start="43:1" pos:end="43:5">#<cpp:directive pos:start="43:2" pos:end="43:5">else</cpp:directive></cpp:else>

    <case pos:start="45:5" pos:end="48:0">case <expr pos:start="45:10" pos:end="45:20"><name pos:start="45:10" pos:end="45:20">CTLTYPE_U64</name></expr>:</case>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="49:9" pos:end="49:57"><expr pos:start="49:9" pos:end="49:56"><operator pos:start="49:9" pos:end="49:9">*</operator><operator pos:start="49:10" pos:end="49:10">(</operator><name pos:start="49:11" pos:end="49:18">uint64_t</name> <operator pos:start="49:20" pos:end="49:20">*</operator><operator pos:start="49:21" pos:end="49:21">)</operator><name pos:start="49:22" pos:end="49:26">holdp</name> <operator pos:start="49:28" pos:end="49:28">=</operator> <call pos:start="49:30" pos:end="49:56"><name pos:start="49:30" pos:end="49:36">tswap64</name><argument_list pos:start="49:37" pos:end="49:56">(<argument pos:start="49:38" pos:end="49:55"><expr pos:start="49:38" pos:end="49:55"><operator pos:start="49:38" pos:end="49:38">*</operator><operator pos:start="49:39" pos:end="49:39">(</operator><name pos:start="49:40" pos:end="49:47">uint64_t</name> <operator pos:start="49:49" pos:end="49:49">*</operator><operator pos:start="49:50" pos:end="49:50">)</operator><name pos:start="49:51" pos:end="49:55">holdp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:24">case <expr pos:start="53:10" pos:end="53:23"><name pos:start="53:10" pos:end="53:23">CTLTYPE_STRING</name></expr>:</case>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <default pos:start="57:5" pos:end="57:12">default:</default>

        <comment type="block" pos:start="59:9" pos:end="59:27">/* XXX unhandled */</comment>

        <return pos:start="61:9" pos:end="61:18">return <expr pos:start="61:16" pos:end="61:17"><operator pos:start="61:16" pos:end="61:16">-</operator><literal type="number" pos:start="61:17" pos:end="61:17">1</literal></expr>;</return>

    </block_content>}</block></switch>

    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
