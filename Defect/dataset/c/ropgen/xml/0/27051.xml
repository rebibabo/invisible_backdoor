<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27051.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">smc_decode_frame</name><parameter_list pos:start="1:28" pos:end="5:45">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:39"><decl pos:start="3:30" pos:end="3:39"><type pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:33">void</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">data</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:44">int</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:55">got_frame</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:44"><decl pos:start="5:30" pos:end="5:44"><type pos:start="5:30" pos:end="5:44"><name pos:start="5:30" pos:end="5:37">AVPacket</name> <modifier pos:start="5:39" pos:end="5:39">*</modifier></type><name pos:start="5:40" pos:end="5:44">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="57:1">{<block_content pos:start="9:5" pos:end="55:20">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">SmcContext</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:17">s</name> <init pos:start="13:19" pos:end="13:36">= <expr pos:start="13:21" pos:end="13:36"><name pos:start="13:21" pos:end="13:36"><name pos:start="13:21" pos:end="13:25">avctx</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:83"><decl pos:start="15:5" pos:end="15:82"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:22">pal</name> <init pos:start="15:24" pos:end="15:82">= <expr pos:start="15:26" pos:end="15:82"><call pos:start="15:26" pos:end="15:82"><name pos:start="15:26" pos:end="15:48">av_packet_get_side_data</name><argument_list pos:start="15:49" pos:end="15:82">(<argument pos:start="15:50" pos:end="15:54"><expr pos:start="15:50" pos:end="15:54"><name pos:start="15:50" pos:end="15:54">avpkt</name></expr></argument>, <argument pos:start="15:57" pos:end="15:75"><expr pos:start="15:57" pos:end="15:75"><name pos:start="15:57" pos:end="15:75">AV_PKT_DATA_PALETTE</name></expr></argument>, <argument pos:start="15:78" pos:end="15:81"><expr pos:start="15:78" pos:end="15:81"><name pos:start="15:78" pos:end="15:81">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:44"><expr pos:start="21:5" pos:end="21:43"><call pos:start="21:5" pos:end="21:43"><name pos:start="21:5" pos:end="21:20">bytestream2_init</name><argument_list pos:start="21:21" pos:end="21:43">(<argument pos:start="21:22" pos:end="21:27"><expr pos:start="21:22" pos:end="21:27"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:27"><name pos:start="21:23" pos:end="21:23">s</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:27">gb</name></name></expr></argument>, <argument pos:start="21:30" pos:end="21:32"><expr pos:start="21:30" pos:end="21:32"><name pos:start="21:30" pos:end="21:32">buf</name></expr></argument>, <argument pos:start="21:35" pos:end="21:42"><expr pos:start="21:35" pos:end="21:42"><name pos:start="21:35" pos:end="21:42">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="27:19"><if pos:start="25:5" pos:end="27:19">if <condition pos:start="25:8" pos:end="25:53">(<expr pos:start="25:9" pos:end="25:52"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:12">ret</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:47"><name pos:start="25:16" pos:end="25:30">ff_reget_buffer</name><argument_list pos:start="25:31" pos:end="25:47">(<argument pos:start="25:32" pos:end="25:36"><expr pos:start="25:32" pos:end="25:36"><name pos:start="25:32" pos:end="25:36">avctx</name></expr></argument>, <argument pos:start="25:39" pos:end="25:46"><expr pos:start="25:39" pos:end="25:46"><name pos:start="25:39" pos:end="25:46"><name pos:start="25:39" pos:end="25:39">s</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:46">frame</name></name></expr></argument>)</argument_list></call><operator pos:start="25:48" pos:end="25:48">)</operator> <operator pos:start="25:50" pos:end="25:50">&lt;</operator> <literal type="number" pos:start="25:52" pos:end="25:52">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:19"><block_content pos:start="27:9" pos:end="27:19">

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:12">(<expr pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">pal</name></expr>)</condition> <block pos:start="31:14" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:44">

        <expr_stmt pos:start="33:9" pos:end="33:42"><expr pos:start="33:9" pos:end="33:41"><name pos:start="33:9" pos:end="33:37"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:16">frame</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:37">palette_has_changed</name></name> <operator pos:start="33:39" pos:end="33:39">=</operator> <literal type="number" pos:start="33:41" pos:end="33:41">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:44"><expr pos:start="35:9" pos:end="35:43"><call pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:14">memcpy</name><argument_list pos:start="35:15" pos:end="35:43">(<argument pos:start="35:16" pos:end="35:21"><expr pos:start="35:16" pos:end="35:21"><name pos:start="35:16" pos:end="35:21"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:21">pal</name></name></expr></argument>, <argument pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">pal</name></expr></argument>, <argument pos:start="35:29" pos:end="35:42"><expr pos:start="35:29" pos:end="35:42"><name pos:start="35:29" pos:end="35:42">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:25"><expr pos:start="41:5" pos:end="41:24"><call pos:start="41:5" pos:end="41:24"><name pos:start="41:5" pos:end="41:21">smc_decode_stream</name><argument_list pos:start="41:22" pos:end="41:24">(<argument pos:start="41:23" pos:end="41:23"><expr pos:start="41:23" pos:end="41:23"><name pos:start="41:23" pos:end="41:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:24"><expr pos:start="45:5" pos:end="45:23"><operator pos:start="45:5" pos:end="45:5">*</operator><name pos:start="45:6" pos:end="45:14">got_frame</name>      <operator pos:start="45:21" pos:end="45:21">=</operator> <literal type="number" pos:start="45:23" pos:end="45:23">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:19"><if pos:start="47:5" pos:end="49:19">if <condition pos:start="47:8" pos:end="47:49">(<expr pos:start="47:9" pos:end="47:48"><operator pos:start="47:9" pos:end="47:9">(</operator><name pos:start="47:10" pos:end="47:12">ret</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:43"><name pos:start="47:16" pos:end="47:27">av_frame_ref</name><argument_list pos:start="47:28" pos:end="47:43">(<argument pos:start="47:29" pos:end="47:32"><expr pos:start="47:29" pos:end="47:32"><name pos:start="47:29" pos:end="47:32">data</name></expr></argument>, <argument pos:start="47:35" pos:end="47:42"><expr pos:start="47:35" pos:end="47:42"><name pos:start="47:35" pos:end="47:42"><name pos:start="47:35" pos:end="47:35">s</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:42">frame</name></name></expr></argument>)</argument_list></call><operator pos:start="47:44" pos:end="47:44">)</operator> <operator pos:start="47:46" pos:end="47:46">&lt;</operator> <literal type="number" pos:start="47:48" pos:end="47:48">0</literal></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:19"><block_content pos:start="49:9" pos:end="49:19">

        <return pos:start="49:9" pos:end="49:19">return <expr pos:start="49:16" pos:end="49:18"><name pos:start="49:16" pos:end="49:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:63">/* always report that the buffer was completely consumed */</comment>

    <return pos:start="55:5" pos:end="55:20">return <expr pos:start="55:12" pos:end="55:19"><name pos:start="55:12" pos:end="55:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
