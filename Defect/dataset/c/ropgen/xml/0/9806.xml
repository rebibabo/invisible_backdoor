<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9806.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:29">nbd_send_reply</name><parameter_list pos:start="1:30" pos:end="1:63">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:40">QIOChannel</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ioc</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:62"><decl pos:start="1:48" pos:end="1:62"><type pos:start="1:48" pos:end="1:62"><name pos:start="1:48" pos:end="1:55">NBDReply</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:62">reply</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:51">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:31"><name pos:start="5:13" pos:end="5:15">buf</name><index pos:start="5:16" pos:end="5:31">[<expr pos:start="5:17" pos:end="5:30"><name pos:start="5:17" pos:end="5:30">NBD_REPLY_SIZE</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:59"><expr pos:start="9:5" pos:end="9:58"><name pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:9">reply</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:16">error</name></name> <operator pos:start="9:18" pos:end="9:18">=</operator> <call pos:start="9:20" pos:end="9:58"><name pos:start="9:20" pos:end="9:44">system_errno_to_nbd_errno</name><argument_list pos:start="9:45" pos:end="9:58">(<argument pos:start="9:46" pos:end="9:57"><expr pos:start="9:46" pos:end="9:57"><name pos:start="9:46" pos:end="9:57"><name pos:start="9:46" pos:end="9:50">reply</name><operator pos:start="9:51" pos:end="9:52">-&gt;</operator><name pos:start="9:53" pos:end="9:57">error</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="17:39"><expr pos:start="13:5" pos:end="17:38"><call pos:start="13:5" pos:end="17:38"><name pos:start="13:5" pos:end="13:9">TRACE</name><argument_list pos:start="13:10" pos:end="17:38">(<argument pos:start="13:11" pos:end="15:36"><expr pos:start="13:11" pos:end="15:36"><literal type="string" pos:start="13:11" pos:end="13:52">"Sending response to client: { .error = %"</literal> <name pos:start="13:54" pos:end="13:59">PRId32</name>

          <literal type="string" pos:start="15:11" pos:end="15:24">", handle = %"</literal> <name pos:start="15:26" pos:end="15:31">PRIu64</name> <literal type="string" pos:start="15:33" pos:end="15:36">" }"</literal></expr></argument>,

          <argument pos:start="17:11" pos:end="17:22"><expr pos:start="17:11" pos:end="17:22"><name pos:start="17:11" pos:end="17:22"><name pos:start="17:11" pos:end="17:15">reply</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:22">error</name></name></expr></argument>, <argument pos:start="17:25" pos:end="17:37"><expr pos:start="17:25" pos:end="17:37"><name pos:start="17:25" pos:end="17:37"><name pos:start="17:25" pos:end="17:29">reply</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:37">handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="29:7">/* Reply

       [ 0 ..  3]    magic   (NBD_REPLY_MAGIC)

       [ 4 ..  7]    error   (0 == no error)

       [ 7 .. 15]    handle

     */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:35"><expr pos:start="31:5" pos:end="31:34"><call pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:12">stl_be_p</name><argument_list pos:start="31:13" pos:end="31:34">(<argument pos:start="31:14" pos:end="31:16"><expr pos:start="31:14" pos:end="31:16"><name pos:start="31:14" pos:end="31:16">buf</name></expr></argument>, <argument pos:start="31:19" pos:end="31:33"><expr pos:start="31:19" pos:end="31:33"><name pos:start="31:19" pos:end="31:33">NBD_REPLY_MAGIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:36"><expr pos:start="33:5" pos:end="33:35"><call pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:12">stl_be_p</name><argument_list pos:start="33:13" pos:end="33:35">(<argument pos:start="33:14" pos:end="33:20"><expr pos:start="33:14" pos:end="33:20"><name pos:start="33:14" pos:end="33:16">buf</name> <operator pos:start="33:18" pos:end="33:18">+</operator> <literal type="number" pos:start="33:20" pos:end="33:20">4</literal></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:27">reply</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:34">error</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:37"><expr pos:start="35:5" pos:end="35:36"><call pos:start="35:5" pos:end="35:36"><name pos:start="35:5" pos:end="35:12">stq_be_p</name><argument_list pos:start="35:13" pos:end="35:36">(<argument pos:start="35:14" pos:end="35:20"><expr pos:start="35:14" pos:end="35:20"><name pos:start="35:14" pos:end="35:16">buf</name> <operator pos:start="35:18" pos:end="35:18">+</operator> <literal type="number" pos:start="35:20" pos:end="35:20">8</literal></expr></argument>, <argument pos:start="35:23" pos:end="35:35"><expr pos:start="35:23" pos:end="35:35"><name pos:start="35:23" pos:end="35:35"><name pos:start="35:23" pos:end="35:27">reply</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:35">handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="39:5" pos:end="39:51">return <expr pos:start="39:12" pos:end="39:50"><call pos:start="39:12" pos:end="39:50"><name pos:start="39:12" pos:end="39:21">write_sync</name><argument_list pos:start="39:22" pos:end="39:50">(<argument pos:start="39:23" pos:end="39:25"><expr pos:start="39:23" pos:end="39:25"><name pos:start="39:23" pos:end="39:25">ioc</name></expr></argument>, <argument pos:start="39:28" pos:end="39:30"><expr pos:start="39:28" pos:end="39:30"><name pos:start="39:28" pos:end="39:30">buf</name></expr></argument>, <argument pos:start="39:33" pos:end="39:43"><expr pos:start="39:33" pos:end="39:43"><sizeof pos:start="39:33" pos:end="39:43">sizeof<argument_list pos:start="39:39" pos:end="39:43">(<argument pos:start="39:40" pos:end="39:42"><expr pos:start="39:40" pos:end="39:42"><name pos:start="39:40" pos:end="39:42">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="39:46" pos:end="39:49"><expr pos:start="39:46" pos:end="39:49"><name pos:start="39:46" pos:end="39:49">NULL</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
