<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10452.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:24">ff_rdft_init</name><parameter_list pos:start="1:25" pos:end="1:80">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:39"><name pos:start="1:26" pos:end="1:36">RDFTContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:50"><decl pos:start="1:42" pos:end="1:50"><type pos:start="1:42" pos:end="1:50"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:50">nbits</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:79"><decl pos:start="1:53" pos:end="1:79"><type pos:start="1:53" pos:end="1:79"><name pos:start="1:53" pos:end="1:73"><name pos:start="1:53" pos:end="1:56">enum</name> <name pos:start="1:58" pos:end="1:73">RDFTransformType</name></name></type> <name pos:start="1:75" pos:end="1:79">trans</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:13">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name> <init pos:start="5:11" pos:end="5:22">= <expr pos:start="5:13" pos:end="5:22"><literal type="number" pos:start="5:13" pos:end="5:13">1</literal> <operator pos:start="5:15" pos:end="5:16">&lt;&lt;</operator> <name pos:start="5:18" pos:end="5:22">nbits</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:31"><expr pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:12">nbits</name></name>           <operator pos:start="11:24" pos:end="11:24">=</operator> <name pos:start="11:26" pos:end="11:30">nbits</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:63"><expr pos:start="13:5" pos:end="13:62"><name pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:14">inverse</name></name>         <operator pos:start="13:24" pos:end="13:24">=</operator> <name pos:start="13:26" pos:end="13:30">trans</name> <operator pos:start="13:32" pos:end="13:33">==</operator> <name pos:start="13:35" pos:end="13:42">IDFT_C2R</name> <operator pos:start="13:44" pos:end="13:45">||</operator> <name pos:start="13:47" pos:end="13:51">trans</name> <operator pos:start="13:53" pos:end="13:54">==</operator> <name pos:start="13:56" pos:end="13:62">DFT_C2R</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:72"><expr pos:start="15:5" pos:end="15:71"><name pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:22">sign_convention</name></name> <operator pos:start="15:24" pos:end="15:24">=</operator> <ternary pos:start="15:26" pos:end="15:71"><condition pos:start="15:26" pos:end="15:64"><expr pos:start="15:26" pos:end="15:62"><name pos:start="15:26" pos:end="15:30">trans</name> <operator pos:start="15:32" pos:end="15:33">==</operator> <name pos:start="15:35" pos:end="15:42">IDFT_R2C</name> <operator pos:start="15:44" pos:end="15:45">||</operator> <name pos:start="15:47" pos:end="15:51">trans</name> <operator pos:start="15:53" pos:end="15:54">==</operator> <name pos:start="15:56" pos:end="15:62">DFT_C2R</name></expr> ?</condition><then pos:start="15:66" pos:end="15:66"> <expr pos:start="15:66" pos:end="15:66"><literal type="number" pos:start="15:66" pos:end="15:66">1</literal></expr> </then><else pos:start="15:68" pos:end="15:71">: <expr pos:start="15:70" pos:end="15:71"><operator pos:start="15:70" pos:end="15:70">-</operator><literal type="number" pos:start="15:71" pos:end="15:71">1</literal></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="21:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:32">(<expr pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:13">nbits</name> <argument_list type="generic" pos:start="19:15" pos:end="19:28">&lt; <argument pos:start="19:17" pos:end="19:26"><expr pos:start="19:17" pos:end="19:26"><literal type="number" pos:start="19:17" pos:end="19:17">4</literal> <operator pos:start="19:19" pos:end="19:20">||</operator> <name pos:start="19:22" pos:end="19:26">nbits</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="19:30" pos:end="19:31">16</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="27:19"><if pos:start="25:5" pos:end="27:19">if <condition pos:start="25:8" pos:end="25:90">(<expr pos:start="25:9" pos:end="25:89"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:12">ret</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:84"><name pos:start="25:16" pos:end="25:26">ff_fft_init</name><argument_list pos:start="25:27" pos:end="25:84">(<argument pos:start="25:28" pos:end="25:34"><expr pos:start="25:28" pos:end="25:34"><operator pos:start="25:28" pos:end="25:28">&amp;</operator><name pos:start="25:29" pos:end="25:34"><name pos:start="25:29" pos:end="25:29">s</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:34">fft</name></name></expr></argument>, <argument pos:start="25:37" pos:end="25:43"><expr pos:start="25:37" pos:end="25:43"><name pos:start="25:37" pos:end="25:41">nbits</name><operator pos:start="25:42" pos:end="25:42">-</operator><literal type="number" pos:start="25:43" pos:end="25:43">1</literal></expr></argument>, <argument pos:start="25:46" pos:end="25:83"><expr pos:start="25:46" pos:end="25:83"><name pos:start="25:46" pos:end="25:50">trans</name> <operator pos:start="25:52" pos:end="25:53">==</operator> <name pos:start="25:55" pos:end="25:62">IDFT_C2R</name> <operator pos:start="25:64" pos:end="25:65">||</operator> <name pos:start="25:67" pos:end="25:71">trans</name> <operator pos:start="25:73" pos:end="25:74">==</operator> <name pos:start="25:76" pos:end="25:83">IDFT_R2C</name></expr></argument>)</argument_list></call><operator pos:start="25:85" pos:end="25:85">)</operator> <operator pos:start="25:87" pos:end="25:87">&lt;</operator> <literal type="number" pos:start="25:89" pos:end="25:89">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:19"><block_content pos:start="27:9" pos:end="27:19">

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:31"><expr pos:start="31:5" pos:end="31:30"><call pos:start="31:5" pos:end="31:30"><name pos:start="31:5" pos:end="31:23">ff_init_ff_cos_tabs</name><argument_list pos:start="31:24" pos:end="31:30">(<argument pos:start="31:25" pos:end="31:29"><expr pos:start="31:25" pos:end="31:29"><name pos:start="31:25" pos:end="31:29">nbits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:33"><expr pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:11">tcos</name></name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:32"><name pos:start="33:15" pos:end="33:25">ff_cos_tabs</name><index pos:start="33:26" pos:end="33:32">[<expr pos:start="33:27" pos:end="33:31"><name pos:start="33:27" pos:end="33:31">nbits</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="38:0"><expr pos:start="35:5" pos:end="35:78"><name pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:11">tsin</name></name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:32"><name pos:start="35:15" pos:end="35:25">ff_sin_tabs</name><index pos:start="35:26" pos:end="35:32">[<expr pos:start="35:27" pos:end="35:31"><name pos:start="35:27" pos:end="35:31">nbits</name></expr>]</index></name><operator pos:start="35:33" pos:end="35:33">+</operator><operator pos:start="35:34" pos:end="35:34">(</operator><name pos:start="35:35" pos:end="35:39">trans</name> <operator pos:start="35:41" pos:end="35:42">==</operator> <name pos:start="35:44" pos:end="35:50">DFT_R2C</name> <operator pos:start="35:52" pos:end="35:53">||</operator> <name pos:start="35:55" pos:end="35:59">trans</name> <operator pos:start="35:61" pos:end="35:62">==</operator> <name pos:start="35:64" pos:end="35:70">DFT_C2R</name><operator pos:start="35:71" pos:end="35:71">)</operator><operator pos:start="35:72" pos:end="35:72">*</operator><operator pos:start="35:73" pos:end="35:73">(</operator><name pos:start="35:74" pos:end="35:74">n</name><operator pos:start="35:75" pos:end="35:76">&gt;&gt;</operator><literal type="number" pos:start="35:77" pos:end="35:77">2</literal><operator pos:start="35:78" pos:end="35:78">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="37:1" pos:end="37:28">#<cpp:directive pos:start="37:2" pos:end="37:3">if</cpp:directive> <expr pos:start="37:5" pos:end="37:28"><operator pos:start="37:5" pos:end="37:5">!</operator><name pos:start="37:6" pos:end="37:28">CONFIG_HARDCODED_TABLES</name></expr></cpp:if>

    <block pos:start="39:5" pos:end="52:0">{<block_content pos:start="41:9" pos:end="47:40">

        <decl_stmt pos:start="41:9" pos:end="41:14"><decl pos:start="41:9" pos:end="41:13"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:92"><decl pos:start="43:9" pos:end="43:91"><type pos:start="43:9" pos:end="43:20"><specifier pos:start="43:9" pos:end="43:13">const</specifier> <name pos:start="43:15" pos:end="43:20">double</name></type> <name pos:start="43:22" pos:end="43:26">theta</name> <init pos:start="43:28" pos:end="43:91">= <expr pos:start="43:30" pos:end="43:91"><operator pos:start="43:30" pos:end="43:30">(</operator><ternary pos:start="43:31" pos:end="43:75"><condition pos:start="43:31" pos:end="43:68"><expr pos:start="43:31" pos:end="43:66"><name pos:start="43:31" pos:end="43:35">trans</name> <operator pos:start="43:37" pos:end="43:38">==</operator> <name pos:start="43:40" pos:end="43:46">DFT_R2C</name> <operator pos:start="43:48" pos:end="43:49">||</operator> <name pos:start="43:51" pos:end="43:55">trans</name> <operator pos:start="43:57" pos:end="43:58">==</operator> <name pos:start="43:60" pos:end="43:66">DFT_C2R</name></expr> ?</condition><then pos:start="43:70" pos:end="43:71"> <expr pos:start="43:70" pos:end="43:71"><operator pos:start="43:70" pos:end="43:70">-</operator><literal type="number" pos:start="43:71" pos:end="43:71">1</literal></expr> </then><else pos:start="43:73" pos:end="43:75">: <expr pos:start="43:75" pos:end="43:75"><literal type="number" pos:start="43:75" pos:end="43:75">1</literal></expr></else></ternary><operator pos:start="43:76" pos:end="43:76">)</operator> <operator pos:start="43:78" pos:end="43:78">*</operator> <literal type="number" pos:start="43:80" pos:end="43:80">2</literal> <operator pos:start="43:82" pos:end="43:82">*</operator> <name pos:start="43:84" pos:end="43:87">M_PI</name> <operator pos:start="43:89" pos:end="43:89">/</operator> <name pos:start="43:91" pos:end="43:91">n</name></expr></init></decl>;</decl_stmt>

        <for pos:start="45:9" pos:end="47:40">for <control pos:start="45:13" pos:end="45:38">(<init pos:start="45:14" pos:end="45:19"><expr pos:start="45:14" pos:end="45:18"><name pos:start="45:14" pos:end="45:14">i</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>;</init> <condition pos:start="45:21" pos:end="45:33"><expr pos:start="45:21" pos:end="45:32"><name pos:start="45:21" pos:end="45:21">i</name> <operator pos:start="45:23" pos:end="45:23">&lt;</operator> <operator pos:start="45:25" pos:end="45:25">(</operator><name pos:start="45:26" pos:end="45:26">n</name> <operator pos:start="45:28" pos:end="45:29">&gt;&gt;</operator> <literal type="number" pos:start="45:31" pos:end="45:31">2</literal><operator pos:start="45:32" pos:end="45:32">)</operator></expr>;</condition> <incr pos:start="45:35" pos:end="45:37"><expr pos:start="45:35" pos:end="45:37"><name pos:start="45:35" pos:end="45:35">i</name><operator pos:start="45:36" pos:end="45:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:13" pos:end="47:40"><block_content pos:start="47:13" pos:end="47:40">

            <expr_stmt pos:start="47:13" pos:end="47:40"><expr pos:start="47:13" pos:end="47:39"><name pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:19">tsin</name><index pos:start="47:20" pos:end="47:22">[<expr pos:start="47:21" pos:end="47:21"><name pos:start="47:21" pos:end="47:21">i</name></expr>]</index></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <call pos:start="47:26" pos:end="47:39"><name pos:start="47:26" pos:end="47:28">sin</name><argument_list pos:start="47:29" pos:end="47:39">(<argument pos:start="47:30" pos:end="47:38"><expr pos:start="47:30" pos:end="47:38"><name pos:start="47:30" pos:end="47:30">i</name> <operator pos:start="47:32" pos:end="47:32">*</operator> <name pos:start="47:34" pos:end="47:38">theta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block>

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="53:5" pos:end="53:33"><expr pos:start="53:5" pos:end="53:32"><name pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:16">rdft_calc</name></name>   <operator pos:start="53:20" pos:end="53:20">=</operator> <name pos:start="53:22" pos:end="53:32">rdft_calc_c</name></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="57:38"><if pos:start="57:5" pos:end="57:38">if <condition pos:start="57:8" pos:end="57:17">(<expr pos:start="57:9" pos:end="57:16"><name pos:start="57:9" pos:end="57:16">ARCH_ARM</name></expr>)</condition><block type="pseudo" pos:start="57:19" pos:end="57:38"><block_content pos:start="57:19" pos:end="57:38"> <expr_stmt pos:start="57:19" pos:end="57:38"><expr pos:start="57:19" pos:end="57:37"><call pos:start="57:19" pos:end="57:37"><name pos:start="57:19" pos:end="57:34">ff_rdft_init_arm</name><argument_list pos:start="57:35" pos:end="57:37">(<argument pos:start="57:36" pos:end="57:36"><expr pos:start="57:36" pos:end="57:36"><name pos:start="57:36" pos:end="57:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
