<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1247.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">acpi_get_hotplug_info</name><parameter_list pos:start="1:34" pos:end="1:53">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:48"><name pos:start="1:35" pos:end="1:46">AcpiMiscInfo</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">misc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">PCIBus</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:15">bus</name> <init pos:start="7:17" pos:end="7:31">= <expr pos:start="7:19" pos:end="7:31"><call pos:start="7:19" pos:end="7:31"><name pos:start="7:19" pos:end="7:29">find_i440fx</name><argument_list pos:start="7:30" pos:end="7:31">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:13">(<expr pos:start="11:9" pos:end="11:12"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:12">bus</name></expr>)</condition> <block pos:start="11:15" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <comment type="block" pos:start="13:9" pos:end="13:45">/* Only PIIX supports ACPI hotplug */</comment>

        <expr_stmt pos:start="15:9" pos:end="15:79"><expr pos:start="15:9" pos:end="15:78"><call pos:start="15:9" pos:end="15:78"><name pos:start="15:9" pos:end="15:14">memset</name><argument_list pos:start="15:15" pos:end="15:78">(<argument pos:start="15:16" pos:end="15:40"><expr pos:start="15:16" pos:end="15:40"><name pos:start="15:16" pos:end="15:40"><name pos:start="15:16" pos:end="15:19">misc</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:40">slot_hotplug_enable</name></name></expr></argument>, <argument pos:start="15:43" pos:end="15:43"><expr pos:start="15:43" pos:end="15:43"><literal type="number" pos:start="15:43" pos:end="15:43">0</literal></expr></argument>, <argument pos:start="15:46" pos:end="15:77"><expr pos:start="15:46" pos:end="15:77"><sizeof pos:start="15:46" pos:end="15:77">sizeof <name pos:start="15:53" pos:end="15:77"><name pos:start="15:53" pos:end="15:56">misc</name><operator pos:start="15:57" pos:end="15:58">-&gt;</operator><name pos:start="15:59" pos:end="15:77">slot_hotplug_enable</name></name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="25:54"><expr pos:start="23:5" pos:end="25:53"><call pos:start="23:5" pos:end="25:53"><name pos:start="23:5" pos:end="23:10">memset</name><argument_list pos:start="23:11" pos:end="25:53">(<argument pos:start="23:12" pos:end="23:36"><expr pos:start="23:12" pos:end="23:36"><name pos:start="23:12" pos:end="23:36"><name pos:start="23:12" pos:end="23:15">misc</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:36">slot_hotplug_enable</name></name></expr></argument>, <argument pos:start="23:39" pos:end="23:42"><expr pos:start="23:39" pos:end="23:42"><literal type="number" pos:start="23:39" pos:end="23:42">0xff</literal></expr></argument>,

           <argument pos:start="25:12" pos:end="25:52"><expr pos:start="25:12" pos:end="25:52"><call pos:start="25:12" pos:end="25:52"><name pos:start="25:12" pos:end="25:23">DIV_ROUND_UP</name><argument_list pos:start="25:24" pos:end="25:52">(<argument pos:start="25:25" pos:end="25:36"><expr pos:start="25:25" pos:end="25:36"><name pos:start="25:25" pos:end="25:36">PCI_SLOT_MAX</name></expr></argument>, <argument pos:start="25:39" pos:end="25:51"><expr pos:start="25:39" pos:end="25:51"><name pos:start="25:39" pos:end="25:51">BITS_PER_BYTE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="59:5">for <control pos:start="29:9" pos:end="29:50">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:45"><expr pos:start="29:17" pos:end="29:44"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <call pos:start="29:21" pos:end="29:44"><name pos:start="29:21" pos:end="29:30">ARRAY_SIZE</name><argument_list pos:start="29:31" pos:end="29:44">(<argument pos:start="29:32" pos:end="29:43"><expr pos:start="29:32" pos:end="29:43"><name pos:start="29:32" pos:end="29:43"><name pos:start="29:32" pos:end="29:34">bus</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:43">devices</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="29:47" pos:end="29:49"><expr pos:start="29:47" pos:end="29:49"><operator pos:start="29:47" pos:end="29:48">++</operator><name pos:start="29:49" pos:end="29:49">i</name></expr></incr>)</control> <block pos:start="29:52" pos:end="59:5">{<block_content pos:start="31:9" pos:end="57:9">

        <decl_stmt pos:start="31:9" pos:end="31:27"><decl pos:start="31:9" pos:end="31:26"><type pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:22">PCIDeviceClass</name> <modifier pos:start="31:24" pos:end="31:24">*</modifier></type><name pos:start="31:25" pos:end="31:26">pc</name></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:42"><decl pos:start="33:9" pos:end="33:41"><type pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:17">PCIDevice</name> <modifier pos:start="33:19" pos:end="33:19">*</modifier></type><name pos:start="33:20" pos:end="33:23">pdev</name> <init pos:start="33:25" pos:end="33:41">= <expr pos:start="33:27" pos:end="33:41"><name pos:start="33:27" pos:end="33:41"><name pos:start="33:27" pos:end="33:29">bus</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:38">devices</name><index pos:start="33:39" pos:end="33:41">[<expr pos:start="33:40" pos:end="33:40"><name pos:start="33:40" pos:end="33:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:18">(<expr pos:start="37:13" pos:end="37:17"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:17">pdev</name></expr>)</condition> <block pos:start="37:20" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:21">

            <continue pos:start="39:13" pos:end="39:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:40"><expr pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:10">pc</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <call pos:start="45:14" pos:end="45:39"><name pos:start="45:14" pos:end="45:33">PCI_DEVICE_GET_CLASS</name><argument_list pos:start="45:34" pos:end="45:39">(<argument pos:start="45:35" pos:end="45:38"><expr pos:start="45:35" pos:end="45:38"><name pos:start="45:35" pos:end="45:38">pdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="49:9" pos:end="57:9"><if pos:start="49:9" pos:end="57:9">if <condition pos:start="49:12" pos:end="49:27">(<expr pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:14">pc</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:26">no_hotplug</name></name></expr>)</condition> <block pos:start="49:29" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:55">

            <decl_stmt pos:start="51:13" pos:end="51:35"><decl pos:start="51:13" pos:end="51:34"><type pos:start="51:13" pos:end="51:15"><name pos:start="51:13" pos:end="51:15">int</name></type> <name pos:start="51:17" pos:end="51:20">slot</name> <init pos:start="51:22" pos:end="51:34">= <expr pos:start="51:24" pos:end="51:34"><call pos:start="51:24" pos:end="51:34"><name pos:start="51:24" pos:end="51:31">PCI_SLOT</name><argument_list pos:start="51:32" pos:end="51:34">(<argument pos:start="51:33" pos:end="51:33"><expr pos:start="51:33" pos:end="51:33"><name pos:start="51:33" pos:end="51:33">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="55:13" pos:end="55:55"><expr pos:start="55:13" pos:end="55:54"><call pos:start="55:13" pos:end="55:54"><name pos:start="55:13" pos:end="55:21">clear_bit</name><argument_list pos:start="55:22" pos:end="55:54">(<argument pos:start="55:23" pos:end="55:26"><expr pos:start="55:23" pos:end="55:26"><name pos:start="55:23" pos:end="55:26">slot</name></expr></argument>, <argument pos:start="55:29" pos:end="55:53"><expr pos:start="55:29" pos:end="55:53"><name pos:start="55:29" pos:end="55:53"><name pos:start="55:29" pos:end="55:32">misc</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:53">slot_hotplug_enable</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
