<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7999.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">s390_cpu_initial_reset</name><parameter_list pos:start="1:34" pos:end="1:47">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:43"><name pos:start="1:35" pos:end="1:41">S390CPU</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">cpu</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:27">= <expr pos:start="5:20" pos:end="5:27"><call pos:start="5:20" pos:end="5:27"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:27">(<argument pos:start="5:24" pos:end="5:26"><expr pos:start="5:24" pos:end="5:26"><name pos:start="5:24" pos:end="5:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">CPUS390XState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">env</name> <init pos:start="7:24" pos:end="7:34">= <expr pos:start="7:26" pos:end="7:34"><operator pos:start="7:26" pos:end="7:26">&amp;</operator><name pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:29">cpu</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:34">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:30"><expr pos:start="13:5" pos:end="13:29"><call pos:start="13:5" pos:end="13:29"><name pos:start="13:5" pos:end="13:24">s390_del_running_cpu</name><argument_list pos:start="13:25" pos:end="13:29">(<argument pos:start="13:26" pos:end="13:28"><expr pos:start="13:26" pos:end="13:28"><name pos:start="13:26" pos:end="13:28">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:61">(<expr pos:start="15:9" pos:end="15:60"><call pos:start="15:9" pos:end="15:56"><name pos:start="15:9" pos:end="15:22">kvm_vcpu_ioctl</name><argument_list pos:start="15:23" pos:end="15:56">(<argument pos:start="15:24" pos:end="15:25"><expr pos:start="15:24" pos:end="15:25"><name pos:start="15:24" pos:end="15:25">cs</name></expr></argument>, <argument pos:start="15:28" pos:end="15:49"><expr pos:start="15:28" pos:end="15:49"><name pos:start="15:28" pos:end="15:49">KVM_S390_INITIAL_RESET</name></expr></argument>, <argument pos:start="15:52" pos:end="15:55"><expr pos:start="15:52" pos:end="15:55"><name pos:start="15:52" pos:end="15:55">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="15:58" pos:end="15:58">&lt;</operator> <literal type="number" pos:start="15:60" pos:end="15:60">0</literal></expr>)</condition> <block pos:start="15:63" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:41">

        <expr_stmt pos:start="17:9" pos:end="17:41"><expr pos:start="17:9" pos:end="17:40"><call pos:start="17:9" pos:end="17:40"><name pos:start="17:9" pos:end="17:14">perror</name><argument_list pos:start="17:15" pos:end="17:40">(<argument pos:start="17:16" pos:end="17:39"><expr pos:start="17:16" pos:end="17:39"><literal type="string" pos:start="17:16" pos:end="17:39">"cannot init reset vcpu"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:41">/* Manually zero out all registers */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:30"><expr pos:start="25:5" pos:end="25:29"><call pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:25">cpu_synchronize_state</name><argument_list pos:start="25:26" pos:end="25:29">(<argument pos:start="25:27" pos:end="25:28"><expr pos:start="25:27" pos:end="25:28"><name pos:start="25:27" pos:end="25:28">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="27:5" pos:end="31:5">for <control pos:start="27:9" pos:end="27:28">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:23"><expr pos:start="27:17" pos:end="27:22"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <literal type="number" pos:start="27:21" pos:end="27:22">16</literal></expr>;</condition> <incr pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:25">i</name><operator pos:start="27:26" pos:end="27:27">++</operator></expr></incr>)</control> <block pos:start="27:30" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:25">

        <expr_stmt pos:start="29:9" pos:end="29:25"><expr pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:11">env</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:17">regs</name><index pos:start="29:18" pos:end="29:20">[<expr pos:start="29:19" pos:end="29:19"><name pos:start="29:19" pos:end="29:19">i</name></expr>]</index></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="35:5" pos:end="35:51"><expr pos:start="35:5" pos:end="35:50"><call pos:start="35:5" pos:end="35:50"><name pos:start="35:5" pos:end="35:11">DPRINTF</name><argument_list pos:start="35:12" pos:end="35:50">(<argument pos:start="35:13" pos:end="35:44"><expr pos:start="35:13" pos:end="35:44"><literal type="string" pos:start="35:13" pos:end="35:44">"DONE: SIGP initial reset: %p\n"</literal></expr></argument>, <argument pos:start="35:47" pos:end="35:49"><expr pos:start="35:47" pos:end="35:49"><name pos:start="35:47" pos:end="35:49">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
