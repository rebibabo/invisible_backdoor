<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11678.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:35">rtas_event_log_contains</name><parameter_list pos:start="1:36" pos:end="1:72">(<parameter pos:start="1:37" pos:end="1:55"><decl pos:start="1:37" pos:end="1:55"><type pos:start="1:37" pos:end="1:55"><name pos:start="1:37" pos:end="1:44">uint32_t</name></type> <name pos:start="1:46" pos:end="1:55">event_mask</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:71"><decl pos:start="1:58" pos:end="1:71"><type pos:start="1:58" pos:end="1:71"><name pos:start="1:58" pos:end="1:61">bool</name></type> <name pos:start="1:63" pos:end="1:71">exception</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:17">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">sPAPRMachineState</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:28">spapr</name> <init pos:start="5:30" pos:end="5:64">= <expr pos:start="5:32" pos:end="5:64"><call pos:start="5:32" pos:end="5:64"><name pos:start="5:32" pos:end="5:44">SPAPR_MACHINE</name><argument_list pos:start="5:45" pos:end="5:64">(<argument pos:start="5:46" pos:end="5:63"><expr pos:start="5:46" pos:end="5:63"><call pos:start="5:46" pos:end="5:63"><name pos:start="5:46" pos:end="5:61">qdev_get_machine</name><argument_list pos:start="5:62" pos:end="5:63">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">sPAPREventLogEntry</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:29">entry</name> <init pos:start="7:31" pos:end="7:36">= <expr pos:start="7:33" pos:end="7:36"><name pos:start="7:33" pos:end="7:36">NULL</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:40">/* we only queue EPOW events atm. */</comment>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:44">(<expr pos:start="13:9" pos:end="13:43"><operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:19">event_mask</name> <operator pos:start="13:21" pos:end="13:21">&amp;</operator> <name pos:start="13:23" pos:end="13:37">EVENT_MASK_EPOW</name><operator pos:start="13:38" pos:end="13:38">)</operator> <operator pos:start="13:40" pos:end="13:41">==</operator> <literal type="number" pos:start="13:43" pos:end="13:43">0</literal></expr>)</condition> <block pos:start="13:46" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:21">

        <return pos:start="15:9" pos:end="15:21">return <expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <macro pos:start="21:5" pos:end="21:55"><name pos:start="21:5" pos:end="21:18">QTAILQ_FOREACH</name><argument_list pos:start="21:19" pos:end="21:55">(<argument pos:start="21:20" pos:end="21:24">entry</argument>, <argument pos:start="21:27" pos:end="21:48">&amp;spapr-&gt;pending_events</argument>, <argument pos:start="21:51" pos:end="21:54">next</argument>)</argument_list></macro> <block pos:start="21:57" pos:end="41:5">{<block_content pos:start="23:9" pos:end="39:9">

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:42">(<expr pos:start="23:13" pos:end="23:41"><name pos:start="23:13" pos:end="23:28"><name pos:start="23:13" pos:end="23:17">entry</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:28">exception</name></name> <operator pos:start="23:30" pos:end="23:31">!=</operator> <name pos:start="23:33" pos:end="23:41">exception</name></expr>)</condition> <block pos:start="23:44" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:21">

            <continue pos:start="25:13" pos:end="25:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="31:9" pos:end="31:69">/* EPOW and hotplug events are surfaced in the same manner */</comment>

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="35:53">(<expr pos:start="33:13" pos:end="35:52"><name pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:17">entry</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:27">log_type</name></name> <operator pos:start="33:29" pos:end="33:30">==</operator> <name pos:start="33:32" pos:end="33:49">RTAS_LOG_TYPE_EPOW</name> <operator pos:start="33:51" pos:end="33:52">||</operator>

            <name pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:17">entry</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:27">log_type</name></name> <operator pos:start="35:29" pos:end="35:30">==</operator> <name pos:start="35:32" pos:end="35:52">RTAS_LOG_TYPE_HOTPLUG</name></expr>)</condition> <block pos:start="35:55" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:24">

            <return pos:start="37:13" pos:end="37:24">return <expr pos:start="37:20" pos:end="37:23"><name pos:start="37:20" pos:end="37:23">true</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <return pos:start="45:5" pos:end="45:17">return <expr pos:start="45:12" pos:end="45:16"><name pos:start="45:12" pos:end="45:16">false</name></expr>;</return>

</block_content>}</block></function>
</unit>
