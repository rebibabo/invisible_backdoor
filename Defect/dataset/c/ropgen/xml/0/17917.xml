<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17917.c" pos:tabs="8"><function pos:start="1:1" pos:end="341:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">print_report</name><parameter_list pos:start="1:25" pos:end="1:83">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:28">int</name></type> <name pos:start="1:30" pos:end="1:43">is_last_report</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:64"><decl pos:start="1:46" pos:end="1:64"><type pos:start="1:46" pos:end="1:64"><name pos:start="1:46" pos:end="1:52">int64_t</name></type> <name pos:start="1:54" pos:end="1:64">timer_start</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:82"><decl pos:start="1:67" pos:end="1:82"><type pos:start="1:67" pos:end="1:82"><name pos:start="1:67" pos:end="1:73">int64_t</name></type> <name pos:start="1:75" pos:end="1:82">cur_time</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="341:1">{<block_content pos:start="5:5" pos:end="339:38">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:18"><name pos:start="5:10" pos:end="5:12">buf</name><index pos:start="5:13" pos:end="5:18">[<expr pos:start="5:14" pos:end="5:17"><literal type="number" pos:start="5:14" pos:end="5:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">AVBPrint</name></type> <name pos:start="7:14" pos:end="7:23">buf_script</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">OutputStream</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">AVFormatContext</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:23">oc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:22">total_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">AVCodecContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:23">enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:20">frame_number</name></decl>, <decl pos:start="17:23" pos:end="17:25"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:23" pos:end="17:25">vid</name></decl>, <decl pos:start="17:28" pos:end="17:28"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:28" pos:end="17:28">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">double</name></type> <name pos:start="19:12" pos:end="19:18">bitrate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:28"><decl pos:start="21:5" pos:end="21:27"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">int64_t</name></type> <name pos:start="21:13" pos:end="21:15">pts</name> <init pos:start="21:17" pos:end="21:27">= <expr pos:start="21:19" pos:end="21:27"><name pos:start="21:19" pos:end="21:27">INT64_MIN</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:34"><decl pos:start="23:5" pos:end="23:33"><type pos:start="23:5" pos:end="23:18"><specifier pos:start="23:5" pos:end="23:10">static</specifier> <name pos:start="23:12" pos:end="23:18">int64_t</name></type> <name pos:start="23:20" pos:end="23:28">last_time</name> <init pos:start="23:30" pos:end="23:33">= <expr pos:start="23:32" pos:end="23:33"><operator pos:start="23:32" pos:end="23:32">-</operator><literal type="number" pos:start="23:33" pos:end="23:33">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:32"><decl pos:start="25:5" pos:end="25:31"><type pos:start="25:5" pos:end="25:14"><specifier pos:start="25:5" pos:end="25:10">static</specifier> <name pos:start="25:12" pos:end="25:14">int</name></type> <name pos:start="25:16" pos:end="25:31"><name pos:start="25:16" pos:end="25:27">qp_histogram</name><index pos:start="25:28" pos:end="25:31">[<expr pos:start="25:29" pos:end="25:30"><literal type="number" pos:start="25:29" pos:end="25:30">52</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:30"><decl pos:start="27:5" pos:end="27:13"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:13">hours</name></decl>, <decl pos:start="27:16" pos:end="27:19"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:16" pos:end="27:19">mins</name></decl>, <decl pos:start="27:22" pos:end="27:25"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:22" pos:end="27:25">secs</name></decl>, <decl pos:start="27:28" pos:end="27:29"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:28" pos:end="27:29">us</name></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="33:15"><if pos:start="31:5" pos:end="33:15">if <condition pos:start="31:8" pos:end="31:58">(<expr pos:start="31:9" pos:end="31:57"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:20">print_stats</name> <operator pos:start="31:22" pos:end="31:23">&amp;&amp;</operator> <operator pos:start="31:25" pos:end="31:25">!</operator><name pos:start="31:26" pos:end="31:39">is_last_report</name> <operator pos:start="31:41" pos:end="31:42">&amp;&amp;</operator> <operator pos:start="31:44" pos:end="31:44">!</operator><name pos:start="31:45" pos:end="31:57">progress_avio</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:15"><block_content pos:start="33:9" pos:end="33:15">

        <return pos:start="33:9" pos:end="33:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="53:5"><if pos:start="37:5" pos:end="53:5">if <condition pos:start="37:8" pos:end="37:24">(<expr pos:start="37:9" pos:end="37:23"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:23">is_last_report</name></expr>)</condition> <block pos:start="37:26" pos:end="53:5">{<block_content pos:start="39:9" pos:end="51:29">

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:28">(<expr pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:21">last_time</name> <operator pos:start="39:23" pos:end="39:24">==</operator> <operator pos:start="39:26" pos:end="39:26">-</operator><literal type="number" pos:start="39:27" pos:end="39:27">1</literal></expr>)</condition> <block pos:start="39:30" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:19">

            <expr_stmt pos:start="41:13" pos:end="41:33"><expr pos:start="41:13" pos:end="41:32"><name pos:start="41:13" pos:end="41:21">last_time</name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:32">cur_time</name></expr>;</expr_stmt>

            <return pos:start="43:13" pos:end="43:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="49:19"><if pos:start="47:9" pos:end="49:19">if <condition pos:start="47:12" pos:end="47:44">(<expr pos:start="47:13" pos:end="47:43"><operator pos:start="47:13" pos:end="47:13">(</operator><name pos:start="47:14" pos:end="47:21">cur_time</name> <operator pos:start="47:23" pos:end="47:23">-</operator> <name pos:start="47:25" pos:end="47:33">last_time</name><operator pos:start="47:34" pos:end="47:34">)</operator> <operator pos:start="47:36" pos:end="47:36">&lt;</operator> <literal type="number" pos:start="47:38" pos:end="47:43">500000</literal></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:19"><block_content pos:start="49:13" pos:end="49:19">

            <return pos:start="49:13" pos:end="49:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:17">last_time</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:28">cur_time</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>





    <expr_stmt pos:start="59:5" pos:end="59:30"><expr pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:6">oc</name> <operator pos:start="59:8" pos:end="59:8">=</operator> <name pos:start="59:10" pos:end="59:24"><name pos:start="59:10" pos:end="59:21">output_files</name><index pos:start="59:22" pos:end="59:24">[<expr pos:start="59:23" pos:end="59:23"><literal type="number" pos:start="59:23" pos:end="59:23">0</literal></expr>]</index></name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:29">ctx</name></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:35"><expr pos:start="63:5" pos:end="63:34"><name pos:start="63:5" pos:end="63:14">total_size</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <call pos:start="63:18" pos:end="63:34"><name pos:start="63:18" pos:end="63:26">avio_size</name><argument_list pos:start="63:27" pos:end="63:34">(<argument pos:start="63:28" pos:end="63:33"><expr pos:start="63:28" pos:end="63:33"><name pos:start="63:28" pos:end="63:33"><name pos:start="63:28" pos:end="63:29">oc</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="67:39"><if pos:start="65:5" pos:end="67:39">if <condition pos:start="65:8" pos:end="65:24">(<expr pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:18">total_size</name> <operator pos:start="65:20" pos:end="65:21">&lt;=</operator> <literal type="number" pos:start="65:23" pos:end="65:23">0</literal></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:39"><block_content pos:start="67:9" pos:end="67:39"> <comment type="line" pos:start="65:26" pos:end="65:94">// FIXME improve avio_size() so it works with non seekable output too</comment>

        <expr_stmt pos:start="67:9" pos:end="67:39"><expr pos:start="67:9" pos:end="67:38"><name pos:start="67:9" pos:end="67:18">total_size</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <call pos:start="67:22" pos:end="67:38"><name pos:start="67:22" pos:end="67:30">avio_tell</name><argument_list pos:start="67:31" pos:end="67:38">(<argument pos:start="67:32" pos:end="67:37"><expr pos:start="67:32" pos:end="67:37"><name pos:start="67:32" pos:end="67:37"><name pos:start="67:32" pos:end="67:33">oc</name><operator pos:start="67:34" pos:end="67:35">-&gt;</operator><name pos:start="67:36" pos:end="67:37">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:18"><expr pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:10"><name pos:start="71:5" pos:end="71:7">buf</name><index pos:start="71:8" pos:end="71:10">[<expr pos:start="71:9" pos:end="71:9"><literal type="number" pos:start="71:9" pos:end="71:9">0</literal></expr>]</index></name> <operator pos:start="71:12" pos:end="71:12">=</operator> <literal type="char" pos:start="71:14" pos:end="71:17">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:12"><expr pos:start="73:5" pos:end="73:11"><name pos:start="73:5" pos:end="73:7">vid</name> <operator pos:start="73:9" pos:end="73:9">=</operator> <literal type="number" pos:start="73:11" pos:end="73:11">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:38"><expr pos:start="75:5" pos:end="75:37"><call pos:start="75:5" pos:end="75:37"><name pos:start="75:5" pos:end="75:18">av_bprint_init</name><argument_list pos:start="75:19" pos:end="75:37">(<argument pos:start="75:20" pos:end="75:30"><expr pos:start="75:20" pos:end="75:30"><operator pos:start="75:20" pos:end="75:20">&amp;</operator><name pos:start="75:21" pos:end="75:30">buf_script</name></expr></argument>, <argument pos:start="75:33" pos:end="75:33"><expr pos:start="75:33" pos:end="75:33"><literal type="number" pos:start="75:33" pos:end="75:33">0</literal></expr></argument>, <argument pos:start="75:36" pos:end="75:36"><expr pos:start="75:36" pos:end="75:36"><literal type="number" pos:start="75:36" pos:end="75:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="77:5" pos:end="215:5">for <control pos:start="77:9" pos:end="77:43">(<init pos:start="77:10" pos:end="77:15"><expr pos:start="77:10" pos:end="77:14"><name pos:start="77:10" pos:end="77:10">i</name> <operator pos:start="77:12" pos:end="77:12">=</operator> <literal type="number" pos:start="77:14" pos:end="77:14">0</literal></expr>;</init> <condition pos:start="77:17" pos:end="77:38"><expr pos:start="77:17" pos:end="77:37"><name pos:start="77:17" pos:end="77:17">i</name> <operator pos:start="77:19" pos:end="77:19">&lt;</operator> <name pos:start="77:21" pos:end="77:37">nb_output_streams</name></expr>;</condition> <incr pos:start="77:40" pos:end="77:42"><expr pos:start="77:40" pos:end="77:42"><name pos:start="77:40" pos:end="77:40">i</name><operator pos:start="77:41" pos:end="77:42">++</operator></expr></incr>)</control> <block pos:start="77:45" pos:end="215:5">{<block_content pos:start="79:9" pos:end="213:47">

        <decl_stmt pos:start="79:9" pos:end="79:21"><decl pos:start="79:9" pos:end="79:20"><type pos:start="79:9" pos:end="79:13"><name pos:start="79:9" pos:end="79:13">float</name></type> <name pos:start="79:15" pos:end="79:15">q</name> <init pos:start="79:17" pos:end="79:20">= <expr pos:start="79:19" pos:end="79:20"><operator pos:start="79:19" pos:end="79:19">-</operator><literal type="number" pos:start="79:20" pos:end="79:20">1</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:32"><expr pos:start="81:9" pos:end="81:31"><name pos:start="81:9" pos:end="81:11">ost</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <name pos:start="81:15" pos:end="81:31"><name pos:start="81:15" pos:end="81:28">output_streams</name><index pos:start="81:29" pos:end="81:31">[<expr pos:start="81:30" pos:end="81:30"><name pos:start="81:30" pos:end="81:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:27"><expr pos:start="83:9" pos:end="83:26"><name pos:start="83:9" pos:end="83:11">enc</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <name pos:start="83:15" pos:end="83:26"><name pos:start="83:15" pos:end="83:17">ost</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:26">enc_ctx</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="87:64"><if pos:start="85:9" pos:end="87:64">if <condition pos:start="85:12" pos:end="85:50">(<expr pos:start="85:13" pos:end="85:49"><operator pos:start="85:13" pos:end="85:13">!</operator><name pos:start="85:14" pos:end="85:29"><name pos:start="85:14" pos:end="85:16">ost</name><operator pos:start="85:17" pos:end="85:18">-&gt;</operator><name pos:start="85:19" pos:end="85:29">stream_copy</name></name> <operator pos:start="85:31" pos:end="85:32">&amp;&amp;</operator> <name pos:start="85:34" pos:end="85:49"><name pos:start="85:34" pos:end="85:36">enc</name><operator pos:start="85:37" pos:end="85:38">-&gt;</operator><name pos:start="85:39" pos:end="85:49">coded_frame</name></name></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:64"><block_content pos:start="87:13" pos:end="87:64">

            <expr_stmt pos:start="87:13" pos:end="87:64"><expr pos:start="87:13" pos:end="87:63"><name pos:start="87:13" pos:end="87:13">q</name> <operator pos:start="87:15" pos:end="87:15">=</operator> <name pos:start="87:17" pos:end="87:41"><name pos:start="87:17" pos:end="87:19">enc</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:32">coded_frame</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:41">quality</name></name> <operator pos:start="87:43" pos:end="87:43">/</operator> <operator pos:start="87:45" pos:end="87:45">(</operator><name pos:start="87:46" pos:end="87:50">float</name><operator pos:start="87:51" pos:end="87:51">)</operator><name pos:start="87:52" pos:end="87:63">FF_QP2LAMBDA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="89:9" pos:end="97:9"><if pos:start="89:9" pos:end="97:9">if <condition pos:start="89:12" pos:end="89:57">(<expr pos:start="89:13" pos:end="89:56"><name pos:start="89:13" pos:end="89:15">vid</name> <operator pos:start="89:17" pos:end="89:18">&amp;&amp;</operator> <name pos:start="89:20" pos:end="89:34"><name pos:start="89:20" pos:end="89:22">enc</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:34">codec_type</name></name> <operator pos:start="89:36" pos:end="89:37">==</operator> <name pos:start="89:39" pos:end="89:56">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="89:59" pos:end="97:9">{<block_content pos:start="91:13" pos:end="95:55">

            <expr_stmt pos:start="91:13" pos:end="91:82"><expr pos:start="91:13" pos:end="91:81"><call pos:start="91:13" pos:end="91:81"><name pos:start="91:13" pos:end="91:20">snprintf</name><argument_list pos:start="91:21" pos:end="91:81">(<argument pos:start="91:22" pos:end="91:38"><expr pos:start="91:22" pos:end="91:38"><name pos:start="91:22" pos:end="91:24">buf</name> <operator pos:start="91:26" pos:end="91:26">+</operator> <call pos:start="91:28" pos:end="91:38"><name pos:start="91:28" pos:end="91:33">strlen</name><argument_list pos:start="91:34" pos:end="91:38">(<argument pos:start="91:35" pos:end="91:37"><expr pos:start="91:35" pos:end="91:37"><name pos:start="91:35" pos:end="91:37">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="91:41" pos:end="91:65"><expr pos:start="91:41" pos:end="91:65"><sizeof pos:start="91:41" pos:end="91:51">sizeof<argument_list pos:start="91:47" pos:end="91:51">(<argument pos:start="91:48" pos:end="91:50"><expr pos:start="91:48" pos:end="91:50"><name pos:start="91:48" pos:end="91:50">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="91:53" pos:end="91:53">-</operator> <call pos:start="91:55" pos:end="91:65"><name pos:start="91:55" pos:end="91:60">strlen</name><argument_list pos:start="91:61" pos:end="91:65">(<argument pos:start="91:62" pos:end="91:64"><expr pos:start="91:62" pos:end="91:64"><name pos:start="91:62" pos:end="91:64">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="91:68" pos:end="91:77"><expr pos:start="91:68" pos:end="91:77"><literal type="string" pos:start="91:68" pos:end="91:77">"q=%2.1f "</literal></expr></argument>, <argument pos:start="91:80" pos:end="91:80"><expr pos:start="91:80" pos:end="91:80"><name pos:start="91:80" pos:end="91:80">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="95:55"><expr pos:start="93:13" pos:end="95:54"><call pos:start="93:13" pos:end="95:54"><name pos:start="93:13" pos:end="93:22">av_bprintf</name><argument_list pos:start="93:23" pos:end="95:54">(<argument pos:start="93:24" pos:end="93:34"><expr pos:start="93:24" pos:end="93:34"><operator pos:start="93:24" pos:end="93:24">&amp;</operator><name pos:start="93:25" pos:end="93:34">buf_script</name></expr></argument>, <argument pos:start="93:37" pos:end="93:59"><expr pos:start="93:37" pos:end="93:59"><literal type="string" pos:start="93:37" pos:end="93:59">"stream_%d_%d_q=%.1f\n"</literal></expr></argument>,

                       <argument pos:start="95:24" pos:end="95:38"><expr pos:start="95:24" pos:end="95:38"><name pos:start="95:24" pos:end="95:38"><name pos:start="95:24" pos:end="95:26">ost</name><operator pos:start="95:27" pos:end="95:28">-&gt;</operator><name pos:start="95:29" pos:end="95:38">file_index</name></name></expr></argument>, <argument pos:start="95:41" pos:end="95:50"><expr pos:start="95:41" pos:end="95:50"><name pos:start="95:41" pos:end="95:50"><name pos:start="95:41" pos:end="95:43">ost</name><operator pos:start="95:44" pos:end="95:45">-&gt;</operator><name pos:start="95:46" pos:end="95:50">index</name></name></expr></argument>, <argument pos:start="95:53" pos:end="95:53"><expr pos:start="95:53" pos:end="95:53"><name pos:start="95:53" pos:end="95:53">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="99:9" pos:end="201:9"><if pos:start="99:9" pos:end="201:9">if <condition pos:start="99:12" pos:end="99:58">(<expr pos:start="99:13" pos:end="99:57"><operator pos:start="99:13" pos:end="99:13">!</operator><name pos:start="99:14" pos:end="99:16">vid</name> <operator pos:start="99:18" pos:end="99:19">&amp;&amp;</operator> <name pos:start="99:21" pos:end="99:35"><name pos:start="99:21" pos:end="99:23">enc</name><operator pos:start="99:24" pos:end="99:25">-&gt;</operator><name pos:start="99:26" pos:end="99:35">codec_type</name></name> <operator pos:start="99:37" pos:end="99:38">==</operator> <name pos:start="99:40" pos:end="99:57">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="99:60" pos:end="201:9">{<block_content pos:start="101:13" pos:end="199:20">

            <decl_stmt pos:start="101:13" pos:end="101:62"><decl pos:start="101:13" pos:end="101:21"><type pos:start="101:13" pos:end="101:17"><name pos:start="101:13" pos:end="101:17">float</name></type> <name pos:start="101:19" pos:end="101:21">fps</name></decl>, <decl pos:start="101:24" pos:end="101:61"><type ref="prev" pos:start="101:13" pos:end="101:17"/><name pos:start="101:24" pos:end="101:24">t</name> <init pos:start="101:26" pos:end="101:61">= <expr pos:start="101:28" pos:end="101:61"><operator pos:start="101:28" pos:end="101:28">(</operator><name pos:start="101:29" pos:end="101:36">cur_time</name><operator pos:start="101:37" pos:end="101:37">-</operator><name pos:start="101:38" pos:end="101:48">timer_start</name><operator pos:start="101:49" pos:end="101:49">)</operator> <operator pos:start="101:51" pos:end="101:51">/</operator> <literal type="number" pos:start="101:53" pos:end="101:61">1000000.0</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="105:13" pos:end="105:45"><expr pos:start="105:13" pos:end="105:44"><name pos:start="105:13" pos:end="105:24">frame_number</name> <operator pos:start="105:26" pos:end="105:26">=</operator> <name pos:start="105:28" pos:end="105:44"><name pos:start="105:28" pos:end="105:30">ost</name><operator pos:start="105:31" pos:end="105:32">-&gt;</operator><name pos:start="105:33" pos:end="105:44">frame_number</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:47"><expr pos:start="107:13" pos:end="107:46"><name pos:start="107:13" pos:end="107:15">fps</name> <operator pos:start="107:17" pos:end="107:17">=</operator> <ternary pos:start="107:19" pos:end="107:46"><condition pos:start="107:19" pos:end="107:25"><expr pos:start="107:19" pos:end="107:23"><name pos:start="107:19" pos:end="107:19">t</name> <operator pos:start="107:21" pos:end="107:21">&gt;</operator> <literal type="number" pos:start="107:23" pos:end="107:23">1</literal></expr> ?</condition><then pos:start="107:27" pos:end="107:42"> <expr pos:start="107:27" pos:end="107:42"><name pos:start="107:27" pos:end="107:38">frame_number</name> <operator pos:start="107:40" pos:end="107:40">/</operator> <name pos:start="107:42" pos:end="107:42">t</name></expr> </then><else pos:start="107:44" pos:end="107:46">: <expr pos:start="107:46" pos:end="107:46"><literal type="number" pos:start="107:46" pos:end="107:46">0</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="111:55"><expr pos:start="109:13" pos:end="111:54"><call pos:start="109:13" pos:end="111:54"><name pos:start="109:13" pos:end="109:20">snprintf</name><argument_list pos:start="109:21" pos:end="111:54">(<argument pos:start="109:22" pos:end="109:38"><expr pos:start="109:22" pos:end="109:38"><name pos:start="109:22" pos:end="109:24">buf</name> <operator pos:start="109:26" pos:end="109:26">+</operator> <call pos:start="109:28" pos:end="109:38"><name pos:start="109:28" pos:end="109:33">strlen</name><argument_list pos:start="109:34" pos:end="109:38">(<argument pos:start="109:35" pos:end="109:37"><expr pos:start="109:35" pos:end="109:37"><name pos:start="109:35" pos:end="109:37">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="109:41" pos:end="109:65"><expr pos:start="109:41" pos:end="109:65"><sizeof pos:start="109:41" pos:end="109:51">sizeof<argument_list pos:start="109:47" pos:end="109:51">(<argument pos:start="109:48" pos:end="109:50"><expr pos:start="109:48" pos:end="109:50"><name pos:start="109:48" pos:end="109:50">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="109:53" pos:end="109:53">-</operator> <call pos:start="109:55" pos:end="109:65"><name pos:start="109:55" pos:end="109:60">strlen</name><argument_list pos:start="109:61" pos:end="109:65">(<argument pos:start="109:62" pos:end="109:64"><expr pos:start="109:62" pos:end="109:64"><name pos:start="109:62" pos:end="109:64">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="109:68" pos:end="109:97"><expr pos:start="109:68" pos:end="109:97"><literal type="string" pos:start="109:68" pos:end="109:97">"frame=%5d fps=%3.*f q=%3.1f "</literal></expr></argument>,

                     <argument pos:start="111:22" pos:end="111:33"><expr pos:start="111:22" pos:end="111:33"><name pos:start="111:22" pos:end="111:33">frame_number</name></expr></argument>, <argument pos:start="111:36" pos:end="111:45"><expr pos:start="111:36" pos:end="111:45"><name pos:start="111:36" pos:end="111:38">fps</name> <operator pos:start="111:40" pos:end="111:40">&lt;</operator> <literal type="number" pos:start="111:42" pos:end="111:45">9.95</literal></expr></argument>, <argument pos:start="111:48" pos:end="111:50"><expr pos:start="111:48" pos:end="111:50"><name pos:start="111:48" pos:end="111:50">fps</name></expr></argument>, <argument pos:start="111:53" pos:end="111:53"><expr pos:start="111:53" pos:end="111:53"><name pos:start="111:53" pos:end="111:53">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:64"><expr pos:start="113:13" pos:end="113:63"><call pos:start="113:13" pos:end="113:63"><name pos:start="113:13" pos:end="113:22">av_bprintf</name><argument_list pos:start="113:23" pos:end="113:63">(<argument pos:start="113:24" pos:end="113:34"><expr pos:start="113:24" pos:end="113:34"><operator pos:start="113:24" pos:end="113:24">&amp;</operator><name pos:start="113:25" pos:end="113:34">buf_script</name></expr></argument>, <argument pos:start="113:37" pos:end="113:48"><expr pos:start="113:37" pos:end="113:48"><literal type="string" pos:start="113:37" pos:end="113:48">"frame=%d\n"</literal></expr></argument>, <argument pos:start="113:51" pos:end="113:62"><expr pos:start="113:51" pos:end="113:62"><name pos:start="113:51" pos:end="113:62">frame_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:55"><expr pos:start="115:13" pos:end="115:54"><call pos:start="115:13" pos:end="115:54"><name pos:start="115:13" pos:end="115:22">av_bprintf</name><argument_list pos:start="115:23" pos:end="115:54">(<argument pos:start="115:24" pos:end="115:34"><expr pos:start="115:24" pos:end="115:34"><operator pos:start="115:24" pos:end="115:24">&amp;</operator><name pos:start="115:25" pos:end="115:34">buf_script</name></expr></argument>, <argument pos:start="115:37" pos:end="115:48"><expr pos:start="115:37" pos:end="115:48"><literal type="string" pos:start="115:37" pos:end="115:48">"fps=%.1f\n"</literal></expr></argument>, <argument pos:start="115:51" pos:end="115:53"><expr pos:start="115:51" pos:end="115:53"><name pos:start="115:51" pos:end="115:53">fps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="119:55"><expr pos:start="117:13" pos:end="119:54"><call pos:start="117:13" pos:end="119:54"><name pos:start="117:13" pos:end="117:22">av_bprintf</name><argument_list pos:start="117:23" pos:end="119:54">(<argument pos:start="117:24" pos:end="117:34"><expr pos:start="117:24" pos:end="117:34"><operator pos:start="117:24" pos:end="117:24">&amp;</operator><name pos:start="117:25" pos:end="117:34">buf_script</name></expr></argument>, <argument pos:start="117:37" pos:end="117:59"><expr pos:start="117:37" pos:end="117:59"><literal type="string" pos:start="117:37" pos:end="117:59">"stream_%d_%d_q=%.1f\n"</literal></expr></argument>,

                       <argument pos:start="119:24" pos:end="119:38"><expr pos:start="119:24" pos:end="119:38"><name pos:start="119:24" pos:end="119:38"><name pos:start="119:24" pos:end="119:26">ost</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:38">file_index</name></name></expr></argument>, <argument pos:start="119:41" pos:end="119:50"><expr pos:start="119:41" pos:end="119:50"><name pos:start="119:41" pos:end="119:50"><name pos:start="119:41" pos:end="119:43">ost</name><operator pos:start="119:44" pos:end="119:45">-&gt;</operator><name pos:start="119:46" pos:end="119:50">index</name></name></expr></argument>, <argument pos:start="119:53" pos:end="119:53"><expr pos:start="119:53" pos:end="119:53"><name pos:start="119:53" pos:end="119:53">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="121:13" pos:end="123:76"><if pos:start="121:13" pos:end="123:76">if <condition pos:start="121:16" pos:end="121:31">(<expr pos:start="121:17" pos:end="121:30"><name pos:start="121:17" pos:end="121:30">is_last_report</name></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:76"><block_content pos:start="123:17" pos:end="123:76">

                <expr_stmt pos:start="123:17" pos:end="123:76"><expr pos:start="123:17" pos:end="123:75"><call pos:start="123:17" pos:end="123:75"><name pos:start="123:17" pos:end="123:24">snprintf</name><argument_list pos:start="123:25" pos:end="123:75">(<argument pos:start="123:26" pos:end="123:42"><expr pos:start="123:26" pos:end="123:42"><name pos:start="123:26" pos:end="123:28">buf</name> <operator pos:start="123:30" pos:end="123:30">+</operator> <call pos:start="123:32" pos:end="123:42"><name pos:start="123:32" pos:end="123:37">strlen</name><argument_list pos:start="123:38" pos:end="123:42">(<argument pos:start="123:39" pos:end="123:41"><expr pos:start="123:39" pos:end="123:41"><name pos:start="123:39" pos:end="123:41">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="123:45" pos:end="123:69"><expr pos:start="123:45" pos:end="123:69"><sizeof pos:start="123:45" pos:end="123:55">sizeof<argument_list pos:start="123:51" pos:end="123:55">(<argument pos:start="123:52" pos:end="123:54"><expr pos:start="123:52" pos:end="123:54"><name pos:start="123:52" pos:end="123:54">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="123:57" pos:end="123:57">-</operator> <call pos:start="123:59" pos:end="123:69"><name pos:start="123:59" pos:end="123:64">strlen</name><argument_list pos:start="123:65" pos:end="123:69">(<argument pos:start="123:66" pos:end="123:68"><expr pos:start="123:66" pos:end="123:68"><name pos:start="123:66" pos:end="123:68">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="123:72" pos:end="123:74"><expr pos:start="123:72" pos:end="123:74"><literal type="string" pos:start="123:72" pos:end="123:74">"L"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="125:13" pos:end="139:13"><if pos:start="125:13" pos:end="139:13">if <condition pos:start="125:16" pos:end="125:24">(<expr pos:start="125:17" pos:end="125:23"><name pos:start="125:17" pos:end="125:23">qp_hist</name></expr>)</condition> <block pos:start="125:26" pos:end="139:13">{<block_content pos:start="127:17" pos:end="137:121">

                <decl_stmt pos:start="127:17" pos:end="127:22"><decl pos:start="127:17" pos:end="127:21"><type pos:start="127:17" pos:end="127:19"><name pos:start="127:17" pos:end="127:19">int</name></type> <name pos:start="127:21" pos:end="127:21">j</name></decl>;</decl_stmt>

                <decl_stmt pos:start="129:17" pos:end="129:35"><decl pos:start="129:17" pos:end="129:34"><type pos:start="129:17" pos:end="129:19"><name pos:start="129:17" pos:end="129:19">int</name></type> <name pos:start="129:21" pos:end="129:22">qp</name> <init pos:start="129:24" pos:end="129:34">= <expr pos:start="129:26" pos:end="129:34"><call pos:start="129:26" pos:end="129:34"><name pos:start="129:26" pos:end="129:31">lrintf</name><argument_list pos:start="129:32" pos:end="129:34">(<argument pos:start="129:33" pos:end="129:33"><expr pos:start="129:33" pos:end="129:33"><name pos:start="129:33" pos:end="129:33">q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="131:17" pos:end="133:39"><if pos:start="131:17" pos:end="133:39">if <condition pos:start="131:20" pos:end="131:65">(<expr pos:start="131:21" pos:end="131:64"><name pos:start="131:21" pos:end="131:22">qp</name> <operator pos:start="131:24" pos:end="131:25">&gt;=</operator> <literal type="number" pos:start="131:27" pos:end="131:27">0</literal> <operator pos:start="131:29" pos:end="131:30">&amp;&amp;</operator> <name pos:start="131:32" pos:end="131:33">qp</name> <operator pos:start="131:35" pos:end="131:35">&lt;</operator> <call pos:start="131:37" pos:end="131:64"><name pos:start="131:37" pos:end="131:50">FF_ARRAY_ELEMS</name><argument_list pos:start="131:51" pos:end="131:64">(<argument pos:start="131:52" pos:end="131:63"><expr pos:start="131:52" pos:end="131:63"><name pos:start="131:52" pos:end="131:63">qp_histogram</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="133:21" pos:end="133:39"><block_content pos:start="133:21" pos:end="133:39">

                    <expr_stmt pos:start="133:21" pos:end="133:39"><expr pos:start="133:21" pos:end="133:38"><name pos:start="133:21" pos:end="133:36"><name pos:start="133:21" pos:end="133:32">qp_histogram</name><index pos:start="133:33" pos:end="133:36">[<expr pos:start="133:34" pos:end="133:35"><name pos:start="133:34" pos:end="133:35">qp</name></expr>]</index></name><operator pos:start="133:37" pos:end="133:38">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <for pos:start="135:17" pos:end="137:121">for <control pos:start="135:21" pos:end="135:40">(<init pos:start="135:22" pos:end="135:27"><expr pos:start="135:22" pos:end="135:26"><name pos:start="135:22" pos:end="135:22">j</name> <operator pos:start="135:24" pos:end="135:24">=</operator> <literal type="number" pos:start="135:26" pos:end="135:26">0</literal></expr>;</init> <condition pos:start="135:29" pos:end="135:35"><expr pos:start="135:29" pos:end="135:34"><name pos:start="135:29" pos:end="135:29">j</name> <operator pos:start="135:31" pos:end="135:31">&lt;</operator> <literal type="number" pos:start="135:33" pos:end="135:34">32</literal></expr>;</condition> <incr pos:start="135:37" pos:end="135:39"><expr pos:start="135:37" pos:end="135:39"><name pos:start="135:37" pos:end="135:37">j</name><operator pos:start="135:38" pos:end="135:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="137:21" pos:end="137:121"><block_content pos:start="137:21" pos:end="137:121">

                    <expr_stmt pos:start="137:21" pos:end="137:121"><expr pos:start="137:21" pos:end="137:120"><call pos:start="137:21" pos:end="137:120"><name pos:start="137:21" pos:end="137:28">snprintf</name><argument_list pos:start="137:29" pos:end="137:120">(<argument pos:start="137:30" pos:end="137:46"><expr pos:start="137:30" pos:end="137:46"><name pos:start="137:30" pos:end="137:32">buf</name> <operator pos:start="137:34" pos:end="137:34">+</operator> <call pos:start="137:36" pos:end="137:46"><name pos:start="137:36" pos:end="137:41">strlen</name><argument_list pos:start="137:42" pos:end="137:46">(<argument pos:start="137:43" pos:end="137:45"><expr pos:start="137:43" pos:end="137:45"><name pos:start="137:43" pos:end="137:45">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="137:49" pos:end="137:73"><expr pos:start="137:49" pos:end="137:73"><sizeof pos:start="137:49" pos:end="137:59">sizeof<argument_list pos:start="137:55" pos:end="137:59">(<argument pos:start="137:56" pos:end="137:58"><expr pos:start="137:56" pos:end="137:58"><name pos:start="137:56" pos:end="137:58">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="137:61" pos:end="137:61">-</operator> <call pos:start="137:63" pos:end="137:73"><name pos:start="137:63" pos:end="137:68">strlen</name><argument_list pos:start="137:69" pos:end="137:73">(<argument pos:start="137:70" pos:end="137:72"><expr pos:start="137:70" pos:end="137:72"><name pos:start="137:70" pos:end="137:72">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="137:76" pos:end="137:79"><expr pos:start="137:76" pos:end="137:79"><literal type="string" pos:start="137:76" pos:end="137:79">"%X"</literal></expr></argument>, <argument pos:start="137:82" pos:end="137:119"><expr pos:start="137:82" pos:end="137:119"><operator pos:start="137:82" pos:end="137:82">(</operator><name pos:start="137:83" pos:end="137:85">int</name><operator pos:start="137:86" pos:end="137:86">)</operator><call pos:start="137:87" pos:end="137:119"><name pos:start="137:87" pos:end="137:92">lrintf</name><argument_list pos:start="137:93" pos:end="137:119">(<argument pos:start="137:94" pos:end="137:118"><expr pos:start="137:94" pos:end="137:118"><call pos:start="137:94" pos:end="137:118"><name pos:start="137:94" pos:end="137:97">log2</name><argument_list pos:start="137:98" pos:end="137:118">(<argument pos:start="137:99" pos:end="137:117"><expr pos:start="137:99" pos:end="137:117"><name pos:start="137:99" pos:end="137:113"><name pos:start="137:99" pos:end="137:110">qp_histogram</name><index pos:start="137:111" pos:end="137:113">[<expr pos:start="137:112" pos:end="137:112"><name pos:start="137:112" pos:end="137:112">j</name></expr>]</index></name> <operator pos:start="137:115" pos:end="137:115">+</operator> <literal type="number" pos:start="137:117" pos:end="137:117">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="141:13" pos:end="197:13"><if pos:start="141:13" pos:end="197:13">if <condition pos:start="141:16" pos:end="141:85">(<expr pos:start="141:17" pos:end="141:84"><operator pos:start="141:17" pos:end="141:17">(</operator><name pos:start="141:18" pos:end="141:27"><name pos:start="141:18" pos:end="141:20">enc</name><operator pos:start="141:21" pos:end="141:22">-&gt;</operator><name pos:start="141:23" pos:end="141:27">flags</name></name><operator pos:start="141:28" pos:end="141:28">&amp;</operator><name pos:start="141:29" pos:end="141:43">CODEC_FLAG_PSNR</name><operator pos:start="141:44" pos:end="141:44">)</operator> <operator pos:start="141:46" pos:end="141:47">&amp;&amp;</operator> <operator pos:start="141:49" pos:end="141:49">(</operator><name pos:start="141:50" pos:end="141:65"><name pos:start="141:50" pos:end="141:52">enc</name><operator pos:start="141:53" pos:end="141:54">-&gt;</operator><name pos:start="141:55" pos:end="141:65">coded_frame</name></name> <operator pos:start="141:67" pos:end="141:68">||</operator> <name pos:start="141:70" pos:end="141:83">is_last_report</name><operator pos:start="141:84" pos:end="141:84">)</operator></expr>)</condition> <block pos:start="141:87" pos:end="197:13">{<block_content pos:start="143:17" pos:end="195:59">

                <decl_stmt pos:start="143:17" pos:end="143:22"><decl pos:start="143:17" pos:end="143:21"><type pos:start="143:17" pos:end="143:19"><name pos:start="143:17" pos:end="143:19">int</name></type> <name pos:start="143:21" pos:end="143:21">j</name></decl>;</decl_stmt>

                <decl_stmt pos:start="145:17" pos:end="145:44"><decl pos:start="145:17" pos:end="145:28"><type pos:start="145:17" pos:end="145:22"><name pos:start="145:17" pos:end="145:22">double</name></type> <name pos:start="145:24" pos:end="145:28">error</name></decl>, <decl pos:start="145:31" pos:end="145:43"><type ref="prev" pos:start="145:17" pos:end="145:22"/><name pos:start="145:31" pos:end="145:39">error_sum</name> <init pos:start="145:41" pos:end="145:43">= <expr pos:start="145:43" pos:end="145:43"><literal type="number" pos:start="145:43" pos:end="145:43">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="147:17" pos:end="147:44"><decl pos:start="147:17" pos:end="147:28"><type pos:start="147:17" pos:end="147:22"><name pos:start="147:17" pos:end="147:22">double</name></type> <name pos:start="147:24" pos:end="147:28">scale</name></decl>, <decl pos:start="147:31" pos:end="147:43"><type ref="prev" pos:start="147:17" pos:end="147:22"/><name pos:start="147:31" pos:end="147:39">scale_sum</name> <init pos:start="147:41" pos:end="147:43">= <expr pos:start="147:43" pos:end="147:43"><literal type="number" pos:start="147:43" pos:end="147:43">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="149:17" pos:end="149:25"><decl pos:start="149:17" pos:end="149:24"><type pos:start="149:17" pos:end="149:22"><name pos:start="149:17" pos:end="149:22">double</name></type> <name pos:start="149:24" pos:end="149:24">p</name></decl>;</decl_stmt>

                <decl_stmt pos:start="151:17" pos:end="151:47"><decl pos:start="151:17" pos:end="151:46"><type pos:start="151:17" pos:end="151:20"><name pos:start="151:17" pos:end="151:20">char</name></type> <name pos:start="151:22" pos:end="151:28"><name pos:start="151:22" pos:end="151:25">type</name><index pos:start="151:26" pos:end="151:28">[<expr pos:start="151:27" pos:end="151:27"><literal type="number" pos:start="151:27" pos:end="151:27">3</literal></expr>]</index></name> <init pos:start="151:30" pos:end="151:46">= <expr pos:start="151:32" pos:end="151:46"><block pos:start="151:32" pos:end="151:46">{ <expr pos:start="151:34" pos:end="151:36"><literal type="char" pos:start="151:34" pos:end="151:36">'Y'</literal></expr>,<expr pos:start="151:38" pos:end="151:40"><literal type="char" pos:start="151:38" pos:end="151:40">'U'</literal></expr>,<expr pos:start="151:42" pos:end="151:44"><literal type="char" pos:start="151:42" pos:end="151:44">'V'</literal></expr> }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:80"><expr pos:start="153:17" pos:end="153:79"><call pos:start="153:17" pos:end="153:79"><name pos:start="153:17" pos:end="153:24">snprintf</name><argument_list pos:start="153:25" pos:end="153:79">(<argument pos:start="153:26" pos:end="153:42"><expr pos:start="153:26" pos:end="153:42"><name pos:start="153:26" pos:end="153:28">buf</name> <operator pos:start="153:30" pos:end="153:30">+</operator> <call pos:start="153:32" pos:end="153:42"><name pos:start="153:32" pos:end="153:37">strlen</name><argument_list pos:start="153:38" pos:end="153:42">(<argument pos:start="153:39" pos:end="153:41"><expr pos:start="153:39" pos:end="153:41"><name pos:start="153:39" pos:end="153:41">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="153:45" pos:end="153:69"><expr pos:start="153:45" pos:end="153:69"><sizeof pos:start="153:45" pos:end="153:55">sizeof<argument_list pos:start="153:51" pos:end="153:55">(<argument pos:start="153:52" pos:end="153:54"><expr pos:start="153:52" pos:end="153:54"><name pos:start="153:52" pos:end="153:54">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="153:57" pos:end="153:57">-</operator> <call pos:start="153:59" pos:end="153:69"><name pos:start="153:59" pos:end="153:64">strlen</name><argument_list pos:start="153:65" pos:end="153:69">(<argument pos:start="153:66" pos:end="153:68"><expr pos:start="153:66" pos:end="153:68"><name pos:start="153:66" pos:end="153:68">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="153:72" pos:end="153:78"><expr pos:start="153:72" pos:end="153:78"><literal type="string" pos:start="153:72" pos:end="153:78">"PSNR="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="155:17" pos:end="187:17">for <control pos:start="155:21" pos:end="155:39">(<init pos:start="155:22" pos:end="155:27"><expr pos:start="155:22" pos:end="155:26"><name pos:start="155:22" pos:end="155:22">j</name> <operator pos:start="155:24" pos:end="155:24">=</operator> <literal type="number" pos:start="155:26" pos:end="155:26">0</literal></expr>;</init> <condition pos:start="155:29" pos:end="155:34"><expr pos:start="155:29" pos:end="155:33"><name pos:start="155:29" pos:end="155:29">j</name> <operator pos:start="155:31" pos:end="155:31">&lt;</operator> <literal type="number" pos:start="155:33" pos:end="155:33">3</literal></expr>;</condition> <incr pos:start="155:36" pos:end="155:38"><expr pos:start="155:36" pos:end="155:38"><name pos:start="155:36" pos:end="155:36">j</name><operator pos:start="155:37" pos:end="155:38">++</operator></expr></incr>)</control> <block pos:start="155:41" pos:end="187:17">{<block_content pos:start="157:21" pos:end="185:77">

                    <if_stmt pos:start="157:21" pos:end="169:21"><if pos:start="157:21" pos:end="163:21">if <condition pos:start="157:24" pos:end="157:39">(<expr pos:start="157:25" pos:end="157:38"><name pos:start="157:25" pos:end="157:38">is_last_report</name></expr>)</condition> <block pos:start="157:41" pos:end="163:21">{<block_content pos:start="159:25" pos:end="161:88">

                        <expr_stmt pos:start="159:25" pos:end="159:46"><expr pos:start="159:25" pos:end="159:45"><name pos:start="159:25" pos:end="159:29">error</name> <operator pos:start="159:31" pos:end="159:31">=</operator> <name pos:start="159:33" pos:end="159:45"><name pos:start="159:33" pos:end="159:35">enc</name><operator pos:start="159:36" pos:end="159:37">-&gt;</operator><name pos:start="159:38" pos:end="159:42">error</name><index pos:start="159:43" pos:end="159:45">[<expr pos:start="159:44" pos:end="159:44"><name pos:start="159:44" pos:end="159:44">j</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="161:25" pos:end="161:88"><expr pos:start="161:25" pos:end="161:87"><name pos:start="161:25" pos:end="161:29">scale</name> <operator pos:start="161:31" pos:end="161:31">=</operator> <name pos:start="161:33" pos:end="161:42"><name pos:start="161:33" pos:end="161:35">enc</name><operator pos:start="161:36" pos:end="161:37">-&gt;</operator><name pos:start="161:38" pos:end="161:42">width</name></name> <operator pos:start="161:44" pos:end="161:44">*</operator> <name pos:start="161:46" pos:end="161:56"><name pos:start="161:46" pos:end="161:48">enc</name><operator pos:start="161:49" pos:end="161:50">-&gt;</operator><name pos:start="161:51" pos:end="161:56">height</name></name> <operator pos:start="161:58" pos:end="161:58">*</operator> <literal type="number" pos:start="161:60" pos:end="161:64">255.0</literal> <operator pos:start="161:66" pos:end="161:66">*</operator> <literal type="number" pos:start="161:68" pos:end="161:72">255.0</literal> <operator pos:start="161:74" pos:end="161:74">*</operator> <name pos:start="161:76" pos:end="161:87">frame_number</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="163:23" pos:end="169:21">else <block pos:start="163:28" pos:end="169:21">{<block_content pos:start="165:25" pos:end="167:73">

                        <expr_stmt pos:start="165:25" pos:end="165:59"><expr pos:start="165:25" pos:end="165:58"><name pos:start="165:25" pos:end="165:29">error</name> <operator pos:start="165:31" pos:end="165:31">=</operator> <name pos:start="165:33" pos:end="165:58"><name pos:start="165:33" pos:end="165:35">enc</name><operator pos:start="165:36" pos:end="165:37">-&gt;</operator><name pos:start="165:38" pos:end="165:48">coded_frame</name><operator pos:start="165:49" pos:end="165:50">-&gt;</operator><name pos:start="165:51" pos:end="165:55">error</name><index pos:start="165:56" pos:end="165:58">[<expr pos:start="165:57" pos:end="165:57"><name pos:start="165:57" pos:end="165:57">j</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="167:25" pos:end="167:73"><expr pos:start="167:25" pos:end="167:72"><name pos:start="167:25" pos:end="167:29">scale</name> <operator pos:start="167:31" pos:end="167:31">=</operator> <name pos:start="167:33" pos:end="167:42"><name pos:start="167:33" pos:end="167:35">enc</name><operator pos:start="167:36" pos:end="167:37">-&gt;</operator><name pos:start="167:38" pos:end="167:42">width</name></name> <operator pos:start="167:44" pos:end="167:44">*</operator> <name pos:start="167:46" pos:end="167:56"><name pos:start="167:46" pos:end="167:48">enc</name><operator pos:start="167:49" pos:end="167:50">-&gt;</operator><name pos:start="167:51" pos:end="167:56">height</name></name> <operator pos:start="167:58" pos:end="167:58">*</operator> <literal type="number" pos:start="167:60" pos:end="167:64">255.0</literal> <operator pos:start="167:66" pos:end="167:66">*</operator> <literal type="number" pos:start="167:68" pos:end="167:72">255.0</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="171:21" pos:end="173:35"><if pos:start="171:21" pos:end="173:35">if <condition pos:start="171:24" pos:end="171:26">(<expr pos:start="171:25" pos:end="171:25"><name pos:start="171:25" pos:end="171:25">j</name></expr>)</condition><block type="pseudo" pos:start="173:25" pos:end="173:35"><block_content pos:start="173:25" pos:end="173:35">

                        <expr_stmt pos:start="173:25" pos:end="173:35"><expr pos:start="173:25" pos:end="173:34"><name pos:start="173:25" pos:end="173:29">scale</name> <operator pos:start="173:31" pos:end="173:32">/=</operator> <literal type="number" pos:start="173:34" pos:end="173:34">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="175:21" pos:end="175:39"><expr pos:start="175:21" pos:end="175:38"><name pos:start="175:21" pos:end="175:29">error_sum</name> <operator pos:start="175:31" pos:end="175:32">+=</operator> <name pos:start="175:34" pos:end="175:38">error</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="177:21" pos:end="177:39"><expr pos:start="177:21" pos:end="177:38"><name pos:start="177:21" pos:end="177:29">scale_sum</name> <operator pos:start="177:31" pos:end="177:32">+=</operator> <name pos:start="177:34" pos:end="177:38">scale</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="179:21" pos:end="179:44"><expr pos:start="179:21" pos:end="179:43"><name pos:start="179:21" pos:end="179:21">p</name> <operator pos:start="179:23" pos:end="179:23">=</operator> <call pos:start="179:25" pos:end="179:43"><name pos:start="179:25" pos:end="179:28">psnr</name><argument_list pos:start="179:29" pos:end="179:43">(<argument pos:start="179:30" pos:end="179:42"><expr pos:start="179:30" pos:end="179:42"><name pos:start="179:30" pos:end="179:34">error</name> <operator pos:start="179:36" pos:end="179:36">/</operator> <name pos:start="179:38" pos:end="179:42">scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="181:21" pos:end="181:100"><expr pos:start="181:21" pos:end="181:99"><call pos:start="181:21" pos:end="181:99"><name pos:start="181:21" pos:end="181:28">snprintf</name><argument_list pos:start="181:29" pos:end="181:99">(<argument pos:start="181:30" pos:end="181:46"><expr pos:start="181:30" pos:end="181:46"><name pos:start="181:30" pos:end="181:32">buf</name> <operator pos:start="181:34" pos:end="181:34">+</operator> <call pos:start="181:36" pos:end="181:46"><name pos:start="181:36" pos:end="181:41">strlen</name><argument_list pos:start="181:42" pos:end="181:46">(<argument pos:start="181:43" pos:end="181:45"><expr pos:start="181:43" pos:end="181:45"><name pos:start="181:43" pos:end="181:45">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="181:49" pos:end="181:73"><expr pos:start="181:49" pos:end="181:73"><sizeof pos:start="181:49" pos:end="181:59">sizeof<argument_list pos:start="181:55" pos:end="181:59">(<argument pos:start="181:56" pos:end="181:58"><expr pos:start="181:56" pos:end="181:58"><name pos:start="181:56" pos:end="181:58">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="181:61" pos:end="181:61">-</operator> <call pos:start="181:63" pos:end="181:73"><name pos:start="181:63" pos:end="181:68">strlen</name><argument_list pos:start="181:69" pos:end="181:73">(<argument pos:start="181:70" pos:end="181:72"><expr pos:start="181:70" pos:end="181:72"><name pos:start="181:70" pos:end="181:72">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="181:76" pos:end="181:86"><expr pos:start="181:76" pos:end="181:86"><literal type="string" pos:start="181:76" pos:end="181:86">"%c:%2.2f "</literal></expr></argument>, <argument pos:start="181:89" pos:end="181:95"><expr pos:start="181:89" pos:end="181:95"><name pos:start="181:89" pos:end="181:95"><name pos:start="181:89" pos:end="181:92">type</name><index pos:start="181:93" pos:end="181:95">[<expr pos:start="181:94" pos:end="181:94"><name pos:start="181:94" pos:end="181:94">j</name></expr>]</index></name></expr></argument>, <argument pos:start="181:98" pos:end="181:98"><expr pos:start="181:98" pos:end="181:98"><name pos:start="181:98" pos:end="181:98">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="183:21" pos:end="185:77"><expr pos:start="183:21" pos:end="185:76"><call pos:start="183:21" pos:end="185:76"><name pos:start="183:21" pos:end="183:30">av_bprintf</name><argument_list pos:start="183:31" pos:end="185:76">(<argument pos:start="183:32" pos:end="183:42"><expr pos:start="183:32" pos:end="183:42"><operator pos:start="183:32" pos:end="183:32">&amp;</operator><name pos:start="183:33" pos:end="183:42">buf_script</name></expr></argument>, <argument pos:start="183:45" pos:end="183:74"><expr pos:start="183:45" pos:end="183:74"><literal type="string" pos:start="183:45" pos:end="183:74">"stream_%d_%d_psnr_%c=%2.2f\n"</literal></expr></argument>,

                               <argument pos:start="185:32" pos:end="185:46"><expr pos:start="185:32" pos:end="185:46"><name pos:start="185:32" pos:end="185:46"><name pos:start="185:32" pos:end="185:34">ost</name><operator pos:start="185:35" pos:end="185:36">-&gt;</operator><name pos:start="185:37" pos:end="185:46">file_index</name></name></expr></argument>, <argument pos:start="185:49" pos:end="185:58"><expr pos:start="185:49" pos:end="185:58"><name pos:start="185:49" pos:end="185:58"><name pos:start="185:49" pos:end="185:51">ost</name><operator pos:start="185:52" pos:end="185:53">-&gt;</operator><name pos:start="185:54" pos:end="185:58">index</name></name></expr></argument>, <argument pos:start="185:61" pos:end="185:72"><expr pos:start="185:61" pos:end="185:72"><name pos:start="185:61" pos:end="185:67"><name pos:start="185:61" pos:end="185:64">type</name><index pos:start="185:65" pos:end="185:67">[<expr pos:start="185:66" pos:end="185:66"><name pos:start="185:66" pos:end="185:66">j</name></expr>]</index></name> <operator pos:start="185:69" pos:end="185:69">|</operator> <literal type="number" pos:start="185:71" pos:end="185:72">32</literal></expr></argument>, <argument pos:start="185:75" pos:end="185:75"><expr pos:start="185:75" pos:end="185:75"><name pos:start="185:75" pos:end="185:75">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="189:17" pos:end="189:48"><expr pos:start="189:17" pos:end="189:47"><name pos:start="189:17" pos:end="189:17">p</name> <operator pos:start="189:19" pos:end="189:19">=</operator> <call pos:start="189:21" pos:end="189:47"><name pos:start="189:21" pos:end="189:24">psnr</name><argument_list pos:start="189:25" pos:end="189:47">(<argument pos:start="189:26" pos:end="189:46"><expr pos:start="189:26" pos:end="189:46"><name pos:start="189:26" pos:end="189:34">error_sum</name> <operator pos:start="189:36" pos:end="189:36">/</operator> <name pos:start="189:38" pos:end="189:46">scale_sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:112"><expr pos:start="191:17" pos:end="191:111"><call pos:start="191:17" pos:end="191:111"><name pos:start="191:17" pos:end="191:24">snprintf</name><argument_list pos:start="191:25" pos:end="191:111">(<argument pos:start="191:26" pos:end="191:42"><expr pos:start="191:26" pos:end="191:42"><name pos:start="191:26" pos:end="191:28">buf</name> <operator pos:start="191:30" pos:end="191:30">+</operator> <call pos:start="191:32" pos:end="191:42"><name pos:start="191:32" pos:end="191:37">strlen</name><argument_list pos:start="191:38" pos:end="191:42">(<argument pos:start="191:39" pos:end="191:41"><expr pos:start="191:39" pos:end="191:41"><name pos:start="191:39" pos:end="191:41">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="191:45" pos:end="191:69"><expr pos:start="191:45" pos:end="191:69"><sizeof pos:start="191:45" pos:end="191:55">sizeof<argument_list pos:start="191:51" pos:end="191:55">(<argument pos:start="191:52" pos:end="191:54"><expr pos:start="191:52" pos:end="191:54"><name pos:start="191:52" pos:end="191:54">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="191:57" pos:end="191:57">-</operator> <call pos:start="191:59" pos:end="191:69"><name pos:start="191:59" pos:end="191:64">strlen</name><argument_list pos:start="191:65" pos:end="191:69">(<argument pos:start="191:66" pos:end="191:68"><expr pos:start="191:66" pos:end="191:68"><name pos:start="191:66" pos:end="191:68">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="191:72" pos:end="191:81"><expr pos:start="191:72" pos:end="191:81"><literal type="string" pos:start="191:72" pos:end="191:81">"*:%2.2f "</literal></expr></argument>, <argument pos:start="191:84" pos:end="191:110"><expr pos:start="191:84" pos:end="191:110"><call pos:start="191:84" pos:end="191:110"><name pos:start="191:84" pos:end="191:87">psnr</name><argument_list pos:start="191:88" pos:end="191:110">(<argument pos:start="191:89" pos:end="191:109"><expr pos:start="191:89" pos:end="191:109"><name pos:start="191:89" pos:end="191:97">error_sum</name> <operator pos:start="191:99" pos:end="191:99">/</operator> <name pos:start="191:101" pos:end="191:109">scale_sum</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="195:59"><expr pos:start="193:17" pos:end="195:58"><call pos:start="193:17" pos:end="195:58"><name pos:start="193:17" pos:end="193:26">av_bprintf</name><argument_list pos:start="193:27" pos:end="195:58">(<argument pos:start="193:28" pos:end="193:38"><expr pos:start="193:28" pos:end="193:38"><operator pos:start="193:28" pos:end="193:28">&amp;</operator><name pos:start="193:29" pos:end="193:38">buf_script</name></expr></argument>, <argument pos:start="193:41" pos:end="193:71"><expr pos:start="193:41" pos:end="193:71"><literal type="string" pos:start="193:41" pos:end="193:71">"stream_%d_%d_psnr_all=%2.2f\n"</literal></expr></argument>,

                           <argument pos:start="195:28" pos:end="195:42"><expr pos:start="195:28" pos:end="195:42"><name pos:start="195:28" pos:end="195:42"><name pos:start="195:28" pos:end="195:30">ost</name><operator pos:start="195:31" pos:end="195:32">-&gt;</operator><name pos:start="195:33" pos:end="195:42">file_index</name></name></expr></argument>, <argument pos:start="195:45" pos:end="195:54"><expr pos:start="195:45" pos:end="195:54"><name pos:start="195:45" pos:end="195:54"><name pos:start="195:45" pos:end="195:47">ost</name><operator pos:start="195:48" pos:end="195:49">-&gt;</operator><name pos:start="195:50" pos:end="195:54">index</name></name></expr></argument>, <argument pos:start="195:57" pos:end="195:57"><expr pos:start="195:57" pos:end="195:57"><name pos:start="195:57" pos:end="195:57">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:20"><expr pos:start="199:13" pos:end="199:19"><name pos:start="199:13" pos:end="199:15">vid</name> <operator pos:start="199:17" pos:end="199:17">=</operator> <literal type="number" pos:start="199:19" pos:end="199:19">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="203:9" pos:end="203:38">/* compute min output value */</comment>

        <if_stmt pos:start="205:9" pos:end="209:79"><if pos:start="205:9" pos:end="209:79">if <condition pos:start="205:12" pos:end="205:61">(<expr pos:start="205:13" pos:end="205:60"><call pos:start="205:13" pos:end="205:42"><name pos:start="205:13" pos:end="205:33">av_stream_get_end_pts</name><argument_list pos:start="205:34" pos:end="205:42">(<argument pos:start="205:35" pos:end="205:41"><expr pos:start="205:35" pos:end="205:41"><name pos:start="205:35" pos:end="205:41"><name pos:start="205:35" pos:end="205:37">ost</name><operator pos:start="205:38" pos:end="205:39">-&gt;</operator><name pos:start="205:40" pos:end="205:41">st</name></name></expr></argument>)</argument_list></call> <operator pos:start="205:44" pos:end="205:45">!=</operator> <name pos:start="205:47" pos:end="205:60">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="207:13" pos:end="209:79"><block_content pos:start="207:13" pos:end="209:79">

            <expr_stmt pos:start="207:13" pos:end="209:79"><expr pos:start="207:13" pos:end="209:78"><name pos:start="207:13" pos:end="207:15">pts</name> <operator pos:start="207:17" pos:end="207:17">=</operator> <call pos:start="207:19" pos:end="209:78"><name pos:start="207:19" pos:end="207:23">FFMAX</name><argument_list pos:start="207:24" pos:end="209:78">(<argument pos:start="207:25" pos:end="207:27"><expr pos:start="207:25" pos:end="207:27"><name pos:start="207:25" pos:end="207:27">pts</name></expr></argument>, <argument pos:start="207:30" pos:end="209:77"><expr pos:start="207:30" pos:end="209:77"><call pos:start="207:30" pos:end="209:77"><name pos:start="207:30" pos:end="207:41">av_rescale_q</name><argument_list pos:start="207:42" pos:end="209:77">(<argument pos:start="207:43" pos:end="207:72"><expr pos:start="207:43" pos:end="207:72"><call pos:start="207:43" pos:end="207:72"><name pos:start="207:43" pos:end="207:63">av_stream_get_end_pts</name><argument_list pos:start="207:64" pos:end="207:72">(<argument pos:start="207:65" pos:end="207:71"><expr pos:start="207:65" pos:end="207:71"><name pos:start="207:65" pos:end="207:71"><name pos:start="207:65" pos:end="207:67">ost</name><operator pos:start="207:68" pos:end="207:69">-&gt;</operator><name pos:start="207:70" pos:end="207:71">st</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                          <argument pos:start="209:43" pos:end="209:60"><expr pos:start="209:43" pos:end="209:60"><name pos:start="209:43" pos:end="209:60"><name pos:start="209:43" pos:end="209:45">ost</name><operator pos:start="209:46" pos:end="209:47">-&gt;</operator><name pos:start="209:48" pos:end="209:49">st</name><operator pos:start="209:50" pos:end="209:51">-&gt;</operator><name pos:start="209:52" pos:end="209:60">time_base</name></name></expr></argument>, <argument pos:start="209:63" pos:end="209:76"><expr pos:start="209:63" pos:end="209:76"><name pos:start="209:63" pos:end="209:76">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="211:9" pos:end="213:47"><if pos:start="211:9" pos:end="213:47">if <condition pos:start="211:12" pos:end="211:27">(<expr pos:start="211:13" pos:end="211:26"><name pos:start="211:13" pos:end="211:26">is_last_report</name></expr>)</condition><block type="pseudo" pos:start="213:13" pos:end="213:47"><block_content pos:start="213:13" pos:end="213:47">

            <expr_stmt pos:start="213:13" pos:end="213:47"><expr pos:start="213:13" pos:end="213:46"><name pos:start="213:13" pos:end="213:26">nb_frames_drop</name> <operator pos:start="213:28" pos:end="213:29">+=</operator> <name pos:start="213:31" pos:end="213:46"><name pos:start="213:31" pos:end="213:33">ost</name><operator pos:start="213:34" pos:end="213:35">-&gt;</operator><name pos:start="213:36" pos:end="213:46">last_droped</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="219:5" pos:end="219:30"><expr pos:start="219:5" pos:end="219:29"><name pos:start="219:5" pos:end="219:8">secs</name> <operator pos:start="219:10" pos:end="219:10">=</operator> <name pos:start="219:12" pos:end="219:14">pts</name> <operator pos:start="219:16" pos:end="219:16">/</operator> <name pos:start="219:18" pos:end="219:29">AV_TIME_BASE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:28"><expr pos:start="221:5" pos:end="221:27"><name pos:start="221:5" pos:end="221:6">us</name> <operator pos:start="221:8" pos:end="221:8">=</operator> <name pos:start="221:10" pos:end="221:12">pts</name> <operator pos:start="221:14" pos:end="221:14">%</operator> <name pos:start="221:16" pos:end="221:27">AV_TIME_BASE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="223:5" pos:end="223:21"><expr pos:start="223:5" pos:end="223:20"><name pos:start="223:5" pos:end="223:8">mins</name> <operator pos:start="223:10" pos:end="223:10">=</operator> <name pos:start="223:12" pos:end="223:15">secs</name> <operator pos:start="223:17" pos:end="223:17">/</operator> <literal type="number" pos:start="223:19" pos:end="223:20">60</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="225:5" pos:end="225:15"><expr pos:start="225:5" pos:end="225:14"><name pos:start="225:5" pos:end="225:8">secs</name> <operator pos:start="225:10" pos:end="225:11">%=</operator> <literal type="number" pos:start="225:13" pos:end="225:14">60</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:22"><expr pos:start="227:5" pos:end="227:21"><name pos:start="227:5" pos:end="227:9">hours</name> <operator pos:start="227:11" pos:end="227:11">=</operator> <name pos:start="227:13" pos:end="227:16">mins</name> <operator pos:start="227:18" pos:end="227:18">/</operator> <literal type="number" pos:start="227:20" pos:end="227:21">60</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="229:5" pos:end="229:15"><expr pos:start="229:5" pos:end="229:14"><name pos:start="229:5" pos:end="229:8">mins</name> <operator pos:start="229:10" pos:end="229:11">%=</operator> <literal type="number" pos:start="229:13" pos:end="229:14">60</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="233:5" pos:end="233:76"><expr pos:start="233:5" pos:end="233:75"><name pos:start="233:5" pos:end="233:11">bitrate</name> <operator pos:start="233:13" pos:end="233:13">=</operator> <ternary pos:start="233:15" pos:end="233:75"><condition pos:start="233:15" pos:end="233:38"><expr pos:start="233:15" pos:end="233:36"><name pos:start="233:15" pos:end="233:17">pts</name> <operator pos:start="233:19" pos:end="233:20">&amp;&amp;</operator> <name pos:start="233:22" pos:end="233:31">total_size</name> <operator pos:start="233:33" pos:end="233:34">&gt;=</operator> <literal type="number" pos:start="233:36" pos:end="233:36">0</literal></expr> ?</condition><then pos:start="233:40" pos:end="233:70"> <expr pos:start="233:40" pos:end="233:70"><name pos:start="233:40" pos:end="233:49">total_size</name> <operator pos:start="233:51" pos:end="233:51">*</operator> <literal type="number" pos:start="233:53" pos:end="233:53">8</literal> <operator pos:start="233:55" pos:end="233:55">/</operator> <operator pos:start="233:57" pos:end="233:57">(</operator><name pos:start="233:58" pos:end="233:60">pts</name> <operator pos:start="233:62" pos:end="233:62">/</operator> <literal type="number" pos:start="233:64" pos:end="233:69">1000.0</literal><operator pos:start="233:70" pos:end="233:70">)</operator></expr> </then><else pos:start="233:72" pos:end="233:75">: <expr pos:start="233:74" pos:end="233:75"><operator pos:start="233:74" pos:end="233:74">-</operator><literal type="number" pos:start="233:75" pos:end="233:75">1</literal></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="237:5" pos:end="243:76"><if pos:start="237:5" pos:end="239:51">if <condition pos:start="237:8" pos:end="237:23">(<expr pos:start="237:9" pos:end="237:22"><name pos:start="237:9" pos:end="237:18">total_size</name> <operator pos:start="237:20" pos:end="237:20">&lt;</operator> <literal type="number" pos:start="237:22" pos:end="237:22">0</literal></expr>)</condition><block type="pseudo" pos:start="237:25" pos:end="239:51"><block_content pos:start="237:25" pos:end="239:51"> <expr_stmt pos:start="237:25" pos:end="239:51"><expr pos:start="237:25" pos:end="239:50"><call pos:start="237:25" pos:end="239:50"><name pos:start="237:25" pos:end="237:32">snprintf</name><argument_list pos:start="237:33" pos:end="239:50">(<argument pos:start="237:34" pos:end="237:50"><expr pos:start="237:34" pos:end="237:50"><name pos:start="237:34" pos:end="237:36">buf</name> <operator pos:start="237:38" pos:end="237:38">+</operator> <call pos:start="237:40" pos:end="237:50"><name pos:start="237:40" pos:end="237:45">strlen</name><argument_list pos:start="237:46" pos:end="237:50">(<argument pos:start="237:47" pos:end="237:49"><expr pos:start="237:47" pos:end="237:49"><name pos:start="237:47" pos:end="237:49">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="237:53" pos:end="237:77"><expr pos:start="237:53" pos:end="237:77"><sizeof pos:start="237:53" pos:end="237:63">sizeof<argument_list pos:start="237:59" pos:end="237:63">(<argument pos:start="237:60" pos:end="237:62"><expr pos:start="237:60" pos:end="237:62"><name pos:start="237:60" pos:end="237:62">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="237:65" pos:end="237:65">-</operator> <call pos:start="237:67" pos:end="237:77"><name pos:start="237:67" pos:end="237:72">strlen</name><argument_list pos:start="237:73" pos:end="237:77">(<argument pos:start="237:74" pos:end="237:76"><expr pos:start="237:74" pos:end="237:76"><name pos:start="237:74" pos:end="237:76">buf</name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="239:34" pos:end="239:49"><expr pos:start="239:34" pos:end="239:49"><literal type="string" pos:start="239:34" pos:end="239:49">"size=N/A time="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="241:5" pos:end="243:76">else<block type="pseudo" pos:start="241:25" pos:end="243:76"><block_content pos:start="241:25" pos:end="243:76">                <expr_stmt pos:start="241:25" pos:end="243:76"><expr pos:start="241:25" pos:end="243:75"><call pos:start="241:25" pos:end="243:75"><name pos:start="241:25" pos:end="241:32">snprintf</name><argument_list pos:start="241:33" pos:end="243:75">(<argument pos:start="241:34" pos:end="241:50"><expr pos:start="241:34" pos:end="241:50"><name pos:start="241:34" pos:end="241:36">buf</name> <operator pos:start="241:38" pos:end="241:38">+</operator> <call pos:start="241:40" pos:end="241:50"><name pos:start="241:40" pos:end="241:45">strlen</name><argument_list pos:start="241:46" pos:end="241:50">(<argument pos:start="241:47" pos:end="241:49"><expr pos:start="241:47" pos:end="241:49"><name pos:start="241:47" pos:end="241:49">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="241:53" pos:end="241:77"><expr pos:start="241:53" pos:end="241:77"><sizeof pos:start="241:53" pos:end="241:63">sizeof<argument_list pos:start="241:59" pos:end="241:63">(<argument pos:start="241:60" pos:end="241:62"><expr pos:start="241:60" pos:end="241:62"><name pos:start="241:60" pos:end="241:62">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="241:65" pos:end="241:65">-</operator> <call pos:start="241:67" pos:end="241:77"><name pos:start="241:67" pos:end="241:72">strlen</name><argument_list pos:start="241:73" pos:end="241:77">(<argument pos:start="241:74" pos:end="241:76"><expr pos:start="241:74" pos:end="241:76"><name pos:start="241:74" pos:end="241:76">buf</name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="243:34" pos:end="243:53"><expr pos:start="243:34" pos:end="243:53"><literal type="string" pos:start="243:34" pos:end="243:53">"size=%8.0fkB time="</literal></expr></argument>, <argument pos:start="243:56" pos:end="243:74"><expr pos:start="243:56" pos:end="243:74"><name pos:start="243:56" pos:end="243:65">total_size</name> <operator pos:start="243:67" pos:end="243:67">/</operator> <literal type="number" pos:start="243:69" pos:end="243:74">1024.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="245:5" pos:end="249:40"><expr pos:start="245:5" pos:end="249:39"><call pos:start="245:5" pos:end="249:39"><name pos:start="245:5" pos:end="245:12">snprintf</name><argument_list pos:start="245:13" pos:end="249:39">(<argument pos:start="245:14" pos:end="245:30"><expr pos:start="245:14" pos:end="245:30"><name pos:start="245:14" pos:end="245:16">buf</name> <operator pos:start="245:18" pos:end="245:18">+</operator> <call pos:start="245:20" pos:end="245:30"><name pos:start="245:20" pos:end="245:25">strlen</name><argument_list pos:start="245:26" pos:end="245:30">(<argument pos:start="245:27" pos:end="245:29"><expr pos:start="245:27" pos:end="245:29"><name pos:start="245:27" pos:end="245:29">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="245:33" pos:end="245:57"><expr pos:start="245:33" pos:end="245:57"><sizeof pos:start="245:33" pos:end="245:43">sizeof<argument_list pos:start="245:39" pos:end="245:43">(<argument pos:start="245:40" pos:end="245:42"><expr pos:start="245:40" pos:end="245:42"><name pos:start="245:40" pos:end="245:42">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="245:45" pos:end="245:45">-</operator> <call pos:start="245:47" pos:end="245:57"><name pos:start="245:47" pos:end="245:52">strlen</name><argument_list pos:start="245:53" pos:end="245:57">(<argument pos:start="245:54" pos:end="245:56"><expr pos:start="245:54" pos:end="245:56"><name pos:start="245:54" pos:end="245:56">buf</name></expr></argument>)</argument_list></call></expr></argument>,

             <argument pos:start="247:14" pos:end="247:35"><expr pos:start="247:14" pos:end="247:35"><literal type="string" pos:start="247:14" pos:end="247:35">"%02d:%02d:%02d.%02d "</literal></expr></argument>, <argument pos:start="247:38" pos:end="247:42"><expr pos:start="247:38" pos:end="247:42"><name pos:start="247:38" pos:end="247:42">hours</name></expr></argument>, <argument pos:start="247:45" pos:end="247:48"><expr pos:start="247:45" pos:end="247:48"><name pos:start="247:45" pos:end="247:48">mins</name></expr></argument>, <argument pos:start="247:51" pos:end="247:54"><expr pos:start="247:51" pos:end="247:54"><name pos:start="247:51" pos:end="247:54">secs</name></expr></argument>,

             <argument pos:start="249:14" pos:end="249:38"><expr pos:start="249:14" pos:end="249:38"><operator pos:start="249:14" pos:end="249:14">(</operator><literal type="number" pos:start="249:15" pos:end="249:17">100</literal> <operator pos:start="249:19" pos:end="249:19">*</operator> <name pos:start="249:21" pos:end="249:22">us</name><operator pos:start="249:23" pos:end="249:23">)</operator> <operator pos:start="249:25" pos:end="249:25">/</operator> <name pos:start="249:27" pos:end="249:38">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="253:5" pos:end="265:5"><if pos:start="253:5" pos:end="259:5">if <condition pos:start="253:8" pos:end="253:20">(<expr pos:start="253:9" pos:end="253:19"><name pos:start="253:9" pos:end="253:15">bitrate</name> <operator pos:start="253:17" pos:end="253:17">&lt;</operator> <literal type="number" pos:start="253:19" pos:end="253:19">0</literal></expr>)</condition> <block pos:start="253:22" pos:end="259:5">{<block_content pos:start="255:9" pos:end="257:49">

        <expr_stmt pos:start="255:9" pos:end="255:77"><expr pos:start="255:9" pos:end="255:76"><call pos:start="255:9" pos:end="255:76"><name pos:start="255:9" pos:end="255:16">snprintf</name><argument_list pos:start="255:17" pos:end="255:76">(<argument pos:start="255:18" pos:end="255:34"><expr pos:start="255:18" pos:end="255:34"><name pos:start="255:18" pos:end="255:20">buf</name> <operator pos:start="255:22" pos:end="255:22">+</operator> <call pos:start="255:24" pos:end="255:34"><name pos:start="255:24" pos:end="255:29">strlen</name><argument_list pos:start="255:30" pos:end="255:34">(<argument pos:start="255:31" pos:end="255:33"><expr pos:start="255:31" pos:end="255:33"><name pos:start="255:31" pos:end="255:33">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="255:37" pos:end="255:61"><expr pos:start="255:37" pos:end="255:61"><sizeof pos:start="255:37" pos:end="255:47">sizeof<argument_list pos:start="255:43" pos:end="255:47">(<argument pos:start="255:44" pos:end="255:46"><expr pos:start="255:44" pos:end="255:46"><name pos:start="255:44" pos:end="255:46">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="255:49" pos:end="255:49">-</operator> <call pos:start="255:51" pos:end="255:61"><name pos:start="255:51" pos:end="255:56">strlen</name><argument_list pos:start="255:57" pos:end="255:61">(<argument pos:start="255:58" pos:end="255:60"><expr pos:start="255:58" pos:end="255:60"><name pos:start="255:58" pos:end="255:60">buf</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="255:63" pos:end="255:75"><expr pos:start="255:63" pos:end="255:75"><literal type="string" pos:start="255:63" pos:end="255:75">"bitrate=N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:49"><expr pos:start="257:9" pos:end="257:48"><call pos:start="257:9" pos:end="257:48"><name pos:start="257:9" pos:end="257:18">av_bprintf</name><argument_list pos:start="257:19" pos:end="257:48">(<argument pos:start="257:20" pos:end="257:30"><expr pos:start="257:20" pos:end="257:30"><operator pos:start="257:20" pos:end="257:20">&amp;</operator><name pos:start="257:21" pos:end="257:30">buf_script</name></expr></argument>, <argument pos:start="257:33" pos:end="257:47"><expr pos:start="257:33" pos:end="257:47"><literal type="string" pos:start="257:33" pos:end="257:47">"bitrate=N/A\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="259:6" pos:end="265:5">else<block pos:start="259:10" pos:end="265:5">{<block_content pos:start="261:9" pos:end="263:67">

        <expr_stmt pos:start="261:9" pos:end="261:95"><expr pos:start="261:9" pos:end="261:94"><call pos:start="261:9" pos:end="261:94"><name pos:start="261:9" pos:end="261:16">snprintf</name><argument_list pos:start="261:17" pos:end="261:94">(<argument pos:start="261:18" pos:end="261:34"><expr pos:start="261:18" pos:end="261:34"><name pos:start="261:18" pos:end="261:20">buf</name> <operator pos:start="261:22" pos:end="261:22">+</operator> <call pos:start="261:24" pos:end="261:34"><name pos:start="261:24" pos:end="261:29">strlen</name><argument_list pos:start="261:30" pos:end="261:34">(<argument pos:start="261:31" pos:end="261:33"><expr pos:start="261:31" pos:end="261:33"><name pos:start="261:31" pos:end="261:33">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="261:37" pos:end="261:61"><expr pos:start="261:37" pos:end="261:61"><sizeof pos:start="261:37" pos:end="261:47">sizeof<argument_list pos:start="261:43" pos:end="261:47">(<argument pos:start="261:44" pos:end="261:46"><expr pos:start="261:44" pos:end="261:46"><name pos:start="261:44" pos:end="261:46">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="261:49" pos:end="261:49">-</operator> <call pos:start="261:51" pos:end="261:61"><name pos:start="261:51" pos:end="261:56">strlen</name><argument_list pos:start="261:57" pos:end="261:61">(<argument pos:start="261:58" pos:end="261:60"><expr pos:start="261:58" pos:end="261:60"><name pos:start="261:58" pos:end="261:60">buf</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="261:63" pos:end="261:84"><expr pos:start="261:63" pos:end="261:84"><literal type="string" pos:start="261:63" pos:end="261:84">"bitrate=%6.1fkbits/s"</literal></expr></argument>, <argument pos:start="261:87" pos:end="261:93"><expr pos:start="261:87" pos:end="261:93"><name pos:start="261:87" pos:end="261:93">bitrate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="263:9" pos:end="263:67"><expr pos:start="263:9" pos:end="263:66"><call pos:start="263:9" pos:end="263:66"><name pos:start="263:9" pos:end="263:18">av_bprintf</name><argument_list pos:start="263:19" pos:end="263:66">(<argument pos:start="263:20" pos:end="263:30"><expr pos:start="263:20" pos:end="263:30"><operator pos:start="263:20" pos:end="263:20">&amp;</operator><name pos:start="263:21" pos:end="263:30">buf_script</name></expr></argument>, <argument pos:start="263:33" pos:end="263:56"><expr pos:start="263:33" pos:end="263:56"><literal type="string" pos:start="263:33" pos:end="263:56">"bitrate=%6.1fkbits/s\n"</literal></expr></argument>, <argument pos:start="263:59" pos:end="263:65"><expr pos:start="263:59" pos:end="263:65"><name pos:start="263:59" pos:end="263:65">bitrate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="269:5" pos:end="271:86"><if pos:start="269:5" pos:end="269:68">if <condition pos:start="269:8" pos:end="269:23">(<expr pos:start="269:9" pos:end="269:22"><name pos:start="269:9" pos:end="269:18">total_size</name> <operator pos:start="269:20" pos:end="269:20">&lt;</operator> <literal type="number" pos:start="269:22" pos:end="269:22">0</literal></expr>)</condition><block type="pseudo" pos:start="269:25" pos:end="269:68"><block_content pos:start="269:25" pos:end="269:68"> <expr_stmt pos:start="269:25" pos:end="269:68"><expr pos:start="269:25" pos:end="269:67"><call pos:start="269:25" pos:end="269:67"><name pos:start="269:25" pos:end="269:34">av_bprintf</name><argument_list pos:start="269:35" pos:end="269:67">(<argument pos:start="269:36" pos:end="269:46"><expr pos:start="269:36" pos:end="269:46"><operator pos:start="269:36" pos:end="269:36">&amp;</operator><name pos:start="269:37" pos:end="269:46">buf_script</name></expr></argument>, <argument pos:start="269:49" pos:end="269:66"><expr pos:start="269:49" pos:end="269:66"><literal type="string" pos:start="269:49" pos:end="269:66">"total_size=N/A\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="271:5" pos:end="271:86">else<block type="pseudo" pos:start="271:25" pos:end="271:86"><block_content pos:start="271:25" pos:end="271:86">                <expr_stmt pos:start="271:25" pos:end="271:86"><expr pos:start="271:25" pos:end="271:85"><call pos:start="271:25" pos:end="271:85"><name pos:start="271:25" pos:end="271:34">av_bprintf</name><argument_list pos:start="271:35" pos:end="271:85">(<argument pos:start="271:36" pos:end="271:46"><expr pos:start="271:36" pos:end="271:46"><operator pos:start="271:36" pos:end="271:36">&amp;</operator><name pos:start="271:37" pos:end="271:46">buf_script</name></expr></argument>, <argument pos:start="271:49" pos:end="271:72"><expr pos:start="271:49" pos:end="271:72"><literal type="string" pos:start="271:49" pos:end="271:62">"total_size=%"</literal><name pos:start="271:63" pos:end="271:68">PRId64</name><literal type="string" pos:start="271:69" pos:end="271:72">"\n"</literal></expr></argument>, <argument pos:start="271:75" pos:end="271:84"><expr pos:start="271:75" pos:end="271:84"><name pos:start="271:75" pos:end="271:84">total_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="273:5" pos:end="273:60"><expr pos:start="273:5" pos:end="273:59"><call pos:start="273:5" pos:end="273:59"><name pos:start="273:5" pos:end="273:14">av_bprintf</name><argument_list pos:start="273:15" pos:end="273:59">(<argument pos:start="273:16" pos:end="273:26"><expr pos:start="273:16" pos:end="273:26"><operator pos:start="273:16" pos:end="273:16">&amp;</operator><name pos:start="273:17" pos:end="273:26">buf_script</name></expr></argument>, <argument pos:start="273:29" pos:end="273:53"><expr pos:start="273:29" pos:end="273:53"><literal type="string" pos:start="273:29" pos:end="273:43">"out_time_ms=%"</literal><name pos:start="273:44" pos:end="273:49">PRId64</name><literal type="string" pos:start="273:50" pos:end="273:53">"\n"</literal></expr></argument>, <argument pos:start="273:56" pos:end="273:58"><expr pos:start="273:56" pos:end="273:58"><name pos:start="273:56" pos:end="273:58">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="275:5" pos:end="277:38"><expr pos:start="275:5" pos:end="277:37"><call pos:start="275:5" pos:end="277:37"><name pos:start="275:5" pos:end="275:14">av_bprintf</name><argument_list pos:start="275:15" pos:end="277:37">(<argument pos:start="275:16" pos:end="275:26"><expr pos:start="275:16" pos:end="275:26"><operator pos:start="275:16" pos:end="275:16">&amp;</operator><name pos:start="275:17" pos:end="275:26">buf_script</name></expr></argument>, <argument pos:start="275:29" pos:end="275:60"><expr pos:start="275:29" pos:end="275:60"><literal type="string" pos:start="275:29" pos:end="275:60">"out_time=%02d:%02d:%02d.%06d\n"</literal></expr></argument>,

               <argument pos:start="277:16" pos:end="277:20"><expr pos:start="277:16" pos:end="277:20"><name pos:start="277:16" pos:end="277:20">hours</name></expr></argument>, <argument pos:start="277:23" pos:end="277:26"><expr pos:start="277:23" pos:end="277:26"><name pos:start="277:23" pos:end="277:26">mins</name></expr></argument>, <argument pos:start="277:29" pos:end="277:32"><expr pos:start="277:29" pos:end="277:32"><name pos:start="277:29" pos:end="277:32">secs</name></expr></argument>, <argument pos:start="277:35" pos:end="277:36"><expr pos:start="277:35" pos:end="277:36"><name pos:start="277:35" pos:end="277:36">us</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="281:5" pos:end="285:47"><if pos:start="281:5" pos:end="285:47">if <condition pos:start="281:8" pos:end="281:40">(<expr pos:start="281:9" pos:end="281:39"><name pos:start="281:9" pos:end="281:21">nb_frames_dup</name> <operator pos:start="281:23" pos:end="281:24">||</operator> <name pos:start="281:26" pos:end="281:39">nb_frames_drop</name></expr>)</condition><block type="pseudo" pos:start="283:9" pos:end="285:47"><block_content pos:start="283:9" pos:end="285:47">

        <expr_stmt pos:start="283:9" pos:end="285:47"><expr pos:start="283:9" pos:end="285:46"><call pos:start="283:9" pos:end="285:46"><name pos:start="283:9" pos:end="283:16">snprintf</name><argument_list pos:start="283:17" pos:end="285:46">(<argument pos:start="283:18" pos:end="283:34"><expr pos:start="283:18" pos:end="283:34"><name pos:start="283:18" pos:end="283:20">buf</name> <operator pos:start="283:22" pos:end="283:22">+</operator> <call pos:start="283:24" pos:end="283:34"><name pos:start="283:24" pos:end="283:29">strlen</name><argument_list pos:start="283:30" pos:end="283:34">(<argument pos:start="283:31" pos:end="283:33"><expr pos:start="283:31" pos:end="283:33"><name pos:start="283:31" pos:end="283:33">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="283:37" pos:end="283:61"><expr pos:start="283:37" pos:end="283:61"><sizeof pos:start="283:37" pos:end="283:47">sizeof<argument_list pos:start="283:43" pos:end="283:47">(<argument pos:start="283:44" pos:end="283:46"><expr pos:start="283:44" pos:end="283:46"><name pos:start="283:44" pos:end="283:46">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="283:49" pos:end="283:49">-</operator> <call pos:start="283:51" pos:end="283:61"><name pos:start="283:51" pos:end="283:56">strlen</name><argument_list pos:start="283:57" pos:end="283:61">(<argument pos:start="283:58" pos:end="283:60"><expr pos:start="283:58" pos:end="283:60"><name pos:start="283:58" pos:end="283:60">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="283:64" pos:end="283:80"><expr pos:start="283:64" pos:end="283:80"><literal type="string" pos:start="283:64" pos:end="283:80">" dup=%d drop=%d"</literal></expr></argument>,

                <argument pos:start="285:17" pos:end="285:29"><expr pos:start="285:17" pos:end="285:29"><name pos:start="285:17" pos:end="285:29">nb_frames_dup</name></expr></argument>, <argument pos:start="285:32" pos:end="285:45"><expr pos:start="285:32" pos:end="285:45"><name pos:start="285:32" pos:end="285:45">nb_frames_drop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="287:5" pos:end="287:62"><expr pos:start="287:5" pos:end="287:61"><call pos:start="287:5" pos:end="287:61"><name pos:start="287:5" pos:end="287:14">av_bprintf</name><argument_list pos:start="287:15" pos:end="287:61">(<argument pos:start="287:16" pos:end="287:26"><expr pos:start="287:16" pos:end="287:26"><operator pos:start="287:16" pos:end="287:16">&amp;</operator><name pos:start="287:17" pos:end="287:26">buf_script</name></expr></argument>, <argument pos:start="287:29" pos:end="287:45"><expr pos:start="287:29" pos:end="287:45"><literal type="string" pos:start="287:29" pos:end="287:45">"dup_frames=%d\n"</literal></expr></argument>, <argument pos:start="287:48" pos:end="287:60"><expr pos:start="287:48" pos:end="287:60"><name pos:start="287:48" pos:end="287:60">nb_frames_dup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="289:5" pos:end="289:64"><expr pos:start="289:5" pos:end="289:63"><call pos:start="289:5" pos:end="289:63"><name pos:start="289:5" pos:end="289:14">av_bprintf</name><argument_list pos:start="289:15" pos:end="289:63">(<argument pos:start="289:16" pos:end="289:26"><expr pos:start="289:16" pos:end="289:26"><operator pos:start="289:16" pos:end="289:16">&amp;</operator><name pos:start="289:17" pos:end="289:26">buf_script</name></expr></argument>, <argument pos:start="289:29" pos:end="289:46"><expr pos:start="289:29" pos:end="289:46"><literal type="string" pos:start="289:29" pos:end="289:46">"drop_frames=%d\n"</literal></expr></argument>, <argument pos:start="289:49" pos:end="289:62"><expr pos:start="289:49" pos:end="289:62"><name pos:start="289:49" pos:end="289:62">nb_frames_drop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="293:5" pos:end="309:5"><if pos:start="293:5" pos:end="309:5">if <condition pos:start="293:8" pos:end="293:38">(<expr pos:start="293:9" pos:end="293:37"><name pos:start="293:9" pos:end="293:19">print_stats</name> <operator pos:start="293:21" pos:end="293:22">||</operator> <name pos:start="293:24" pos:end="293:37">is_last_report</name></expr>)</condition> <block pos:start="293:40" pos:end="309:5">{<block_content pos:start="295:9" pos:end="307:19">

        <decl_stmt pos:start="295:9" pos:end="295:54"><decl pos:start="295:9" pos:end="295:53"><type pos:start="295:9" pos:end="295:18"><specifier pos:start="295:9" pos:end="295:13">const</specifier> <name pos:start="295:15" pos:end="295:18">char</name></type> <name pos:start="295:20" pos:end="295:22">end</name> <init pos:start="295:24" pos:end="295:53">= <expr pos:start="295:26" pos:end="295:53"><ternary pos:start="295:26" pos:end="295:53"><condition pos:start="295:26" pos:end="295:41"><expr pos:start="295:26" pos:end="295:39"><name pos:start="295:26" pos:end="295:39">is_last_report</name></expr> ?</condition><then pos:start="295:43" pos:end="295:46"> <expr pos:start="295:43" pos:end="295:46"><literal type="char" pos:start="295:43" pos:end="295:46">'\n'</literal></expr> </then><else pos:start="295:48" pos:end="295:53">: <expr pos:start="295:50" pos:end="295:53"><literal type="char" pos:start="295:50" pos:end="295:53">'\r'</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="297:9" pos:end="303:60"><if pos:start="297:9" pos:end="301:9">if <condition pos:start="297:12" pos:end="297:63">(<expr pos:start="297:13" pos:end="297:62"><name pos:start="297:13" pos:end="297:23">print_stats</name><operator pos:start="297:24" pos:end="297:25">==</operator><literal type="number" pos:start="297:26" pos:end="297:26">1</literal> <operator pos:start="297:28" pos:end="297:29">&amp;&amp;</operator> <name pos:start="297:31" pos:end="297:41">AV_LOG_INFO</name> <operator pos:start="297:43" pos:end="297:43">&gt;</operator> <call pos:start="297:45" pos:end="297:62"><name pos:start="297:45" pos:end="297:60">av_log_get_level</name><argument_list pos:start="297:61" pos:end="297:62">()</argument_list></call></expr>)</condition> <block pos:start="297:65" pos:end="301:9">{<block_content pos:start="299:13" pos:end="299:50">

            <expr_stmt pos:start="299:13" pos:end="299:50"><expr pos:start="299:13" pos:end="299:49"><call pos:start="299:13" pos:end="299:49"><name pos:start="299:13" pos:end="299:19">fprintf</name><argument_list pos:start="299:20" pos:end="299:49">(<argument pos:start="299:21" pos:end="299:26"><expr pos:start="299:21" pos:end="299:26"><name pos:start="299:21" pos:end="299:26">stderr</name></expr></argument>, <argument pos:start="299:29" pos:end="299:38"><expr pos:start="299:29" pos:end="299:38"><literal type="string" pos:start="299:29" pos:end="299:38">"%s    %c"</literal></expr></argument>, <argument pos:start="299:41" pos:end="299:43"><expr pos:start="299:41" pos:end="299:43"><name pos:start="299:41" pos:end="299:43">buf</name></expr></argument>, <argument pos:start="299:46" pos:end="299:48"><expr pos:start="299:46" pos:end="299:48"><name pos:start="299:46" pos:end="299:48">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="301:11" pos:end="303:60">else<block type="pseudo" pos:start="303:13" pos:end="303:60"><block_content pos:start="303:13" pos:end="303:60">

            <expr_stmt pos:start="303:13" pos:end="303:60"><expr pos:start="303:13" pos:end="303:59"><call pos:start="303:13" pos:end="303:59"><name pos:start="303:13" pos:end="303:18">av_log</name><argument_list pos:start="303:19" pos:end="303:59">(<argument pos:start="303:20" pos:end="303:23"><expr pos:start="303:20" pos:end="303:23"><name pos:start="303:20" pos:end="303:23">NULL</name></expr></argument>, <argument pos:start="303:26" pos:end="303:36"><expr pos:start="303:26" pos:end="303:36"><name pos:start="303:26" pos:end="303:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="303:39" pos:end="303:48"><expr pos:start="303:39" pos:end="303:48"><literal type="string" pos:start="303:39" pos:end="303:48">"%s    %c"</literal></expr></argument>, <argument pos:start="303:51" pos:end="303:53"><expr pos:start="303:51" pos:end="303:53"><name pos:start="303:51" pos:end="303:53">buf</name></expr></argument>, <argument pos:start="303:56" pos:end="303:58"><expr pos:start="303:56" pos:end="303:58"><name pos:start="303:56" pos:end="303:58">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="307:5" pos:end="307:19"><expr pos:start="307:5" pos:end="307:18"><call pos:start="307:5" pos:end="307:18"><name pos:start="307:5" pos:end="307:10">fflush</name><argument_list pos:start="307:11" pos:end="307:18">(<argument pos:start="307:12" pos:end="307:17"><expr pos:start="307:12" pos:end="307:17"><name pos:start="307:12" pos:end="307:17">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="313:5" pos:end="333:5"><if pos:start="313:5" pos:end="333:5">if <condition pos:start="313:8" pos:end="313:22">(<expr pos:start="313:9" pos:end="313:21"><name pos:start="313:9" pos:end="313:21">progress_avio</name></expr>)</condition> <block pos:start="313:24" pos:end="333:5">{<block_content pos:start="315:9" pos:end="331:9">

        <expr_stmt pos:start="315:9" pos:end="317:56"><expr pos:start="315:9" pos:end="317:55"><call pos:start="315:9" pos:end="317:55"><name pos:start="315:9" pos:end="315:18">av_bprintf</name><argument_list pos:start="315:19" pos:end="317:55">(<argument pos:start="315:20" pos:end="315:30"><expr pos:start="315:20" pos:end="315:30"><operator pos:start="315:20" pos:end="315:20">&amp;</operator><name pos:start="315:21" pos:end="315:30">buf_script</name></expr></argument>, <argument pos:start="315:33" pos:end="315:47"><expr pos:start="315:33" pos:end="315:47"><literal type="string" pos:start="315:33" pos:end="315:47">"progress=%s\n"</literal></expr></argument>,

                   <argument pos:start="317:20" pos:end="317:54"><expr pos:start="317:20" pos:end="317:54"><ternary pos:start="317:20" pos:end="317:54"><condition pos:start="317:20" pos:end="317:35"><expr pos:start="317:20" pos:end="317:33"><name pos:start="317:20" pos:end="317:33">is_last_report</name></expr> ?</condition><then pos:start="317:37" pos:end="317:41"> <expr pos:start="317:37" pos:end="317:41"><literal type="string" pos:start="317:37" pos:end="317:41">"end"</literal></expr> </then><else pos:start="317:43" pos:end="317:54">: <expr pos:start="317:45" pos:end="317:54"><literal type="string" pos:start="317:45" pos:end="317:54">"continue"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="319:9" pos:end="321:63"><expr pos:start="319:9" pos:end="321:62"><call pos:start="319:9" pos:end="321:62"><name pos:start="319:9" pos:end="319:18">avio_write</name><argument_list pos:start="319:19" pos:end="321:62">(<argument pos:start="319:20" pos:end="319:32"><expr pos:start="319:20" pos:end="319:32"><name pos:start="319:20" pos:end="319:32">progress_avio</name></expr></argument>, <argument pos:start="319:35" pos:end="319:48"><expr pos:start="319:35" pos:end="319:48"><name pos:start="319:35" pos:end="319:48"><name pos:start="319:35" pos:end="319:44">buf_script</name><operator pos:start="319:45" pos:end="319:45">.</operator><name pos:start="319:46" pos:end="319:48">str</name></name></expr></argument>,

                   <argument pos:start="321:20" pos:end="321:61"><expr pos:start="321:20" pos:end="321:61"><call pos:start="321:20" pos:end="321:61"><name pos:start="321:20" pos:end="321:24">FFMIN</name><argument_list pos:start="321:25" pos:end="321:61">(<argument pos:start="321:26" pos:end="321:39"><expr pos:start="321:26" pos:end="321:39"><name pos:start="321:26" pos:end="321:39"><name pos:start="321:26" pos:end="321:35">buf_script</name><operator pos:start="321:36" pos:end="321:36">.</operator><name pos:start="321:37" pos:end="321:39">len</name></name></expr></argument>, <argument pos:start="321:42" pos:end="321:60"><expr pos:start="321:42" pos:end="321:60"><name pos:start="321:42" pos:end="321:56"><name pos:start="321:42" pos:end="321:51">buf_script</name><operator pos:start="321:52" pos:end="321:52">.</operator><name pos:start="321:53" pos:end="321:56">size</name></name> <operator pos:start="321:58" pos:end="321:58">-</operator> <literal type="number" pos:start="321:60" pos:end="321:60">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="323:9" pos:end="323:34"><expr pos:start="323:9" pos:end="323:33"><call pos:start="323:9" pos:end="323:33"><name pos:start="323:9" pos:end="323:18">avio_flush</name><argument_list pos:start="323:19" pos:end="323:33">(<argument pos:start="323:20" pos:end="323:32"><expr pos:start="323:20" pos:end="323:32"><name pos:start="323:20" pos:end="323:32">progress_avio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="325:9" pos:end="325:46"><expr pos:start="325:9" pos:end="325:45"><call pos:start="325:9" pos:end="325:45"><name pos:start="325:9" pos:end="325:26">av_bprint_finalize</name><argument_list pos:start="325:27" pos:end="325:45">(<argument pos:start="325:28" pos:end="325:38"><expr pos:start="325:28" pos:end="325:38"><operator pos:start="325:28" pos:end="325:28">&amp;</operator><name pos:start="325:29" pos:end="325:38">buf_script</name></expr></argument>, <argument pos:start="325:41" pos:end="325:44"><expr pos:start="325:41" pos:end="325:44"><name pos:start="325:41" pos:end="325:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="327:9" pos:end="331:9"><if pos:start="327:9" pos:end="331:9">if <condition pos:start="327:12" pos:end="327:27">(<expr pos:start="327:13" pos:end="327:26"><name pos:start="327:13" pos:end="327:26">is_last_report</name></expr>)</condition> <block pos:start="327:29" pos:end="331:9">{<block_content pos:start="329:13" pos:end="329:40">

            <expr_stmt pos:start="329:13" pos:end="329:40"><expr pos:start="329:13" pos:end="329:39"><call pos:start="329:13" pos:end="329:39"><name pos:start="329:13" pos:end="329:23">avio_closep</name><argument_list pos:start="329:24" pos:end="329:39">(<argument pos:start="329:25" pos:end="329:38"><expr pos:start="329:25" pos:end="329:38"><operator pos:start="329:25" pos:end="329:25">&amp;</operator><name pos:start="329:26" pos:end="329:38">progress_avio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="337:5" pos:end="339:38"><if pos:start="337:5" pos:end="339:38">if <condition pos:start="337:8" pos:end="337:23">(<expr pos:start="337:9" pos:end="337:22"><name pos:start="337:9" pos:end="337:22">is_last_report</name></expr>)</condition><block type="pseudo" pos:start="339:9" pos:end="339:38"><block_content pos:start="339:9" pos:end="339:38">

        <expr_stmt pos:start="339:9" pos:end="339:38"><expr pos:start="339:9" pos:end="339:37"><call pos:start="339:9" pos:end="339:37"><name pos:start="339:9" pos:end="339:25">print_final_stats</name><argument_list pos:start="339:26" pos:end="339:37">(<argument pos:start="339:27" pos:end="339:36"><expr pos:start="339:27" pos:end="339:36"><name pos:start="339:27" pos:end="339:36">total_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
