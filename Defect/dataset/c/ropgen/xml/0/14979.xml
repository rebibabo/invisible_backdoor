<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14979.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">omap_wd_timer_write</name><parameter_list pos:start="1:32" pos:end="3:62">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:69"><decl pos:start="1:47" pos:end="1:69"><type pos:start="1:47" pos:end="1:69"><name pos:start="1:47" pos:end="1:64">target_phys_addr_t</name></type> <name pos:start="1:66" pos:end="1:69">addr</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:46"><decl pos:start="3:33" pos:end="3:46"><type pos:start="3:33" pos:end="3:46"><name pos:start="3:33" pos:end="3:40">uint64_t</name></type> <name pos:start="3:42" pos:end="3:46">value</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:61"><decl pos:start="3:49" pos:end="3:61"><type pos:start="3:49" pos:end="3:61"><name pos:start="3:49" pos:end="3:56">unsigned</name></type> <name pos:start="3:58" pos:end="3:61">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:5">

    <decl_stmt pos:start="7:5" pos:end="7:78"><decl pos:start="7:5" pos:end="7:77"><type pos:start="7:5" pos:end="7:34"><name pos:start="7:5" pos:end="7:32"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:32">omap_watchdog_timer_s</name></name> <modifier pos:start="7:34" pos:end="7:34">*</modifier></type><name pos:start="7:35" pos:end="7:35">s</name> <init pos:start="7:37" pos:end="7:77">= <expr pos:start="7:39" pos:end="7:77"><operator pos:start="7:39" pos:end="7:39">(</operator>struct <name pos:start="7:47" pos:end="7:67">omap_watchdog_timer_s</name> <operator pos:start="7:69" pos:end="7:69">*</operator><operator pos:start="7:70" pos:end="7:70">)</operator> <name pos:start="7:72" pos:end="7:77">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:18">(<expr pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:12">size</name> <operator pos:start="11:14" pos:end="11:15">!=</operator> <literal type="number" pos:start="11:17" pos:end="11:17">2</literal></expr>)</condition> <block pos:start="11:20" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:58">

        <return pos:start="13:9" pos:end="13:58">return <expr pos:start="13:16" pos:end="13:57"><call pos:start="13:16" pos:end="13:57"><name pos:start="13:16" pos:end="13:36">omap_badwidth_write16</name><argument_list pos:start="13:37" pos:end="13:57">(<argument pos:start="13:38" pos:end="13:43"><expr pos:start="13:38" pos:end="13:43"><name pos:start="13:38" pos:end="13:43">opaque</name></expr></argument>, <argument pos:start="13:46" pos:end="13:49"><expr pos:start="13:46" pos:end="13:49"><name pos:start="13:46" pos:end="13:49">addr</name></expr></argument>, <argument pos:start="13:52" pos:end="13:56"><expr pos:start="13:52" pos:end="13:56"><name pos:start="13:52" pos:end="13:56">value</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="19:5" pos:end="91:5">switch <condition pos:start="19:12" pos:end="19:17">(<expr pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:16">addr</name></expr>)</condition> <block pos:start="19:19" pos:end="91:5">{<block_content pos:start="21:5" pos:end="89:27">

    <case pos:start="21:5" pos:end="21:14">case <expr pos:start="21:10" pos:end="21:13"><literal type="number" pos:start="21:10" pos:end="21:13">0x00</literal></expr>:</case>	<comment type="block" pos:start="21:17" pos:end="21:32">/* CNTL_TIMER */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:35"><expr pos:start="23:9" pos:end="23:34"><call pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:23">omap_timer_sync</name><argument_list pos:start="23:24" pos:end="23:34">(<argument pos:start="23:25" pos:end="23:33"><expr pos:start="23:25" pos:end="23:33"><operator pos:start="23:25" pos:end="23:25">&amp;</operator><name pos:start="23:26" pos:end="23:33"><name pos:start="23:26" pos:end="23:26">s</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:33">timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:40"><expr pos:start="25:9" pos:end="25:39"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:16">timer</name><operator pos:start="25:17" pos:end="25:17">.</operator><name pos:start="25:18" pos:end="25:20">ptv</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <operator pos:start="25:24" pos:end="25:24">(</operator><name pos:start="25:25" pos:end="25:29">value</name> <operator pos:start="25:31" pos:end="25:32">&gt;&gt;</operator> <literal type="number" pos:start="25:34" pos:end="25:34">9</literal><operator pos:start="25:35" pos:end="25:35">)</operator> <operator pos:start="25:37" pos:end="25:37">&amp;</operator> <literal type="number" pos:start="25:39" pos:end="25:39">7</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:39"><expr pos:start="27:9" pos:end="27:38"><name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:16">timer</name><operator pos:start="27:17" pos:end="27:17">.</operator><name pos:start="27:18" pos:end="27:19">ar</name></name> <operator pos:start="27:21" pos:end="27:21">=</operator> <operator pos:start="27:23" pos:end="27:23">(</operator><name pos:start="27:24" pos:end="27:28">value</name> <operator pos:start="27:30" pos:end="27:31">&gt;&gt;</operator> <literal type="number" pos:start="27:33" pos:end="27:33">8</literal><operator pos:start="27:34" pos:end="27:34">)</operator> <operator pos:start="27:36" pos:end="27:36">&amp;</operator> <literal type="number" pos:start="27:38" pos:end="27:38">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:39"><expr pos:start="29:9" pos:end="29:38"><name pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:16">timer</name><operator pos:start="29:17" pos:end="29:17">.</operator><name pos:start="29:18" pos:end="29:19">st</name></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <operator pos:start="29:23" pos:end="29:23">(</operator><name pos:start="29:24" pos:end="29:28">value</name> <operator pos:start="29:30" pos:end="29:31">&gt;&gt;</operator> <literal type="number" pos:start="29:33" pos:end="29:33">7</literal><operator pos:start="29:34" pos:end="29:34">)</operator> <operator pos:start="29:36" pos:end="29:36">&amp;</operator> <literal type="number" pos:start="29:38" pos:end="29:38">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:35"><expr pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:15">free</name></name> <operator pos:start="31:17" pos:end="31:17">=</operator> <operator pos:start="31:19" pos:end="31:19">(</operator><name pos:start="31:20" pos:end="31:24">value</name> <operator pos:start="31:26" pos:end="31:27">&gt;&gt;</operator> <literal type="number" pos:start="31:29" pos:end="31:29">1</literal><operator pos:start="31:30" pos:end="31:30">)</operator> <operator pos:start="31:32" pos:end="31:32">&amp;</operator> <literal type="number" pos:start="31:34" pos:end="31:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:37"><expr pos:start="33:9" pos:end="33:36"><call pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:25">omap_timer_update</name><argument_list pos:start="33:26" pos:end="33:36">(<argument pos:start="33:27" pos:end="33:35"><expr pos:start="33:27" pos:end="33:35"><operator pos:start="33:27" pos:end="33:27">&amp;</operator><name pos:start="33:28" pos:end="33:35"><name pos:start="33:28" pos:end="33:28">s</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:35">timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>



    <case pos:start="39:5" pos:end="39:14">case <expr pos:start="39:10" pos:end="39:13"><literal type="number" pos:start="39:10" pos:end="39:13">0x04</literal></expr>:</case>	<comment type="block" pos:start="39:17" pos:end="39:32">/* LOAD_TIMER */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:44"><expr pos:start="41:9" pos:end="41:43"><name pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:16">timer</name><operator pos:start="41:17" pos:end="41:17">.</operator><name pos:start="41:18" pos:end="41:26">reset_val</name></name> <operator pos:start="41:28" pos:end="41:28">=</operator> <name pos:start="41:30" pos:end="41:34">value</name> <operator pos:start="41:36" pos:end="41:36">&amp;</operator> <literal type="number" pos:start="41:38" pos:end="41:43">0xffff</literal></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>



    <case pos:start="47:5" pos:end="47:14">case <expr pos:start="47:10" pos:end="47:13"><literal type="number" pos:start="47:10" pos:end="47:13">0x08</literal></expr>:</case>	<comment type="block" pos:start="47:17" pos:end="47:32">/* TIMER_MODE */</comment>

        <if_stmt pos:start="49:9" pos:end="51:39"><if pos:start="49:9" pos:end="51:39">if <condition pos:start="49:12" pos:end="49:44">(<expr pos:start="49:13" pos:end="49:43"><operator pos:start="49:13" pos:end="49:13">!</operator><name pos:start="49:14" pos:end="49:20"><name pos:start="49:14" pos:end="49:14">s</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:20">mode</name></name> <operator pos:start="49:22" pos:end="49:23">&amp;&amp;</operator> <operator pos:start="49:25" pos:end="49:25">(</operator><operator pos:start="49:26" pos:end="49:26">(</operator><name pos:start="49:27" pos:end="49:31">value</name> <operator pos:start="49:33" pos:end="49:34">&gt;&gt;</operator> <literal type="number" pos:start="49:36" pos:end="49:37">15</literal><operator pos:start="49:38" pos:end="49:38">)</operator> <operator pos:start="49:40" pos:end="49:40">&amp;</operator> <literal type="number" pos:start="49:42" pos:end="49:42">1</literal><operator pos:start="49:43" pos:end="49:43">)</operator></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:39"><block_content pos:start="51:13" pos:end="51:39">

            <expr_stmt pos:start="51:13" pos:end="51:39"><expr pos:start="51:13" pos:end="51:38"><call pos:start="51:13" pos:end="51:38"><name pos:start="51:13" pos:end="51:24">omap_clk_get</name><argument_list pos:start="51:25" pos:end="51:38">(<argument pos:start="51:26" pos:end="51:37"><expr pos:start="51:26" pos:end="51:37"><name pos:start="51:26" pos:end="51:37"><name pos:start="51:26" pos:end="51:26">s</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:33">timer</name><operator pos:start="51:34" pos:end="51:34">.</operator><name pos:start="51:35" pos:end="51:37">clk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:37"><expr pos:start="53:9" pos:end="53:36"><name pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:15">mode</name></name> <operator pos:start="53:17" pos:end="53:18">|=</operator> <operator pos:start="53:20" pos:end="53:20">(</operator><name pos:start="53:21" pos:end="53:25">value</name> <operator pos:start="53:27" pos:end="53:28">&gt;&gt;</operator> <literal type="number" pos:start="53:30" pos:end="53:31">15</literal><operator pos:start="53:32" pos:end="53:32">)</operator> <operator pos:start="53:34" pos:end="53:34">&amp;</operator> <literal type="number" pos:start="53:36" pos:end="53:36">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="79:9"><if pos:start="55:9" pos:end="79:9">if <condition pos:start="55:12" pos:end="55:31">(<expr pos:start="55:13" pos:end="55:30"><name pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:22">last_wr</name></name> <operator pos:start="55:24" pos:end="55:25">==</operator> <literal type="number" pos:start="55:27" pos:end="55:30">0xf5</literal></expr>)</condition> <block pos:start="55:33" pos:end="79:9">{<block_content pos:start="57:13" pos:end="77:13">

            <if_stmt pos:start="57:13" pos:end="77:13"><if pos:start="57:13" pos:end="67:13">if <condition pos:start="57:16" pos:end="57:39">(<expr pos:start="57:17" pos:end="57:38"><operator pos:start="57:17" pos:end="57:17">(</operator><name pos:start="57:18" pos:end="57:22">value</name> <operator pos:start="57:24" pos:end="57:24">&amp;</operator> <literal type="number" pos:start="57:26" pos:end="57:29">0xff</literal><operator pos:start="57:30" pos:end="57:30">)</operator> <operator pos:start="57:32" pos:end="57:33">==</operator> <literal type="number" pos:start="57:35" pos:end="57:38">0xa0</literal></expr>)</condition> <block pos:start="57:41" pos:end="67:13">{<block_content pos:start="59:17" pos:end="65:17">

                <if_stmt pos:start="59:17" pos:end="65:17"><if pos:start="59:17" pos:end="65:17">if <condition pos:start="59:20" pos:end="59:28">(<expr pos:start="59:21" pos:end="59:27"><name pos:start="59:21" pos:end="59:27"><name pos:start="59:21" pos:end="59:21">s</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:27">mode</name></name></expr>)</condition> <block pos:start="59:30" pos:end="65:17">{<block_content pos:start="61:21" pos:end="63:47">

                    <expr_stmt pos:start="61:21" pos:end="61:32"><expr pos:start="61:21" pos:end="61:31"><name pos:start="61:21" pos:end="61:27"><name pos:start="61:21" pos:end="61:21">s</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:27">mode</name></name> <operator pos:start="61:29" pos:end="61:29">=</operator> <literal type="number" pos:start="61:31" pos:end="61:31">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="63:21" pos:end="63:47"><expr pos:start="63:21" pos:end="63:46"><call pos:start="63:21" pos:end="63:46"><name pos:start="63:21" pos:end="63:32">omap_clk_put</name><argument_list pos:start="63:33" pos:end="63:46">(<argument pos:start="63:34" pos:end="63:45"><expr pos:start="63:34" pos:end="63:45"><name pos:start="63:34" pos:end="63:45"><name pos:start="63:34" pos:end="63:34">s</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:41">timer</name><operator pos:start="63:42" pos:end="63:42">.</operator><name pos:start="63:43" pos:end="63:45">clk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="67:15" pos:end="77:13">else <block pos:start="67:20" pos:end="77:13">{<block_content pos:start="73:17" pos:end="75:44">

                <comment type="block" pos:start="69:17" pos:end="71:56">/* XXX: on T|E hardware somehow this has no effect,

                 * on Zire 71 it works as specified.  */</comment>

                <expr_stmt pos:start="73:17" pos:end="73:29"><expr pos:start="73:17" pos:end="73:28"><name pos:start="73:17" pos:end="73:24"><name pos:start="73:17" pos:end="73:17">s</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:24">reset</name></name> <operator pos:start="73:26" pos:end="73:26">=</operator> <literal type="number" pos:start="73:28" pos:end="73:28">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:44"><expr pos:start="75:17" pos:end="75:43"><call pos:start="75:17" pos:end="75:43"><name pos:start="75:17" pos:end="75:41">qemu_system_reset_request</name><argument_list pos:start="75:42" pos:end="75:43">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:34"><expr pos:start="81:9" pos:end="81:33"><name pos:start="81:9" pos:end="81:18"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:18">last_wr</name></name> <operator pos:start="81:20" pos:end="81:20">=</operator> <name pos:start="81:22" pos:end="81:26">value</name> <operator pos:start="81:28" pos:end="81:28">&amp;</operator> <literal type="number" pos:start="81:30" pos:end="81:33">0xff</literal></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>



    <default pos:start="87:5" pos:end="87:12">default:</default>

        <expr_stmt pos:start="89:9" pos:end="89:27"><expr pos:start="89:9" pos:end="89:26"><call pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:20">OMAP_BAD_REG</name><argument_list pos:start="89:21" pos:end="89:26">(<argument pos:start="89:22" pos:end="89:25"><expr pos:start="89:22" pos:end="89:25"><name pos:start="89:22" pos:end="89:25">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
