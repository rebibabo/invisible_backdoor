<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4560.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:30">lance_mem_read</name><parameter_list pos:start="1:31" pos:end="3:45">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:68"><decl pos:start="1:46" pos:end="1:68"><type pos:start="1:46" pos:end="1:68"><name pos:start="1:46" pos:end="1:63">target_phys_addr_t</name></type> <name pos:start="1:65" pos:end="1:68">addr</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:44"><decl pos:start="3:32" pos:end="3:44"><type pos:start="3:32" pos:end="3:44"><name pos:start="3:32" pos:end="3:39">unsigned</name></type> <name pos:start="3:41" pos:end="3:44">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="19:1">{<block_content pos:start="7:5" pos:end="17:24">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">SysBusPCNetState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:23">d</name> <init pos:start="7:25" pos:end="7:32">= <expr pos:start="7:27" pos:end="7:32"><name pos:start="7:27" pos:end="7:32">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">val</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:46"><expr pos:start="13:5" pos:end="13:45"><name pos:start="13:5" pos:end="13:7">val</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:45"><name pos:start="13:11" pos:end="13:28">pcnet_ioport_readw</name><argument_list pos:start="13:29" pos:end="13:45">(<argument pos:start="13:30" pos:end="13:38"><expr pos:start="13:30" pos:end="13:38"><operator pos:start="13:30" pos:end="13:30">&amp;</operator><name pos:start="13:31" pos:end="13:38"><name pos:start="13:31" pos:end="13:31">d</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:38">state</name></name></expr></argument>, <argument pos:start="13:41" pos:end="13:44"><expr pos:start="13:41" pos:end="13:44"><name pos:start="13:41" pos:end="13:44">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:46"><expr pos:start="15:5" pos:end="15:45"><call pos:start="15:5" pos:end="15:45"><name pos:start="15:5" pos:end="15:25">trace_lance_mem_readw</name><argument_list pos:start="15:26" pos:end="15:45">(<argument pos:start="15:27" pos:end="15:30"><expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:30">addr</name></expr></argument>, <argument pos:start="15:33" pos:end="15:44"><expr pos:start="15:33" pos:end="15:44"><name pos:start="15:33" pos:end="15:35">val</name> <operator pos:start="15:37" pos:end="15:37">&amp;</operator> <literal type="number" pos:start="15:39" pos:end="15:44">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="17:5" pos:end="17:24">return <expr pos:start="17:12" pos:end="17:23"><name pos:start="17:12" pos:end="17:14">val</name> <operator pos:start="17:16" pos:end="17:16">&amp;</operator> <literal type="number" pos:start="17:18" pos:end="17:23">0xffff</literal></expr>;</return>

</block_content>}</block></function>
</unit>
