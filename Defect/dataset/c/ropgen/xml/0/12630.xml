<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12630.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">cpu_dump_statistics</name> <parameter_list pos:start="1:26" pos:end="5:36">(<parameter pos:start="1:27" pos:end="1:39"><decl pos:start="1:27" pos:end="1:39"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:34">CPUState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">env</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:47"><decl pos:start="1:42" pos:end="1:47"><type pos:start="1:42" pos:end="1:47"><name pos:start="1:42" pos:end="1:45">FILE</name><modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">f</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:75"><function_decl pos:start="3:27" pos:end="3:75"><type pos:start="3:27" pos:end="3:29"><name pos:start="3:27" pos:end="3:29">int</name></type> (<modifier pos:start="3:32" pos:end="3:32">*</modifier><name pos:start="3:33" pos:end="3:43">cpu_fprintf</name>)<parameter_list pos:start="3:45" pos:end="3:75">(<parameter pos:start="3:46" pos:end="3:52"><decl pos:start="3:46" pos:end="3:52"><type pos:start="3:46" pos:end="3:52"><name pos:start="3:46" pos:end="3:49">FILE</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:52">f</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:69"><decl pos:start="3:55" pos:end="3:69"><type pos:start="3:55" pos:end="3:69"><specifier pos:start="3:55" pos:end="3:59">const</specifier> <name pos:start="3:61" pos:end="3:64">char</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:69">fmt</name></decl></parameter>, <parameter pos:start="3:72" pos:end="3:74"><decl pos:start="3:72" pos:end="3:74"><type pos:start="3:72" pos:end="3:74"><modifier pos:start="3:72" pos:end="3:74">...</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:35"><decl pos:start="5:27" pos:end="5:35"><type pos:start="5:27" pos:end="5:35"><name pos:start="5:27" pos:end="5:29">int</name></type> <name pos:start="5:31" pos:end="5:35">flags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="93:1">{<block_content pos:start="11:5" pos:end="92:0">

<cpp:if pos:start="9:1" pos:end="9:30">#<cpp:directive pos:start="9:2" pos:end="9:3">if</cpp:directive> <expr pos:start="9:5" pos:end="9:30"><call pos:start="9:5" pos:end="9:30"><name pos:start="9:5" pos:end="9:11">defined</name><argument_list pos:start="9:12" pos:end="9:30">(<argument pos:start="9:13" pos:end="9:29"><expr pos:start="9:13" pos:end="9:29"><name pos:start="9:13" pos:end="9:29">DO_PPC_STATISTICS</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:17">opc_handler_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier><modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:22">t1</name></decl>, <decl pos:start="11:25" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:20"><modifier pos:start="11:25" pos:end="11:25">*</modifier><modifier pos:start="11:26" pos:end="11:26">*</modifier></type><name pos:start="11:27" pos:end="11:28">t2</name></decl>, <decl pos:start="11:31" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:20"><modifier pos:start="11:31" pos:end="11:31">*</modifier><modifier pos:start="11:32" pos:end="11:32">*</modifier></type><name pos:start="11:33" pos:end="11:34">t3</name></decl>, <decl pos:start="11:37" pos:end="11:44"><type ref="prev" pos:start="11:5" pos:end="11:20"><modifier pos:start="11:37" pos:end="11:37">*</modifier></type><name pos:start="11:38" pos:end="11:44">handler</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">op1</name></decl>, <decl pos:start="13:14" pos:end="13:16"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:16">op2</name></decl>, <decl pos:start="13:19" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:21">op3</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:6">t1</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <name pos:start="17:10" pos:end="17:21"><name pos:start="17:10" pos:end="17:12">env</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:21">opcodes</name></name></expr>;</expr_stmt>

    <for pos:start="19:5" pos:end="92:0">for <control pos:start="19:9" pos:end="19:34">(<init pos:start="19:10" pos:end="19:17"><expr pos:start="19:10" pos:end="19:16"><name pos:start="19:10" pos:end="19:12">op1</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</init> <condition pos:start="19:19" pos:end="19:27"><expr pos:start="19:19" pos:end="19:26"><name pos:start="19:19" pos:end="19:21">op1</name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <literal type="number" pos:start="19:25" pos:end="19:26">64</literal></expr>;</condition> <incr pos:start="19:29" pos:end="19:33"><expr pos:start="19:29" pos:end="19:33"><name pos:start="19:29" pos:end="19:31">op1</name><operator pos:start="19:32" pos:end="19:33">++</operator></expr></incr>)</control> <block pos:start="19:36" pos:end="92:0">{<block_content pos:start="21:9" pos:end="87:9">

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:15">handler</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <name pos:start="21:19" pos:end="21:25"><name pos:start="21:19" pos:end="21:20">t1</name><index pos:start="21:21" pos:end="21:25">[<expr pos:start="21:22" pos:end="21:24"><name pos:start="21:22" pos:end="21:24">op1</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="87:9"><if pos:start="23:9" pos:end="73:9">if <condition pos:start="23:12" pos:end="23:40">(<expr pos:start="23:13" pos:end="23:39"><call pos:start="23:13" pos:end="23:39"><name pos:start="23:13" pos:end="23:30">is_indirect_opcode</name><argument_list pos:start="23:31" pos:end="23:39">(<argument pos:start="23:32" pos:end="23:38"><expr pos:start="23:32" pos:end="23:38"><name pos:start="23:32" pos:end="23:38">handler</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:42" pos:end="73:9">{<block_content pos:start="25:13" pos:end="71:13">

            <expr_stmt pos:start="25:13" pos:end="25:36"><expr pos:start="25:13" pos:end="25:35"><name pos:start="25:13" pos:end="25:14">t2</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <call pos:start="25:18" pos:end="25:35"><name pos:start="25:18" pos:end="25:26">ind_table</name><argument_list pos:start="25:27" pos:end="25:35">(<argument pos:start="25:28" pos:end="25:34"><expr pos:start="25:28" pos:end="25:34"><name pos:start="25:28" pos:end="25:34">handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="27:13" pos:end="71:13">for <control pos:start="27:17" pos:end="27:42">(<init pos:start="27:18" pos:end="27:25"><expr pos:start="27:18" pos:end="27:24"><name pos:start="27:18" pos:end="27:20">op2</name> <operator pos:start="27:22" pos:end="27:22">=</operator> <literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr>;</init> <condition pos:start="27:27" pos:end="27:35"><expr pos:start="27:27" pos:end="27:34"><name pos:start="27:27" pos:end="27:29">op2</name> <operator pos:start="27:31" pos:end="27:31">&lt;</operator> <literal type="number" pos:start="27:33" pos:end="27:34">32</literal></expr>;</condition> <incr pos:start="27:37" pos:end="27:41"><expr pos:start="27:37" pos:end="27:41"><name pos:start="27:37" pos:end="27:39">op2</name><operator pos:start="27:40" pos:end="27:41">++</operator></expr></incr>)</control> <block pos:start="27:44" pos:end="71:13">{<block_content pos:start="29:17" pos:end="69:17">

                <expr_stmt pos:start="29:17" pos:end="29:34"><expr pos:start="29:17" pos:end="29:33"><name pos:start="29:17" pos:end="29:23">handler</name> <operator pos:start="29:25" pos:end="29:25">=</operator> <name pos:start="29:27" pos:end="29:33"><name pos:start="29:27" pos:end="29:28">t2</name><index pos:start="29:29" pos:end="29:33">[<expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">op2</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="31:17" pos:end="69:17"><if pos:start="31:17" pos:end="55:17">if <condition pos:start="31:20" pos:end="31:48">(<expr pos:start="31:21" pos:end="31:47"><call pos:start="31:21" pos:end="31:47"><name pos:start="31:21" pos:end="31:38">is_indirect_opcode</name><argument_list pos:start="31:39" pos:end="31:47">(<argument pos:start="31:40" pos:end="31:46"><expr pos:start="31:40" pos:end="31:46"><name pos:start="31:40" pos:end="31:46">handler</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:50" pos:end="55:17">{<block_content pos:start="33:21" pos:end="53:21">

                    <expr_stmt pos:start="33:21" pos:end="33:44"><expr pos:start="33:21" pos:end="33:43"><name pos:start="33:21" pos:end="33:22">t3</name> <operator pos:start="33:24" pos:end="33:24">=</operator> <call pos:start="33:26" pos:end="33:43"><name pos:start="33:26" pos:end="33:34">ind_table</name><argument_list pos:start="33:35" pos:end="33:43">(<argument pos:start="33:36" pos:end="33:42"><expr pos:start="33:36" pos:end="33:42"><name pos:start="33:36" pos:end="33:42">handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="35:21" pos:end="53:21">for <control pos:start="35:25" pos:end="35:50">(<init pos:start="35:26" pos:end="35:33"><expr pos:start="35:26" pos:end="35:32"><name pos:start="35:26" pos:end="35:28">op3</name> <operator pos:start="35:30" pos:end="35:30">=</operator> <literal type="number" pos:start="35:32" pos:end="35:32">0</literal></expr>;</init> <condition pos:start="35:35" pos:end="35:43"><expr pos:start="35:35" pos:end="35:42"><name pos:start="35:35" pos:end="35:37">op3</name> <operator pos:start="35:39" pos:end="35:39">&lt;</operator> <literal type="number" pos:start="35:41" pos:end="35:42">32</literal></expr>;</condition> <incr pos:start="35:45" pos:end="35:49"><expr pos:start="35:45" pos:end="35:49"><name pos:start="35:45" pos:end="35:47">op3</name><operator pos:start="35:48" pos:end="35:49">++</operator></expr></incr>)</control> <block pos:start="35:52" pos:end="53:21">{<block_content pos:start="37:25" pos:end="51:68">

                        <expr_stmt pos:start="37:25" pos:end="37:42"><expr pos:start="37:25" pos:end="37:41"><name pos:start="37:25" pos:end="37:31">handler</name> <operator pos:start="37:33" pos:end="37:33">=</operator> <name pos:start="37:35" pos:end="37:41"><name pos:start="37:35" pos:end="37:36">t3</name><index pos:start="37:37" pos:end="37:41">[<expr pos:start="37:38" pos:end="37:40"><name pos:start="37:38" pos:end="37:40">op3</name></expr>]</index></name></expr>;</expr_stmt>

                        <if_stmt pos:start="39:25" pos:end="41:37"><if pos:start="39:25" pos:end="41:37">if <condition pos:start="39:28" pos:end="39:48">(<expr pos:start="39:29" pos:end="39:47"><name pos:start="39:29" pos:end="39:42"><name pos:start="39:29" pos:end="39:35">handler</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:42">count</name></name> <operator pos:start="39:44" pos:end="39:45">==</operator> <literal type="number" pos:start="39:47" pos:end="39:47">0</literal></expr>)</condition><block type="pseudo" pos:start="41:29" pos:end="41:37"><block_content pos:start="41:29" pos:end="41:37">

                            <continue pos:start="41:29" pos:end="41:37">continue;</continue></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="43:25" pos:end="51:68"><expr pos:start="43:25" pos:end="51:67"><call pos:start="43:25" pos:end="51:67"><name pos:start="43:25" pos:end="43:35">cpu_fprintf</name><argument_list pos:start="43:36" pos:end="51:67">(<argument pos:start="43:37" pos:end="43:37"><expr pos:start="43:37" pos:end="43:37"><name pos:start="43:37" pos:end="43:37">f</name></expr></argument>, <argument pos:start="43:40" pos:end="45:66"><expr pos:start="43:40" pos:end="45:66"><literal type="string" pos:start="43:40" pos:end="43:74">"%02x %02x %02x (%02x %04d) %16s: "</literal>

                                    <literal type="string" pos:start="45:37" pos:end="45:42">"%016"</literal> <name pos:start="45:44" pos:end="45:49">PRIx64</name> <literal type="string" pos:start="45:51" pos:end="45:54">" %"</literal> <name pos:start="45:56" pos:end="45:61">PRId64</name> <literal type="string" pos:start="45:63" pos:end="45:66">"\n"</literal></expr></argument>,

                                    <argument pos:start="47:37" pos:end="47:39"><expr pos:start="47:37" pos:end="47:39"><name pos:start="47:37" pos:end="47:39">op1</name></expr></argument>, <argument pos:start="47:42" pos:end="47:44"><expr pos:start="47:42" pos:end="47:44"><name pos:start="47:42" pos:end="47:44">op2</name></expr></argument>, <argument pos:start="47:47" pos:end="47:49"><expr pos:start="47:47" pos:end="47:49"><name pos:start="47:47" pos:end="47:49">op3</name></expr></argument>, <argument pos:start="47:52" pos:end="47:54"><expr pos:start="47:52" pos:end="47:54"><name pos:start="47:52" pos:end="47:54">op1</name></expr></argument>, <argument pos:start="47:57" pos:end="47:72"><expr pos:start="47:57" pos:end="47:72"><operator pos:start="47:57" pos:end="47:57">(</operator><name pos:start="47:58" pos:end="47:60">op3</name> <operator pos:start="47:62" pos:end="47:63">&lt;&lt;</operator> <literal type="number" pos:start="47:65" pos:end="47:65">5</literal><operator pos:start="47:66" pos:end="47:66">)</operator> <operator pos:start="47:68" pos:end="47:68">|</operator> <name pos:start="47:70" pos:end="47:72">op2</name></expr></argument>,

                                    <argument pos:start="49:37" pos:end="49:50"><expr pos:start="49:37" pos:end="49:50"><name pos:start="49:37" pos:end="49:50"><name pos:start="49:37" pos:end="49:43">handler</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:50">oname</name></name></expr></argument>,

                                    <argument pos:start="51:37" pos:end="51:50"><expr pos:start="51:37" pos:end="51:50"><name pos:start="51:37" pos:end="51:50"><name pos:start="51:37" pos:end="51:43">handler</name><operator pos:start="51:44" pos:end="51:45">-&gt;</operator><name pos:start="51:46" pos:end="51:50">count</name></name></expr></argument>, <argument pos:start="51:53" pos:end="51:66"><expr pos:start="51:53" pos:end="51:66"><name pos:start="51:53" pos:end="51:66"><name pos:start="51:53" pos:end="51:59">handler</name><operator pos:start="51:60" pos:end="51:61">-&gt;</operator><name pos:start="51:62" pos:end="51:66">count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="55:19" pos:end="69:17">else <block pos:start="55:24" pos:end="69:17">{<block_content pos:start="57:21" pos:end="67:64">

                    <if_stmt pos:start="57:21" pos:end="59:33"><if pos:start="57:21" pos:end="59:33">if <condition pos:start="57:24" pos:end="57:44">(<expr pos:start="57:25" pos:end="57:43"><name pos:start="57:25" pos:end="57:38"><name pos:start="57:25" pos:end="57:31">handler</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:38">count</name></name> <operator pos:start="57:40" pos:end="57:41">==</operator> <literal type="number" pos:start="57:43" pos:end="57:43">0</literal></expr>)</condition><block type="pseudo" pos:start="59:25" pos:end="59:33"><block_content pos:start="59:25" pos:end="59:33">

                        <continue pos:start="59:25" pos:end="59:33">continue;</continue></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="61:21" pos:end="67:64"><expr pos:start="61:21" pos:end="67:63"><call pos:start="61:21" pos:end="67:63"><name pos:start="61:21" pos:end="61:31">cpu_fprintf</name><argument_list pos:start="61:32" pos:end="67:63">(<argument pos:start="61:33" pos:end="61:33"><expr pos:start="61:33" pos:end="61:33"><name pos:start="61:33" pos:end="61:33">f</name></expr></argument>, <argument pos:start="61:36" pos:end="63:62"><expr pos:start="61:36" pos:end="63:62"><literal type="string" pos:start="61:36" pos:end="61:68">"%02x %02x    (%02x %04d) %16s: "</literal>

                                <literal type="string" pos:start="63:33" pos:end="63:38">"%016"</literal> <name pos:start="63:40" pos:end="63:45">PRIx64</name> <literal type="string" pos:start="63:47" pos:end="63:50">" %"</literal> <name pos:start="63:52" pos:end="63:57">PRId64</name> <literal type="string" pos:start="63:59" pos:end="63:62">"\n"</literal></expr></argument>,

                                <argument pos:start="65:33" pos:end="65:35"><expr pos:start="65:33" pos:end="65:35"><name pos:start="65:33" pos:end="65:35">op1</name></expr></argument>, <argument pos:start="65:38" pos:end="65:40"><expr pos:start="65:38" pos:end="65:40"><name pos:start="65:38" pos:end="65:40">op2</name></expr></argument>, <argument pos:start="65:43" pos:end="65:45"><expr pos:start="65:43" pos:end="65:45"><name pos:start="65:43" pos:end="65:45">op1</name></expr></argument>, <argument pos:start="65:48" pos:end="65:50"><expr pos:start="65:48" pos:end="65:50"><name pos:start="65:48" pos:end="65:50">op2</name></expr></argument>, <argument pos:start="65:53" pos:end="65:66"><expr pos:start="65:53" pos:end="65:66"><name pos:start="65:53" pos:end="65:66"><name pos:start="65:53" pos:end="65:59">handler</name><operator pos:start="65:60" pos:end="65:61">-&gt;</operator><name pos:start="65:62" pos:end="65:66">oname</name></name></expr></argument>,

                                <argument pos:start="67:33" pos:end="67:46"><expr pos:start="67:33" pos:end="67:46"><name pos:start="67:33" pos:end="67:46"><name pos:start="67:33" pos:end="67:39">handler</name><operator pos:start="67:40" pos:end="67:41">-&gt;</operator><name pos:start="67:42" pos:end="67:46">count</name></name></expr></argument>, <argument pos:start="67:49" pos:end="67:62"><expr pos:start="67:49" pos:end="67:62"><name pos:start="67:49" pos:end="67:62"><name pos:start="67:49" pos:end="67:55">handler</name><operator pos:start="67:56" pos:end="67:57">-&gt;</operator><name pos:start="67:58" pos:end="67:62">count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="73:11" pos:end="87:9">else <block pos:start="73:16" pos:end="87:9">{<block_content pos:start="75:13" pos:end="85:56">

            <if_stmt pos:start="75:13" pos:end="77:25"><if pos:start="75:13" pos:end="77:25">if <condition pos:start="75:16" pos:end="75:36">(<expr pos:start="75:17" pos:end="75:35"><name pos:start="75:17" pos:end="75:30"><name pos:start="75:17" pos:end="75:23">handler</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:30">count</name></name> <operator pos:start="75:32" pos:end="75:33">==</operator> <literal type="number" pos:start="75:35" pos:end="75:35">0</literal></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:25"><block_content pos:start="77:17" pos:end="77:25">

                <continue pos:start="77:17" pos:end="77:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="79:13" pos:end="85:56"><expr pos:start="79:13" pos:end="85:55"><call pos:start="79:13" pos:end="85:55"><name pos:start="79:13" pos:end="79:23">cpu_fprintf</name><argument_list pos:start="79:24" pos:end="85:55">(<argument pos:start="79:25" pos:end="79:25"><expr pos:start="79:25" pos:end="79:25"><name pos:start="79:25" pos:end="79:25">f</name></expr></argument>, <argument pos:start="79:28" pos:end="81:40"><expr pos:start="79:28" pos:end="81:40"><literal type="string" pos:start="79:28" pos:end="79:62">"%02x       (%02x     ) %16s: %016"</literal> <name pos:start="79:64" pos:end="79:69">PRIx64</name>

                        <literal type="string" pos:start="81:25" pos:end="81:28">" %"</literal> <name pos:start="81:30" pos:end="81:35">PRId64</name> <literal type="string" pos:start="81:37" pos:end="81:40">"\n"</literal></expr></argument>,

                        <argument pos:start="83:25" pos:end="83:27"><expr pos:start="83:25" pos:end="83:27"><name pos:start="83:25" pos:end="83:27">op1</name></expr></argument>, <argument pos:start="83:30" pos:end="83:32"><expr pos:start="83:30" pos:end="83:32"><name pos:start="83:30" pos:end="83:32">op1</name></expr></argument>, <argument pos:start="83:35" pos:end="83:48"><expr pos:start="83:35" pos:end="83:48"><name pos:start="83:35" pos:end="83:48"><name pos:start="83:35" pos:end="83:41">handler</name><operator pos:start="83:42" pos:end="83:43">-&gt;</operator><name pos:start="83:44" pos:end="83:48">oname</name></name></expr></argument>,

                        <argument pos:start="85:25" pos:end="85:38"><expr pos:start="85:25" pos:end="85:38"><name pos:start="85:25" pos:end="85:38"><name pos:start="85:25" pos:end="85:31">handler</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:38">count</name></name></expr></argument>, <argument pos:start="85:41" pos:end="85:54"><expr pos:start="85:41" pos:end="85:54"><name pos:start="85:41" pos:end="85:54"><name pos:start="85:41" pos:end="85:47">handler</name><operator pos:start="85:48" pos:end="85:49">-&gt;</operator><name pos:start="85:50" pos:end="85:54">count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

<cpp:endif pos:start="91:1" pos:end="91:6">#<cpp:directive pos:start="91:2" pos:end="91:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
