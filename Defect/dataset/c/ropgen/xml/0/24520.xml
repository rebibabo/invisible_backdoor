<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24520.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">colored_fputs</name><parameter_list pos:start="1:26" pos:end="1:63">(<parameter pos:start="1:27" pos:end="1:35"><decl pos:start="1:27" pos:end="1:35"><type pos:start="1:27" pos:end="1:35"><name pos:start="1:27" pos:end="1:29">int</name></type> <name pos:start="1:31" pos:end="1:35">level</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:45"><decl pos:start="1:38" pos:end="1:45"><type pos:start="1:38" pos:end="1:45"><name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:45">tint</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:62"><decl pos:start="1:48" pos:end="1:62"><type pos:start="1:48" pos:end="1:62"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">str</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="72:0">

    <if_stmt pos:start="5:5" pos:end="7:15"><if pos:start="5:5" pos:end="7:15">if <condition pos:start="5:8" pos:end="5:14">(<expr pos:start="5:9" pos:end="5:13"><operator pos:start="5:9" pos:end="5:9">!</operator><operator pos:start="5:10" pos:end="5:10">*</operator><name pos:start="5:11" pos:end="5:13">str</name></expr>)</condition><block type="pseudo" pos:start="7:9" pos:end="7:15"><block_content pos:start="7:9" pos:end="7:15">

        <return pos:start="7:9" pos:end="7:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="11:5" pos:end="18:0"><if pos:start="11:5" pos:end="18:0">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:17">use_color</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="18:0"><block_content pos:start="13:9" pos:end="18:0">

        <expr_stmt pos:start="13:9" pos:end="18:0"><expr pos:start="13:9" pos:end="13:30"><call pos:start="13:9" pos:end="13:30"><name pos:start="13:9" pos:end="13:28">check_color_terminal</name><argument_list pos:start="13:29" pos:end="13:30">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<cpp:if pos:start="17:1" pos:end="17:78">#<cpp:directive pos:start="17:2" pos:end="17:3">if</cpp:directive> <expr pos:start="17:5" pos:end="17:78"><call pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:11">defined</name><argument_list pos:start="17:12" pos:end="17:19">(<argument pos:start="17:13" pos:end="17:18"><expr pos:start="17:13" pos:end="17:18"><name pos:start="17:13" pos:end="17:18">_WIN32</name></expr></argument>)</argument_list></call> <operator pos:start="17:21" pos:end="17:22">&amp;&amp;</operator> <operator pos:start="17:24" pos:end="17:24">!</operator><call pos:start="17:25" pos:end="17:46"><name pos:start="17:25" pos:end="17:31">defined</name><argument_list pos:start="17:32" pos:end="17:46">(<argument pos:start="17:33" pos:end="17:45"><expr pos:start="17:33" pos:end="17:45"><name pos:start="17:33" pos:end="17:45">__MINGW32CE__</name></expr></argument>)</argument_list></call> <operator pos:start="17:48" pos:end="17:49">&amp;&amp;</operator> <name pos:start="17:51" pos:end="17:78">HAVE_SETCONSOLETEXTATTRIBUTE</name></expr></cpp:if>

    <if_stmt pos:start="19:5" pos:end="21:64"><if pos:start="19:5" pos:end="21:64">if <condition pos:start="19:8" pos:end="19:44">(<expr pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:17">use_color</name> <operator pos:start="19:19" pos:end="19:20">&amp;&amp;</operator> <name pos:start="19:22" pos:end="19:26">level</name> <operator pos:start="19:28" pos:end="19:29">!=</operator> <name pos:start="19:31" pos:end="19:41">AV_LOG_INFO</name><operator pos:start="19:42" pos:end="19:42">/</operator><literal type="number" pos:start="19:43" pos:end="19:43">8</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:64"><block_content pos:start="21:9" pos:end="21:64">

        <expr_stmt pos:start="21:9" pos:end="21:64"><expr pos:start="21:9" pos:end="21:63"><call pos:start="21:9" pos:end="21:63"><name pos:start="21:9" pos:end="21:31">SetConsoleTextAttribute</name><argument_list pos:start="21:32" pos:end="21:63">(<argument pos:start="21:33" pos:end="21:35"><expr pos:start="21:33" pos:end="21:35"><name pos:start="21:33" pos:end="21:35">con</name></expr></argument>, <argument pos:start="21:38" pos:end="21:62"><expr pos:start="21:38" pos:end="21:62"><name pos:start="21:38" pos:end="21:47">background</name> <operator pos:start="21:49" pos:end="21:49">|</operator> <name pos:start="21:51" pos:end="21:62"><name pos:start="21:51" pos:end="21:55">color</name><index pos:start="21:56" pos:end="21:62">[<expr pos:start="21:57" pos:end="21:61"><name pos:start="21:57" pos:end="21:61">level</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:23"><expr pos:start="23:5" pos:end="23:22"><call pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:9">fputs</name><argument_list pos:start="23:10" pos:end="23:22">(<argument pos:start="23:11" pos:end="23:13"><expr pos:start="23:11" pos:end="23:13"><name pos:start="23:11" pos:end="23:13">str</name></expr></argument>, <argument pos:start="23:16" pos:end="23:21"><expr pos:start="23:16" pos:end="23:21"><name pos:start="23:16" pos:end="23:21">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="30:0"><if pos:start="25:5" pos:end="30:0">if <condition pos:start="25:8" pos:end="25:44">(<expr pos:start="25:9" pos:end="25:43"><name pos:start="25:9" pos:end="25:17">use_color</name> <operator pos:start="25:19" pos:end="25:20">&amp;&amp;</operator> <name pos:start="25:22" pos:end="25:26">level</name> <operator pos:start="25:28" pos:end="25:29">!=</operator> <name pos:start="25:31" pos:end="25:41">AV_LOG_INFO</name><operator pos:start="25:42" pos:end="25:42">/</operator><literal type="number" pos:start="25:43" pos:end="25:43">8</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="30:0"><block_content pos:start="27:9" pos:end="30:0">

        <expr_stmt pos:start="27:9" pos:end="30:0"><expr pos:start="27:9" pos:end="27:47"><call pos:start="27:9" pos:end="27:47"><name pos:start="27:9" pos:end="27:31">SetConsoleTextAttribute</name><argument_list pos:start="27:32" pos:end="27:47">(<argument pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><name pos:start="27:33" pos:end="27:35">con</name></expr></argument>, <argument pos:start="27:38" pos:end="27:46"><expr pos:start="27:38" pos:end="27:46"><name pos:start="27:38" pos:end="27:46">attr_orig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:else pos:start="29:1" pos:end="29:5">#<cpp:directive pos:start="29:2" pos:end="29:5">else</cpp:directive></cpp:else>

    <if_stmt pos:start="31:5" pos:end="72:0"><if pos:start="31:5" pos:end="43:5">if <condition pos:start="31:8" pos:end="31:49">(<expr pos:start="31:9" pos:end="31:48"><name pos:start="31:9" pos:end="31:17">use_color</name> <operator pos:start="31:19" pos:end="31:20">==</operator> <literal type="number" pos:start="31:22" pos:end="31:22">1</literal> <operator pos:start="31:24" pos:end="31:25">&amp;&amp;</operator> <name pos:start="31:27" pos:end="31:31">level</name> <operator pos:start="31:33" pos:end="31:34">!=</operator> <name pos:start="31:36" pos:end="31:46">AV_LOG_INFO</name><operator pos:start="31:47" pos:end="31:47">/</operator><literal type="number" pos:start="31:48" pos:end="31:48">8</literal></expr>)</condition> <block pos:start="31:51" pos:end="43:5">{<block_content pos:start="33:9" pos:end="41:21">

        <expr_stmt pos:start="33:9" pos:end="41:21"><expr pos:start="33:9" pos:end="41:20"><call pos:start="33:9" pos:end="41:20"><name pos:start="33:9" pos:end="33:15">fprintf</name><argument_list pos:start="33:16" pos:end="41:20">(<argument pos:start="33:17" pos:end="33:22"><expr pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:22">stderr</name></expr></argument>,

                <argument pos:start="35:17" pos:end="35:39"><expr pos:start="35:17" pos:end="35:39"><literal type="string" pos:start="35:17" pos:end="35:39">"\033[%d;3%dm%s\033[0m"</literal></expr></argument>,

                <argument pos:start="37:17" pos:end="37:40"><expr pos:start="37:17" pos:end="37:40"><operator pos:start="37:17" pos:end="37:17">(</operator><name pos:start="37:18" pos:end="37:29"><name pos:start="37:18" pos:end="37:22">color</name><index pos:start="37:23" pos:end="37:29">[<expr pos:start="37:24" pos:end="37:28"><name pos:start="37:24" pos:end="37:28">level</name></expr>]</index></name> <operator pos:start="37:31" pos:end="37:32">&gt;&gt;</operator> <literal type="number" pos:start="37:34" pos:end="37:34">4</literal><operator pos:start="37:35" pos:end="37:35">)</operator> <operator pos:start="37:37" pos:end="37:37">&amp;</operator> <literal type="number" pos:start="37:39" pos:end="37:40">15</literal></expr></argument>,

                <argument pos:start="39:17" pos:end="39:33"><expr pos:start="39:17" pos:end="39:33"><name pos:start="39:17" pos:end="39:28"><name pos:start="39:17" pos:end="39:21">color</name><index pos:start="39:22" pos:end="39:28">[<expr pos:start="39:23" pos:end="39:27"><name pos:start="39:23" pos:end="39:27">level</name></expr>]</index></name> <operator pos:start="39:30" pos:end="39:30">&amp;</operator> <literal type="number" pos:start="39:32" pos:end="39:33">15</literal></expr></argument>,

                <argument pos:start="41:17" pos:end="41:19"><expr pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:19">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="55:5">else if <condition pos:start="43:15" pos:end="43:40">(<expr pos:start="43:16" pos:end="43:39"><name pos:start="43:16" pos:end="43:19">tint</name> <operator pos:start="43:21" pos:end="43:22">&amp;&amp;</operator> <name pos:start="43:24" pos:end="43:32">use_color</name> <operator pos:start="43:34" pos:end="43:35">==</operator> <literal type="number" pos:start="43:37" pos:end="43:39">256</literal></expr>)</condition> <block pos:start="43:42" pos:end="55:5">{<block_content pos:start="45:9" pos:end="53:21">

        <expr_stmt pos:start="45:9" pos:end="53:21"><expr pos:start="45:9" pos:end="53:20"><call pos:start="45:9" pos:end="53:20"><name pos:start="45:9" pos:end="45:15">fprintf</name><argument_list pos:start="45:16" pos:end="53:20">(<argument pos:start="45:17" pos:end="45:22"><expr pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:22">stderr</name></expr></argument>,

                <argument pos:start="47:17" pos:end="47:53"><expr pos:start="47:17" pos:end="47:53"><literal type="string" pos:start="47:17" pos:end="47:53">"\033[48;5;%dm\033[38;5;%dm%s\033[0m"</literal></expr></argument>,

                <argument pos:start="49:17" pos:end="49:43"><expr pos:start="49:17" pos:end="49:43"><operator pos:start="49:17" pos:end="49:17">(</operator><name pos:start="49:18" pos:end="49:29"><name pos:start="49:18" pos:end="49:22">color</name><index pos:start="49:23" pos:end="49:29">[<expr pos:start="49:24" pos:end="49:28"><name pos:start="49:24" pos:end="49:28">level</name></expr>]</index></name> <operator pos:start="49:31" pos:end="49:32">&gt;&gt;</operator> <literal type="number" pos:start="49:34" pos:end="49:35">16</literal><operator pos:start="49:36" pos:end="49:36">)</operator> <operator pos:start="49:38" pos:end="49:38">&amp;</operator> <literal type="number" pos:start="49:40" pos:end="49:43">0xff</literal></expr></argument>,

                <argument pos:start="51:17" pos:end="51:20"><expr pos:start="51:17" pos:end="51:20"><name pos:start="51:17" pos:end="51:20">tint</name></expr></argument>,

                <argument pos:start="53:17" pos:end="53:19"><expr pos:start="53:17" pos:end="53:19"><name pos:start="53:17" pos:end="53:19">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="55:7" pos:end="67:5">else if <condition pos:start="55:15" pos:end="55:58">(<expr pos:start="55:16" pos:end="55:57"><name pos:start="55:16" pos:end="55:24">use_color</name> <operator pos:start="55:26" pos:end="55:27">==</operator> <literal type="number" pos:start="55:29" pos:end="55:31">256</literal> <operator pos:start="55:33" pos:end="55:34">&amp;&amp;</operator> <name pos:start="55:36" pos:end="55:40">level</name> <operator pos:start="55:42" pos:end="55:43">!=</operator> <name pos:start="55:45" pos:end="55:55">AV_LOG_INFO</name><operator pos:start="55:56" pos:end="55:56">/</operator><literal type="number" pos:start="55:57" pos:end="55:57">8</literal></expr>)</condition> <block pos:start="55:60" pos:end="67:5">{<block_content pos:start="57:9" pos:end="65:21">

        <expr_stmt pos:start="57:9" pos:end="65:21"><expr pos:start="57:9" pos:end="65:20"><call pos:start="57:9" pos:end="65:20"><name pos:start="57:9" pos:end="57:15">fprintf</name><argument_list pos:start="57:16" pos:end="65:20">(<argument pos:start="57:17" pos:end="57:22"><expr pos:start="57:17" pos:end="57:22"><name pos:start="57:17" pos:end="57:22">stderr</name></expr></argument>,

                <argument pos:start="59:17" pos:end="59:53"><expr pos:start="59:17" pos:end="59:53"><literal type="string" pos:start="59:17" pos:end="59:53">"\033[48;5;%dm\033[38;5;%dm%s\033[0m"</literal></expr></argument>,

                <argument pos:start="61:17" pos:end="61:43"><expr pos:start="61:17" pos:end="61:43"><operator pos:start="61:17" pos:end="61:17">(</operator><name pos:start="61:18" pos:end="61:29"><name pos:start="61:18" pos:end="61:22">color</name><index pos:start="61:23" pos:end="61:29">[<expr pos:start="61:24" pos:end="61:28"><name pos:start="61:24" pos:end="61:28">level</name></expr>]</index></name> <operator pos:start="61:31" pos:end="61:32">&gt;&gt;</operator> <literal type="number" pos:start="61:34" pos:end="61:35">16</literal><operator pos:start="61:36" pos:end="61:36">)</operator> <operator pos:start="61:38" pos:end="61:38">&amp;</operator> <literal type="number" pos:start="61:40" pos:end="61:43">0xff</literal></expr></argument>,

                <argument pos:start="63:17" pos:end="63:42"><expr pos:start="63:17" pos:end="63:42"><operator pos:start="63:17" pos:end="63:17">(</operator><name pos:start="63:18" pos:end="63:29"><name pos:start="63:18" pos:end="63:22">color</name><index pos:start="63:23" pos:end="63:29">[<expr pos:start="63:24" pos:end="63:28"><name pos:start="63:24" pos:end="63:28">level</name></expr>]</index></name> <operator pos:start="63:31" pos:end="63:32">&gt;&gt;</operator> <literal type="number" pos:start="63:34" pos:end="63:34">8</literal><operator pos:start="63:35" pos:end="63:35">)</operator> <operator pos:start="63:37" pos:end="63:37">&amp;</operator> <literal type="number" pos:start="63:39" pos:end="63:42">0xff</literal></expr></argument>,

                <argument pos:start="65:17" pos:end="65:19"><expr pos:start="65:17" pos:end="65:19"><name pos:start="65:17" pos:end="65:19">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="67:7" pos:end="72:0">else<block type="pseudo" pos:start="69:9" pos:end="72:0"><block_content pos:start="69:9" pos:end="72:0">

        <expr_stmt pos:start="69:9" pos:end="72:0"><expr pos:start="69:9" pos:end="69:26"><call pos:start="69:9" pos:end="69:26"><name pos:start="69:9" pos:end="69:13">fputs</name><argument_list pos:start="69:14" pos:end="69:26">(<argument pos:start="69:15" pos:end="69:17"><expr pos:start="69:15" pos:end="69:17"><name pos:start="69:15" pos:end="69:17">str</name></expr></argument>, <argument pos:start="69:20" pos:end="69:25"><expr pos:start="69:20" pos:end="69:25"><name pos:start="69:20" pos:end="69:25">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>



</block_content>}</block></function>
</unit>
