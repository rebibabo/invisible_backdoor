<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14440.c" pos:tabs="8"><function pos:start="1:1" pos:end="287:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">nut_write_packet</name><parameter_list pos:start="1:28" pos:end="3:70">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:64"><decl pos:start="1:49" pos:end="1:64"><type pos:start="1:49" pos:end="1:64"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:64">stream_index</name></decl></parameter>, 

			    <parameter pos:start="3:29" pos:end="3:46"><decl pos:start="3:29" pos:end="3:46"><type pos:start="3:29" pos:end="3:46"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:41">uint8_t</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:46">buf</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:56"><decl pos:start="3:49" pos:end="3:56"><type pos:start="3:49" pos:end="3:56"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:56">size</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:69"><decl pos:start="3:59" pos:end="3:69"><type pos:start="3:59" pos:end="3:69"><name pos:start="3:59" pos:end="3:65">int64_t</name></type> <name pos:start="3:67" pos:end="3:69">pts</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="287:1">{<block_content pos:start="7:5" pos:end="285:13">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">NUTContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">nut</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">StreamContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:25">stream</name><init pos:start="9:26" pos:end="9:53">= <expr pos:start="9:28" pos:end="9:53"><operator pos:start="9:28" pos:end="9:28">&amp;</operator><name pos:start="9:29" pos:end="9:53"><name pos:start="9:29" pos:end="9:31">nut</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:39">stream</name><index pos:start="9:40" pos:end="9:53">[<expr pos:start="9:41" pos:end="9:52"><name pos:start="9:41" pos:end="9:52">stream_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">ByteIOContext</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:21">bc</name> <init pos:start="11:23" pos:end="11:30">= <expr pos:start="11:25" pos:end="11:30"><operator pos:start="11:25" pos:end="11:25">&amp;</operator><name pos:start="11:26" pos:end="11:30"><name pos:start="11:26" pos:end="11:26">s</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">key_frame</name> <init pos:start="13:19" pos:end="13:21">= <expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr></init></decl>, <decl pos:start="13:24" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:31">full_pts</name><init pos:start="13:32" pos:end="13:33">=<expr pos:start="13:33" pos:end="13:33"><literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">AVCodecContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:23">enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:19">lsb_pts</name></decl>, <decl pos:start="17:22" pos:end="17:30"><type ref="prev" pos:start="17:5" pos:end="17:11"/><name pos:start="17:22" pos:end="17:30">delta_pts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:74"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:18">frame_type</name></decl>, <decl pos:start="19:21" pos:end="19:31"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:21" pos:end="19:31">best_length</name></decl>, <decl pos:start="19:34" pos:end="19:43"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:34" pos:end="19:43">frame_code</name></decl>, <decl pos:start="19:46" pos:end="19:50"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:46" pos:end="19:50">flags</name></decl>, <decl pos:start="19:53" pos:end="19:53"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:53" pos:end="19:53">i</name></decl>, <decl pos:start="19:56" pos:end="19:63"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:56" pos:end="19:63">size_mul</name></decl>, <decl pos:start="19:66" pos:end="19:73"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:66" pos:end="19:73">size_lsb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:45"><decl pos:start="21:5" pos:end="21:44"><type pos:start="21:5" pos:end="21:17"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:17">int64_t</name></type> <name pos:start="21:19" pos:end="21:29">frame_start</name><init pos:start="21:30" pos:end="21:44">= <expr pos:start="21:32" pos:end="21:44"><call pos:start="21:32" pos:end="21:44"><name pos:start="21:32" pos:end="21:40">url_ftell</name><argument_list pos:start="21:41" pos:end="21:44">(<argument pos:start="21:42" pos:end="21:43"><expr pos:start="21:42" pos:end="21:43"><name pos:start="21:42" pos:end="21:43">bc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="27:17"><if pos:start="25:5" pos:end="27:17">if <condition pos:start="25:8" pos:end="25:37">(<expr pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:20">stream_index</name> <operator pos:start="25:22" pos:end="25:22">&gt;</operator> <name pos:start="25:24" pos:end="25:36"><name pos:start="25:24" pos:end="25:24">s</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:36">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:17"><block_content pos:start="27:9" pos:end="27:17">

	<return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

        

    <expr_stmt pos:start="31:5" pos:end="31:95"><expr pos:start="31:5" pos:end="31:94"><name pos:start="31:5" pos:end="31:7">pts</name><operator pos:start="31:8" pos:end="31:8">=</operator> <operator pos:start="31:10" pos:end="31:10">(</operator><call pos:start="31:11" pos:end="31:61"><name pos:start="31:11" pos:end="31:20">av_rescale</name><argument_list pos:start="31:21" pos:end="31:61">(<argument pos:start="31:22" pos:end="31:24"><expr pos:start="31:22" pos:end="31:24"><name pos:start="31:22" pos:end="31:24">pts</name></expr></argument>, <argument pos:start="31:27" pos:end="31:42"><expr pos:start="31:27" pos:end="31:42"><name pos:start="31:27" pos:end="31:42"><name pos:start="31:27" pos:end="31:32">stream</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:42">rate_num</name></name></expr></argument>, <argument pos:start="31:45" pos:end="31:60"><expr pos:start="31:45" pos:end="31:60"><name pos:start="31:45" pos:end="31:60"><name pos:start="31:45" pos:end="31:50">stream</name><operator pos:start="31:51" pos:end="31:52">-&gt;</operator><name pos:start="31:53" pos:end="31:60">rate_den</name></name></expr></argument>)</argument_list></call> <operator pos:start="31:63" pos:end="31:63">+</operator> <name pos:start="31:65" pos:end="31:76">AV_TIME_BASE</name><operator pos:start="31:77" pos:end="31:77">/</operator><literal type="number" pos:start="31:78" pos:end="31:78">2</literal><operator pos:start="31:79" pos:end="31:79">)</operator> <operator pos:start="31:81" pos:end="31:81">/</operator> <name pos:start="31:83" pos:end="31:94">AV_TIME_BASE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:43"><expr pos:start="35:5" pos:end="35:42"><name pos:start="35:5" pos:end="35:7">enc</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <operator pos:start="35:11" pos:end="35:11">&amp;</operator><name pos:start="35:12" pos:end="35:35"><name pos:start="35:12" pos:end="35:12">s</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:21">streams</name><index pos:start="35:22" pos:end="35:35">[<expr pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:34">stream_index</name></expr>]</index></name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:42">codec</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:44"><expr pos:start="37:5" pos:end="37:43"><name pos:start="37:5" pos:end="37:13">key_frame</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:43"><name pos:start="37:17" pos:end="37:19">enc</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:32">coded_frame</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:43">key_frame</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:38"><expr pos:start="39:5" pos:end="39:37"><name pos:start="39:5" pos:end="39:13">delta_pts</name><operator pos:start="39:14" pos:end="39:14">=</operator> <name pos:start="39:16" pos:end="39:18">pts</name> <operator pos:start="39:20" pos:end="39:20">-</operator> <name pos:start="39:22" pos:end="39:37"><name pos:start="39:22" pos:end="39:27">stream</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:37">last_pts</name></name></expr>;</expr_stmt>

    

    <expr_stmt pos:start="43:5" pos:end="43:17"><expr pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:14">frame_type</name><operator pos:start="43:15" pos:end="43:15">=</operator><literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:21"><if pos:start="45:5" pos:end="47:21">if<condition pos:start="45:7" pos:end="45:112">(<expr pos:start="45:8" pos:end="45:111"><name pos:start="45:8" pos:end="45:18">frame_start</name> <operator pos:start="45:20" pos:end="45:20">+</operator> <name pos:start="45:22" pos:end="45:25">size</name> <operator pos:start="45:27" pos:end="45:27">+</operator> <literal type="number" pos:start="45:29" pos:end="45:32">20</literal> <operator pos:start="45:32" pos:end="45:32">-</operator> <call pos:start="45:34" pos:end="45:90"><name pos:start="45:34" pos:end="45:38">FFMAX</name><argument_list pos:start="45:39" pos:end="45:90">(<argument pos:start="45:40" pos:end="45:63"><expr pos:start="45:40" pos:end="45:63"><name pos:start="45:40" pos:end="45:63"><name pos:start="45:40" pos:end="45:42">nut</name><operator pos:start="45:43" pos:end="45:44">-&gt;</operator><name pos:start="45:45" pos:end="45:60">last_frame_start</name><index pos:start="45:61" pos:end="45:63">[<expr pos:start="45:62" pos:end="45:62"><literal type="number" pos:start="45:62" pos:end="45:62">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:66" pos:end="45:89"><expr pos:start="45:66" pos:end="45:89"><name pos:start="45:66" pos:end="45:89"><name pos:start="45:66" pos:end="45:68">nut</name><operator pos:start="45:69" pos:end="45:70">-&gt;</operator><name pos:start="45:71" pos:end="45:86">last_frame_start</name><index pos:start="45:87" pos:end="45:89">[<expr pos:start="45:88" pos:end="45:88"><literal type="number" pos:start="45:88" pos:end="45:88">2</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="45:92" pos:end="45:92">&gt;</operator> <name pos:start="45:94" pos:end="45:111">MAX_TYPE1_DISTANCE</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:21"><block_content pos:start="47:9" pos:end="47:21">

        <expr_stmt pos:start="47:9" pos:end="47:21"><expr pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:18">frame_type</name><operator pos:start="47:19" pos:end="47:19">=</operator><literal type="number" pos:start="47:20" pos:end="47:20">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="59:5"><if pos:start="49:5" pos:end="59:5">if<condition pos:start="49:7" pos:end="49:17">(<expr pos:start="49:8" pos:end="49:16"><name pos:start="49:8" pos:end="49:16">key_frame</name></expr>)</condition><block pos:start="49:18" pos:end="59:5">{<block_content pos:start="51:9" pos:end="57:25">

        <if_stmt pos:start="51:9" pos:end="53:25"><if pos:start="51:9" pos:end="53:25">if<condition pos:start="51:11" pos:end="51:95">(<expr pos:start="51:12" pos:end="51:94"><name pos:start="51:12" pos:end="51:21">frame_type</name><operator pos:start="51:22" pos:end="51:23">==</operator><literal type="number" pos:start="51:24" pos:end="51:24">1</literal> <operator pos:start="51:26" pos:end="51:27">&amp;&amp;</operator> <name pos:start="51:29" pos:end="51:39">frame_start</name> <operator pos:start="51:41" pos:end="51:41">+</operator> <name pos:start="51:43" pos:end="51:46">size</name> <operator pos:start="51:48" pos:end="51:48">-</operator> <name pos:start="51:50" pos:end="51:73"><name pos:start="51:50" pos:end="51:52">nut</name><operator pos:start="51:53" pos:end="51:54">-&gt;</operator><name pos:start="51:55" pos:end="51:70">last_frame_start</name><index pos:start="51:71" pos:end="51:73">[<expr pos:start="51:72" pos:end="51:72"><literal type="number" pos:start="51:72" pos:end="51:72">2</literal></expr>]</index></name> <operator pos:start="51:75" pos:end="51:75">&gt;</operator> <name pos:start="51:77" pos:end="51:94">MAX_TYPE2_DISTANCE</name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:25"><block_content pos:start="53:13" pos:end="53:25">

            <expr_stmt pos:start="53:13" pos:end="53:25"><expr pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:22">frame_type</name><operator pos:start="53:23" pos:end="53:23">=</operator><literal type="number" pos:start="53:24" pos:end="53:24">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="55:9" pos:end="57:25"><if pos:start="55:9" pos:end="57:25">if<condition pos:start="55:11" pos:end="55:35">(<expr pos:start="55:12" pos:end="55:34"><operator pos:start="55:12" pos:end="55:12">!</operator><name pos:start="55:13" pos:end="55:34"><name pos:start="55:13" pos:end="55:18">stream</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:34">last_key_frame</name></name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:25"><block_content pos:start="57:13" pos:end="57:25">

            <expr_stmt pos:start="57:13" pos:end="57:25"><expr pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:22">frame_type</name><operator pos:start="57:23" pos:end="57:23">=</operator><literal type="number" pos:start="57:24" pos:end="57:24">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="71:5"><if pos:start="63:5" pos:end="71:5">if<condition pos:start="63:7" pos:end="63:20">(<expr pos:start="63:8" pos:end="63:19"><name pos:start="63:8" pos:end="63:17">frame_type</name><operator pos:start="63:18" pos:end="63:18">&gt;</operator><literal type="number" pos:start="63:19" pos:end="63:19">0</literal></expr>)</condition><block pos:start="63:21" pos:end="71:5">{<block_content pos:start="65:9" pos:end="69:19">

        <expr_stmt pos:start="65:9" pos:end="65:40"><expr pos:start="65:9" pos:end="65:39"><call pos:start="65:9" pos:end="65:39"><name pos:start="65:9" pos:end="65:27">update_packetheader</name><argument_list pos:start="65:28" pos:end="65:39">(<argument pos:start="65:29" pos:end="65:31"><expr pos:start="65:29" pos:end="65:31"><name pos:start="65:29" pos:end="65:31">nut</name></expr></argument>, <argument pos:start="65:34" pos:end="65:35"><expr pos:start="65:34" pos:end="65:35"><name pos:start="65:34" pos:end="65:35">bc</name></expr></argument>, <argument pos:start="65:38" pos:end="65:38"><expr pos:start="65:38" pos:end="65:38"><literal type="number" pos:start="65:38" pos:end="65:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:17"><expr pos:start="67:9" pos:end="67:16"><call pos:start="67:9" pos:end="67:16"><name pos:start="67:9" pos:end="67:13">reset</name><argument_list pos:start="67:14" pos:end="67:16">(<argument pos:start="67:15" pos:end="67:15"><expr pos:start="67:15" pos:end="67:15"><name pos:start="67:15" pos:end="67:15">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:19"><expr pos:start="69:9" pos:end="69:18"><name pos:start="69:9" pos:end="69:16">full_pts</name><operator pos:start="69:17" pos:end="69:17">=</operator><literal type="number" pos:start="69:18" pos:end="69:18">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="73:5" pos:end="73:93">//FIXME ensure that the timestamp can be represented by either delta or lsb or full_pts=1</comment>



    <expr_stmt pos:start="77:5" pos:end="77:59"><expr pos:start="77:5" pos:end="77:58"><name pos:start="77:5" pos:end="77:11">lsb_pts</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <name pos:start="77:15" pos:end="77:17">pts</name> <operator pos:start="77:19" pos:end="77:19">&amp;</operator> <operator pos:start="77:21" pos:end="77:21">(</operator><operator pos:start="77:22" pos:end="77:22">(</operator><literal type="number" pos:start="77:23" pos:end="77:23">1</literal> <operator pos:start="77:25" pos:end="77:26">&lt;&lt;</operator> <name pos:start="77:28" pos:end="77:54"><name pos:start="77:28" pos:end="77:33">stream</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:54">msb_timestamp_shift</name></name><operator pos:start="77:55" pos:end="77:55">)</operator><operator pos:start="77:56" pos:end="77:56">-</operator><literal type="number" pos:start="77:57" pos:end="77:57">1</literal><operator pos:start="77:58" pos:end="77:58">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:24"><expr pos:start="81:5" pos:end="81:23"><name pos:start="81:5" pos:end="81:15">best_length</name><operator pos:start="81:16" pos:end="81:16">=</operator><name pos:start="81:17" pos:end="81:23">INT_MAX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:19"><expr pos:start="83:5" pos:end="83:18"><name pos:start="83:5" pos:end="83:14">frame_code</name><operator pos:start="83:15" pos:end="83:15">=</operator> <operator pos:start="83:17" pos:end="83:17">-</operator><literal type="number" pos:start="83:18" pos:end="83:18">1</literal></expr>;</expr_stmt>

    <for pos:start="85:5" pos:end="201:5">for<control pos:start="85:8" pos:end="85:24">(<init pos:start="85:9" pos:end="85:12"><expr pos:start="85:9" pos:end="85:11"><name pos:start="85:9" pos:end="85:9">i</name><operator pos:start="85:10" pos:end="85:10">=</operator><literal type="number" pos:start="85:11" pos:end="85:11">0</literal></expr>;</init> <condition pos:start="85:14" pos:end="85:19"><expr pos:start="85:14" pos:end="85:18"><name pos:start="85:14" pos:end="85:14">i</name><operator pos:start="85:15" pos:end="85:15">&lt;</operator><literal type="number" pos:start="85:16" pos:end="85:18">256</literal></expr>;</condition> <incr pos:start="85:21" pos:end="85:23"><expr pos:start="85:21" pos:end="85:23"><name pos:start="85:21" pos:end="85:21">i</name><operator pos:start="85:22" pos:end="85:23">++</operator></expr></incr>)</control><block pos:start="85:25" pos:end="201:5">{<block_content pos:start="87:9" pos:end="197:9">

        <decl_stmt pos:start="87:9" pos:end="87:64"><decl pos:start="87:9" pos:end="87:63"><type pos:start="87:9" pos:end="87:11"><name pos:start="87:9" pos:end="87:11">int</name></type> <name pos:start="87:13" pos:end="87:27">stream_id_plus1</name><init pos:start="87:28" pos:end="87:63">= <expr pos:start="87:30" pos:end="87:63"><name pos:start="87:30" pos:end="87:47"><name pos:start="87:30" pos:end="87:32">nut</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:44">frame_code</name><index pos:start="87:45" pos:end="87:47">[<expr pos:start="87:46" pos:end="87:46"><name pos:start="87:46" pos:end="87:46">i</name></expr>]</index></name><operator pos:start="87:48" pos:end="87:48">.</operator><name pos:start="87:49" pos:end="87:63">stream_id_plus1</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="89:9" pos:end="89:49"><decl pos:start="89:9" pos:end="89:48"><type pos:start="89:9" pos:end="89:11"><name pos:start="89:9" pos:end="89:11">int</name></type> <name pos:start="89:13" pos:end="89:24">fc_key_frame</name><init pos:start="89:25" pos:end="89:48">= <expr pos:start="89:27" pos:end="89:48"><name pos:start="89:27" pos:end="89:48"><name pos:start="89:27" pos:end="89:32">stream</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:48">last_key_frame</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="91:9" pos:end="91:21"><decl pos:start="91:9" pos:end="91:20"><type pos:start="91:9" pos:end="91:11"><name pos:start="91:9" pos:end="91:11">int</name></type> <name pos:start="91:13" pos:end="91:18">length</name><init pos:start="91:19" pos:end="91:20">=<expr pos:start="91:20" pos:end="91:20"><literal type="number" pos:start="91:20" pos:end="91:20">0</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:46"><expr pos:start="93:9" pos:end="93:45"><name pos:start="93:9" pos:end="93:16">size_mul</name><operator pos:start="93:17" pos:end="93:17">=</operator> <name pos:start="93:19" pos:end="93:36"><name pos:start="93:19" pos:end="93:21">nut</name><operator pos:start="93:22" pos:end="93:23">-&gt;</operator><name pos:start="93:24" pos:end="93:33">frame_code</name><index pos:start="93:34" pos:end="93:36">[<expr pos:start="93:35" pos:end="93:35"><name pos:start="93:35" pos:end="93:35">i</name></expr>]</index></name><operator pos:start="93:37" pos:end="93:37">.</operator><name pos:start="93:38" pos:end="93:45">size_mul</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:46"><expr pos:start="95:9" pos:end="95:45"><name pos:start="95:9" pos:end="95:16">size_lsb</name><operator pos:start="95:17" pos:end="95:17">=</operator> <name pos:start="95:19" pos:end="95:36"><name pos:start="95:19" pos:end="95:21">nut</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:33">frame_code</name><index pos:start="95:34" pos:end="95:36">[<expr pos:start="95:35" pos:end="95:35"><name pos:start="95:35" pos:end="95:35">i</name></expr>]</index></name><operator pos:start="95:37" pos:end="95:37">.</operator><name pos:start="95:38" pos:end="95:45">size_lsb</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:40"><expr pos:start="97:9" pos:end="97:39"><name pos:start="97:9" pos:end="97:13">flags</name><operator pos:start="97:14" pos:end="97:14">=</operator> <name pos:start="97:16" pos:end="97:33"><name pos:start="97:16" pos:end="97:18">nut</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:30">frame_code</name><index pos:start="97:31" pos:end="97:33">[<expr pos:start="97:32" pos:end="97:32"><name pos:start="97:32" pos:end="97:32">i</name></expr>]</index></name><operator pos:start="97:34" pos:end="97:34">.</operator><name pos:start="97:35" pos:end="97:39">flags</name></expr>;</expr_stmt>



        <if_stmt pos:start="101:9" pos:end="105:21"><if pos:start="101:9" pos:end="101:67">if<condition pos:start="101:11" pos:end="101:32">(<expr pos:start="101:12" pos:end="101:31"><name pos:start="101:12" pos:end="101:26">stream_id_plus1</name> <operator pos:start="101:28" pos:end="101:29">==</operator> <literal type="number" pos:start="101:31" pos:end="101:31">0</literal></expr>)</condition><block type="pseudo" pos:start="101:34" pos:end="101:67"><block_content pos:start="101:34" pos:end="101:67"> <expr_stmt pos:start="101:34" pos:end="101:67"><expr pos:start="101:34" pos:end="101:66"><name pos:start="101:34" pos:end="101:39">length</name><operator pos:start="101:40" pos:end="101:41">+=</operator> <call pos:start="101:43" pos:end="101:66"><name pos:start="101:43" pos:end="101:52">get_length</name><argument_list pos:start="101:53" pos:end="101:66">(<argument pos:start="101:54" pos:end="101:65"><expr pos:start="101:54" pos:end="101:65"><name pos:start="101:54" pos:end="101:65">stream_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="103:9" pos:end="105:21">else if<condition pos:start="103:16" pos:end="103:52">(<expr pos:start="103:17" pos:end="103:51"><name pos:start="103:17" pos:end="103:31">stream_id_plus1</name> <operator pos:start="103:33" pos:end="103:33">-</operator> <literal type="number" pos:start="103:35" pos:end="103:35">1</literal> <operator pos:start="103:37" pos:end="103:38">!=</operator> <name pos:start="103:40" pos:end="103:51">stream_index</name></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:21"><block_content pos:start="105:13" pos:end="105:21">

            <continue pos:start="105:13" pos:end="105:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="107:9" pos:end="117:9"><if pos:start="107:9" pos:end="113:9">if<condition pos:start="107:11" pos:end="107:39">(<expr pos:start="107:12" pos:end="107:38"><name pos:start="107:12" pos:end="107:16">flags</name> <operator pos:start="107:18" pos:end="107:18">&amp;</operator> <name pos:start="107:20" pos:end="107:38">FLAG_PRED_KEY_FRAME</name></expr>)</condition><block pos:start="107:40" pos:end="113:9">{<block_content pos:start="109:13" pos:end="111:44">

            <if_stmt pos:start="109:13" pos:end="111:44"><if pos:start="109:13" pos:end="111:44">if<condition pos:start="109:15" pos:end="109:38">(<expr pos:start="109:16" pos:end="109:37"><name pos:start="109:16" pos:end="109:20">flags</name> <operator pos:start="109:22" pos:end="109:22">&amp;</operator> <name pos:start="109:24" pos:end="109:37">FLAG_KEY_FRAME</name></expr>)</condition><block type="pseudo" pos:start="111:17" pos:end="111:44"><block_content pos:start="111:17" pos:end="111:44">

                <expr_stmt pos:start="111:17" pos:end="111:44"><expr pos:start="111:17" pos:end="111:43"><name pos:start="111:17" pos:end="111:28">fc_key_frame</name><operator pos:start="111:29" pos:end="111:29">=</operator> <operator pos:start="111:31" pos:end="111:31">!</operator><name pos:start="111:32" pos:end="111:43">fc_key_frame</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if><else pos:start="113:10" pos:end="117:9">else<block pos:start="113:14" pos:end="117:9">{<block_content pos:start="115:13" pos:end="115:53">

            <expr_stmt pos:start="115:13" pos:end="115:53"><expr pos:start="115:13" pos:end="115:52"><name pos:start="115:13" pos:end="115:24">fc_key_frame</name><operator pos:start="115:25" pos:end="115:25">=</operator> <operator pos:start="115:27" pos:end="115:27">!</operator><operator pos:start="115:28" pos:end="115:28">!</operator><operator pos:start="115:29" pos:end="115:29">(</operator><name pos:start="115:30" pos:end="115:34">flags</name> <operator pos:start="115:36" pos:end="115:36">&amp;</operator> <name pos:start="115:38" pos:end="115:51">FLAG_KEY_FRAME</name><operator pos:start="115:52" pos:end="115:52">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:45"><expr pos:start="119:9" pos:end="119:44"><call pos:start="119:9" pos:end="119:44"><name pos:start="119:9" pos:end="119:14">assert</name><argument_list pos:start="119:15" pos:end="119:44">(<argument pos:start="119:16" pos:end="119:43"><expr pos:start="119:16" pos:end="119:43"><name pos:start="119:16" pos:end="119:24">key_frame</name><operator pos:start="119:25" pos:end="119:26">==</operator><literal type="number" pos:start="119:27" pos:end="119:27">0</literal> <operator pos:start="119:29" pos:end="119:30">||</operator> <name pos:start="119:32" pos:end="119:40">key_frame</name><operator pos:start="119:41" pos:end="119:42">==</operator><literal type="number" pos:start="119:43" pos:end="119:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="123:21"><if pos:start="121:9" pos:end="123:21">if<condition pos:start="121:11" pos:end="121:37">(<expr pos:start="121:12" pos:end="121:36"><name pos:start="121:12" pos:end="121:23">fc_key_frame</name> <operator pos:start="121:25" pos:end="121:26">!=</operator> <name pos:start="121:28" pos:end="121:36">key_frame</name></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:21"><block_content pos:start="123:13" pos:end="123:21">

            <continue pos:start="123:13" pos:end="123:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="127:9" pos:end="129:21"><if pos:start="127:9" pos:end="129:21">if<condition pos:start="127:11" pos:end="127:61">(<expr pos:start="127:12" pos:end="127:60"><operator pos:start="127:12" pos:end="127:12">(</operator><operator pos:start="127:13" pos:end="127:13">!</operator><operator pos:start="127:14" pos:end="127:14">!</operator><operator pos:start="127:15" pos:end="127:15">(</operator><name pos:start="127:16" pos:end="127:20">flags</name> <operator pos:start="127:22" pos:end="127:22">&amp;</operator> <name pos:start="127:24" pos:end="127:38">FLAG_FRAME_TYPE</name><operator pos:start="127:39" pos:end="127:39">)</operator><operator pos:start="127:40" pos:end="127:40">)</operator> <operator pos:start="127:42" pos:end="127:43">!=</operator> <operator pos:start="127:45" pos:end="127:45">(</operator><name pos:start="127:46" pos:end="127:55">frame_type</name> <operator pos:start="127:57" pos:end="127:57">&gt;</operator> <literal type="number" pos:start="127:59" pos:end="127:59">0</literal><operator pos:start="127:60" pos:end="127:60">)</operator></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:21"><block_content pos:start="129:13" pos:end="129:21">

            <continue pos:start="129:13" pos:end="129:21">continue;</continue></block_content></block></if></if_stmt>

        

        <if_stmt pos:start="133:9" pos:end="155:9"><if pos:start="133:9" pos:end="141:9">if<condition pos:start="133:11" pos:end="133:32">(<expr pos:start="133:12" pos:end="133:31"><name pos:start="133:12" pos:end="133:19">size_mul</name> <operator pos:start="133:21" pos:end="133:22">&lt;=</operator> <name pos:start="133:24" pos:end="133:31">size_lsb</name></expr>)</condition><block pos:start="133:33" pos:end="141:9">{<block_content pos:start="135:13" pos:end="139:25">

            <decl_stmt pos:start="135:13" pos:end="135:57"><decl pos:start="135:13" pos:end="135:56"><type pos:start="135:13" pos:end="135:15"><name pos:start="135:13" pos:end="135:15">int</name></type> <name pos:start="135:17" pos:end="135:17">p</name><init pos:start="135:18" pos:end="135:56">= <expr pos:start="135:20" pos:end="135:56"><name pos:start="135:20" pos:end="135:56"><name pos:start="135:20" pos:end="135:25">stream</name><operator pos:start="135:26" pos:end="135:27">-&gt;</operator><name pos:start="135:28" pos:end="135:35">lru_size</name><index pos:start="135:36" pos:end="135:56">[<expr pos:start="135:37" pos:end="135:55"><name pos:start="135:37" pos:end="135:44">size_lsb</name> <operator pos:start="135:46" pos:end="135:46">-</operator> <name pos:start="135:48" pos:end="135:55">size_mul</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="137:13" pos:end="139:25"><if pos:start="137:13" pos:end="139:25">if<condition pos:start="137:15" pos:end="137:25">(<expr pos:start="137:16" pos:end="137:24"><name pos:start="137:16" pos:end="137:16">p</name> <operator pos:start="137:18" pos:end="137:19">!=</operator> <name pos:start="137:21" pos:end="137:24">size</name></expr>)</condition><block type="pseudo" pos:start="139:17" pos:end="139:25"><block_content pos:start="139:17" pos:end="139:25">

                <continue pos:start="139:17" pos:end="139:25">continue;</continue></block_content></block></if></if_stmt>

        </block_content>}</block></if><else pos:start="141:10" pos:end="155:9">else<block pos:start="141:14" pos:end="155:9">{<block_content pos:start="143:13" pos:end="153:25">

            <if_stmt pos:start="143:13" pos:end="145:25"><if pos:start="143:13" pos:end="145:25">if<condition pos:start="143:15" pos:end="143:43">(<expr pos:start="143:16" pos:end="143:42"><name pos:start="143:16" pos:end="143:19">size</name> <operator pos:start="143:21" pos:end="143:21">%</operator> <name pos:start="143:23" pos:end="143:30">size_mul</name> <operator pos:start="143:32" pos:end="143:33">!=</operator> <name pos:start="143:35" pos:end="143:42">size_lsb</name></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="145:25"><block_content pos:start="145:17" pos:end="145:25">

                <continue pos:start="145:17" pos:end="145:25">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="147:13" pos:end="153:25"><if pos:start="147:13" pos:end="149:54">if<condition pos:start="147:15" pos:end="147:38">(<expr pos:start="147:16" pos:end="147:37"><name pos:start="147:16" pos:end="147:20">flags</name> <operator pos:start="147:22" pos:end="147:22">&amp;</operator> <name pos:start="147:24" pos:end="147:37">FLAG_DATA_SIZE</name></expr>)</condition><block type="pseudo" pos:start="149:17" pos:end="149:54"><block_content pos:start="149:17" pos:end="149:54">

                <expr_stmt pos:start="149:17" pos:end="149:54"><expr pos:start="149:17" pos:end="149:53"><name pos:start="149:17" pos:end="149:22">length</name> <operator pos:start="149:24" pos:end="149:25">+=</operator> <call pos:start="149:27" pos:end="149:53"><name pos:start="149:27" pos:end="149:36">get_length</name><argument_list pos:start="149:37" pos:end="149:53">(<argument pos:start="149:38" pos:end="149:52"><expr pos:start="149:38" pos:end="149:52"><name pos:start="149:38" pos:end="149:41">size</name> <operator pos:start="149:43" pos:end="149:43">/</operator> <name pos:start="149:45" pos:end="149:52">size_mul</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="151:13" pos:end="153:25">else if<condition pos:start="151:20" pos:end="151:34">(<expr pos:start="151:21" pos:end="151:33"><name pos:start="151:21" pos:end="151:24">size</name><operator pos:start="151:25" pos:end="151:25">/</operator><name pos:start="151:26" pos:end="151:33">size_mul</name></expr>)</condition><block type="pseudo" pos:start="153:17" pos:end="153:25"><block_content pos:start="153:17" pos:end="153:25">

                <continue pos:start="153:17" pos:end="153:25">continue;</continue></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="159:9" pos:end="161:21"><if pos:start="159:9" pos:end="161:21">if<condition pos:start="159:11" pos:end="159:71">(<expr pos:start="159:12" pos:end="159:70"><name pos:start="159:12" pos:end="159:19">full_pts</name> <operator pos:start="159:21" pos:end="159:22">!=</operator> <operator pos:start="159:24" pos:end="159:24">(</operator><operator pos:start="159:25" pos:end="159:25">(</operator><name pos:start="159:26" pos:end="159:30">flags</name> <operator pos:start="159:32" pos:end="159:32">&amp;</operator> <name pos:start="159:34" pos:end="159:41">FLAG_PTS</name><operator pos:start="159:42" pos:end="159:42">)</operator> <operator pos:start="159:44" pos:end="159:45">&amp;&amp;</operator> <operator pos:start="159:47" pos:end="159:47">(</operator><name pos:start="159:48" pos:end="159:52">flags</name> <operator pos:start="159:54" pos:end="159:54">&amp;</operator> <name pos:start="159:56" pos:end="159:68">FLAG_FULL_PTS</name><operator pos:start="159:69" pos:end="159:69">)</operator><operator pos:start="159:70" pos:end="159:70">)</operator></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="161:21"><block_content pos:start="161:13" pos:end="161:21">

            <continue pos:start="161:13" pos:end="161:21">continue;</continue></block_content></block></if></if_stmt>

            

        <if_stmt pos:start="165:9" pos:end="187:9"><if pos:start="165:9" pos:end="177:9">if<condition pos:start="165:11" pos:end="165:26">(<expr pos:start="165:12" pos:end="165:25"><name pos:start="165:12" pos:end="165:16">flags</name><operator pos:start="165:17" pos:end="165:17">&amp;</operator><name pos:start="165:18" pos:end="165:25">FLAG_PTS</name></expr>)</condition><block pos:start="165:27" pos:end="177:9">{<block_content pos:start="167:13" pos:end="175:13">

            <if_stmt pos:start="167:13" pos:end="175:13"><if pos:start="167:13" pos:end="171:13">if<condition pos:start="167:15" pos:end="167:35">(<expr pos:start="167:16" pos:end="167:34"><name pos:start="167:16" pos:end="167:20">flags</name><operator pos:start="167:21" pos:end="167:21">&amp;</operator><name pos:start="167:22" pos:end="167:34">FLAG_FULL_PTS</name></expr>)</condition><block pos:start="167:36" pos:end="171:13">{<block_content pos:start="169:17" pos:end="169:42">

                <expr_stmt pos:start="169:17" pos:end="169:42"><expr pos:start="169:17" pos:end="169:41"><name pos:start="169:17" pos:end="169:22">length</name> <operator pos:start="169:24" pos:end="169:25">+=</operator> <call pos:start="169:27" pos:end="169:41"><name pos:start="169:27" pos:end="169:36">get_length</name><argument_list pos:start="169:37" pos:end="169:41">(<argument pos:start="169:38" pos:end="169:40"><expr pos:start="169:38" pos:end="169:40"><name pos:start="169:38" pos:end="169:40">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="171:14" pos:end="175:13">else<block pos:start="171:18" pos:end="175:13">{<block_content pos:start="173:17" pos:end="173:46">

                <expr_stmt pos:start="173:17" pos:end="173:46"><expr pos:start="173:17" pos:end="173:45"><name pos:start="173:17" pos:end="173:22">length</name> <operator pos:start="173:24" pos:end="173:25">+=</operator> <call pos:start="173:27" pos:end="173:45"><name pos:start="173:27" pos:end="173:36">get_length</name><argument_list pos:start="173:37" pos:end="173:45">(<argument pos:start="173:38" pos:end="173:44"><expr pos:start="173:38" pos:end="173:44"><name pos:start="173:38" pos:end="173:44">lsb_pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><else pos:start="177:10" pos:end="187:9">else<block pos:start="177:14" pos:end="187:9">{<block_content pos:start="179:13" pos:end="185:36">

            <decl_stmt pos:start="179:13" pos:end="179:62"><decl pos:start="179:13" pos:end="179:61"><type pos:start="179:13" pos:end="179:15"><name pos:start="179:13" pos:end="179:15">int</name></type> <name pos:start="179:17" pos:end="179:21">delta</name><init pos:start="179:22" pos:end="179:61">= <expr pos:start="179:24" pos:end="179:61"><name pos:start="179:24" pos:end="179:61"><name pos:start="179:24" pos:end="179:29">stream</name><operator pos:start="179:30" pos:end="179:31">-&gt;</operator><name pos:start="179:32" pos:end="179:44">lru_pts_delta</name><index pos:start="179:45" pos:end="179:61">[<expr pos:start="179:46" pos:end="179:60"><operator pos:start="179:46" pos:end="179:46">(</operator><name pos:start="179:47" pos:end="179:51">flags</name> <operator pos:start="179:53" pos:end="179:53">&amp;</operator> <literal type="number" pos:start="179:55" pos:end="179:56">12</literal><operator pos:start="179:57" pos:end="179:57">)</operator><operator pos:start="179:58" pos:end="179:59">&gt;&gt;</operator><literal type="number" pos:start="179:60" pos:end="179:60">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="181:13" pos:end="183:25"><if pos:start="181:13" pos:end="183:25">if<condition pos:start="181:15" pos:end="181:47">(<expr pos:start="181:16" pos:end="181:46"><name pos:start="181:16" pos:end="181:20">delta</name> <operator pos:start="181:22" pos:end="181:23">!=</operator> <name pos:start="181:25" pos:end="181:27">pts</name> <operator pos:start="181:29" pos:end="181:29">-</operator> <name pos:start="181:31" pos:end="181:46"><name pos:start="181:31" pos:end="181:36">stream</name><operator pos:start="181:37" pos:end="181:38">-&gt;</operator><name pos:start="181:39" pos:end="181:46">last_pts</name></name></expr>)</condition><block type="pseudo" pos:start="183:17" pos:end="183:25"><block_content pos:start="183:17" pos:end="183:25">

                <continue pos:start="183:17" pos:end="183:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:36"><expr pos:start="185:13" pos:end="185:35"><call pos:start="185:13" pos:end="185:35"><name pos:start="185:13" pos:end="185:18">assert</name><argument_list pos:start="185:19" pos:end="185:35">(<argument pos:start="185:20" pos:end="185:34"><expr pos:start="185:20" pos:end="185:34"><name pos:start="185:20" pos:end="185:29">frame_type</name> <operator pos:start="185:31" pos:end="185:32">==</operator> <literal type="number" pos:start="185:34" pos:end="185:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="191:9" pos:end="197:9"><if pos:start="191:9" pos:end="197:9">if<condition pos:start="191:11" pos:end="191:32">(<expr pos:start="191:12" pos:end="191:31"><name pos:start="191:12" pos:end="191:17">length</name> <operator pos:start="191:19" pos:end="191:19">&lt;</operator> <name pos:start="191:21" pos:end="191:31">best_length</name></expr>)</condition><block pos:start="191:33" pos:end="197:9">{<block_content pos:start="193:13" pos:end="195:25">

            <expr_stmt pos:start="193:13" pos:end="193:32"><expr pos:start="193:13" pos:end="193:31"><name pos:start="193:13" pos:end="193:23">best_length</name><operator pos:start="193:24" pos:end="193:24">=</operator> <name pos:start="193:26" pos:end="193:31">length</name></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:25"><expr pos:start="195:13" pos:end="195:24"><name pos:start="195:13" pos:end="195:22">frame_code</name><operator pos:start="195:23" pos:end="195:23">=</operator><name pos:start="195:24" pos:end="195:24">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<comment type="line" pos:start="199:1" pos:end="199:170">//    av_log(s, AV_LOG_DEBUG, "%d %d %d %d %d %d %d %d %d %d\n", key_frame, frame_type, full_pts, size, stream_index, flags, size_mul, size_lsb, stream_id_plus1, length);</comment>

    </block_content>}</block></for>



    <expr_stmt pos:start="205:5" pos:end="205:29"><expr pos:start="205:5" pos:end="205:28"><call pos:start="205:5" pos:end="205:28"><name pos:start="205:5" pos:end="205:10">assert</name><argument_list pos:start="205:11" pos:end="205:28">(<argument pos:start="205:12" pos:end="205:27"><expr pos:start="205:12" pos:end="205:27"><name pos:start="205:12" pos:end="205:21">frame_code</name> <operator pos:start="205:23" pos:end="205:24">!=</operator> <operator pos:start="205:26" pos:end="205:26">-</operator><literal type="number" pos:start="205:27" pos:end="205:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:45"><expr pos:start="207:5" pos:end="207:44"><name pos:start="207:5" pos:end="207:9">flags</name><operator pos:start="207:10" pos:end="207:10">=</operator> <name pos:start="207:12" pos:end="207:38"><name pos:start="207:12" pos:end="207:14">nut</name><operator pos:start="207:15" pos:end="207:16">-&gt;</operator><name pos:start="207:17" pos:end="207:26">frame_code</name><index pos:start="207:27" pos:end="207:38">[<expr pos:start="207:28" pos:end="207:37"><name pos:start="207:28" pos:end="207:37">frame_code</name></expr>]</index></name><operator pos:start="207:39" pos:end="207:39">.</operator><name pos:start="207:40" pos:end="207:44">flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:51"><expr pos:start="209:5" pos:end="209:50"><name pos:start="209:5" pos:end="209:12">size_mul</name><operator pos:start="209:13" pos:end="209:13">=</operator> <name pos:start="209:15" pos:end="209:41"><name pos:start="209:15" pos:end="209:17">nut</name><operator pos:start="209:18" pos:end="209:19">-&gt;</operator><name pos:start="209:20" pos:end="209:29">frame_code</name><index pos:start="209:30" pos:end="209:41">[<expr pos:start="209:31" pos:end="209:40"><name pos:start="209:31" pos:end="209:40">frame_code</name></expr>]</index></name><operator pos:start="209:42" pos:end="209:42">.</operator><name pos:start="209:43" pos:end="209:50">size_mul</name></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="232:0"><expr pos:start="211:5" pos:end="211:50"><name pos:start="211:5" pos:end="211:12">size_lsb</name><operator pos:start="211:13" pos:end="211:13">=</operator> <name pos:start="211:15" pos:end="211:41"><name pos:start="211:15" pos:end="211:17">nut</name><operator pos:start="211:18" pos:end="211:19">-&gt;</operator><name pos:start="211:20" pos:end="211:29">frame_code</name><index pos:start="211:30" pos:end="211:41">[<expr pos:start="211:31" pos:end="211:40"><name pos:start="211:31" pos:end="211:40">frame_code</name></expr>]</index></name><operator pos:start="211:42" pos:end="211:42">.</operator><name pos:start="211:43" pos:end="211:50">size_lsb</name></expr>;</expr_stmt>

<cpp:if pos:start="213:1" pos:end="213:5">#<cpp:directive pos:start="213:2" pos:end="213:3">if</cpp:directive> <expr pos:start="213:5" pos:end="213:5"><literal type="number" pos:start="213:5" pos:end="213:5">0</literal></expr></cpp:if>

    best_length /= 7;

    best_length ++; <comment type="line" pos:start="217:21" pos:end="217:32">//frame_code</comment>

    if(frame_type&gt;0){

        best_length += 4; <comment type="line" pos:start="221:27" pos:end="221:41">//packet header</comment>

        if(frame_type&gt;1)

            best_length += 8; <comment type="line" pos:start="225:31" pos:end="225:42">// startcode</comment>

    }

    av_log(s, AV_LOG_DEBUG, "kf:%d ft:%d pt:%d fc:%2X len:%2d size:%d stream:%d flag:%d mul:%d lsb:%d s+1:%d pts_delta:%d\n", key_frame, frame_type, full_pts ? 2 : ((flags &amp; FLAG_PTS) ? 1 : 0), frame_code, best_length, size, stream_index, flags, size_mul, size_lsb, nut-&gt;frame_code[frame_code].stream_id_plus1,(int)(pts - stream-&gt;last_pts));

<cpp:endif pos:start="231:1" pos:end="231:6">#<cpp:directive pos:start="231:2" pos:end="231:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="235:5" pos:end="237:41"><if pos:start="235:5" pos:end="237:41">if <condition pos:start="235:8" pos:end="235:22">(<expr pos:start="235:9" pos:end="235:21"><name pos:start="235:9" pos:end="235:18">frame_type</name><operator pos:start="235:19" pos:end="235:20">==</operator><literal type="number" pos:start="235:21" pos:end="235:21">2</literal></expr>)</condition><block type="pseudo" pos:start="237:9" pos:end="237:41"><block_content pos:start="237:9" pos:end="237:41">

	<expr_stmt pos:start="237:9" pos:end="237:41"><expr pos:start="237:9" pos:end="237:40"><call pos:start="237:9" pos:end="237:40"><name pos:start="237:9" pos:end="237:16">put_be64</name><argument_list pos:start="237:17" pos:end="237:40">(<argument pos:start="237:18" pos:end="237:19"><expr pos:start="237:18" pos:end="237:19"><name pos:start="237:18" pos:end="237:19">bc</name></expr></argument>, <argument pos:start="237:22" pos:end="237:39"><expr pos:start="237:22" pos:end="237:39"><name pos:start="237:22" pos:end="237:39">KEYFRAME_STARTCODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:29"><expr pos:start="239:5" pos:end="239:28"><call pos:start="239:5" pos:end="239:28"><name pos:start="239:5" pos:end="239:12">put_byte</name><argument_list pos:start="239:13" pos:end="239:28">(<argument pos:start="239:14" pos:end="239:15"><expr pos:start="239:14" pos:end="239:15"><name pos:start="239:14" pos:end="239:15">bc</name></expr></argument>, <argument pos:start="239:18" pos:end="239:27"><expr pos:start="239:18" pos:end="239:27"><name pos:start="239:18" pos:end="239:27">frame_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="243:5" pos:end="245:70"><if pos:start="243:5" pos:end="245:70">if<condition pos:start="243:7" pos:end="243:20">(<expr pos:start="243:8" pos:end="243:19"><name pos:start="243:8" pos:end="243:17">frame_type</name><operator pos:start="243:18" pos:end="243:18">&gt;</operator><literal type="number" pos:start="243:19" pos:end="243:19">0</literal></expr>)</condition><block type="pseudo" pos:start="245:9" pos:end="245:70"><block_content pos:start="245:9" pos:end="245:70">

        <expr_stmt pos:start="245:9" pos:end="245:70"><expr pos:start="245:9" pos:end="245:69"><call pos:start="245:9" pos:end="245:69"><name pos:start="245:9" pos:end="245:24">put_packetheader</name><argument_list pos:start="245:25" pos:end="245:69">(<argument pos:start="245:26" pos:end="245:28"><expr pos:start="245:26" pos:end="245:28"><name pos:start="245:26" pos:end="245:28">nut</name></expr></argument>, <argument pos:start="245:31" pos:end="245:32"><expr pos:start="245:31" pos:end="245:32"><name pos:start="245:31" pos:end="245:32">bc</name></expr></argument>, <argument pos:start="245:35" pos:end="245:68"><expr pos:start="245:35" pos:end="245:68"><call pos:start="245:35" pos:end="245:68"><name pos:start="245:35" pos:end="245:39">FFMAX</name><argument_list pos:start="245:40" pos:end="245:68">(<argument pos:start="245:41" pos:end="245:47"><expr pos:start="245:41" pos:end="245:47"><name pos:start="245:41" pos:end="245:44">size</name><operator pos:start="245:45" pos:end="245:45">+</operator><literal type="number" pos:start="245:46" pos:end="245:47">20</literal></expr></argument>, <argument pos:start="245:50" pos:end="245:67"><expr pos:start="245:50" pos:end="245:67"><name pos:start="245:50" pos:end="245:67">MAX_TYPE1_DISTANCE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="247:5" pos:end="249:32"><if pos:start="247:5" pos:end="249:32">if<condition pos:start="247:7" pos:end="247:56">(<expr pos:start="247:8" pos:end="247:55"><name pos:start="247:8" pos:end="247:34"><name pos:start="247:8" pos:end="247:10">nut</name><operator pos:start="247:11" pos:end="247:12">-&gt;</operator><name pos:start="247:13" pos:end="247:22">frame_code</name><index pos:start="247:23" pos:end="247:34">[<expr pos:start="247:24" pos:end="247:33"><name pos:start="247:24" pos:end="247:33">frame_code</name></expr>]</index></name><operator pos:start="247:35" pos:end="247:35">.</operator><name pos:start="247:36" pos:end="247:50">stream_id_plus1</name> <operator pos:start="247:52" pos:end="247:53">==</operator> <literal type="number" pos:start="247:55" pos:end="247:55">0</literal></expr>)</condition><block type="pseudo" pos:start="249:9" pos:end="249:32"><block_content pos:start="249:9" pos:end="249:32">

        <expr_stmt pos:start="249:9" pos:end="249:32"><expr pos:start="249:9" pos:end="249:31"><call pos:start="249:9" pos:end="249:31"><name pos:start="249:9" pos:end="249:13">put_v</name><argument_list pos:start="249:14" pos:end="249:31">(<argument pos:start="249:15" pos:end="249:16"><expr pos:start="249:15" pos:end="249:16"><name pos:start="249:15" pos:end="249:16">bc</name></expr></argument>, <argument pos:start="249:19" pos:end="249:30"><expr pos:start="249:19" pos:end="249:30"><name pos:start="249:19" pos:end="249:30">stream_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="251:5" pos:end="261:5"><if pos:start="251:5" pos:end="261:5">if <condition pos:start="251:8" pos:end="251:25">(<expr pos:start="251:9" pos:end="251:24"><name pos:start="251:9" pos:end="251:13">flags</name> <operator pos:start="251:15" pos:end="251:15">&amp;</operator> <name pos:start="251:17" pos:end="251:24">FLAG_PTS</name></expr>)</condition><block pos:start="251:26" pos:end="261:5">{<block_content pos:start="253:9" pos:end="259:31">

        <if_stmt pos:start="253:9" pos:end="259:31"><if pos:start="253:9" pos:end="255:27">if <condition pos:start="253:12" pos:end="253:34">(<expr pos:start="253:13" pos:end="253:33"><name pos:start="253:13" pos:end="253:17">flags</name> <operator pos:start="253:19" pos:end="253:19">&amp;</operator> <name pos:start="253:21" pos:end="253:33">FLAG_FULL_PTS</name></expr>)</condition><block type="pseudo" pos:start="255:13" pos:end="255:27"><block_content pos:start="255:13" pos:end="255:27">

            <expr_stmt pos:start="255:13" pos:end="255:27"><expr pos:start="255:13" pos:end="255:26"><call pos:start="255:13" pos:end="255:26"><name pos:start="255:13" pos:end="255:17">put_v</name><argument_list pos:start="255:18" pos:end="255:26">(<argument pos:start="255:19" pos:end="255:20"><expr pos:start="255:19" pos:end="255:20"><name pos:start="255:19" pos:end="255:20">bc</name></expr></argument>, <argument pos:start="255:23" pos:end="255:25"><expr pos:start="255:23" pos:end="255:25"><name pos:start="255:23" pos:end="255:25">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="257:9" pos:end="259:31">else<block type="pseudo" pos:start="259:13" pos:end="259:31"><block_content pos:start="259:13" pos:end="259:31">

            <expr_stmt pos:start="259:13" pos:end="259:31"><expr pos:start="259:13" pos:end="259:30"><call pos:start="259:13" pos:end="259:30"><name pos:start="259:13" pos:end="259:17">put_v</name><argument_list pos:start="259:18" pos:end="259:30">(<argument pos:start="259:19" pos:end="259:20"><expr pos:start="259:19" pos:end="259:20"><name pos:start="259:19" pos:end="259:20">bc</name></expr></argument>, <argument pos:start="259:23" pos:end="259:29"><expr pos:start="259:23" pos:end="259:29"><name pos:start="259:23" pos:end="259:29">lsb_pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="263:5" pos:end="265:35"><if pos:start="263:5" pos:end="265:35">if<condition pos:start="263:7" pos:end="263:30">(<expr pos:start="263:8" pos:end="263:29"><name pos:start="263:8" pos:end="263:12">flags</name> <operator pos:start="263:14" pos:end="263:14">&amp;</operator> <name pos:start="263:16" pos:end="263:29">FLAG_DATA_SIZE</name></expr>)</condition><block type="pseudo" pos:start="265:9" pos:end="265:35"><block_content pos:start="265:9" pos:end="265:35">

        <expr_stmt pos:start="265:9" pos:end="265:35"><expr pos:start="265:9" pos:end="265:34"><call pos:start="265:9" pos:end="265:34"><name pos:start="265:9" pos:end="265:13">put_v</name><argument_list pos:start="265:14" pos:end="265:34">(<argument pos:start="265:15" pos:end="265:16"><expr pos:start="265:15" pos:end="265:16"><name pos:start="265:15" pos:end="265:16">bc</name></expr></argument>, <argument pos:start="265:19" pos:end="265:33"><expr pos:start="265:19" pos:end="265:33"><name pos:start="265:19" pos:end="265:22">size</name> <operator pos:start="265:24" pos:end="265:24">/</operator> <name pos:start="265:26" pos:end="265:33">size_mul</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="267:5" pos:end="273:5"><if pos:start="267:5" pos:end="273:5">if<condition pos:start="267:7" pos:end="267:33">(<expr pos:start="267:8" pos:end="267:32"><name pos:start="267:8" pos:end="267:11">size</name> <operator pos:start="267:13" pos:end="267:13">&gt;</operator> <name pos:start="267:15" pos:end="267:32">MAX_TYPE1_DISTANCE</name></expr>)</condition><block pos:start="267:34" pos:end="273:5">{<block_content pos:start="269:9" pos:end="271:43">

        <expr_stmt pos:start="269:9" pos:end="269:31"><expr pos:start="269:9" pos:end="269:30"><call pos:start="269:9" pos:end="269:30"><name pos:start="269:9" pos:end="269:14">assert</name><argument_list pos:start="269:15" pos:end="269:30">(<argument pos:start="269:16" pos:end="269:29"><expr pos:start="269:16" pos:end="269:29"><name pos:start="269:16" pos:end="269:25">frame_type</name> <operator pos:start="269:27" pos:end="269:27">&gt;</operator> <literal type="number" pos:start="269:29" pos:end="269:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:43"><expr pos:start="271:9" pos:end="271:42"><call pos:start="271:9" pos:end="271:42"><name pos:start="271:9" pos:end="271:27">update_packetheader</name><argument_list pos:start="271:28" pos:end="271:42">(<argument pos:start="271:29" pos:end="271:31"><expr pos:start="271:29" pos:end="271:31"><name pos:start="271:29" pos:end="271:31">nut</name></expr></argument>, <argument pos:start="271:34" pos:end="271:35"><expr pos:start="271:34" pos:end="271:35"><name pos:start="271:34" pos:end="271:35">bc</name></expr></argument>, <argument pos:start="271:38" pos:end="271:41"><expr pos:start="271:38" pos:end="271:41"><name pos:start="271:38" pos:end="271:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    

    <expr_stmt pos:start="277:5" pos:end="277:30"><expr pos:start="277:5" pos:end="277:29"><call pos:start="277:5" pos:end="277:29"><name pos:start="277:5" pos:end="277:14">put_buffer</name><argument_list pos:start="277:15" pos:end="277:29">(<argument pos:start="277:16" pos:end="277:17"><expr pos:start="277:16" pos:end="277:17"><name pos:start="277:16" pos:end="277:17">bc</name></expr></argument>, <argument pos:start="277:20" pos:end="277:22"><expr pos:start="277:20" pos:end="277:22"><name pos:start="277:20" pos:end="277:22">buf</name></expr></argument>, <argument pos:start="277:25" pos:end="277:28"><expr pos:start="277:25" pos:end="277:28"><name pos:start="277:25" pos:end="277:28">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="281:5" pos:end="281:89"><expr pos:start="281:5" pos:end="281:88"><call pos:start="281:5" pos:end="281:88"><name pos:start="281:5" pos:end="281:10">update</name><argument_list pos:start="281:11" pos:end="281:88">(<argument pos:start="281:12" pos:end="281:14"><expr pos:start="281:12" pos:end="281:14"><name pos:start="281:12" pos:end="281:14">nut</name></expr></argument>, <argument pos:start="281:17" pos:end="281:28"><expr pos:start="281:17" pos:end="281:28"><name pos:start="281:17" pos:end="281:28">stream_index</name></expr></argument>, <argument pos:start="281:31" pos:end="281:41"><expr pos:start="281:31" pos:end="281:41"><name pos:start="281:31" pos:end="281:41">frame_start</name></expr></argument>, <argument pos:start="281:44" pos:end="281:53"><expr pos:start="281:44" pos:end="281:53"><name pos:start="281:44" pos:end="281:53">frame_type</name></expr></argument>, <argument pos:start="281:56" pos:end="281:65"><expr pos:start="281:56" pos:end="281:65"><name pos:start="281:56" pos:end="281:65">frame_code</name></expr></argument>, <argument pos:start="281:68" pos:end="281:76"><expr pos:start="281:68" pos:end="281:76"><name pos:start="281:68" pos:end="281:76">key_frame</name></expr></argument>, <argument pos:start="281:79" pos:end="281:82"><expr pos:start="281:79" pos:end="281:82"><name pos:start="281:79" pos:end="281:82">size</name></expr></argument>, <argument pos:start="281:85" pos:end="281:87"><expr pos:start="281:85" pos:end="281:87"><name pos:start="281:85" pos:end="281:87">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <return pos:start="285:5" pos:end="285:13">return <expr pos:start="285:12" pos:end="285:12"><literal type="number" pos:start="285:12" pos:end="285:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
