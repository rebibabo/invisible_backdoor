<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8799.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:12">void</name></type> <name pos:start="1:14" pos:end="1:35">ff_MPV_common_init_x86</name><parameter_list pos:start="1:36" pos:end="1:54">(<parameter pos:start="1:37" pos:end="1:53"><decl pos:start="1:37" pos:end="1:53"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">MpegEncContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="42:0">

<cpp:if pos:start="5:1" pos:end="5:19">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:19">HAVE_INLINE_ASM</name></expr></cpp:if>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">cpu_flags</name> <init pos:start="7:19" pos:end="7:38">= <expr pos:start="7:21" pos:end="7:38"><call pos:start="7:21" pos:end="7:38"><name pos:start="7:21" pos:end="7:36">av_get_cpu_flags</name><argument_list pos:start="7:37" pos:end="7:38">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="42:0"><if pos:start="11:5" pos:end="42:0">if <condition pos:start="11:8" pos:end="11:36">(<expr pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:17">cpu_flags</name> <operator pos:start="11:19" pos:end="11:19">&amp;</operator> <name pos:start="11:21" pos:end="11:35">AV_CPU_FLAG_MMX</name></expr>)</condition> <block pos:start="11:38" pos:end="42:0">{<block_content pos:start="13:9" pos:end="37:9">

        <expr_stmt pos:start="13:9" pos:end="13:69"><expr pos:start="13:9" pos:end="13:68"><name pos:start="13:9" pos:end="13:36"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:36">dct_unquantize_h263_intra</name></name> <operator pos:start="13:38" pos:end="13:38">=</operator> <name pos:start="13:40" pos:end="13:68">dct_unquantize_h263_intra_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:69"><expr pos:start="15:9" pos:end="15:68"><name pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:36">dct_unquantize_h263_inter</name></name> <operator pos:start="15:38" pos:end="15:38">=</operator> <name pos:start="15:40" pos:end="15:68">dct_unquantize_h263_inter_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:71"><expr pos:start="17:9" pos:end="17:70"><name pos:start="17:9" pos:end="17:37"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:37">dct_unquantize_mpeg1_intra</name></name> <operator pos:start="17:39" pos:end="17:39">=</operator> <name pos:start="17:41" pos:end="17:70">dct_unquantize_mpeg1_intra_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:71"><expr pos:start="19:9" pos:end="19:70"><name pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:37">dct_unquantize_mpeg1_inter</name></name> <operator pos:start="19:39" pos:end="19:39">=</operator> <name pos:start="19:41" pos:end="19:70">dct_unquantize_mpeg1_inter_mmx</name></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:75"><if pos:start="21:9" pos:end="23:75">if<condition pos:start="21:11" pos:end="21:45">(<expr pos:start="21:12" pos:end="21:44"><operator pos:start="21:12" pos:end="21:12">!</operator><operator pos:start="21:13" pos:end="21:13">(</operator><name pos:start="21:14" pos:end="21:21"><name pos:start="21:14" pos:end="21:14">s</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:21">flags</name></name> <operator pos:start="21:23" pos:end="21:23">&amp;</operator> <name pos:start="21:25" pos:end="21:43">CODEC_FLAG_BITEXACT</name><operator pos:start="21:44" pos:end="21:44">)</operator></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:75"><block_content pos:start="23:13" pos:end="23:75">

            <expr_stmt pos:start="23:13" pos:end="23:75"><expr pos:start="23:13" pos:end="23:74"><name pos:start="23:13" pos:end="23:41"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:41">dct_unquantize_mpeg2_intra</name></name> <operator pos:start="23:43" pos:end="23:43">=</operator> <name pos:start="23:45" pos:end="23:74">dct_unquantize_mpeg2_intra_mmx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:71"><expr pos:start="25:9" pos:end="25:70"><name pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:37">dct_unquantize_mpeg2_inter</name></name> <operator pos:start="25:39" pos:end="25:39">=</operator> <name pos:start="25:41" pos:end="25:70">dct_unquantize_mpeg2_inter_mmx</name></expr>;</expr_stmt>



        <if_stmt pos:start="29:9" pos:end="37:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:41">(<expr pos:start="29:13" pos:end="29:40"><name pos:start="29:13" pos:end="29:21">cpu_flags</name> <operator pos:start="29:23" pos:end="29:23">&amp;</operator> <name pos:start="29:25" pos:end="29:40">AV_CPU_FLAG_SSE2</name></expr>)</condition> <block pos:start="29:43" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:45">

            <expr_stmt pos:start="31:13" pos:end="31:45"><expr pos:start="31:13" pos:end="31:44"><name pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:26">denoise_dct</name></name><operator pos:start="31:27" pos:end="31:27">=</operator> <name pos:start="31:29" pos:end="31:44">denoise_dct_sse2</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="33:11" pos:end="37:9">else <block pos:start="33:16" pos:end="37:9">{<block_content pos:start="35:17" pos:end="35:48">

                <expr_stmt pos:start="35:17" pos:end="35:48"><expr pos:start="35:17" pos:end="35:47"><name pos:start="35:17" pos:end="35:30"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:30">denoise_dct</name></name><operator pos:start="35:31" pos:end="35:31">=</operator> <name pos:start="35:33" pos:end="35:47">denoise_dct_mmx</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="41:1" pos:end="41:6">#<cpp:directive pos:start="41:2" pos:end="41:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="41:8" pos:end="41:28">/* HAVE_INLINE_ASM */</comment>

</block_content>}</block></function>
</unit>
