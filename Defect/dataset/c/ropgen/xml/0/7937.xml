<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7937.c" pos:tabs="8"><function pos:start="1:1" pos:end="711:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">decode_nal_units</name><parameter_list pos:start="1:28" pos:end="3:48">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:39">H264Context</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">h</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:57">uint8_t</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">buf</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:76"><decl pos:start="1:65" pos:end="1:76"><type pos:start="1:65" pos:end="1:76"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:76">buf_size</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:47"><decl pos:start="3:29" pos:end="3:47"><type pos:start="3:29" pos:end="3:47"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:47">parse_extradata</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="711:1">{<block_content pos:start="7:5" pos:end="709:21">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier><specifier pos:start="7:21" pos:end="7:25">const</specifier></type> <name pos:start="7:27" pos:end="7:27">s</name>     <init pos:start="7:33" pos:end="7:39">= <expr pos:start="7:35" pos:end="7:39"><operator pos:start="7:35" pos:end="7:35">&amp;</operator><name pos:start="7:36" pos:end="7:39"><name pos:start="7:36" pos:end="7:36">h</name><operator pos:start="7:37" pos:end="7:38">-&gt;</operator><name pos:start="7:39" pos:end="7:39">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier><specifier pos:start="9:21" pos:end="9:25">const</specifier></type> <name pos:start="9:27" pos:end="9:31">avctx</name> <init pos:start="9:33" pos:end="9:42">= <expr pos:start="9:35" pos:end="9:42"><name pos:start="9:35" pos:end="9:42"><name pos:start="9:35" pos:end="9:35">s</name><operator pos:start="9:36" pos:end="9:37">-&gt;</operator><name pos:start="9:38" pos:end="9:42">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">H264Context</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">hx</name></decl>;</decl_stmt> <comment type="line" format="doxygen" pos:start="11:22" pos:end="11:40">///&lt; thread context</comment>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">buf_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:21">context_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">next_avc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:62"><decl pos:start="19:5" pos:end="19:61"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:12">pass</name> <init pos:start="19:14" pos:end="19:61">= <expr pos:start="19:16" pos:end="19:61"><operator pos:start="19:16" pos:end="19:16">!</operator><operator pos:start="19:17" pos:end="19:17">(</operator><name pos:start="19:18" pos:end="19:42"><name pos:start="19:18" pos:end="19:22">avctx</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:42">active_thread_type</name></name> <operator pos:start="19:44" pos:end="19:44">&amp;</operator> <name pos:start="19:46" pos:end="19:60">FF_THREAD_FRAME</name><operator pos:start="19:61" pos:end="19:61">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:24"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:19">nals_needed</name> <init pos:start="21:21" pos:end="21:23">= <expr pos:start="21:23" pos:end="21:23"><literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr></init></decl>;</decl_stmt> <comment type="line" format="doxygen" pos:start="21:26" pos:end="21:99">///&lt; number of NALs that need decoding before the next frame thread starts</comment>

    <decl_stmt pos:start="23:5" pos:end="23:18"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:17">nal_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:22"><decl pos:start="25:5" pos:end="25:21"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:19">idr_cleared</name><init pos:start="25:20" pos:end="25:21">=<expr pos:start="25:21" pos:end="25:21"><literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:24"><decl pos:start="27:5" pos:end="27:23"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:19">first_slice</name> <init pos:start="27:21" pos:end="27:23">= <expr pos:start="27:23" pos:end="27:23"><literal type="number" pos:start="27:23" pos:end="27:23">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:5">h</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:20">nal_unit_type</name></name><operator pos:start="31:21" pos:end="31:21">=</operator> <literal type="number" pos:start="31:23" pos:end="31:23">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="37:35"><if pos:start="35:5" pos:end="37:35">if<condition pos:start="35:7" pos:end="35:31">(<expr pos:start="35:8" pos:end="35:30"><operator pos:start="35:8" pos:end="35:8">!</operator><name pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:30">slice_context_count</name></name></expr>)</condition><block type="pseudo" pos:start="37:10" pos:end="37:35"><block_content pos:start="37:10" pos:end="37:35">

         <expr_stmt pos:start="37:10" pos:end="37:35"><expr pos:start="37:10" pos:end="37:34"><name pos:start="37:10" pos:end="37:31"><name pos:start="37:10" pos:end="37:10">s</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:31">slice_context_count</name></name><operator pos:start="37:32" pos:end="37:32">=</operator> <literal type="number" pos:start="37:34" pos:end="37:34">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:45"><expr pos:start="39:5" pos:end="39:44"><name pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:5">h</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:19">max_contexts</name></name> <operator pos:start="39:21" pos:end="39:21">=</operator> <name pos:start="39:23" pos:end="39:44"><name pos:start="39:23" pos:end="39:23">s</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:44">slice_context_count</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="51:5"><if pos:start="41:5" pos:end="51:5">if <condition pos:start="41:8" pos:end="41:42">(<expr pos:start="41:9" pos:end="41:41"><operator pos:start="41:9" pos:end="41:9">!</operator><operator pos:start="41:10" pos:end="41:10">(</operator><name pos:start="41:11" pos:end="41:19"><name pos:start="41:11" pos:end="41:11">s</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:19">flags2</name></name> <operator pos:start="41:21" pos:end="41:21">&amp;</operator> <name pos:start="41:23" pos:end="41:40">CODEC_FLAG2_CHUNKS</name><operator pos:start="41:41" pos:end="41:41">)</operator></expr>)</condition> <block pos:start="41:44" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:29">

        <expr_stmt pos:start="43:9" pos:end="43:29"><expr pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:9">h</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:24">current_slice</name></name> <operator pos:start="43:26" pos:end="43:26">=</operator> <literal type="number" pos:start="43:28" pos:end="43:28">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="47:42"><if pos:start="45:9" pos:end="47:42">if <condition pos:start="45:12" pos:end="45:28">(<expr pos:start="45:13" pos:end="45:27"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:27"><name pos:start="45:14" pos:end="45:14">s</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:27">first_field</name></name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:42"><block_content pos:start="47:13" pos:end="47:42">

            <expr_stmt pos:start="47:13" pos:end="47:42"><expr pos:start="47:13" pos:end="47:41"><name pos:start="47:13" pos:end="47:34"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:34">current_picture_ptr</name></name> <operator pos:start="47:36" pos:end="47:36">=</operator> <name pos:start="47:38" pos:end="47:41">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><call pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:25">ff_h264_reset_sei</name><argument_list pos:start="49:26" pos:end="49:28">(<argument pos:start="49:27" pos:end="49:27"><expr pos:start="49:27" pos:end="49:27"><name pos:start="49:27" pos:end="49:27">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="65:5"><if pos:start="55:5" pos:end="65:5">if <condition pos:start="55:8" pos:end="55:32">(<expr pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:26"><name pos:start="55:9" pos:end="55:9">h</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:26">nal_length_size</name></name> <operator pos:start="55:28" pos:end="55:29">==</operator> <literal type="number" pos:start="55:31" pos:end="55:31">4</literal></expr>)</condition> <block pos:start="55:34" pos:end="65:5">{<block_content pos:start="57:9" pos:end="63:26">

        <if_stmt pos:start="57:9" pos:end="63:26"><if pos:start="57:9" pos:end="61:9">if <condition pos:start="57:12" pos:end="57:85">(<expr pos:start="57:13" pos:end="57:84"><name pos:start="57:13" pos:end="57:20">buf_size</name> <operator pos:start="57:22" pos:end="57:22">&gt;</operator> <literal type="number" pos:start="57:24" pos:end="57:24">8</literal> <operator pos:start="57:26" pos:end="57:27">&amp;&amp;</operator> <call pos:start="57:29" pos:end="57:40"><name pos:start="57:29" pos:end="57:35">AV_RB32</name><argument_list pos:start="57:36" pos:end="57:40">(<argument pos:start="57:37" pos:end="57:39"><expr pos:start="57:37" pos:end="57:39"><name pos:start="57:37" pos:end="57:39">buf</name></expr></argument>)</argument_list></call> <operator pos:start="57:42" pos:end="57:43">==</operator> <literal type="number" pos:start="57:45" pos:end="57:45">1</literal> <operator pos:start="57:47" pos:end="57:48">&amp;&amp;</operator> <call pos:start="57:50" pos:end="57:63"><name pos:start="57:50" pos:end="57:56">AV_RB32</name><argument_list pos:start="57:57" pos:end="57:63">(<argument pos:start="57:58" pos:end="57:62"><expr pos:start="57:58" pos:end="57:62"><name pos:start="57:58" pos:end="57:60">buf</name><operator pos:start="57:61" pos:end="57:61">+</operator><literal type="number" pos:start="57:62" pos:end="57:62">5</literal></expr></argument>)</argument_list></call> <operator pos:start="57:65" pos:end="57:65">&gt;</operator> <operator pos:start="57:67" pos:end="57:67">(</operator><name pos:start="57:68" pos:end="57:75">unsigned</name><operator pos:start="57:76" pos:end="57:76">)</operator><name pos:start="57:77" pos:end="57:84">buf_size</name></expr>)</condition> <block pos:start="57:87" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:26">

            <expr_stmt pos:start="59:13" pos:end="59:26"><expr pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:13">h</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:21">is_avc</name></name> <operator pos:start="59:23" pos:end="59:23">=</operator> <literal type="number" pos:start="59:25" pos:end="59:25">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="61:10" pos:end="63:26">else if<condition pos:start="61:17" pos:end="61:88">(<expr pos:start="61:18" pos:end="61:87"><name pos:start="61:18" pos:end="61:25">buf_size</name> <operator pos:start="61:27" pos:end="61:27">&gt;</operator> <literal type="number" pos:start="61:29" pos:end="61:29">3</literal> <operator pos:start="61:31" pos:end="61:32">&amp;&amp;</operator> <call pos:start="61:34" pos:end="61:45"><name pos:start="61:34" pos:end="61:40">AV_RB32</name><argument_list pos:start="61:41" pos:end="61:45">(<argument pos:start="61:42" pos:end="61:44"><expr pos:start="61:42" pos:end="61:44"><name pos:start="61:42" pos:end="61:44">buf</name></expr></argument>)</argument_list></call> <operator pos:start="61:47" pos:end="61:47">&gt;</operator> <literal type="number" pos:start="61:49" pos:end="61:49">1</literal> <operator pos:start="61:51" pos:end="61:52">&amp;&amp;</operator> <call pos:start="61:54" pos:end="61:65"><name pos:start="61:54" pos:end="61:60">AV_RB32</name><argument_list pos:start="61:61" pos:end="61:65">(<argument pos:start="61:62" pos:end="61:64"><expr pos:start="61:62" pos:end="61:64"><name pos:start="61:62" pos:end="61:64">buf</name></expr></argument>)</argument_list></call> <operator pos:start="61:67" pos:end="61:68">&lt;=</operator> <operator pos:start="61:70" pos:end="61:70">(</operator><name pos:start="61:71" pos:end="61:78">unsigned</name><operator pos:start="61:79" pos:end="61:79">)</operator><name pos:start="61:80" pos:end="61:87">buf_size</name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:26"><block_content pos:start="63:13" pos:end="63:26">

            <expr_stmt pos:start="63:13" pos:end="63:26"><expr pos:start="63:13" pos:end="63:25"><name pos:start="63:13" pos:end="63:21"><name pos:start="63:13" pos:end="63:13">h</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:21">is_avc</name></name> <operator pos:start="63:23" pos:end="63:23">=</operator> <literal type="number" pos:start="63:25" pos:end="63:25">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="69:5" pos:end="685:5">for <control pos:start="69:9" pos:end="69:29">(<init pos:start="69:10" pos:end="69:10">;</init> <condition pos:start="69:12" pos:end="69:21"><expr pos:start="69:12" pos:end="69:20"><name pos:start="69:12" pos:end="69:15">pass</name> <operator pos:start="69:17" pos:end="69:18">&lt;=</operator> <literal type="number" pos:start="69:20" pos:end="69:20">1</literal></expr>;</condition> <incr pos:start="69:23" pos:end="69:28"><expr pos:start="69:23" pos:end="69:28"><name pos:start="69:23" pos:end="69:26">pass</name><operator pos:start="69:27" pos:end="69:28">++</operator></expr></incr>)</control> <block pos:start="69:31" pos:end="685:5">{<block_content pos:start="71:9" pos:end="683:9">

        <expr_stmt pos:start="71:9" pos:end="71:26"><expr pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:17">buf_index</name>     <operator pos:start="71:23" pos:end="71:23">=</operator> <literal type="number" pos:start="71:25" pos:end="71:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:26"><expr pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:21">context_count</name> <operator pos:start="73:23" pos:end="73:23">=</operator> <literal type="number" pos:start="73:25" pos:end="73:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:49"><expr pos:start="75:9" pos:end="75:48"><name pos:start="75:9" pos:end="75:16">next_avc</name>      <operator pos:start="75:23" pos:end="75:23">=</operator> <ternary pos:start="75:25" pos:end="75:48"><condition pos:start="75:25" pos:end="75:35"><expr pos:start="75:25" pos:end="75:33"><name pos:start="75:25" pos:end="75:33"><name pos:start="75:25" pos:end="75:25">h</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:33">is_avc</name></name></expr> ?</condition><then pos:start="75:37" pos:end="75:37"> <expr pos:start="75:37" pos:end="75:37"><literal type="number" pos:start="75:37" pos:end="75:37">0</literal></expr> </then><else pos:start="75:39" pos:end="75:48">: <expr pos:start="75:41" pos:end="75:48"><name pos:start="75:41" pos:end="75:48">buf_size</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:26"><expr pos:start="77:9" pos:end="77:25"><name pos:start="77:9" pos:end="77:17">nal_index</name>     <operator pos:start="77:23" pos:end="77:23">=</operator> <literal type="number" pos:start="77:25" pos:end="77:25">0</literal></expr>;</expr_stmt>

        <for pos:start="79:9" pos:end="683:9">for <control pos:start="79:13" pos:end="79:16">(<init pos:start="79:14" pos:end="79:14">;</init><condition pos:start="79:15" pos:end="79:15">;</condition><incr/>)</control> <block pos:start="79:18" pos:end="683:9">{<block_content pos:start="81:13" pos:end="681:13">

            <decl_stmt pos:start="81:13" pos:end="81:25"><decl pos:start="81:13" pos:end="81:24"><type pos:start="81:13" pos:end="81:15"><name pos:start="81:13" pos:end="81:15">int</name></type> <name pos:start="81:17" pos:end="81:24">consumed</name></decl>;</decl_stmt>

            <decl_stmt pos:start="83:13" pos:end="83:27"><decl pos:start="83:13" pos:end="83:26"><type pos:start="83:13" pos:end="83:15"><name pos:start="83:13" pos:end="83:15">int</name></type> <name pos:start="83:17" pos:end="83:26">dst_length</name></decl>;</decl_stmt>

            <decl_stmt pos:start="85:13" pos:end="85:27"><decl pos:start="85:13" pos:end="85:26"><type pos:start="85:13" pos:end="85:15"><name pos:start="85:13" pos:end="85:15">int</name></type> <name pos:start="85:17" pos:end="85:26">bit_length</name></decl>;</decl_stmt>

            <decl_stmt pos:start="87:13" pos:end="87:31"><decl pos:start="87:13" pos:end="87:30"><type pos:start="87:13" pos:end="87:27"><specifier pos:start="87:13" pos:end="87:17">const</specifier> <name pos:start="87:19" pos:end="87:25">uint8_t</name> <modifier pos:start="87:27" pos:end="87:27">*</modifier></type><name pos:start="87:28" pos:end="87:30">ptr</name></decl>;</decl_stmt>

            <decl_stmt pos:start="89:13" pos:end="89:31"><decl pos:start="89:13" pos:end="89:17"><type pos:start="89:13" pos:end="89:15"><name pos:start="89:13" pos:end="89:15">int</name></type> <name pos:start="89:17" pos:end="89:17">i</name></decl>, <decl pos:start="89:20" pos:end="89:30"><type ref="prev" pos:start="89:13" pos:end="89:15"/><name pos:start="89:20" pos:end="89:26">nalsize</name> <init pos:start="89:28" pos:end="89:30">= <expr pos:start="89:30" pos:end="89:30"><literal type="number" pos:start="89:30" pos:end="89:30">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="91:13" pos:end="91:20"><decl pos:start="91:13" pos:end="91:19"><type pos:start="91:13" pos:end="91:15"><name pos:start="91:13" pos:end="91:15">int</name></type> <name pos:start="91:17" pos:end="91:19">err</name></decl>;</decl_stmt>



            <if_stmt pos:start="95:13" pos:end="153:13"><if pos:start="95:13" pos:end="119:13">if <condition pos:start="95:16" pos:end="95:38">(<expr pos:start="95:17" pos:end="95:37"><name pos:start="95:17" pos:end="95:25">buf_index</name> <operator pos:start="95:27" pos:end="95:28">&gt;=</operator> <name pos:start="95:30" pos:end="95:37">next_avc</name></expr>)</condition> <block pos:start="95:40" pos:end="119:13">{<block_content pos:start="97:17" pos:end="117:47">

                <if_stmt pos:start="97:17" pos:end="99:26"><if pos:start="97:17" pos:end="99:26">if <condition pos:start="97:20" pos:end="97:63">(<expr pos:start="97:21" pos:end="97:62"><name pos:start="97:21" pos:end="97:29">buf_index</name> <operator pos:start="97:31" pos:end="97:32">&gt;=</operator> <name pos:start="97:34" pos:end="97:41">buf_size</name> <operator pos:start="97:43" pos:end="97:43">-</operator> <name pos:start="97:45" pos:end="97:62"><name pos:start="97:45" pos:end="97:45">h</name><operator pos:start="97:46" pos:end="97:47">-&gt;</operator><name pos:start="97:48" pos:end="97:62">nal_length_size</name></name></expr>)</condition><block type="pseudo" pos:start="99:21" pos:end="99:26"><block_content pos:start="99:21" pos:end="99:26">

                    <break pos:start="99:21" pos:end="99:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:28"><expr pos:start="101:17" pos:end="101:27"><name pos:start="101:17" pos:end="101:23">nalsize</name> <operator pos:start="101:25" pos:end="101:25">=</operator> <literal type="number" pos:start="101:27" pos:end="101:27">0</literal></expr>;</expr_stmt>

                <for pos:start="103:17" pos:end="105:64">for <control pos:start="103:21" pos:end="103:56">(<init pos:start="103:22" pos:end="103:27"><expr pos:start="103:22" pos:end="103:26"><name pos:start="103:22" pos:end="103:22">i</name> <operator pos:start="103:24" pos:end="103:24">=</operator> <literal type="number" pos:start="103:26" pos:end="103:26">0</literal></expr>;</init> <condition pos:start="103:29" pos:end="103:51"><expr pos:start="103:29" pos:end="103:50"><name pos:start="103:29" pos:end="103:29">i</name> <operator pos:start="103:31" pos:end="103:31">&lt;</operator> <name pos:start="103:33" pos:end="103:50"><name pos:start="103:33" pos:end="103:33">h</name><operator pos:start="103:34" pos:end="103:35">-&gt;</operator><name pos:start="103:36" pos:end="103:50">nal_length_size</name></name></expr>;</condition> <incr pos:start="103:53" pos:end="103:55"><expr pos:start="103:53" pos:end="103:55"><name pos:start="103:53" pos:end="103:53">i</name><operator pos:start="103:54" pos:end="103:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="105:21" pos:end="105:64"><block_content pos:start="105:21" pos:end="105:64">

                    <expr_stmt pos:start="105:21" pos:end="105:64"><expr pos:start="105:21" pos:end="105:63"><name pos:start="105:21" pos:end="105:27">nalsize</name> <operator pos:start="105:29" pos:end="105:29">=</operator> <operator pos:start="105:31" pos:end="105:31">(</operator><name pos:start="105:32" pos:end="105:38">nalsize</name> <operator pos:start="105:40" pos:end="105:41">&lt;&lt;</operator> <literal type="number" pos:start="105:43" pos:end="105:43">8</literal><operator pos:start="105:44" pos:end="105:44">)</operator> <operator pos:start="105:46" pos:end="105:46">|</operator> <name pos:start="105:48" pos:end="105:63"><name pos:start="105:48" pos:end="105:50">buf</name><index pos:start="105:51" pos:end="105:63">[<expr pos:start="105:52" pos:end="105:62"><name pos:start="105:52" pos:end="105:60">buf_index</name><operator pos:start="105:61" pos:end="105:62">++</operator></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <if_stmt pos:start="107:17" pos:end="115:17"><if pos:start="107:17" pos:end="115:17">if <condition pos:start="107:20" pos:end="107:67">(<expr pos:start="107:21" pos:end="107:66"><name pos:start="107:21" pos:end="107:27">nalsize</name> <operator pos:start="107:29" pos:end="107:30">&lt;=</operator> <literal type="number" pos:start="107:32" pos:end="107:32">0</literal> <operator pos:start="107:34" pos:end="107:35">||</operator> <name pos:start="107:37" pos:end="107:43">nalsize</name> <operator pos:start="107:45" pos:end="107:45">&gt;</operator> <name pos:start="107:47" pos:end="107:54">buf_size</name> <operator pos:start="107:56" pos:end="107:56">-</operator> <name pos:start="107:58" pos:end="107:66">buf_index</name></expr>)</condition> <block pos:start="107:69" pos:end="115:17">{<block_content pos:start="109:21" pos:end="113:26">

                    <expr_stmt pos:start="109:21" pos:end="111:58"><expr pos:start="109:21" pos:end="111:57"><call pos:start="109:21" pos:end="111:57"><name pos:start="109:21" pos:end="109:26">av_log</name><argument_list pos:start="109:27" pos:end="111:57">(<argument pos:start="109:28" pos:end="109:37"><expr pos:start="109:28" pos:end="109:37"><name pos:start="109:28" pos:end="109:37"><name pos:start="109:28" pos:end="109:28">h</name><operator pos:start="109:29" pos:end="109:30">-&gt;</operator><name pos:start="109:31" pos:end="109:31">s</name><operator pos:start="109:32" pos:end="109:32">.</operator><name pos:start="109:33" pos:end="109:37">avctx</name></name></expr></argument>, <argument pos:start="109:40" pos:end="109:51"><expr pos:start="109:40" pos:end="109:51"><name pos:start="109:40" pos:end="109:51">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="111:28" pos:end="111:47"><expr pos:start="111:28" pos:end="111:47"><literal type="string" pos:start="111:28" pos:end="111:47">"AVC: nal size %d\n"</literal></expr></argument>, <argument pos:start="111:50" pos:end="111:56"><expr pos:start="111:50" pos:end="111:56"><name pos:start="111:50" pos:end="111:56">nalsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="113:21" pos:end="113:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:47"><expr pos:start="117:17" pos:end="117:46"><name pos:start="117:17" pos:end="117:24">next_avc</name> <operator pos:start="117:26" pos:end="117:26">=</operator> <name pos:start="117:28" pos:end="117:36">buf_index</name> <operator pos:start="117:38" pos:end="117:38">+</operator> <name pos:start="117:40" pos:end="117:46">nalsize</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="119:15" pos:end="153:13">else <block pos:start="119:20" pos:end="153:13">{<block_content pos:start="123:17" pos:end="151:29">

                <comment type="line" pos:start="121:17" pos:end="121:43">// start code prefix search</comment>

                <for pos:start="123:17" pos:end="133:30">for <control pos:start="123:21" pos:end="123:61">(<init pos:start="123:22" pos:end="123:22">;</init> <condition pos:start="123:24" pos:end="123:48"><expr pos:start="123:24" pos:end="123:47"><name pos:start="123:24" pos:end="123:32">buf_index</name> <operator pos:start="123:34" pos:end="123:34">+</operator> <literal type="number" pos:start="123:36" pos:end="123:36">3</literal> <operator pos:start="123:38" pos:end="123:38">&lt;</operator> <name pos:start="123:40" pos:end="123:47">next_avc</name></expr>;</condition> <incr pos:start="123:50" pos:end="123:60"><expr pos:start="123:50" pos:end="123:60"><name pos:start="123:50" pos:end="123:58">buf_index</name><operator pos:start="123:59" pos:end="123:60">++</operator></expr></incr>)</control><block type="pseudo" pos:start="127:21" pos:end="133:30"><block_content pos:start="127:21" pos:end="133:30">

                    <comment type="line" pos:start="125:21" pos:end="125:73">// This should always succeed in the first iteration.</comment>

                    <if_stmt pos:start="127:21" pos:end="133:30"><if pos:start="127:21" pos:end="133:30">if <condition pos:start="127:24" pos:end="131:48">(<expr pos:start="127:25" pos:end="131:47"><name pos:start="127:25" pos:end="127:38"><name pos:start="127:25" pos:end="127:27">buf</name><index pos:start="127:28" pos:end="127:38">[<expr pos:start="127:29" pos:end="127:37"><name pos:start="127:29" pos:end="127:37">buf_index</name></expr>]</index></name>     <operator pos:start="127:44" pos:end="127:45">==</operator> <literal type="number" pos:start="127:47" pos:end="127:47">0</literal> <operator pos:start="127:49" pos:end="127:50">&amp;&amp;</operator>

                        <name pos:start="129:25" pos:end="129:42"><name pos:start="129:25" pos:end="129:27">buf</name><index pos:start="129:28" pos:end="129:42">[<expr pos:start="129:29" pos:end="129:41"><name pos:start="129:29" pos:end="129:37">buf_index</name> <operator pos:start="129:39" pos:end="129:39">+</operator> <literal type="number" pos:start="129:41" pos:end="129:41">1</literal></expr>]</index></name> <operator pos:start="129:44" pos:end="129:45">==</operator> <literal type="number" pos:start="129:47" pos:end="129:47">0</literal> <operator pos:start="129:49" pos:end="129:50">&amp;&amp;</operator>

                        <name pos:start="131:25" pos:end="131:42"><name pos:start="131:25" pos:end="131:27">buf</name><index pos:start="131:28" pos:end="131:42">[<expr pos:start="131:29" pos:end="131:41"><name pos:start="131:29" pos:end="131:37">buf_index</name> <operator pos:start="131:39" pos:end="131:39">+</operator> <literal type="number" pos:start="131:41" pos:end="131:41">2</literal></expr>]</index></name> <operator pos:start="131:44" pos:end="131:45">==</operator> <literal type="number" pos:start="131:47" pos:end="131:47">1</literal></expr>)</condition><block type="pseudo" pos:start="133:25" pos:end="133:30"><block_content pos:start="133:25" pos:end="133:30">

                        <break pos:start="133:25" pos:end="133:30">break;</break></block_content></block></if></if_stmt></block_content></block></for>



                <if_stmt pos:start="137:17" pos:end="143:17"><if pos:start="137:17" pos:end="143:17">if <condition pos:start="137:20" pos:end="137:46">(<expr pos:start="137:21" pos:end="137:45"><name pos:start="137:21" pos:end="137:29">buf_index</name> <operator pos:start="137:31" pos:end="137:31">+</operator> <literal type="number" pos:start="137:33" pos:end="137:33">3</literal> <operator pos:start="137:35" pos:end="137:36">&gt;=</operator> <name pos:start="137:38" pos:end="137:45">buf_size</name></expr>)</condition> <block pos:start="137:48" pos:end="143:17">{<block_content pos:start="139:21" pos:end="141:26">

                    <expr_stmt pos:start="139:21" pos:end="139:41"><expr pos:start="139:21" pos:end="139:40"><name pos:start="139:21" pos:end="139:29">buf_index</name> <operator pos:start="139:31" pos:end="139:31">=</operator> <name pos:start="139:33" pos:end="139:40">buf_size</name></expr>;</expr_stmt>

                    <break pos:start="141:21" pos:end="141:26">break;</break>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="147:17" pos:end="147:31"><expr pos:start="147:17" pos:end="147:30"><name pos:start="147:17" pos:end="147:25">buf_index</name> <operator pos:start="147:27" pos:end="147:28">+=</operator> <literal type="number" pos:start="147:30" pos:end="147:30">3</literal></expr>;</expr_stmt>

                <if_stmt pos:start="149:17" pos:end="151:29"><if pos:start="149:17" pos:end="151:29">if <condition pos:start="149:20" pos:end="149:42">(<expr pos:start="149:21" pos:end="149:41"><name pos:start="149:21" pos:end="149:29">buf_index</name> <operator pos:start="149:31" pos:end="149:32">&gt;=</operator> <name pos:start="149:34" pos:end="149:41">next_avc</name></expr>)</condition><block type="pseudo" pos:start="151:21" pos:end="151:29"><block_content pos:start="151:21" pos:end="151:29">

                    <continue pos:start="151:21" pos:end="151:29">continue;</continue></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="157:13" pos:end="157:50"><expr pos:start="157:13" pos:end="157:49"><name pos:start="157:13" pos:end="157:14">hx</name> <operator pos:start="157:16" pos:end="157:16">=</operator> <name pos:start="157:18" pos:end="157:49"><name pos:start="157:18" pos:end="157:18">h</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:34">thread_context</name><index pos:start="157:35" pos:end="157:49">[<expr pos:start="157:36" pos:end="157:48"><name pos:start="157:36" pos:end="157:48">context_count</name></expr>]</index></name></expr>;</expr_stmt>



            <expr_stmt pos:start="161:13" pos:end="163:70"><expr pos:start="161:13" pos:end="163:69"><name pos:start="161:13" pos:end="161:15">ptr</name> <operator pos:start="161:17" pos:end="161:17">=</operator> <call pos:start="161:19" pos:end="163:69"><name pos:start="161:19" pos:end="161:36">ff_h264_decode_nal</name><argument_list pos:start="161:37" pos:end="163:69">(<argument pos:start="161:38" pos:end="161:39"><expr pos:start="161:38" pos:end="161:39"><name pos:start="161:38" pos:end="161:39">hx</name></expr></argument>, <argument pos:start="161:42" pos:end="161:56"><expr pos:start="161:42" pos:end="161:56"><name pos:start="161:42" pos:end="161:44">buf</name> <operator pos:start="161:46" pos:end="161:46">+</operator> <name pos:start="161:48" pos:end="161:56">buf_index</name></expr></argument>, <argument pos:start="161:59" pos:end="161:69"><expr pos:start="161:59" pos:end="161:69"><operator pos:start="161:59" pos:end="161:59">&amp;</operator><name pos:start="161:60" pos:end="161:69">dst_length</name></expr></argument>,

                                     <argument pos:start="163:38" pos:end="163:46"><expr pos:start="163:38" pos:end="163:46"><operator pos:start="163:38" pos:end="163:38">&amp;</operator><name pos:start="163:39" pos:end="163:46">consumed</name></expr></argument>, <argument pos:start="163:49" pos:end="163:68"><expr pos:start="163:49" pos:end="163:68"><name pos:start="163:49" pos:end="163:56">next_avc</name> <operator pos:start="163:58" pos:end="163:58">-</operator> <name pos:start="163:60" pos:end="163:68">buf_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="165:13" pos:end="171:13"><if pos:start="165:13" pos:end="171:13">if <condition pos:start="165:16" pos:end="165:46">(<expr pos:start="165:17" pos:end="165:45"><name pos:start="165:17" pos:end="165:19">ptr</name> <operator pos:start="165:21" pos:end="165:22">==</operator> <name pos:start="165:24" pos:end="165:27">NULL</name> <operator pos:start="165:29" pos:end="165:30">||</operator> <name pos:start="165:32" pos:end="165:41">dst_length</name> <operator pos:start="165:43" pos:end="165:43">&lt;</operator> <literal type="number" pos:start="165:45" pos:end="165:45">0</literal></expr>)</condition> <block pos:start="165:48" pos:end="171:13">{<block_content pos:start="167:17" pos:end="169:25">

                <expr_stmt pos:start="167:17" pos:end="167:31"><expr pos:start="167:17" pos:end="167:30"><name pos:start="167:17" pos:end="167:25">buf_index</name> <operator pos:start="167:27" pos:end="167:27">=</operator> <operator pos:start="167:29" pos:end="167:29">-</operator><literal type="number" pos:start="167:30" pos:end="167:30">1</literal></expr>;</expr_stmt>

                <goto pos:start="169:17" pos:end="169:25">goto <name pos:start="169:22" pos:end="169:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:37"><expr pos:start="173:13" pos:end="173:36"><name pos:start="173:13" pos:end="173:13">i</name> <operator pos:start="173:15" pos:end="173:15">=</operator> <name pos:start="173:17" pos:end="173:25">buf_index</name> <operator pos:start="173:27" pos:end="173:27">+</operator> <name pos:start="173:29" pos:end="173:36">consumed</name></expr>;</expr_stmt>

            <if_stmt pos:start="175:13" pos:end="181:55"><if pos:start="175:13" pos:end="181:55">if <condition pos:start="175:16" pos:end="179:57">(<expr pos:start="175:17" pos:end="179:56"><operator pos:start="175:17" pos:end="175:17">(</operator><name pos:start="175:18" pos:end="175:35"><name pos:start="175:18" pos:end="175:18">s</name><operator pos:start="175:19" pos:end="175:20">-&gt;</operator><name pos:start="175:21" pos:end="175:35">workaround_bugs</name></name> <operator pos:start="175:37" pos:end="175:37">&amp;</operator> <name pos:start="175:39" pos:end="175:55">FF_BUG_AUTODETECT</name><operator pos:start="175:56" pos:end="175:56">)</operator> <operator pos:start="175:58" pos:end="175:59">&amp;&amp;</operator> <name pos:start="175:61" pos:end="175:61">i</name> <operator pos:start="175:63" pos:end="175:63">+</operator> <literal type="number" pos:start="175:65" pos:end="175:65">3</literal> <operator pos:start="175:67" pos:end="175:67">&lt;</operator> <name pos:start="175:69" pos:end="175:76">next_avc</name> <operator pos:start="175:78" pos:end="175:79">&amp;&amp;</operator>

                <name pos:start="177:17" pos:end="177:22"><name pos:start="177:17" pos:end="177:19">buf</name><index pos:start="177:20" pos:end="177:22">[<expr pos:start="177:21" pos:end="177:21"><name pos:start="177:21" pos:end="177:21">i</name></expr>]</index></name>     <operator pos:start="177:28" pos:end="177:29">==</operator> <literal type="number" pos:start="177:31" pos:end="177:34">0x00</literal> <operator pos:start="177:36" pos:end="177:37">&amp;&amp;</operator> <name pos:start="177:39" pos:end="177:48"><name pos:start="177:39" pos:end="177:41">buf</name><index pos:start="177:42" pos:end="177:48">[<expr pos:start="177:43" pos:end="177:47"><name pos:start="177:43" pos:end="177:43">i</name> <operator pos:start="177:45" pos:end="177:45">+</operator> <literal type="number" pos:start="177:47" pos:end="177:47">1</literal></expr>]</index></name> <operator pos:start="177:50" pos:end="177:51">==</operator> <literal type="number" pos:start="177:53" pos:end="177:56">0x00</literal> <operator pos:start="177:58" pos:end="177:59">&amp;&amp;</operator>

                <name pos:start="179:17" pos:end="179:26"><name pos:start="179:17" pos:end="179:19">buf</name><index pos:start="179:20" pos:end="179:26">[<expr pos:start="179:21" pos:end="179:25"><name pos:start="179:21" pos:end="179:21">i</name> <operator pos:start="179:23" pos:end="179:23">+</operator> <literal type="number" pos:start="179:25" pos:end="179:25">2</literal></expr>]</index></name> <operator pos:start="179:28" pos:end="179:29">==</operator> <literal type="number" pos:start="179:31" pos:end="179:34">0x01</literal> <operator pos:start="179:36" pos:end="179:37">&amp;&amp;</operator> <name pos:start="179:39" pos:end="179:48"><name pos:start="179:39" pos:end="179:41">buf</name><index pos:start="179:42" pos:end="179:48">[<expr pos:start="179:43" pos:end="179:47"><name pos:start="179:43" pos:end="179:43">i</name> <operator pos:start="179:45" pos:end="179:45">+</operator> <literal type="number" pos:start="179:47" pos:end="179:47">3</literal></expr>]</index></name> <operator pos:start="179:50" pos:end="179:51">==</operator> <literal type="number" pos:start="179:53" pos:end="179:56">0xE0</literal></expr>)</condition><block type="pseudo" pos:start="181:17" pos:end="181:55"><block_content pos:start="181:17" pos:end="181:55">

                <expr_stmt pos:start="181:17" pos:end="181:55"><expr pos:start="181:17" pos:end="181:54"><name pos:start="181:17" pos:end="181:34"><name pos:start="181:17" pos:end="181:17">s</name><operator pos:start="181:18" pos:end="181:19">-&gt;</operator><name pos:start="181:20" pos:end="181:34">workaround_bugs</name></name> <operator pos:start="181:36" pos:end="181:37">|=</operator> <name pos:start="181:39" pos:end="181:54">FF_BUG_TRUNCATED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="185:13" pos:end="189:33"><if pos:start="185:13" pos:end="189:33">if <condition pos:start="185:16" pos:end="185:57">(<expr pos:start="185:17" pos:end="185:56"><operator pos:start="185:17" pos:end="185:17">!</operator><operator pos:start="185:18" pos:end="185:18">(</operator><name pos:start="185:19" pos:end="185:36"><name pos:start="185:19" pos:end="185:19">s</name><operator pos:start="185:20" pos:end="185:21">-&gt;</operator><name pos:start="185:22" pos:end="185:36">workaround_bugs</name></name> <operator pos:start="185:38" pos:end="185:38">&amp;</operator> <name pos:start="185:40" pos:end="185:55">FF_BUG_TRUNCATED</name><operator pos:start="185:56" pos:end="185:56">)</operator></expr>)</condition><block type="pseudo" pos:start="187:17" pos:end="189:33"><block_content pos:start="187:17" pos:end="189:33">

                <while pos:start="187:17" pos:end="189:33">while<condition pos:start="187:22" pos:end="187:65">(<expr pos:start="187:23" pos:end="187:64"><name pos:start="187:23" pos:end="187:32">dst_length</name> <operator pos:start="187:34" pos:end="187:34">&gt;</operator> <literal type="number" pos:start="187:36" pos:end="187:36">0</literal> <operator pos:start="187:38" pos:end="187:39">&amp;&amp;</operator> <name pos:start="187:41" pos:end="187:59"><name pos:start="187:41" pos:end="187:43">ptr</name><index pos:start="187:44" pos:end="187:59">[<expr pos:start="187:45" pos:end="187:58"><name pos:start="187:45" pos:end="187:54">dst_length</name> <operator pos:start="187:56" pos:end="187:56">-</operator> <literal type="number" pos:start="187:58" pos:end="187:58">1</literal></expr>]</index></name> <operator pos:start="187:61" pos:end="187:62">==</operator> <literal type="number" pos:start="187:64" pos:end="187:64">0</literal></expr>)</condition><block type="pseudo" pos:start="189:21" pos:end="189:33"><block_content pos:start="189:21" pos:end="189:33">

                    <expr_stmt pos:start="189:21" pos:end="189:33"><expr pos:start="189:21" pos:end="189:32"><name pos:start="189:21" pos:end="189:30">dst_length</name><operator pos:start="189:31" pos:end="189:32">--</operator></expr>;</expr_stmt></block_content></block></while></block_content></block></if></if_stmt>

            <expr_stmt pos:start="191:13" pos:end="195:87"><expr pos:start="191:13" pos:end="195:86"><name pos:start="191:13" pos:end="191:22">bit_length</name> <operator pos:start="191:24" pos:end="191:24">=</operator> <ternary pos:start="191:26" pos:end="195:86"><condition pos:start="191:26" pos:end="191:38"><expr pos:start="191:26" pos:end="191:36"><operator pos:start="191:26" pos:end="191:26">!</operator><name pos:start="191:27" pos:end="191:36">dst_length</name></expr> ?</condition><then pos:start="191:40" pos:end="191:40"> <expr pos:start="191:40" pos:end="191:40"><literal type="number" pos:start="191:40" pos:end="191:40">0</literal></expr>

                                     </then><else pos:start="193:38" pos:end="195:86">: <expr pos:start="193:40" pos:end="195:86"><operator pos:start="193:40" pos:end="193:40">(</operator><literal type="number" pos:start="193:41" pos:end="193:41">8</literal> <operator pos:start="193:43" pos:end="193:43">*</operator> <name pos:start="193:45" pos:end="193:54">dst_length</name> <operator pos:start="193:56" pos:end="193:56">-</operator>

                                        <call pos:start="195:41" pos:end="195:85"><name pos:start="195:41" pos:end="195:60">decode_rbsp_trailing</name><argument_list pos:start="195:61" pos:end="195:85">(<argument pos:start="195:62" pos:end="195:62"><expr pos:start="195:62" pos:end="195:62"><name pos:start="195:62" pos:end="195:62">h</name></expr></argument>, <argument pos:start="195:65" pos:end="195:84"><expr pos:start="195:65" pos:end="195:84"><name pos:start="195:65" pos:end="195:67">ptr</name> <operator pos:start="195:69" pos:end="195:69">+</operator> <name pos:start="195:71" pos:end="195:80">dst_length</name> <operator pos:start="195:82" pos:end="195:82">-</operator> <literal type="number" pos:start="195:84" pos:end="195:84">1</literal></expr></argument>)</argument_list></call><operator pos:start="195:86" pos:end="195:86">)</operator></expr></else></ternary></expr>;</expr_stmt>



            <if_stmt pos:start="199:13" pos:end="201:166"><if pos:start="199:13" pos:end="201:166">if <condition pos:start="199:16" pos:end="199:53">(<expr pos:start="199:17" pos:end="199:52"><name pos:start="199:17" pos:end="199:31"><name pos:start="199:17" pos:end="199:17">s</name><operator pos:start="199:18" pos:end="199:19">-&gt;</operator><name pos:start="199:20" pos:end="199:24">avctx</name><operator pos:start="199:25" pos:end="199:26">-&gt;</operator><name pos:start="199:27" pos:end="199:31">debug</name></name> <operator pos:start="199:33" pos:end="199:33">&amp;</operator> <name pos:start="199:35" pos:end="199:52">FF_DEBUG_STARTCODE</name></expr>)</condition><block type="pseudo" pos:start="201:17" pos:end="201:166"><block_content pos:start="201:17" pos:end="201:166">

                <expr_stmt pos:start="201:17" pos:end="201:166"><expr pos:start="201:17" pos:end="201:165"><call pos:start="201:17" pos:end="201:165"><name pos:start="201:17" pos:end="201:22">av_log</name><argument_list pos:start="201:23" pos:end="201:165">(<argument pos:start="201:24" pos:end="201:33"><expr pos:start="201:24" pos:end="201:33"><name pos:start="201:24" pos:end="201:33"><name pos:start="201:24" pos:end="201:24">h</name><operator pos:start="201:25" pos:end="201:26">-&gt;</operator><name pos:start="201:27" pos:end="201:27">s</name><operator pos:start="201:28" pos:end="201:28">.</operator><name pos:start="201:29" pos:end="201:33">avctx</name></name></expr></argument>, <argument pos:start="201:36" pos:end="201:47"><expr pos:start="201:36" pos:end="201:47"><name pos:start="201:36" pos:end="201:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="201:50" pos:end="201:89"><expr pos:start="201:50" pos:end="201:89"><literal type="string" pos:start="201:50" pos:end="201:89">"NAL %d/%d at %d/%d length %d pass %d\n"</literal></expr></argument>, <argument pos:start="201:92" pos:end="201:108"><expr pos:start="201:92" pos:end="201:108"><name pos:start="201:92" pos:end="201:108"><name pos:start="201:92" pos:end="201:93">hx</name><operator pos:start="201:94" pos:end="201:95">-&gt;</operator><name pos:start="201:96" pos:end="201:108">nal_unit_type</name></name></expr></argument>, <argument pos:start="201:111" pos:end="201:125"><expr pos:start="201:111" pos:end="201:125"><name pos:start="201:111" pos:end="201:125"><name pos:start="201:111" pos:end="201:112">hx</name><operator pos:start="201:113" pos:end="201:114">-&gt;</operator><name pos:start="201:115" pos:end="201:125">nal_ref_idc</name></name></expr></argument>, <argument pos:start="201:128" pos:end="201:136"><expr pos:start="201:128" pos:end="201:136"><name pos:start="201:128" pos:end="201:136">buf_index</name></expr></argument>, <argument pos:start="201:139" pos:end="201:146"><expr pos:start="201:139" pos:end="201:146"><name pos:start="201:139" pos:end="201:146">buf_size</name></expr></argument>, <argument pos:start="201:149" pos:end="201:158"><expr pos:start="201:149" pos:end="201:158"><name pos:start="201:149" pos:end="201:158">dst_length</name></expr></argument>, <argument pos:start="201:161" pos:end="201:164"><expr pos:start="201:161" pos:end="201:164"><name pos:start="201:161" pos:end="201:164">pass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="205:13" pos:end="211:42"><if pos:start="205:13" pos:end="211:42">if <condition pos:start="205:16" pos:end="205:62">(<expr pos:start="205:17" pos:end="205:61"><name pos:start="205:17" pos:end="205:25"><name pos:start="205:17" pos:end="205:17">h</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:25">is_avc</name></name> <operator pos:start="205:27" pos:end="205:28">&amp;&amp;</operator> <operator pos:start="205:30" pos:end="205:30">(</operator><name pos:start="205:31" pos:end="205:37">nalsize</name> <operator pos:start="205:39" pos:end="205:40">!=</operator> <name pos:start="205:42" pos:end="205:49">consumed</name><operator pos:start="205:50" pos:end="205:50">)</operator> <operator pos:start="205:52" pos:end="205:53">&amp;&amp;</operator> <name pos:start="205:55" pos:end="205:61">nalsize</name></expr>)</condition><block type="pseudo" pos:start="207:17" pos:end="211:42"><block_content pos:start="207:17" pos:end="211:42">

                <expr_stmt pos:start="207:17" pos:end="211:42"><expr pos:start="207:17" pos:end="211:41"><call pos:start="207:17" pos:end="211:41"><name pos:start="207:17" pos:end="207:22">av_log</name><argument_list pos:start="207:23" pos:end="211:41">(<argument pos:start="207:24" pos:end="207:33"><expr pos:start="207:24" pos:end="207:33"><name pos:start="207:24" pos:end="207:33"><name pos:start="207:24" pos:end="207:24">h</name><operator pos:start="207:25" pos:end="207:26">-&gt;</operator><name pos:start="207:27" pos:end="207:27">s</name><operator pos:start="207:28" pos:end="207:28">.</operator><name pos:start="207:29" pos:end="207:33">avctx</name></name></expr></argument>, <argument pos:start="207:36" pos:end="207:47"><expr pos:start="207:36" pos:end="207:47"><name pos:start="207:36" pos:end="207:47">AV_LOG_DEBUG</name></expr></argument>,

                       <argument pos:start="209:24" pos:end="209:68"><expr pos:start="209:24" pos:end="209:68"><literal type="string" pos:start="209:24" pos:end="209:68">"AVC: Consumed only %d bytes instead of %d\n"</literal></expr></argument>,

                       <argument pos:start="211:24" pos:end="211:31"><expr pos:start="211:24" pos:end="211:31"><name pos:start="211:24" pos:end="211:31">consumed</name></expr></argument>, <argument pos:start="211:34" pos:end="211:40"><expr pos:start="211:34" pos:end="211:40"><name pos:start="211:34" pos:end="211:40">nalsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="215:13" pos:end="215:34"><expr pos:start="215:13" pos:end="215:33"><name pos:start="215:13" pos:end="215:21">buf_index</name> <operator pos:start="215:23" pos:end="215:24">+=</operator> <name pos:start="215:26" pos:end="215:33">consumed</name></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:24"><expr pos:start="217:13" pos:end="217:23"><name pos:start="217:13" pos:end="217:21">nal_index</name><operator pos:start="217:22" pos:end="217:23">++</operator></expr>;</expr_stmt>



            <if_stmt pos:start="221:13" pos:end="261:13"><if pos:start="221:13" pos:end="261:13">if <condition pos:start="221:16" pos:end="221:26">(<expr pos:start="221:17" pos:end="221:25"><name pos:start="221:17" pos:end="221:20">pass</name> <operator pos:start="221:22" pos:end="221:23">==</operator> <literal type="number" pos:start="221:25" pos:end="221:25">0</literal></expr>)</condition> <block pos:start="221:28" pos:end="261:13">{<block_content pos:start="231:17" pos:end="259:25">

                <comment type="block" pos:start="223:17" pos:end="229:78">/* packets can sometimes contain multiple PPS/SPS,

                 * e.g. two PAFF field pictures in one packet, or a demuxer

                 * which splits NALs strangely if so, when frame threading we

                 * can't start the next thread until we've read all of them */</comment>

                <switch pos:start="231:17" pos:end="257:17">switch <condition pos:start="231:24" pos:end="231:42">(<expr pos:start="231:25" pos:end="231:41"><name pos:start="231:25" pos:end="231:41"><name pos:start="231:25" pos:end="231:26">hx</name><operator pos:start="231:27" pos:end="231:28">-&gt;</operator><name pos:start="231:29" pos:end="231:41">nal_unit_type</name></name></expr>)</condition> <block pos:start="231:44" pos:end="257:17">{<block_content pos:start="233:17" pos:end="255:56">

                <case pos:start="233:17" pos:end="233:29">case <expr pos:start="233:22" pos:end="233:28"><name pos:start="233:22" pos:end="233:28">NAL_SPS</name></expr>:</case>

                <case pos:start="235:17" pos:end="235:29">case <expr pos:start="235:22" pos:end="235:28"><name pos:start="235:22" pos:end="235:28">NAL_PPS</name></expr>:</case>

                    <expr_stmt pos:start="237:21" pos:end="237:44"><expr pos:start="237:21" pos:end="237:43"><name pos:start="237:21" pos:end="237:31">nals_needed</name> <operator pos:start="237:33" pos:end="237:33">=</operator> <name pos:start="237:35" pos:end="237:43">nal_index</name></expr>;</expr_stmt>

                    <break pos:start="239:21" pos:end="239:26">break;</break>

                <case pos:start="241:17" pos:end="241:29">case <expr pos:start="241:22" pos:end="241:28"><name pos:start="241:22" pos:end="241:28">NAL_DPA</name></expr>:</case>

                <case pos:start="243:17" pos:end="243:35">case <expr pos:start="243:22" pos:end="243:34"><name pos:start="243:22" pos:end="243:34">NAL_IDR_SLICE</name></expr>:</case>

                <case pos:start="245:17" pos:end="245:31">case <expr pos:start="245:22" pos:end="245:30"><name pos:start="245:22" pos:end="245:30">NAL_SLICE</name></expr>:</case>

                    <expr_stmt pos:start="247:21" pos:end="247:62"><expr pos:start="247:21" pos:end="247:61"><call pos:start="247:21" pos:end="247:61"><name pos:start="247:21" pos:end="247:33">init_get_bits</name><argument_list pos:start="247:34" pos:end="247:61">(<argument pos:start="247:35" pos:end="247:43"><expr pos:start="247:35" pos:end="247:43"><operator pos:start="247:35" pos:end="247:35">&amp;</operator><name pos:start="247:36" pos:end="247:43"><name pos:start="247:36" pos:end="247:37">hx</name><operator pos:start="247:38" pos:end="247:39">-&gt;</operator><name pos:start="247:40" pos:end="247:40">s</name><operator pos:start="247:41" pos:end="247:41">.</operator><name pos:start="247:42" pos:end="247:43">gb</name></name></expr></argument>, <argument pos:start="247:46" pos:end="247:48"><expr pos:start="247:46" pos:end="247:48"><name pos:start="247:46" pos:end="247:48">ptr</name></expr></argument>, <argument pos:start="247:51" pos:end="247:60"><expr pos:start="247:51" pos:end="247:60"><name pos:start="247:51" pos:end="247:60">bit_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="249:21" pos:end="251:48"><if pos:start="249:21" pos:end="251:48">if <condition pos:start="249:24" pos:end="249:66">(<expr pos:start="249:25" pos:end="249:65"><operator pos:start="249:25" pos:end="249:25">!</operator><call pos:start="249:26" pos:end="249:49"><name pos:start="249:26" pos:end="249:38">get_ue_golomb</name><argument_list pos:start="249:39" pos:end="249:49">(<argument pos:start="249:40" pos:end="249:48"><expr pos:start="249:40" pos:end="249:48"><operator pos:start="249:40" pos:end="249:40">&amp;</operator><name pos:start="249:41" pos:end="249:48"><name pos:start="249:41" pos:end="249:42">hx</name><operator pos:start="249:43" pos:end="249:44">-&gt;</operator><name pos:start="249:45" pos:end="249:45">s</name><operator pos:start="249:46" pos:end="249:46">.</operator><name pos:start="249:47" pos:end="249:48">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="249:51" pos:end="249:52">||</operator> <operator pos:start="249:54" pos:end="249:54">!</operator><name pos:start="249:55" pos:end="249:65">first_slice</name></expr>)</condition><block type="pseudo" pos:start="251:25" pos:end="251:48"><block_content pos:start="251:25" pos:end="251:48">

                        <expr_stmt pos:start="251:25" pos:end="251:48"><expr pos:start="251:25" pos:end="251:47"><name pos:start="251:25" pos:end="251:35">nals_needed</name> <operator pos:start="251:37" pos:end="251:37">=</operator> <name pos:start="251:39" pos:end="251:47">nal_index</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="253:21" pos:end="255:56"><if pos:start="253:21" pos:end="255:56">if <condition pos:start="253:24" pos:end="253:37">(<expr pos:start="253:25" pos:end="253:36"><operator pos:start="253:25" pos:end="253:25">!</operator><name pos:start="253:26" pos:end="253:36">first_slice</name></expr>)</condition><block type="pseudo" pos:start="255:25" pos:end="255:56"><block_content pos:start="255:25" pos:end="255:56">

                        <expr_stmt pos:start="255:25" pos:end="255:56"><expr pos:start="255:25" pos:end="255:55"><name pos:start="255:25" pos:end="255:35">first_slice</name> <operator pos:start="255:37" pos:end="255:37">=</operator> <name pos:start="255:39" pos:end="255:55"><name pos:start="255:39" pos:end="255:40">hx</name><operator pos:start="255:41" pos:end="255:42">-&gt;</operator><name pos:start="255:43" pos:end="255:55">nal_unit_type</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></switch>

                <continue pos:start="259:17" pos:end="259:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="265:13" pos:end="277:17"><if pos:start="265:13" pos:end="277:17">if <condition pos:start="265:16" pos:end="265:29">(<expr pos:start="265:17" pos:end="265:28"><operator pos:start="265:17" pos:end="265:17">!</operator><name pos:start="265:18" pos:end="265:28">first_slice</name></expr>)</condition><block type="pseudo" pos:start="267:17" pos:end="277:17"><block_content pos:start="267:17" pos:end="277:17">

                <switch pos:start="267:17" pos:end="277:17">switch <condition pos:start="267:24" pos:end="267:42">(<expr pos:start="267:25" pos:end="267:41"><name pos:start="267:25" pos:end="267:41"><name pos:start="267:25" pos:end="267:26">hx</name><operator pos:start="267:27" pos:end="267:28">-&gt;</operator><name pos:start="267:29" pos:end="267:41">nal_unit_type</name></name></expr>)</condition> <block pos:start="267:44" pos:end="277:17">{<block_content pos:start="269:17" pos:end="275:52">

                <case pos:start="269:17" pos:end="269:29">case <expr pos:start="269:22" pos:end="269:28"><name pos:start="269:22" pos:end="269:28">NAL_DPA</name></expr>:</case>

                <case pos:start="271:17" pos:end="271:35">case <expr pos:start="271:22" pos:end="271:34"><name pos:start="271:22" pos:end="271:34">NAL_IDR_SLICE</name></expr>:</case>

                <case pos:start="273:17" pos:end="273:31">case <expr pos:start="273:22" pos:end="273:30"><name pos:start="273:22" pos:end="273:30">NAL_SLICE</name></expr>:</case>

                    <expr_stmt pos:start="275:21" pos:end="275:52"><expr pos:start="275:21" pos:end="275:51"><name pos:start="275:21" pos:end="275:31">first_slice</name> <operator pos:start="275:33" pos:end="275:33">=</operator> <name pos:start="275:35" pos:end="275:51"><name pos:start="275:35" pos:end="275:36">hx</name><operator pos:start="275:37" pos:end="275:38">-&gt;</operator><name pos:start="275:39" pos:end="275:51">nal_unit_type</name></name></expr>;</expr_stmt>

                </block_content>}</block></switch></block_content></block></if></if_stmt>



            <comment type="line" pos:start="281:13" pos:end="281:42">// FIXME do not discard SEI id</comment>

            <if_stmt pos:start="283:13" pos:end="285:25"><if pos:start="283:13" pos:end="285:25">if <condition pos:start="283:16" pos:end="283:77">(<expr pos:start="283:17" pos:end="283:76"><name pos:start="283:17" pos:end="283:33"><name pos:start="283:17" pos:end="283:21">avctx</name><operator pos:start="283:22" pos:end="283:23">-&gt;</operator><name pos:start="283:24" pos:end="283:33">skip_frame</name></name> <operator pos:start="283:35" pos:end="283:36">&gt;=</operator> <name pos:start="283:38" pos:end="283:53">AVDISCARD_NONREF</name> <operator pos:start="283:55" pos:end="283:56">&amp;&amp;</operator> <name pos:start="283:58" pos:end="283:71"><name pos:start="283:58" pos:end="283:58">h</name><operator pos:start="283:59" pos:end="283:60">-&gt;</operator><name pos:start="283:61" pos:end="283:71">nal_ref_idc</name></name> <operator pos:start="283:73" pos:end="283:74">==</operator> <literal type="number" pos:start="283:76" pos:end="283:76">0</literal></expr>)</condition><block type="pseudo" pos:start="285:17" pos:end="285:25"><block_content pos:start="285:17" pos:end="285:25">

                <continue pos:start="285:17" pos:end="285:25">continue;</continue></block_content></block></if></if_stmt>



<label pos:start="289:1" pos:end="289:6"><name pos:start="289:1" pos:end="289:5">again</name>:</label>

            <comment type="block" pos:start="291:13" pos:end="295:31">/* Ignore every NAL unit type except PPS and SPS during extradata

             * parsing. Decoding slices is not possible in codec init

             * with frame-mt */</comment>

            <if_stmt pos:start="297:13" pos:end="311:13"><if pos:start="297:13" pos:end="311:13">if <condition pos:start="297:16" pos:end="303:47">(<expr pos:start="297:17" pos:end="303:46"><name pos:start="297:17" pos:end="297:31">parse_extradata</name> <operator pos:start="297:33" pos:end="297:34">&amp;&amp;</operator> <name pos:start="297:36" pos:end="297:47">HAVE_THREADS</name> <operator pos:start="297:49" pos:end="297:50">&amp;&amp;</operator>

                <operator pos:start="299:17" pos:end="299:17">(</operator><name pos:start="299:18" pos:end="299:45"><name pos:start="299:18" pos:end="299:18">s</name><operator pos:start="299:19" pos:end="299:20">-&gt;</operator><name pos:start="299:21" pos:end="299:25">avctx</name><operator pos:start="299:26" pos:end="299:27">-&gt;</operator><name pos:start="299:28" pos:end="299:45">active_thread_type</name></name> <operator pos:start="299:47" pos:end="299:47">&amp;</operator> <name pos:start="299:49" pos:end="299:63">FF_THREAD_FRAME</name><operator pos:start="299:64" pos:end="299:64">)</operator> <operator pos:start="299:66" pos:end="299:67">&amp;&amp;</operator>

                <operator pos:start="301:17" pos:end="301:17">(</operator><name pos:start="301:18" pos:end="301:34"><name pos:start="301:18" pos:end="301:19">hx</name><operator pos:start="301:20" pos:end="301:21">-&gt;</operator><name pos:start="301:22" pos:end="301:34">nal_unit_type</name></name> <operator pos:start="301:36" pos:end="301:37">!=</operator> <name pos:start="301:39" pos:end="301:45">NAL_PPS</name> <operator pos:start="301:47" pos:end="301:48">&amp;&amp;</operator>

                 <name pos:start="303:18" pos:end="303:34"><name pos:start="303:18" pos:end="303:19">hx</name><operator pos:start="303:20" pos:end="303:21">-&gt;</operator><name pos:start="303:22" pos:end="303:34">nal_unit_type</name></name> <operator pos:start="303:36" pos:end="303:37">!=</operator> <name pos:start="303:39" pos:end="303:45">NAL_SPS</name><operator pos:start="303:46" pos:end="303:46">)</operator></expr>)</condition> <block pos:start="303:49" pos:end="311:13">{<block_content pos:start="305:17" pos:end="309:50">

                <expr_stmt pos:start="305:17" pos:end="307:65"><expr pos:start="305:17" pos:end="307:64"><call pos:start="305:17" pos:end="307:64"><name pos:start="305:17" pos:end="305:22">av_log</name><argument_list pos:start="305:23" pos:end="307:64">(<argument pos:start="305:24" pos:end="305:28"><expr pos:start="305:24" pos:end="305:28"><name pos:start="305:24" pos:end="305:28">avctx</name></expr></argument>, <argument pos:start="305:31" pos:end="305:41"><expr pos:start="305:31" pos:end="305:41"><name pos:start="305:31" pos:end="305:41">AV_LOG_INFO</name></expr></argument>, <argument pos:start="305:44" pos:end="307:44"><expr pos:start="305:44" pos:end="307:44"><literal type="string" pos:start="305:44" pos:end="305:73">"Ignoring NAL unit %d during "</literal>

                       <literal type="string" pos:start="307:24" pos:end="307:44">"extradata parsing\n"</literal></expr></argument>, <argument pos:start="307:47" pos:end="307:63"><expr pos:start="307:47" pos:end="307:63"><name pos:start="307:47" pos:end="307:63"><name pos:start="307:47" pos:end="307:48">hx</name><operator pos:start="307:49" pos:end="307:50">-&gt;</operator><name pos:start="307:51" pos:end="307:63">nal_unit_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="309:17" pos:end="309:50"><expr pos:start="309:17" pos:end="309:49"><name pos:start="309:17" pos:end="309:33"><name pos:start="309:17" pos:end="309:18">hx</name><operator pos:start="309:19" pos:end="309:20">-&gt;</operator><name pos:start="309:21" pos:end="309:33">nal_unit_type</name></name> <operator pos:start="309:35" pos:end="309:35">=</operator> <name pos:start="309:37" pos:end="309:49">NAL_FF_IGNORE</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="313:13" pos:end="313:20"><expr pos:start="313:13" pos:end="313:19"><name pos:start="313:13" pos:end="313:15">err</name> <operator pos:start="313:17" pos:end="313:17">=</operator> <literal type="number" pos:start="313:19" pos:end="313:19">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="317:13" pos:end="339:13"><if pos:start="317:13" pos:end="339:13">if <condition pos:start="317:16" pos:end="317:38">(<expr pos:start="317:17" pos:end="317:37"><name pos:start="317:17" pos:end="317:37"><name pos:start="317:17" pos:end="317:17">h</name><operator pos:start="317:18" pos:end="317:19">-&gt;</operator><name pos:start="317:20" pos:end="317:37">decoding_extradata</name></name></expr>)</condition> <block pos:start="317:40" pos:end="339:13">{<block_content pos:start="319:17" pos:end="337:17">

                <switch pos:start="319:17" pos:end="337:17">switch <condition pos:start="319:24" pos:end="319:42">(<expr pos:start="319:25" pos:end="319:41"><name pos:start="319:25" pos:end="319:41"><name pos:start="319:25" pos:end="319:26">hx</name><operator pos:start="319:27" pos:end="319:28">-&gt;</operator><name pos:start="319:29" pos:end="319:41">nal_unit_type</name></name></expr>)</condition> <block pos:start="319:44" pos:end="337:17">{<block_content pos:start="321:17" pos:end="335:56">

                <case pos:start="321:17" pos:end="321:35">case <expr pos:start="321:22" pos:end="321:34"><name pos:start="321:22" pos:end="321:34">NAL_IDR_SLICE</name></expr>:</case>

                <case pos:start="323:17" pos:end="323:31">case <expr pos:start="323:22" pos:end="323:30"><name pos:start="323:22" pos:end="323:30">NAL_SLICE</name></expr>:</case>

                <case pos:start="325:17" pos:end="325:29">case <expr pos:start="325:22" pos:end="325:28"><name pos:start="325:22" pos:end="325:28">NAL_DPA</name></expr>:</case>

                <case pos:start="327:17" pos:end="327:29">case <expr pos:start="327:22" pos:end="327:28"><name pos:start="327:22" pos:end="327:28">NAL_DPB</name></expr>:</case>

                <case pos:start="329:17" pos:end="329:29">case <expr pos:start="329:22" pos:end="329:28"><name pos:start="329:22" pos:end="329:28">NAL_DPC</name></expr>:</case>

                <case pos:start="331:17" pos:end="331:41">case <expr pos:start="331:22" pos:end="331:40"><name pos:start="331:22" pos:end="331:40">NAL_AUXILIARY_SLICE</name></expr>:</case>

                    <expr_stmt pos:start="333:21" pos:end="333:112"><expr pos:start="333:21" pos:end="333:111"><call pos:start="333:21" pos:end="333:111"><name pos:start="333:21" pos:end="333:26">av_log</name><argument_list pos:start="333:27" pos:end="333:111">(<argument pos:start="333:28" pos:end="333:37"><expr pos:start="333:28" pos:end="333:37"><name pos:start="333:28" pos:end="333:37"><name pos:start="333:28" pos:end="333:28">h</name><operator pos:start="333:29" pos:end="333:30">-&gt;</operator><name pos:start="333:31" pos:end="333:31">s</name><operator pos:start="333:32" pos:end="333:32">.</operator><name pos:start="333:33" pos:end="333:37">avctx</name></name></expr></argument>, <argument pos:start="333:40" pos:end="333:53"><expr pos:start="333:40" pos:end="333:53"><name pos:start="333:40" pos:end="333:53">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="333:56" pos:end="333:91"><expr pos:start="333:56" pos:end="333:91"><literal type="string" pos:start="333:56" pos:end="333:91">"Ignoring NAL %d in global header\n"</literal></expr></argument>, <argument pos:start="333:94" pos:end="333:110"><expr pos:start="333:94" pos:end="333:110"><name pos:start="333:94" pos:end="333:110"><name pos:start="333:94" pos:end="333:95">hx</name><operator pos:start="333:96" pos:end="333:97">-&gt;</operator><name pos:start="333:98" pos:end="333:110">nal_unit_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="335:21" pos:end="335:56"><expr pos:start="335:21" pos:end="335:55"><name pos:start="335:21" pos:end="335:37"><name pos:start="335:21" pos:end="335:22">hx</name><operator pos:start="335:23" pos:end="335:24">-&gt;</operator><name pos:start="335:25" pos:end="335:37">nal_unit_type</name></name> <operator pos:start="335:39" pos:end="335:39">=</operator> <name pos:start="335:41" pos:end="335:55">NAL_FILLER_DATA</name></expr>;</expr_stmt>

                </block_content>}</block></switch>

            </block_content>}</block></if></if_stmt>



            <switch pos:start="343:13" pos:end="645:13">switch <condition pos:start="343:20" pos:end="343:38">(<expr pos:start="343:21" pos:end="343:37"><name pos:start="343:21" pos:end="343:37"><name pos:start="343:21" pos:end="343:22">hx</name><operator pos:start="343:23" pos:end="343:24">-&gt;</operator><name pos:start="343:25" pos:end="343:37">nal_unit_type</name></name></expr>)</condition> <block pos:start="343:40" pos:end="645:13">{<block_content pos:start="345:13" pos:end="643:54">

            <case pos:start="345:13" pos:end="345:31">case <expr pos:start="345:18" pos:end="345:30"><name pos:start="345:18" pos:end="345:30">NAL_IDR_SLICE</name></expr>:</case>

                <if_stmt pos:start="347:17" pos:end="357:17"><if pos:start="347:17" pos:end="357:17">if <condition pos:start="347:20" pos:end="347:49">(<expr pos:start="347:21" pos:end="347:48"><name pos:start="347:21" pos:end="347:31">first_slice</name> <operator pos:start="347:33" pos:end="347:34">!=</operator> <name pos:start="347:36" pos:end="347:48">NAL_IDR_SLICE</name></expr>)</condition> <block pos:start="347:51" pos:end="357:17">{<block_content pos:start="349:21" pos:end="355:29">

                    <expr_stmt pos:start="349:21" pos:end="351:70"><expr pos:start="349:21" pos:end="351:69"><call pos:start="349:21" pos:end="351:69"><name pos:start="349:21" pos:end="349:26">av_log</name><argument_list pos:start="349:27" pos:end="351:69">(<argument pos:start="349:28" pos:end="349:37"><expr pos:start="349:28" pos:end="349:37"><name pos:start="349:28" pos:end="349:37"><name pos:start="349:28" pos:end="349:28">h</name><operator pos:start="349:29" pos:end="349:30">-&gt;</operator><name pos:start="349:31" pos:end="349:31">s</name><operator pos:start="349:32" pos:end="349:32">.</operator><name pos:start="349:33" pos:end="349:37">avctx</name></name></expr></argument>, <argument pos:start="349:40" pos:end="349:51"><expr pos:start="349:40" pos:end="349:51"><name pos:start="349:40" pos:end="349:51">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="351:28" pos:end="351:68"><expr pos:start="351:28" pos:end="351:68"><literal type="string" pos:start="351:28" pos:end="351:68">"Invalid mix of idr and non-idr slices\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="353:21" pos:end="353:35"><expr pos:start="353:21" pos:end="353:34"><name pos:start="353:21" pos:end="353:29">buf_index</name> <operator pos:start="353:31" pos:end="353:31">=</operator> <operator pos:start="353:33" pos:end="353:33">-</operator><literal type="number" pos:start="353:34" pos:end="353:34">1</literal></expr>;</expr_stmt>

                    <goto pos:start="355:21" pos:end="355:29">goto <name pos:start="355:26" pos:end="355:28">end</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="359:17" pos:end="361:27"><if pos:start="359:17" pos:end="361:27">if<condition pos:start="359:19" pos:end="359:32">(<expr pos:start="359:20" pos:end="359:31"><operator pos:start="359:20" pos:end="359:20">!</operator><name pos:start="359:21" pos:end="359:31">idr_cleared</name></expr>)</condition><block type="pseudo" pos:start="361:21" pos:end="361:27"><block_content pos:start="361:21" pos:end="361:27">

                    <expr_stmt pos:start="361:21" pos:end="361:27"><expr pos:start="361:21" pos:end="361:26"><call pos:start="361:21" pos:end="361:26"><name pos:start="361:21" pos:end="361:23">idr</name><argument_list pos:start="361:24" pos:end="361:26">(<argument pos:start="361:25" pos:end="361:25"><expr pos:start="361:25" pos:end="361:25"><name pos:start="361:25" pos:end="361:25">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="361:29" pos:end="361:92">// FIXME ensure we don't lose some frames if there is reordering</comment>

                <expr_stmt pos:start="363:17" pos:end="363:32"><expr pos:start="363:17" pos:end="363:31"><name pos:start="363:17" pos:end="363:27">idr_cleared</name> <operator pos:start="363:29" pos:end="363:29">=</operator> <literal type="number" pos:start="363:31" pos:end="363:31">1</literal></expr>;</expr_stmt>

            <case pos:start="365:13" pos:end="365:27">case <expr pos:start="365:18" pos:end="365:26"><name pos:start="365:18" pos:end="365:26">NAL_SLICE</name></expr>:</case>

                <expr_stmt pos:start="367:17" pos:end="367:58"><expr pos:start="367:17" pos:end="367:57"><call pos:start="367:17" pos:end="367:57"><name pos:start="367:17" pos:end="367:29">init_get_bits</name><argument_list pos:start="367:30" pos:end="367:57">(<argument pos:start="367:31" pos:end="367:39"><expr pos:start="367:31" pos:end="367:39"><operator pos:start="367:31" pos:end="367:31">&amp;</operator><name pos:start="367:32" pos:end="367:39"><name pos:start="367:32" pos:end="367:33">hx</name><operator pos:start="367:34" pos:end="367:35">-&gt;</operator><name pos:start="367:36" pos:end="367:36">s</name><operator pos:start="367:37" pos:end="367:37">.</operator><name pos:start="367:38" pos:end="367:39">gb</name></name></expr></argument>, <argument pos:start="367:42" pos:end="367:44"><expr pos:start="367:42" pos:end="367:44"><name pos:start="367:42" pos:end="367:44">ptr</name></expr></argument>, <argument pos:start="367:47" pos:end="367:56"><expr pos:start="367:47" pos:end="367:56"><name pos:start="367:47" pos:end="367:56">bit_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="369:17" pos:end="371:52"><expr pos:start="369:17" pos:end="371:51"><name pos:start="369:17" pos:end="369:32"><name pos:start="369:17" pos:end="369:18">hx</name><operator pos:start="369:19" pos:end="369:20">-&gt;</operator><name pos:start="369:21" pos:end="369:32">intra_gb_ptr</name></name>        <operator pos:start="369:41" pos:end="369:41">=</operator>

                    <name pos:start="371:21" pos:end="371:36"><name pos:start="371:21" pos:end="371:22">hx</name><operator pos:start="371:23" pos:end="371:24">-&gt;</operator><name pos:start="371:25" pos:end="371:36">inter_gb_ptr</name></name>    <operator pos:start="371:41" pos:end="371:41">=</operator> <operator pos:start="371:43" pos:end="371:43">&amp;</operator><name pos:start="371:44" pos:end="371:51"><name pos:start="371:44" pos:end="371:45">hx</name><operator pos:start="371:46" pos:end="371:47">-&gt;</operator><name pos:start="371:48" pos:end="371:48">s</name><operator pos:start="371:49" pos:end="371:49">.</operator><name pos:start="371:50" pos:end="371:51">gb</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="373:17" pos:end="373:44"><expr pos:start="373:17" pos:end="373:43"><name pos:start="373:17" pos:end="373:39"><name pos:start="373:17" pos:end="373:18">hx</name><operator pos:start="373:19" pos:end="373:20">-&gt;</operator><name pos:start="373:21" pos:end="373:21">s</name><operator pos:start="373:22" pos:end="373:22">.</operator><name pos:start="373:23" pos:end="373:39">data_partitioning</name></name> <operator pos:start="373:41" pos:end="373:41">=</operator> <literal type="number" pos:start="373:43" pos:end="373:43">0</literal></expr>;</expr_stmt>



                <if_stmt pos:start="377:17" pos:end="379:26"><if pos:start="377:17" pos:end="379:26">if <condition pos:start="377:20" pos:end="377:55">(<expr pos:start="377:21" pos:end="377:54"><operator pos:start="377:21" pos:end="377:21">(</operator><name pos:start="377:22" pos:end="377:24">err</name> <operator pos:start="377:26" pos:end="377:26">=</operator> <call pos:start="377:28" pos:end="377:53"><name pos:start="377:28" pos:end="377:46">decode_slice_header</name><argument_list pos:start="377:47" pos:end="377:53">(<argument pos:start="377:48" pos:end="377:49"><expr pos:start="377:48" pos:end="377:49"><name pos:start="377:48" pos:end="377:49">hx</name></expr></argument>, <argument pos:start="377:52" pos:end="377:52"><expr pos:start="377:52" pos:end="377:52"><name pos:start="377:52" pos:end="377:52">h</name></expr></argument>)</argument_list></call><operator pos:start="377:54" pos:end="377:54">)</operator></expr>)</condition><block type="pseudo" pos:start="379:21" pos:end="379:26"><block_content pos:start="379:21" pos:end="379:26">

                    <break pos:start="379:21" pos:end="379:26">break;</break></block_content></block></if></if_stmt>



                <if_stmt pos:start="383:17" pos:end="385:48"><if pos:start="383:17" pos:end="385:48">if <condition pos:start="383:20" pos:end="383:141">(<expr pos:start="383:21" pos:end="383:140"><name pos:start="383:21" pos:end="383:45"><name pos:start="383:21" pos:end="383:21">h</name><operator pos:start="383:22" pos:end="383:23">-&gt;</operator><name pos:start="383:24" pos:end="383:45">sei_recovery_frame_cnt</name></name> <operator pos:start="383:47" pos:end="383:48">&gt;=</operator> <literal type="number" pos:start="383:50" pos:end="383:50">0</literal> <operator pos:start="383:52" pos:end="383:53">&amp;&amp;</operator> <operator pos:start="383:55" pos:end="383:55">(</operator><name pos:start="383:56" pos:end="383:67"><name pos:start="383:56" pos:end="383:56">h</name><operator pos:start="383:57" pos:end="383:58">-&gt;</operator><name pos:start="383:59" pos:end="383:67">frame_num</name></name> <operator pos:start="383:69" pos:end="383:70">!=</operator> <name pos:start="383:72" pos:end="383:96"><name pos:start="383:72" pos:end="383:72">h</name><operator pos:start="383:73" pos:end="383:74">-&gt;</operator><name pos:start="383:75" pos:end="383:96">sei_recovery_frame_cnt</name></name> <operator pos:start="383:98" pos:end="383:99">||</operator> <name pos:start="383:101" pos:end="383:118"><name pos:start="383:101" pos:end="383:102">hx</name><operator pos:start="383:103" pos:end="383:104">-&gt;</operator><name pos:start="383:105" pos:end="383:118">slice_type_nos</name></name> <operator pos:start="383:120" pos:end="383:121">!=</operator> <name pos:start="383:123" pos:end="383:139">AV_PICTURE_TYPE_I</name><operator pos:start="383:140" pos:end="383:140">)</operator></expr>)</condition><block type="pseudo" pos:start="385:21" pos:end="385:48"><block_content pos:start="385:21" pos:end="385:48">

                    <expr_stmt pos:start="385:21" pos:end="385:48"><expr pos:start="385:21" pos:end="385:47"><name pos:start="385:21" pos:end="385:43"><name pos:start="385:21" pos:end="385:21">h</name><operator pos:start="385:22" pos:end="385:23">-&gt;</operator><name pos:start="385:24" pos:end="385:43">valid_recovery_point</name></name> <operator pos:start="385:45" pos:end="385:45">=</operator> <literal type="number" pos:start="385:47" pos:end="385:47">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <if_stmt pos:start="389:17" pos:end="405:17"><if pos:start="389:17" pos:end="405:17">if <condition pos:start="389:20" pos:end="393:132">(   <expr pos:start="389:24" pos:end="393:131"><name pos:start="389:24" pos:end="389:48"><name pos:start="389:24" pos:end="389:24">h</name><operator pos:start="389:25" pos:end="389:26">-&gt;</operator><name pos:start="389:27" pos:end="389:48">sei_recovery_frame_cnt</name></name> <operator pos:start="389:50" pos:end="389:51">&gt;=</operator> <literal type="number" pos:start="389:53" pos:end="389:53">0</literal>

                    <operator pos:start="391:21" pos:end="391:22">&amp;&amp;</operator> <operator pos:start="391:24" pos:end="391:24">(</operator>   <name pos:start="391:28" pos:end="391:44"><name pos:start="391:28" pos:end="391:28">h</name><operator pos:start="391:29" pos:end="391:30">-&gt;</operator><name pos:start="391:31" pos:end="391:44">recovery_frame</name></name><operator pos:start="391:45" pos:end="391:45">&lt;</operator><literal type="number" pos:start="391:46" pos:end="391:46">0</literal>

                        <operator pos:start="393:25" pos:end="393:26">||</operator> <operator pos:start="393:28" pos:end="393:28">(</operator><operator pos:start="393:29" pos:end="393:29">(</operator><name pos:start="393:30" pos:end="393:46"><name pos:start="393:30" pos:end="393:30">h</name><operator pos:start="393:31" pos:end="393:32">-&gt;</operator><name pos:start="393:33" pos:end="393:46">recovery_frame</name></name> <operator pos:start="393:48" pos:end="393:48">-</operator> <name pos:start="393:50" pos:end="393:61"><name pos:start="393:50" pos:end="393:50">h</name><operator pos:start="393:51" pos:end="393:52">-&gt;</operator><name pos:start="393:53" pos:end="393:61">frame_num</name></name><operator pos:start="393:62" pos:end="393:62">)</operator> <operator pos:start="393:64" pos:end="393:64">&amp;</operator> <operator pos:start="393:66" pos:end="393:66">(</operator><operator pos:start="393:67" pos:end="393:67">(</operator><literal type="number" pos:start="393:68" pos:end="393:68">1</literal> <operator pos:start="393:70" pos:end="393:71">&lt;&lt;</operator> <name pos:start="393:73" pos:end="393:97"><name pos:start="393:73" pos:end="393:73">h</name><operator pos:start="393:74" pos:end="393:75">-&gt;</operator><name pos:start="393:76" pos:end="393:78">sps</name><operator pos:start="393:79" pos:end="393:79">.</operator><name pos:start="393:80" pos:end="393:97">log2_max_frame_num</name></name><operator pos:start="393:98" pos:end="393:98">)</operator><operator pos:start="393:99" pos:end="393:99">-</operator><literal type="number" pos:start="393:100" pos:end="393:100">1</literal><operator pos:start="393:101" pos:end="393:101">)</operator><operator pos:start="393:102" pos:end="393:102">)</operator> <operator pos:start="393:104" pos:end="393:104">&gt;</operator> <name pos:start="393:106" pos:end="393:130"><name pos:start="393:106" pos:end="393:106">h</name><operator pos:start="393:107" pos:end="393:108">-&gt;</operator><name pos:start="393:109" pos:end="393:130">sei_recovery_frame_cnt</name></name><operator pos:start="393:131" pos:end="393:131">)</operator></expr>)</condition> <block pos:start="393:134" pos:end="405:17">{<block_content pos:start="395:21" pos:end="403:57">

                    <expr_stmt pos:start="395:21" pos:end="397:73"><expr pos:start="395:21" pos:end="397:72"><name pos:start="395:21" pos:end="395:37"><name pos:start="395:21" pos:end="395:21">h</name><operator pos:start="395:22" pos:end="395:23">-&gt;</operator><name pos:start="395:24" pos:end="395:37">recovery_frame</name></name> <operator pos:start="395:39" pos:end="395:39">=</operator> <operator pos:start="395:41" pos:end="395:41">(</operator><name pos:start="395:42" pos:end="395:53"><name pos:start="395:42" pos:end="395:42">h</name><operator pos:start="395:43" pos:end="395:44">-&gt;</operator><name pos:start="395:45" pos:end="395:53">frame_num</name></name> <operator pos:start="395:55" pos:end="395:55">+</operator> <name pos:start="395:57" pos:end="395:81"><name pos:start="395:57" pos:end="395:57">h</name><operator pos:start="395:58" pos:end="395:59">-&gt;</operator><name pos:start="395:60" pos:end="395:81">sei_recovery_frame_cnt</name></name><operator pos:start="395:82" pos:end="395:82">)</operator> <operator pos:start="395:84" pos:end="395:84">%</operator>

                                        <operator pos:start="397:41" pos:end="397:41">(</operator><literal type="number" pos:start="397:42" pos:end="397:42">1</literal> <operator pos:start="397:44" pos:end="397:45">&lt;&lt;</operator> <name pos:start="397:47" pos:end="397:71"><name pos:start="397:47" pos:end="397:47">h</name><operator pos:start="397:48" pos:end="397:49">-&gt;</operator><name pos:start="397:50" pos:end="397:52">sps</name><operator pos:start="397:53" pos:end="397:53">.</operator><name pos:start="397:54" pos:end="397:71">log2_max_frame_num</name></name><operator pos:start="397:72" pos:end="397:72">)</operator></expr>;</expr_stmt>



                    <if_stmt pos:start="401:21" pos:end="403:57"><if pos:start="401:21" pos:end="403:57">if <condition pos:start="401:24" pos:end="401:49">(<expr pos:start="401:25" pos:end="401:48"><operator pos:start="401:25" pos:end="401:25">!</operator><name pos:start="401:26" pos:end="401:48"><name pos:start="401:26" pos:end="401:26">h</name><operator pos:start="401:27" pos:end="401:28">-&gt;</operator><name pos:start="401:29" pos:end="401:48">valid_recovery_point</name></name></expr>)</condition><block type="pseudo" pos:start="403:25" pos:end="403:57"><block_content pos:start="403:25" pos:end="403:57">

                        <expr_stmt pos:start="403:25" pos:end="403:57"><expr pos:start="403:25" pos:end="403:56"><name pos:start="403:25" pos:end="403:41"><name pos:start="403:25" pos:end="403:25">h</name><operator pos:start="403:26" pos:end="403:27">-&gt;</operator><name pos:start="403:28" pos:end="403:41">recovery_frame</name></name> <operator pos:start="403:43" pos:end="403:43">=</operator> <name pos:start="403:45" pos:end="403:56"><name pos:start="403:45" pos:end="403:45">h</name><operator pos:start="403:46" pos:end="403:47">-&gt;</operator><name pos:start="403:48" pos:end="403:56">frame_num</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="409:17" pos:end="411:61"><expr pos:start="409:17" pos:end="411:60"><name pos:start="409:17" pos:end="409:51"><name pos:start="409:17" pos:end="409:17">s</name><operator pos:start="409:18" pos:end="409:19">-&gt;</operator><name pos:start="409:20" pos:end="409:38">current_picture_ptr</name><operator pos:start="409:39" pos:end="409:40">-&gt;</operator><name pos:start="409:41" pos:end="409:41">f</name><operator pos:start="409:42" pos:end="409:42">.</operator><name pos:start="409:43" pos:end="409:51">key_frame</name></name> <operator pos:start="409:53" pos:end="409:54">|=</operator>

                        <operator pos:start="411:25" pos:end="411:25">(</operator><name pos:start="411:26" pos:end="411:42"><name pos:start="411:26" pos:end="411:27">hx</name><operator pos:start="411:28" pos:end="411:29">-&gt;</operator><name pos:start="411:30" pos:end="411:42">nal_unit_type</name></name> <operator pos:start="411:44" pos:end="411:45">==</operator> <name pos:start="411:47" pos:end="411:59">NAL_IDR_SLICE</name><operator pos:start="411:60" pos:end="411:60">)</operator></expr>;</expr_stmt>



                <if_stmt pos:start="415:17" pos:end="421:17"><if pos:start="415:17" pos:end="421:17">if <condition pos:start="415:20" pos:end="415:54">(<expr pos:start="415:21" pos:end="415:53"><name pos:start="415:21" pos:end="415:37"><name pos:start="415:21" pos:end="415:21">h</name><operator pos:start="415:22" pos:end="415:23">-&gt;</operator><name pos:start="415:24" pos:end="415:37">recovery_frame</name></name> <operator pos:start="415:39" pos:end="415:40">==</operator> <name pos:start="415:42" pos:end="415:53"><name pos:start="415:42" pos:end="415:42">h</name><operator pos:start="415:43" pos:end="415:44">-&gt;</operator><name pos:start="415:45" pos:end="415:53">frame_num</name></name></expr>)</condition> <block pos:start="415:56" pos:end="421:17">{<block_content pos:start="417:21" pos:end="419:43">

                    <expr_stmt pos:start="417:21" pos:end="417:54"><expr pos:start="417:21" pos:end="417:53"><name pos:start="417:21" pos:end="417:48"><name pos:start="417:21" pos:end="417:21">s</name><operator pos:start="417:22" pos:end="417:23">-&gt;</operator><name pos:start="417:24" pos:end="417:42">current_picture_ptr</name><operator pos:start="417:43" pos:end="417:44">-&gt;</operator><name pos:start="417:45" pos:end="417:48">sync</name></name> <operator pos:start="417:50" pos:end="417:51">|=</operator> <literal type="number" pos:start="417:53" pos:end="417:53">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="419:21" pos:end="419:43"><expr pos:start="419:21" pos:end="419:42"><name pos:start="419:21" pos:end="419:37"><name pos:start="419:21" pos:end="419:21">h</name><operator pos:start="419:22" pos:end="419:23">-&gt;</operator><name pos:start="419:24" pos:end="419:37">recovery_frame</name></name> <operator pos:start="419:39" pos:end="419:39">=</operator> <operator pos:start="419:41" pos:end="419:41">-</operator><literal type="number" pos:start="419:42" pos:end="419:42">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="425:17" pos:end="425:65"><expr pos:start="425:17" pos:end="425:64"><name pos:start="425:17" pos:end="425:23"><name pos:start="425:17" pos:end="425:17">h</name><operator pos:start="425:18" pos:end="425:19">-&gt;</operator><name pos:start="425:20" pos:end="425:23">sync</name></name> <operator pos:start="425:25" pos:end="425:26">|=</operator> <operator pos:start="425:28" pos:end="425:28">!</operator><operator pos:start="425:29" pos:end="425:29">!</operator><name pos:start="425:30" pos:end="425:64"><name pos:start="425:30" pos:end="425:30">s</name><operator pos:start="425:31" pos:end="425:32">-&gt;</operator><name pos:start="425:33" pos:end="425:51">current_picture_ptr</name><operator pos:start="425:52" pos:end="425:53">-&gt;</operator><name pos:start="425:54" pos:end="425:54">f</name><operator pos:start="425:55" pos:end="425:55">.</operator><name pos:start="425:56" pos:end="425:64">key_frame</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="427:17" pos:end="427:66"><expr pos:start="427:17" pos:end="427:65"><name pos:start="427:17" pos:end="427:23"><name pos:start="427:17" pos:end="427:17">h</name><operator pos:start="427:18" pos:end="427:19">-&gt;</operator><name pos:start="427:20" pos:end="427:23">sync</name></name> <operator pos:start="427:25" pos:end="427:26">|=</operator> <literal type="number" pos:start="427:28" pos:end="427:28">3</literal><operator pos:start="427:29" pos:end="427:29">*</operator><operator pos:start="427:30" pos:end="427:30">!</operator><operator pos:start="427:31" pos:end="427:31">!</operator><operator pos:start="427:32" pos:end="427:32">(</operator><name pos:start="427:33" pos:end="427:41"><name pos:start="427:33" pos:end="427:33">s</name><operator pos:start="427:34" pos:end="427:35">-&gt;</operator><name pos:start="427:36" pos:end="427:41">flags2</name></name> <operator pos:start="427:43" pos:end="427:43">&amp;</operator> <name pos:start="427:45" pos:end="427:64">CODEC_FLAG2_SHOW_ALL</name><operator pos:start="427:65" pos:end="427:65">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="429:17" pos:end="429:56"><expr pos:start="429:17" pos:end="429:55"><name pos:start="429:17" pos:end="429:44"><name pos:start="429:17" pos:end="429:17">s</name><operator pos:start="429:18" pos:end="429:19">-&gt;</operator><name pos:start="429:20" pos:end="429:38">current_picture_ptr</name><operator pos:start="429:39" pos:end="429:40">-&gt;</operator><name pos:start="429:41" pos:end="429:44">sync</name></name> <operator pos:start="429:46" pos:end="429:47">|=</operator> <name pos:start="429:49" pos:end="429:55"><name pos:start="429:49" pos:end="429:49">h</name><operator pos:start="429:50" pos:end="429:51">-&gt;</operator><name pos:start="429:52" pos:end="429:55">sync</name></name></expr>;</expr_stmt>



                <if_stmt pos:start="433:17" pos:end="453:17"><if pos:start="433:17" pos:end="453:17">if <condition pos:start="433:20" pos:end="433:42">(<expr pos:start="433:21" pos:end="433:41"><name pos:start="433:21" pos:end="433:36"><name pos:start="433:21" pos:end="433:21">h</name><operator pos:start="433:22" pos:end="433:23">-&gt;</operator><name pos:start="433:24" pos:end="433:36">current_slice</name></name> <operator pos:start="433:38" pos:end="433:39">==</operator> <literal type="number" pos:start="433:41" pos:end="433:41">1</literal></expr>)</condition> <block pos:start="433:44" pos:end="453:17">{<block_content pos:start="435:21" pos:end="451:55">

                    <if_stmt pos:start="435:21" pos:end="437:69"><if pos:start="435:21" pos:end="437:69">if <condition pos:start="435:24" pos:end="435:58">(<expr pos:start="435:25" pos:end="435:57"><operator pos:start="435:25" pos:end="435:25">!</operator><operator pos:start="435:26" pos:end="435:26">(</operator><name pos:start="435:27" pos:end="435:35"><name pos:start="435:27" pos:end="435:27">s</name><operator pos:start="435:28" pos:end="435:29">-&gt;</operator><name pos:start="435:30" pos:end="435:35">flags2</name></name> <operator pos:start="435:37" pos:end="435:37">&amp;</operator> <name pos:start="435:39" pos:end="435:56">CODEC_FLAG2_CHUNKS</name><operator pos:start="435:57" pos:end="435:57">)</operator></expr>)</condition><block type="pseudo" pos:start="437:25" pos:end="437:69"><block_content pos:start="437:25" pos:end="437:69">

                        <expr_stmt pos:start="437:25" pos:end="437:69"><expr pos:start="437:25" pos:end="437:68"><call pos:start="437:25" pos:end="437:68"><name pos:start="437:25" pos:end="437:39">decode_postinit</name><argument_list pos:start="437:40" pos:end="437:68">(<argument pos:start="437:41" pos:end="437:41"><expr pos:start="437:41" pos:end="437:41"><name pos:start="437:41" pos:end="437:41">h</name></expr></argument>, <argument pos:start="437:44" pos:end="437:67"><expr pos:start="437:44" pos:end="437:67"><name pos:start="437:44" pos:end="437:52">nal_index</name> <operator pos:start="437:54" pos:end="437:55">&gt;=</operator> <name pos:start="437:57" pos:end="437:67">nals_needed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <if_stmt pos:start="441:21" pos:end="445:34"><if pos:start="441:21" pos:end="445:34">if <condition pos:start="441:24" pos:end="443:78">(<expr pos:start="441:25" pos:end="443:77"><name pos:start="441:25" pos:end="441:41"><name pos:start="441:25" pos:end="441:25">s</name><operator pos:start="441:26" pos:end="441:27">-&gt;</operator><name pos:start="441:28" pos:end="441:32">avctx</name><operator pos:start="441:33" pos:end="441:34">-&gt;</operator><name pos:start="441:35" pos:end="441:41">hwaccel</name></name> <operator pos:start="441:43" pos:end="441:44">&amp;&amp;</operator>

                        <call pos:start="443:25" pos:end="443:73"><name pos:start="443:25" pos:end="443:54"><name pos:start="443:25" pos:end="443:25">s</name><operator pos:start="443:26" pos:end="443:27">-&gt;</operator><name pos:start="443:28" pos:end="443:32">avctx</name><operator pos:start="443:33" pos:end="443:34">-&gt;</operator><name pos:start="443:35" pos:end="443:41">hwaccel</name><operator pos:start="443:42" pos:end="443:43">-&gt;</operator><name pos:start="443:44" pos:end="443:54">start_frame</name></name><argument_list pos:start="443:55" pos:end="443:73">(<argument pos:start="443:56" pos:end="443:63"><expr pos:start="443:56" pos:end="443:63"><name pos:start="443:56" pos:end="443:63"><name pos:start="443:56" pos:end="443:56">s</name><operator pos:start="443:57" pos:end="443:58">-&gt;</operator><name pos:start="443:59" pos:end="443:63">avctx</name></name></expr></argument>, <argument pos:start="443:66" pos:end="443:69"><expr pos:start="443:66" pos:end="443:69"><name pos:start="443:66" pos:end="443:69">NULL</name></expr></argument>, <argument pos:start="443:72" pos:end="443:72"><expr pos:start="443:72" pos:end="443:72"><literal type="number" pos:start="443:72" pos:end="443:72">0</literal></expr></argument>)</argument_list></call> <operator pos:start="443:75" pos:end="443:75">&lt;</operator> <literal type="number" pos:start="443:77" pos:end="443:77">0</literal></expr>)</condition><block type="pseudo" pos:start="445:25" pos:end="445:34"><block_content pos:start="445:25" pos:end="445:34">

                        <return pos:start="445:25" pos:end="445:34">return <expr pos:start="445:32" pos:end="445:33"><operator pos:start="445:32" pos:end="445:32">-</operator><literal type="number" pos:start="445:33" pos:end="445:33">1</literal></expr>;</return></block_content></block></if></if_stmt>

                    <if_stmt pos:start="447:21" pos:end="451:55"><if pos:start="447:21" pos:end="451:55">if <condition pos:start="447:24" pos:end="449:80">(<expr pos:start="447:25" pos:end="449:79"><name pos:start="447:25" pos:end="447:49">CONFIG_H264_VDPAU_DECODER</name> <operator pos:start="447:51" pos:end="447:52">&amp;&amp;</operator>

                        <name pos:start="449:25" pos:end="449:53"><name pos:start="449:25" pos:end="449:25">s</name><operator pos:start="449:26" pos:end="449:27">-&gt;</operator><name pos:start="449:28" pos:end="449:32">avctx</name><operator pos:start="449:33" pos:end="449:34">-&gt;</operator><name pos:start="449:35" pos:end="449:39">codec</name><operator pos:start="449:40" pos:end="449:41">-&gt;</operator><name pos:start="449:42" pos:end="449:53">capabilities</name></name> <operator pos:start="449:55" pos:end="449:55">&amp;</operator> <name pos:start="449:57" pos:end="449:79">CODEC_CAP_HWACCEL_VDPAU</name></expr>)</condition><block type="pseudo" pos:start="451:25" pos:end="451:55"><block_content pos:start="451:25" pos:end="451:55">

                        <expr_stmt pos:start="451:25" pos:end="451:55"><expr pos:start="451:25" pos:end="451:54"><call pos:start="451:25" pos:end="451:54"><name pos:start="451:25" pos:end="451:51">ff_vdpau_h264_picture_start</name><argument_list pos:start="451:52" pos:end="451:54">(<argument pos:start="451:53" pos:end="451:53"><expr pos:start="451:53" pos:end="451:53"><name pos:start="451:53" pos:end="451:53">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="457:17" pos:end="503:17"><if pos:start="457:17" pos:end="503:17">if <condition pos:start="457:20" pos:end="471:54">(<expr pos:start="457:21" pos:end="471:53"><name pos:start="457:21" pos:end="457:43"><name pos:start="457:21" pos:end="457:22">hx</name><operator pos:start="457:23" pos:end="457:24">-&gt;</operator><name pos:start="457:25" pos:end="457:43">redundant_pic_count</name></name> <operator pos:start="457:45" pos:end="457:46">==</operator> <literal type="number" pos:start="457:48" pos:end="457:48">0</literal> <operator pos:start="457:50" pos:end="457:51">&amp;&amp;</operator>

                    <operator pos:start="459:21" pos:end="459:21">(</operator><name pos:start="459:22" pos:end="459:38"><name pos:start="459:22" pos:end="459:26">avctx</name><operator pos:start="459:27" pos:end="459:28">-&gt;</operator><name pos:start="459:29" pos:end="459:38">skip_frame</name></name> <operator pos:start="459:40" pos:end="459:40">&lt;</operator> <name pos:start="459:42" pos:end="459:57">AVDISCARD_NONREF</name> <operator pos:start="459:59" pos:end="459:60">||</operator>

                     <name pos:start="461:22" pos:end="461:36"><name pos:start="461:22" pos:end="461:23">hx</name><operator pos:start="461:24" pos:end="461:25">-&gt;</operator><name pos:start="461:26" pos:end="461:36">nal_ref_idc</name></name><operator pos:start="461:37" pos:end="461:37">)</operator> <operator pos:start="461:39" pos:end="461:40">&amp;&amp;</operator>

                    <operator pos:start="463:21" pos:end="463:21">(</operator><name pos:start="463:22" pos:end="463:38"><name pos:start="463:22" pos:end="463:26">avctx</name><operator pos:start="463:27" pos:end="463:28">-&gt;</operator><name pos:start="463:29" pos:end="463:38">skip_frame</name></name> <operator pos:start="463:40" pos:end="463:40">&lt;</operator> <name pos:start="463:42" pos:end="463:56">AVDISCARD_BIDIR</name>  <operator pos:start="463:59" pos:end="463:60">||</operator>

                     <name pos:start="465:22" pos:end="465:39"><name pos:start="465:22" pos:end="465:23">hx</name><operator pos:start="465:24" pos:end="465:25">-&gt;</operator><name pos:start="465:26" pos:end="465:39">slice_type_nos</name></name> <operator pos:start="465:41" pos:end="465:42">!=</operator> <name pos:start="465:44" pos:end="465:60">AV_PICTURE_TYPE_B</name><operator pos:start="465:61" pos:end="465:61">)</operator> <operator pos:start="465:63" pos:end="465:64">&amp;&amp;</operator>

                    <operator pos:start="467:21" pos:end="467:21">(</operator><name pos:start="467:22" pos:end="467:38"><name pos:start="467:22" pos:end="467:26">avctx</name><operator pos:start="467:27" pos:end="467:28">-&gt;</operator><name pos:start="467:29" pos:end="467:38">skip_frame</name></name> <operator pos:start="467:40" pos:end="467:40">&lt;</operator> <name pos:start="467:42" pos:end="467:57">AVDISCARD_NONKEY</name> <operator pos:start="467:59" pos:end="467:60">||</operator>

                     <name pos:start="469:22" pos:end="469:39"><name pos:start="469:22" pos:end="469:23">hx</name><operator pos:start="469:24" pos:end="469:25">-&gt;</operator><name pos:start="469:26" pos:end="469:39">slice_type_nos</name></name> <operator pos:start="469:41" pos:end="469:42">==</operator> <name pos:start="469:44" pos:end="469:60">AV_PICTURE_TYPE_I</name><operator pos:start="469:61" pos:end="469:61">)</operator> <operator pos:start="469:63" pos:end="469:64">&amp;&amp;</operator>

                    <name pos:start="471:21" pos:end="471:37"><name pos:start="471:21" pos:end="471:25">avctx</name><operator pos:start="471:26" pos:end="471:27">-&gt;</operator><name pos:start="471:28" pos:end="471:37">skip_frame</name></name> <operator pos:start="471:39" pos:end="471:39">&lt;</operator> <name pos:start="471:41" pos:end="471:53">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="471:56" pos:end="503:17">{<block_content pos:start="473:21" pos:end="501:40">

                    <if_stmt pos:start="473:21" pos:end="501:40"><if pos:start="473:21" pos:end="483:21">if <condition pos:start="473:24" pos:end="473:39">(<expr pos:start="473:25" pos:end="473:38"><name pos:start="473:25" pos:end="473:38"><name pos:start="473:25" pos:end="473:29">avctx</name><operator pos:start="473:30" pos:end="473:31">-&gt;</operator><name pos:start="473:32" pos:end="473:38">hwaccel</name></name></expr>)</condition> <block pos:start="473:41" pos:end="483:21">{<block_content pos:start="475:25" pos:end="481:38">

                        <if_stmt pos:start="475:25" pos:end="481:38"><if pos:start="475:25" pos:end="481:38">if <condition pos:start="475:28" pos:end="479:71">(<expr pos:start="475:29" pos:end="479:70"><call pos:start="475:29" pos:end="479:66"><name pos:start="475:29" pos:end="475:56"><name pos:start="475:29" pos:end="475:33">avctx</name><operator pos:start="475:34" pos:end="475:35">-&gt;</operator><name pos:start="475:36" pos:end="475:42">hwaccel</name><operator pos:start="475:43" pos:end="475:44">-&gt;</operator><name pos:start="475:45" pos:end="475:56">decode_slice</name></name><argument_list pos:start="475:57" pos:end="479:66">(<argument pos:start="475:58" pos:end="475:62"><expr pos:start="475:58" pos:end="475:62"><name pos:start="475:58" pos:end="475:62">avctx</name></expr></argument>,

                                                         <argument pos:start="477:58" pos:end="477:83"><expr pos:start="477:58" pos:end="477:83"><operator pos:start="477:58" pos:end="477:58">&amp;</operator><name pos:start="477:59" pos:end="477:83"><name pos:start="477:59" pos:end="477:61">buf</name><index pos:start="477:62" pos:end="477:83">[<expr pos:start="477:63" pos:end="477:82"><name pos:start="477:63" pos:end="477:71">buf_index</name> <operator pos:start="477:73" pos:end="477:73">-</operator> <name pos:start="477:75" pos:end="477:82">consumed</name></expr>]</index></name></expr></argument>,

                                                         <argument pos:start="479:58" pos:end="479:65"><expr pos:start="479:58" pos:end="479:65"><name pos:start="479:58" pos:end="479:65">consumed</name></expr></argument>)</argument_list></call> <operator pos:start="479:68" pos:end="479:68">&lt;</operator> <literal type="number" pos:start="479:70" pos:end="479:70">0</literal></expr>)</condition><block type="pseudo" pos:start="481:29" pos:end="481:38"><block_content pos:start="481:29" pos:end="481:38">

                            <return pos:start="481:29" pos:end="481:38">return <expr pos:start="481:36" pos:end="481:37"><operator pos:start="481:36" pos:end="481:36">-</operator><literal type="number" pos:start="481:37" pos:end="481:37">1</literal></expr>;</return></block_content></block></if></if_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="483:23" pos:end="499:21">else if <condition pos:start="483:31" pos:end="485:87">(<expr pos:start="483:32" pos:end="485:86"><name pos:start="483:32" pos:end="483:56">CONFIG_H264_VDPAU_DECODER</name> <operator pos:start="483:58" pos:end="483:59">&amp;&amp;</operator>

                               <name pos:start="485:32" pos:end="485:60"><name pos:start="485:32" pos:end="485:32">s</name><operator pos:start="485:33" pos:end="485:34">-&gt;</operator><name pos:start="485:35" pos:end="485:39">avctx</name><operator pos:start="485:40" pos:end="485:41">-&gt;</operator><name pos:start="485:42" pos:end="485:46">codec</name><operator pos:start="485:47" pos:end="485:48">-&gt;</operator><name pos:start="485:49" pos:end="485:60">capabilities</name></name> <operator pos:start="485:62" pos:end="485:62">&amp;</operator> <name pos:start="485:64" pos:end="485:86">CODEC_CAP_HWACCEL_VDPAU</name></expr>)</condition> <block pos:start="485:89" pos:end="499:21">{<block_content pos:start="487:25" pos:end="497:58">

                        <decl_stmt pos:start="487:25" pos:end="489:47"><decl pos:start="487:25" pos:end="489:46"><type pos:start="487:25" pos:end="487:44"><specifier pos:start="487:25" pos:end="487:30">static</specifier> <specifier pos:start="487:32" pos:end="487:36">const</specifier> <name pos:start="487:38" pos:end="487:44">uint8_t</name></type> <name pos:start="487:46" pos:end="487:57"><name pos:start="487:46" pos:end="487:55">start_code</name><index pos:start="487:56" pos:end="487:57">[]</index></name> <init pos:start="487:59" pos:end="489:46">= <expr pos:start="487:61" pos:end="489:46"><block pos:start="487:61" pos:end="489:46">{

                            <expr pos:start="489:29" pos:end="489:32"><literal type="number" pos:start="489:29" pos:end="489:32">0x00</literal></expr>, <expr pos:start="489:35" pos:end="489:38"><literal type="number" pos:start="489:35" pos:end="489:38">0x00</literal></expr>, <expr pos:start="489:41" pos:end="489:44"><literal type="number" pos:start="489:41" pos:end="489:44">0x01</literal></expr> }</block></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="491:25" pos:end="493:68"><expr pos:start="491:25" pos:end="493:67"><call pos:start="491:25" pos:end="493:67"><name pos:start="491:25" pos:end="491:47">ff_vdpau_add_data_chunk</name><argument_list pos:start="491:48" pos:end="493:67">(<argument pos:start="491:49" pos:end="491:49"><expr pos:start="491:49" pos:end="491:49"><name pos:start="491:49" pos:end="491:49">s</name></expr></argument>, <argument pos:start="491:52" pos:end="491:61"><expr pos:start="491:52" pos:end="491:61"><name pos:start="491:52" pos:end="491:61">start_code</name></expr></argument>,

                                                <argument pos:start="493:49" pos:end="493:66"><expr pos:start="493:49" pos:end="493:66"><sizeof pos:start="493:49" pos:end="493:66">sizeof<argument_list pos:start="493:55" pos:end="493:66">(<argument pos:start="493:56" pos:end="493:65"><expr pos:start="493:56" pos:end="493:65"><name pos:start="493:56" pos:end="493:65">start_code</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="495:25" pos:end="497:58"><expr pos:start="495:25" pos:end="497:57"><call pos:start="495:25" pos:end="497:57"><name pos:start="495:25" pos:end="495:47">ff_vdpau_add_data_chunk</name><argument_list pos:start="495:48" pos:end="497:57">(<argument pos:start="495:49" pos:end="495:49"><expr pos:start="495:49" pos:end="495:49"><name pos:start="495:49" pos:end="495:49">s</name></expr></argument>, <argument pos:start="495:52" pos:end="495:77"><expr pos:start="495:52" pos:end="495:77"><operator pos:start="495:52" pos:end="495:52">&amp;</operator><name pos:start="495:53" pos:end="495:77"><name pos:start="495:53" pos:end="495:55">buf</name><index pos:start="495:56" pos:end="495:77">[<expr pos:start="495:57" pos:end="495:76"><name pos:start="495:57" pos:end="495:65">buf_index</name> <operator pos:start="495:67" pos:end="495:67">-</operator> <name pos:start="495:69" pos:end="495:76">consumed</name></expr>]</index></name></expr></argument>,

                                                <argument pos:start="497:49" pos:end="497:56"><expr pos:start="497:49" pos:end="497:56"><name pos:start="497:49" pos:end="497:56">consumed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="499:23" pos:end="501:40">else<block type="pseudo" pos:start="501:25" pos:end="501:40"><block_content pos:start="501:25" pos:end="501:40">

                        <expr_stmt pos:start="501:25" pos:end="501:40"><expr pos:start="501:25" pos:end="501:39"><name pos:start="501:25" pos:end="501:37">context_count</name><operator pos:start="501:38" pos:end="501:39">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="505:17" pos:end="505:22">break;</break>

            <case pos:start="507:13" pos:end="507:25">case <expr pos:start="507:18" pos:end="507:24"><name pos:start="507:18" pos:end="507:24">NAL_DPA</name></expr>:</case>

                <expr_stmt pos:start="509:17" pos:end="509:58"><expr pos:start="509:17" pos:end="509:57"><call pos:start="509:17" pos:end="509:57"><name pos:start="509:17" pos:end="509:29">init_get_bits</name><argument_list pos:start="509:30" pos:end="509:57">(<argument pos:start="509:31" pos:end="509:39"><expr pos:start="509:31" pos:end="509:39"><operator pos:start="509:31" pos:end="509:31">&amp;</operator><name pos:start="509:32" pos:end="509:39"><name pos:start="509:32" pos:end="509:33">hx</name><operator pos:start="509:34" pos:end="509:35">-&gt;</operator><name pos:start="509:36" pos:end="509:36">s</name><operator pos:start="509:37" pos:end="509:37">.</operator><name pos:start="509:38" pos:end="509:39">gb</name></name></expr></argument>, <argument pos:start="509:42" pos:end="509:44"><expr pos:start="509:42" pos:end="509:44"><name pos:start="509:42" pos:end="509:44">ptr</name></expr></argument>, <argument pos:start="509:47" pos:end="509:56"><expr pos:start="509:47" pos:end="509:56"><name pos:start="509:47" pos:end="509:56">bit_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="511:17" pos:end="513:40"><expr pos:start="511:17" pos:end="513:39"><name pos:start="511:17" pos:end="511:32"><name pos:start="511:17" pos:end="511:18">hx</name><operator pos:start="511:19" pos:end="511:20">-&gt;</operator><name pos:start="511:21" pos:end="511:32">intra_gb_ptr</name></name> <operator pos:start="511:34" pos:end="511:34">=</operator>

                <name pos:start="513:17" pos:end="513:32"><name pos:start="513:17" pos:end="513:18">hx</name><operator pos:start="513:19" pos:end="513:20">-&gt;</operator><name pos:start="513:21" pos:end="513:32">inter_gb_ptr</name></name> <operator pos:start="513:34" pos:end="513:34">=</operator> <name pos:start="513:36" pos:end="513:39">NULL</name></expr>;</expr_stmt>



                <if_stmt pos:start="517:17" pos:end="519:26"><if pos:start="517:17" pos:end="519:26">if <condition pos:start="517:20" pos:end="517:59">(<expr pos:start="517:21" pos:end="517:58"><operator pos:start="517:21" pos:end="517:21">(</operator><name pos:start="517:22" pos:end="517:24">err</name> <operator pos:start="517:26" pos:end="517:26">=</operator> <call pos:start="517:28" pos:end="517:53"><name pos:start="517:28" pos:end="517:46">decode_slice_header</name><argument_list pos:start="517:47" pos:end="517:53">(<argument pos:start="517:48" pos:end="517:49"><expr pos:start="517:48" pos:end="517:49"><name pos:start="517:48" pos:end="517:49">hx</name></expr></argument>, <argument pos:start="517:52" pos:end="517:52"><expr pos:start="517:52" pos:end="517:52"><name pos:start="517:52" pos:end="517:52">h</name></expr></argument>)</argument_list></call><operator pos:start="517:54" pos:end="517:54">)</operator> <operator pos:start="517:56" pos:end="517:56">&lt;</operator> <literal type="number" pos:start="517:58" pos:end="517:58">0</literal></expr>)</condition><block type="pseudo" pos:start="519:21" pos:end="519:26"><block_content pos:start="519:21" pos:end="519:26">

                    <break pos:start="519:21" pos:end="519:26">break;</break></block_content></block></if></if_stmt>



                <expr_stmt pos:start="523:17" pos:end="523:44"><expr pos:start="523:17" pos:end="523:43"><name pos:start="523:17" pos:end="523:39"><name pos:start="523:17" pos:end="523:18">hx</name><operator pos:start="523:19" pos:end="523:20">-&gt;</operator><name pos:start="523:21" pos:end="523:21">s</name><operator pos:start="523:22" pos:end="523:22">.</operator><name pos:start="523:23" pos:end="523:39">data_partitioning</name></name> <operator pos:start="523:41" pos:end="523:41">=</operator> <literal type="number" pos:start="523:43" pos:end="523:43">1</literal></expr>;</expr_stmt>

                <break pos:start="525:17" pos:end="525:22">break;</break>

            <case pos:start="527:13" pos:end="527:25">case <expr pos:start="527:18" pos:end="527:24"><name pos:start="527:18" pos:end="527:24">NAL_DPB</name></expr>:</case>

                <expr_stmt pos:start="529:17" pos:end="529:62"><expr pos:start="529:17" pos:end="529:61"><call pos:start="529:17" pos:end="529:61"><name pos:start="529:17" pos:end="529:29">init_get_bits</name><argument_list pos:start="529:30" pos:end="529:61">(<argument pos:start="529:31" pos:end="529:43"><expr pos:start="529:31" pos:end="529:43"><operator pos:start="529:31" pos:end="529:31">&amp;</operator><name pos:start="529:32" pos:end="529:43"><name pos:start="529:32" pos:end="529:33">hx</name><operator pos:start="529:34" pos:end="529:35">-&gt;</operator><name pos:start="529:36" pos:end="529:43">intra_gb</name></name></expr></argument>, <argument pos:start="529:46" pos:end="529:48"><expr pos:start="529:46" pos:end="529:48"><name pos:start="529:46" pos:end="529:48">ptr</name></expr></argument>, <argument pos:start="529:51" pos:end="529:60"><expr pos:start="529:51" pos:end="529:60"><name pos:start="529:51" pos:end="529:60">bit_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="531:17" pos:end="531:49"><expr pos:start="531:17" pos:end="531:48"><name pos:start="531:17" pos:end="531:32"><name pos:start="531:17" pos:end="531:18">hx</name><operator pos:start="531:19" pos:end="531:20">-&gt;</operator><name pos:start="531:21" pos:end="531:32">intra_gb_ptr</name></name> <operator pos:start="531:34" pos:end="531:34">=</operator> <operator pos:start="531:36" pos:end="531:36">&amp;</operator><name pos:start="531:37" pos:end="531:48"><name pos:start="531:37" pos:end="531:38">hx</name><operator pos:start="531:39" pos:end="531:40">-&gt;</operator><name pos:start="531:41" pos:end="531:48">intra_gb</name></name></expr>;</expr_stmt>

                <break pos:start="533:17" pos:end="533:22">break;</break>

            <case pos:start="535:13" pos:end="535:25">case <expr pos:start="535:18" pos:end="535:24"><name pos:start="535:18" pos:end="535:24">NAL_DPC</name></expr>:</case>

                <expr_stmt pos:start="537:17" pos:end="537:62"><expr pos:start="537:17" pos:end="537:61"><call pos:start="537:17" pos:end="537:61"><name pos:start="537:17" pos:end="537:29">init_get_bits</name><argument_list pos:start="537:30" pos:end="537:61">(<argument pos:start="537:31" pos:end="537:43"><expr pos:start="537:31" pos:end="537:43"><operator pos:start="537:31" pos:end="537:31">&amp;</operator><name pos:start="537:32" pos:end="537:43"><name pos:start="537:32" pos:end="537:33">hx</name><operator pos:start="537:34" pos:end="537:35">-&gt;</operator><name pos:start="537:36" pos:end="537:43">inter_gb</name></name></expr></argument>, <argument pos:start="537:46" pos:end="537:48"><expr pos:start="537:46" pos:end="537:48"><name pos:start="537:46" pos:end="537:48">ptr</name></expr></argument>, <argument pos:start="537:51" pos:end="537:60"><expr pos:start="537:51" pos:end="537:60"><name pos:start="537:51" pos:end="537:60">bit_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="539:17" pos:end="539:49"><expr pos:start="539:17" pos:end="539:48"><name pos:start="539:17" pos:end="539:32"><name pos:start="539:17" pos:end="539:18">hx</name><operator pos:start="539:19" pos:end="539:20">-&gt;</operator><name pos:start="539:21" pos:end="539:32">inter_gb_ptr</name></name> <operator pos:start="539:34" pos:end="539:34">=</operator> <operator pos:start="539:36" pos:end="539:36">&amp;</operator><name pos:start="539:37" pos:end="539:48"><name pos:start="539:37" pos:end="539:38">hx</name><operator pos:start="539:39" pos:end="539:40">-&gt;</operator><name pos:start="539:41" pos:end="539:48">inter_gb</name></name></expr>;</expr_stmt>



                <expr_stmt pos:start="543:17" pos:end="543:94"><expr pos:start="543:17" pos:end="543:93"><call pos:start="543:17" pos:end="543:93"><name pos:start="543:17" pos:end="543:22">av_log</name><argument_list pos:start="543:23" pos:end="543:93">(<argument pos:start="543:24" pos:end="543:33"><expr pos:start="543:24" pos:end="543:33"><name pos:start="543:24" pos:end="543:33"><name pos:start="543:24" pos:end="543:24">h</name><operator pos:start="543:25" pos:end="543:26">-&gt;</operator><name pos:start="543:27" pos:end="543:27">s</name><operator pos:start="543:28" pos:end="543:28">.</operator><name pos:start="543:29" pos:end="543:33">avctx</name></name></expr></argument>, <argument pos:start="543:36" pos:end="543:47"><expr pos:start="543:36" pos:end="543:47"><name pos:start="543:36" pos:end="543:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="543:50" pos:end="543:92"><expr pos:start="543:50" pos:end="543:92"><literal type="string" pos:start="543:50" pos:end="543:92">"Partitioned H.264 support is incomplete\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="545:17" pos:end="545:22">break;</break>



                <if_stmt pos:start="549:17" pos:end="571:36"><if pos:start="549:17" pos:end="571:36">if <condition pos:start="549:20" pos:end="569:54">(<expr pos:start="549:21" pos:end="569:53"><name pos:start="549:21" pos:end="549:43"><name pos:start="549:21" pos:end="549:22">hx</name><operator pos:start="549:23" pos:end="549:24">-&gt;</operator><name pos:start="549:25" pos:end="549:43">redundant_pic_count</name></name> <operator pos:start="549:45" pos:end="549:46">==</operator> <literal type="number" pos:start="549:48" pos:end="549:48">0</literal> <operator pos:start="549:50" pos:end="549:51">&amp;&amp;</operator>

                    <name pos:start="551:21" pos:end="551:36"><name pos:start="551:21" pos:end="551:22">hx</name><operator pos:start="551:23" pos:end="551:24">-&gt;</operator><name pos:start="551:25" pos:end="551:36">intra_gb_ptr</name></name> <operator pos:start="551:38" pos:end="551:39">&amp;&amp;</operator>

                    <name pos:start="553:21" pos:end="553:43"><name pos:start="553:21" pos:end="553:22">hx</name><operator pos:start="553:23" pos:end="553:24">-&gt;</operator><name pos:start="553:25" pos:end="553:25">s</name><operator pos:start="553:26" pos:end="553:26">.</operator><name pos:start="553:27" pos:end="553:43">data_partitioning</name></name> <operator pos:start="553:45" pos:end="553:46">&amp;&amp;</operator>

                    <name pos:start="555:21" pos:end="555:42"><name pos:start="555:21" pos:end="555:21">s</name><operator pos:start="555:22" pos:end="555:23">-&gt;</operator><name pos:start="555:24" pos:end="555:42">current_picture_ptr</name></name> <operator pos:start="555:44" pos:end="555:45">&amp;&amp;</operator>

                    <name pos:start="557:21" pos:end="557:42"><name pos:start="557:21" pos:end="557:21">s</name><operator pos:start="557:22" pos:end="557:23">-&gt;</operator><name pos:start="557:24" pos:end="557:42">context_initialized</name></name> <operator pos:start="557:44" pos:end="557:45">&amp;&amp;</operator>

                    <operator pos:start="559:21" pos:end="559:21">(</operator><name pos:start="559:22" pos:end="559:38"><name pos:start="559:22" pos:end="559:26">avctx</name><operator pos:start="559:27" pos:end="559:28">-&gt;</operator><name pos:start="559:29" pos:end="559:38">skip_frame</name></name> <operator pos:start="559:40" pos:end="559:40">&lt;</operator> <name pos:start="559:42" pos:end="559:57">AVDISCARD_NONREF</name> <operator pos:start="559:59" pos:end="559:60">||</operator> <name pos:start="559:62" pos:end="559:76"><name pos:start="559:62" pos:end="559:63">hx</name><operator pos:start="559:64" pos:end="559:65">-&gt;</operator><name pos:start="559:66" pos:end="559:76">nal_ref_idc</name></name><operator pos:start="559:77" pos:end="559:77">)</operator> <operator pos:start="559:79" pos:end="559:80">&amp;&amp;</operator>

                    <operator pos:start="561:21" pos:end="561:21">(</operator><name pos:start="561:22" pos:end="561:38"><name pos:start="561:22" pos:end="561:26">avctx</name><operator pos:start="561:27" pos:end="561:28">-&gt;</operator><name pos:start="561:29" pos:end="561:38">skip_frame</name></name> <operator pos:start="561:40" pos:end="561:40">&lt;</operator> <name pos:start="561:42" pos:end="561:56">AVDISCARD_BIDIR</name>  <operator pos:start="561:59" pos:end="561:60">||</operator>

                     <name pos:start="563:22" pos:end="563:39"><name pos:start="563:22" pos:end="563:23">hx</name><operator pos:start="563:24" pos:end="563:25">-&gt;</operator><name pos:start="563:26" pos:end="563:39">slice_type_nos</name></name> <operator pos:start="563:41" pos:end="563:42">!=</operator> <name pos:start="563:44" pos:end="563:60">AV_PICTURE_TYPE_B</name><operator pos:start="563:61" pos:end="563:61">)</operator> <operator pos:start="563:63" pos:end="563:64">&amp;&amp;</operator>

                    <operator pos:start="565:21" pos:end="565:21">(</operator><name pos:start="565:22" pos:end="565:38"><name pos:start="565:22" pos:end="565:26">avctx</name><operator pos:start="565:27" pos:end="565:28">-&gt;</operator><name pos:start="565:29" pos:end="565:38">skip_frame</name></name> <operator pos:start="565:40" pos:end="565:40">&lt;</operator> <name pos:start="565:42" pos:end="565:57">AVDISCARD_NONKEY</name> <operator pos:start="565:59" pos:end="565:60">||</operator>

                     <name pos:start="567:22" pos:end="567:39"><name pos:start="567:22" pos:end="567:23">hx</name><operator pos:start="567:24" pos:end="567:25">-&gt;</operator><name pos:start="567:26" pos:end="567:39">slice_type_nos</name></name> <operator pos:start="567:41" pos:end="567:42">==</operator> <name pos:start="567:44" pos:end="567:60">AV_PICTURE_TYPE_I</name><operator pos:start="567:61" pos:end="567:61">)</operator> <operator pos:start="567:63" pos:end="567:64">&amp;&amp;</operator>

                    <name pos:start="569:21" pos:end="569:37"><name pos:start="569:21" pos:end="569:25">avctx</name><operator pos:start="569:26" pos:end="569:27">-&gt;</operator><name pos:start="569:28" pos:end="569:37">skip_frame</name></name> <operator pos:start="569:39" pos:end="569:39">&lt;</operator> <name pos:start="569:41" pos:end="569:53">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="571:21" pos:end="571:36"><block_content pos:start="571:21" pos:end="571:36">

                    <expr_stmt pos:start="571:21" pos:end="571:36"><expr pos:start="571:21" pos:end="571:35"><name pos:start="571:21" pos:end="571:33">context_count</name><operator pos:start="571:34" pos:end="571:35">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="573:17" pos:end="573:22">break;</break>

            <case pos:start="575:13" pos:end="575:25">case <expr pos:start="575:18" pos:end="575:24"><name pos:start="575:18" pos:end="575:24">NAL_SEI</name></expr>:</case>

                <expr_stmt pos:start="577:17" pos:end="577:55"><expr pos:start="577:17" pos:end="577:54"><call pos:start="577:17" pos:end="577:54"><name pos:start="577:17" pos:end="577:29">init_get_bits</name><argument_list pos:start="577:30" pos:end="577:54">(<argument pos:start="577:31" pos:end="577:36"><expr pos:start="577:31" pos:end="577:36"><operator pos:start="577:31" pos:end="577:31">&amp;</operator><name pos:start="577:32" pos:end="577:36"><name pos:start="577:32" pos:end="577:32">s</name><operator pos:start="577:33" pos:end="577:34">-&gt;</operator><name pos:start="577:35" pos:end="577:36">gb</name></name></expr></argument>, <argument pos:start="577:39" pos:end="577:41"><expr pos:start="577:39" pos:end="577:41"><name pos:start="577:39" pos:end="577:41">ptr</name></expr></argument>, <argument pos:start="577:44" pos:end="577:53"><expr pos:start="577:44" pos:end="577:53"><name pos:start="577:44" pos:end="577:53">bit_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="579:17" pos:end="579:38"><expr pos:start="579:17" pos:end="579:37"><call pos:start="579:17" pos:end="579:37"><name pos:start="579:17" pos:end="579:34">ff_h264_decode_sei</name><argument_list pos:start="579:35" pos:end="579:37">(<argument pos:start="579:36" pos:end="579:36"><expr pos:start="579:36" pos:end="579:36"><name pos:start="579:36" pos:end="579:36">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="581:17" pos:end="581:22">break;</break>

            <case pos:start="583:13" pos:end="583:25">case <expr pos:start="583:18" pos:end="583:24"><name pos:start="583:18" pos:end="583:24">NAL_SPS</name></expr>:</case>

                <expr_stmt pos:start="585:17" pos:end="585:55"><expr pos:start="585:17" pos:end="585:54"><call pos:start="585:17" pos:end="585:54"><name pos:start="585:17" pos:end="585:29">init_get_bits</name><argument_list pos:start="585:30" pos:end="585:54">(<argument pos:start="585:31" pos:end="585:36"><expr pos:start="585:31" pos:end="585:36"><operator pos:start="585:31" pos:end="585:31">&amp;</operator><name pos:start="585:32" pos:end="585:36"><name pos:start="585:32" pos:end="585:32">s</name><operator pos:start="585:33" pos:end="585:34">-&gt;</operator><name pos:start="585:35" pos:end="585:36">gb</name></name></expr></argument>, <argument pos:start="585:39" pos:end="585:41"><expr pos:start="585:39" pos:end="585:41"><name pos:start="585:39" pos:end="585:41">ptr</name></expr></argument>, <argument pos:start="585:44" pos:end="585:53"><expr pos:start="585:44" pos:end="585:53"><name pos:start="585:44" pos:end="585:53">bit_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="587:17" pos:end="607:17"><if pos:start="587:17" pos:end="607:17">if <condition pos:start="587:20" pos:end="587:114">(<expr pos:start="587:21" pos:end="587:113"><call pos:start="587:21" pos:end="587:55"><name pos:start="587:21" pos:end="587:52">ff_h264_decode_seq_parameter_set</name><argument_list pos:start="587:53" pos:end="587:55">(<argument pos:start="587:54" pos:end="587:54"><expr pos:start="587:54" pos:end="587:54"><name pos:start="587:54" pos:end="587:54">h</name></expr></argument>)</argument_list></call> <operator pos:start="587:57" pos:end="587:57">&lt;</operator> <literal type="number" pos:start="587:59" pos:end="587:59">0</literal> <operator pos:start="587:61" pos:end="587:62">&amp;&amp;</operator> <operator pos:start="587:64" pos:end="587:64">(</operator><ternary pos:start="587:65" pos:end="587:112"><condition pos:start="587:65" pos:end="587:75"><expr pos:start="587:65" pos:end="587:73"><name pos:start="587:65" pos:end="587:73"><name pos:start="587:65" pos:end="587:65">h</name><operator pos:start="587:66" pos:end="587:67">-&gt;</operator><name pos:start="587:68" pos:end="587:73">is_avc</name></name></expr> ?</condition><then pos:start="587:77" pos:end="587:108"> <expr pos:start="587:77" pos:end="587:108"><operator pos:start="587:77" pos:end="587:77">(</operator><name pos:start="587:78" pos:end="587:84">nalsize</name> <operator pos:start="587:86" pos:end="587:87">!=</operator> <name pos:start="587:89" pos:end="587:96">consumed</name><operator pos:start="587:97" pos:end="587:97">)</operator> <operator pos:start="587:99" pos:end="587:100">&amp;&amp;</operator> <name pos:start="587:102" pos:end="587:108">nalsize</name></expr> </then><else pos:start="587:110" pos:end="587:112">: <expr pos:start="587:112" pos:end="587:112"><literal type="number" pos:start="587:112" pos:end="587:112">1</literal></expr></else></ternary><operator pos:start="587:113" pos:end="587:113">)</operator></expr>)</condition> <block pos:start="587:116" pos:end="607:17">{<block_content pos:start="589:21" pos:end="605:56">

                    <expr_stmt pos:start="589:21" pos:end="591:89"><expr pos:start="589:21" pos:end="591:88"><call pos:start="589:21" pos:end="591:88"><name pos:start="589:21" pos:end="589:26">av_log</name><argument_list pos:start="589:27" pos:end="591:88">(<argument pos:start="589:28" pos:end="589:37"><expr pos:start="589:28" pos:end="589:37"><name pos:start="589:28" pos:end="589:37"><name pos:start="589:28" pos:end="589:28">h</name><operator pos:start="589:29" pos:end="589:30">-&gt;</operator><name pos:start="589:31" pos:end="589:31">s</name><operator pos:start="589:32" pos:end="589:32">.</operator><name pos:start="589:33" pos:end="589:37">avctx</name></name></expr></argument>, <argument pos:start="589:40" pos:end="589:51"><expr pos:start="589:40" pos:end="589:51"><name pos:start="589:40" pos:end="589:51">AV_LOG_DEBUG</name></expr></argument>,

                           <argument pos:start="591:28" pos:end="591:87"><expr pos:start="591:28" pos:end="591:87"><literal type="string" pos:start="591:28" pos:end="591:87">"SPS decoding failure, trying again with the complete NAL\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="593:21" pos:end="595:79"><if pos:start="593:21" pos:end="595:79">if <condition pos:start="593:24" pos:end="593:34">(<expr pos:start="593:25" pos:end="593:33"><name pos:start="593:25" pos:end="593:33"><name pos:start="593:25" pos:end="593:25">h</name><operator pos:start="593:26" pos:end="593:27">-&gt;</operator><name pos:start="593:28" pos:end="593:33">is_avc</name></name></expr>)</condition><block type="pseudo" pos:start="595:25" pos:end="595:79"><block_content pos:start="595:25" pos:end="595:79">

                        <expr_stmt pos:start="595:25" pos:end="595:79"><expr pos:start="595:25" pos:end="595:78"><call pos:start="595:25" pos:end="595:78"><name pos:start="595:25" pos:end="595:34">av_assert0</name><argument_list pos:start="595:35" pos:end="595:78">(<argument pos:start="595:36" pos:end="595:77"><expr pos:start="595:36" pos:end="595:77"><name pos:start="595:36" pos:end="595:43">next_avc</name> <operator pos:start="595:45" pos:end="595:45">-</operator> <name pos:start="595:47" pos:end="595:55">buf_index</name> <operator pos:start="595:57" pos:end="595:57">+</operator> <name pos:start="595:59" pos:end="595:66">consumed</name> <operator pos:start="595:68" pos:end="595:69">==</operator> <name pos:start="595:71" pos:end="595:77">nalsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="597:21" pos:end="599:30"><if pos:start="597:21" pos:end="599:30">if <condition pos:start="597:24" pos:end="597:75">(<expr pos:start="597:25" pos:end="597:74"><operator pos:start="597:25" pos:end="597:25">(</operator><name pos:start="597:26" pos:end="597:33">next_avc</name> <operator pos:start="597:35" pos:end="597:35">-</operator> <name pos:start="597:37" pos:end="597:45">buf_index</name> <operator pos:start="597:47" pos:end="597:47">+</operator> <name pos:start="597:49" pos:end="597:56">consumed</name> <operator pos:start="597:58" pos:end="597:58">-</operator> <literal type="number" pos:start="597:60" pos:end="597:60">1</literal><operator pos:start="597:61" pos:end="597:61">)</operator> <operator pos:start="597:63" pos:end="597:64">&gt;=</operator> <name pos:start="597:66" pos:end="597:72">INT_MAX</name><operator pos:start="597:73" pos:end="597:73">/</operator><literal type="number" pos:start="597:74" pos:end="597:74">8</literal></expr>)</condition><block type="pseudo" pos:start="599:25" pos:end="599:30"><block_content pos:start="599:25" pos:end="599:30">

                        <break pos:start="599:25" pos:end="599:30">break;</break></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="601:21" pos:end="603:75"><expr pos:start="601:21" pos:end="603:74"><call pos:start="601:21" pos:end="603:74"><name pos:start="601:21" pos:end="601:33">init_get_bits</name><argument_list pos:start="601:34" pos:end="603:74">(<argument pos:start="601:35" pos:end="601:40"><expr pos:start="601:35" pos:end="601:40"><operator pos:start="601:35" pos:end="601:35">&amp;</operator><name pos:start="601:36" pos:end="601:40"><name pos:start="601:36" pos:end="601:36">s</name><operator pos:start="601:37" pos:end="601:38">-&gt;</operator><name pos:start="601:39" pos:end="601:40">gb</name></name></expr></argument>, <argument pos:start="601:43" pos:end="601:72"><expr pos:start="601:43" pos:end="601:72"><operator pos:start="601:43" pos:end="601:43">&amp;</operator><name pos:start="601:44" pos:end="601:72"><name pos:start="601:44" pos:end="601:46">buf</name><index pos:start="601:47" pos:end="601:72">[<expr pos:start="601:48" pos:end="601:71"><name pos:start="601:48" pos:end="601:56">buf_index</name> <operator pos:start="601:58" pos:end="601:58">+</operator> <literal type="number" pos:start="601:60" pos:end="601:62">1</literal> <operator pos:start="601:62" pos:end="601:62">-</operator> <name pos:start="601:64" pos:end="601:71">consumed</name></expr>]</index></name></expr></argument>,

                                  <argument pos:start="603:35" pos:end="603:73"><expr pos:start="603:35" pos:end="603:73"><literal type="number" pos:start="603:35" pos:end="603:35">8</literal><operator pos:start="603:36" pos:end="603:36">*</operator><operator pos:start="603:37" pos:end="603:37">(</operator><name pos:start="603:38" pos:end="603:45">next_avc</name> <operator pos:start="603:47" pos:end="603:47">-</operator> <name pos:start="603:49" pos:end="603:57">buf_index</name> <operator pos:start="603:59" pos:end="603:59">+</operator> <name pos:start="603:61" pos:end="603:68">consumed</name> <operator pos:start="603:70" pos:end="603:70">-</operator> <literal type="number" pos:start="603:72" pos:end="603:72">1</literal><operator pos:start="603:73" pos:end="603:73">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="605:21" pos:end="605:56"><expr pos:start="605:21" pos:end="605:55"><call pos:start="605:21" pos:end="605:55"><name pos:start="605:21" pos:end="605:52">ff_h264_decode_seq_parameter_set</name><argument_list pos:start="605:53" pos:end="605:55">(<argument pos:start="605:54" pos:end="605:54"><expr pos:start="605:54" pos:end="605:54"><name pos:start="605:54" pos:end="605:54">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <break pos:start="611:17" pos:end="611:22">break;</break>

            <case pos:start="613:13" pos:end="613:25">case <expr pos:start="613:18" pos:end="613:24"><name pos:start="613:18" pos:end="613:24">NAL_PPS</name></expr>:</case>

                <expr_stmt pos:start="615:17" pos:end="615:55"><expr pos:start="615:17" pos:end="615:54"><call pos:start="615:17" pos:end="615:54"><name pos:start="615:17" pos:end="615:29">init_get_bits</name><argument_list pos:start="615:30" pos:end="615:54">(<argument pos:start="615:31" pos:end="615:36"><expr pos:start="615:31" pos:end="615:36"><operator pos:start="615:31" pos:end="615:31">&amp;</operator><name pos:start="615:32" pos:end="615:36"><name pos:start="615:32" pos:end="615:32">s</name><operator pos:start="615:33" pos:end="615:34">-&gt;</operator><name pos:start="615:35" pos:end="615:36">gb</name></name></expr></argument>, <argument pos:start="615:39" pos:end="615:41"><expr pos:start="615:39" pos:end="615:41"><name pos:start="615:39" pos:end="615:41">ptr</name></expr></argument>, <argument pos:start="615:44" pos:end="615:53"><expr pos:start="615:44" pos:end="615:53"><name pos:start="615:44" pos:end="615:53">bit_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="617:17" pos:end="617:68"><expr pos:start="617:17" pos:end="617:67"><call pos:start="617:17" pos:end="617:67"><name pos:start="617:17" pos:end="617:52">ff_h264_decode_picture_parameter_set</name><argument_list pos:start="617:53" pos:end="617:67">(<argument pos:start="617:54" pos:end="617:54"><expr pos:start="617:54" pos:end="617:54"><name pos:start="617:54" pos:end="617:54">h</name></expr></argument>, <argument pos:start="617:57" pos:end="617:66"><expr pos:start="617:57" pos:end="617:66"><name pos:start="617:57" pos:end="617:66">bit_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="619:17" pos:end="619:22">break;</break>

            <case pos:start="621:13" pos:end="621:25">case <expr pos:start="621:18" pos:end="621:24"><name pos:start="621:18" pos:end="621:24">NAL_AUD</name></expr>:</case>

            <case pos:start="623:13" pos:end="623:34">case <expr pos:start="623:18" pos:end="623:33"><name pos:start="623:18" pos:end="623:33">NAL_END_SEQUENCE</name></expr>:</case>

            <case pos:start="625:13" pos:end="625:32">case <expr pos:start="625:18" pos:end="625:31"><name pos:start="625:18" pos:end="625:31">NAL_END_STREAM</name></expr>:</case>

            <case pos:start="627:13" pos:end="627:33">case <expr pos:start="627:18" pos:end="627:32"><name pos:start="627:18" pos:end="627:32">NAL_FILLER_DATA</name></expr>:</case>

            <case pos:start="629:13" pos:end="629:29">case <expr pos:start="629:18" pos:end="629:28"><name pos:start="629:18" pos:end="629:28">NAL_SPS_EXT</name></expr>:</case>

            <case pos:start="631:13" pos:end="631:37">case <expr pos:start="631:18" pos:end="631:36"><name pos:start="631:18" pos:end="631:36">NAL_AUXILIARY_SLICE</name></expr>:</case>

                <break pos:start="633:17" pos:end="633:22">break;</break>

            <case pos:start="635:13" pos:end="635:31">case <expr pos:start="635:18" pos:end="635:30"><name pos:start="635:18" pos:end="635:30">NAL_FF_IGNORE</name></expr>:</case>

                <break pos:start="637:17" pos:end="637:22">break;</break>

            <default pos:start="639:13" pos:end="639:20">default:</default>

                <expr_stmt pos:start="641:17" pos:end="643:54"><expr pos:start="641:17" pos:end="643:53"><call pos:start="641:17" pos:end="643:53"><name pos:start="641:17" pos:end="641:22">av_log</name><argument_list pos:start="641:23" pos:end="643:53">(<argument pos:start="641:24" pos:end="641:28"><expr pos:start="641:24" pos:end="641:28"><name pos:start="641:24" pos:end="641:28">avctx</name></expr></argument>, <argument pos:start="641:31" pos:end="641:42"><expr pos:start="641:31" pos:end="641:42"><name pos:start="641:31" pos:end="641:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="641:45" pos:end="641:78"><expr pos:start="641:45" pos:end="641:78"><literal type="string" pos:start="641:45" pos:end="641:78">"Unknown NAL code: %d (%d bits)\n"</literal></expr></argument>,

                       <argument pos:start="643:24" pos:end="643:40"><expr pos:start="643:24" pos:end="643:40"><name pos:start="643:24" pos:end="643:40"><name pos:start="643:24" pos:end="643:25">hx</name><operator pos:start="643:26" pos:end="643:27">-&gt;</operator><name pos:start="643:28" pos:end="643:40">nal_unit_type</name></name></expr></argument>, <argument pos:start="643:43" pos:end="643:52"><expr pos:start="643:43" pos:end="643:52"><name pos:start="643:43" pos:end="643:52">bit_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>



            <if_stmt pos:start="649:13" pos:end="655:13"><if pos:start="649:13" pos:end="655:13">if <condition pos:start="649:16" pos:end="649:49">(<expr pos:start="649:17" pos:end="649:48"><name pos:start="649:17" pos:end="649:29">context_count</name> <operator pos:start="649:31" pos:end="649:32">==</operator> <name pos:start="649:34" pos:end="649:48"><name pos:start="649:34" pos:end="649:34">h</name><operator pos:start="649:35" pos:end="649:36">-&gt;</operator><name pos:start="649:37" pos:end="649:48">max_contexts</name></name></expr>)</condition> <block pos:start="649:51" pos:end="655:13">{<block_content pos:start="651:17" pos:end="653:34">

                <expr_stmt pos:start="651:17" pos:end="651:56"><expr pos:start="651:17" pos:end="651:55"><call pos:start="651:17" pos:end="651:55"><name pos:start="651:17" pos:end="651:37">execute_decode_slices</name><argument_list pos:start="651:38" pos:end="651:55">(<argument pos:start="651:39" pos:end="651:39"><expr pos:start="651:39" pos:end="651:39"><name pos:start="651:39" pos:end="651:39">h</name></expr></argument>, <argument pos:start="651:42" pos:end="651:54"><expr pos:start="651:42" pos:end="651:54"><name pos:start="651:42" pos:end="651:54">context_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="653:17" pos:end="653:34"><expr pos:start="653:17" pos:end="653:33"><name pos:start="653:17" pos:end="653:29">context_count</name> <operator pos:start="653:31" pos:end="653:31">=</operator> <literal type="number" pos:start="653:33" pos:end="653:33">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="659:13" pos:end="681:13"><if pos:start="659:13" pos:end="661:80">if <condition pos:start="659:16" pos:end="659:24">(<expr pos:start="659:17" pos:end="659:23"><name pos:start="659:17" pos:end="659:19">err</name> <operator pos:start="659:21" pos:end="659:21">&lt;</operator> <literal type="number" pos:start="659:23" pos:end="659:23">0</literal></expr>)</condition><block type="pseudo" pos:start="661:17" pos:end="661:80"><block_content pos:start="661:17" pos:end="661:80">

                <expr_stmt pos:start="661:17" pos:end="661:80"><expr pos:start="661:17" pos:end="661:79"><call pos:start="661:17" pos:end="661:79"><name pos:start="661:17" pos:end="661:22">av_log</name><argument_list pos:start="661:23" pos:end="661:79">(<argument pos:start="661:24" pos:end="661:33"><expr pos:start="661:24" pos:end="661:33"><name pos:start="661:24" pos:end="661:33"><name pos:start="661:24" pos:end="661:24">h</name><operator pos:start="661:25" pos:end="661:26">-&gt;</operator><name pos:start="661:27" pos:end="661:27">s</name><operator pos:start="661:28" pos:end="661:28">.</operator><name pos:start="661:29" pos:end="661:33">avctx</name></name></expr></argument>, <argument pos:start="661:36" pos:end="661:47"><expr pos:start="661:36" pos:end="661:47"><name pos:start="661:36" pos:end="661:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="661:50" pos:end="661:78"><expr pos:start="661:50" pos:end="661:78"><literal type="string" pos:start="661:50" pos:end="661:78">"decode_slice_header error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="663:13" pos:end="681:13">else if <condition pos:start="663:21" pos:end="663:30">(<expr pos:start="663:22" pos:end="663:29"><name pos:start="663:22" pos:end="663:24">err</name> <operator pos:start="663:26" pos:end="663:27">==</operator> <literal type="number" pos:start="663:29" pos:end="663:29">1</literal></expr>)</condition> <block pos:start="663:32" pos:end="681:13">{<block_content pos:start="673:17" pos:end="679:27">

                <comment type="block" pos:start="665:17" pos:end="671:71">/* Slice could not be decoded in parallel mode, copy down

                 * NAL unit stuff to context 0 and restart. Note that

                 * rbsp_buffer is not transferred, but since we no longer

                 * run in parallel mode this should not be an issue. */</comment>

                <expr_stmt pos:start="673:17" pos:end="673:53"><expr pos:start="673:17" pos:end="673:52"><name pos:start="673:17" pos:end="673:32"><name pos:start="673:17" pos:end="673:17">h</name><operator pos:start="673:18" pos:end="673:19">-&gt;</operator><name pos:start="673:20" pos:end="673:32">nal_unit_type</name></name> <operator pos:start="673:34" pos:end="673:34">=</operator> <name pos:start="673:36" pos:end="673:52"><name pos:start="673:36" pos:end="673:37">hx</name><operator pos:start="673:38" pos:end="673:39">-&gt;</operator><name pos:start="673:40" pos:end="673:52">nal_unit_type</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="675:17" pos:end="675:51"><expr pos:start="675:17" pos:end="675:50"><name pos:start="675:17" pos:end="675:30"><name pos:start="675:17" pos:end="675:17">h</name><operator pos:start="675:18" pos:end="675:19">-&gt;</operator><name pos:start="675:20" pos:end="675:30">nal_ref_idc</name></name>   <operator pos:start="675:34" pos:end="675:34">=</operator> <name pos:start="675:36" pos:end="675:50"><name pos:start="675:36" pos:end="675:37">hx</name><operator pos:start="675:38" pos:end="675:39">-&gt;</operator><name pos:start="675:40" pos:end="675:50">nal_ref_idc</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="677:17" pos:end="677:37"><expr pos:start="677:17" pos:end="677:36"><name pos:start="677:17" pos:end="677:18">hx</name>               <operator pos:start="677:34" pos:end="677:34">=</operator> <name pos:start="677:36" pos:end="677:36">h</name></expr>;</expr_stmt>

                <goto pos:start="679:17" pos:end="679:27">goto <name pos:start="679:22" pos:end="679:26">again</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <if_stmt pos:start="687:5" pos:end="689:48"><if pos:start="687:5" pos:end="689:48">if <condition pos:start="687:8" pos:end="687:22">(<expr pos:start="687:9" pos:end="687:21"><name pos:start="687:9" pos:end="687:21">context_count</name></expr>)</condition><block type="pseudo" pos:start="689:9" pos:end="689:48"><block_content pos:start="689:9" pos:end="689:48">

        <expr_stmt pos:start="689:9" pos:end="689:48"><expr pos:start="689:9" pos:end="689:47"><call pos:start="689:9" pos:end="689:47"><name pos:start="689:9" pos:end="689:29">execute_decode_slices</name><argument_list pos:start="689:30" pos:end="689:47">(<argument pos:start="689:31" pos:end="689:31"><expr pos:start="689:31" pos:end="689:31"><name pos:start="689:31" pos:end="689:31">h</name></expr></argument>, <argument pos:start="689:34" pos:end="689:46"><expr pos:start="689:34" pos:end="689:46"><name pos:start="689:34" pos:end="689:46">context_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<label pos:start="693:1" pos:end="693:4"><name pos:start="693:1" pos:end="693:3">end</name>:</label>

    <comment type="block" pos:start="695:5" pos:end="695:18">/* clean up */</comment>

    <if_stmt pos:start="697:5" pos:end="705:5"><if pos:start="697:5" pos:end="705:5">if <condition pos:start="697:8" pos:end="699:22">(<expr pos:start="697:9" pos:end="699:21"><name pos:start="697:9" pos:end="697:30"><name pos:start="697:9" pos:end="697:9">s</name><operator pos:start="697:10" pos:end="697:11">-&gt;</operator><name pos:start="697:12" pos:end="697:30">current_picture_ptr</name></name> <operator pos:start="697:32" pos:end="697:33">&amp;&amp;</operator> <name pos:start="697:35" pos:end="697:64"><name pos:start="697:35" pos:end="697:35">s</name><operator pos:start="697:36" pos:end="697:37">-&gt;</operator><name pos:start="697:38" pos:end="697:56">current_picture_ptr</name><operator pos:start="697:57" pos:end="697:58">-&gt;</operator><name pos:start="697:59" pos:end="697:64">owner2</name></name> <operator pos:start="697:66" pos:end="697:67">==</operator> <name pos:start="697:69" pos:end="697:69">s</name> <operator pos:start="697:71" pos:end="697:72">&amp;&amp;</operator>

        <operator pos:start="699:9" pos:end="699:9">!</operator><name pos:start="699:10" pos:end="699:21"><name pos:start="699:10" pos:end="699:10">s</name><operator pos:start="699:11" pos:end="699:12">-&gt;</operator><name pos:start="699:13" pos:end="699:21">droppable</name></name></expr>)</condition> <block pos:start="699:24" pos:end="705:5">{<block_content pos:start="701:9" pos:end="703:77">

        <expr_stmt pos:start="701:9" pos:end="703:77"><expr pos:start="701:9" pos:end="703:76"><call pos:start="701:9" pos:end="703:76"><name pos:start="701:9" pos:end="701:33">ff_thread_report_progress</name><argument_list pos:start="701:34" pos:end="703:76">(<argument pos:start="701:35" pos:end="701:60"><expr pos:start="701:35" pos:end="701:60"><operator pos:start="701:35" pos:end="701:35">&amp;</operator><name pos:start="701:36" pos:end="701:60"><name pos:start="701:36" pos:end="701:36">s</name><operator pos:start="701:37" pos:end="701:38">-&gt;</operator><name pos:start="701:39" pos:end="701:57">current_picture_ptr</name><operator pos:start="701:58" pos:end="701:59">-&gt;</operator><name pos:start="701:60" pos:end="701:60">f</name></name></expr></argument>, <argument pos:start="701:63" pos:end="701:69"><expr pos:start="701:63" pos:end="701:69"><name pos:start="701:63" pos:end="701:69">INT_MAX</name></expr></argument>,

                                  <argument pos:start="703:35" pos:end="703:75"><expr pos:start="703:35" pos:end="703:75"><name pos:start="703:35" pos:end="703:54"><name pos:start="703:35" pos:end="703:35">s</name><operator pos:start="703:36" pos:end="703:37">-&gt;</operator><name pos:start="703:38" pos:end="703:54">picture_structure</name></name> <operator pos:start="703:56" pos:end="703:57">==</operator> <name pos:start="703:59" pos:end="703:75">PICT_BOTTOM_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="709:5" pos:end="709:21">return <expr pos:start="709:12" pos:end="709:20"><name pos:start="709:12" pos:end="709:20">buf_index</name></expr>;</return>

</block_content>}</block></function>
</unit>
