<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14280.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">bool</name></type> <name pos:start="1:6" pos:end="1:20">has_help_option</name><parameter_list pos:start="1:21" pos:end="1:39">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:33"><specifier pos:start="1:22" pos:end="1:26">const</specifier> <name pos:start="1:28" pos:end="1:31">char</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:38">param</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:18">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">size_t</name></type> <name pos:start="5:12" pos:end="5:17">buflen</name> <init pos:start="5:19" pos:end="5:37">= <expr pos:start="5:21" pos:end="5:37"><call pos:start="5:21" pos:end="5:33"><name pos:start="5:21" pos:end="5:26">strlen</name><argument_list pos:start="5:27" pos:end="5:33">(<argument pos:start="5:28" pos:end="5:32"><expr pos:start="5:28" pos:end="5:32"><name pos:start="5:28" pos:end="5:32">param</name></expr></argument>)</argument_list></call> <operator pos:start="5:35" pos:end="5:35">+</operator> <literal type="number" pos:start="5:37" pos:end="5:37">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:13">buf</name> <init pos:start="7:15" pos:end="7:32">= <expr pos:start="7:17" pos:end="7:32"><call pos:start="7:17" pos:end="7:32"><name pos:start="7:17" pos:end="7:24">g_malloc</name><argument_list pos:start="7:25" pos:end="7:32">(<argument pos:start="7:26" pos:end="7:31"><expr pos:start="7:26" pos:end="7:31"><name pos:start="7:26" pos:end="7:31">buflen</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">p</name> <init pos:start="9:19" pos:end="9:25">= <expr pos:start="9:21" pos:end="9:25"><name pos:start="9:21" pos:end="9:25">param</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:15">result</name> <init pos:start="11:17" pos:end="11:23">= <expr pos:start="11:19" pos:end="11:23"><name pos:start="11:19" pos:end="11:23">false</name></expr></init></decl>;</decl_stmt>



    <while pos:start="15:5" pos:end="35:5">while <condition pos:start="15:11" pos:end="15:14">(<expr pos:start="15:12" pos:end="15:13"><operator pos:start="15:12" pos:end="15:12">*</operator><name pos:start="15:13" pos:end="15:13">p</name></expr>)</condition> <block pos:start="15:16" pos:end="35:5">{<block_content pos:start="17:9" pos:end="33:9">

        <expr_stmt pos:start="17:9" pos:end="17:42"><expr pos:start="17:9" pos:end="17:41"><name pos:start="17:9" pos:end="17:9">p</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <call pos:start="17:13" pos:end="17:41"><name pos:start="17:13" pos:end="17:25">get_opt_value</name><argument_list pos:start="17:26" pos:end="17:41">(<argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><name pos:start="17:27" pos:end="17:29">buf</name></expr></argument>, <argument pos:start="17:32" pos:end="17:37"><expr pos:start="17:32" pos:end="17:37"><name pos:start="17:32" pos:end="17:37">buflen</name></expr></argument>, <argument pos:start="17:40" pos:end="17:40"><expr pos:start="17:40" pos:end="17:40"><name pos:start="17:40" pos:end="17:40">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:15">(<expr pos:start="19:13" pos:end="19:14"><operator pos:start="19:13" pos:end="19:13">*</operator><name pos:start="19:14" pos:end="19:14">p</name></expr>)</condition> <block pos:start="19:17" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:16">

            <expr_stmt pos:start="21:13" pos:end="21:16"><expr pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:13">p</name><operator pos:start="21:14" pos:end="21:15">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:32">(<expr pos:start="27:13" pos:end="27:31"><call pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:26">is_help_option</name><argument_list pos:start="27:27" pos:end="27:31">(<argument pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:30">buf</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:34" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:21">

            <expr_stmt pos:start="29:13" pos:end="29:26"><expr pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:18">result</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:25">true</name></expr>;</expr_stmt>

            <goto pos:start="31:13" pos:end="31:21">goto <name pos:start="31:18" pos:end="31:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



<label pos:start="39:1" pos:end="39:4"><name pos:start="39:1" pos:end="39:3">out</name>:</label>

    <expr_stmt pos:start="41:5" pos:end="41:14"><expr pos:start="41:5" pos:end="41:13"><call pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:8">free</name><argument_list pos:start="41:9" pos:end="41:13">(<argument pos:start="41:10" pos:end="41:12"><expr pos:start="41:10" pos:end="41:12"><name pos:start="41:10" pos:end="41:12">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:18">return <expr pos:start="43:12" pos:end="43:17"><name pos:start="43:12" pos:end="43:17">result</name></expr>;</return>

</block_content>}</block></function>
</unit>
