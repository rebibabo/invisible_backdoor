<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10445.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">update_odml_entry</name><parameter_list pos:start="1:30" pos:end="1:79">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:66"><decl pos:start="1:51" pos:end="1:66"><type pos:start="1:51" pos:end="1:66"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:66">stream_index</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:78"><decl pos:start="1:69" pos:end="1:78"><type pos:start="1:69" pos:end="1:78"><name pos:start="1:69" pos:end="1:75">int64_t</name></type> <name pos:start="1:77" pos:end="1:78">ix</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:33">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">AVIContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">avi</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:59"><decl pos:start="9:5" pos:end="9:58"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">AVIStream</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:20">avist</name> <init pos:start="9:22" pos:end="9:58">= <expr pos:start="9:24" pos:end="9:58"><name pos:start="9:24" pos:end="9:47"><name pos:start="9:24" pos:end="9:24">s</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:33">streams</name><index pos:start="9:34" pos:end="9:47">[<expr pos:start="9:35" pos:end="9:46"><name pos:start="9:35" pos:end="9:46">stream_index</name></expr>]</index></name><operator pos:start="9:48" pos:end="9:49">-&gt;</operator><name pos:start="9:50" pos:end="9:58">priv_data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">au_byterate</name></decl>, <decl pos:start="13:22" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:29">au_ssize</name></decl>, <decl pos:start="13:32" pos:end="13:39"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:32" pos:end="13:39">au_scale</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><call pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:14">avio_flush</name><argument_list pos:start="17:15" pos:end="17:18">(<argument pos:start="17:16" pos:end="17:17"><expr pos:start="17:16" pos:end="17:17"><name pos:start="17:16" pos:end="17:17">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:24"><expr pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:7">pos</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:23"><name pos:start="19:11" pos:end="19:19">avio_tell</name><argument_list pos:start="19:20" pos:end="19:23">(<argument pos:start="19:21" pos:end="19:22"><expr pos:start="19:21" pos:end="19:22"><name pos:start="19:21" pos:end="19:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:60">/* Updating one entry in the AVI OpenDML master index */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:59"><expr pos:start="25:5" pos:end="25:58"><call pos:start="25:5" pos:end="25:58"><name pos:start="25:5" pos:end="25:13">avio_seek</name><argument_list pos:start="25:14" pos:end="25:58">(<argument pos:start="25:15" pos:end="25:16"><expr pos:start="25:15" pos:end="25:16"><name pos:start="25:15" pos:end="25:16">pb</name></expr></argument>, <argument pos:start="25:19" pos:end="25:47"><expr pos:start="25:19" pos:end="25:47"><name pos:start="25:19" pos:end="25:43"><name pos:start="25:19" pos:end="25:23">avist</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:32">indexes</name><operator pos:start="25:33" pos:end="25:33">.</operator><name pos:start="25:34" pos:end="25:43">indx_start</name></name> <operator pos:start="25:45" pos:end="25:45">-</operator> <literal type="number" pos:start="25:47" pos:end="25:47">8</literal></expr></argument>, <argument pos:start="25:50" pos:end="25:57"><expr pos:start="25:50" pos:end="25:57"><name pos:start="25:50" pos:end="25:57">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><call pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:16">ffio_wfourcc</name><argument_list pos:start="27:17" pos:end="27:28">(<argument pos:start="27:18" pos:end="27:19"><expr pos:start="27:18" pos:end="27:19"><name pos:start="27:18" pos:end="27:19">pb</name></expr></argument>, <argument pos:start="27:22" pos:end="27:27"><expr pos:start="27:22" pos:end="27:27"><literal type="string" pos:start="27:22" pos:end="27:27">"indx"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="block" pos:start="27:43" pos:end="27:67">/* enabling this entry */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:21"><expr pos:start="29:5" pos:end="29:20"><call pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:13">avio_skip</name><argument_list pos:start="29:14" pos:end="29:20">(<argument pos:start="29:15" pos:end="29:16"><expr pos:start="29:15" pos:end="29:16"><name pos:start="29:15" pos:end="29:16">pb</name></expr></argument>, <argument pos:start="29:19" pos:end="29:19"><expr pos:start="29:19" pos:end="29:19"><literal type="number" pos:start="29:19" pos:end="29:19">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:32"><expr pos:start="31:5" pos:end="31:31"><call pos:start="31:5" pos:end="31:31"><name pos:start="31:5" pos:end="31:13">avio_wl32</name><argument_list pos:start="31:14" pos:end="31:31">(<argument pos:start="31:15" pos:end="31:16"><expr pos:start="31:15" pos:end="31:16"><name pos:start="31:15" pos:end="31:16">pb</name></expr></argument>, <argument pos:start="31:19" pos:end="31:30"><expr pos:start="31:19" pos:end="31:30"><name pos:start="31:19" pos:end="31:30"><name pos:start="31:19" pos:end="31:21">avi</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:30">riff_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>          <comment type="block" pos:start="31:43" pos:end="31:61">/* nEntriesInUse */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:37"><expr pos:start="33:5" pos:end="33:36"><call pos:start="33:5" pos:end="33:36"><name pos:start="33:5" pos:end="33:13">avio_skip</name><argument_list pos:start="33:14" pos:end="33:36">(<argument pos:start="33:15" pos:end="33:16"><expr pos:start="33:15" pos:end="33:16"><name pos:start="33:15" pos:end="33:16">pb</name></expr></argument>, <argument pos:start="33:19" pos:end="33:35"><expr pos:start="33:19" pos:end="33:35"><literal type="number" pos:start="33:19" pos:end="33:20">16</literal> <operator pos:start="33:22" pos:end="33:22">*</operator> <name pos:start="33:24" pos:end="33:35"><name pos:start="33:24" pos:end="33:26">avi</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:35">riff_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:22"><expr pos:start="35:5" pos:end="35:21"><call pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:13">avio_wl64</name><argument_list pos:start="35:14" pos:end="35:21">(<argument pos:start="35:15" pos:end="35:16"><expr pos:start="35:15" pos:end="35:16"><name pos:start="35:15" pos:end="35:16">pb</name></expr></argument>, <argument pos:start="35:19" pos:end="35:20"><expr pos:start="35:19" pos:end="35:20"><name pos:start="35:19" pos:end="35:20">ix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                    <comment type="block" pos:start="35:43" pos:end="35:56">/* qwOffset */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><call pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:13">avio_wl32</name><argument_list pos:start="37:14" pos:end="37:27">(<argument pos:start="37:15" pos:end="37:16"><expr pos:start="37:15" pos:end="37:16"><name pos:start="37:15" pos:end="37:16">pb</name></expr></argument>, <argument pos:start="37:19" pos:end="37:26"><expr pos:start="37:19" pos:end="37:26"><name pos:start="37:19" pos:end="37:21">pos</name> <operator pos:start="37:23" pos:end="37:23">-</operator> <name pos:start="37:25" pos:end="37:26">ix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>              <comment type="block" pos:start="37:43" pos:end="37:54">/* dwSize */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:91"><expr pos:start="39:5" pos:end="39:90"><call pos:start="39:5" pos:end="39:90"><name pos:start="39:5" pos:end="39:28">ff_parse_specific_params</name><argument_list pos:start="39:29" pos:end="39:90">(<argument pos:start="39:30" pos:end="39:53"><expr pos:start="39:30" pos:end="39:53"><name pos:start="39:30" pos:end="39:53"><name pos:start="39:30" pos:end="39:30">s</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:39">streams</name><index pos:start="39:40" pos:end="39:53">[<expr pos:start="39:41" pos:end="39:52"><name pos:start="39:41" pos:end="39:52">stream_index</name></expr>]</index></name></expr></argument>, <argument pos:start="39:56" pos:end="39:67"><expr pos:start="39:56" pos:end="39:67"><operator pos:start="39:56" pos:end="39:56">&amp;</operator><name pos:start="39:57" pos:end="39:67">au_byterate</name></expr></argument>, <argument pos:start="39:70" pos:end="39:78"><expr pos:start="39:70" pos:end="39:78"><operator pos:start="39:70" pos:end="39:70">&amp;</operator><name pos:start="39:71" pos:end="39:78">au_ssize</name></expr></argument>, <argument pos:start="39:81" pos:end="39:89"><expr pos:start="39:81" pos:end="39:89"><operator pos:start="39:81" pos:end="39:81">&amp;</operator><name pos:start="39:82" pos:end="39:89">au_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="57:44"><if pos:start="41:5" pos:end="55:5">if <condition pos:start="41:8" pos:end="41:90">(<expr pos:start="41:9" pos:end="41:89"><name pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:18">streams</name><index pos:start="41:19" pos:end="41:32">[<expr pos:start="41:20" pos:end="41:31"><name pos:start="41:20" pos:end="41:31">stream_index</name></expr>]</index></name><operator pos:start="41:33" pos:end="41:34">-&gt;</operator><name pos:start="41:35" pos:end="41:51"><name pos:start="41:35" pos:end="41:39">codec</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:51">codec_type</name></name> <operator pos:start="41:53" pos:end="41:54">==</operator> <name pos:start="41:56" pos:end="41:73">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="41:75" pos:end="41:76">&amp;&amp;</operator> <name pos:start="41:78" pos:end="41:85">au_ssize</name> <operator pos:start="41:87" pos:end="41:87">&gt;</operator> <literal type="number" pos:start="41:89" pos:end="41:89">0</literal></expr>)</condition> <block pos:start="41:92" pos:end="55:5">{<block_content pos:start="43:9" pos:end="53:50">

        <decl_stmt pos:start="43:9" pos:end="43:97"><decl pos:start="43:9" pos:end="43:96"><type pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:16">uint32_t</name></type> <name pos:start="43:18" pos:end="43:32">audio_segm_size</name> <init pos:start="43:34" pos:end="43:96">= <expr pos:start="43:36" pos:end="43:96"><operator pos:start="43:36" pos:end="43:36">(</operator><name pos:start="43:37" pos:end="43:60"><name pos:start="43:37" pos:end="43:41">avist</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:60">audio_strm_length</name></name> <operator pos:start="43:62" pos:end="43:62">-</operator> <name pos:start="43:64" pos:end="43:95"><name pos:start="43:64" pos:end="43:68">avist</name><operator pos:start="43:69" pos:end="43:70">-&gt;</operator><name pos:start="43:71" pos:end="43:77">indexes</name><operator pos:start="43:78" pos:end="43:78">.</operator><name pos:start="43:79" pos:end="43:95">audio_strm_offset</name></name><operator pos:start="43:96" pos:end="43:96">)</operator></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:73">(<expr pos:start="45:13" pos:end="45:72"><operator pos:start="45:13" pos:end="45:13">(</operator><name pos:start="45:14" pos:end="45:28">audio_segm_size</name> <operator pos:start="45:30" pos:end="45:30">%</operator> <name pos:start="45:32" pos:end="45:39">au_ssize</name> <operator pos:start="45:41" pos:end="45:41">&gt;</operator> <literal type="number" pos:start="45:43" pos:end="45:43">0</literal><operator pos:start="45:44" pos:end="45:44">)</operator> <operator pos:start="45:46" pos:end="45:47">&amp;&amp;</operator> <operator pos:start="45:49" pos:end="45:49">!</operator><name pos:start="45:50" pos:end="45:72"><name pos:start="45:50" pos:end="45:54">avist</name><operator pos:start="45:55" pos:end="45:56">-&gt;</operator><name pos:start="45:57" pos:end="45:72">sample_requested</name></name></expr>)</condition> <block pos:start="45:75" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:40">

            <expr_stmt pos:start="47:13" pos:end="47:101"><expr pos:start="47:13" pos:end="47:100"><call pos:start="47:13" pos:end="47:100"><name pos:start="47:13" pos:end="47:33">avpriv_request_sample</name><argument_list pos:start="47:34" pos:end="47:100">(<argument pos:start="47:35" pos:end="47:35"><expr pos:start="47:35" pos:end="47:35"><name pos:start="47:35" pos:end="47:35">s</name></expr></argument>, <argument pos:start="47:38" pos:end="47:99"><expr pos:start="47:38" pos:end="47:99"><literal type="string" pos:start="47:38" pos:end="47:99">"OpenDML index duration for audio packets with partial frames"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:40"><expr pos:start="49:13" pos:end="49:39"><name pos:start="49:13" pos:end="49:35"><name pos:start="49:13" pos:end="49:17">avist</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:35">sample_requested</name></name> <operator pos:start="49:37" pos:end="49:37">=</operator> <literal type="number" pos:start="49:39" pos:end="49:39">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:50"><expr pos:start="53:9" pos:end="53:49"><call pos:start="53:9" pos:end="53:49"><name pos:start="53:9" pos:end="53:17">avio_wl32</name><argument_list pos:start="53:18" pos:end="53:49">(<argument pos:start="53:19" pos:end="53:20"><expr pos:start="53:19" pos:end="53:20"><name pos:start="53:19" pos:end="53:20">pb</name></expr></argument>, <argument pos:start="53:23" pos:end="53:48"><expr pos:start="53:23" pos:end="53:48"><name pos:start="53:23" pos:end="53:37">audio_segm_size</name> <operator pos:start="53:39" pos:end="53:39">/</operator> <name pos:start="53:41" pos:end="53:48">au_ssize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="53:53" pos:end="53:83">/* dwDuration (sample count) */</comment>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="57:44">else<block type="pseudo" pos:start="57:9" pos:end="57:44"><block_content pos:start="57:9" pos:end="57:44">

        <expr_stmt pos:start="57:9" pos:end="57:44"><expr pos:start="57:9" pos:end="57:43"><call pos:start="57:9" pos:end="57:43"><name pos:start="57:9" pos:end="57:17">avio_wl32</name><argument_list pos:start="57:18" pos:end="57:43">(<argument pos:start="57:19" pos:end="57:20"><expr pos:start="57:19" pos:end="57:20"><name pos:start="57:19" pos:end="57:20">pb</name></expr></argument>, <argument pos:start="57:23" pos:end="57:42"><expr pos:start="57:23" pos:end="57:42"><name pos:start="57:23" pos:end="57:42"><name pos:start="57:23" pos:end="57:27">avist</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:36">indexes</name><operator pos:start="57:37" pos:end="57:37">.</operator><name pos:start="57:38" pos:end="57:42">entry</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>  <comment type="block" pos:start="57:47" pos:end="57:77">/* dwDuration (packet count) */</comment>



    <expr_stmt pos:start="61:5" pos:end="61:33"><expr pos:start="61:5" pos:end="61:32"><call pos:start="61:5" pos:end="61:32"><name pos:start="61:5" pos:end="61:13">avio_seek</name><argument_list pos:start="61:14" pos:end="61:32">(<argument pos:start="61:15" pos:end="61:16"><expr pos:start="61:15" pos:end="61:16"><name pos:start="61:15" pos:end="61:16">pb</name></expr></argument>, <argument pos:start="61:19" pos:end="61:21"><expr pos:start="61:19" pos:end="61:21"><name pos:start="61:19" pos:end="61:21">pos</name></expr></argument>, <argument pos:start="61:24" pos:end="61:31"><expr pos:start="61:24" pos:end="61:31"><name pos:start="61:24" pos:end="61:31">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
