<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7452.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">usb_desc_msos</name><parameter_list pos:start="1:18" pos:end="3:55">(<parameter pos:start="1:19" pos:end="1:37"><decl pos:start="1:19" pos:end="1:37"><type pos:start="1:19" pos:end="1:37"><specifier pos:start="1:19" pos:end="1:23">const</specifier> <name pos:start="1:25" pos:end="1:31">USBDesc</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:37">desc</name></decl></parameter>,  <parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:49">USBPacket</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">p</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:27"><decl pos:start="3:19" pos:end="3:27"><type pos:start="3:19" pos:end="3:27"><name pos:start="3:19" pos:end="3:21">int</name></type> <name pos:start="3:23" pos:end="3:27">index</name></decl></parameter>, <parameter pos:start="3:30" pos:end="3:42"><decl pos:start="3:30" pos:end="3:42"><type pos:start="3:30" pos:end="3:42"><name pos:start="3:30" pos:end="3:36">uint8_t</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:42">dest</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:54"><decl pos:start="3:45" pos:end="3:54"><type pos:start="3:45" pos:end="3:54"><name pos:start="3:45" pos:end="3:50">size_t</name></type> <name pos:start="3:52" pos:end="3:54">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:13">

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">void</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:13">buf</name> <init pos:start="7:15" pos:end="7:31">= <expr pos:start="7:17" pos:end="7:31"><call pos:start="7:17" pos:end="7:31"><name pos:start="7:17" pos:end="7:25">g_malloc0</name><argument_list pos:start="7:26" pos:end="7:31">(<argument pos:start="7:27" pos:end="7:30"><expr pos:start="7:27" pos:end="7:30"><literal type="number" pos:start="7:27" pos:end="7:30">4096</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">length</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="27:5">switch <condition pos:start="13:12" pos:end="13:18">(<expr pos:start="13:13" pos:end="13:17"><name pos:start="13:13" pos:end="13:17">index</name></expr>)</condition> <block pos:start="13:20" pos:end="27:5">{<block_content pos:start="15:5" pos:end="25:14">

    <case pos:start="15:5" pos:end="15:16">case <expr pos:start="15:10" pos:end="15:15"><literal type="number" pos:start="15:10" pos:end="15:15">0x0004</literal></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:49"><expr pos:start="17:9" pos:end="17:48"><name pos:start="17:9" pos:end="17:14">length</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <call pos:start="17:18" pos:end="17:48"><name pos:start="17:18" pos:end="17:37">usb_desc_msos_compat</name><argument_list pos:start="17:38" pos:end="17:48">(<argument pos:start="17:39" pos:end="17:42"><expr pos:start="17:39" pos:end="17:42"><name pos:start="17:39" pos:end="17:42">desc</name></expr></argument>, <argument pos:start="17:45" pos:end="17:47"><expr pos:start="17:45" pos:end="17:47"><name pos:start="17:45" pos:end="17:47">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:16">case <expr pos:start="21:10" pos:end="21:15"><literal type="number" pos:start="21:10" pos:end="21:15">0x0005</literal></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:47"><expr pos:start="23:9" pos:end="23:46"><name pos:start="23:9" pos:end="23:14">length</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <call pos:start="23:18" pos:end="23:46"><name pos:start="23:18" pos:end="23:35">usb_desc_msos_prop</name><argument_list pos:start="23:36" pos:end="23:46">(<argument pos:start="23:37" pos:end="23:40"><expr pos:start="23:37" pos:end="23:40"><name pos:start="23:37" pos:end="23:40">desc</name></expr></argument>, <argument pos:start="23:43" pos:end="23:45"><expr pos:start="23:43" pos:end="23:45"><name pos:start="23:43" pos:end="23:45">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:21">(<expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:14">length</name> <operator pos:start="31:16" pos:end="31:16">&gt;</operator> <name pos:start="31:18" pos:end="31:20">len</name></expr>)</condition> <block pos:start="31:23" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:21">

        <expr_stmt pos:start="33:9" pos:end="33:21"><expr pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:14">length</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:20">len</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:30"><expr pos:start="37:5" pos:end="37:29"><call pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:10">memcpy</name><argument_list pos:start="37:11" pos:end="37:29">(<argument pos:start="37:12" pos:end="37:15"><expr pos:start="37:12" pos:end="37:15"><name pos:start="37:12" pos:end="37:15">dest</name></expr></argument>, <argument pos:start="37:18" pos:end="37:20"><expr pos:start="37:18" pos:end="37:20"><name pos:start="37:18" pos:end="37:20">buf</name></expr></argument>, <argument pos:start="37:23" pos:end="37:28"><expr pos:start="37:23" pos:end="37:28"><name pos:start="37:23" pos:end="37:28">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:14"><expr pos:start="39:5" pos:end="39:13"><call pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:8">free</name><argument_list pos:start="39:9" pos:end="39:13">(<argument pos:start="39:10" pos:end="39:12"><expr pos:start="39:10" pos:end="39:12"><name pos:start="39:10" pos:end="39:12">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:30"><expr pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:5">p</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:20">actual_length</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:29">length</name></expr>;</expr_stmt>

    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
