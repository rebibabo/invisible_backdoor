<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21730.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:12">pp_check</name><parameter_list pos:start="1:13" pos:end="1:37">(<parameter pos:start="1:14" pos:end="1:20"><decl pos:start="1:14" pos:end="1:20"><type pos:start="1:14" pos:end="1:20"><name pos:start="1:14" pos:end="1:16">int</name></type> <name pos:start="1:18" pos:end="1:20">key</name></decl></parameter>, <parameter pos:start="1:23" pos:end="1:28"><decl pos:start="1:23" pos:end="1:28"><type pos:start="1:23" pos:end="1:28"><name pos:start="1:23" pos:end="1:25">int</name></type> <name pos:start="1:27" pos:end="1:28">pp</name></decl></parameter>, <parameter pos:start="1:31" pos:end="1:36"><decl pos:start="1:31" pos:end="1:36"><type pos:start="1:31" pos:end="1:36"><name pos:start="1:31" pos:end="1:33">int</name></type> <name pos:start="1:35" pos:end="1:36">nx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:18">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">access</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:31">/* Compute access rights */</comment>

    <comment type="block" pos:start="11:5" pos:end="11:69">/* When pp is 3/7, the result is undefined. Set it to noaccess */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:15"><expr pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:10">access</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="67:5"><if pos:start="15:5" pos:end="39:5">if <condition pos:start="15:8" pos:end="15:17">(<expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:11">key</name> <operator pos:start="15:13" pos:end="15:14">==</operator> <literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>)</condition> <block pos:start="15:19" pos:end="39:5">{<block_content pos:start="17:9" pos:end="37:9">

        <switch pos:start="17:9" pos:end="37:9">switch <condition pos:start="17:16" pos:end="17:19">(<expr pos:start="17:17" pos:end="17:18"><name pos:start="17:17" pos:end="17:18">pp</name></expr>)</condition> <block pos:start="17:21" pos:end="37:9">{<block_content pos:start="19:9" pos:end="35:18">

        <case pos:start="19:9" pos:end="19:17">case <expr pos:start="19:14" pos:end="19:16"><literal type="number" pos:start="19:14" pos:end="19:16">0x0</literal></expr>:</case>

        <case pos:start="21:9" pos:end="21:17">case <expr pos:start="21:14" pos:end="21:16"><literal type="number" pos:start="21:14" pos:end="21:16">0x1</literal></expr>:</case>

        <case pos:start="23:9" pos:end="23:17">case <expr pos:start="23:14" pos:end="23:16"><literal type="number" pos:start="23:14" pos:end="23:16">0x2</literal></expr>:</case>

            <expr_stmt pos:start="25:13" pos:end="25:33"><expr pos:start="25:13" pos:end="25:32"><name pos:start="25:13" pos:end="25:18">access</name> <operator pos:start="25:20" pos:end="25:21">|=</operator> <name pos:start="25:23" pos:end="25:32">PAGE_WRITE</name></expr>;</expr_stmt>

            <comment type="block" pos:start="27:13" pos:end="27:31">/* No break here */</comment>

        <case pos:start="29:9" pos:end="29:17">case <expr pos:start="29:14" pos:end="29:16"><literal type="number" pos:start="29:14" pos:end="29:16">0x3</literal></expr>:</case>

        <case pos:start="31:9" pos:end="31:17">case <expr pos:start="31:14" pos:end="31:16"><literal type="number" pos:start="31:14" pos:end="31:16">0x6</literal></expr>:</case>

            <expr_stmt pos:start="33:13" pos:end="33:32"><expr pos:start="33:13" pos:end="33:31"><name pos:start="33:13" pos:end="33:18">access</name> <operator pos:start="33:20" pos:end="33:21">|=</operator> <name pos:start="33:23" pos:end="33:31">PAGE_READ</name></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="67:5">else <block pos:start="39:12" pos:end="67:5">{<block_content pos:start="41:9" pos:end="65:9">

        <switch pos:start="41:9" pos:end="65:9">switch <condition pos:start="41:16" pos:end="41:19">(<expr pos:start="41:17" pos:end="41:18"><name pos:start="41:17" pos:end="41:18">pp</name></expr>)</condition> <block pos:start="41:21" pos:end="65:9">{<block_content pos:start="43:9" pos:end="63:18">

        <case pos:start="43:9" pos:end="43:17">case <expr pos:start="43:14" pos:end="43:16"><literal type="number" pos:start="43:14" pos:end="43:16">0x0</literal></expr>:</case>

        <case pos:start="45:9" pos:end="45:17">case <expr pos:start="45:14" pos:end="45:16"><literal type="number" pos:start="45:14" pos:end="45:16">0x6</literal></expr>:</case>

            <expr_stmt pos:start="47:13" pos:end="47:23"><expr pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:18">access</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        <case pos:start="51:9" pos:end="51:17">case <expr pos:start="51:14" pos:end="51:16"><literal type="number" pos:start="51:14" pos:end="51:16">0x1</literal></expr>:</case>

        <case pos:start="53:9" pos:end="53:17">case <expr pos:start="53:14" pos:end="53:16"><literal type="number" pos:start="53:14" pos:end="53:16">0x3</literal></expr>:</case>

            <expr_stmt pos:start="55:13" pos:end="55:31"><expr pos:start="55:13" pos:end="55:30"><name pos:start="55:13" pos:end="55:18">access</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:30">PAGE_READ</name></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:17">case <expr pos:start="59:14" pos:end="59:16"><literal type="number" pos:start="59:14" pos:end="59:16">0x2</literal></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:44"><expr pos:start="61:13" pos:end="61:43"><name pos:start="61:13" pos:end="61:18">access</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:30">PAGE_READ</name> <operator pos:start="61:32" pos:end="61:32">|</operator> <name pos:start="61:34" pos:end="61:43">PAGE_WRITE</name></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="69:5" pos:end="73:5"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:16">(<expr pos:start="69:9" pos:end="69:15"><name pos:start="69:9" pos:end="69:10">nx</name> <operator pos:start="69:12" pos:end="69:13">==</operator> <literal type="number" pos:start="69:15" pos:end="69:15">0</literal></expr>)</condition> <block pos:start="69:18" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:28">

        <expr_stmt pos:start="71:9" pos:end="71:28"><expr pos:start="71:9" pos:end="71:27"><name pos:start="71:9" pos:end="71:14">access</name> <operator pos:start="71:16" pos:end="71:17">|=</operator> <name pos:start="71:19" pos:end="71:27">PAGE_EXEC</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="77:5" pos:end="77:18">return <expr pos:start="77:12" pos:end="77:17"><name pos:start="77:12" pos:end="77:17">access</name></expr>;</return>

</block_content>}</block></function>
</unit>
