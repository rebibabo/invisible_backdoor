<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6139.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:37">ffat_close_decoder</name><parameter_list pos:start="1:38" pos:end="1:60">(<parameter pos:start="1:39" pos:end="1:59"><decl pos:start="1:39" pos:end="1:59"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:52">AVCodecContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">ATDecodeContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:23">at</name> <init pos:start="5:25" pos:end="5:42">= <expr pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:31">avctx</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="9:45"><if pos:start="7:5" pos:end="9:45">if <condition pos:start="7:8" pos:end="7:22">(<expr pos:start="7:9" pos:end="7:21"><name pos:start="7:9" pos:end="7:21"><name pos:start="7:9" pos:end="7:10">at</name><operator pos:start="7:11" pos:end="7:12">-&gt;</operator><name pos:start="7:13" pos:end="7:21">converter</name></name></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:45"><block_content pos:start="9:9" pos:end="9:45">

        <expr_stmt pos:start="9:9" pos:end="9:45"><expr pos:start="9:9" pos:end="9:44"><call pos:start="9:9" pos:end="9:44"><name pos:start="9:9" pos:end="9:29">AudioConverterDispose</name><argument_list pos:start="9:30" pos:end="9:44">(<argument pos:start="9:31" pos:end="9:43"><expr pos:start="9:31" pos:end="9:43"><name pos:start="9:31" pos:end="9:43"><name pos:start="9:31" pos:end="9:32">at</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:43">converter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:37"><expr pos:start="11:5" pos:end="11:36"><call pos:start="11:5" pos:end="11:36"><name pos:start="11:5" pos:end="11:19">av_packet_unref</name><argument_list pos:start="11:20" pos:end="11:36">(<argument pos:start="11:21" pos:end="11:35"><expr pos:start="11:21" pos:end="11:35"><operator pos:start="11:21" pos:end="11:21">&amp;</operator><name pos:start="11:22" pos:end="11:35"><name pos:start="11:22" pos:end="11:23">at</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:35">new_in_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:33"><expr pos:start="13:5" pos:end="13:32"><call pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:19">av_packet_unref</name><argument_list pos:start="13:20" pos:end="13:32">(<argument pos:start="13:21" pos:end="13:31"><expr pos:start="13:21" pos:end="13:31"><operator pos:start="13:21" pos:end="13:21">&amp;</operator><name pos:start="13:22" pos:end="13:31"><name pos:start="13:22" pos:end="13:23">at</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:31">in_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:30"><expr pos:start="15:5" pos:end="15:29"><call pos:start="15:5" pos:end="15:29"><name pos:start="15:5" pos:end="15:11">av_free</name><argument_list pos:start="15:12" pos:end="15:29">(<argument pos:start="15:13" pos:end="15:28"><expr pos:start="15:13" pos:end="15:28"><name pos:start="15:13" pos:end="15:28"><name pos:start="15:13" pos:end="15:14">at</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:28">decoded_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><call pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:11">av_free</name><argument_list pos:start="17:12" pos:end="17:26">(<argument pos:start="17:13" pos:end="17:25"><expr pos:start="17:13" pos:end="17:25"><name pos:start="17:13" pos:end="17:25"><name pos:start="17:13" pos:end="17:14">at</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:25">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="19:5" pos:end="19:13">return <expr pos:start="19:12" pos:end="19:12"><literal type="number" pos:start="19:12" pos:end="19:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
