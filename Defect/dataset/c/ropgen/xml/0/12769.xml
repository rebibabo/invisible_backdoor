<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12769.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:46">address_space_update_topology_pass</name><parameter_list pos:start="1:47" pos:end="7:59">(<parameter pos:start="1:48" pos:end="1:63"><decl pos:start="1:48" pos:end="1:63"><type pos:start="1:48" pos:end="1:63"><name pos:start="1:48" pos:end="1:59">AddressSpace</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">as</name></decl></parameter>,

                                               <parameter pos:start="3:48" pos:end="3:71"><decl pos:start="3:48" pos:end="3:71"><type pos:start="3:48" pos:end="3:71"><specifier pos:start="3:48" pos:end="3:52">const</specifier> <name pos:start="3:54" pos:end="3:61">FlatView</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:71">old_view</name></decl></parameter>,

                                               <parameter pos:start="5:48" pos:end="5:71"><decl pos:start="5:48" pos:end="5:71"><type pos:start="5:48" pos:end="5:71"><specifier pos:start="5:48" pos:end="5:52">const</specifier> <name pos:start="5:54" pos:end="5:61">FlatView</name> <modifier pos:start="5:63" pos:end="5:63">*</modifier></type><name pos:start="5:64" pos:end="5:71">new_view</name></decl></parameter>,

                                               <parameter pos:start="7:48" pos:end="7:58"><decl pos:start="7:48" pos:end="7:58"><type pos:start="7:48" pos:end="7:58"><name pos:start="7:48" pos:end="7:51">bool</name></type> <name pos:start="7:53" pos:end="7:58">adding</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="121:1">{<block_content pos:start="11:5" pos:end="119:5">

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:17">iold</name></decl>, <decl pos:start="11:20" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:20" pos:end="11:23">inew</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">FlatRange</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:20">frold</name></decl>, <decl pos:start="13:23" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:15"><modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:28">frnew</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="21:7">/* Generate a symmetric difference of the old and new memory maps.

     * Kill ranges in the old map, and instantiate ranges in the new map.

     */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:20"><expr pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:8">iold</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <name pos:start="23:12" pos:end="23:15">inew</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>;</expr_stmt>

    <while pos:start="25:5" pos:end="119:5">while <condition pos:start="25:11" pos:end="25:54">(<expr pos:start="25:12" pos:end="25:53"><name pos:start="25:12" pos:end="25:15">iold</name> <operator pos:start="25:17" pos:end="25:17">&lt;</operator> <name pos:start="25:19" pos:end="25:30"><name pos:start="25:19" pos:end="25:26">old_view</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:30">nr</name></name> <operator pos:start="25:32" pos:end="25:33">||</operator> <name pos:start="25:35" pos:end="25:38">inew</name> <operator pos:start="25:40" pos:end="25:40">&lt;</operator> <name pos:start="25:42" pos:end="25:53"><name pos:start="25:42" pos:end="25:49">new_view</name><operator pos:start="25:50" pos:end="25:51">-&gt;</operator><name pos:start="25:52" pos:end="25:53">nr</name></name></expr>)</condition> <block pos:start="25:56" pos:end="119:5">{<block_content pos:start="27:9" pos:end="117:9">

        <if_stmt pos:start="27:9" pos:end="35:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:32">(<expr pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:16">iold</name> <operator pos:start="27:18" pos:end="27:18">&lt;</operator> <name pos:start="27:20" pos:end="27:31"><name pos:start="27:20" pos:end="27:27">old_view</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:31">nr</name></name></expr>)</condition> <block pos:start="27:34" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:44">

            <expr_stmt pos:start="29:13" pos:end="29:44"><expr pos:start="29:13" pos:end="29:43"><name pos:start="29:13" pos:end="29:17">frold</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <operator pos:start="29:21" pos:end="29:21">&amp;</operator><name pos:start="29:22" pos:end="29:43"><name pos:start="29:22" pos:end="29:29">old_view</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:37">ranges</name><index pos:start="29:38" pos:end="29:43">[<expr pos:start="29:39" pos:end="29:42"><name pos:start="29:39" pos:end="29:42">iold</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="35:9">else <block pos:start="31:16" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:25">

            <expr_stmt pos:start="33:13" pos:end="33:25"><expr pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:17">frold</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <name pos:start="33:21" pos:end="33:24">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="37:9" pos:end="45:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:32">(<expr pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:16">inew</name> <operator pos:start="37:18" pos:end="37:18">&lt;</operator> <name pos:start="37:20" pos:end="37:31"><name pos:start="37:20" pos:end="37:27">new_view</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:31">nr</name></name></expr>)</condition> <block pos:start="37:34" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:44">

            <expr_stmt pos:start="39:13" pos:end="39:44"><expr pos:start="39:13" pos:end="39:43"><name pos:start="39:13" pos:end="39:17">frnew</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <operator pos:start="39:21" pos:end="39:21">&amp;</operator><name pos:start="39:22" pos:end="39:43"><name pos:start="39:22" pos:end="39:29">new_view</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:37">ranges</name><index pos:start="39:38" pos:end="39:43">[<expr pos:start="39:39" pos:end="39:42"><name pos:start="39:39" pos:end="39:42">inew</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="45:9">else <block pos:start="41:16" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:25">

            <expr_stmt pos:start="43:13" pos:end="43:25"><expr pos:start="43:13" pos:end="43:24"><name pos:start="43:13" pos:end="43:17">frnew</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:24">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="49:9" pos:end="117:9"><if pos:start="49:9" pos:end="73:9">if <condition pos:start="49:12" pos:end="57:56">(<expr pos:start="49:13" pos:end="57:55"><name pos:start="49:13" pos:end="49:17">frold</name>

            <operator pos:start="51:13" pos:end="51:14">&amp;&amp;</operator> <operator pos:start="51:16" pos:end="51:16">(</operator><operator pos:start="51:17" pos:end="51:17">!</operator><name pos:start="51:18" pos:end="51:22">frnew</name>

                <operator pos:start="53:17" pos:end="53:18">||</operator> <call pos:start="53:20" pos:end="53:66"><name pos:start="53:20" pos:end="53:28">int128_lt</name><argument_list pos:start="53:29" pos:end="53:66">(<argument pos:start="53:30" pos:end="53:46"><expr pos:start="53:30" pos:end="53:46"><name pos:start="53:30" pos:end="53:46"><name pos:start="53:30" pos:end="53:34">frold</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:40">addr</name><operator pos:start="53:41" pos:end="53:41">.</operator><name pos:start="53:42" pos:end="53:46">start</name></name></expr></argument>, <argument pos:start="53:49" pos:end="53:65"><expr pos:start="53:49" pos:end="53:65"><name pos:start="53:49" pos:end="53:65"><name pos:start="53:49" pos:end="53:53">frnew</name><operator pos:start="53:54" pos:end="53:55">-&gt;</operator><name pos:start="53:56" pos:end="53:59">addr</name><operator pos:start="53:60" pos:end="53:60">.</operator><name pos:start="53:61" pos:end="53:65">start</name></name></expr></argument>)</argument_list></call>

                <operator pos:start="55:17" pos:end="55:18">||</operator> <operator pos:start="55:20" pos:end="55:20">(</operator><call pos:start="55:21" pos:end="55:67"><name pos:start="55:21" pos:end="55:29">int128_eq</name><argument_list pos:start="55:30" pos:end="55:67">(<argument pos:start="55:31" pos:end="55:47"><expr pos:start="55:31" pos:end="55:47"><name pos:start="55:31" pos:end="55:47"><name pos:start="55:31" pos:end="55:35">frold</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:41">addr</name><operator pos:start="55:42" pos:end="55:42">.</operator><name pos:start="55:43" pos:end="55:47">start</name></name></expr></argument>, <argument pos:start="55:50" pos:end="55:66"><expr pos:start="55:50" pos:end="55:66"><name pos:start="55:50" pos:end="55:66"><name pos:start="55:50" pos:end="55:54">frnew</name><operator pos:start="55:55" pos:end="55:56">-&gt;</operator><name pos:start="55:57" pos:end="55:60">addr</name><operator pos:start="55:61" pos:end="55:61">.</operator><name pos:start="55:62" pos:end="55:66">start</name></name></expr></argument>)</argument_list></call>

                    <operator pos:start="57:21" pos:end="57:22">&amp;&amp;</operator> <operator pos:start="57:24" pos:end="57:24">!</operator><call pos:start="57:25" pos:end="57:53"><name pos:start="57:25" pos:end="57:39">flatrange_equal</name><argument_list pos:start="57:40" pos:end="57:53">(<argument pos:start="57:41" pos:end="57:45"><expr pos:start="57:41" pos:end="57:45"><name pos:start="57:41" pos:end="57:45">frold</name></expr></argument>, <argument pos:start="57:48" pos:end="57:52"><expr pos:start="57:48" pos:end="57:52"><name pos:start="57:48" pos:end="57:52">frnew</name></expr></argument>)</argument_list></call><operator pos:start="57:54" pos:end="57:54">)</operator><operator pos:start="57:55" pos:end="57:55">)</operator></expr>)</condition> <block pos:start="57:58" pos:end="73:9">{<block_content pos:start="63:13" pos:end="71:19">

            <comment type="block" pos:start="59:13" pos:end="59:75">/* In old but not in new, or in both but attributes changed. */</comment>



            <if_stmt pos:start="63:13" pos:end="67:13"><if pos:start="63:13" pos:end="67:13">if <condition pos:start="63:16" pos:end="63:24">(<expr pos:start="63:17" pos:end="63:23"><operator pos:start="63:17" pos:end="63:17">!</operator><name pos:start="63:18" pos:end="63:23">adding</name></expr>)</condition> <block pos:start="63:26" pos:end="67:13">{<block_content pos:start="65:17" pos:end="65:78">

                <expr_stmt pos:start="65:17" pos:end="65:78"><expr pos:start="65:17" pos:end="65:77"><call pos:start="65:17" pos:end="65:77"><name pos:start="65:17" pos:end="65:45">MEMORY_LISTENER_UPDATE_REGION</name><argument_list pos:start="65:46" pos:end="65:77">(<argument pos:start="65:47" pos:end="65:51"><expr pos:start="65:47" pos:end="65:51"><name pos:start="65:47" pos:end="65:51">frold</name></expr></argument>, <argument pos:start="65:54" pos:end="65:55"><expr pos:start="65:54" pos:end="65:55"><name pos:start="65:54" pos:end="65:55">as</name></expr></argument>, <argument pos:start="65:58" pos:end="65:64"><expr pos:start="65:58" pos:end="65:64"><name pos:start="65:58" pos:end="65:64">Reverse</name></expr></argument>, <argument pos:start="65:67" pos:end="65:76"><expr pos:start="65:67" pos:end="65:76"><name pos:start="65:67" pos:end="65:76">region_del</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="71:13" pos:end="71:19"><expr pos:start="71:13" pos:end="71:18"><operator pos:start="71:13" pos:end="71:14">++</operator><name pos:start="71:15" pos:end="71:18">iold</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="73:11" pos:end="101:9">else if <condition pos:start="73:19" pos:end="73:67">(<expr pos:start="73:20" pos:end="73:66"><name pos:start="73:20" pos:end="73:24">frold</name> <operator pos:start="73:26" pos:end="73:27">&amp;&amp;</operator> <name pos:start="73:29" pos:end="73:33">frnew</name> <operator pos:start="73:35" pos:end="73:36">&amp;&amp;</operator> <call pos:start="73:38" pos:end="73:66"><name pos:start="73:38" pos:end="73:52">flatrange_equal</name><argument_list pos:start="73:53" pos:end="73:66">(<argument pos:start="73:54" pos:end="73:58"><expr pos:start="73:54" pos:end="73:58"><name pos:start="73:54" pos:end="73:58">frold</name></expr></argument>, <argument pos:start="73:61" pos:end="73:65"><expr pos:start="73:61" pos:end="73:65"><name pos:start="73:61" pos:end="73:65">frnew</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:69" pos:end="101:9">{<block_content pos:start="79:13" pos:end="99:19">

            <comment type="block" pos:start="75:13" pos:end="75:73">/* In both and unchanged (except logging may have changed) */</comment>



            <if_stmt pos:start="79:13" pos:end="93:13"><if pos:start="79:13" pos:end="93:13">if <condition pos:start="79:16" pos:end="79:23">(<expr pos:start="79:17" pos:end="79:22"><name pos:start="79:17" pos:end="79:22">adding</name></expr>)</condition> <block pos:start="79:25" pos:end="93:13">{<block_content pos:start="81:17" pos:end="91:17">

                <expr_stmt pos:start="81:17" pos:end="81:78"><expr pos:start="81:17" pos:end="81:77"><call pos:start="81:17" pos:end="81:77"><name pos:start="81:17" pos:end="81:45">MEMORY_LISTENER_UPDATE_REGION</name><argument_list pos:start="81:46" pos:end="81:77">(<argument pos:start="81:47" pos:end="81:51"><expr pos:start="81:47" pos:end="81:51"><name pos:start="81:47" pos:end="81:51">frnew</name></expr></argument>, <argument pos:start="81:54" pos:end="81:55"><expr pos:start="81:54" pos:end="81:55"><name pos:start="81:54" pos:end="81:55">as</name></expr></argument>, <argument pos:start="81:58" pos:end="81:64"><expr pos:start="81:58" pos:end="81:64"><name pos:start="81:58" pos:end="81:64">Forward</name></expr></argument>, <argument pos:start="81:67" pos:end="81:76"><expr pos:start="81:67" pos:end="81:76"><name pos:start="81:67" pos:end="81:76">region_nop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="83:17" pos:end="91:17"><if pos:start="83:17" pos:end="87:17">if <condition pos:start="83:20" pos:end="83:68">(<expr pos:start="83:21" pos:end="83:67"><name pos:start="83:21" pos:end="83:41"><name pos:start="83:21" pos:end="83:25">frold</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:41">dirty_log_mask</name></name> <operator pos:start="83:43" pos:end="83:44">&amp;&amp;</operator> <operator pos:start="83:46" pos:end="83:46">!</operator><name pos:start="83:47" pos:end="83:67"><name pos:start="83:47" pos:end="83:51">frnew</name><operator pos:start="83:52" pos:end="83:53">-&gt;</operator><name pos:start="83:54" pos:end="83:67">dirty_log_mask</name></name></expr>)</condition> <block pos:start="83:70" pos:end="87:17">{<block_content pos:start="85:21" pos:end="85:80">

                    <expr_stmt pos:start="85:21" pos:end="85:80"><expr pos:start="85:21" pos:end="85:79"><call pos:start="85:21" pos:end="85:79"><name pos:start="85:21" pos:end="85:49">MEMORY_LISTENER_UPDATE_REGION</name><argument_list pos:start="85:50" pos:end="85:79">(<argument pos:start="85:51" pos:end="85:55"><expr pos:start="85:51" pos:end="85:55"><name pos:start="85:51" pos:end="85:55">frnew</name></expr></argument>, <argument pos:start="85:58" pos:end="85:59"><expr pos:start="85:58" pos:end="85:59"><name pos:start="85:58" pos:end="85:59">as</name></expr></argument>, <argument pos:start="85:62" pos:end="85:68"><expr pos:start="85:62" pos:end="85:68"><name pos:start="85:62" pos:end="85:68">Reverse</name></expr></argument>, <argument pos:start="85:71" pos:end="85:78"><expr pos:start="85:71" pos:end="85:78"><name pos:start="85:71" pos:end="85:78">log_stop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="87:19" pos:end="91:17">else if <condition pos:start="87:27" pos:end="87:75">(<expr pos:start="87:28" pos:end="87:74"><name pos:start="87:28" pos:end="87:48"><name pos:start="87:28" pos:end="87:32">frnew</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:48">dirty_log_mask</name></name> <operator pos:start="87:50" pos:end="87:51">&amp;&amp;</operator> <operator pos:start="87:53" pos:end="87:53">!</operator><name pos:start="87:54" pos:end="87:74"><name pos:start="87:54" pos:end="87:58">frold</name><operator pos:start="87:59" pos:end="87:60">-&gt;</operator><name pos:start="87:61" pos:end="87:74">dirty_log_mask</name></name></expr>)</condition> <block pos:start="87:77" pos:end="91:17">{<block_content pos:start="89:21" pos:end="89:81">

                    <expr_stmt pos:start="89:21" pos:end="89:81"><expr pos:start="89:21" pos:end="89:80"><call pos:start="89:21" pos:end="89:80"><name pos:start="89:21" pos:end="89:49">MEMORY_LISTENER_UPDATE_REGION</name><argument_list pos:start="89:50" pos:end="89:80">(<argument pos:start="89:51" pos:end="89:55"><expr pos:start="89:51" pos:end="89:55"><name pos:start="89:51" pos:end="89:55">frnew</name></expr></argument>, <argument pos:start="89:58" pos:end="89:59"><expr pos:start="89:58" pos:end="89:59"><name pos:start="89:58" pos:end="89:59">as</name></expr></argument>, <argument pos:start="89:62" pos:end="89:68"><expr pos:start="89:62" pos:end="89:68"><name pos:start="89:62" pos:end="89:68">Forward</name></expr></argument>, <argument pos:start="89:71" pos:end="89:79"><expr pos:start="89:71" pos:end="89:79"><name pos:start="89:71" pos:end="89:79">log_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="97:13" pos:end="97:19"><expr pos:start="97:13" pos:end="97:18"><operator pos:start="97:13" pos:end="97:14">++</operator><name pos:start="97:15" pos:end="97:18">iold</name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:19"><expr pos:start="99:13" pos:end="99:18"><operator pos:start="99:13" pos:end="99:14">++</operator><name pos:start="99:15" pos:end="99:18">inew</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="101:11" pos:end="117:9">else <block pos:start="101:16" pos:end="117:9">{<block_content pos:start="107:13" pos:end="115:19">

            <comment type="block" pos:start="103:13" pos:end="103:24">/* In new */</comment>



            <if_stmt pos:start="107:13" pos:end="111:13"><if pos:start="107:13" pos:end="111:13">if <condition pos:start="107:16" pos:end="107:23">(<expr pos:start="107:17" pos:end="107:22"><name pos:start="107:17" pos:end="107:22">adding</name></expr>)</condition> <block pos:start="107:25" pos:end="111:13">{<block_content pos:start="109:17" pos:end="109:78">

                <expr_stmt pos:start="109:17" pos:end="109:78"><expr pos:start="109:17" pos:end="109:77"><call pos:start="109:17" pos:end="109:77"><name pos:start="109:17" pos:end="109:45">MEMORY_LISTENER_UPDATE_REGION</name><argument_list pos:start="109:46" pos:end="109:77">(<argument pos:start="109:47" pos:end="109:51"><expr pos:start="109:47" pos:end="109:51"><name pos:start="109:47" pos:end="109:51">frnew</name></expr></argument>, <argument pos:start="109:54" pos:end="109:55"><expr pos:start="109:54" pos:end="109:55"><name pos:start="109:54" pos:end="109:55">as</name></expr></argument>, <argument pos:start="109:58" pos:end="109:64"><expr pos:start="109:58" pos:end="109:64"><name pos:start="109:58" pos:end="109:64">Forward</name></expr></argument>, <argument pos:start="109:67" pos:end="109:76"><expr pos:start="109:67" pos:end="109:76"><name pos:start="109:67" pos:end="109:76">region_add</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="115:13" pos:end="115:19"><expr pos:start="115:13" pos:end="115:18"><operator pos:start="115:13" pos:end="115:14">++</operator><name pos:start="115:15" pos:end="115:18">inew</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
