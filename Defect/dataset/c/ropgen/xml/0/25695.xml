<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25695.c" pos:tabs="8"><function pos:start="1:1" pos:end="507:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">ff_mjpeg_decode_sof</name><parameter_list pos:start="1:24" pos:end="1:46">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:42">MJpegDecodeContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="507:1">{<block_content pos:start="5:5" pos:end="505:13">

    <decl_stmt pos:start="5:5" pos:end="5:57"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">len</name></decl>, <decl pos:start="5:14" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:26">nb_components</name></decl>, <decl pos:start="5:29" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:29" pos:end="5:29">i</name></decl>, <decl pos:start="5:32" pos:end="5:36"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:32" pos:end="5:36">width</name></decl>, <decl pos:start="5:39" pos:end="5:44"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:39" pos:end="5:44">height</name></decl>, <decl pos:start="5:47" pos:end="5:56"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:47" pos:end="5:56">pix_fmt_id</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:20"><expr pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:15">cur_scan</name></name> <operator pos:start="9:17" pos:end="9:17">=</operator> <literal type="number" pos:start="9:19" pos:end="9:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:36"><expr pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:16">upscale_h</name></name> <operator pos:start="11:18" pos:end="11:18">=</operator> <name pos:start="11:20" pos:end="11:31"><name pos:start="11:20" pos:end="11:20">s</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:31">upscale_v</name></name> <operator pos:start="11:33" pos:end="11:33">=</operator> <literal type="number" pos:start="11:35" pos:end="11:35">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:40">/* XXX: verify len field validity */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:7">len</name>     <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:34"><name pos:start="17:15" pos:end="17:22">get_bits</name><argument_list pos:start="17:23" pos:end="17:34">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><operator pos:start="17:24" pos:end="17:24">&amp;</operator><name pos:start="17:25" pos:end="17:29"><name pos:start="17:25" pos:end="17:25">s</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:29">gb</name></name></expr></argument>, <argument pos:start="17:32" pos:end="17:33"><expr pos:start="17:32" pos:end="17:33"><literal type="number" pos:start="17:32" pos:end="17:33">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:11">bits</name></name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:33"><name pos:start="19:15" pos:end="19:22">get_bits</name><argument_list pos:start="19:23" pos:end="19:33">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><operator pos:start="19:24" pos:end="19:24">&amp;</operator><name pos:start="19:25" pos:end="19:29"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:29">gb</name></name></expr></argument>, <argument pos:start="19:32" pos:end="19:32"><expr pos:start="19:32" pos:end="19:32"><literal type="number" pos:start="19:32" pos:end="19:32">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="25:20"><if pos:start="23:5" pos:end="25:20">if <condition pos:start="23:8" pos:end="23:23">(<expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:22">pegasus_rct</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:20"><block_content pos:start="25:9" pos:end="25:20">

        <expr_stmt pos:start="25:9" pos:end="25:20"><expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:15">bits</name></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <literal type="number" pos:start="25:19" pos:end="25:19">9</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="29:20"><if pos:start="27:5" pos:end="29:20">if <condition pos:start="27:8" pos:end="27:40">(<expr pos:start="27:9" pos:end="27:39"><name pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:15">bits</name></name> <operator pos:start="27:17" pos:end="27:18">==</operator> <literal type="number" pos:start="27:20" pos:end="27:20">9</literal> <operator pos:start="27:22" pos:end="27:23">&amp;&amp;</operator> <operator pos:start="27:25" pos:end="27:25">!</operator><name pos:start="27:26" pos:end="27:39"><name pos:start="27:26" pos:end="27:26">s</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:39">pegasus_rct</name></name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:20"><block_content pos:start="29:9" pos:end="29:20">

        <expr_stmt pos:start="29:9" pos:end="29:20"><expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:14">rct</name></name>  <operator pos:start="29:17" pos:end="29:17">=</operator> <literal type="number" pos:start="29:19" pos:end="29:19">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>    <comment type="line" pos:start="29:25" pos:end="29:37">// FIXME ugly</comment>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:37">(<expr pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:15">bits</name></name> <operator pos:start="33:17" pos:end="33:18">!=</operator> <literal type="number" pos:start="33:20" pos:end="33:20">8</literal> <operator pos:start="33:22" pos:end="33:23">&amp;&amp;</operator> <operator pos:start="33:25" pos:end="33:25">!</operator><name pos:start="33:26" pos:end="33:36"><name pos:start="33:26" pos:end="33:26">s</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:36">lossless</name></name></expr>)</condition> <block pos:start="33:39" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:18">

        <expr_stmt pos:start="35:9" pos:end="35:75"><expr pos:start="35:9" pos:end="35:74"><call pos:start="35:9" pos:end="35:74"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:74">(<argument pos:start="35:16" pos:end="35:23"><expr pos:start="35:16" pos:end="35:23"><name pos:start="35:16" pos:end="35:23"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:23">avctx</name></name></expr></argument>, <argument pos:start="35:26" pos:end="35:37"><expr pos:start="35:26" pos:end="35:37"><name pos:start="35:26" pos:end="35:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:40" pos:end="35:73"><expr pos:start="35:40" pos:end="35:73"><literal type="string" pos:start="35:40" pos:end="35:73">"only 8 bits/component accepted\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if<condition pos:start="43:7" pos:end="43:39">(<expr pos:start="43:8" pos:end="43:38"><name pos:start="43:8" pos:end="43:18"><name pos:start="43:8" pos:end="43:8">s</name><operator pos:start="43:9" pos:end="43:10">-&gt;</operator><name pos:start="43:11" pos:end="43:18">lossless</name></name> <operator pos:start="43:20" pos:end="43:21">&amp;&amp;</operator> <name pos:start="43:23" pos:end="43:38"><name pos:start="43:23" pos:end="43:23">s</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:30">avctx</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:38">lowres</name></name></expr>)</condition><block pos:start="43:40" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:18">

        <expr_stmt pos:start="45:9" pos:end="45:86"><expr pos:start="45:9" pos:end="45:85"><call pos:start="45:9" pos:end="45:85"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:85">(<argument pos:start="45:16" pos:end="45:23"><expr pos:start="45:16" pos:end="45:23"><name pos:start="45:16" pos:end="45:23"><name pos:start="45:16" pos:end="45:16">s</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:23">avctx</name></name></expr></argument>, <argument pos:start="45:26" pos:end="45:37"><expr pos:start="45:26" pos:end="45:37"><name pos:start="45:26" pos:end="45:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:40" pos:end="45:84"><expr pos:start="45:40" pos:end="45:84"><literal type="string" pos:start="45:40" pos:end="45:84">"lowres is not possible with lossless jpeg\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:34"><expr pos:start="53:5" pos:end="53:33"><name pos:start="53:5" pos:end="53:10">height</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <call pos:start="53:14" pos:end="53:33"><name pos:start="53:14" pos:end="53:21">get_bits</name><argument_list pos:start="53:22" pos:end="53:33">(<argument pos:start="53:23" pos:end="53:28"><expr pos:start="53:23" pos:end="53:28"><operator pos:start="53:23" pos:end="53:23">&amp;</operator><name pos:start="53:24" pos:end="53:28"><name pos:start="53:24" pos:end="53:24">s</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:28">gb</name></name></expr></argument>, <argument pos:start="53:31" pos:end="53:32"><expr pos:start="53:31" pos:end="53:32"><literal type="number" pos:start="53:31" pos:end="53:32">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:34"><expr pos:start="55:5" pos:end="55:33"><name pos:start="55:5" pos:end="55:9">width</name>  <operator pos:start="55:12" pos:end="55:12">=</operator> <call pos:start="55:14" pos:end="55:33"><name pos:start="55:14" pos:end="55:21">get_bits</name><argument_list pos:start="55:22" pos:end="55:33">(<argument pos:start="55:23" pos:end="55:28"><expr pos:start="55:23" pos:end="55:28"><operator pos:start="55:23" pos:end="55:23">&amp;</operator><name pos:start="55:24" pos:end="55:28"><name pos:start="55:24" pos:end="55:24">s</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:28">gb</name></name></expr></argument>, <argument pos:start="55:31" pos:end="55:32"><expr pos:start="55:31" pos:end="55:32"><literal type="number" pos:start="55:31" pos:end="55:32">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="59:5" pos:end="59:30">// HACK for odd_height.mov</comment>

    <if_stmt pos:start="61:5" pos:end="63:26"><if pos:start="61:5" pos:end="63:26">if <condition pos:start="61:8" pos:end="61:70">(<expr pos:start="61:9" pos:end="61:69"><name pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:21">interlaced</name></name> <operator pos:start="61:23" pos:end="61:24">&amp;&amp;</operator> <name pos:start="61:26" pos:end="61:33"><name pos:start="61:26" pos:end="61:26">s</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:33">width</name></name> <operator pos:start="61:35" pos:end="61:36">==</operator> <name pos:start="61:38" pos:end="61:42">width</name> <operator pos:start="61:44" pos:end="61:45">&amp;&amp;</operator> <name pos:start="61:47" pos:end="61:55"><name pos:start="61:47" pos:end="61:47">s</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:55">height</name></name> <operator pos:start="61:57" pos:end="61:58">==</operator> <name pos:start="61:60" pos:end="61:65">height</name> <operator pos:start="61:67" pos:end="61:67">+</operator> <literal type="number" pos:start="61:69" pos:end="61:69">1</literal></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:26"><block_content pos:start="63:9" pos:end="63:26">

        <expr_stmt pos:start="63:9" pos:end="63:26"><expr pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:14">height</name><operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:25"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:25">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:76"><expr pos:start="67:5" pos:end="67:75"><call pos:start="67:5" pos:end="67:75"><name pos:start="67:5" pos:end="67:10">av_log</name><argument_list pos:start="67:11" pos:end="67:75">(<argument pos:start="67:12" pos:end="67:19"><expr pos:start="67:12" pos:end="67:19"><name pos:start="67:12" pos:end="67:19"><name pos:start="67:12" pos:end="67:12">s</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:19">avctx</name></name></expr></argument>, <argument pos:start="67:22" pos:end="67:33"><expr pos:start="67:22" pos:end="67:33"><name pos:start="67:22" pos:end="67:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="67:36" pos:end="67:59"><expr pos:start="67:36" pos:end="67:59"><literal type="string" pos:start="67:36" pos:end="67:59">"sof0: picture: %dx%d\n"</literal></expr></argument>, <argument pos:start="67:62" pos:end="67:66"><expr pos:start="67:62" pos:end="67:66"><name pos:start="67:62" pos:end="67:66">width</name></expr></argument>, <argument pos:start="67:69" pos:end="67:74"><expr pos:start="67:69" pos:end="67:74"><name pos:start="67:69" pos:end="67:74">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="71:35"><if pos:start="69:5" pos:end="71:35">if <condition pos:start="69:8" pos:end="69:56">(<expr pos:start="69:9" pos:end="69:55"><call pos:start="69:9" pos:end="69:55"><name pos:start="69:9" pos:end="69:27">av_image_check_size</name><argument_list pos:start="69:28" pos:end="69:55">(<argument pos:start="69:29" pos:end="69:33"><expr pos:start="69:29" pos:end="69:33"><name pos:start="69:29" pos:end="69:33">width</name></expr></argument>, <argument pos:start="69:36" pos:end="69:41"><expr pos:start="69:36" pos:end="69:41"><name pos:start="69:36" pos:end="69:41">height</name></expr></argument>, <argument pos:start="69:44" pos:end="69:44"><expr pos:start="69:44" pos:end="69:44"><literal type="number" pos:start="69:44" pos:end="69:44">0</literal></expr></argument>, <argument pos:start="69:47" pos:end="69:54"><expr pos:start="69:47" pos:end="69:54"><name pos:start="69:47" pos:end="69:54"><name pos:start="69:47" pos:end="69:47">s</name><operator pos:start="69:48" pos:end="69:49">-&gt;</operator><name pos:start="69:50" pos:end="69:54">avctx</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:35"><block_content pos:start="71:9" pos:end="71:35">

        <return pos:start="71:9" pos:end="71:35">return <expr pos:start="71:16" pos:end="71:34"><name pos:start="71:16" pos:end="71:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:40"><expr pos:start="75:5" pos:end="75:39"><name pos:start="75:5" pos:end="75:17">nb_components</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <call pos:start="75:21" pos:end="75:39"><name pos:start="75:21" pos:end="75:28">get_bits</name><argument_list pos:start="75:29" pos:end="75:39">(<argument pos:start="75:30" pos:end="75:35"><expr pos:start="75:30" pos:end="75:35"><operator pos:start="75:30" pos:end="75:30">&amp;</operator><name pos:start="75:31" pos:end="75:35"><name pos:start="75:31" pos:end="75:31">s</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:35">gb</name></name></expr></argument>, <argument pos:start="75:38" pos:end="75:38"><expr pos:start="75:38" pos:end="75:38"><literal type="number" pos:start="75:38" pos:end="75:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="81:18"><if pos:start="77:5" pos:end="81:18">if <condition pos:start="77:8" pos:end="79:39">(<expr pos:start="77:9" pos:end="79:38"><name pos:start="77:9" pos:end="77:21">nb_components</name> <operator pos:start="77:23" pos:end="77:24">&lt;=</operator> <literal type="number" pos:start="77:26" pos:end="77:26">0</literal> <operator pos:start="77:28" pos:end="77:29">||</operator>

        <name pos:start="79:9" pos:end="79:21">nb_components</name> <operator pos:start="79:23" pos:end="79:23">&gt;</operator> <name pos:start="79:25" pos:end="79:38">MAX_COMPONENTS</name></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:18"><block_content pos:start="81:9" pos:end="81:18">

        <return pos:start="81:9" pos:end="81:18">return <expr pos:start="81:16" pos:end="81:17"><operator pos:start="81:16" pos:end="81:16">-</operator><literal type="number" pos:start="81:17" pos:end="81:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="83:5" pos:end="93:5"><if pos:start="83:5" pos:end="93:5">if <condition pos:start="83:8" pos:end="83:69">(<expr pos:start="83:9" pos:end="83:68"><name pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:21">interlaced</name></name> <operator pos:start="83:23" pos:end="83:24">&amp;&amp;</operator> <operator pos:start="83:26" pos:end="83:26">(</operator><name pos:start="83:27" pos:end="83:41"><name pos:start="83:27" pos:end="83:27">s</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:41">bottom_field</name></name> <operator pos:start="83:43" pos:end="83:44">==</operator> <operator pos:start="83:46" pos:end="83:46">!</operator><name pos:start="83:47" pos:end="83:67"><name pos:start="83:47" pos:end="83:47">s</name><operator pos:start="83:48" pos:end="83:49">-&gt;</operator><name pos:start="83:50" pos:end="83:67">interlace_polarity</name></name><operator pos:start="83:68" pos:end="83:68">)</operator></expr>)</condition> <block pos:start="83:71" pos:end="93:5">{<block_content pos:start="85:9" pos:end="91:9">

        <if_stmt pos:start="85:9" pos:end="91:9"><if pos:start="85:9" pos:end="91:9">if <condition pos:start="85:12" pos:end="85:46">(<expr pos:start="85:13" pos:end="85:45"><name pos:start="85:13" pos:end="85:25">nb_components</name> <operator pos:start="85:27" pos:end="85:28">!=</operator> <name pos:start="85:30" pos:end="85:45"><name pos:start="85:30" pos:end="85:30">s</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:45">nb_components</name></name></expr>)</condition> <block pos:start="85:48" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:39">

            <expr_stmt pos:start="87:13" pos:end="87:93"><expr pos:start="87:13" pos:end="87:92"><call pos:start="87:13" pos:end="87:92"><name pos:start="87:13" pos:end="87:18">av_log</name><argument_list pos:start="87:19" pos:end="87:92">(<argument pos:start="87:20" pos:end="87:27"><expr pos:start="87:20" pos:end="87:27"><name pos:start="87:20" pos:end="87:27"><name pos:start="87:20" pos:end="87:20">s</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:27">avctx</name></name></expr></argument>, <argument pos:start="87:30" pos:end="87:41"><expr pos:start="87:30" pos:end="87:41"><name pos:start="87:30" pos:end="87:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:44" pos:end="87:91"><expr pos:start="87:44" pos:end="87:91"><literal type="string" pos:start="87:44" pos:end="87:91">"nb_components changing in interlaced picture\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="89:13" pos:end="89:39">return <expr pos:start="89:20" pos:end="89:38"><name pos:start="89:20" pos:end="89:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="95:5" pos:end="105:5"><if pos:start="95:5" pos:end="105:5">if <condition pos:start="95:8" pos:end="95:55">(<expr pos:start="95:9" pos:end="95:54"><name pos:start="95:9" pos:end="95:13"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:13">ls</name></name> <operator pos:start="95:15" pos:end="95:16">&amp;&amp;</operator> <operator pos:start="95:18" pos:end="95:18">!</operator><operator pos:start="95:19" pos:end="95:19">(</operator><name pos:start="95:20" pos:end="95:26"><name pos:start="95:20" pos:end="95:20">s</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:26">bits</name></name> <operator pos:start="95:28" pos:end="95:29">&lt;=</operator> <literal type="number" pos:start="95:31" pos:end="95:31">8</literal> <operator pos:start="95:33" pos:end="95:34">||</operator> <name pos:start="95:36" pos:end="95:48">nb_components</name> <operator pos:start="95:50" pos:end="95:51">==</operator> <literal type="number" pos:start="95:53" pos:end="95:53">1</literal><operator pos:start="95:54" pos:end="95:54">)</operator></expr>)</condition> <block pos:start="95:57" pos:end="105:5">{<block_content pos:start="97:9" pos:end="103:36">

        <expr_stmt pos:start="97:9" pos:end="101:53"><expr pos:start="97:9" pos:end="101:52"><call pos:start="97:9" pos:end="101:52"><name pos:start="97:9" pos:end="97:30">av_log_missing_feature</name><argument_list pos:start="97:31" pos:end="101:52">(<argument pos:start="97:32" pos:end="97:39"><expr pos:start="97:32" pos:end="97:39"><name pos:start="97:32" pos:end="97:39"><name pos:start="97:32" pos:end="97:32">s</name><operator pos:start="97:33" pos:end="97:34">-&gt;</operator><name pos:start="97:35" pos:end="97:39">avctx</name></name></expr></argument>,

                               <argument pos:start="99:32" pos:end="101:48"><expr pos:start="99:32" pos:end="101:48"><literal type="string" pos:start="99:32" pos:end="99:80">"For JPEG-LS anything except &lt;= 8 bits/component"</literal>

                               <literal type="string" pos:start="101:32" pos:end="101:48">" or 16-bit gray"</literal></expr></argument>, <argument pos:start="101:51" pos:end="101:51"><expr pos:start="101:51" pos:end="101:51"><literal type="number" pos:start="101:51" pos:end="101:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:36">return <expr pos:start="103:16" pos:end="103:35"><name pos:start="103:16" pos:end="103:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:37"><expr pos:start="107:5" pos:end="107:36"><name pos:start="107:5" pos:end="107:20"><name pos:start="107:5" pos:end="107:5">s</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:20">nb_components</name></name> <operator pos:start="107:22" pos:end="107:22">=</operator> <name pos:start="107:24" pos:end="107:36">nb_components</name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:25"><expr pos:start="109:5" pos:end="109:24"><name pos:start="109:5" pos:end="109:12"><name pos:start="109:5" pos:end="109:5">s</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:12">h_max</name></name>         <operator pos:start="109:22" pos:end="109:22">=</operator> <literal type="number" pos:start="109:24" pos:end="109:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:25"><expr pos:start="111:5" pos:end="111:24"><name pos:start="111:5" pos:end="111:12"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:12">v_max</name></name>         <operator pos:start="111:22" pos:end="111:22">=</operator> <literal type="number" pos:start="111:24" pos:end="111:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:46"><expr pos:start="113:5" pos:end="113:45"><call pos:start="113:5" pos:end="113:45"><name pos:start="113:5" pos:end="113:10">memset</name><argument_list pos:start="113:11" pos:end="113:45">(<argument pos:start="113:12" pos:end="113:21"><expr pos:start="113:12" pos:end="113:21"><name pos:start="113:12" pos:end="113:21"><name pos:start="113:12" pos:end="113:12">s</name><operator pos:start="113:13" pos:end="113:14">-&gt;</operator><name pos:start="113:15" pos:end="113:21">h_count</name></name></expr></argument>, <argument pos:start="113:24" pos:end="113:24"><expr pos:start="113:24" pos:end="113:24"><literal type="number" pos:start="113:24" pos:end="113:24">0</literal></expr></argument>, <argument pos:start="113:27" pos:end="113:44"><expr pos:start="113:27" pos:end="113:44"><sizeof pos:start="113:27" pos:end="113:44">sizeof<argument_list pos:start="113:33" pos:end="113:44">(<argument pos:start="113:34" pos:end="113:43"><expr pos:start="113:34" pos:end="113:43"><name pos:start="113:34" pos:end="113:43"><name pos:start="113:34" pos:end="113:34">s</name><operator pos:start="113:35" pos:end="113:36">-&gt;</operator><name pos:start="113:37" pos:end="113:43">h_count</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:46"><expr pos:start="115:5" pos:end="115:45"><call pos:start="115:5" pos:end="115:45"><name pos:start="115:5" pos:end="115:10">memset</name><argument_list pos:start="115:11" pos:end="115:45">(<argument pos:start="115:12" pos:end="115:21"><expr pos:start="115:12" pos:end="115:21"><name pos:start="115:12" pos:end="115:21"><name pos:start="115:12" pos:end="115:12">s</name><operator pos:start="115:13" pos:end="115:14">-&gt;</operator><name pos:start="115:15" pos:end="115:21">v_count</name></name></expr></argument>, <argument pos:start="115:24" pos:end="115:24"><expr pos:start="115:24" pos:end="115:24"><literal type="number" pos:start="115:24" pos:end="115:24">0</literal></expr></argument>, <argument pos:start="115:27" pos:end="115:44"><expr pos:start="115:27" pos:end="115:44"><sizeof pos:start="115:27" pos:end="115:44">sizeof<argument_list pos:start="115:33" pos:end="115:44">(<argument pos:start="115:34" pos:end="115:43"><expr pos:start="115:34" pos:end="115:43"><name pos:start="115:34" pos:end="115:43"><name pos:start="115:34" pos:end="115:34">s</name><operator pos:start="115:35" pos:end="115:36">-&gt;</operator><name pos:start="115:37" pos:end="115:43">v_count</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="117:5" pos:end="157:5">for <control pos:start="117:9" pos:end="117:39">(<init pos:start="117:10" pos:end="117:15"><expr pos:start="117:10" pos:end="117:14"><name pos:start="117:10" pos:end="117:10">i</name> <operator pos:start="117:12" pos:end="117:12">=</operator> <literal type="number" pos:start="117:14" pos:end="117:14">0</literal></expr>;</init> <condition pos:start="117:17" pos:end="117:34"><expr pos:start="117:17" pos:end="117:33"><name pos:start="117:17" pos:end="117:17">i</name> <operator pos:start="117:19" pos:end="117:19">&lt;</operator> <name pos:start="117:21" pos:end="117:33">nb_components</name></expr>;</condition> <incr pos:start="117:36" pos:end="117:38"><expr pos:start="117:36" pos:end="117:38"><name pos:start="117:36" pos:end="117:36">i</name><operator pos:start="117:37" pos:end="117:38">++</operator></expr></incr>)</control> <block pos:start="117:41" pos:end="157:5">{<block_content pos:start="121:9" pos:end="155:54">

        <comment type="block" pos:start="119:9" pos:end="119:26">/* component id */</comment>

        <expr_stmt pos:start="121:9" pos:end="121:53"><expr pos:start="121:9" pos:end="121:52"><name pos:start="121:9" pos:end="121:26"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:23">component_id</name><index pos:start="121:24" pos:end="121:26">[<expr pos:start="121:25" pos:end="121:25"><name pos:start="121:25" pos:end="121:25">i</name></expr>]</index></name> <operator pos:start="121:28" pos:end="121:28">=</operator> <call pos:start="121:30" pos:end="121:48"><name pos:start="121:30" pos:end="121:37">get_bits</name><argument_list pos:start="121:38" pos:end="121:48">(<argument pos:start="121:39" pos:end="121:44"><expr pos:start="121:39" pos:end="121:44"><operator pos:start="121:39" pos:end="121:39">&amp;</operator><name pos:start="121:40" pos:end="121:44"><name pos:start="121:40" pos:end="121:40">s</name><operator pos:start="121:41" pos:end="121:42">-&gt;</operator><name pos:start="121:43" pos:end="121:44">gb</name></name></expr></argument>, <argument pos:start="121:47" pos:end="121:47"><expr pos:start="121:47" pos:end="121:47"><literal type="number" pos:start="121:47" pos:end="121:47">8</literal></expr></argument>)</argument_list></call> <operator pos:start="121:50" pos:end="121:50">-</operator> <literal type="number" pos:start="121:52" pos:end="121:52">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:49"><expr pos:start="123:9" pos:end="123:48"><name pos:start="123:9" pos:end="123:21"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:18">h_count</name><index pos:start="123:19" pos:end="123:21">[<expr pos:start="123:20" pos:end="123:20"><name pos:start="123:20" pos:end="123:20">i</name></expr>]</index></name>      <operator pos:start="123:28" pos:end="123:28">=</operator> <call pos:start="123:30" pos:end="123:48"><name pos:start="123:30" pos:end="123:37">get_bits</name><argument_list pos:start="123:38" pos:end="123:48">(<argument pos:start="123:39" pos:end="123:44"><expr pos:start="123:39" pos:end="123:44"><operator pos:start="123:39" pos:end="123:39">&amp;</operator><name pos:start="123:40" pos:end="123:44"><name pos:start="123:40" pos:end="123:40">s</name><operator pos:start="123:41" pos:end="123:42">-&gt;</operator><name pos:start="123:43" pos:end="123:44">gb</name></name></expr></argument>, <argument pos:start="123:47" pos:end="123:47"><expr pos:start="123:47" pos:end="123:47"><literal type="number" pos:start="123:47" pos:end="123:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:49"><expr pos:start="125:9" pos:end="125:48"><name pos:start="125:9" pos:end="125:21"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:18">v_count</name><index pos:start="125:19" pos:end="125:21">[<expr pos:start="125:20" pos:end="125:20"><name pos:start="125:20" pos:end="125:20">i</name></expr>]</index></name>      <operator pos:start="125:28" pos:end="125:28">=</operator> <call pos:start="125:30" pos:end="125:48"><name pos:start="125:30" pos:end="125:37">get_bits</name><argument_list pos:start="125:38" pos:end="125:48">(<argument pos:start="125:39" pos:end="125:44"><expr pos:start="125:39" pos:end="125:44"><operator pos:start="125:39" pos:end="125:39">&amp;</operator><name pos:start="125:40" pos:end="125:44"><name pos:start="125:40" pos:end="125:40">s</name><operator pos:start="125:41" pos:end="125:42">-&gt;</operator><name pos:start="125:43" pos:end="125:44">gb</name></name></expr></argument>, <argument pos:start="125:47" pos:end="125:47"><expr pos:start="125:47" pos:end="125:47"><literal type="number" pos:start="125:47" pos:end="125:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="127:9" pos:end="127:67">/* compute hmax and vmax (only used in interleaved case) */</comment>

        <if_stmt pos:start="129:9" pos:end="131:37"><if pos:start="129:9" pos:end="131:37">if <condition pos:start="129:12" pos:end="129:37">(<expr pos:start="129:13" pos:end="129:36"><name pos:start="129:13" pos:end="129:25"><name pos:start="129:13" pos:end="129:13">s</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:22">h_count</name><index pos:start="129:23" pos:end="129:25">[<expr pos:start="129:24" pos:end="129:24"><name pos:start="129:24" pos:end="129:24">i</name></expr>]</index></name> <operator pos:start="129:27" pos:end="129:27">&gt;</operator> <name pos:start="129:29" pos:end="129:36"><name pos:start="129:29" pos:end="129:29">s</name><operator pos:start="129:30" pos:end="129:31">-&gt;</operator><name pos:start="129:32" pos:end="129:36">h_max</name></name></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:37"><block_content pos:start="131:13" pos:end="131:37">

            <expr_stmt pos:start="131:13" pos:end="131:37"><expr pos:start="131:13" pos:end="131:36"><name pos:start="131:13" pos:end="131:20"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:20">h_max</name></name> <operator pos:start="131:22" pos:end="131:22">=</operator> <name pos:start="131:24" pos:end="131:36"><name pos:start="131:24" pos:end="131:24">s</name><operator pos:start="131:25" pos:end="131:26">-&gt;</operator><name pos:start="131:27" pos:end="131:33">h_count</name><index pos:start="131:34" pos:end="131:36">[<expr pos:start="131:35" pos:end="131:35"><name pos:start="131:35" pos:end="131:35">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="133:9" pos:end="135:37"><if pos:start="133:9" pos:end="135:37">if <condition pos:start="133:12" pos:end="133:37">(<expr pos:start="133:13" pos:end="133:36"><name pos:start="133:13" pos:end="133:25"><name pos:start="133:13" pos:end="133:13">s</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:22">v_count</name><index pos:start="133:23" pos:end="133:25">[<expr pos:start="133:24" pos:end="133:24"><name pos:start="133:24" pos:end="133:24">i</name></expr>]</index></name> <operator pos:start="133:27" pos:end="133:27">&gt;</operator> <name pos:start="133:29" pos:end="133:36"><name pos:start="133:29" pos:end="133:29">s</name><operator pos:start="133:30" pos:end="133:31">-&gt;</operator><name pos:start="133:32" pos:end="133:36">v_max</name></name></expr>)</condition><block type="pseudo" pos:start="135:13" pos:end="135:37"><block_content pos:start="135:13" pos:end="135:37">

            <expr_stmt pos:start="135:13" pos:end="135:37"><expr pos:start="135:13" pos:end="135:36"><name pos:start="135:13" pos:end="135:20"><name pos:start="135:13" pos:end="135:13">s</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:20">v_max</name></name> <operator pos:start="135:22" pos:end="135:22">=</operator> <name pos:start="135:24" pos:end="135:36"><name pos:start="135:24" pos:end="135:24">s</name><operator pos:start="135:25" pos:end="135:26">-&gt;</operator><name pos:start="135:27" pos:end="135:33">v_count</name><index pos:start="135:34" pos:end="135:36">[<expr pos:start="135:35" pos:end="135:35"><name pos:start="135:35" pos:end="135:35">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="137:9" pos:end="143:9"><if pos:start="137:9" pos:end="143:9">if <condition pos:start="137:12" pos:end="137:45">(<expr pos:start="137:13" pos:end="137:44"><operator pos:start="137:13" pos:end="137:13">!</operator><name pos:start="137:14" pos:end="137:26"><name pos:start="137:14" pos:end="137:14">s</name><operator pos:start="137:15" pos:end="137:16">-&gt;</operator><name pos:start="137:17" pos:end="137:23">h_count</name><index pos:start="137:24" pos:end="137:26">[<expr pos:start="137:25" pos:end="137:25"><name pos:start="137:25" pos:end="137:25">i</name></expr>]</index></name> <operator pos:start="137:28" pos:end="137:29">||</operator> <operator pos:start="137:31" pos:end="137:31">!</operator><name pos:start="137:32" pos:end="137:44"><name pos:start="137:32" pos:end="137:32">s</name><operator pos:start="137:33" pos:end="137:34">-&gt;</operator><name pos:start="137:35" pos:end="137:41">v_count</name><index pos:start="137:42" pos:end="137:44">[<expr pos:start="137:43" pos:end="137:43"><name pos:start="137:43" pos:end="137:43">i</name></expr>]</index></name></expr>)</condition> <block pos:start="137:47" pos:end="143:9">{<block_content pos:start="139:13" pos:end="141:22">

            <expr_stmt pos:start="139:13" pos:end="139:63"><expr pos:start="139:13" pos:end="139:62"><call pos:start="139:13" pos:end="139:62"><name pos:start="139:13" pos:end="139:18">av_log</name><argument_list pos:start="139:19" pos:end="139:62">(<argument pos:start="139:20" pos:end="139:27"><expr pos:start="139:20" pos:end="139:27"><name pos:start="139:20" pos:end="139:27"><name pos:start="139:20" pos:end="139:20">s</name><operator pos:start="139:21" pos:end="139:22">-&gt;</operator><name pos:start="139:23" pos:end="139:27">avctx</name></name></expr></argument>, <argument pos:start="139:30" pos:end="139:41"><expr pos:start="139:30" pos:end="139:41"><name pos:start="139:30" pos:end="139:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="139:44" pos:end="139:61"><expr pos:start="139:44" pos:end="139:61"><literal type="string" pos:start="139:44" pos:end="139:61">"h/v_count is 0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="141:13" pos:end="141:22">return <expr pos:start="141:20" pos:end="141:21"><operator pos:start="141:20" pos:end="141:20">-</operator><literal type="number" pos:start="141:21" pos:end="141:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:48"><expr pos:start="145:9" pos:end="145:47"><name pos:start="145:9" pos:end="145:25"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:22">quant_index</name><index pos:start="145:23" pos:end="145:25">[<expr pos:start="145:24" pos:end="145:24"><name pos:start="145:24" pos:end="145:24">i</name></expr>]</index></name> <operator pos:start="145:27" pos:end="145:27">=</operator> <call pos:start="145:29" pos:end="145:47"><name pos:start="145:29" pos:end="145:36">get_bits</name><argument_list pos:start="145:37" pos:end="145:47">(<argument pos:start="145:38" pos:end="145:43"><expr pos:start="145:38" pos:end="145:43"><operator pos:start="145:38" pos:end="145:38">&amp;</operator><name pos:start="145:39" pos:end="145:43"><name pos:start="145:39" pos:end="145:39">s</name><operator pos:start="145:40" pos:end="145:41">-&gt;</operator><name pos:start="145:42" pos:end="145:43">gb</name></name></expr></argument>, <argument pos:start="145:46" pos:end="145:46"><expr pos:start="145:46" pos:end="145:46"><literal type="number" pos:start="145:46" pos:end="145:46">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="149:39"><if pos:start="147:9" pos:end="149:39">if <condition pos:start="147:12" pos:end="147:35">(<expr pos:start="147:13" pos:end="147:34"><name pos:start="147:13" pos:end="147:29"><name pos:start="147:13" pos:end="147:13">s</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:26">quant_index</name><index pos:start="147:27" pos:end="147:29">[<expr pos:start="147:28" pos:end="147:28"><name pos:start="147:28" pos:end="147:28">i</name></expr>]</index></name> <operator pos:start="147:31" pos:end="147:32">&gt;=</operator> <literal type="number" pos:start="147:34" pos:end="147:34">4</literal></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:39"><block_content pos:start="149:13" pos:end="149:39">

            <return pos:start="149:13" pos:end="149:39">return <expr pos:start="149:20" pos:end="149:38"><name pos:start="149:20" pos:end="149:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="151:9" pos:end="155:54"><expr pos:start="151:9" pos:end="155:53"><call pos:start="151:9" pos:end="155:53"><name pos:start="151:9" pos:end="151:14">av_log</name><argument_list pos:start="151:15" pos:end="155:53">(<argument pos:start="151:16" pos:end="151:23"><expr pos:start="151:16" pos:end="151:23"><name pos:start="151:16" pos:end="151:23"><name pos:start="151:16" pos:end="151:16">s</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:23">avctx</name></name></expr></argument>, <argument pos:start="151:26" pos:end="151:37"><expr pos:start="151:26" pos:end="151:37"><name pos:start="151:26" pos:end="151:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="151:40" pos:end="151:77"><expr pos:start="151:40" pos:end="151:77"><literal type="string" pos:start="151:40" pos:end="151:77">"component %d %d:%d id: %d quant:%d\n"</literal></expr></argument>,

               <argument pos:start="153:16" pos:end="153:16"><expr pos:start="153:16" pos:end="153:16"><name pos:start="153:16" pos:end="153:16">i</name></expr></argument>, <argument pos:start="153:19" pos:end="153:31"><expr pos:start="153:19" pos:end="153:31"><name pos:start="153:19" pos:end="153:31"><name pos:start="153:19" pos:end="153:19">s</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:28">h_count</name><index pos:start="153:29" pos:end="153:31">[<expr pos:start="153:30" pos:end="153:30"><name pos:start="153:30" pos:end="153:30">i</name></expr>]</index></name></expr></argument>, <argument pos:start="153:34" pos:end="153:46"><expr pos:start="153:34" pos:end="153:46"><name pos:start="153:34" pos:end="153:46"><name pos:start="153:34" pos:end="153:34">s</name><operator pos:start="153:35" pos:end="153:36">-&gt;</operator><name pos:start="153:37" pos:end="153:43">v_count</name><index pos:start="153:44" pos:end="153:46">[<expr pos:start="153:45" pos:end="153:45"><name pos:start="153:45" pos:end="153:45">i</name></expr>]</index></name></expr></argument>,

               <argument pos:start="155:16" pos:end="155:33"><expr pos:start="155:16" pos:end="155:33"><name pos:start="155:16" pos:end="155:33"><name pos:start="155:16" pos:end="155:16">s</name><operator pos:start="155:17" pos:end="155:18">-&gt;</operator><name pos:start="155:19" pos:end="155:30">component_id</name><index pos:start="155:31" pos:end="155:33">[<expr pos:start="155:32" pos:end="155:32"><name pos:start="155:32" pos:end="155:32">i</name></expr>]</index></name></expr></argument>, <argument pos:start="155:36" pos:end="155:52"><expr pos:start="155:36" pos:end="155:52"><name pos:start="155:36" pos:end="155:52"><name pos:start="155:36" pos:end="155:36">s</name><operator pos:start="155:37" pos:end="155:38">-&gt;</operator><name pos:start="155:39" pos:end="155:49">quant_index</name><index pos:start="155:50" pos:end="155:52">[<expr pos:start="155:51" pos:end="155:51"><name pos:start="155:51" pos:end="155:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="161:5" pos:end="167:5"><if pos:start="161:5" pos:end="167:5">if <condition pos:start="161:8" pos:end="161:48">(<expr pos:start="161:9" pos:end="161:47"><name pos:start="161:9" pos:end="161:13"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:13">ls</name></name> <operator pos:start="161:15" pos:end="161:16">&amp;&amp;</operator> <operator pos:start="161:18" pos:end="161:18">(</operator><name pos:start="161:19" pos:end="161:26"><name pos:start="161:19" pos:end="161:19">s</name><operator pos:start="161:20" pos:end="161:21">-&gt;</operator><name pos:start="161:22" pos:end="161:26">h_max</name></name> <operator pos:start="161:28" pos:end="161:28">&gt;</operator> <literal type="number" pos:start="161:30" pos:end="161:30">1</literal> <operator pos:start="161:32" pos:end="161:33">||</operator> <name pos:start="161:35" pos:end="161:42"><name pos:start="161:35" pos:end="161:35">s</name><operator pos:start="161:36" pos:end="161:37">-&gt;</operator><name pos:start="161:38" pos:end="161:42">v_max</name></name> <operator pos:start="161:44" pos:end="161:44">&gt;</operator> <literal type="number" pos:start="161:46" pos:end="161:46">1</literal><operator pos:start="161:47" pos:end="161:47">)</operator></expr>)</condition> <block pos:start="161:50" pos:end="167:5">{<block_content pos:start="163:9" pos:end="165:36">

        <expr_stmt pos:start="163:9" pos:end="163:70"><expr pos:start="163:9" pos:end="163:69"><call pos:start="163:9" pos:end="163:69"><name pos:start="163:9" pos:end="163:30">av_log_missing_feature</name><argument_list pos:start="163:31" pos:end="163:69">(<argument pos:start="163:32" pos:end="163:39"><expr pos:start="163:32" pos:end="163:39"><name pos:start="163:32" pos:end="163:39"><name pos:start="163:32" pos:end="163:32">s</name><operator pos:start="163:33" pos:end="163:34">-&gt;</operator><name pos:start="163:35" pos:end="163:39">avctx</name></name></expr></argument>, <argument pos:start="163:42" pos:end="163:65"><expr pos:start="163:42" pos:end="163:65"><literal type="string" pos:start="163:42" pos:end="163:65">"Subsampling in JPEG-LS"</literal></expr></argument>, <argument pos:start="163:68" pos:end="163:68"><expr pos:start="163:68" pos:end="163:68"><literal type="number" pos:start="163:68" pos:end="163:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="165:9" pos:end="165:36">return <expr pos:start="165:16" pos:end="165:35"><name pos:start="165:16" pos:end="165:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="171:5" pos:end="173:19"><if pos:start="171:5" pos:end="173:19">if <condition pos:start="171:8" pos:end="171:77">(<expr pos:start="171:9" pos:end="171:76"><name pos:start="171:9" pos:end="171:16"><name pos:start="171:9" pos:end="171:9">s</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:16">v_max</name></name> <operator pos:start="171:18" pos:end="171:19">==</operator> <literal type="number" pos:start="171:21" pos:end="171:21">1</literal> <operator pos:start="171:23" pos:end="171:24">&amp;&amp;</operator> <name pos:start="171:26" pos:end="171:33"><name pos:start="171:26" pos:end="171:26">s</name><operator pos:start="171:27" pos:end="171:28">-&gt;</operator><name pos:start="171:29" pos:end="171:33">h_max</name></name> <operator pos:start="171:35" pos:end="171:36">==</operator> <literal type="number" pos:start="171:38" pos:end="171:38">1</literal> <operator pos:start="171:40" pos:end="171:41">&amp;&amp;</operator> <name pos:start="171:43" pos:end="171:53"><name pos:start="171:43" pos:end="171:43">s</name><operator pos:start="171:44" pos:end="171:45">-&gt;</operator><name pos:start="171:46" pos:end="171:53">lossless</name></name><operator pos:start="171:54" pos:end="171:55">==</operator><literal type="number" pos:start="171:56" pos:end="171:56">1</literal> <operator pos:start="171:58" pos:end="171:59">&amp;&amp;</operator> <name pos:start="171:61" pos:end="171:73">nb_components</name><operator pos:start="171:74" pos:end="171:75">==</operator><literal type="number" pos:start="171:76" pos:end="171:76">3</literal></expr>)</condition><block type="pseudo" pos:start="173:9" pos:end="173:19"><block_content pos:start="173:9" pos:end="173:19">

        <expr_stmt pos:start="173:9" pos:end="173:19"><expr pos:start="173:9" pos:end="173:18"><name pos:start="173:9" pos:end="173:14"><name pos:start="173:9" pos:end="173:9">s</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:14">rgb</name></name> <operator pos:start="173:16" pos:end="173:16">=</operator> <literal type="number" pos:start="173:18" pos:end="173:18">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="177:5" pos:end="177:50">/* if different size, realloc/alloc picture */</comment>

    <comment type="block" pos:start="179:5" pos:end="179:45">/* XXX: also check h_count and v_count */</comment>

    <if_stmt pos:start="181:5" pos:end="225:5"><if pos:start="181:5" pos:end="225:5">if <condition pos:start="181:8" pos:end="181:49">(<expr pos:start="181:9" pos:end="181:48"><name pos:start="181:9" pos:end="181:13">width</name> <operator pos:start="181:15" pos:end="181:16">!=</operator> <name pos:start="181:18" pos:end="181:25"><name pos:start="181:18" pos:end="181:18">s</name><operator pos:start="181:19" pos:end="181:20">-&gt;</operator><name pos:start="181:21" pos:end="181:25">width</name></name> <operator pos:start="181:27" pos:end="181:28">||</operator> <name pos:start="181:30" pos:end="181:35">height</name> <operator pos:start="181:37" pos:end="181:38">!=</operator> <name pos:start="181:40" pos:end="181:48"><name pos:start="181:40" pos:end="181:40">s</name><operator pos:start="181:41" pos:end="181:42">-&gt;</operator><name pos:start="181:43" pos:end="181:48">height</name></name></expr>)</condition> <block pos:start="181:51" pos:end="225:5">{<block_content pos:start="183:9" pos:end="223:29">

        <expr_stmt pos:start="183:9" pos:end="183:35"><expr pos:start="183:9" pos:end="183:34"><call pos:start="183:9" pos:end="183:34"><name pos:start="183:9" pos:end="183:16">av_freep</name><argument_list pos:start="183:17" pos:end="183:34">(<argument pos:start="183:18" pos:end="183:33"><expr pos:start="183:18" pos:end="183:33"><operator pos:start="183:18" pos:end="183:18">&amp;</operator><name pos:start="183:19" pos:end="183:33"><name pos:start="183:19" pos:end="183:19">s</name><operator pos:start="183:20" pos:end="183:21">-&gt;</operator><name pos:start="183:22" pos:end="183:33">qscale_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="187:9" pos:end="187:30"><expr pos:start="187:9" pos:end="187:29"><name pos:start="187:9" pos:end="187:16"><name pos:start="187:9" pos:end="187:9">s</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:16">width</name></name>      <operator pos:start="187:23" pos:end="187:23">=</operator> <name pos:start="187:25" pos:end="187:29">width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:31"><expr pos:start="189:9" pos:end="189:30"><name pos:start="189:9" pos:end="189:17"><name pos:start="189:9" pos:end="189:9">s</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:17">height</name></name>     <operator pos:start="189:23" pos:end="189:23">=</operator> <name pos:start="189:25" pos:end="189:30">height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:26"><expr pos:start="191:9" pos:end="191:25"><name pos:start="191:9" pos:end="191:21"><name pos:start="191:9" pos:end="191:9">s</name><operator pos:start="191:10" pos:end="191:11">-&gt;</operator><name pos:start="191:12" pos:end="191:21">interlaced</name></name> <operator pos:start="191:23" pos:end="191:23">=</operator> <literal type="number" pos:start="191:25" pos:end="191:25">0</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="195:9" pos:end="195:34">/* test interlaced mode */</comment>

        <if_stmt pos:start="197:9" pos:end="213:9"><if pos:start="197:9" pos:end="213:9">if <condition pos:start="197:12" pos:end="201:50">(<expr pos:start="197:13" pos:end="201:49"><name pos:start="197:13" pos:end="197:28"><name pos:start="197:13" pos:end="197:13">s</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:28">first_picture</name></name>   <operator pos:start="197:32" pos:end="197:33">&amp;&amp;</operator>

            <name pos:start="199:13" pos:end="199:25"><name pos:start="199:13" pos:end="199:13">s</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:25">org_height</name></name> <operator pos:start="199:27" pos:end="199:28">!=</operator> <literal type="number" pos:start="199:30" pos:end="199:30">0</literal> <operator pos:start="199:32" pos:end="199:33">&amp;&amp;</operator>

            <name pos:start="201:13" pos:end="201:21"><name pos:start="201:13" pos:end="201:13">s</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:21">height</name></name> <operator pos:start="201:23" pos:end="201:23">&lt;</operator> <operator pos:start="201:25" pos:end="201:25">(</operator><operator pos:start="201:26" pos:end="201:26">(</operator><name pos:start="201:27" pos:end="201:39"><name pos:start="201:27" pos:end="201:27">s</name><operator pos:start="201:28" pos:end="201:29">-&gt;</operator><name pos:start="201:30" pos:end="201:39">org_height</name></name> <operator pos:start="201:41" pos:end="201:41">*</operator> <literal type="number" pos:start="201:43" pos:end="201:43">3</literal><operator pos:start="201:44" pos:end="201:44">)</operator> <operator pos:start="201:46" pos:end="201:46">/</operator> <literal type="number" pos:start="201:48" pos:end="201:48">4</literal><operator pos:start="201:49" pos:end="201:49">)</operator></expr>)</condition> <block pos:start="201:52" pos:end="213:9">{<block_content pos:start="203:13" pos:end="211:24">

            <expr_stmt pos:start="203:13" pos:end="203:49"><expr pos:start="203:13" pos:end="203:48"><name pos:start="203:13" pos:end="203:25"><name pos:start="203:13" pos:end="203:13">s</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:25">interlaced</name></name>                    <operator pos:start="203:46" pos:end="203:46">=</operator> <literal type="number" pos:start="203:48" pos:end="203:48">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:69"><expr pos:start="205:13" pos:end="205:68"><name pos:start="205:13" pos:end="205:27"><name pos:start="205:13" pos:end="205:13">s</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:27">bottom_field</name></name>                  <operator pos:start="205:46" pos:end="205:46">=</operator> <name pos:start="205:48" pos:end="205:68"><name pos:start="205:48" pos:end="205:48">s</name><operator pos:start="205:49" pos:end="205:50">-&gt;</operator><name pos:start="205:51" pos:end="205:68">interlace_polarity</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:49"><expr pos:start="207:13" pos:end="207:48"><name pos:start="207:13" pos:end="207:44"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:26">picture_ptr</name><operator pos:start="207:27" pos:end="207:28">-&gt;</operator><name pos:start="207:29" pos:end="207:44">interlaced_frame</name></name> <operator pos:start="207:46" pos:end="207:46">=</operator> <literal type="number" pos:start="207:48" pos:end="207:48">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:70"><expr pos:start="209:13" pos:end="209:69"><name pos:start="209:13" pos:end="209:43"><name pos:start="209:13" pos:end="209:13">s</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:26">picture_ptr</name><operator pos:start="209:27" pos:end="209:28">-&gt;</operator><name pos:start="209:29" pos:end="209:43">top_field_first</name></name>  <operator pos:start="209:46" pos:end="209:46">=</operator> <operator pos:start="209:48" pos:end="209:48">!</operator><name pos:start="209:49" pos:end="209:69"><name pos:start="209:49" pos:end="209:49">s</name><operator pos:start="209:50" pos:end="209:51">-&gt;</operator><name pos:start="209:52" pos:end="209:69">interlace_polarity</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:24"><expr pos:start="211:13" pos:end="211:23"><name pos:start="211:13" pos:end="211:18">height</name> <operator pos:start="211:20" pos:end="211:21">*=</operator> <literal type="number" pos:start="211:23" pos:end="211:23">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="217:9" pos:end="217:56"><expr pos:start="217:9" pos:end="217:55"><call pos:start="217:9" pos:end="217:55"><name pos:start="217:9" pos:end="217:30">avcodec_set_dimensions</name><argument_list pos:start="217:31" pos:end="217:55">(<argument pos:start="217:32" pos:end="217:39"><expr pos:start="217:32" pos:end="217:39"><name pos:start="217:32" pos:end="217:39"><name pos:start="217:32" pos:end="217:32">s</name><operator pos:start="217:33" pos:end="217:34">-&gt;</operator><name pos:start="217:35" pos:end="217:39">avctx</name></name></expr></argument>, <argument pos:start="217:42" pos:end="217:46"><expr pos:start="217:42" pos:end="217:46"><name pos:start="217:42" pos:end="217:46">width</name></expr></argument>, <argument pos:start="217:49" pos:end="217:54"><expr pos:start="217:49" pos:end="217:54"><name pos:start="217:49" pos:end="217:54">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="221:9" pos:end="221:60"><expr pos:start="221:9" pos:end="221:59"><name pos:start="221:9" pos:end="221:23"><name pos:start="221:9" pos:end="221:9">s</name><operator pos:start="221:10" pos:end="221:11">-&gt;</operator><name pos:start="221:12" pos:end="221:23">qscale_table</name></name>  <operator pos:start="221:26" pos:end="221:26">=</operator> <call pos:start="221:28" pos:end="221:59"><name pos:start="221:28" pos:end="221:37">av_mallocz</name><argument_list pos:start="221:38" pos:end="221:59">(<argument pos:start="221:39" pos:end="221:58"><expr pos:start="221:39" pos:end="221:58"><operator pos:start="221:39" pos:end="221:39">(</operator><name pos:start="221:40" pos:end="221:47"><name pos:start="221:40" pos:end="221:40">s</name><operator pos:start="221:41" pos:end="221:42">-&gt;</operator><name pos:start="221:43" pos:end="221:47">width</name></name> <operator pos:start="221:49" pos:end="221:49">+</operator> <literal type="number" pos:start="221:51" pos:end="221:52">15</literal><operator pos:start="221:53" pos:end="221:53">)</operator> <operator pos:start="221:55" pos:end="221:55">/</operator> <literal type="number" pos:start="221:57" pos:end="221:58">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:29"><expr pos:start="223:9" pos:end="223:28"><name pos:start="223:9" pos:end="223:24"><name pos:start="223:9" pos:end="223:9">s</name><operator pos:start="223:10" pos:end="223:11">-&gt;</operator><name pos:start="223:12" pos:end="223:24">first_picture</name></name> <operator pos:start="223:26" pos:end="223:26">=</operator> <literal type="number" pos:start="223:28" pos:end="223:28">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="229:5" pos:end="473:5"><if pos:start="229:5" pos:end="239:5">if <condition pos:start="229:8" pos:end="229:69">(<expr pos:start="229:9" pos:end="229:68"><name pos:start="229:9" pos:end="229:21"><name pos:start="229:9" pos:end="229:9">s</name><operator pos:start="229:10" pos:end="229:11">-&gt;</operator><name pos:start="229:12" pos:end="229:21">interlaced</name></name> <operator pos:start="229:23" pos:end="229:24">&amp;&amp;</operator> <operator pos:start="229:26" pos:end="229:26">(</operator><name pos:start="229:27" pos:end="229:41"><name pos:start="229:27" pos:end="229:27">s</name><operator pos:start="229:28" pos:end="229:29">-&gt;</operator><name pos:start="229:30" pos:end="229:41">bottom_field</name></name> <operator pos:start="229:43" pos:end="229:44">==</operator> <operator pos:start="229:46" pos:end="229:46">!</operator><name pos:start="229:47" pos:end="229:67"><name pos:start="229:47" pos:end="229:47">s</name><operator pos:start="229:48" pos:end="229:49">-&gt;</operator><name pos:start="229:50" pos:end="229:67">interlace_polarity</name></name><operator pos:start="229:68" pos:end="229:68">)</operator></expr>)</condition> <block pos:start="229:71" pos:end="239:5">{<block_content pos:start="231:9" pos:end="237:9">

        <if_stmt pos:start="231:9" pos:end="237:9"><if pos:start="231:9" pos:end="237:9">if <condition pos:start="231:12" pos:end="231:27">(<expr pos:start="231:13" pos:end="231:26"><name pos:start="231:13" pos:end="231:26"><name pos:start="231:13" pos:end="231:13">s</name><operator pos:start="231:14" pos:end="231:15">-&gt;</operator><name pos:start="231:16" pos:end="231:26">progressive</name></name></expr>)</condition> <block pos:start="231:29" pos:end="237:9">{<block_content pos:start="233:13" pos:end="235:39">

            <expr_stmt pos:start="233:13" pos:end="233:103"><expr pos:start="233:13" pos:end="233:102"><call pos:start="233:13" pos:end="233:102"><name pos:start="233:13" pos:end="233:33">av_log_ask_for_sample</name><argument_list pos:start="233:34" pos:end="233:102">(<argument pos:start="233:35" pos:end="233:42"><expr pos:start="233:35" pos:end="233:42"><name pos:start="233:35" pos:end="233:42"><name pos:start="233:35" pos:end="233:35">s</name><operator pos:start="233:36" pos:end="233:37">-&gt;</operator><name pos:start="233:38" pos:end="233:42">avctx</name></name></expr></argument>, <argument pos:start="233:45" pos:end="233:101"><expr pos:start="233:45" pos:end="233:101"><literal type="string" pos:start="233:45" pos:end="233:101">"progressively coded interlaced pictures not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="235:13" pos:end="235:39">return <expr pos:start="235:20" pos:end="235:38"><name pos:start="235:20" pos:end="235:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="239:7" pos:end="473:5">else<block pos:start="239:11" pos:end="473:5">{<block_content pos:start="243:5" pos:end="471:86">

    <comment type="block" pos:start="241:5" pos:end="241:34">/* XXX: not complete test ! */</comment>

    <expr_stmt pos:start="243:5" pos:end="249:56"><expr pos:start="243:5" pos:end="249:55"><name pos:start="243:5" pos:end="243:14">pix_fmt_id</name> <operator pos:start="243:16" pos:end="243:16">=</operator> <operator pos:start="243:18" pos:end="243:18">(</operator><name pos:start="243:19" pos:end="243:31"><name pos:start="243:19" pos:end="243:19">s</name><operator pos:start="243:20" pos:end="243:21">-&gt;</operator><name pos:start="243:22" pos:end="243:28">h_count</name><index pos:start="243:29" pos:end="243:31">[<expr pos:start="243:30" pos:end="243:30"><literal type="number" pos:start="243:30" pos:end="243:30">0</literal></expr>]</index></name> <operator pos:start="243:33" pos:end="243:34">&lt;&lt;</operator> <literal type="number" pos:start="243:36" pos:end="243:37">28</literal><operator pos:start="243:38" pos:end="243:38">)</operator> <operator pos:start="243:40" pos:end="243:40">|</operator> <operator pos:start="243:42" pos:end="243:42">(</operator><name pos:start="243:43" pos:end="243:55"><name pos:start="243:43" pos:end="243:43">s</name><operator pos:start="243:44" pos:end="243:45">-&gt;</operator><name pos:start="243:46" pos:end="243:52">v_count</name><index pos:start="243:53" pos:end="243:55">[<expr pos:start="243:54" pos:end="243:54"><literal type="number" pos:start="243:54" pos:end="243:54">0</literal></expr>]</index></name> <operator pos:start="243:57" pos:end="243:58">&lt;&lt;</operator> <literal type="number" pos:start="243:60" pos:end="243:61">24</literal><operator pos:start="243:62" pos:end="243:62">)</operator> <operator pos:start="243:64" pos:end="243:64">|</operator>

                 <operator pos:start="245:18" pos:end="245:18">(</operator><name pos:start="245:19" pos:end="245:31"><name pos:start="245:19" pos:end="245:19">s</name><operator pos:start="245:20" pos:end="245:21">-&gt;</operator><name pos:start="245:22" pos:end="245:28">h_count</name><index pos:start="245:29" pos:end="245:31">[<expr pos:start="245:30" pos:end="245:30"><literal type="number" pos:start="245:30" pos:end="245:30">1</literal></expr>]</index></name> <operator pos:start="245:33" pos:end="245:34">&lt;&lt;</operator> <literal type="number" pos:start="245:36" pos:end="245:37">20</literal><operator pos:start="245:38" pos:end="245:38">)</operator> <operator pos:start="245:40" pos:end="245:40">|</operator> <operator pos:start="245:42" pos:end="245:42">(</operator><name pos:start="245:43" pos:end="245:55"><name pos:start="245:43" pos:end="245:43">s</name><operator pos:start="245:44" pos:end="245:45">-&gt;</operator><name pos:start="245:46" pos:end="245:52">v_count</name><index pos:start="245:53" pos:end="245:55">[<expr pos:start="245:54" pos:end="245:54"><literal type="number" pos:start="245:54" pos:end="245:54">1</literal></expr>]</index></name> <operator pos:start="245:57" pos:end="245:58">&lt;&lt;</operator> <literal type="number" pos:start="245:60" pos:end="245:61">16</literal><operator pos:start="245:62" pos:end="245:62">)</operator> <operator pos:start="245:64" pos:end="245:64">|</operator>

                 <operator pos:start="247:18" pos:end="247:18">(</operator><name pos:start="247:19" pos:end="247:31"><name pos:start="247:19" pos:end="247:19">s</name><operator pos:start="247:20" pos:end="247:21">-&gt;</operator><name pos:start="247:22" pos:end="247:28">h_count</name><index pos:start="247:29" pos:end="247:31">[<expr pos:start="247:30" pos:end="247:30"><literal type="number" pos:start="247:30" pos:end="247:30">2</literal></expr>]</index></name> <operator pos:start="247:33" pos:end="247:34">&lt;&lt;</operator> <literal type="number" pos:start="247:36" pos:end="247:37">12</literal><operator pos:start="247:38" pos:end="247:38">)</operator> <operator pos:start="247:40" pos:end="247:40">|</operator> <operator pos:start="247:42" pos:end="247:42">(</operator><name pos:start="247:43" pos:end="247:55"><name pos:start="247:43" pos:end="247:43">s</name><operator pos:start="247:44" pos:end="247:45">-&gt;</operator><name pos:start="247:46" pos:end="247:52">v_count</name><index pos:start="247:53" pos:end="247:55">[<expr pos:start="247:54" pos:end="247:54"><literal type="number" pos:start="247:54" pos:end="247:54">2</literal></expr>]</index></name> <operator pos:start="247:57" pos:end="247:58">&lt;&lt;</operator>  <literal type="number" pos:start="247:61" pos:end="247:61">8</literal><operator pos:start="247:62" pos:end="247:62">)</operator> <operator pos:start="247:64" pos:end="247:64">|</operator>

                 <operator pos:start="249:18" pos:end="249:18">(</operator><name pos:start="249:19" pos:end="249:31"><name pos:start="249:19" pos:end="249:19">s</name><operator pos:start="249:20" pos:end="249:21">-&gt;</operator><name pos:start="249:22" pos:end="249:28">h_count</name><index pos:start="249:29" pos:end="249:31">[<expr pos:start="249:30" pos:end="249:30"><literal type="number" pos:start="249:30" pos:end="249:30">3</literal></expr>]</index></name> <operator pos:start="249:33" pos:end="249:34">&lt;&lt;</operator>  <literal type="number" pos:start="249:37" pos:end="249:37">4</literal><operator pos:start="249:38" pos:end="249:38">)</operator> <operator pos:start="249:40" pos:end="249:40">|</operator>  <name pos:start="249:43" pos:end="249:55"><name pos:start="249:43" pos:end="249:43">s</name><operator pos:start="249:44" pos:end="249:45">-&gt;</operator><name pos:start="249:46" pos:end="249:52">v_count</name><index pos:start="249:53" pos:end="249:55">[<expr pos:start="249:54" pos:end="249:54"><literal type="number" pos:start="249:54" pos:end="249:54">3</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:66"><expr pos:start="251:5" pos:end="251:65"><call pos:start="251:5" pos:end="251:65"><name pos:start="251:5" pos:end="251:10">av_log</name><argument_list pos:start="251:11" pos:end="251:65">(<argument pos:start="251:12" pos:end="251:19"><expr pos:start="251:12" pos:end="251:19"><name pos:start="251:12" pos:end="251:19"><name pos:start="251:12" pos:end="251:12">s</name><operator pos:start="251:13" pos:end="251:14">-&gt;</operator><name pos:start="251:15" pos:end="251:19">avctx</name></name></expr></argument>, <argument pos:start="251:22" pos:end="251:33"><expr pos:start="251:22" pos:end="251:33"><name pos:start="251:22" pos:end="251:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="251:36" pos:end="251:52"><expr pos:start="251:36" pos:end="251:52"><literal type="string" pos:start="251:36" pos:end="251:52">"pix fmt id %x\n"</literal></expr></argument>, <argument pos:start="251:55" pos:end="251:64"><expr pos:start="251:55" pos:end="251:64"><name pos:start="251:55" pos:end="251:64">pix_fmt_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="253:5" pos:end="255:38">/* NOTE we do not allocate pictures large enough for the possible

     * padding of h/v_count being 4 */</comment>

    <if_stmt pos:start="257:5" pos:end="259:53"><if pos:start="257:5" pos:end="259:53">if <condition pos:start="257:8" pos:end="257:35">(<expr pos:start="257:9" pos:end="257:34"><operator pos:start="257:9" pos:end="257:9">!</operator><operator pos:start="257:10" pos:end="257:10">(</operator><name pos:start="257:11" pos:end="257:20">pix_fmt_id</name> <operator pos:start="257:22" pos:end="257:22">&amp;</operator> <literal type="number" pos:start="257:24" pos:end="257:33">0xD0D0D0D0</literal><operator pos:start="257:34" pos:end="257:34">)</operator></expr>)</condition><block type="pseudo" pos:start="259:9" pos:end="259:53"><block_content pos:start="259:9" pos:end="259:53">

        <expr_stmt pos:start="259:9" pos:end="259:53"><expr pos:start="259:9" pos:end="259:52"><name pos:start="259:9" pos:end="259:18">pix_fmt_id</name> <operator pos:start="259:20" pos:end="259:21">-=</operator> <operator pos:start="259:23" pos:end="259:23">(</operator><name pos:start="259:24" pos:end="259:33">pix_fmt_id</name> <operator pos:start="259:35" pos:end="259:35">&amp;</operator> <literal type="number" pos:start="259:37" pos:end="259:46">0xF0F0F0F0</literal><operator pos:start="259:47" pos:end="259:47">)</operator> <operator pos:start="259:49" pos:end="259:50">&gt;&gt;</operator> <literal type="number" pos:start="259:52" pos:end="259:52">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="261:5" pos:end="263:53"><if pos:start="261:5" pos:end="263:53">if <condition pos:start="261:8" pos:end="261:35">(<expr pos:start="261:9" pos:end="261:34"><operator pos:start="261:9" pos:end="261:9">!</operator><operator pos:start="261:10" pos:end="261:10">(</operator><name pos:start="261:11" pos:end="261:20">pix_fmt_id</name> <operator pos:start="261:22" pos:end="261:22">&amp;</operator> <literal type="number" pos:start="261:24" pos:end="261:33">0x0D0D0D0D</literal><operator pos:start="261:34" pos:end="261:34">)</operator></expr>)</condition><block type="pseudo" pos:start="263:9" pos:end="263:53"><block_content pos:start="263:9" pos:end="263:53">

        <expr_stmt pos:start="263:9" pos:end="263:53"><expr pos:start="263:9" pos:end="263:52"><name pos:start="263:9" pos:end="263:18">pix_fmt_id</name> <operator pos:start="263:20" pos:end="263:21">-=</operator> <operator pos:start="263:23" pos:end="263:23">(</operator><name pos:start="263:24" pos:end="263:33">pix_fmt_id</name> <operator pos:start="263:35" pos:end="263:35">&amp;</operator> <literal type="number" pos:start="263:37" pos:end="263:46">0x0F0F0F0F</literal><operator pos:start="263:47" pos:end="263:47">)</operator> <operator pos:start="263:49" pos:end="263:50">&gt;&gt;</operator> <literal type="number" pos:start="263:52" pos:end="263:52">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <switch pos:start="267:5" pos:end="403:5">switch <condition pos:start="267:12" pos:end="267:23">(<expr pos:start="267:13" pos:end="267:22"><name pos:start="267:13" pos:end="267:22">pix_fmt_id</name></expr>)</condition> <block pos:start="267:25" pos:end="403:5">{<block_content pos:start="269:5" pos:end="401:36">

    <case pos:start="269:5" pos:end="269:20">case <expr pos:start="269:10" pos:end="269:19"><literal type="number" pos:start="269:10" pos:end="269:19">0x11111100</literal></expr>:</case>

        <if_stmt pos:start="271:9" pos:end="289:9"><if pos:start="271:9" pos:end="273:49">if <condition pos:start="271:12" pos:end="271:19">(<expr pos:start="271:13" pos:end="271:18"><name pos:start="271:13" pos:end="271:18"><name pos:start="271:13" pos:end="271:13">s</name><operator pos:start="271:14" pos:end="271:15">-&gt;</operator><name pos:start="271:16" pos:end="271:18">rgb</name></name></expr>)</condition><block type="pseudo" pos:start="273:13" pos:end="273:49"><block_content pos:start="273:13" pos:end="273:49">

            <expr_stmt pos:start="273:13" pos:end="273:49"><expr pos:start="273:13" pos:end="273:48"><name pos:start="273:13" pos:end="273:29"><name pos:start="273:13" pos:end="273:13">s</name><operator pos:start="273:14" pos:end="273:15">-&gt;</operator><name pos:start="273:16" pos:end="273:20">avctx</name><operator pos:start="273:21" pos:end="273:22">-&gt;</operator><name pos:start="273:23" pos:end="273:29">pix_fmt</name></name> <operator pos:start="273:31" pos:end="273:31">=</operator> <name pos:start="273:33" pos:end="273:48">AV_PIX_FMT_BGR24</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="275:9" pos:end="289:9">else <block pos:start="275:14" pos:end="289:9">{<block_content pos:start="277:13" pos:end="287:13">

            <if_stmt pos:start="277:13" pos:end="287:13"><if pos:start="277:13" pos:end="281:13">if <condition pos:start="277:16" pos:end="277:100">(<expr pos:start="277:17" pos:end="277:99"><name pos:start="277:17" pos:end="277:34"><name pos:start="277:17" pos:end="277:17">s</name><operator pos:start="277:18" pos:end="277:19">-&gt;</operator><name pos:start="277:20" pos:end="277:31">component_id</name><index pos:start="277:32" pos:end="277:34">[<expr pos:start="277:33" pos:end="277:33"><literal type="number" pos:start="277:33" pos:end="277:33">0</literal></expr>]</index></name> <operator pos:start="277:36" pos:end="277:37">==</operator> <literal type="char" pos:start="277:39" pos:end="277:41">'Q'</literal> <operator pos:start="277:43" pos:end="277:44">&amp;&amp;</operator> <name pos:start="277:46" pos:end="277:63"><name pos:start="277:46" pos:end="277:46">s</name><operator pos:start="277:47" pos:end="277:48">-&gt;</operator><name pos:start="277:49" pos:end="277:60">component_id</name><index pos:start="277:61" pos:end="277:63">[<expr pos:start="277:62" pos:end="277:62"><literal type="number" pos:start="277:62" pos:end="277:62">1</literal></expr>]</index></name> <operator pos:start="277:65" pos:end="277:66">==</operator> <literal type="char" pos:start="277:68" pos:end="277:70">'F'</literal> <operator pos:start="277:72" pos:end="277:73">&amp;&amp;</operator> <name pos:start="277:75" pos:end="277:92"><name pos:start="277:75" pos:end="277:75">s</name><operator pos:start="277:76" pos:end="277:77">-&gt;</operator><name pos:start="277:78" pos:end="277:89">component_id</name><index pos:start="277:90" pos:end="277:92">[<expr pos:start="277:91" pos:end="277:91"><literal type="number" pos:start="277:91" pos:end="277:91">2</literal></expr>]</index></name> <operator pos:start="277:94" pos:end="277:95">==</operator> <literal type="char" pos:start="277:97" pos:end="277:99">'A'</literal></expr>)</condition> <block pos:start="277:102" pos:end="281:13">{<block_content pos:start="279:17" pos:end="279:54">

                <expr_stmt pos:start="279:17" pos:end="279:54"><expr pos:start="279:17" pos:end="279:53"><name pos:start="279:17" pos:end="279:33"><name pos:start="279:17" pos:end="279:17">s</name><operator pos:start="279:18" pos:end="279:19">-&gt;</operator><name pos:start="279:20" pos:end="279:24">avctx</name><operator pos:start="279:25" pos:end="279:26">-&gt;</operator><name pos:start="279:27" pos:end="279:33">pix_fmt</name></name> <operator pos:start="279:35" pos:end="279:35">=</operator> <name pos:start="279:37" pos:end="279:53">AV_PIX_FMT_GBR24P</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="281:15" pos:end="287:13">else <block pos:start="281:20" pos:end="287:13">{<block_content pos:start="283:13" pos:end="285:87">

            <expr_stmt pos:start="283:13" pos:end="283:88"><expr pos:start="283:13" pos:end="283:87"><name pos:start="283:13" pos:end="283:29"><name pos:start="283:13" pos:end="283:13">s</name><operator pos:start="283:14" pos:end="283:15">-&gt;</operator><name pos:start="283:16" pos:end="283:20">avctx</name><operator pos:start="283:21" pos:end="283:22">-&gt;</operator><name pos:start="283:23" pos:end="283:29">pix_fmt</name></name> <operator pos:start="283:31" pos:end="283:31">=</operator> <ternary pos:start="283:33" pos:end="283:87"><condition pos:start="283:33" pos:end="283:46"><expr pos:start="283:33" pos:end="283:44"><name pos:start="283:33" pos:end="283:44"><name pos:start="283:33" pos:end="283:33">s</name><operator pos:start="283:34" pos:end="283:35">-&gt;</operator><name pos:start="283:36" pos:end="283:44">cs_itu601</name></name></expr> ?</condition><then pos:start="283:48" pos:end="283:65"> <expr pos:start="283:48" pos:end="283:65"><name pos:start="283:48" pos:end="283:65">AV_PIX_FMT_YUV444P</name></expr> </then><else pos:start="283:67" pos:end="283:87">: <expr pos:start="283:69" pos:end="283:87"><name pos:start="283:69" pos:end="283:87">AV_PIX_FMT_YUVJ444P</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="285:13" pos:end="285:87"><expr pos:start="285:13" pos:end="285:86"><name pos:start="285:13" pos:end="285:33"><name pos:start="285:13" pos:end="285:13">s</name><operator pos:start="285:14" pos:end="285:15">-&gt;</operator><name pos:start="285:16" pos:end="285:20">avctx</name><operator pos:start="285:21" pos:end="285:22">-&gt;</operator><name pos:start="285:23" pos:end="285:33">color_range</name></name> <operator pos:start="285:35" pos:end="285:35">=</operator> <ternary pos:start="285:37" pos:end="285:86"><condition pos:start="285:37" pos:end="285:50"><expr pos:start="285:37" pos:end="285:48"><name pos:start="285:37" pos:end="285:48"><name pos:start="285:37" pos:end="285:37">s</name><operator pos:start="285:38" pos:end="285:39">-&gt;</operator><name pos:start="285:40" pos:end="285:48">cs_itu601</name></name></expr> ?</condition><then pos:start="285:52" pos:end="285:67"> <expr pos:start="285:52" pos:end="285:67"><name pos:start="285:52" pos:end="285:67">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="285:69" pos:end="285:86">: <expr pos:start="285:71" pos:end="285:86"><name pos:start="285:71" pos:end="285:86">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:42"><expr pos:start="291:9" pos:end="291:41"><call pos:start="291:9" pos:end="291:41"><name pos:start="291:9" pos:end="291:18">av_assert0</name><argument_list pos:start="291:19" pos:end="291:41">(<argument pos:start="291:20" pos:end="291:40"><expr pos:start="291:20" pos:end="291:40"><name pos:start="291:20" pos:end="291:35"><name pos:start="291:20" pos:end="291:20">s</name><operator pos:start="291:21" pos:end="291:22">-&gt;</operator><name pos:start="291:23" pos:end="291:35">nb_components</name></name> <operator pos:start="291:37" pos:end="291:38">==</operator> <literal type="number" pos:start="291:40" pos:end="291:40">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="293:9" pos:end="293:14">break;</break>

    <case pos:start="295:5" pos:end="295:20">case <expr pos:start="295:10" pos:end="295:19"><literal type="number" pos:start="295:10" pos:end="295:19">0x12121100</literal></expr>:</case>

    <case pos:start="297:5" pos:end="297:20">case <expr pos:start="297:10" pos:end="297:19"><literal type="number" pos:start="297:10" pos:end="297:19">0x22122100</literal></expr>:</case>

        <expr_stmt pos:start="299:9" pos:end="299:84"><expr pos:start="299:9" pos:end="299:83"><name pos:start="299:9" pos:end="299:25"><name pos:start="299:9" pos:end="299:9">s</name><operator pos:start="299:10" pos:end="299:11">-&gt;</operator><name pos:start="299:12" pos:end="299:16">avctx</name><operator pos:start="299:17" pos:end="299:18">-&gt;</operator><name pos:start="299:19" pos:end="299:25">pix_fmt</name></name> <operator pos:start="299:27" pos:end="299:27">=</operator> <ternary pos:start="299:29" pos:end="299:83"><condition pos:start="299:29" pos:end="299:42"><expr pos:start="299:29" pos:end="299:40"><name pos:start="299:29" pos:end="299:40"><name pos:start="299:29" pos:end="299:29">s</name><operator pos:start="299:30" pos:end="299:31">-&gt;</operator><name pos:start="299:32" pos:end="299:40">cs_itu601</name></name></expr> ?</condition><then pos:start="299:44" pos:end="299:61"> <expr pos:start="299:44" pos:end="299:61"><name pos:start="299:44" pos:end="299:61">AV_PIX_FMT_YUV444P</name></expr> </then><else pos:start="299:63" pos:end="299:83">: <expr pos:start="299:65" pos:end="299:83"><name pos:start="299:65" pos:end="299:83">AV_PIX_FMT_YUVJ444P</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="301:9" pos:end="301:83"><expr pos:start="301:9" pos:end="301:82"><name pos:start="301:9" pos:end="301:29"><name pos:start="301:9" pos:end="301:9">s</name><operator pos:start="301:10" pos:end="301:11">-&gt;</operator><name pos:start="301:12" pos:end="301:16">avctx</name><operator pos:start="301:17" pos:end="301:18">-&gt;</operator><name pos:start="301:19" pos:end="301:29">color_range</name></name> <operator pos:start="301:31" pos:end="301:31">=</operator> <ternary pos:start="301:33" pos:end="301:82"><condition pos:start="301:33" pos:end="301:46"><expr pos:start="301:33" pos:end="301:44"><name pos:start="301:33" pos:end="301:44"><name pos:start="301:33" pos:end="301:33">s</name><operator pos:start="301:34" pos:end="301:35">-&gt;</operator><name pos:start="301:36" pos:end="301:44">cs_itu601</name></name></expr> ?</condition><then pos:start="301:48" pos:end="301:63"> <expr pos:start="301:48" pos:end="301:63"><name pos:start="301:48" pos:end="301:63">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="301:65" pos:end="301:82">: <expr pos:start="301:67" pos:end="301:82"><name pos:start="301:67" pos:end="301:82">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="303:9" pos:end="303:25"><expr pos:start="303:9" pos:end="303:24"><name pos:start="303:9" pos:end="303:20"><name pos:start="303:9" pos:end="303:9">s</name><operator pos:start="303:10" pos:end="303:11">-&gt;</operator><name pos:start="303:12" pos:end="303:20">upscale_v</name></name> <operator pos:start="303:22" pos:end="303:22">=</operator> <literal type="number" pos:start="303:24" pos:end="303:24">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:50"><expr pos:start="305:9" pos:end="305:49"><name pos:start="305:9" pos:end="305:20"><name pos:start="305:9" pos:end="305:9">s</name><operator pos:start="305:10" pos:end="305:11">-&gt;</operator><name pos:start="305:12" pos:end="305:20">upscale_h</name></name> <operator pos:start="305:22" pos:end="305:22">=</operator> <operator pos:start="305:24" pos:end="305:24">(</operator><name pos:start="305:25" pos:end="305:34">pix_fmt_id</name> <operator pos:start="305:36" pos:end="305:37">==</operator> <literal type="number" pos:start="305:39" pos:end="305:48">0x22122100</literal><operator pos:start="305:49" pos:end="305:49">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:37"><expr pos:start="307:9" pos:end="307:36"><name pos:start="307:9" pos:end="307:24"><name pos:start="307:9" pos:end="307:9">s</name><operator pos:start="307:10" pos:end="307:11">-&gt;</operator><name pos:start="307:12" pos:end="307:24">chroma_height</name></name> <operator pos:start="307:26" pos:end="307:26">=</operator> <name pos:start="307:28" pos:end="307:36"><name pos:start="307:28" pos:end="307:28">s</name><operator pos:start="307:29" pos:end="307:30">-&gt;</operator><name pos:start="307:31" pos:end="307:36">height</name></name></expr>;</expr_stmt>

        <break pos:start="309:9" pos:end="309:14">break;</break>

    <case pos:start="311:5" pos:end="311:20">case <expr pos:start="311:10" pos:end="311:19"><literal type="number" pos:start="311:10" pos:end="311:19">0x21211100</literal></expr>:</case>

    <case pos:start="313:5" pos:end="313:20">case <expr pos:start="313:10" pos:end="313:19"><literal type="number" pos:start="313:10" pos:end="313:19">0x22211200</literal></expr>:</case>

        <expr_stmt pos:start="315:9" pos:end="315:84"><expr pos:start="315:9" pos:end="315:83"><name pos:start="315:9" pos:end="315:25"><name pos:start="315:9" pos:end="315:9">s</name><operator pos:start="315:10" pos:end="315:11">-&gt;</operator><name pos:start="315:12" pos:end="315:16">avctx</name><operator pos:start="315:17" pos:end="315:18">-&gt;</operator><name pos:start="315:19" pos:end="315:25">pix_fmt</name></name> <operator pos:start="315:27" pos:end="315:27">=</operator> <ternary pos:start="315:29" pos:end="315:83"><condition pos:start="315:29" pos:end="315:42"><expr pos:start="315:29" pos:end="315:40"><name pos:start="315:29" pos:end="315:40"><name pos:start="315:29" pos:end="315:29">s</name><operator pos:start="315:30" pos:end="315:31">-&gt;</operator><name pos:start="315:32" pos:end="315:40">cs_itu601</name></name></expr> ?</condition><then pos:start="315:44" pos:end="315:61"> <expr pos:start="315:44" pos:end="315:61"><name pos:start="315:44" pos:end="315:61">AV_PIX_FMT_YUV444P</name></expr> </then><else pos:start="315:63" pos:end="315:83">: <expr pos:start="315:65" pos:end="315:83"><name pos:start="315:65" pos:end="315:83">AV_PIX_FMT_YUVJ444P</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:83"><expr pos:start="317:9" pos:end="317:82"><name pos:start="317:9" pos:end="317:29"><name pos:start="317:9" pos:end="317:9">s</name><operator pos:start="317:10" pos:end="317:11">-&gt;</operator><name pos:start="317:12" pos:end="317:16">avctx</name><operator pos:start="317:17" pos:end="317:18">-&gt;</operator><name pos:start="317:19" pos:end="317:29">color_range</name></name> <operator pos:start="317:31" pos:end="317:31">=</operator> <ternary pos:start="317:33" pos:end="317:82"><condition pos:start="317:33" pos:end="317:46"><expr pos:start="317:33" pos:end="317:44"><name pos:start="317:33" pos:end="317:44"><name pos:start="317:33" pos:end="317:33">s</name><operator pos:start="317:34" pos:end="317:35">-&gt;</operator><name pos:start="317:36" pos:end="317:44">cs_itu601</name></name></expr> ?</condition><then pos:start="317:48" pos:end="317:63"> <expr pos:start="317:48" pos:end="317:63"><name pos:start="317:48" pos:end="317:63">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="317:65" pos:end="317:82">: <expr pos:start="317:67" pos:end="317:82"><name pos:start="317:67" pos:end="317:82">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="319:9" pos:end="319:50"><expr pos:start="319:9" pos:end="319:49"><name pos:start="319:9" pos:end="319:20"><name pos:start="319:9" pos:end="319:9">s</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:20">upscale_v</name></name> <operator pos:start="319:22" pos:end="319:22">=</operator> <operator pos:start="319:24" pos:end="319:24">(</operator><name pos:start="319:25" pos:end="319:34">pix_fmt_id</name> <operator pos:start="319:36" pos:end="319:37">==</operator> <literal type="number" pos:start="319:39" pos:end="319:48">0x22211200</literal><operator pos:start="319:49" pos:end="319:49">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:25"><expr pos:start="321:9" pos:end="321:24"><name pos:start="321:9" pos:end="321:20"><name pos:start="321:9" pos:end="321:9">s</name><operator pos:start="321:10" pos:end="321:11">-&gt;</operator><name pos:start="321:12" pos:end="321:20">upscale_h</name></name> <operator pos:start="321:22" pos:end="321:22">=</operator> <literal type="number" pos:start="321:24" pos:end="321:24">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="323:9" pos:end="323:37"><expr pos:start="323:9" pos:end="323:36"><name pos:start="323:9" pos:end="323:24"><name pos:start="323:9" pos:end="323:9">s</name><operator pos:start="323:10" pos:end="323:11">-&gt;</operator><name pos:start="323:12" pos:end="323:24">chroma_height</name></name> <operator pos:start="323:26" pos:end="323:26">=</operator> <name pos:start="323:28" pos:end="323:36"><name pos:start="323:28" pos:end="323:28">s</name><operator pos:start="323:29" pos:end="323:30">-&gt;</operator><name pos:start="323:31" pos:end="323:36">height</name></name></expr>;</expr_stmt>

        <break pos:start="325:9" pos:end="325:14">break;</break>

    <case pos:start="327:5" pos:end="327:20">case <expr pos:start="327:10" pos:end="327:19"><literal type="number" pos:start="327:10" pos:end="327:19">0x22221100</literal></expr>:</case>

        <expr_stmt pos:start="329:9" pos:end="329:84"><expr pos:start="329:9" pos:end="329:83"><name pos:start="329:9" pos:end="329:25"><name pos:start="329:9" pos:end="329:9">s</name><operator pos:start="329:10" pos:end="329:11">-&gt;</operator><name pos:start="329:12" pos:end="329:16">avctx</name><operator pos:start="329:17" pos:end="329:18">-&gt;</operator><name pos:start="329:19" pos:end="329:25">pix_fmt</name></name> <operator pos:start="329:27" pos:end="329:27">=</operator> <ternary pos:start="329:29" pos:end="329:83"><condition pos:start="329:29" pos:end="329:42"><expr pos:start="329:29" pos:end="329:40"><name pos:start="329:29" pos:end="329:40"><name pos:start="329:29" pos:end="329:29">s</name><operator pos:start="329:30" pos:end="329:31">-&gt;</operator><name pos:start="329:32" pos:end="329:40">cs_itu601</name></name></expr> ?</condition><then pos:start="329:44" pos:end="329:61"> <expr pos:start="329:44" pos:end="329:61"><name pos:start="329:44" pos:end="329:61">AV_PIX_FMT_YUV444P</name></expr> </then><else pos:start="329:63" pos:end="329:83">: <expr pos:start="329:65" pos:end="329:83"><name pos:start="329:65" pos:end="329:83">AV_PIX_FMT_YUVJ444P</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="331:9" pos:end="331:83"><expr pos:start="331:9" pos:end="331:82"><name pos:start="331:9" pos:end="331:29"><name pos:start="331:9" pos:end="331:9">s</name><operator pos:start="331:10" pos:end="331:11">-&gt;</operator><name pos:start="331:12" pos:end="331:16">avctx</name><operator pos:start="331:17" pos:end="331:18">-&gt;</operator><name pos:start="331:19" pos:end="331:29">color_range</name></name> <operator pos:start="331:31" pos:end="331:31">=</operator> <ternary pos:start="331:33" pos:end="331:82"><condition pos:start="331:33" pos:end="331:46"><expr pos:start="331:33" pos:end="331:44"><name pos:start="331:33" pos:end="331:44"><name pos:start="331:33" pos:end="331:33">s</name><operator pos:start="331:34" pos:end="331:35">-&gt;</operator><name pos:start="331:36" pos:end="331:44">cs_itu601</name></name></expr> ?</condition><then pos:start="331:48" pos:end="331:63"> <expr pos:start="331:48" pos:end="331:63"><name pos:start="331:48" pos:end="331:63">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="331:65" pos:end="331:82">: <expr pos:start="331:67" pos:end="331:82"><name pos:start="331:67" pos:end="331:82">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:25"><expr pos:start="333:9" pos:end="333:24"><name pos:start="333:9" pos:end="333:20"><name pos:start="333:9" pos:end="333:9">s</name><operator pos:start="333:10" pos:end="333:11">-&gt;</operator><name pos:start="333:12" pos:end="333:20">upscale_v</name></name> <operator pos:start="333:22" pos:end="333:22">=</operator> <literal type="number" pos:start="333:24" pos:end="333:24">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="335:9" pos:end="335:25"><expr pos:start="335:9" pos:end="335:24"><name pos:start="335:9" pos:end="335:20"><name pos:start="335:9" pos:end="335:9">s</name><operator pos:start="335:10" pos:end="335:11">-&gt;</operator><name pos:start="335:12" pos:end="335:20">upscale_h</name></name> <operator pos:start="335:22" pos:end="335:22">=</operator> <literal type="number" pos:start="335:24" pos:end="335:24">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="337:9" pos:end="337:41"><expr pos:start="337:9" pos:end="337:40"><name pos:start="337:9" pos:end="337:24"><name pos:start="337:9" pos:end="337:9">s</name><operator pos:start="337:10" pos:end="337:11">-&gt;</operator><name pos:start="337:12" pos:end="337:24">chroma_height</name></name> <operator pos:start="337:26" pos:end="337:26">=</operator> <name pos:start="337:28" pos:end="337:36"><name pos:start="337:28" pos:end="337:28">s</name><operator pos:start="337:29" pos:end="337:30">-&gt;</operator><name pos:start="337:31" pos:end="337:36">height</name></name> <operator pos:start="337:38" pos:end="337:38">/</operator> <literal type="number" pos:start="337:40" pos:end="337:40">2</literal></expr>;</expr_stmt>

        <break pos:start="339:9" pos:end="339:14">break;</break>

    <case pos:start="341:5" pos:end="341:20">case <expr pos:start="341:10" pos:end="341:19"><literal type="number" pos:start="341:10" pos:end="341:19">0x11000000</literal></expr>:</case>

        <if_stmt pos:start="343:9" pos:end="349:50"><if pos:start="343:9" pos:end="345:49">if<condition pos:start="343:11" pos:end="343:24">(<expr pos:start="343:12" pos:end="343:23"><name pos:start="343:12" pos:end="343:18"><name pos:start="343:12" pos:end="343:12">s</name><operator pos:start="343:13" pos:end="343:14">-&gt;</operator><name pos:start="343:15" pos:end="343:18">bits</name></name> <operator pos:start="343:20" pos:end="343:21">&lt;=</operator> <literal type="number" pos:start="343:23" pos:end="343:23">8</literal></expr>)</condition><block type="pseudo" pos:start="345:13" pos:end="345:49"><block_content pos:start="345:13" pos:end="345:49">

            <expr_stmt pos:start="345:13" pos:end="345:49"><expr pos:start="345:13" pos:end="345:48"><name pos:start="345:13" pos:end="345:29"><name pos:start="345:13" pos:end="345:13">s</name><operator pos:start="345:14" pos:end="345:15">-&gt;</operator><name pos:start="345:16" pos:end="345:20">avctx</name><operator pos:start="345:21" pos:end="345:22">-&gt;</operator><name pos:start="345:23" pos:end="345:29">pix_fmt</name></name> <operator pos:start="345:31" pos:end="345:31">=</operator> <name pos:start="345:33" pos:end="345:48">AV_PIX_FMT_GRAY8</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="347:9" pos:end="349:50">else<block type="pseudo" pos:start="349:13" pos:end="349:50"><block_content pos:start="349:13" pos:end="349:50">

            <expr_stmt pos:start="349:13" pos:end="349:50"><expr pos:start="349:13" pos:end="349:49"><name pos:start="349:13" pos:end="349:29"><name pos:start="349:13" pos:end="349:13">s</name><operator pos:start="349:14" pos:end="349:15">-&gt;</operator><name pos:start="349:16" pos:end="349:20">avctx</name><operator pos:start="349:21" pos:end="349:22">-&gt;</operator><name pos:start="349:23" pos:end="349:29">pix_fmt</name></name> <operator pos:start="349:31" pos:end="349:31">=</operator> <name pos:start="349:33" pos:end="349:49">AV_PIX_FMT_GRAY16</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="351:9" pos:end="351:14">break;</break>

    <case pos:start="353:5" pos:end="353:20">case <expr pos:start="353:10" pos:end="353:19"><literal type="number" pos:start="353:10" pos:end="353:19">0x12111100</literal></expr>:</case>

    <case pos:start="355:5" pos:end="355:20">case <expr pos:start="355:10" pos:end="355:19"><literal type="number" pos:start="355:10" pos:end="355:19">0x22211100</literal></expr>:</case>

    <case pos:start="357:5" pos:end="357:20">case <expr pos:start="357:10" pos:end="357:19"><literal type="number" pos:start="357:10" pos:end="357:19">0x22112100</literal></expr>:</case>

        <expr_stmt pos:start="359:9" pos:end="359:84"><expr pos:start="359:9" pos:end="359:83"><name pos:start="359:9" pos:end="359:25"><name pos:start="359:9" pos:end="359:9">s</name><operator pos:start="359:10" pos:end="359:11">-&gt;</operator><name pos:start="359:12" pos:end="359:16">avctx</name><operator pos:start="359:17" pos:end="359:18">-&gt;</operator><name pos:start="359:19" pos:end="359:25">pix_fmt</name></name> <operator pos:start="359:27" pos:end="359:27">=</operator> <ternary pos:start="359:29" pos:end="359:83"><condition pos:start="359:29" pos:end="359:42"><expr pos:start="359:29" pos:end="359:40"><name pos:start="359:29" pos:end="359:40"><name pos:start="359:29" pos:end="359:29">s</name><operator pos:start="359:30" pos:end="359:31">-&gt;</operator><name pos:start="359:32" pos:end="359:40">cs_itu601</name></name></expr> ?</condition><then pos:start="359:44" pos:end="359:61"> <expr pos:start="359:44" pos:end="359:61"><name pos:start="359:44" pos:end="359:61">AV_PIX_FMT_YUV440P</name></expr> </then><else pos:start="359:63" pos:end="359:83">: <expr pos:start="359:65" pos:end="359:83"><name pos:start="359:65" pos:end="359:83">AV_PIX_FMT_YUVJ440P</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="361:9" pos:end="361:83"><expr pos:start="361:9" pos:end="361:82"><name pos:start="361:9" pos:end="361:29"><name pos:start="361:9" pos:end="361:9">s</name><operator pos:start="361:10" pos:end="361:11">-&gt;</operator><name pos:start="361:12" pos:end="361:16">avctx</name><operator pos:start="361:17" pos:end="361:18">-&gt;</operator><name pos:start="361:19" pos:end="361:29">color_range</name></name> <operator pos:start="361:31" pos:end="361:31">=</operator> <ternary pos:start="361:33" pos:end="361:82"><condition pos:start="361:33" pos:end="361:46"><expr pos:start="361:33" pos:end="361:44"><name pos:start="361:33" pos:end="361:44"><name pos:start="361:33" pos:end="361:33">s</name><operator pos:start="361:34" pos:end="361:35">-&gt;</operator><name pos:start="361:36" pos:end="361:44">cs_itu601</name></name></expr> ?</condition><then pos:start="361:48" pos:end="361:63"> <expr pos:start="361:48" pos:end="361:63"><name pos:start="361:48" pos:end="361:63">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="361:65" pos:end="361:82">: <expr pos:start="361:67" pos:end="361:82"><name pos:start="361:67" pos:end="361:82">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="363:9" pos:end="363:83"><expr pos:start="363:9" pos:end="363:82"><name pos:start="363:9" pos:end="363:20"><name pos:start="363:9" pos:end="363:9">s</name><operator pos:start="363:10" pos:end="363:11">-&gt;</operator><name pos:start="363:12" pos:end="363:20">upscale_h</name></name> <operator pos:start="363:22" pos:end="363:22">=</operator> <operator pos:start="363:24" pos:end="363:24">(</operator><name pos:start="363:25" pos:end="363:34">pix_fmt_id</name> <operator pos:start="363:36" pos:end="363:37">==</operator> <literal type="number" pos:start="363:39" pos:end="363:48">0x22211100</literal><operator pos:start="363:49" pos:end="363:49">)</operator> <operator pos:start="363:51" pos:end="363:51">*</operator> <literal type="number" pos:start="363:53" pos:end="363:55">2</literal> <operator pos:start="363:55" pos:end="363:55">+</operator> <operator pos:start="363:57" pos:end="363:57">(</operator><name pos:start="363:58" pos:end="363:67">pix_fmt_id</name> <operator pos:start="363:69" pos:end="363:70">==</operator> <literal type="number" pos:start="363:72" pos:end="363:81">0x22112100</literal><operator pos:start="363:82" pos:end="363:82">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="365:9" pos:end="365:41"><expr pos:start="365:9" pos:end="365:40"><name pos:start="365:9" pos:end="365:24"><name pos:start="365:9" pos:end="365:9">s</name><operator pos:start="365:10" pos:end="365:11">-&gt;</operator><name pos:start="365:12" pos:end="365:24">chroma_height</name></name> <operator pos:start="365:26" pos:end="365:26">=</operator> <name pos:start="365:28" pos:end="365:36"><name pos:start="365:28" pos:end="365:28">s</name><operator pos:start="365:29" pos:end="365:30">-&gt;</operator><name pos:start="365:31" pos:end="365:36">height</name></name> <operator pos:start="365:38" pos:end="365:38">/</operator> <literal type="number" pos:start="365:40" pos:end="365:40">2</literal></expr>;</expr_stmt>

        <break pos:start="367:9" pos:end="367:14">break;</break>

    <case pos:start="369:5" pos:end="369:20">case <expr pos:start="369:10" pos:end="369:19"><literal type="number" pos:start="369:10" pos:end="369:19">0x21111100</literal></expr>:</case>

        <expr_stmt pos:start="371:9" pos:end="371:84"><expr pos:start="371:9" pos:end="371:83"><name pos:start="371:9" pos:end="371:25"><name pos:start="371:9" pos:end="371:9">s</name><operator pos:start="371:10" pos:end="371:11">-&gt;</operator><name pos:start="371:12" pos:end="371:16">avctx</name><operator pos:start="371:17" pos:end="371:18">-&gt;</operator><name pos:start="371:19" pos:end="371:25">pix_fmt</name></name> <operator pos:start="371:27" pos:end="371:27">=</operator> <ternary pos:start="371:29" pos:end="371:83"><condition pos:start="371:29" pos:end="371:42"><expr pos:start="371:29" pos:end="371:40"><name pos:start="371:29" pos:end="371:40"><name pos:start="371:29" pos:end="371:29">s</name><operator pos:start="371:30" pos:end="371:31">-&gt;</operator><name pos:start="371:32" pos:end="371:40">cs_itu601</name></name></expr> ?</condition><then pos:start="371:44" pos:end="371:61"> <expr pos:start="371:44" pos:end="371:61"><name pos:start="371:44" pos:end="371:61">AV_PIX_FMT_YUV422P</name></expr> </then><else pos:start="371:63" pos:end="371:83">: <expr pos:start="371:65" pos:end="371:83"><name pos:start="371:65" pos:end="371:83">AV_PIX_FMT_YUVJ422P</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="373:9" pos:end="373:83"><expr pos:start="373:9" pos:end="373:82"><name pos:start="373:9" pos:end="373:29"><name pos:start="373:9" pos:end="373:9">s</name><operator pos:start="373:10" pos:end="373:11">-&gt;</operator><name pos:start="373:12" pos:end="373:16">avctx</name><operator pos:start="373:17" pos:end="373:18">-&gt;</operator><name pos:start="373:19" pos:end="373:29">color_range</name></name> <operator pos:start="373:31" pos:end="373:31">=</operator> <ternary pos:start="373:33" pos:end="373:82"><condition pos:start="373:33" pos:end="373:46"><expr pos:start="373:33" pos:end="373:44"><name pos:start="373:33" pos:end="373:44"><name pos:start="373:33" pos:end="373:33">s</name><operator pos:start="373:34" pos:end="373:35">-&gt;</operator><name pos:start="373:36" pos:end="373:44">cs_itu601</name></name></expr> ?</condition><then pos:start="373:48" pos:end="373:63"> <expr pos:start="373:48" pos:end="373:63"><name pos:start="373:48" pos:end="373:63">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="373:65" pos:end="373:82">: <expr pos:start="373:67" pos:end="373:82"><name pos:start="373:67" pos:end="373:82">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="375:9" pos:end="375:14">break;</break>

    <case pos:start="377:5" pos:end="377:20">case <expr pos:start="377:10" pos:end="377:19"><literal type="number" pos:start="377:10" pos:end="377:19">0x22121100</literal></expr>:</case>

    <case pos:start="379:5" pos:end="379:20">case <expr pos:start="379:10" pos:end="379:19"><literal type="number" pos:start="379:10" pos:end="379:19">0x22111200</literal></expr>:</case>

        <expr_stmt pos:start="381:9" pos:end="381:84"><expr pos:start="381:9" pos:end="381:83"><name pos:start="381:9" pos:end="381:25"><name pos:start="381:9" pos:end="381:9">s</name><operator pos:start="381:10" pos:end="381:11">-&gt;</operator><name pos:start="381:12" pos:end="381:16">avctx</name><operator pos:start="381:17" pos:end="381:18">-&gt;</operator><name pos:start="381:19" pos:end="381:25">pix_fmt</name></name> <operator pos:start="381:27" pos:end="381:27">=</operator> <ternary pos:start="381:29" pos:end="381:83"><condition pos:start="381:29" pos:end="381:42"><expr pos:start="381:29" pos:end="381:40"><name pos:start="381:29" pos:end="381:40"><name pos:start="381:29" pos:end="381:29">s</name><operator pos:start="381:30" pos:end="381:31">-&gt;</operator><name pos:start="381:32" pos:end="381:40">cs_itu601</name></name></expr> ?</condition><then pos:start="381:44" pos:end="381:61"> <expr pos:start="381:44" pos:end="381:61"><name pos:start="381:44" pos:end="381:61">AV_PIX_FMT_YUV422P</name></expr> </then><else pos:start="381:63" pos:end="381:83">: <expr pos:start="381:65" pos:end="381:83"><name pos:start="381:65" pos:end="381:83">AV_PIX_FMT_YUVJ422P</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="383:9" pos:end="383:83"><expr pos:start="383:9" pos:end="383:82"><name pos:start="383:9" pos:end="383:29"><name pos:start="383:9" pos:end="383:9">s</name><operator pos:start="383:10" pos:end="383:11">-&gt;</operator><name pos:start="383:12" pos:end="383:16">avctx</name><operator pos:start="383:17" pos:end="383:18">-&gt;</operator><name pos:start="383:19" pos:end="383:29">color_range</name></name> <operator pos:start="383:31" pos:end="383:31">=</operator> <ternary pos:start="383:33" pos:end="383:82"><condition pos:start="383:33" pos:end="383:46"><expr pos:start="383:33" pos:end="383:44"><name pos:start="383:33" pos:end="383:44"><name pos:start="383:33" pos:end="383:33">s</name><operator pos:start="383:34" pos:end="383:35">-&gt;</operator><name pos:start="383:36" pos:end="383:44">cs_itu601</name></name></expr> ?</condition><then pos:start="383:48" pos:end="383:63"> <expr pos:start="383:48" pos:end="383:63"><name pos:start="383:48" pos:end="383:63">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="383:65" pos:end="383:82">: <expr pos:start="383:67" pos:end="383:82"><name pos:start="383:67" pos:end="383:82">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="385:9" pos:end="385:54"><expr pos:start="385:9" pos:end="385:53"><name pos:start="385:9" pos:end="385:20"><name pos:start="385:9" pos:end="385:9">s</name><operator pos:start="385:10" pos:end="385:11">-&gt;</operator><name pos:start="385:12" pos:end="385:20">upscale_v</name></name> <operator pos:start="385:22" pos:end="385:22">=</operator> <operator pos:start="385:24" pos:end="385:24">(</operator><name pos:start="385:25" pos:end="385:34">pix_fmt_id</name> <operator pos:start="385:36" pos:end="385:37">==</operator> <literal type="number" pos:start="385:39" pos:end="385:48">0x22121100</literal><operator pos:start="385:49" pos:end="385:49">)</operator> <operator pos:start="385:51" pos:end="385:51">+</operator> <literal type="number" pos:start="385:53" pos:end="385:53">1</literal></expr>;</expr_stmt>

        <break pos:start="387:9" pos:end="387:14">break;</break>

    <case pos:start="389:5" pos:end="389:20">case <expr pos:start="389:10" pos:end="389:19"><literal type="number" pos:start="389:10" pos:end="389:19">0x22111100</literal></expr>:</case>

        <expr_stmt pos:start="391:9" pos:end="391:84"><expr pos:start="391:9" pos:end="391:83"><name pos:start="391:9" pos:end="391:25"><name pos:start="391:9" pos:end="391:9">s</name><operator pos:start="391:10" pos:end="391:11">-&gt;</operator><name pos:start="391:12" pos:end="391:16">avctx</name><operator pos:start="391:17" pos:end="391:18">-&gt;</operator><name pos:start="391:19" pos:end="391:25">pix_fmt</name></name> <operator pos:start="391:27" pos:end="391:27">=</operator> <ternary pos:start="391:29" pos:end="391:83"><condition pos:start="391:29" pos:end="391:42"><expr pos:start="391:29" pos:end="391:40"><name pos:start="391:29" pos:end="391:40"><name pos:start="391:29" pos:end="391:29">s</name><operator pos:start="391:30" pos:end="391:31">-&gt;</operator><name pos:start="391:32" pos:end="391:40">cs_itu601</name></name></expr> ?</condition><then pos:start="391:44" pos:end="391:61"> <expr pos:start="391:44" pos:end="391:61"><name pos:start="391:44" pos:end="391:61">AV_PIX_FMT_YUV420P</name></expr> </then><else pos:start="391:63" pos:end="391:83">: <expr pos:start="391:65" pos:end="391:83"><name pos:start="391:65" pos:end="391:83">AV_PIX_FMT_YUVJ420P</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="393:9" pos:end="393:83"><expr pos:start="393:9" pos:end="393:82"><name pos:start="393:9" pos:end="393:29"><name pos:start="393:9" pos:end="393:9">s</name><operator pos:start="393:10" pos:end="393:11">-&gt;</operator><name pos:start="393:12" pos:end="393:16">avctx</name><operator pos:start="393:17" pos:end="393:18">-&gt;</operator><name pos:start="393:19" pos:end="393:29">color_range</name></name> <operator pos:start="393:31" pos:end="393:31">=</operator> <ternary pos:start="393:33" pos:end="393:82"><condition pos:start="393:33" pos:end="393:46"><expr pos:start="393:33" pos:end="393:44"><name pos:start="393:33" pos:end="393:44"><name pos:start="393:33" pos:end="393:33">s</name><operator pos:start="393:34" pos:end="393:35">-&gt;</operator><name pos:start="393:36" pos:end="393:44">cs_itu601</name></name></expr> ?</condition><then pos:start="393:48" pos:end="393:63"> <expr pos:start="393:48" pos:end="393:63"><name pos:start="393:48" pos:end="393:63">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="393:65" pos:end="393:82">: <expr pos:start="393:67" pos:end="393:82"><name pos:start="393:67" pos:end="393:82">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="395:9" pos:end="395:14">break;</break>

    <default pos:start="397:5" pos:end="397:12">default:</default>

        <expr_stmt pos:start="399:9" pos:end="399:84"><expr pos:start="399:9" pos:end="399:83"><call pos:start="399:9" pos:end="399:83"><name pos:start="399:9" pos:end="399:14">av_log</name><argument_list pos:start="399:15" pos:end="399:83">(<argument pos:start="399:16" pos:end="399:23"><expr pos:start="399:16" pos:end="399:23"><name pos:start="399:16" pos:end="399:23"><name pos:start="399:16" pos:end="399:16">s</name><operator pos:start="399:17" pos:end="399:18">-&gt;</operator><name pos:start="399:19" pos:end="399:23">avctx</name></name></expr></argument>, <argument pos:start="399:26" pos:end="399:37"><expr pos:start="399:26" pos:end="399:37"><name pos:start="399:26" pos:end="399:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="399:40" pos:end="399:70"><expr pos:start="399:40" pos:end="399:70"><literal type="string" pos:start="399:40" pos:end="399:70">"Unhandled pixel format 0x%x\n"</literal></expr></argument>, <argument pos:start="399:73" pos:end="399:82"><expr pos:start="399:73" pos:end="399:82"><name pos:start="399:73" pos:end="399:82">pix_fmt_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="401:9" pos:end="401:36">return <expr pos:start="401:16" pos:end="401:35"><name pos:start="401:16" pos:end="401:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></switch>

    <if_stmt pos:start="405:5" pos:end="411:5"><if pos:start="405:5" pos:end="411:5">if <condition pos:start="405:8" pos:end="405:59">(<expr pos:start="405:9" pos:end="405:58"><operator pos:start="405:9" pos:end="405:9">(</operator><name pos:start="405:10" pos:end="405:21"><name pos:start="405:10" pos:end="405:10">s</name><operator pos:start="405:11" pos:end="405:12">-&gt;</operator><name pos:start="405:13" pos:end="405:21">upscale_h</name></name> <operator pos:start="405:23" pos:end="405:24">||</operator> <name pos:start="405:26" pos:end="405:37"><name pos:start="405:26" pos:end="405:26">s</name><operator pos:start="405:27" pos:end="405:28">-&gt;</operator><name pos:start="405:29" pos:end="405:37">upscale_v</name></name><operator pos:start="405:38" pos:end="405:38">)</operator> <operator pos:start="405:40" pos:end="405:41">&amp;&amp;</operator> <name pos:start="405:43" pos:end="405:58"><name pos:start="405:43" pos:end="405:43">s</name><operator pos:start="405:44" pos:end="405:45">-&gt;</operator><name pos:start="405:46" pos:end="405:50">avctx</name><operator pos:start="405:51" pos:end="405:52">-&gt;</operator><name pos:start="405:53" pos:end="405:58">lowres</name></name></expr>)</condition> <block pos:start="405:61" pos:end="411:5">{<block_content pos:start="407:9" pos:end="409:36">

        <expr_stmt pos:start="407:9" pos:end="407:87"><expr pos:start="407:9" pos:end="407:86"><call pos:start="407:9" pos:end="407:86"><name pos:start="407:9" pos:end="407:14">av_log</name><argument_list pos:start="407:15" pos:end="407:86">(<argument pos:start="407:16" pos:end="407:23"><expr pos:start="407:16" pos:end="407:23"><name pos:start="407:16" pos:end="407:23"><name pos:start="407:16" pos:end="407:16">s</name><operator pos:start="407:17" pos:end="407:18">-&gt;</operator><name pos:start="407:19" pos:end="407:23">avctx</name></name></expr></argument>, <argument pos:start="407:26" pos:end="407:37"><expr pos:start="407:26" pos:end="407:37"><name pos:start="407:26" pos:end="407:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="407:40" pos:end="407:85"><expr pos:start="407:40" pos:end="407:85"><literal type="string" pos:start="407:40" pos:end="407:85">"lowres not supported for weird subsampling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="409:9" pos:end="409:36">return <expr pos:start="409:16" pos:end="409:35"><name pos:start="409:16" pos:end="409:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="413:5" pos:end="429:5"><if pos:start="413:5" pos:end="429:5">if <condition pos:start="413:8" pos:end="413:14">(<expr pos:start="413:9" pos:end="413:13"><name pos:start="413:9" pos:end="413:13"><name pos:start="413:9" pos:end="413:9">s</name><operator pos:start="413:10" pos:end="413:11">-&gt;</operator><name pos:start="413:12" pos:end="413:13">ls</name></name></expr>)</condition> <block pos:start="413:16" pos:end="429:5">{<block_content pos:start="415:9" pos:end="427:50">

        <expr_stmt pos:start="415:9" pos:end="415:40"><expr pos:start="415:9" pos:end="415:39"><name pos:start="415:9" pos:end="415:20"><name pos:start="415:9" pos:end="415:9">s</name><operator pos:start="415:10" pos:end="415:11">-&gt;</operator><name pos:start="415:12" pos:end="415:20">upscale_h</name></name> <operator pos:start="415:22" pos:end="415:22">=</operator> <name pos:start="415:24" pos:end="415:35"><name pos:start="415:24" pos:end="415:24">s</name><operator pos:start="415:25" pos:end="415:26">-&gt;</operator><name pos:start="415:27" pos:end="415:35">upscale_v</name></name> <operator pos:start="415:37" pos:end="415:37">=</operator> <literal type="number" pos:start="415:39" pos:end="415:39">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="417:9" pos:end="427:50"><if pos:start="417:9" pos:end="419:49">if <condition pos:start="417:12" pos:end="417:33">(<expr pos:start="417:13" pos:end="417:32"><name pos:start="417:13" pos:end="417:28"><name pos:start="417:13" pos:end="417:13">s</name><operator pos:start="417:14" pos:end="417:15">-&gt;</operator><name pos:start="417:16" pos:end="417:28">nb_components</name></name> <operator pos:start="417:30" pos:end="417:30">&gt;</operator> <literal type="number" pos:start="417:32" pos:end="417:32">1</literal></expr>)</condition><block type="pseudo" pos:start="419:13" pos:end="419:49"><block_content pos:start="419:13" pos:end="419:49">

            <expr_stmt pos:start="419:13" pos:end="419:49"><expr pos:start="419:13" pos:end="419:48"><name pos:start="419:13" pos:end="419:29"><name pos:start="419:13" pos:end="419:13">s</name><operator pos:start="419:14" pos:end="419:15">-&gt;</operator><name pos:start="419:16" pos:end="419:20">avctx</name><operator pos:start="419:21" pos:end="419:22">-&gt;</operator><name pos:start="419:23" pos:end="419:29">pix_fmt</name></name> <operator pos:start="419:31" pos:end="419:31">=</operator> <name pos:start="419:33" pos:end="419:48">AV_PIX_FMT_RGB24</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="421:9" pos:end="423:49">else if <condition pos:start="421:17" pos:end="421:30">(<expr pos:start="421:18" pos:end="421:29"><name pos:start="421:18" pos:end="421:24"><name pos:start="421:18" pos:end="421:18">s</name><operator pos:start="421:19" pos:end="421:20">-&gt;</operator><name pos:start="421:21" pos:end="421:24">bits</name></name> <operator pos:start="421:26" pos:end="421:27">&lt;=</operator> <literal type="number" pos:start="421:29" pos:end="421:29">8</literal></expr>)</condition><block type="pseudo" pos:start="423:13" pos:end="423:49"><block_content pos:start="423:13" pos:end="423:49">

            <expr_stmt pos:start="423:13" pos:end="423:49"><expr pos:start="423:13" pos:end="423:48"><name pos:start="423:13" pos:end="423:29"><name pos:start="423:13" pos:end="423:13">s</name><operator pos:start="423:14" pos:end="423:15">-&gt;</operator><name pos:start="423:16" pos:end="423:20">avctx</name><operator pos:start="423:21" pos:end="423:22">-&gt;</operator><name pos:start="423:23" pos:end="423:29">pix_fmt</name></name> <operator pos:start="423:31" pos:end="423:31">=</operator> <name pos:start="423:33" pos:end="423:48">AV_PIX_FMT_GRAY8</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="425:9" pos:end="427:50">else<block type="pseudo" pos:start="427:13" pos:end="427:50"><block_content pos:start="427:13" pos:end="427:50">

            <expr_stmt pos:start="427:13" pos:end="427:50"><expr pos:start="427:13" pos:end="427:49"><name pos:start="427:13" pos:end="427:29"><name pos:start="427:13" pos:end="427:13">s</name><operator pos:start="427:14" pos:end="427:15">-&gt;</operator><name pos:start="427:16" pos:end="427:20">avctx</name><operator pos:start="427:21" pos:end="427:22">-&gt;</operator><name pos:start="427:23" pos:end="427:29">pix_fmt</name></name> <operator pos:start="427:31" pos:end="427:31">=</operator> <name pos:start="427:33" pos:end="427:49">AV_PIX_FMT_GRAY16</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="433:5" pos:end="435:59"><if pos:start="433:5" pos:end="435:59">if <condition pos:start="433:8" pos:end="433:32">(<expr pos:start="433:9" pos:end="433:31"><name pos:start="433:9" pos:end="433:31"><name pos:start="433:9" pos:end="433:9">s</name><operator pos:start="433:10" pos:end="433:11">-&gt;</operator><name pos:start="433:12" pos:end="433:22">picture_ptr</name><operator pos:start="433:23" pos:end="433:24">-&gt;</operator><name pos:start="433:25" pos:end="433:28">data</name><index pos:start="433:29" pos:end="433:31">[<expr pos:start="433:30" pos:end="433:30"><literal type="number" pos:start="433:30" pos:end="433:30">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="435:9" pos:end="435:59"><block_content pos:start="435:9" pos:end="435:59">

        <expr_stmt pos:start="435:9" pos:end="435:59"><expr pos:start="435:9" pos:end="435:58"><call pos:start="435:9" pos:end="435:58"><name pos:start="435:9" pos:end="435:32"><name pos:start="435:9" pos:end="435:9">s</name><operator pos:start="435:10" pos:end="435:11">-&gt;</operator><name pos:start="435:12" pos:end="435:16">avctx</name><operator pos:start="435:17" pos:end="435:18">-&gt;</operator><name pos:start="435:19" pos:end="435:32">release_buffer</name></name><argument_list pos:start="435:33" pos:end="435:58">(<argument pos:start="435:34" pos:end="435:41"><expr pos:start="435:34" pos:end="435:41"><name pos:start="435:34" pos:end="435:41"><name pos:start="435:34" pos:end="435:34">s</name><operator pos:start="435:35" pos:end="435:36">-&gt;</operator><name pos:start="435:37" pos:end="435:41">avctx</name></name></expr></argument>, <argument pos:start="435:44" pos:end="435:57"><expr pos:start="435:44" pos:end="435:57"><name pos:start="435:44" pos:end="435:57"><name pos:start="435:44" pos:end="435:44">s</name><operator pos:start="435:45" pos:end="435:46">-&gt;</operator><name pos:start="435:47" pos:end="435:57">picture_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="439:5" pos:end="445:5"><if pos:start="439:5" pos:end="445:5">if <condition pos:start="439:8" pos:end="439:59">(<expr pos:start="439:9" pos:end="439:58"><call pos:start="439:9" pos:end="439:54"><name pos:start="439:9" pos:end="439:28"><name pos:start="439:9" pos:end="439:9">s</name><operator pos:start="439:10" pos:end="439:11">-&gt;</operator><name pos:start="439:12" pos:end="439:16">avctx</name><operator pos:start="439:17" pos:end="439:18">-&gt;</operator><name pos:start="439:19" pos:end="439:28">get_buffer</name></name><argument_list pos:start="439:29" pos:end="439:54">(<argument pos:start="439:30" pos:end="439:37"><expr pos:start="439:30" pos:end="439:37"><name pos:start="439:30" pos:end="439:37"><name pos:start="439:30" pos:end="439:30">s</name><operator pos:start="439:31" pos:end="439:32">-&gt;</operator><name pos:start="439:33" pos:end="439:37">avctx</name></name></expr></argument>, <argument pos:start="439:40" pos:end="439:53"><expr pos:start="439:40" pos:end="439:53"><name pos:start="439:40" pos:end="439:53"><name pos:start="439:40" pos:end="439:40">s</name><operator pos:start="439:41" pos:end="439:42">-&gt;</operator><name pos:start="439:43" pos:end="439:53">picture_ptr</name></name></expr></argument>)</argument_list></call> <operator pos:start="439:56" pos:end="439:56">&lt;</operator> <literal type="number" pos:start="439:58" pos:end="439:58">0</literal></expr>)</condition> <block pos:start="439:61" pos:end="445:5">{<block_content pos:start="441:9" pos:end="443:18">

        <expr_stmt pos:start="441:9" pos:end="441:64"><expr pos:start="441:9" pos:end="441:63"><call pos:start="441:9" pos:end="441:63"><name pos:start="441:9" pos:end="441:14">av_log</name><argument_list pos:start="441:15" pos:end="441:63">(<argument pos:start="441:16" pos:end="441:23"><expr pos:start="441:16" pos:end="441:23"><name pos:start="441:16" pos:end="441:23"><name pos:start="441:16" pos:end="441:16">s</name><operator pos:start="441:17" pos:end="441:18">-&gt;</operator><name pos:start="441:19" pos:end="441:23">avctx</name></name></expr></argument>, <argument pos:start="441:26" pos:end="441:37"><expr pos:start="441:26" pos:end="441:37"><name pos:start="441:26" pos:end="441:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="441:40" pos:end="441:62"><expr pos:start="441:40" pos:end="441:62"><literal type="string" pos:start="441:40" pos:end="441:62">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="443:9" pos:end="443:18">return <expr pos:start="443:16" pos:end="443:17"><operator pos:start="443:16" pos:end="443:16">-</operator><literal type="number" pos:start="443:17" pos:end="443:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="447:5" pos:end="447:50"><expr pos:start="447:5" pos:end="447:49"><name pos:start="447:5" pos:end="447:29"><name pos:start="447:5" pos:end="447:5">s</name><operator pos:start="447:6" pos:end="447:7">-&gt;</operator><name pos:start="447:8" pos:end="447:18">picture_ptr</name><operator pos:start="447:19" pos:end="447:20">-&gt;</operator><name pos:start="447:21" pos:end="447:29">pict_type</name></name> <operator pos:start="447:31" pos:end="447:31">=</operator> <name pos:start="447:33" pos:end="447:49">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="449:5" pos:end="449:34"><expr pos:start="449:5" pos:end="449:33"><name pos:start="449:5" pos:end="449:29"><name pos:start="449:5" pos:end="449:5">s</name><operator pos:start="449:6" pos:end="449:7">-&gt;</operator><name pos:start="449:8" pos:end="449:18">picture_ptr</name><operator pos:start="449:19" pos:end="449:20">-&gt;</operator><name pos:start="449:21" pos:end="449:29">key_frame</name></name> <operator pos:start="449:31" pos:end="449:31">=</operator> <literal type="number" pos:start="449:33" pos:end="449:33">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="451:5" pos:end="451:34"><expr pos:start="451:5" pos:end="451:33"><name pos:start="451:5" pos:end="451:18"><name pos:start="451:5" pos:end="451:5">s</name><operator pos:start="451:6" pos:end="451:7">-&gt;</operator><name pos:start="451:8" pos:end="451:18">got_picture</name></name>            <operator pos:start="451:31" pos:end="451:31">=</operator> <literal type="number" pos:start="451:33" pos:end="451:33">1</literal></expr>;</expr_stmt>



    <for pos:start="455:5" pos:end="457:70">for <control pos:start="455:9" pos:end="455:27">(<init pos:start="455:10" pos:end="455:15"><expr pos:start="455:10" pos:end="455:14"><name pos:start="455:10" pos:end="455:10">i</name> <operator pos:start="455:12" pos:end="455:12">=</operator> <literal type="number" pos:start="455:14" pos:end="455:14">0</literal></expr>;</init> <condition pos:start="455:17" pos:end="455:22"><expr pos:start="455:17" pos:end="455:21"><name pos:start="455:17" pos:end="455:17">i</name> <operator pos:start="455:19" pos:end="455:19">&lt;</operator> <literal type="number" pos:start="455:21" pos:end="455:21">3</literal></expr>;</condition> <incr pos:start="455:24" pos:end="455:26"><expr pos:start="455:24" pos:end="455:26"><name pos:start="455:24" pos:end="455:24">i</name><operator pos:start="455:25" pos:end="455:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="457:9" pos:end="457:70"><block_content pos:start="457:9" pos:end="457:70">

        <expr_stmt pos:start="457:9" pos:end="457:70"><expr pos:start="457:9" pos:end="457:69"><name pos:start="457:9" pos:end="457:22"><name pos:start="457:9" pos:end="457:9">s</name><operator pos:start="457:10" pos:end="457:11">-&gt;</operator><name pos:start="457:12" pos:end="457:19">linesize</name><index pos:start="457:20" pos:end="457:22">[<expr pos:start="457:21" pos:end="457:21"><name pos:start="457:21" pos:end="457:21">i</name></expr>]</index></name> <operator pos:start="457:24" pos:end="457:24">=</operator> <name pos:start="457:26" pos:end="457:52"><name pos:start="457:26" pos:end="457:26">s</name><operator pos:start="457:27" pos:end="457:28">-&gt;</operator><name pos:start="457:29" pos:end="457:39">picture_ptr</name><operator pos:start="457:40" pos:end="457:41">-&gt;</operator><name pos:start="457:42" pos:end="457:49">linesize</name><index pos:start="457:50" pos:end="457:52">[<expr pos:start="457:51" pos:end="457:51"><name pos:start="457:51" pos:end="457:51">i</name></expr>]</index></name> <operator pos:start="457:54" pos:end="457:55">&lt;&lt;</operator> <name pos:start="457:57" pos:end="457:69"><name pos:start="457:57" pos:end="457:57">s</name><operator pos:start="457:58" pos:end="457:59">-&gt;</operator><name pos:start="457:60" pos:end="457:69">interlaced</name></name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="461:5" pos:end="465:45"><expr pos:start="461:5" pos:end="465:44"><call pos:start="461:5" pos:end="465:44"><name pos:start="461:5" pos:end="461:11">av_dlog</name><argument_list pos:start="461:12" pos:end="465:44">(<argument pos:start="461:13" pos:end="461:20"><expr pos:start="461:13" pos:end="461:20"><name pos:start="461:13" pos:end="461:20"><name pos:start="461:13" pos:end="461:13">s</name><operator pos:start="461:14" pos:end="461:15">-&gt;</operator><name pos:start="461:16" pos:end="461:20">avctx</name></name></expr></argument>, <argument pos:start="461:23" pos:end="461:43"><expr pos:start="461:23" pos:end="461:43"><literal type="string" pos:start="461:23" pos:end="461:43">"%d %d %d %d %d %d\n"</literal></expr></argument>,

            <argument pos:start="463:13" pos:end="463:20"><expr pos:start="463:13" pos:end="463:20"><name pos:start="463:13" pos:end="463:20"><name pos:start="463:13" pos:end="463:13">s</name><operator pos:start="463:14" pos:end="463:15">-&gt;</operator><name pos:start="463:16" pos:end="463:20">width</name></name></expr></argument>, <argument pos:start="463:23" pos:end="463:31"><expr pos:start="463:23" pos:end="463:31"><name pos:start="463:23" pos:end="463:31"><name pos:start="463:23" pos:end="463:23">s</name><operator pos:start="463:24" pos:end="463:25">-&gt;</operator><name pos:start="463:26" pos:end="463:31">height</name></name></expr></argument>, <argument pos:start="463:34" pos:end="463:47"><expr pos:start="463:34" pos:end="463:47"><name pos:start="463:34" pos:end="463:47"><name pos:start="463:34" pos:end="463:34">s</name><operator pos:start="463:35" pos:end="463:36">-&gt;</operator><name pos:start="463:37" pos:end="463:44">linesize</name><index pos:start="463:45" pos:end="463:47">[<expr pos:start="463:46" pos:end="463:46"><literal type="number" pos:start="463:46" pos:end="463:46">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="463:50" pos:end="463:63"><expr pos:start="463:50" pos:end="463:63"><name pos:start="463:50" pos:end="463:63"><name pos:start="463:50" pos:end="463:50">s</name><operator pos:start="463:51" pos:end="463:52">-&gt;</operator><name pos:start="463:53" pos:end="463:60">linesize</name><index pos:start="463:61" pos:end="463:63">[<expr pos:start="463:62" pos:end="463:62"><literal type="number" pos:start="463:62" pos:end="463:62">1</literal></expr>]</index></name></expr></argument>,

            <argument pos:start="465:13" pos:end="465:25"><expr pos:start="465:13" pos:end="465:25"><name pos:start="465:13" pos:end="465:25"><name pos:start="465:13" pos:end="465:13">s</name><operator pos:start="465:14" pos:end="465:15">-&gt;</operator><name pos:start="465:16" pos:end="465:25">interlaced</name></name></expr></argument>, <argument pos:start="465:28" pos:end="465:43"><expr pos:start="465:28" pos:end="465:43"><name pos:start="465:28" pos:end="465:43"><name pos:start="465:28" pos:end="465:28">s</name><operator pos:start="465:29" pos:end="465:30">-&gt;</operator><name pos:start="465:31" pos:end="465:35">avctx</name><operator pos:start="465:36" pos:end="465:37">-&gt;</operator><name pos:start="465:38" pos:end="465:43">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="469:5" pos:end="471:86"><if pos:start="469:5" pos:end="471:86">if <condition pos:start="469:8" pos:end="469:41">(<expr pos:start="469:9" pos:end="469:40"><name pos:start="469:9" pos:end="469:11">len</name> <operator pos:start="469:13" pos:end="469:14">!=</operator> <operator pos:start="469:16" pos:end="469:16">(</operator><literal type="number" pos:start="469:17" pos:end="469:19">8</literal> <operator pos:start="469:19" pos:end="469:19">+</operator> <operator pos:start="469:21" pos:end="469:21">(</operator><literal type="number" pos:start="469:22" pos:end="469:22">3</literal> <operator pos:start="469:24" pos:end="469:24">*</operator> <name pos:start="469:26" pos:end="469:38">nb_components</name><operator pos:start="469:39" pos:end="469:39">)</operator><operator pos:start="469:40" pos:end="469:40">)</operator></expr>)</condition><block type="pseudo" pos:start="471:9" pos:end="471:86"><block_content pos:start="471:9" pos:end="471:86">

        <expr_stmt pos:start="471:9" pos:end="471:86"><expr pos:start="471:9" pos:end="471:85"><call pos:start="471:9" pos:end="471:85"><name pos:start="471:9" pos:end="471:14">av_log</name><argument_list pos:start="471:15" pos:end="471:85">(<argument pos:start="471:16" pos:end="471:23"><expr pos:start="471:16" pos:end="471:23"><name pos:start="471:16" pos:end="471:23"><name pos:start="471:16" pos:end="471:16">s</name><operator pos:start="471:17" pos:end="471:18">-&gt;</operator><name pos:start="471:19" pos:end="471:23">avctx</name></name></expr></argument>, <argument pos:start="471:26" pos:end="471:37"><expr pos:start="471:26" pos:end="471:37"><name pos:start="471:26" pos:end="471:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="471:40" pos:end="471:79"><expr pos:start="471:40" pos:end="471:79"><literal type="string" pos:start="471:40" pos:end="471:79">"decode_sof0: error, len(%d) mismatch\n"</literal></expr></argument>, <argument pos:start="471:82" pos:end="471:84"><expr pos:start="471:82" pos:end="471:84"><name pos:start="471:82" pos:end="471:84">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="477:5" pos:end="477:79">/* totally blank picture as progressive JPEG will only add details to it */</comment>

    <if_stmt pos:start="479:5" pos:end="503:5"><if pos:start="479:5" pos:end="503:5">if <condition pos:start="479:8" pos:end="479:23">(<expr pos:start="479:9" pos:end="479:22"><name pos:start="479:9" pos:end="479:22"><name pos:start="479:9" pos:end="479:9">s</name><operator pos:start="479:10" pos:end="479:11">-&gt;</operator><name pos:start="479:12" pos:end="479:22">progressive</name></name></expr>)</condition> <block pos:start="479:25" pos:end="503:5">{<block_content pos:start="481:9" pos:end="501:64">

        <decl_stmt pos:start="481:9" pos:end="481:62"><decl pos:start="481:9" pos:end="481:61"><type pos:start="481:9" pos:end="481:11"><name pos:start="481:9" pos:end="481:11">int</name></type> <name pos:start="481:13" pos:end="481:14">bw</name> <init pos:start="481:16" pos:end="481:61">= <expr pos:start="481:18" pos:end="481:61"><operator pos:start="481:18" pos:end="481:18">(</operator><name pos:start="481:19" pos:end="481:23">width</name>  <operator pos:start="481:26" pos:end="481:26">+</operator> <name pos:start="481:28" pos:end="481:35"><name pos:start="481:28" pos:end="481:28">s</name><operator pos:start="481:29" pos:end="481:30">-&gt;</operator><name pos:start="481:31" pos:end="481:35">h_max</name></name> <operator pos:start="481:37" pos:end="481:37">*</operator> <literal type="number" pos:start="481:39" pos:end="481:41">8</literal> <operator pos:start="481:41" pos:end="481:41">-</operator> <literal type="number" pos:start="481:43" pos:end="481:43">1</literal><operator pos:start="481:44" pos:end="481:44">)</operator> <operator pos:start="481:46" pos:end="481:46">/</operator> <operator pos:start="481:48" pos:end="481:48">(</operator><name pos:start="481:49" pos:end="481:56"><name pos:start="481:49" pos:end="481:49">s</name><operator pos:start="481:50" pos:end="481:51">-&gt;</operator><name pos:start="481:52" pos:end="481:56">h_max</name></name> <operator pos:start="481:58" pos:end="481:58">*</operator> <literal type="number" pos:start="481:60" pos:end="481:60">8</literal><operator pos:start="481:61" pos:end="481:61">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="483:9" pos:end="483:62"><decl pos:start="483:9" pos:end="483:61"><type pos:start="483:9" pos:end="483:11"><name pos:start="483:9" pos:end="483:11">int</name></type> <name pos:start="483:13" pos:end="483:14">bh</name> <init pos:start="483:16" pos:end="483:61">= <expr pos:start="483:18" pos:end="483:61"><operator pos:start="483:18" pos:end="483:18">(</operator><name pos:start="483:19" pos:end="483:24">height</name> <operator pos:start="483:26" pos:end="483:26">+</operator> <name pos:start="483:28" pos:end="483:35"><name pos:start="483:28" pos:end="483:28">s</name><operator pos:start="483:29" pos:end="483:30">-&gt;</operator><name pos:start="483:31" pos:end="483:35">v_max</name></name> <operator pos:start="483:37" pos:end="483:37">*</operator> <literal type="number" pos:start="483:39" pos:end="483:41">8</literal> <operator pos:start="483:41" pos:end="483:41">-</operator> <literal type="number" pos:start="483:43" pos:end="483:43">1</literal><operator pos:start="483:44" pos:end="483:44">)</operator> <operator pos:start="483:46" pos:end="483:46">/</operator> <operator pos:start="483:48" pos:end="483:48">(</operator><name pos:start="483:49" pos:end="483:56"><name pos:start="483:49" pos:end="483:49">s</name><operator pos:start="483:50" pos:end="483:51">-&gt;</operator><name pos:start="483:52" pos:end="483:56">v_max</name></name> <operator pos:start="483:58" pos:end="483:58">*</operator> <literal type="number" pos:start="483:60" pos:end="483:60">8</literal><operator pos:start="483:61" pos:end="483:61">)</operator></expr></init></decl>;</decl_stmt>

        <for pos:start="485:9" pos:end="499:9">for <control pos:start="485:13" pos:end="485:46">(<init pos:start="485:14" pos:end="485:19"><expr pos:start="485:14" pos:end="485:18"><name pos:start="485:14" pos:end="485:14">i</name> <operator pos:start="485:16" pos:end="485:16">=</operator> <literal type="number" pos:start="485:18" pos:end="485:18">0</literal></expr>;</init> <condition pos:start="485:21" pos:end="485:41"><expr pos:start="485:21" pos:end="485:40"><name pos:start="485:21" pos:end="485:21">i</name> <operator pos:start="485:23" pos:end="485:23">&lt;</operator> <name pos:start="485:25" pos:end="485:40"><name pos:start="485:25" pos:end="485:25">s</name><operator pos:start="485:26" pos:end="485:27">-&gt;</operator><name pos:start="485:28" pos:end="485:40">nb_components</name></name></expr>;</condition> <incr pos:start="485:43" pos:end="485:45"><expr pos:start="485:43" pos:end="485:45"><name pos:start="485:43" pos:end="485:43">i</name><operator pos:start="485:44" pos:end="485:45">++</operator></expr></incr>)</control> <block pos:start="485:48" pos:end="499:9">{<block_content pos:start="487:13" pos:end="497:52">

            <decl_stmt pos:start="487:13" pos:end="487:63"><decl pos:start="487:13" pos:end="487:62"><type pos:start="487:13" pos:end="487:15"><name pos:start="487:13" pos:end="487:15">int</name></type> <name pos:start="487:17" pos:end="487:20">size</name> <init pos:start="487:22" pos:end="487:62">= <expr pos:start="487:24" pos:end="487:62"><name pos:start="487:24" pos:end="487:25">bw</name> <operator pos:start="487:27" pos:end="487:27">*</operator> <name pos:start="487:29" pos:end="487:30">bh</name> <operator pos:start="487:32" pos:end="487:32">*</operator> <name pos:start="487:34" pos:end="487:46"><name pos:start="487:34" pos:end="487:34">s</name><operator pos:start="487:35" pos:end="487:36">-&gt;</operator><name pos:start="487:37" pos:end="487:43">h_count</name><index pos:start="487:44" pos:end="487:46">[<expr pos:start="487:45" pos:end="487:45"><name pos:start="487:45" pos:end="487:45">i</name></expr>]</index></name> <operator pos:start="487:48" pos:end="487:48">*</operator> <name pos:start="487:50" pos:end="487:62"><name pos:start="487:50" pos:end="487:50">s</name><operator pos:start="487:51" pos:end="487:52">-&gt;</operator><name pos:start="487:53" pos:end="487:59">v_count</name><index pos:start="487:60" pos:end="487:62">[<expr pos:start="487:61" pos:end="487:61"><name pos:start="487:61" pos:end="487:61">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="489:13" pos:end="489:36"><expr pos:start="489:13" pos:end="489:35"><call pos:start="489:13" pos:end="489:35"><name pos:start="489:13" pos:end="489:20">av_freep</name><argument_list pos:start="489:21" pos:end="489:35">(<argument pos:start="489:22" pos:end="489:34"><expr pos:start="489:22" pos:end="489:34"><operator pos:start="489:22" pos:end="489:22">&amp;</operator><name pos:start="489:23" pos:end="489:34"><name pos:start="489:23" pos:end="489:23">s</name><operator pos:start="489:24" pos:end="489:25">-&gt;</operator><name pos:start="489:26" pos:end="489:31">blocks</name><index pos:start="489:32" pos:end="489:34">[<expr pos:start="489:33" pos:end="489:33"><name pos:start="489:33" pos:end="489:33">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="491:13" pos:end="491:38"><expr pos:start="491:13" pos:end="491:37"><call pos:start="491:13" pos:end="491:37"><name pos:start="491:13" pos:end="491:20">av_freep</name><argument_list pos:start="491:21" pos:end="491:37">(<argument pos:start="491:22" pos:end="491:36"><expr pos:start="491:22" pos:end="491:36"><operator pos:start="491:22" pos:end="491:22">&amp;</operator><name pos:start="491:23" pos:end="491:36"><name pos:start="491:23" pos:end="491:23">s</name><operator pos:start="491:24" pos:end="491:25">-&gt;</operator><name pos:start="491:26" pos:end="491:33">last_nnz</name><index pos:start="491:34" pos:end="491:36">[<expr pos:start="491:35" pos:end="491:35"><name pos:start="491:35" pos:end="491:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="493:13" pos:end="493:71"><expr pos:start="493:13" pos:end="493:70"><name pos:start="493:13" pos:end="493:24"><name pos:start="493:13" pos:end="493:13">s</name><operator pos:start="493:14" pos:end="493:15">-&gt;</operator><name pos:start="493:16" pos:end="493:21">blocks</name><index pos:start="493:22" pos:end="493:24">[<expr pos:start="493:23" pos:end="493:23"><name pos:start="493:23" pos:end="493:23">i</name></expr>]</index></name>       <operator pos:start="493:32" pos:end="493:32">=</operator> <call pos:start="493:34" pos:end="493:70"><name pos:start="493:34" pos:end="493:42">av_malloc</name><argument_list pos:start="493:43" pos:end="493:70">(<argument pos:start="493:44" pos:end="493:69"><expr pos:start="493:44" pos:end="493:69"><name pos:start="493:44" pos:end="493:47">size</name> <operator pos:start="493:49" pos:end="493:49">*</operator> <sizeof pos:start="493:51" pos:end="493:69">sizeof<argument_list pos:start="493:57" pos:end="493:69">(<argument pos:start="493:58" pos:end="493:68"><expr pos:start="493:58" pos:end="493:68"><operator pos:start="493:58" pos:end="493:58">*</operator><operator pos:start="493:59" pos:end="493:59">*</operator><name pos:start="493:60" pos:end="493:68"><name pos:start="493:60" pos:end="493:60">s</name><operator pos:start="493:61" pos:end="493:62">-&gt;</operator><name pos:start="493:63" pos:end="493:68">blocks</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="495:13" pos:end="495:74"><expr pos:start="495:13" pos:end="495:73"><name pos:start="495:13" pos:end="495:26"><name pos:start="495:13" pos:end="495:13">s</name><operator pos:start="495:14" pos:end="495:15">-&gt;</operator><name pos:start="495:16" pos:end="495:23">last_nnz</name><index pos:start="495:24" pos:end="495:26">[<expr pos:start="495:25" pos:end="495:25"><name pos:start="495:25" pos:end="495:25">i</name></expr>]</index></name>     <operator pos:start="495:32" pos:end="495:32">=</operator> <call pos:start="495:34" pos:end="495:73"><name pos:start="495:34" pos:end="495:43">av_mallocz</name><argument_list pos:start="495:44" pos:end="495:73">(<argument pos:start="495:45" pos:end="495:72"><expr pos:start="495:45" pos:end="495:72"><name pos:start="495:45" pos:end="495:48">size</name> <operator pos:start="495:50" pos:end="495:50">*</operator> <sizeof pos:start="495:52" pos:end="495:72">sizeof<argument_list pos:start="495:58" pos:end="495:72">(<argument pos:start="495:59" pos:end="495:71"><expr pos:start="495:59" pos:end="495:71"><operator pos:start="495:59" pos:end="495:59">*</operator><operator pos:start="495:60" pos:end="495:60">*</operator><name pos:start="495:61" pos:end="495:71"><name pos:start="495:61" pos:end="495:61">s</name><operator pos:start="495:62" pos:end="495:63">-&gt;</operator><name pos:start="495:64" pos:end="495:71">last_nnz</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="497:13" pos:end="497:52"><expr pos:start="497:13" pos:end="497:51"><name pos:start="497:13" pos:end="497:30"><name pos:start="497:13" pos:end="497:13">s</name><operator pos:start="497:14" pos:end="497:15">-&gt;</operator><name pos:start="497:16" pos:end="497:27">block_stride</name><index pos:start="497:28" pos:end="497:30">[<expr pos:start="497:29" pos:end="497:29"><name pos:start="497:29" pos:end="497:29">i</name></expr>]</index></name> <operator pos:start="497:32" pos:end="497:32">=</operator> <name pos:start="497:34" pos:end="497:35">bw</name> <operator pos:start="497:37" pos:end="497:37">*</operator> <name pos:start="497:39" pos:end="497:51"><name pos:start="497:39" pos:end="497:39">s</name><operator pos:start="497:40" pos:end="497:41">-&gt;</operator><name pos:start="497:42" pos:end="497:48">h_count</name><index pos:start="497:49" pos:end="497:51">[<expr pos:start="497:50" pos:end="497:50"><name pos:start="497:50" pos:end="497:50">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="501:9" pos:end="501:64"><expr pos:start="501:9" pos:end="501:63"><call pos:start="501:9" pos:end="501:63"><name pos:start="501:9" pos:end="501:14">memset</name><argument_list pos:start="501:15" pos:end="501:63">(<argument pos:start="501:16" pos:end="501:32"><expr pos:start="501:16" pos:end="501:32"><name pos:start="501:16" pos:end="501:32"><name pos:start="501:16" pos:end="501:16">s</name><operator pos:start="501:17" pos:end="501:18">-&gt;</operator><name pos:start="501:19" pos:end="501:32">coefs_finished</name></name></expr></argument>, <argument pos:start="501:35" pos:end="501:35"><expr pos:start="501:35" pos:end="501:35"><literal type="number" pos:start="501:35" pos:end="501:35">0</literal></expr></argument>, <argument pos:start="501:38" pos:end="501:62"><expr pos:start="501:38" pos:end="501:62"><sizeof pos:start="501:38" pos:end="501:62">sizeof<argument_list pos:start="501:44" pos:end="501:62">(<argument pos:start="501:45" pos:end="501:61"><expr pos:start="501:45" pos:end="501:61"><name pos:start="501:45" pos:end="501:61"><name pos:start="501:45" pos:end="501:45">s</name><operator pos:start="501:46" pos:end="501:47">-&gt;</operator><name pos:start="501:48" pos:end="501:61">coefs_finished</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="505:5" pos:end="505:13">return <expr pos:start="505:12" pos:end="505:12"><literal type="number" pos:start="505:12" pos:end="505:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
