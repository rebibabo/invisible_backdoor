<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9254.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">glib_select_fill</name><parameter_list pos:start="1:29" pos:end="3:62">(<parameter pos:start="1:30" pos:end="1:40"><decl pos:start="1:30" pos:end="1:40"><type pos:start="1:30" pos:end="1:40"><name pos:start="1:30" pos:end="1:32">int</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">max_fd</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:48">fd_set</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">rfds</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:62">fd_set</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">wfds</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:41"><decl pos:start="3:30" pos:end="3:41"><type pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:35">fd_set</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:41">xfds</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:61"><decl pos:start="3:44" pos:end="3:61"><type pos:start="3:44" pos:end="3:61"><name pos:start="3:44" pos:end="3:57"><name pos:start="3:44" pos:end="3:49">struct</name> <name pos:start="3:51" pos:end="3:57">timeval</name></name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:61">tv</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:5">

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">GMainContext</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:25">context</name> <init pos:start="7:27" pos:end="7:52">= <expr pos:start="7:29" pos:end="7:52"><call pos:start="7:29" pos:end="7:52"><name pos:start="7:29" pos:end="7:50">g_main_context_default</name><argument_list pos:start="7:51" pos:end="7:52">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">timeout</name> <init pos:start="11:17" pos:end="11:19">= <expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr></init></decl>, <decl pos:start="11:22" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:32">cur_timeout</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:51"><expr pos:start="15:5" pos:end="15:50"><call pos:start="15:5" pos:end="15:50"><name pos:start="15:5" pos:end="15:26">g_main_context_prepare</name><argument_list pos:start="15:27" pos:end="15:50">(<argument pos:start="15:28" pos:end="15:34"><expr pos:start="15:28" pos:end="15:34"><name pos:start="15:28" pos:end="15:34">context</name></expr></argument>, <argument pos:start="15:37" pos:end="15:49"><expr pos:start="15:37" pos:end="15:49"><operator pos:start="15:37" pos:end="15:37">&amp;</operator><name pos:start="15:38" pos:end="15:49">max_priority</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="21:70"><expr pos:start="19:5" pos:end="21:69"><name pos:start="19:5" pos:end="19:14">n_poll_fds</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="21:69"><name pos:start="19:18" pos:end="19:37">g_main_context_query</name><argument_list pos:start="19:38" pos:end="21:69">(<argument pos:start="19:39" pos:end="19:45"><expr pos:start="19:39" pos:end="19:45"><name pos:start="19:39" pos:end="19:45">context</name></expr></argument>, <argument pos:start="19:48" pos:end="19:59"><expr pos:start="19:48" pos:end="19:59"><name pos:start="19:48" pos:end="19:59">max_priority</name></expr></argument>, <argument pos:start="19:62" pos:end="19:69"><expr pos:start="19:62" pos:end="19:69"><operator pos:start="19:62" pos:end="19:62">&amp;</operator><name pos:start="19:63" pos:end="19:69">timeout</name></expr></argument>,

                                      <argument pos:start="21:39" pos:end="21:46"><expr pos:start="21:39" pos:end="21:46"><name pos:start="21:39" pos:end="21:46">poll_fds</name></expr></argument>, <argument pos:start="21:49" pos:end="21:68"><expr pos:start="21:49" pos:end="21:68"><call pos:start="21:49" pos:end="21:68"><name pos:start="21:49" pos:end="21:58">ARRAY_SIZE</name><argument_list pos:start="21:59" pos:end="21:68">(<argument pos:start="21:60" pos:end="21:67"><expr pos:start="21:60" pos:end="21:67"><name pos:start="21:60" pos:end="21:67">poll_fds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:49"><expr pos:start="23:5" pos:end="23:48"><call pos:start="23:5" pos:end="23:48"><name pos:start="23:5" pos:end="23:12">g_assert</name><argument_list pos:start="23:13" pos:end="23:48">(<argument pos:start="23:14" pos:end="23:47"><expr pos:start="23:14" pos:end="23:47"><name pos:start="23:14" pos:end="23:23">n_poll_fds</name> <operator pos:start="23:25" pos:end="23:26">&lt;=</operator> <call pos:start="23:28" pos:end="23:47"><name pos:start="23:28" pos:end="23:37">ARRAY_SIZE</name><argument_list pos:start="23:38" pos:end="23:47">(<argument pos:start="23:39" pos:end="23:46"><expr pos:start="23:39" pos:end="23:46"><name pos:start="23:39" pos:end="23:46">poll_fds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="27:5" pos:end="57:5">for <control pos:start="27:9" pos:end="27:36">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:31"><expr pos:start="27:17" pos:end="27:30"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:30">n_poll_fds</name></expr>;</condition> <incr pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><name pos:start="27:33" pos:end="27:33">i</name><operator pos:start="27:34" pos:end="27:35">++</operator></expr></incr>)</control> <block pos:start="27:38" pos:end="57:5">{<block_content pos:start="29:9" pos:end="55:9">

        <decl_stmt pos:start="29:9" pos:end="29:34"><decl pos:start="29:9" pos:end="29:33"><type pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:15">GPollFD</name> <modifier pos:start="29:17" pos:end="29:17">*</modifier></type><name pos:start="29:18" pos:end="29:18">p</name> <init pos:start="29:20" pos:end="29:33">= <expr pos:start="29:22" pos:end="29:33"><operator pos:start="29:22" pos:end="29:22">&amp;</operator><name pos:start="29:23" pos:end="29:33"><name pos:start="29:23" pos:end="29:30">poll_fds</name><index pos:start="29:31" pos:end="29:33">[<expr pos:start="29:32" pos:end="29:32"><name pos:start="29:32" pos:end="29:32">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:34">(<expr pos:start="33:13" pos:end="33:33"><operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:22"><name pos:start="33:14" pos:end="33:14">p</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:22">events</name></name> <operator pos:start="33:24" pos:end="33:24">&amp;</operator> <name pos:start="33:26" pos:end="33:32">G_IO_IN</name><operator pos:start="33:33" pos:end="33:33">)</operator></expr>)</condition> <block pos:start="33:36" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:42">

            <expr_stmt pos:start="35:13" pos:end="35:32"><expr pos:start="35:13" pos:end="35:31"><call pos:start="35:13" pos:end="35:31"><name pos:start="35:13" pos:end="35:18">FD_SET</name><argument_list pos:start="35:19" pos:end="35:31">(<argument pos:start="35:20" pos:end="35:24"><expr pos:start="35:20" pos:end="35:24"><name pos:start="35:20" pos:end="35:24"><name pos:start="35:20" pos:end="35:20">p</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:24">fd</name></name></expr></argument>, <argument pos:start="35:27" pos:end="35:30"><expr pos:start="35:27" pos:end="35:30"><name pos:start="35:27" pos:end="35:30">rfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:42"><expr pos:start="37:13" pos:end="37:41"><operator pos:start="37:13" pos:end="37:13">*</operator><name pos:start="37:14" pos:end="37:19">max_fd</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <call pos:start="37:23" pos:end="37:41"><name pos:start="37:23" pos:end="37:25">MAX</name><argument_list pos:start="37:26" pos:end="37:41">(<argument pos:start="37:27" pos:end="37:33"><expr pos:start="37:27" pos:end="37:33"><operator pos:start="37:27" pos:end="37:27">*</operator><name pos:start="37:28" pos:end="37:33">max_fd</name></expr></argument>, <argument pos:start="37:36" pos:end="37:40"><expr pos:start="37:36" pos:end="37:40"><name pos:start="37:36" pos:end="37:40"><name pos:start="37:36" pos:end="37:36">p</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:40">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:35">(<expr pos:start="41:13" pos:end="41:34"><operator pos:start="41:13" pos:end="41:13">(</operator><name pos:start="41:14" pos:end="41:22"><name pos:start="41:14" pos:end="41:14">p</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:22">events</name></name> <operator pos:start="41:24" pos:end="41:24">&amp;</operator> <name pos:start="41:26" pos:end="41:33">G_IO_OUT</name><operator pos:start="41:34" pos:end="41:34">)</operator></expr>)</condition> <block pos:start="41:37" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:42">

            <expr_stmt pos:start="43:13" pos:end="43:32"><expr pos:start="43:13" pos:end="43:31"><call pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:18">FD_SET</name><argument_list pos:start="43:19" pos:end="43:31">(<argument pos:start="43:20" pos:end="43:24"><expr pos:start="43:20" pos:end="43:24"><name pos:start="43:20" pos:end="43:24"><name pos:start="43:20" pos:end="43:20">p</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:24">fd</name></name></expr></argument>, <argument pos:start="43:27" pos:end="43:30"><expr pos:start="43:27" pos:end="43:30"><name pos:start="43:27" pos:end="43:30">wfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:42"><expr pos:start="45:13" pos:end="45:41"><operator pos:start="45:13" pos:end="45:13">*</operator><name pos:start="45:14" pos:end="45:19">max_fd</name> <operator pos:start="45:21" pos:end="45:21">=</operator> <call pos:start="45:23" pos:end="45:41"><name pos:start="45:23" pos:end="45:25">MAX</name><argument_list pos:start="45:26" pos:end="45:41">(<argument pos:start="45:27" pos:end="45:33"><expr pos:start="45:27" pos:end="45:33"><operator pos:start="45:27" pos:end="45:27">*</operator><name pos:start="45:28" pos:end="45:33">max_fd</name></expr></argument>, <argument pos:start="45:36" pos:end="45:40"><expr pos:start="45:36" pos:end="45:40"><name pos:start="45:36" pos:end="45:40"><name pos:start="45:36" pos:end="45:36">p</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:40">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:35">(<expr pos:start="49:13" pos:end="49:34"><operator pos:start="49:13" pos:end="49:13">(</operator><name pos:start="49:14" pos:end="49:22"><name pos:start="49:14" pos:end="49:14">p</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:22">events</name></name> <operator pos:start="49:24" pos:end="49:24">&amp;</operator> <name pos:start="49:26" pos:end="49:33">G_IO_ERR</name><operator pos:start="49:34" pos:end="49:34">)</operator></expr>)</condition> <block pos:start="49:37" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:42">

            <expr_stmt pos:start="51:13" pos:end="51:32"><expr pos:start="51:13" pos:end="51:31"><call pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:18">FD_SET</name><argument_list pos:start="51:19" pos:end="51:31">(<argument pos:start="51:20" pos:end="51:24"><expr pos:start="51:20" pos:end="51:24"><name pos:start="51:20" pos:end="51:24"><name pos:start="51:20" pos:end="51:20">p</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:24">fd</name></name></expr></argument>, <argument pos:start="51:27" pos:end="51:30"><expr pos:start="51:27" pos:end="51:30"><name pos:start="51:27" pos:end="51:30">xfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:42"><expr pos:start="53:13" pos:end="53:41"><operator pos:start="53:13" pos:end="53:13">*</operator><name pos:start="53:14" pos:end="53:19">max_fd</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <call pos:start="53:23" pos:end="53:41"><name pos:start="53:23" pos:end="53:25">MAX</name><argument_list pos:start="53:26" pos:end="53:41">(<argument pos:start="53:27" pos:end="53:33"><expr pos:start="53:27" pos:end="53:33"><operator pos:start="53:27" pos:end="53:27">*</operator><name pos:start="53:28" pos:end="53:33">max_fd</name></expr></argument>, <argument pos:start="53:36" pos:end="53:40"><expr pos:start="53:36" pos:end="53:40"><name pos:start="53:36" pos:end="53:40"><name pos:start="53:36" pos:end="53:36">p</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:40">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="61:5" pos:end="61:69"><expr pos:start="61:5" pos:end="61:68"><name pos:start="61:5" pos:end="61:15">cur_timeout</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <operator pos:start="61:19" pos:end="61:19">(</operator><name pos:start="61:20" pos:end="61:29"><name pos:start="61:20" pos:end="61:21">tv</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:29">tv_sec</name></name> <operator pos:start="61:31" pos:end="61:31">*</operator> <literal type="number" pos:start="61:33" pos:end="61:36">1000</literal><operator pos:start="61:37" pos:end="61:37">)</operator> <operator pos:start="61:39" pos:end="61:39">+</operator> <operator pos:start="61:41" pos:end="61:41">(</operator><operator pos:start="61:42" pos:end="61:42">(</operator><name pos:start="61:43" pos:end="61:53"><name pos:start="61:43" pos:end="61:44">tv</name><operator pos:start="61:45" pos:end="61:46">-&gt;</operator><name pos:start="61:47" pos:end="61:53">tv_usec</name></name> <operator pos:start="61:55" pos:end="61:55">+</operator> <literal type="number" pos:start="61:57" pos:end="61:59">500</literal><operator pos:start="61:60" pos:end="61:60">)</operator> <operator pos:start="61:62" pos:end="61:62">/</operator> <literal type="number" pos:start="61:64" pos:end="61:67">1000</literal><operator pos:start="61:68" pos:end="61:68">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:46">(<expr pos:start="63:9" pos:end="63:45"><name pos:start="63:9" pos:end="63:15">timeout</name> <operator pos:start="63:17" pos:end="63:18">&gt;=</operator> <literal type="number" pos:start="63:20" pos:end="63:20">0</literal> <operator pos:start="63:22" pos:end="63:23">&amp;&amp;</operator> <name pos:start="63:25" pos:end="63:31">timeout</name> <operator pos:start="63:33" pos:end="63:33">&lt;</operator> <name pos:start="63:35" pos:end="63:45">cur_timeout</name></expr>)</condition> <block pos:start="63:48" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:46">

        <expr_stmt pos:start="65:9" pos:end="65:36"><expr pos:start="65:9" pos:end="65:35"><name pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:10">tv</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:18">tv_sec</name></name> <operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:28">timeout</name> <operator pos:start="65:30" pos:end="65:30">/</operator> <literal type="number" pos:start="65:32" pos:end="65:35">1000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:46"><expr pos:start="67:9" pos:end="67:45"><name pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:10">tv</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:19">tv_usec</name></name> <operator pos:start="67:21" pos:end="67:21">=</operator> <operator pos:start="67:23" pos:end="67:23">(</operator><name pos:start="67:24" pos:end="67:30">timeout</name> <operator pos:start="67:32" pos:end="67:32">%</operator> <literal type="number" pos:start="67:34" pos:end="67:37">1000</literal><operator pos:start="67:38" pos:end="67:38">)</operator> <operator pos:start="67:40" pos:end="67:40">*</operator> <literal type="number" pos:start="67:42" pos:end="67:45">1000</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
