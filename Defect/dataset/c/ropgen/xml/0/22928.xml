<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22928.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">ff_do_elbg</name><parameter_list pos:start="1:16" pos:end="5:34">(<parameter pos:start="1:17" pos:end="1:27"><decl pos:start="1:17" pos:end="1:27"><type pos:start="1:17" pos:end="1:27"><name pos:start="1:17" pos:end="1:19">int</name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:27">points</name></decl></parameter>, <parameter pos:start="1:30" pos:end="1:36"><decl pos:start="1:30" pos:end="1:36"><type pos:start="1:30" pos:end="1:36"><name pos:start="1:30" pos:end="1:32">int</name></type> <name pos:start="1:34" pos:end="1:36">dim</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:51">numpoints</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:66"><decl pos:start="1:54" pos:end="1:66"><type pos:start="1:54" pos:end="1:66"><name pos:start="1:54" pos:end="1:56">int</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:66">codebook</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:25"><decl pos:start="3:17" pos:end="3:25"><type pos:start="3:17" pos:end="3:25"><name pos:start="3:17" pos:end="3:19">int</name></type> <name pos:start="3:21" pos:end="3:25">numCB</name></decl></parameter>, <parameter pos:start="3:28" pos:end="3:40"><decl pos:start="3:28" pos:end="3:40"><type pos:start="3:28" pos:end="3:40"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:40">max_steps</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:57"><decl pos:start="3:43" pos:end="3:57"><type pos:start="3:43" pos:end="3:57"><name pos:start="3:43" pos:end="3:45">int</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:57">closest_cb</name></decl></parameter>,

                <parameter pos:start="5:17" pos:end="5:33"><decl pos:start="5:17" pos:end="5:33"><type pos:start="5:17" pos:end="5:33"><name pos:start="5:17" pos:end="5:21">AVLFG</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:33">rand_state</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="169:1">{<block_content pos:start="9:5" pos:end="167:30">

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">dist</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13">elbg_data</name></type> <name pos:start="11:15" pos:end="11:20">elbg_d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">elbg_data</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:19">elbg</name> <init pos:start="13:21" pos:end="13:29">= <expr pos:start="13:23" pos:end="13:29"><operator pos:start="13:23" pos:end="13:23">&amp;</operator><name pos:start="13:24" pos:end="13:29">elbg_d</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">j</name></decl>, <decl pos:start="15:15" pos:end="15:15"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:15" pos:end="15:15">k</name></decl>, <decl pos:start="15:18" pos:end="15:27"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:18" pos:end="15:27">last_error</name></decl>, <decl pos:start="15:30" pos:end="15:36"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:30" pos:end="15:34">steps</name><init pos:start="15:35" pos:end="15:36">=<expr pos:start="15:36" pos:end="15:36"><literal type="number" pos:start="15:36" pos:end="15:36">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:52"><decl pos:start="17:5" pos:end="17:51"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:7">int</name> <modifier pos:start="17:9" pos:end="17:9">*</modifier></type><name pos:start="17:10" pos:end="17:16">dist_cb</name> <init pos:start="17:18" pos:end="17:51">= <expr pos:start="17:20" pos:end="17:51"><call pos:start="17:20" pos:end="17:51"><name pos:start="17:20" pos:end="17:28">av_malloc</name><argument_list pos:start="17:29" pos:end="17:51">(<argument pos:start="17:30" pos:end="17:50"><expr pos:start="17:30" pos:end="17:50"><name pos:start="17:30" pos:end="17:38">numpoints</name><operator pos:start="17:39" pos:end="17:39">*</operator><sizeof pos:start="17:40" pos:end="17:50">sizeof<argument_list pos:start="17:46" pos:end="17:50">(<argument pos:start="17:47" pos:end="17:49"><expr pos:start="17:47" pos:end="17:49"><name pos:start="17:47" pos:end="17:49">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:50"><decl pos:start="19:5" pos:end="19:49"><type pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:7">int</name> <modifier pos:start="19:9" pos:end="19:9">*</modifier></type><name pos:start="19:10" pos:end="19:18">size_part</name> <init pos:start="19:20" pos:end="19:49">= <expr pos:start="19:22" pos:end="19:49"><call pos:start="19:22" pos:end="19:49"><name pos:start="19:22" pos:end="19:30">av_malloc</name><argument_list pos:start="19:31" pos:end="19:49">(<argument pos:start="19:32" pos:end="19:48"><expr pos:start="19:32" pos:end="19:48"><name pos:start="19:32" pos:end="19:36">numCB</name><operator pos:start="19:37" pos:end="19:37">*</operator><sizeof pos:start="19:38" pos:end="19:48">sizeof<argument_list pos:start="19:44" pos:end="19:48">(<argument pos:start="19:45" pos:end="19:47"><expr pos:start="19:45" pos:end="19:47"><name pos:start="19:45" pos:end="19:47">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:58"><decl pos:start="21:5" pos:end="21:57"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:8">cell</name> <modifier pos:start="21:10" pos:end="21:10">*</modifier></type><name pos:start="21:11" pos:end="21:21">list_buffer</name> <init pos:start="21:23" pos:end="21:57">= <expr pos:start="21:25" pos:end="21:57"><call pos:start="21:25" pos:end="21:57"><name pos:start="21:25" pos:end="21:33">av_malloc</name><argument_list pos:start="21:34" pos:end="21:57">(<argument pos:start="21:35" pos:end="21:56"><expr pos:start="21:35" pos:end="21:56"><name pos:start="21:35" pos:end="21:43">numpoints</name><operator pos:start="21:44" pos:end="21:44">*</operator><sizeof pos:start="21:45" pos:end="21:56">sizeof<argument_list pos:start="21:51" pos:end="21:56">(<argument pos:start="21:52" pos:end="21:55"><expr pos:start="21:52" pos:end="21:55"><name pos:start="21:52" pos:end="21:55">cell</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:8">cell</name> <modifier pos:start="23:10" pos:end="23:10">*</modifier></type><name pos:start="23:11" pos:end="23:20">free_cells</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:32"><decl pos:start="25:5" pos:end="25:17"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:17">best_dist</name></decl>, <decl pos:start="25:20" pos:end="25:31"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:20" pos:end="25:27">best_idx</name> <init pos:start="25:29" pos:end="25:31">= <expr pos:start="25:31" pos:end="25:31"><literal type="number" pos:start="25:31" pos:end="25:31">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:8">elbg</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:15">error</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:25">INT_MAX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:20"><expr pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:8">elbg</name><operator pos:start="31:9" pos:end="31:10">-&gt;</operator><name pos:start="31:11" pos:end="31:13">dim</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:19">dim</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:24"><expr pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:8">elbg</name><operator pos:start="33:9" pos:end="33:10">-&gt;</operator><name pos:start="33:11" pos:end="33:15">numCB</name></name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:23">numCB</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:30"><expr pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:8">elbg</name><operator pos:start="35:9" pos:end="35:10">-&gt;</operator><name pos:start="35:11" pos:end="35:18">codebook</name></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:29">codebook</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:50"><expr pos:start="37:5" pos:end="37:49"><name pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:8">elbg</name><operator pos:start="37:9" pos:end="37:10">-&gt;</operator><name pos:start="37:11" pos:end="37:15">cells</name></name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:49"><name pos:start="37:19" pos:end="37:27">av_malloc</name><argument_list pos:start="37:28" pos:end="37:49">(<argument pos:start="37:29" pos:end="37:48"><expr pos:start="37:29" pos:end="37:48"><name pos:start="37:29" pos:end="37:33">numCB</name><operator pos:start="37:34" pos:end="37:34">*</operator><sizeof pos:start="37:35" pos:end="37:48">sizeof<argument_list pos:start="37:41" pos:end="37:48">(<argument pos:start="37:42" pos:end="37:47"><expr pos:start="37:42" pos:end="37:47"><name pos:start="37:42" pos:end="37:45">cell</name> <operator pos:start="37:47" pos:end="37:47">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:49"><expr pos:start="39:5" pos:end="39:48"><name pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:8">elbg</name><operator pos:start="39:9" pos:end="39:10">-&gt;</operator><name pos:start="39:11" pos:end="39:17">utility</name></name> <operator pos:start="39:19" pos:end="39:19">=</operator> <call pos:start="39:21" pos:end="39:48"><name pos:start="39:21" pos:end="39:29">av_malloc</name><argument_list pos:start="39:30" pos:end="39:48">(<argument pos:start="39:31" pos:end="39:47"><expr pos:start="39:31" pos:end="39:47"><name pos:start="39:31" pos:end="39:35">numCB</name><operator pos:start="39:36" pos:end="39:36">*</operator><sizeof pos:start="39:37" pos:end="39:47">sizeof<argument_list pos:start="39:43" pos:end="39:47">(<argument pos:start="39:44" pos:end="39:46"><expr pos:start="39:44" pos:end="39:46"><name pos:start="39:44" pos:end="39:46">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:8">elbg</name><operator pos:start="41:9" pos:end="41:10">-&gt;</operator><name pos:start="41:11" pos:end="41:20">nearest_cb</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <name pos:start="41:24" pos:end="41:33">closest_cb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:26"><expr pos:start="43:5" pos:end="43:25"><name pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:8">elbg</name><operator pos:start="43:9" pos:end="43:10">-&gt;</operator><name pos:start="43:11" pos:end="43:16">points</name></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:25">points</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:53"><expr pos:start="45:5" pos:end="45:52"><name pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:8">elbg</name><operator pos:start="45:9" pos:end="45:10">-&gt;</operator><name pos:start="45:11" pos:end="45:21">utility_inc</name></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <call pos:start="45:25" pos:end="45:52"><name pos:start="45:25" pos:end="45:33">av_malloc</name><argument_list pos:start="45:34" pos:end="45:52">(<argument pos:start="45:35" pos:end="45:51"><expr pos:start="45:35" pos:end="45:51"><name pos:start="45:35" pos:end="45:39">numCB</name><operator pos:start="45:40" pos:end="45:40">*</operator><sizeof pos:start="45:41" pos:end="45:51">sizeof<argument_list pos:start="45:47" pos:end="45:51">(<argument pos:start="45:48" pos:end="45:50"><expr pos:start="45:48" pos:end="45:50"><name pos:start="45:48" pos:end="45:50">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:52"><expr pos:start="47:5" pos:end="47:51"><name pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:8">elbg</name><operator pos:start="47:9" pos:end="47:10">-&gt;</operator><name pos:start="47:11" pos:end="47:20">scratchbuf</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <call pos:start="47:24" pos:end="47:51"><name pos:start="47:24" pos:end="47:32">av_malloc</name><argument_list pos:start="47:33" pos:end="47:51">(<argument pos:start="47:34" pos:end="47:50"><expr pos:start="47:34" pos:end="47:50"><literal type="number" pos:start="47:34" pos:end="47:34">5</literal><operator pos:start="47:35" pos:end="47:35">*</operator><name pos:start="47:36" pos:end="47:38">dim</name><operator pos:start="47:39" pos:end="47:39">*</operator><sizeof pos:start="47:40" pos:end="47:50">sizeof<argument_list pos:start="47:46" pos:end="47:50">(<argument pos:start="47:47" pos:end="47:49"><expr pos:start="47:47" pos:end="47:49"><name pos:start="47:47" pos:end="47:49">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:34"><expr pos:start="51:5" pos:end="51:33"><name pos:start="51:5" pos:end="51:20"><name pos:start="51:5" pos:end="51:8">elbg</name><operator pos:start="51:9" pos:end="51:10">-&gt;</operator><name pos:start="51:11" pos:end="51:20">rand_state</name></name> <operator pos:start="51:22" pos:end="51:22">=</operator> <name pos:start="51:24" pos:end="51:33">rand_state</name></expr>;</expr_stmt>



    <do pos:start="55:5" pos:end="151:33">do <block pos:start="55:8" pos:end="149:5">{<block_content pos:start="57:9" pos:end="145:81">

        <expr_stmt pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:18">free_cells</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:32">list_buffer</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:33"><expr pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:18">last_error</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:32"><name pos:start="59:22" pos:end="59:25">elbg</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:32">error</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:16"><expr pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:13">steps</name><operator pos:start="61:14" pos:end="61:15">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:52"><expr pos:start="63:9" pos:end="63:51"><call pos:start="63:9" pos:end="63:51"><name pos:start="63:9" pos:end="63:14">memset</name><argument_list pos:start="63:15" pos:end="63:51">(<argument pos:start="63:16" pos:end="63:28"><expr pos:start="63:16" pos:end="63:28"><name pos:start="63:16" pos:end="63:28"><name pos:start="63:16" pos:end="63:19">elbg</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:28">utility</name></name></expr></argument>, <argument pos:start="63:31" pos:end="63:31"><expr pos:start="63:31" pos:end="63:31"><literal type="number" pos:start="63:31" pos:end="63:31">0</literal></expr></argument>, <argument pos:start="63:34" pos:end="63:50"><expr pos:start="63:34" pos:end="63:50"><name pos:start="63:34" pos:end="63:38">numCB</name><operator pos:start="63:39" pos:end="63:39">*</operator><sizeof pos:start="63:40" pos:end="63:50">sizeof<argument_list pos:start="63:46" pos:end="63:50">(<argument pos:start="63:47" pos:end="63:49"><expr pos:start="63:47" pos:end="63:49"><name pos:start="63:47" pos:end="63:49">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:53"><expr pos:start="65:9" pos:end="65:52"><call pos:start="65:9" pos:end="65:52"><name pos:start="65:9" pos:end="65:14">memset</name><argument_list pos:start="65:15" pos:end="65:52">(<argument pos:start="65:16" pos:end="65:26"><expr pos:start="65:16" pos:end="65:26"><name pos:start="65:16" pos:end="65:26"><name pos:start="65:16" pos:end="65:19">elbg</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:26">cells</name></name></expr></argument>, <argument pos:start="65:29" pos:end="65:29"><expr pos:start="65:29" pos:end="65:29"><literal type="number" pos:start="65:29" pos:end="65:29">0</literal></expr></argument>, <argument pos:start="65:32" pos:end="65:51"><expr pos:start="65:32" pos:end="65:51"><name pos:start="65:32" pos:end="65:36">numCB</name><operator pos:start="65:37" pos:end="65:37">*</operator><sizeof pos:start="65:38" pos:end="65:51">sizeof<argument_list pos:start="65:44" pos:end="65:51">(<argument pos:start="65:45" pos:end="65:50"><expr pos:start="65:45" pos:end="65:50"><name pos:start="65:45" pos:end="65:48">cell</name> <operator pos:start="65:50" pos:end="65:50">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:24"><expr pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:19"><name pos:start="69:9" pos:end="69:12">elbg</name><operator pos:start="69:13" pos:end="69:14">-&gt;</operator><name pos:start="69:15" pos:end="69:19">error</name></name> <operator pos:start="69:21" pos:end="69:21">=</operator> <literal type="number" pos:start="69:23" pos:end="69:23">0</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="73:9" pos:end="75:43">/* This loop evaluate the actual Voronoi partition. It is the most

           costly part of the algorithm. */</comment>

        <for pos:start="77:9" pos:end="111:9">for <control pos:start="77:13" pos:end="77:37">(<init pos:start="77:14" pos:end="77:17"><expr pos:start="77:14" pos:end="77:16"><name pos:start="77:14" pos:end="77:14">i</name><operator pos:start="77:15" pos:end="77:15">=</operator><literal type="number" pos:start="77:16" pos:end="77:16">0</literal></expr>;</init> <condition pos:start="77:19" pos:end="77:32"><expr pos:start="77:19" pos:end="77:31"><name pos:start="77:19" pos:end="77:19">i</name> <operator pos:start="77:21" pos:end="77:21">&lt;</operator> <name pos:start="77:23" pos:end="77:31">numpoints</name></expr>;</condition> <incr pos:start="77:34" pos:end="77:36"><expr pos:start="77:34" pos:end="77:36"><name pos:start="77:34" pos:end="77:34">i</name><operator pos:start="77:35" pos:end="77:36">++</operator></expr></incr>)</control> <block pos:start="77:39" pos:end="111:9">{<block_content pos:start="79:13" pos:end="109:25">

            <expr_stmt pos:start="79:13" pos:end="79:120"><expr pos:start="79:13" pos:end="79:119"><name pos:start="79:13" pos:end="79:21">best_dist</name> <operator pos:start="79:23" pos:end="79:23">=</operator> <call pos:start="79:25" pos:end="79:119"><name pos:start="79:25" pos:end="79:40">distance_limited</name><argument_list pos:start="79:41" pos:end="79:119">(<argument pos:start="79:42" pos:end="79:67"><expr pos:start="79:42" pos:end="79:67"><name pos:start="79:42" pos:end="79:53"><name pos:start="79:42" pos:end="79:45">elbg</name><operator pos:start="79:46" pos:end="79:47">-&gt;</operator><name pos:start="79:48" pos:end="79:53">points</name></name> <operator pos:start="79:55" pos:end="79:55">+</operator> <name pos:start="79:57" pos:end="79:57">i</name><operator pos:start="79:58" pos:end="79:58">*</operator><name pos:start="79:59" pos:end="79:67"><name pos:start="79:59" pos:end="79:62">elbg</name><operator pos:start="79:63" pos:end="79:64">-&gt;</operator><name pos:start="79:65" pos:end="79:67">dim</name></name></expr></argument>, <argument pos:start="79:70" pos:end="79:104"><expr pos:start="79:70" pos:end="79:104"><name pos:start="79:70" pos:end="79:83"><name pos:start="79:70" pos:end="79:73">elbg</name><operator pos:start="79:74" pos:end="79:75">-&gt;</operator><name pos:start="79:76" pos:end="79:83">codebook</name></name> <operator pos:start="79:85" pos:end="79:85">+</operator> <name pos:start="79:87" pos:end="79:94">best_idx</name><operator pos:start="79:95" pos:end="79:95">*</operator><name pos:start="79:96" pos:end="79:104"><name pos:start="79:96" pos:end="79:99">elbg</name><operator pos:start="79:100" pos:end="79:101">-&gt;</operator><name pos:start="79:102" pos:end="79:104">dim</name></name></expr></argument>, <argument pos:start="79:107" pos:end="79:109"><expr pos:start="79:107" pos:end="79:109"><name pos:start="79:107" pos:end="79:109">dim</name></expr></argument>, <argument pos:start="79:112" pos:end="79:118"><expr pos:start="79:112" pos:end="79:118"><name pos:start="79:112" pos:end="79:118">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="81:13" pos:end="93:13">for <control pos:start="81:17" pos:end="81:43">(<init pos:start="81:18" pos:end="81:21"><expr pos:start="81:18" pos:end="81:20"><name pos:start="81:18" pos:end="81:18">k</name><operator pos:start="81:19" pos:end="81:19">=</operator><literal type="number" pos:start="81:20" pos:end="81:20">0</literal></expr>;</init> <condition pos:start="81:23" pos:end="81:38"><expr pos:start="81:23" pos:end="81:37"><name pos:start="81:23" pos:end="81:23">k</name> <operator pos:start="81:25" pos:end="81:25">&lt;</operator> <name pos:start="81:27" pos:end="81:37"><name pos:start="81:27" pos:end="81:30">elbg</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:37">numCB</name></name></expr>;</condition> <incr pos:start="81:40" pos:end="81:42"><expr pos:start="81:40" pos:end="81:42"><name pos:start="81:40" pos:end="81:40">k</name><operator pos:start="81:41" pos:end="81:42">++</operator></expr></incr>)</control> <block pos:start="81:45" pos:end="93:13">{<block_content pos:start="83:17" pos:end="91:17">

                <expr_stmt pos:start="83:17" pos:end="83:114"><expr pos:start="83:17" pos:end="83:113"><name pos:start="83:17" pos:end="83:20">dist</name> <operator pos:start="83:22" pos:end="83:22">=</operator> <call pos:start="83:24" pos:end="83:113"><name pos:start="83:24" pos:end="83:39">distance_limited</name><argument_list pos:start="83:40" pos:end="83:113">(<argument pos:start="83:41" pos:end="83:66"><expr pos:start="83:41" pos:end="83:66"><name pos:start="83:41" pos:end="83:52"><name pos:start="83:41" pos:end="83:44">elbg</name><operator pos:start="83:45" pos:end="83:46">-&gt;</operator><name pos:start="83:47" pos:end="83:52">points</name></name> <operator pos:start="83:54" pos:end="83:54">+</operator> <name pos:start="83:56" pos:end="83:56">i</name><operator pos:start="83:57" pos:end="83:57">*</operator><name pos:start="83:58" pos:end="83:66"><name pos:start="83:58" pos:end="83:61">elbg</name><operator pos:start="83:62" pos:end="83:63">-&gt;</operator><name pos:start="83:64" pos:end="83:66">dim</name></name></expr></argument>, <argument pos:start="83:69" pos:end="83:96"><expr pos:start="83:69" pos:end="83:96"><name pos:start="83:69" pos:end="83:82"><name pos:start="83:69" pos:end="83:72">elbg</name><operator pos:start="83:73" pos:end="83:74">-&gt;</operator><name pos:start="83:75" pos:end="83:82">codebook</name></name> <operator pos:start="83:84" pos:end="83:84">+</operator> <name pos:start="83:86" pos:end="83:86">k</name><operator pos:start="83:87" pos:end="83:87">*</operator><name pos:start="83:88" pos:end="83:96"><name pos:start="83:88" pos:end="83:91">elbg</name><operator pos:start="83:92" pos:end="83:93">-&gt;</operator><name pos:start="83:94" pos:end="83:96">dim</name></name></expr></argument>, <argument pos:start="83:99" pos:end="83:101"><expr pos:start="83:99" pos:end="83:101"><name pos:start="83:99" pos:end="83:101">dim</name></expr></argument>, <argument pos:start="83:104" pos:end="83:112"><expr pos:start="83:104" pos:end="83:112"><name pos:start="83:104" pos:end="83:112">best_dist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="85:17" pos:end="91:17"><if pos:start="85:17" pos:end="91:17">if <condition pos:start="85:20" pos:end="85:37">(<expr pos:start="85:21" pos:end="85:36"><name pos:start="85:21" pos:end="85:24">dist</name> <operator pos:start="85:26" pos:end="85:26">&lt;</operator> <name pos:start="85:28" pos:end="85:36">best_dist</name></expr>)</condition> <block pos:start="85:39" pos:end="91:17">{<block_content pos:start="87:21" pos:end="89:33">

                    <expr_stmt pos:start="87:21" pos:end="87:37"><expr pos:start="87:21" pos:end="87:36"><name pos:start="87:21" pos:end="87:29">best_dist</name> <operator pos:start="87:31" pos:end="87:31">=</operator> <name pos:start="87:33" pos:end="87:36">dist</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="89:21" pos:end="89:33"><expr pos:start="89:21" pos:end="89:32"><name pos:start="89:21" pos:end="89:28">best_idx</name> <operator pos:start="89:30" pos:end="89:30">=</operator> <name pos:start="89:32" pos:end="89:32">k</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="95:13" pos:end="95:43"><expr pos:start="95:13" pos:end="95:42"><name pos:start="95:13" pos:end="95:31"><name pos:start="95:13" pos:end="95:16">elbg</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:28">nearest_cb</name><index pos:start="95:29" pos:end="95:31">[<expr pos:start="95:30" pos:end="95:30"><name pos:start="95:30" pos:end="95:30">i</name></expr>]</index></name> <operator pos:start="95:33" pos:end="95:33">=</operator> <name pos:start="95:35" pos:end="95:42">best_idx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:35"><expr pos:start="97:13" pos:end="97:34"><name pos:start="97:13" pos:end="97:22"><name pos:start="97:13" pos:end="97:19">dist_cb</name><index pos:start="97:20" pos:end="97:22">[<expr pos:start="97:21" pos:end="97:21"><name pos:start="97:21" pos:end="97:21">i</name></expr>]</index></name> <operator pos:start="97:24" pos:end="97:24">=</operator> <name pos:start="97:26" pos:end="97:34">best_dist</name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:38"><expr pos:start="99:13" pos:end="99:37"><name pos:start="99:13" pos:end="99:23"><name pos:start="99:13" pos:end="99:16">elbg</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:23">error</name></name> <operator pos:start="99:25" pos:end="99:26">+=</operator> <name pos:start="99:28" pos:end="99:37"><name pos:start="99:28" pos:end="99:34">dist_cb</name><index pos:start="99:35" pos:end="99:37">[<expr pos:start="99:36" pos:end="99:36"><name pos:start="99:36" pos:end="99:36">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:61"><expr pos:start="101:13" pos:end="101:60"><name pos:start="101:13" pos:end="101:46"><name pos:start="101:13" pos:end="101:16">elbg</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:25">utility</name><index pos:start="101:26" pos:end="101:46">[<expr pos:start="101:27" pos:end="101:45"><name pos:start="101:27" pos:end="101:45"><name pos:start="101:27" pos:end="101:30">elbg</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:42">nearest_cb</name><index pos:start="101:43" pos:end="101:45">[<expr pos:start="101:44" pos:end="101:44"><name pos:start="101:44" pos:end="101:44">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="101:48" pos:end="101:49">+=</operator> <name pos:start="101:51" pos:end="101:60"><name pos:start="101:51" pos:end="101:57">dist_cb</name><index pos:start="101:58" pos:end="101:60">[<expr pos:start="101:59" pos:end="101:59"><name pos:start="101:59" pos:end="101:59">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:34"><expr pos:start="103:13" pos:end="103:33"><name pos:start="103:13" pos:end="103:29"><name pos:start="103:13" pos:end="103:22">free_cells</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:29">index</name></name> <operator pos:start="103:31" pos:end="103:31">=</operator> <name pos:start="103:33" pos:end="103:33">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:64"><expr pos:start="105:13" pos:end="105:63"><name pos:start="105:13" pos:end="105:28"><name pos:start="105:13" pos:end="105:22">free_cells</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:28">next</name></name> <operator pos:start="105:30" pos:end="105:30">=</operator> <name pos:start="105:32" pos:end="105:63"><name pos:start="105:32" pos:end="105:35">elbg</name><operator pos:start="105:36" pos:end="105:37">-&gt;</operator><name pos:start="105:38" pos:end="105:42">cells</name><index pos:start="105:43" pos:end="105:63">[<expr pos:start="105:44" pos:end="105:62"><name pos:start="105:44" pos:end="105:62"><name pos:start="105:44" pos:end="105:47">elbg</name><operator pos:start="105:48" pos:end="105:49">-&gt;</operator><name pos:start="105:50" pos:end="105:59">nearest_cb</name><index pos:start="105:60" pos:end="105:62">[<expr pos:start="105:61" pos:end="105:61"><name pos:start="105:61" pos:end="105:61">i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:58"><expr pos:start="107:13" pos:end="107:57"><name pos:start="107:13" pos:end="107:44"><name pos:start="107:13" pos:end="107:16">elbg</name><operator pos:start="107:17" pos:end="107:18">-&gt;</operator><name pos:start="107:19" pos:end="107:23">cells</name><index pos:start="107:24" pos:end="107:44">[<expr pos:start="107:25" pos:end="107:43"><name pos:start="107:25" pos:end="107:43"><name pos:start="107:25" pos:end="107:28">elbg</name><operator pos:start="107:29" pos:end="107:30">-&gt;</operator><name pos:start="107:31" pos:end="107:40">nearest_cb</name><index pos:start="107:41" pos:end="107:43">[<expr pos:start="107:42" pos:end="107:42"><name pos:start="107:42" pos:end="107:42">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="107:46" pos:end="107:46">=</operator> <name pos:start="107:48" pos:end="107:57">free_cells</name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:25"><expr pos:start="109:13" pos:end="109:24"><name pos:start="109:13" pos:end="109:22">free_cells</name><operator pos:start="109:23" pos:end="109:24">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="115:9" pos:end="115:27"><expr pos:start="115:9" pos:end="115:26"><call pos:start="115:9" pos:end="115:26"><name pos:start="115:9" pos:end="115:20">do_shiftings</name><argument_list pos:start="115:21" pos:end="115:26">(<argument pos:start="115:22" pos:end="115:25"><expr pos:start="115:22" pos:end="115:25"><name pos:start="115:22" pos:end="115:25">elbg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:48"><expr pos:start="119:9" pos:end="119:47"><call pos:start="119:9" pos:end="119:47"><name pos:start="119:9" pos:end="119:14">memset</name><argument_list pos:start="119:15" pos:end="119:47">(<argument pos:start="119:16" pos:end="119:24"><expr pos:start="119:16" pos:end="119:24"><name pos:start="119:16" pos:end="119:24">size_part</name></expr></argument>, <argument pos:start="119:27" pos:end="119:27"><expr pos:start="119:27" pos:end="119:27"><literal type="number" pos:start="119:27" pos:end="119:27">0</literal></expr></argument>, <argument pos:start="119:30" pos:end="119:46"><expr pos:start="119:30" pos:end="119:46"><name pos:start="119:30" pos:end="119:34">numCB</name><operator pos:start="119:35" pos:end="119:35">*</operator><sizeof pos:start="119:36" pos:end="119:46">sizeof<argument_list pos:start="119:42" pos:end="119:46">(<argument pos:start="119:43" pos:end="119:45"><expr pos:start="119:43" pos:end="119:45"><name pos:start="119:43" pos:end="119:45">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:63"><expr pos:start="123:9" pos:end="123:62"><call pos:start="123:9" pos:end="123:62"><name pos:start="123:9" pos:end="123:14">memset</name><argument_list pos:start="123:15" pos:end="123:62">(<argument pos:start="123:16" pos:end="123:29"><expr pos:start="123:16" pos:end="123:29"><name pos:start="123:16" pos:end="123:29"><name pos:start="123:16" pos:end="123:19">elbg</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:29">codebook</name></name></expr></argument>, <argument pos:start="123:32" pos:end="123:32"><expr pos:start="123:32" pos:end="123:32"><literal type="number" pos:start="123:32" pos:end="123:32">0</literal></expr></argument>, <argument pos:start="123:35" pos:end="123:61"><expr pos:start="123:35" pos:end="123:61"><name pos:start="123:35" pos:end="123:45"><name pos:start="123:35" pos:end="123:38">elbg</name><operator pos:start="123:39" pos:end="123:40">-&gt;</operator><name pos:start="123:41" pos:end="123:45">numCB</name></name><operator pos:start="123:46" pos:end="123:46">*</operator><name pos:start="123:47" pos:end="123:49">dim</name><operator pos:start="123:50" pos:end="123:50">*</operator><sizeof pos:start="123:51" pos:end="123:61">sizeof<argument_list pos:start="123:57" pos:end="123:61">(<argument pos:start="123:58" pos:end="123:60"><expr pos:start="123:58" pos:end="123:60"><name pos:start="123:58" pos:end="123:60">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="127:9" pos:end="137:9">for <control pos:start="127:13" pos:end="127:37">(<init pos:start="127:14" pos:end="127:17"><expr pos:start="127:14" pos:end="127:16"><name pos:start="127:14" pos:end="127:14">i</name><operator pos:start="127:15" pos:end="127:15">=</operator><literal type="number" pos:start="127:16" pos:end="127:16">0</literal></expr>;</init> <condition pos:start="127:19" pos:end="127:32"><expr pos:start="127:19" pos:end="127:31"><name pos:start="127:19" pos:end="127:19">i</name> <operator pos:start="127:21" pos:end="127:21">&lt;</operator> <name pos:start="127:23" pos:end="127:31">numpoints</name></expr>;</condition> <incr pos:start="127:34" pos:end="127:36"><expr pos:start="127:34" pos:end="127:36"><name pos:start="127:34" pos:end="127:34">i</name><operator pos:start="127:35" pos:end="127:36">++</operator></expr></incr>)</control> <block pos:start="127:39" pos:end="137:9">{<block_content pos:start="129:13" pos:end="135:50">

            <expr_stmt pos:start="129:13" pos:end="129:45"><expr pos:start="129:13" pos:end="129:44"><name pos:start="129:13" pos:end="129:42"><name pos:start="129:13" pos:end="129:21">size_part</name><index pos:start="129:22" pos:end="129:42">[<expr pos:start="129:23" pos:end="129:41"><name pos:start="129:23" pos:end="129:41"><name pos:start="129:23" pos:end="129:26">elbg</name><operator pos:start="129:27" pos:end="129:28">-&gt;</operator><name pos:start="129:29" pos:end="129:38">nearest_cb</name><index pos:start="129:39" pos:end="129:41">[<expr pos:start="129:40" pos:end="129:40"><name pos:start="129:40" pos:end="129:40">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="129:43" pos:end="129:44">++</operator></expr>;</expr_stmt>

            <for pos:start="131:13" pos:end="135:50">for <control pos:start="131:17" pos:end="131:41">(<init pos:start="131:18" pos:end="131:21"><expr pos:start="131:18" pos:end="131:20"><name pos:start="131:18" pos:end="131:18">j</name><operator pos:start="131:19" pos:end="131:19">=</operator><literal type="number" pos:start="131:20" pos:end="131:20">0</literal></expr>;</init> <condition pos:start="131:23" pos:end="131:36"><expr pos:start="131:23" pos:end="131:35"><name pos:start="131:23" pos:end="131:23">j</name> <operator pos:start="131:25" pos:end="131:25">&lt;</operator> <name pos:start="131:27" pos:end="131:35"><name pos:start="131:27" pos:end="131:30">elbg</name><operator pos:start="131:31" pos:end="131:32">-&gt;</operator><name pos:start="131:33" pos:end="131:35">dim</name></name></expr>;</condition> <incr pos:start="131:38" pos:end="131:40"><expr pos:start="131:38" pos:end="131:40"><name pos:start="131:38" pos:end="131:38">j</name><operator pos:start="131:39" pos:end="131:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="133:17" pos:end="135:50"><block_content pos:start="133:17" pos:end="135:50">

                <expr_stmt pos:start="133:17" pos:end="135:50"><expr pos:start="133:17" pos:end="135:49"><name pos:start="133:17" pos:end="133:65"><name pos:start="133:17" pos:end="133:20">elbg</name><operator pos:start="133:21" pos:end="133:22">-&gt;</operator><name pos:start="133:23" pos:end="133:30">codebook</name><index pos:start="133:31" pos:end="133:65">[<expr pos:start="133:32" pos:end="133:64"><name pos:start="133:32" pos:end="133:50"><name pos:start="133:32" pos:end="133:35">elbg</name><operator pos:start="133:36" pos:end="133:37">-&gt;</operator><name pos:start="133:38" pos:end="133:47">nearest_cb</name><index pos:start="133:48" pos:end="133:50">[<expr pos:start="133:49" pos:end="133:49"><name pos:start="133:49" pos:end="133:49">i</name></expr>]</index></name><operator pos:start="133:51" pos:end="133:51">*</operator><name pos:start="133:52" pos:end="133:60"><name pos:start="133:52" pos:end="133:55">elbg</name><operator pos:start="133:56" pos:end="133:57">-&gt;</operator><name pos:start="133:58" pos:end="133:60">dim</name></name> <operator pos:start="133:62" pos:end="133:62">+</operator> <name pos:start="133:64" pos:end="133:64">j</name></expr>]</index></name> <operator pos:start="133:67" pos:end="133:68">+=</operator>

                    <name pos:start="135:21" pos:end="135:49"><name pos:start="135:21" pos:end="135:24">elbg</name><operator pos:start="135:25" pos:end="135:26">-&gt;</operator><name pos:start="135:27" pos:end="135:32">points</name><index pos:start="135:33" pos:end="135:49">[<expr pos:start="135:34" pos:end="135:48"><name pos:start="135:34" pos:end="135:34">i</name><operator pos:start="135:35" pos:end="135:35">*</operator><name pos:start="135:36" pos:end="135:44"><name pos:start="135:36" pos:end="135:39">elbg</name><operator pos:start="135:40" pos:end="135:41">-&gt;</operator><name pos:start="135:42" pos:end="135:44">dim</name></name> <operator pos:start="135:46" pos:end="135:46">+</operator> <name pos:start="135:48" pos:end="135:48">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>



        <for pos:start="141:9" pos:end="145:81">for <control pos:start="141:13" pos:end="141:39">(<init pos:start="141:14" pos:end="141:17"><expr pos:start="141:14" pos:end="141:16"><name pos:start="141:14" pos:end="141:14">i</name><operator pos:start="141:15" pos:end="141:15">=</operator><literal type="number" pos:start="141:16" pos:end="141:16">0</literal></expr>;</init> <condition pos:start="141:19" pos:end="141:34"><expr pos:start="141:19" pos:end="141:33"><name pos:start="141:19" pos:end="141:19">i</name> <operator pos:start="141:21" pos:end="141:21">&lt;</operator> <name pos:start="141:23" pos:end="141:33"><name pos:start="141:23" pos:end="141:26">elbg</name><operator pos:start="141:27" pos:end="141:28">-&gt;</operator><name pos:start="141:29" pos:end="141:33">numCB</name></name></expr>;</condition> <incr pos:start="141:36" pos:end="141:38"><expr pos:start="141:36" pos:end="141:38"><name pos:start="141:36" pos:end="141:36">i</name><operator pos:start="141:37" pos:end="141:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="143:13" pos:end="145:81"><block_content pos:start="143:13" pos:end="145:81">

            <expr_stmt pos:start="143:13" pos:end="145:81"><expr pos:start="143:13" pos:end="145:80"><call pos:start="143:13" pos:end="145:80"><name pos:start="143:13" pos:end="143:25">vect_division</name><argument_list pos:start="143:26" pos:end="145:80">(<argument pos:start="143:27" pos:end="143:54"><expr pos:start="143:27" pos:end="143:54"><name pos:start="143:27" pos:end="143:40"><name pos:start="143:27" pos:end="143:30">elbg</name><operator pos:start="143:31" pos:end="143:32">-&gt;</operator><name pos:start="143:33" pos:end="143:40">codebook</name></name> <operator pos:start="143:42" pos:end="143:42">+</operator> <name pos:start="143:44" pos:end="143:44">i</name><operator pos:start="143:45" pos:end="143:45">*</operator><name pos:start="143:46" pos:end="143:54"><name pos:start="143:46" pos:end="143:49">elbg</name><operator pos:start="143:50" pos:end="143:51">-&gt;</operator><name pos:start="143:52" pos:end="143:54">dim</name></name></expr></argument>,

                          <argument pos:start="145:27" pos:end="145:54"><expr pos:start="145:27" pos:end="145:54"><name pos:start="145:27" pos:end="145:40"><name pos:start="145:27" pos:end="145:30">elbg</name><operator pos:start="145:31" pos:end="145:32">-&gt;</operator><name pos:start="145:33" pos:end="145:40">codebook</name></name> <operator pos:start="145:42" pos:end="145:42">+</operator> <name pos:start="145:44" pos:end="145:44">i</name><operator pos:start="145:45" pos:end="145:45">*</operator><name pos:start="145:46" pos:end="145:54"><name pos:start="145:46" pos:end="145:49">elbg</name><operator pos:start="145:50" pos:end="145:51">-&gt;</operator><name pos:start="145:52" pos:end="145:54">dim</name></name></expr></argument>, <argument pos:start="145:57" pos:end="145:68"><expr pos:start="145:57" pos:end="145:68"><name pos:start="145:57" pos:end="145:68"><name pos:start="145:57" pos:end="145:65">size_part</name><index pos:start="145:66" pos:end="145:68">[<expr pos:start="145:67" pos:end="145:67"><name pos:start="145:67" pos:end="145:67">i</name></expr>]</index></name></expr></argument>, <argument pos:start="145:71" pos:end="145:79"><expr pos:start="145:71" pos:end="145:79"><name pos:start="145:71" pos:end="145:79"><name pos:start="145:71" pos:end="145:74">elbg</name><operator pos:start="145:75" pos:end="145:76">-&gt;</operator><name pos:start="145:77" pos:end="145:79">dim</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    </block_content>}</block> while<condition pos:start="149:12" pos:end="151:32">(<expr pos:start="149:13" pos:end="151:31"><operator pos:start="149:13" pos:end="149:13">(</operator><operator pos:start="149:14" pos:end="149:14">(</operator><name pos:start="149:15" pos:end="149:24">last_error</name> <operator pos:start="149:26" pos:end="149:26">-</operator> <name pos:start="149:28" pos:end="149:38"><name pos:start="149:28" pos:end="149:31">elbg</name><operator pos:start="149:32" pos:end="149:33">-&gt;</operator><name pos:start="149:34" pos:end="149:38">error</name></name><operator pos:start="149:39" pos:end="149:39">)</operator> <operator pos:start="149:41" pos:end="149:41">&gt;</operator> <name pos:start="149:43" pos:end="149:55">DELTA_ERR_MAX</name><operator pos:start="149:56" pos:end="149:56">*</operator><name pos:start="149:57" pos:end="149:67"><name pos:start="149:57" pos:end="149:60">elbg</name><operator pos:start="149:61" pos:end="149:62">-&gt;</operator><name pos:start="149:63" pos:end="149:67">error</name></name><operator pos:start="149:68" pos:end="149:68">)</operator> <operator pos:start="149:70" pos:end="149:71">&amp;&amp;</operator>

            <operator pos:start="151:13" pos:end="151:13">(</operator><name pos:start="151:14" pos:end="151:18">steps</name> <operator pos:start="151:20" pos:end="151:20">&lt;</operator> <name pos:start="151:22" pos:end="151:30">max_steps</name><operator pos:start="151:31" pos:end="151:31">)</operator></expr>)</condition>;</do>



    <expr_stmt pos:start="155:5" pos:end="155:21"><expr pos:start="155:5" pos:end="155:20"><call pos:start="155:5" pos:end="155:20"><name pos:start="155:5" pos:end="155:11">av_free</name><argument_list pos:start="155:12" pos:end="155:20">(<argument pos:start="155:13" pos:end="155:19"><expr pos:start="155:13" pos:end="155:19"><name pos:start="155:13" pos:end="155:19">dist_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:23"><expr pos:start="157:5" pos:end="157:22"><call pos:start="157:5" pos:end="157:22"><name pos:start="157:5" pos:end="157:11">av_free</name><argument_list pos:start="157:12" pos:end="157:22">(<argument pos:start="157:13" pos:end="157:21"><expr pos:start="157:13" pos:end="157:21"><name pos:start="157:13" pos:end="157:21">size_part</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:27"><expr pos:start="159:5" pos:end="159:26"><call pos:start="159:5" pos:end="159:26"><name pos:start="159:5" pos:end="159:11">av_free</name><argument_list pos:start="159:12" pos:end="159:26">(<argument pos:start="159:13" pos:end="159:25"><expr pos:start="159:13" pos:end="159:25"><name pos:start="159:13" pos:end="159:25"><name pos:start="159:13" pos:end="159:16">elbg</name><operator pos:start="159:17" pos:end="159:18">-&gt;</operator><name pos:start="159:19" pos:end="159:25">utility</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:25"><expr pos:start="161:5" pos:end="161:24"><call pos:start="161:5" pos:end="161:24"><name pos:start="161:5" pos:end="161:11">av_free</name><argument_list pos:start="161:12" pos:end="161:24">(<argument pos:start="161:13" pos:end="161:23"><expr pos:start="161:13" pos:end="161:23"><name pos:start="161:13" pos:end="161:23">list_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:25"><expr pos:start="163:5" pos:end="163:24"><call pos:start="163:5" pos:end="163:24"><name pos:start="163:5" pos:end="163:11">av_free</name><argument_list pos:start="163:12" pos:end="163:24">(<argument pos:start="163:13" pos:end="163:23"><expr pos:start="163:13" pos:end="163:23"><name pos:start="163:13" pos:end="163:23"><name pos:start="163:13" pos:end="163:16">elbg</name><operator pos:start="163:17" pos:end="163:18">-&gt;</operator><name pos:start="163:19" pos:end="163:23">cells</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:31"><expr pos:start="165:5" pos:end="165:30"><call pos:start="165:5" pos:end="165:30"><name pos:start="165:5" pos:end="165:11">av_free</name><argument_list pos:start="165:12" pos:end="165:30">(<argument pos:start="165:13" pos:end="165:29"><expr pos:start="165:13" pos:end="165:29"><name pos:start="165:13" pos:end="165:29"><name pos:start="165:13" pos:end="165:16">elbg</name><operator pos:start="165:17" pos:end="165:18">-&gt;</operator><name pos:start="165:19" pos:end="165:29">utility_inc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:30"><expr pos:start="167:5" pos:end="167:29"><call pos:start="167:5" pos:end="167:29"><name pos:start="167:5" pos:end="167:11">av_free</name><argument_list pos:start="167:12" pos:end="167:29">(<argument pos:start="167:13" pos:end="167:28"><expr pos:start="167:13" pos:end="167:28"><name pos:start="167:13" pos:end="167:28"><name pos:start="167:13" pos:end="167:16">elbg</name><operator pos:start="167:17" pos:end="167:18">-&gt;</operator><name pos:start="167:19" pos:end="167:28">scratchbuf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
