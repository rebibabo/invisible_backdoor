<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23054.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">setup_rt_frame</name><parameter_list pos:start="1:27" pos:end="5:68">(<parameter pos:start="1:28" pos:end="1:34"><decl pos:start="1:28" pos:end="1:34"><type pos:start="1:28" pos:end="1:34"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:34">sig</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:63"><decl pos:start="1:37" pos:end="1:63"><type pos:start="1:37" pos:end="1:63"><name pos:start="1:37" pos:end="1:59"><name pos:start="1:37" pos:end="1:42">struct</name> <name pos:start="1:44" pos:end="1:59">target_sigaction</name></name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">ka</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:49"><decl pos:start="3:28" pos:end="3:49"><type pos:start="3:28" pos:end="3:49"><name pos:start="3:28" pos:end="3:43">target_siginfo_t</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">info</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:47"><decl pos:start="5:28" pos:end="5:47"><type pos:start="5:28" pos:end="5:47"><name pos:start="5:28" pos:end="5:42">target_sigset_t</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:47">set</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:67"><decl pos:start="5:50" pos:end="5:67"><type pos:start="5:50" pos:end="5:67"><name pos:start="5:50" pos:end="5:62">CPUS390XState</name> <modifier pos:start="5:64" pos:end="5:64">*</modifier></type><name pos:start="5:65" pos:end="5:67">env</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="127:1">{<block_content pos:start="9:5" pos:end="125:30">

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">rt_sigframe</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:22">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:13">abi_ulong</name></type> <name pos:start="13:15" pos:end="13:24">frame_addr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:14">frame_addr</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <call pos:start="17:18" pos:end="17:53"><name pos:start="17:18" pos:end="17:29">get_sigframe</name><argument_list pos:start="17:30" pos:end="17:53">(<argument pos:start="17:31" pos:end="17:32"><expr pos:start="17:31" pos:end="17:32"><name pos:start="17:31" pos:end="17:32">ka</name></expr></argument>, <argument pos:start="17:35" pos:end="17:37"><expr pos:start="17:35" pos:end="17:37"><name pos:start="17:35" pos:end="17:37">env</name></expr></argument>, <argument pos:start="17:40" pos:end="17:52"><expr pos:start="17:40" pos:end="17:52"><sizeof pos:start="17:40" pos:end="17:45">sizeof <name/></sizeof>*<name pos:start="17:48" pos:end="17:52">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="21:45"><expr pos:start="19:5" pos:end="21:44"><call pos:start="19:5" pos:end="21:44"><name pos:start="19:5" pos:end="19:12">qemu_log</name><argument_list pos:start="19:13" pos:end="21:44">(<argument pos:start="19:14" pos:end="19:38"><expr pos:start="19:14" pos:end="19:38"><literal type="string" pos:start="19:14" pos:end="19:38">"%s: frame_addr 0x%llx\n"</literal></expr></argument>, <argument pos:start="19:41" pos:end="19:52"><expr pos:start="19:41" pos:end="19:52"><name pos:start="19:41" pos:end="19:52">__FUNCTION__</name></expr></argument>,

             <argument pos:start="21:14" pos:end="21:43"><expr pos:start="21:14" pos:end="21:43"><operator pos:start="21:14" pos:end="21:14">(</operator><name pos:start="21:15" pos:end="21:22">unsigned</name> <name pos:start="21:24" pos:end="21:27">long</name> <name pos:start="21:29" pos:end="21:32">long</name><operator pos:start="21:33" pos:end="21:33">)</operator><name pos:start="21:34" pos:end="21:43">frame_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:62">(<expr pos:start="23:9" pos:end="23:61"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:61"><name pos:start="23:10" pos:end="23:25">lock_user_struct</name><argument_list pos:start="23:26" pos:end="23:61">(<argument pos:start="23:27" pos:end="23:38"><expr pos:start="23:27" pos:end="23:38"><name pos:start="23:27" pos:end="23:38">VERIFY_WRITE</name></expr></argument>, <argument pos:start="23:41" pos:end="23:45"><expr pos:start="23:41" pos:end="23:45"><name pos:start="23:41" pos:end="23:45">frame</name></expr></argument>, <argument pos:start="23:48" pos:end="23:57"><expr pos:start="23:48" pos:end="23:57"><name pos:start="23:48" pos:end="23:57">frame_addr</name></expr></argument>, <argument pos:start="23:60" pos:end="23:60"><expr pos:start="23:60" pos:end="23:60"><literal type="number" pos:start="23:60" pos:end="23:60">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:64" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:26">

        <goto pos:start="25:9" pos:end="25:26">goto <name pos:start="25:14" pos:end="25:25">give_sigsegv</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:38"><expr pos:start="31:5" pos:end="31:37"><call pos:start="31:5" pos:end="31:37"><name pos:start="31:5" pos:end="31:12">qemu_log</name><argument_list pos:start="31:13" pos:end="31:37">(<argument pos:start="31:14" pos:end="31:22"><expr pos:start="31:14" pos:end="31:22"><literal type="string" pos:start="31:14" pos:end="31:22">"%s: 1\n"</literal></expr></argument>, <argument pos:start="31:25" pos:end="31:36"><expr pos:start="31:25" pos:end="31:36"><name pos:start="31:25" pos:end="31:36">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:49">(<expr pos:start="33:9" pos:end="33:48"><call pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:28">copy_siginfo_to_user</name><argument_list pos:start="33:29" pos:end="33:48">(<argument pos:start="33:30" pos:end="33:41"><expr pos:start="33:30" pos:end="33:41"><operator pos:start="33:30" pos:end="33:30">&amp;</operator><name pos:start="33:31" pos:end="33:41"><name pos:start="33:31" pos:end="33:35">frame</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:41">info</name></name></expr></argument>, <argument pos:start="33:44" pos:end="33:47"><expr pos:start="33:44" pos:end="33:47"><name pos:start="33:44" pos:end="33:47">info</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:51" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:26">

        <goto pos:start="35:9" pos:end="35:26">goto <name pos:start="35:14" pos:end="35:25">give_sigsegv</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:31">/* Create the ucontext.  */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:40"><expr pos:start="43:5" pos:end="43:39"><call pos:start="43:5" pos:end="43:39"><name pos:start="43:5" pos:end="43:14">__put_user</name><argument_list pos:start="43:15" pos:end="43:39">(<argument pos:start="43:16" pos:end="43:16"><expr pos:start="43:16" pos:end="43:16"><literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr></argument>, <argument pos:start="43:19" pos:end="43:38"><expr pos:start="43:19" pos:end="43:38"><operator pos:start="43:19" pos:end="43:19">&amp;</operator><name pos:start="43:20" pos:end="43:38"><name pos:start="43:20" pos:end="43:24">frame</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:28">uc</name><operator pos:start="43:29" pos:end="43:29">.</operator><name pos:start="43:30" pos:end="43:38">tuc_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:63"><expr pos:start="45:5" pos:end="45:62"><call pos:start="45:5" pos:end="45:62"><name pos:start="45:5" pos:end="45:14">__put_user</name><argument_list pos:start="45:15" pos:end="45:62">(<argument pos:start="45:16" pos:end="45:27"><expr pos:start="45:16" pos:end="45:27"><operator pos:start="45:16" pos:end="45:16">(</operator><name pos:start="45:17" pos:end="45:25">abi_ulong</name><operator pos:start="45:26" pos:end="45:26">)</operator><literal type="number" pos:start="45:27" pos:end="45:27">0</literal></expr></argument>, <argument pos:start="45:30" pos:end="45:61"><expr pos:start="45:30" pos:end="45:61"><operator pos:start="45:30" pos:end="45:30">(</operator><name pos:start="45:31" pos:end="45:39">abi_ulong</name> <operator pos:start="45:41" pos:end="45:41">*</operator><operator pos:start="45:42" pos:end="45:42">)</operator><operator pos:start="45:43" pos:end="45:43">&amp;</operator><name pos:start="45:44" pos:end="45:61"><name pos:start="45:44" pos:end="45:48">frame</name><operator pos:start="45:49" pos:end="45:50">-&gt;</operator><name pos:start="45:51" pos:end="45:52">uc</name><operator pos:start="45:53" pos:end="45:53">.</operator><name pos:start="45:54" pos:end="45:61">tuc_link</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:74"><expr pos:start="47:5" pos:end="47:73"><call pos:start="47:5" pos:end="47:73"><name pos:start="47:5" pos:end="47:14">__put_user</name><argument_list pos:start="47:15" pos:end="47:73">(<argument pos:start="47:16" pos:end="47:44"><expr pos:start="47:16" pos:end="47:44"><name pos:start="47:16" pos:end="47:44"><name pos:start="47:16" pos:end="47:38">target_sigaltstack_used</name><operator pos:start="47:39" pos:end="47:39">.</operator><name pos:start="47:40" pos:end="47:44">ss_sp</name></name></expr></argument>, <argument pos:start="47:47" pos:end="47:72"><expr pos:start="47:47" pos:end="47:72"><operator pos:start="47:47" pos:end="47:47">&amp;</operator><name pos:start="47:48" pos:end="47:72"><name pos:start="47:48" pos:end="47:52">frame</name><operator pos:start="47:53" pos:end="47:54">-&gt;</operator><name pos:start="47:55" pos:end="47:56">uc</name><operator pos:start="47:57" pos:end="47:57">.</operator><name pos:start="47:58" pos:end="47:66">tuc_stack</name><operator pos:start="47:67" pos:end="47:67">.</operator><name pos:start="47:68" pos:end="47:72">ss_sp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="51:53"><expr pos:start="49:5" pos:end="51:52"><call pos:start="49:5" pos:end="51:52"><name pos:start="49:5" pos:end="49:14">__put_user</name><argument_list pos:start="49:15" pos:end="51:52">(<argument pos:start="49:16" pos:end="49:54"><expr pos:start="49:16" pos:end="49:54"><call pos:start="49:16" pos:end="49:54"><name pos:start="49:16" pos:end="49:27">sas_ss_flags</name><argument_list pos:start="49:28" pos:end="49:54">(<argument pos:start="49:29" pos:end="49:53"><expr pos:start="49:29" pos:end="49:53"><call pos:start="49:29" pos:end="49:53"><name pos:start="49:29" pos:end="49:48">get_sp_from_cpustate</name><argument_list pos:start="49:49" pos:end="49:53">(<argument pos:start="49:50" pos:end="49:52"><expr pos:start="49:50" pos:end="49:52"><name pos:start="49:50" pos:end="49:52">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,

                      <argument pos:start="51:23" pos:end="51:51"><expr pos:start="51:23" pos:end="51:51"><operator pos:start="51:23" pos:end="51:23">&amp;</operator><name pos:start="51:24" pos:end="51:51"><name pos:start="51:24" pos:end="51:28">frame</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:32">uc</name><operator pos:start="51:33" pos:end="51:33">.</operator><name pos:start="51:34" pos:end="51:42">tuc_stack</name><operator pos:start="51:43" pos:end="51:43">.</operator><name pos:start="51:44" pos:end="51:51">ss_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:78"><expr pos:start="53:5" pos:end="53:77"><call pos:start="53:5" pos:end="53:77"><name pos:start="53:5" pos:end="53:14">__put_user</name><argument_list pos:start="53:15" pos:end="53:77">(<argument pos:start="53:16" pos:end="53:46"><expr pos:start="53:16" pos:end="53:46"><name pos:start="53:16" pos:end="53:46"><name pos:start="53:16" pos:end="53:38">target_sigaltstack_used</name><operator pos:start="53:39" pos:end="53:39">.</operator><name pos:start="53:40" pos:end="53:46">ss_size</name></name></expr></argument>, <argument pos:start="53:49" pos:end="53:76"><expr pos:start="53:49" pos:end="53:76"><operator pos:start="53:49" pos:end="53:49">&amp;</operator><name pos:start="53:50" pos:end="53:76"><name pos:start="53:50" pos:end="53:54">frame</name><operator pos:start="53:55" pos:end="53:56">-&gt;</operator><name pos:start="53:57" pos:end="53:58">uc</name><operator pos:start="53:59" pos:end="53:59">.</operator><name pos:start="53:60" pos:end="53:68">tuc_stack</name><operator pos:start="53:69" pos:end="53:69">.</operator><name pos:start="53:70" pos:end="53:76">ss_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:47"><expr pos:start="55:5" pos:end="55:46"><call pos:start="55:5" pos:end="55:46"><name pos:start="55:5" pos:end="55:16">save_sigregs</name><argument_list pos:start="55:17" pos:end="55:46">(<argument pos:start="55:18" pos:end="55:20"><expr pos:start="55:18" pos:end="55:20"><name pos:start="55:18" pos:end="55:20">env</name></expr></argument>, <argument pos:start="55:23" pos:end="55:45"><expr pos:start="55:23" pos:end="55:45"><operator pos:start="55:23" pos:end="55:23">&amp;</operator><name pos:start="55:24" pos:end="55:45"><name pos:start="55:24" pos:end="55:28">frame</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:32">uc</name><operator pos:start="55:33" pos:end="55:33">.</operator><name pos:start="55:34" pos:end="55:45">tuc_mcontext</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="57:5" pos:end="63:5">for <control pos:start="57:9" pos:end="57:43">(<init pos:start="57:10" pos:end="57:15"><expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:10">i</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>;</init> <condition pos:start="57:17" pos:end="57:38"><expr pos:start="57:17" pos:end="57:37"><name pos:start="57:17" pos:end="57:17">i</name> <operator pos:start="57:19" pos:end="57:19">&lt;</operator> <name pos:start="57:21" pos:end="57:37">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="57:40" pos:end="57:42"><expr pos:start="57:40" pos:end="57:42"><name pos:start="57:40" pos:end="57:40">i</name><operator pos:start="57:41" pos:end="57:42">++</operator></expr></incr>)</control> <block pos:start="57:45" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:52">

        <expr_stmt pos:start="59:9" pos:end="61:52"><expr pos:start="59:9" pos:end="61:51"><call pos:start="59:9" pos:end="61:51"><name pos:start="59:9" pos:end="59:18">__put_user</name><argument_list pos:start="59:19" pos:end="61:51">(<argument pos:start="59:20" pos:end="59:41"><expr pos:start="59:20" pos:end="59:41"><operator pos:start="59:20" pos:end="59:20">(</operator><name pos:start="59:21" pos:end="59:29">abi_ulong</name><operator pos:start="59:30" pos:end="59:30">)</operator><name pos:start="59:31" pos:end="59:41"><name pos:start="59:31" pos:end="59:33">set</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:38">sig</name><index pos:start="59:39" pos:end="59:41">[<expr pos:start="59:40" pos:end="59:40"><name pos:start="59:40" pos:end="59:40">i</name></expr>]</index></name></expr></argument>,

        <argument pos:start="61:9" pos:end="61:50"><expr pos:start="61:9" pos:end="61:50"><operator pos:start="61:9" pos:end="61:9">(</operator><name pos:start="61:10" pos:end="61:18">abi_ulong</name> <operator pos:start="61:20" pos:end="61:20">*</operator><operator pos:start="61:21" pos:end="61:21">)</operator><operator pos:start="61:22" pos:end="61:22">&amp;</operator><name pos:start="61:23" pos:end="61:50"><name pos:start="61:23" pos:end="61:27">frame</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:31">uc</name><operator pos:start="61:32" pos:end="61:32">.</operator><name pos:start="61:33" pos:end="61:43">tuc_sigmask</name><operator pos:start="61:44" pos:end="61:44">.</operator><name pos:start="61:45" pos:end="61:47">sig</name><index pos:start="61:48" pos:end="61:50">[<expr pos:start="61:49" pos:end="61:49"><name pos:start="61:49" pos:end="61:49">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="67:5" pos:end="69:32">/* Set up to return from userspace.  If provided, use a stub

       already in userspace.  */</comment>

    <if_stmt pos:start="71:5" pos:end="87:5"><if pos:start="71:5" pos:end="75:5">if <condition pos:start="71:8" pos:end="71:42">(<expr pos:start="71:9" pos:end="71:41"><name pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:10">ka</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:20">sa_flags</name></name> <operator pos:start="71:22" pos:end="71:22">&amp;</operator> <name pos:start="71:24" pos:end="71:41">TARGET_SA_RESTORER</name></expr>)</condition> <block pos:start="71:44" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:73">

        <expr_stmt pos:start="73:9" pos:end="73:73"><expr pos:start="73:9" pos:end="73:72"><name pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:11">env</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:17">regs</name><index pos:start="73:18" pos:end="73:21">[<expr pos:start="73:19" pos:end="73:20"><literal type="number" pos:start="73:19" pos:end="73:20">14</literal></expr>]</index></name> <operator pos:start="73:23" pos:end="73:23">=</operator> <operator pos:start="73:25" pos:end="73:25">(</operator><name pos:start="73:26" pos:end="73:33">unsigned</name> <name pos:start="73:35" pos:end="73:38">long</name><operator pos:start="73:39" pos:end="73:39">)</operator> <name pos:start="73:41" pos:end="73:55"><name pos:start="73:41" pos:end="73:42">ka</name><operator pos:start="73:43" pos:end="73:44">-&gt;</operator><name pos:start="73:45" pos:end="73:55">sa_restorer</name></name> <operator pos:start="73:57" pos:end="73:57">|</operator> <name pos:start="73:59" pos:end="73:72">PSW_ADDR_AMODE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="75:7" pos:end="87:5">else <block pos:start="75:12" pos:end="87:5">{<block_content pos:start="77:9" pos:end="85:9">

        <expr_stmt pos:start="77:9" pos:end="77:72"><expr pos:start="77:9" pos:end="77:71"><name pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:11">env</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:17">regs</name><index pos:start="77:18" pos:end="77:21">[<expr pos:start="77:19" pos:end="77:20"><literal type="number" pos:start="77:19" pos:end="77:20">14</literal></expr>]</index></name> <operator pos:start="77:23" pos:end="77:23">=</operator> <operator pos:start="77:25" pos:end="77:25">(</operator><name pos:start="77:26" pos:end="77:33">unsigned</name> <name pos:start="77:35" pos:end="77:38">long</name><operator pos:start="77:39" pos:end="77:39">)</operator> <name pos:start="77:41" pos:end="77:54"><name pos:start="77:41" pos:end="77:45">frame</name><operator pos:start="77:46" pos:end="77:47">-&gt;</operator><name pos:start="77:48" pos:end="77:54">retcode</name></name> <operator pos:start="77:56" pos:end="77:56">|</operator> <name pos:start="77:58" pos:end="77:71">PSW_ADDR_AMODE</name></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="85:9"><if pos:start="79:9" pos:end="85:9">if <condition pos:start="79:12" pos:end="81:53">(<expr pos:start="79:13" pos:end="81:52"><call pos:start="79:13" pos:end="81:52"><name pos:start="79:13" pos:end="79:22">__put_user</name><argument_list pos:start="79:23" pos:end="81:52">(<argument pos:start="79:24" pos:end="79:67"><expr pos:start="79:24" pos:end="79:67"><name pos:start="79:24" pos:end="79:42">S390_SYSCALL_OPCODE</name> <operator pos:start="79:44" pos:end="79:44">|</operator> <name pos:start="79:46" pos:end="79:67">TARGET_NR_rt_sigreturn</name></expr></argument>,

                       <argument pos:start="81:24" pos:end="81:51"><expr pos:start="81:24" pos:end="81:51"><operator pos:start="81:24" pos:end="81:24">(</operator><name pos:start="81:25" pos:end="81:32">uint16_t</name> <operator pos:start="81:34" pos:end="81:34">*</operator><operator pos:start="81:35" pos:end="81:35">)</operator><operator pos:start="81:36" pos:end="81:36">(</operator><name pos:start="81:37" pos:end="81:50"><name pos:start="81:37" pos:end="81:41">frame</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:50">retcode</name></name><operator pos:start="81:51" pos:end="81:51">)</operator></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:55" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:30">

            <goto pos:start="83:13" pos:end="83:30">goto <name pos:start="83:18" pos:end="83:29">give_sigsegv</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="91:5" pos:end="91:27">/* Set up backchain. */</comment>

    <if_stmt pos:start="93:5" pos:end="97:5"><if pos:start="93:5" pos:end="97:5">if <condition pos:start="93:8" pos:end="93:55">(<expr pos:start="93:9" pos:end="93:54"><call pos:start="93:9" pos:end="93:54"><name pos:start="93:9" pos:end="93:18">__put_user</name><argument_list pos:start="93:19" pos:end="93:54">(<argument pos:start="93:20" pos:end="93:32"><expr pos:start="93:20" pos:end="93:32"><name pos:start="93:20" pos:end="93:32"><name pos:start="93:20" pos:end="93:22">env</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:28">regs</name><index pos:start="93:29" pos:end="93:32">[<expr pos:start="93:30" pos:end="93:31"><literal type="number" pos:start="93:30" pos:end="93:31">15</literal></expr>]</index></name></expr></argument>, <argument pos:start="93:35" pos:end="93:53"><expr pos:start="93:35" pos:end="93:53"><operator pos:start="93:35" pos:end="93:35">(</operator><name pos:start="93:36" pos:end="93:44">abi_ulong</name> <operator pos:start="93:46" pos:end="93:46">*</operator><operator pos:start="93:47" pos:end="93:47">)</operator> <name pos:start="93:49" pos:end="93:53">frame</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:57" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:26">

        <goto pos:start="95:9" pos:end="95:26">goto <name pos:start="95:14" pos:end="95:25">give_sigsegv</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="101:5" pos:end="101:45">/* Set up registers for signal handler */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:31"><expr pos:start="103:5" pos:end="103:30"><name pos:start="103:5" pos:end="103:17"><name pos:start="103:5" pos:end="103:7">env</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:13">regs</name><index pos:start="103:14" pos:end="103:17">[<expr pos:start="103:15" pos:end="103:16"><literal type="number" pos:start="103:15" pos:end="103:16">15</literal></expr>]</index></name> <operator pos:start="103:19" pos:end="103:19">=</operator> <name pos:start="103:21" pos:end="103:30">frame_addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:68"><expr pos:start="105:5" pos:end="105:67"><name pos:start="105:5" pos:end="105:17"><name pos:start="105:5" pos:end="105:7">env</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:12">psw</name><operator pos:start="105:13" pos:end="105:13">.</operator><name pos:start="105:14" pos:end="105:17">addr</name></name> <operator pos:start="105:19" pos:end="105:19">=</operator> <operator pos:start="105:21" pos:end="105:21">(</operator><name pos:start="105:22" pos:end="105:33">target_ulong</name><operator pos:start="105:34" pos:end="105:34">)</operator> <name pos:start="105:36" pos:end="105:50"><name pos:start="105:36" pos:end="105:37">ka</name><operator pos:start="105:38" pos:end="105:39">-&gt;</operator><name pos:start="105:40" pos:end="105:50">_sa_handler</name></name> <operator pos:start="105:52" pos:end="105:52">|</operator> <name pos:start="105:54" pos:end="105:67">PSW_ADDR_AMODE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:23"><expr pos:start="109:5" pos:end="109:22"><name pos:start="109:5" pos:end="109:16"><name pos:start="109:5" pos:end="109:7">env</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:13">regs</name><index pos:start="109:14" pos:end="109:16">[<expr pos:start="109:15" pos:end="109:15"><literal type="number" pos:start="109:15" pos:end="109:15">2</literal></expr>]</index></name> <operator pos:start="109:18" pos:end="109:18">=</operator> <name pos:start="109:20" pos:end="109:22">sig</name></expr>;</expr_stmt> <comment type="line" pos:start="109:25" pos:end="109:42">//map_signal(sig);</comment>

    <expr_stmt pos:start="111:5" pos:end="111:63"><expr pos:start="111:5" pos:end="111:62"><name pos:start="111:5" pos:end="111:16"><name pos:start="111:5" pos:end="111:7">env</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:13">regs</name><index pos:start="111:14" pos:end="111:16">[<expr pos:start="111:15" pos:end="111:15"><literal type="number" pos:start="111:15" pos:end="111:15">3</literal></expr>]</index></name> <operator pos:start="111:18" pos:end="111:18">=</operator> <name pos:start="111:20" pos:end="111:29">frame_addr</name> <operator pos:start="111:31" pos:end="111:31">+</operator> <call pos:start="111:33" pos:end="111:62"><name pos:start="111:33" pos:end="111:40">offsetof</name><argument_list pos:start="111:41" pos:end="111:62">(<argument pos:start="111:42" pos:end="111:55"><expr pos:start="111:42" pos:end="111:55"><call pos:start="111:42" pos:end="111:55"><name pos:start="111:42" pos:end="111:47">typeof</name><argument_list pos:start="111:48" pos:end="111:55">(<argument pos:start="111:49" pos:end="111:54"><expr pos:start="111:49" pos:end="111:54"><operator pos:start="111:49" pos:end="111:49">*</operator><name pos:start="111:50" pos:end="111:54">frame</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="111:58" pos:end="111:61"><expr pos:start="111:58" pos:end="111:61"><name pos:start="111:58" pos:end="111:61">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:61"><expr pos:start="113:5" pos:end="113:60"><name pos:start="113:5" pos:end="113:16"><name pos:start="113:5" pos:end="113:7">env</name><operator pos:start="113:8" pos:end="113:9">-&gt;</operator><name pos:start="113:10" pos:end="113:13">regs</name><index pos:start="113:14" pos:end="113:16">[<expr pos:start="113:15" pos:end="113:15"><literal type="number" pos:start="113:15" pos:end="113:15">4</literal></expr>]</index></name> <operator pos:start="113:18" pos:end="113:18">=</operator> <name pos:start="113:20" pos:end="113:29">frame_addr</name> <operator pos:start="113:31" pos:end="113:31">+</operator> <call pos:start="113:33" pos:end="113:60"><name pos:start="113:33" pos:end="113:40">offsetof</name><argument_list pos:start="113:41" pos:end="113:60">(<argument pos:start="113:42" pos:end="113:55"><expr pos:start="113:42" pos:end="113:55"><call pos:start="113:42" pos:end="113:55"><name pos:start="113:42" pos:end="113:47">typeof</name><argument_list pos:start="113:48" pos:end="113:55">(<argument pos:start="113:49" pos:end="113:54"><expr pos:start="113:49" pos:end="113:54"><operator pos:start="113:49" pos:end="113:49">*</operator><name pos:start="113:50" pos:end="113:54">frame</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="113:58" pos:end="113:59"><expr pos:start="113:58" pos:end="113:59"><name pos:start="113:58" pos:end="113:59">uc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="115:5" pos:end="115:11">return;</return>



<label pos:start="119:1" pos:end="119:13"><name pos:start="119:1" pos:end="119:12">give_sigsegv</name>:</label>

    <expr_stmt pos:start="121:5" pos:end="121:49"><expr pos:start="121:5" pos:end="121:48"><call pos:start="121:5" pos:end="121:48"><name pos:start="121:5" pos:end="121:12">qemu_log</name><argument_list pos:start="121:13" pos:end="121:48">(<argument pos:start="121:14" pos:end="121:33"><expr pos:start="121:14" pos:end="121:33"><literal type="string" pos:start="121:14" pos:end="121:33">"%s: give_sigsegv\n"</literal></expr></argument>, <argument pos:start="121:36" pos:end="121:47"><expr pos:start="121:36" pos:end="121:47"><name pos:start="121:36" pos:end="121:47">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:45"><expr pos:start="123:5" pos:end="123:44"><call pos:start="123:5" pos:end="123:44"><name pos:start="123:5" pos:end="123:22">unlock_user_struct</name><argument_list pos:start="123:23" pos:end="123:44">(<argument pos:start="123:24" pos:end="123:28"><expr pos:start="123:24" pos:end="123:28"><name pos:start="123:24" pos:end="123:28">frame</name></expr></argument>, <argument pos:start="123:31" pos:end="123:40"><expr pos:start="123:31" pos:end="123:40"><name pos:start="123:31" pos:end="123:40">frame_addr</name></expr></argument>, <argument pos:start="123:43" pos:end="123:43"><expr pos:start="123:43" pos:end="123:43"><literal type="number" pos:start="123:43" pos:end="123:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:30"><expr pos:start="125:5" pos:end="125:29"><call pos:start="125:5" pos:end="125:29"><name pos:start="125:5" pos:end="125:13">force_sig</name><argument_list pos:start="125:14" pos:end="125:29">(<argument pos:start="125:15" pos:end="125:28"><expr pos:start="125:15" pos:end="125:28"><name pos:start="125:15" pos:end="125:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
