<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12986.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">ac3_eac3_probe</name><parameter_list pos:start="1:26" pos:end="1:73">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:37">AVProbeData</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">p</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:72"><decl pos:start="1:43" pos:end="1:72"><type pos:start="1:43" pos:end="1:72"><name pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:46">enum</name> <name pos:start="1:48" pos:end="1:54">CodecID</name></name></type> <name pos:start="1:56" pos:end="1:72">expected_codec_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:36">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:18">max_frames</name></decl>, <decl pos:start="5:21" pos:end="5:36"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:21" pos:end="5:32">first_frames</name> <init pos:start="5:34" pos:end="5:36">= <expr pos:start="5:36" pos:end="5:36"><literal type="number" pos:start="5:36" pos:end="5:36">0</literal></expr></init></decl>, <decl pos:start="5:39" pos:end="5:44"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:39" pos:end="5:44">frames</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">buf</name></decl>, <decl pos:start="7:19" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:23">buf2</name></decl>, <decl pos:start="7:26" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:29">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">AC3HeaderInfo</name></type> <name pos:start="9:19" pos:end="9:21">hdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17">GetBitContext</name></type> <name pos:start="11:19" pos:end="11:21">gbc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:40"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:8">enum</name> <name pos:start="13:10" pos:end="13:16">CodecID</name></name></type> <name pos:start="13:18" pos:end="13:25">codec_id</name> <init pos:start="13:27" pos:end="13:40">= <expr pos:start="13:29" pos:end="13:40"><name pos:start="13:29" pos:end="13:40">CODEC_ID_AC3</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:14">max_frames</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:17"><expr pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:7">buf</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <name pos:start="19:11" pos:end="19:16"><name pos:start="19:11" pos:end="19:11">p</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:16">buf</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:28"><expr pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:7">end</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <name pos:start="21:11" pos:end="21:13">buf</name> <operator pos:start="21:15" pos:end="21:15">+</operator> <name pos:start="21:17" pos:end="21:27"><name pos:start="21:17" pos:end="21:17">p</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:27">buf_size</name></name></expr>;</expr_stmt>



    <for pos:start="25:5" pos:end="59:5">for<control pos:start="25:8" pos:end="25:27">(<init pos:start="25:9" pos:end="25:9">;</init> <condition pos:start="25:11" pos:end="25:20"><expr pos:start="25:11" pos:end="25:19"><name pos:start="25:11" pos:end="25:13">buf</name> <operator pos:start="25:15" pos:end="25:15">&lt;</operator> <name pos:start="25:17" pos:end="25:19">end</name></expr>;</condition> <incr pos:start="25:22" pos:end="25:26"><expr pos:start="25:22" pos:end="25:26"><name pos:start="25:22" pos:end="25:24">buf</name><operator pos:start="25:25" pos:end="25:26">++</operator></expr></incr>)</control> <block pos:start="25:29" pos:end="59:5">{<block_content pos:start="27:9" pos:end="57:34">

        <expr_stmt pos:start="27:9" pos:end="27:19"><expr pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:12">buf2</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:18">buf</name></expr>;</expr_stmt>



        <for pos:start="31:9" pos:end="51:9">for<control pos:start="31:12" pos:end="31:45">(<init pos:start="31:13" pos:end="31:23"><expr pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:18">frames</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr>;</init> <condition pos:start="31:25" pos:end="31:35"><expr pos:start="31:25" pos:end="31:34"><name pos:start="31:25" pos:end="31:28">buf2</name> <operator pos:start="31:30" pos:end="31:30">&lt;</operator> <name pos:start="31:32" pos:end="31:34">end</name></expr>;</condition> <incr pos:start="31:37" pos:end="31:44"><expr pos:start="31:37" pos:end="31:44"><name pos:start="31:37" pos:end="31:42">frames</name><operator pos:start="31:43" pos:end="31:44">++</operator></expr></incr>)</control> <block pos:start="31:47" pos:end="51:9">{<block_content pos:start="33:13" pos:end="49:35">

            <expr_stmt pos:start="33:13" pos:end="33:42"><expr pos:start="33:13" pos:end="33:41"><call pos:start="33:13" pos:end="33:41"><name pos:start="33:13" pos:end="33:25">init_get_bits</name><argument_list pos:start="33:26" pos:end="33:41">(<argument pos:start="33:27" pos:end="33:30"><expr pos:start="33:27" pos:end="33:30"><operator pos:start="33:27" pos:end="33:27">&amp;</operator><name pos:start="33:28" pos:end="33:30">gbc</name></expr></argument>, <argument pos:start="33:33" pos:end="33:36"><expr pos:start="33:33" pos:end="33:36"><name pos:start="33:33" pos:end="33:36">buf2</name></expr></argument>, <argument pos:start="33:39" pos:end="33:40"><expr pos:start="33:39" pos:end="33:40"><literal type="number" pos:start="33:39" pos:end="33:40">54</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="37:22"><if pos:start="35:13" pos:end="37:22">if<condition pos:start="35:15" pos:end="35:55">(<expr pos:start="35:16" pos:end="35:54"><call pos:start="35:16" pos:end="35:50"><name pos:start="35:16" pos:end="35:38">avpriv_ac3_parse_header</name><argument_list pos:start="35:39" pos:end="35:50">(<argument pos:start="35:40" pos:end="35:43"><expr pos:start="35:40" pos:end="35:43"><operator pos:start="35:40" pos:end="35:40">&amp;</operator><name pos:start="35:41" pos:end="35:43">gbc</name></expr></argument>, <argument pos:start="35:46" pos:end="35:49"><expr pos:start="35:46" pos:end="35:49"><operator pos:start="35:46" pos:end="35:46">&amp;</operator><name pos:start="35:47" pos:end="35:49">hdr</name></expr></argument>)</argument_list></call> <operator pos:start="35:52" pos:end="35:52">&lt;</operator> <literal type="number" pos:start="35:54" pos:end="35:54">0</literal></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:22"><block_content pos:start="37:17" pos:end="37:22">

                <break pos:start="37:17" pos:end="37:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="39:13" pos:end="43:22"><if pos:start="39:13" pos:end="43:22">if<condition pos:start="39:15" pos:end="41:89">(<expr pos:start="39:16" pos:end="41:88"><name pos:start="39:16" pos:end="39:19">buf2</name> <operator pos:start="39:21" pos:end="39:21">+</operator> <name pos:start="39:23" pos:end="39:36"><name pos:start="39:23" pos:end="39:25">hdr</name><operator pos:start="39:26" pos:end="39:26">.</operator><name pos:start="39:27" pos:end="39:36">frame_size</name></name> <operator pos:start="39:38" pos:end="39:38">&gt;</operator> <name pos:start="39:40" pos:end="39:42">end</name> <operator pos:start="39:44" pos:end="39:45">||</operator>

               <call pos:start="41:16" pos:end="41:88"><name pos:start="41:16" pos:end="41:21">av_crc</name><argument_list pos:start="41:22" pos:end="41:88">(<argument pos:start="41:23" pos:end="41:54"><expr pos:start="41:23" pos:end="41:54"><call pos:start="41:23" pos:end="41:54"><name pos:start="41:23" pos:end="41:38">av_crc_get_table</name><argument_list pos:start="41:39" pos:end="41:54">(<argument pos:start="41:40" pos:end="41:53"><expr pos:start="41:40" pos:end="41:53"><name pos:start="41:40" pos:end="41:53">AV_CRC_16_ANSI</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:57" pos:end="41:57"><expr pos:start="41:57" pos:end="41:57"><literal type="number" pos:start="41:57" pos:end="41:57">0</literal></expr></argument>, <argument pos:start="41:60" pos:end="41:67"><expr pos:start="41:60" pos:end="41:67"><name pos:start="41:60" pos:end="41:63">buf2</name> <operator pos:start="41:65" pos:end="41:65">+</operator> <literal type="number" pos:start="41:67" pos:end="41:67">2</literal></expr></argument>, <argument pos:start="41:70" pos:end="41:87"><expr pos:start="41:70" pos:end="41:87"><name pos:start="41:70" pos:end="41:83"><name pos:start="41:70" pos:end="41:72">hdr</name><operator pos:start="41:73" pos:end="41:73">.</operator><name pos:start="41:74" pos:end="41:83">frame_size</name></name> <operator pos:start="41:85" pos:end="41:85">-</operator> <literal type="number" pos:start="41:87" pos:end="41:87">2</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="43:22"><block_content pos:start="43:17" pos:end="43:22">

                <break pos:start="43:17" pos:end="43:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="45:13" pos:end="47:41"><if pos:start="45:13" pos:end="47:41">if <condition pos:start="45:16" pos:end="45:38">(<expr pos:start="45:17" pos:end="45:37"><name pos:start="45:17" pos:end="45:32"><name pos:start="45:17" pos:end="45:19">hdr</name><operator pos:start="45:20" pos:end="45:20">.</operator><name pos:start="45:21" pos:end="45:32">bitstream_id</name></name> <operator pos:start="45:34" pos:end="45:34">&gt;</operator> <literal type="number" pos:start="45:36" pos:end="45:37">10</literal></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:41"><block_content pos:start="47:17" pos:end="47:41">

                <expr_stmt pos:start="47:17" pos:end="47:41"><expr pos:start="47:17" pos:end="47:40"><name pos:start="47:17" pos:end="47:24">codec_id</name> <operator pos:start="47:26" pos:end="47:26">=</operator> <name pos:start="47:28" pos:end="47:40">CODEC_ID_EAC3</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:35"><expr pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:16">buf2</name> <operator pos:start="49:18" pos:end="49:19">+=</operator> <name pos:start="49:21" pos:end="49:34"><name pos:start="49:21" pos:end="49:23">hdr</name><operator pos:start="49:24" pos:end="49:24">.</operator><name pos:start="49:25" pos:end="49:34">frame_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="53:9" pos:end="53:47"><expr pos:start="53:9" pos:end="53:46"><name pos:start="53:9" pos:end="53:18">max_frames</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <call pos:start="53:22" pos:end="53:46"><name pos:start="53:22" pos:end="53:26">FFMAX</name><argument_list pos:start="53:27" pos:end="53:46">(<argument pos:start="53:28" pos:end="53:37"><expr pos:start="53:28" pos:end="53:37"><name pos:start="53:28" pos:end="53:37">max_frames</name></expr></argument>, <argument pos:start="53:40" pos:end="53:45"><expr pos:start="53:40" pos:end="53:45"><name pos:start="53:40" pos:end="53:45">frames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="57:34"><if pos:start="55:9" pos:end="57:34">if<condition pos:start="55:11" pos:end="55:25">(<expr pos:start="55:12" pos:end="55:24"><name pos:start="55:12" pos:end="55:14">buf</name> <operator pos:start="55:16" pos:end="55:17">==</operator> <name pos:start="55:19" pos:end="55:24"><name pos:start="55:19" pos:end="55:19">p</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:24">buf</name></name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:34"><block_content pos:start="57:13" pos:end="57:34">

            <expr_stmt pos:start="57:13" pos:end="57:34"><expr pos:start="57:13" pos:end="57:33"><name pos:start="57:13" pos:end="57:24">first_frames</name> <operator pos:start="57:26" pos:end="57:26">=</operator> <name pos:start="57:28" pos:end="57:33">frames</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="61:5" pos:end="61:47"><if pos:start="61:5" pos:end="61:47">if<condition pos:start="61:7" pos:end="61:37">(<expr pos:start="61:8" pos:end="61:36"><name pos:start="61:8" pos:end="61:15">codec_id</name> <operator pos:start="61:17" pos:end="61:18">!=</operator> <name pos:start="61:20" pos:end="61:36">expected_codec_id</name></expr>)</condition><block type="pseudo" pos:start="61:39" pos:end="61:47"><block_content pos:start="61:39" pos:end="61:47"> <return pos:start="61:39" pos:end="61:47">return <expr pos:start="61:46" pos:end="61:46"><literal type="number" pos:start="61:46" pos:end="61:46">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <comment type="line" pos:start="63:5" pos:end="63:59">// keep this in sync with mp3 probe, both need to avoid</comment>

    <comment type="line" pos:start="65:5" pos:end="65:30">// issues with MPEG-files!</comment>

    <if_stmt pos:start="67:5" pos:end="75:36"><if pos:start="67:5" pos:end="67:56">if   <condition pos:start="67:10" pos:end="67:26">(<expr pos:start="67:11" pos:end="67:25"><name pos:start="67:11" pos:end="67:22">first_frames</name><operator pos:start="67:23" pos:end="67:24">&gt;=</operator><literal type="number" pos:start="67:25" pos:end="67:25">4</literal></expr>)</condition><block type="pseudo" pos:start="67:28" pos:end="67:56"><block_content pos:start="67:28" pos:end="67:56"> <return pos:start="67:28" pos:end="67:56">return <expr pos:start="67:35" pos:end="67:55"><name pos:start="67:35" pos:end="67:51">AVPROBE_SCORE_MAX</name><operator pos:start="67:52" pos:end="67:52">/</operator><literal type="number" pos:start="67:53" pos:end="67:54">2</literal><operator pos:start="67:54" pos:end="67:54">+</operator><literal type="number" pos:start="67:55" pos:end="67:55">1</literal></expr>;</return></block_content></block></if>

    <if type="elseif" pos:start="69:5" pos:end="69:54">else if<condition pos:start="69:12" pos:end="69:27">(<expr pos:start="69:13" pos:end="69:26"><name pos:start="69:13" pos:end="69:22">max_frames</name><operator pos:start="69:23" pos:end="69:23">&gt;</operator><literal type="number" pos:start="69:24" pos:end="69:26">500</literal></expr>)</condition><block type="pseudo" pos:start="69:28" pos:end="69:54"><block_content pos:start="69:28" pos:end="69:54"><return pos:start="69:28" pos:end="69:54">return <expr pos:start="69:35" pos:end="69:53"><name pos:start="69:35" pos:end="69:51">AVPROBE_SCORE_MAX</name><operator pos:start="69:52" pos:end="69:52">/</operator><literal type="number" pos:start="69:53" pos:end="69:53">2</literal></expr>;</return></block_content></block></if>

    <if type="elseif" pos:start="71:5" pos:end="71:54">else if<condition pos:start="71:12" pos:end="71:26">(<expr pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:22">max_frames</name><operator pos:start="71:23" pos:end="71:24">&gt;=</operator><literal type="number" pos:start="71:25" pos:end="71:25">4</literal></expr>)</condition><block type="pseudo" pos:start="71:28" pos:end="71:54"><block_content pos:start="71:28" pos:end="71:54"> <return pos:start="71:28" pos:end="71:54">return <expr pos:start="71:35" pos:end="71:53"><name pos:start="71:35" pos:end="71:51">AVPROBE_SCORE_MAX</name><operator pos:start="71:52" pos:end="71:52">/</operator><literal type="number" pos:start="71:53" pos:end="71:53">4</literal></expr>;</return></block_content></block></if>

    <if type="elseif" pos:start="73:5" pos:end="73:36">else if<condition pos:start="73:12" pos:end="73:26">(<expr pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:22">max_frames</name><operator pos:start="73:23" pos:end="73:24">&gt;=</operator><literal type="number" pos:start="73:25" pos:end="73:25">1</literal></expr>)</condition><block type="pseudo" pos:start="73:28" pos:end="73:36"><block_content pos:start="73:28" pos:end="73:36"> <return pos:start="73:28" pos:end="73:36">return <expr pos:start="73:35" pos:end="73:35"><literal type="number" pos:start="73:35" pos:end="73:35">1</literal></expr>;</return></block_content></block></if>

    <else pos:start="75:5" pos:end="75:36">else<block type="pseudo" pos:start="75:28" pos:end="75:36"><block_content pos:start="75:28" pos:end="75:36">                   <return pos:start="75:28" pos:end="75:36">return <expr pos:start="75:35" pos:end="75:35"><literal type="number" pos:start="75:35" pos:end="75:35">0</literal></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
