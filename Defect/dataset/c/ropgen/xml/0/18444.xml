<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18444.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">rtsp_parse_request</name><parameter_list pos:start="1:30" pos:end="1:45">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:41">HTTPContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="175:1">{<block_content pos:start="5:5" pos:end="173:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">p</name></decl>, <decl pos:start="5:20" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:22">p1</name></decl>, <decl pos:start="5:25" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:27">p2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:16"><name pos:start="7:10" pos:end="7:12">cmd</name><index pos:start="7:13" pos:end="7:16">[<expr pos:start="7:14" pos:end="7:15"><literal type="number" pos:start="7:14" pos:end="7:15">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:18"><name pos:start="9:10" pos:end="9:12">url</name><index pos:start="9:13" pos:end="9:18">[<expr pos:start="9:14" pos:end="9:17"><literal type="number" pos:start="9:14" pos:end="9:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:21"><name pos:start="11:10" pos:end="11:17">protocol</name><index pos:start="11:18" pos:end="11:21">[<expr pos:start="11:19" pos:end="11:20"><literal type="number" pos:start="11:19" pos:end="11:20">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:19"><name pos:start="13:10" pos:end="13:13">line</name><index pos:start="13:14" pos:end="13:19">[<expr pos:start="13:15" pos:end="13:18"><literal type="number" pos:start="13:15" pos:end="13:18">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:58"><decl pos:start="17:5" pos:end="17:37"><type pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:21">RTSPMessageHeader</name></type> <name pos:start="17:23" pos:end="17:29">header1</name> <init pos:start="17:31" pos:end="17:37">= <expr pos:start="17:33" pos:end="17:37"><block pos:start="17:33" pos:end="17:37">{ <expr pos:start="17:35" pos:end="17:35"><literal type="number" pos:start="17:35" pos:end="17:35">0</literal></expr> }</block></expr></init></decl>, <decl pos:start="17:40" pos:end="17:57"><type ref="prev" pos:start="17:5" pos:end="17:21"><modifier pos:start="17:40" pos:end="17:40">*</modifier></type><name pos:start="17:41" pos:end="17:46">header</name> <init pos:start="17:48" pos:end="17:57">= <expr pos:start="17:50" pos:end="17:57"><operator pos:start="17:50" pos:end="17:50">&amp;</operator><name pos:start="17:51" pos:end="17:57">header1</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:28"><expr pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:5">c</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:17">buffer_ptr</name><index pos:start="21:18" pos:end="21:20">[<expr pos:start="21:19" pos:end="21:19"><literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr>]</index></name> <operator pos:start="21:22" pos:end="21:22">=</operator> <literal type="char" pos:start="21:24" pos:end="21:27">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:5">p</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:9">c</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:17">buffer</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><call pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:12">get_word</name><argument_list pos:start="27:13" pos:end="27:34">(<argument pos:start="27:14" pos:end="27:16"><expr pos:start="27:14" pos:end="27:16"><name pos:start="27:14" pos:end="27:16">cmd</name></expr></argument>, <argument pos:start="27:19" pos:end="27:29"><expr pos:start="27:19" pos:end="27:29"><sizeof pos:start="27:19" pos:end="27:29">sizeof<argument_list pos:start="27:25" pos:end="27:29">(<argument pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:28">cmd</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:32" pos:end="27:33"><expr pos:start="27:32" pos:end="27:33"><operator pos:start="27:32" pos:end="27:32">&amp;</operator><name pos:start="27:33" pos:end="27:33">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><call pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:12">get_word</name><argument_list pos:start="29:13" pos:end="29:34">(<argument pos:start="29:14" pos:end="29:16"><expr pos:start="29:14" pos:end="29:16"><name pos:start="29:14" pos:end="29:16">url</name></expr></argument>, <argument pos:start="29:19" pos:end="29:29"><expr pos:start="29:19" pos:end="29:29"><sizeof pos:start="29:19" pos:end="29:29">sizeof<argument_list pos:start="29:25" pos:end="29:29">(<argument pos:start="29:26" pos:end="29:28"><expr pos:start="29:26" pos:end="29:28"><name pos:start="29:26" pos:end="29:28">url</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:32" pos:end="29:33"><expr pos:start="29:32" pos:end="29:33"><operator pos:start="29:32" pos:end="29:32">&amp;</operator><name pos:start="29:33" pos:end="29:33">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:45"><expr pos:start="31:5" pos:end="31:44"><call pos:start="31:5" pos:end="31:44"><name pos:start="31:5" pos:end="31:12">get_word</name><argument_list pos:start="31:13" pos:end="31:44">(<argument pos:start="31:14" pos:end="31:21"><expr pos:start="31:14" pos:end="31:21"><name pos:start="31:14" pos:end="31:21">protocol</name></expr></argument>, <argument pos:start="31:24" pos:end="31:39"><expr pos:start="31:24" pos:end="31:39"><sizeof pos:start="31:24" pos:end="31:39">sizeof<argument_list pos:start="31:30" pos:end="31:39">(<argument pos:start="31:31" pos:end="31:38"><expr pos:start="31:31" pos:end="31:38"><name pos:start="31:31" pos:end="31:38">protocol</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="31:42" pos:end="31:43"><expr pos:start="31:42" pos:end="31:43"><operator pos:start="31:42" pos:end="31:42">&amp;</operator><name pos:start="31:43" pos:end="31:43">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:50"><expr pos:start="35:5" pos:end="35:49"><call pos:start="35:5" pos:end="35:49"><name pos:start="35:5" pos:end="35:14">av_strlcpy</name><argument_list pos:start="35:15" pos:end="35:49">(<argument pos:start="35:16" pos:end="35:24"><expr pos:start="35:16" pos:end="35:24"><name pos:start="35:16" pos:end="35:24"><name pos:start="35:16" pos:end="35:16">c</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:24">method</name></name></expr></argument>, <argument pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><name pos:start="35:27" pos:end="35:29">cmd</name></expr></argument>, <argument pos:start="35:32" pos:end="35:48"><expr pos:start="35:32" pos:end="35:48"><sizeof pos:start="35:32" pos:end="35:48">sizeof<argument_list pos:start="35:38" pos:end="35:48">(<argument pos:start="35:39" pos:end="35:47"><expr pos:start="35:39" pos:end="35:47"><name pos:start="35:39" pos:end="35:47"><name pos:start="35:39" pos:end="35:39">c</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:47">method</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:44"><expr pos:start="37:5" pos:end="37:43"><call pos:start="37:5" pos:end="37:43"><name pos:start="37:5" pos:end="37:14">av_strlcpy</name><argument_list pos:start="37:15" pos:end="37:43">(<argument pos:start="37:16" pos:end="37:21"><expr pos:start="37:16" pos:end="37:21"><name pos:start="37:16" pos:end="37:21"><name pos:start="37:16" pos:end="37:16">c</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:21">url</name></name></expr></argument>, <argument pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">url</name></expr></argument>, <argument pos:start="37:29" pos:end="37:42"><expr pos:start="37:29" pos:end="37:42"><sizeof pos:start="37:29" pos:end="37:42">sizeof<argument_list pos:start="37:35" pos:end="37:42">(<argument pos:start="37:36" pos:end="37:41"><expr pos:start="37:36" pos:end="37:41"><name pos:start="37:36" pos:end="37:41"><name pos:start="37:36" pos:end="37:36">c</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:41">url</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:59"><expr pos:start="39:5" pos:end="39:58"><call pos:start="39:5" pos:end="39:58"><name pos:start="39:5" pos:end="39:14">av_strlcpy</name><argument_list pos:start="39:15" pos:end="39:58">(<argument pos:start="39:16" pos:end="39:26"><expr pos:start="39:16" pos:end="39:26"><name pos:start="39:16" pos:end="39:26"><name pos:start="39:16" pos:end="39:16">c</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:26">protocol</name></name></expr></argument>, <argument pos:start="39:29" pos:end="39:36"><expr pos:start="39:29" pos:end="39:36"><name pos:start="39:29" pos:end="39:36">protocol</name></expr></argument>, <argument pos:start="39:39" pos:end="39:57"><expr pos:start="39:39" pos:end="39:57"><sizeof pos:start="39:39" pos:end="39:57">sizeof<argument_list pos:start="39:45" pos:end="39:57">(<argument pos:start="39:46" pos:end="39:56"><expr pos:start="39:46" pos:end="39:56"><name pos:start="39:46" pos:end="39:56"><name pos:start="39:46" pos:end="39:46">c</name><operator pos:start="39:47" pos:end="39:48">-&gt;</operator><name pos:start="39:49" pos:end="39:56">protocol</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:38">(<expr pos:start="43:9" pos:end="43:37"><call pos:start="43:9" pos:end="43:33"><name pos:start="43:9" pos:end="43:25">avio_open_dyn_buf</name><argument_list pos:start="43:26" pos:end="43:33">(<argument pos:start="43:27" pos:end="43:32"><expr pos:start="43:27" pos:end="43:32"><operator pos:start="43:27" pos:end="43:27">&amp;</operator><name pos:start="43:28" pos:end="43:32"><name pos:start="43:28" pos:end="43:28">c</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:32">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="43:35" pos:end="43:35">&lt;</operator> <literal type="number" pos:start="43:37" pos:end="43:37">0</literal></expr>)</condition> <block pos:start="43:40" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:18">

        <comment type="block" pos:start="45:9" pos:end="45:33">/* XXX: cannot do more */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:21"><expr pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:13"><name pos:start="47:9" pos:end="47:9">c</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:13">pb</name></name> <operator pos:start="47:15" pos:end="47:15">=</operator> <name pos:start="47:17" pos:end="47:20">NULL</name></expr>;</expr_stmt> <comment type="block" pos:start="47:23" pos:end="47:34">/* safety */</comment>

        <return pos:start="49:9" pos:end="49:18">return <expr pos:start="49:16" pos:end="49:17"><operator pos:start="49:16" pos:end="49:16">-</operator><literal type="number" pos:start="49:17" pos:end="49:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:28">/* check version name */</comment>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:42">(<expr pos:start="57:9" pos:end="57:41"><call pos:start="57:9" pos:end="57:36"><name pos:start="57:9" pos:end="57:14">strcmp</name><argument_list pos:start="57:15" pos:end="57:36">(<argument pos:start="57:16" pos:end="57:23"><expr pos:start="57:16" pos:end="57:23"><name pos:start="57:16" pos:end="57:23">protocol</name></expr></argument>, <argument pos:start="57:26" pos:end="57:35"><expr pos:start="57:26" pos:end="57:35"><literal type="string" pos:start="57:26" pos:end="57:35">"RTSP/1.0"</literal></expr></argument>)</argument_list></call> <operator pos:start="57:38" pos:end="57:39">!=</operator> <literal type="number" pos:start="57:41" pos:end="57:41">0</literal></expr>)</condition> <block pos:start="57:44" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:21">

        <expr_stmt pos:start="59:9" pos:end="59:49"><expr pos:start="59:9" pos:end="59:48"><call pos:start="59:9" pos:end="59:48"><name pos:start="59:9" pos:end="59:24">rtsp_reply_error</name><argument_list pos:start="59:25" pos:end="59:48">(<argument pos:start="59:26" pos:end="59:26"><expr pos:start="59:26" pos:end="59:26"><name pos:start="59:26" pos:end="59:26">c</name></expr></argument>, <argument pos:start="59:29" pos:end="59:47"><expr pos:start="59:29" pos:end="59:47"><name pos:start="59:29" pos:end="59:47">RTSP_STATUS_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="61:9" pos:end="61:21">goto <name pos:start="61:14" pos:end="61:20">the_end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:32">/* parse each header line */</comment>

    <comment type="block" pos:start="69:5" pos:end="69:27">/* skip to next line */</comment>

    <while pos:start="71:5" pos:end="73:12">while <condition pos:start="71:11" pos:end="71:36">(<expr pos:start="71:12" pos:end="71:35"><operator pos:start="71:12" pos:end="71:12">*</operator><name pos:start="71:13" pos:end="71:13">p</name> <operator pos:start="71:15" pos:end="71:16">!=</operator> <literal type="char" pos:start="71:18" pos:end="71:21">'\n'</literal> <operator pos:start="71:23" pos:end="71:24">&amp;&amp;</operator> <operator pos:start="71:26" pos:end="71:26">*</operator><name pos:start="71:27" pos:end="71:27">p</name> <operator pos:start="71:29" pos:end="71:30">!=</operator> <literal type="char" pos:start="71:32" pos:end="71:35">'\0'</literal></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:12"><block_content pos:start="73:9" pos:end="73:12">

        <expr_stmt pos:start="73:9" pos:end="73:12"><expr pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:9">p</name><operator pos:start="73:10" pos:end="73:11">++</operator></expr>;</expr_stmt></block_content></block></while>

    <if_stmt pos:start="75:5" pos:end="77:12"><if pos:start="75:5" pos:end="77:12">if <condition pos:start="75:8" pos:end="75:19">(<expr pos:start="75:9" pos:end="75:18"><operator pos:start="75:9" pos:end="75:9">*</operator><name pos:start="75:10" pos:end="75:10">p</name> <operator pos:start="75:12" pos:end="75:13">==</operator> <literal type="char" pos:start="75:15" pos:end="75:18">'\n'</literal></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:12"><block_content pos:start="77:9" pos:end="77:12">

        <expr_stmt pos:start="77:9" pos:end="77:12"><expr pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:9">p</name><operator pos:start="77:10" pos:end="77:11">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <while pos:start="79:5" pos:end="113:5">while <condition pos:start="79:11" pos:end="79:22">(<expr pos:start="79:12" pos:end="79:21"><operator pos:start="79:12" pos:end="79:12">*</operator><name pos:start="79:13" pos:end="79:13">p</name> <operator pos:start="79:15" pos:end="79:16">!=</operator> <literal type="char" pos:start="79:18" pos:end="79:21">'\0'</literal></expr>)</condition> <block pos:start="79:24" pos:end="113:5">{<block_content pos:start="81:9" pos:end="111:19">

        <expr_stmt pos:start="81:9" pos:end="81:56"><expr pos:start="81:9" pos:end="81:55"><name pos:start="81:9" pos:end="81:10">p1</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <call pos:start="81:14" pos:end="81:55"><name pos:start="81:14" pos:end="81:19">memchr</name><argument_list pos:start="81:20" pos:end="81:55">(<argument pos:start="81:21" pos:end="81:21"><expr pos:start="81:21" pos:end="81:21"><name pos:start="81:21" pos:end="81:21">p</name></expr></argument>, <argument pos:start="81:24" pos:end="81:27"><expr pos:start="81:24" pos:end="81:27"><literal type="char" pos:start="81:24" pos:end="81:27">'\n'</literal></expr></argument>, <argument pos:start="81:30" pos:end="81:54"><expr pos:start="81:30" pos:end="81:54"><operator pos:start="81:30" pos:end="81:30">(</operator><name pos:start="81:31" pos:end="81:34">char</name> <operator pos:start="81:36" pos:end="81:36">*</operator><operator pos:start="81:37" pos:end="81:37">)</operator><name pos:start="81:38" pos:end="81:50"><name pos:start="81:38" pos:end="81:38">c</name><operator pos:start="81:39" pos:end="81:40">-&gt;</operator><name pos:start="81:41" pos:end="81:50">buffer_ptr</name></name> <operator pos:start="81:52" pos:end="81:52">-</operator> <name pos:start="81:54" pos:end="81:54">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="85:18"><if pos:start="83:9" pos:end="85:18">if <condition pos:start="83:12" pos:end="83:16">(<expr pos:start="83:13" pos:end="83:15"><operator pos:start="83:13" pos:end="83:13">!</operator><name pos:start="83:14" pos:end="83:15">p1</name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:18"><block_content pos:start="85:13" pos:end="85:18">

            <break pos:start="85:13" pos:end="85:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:16"><expr pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:10">p2</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <name pos:start="87:14" pos:end="87:15">p1</name></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="91:17"><if pos:start="89:9" pos:end="91:17">if <condition pos:start="89:12" pos:end="89:37">(<expr pos:start="89:13" pos:end="89:36"><name pos:start="89:13" pos:end="89:14">p2</name> <operator pos:start="89:16" pos:end="89:16">&gt;</operator> <name pos:start="89:18" pos:end="89:18">p</name> <operator pos:start="89:20" pos:end="89:21">&amp;&amp;</operator> <name pos:start="89:23" pos:end="89:28"><name pos:start="89:23" pos:end="89:24">p2</name><index pos:start="89:25" pos:end="89:28">[<expr pos:start="89:26" pos:end="89:27"><operator pos:start="89:26" pos:end="89:26">-</operator><literal type="number" pos:start="89:27" pos:end="89:27">1</literal></expr>]</index></name> <operator pos:start="89:30" pos:end="89:31">==</operator> <literal type="char" pos:start="89:33" pos:end="89:36">'\r'</literal></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:17"><block_content pos:start="91:13" pos:end="91:17">

            <expr_stmt pos:start="91:13" pos:end="91:17"><expr pos:start="91:13" pos:end="91:16"><name pos:start="91:13" pos:end="91:14">p2</name><operator pos:start="91:15" pos:end="91:16">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <comment type="block" pos:start="93:9" pos:end="93:29">/* skip empty line */</comment>

        <if_stmt pos:start="95:9" pos:end="97:18"><if pos:start="95:9" pos:end="97:18">if <condition pos:start="95:12" pos:end="95:20">(<expr pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:14">p2</name> <operator pos:start="95:16" pos:end="95:17">==</operator> <name pos:start="95:19" pos:end="95:19">p</name></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:18"><block_content pos:start="97:13" pos:end="97:18">

            <break pos:start="97:13" pos:end="97:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:21"><expr pos:start="99:9" pos:end="99:20"><name pos:start="99:9" pos:end="99:11">len</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <name pos:start="99:15" pos:end="99:16">p2</name> <operator pos:start="99:18" pos:end="99:18">-</operator> <name pos:start="99:20" pos:end="99:20">p</name></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="103:35"><if pos:start="101:9" pos:end="103:35">if <condition pos:start="101:12" pos:end="101:35">(<expr pos:start="101:13" pos:end="101:34"><name pos:start="101:13" pos:end="101:15">len</name> <operator pos:start="101:17" pos:end="101:17">&gt;</operator> <sizeof pos:start="101:19" pos:end="101:30">sizeof<argument_list pos:start="101:25" pos:end="101:30">(<argument pos:start="101:26" pos:end="101:29"><expr pos:start="101:26" pos:end="101:29"><name pos:start="101:26" pos:end="101:29">line</name></expr></argument>)</argument_list></sizeof> <operator pos:start="101:32" pos:end="101:32">-</operator> <literal type="number" pos:start="101:34" pos:end="101:34">1</literal></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:35"><block_content pos:start="103:13" pos:end="103:35">

            <expr_stmt pos:start="103:13" pos:end="103:35"><expr pos:start="103:13" pos:end="103:34"><name pos:start="103:13" pos:end="103:15">len</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <sizeof pos:start="103:19" pos:end="103:30">sizeof<argument_list pos:start="103:25" pos:end="103:30">(<argument pos:start="103:26" pos:end="103:29"><expr pos:start="103:26" pos:end="103:29"><name pos:start="103:26" pos:end="103:29">line</name></expr></argument>)</argument_list></sizeof> <operator pos:start="103:32" pos:end="103:32">-</operator> <literal type="number" pos:start="103:34" pos:end="103:34">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:29"><expr pos:start="105:9" pos:end="105:28"><call pos:start="105:9" pos:end="105:28"><name pos:start="105:9" pos:end="105:14">memcpy</name><argument_list pos:start="105:15" pos:end="105:28">(<argument pos:start="105:16" pos:end="105:19"><expr pos:start="105:16" pos:end="105:19"><name pos:start="105:16" pos:end="105:19">line</name></expr></argument>, <argument pos:start="105:22" pos:end="105:22"><expr pos:start="105:22" pos:end="105:22"><name pos:start="105:22" pos:end="105:22">p</name></expr></argument>, <argument pos:start="105:25" pos:end="105:27"><expr pos:start="105:25" pos:end="105:27"><name pos:start="105:25" pos:end="105:27">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:25"><expr pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:17"><name pos:start="107:9" pos:end="107:12">line</name><index pos:start="107:13" pos:end="107:17">[<expr pos:start="107:14" pos:end="107:16"><name pos:start="107:14" pos:end="107:16">len</name></expr>]</index></name> <operator pos:start="107:19" pos:end="107:19">=</operator> <literal type="char" pos:start="107:21" pos:end="107:24">'\0'</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:53"><expr pos:start="109:9" pos:end="109:52"><call pos:start="109:9" pos:end="109:52"><name pos:start="109:9" pos:end="109:26">ff_rtsp_parse_line</name><argument_list pos:start="109:27" pos:end="109:52">(<argument pos:start="109:28" pos:end="109:33"><expr pos:start="109:28" pos:end="109:33"><name pos:start="109:28" pos:end="109:33">header</name></expr></argument>, <argument pos:start="109:36" pos:end="109:39"><expr pos:start="109:36" pos:end="109:39"><name pos:start="109:36" pos:end="109:39">line</name></expr></argument>, <argument pos:start="109:42" pos:end="109:45"><expr pos:start="109:42" pos:end="109:45"><name pos:start="109:42" pos:end="109:45">NULL</name></expr></argument>, <argument pos:start="109:48" pos:end="109:51"><expr pos:start="109:48" pos:end="109:51"><name pos:start="109:48" pos:end="109:51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:19"><expr pos:start="111:9" pos:end="111:18"><name pos:start="111:9" pos:end="111:9">p</name> <operator pos:start="111:11" pos:end="111:11">=</operator> <name pos:start="111:13" pos:end="111:14">p1</name> <operator pos:start="111:16" pos:end="111:16">+</operator> <literal type="number" pos:start="111:18" pos:end="111:18">1</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="117:5" pos:end="117:32">/* handle sequence number */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:25"><expr pos:start="119:5" pos:end="119:24"><name pos:start="119:5" pos:end="119:10"><name pos:start="119:5" pos:end="119:5">c</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:10">seq</name></name> <operator pos:start="119:12" pos:end="119:12">=</operator> <name pos:start="119:14" pos:end="119:24"><name pos:start="119:14" pos:end="119:19">header</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:24">seq</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="123:5" pos:end="149:48"><if pos:start="123:5" pos:end="125:34">if <condition pos:start="123:8" pos:end="123:33">(<expr pos:start="123:9" pos:end="123:32"><operator pos:start="123:9" pos:end="123:9">!</operator><call pos:start="123:10" pos:end="123:32"><name pos:start="123:10" pos:end="123:15">strcmp</name><argument_list pos:start="123:16" pos:end="123:32">(<argument pos:start="123:17" pos:end="123:19"><expr pos:start="123:17" pos:end="123:19"><name pos:start="123:17" pos:end="123:19">cmd</name></expr></argument>, <argument pos:start="123:22" pos:end="123:31"><expr pos:start="123:22" pos:end="123:31"><literal type="string" pos:start="123:22" pos:end="123:31">"DESCRIBE"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="125:34"><block_content pos:start="125:9" pos:end="125:34">

        <expr_stmt pos:start="125:9" pos:end="125:34"><expr pos:start="125:9" pos:end="125:33"><call pos:start="125:9" pos:end="125:33"><name pos:start="125:9" pos:end="125:25">rtsp_cmd_describe</name><argument_list pos:start="125:26" pos:end="125:33">(<argument pos:start="125:27" pos:end="125:27"><expr pos:start="125:27" pos:end="125:27"><name pos:start="125:27" pos:end="125:27">c</name></expr></argument>, <argument pos:start="125:30" pos:end="125:32"><expr pos:start="125:30" pos:end="125:32"><name pos:start="125:30" pos:end="125:32">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="127:5" pos:end="129:33">else if <condition pos:start="127:13" pos:end="127:37">(<expr pos:start="127:14" pos:end="127:36"><operator pos:start="127:14" pos:end="127:14">!</operator><call pos:start="127:15" pos:end="127:36"><name pos:start="127:15" pos:end="127:20">strcmp</name><argument_list pos:start="127:21" pos:end="127:36">(<argument pos:start="127:22" pos:end="127:24"><expr pos:start="127:22" pos:end="127:24"><name pos:start="127:22" pos:end="127:24">cmd</name></expr></argument>, <argument pos:start="127:27" pos:end="127:35"><expr pos:start="127:27" pos:end="127:35"><literal type="string" pos:start="127:27" pos:end="127:35">"OPTIONS"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="129:9" pos:end="129:33"><block_content pos:start="129:9" pos:end="129:33">

        <expr_stmt pos:start="129:9" pos:end="129:33"><expr pos:start="129:9" pos:end="129:32"><call pos:start="129:9" pos:end="129:32"><name pos:start="129:9" pos:end="129:24">rtsp_cmd_options</name><argument_list pos:start="129:25" pos:end="129:32">(<argument pos:start="129:26" pos:end="129:26"><expr pos:start="129:26" pos:end="129:26"><name pos:start="129:26" pos:end="129:26">c</name></expr></argument>, <argument pos:start="129:29" pos:end="129:31"><expr pos:start="129:29" pos:end="129:31"><name pos:start="129:29" pos:end="129:31">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="131:5" pos:end="133:39">else if <condition pos:start="131:13" pos:end="131:35">(<expr pos:start="131:14" pos:end="131:34"><operator pos:start="131:14" pos:end="131:14">!</operator><call pos:start="131:15" pos:end="131:34"><name pos:start="131:15" pos:end="131:20">strcmp</name><argument_list pos:start="131:21" pos:end="131:34">(<argument pos:start="131:22" pos:end="131:24"><expr pos:start="131:22" pos:end="131:24"><name pos:start="131:22" pos:end="131:24">cmd</name></expr></argument>, <argument pos:start="131:27" pos:end="131:33"><expr pos:start="131:27" pos:end="131:33"><literal type="string" pos:start="131:27" pos:end="131:33">"SETUP"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="133:39"><block_content pos:start="133:9" pos:end="133:39">

        <expr_stmt pos:start="133:9" pos:end="133:39"><expr pos:start="133:9" pos:end="133:38"><call pos:start="133:9" pos:end="133:38"><name pos:start="133:9" pos:end="133:22">rtsp_cmd_setup</name><argument_list pos:start="133:23" pos:end="133:38">(<argument pos:start="133:24" pos:end="133:24"><expr pos:start="133:24" pos:end="133:24"><name pos:start="133:24" pos:end="133:24">c</name></expr></argument>, <argument pos:start="133:27" pos:end="133:29"><expr pos:start="133:27" pos:end="133:29"><name pos:start="133:27" pos:end="133:29">url</name></expr></argument>, <argument pos:start="133:32" pos:end="133:37"><expr pos:start="133:32" pos:end="133:37"><name pos:start="133:32" pos:end="133:37">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="135:5" pos:end="137:38">else if <condition pos:start="135:13" pos:end="135:34">(<expr pos:start="135:14" pos:end="135:33"><operator pos:start="135:14" pos:end="135:14">!</operator><call pos:start="135:15" pos:end="135:33"><name pos:start="135:15" pos:end="135:20">strcmp</name><argument_list pos:start="135:21" pos:end="135:33">(<argument pos:start="135:22" pos:end="135:24"><expr pos:start="135:22" pos:end="135:24"><name pos:start="135:22" pos:end="135:24">cmd</name></expr></argument>, <argument pos:start="135:27" pos:end="135:32"><expr pos:start="135:27" pos:end="135:32"><literal type="string" pos:start="135:27" pos:end="135:32">"PLAY"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="137:9" pos:end="137:38"><block_content pos:start="137:9" pos:end="137:38">

        <expr_stmt pos:start="137:9" pos:end="137:38"><expr pos:start="137:9" pos:end="137:37"><call pos:start="137:9" pos:end="137:37"><name pos:start="137:9" pos:end="137:21">rtsp_cmd_play</name><argument_list pos:start="137:22" pos:end="137:37">(<argument pos:start="137:23" pos:end="137:23"><expr pos:start="137:23" pos:end="137:23"><name pos:start="137:23" pos:end="137:23">c</name></expr></argument>, <argument pos:start="137:26" pos:end="137:28"><expr pos:start="137:26" pos:end="137:28"><name pos:start="137:26" pos:end="137:28">url</name></expr></argument>, <argument pos:start="137:31" pos:end="137:36"><expr pos:start="137:31" pos:end="137:36"><name pos:start="137:31" pos:end="137:36">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="139:5" pos:end="141:46">else if <condition pos:start="139:13" pos:end="139:35">(<expr pos:start="139:14" pos:end="139:34"><operator pos:start="139:14" pos:end="139:14">!</operator><call pos:start="139:15" pos:end="139:34"><name pos:start="139:15" pos:end="139:20">strcmp</name><argument_list pos:start="139:21" pos:end="139:34">(<argument pos:start="139:22" pos:end="139:24"><expr pos:start="139:22" pos:end="139:24"><name pos:start="139:22" pos:end="139:24">cmd</name></expr></argument>, <argument pos:start="139:27" pos:end="139:33"><expr pos:start="139:27" pos:end="139:33"><literal type="string" pos:start="139:27" pos:end="139:33">"PAUSE"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="141:9" pos:end="141:46"><block_content pos:start="141:9" pos:end="141:46">

        <expr_stmt pos:start="141:9" pos:end="141:46"><expr pos:start="141:9" pos:end="141:45"><call pos:start="141:9" pos:end="141:45"><name pos:start="141:9" pos:end="141:26">rtsp_cmd_interrupt</name><argument_list pos:start="141:27" pos:end="141:45">(<argument pos:start="141:28" pos:end="141:28"><expr pos:start="141:28" pos:end="141:28"><name pos:start="141:28" pos:end="141:28">c</name></expr></argument>, <argument pos:start="141:31" pos:end="141:33"><expr pos:start="141:31" pos:end="141:33"><name pos:start="141:31" pos:end="141:33">url</name></expr></argument>, <argument pos:start="141:36" pos:end="141:41"><expr pos:start="141:36" pos:end="141:41"><name pos:start="141:36" pos:end="141:41">header</name></expr></argument>, <argument pos:start="141:44" pos:end="141:44"><expr pos:start="141:44" pos:end="141:44"><literal type="number" pos:start="141:44" pos:end="141:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="143:5" pos:end="145:46">else if <condition pos:start="143:13" pos:end="143:38">(<expr pos:start="143:14" pos:end="143:37"><operator pos:start="143:14" pos:end="143:14">!</operator><call pos:start="143:15" pos:end="143:37"><name pos:start="143:15" pos:end="143:20">strcmp</name><argument_list pos:start="143:21" pos:end="143:37">(<argument pos:start="143:22" pos:end="143:24"><expr pos:start="143:22" pos:end="143:24"><name pos:start="143:22" pos:end="143:24">cmd</name></expr></argument>, <argument pos:start="143:27" pos:end="143:36"><expr pos:start="143:27" pos:end="143:36"><literal type="string" pos:start="143:27" pos:end="143:36">"TEARDOWN"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="145:46"><block_content pos:start="145:9" pos:end="145:46">

        <expr_stmt pos:start="145:9" pos:end="145:46"><expr pos:start="145:9" pos:end="145:45"><call pos:start="145:9" pos:end="145:45"><name pos:start="145:9" pos:end="145:26">rtsp_cmd_interrupt</name><argument_list pos:start="145:27" pos:end="145:45">(<argument pos:start="145:28" pos:end="145:28"><expr pos:start="145:28" pos:end="145:28"><name pos:start="145:28" pos:end="145:28">c</name></expr></argument>, <argument pos:start="145:31" pos:end="145:33"><expr pos:start="145:31" pos:end="145:33"><name pos:start="145:31" pos:end="145:33">url</name></expr></argument>, <argument pos:start="145:36" pos:end="145:41"><expr pos:start="145:36" pos:end="145:41"><name pos:start="145:36" pos:end="145:41">header</name></expr></argument>, <argument pos:start="145:44" pos:end="145:44"><expr pos:start="145:44" pos:end="145:44"><literal type="number" pos:start="145:44" pos:end="145:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="147:5" pos:end="149:48">else<block type="pseudo" pos:start="149:9" pos:end="149:48"><block_content pos:start="149:9" pos:end="149:48">

        <expr_stmt pos:start="149:9" pos:end="149:48"><expr pos:start="149:9" pos:end="149:47"><call pos:start="149:9" pos:end="149:47"><name pos:start="149:9" pos:end="149:24">rtsp_reply_error</name><argument_list pos:start="149:25" pos:end="149:47">(<argument pos:start="149:26" pos:end="149:26"><expr pos:start="149:26" pos:end="149:26"><name pos:start="149:26" pos:end="149:26">c</name></expr></argument>, <argument pos:start="149:29" pos:end="149:46"><expr pos:start="149:29" pos:end="149:46"><name pos:start="149:29" pos:end="149:46">RTSP_STATUS_METHOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



 <label pos:start="153:2" pos:end="153:9"><name pos:start="153:2" pos:end="153:8">the_end</name>:</label>

    <expr_stmt pos:start="155:5" pos:end="155:51"><expr pos:start="155:5" pos:end="155:50"><name pos:start="155:5" pos:end="155:7">len</name> <operator pos:start="155:9" pos:end="155:9">=</operator> <call pos:start="155:11" pos:end="155:50"><name pos:start="155:11" pos:end="155:28">avio_close_dyn_buf</name><argument_list pos:start="155:29" pos:end="155:50">(<argument pos:start="155:30" pos:end="155:34"><expr pos:start="155:30" pos:end="155:34"><name pos:start="155:30" pos:end="155:34"><name pos:start="155:30" pos:end="155:30">c</name><operator pos:start="155:31" pos:end="155:32">-&gt;</operator><name pos:start="155:33" pos:end="155:34">pb</name></name></expr></argument>, <argument pos:start="155:37" pos:end="155:49"><expr pos:start="155:37" pos:end="155:49"><operator pos:start="155:37" pos:end="155:37">&amp;</operator><name pos:start="155:38" pos:end="155:49"><name pos:start="155:38" pos:end="155:38">c</name><operator pos:start="155:39" pos:end="155:40">-&gt;</operator><name pos:start="155:41" pos:end="155:49">pb_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:17"><expr pos:start="157:5" pos:end="157:16"><name pos:start="157:5" pos:end="157:9"><name pos:start="157:5" pos:end="157:5">c</name><operator pos:start="157:6" pos:end="157:7">-&gt;</operator><name pos:start="157:8" pos:end="157:9">pb</name></name> <operator pos:start="157:11" pos:end="157:11">=</operator> <name pos:start="157:13" pos:end="157:16">NULL</name></expr>;</expr_stmt> <comment type="block" pos:start="157:19" pos:end="157:30">/* safety */</comment>

    <if_stmt pos:start="159:5" pos:end="165:5"><if pos:start="159:5" pos:end="165:5">if <condition pos:start="159:8" pos:end="159:16">(<expr pos:start="159:9" pos:end="159:15"><name pos:start="159:9" pos:end="159:11">len</name> <operator pos:start="159:13" pos:end="159:13">&lt;</operator> <literal type="number" pos:start="159:15" pos:end="159:15">0</literal></expr>)</condition> <block pos:start="159:18" pos:end="165:5">{<block_content pos:start="163:9" pos:end="163:18">

        <comment type="block" pos:start="161:9" pos:end="161:33">/* XXX: cannot do more */</comment>

        <return pos:start="163:9" pos:end="163:18">return <expr pos:start="163:16" pos:end="163:17"><operator pos:start="163:16" pos:end="163:16">-</operator><literal type="number" pos:start="163:17" pos:end="163:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:33"><expr pos:start="167:5" pos:end="167:32"><name pos:start="167:5" pos:end="167:17"><name pos:start="167:5" pos:end="167:5">c</name><operator pos:start="167:6" pos:end="167:7">-&gt;</operator><name pos:start="167:8" pos:end="167:17">buffer_ptr</name></name> <operator pos:start="167:19" pos:end="167:19">=</operator> <name pos:start="167:21" pos:end="167:32"><name pos:start="167:21" pos:end="167:21">c</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:32">pb_buffer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:39"><expr pos:start="169:5" pos:end="169:38"><name pos:start="169:5" pos:end="169:17"><name pos:start="169:5" pos:end="169:5">c</name><operator pos:start="169:6" pos:end="169:7">-&gt;</operator><name pos:start="169:8" pos:end="169:17">buffer_end</name></name> <operator pos:start="169:19" pos:end="169:19">=</operator> <name pos:start="169:21" pos:end="169:32"><name pos:start="169:21" pos:end="169:21">c</name><operator pos:start="169:22" pos:end="169:23">-&gt;</operator><name pos:start="169:24" pos:end="169:32">pb_buffer</name></name> <operator pos:start="169:34" pos:end="169:34">+</operator> <name pos:start="169:36" pos:end="169:38">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:36"><expr pos:start="171:5" pos:end="171:35"><name pos:start="171:5" pos:end="171:12"><name pos:start="171:5" pos:end="171:5">c</name><operator pos:start="171:6" pos:end="171:7">-&gt;</operator><name pos:start="171:8" pos:end="171:12">state</name></name> <operator pos:start="171:14" pos:end="171:14">=</operator> <name pos:start="171:16" pos:end="171:35">RTSPSTATE_SEND_REPLY</name></expr>;</expr_stmt>

    <return pos:start="173:5" pos:end="173:13">return <expr pos:start="173:12" pos:end="173:12"><literal type="number" pos:start="173:12" pos:end="173:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
