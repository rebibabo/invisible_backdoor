<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/310.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:5"><name pos:start="1:1" pos:end="1:5">int64</name></type> <name pos:start="1:7" pos:end="1:36">float64_to_int64_round_to_zero</name><parameter_list pos:start="1:37" pos:end="1:62">( <parameter pos:start="1:39" pos:end="1:60"><decl pos:start="1:39" pos:end="1:60"><type pos:start="1:39" pos:end="1:47"><name pos:start="1:39" pos:end="1:45">float64</name> <name pos:start="1:47" pos:end="1:47">a</name></type> <name pos:start="1:49" pos:end="1:60">STATUS_PARAM</name></decl></parameter> )</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="77:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">flag</name></type> <name pos:start="5:10" pos:end="5:14">aSign</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">int16</name></type> <name pos:start="7:11" pos:end="7:14">aExp</name></decl>, <decl pos:start="7:17" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:17" pos:end="7:26">shiftCount</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">bits64</name></type> <name pos:start="9:12" pos:end="9:15">aSig</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">int64</name></type> <name pos:start="11:11" pos:end="11:11">z</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:8">aSig</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:34"><name pos:start="15:12" pos:end="15:29">extractFloat64Frac</name><argument_list pos:start="15:30" pos:end="15:34">( <argument pos:start="15:32" pos:end="15:32"><expr pos:start="15:32" pos:end="15:32"><name pos:start="15:32" pos:end="15:32">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:8">aExp</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:33"><name pos:start="17:12" pos:end="17:28">extractFloat64Exp</name><argument_list pos:start="17:29" pos:end="17:33">( <argument pos:start="17:31" pos:end="17:31"><expr pos:start="17:31" pos:end="17:31"><name pos:start="17:31" pos:end="17:31">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:9">aSign</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:35"><name pos:start="19:13" pos:end="19:30">extractFloat64Sign</name><argument_list pos:start="19:31" pos:end="19:35">( <argument pos:start="19:33" pos:end="19:33"><expr pos:start="19:33" pos:end="19:33"><name pos:start="19:33" pos:end="19:33">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="21:52"><if pos:start="21:5" pos:end="21:52">if <condition pos:start="21:8" pos:end="21:15">( <expr pos:start="21:10" pos:end="21:13"><name pos:start="21:10" pos:end="21:13">aExp</name></expr> )</condition><block type="pseudo" pos:start="21:17" pos:end="21:52"><block_content pos:start="21:17" pos:end="21:52"> <expr_stmt pos:start="21:17" pos:end="21:52"><expr pos:start="21:17" pos:end="21:51"><name pos:start="21:17" pos:end="21:20">aSig</name> <operator pos:start="21:22" pos:end="21:23">|=</operator> <call pos:start="21:25" pos:end="21:51"><name pos:start="21:25" pos:end="21:29">LIT64</name><argument_list pos:start="21:30" pos:end="21:51">( <argument pos:start="21:32" pos:end="21:49"><expr pos:start="21:32" pos:end="21:49"><literal type="number" pos:start="21:32" pos:end="21:49">0x0010000000000000</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:30"><expr pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:14">shiftCount</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:21">aExp</name> <operator pos:start="23:23" pos:end="23:23">-</operator> <literal type="number" pos:start="23:25" pos:end="23:29">0x433</literal></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="73:5"><if pos:start="25:5" pos:end="53:5">if <condition pos:start="25:8" pos:end="25:26">( <expr pos:start="25:10" pos:end="25:24"><literal type="number" pos:start="25:10" pos:end="25:10">0</literal> <operator pos:start="25:12" pos:end="25:13">&lt;=</operator> <name pos:start="25:15" pos:end="25:24">shiftCount</name></expr> )</condition> <block pos:start="25:28" pos:end="53:5">{<block_content pos:start="27:9" pos:end="51:29">

        <if_stmt pos:start="27:9" pos:end="49:9"><if pos:start="27:9" pos:end="49:9">if <condition pos:start="27:12" pos:end="27:28">( <expr pos:start="27:14" pos:end="27:26"><literal type="number" pos:start="27:14" pos:end="27:18">0x43E</literal> <operator pos:start="27:20" pos:end="27:21">&lt;=</operator> <name pos:start="27:23" pos:end="27:26">aExp</name></expr> )</condition> <block pos:start="27:30" pos:end="49:9">{<block_content pos:start="29:13" pos:end="47:57">

            <if_stmt pos:start="29:13" pos:end="45:13"><if pos:start="29:13" pos:end="45:13">if <condition pos:start="29:16" pos:end="29:51">( <expr pos:start="29:18" pos:end="29:49"><name pos:start="29:18" pos:end="29:18">a</name> <operator pos:start="29:20" pos:end="29:21">!=</operator> <call pos:start="29:23" pos:end="29:49"><name pos:start="29:23" pos:end="29:27">LIT64</name><argument_list pos:start="29:28" pos:end="29:49">( <argument pos:start="29:30" pos:end="29:47"><expr pos:start="29:30" pos:end="29:47"><literal type="number" pos:start="29:30" pos:end="29:47">0xC3E0000000000000</literal></expr></argument> )</argument_list></call></expr> )</condition> <block pos:start="29:53" pos:end="45:13">{<block_content pos:start="31:17" pos:end="43:17">

                <macro pos:start="31:17" pos:end="31:59"><name pos:start="31:17" pos:end="31:27">float_raise</name><argument_list pos:start="31:28" pos:end="31:59">( <argument pos:start="31:30" pos:end="31:58">float_flag_invalid STATUS_VAR</argument>)</argument_list></macro><empty_stmt pos:start="31:60" pos:end="31:60">;</empty_stmt>

                <if_stmt pos:start="33:17" pos:end="43:17"><if pos:start="33:17" pos:end="43:17">if <condition pos:start="33:20" pos:end="39:20">(    <expr pos:start="33:25" pos:end="37:70"><operator pos:start="33:25" pos:end="33:25">!</operator> <name pos:start="33:27" pos:end="33:31">aSign</name>

                     <operator pos:start="35:22" pos:end="35:23">||</operator> <operator pos:start="35:25" pos:end="35:25">(</operator>    <operator pos:start="35:30" pos:end="35:30">(</operator> <name pos:start="35:32" pos:end="35:35">aExp</name> <operator pos:start="35:37" pos:end="35:38">==</operator> <literal type="number" pos:start="35:40" pos:end="35:44">0x7FF</literal> <operator pos:start="35:46" pos:end="35:46">)</operator>

                          <operator pos:start="37:27" pos:end="37:28">&amp;&amp;</operator> <operator pos:start="37:30" pos:end="37:30">(</operator> <name pos:start="37:32" pos:end="37:35">aSig</name> <operator pos:start="37:37" pos:end="37:38">!=</operator> <call pos:start="37:40" pos:end="37:66"><name pos:start="37:40" pos:end="37:44">LIT64</name><argument_list pos:start="37:45" pos:end="37:66">( <argument pos:start="37:47" pos:end="37:64"><expr pos:start="37:47" pos:end="37:64"><literal type="number" pos:start="37:47" pos:end="37:64">0x0010000000000000</literal></expr></argument> )</argument_list></call> <operator pos:start="37:68" pos:end="37:68">)</operator> <operator pos:start="37:70" pos:end="37:70">)</operator></expr>

                   )</condition> <block pos:start="39:22" pos:end="43:17">{<block_content pos:start="41:21" pos:end="41:55">

                    <return pos:start="41:21" pos:end="41:55">return <expr pos:start="41:28" pos:end="41:54"><call pos:start="41:28" pos:end="41:54"><name pos:start="41:28" pos:end="41:32">LIT64</name><argument_list pos:start="41:33" pos:end="41:54">( <argument pos:start="41:35" pos:end="41:52"><expr pos:start="41:35" pos:end="41:52"><literal type="number" pos:start="41:35" pos:end="41:52">0x7FFFFFFFFFFFFFFF</literal></expr></argument> )</argument_list></call></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <return pos:start="47:13" pos:end="47:57">return <expr pos:start="47:20" pos:end="47:56"><operator pos:start="47:20" pos:end="47:20">(</operator><name pos:start="47:21" pos:end="47:27">sbits64</name><operator pos:start="47:28" pos:end="47:28">)</operator> <call pos:start="47:30" pos:end="47:56"><name pos:start="47:30" pos:end="47:34">LIT64</name><argument_list pos:start="47:35" pos:end="47:56">( <argument pos:start="47:37" pos:end="47:54"><expr pos:start="47:37" pos:end="47:54"><literal type="number" pos:start="47:37" pos:end="47:54">0x8000000000000000</literal></expr></argument> )</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:9">z</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <name pos:start="51:13" pos:end="51:16">aSig</name><operator pos:start="51:17" pos:end="51:18">&lt;&lt;</operator><name pos:start="51:19" pos:end="51:28">shiftCount</name></expr>;</expr_stmt>

    </block_content>}</block></if>

    <else pos:start="55:5" pos:end="73:5">else <block pos:start="55:10" pos:end="73:5">{<block_content pos:start="57:9" pos:end="71:9">

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:27">( <expr pos:start="57:14" pos:end="57:25"><name pos:start="57:14" pos:end="57:17">aExp</name> <operator pos:start="57:19" pos:end="57:19">&lt;</operator> <literal type="number" pos:start="57:21" pos:end="57:25">0x3FE</literal></expr> )</condition> <block pos:start="57:29" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:21">

            <if_stmt pos:start="59:13" pos:end="59:83"><if pos:start="59:13" pos:end="59:83">if <condition pos:start="59:16" pos:end="59:30">( <expr pos:start="59:18" pos:end="59:28"><name pos:start="59:18" pos:end="59:21">aExp</name> <operator pos:start="59:23" pos:end="59:23">|</operator> <name pos:start="59:25" pos:end="59:28">aSig</name></expr> )</condition><block type="pseudo" pos:start="59:32" pos:end="59:83"><block_content pos:start="59:32" pos:end="59:83"> <expr_stmt pos:start="59:32" pos:end="59:83"><expr pos:start="59:32" pos:end="59:82"><call pos:start="59:32" pos:end="59:60"><name pos:start="59:32" pos:end="59:37">STATUS</name><argument_list pos:start="59:38" pos:end="59:60">(<argument pos:start="59:39" pos:end="59:59"><expr pos:start="59:39" pos:end="59:59"><name pos:start="59:39" pos:end="59:59">float_exception_flags</name></expr></argument>)</argument_list></call> <operator pos:start="59:62" pos:end="59:63">|=</operator> <name pos:start="59:65" pos:end="59:82">float_flag_inexact</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="61:13" pos:end="61:21">return <expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:35"><expr pos:start="65:9" pos:end="65:34"><name pos:start="65:9" pos:end="65:9">z</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <name pos:start="65:13" pos:end="65:16">aSig</name><operator pos:start="65:17" pos:end="65:18">&gt;&gt;</operator><operator pos:start="65:19" pos:end="65:19">(</operator> <operator pos:start="65:21" pos:end="65:21">-</operator> <name pos:start="65:23" pos:end="65:32">shiftCount</name> <operator pos:start="65:34" pos:end="65:34">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="71:9"><if pos:start="67:9" pos:end="71:9">if <condition pos:start="67:12" pos:end="67:53">( <expr pos:start="67:14" pos:end="67:51"><operator pos:start="67:14" pos:end="67:14">(</operator><name pos:start="67:15" pos:end="67:20">bits64</name><operator pos:start="67:21" pos:end="67:21">)</operator> <operator pos:start="67:23" pos:end="67:23">(</operator> <name pos:start="67:25" pos:end="67:28">aSig</name><operator pos:start="67:29" pos:end="67:30">&lt;&lt;</operator><operator pos:start="67:31" pos:end="67:31">(</operator> <name pos:start="67:33" pos:end="67:42">shiftCount</name> <operator pos:start="67:44" pos:end="67:44">&amp;</operator> <literal type="number" pos:start="67:46" pos:end="67:47">63</literal> <operator pos:start="67:49" pos:end="67:49">)</operator> <operator pos:start="67:51" pos:end="67:51">)</operator></expr> )</condition> <block pos:start="67:55" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:64">

            <expr_stmt pos:start="69:13" pos:end="69:64"><expr pos:start="69:13" pos:end="69:63"><call pos:start="69:13" pos:end="69:41"><name pos:start="69:13" pos:end="69:18">STATUS</name><argument_list pos:start="69:19" pos:end="69:41">(<argument pos:start="69:20" pos:end="69:40"><expr pos:start="69:20" pos:end="69:40"><name pos:start="69:20" pos:end="69:40">float_exception_flags</name></expr></argument>)</argument_list></call> <operator pos:start="69:43" pos:end="69:44">|=</operator> <name pos:start="69:46" pos:end="69:63">float_flag_inexact</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="75:5" pos:end="75:25"><if pos:start="75:5" pos:end="75:25">if <condition pos:start="75:8" pos:end="75:16">( <expr pos:start="75:10" pos:end="75:14"><name pos:start="75:10" pos:end="75:14">aSign</name></expr> )</condition><block type="pseudo" pos:start="75:18" pos:end="75:25"><block_content pos:start="75:18" pos:end="75:25"> <expr_stmt pos:start="75:18" pos:end="75:25"><expr pos:start="75:18" pos:end="75:24"><name pos:start="75:18" pos:end="75:18">z</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <operator pos:start="75:22" pos:end="75:22">-</operator> <name pos:start="75:24" pos:end="75:24">z</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><name pos:start="77:12" pos:end="77:12">z</name></expr>;</return>



</block_content>}</block></function>
</unit>
