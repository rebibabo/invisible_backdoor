<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8550.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">ftp_parse_entry_mlsd</name><parameter_list pos:start="1:32" pos:end="1:63">(<parameter pos:start="1:33" pos:end="1:42"><decl pos:start="1:33" pos:end="1:42"><type pos:start="1:33" pos:end="1:42"><name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">mlsd</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><name pos:start="1:45" pos:end="1:56">AVIODirEntry</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">next</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:13">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:14">fact</name></decl>, <decl pos:start="5:17" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:10"><modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:22">value</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:32"><expr pos:start="7:5" pos:end="7:31"><call pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:11">av_dlog</name><argument_list pos:start="7:12" pos:end="7:31">(<argument pos:start="7:13" pos:end="7:16"><expr pos:start="7:13" pos:end="7:16"><name pos:start="7:13" pos:end="7:16">NULL</name></expr></argument>, <argument pos:start="7:19" pos:end="7:24"><expr pos:start="7:19" pos:end="7:24"><literal type="string" pos:start="7:19" pos:end="7:24">"%s\n"</literal></expr></argument>, <argument pos:start="7:27" pos:end="7:30"><expr pos:start="7:27" pos:end="7:30"><name pos:start="7:27" pos:end="7:30">mlsd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="9:5" pos:end="59:5">while<condition pos:start="9:10" pos:end="9:45">(<expr pos:start="9:11" pos:end="9:44"><name pos:start="9:11" pos:end="9:14">fact</name> <operator pos:start="9:16" pos:end="9:16">=</operator> <call pos:start="9:18" pos:end="9:44"><name pos:start="9:18" pos:end="9:26">av_strtok</name><argument_list pos:start="9:27" pos:end="9:44">(<argument pos:start="9:28" pos:end="9:31"><expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">mlsd</name></expr></argument>, <argument pos:start="9:34" pos:end="9:36"><expr pos:start="9:34" pos:end="9:36"><literal type="string" pos:start="9:34" pos:end="9:36">";"</literal></expr></argument>, <argument pos:start="9:39" pos:end="9:43"><expr pos:start="9:39" pos:end="9:43"><operator pos:start="9:39" pos:end="9:39">&amp;</operator><name pos:start="9:40" pos:end="9:43">mlsd</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:47" pos:end="59:5">{<block_content pos:start="11:9" pos:end="57:50">

        <if_stmt pos:start="11:9" pos:end="17:9"><if pos:start="11:9" pos:end="17:9">if <condition pos:start="11:12" pos:end="11:27">(<expr pos:start="11:13" pos:end="11:26"><name pos:start="11:13" pos:end="11:19"><name pos:start="11:13" pos:end="11:16">fact</name><index pos:start="11:17" pos:end="11:19">[<expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr>]</index></name> <operator pos:start="11:21" pos:end="11:22">==</operator> <literal type="char" pos:start="11:24" pos:end="11:26">' '</literal></expr>)</condition> <block pos:start="11:29" pos:end="17:9">{<block_content pos:start="13:13" pos:end="15:21">

            <expr_stmt pos:start="13:13" pos:end="13:45"><expr pos:start="13:13" pos:end="13:44"><name pos:start="13:13" pos:end="13:22"><name pos:start="13:13" pos:end="13:16">next</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:22">name</name></name> <operator pos:start="13:24" pos:end="13:24">=</operator> <call pos:start="13:26" pos:end="13:44"><name pos:start="13:26" pos:end="13:34">av_strdup</name><argument_list pos:start="13:35" pos:end="13:44">(<argument pos:start="13:36" pos:end="13:43"><expr pos:start="13:36" pos:end="13:43"><operator pos:start="13:36" pos:end="13:36">&amp;</operator><name pos:start="13:37" pos:end="13:43"><name pos:start="13:37" pos:end="13:40">fact</name><index pos:start="13:41" pos:end="13:43">[<expr pos:start="13:42" pos:end="13:42"><literal type="number" pos:start="13:42" pos:end="13:42">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="15:13" pos:end="15:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:44"><expr pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:12">fact</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:43"><name pos:start="19:16" pos:end="19:24">av_strtok</name><argument_list pos:start="19:25" pos:end="19:43">(<argument pos:start="19:26" pos:end="19:29"><expr pos:start="19:26" pos:end="19:29"><name pos:start="19:26" pos:end="19:29">fact</name></expr></argument>, <argument pos:start="19:32" pos:end="19:34"><expr pos:start="19:32" pos:end="19:34"><literal type="string" pos:start="19:32" pos:end="19:34">"="</literal></expr></argument>, <argument pos:start="19:37" pos:end="19:42"><expr pos:start="19:37" pos:end="19:42"><operator pos:start="19:37" pos:end="19:37">&amp;</operator><name pos:start="19:38" pos:end="19:42">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="57:50"><if pos:start="21:9" pos:end="39:9">if <condition pos:start="21:12" pos:end="21:41">(<expr pos:start="21:13" pos:end="21:40"><operator pos:start="21:13" pos:end="21:13">!</operator><call pos:start="21:14" pos:end="21:40"><name pos:start="21:14" pos:end="21:26">av_strcasecmp</name><argument_list pos:start="21:27" pos:end="21:40">(<argument pos:start="21:28" pos:end="21:31"><expr pos:start="21:28" pos:end="21:31"><name pos:start="21:28" pos:end="21:31">fact</name></expr></argument>, <argument pos:start="21:34" pos:end="21:39"><expr pos:start="21:34" pos:end="21:39"><literal type="string" pos:start="21:34" pos:end="21:39">"type"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:43" pos:end="39:9">{<block_content pos:start="23:13" pos:end="37:54">

            <if_stmt pos:start="23:13" pos:end="25:25"><if pos:start="23:13" pos:end="25:25">if <condition pos:start="23:16" pos:end="23:79">(<expr pos:start="23:17" pos:end="23:78"><operator pos:start="23:17" pos:end="23:17">!</operator><call pos:start="23:18" pos:end="23:45"><name pos:start="23:18" pos:end="23:30">av_strcasecmp</name><argument_list pos:start="23:31" pos:end="23:45">(<argument pos:start="23:32" pos:end="23:36"><expr pos:start="23:32" pos:end="23:36"><name pos:start="23:32" pos:end="23:36">value</name></expr></argument>, <argument pos:start="23:39" pos:end="23:44"><expr pos:start="23:39" pos:end="23:44"><literal type="string" pos:start="23:39" pos:end="23:44">"cdir"</literal></expr></argument>)</argument_list></call> <operator pos:start="23:47" pos:end="23:48">||</operator> <operator pos:start="23:50" pos:end="23:50">!</operator><call pos:start="23:51" pos:end="23:78"><name pos:start="23:51" pos:end="23:63">av_strcasecmp</name><argument_list pos:start="23:64" pos:end="23:78">(<argument pos:start="23:65" pos:end="23:69"><expr pos:start="23:65" pos:end="23:69"><name pos:start="23:65" pos:end="23:69">value</name></expr></argument>, <argument pos:start="23:72" pos:end="23:77"><expr pos:start="23:72" pos:end="23:77"><literal type="string" pos:start="23:72" pos:end="23:77">"pdir"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:25"><block_content pos:start="25:17" pos:end="25:25">

                <return pos:start="25:17" pos:end="25:25">return <expr pos:start="25:24" pos:end="25:24"><literal type="number" pos:start="25:24" pos:end="25:24">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="27:13" pos:end="37:54"><if pos:start="27:13" pos:end="29:50">if <condition pos:start="27:16" pos:end="27:45">(<expr pos:start="27:17" pos:end="27:44"><operator pos:start="27:17" pos:end="27:17">!</operator><call pos:start="27:18" pos:end="27:44"><name pos:start="27:18" pos:end="27:30">av_strcasecmp</name><argument_list pos:start="27:31" pos:end="27:44">(<argument pos:start="27:32" pos:end="27:36"><expr pos:start="27:32" pos:end="27:36"><name pos:start="27:32" pos:end="27:36">value</name></expr></argument>, <argument pos:start="27:39" pos:end="27:43"><expr pos:start="27:39" pos:end="27:43"><literal type="string" pos:start="27:39" pos:end="27:43">"dir"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:50"><block_content pos:start="29:17" pos:end="29:50">

                <expr_stmt pos:start="29:17" pos:end="29:50"><expr pos:start="29:17" pos:end="29:49"><name pos:start="29:17" pos:end="29:26"><name pos:start="29:17" pos:end="29:20">next</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:26">type</name></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <name pos:start="29:30" pos:end="29:49">AVIO_ENTRY_DIRECTORY</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="31:13" pos:end="33:45">else if <condition pos:start="31:21" pos:end="31:51">(<expr pos:start="31:22" pos:end="31:50"><operator pos:start="31:22" pos:end="31:22">!</operator><call pos:start="31:23" pos:end="31:50"><name pos:start="31:23" pos:end="31:35">av_strcasecmp</name><argument_list pos:start="31:36" pos:end="31:50">(<argument pos:start="31:37" pos:end="31:41"><expr pos:start="31:37" pos:end="31:41"><name pos:start="31:37" pos:end="31:41">value</name></expr></argument>, <argument pos:start="31:44" pos:end="31:49"><expr pos:start="31:44" pos:end="31:49"><literal type="string" pos:start="31:44" pos:end="31:49">"file"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:45"><block_content pos:start="33:17" pos:end="33:45">

                <expr_stmt pos:start="33:17" pos:end="33:45"><expr pos:start="33:17" pos:end="33:44"><name pos:start="33:17" pos:end="33:26"><name pos:start="33:17" pos:end="33:20">next</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:26">type</name></name> <operator pos:start="33:28" pos:end="33:28">=</operator> <name pos:start="33:30" pos:end="33:44">AVIO_ENTRY_FILE</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="35:13" pos:end="37:54">else if <condition pos:start="35:21" pos:end="35:61">(<expr pos:start="35:22" pos:end="35:60"><operator pos:start="35:22" pos:end="35:22">!</operator><call pos:start="35:23" pos:end="35:60"><name pos:start="35:23" pos:end="35:35">av_strcasecmp</name><argument_list pos:start="35:36" pos:end="35:60">(<argument pos:start="35:37" pos:end="35:41"><expr pos:start="35:37" pos:end="35:41"><name pos:start="35:37" pos:end="35:41">value</name></expr></argument>, <argument pos:start="35:44" pos:end="35:59"><expr pos:start="35:44" pos:end="35:59"><literal type="string" pos:start="35:44" pos:end="35:59">"OS.unix=slink:"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:54"><block_content pos:start="37:17" pos:end="37:54">

                <expr_stmt pos:start="37:17" pos:end="37:54"><expr pos:start="37:17" pos:end="37:53"><name pos:start="37:17" pos:end="37:26"><name pos:start="37:17" pos:end="37:20">next</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:26">type</name></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <name pos:start="37:30" pos:end="37:53">AVIO_ENTRY_SYMBOLIC_LINK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="39:11" pos:end="43:9">else if <condition pos:start="39:19" pos:end="39:50">(<expr pos:start="39:20" pos:end="39:49"><operator pos:start="39:20" pos:end="39:20">!</operator><call pos:start="39:21" pos:end="39:49"><name pos:start="39:21" pos:end="39:33">av_strcasecmp</name><argument_list pos:start="39:34" pos:end="39:49">(<argument pos:start="39:35" pos:end="39:38"><expr pos:start="39:35" pos:end="39:38"><name pos:start="39:35" pos:end="39:38">fact</name></expr></argument>, <argument pos:start="39:41" pos:end="39:48"><expr pos:start="39:41" pos:end="39:48"><literal type="string" pos:start="39:41" pos:end="39:48">"modify"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:52" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:65">

            <expr_stmt pos:start="41:13" pos:end="41:65"><expr pos:start="41:13" pos:end="41:64"><name pos:start="41:13" pos:end="41:40"><name pos:start="41:13" pos:end="41:16">next</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:40">modification_timestamp</name></name> <operator pos:start="41:42" pos:end="41:42">=</operator> <call pos:start="41:44" pos:end="41:64"><name pos:start="41:44" pos:end="41:57">ftp_parse_date</name><argument_list pos:start="41:58" pos:end="41:64">(<argument pos:start="41:59" pos:end="41:63"><expr pos:start="41:59" pos:end="41:63"><name pos:start="41:59" pos:end="41:63">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="43:11" pos:end="47:9">else if <condition pos:start="43:19" pos:end="43:53">(<expr pos:start="43:20" pos:end="43:52"><operator pos:start="43:20" pos:end="43:20">!</operator><call pos:start="43:21" pos:end="43:52"><name pos:start="43:21" pos:end="43:33">av_strcasecmp</name><argument_list pos:start="43:34" pos:end="43:52">(<argument pos:start="43:35" pos:end="43:38"><expr pos:start="43:35" pos:end="43:38"><name pos:start="43:35" pos:end="43:38">fact</name></expr></argument>, <argument pos:start="43:41" pos:end="43:51"><expr pos:start="43:41" pos:end="43:51"><literal type="string" pos:start="43:41" pos:end="43:51">"UNIX.mode"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:55" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:55">

            <expr_stmt pos:start="45:13" pos:end="45:55"><expr pos:start="45:13" pos:end="45:54"><name pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:16">next</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:26">filemode</name></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <call pos:start="45:30" pos:end="45:54"><name pos:start="45:30" pos:end="45:38">strtoumax</name><argument_list pos:start="45:39" pos:end="45:54">(<argument pos:start="45:40" pos:end="45:44"><expr pos:start="45:40" pos:end="45:44"><name pos:start="45:40" pos:end="45:44">value</name></expr></argument>, <argument pos:start="45:47" pos:end="45:50"><expr pos:start="45:47" pos:end="45:50"><name pos:start="45:47" pos:end="45:50">NULL</name></expr></argument>, <argument pos:start="45:53" pos:end="45:53"><expr pos:start="45:53" pos:end="45:53"><literal type="number" pos:start="45:53" pos:end="45:53">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="47:11" pos:end="49:55">else if <condition pos:start="47:19" pos:end="47:90">(<expr pos:start="47:20" pos:end="47:89"><operator pos:start="47:20" pos:end="47:20">!</operator><call pos:start="47:21" pos:end="47:51"><name pos:start="47:21" pos:end="47:33">av_strcasecmp</name><argument_list pos:start="47:34" pos:end="47:51">(<argument pos:start="47:35" pos:end="47:38"><expr pos:start="47:35" pos:end="47:38"><name pos:start="47:35" pos:end="47:38">fact</name></expr></argument>, <argument pos:start="47:41" pos:end="47:50"><expr pos:start="47:41" pos:end="47:50"><literal type="string" pos:start="47:41" pos:end="47:50">"UNIX.uid"</literal></expr></argument>)</argument_list></call> <operator pos:start="47:53" pos:end="47:54">||</operator> <operator pos:start="47:56" pos:end="47:56">!</operator><call pos:start="47:57" pos:end="47:89"><name pos:start="47:57" pos:end="47:69">av_strcasecmp</name><argument_list pos:start="47:70" pos:end="47:89">(<argument pos:start="47:71" pos:end="47:74"><expr pos:start="47:71" pos:end="47:74"><name pos:start="47:71" pos:end="47:74">fact</name></expr></argument>, <argument pos:start="47:77" pos:end="47:88"><expr pos:start="47:77" pos:end="47:88"><literal type="string" pos:start="47:77" pos:end="47:88">"UNIX.owner"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:55"><block_content pos:start="49:13" pos:end="49:55">

            <expr_stmt pos:start="49:13" pos:end="49:55"><expr pos:start="49:13" pos:end="49:54"><name pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:16">next</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:25">user_id</name></name> <operator pos:start="49:27" pos:end="49:27">=</operator> <call pos:start="49:29" pos:end="49:54"><name pos:start="49:29" pos:end="49:37">strtoumax</name><argument_list pos:start="49:38" pos:end="49:54">(<argument pos:start="49:39" pos:end="49:43"><expr pos:start="49:39" pos:end="49:43"><name pos:start="49:39" pos:end="49:43">value</name></expr></argument>, <argument pos:start="49:46" pos:end="49:49"><expr pos:start="49:46" pos:end="49:49"><name pos:start="49:46" pos:end="49:49">NULL</name></expr></argument>, <argument pos:start="49:52" pos:end="49:53"><expr pos:start="49:52" pos:end="49:53"><literal type="number" pos:start="49:52" pos:end="49:53">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="51:9" pos:end="53:56">else if <condition pos:start="51:17" pos:end="51:88">(<expr pos:start="51:18" pos:end="51:87"><operator pos:start="51:18" pos:end="51:18">!</operator><call pos:start="51:19" pos:end="51:49"><name pos:start="51:19" pos:end="51:31">av_strcasecmp</name><argument_list pos:start="51:32" pos:end="51:49">(<argument pos:start="51:33" pos:end="51:36"><expr pos:start="51:33" pos:end="51:36"><name pos:start="51:33" pos:end="51:36">fact</name></expr></argument>, <argument pos:start="51:39" pos:end="51:48"><expr pos:start="51:39" pos:end="51:48"><literal type="string" pos:start="51:39" pos:end="51:48">"UNIX.gid"</literal></expr></argument>)</argument_list></call> <operator pos:start="51:51" pos:end="51:52">||</operator> <operator pos:start="51:54" pos:end="51:54">!</operator><call pos:start="51:55" pos:end="51:87"><name pos:start="51:55" pos:end="51:67">av_strcasecmp</name><argument_list pos:start="51:68" pos:end="51:87">(<argument pos:start="51:69" pos:end="51:72"><expr pos:start="51:69" pos:end="51:72"><name pos:start="51:69" pos:end="51:72">fact</name></expr></argument>, <argument pos:start="51:75" pos:end="51:86"><expr pos:start="51:75" pos:end="51:86"><literal type="string" pos:start="51:75" pos:end="51:86">"UNIX.group"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:56"><block_content pos:start="53:13" pos:end="53:56">

            <expr_stmt pos:start="53:13" pos:end="53:56"><expr pos:start="53:13" pos:end="53:55"><name pos:start="53:13" pos:end="53:26"><name pos:start="53:13" pos:end="53:16">next</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:26">group_id</name></name> <operator pos:start="53:28" pos:end="53:28">=</operator> <call pos:start="53:30" pos:end="53:55"><name pos:start="53:30" pos:end="53:38">strtoumax</name><argument_list pos:start="53:39" pos:end="53:55">(<argument pos:start="53:40" pos:end="53:44"><expr pos:start="53:40" pos:end="53:44"><name pos:start="53:40" pos:end="53:44">value</name></expr></argument>, <argument pos:start="53:47" pos:end="53:50"><expr pos:start="53:47" pos:end="53:50"><name pos:start="53:47" pos:end="53:50">NULL</name></expr></argument>, <argument pos:start="53:53" pos:end="53:54"><expr pos:start="53:53" pos:end="53:54"><literal type="number" pos:start="53:53" pos:end="53:54">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="55:9" pos:end="57:50">else if <condition pos:start="55:17" pos:end="55:78">(<expr pos:start="55:18" pos:end="55:77"><operator pos:start="55:18" pos:end="55:18">!</operator><call pos:start="55:19" pos:end="55:45"><name pos:start="55:19" pos:end="55:31">av_strcasecmp</name><argument_list pos:start="55:32" pos:end="55:45">(<argument pos:start="55:33" pos:end="55:36"><expr pos:start="55:33" pos:end="55:36"><name pos:start="55:33" pos:end="55:36">fact</name></expr></argument>, <argument pos:start="55:39" pos:end="55:44"><expr pos:start="55:39" pos:end="55:44"><literal type="string" pos:start="55:39" pos:end="55:44">"size"</literal></expr></argument>)</argument_list></call> <operator pos:start="55:47" pos:end="55:48">||</operator> <operator pos:start="55:50" pos:end="55:50">!</operator><call pos:start="55:51" pos:end="55:77"><name pos:start="55:51" pos:end="55:63">av_strcasecmp</name><argument_list pos:start="55:64" pos:end="55:77">(<argument pos:start="55:65" pos:end="55:68"><expr pos:start="55:65" pos:end="55:68"><name pos:start="55:65" pos:end="55:68">fact</name></expr></argument>, <argument pos:start="55:71" pos:end="55:76"><expr pos:start="55:71" pos:end="55:76"><literal type="string" pos:start="55:71" pos:end="55:76">"sizd"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:50"><block_content pos:start="57:13" pos:end="57:50">

            <expr_stmt pos:start="57:13" pos:end="57:50"><expr pos:start="57:13" pos:end="57:49"><name pos:start="57:13" pos:end="57:22"><name pos:start="57:13" pos:end="57:16">next</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:22">size</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <call pos:start="57:26" pos:end="57:49"><name pos:start="57:26" pos:end="57:32">strtoll</name><argument_list pos:start="57:33" pos:end="57:49">(<argument pos:start="57:34" pos:end="57:38"><expr pos:start="57:34" pos:end="57:38"><name pos:start="57:34" pos:end="57:38">value</name></expr></argument>, <argument pos:start="57:41" pos:end="57:44"><expr pos:start="57:41" pos:end="57:44"><name pos:start="57:41" pos:end="57:44">NULL</name></expr></argument>, <argument pos:start="57:47" pos:end="57:48"><expr pos:start="57:47" pos:end="57:48"><literal type="number" pos:start="57:47" pos:end="57:48">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>

    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
