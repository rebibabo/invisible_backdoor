<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26221.c" pos:tabs="8"><function pos:start="1:1" pos:end="283:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">protocol_client_msg</name><parameter_list pos:start="1:31" pos:end="1:71">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:39">VncState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">vs</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:52">uint8_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">data</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:70"><decl pos:start="1:61" pos:end="1:70"><type pos:start="1:61" pos:end="1:70"><name pos:start="1:61" pos:end="1:66">size_t</name></type> <name pos:start="1:68" pos:end="1:70">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="283:1">{<block_content pos:start="5:5" pos:end="281:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:18">limit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">VncDisplay</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:18">vd</name> <init pos:start="9:20" pos:end="9:27">= <expr pos:start="9:22" pos:end="9:27"><name pos:start="9:22" pos:end="9:27"><name pos:start="9:22" pos:end="9:23">vs</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">vd</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:20">(<expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:12">data</name><index pos:start="13:13" pos:end="13:15">[<expr pos:start="13:14" pos:end="13:14"><literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>]</index></name> <operator pos:start="13:17" pos:end="13:17">&gt;</operator> <literal type="number" pos:start="13:19" pos:end="13:19">3</literal></expr>)</condition> <block pos:start="13:22" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:85">

        <expr_stmt pos:start="15:9" pos:end="15:55"><expr pos:start="15:9" pos:end="15:54"><name pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:10">vd</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:26">timer_interval</name></name> <operator pos:start="15:28" pos:end="15:28">=</operator> <name pos:start="15:30" pos:end="15:54">VNC_REFRESH_INTERVAL_BASE</name></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="19:85"><if pos:start="17:9" pos:end="19:85">if <condition pos:start="17:12" pos:end="17:90">(<expr pos:start="17:13" pos:end="17:89"><operator pos:start="17:13" pos:end="17:13">!</operator><call pos:start="17:14" pos:end="17:89"><name pos:start="17:14" pos:end="17:31">qemu_timer_expired</name><argument_list pos:start="17:32" pos:end="17:89">(<argument pos:start="17:33" pos:end="17:41"><expr pos:start="17:33" pos:end="17:41"><name pos:start="17:33" pos:end="17:41"><name pos:start="17:33" pos:end="17:34">vd</name><operator pos:start="17:35" pos:end="17:36">-&gt;</operator><name pos:start="17:37" pos:end="17:41">timer</name></name></expr></argument>, <argument pos:start="17:44" pos:end="17:88"><expr pos:start="17:44" pos:end="17:88"><call pos:start="17:44" pos:end="17:67"><name pos:start="17:44" pos:end="17:57">qemu_get_clock</name><argument_list pos:start="17:58" pos:end="17:67">(<argument pos:start="17:59" pos:end="17:66"><expr pos:start="17:59" pos:end="17:66"><name pos:start="17:59" pos:end="17:66">rt_clock</name></expr></argument>)</argument_list></call> <operator pos:start="17:69" pos:end="17:69">+</operator> <name pos:start="17:71" pos:end="17:88"><name pos:start="17:71" pos:end="17:72">vd</name><operator pos:start="17:73" pos:end="17:74">-&gt;</operator><name pos:start="17:75" pos:end="17:88">timer_interval</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:85"><block_content pos:start="19:13" pos:end="19:85">

            <expr_stmt pos:start="19:13" pos:end="19:85"><expr pos:start="19:13" pos:end="19:84"><call pos:start="19:13" pos:end="19:84"><name pos:start="19:13" pos:end="19:26">qemu_mod_timer</name><argument_list pos:start="19:27" pos:end="19:84">(<argument pos:start="19:28" pos:end="19:36"><expr pos:start="19:28" pos:end="19:36"><name pos:start="19:28" pos:end="19:36"><name pos:start="19:28" pos:end="19:29">vd</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:36">timer</name></name></expr></argument>, <argument pos:start="19:39" pos:end="19:83"><expr pos:start="19:39" pos:end="19:83"><call pos:start="19:39" pos:end="19:62"><name pos:start="19:39" pos:end="19:52">qemu_get_clock</name><argument_list pos:start="19:53" pos:end="19:62">(<argument pos:start="19:54" pos:end="19:61"><expr pos:start="19:54" pos:end="19:61"><name pos:start="19:54" pos:end="19:61">rt_clock</name></expr></argument>)</argument_list></call> <operator pos:start="19:64" pos:end="19:64">+</operator> <name pos:start="19:66" pos:end="19:83"><name pos:start="19:66" pos:end="19:67">vd</name><operator pos:start="19:68" pos:end="19:69">-&gt;</operator><name pos:start="19:70" pos:end="19:83">timer_interval</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="25:5" pos:end="275:5">switch <condition pos:start="25:12" pos:end="25:20">(<expr pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:16">data</name><index pos:start="25:17" pos:end="25:19">[<expr pos:start="25:18" pos:end="25:18"><literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="25:22" pos:end="275:5">{<block_content pos:start="27:5" pos:end="273:14">

    <case pos:start="27:5" pos:end="27:41">case <expr pos:start="27:10" pos:end="27:40"><name pos:start="27:10" pos:end="27:40">VNC_MSG_CLIENT_SET_PIXEL_FORMAT</name></expr>:</case>

        <if_stmt pos:start="29:9" pos:end="31:22"><if pos:start="29:9" pos:end="31:22">if <condition pos:start="29:12" pos:end="29:21">(<expr pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:15">len</name> <operator pos:start="29:17" pos:end="29:18">==</operator> <literal type="number" pos:start="29:20" pos:end="29:20">1</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:22"><block_content pos:start="31:13" pos:end="31:22">

            <return pos:start="31:13" pos:end="31:22">return <expr pos:start="31:20" pos:end="31:21"><literal type="number" pos:start="31:20" pos:end="31:21">20</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="43:63"><expr pos:start="35:9" pos:end="43:62"><call pos:start="35:9" pos:end="43:62"><name pos:start="35:9" pos:end="35:24">set_pixel_format</name><argument_list pos:start="35:25" pos:end="43:62">(<argument pos:start="35:26" pos:end="35:27"><expr pos:start="35:26" pos:end="35:27"><name pos:start="35:26" pos:end="35:27">vs</name></expr></argument>, <argument pos:start="35:30" pos:end="35:45"><expr pos:start="35:30" pos:end="35:45"><call pos:start="35:30" pos:end="35:45"><name pos:start="35:30" pos:end="35:36">read_u8</name><argument_list pos:start="35:37" pos:end="35:45">(<argument pos:start="35:38" pos:end="35:41"><expr pos:start="35:38" pos:end="35:41"><name pos:start="35:38" pos:end="35:41">data</name></expr></argument>, <argument pos:start="35:44" pos:end="35:44"><expr pos:start="35:44" pos:end="35:44"><literal type="number" pos:start="35:44" pos:end="35:44">4</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:48" pos:end="35:63"><expr pos:start="35:48" pos:end="35:63"><call pos:start="35:48" pos:end="35:63"><name pos:start="35:48" pos:end="35:54">read_u8</name><argument_list pos:start="35:55" pos:end="35:63">(<argument pos:start="35:56" pos:end="35:59"><expr pos:start="35:56" pos:end="35:59"><name pos:start="35:56" pos:end="35:59">data</name></expr></argument>, <argument pos:start="35:62" pos:end="35:62"><expr pos:start="35:62" pos:end="35:62"><literal type="number" pos:start="35:62" pos:end="35:62">5</literal></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="37:26" pos:end="37:41"><expr pos:start="37:26" pos:end="37:41"><call pos:start="37:26" pos:end="37:41"><name pos:start="37:26" pos:end="37:32">read_u8</name><argument_list pos:start="37:33" pos:end="37:41">(<argument pos:start="37:34" pos:end="37:37"><expr pos:start="37:34" pos:end="37:37"><name pos:start="37:34" pos:end="37:37">data</name></expr></argument>, <argument pos:start="37:40" pos:end="37:40"><expr pos:start="37:40" pos:end="37:40"><literal type="number" pos:start="37:40" pos:end="37:40">6</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:44" pos:end="37:59"><expr pos:start="37:44" pos:end="37:59"><call pos:start="37:44" pos:end="37:59"><name pos:start="37:44" pos:end="37:50">read_u8</name><argument_list pos:start="37:51" pos:end="37:59">(<argument pos:start="37:52" pos:end="37:55"><expr pos:start="37:52" pos:end="37:55"><name pos:start="37:52" pos:end="37:55">data</name></expr></argument>, <argument pos:start="37:58" pos:end="37:58"><expr pos:start="37:58" pos:end="37:58"><literal type="number" pos:start="37:58" pos:end="37:58">7</literal></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="39:26" pos:end="39:42"><expr pos:start="39:26" pos:end="39:42"><call pos:start="39:26" pos:end="39:42"><name pos:start="39:26" pos:end="39:33">read_u16</name><argument_list pos:start="39:34" pos:end="39:42">(<argument pos:start="39:35" pos:end="39:38"><expr pos:start="39:35" pos:end="39:38"><name pos:start="39:35" pos:end="39:38">data</name></expr></argument>, <argument pos:start="39:41" pos:end="39:41"><expr pos:start="39:41" pos:end="39:41"><literal type="number" pos:start="39:41" pos:end="39:41">8</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:45" pos:end="39:62"><expr pos:start="39:45" pos:end="39:62"><call pos:start="39:45" pos:end="39:62"><name pos:start="39:45" pos:end="39:52">read_u16</name><argument_list pos:start="39:53" pos:end="39:62">(<argument pos:start="39:54" pos:end="39:57"><expr pos:start="39:54" pos:end="39:57"><name pos:start="39:54" pos:end="39:57">data</name></expr></argument>, <argument pos:start="39:60" pos:end="39:61"><expr pos:start="39:60" pos:end="39:61"><literal type="number" pos:start="39:60" pos:end="39:61">10</literal></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="41:26" pos:end="41:43"><expr pos:start="41:26" pos:end="41:43"><call pos:start="41:26" pos:end="41:43"><name pos:start="41:26" pos:end="41:33">read_u16</name><argument_list pos:start="41:34" pos:end="41:43">(<argument pos:start="41:35" pos:end="41:38"><expr pos:start="41:35" pos:end="41:38"><name pos:start="41:35" pos:end="41:38">data</name></expr></argument>, <argument pos:start="41:41" pos:end="41:42"><expr pos:start="41:41" pos:end="41:42"><literal type="number" pos:start="41:41" pos:end="41:42">12</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:46" pos:end="41:62"><expr pos:start="41:46" pos:end="41:62"><call pos:start="41:46" pos:end="41:62"><name pos:start="41:46" pos:end="41:52">read_u8</name><argument_list pos:start="41:53" pos:end="41:62">(<argument pos:start="41:54" pos:end="41:57"><expr pos:start="41:54" pos:end="41:57"><name pos:start="41:54" pos:end="41:57">data</name></expr></argument>, <argument pos:start="41:60" pos:end="41:61"><expr pos:start="41:60" pos:end="41:61"><literal type="number" pos:start="41:60" pos:end="41:61">14</literal></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="43:26" pos:end="43:42"><expr pos:start="43:26" pos:end="43:42"><call pos:start="43:26" pos:end="43:42"><name pos:start="43:26" pos:end="43:32">read_u8</name><argument_list pos:start="43:33" pos:end="43:42">(<argument pos:start="43:34" pos:end="43:37"><expr pos:start="43:34" pos:end="43:37"><name pos:start="43:34" pos:end="43:37">data</name></expr></argument>, <argument pos:start="43:40" pos:end="43:41"><expr pos:start="43:40" pos:end="43:41"><literal type="number" pos:start="43:40" pos:end="43:41">15</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:45" pos:end="43:61"><expr pos:start="43:45" pos:end="43:61"><call pos:start="43:45" pos:end="43:61"><name pos:start="43:45" pos:end="43:51">read_u8</name><argument_list pos:start="43:52" pos:end="43:61">(<argument pos:start="43:53" pos:end="43:56"><expr pos:start="43:53" pos:end="43:56"><name pos:start="43:53" pos:end="43:56">data</name></expr></argument>, <argument pos:start="43:59" pos:end="43:60"><expr pos:start="43:59" pos:end="43:60"><literal type="number" pos:start="43:59" pos:end="43:60">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:38">case <expr pos:start="47:10" pos:end="47:37"><name pos:start="47:10" pos:end="47:37">VNC_MSG_CLIENT_SET_ENCODINGS</name></expr>:</case>

        <if_stmt pos:start="49:9" pos:end="51:21"><if pos:start="49:9" pos:end="51:21">if <condition pos:start="49:12" pos:end="49:21">(<expr pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:15">len</name> <operator pos:start="49:17" pos:end="49:18">==</operator> <literal type="number" pos:start="49:20" pos:end="49:20">1</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:21"><block_content pos:start="51:13" pos:end="51:21">

            <return pos:start="51:13" pos:end="51:21">return <expr pos:start="51:20" pos:end="51:20"><literal type="number" pos:start="51:20" pos:end="51:20">4</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="55:9" pos:end="65:38"><if pos:start="55:9" pos:end="63:9">if <condition pos:start="55:12" pos:end="55:21">(<expr pos:start="55:13" pos:end="55:20"><name pos:start="55:13" pos:end="55:15">len</name> <operator pos:start="55:17" pos:end="55:18">==</operator> <literal type="number" pos:start="55:20" pos:end="55:20">4</literal></expr>)</condition> <block pos:start="55:23" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:39">

            <expr_stmt pos:start="57:13" pos:end="57:38"><expr pos:start="57:13" pos:end="57:37"><name pos:start="57:13" pos:end="57:17">limit</name> <operator pos:start="57:19" pos:end="57:19">=</operator> <call pos:start="57:21" pos:end="57:37"><name pos:start="57:21" pos:end="57:28">read_u16</name><argument_list pos:start="57:29" pos:end="57:37">(<argument pos:start="57:30" pos:end="57:33"><expr pos:start="57:30" pos:end="57:33"><name pos:start="57:30" pos:end="57:33">data</name></expr></argument>, <argument pos:start="57:36" pos:end="57:36"><expr pos:start="57:36" pos:end="57:36"><literal type="number" pos:start="57:36" pos:end="57:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="59:13" pos:end="61:39"><if pos:start="59:13" pos:end="61:39">if <condition pos:start="59:16" pos:end="59:26">(<expr pos:start="59:17" pos:end="59:25"><name pos:start="59:17" pos:end="59:21">limit</name> <operator pos:start="59:23" pos:end="59:23">&gt;</operator> <literal type="number" pos:start="59:25" pos:end="59:25">0</literal></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:39"><block_content pos:start="61:17" pos:end="61:39">

                <return pos:start="61:17" pos:end="61:39">return <expr pos:start="61:24" pos:end="61:38"><literal type="number" pos:start="61:24" pos:end="61:26">4</literal> <operator pos:start="61:26" pos:end="61:26">+</operator> <operator pos:start="61:28" pos:end="61:28">(</operator><name pos:start="61:29" pos:end="61:33">limit</name> <operator pos:start="61:35" pos:end="61:35">*</operator> <literal type="number" pos:start="61:37" pos:end="61:37">4</literal><operator pos:start="61:38" pos:end="61:38">)</operator></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="65:38">else<block type="pseudo" pos:start="65:13" pos:end="65:38"><block_content pos:start="65:13" pos:end="65:38">

            <expr_stmt pos:start="65:13" pos:end="65:38"><expr pos:start="65:13" pos:end="65:37"><name pos:start="65:13" pos:end="65:17">limit</name> <operator pos:start="65:19" pos:end="65:19">=</operator> <call pos:start="65:21" pos:end="65:37"><name pos:start="65:21" pos:end="65:28">read_u16</name><argument_list pos:start="65:29" pos:end="65:37">(<argument pos:start="65:30" pos:end="65:33"><expr pos:start="65:30" pos:end="65:33"><name pos:start="65:30" pos:end="65:33">data</name></expr></argument>, <argument pos:start="65:36" pos:end="65:36"><expr pos:start="65:36" pos:end="65:36"><literal type="number" pos:start="65:36" pos:end="65:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <for pos:start="69:9" pos:end="75:9">for <control pos:start="69:13" pos:end="69:35">(<init pos:start="69:14" pos:end="69:19"><expr pos:start="69:14" pos:end="69:18"><name pos:start="69:14" pos:end="69:14">i</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <literal type="number" pos:start="69:18" pos:end="69:18">0</literal></expr>;</init> <condition pos:start="69:21" pos:end="69:30"><expr pos:start="69:21" pos:end="69:29"><name pos:start="69:21" pos:end="69:21">i</name> <operator pos:start="69:23" pos:end="69:23">&lt;</operator> <name pos:start="69:25" pos:end="69:29">limit</name></expr>;</condition> <incr pos:start="69:32" pos:end="69:34"><expr pos:start="69:32" pos:end="69:34"><name pos:start="69:32" pos:end="69:32">i</name><operator pos:start="69:33" pos:end="69:34">++</operator></expr></incr>)</control> <block pos:start="69:37" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:58">

            <decl_stmt pos:start="71:13" pos:end="71:54"><decl pos:start="71:13" pos:end="71:53"><type pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:19">int32_t</name></type> <name pos:start="71:21" pos:end="71:23">val</name> <init pos:start="71:25" pos:end="71:53">= <expr pos:start="71:27" pos:end="71:53"><call pos:start="71:27" pos:end="71:53"><name pos:start="71:27" pos:end="71:34">read_s32</name><argument_list pos:start="71:35" pos:end="71:53">(<argument pos:start="71:36" pos:end="71:39"><expr pos:start="71:36" pos:end="71:39"><name pos:start="71:36" pos:end="71:39">data</name></expr></argument>, <argument pos:start="71:42" pos:end="71:52"><expr pos:start="71:42" pos:end="71:52"><literal type="number" pos:start="71:42" pos:end="71:44">4</literal> <operator pos:start="71:44" pos:end="71:44">+</operator> <operator pos:start="71:46" pos:end="71:46">(</operator><name pos:start="71:47" pos:end="71:47">i</name> <operator pos:start="71:49" pos:end="71:49">*</operator> <literal type="number" pos:start="71:51" pos:end="71:51">4</literal><operator pos:start="71:52" pos:end="71:52">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:58"><expr pos:start="73:13" pos:end="73:57"><call pos:start="73:13" pos:end="73:57"><name pos:start="73:13" pos:end="73:18">memcpy</name><argument_list pos:start="73:19" pos:end="73:57">(<argument pos:start="73:20" pos:end="73:37"><expr pos:start="73:20" pos:end="73:37"><name pos:start="73:20" pos:end="73:23">data</name> <operator pos:start="73:25" pos:end="73:25">+</operator> <literal type="number" pos:start="73:27" pos:end="73:29">4</literal> <operator pos:start="73:29" pos:end="73:29">+</operator> <operator pos:start="73:31" pos:end="73:31">(</operator><name pos:start="73:32" pos:end="73:32">i</name> <operator pos:start="73:34" pos:end="73:34">*</operator> <literal type="number" pos:start="73:36" pos:end="73:36">4</literal><operator pos:start="73:37" pos:end="73:37">)</operator></expr></argument>, <argument pos:start="73:40" pos:end="73:43"><expr pos:start="73:40" pos:end="73:43"><operator pos:start="73:40" pos:end="73:40">&amp;</operator><name pos:start="73:41" pos:end="73:43">val</name></expr></argument>, <argument pos:start="73:46" pos:end="73:56"><expr pos:start="73:46" pos:end="73:56"><sizeof pos:start="73:46" pos:end="73:56">sizeof<argument_list pos:start="73:52" pos:end="73:56">(<argument pos:start="73:53" pos:end="73:55"><expr pos:start="73:53" pos:end="73:55"><name pos:start="73:53" pos:end="73:55">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="79:9" pos:end="79:56"><expr pos:start="79:9" pos:end="79:55"><call pos:start="79:9" pos:end="79:55"><name pos:start="79:9" pos:end="79:21">set_encodings</name><argument_list pos:start="79:22" pos:end="79:55">(<argument pos:start="79:23" pos:end="79:24"><expr pos:start="79:23" pos:end="79:24"><name pos:start="79:23" pos:end="79:24">vs</name></expr></argument>, <argument pos:start="79:27" pos:end="79:47"><expr pos:start="79:27" pos:end="79:47"><operator pos:start="79:27" pos:end="79:27">(</operator><name pos:start="79:28" pos:end="79:34">int32_t</name> <operator pos:start="79:36" pos:end="79:36">*</operator><operator pos:start="79:37" pos:end="79:37">)</operator><operator pos:start="79:38" pos:end="79:38">(</operator><name pos:start="79:39" pos:end="79:42">data</name> <operator pos:start="79:44" pos:end="79:44">+</operator> <literal type="number" pos:start="79:46" pos:end="79:46">4</literal><operator pos:start="79:47" pos:end="79:47">)</operator></expr></argument>, <argument pos:start="79:50" pos:end="79:54"><expr pos:start="79:50" pos:end="79:54"><name pos:start="79:50" pos:end="79:54">limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="81:9" pos:end="81:14">break;</break>

    <case pos:start="83:5" pos:end="83:51">case <expr pos:start="83:10" pos:end="83:50"><name pos:start="83:10" pos:end="83:50">VNC_MSG_CLIENT_FRAMEBUFFER_UPDATE_REQUEST</name></expr>:</case>

        <if_stmt pos:start="85:9" pos:end="87:22"><if pos:start="85:9" pos:end="87:22">if <condition pos:start="85:12" pos:end="85:21">(<expr pos:start="85:13" pos:end="85:20"><name pos:start="85:13" pos:end="85:15">len</name> <operator pos:start="85:17" pos:end="85:18">==</operator> <literal type="number" pos:start="85:20" pos:end="85:20">1</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:22"><block_content pos:start="87:13" pos:end="87:22">

            <return pos:start="87:13" pos:end="87:22">return <expr pos:start="87:20" pos:end="87:21"><literal type="number" pos:start="87:20" pos:end="87:21">10</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="91:9" pos:end="95:73"><expr pos:start="91:9" pos:end="95:72"><call pos:start="91:9" pos:end="95:72"><name pos:start="91:9" pos:end="91:34">framebuffer_update_request</name><argument_list pos:start="91:35" pos:end="95:72">(<argument pos:start="91:36" pos:end="91:37"><expr pos:start="91:36" pos:end="91:37"><name pos:start="91:36" pos:end="91:37">vs</name></expr></argument>,

                                   <argument pos:start="93:36" pos:end="93:51"><expr pos:start="93:36" pos:end="93:51"><call pos:start="93:36" pos:end="93:51"><name pos:start="93:36" pos:end="93:42">read_u8</name><argument_list pos:start="93:43" pos:end="93:51">(<argument pos:start="93:44" pos:end="93:47"><expr pos:start="93:44" pos:end="93:47"><name pos:start="93:44" pos:end="93:47">data</name></expr></argument>, <argument pos:start="93:50" pos:end="93:50"><expr pos:start="93:50" pos:end="93:50"><literal type="number" pos:start="93:50" pos:end="93:50">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="93:54" pos:end="93:70"><expr pos:start="93:54" pos:end="93:70"><call pos:start="93:54" pos:end="93:70"><name pos:start="93:54" pos:end="93:61">read_u16</name><argument_list pos:start="93:62" pos:end="93:70">(<argument pos:start="93:63" pos:end="93:66"><expr pos:start="93:63" pos:end="93:66"><name pos:start="93:63" pos:end="93:66">data</name></expr></argument>, <argument pos:start="93:69" pos:end="93:69"><expr pos:start="93:69" pos:end="93:69"><literal type="number" pos:start="93:69" pos:end="93:69">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="93:73" pos:end="93:89"><expr pos:start="93:73" pos:end="93:89"><call pos:start="93:73" pos:end="93:89"><name pos:start="93:73" pos:end="93:80">read_u16</name><argument_list pos:start="93:81" pos:end="93:89">(<argument pos:start="93:82" pos:end="93:85"><expr pos:start="93:82" pos:end="93:85"><name pos:start="93:82" pos:end="93:85">data</name></expr></argument>, <argument pos:start="93:88" pos:end="93:88"><expr pos:start="93:88" pos:end="93:88"><literal type="number" pos:start="93:88" pos:end="93:88">4</literal></expr></argument>)</argument_list></call></expr></argument>,

                                   <argument pos:start="95:36" pos:end="95:52"><expr pos:start="95:36" pos:end="95:52"><call pos:start="95:36" pos:end="95:52"><name pos:start="95:36" pos:end="95:43">read_u16</name><argument_list pos:start="95:44" pos:end="95:52">(<argument pos:start="95:45" pos:end="95:48"><expr pos:start="95:45" pos:end="95:48"><name pos:start="95:45" pos:end="95:48">data</name></expr></argument>, <argument pos:start="95:51" pos:end="95:51"><expr pos:start="95:51" pos:end="95:51"><literal type="number" pos:start="95:51" pos:end="95:51">6</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="95:55" pos:end="95:71"><expr pos:start="95:55" pos:end="95:71"><call pos:start="95:55" pos:end="95:71"><name pos:start="95:55" pos:end="95:62">read_u16</name><argument_list pos:start="95:63" pos:end="95:71">(<argument pos:start="95:64" pos:end="95:67"><expr pos:start="95:64" pos:end="95:67"><name pos:start="95:64" pos:end="95:67">data</name></expr></argument>, <argument pos:start="95:70" pos:end="95:70"><expr pos:start="95:70" pos:end="95:70"><literal type="number" pos:start="95:70" pos:end="95:70">8</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <case pos:start="99:5" pos:end="99:34">case <expr pos:start="99:10" pos:end="99:33"><name pos:start="99:10" pos:end="99:33">VNC_MSG_CLIENT_KEY_EVENT</name></expr>:</case>

        <if_stmt pos:start="101:9" pos:end="103:21"><if pos:start="101:9" pos:end="103:21">if <condition pos:start="101:12" pos:end="101:21">(<expr pos:start="101:13" pos:end="101:20"><name pos:start="101:13" pos:end="101:15">len</name> <operator pos:start="101:17" pos:end="101:18">==</operator> <literal type="number" pos:start="101:20" pos:end="101:20">1</literal></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:21"><block_content pos:start="103:13" pos:end="103:21">

            <return pos:start="103:13" pos:end="103:21">return <expr pos:start="103:20" pos:end="103:20"><literal type="number" pos:start="103:20" pos:end="103:20">8</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:59"><expr pos:start="107:9" pos:end="107:58"><call pos:start="107:9" pos:end="107:58"><name pos:start="107:9" pos:end="107:17">key_event</name><argument_list pos:start="107:18" pos:end="107:58">(<argument pos:start="107:19" pos:end="107:20"><expr pos:start="107:19" pos:end="107:20"><name pos:start="107:19" pos:end="107:20">vs</name></expr></argument>, <argument pos:start="107:23" pos:end="107:38"><expr pos:start="107:23" pos:end="107:38"><call pos:start="107:23" pos:end="107:38"><name pos:start="107:23" pos:end="107:29">read_u8</name><argument_list pos:start="107:30" pos:end="107:38">(<argument pos:start="107:31" pos:end="107:34"><expr pos:start="107:31" pos:end="107:34"><name pos:start="107:31" pos:end="107:34">data</name></expr></argument>, <argument pos:start="107:37" pos:end="107:37"><expr pos:start="107:37" pos:end="107:37"><literal type="number" pos:start="107:37" pos:end="107:37">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="107:41" pos:end="107:57"><expr pos:start="107:41" pos:end="107:57"><call pos:start="107:41" pos:end="107:57"><name pos:start="107:41" pos:end="107:48">read_u32</name><argument_list pos:start="107:49" pos:end="107:57">(<argument pos:start="107:50" pos:end="107:53"><expr pos:start="107:50" pos:end="107:53"><name pos:start="107:50" pos:end="107:53">data</name></expr></argument>, <argument pos:start="107:56" pos:end="107:56"><expr pos:start="107:56" pos:end="107:56"><literal type="number" pos:start="107:56" pos:end="107:56">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="109:9" pos:end="109:14">break;</break>

    <case pos:start="111:5" pos:end="111:38">case <expr pos:start="111:10" pos:end="111:37"><name pos:start="111:10" pos:end="111:37">VNC_MSG_CLIENT_POINTER_EVENT</name></expr>:</case>

        <if_stmt pos:start="113:9" pos:end="115:21"><if pos:start="113:9" pos:end="115:21">if <condition pos:start="113:12" pos:end="113:21">(<expr pos:start="113:13" pos:end="113:20"><name pos:start="113:13" pos:end="113:15">len</name> <operator pos:start="113:17" pos:end="113:18">==</operator> <literal type="number" pos:start="113:20" pos:end="113:20">1</literal></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:21"><block_content pos:start="115:13" pos:end="115:21">

            <return pos:start="115:13" pos:end="115:21">return <expr pos:start="115:20" pos:end="115:20"><literal type="number" pos:start="115:20" pos:end="115:20">6</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:82"><expr pos:start="119:9" pos:end="119:81"><call pos:start="119:9" pos:end="119:81"><name pos:start="119:9" pos:end="119:21">pointer_event</name><argument_list pos:start="119:22" pos:end="119:81">(<argument pos:start="119:23" pos:end="119:24"><expr pos:start="119:23" pos:end="119:24"><name pos:start="119:23" pos:end="119:24">vs</name></expr></argument>, <argument pos:start="119:27" pos:end="119:42"><expr pos:start="119:27" pos:end="119:42"><call pos:start="119:27" pos:end="119:42"><name pos:start="119:27" pos:end="119:33">read_u8</name><argument_list pos:start="119:34" pos:end="119:42">(<argument pos:start="119:35" pos:end="119:38"><expr pos:start="119:35" pos:end="119:38"><name pos:start="119:35" pos:end="119:38">data</name></expr></argument>, <argument pos:start="119:41" pos:end="119:41"><expr pos:start="119:41" pos:end="119:41"><literal type="number" pos:start="119:41" pos:end="119:41">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="119:45" pos:end="119:61"><expr pos:start="119:45" pos:end="119:61"><call pos:start="119:45" pos:end="119:61"><name pos:start="119:45" pos:end="119:52">read_u16</name><argument_list pos:start="119:53" pos:end="119:61">(<argument pos:start="119:54" pos:end="119:57"><expr pos:start="119:54" pos:end="119:57"><name pos:start="119:54" pos:end="119:57">data</name></expr></argument>, <argument pos:start="119:60" pos:end="119:60"><expr pos:start="119:60" pos:end="119:60"><literal type="number" pos:start="119:60" pos:end="119:60">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="119:64" pos:end="119:80"><expr pos:start="119:64" pos:end="119:80"><call pos:start="119:64" pos:end="119:80"><name pos:start="119:64" pos:end="119:71">read_u16</name><argument_list pos:start="119:72" pos:end="119:80">(<argument pos:start="119:73" pos:end="119:76"><expr pos:start="119:73" pos:end="119:76"><name pos:start="119:73" pos:end="119:76">data</name></expr></argument>, <argument pos:start="119:79" pos:end="119:79"><expr pos:start="119:79" pos:end="119:79"><literal type="number" pos:start="119:79" pos:end="119:79">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    <case pos:start="123:5" pos:end="123:33">case <expr pos:start="123:10" pos:end="123:32"><name pos:start="123:10" pos:end="123:32">VNC_MSG_CLIENT_CUT_TEXT</name></expr>:</case>

        <if_stmt pos:start="125:9" pos:end="127:21"><if pos:start="125:9" pos:end="127:21">if <condition pos:start="125:12" pos:end="125:21">(<expr pos:start="125:13" pos:end="125:20"><name pos:start="125:13" pos:end="125:15">len</name> <operator pos:start="125:17" pos:end="125:18">==</operator> <literal type="number" pos:start="125:20" pos:end="125:20">1</literal></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:21"><block_content pos:start="127:13" pos:end="127:21">

            <return pos:start="127:13" pos:end="127:21">return <expr pos:start="127:20" pos:end="127:20"><literal type="number" pos:start="127:20" pos:end="127:20">8</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="131:9" pos:end="139:9"><if pos:start="131:9" pos:end="139:9">if <condition pos:start="131:12" pos:end="131:21">(<expr pos:start="131:13" pos:end="131:20"><name pos:start="131:13" pos:end="131:15">len</name> <operator pos:start="131:17" pos:end="131:18">==</operator> <literal type="number" pos:start="131:20" pos:end="131:20">8</literal></expr>)</condition> <block pos:start="131:23" pos:end="139:9">{<block_content pos:start="133:13" pos:end="137:32">

            <decl_stmt pos:start="133:13" pos:end="133:46"><decl pos:start="133:13" pos:end="133:45"><type pos:start="133:13" pos:end="133:20"><name pos:start="133:13" pos:end="133:20">uint32_t</name></type> <name pos:start="133:22" pos:end="133:25">dlen</name> <init pos:start="133:27" pos:end="133:45">= <expr pos:start="133:29" pos:end="133:45"><call pos:start="133:29" pos:end="133:45"><name pos:start="133:29" pos:end="133:36">read_u32</name><argument_list pos:start="133:37" pos:end="133:45">(<argument pos:start="133:38" pos:end="133:41"><expr pos:start="133:38" pos:end="133:41"><name pos:start="133:38" pos:end="133:41">data</name></expr></argument>, <argument pos:start="133:44" pos:end="133:44"><expr pos:start="133:44" pos:end="133:44"><literal type="number" pos:start="133:44" pos:end="133:44">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="135:13" pos:end="137:32"><if pos:start="135:13" pos:end="137:32">if <condition pos:start="135:16" pos:end="135:25">(<expr pos:start="135:17" pos:end="135:24"><name pos:start="135:17" pos:end="135:20">dlen</name> <operator pos:start="135:22" pos:end="135:22">&gt;</operator> <literal type="number" pos:start="135:24" pos:end="135:24">0</literal></expr>)</condition><block type="pseudo" pos:start="137:17" pos:end="137:32"><block_content pos:start="137:17" pos:end="137:32">

                <return pos:start="137:17" pos:end="137:32">return <expr pos:start="137:24" pos:end="137:31"><literal type="number" pos:start="137:24" pos:end="137:26">8</literal> <operator pos:start="137:26" pos:end="137:26">+</operator> <name pos:start="137:28" pos:end="137:31">dlen</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="143:9" pos:end="143:57"><expr pos:start="143:9" pos:end="143:56"><call pos:start="143:9" pos:end="143:56"><name pos:start="143:9" pos:end="143:23">client_cut_text</name><argument_list pos:start="143:24" pos:end="143:56">(<argument pos:start="143:25" pos:end="143:26"><expr pos:start="143:25" pos:end="143:26"><name pos:start="143:25" pos:end="143:26">vs</name></expr></argument>, <argument pos:start="143:29" pos:end="143:45"><expr pos:start="143:29" pos:end="143:45"><call pos:start="143:29" pos:end="143:45"><name pos:start="143:29" pos:end="143:36">read_u32</name><argument_list pos:start="143:37" pos:end="143:45">(<argument pos:start="143:38" pos:end="143:41"><expr pos:start="143:38" pos:end="143:41"><name pos:start="143:38" pos:end="143:41">data</name></expr></argument>, <argument pos:start="143:44" pos:end="143:44"><expr pos:start="143:44" pos:end="143:44"><literal type="number" pos:start="143:44" pos:end="143:44">4</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="143:48" pos:end="143:55"><expr pos:start="143:48" pos:end="143:55"><name pos:start="143:48" pos:end="143:51">data</name> <operator pos:start="143:53" pos:end="143:53">+</operator> <literal type="number" pos:start="143:55" pos:end="143:55">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="145:9" pos:end="145:14">break;</break>

    <case pos:start="147:5" pos:end="147:29">case <expr pos:start="147:10" pos:end="147:28"><name pos:start="147:10" pos:end="147:28">VNC_MSG_CLIENT_QEMU</name></expr>:</case>

        <if_stmt pos:start="149:9" pos:end="151:21"><if pos:start="149:9" pos:end="151:21">if <condition pos:start="149:12" pos:end="149:21">(<expr pos:start="149:13" pos:end="149:20"><name pos:start="149:13" pos:end="149:15">len</name> <operator pos:start="149:17" pos:end="149:18">==</operator> <literal type="number" pos:start="149:20" pos:end="149:20">1</literal></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:21"><block_content pos:start="151:13" pos:end="151:21">

            <return pos:start="151:13" pos:end="151:21">return <expr pos:start="151:20" pos:end="151:20"><literal type="number" pos:start="151:20" pos:end="151:20">2</literal></expr>;</return></block_content></block></if></if_stmt>



        <switch pos:start="155:9" pos:end="263:9">switch <condition pos:start="155:16" pos:end="155:33">(<expr pos:start="155:17" pos:end="155:32"><call pos:start="155:17" pos:end="155:32"><name pos:start="155:17" pos:end="155:23">read_u8</name><argument_list pos:start="155:24" pos:end="155:32">(<argument pos:start="155:25" pos:end="155:28"><expr pos:start="155:25" pos:end="155:28"><name pos:start="155:25" pos:end="155:28">data</name></expr></argument>, <argument pos:start="155:31" pos:end="155:31"><expr pos:start="155:31" pos:end="155:31"><literal type="number" pos:start="155:31" pos:end="155:31">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="155:35" pos:end="263:9">{<block_content pos:start="157:9" pos:end="261:18">

        <case pos:start="157:9" pos:end="157:47">case <expr pos:start="157:14" pos:end="157:46"><name pos:start="157:14" pos:end="157:46">VNC_MSG_CLIENT_QEMU_EXT_KEY_EVENT</name></expr>:</case>

            <if_stmt pos:start="159:13" pos:end="161:26"><if pos:start="159:13" pos:end="161:26">if <condition pos:start="159:16" pos:end="159:25">(<expr pos:start="159:17" pos:end="159:24"><name pos:start="159:17" pos:end="159:19">len</name> <operator pos:start="159:21" pos:end="159:22">==</operator> <literal type="number" pos:start="159:24" pos:end="159:24">2</literal></expr>)</condition><block type="pseudo" pos:start="161:17" pos:end="161:26"><block_content pos:start="161:17" pos:end="161:26">

                <return pos:start="161:17" pos:end="161:26">return <expr pos:start="161:24" pos:end="161:25"><literal type="number" pos:start="161:24" pos:end="161:25">12</literal></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="165:13" pos:end="167:64"><expr pos:start="165:13" pos:end="167:63"><call pos:start="165:13" pos:end="167:63"><name pos:start="165:13" pos:end="165:25">ext_key_event</name><argument_list pos:start="165:26" pos:end="167:63">(<argument pos:start="165:27" pos:end="165:28"><expr pos:start="165:27" pos:end="165:28"><name pos:start="165:27" pos:end="165:28">vs</name></expr></argument>, <argument pos:start="165:31" pos:end="165:47"><expr pos:start="165:31" pos:end="165:47"><call pos:start="165:31" pos:end="165:47"><name pos:start="165:31" pos:end="165:38">read_u16</name><argument_list pos:start="165:39" pos:end="165:47">(<argument pos:start="165:40" pos:end="165:43"><expr pos:start="165:40" pos:end="165:43"><name pos:start="165:40" pos:end="165:43">data</name></expr></argument>, <argument pos:start="165:46" pos:end="165:46"><expr pos:start="165:46" pos:end="165:46"><literal type="number" pos:start="165:46" pos:end="165:46">2</literal></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="167:27" pos:end="167:43"><expr pos:start="167:27" pos:end="167:43"><call pos:start="167:27" pos:end="167:43"><name pos:start="167:27" pos:end="167:34">read_u32</name><argument_list pos:start="167:35" pos:end="167:43">(<argument pos:start="167:36" pos:end="167:39"><expr pos:start="167:36" pos:end="167:39"><name pos:start="167:36" pos:end="167:39">data</name></expr></argument>, <argument pos:start="167:42" pos:end="167:42"><expr pos:start="167:42" pos:end="167:42"><literal type="number" pos:start="167:42" pos:end="167:42">4</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="167:46" pos:end="167:62"><expr pos:start="167:46" pos:end="167:62"><call pos:start="167:46" pos:end="167:62"><name pos:start="167:46" pos:end="167:53">read_u32</name><argument_list pos:start="167:54" pos:end="167:62">(<argument pos:start="167:55" pos:end="167:58"><expr pos:start="167:55" pos:end="167:58"><name pos:start="167:55" pos:end="167:58">data</name></expr></argument>, <argument pos:start="167:61" pos:end="167:61"><expr pos:start="167:61" pos:end="167:61"><literal type="number" pos:start="167:61" pos:end="167:61">8</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="169:13" pos:end="169:18">break;</break>

        <case pos:start="171:9" pos:end="171:39">case <expr pos:start="171:14" pos:end="171:38"><name pos:start="171:14" pos:end="171:38">VNC_MSG_CLIENT_QEMU_AUDIO</name></expr>:</case>

            <if_stmt pos:start="173:13" pos:end="175:25"><if pos:start="173:13" pos:end="175:25">if <condition pos:start="173:16" pos:end="173:25">(<expr pos:start="173:17" pos:end="173:24"><name pos:start="173:17" pos:end="173:19">len</name> <operator pos:start="173:21" pos:end="173:22">==</operator> <literal type="number" pos:start="173:24" pos:end="173:24">2</literal></expr>)</condition><block type="pseudo" pos:start="175:17" pos:end="175:25"><block_content pos:start="175:17" pos:end="175:25">

                <return pos:start="175:17" pos:end="175:25">return <expr pos:start="175:24" pos:end="175:24"><literal type="number" pos:start="175:24" pos:end="175:24">4</literal></expr>;</return></block_content></block></if></if_stmt>



            <switch pos:start="179:13" pos:end="249:13">switch <condition pos:start="179:20" pos:end="179:39">(<expr pos:start="179:21" pos:end="179:38"><call pos:start="179:21" pos:end="179:38"><name pos:start="179:21" pos:end="179:28">read_u16</name> <argument_list pos:start="179:30" pos:end="179:38">(<argument pos:start="179:31" pos:end="179:34"><expr pos:start="179:31" pos:end="179:34"><name pos:start="179:31" pos:end="179:34">data</name></expr></argument>, <argument pos:start="179:37" pos:end="179:37"><expr pos:start="179:37" pos:end="179:37"><literal type="number" pos:start="179:37" pos:end="179:37">2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="179:41" pos:end="249:13">{<block_content pos:start="181:13" pos:end="247:22">

            <case pos:start="181:13" pos:end="181:50">case <expr pos:start="181:18" pos:end="181:49"><name pos:start="181:18" pos:end="181:49">VNC_MSG_CLIENT_QEMU_AUDIO_ENABLE</name></expr>:</case>

                <expr_stmt pos:start="183:17" pos:end="183:30"><expr pos:start="183:17" pos:end="183:29"><call pos:start="183:17" pos:end="183:29"><name pos:start="183:17" pos:end="183:25">audio_add</name><argument_list pos:start="183:26" pos:end="183:29">(<argument pos:start="183:27" pos:end="183:28"><expr pos:start="183:27" pos:end="183:28"><name pos:start="183:27" pos:end="183:28">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="185:17" pos:end="185:22">break;</break>

            <case pos:start="187:13" pos:end="187:51">case <expr pos:start="187:18" pos:end="187:50"><name pos:start="187:18" pos:end="187:50">VNC_MSG_CLIENT_QEMU_AUDIO_DISABLE</name></expr>:</case>

                <expr_stmt pos:start="189:17" pos:end="189:30"><expr pos:start="189:17" pos:end="189:29"><call pos:start="189:17" pos:end="189:29"><name pos:start="189:17" pos:end="189:25">audio_del</name><argument_list pos:start="189:26" pos:end="189:29">(<argument pos:start="189:27" pos:end="189:28"><expr pos:start="189:27" pos:end="189:28"><name pos:start="189:27" pos:end="189:28">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="191:17" pos:end="191:22">break;</break>

            <case pos:start="193:13" pos:end="193:54">case <expr pos:start="193:18" pos:end="193:53"><name pos:start="193:18" pos:end="193:53">VNC_MSG_CLIENT_QEMU_AUDIO_SET_FORMAT</name></expr>:</case>

                <if_stmt pos:start="195:17" pos:end="197:30"><if pos:start="195:17" pos:end="197:30">if <condition pos:start="195:20" pos:end="195:29">(<expr pos:start="195:21" pos:end="195:28"><name pos:start="195:21" pos:end="195:23">len</name> <operator pos:start="195:25" pos:end="195:26">==</operator> <literal type="number" pos:start="195:28" pos:end="195:28">4</literal></expr>)</condition><block type="pseudo" pos:start="197:21" pos:end="197:30"><block_content pos:start="197:21" pos:end="197:30">

                    <return pos:start="197:21" pos:end="197:30">return <expr pos:start="197:28" pos:end="197:29"><literal type="number" pos:start="197:28" pos:end="197:29">10</literal></expr>;</return></block_content></block></if></if_stmt>

                <switch pos:start="199:17" pos:end="221:17">switch <condition pos:start="199:24" pos:end="199:41">(<expr pos:start="199:25" pos:end="199:40"><call pos:start="199:25" pos:end="199:40"><name pos:start="199:25" pos:end="199:31">read_u8</name><argument_list pos:start="199:32" pos:end="199:40">(<argument pos:start="199:33" pos:end="199:36"><expr pos:start="199:33" pos:end="199:36"><name pos:start="199:33" pos:end="199:36">data</name></expr></argument>, <argument pos:start="199:39" pos:end="199:39"><expr pos:start="199:39" pos:end="199:39"><literal type="number" pos:start="199:39" pos:end="199:39">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="199:43" pos:end="221:17">{<block_content pos:start="201:17" pos:end="219:26">

                <case pos:start="201:17" pos:end="201:23">case <expr pos:start="201:22" pos:end="201:22"><literal type="number" pos:start="201:22" pos:end="201:22">0</literal></expr>:</case> <expr_stmt pos:start="201:25" pos:end="201:48"><expr pos:start="201:25" pos:end="201:47"><name pos:start="201:25" pos:end="201:34"><name pos:start="201:25" pos:end="201:26">vs</name><operator pos:start="201:27" pos:end="201:28">-&gt;</operator><name pos:start="201:29" pos:end="201:30">as</name><operator pos:start="201:31" pos:end="201:31">.</operator><name pos:start="201:32" pos:end="201:34">fmt</name></name> <operator pos:start="201:36" pos:end="201:36">=</operator> <name pos:start="201:38" pos:end="201:47">AUD_FMT_U8</name></expr>;</expr_stmt> <break pos:start="201:50" pos:end="201:55">break;</break>

                <case pos:start="203:17" pos:end="203:23">case <expr pos:start="203:22" pos:end="203:22"><literal type="number" pos:start="203:22" pos:end="203:22">1</literal></expr>:</case> <expr_stmt pos:start="203:25" pos:end="203:48"><expr pos:start="203:25" pos:end="203:47"><name pos:start="203:25" pos:end="203:34"><name pos:start="203:25" pos:end="203:26">vs</name><operator pos:start="203:27" pos:end="203:28">-&gt;</operator><name pos:start="203:29" pos:end="203:30">as</name><operator pos:start="203:31" pos:end="203:31">.</operator><name pos:start="203:32" pos:end="203:34">fmt</name></name> <operator pos:start="203:36" pos:end="203:36">=</operator> <name pos:start="203:38" pos:end="203:47">AUD_FMT_S8</name></expr>;</expr_stmt> <break pos:start="203:50" pos:end="203:55">break;</break>

                <case pos:start="205:17" pos:end="205:23">case <expr pos:start="205:22" pos:end="205:22"><literal type="number" pos:start="205:22" pos:end="205:22">2</literal></expr>:</case> <expr_stmt pos:start="205:25" pos:end="205:49"><expr pos:start="205:25" pos:end="205:48"><name pos:start="205:25" pos:end="205:34"><name pos:start="205:25" pos:end="205:26">vs</name><operator pos:start="205:27" pos:end="205:28">-&gt;</operator><name pos:start="205:29" pos:end="205:30">as</name><operator pos:start="205:31" pos:end="205:31">.</operator><name pos:start="205:32" pos:end="205:34">fmt</name></name> <operator pos:start="205:36" pos:end="205:36">=</operator> <name pos:start="205:38" pos:end="205:48">AUD_FMT_U16</name></expr>;</expr_stmt> <break pos:start="205:51" pos:end="205:56">break;</break>

                <case pos:start="207:17" pos:end="207:23">case <expr pos:start="207:22" pos:end="207:22"><literal type="number" pos:start="207:22" pos:end="207:22">3</literal></expr>:</case> <expr_stmt pos:start="207:25" pos:end="207:49"><expr pos:start="207:25" pos:end="207:48"><name pos:start="207:25" pos:end="207:34"><name pos:start="207:25" pos:end="207:26">vs</name><operator pos:start="207:27" pos:end="207:28">-&gt;</operator><name pos:start="207:29" pos:end="207:30">as</name><operator pos:start="207:31" pos:end="207:31">.</operator><name pos:start="207:32" pos:end="207:34">fmt</name></name> <operator pos:start="207:36" pos:end="207:36">=</operator> <name pos:start="207:38" pos:end="207:48">AUD_FMT_S16</name></expr>;</expr_stmt> <break pos:start="207:51" pos:end="207:56">break;</break>

                <case pos:start="209:17" pos:end="209:23">case <expr pos:start="209:22" pos:end="209:22"><literal type="number" pos:start="209:22" pos:end="209:22">4</literal></expr>:</case> <expr_stmt pos:start="209:25" pos:end="209:49"><expr pos:start="209:25" pos:end="209:48"><name pos:start="209:25" pos:end="209:34"><name pos:start="209:25" pos:end="209:26">vs</name><operator pos:start="209:27" pos:end="209:28">-&gt;</operator><name pos:start="209:29" pos:end="209:30">as</name><operator pos:start="209:31" pos:end="209:31">.</operator><name pos:start="209:32" pos:end="209:34">fmt</name></name> <operator pos:start="209:36" pos:end="209:36">=</operator> <name pos:start="209:38" pos:end="209:48">AUD_FMT_U32</name></expr>;</expr_stmt> <break pos:start="209:51" pos:end="209:56">break;</break>

                <case pos:start="211:17" pos:end="211:23">case <expr pos:start="211:22" pos:end="211:22"><literal type="number" pos:start="211:22" pos:end="211:22">5</literal></expr>:</case> <expr_stmt pos:start="211:25" pos:end="211:49"><expr pos:start="211:25" pos:end="211:48"><name pos:start="211:25" pos:end="211:34"><name pos:start="211:25" pos:end="211:26">vs</name><operator pos:start="211:27" pos:end="211:28">-&gt;</operator><name pos:start="211:29" pos:end="211:30">as</name><operator pos:start="211:31" pos:end="211:31">.</operator><name pos:start="211:32" pos:end="211:34">fmt</name></name> <operator pos:start="211:36" pos:end="211:36">=</operator> <name pos:start="211:38" pos:end="211:48">AUD_FMT_S32</name></expr>;</expr_stmt> <break pos:start="211:51" pos:end="211:56">break;</break>

                <default pos:start="213:17" pos:end="213:24">default:</default>

                    <expr_stmt pos:start="215:21" pos:end="215:74"><expr pos:start="215:21" pos:end="215:73"><call pos:start="215:21" pos:end="215:73"><name pos:start="215:21" pos:end="215:26">printf</name><argument_list pos:start="215:27" pos:end="215:73">(<argument pos:start="215:28" pos:end="215:54"><expr pos:start="215:28" pos:end="215:54"><literal type="string" pos:start="215:28" pos:end="215:54">"Invalid audio format %d\n"</literal></expr></argument>, <argument pos:start="215:57" pos:end="215:72"><expr pos:start="215:57" pos:end="215:72"><call pos:start="215:57" pos:end="215:72"><name pos:start="215:57" pos:end="215:63">read_u8</name><argument_list pos:start="215:64" pos:end="215:72">(<argument pos:start="215:65" pos:end="215:68"><expr pos:start="215:65" pos:end="215:68"><name pos:start="215:65" pos:end="215:68">data</name></expr></argument>, <argument pos:start="215:71" pos:end="215:71"><expr pos:start="215:71" pos:end="215:71"><literal type="number" pos:start="215:71" pos:end="215:71">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="217:21" pos:end="217:41"><expr pos:start="217:21" pos:end="217:40"><call pos:start="217:21" pos:end="217:40"><name pos:start="217:21" pos:end="217:36">vnc_client_error</name><argument_list pos:start="217:37" pos:end="217:40">(<argument pos:start="217:38" pos:end="217:39"><expr pos:start="217:38" pos:end="217:39"><name pos:start="217:38" pos:end="217:39">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="219:21" pos:end="219:26">break;</break>

                </block_content>}</block></switch>

                <expr_stmt pos:start="223:17" pos:end="223:52"><expr pos:start="223:17" pos:end="223:51"><name pos:start="223:17" pos:end="223:32"><name pos:start="223:17" pos:end="223:18">vs</name><operator pos:start="223:19" pos:end="223:20">-&gt;</operator><name pos:start="223:21" pos:end="223:22">as</name><operator pos:start="223:23" pos:end="223:23">.</operator><name pos:start="223:24" pos:end="223:32">nchannels</name></name> <operator pos:start="223:34" pos:end="223:34">=</operator> <call pos:start="223:36" pos:end="223:51"><name pos:start="223:36" pos:end="223:42">read_u8</name><argument_list pos:start="223:43" pos:end="223:51">(<argument pos:start="223:44" pos:end="223:47"><expr pos:start="223:44" pos:end="223:47"><name pos:start="223:44" pos:end="223:47">data</name></expr></argument>, <argument pos:start="223:50" pos:end="223:50"><expr pos:start="223:50" pos:end="223:50"><literal type="number" pos:start="223:50" pos:end="223:50">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="225:17" pos:end="235:17"><if pos:start="225:17" pos:end="235:17">if <condition pos:start="225:20" pos:end="225:67">(<expr pos:start="225:21" pos:end="225:66"><name pos:start="225:21" pos:end="225:36"><name pos:start="225:21" pos:end="225:22">vs</name><operator pos:start="225:23" pos:end="225:24">-&gt;</operator><name pos:start="225:25" pos:end="225:26">as</name><operator pos:start="225:27" pos:end="225:27">.</operator><name pos:start="225:28" pos:end="225:36">nchannels</name></name> <operator pos:start="225:38" pos:end="225:39">!=</operator> <literal type="number" pos:start="225:41" pos:end="225:41">1</literal> <operator pos:start="225:43" pos:end="225:44">&amp;&amp;</operator> <name pos:start="225:46" pos:end="225:61"><name pos:start="225:46" pos:end="225:47">vs</name><operator pos:start="225:48" pos:end="225:49">-&gt;</operator><name pos:start="225:50" pos:end="225:51">as</name><operator pos:start="225:52" pos:end="225:52">.</operator><name pos:start="225:53" pos:end="225:61">nchannels</name></name> <operator pos:start="225:63" pos:end="225:64">!=</operator> <literal type="number" pos:start="225:66" pos:end="225:66">2</literal></expr>)</condition> <block pos:start="225:69" pos:end="235:17">{<block_content pos:start="227:21" pos:end="233:26">

                    <expr_stmt pos:start="227:21" pos:end="229:45"><expr pos:start="227:21" pos:end="229:44"><call pos:start="227:21" pos:end="229:44"><name pos:start="227:21" pos:end="227:26">printf</name><argument_list pos:start="227:27" pos:end="229:44">(<argument pos:start="227:28" pos:end="227:62"><expr pos:start="227:28" pos:end="227:62"><literal type="string" pos:start="227:28" pos:end="227:62">"Invalid audio channel coount %d\n"</literal></expr></argument>,

                           <argument pos:start="229:28" pos:end="229:43"><expr pos:start="229:28" pos:end="229:43"><call pos:start="229:28" pos:end="229:43"><name pos:start="229:28" pos:end="229:34">read_u8</name><argument_list pos:start="229:35" pos:end="229:43">(<argument pos:start="229:36" pos:end="229:39"><expr pos:start="229:36" pos:end="229:39"><name pos:start="229:36" pos:end="229:39">data</name></expr></argument>, <argument pos:start="229:42" pos:end="229:42"><expr pos:start="229:42" pos:end="229:42"><literal type="number" pos:start="229:42" pos:end="229:42">5</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="231:21" pos:end="231:41"><expr pos:start="231:21" pos:end="231:40"><call pos:start="231:21" pos:end="231:40"><name pos:start="231:21" pos:end="231:36">vnc_client_error</name><argument_list pos:start="231:37" pos:end="231:40">(<argument pos:start="231:38" pos:end="231:39"><expr pos:start="231:38" pos:end="231:39"><name pos:start="231:38" pos:end="231:39">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="233:21" pos:end="233:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="237:17" pos:end="237:48"><expr pos:start="237:17" pos:end="237:47"><name pos:start="237:17" pos:end="237:27"><name pos:start="237:17" pos:end="237:18">vs</name><operator pos:start="237:19" pos:end="237:20">-&gt;</operator><name pos:start="237:21" pos:end="237:22">as</name><operator pos:start="237:23" pos:end="237:23">.</operator><name pos:start="237:24" pos:end="237:27">freq</name></name> <operator pos:start="237:29" pos:end="237:29">=</operator> <call pos:start="237:31" pos:end="237:47"><name pos:start="237:31" pos:end="237:38">read_u32</name><argument_list pos:start="237:39" pos:end="237:47">(<argument pos:start="237:40" pos:end="237:43"><expr pos:start="237:40" pos:end="237:43"><name pos:start="237:40" pos:end="237:43">data</name></expr></argument>, <argument pos:start="237:46" pos:end="237:46"><expr pos:start="237:46" pos:end="237:46"><literal type="number" pos:start="237:46" pos:end="237:46">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="239:17" pos:end="239:22">break;</break>

            <default pos:start="241:13" pos:end="241:20">default:</default>

                <expr_stmt pos:start="243:17" pos:end="243:72"><expr pos:start="243:17" pos:end="243:71"><call pos:start="243:17" pos:end="243:71"><name pos:start="243:17" pos:end="243:22">printf</name> <argument_list pos:start="243:24" pos:end="243:71">(<argument pos:start="243:25" pos:end="243:52"><expr pos:start="243:25" pos:end="243:52"><literal type="string" pos:start="243:25" pos:end="243:52">"Invalid audio message %d\n"</literal></expr></argument>, <argument pos:start="243:55" pos:end="243:70"><expr pos:start="243:55" pos:end="243:70"><call pos:start="243:55" pos:end="243:70"><name pos:start="243:55" pos:end="243:61">read_u8</name><argument_list pos:start="243:62" pos:end="243:70">(<argument pos:start="243:63" pos:end="243:66"><expr pos:start="243:63" pos:end="243:66"><name pos:start="243:63" pos:end="243:66">data</name></expr></argument>, <argument pos:start="243:69" pos:end="243:69"><expr pos:start="243:69" pos:end="243:69"><literal type="number" pos:start="243:69" pos:end="243:69">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="245:17" pos:end="245:37"><expr pos:start="245:17" pos:end="245:36"><call pos:start="245:17" pos:end="245:36"><name pos:start="245:17" pos:end="245:32">vnc_client_error</name><argument_list pos:start="245:33" pos:end="245:36">(<argument pos:start="245:34" pos:end="245:35"><expr pos:start="245:34" pos:end="245:35"><name pos:start="245:34" pos:end="245:35">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="247:17" pos:end="247:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="251:13" pos:end="251:18">break;</break>



        <default pos:start="255:9" pos:end="255:16">default:</default>

            <expr_stmt pos:start="257:13" pos:end="257:51"><expr pos:start="257:13" pos:end="257:50"><call pos:start="257:13" pos:end="257:50"><name pos:start="257:13" pos:end="257:18">printf</name><argument_list pos:start="257:19" pos:end="257:50">(<argument pos:start="257:20" pos:end="257:30"><expr pos:start="257:20" pos:end="257:30"><literal type="string" pos:start="257:20" pos:end="257:30">"Msg: %d\n"</literal></expr></argument>, <argument pos:start="257:33" pos:end="257:49"><expr pos:start="257:33" pos:end="257:49"><call pos:start="257:33" pos:end="257:49"><name pos:start="257:33" pos:end="257:40">read_u16</name><argument_list pos:start="257:41" pos:end="257:49">(<argument pos:start="257:42" pos:end="257:45"><expr pos:start="257:42" pos:end="257:45"><name pos:start="257:42" pos:end="257:45">data</name></expr></argument>, <argument pos:start="257:48" pos:end="257:48"><expr pos:start="257:48" pos:end="257:48"><literal type="number" pos:start="257:48" pos:end="257:48">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="259:13" pos:end="259:33"><expr pos:start="259:13" pos:end="259:32"><call pos:start="259:13" pos:end="259:32"><name pos:start="259:13" pos:end="259:28">vnc_client_error</name><argument_list pos:start="259:29" pos:end="259:32">(<argument pos:start="259:30" pos:end="259:31"><expr pos:start="259:30" pos:end="259:31"><name pos:start="259:30" pos:end="259:31">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="261:13" pos:end="261:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="265:9" pos:end="265:14">break;</break>

    <default pos:start="267:5" pos:end="267:12">default:</default>

        <expr_stmt pos:start="269:9" pos:end="269:37"><expr pos:start="269:9" pos:end="269:36"><call pos:start="269:9" pos:end="269:36"><name pos:start="269:9" pos:end="269:14">printf</name><argument_list pos:start="269:15" pos:end="269:36">(<argument pos:start="269:16" pos:end="269:26"><expr pos:start="269:16" pos:end="269:26"><literal type="string" pos:start="269:16" pos:end="269:26">"Msg: %d\n"</literal></expr></argument>, <argument pos:start="269:29" pos:end="269:35"><expr pos:start="269:29" pos:end="269:35"><name pos:start="269:29" pos:end="269:35"><name pos:start="269:29" pos:end="269:32">data</name><index pos:start="269:33" pos:end="269:35">[<expr pos:start="269:34" pos:end="269:34"><literal type="number" pos:start="269:34" pos:end="269:34">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:29"><expr pos:start="271:9" pos:end="271:28"><call pos:start="271:9" pos:end="271:28"><name pos:start="271:9" pos:end="271:24">vnc_client_error</name><argument_list pos:start="271:25" pos:end="271:28">(<argument pos:start="271:26" pos:end="271:27"><expr pos:start="271:26" pos:end="271:27"><name pos:start="271:26" pos:end="271:27">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="273:9" pos:end="273:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="279:5" pos:end="279:46"><expr pos:start="279:5" pos:end="279:45"><call pos:start="279:5" pos:end="279:45"><name pos:start="279:5" pos:end="279:17">vnc_read_when</name><argument_list pos:start="279:18" pos:end="279:45">(<argument pos:start="279:19" pos:end="279:20"><expr pos:start="279:19" pos:end="279:20"><name pos:start="279:19" pos:end="279:20">vs</name></expr></argument>, <argument pos:start="279:23" pos:end="279:41"><expr pos:start="279:23" pos:end="279:41"><name pos:start="279:23" pos:end="279:41">protocol_client_msg</name></expr></argument>, <argument pos:start="279:44" pos:end="279:44"><expr pos:start="279:44" pos:end="279:44"><literal type="number" pos:start="279:44" pos:end="279:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="281:5" pos:end="281:13">return <expr pos:start="281:12" pos:end="281:12"><literal type="number" pos:start="281:12" pos:end="281:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
