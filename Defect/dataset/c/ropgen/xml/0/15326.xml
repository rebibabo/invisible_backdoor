<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15326.c" pos:tabs="8"><macro pos:start="1:1" pos:end="13:54"><name pos:start="1:1" pos:end="1:21">yuv2yuvX16_c_template</name><argument_list pos:start="1:22" pos:end="13:54">(<argument pos:start="1:23" pos:end="1:46">const int16_t *lumFilter</argument>, <argument pos:start="1:49" pos:end="1:70">const int16_t **lumSrc</argument>,

                      <argument pos:start="3:23" pos:end="3:39">int lumFilterSize</argument>, <argument pos:start="3:42" pos:end="3:65">const int16_t *chrFilter</argument>,

                      <argument pos:start="5:23" pos:end="5:45">const int16_t **chrUSrc</argument>, <argument pos:start="5:48" pos:end="5:70">const int16_t **chrVSrc</argument>,

                      <argument pos:start="7:23" pos:end="7:39">int chrFilterSize</argument>, <argument pos:start="7:42" pos:end="7:63">const int16_t **alpSrc</argument>,

                      <argument pos:start="9:23" pos:end="9:36">uint16_t *dest</argument>, <argument pos:start="9:39" pos:end="9:53">uint16_t *uDest</argument>, <argument pos:start="9:56" pos:end="9:70">uint16_t *vDest</argument>,

                      <argument pos:start="11:23" pos:end="11:37">uint16_t *aDest</argument>, <argument pos:start="11:40" pos:end="11:47">int dstW</argument>, <argument pos:start="11:50" pos:end="11:60">int chrDstW</argument>,

                      <argument pos:start="13:23" pos:end="13:36">int big_endian</argument>, <argument pos:start="13:39" pos:end="13:53">int output_bits</argument>)</argument_list></macro>

<block pos:start="15:1" pos:end="129:1">{<block_content pos:start="19:5" pos:end="128:0">

    <comment type="line" pos:start="17:5" pos:end="17:59">//FIXME Optimize (just quickly written not optimized..)</comment>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="52:0"><decl pos:start="21:5" pos:end="21:37"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:13">shift</name> <init pos:start="21:15" pos:end="21:37">= <expr pos:start="21:17" pos:end="21:37"><literal type="number" pos:start="21:17" pos:end="21:20">11</literal> <operator pos:start="21:20" pos:end="21:20">+</operator> <literal type="number" pos:start="21:22" pos:end="21:25">16</literal> <operator pos:start="21:25" pos:end="21:25">-</operator> <name pos:start="21:27" pos:end="21:37">output_bits</name></expr></init></decl>;</decl_stmt>



<cpp:define pos:start="25:1" pos:end="51:5">#<cpp:directive pos:start="25:2" pos:end="25:7">define</cpp:directive> <cpp:macro pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:20">output_pixel</name><parameter_list pos:start="25:21" pos:end="25:30">(<parameter pos:start="25:22" pos:end="25:24"><type pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:24">pos</name></type></parameter>, <parameter pos:start="25:27" pos:end="25:29"><type pos:start="25:27" pos:end="25:29"><name pos:start="25:27" pos:end="25:29">val</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="27:5" pos:end="51:5">if (big_endian) { \

        if (output_bits == 16) { \

            AV_WB16(pos, av_clip_uint16(val &gt;&gt; shift)); \

        } else { \

            AV_WB16(pos, av_clip_uintp2(val &gt;&gt; shift, output_bits)); \

        } \

    } else { \

        if (output_bits == 16) { \

            AV_WL16(pos, av_clip_uint16(val &gt;&gt; shift)); \

        } else { \

            AV_WL16(pos, av_clip_uintp2(val &gt;&gt; shift, output_bits)); \

        } \

    }</cpp:value></cpp:define>

    <for pos:start="53:5" pos:end="69:5">for <control pos:start="53:9" pos:end="53:30">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:25"><expr pos:start="53:17" pos:end="53:24"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:24">dstW</name></expr>;</condition> <incr pos:start="53:27" pos:end="53:29"><expr pos:start="53:27" pos:end="53:29"><name pos:start="53:27" pos:end="53:27">i</name><operator pos:start="53:28" pos:end="53:29">++</operator></expr></incr>)</control> <block pos:start="53:32" pos:end="69:5">{<block_content pos:start="55:9" pos:end="67:36">

        <decl_stmt pos:start="55:9" pos:end="55:40"><decl pos:start="55:9" pos:end="55:39"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:15">val</name> <init pos:start="55:17" pos:end="55:39">= <expr pos:start="55:19" pos:end="55:39"><literal type="number" pos:start="55:19" pos:end="55:19">1</literal> <operator pos:start="55:21" pos:end="55:22">&lt;&lt;</operator> <operator pos:start="55:24" pos:end="55:24">(</operator><literal type="number" pos:start="55:25" pos:end="55:27">26</literal><operator pos:start="55:27" pos:end="55:27">-</operator><name pos:start="55:28" pos:end="55:38">output_bits</name><operator pos:start="55:39" pos:end="55:39">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="57:9" pos:end="57:14"><decl pos:start="57:9" pos:end="57:13"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:13">j</name></decl>;</decl_stmt>



        <for pos:start="61:9" pos:end="63:47">for <control pos:start="61:13" pos:end="61:43">(<init pos:start="61:14" pos:end="61:19"><expr pos:start="61:14" pos:end="61:18"><name pos:start="61:14" pos:end="61:14">j</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>;</init> <condition pos:start="61:21" pos:end="61:38"><expr pos:start="61:21" pos:end="61:37"><name pos:start="61:21" pos:end="61:21">j</name> <operator pos:start="61:23" pos:end="61:23">&lt;</operator> <name pos:start="61:25" pos:end="61:37">lumFilterSize</name></expr>;</condition> <incr pos:start="61:40" pos:end="61:42"><expr pos:start="61:40" pos:end="61:42"><name pos:start="61:40" pos:end="61:40">j</name><operator pos:start="61:41" pos:end="61:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="63:13" pos:end="63:47"><block_content pos:start="63:13" pos:end="63:47">

            <expr_stmt pos:start="63:13" pos:end="63:47"><expr pos:start="63:13" pos:end="63:46"><name pos:start="63:13" pos:end="63:15">val</name> <operator pos:start="63:17" pos:end="63:18">+=</operator> <name pos:start="63:20" pos:end="63:31"><name pos:start="63:20" pos:end="63:25">lumSrc</name><index pos:start="63:26" pos:end="63:28">[<expr pos:start="63:27" pos:end="63:27"><name pos:start="63:27" pos:end="63:27">j</name></expr>]</index><index pos:start="63:29" pos:end="63:31">[<expr pos:start="63:30" pos:end="63:30"><name pos:start="63:30" pos:end="63:30">i</name></expr>]</index></name> <operator pos:start="63:33" pos:end="63:33">*</operator> <name pos:start="63:35" pos:end="63:46"><name pos:start="63:35" pos:end="63:43">lumFilter</name><index pos:start="63:44" pos:end="63:46">[<expr pos:start="63:45" pos:end="63:45"><name pos:start="63:45" pos:end="63:45">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="67:9" pos:end="67:36"><expr pos:start="67:9" pos:end="67:35"><call pos:start="67:9" pos:end="67:35"><name pos:start="67:9" pos:end="67:20">output_pixel</name><argument_list pos:start="67:21" pos:end="67:35">(<argument pos:start="67:22" pos:end="67:29"><expr pos:start="67:22" pos:end="67:29"><operator pos:start="67:22" pos:end="67:22">&amp;</operator><name pos:start="67:23" pos:end="67:29"><name pos:start="67:23" pos:end="67:26">dest</name><index pos:start="67:27" pos:end="67:29">[<expr pos:start="67:28" pos:end="67:28"><name pos:start="67:28" pos:end="67:28">i</name></expr>]</index></name></expr></argument>, <argument pos:start="67:32" pos:end="67:34"><expr pos:start="67:32" pos:end="67:34"><name pos:start="67:32" pos:end="67:34">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="73:5" pos:end="101:5"><if pos:start="73:5" pos:end="101:5">if <condition pos:start="73:8" pos:end="73:14">(<expr pos:start="73:9" pos:end="73:13"><name pos:start="73:9" pos:end="73:13">uDest</name></expr>)</condition> <block pos:start="73:16" pos:end="101:5">{<block_content pos:start="75:9" pos:end="99:9">

        <for pos:start="75:9" pos:end="99:9">for <control pos:start="75:13" pos:end="75:37">(<init pos:start="75:14" pos:end="75:19"><expr pos:start="75:14" pos:end="75:18"><name pos:start="75:14" pos:end="75:14">i</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <literal type="number" pos:start="75:18" pos:end="75:18">0</literal></expr>;</init> <condition pos:start="75:21" pos:end="75:32"><expr pos:start="75:21" pos:end="75:31"><name pos:start="75:21" pos:end="75:21">i</name> <operator pos:start="75:23" pos:end="75:23">&lt;</operator> <name pos:start="75:25" pos:end="75:31">chrDstW</name></expr>;</condition> <incr pos:start="75:34" pos:end="75:36"><expr pos:start="75:34" pos:end="75:36"><name pos:start="75:34" pos:end="75:34">i</name><operator pos:start="75:35" pos:end="75:36">++</operator></expr></incr>)</control> <block pos:start="75:39" pos:end="99:9">{<block_content pos:start="77:13" pos:end="97:39">

            <decl_stmt pos:start="77:13" pos:end="77:42"><decl pos:start="77:13" pos:end="77:41"><type pos:start="77:13" pos:end="77:15"><name pos:start="77:13" pos:end="77:15">int</name></type> <name pos:start="77:17" pos:end="77:17">u</name> <init pos:start="77:19" pos:end="77:41">= <expr pos:start="77:21" pos:end="77:41"><literal type="number" pos:start="77:21" pos:end="77:21">1</literal> <operator pos:start="77:23" pos:end="77:24">&lt;&lt;</operator> <operator pos:start="77:26" pos:end="77:26">(</operator><literal type="number" pos:start="77:27" pos:end="77:29">26</literal><operator pos:start="77:29" pos:end="77:29">-</operator><name pos:start="77:30" pos:end="77:40">output_bits</name><operator pos:start="77:41" pos:end="77:41">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="79:13" pos:end="79:42"><decl pos:start="79:13" pos:end="79:41"><type pos:start="79:13" pos:end="79:15"><name pos:start="79:13" pos:end="79:15">int</name></type> <name pos:start="79:17" pos:end="79:17">v</name> <init pos:start="79:19" pos:end="79:41">= <expr pos:start="79:21" pos:end="79:41"><literal type="number" pos:start="79:21" pos:end="79:21">1</literal> <operator pos:start="79:23" pos:end="79:24">&lt;&lt;</operator> <operator pos:start="79:26" pos:end="79:26">(</operator><literal type="number" pos:start="79:27" pos:end="79:29">26</literal><operator pos:start="79:29" pos:end="79:29">-</operator><name pos:start="79:30" pos:end="79:40">output_bits</name><operator pos:start="79:41" pos:end="79:41">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="81:13" pos:end="81:18"><decl pos:start="81:13" pos:end="81:17"><type pos:start="81:13" pos:end="81:15"><name pos:start="81:13" pos:end="81:15">int</name></type> <name pos:start="81:17" pos:end="81:17">j</name></decl>;</decl_stmt>



            <for pos:start="85:13" pos:end="91:13">for <control pos:start="85:17" pos:end="85:47">(<init pos:start="85:18" pos:end="85:23"><expr pos:start="85:18" pos:end="85:22"><name pos:start="85:18" pos:end="85:18">j</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <literal type="number" pos:start="85:22" pos:end="85:22">0</literal></expr>;</init> <condition pos:start="85:25" pos:end="85:42"><expr pos:start="85:25" pos:end="85:41"><name pos:start="85:25" pos:end="85:25">j</name> <operator pos:start="85:27" pos:end="85:27">&lt;</operator> <name pos:start="85:29" pos:end="85:41">chrFilterSize</name></expr>;</condition> <incr pos:start="85:44" pos:end="85:46"><expr pos:start="85:44" pos:end="85:46"><name pos:start="85:44" pos:end="85:44">j</name><operator pos:start="85:45" pos:end="85:46">++</operator></expr></incr>)</control> <block pos:start="85:49" pos:end="91:13">{<block_content pos:start="87:17" pos:end="89:50">

                <expr_stmt pos:start="87:17" pos:end="87:50"><expr pos:start="87:17" pos:end="87:49"><name pos:start="87:17" pos:end="87:17">u</name> <operator pos:start="87:19" pos:end="87:20">+=</operator> <name pos:start="87:22" pos:end="87:34"><name pos:start="87:22" pos:end="87:28">chrUSrc</name><index pos:start="87:29" pos:end="87:31">[<expr pos:start="87:30" pos:end="87:30"><name pos:start="87:30" pos:end="87:30">j</name></expr>]</index><index pos:start="87:32" pos:end="87:34">[<expr pos:start="87:33" pos:end="87:33"><name pos:start="87:33" pos:end="87:33">i</name></expr>]</index></name> <operator pos:start="87:36" pos:end="87:36">*</operator> <name pos:start="87:38" pos:end="87:49"><name pos:start="87:38" pos:end="87:46">chrFilter</name><index pos:start="87:47" pos:end="87:49">[<expr pos:start="87:48" pos:end="87:48"><name pos:start="87:48" pos:end="87:48">j</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:50"><expr pos:start="89:17" pos:end="89:49"><name pos:start="89:17" pos:end="89:17">v</name> <operator pos:start="89:19" pos:end="89:20">+=</operator> <name pos:start="89:22" pos:end="89:34"><name pos:start="89:22" pos:end="89:28">chrVSrc</name><index pos:start="89:29" pos:end="89:31">[<expr pos:start="89:30" pos:end="89:30"><name pos:start="89:30" pos:end="89:30">j</name></expr>]</index><index pos:start="89:32" pos:end="89:34">[<expr pos:start="89:33" pos:end="89:33"><name pos:start="89:33" pos:end="89:33">i</name></expr>]</index></name> <operator pos:start="89:36" pos:end="89:36">*</operator> <name pos:start="89:38" pos:end="89:49"><name pos:start="89:38" pos:end="89:46">chrFilter</name><index pos:start="89:47" pos:end="89:49">[<expr pos:start="89:48" pos:end="89:48"><name pos:start="89:48" pos:end="89:48">j</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="95:13" pos:end="95:39"><expr pos:start="95:13" pos:end="95:38"><call pos:start="95:13" pos:end="95:38"><name pos:start="95:13" pos:end="95:24">output_pixel</name><argument_list pos:start="95:25" pos:end="95:38">(<argument pos:start="95:26" pos:end="95:34"><expr pos:start="95:26" pos:end="95:34"><operator pos:start="95:26" pos:end="95:26">&amp;</operator><name pos:start="95:27" pos:end="95:34"><name pos:start="95:27" pos:end="95:31">uDest</name><index pos:start="95:32" pos:end="95:34">[<expr pos:start="95:33" pos:end="95:33"><name pos:start="95:33" pos:end="95:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="95:37" pos:end="95:37"><expr pos:start="95:37" pos:end="95:37"><name pos:start="95:37" pos:end="95:37">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:39"><expr pos:start="97:13" pos:end="97:38"><call pos:start="97:13" pos:end="97:38"><name pos:start="97:13" pos:end="97:24">output_pixel</name><argument_list pos:start="97:25" pos:end="97:38">(<argument pos:start="97:26" pos:end="97:34"><expr pos:start="97:26" pos:end="97:34"><operator pos:start="97:26" pos:end="97:26">&amp;</operator><name pos:start="97:27" pos:end="97:34"><name pos:start="97:27" pos:end="97:31">vDest</name><index pos:start="97:32" pos:end="97:34">[<expr pos:start="97:33" pos:end="97:33"><name pos:start="97:33" pos:end="97:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="97:37" pos:end="97:37"><expr pos:start="97:37" pos:end="97:37"><name pos:start="97:37" pos:end="97:37">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="105:5" pos:end="128:0"><if pos:start="105:5" pos:end="128:0">if <condition pos:start="105:8" pos:end="105:38">(<expr pos:start="105:9" pos:end="105:37"><name pos:start="105:9" pos:end="105:28">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="105:30" pos:end="105:31">&amp;&amp;</operator> <name pos:start="105:33" pos:end="105:37">aDest</name></expr>)</condition> <block pos:start="105:40" pos:end="128:0">{<block_content pos:start="107:9" pos:end="123:9">

        <for pos:start="107:9" pos:end="123:9">for <control pos:start="107:13" pos:end="107:34">(<init pos:start="107:14" pos:end="107:19"><expr pos:start="107:14" pos:end="107:18"><name pos:start="107:14" pos:end="107:14">i</name> <operator pos:start="107:16" pos:end="107:16">=</operator> <literal type="number" pos:start="107:18" pos:end="107:18">0</literal></expr>;</init> <condition pos:start="107:21" pos:end="107:29"><expr pos:start="107:21" pos:end="107:28"><name pos:start="107:21" pos:end="107:21">i</name> <operator pos:start="107:23" pos:end="107:23">&lt;</operator> <name pos:start="107:25" pos:end="107:28">dstW</name></expr>;</condition> <incr pos:start="107:31" pos:end="107:33"><expr pos:start="107:31" pos:end="107:33"><name pos:start="107:31" pos:end="107:31">i</name><operator pos:start="107:32" pos:end="107:33">++</operator></expr></incr>)</control> <block pos:start="107:36" pos:end="123:9">{<block_content pos:start="109:13" pos:end="121:41">

            <decl_stmt pos:start="109:13" pos:end="109:44"><decl pos:start="109:13" pos:end="109:43"><type pos:start="109:13" pos:end="109:15"><name pos:start="109:13" pos:end="109:15">int</name></type> <name pos:start="109:17" pos:end="109:19">val</name> <init pos:start="109:21" pos:end="109:43">= <expr pos:start="109:23" pos:end="109:43"><literal type="number" pos:start="109:23" pos:end="109:23">1</literal> <operator pos:start="109:25" pos:end="109:26">&lt;&lt;</operator> <operator pos:start="109:28" pos:end="109:28">(</operator><literal type="number" pos:start="109:29" pos:end="109:31">26</literal><operator pos:start="109:31" pos:end="109:31">-</operator><name pos:start="109:32" pos:end="109:42">output_bits</name><operator pos:start="109:43" pos:end="109:43">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="111:13" pos:end="111:18"><decl pos:start="111:13" pos:end="111:17"><type pos:start="111:13" pos:end="111:15"><name pos:start="111:13" pos:end="111:15">int</name></type> <name pos:start="111:17" pos:end="111:17">j</name></decl>;</decl_stmt>



            <for pos:start="115:13" pos:end="117:51">for <control pos:start="115:17" pos:end="115:47">(<init pos:start="115:18" pos:end="115:23"><expr pos:start="115:18" pos:end="115:22"><name pos:start="115:18" pos:end="115:18">j</name> <operator pos:start="115:20" pos:end="115:20">=</operator> <literal type="number" pos:start="115:22" pos:end="115:22">0</literal></expr>;</init> <condition pos:start="115:25" pos:end="115:42"><expr pos:start="115:25" pos:end="115:41"><name pos:start="115:25" pos:end="115:25">j</name> <operator pos:start="115:27" pos:end="115:27">&lt;</operator> <name pos:start="115:29" pos:end="115:41">lumFilterSize</name></expr>;</condition> <incr pos:start="115:44" pos:end="115:46"><expr pos:start="115:44" pos:end="115:46"><name pos:start="115:44" pos:end="115:44">j</name><operator pos:start="115:45" pos:end="115:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="117:17" pos:end="117:51"><block_content pos:start="117:17" pos:end="117:51">

                <expr_stmt pos:start="117:17" pos:end="117:51"><expr pos:start="117:17" pos:end="117:50"><name pos:start="117:17" pos:end="117:19">val</name> <operator pos:start="117:21" pos:end="117:22">+=</operator> <name pos:start="117:24" pos:end="117:35"><name pos:start="117:24" pos:end="117:29">alpSrc</name><index pos:start="117:30" pos:end="117:32">[<expr pos:start="117:31" pos:end="117:31"><name pos:start="117:31" pos:end="117:31">j</name></expr>]</index><index pos:start="117:33" pos:end="117:35">[<expr pos:start="117:34" pos:end="117:34"><name pos:start="117:34" pos:end="117:34">i</name></expr>]</index></name> <operator pos:start="117:37" pos:end="117:37">*</operator> <name pos:start="117:39" pos:end="117:50"><name pos:start="117:39" pos:end="117:47">lumFilter</name><index pos:start="117:48" pos:end="117:50">[<expr pos:start="117:49" pos:end="117:49"><name pos:start="117:49" pos:end="117:49">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="121:13" pos:end="121:41"><expr pos:start="121:13" pos:end="121:40"><call pos:start="121:13" pos:end="121:40"><name pos:start="121:13" pos:end="121:24">output_pixel</name><argument_list pos:start="121:25" pos:end="121:40">(<argument pos:start="121:26" pos:end="121:34"><expr pos:start="121:26" pos:end="121:34"><operator pos:start="121:26" pos:end="121:26">&amp;</operator><name pos:start="121:27" pos:end="121:34"><name pos:start="121:27" pos:end="121:31">aDest</name><index pos:start="121:32" pos:end="121:34">[<expr pos:start="121:33" pos:end="121:33"><name pos:start="121:33" pos:end="121:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="121:37" pos:end="121:39"><expr pos:start="121:37" pos:end="121:39"><name pos:start="121:37" pos:end="121:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

<cpp:undef pos:start="127:1" pos:end="127:19">#<cpp:directive pos:start="127:2" pos:end="127:6">undef</cpp:directive> <name pos:start="127:8" pos:end="127:19">output_pixel</name></cpp:undef>

</block_content>}</block>
</unit>
