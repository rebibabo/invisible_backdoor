<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6804.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:55"><name pos:start="1:1" pos:end="1:19">x11grab_read_packet</name><argument_list pos:start="1:20" pos:end="1:55">(<argument pos:start="1:21" pos:end="1:39">AVFormatContext *s1</argument>, <argument pos:start="1:42" pos:end="1:54">AVPacket *pkt</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:25">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:19">x11_grab</name></name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:38">= <expr pos:start="5:26" pos:end="5:38"><name pos:start="5:26" pos:end="5:38"><name pos:start="5:26" pos:end="5:27">s1</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">Display</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">dpy</name> <init pos:start="7:18" pos:end="7:25">= <expr pos:start="7:20" pos:end="7:25"><name pos:start="7:20" pos:end="7:25"><name pos:start="7:20" pos:end="7:20">s</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:25">dpy</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">XImage</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:17">image</name> <init pos:start="9:19" pos:end="9:28">= <expr pos:start="9:21" pos:end="9:28"><name pos:start="9:21" pos:end="9:28"><name pos:start="9:21" pos:end="9:21">s</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:28">image</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">x_off</name> <init pos:start="11:15" pos:end="11:24">= <expr pos:start="11:17" pos:end="11:24"><name pos:start="11:17" pos:end="11:24"><name pos:start="11:17" pos:end="11:17">s</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:24">x_off</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">y_off</name> <init pos:start="13:15" pos:end="13:24">= <expr pos:start="13:17" pos:end="13:24"><name pos:start="13:17" pos:end="13:24"><name pos:start="13:17" pos:end="13:17">s</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:24">y_off</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:19">curtime</name></decl>, <decl pos:start="17:22" pos:end="17:26"><type ref="prev" pos:start="17:5" pos:end="17:11"/><name pos:start="17:22" pos:end="17:26">delay</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:10">struct</name> <name pos:start="19:12" pos:end="19:19">timespec</name></name></type> <name pos:start="19:21" pos:end="19:22">ts</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:46">/* Calculate the time of the next frame */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:38"><expr pos:start="25:5" pos:end="25:37"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:17">time_frame</name></name> <operator pos:start="25:19" pos:end="25:20">+=</operator> <call pos:start="25:22" pos:end="25:37"><name pos:start="25:22" pos:end="25:28">INT64_C</name><argument_list pos:start="25:29" pos:end="25:37">(<argument pos:start="25:30" pos:end="25:36"><expr pos:start="25:30" pos:end="25:36"><literal type="number" pos:start="25:30" pos:end="25:36">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:38">/* wait based on the frame rate */</comment>

    <for pos:start="31:5" pos:end="55:5">for<control pos:start="31:8" pos:end="31:11">(<init pos:start="31:9" pos:end="31:9">;</init><condition pos:start="31:10" pos:end="31:10">;</condition><incr/>)</control> <block pos:start="31:13" pos:end="55:5">{<block_content pos:start="33:9" pos:end="53:29">

        <expr_stmt pos:start="33:9" pos:end="33:31"><expr pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:15">curtime</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:30"><name pos:start="33:19" pos:end="33:28">av_gettime</name><argument_list pos:start="33:29" pos:end="33:30">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:63"><expr pos:start="35:9" pos:end="35:62"><name pos:start="35:9" pos:end="35:13">delay</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:29"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:29">time_frame</name></name> <operator pos:start="35:31" pos:end="35:31">*</operator> <call pos:start="35:33" pos:end="35:52"><name pos:start="35:33" pos:end="35:38">av_q2d</name><argument_list pos:start="35:39" pos:end="35:52">(<argument pos:start="35:40" pos:end="35:51"><expr pos:start="35:40" pos:end="35:51"><name pos:start="35:40" pos:end="35:51"><name pos:start="35:40" pos:end="35:40">s</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:51">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="35:54" pos:end="35:54">-</operator> <name pos:start="35:56" pos:end="35:62">curtime</name></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="47:9"><if pos:start="37:9" pos:end="47:9">if <condition pos:start="37:12" pos:end="37:23">(<expr pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:17">delay</name> <operator pos:start="37:19" pos:end="37:20">&lt;=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>)</condition> <block pos:start="37:25" pos:end="47:9">{<block_content pos:start="39:13" pos:end="45:18">

            <if_stmt pos:start="39:13" pos:end="43:13"><if pos:start="39:13" pos:end="43:13">if <condition pos:start="39:16" pos:end="39:65">(<expr pos:start="39:17" pos:end="39:64"><name pos:start="39:17" pos:end="39:21">delay</name> <operator pos:start="39:23" pos:end="39:23">&lt;</operator> <call pos:start="39:25" pos:end="39:41"><name pos:start="39:25" pos:end="39:31">INT64_C</name><argument_list pos:start="39:32" pos:end="39:41">(<argument pos:start="39:33" pos:end="39:40"><expr pos:start="39:33" pos:end="39:40"><operator pos:start="39:33" pos:end="39:33">-</operator><literal type="number" pos:start="39:34" pos:end="39:40">1000000</literal></expr></argument>)</argument_list></call> <operator pos:start="39:43" pos:end="39:43">*</operator> <call pos:start="39:45" pos:end="39:64"><name pos:start="39:45" pos:end="39:50">av_q2d</name><argument_list pos:start="39:51" pos:end="39:64">(<argument pos:start="39:52" pos:end="39:63"><expr pos:start="39:52" pos:end="39:63"><name pos:start="39:52" pos:end="39:63"><name pos:start="39:52" pos:end="39:52">s</name><operator pos:start="39:53" pos:end="39:54">-&gt;</operator><name pos:start="39:55" pos:end="39:63">time_base</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:67" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:50">

                <expr_stmt pos:start="41:17" pos:end="41:50"><expr pos:start="41:17" pos:end="41:49"><name pos:start="41:17" pos:end="41:29"><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:29">time_frame</name></name> <operator pos:start="41:31" pos:end="41:32">+=</operator> <call pos:start="41:34" pos:end="41:49"><name pos:start="41:34" pos:end="41:40">INT64_C</name><argument_list pos:start="41:41" pos:end="41:49">(<argument pos:start="41:42" pos:end="41:48"><expr pos:start="41:42" pos:end="41:48"><literal type="number" pos:start="41:42" pos:end="41:48">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:36"><expr pos:start="49:9" pos:end="49:35"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:10">ts</name><operator pos:start="49:11" pos:end="49:11">.</operator><name pos:start="49:12" pos:end="49:17">tv_sec</name></name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:25">delay</name> <operator pos:start="49:27" pos:end="49:27">/</operator> <literal type="number" pos:start="49:29" pos:end="49:35">1000000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:46"><expr pos:start="51:9" pos:end="51:45"><name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:10">ts</name><operator pos:start="51:11" pos:end="51:11">.</operator><name pos:start="51:12" pos:end="51:18">tv_nsec</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <operator pos:start="51:22" pos:end="51:22">(</operator><name pos:start="51:23" pos:end="51:27">delay</name> <operator pos:start="51:29" pos:end="51:29">%</operator> <literal type="number" pos:start="51:31" pos:end="51:37">1000000</literal><operator pos:start="51:38" pos:end="51:38">)</operator> <operator pos:start="51:40" pos:end="51:40">*</operator> <literal type="number" pos:start="51:42" pos:end="51:45">1000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:29"><expr pos:start="53:9" pos:end="53:28"><call pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:17">nanosleep</name><argument_list pos:start="53:18" pos:end="53:28">(<argument pos:start="53:19" pos:end="53:21"><expr pos:start="53:19" pos:end="53:21"><operator pos:start="53:19" pos:end="53:19">&amp;</operator><name pos:start="53:20" pos:end="53:21">ts</name></expr></argument>, <argument pos:start="53:24" pos:end="53:27"><expr pos:start="53:24" pos:end="53:27"><name pos:start="53:24" pos:end="53:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="59:5" pos:end="59:24"><expr pos:start="59:5" pos:end="59:23"><call pos:start="59:5" pos:end="59:23"><name pos:start="59:5" pos:end="59:18">av_init_packet</name><argument_list pos:start="59:19" pos:end="59:23">(<argument pos:start="59:20" pos:end="59:22"><expr pos:start="59:20" pos:end="59:22"><name pos:start="59:20" pos:end="59:22">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:28"><expr pos:start="61:5" pos:end="61:27"><name pos:start="61:5" pos:end="61:13"><name pos:start="61:5" pos:end="61:7">pkt</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:13">data</name></name> <operator pos:start="61:15" pos:end="61:15">=</operator> <name pos:start="61:17" pos:end="61:27"><name pos:start="61:17" pos:end="61:21">image</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:27">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:30"><expr pos:start="63:5" pos:end="63:29"><name pos:start="63:5" pos:end="63:13"><name pos:start="63:5" pos:end="63:7">pkt</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:13">size</name></name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:29"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:29">frame_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:23"><expr pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:12"><name pos:start="65:5" pos:end="65:7">pkt</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:12">pts</name></name> <operator pos:start="65:14" pos:end="65:14">=</operator> <name pos:start="65:16" pos:end="65:22">curtime</name></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="85:5"><if pos:start="69:5" pos:end="77:5">if<condition pos:start="69:7" pos:end="69:18">(<expr pos:start="69:8" pos:end="69:17"><name pos:start="69:8" pos:end="69:17"><name pos:start="69:8" pos:end="69:8">s</name><operator pos:start="69:9" pos:end="69:10">-&gt;</operator><name pos:start="69:11" pos:end="69:17">use_shm</name></name></expr>)</condition> <block pos:start="69:20" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:9">

        <if_stmt pos:start="71:9" pos:end="75:9"><if pos:start="71:9" pos:end="75:9">if <condition pos:start="71:12" pos:end="71:100">(<expr pos:start="71:13" pos:end="71:99"><operator pos:start="71:13" pos:end="71:13">!</operator><call pos:start="71:14" pos:end="71:99"><name pos:start="71:14" pos:end="71:25">XShmGetImage</name><argument_list pos:start="71:26" pos:end="71:99">(<argument pos:start="71:27" pos:end="71:29"><expr pos:start="71:27" pos:end="71:29"><name pos:start="71:27" pos:end="71:29">dpy</name></expr></argument>, <argument pos:start="71:32" pos:end="71:66"><expr pos:start="71:32" pos:end="71:66"><call pos:start="71:32" pos:end="71:66"><name pos:start="71:32" pos:end="71:41">RootWindow</name><argument_list pos:start="71:42" pos:end="71:66">(<argument pos:start="71:43" pos:end="71:45"><expr pos:start="71:43" pos:end="71:45"><name pos:start="71:43" pos:end="71:45">dpy</name></expr></argument>, <argument pos:start="71:48" pos:end="71:65"><expr pos:start="71:48" pos:end="71:65"><call pos:start="71:48" pos:end="71:65"><name pos:start="71:48" pos:end="71:60">DefaultScreen</name><argument_list pos:start="71:61" pos:end="71:65">(<argument pos:start="71:62" pos:end="71:64"><expr pos:start="71:62" pos:end="71:64"><name pos:start="71:62" pos:end="71:64">dpy</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="71:69" pos:end="71:73"><expr pos:start="71:69" pos:end="71:73"><name pos:start="71:69" pos:end="71:73">image</name></expr></argument>, <argument pos:start="71:76" pos:end="71:80"><expr pos:start="71:76" pos:end="71:80"><name pos:start="71:76" pos:end="71:80">x_off</name></expr></argument>, <argument pos:start="71:83" pos:end="71:87"><expr pos:start="71:83" pos:end="71:87"><name pos:start="71:83" pos:end="71:87">y_off</name></expr></argument>, <argument pos:start="71:90" pos:end="71:98"><expr pos:start="71:90" pos:end="71:98"><name pos:start="71:90" pos:end="71:98">AllPlanes</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:102" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:64">

            <expr_stmt pos:start="73:13" pos:end="73:64"><expr pos:start="73:13" pos:end="73:63"><call pos:start="73:13" pos:end="73:63"><name pos:start="73:13" pos:end="73:18">av_log</name> <argument_list pos:start="73:20" pos:end="73:63">(<argument pos:start="73:21" pos:end="73:22"><expr pos:start="73:21" pos:end="73:22"><name pos:start="73:21" pos:end="73:22">s1</name></expr></argument>, <argument pos:start="73:25" pos:end="73:35"><expr pos:start="73:25" pos:end="73:35"><name pos:start="73:25" pos:end="73:35">AV_LOG_INFO</name></expr></argument>, <argument pos:start="73:38" pos:end="73:62"><expr pos:start="73:38" pos:end="73:62"><literal type="string" pos:start="73:38" pos:end="73:62">"XShmGetImage() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="85:5">else <block pos:start="77:12" pos:end="85:5">{<block_content pos:start="79:9" pos:end="83:9">

        <if_stmt pos:start="79:9" pos:end="83:9"><if pos:start="79:9" pos:end="83:9">if <condition pos:start="79:12" pos:end="79:89">(<expr pos:start="79:13" pos:end="79:88"><operator pos:start="79:13" pos:end="79:13">!</operator><call pos:start="79:14" pos:end="79:88"><name pos:start="79:14" pos:end="79:25">xget_zpixmap</name><argument_list pos:start="79:26" pos:end="79:88">(<argument pos:start="79:27" pos:end="79:29"><expr pos:start="79:27" pos:end="79:29"><name pos:start="79:27" pos:end="79:29">dpy</name></expr></argument>, <argument pos:start="79:32" pos:end="79:66"><expr pos:start="79:32" pos:end="79:66"><call pos:start="79:32" pos:end="79:66"><name pos:start="79:32" pos:end="79:41">RootWindow</name><argument_list pos:start="79:42" pos:end="79:66">(<argument pos:start="79:43" pos:end="79:45"><expr pos:start="79:43" pos:end="79:45"><name pos:start="79:43" pos:end="79:45">dpy</name></expr></argument>, <argument pos:start="79:48" pos:end="79:65"><expr pos:start="79:48" pos:end="79:65"><call pos:start="79:48" pos:end="79:65"><name pos:start="79:48" pos:end="79:60">DefaultScreen</name><argument_list pos:start="79:61" pos:end="79:65">(<argument pos:start="79:62" pos:end="79:64"><expr pos:start="79:62" pos:end="79:64"><name pos:start="79:62" pos:end="79:64">dpy</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="79:69" pos:end="79:73"><expr pos:start="79:69" pos:end="79:73"><name pos:start="79:69" pos:end="79:73">image</name></expr></argument>, <argument pos:start="79:76" pos:end="79:80"><expr pos:start="79:76" pos:end="79:80"><name pos:start="79:76" pos:end="79:80">x_off</name></expr></argument>, <argument pos:start="79:83" pos:end="79:87"><expr pos:start="79:83" pos:end="79:87"><name pos:start="79:83" pos:end="79:87">y_off</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:91" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:63">

            <expr_stmt pos:start="81:13" pos:end="81:63"><expr pos:start="81:13" pos:end="81:62"><call pos:start="81:13" pos:end="81:62"><name pos:start="81:13" pos:end="81:18">av_log</name> <argument_list pos:start="81:20" pos:end="81:62">(<argument pos:start="81:21" pos:end="81:22"><expr pos:start="81:21" pos:end="81:22"><name pos:start="81:21" pos:end="81:22">s1</name></expr></argument>, <argument pos:start="81:25" pos:end="81:35"><expr pos:start="81:25" pos:end="81:35"><name pos:start="81:25" pos:end="81:35">AV_LOG_INFO</name></expr></argument>, <argument pos:start="81:38" pos:end="81:61"><expr pos:start="81:38" pos:end="81:61"><literal type="string" pos:start="81:38" pos:end="81:61">"XGetZPixmap() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="89:5" pos:end="93:5"><if pos:start="89:5" pos:end="93:5">if<condition pos:start="89:7" pos:end="89:19">(<expr pos:start="89:8" pos:end="89:18"><operator pos:start="89:8" pos:end="89:8">!</operator><name pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:18">nomouse</name></name></expr>)</condition><block pos:start="89:20" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:38">

        <expr_stmt pos:start="91:9" pos:end="91:38"><expr pos:start="91:9" pos:end="91:37"><call pos:start="91:9" pos:end="91:37"><name pos:start="91:9" pos:end="91:27">paint_mouse_pointer</name><argument_list pos:start="91:28" pos:end="91:37">(<argument pos:start="91:29" pos:end="91:33"><expr pos:start="91:29" pos:end="91:33"><name pos:start="91:29" pos:end="91:33">image</name></expr></argument>, <argument pos:start="91:36" pos:end="91:36"><expr pos:start="91:36" pos:end="91:36"><name pos:start="91:36" pos:end="91:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="97:5" pos:end="97:25">return <expr pos:start="97:12" pos:end="97:24"><name pos:start="97:12" pos:end="97:24"><name pos:start="97:12" pos:end="97:12">s</name><operator pos:start="97:13" pos:end="97:14">-&gt;</operator><name pos:start="97:15" pos:end="97:24">frame_size</name></name></expr>;</return>

</block_content>}</block>
</unit>
