<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8938.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">backup_do_checkpoint</name><parameter_list pos:start="1:26" pos:end="1:54">(<parameter pos:start="1:27" pos:end="1:39"><decl pos:start="1:27" pos:end="1:39"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:34">BlockJob</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">job</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:53"><decl pos:start="1:42" pos:end="1:53"><type pos:start="1:42" pos:end="1:53"><name pos:start="1:42" pos:end="1:46">Error</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier><modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:46">

    <decl_stmt pos:start="5:5" pos:end="5:75"><decl pos:start="5:5" pos:end="5:74"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">BackupBlockJob</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:30">backup_job</name> <init pos:start="5:32" pos:end="5:74">= <expr pos:start="5:34" pos:end="5:74"><call pos:start="5:34" pos:end="5:74"><name pos:start="5:34" pos:end="5:45">container_of</name><argument_list pos:start="5:46" pos:end="5:74">(<argument pos:start="5:47" pos:end="5:49"><expr pos:start="5:47" pos:end="5:49"><name pos:start="5:47" pos:end="5:49">job</name></expr></argument>, <argument pos:start="5:52" pos:end="5:65"><expr pos:start="5:52" pos:end="5:65"><name pos:start="5:52" pos:end="5:65">BackupBlockJob</name></expr></argument>, <argument pos:start="5:68" pos:end="5:73"><expr pos:start="5:68" pos:end="5:73"><name pos:start="5:68" pos:end="5:73">common</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">len</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:59"><expr pos:start="11:5" pos:end="11:58"><call pos:start="11:5" pos:end="11:58"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:58">(<argument pos:start="11:12" pos:end="11:57"><expr pos:start="11:12" pos:end="11:57"><name pos:start="11:12" pos:end="11:32"><name pos:start="11:12" pos:end="11:14">job</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:22">driver</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:32">job_type</name></name> <operator pos:start="11:34" pos:end="11:35">==</operator> <name pos:start="11:37" pos:end="11:57">BLOCK_JOB_TYPE_BACKUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:55">(<expr pos:start="15:9" pos:end="15:54"><name pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:18">backup_job</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:29">sync_mode</name></name> <operator pos:start="15:31" pos:end="15:32">!=</operator> <name pos:start="15:34" pos:end="15:54">MIRROR_SYNC_MODE_NONE</name></expr>)</condition> <block pos:start="15:57" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:15">

        <expr_stmt pos:start="17:9" pos:end="19:38"><expr pos:start="17:9" pos:end="19:37"><call pos:start="17:9" pos:end="19:37"><name pos:start="17:9" pos:end="17:18">error_setg</name><argument_list pos:start="17:19" pos:end="19:37">(<argument pos:start="17:20" pos:end="17:23"><expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">errp</name></expr></argument>, <argument pos:start="17:26" pos:end="19:36"><expr pos:start="17:26" pos:end="19:36"><literal type="string" pos:start="17:26" pos:end="17:75">"The backup job only supports block checkpoint in"</literal>

                   <literal type="string" pos:start="19:20" pos:end="19:36">" sync=none mode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:73"><expr pos:start="27:5" pos:end="27:72"><name pos:start="27:5" pos:end="27:7">len</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:72"><name pos:start="27:11" pos:end="27:22">DIV_ROUND_UP</name><argument_list pos:start="27:23" pos:end="27:72">(<argument pos:start="27:24" pos:end="27:45"><expr pos:start="27:24" pos:end="27:45"><name pos:start="27:24" pos:end="27:45"><name pos:start="27:24" pos:end="27:33">backup_job</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:41">common</name><operator pos:start="27:42" pos:end="27:42">.</operator><name pos:start="27:43" pos:end="27:45">len</name></name></expr></argument>, <argument pos:start="27:48" pos:end="27:71"><expr pos:start="27:48" pos:end="27:71"><name pos:start="27:48" pos:end="27:71"><name pos:start="27:48" pos:end="27:57">backup_job</name><operator pos:start="27:58" pos:end="27:59">-&gt;</operator><name pos:start="27:60" pos:end="27:71">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:46"><expr pos:start="29:5" pos:end="29:45"><call pos:start="29:5" pos:end="29:45"><name pos:start="29:5" pos:end="29:15">bitmap_zero</name><argument_list pos:start="29:16" pos:end="29:45">(<argument pos:start="29:17" pos:end="29:39"><expr pos:start="29:17" pos:end="29:39"><name pos:start="29:17" pos:end="29:39"><name pos:start="29:17" pos:end="29:26">backup_job</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:39">done_bitmap</name></name></expr></argument>, <argument pos:start="29:42" pos:end="29:44"><expr pos:start="29:42" pos:end="29:44"><name pos:start="29:42" pos:end="29:44">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
