<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17503.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:29">asink_init</name><parameter_list pos:start="1:30" pos:end="1:83">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:45">AVFilterContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:68"><decl pos:start="1:53" pos:end="1:68"><type pos:start="1:53" pos:end="1:68"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:62">char</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">args</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:82"><decl pos:start="1:71" pos:end="1:82"><type pos:start="1:71" pos:end="1:82"><name pos:start="1:71" pos:end="1:74">void</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:82">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:28">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">BufferSinkContext</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">buf</name> <init pos:start="5:28" pos:end="5:38">= <expr pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:32">ctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:38">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">AVABufferSinkParams</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:31">params</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="21:47"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:15">opaque</name></expr>)</condition> <block pos:start="11:18" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:31">

        <expr_stmt pos:start="13:9" pos:end="15:88"><expr pos:start="13:9" pos:end="15:87"><call pos:start="13:9" pos:end="15:87"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="15:87">(<argument pos:start="13:16" pos:end="13:18"><expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">ctx</name></expr></argument>, <argument pos:start="13:21" pos:end="13:32"><expr pos:start="13:21" pos:end="13:32"><name pos:start="13:21" pos:end="13:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="15:16" pos:end="15:86"><expr pos:start="15:16" pos:end="15:86"><literal type="string" pos:start="15:16" pos:end="15:86">"No opaque field provided, an AVABufferSinkParams struct is required\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="21:47">else<block type="pseudo" pos:start="21:9" pos:end="21:47"><block_content pos:start="21:9" pos:end="21:47">

        <expr_stmt pos:start="21:9" pos:end="21:47"><expr pos:start="21:9" pos:end="21:46"><name pos:start="21:9" pos:end="21:14">params</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <operator pos:start="21:18" pos:end="21:18">(</operator><name pos:start="21:19" pos:end="21:37">AVABufferSinkParams</name> <operator pos:start="21:39" pos:end="21:39">*</operator><operator pos:start="21:40" pos:end="21:40">)</operator><name pos:start="21:41" pos:end="21:46">opaque</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:47"><expr pos:start="25:5" pos:end="25:46"><name pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:7">buf</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:20">sample_fmts</name></name>     <operator pos:start="25:26" pos:end="25:26">=</operator> <name pos:start="25:28" pos:end="25:46"><name pos:start="25:28" pos:end="25:33">params</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:46">sample_fmts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:51"><expr pos:start="27:5" pos:end="27:50"><name pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:7">buf</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:24">channel_layouts</name></name> <operator pos:start="27:26" pos:end="27:26">=</operator> <name pos:start="27:28" pos:end="27:50"><name pos:start="27:28" pos:end="27:33">params</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:50">channel_layouts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:48"><expr pos:start="29:5" pos:end="29:47"><name pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:7">buf</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:21">packing_fmts</name></name>    <operator pos:start="29:26" pos:end="29:26">=</operator> <name pos:start="29:28" pos:end="29:47"><name pos:start="29:28" pos:end="29:33">params</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:47">packing_fmts</name></name></expr>;</expr_stmt>



    <return pos:start="33:5" pos:end="33:28">return <expr pos:start="33:12" pos:end="33:27"><call pos:start="33:12" pos:end="33:27"><name pos:start="33:12" pos:end="33:22">common_init</name><argument_list pos:start="33:23" pos:end="33:27">(<argument pos:start="33:24" pos:end="33:26"><expr pos:start="33:24" pos:end="33:26"><name pos:start="33:24" pos:end="33:26">ctx</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
