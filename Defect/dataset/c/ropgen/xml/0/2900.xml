<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2900.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">vnc_listen_read</name><parameter_list pos:start="1:28" pos:end="1:41">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:34"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VncDisplay</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">vs</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:22">sockaddr_in</name></name></type> <name pos:start="7:24" pos:end="7:27">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">socklen_t</name></type> <name pos:start="9:15" pos:end="9:21">addrlen</name> <init pos:start="9:23" pos:end="9:36">= <expr pos:start="9:25" pos:end="9:36"><sizeof pos:start="9:25" pos:end="9:36">sizeof<argument_list pos:start="9:31" pos:end="9:36">(<argument pos:start="9:32" pos:end="9:35"><expr pos:start="9:32" pos:end="9:35"><name pos:start="9:32" pos:end="9:35">addr</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:18">/* Catch-up */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:20"><expr pos:start="15:5" pos:end="15:19"><call pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:17">vga_hw_update</name><argument_list pos:start="15:18" pos:end="15:19">()</argument_list></call></expr>;</expr_stmt>



    <decl_stmt pos:start="19:5" pos:end="19:75"><decl pos:start="19:5" pos:end="19:74"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:13">csock</name> <init pos:start="19:15" pos:end="19:74">= <expr pos:start="19:17" pos:end="19:74"><call pos:start="19:17" pos:end="19:74"><name pos:start="19:17" pos:end="19:27">qemu_accept</name><argument_list pos:start="19:28" pos:end="19:74">(<argument pos:start="19:29" pos:end="19:37"><expr pos:start="19:29" pos:end="19:37"><name pos:start="19:29" pos:end="19:37"><name pos:start="19:29" pos:end="19:30">vs</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:37">lsock</name></name></expr></argument>, <argument pos:start="19:40" pos:end="19:63"><expr pos:start="19:40" pos:end="19:63"><operator pos:start="19:40" pos:end="19:40">(</operator>struct <name pos:start="19:48" pos:end="19:55">sockaddr</name> <operator pos:start="19:57" pos:end="19:57">*</operator><operator pos:start="19:58" pos:end="19:58">)</operator><operator pos:start="19:59" pos:end="19:59">&amp;</operator><name pos:start="19:60" pos:end="19:63">addr</name></expr></argument>, <argument pos:start="19:66" pos:end="19:73"><expr pos:start="19:66" pos:end="19:73"><operator pos:start="19:66" pos:end="19:66">&amp;</operator><name pos:start="19:67" pos:end="19:73">addrlen</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:20">(<expr pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:13">csock</name> <operator pos:start="21:15" pos:end="21:16">!=</operator> <operator pos:start="21:18" pos:end="21:18">-</operator><literal type="number" pos:start="21:19" pos:end="21:19">1</literal></expr>)</condition> <block pos:start="21:22" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:31">

        <expr_stmt pos:start="23:9" pos:end="23:31"><expr pos:start="23:9" pos:end="23:30"><call pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:19">vnc_connect</name><argument_list pos:start="23:20" pos:end="23:30">(<argument pos:start="23:21" pos:end="23:22"><expr pos:start="23:21" pos:end="23:22"><name pos:start="23:21" pos:end="23:22">vs</name></expr></argument>, <argument pos:start="23:25" pos:end="23:29"><expr pos:start="23:25" pos:end="23:29"><name pos:start="23:25" pos:end="23:29">csock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
