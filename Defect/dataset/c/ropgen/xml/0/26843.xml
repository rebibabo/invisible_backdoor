<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26843.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:20"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">unsigned</name> <name pos:start="1:17" pos:end="1:20">long</name></type> <name pos:start="1:22" pos:end="1:36">iv_decode_frame</name><parameter_list pos:start="1:37" pos:end="3:70">(<parameter pos:start="1:38" pos:end="1:59"><decl pos:start="1:38" pos:end="1:59"><type pos:start="1:38" pos:end="1:59"><name pos:start="1:38" pos:end="1:56">Indeo3DecodeContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">s</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:55"><decl pos:start="3:38" pos:end="3:55"><type pos:start="3:38" pos:end="3:55"><specifier pos:start="3:38" pos:end="3:42">const</specifier> <name pos:start="3:44" pos:end="3:50">uint8_t</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:55">buf</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:69"><decl pos:start="3:58" pos:end="3:69"><type pos:start="3:58" pos:end="3:69"><name pos:start="3:58" pos:end="3:60">int</name></type> <name pos:start="3:62" pos:end="3:69">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="133:1">{<block_content pos:start="7:5" pos:end="131:13">

    <decl_stmt pos:start="7:5" pos:end="9:45"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:28">image_width</name></decl>, <decl pos:start="7:31" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:31" pos:end="7:42">image_height</name></decl>,

                 <decl pos:start="9:18" pos:end="9:29"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="9:18" pos:end="9:29">chroma_width</name></decl>, <decl pos:start="9:32" pos:end="9:44"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="9:32" pos:end="9:44">chroma_height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="13:64"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">long</name></type> <name pos:start="11:19" pos:end="11:23">flags</name></decl>, <decl pos:start="11:26" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:17"/><name pos:start="11:26" pos:end="11:34">cb_offset</name></decl>, <decl pos:start="11:37" pos:end="11:45"><type ref="prev" pos:start="11:5" pos:end="11:17"/><name pos:start="11:37" pos:end="11:45">data_size</name></decl>,

                  <decl pos:start="13:19" pos:end="13:26"><type ref="prev" pos:start="11:5" pos:end="11:17"/><name pos:start="13:19" pos:end="13:26">y_offset</name></decl>, <decl pos:start="13:29" pos:end="13:36"><type ref="prev" pos:start="11:5" pos:end="11:17"/><name pos:start="13:29" pos:end="13:36">v_offset</name></decl>, <decl pos:start="13:39" pos:end="13:46"><type ref="prev" pos:start="11:5" pos:end="11:17"/><name pos:start="13:39" pos:end="13:46">u_offset</name></decl>, <decl pos:start="13:49" pos:end="13:63"><type ref="prev" pos:start="11:5" pos:end="11:17"/><name pos:start="13:49" pos:end="13:63">mc_vector_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:26">hdr_pos</name></decl>, <decl pos:start="15:29" pos:end="15:36"><type ref="prev" pos:start="15:5" pos:end="15:19"><modifier pos:start="15:29" pos:end="15:29">*</modifier></type><name pos:start="15:30" pos:end="15:36">buf_pos</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:18"><expr pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:11">buf_pos</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <name pos:start="19:15" pos:end="19:17">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:18"><expr pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:11">buf_pos</name> <operator pos:start="21:13" pos:end="21:14">+=</operator> <literal type="number" pos:start="21:16" pos:end="21:17">18</literal></expr>;</expr_stmt> <comment type="block" pos:start="21:20" pos:end="21:69">/* skip OS header (16 bytes) and version number */</comment>



    <expr_stmt pos:start="25:5" pos:end="25:42"><expr pos:start="25:5" pos:end="25:41"><name pos:start="25:5" pos:end="25:9">flags</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:41"><name pos:start="25:13" pos:end="25:31">bytestream_get_le16</name><argument_list pos:start="25:32" pos:end="25:41">(<argument pos:start="25:33" pos:end="25:40"><expr pos:start="25:33" pos:end="25:40"><operator pos:start="25:33" pos:end="25:33">&amp;</operator><name pos:start="25:34" pos:end="25:40">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:46"><expr pos:start="27:5" pos:end="27:45"><name pos:start="27:5" pos:end="27:13">data_size</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:45"><name pos:start="27:17" pos:end="27:35">bytestream_get_le32</name><argument_list pos:start="27:36" pos:end="27:45">(<argument pos:start="27:37" pos:end="27:44"><expr pos:start="27:37" pos:end="27:44"><operator pos:start="27:37" pos:end="27:37">&amp;</operator><name pos:start="27:38" pos:end="27:44">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:13">cb_offset</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <operator pos:start="29:17" pos:end="29:17">*</operator><name pos:start="29:18" pos:end="29:24">buf_pos</name><operator pos:start="29:25" pos:end="29:26">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:17"><expr pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:11">buf_pos</name> <operator pos:start="31:13" pos:end="31:14">+=</operator> <literal type="number" pos:start="31:16" pos:end="31:16">3</literal></expr>;</expr_stmt> <comment type="block" pos:start="31:19" pos:end="31:55">/* skip reserved byte and checksum */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:49"><expr pos:start="33:5" pos:end="33:48"><name pos:start="33:5" pos:end="33:16">image_height</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="33:48"><name pos:start="33:20" pos:end="33:38">bytestream_get_le16</name><argument_list pos:start="33:39" pos:end="33:48">(<argument pos:start="33:40" pos:end="33:47"><expr pos:start="33:40" pos:end="33:47"><operator pos:start="33:40" pos:end="33:40">&amp;</operator><name pos:start="33:41" pos:end="33:47">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:49"><expr pos:start="35:5" pos:end="35:48"><name pos:start="35:5" pos:end="35:15">image_width</name>  <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="35:48"><name pos:start="35:20" pos:end="35:38">bytestream_get_le16</name><argument_list pos:start="35:39" pos:end="35:48">(<argument pos:start="35:40" pos:end="35:47"><expr pos:start="35:40" pos:end="35:47"><operator pos:start="35:40" pos:end="35:40">&amp;</operator><name pos:start="35:41" pos:end="35:47">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="41:18"><if pos:start="39:5" pos:end="41:18">if<condition pos:start="39:7" pos:end="39:65">(<expr pos:start="39:8" pos:end="39:64"><call pos:start="39:8" pos:end="39:64"><name pos:start="39:8" pos:end="39:31">avcodec_check_dimensions</name><argument_list pos:start="39:32" pos:end="39:64">(<argument pos:start="39:33" pos:end="39:36"><expr pos:start="39:33" pos:end="39:36"><name pos:start="39:33" pos:end="39:36">NULL</name></expr></argument>, <argument pos:start="39:39" pos:end="39:49"><expr pos:start="39:39" pos:end="39:49"><name pos:start="39:39" pos:end="39:49">image_width</name></expr></argument>, <argument pos:start="39:52" pos:end="39:63"><expr pos:start="39:52" pos:end="39:63"><name pos:start="39:52" pos:end="39:63">image_height</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:18"><block_content pos:start="41:9" pos:end="41:18">

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:55"><expr pos:start="45:5" pos:end="45:54"><name pos:start="45:5" pos:end="45:17">chroma_height</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <operator pos:start="45:21" pos:end="45:21">(</operator><operator pos:start="45:22" pos:end="45:22">(</operator><name pos:start="45:23" pos:end="45:34">image_height</name> <operator pos:start="45:36" pos:end="45:37">&gt;&gt;</operator> <literal type="number" pos:start="45:39" pos:end="45:39">2</literal><operator pos:start="45:40" pos:end="45:40">)</operator> <operator pos:start="45:42" pos:end="45:42">+</operator> <literal type="number" pos:start="45:44" pos:end="45:44">3</literal><operator pos:start="45:45" pos:end="45:45">)</operator> <operator pos:start="45:47" pos:end="45:47">&amp;</operator> <literal type="number" pos:start="45:49" pos:end="45:54">0x7ffc</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:53"><expr pos:start="47:5" pos:end="47:52"><name pos:start="47:5" pos:end="47:16">chroma_width</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <operator pos:start="47:20" pos:end="47:20">(</operator><operator pos:start="47:21" pos:end="47:21">(</operator><name pos:start="47:22" pos:end="47:32">image_width</name> <operator pos:start="47:34" pos:end="47:35">&gt;&gt;</operator> <literal type="number" pos:start="47:37" pos:end="47:37">2</literal><operator pos:start="47:38" pos:end="47:38">)</operator> <operator pos:start="47:40" pos:end="47:40">+</operator> <literal type="number" pos:start="47:42" pos:end="47:42">3</literal><operator pos:start="47:43" pos:end="47:43">)</operator> <operator pos:start="47:45" pos:end="47:45">&amp;</operator> <literal type="number" pos:start="47:47" pos:end="47:52">0x7ffc</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:45"><expr pos:start="49:5" pos:end="49:44"><name pos:start="49:5" pos:end="49:12">y_offset</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:44"><name pos:start="49:16" pos:end="49:34">bytestream_get_le32</name><argument_list pos:start="49:35" pos:end="49:44">(<argument pos:start="49:36" pos:end="49:43"><expr pos:start="49:36" pos:end="49:43"><operator pos:start="49:36" pos:end="49:36">&amp;</operator><name pos:start="49:37" pos:end="49:43">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:45"><expr pos:start="51:5" pos:end="51:44"><name pos:start="51:5" pos:end="51:12">v_offset</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <call pos:start="51:16" pos:end="51:44"><name pos:start="51:16" pos:end="51:34">bytestream_get_le32</name><argument_list pos:start="51:35" pos:end="51:44">(<argument pos:start="51:36" pos:end="51:43"><expr pos:start="51:36" pos:end="51:43"><operator pos:start="51:36" pos:end="51:36">&amp;</operator><name pos:start="51:37" pos:end="51:43">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:45"><expr pos:start="53:5" pos:end="53:44"><name pos:start="53:5" pos:end="53:12">u_offset</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <call pos:start="53:16" pos:end="53:44"><name pos:start="53:16" pos:end="53:34">bytestream_get_le32</name><argument_list pos:start="53:35" pos:end="53:44">(<argument pos:start="53:36" pos:end="53:43"><expr pos:start="53:36" pos:end="53:43"><operator pos:start="53:36" pos:end="53:36">&amp;</operator><name pos:start="53:37" pos:end="53:43">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:17"><expr pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:11">buf_pos</name> <operator pos:start="55:13" pos:end="55:14">+=</operator> <literal type="number" pos:start="55:16" pos:end="55:16">4</literal></expr>;</expr_stmt> <comment type="block" pos:start="55:19" pos:end="55:32">/* reserved */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:22"><expr pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:11">hdr_pos</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:21">buf_pos</name></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="59:35"><if pos:start="59:5" pos:end="59:35">if<condition pos:start="59:7" pos:end="59:25">(<expr pos:start="59:8" pos:end="59:24"><name pos:start="59:8" pos:end="59:16">data_size</name> <operator pos:start="59:18" pos:end="59:19">==</operator> <literal type="number" pos:start="59:21" pos:end="59:24">0x80</literal></expr>)</condition><block type="pseudo" pos:start="59:27" pos:end="59:35"><block_content pos:start="59:27" pos:end="59:35"> <return pos:start="59:27" pos:end="59:35">return <expr pos:start="59:34" pos:end="59:34"><literal type="number" pos:start="59:34" pos:end="59:34">4</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="75:5"><if pos:start="63:5" pos:end="69:5">if<condition pos:start="63:7" pos:end="63:21">(<expr pos:start="63:8" pos:end="63:20"><name pos:start="63:8" pos:end="63:12">flags</name> <operator pos:start="63:14" pos:end="63:14">&amp;</operator> <literal type="number" pos:start="63:16" pos:end="63:20">0x200</literal></expr>)</condition> <block pos:start="63:23" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:35">

        <expr_stmt pos:start="65:9" pos:end="65:39"><expr pos:start="65:9" pos:end="65:38"><name pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:20">cur_frame</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:34"><name pos:start="65:24" pos:end="65:24">s</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:34">iv_frame</name></name> <operator pos:start="65:36" pos:end="65:36">+</operator> <literal type="number" pos:start="65:38" pos:end="65:38">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:35"><expr pos:start="67:9" pos:end="67:34"><name pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:20">ref_frame</name></name> <operator pos:start="67:22" pos:end="67:22">=</operator> <name pos:start="67:24" pos:end="67:34"><name pos:start="67:24" pos:end="67:24">s</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:34">iv_frame</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="75:5">else <block pos:start="69:12" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:39">

        <expr_stmt pos:start="71:9" pos:end="71:35"><expr pos:start="71:9" pos:end="71:34"><name pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:20">cur_frame</name></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <name pos:start="71:24" pos:end="71:34"><name pos:start="71:24" pos:end="71:24">s</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:34">iv_frame</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:39"><expr pos:start="73:9" pos:end="73:38"><name pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:20">ref_frame</name></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <name pos:start="73:24" pos:end="73:34"><name pos:start="73:24" pos:end="73:24">s</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:34">iv_frame</name></name> <operator pos:start="73:36" pos:end="73:36">+</operator> <literal type="number" pos:start="73:38" pos:end="73:38">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:34"><expr pos:start="79:5" pos:end="79:33"><name pos:start="79:5" pos:end="79:11">buf_pos</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <name pos:start="79:15" pos:end="79:17">buf</name> <operator pos:start="79:19" pos:end="79:19">+</operator> <literal type="number" pos:start="79:21" pos:end="79:24">16</literal> <operator pos:start="79:24" pos:end="79:24">+</operator> <name pos:start="79:26" pos:end="79:33">y_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:52"><expr pos:start="81:5" pos:end="81:51"><name pos:start="81:5" pos:end="81:19">mc_vector_count</name> <operator pos:start="81:21" pos:end="81:21">=</operator> <call pos:start="81:23" pos:end="81:51"><name pos:start="81:23" pos:end="81:41">bytestream_get_le32</name><argument_list pos:start="81:42" pos:end="81:51">(<argument pos:start="81:43" pos:end="81:50"><expr pos:start="81:43" pos:end="81:50"><operator pos:start="81:43" pos:end="81:43">&amp;</operator><name pos:start="81:44" pos:end="81:50">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="89:45"><expr pos:start="85:5" pos:end="89:44"><call pos:start="85:5" pos:end="89:44"><name pos:start="85:5" pos:end="85:19">iv_Decode_Chunk</name><argument_list pos:start="85:20" pos:end="89:44">(<argument pos:start="85:21" pos:end="85:21"><expr pos:start="85:21" pos:end="85:21"><name pos:start="85:21" pos:end="85:21">s</name></expr></argument>, <argument pos:start="85:24" pos:end="85:41"><expr pos:start="85:24" pos:end="85:41"><name pos:start="85:24" pos:end="85:41"><name pos:start="85:24" pos:end="85:24">s</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:35">cur_frame</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:41">Ybuf</name></name></expr></argument>, <argument pos:start="85:44" pos:end="85:61"><expr pos:start="85:44" pos:end="85:61"><name pos:start="85:44" pos:end="85:61"><name pos:start="85:44" pos:end="85:44">s</name><operator pos:start="85:45" pos:end="85:46">-&gt;</operator><name pos:start="85:47" pos:end="85:55">ref_frame</name><operator pos:start="85:56" pos:end="85:57">-&gt;</operator><name pos:start="85:58" pos:end="85:61">Ybuf</name></name></expr></argument>, <argument pos:start="85:64" pos:end="85:74"><expr pos:start="85:64" pos:end="85:74"><name pos:start="85:64" pos:end="85:74">image_width</name></expr></argument>,

                    <argument pos:start="87:21" pos:end="87:32"><expr pos:start="87:21" pos:end="87:32"><name pos:start="87:21" pos:end="87:32">image_height</name></expr></argument>, <argument pos:start="87:35" pos:end="87:63"><expr pos:start="87:35" pos:end="87:63"><name pos:start="87:35" pos:end="87:41">buf_pos</name> <operator pos:start="87:43" pos:end="87:43">+</operator> <name pos:start="87:45" pos:end="87:59">mc_vector_count</name> <operator pos:start="87:61" pos:end="87:61">*</operator> <literal type="number" pos:start="87:63" pos:end="87:63">2</literal></expr></argument>, <argument pos:start="87:66" pos:end="87:74"><expr pos:start="87:66" pos:end="87:74"><name pos:start="87:66" pos:end="87:74">cb_offset</name></expr></argument>, <argument pos:start="87:77" pos:end="87:83"><expr pos:start="87:77" pos:end="87:83"><name pos:start="87:77" pos:end="87:83">hdr_pos</name></expr></argument>, <argument pos:start="87:86" pos:end="87:92"><expr pos:start="87:86" pos:end="87:92"><name pos:start="87:86" pos:end="87:92">buf_pos</name></expr></argument>,

                    <argument pos:start="89:21" pos:end="89:43"><expr pos:start="89:21" pos:end="89:43"><call pos:start="89:21" pos:end="89:43"><name pos:start="89:21" pos:end="89:25">FFMIN</name><argument_list pos:start="89:26" pos:end="89:43">(<argument pos:start="89:27" pos:end="89:37"><expr pos:start="89:27" pos:end="89:37"><name pos:start="89:27" pos:end="89:37">image_width</name></expr></argument>, <argument pos:start="89:40" pos:end="89:42"><expr pos:start="89:40" pos:end="89:42"><literal type="number" pos:start="89:40" pos:end="89:42">160</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="93:5" pos:end="127:5"><if pos:start="93:5" pos:end="127:5">if <condition pos:start="93:8" pos:end="93:45">(<expr pos:start="93:9" pos:end="93:44"><operator pos:start="93:9" pos:end="93:9">!</operator><operator pos:start="93:10" pos:end="93:10">(</operator><name pos:start="93:11" pos:end="93:25"><name pos:start="93:11" pos:end="93:11">s</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:18">avctx</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:25">flags</name></name> <operator pos:start="93:27" pos:end="93:27">&amp;</operator> <name pos:start="93:29" pos:end="93:43">CODEC_FLAG_GRAY</name><operator pos:start="93:44" pos:end="93:44">)</operator></expr>)</condition>

    <block pos:start="95:5" pos:end="127:5">{<block_content pos:start="99:9" pos:end="123:41">



        <expr_stmt pos:start="99:9" pos:end="99:38"><expr pos:start="99:9" pos:end="99:37"><name pos:start="99:9" pos:end="99:15">buf_pos</name> <operator pos:start="99:17" pos:end="99:17">=</operator> <name pos:start="99:19" pos:end="99:21">buf</name> <operator pos:start="99:23" pos:end="99:23">+</operator> <literal type="number" pos:start="99:25" pos:end="99:28">16</literal> <operator pos:start="99:28" pos:end="99:28">+</operator> <name pos:start="99:30" pos:end="99:37">v_offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:56"><expr pos:start="101:9" pos:end="101:55"><name pos:start="101:9" pos:end="101:23">mc_vector_count</name> <operator pos:start="101:25" pos:end="101:25">=</operator> <call pos:start="101:27" pos:end="101:55"><name pos:start="101:27" pos:end="101:45">bytestream_get_le32</name><argument_list pos:start="101:46" pos:end="101:55">(<argument pos:start="101:47" pos:end="101:54"><expr pos:start="101:47" pos:end="101:54"><operator pos:start="101:47" pos:end="101:47">&amp;</operator><name pos:start="101:48" pos:end="101:54">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="105:9" pos:end="109:41"><expr pos:start="105:9" pos:end="109:40"><call pos:start="105:9" pos:end="109:40"><name pos:start="105:9" pos:end="105:23">iv_Decode_Chunk</name><argument_list pos:start="105:24" pos:end="109:40">(<argument pos:start="105:25" pos:end="105:25"><expr pos:start="105:25" pos:end="105:25"><name pos:start="105:25" pos:end="105:25">s</name></expr></argument>, <argument pos:start="105:28" pos:end="105:45"><expr pos:start="105:28" pos:end="105:45"><name pos:start="105:28" pos:end="105:45"><name pos:start="105:28" pos:end="105:28">s</name><operator pos:start="105:29" pos:end="105:30">-&gt;</operator><name pos:start="105:31" pos:end="105:39">cur_frame</name><operator pos:start="105:40" pos:end="105:41">-&gt;</operator><name pos:start="105:42" pos:end="105:45">Vbuf</name></name></expr></argument>, <argument pos:start="105:48" pos:end="105:65"><expr pos:start="105:48" pos:end="105:65"><name pos:start="105:48" pos:end="105:65"><name pos:start="105:48" pos:end="105:48">s</name><operator pos:start="105:49" pos:end="105:50">-&gt;</operator><name pos:start="105:51" pos:end="105:59">ref_frame</name><operator pos:start="105:60" pos:end="105:61">-&gt;</operator><name pos:start="105:62" pos:end="105:65">Vbuf</name></name></expr></argument>, <argument pos:start="105:68" pos:end="105:79"><expr pos:start="105:68" pos:end="105:79"><name pos:start="105:68" pos:end="105:79">chroma_width</name></expr></argument>,

                <argument pos:start="107:17" pos:end="107:29"><expr pos:start="107:17" pos:end="107:29"><name pos:start="107:17" pos:end="107:29">chroma_height</name></expr></argument>, <argument pos:start="107:32" pos:end="107:60"><expr pos:start="107:32" pos:end="107:60"><name pos:start="107:32" pos:end="107:38">buf_pos</name> <operator pos:start="107:40" pos:end="107:40">+</operator> <name pos:start="107:42" pos:end="107:56">mc_vector_count</name> <operator pos:start="107:58" pos:end="107:58">*</operator> <literal type="number" pos:start="107:60" pos:end="107:60">2</literal></expr></argument>, <argument pos:start="107:63" pos:end="107:71"><expr pos:start="107:63" pos:end="107:71"><name pos:start="107:63" pos:end="107:71">cb_offset</name></expr></argument>, <argument pos:start="107:74" pos:end="107:80"><expr pos:start="107:74" pos:end="107:80"><name pos:start="107:74" pos:end="107:80">hdr_pos</name></expr></argument>, <argument pos:start="107:83" pos:end="107:89"><expr pos:start="107:83" pos:end="107:89"><name pos:start="107:83" pos:end="107:89">buf_pos</name></expr></argument>,

                <argument pos:start="109:17" pos:end="109:39"><expr pos:start="109:17" pos:end="109:39"><call pos:start="109:17" pos:end="109:39"><name pos:start="109:17" pos:end="109:21">FFMIN</name><argument_list pos:start="109:22" pos:end="109:39">(<argument pos:start="109:23" pos:end="109:34"><expr pos:start="109:23" pos:end="109:34"><name pos:start="109:23" pos:end="109:34">chroma_width</name></expr></argument>, <argument pos:start="109:37" pos:end="109:38"><expr pos:start="109:37" pos:end="109:38"><literal type="number" pos:start="109:37" pos:end="109:38">40</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:38"><expr pos:start="113:9" pos:end="113:37"><name pos:start="113:9" pos:end="113:15">buf_pos</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <name pos:start="113:19" pos:end="113:21">buf</name> <operator pos:start="113:23" pos:end="113:23">+</operator> <literal type="number" pos:start="113:25" pos:end="113:28">16</literal> <operator pos:start="113:28" pos:end="113:28">+</operator> <name pos:start="113:30" pos:end="113:37">u_offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:56"><expr pos:start="115:9" pos:end="115:55"><name pos:start="115:9" pos:end="115:23">mc_vector_count</name> <operator pos:start="115:25" pos:end="115:25">=</operator> <call pos:start="115:27" pos:end="115:55"><name pos:start="115:27" pos:end="115:45">bytestream_get_le32</name><argument_list pos:start="115:46" pos:end="115:55">(<argument pos:start="115:47" pos:end="115:54"><expr pos:start="115:47" pos:end="115:54"><operator pos:start="115:47" pos:end="115:47">&amp;</operator><name pos:start="115:48" pos:end="115:54">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="119:9" pos:end="123:41"><expr pos:start="119:9" pos:end="123:40"><call pos:start="119:9" pos:end="123:40"><name pos:start="119:9" pos:end="119:23">iv_Decode_Chunk</name><argument_list pos:start="119:24" pos:end="123:40">(<argument pos:start="119:25" pos:end="119:25"><expr pos:start="119:25" pos:end="119:25"><name pos:start="119:25" pos:end="119:25">s</name></expr></argument>, <argument pos:start="119:28" pos:end="119:45"><expr pos:start="119:28" pos:end="119:45"><name pos:start="119:28" pos:end="119:45"><name pos:start="119:28" pos:end="119:28">s</name><operator pos:start="119:29" pos:end="119:30">-&gt;</operator><name pos:start="119:31" pos:end="119:39">cur_frame</name><operator pos:start="119:40" pos:end="119:41">-&gt;</operator><name pos:start="119:42" pos:end="119:45">Ubuf</name></name></expr></argument>, <argument pos:start="119:48" pos:end="119:65"><expr pos:start="119:48" pos:end="119:65"><name pos:start="119:48" pos:end="119:65"><name pos:start="119:48" pos:end="119:48">s</name><operator pos:start="119:49" pos:end="119:50">-&gt;</operator><name pos:start="119:51" pos:end="119:59">ref_frame</name><operator pos:start="119:60" pos:end="119:61">-&gt;</operator><name pos:start="119:62" pos:end="119:65">Ubuf</name></name></expr></argument>, <argument pos:start="119:68" pos:end="119:79"><expr pos:start="119:68" pos:end="119:79"><name pos:start="119:68" pos:end="119:79">chroma_width</name></expr></argument>,

                <argument pos:start="121:17" pos:end="121:29"><expr pos:start="121:17" pos:end="121:29"><name pos:start="121:17" pos:end="121:29">chroma_height</name></expr></argument>, <argument pos:start="121:32" pos:end="121:60"><expr pos:start="121:32" pos:end="121:60"><name pos:start="121:32" pos:end="121:38">buf_pos</name> <operator pos:start="121:40" pos:end="121:40">+</operator> <name pos:start="121:42" pos:end="121:56">mc_vector_count</name> <operator pos:start="121:58" pos:end="121:58">*</operator> <literal type="number" pos:start="121:60" pos:end="121:60">2</literal></expr></argument>, <argument pos:start="121:63" pos:end="121:71"><expr pos:start="121:63" pos:end="121:71"><name pos:start="121:63" pos:end="121:71">cb_offset</name></expr></argument>, <argument pos:start="121:74" pos:end="121:80"><expr pos:start="121:74" pos:end="121:80"><name pos:start="121:74" pos:end="121:80">hdr_pos</name></expr></argument>, <argument pos:start="121:83" pos:end="121:89"><expr pos:start="121:83" pos:end="121:89"><name pos:start="121:83" pos:end="121:89">buf_pos</name></expr></argument>,

                <argument pos:start="123:17" pos:end="123:39"><expr pos:start="123:17" pos:end="123:39"><call pos:start="123:17" pos:end="123:39"><name pos:start="123:17" pos:end="123:21">FFMIN</name><argument_list pos:start="123:22" pos:end="123:39">(<argument pos:start="123:23" pos:end="123:34"><expr pos:start="123:23" pos:end="123:34"><name pos:start="123:23" pos:end="123:34">chroma_width</name></expr></argument>, <argument pos:start="123:37" pos:end="123:38"><expr pos:start="123:37" pos:end="123:38"><literal type="number" pos:start="123:37" pos:end="123:38">40</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    </block_content>}</block></if></if_stmt>



    <return pos:start="131:5" pos:end="131:13">return <expr pos:start="131:12" pos:end="131:12"><literal type="number" pos:start="131:12" pos:end="131:12">8</literal></expr>;</return>

</block_content>}</block></function>
</unit>
