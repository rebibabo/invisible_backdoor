<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24571.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">get_transform_coeffs</name><parameter_list pos:start="1:32" pos:end="1:55">(<parameter pos:start="1:33" pos:end="1:54"><decl pos:start="1:33" pos:end="1:54"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:48">AC3DecodeContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type> <name pos:start="1:52" pos:end="1:54">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">ac3_audio_block</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">ab</name> <init pos:start="7:25" pos:end="7:43">= <expr pos:start="7:27" pos:end="7:43"><operator pos:start="7:27" pos:end="7:27">&amp;</operator><name pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:30">ctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:43">audio_block</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">float</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:18">samples</name> <init pos:start="9:20" pos:end="9:33">= <expr pos:start="9:22" pos:end="9:33"><name pos:start="9:22" pos:end="9:33"><name pos:start="9:22" pos:end="9:24">ctx</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:33">samples</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">got_cplchan</name> <init pos:start="11:21" pos:end="11:23">= <expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">dithflag</name> <init pos:start="13:18" pos:end="13:20">= <expr pos:start="13:20" pos:end="13:20"><literal type="number" pos:start="13:20" pos:end="13:20">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:58"><expr pos:start="17:5" pos:end="17:57"><name pos:start="17:5" pos:end="17:11">samples</name> <operator pos:start="17:13" pos:end="17:14">+=</operator> <ternary pos:start="17:16" pos:end="17:57"><condition pos:start="17:16" pos:end="17:49"><expr pos:start="17:16" pos:end="17:47"><operator pos:start="17:16" pos:end="17:16">(</operator><name pos:start="17:17" pos:end="17:30"><name pos:start="17:17" pos:end="17:19">ctx</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:24">bsi</name><operator pos:start="17:25" pos:end="17:25">.</operator><name pos:start="17:26" pos:end="17:30">flags</name></name> <operator pos:start="17:32" pos:end="17:32">&amp;</operator> <name pos:start="17:34" pos:end="17:46">AC3_BSI_LFEON</name><operator pos:start="17:47" pos:end="17:47">)</operator></expr> ?</condition><then pos:start="17:51" pos:end="17:53"> <expr pos:start="17:51" pos:end="17:53"><literal type="number" pos:start="17:51" pos:end="17:53">256</literal></expr> </then><else pos:start="17:55" pos:end="17:57">: <expr pos:start="17:57" pos:end="17:57"><literal type="number" pos:start="17:57" pos:end="17:57">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <for pos:start="19:5" pos:end="51:5">for <control pos:start="19:9" pos:end="19:42">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:37"><expr pos:start="19:17" pos:end="19:36"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:36"><name pos:start="19:21" pos:end="19:23">ctx</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:28">bsi</name><operator pos:start="19:29" pos:end="19:29">.</operator><name pos:start="19:30" pos:end="19:36">nfchans</name></name></expr>;</condition> <incr pos:start="19:39" pos:end="19:41"><expr pos:start="19:39" pos:end="19:41"><name pos:start="19:39" pos:end="19:39">i</name><operator pos:start="19:40" pos:end="19:41">++</operator></expr></incr>)</control> <block pos:start="19:44" pos:end="51:5">{<block_content pos:start="21:9" pos:end="49:9">

        <if_stmt pos:start="21:9" pos:end="27:47"><if pos:start="21:9" pos:end="23:25">if <condition pos:start="21:12" pos:end="21:68">(<expr pos:start="21:13" pos:end="21:67"><operator pos:start="21:13" pos:end="21:13">(</operator><name pos:start="21:14" pos:end="21:22"><name pos:start="21:14" pos:end="21:15">ab</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:22">flags</name></name> <operator pos:start="21:24" pos:end="21:24">&amp;</operator> <name pos:start="21:26" pos:end="21:38">AC3_AB_CPLINU</name><operator pos:start="21:39" pos:end="21:39">)</operator> <operator pos:start="21:41" pos:end="21:42">&amp;&amp;</operator> <operator pos:start="21:44" pos:end="21:44">(</operator><name pos:start="21:45" pos:end="21:55"><name pos:start="21:45" pos:end="21:46">ab</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:55">chincpl</name></name> <operator pos:start="21:57" pos:end="21:57">&amp;</operator> <operator pos:start="21:59" pos:end="21:59">(</operator><literal type="number" pos:start="21:60" pos:end="21:60">1</literal> <operator pos:start="21:62" pos:end="21:63">&lt;&lt;</operator> <name pos:start="21:65" pos:end="21:65">i</name><operator pos:start="21:66" pos:end="21:66">)</operator><operator pos:start="21:67" pos:end="21:67">)</operator></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:25"><block_content pos:start="23:13" pos:end="23:25">

            <expr_stmt pos:start="23:13" pos:end="23:25"><expr pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:20">dithflag</name> <operator pos:start="23:22" pos:end="23:22">=</operator> <literal type="number" pos:start="23:24" pos:end="23:24">0</literal></expr>;</expr_stmt></block_content></block></if> <comment type="block" pos:start="23:27" pos:end="23:82">/* don't generate dither until channels are decoupled */</comment>

        <else pos:start="25:9" pos:end="27:47">else<block type="pseudo" pos:start="27:13" pos:end="27:47"><block_content pos:start="27:13" pos:end="27:47">

            <expr_stmt pos:start="27:13" pos:end="27:47"><expr pos:start="27:13" pos:end="27:46"><name pos:start="27:13" pos:end="27:20">dithflag</name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:35"><name pos:start="27:24" pos:end="27:25">ab</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:35">dithflag</name></name> <operator pos:start="27:37" pos:end="27:37">&amp;</operator> <operator pos:start="27:39" pos:end="27:39">(</operator><literal type="number" pos:start="27:40" pos:end="27:40">1</literal> <operator pos:start="27:42" pos:end="27:43">&lt;&lt;</operator> <name pos:start="27:45" pos:end="27:45">i</name><operator pos:start="27:46" pos:end="27:46">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <comment type="block" pos:start="29:9" pos:end="29:59">/* transform coefficients for individual channel */</comment>

        <if_stmt pos:start="31:9" pos:end="35:22"><if pos:start="31:9" pos:end="35:22">if <condition pos:start="31:12" pos:end="33:72">(<expr pos:start="31:13" pos:end="33:71"><call pos:start="31:13" pos:end="33:71"><name pos:start="31:13" pos:end="31:33">_get_transform_coeffs</name><argument_list pos:start="31:34" pos:end="33:71">(<argument pos:start="31:35" pos:end="31:46"><expr pos:start="31:35" pos:end="31:46"><name pos:start="31:35" pos:end="31:46"><name pos:start="31:35" pos:end="31:36">ab</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:43">dexps</name><index pos:start="31:44" pos:end="31:46">[<expr pos:start="31:45" pos:end="31:45"><name pos:start="31:45" pos:end="31:45">i</name></expr>]</index></name></expr></argument>, <argument pos:start="31:49" pos:end="31:58"><expr pos:start="31:49" pos:end="31:58"><name pos:start="31:49" pos:end="31:58"><name pos:start="31:49" pos:end="31:50">ab</name><operator pos:start="31:51" pos:end="31:52">-&gt;</operator><name pos:start="31:53" pos:end="31:55">bap</name><index pos:start="31:56" pos:end="31:58">[<expr pos:start="31:57" pos:end="31:57"><name pos:start="31:57" pos:end="31:57">i</name></expr>]</index></name></expr></argument>, <argument pos:start="31:61" pos:end="31:75"><expr pos:start="31:61" pos:end="31:75"><name pos:start="31:61" pos:end="31:75"><name pos:start="31:61" pos:end="31:62">ab</name><operator pos:start="31:63" pos:end="31:64">-&gt;</operator><name pos:start="31:65" pos:end="31:72">chcoeffs</name><index pos:start="31:73" pos:end="31:75">[<expr pos:start="31:74" pos:end="31:74"><name pos:start="31:74" pos:end="31:74">i</name></expr>]</index></name></expr></argument>, <argument pos:start="31:78" pos:end="31:96"><expr pos:start="31:78" pos:end="31:96"><name pos:start="31:78" pos:end="31:84">samples</name> <operator pos:start="31:86" pos:end="31:86">+</operator> <operator pos:start="31:88" pos:end="31:88">(</operator><name pos:start="31:89" pos:end="31:89">i</name> <operator pos:start="31:91" pos:end="31:91">*</operator> <literal type="number" pos:start="31:93" pos:end="31:95">256</literal><operator pos:start="31:96" pos:end="31:96">)</operator></expr></argument>,

                    <argument pos:start="33:21" pos:end="33:21"><expr pos:start="33:21" pos:end="33:21"><literal type="number" pos:start="33:21" pos:end="33:21">0</literal></expr></argument>, <argument pos:start="33:24" pos:end="33:37"><expr pos:start="33:24" pos:end="33:37"><name pos:start="33:24" pos:end="33:37"><name pos:start="33:24" pos:end="33:25">ab</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:34">endmant</name><index pos:start="33:35" pos:end="33:37">[<expr pos:start="33:36" pos:end="33:36"><name pos:start="33:36" pos:end="33:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="33:40" pos:end="33:47"><expr pos:start="33:40" pos:end="33:47"><name pos:start="33:40" pos:end="33:47">dithflag</name></expr></argument>, <argument pos:start="33:50" pos:end="33:57"><expr pos:start="33:50" pos:end="33:57"><operator pos:start="33:50" pos:end="33:50">&amp;</operator><name pos:start="33:51" pos:end="33:57"><name pos:start="33:51" pos:end="33:53">ctx</name><operator pos:start="33:54" pos:end="33:55">-&gt;</operator><name pos:start="33:56" pos:end="33:57">gb</name></name></expr></argument>, <argument pos:start="33:60" pos:end="33:70"><expr pos:start="33:60" pos:end="33:70"><operator pos:start="33:60" pos:end="33:60">&amp;</operator><name pos:start="33:61" pos:end="33:70"><name pos:start="33:61" pos:end="33:63">ctx</name><operator pos:start="33:64" pos:end="33:65">-&gt;</operator><name pos:start="33:66" pos:end="33:70">state</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:22"><block_content pos:start="35:13" pos:end="35:22">

            <return pos:start="35:13" pos:end="35:22">return <expr pos:start="35:20" pos:end="35:21"><operator pos:start="35:20" pos:end="35:20">-</operator><literal type="number" pos:start="35:21" pos:end="35:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <comment type="block" pos:start="37:9" pos:end="37:57">/* tranform coefficients for coupling channels */</comment>

        <if_stmt pos:start="39:9" pos:end="49:9"><if pos:start="39:9" pos:end="49:9">if <condition pos:start="39:12" pos:end="39:84">(<expr pos:start="39:13" pos:end="39:83"><operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:22"><name pos:start="39:14" pos:end="39:15">ab</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:22">flags</name></name> <operator pos:start="39:24" pos:end="39:24">&amp;</operator> <name pos:start="39:26" pos:end="39:38">AC3_AB_CPLINU</name><operator pos:start="39:39" pos:end="39:39">)</operator> <operator pos:start="39:41" pos:end="39:42">&amp;&amp;</operator> <operator pos:start="39:44" pos:end="39:44">(</operator><name pos:start="39:45" pos:end="39:55"><name pos:start="39:45" pos:end="39:46">ab</name><operator pos:start="39:47" pos:end="39:48">-&gt;</operator><name pos:start="39:49" pos:end="39:55">chincpl</name></name> <operator pos:start="39:57" pos:end="39:57">&amp;</operator> <operator pos:start="39:59" pos:end="39:59">(</operator><literal type="number" pos:start="39:60" pos:end="39:60">1</literal> <operator pos:start="39:62" pos:end="39:63">&lt;&lt;</operator> <name pos:start="39:65" pos:end="39:65">i</name><operator pos:start="39:66" pos:end="39:66">)</operator><operator pos:start="39:67" pos:end="39:67">)</operator> <operator pos:start="39:69" pos:end="39:70">&amp;&amp;</operator> <operator pos:start="39:72" pos:end="39:72">!</operator><name pos:start="39:73" pos:end="39:83">got_cplchan</name></expr>)</condition> <block pos:start="39:86" pos:end="49:9">{<block_content pos:start="41:13" pos:end="47:28">

            <if_stmt pos:start="41:13" pos:end="45:26"><if pos:start="41:13" pos:end="45:26">if <condition pos:start="41:16" pos:end="43:83">(<expr pos:start="41:17" pos:end="43:82"><call pos:start="41:17" pos:end="43:82"><name pos:start="41:17" pos:end="41:37">_get_transform_coeffs</name><argument_list pos:start="41:38" pos:end="43:82">(<argument pos:start="41:39" pos:end="41:50"><expr pos:start="41:39" pos:end="41:50"><name pos:start="41:39" pos:end="41:50"><name pos:start="41:39" pos:end="41:40">ab</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:50">dcplexps</name></name></expr></argument>, <argument pos:start="41:53" pos:end="41:62"><expr pos:start="41:53" pos:end="41:62"><name pos:start="41:53" pos:end="41:62"><name pos:start="41:53" pos:end="41:54">ab</name><operator pos:start="41:55" pos:end="41:56">-&gt;</operator><name pos:start="41:57" pos:end="41:62">cplbap</name></name></expr></argument>, <argument pos:start="41:65" pos:end="41:68"><expr pos:start="41:65" pos:end="41:68"><literal type="number" pos:start="41:65" pos:end="41:68">1.0f</literal></expr></argument>, <argument pos:start="41:71" pos:end="41:83"><expr pos:start="41:71" pos:end="41:83"><name pos:start="41:71" pos:end="41:83"><name pos:start="41:71" pos:end="41:72">ab</name><operator pos:start="41:73" pos:end="41:74">-&gt;</operator><name pos:start="41:75" pos:end="41:83">cplcoeffs</name></name></expr></argument>,

                        <argument pos:start="43:25" pos:end="43:39"><expr pos:start="43:25" pos:end="43:39"><name pos:start="43:25" pos:end="43:39"><name pos:start="43:25" pos:end="43:26">ab</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:39">cplstrtmant</name></name></expr></argument>, <argument pos:start="43:42" pos:end="43:55"><expr pos:start="43:42" pos:end="43:55"><name pos:start="43:42" pos:end="43:55"><name pos:start="43:42" pos:end="43:43">ab</name><operator pos:start="43:44" pos:end="43:45">-&gt;</operator><name pos:start="43:46" pos:end="43:55">cplendmant</name></name></expr></argument>, <argument pos:start="43:58" pos:end="43:58"><expr pos:start="43:58" pos:end="43:58"><literal type="number" pos:start="43:58" pos:end="43:58">0</literal></expr></argument>, <argument pos:start="43:61" pos:end="43:68"><expr pos:start="43:61" pos:end="43:68"><operator pos:start="43:61" pos:end="43:61">&amp;</operator><name pos:start="43:62" pos:end="43:68"><name pos:start="43:62" pos:end="43:64">ctx</name><operator pos:start="43:65" pos:end="43:66">-&gt;</operator><name pos:start="43:67" pos:end="43:68">gb</name></name></expr></argument>, <argument pos:start="43:71" pos:end="43:81"><expr pos:start="43:71" pos:end="43:81"><operator pos:start="43:71" pos:end="43:71">&amp;</operator><name pos:start="43:72" pos:end="43:81"><name pos:start="43:72" pos:end="43:74">ctx</name><operator pos:start="43:75" pos:end="43:76">-&gt;</operator><name pos:start="43:77" pos:end="43:81">state</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:26"><block_content pos:start="45:17" pos:end="45:26">

                <return pos:start="45:17" pos:end="45:26">return <expr pos:start="45:24" pos:end="45:25"><operator pos:start="45:24" pos:end="45:24">-</operator><literal type="number" pos:start="45:25" pos:end="45:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:28"><expr pos:start="47:13" pos:end="47:27"><name pos:start="47:13" pos:end="47:23">got_cplchan</name> <operator pos:start="47:25" pos:end="47:25">=</operator> <literal type="number" pos:start="47:27" pos:end="47:27">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="53:5" pos:end="57:26"><if pos:start="53:5" pos:end="57:26">if <condition pos:start="53:8" pos:end="53:39">(<expr pos:start="53:9" pos:end="53:38"><name pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:11">ctx</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:16">bsi</name><operator pos:start="53:17" pos:end="53:17">.</operator><name pos:start="53:18" pos:end="53:22">flags</name></name> <operator pos:start="53:24" pos:end="53:24">&amp;</operator> <name pos:start="53:26" pos:end="53:38">AC3_BSI_LFEON</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="57:26"><block_content pos:start="55:9" pos:end="57:26">

        <if_stmt pos:start="55:9" pos:end="57:26"><if pos:start="55:9" pos:end="57:26">if <condition pos:start="55:12" pos:end="55:112">(<expr pos:start="55:13" pos:end="55:111"><call pos:start="55:13" pos:end="55:111"><name pos:start="55:13" pos:end="55:33">_get_transform_coeffs</name><argument_list pos:start="55:34" pos:end="55:111">(<argument pos:start="55:35" pos:end="55:45"><expr pos:start="55:35" pos:end="55:45"><name pos:start="55:35" pos:end="55:45"><name pos:start="55:35" pos:end="55:36">ab</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:45">lfeexps</name></name></expr></argument>, <argument pos:start="55:48" pos:end="55:57"><expr pos:start="55:48" pos:end="55:57"><name pos:start="55:48" pos:end="55:57"><name pos:start="55:48" pos:end="55:49">ab</name><operator pos:start="55:50" pos:end="55:51">-&gt;</operator><name pos:start="55:52" pos:end="55:57">lfebap</name></name></expr></argument>, <argument pos:start="55:60" pos:end="55:63"><expr pos:start="55:60" pos:end="55:63"><literal type="number" pos:start="55:60" pos:end="55:63">1.0f</literal></expr></argument>, <argument pos:start="55:66" pos:end="55:78"><expr pos:start="55:66" pos:end="55:78"><name pos:start="55:66" pos:end="55:72">samples</name> <operator pos:start="55:74" pos:end="55:74">-</operator> <literal type="number" pos:start="55:76" pos:end="55:78">256</literal></expr></argument>, <argument pos:start="55:81" pos:end="55:81"><expr pos:start="55:81" pos:end="55:81"><literal type="number" pos:start="55:81" pos:end="55:81">0</literal></expr></argument>, <argument pos:start="55:84" pos:end="55:84"><expr pos:start="55:84" pos:end="55:84"><literal type="number" pos:start="55:84" pos:end="55:84">7</literal></expr></argument>, <argument pos:start="55:87" pos:end="55:87"><expr pos:start="55:87" pos:end="55:87"><literal type="number" pos:start="55:87" pos:end="55:87">0</literal></expr></argument>, <argument pos:start="55:90" pos:end="55:97"><expr pos:start="55:90" pos:end="55:97"><operator pos:start="55:90" pos:end="55:90">&amp;</operator><name pos:start="55:91" pos:end="55:97"><name pos:start="55:91" pos:end="55:93">ctx</name><operator pos:start="55:94" pos:end="55:95">-&gt;</operator><name pos:start="55:96" pos:end="55:97">gb</name></name></expr></argument>, <argument pos:start="55:100" pos:end="55:110"><expr pos:start="55:100" pos:end="55:110"><operator pos:start="55:100" pos:end="55:100">&amp;</operator><name pos:start="55:101" pos:end="55:110"><name pos:start="55:101" pos:end="55:103">ctx</name><operator pos:start="55:104" pos:end="55:105">-&gt;</operator><name pos:start="55:106" pos:end="55:110">state</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:26"><block_content pos:start="57:17" pos:end="57:26">

                <return pos:start="57:17" pos:end="57:26">return <expr pos:start="57:24" pos:end="57:25"><operator pos:start="57:24" pos:end="57:24">-</operator><literal type="number" pos:start="57:25" pos:end="57:25">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:57">/* uncouple the channels from the coupling channel */</comment>

    <if_stmt pos:start="63:5" pos:end="67:22"><if pos:start="63:5" pos:end="67:22">if <condition pos:start="63:8" pos:end="63:34">(<expr pos:start="63:9" pos:end="63:33"><name pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:10">ab</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:17">flags</name></name> <operator pos:start="63:19" pos:end="63:19">&amp;</operator> <name pos:start="63:21" pos:end="63:33">AC3_AB_CPLINU</name></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="67:22"><block_content pos:start="65:9" pos:end="67:22">

        <if_stmt pos:start="65:9" pos:end="67:22"><if pos:start="65:9" pos:end="67:22">if <condition pos:start="65:12" pos:end="65:35">(<expr pos:start="65:13" pos:end="65:34"><call pos:start="65:13" pos:end="65:34"><name pos:start="65:13" pos:end="65:29">uncouple_channels</name><argument_list pos:start="65:30" pos:end="65:34">(<argument pos:start="65:31" pos:end="65:33"><expr pos:start="65:31" pos:end="65:33"><name pos:start="65:31" pos:end="65:33">ctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:22"><block_content pos:start="67:13" pos:end="67:22">

            <return pos:start="67:13" pos:end="67:22">return <expr pos:start="67:20" pos:end="67:21"><operator pos:start="67:20" pos:end="67:20">-</operator><literal type="number" pos:start="67:21" pos:end="67:21">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
