<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13585.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">vgafb_write</name><parameter_list pos:start="1:24" pos:end="3:38">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:61"><decl pos:start="1:39" pos:end="1:61"><type pos:start="1:39" pos:end="1:61"><name pos:start="1:39" pos:end="1:56">target_phys_addr_t</name></type> <name pos:start="1:58" pos:end="1:61">addr</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:77"><decl pos:start="1:64" pos:end="1:77"><type pos:start="1:64" pos:end="1:77"><name pos:start="1:64" pos:end="1:71">uint64_t</name></type> <name pos:start="1:73" pos:end="1:77">value</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:37"><decl pos:start="3:25" pos:end="3:37"><type pos:start="3:25" pos:end="3:37"><name pos:start="3:25" pos:end="3:32">unsigned</name></type> <name pos:start="3:34" pos:end="3:37">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="97:1">{<block_content pos:start="7:5" pos:end="95:5">

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">MilkymistVgafbState</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:26">s</name> <init pos:start="7:28" pos:end="7:35">= <expr pos:start="7:30" pos:end="7:35"><name pos:start="7:30" pos:end="7:35">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:52"><expr pos:start="11:5" pos:end="11:51"><call pos:start="11:5" pos:end="11:51"><name pos:start="11:5" pos:end="11:38">trace_milkymist_vgafb_memory_write</name><argument_list pos:start="11:39" pos:end="11:51">(<argument pos:start="11:40" pos:end="11:43"><expr pos:start="11:40" pos:end="11:43"><name pos:start="11:40" pos:end="11:43">addr</name></expr></argument>, <argument pos:start="11:46" pos:end="11:50"><expr pos:start="11:46" pos:end="11:50"><name pos:start="11:46" pos:end="11:50">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:15"><expr pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:8">addr</name> <operator pos:start="15:10" pos:end="15:12">&gt;&gt;=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">2</literal></expr>;</expr_stmt>

    <switch pos:start="17:5" pos:end="95:5">switch <condition pos:start="17:12" pos:end="17:17">(<expr pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:16">addr</name></expr>)</condition> <block pos:start="17:19" pos:end="95:5">{<block_content pos:start="19:5" pos:end="93:14">

    <case pos:start="19:5" pos:end="19:16">case <expr pos:start="19:10" pos:end="19:15"><name pos:start="19:10" pos:end="19:15">R_CTRL</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:30"><expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:15">regs</name><index pos:start="21:16" pos:end="21:21">[<expr pos:start="21:17" pos:end="21:20"><name pos:start="21:17" pos:end="21:20">addr</name></expr>]</index></name> <operator pos:start="21:23" pos:end="21:23">=</operator> <name pos:start="21:25" pos:end="21:29">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:24"><expr pos:start="23:9" pos:end="23:23"><call pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:20">vgafb_resize</name><argument_list pos:start="23:21" pos:end="23:23">(<argument pos:start="23:22" pos:end="23:22"><expr pos:start="23:22" pos:end="23:22"><name pos:start="23:22" pos:end="23:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:23">case <expr pos:start="27:10" pos:end="27:22"><name pos:start="27:10" pos:end="27:22">R_HSYNC_START</name></expr>:</case>

    <case pos:start="29:5" pos:end="29:21">case <expr pos:start="29:10" pos:end="29:20"><name pos:start="29:10" pos:end="29:20">R_HSYNC_END</name></expr>:</case>

    <case pos:start="31:5" pos:end="31:17">case <expr pos:start="31:10" pos:end="31:16"><name pos:start="31:10" pos:end="31:16">R_HSCAN</name></expr>:</case>

    <case pos:start="33:5" pos:end="33:23">case <expr pos:start="33:10" pos:end="33:22"><name pos:start="33:10" pos:end="33:22">R_VSYNC_START</name></expr>:</case>

    <case pos:start="35:5" pos:end="35:21">case <expr pos:start="35:10" pos:end="35:20"><name pos:start="35:10" pos:end="35:20">R_VSYNC_END</name></expr>:</case>

    <case pos:start="37:5" pos:end="37:17">case <expr pos:start="37:10" pos:end="37:16"><name pos:start="37:10" pos:end="37:16">R_VSCAN</name></expr>:</case>

    <case pos:start="39:5" pos:end="39:23">case <expr pos:start="39:10" pos:end="39:22"><name pos:start="39:10" pos:end="39:22">R_BURST_COUNT</name></expr>:</case>

    <case pos:start="41:5" pos:end="41:15">case <expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:14">R_DDC</name></expr>:</case>

    <case pos:start="43:5" pos:end="43:24">case <expr pos:start="43:10" pos:end="43:23"><name pos:start="43:10" pos:end="43:23">R_SOURCE_CLOCK</name></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:30"><expr pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:15">regs</name><index pos:start="45:16" pos:end="45:21">[<expr pos:start="45:17" pos:end="45:20"><name pos:start="45:17" pos:end="45:20">addr</name></expr>]</index></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:29">value</name></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:23">case <expr pos:start="49:10" pos:end="49:22"><name pos:start="49:10" pos:end="49:22">R_BASEADDRESS</name></expr>:</case>

        <if_stmt pos:start="51:9" pos:end="59:9"><if pos:start="51:9" pos:end="59:9">if <condition pos:start="51:12" pos:end="51:25">(<expr pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:17">value</name> <operator pos:start="51:19" pos:end="51:19">&amp;</operator> <literal type="number" pos:start="51:21" pos:end="51:24">0x1f</literal></expr>)</condition> <block pos:start="51:27" pos:end="59:9">{<block_content pos:start="53:13" pos:end="57:18">

            <expr_stmt pos:start="53:13" pos:end="55:43"><expr pos:start="53:13" pos:end="55:42"><call pos:start="53:13" pos:end="55:42"><name pos:start="53:13" pos:end="53:24">error_report</name><argument_list pos:start="53:25" pos:end="55:42">(<argument pos:start="53:26" pos:end="55:41"><expr pos:start="53:26" pos:end="55:41"><literal type="string" pos:start="53:26" pos:end="53:77">"milkymist_vgafb: framebuffer base address have to "</literal>

                     <literal type="string" pos:start="55:22" pos:end="55:41">"be 32 byte aligned"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:43"><expr pos:start="61:9" pos:end="61:42"><name pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:15">regs</name><index pos:start="61:16" pos:end="61:21">[<expr pos:start="61:17" pos:end="61:20"><name pos:start="61:17" pos:end="61:20">addr</name></expr>]</index></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <name pos:start="61:25" pos:end="61:29">value</name> <operator pos:start="61:31" pos:end="61:31">&amp;</operator> <name pos:start="61:33" pos:end="61:42"><name pos:start="61:33" pos:end="61:33">s</name><operator pos:start="61:34" pos:end="61:35">-&gt;</operator><name pos:start="61:36" pos:end="61:42">fb_mask</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:26"><expr pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:21">invalidate</name></name> <operator pos:start="63:23" pos:end="63:23">=</operator> <literal type="number" pos:start="63:25" pos:end="63:25">1</literal></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:16">case <expr pos:start="67:10" pos:end="67:15"><name pos:start="67:10" pos:end="67:15">R_HRES</name></expr>:</case>

    <case pos:start="69:5" pos:end="69:16">case <expr pos:start="69:10" pos:end="69:15"><name pos:start="69:10" pos:end="69:15">R_VRES</name></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="71:30"><expr pos:start="71:9" pos:end="71:29"><name pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:15">regs</name><index pos:start="71:16" pos:end="71:21">[<expr pos:start="71:17" pos:end="71:20"><name pos:start="71:17" pos:end="71:20">addr</name></expr>]</index></name> <operator pos:start="71:23" pos:end="71:23">=</operator> <name pos:start="71:25" pos:end="71:29">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:24"><expr pos:start="73:9" pos:end="73:23"><call pos:start="73:9" pos:end="73:23"><name pos:start="73:9" pos:end="73:20">vgafb_resize</name><argument_list pos:start="73:21" pos:end="73:23">(<argument pos:start="73:22" pos:end="73:22"><expr pos:start="73:22" pos:end="73:22"><name pos:start="73:22" pos:end="73:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:27">case <expr pos:start="77:10" pos:end="77:26"><name pos:start="77:10" pos:end="77:26">R_BASEADDRESS_ACT</name></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="81:43"><expr pos:start="79:9" pos:end="81:42"><call pos:start="79:9" pos:end="81:42"><name pos:start="79:9" pos:end="79:20">error_report</name><argument_list pos:start="79:21" pos:end="81:42">(<argument pos:start="79:22" pos:end="81:30"><expr pos:start="79:22" pos:end="81:30"><literal type="string" pos:start="79:22" pos:end="79:70">"milkymist_vgafb: write to read-only register 0x"</literal>

                <name pos:start="81:17" pos:end="81:30">TARGET_FMT_plx</name></expr></argument>, <argument pos:start="81:33" pos:end="81:41"><expr pos:start="81:33" pos:end="81:41"><name pos:start="81:33" pos:end="81:36">addr</name> <operator pos:start="81:38" pos:end="81:39">&lt;&lt;</operator> <literal type="number" pos:start="81:41" pos:end="81:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>



    <default pos:start="87:5" pos:end="87:12">default:</default>

        <expr_stmt pos:start="89:9" pos:end="91:43"><expr pos:start="89:9" pos:end="91:42"><call pos:start="89:9" pos:end="91:42"><name pos:start="89:9" pos:end="89:20">error_report</name><argument_list pos:start="89:21" pos:end="91:42">(<argument pos:start="89:22" pos:end="91:30"><expr pos:start="89:22" pos:end="91:30"><literal type="string" pos:start="89:22" pos:end="89:75">"milkymist_vgafb: write access to unknown register 0x"</literal>

                <name pos:start="91:17" pos:end="91:30">TARGET_FMT_plx</name></expr></argument>, <argument pos:start="91:33" pos:end="91:41"><expr pos:start="91:33" pos:end="91:41"><name pos:start="91:33" pos:end="91:36">addr</name> <operator pos:start="91:38" pos:end="91:39">&lt;&lt;</operator> <literal type="number" pos:start="91:41" pos:end="91:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
