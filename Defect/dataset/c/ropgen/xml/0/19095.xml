<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19095.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:32"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:30">TranslationBlock</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:44">tb_find_fast</name><parameter_list pos:start="1:45" pos:end="1:50">(<parameter pos:start="1:46" pos:end="1:49"><decl pos:start="1:46" pos:end="1:49"><type pos:start="1:46" pos:end="1:49"><name pos:start="1:46" pos:end="1:49">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:14">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">TranslationBlock</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">tb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:24">cs_base</name></decl>, <decl pos:start="7:27" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:27" pos:end="7:28">pc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">flags</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="17:22">/* we record a subset of the CPU state. It will

       always be the same before a given translated block

       is executed. */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:53"><expr pos:start="19:5" pos:end="19:52"><call pos:start="19:5" pos:end="19:52"><name pos:start="19:5" pos:end="19:24">cpu_get_tb_cpu_state</name><argument_list pos:start="19:25" pos:end="19:52">(<argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">env</name></expr></argument>, <argument pos:start="19:31" pos:end="19:33"><expr pos:start="19:31" pos:end="19:33"><operator pos:start="19:31" pos:end="19:31">&amp;</operator><name pos:start="19:32" pos:end="19:33">pc</name></expr></argument>, <argument pos:start="19:36" pos:end="19:43"><expr pos:start="19:36" pos:end="19:43"><operator pos:start="19:36" pos:end="19:36">&amp;</operator><name pos:start="19:37" pos:end="19:43">cs_base</name></expr></argument>, <argument pos:start="19:46" pos:end="19:51"><expr pos:start="19:46" pos:end="19:51"><operator pos:start="19:46" pos:end="19:46">&amp;</operator><name pos:start="19:47" pos:end="19:51">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:55"><expr pos:start="21:5" pos:end="21:54"><name pos:start="21:5" pos:end="21:6">tb</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <name pos:start="21:10" pos:end="21:54"><name pos:start="21:10" pos:end="21:12">env</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:26">tb_jmp_cache</name><index pos:start="21:27" pos:end="21:54">[<expr pos:start="21:28" pos:end="21:53"><call pos:start="21:28" pos:end="21:53"><name pos:start="21:28" pos:end="21:49">tb_jmp_cache_hash_func</name><argument_list pos:start="21:50" pos:end="21:53">(<argument pos:start="21:51" pos:end="21:52"><expr pos:start="21:51" pos:end="21:52"><name pos:start="21:51" pos:end="21:52">pc</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="25:37">(<expr pos:start="23:9" pos:end="25:36"><call pos:start="23:9" pos:end="25:36"><name pos:start="23:9" pos:end="23:16">unlikely</name><argument_list pos:start="23:17" pos:end="25:36">(<argument pos:start="23:18" pos:end="25:35"><expr pos:start="23:18" pos:end="25:35"><operator pos:start="23:18" pos:end="23:18">!</operator><name pos:start="23:19" pos:end="23:20">tb</name> <operator pos:start="23:22" pos:end="23:23">||</operator> <name pos:start="23:25" pos:end="23:30"><name pos:start="23:25" pos:end="23:26">tb</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:30">pc</name></name> <operator pos:start="23:32" pos:end="23:33">!=</operator> <name pos:start="23:35" pos:end="23:36">pc</name> <operator pos:start="23:38" pos:end="23:39">||</operator> <name pos:start="23:41" pos:end="23:51"><name pos:start="23:41" pos:end="23:42">tb</name><operator pos:start="23:43" pos:end="23:44">-&gt;</operator><name pos:start="23:45" pos:end="23:51">cs_base</name></name> <operator pos:start="23:53" pos:end="23:54">!=</operator> <name pos:start="23:56" pos:end="23:62">cs_base</name> <operator pos:start="23:64" pos:end="23:65">||</operator>

                 <name pos:start="25:18" pos:end="25:26"><name pos:start="25:18" pos:end="25:19">tb</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:26">flags</name></name> <operator pos:start="25:28" pos:end="25:29">!=</operator> <name pos:start="25:31" pos:end="25:35">flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:39" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:46">

        <expr_stmt pos:start="27:9" pos:end="27:46"><expr pos:start="27:9" pos:end="27:45"><name pos:start="27:9" pos:end="27:10">tb</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:45"><name pos:start="27:14" pos:end="27:25">tb_find_slow</name><argument_list pos:start="27:26" pos:end="27:45">(<argument pos:start="27:27" pos:end="27:28"><expr pos:start="27:27" pos:end="27:28"><name pos:start="27:27" pos:end="27:28">pc</name></expr></argument>, <argument pos:start="27:31" pos:end="27:37"><expr pos:start="27:31" pos:end="27:37"><name pos:start="27:31" pos:end="27:37">cs_base</name></expr></argument>, <argument pos:start="27:40" pos:end="27:44"><expr pos:start="27:40" pos:end="27:44"><name pos:start="27:40" pos:end="27:44">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="31:5" pos:end="31:14">return <expr pos:start="31:12" pos:end="31:13"><name pos:start="31:12" pos:end="31:13">tb</name></expr>;</return>

</block_content>}</block></function>
</unit>
