<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13680.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:17">nprobe</name><parameter_list pos:start="1:18" pos:end="3:39">(<parameter pos:start="1:19" pos:end="1:36"><decl pos:start="1:19" pos:end="1:36"><type pos:start="1:19" pos:end="1:36"><name pos:start="1:19" pos:end="1:33">AVFormatContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:57"><decl pos:start="1:39" pos:end="1:57"><type pos:start="1:39" pos:end="1:57"><name pos:start="1:39" pos:end="1:45">uint8_t</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:57">enc_header</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:72"><decl pos:start="1:60" pos:end="1:72"><type pos:start="1:60" pos:end="1:72"><name pos:start="1:60" pos:end="1:67">unsigned</name></type> <name pos:start="1:69" pos:end="1:72">size</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:38"><decl pos:start="3:19" pos:end="3:38"><type pos:start="3:19" pos:end="3:38"><specifier pos:start="3:19" pos:end="3:23">const</specifier> <name pos:start="3:25" pos:end="3:31">uint8_t</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:38">n_val</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:14">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">OMAContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">oc</name> <init pos:start="7:20" pos:end="7:33">= <expr pos:start="7:22" pos:end="7:33"><name pos:start="7:22" pos:end="7:33"><name pos:start="7:22" pos:end="7:22">s</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:16">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:19">taglen</name></decl>, <decl pos:start="11:22" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:22" pos:end="11:28">datalen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:16">AVDES</name></name></type> <name pos:start="13:18" pos:end="13:23">av_des</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:18"><if pos:start="17:5" pos:end="21:18">if <condition pos:start="17:8" pos:end="19:52">(<expr pos:start="17:9" pos:end="19:51"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:19">enc_header</name> <operator pos:start="17:21" pos:end="17:22">||</operator> <operator pos:start="17:24" pos:end="17:24">!</operator><name pos:start="17:25" pos:end="17:29">n_val</name> <operator pos:start="17:31" pos:end="17:32">||</operator>

        <name pos:start="19:9" pos:end="19:12">size</name> <operator pos:start="19:14" pos:end="19:14">&lt;</operator> <name pos:start="19:16" pos:end="19:34">OMA_ENC_HEADER_SIZE</name> <operator pos:start="19:36" pos:end="19:36">+</operator> <name pos:start="19:38" pos:end="19:47"><name pos:start="19:38" pos:end="19:39">oc</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:47">k_size</name></name> <operator pos:start="19:49" pos:end="19:49">+</operator> <literal type="number" pos:start="19:51" pos:end="19:51">4</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:18"><block_content pos:start="21:9" pos:end="21:18">

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:43"><expr pos:start="25:5" pos:end="25:42"><name pos:start="25:5" pos:end="25:7">pos</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <name pos:start="25:11" pos:end="25:29">OMA_ENC_HEADER_SIZE</name> <operator pos:start="25:31" pos:end="25:31">+</operator> <name pos:start="25:33" pos:end="25:42"><name pos:start="25:33" pos:end="25:34">oc</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:42">k_size</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:18"><if pos:start="27:5" pos:end="29:18">if <condition pos:start="27:8" pos:end="27:45">(<expr pos:start="27:9" pos:end="27:44"><operator pos:start="27:9" pos:end="27:9">!</operator><call pos:start="27:10" pos:end="27:44"><name pos:start="27:10" pos:end="27:15">memcmp</name><argument_list pos:start="27:16" pos:end="27:44">(<argument pos:start="27:17" pos:end="27:32"><expr pos:start="27:17" pos:end="27:32"><operator pos:start="27:17" pos:end="27:17">&amp;</operator><name pos:start="27:18" pos:end="27:32"><name pos:start="27:18" pos:end="27:27">enc_header</name><index pos:start="27:28" pos:end="27:32">[<expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:31">pos</name></expr>]</index></name></expr></argument>, <argument pos:start="27:35" pos:end="27:40"><expr pos:start="27:35" pos:end="27:40"><literal type="string" pos:start="27:35" pos:end="27:40">"EKB "</literal></expr></argument>, <argument pos:start="27:43" pos:end="27:43"><expr pos:start="27:43" pos:end="27:43"><literal type="number" pos:start="27:43" pos:end="27:43">4</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:18"><block_content pos:start="29:9" pos:end="29:18">

        <expr_stmt pos:start="29:9" pos:end="29:18"><expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:11">pos</name> <operator pos:start="29:13" pos:end="29:14">+=</operator> <literal type="number" pos:start="29:16" pos:end="29:17">32</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="35:18"><if pos:start="33:5" pos:end="35:18">if <condition pos:start="33:8" pos:end="33:24">(<expr pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:12">size</name> <operator pos:start="33:14" pos:end="33:14">&lt;</operator> <name pos:start="33:16" pos:end="33:18">pos</name> <operator pos:start="33:20" pos:end="33:20">+</operator> <literal type="number" pos:start="33:22" pos:end="33:23">44</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:18"><block_content pos:start="35:9" pos:end="35:18">

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="41:53"><if pos:start="39:5" pos:end="41:53">if <condition pos:start="39:8" pos:end="39:45">(<expr pos:start="39:9" pos:end="39:44"><call pos:start="39:9" pos:end="39:33"><name pos:start="39:9" pos:end="39:15">AV_RB32</name><argument_list pos:start="39:16" pos:end="39:33">(<argument pos:start="39:17" pos:end="39:32"><expr pos:start="39:17" pos:end="39:32"><operator pos:start="39:17" pos:end="39:17">&amp;</operator><name pos:start="39:18" pos:end="39:32"><name pos:start="39:18" pos:end="39:27">enc_header</name><index pos:start="39:28" pos:end="39:32">[<expr pos:start="39:29" pos:end="39:31"><name pos:start="39:29" pos:end="39:31">pos</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="39:35" pos:end="39:36">!=</operator> <name pos:start="39:38" pos:end="39:44"><name pos:start="39:38" pos:end="39:39">oc</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:44">rid</name></name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:53"><block_content pos:start="41:9" pos:end="41:53">

        <expr_stmt pos:start="41:9" pos:end="41:53"><expr pos:start="41:9" pos:end="41:52"><call pos:start="41:9" pos:end="41:52"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:52">(<argument pos:start="41:16" pos:end="41:16"><expr pos:start="41:16" pos:end="41:16"><name pos:start="41:16" pos:end="41:16">s</name></expr></argument>, <argument pos:start="41:19" pos:end="41:30"><expr pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="41:33" pos:end="41:51"><expr pos:start="41:33" pos:end="41:51"><literal type="string" pos:start="41:33" pos:end="41:51">"Mismatching RID\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:45"><expr pos:start="45:5" pos:end="45:44"><name pos:start="45:5" pos:end="45:10">taglen</name>  <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:44"><name pos:start="45:15" pos:end="45:21">AV_RB32</name><argument_list pos:start="45:22" pos:end="45:44">(<argument pos:start="45:23" pos:end="45:43"><expr pos:start="45:23" pos:end="45:43"><operator pos:start="45:23" pos:end="45:23">&amp;</operator><name pos:start="45:24" pos:end="45:43"><name pos:start="45:24" pos:end="45:33">enc_header</name><index pos:start="45:34" pos:end="45:43">[<expr pos:start="45:35" pos:end="45:42"><name pos:start="45:35" pos:end="45:37">pos</name> <operator pos:start="45:39" pos:end="45:39">+</operator> <literal type="number" pos:start="45:41" pos:end="45:42">32</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:50"><expr pos:start="47:5" pos:end="47:49"><name pos:start="47:5" pos:end="47:11">datalen</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:44"><name pos:start="47:15" pos:end="47:21">AV_RB32</name><argument_list pos:start="47:22" pos:end="47:44">(<argument pos:start="47:23" pos:end="47:43"><expr pos:start="47:23" pos:end="47:43"><operator pos:start="47:23" pos:end="47:23">&amp;</operator><name pos:start="47:24" pos:end="47:43"><name pos:start="47:24" pos:end="47:33">enc_header</name><index pos:start="47:34" pos:end="47:43">[<expr pos:start="47:35" pos:end="47:42"><name pos:start="47:35" pos:end="47:37">pos</name> <operator pos:start="47:39" pos:end="47:39">+</operator> <literal type="number" pos:start="47:41" pos:end="47:42">36</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="47:46" pos:end="47:47">&gt;&gt;</operator> <literal type="number" pos:start="47:49" pos:end="47:49">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:14"><expr pos:start="51:5" pos:end="51:13"><name pos:start="51:5" pos:end="51:7">pos</name> <operator pos:start="51:9" pos:end="51:10">+=</operator> <literal type="number" pos:start="51:12" pos:end="51:13">44</literal></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:18"><if pos:start="53:5" pos:end="55:18">if <condition pos:start="53:8" pos:end="53:28">(<expr pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:12">size</name> <operator pos:start="53:14" pos:end="53:14">-</operator> <name pos:start="53:16" pos:end="53:18">pos</name> <operator pos:start="53:20" pos:end="53:20">&lt;</operator> <name pos:start="53:22" pos:end="53:27">taglen</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:18"><block_content pos:start="55:9" pos:end="55:18">

        <return pos:start="55:9" pos:end="55:18">return <expr pos:start="55:16" pos:end="55:17"><operator pos:start="55:16" pos:end="55:16">-</operator><literal type="number" pos:start="55:17" pos:end="55:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:18"><expr pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:7">pos</name> <operator pos:start="59:9" pos:end="59:10">+=</operator> <name pos:start="59:12" pos:end="59:17">taglen</name></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="65:18"><if pos:start="63:5" pos:end="65:18">if <condition pos:start="63:8" pos:end="63:48">(<expr pos:start="63:9" pos:end="63:47"><name pos:start="63:9" pos:end="63:11">pos</name> <operator pos:start="63:13" pos:end="63:13">+</operator> <operator pos:start="63:15" pos:end="63:15">(</operator><operator pos:start="63:16" pos:end="63:16">(</operator><operator pos:start="63:17" pos:end="63:17">(</operator><name pos:start="63:18" pos:end="63:25">uint64_t</name><operator pos:start="63:26" pos:end="63:26">)</operator><name pos:start="63:27" pos:end="63:33">datalen</name><operator pos:start="63:34" pos:end="63:34">)</operator> <operator pos:start="63:36" pos:end="63:37">&lt;&lt;</operator> <literal type="number" pos:start="63:39" pos:end="63:39">4</literal><operator pos:start="63:40" pos:end="63:40">)</operator> <operator pos:start="63:42" pos:end="63:42">&gt;</operator> <name pos:start="63:44" pos:end="63:47">size</name></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:18"><block_content pos:start="65:9" pos:end="65:18">

        <return pos:start="65:9" pos:end="65:18">return <expr pos:start="65:16" pos:end="65:17"><operator pos:start="65:16" pos:end="65:16">-</operator><literal type="number" pos:start="65:17" pos:end="65:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:40"><expr pos:start="69:5" pos:end="69:39"><call pos:start="69:5" pos:end="69:39"><name pos:start="69:5" pos:end="69:15">av_des_init</name><argument_list pos:start="69:16" pos:end="69:39">(<argument pos:start="69:17" pos:end="69:23"><expr pos:start="69:17" pos:end="69:23"><operator pos:start="69:17" pos:end="69:17">&amp;</operator><name pos:start="69:18" pos:end="69:23">av_des</name></expr></argument>, <argument pos:start="69:26" pos:end="69:30"><expr pos:start="69:26" pos:end="69:30"><name pos:start="69:26" pos:end="69:30">n_val</name></expr></argument>, <argument pos:start="69:33" pos:end="69:35"><expr pos:start="69:33" pos:end="69:35"><literal type="number" pos:start="69:33" pos:end="69:35">192</literal></expr></argument>, <argument pos:start="69:38" pos:end="69:38"><expr pos:start="69:38" pos:end="69:38"><literal type="number" pos:start="69:38" pos:end="69:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="71:5" pos:end="83:5">while <condition pos:start="71:11" pos:end="71:25">(<expr pos:start="71:12" pos:end="71:24"><name pos:start="71:12" pos:end="71:18">datalen</name><operator pos:start="71:19" pos:end="71:20">--</operator> <operator pos:start="71:22" pos:end="71:22">&gt;</operator> <literal type="number" pos:start="71:24" pos:end="71:24">0</literal></expr>)</condition> <block pos:start="71:27" pos:end="83:5">{<block_content pos:start="73:9" pos:end="81:18">

        <expr_stmt pos:start="73:9" pos:end="73:71"><expr pos:start="73:9" pos:end="73:70"><call pos:start="73:9" pos:end="73:70"><name pos:start="73:9" pos:end="73:20">av_des_crypt</name><argument_list pos:start="73:21" pos:end="73:70">(<argument pos:start="73:22" pos:end="73:28"><expr pos:start="73:22" pos:end="73:28"><operator pos:start="73:22" pos:end="73:22">&amp;</operator><name pos:start="73:23" pos:end="73:28">av_des</name></expr></argument>, <argument pos:start="73:31" pos:end="73:39"><expr pos:start="73:31" pos:end="73:39"><name pos:start="73:31" pos:end="73:39"><name pos:start="73:31" pos:end="73:32">oc</name><operator pos:start="73:33" pos:end="73:34">-&gt;</operator><name pos:start="73:35" pos:end="73:39">r_val</name></name></expr></argument>, <argument pos:start="73:42" pos:end="73:57"><expr pos:start="73:42" pos:end="73:57"><operator pos:start="73:42" pos:end="73:42">&amp;</operator><name pos:start="73:43" pos:end="73:57"><name pos:start="73:43" pos:end="73:52">enc_header</name><index pos:start="73:53" pos:end="73:57">[<expr pos:start="73:54" pos:end="73:56"><name pos:start="73:54" pos:end="73:56">pos</name></expr>]</index></name></expr></argument>, <argument pos:start="73:60" pos:end="73:60"><expr pos:start="73:60" pos:end="73:60"><literal type="number" pos:start="73:60" pos:end="73:60">2</literal></expr></argument>, <argument pos:start="73:63" pos:end="73:66"><expr pos:start="73:63" pos:end="73:66"><name pos:start="73:63" pos:end="73:66">NULL</name></expr></argument>, <argument pos:start="73:69" pos:end="73:69"><expr pos:start="73:69" pos:end="73:69"><literal type="number" pos:start="73:69" pos:end="73:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:37"><expr pos:start="75:9" pos:end="75:36"><call pos:start="75:9" pos:end="75:36"><name pos:start="75:9" pos:end="75:12">kset</name><argument_list pos:start="75:13" pos:end="75:36">(<argument pos:start="75:14" pos:end="75:14"><expr pos:start="75:14" pos:end="75:14"><name pos:start="75:14" pos:end="75:14">s</name></expr></argument>, <argument pos:start="75:17" pos:end="75:25"><expr pos:start="75:17" pos:end="75:25"><name pos:start="75:17" pos:end="75:25"><name pos:start="75:17" pos:end="75:18">oc</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:25">r_val</name></name></expr></argument>, <argument pos:start="75:28" pos:end="75:31"><expr pos:start="75:28" pos:end="75:31"><name pos:start="75:28" pos:end="75:31">NULL</name></expr></argument>, <argument pos:start="75:34" pos:end="75:35"><expr pos:start="75:34" pos:end="75:35"><literal type="number" pos:start="75:34" pos:end="75:35">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="79:21"><if pos:start="77:9" pos:end="79:21">if <condition pos:start="77:12" pos:end="77:52">(<expr pos:start="77:13" pos:end="77:51"><operator pos:start="77:13" pos:end="77:13">!</operator><call pos:start="77:14" pos:end="77:51"><name pos:start="77:14" pos:end="77:19">rprobe</name><argument_list pos:start="77:20" pos:end="77:51">(<argument pos:start="77:21" pos:end="77:21"><expr pos:start="77:21" pos:end="77:21"><name pos:start="77:21" pos:end="77:21">s</name></expr></argument>, <argument pos:start="77:24" pos:end="77:33"><expr pos:start="77:24" pos:end="77:33"><name pos:start="77:24" pos:end="77:33">enc_header</name></expr></argument>, <argument pos:start="77:36" pos:end="77:39"><expr pos:start="77:36" pos:end="77:39"><name pos:start="77:36" pos:end="77:39">size</name></expr></argument>, <argument pos:start="77:42" pos:end="77:50"><expr pos:start="77:42" pos:end="77:50"><name pos:start="77:42" pos:end="77:50"><name pos:start="77:42" pos:end="77:43">oc</name><operator pos:start="77:44" pos:end="77:45">-&gt;</operator><name pos:start="77:46" pos:end="77:50">r_val</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:21"><block_content pos:start="79:13" pos:end="79:21">

            <return pos:start="79:13" pos:end="79:21">return <expr pos:start="79:20" pos:end="79:20"><literal type="number" pos:start="79:20" pos:end="79:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:18"><expr pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:11">pos</name> <operator pos:start="81:13" pos:end="81:14">+=</operator> <literal type="number" pos:start="81:16" pos:end="81:17">16</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="87:5" pos:end="87:14">return <expr pos:start="87:12" pos:end="87:13"><operator pos:start="87:12" pos:end="87:12">-</operator><literal type="number" pos:start="87:13" pos:end="87:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
