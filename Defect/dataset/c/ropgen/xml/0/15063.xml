<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15063.c" pos:tabs="8"><macro pos:start="1:1" pos:end="13:48"><name pos:start="1:1" pos:end="1:23">yuv2gray16_2_c_template</name><argument_list pos:start="1:24" pos:end="13:48">(<argument pos:start="1:25" pos:end="1:37">SwsContext *c</argument>, <argument pos:start="1:40" pos:end="1:59">const uint16_t *buf0</argument>,

                        <argument pos:start="3:25" pos:end="3:44">const uint16_t *buf1</argument>, <argument pos:start="3:47" pos:end="3:67">const uint16_t *ubuf0</argument>,

                        <argument pos:start="5:25" pos:end="5:45">const uint16_t *ubuf1</argument>, <argument pos:start="5:48" pos:end="5:68">const uint16_t *vbuf0</argument>,

                        <argument pos:start="7:25" pos:end="7:45">const uint16_t *vbuf1</argument>, <argument pos:start="7:48" pos:end="7:68">const uint16_t *abuf0</argument>,

                        <argument pos:start="9:25" pos:end="9:45">const uint16_t *abuf1</argument>, <argument pos:start="9:48" pos:end="9:60">uint8_t *dest</argument>, <argument pos:start="9:63" pos:end="9:70">int dstW</argument>,

                        <argument pos:start="11:25" pos:end="11:34">int yalpha</argument>, <argument pos:start="11:37" pos:end="11:47">int uvalpha</argument>, <argument pos:start="11:50" pos:end="11:54">int y</argument>,

                        <argument pos:start="13:25" pos:end="13:47">enum PixelFormat target</argument>)</argument_list></macro>

<block pos:start="15:1" pos:end="39:1">{<block_content pos:start="17:5" pos:end="37:5">

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type>  <name pos:start="17:10" pos:end="17:16">yalpha1</name> <init pos:start="17:18" pos:end="17:32">= <expr pos:start="17:20" pos:end="17:32"><literal type="number" pos:start="17:20" pos:end="17:25">4095</literal> <operator pos:start="17:25" pos:end="17:25">-</operator> <name pos:start="17:27" pos:end="17:32">yalpha</name></expr></init></decl>;</decl_stmt> \

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>



    <for pos:start="23:5" pos:end="37:5">for <control pos:start="23:9" pos:end="23:37">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:32"><expr pos:start="23:17" pos:end="23:31"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <operator pos:start="23:21" pos:end="23:21">(</operator><name pos:start="23:22" pos:end="23:25">dstW</name> <operator pos:start="23:27" pos:end="23:28">&gt;&gt;</operator> <literal type="number" pos:start="23:30" pos:end="23:30">1</literal><operator pos:start="23:31" pos:end="23:31">)</operator></expr>;</condition> <incr pos:start="23:34" pos:end="23:36"><expr pos:start="23:34" pos:end="23:36"><name pos:start="23:34" pos:end="23:34">i</name><operator pos:start="23:35" pos:end="23:36">++</operator></expr></incr>)</control> <block pos:start="23:39" pos:end="37:5">{<block_content pos:start="25:9" pos:end="35:44">

        <decl_stmt pos:start="25:9" pos:end="25:29"><decl pos:start="25:9" pos:end="25:28"><type pos:start="25:9" pos:end="25:17"><specifier pos:start="25:9" pos:end="25:13">const</specifier> <name pos:start="25:15" pos:end="25:17">int</name></type> <name pos:start="25:19" pos:end="25:20">i2</name> <init pos:start="25:22" pos:end="25:28">= <expr pos:start="25:24" pos:end="25:28"><literal type="number" pos:start="25:24" pos:end="25:24">2</literal> <operator pos:start="25:26" pos:end="25:26">*</operator> <name pos:start="25:28" pos:end="25:28">i</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:68"><decl pos:start="27:9" pos:end="27:67"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:14">Y1</name> <init pos:start="27:16" pos:end="27:67">= <expr pos:start="27:18" pos:end="27:67"><operator pos:start="27:18" pos:end="27:18">(</operator><name pos:start="27:19" pos:end="27:28"><name pos:start="27:19" pos:end="27:22">buf0</name><index pos:start="27:23" pos:end="27:28">[<expr pos:start="27:24" pos:end="27:25"><name pos:start="27:24" pos:end="27:25">i2</name></expr>  ]</index></name> <operator pos:start="27:30" pos:end="27:30">*</operator> <name pos:start="27:32" pos:end="27:38">yalpha1</name> <operator pos:start="27:40" pos:end="27:40">+</operator> <name pos:start="27:42" pos:end="27:51"><name pos:start="27:42" pos:end="27:45">buf1</name><index pos:start="27:46" pos:end="27:51">[<expr pos:start="27:47" pos:end="27:48"><name pos:start="27:47" pos:end="27:48">i2</name></expr>  ]</index></name> <operator pos:start="27:53" pos:end="27:53">*</operator> <name pos:start="27:55" pos:end="27:60">yalpha</name><operator pos:start="27:61" pos:end="27:61">)</operator> <operator pos:start="27:63" pos:end="27:64">&gt;&gt;</operator> <literal type="number" pos:start="27:66" pos:end="27:67">11</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:68"><decl pos:start="29:9" pos:end="29:67"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:14">Y2</name> <init pos:start="29:16" pos:end="29:67">= <expr pos:start="29:18" pos:end="29:67"><operator pos:start="29:18" pos:end="29:18">(</operator><name pos:start="29:19" pos:end="29:28"><name pos:start="29:19" pos:end="29:22">buf0</name><index pos:start="29:23" pos:end="29:28">[<expr pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:25">i2</name><operator pos:start="29:26" pos:end="29:26">+</operator><literal type="number" pos:start="29:27" pos:end="29:27">1</literal></expr>]</index></name> <operator pos:start="29:30" pos:end="29:30">*</operator> <name pos:start="29:32" pos:end="29:38">yalpha1</name> <operator pos:start="29:40" pos:end="29:40">+</operator> <name pos:start="29:42" pos:end="29:51"><name pos:start="29:42" pos:end="29:45">buf1</name><index pos:start="29:46" pos:end="29:51">[<expr pos:start="29:47" pos:end="29:50"><name pos:start="29:47" pos:end="29:48">i2</name><operator pos:start="29:49" pos:end="29:49">+</operator><literal type="number" pos:start="29:50" pos:end="29:50">1</literal></expr>]</index></name> <operator pos:start="29:53" pos:end="29:53">*</operator> <name pos:start="29:55" pos:end="29:60">yalpha</name><operator pos:start="29:61" pos:end="29:61">)</operator> <operator pos:start="29:63" pos:end="29:64">&gt;&gt;</operator> <literal type="number" pos:start="29:66" pos:end="29:67">11</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:44"><expr pos:start="33:9" pos:end="33:43"><call pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:20">output_pixel</name><argument_list pos:start="33:21" pos:end="33:43">(<argument pos:start="33:22" pos:end="33:38"><expr pos:start="33:22" pos:end="33:38"><operator pos:start="33:22" pos:end="33:22">&amp;</operator><name pos:start="33:23" pos:end="33:38"><name pos:start="33:23" pos:end="33:26">dest</name><index pos:start="33:27" pos:end="33:38">[<expr pos:start="33:28" pos:end="33:37"><literal type="number" pos:start="33:28" pos:end="33:28">2</literal> <operator pos:start="33:30" pos:end="33:30">*</operator> <name pos:start="33:32" pos:end="33:33">i2</name> <operator pos:start="33:35" pos:end="33:35">+</operator> <literal type="number" pos:start="33:37" pos:end="33:37">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="33:41" pos:end="33:42"><expr pos:start="33:41" pos:end="33:42"><name pos:start="33:41" pos:end="33:42">Y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:44"><expr pos:start="35:9" pos:end="35:43"><call pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:20">output_pixel</name><argument_list pos:start="35:21" pos:end="35:43">(<argument pos:start="35:22" pos:end="35:38"><expr pos:start="35:22" pos:end="35:38"><operator pos:start="35:22" pos:end="35:22">&amp;</operator><name pos:start="35:23" pos:end="35:38"><name pos:start="35:23" pos:end="35:26">dest</name><index pos:start="35:27" pos:end="35:38">[<expr pos:start="35:28" pos:end="35:37"><literal type="number" pos:start="35:28" pos:end="35:28">2</literal> <operator pos:start="35:30" pos:end="35:30">*</operator> <name pos:start="35:32" pos:end="35:33">i2</name> <operator pos:start="35:35" pos:end="35:35">+</operator> <literal type="number" pos:start="35:37" pos:end="35:37">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="35:41" pos:end="35:42"><expr pos:start="35:41" pos:end="35:42"><name pos:start="35:41" pos:end="35:42">Y2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block>
</unit>
