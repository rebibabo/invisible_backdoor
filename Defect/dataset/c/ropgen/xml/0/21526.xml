<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21526.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">gdb_set_float_reg</name><parameter_list pos:start="1:29" pos:end="1:71">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:40">CPUPPCState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:63"><decl pos:start="1:48" pos:end="1:63"><type pos:start="1:48" pos:end="1:63"><name pos:start="1:48" pos:end="1:54">uint8_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:63">mem_buf</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:70"><decl pos:start="1:66" pos:end="1:70"><type pos:start="1:66" pos:end="1:70"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:70">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:13">

    <if_stmt pos:start="5:5" pos:end="11:5"><if pos:start="5:5" pos:end="11:5">if <condition pos:start="5:8" pos:end="5:15">(<expr pos:start="5:9" pos:end="5:14"><name pos:start="5:9" pos:end="5:9">n</name> <operator pos:start="5:11" pos:end="5:11">&lt;</operator> <literal type="number" pos:start="5:13" pos:end="5:14">32</literal></expr>)</condition> <block pos:start="5:17" pos:end="11:5">{<block_content pos:start="7:9" pos:end="9:17">

        <expr_stmt pos:start="7:9" pos:end="7:38"><expr pos:start="7:9" pos:end="7:37"><name pos:start="7:9" pos:end="7:19"><name pos:start="7:9" pos:end="7:11">env</name><operator pos:start="7:12" pos:end="7:13">-&gt;</operator><name pos:start="7:14" pos:end="7:16">fpr</name><index pos:start="7:17" pos:end="7:19">[<expr pos:start="7:18" pos:end="7:18"><name pos:start="7:18" pos:end="7:18">n</name></expr>]</index></name> <operator pos:start="7:21" pos:end="7:21">=</operator> <call pos:start="7:23" pos:end="7:37"><name pos:start="7:23" pos:end="7:28">ldfq_p</name><argument_list pos:start="7:29" pos:end="7:37">(<argument pos:start="7:30" pos:end="7:36"><expr pos:start="7:30" pos:end="7:36"><name pos:start="7:30" pos:end="7:36">mem_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="9:9" pos:end="9:17">return <expr pos:start="9:16" pos:end="9:16"><literal type="number" pos:start="9:16" pos:end="9:16">8</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:16">(<expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:9">n</name> <operator pos:start="13:11" pos:end="13:12">==</operator> <literal type="number" pos:start="13:14" pos:end="13:15">32</literal></expr>)</condition> <block pos:start="13:18" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <comment type="block" pos:start="15:9" pos:end="15:36">/* FPSCR not implemented  */</comment>

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">4</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="21:5" pos:end="21:13">return <expr pos:start="21:12" pos:end="21:12"><literal type="number" pos:start="21:12" pos:end="21:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
