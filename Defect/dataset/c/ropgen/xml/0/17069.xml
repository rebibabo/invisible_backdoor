<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17069.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">vhost_virtqueue_stop</name><parameter_list pos:start="1:33" pos:end="7:49">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:49"><name pos:start="1:34" pos:end="1:39">struct</name> <name pos:start="1:41" pos:end="1:49">vhost_dev</name></name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">dev</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:61"><decl pos:start="3:37" pos:end="3:61"><type pos:start="3:37" pos:end="3:61"><name pos:start="3:37" pos:end="3:55"><name pos:start="3:37" pos:end="3:42">struct</name> <name pos:start="3:44" pos:end="3:55">VirtIODevice</name></name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:61">vdev</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:62"><decl pos:start="5:37" pos:end="5:62"><type pos:start="5:37" pos:end="5:62"><name pos:start="5:37" pos:end="5:58"><name pos:start="5:37" pos:end="5:42">struct</name> <name pos:start="5:44" pos:end="5:58">vhost_virtqueue</name></name> <modifier pos:start="5:60" pos:end="5:60">*</modifier></type><name pos:start="5:61" pos:end="5:62">vq</name></decl></parameter>,

                                    <parameter pos:start="7:37" pos:end="7:48"><decl pos:start="7:37" pos:end="7:48"><type pos:start="7:37" pos:end="7:48"><name pos:start="7:37" pos:end="7:44">unsigned</name></type> <name pos:start="7:46" pos:end="7:48">idx</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="83:1">{<block_content pos:start="11:5" pos:end="81:72">

    <decl_stmt pos:start="11:5" pos:end="11:70"><decl pos:start="11:5" pos:end="11:69"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:22">vhost_vq_index</name> <init pos:start="11:24" pos:end="11:69">= <expr pos:start="11:26" pos:end="11:69"><call pos:start="11:26" pos:end="11:69"><name pos:start="11:26" pos:end="11:59"><name pos:start="11:26" pos:end="11:28">dev</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:39">vhost_ops</name><operator pos:start="11:40" pos:end="11:41">-&gt;</operator><name pos:start="11:42" pos:end="11:59">vhost_get_vq_index</name></name><argument_list pos:start="11:60" pos:end="11:69">(<argument pos:start="11:61" pos:end="11:63"><expr pos:start="11:61" pos:end="11:63"><name pos:start="11:61" pos:end="11:63">dev</name></expr></argument>, <argument pos:start="11:66" pos:end="11:68"><expr pos:start="11:66" pos:end="11:68"><name pos:start="11:66" pos:end="11:68">idx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="17:6"><decl pos:start="13:5" pos:end="17:5"><type pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:28">vhost_vring_state</name></name></type> <name pos:start="13:30" pos:end="13:34">state</name> <init pos:start="13:36" pos:end="17:5">= <expr pos:start="13:38" pos:end="17:5"><block pos:start="13:38" pos:end="17:5">{

        <expr pos:start="15:9" pos:end="15:31"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:14">index</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <name pos:start="15:18" pos:end="15:31">vhost_vq_index</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">r</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:58"><expr pos:start="23:5" pos:end="23:57"><name pos:start="23:5" pos:end="23:5">r</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <call pos:start="23:9" pos:end="23:57"><name pos:start="23:9" pos:end="23:44"><name pos:start="23:9" pos:end="23:11">dev</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:22">vhost_ops</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:44">vhost_get_vring_base</name></name><argument_list pos:start="23:45" pos:end="23:57">(<argument pos:start="23:46" pos:end="23:48"><expr pos:start="23:46" pos:end="23:48"><name pos:start="23:46" pos:end="23:48">dev</name></expr></argument>, <argument pos:start="23:51" pos:end="23:56"><expr pos:start="23:51" pos:end="23:56"><operator pos:start="23:51" pos:end="23:51">&amp;</operator><name pos:start="23:52" pos:end="23:56">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:14">(<expr pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:9">r</name> <operator pos:start="25:11" pos:end="25:11">&lt;</operator> <literal type="number" pos:start="25:13" pos:end="25:13">0</literal></expr>)</condition> <block pos:start="25:16" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:23">

        <expr_stmt pos:start="27:9" pos:end="27:73"><expr pos:start="27:9" pos:end="27:72"><call pos:start="27:9" pos:end="27:72"><name pos:start="27:9" pos:end="27:15">fprintf</name><argument_list pos:start="27:16" pos:end="27:72">(<argument pos:start="27:17" pos:end="27:22"><expr pos:start="27:17" pos:end="27:22"><name pos:start="27:17" pos:end="27:22">stderr</name></expr></argument>, <argument pos:start="27:25" pos:end="27:63"><expr pos:start="27:25" pos:end="27:63"><literal type="string" pos:start="27:25" pos:end="27:63">"vhost VQ %d ring restore failed: %d\n"</literal></expr></argument>, <argument pos:start="27:66" pos:end="27:68"><expr pos:start="27:66" pos:end="27:68"><name pos:start="27:66" pos:end="27:68">idx</name></expr></argument>, <argument pos:start="27:71" pos:end="27:71"><expr pos:start="27:71" pos:end="27:71"><name pos:start="27:71" pos:end="27:71">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:23"><expr pos:start="29:9" pos:end="29:22"><call pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:14">fflush</name><argument_list pos:start="29:15" pos:end="29:22">(<argument pos:start="29:16" pos:end="29:21"><expr pos:start="29:16" pos:end="29:21"><name pos:start="29:16" pos:end="29:21">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:58"><expr pos:start="33:5" pos:end="33:57"><call pos:start="33:5" pos:end="33:57"><name pos:start="33:5" pos:end="33:35">virtio_queue_set_last_avail_idx</name><argument_list pos:start="33:36" pos:end="33:57">(<argument pos:start="33:37" pos:end="33:40"><expr pos:start="33:37" pos:end="33:40"><name pos:start="33:37" pos:end="33:40">vdev</name></expr></argument>, <argument pos:start="33:43" pos:end="33:45"><expr pos:start="33:43" pos:end="33:45"><name pos:start="33:43" pos:end="33:45">idx</name></expr></argument>, <argument pos:start="33:48" pos:end="33:56"><expr pos:start="33:48" pos:end="33:56"><name pos:start="33:48" pos:end="33:56"><name pos:start="33:48" pos:end="33:52">state</name><operator pos:start="33:53" pos:end="33:53">.</operator><name pos:start="33:54" pos:end="33:56">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:54"><expr pos:start="35:5" pos:end="35:53"><call pos:start="35:5" pos:end="35:53"><name pos:start="35:5" pos:end="35:42">virtio_queue_invalidate_signalled_used</name><argument_list pos:start="35:43" pos:end="35:53">(<argument pos:start="35:44" pos:end="35:47"><expr pos:start="35:44" pos:end="35:47"><name pos:start="35:44" pos:end="35:47">vdev</name></expr></argument>, <argument pos:start="35:50" pos:end="35:52"><expr pos:start="35:50" pos:end="35:52"><name pos:start="35:50" pos:end="35:52">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="43:7">/* In the cross-endian case, we need to reset the vring endianness to

     * native as legacy devices expect so by default.

     */</comment>

    <if_stmt pos:start="45:5" pos:end="61:5"><if pos:start="45:5" pos:end="61:5">if <condition pos:start="45:8" pos:end="47:39">(<expr pos:start="45:9" pos:end="47:38"><operator pos:start="45:9" pos:end="45:9">!</operator><call pos:start="45:10" pos:end="45:58"><name pos:start="45:10" pos:end="45:32">virtio_vdev_has_feature</name><argument_list pos:start="45:33" pos:end="45:58">(<argument pos:start="45:34" pos:end="45:37"><expr pos:start="45:34" pos:end="45:37"><name pos:start="45:34" pos:end="45:37">vdev</name></expr></argument>, <argument pos:start="45:40" pos:end="45:57"><expr pos:start="45:40" pos:end="45:57"><name pos:start="45:40" pos:end="45:57">VIRTIO_F_VERSION_1</name></expr></argument>)</argument_list></call> <operator pos:start="45:60" pos:end="45:61">&amp;&amp;</operator>

        <call pos:start="47:9" pos:end="47:38"><name pos:start="47:9" pos:end="47:32">vhost_needs_vring_endian</name><argument_list pos:start="47:33" pos:end="47:38">(<argument pos:start="47:34" pos:end="47:37"><expr pos:start="47:34" pos:end="47:37"><name pos:start="47:34" pos:end="47:37">vdev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:41" pos:end="61:5">{<block_content pos:start="49:9" pos:end="59:9">

        <expr_stmt pos:start="49:9" pos:end="53:68"><expr pos:start="49:9" pos:end="53:67"><name pos:start="49:9" pos:end="49:9">r</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <call pos:start="49:13" pos:end="53:67"><name pos:start="49:13" pos:end="49:51">vhost_virtqueue_set_vring_endian_legacy</name><argument_list pos:start="49:52" pos:end="53:67">(<argument pos:start="49:53" pos:end="49:55"><expr pos:start="49:53" pos:end="49:55"><name pos:start="49:53" pos:end="49:55">dev</name></expr></argument>,

                                                    <argument pos:start="51:53" pos:end="51:79"><expr pos:start="51:53" pos:end="51:79"><operator pos:start="51:53" pos:end="51:53">!</operator><call pos:start="51:54" pos:end="51:79"><name pos:start="51:54" pos:end="51:73">virtio_is_big_endian</name><argument_list pos:start="51:74" pos:end="51:79">(<argument pos:start="51:75" pos:end="51:78"><expr pos:start="51:75" pos:end="51:78"><name pos:start="51:75" pos:end="51:78">vdev</name></expr></argument>)</argument_list></call></expr></argument>,

                                                    <argument pos:start="53:53" pos:end="53:66"><expr pos:start="53:53" pos:end="53:66"><name pos:start="53:53" pos:end="53:66">vhost_vq_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:18">(<expr pos:start="55:13" pos:end="55:17"><name pos:start="55:13" pos:end="55:13">r</name> <operator pos:start="55:15" pos:end="55:15">&lt;</operator> <literal type="number" pos:start="55:17" pos:end="55:17">0</literal></expr>)</condition> <block pos:start="55:20" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:61">

            <expr_stmt pos:start="57:13" pos:end="57:61"><expr pos:start="57:13" pos:end="57:60"><call pos:start="57:13" pos:end="57:60"><name pos:start="57:13" pos:end="57:24">error_report</name><argument_list pos:start="57:25" pos:end="57:60">(<argument pos:start="57:26" pos:end="57:59"><expr pos:start="57:26" pos:end="57:59"><literal type="string" pos:start="57:26" pos:end="57:59">"failed to reset vring endianness"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:20"><expr pos:start="65:5" pos:end="65:19"><call pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:10">assert</name> <argument_list pos:start="65:12" pos:end="65:19">(<argument pos:start="65:13" pos:end="65:18"><expr pos:start="65:13" pos:end="65:18"><name pos:start="65:13" pos:end="65:13">r</name> <operator pos:start="65:15" pos:end="65:16">&gt;=</operator> <literal type="number" pos:start="65:18" pos:end="65:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="69:72"><expr pos:start="67:5" pos:end="69:71"><call pos:start="67:5" pos:end="69:71"><name pos:start="67:5" pos:end="67:29">cpu_physical_memory_unmap</name><argument_list pos:start="67:30" pos:end="69:71">(<argument pos:start="67:31" pos:end="67:38"><expr pos:start="67:31" pos:end="67:38"><name pos:start="67:31" pos:end="67:38"><name pos:start="67:31" pos:end="67:32">vq</name><operator pos:start="67:33" pos:end="67:34">-&gt;</operator><name pos:start="67:35" pos:end="67:38">ring</name></name></expr></argument>, <argument pos:start="67:41" pos:end="67:77"><expr pos:start="67:41" pos:end="67:77"><call pos:start="67:41" pos:end="67:77"><name pos:start="67:41" pos:end="67:66">virtio_queue_get_ring_size</name><argument_list pos:start="67:67" pos:end="67:77">(<argument pos:start="67:68" pos:end="67:71"><expr pos:start="67:68" pos:end="67:71"><name pos:start="67:68" pos:end="67:71">vdev</name></expr></argument>, <argument pos:start="67:74" pos:end="67:76"><expr pos:start="67:74" pos:end="67:76"><name pos:start="67:74" pos:end="67:76">idx</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="69:31" pos:end="69:31"><expr pos:start="69:31" pos:end="69:31"><literal type="number" pos:start="69:31" pos:end="69:31">0</literal></expr></argument>, <argument pos:start="69:34" pos:end="69:70"><expr pos:start="69:34" pos:end="69:70"><call pos:start="69:34" pos:end="69:70"><name pos:start="69:34" pos:end="69:59">virtio_queue_get_ring_size</name><argument_list pos:start="69:60" pos:end="69:70">(<argument pos:start="69:61" pos:end="69:64"><expr pos:start="69:61" pos:end="69:64"><name pos:start="69:61" pos:end="69:64">vdev</name></expr></argument>, <argument pos:start="69:67" pos:end="69:69"><expr pos:start="69:67" pos:end="69:69"><name pos:start="69:67" pos:end="69:69">idx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="73:72"><expr pos:start="71:5" pos:end="73:71"><call pos:start="71:5" pos:end="73:71"><name pos:start="71:5" pos:end="71:29">cpu_physical_memory_unmap</name><argument_list pos:start="71:30" pos:end="73:71">(<argument pos:start="71:31" pos:end="71:38"><expr pos:start="71:31" pos:end="71:38"><name pos:start="71:31" pos:end="71:38"><name pos:start="71:31" pos:end="71:32">vq</name><operator pos:start="71:33" pos:end="71:34">-&gt;</operator><name pos:start="71:35" pos:end="71:38">used</name></name></expr></argument>, <argument pos:start="71:41" pos:end="71:77"><expr pos:start="71:41" pos:end="71:77"><call pos:start="71:41" pos:end="71:77"><name pos:start="71:41" pos:end="71:66">virtio_queue_get_used_size</name><argument_list pos:start="71:67" pos:end="71:77">(<argument pos:start="71:68" pos:end="71:71"><expr pos:start="71:68" pos:end="71:71"><name pos:start="71:68" pos:end="71:71">vdev</name></expr></argument>, <argument pos:start="71:74" pos:end="71:76"><expr pos:start="71:74" pos:end="71:76"><name pos:start="71:74" pos:end="71:76">idx</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="73:31" pos:end="73:31"><expr pos:start="73:31" pos:end="73:31"><literal type="number" pos:start="73:31" pos:end="73:31">1</literal></expr></argument>, <argument pos:start="73:34" pos:end="73:70"><expr pos:start="73:34" pos:end="73:70"><call pos:start="73:34" pos:end="73:70"><name pos:start="73:34" pos:end="73:59">virtio_queue_get_used_size</name><argument_list pos:start="73:60" pos:end="73:70">(<argument pos:start="73:61" pos:end="73:64"><expr pos:start="73:61" pos:end="73:64"><name pos:start="73:61" pos:end="73:64">vdev</name></expr></argument>, <argument pos:start="73:67" pos:end="73:69"><expr pos:start="73:67" pos:end="73:69"><name pos:start="73:67" pos:end="73:69">idx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="77:73"><expr pos:start="75:5" pos:end="77:72"><call pos:start="75:5" pos:end="77:72"><name pos:start="75:5" pos:end="75:29">cpu_physical_memory_unmap</name><argument_list pos:start="75:30" pos:end="77:72">(<argument pos:start="75:31" pos:end="75:39"><expr pos:start="75:31" pos:end="75:39"><name pos:start="75:31" pos:end="75:39"><name pos:start="75:31" pos:end="75:32">vq</name><operator pos:start="75:33" pos:end="75:34">-&gt;</operator><name pos:start="75:35" pos:end="75:39">avail</name></name></expr></argument>, <argument pos:start="75:42" pos:end="75:79"><expr pos:start="75:42" pos:end="75:79"><call pos:start="75:42" pos:end="75:79"><name pos:start="75:42" pos:end="75:68">virtio_queue_get_avail_size</name><argument_list pos:start="75:69" pos:end="75:79">(<argument pos:start="75:70" pos:end="75:73"><expr pos:start="75:70" pos:end="75:73"><name pos:start="75:70" pos:end="75:73">vdev</name></expr></argument>, <argument pos:start="75:76" pos:end="75:78"><expr pos:start="75:76" pos:end="75:78"><name pos:start="75:76" pos:end="75:78">idx</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="77:31" pos:end="77:31"><expr pos:start="77:31" pos:end="77:31"><literal type="number" pos:start="77:31" pos:end="77:31">0</literal></expr></argument>, <argument pos:start="77:34" pos:end="77:71"><expr pos:start="77:34" pos:end="77:71"><call pos:start="77:34" pos:end="77:71"><name pos:start="77:34" pos:end="77:60">virtio_queue_get_avail_size</name><argument_list pos:start="77:61" pos:end="77:71">(<argument pos:start="77:62" pos:end="77:65"><expr pos:start="77:62" pos:end="77:65"><name pos:start="77:62" pos:end="77:65">vdev</name></expr></argument>, <argument pos:start="77:68" pos:end="77:70"><expr pos:start="77:68" pos:end="77:70"><name pos:start="77:68" pos:end="77:70">idx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="81:72"><expr pos:start="79:5" pos:end="81:71"><call pos:start="79:5" pos:end="81:71"><name pos:start="79:5" pos:end="79:29">cpu_physical_memory_unmap</name><argument_list pos:start="79:30" pos:end="81:71">(<argument pos:start="79:31" pos:end="79:38"><expr pos:start="79:31" pos:end="79:38"><name pos:start="79:31" pos:end="79:38"><name pos:start="79:31" pos:end="79:32">vq</name><operator pos:start="79:33" pos:end="79:34">-&gt;</operator><name pos:start="79:35" pos:end="79:38">desc</name></name></expr></argument>, <argument pos:start="79:41" pos:end="79:77"><expr pos:start="79:41" pos:end="79:77"><call pos:start="79:41" pos:end="79:77"><name pos:start="79:41" pos:end="79:66">virtio_queue_get_desc_size</name><argument_list pos:start="79:67" pos:end="79:77">(<argument pos:start="79:68" pos:end="79:71"><expr pos:start="79:68" pos:end="79:71"><name pos:start="79:68" pos:end="79:71">vdev</name></expr></argument>, <argument pos:start="79:74" pos:end="79:76"><expr pos:start="79:74" pos:end="79:76"><name pos:start="79:74" pos:end="79:76">idx</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="81:31" pos:end="81:31"><expr pos:start="81:31" pos:end="81:31"><literal type="number" pos:start="81:31" pos:end="81:31">0</literal></expr></argument>, <argument pos:start="81:34" pos:end="81:70"><expr pos:start="81:34" pos:end="81:70"><call pos:start="81:34" pos:end="81:70"><name pos:start="81:34" pos:end="81:59">virtio_queue_get_desc_size</name><argument_list pos:start="81:60" pos:end="81:70">(<argument pos:start="81:61" pos:end="81:64"><expr pos:start="81:61" pos:end="81:64"><name pos:start="81:61" pos:end="81:64">vdev</name></expr></argument>, <argument pos:start="81:67" pos:end="81:69"><expr pos:start="81:67" pos:end="81:69"><name pos:start="81:67" pos:end="81:69">idx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
