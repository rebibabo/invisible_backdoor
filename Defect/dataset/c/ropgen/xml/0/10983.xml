<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10983.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:10">ram_addr_t</name></type> <name pos:start="1:12" pos:end="1:48">migration_bitmap_find_and_reset_dirty</name><parameter_list pos:start="1:49" pos:end="3:66">(<parameter pos:start="1:50" pos:end="1:65"><decl pos:start="1:50" pos:end="1:65"><type pos:start="1:50" pos:end="1:65"><name pos:start="1:50" pos:end="1:61">MemoryRegion</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:65">mr</name></decl></parameter>,

                                                 <parameter pos:start="3:50" pos:end="3:65"><decl pos:start="3:50" pos:end="3:65"><type pos:start="3:50" pos:end="3:65"><name pos:start="3:50" pos:end="3:59">ram_addr_t</name></type> <name pos:start="3:61" pos:end="3:65">start</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:45">

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:57"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">long</name></type> <name pos:start="7:19" pos:end="7:22">base</name> <init pos:start="7:24" pos:end="7:57">= <expr pos:start="7:26" pos:end="7:57"><name pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:27">mr</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:37">ram_addr</name></name> <operator pos:start="7:39" pos:end="7:40">&gt;&gt;</operator> <name pos:start="7:42" pos:end="7:57">TARGET_PAGE_BITS</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:58"><decl pos:start="9:5" pos:end="9:57"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">long</name></type> <name pos:start="9:19" pos:end="9:20">nr</name> <init pos:start="9:22" pos:end="9:57">= <expr pos:start="9:24" pos:end="9:57"><name pos:start="9:24" pos:end="9:27">base</name> <operator pos:start="9:29" pos:end="9:29">+</operator> <operator pos:start="9:31" pos:end="9:31">(</operator><name pos:start="9:32" pos:end="9:36">start</name> <operator pos:start="9:38" pos:end="9:39">&gt;&gt;</operator> <name pos:start="9:41" pos:end="9:56">TARGET_PAGE_BITS</name><operator pos:start="9:57" pos:end="9:57">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:65"><decl pos:start="11:5" pos:end="11:64"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:20">mr_size</name> <init pos:start="11:22" pos:end="11:64">= <expr pos:start="11:24" pos:end="11:64"><call pos:start="11:24" pos:end="11:64"><name pos:start="11:24" pos:end="11:40">TARGET_PAGE_ALIGN</name><argument_list pos:start="11:41" pos:end="11:64">(<argument pos:start="11:42" pos:end="11:63"><expr pos:start="11:42" pos:end="11:63"><call pos:start="11:42" pos:end="11:63"><name pos:start="11:42" pos:end="11:59">memory_region_size</name><argument_list pos:start="11:60" pos:end="11:63">(<argument pos:start="11:61" pos:end="11:62"><expr pos:start="11:61" pos:end="11:62"><name pos:start="11:61" pos:end="11:62">mr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:62"><decl pos:start="13:5" pos:end="13:61"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">long</name></type> <name pos:start="13:19" pos:end="13:22">size</name> <init pos:start="13:24" pos:end="13:61">= <expr pos:start="13:26" pos:end="13:61"><name pos:start="13:26" pos:end="13:29">base</name> <operator pos:start="13:31" pos:end="13:31">+</operator> <operator pos:start="13:33" pos:end="13:33">(</operator><name pos:start="13:34" pos:end="13:40">mr_size</name> <operator pos:start="13:42" pos:end="13:43">&gt;&gt;</operator> <name pos:start="13:45" pos:end="13:60">TARGET_PAGE_BITS</name><operator pos:start="13:61" pos:end="13:61">)</operator></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:17">long</name></type> <name pos:start="17:19" pos:end="17:22">next</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:36">(<expr pos:start="21:9" pos:end="21:35"><name pos:start="21:9" pos:end="21:22">ram_bulk_stage</name> <operator pos:start="21:24" pos:end="21:25">&amp;&amp;</operator> <name pos:start="21:27" pos:end="21:28">nr</name> <operator pos:start="21:30" pos:end="21:30">&gt;</operator> <name pos:start="21:32" pos:end="21:35">base</name></expr>)</condition> <block pos:start="21:38" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:22">

        <expr_stmt pos:start="23:9" pos:end="23:22"><expr pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:12">next</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:17">nr</name> <operator pos:start="23:19" pos:end="23:19">+</operator> <literal type="number" pos:start="23:21" pos:end="23:21">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="29:5">else <block pos:start="25:12" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:57">

        <expr_stmt pos:start="27:9" pos:end="27:57"><expr pos:start="27:9" pos:end="27:56"><name pos:start="27:9" pos:end="27:12">next</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:56"><name pos:start="27:16" pos:end="27:28">find_next_bit</name><argument_list pos:start="27:29" pos:end="27:56">(<argument pos:start="27:30" pos:end="27:45"><expr pos:start="27:30" pos:end="27:45"><name pos:start="27:30" pos:end="27:45">migration_bitmap</name></expr></argument>, <argument pos:start="27:48" pos:end="27:51"><expr pos:start="27:48" pos:end="27:51"><name pos:start="27:48" pos:end="27:51">size</name></expr></argument>, <argument pos:start="27:54" pos:end="27:55"><expr pos:start="27:54" pos:end="27:55"><name pos:start="27:54" pos:end="27:55">nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:20">(<expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:12">next</name> <operator pos:start="33:14" pos:end="33:14">&lt;</operator> <name pos:start="33:16" pos:end="33:19">size</name></expr>)</condition> <block pos:start="33:22" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:32">

        <expr_stmt pos:start="35:9" pos:end="35:42"><expr pos:start="35:9" pos:end="35:41"><call pos:start="35:9" pos:end="35:41"><name pos:start="35:9" pos:end="35:17">clear_bit</name><argument_list pos:start="35:18" pos:end="35:41">(<argument pos:start="35:19" pos:end="35:22"><expr pos:start="35:19" pos:end="35:22"><name pos:start="35:19" pos:end="35:22">next</name></expr></argument>, <argument pos:start="35:25" pos:end="35:40"><expr pos:start="35:25" pos:end="35:40"><name pos:start="35:25" pos:end="35:40">migration_bitmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:32"><expr pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:29">migration_dirty_pages</name><operator pos:start="37:30" pos:end="37:31">--</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="41:5" pos:end="41:45">return <expr pos:start="41:12" pos:end="41:44"><operator pos:start="41:12" pos:end="41:12">(</operator><name pos:start="41:13" pos:end="41:16">next</name> <operator pos:start="41:18" pos:end="41:18">-</operator> <name pos:start="41:20" pos:end="41:23">base</name><operator pos:start="41:24" pos:end="41:24">)</operator> <operator pos:start="41:26" pos:end="41:27">&lt;&lt;</operator> <name pos:start="41:29" pos:end="41:44">TARGET_PAGE_BITS</name></expr>;</return>

</block_content>}</block></function>
</unit>
