<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10224.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">net_init_slirp</name><parameter_list pos:start="1:19" pos:end="3:54">(<parameter pos:start="1:20" pos:end="1:47"><decl pos:start="1:20" pos:end="1:47"><type pos:start="1:20" pos:end="1:47"><specifier pos:start="1:20" pos:end="1:24">const</specifier> <name pos:start="1:26" pos:end="1:41">NetClientOptions</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:47">opts</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:65"><decl pos:start="1:50" pos:end="1:65"><type pos:start="1:50" pos:end="1:65"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:59">char</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">name</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:39"><decl pos:start="3:20" pos:end="3:39"><type pos:start="3:20" pos:end="3:39"><name pos:start="3:20" pos:end="3:33">NetClientState</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">peer</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:53"><decl pos:start="3:42" pos:end="3:53"><type pos:start="3:42" pos:end="3:53"><name pos:start="3:42" pos:end="3:46">Error</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier><modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:53">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="79:1">{<block_content pos:start="9:5" pos:end="77:15">

    <comment type="block" pos:start="7:5" pos:end="7:48">/* FIXME error_setg(errp, ...) on failure */</comment>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:29"><name pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:27">slirp_config_str</name></name> <modifier pos:start="9:29" pos:end="9:29">*</modifier></type><name pos:start="9:30" pos:end="9:35">config</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:14">vnet</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:29"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:27">NetdevUserOptions</name> <modifier pos:start="15:29" pos:end="15:29">*</modifier></type><name pos:start="15:30" pos:end="15:33">user</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:17"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">char</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier><modifier pos:start="17:17" pos:end="17:17">*</modifier></type><name pos:start="17:18" pos:end="17:26">dnssearch</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:55"><expr pos:start="21:5" pos:end="21:54"><call pos:start="21:5" pos:end="21:54"><name pos:start="21:5" pos:end="21:10">assert</name><argument_list pos:start="21:11" pos:end="21:54">(<argument pos:start="21:12" pos:end="21:53"><expr pos:start="21:12" pos:end="21:53"><name pos:start="21:12" pos:end="21:21"><name pos:start="21:12" pos:end="21:15">opts</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:21">kind</name></name> <operator pos:start="21:23" pos:end="21:24">==</operator> <name pos:start="21:26" pos:end="21:53">NET_CLIENT_OPTIONS_KIND_USER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:8">user</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <name pos:start="23:12" pos:end="23:21"><name pos:start="23:12" pos:end="23:15">opts</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:21">user</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="31:16"><expr pos:start="27:5" pos:end="31:15"><name pos:start="27:5" pos:end="27:8">vnet</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <ternary pos:start="27:12" pos:end="31:15"><condition pos:start="27:12" pos:end="27:26"><expr pos:start="27:12" pos:end="27:24"><name pos:start="27:12" pos:end="27:24"><name pos:start="27:12" pos:end="27:15">user</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:24">has_net</name></name></expr> ?</condition><then pos:start="27:28" pos:end="27:46"> <expr pos:start="27:28" pos:end="27:46"><call pos:start="27:28" pos:end="27:46"><name pos:start="27:28" pos:end="27:35">g_strdup</name><argument_list pos:start="27:36" pos:end="27:46">(<argument pos:start="27:37" pos:end="27:45"><expr pos:start="27:37" pos:end="27:45"><name pos:start="27:37" pos:end="27:45"><name pos:start="27:37" pos:end="27:40">user</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:45">net</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="27:48" pos:end="31:15">:

           <expr pos:start="29:12" pos:end="31:15"><ternary pos:start="29:12" pos:end="31:15"><condition pos:start="29:12" pos:end="29:26"><expr pos:start="29:12" pos:end="29:23"><name pos:start="29:12" pos:end="29:23"><name pos:start="29:12" pos:end="29:15">user</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:23">has_ip</name></name></expr>  ?</condition><then pos:start="29:28" pos:end="29:61"> <expr pos:start="29:28" pos:end="29:61"><call pos:start="29:28" pos:end="29:61"><name pos:start="29:28" pos:end="29:42">g_strdup_printf</name><argument_list pos:start="29:43" pos:end="29:61">(<argument pos:start="29:44" pos:end="29:50"><expr pos:start="29:44" pos:end="29:50"><literal type="string" pos:start="29:44" pos:end="29:50">"%s/24"</literal></expr></argument>, <argument pos:start="29:53" pos:end="29:60"><expr pos:start="29:53" pos:end="29:60"><name pos:start="29:53" pos:end="29:60"><name pos:start="29:53" pos:end="29:56">user</name><operator pos:start="29:57" pos:end="29:58">-&gt;</operator><name pos:start="29:59" pos:end="29:60">ip</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="29:63" pos:end="31:15">:

           <expr pos:start="31:12" pos:end="31:15"><name pos:start="31:12" pos:end="31:15">NULL</name></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:49"><expr pos:start="35:5" pos:end="35:48"><name pos:start="35:5" pos:end="35:13">dnssearch</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:48"><name pos:start="35:17" pos:end="35:31">slirp_dnssearch</name><argument_list pos:start="35:32" pos:end="35:48">(<argument pos:start="35:33" pos:end="35:47"><expr pos:start="35:33" pos:end="35:47"><name pos:start="35:33" pos:end="35:47"><name pos:start="35:33" pos:end="35:36">user</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:47">dnssearch</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:64">/* all optional fields are initialized to "all bits zero" */</comment>



    <expr_stmt pos:start="43:5" pos:end="43:61"><expr pos:start="43:5" pos:end="43:60"><call pos:start="43:5" pos:end="43:60"><name pos:start="43:5" pos:end="43:26">net_init_slirp_configs</name><argument_list pos:start="43:27" pos:end="43:60">(<argument pos:start="43:28" pos:end="43:40"><expr pos:start="43:28" pos:end="43:40"><name pos:start="43:28" pos:end="43:40"><name pos:start="43:28" pos:end="43:31">user</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:40">hostfwd</name></name></expr></argument>, <argument pos:start="43:43" pos:end="43:59"><expr pos:start="43:43" pos:end="43:59"><name pos:start="43:43" pos:end="43:59">SLIRP_CFG_HOSTFWD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:46"><expr pos:start="45:5" pos:end="45:45"><call pos:start="45:5" pos:end="45:45"><name pos:start="45:5" pos:end="45:26">net_init_slirp_configs</name><argument_list pos:start="45:27" pos:end="45:45">(<argument pos:start="45:28" pos:end="45:41"><expr pos:start="45:28" pos:end="45:41"><name pos:start="45:28" pos:end="45:41"><name pos:start="45:28" pos:end="45:31">user</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:41">guestfwd</name></name></expr></argument>, <argument pos:start="45:44" pos:end="45:44"><expr pos:start="45:44" pos:end="45:44"><literal type="number" pos:start="45:44" pos:end="45:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="55:53"><expr pos:start="49:5" pos:end="55:52"><name pos:start="49:5" pos:end="49:7">ret</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="55:52"><name pos:start="49:11" pos:end="49:24">net_slirp_init</name><argument_list pos:start="49:25" pos:end="55:52">(<argument pos:start="49:26" pos:end="49:29"><expr pos:start="49:26" pos:end="49:29"><name pos:start="49:26" pos:end="49:29">peer</name></expr></argument>, <argument pos:start="49:32" pos:end="49:37"><expr pos:start="49:32" pos:end="49:37"><literal type="string" pos:start="49:32" pos:end="49:37">"user"</literal></expr></argument>, <argument pos:start="49:40" pos:end="49:43"><expr pos:start="49:40" pos:end="49:43"><name pos:start="49:40" pos:end="49:43">name</name></expr></argument>, <argument pos:start="49:46" pos:end="49:61"><expr pos:start="49:46" pos:end="49:61"><name pos:start="49:46" pos:end="49:61"><name pos:start="49:46" pos:end="49:49">user</name><operator pos:start="49:50" pos:end="49:51">-&gt;</operator><name pos:start="49:52" pos:end="49:61">q_restrict</name></name></expr></argument>, <argument pos:start="49:64" pos:end="49:67"><expr pos:start="49:64" pos:end="49:67"><name pos:start="49:64" pos:end="49:67">vnet</name></expr></argument>,

                         <argument pos:start="51:26" pos:end="51:35"><expr pos:start="51:26" pos:end="51:35"><name pos:start="51:26" pos:end="51:35"><name pos:start="51:26" pos:end="51:29">user</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:35">host</name></name></expr></argument>, <argument pos:start="51:38" pos:end="51:51"><expr pos:start="51:38" pos:end="51:51"><name pos:start="51:38" pos:end="51:51"><name pos:start="51:38" pos:end="51:41">user</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:51">hostname</name></name></expr></argument>, <argument pos:start="51:54" pos:end="51:63"><expr pos:start="51:54" pos:end="51:63"><name pos:start="51:54" pos:end="51:63"><name pos:start="51:54" pos:end="51:57">user</name><operator pos:start="51:58" pos:end="51:59">-&gt;</operator><name pos:start="51:60" pos:end="51:63">tftp</name></name></expr></argument>,

                         <argument pos:start="53:26" pos:end="53:39"><expr pos:start="53:26" pos:end="53:39"><name pos:start="53:26" pos:end="53:39"><name pos:start="53:26" pos:end="53:29">user</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:39">bootfile</name></name></expr></argument>, <argument pos:start="53:42" pos:end="53:56"><expr pos:start="53:42" pos:end="53:56"><name pos:start="53:42" pos:end="53:56"><name pos:start="53:42" pos:end="53:45">user</name><operator pos:start="53:46" pos:end="53:47">-&gt;</operator><name pos:start="53:48" pos:end="53:56">dhcpstart</name></name></expr></argument>, <argument pos:start="53:59" pos:end="53:67"><expr pos:start="53:59" pos:end="53:67"><name pos:start="53:59" pos:end="53:67"><name pos:start="53:59" pos:end="53:62">user</name><operator pos:start="53:63" pos:end="53:64">-&gt;</operator><name pos:start="53:65" pos:end="53:67">dns</name></name></expr></argument>, <argument pos:start="53:70" pos:end="53:78"><expr pos:start="53:70" pos:end="53:78"><name pos:start="53:70" pos:end="53:78"><name pos:start="53:70" pos:end="53:73">user</name><operator pos:start="53:74" pos:end="53:75">-&gt;</operator><name pos:start="53:76" pos:end="53:78">smb</name></name></expr></argument>,

                         <argument pos:start="55:26" pos:end="55:40"><expr pos:start="55:26" pos:end="55:40"><name pos:start="55:26" pos:end="55:40"><name pos:start="55:26" pos:end="55:29">user</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:40">smbserver</name></name></expr></argument>, <argument pos:start="55:43" pos:end="55:51"><expr pos:start="55:43" pos:end="55:51"><name pos:start="55:43" pos:end="55:51">dnssearch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="59:5" pos:end="67:5">while <condition pos:start="59:11" pos:end="59:25">(<expr pos:start="59:12" pos:end="59:24"><name pos:start="59:12" pos:end="59:24">slirp_configs</name></expr>)</condition> <block pos:start="59:27" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:23">

        <expr_stmt pos:start="61:9" pos:end="61:31"><expr pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:14">config</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <name pos:start="61:18" pos:end="61:30">slirp_configs</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:37"><expr pos:start="63:9" pos:end="63:36"><name pos:start="63:9" pos:end="63:21">slirp_configs</name> <operator pos:start="63:23" pos:end="63:23">=</operator> <name pos:start="63:25" pos:end="63:36"><name pos:start="63:25" pos:end="63:30">config</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:36">next</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:23"><expr pos:start="65:9" pos:end="65:22"><call pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:14">g_free</name><argument_list pos:start="65:15" pos:end="65:22">(<argument pos:start="65:16" pos:end="65:21"><expr pos:start="65:16" pos:end="65:21"><name pos:start="65:16" pos:end="65:21">config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="71:5" pos:end="71:17"><expr pos:start="71:5" pos:end="71:16"><call pos:start="71:5" pos:end="71:16"><name pos:start="71:5" pos:end="71:10">g_free</name><argument_list pos:start="71:11" pos:end="71:16">(<argument pos:start="71:12" pos:end="71:15"><expr pos:start="71:12" pos:end="71:15"><name pos:start="71:12" pos:end="71:15">vnet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:22"><expr pos:start="73:5" pos:end="73:21"><call pos:start="73:5" pos:end="73:21"><name pos:start="73:5" pos:end="73:10">g_free</name><argument_list pos:start="73:11" pos:end="73:21">(<argument pos:start="73:12" pos:end="73:20"><expr pos:start="73:12" pos:end="73:20"><name pos:start="73:12" pos:end="73:20">dnssearch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="77:5" pos:end="77:15">return <expr pos:start="77:12" pos:end="77:14"><name pos:start="77:12" pos:end="77:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
