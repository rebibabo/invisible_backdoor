<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15429.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">long</name></type> <name pos:start="1:6" pos:end="1:20">do_rt_sigreturn</name><parameter_list pos:start="1:21" pos:end="1:39">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:35"><name pos:start="1:22" pos:end="1:33">CPUM68KState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:29">target_rt_sigframe</name></name> <modifier pos:start="5:31" pos:end="5:31">*</modifier></type><name pos:start="5:32" pos:end="5:36">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">abi_ulong</name></type> <name pos:start="7:15" pos:end="7:24">frame_addr</name> <init pos:start="7:26" pos:end="7:44">= <expr pos:start="7:28" pos:end="7:44"><name pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:30">env</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:37">aregs</name><index pos:start="7:38" pos:end="7:40">[<expr pos:start="7:39" pos:end="7:39"><literal type="number" pos:start="7:39" pos:end="7:39">7</literal></expr>]</index></name> <operator pos:start="7:42" pos:end="7:42">-</operator> <literal type="number" pos:start="7:44" pos:end="7:44">4</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:19">target_sigset_t</name></type> <name pos:start="9:21" pos:end="9:30">target_set</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">sigset_t</name></type> <name pos:start="11:14" pos:end="11:16">set</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:11"><decl pos:start="13:5" pos:end="13:10"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">d0</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:22"><if pos:start="17:5" pos:end="19:22">if <condition pos:start="17:8" pos:end="17:61">(<expr pos:start="17:9" pos:end="17:60"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:60"><name pos:start="17:10" pos:end="17:25">lock_user_struct</name><argument_list pos:start="17:26" pos:end="17:60">(<argument pos:start="17:27" pos:end="17:37"><expr pos:start="17:27" pos:end="17:37"><name pos:start="17:27" pos:end="17:37">VERIFY_READ</name></expr></argument>, <argument pos:start="17:40" pos:end="17:44"><expr pos:start="17:40" pos:end="17:44"><name pos:start="17:40" pos:end="17:44">frame</name></expr></argument>, <argument pos:start="17:47" pos:end="17:56"><expr pos:start="17:47" pos:end="17:56"><name pos:start="17:47" pos:end="17:56">frame_addr</name></expr></argument>, <argument pos:start="17:59" pos:end="17:59"><expr pos:start="17:59" pos:end="17:59"><literal type="number" pos:start="17:59" pos:end="17:59">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:22"><block_content pos:start="19:9" pos:end="19:22">

        <goto pos:start="19:9" pos:end="19:22">goto <name pos:start="19:14" pos:end="19:21">badframe</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:54"><expr pos:start="23:5" pos:end="23:53"><call pos:start="23:5" pos:end="23:53"><name pos:start="23:5" pos:end="23:34">target_to_host_sigset_internal</name><argument_list pos:start="23:35" pos:end="23:53">(<argument pos:start="23:36" pos:end="23:39"><expr pos:start="23:36" pos:end="23:39"><operator pos:start="23:36" pos:end="23:36">&amp;</operator><name pos:start="23:37" pos:end="23:39">set</name></expr></argument>, <argument pos:start="23:42" pos:end="23:52"><expr pos:start="23:42" pos:end="23:52"><operator pos:start="23:42" pos:end="23:42">&amp;</operator><name pos:start="23:43" pos:end="23:52">target_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:41"><expr pos:start="25:5" pos:end="25:40"><call pos:start="25:5" pos:end="25:40"><name pos:start="25:5" pos:end="25:15">sigprocmask</name><argument_list pos:start="25:16" pos:end="25:40">(<argument pos:start="25:17" pos:end="25:27"><expr pos:start="25:17" pos:end="25:27"><name pos:start="25:17" pos:end="25:27">SIG_SETMASK</name></expr></argument>, <argument pos:start="25:30" pos:end="25:33"><expr pos:start="25:30" pos:end="25:33"><operator pos:start="25:30" pos:end="25:30">&amp;</operator><name pos:start="25:31" pos:end="25:33">set</name></expr></argument>, <argument pos:start="25:36" pos:end="25:39"><expr pos:start="25:36" pos:end="25:39"><name pos:start="25:36" pos:end="25:39">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:27">/* restore registers */</comment>



    <if_stmt pos:start="33:5" pos:end="35:22"><if pos:start="33:5" pos:end="35:22">if <condition pos:start="33:8" pos:end="33:57">(<expr pos:start="33:9" pos:end="33:56"><call pos:start="33:9" pos:end="33:56"><name pos:start="33:9" pos:end="33:34">target_rt_restore_ucontext</name><argument_list pos:start="33:35" pos:end="33:56">(<argument pos:start="33:36" pos:end="33:38"><expr pos:start="33:36" pos:end="33:38"><name pos:start="33:36" pos:end="33:38">env</name></expr></argument>, <argument pos:start="33:41" pos:end="33:50"><expr pos:start="33:41" pos:end="33:50"><operator pos:start="33:41" pos:end="33:41">&amp;</operator><name pos:start="33:42" pos:end="33:50"><name pos:start="33:42" pos:end="33:46">frame</name><operator pos:start="33:47" pos:end="33:48">-&gt;</operator><name pos:start="33:49" pos:end="33:50">uc</name></name></expr></argument>, <argument pos:start="33:53" pos:end="33:55"><expr pos:start="33:53" pos:end="33:55"><operator pos:start="33:53" pos:end="33:53">&amp;</operator><name pos:start="33:54" pos:end="33:55">d0</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:22"><block_content pos:start="35:9" pos:end="35:22">

        <goto pos:start="35:9" pos:end="35:22">goto <name pos:start="35:14" pos:end="35:21">badframe</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="45:22"><if pos:start="39:5" pos:end="45:22">if <condition pos:start="39:8" pos:end="43:64">(<expr pos:start="39:9" pos:end="43:63"><call pos:start="39:9" pos:end="43:52"><name pos:start="39:9" pos:end="39:22">do_sigaltstack</name><argument_list pos:start="39:23" pos:end="43:52">(<argument pos:start="39:24" pos:end="41:72"><expr pos:start="39:24" pos:end="41:72"><name pos:start="39:24" pos:end="39:33">frame_addr</name> <operator pos:start="39:35" pos:end="39:35">+</operator>

                       <call pos:start="41:24" pos:end="41:72"><name pos:start="41:24" pos:end="41:31">offsetof</name><argument_list pos:start="41:32" pos:end="41:72">(<argument pos:start="41:33" pos:end="41:57"><expr pos:start="41:33" pos:end="41:57">struct <name pos:start="41:40" pos:end="41:57">target_rt_sigframe</name></expr></argument>, <argument pos:start="41:60" pos:end="41:71"><expr pos:start="41:60" pos:end="41:71"><name pos:start="41:60" pos:end="41:71"><name pos:start="41:60" pos:end="41:61">uc</name><operator pos:start="41:62" pos:end="41:62">.</operator><name pos:start="41:63" pos:end="41:71">tuc_stack</name></name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="43:24" pos:end="43:24"><expr pos:start="43:24" pos:end="43:24"><literal type="number" pos:start="43:24" pos:end="43:24">0</literal></expr></argument>, <argument pos:start="43:27" pos:end="43:51"><expr pos:start="43:27" pos:end="43:51"><call pos:start="43:27" pos:end="43:51"><name pos:start="43:27" pos:end="43:46">get_sp_from_cpustate</name><argument_list pos:start="43:47" pos:end="43:51">(<argument pos:start="43:48" pos:end="43:50"><expr pos:start="43:48" pos:end="43:50"><name pos:start="43:48" pos:end="43:50">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="43:54" pos:end="43:55">==</operator> <operator pos:start="43:57" pos:end="43:57">-</operator><name pos:start="43:58" pos:end="43:63">EFAULT</name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:22"><block_content pos:start="45:9" pos:end="45:22">

        <goto pos:start="45:9" pos:end="45:22">goto <name pos:start="45:14" pos:end="45:21">badframe</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:45"><expr pos:start="49:5" pos:end="49:44"><call pos:start="49:5" pos:end="49:44"><name pos:start="49:5" pos:end="49:22">unlock_user_struct</name><argument_list pos:start="49:23" pos:end="49:44">(<argument pos:start="49:24" pos:end="49:28"><expr pos:start="49:24" pos:end="49:28"><name pos:start="49:24" pos:end="49:28">frame</name></expr></argument>, <argument pos:start="49:31" pos:end="49:40"><expr pos:start="49:31" pos:end="49:40"><name pos:start="49:31" pos:end="49:40">frame_addr</name></expr></argument>, <argument pos:start="49:43" pos:end="49:43"><expr pos:start="49:43" pos:end="49:43"><literal type="number" pos:start="49:43" pos:end="49:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="51:5" pos:end="51:14">return <expr pos:start="51:12" pos:end="51:13"><name pos:start="51:12" pos:end="51:13">d0</name></expr>;</return>



<label pos:start="55:1" pos:end="55:9"><name pos:start="55:1" pos:end="55:8">badframe</name>:</label>

    <expr_stmt pos:start="57:5" pos:end="57:45"><expr pos:start="57:5" pos:end="57:44"><call pos:start="57:5" pos:end="57:44"><name pos:start="57:5" pos:end="57:22">unlock_user_struct</name><argument_list pos:start="57:23" pos:end="57:44">(<argument pos:start="57:24" pos:end="57:28"><expr pos:start="57:24" pos:end="57:28"><name pos:start="57:24" pos:end="57:28">frame</name></expr></argument>, <argument pos:start="57:31" pos:end="57:40"><expr pos:start="57:31" pos:end="57:40"><name pos:start="57:31" pos:end="57:40">frame_addr</name></expr></argument>, <argument pos:start="57:43" pos:end="57:43"><expr pos:start="57:43" pos:end="57:43"><literal type="number" pos:start="57:43" pos:end="57:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:30"><expr pos:start="59:5" pos:end="59:29"><call pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:13">force_sig</name><argument_list pos:start="59:14" pos:end="59:29">(<argument pos:start="59:15" pos:end="59:28"><expr pos:start="59:15" pos:end="59:28"><name pos:start="59:15" pos:end="59:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
