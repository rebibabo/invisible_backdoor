<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26788.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">uhci_fill_queue</name><parameter_list pos:start="1:28" pos:end="1:54">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:37">UHCIState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:49">UHCI_TD</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">td</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:5">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:21">int_mask</name> <init pos:start="5:23" pos:end="5:25">= <expr pos:start="5:25" pos:end="5:25"><literal type="number" pos:start="5:25" pos:end="5:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:18">plink</name> <init pos:start="7:20" pos:end="7:29">= <expr pos:start="7:22" pos:end="7:29"><name pos:start="7:22" pos:end="7:29"><name pos:start="7:22" pos:end="7:23">td</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:29">link</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">token</name> <init pos:start="9:20" pos:end="9:41">= <expr pos:start="9:22" pos:end="9:41"><call pos:start="9:22" pos:end="9:41"><name pos:start="9:22" pos:end="9:37">uhci_queue_token</name><argument_list pos:start="9:38" pos:end="9:41">(<argument pos:start="9:39" pos:end="9:40"><expr pos:start="9:39" pos:end="9:40"><name pos:start="9:39" pos:end="9:40">td</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">UHCI_TD</name></type> <name pos:start="11:13" pos:end="11:15">ptd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <while pos:start="17:5" pos:end="63:5">while <condition pos:start="17:11" pos:end="17:27">(<expr pos:start="17:12" pos:end="17:26"><call pos:start="17:12" pos:end="17:26"><name pos:start="17:12" pos:end="17:19">is_valid</name><argument_list pos:start="17:20" pos:end="17:26">(<argument pos:start="17:21" pos:end="17:25"><expr pos:start="17:21" pos:end="17:25"><name pos:start="17:21" pos:end="17:25">plink</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:29" pos:end="63:5">{<block_content pos:start="19:9" pos:end="61:25">

        <expr_stmt pos:start="19:9" pos:end="19:63"><expr pos:start="19:9" pos:end="19:62"><call pos:start="19:9" pos:end="19:62"><name pos:start="19:9" pos:end="19:20">pci_dma_read</name><argument_list pos:start="19:21" pos:end="19:62">(<argument pos:start="19:22" pos:end="19:28"><expr pos:start="19:22" pos:end="19:28"><operator pos:start="19:22" pos:end="19:22">&amp;</operator><name pos:start="19:23" pos:end="19:28"><name pos:start="19:23" pos:end="19:23">s</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:28">dev</name></name></expr></argument>, <argument pos:start="19:31" pos:end="19:42"><expr pos:start="19:31" pos:end="19:42"><name pos:start="19:31" pos:end="19:35">plink</name> <operator pos:start="19:37" pos:end="19:37">&amp;</operator> <operator pos:start="19:39" pos:end="19:39">~</operator><literal type="number" pos:start="19:40" pos:end="19:42">0xf</literal></expr></argument>, <argument pos:start="19:45" pos:end="19:48"><expr pos:start="19:45" pos:end="19:48"><operator pos:start="19:45" pos:end="19:45">&amp;</operator><name pos:start="19:46" pos:end="19:48">ptd</name></expr></argument>, <argument pos:start="19:51" pos:end="19:61"><expr pos:start="19:51" pos:end="19:61"><sizeof pos:start="19:51" pos:end="19:61">sizeof<argument_list pos:start="19:57" pos:end="19:61">(<argument pos:start="19:58" pos:end="19:60"><expr pos:start="19:58" pos:end="19:60"><name pos:start="19:58" pos:end="19:60">ptd</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:32"><expr pos:start="21:9" pos:end="21:31"><call pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:20">le32_to_cpus</name><argument_list pos:start="21:21" pos:end="21:31">(<argument pos:start="21:22" pos:end="21:30"><expr pos:start="21:22" pos:end="21:30"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:30"><name pos:start="21:23" pos:end="21:25">ptd</name><operator pos:start="21:26" pos:end="21:26">.</operator><name pos:start="21:27" pos:end="21:30">link</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:32"><expr pos:start="23:9" pos:end="23:31"><call pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:20">le32_to_cpus</name><argument_list pos:start="23:21" pos:end="23:31">(<argument pos:start="23:22" pos:end="23:30"><expr pos:start="23:22" pos:end="23:30"><operator pos:start="23:22" pos:end="23:22">&amp;</operator><name pos:start="23:23" pos:end="23:30"><name pos:start="23:23" pos:end="23:25">ptd</name><operator pos:start="23:26" pos:end="23:26">.</operator><name pos:start="23:27" pos:end="23:30">ctrl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:33"><expr pos:start="25:9" pos:end="25:32"><call pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:20">le32_to_cpus</name><argument_list pos:start="25:21" pos:end="25:32">(<argument pos:start="25:22" pos:end="25:31"><expr pos:start="25:22" pos:end="25:31"><operator pos:start="25:22" pos:end="25:22">&amp;</operator><name pos:start="25:23" pos:end="25:31"><name pos:start="25:23" pos:end="25:25">ptd</name><operator pos:start="25:26" pos:end="25:26">.</operator><name pos:start="25:27" pos:end="25:31">token</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:34"><expr pos:start="27:9" pos:end="27:33"><call pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:20">le32_to_cpus</name><argument_list pos:start="27:21" pos:end="27:33">(<argument pos:start="27:22" pos:end="27:32"><expr pos:start="27:22" pos:end="27:32"><operator pos:start="27:22" pos:end="27:22">&amp;</operator><name pos:start="27:23" pos:end="27:32"><name pos:start="27:23" pos:end="27:25">ptd</name><operator pos:start="27:26" pos:end="27:26">.</operator><name pos:start="27:27" pos:end="27:32">buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:41">(<expr pos:start="29:13" pos:end="29:40"><operator pos:start="29:13" pos:end="29:13">!</operator><operator pos:start="29:14" pos:end="29:14">(</operator><name pos:start="29:15" pos:end="29:22"><name pos:start="29:15" pos:end="29:17">ptd</name><operator pos:start="29:18" pos:end="29:18">.</operator><name pos:start="29:19" pos:end="29:22">ctrl</name></name> <operator pos:start="29:24" pos:end="29:24">&amp;</operator> <name pos:start="29:26" pos:end="29:39">TD_CTRL_ACTIVE</name><operator pos:start="29:40" pos:end="29:40">)</operator></expr>)</condition> <block pos:start="29:43" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:18">

            <break pos:start="31:13" pos:end="31:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:44">(<expr pos:start="35:13" pos:end="35:43"><call pos:start="35:13" pos:end="35:34"><name pos:start="35:13" pos:end="35:28">uhci_queue_token</name><argument_list pos:start="35:29" pos:end="35:34">(<argument pos:start="35:30" pos:end="35:33"><expr pos:start="35:30" pos:end="35:33"><operator pos:start="35:30" pos:end="35:30">&amp;</operator><name pos:start="35:31" pos:end="35:33">ptd</name></expr></argument>)</argument_list></call> <operator pos:start="35:36" pos:end="35:37">!=</operator> <name pos:start="35:39" pos:end="35:43">token</name></expr>)</condition> <block pos:start="35:46" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:18">

            <break pos:start="37:13" pos:end="37:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:67"><expr pos:start="41:9" pos:end="41:66"><call pos:start="41:9" pos:end="41:66"><name pos:start="41:9" pos:end="41:31">trace_usb_uhci_td_queue</name><argument_list pos:start="41:32" pos:end="41:66">(<argument pos:start="41:33" pos:end="41:44"><expr pos:start="41:33" pos:end="41:44"><name pos:start="41:33" pos:end="41:37">plink</name> <operator pos:start="41:39" pos:end="41:39">&amp;</operator> <operator pos:start="41:41" pos:end="41:41">~</operator><literal type="number" pos:start="41:42" pos:end="41:44">0xf</literal></expr></argument>, <argument pos:start="41:47" pos:end="41:54"><expr pos:start="41:47" pos:end="41:54"><name pos:start="41:47" pos:end="41:54"><name pos:start="41:47" pos:end="41:49">ptd</name><operator pos:start="41:50" pos:end="41:50">.</operator><name pos:start="41:51" pos:end="41:54">ctrl</name></name></expr></argument>, <argument pos:start="41:57" pos:end="41:65"><expr pos:start="41:57" pos:end="41:65"><name pos:start="41:57" pos:end="41:65"><name pos:start="41:57" pos:end="41:59">ptd</name><operator pos:start="41:60" pos:end="41:60">.</operator><name pos:start="41:61" pos:end="41:65">token</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:62"><expr pos:start="43:9" pos:end="43:61"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:61"><name pos:start="43:15" pos:end="43:28">uhci_handle_td</name><argument_list pos:start="43:29" pos:end="43:61">(<argument pos:start="43:30" pos:end="43:30"><expr pos:start="43:30" pos:end="43:30"><name pos:start="43:30" pos:end="43:30">s</name></expr></argument>, <argument pos:start="43:33" pos:end="43:37"><expr pos:start="43:33" pos:end="43:37"><name pos:start="43:33" pos:end="43:37">plink</name></expr></argument>, <argument pos:start="43:40" pos:end="43:43"><expr pos:start="43:40" pos:end="43:43"><operator pos:start="43:40" pos:end="43:40">&amp;</operator><name pos:start="43:41" pos:end="43:43">ptd</name></expr></argument>, <argument pos:start="43:46" pos:end="43:54"><expr pos:start="43:46" pos:end="43:54"><operator pos:start="43:46" pos:end="43:46">&amp;</operator><name pos:start="43:47" pos:end="43:54">int_mask</name></expr></argument>, <argument pos:start="43:57" pos:end="43:60"><expr pos:start="43:57" pos:end="43:60"><name pos:start="43:57" pos:end="43:60">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:40">(<expr pos:start="45:13" pos:end="45:39"><name pos:start="45:13" pos:end="45:15">ret</name> <operator pos:start="45:17" pos:end="45:18">==</operator> <name pos:start="45:20" pos:end="45:39">TD_RESULT_ASYNC_CONT</name></expr>)</condition> <block pos:start="45:42" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:18">

            <break pos:start="47:13" pos:end="47:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:45"><expr pos:start="51:9" pos:end="51:44"><call pos:start="51:9" pos:end="51:44"><name pos:start="51:9" pos:end="51:14">assert</name><argument_list pos:start="51:15" pos:end="51:44">(<argument pos:start="51:16" pos:end="51:43"><expr pos:start="51:16" pos:end="51:43"><name pos:start="51:16" pos:end="51:18">ret</name> <operator pos:start="51:20" pos:end="51:21">==</operator> <name pos:start="51:23" pos:end="51:43">TD_RESULT_ASYNC_START</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><call pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:14">assert</name><argument_list pos:start="53:15" pos:end="53:29">(<argument pos:start="53:16" pos:end="53:28"><expr pos:start="53:16" pos:end="53:28"><name pos:start="53:16" pos:end="53:23">int_mask</name> <operator pos:start="53:25" pos:end="53:26">==</operator> <literal type="number" pos:start="53:28" pos:end="53:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:35">(<expr pos:start="55:13" pos:end="55:34"><name pos:start="55:13" pos:end="55:20"><name pos:start="55:13" pos:end="55:15">ptd</name><operator pos:start="55:16" pos:end="55:16">.</operator><name pos:start="55:17" pos:end="55:20">ctrl</name></name> <operator pos:start="55:22" pos:end="55:22">&amp;</operator> <name pos:start="55:24" pos:end="55:34">TD_CTRL_SPD</name></expr>)</condition> <block pos:start="55:37" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:18">

            <break pos:start="57:13" pos:end="57:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:25"><expr pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:13">plink</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <name pos:start="61:17" pos:end="61:24"><name pos:start="61:17" pos:end="61:19">ptd</name><operator pos:start="61:20" pos:end="61:20">.</operator><name pos:start="61:21" pos:end="61:24">link</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
