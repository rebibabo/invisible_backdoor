<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/58.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:26">timer_read</name><parameter_list pos:start="1:27" pos:end="1:80">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:64"><decl pos:start="1:42" pos:end="1:64"><type pos:start="1:42" pos:end="1:64"><name pos:start="1:42" pos:end="1:59">target_phys_addr_t</name></type> <name pos:start="1:61" pos:end="1:64">addr</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:79"><decl pos:start="1:67" pos:end="1:79"><type pos:start="1:67" pos:end="1:79"><name pos:start="1:67" pos:end="1:74">unsigned</name></type> <name pos:start="1:76" pos:end="1:79">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">LM32TimerState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:14">r</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:15"><expr pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:8">addr</name> <operator pos:start="11:10" pos:end="11:12">&gt;&gt;=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">2</literal></expr>;</expr_stmt>

    <switch pos:start="13:5" pos:end="39:5">switch <condition pos:start="13:12" pos:end="13:17">(<expr pos:start="13:13" pos:end="13:16"><name pos:start="13:13" pos:end="13:16">addr</name></expr>)</condition> <block pos:start="13:19" pos:end="39:5">{<block_content pos:start="15:5" pos:end="37:14">

    <case pos:start="15:5" pos:end="15:14">case <expr pos:start="15:10" pos:end="15:13"><name pos:start="15:10" pos:end="15:13">R_SR</name></expr>:</case>

    <case pos:start="17:5" pos:end="17:14">case <expr pos:start="17:10" pos:end="17:13"><name pos:start="17:10" pos:end="17:13">R_CR</name></expr>:</case>

    <case pos:start="19:5" pos:end="19:18">case <expr pos:start="19:10" pos:end="19:17"><name pos:start="19:10" pos:end="19:17">R_PERIOD</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:9">r</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <name pos:start="21:13" pos:end="21:25"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:19">regs</name><index pos:start="21:20" pos:end="21:25">[<expr pos:start="21:21" pos:end="21:24"><name pos:start="21:21" pos:end="21:24">addr</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <case pos:start="25:5" pos:end="25:20">case <expr pos:start="25:10" pos:end="25:19"><name pos:start="25:10" pos:end="25:19">R_SNAPSHOT</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:50"><expr pos:start="27:9" pos:end="27:49"><name pos:start="27:9" pos:end="27:9">r</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <operator pos:start="27:13" pos:end="27:13">(</operator><name pos:start="27:14" pos:end="27:21">uint32_t</name><operator pos:start="27:22" pos:end="27:22">)</operator><call pos:start="27:23" pos:end="27:49"><name pos:start="27:23" pos:end="27:38">ptimer_get_count</name><argument_list pos:start="27:39" pos:end="27:49">(<argument pos:start="27:40" pos:end="27:48"><expr pos:start="27:40" pos:end="27:48"><name pos:start="27:40" pos:end="27:48"><name pos:start="27:40" pos:end="27:40">s</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:48">ptimer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <default pos:start="31:5" pos:end="31:12">default:</default>

        <expr_stmt pos:start="33:9" pos:end="35:43"><expr pos:start="33:9" pos:end="35:42"><call pos:start="33:9" pos:end="35:42"><name pos:start="33:9" pos:end="33:20">error_report</name><argument_list pos:start="33:21" pos:end="35:42">(<argument pos:start="33:22" pos:end="35:30"><expr pos:start="33:22" pos:end="35:30"><literal type="string" pos:start="33:22" pos:end="33:69">"lm32_timer: read access to unknown register 0x"</literal>

                <name pos:start="35:17" pos:end="35:30">TARGET_FMT_plx</name></expr></argument>, <argument pos:start="35:33" pos:end="35:41"><expr pos:start="35:33" pos:end="35:41"><name pos:start="35:33" pos:end="35:36">addr</name> <operator pos:start="35:38" pos:end="35:39">&lt;&lt;</operator> <literal type="number" pos:start="35:41" pos:end="35:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="43:5" pos:end="43:47"><expr pos:start="43:5" pos:end="43:46"><call pos:start="43:5" pos:end="43:46"><name pos:start="43:5" pos:end="43:32">trace_lm32_timer_memory_read</name><argument_list pos:start="43:33" pos:end="43:46">(<argument pos:start="43:34" pos:end="43:42"><expr pos:start="43:34" pos:end="43:42"><name pos:start="43:34" pos:end="43:37">addr</name> <operator pos:start="43:39" pos:end="43:40">&lt;&lt;</operator> <literal type="number" pos:start="43:42" pos:end="43:42">2</literal></expr></argument>, <argument pos:start="43:45" pos:end="43:45"><expr pos:start="43:45" pos:end="43:45"><name pos:start="43:45" pos:end="43:45">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><name pos:start="45:12" pos:end="45:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
