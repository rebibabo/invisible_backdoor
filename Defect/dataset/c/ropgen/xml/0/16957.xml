<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16957.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:29">net_tx_pkt_build_vheader</name><parameter_list pos:start="1:30" pos:end="3:40">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:36">struct</name> <name pos:start="1:38" pos:end="1:45">NetTxPkt</name></name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">pkt</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:67"><decl pos:start="1:53" pos:end="1:67"><type pos:start="1:53" pos:end="1:67"><name pos:start="1:53" pos:end="1:56">bool</name></type> <name pos:start="1:58" pos:end="1:67">tso_enable</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:20"><decl pos:start="3:5" pos:end="3:20"><type pos:start="3:5" pos:end="3:20"><name pos:start="3:5" pos:end="3:8">bool</name></type> <name pos:start="3:10" pos:end="3:20">csum_enable</name></decl></parameter>, <parameter pos:start="3:23" pos:end="3:39"><decl pos:start="3:23" pos:end="3:39"><type pos:start="3:23" pos:end="3:39"><name pos:start="3:23" pos:end="3:30">uint32_t</name></type> <name pos:start="3:32" pos:end="3:39">gso_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:5">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:18">tcp_hdr</name></name></type> <name pos:start="7:20" pos:end="7:24">l4hdr</name></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:16"><expr pos:start="9:5" pos:end="9:15"><call pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:10">assert</name><argument_list pos:start="9:11" pos:end="9:15">(<argument pos:start="9:12" pos:end="9:14"><expr pos:start="9:12" pos:end="9:14"><name pos:start="9:12" pos:end="9:14">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:43">/* csum has to be enabled if tso is. */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:39"><expr pos:start="15:5" pos:end="15:38"><call pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:38">(<argument pos:start="15:12" pos:end="15:37"><expr pos:start="15:12" pos:end="15:37"><name pos:start="15:12" pos:end="15:22">csum_enable</name> <operator pos:start="15:24" pos:end="15:25">||</operator> <operator pos:start="15:27" pos:end="15:27">!</operator><name pos:start="15:28" pos:end="15:37">tso_enable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:70"><expr pos:start="19:5" pos:end="19:69"><name pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:7">pkt</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:17">virt_hdr</name><operator pos:start="19:18" pos:end="19:18">.</operator><name pos:start="19:19" pos:end="19:26">gso_type</name></name> <operator pos:start="19:28" pos:end="19:28">=</operator> <call pos:start="19:30" pos:end="19:69"><name pos:start="19:30" pos:end="19:52">net_tx_pkt_get_gso_type</name><argument_list pos:start="19:53" pos:end="19:69">(<argument pos:start="19:54" pos:end="19:56"><expr pos:start="19:54" pos:end="19:56"><name pos:start="19:54" pos:end="19:56">pkt</name></expr></argument>, <argument pos:start="19:59" pos:end="19:68"><expr pos:start="19:59" pos:end="19:68"><name pos:start="19:59" pos:end="19:68">tso_enable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="23:5" pos:end="65:5">switch <condition pos:start="23:12" pos:end="23:61">(<expr pos:start="23:13" pos:end="23:60"><name pos:start="23:13" pos:end="23:34"><name pos:start="23:13" pos:end="23:15">pkt</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:25">virt_hdr</name><operator pos:start="23:26" pos:end="23:26">.</operator><name pos:start="23:27" pos:end="23:34">gso_type</name></name> <operator pos:start="23:36" pos:end="23:36">&amp;</operator> <operator pos:start="23:38" pos:end="23:38">~</operator><name pos:start="23:39" pos:end="23:60">VIRTIO_NET_HDR_GSO_ECN</name></expr>)</condition> <block pos:start="23:63" pos:end="65:5">{<block_content pos:start="25:5" pos:end="63:31">

    <case pos:start="25:5" pos:end="25:33">case <expr pos:start="25:10" pos:end="25:32"><name pos:start="25:10" pos:end="25:32">VIRTIO_NET_HDR_GSO_NONE</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:34"><expr pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:11">pkt</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:21">virt_hdr</name><operator pos:start="27:22" pos:end="27:22">.</operator><name pos:start="27:23" pos:end="27:29">hdr_len</name></name> <operator pos:start="27:31" pos:end="27:31">=</operator> <literal type="number" pos:start="27:33" pos:end="27:33">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:35"><expr pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:11">pkt</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:21">virt_hdr</name><operator pos:start="29:22" pos:end="29:22">.</operator><name pos:start="29:23" pos:end="29:30">gso_size</name></name> <operator pos:start="29:32" pos:end="29:32">=</operator> <literal type="number" pos:start="29:34" pos:end="29:34">0</literal></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>



    <case pos:start="35:5" pos:end="35:32">case <expr pos:start="35:10" pos:end="35:31"><name pos:start="35:10" pos:end="35:31">VIRTIO_NET_HDR_GSO_UDP</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:62"><expr pos:start="37:9" pos:end="37:61"><name pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:11">pkt</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:21">virt_hdr</name><operator pos:start="37:22" pos:end="37:22">.</operator><name pos:start="37:23" pos:end="37:30">gso_size</name></name> <operator pos:start="37:32" pos:end="37:32">=</operator> <call pos:start="37:34" pos:end="37:61"><name pos:start="37:34" pos:end="37:51">IP_FRAG_ALIGN_SIZE</name><argument_list pos:start="37:52" pos:end="37:61">(<argument pos:start="37:53" pos:end="37:60"><expr pos:start="37:53" pos:end="37:60"><name pos:start="37:53" pos:end="37:60">gso_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:73"><expr pos:start="39:9" pos:end="39:72"><name pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:11">pkt</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:21">virt_hdr</name><operator pos:start="39:22" pos:end="39:22">.</operator><name pos:start="39:23" pos:end="39:29">hdr_len</name></name> <operator pos:start="39:31" pos:end="39:31">=</operator> <name pos:start="39:33" pos:end="39:44"><name pos:start="39:33" pos:end="39:35">pkt</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:44">hdr_len</name></name> <operator pos:start="39:46" pos:end="39:46">+</operator> <sizeof pos:start="39:48" pos:end="39:72">sizeof<argument_list pos:start="39:54" pos:end="39:72">(<argument pos:start="39:55" pos:end="39:71"><expr pos:start="39:55" pos:end="39:71">struct <name pos:start="39:62" pos:end="39:71">udp_header</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>



    <case pos:start="45:5" pos:end="45:34">case <expr pos:start="45:10" pos:end="45:33"><name pos:start="45:10" pos:end="45:33">VIRTIO_NET_HDR_GSO_TCPV4</name></expr>:</case>

    <case pos:start="47:5" pos:end="47:34">case <expr pos:start="47:10" pos:end="47:33"><name pos:start="47:10" pos:end="47:33">VIRTIO_NET_HDR_GSO_TCPV6</name></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="51:45"><expr pos:start="49:9" pos:end="51:44"><call pos:start="49:9" pos:end="51:44"><name pos:start="49:9" pos:end="49:18">iov_to_buf</name><argument_list pos:start="49:19" pos:end="51:44">(<argument pos:start="49:20" pos:end="49:54"><expr pos:start="49:20" pos:end="49:54"><operator pos:start="49:20" pos:end="49:20">&amp;</operator><name pos:start="49:21" pos:end="49:54"><name pos:start="49:21" pos:end="49:23">pkt</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:28">vec</name><index pos:start="49:29" pos:end="49:54">[<expr pos:start="49:30" pos:end="49:53"><name pos:start="49:30" pos:end="49:53">NET_TX_PKT_PL_START_FRAG</name></expr>]</index></name></expr></argument>, <argument pos:start="49:57" pos:end="49:74"><expr pos:start="49:57" pos:end="49:74"><name pos:start="49:57" pos:end="49:74"><name pos:start="49:57" pos:end="49:59">pkt</name><operator pos:start="49:60" pos:end="49:61">-&gt;</operator><name pos:start="49:62" pos:end="49:74">payload_frags</name></name></expr></argument>,

                   <argument pos:start="51:20" pos:end="51:20"><expr pos:start="51:20" pos:end="51:20"><literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr></argument>, <argument pos:start="51:23" pos:end="51:28"><expr pos:start="51:23" pos:end="51:28"><operator pos:start="51:23" pos:end="51:23">&amp;</operator><name pos:start="51:24" pos:end="51:28">l4hdr</name></expr></argument>, <argument pos:start="51:31" pos:end="51:43"><expr pos:start="51:31" pos:end="51:43"><sizeof pos:start="51:31" pos:end="51:43">sizeof<argument_list pos:start="51:37" pos:end="51:43">(<argument pos:start="51:38" pos:end="51:42"><expr pos:start="51:38" pos:end="51:42"><name pos:start="51:38" pos:end="51:42">l4hdr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:79"><expr pos:start="53:9" pos:end="53:78"><name pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:11">pkt</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:21">virt_hdr</name><operator pos:start="53:22" pos:end="53:22">.</operator><name pos:start="53:23" pos:end="53:29">hdr_len</name></name> <operator pos:start="53:31" pos:end="53:31">=</operator> <name pos:start="53:33" pos:end="53:44"><name pos:start="53:33" pos:end="53:35">pkt</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:44">hdr_len</name></name> <operator pos:start="53:46" pos:end="53:46">+</operator> <name pos:start="53:48" pos:end="53:59"><name pos:start="53:48" pos:end="53:52">l4hdr</name><operator pos:start="53:53" pos:end="53:53">.</operator><name pos:start="53:54" pos:end="53:59">th_off</name></name> <operator pos:start="53:61" pos:end="53:61">*</operator> <sizeof pos:start="53:63" pos:end="53:78">sizeof<argument_list pos:start="53:69" pos:end="53:78">(<argument pos:start="53:70" pos:end="53:77"><expr pos:start="53:70" pos:end="53:77"><name pos:start="53:70" pos:end="53:77">uint32_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:62"><expr pos:start="55:9" pos:end="55:61"><name pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:11">pkt</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:21">virt_hdr</name><operator pos:start="55:22" pos:end="55:22">.</operator><name pos:start="55:23" pos:end="55:30">gso_size</name></name> <operator pos:start="55:32" pos:end="55:32">=</operator> <call pos:start="55:34" pos:end="55:61"><name pos:start="55:34" pos:end="55:51">IP_FRAG_ALIGN_SIZE</name><argument_list pos:start="55:52" pos:end="55:61">(<argument pos:start="55:53" pos:end="55:60"><expr pos:start="55:53" pos:end="55:60"><name pos:start="55:53" pos:end="55:60">gso_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>



    <default pos:start="61:5" pos:end="61:12">default:</default>

        <expr_stmt pos:start="63:9" pos:end="63:31"><expr pos:start="63:9" pos:end="63:30"><call pos:start="63:9" pos:end="63:30"><name pos:start="63:9" pos:end="63:28">g_assert_not_reached</name><argument_list pos:start="63:29" pos:end="63:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <if_stmt pos:start="69:5" pos:end="99:5"><if pos:start="69:5" pos:end="99:5">if <condition pos:start="69:8" pos:end="69:20">(<expr pos:start="69:9" pos:end="69:19"><name pos:start="69:9" pos:end="69:19">csum_enable</name></expr>)</condition> <block pos:start="69:22" pos:end="99:5">{<block_content pos:start="71:9" pos:end="97:9">

        <switch pos:start="71:9" pos:end="97:9">switch <condition pos:start="71:16" pos:end="71:29">(<expr pos:start="71:17" pos:end="71:28"><name pos:start="71:17" pos:end="71:28"><name pos:start="71:17" pos:end="71:19">pkt</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:28">l4proto</name></name></expr>)</condition> <block pos:start="71:31" pos:end="97:9">{<block_content pos:start="73:9" pos:end="95:18">

        <case pos:start="73:9" pos:end="73:26">case <expr pos:start="73:14" pos:end="73:25"><name pos:start="73:14" pos:end="73:25">IP_PROTO_TCP</name></expr>:</case>

            <expr_stmt pos:start="75:13" pos:end="75:62"><expr pos:start="75:13" pos:end="75:61"><name pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:15">pkt</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:25">virt_hdr</name><operator pos:start="75:26" pos:end="75:26">.</operator><name pos:start="75:27" pos:end="75:31">flags</name></name> <operator pos:start="75:33" pos:end="75:33">=</operator> <name pos:start="75:35" pos:end="75:61">VIRTIO_NET_HDR_F_NEEDS_CSUM</name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:52"><expr pos:start="77:13" pos:end="77:51"><name pos:start="77:13" pos:end="77:36"><name pos:start="77:13" pos:end="77:15">pkt</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:25">virt_hdr</name><operator pos:start="77:26" pos:end="77:26">.</operator><name pos:start="77:27" pos:end="77:36">csum_start</name></name> <operator pos:start="77:38" pos:end="77:38">=</operator> <name pos:start="77:40" pos:end="77:51"><name pos:start="77:40" pos:end="77:42">pkt</name><operator pos:start="77:43" pos:end="77:44">-&gt;</operator><name pos:start="77:45" pos:end="77:51">hdr_len</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:73"><expr pos:start="79:13" pos:end="79:72"><name pos:start="79:13" pos:end="79:37"><name pos:start="79:13" pos:end="79:15">pkt</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:25">virt_hdr</name><operator pos:start="79:26" pos:end="79:26">.</operator><name pos:start="79:27" pos:end="79:37">csum_offset</name></name> <operator pos:start="79:39" pos:end="79:39">=</operator> <call pos:start="79:41" pos:end="79:72"><name pos:start="79:41" pos:end="79:48">offsetof</name><argument_list pos:start="79:49" pos:end="79:72">(<argument pos:start="79:50" pos:end="79:63"><expr pos:start="79:50" pos:end="79:63">struct <name pos:start="79:57" pos:end="79:63">tcp_hdr</name></expr></argument>, <argument pos:start="79:66" pos:end="79:71"><expr pos:start="79:66" pos:end="79:71"><name pos:start="79:66" pos:end="79:71">th_sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="81:13" pos:end="81:18">break;</break>

        <case pos:start="83:9" pos:end="83:26">case <expr pos:start="83:14" pos:end="83:25"><name pos:start="83:14" pos:end="83:25">IP_PROTO_UDP</name></expr>:</case>

            <expr_stmt pos:start="85:13" pos:end="85:62"><expr pos:start="85:13" pos:end="85:61"><name pos:start="85:13" pos:end="85:31"><name pos:start="85:13" pos:end="85:15">pkt</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:25">virt_hdr</name><operator pos:start="85:26" pos:end="85:26">.</operator><name pos:start="85:27" pos:end="85:31">flags</name></name> <operator pos:start="85:33" pos:end="85:33">=</operator> <name pos:start="85:35" pos:end="85:61">VIRTIO_NET_HDR_F_NEEDS_CSUM</name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:52"><expr pos:start="87:13" pos:end="87:51"><name pos:start="87:13" pos:end="87:36"><name pos:start="87:13" pos:end="87:15">pkt</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:25">virt_hdr</name><operator pos:start="87:26" pos:end="87:26">.</operator><name pos:start="87:27" pos:end="87:36">csum_start</name></name> <operator pos:start="87:38" pos:end="87:38">=</operator> <name pos:start="87:40" pos:end="87:51"><name pos:start="87:40" pos:end="87:42">pkt</name><operator pos:start="87:43" pos:end="87:44">-&gt;</operator><name pos:start="87:45" pos:end="87:51">hdr_len</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:73"><expr pos:start="89:13" pos:end="89:72"><name pos:start="89:13" pos:end="89:37"><name pos:start="89:13" pos:end="89:15">pkt</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:25">virt_hdr</name><operator pos:start="89:26" pos:end="89:26">.</operator><name pos:start="89:27" pos:end="89:37">csum_offset</name></name> <operator pos:start="89:39" pos:end="89:39">=</operator> <call pos:start="89:41" pos:end="89:72"><name pos:start="89:41" pos:end="89:48">offsetof</name><argument_list pos:start="89:49" pos:end="89:72">(<argument pos:start="89:50" pos:end="89:63"><expr pos:start="89:50" pos:end="89:63">struct <name pos:start="89:57" pos:end="89:63">udp_hdr</name></expr></argument>, <argument pos:start="89:66" pos:end="89:71"><expr pos:start="89:66" pos:end="89:71"><name pos:start="89:66" pos:end="89:71">uh_sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="91:13" pos:end="91:18">break;</break>

        <default pos:start="93:9" pos:end="93:16">default:</default>

            <break pos:start="95:13" pos:end="95:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
