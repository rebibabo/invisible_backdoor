<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6256.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">bdrv_aio_multiwrite</name><parameter_list pos:start="1:24" pos:end="1:79">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:40">BlockDriverState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">bs</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><name pos:start="1:47" pos:end="1:58">BlockRequest</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">reqs</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:78"><decl pos:start="1:67" pos:end="1:78"><type pos:start="1:67" pos:end="1:78"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:78">num_reqs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:13">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">MultiwriteCB</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">mcb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:55">/* don't submit writes if we don't have a medium */</comment>

    <if_stmt pos:start="13:5" pos:end="23:5"><if pos:start="13:5" pos:end="23:5">if <condition pos:start="13:8" pos:end="13:24">(<expr pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:10">bs</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:15">drv</name></name> <operator pos:start="13:17" pos:end="13:18">==</operator> <name pos:start="13:20" pos:end="13:23">NULL</name></expr>)</condition> <block pos:start="13:26" pos:end="23:5">{<block_content pos:start="15:9" pos:end="21:18">

        <for pos:start="15:9" pos:end="19:9">for <control pos:start="15:13" pos:end="15:38">(<init pos:start="15:14" pos:end="15:19"><expr pos:start="15:14" pos:end="15:18"><name pos:start="15:14" pos:end="15:14">i</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>;</init> <condition pos:start="15:21" pos:end="15:33"><expr pos:start="15:21" pos:end="15:32"><name pos:start="15:21" pos:end="15:21">i</name> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <name pos:start="15:25" pos:end="15:32">num_reqs</name></expr>;</condition> <incr pos:start="15:35" pos:end="15:37"><expr pos:start="15:35" pos:end="15:37"><name pos:start="15:35" pos:end="15:35">i</name><operator pos:start="15:36" pos:end="15:37">++</operator></expr></incr>)</control> <block pos:start="15:40" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:39">

            <expr_stmt pos:start="17:13" pos:end="17:39"><expr pos:start="17:13" pos:end="17:38"><name pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:16">reqs</name><index pos:start="17:17" pos:end="17:19">[<expr pos:start="17:18" pos:end="17:18"><name pos:start="17:18" pos:end="17:18">i</name></expr>]</index></name><operator pos:start="17:20" pos:end="17:20">.</operator><name pos:start="17:21" pos:end="17:25">error</name> <operator pos:start="17:27" pos:end="17:27">=</operator> <operator pos:start="17:29" pos:end="17:29">-</operator><name pos:start="17:30" pos:end="17:38">ENOMEDIUM</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:22">(<expr pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:16">num_reqs</name> <operator pos:start="27:18" pos:end="27:19">==</operator> <literal type="number" pos:start="27:21" pos:end="27:21">0</literal></expr>)</condition> <block pos:start="27:24" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:17">

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="35:5" pos:end="35:36">// Create MultiwriteCB structure</comment>

    <expr_stmt pos:start="37:5" pos:end="37:71"><expr pos:start="37:5" pos:end="37:70"><name pos:start="37:5" pos:end="37:7">mcb</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:70"><name pos:start="37:11" pos:end="37:19">g_malloc0</name><argument_list pos:start="37:20" pos:end="37:70">(<argument pos:start="37:21" pos:end="37:69"><expr pos:start="37:21" pos:end="37:69"><sizeof pos:start="37:21" pos:end="37:32">sizeof<argument_list pos:start="37:27" pos:end="37:32">(<argument pos:start="37:28" pos:end="37:31"><expr pos:start="37:28" pos:end="37:31"><operator pos:start="37:28" pos:end="37:28">*</operator><name pos:start="37:29" pos:end="37:31">mcb</name></expr></argument>)</argument_list></sizeof> <operator pos:start="37:34" pos:end="37:34">+</operator> <name pos:start="37:36" pos:end="37:43">num_reqs</name> <operator pos:start="37:45" pos:end="37:45">*</operator> <sizeof pos:start="37:47" pos:end="37:69">sizeof<argument_list pos:start="37:53" pos:end="37:69">(<argument pos:start="37:54" pos:end="37:68"><expr pos:start="37:54" pos:end="37:68"><operator pos:start="37:54" pos:end="37:54">*</operator><name pos:start="37:55" pos:end="37:68"><name pos:start="37:55" pos:end="37:57">mcb</name><operator pos:start="37:58" pos:end="37:59">-&gt;</operator><name pos:start="37:60" pos:end="37:68">callbacks</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:26"><expr pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:7">mcb</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:21">num_requests</name></name> <operator pos:start="39:23" pos:end="39:23">=</operator> <literal type="number" pos:start="39:25" pos:end="39:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:7">mcb</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:22">num_callbacks</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <name pos:start="41:26" pos:end="41:33">num_reqs</name></expr>;</expr_stmt>



    <for pos:start="45:5" pos:end="51:5">for <control pos:start="45:9" pos:end="45:34">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:29"><expr pos:start="45:17" pos:end="45:28"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <name pos:start="45:21" pos:end="45:28">num_reqs</name></expr>;</condition> <incr pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:31">i</name><operator pos:start="45:32" pos:end="45:33">++</operator></expr></incr>)</control> <block pos:start="45:36" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:50">

        <expr_stmt pos:start="47:9" pos:end="47:42"><expr pos:start="47:9" pos:end="47:41"><name pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:11">mcb</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:22">callbacks</name><index pos:start="47:23" pos:end="47:25">[<expr pos:start="47:24" pos:end="47:24"><name pos:start="47:24" pos:end="47:24">i</name></expr>]</index></name><operator pos:start="47:26" pos:end="47:26">.</operator><name pos:start="47:27" pos:end="47:28">cb</name> <operator pos:start="47:30" pos:end="47:30">=</operator> <name pos:start="47:32" pos:end="47:38"><name pos:start="47:32" pos:end="47:35">reqs</name><index pos:start="47:36" pos:end="47:38">[<expr pos:start="47:37" pos:end="47:37"><name pos:start="47:37" pos:end="47:37">i</name></expr>]</index></name><operator pos:start="47:39" pos:end="47:39">.</operator><name pos:start="47:40" pos:end="47:41">cb</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:50"><expr pos:start="49:9" pos:end="49:49"><name pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:11">mcb</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:22">callbacks</name><index pos:start="49:23" pos:end="49:25">[<expr pos:start="49:24" pos:end="49:24"><name pos:start="49:24" pos:end="49:24">i</name></expr>]</index></name><operator pos:start="49:26" pos:end="49:26">.</operator><name pos:start="49:27" pos:end="49:32">opaque</name> <operator pos:start="49:34" pos:end="49:34">=</operator> <name pos:start="49:36" pos:end="49:42"><name pos:start="49:36" pos:end="49:39">reqs</name><index pos:start="49:40" pos:end="49:42">[<expr pos:start="49:41" pos:end="49:41"><name pos:start="49:41" pos:end="49:41">i</name></expr>]</index></name><operator pos:start="49:43" pos:end="49:43">.</operator><name pos:start="49:44" pos:end="49:49">opaque</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="line" pos:start="55:5" pos:end="55:34">// Check for mergable requests</comment>

    <expr_stmt pos:start="57:5" pos:end="57:57"><expr pos:start="57:5" pos:end="57:56"><name pos:start="57:5" pos:end="57:12">num_reqs</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <call pos:start="57:16" pos:end="57:56"><name pos:start="57:16" pos:end="57:31">multiwrite_merge</name><argument_list pos:start="57:32" pos:end="57:56">(<argument pos:start="57:33" pos:end="57:34"><expr pos:start="57:33" pos:end="57:34"><name pos:start="57:33" pos:end="57:34">bs</name></expr></argument>, <argument pos:start="57:37" pos:end="57:40"><expr pos:start="57:37" pos:end="57:40"><name pos:start="57:37" pos:end="57:40">reqs</name></expr></argument>, <argument pos:start="57:43" pos:end="57:50"><expr pos:start="57:43" pos:end="57:50"><name pos:start="57:43" pos:end="57:50">num_reqs</name></expr></argument>, <argument pos:start="57:53" pos:end="57:55"><expr pos:start="57:53" pos:end="57:55"><name pos:start="57:53" pos:end="57:55">mcb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:65"><expr pos:start="61:5" pos:end="61:64"><call pos:start="61:5" pos:end="61:64"><name pos:start="61:5" pos:end="61:29">trace_bdrv_aio_multiwrite</name><argument_list pos:start="61:30" pos:end="61:64">(<argument pos:start="61:31" pos:end="61:33"><expr pos:start="61:31" pos:end="61:33"><name pos:start="61:31" pos:end="61:33">mcb</name></expr></argument>, <argument pos:start="61:36" pos:end="61:53"><expr pos:start="61:36" pos:end="61:53"><name pos:start="61:36" pos:end="61:53"><name pos:start="61:36" pos:end="61:38">mcb</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:53">num_callbacks</name></name></expr></argument>, <argument pos:start="61:56" pos:end="61:63"><expr pos:start="61:56" pos:end="61:63"><name pos:start="61:56" pos:end="61:63">num_reqs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:31">/* Run the aio requests. */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:33"><expr pos:start="67:5" pos:end="67:32"><name pos:start="67:5" pos:end="67:21"><name pos:start="67:5" pos:end="67:7">mcb</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:21">num_requests</name></name> <operator pos:start="67:23" pos:end="67:23">=</operator> <name pos:start="67:25" pos:end="67:32">num_reqs</name></expr>;</expr_stmt>

    <for pos:start="69:5" pos:end="79:5">for <control pos:start="69:9" pos:end="69:34">(<init pos:start="69:10" pos:end="69:15"><expr pos:start="69:10" pos:end="69:14"><name pos:start="69:10" pos:end="69:10">i</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <literal type="number" pos:start="69:14" pos:end="69:14">0</literal></expr>;</init> <condition pos:start="69:17" pos:end="69:29"><expr pos:start="69:17" pos:end="69:28"><name pos:start="69:17" pos:end="69:17">i</name> <operator pos:start="69:19" pos:end="69:19">&lt;</operator> <name pos:start="69:21" pos:end="69:28">num_reqs</name></expr>;</condition> <incr pos:start="69:31" pos:end="69:33"><expr pos:start="69:31" pos:end="69:33"><name pos:start="69:31" pos:end="69:31">i</name><operator pos:start="69:32" pos:end="69:33">++</operator></expr></incr>)</control> <block pos:start="69:36" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:36">

        <expr_stmt pos:start="71:9" pos:end="77:36"><expr pos:start="71:9" pos:end="77:35"><call pos:start="71:9" pos:end="77:35"><name pos:start="71:9" pos:end="71:29">bdrv_co_aio_rw_vector</name><argument_list pos:start="71:30" pos:end="77:35">(<argument pos:start="71:31" pos:end="71:32"><expr pos:start="71:31" pos:end="71:32"><name pos:start="71:31" pos:end="71:32">bs</name></expr></argument>, <argument pos:start="71:35" pos:end="71:48"><expr pos:start="71:35" pos:end="71:48"><name pos:start="71:35" pos:end="71:41"><name pos:start="71:35" pos:end="71:38">reqs</name><index pos:start="71:39" pos:end="71:41">[<expr pos:start="71:40" pos:end="71:40"><name pos:start="71:40" pos:end="71:40">i</name></expr>]</index></name><operator pos:start="71:42" pos:end="71:42">.</operator><name pos:start="71:43" pos:end="71:48">sector</name></expr></argument>, <argument pos:start="71:51" pos:end="71:62"><expr pos:start="71:51" pos:end="71:62"><name pos:start="71:51" pos:end="71:57"><name pos:start="71:51" pos:end="71:54">reqs</name><index pos:start="71:55" pos:end="71:57">[<expr pos:start="71:56" pos:end="71:56"><name pos:start="71:56" pos:end="71:56">i</name></expr>]</index></name><operator pos:start="71:58" pos:end="71:58">.</operator><name pos:start="71:59" pos:end="71:62">qiov</name></expr></argument>,

                              <argument pos:start="73:31" pos:end="73:48"><expr pos:start="73:31" pos:end="73:48"><name pos:start="73:31" pos:end="73:37"><name pos:start="73:31" pos:end="73:34">reqs</name><index pos:start="73:35" pos:end="73:37">[<expr pos:start="73:36" pos:end="73:36"><name pos:start="73:36" pos:end="73:36">i</name></expr>]</index></name><operator pos:start="73:38" pos:end="73:38">.</operator><name pos:start="73:39" pos:end="73:48">nb_sectors</name></expr></argument>, <argument pos:start="73:51" pos:end="73:63"><expr pos:start="73:51" pos:end="73:63"><name pos:start="73:51" pos:end="73:57"><name pos:start="73:51" pos:end="73:54">reqs</name><index pos:start="73:55" pos:end="73:57">[<expr pos:start="73:56" pos:end="73:56"><name pos:start="73:56" pos:end="73:56">i</name></expr>]</index></name><operator pos:start="73:58" pos:end="73:58">.</operator><name pos:start="73:59" pos:end="73:63">flags</name></expr></argument>,

                              <argument pos:start="75:31" pos:end="75:43"><expr pos:start="75:31" pos:end="75:43"><name pos:start="75:31" pos:end="75:43">multiwrite_cb</name></expr></argument>, <argument pos:start="75:46" pos:end="75:48"><expr pos:start="75:46" pos:end="75:48"><name pos:start="75:46" pos:end="75:48">mcb</name></expr></argument>,

                              <argument pos:start="77:31" pos:end="77:34"><expr pos:start="77:31" pos:end="77:34"><name pos:start="77:31" pos:end="77:34">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
