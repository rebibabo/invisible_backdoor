<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18092.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:12">void</name></type> <name pos:start="1:14" pos:end="1:32">ff_cavsdsp_init_x86</name><parameter_list pos:start="1:33" pos:end="1:74">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:47">CAVSDSPContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">c</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:73"><decl pos:start="1:53" pos:end="1:73"><type pos:start="1:53" pos:end="1:73"><name pos:start="1:53" pos:end="1:66">AVCodecContext</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:73">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="58:0">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">cpu_flags</name> <init pos:start="5:19" pos:end="5:38">= <expr pos:start="5:21" pos:end="5:38"><call pos:start="5:21" pos:end="5:38"><name pos:start="5:21" pos:end="5:36">av_get_cpu_flags</name><argument_list pos:start="5:37" pos:end="5:38">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="12:0"><expr pos:start="9:5" pos:end="9:30"><call pos:start="9:5" pos:end="9:30"><name pos:start="9:5" pos:end="9:20">cavsdsp_init_mmx</name><argument_list pos:start="9:21" pos:end="9:30">(<argument pos:start="9:22" pos:end="9:22"><expr pos:start="9:22" pos:end="9:22"><name pos:start="9:22" pos:end="9:22">c</name></expr></argument>, <argument pos:start="9:25" pos:end="9:29"><expr pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:29">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="11:1" pos:end="11:24">#<cpp:directive pos:start="11:2" pos:end="11:3">if</cpp:directive> <expr pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:24">HAVE_AMD3DNOW_INLINE</name></expr></cpp:if>

    <if_stmt pos:start="13:5" pos:end="20:0"><if pos:start="13:5" pos:end="20:0">if <condition pos:start="13:8" pos:end="13:35">(<expr pos:start="13:9" pos:end="13:34"><call pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:23">INLINE_AMD3DNOW</name><argument_list pos:start="13:24" pos:end="13:34">(<argument pos:start="13:25" pos:end="13:33"><expr pos:start="13:25" pos:end="13:33"><name pos:start="13:25" pos:end="13:33">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="20:0"><block_content pos:start="15:9" pos:end="20:0">

        <expr_stmt pos:start="15:9" pos:end="20:0"><expr pos:start="15:9" pos:end="15:36"><call pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:26">cavsdsp_init_3dnow</name><argument_list pos:start="15:27" pos:end="15:36">(<argument pos:start="15:28" pos:end="15:28"><expr pos:start="15:28" pos:end="15:28"><name pos:start="15:28" pos:end="15:28">c</name></expr></argument>, <argument pos:start="15:31" pos:end="15:35"><expr pos:start="15:31" pos:end="15:35"><name pos:start="15:31" pos:end="15:35">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="17:8" pos:end="17:33">/* HAVE_AMD3DNOW_INLINE */</comment>

<cpp:if pos:start="19:1" pos:end="19:22">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:22">HAVE_MMXEXT_INLINE</name></expr></cpp:if>

    <if_stmt pos:start="21:5" pos:end="36:0"><if pos:start="21:5" pos:end="36:0">if <condition pos:start="21:8" pos:end="21:33">(<expr pos:start="21:9" pos:end="21:32"><call pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:21">INLINE_MMXEXT</name><argument_list pos:start="21:22" pos:end="21:32">(<argument pos:start="21:23" pos:end="21:31"><expr pos:start="21:23" pos:end="21:31"><name pos:start="21:23" pos:end="21:31">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:35" pos:end="36:0">{<block_content pos:start="23:9" pos:end="29:36">

        <expr_stmt pos:start="23:9" pos:end="23:36"><expr pos:start="23:9" pos:end="23:35"><call pos:start="23:9" pos:end="23:35"><name pos:start="23:9" pos:end="23:15">DSPFUNC</name><argument_list pos:start="23:16" pos:end="23:35">(<argument pos:start="23:17" pos:end="23:19"><expr pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:19">put</name></expr></argument>, <argument pos:start="23:22" pos:end="23:22"><expr pos:start="23:22" pos:end="23:22"><literal type="number" pos:start="23:22" pos:end="23:22">0</literal></expr></argument>, <argument pos:start="23:25" pos:end="23:26"><expr pos:start="23:25" pos:end="23:26"><literal type="number" pos:start="23:25" pos:end="23:26">16</literal></expr></argument>, <argument pos:start="23:29" pos:end="23:34"><expr pos:start="23:29" pos:end="23:34"><name pos:start="23:29" pos:end="23:34">mmxext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:36"><expr pos:start="25:9" pos:end="25:35"><call pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:15">DSPFUNC</name><argument_list pos:start="25:16" pos:end="25:35">(<argument pos:start="25:17" pos:end="25:19"><expr pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:19">put</name></expr></argument>, <argument pos:start="25:22" pos:end="25:22"><expr pos:start="25:22" pos:end="25:22"><literal type="number" pos:start="25:22" pos:end="25:22">1</literal></expr></argument>,  <argument pos:start="25:26" pos:end="25:26"><expr pos:start="25:26" pos:end="25:26"><literal type="number" pos:start="25:26" pos:end="25:26">8</literal></expr></argument>, <argument pos:start="25:29" pos:end="25:34"><expr pos:start="25:29" pos:end="25:34"><name pos:start="25:29" pos:end="25:34">mmxext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:36"><expr pos:start="27:9" pos:end="27:35"><call pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:15">DSPFUNC</name><argument_list pos:start="27:16" pos:end="27:35">(<argument pos:start="27:17" pos:end="27:19"><expr pos:start="27:17" pos:end="27:19"><name pos:start="27:17" pos:end="27:19">avg</name></expr></argument>, <argument pos:start="27:22" pos:end="27:22"><expr pos:start="27:22" pos:end="27:22"><literal type="number" pos:start="27:22" pos:end="27:22">0</literal></expr></argument>, <argument pos:start="27:25" pos:end="27:26"><expr pos:start="27:25" pos:end="27:26"><literal type="number" pos:start="27:25" pos:end="27:26">16</literal></expr></argument>, <argument pos:start="27:29" pos:end="27:34"><expr pos:start="27:29" pos:end="27:34"><name pos:start="27:29" pos:end="27:34">mmxext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:36"><expr pos:start="29:9" pos:end="29:35"><call pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:15">DSPFUNC</name><argument_list pos:start="29:16" pos:end="29:35">(<argument pos:start="29:17" pos:end="29:19"><expr pos:start="29:17" pos:end="29:19"><name pos:start="29:17" pos:end="29:19">avg</name></expr></argument>, <argument pos:start="29:22" pos:end="29:22"><expr pos:start="29:22" pos:end="29:22"><literal type="number" pos:start="29:22" pos:end="29:22">1</literal></expr></argument>,  <argument pos:start="29:26" pos:end="29:26"><expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">8</literal></expr></argument>, <argument pos:start="29:29" pos:end="29:34"><expr pos:start="29:29" pos:end="29:34"><name pos:start="29:29" pos:end="29:34">mmxext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="33:1" pos:end="33:6">#<cpp:directive pos:start="33:2" pos:end="33:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="35:1" pos:end="35:21">#<cpp:directive pos:start="35:2" pos:end="35:3">if</cpp:directive> <expr pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:21">HAVE_MMX_EXTERNAL</name></expr></cpp:if>

    <if_stmt pos:start="37:5" pos:end="48:0"><if pos:start="37:5" pos:end="48:0">if <condition pos:start="37:8" pos:end="37:35">(<expr pos:start="37:9" pos:end="37:34"><call pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:23">EXTERNAL_MMXEXT</name><argument_list pos:start="37:24" pos:end="37:34">(<argument pos:start="37:25" pos:end="37:33"><expr pos:start="37:25" pos:end="37:33"><name pos:start="37:25" pos:end="37:33">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:37" pos:end="48:0">{<block_content pos:start="39:9" pos:end="41:71">

        <expr_stmt pos:start="39:9" pos:end="39:72"><expr pos:start="39:9" pos:end="39:71"><name pos:start="39:9" pos:end="39:41"><name pos:start="39:9" pos:end="39:9">c</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:35">avg_cavs_qpel_pixels_tab</name><index pos:start="39:36" pos:end="39:38">[<expr pos:start="39:37" pos:end="39:37"><literal type="number" pos:start="39:37" pos:end="39:37">0</literal></expr>]</index><index pos:start="39:39" pos:end="39:41">[<expr pos:start="39:40" pos:end="39:40"><literal type="number" pos:start="39:40" pos:end="39:40">0</literal></expr>]</index></name> <operator pos:start="39:43" pos:end="39:43">=</operator> <name pos:start="39:45" pos:end="39:71">avg_cavs_qpel16_mc00_mmxext</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:71"><expr pos:start="41:9" pos:end="41:70"><name pos:start="41:9" pos:end="41:41"><name pos:start="41:9" pos:end="41:9">c</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:35">avg_cavs_qpel_pixels_tab</name><index pos:start="41:36" pos:end="41:38">[<expr pos:start="41:37" pos:end="41:37"><literal type="number" pos:start="41:37" pos:end="41:37">1</literal></expr>]</index><index pos:start="41:39" pos:end="41:41">[<expr pos:start="41:40" pos:end="41:40"><literal type="number" pos:start="41:40" pos:end="41:40">0</literal></expr>]</index></name> <operator pos:start="41:43" pos:end="41:43">=</operator> <name pos:start="41:45" pos:end="41:70">avg_cavs_qpel8_mc00_mmxext</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="47:1" pos:end="47:22">#<cpp:directive pos:start="47:2" pos:end="47:3">if</cpp:directive> <expr pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:22">HAVE_SSE2_EXTERNAL</name></expr></cpp:if>

    <if_stmt pos:start="49:5" pos:end="58:0"><if pos:start="49:5" pos:end="58:0">if <condition pos:start="49:8" pos:end="49:33">(<expr pos:start="49:9" pos:end="49:32"><call pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:21">EXTERNAL_SSE2</name><argument_list pos:start="49:22" pos:end="49:32">(<argument pos:start="49:23" pos:end="49:31"><expr pos:start="49:23" pos:end="49:31"><name pos:start="49:23" pos:end="49:31">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:35" pos:end="58:0">{<block_content pos:start="51:9" pos:end="53:70">

        <expr_stmt pos:start="51:9" pos:end="51:70"><expr pos:start="51:9" pos:end="51:69"><name pos:start="51:9" pos:end="51:41"><name pos:start="51:9" pos:end="51:9">c</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:35">put_cavs_qpel_pixels_tab</name><index pos:start="51:36" pos:end="51:38">[<expr pos:start="51:37" pos:end="51:37"><literal type="number" pos:start="51:37" pos:end="51:37">0</literal></expr>]</index><index pos:start="51:39" pos:end="51:41">[<expr pos:start="51:40" pos:end="51:40"><literal type="number" pos:start="51:40" pos:end="51:40">0</literal></expr>]</index></name> <operator pos:start="51:43" pos:end="51:43">=</operator> <name pos:start="51:45" pos:end="51:69">put_cavs_qpel16_mc00_sse2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:70"><expr pos:start="53:9" pos:end="53:69"><name pos:start="53:9" pos:end="53:41"><name pos:start="53:9" pos:end="53:9">c</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:35">avg_cavs_qpel_pixels_tab</name><index pos:start="53:36" pos:end="53:38">[<expr pos:start="53:37" pos:end="53:37"><literal type="number" pos:start="53:37" pos:end="53:37">0</literal></expr>]</index><index pos:start="53:39" pos:end="53:41">[<expr pos:start="53:40" pos:end="53:40"><literal type="number" pos:start="53:40" pos:end="53:40">0</literal></expr>]</index></name> <operator pos:start="53:43" pos:end="53:43">=</operator> <name pos:start="53:45" pos:end="53:69">avg_cavs_qpel16_mc00_sse2</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="57:1" pos:end="57:6">#<cpp:directive pos:start="57:2" pos:end="57:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
