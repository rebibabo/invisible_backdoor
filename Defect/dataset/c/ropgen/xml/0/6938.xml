<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6938.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:70"><name pos:start="1:1" pos:end="1:19">qemu_inject_x86_mce</name><argument_list pos:start="1:20" pos:end="3:70">(<argument pos:start="1:21" pos:end="1:34">CPUState *cenv</argument>, <argument pos:start="1:37" pos:end="1:44">int bank</argument>, <argument pos:start="1:47" pos:end="1:61">uint64_t status</argument>,

                    <argument pos:start="3:21" pos:end="3:39">uint64_t mcg_status</argument>, <argument pos:start="3:42" pos:end="3:54">uint64_t addr</argument>, <argument pos:start="3:57" pos:end="3:69">uint64_t misc</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:5">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:20">mcg_cap</name> <init pos:start="7:22" pos:end="7:36">= <expr pos:start="7:24" pos:end="7:36"><name pos:start="7:24" pos:end="7:36"><name pos:start="7:24" pos:end="7:27">cenv</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:36">mcg_cap</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">uint64_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:19">banks</name> <init pos:start="9:21" pos:end="9:37">= <expr pos:start="9:23" pos:end="9:37"><name pos:start="9:23" pos:end="9:37"><name pos:start="9:23" pos:end="9:26">cenv</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:37">mce_banks</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="19:7">/*

     * if MSR_MCG_CTL is not all 1s, the uncorrected error

     * reporting is disabled

     */</comment>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="23:38">(<expr pos:start="21:9" pos:end="23:37"><operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:15">status</name> <operator pos:start="21:17" pos:end="21:17">&amp;</operator> <name pos:start="21:19" pos:end="21:31">MCI_STATUS_UC</name><operator pos:start="21:32" pos:end="21:32">)</operator> <operator pos:start="21:34" pos:end="21:35">&amp;&amp;</operator> <operator pos:start="21:37" pos:end="21:37">(</operator><name pos:start="21:38" pos:end="21:44">mcg_cap</name> <operator pos:start="21:46" pos:end="21:46">&amp;</operator> <name pos:start="21:48" pos:end="21:56">MCG_CTL_P</name><operator pos:start="21:57" pos:end="21:57">)</operator> <operator pos:start="21:59" pos:end="21:60">&amp;&amp;</operator>

        <name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:12">cenv</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:21">mcg_ctl</name></name> <operator pos:start="23:23" pos:end="23:24">!=</operator> <operator pos:start="23:26" pos:end="23:26">~</operator><operator pos:start="23:27" pos:end="23:27">(</operator><name pos:start="23:28" pos:end="23:35">uint64_t</name><operator pos:start="23:36" pos:end="23:36">)</operator><literal type="number" pos:start="23:37" pos:end="23:37">0</literal></expr>)</condition> <block pos:start="23:40" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:9">banks</name> <operator pos:start="29:11" pos:end="29:12">+=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">4</literal> <operator pos:start="29:16" pos:end="29:16">*</operator> <name pos:start="29:18" pos:end="29:21">bank</name></expr>;</expr_stmt>

    <comment type="block" pos:start="31:5" pos:end="37:7">/*

     * if MSR_MCi_CTL is not all 1s, the uncorrected error

     * reporting is disabled for the bank

     */</comment>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:61">(<expr pos:start="39:9" pos:end="39:60"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:15">status</name> <operator pos:start="39:17" pos:end="39:17">&amp;</operator> <name pos:start="39:19" pos:end="39:31">MCI_STATUS_UC</name><operator pos:start="39:32" pos:end="39:32">)</operator> <operator pos:start="39:34" pos:end="39:35">&amp;&amp;</operator> <name pos:start="39:37" pos:end="39:44"><name pos:start="39:37" pos:end="39:41">banks</name><index pos:start="39:42" pos:end="39:44">[<expr pos:start="39:43" pos:end="39:43"><literal type="number" pos:start="39:43" pos:end="39:43">0</literal></expr>]</index></name> <operator pos:start="39:46" pos:end="39:47">!=</operator> <operator pos:start="39:49" pos:end="39:49">~</operator><operator pos:start="39:50" pos:end="39:50">(</operator><name pos:start="39:51" pos:end="39:58">uint64_t</name><operator pos:start="39:59" pos:end="39:59">)</operator><literal type="number" pos:start="39:60" pos:end="39:60">0</literal></expr>)</condition> <block pos:start="39:63" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:15">

        <return pos:start="41:9" pos:end="41:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="99:5"><if pos:start="45:5" pos:end="79:5">if <condition pos:start="45:8" pos:end="45:31">(<expr pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:14">status</name> <operator pos:start="45:16" pos:end="45:16">&amp;</operator> <name pos:start="45:18" pos:end="45:30">MCI_STATUS_UC</name></expr>)</condition> <block pos:start="45:33" pos:end="79:5">{<block_content pos:start="47:9" pos:end="77:47">

        <if_stmt pos:start="47:9" pos:end="61:9"><if pos:start="47:9" pos:end="61:9">if <condition pos:start="47:12" pos:end="49:42">(<expr pos:start="47:13" pos:end="49:41"><operator pos:start="47:13" pos:end="47:13">(</operator><name pos:start="47:14" pos:end="47:29"><name pos:start="47:14" pos:end="47:17">cenv</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:29">mcg_status</name></name> <operator pos:start="47:31" pos:end="47:31">&amp;</operator> <name pos:start="47:33" pos:end="47:47">MCG_STATUS_MCIP</name><operator pos:start="47:48" pos:end="47:48">)</operator> <operator pos:start="47:50" pos:end="47:51">||</operator>

            <operator pos:start="49:13" pos:end="49:13">!</operator><operator pos:start="49:14" pos:end="49:14">(</operator><name pos:start="49:15" pos:end="49:25"><name pos:start="49:15" pos:end="49:18">cenv</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:22">cr</name><index pos:start="49:23" pos:end="49:25">[<expr pos:start="49:24" pos:end="49:24"><literal type="number" pos:start="49:24" pos:end="49:24">4</literal></expr>]</index></name> <operator pos:start="49:27" pos:end="49:27">&amp;</operator> <name pos:start="49:29" pos:end="49:40">CR4_MCE_MASK</name><operator pos:start="49:41" pos:end="49:41">)</operator></expr>)</condition> <block pos:start="49:44" pos:end="61:9">{<block_content pos:start="51:13" pos:end="59:19">

            <expr_stmt pos:start="51:13" pos:end="53:45"><expr pos:start="51:13" pos:end="53:44"><call pos:start="51:13" pos:end="53:44"><name pos:start="51:13" pos:end="51:19">fprintf</name><argument_list pos:start="51:20" pos:end="53:44">(<argument pos:start="51:21" pos:end="51:26"><expr pos:start="51:21" pos:end="51:26"><name pos:start="51:21" pos:end="51:26">stderr</name></expr></argument>, <argument pos:start="51:29" pos:end="53:43"><expr pos:start="51:29" pos:end="53:43"><literal type="string" pos:start="51:29" pos:end="51:67">"injects mce exception while previous "</literal>

                    <literal type="string" pos:start="53:21" pos:end="53:43">"one is in progress!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:59"><expr pos:start="55:13" pos:end="55:58"><call pos:start="55:13" pos:end="55:58"><name pos:start="55:13" pos:end="55:25">qemu_log_mask</name><argument_list pos:start="55:26" pos:end="55:58">(<argument pos:start="55:27" pos:end="55:39"><expr pos:start="55:27" pos:end="55:39"><name pos:start="55:27" pos:end="55:39">CPU_LOG_RESET</name></expr></argument>, <argument pos:start="55:42" pos:end="55:57"><expr pos:start="55:42" pos:end="55:57"><literal type="string" pos:start="55:42" pos:end="55:57">"Triple fault\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:40"><expr pos:start="57:13" pos:end="57:39"><call pos:start="57:13" pos:end="57:39"><name pos:start="57:13" pos:end="57:37">qemu_system_reset_request</name><argument_list pos:start="57:38" pos:end="57:39">()</argument_list></call></expr>;</expr_stmt>

            <return pos:start="59:13" pos:end="59:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="63:9" pos:end="67:9"><if pos:start="63:9" pos:end="67:9">if <condition pos:start="63:12" pos:end="63:38">(<expr pos:start="63:13" pos:end="63:37"><name pos:start="63:13" pos:end="63:20"><name pos:start="63:13" pos:end="63:17">banks</name><index pos:start="63:18" pos:end="63:20">[<expr pos:start="63:19" pos:end="63:19"><literal type="number" pos:start="63:19" pos:end="63:19">1</literal></expr>]</index></name> <operator pos:start="63:22" pos:end="63:22">&amp;</operator> <name pos:start="63:24" pos:end="63:37">MCI_STATUS_VAL</name></expr>)</condition> <block pos:start="63:40" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:38">

            <expr_stmt pos:start="65:13" pos:end="65:38"><expr pos:start="65:13" pos:end="65:37"><name pos:start="65:13" pos:end="65:18">status</name> <operator pos:start="65:20" pos:end="65:21">|=</operator> <name pos:start="65:23" pos:end="65:37">MCI_STATUS_OVER</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:24"><expr pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:16"><name pos:start="69:9" pos:end="69:13">banks</name><index pos:start="69:14" pos:end="69:16">[<expr pos:start="69:15" pos:end="69:15"><literal type="number" pos:start="69:15" pos:end="69:15">2</literal></expr>]</index></name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:23">addr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:24"><expr pos:start="71:9" pos:end="71:23"><name pos:start="71:9" pos:end="71:16"><name pos:start="71:9" pos:end="71:13">banks</name><index pos:start="71:14" pos:end="71:16">[<expr pos:start="71:15" pos:end="71:15"><literal type="number" pos:start="71:15" pos:end="71:15">3</literal></expr>]</index></name> <operator pos:start="71:18" pos:end="71:18">=</operator> <name pos:start="71:20" pos:end="71:23">misc</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:38"><expr pos:start="73:9" pos:end="73:37"><name pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:12">cenv</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:24">mcg_status</name></name> <operator pos:start="73:26" pos:end="73:26">=</operator> <name pos:start="73:28" pos:end="73:37">mcg_status</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:26"><expr pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:16"><name pos:start="75:9" pos:end="75:13">banks</name><index pos:start="75:14" pos:end="75:16">[<expr pos:start="75:15" pos:end="75:15"><literal type="number" pos:start="75:15" pos:end="75:15">1</literal></expr>]</index></name> <operator pos:start="75:18" pos:end="75:18">=</operator> <name pos:start="75:20" pos:end="75:25">status</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:47"><expr pos:start="77:9" pos:end="77:46"><call pos:start="77:9" pos:end="77:46"><name pos:start="77:9" pos:end="77:21">cpu_interrupt</name><argument_list pos:start="77:22" pos:end="77:46">(<argument pos:start="77:23" pos:end="77:26"><expr pos:start="77:23" pos:end="77:26"><name pos:start="77:23" pos:end="77:26">cenv</name></expr></argument>, <argument pos:start="77:29" pos:end="77:45"><expr pos:start="77:29" pos:end="77:45"><name pos:start="77:29" pos:end="77:45">CPU_INTERRUPT_MCE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="79:7" pos:end="95:5">else if <condition pos:start="79:15" pos:end="81:46">(<expr pos:start="79:16" pos:end="81:45"><operator pos:start="79:16" pos:end="79:16">!</operator><operator pos:start="79:17" pos:end="79:17">(</operator><name pos:start="79:18" pos:end="79:25"><name pos:start="79:18" pos:end="79:22">banks</name><index pos:start="79:23" pos:end="79:25">[<expr pos:start="79:24" pos:end="79:24"><literal type="number" pos:start="79:24" pos:end="79:24">1</literal></expr>]</index></name> <operator pos:start="79:27" pos:end="79:27">&amp;</operator> <name pos:start="79:29" pos:end="79:42">MCI_STATUS_VAL</name><operator pos:start="79:43" pos:end="79:43">)</operator>

               <operator pos:start="81:16" pos:end="81:17">||</operator> <operator pos:start="81:19" pos:end="81:19">!</operator><operator pos:start="81:20" pos:end="81:20">(</operator><name pos:start="81:21" pos:end="81:28"><name pos:start="81:21" pos:end="81:25">banks</name><index pos:start="81:26" pos:end="81:28">[<expr pos:start="81:27" pos:end="81:27"><literal type="number" pos:start="81:27" pos:end="81:27">1</literal></expr>]</index></name> <operator pos:start="81:30" pos:end="81:30">&amp;</operator> <name pos:start="81:32" pos:end="81:44">MCI_STATUS_UC</name><operator pos:start="81:45" pos:end="81:45">)</operator></expr>)</condition> <block pos:start="81:48" pos:end="95:5">{<block_content pos:start="83:9" pos:end="93:26">

        <if_stmt pos:start="83:9" pos:end="87:9"><if pos:start="83:9" pos:end="87:9">if <condition pos:start="83:12" pos:end="83:38">(<expr pos:start="83:13" pos:end="83:37"><name pos:start="83:13" pos:end="83:20"><name pos:start="83:13" pos:end="83:17">banks</name><index pos:start="83:18" pos:end="83:20">[<expr pos:start="83:19" pos:end="83:19"><literal type="number" pos:start="83:19" pos:end="83:19">1</literal></expr>]</index></name> <operator pos:start="83:22" pos:end="83:22">&amp;</operator> <name pos:start="83:24" pos:end="83:37">MCI_STATUS_VAL</name></expr>)</condition> <block pos:start="83:40" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:38">

            <expr_stmt pos:start="85:13" pos:end="85:38"><expr pos:start="85:13" pos:end="85:37"><name pos:start="85:13" pos:end="85:18">status</name> <operator pos:start="85:20" pos:end="85:21">|=</operator> <name pos:start="85:23" pos:end="85:37">MCI_STATUS_OVER</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:24"><expr pos:start="89:9" pos:end="89:23"><name pos:start="89:9" pos:end="89:16"><name pos:start="89:9" pos:end="89:13">banks</name><index pos:start="89:14" pos:end="89:16">[<expr pos:start="89:15" pos:end="89:15"><literal type="number" pos:start="89:15" pos:end="89:15">2</literal></expr>]</index></name> <operator pos:start="89:18" pos:end="89:18">=</operator> <name pos:start="89:20" pos:end="89:23">addr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:24"><expr pos:start="91:9" pos:end="91:23"><name pos:start="91:9" pos:end="91:16"><name pos:start="91:9" pos:end="91:13">banks</name><index pos:start="91:14" pos:end="91:16">[<expr pos:start="91:15" pos:end="91:15"><literal type="number" pos:start="91:15" pos:end="91:15">3</literal></expr>]</index></name> <operator pos:start="91:18" pos:end="91:18">=</operator> <name pos:start="91:20" pos:end="91:23">misc</name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:26"><expr pos:start="93:9" pos:end="93:25"><name pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:13">banks</name><index pos:start="93:14" pos:end="93:16">[<expr pos:start="93:15" pos:end="93:15"><literal type="number" pos:start="93:15" pos:end="93:15">1</literal></expr>]</index></name> <operator pos:start="93:18" pos:end="93:18">=</operator> <name pos:start="93:20" pos:end="93:25">status</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="99:5">else <block pos:start="95:12" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:36">

        <expr_stmt pos:start="97:9" pos:end="97:36"><expr pos:start="97:9" pos:end="97:35"><name pos:start="97:9" pos:end="97:16"><name pos:start="97:9" pos:end="97:13">banks</name><index pos:start="97:14" pos:end="97:16">[<expr pos:start="97:15" pos:end="97:15"><literal type="number" pos:start="97:15" pos:end="97:15">1</literal></expr>]</index></name> <operator pos:start="97:18" pos:end="97:19">|=</operator> <name pos:start="97:21" pos:end="97:35">MCI_STATUS_OVER</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block>
</unit>
