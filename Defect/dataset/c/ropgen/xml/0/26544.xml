<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26544.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:39">test_bh_delete_from_cb_many</name><parameter_list pos:start="1:40" pos:end="1:45">(<parameter pos:start="1:41" pos:end="1:44"><decl pos:start="1:41" pos:end="1:44"><type pos:start="1:41" pos:end="1:44"><name pos:start="1:41" pos:end="1:44">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:31">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:14">BHTestData</name></type> <name pos:start="5:16" pos:end="5:20">data1</name> <init pos:start="5:22" pos:end="5:43">= <expr pos:start="5:24" pos:end="5:43"><block pos:start="5:24" pos:end="5:43">{ <expr pos:start="5:26" pos:end="5:31"><operator pos:start="5:26" pos:end="5:26">.</operator><name pos:start="5:27" pos:end="5:27">n</name> <operator pos:start="5:29" pos:end="5:29">=</operator> <literal type="number" pos:start="5:31" pos:end="5:31">0</literal></expr>, <expr pos:start="5:34" pos:end="5:41"><operator pos:start="5:34" pos:end="5:34">.</operator><name pos:start="5:35" pos:end="5:37">max</name> <operator pos:start="5:39" pos:end="5:39">=</operator> <literal type="number" pos:start="5:41" pos:end="5:41">1</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">BHTestData</name></type> <name pos:start="7:16" pos:end="7:20">data2</name> <init pos:start="7:22" pos:end="7:43">= <expr pos:start="7:24" pos:end="7:43"><block pos:start="7:24" pos:end="7:43">{ <expr pos:start="7:26" pos:end="7:31"><operator pos:start="7:26" pos:end="7:26">.</operator><name pos:start="7:27" pos:end="7:27">n</name> <operator pos:start="7:29" pos:end="7:29">=</operator> <literal type="number" pos:start="7:31" pos:end="7:31">0</literal></expr>, <expr pos:start="7:34" pos:end="7:41"><operator pos:start="7:34" pos:end="7:34">.</operator><name pos:start="7:35" pos:end="7:37">max</name> <operator pos:start="7:39" pos:end="7:39">=</operator> <literal type="number" pos:start="7:41" pos:end="7:41">3</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14">BHTestData</name></type> <name pos:start="9:16" pos:end="9:20">data3</name> <init pos:start="9:22" pos:end="9:43">= <expr pos:start="9:24" pos:end="9:43"><block pos:start="9:24" pos:end="9:43">{ <expr pos:start="9:26" pos:end="9:31"><operator pos:start="9:26" pos:end="9:26">.</operator><name pos:start="9:27" pos:end="9:27">n</name> <operator pos:start="9:29" pos:end="9:29">=</operator> <literal type="number" pos:start="9:31" pos:end="9:31">0</literal></expr>, <expr pos:start="9:34" pos:end="9:41"><operator pos:start="9:34" pos:end="9:34">.</operator><name pos:start="9:35" pos:end="9:37">max</name> <operator pos:start="9:39" pos:end="9:39">=</operator> <literal type="number" pos:start="9:41" pos:end="9:41">2</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:14">BHTestData</name></type> <name pos:start="11:16" pos:end="11:20">data4</name> <init pos:start="11:22" pos:end="11:43">= <expr pos:start="11:24" pos:end="11:43"><block pos:start="11:24" pos:end="11:43">{ <expr pos:start="11:26" pos:end="11:31"><operator pos:start="11:26" pos:end="11:26">.</operator><name pos:start="11:27" pos:end="11:27">n</name> <operator pos:start="11:29" pos:end="11:29">=</operator> <literal type="number" pos:start="11:31" pos:end="11:31">0</literal></expr>, <expr pos:start="11:34" pos:end="11:41"><operator pos:start="11:34" pos:end="11:34">.</operator><name pos:start="11:35" pos:end="11:37">max</name> <operator pos:start="11:39" pos:end="11:39">=</operator> <literal type="number" pos:start="11:41" pos:end="11:41">4</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:53"><expr pos:start="15:5" pos:end="15:52"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:9">data1</name><operator pos:start="15:10" pos:end="15:10">.</operator><name pos:start="15:11" pos:end="15:12">bh</name></name> <operator pos:start="15:14" pos:end="15:14">=</operator> <call pos:start="15:16" pos:end="15:52"><name pos:start="15:16" pos:end="15:25">aio_bh_new</name><argument_list pos:start="15:26" pos:end="15:52">(<argument pos:start="15:27" pos:end="15:29"><expr pos:start="15:27" pos:end="15:29"><name pos:start="15:27" pos:end="15:29">ctx</name></expr></argument>, <argument pos:start="15:32" pos:end="15:43"><expr pos:start="15:32" pos:end="15:43"><name pos:start="15:32" pos:end="15:43">bh_delete_cb</name></expr></argument>, <argument pos:start="15:46" pos:end="15:51"><expr pos:start="15:46" pos:end="15:51"><operator pos:start="15:46" pos:end="15:46">&amp;</operator><name pos:start="15:47" pos:end="15:51">data1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:53"><expr pos:start="17:5" pos:end="17:52"><name pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:9">data2</name><operator pos:start="17:10" pos:end="17:10">.</operator><name pos:start="17:11" pos:end="17:12">bh</name></name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:52"><name pos:start="17:16" pos:end="17:25">aio_bh_new</name><argument_list pos:start="17:26" pos:end="17:52">(<argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><name pos:start="17:27" pos:end="17:29">ctx</name></expr></argument>, <argument pos:start="17:32" pos:end="17:43"><expr pos:start="17:32" pos:end="17:43"><name pos:start="17:32" pos:end="17:43">bh_delete_cb</name></expr></argument>, <argument pos:start="17:46" pos:end="17:51"><expr pos:start="17:46" pos:end="17:51"><operator pos:start="17:46" pos:end="17:46">&amp;</operator><name pos:start="17:47" pos:end="17:51">data2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:53"><expr pos:start="19:5" pos:end="19:52"><name pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:9">data3</name><operator pos:start="19:10" pos:end="19:10">.</operator><name pos:start="19:11" pos:end="19:12">bh</name></name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:52"><name pos:start="19:16" pos:end="19:25">aio_bh_new</name><argument_list pos:start="19:26" pos:end="19:52">(<argument pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:29"><name pos:start="19:27" pos:end="19:29">ctx</name></expr></argument>, <argument pos:start="19:32" pos:end="19:43"><expr pos:start="19:32" pos:end="19:43"><name pos:start="19:32" pos:end="19:43">bh_delete_cb</name></expr></argument>, <argument pos:start="19:46" pos:end="19:51"><expr pos:start="19:46" pos:end="19:51"><operator pos:start="19:46" pos:end="19:46">&amp;</operator><name pos:start="19:47" pos:end="19:51">data3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:53"><expr pos:start="21:5" pos:end="21:52"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:9">data4</name><operator pos:start="21:10" pos:end="21:10">.</operator><name pos:start="21:11" pos:end="21:12">bh</name></name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:52"><name pos:start="21:16" pos:end="21:25">aio_bh_new</name><argument_list pos:start="21:26" pos:end="21:52">(<argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">ctx</name></expr></argument>, <argument pos:start="21:32" pos:end="21:43"><expr pos:start="21:32" pos:end="21:43"><name pos:start="21:32" pos:end="21:43">bh_delete_cb</name></expr></argument>, <argument pos:start="21:46" pos:end="21:51"><expr pos:start="21:46" pos:end="21:51"><operator pos:start="21:46" pos:end="21:46">&amp;</operator><name pos:start="21:47" pos:end="21:51">data4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><call pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:20">qemu_bh_schedule</name><argument_list pos:start="25:21" pos:end="25:30">(<argument pos:start="25:22" pos:end="25:29"><expr pos:start="25:22" pos:end="25:29"><name pos:start="25:22" pos:end="25:29"><name pos:start="25:22" pos:end="25:26">data1</name><operator pos:start="25:27" pos:end="25:27">.</operator><name pos:start="25:28" pos:end="25:29">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:31"><expr pos:start="27:5" pos:end="27:30"><call pos:start="27:5" pos:end="27:30"><name pos:start="27:5" pos:end="27:20">qemu_bh_schedule</name><argument_list pos:start="27:21" pos:end="27:30">(<argument pos:start="27:22" pos:end="27:29"><expr pos:start="27:22" pos:end="27:29"><name pos:start="27:22" pos:end="27:29"><name pos:start="27:22" pos:end="27:26">data2</name><operator pos:start="27:27" pos:end="27:27">.</operator><name pos:start="27:28" pos:end="27:29">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><call pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:20">qemu_bh_schedule</name><argument_list pos:start="29:21" pos:end="29:30">(<argument pos:start="29:22" pos:end="29:29"><expr pos:start="29:22" pos:end="29:29"><name pos:start="29:22" pos:end="29:29"><name pos:start="29:22" pos:end="29:26">data3</name><operator pos:start="29:27" pos:end="29:27">.</operator><name pos:start="29:28" pos:end="29:29">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:31"><expr pos:start="31:5" pos:end="31:30"><call pos:start="31:5" pos:end="31:30"><name pos:start="31:5" pos:end="31:20">qemu_bh_schedule</name><argument_list pos:start="31:21" pos:end="31:30">(<argument pos:start="31:22" pos:end="31:29"><expr pos:start="31:22" pos:end="31:29"><name pos:start="31:22" pos:end="31:29"><name pos:start="31:22" pos:end="31:26">data4</name><operator pos:start="31:27" pos:end="31:27">.</operator><name pos:start="31:28" pos:end="31:29">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:36"><expr pos:start="33:5" pos:end="33:35"><call pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:19">g_assert_cmpint</name><argument_list pos:start="33:20" pos:end="33:35">(<argument pos:start="33:21" pos:end="33:27"><expr pos:start="33:21" pos:end="33:27"><name pos:start="33:21" pos:end="33:27"><name pos:start="33:21" pos:end="33:25">data1</name><operator pos:start="33:26" pos:end="33:26">.</operator><name pos:start="33:27" pos:end="33:27">n</name></name></expr></argument>, <argument pos:start="33:30" pos:end="33:31"><expr pos:start="33:30" pos:end="33:31"><operator pos:start="33:30" pos:end="33:31">==</operator></expr></argument>, <argument pos:start="33:34" pos:end="33:34"><expr pos:start="33:34" pos:end="33:34"><literal type="number" pos:start="33:34" pos:end="33:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:36"><expr pos:start="35:5" pos:end="35:35"><call pos:start="35:5" pos:end="35:35"><name pos:start="35:5" pos:end="35:19">g_assert_cmpint</name><argument_list pos:start="35:20" pos:end="35:35">(<argument pos:start="35:21" pos:end="35:27"><expr pos:start="35:21" pos:end="35:27"><name pos:start="35:21" pos:end="35:27"><name pos:start="35:21" pos:end="35:25">data2</name><operator pos:start="35:26" pos:end="35:26">.</operator><name pos:start="35:27" pos:end="35:27">n</name></name></expr></argument>, <argument pos:start="35:30" pos:end="35:31"><expr pos:start="35:30" pos:end="35:31"><operator pos:start="35:30" pos:end="35:31">==</operator></expr></argument>, <argument pos:start="35:34" pos:end="35:34"><expr pos:start="35:34" pos:end="35:34"><literal type="number" pos:start="35:34" pos:end="35:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:36"><expr pos:start="37:5" pos:end="37:35"><call pos:start="37:5" pos:end="37:35"><name pos:start="37:5" pos:end="37:19">g_assert_cmpint</name><argument_list pos:start="37:20" pos:end="37:35">(<argument pos:start="37:21" pos:end="37:27"><expr pos:start="37:21" pos:end="37:27"><name pos:start="37:21" pos:end="37:27"><name pos:start="37:21" pos:end="37:25">data3</name><operator pos:start="37:26" pos:end="37:26">.</operator><name pos:start="37:27" pos:end="37:27">n</name></name></expr></argument>, <argument pos:start="37:30" pos:end="37:31"><expr pos:start="37:30" pos:end="37:31"><operator pos:start="37:30" pos:end="37:31">==</operator></expr></argument>, <argument pos:start="37:34" pos:end="37:34"><expr pos:start="37:34" pos:end="37:34"><literal type="number" pos:start="37:34" pos:end="37:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:36"><expr pos:start="39:5" pos:end="39:35"><call pos:start="39:5" pos:end="39:35"><name pos:start="39:5" pos:end="39:19">g_assert_cmpint</name><argument_list pos:start="39:20" pos:end="39:35">(<argument pos:start="39:21" pos:end="39:27"><expr pos:start="39:21" pos:end="39:27"><name pos:start="39:21" pos:end="39:27"><name pos:start="39:21" pos:end="39:25">data4</name><operator pos:start="39:26" pos:end="39:26">.</operator><name pos:start="39:27" pos:end="39:27">n</name></name></expr></argument>, <argument pos:start="39:30" pos:end="39:31"><expr pos:start="39:30" pos:end="39:31"><operator pos:start="39:30" pos:end="39:31">==</operator></expr></argument>, <argument pos:start="39:34" pos:end="39:34"><expr pos:start="39:34" pos:end="39:34"><literal type="number" pos:start="39:34" pos:end="39:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:35"><expr pos:start="43:5" pos:end="43:34"><call pos:start="43:5" pos:end="43:34"><name pos:start="43:5" pos:end="43:12">g_assert</name><argument_list pos:start="43:13" pos:end="43:34">(<argument pos:start="43:14" pos:end="43:33"><expr pos:start="43:14" pos:end="43:33"><call pos:start="43:14" pos:end="43:33"><name pos:start="43:14" pos:end="43:21">aio_poll</name><argument_list pos:start="43:22" pos:end="43:33">(<argument pos:start="43:23" pos:end="43:25"><expr pos:start="43:23" pos:end="43:25"><name pos:start="43:23" pos:end="43:25">ctx</name></expr></argument>, <argument pos:start="43:28" pos:end="43:32"><expr pos:start="43:28" pos:end="43:32"><name pos:start="43:28" pos:end="43:32">false</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:36"><expr pos:start="45:5" pos:end="45:35"><call pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:19">g_assert_cmpint</name><argument_list pos:start="45:20" pos:end="45:35">(<argument pos:start="45:21" pos:end="45:27"><expr pos:start="45:21" pos:end="45:27"><name pos:start="45:21" pos:end="45:27"><name pos:start="45:21" pos:end="45:25">data1</name><operator pos:start="45:26" pos:end="45:26">.</operator><name pos:start="45:27" pos:end="45:27">n</name></name></expr></argument>, <argument pos:start="45:30" pos:end="45:31"><expr pos:start="45:30" pos:end="45:31"><operator pos:start="45:30" pos:end="45:31">==</operator></expr></argument>, <argument pos:start="45:34" pos:end="45:34"><expr pos:start="45:34" pos:end="45:34"><literal type="number" pos:start="45:34" pos:end="45:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:36"><expr pos:start="47:5" pos:end="47:35"><call pos:start="47:5" pos:end="47:35"><name pos:start="47:5" pos:end="47:19">g_assert_cmpint</name><argument_list pos:start="47:20" pos:end="47:35">(<argument pos:start="47:21" pos:end="47:27"><expr pos:start="47:21" pos:end="47:27"><name pos:start="47:21" pos:end="47:27"><name pos:start="47:21" pos:end="47:25">data2</name><operator pos:start="47:26" pos:end="47:26">.</operator><name pos:start="47:27" pos:end="47:27">n</name></name></expr></argument>, <argument pos:start="47:30" pos:end="47:31"><expr pos:start="47:30" pos:end="47:31"><operator pos:start="47:30" pos:end="47:31">==</operator></expr></argument>, <argument pos:start="47:34" pos:end="47:34"><expr pos:start="47:34" pos:end="47:34"><literal type="number" pos:start="47:34" pos:end="47:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:36"><expr pos:start="49:5" pos:end="49:35"><call pos:start="49:5" pos:end="49:35"><name pos:start="49:5" pos:end="49:19">g_assert_cmpint</name><argument_list pos:start="49:20" pos:end="49:35">(<argument pos:start="49:21" pos:end="49:27"><expr pos:start="49:21" pos:end="49:27"><name pos:start="49:21" pos:end="49:27"><name pos:start="49:21" pos:end="49:25">data3</name><operator pos:start="49:26" pos:end="49:26">.</operator><name pos:start="49:27" pos:end="49:27">n</name></name></expr></argument>, <argument pos:start="49:30" pos:end="49:31"><expr pos:start="49:30" pos:end="49:31"><operator pos:start="49:30" pos:end="49:31">==</operator></expr></argument>, <argument pos:start="49:34" pos:end="49:34"><expr pos:start="49:34" pos:end="49:34"><literal type="number" pos:start="49:34" pos:end="49:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:36"><expr pos:start="51:5" pos:end="51:35"><call pos:start="51:5" pos:end="51:35"><name pos:start="51:5" pos:end="51:19">g_assert_cmpint</name><argument_list pos:start="51:20" pos:end="51:35">(<argument pos:start="51:21" pos:end="51:27"><expr pos:start="51:21" pos:end="51:27"><name pos:start="51:21" pos:end="51:27"><name pos:start="51:21" pos:end="51:25">data4</name><operator pos:start="51:26" pos:end="51:26">.</operator><name pos:start="51:27" pos:end="51:27">n</name></name></expr></argument>, <argument pos:start="51:30" pos:end="51:31"><expr pos:start="51:30" pos:end="51:31"><operator pos:start="51:30" pos:end="51:31">==</operator></expr></argument>, <argument pos:start="51:34" pos:end="51:34"><expr pos:start="51:34" pos:end="51:34"><literal type="number" pos:start="51:34" pos:end="51:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:31"><expr pos:start="53:5" pos:end="53:30"><call pos:start="53:5" pos:end="53:30"><name pos:start="53:5" pos:end="53:12">g_assert</name><argument_list pos:start="53:13" pos:end="53:30">(<argument pos:start="53:14" pos:end="53:29"><expr pos:start="53:14" pos:end="53:29"><name pos:start="53:14" pos:end="53:21"><name pos:start="53:14" pos:end="53:18">data1</name><operator pos:start="53:19" pos:end="53:19">.</operator><name pos:start="53:20" pos:end="53:21">bh</name></name> <operator pos:start="53:23" pos:end="53:24">==</operator> <name pos:start="53:26" pos:end="53:29">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:19"><expr pos:start="57:5" pos:end="57:18"><call pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:16">wait_for_aio</name><argument_list pos:start="57:17" pos:end="57:18">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:44"><expr pos:start="59:5" pos:end="59:43"><call pos:start="59:5" pos:end="59:43"><name pos:start="59:5" pos:end="59:19">g_assert_cmpint</name><argument_list pos:start="59:20" pos:end="59:43">(<argument pos:start="59:21" pos:end="59:27"><expr pos:start="59:21" pos:end="59:27"><name pos:start="59:21" pos:end="59:27"><name pos:start="59:21" pos:end="59:25">data1</name><operator pos:start="59:26" pos:end="59:26">.</operator><name pos:start="59:27" pos:end="59:27">n</name></name></expr></argument>, <argument pos:start="59:30" pos:end="59:31"><expr pos:start="59:30" pos:end="59:31"><operator pos:start="59:30" pos:end="59:31">==</operator></expr></argument>, <argument pos:start="59:34" pos:end="59:42"><expr pos:start="59:34" pos:end="59:42"><name pos:start="59:34" pos:end="59:42"><name pos:start="59:34" pos:end="59:38">data1</name><operator pos:start="59:39" pos:end="59:39">.</operator><name pos:start="59:40" pos:end="59:42">max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:44"><expr pos:start="61:5" pos:end="61:43"><call pos:start="61:5" pos:end="61:43"><name pos:start="61:5" pos:end="61:19">g_assert_cmpint</name><argument_list pos:start="61:20" pos:end="61:43">(<argument pos:start="61:21" pos:end="61:27"><expr pos:start="61:21" pos:end="61:27"><name pos:start="61:21" pos:end="61:27"><name pos:start="61:21" pos:end="61:25">data2</name><operator pos:start="61:26" pos:end="61:26">.</operator><name pos:start="61:27" pos:end="61:27">n</name></name></expr></argument>, <argument pos:start="61:30" pos:end="61:31"><expr pos:start="61:30" pos:end="61:31"><operator pos:start="61:30" pos:end="61:31">==</operator></expr></argument>, <argument pos:start="61:34" pos:end="61:42"><expr pos:start="61:34" pos:end="61:42"><name pos:start="61:34" pos:end="61:42"><name pos:start="61:34" pos:end="61:38">data2</name><operator pos:start="61:39" pos:end="61:39">.</operator><name pos:start="61:40" pos:end="61:42">max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:44"><expr pos:start="63:5" pos:end="63:43"><call pos:start="63:5" pos:end="63:43"><name pos:start="63:5" pos:end="63:19">g_assert_cmpint</name><argument_list pos:start="63:20" pos:end="63:43">(<argument pos:start="63:21" pos:end="63:27"><expr pos:start="63:21" pos:end="63:27"><name pos:start="63:21" pos:end="63:27"><name pos:start="63:21" pos:end="63:25">data3</name><operator pos:start="63:26" pos:end="63:26">.</operator><name pos:start="63:27" pos:end="63:27">n</name></name></expr></argument>, <argument pos:start="63:30" pos:end="63:31"><expr pos:start="63:30" pos:end="63:31"><operator pos:start="63:30" pos:end="63:31">==</operator></expr></argument>, <argument pos:start="63:34" pos:end="63:42"><expr pos:start="63:34" pos:end="63:42"><name pos:start="63:34" pos:end="63:42"><name pos:start="63:34" pos:end="63:38">data3</name><operator pos:start="63:39" pos:end="63:39">.</operator><name pos:start="63:40" pos:end="63:42">max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:44"><expr pos:start="65:5" pos:end="65:43"><call pos:start="65:5" pos:end="65:43"><name pos:start="65:5" pos:end="65:19">g_assert_cmpint</name><argument_list pos:start="65:20" pos:end="65:43">(<argument pos:start="65:21" pos:end="65:27"><expr pos:start="65:21" pos:end="65:27"><name pos:start="65:21" pos:end="65:27"><name pos:start="65:21" pos:end="65:25">data4</name><operator pos:start="65:26" pos:end="65:26">.</operator><name pos:start="65:27" pos:end="65:27">n</name></name></expr></argument>, <argument pos:start="65:30" pos:end="65:31"><expr pos:start="65:30" pos:end="65:31"><operator pos:start="65:30" pos:end="65:31">==</operator></expr></argument>, <argument pos:start="65:34" pos:end="65:42"><expr pos:start="65:34" pos:end="65:42"><name pos:start="65:34" pos:end="65:42"><name pos:start="65:34" pos:end="65:38">data4</name><operator pos:start="65:39" pos:end="65:39">.</operator><name pos:start="65:40" pos:end="65:42">max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:31"><expr pos:start="67:5" pos:end="67:30"><call pos:start="67:5" pos:end="67:30"><name pos:start="67:5" pos:end="67:12">g_assert</name><argument_list pos:start="67:13" pos:end="67:30">(<argument pos:start="67:14" pos:end="67:29"><expr pos:start="67:14" pos:end="67:29"><name pos:start="67:14" pos:end="67:21"><name pos:start="67:14" pos:end="67:18">data1</name><operator pos:start="67:19" pos:end="67:19">.</operator><name pos:start="67:20" pos:end="67:21">bh</name></name> <operator pos:start="67:23" pos:end="67:24">==</operator> <name pos:start="67:26" pos:end="67:29">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:31"><expr pos:start="69:5" pos:end="69:30"><call pos:start="69:5" pos:end="69:30"><name pos:start="69:5" pos:end="69:12">g_assert</name><argument_list pos:start="69:13" pos:end="69:30">(<argument pos:start="69:14" pos:end="69:29"><expr pos:start="69:14" pos:end="69:29"><name pos:start="69:14" pos:end="69:21"><name pos:start="69:14" pos:end="69:18">data2</name><operator pos:start="69:19" pos:end="69:19">.</operator><name pos:start="69:20" pos:end="69:21">bh</name></name> <operator pos:start="69:23" pos:end="69:24">==</operator> <name pos:start="69:26" pos:end="69:29">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:31"><expr pos:start="71:5" pos:end="71:30"><call pos:start="71:5" pos:end="71:30"><name pos:start="71:5" pos:end="71:12">g_assert</name><argument_list pos:start="71:13" pos:end="71:30">(<argument pos:start="71:14" pos:end="71:29"><expr pos:start="71:14" pos:end="71:29"><name pos:start="71:14" pos:end="71:21"><name pos:start="71:14" pos:end="71:18">data3</name><operator pos:start="71:19" pos:end="71:19">.</operator><name pos:start="71:20" pos:end="71:21">bh</name></name> <operator pos:start="71:23" pos:end="71:24">==</operator> <name pos:start="71:26" pos:end="71:29">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:31"><expr pos:start="73:5" pos:end="73:30"><call pos:start="73:5" pos:end="73:30"><name pos:start="73:5" pos:end="73:12">g_assert</name><argument_list pos:start="73:13" pos:end="73:30">(<argument pos:start="73:14" pos:end="73:29"><expr pos:start="73:14" pos:end="73:29"><name pos:start="73:14" pos:end="73:21"><name pos:start="73:14" pos:end="73:18">data4</name><operator pos:start="73:19" pos:end="73:19">.</operator><name pos:start="73:20" pos:end="73:21">bh</name></name> <operator pos:start="73:23" pos:end="73:24">==</operator> <name pos:start="73:26" pos:end="73:29">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
