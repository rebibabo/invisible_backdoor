<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12356.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">decode_p_frame</name><parameter_list pos:start="1:26" pos:end="1:74">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:38">FourXContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">f</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:61"><decl pos:start="1:44" pos:end="1:61"><type pos:start="1:44" pos:end="1:61"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:56">uint8_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">buf</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:73"><decl pos:start="1:64" pos:end="1:73"><type pos:start="1:64" pos:end="1:73"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:73">length</name></decl></parameter>)</parameter_list><block pos:start="1:75" pos:end="123:1">{<block_content pos:start="3:5" pos:end="121:13">

    <decl_stmt pos:start="3:5" pos:end="3:13"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">x</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:19">width</name><init pos:start="5:20" pos:end="5:36">= <expr pos:start="5:22" pos:end="5:36"><name pos:start="5:22" pos:end="5:36"><name pos:start="5:22" pos:end="5:22">f</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:36">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:20">height</name><init pos:start="7:21" pos:end="7:38">= <expr pos:start="7:23" pos:end="7:38"><name pos:start="7:23" pos:end="7:38"><name pos:start="7:23" pos:end="7:23">f</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:30">avctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:38">height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">uint16_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">src</name><init pos:start="9:18" pos:end="9:53">= <expr pos:start="9:20" pos:end="9:53"><operator pos:start="9:20" pos:end="9:20">(</operator><name pos:start="9:21" pos:end="9:28">uint16_t</name><operator pos:start="9:29" pos:end="9:29">*</operator><operator pos:start="9:30" pos:end="9:30">)</operator><name pos:start="9:31" pos:end="9:53"><name pos:start="9:31" pos:end="9:31">f</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:45">last_picture</name><operator pos:start="9:46" pos:end="9:46">.</operator><name pos:start="9:47" pos:end="9:50">data</name><index pos:start="9:51" pos:end="9:53">[<expr pos:start="9:52" pos:end="9:52"><literal type="number" pos:start="9:52" pos:end="9:52">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:57"><decl pos:start="11:5" pos:end="11:56"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">uint16_t</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:17">dst</name><init pos:start="11:18" pos:end="11:56">= <expr pos:start="11:20" pos:end="11:56"><operator pos:start="11:20" pos:end="11:20">(</operator><name pos:start="11:21" pos:end="11:28">uint16_t</name><operator pos:start="11:29" pos:end="11:29">*</operator><operator pos:start="11:30" pos:end="11:30">)</operator><name pos:start="11:31" pos:end="11:56"><name pos:start="11:31" pos:end="11:31">f</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:48">current_picture</name><operator pos:start="11:49" pos:end="11:49">.</operator><name pos:start="11:50" pos:end="11:53">data</name><index pos:start="11:54" pos:end="11:56">[<expr pos:start="11:55" pos:end="11:55"><literal type="number" pos:start="11:55" pos:end="11:55">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:55"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:20">stride</name><init pos:start="13:21" pos:end="13:55">= <expr pos:start="13:23" pos:end="13:55"><name pos:start="13:23" pos:end="13:52"><name pos:start="13:23" pos:end="13:23">f</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:40">current_picture</name><operator pos:start="13:41" pos:end="13:41">.</operator><name pos:start="13:42" pos:end="13:49">linesize</name><index pos:start="13:50" pos:end="13:52">[<expr pos:start="13:51" pos:end="13:51"><literal type="number" pos:start="13:51" pos:end="13:51">0</literal></expr>]</index></name><operator pos:start="13:53" pos:end="13:54">&gt;&gt;</operator><literal type="number" pos:start="13:55" pos:end="13:55">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:73"><decl pos:start="15:5" pos:end="15:31"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:31">bitstream_size</name></decl>, <decl pos:start="15:34" pos:end="15:48"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:34" pos:end="15:48">bytestream_size</name></decl>, <decl pos:start="15:51" pos:end="15:65"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:51" pos:end="15:65">wordstream_size</name></decl>, <decl pos:start="15:68" pos:end="15:72"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:68" pos:end="15:72">extra</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="39:5"><if pos:start="19:5" pos:end="29:5">if<condition pos:start="19:7" pos:end="19:20">(<expr pos:start="19:8" pos:end="19:19"><name pos:start="19:8" pos:end="19:17"><name pos:start="19:8" pos:end="19:8">f</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:17">version</name></name><operator pos:start="19:18" pos:end="19:18">&gt;</operator><literal type="number" pos:start="19:19" pos:end="19:19">1</literal></expr>)</condition><block pos:start="19:21" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:41">

        <expr_stmt pos:start="21:9" pos:end="21:17"><expr pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:13">extra</name><operator pos:start="21:14" pos:end="21:14">=</operator><literal type="number" pos:start="21:15" pos:end="21:16">20</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:39"><expr pos:start="23:9" pos:end="23:38"><name pos:start="23:9" pos:end="23:22">bitstream_size</name><operator pos:start="23:23" pos:end="23:23">=</operator> <call pos:start="23:25" pos:end="23:38"><name pos:start="23:25" pos:end="23:31">AV_RL32</name><argument_list pos:start="23:32" pos:end="23:38">(<argument pos:start="23:33" pos:end="23:37"><expr pos:start="23:33" pos:end="23:37"><name pos:start="23:33" pos:end="23:35">buf</name><operator pos:start="23:36" pos:end="23:36">+</operator><literal type="number" pos:start="23:37" pos:end="23:37">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:41"><expr pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:23">wordstream_size</name><operator pos:start="25:24" pos:end="25:24">=</operator> <call pos:start="25:26" pos:end="25:40"><name pos:start="25:26" pos:end="25:32">AV_RL32</name><argument_list pos:start="25:33" pos:end="25:40">(<argument pos:start="25:34" pos:end="25:39"><expr pos:start="25:34" pos:end="25:39"><name pos:start="25:34" pos:end="25:36">buf</name><operator pos:start="25:37" pos:end="25:37">+</operator><literal type="number" pos:start="25:38" pos:end="25:39">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:41"><expr pos:start="27:9" pos:end="27:40"><name pos:start="27:9" pos:end="27:23">bytestream_size</name><operator pos:start="27:24" pos:end="27:24">=</operator> <call pos:start="27:26" pos:end="27:40"><name pos:start="27:26" pos:end="27:32">AV_RL32</name><argument_list pos:start="27:33" pos:end="27:40">(<argument pos:start="27:34" pos:end="27:39"><expr pos:start="27:34" pos:end="27:39"><name pos:start="27:34" pos:end="27:36">buf</name><operator pos:start="27:37" pos:end="27:37">+</operator><literal type="number" pos:start="27:38" pos:end="27:39">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="29:6" pos:end="39:5">else<block pos:start="29:10" pos:end="39:5">{<block_content pos:start="31:9" pos:end="37:77">

        <expr_stmt pos:start="31:9" pos:end="31:16"><expr pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:13">extra</name><operator pos:start="31:14" pos:end="31:14">=</operator><literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:40"><expr pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:22">bitstream_size</name> <operator pos:start="33:24" pos:end="33:24">=</operator> <call pos:start="33:26" pos:end="33:39"><name pos:start="33:26" pos:end="33:32">AV_RL16</name><argument_list pos:start="33:33" pos:end="33:39">(<argument pos:start="33:34" pos:end="33:38"><expr pos:start="33:34" pos:end="33:38"><name pos:start="33:34" pos:end="33:36">buf</name><operator pos:start="33:37" pos:end="33:37">-</operator><literal type="number" pos:start="33:38" pos:end="33:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:40"><expr pos:start="35:9" pos:end="35:39"><name pos:start="35:9" pos:end="35:23">wordstream_size</name><operator pos:start="35:24" pos:end="35:24">=</operator> <call pos:start="35:26" pos:end="35:39"><name pos:start="35:26" pos:end="35:32">AV_RL16</name><argument_list pos:start="35:33" pos:end="35:39">(<argument pos:start="35:34" pos:end="35:38"><expr pos:start="35:34" pos:end="35:38"><name pos:start="35:34" pos:end="35:36">buf</name><operator pos:start="35:37" pos:end="35:37">-</operator><literal type="number" pos:start="35:38" pos:end="35:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:77"><expr pos:start="37:9" pos:end="37:76"><name pos:start="37:9" pos:end="37:23">bytestream_size</name><operator pos:start="37:24" pos:end="37:24">=</operator> <call pos:start="37:26" pos:end="37:76"><name pos:start="37:26" pos:end="37:30">FFMAX</name><argument_list pos:start="37:31" pos:end="37:76">(<argument pos:start="37:32" pos:end="37:72"><expr pos:start="37:32" pos:end="37:72"><name pos:start="37:32" pos:end="37:37">length</name> <operator pos:start="37:39" pos:end="37:39">-</operator> <name pos:start="37:41" pos:end="37:54">bitstream_size</name> <operator pos:start="37:56" pos:end="37:56">-</operator> <name pos:start="37:58" pos:end="37:72">wordstream_size</name></expr></argument>, <argument pos:start="37:75" pos:end="37:75"><expr pos:start="37:75" pos:end="37:75"><literal type="number" pos:start="37:75" pos:end="37:75">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="43:5" pos:end="59:5"><if pos:start="43:5" pos:end="59:5">if<condition pos:start="43:7" pos:end="51:8">(<expr pos:start="43:8" pos:end="49:35"><name pos:start="43:8" pos:end="43:21">bitstream_size</name><operator pos:start="43:22" pos:end="43:22">+</operator> <name pos:start="43:24" pos:end="43:38">bytestream_size</name><operator pos:start="43:39" pos:end="43:39">+</operator> <name pos:start="43:41" pos:end="43:55">wordstream_size</name> <operator pos:start="43:57" pos:end="43:57">+</operator> <name pos:start="43:59" pos:end="43:63">extra</name> <operator pos:start="43:65" pos:end="43:66">!=</operator> <name pos:start="43:68" pos:end="43:73">length</name>

       <operator pos:start="45:8" pos:end="45:9">||</operator> <name pos:start="45:11" pos:end="45:24">bitstream_size</name>  <operator pos:start="45:27" pos:end="45:27">&gt;</operator> <operator pos:start="45:29" pos:end="45:29">(</operator><literal type="number" pos:start="45:30" pos:end="45:30">1</literal><operator pos:start="45:31" pos:end="45:32">&lt;&lt;</operator><literal type="number" pos:start="45:33" pos:end="45:34">26</literal><operator pos:start="45:35" pos:end="45:35">)</operator>

       <operator pos:start="47:8" pos:end="47:9">||</operator> <name pos:start="47:11" pos:end="47:25">bytestream_size</name> <operator pos:start="47:27" pos:end="47:27">&gt;</operator> <operator pos:start="47:29" pos:end="47:29">(</operator><literal type="number" pos:start="47:30" pos:end="47:30">1</literal><operator pos:start="47:31" pos:end="47:32">&lt;&lt;</operator><literal type="number" pos:start="47:33" pos:end="47:34">26</literal><operator pos:start="47:35" pos:end="47:35">)</operator>

       <operator pos:start="49:8" pos:end="49:9">||</operator> <name pos:start="49:11" pos:end="49:25">wordstream_size</name> <operator pos:start="49:27" pos:end="49:27">&gt;</operator> <operator pos:start="49:29" pos:end="49:29">(</operator><literal type="number" pos:start="49:30" pos:end="49:30">1</literal><operator pos:start="49:31" pos:end="49:32">&lt;&lt;</operator><literal type="number" pos:start="49:33" pos:end="49:34">26</literal><operator pos:start="49:35" pos:end="49:35">)</operator></expr>

       )</condition><block pos:start="51:9" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:18">

        <expr_stmt pos:start="53:9" pos:end="55:67"><expr pos:start="53:9" pos:end="55:66"><call pos:start="53:9" pos:end="55:66"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="55:66">(<argument pos:start="53:16" pos:end="53:23"><expr pos:start="53:16" pos:end="53:23"><name pos:start="53:16" pos:end="53:23"><name pos:start="53:16" pos:end="53:16">f</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:23">avctx</name></name></expr></argument>, <argument pos:start="53:26" pos:end="53:37"><expr pos:start="53:26" pos:end="53:37"><name pos:start="53:26" pos:end="53:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:40" pos:end="53:62"><expr pos:start="53:40" pos:end="53:62"><literal type="string" pos:start="53:40" pos:end="53:62">"lengths %d %d %d %d\n"</literal></expr></argument>, <argument pos:start="53:65" pos:end="53:78"><expr pos:start="53:65" pos:end="53:78"><name pos:start="53:65" pos:end="53:78">bitstream_size</name></expr></argument>, <argument pos:start="53:81" pos:end="53:95"><expr pos:start="53:81" pos:end="53:95"><name pos:start="53:81" pos:end="53:95">bytestream_size</name></expr></argument>, <argument pos:start="53:98" pos:end="53:112"><expr pos:start="53:98" pos:end="53:112"><name pos:start="53:98" pos:end="53:112">wordstream_size</name></expr></argument>,

        <argument pos:start="55:9" pos:end="55:65"><expr pos:start="55:9" pos:end="55:65"><name pos:start="55:9" pos:end="55:22">bitstream_size</name><operator pos:start="55:23" pos:end="55:23">+</operator> <name pos:start="55:25" pos:end="55:39">bytestream_size</name><operator pos:start="55:40" pos:end="55:40">+</operator> <name pos:start="55:42" pos:end="55:56">wordstream_size</name> <operator pos:start="55:58" pos:end="55:58">-</operator> <name pos:start="55:60" pos:end="55:65">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:18">return <expr pos:start="57:16" pos:end="57:17"><operator pos:start="57:16" pos:end="57:16">-</operator><literal type="number" pos:start="57:17" pos:end="57:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:115"><expr pos:start="63:5" pos:end="63:114"><call pos:start="63:5" pos:end="63:114"><name pos:start="63:5" pos:end="63:18">av_fast_malloc</name><argument_list pos:start="63:19" pos:end="63:114">(<argument pos:start="63:20" pos:end="63:39"><expr pos:start="63:20" pos:end="63:39"><operator pos:start="63:20" pos:end="63:20">&amp;</operator><name pos:start="63:21" pos:end="63:39"><name pos:start="63:21" pos:end="63:21">f</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:39">bitstream_buffer</name></name></expr></argument>, <argument pos:start="63:42" pos:end="63:66"><expr pos:start="63:42" pos:end="63:66"><operator pos:start="63:42" pos:end="63:42">&amp;</operator><name pos:start="63:43" pos:end="63:66"><name pos:start="63:43" pos:end="63:43">f</name><operator pos:start="63:44" pos:end="63:45">-&gt;</operator><name pos:start="63:46" pos:end="63:66">bitstream_buffer_size</name></name></expr></argument>, <argument pos:start="63:69" pos:end="63:113"><expr pos:start="63:69" pos:end="63:113"><name pos:start="63:69" pos:end="63:82">bitstream_size</name> <operator pos:start="63:84" pos:end="63:84">+</operator> <name pos:start="63:86" pos:end="63:113">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="67:31"><if pos:start="65:5" pos:end="67:31">if <condition pos:start="65:8" pos:end="65:29">(<expr pos:start="65:9" pos:end="65:28"><operator pos:start="65:9" pos:end="65:9">!</operator><name pos:start="65:10" pos:end="65:28"><name pos:start="65:10" pos:end="65:10">f</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:28">bitstream_buffer</name></name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:31"><block_content pos:start="67:9" pos:end="67:31">

        <return pos:start="67:9" pos:end="67:31">return <expr pos:start="67:16" pos:end="67:30"><call pos:start="67:16" pos:end="67:30"><name pos:start="67:16" pos:end="67:22">AVERROR</name><argument_list pos:start="67:23" pos:end="67:30">(<argument pos:start="67:24" pos:end="67:29"><expr pos:start="67:24" pos:end="67:29"><name pos:start="67:24" pos:end="67:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:92"><expr pos:start="69:5" pos:end="69:91"><call pos:start="69:5" pos:end="69:91"><name pos:start="69:5" pos:end="69:20"><name pos:start="69:5" pos:end="69:5">f</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:10">dsp</name><operator pos:start="69:11" pos:end="69:11">.</operator><name pos:start="69:12" pos:end="69:20">bswap_buf</name></name><argument_list pos:start="69:21" pos:end="69:91">(<argument pos:start="69:22" pos:end="69:40"><expr pos:start="69:22" pos:end="69:40"><name pos:start="69:22" pos:end="69:40"><name pos:start="69:22" pos:end="69:22">f</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:40">bitstream_buffer</name></name></expr></argument>, <argument pos:start="69:43" pos:end="69:72"><expr pos:start="69:43" pos:end="69:72"><operator pos:start="69:43" pos:end="69:43">(</operator><specifier pos:start="69:44" pos:end="69:48">const</specifier> <name pos:start="69:50" pos:end="69:57">uint32_t</name><operator pos:start="69:58" pos:end="69:58">*</operator><operator pos:start="69:59" pos:end="69:59">)</operator><operator pos:start="69:60" pos:end="69:60">(</operator><name pos:start="69:61" pos:end="69:63">buf</name> <operator pos:start="69:65" pos:end="69:65">+</operator> <name pos:start="69:67" pos:end="69:71">extra</name><operator pos:start="69:72" pos:end="69:72">)</operator></expr></argument>, <argument pos:start="69:75" pos:end="69:90"><expr pos:start="69:75" pos:end="69:90"><name pos:start="69:75" pos:end="69:88">bitstream_size</name><operator pos:start="69:89" pos:end="69:89">/</operator><literal type="number" pos:start="69:90" pos:end="69:90">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:92"><expr pos:start="71:5" pos:end="71:91"><call pos:start="71:5" pos:end="71:91"><name pos:start="71:5" pos:end="71:10">memset</name><argument_list pos:start="71:11" pos:end="71:91">(<argument pos:start="71:12" pos:end="71:57"><expr pos:start="71:12" pos:end="71:57"><operator pos:start="71:12" pos:end="71:12">(</operator><name pos:start="71:13" pos:end="71:19">uint8_t</name><operator pos:start="71:20" pos:end="71:20">*</operator><operator pos:start="71:21" pos:end="71:21">)</operator><name pos:start="71:22" pos:end="71:40"><name pos:start="71:22" pos:end="71:22">f</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:40">bitstream_buffer</name></name> <operator pos:start="71:42" pos:end="71:42">+</operator> <name pos:start="71:44" pos:end="71:57">bitstream_size</name></expr></argument>, <argument pos:start="71:60" pos:end="71:60"><expr pos:start="71:60" pos:end="71:60"><literal type="number" pos:start="71:60" pos:end="71:60">0</literal></expr></argument>, <argument pos:start="71:63" pos:end="71:90"><expr pos:start="71:63" pos:end="71:90"><name pos:start="71:63" pos:end="71:90">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:65"><expr pos:start="73:5" pos:end="73:64"><call pos:start="73:5" pos:end="73:64"><name pos:start="73:5" pos:end="73:17">init_get_bits</name><argument_list pos:start="73:18" pos:end="73:64">(<argument pos:start="73:19" pos:end="73:24"><expr pos:start="73:19" pos:end="73:24"><operator pos:start="73:19" pos:end="73:19">&amp;</operator><name pos:start="73:20" pos:end="73:24"><name pos:start="73:20" pos:end="73:20">f</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:24">gb</name></name></expr></argument>, <argument pos:start="73:27" pos:end="73:45"><expr pos:start="73:27" pos:end="73:45"><name pos:start="73:27" pos:end="73:45"><name pos:start="73:27" pos:end="73:27">f</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:45">bitstream_buffer</name></name></expr></argument>, <argument pos:start="73:48" pos:end="73:63"><expr pos:start="73:48" pos:end="73:63"><literal type="number" pos:start="73:48" pos:end="73:48">8</literal><operator pos:start="73:49" pos:end="73:49">*</operator><name pos:start="73:50" pos:end="73:63">bitstream_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:67"><expr pos:start="77:5" pos:end="77:66"><name pos:start="77:5" pos:end="77:17"><name pos:start="77:5" pos:end="77:5">f</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:17">wordstream</name></name><operator pos:start="77:18" pos:end="77:18">=</operator> <operator pos:start="77:20" pos:end="77:20">(</operator><specifier pos:start="77:21" pos:end="77:25">const</specifier> <name pos:start="77:27" pos:end="77:34">uint16_t</name><operator pos:start="77:35" pos:end="77:35">*</operator><operator pos:start="77:36" pos:end="77:36">)</operator><operator pos:start="77:37" pos:end="77:37">(</operator><name pos:start="77:38" pos:end="77:40">buf</name> <operator pos:start="77:42" pos:end="77:42">+</operator> <name pos:start="77:44" pos:end="77:48">extra</name> <operator pos:start="77:50" pos:end="77:50">+</operator> <name pos:start="77:52" pos:end="77:65">bitstream_size</name><operator pos:start="77:66" pos:end="77:66">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:66"><expr pos:start="79:5" pos:end="79:65"><name pos:start="79:5" pos:end="79:17"><name pos:start="79:5" pos:end="79:5">f</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:17">bytestream</name></name><operator pos:start="79:18" pos:end="79:18">=</operator> <name pos:start="79:20" pos:end="79:22">buf</name> <operator pos:start="79:24" pos:end="79:24">+</operator> <name pos:start="79:26" pos:end="79:30">extra</name> <operator pos:start="79:32" pos:end="79:32">+</operator> <name pos:start="79:34" pos:end="79:47">bitstream_size</name> <operator pos:start="79:49" pos:end="79:49">+</operator> <name pos:start="79:51" pos:end="79:65">wordstream_size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:15"><expr pos:start="83:5" pos:end="83:14"><call pos:start="83:5" pos:end="83:14"><name pos:start="83:5" pos:end="83:11">init_mv</name><argument_list pos:start="83:12" pos:end="83:14">(<argument pos:start="83:13" pos:end="83:13"><expr pos:start="83:13" pos:end="83:13"><name pos:start="83:13" pos:end="83:13">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="87:5" pos:end="99:5">for<control pos:start="87:8" pos:end="87:28">(<init pos:start="87:9" pos:end="87:12"><expr pos:start="87:9" pos:end="87:11"><name pos:start="87:9" pos:end="87:9">y</name><operator pos:start="87:10" pos:end="87:10">=</operator><literal type="number" pos:start="87:11" pos:end="87:11">0</literal></expr>;</init> <condition pos:start="87:14" pos:end="87:22"><expr pos:start="87:14" pos:end="87:21"><name pos:start="87:14" pos:end="87:14">y</name><operator pos:start="87:15" pos:end="87:15">&lt;</operator><name pos:start="87:16" pos:end="87:21">height</name></expr>;</condition> <incr pos:start="87:24" pos:end="87:27"><expr pos:start="87:24" pos:end="87:27"><name pos:start="87:24" pos:end="87:24">y</name><operator pos:start="87:25" pos:end="87:26">+=</operator><literal type="number" pos:start="87:27" pos:end="87:27">8</literal></expr></incr>)</control><block pos:start="87:29" pos:end="99:5">{<block_content pos:start="89:9" pos:end="97:24">

        <for pos:start="89:9" pos:end="93:9">for<control pos:start="89:12" pos:end="89:31">(<init pos:start="89:13" pos:end="89:16"><expr pos:start="89:13" pos:end="89:15"><name pos:start="89:13" pos:end="89:13">x</name><operator pos:start="89:14" pos:end="89:14">=</operator><literal type="number" pos:start="89:15" pos:end="89:15">0</literal></expr>;</init> <condition pos:start="89:18" pos:end="89:25"><expr pos:start="89:18" pos:end="89:24"><name pos:start="89:18" pos:end="89:18">x</name><operator pos:start="89:19" pos:end="89:19">&lt;</operator><name pos:start="89:20" pos:end="89:24">width</name></expr>;</condition> <incr pos:start="89:27" pos:end="89:30"><expr pos:start="89:27" pos:end="89:30"><name pos:start="89:27" pos:end="89:27">x</name><operator pos:start="89:28" pos:end="89:29">+=</operator><literal type="number" pos:start="89:30" pos:end="89:30">8</literal></expr></incr>)</control><block pos:start="89:32" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:62">

            <expr_stmt pos:start="91:13" pos:end="91:62"><expr pos:start="91:13" pos:end="91:61"><call pos:start="91:13" pos:end="91:61"><name pos:start="91:13" pos:end="91:26">decode_p_block</name><argument_list pos:start="91:27" pos:end="91:61">(<argument pos:start="91:28" pos:end="91:28"><expr pos:start="91:28" pos:end="91:28"><name pos:start="91:28" pos:end="91:28">f</name></expr></argument>, <argument pos:start="91:31" pos:end="91:37"><expr pos:start="91:31" pos:end="91:37"><name pos:start="91:31" pos:end="91:33">dst</name> <operator pos:start="91:35" pos:end="91:35">+</operator> <name pos:start="91:37" pos:end="91:37">x</name></expr></argument>, <argument pos:start="91:40" pos:end="91:46"><expr pos:start="91:40" pos:end="91:46"><name pos:start="91:40" pos:end="91:42">src</name> <operator pos:start="91:44" pos:end="91:44">+</operator> <name pos:start="91:46" pos:end="91:46">x</name></expr></argument>, <argument pos:start="91:49" pos:end="91:49"><expr pos:start="91:49" pos:end="91:49"><literal type="number" pos:start="91:49" pos:end="91:49">3</literal></expr></argument>, <argument pos:start="91:52" pos:end="91:52"><expr pos:start="91:52" pos:end="91:52"><literal type="number" pos:start="91:52" pos:end="91:52">3</literal></expr></argument>, <argument pos:start="91:55" pos:end="91:60"><expr pos:start="91:55" pos:end="91:60"><name pos:start="91:55" pos:end="91:60">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="95:9" pos:end="95:24"><expr pos:start="95:9" pos:end="95:23"><name pos:start="95:9" pos:end="95:11">src</name> <operator pos:start="95:13" pos:end="95:14">+=</operator> <literal type="number" pos:start="95:16" pos:end="95:16">8</literal><operator pos:start="95:17" pos:end="95:17">*</operator><name pos:start="95:18" pos:end="95:23">stride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:24"><expr pos:start="97:9" pos:end="97:23"><name pos:start="97:9" pos:end="97:11">dst</name> <operator pos:start="97:13" pos:end="97:14">+=</operator> <literal type="number" pos:start="97:16" pos:end="97:16">8</literal><operator pos:start="97:17" pos:end="97:17">*</operator><name pos:start="97:18" pos:end="97:23">stride</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="103:5" pos:end="117:10"><if pos:start="103:5" pos:end="117:10">if<condition pos:start="103:7" pos:end="107:129">(   <expr pos:start="103:11" pos:end="107:128"><name pos:start="103:11" pos:end="103:24">bitstream_size</name> <operator pos:start="103:26" pos:end="103:27">!=</operator> <operator pos:start="103:29" pos:end="103:29">(</operator><call pos:start="103:30" pos:end="103:51"><name pos:start="103:30" pos:end="103:43">get_bits_count</name><argument_list pos:start="103:44" pos:end="103:51">(<argument pos:start="103:45" pos:end="103:50"><expr pos:start="103:45" pos:end="103:50"><operator pos:start="103:45" pos:end="103:45">&amp;</operator><name pos:start="103:46" pos:end="103:50"><name pos:start="103:46" pos:end="103:46">f</name><operator pos:start="103:47" pos:end="103:48">-&gt;</operator><name pos:start="103:49" pos:end="103:50">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="103:52" pos:end="103:52">+</operator><literal type="number" pos:start="103:53" pos:end="103:54">31</literal><operator pos:start="103:55" pos:end="103:55">)</operator><operator pos:start="103:56" pos:end="103:56">/</operator><literal type="number" pos:start="103:57" pos:end="103:58">32</literal><operator pos:start="103:59" pos:end="103:59">*</operator><literal type="number" pos:start="103:60" pos:end="103:60">4</literal>

       <operator pos:start="105:8" pos:end="105:9">||</operator> <operator pos:start="105:11" pos:end="105:11">(</operator><operator pos:start="105:12" pos:end="105:12">(</operator><operator pos:start="105:13" pos:end="105:13">(</operator><specifier pos:start="105:14" pos:end="105:18">const</specifier> <name pos:start="105:20" pos:end="105:23">char</name><operator pos:start="105:24" pos:end="105:24">*</operator><operator pos:start="105:25" pos:end="105:25">)</operator><name pos:start="105:26" pos:end="105:38"><name pos:start="105:26" pos:end="105:26">f</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:38">wordstream</name></name> <operator pos:start="105:40" pos:end="105:40">-</operator> <operator pos:start="105:42" pos:end="105:42">(</operator><specifier pos:start="105:43" pos:end="105:47">const</specifier> <name pos:start="105:49" pos:end="105:52">char</name><operator pos:start="105:53" pos:end="105:53">*</operator><operator pos:start="105:54" pos:end="105:54">)</operator><name pos:start="105:55" pos:end="105:57">buf</name> <operator pos:start="105:59" pos:end="105:59">+</operator> <literal type="number" pos:start="105:61" pos:end="105:61">2</literal><operator pos:start="105:62" pos:end="105:62">)</operator><operator pos:start="105:63" pos:end="105:63">&amp;</operator><operator pos:start="105:64" pos:end="105:64">~</operator><literal type="number" pos:start="105:65" pos:end="105:65">2</literal><operator pos:start="105:66" pos:end="105:66">)</operator> <operator pos:start="105:68" pos:end="105:69">!=</operator> <name pos:start="105:71" pos:end="105:75">extra</name> <operator pos:start="105:77" pos:end="105:77">+</operator> <name pos:start="105:79" pos:end="105:92">bitstream_size</name> <operator pos:start="105:94" pos:end="105:94">+</operator> <name pos:start="105:96" pos:end="105:110">wordstream_size</name>

       <operator pos:start="107:8" pos:end="107:9">||</operator> <operator pos:start="107:11" pos:end="107:11">(</operator><operator pos:start="107:12" pos:end="107:12">(</operator><operator pos:start="107:13" pos:end="107:13">(</operator><specifier pos:start="107:14" pos:end="107:18">const</specifier> <name pos:start="107:20" pos:end="107:23">char</name><operator pos:start="107:24" pos:end="107:24">*</operator><operator pos:start="107:25" pos:end="107:25">)</operator><name pos:start="107:26" pos:end="107:38"><name pos:start="107:26" pos:end="107:26">f</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:38">bytestream</name></name> <operator pos:start="107:40" pos:end="107:40">-</operator> <operator pos:start="107:42" pos:end="107:42">(</operator><specifier pos:start="107:43" pos:end="107:47">const</specifier> <name pos:start="107:49" pos:end="107:52">char</name><operator pos:start="107:53" pos:end="107:53">*</operator><operator pos:start="107:54" pos:end="107:54">)</operator><name pos:start="107:55" pos:end="107:57">buf</name> <operator pos:start="107:59" pos:end="107:59">+</operator> <literal type="number" pos:start="107:61" pos:end="107:61">3</literal><operator pos:start="107:62" pos:end="107:62">)</operator><operator pos:start="107:63" pos:end="107:63">&amp;</operator><operator pos:start="107:64" pos:end="107:64">~</operator><literal type="number" pos:start="107:65" pos:end="107:65">3</literal><operator pos:start="107:66" pos:end="107:66">)</operator> <operator pos:start="107:68" pos:end="107:69">!=</operator> <name pos:start="107:71" pos:end="107:75">extra</name> <operator pos:start="107:77" pos:end="107:77">+</operator> <name pos:start="107:79" pos:end="107:92">bitstream_size</name> <operator pos:start="107:94" pos:end="107:94">+</operator> <name pos:start="107:96" pos:end="107:110">wordstream_size</name> <operator pos:start="107:112" pos:end="107:112">+</operator> <name pos:start="107:114" pos:end="107:128">bytestream_size</name></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="117:10"><block_content pos:start="109:9" pos:end="117:10">

        <expr_stmt pos:start="109:9" pos:end="117:10"><expr pos:start="109:9" pos:end="117:9"><call pos:start="109:9" pos:end="117:9"><name pos:start="109:9" pos:end="109:14">av_log</name><argument_list pos:start="109:15" pos:end="117:9">(<argument pos:start="109:16" pos:end="109:23"><expr pos:start="109:16" pos:end="109:23"><name pos:start="109:16" pos:end="109:23"><name pos:start="109:16" pos:end="109:16">f</name><operator pos:start="109:17" pos:end="109:18">-&gt;</operator><name pos:start="109:19" pos:end="109:23">avctx</name></name></expr></argument>, <argument pos:start="109:26" pos:end="109:37"><expr pos:start="109:26" pos:end="109:37"><name pos:start="109:26" pos:end="109:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="109:40" pos:end="109:65"><expr pos:start="109:40" pos:end="109:65"><literal type="string" pos:start="109:40" pos:end="109:65">" %d %td %td bytes left\n"</literal></expr></argument>,

            <argument pos:start="111:13" pos:end="111:61"><expr pos:start="111:13" pos:end="111:61"><name pos:start="111:13" pos:end="111:26">bitstream_size</name> <operator pos:start="111:28" pos:end="111:28">-</operator> <operator pos:start="111:30" pos:end="111:30">(</operator><call pos:start="111:31" pos:end="111:52"><name pos:start="111:31" pos:end="111:44">get_bits_count</name><argument_list pos:start="111:45" pos:end="111:52">(<argument pos:start="111:46" pos:end="111:51"><expr pos:start="111:46" pos:end="111:51"><operator pos:start="111:46" pos:end="111:46">&amp;</operator><name pos:start="111:47" pos:end="111:51"><name pos:start="111:47" pos:end="111:47">f</name><operator pos:start="111:48" pos:end="111:49">-&gt;</operator><name pos:start="111:50" pos:end="111:51">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="111:53" pos:end="111:53">+</operator><literal type="number" pos:start="111:54" pos:end="111:55">31</literal><operator pos:start="111:56" pos:end="111:56">)</operator><operator pos:start="111:57" pos:end="111:57">/</operator><literal type="number" pos:start="111:58" pos:end="111:59">32</literal><operator pos:start="111:60" pos:end="111:60">*</operator><literal type="number" pos:start="111:61" pos:end="111:61">4</literal></expr></argument>,

            <argument pos:start="113:13" pos:end="113:132"><expr pos:start="113:13" pos:end="113:132"><operator pos:start="113:13" pos:end="113:13">-</operator><operator pos:start="113:14" pos:end="113:14">(</operator><operator pos:start="113:15" pos:end="113:15">(</operator><operator pos:start="113:16" pos:end="113:16">(</operator><specifier pos:start="113:17" pos:end="113:21">const</specifier> <name pos:start="113:23" pos:end="113:26">char</name><operator pos:start="113:27" pos:end="113:27">*</operator><operator pos:start="113:28" pos:end="113:28">)</operator><name pos:start="113:29" pos:end="113:41"><name pos:start="113:29" pos:end="113:29">f</name><operator pos:start="113:30" pos:end="113:31">-&gt;</operator><name pos:start="113:32" pos:end="113:41">bytestream</name></name> <operator pos:start="113:43" pos:end="113:43">-</operator> <operator pos:start="113:45" pos:end="113:45">(</operator><specifier pos:start="113:46" pos:end="113:50">const</specifier> <name pos:start="113:52" pos:end="113:55">char</name><operator pos:start="113:56" pos:end="113:56">*</operator><operator pos:start="113:57" pos:end="113:57">)</operator><name pos:start="113:58" pos:end="113:60">buf</name> <operator pos:start="113:62" pos:end="113:62">+</operator> <literal type="number" pos:start="113:64" pos:end="113:64">3</literal><operator pos:start="113:65" pos:end="113:65">)</operator><operator pos:start="113:66" pos:end="113:66">&amp;</operator><operator pos:start="113:67" pos:end="113:67">~</operator><literal type="number" pos:start="113:68" pos:end="113:68">3</literal><operator pos:start="113:69" pos:end="113:69">)</operator> <operator pos:start="113:71" pos:end="113:71">+</operator> <operator pos:start="113:73" pos:end="113:73">(</operator><name pos:start="113:74" pos:end="113:78">extra</name> <operator pos:start="113:80" pos:end="113:80">+</operator> <name pos:start="113:82" pos:end="113:95">bitstream_size</name> <operator pos:start="113:97" pos:end="113:97">+</operator> <name pos:start="113:99" pos:end="113:113">wordstream_size</name> <operator pos:start="113:115" pos:end="113:115">+</operator> <name pos:start="113:117" pos:end="113:131">bytestream_size</name><operator pos:start="113:132" pos:end="113:132">)</operator></expr></argument>,

            <argument pos:start="115:13" pos:end="115:114"><expr pos:start="115:13" pos:end="115:114"><operator pos:start="115:13" pos:end="115:13">-</operator><operator pos:start="115:14" pos:end="115:14">(</operator><operator pos:start="115:15" pos:end="115:15">(</operator><operator pos:start="115:16" pos:end="115:16">(</operator><specifier pos:start="115:17" pos:end="115:21">const</specifier> <name pos:start="115:23" pos:end="115:26">char</name><operator pos:start="115:27" pos:end="115:27">*</operator><operator pos:start="115:28" pos:end="115:28">)</operator><name pos:start="115:29" pos:end="115:41"><name pos:start="115:29" pos:end="115:29">f</name><operator pos:start="115:30" pos:end="115:31">-&gt;</operator><name pos:start="115:32" pos:end="115:41">wordstream</name></name> <operator pos:start="115:43" pos:end="115:43">-</operator> <operator pos:start="115:45" pos:end="115:45">(</operator><specifier pos:start="115:46" pos:end="115:50">const</specifier> <name pos:start="115:52" pos:end="115:55">char</name><operator pos:start="115:56" pos:end="115:56">*</operator><operator pos:start="115:57" pos:end="115:57">)</operator><name pos:start="115:58" pos:end="115:60">buf</name> <operator pos:start="115:62" pos:end="115:62">+</operator> <literal type="number" pos:start="115:64" pos:end="115:64">2</literal><operator pos:start="115:65" pos:end="115:65">)</operator><operator pos:start="115:66" pos:end="115:66">&amp;</operator><operator pos:start="115:67" pos:end="115:67">~</operator><literal type="number" pos:start="115:68" pos:end="115:68">2</literal><operator pos:start="115:69" pos:end="115:69">)</operator> <operator pos:start="115:71" pos:end="115:71">+</operator> <operator pos:start="115:73" pos:end="115:73">(</operator><name pos:start="115:74" pos:end="115:78">extra</name> <operator pos:start="115:80" pos:end="115:80">+</operator> <name pos:start="115:82" pos:end="115:95">bitstream_size</name> <operator pos:start="115:97" pos:end="115:97">+</operator> <name pos:start="115:99" pos:end="115:113">wordstream_size</name><operator pos:start="115:114" pos:end="115:114">)</operator></expr></argument>

        )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="121:5" pos:end="121:13">return <expr pos:start="121:12" pos:end="121:12"><literal type="number" pos:start="121:12" pos:end="121:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
