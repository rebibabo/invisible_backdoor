<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7387.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">uhci_ioport_writew</name><parameter_list pos:start="1:31" pos:end="1:73">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:53">uint32_t</name></type> <name pos:start="1:55" pos:end="1:58">addr</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:68">uint32_t</name></type> <name pos:start="1:70" pos:end="1:72">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="163:1">{<block_content pos:start="5:5" pos:end="161:5">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">UHCIState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:25">= <expr pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:25">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:17"><expr pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:8">addr</name> <operator pos:start="9:10" pos:end="9:11">&amp;=</operator> <literal type="number" pos:start="9:13" pos:end="9:16">0x1f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:64"><expr pos:start="11:5" pos:end="11:63"><call pos:start="11:5" pos:end="11:63"><name pos:start="11:5" pos:end="11:11">DPRINTF</name><argument_list pos:start="11:12" pos:end="11:63">(<argument pos:start="11:13" pos:end="11:51"><expr pos:start="11:13" pos:end="11:51"><literal type="string" pos:start="11:13" pos:end="11:51">"uhci: writew port=0x%04x val=0x%04x\n"</literal></expr></argument>, <argument pos:start="11:54" pos:end="11:57"><expr pos:start="11:54" pos:end="11:57"><name pos:start="11:54" pos:end="11:57">addr</name></expr></argument>, <argument pos:start="11:60" pos:end="11:62"><expr pos:start="11:60" pos:end="11:62"><name pos:start="11:60" pos:end="11:62">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="15:5" pos:end="161:5">switch<condition pos:start="15:11" pos:end="15:16">(<expr pos:start="15:12" pos:end="15:15"><name pos:start="15:12" pos:end="15:15">addr</name></expr>)</condition> <block pos:start="15:18" pos:end="161:5">{<block_content pos:start="17:5" pos:end="159:14">

    <case pos:start="17:5" pos:end="17:14">case <expr pos:start="17:10" pos:end="17:13"><literal type="number" pos:start="17:10" pos:end="17:13">0x00</literal></expr>:</case>

        <if_stmt pos:start="19:9" pos:end="35:9"><if pos:start="19:9" pos:end="31:9">if <condition pos:start="19:12" pos:end="19:59">(<expr pos:start="19:13" pos:end="19:58"><operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:16">val</name> <operator pos:start="19:18" pos:end="19:18">&amp;</operator> <name pos:start="19:20" pos:end="19:30">UHCI_CMD_RS</name><operator pos:start="19:31" pos:end="19:31">)</operator> <operator pos:start="19:33" pos:end="19:34">&amp;&amp;</operator> <operator pos:start="19:36" pos:end="19:36">!</operator><operator pos:start="19:37" pos:end="19:37">(</operator><name pos:start="19:38" pos:end="19:43"><name pos:start="19:38" pos:end="19:38">s</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:43">cmd</name></name> <operator pos:start="19:45" pos:end="19:45">&amp;</operator> <name pos:start="19:47" pos:end="19:57">UHCI_CMD_RS</name><operator pos:start="19:58" pos:end="19:58">)</operator></expr>)</condition> <block pos:start="19:61" pos:end="31:9">{<block_content pos:start="23:13" pos:end="29:44">

            <comment type="block" pos:start="21:13" pos:end="21:40">/* start frame processing */</comment>

            <expr_stmt pos:start="23:13" pos:end="25:57"><expr pos:start="23:13" pos:end="25:56"><name pos:start="23:13" pos:end="23:26"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:26">expire_time</name></name> <operator pos:start="23:28" pos:end="23:28">=</operator> <call pos:start="23:30" pos:end="23:56"><name pos:start="23:30" pos:end="23:46">qemu_get_clock_ns</name><argument_list pos:start="23:47" pos:end="23:56">(<argument pos:start="23:48" pos:end="23:55"><expr pos:start="23:48" pos:end="23:55"><name pos:start="23:48" pos:end="23:55">vm_clock</name></expr></argument>)</argument_list></call> <operator pos:start="23:58" pos:end="23:58">+</operator>

                <operator pos:start="25:17" pos:end="25:17">(</operator><call pos:start="25:18" pos:end="25:36"><name pos:start="25:18" pos:end="25:34">get_ticks_per_sec</name><argument_list pos:start="25:35" pos:end="25:36">()</argument_list></call> <operator pos:start="25:38" pos:end="25:38">/</operator> <name pos:start="25:40" pos:end="25:55">FRAME_TIMER_FREQ</name><operator pos:start="25:56" pos:end="25:56">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:72"><expr pos:start="27:13" pos:end="27:71"><call pos:start="27:13" pos:end="27:71"><name pos:start="27:13" pos:end="27:26">qemu_mod_timer</name><argument_list pos:start="27:27" pos:end="27:71">(<argument pos:start="27:28" pos:end="27:41"><expr pos:start="27:28" pos:end="27:41"><name pos:start="27:28" pos:end="27:41"><name pos:start="27:28" pos:end="27:28">s</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:41">frame_timer</name></name></expr></argument>, <argument pos:start="27:44" pos:end="27:70"><expr pos:start="27:44" pos:end="27:70"><call pos:start="27:44" pos:end="27:70"><name pos:start="27:44" pos:end="27:60">qemu_get_clock_ns</name><argument_list pos:start="27:61" pos:end="27:70">(<argument pos:start="27:62" pos:end="27:69"><expr pos:start="27:62" pos:end="27:69"><name pos:start="27:62" pos:end="27:69">vm_clock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:44"><expr pos:start="29:13" pos:end="29:43"><name pos:start="29:13" pos:end="29:21"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:21">status</name></name> <operator pos:start="29:23" pos:end="29:24">&amp;=</operator> <operator pos:start="29:26" pos:end="29:26">~</operator><name pos:start="29:27" pos:end="29:43">UHCI_STS_HCHALTED</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="31:11" pos:end="35:9">else if <condition pos:start="31:19" pos:end="31:40">(<expr pos:start="31:20" pos:end="31:39"><operator pos:start="31:20" pos:end="31:20">!</operator><operator pos:start="31:21" pos:end="31:21">(</operator><name pos:start="31:22" pos:end="31:24">val</name> <operator pos:start="31:26" pos:end="31:26">&amp;</operator> <name pos:start="31:28" pos:end="31:38">UHCI_CMD_RS</name><operator pos:start="31:39" pos:end="31:39">)</operator></expr>)</condition> <block pos:start="31:42" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:43">

            <expr_stmt pos:start="33:13" pos:end="33:43"><expr pos:start="33:13" pos:end="33:42"><name pos:start="33:13" pos:end="33:21"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:21">status</name></name> <operator pos:start="33:23" pos:end="33:24">|=</operator> <name pos:start="33:26" pos:end="33:42">UHCI_STS_HCHALTED</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="67:9"><if pos:start="37:9" pos:end="67:9">if <condition pos:start="37:12" pos:end="37:34">(<expr pos:start="37:13" pos:end="37:33"><name pos:start="37:13" pos:end="37:15">val</name> <operator pos:start="37:17" pos:end="37:17">&amp;</operator> <name pos:start="37:19" pos:end="37:33">UHCI_CMD_GRESET</name></expr>)</condition> <block pos:start="37:36" pos:end="67:9">{<block_content pos:start="39:13" pos:end="65:19">

            <decl_stmt pos:start="39:13" pos:end="39:27"><decl pos:start="39:13" pos:end="39:26"><type pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:20">UHCIPort</name> <modifier pos:start="39:22" pos:end="39:22">*</modifier></type><name pos:start="39:23" pos:end="39:26">port</name></decl>;</decl_stmt>

            <decl_stmt pos:start="41:13" pos:end="41:27"><decl pos:start="41:13" pos:end="41:26"><type pos:start="41:13" pos:end="41:23"><name pos:start="41:13" pos:end="41:21">USBDevice</name> <modifier pos:start="41:23" pos:end="41:23">*</modifier></type><name pos:start="41:24" pos:end="41:26">dev</name></decl>;</decl_stmt>

            <decl_stmt pos:start="43:13" pos:end="43:18"><decl pos:start="43:13" pos:end="43:17"><type pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">int</name></type> <name pos:start="43:17" pos:end="43:17">i</name></decl>;</decl_stmt>



            <comment type="block" pos:start="47:13" pos:end="47:43">/* send reset on the USB bus */</comment>

            <for pos:start="49:13" pos:end="61:13">for<control pos:start="49:16" pos:end="49:41">(<init pos:start="49:17" pos:end="49:22"><expr pos:start="49:17" pos:end="49:21"><name pos:start="49:17" pos:end="49:17">i</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <literal type="number" pos:start="49:21" pos:end="49:21">0</literal></expr>;</init> <condition pos:start="49:24" pos:end="49:36"><expr pos:start="49:24" pos:end="49:35"><name pos:start="49:24" pos:end="49:24">i</name> <operator pos:start="49:26" pos:end="49:26">&lt;</operator> <name pos:start="49:28" pos:end="49:35">NB_PORTS</name></expr>;</condition> <incr pos:start="49:38" pos:end="49:40"><expr pos:start="49:38" pos:end="49:40"><name pos:start="49:38" pos:end="49:38">i</name><operator pos:start="49:39" pos:end="49:40">++</operator></expr></incr>)</control> <block pos:start="49:43" pos:end="61:13">{<block_content pos:start="51:17" pos:end="59:17">

                <expr_stmt pos:start="51:17" pos:end="51:36"><expr pos:start="51:17" pos:end="51:35"><name pos:start="51:17" pos:end="51:20">port</name> <operator pos:start="51:22" pos:end="51:22">=</operator> <operator pos:start="51:24" pos:end="51:24">&amp;</operator><name pos:start="51:25" pos:end="51:35"><name pos:start="51:25" pos:end="51:25">s</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:32">ports</name><index pos:start="51:33" pos:end="51:35">[<expr pos:start="51:34" pos:end="51:34"><name pos:start="51:34" pos:end="51:34">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:37"><expr pos:start="53:17" pos:end="53:36"><name pos:start="53:17" pos:end="53:19">dev</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <name pos:start="53:23" pos:end="53:36"><name pos:start="53:23" pos:end="53:26">port</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:32">port</name><operator pos:start="53:33" pos:end="53:33">.</operator><name pos:start="53:34" pos:end="53:36">dev</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="55:17" pos:end="59:17"><if pos:start="55:17" pos:end="59:17">if <condition pos:start="55:20" pos:end="55:24">(<expr pos:start="55:21" pos:end="55:23"><name pos:start="55:21" pos:end="55:23">dev</name></expr>)</condition> <block pos:start="55:26" pos:end="59:17">{<block_content pos:start="57:21" pos:end="57:53">

                    <expr_stmt pos:start="57:21" pos:end="57:53"><expr pos:start="57:21" pos:end="57:52"><call pos:start="57:21" pos:end="57:52"><name pos:start="57:21" pos:end="57:32">usb_send_msg</name><argument_list pos:start="57:33" pos:end="57:52">(<argument pos:start="57:34" pos:end="57:36"><expr pos:start="57:34" pos:end="57:36"><name pos:start="57:34" pos:end="57:36">dev</name></expr></argument>, <argument pos:start="57:39" pos:end="57:51"><expr pos:start="57:39" pos:end="57:51"><name pos:start="57:39" pos:end="57:51">USB_MSG_RESET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="63:13" pos:end="63:26"><expr pos:start="63:13" pos:end="63:25"><call pos:start="63:13" pos:end="63:25"><name pos:start="63:13" pos:end="63:22">uhci_reset</name><argument_list pos:start="63:23" pos:end="63:25">(<argument pos:start="63:24" pos:end="63:24"><expr pos:start="63:24" pos:end="63:24"><name pos:start="63:24" pos:end="63:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:35">(<expr pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:15">val</name> <operator pos:start="69:17" pos:end="69:17">&amp;</operator> <name pos:start="69:19" pos:end="69:34">UHCI_CMD_HCRESET</name></expr>)</condition> <block pos:start="69:37" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:19">

            <expr_stmt pos:start="71:13" pos:end="71:26"><expr pos:start="71:13" pos:end="71:25"><call pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:22">uhci_reset</name><argument_list pos:start="71:23" pos:end="71:25">(<argument pos:start="71:24" pos:end="71:24"><expr pos:start="71:24" pos:end="71:24"><name pos:start="71:24" pos:end="71:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="73:13" pos:end="73:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:21"><expr pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:14"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:14">cmd</name></name> <operator pos:start="77:16" pos:end="77:16">=</operator> <name pos:start="77:18" pos:end="77:20">val</name></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:14">case <expr pos:start="81:10" pos:end="81:13"><literal type="number" pos:start="81:10" pos:end="81:13">0x02</literal></expr>:</case>

        <expr_stmt pos:start="83:9" pos:end="83:26"><expr pos:start="83:9" pos:end="83:25"><name pos:start="83:9" pos:end="83:17"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:17">status</name></name> <operator pos:start="83:19" pos:end="83:20">&amp;=</operator> <operator pos:start="83:22" pos:end="83:22">~</operator><name pos:start="83:23" pos:end="83:25">val</name></expr>;</expr_stmt>

        <comment type="block" pos:start="85:9" pos:end="87:57">/* XXX: the chip spec is not coherent, so we add a hidden

           register to distinguish between IOC and SPD */</comment>

        <if_stmt pos:start="89:9" pos:end="91:27"><if pos:start="89:9" pos:end="91:27">if <condition pos:start="89:12" pos:end="89:34">(<expr pos:start="89:13" pos:end="89:33"><name pos:start="89:13" pos:end="89:15">val</name> <operator pos:start="89:17" pos:end="89:17">&amp;</operator> <name pos:start="89:19" pos:end="89:33">UHCI_STS_USBINT</name></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:27"><block_content pos:start="91:13" pos:end="91:27">

            <expr_stmt pos:start="91:13" pos:end="91:27"><expr pos:start="91:13" pos:end="91:26"><name pos:start="91:13" pos:end="91:22"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:22">status2</name></name> <operator pos:start="91:24" pos:end="91:24">=</operator> <literal type="number" pos:start="91:26" pos:end="91:26">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:27"><expr pos:start="93:9" pos:end="93:26"><call pos:start="93:9" pos:end="93:26"><name pos:start="93:9" pos:end="93:23">uhci_update_irq</name><argument_list pos:start="93:24" pos:end="93:26">(<argument pos:start="93:25" pos:end="93:25"><expr pos:start="93:25" pos:end="93:25"><name pos:start="93:25" pos:end="93:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <case pos:start="97:5" pos:end="97:14">case <expr pos:start="97:10" pos:end="97:13"><literal type="number" pos:start="97:10" pos:end="97:13">0x04</literal></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:22"><expr pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:15"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:15">intr</name></name> <operator pos:start="99:17" pos:end="99:17">=</operator> <name pos:start="99:19" pos:end="99:21">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:27"><expr pos:start="101:9" pos:end="101:26"><call pos:start="101:9" pos:end="101:26"><name pos:start="101:9" pos:end="101:23">uhci_update_irq</name><argument_list pos:start="101:24" pos:end="101:26">(<argument pos:start="101:25" pos:end="101:25"><expr pos:start="101:25" pos:end="101:25"><name pos:start="101:25" pos:end="101:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    <case pos:start="105:5" pos:end="105:14">case <expr pos:start="105:10" pos:end="105:13"><literal type="number" pos:start="105:10" pos:end="105:13">0x06</literal></expr>:</case>

        <if_stmt pos:start="107:9" pos:end="109:35"><if pos:start="107:9" pos:end="109:35">if <condition pos:start="107:12" pos:end="107:42">(<expr pos:start="107:13" pos:end="107:41"><name pos:start="107:13" pos:end="107:21"><name pos:start="107:13" pos:end="107:13">s</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:21">status</name></name> <operator pos:start="107:23" pos:end="107:23">&amp;</operator> <name pos:start="107:25" pos:end="107:41">UHCI_STS_HCHALTED</name></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:35"><block_content pos:start="109:13" pos:end="109:35">

            <expr_stmt pos:start="109:13" pos:end="109:35"><expr pos:start="109:13" pos:end="109:34"><name pos:start="109:13" pos:end="109:20"><name pos:start="109:13" pos:end="109:13">s</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:20">frnum</name></name> <operator pos:start="109:22" pos:end="109:22">=</operator> <name pos:start="109:24" pos:end="109:26">val</name> <operator pos:start="109:28" pos:end="109:28">&amp;</operator> <literal type="number" pos:start="109:30" pos:end="109:34">0x7ff</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="111:9" pos:end="111:14">break;</break>

    <case pos:start="113:5" pos:end="113:23">case <expr pos:start="113:10" pos:end="113:22"><literal type="number" pos:start="113:10" pos:end="113:13">0x10</literal> <operator pos:start="113:15" pos:end="113:17">...</operator> <literal type="number" pos:start="113:19" pos:end="113:22">0x1f</literal></expr>:</case>

        <block pos:start="115:9" pos:end="157:9">{<block_content pos:start="117:13" pos:end="155:57">

            <decl_stmt pos:start="117:13" pos:end="117:27"><decl pos:start="117:13" pos:end="117:26"><type pos:start="117:13" pos:end="117:22"><name pos:start="117:13" pos:end="117:20">UHCIPort</name> <modifier pos:start="117:22" pos:end="117:22">*</modifier></type><name pos:start="117:23" pos:end="117:26">port</name></decl>;</decl_stmt>

            <decl_stmt pos:start="119:13" pos:end="119:27"><decl pos:start="119:13" pos:end="119:26"><type pos:start="119:13" pos:end="119:23"><name pos:start="119:13" pos:end="119:21">USBDevice</name> <modifier pos:start="119:23" pos:end="119:23">*</modifier></type><name pos:start="119:24" pos:end="119:26">dev</name></decl>;</decl_stmt>

            <decl_stmt pos:start="121:13" pos:end="121:18"><decl pos:start="121:13" pos:end="121:17"><type pos:start="121:13" pos:end="121:15"><name pos:start="121:13" pos:end="121:15">int</name></type> <name pos:start="121:17" pos:end="121:17">n</name></decl>;</decl_stmt>



            <expr_stmt pos:start="125:13" pos:end="125:32"><expr pos:start="125:13" pos:end="125:31"><name pos:start="125:13" pos:end="125:13">n</name> <operator pos:start="125:15" pos:end="125:15">=</operator> <operator pos:start="125:17" pos:end="125:17">(</operator><name pos:start="125:18" pos:end="125:21">addr</name> <operator pos:start="125:23" pos:end="125:24">&gt;&gt;</operator> <literal type="number" pos:start="125:26" pos:end="125:26">1</literal><operator pos:start="125:27" pos:end="125:27">)</operator> <operator pos:start="125:29" pos:end="125:29">&amp;</operator> <literal type="number" pos:start="125:31" pos:end="125:31">7</literal></expr>;</expr_stmt>

            <if_stmt pos:start="127:13" pos:end="129:23"><if pos:start="127:13" pos:end="129:23">if <condition pos:start="127:16" pos:end="127:30">(<expr pos:start="127:17" pos:end="127:29"><name pos:start="127:17" pos:end="127:17">n</name> <operator pos:start="127:19" pos:end="127:20">&gt;=</operator> <name pos:start="127:22" pos:end="127:29">NB_PORTS</name></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:23"><block_content pos:start="129:17" pos:end="129:23">

                <return pos:start="129:17" pos:end="129:23">return;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:32"><expr pos:start="131:13" pos:end="131:31"><name pos:start="131:13" pos:end="131:16">port</name> <operator pos:start="131:18" pos:end="131:18">=</operator> <operator pos:start="131:20" pos:end="131:20">&amp;</operator><name pos:start="131:21" pos:end="131:31"><name pos:start="131:21" pos:end="131:21">s</name><operator pos:start="131:22" pos:end="131:23">-&gt;</operator><name pos:start="131:24" pos:end="131:28">ports</name><index pos:start="131:29" pos:end="131:31">[<expr pos:start="131:30" pos:end="131:30"><name pos:start="131:30" pos:end="131:30">n</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:33"><expr pos:start="133:13" pos:end="133:32"><name pos:start="133:13" pos:end="133:15">dev</name> <operator pos:start="133:17" pos:end="133:17">=</operator> <name pos:start="133:19" pos:end="133:32"><name pos:start="133:19" pos:end="133:22">port</name><operator pos:start="133:23" pos:end="133:24">-&gt;</operator><name pos:start="133:25" pos:end="133:28">port</name><operator pos:start="133:29" pos:end="133:29">.</operator><name pos:start="133:30" pos:end="133:32">dev</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="135:13" pos:end="147:13"><if pos:start="135:13" pos:end="147:13">if <condition pos:start="135:16" pos:end="135:20">(<expr pos:start="135:17" pos:end="135:19"><name pos:start="135:17" pos:end="135:19">dev</name></expr>)</condition> <block pos:start="135:22" pos:end="147:13">{<block_content pos:start="139:17" pos:end="145:17">

                <comment type="block" pos:start="137:17" pos:end="137:32">/* port reset */</comment>

                <if_stmt pos:start="139:17" pos:end="145:17"><if pos:start="139:17" pos:end="145:17">if <condition pos:start="139:20" pos:end="141:54">( <expr pos:start="139:22" pos:end="141:52"><operator pos:start="139:22" pos:end="139:22">(</operator><name pos:start="139:23" pos:end="139:25">val</name> <operator pos:start="139:27" pos:end="139:27">&amp;</operator> <name pos:start="139:29" pos:end="139:43">UHCI_PORT_RESET</name><operator pos:start="139:44" pos:end="139:44">)</operator> <operator pos:start="139:46" pos:end="139:47">&amp;&amp;</operator>

                     <operator pos:start="141:22" pos:end="141:22">!</operator><operator pos:start="141:23" pos:end="141:23">(</operator><name pos:start="141:24" pos:end="141:33"><name pos:start="141:24" pos:end="141:27">port</name><operator pos:start="141:28" pos:end="141:29">-&gt;</operator><name pos:start="141:30" pos:end="141:33">ctrl</name></name> <operator pos:start="141:35" pos:end="141:35">&amp;</operator> <name pos:start="141:37" pos:end="141:51">UHCI_PORT_RESET</name><operator pos:start="141:52" pos:end="141:52">)</operator></expr> )</condition> <block pos:start="141:56" pos:end="145:17">{<block_content pos:start="143:21" pos:end="143:53">

                    <expr_stmt pos:start="143:21" pos:end="143:53"><expr pos:start="143:21" pos:end="143:52"><call pos:start="143:21" pos:end="143:52"><name pos:start="143:21" pos:end="143:32">usb_send_msg</name><argument_list pos:start="143:33" pos:end="143:52">(<argument pos:start="143:34" pos:end="143:36"><expr pos:start="143:34" pos:end="143:36"><name pos:start="143:34" pos:end="143:36">dev</name></expr></argument>, <argument pos:start="143:39" pos:end="143:51"><expr pos:start="143:39" pos:end="143:51"><name pos:start="143:39" pos:end="143:51">USB_MSG_RESET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:46"><expr pos:start="149:13" pos:end="149:45"><name pos:start="149:13" pos:end="149:22"><name pos:start="149:13" pos:end="149:16">port</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:22">ctrl</name></name> <operator pos:start="149:24" pos:end="149:25">&amp;=</operator> <name pos:start="149:27" pos:end="149:45">UHCI_PORT_READ_ONLY</name></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:55"><expr pos:start="151:13" pos:end="151:54"><name pos:start="151:13" pos:end="151:22"><name pos:start="151:13" pos:end="151:16">port</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:22">ctrl</name></name> <operator pos:start="151:24" pos:end="151:25">|=</operator> <operator pos:start="151:27" pos:end="151:27">(</operator><name pos:start="151:28" pos:end="151:30">val</name> <operator pos:start="151:32" pos:end="151:32">&amp;</operator> <operator pos:start="151:34" pos:end="151:34">~</operator><name pos:start="151:35" pos:end="151:53">UHCI_PORT_READ_ONLY</name><operator pos:start="151:54" pos:end="151:54">)</operator></expr>;</expr_stmt>

            <comment type="block" pos:start="153:13" pos:end="153:67">/* some bits are reset when a '1' is written to them */</comment>

            <expr_stmt pos:start="155:13" pos:end="155:57"><expr pos:start="155:13" pos:end="155:56"><name pos:start="155:13" pos:end="155:22"><name pos:start="155:13" pos:end="155:16">port</name><operator pos:start="155:17" pos:end="155:18">-&gt;</operator><name pos:start="155:19" pos:end="155:22">ctrl</name></name> <operator pos:start="155:24" pos:end="155:25">&amp;=</operator> <operator pos:start="155:27" pos:end="155:27">~</operator><operator pos:start="155:28" pos:end="155:28">(</operator><name pos:start="155:29" pos:end="155:31">val</name> <operator pos:start="155:33" pos:end="155:33">&amp;</operator> <name pos:start="155:35" pos:end="155:55">UHCI_PORT_WRITE_CLEAR</name><operator pos:start="155:56" pos:end="155:56">)</operator></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="159:9" pos:end="159:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
