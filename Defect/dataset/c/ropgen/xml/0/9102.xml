<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9102.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:43">avc_h_loop_filter_chroma422_msa</name><parameter_list pos:start="1:44" pos:end="9:56">(<parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:51">uint8_t</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">src</name></decl></parameter>,

                                            <parameter pos:start="3:45" pos:end="3:58"><decl pos:start="3:45" pos:end="3:58"><type pos:start="3:45" pos:end="3:58"><name pos:start="3:45" pos:end="3:51">int32_t</name></type> <name pos:start="3:53" pos:end="3:58">stride</name></decl></parameter>,

                                            <parameter pos:start="5:45" pos:end="5:60"><decl pos:start="5:45" pos:end="5:60"><type pos:start="5:45" pos:end="5:60"><name pos:start="5:45" pos:end="5:51">int32_t</name></type> <name pos:start="5:53" pos:end="5:60">alpha_in</name></decl></parameter>,

                                            <parameter pos:start="7:45" pos:end="7:59"><decl pos:start="7:45" pos:end="7:59"><type pos:start="7:45" pos:end="7:59"><name pos:start="7:45" pos:end="7:51">int32_t</name></type> <name pos:start="7:53" pos:end="7:59">beta_in</name></decl></parameter>,

                                            <parameter pos:start="9:45" pos:end="9:55"><decl pos:start="9:45" pos:end="9:55"><type pos:start="9:45" pos:end="9:55"><name pos:start="9:45" pos:end="9:50">int8_t</name> <modifier pos:start="9:52" pos:end="9:52">*</modifier></type><name pos:start="9:53" pos:end="9:55">tc0</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="75:1">{<block_content pos:start="13:5" pos:end="73:5">

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int32_t</name></type> <name pos:start="13:13" pos:end="13:15">col</name></decl>, <decl pos:start="13:18" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:18" pos:end="13:23">tc_val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:35"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int16_t</name></type> <name pos:start="15:13" pos:end="15:16">out0</name></decl>, <decl pos:start="15:19" pos:end="15:22"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:19" pos:end="15:22">out1</name></decl>, <decl pos:start="15:25" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:25" pos:end="15:28">out2</name></decl>, <decl pos:start="15:31" pos:end="15:34"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:31" pos:end="15:34">out3</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:9">v16u8</name></type> <name pos:start="17:11" pos:end="17:15">alpha</name></decl>, <decl pos:start="17:18" pos:end="17:21"><type ref="prev" pos:start="17:5" pos:end="17:9"/><name pos:start="17:18" pos:end="17:21">beta</name></decl>, <decl pos:start="17:24" pos:end="17:26"><type ref="prev" pos:start="17:5" pos:end="17:9"/><name pos:start="17:24" pos:end="17:26">res</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:43"><expr pos:start="21:5" pos:end="21:42"><name pos:start="21:5" pos:end="21:9">alpha</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <operator pos:start="21:13" pos:end="21:13">(</operator><name pos:start="21:14" pos:end="21:18">v16u8</name><operator pos:start="21:19" pos:end="21:19">)</operator> <call pos:start="21:21" pos:end="21:42"><name pos:start="21:21" pos:end="21:32">__msa_fill_b</name><argument_list pos:start="21:33" pos:end="21:42">(<argument pos:start="21:34" pos:end="21:41"><expr pos:start="21:34" pos:end="21:41"><name pos:start="21:34" pos:end="21:41">alpha_in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:41"><expr pos:start="23:5" pos:end="23:40"><name pos:start="23:5" pos:end="23:8">beta</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <operator pos:start="23:12" pos:end="23:12">(</operator><name pos:start="23:13" pos:end="23:17">v16u8</name><operator pos:start="23:18" pos:end="23:18">)</operator> <call pos:start="23:20" pos:end="23:40"><name pos:start="23:20" pos:end="23:31">__msa_fill_b</name><argument_list pos:start="23:32" pos:end="23:40">(<argument pos:start="23:33" pos:end="23:39"><expr pos:start="23:33" pos:end="23:39"><name pos:start="23:33" pos:end="23:39">beta_in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="27:5" pos:end="73:5">for <control pos:start="27:9" pos:end="27:33">(<init pos:start="27:10" pos:end="27:17"><expr pos:start="27:10" pos:end="27:16"><name pos:start="27:10" pos:end="27:12">col</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</init> <condition pos:start="27:19" pos:end="27:26"><expr pos:start="27:19" pos:end="27:25"><name pos:start="27:19" pos:end="27:21">col</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <literal type="number" pos:start="27:25" pos:end="27:25">4</literal></expr>;</condition> <incr pos:start="27:28" pos:end="27:32"><expr pos:start="27:28" pos:end="27:32"><name pos:start="27:28" pos:end="27:30">col</name><operator pos:start="27:31" pos:end="27:32">++</operator></expr></incr>)</control> <block pos:start="27:35" pos:end="73:5">{<block_content pos:start="29:9" pos:end="71:22">

        <expr_stmt pos:start="29:9" pos:end="29:36"><expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:14">tc_val</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <operator pos:start="29:18" pos:end="29:18">(</operator><name pos:start="29:19" pos:end="29:26"><name pos:start="29:19" pos:end="29:21">tc0</name><index pos:start="29:22" pos:end="29:26">[<expr pos:start="29:23" pos:end="29:25"><name pos:start="29:23" pos:end="29:25">col</name></expr>]</index></name> <operator pos:start="29:28" pos:end="29:28">-</operator> <literal type="number" pos:start="29:30" pos:end="29:30">1</literal><operator pos:start="29:31" pos:end="29:31">)</operator> <operator pos:start="29:33" pos:end="29:33">+</operator> <literal type="number" pos:start="29:35" pos:end="29:35">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:24">(<expr pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:18">tc_val</name> <operator pos:start="33:20" pos:end="33:21">&lt;=</operator> <literal type="number" pos:start="33:23" pos:end="33:23">0</literal></expr>)</condition> <block pos:start="33:26" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:21">

            <expr_stmt pos:start="35:13" pos:end="35:32"><expr pos:start="35:13" pos:end="35:31"><name pos:start="35:13" pos:end="35:15">src</name> <operator pos:start="35:17" pos:end="35:18">+=</operator> <operator pos:start="35:20" pos:end="35:20">(</operator><literal type="number" pos:start="35:21" pos:end="35:21">4</literal> <operator pos:start="35:23" pos:end="35:23">*</operator> <name pos:start="35:25" pos:end="35:30">stride</name><operator pos:start="35:31" pos:end="35:31">)</operator></expr>;</expr_stmt>

            <continue pos:start="37:13" pos:end="37:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:68"><expr pos:start="43:9" pos:end="43:67"><call pos:start="43:9" pos:end="43:67"><name pos:start="43:9" pos:end="43:28">AVC_LPF_H_CHROMA_422</name><argument_list pos:start="43:29" pos:end="43:67">(<argument pos:start="43:30" pos:end="43:32"><expr pos:start="43:30" pos:end="43:32"><name pos:start="43:30" pos:end="43:32">src</name></expr></argument>, <argument pos:start="43:35" pos:end="43:40"><expr pos:start="43:35" pos:end="43:40"><name pos:start="43:35" pos:end="43:40">stride</name></expr></argument>, <argument pos:start="43:43" pos:end="43:48"><expr pos:start="43:43" pos:end="43:48"><name pos:start="43:43" pos:end="43:48">tc_val</name></expr></argument>, <argument pos:start="43:51" pos:end="43:55"><expr pos:start="43:51" pos:end="43:55"><name pos:start="43:51" pos:end="43:55">alpha</name></expr></argument>, <argument pos:start="43:58" pos:end="43:61"><expr pos:start="43:58" pos:end="43:61"><name pos:start="43:58" pos:end="43:61">beta</name></expr></argument>, <argument pos:start="43:64" pos:end="43:66"><expr pos:start="43:64" pos:end="43:66"><name pos:start="43:64" pos:end="43:66">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:46"><expr pos:start="47:9" pos:end="47:45"><name pos:start="47:9" pos:end="47:12">out0</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:45"><name pos:start="47:16" pos:end="47:29">__msa_copy_s_h</name><argument_list pos:start="47:30" pos:end="47:45">(<argument pos:start="47:31" pos:end="47:41"><expr pos:start="47:31" pos:end="47:41"><operator pos:start="47:31" pos:end="47:31">(</operator><name pos:start="47:32" pos:end="47:36">v8i16</name><operator pos:start="47:37" pos:end="47:37">)</operator> <name pos:start="47:39" pos:end="47:41">res</name></expr></argument>, <argument pos:start="47:44" pos:end="47:44"><expr pos:start="47:44" pos:end="47:44"><literal type="number" pos:start="47:44" pos:end="47:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:46"><expr pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:12">out1</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:45"><name pos:start="49:16" pos:end="49:29">__msa_copy_s_h</name><argument_list pos:start="49:30" pos:end="49:45">(<argument pos:start="49:31" pos:end="49:41"><expr pos:start="49:31" pos:end="49:41"><operator pos:start="49:31" pos:end="49:31">(</operator><name pos:start="49:32" pos:end="49:36">v8i16</name><operator pos:start="49:37" pos:end="49:37">)</operator> <name pos:start="49:39" pos:end="49:41">res</name></expr></argument>, <argument pos:start="49:44" pos:end="49:44"><expr pos:start="49:44" pos:end="49:44"><literal type="number" pos:start="49:44" pos:end="49:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:46"><expr pos:start="51:9" pos:end="51:45"><name pos:start="51:9" pos:end="51:12">out2</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <call pos:start="51:16" pos:end="51:45"><name pos:start="51:16" pos:end="51:29">__msa_copy_s_h</name><argument_list pos:start="51:30" pos:end="51:45">(<argument pos:start="51:31" pos:end="51:41"><expr pos:start="51:31" pos:end="51:41"><operator pos:start="51:31" pos:end="51:31">(</operator><name pos:start="51:32" pos:end="51:36">v8i16</name><operator pos:start="51:37" pos:end="51:37">)</operator> <name pos:start="51:39" pos:end="51:41">res</name></expr></argument>, <argument pos:start="51:44" pos:end="51:44"><expr pos:start="51:44" pos:end="51:44"><literal type="number" pos:start="51:44" pos:end="51:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:46"><expr pos:start="53:9" pos:end="53:45"><name pos:start="53:9" pos:end="53:12">out3</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <call pos:start="53:16" pos:end="53:45"><name pos:start="53:16" pos:end="53:29">__msa_copy_s_h</name><argument_list pos:start="53:30" pos:end="53:45">(<argument pos:start="53:31" pos:end="53:41"><expr pos:start="53:31" pos:end="53:41"><operator pos:start="53:31" pos:end="53:31">(</operator><name pos:start="53:32" pos:end="53:36">v8i16</name><operator pos:start="53:37" pos:end="53:37">)</operator> <name pos:start="53:39" pos:end="53:41">res</name></expr></argument>, <argument pos:start="53:44" pos:end="53:44"><expr pos:start="53:44" pos:end="53:44"><literal type="number" pos:start="53:44" pos:end="53:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:37"><expr pos:start="57:9" pos:end="57:36"><call pos:start="57:9" pos:end="57:36"><name pos:start="57:9" pos:end="57:19">STORE_HWORD</name><argument_list pos:start="57:20" pos:end="57:36">(<argument pos:start="57:21" pos:end="57:29"><expr pos:start="57:21" pos:end="57:29"><operator pos:start="57:21" pos:end="57:21">(</operator><name pos:start="57:22" pos:end="57:24">src</name> <operator pos:start="57:26" pos:end="57:26">-</operator> <literal type="number" pos:start="57:28" pos:end="57:28">1</literal><operator pos:start="57:29" pos:end="57:29">)</operator></expr></argument>, <argument pos:start="57:32" pos:end="57:35"><expr pos:start="57:32" pos:end="57:35"><name pos:start="57:32" pos:end="57:35">out0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:22"><expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:11">src</name> <operator pos:start="59:13" pos:end="59:14">+=</operator> <name pos:start="59:16" pos:end="59:21">stride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:37"><expr pos:start="61:9" pos:end="61:36"><call pos:start="61:9" pos:end="61:36"><name pos:start="61:9" pos:end="61:19">STORE_HWORD</name><argument_list pos:start="61:20" pos:end="61:36">(<argument pos:start="61:21" pos:end="61:29"><expr pos:start="61:21" pos:end="61:29"><operator pos:start="61:21" pos:end="61:21">(</operator><name pos:start="61:22" pos:end="61:24">src</name> <operator pos:start="61:26" pos:end="61:26">-</operator> <literal type="number" pos:start="61:28" pos:end="61:28">1</literal><operator pos:start="61:29" pos:end="61:29">)</operator></expr></argument>, <argument pos:start="61:32" pos:end="61:35"><expr pos:start="61:32" pos:end="61:35"><name pos:start="61:32" pos:end="61:35">out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:22"><expr pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:11">src</name> <operator pos:start="63:13" pos:end="63:14">+=</operator> <name pos:start="63:16" pos:end="63:21">stride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:37"><expr pos:start="65:9" pos:end="65:36"><call pos:start="65:9" pos:end="65:36"><name pos:start="65:9" pos:end="65:19">STORE_HWORD</name><argument_list pos:start="65:20" pos:end="65:36">(<argument pos:start="65:21" pos:end="65:29"><expr pos:start="65:21" pos:end="65:29"><operator pos:start="65:21" pos:end="65:21">(</operator><name pos:start="65:22" pos:end="65:24">src</name> <operator pos:start="65:26" pos:end="65:26">-</operator> <literal type="number" pos:start="65:28" pos:end="65:28">1</literal><operator pos:start="65:29" pos:end="65:29">)</operator></expr></argument>, <argument pos:start="65:32" pos:end="65:35"><expr pos:start="65:32" pos:end="65:35"><name pos:start="65:32" pos:end="65:35">out2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:22"><expr pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:11">src</name> <operator pos:start="67:13" pos:end="67:14">+=</operator> <name pos:start="67:16" pos:end="67:21">stride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:37"><expr pos:start="69:9" pos:end="69:36"><call pos:start="69:9" pos:end="69:36"><name pos:start="69:9" pos:end="69:19">STORE_HWORD</name><argument_list pos:start="69:20" pos:end="69:36">(<argument pos:start="69:21" pos:end="69:29"><expr pos:start="69:21" pos:end="69:29"><operator pos:start="69:21" pos:end="69:21">(</operator><name pos:start="69:22" pos:end="69:24">src</name> <operator pos:start="69:26" pos:end="69:26">-</operator> <literal type="number" pos:start="69:28" pos:end="69:28">1</literal><operator pos:start="69:29" pos:end="69:29">)</operator></expr></argument>, <argument pos:start="69:32" pos:end="69:35"><expr pos:start="69:32" pos:end="69:35"><name pos:start="69:32" pos:end="69:35">out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:22"><expr pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:11">src</name> <operator pos:start="71:13" pos:end="71:14">+=</operator> <name pos:start="71:16" pos:end="71:21">stride</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
