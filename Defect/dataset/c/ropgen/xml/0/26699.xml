<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26699.c" pos:tabs="8"><function pos:start="1:1" pos:end="297:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">coroutine_fn</name> <name pos:start="1:21" pos:end="1:23">int</name></type> <name pos:start="1:25" pos:end="1:40">qcow2_co_pwritev</name><parameter_list pos:start="1:41" pos:end="5:51">(<parameter pos:start="1:42" pos:end="1:61"><decl pos:start="1:42" pos:end="1:61"><type pos:start="1:42" pos:end="1:61"><name pos:start="1:42" pos:end="1:57">BlockDriverState</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">bs</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:78"><decl pos:start="1:64" pos:end="1:78"><type pos:start="1:64" pos:end="1:78"><name pos:start="1:64" pos:end="1:71">uint64_t</name></type> <name pos:start="1:73" pos:end="1:78">offset</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:49">uint64_t</name></type> <name pos:start="3:51" pos:end="3:55">bytes</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:75"><decl pos:start="3:58" pos:end="3:75"><type pos:start="3:58" pos:end="3:75"><name pos:start="3:58" pos:end="3:69">QEMUIOVector</name> <modifier pos:start="3:71" pos:end="3:71">*</modifier></type><name pos:start="3:72" pos:end="3:75">qiov</name></decl></parameter>,

                                         <parameter pos:start="5:42" pos:end="5:50"><decl pos:start="5:42" pos:end="5:50"><type pos:start="5:42" pos:end="5:50"><name pos:start="5:42" pos:end="5:44">int</name></type> <name pos:start="5:46" pos:end="5:50">flags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="297:1">{<block_content pos:start="9:5" pos:end="295:15">

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">BDRVQcow2State</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name> <init pos:start="9:23" pos:end="9:34">= <expr pos:start="9:25" pos:end="9:34"><name pos:start="9:25" pos:end="9:34"><name pos:start="9:25" pos:end="9:26">bs</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:25">offset_in_cluster</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:26">cur_bytes</name></decl>;</decl_stmt> <comment type="block" pos:start="15:29" pos:end="15:72">/* number of sectors in current iteration */</comment>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:27">cluster_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:16">QEMUIOVector</name></type> <name pos:start="19:18" pos:end="19:24">hd_qiov</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:28"><decl pos:start="21:5" pos:end="21:27"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint64_t</name></type> <name pos:start="21:14" pos:end="21:23">bytes_done</name> <init pos:start="21:25" pos:end="21:27">= <expr pos:start="21:27" pos:end="21:27"><literal type="number" pos:start="21:27" pos:end="21:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:33"><decl pos:start="23:5" pos:end="23:32"><type pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:11">uint8_t</name> <modifier pos:start="23:13" pos:end="23:13">*</modifier></type><name pos:start="23:14" pos:end="23:25">cluster_data</name> <init pos:start="23:27" pos:end="23:32">= <expr pos:start="23:29" pos:end="23:32"><name pos:start="23:29" pos:end="23:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:30"><decl pos:start="25:5" pos:end="25:29"><type pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:14">QCowL2Meta</name> <modifier pos:start="25:16" pos:end="25:16">*</modifier></type><name pos:start="25:17" pos:end="25:22">l2meta</name> <init pos:start="25:24" pos:end="25:29">= <expr pos:start="25:26" pos:end="25:29"><name pos:start="25:26" pos:end="25:29">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:71"><expr pos:start="29:5" pos:end="29:70"><call pos:start="29:5" pos:end="29:70"><name pos:start="29:5" pos:end="29:32">trace_qcow2_writev_start_req</name><argument_list pos:start="29:33" pos:end="29:70">(<argument pos:start="29:34" pos:end="29:54"><expr pos:start="29:34" pos:end="29:54"><call pos:start="29:34" pos:end="29:54"><name pos:start="29:34" pos:end="29:52">qemu_coroutine_self</name><argument_list pos:start="29:53" pos:end="29:54">()</argument_list></call></expr></argument>, <argument pos:start="29:57" pos:end="29:62"><expr pos:start="29:57" pos:end="29:62"><name pos:start="29:57" pos:end="29:62">offset</name></expr></argument>, <argument pos:start="29:65" pos:end="29:69"><expr pos:start="29:65" pos:end="29:69"><name pos:start="29:65" pos:end="29:69">bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><call pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:19">qemu_iovec_init</name><argument_list pos:start="33:20" pos:end="33:41">(<argument pos:start="33:21" pos:end="33:28"><expr pos:start="33:21" pos:end="33:28"><operator pos:start="33:21" pos:end="33:21">&amp;</operator><name pos:start="33:22" pos:end="33:28">hd_qiov</name></expr></argument>, <argument pos:start="33:31" pos:end="33:40"><expr pos:start="33:31" pos:end="33:40"><name pos:start="33:31" pos:end="33:40"><name pos:start="33:31" pos:end="33:34">qiov</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:40">niov</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:27">cluster_cache_offset</name></name> <operator pos:start="37:29" pos:end="37:29">=</operator> <operator pos:start="37:31" pos:end="37:31">-</operator><literal type="number" pos:start="37:32" pos:end="37:32">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="37:35" pos:end="37:64">/* disable compressed cache */</comment>



    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><call pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:22">qemu_co_mutex_lock</name><argument_list pos:start="41:23" pos:end="41:32">(<argument pos:start="41:24" pos:end="41:31"><expr pos:start="41:24" pos:end="41:31"><operator pos:start="41:24" pos:end="41:24">&amp;</operator><name pos:start="41:25" pos:end="41:31"><name pos:start="41:25" pos:end="41:25">s</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="45:5" pos:end="249:5">while <condition pos:start="45:11" pos:end="45:22">(<expr pos:start="45:12" pos:end="45:21"><name pos:start="45:12" pos:end="45:16">bytes</name> <operator pos:start="45:18" pos:end="45:19">!=</operator> <literal type="number" pos:start="45:21" pos:end="45:21">0</literal></expr>)</condition> <block pos:start="45:24" pos:end="249:5">{<block_content pos:start="49:9" pos:end="247:71">



        <expr_stmt pos:start="49:9" pos:end="49:22"><expr pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:14">l2meta</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <name pos:start="49:18" pos:end="49:21">NULL</name></expr>;</expr_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:61"><expr pos:start="53:9" pos:end="53:60"><call pos:start="53:9" pos:end="53:60"><name pos:start="53:9" pos:end="53:37">trace_qcow2_writev_start_part</name><argument_list pos:start="53:38" pos:end="53:60">(<argument pos:start="53:39" pos:end="53:59"><expr pos:start="53:39" pos:end="53:59"><call pos:start="53:39" pos:end="53:59"><name pos:start="53:39" pos:end="53:57">qemu_coroutine_self</name><argument_list pos:start="53:58" pos:end="53:59">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:59"><expr pos:start="55:9" pos:end="55:58"><name pos:start="55:9" pos:end="55:25">offset_in_cluster</name> <operator pos:start="55:27" pos:end="55:27">=</operator> <call pos:start="55:29" pos:end="55:58"><name pos:start="55:29" pos:end="55:47">offset_into_cluster</name><argument_list pos:start="55:48" pos:end="55:58">(<argument pos:start="55:49" pos:end="55:49"><expr pos:start="55:49" pos:end="55:49"><name pos:start="55:49" pos:end="55:49">s</name></expr></argument>, <argument pos:start="55:52" pos:end="55:57"><expr pos:start="55:52" pos:end="55:57"><name pos:start="55:52" pos:end="55:57">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:40"><expr pos:start="57:9" pos:end="57:39"><name pos:start="57:9" pos:end="57:17">cur_bytes</name> <operator pos:start="57:19" pos:end="57:19">=</operator> <call pos:start="57:21" pos:end="57:39"><name pos:start="57:21" pos:end="57:23">MIN</name><argument_list pos:start="57:24" pos:end="57:39">(<argument pos:start="57:25" pos:end="57:29"><expr pos:start="57:25" pos:end="57:29"><name pos:start="57:25" pos:end="57:29">bytes</name></expr></argument>, <argument pos:start="57:32" pos:end="57:38"><expr pos:start="57:32" pos:end="57:38"><name pos:start="57:32" pos:end="57:38">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="67:9"><if pos:start="59:9" pos:end="67:9">if <condition pos:start="59:12" pos:end="59:26">(<expr pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:14">bs</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:25">encrypted</name></name></expr>)</condition> <block pos:start="59:28" pos:end="67:9">{<block_content pos:start="61:13" pos:end="65:49">

            <expr_stmt pos:start="61:13" pos:end="65:49"><expr pos:start="61:13" pos:end="65:48"><name pos:start="61:13" pos:end="61:21">cur_bytes</name> <operator pos:start="61:23" pos:end="61:23">=</operator> <call pos:start="61:25" pos:end="65:48"><name pos:start="61:25" pos:end="61:27">MIN</name><argument_list pos:start="61:28" pos:end="65:48">(<argument pos:start="61:29" pos:end="61:37"><expr pos:start="61:29" pos:end="61:37"><name pos:start="61:29" pos:end="61:37">cur_bytes</name></expr></argument>,

                            <argument pos:start="63:29" pos:end="65:47"><expr pos:start="63:29" pos:end="65:47"><name pos:start="63:29" pos:end="63:51">QCOW_MAX_CRYPT_CLUSTERS</name> <operator pos:start="63:53" pos:end="63:53">*</operator> <name pos:start="63:55" pos:end="63:69"><name pos:start="63:55" pos:end="63:55">s</name><operator pos:start="63:56" pos:end="63:57">-&gt;</operator><name pos:start="63:58" pos:end="63:69">cluster_size</name></name>

                            <operator pos:start="65:29" pos:end="65:29">-</operator> <name pos:start="65:31" pos:end="65:47">offset_in_cluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="73:67"><expr pos:start="71:9" pos:end="73:66"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="73:66"><name pos:start="71:15" pos:end="71:40">qcow2_alloc_cluster_offset</name><argument_list pos:start="71:41" pos:end="73:66">(<argument pos:start="71:42" pos:end="71:43"><expr pos:start="71:42" pos:end="71:43"><name pos:start="71:42" pos:end="71:43">bs</name></expr></argument>, <argument pos:start="71:46" pos:end="71:51"><expr pos:start="71:46" pos:end="71:51"><name pos:start="71:46" pos:end="71:51">offset</name></expr></argument>, <argument pos:start="71:54" pos:end="71:63"><expr pos:start="71:54" pos:end="71:63"><operator pos:start="71:54" pos:end="71:54">&amp;</operator><name pos:start="71:55" pos:end="71:63">cur_bytes</name></expr></argument>,

                                         <argument pos:start="73:42" pos:end="73:56"><expr pos:start="73:42" pos:end="73:56"><operator pos:start="73:42" pos:end="73:42">&amp;</operator><name pos:start="73:43" pos:end="73:56">cluster_offset</name></expr></argument>, <argument pos:start="73:59" pos:end="73:65"><expr pos:start="73:59" pos:end="73:65"><operator pos:start="73:59" pos:end="73:59">&amp;</operator><name pos:start="73:60" pos:end="73:65">l2meta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="79:9"><if pos:start="75:9" pos:end="79:9">if <condition pos:start="75:12" pos:end="75:20">(<expr pos:start="75:13" pos:end="75:19"><name pos:start="75:13" pos:end="75:15">ret</name> <operator pos:start="75:17" pos:end="75:17">&lt;</operator> <literal type="number" pos:start="75:19" pos:end="75:19">0</literal></expr>)</condition> <block pos:start="75:22" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:22">

            <goto pos:start="77:13" pos:end="77:22">goto <name pos:start="77:18" pos:end="77:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:44"><expr pos:start="83:9" pos:end="83:43"><call pos:start="83:9" pos:end="83:43"><name pos:start="83:9" pos:end="83:14">assert</name><argument_list pos:start="83:15" pos:end="83:43">(<argument pos:start="83:16" pos:end="83:42"><expr pos:start="83:16" pos:end="83:42"><operator pos:start="83:16" pos:end="83:16">(</operator><name pos:start="83:17" pos:end="83:30">cluster_offset</name> <operator pos:start="83:32" pos:end="83:32">&amp;</operator> <literal type="number" pos:start="83:34" pos:end="83:36">511</literal><operator pos:start="83:37" pos:end="83:37">)</operator> <operator pos:start="83:39" pos:end="83:40">==</operator> <literal type="number" pos:start="83:42" pos:end="83:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:35"><expr pos:start="87:9" pos:end="87:34"><call pos:start="87:9" pos:end="87:34"><name pos:start="87:9" pos:end="87:24">qemu_iovec_reset</name><argument_list pos:start="87:25" pos:end="87:34">(<argument pos:start="87:26" pos:end="87:33"><expr pos:start="87:26" pos:end="87:33"><operator pos:start="87:26" pos:end="87:26">&amp;</operator><name pos:start="87:27" pos:end="87:33">hd_qiov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:65"><expr pos:start="89:9" pos:end="89:64"><call pos:start="89:9" pos:end="89:64"><name pos:start="89:9" pos:end="89:25">qemu_iovec_concat</name><argument_list pos:start="89:26" pos:end="89:64">(<argument pos:start="89:27" pos:end="89:34"><expr pos:start="89:27" pos:end="89:34"><operator pos:start="89:27" pos:end="89:27">&amp;</operator><name pos:start="89:28" pos:end="89:34">hd_qiov</name></expr></argument>, <argument pos:start="89:37" pos:end="89:40"><expr pos:start="89:37" pos:end="89:40"><name pos:start="89:37" pos:end="89:40">qiov</name></expr></argument>, <argument pos:start="89:43" pos:end="89:52"><expr pos:start="89:43" pos:end="89:52"><name pos:start="89:43" pos:end="89:52">bytes_done</name></expr></argument>, <argument pos:start="89:55" pos:end="89:63"><expr pos:start="89:55" pos:end="89:63"><name pos:start="89:55" pos:end="89:63">cur_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="93:9" pos:end="149:9"><if pos:start="93:9" pos:end="149:9">if <condition pos:start="93:12" pos:end="93:26">(<expr pos:start="93:13" pos:end="93:25"><name pos:start="93:13" pos:end="93:25"><name pos:start="93:13" pos:end="93:14">bs</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:25">encrypted</name></name></expr>)</condition> <block pos:start="93:28" pos:end="149:9">{<block_content pos:start="95:13" pos:end="147:62">

            <decl_stmt pos:start="95:13" pos:end="95:30"><decl pos:start="95:13" pos:end="95:29"><type pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:17">Error</name> <modifier pos:start="95:19" pos:end="95:19">*</modifier></type><name pos:start="95:20" pos:end="95:22">err</name> <init pos:start="95:24" pos:end="95:29">= <expr pos:start="95:26" pos:end="95:29"><name pos:start="95:26" pos:end="95:29">NULL</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:30"><expr pos:start="97:13" pos:end="97:29"><call pos:start="97:13" pos:end="97:29"><name pos:start="97:13" pos:end="97:18">assert</name><argument_list pos:start="97:19" pos:end="97:29">(<argument pos:start="97:20" pos:end="97:28"><expr pos:start="97:20" pos:end="97:28"><name pos:start="97:20" pos:end="97:28"><name pos:start="97:20" pos:end="97:20">s</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:28">cipher</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="99:13" pos:end="115:13"><if pos:start="99:13" pos:end="115:13">if <condition pos:start="99:16" pos:end="99:30">(<expr pos:start="99:17" pos:end="99:29"><operator pos:start="99:17" pos:end="99:17">!</operator><name pos:start="99:18" pos:end="99:29">cluster_data</name></expr>)</condition> <block pos:start="99:32" pos:end="115:13">{<block_content pos:start="101:17" pos:end="113:17">

                <expr_stmt pos:start="101:17" pos:end="105:70"><expr pos:start="101:17" pos:end="105:69"><name pos:start="101:17" pos:end="101:28">cluster_data</name> <operator pos:start="101:30" pos:end="101:30">=</operator> <call pos:start="101:32" pos:end="105:69"><name pos:start="101:32" pos:end="101:50">qemu_try_blockalign</name><argument_list pos:start="101:51" pos:end="105:69">(<argument pos:start="101:52" pos:end="101:63"><expr pos:start="101:52" pos:end="101:63"><name pos:start="101:52" pos:end="101:63"><name pos:start="101:52" pos:end="101:53">bs</name><operator pos:start="101:54" pos:end="101:55">-&gt;</operator><name pos:start="101:56" pos:end="101:59">file</name><operator pos:start="101:60" pos:end="101:61">-&gt;</operator><name pos:start="101:62" pos:end="101:63">bs</name></name></expr></argument>,

                                                   <argument pos:start="103:52" pos:end="105:68"><expr pos:start="103:52" pos:end="105:68"><name pos:start="103:52" pos:end="103:74">QCOW_MAX_CRYPT_CLUSTERS</name>

                                                   <operator pos:start="105:52" pos:end="105:52">*</operator> <name pos:start="105:54" pos:end="105:68"><name pos:start="105:54" pos:end="105:54">s</name><operator pos:start="105:55" pos:end="105:56">-&gt;</operator><name pos:start="105:57" pos:end="105:68">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="107:17" pos:end="113:17"><if pos:start="107:17" pos:end="113:17">if <condition pos:start="107:20" pos:end="107:41">(<expr pos:start="107:21" pos:end="107:40"><name pos:start="107:21" pos:end="107:32">cluster_data</name> <operator pos:start="107:34" pos:end="107:35">==</operator> <name pos:start="107:37" pos:end="107:40">NULL</name></expr>)</condition> <block pos:start="107:43" pos:end="113:17">{<block_content pos:start="109:21" pos:end="111:30">

                    <expr_stmt pos:start="109:21" pos:end="109:34"><expr pos:start="109:21" pos:end="109:33"><name pos:start="109:21" pos:end="109:23">ret</name> <operator pos:start="109:25" pos:end="109:25">=</operator> <operator pos:start="109:27" pos:end="109:27">-</operator><name pos:start="109:28" pos:end="109:33">ENOMEM</name></expr>;</expr_stmt>

                    <goto pos:start="111:21" pos:end="111:30">goto <name pos:start="111:26" pos:end="111:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="119:13" pos:end="121:62"><expr pos:start="119:13" pos:end="121:61"><call pos:start="119:13" pos:end="121:61"><name pos:start="119:13" pos:end="119:18">assert</name><argument_list pos:start="119:19" pos:end="121:61">(<argument pos:start="119:20" pos:end="121:60"><expr pos:start="119:20" pos:end="121:60"><name pos:start="119:20" pos:end="119:31"><name pos:start="119:20" pos:end="119:26">hd_qiov</name><operator pos:start="119:27" pos:end="119:27">.</operator><name pos:start="119:28" pos:end="119:31">size</name></name> <operator pos:start="119:33" pos:end="119:34">&lt;=</operator>

                   <name pos:start="121:20" pos:end="121:42">QCOW_MAX_CRYPT_CLUSTERS</name> <operator pos:start="121:44" pos:end="121:44">*</operator> <name pos:start="121:46" pos:end="121:60"><name pos:start="121:46" pos:end="121:46">s</name><operator pos:start="121:47" pos:end="121:48">-&gt;</operator><name pos:start="121:49" pos:end="121:60">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:71"><expr pos:start="123:13" pos:end="123:70"><call pos:start="123:13" pos:end="123:70"><name pos:start="123:13" pos:end="123:29">qemu_iovec_to_buf</name><argument_list pos:start="123:30" pos:end="123:70">(<argument pos:start="123:31" pos:end="123:38"><expr pos:start="123:31" pos:end="123:38"><operator pos:start="123:31" pos:end="123:31">&amp;</operator><name pos:start="123:32" pos:end="123:38">hd_qiov</name></expr></argument>, <argument pos:start="123:41" pos:end="123:41"><expr pos:start="123:41" pos:end="123:41"><literal type="number" pos:start="123:41" pos:end="123:41">0</literal></expr></argument>, <argument pos:start="123:44" pos:end="123:55"><expr pos:start="123:44" pos:end="123:55"><name pos:start="123:44" pos:end="123:55">cluster_data</name></expr></argument>, <argument pos:start="123:58" pos:end="123:69"><expr pos:start="123:58" pos:end="123:69"><name pos:start="123:58" pos:end="123:69"><name pos:start="123:58" pos:end="123:64">hd_qiov</name><operator pos:start="123:65" pos:end="123:65">.</operator><name pos:start="123:66" pos:end="123:69">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="127:13" pos:end="141:13"><if pos:start="127:13" pos:end="141:13">if <condition pos:start="127:16" pos:end="133:54">(<expr pos:start="127:17" pos:end="133:53"><call pos:start="127:17" pos:end="133:49"><name pos:start="127:17" pos:end="127:37">qcow2_encrypt_sectors</name><argument_list pos:start="127:38" pos:end="133:49">(<argument pos:start="127:39" pos:end="127:39"><expr pos:start="127:39" pos:end="127:39"><name pos:start="127:39" pos:end="127:39">s</name></expr></argument>, <argument pos:start="127:42" pos:end="127:67"><expr pos:start="127:42" pos:end="127:67"><name pos:start="127:42" pos:end="127:47">offset</name> <operator pos:start="127:49" pos:end="127:50">&gt;&gt;</operator> <name pos:start="127:52" pos:end="127:67">BDRV_SECTOR_BITS</name></expr></argument>,

                                      <argument pos:start="129:39" pos:end="129:50"><expr pos:start="129:39" pos:end="129:50"><name pos:start="129:39" pos:end="129:50">cluster_data</name></expr></argument>,

                                      <argument pos:start="131:39" pos:end="131:66"><expr pos:start="131:39" pos:end="131:66"><name pos:start="131:39" pos:end="131:47">cur_bytes</name> <operator pos:start="131:49" pos:end="131:50">&gt;&gt;</operator><name pos:start="131:51" pos:end="131:66">BDRV_SECTOR_BITS</name></expr></argument>,

                                      <argument pos:start="133:39" pos:end="133:42"><expr pos:start="133:39" pos:end="133:42"><name pos:start="133:39" pos:end="133:42">true</name></expr></argument>, <argument pos:start="133:45" pos:end="133:48"><expr pos:start="133:45" pos:end="133:48"><operator pos:start="133:45" pos:end="133:45">&amp;</operator><name pos:start="133:46" pos:end="133:48">err</name></expr></argument>)</argument_list></call> <operator pos:start="133:51" pos:end="133:51">&lt;</operator> <literal type="number" pos:start="133:53" pos:end="133:53">0</literal></expr>)</condition> <block pos:start="133:56" pos:end="141:13">{<block_content pos:start="135:17" pos:end="139:26">

                <expr_stmt pos:start="135:17" pos:end="135:32"><expr pos:start="135:17" pos:end="135:31"><call pos:start="135:17" pos:end="135:31"><name pos:start="135:17" pos:end="135:26">error_free</name><argument_list pos:start="135:27" pos:end="135:31">(<argument pos:start="135:28" pos:end="135:30"><expr pos:start="135:28" pos:end="135:30"><name pos:start="135:28" pos:end="135:30">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:27"><expr pos:start="137:17" pos:end="137:26"><name pos:start="137:17" pos:end="137:19">ret</name> <operator pos:start="137:21" pos:end="137:21">=</operator> <operator pos:start="137:23" pos:end="137:23">-</operator><name pos:start="137:24" pos:end="137:26">EIO</name></expr>;</expr_stmt>

                <goto pos:start="139:17" pos:end="139:26">goto <name pos:start="139:22" pos:end="139:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="145:13" pos:end="145:39"><expr pos:start="145:13" pos:end="145:38"><call pos:start="145:13" pos:end="145:38"><name pos:start="145:13" pos:end="145:28">qemu_iovec_reset</name><argument_list pos:start="145:29" pos:end="145:38">(<argument pos:start="145:30" pos:end="145:37"><expr pos:start="145:30" pos:end="145:37"><operator pos:start="145:30" pos:end="145:30">&amp;</operator><name pos:start="145:31" pos:end="145:37">hd_qiov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:62"><expr pos:start="147:13" pos:end="147:61"><call pos:start="147:13" pos:end="147:61"><name pos:start="147:13" pos:end="147:26">qemu_iovec_add</name><argument_list pos:start="147:27" pos:end="147:61">(<argument pos:start="147:28" pos:end="147:35"><expr pos:start="147:28" pos:end="147:35"><operator pos:start="147:28" pos:end="147:28">&amp;</operator><name pos:start="147:29" pos:end="147:35">hd_qiov</name></expr></argument>, <argument pos:start="147:38" pos:end="147:49"><expr pos:start="147:38" pos:end="147:49"><name pos:start="147:38" pos:end="147:49">cluster_data</name></expr></argument>, <argument pos:start="147:52" pos:end="147:60"><expr pos:start="147:52" pos:end="147:60"><name pos:start="147:52" pos:end="147:60">cur_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="153:9" pos:end="155:63"><expr pos:start="153:9" pos:end="155:62"><name pos:start="153:9" pos:end="153:11">ret</name> <operator pos:start="153:13" pos:end="153:13">=</operator> <call pos:start="153:15" pos:end="155:62"><name pos:start="153:15" pos:end="153:43">qcow2_pre_write_overlap_check</name><argument_list pos:start="153:44" pos:end="155:62">(<argument pos:start="153:45" pos:end="153:46"><expr pos:start="153:45" pos:end="153:46"><name pos:start="153:45" pos:end="153:46">bs</name></expr></argument>, <argument pos:start="153:49" pos:end="153:49"><expr pos:start="153:49" pos:end="153:49"><literal type="number" pos:start="153:49" pos:end="153:49">0</literal></expr></argument>,

                <argument pos:start="155:17" pos:end="155:50"><expr pos:start="155:17" pos:end="155:50"><name pos:start="155:17" pos:end="155:30">cluster_offset</name> <operator pos:start="155:32" pos:end="155:32">+</operator> <name pos:start="155:34" pos:end="155:50">offset_in_cluster</name></expr></argument>, <argument pos:start="155:53" pos:end="155:61"><expr pos:start="155:53" pos:end="155:61"><name pos:start="155:53" pos:end="155:61">cur_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="161:9"><if pos:start="157:9" pos:end="161:9">if <condition pos:start="157:12" pos:end="157:20">(<expr pos:start="157:13" pos:end="157:19"><name pos:start="157:13" pos:end="157:15">ret</name> <operator pos:start="157:17" pos:end="157:17">&lt;</operator> <literal type="number" pos:start="157:19" pos:end="157:19">0</literal></expr>)</condition> <block pos:start="157:22" pos:end="161:9">{<block_content pos:start="159:13" pos:end="159:22">

            <goto pos:start="159:13" pos:end="159:22">goto <name pos:start="159:18" pos:end="159:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="165:9" pos:end="171:29">/* If we need to do COW, check if it's possible to merge the

         * writing of the guest data together with that of the COW regions.

         * If it's not possible (or not necessary) then write the

         * guest data now. */</comment>

        <if_stmt pos:start="173:9" pos:end="197:9"><if pos:start="173:9" pos:end="197:9">if <condition pos:start="173:12" pos:end="173:60">(<expr pos:start="173:13" pos:end="173:59"><operator pos:start="173:13" pos:end="173:13">!</operator><call pos:start="173:14" pos:end="173:59"><name pos:start="173:14" pos:end="173:22">merge_cow</name><argument_list pos:start="173:23" pos:end="173:59">(<argument pos:start="173:24" pos:end="173:29"><expr pos:start="173:24" pos:end="173:29"><name pos:start="173:24" pos:end="173:29">offset</name></expr></argument>, <argument pos:start="173:32" pos:end="173:40"><expr pos:start="173:32" pos:end="173:40"><name pos:start="173:32" pos:end="173:40">cur_bytes</name></expr></argument>, <argument pos:start="173:43" pos:end="173:50"><expr pos:start="173:43" pos:end="173:50"><operator pos:start="173:43" pos:end="173:43">&amp;</operator><name pos:start="173:44" pos:end="173:50">hd_qiov</name></expr></argument>, <argument pos:start="173:53" pos:end="173:58"><expr pos:start="173:53" pos:end="173:58"><name pos:start="173:53" pos:end="173:58">l2meta</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="173:62" pos:end="197:9">{<block_content pos:start="175:13" pos:end="195:13">

            <expr_stmt pos:start="175:13" pos:end="175:43"><expr pos:start="175:13" pos:end="175:42"><call pos:start="175:13" pos:end="175:42"><name pos:start="175:13" pos:end="175:32">qemu_co_mutex_unlock</name><argument_list pos:start="175:33" pos:end="175:42">(<argument pos:start="175:34" pos:end="175:41"><expr pos:start="175:34" pos:end="175:41"><operator pos:start="175:34" pos:end="175:34">&amp;</operator><name pos:start="175:35" pos:end="175:41"><name pos:start="175:35" pos:end="175:35">s</name><operator pos:start="175:36" pos:end="175:37">-&gt;</operator><name pos:start="175:38" pos:end="175:41">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:53"><expr pos:start="177:13" pos:end="177:52"><call pos:start="177:13" pos:end="177:52"><name pos:start="177:13" pos:end="177:24">BLKDBG_EVENT</name><argument_list pos:start="177:25" pos:end="177:52">(<argument pos:start="177:26" pos:end="177:33"><expr pos:start="177:26" pos:end="177:33"><name pos:start="177:26" pos:end="177:33"><name pos:start="177:26" pos:end="177:27">bs</name><operator pos:start="177:28" pos:end="177:29">-&gt;</operator><name pos:start="177:30" pos:end="177:33">file</name></name></expr></argument>, <argument pos:start="177:36" pos:end="177:51"><expr pos:start="177:36" pos:end="177:51"><name pos:start="177:36" pos:end="177:51">BLKDBG_WRITE_AIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="181:72"><expr pos:start="179:13" pos:end="181:71"><call pos:start="179:13" pos:end="181:71"><name pos:start="179:13" pos:end="179:35">trace_qcow2_writev_data</name><argument_list pos:start="179:36" pos:end="181:71">(<argument pos:start="179:37" pos:end="179:57"><expr pos:start="179:37" pos:end="179:57"><call pos:start="179:37" pos:end="179:57"><name pos:start="179:37" pos:end="179:55">qemu_coroutine_self</name><argument_list pos:start="179:56" pos:end="179:57">()</argument_list></call></expr></argument>,

                                    <argument pos:start="181:37" pos:end="181:70"><expr pos:start="181:37" pos:end="181:70"><name pos:start="181:37" pos:end="181:50">cluster_offset</name> <operator pos:start="181:52" pos:end="181:52">+</operator> <name pos:start="181:54" pos:end="181:70">offset_in_cluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="187:58"><expr pos:start="183:13" pos:end="187:57"><name pos:start="183:13" pos:end="183:15">ret</name> <operator pos:start="183:17" pos:end="183:17">=</operator> <call pos:start="183:19" pos:end="187:57"><name pos:start="183:19" pos:end="183:33">bdrv_co_pwritev</name><argument_list pos:start="183:34" pos:end="187:57">(<argument pos:start="183:35" pos:end="183:42"><expr pos:start="183:35" pos:end="183:42"><name pos:start="183:35" pos:end="183:42"><name pos:start="183:35" pos:end="183:36">bs</name><operator pos:start="183:37" pos:end="183:38">-&gt;</operator><name pos:start="183:39" pos:end="183:42">file</name></name></expr></argument>,

                                  <argument pos:start="185:35" pos:end="185:68"><expr pos:start="185:35" pos:end="185:68"><name pos:start="185:35" pos:end="185:48">cluster_offset</name> <operator pos:start="185:50" pos:end="185:50">+</operator> <name pos:start="185:52" pos:end="185:68">offset_in_cluster</name></expr></argument>,

                                  <argument pos:start="187:35" pos:end="187:43"><expr pos:start="187:35" pos:end="187:43"><name pos:start="187:35" pos:end="187:43">cur_bytes</name></expr></argument>, <argument pos:start="187:46" pos:end="187:53"><expr pos:start="187:46" pos:end="187:53"><operator pos:start="187:46" pos:end="187:46">&amp;</operator><name pos:start="187:47" pos:end="187:53">hd_qiov</name></expr></argument>, <argument pos:start="187:56" pos:end="187:56"><expr pos:start="187:56" pos:end="187:56"><literal type="number" pos:start="187:56" pos:end="187:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:41"><expr pos:start="189:13" pos:end="189:40"><call pos:start="189:13" pos:end="189:40"><name pos:start="189:13" pos:end="189:30">qemu_co_mutex_lock</name><argument_list pos:start="189:31" pos:end="189:40">(<argument pos:start="189:32" pos:end="189:39"><expr pos:start="189:32" pos:end="189:39"><operator pos:start="189:32" pos:end="189:32">&amp;</operator><name pos:start="189:33" pos:end="189:39"><name pos:start="189:33" pos:end="189:33">s</name><operator pos:start="189:34" pos:end="189:35">-&gt;</operator><name pos:start="189:36" pos:end="189:39">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="191:13" pos:end="195:13"><if pos:start="191:13" pos:end="195:13">if <condition pos:start="191:16" pos:end="191:24">(<expr pos:start="191:17" pos:end="191:23"><name pos:start="191:17" pos:end="191:19">ret</name> <operator pos:start="191:21" pos:end="191:21">&lt;</operator> <literal type="number" pos:start="191:23" pos:end="191:23">0</literal></expr>)</condition> <block pos:start="191:26" pos:end="195:13">{<block_content pos:start="193:17" pos:end="193:26">

                <goto pos:start="193:17" pos:end="193:26">goto <name pos:start="193:22" pos:end="193:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <while pos:start="201:9" pos:end="237:9">while <condition pos:start="201:15" pos:end="201:30">(<expr pos:start="201:16" pos:end="201:29"><name pos:start="201:16" pos:end="201:21">l2meta</name> <operator pos:start="201:23" pos:end="201:24">!=</operator> <name pos:start="201:26" pos:end="201:29">NULL</name></expr>)</condition> <block pos:start="201:32" pos:end="237:9">{<block_content pos:start="203:13" pos:end="235:26">

            <decl_stmt pos:start="203:13" pos:end="203:29"><decl pos:start="203:13" pos:end="203:28"><type pos:start="203:13" pos:end="203:24"><name pos:start="203:13" pos:end="203:22">QCowL2Meta</name> <modifier pos:start="203:24" pos:end="203:24">*</modifier></type><name pos:start="203:25" pos:end="203:28">next</name></decl>;</decl_stmt>



            <expr_stmt pos:start="207:13" pos:end="207:58"><expr pos:start="207:13" pos:end="207:57"><name pos:start="207:13" pos:end="207:15">ret</name> <operator pos:start="207:17" pos:end="207:17">=</operator> <call pos:start="207:19" pos:end="207:57"><name pos:start="207:19" pos:end="207:45">qcow2_alloc_cluster_link_l2</name><argument_list pos:start="207:46" pos:end="207:57">(<argument pos:start="207:47" pos:end="207:48"><expr pos:start="207:47" pos:end="207:48"><name pos:start="207:47" pos:end="207:48">bs</name></expr></argument>, <argument pos:start="207:51" pos:end="207:56"><expr pos:start="207:51" pos:end="207:56"><name pos:start="207:51" pos:end="207:56">l2meta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="209:13" pos:end="213:13"><if pos:start="209:13" pos:end="213:13">if <condition pos:start="209:16" pos:end="209:24">(<expr pos:start="209:17" pos:end="209:23"><name pos:start="209:17" pos:end="209:19">ret</name> <operator pos:start="209:21" pos:end="209:21">&lt;</operator> <literal type="number" pos:start="209:23" pos:end="209:23">0</literal></expr>)</condition> <block pos:start="209:26" pos:end="213:13">{<block_content pos:start="211:17" pos:end="211:26">

                <goto pos:start="211:17" pos:end="211:26">goto <name pos:start="211:22" pos:end="211:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="217:13" pos:end="217:67">/* Take the request off the list of running requests */</comment>

            <if_stmt pos:start="219:13" pos:end="223:13"><if pos:start="219:13" pos:end="223:13">if <condition pos:start="219:16" pos:end="219:41">(<expr pos:start="219:17" pos:end="219:40"><name pos:start="219:17" pos:end="219:35"><name pos:start="219:17" pos:end="219:22">l2meta</name><operator pos:start="219:23" pos:end="219:24">-&gt;</operator><name pos:start="219:25" pos:end="219:35">nb_clusters</name></name> <operator pos:start="219:37" pos:end="219:38">!=</operator> <literal type="number" pos:start="219:40" pos:end="219:40">0</literal></expr>)</condition> <block pos:start="219:43" pos:end="223:13">{<block_content pos:start="221:17" pos:end="221:53">

                <expr_stmt pos:start="221:17" pos:end="221:53"><expr pos:start="221:17" pos:end="221:52"><call pos:start="221:17" pos:end="221:52"><name pos:start="221:17" pos:end="221:28">QLIST_REMOVE</name><argument_list pos:start="221:29" pos:end="221:52">(<argument pos:start="221:30" pos:end="221:35"><expr pos:start="221:30" pos:end="221:35"><name pos:start="221:30" pos:end="221:35">l2meta</name></expr></argument>, <argument pos:start="221:38" pos:end="221:51"><expr pos:start="221:38" pos:end="221:51"><name pos:start="221:38" pos:end="221:51">next_in_flight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="227:13" pos:end="227:67"><expr pos:start="227:13" pos:end="227:66"><call pos:start="227:13" pos:end="227:66"><name pos:start="227:13" pos:end="227:37">qemu_co_queue_restart_all</name><argument_list pos:start="227:38" pos:end="227:66">(<argument pos:start="227:39" pos:end="227:65"><expr pos:start="227:39" pos:end="227:65"><operator pos:start="227:39" pos:end="227:39">&amp;</operator><name pos:start="227:40" pos:end="227:65"><name pos:start="227:40" pos:end="227:45">l2meta</name><operator pos:start="227:46" pos:end="227:47">-&gt;</operator><name pos:start="227:48" pos:end="227:65">dependent_requests</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="231:13" pos:end="231:32"><expr pos:start="231:13" pos:end="231:31"><name pos:start="231:13" pos:end="231:16">next</name> <operator pos:start="231:18" pos:end="231:18">=</operator> <name pos:start="231:20" pos:end="231:31"><name pos:start="231:20" pos:end="231:25">l2meta</name><operator pos:start="231:26" pos:end="231:27">-&gt;</operator><name pos:start="231:28" pos:end="231:31">next</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:27"><expr pos:start="233:13" pos:end="233:26"><call pos:start="233:13" pos:end="233:26"><name pos:start="233:13" pos:end="233:18">g_free</name><argument_list pos:start="233:19" pos:end="233:26">(<argument pos:start="233:20" pos:end="233:25"><expr pos:start="233:20" pos:end="233:25"><name pos:start="233:20" pos:end="233:25">l2meta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:26"><expr pos:start="235:13" pos:end="235:25"><name pos:start="235:13" pos:end="235:18">l2meta</name> <operator pos:start="235:20" pos:end="235:20">=</operator> <name pos:start="235:22" pos:end="235:25">next</name></expr>;</expr_stmt>

        </block_content>}</block></while>



        <expr_stmt pos:start="241:9" pos:end="241:27"><expr pos:start="241:9" pos:end="241:26"><name pos:start="241:9" pos:end="241:13">bytes</name> <operator pos:start="241:15" pos:end="241:16">-=</operator> <name pos:start="241:18" pos:end="241:26">cur_bytes</name></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:28"><expr pos:start="243:9" pos:end="243:27"><name pos:start="243:9" pos:end="243:14">offset</name> <operator pos:start="243:16" pos:end="243:17">+=</operator> <name pos:start="243:19" pos:end="243:27">cur_bytes</name></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:32"><expr pos:start="245:9" pos:end="245:31"><name pos:start="245:9" pos:end="245:18">bytes_done</name> <operator pos:start="245:20" pos:end="245:21">+=</operator> <name pos:start="245:23" pos:end="245:31">cur_bytes</name></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:71"><expr pos:start="247:9" pos:end="247:70"><call pos:start="247:9" pos:end="247:70"><name pos:start="247:9" pos:end="247:36">trace_qcow2_writev_done_part</name><argument_list pos:start="247:37" pos:end="247:70">(<argument pos:start="247:38" pos:end="247:58"><expr pos:start="247:38" pos:end="247:58"><call pos:start="247:38" pos:end="247:58"><name pos:start="247:38" pos:end="247:56">qemu_coroutine_self</name><argument_list pos:start="247:57" pos:end="247:58">()</argument_list></call></expr></argument>, <argument pos:start="247:61" pos:end="247:69"><expr pos:start="247:61" pos:end="247:69"><name pos:start="247:61" pos:end="247:69">cur_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="251:5" pos:end="251:12"><expr pos:start="251:5" pos:end="251:11"><name pos:start="251:5" pos:end="251:7">ret</name> <operator pos:start="251:9" pos:end="251:9">=</operator> <literal type="number" pos:start="251:11" pos:end="251:11">0</literal></expr>;</expr_stmt>



<label pos:start="255:1" pos:end="255:5"><name pos:start="255:1" pos:end="255:4">fail</name>:</label>

    <expr_stmt pos:start="257:5" pos:end="257:35"><expr pos:start="257:5" pos:end="257:34"><call pos:start="257:5" pos:end="257:34"><name pos:start="257:5" pos:end="257:24">qemu_co_mutex_unlock</name><argument_list pos:start="257:25" pos:end="257:34">(<argument pos:start="257:26" pos:end="257:33"><expr pos:start="257:26" pos:end="257:33"><operator pos:start="257:26" pos:end="257:26">&amp;</operator><name pos:start="257:27" pos:end="257:33"><name pos:start="257:27" pos:end="257:27">s</name><operator pos:start="257:28" pos:end="257:29">-&gt;</operator><name pos:start="257:30" pos:end="257:33">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="261:5" pos:end="283:5">while <condition pos:start="261:11" pos:end="261:26">(<expr pos:start="261:12" pos:end="261:25"><name pos:start="261:12" pos:end="261:17">l2meta</name> <operator pos:start="261:19" pos:end="261:20">!=</operator> <name pos:start="261:22" pos:end="261:25">NULL</name></expr>)</condition> <block pos:start="261:28" pos:end="283:5">{<block_content pos:start="263:9" pos:end="281:22">

        <decl_stmt pos:start="263:9" pos:end="263:25"><decl pos:start="263:9" pos:end="263:24"><type pos:start="263:9" pos:end="263:20"><name pos:start="263:9" pos:end="263:18">QCowL2Meta</name> <modifier pos:start="263:20" pos:end="263:20">*</modifier></type><name pos:start="263:21" pos:end="263:24">next</name></decl>;</decl_stmt>



        <if_stmt pos:start="267:9" pos:end="271:9"><if pos:start="267:9" pos:end="271:9">if <condition pos:start="267:12" pos:end="267:37">(<expr pos:start="267:13" pos:end="267:36"><name pos:start="267:13" pos:end="267:31"><name pos:start="267:13" pos:end="267:18">l2meta</name><operator pos:start="267:19" pos:end="267:20">-&gt;</operator><name pos:start="267:21" pos:end="267:31">nb_clusters</name></name> <operator pos:start="267:33" pos:end="267:34">!=</operator> <literal type="number" pos:start="267:36" pos:end="267:36">0</literal></expr>)</condition> <block pos:start="267:39" pos:end="271:9">{<block_content pos:start="269:13" pos:end="269:49">

            <expr_stmt pos:start="269:13" pos:end="269:49"><expr pos:start="269:13" pos:end="269:48"><call pos:start="269:13" pos:end="269:48"><name pos:start="269:13" pos:end="269:24">QLIST_REMOVE</name><argument_list pos:start="269:25" pos:end="269:48">(<argument pos:start="269:26" pos:end="269:31"><expr pos:start="269:26" pos:end="269:31"><name pos:start="269:26" pos:end="269:31">l2meta</name></expr></argument>, <argument pos:start="269:34" pos:end="269:47"><expr pos:start="269:34" pos:end="269:47"><name pos:start="269:34" pos:end="269:47">next_in_flight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:63"><expr pos:start="273:9" pos:end="273:62"><call pos:start="273:9" pos:end="273:62"><name pos:start="273:9" pos:end="273:33">qemu_co_queue_restart_all</name><argument_list pos:start="273:34" pos:end="273:62">(<argument pos:start="273:35" pos:end="273:61"><expr pos:start="273:35" pos:end="273:61"><operator pos:start="273:35" pos:end="273:35">&amp;</operator><name pos:start="273:36" pos:end="273:61"><name pos:start="273:36" pos:end="273:41">l2meta</name><operator pos:start="273:42" pos:end="273:43">-&gt;</operator><name pos:start="273:44" pos:end="273:61">dependent_requests</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="277:9" pos:end="277:28"><expr pos:start="277:9" pos:end="277:27"><name pos:start="277:9" pos:end="277:12">next</name> <operator pos:start="277:14" pos:end="277:14">=</operator> <name pos:start="277:16" pos:end="277:27"><name pos:start="277:16" pos:end="277:21">l2meta</name><operator pos:start="277:22" pos:end="277:23">-&gt;</operator><name pos:start="277:24" pos:end="277:27">next</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:23"><expr pos:start="279:9" pos:end="279:22"><call pos:start="279:9" pos:end="279:22"><name pos:start="279:9" pos:end="279:14">g_free</name><argument_list pos:start="279:15" pos:end="279:22">(<argument pos:start="279:16" pos:end="279:21"><expr pos:start="279:16" pos:end="279:21"><name pos:start="279:16" pos:end="279:21">l2meta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:22"><expr pos:start="281:9" pos:end="281:21"><name pos:start="281:9" pos:end="281:14">l2meta</name> <operator pos:start="281:16" pos:end="281:16">=</operator> <name pos:start="281:18" pos:end="281:21">next</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="287:5" pos:end="287:33"><expr pos:start="287:5" pos:end="287:32"><call pos:start="287:5" pos:end="287:32"><name pos:start="287:5" pos:end="287:22">qemu_iovec_destroy</name><argument_list pos:start="287:23" pos:end="287:32">(<argument pos:start="287:24" pos:end="287:31"><expr pos:start="287:24" pos:end="287:31"><operator pos:start="287:24" pos:end="287:24">&amp;</operator><name pos:start="287:25" pos:end="287:31">hd_qiov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="289:5" pos:end="289:29"><expr pos:start="289:5" pos:end="289:28"><call pos:start="289:5" pos:end="289:28"><name pos:start="289:5" pos:end="289:14">qemu_vfree</name><argument_list pos:start="289:15" pos:end="289:28">(<argument pos:start="289:16" pos:end="289:27"><expr pos:start="289:16" pos:end="289:27"><name pos:start="289:16" pos:end="289:27">cluster_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="291:5" pos:end="291:60"><expr pos:start="291:5" pos:end="291:59"><call pos:start="291:5" pos:end="291:59"><name pos:start="291:5" pos:end="291:31">trace_qcow2_writev_done_req</name><argument_list pos:start="291:32" pos:end="291:59">(<argument pos:start="291:33" pos:end="291:53"><expr pos:start="291:33" pos:end="291:53"><call pos:start="291:33" pos:end="291:53"><name pos:start="291:33" pos:end="291:51">qemu_coroutine_self</name><argument_list pos:start="291:52" pos:end="291:53">()</argument_list></call></expr></argument>, <argument pos:start="291:56" pos:end="291:58"><expr pos:start="291:56" pos:end="291:58"><name pos:start="291:56" pos:end="291:58">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="295:5" pos:end="295:15">return <expr pos:start="295:12" pos:end="295:14"><name pos:start="295:12" pos:end="295:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
