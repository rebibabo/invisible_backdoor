<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/680.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:27">do_imdct</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:47"><decl pos:start="1:29" pos:end="1:47"><type pos:start="1:29" pos:end="1:47"><name pos:start="1:29" pos:end="1:44">AC3DecodeContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:61">channels</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">ch</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="41:5">for <control pos:start="9:9" pos:end="9:34">(<init pos:start="9:10" pos:end="9:14"><expr pos:start="9:10" pos:end="9:13"><name pos:start="9:10" pos:end="9:11">ch</name><operator pos:start="9:12" pos:end="9:12">=</operator><literal type="number" pos:start="9:13" pos:end="9:13">1</literal></expr>;</init> <condition pos:start="9:16" pos:end="9:28"><expr pos:start="9:16" pos:end="9:27"><name pos:start="9:16" pos:end="9:17">ch</name><operator pos:start="9:18" pos:end="9:19">&lt;=</operator><name pos:start="9:20" pos:end="9:27">channels</name></expr>;</condition> <incr pos:start="9:30" pos:end="9:33"><expr pos:start="9:30" pos:end="9:33"><name pos:start="9:30" pos:end="9:31">ch</name><operator pos:start="9:32" pos:end="9:33">++</operator></expr></incr>)</control> <block pos:start="9:36" pos:end="41:5">{<block_content pos:start="11:9" pos:end="39:9">

        <if_stmt pos:start="11:9" pos:end="39:9"><if pos:start="11:9" pos:end="31:9">if <condition pos:start="11:12" pos:end="11:32">(<expr pos:start="11:13" pos:end="11:31"><name pos:start="11:13" pos:end="11:31"><name pos:start="11:13" pos:end="11:13">s</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:27">block_switch</name><index pos:start="11:28" pos:end="11:31">[<expr pos:start="11:29" pos:end="11:30"><name pos:start="11:29" pos:end="11:30">ch</name></expr>]</index></name></expr>)</condition> <block pos:start="11:34" pos:end="31:9">{<block_content pos:start="13:13" pos:end="29:60">

            <decl_stmt pos:start="13:13" pos:end="13:18"><decl pos:start="13:13" pos:end="13:17"><type pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:15">int</name></type> <name pos:start="13:17" pos:end="13:17">i</name></decl>;</decl_stmt>

            <decl_stmt pos:start="15:13" pos:end="15:41"><decl pos:start="15:13" pos:end="15:40"><type pos:start="15:13" pos:end="15:19"><name pos:start="15:13" pos:end="15:17">float</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:20">x</name> <init pos:start="15:22" pos:end="15:40">= <expr pos:start="15:24" pos:end="15:40"><name pos:start="15:24" pos:end="15:36"><name pos:start="15:24" pos:end="15:24">s</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:36">tmp_output</name></name><operator pos:start="15:37" pos:end="15:37">+</operator><literal type="number" pos:start="15:38" pos:end="15:40">128</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="17:13" pos:end="19:52">for<control pos:start="17:16" pos:end="17:32">(<init pos:start="17:17" pos:end="17:20"><expr pos:start="17:17" pos:end="17:19"><name pos:start="17:17" pos:end="17:17">i</name><operator pos:start="17:18" pos:end="17:18">=</operator><literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr>;</init> <condition pos:start="17:22" pos:end="17:27"><expr pos:start="17:22" pos:end="17:26"><name pos:start="17:22" pos:end="17:22">i</name><operator pos:start="17:23" pos:end="17:23">&lt;</operator><literal type="number" pos:start="17:24" pos:end="17:26">128</literal></expr>;</condition> <incr pos:start="17:29" pos:end="17:31"><expr pos:start="17:29" pos:end="17:31"><name pos:start="17:29" pos:end="17:29">i</name><operator pos:start="17:30" pos:end="17:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="19:17" pos:end="19:52"><block_content pos:start="19:17" pos:end="19:52">

                <expr_stmt pos:start="19:17" pos:end="19:52"><expr pos:start="19:17" pos:end="19:51"><name pos:start="19:17" pos:end="19:20"><name pos:start="19:17" pos:end="19:17">x</name><index pos:start="19:18" pos:end="19:20">[<expr pos:start="19:19" pos:end="19:19"><name pos:start="19:19" pos:end="19:19">i</name></expr>]</index></name> <operator pos:start="19:22" pos:end="19:22">=</operator> <name pos:start="19:24" pos:end="19:51"><name pos:start="19:24" pos:end="19:24">s</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:42">transform_coeffs</name><index pos:start="19:43" pos:end="19:46">[<expr pos:start="19:44" pos:end="19:45"><name pos:start="19:44" pos:end="19:45">ch</name></expr>]</index><index pos:start="19:47" pos:end="19:51">[<expr pos:start="19:48" pos:end="19:50"><literal type="number" pos:start="19:48" pos:end="19:48">2</literal><operator pos:start="19:49" pos:end="19:49">*</operator><name pos:start="19:50" pos:end="19:50">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="21:13" pos:end="21:59"><expr pos:start="21:13" pos:end="21:58"><call pos:start="21:13" pos:end="21:58"><name pos:start="21:13" pos:end="21:25">ff_imdct_half</name><argument_list pos:start="21:26" pos:end="21:58">(<argument pos:start="21:27" pos:end="21:39"><expr pos:start="21:27" pos:end="21:39"><operator pos:start="21:27" pos:end="21:27">&amp;</operator><name pos:start="21:28" pos:end="21:39"><name pos:start="21:28" pos:end="21:28">s</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:39">imdct_256</name></name></expr></argument>, <argument pos:start="21:42" pos:end="21:54"><expr pos:start="21:42" pos:end="21:54"><name pos:start="21:42" pos:end="21:54"><name pos:start="21:42" pos:end="21:42">s</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:54">tmp_output</name></name></expr></argument>, <argument pos:start="21:57" pos:end="21:57"><expr pos:start="21:57" pos:end="21:57"><name pos:start="21:57" pos:end="21:57">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:115"><expr pos:start="23:13" pos:end="23:114"><call pos:start="23:13" pos:end="23:114"><name pos:start="23:13" pos:end="23:37"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:18">dsp</name><operator pos:start="23:19" pos:end="23:19">.</operator><name pos:start="23:20" pos:end="23:37">vector_fmul_window</name></name><argument_list pos:start="23:38" pos:end="23:114">(<argument pos:start="23:39" pos:end="23:53"><expr pos:start="23:39" pos:end="23:53"><name pos:start="23:39" pos:end="23:53"><name pos:start="23:39" pos:end="23:39">s</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:47">output</name><index pos:start="23:48" pos:end="23:53">[<expr pos:start="23:49" pos:end="23:52"><name pos:start="23:49" pos:end="23:50">ch</name><operator pos:start="23:51" pos:end="23:51">-</operator><literal type="number" pos:start="23:52" pos:end="23:52">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="23:56" pos:end="23:69"><expr pos:start="23:56" pos:end="23:69"><name pos:start="23:56" pos:end="23:69"><name pos:start="23:56" pos:end="23:56">s</name><operator pos:start="23:57" pos:end="23:58">-&gt;</operator><name pos:start="23:59" pos:end="23:63">delay</name><index pos:start="23:64" pos:end="23:69">[<expr pos:start="23:65" pos:end="23:68"><name pos:start="23:65" pos:end="23:66">ch</name><operator pos:start="23:67" pos:end="23:67">-</operator><literal type="number" pos:start="23:68" pos:end="23:68">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="23:72" pos:end="23:84"><expr pos:start="23:72" pos:end="23:84"><name pos:start="23:72" pos:end="23:84"><name pos:start="23:72" pos:end="23:72">s</name><operator pos:start="23:73" pos:end="23:74">-&gt;</operator><name pos:start="23:75" pos:end="23:84">tmp_output</name></name></expr></argument>, <argument pos:start="23:87" pos:end="23:95"><expr pos:start="23:87" pos:end="23:95"><name pos:start="23:87" pos:end="23:95"><name pos:start="23:87" pos:end="23:87">s</name><operator pos:start="23:88" pos:end="23:89">-&gt;</operator><name pos:start="23:90" pos:end="23:95">window</name></name></expr></argument>, <argument pos:start="23:98" pos:end="23:108"><expr pos:start="23:98" pos:end="23:108"><name pos:start="23:98" pos:end="23:108"><name pos:start="23:98" pos:end="23:98">s</name><operator pos:start="23:99" pos:end="23:100">-&gt;</operator><name pos:start="23:101" pos:end="23:108">add_bias</name></name></expr></argument>, <argument pos:start="23:111" pos:end="23:113"><expr pos:start="23:111" pos:end="23:113"><literal type="number" pos:start="23:111" pos:end="23:113">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="25:13" pos:end="27:54">for<control pos:start="25:16" pos:end="25:32">(<init pos:start="25:17" pos:end="25:20"><expr pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:17">i</name><operator pos:start="25:18" pos:end="25:18">=</operator><literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr>;</init> <condition pos:start="25:22" pos:end="25:27"><expr pos:start="25:22" pos:end="25:26"><name pos:start="25:22" pos:end="25:22">i</name><operator pos:start="25:23" pos:end="25:23">&lt;</operator><literal type="number" pos:start="25:24" pos:end="25:26">128</literal></expr>;</condition> <incr pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><name pos:start="25:29" pos:end="25:29">i</name><operator pos:start="25:30" pos:end="25:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:17" pos:end="27:54"><block_content pos:start="27:17" pos:end="27:54">

                <expr_stmt pos:start="27:17" pos:end="27:54"><expr pos:start="27:17" pos:end="27:53"><name pos:start="27:17" pos:end="27:20"><name pos:start="27:17" pos:end="27:17">x</name><index pos:start="27:18" pos:end="27:20">[<expr pos:start="27:19" pos:end="27:19"><name pos:start="27:19" pos:end="27:19">i</name></expr>]</index></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:53"><name pos:start="27:24" pos:end="27:24">s</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:42">transform_coeffs</name><index pos:start="27:43" pos:end="27:46">[<expr pos:start="27:44" pos:end="27:45"><name pos:start="27:44" pos:end="27:45">ch</name></expr>]</index><index pos:start="27:47" pos:end="27:53">[<expr pos:start="27:48" pos:end="27:52"><literal type="number" pos:start="27:48" pos:end="27:48">2</literal><operator pos:start="27:49" pos:end="27:49">*</operator><name pos:start="27:50" pos:end="27:50">i</name><operator pos:start="27:51" pos:end="27:51">+</operator><literal type="number" pos:start="27:52" pos:end="27:52">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="29:13" pos:end="29:60"><expr pos:start="29:13" pos:end="29:59"><call pos:start="29:13" pos:end="29:59"><name pos:start="29:13" pos:end="29:25">ff_imdct_half</name><argument_list pos:start="29:26" pos:end="29:59">(<argument pos:start="29:27" pos:end="29:39"><expr pos:start="29:27" pos:end="29:39"><operator pos:start="29:27" pos:end="29:27">&amp;</operator><name pos:start="29:28" pos:end="29:39"><name pos:start="29:28" pos:end="29:28">s</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:39">imdct_256</name></name></expr></argument>, <argument pos:start="29:42" pos:end="29:55"><expr pos:start="29:42" pos:end="29:55"><name pos:start="29:42" pos:end="29:55"><name pos:start="29:42" pos:end="29:42">s</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:49">delay</name><index pos:start="29:50" pos:end="29:55">[<expr pos:start="29:51" pos:end="29:54"><name pos:start="29:51" pos:end="29:52">ch</name><operator pos:start="29:53" pos:end="29:53">-</operator><literal type="number" pos:start="29:54" pos:end="29:54">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="29:58" pos:end="29:58"><expr pos:start="29:58" pos:end="29:58"><name pos:start="29:58" pos:end="29:58">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="39:9">else <block pos:start="31:16" pos:end="39:9">{<block_content pos:start="33:13" pos:end="37:73">

            <expr_stmt pos:start="33:13" pos:end="33:81"><expr pos:start="33:13" pos:end="33:80"><call pos:start="33:13" pos:end="33:80"><name pos:start="33:13" pos:end="33:25">ff_imdct_half</name><argument_list pos:start="33:26" pos:end="33:80">(<argument pos:start="33:27" pos:end="33:39"><expr pos:start="33:27" pos:end="33:39"><operator pos:start="33:27" pos:end="33:27">&amp;</operator><name pos:start="33:28" pos:end="33:39"><name pos:start="33:28" pos:end="33:28">s</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:39">imdct_512</name></name></expr></argument>, <argument pos:start="33:42" pos:end="33:54"><expr pos:start="33:42" pos:end="33:54"><name pos:start="33:42" pos:end="33:54"><name pos:start="33:42" pos:end="33:42">s</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:54">tmp_output</name></name></expr></argument>, <argument pos:start="33:57" pos:end="33:79"><expr pos:start="33:57" pos:end="33:79"><name pos:start="33:57" pos:end="33:79"><name pos:start="33:57" pos:end="33:57">s</name><operator pos:start="33:58" pos:end="33:59">-&gt;</operator><name pos:start="33:60" pos:end="33:75">transform_coeffs</name><index pos:start="33:76" pos:end="33:79">[<expr pos:start="33:77" pos:end="33:78"><name pos:start="33:77" pos:end="33:78">ch</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:115"><expr pos:start="35:13" pos:end="35:114"><call pos:start="35:13" pos:end="35:114"><name pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:18">dsp</name><operator pos:start="35:19" pos:end="35:19">.</operator><name pos:start="35:20" pos:end="35:37">vector_fmul_window</name></name><argument_list pos:start="35:38" pos:end="35:114">(<argument pos:start="35:39" pos:end="35:53"><expr pos:start="35:39" pos:end="35:53"><name pos:start="35:39" pos:end="35:53"><name pos:start="35:39" pos:end="35:39">s</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:47">output</name><index pos:start="35:48" pos:end="35:53">[<expr pos:start="35:49" pos:end="35:52"><name pos:start="35:49" pos:end="35:50">ch</name><operator pos:start="35:51" pos:end="35:51">-</operator><literal type="number" pos:start="35:52" pos:end="35:52">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="35:56" pos:end="35:69"><expr pos:start="35:56" pos:end="35:69"><name pos:start="35:56" pos:end="35:69"><name pos:start="35:56" pos:end="35:56">s</name><operator pos:start="35:57" pos:end="35:58">-&gt;</operator><name pos:start="35:59" pos:end="35:63">delay</name><index pos:start="35:64" pos:end="35:69">[<expr pos:start="35:65" pos:end="35:68"><name pos:start="35:65" pos:end="35:66">ch</name><operator pos:start="35:67" pos:end="35:67">-</operator><literal type="number" pos:start="35:68" pos:end="35:68">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="35:72" pos:end="35:84"><expr pos:start="35:72" pos:end="35:84"><name pos:start="35:72" pos:end="35:84"><name pos:start="35:72" pos:end="35:72">s</name><operator pos:start="35:73" pos:end="35:74">-&gt;</operator><name pos:start="35:75" pos:end="35:84">tmp_output</name></name></expr></argument>, <argument pos:start="35:87" pos:end="35:95"><expr pos:start="35:87" pos:end="35:95"><name pos:start="35:87" pos:end="35:95"><name pos:start="35:87" pos:end="35:87">s</name><operator pos:start="35:88" pos:end="35:89">-&gt;</operator><name pos:start="35:90" pos:end="35:95">window</name></name></expr></argument>, <argument pos:start="35:98" pos:end="35:108"><expr pos:start="35:98" pos:end="35:108"><name pos:start="35:98" pos:end="35:108"><name pos:start="35:98" pos:end="35:98">s</name><operator pos:start="35:99" pos:end="35:100">-&gt;</operator><name pos:start="35:101" pos:end="35:108">add_bias</name></name></expr></argument>, <argument pos:start="35:111" pos:end="35:113"><expr pos:start="35:111" pos:end="35:113"><literal type="number" pos:start="35:111" pos:end="35:113">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:73"><expr pos:start="37:13" pos:end="37:72"><call pos:start="37:13" pos:end="37:72"><name pos:start="37:13" pos:end="37:18">memcpy</name><argument_list pos:start="37:19" pos:end="37:72">(<argument pos:start="37:20" pos:end="37:33"><expr pos:start="37:20" pos:end="37:33"><name pos:start="37:20" pos:end="37:33"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:27">delay</name><index pos:start="37:28" pos:end="37:33">[<expr pos:start="37:29" pos:end="37:32"><name pos:start="37:29" pos:end="37:30">ch</name><operator pos:start="37:31" pos:end="37:31">-</operator><literal type="number" pos:start="37:32" pos:end="37:32">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="37:36" pos:end="37:52"><expr pos:start="37:36" pos:end="37:52"><name pos:start="37:36" pos:end="37:48"><name pos:start="37:36" pos:end="37:36">s</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:48">tmp_output</name></name><operator pos:start="37:49" pos:end="37:49">+</operator><literal type="number" pos:start="37:50" pos:end="37:52">128</literal></expr></argument>, <argument pos:start="37:55" pos:end="37:71"><expr pos:start="37:55" pos:end="37:71"><literal type="number" pos:start="37:55" pos:end="37:57">128</literal><operator pos:start="37:58" pos:end="37:58">*</operator><sizeof pos:start="37:59" pos:end="37:71">sizeof<argument_list pos:start="37:65" pos:end="37:71">(<argument pos:start="37:66" pos:end="37:70"><expr pos:start="37:66" pos:end="37:70"><name pos:start="37:66" pos:end="37:70">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
