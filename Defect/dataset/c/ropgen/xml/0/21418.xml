<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21418.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">long</name></type> <name pos:start="1:6" pos:end="1:17">do_sigreturn</name><parameter_list pos:start="1:18" pos:end="1:36">(<parameter pos:start="1:19" pos:end="1:35"><decl pos:start="1:19" pos:end="1:35"><type pos:start="1:19" pos:end="1:32"><name pos:start="1:19" pos:end="1:30">CPUCRISState</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:9" pos:end="57:34">

	<decl_stmt pos:start="5:9" pos:end="5:42"><decl pos:start="5:9" pos:end="5:41"><type pos:start="5:9" pos:end="5:36"><name pos:start="5:9" pos:end="5:34"><name pos:start="5:9" pos:end="5:14">struct</name> <name pos:start="5:16" pos:end="5:34">target_signal_frame</name></name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:41">frame</name></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:29"><decl pos:start="7:9" pos:end="7:28"><type pos:start="7:9" pos:end="7:17"><name pos:start="7:9" pos:end="7:17">abi_ulong</name></type> <name pos:start="7:19" pos:end="7:28">frame_addr</name></decl>;</decl_stmt>

	<decl_stmt pos:start="9:9" pos:end="9:35"><decl pos:start="9:9" pos:end="9:34"><type pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:23">target_sigset_t</name></type> <name pos:start="9:25" pos:end="9:34">target_set</name></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:21"><decl pos:start="11:9" pos:end="11:20"><type pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:16">sigset_t</name></type> <name pos:start="11:18" pos:end="11:20">set</name></decl>;</decl_stmt>

	<decl_stmt pos:start="13:9" pos:end="13:14"><decl pos:start="13:9" pos:end="13:13"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">i</name></decl>;</decl_stmt>



	<expr_stmt pos:start="17:9" pos:end="17:37"><expr pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:18">frame_addr</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:36"><name pos:start="17:22" pos:end="17:24">env</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:30">regs</name><index pos:start="17:31" pos:end="17:36">[<expr pos:start="17:32" pos:end="17:35"><name pos:start="17:32" pos:end="17:35">R_SP</name></expr>]</index></name></expr>;</expr_stmt>

	<comment type="block" pos:start="19:9" pos:end="19:55">/* Make sure the guest isn't playing games.  */</comment>

	<if_stmt pos:start="21:9" pos:end="23:30"><if pos:start="21:9" pos:end="23:30">if <condition pos:start="21:12" pos:end="21:66">(<expr pos:start="21:13" pos:end="21:65"><operator pos:start="21:13" pos:end="21:13">!</operator><call pos:start="21:14" pos:end="21:65"><name pos:start="21:14" pos:end="21:29">lock_user_struct</name><argument_list pos:start="21:30" pos:end="21:65">(<argument pos:start="21:31" pos:end="21:42"><expr pos:start="21:31" pos:end="21:42"><name pos:start="21:31" pos:end="21:42">VERIFY_WRITE</name></expr></argument>, <argument pos:start="21:45" pos:end="21:49"><expr pos:start="21:45" pos:end="21:49"><name pos:start="21:45" pos:end="21:49">frame</name></expr></argument>, <argument pos:start="21:52" pos:end="21:61"><expr pos:start="21:52" pos:end="21:61"><name pos:start="21:52" pos:end="21:61">frame_addr</name></expr></argument>, <argument pos:start="21:64" pos:end="21:64"><expr pos:start="21:64" pos:end="21:64"><literal type="number" pos:start="21:64" pos:end="21:64">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:17" pos:end="23:30"><block_content pos:start="23:17" pos:end="23:30">

		<goto pos:start="23:17" pos:end="23:30">goto <name pos:start="23:22" pos:end="23:29">badframe</name>;</goto></block_content></block></if></if_stmt>



	<comment type="block" pos:start="27:9" pos:end="27:37">/* Restore blocked signals */</comment>

	<if_stmt pos:start="29:9" pos:end="31:30"><if pos:start="29:9" pos:end="31:30">if <condition pos:start="29:12" pos:end="29:62">(<expr pos:start="29:13" pos:end="29:61"><call pos:start="29:13" pos:end="29:61"><name pos:start="29:13" pos:end="29:22">__get_user</name><argument_list pos:start="29:23" pos:end="29:61">(<argument pos:start="29:24" pos:end="29:40"><expr pos:start="29:24" pos:end="29:40"><name pos:start="29:24" pos:end="29:40"><name pos:start="29:24" pos:end="29:33">target_set</name><operator pos:start="29:34" pos:end="29:34">.</operator><name pos:start="29:35" pos:end="29:37">sig</name><index pos:start="29:38" pos:end="29:40">[<expr pos:start="29:39" pos:end="29:39"><literal type="number" pos:start="29:39" pos:end="29:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="29:43" pos:end="29:60"><expr pos:start="29:43" pos:end="29:60"><operator pos:start="29:43" pos:end="29:43">&amp;</operator><name pos:start="29:44" pos:end="29:60"><name pos:start="29:44" pos:end="29:48">frame</name><operator pos:start="29:49" pos:end="29:50">-&gt;</operator><name pos:start="29:51" pos:end="29:52">sc</name><operator pos:start="29:53" pos:end="29:53">.</operator><name pos:start="29:54" pos:end="29:60">oldmask</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:30"><block_content pos:start="31:17" pos:end="31:30">

		<goto pos:start="31:17" pos:end="31:30">goto <name pos:start="31:22" pos:end="31:29">badframe</name>;</goto></block_content></block></if></if_stmt>

	<for pos:start="33:9" pos:end="39:9">for<control pos:start="33:12" pos:end="33:46">(<init pos:start="33:13" pos:end="33:18"><expr pos:start="33:13" pos:end="33:17"><name pos:start="33:13" pos:end="33:13">i</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</init> <condition pos:start="33:20" pos:end="33:41"><expr pos:start="33:20" pos:end="33:40"><name pos:start="33:20" pos:end="33:20">i</name> <operator pos:start="33:22" pos:end="33:22">&lt;</operator> <name pos:start="33:24" pos:end="33:40">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="33:43" pos:end="33:45"><expr pos:start="33:43" pos:end="33:45"><name pos:start="33:43" pos:end="33:43">i</name><operator pos:start="33:44" pos:end="33:45">++</operator></expr></incr>)</control> <block pos:start="33:48" pos:end="39:9">{<block_content pos:start="35:17" pos:end="37:38">

		<if_stmt pos:start="35:17" pos:end="37:38"><if pos:start="35:17" pos:end="37:38">if <condition pos:start="35:20" pos:end="35:76">(<expr pos:start="35:21" pos:end="35:75"><call pos:start="35:21" pos:end="35:75"><name pos:start="35:21" pos:end="35:30">__get_user</name><argument_list pos:start="35:31" pos:end="35:75">(<argument pos:start="35:32" pos:end="35:48"><expr pos:start="35:32" pos:end="35:48"><name pos:start="35:32" pos:end="35:48"><name pos:start="35:32" pos:end="35:41">target_set</name><operator pos:start="35:42" pos:end="35:42">.</operator><name pos:start="35:43" pos:end="35:45">sig</name><index pos:start="35:46" pos:end="35:48">[<expr pos:start="35:47" pos:end="35:47"><name pos:start="35:47" pos:end="35:47">i</name></expr>]</index></name></expr></argument>, <argument pos:start="35:51" pos:end="35:74"><expr pos:start="35:51" pos:end="35:74"><operator pos:start="35:51" pos:end="35:51">&amp;</operator><name pos:start="35:52" pos:end="35:74"><name pos:start="35:52" pos:end="35:56">frame</name><operator pos:start="35:57" pos:end="35:58">-&gt;</operator><name pos:start="35:59" pos:end="35:67">extramask</name><index pos:start="35:68" pos:end="35:74">[<expr pos:start="35:69" pos:end="35:73"><name pos:start="35:69" pos:end="35:69">i</name> <operator pos:start="35:71" pos:end="35:71">-</operator> <literal type="number" pos:start="35:73" pos:end="35:73">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:25" pos:end="37:38"><block_content pos:start="37:25" pos:end="37:38">

			<goto pos:start="37:25" pos:end="37:38">goto <name pos:start="37:30" pos:end="37:37">badframe</name>;</goto></block_content></block></if></if_stmt>

	</block_content>}</block></for>

	<expr_stmt pos:start="41:9" pos:end="41:58"><expr pos:start="41:9" pos:end="41:57"><call pos:start="41:9" pos:end="41:57"><name pos:start="41:9" pos:end="41:38">target_to_host_sigset_internal</name><argument_list pos:start="41:39" pos:end="41:57">(<argument pos:start="41:40" pos:end="41:43"><expr pos:start="41:40" pos:end="41:43"><operator pos:start="41:40" pos:end="41:40">&amp;</operator><name pos:start="41:41" pos:end="41:43">set</name></expr></argument>, <argument pos:start="41:46" pos:end="41:56"><expr pos:start="41:46" pos:end="41:56"><operator pos:start="41:46" pos:end="41:46">&amp;</operator><name pos:start="41:47" pos:end="41:56">target_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="43:9" pos:end="43:45"><expr pos:start="43:9" pos:end="43:44"><call pos:start="43:9" pos:end="43:44"><name pos:start="43:9" pos:end="43:19">sigprocmask</name><argument_list pos:start="43:20" pos:end="43:44">(<argument pos:start="43:21" pos:end="43:31"><expr pos:start="43:21" pos:end="43:31"><name pos:start="43:21" pos:end="43:31">SIG_SETMASK</name></expr></argument>, <argument pos:start="43:34" pos:end="43:37"><expr pos:start="43:34" pos:end="43:37"><operator pos:start="43:34" pos:end="43:34">&amp;</operator><name pos:start="43:35" pos:end="43:37">set</name></expr></argument>, <argument pos:start="43:40" pos:end="43:43"><expr pos:start="43:40" pos:end="43:43"><name pos:start="43:40" pos:end="43:43">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="47:9" pos:end="47:44"><expr pos:start="47:9" pos:end="47:43"><call pos:start="47:9" pos:end="47:43"><name pos:start="47:9" pos:end="47:26">restore_sigcontext</name><argument_list pos:start="47:27" pos:end="47:43">(<argument pos:start="47:28" pos:end="47:37"><expr pos:start="47:28" pos:end="47:37"><operator pos:start="47:28" pos:end="47:28">&amp;</operator><name pos:start="47:29" pos:end="47:37"><name pos:start="47:29" pos:end="47:33">frame</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:37">sc</name></name></expr></argument>, <argument pos:start="47:40" pos:end="47:42"><expr pos:start="47:40" pos:end="47:42"><name pos:start="47:40" pos:end="47:42">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="49:9" pos:end="49:49"><expr pos:start="49:9" pos:end="49:48"><call pos:start="49:9" pos:end="49:48"><name pos:start="49:9" pos:end="49:26">unlock_user_struct</name><argument_list pos:start="49:27" pos:end="49:48">(<argument pos:start="49:28" pos:end="49:32"><expr pos:start="49:28" pos:end="49:32"><name pos:start="49:28" pos:end="49:32">frame</name></expr></argument>, <argument pos:start="49:35" pos:end="49:44"><expr pos:start="49:35" pos:end="49:44"><name pos:start="49:35" pos:end="49:44">frame_addr</name></expr></argument>, <argument pos:start="49:47" pos:end="49:47"><expr pos:start="49:47" pos:end="49:47"><literal type="number" pos:start="49:47" pos:end="49:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="51:9" pos:end="51:29">return <expr pos:start="51:16" pos:end="51:28"><name pos:start="51:16" pos:end="51:28"><name pos:start="51:16" pos:end="51:18">env</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:24">regs</name><index pos:start="51:25" pos:end="51:28">[<expr pos:start="51:26" pos:end="51:27"><literal type="number" pos:start="51:26" pos:end="51:27">10</literal></expr>]</index></name></expr>;</return>

  <label pos:start="53:3" pos:end="53:11"><name pos:start="53:3" pos:end="53:10">badframe</name>:</label>

	<expr_stmt pos:start="55:9" pos:end="55:49"><expr pos:start="55:9" pos:end="55:48"><call pos:start="55:9" pos:end="55:48"><name pos:start="55:9" pos:end="55:26">unlock_user_struct</name><argument_list pos:start="55:27" pos:end="55:48">(<argument pos:start="55:28" pos:end="55:32"><expr pos:start="55:28" pos:end="55:32"><name pos:start="55:28" pos:end="55:32">frame</name></expr></argument>, <argument pos:start="55:35" pos:end="55:44"><expr pos:start="55:35" pos:end="55:44"><name pos:start="55:35" pos:end="55:44">frame_addr</name></expr></argument>, <argument pos:start="55:47" pos:end="55:47"><expr pos:start="55:47" pos:end="55:47"><literal type="number" pos:start="55:47" pos:end="55:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="57:9" pos:end="57:34"><expr pos:start="57:9" pos:end="57:33"><call pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:17">force_sig</name><argument_list pos:start="57:18" pos:end="57:33">(<argument pos:start="57:19" pos:end="57:32"><expr pos:start="57:19" pos:end="57:32"><name pos:start="57:19" pos:end="57:32">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
