<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12471.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">intel_hda_parse_bdl</name><parameter_list pos:start="1:32" pos:end="1:69">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:45">IntelHDAState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">d</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:68"><decl pos:start="1:51" pos:end="1:68"><type pos:start="1:51" pos:end="1:68"><name pos:start="1:51" pos:end="1:64">IntelHDAStream</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:68">st</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:18">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:22">target_phys_addr_t</name></type> <name pos:start="5:24" pos:end="5:27">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:19"><name pos:start="7:13" pos:end="7:15">buf</name><index pos:start="7:16" pos:end="7:19">[<expr pos:start="7:17" pos:end="7:18"><literal type="number" pos:start="7:17" pos:end="7:18">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:14">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:58"><expr pos:start="13:5" pos:end="13:57"><name pos:start="13:5" pos:end="13:8">addr</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:57"><name pos:start="13:12" pos:end="13:25">intel_hda_addr</name><argument_list pos:start="13:26" pos:end="13:57">(<argument pos:start="13:27" pos:end="13:40"><expr pos:start="13:27" pos:end="13:40"><name pos:start="13:27" pos:end="13:40"><name pos:start="13:27" pos:end="13:28">st</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:40">bdlp_lbase</name></name></expr></argument>, <argument pos:start="13:43" pos:end="13:56"><expr pos:start="13:43" pos:end="13:56"><name pos:start="13:43" pos:end="13:56"><name pos:start="13:43" pos:end="13:44">st</name><operator pos:start="13:45" pos:end="13:46">-&gt;</operator><name pos:start="13:47" pos:end="13:56">bdlp_ubase</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:30"><expr pos:start="15:5" pos:end="15:29"><name pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:6">st</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:16">bentries</name></name> <operator pos:start="15:18" pos:end="15:18">=</operator> <name pos:start="15:20" pos:end="15:26"><name pos:start="15:20" pos:end="15:21">st</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:26">lvi</name></name> <operator pos:start="15:28" pos:end="15:28">+</operator><literal type="number" pos:start="15:29" pos:end="15:29">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><call pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:10">g_free</name><argument_list pos:start="17:11" pos:end="17:19">(<argument pos:start="17:12" pos:end="17:18"><expr pos:start="17:12" pos:end="17:18"><name pos:start="17:12" pos:end="17:18"><name pos:start="17:12" pos:end="17:13">st</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:18">bpl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:51"><expr pos:start="19:5" pos:end="19:50"><name pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:6">st</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:11">bpl</name></name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:50"><name pos:start="19:15" pos:end="19:22">g_malloc</name><argument_list pos:start="19:23" pos:end="19:50">(<argument pos:start="19:24" pos:end="19:49"><expr pos:start="19:24" pos:end="19:49"><sizeof pos:start="19:24" pos:end="19:34">sizeof<argument_list pos:start="19:30" pos:end="19:34">(<argument pos:start="19:31" pos:end="19:33"><expr pos:start="19:31" pos:end="19:33"><name pos:start="19:31" pos:end="19:33">bpl</name></expr></argument>)</argument_list></sizeof> <operator pos:start="19:36" pos:end="19:36">*</operator> <name pos:start="19:38" pos:end="19:49"><name pos:start="19:38" pos:end="19:39">st</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:49">bentries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="35:5">for <control pos:start="21:9" pos:end="21:50">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:33"><expr pos:start="21:17" pos:end="21:32"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:32"><name pos:start="21:21" pos:end="21:22">st</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:32">bentries</name></name></expr>;</condition> <incr pos:start="21:35" pos:end="21:49"><expr pos:start="21:35" pos:end="21:37"><name pos:start="21:35" pos:end="21:35">i</name><operator pos:start="21:36" pos:end="21:37">++</operator></expr><operator pos:start="21:38" pos:end="21:38">,</operator> <expr pos:start="21:40" pos:end="21:49"><name pos:start="21:40" pos:end="21:43">addr</name> <operator pos:start="21:45" pos:end="21:46">+=</operator> <literal type="number" pos:start="21:48" pos:end="21:49">16</literal></expr></incr>)</control> <block pos:start="21:52" pos:end="35:5">{<block_content pos:start="23:9" pos:end="33:69">

        <expr_stmt pos:start="23:9" pos:end="23:45"><expr pos:start="23:9" pos:end="23:44"><call pos:start="23:9" pos:end="23:44"><name pos:start="23:9" pos:end="23:20">pci_dma_read</name><argument_list pos:start="23:21" pos:end="23:44">(<argument pos:start="23:22" pos:end="23:28"><expr pos:start="23:22" pos:end="23:28"><operator pos:start="23:22" pos:end="23:22">&amp;</operator><name pos:start="23:23" pos:end="23:28"><name pos:start="23:23" pos:end="23:23">d</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:28">pci</name></name></expr></argument>, <argument pos:start="23:31" pos:end="23:34"><expr pos:start="23:31" pos:end="23:34"><name pos:start="23:31" pos:end="23:34">addr</name></expr></argument>, <argument pos:start="23:37" pos:end="23:39"><expr pos:start="23:37" pos:end="23:39"><name pos:start="23:37" pos:end="23:39">buf</name></expr></argument>, <argument pos:start="23:42" pos:end="23:43"><expr pos:start="23:42" pos:end="23:43"><literal type="number" pos:start="23:42" pos:end="23:43">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:57"><expr pos:start="25:9" pos:end="25:56"><name pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:10">st</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:15">bpl</name><index pos:start="25:16" pos:end="25:18">[<expr pos:start="25:17" pos:end="25:17"><name pos:start="25:17" pos:end="25:17">i</name></expr>]</index></name><operator pos:start="25:19" pos:end="25:19">.</operator><name pos:start="25:20" pos:end="25:23">addr</name>  <operator pos:start="25:26" pos:end="25:26">=</operator> <call pos:start="25:28" pos:end="25:56"><name pos:start="25:28" pos:end="25:38">le64_to_cpu</name><argument_list pos:start="25:39" pos:end="25:56">(<argument pos:start="25:40" pos:end="25:55"><expr pos:start="25:40" pos:end="25:55"><operator pos:start="25:40" pos:end="25:40">*</operator><operator pos:start="25:41" pos:end="25:41">(</operator><name pos:start="25:42" pos:end="25:49">uint64_t</name> <operator pos:start="25:51" pos:end="25:51">*</operator><operator pos:start="25:52" pos:end="25:52">)</operator><name pos:start="25:53" pos:end="25:55">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:63"><expr pos:start="27:9" pos:end="27:62"><name pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:10">st</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:15">bpl</name><index pos:start="27:16" pos:end="27:18">[<expr pos:start="27:17" pos:end="27:17"><name pos:start="27:17" pos:end="27:17">i</name></expr>]</index></name><operator pos:start="27:19" pos:end="27:19">.</operator><name pos:start="27:20" pos:end="27:22">len</name>   <operator pos:start="27:26" pos:end="27:26">=</operator> <call pos:start="27:28" pos:end="27:62"><name pos:start="27:28" pos:end="27:38">le32_to_cpu</name><argument_list pos:start="27:39" pos:end="27:62">(<argument pos:start="27:40" pos:end="27:61"><expr pos:start="27:40" pos:end="27:61"><operator pos:start="27:40" pos:end="27:40">*</operator><operator pos:start="27:41" pos:end="27:41">(</operator><name pos:start="27:42" pos:end="27:49">uint32_t</name> <operator pos:start="27:51" pos:end="27:51">*</operator><operator pos:start="27:52" pos:end="27:52">)</operator><operator pos:start="27:53" pos:end="27:53">(</operator><name pos:start="27:54" pos:end="27:56">buf</name> <operator pos:start="27:58" pos:end="27:58">+</operator> <literal type="number" pos:start="27:60" pos:end="27:60">8</literal><operator pos:start="27:61" pos:end="27:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:64"><expr pos:start="29:9" pos:end="29:63"><name pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:10">st</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:15">bpl</name><index pos:start="29:16" pos:end="29:18">[<expr pos:start="29:17" pos:end="29:17"><name pos:start="29:17" pos:end="29:17">i</name></expr>]</index></name><operator pos:start="29:19" pos:end="29:19">.</operator><name pos:start="29:20" pos:end="29:24">flags</name> <operator pos:start="29:26" pos:end="29:26">=</operator> <call pos:start="29:28" pos:end="29:63"><name pos:start="29:28" pos:end="29:38">le32_to_cpu</name><argument_list pos:start="29:39" pos:end="29:63">(<argument pos:start="29:40" pos:end="29:62"><expr pos:start="29:40" pos:end="29:62"><operator pos:start="29:40" pos:end="29:40">*</operator><operator pos:start="29:41" pos:end="29:41">(</operator><name pos:start="29:42" pos:end="29:49">uint32_t</name> <operator pos:start="29:51" pos:end="29:51">*</operator><operator pos:start="29:52" pos:end="29:52">)</operator><operator pos:start="29:53" pos:end="29:53">(</operator><name pos:start="29:54" pos:end="29:56">buf</name> <operator pos:start="29:58" pos:end="29:58">+</operator> <literal type="number" pos:start="29:60" pos:end="29:61">12</literal><operator pos:start="29:62" pos:end="29:62">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="33:69"><expr pos:start="31:9" pos:end="33:68"><call pos:start="31:9" pos:end="33:68"><name pos:start="31:9" pos:end="31:14">dprint</name><argument_list pos:start="31:15" pos:end="33:68">(<argument pos:start="31:16" pos:end="31:16"><expr pos:start="31:16" pos:end="31:16"><name pos:start="31:16" pos:end="31:16">d</name></expr></argument>, <argument pos:start="31:19" pos:end="31:19"><expr pos:start="31:19" pos:end="31:19"><literal type="number" pos:start="31:19" pos:end="31:19">1</literal></expr></argument>, <argument pos:start="31:22" pos:end="31:58"><expr pos:start="31:22" pos:end="31:58"><literal type="string" pos:start="31:22" pos:end="31:34">"bdl/%d: 0x%"</literal> <name pos:start="31:36" pos:end="31:41">PRIx64</name> <literal type="string" pos:start="31:43" pos:end="31:58">" +0x%x, 0x%x\n"</literal></expr></argument>,

               <argument pos:start="33:16" pos:end="33:16"><expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">i</name></expr></argument>, <argument pos:start="33:19" pos:end="33:33"><expr pos:start="33:19" pos:end="33:33"><name pos:start="33:19" pos:end="33:28"><name pos:start="33:19" pos:end="33:20">st</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:25">bpl</name><index pos:start="33:26" pos:end="33:28">[<expr pos:start="33:27" pos:end="33:27"><name pos:start="33:27" pos:end="33:27">i</name></expr>]</index></name><operator pos:start="33:29" pos:end="33:29">.</operator><name pos:start="33:30" pos:end="33:33">addr</name></expr></argument>, <argument pos:start="33:36" pos:end="33:49"><expr pos:start="33:36" pos:end="33:49"><name pos:start="33:36" pos:end="33:45"><name pos:start="33:36" pos:end="33:37">st</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:42">bpl</name><index pos:start="33:43" pos:end="33:45">[<expr pos:start="33:44" pos:end="33:44"><name pos:start="33:44" pos:end="33:44">i</name></expr>]</index></name><operator pos:start="33:46" pos:end="33:46">.</operator><name pos:start="33:47" pos:end="33:49">len</name></expr></argument>, <argument pos:start="33:52" pos:end="33:67"><expr pos:start="33:52" pos:end="33:67"><name pos:start="33:52" pos:end="33:61"><name pos:start="33:52" pos:end="33:53">st</name><operator pos:start="33:54" pos:end="33:55">-&gt;</operator><name pos:start="33:56" pos:end="33:58">bpl</name><index pos:start="33:59" pos:end="33:61">[<expr pos:start="33:60" pos:end="33:60"><name pos:start="33:60" pos:end="33:60">i</name></expr>]</index></name><operator pos:start="33:62" pos:end="33:62">.</operator><name pos:start="33:63" pos:end="33:67">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:6">st</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:13">bsize</name></name> <operator pos:start="39:15" pos:end="39:15">=</operator> <name pos:start="39:17" pos:end="39:23"><name pos:start="39:17" pos:end="39:18">st</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:23">cbl</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:18"><expr pos:start="41:5" pos:end="41:17"><name pos:start="41:5" pos:end="41:12"><name pos:start="41:5" pos:end="41:6">st</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:12">lpib</name></name>  <operator pos:start="41:15" pos:end="41:15">=</operator> <literal type="number" pos:start="41:17" pos:end="41:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:18"><expr pos:start="43:5" pos:end="43:17"><name pos:start="43:5" pos:end="43:10"><name pos:start="43:5" pos:end="43:6">st</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:10">be</name></name>    <operator pos:start="43:15" pos:end="43:15">=</operator> <literal type="number" pos:start="43:17" pos:end="43:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:18"><expr pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:10"><name pos:start="45:5" pos:end="45:6">st</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:10">bp</name></name>    <operator pos:start="45:15" pos:end="45:15">=</operator> <literal type="number" pos:start="45:17" pos:end="45:17">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
