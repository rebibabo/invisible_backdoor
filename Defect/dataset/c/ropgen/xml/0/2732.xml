<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2732.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:40">block_job_detach_aio_context</name><parameter_list pos:start="1:41" pos:end="1:54">(<parameter pos:start="1:42" pos:end="1:53"><decl pos:start="1:42" pos:end="1:53"><type pos:start="1:42" pos:end="1:47"><name pos:start="1:42" pos:end="1:45">void</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:53">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:25">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">BlockJob</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">job</name> <init pos:start="5:19" pos:end="5:26">= <expr pos:start="5:21" pos:end="5:26"><name pos:start="5:21" pos:end="5:26">opaque</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:57">/* In case the job terminates during aio_poll()... */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:23"><expr pos:start="11:5" pos:end="11:22"><call pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:17">block_job_ref</name><argument_list pos:start="11:18" pos:end="11:22">(<argument pos:start="11:19" pos:end="11:21"><expr pos:start="11:19" pos:end="11:21"><name pos:start="11:19" pos:end="11:21">job</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><call pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:19">block_job_pause</name><argument_list pos:start="15:20" pos:end="15:24">(<argument pos:start="15:21" pos:end="15:23"><expr pos:start="15:21" pos:end="15:23"><name pos:start="15:21" pos:end="15:23">job</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:21">(<expr pos:start="19:9" pos:end="19:20"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:20"><name pos:start="19:10" pos:end="19:12">job</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:20">paused</name></name></expr>)</condition> <block pos:start="19:23" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:29">

        <comment type="block" pos:start="21:9" pos:end="21:75">/* If job is !job-&gt;busy this kicks it into the next pause point. */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><call pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:23">block_job_enter</name><argument_list pos:start="23:24" pos:end="23:28">(<argument pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><name pos:start="23:25" pos:end="23:27">job</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <while pos:start="27:5" pos:end="31:5">while <condition pos:start="27:11" pos:end="27:43">(<expr pos:start="27:12" pos:end="27:42"><operator pos:start="27:12" pos:end="27:12">!</operator><name pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:15">job</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:23">paused</name></name> <operator pos:start="27:25" pos:end="27:26">&amp;&amp;</operator> <operator pos:start="27:28" pos:end="27:28">!</operator><name pos:start="27:29" pos:end="27:42"><name pos:start="27:29" pos:end="27:31">job</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:42">completed</name></name></expr>)</condition> <block pos:start="27:45" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:55">

        <expr_stmt pos:start="29:9" pos:end="29:55"><expr pos:start="29:9" pos:end="29:54"><call pos:start="29:9" pos:end="29:54"><name pos:start="29:9" pos:end="29:16">aio_poll</name><argument_list pos:start="29:17" pos:end="29:54">(<argument pos:start="29:18" pos:end="29:47"><expr pos:start="29:18" pos:end="29:47"><call pos:start="29:18" pos:end="29:47"><name pos:start="29:18" pos:end="29:42">block_job_get_aio_context</name><argument_list pos:start="29:43" pos:end="29:47">(<argument pos:start="29:44" pos:end="29:46"><expr pos:start="29:44" pos:end="29:46"><name pos:start="29:44" pos:end="29:46">job</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:50" pos:end="29:53"><expr pos:start="29:50" pos:end="29:53"><name pos:start="29:50" pos:end="29:53">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="35:5" pos:end="35:25"><expr pos:start="35:5" pos:end="35:24"><call pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:19">block_job_unref</name><argument_list pos:start="35:20" pos:end="35:24">(<argument pos:start="35:21" pos:end="35:23"><expr pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:23">job</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
