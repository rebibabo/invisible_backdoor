<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6057.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">filter_mb_edgev</name><parameter_list pos:start="1:28" pos:end="1:90">( <parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:40">H264Context</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">h</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:57"><decl pos:start="1:46" pos:end="1:57"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:52">uint8_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">pix</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:69"><decl pos:start="1:60" pos:end="1:69"><type pos:start="1:60" pos:end="1:69"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:69">stride</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:80"><decl pos:start="1:72" pos:end="1:80"><type pos:start="1:72" pos:end="1:77"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:80"><name pos:start="1:76" pos:end="1:77">bS</name><index pos:start="1:78" pos:end="1:80">[<expr pos:start="1:79" pos:end="1:79"><literal type="number" pos:start="1:79" pos:end="1:79">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:88"><decl pos:start="1:83" pos:end="1:88"><type pos:start="1:83" pos:end="1:88"><name pos:start="1:83" pos:end="1:85">int</name></type> <name pos:start="1:87" pos:end="1:88">qp</name></decl></parameter> )</parameter_list> <block pos:start="1:92" pos:end="155:1">{<block_content pos:start="3:5" pos:end="153:5">

    <decl_stmt pos:start="3:5" pos:end="3:13"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:69"><decl pos:start="5:5" pos:end="5:68"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:21">index_a</name> <init pos:start="5:23" pos:end="5:68">= <expr pos:start="5:25" pos:end="5:68"><call pos:start="5:25" pos:end="5:68"><name pos:start="5:25" pos:end="5:28">clip</name><argument_list pos:start="5:29" pos:end="5:68">( <argument pos:start="5:31" pos:end="5:59"><expr pos:start="5:31" pos:end="5:59"><name pos:start="5:31" pos:end="5:32">qp</name> <operator pos:start="5:34" pos:end="5:34">+</operator> <name pos:start="5:36" pos:end="5:59"><name pos:start="5:36" pos:end="5:36">h</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:59">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="5:62" pos:end="5:62"><expr pos:start="5:62" pos:end="5:62"><literal type="number" pos:start="5:62" pos:end="5:62">0</literal></expr></argument>, <argument pos:start="5:65" pos:end="5:66"><expr pos:start="5:65" pos:end="5:66"><literal type="number" pos:start="5:65" pos:end="5:66">51</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:19">alpha</name> <init pos:start="7:21" pos:end="7:42">= <expr pos:start="7:23" pos:end="7:42"><name pos:start="7:23" pos:end="7:42"><name pos:start="7:23" pos:end="7:33">alpha_table</name><index pos:start="7:34" pos:end="7:42">[<expr pos:start="7:35" pos:end="7:41"><name pos:start="7:35" pos:end="7:41">index_a</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:75"><decl pos:start="9:5" pos:end="9:74"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:18">beta</name>  <init pos:start="9:21" pos:end="9:74">= <expr pos:start="9:23" pos:end="9:74"><name pos:start="9:23" pos:end="9:74"><name pos:start="9:23" pos:end="9:32">beta_table</name><index pos:start="9:33" pos:end="9:74">[<expr pos:start="9:34" pos:end="9:73"><call pos:start="9:34" pos:end="9:73"><name pos:start="9:34" pos:end="9:37">clip</name><argument_list pos:start="9:38" pos:end="9:73">( <argument pos:start="9:40" pos:end="9:64"><expr pos:start="9:40" pos:end="9:64"><name pos:start="9:40" pos:end="9:41">qp</name> <operator pos:start="9:43" pos:end="9:43">+</operator> <name pos:start="9:45" pos:end="9:64"><name pos:start="9:45" pos:end="9:45">h</name><operator pos:start="9:46" pos:end="9:47">-&gt;</operator><name pos:start="9:48" pos:end="9:64">slice_beta_offset</name></name></expr></argument>, <argument pos:start="9:67" pos:end="9:67"><expr pos:start="9:67" pos:end="9:67"><literal type="number" pos:start="9:67" pos:end="9:67">0</literal></expr></argument>, <argument pos:start="9:70" pos:end="9:71"><expr pos:start="9:70" pos:end="9:71"><literal type="number" pos:start="9:70" pos:end="9:71">51</literal></expr></argument> )</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="153:5">for<control pos:start="13:8" pos:end="13:28">( <init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:22"><expr pos:start="13:17" pos:end="13:21"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <literal type="number" pos:start="13:21" pos:end="13:21">4</literal></expr>;</condition> <incr pos:start="13:24" pos:end="13:26"><expr pos:start="13:24" pos:end="13:26"><name pos:start="13:24" pos:end="13:24">i</name><operator pos:start="13:25" pos:end="13:26">++</operator></expr></incr> )</control> <block pos:start="13:30" pos:end="153:5">{<block_content pos:start="15:9" pos:end="151:9">

        <if_stmt pos:start="15:9" pos:end="21:9"><if pos:start="15:9" pos:end="21:9">if<condition pos:start="15:11" pos:end="15:24">( <expr pos:start="15:13" pos:end="15:22"><name pos:start="15:13" pos:end="15:17"><name pos:start="15:13" pos:end="15:14">bS</name><index pos:start="15:15" pos:end="15:17">[<expr pos:start="15:16" pos:end="15:16"><name pos:start="15:16" pos:end="15:16">i</name></expr>]</index></name> <operator pos:start="15:19" pos:end="15:20">==</operator> <literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr> )</condition> <block pos:start="15:26" pos:end="21:9">{<block_content pos:start="17:13" pos:end="19:21">

            <expr_stmt pos:start="17:13" pos:end="17:30"><expr pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:15">pix</name> <operator pos:start="17:17" pos:end="17:18">+=</operator> <literal type="number" pos:start="17:20" pos:end="17:20">4</literal> <operator pos:start="17:22" pos:end="17:22">*</operator> <name pos:start="17:24" pos:end="17:29">stride</name></expr>;</expr_stmt>

            <continue pos:start="19:13" pos:end="19:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="25:9" pos:end="25:29">/* 4px edge length */</comment>

        <for pos:start="27:9" pos:end="151:9">for<control pos:start="27:12" pos:end="27:32">( <init pos:start="27:14" pos:end="27:19"><expr pos:start="27:14" pos:end="27:18"><name pos:start="27:14" pos:end="27:14">d</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>;</init> <condition pos:start="27:21" pos:end="27:26"><expr pos:start="27:21" pos:end="27:25"><name pos:start="27:21" pos:end="27:21">d</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <literal type="number" pos:start="27:25" pos:end="27:25">4</literal></expr>;</condition> <incr pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:28">d</name><operator pos:start="27:29" pos:end="27:30">++</operator></expr></incr> )</control> <block pos:start="27:34" pos:end="151:9">{<block_content pos:start="29:13" pos:end="149:26">

            <decl_stmt pos:start="29:13" pos:end="29:39"><decl pos:start="29:13" pos:end="29:38"><type pos:start="29:13" pos:end="29:25"><specifier pos:start="29:13" pos:end="29:17">const</specifier> <name pos:start="29:19" pos:end="29:25">uint8_t</name></type> <name pos:start="29:27" pos:end="29:28">p0</name> <init pos:start="29:30" pos:end="29:38">= <expr pos:start="29:32" pos:end="29:38"><name pos:start="29:32" pos:end="29:38"><name pos:start="29:32" pos:end="29:34">pix</name><index pos:start="29:35" pos:end="29:38">[<expr pos:start="29:36" pos:end="29:37"><operator pos:start="29:36" pos:end="29:36">-</operator><literal type="number" pos:start="29:37" pos:end="29:37">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="31:13" pos:end="31:39"><decl pos:start="31:13" pos:end="31:38"><type pos:start="31:13" pos:end="31:25"><specifier pos:start="31:13" pos:end="31:17">const</specifier> <name pos:start="31:19" pos:end="31:25">uint8_t</name></type> <name pos:start="31:27" pos:end="31:28">p1</name> <init pos:start="31:30" pos:end="31:38">= <expr pos:start="31:32" pos:end="31:38"><name pos:start="31:32" pos:end="31:38"><name pos:start="31:32" pos:end="31:34">pix</name><index pos:start="31:35" pos:end="31:38">[<expr pos:start="31:36" pos:end="31:37"><operator pos:start="31:36" pos:end="31:36">-</operator><literal type="number" pos:start="31:37" pos:end="31:37">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="33:13" pos:end="33:39"><decl pos:start="33:13" pos:end="33:38"><type pos:start="33:13" pos:end="33:25"><specifier pos:start="33:13" pos:end="33:17">const</specifier> <name pos:start="33:19" pos:end="33:25">uint8_t</name></type> <name pos:start="33:27" pos:end="33:28">p2</name> <init pos:start="33:30" pos:end="33:38">= <expr pos:start="33:32" pos:end="33:38"><name pos:start="33:32" pos:end="33:38"><name pos:start="33:32" pos:end="33:34">pix</name><index pos:start="33:35" pos:end="33:38">[<expr pos:start="33:36" pos:end="33:37"><operator pos:start="33:36" pos:end="33:36">-</operator><literal type="number" pos:start="33:37" pos:end="33:37">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <decl_stmt pos:start="37:13" pos:end="37:38"><decl pos:start="37:13" pos:end="37:37"><type pos:start="37:13" pos:end="37:25"><specifier pos:start="37:13" pos:end="37:17">const</specifier> <name pos:start="37:19" pos:end="37:25">uint8_t</name></type> <name pos:start="37:27" pos:end="37:28">q0</name> <init pos:start="37:30" pos:end="37:37">= <expr pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:34">pix</name><index pos:start="37:35" pos:end="37:37">[<expr pos:start="37:36" pos:end="37:36"><literal type="number" pos:start="37:36" pos:end="37:36">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="39:13" pos:end="39:38"><decl pos:start="39:13" pos:end="39:37"><type pos:start="39:13" pos:end="39:25"><specifier pos:start="39:13" pos:end="39:17">const</specifier> <name pos:start="39:19" pos:end="39:25">uint8_t</name></type> <name pos:start="39:27" pos:end="39:28">q1</name> <init pos:start="39:30" pos:end="39:37">= <expr pos:start="39:32" pos:end="39:37"><name pos:start="39:32" pos:end="39:37"><name pos:start="39:32" pos:end="39:34">pix</name><index pos:start="39:35" pos:end="39:37">[<expr pos:start="39:36" pos:end="39:36"><literal type="number" pos:start="39:36" pos:end="39:36">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="41:13" pos:end="41:38"><decl pos:start="41:13" pos:end="41:37"><type pos:start="41:13" pos:end="41:25"><specifier pos:start="41:13" pos:end="41:17">const</specifier> <name pos:start="41:19" pos:end="41:25">uint8_t</name></type> <name pos:start="41:27" pos:end="41:28">q2</name> <init pos:start="41:30" pos:end="41:37">= <expr pos:start="41:32" pos:end="41:37"><name pos:start="41:32" pos:end="41:37"><name pos:start="41:32" pos:end="41:34">pix</name><index pos:start="41:35" pos:end="41:37">[<expr pos:start="41:36" pos:end="41:36"><literal type="number" pos:start="41:36" pos:end="41:36">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="45:13" pos:end="55:13"><if pos:start="45:13" pos:end="55:13">if<condition pos:start="45:15" pos:end="49:40">( <expr pos:start="45:17" pos:end="49:38"><call pos:start="45:17" pos:end="45:30"><name pos:start="45:17" pos:end="45:19">abs</name><argument_list pos:start="45:20" pos:end="45:30">( <argument pos:start="45:22" pos:end="45:28"><expr pos:start="45:22" pos:end="45:28"><name pos:start="45:22" pos:end="45:23">p0</name> <operator pos:start="45:25" pos:end="45:25">-</operator> <name pos:start="45:27" pos:end="45:28">q0</name></expr></argument> )</argument_list></call> <operator pos:start="45:32" pos:end="45:33">&gt;=</operator> <name pos:start="45:35" pos:end="45:39">alpha</name> <operator pos:start="45:41" pos:end="45:42">||</operator>

                <call pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:19">abs</name><argument_list pos:start="47:20" pos:end="47:30">( <argument pos:start="47:22" pos:end="47:28"><expr pos:start="47:22" pos:end="47:28"><name pos:start="47:22" pos:end="47:23">p1</name> <operator pos:start="47:25" pos:end="47:25">-</operator> <name pos:start="47:27" pos:end="47:28">p0</name></expr></argument> )</argument_list></call> <operator pos:start="47:32" pos:end="47:33">&gt;=</operator> <name pos:start="47:35" pos:end="47:38">beta</name> <operator pos:start="47:40" pos:end="47:41">||</operator>

                <call pos:start="49:17" pos:end="49:30"><name pos:start="49:17" pos:end="49:19">abs</name><argument_list pos:start="49:20" pos:end="49:30">( <argument pos:start="49:22" pos:end="49:28"><expr pos:start="49:22" pos:end="49:28"><name pos:start="49:22" pos:end="49:23">q1</name> <operator pos:start="49:25" pos:end="49:25">-</operator> <name pos:start="49:27" pos:end="49:28">q0</name></expr></argument> )</argument_list></call> <operator pos:start="49:32" pos:end="49:33">&gt;=</operator> <name pos:start="49:35" pos:end="49:38">beta</name></expr> )</condition> <block pos:start="49:42" pos:end="55:13">{<block_content pos:start="51:17" pos:end="53:25">

                <expr_stmt pos:start="51:17" pos:end="51:30"><expr pos:start="51:17" pos:end="51:29"><name pos:start="51:17" pos:end="51:19">pix</name> <operator pos:start="51:21" pos:end="51:22">+=</operator> <name pos:start="51:24" pos:end="51:29">stride</name></expr>;</expr_stmt>

                <continue pos:start="53:17" pos:end="53:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="59:13" pos:end="147:13"><if pos:start="59:13" pos:end="93:13">if<condition pos:start="59:15" pos:end="59:27">( <expr pos:start="59:17" pos:end="59:25"><name pos:start="59:17" pos:end="59:21"><name pos:start="59:17" pos:end="59:18">bS</name><index pos:start="59:19" pos:end="59:21">[<expr pos:start="59:20" pos:end="59:20"><name pos:start="59:20" pos:end="59:20">i</name></expr>]</index></name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <literal type="number" pos:start="59:25" pos:end="59:25">4</literal></expr> )</condition> <block pos:start="59:29" pos:end="93:13">{<block_content pos:start="61:17" pos:end="91:55">

                <decl_stmt pos:start="61:17" pos:end="61:62"><decl pos:start="61:17" pos:end="61:61"><type pos:start="61:17" pos:end="61:25"><specifier pos:start="61:17" pos:end="61:21">const</specifier> <name pos:start="61:23" pos:end="61:25">int</name></type> <name pos:start="61:27" pos:end="61:29">tc0</name> <init pos:start="61:31" pos:end="61:61">= <expr pos:start="61:33" pos:end="61:61"><name pos:start="61:33" pos:end="61:61"><name pos:start="61:33" pos:end="61:41">tc0_table</name><index pos:start="61:42" pos:end="61:50">[<expr pos:start="61:43" pos:end="61:49"><name pos:start="61:43" pos:end="61:49">index_a</name></expr>]</index><index pos:start="61:51" pos:end="61:61">[<expr pos:start="61:52" pos:end="61:60"><name pos:start="61:52" pos:end="61:56"><name pos:start="61:52" pos:end="61:53">bS</name><index pos:start="61:54" pos:end="61:56">[<expr pos:start="61:55" pos:end="61:55"><name pos:start="61:55" pos:end="61:55">i</name></expr>]</index></name> <operator pos:start="61:58" pos:end="61:58">-</operator> <literal type="number" pos:start="61:60" pos:end="61:60">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="63:17" pos:end="63:29"><decl pos:start="63:17" pos:end="63:28"><type pos:start="63:17" pos:end="63:19"><name pos:start="63:17" pos:end="63:19">int</name></type> <name pos:start="63:21" pos:end="63:22">tc</name> <init pos:start="63:24" pos:end="63:28">= <expr pos:start="63:26" pos:end="63:28"><name pos:start="63:26" pos:end="63:28">tc0</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="65:17" pos:end="65:28"><decl pos:start="65:17" pos:end="65:27"><type pos:start="65:17" pos:end="65:19"><name pos:start="65:17" pos:end="65:19">int</name></type> <name pos:start="65:21" pos:end="65:27">i_delta</name></decl>;</decl_stmt>



                <if_stmt pos:start="69:17" pos:end="75:17"><if pos:start="69:17" pos:end="75:17">if<condition pos:start="69:19" pos:end="69:43">( <expr pos:start="69:21" pos:end="69:41"><call pos:start="69:21" pos:end="69:34"><name pos:start="69:21" pos:end="69:23">abs</name><argument_list pos:start="69:24" pos:end="69:34">( <argument pos:start="69:26" pos:end="69:32"><expr pos:start="69:26" pos:end="69:32"><name pos:start="69:26" pos:end="69:27">p2</name> <operator pos:start="69:29" pos:end="69:29">-</operator> <name pos:start="69:31" pos:end="69:32">p0</name></expr></argument> )</argument_list></call> <operator pos:start="69:36" pos:end="69:36">&lt;</operator> <name pos:start="69:38" pos:end="69:41">beta</name></expr> )</condition> <block pos:start="69:45" pos:end="75:17">{<block_content pos:start="71:21" pos:end="73:25">

                    <expr_stmt pos:start="71:21" pos:end="71:107"><expr pos:start="71:21" pos:end="71:106"><name pos:start="71:21" pos:end="71:27"><name pos:start="71:21" pos:end="71:23">pix</name><index pos:start="71:24" pos:end="71:27">[<expr pos:start="71:25" pos:end="71:26"><operator pos:start="71:25" pos:end="71:25">-</operator><literal type="number" pos:start="71:26" pos:end="71:26">2</literal></expr>]</index></name> <operator pos:start="71:29" pos:end="71:29">=</operator> <name pos:start="71:31" pos:end="71:32">p1</name> <operator pos:start="71:34" pos:end="71:34">+</operator> <call pos:start="71:36" pos:end="71:106"><name pos:start="71:36" pos:end="71:39">clip</name><argument_list pos:start="71:40" pos:end="71:106">( <argument pos:start="71:42" pos:end="71:93"><expr pos:start="71:42" pos:end="71:93"><operator pos:start="71:42" pos:end="71:42">(</operator> <name pos:start="71:44" pos:end="71:45">p2</name> <operator pos:start="71:47" pos:end="71:47">+</operator> <operator pos:start="71:49" pos:end="71:49">(</operator> <operator pos:start="71:51" pos:end="71:51">(</operator> <name pos:start="71:53" pos:end="71:54">p0</name> <operator pos:start="71:56" pos:end="71:56">+</operator> <name pos:start="71:58" pos:end="71:59">q0</name> <operator pos:start="71:61" pos:end="71:61">+</operator> <literal type="number" pos:start="71:63" pos:end="71:63">1</literal> <operator pos:start="71:65" pos:end="71:65">)</operator> <operator pos:start="71:67" pos:end="71:68">&gt;&gt;</operator> <literal type="number" pos:start="71:70" pos:end="71:70">1</literal> <operator pos:start="71:72" pos:end="71:72">)</operator> <operator pos:start="71:74" pos:end="71:74">-</operator> <operator pos:start="71:76" pos:end="71:76">(</operator> <name pos:start="71:78" pos:end="71:79">p1</name> <operator pos:start="71:81" pos:end="71:82">&lt;&lt;</operator> <literal type="number" pos:start="71:84" pos:end="71:84">1</literal> <operator pos:start="71:86" pos:end="71:86">)</operator> <operator pos:start="71:88" pos:end="71:88">)</operator> <operator pos:start="71:90" pos:end="71:91">&gt;&gt;</operator> <literal type="number" pos:start="71:93" pos:end="71:93">1</literal></expr></argument>, <argument pos:start="71:96" pos:end="71:99"><expr pos:start="71:96" pos:end="71:99"><operator pos:start="71:96" pos:end="71:96">-</operator><name pos:start="71:97" pos:end="71:99">tc0</name></expr></argument>, <argument pos:start="71:102" pos:end="71:104"><expr pos:start="71:102" pos:end="71:104"><name pos:start="71:102" pos:end="71:104">tc0</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:25"><expr pos:start="73:21" pos:end="73:24"><name pos:start="73:21" pos:end="73:22">tc</name><operator pos:start="73:23" pos:end="73:24">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="77:17" pos:end="83:17"><if pos:start="77:17" pos:end="83:17">if<condition pos:start="77:19" pos:end="77:43">( <expr pos:start="77:21" pos:end="77:41"><call pos:start="77:21" pos:end="77:34"><name pos:start="77:21" pos:end="77:23">abs</name><argument_list pos:start="77:24" pos:end="77:34">( <argument pos:start="77:26" pos:end="77:32"><expr pos:start="77:26" pos:end="77:32"><name pos:start="77:26" pos:end="77:27">q2</name> <operator pos:start="77:29" pos:end="77:29">-</operator> <name pos:start="77:31" pos:end="77:32">q0</name></expr></argument> )</argument_list></call> <operator pos:start="77:36" pos:end="77:36">&lt;</operator> <name pos:start="77:38" pos:end="77:41">beta</name></expr> )</condition> <block pos:start="77:45" pos:end="83:17">{<block_content pos:start="79:21" pos:end="81:25">

                    <expr_stmt pos:start="79:21" pos:end="79:106"><expr pos:start="79:21" pos:end="79:105"><name pos:start="79:21" pos:end="79:26"><name pos:start="79:21" pos:end="79:23">pix</name><index pos:start="79:24" pos:end="79:26">[<expr pos:start="79:25" pos:end="79:25"><literal type="number" pos:start="79:25" pos:end="79:25">1</literal></expr>]</index></name> <operator pos:start="79:28" pos:end="79:28">=</operator> <name pos:start="79:30" pos:end="79:31">q1</name> <operator pos:start="79:33" pos:end="79:33">+</operator> <call pos:start="79:35" pos:end="79:105"><name pos:start="79:35" pos:end="79:38">clip</name><argument_list pos:start="79:39" pos:end="79:105">( <argument pos:start="79:41" pos:end="79:92"><expr pos:start="79:41" pos:end="79:92"><operator pos:start="79:41" pos:end="79:41">(</operator> <name pos:start="79:43" pos:end="79:44">q2</name> <operator pos:start="79:46" pos:end="79:46">+</operator> <operator pos:start="79:48" pos:end="79:48">(</operator> <operator pos:start="79:50" pos:end="79:50">(</operator> <name pos:start="79:52" pos:end="79:53">p0</name> <operator pos:start="79:55" pos:end="79:55">+</operator> <name pos:start="79:57" pos:end="79:58">q0</name> <operator pos:start="79:60" pos:end="79:60">+</operator> <literal type="number" pos:start="79:62" pos:end="79:62">1</literal> <operator pos:start="79:64" pos:end="79:64">)</operator> <operator pos:start="79:66" pos:end="79:67">&gt;&gt;</operator> <literal type="number" pos:start="79:69" pos:end="79:69">1</literal> <operator pos:start="79:71" pos:end="79:71">)</operator> <operator pos:start="79:73" pos:end="79:73">-</operator> <operator pos:start="79:75" pos:end="79:75">(</operator> <name pos:start="79:77" pos:end="79:78">q1</name> <operator pos:start="79:80" pos:end="79:81">&lt;&lt;</operator> <literal type="number" pos:start="79:83" pos:end="79:83">1</literal> <operator pos:start="79:85" pos:end="79:85">)</operator> <operator pos:start="79:87" pos:end="79:87">)</operator> <operator pos:start="79:89" pos:end="79:90">&gt;&gt;</operator> <literal type="number" pos:start="79:92" pos:end="79:92">1</literal></expr></argument>, <argument pos:start="79:95" pos:end="79:98"><expr pos:start="79:95" pos:end="79:98"><operator pos:start="79:95" pos:end="79:95">-</operator><name pos:start="79:96" pos:end="79:98">tc0</name></expr></argument>, <argument pos:start="79:101" pos:end="79:103"><expr pos:start="79:101" pos:end="79:103"><name pos:start="79:101" pos:end="79:103">tc0</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="81:21" pos:end="81:25"><expr pos:start="81:21" pos:end="81:24"><name pos:start="81:21" pos:end="81:22">tc</name><operator pos:start="81:23" pos:end="81:24">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="87:17" pos:end="87:84"><expr pos:start="87:17" pos:end="87:83"><name pos:start="87:17" pos:end="87:23">i_delta</name> <operator pos:start="87:25" pos:end="87:25">=</operator> <call pos:start="87:27" pos:end="87:83"><name pos:start="87:27" pos:end="87:30">clip</name><argument_list pos:start="87:31" pos:end="87:83">( <argument pos:start="87:33" pos:end="87:72"><expr pos:start="87:33" pos:end="87:72"><operator pos:start="87:33" pos:end="87:33">(</operator><operator pos:start="87:34" pos:end="87:34">(</operator><operator pos:start="87:35" pos:end="87:35">(</operator><name pos:start="87:36" pos:end="87:37">q0</name> <operator pos:start="87:39" pos:end="87:39">-</operator> <name pos:start="87:41" pos:end="87:42">p0</name> <operator pos:start="87:44" pos:end="87:44">)</operator> <operator pos:start="87:46" pos:end="87:47">&lt;&lt;</operator> <literal type="number" pos:start="87:49" pos:end="87:49">2</literal><operator pos:start="87:50" pos:end="87:50">)</operator> <operator pos:start="87:52" pos:end="87:52">+</operator> <operator pos:start="87:54" pos:end="87:54">(</operator><name pos:start="87:55" pos:end="87:56">p1</name> <operator pos:start="87:58" pos:end="87:58">-</operator> <name pos:start="87:60" pos:end="87:61">q1</name><operator pos:start="87:62" pos:end="87:62">)</operator> <operator pos:start="87:64" pos:end="87:64">+</operator> <literal type="number" pos:start="87:66" pos:end="87:66">4</literal><operator pos:start="87:67" pos:end="87:67">)</operator> <operator pos:start="87:69" pos:end="87:70">&gt;&gt;</operator> <literal type="number" pos:start="87:72" pos:end="87:72">3</literal></expr></argument>, <argument pos:start="87:75" pos:end="87:77"><expr pos:start="87:75" pos:end="87:77"><operator pos:start="87:75" pos:end="87:75">-</operator><name pos:start="87:76" pos:end="87:77">tc</name></expr></argument>, <argument pos:start="87:80" pos:end="87:81"><expr pos:start="87:80" pos:end="87:81"><name pos:start="87:80" pos:end="87:81">tc</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:55"><expr pos:start="89:17" pos:end="89:54"><name pos:start="89:17" pos:end="89:23"><name pos:start="89:17" pos:end="89:19">pix</name><index pos:start="89:20" pos:end="89:23">[<expr pos:start="89:21" pos:end="89:22"><operator pos:start="89:21" pos:end="89:21">-</operator><literal type="number" pos:start="89:22" pos:end="89:22">1</literal></expr>]</index></name> <operator pos:start="89:25" pos:end="89:25">=</operator> <call pos:start="89:27" pos:end="89:54"><name pos:start="89:27" pos:end="89:30">clip</name><argument_list pos:start="89:31" pos:end="89:54">( <argument pos:start="89:33" pos:end="89:44"><expr pos:start="89:33" pos:end="89:44"><name pos:start="89:33" pos:end="89:34">p0</name> <operator pos:start="89:36" pos:end="89:36">+</operator> <name pos:start="89:38" pos:end="89:44">i_delta</name></expr></argument>, <argument pos:start="89:47" pos:end="89:47"><expr pos:start="89:47" pos:end="89:47"><literal type="number" pos:start="89:47" pos:end="89:47">0</literal></expr></argument>, <argument pos:start="89:50" pos:end="89:52"><expr pos:start="89:50" pos:end="89:52"><literal type="number" pos:start="89:50" pos:end="89:52">255</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="89:60" pos:end="89:68">/* p0' */</comment>

                <expr_stmt pos:start="91:17" pos:end="91:55"><expr pos:start="91:17" pos:end="91:54"><name pos:start="91:17" pos:end="91:22"><name pos:start="91:17" pos:end="91:19">pix</name><index pos:start="91:20" pos:end="91:22">[<expr pos:start="91:21" pos:end="91:21"><literal type="number" pos:start="91:21" pos:end="91:21">0</literal></expr>]</index></name>  <operator pos:start="91:25" pos:end="91:25">=</operator> <call pos:start="91:27" pos:end="91:54"><name pos:start="91:27" pos:end="91:30">clip</name><argument_list pos:start="91:31" pos:end="91:54">( <argument pos:start="91:33" pos:end="91:44"><expr pos:start="91:33" pos:end="91:44"><name pos:start="91:33" pos:end="91:34">q0</name> <operator pos:start="91:36" pos:end="91:36">-</operator> <name pos:start="91:38" pos:end="91:44">i_delta</name></expr></argument>, <argument pos:start="91:47" pos:end="91:47"><expr pos:start="91:47" pos:end="91:47"><literal type="number" pos:start="91:47" pos:end="91:47">0</literal></expr></argument>, <argument pos:start="91:50" pos:end="91:52"><expr pos:start="91:50" pos:end="91:52"><literal type="number" pos:start="91:50" pos:end="91:52">255</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="91:60" pos:end="91:68">/* q0' */</comment>

            </block_content>}</block></if>

            <else pos:start="95:13" pos:end="147:13">else

            <block pos:start="97:13" pos:end="147:13">{<block_content pos:start="99:17" pos:end="145:17">

                <decl_stmt pos:start="99:17" pos:end="99:70"><decl pos:start="99:17" pos:end="99:69"><type pos:start="99:17" pos:end="99:25"><specifier pos:start="99:17" pos:end="99:21">const</specifier> <name pos:start="99:23" pos:end="99:25">int</name></type> <name pos:start="99:27" pos:end="99:27">c</name>  <init pos:start="99:30" pos:end="99:69">= <expr pos:start="99:32" pos:end="99:69"><call pos:start="99:32" pos:end="99:45"><name pos:start="99:32" pos:end="99:34">abs</name><argument_list pos:start="99:35" pos:end="99:45">( <argument pos:start="99:37" pos:end="99:43"><expr pos:start="99:37" pos:end="99:43"><name pos:start="99:37" pos:end="99:38">p0</name> <operator pos:start="99:40" pos:end="99:40">-</operator> <name pos:start="99:42" pos:end="99:43">q0</name></expr></argument> )</argument_list></call> <operator pos:start="99:47" pos:end="99:47">&lt;</operator> <operator pos:start="99:49" pos:end="99:49">(</operator><operator pos:start="99:50" pos:end="99:50">(</operator> <name pos:start="99:52" pos:end="99:56">alpha</name> <operator pos:start="99:58" pos:end="99:59">&gt;&gt;</operator> <literal type="number" pos:start="99:61" pos:end="99:61">2</literal> <operator pos:start="99:63" pos:end="99:63">)</operator> <operator pos:start="99:65" pos:end="99:65">+</operator> <literal type="number" pos:start="99:67" pos:end="99:67">2</literal> <operator pos:start="99:69" pos:end="99:69">)</operator></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="103:17" pos:end="123:17"><if pos:start="103:17" pos:end="117:17">if<condition pos:start="103:19" pos:end="103:48">( <expr pos:start="103:21" pos:end="103:46"><call pos:start="103:21" pos:end="103:34"><name pos:start="103:21" pos:end="103:23">abs</name><argument_list pos:start="103:24" pos:end="103:34">( <argument pos:start="103:26" pos:end="103:32"><expr pos:start="103:26" pos:end="103:32"><name pos:start="103:26" pos:end="103:27">p2</name> <operator pos:start="103:29" pos:end="103:29">-</operator> <name pos:start="103:31" pos:end="103:32">p0</name></expr></argument> )</argument_list></call> <operator pos:start="103:36" pos:end="103:36">&lt;</operator> <name pos:start="103:38" pos:end="103:41">beta</name> <operator pos:start="103:43" pos:end="103:44">&amp;&amp;</operator> <name pos:start="103:46" pos:end="103:46">c</name></expr> )</condition>

                <block pos:start="105:17" pos:end="117:17">{<block_content pos:start="107:21" pos:end="115:70">

                    <decl_stmt pos:start="107:21" pos:end="107:47"><decl pos:start="107:21" pos:end="107:46"><type pos:start="107:21" pos:end="107:33"><specifier pos:start="107:21" pos:end="107:25">const</specifier> <name pos:start="107:27" pos:end="107:33">uint8_t</name></type> <name pos:start="107:35" pos:end="107:36">p3</name> <init pos:start="107:38" pos:end="107:46">= <expr pos:start="107:40" pos:end="107:46"><name pos:start="107:40" pos:end="107:46"><name pos:start="107:40" pos:end="107:42">pix</name><index pos:start="107:43" pos:end="107:46">[<expr pos:start="107:44" pos:end="107:45"><operator pos:start="107:44" pos:end="107:44">-</operator><literal type="number" pos:start="107:45" pos:end="107:45">4</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <comment type="block" pos:start="109:21" pos:end="109:39">/* p0', p1', p2' */</comment>

                    <expr_stmt pos:start="111:21" pos:end="111:72"><expr pos:start="111:21" pos:end="111:71"><name pos:start="111:21" pos:end="111:27"><name pos:start="111:21" pos:end="111:23">pix</name><index pos:start="111:24" pos:end="111:27">[<expr pos:start="111:25" pos:end="111:26"><operator pos:start="111:25" pos:end="111:25">-</operator><literal type="number" pos:start="111:26" pos:end="111:26">1</literal></expr>]</index></name> <operator pos:start="111:29" pos:end="111:29">=</operator> <operator pos:start="111:31" pos:end="111:31">(</operator> <name pos:start="111:33" pos:end="111:34">p2</name> <operator pos:start="111:36" pos:end="111:36">+</operator> <literal type="number" pos:start="111:38" pos:end="111:38">2</literal><operator pos:start="111:39" pos:end="111:39">*</operator><name pos:start="111:40" pos:end="111:41">p1</name> <operator pos:start="111:43" pos:end="111:43">+</operator> <literal type="number" pos:start="111:45" pos:end="111:45">2</literal><operator pos:start="111:46" pos:end="111:46">*</operator><name pos:start="111:47" pos:end="111:48">p0</name> <operator pos:start="111:50" pos:end="111:50">+</operator> <literal type="number" pos:start="111:52" pos:end="111:52">2</literal><operator pos:start="111:53" pos:end="111:53">*</operator><name pos:start="111:54" pos:end="111:55">q0</name> <operator pos:start="111:57" pos:end="111:57">+</operator> <name pos:start="111:59" pos:end="111:60">q1</name> <operator pos:start="111:62" pos:end="111:62">+</operator> <literal type="number" pos:start="111:64" pos:end="111:64">4</literal> <operator pos:start="111:66" pos:end="111:66">)</operator> <operator pos:start="111:68" pos:end="111:69">&gt;&gt;</operator> <literal type="number" pos:start="111:71" pos:end="111:71">3</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="113:21" pos:end="113:61"><expr pos:start="113:21" pos:end="113:60"><name pos:start="113:21" pos:end="113:27"><name pos:start="113:21" pos:end="113:23">pix</name><index pos:start="113:24" pos:end="113:27">[<expr pos:start="113:25" pos:end="113:26"><operator pos:start="113:25" pos:end="113:25">-</operator><literal type="number" pos:start="113:26" pos:end="113:26">2</literal></expr>]</index></name> <operator pos:start="113:29" pos:end="113:29">=</operator> <operator pos:start="113:31" pos:end="113:31">(</operator> <name pos:start="113:33" pos:end="113:34">p2</name> <operator pos:start="113:36" pos:end="113:36">+</operator> <name pos:start="113:38" pos:end="113:39">p1</name> <operator pos:start="113:41" pos:end="113:41">+</operator> <name pos:start="113:43" pos:end="113:44">p0</name> <operator pos:start="113:46" pos:end="113:46">+</operator> <name pos:start="113:48" pos:end="113:49">q0</name> <operator pos:start="113:51" pos:end="113:51">+</operator> <literal type="number" pos:start="113:53" pos:end="113:53">2</literal> <operator pos:start="113:55" pos:end="113:55">)</operator> <operator pos:start="113:57" pos:end="113:58">&gt;&gt;</operator> <literal type="number" pos:start="113:60" pos:end="113:60">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="115:21" pos:end="115:70"><expr pos:start="115:21" pos:end="115:69"><name pos:start="115:21" pos:end="115:27"><name pos:start="115:21" pos:end="115:23">pix</name><index pos:start="115:24" pos:end="115:27">[<expr pos:start="115:25" pos:end="115:26"><operator pos:start="115:25" pos:end="115:25">-</operator><literal type="number" pos:start="115:26" pos:end="115:26">3</literal></expr>]</index></name> <operator pos:start="115:29" pos:end="115:29">=</operator> <operator pos:start="115:31" pos:end="115:31">(</operator> <literal type="number" pos:start="115:33" pos:end="115:33">2</literal><operator pos:start="115:34" pos:end="115:34">*</operator><name pos:start="115:35" pos:end="115:36">p3</name> <operator pos:start="115:38" pos:end="115:38">+</operator> <literal type="number" pos:start="115:40" pos:end="115:40">3</literal><operator pos:start="115:41" pos:end="115:41">*</operator><name pos:start="115:42" pos:end="115:43">p2</name> <operator pos:start="115:45" pos:end="115:45">+</operator> <name pos:start="115:47" pos:end="115:48">p1</name> <operator pos:start="115:50" pos:end="115:50">+</operator> <name pos:start="115:52" pos:end="115:53">p0</name> <operator pos:start="115:55" pos:end="115:55">+</operator> <name pos:start="115:57" pos:end="115:58">q0</name> <operator pos:start="115:60" pos:end="115:60">+</operator> <literal type="number" pos:start="115:62" pos:end="115:62">4</literal> <operator pos:start="115:64" pos:end="115:64">)</operator> <operator pos:start="115:66" pos:end="115:67">&gt;&gt;</operator> <literal type="number" pos:start="115:69" pos:end="115:69">3</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="117:19" pos:end="123:17">else <block pos:start="117:24" pos:end="123:17">{<block_content pos:start="121:21" pos:end="121:58">

                    <comment type="block" pos:start="119:21" pos:end="119:29">/* p0' */</comment>

                    <expr_stmt pos:start="121:21" pos:end="121:58"><expr pos:start="121:21" pos:end="121:57"><name pos:start="121:21" pos:end="121:27"><name pos:start="121:21" pos:end="121:23">pix</name><index pos:start="121:24" pos:end="121:27">[<expr pos:start="121:25" pos:end="121:26"><operator pos:start="121:25" pos:end="121:25">-</operator><literal type="number" pos:start="121:26" pos:end="121:26">1</literal></expr>]</index></name> <operator pos:start="121:29" pos:end="121:29">=</operator> <operator pos:start="121:31" pos:end="121:31">(</operator> <literal type="number" pos:start="121:33" pos:end="121:33">2</literal><operator pos:start="121:34" pos:end="121:34">*</operator><name pos:start="121:35" pos:end="121:36">p1</name> <operator pos:start="121:38" pos:end="121:38">+</operator> <name pos:start="121:40" pos:end="121:41">p0</name> <operator pos:start="121:43" pos:end="121:43">+</operator> <name pos:start="121:45" pos:end="121:46">q1</name> <operator pos:start="121:48" pos:end="121:48">+</operator> <literal type="number" pos:start="121:50" pos:end="121:50">2</literal> <operator pos:start="121:52" pos:end="121:52">)</operator> <operator pos:start="121:54" pos:end="121:55">&gt;&gt;</operator> <literal type="number" pos:start="121:57" pos:end="121:57">2</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="125:17" pos:end="145:17"><if pos:start="125:17" pos:end="139:17">if<condition pos:start="125:19" pos:end="125:48">( <expr pos:start="125:21" pos:end="125:46"><call pos:start="125:21" pos:end="125:34"><name pos:start="125:21" pos:end="125:23">abs</name><argument_list pos:start="125:24" pos:end="125:34">( <argument pos:start="125:26" pos:end="125:32"><expr pos:start="125:26" pos:end="125:32"><name pos:start="125:26" pos:end="125:27">q2</name> <operator pos:start="125:29" pos:end="125:29">-</operator> <name pos:start="125:31" pos:end="125:32">q0</name></expr></argument> )</argument_list></call> <operator pos:start="125:36" pos:end="125:36">&lt;</operator> <name pos:start="125:38" pos:end="125:41">beta</name> <operator pos:start="125:43" pos:end="125:44">&amp;&amp;</operator> <name pos:start="125:46" pos:end="125:46">c</name></expr> )</condition>

                <block pos:start="127:17" pos:end="139:17">{<block_content pos:start="129:21" pos:end="137:69">

                    <decl_stmt pos:start="129:21" pos:end="129:46"><decl pos:start="129:21" pos:end="129:45"><type pos:start="129:21" pos:end="129:33"><specifier pos:start="129:21" pos:end="129:25">const</specifier> <name pos:start="129:27" pos:end="129:33">uint8_t</name></type> <name pos:start="129:35" pos:end="129:36">q3</name> <init pos:start="129:38" pos:end="129:45">= <expr pos:start="129:40" pos:end="129:45"><name pos:start="129:40" pos:end="129:45"><name pos:start="129:40" pos:end="129:42">pix</name><index pos:start="129:43" pos:end="129:45">[<expr pos:start="129:44" pos:end="129:44"><literal type="number" pos:start="129:44" pos:end="129:44">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <comment type="block" pos:start="131:21" pos:end="131:39">/* q0', q1', q2' */</comment>

                    <expr_stmt pos:start="133:21" pos:end="133:71"><expr pos:start="133:21" pos:end="133:70"><name pos:start="133:21" pos:end="133:26"><name pos:start="133:21" pos:end="133:23">pix</name><index pos:start="133:24" pos:end="133:26">[<expr pos:start="133:25" pos:end="133:25"><literal type="number" pos:start="133:25" pos:end="133:25">0</literal></expr>]</index></name> <operator pos:start="133:28" pos:end="133:28">=</operator> <operator pos:start="133:30" pos:end="133:30">(</operator> <name pos:start="133:32" pos:end="133:33">p1</name> <operator pos:start="133:35" pos:end="133:35">+</operator> <literal type="number" pos:start="133:37" pos:end="133:37">2</literal><operator pos:start="133:38" pos:end="133:38">*</operator><name pos:start="133:39" pos:end="133:40">p0</name> <operator pos:start="133:42" pos:end="133:42">+</operator> <literal type="number" pos:start="133:44" pos:end="133:44">2</literal><operator pos:start="133:45" pos:end="133:45">*</operator><name pos:start="133:46" pos:end="133:47">q0</name> <operator pos:start="133:49" pos:end="133:49">+</operator> <literal type="number" pos:start="133:51" pos:end="133:51">2</literal><operator pos:start="133:52" pos:end="133:52">*</operator><name pos:start="133:53" pos:end="133:54">q1</name> <operator pos:start="133:56" pos:end="133:56">+</operator> <name pos:start="133:58" pos:end="133:59">q2</name> <operator pos:start="133:61" pos:end="133:61">+</operator> <literal type="number" pos:start="133:63" pos:end="133:63">4</literal> <operator pos:start="133:65" pos:end="133:65">)</operator> <operator pos:start="133:67" pos:end="133:68">&gt;&gt;</operator> <literal type="number" pos:start="133:70" pos:end="133:70">3</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="135:21" pos:end="135:60"><expr pos:start="135:21" pos:end="135:59"><name pos:start="135:21" pos:end="135:26"><name pos:start="135:21" pos:end="135:23">pix</name><index pos:start="135:24" pos:end="135:26">[<expr pos:start="135:25" pos:end="135:25"><literal type="number" pos:start="135:25" pos:end="135:25">1</literal></expr>]</index></name> <operator pos:start="135:28" pos:end="135:28">=</operator> <operator pos:start="135:30" pos:end="135:30">(</operator> <name pos:start="135:32" pos:end="135:33">p0</name> <operator pos:start="135:35" pos:end="135:35">+</operator> <name pos:start="135:37" pos:end="135:38">q0</name> <operator pos:start="135:40" pos:end="135:40">+</operator> <name pos:start="135:42" pos:end="135:43">q1</name> <operator pos:start="135:45" pos:end="135:45">+</operator> <name pos:start="135:47" pos:end="135:48">q2</name> <operator pos:start="135:50" pos:end="135:50">+</operator> <literal type="number" pos:start="135:52" pos:end="135:52">2</literal> <operator pos:start="135:54" pos:end="135:54">)</operator> <operator pos:start="135:56" pos:end="135:57">&gt;&gt;</operator> <literal type="number" pos:start="135:59" pos:end="135:59">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="137:21" pos:end="137:69"><expr pos:start="137:21" pos:end="137:68"><name pos:start="137:21" pos:end="137:26"><name pos:start="137:21" pos:end="137:23">pix</name><index pos:start="137:24" pos:end="137:26">[<expr pos:start="137:25" pos:end="137:25"><literal type="number" pos:start="137:25" pos:end="137:25">2</literal></expr>]</index></name> <operator pos:start="137:28" pos:end="137:28">=</operator> <operator pos:start="137:30" pos:end="137:30">(</operator> <literal type="number" pos:start="137:32" pos:end="137:32">2</literal><operator pos:start="137:33" pos:end="137:33">*</operator><name pos:start="137:34" pos:end="137:35">q3</name> <operator pos:start="137:37" pos:end="137:37">+</operator> <literal type="number" pos:start="137:39" pos:end="137:39">3</literal><operator pos:start="137:40" pos:end="137:40">*</operator><name pos:start="137:41" pos:end="137:42">q2</name> <operator pos:start="137:44" pos:end="137:44">+</operator> <name pos:start="137:46" pos:end="137:47">q1</name> <operator pos:start="137:49" pos:end="137:49">+</operator> <name pos:start="137:51" pos:end="137:52">q0</name> <operator pos:start="137:54" pos:end="137:54">+</operator> <name pos:start="137:56" pos:end="137:57">p0</name> <operator pos:start="137:59" pos:end="137:59">+</operator> <literal type="number" pos:start="137:61" pos:end="137:61">4</literal> <operator pos:start="137:63" pos:end="137:63">)</operator> <operator pos:start="137:65" pos:end="137:66">&gt;&gt;</operator> <literal type="number" pos:start="137:68" pos:end="137:68">3</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="139:19" pos:end="145:17">else <block pos:start="139:24" pos:end="145:17">{<block_content pos:start="143:21" pos:end="143:57">

                    <comment type="block" pos:start="141:21" pos:end="141:29">/* q0' */</comment>

                    <expr_stmt pos:start="143:21" pos:end="143:57"><expr pos:start="143:21" pos:end="143:56"><name pos:start="143:21" pos:end="143:26"><name pos:start="143:21" pos:end="143:23">pix</name><index pos:start="143:24" pos:end="143:26">[<expr pos:start="143:25" pos:end="143:25"><literal type="number" pos:start="143:25" pos:end="143:25">0</literal></expr>]</index></name> <operator pos:start="143:28" pos:end="143:28">=</operator> <operator pos:start="143:30" pos:end="143:30">(</operator> <literal type="number" pos:start="143:32" pos:end="143:32">2</literal><operator pos:start="143:33" pos:end="143:33">*</operator><name pos:start="143:34" pos:end="143:35">q1</name> <operator pos:start="143:37" pos:end="143:37">+</operator> <name pos:start="143:39" pos:end="143:40">q0</name> <operator pos:start="143:42" pos:end="143:42">+</operator> <name pos:start="143:44" pos:end="143:45">p1</name> <operator pos:start="143:47" pos:end="143:47">+</operator> <literal type="number" pos:start="143:49" pos:end="143:49">2</literal> <operator pos:start="143:51" pos:end="143:51">)</operator> <operator pos:start="143:53" pos:end="143:54">&gt;&gt;</operator> <literal type="number" pos:start="143:56" pos:end="143:56">2</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:26"><expr pos:start="149:13" pos:end="149:25"><name pos:start="149:13" pos:end="149:15">pix</name> <operator pos:start="149:17" pos:end="149:18">+=</operator> <name pos:start="149:20" pos:end="149:25">stride</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
