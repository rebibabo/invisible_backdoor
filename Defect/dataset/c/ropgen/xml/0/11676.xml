<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11676.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:16">helper_ctc1</name><parameter_list pos:start="1:17" pos:end="1:80">(<parameter pos:start="1:18" pos:end="1:34"><decl pos:start="1:18" pos:end="1:34"><type pos:start="1:18" pos:end="1:34"><name pos:start="1:18" pos:end="1:29">CPUMIPSState</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">env</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:53"><decl pos:start="1:37" pos:end="1:53"><type pos:start="1:37" pos:end="1:53"><name pos:start="1:37" pos:end="1:48">target_ulong</name></type> <name pos:start="1:50" pos:end="1:53">arg1</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:66"><decl pos:start="1:56" pos:end="1:66"><type pos:start="1:56" pos:end="1:66"><name pos:start="1:56" pos:end="1:63">uint32_t</name></type> <name pos:start="1:65" pos:end="1:66">fs</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:79"><decl pos:start="1:69" pos:end="1:79"><type pos:start="1:69" pos:end="1:79"><name pos:start="1:69" pos:end="1:76">uint32_t</name></type> <name pos:start="1:78" pos:end="1:79">rt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="117:51">

    <switch pos:start="5:5" pos:end="103:5">switch <condition pos:start="5:12" pos:end="5:15">(<expr pos:start="5:13" pos:end="5:14"><name pos:start="5:13" pos:end="5:14">fs</name></expr>)</condition> <block pos:start="5:17" pos:end="103:5">{<block_content pos:start="7:5" pos:end="101:15">

    <case pos:start="7:5" pos:end="7:11">case <expr pos:start="7:10" pos:end="7:10"><literal type="number" pos:start="7:10" pos:end="7:10">1</literal></expr>:</case>

        <comment type="block" pos:start="9:9" pos:end="9:41">/* UFR Alias - Reset Status FR */</comment>

        <if_stmt pos:start="11:9" pos:end="15:9"><if pos:start="11:9" pos:end="15:9">if <condition pos:start="11:12" pos:end="11:70">(<expr pos:start="11:13" pos:end="11:69"><operator pos:start="11:13" pos:end="11:13">!</operator><operator pos:start="11:14" pos:end="11:14">(</operator><operator pos:start="11:15" pos:end="11:15">(</operator><name pos:start="11:16" pos:end="11:35"><name pos:start="11:16" pos:end="11:18">env</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:30">active_fpu</name><operator pos:start="11:31" pos:end="11:31">.</operator><name pos:start="11:32" pos:end="11:35">fcr0</name></name> <operator pos:start="11:37" pos:end="11:37">&amp;</operator> <operator pos:start="11:39" pos:end="11:39">(</operator><literal type="number" pos:start="11:40" pos:end="11:40">1</literal> <operator pos:start="11:42" pos:end="11:43">&lt;&lt;</operator> <name pos:start="11:45" pos:end="11:53">FCR0_UFRP</name><operator pos:start="11:54" pos:end="11:54">)</operator><operator pos:start="11:55" pos:end="11:55">)</operator> <operator pos:start="11:57" pos:end="11:58">&amp;&amp;</operator> <operator pos:start="11:60" pos:end="11:60">(</operator><name pos:start="11:61" pos:end="11:62">rt</name> <operator pos:start="11:64" pos:end="11:65">==</operator> <literal type="number" pos:start="11:67" pos:end="11:67">0</literal><operator pos:start="11:68" pos:end="11:68">)</operator><operator pos:start="11:69" pos:end="11:69">)</operator></expr>)</condition> <block pos:start="11:72" pos:end="15:9">{<block_content pos:start="13:13" pos:end="13:19">

            <return pos:start="13:13" pos:end="13:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="17:9" pos:end="27:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="17:48">(<expr pos:start="17:13" pos:end="17:47"><name pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:15">env</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:28">CP0_Config5</name></name> <operator pos:start="17:30" pos:end="17:30">&amp;</operator> <operator pos:start="17:32" pos:end="17:32">(</operator><literal type="number" pos:start="17:33" pos:end="17:33">1</literal> <operator pos:start="17:35" pos:end="17:36">&lt;&lt;</operator> <name pos:start="17:38" pos:end="17:46">CP0C5_UFR</name><operator pos:start="17:47" pos:end="17:47">)</operator></expr>)</condition> <block pos:start="17:50" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:32">

            <expr_stmt pos:start="19:13" pos:end="19:48"><expr pos:start="19:13" pos:end="19:47"><name pos:start="19:13" pos:end="19:27"><name pos:start="19:13" pos:end="19:15">env</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:27">CP0_Status</name></name> <operator pos:start="19:29" pos:end="19:30">&amp;=</operator> <operator pos:start="19:32" pos:end="19:32">~</operator><operator pos:start="19:33" pos:end="19:33">(</operator><literal type="number" pos:start="19:34" pos:end="19:34">1</literal> <operator pos:start="19:36" pos:end="19:37">&lt;&lt;</operator> <name pos:start="19:39" pos:end="19:46">CP0St_FR</name><operator pos:start="19:47" pos:end="19:47">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:32"><expr pos:start="21:13" pos:end="21:31"><call pos:start="21:13" pos:end="21:31"><name pos:start="21:13" pos:end="21:26">compute_hflags</name><argument_list pos:start="21:27" pos:end="21:31">(<argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:30">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="23:11" pos:end="27:9">else <block pos:start="23:16" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:49">

            <expr_stmt pos:start="25:13" pos:end="25:49"><expr pos:start="25:13" pos:end="25:48"><call pos:start="25:13" pos:end="25:48"><name pos:start="25:13" pos:end="25:34">helper_raise_exception</name><argument_list pos:start="25:35" pos:end="25:48">(<argument pos:start="25:36" pos:end="25:38"><expr pos:start="25:36" pos:end="25:38"><name pos:start="25:36" pos:end="25:38">env</name></expr></argument>, <argument pos:start="25:41" pos:end="25:47"><expr pos:start="25:41" pos:end="25:47"><name pos:start="25:41" pos:end="25:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:11">case <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">4</literal></expr>:</case>

        <comment type="block" pos:start="33:9" pos:end="33:40">/* UNFR Alias - Set Status FR */</comment>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:70">(<expr pos:start="35:13" pos:end="35:69"><operator pos:start="35:13" pos:end="35:13">!</operator><operator pos:start="35:14" pos:end="35:14">(</operator><operator pos:start="35:15" pos:end="35:15">(</operator><name pos:start="35:16" pos:end="35:35"><name pos:start="35:16" pos:end="35:18">env</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:30">active_fpu</name><operator pos:start="35:31" pos:end="35:31">.</operator><name pos:start="35:32" pos:end="35:35">fcr0</name></name> <operator pos:start="35:37" pos:end="35:37">&amp;</operator> <operator pos:start="35:39" pos:end="35:39">(</operator><literal type="number" pos:start="35:40" pos:end="35:40">1</literal> <operator pos:start="35:42" pos:end="35:43">&lt;&lt;</operator> <name pos:start="35:45" pos:end="35:53">FCR0_UFRP</name><operator pos:start="35:54" pos:end="35:54">)</operator><operator pos:start="35:55" pos:end="35:55">)</operator> <operator pos:start="35:57" pos:end="35:58">&amp;&amp;</operator> <operator pos:start="35:60" pos:end="35:60">(</operator><name pos:start="35:61" pos:end="35:62">rt</name> <operator pos:start="35:64" pos:end="35:65">==</operator> <literal type="number" pos:start="35:67" pos:end="35:67">0</literal><operator pos:start="35:68" pos:end="35:68">)</operator><operator pos:start="35:69" pos:end="35:69">)</operator></expr>)</condition> <block pos:start="35:72" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:19">

            <return pos:start="37:13" pos:end="37:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="51:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:48">(<expr pos:start="41:13" pos:end="41:47"><name pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:15">env</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:28">CP0_Config5</name></name> <operator pos:start="41:30" pos:end="41:30">&amp;</operator> <operator pos:start="41:32" pos:end="41:32">(</operator><literal type="number" pos:start="41:33" pos:end="41:33">1</literal> <operator pos:start="41:35" pos:end="41:36">&lt;&lt;</operator> <name pos:start="41:38" pos:end="41:46">CP0C5_UFR</name><operator pos:start="41:47" pos:end="41:47">)</operator></expr>)</condition> <block pos:start="41:50" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:32">

            <expr_stmt pos:start="43:13" pos:end="43:47"><expr pos:start="43:13" pos:end="43:46"><name pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:15">env</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:27">CP0_Status</name></name> <operator pos:start="43:29" pos:end="43:30">|=</operator> <operator pos:start="43:32" pos:end="43:32">(</operator><literal type="number" pos:start="43:33" pos:end="43:33">1</literal> <operator pos:start="43:35" pos:end="43:36">&lt;&lt;</operator> <name pos:start="43:38" pos:end="43:45">CP0St_FR</name><operator pos:start="43:46" pos:end="43:46">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:32"><expr pos:start="45:13" pos:end="45:31"><call pos:start="45:13" pos:end="45:31"><name pos:start="45:13" pos:end="45:26">compute_hflags</name><argument_list pos:start="45:27" pos:end="45:31">(<argument pos:start="45:28" pos:end="45:30"><expr pos:start="45:28" pos:end="45:30"><name pos:start="45:28" pos:end="45:30">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="51:9">else <block pos:start="47:16" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:49">

            <expr_stmt pos:start="49:13" pos:end="49:49"><expr pos:start="49:13" pos:end="49:48"><call pos:start="49:13" pos:end="49:48"><name pos:start="49:13" pos:end="49:34">helper_raise_exception</name><argument_list pos:start="49:35" pos:end="49:48">(<argument pos:start="49:36" pos:end="49:38"><expr pos:start="49:36" pos:end="49:38"><name pos:start="49:36" pos:end="49:38">env</name></expr></argument>, <argument pos:start="49:41" pos:end="49:47"><expr pos:start="49:41" pos:end="49:47"><name pos:start="49:41" pos:end="49:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:12">case <expr pos:start="55:10" pos:end="55:11"><literal type="number" pos:start="55:10" pos:end="55:11">25</literal></expr>:</case>

        <if_stmt pos:start="57:9" pos:end="59:19"><if pos:start="57:9" pos:end="59:19">if <condition pos:start="57:12" pos:end="57:30">(<expr pos:start="57:13" pos:end="57:29"><name pos:start="57:13" pos:end="57:16">arg1</name> <operator pos:start="57:18" pos:end="57:18">&amp;</operator> <literal type="number" pos:start="57:20" pos:end="57:29">0xffffff00</literal></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:19"><block_content pos:start="59:13" pos:end="59:19">

            <return pos:start="59:13" pos:end="59:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="63:42"><expr pos:start="61:9" pos:end="63:41"><name pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:11">env</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:23">active_fpu</name><operator pos:start="61:24" pos:end="61:24">.</operator><name pos:start="61:25" pos:end="61:29">fcr31</name></name> <operator pos:start="61:31" pos:end="61:31">=</operator> <operator pos:start="61:33" pos:end="61:33">(</operator><name pos:start="61:34" pos:end="61:54"><name pos:start="61:34" pos:end="61:36">env</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:48">active_fpu</name><operator pos:start="61:49" pos:end="61:49">.</operator><name pos:start="61:50" pos:end="61:54">fcr31</name></name> <operator pos:start="61:56" pos:end="61:56">&amp;</operator> <literal type="number" pos:start="61:58" pos:end="61:67">0x017fffff</literal><operator pos:start="61:68" pos:end="61:68">)</operator> <operator pos:start="61:70" pos:end="61:70">|</operator> <operator pos:start="61:72" pos:end="61:72">(</operator><operator pos:start="61:73" pos:end="61:73">(</operator><name pos:start="61:74" pos:end="61:77">arg1</name> <operator pos:start="61:79" pos:end="61:79">&amp;</operator> <literal type="number" pos:start="61:81" pos:end="61:84">0xfe</literal><operator pos:start="61:85" pos:end="61:85">)</operator> <operator pos:start="61:87" pos:end="61:88">&lt;&lt;</operator> <literal type="number" pos:start="61:90" pos:end="61:91">24</literal><operator pos:start="61:92" pos:end="61:92">)</operator> <operator pos:start="61:94" pos:end="61:94">|</operator>

                     <operator pos:start="63:22" pos:end="63:22">(</operator><operator pos:start="63:23" pos:end="63:23">(</operator><name pos:start="63:24" pos:end="63:27">arg1</name> <operator pos:start="63:29" pos:end="63:29">&amp;</operator> <literal type="number" pos:start="63:31" pos:end="63:33">0x1</literal><operator pos:start="63:34" pos:end="63:34">)</operator> <operator pos:start="63:36" pos:end="63:37">&lt;&lt;</operator> <literal type="number" pos:start="63:39" pos:end="63:40">23</literal><operator pos:start="63:41" pos:end="63:41">)</operator></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:12">case <expr pos:start="67:10" pos:end="67:11"><literal type="number" pos:start="67:10" pos:end="67:11">26</literal></expr>:</case>

        <if_stmt pos:start="69:9" pos:end="71:19"><if pos:start="69:9" pos:end="71:19">if <condition pos:start="69:12" pos:end="69:30">(<expr pos:start="69:13" pos:end="69:29"><name pos:start="69:13" pos:end="69:16">arg1</name> <operator pos:start="69:18" pos:end="69:18">&amp;</operator> <literal type="number" pos:start="69:20" pos:end="69:29">0x007c0000</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:19"><block_content pos:start="71:13" pos:end="71:19">

            <return pos:start="71:13" pos:end="71:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:91"><expr pos:start="73:9" pos:end="73:90"><name pos:start="73:9" pos:end="73:29"><name pos:start="73:9" pos:end="73:11">env</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:23">active_fpu</name><operator pos:start="73:24" pos:end="73:24">.</operator><name pos:start="73:25" pos:end="73:29">fcr31</name></name> <operator pos:start="73:31" pos:end="73:31">=</operator> <operator pos:start="73:33" pos:end="73:33">(</operator><name pos:start="73:34" pos:end="73:54"><name pos:start="73:34" pos:end="73:36">env</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:48">active_fpu</name><operator pos:start="73:49" pos:end="73:49">.</operator><name pos:start="73:50" pos:end="73:54">fcr31</name></name> <operator pos:start="73:56" pos:end="73:56">&amp;</operator> <literal type="number" pos:start="73:58" pos:end="73:67">0xfffc0f83</literal><operator pos:start="73:68" pos:end="73:68">)</operator> <operator pos:start="73:70" pos:end="73:70">|</operator> <operator pos:start="73:72" pos:end="73:72">(</operator><name pos:start="73:73" pos:end="73:76">arg1</name> <operator pos:start="73:78" pos:end="73:78">&amp;</operator> <literal type="number" pos:start="73:80" pos:end="73:89">0x0003f07c</literal><operator pos:start="73:90" pos:end="73:90">)</operator></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:12">case <expr pos:start="77:10" pos:end="77:11"><literal type="number" pos:start="77:10" pos:end="77:11">28</literal></expr>:</case>

        <if_stmt pos:start="79:9" pos:end="81:19"><if pos:start="79:9" pos:end="81:19">if <condition pos:start="79:12" pos:end="79:30">(<expr pos:start="79:13" pos:end="79:29"><name pos:start="79:13" pos:end="79:16">arg1</name> <operator pos:start="79:18" pos:end="79:18">&amp;</operator> <literal type="number" pos:start="79:20" pos:end="79:29">0x007c0000</literal></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:19"><block_content pos:start="81:13" pos:end="81:19">

            <return pos:start="81:13" pos:end="81:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="85:42"><expr pos:start="83:9" pos:end="85:41"><name pos:start="83:9" pos:end="83:29"><name pos:start="83:9" pos:end="83:11">env</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:23">active_fpu</name><operator pos:start="83:24" pos:end="83:24">.</operator><name pos:start="83:25" pos:end="83:29">fcr31</name></name> <operator pos:start="83:31" pos:end="83:31">=</operator> <operator pos:start="83:33" pos:end="83:33">(</operator><name pos:start="83:34" pos:end="83:54"><name pos:start="83:34" pos:end="83:36">env</name><operator pos:start="83:37" pos:end="83:38">-&gt;</operator><name pos:start="83:39" pos:end="83:48">active_fpu</name><operator pos:start="83:49" pos:end="83:49">.</operator><name pos:start="83:50" pos:end="83:54">fcr31</name></name> <operator pos:start="83:56" pos:end="83:56">&amp;</operator> <literal type="number" pos:start="83:58" pos:end="83:67">0xfefff07c</literal><operator pos:start="83:68" pos:end="83:68">)</operator> <operator pos:start="83:70" pos:end="83:70">|</operator> <operator pos:start="83:72" pos:end="83:72">(</operator><name pos:start="83:73" pos:end="83:76">arg1</name> <operator pos:start="83:78" pos:end="83:78">&amp;</operator> <literal type="number" pos:start="83:80" pos:end="83:89">0x00000f83</literal><operator pos:start="83:90" pos:end="83:90">)</operator> <operator pos:start="83:92" pos:end="83:92">|</operator>

                     <operator pos:start="85:22" pos:end="85:22">(</operator><operator pos:start="85:23" pos:end="85:23">(</operator><name pos:start="85:24" pos:end="85:27">arg1</name> <operator pos:start="85:29" pos:end="85:29">&amp;</operator> <literal type="number" pos:start="85:31" pos:end="85:33">0x4</literal><operator pos:start="85:34" pos:end="85:34">)</operator> <operator pos:start="85:36" pos:end="85:37">&lt;&lt;</operator> <literal type="number" pos:start="85:39" pos:end="85:40">22</literal><operator pos:start="85:41" pos:end="85:41">)</operator></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <case pos:start="89:5" pos:end="89:12">case <expr pos:start="89:10" pos:end="89:11"><literal type="number" pos:start="89:10" pos:end="89:11">31</literal></expr>:</case>

        <if_stmt pos:start="91:9" pos:end="93:19"><if pos:start="91:9" pos:end="93:19">if <condition pos:start="91:12" pos:end="91:30">(<expr pos:start="91:13" pos:end="91:29"><name pos:start="91:13" pos:end="91:16">arg1</name> <operator pos:start="91:18" pos:end="91:18">&amp;</operator> <literal type="number" pos:start="91:20" pos:end="91:29">0x007c0000</literal></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:19"><block_content pos:start="93:13" pos:end="93:19">

            <return pos:start="93:13" pos:end="93:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:37"><expr pos:start="95:9" pos:end="95:36"><name pos:start="95:9" pos:end="95:29"><name pos:start="95:9" pos:end="95:11">env</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:23">active_fpu</name><operator pos:start="95:24" pos:end="95:24">.</operator><name pos:start="95:25" pos:end="95:29">fcr31</name></name> <operator pos:start="95:31" pos:end="95:31">=</operator> <name pos:start="95:33" pos:end="95:36">arg1</name></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <default pos:start="99:5" pos:end="99:12">default:</default>

        <return pos:start="101:9" pos:end="101:15">return;</return>

    </block_content>}</block></switch>

    <comment type="block" pos:start="105:5" pos:end="105:27">/* set rounding mode */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:31"><expr pos:start="107:5" pos:end="107:30"><call pos:start="107:5" pos:end="107:30"><name pos:start="107:5" pos:end="107:25">restore_rounding_mode</name><argument_list pos:start="107:26" pos:end="107:30">(<argument pos:start="107:27" pos:end="107:29"><expr pos:start="107:27" pos:end="107:29"><name pos:start="107:27" pos:end="107:29">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="109:5" pos:end="109:32">/* set flush-to-zero mode */</comment>

    <expr_stmt pos:start="111:5" pos:end="111:28"><expr pos:start="111:5" pos:end="111:27"><call pos:start="111:5" pos:end="111:27"><name pos:start="111:5" pos:end="111:22">restore_flush_mode</name><argument_list pos:start="111:23" pos:end="111:27">(<argument pos:start="111:24" pos:end="111:26"><expr pos:start="111:24" pos:end="111:26"><name pos:start="111:24" pos:end="111:26">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:61"><expr pos:start="113:5" pos:end="113:60"><call pos:start="113:5" pos:end="113:60"><name pos:start="113:5" pos:end="113:29">set_float_exception_flags</name><argument_list pos:start="113:30" pos:end="113:60">(<argument pos:start="113:31" pos:end="113:31"><expr pos:start="113:31" pos:end="113:31"><literal type="number" pos:start="113:31" pos:end="113:31">0</literal></expr></argument>, <argument pos:start="113:34" pos:end="113:59"><expr pos:start="113:34" pos:end="113:59"><operator pos:start="113:34" pos:end="113:34">&amp;</operator><name pos:start="113:35" pos:end="113:59"><name pos:start="113:35" pos:end="113:37">env</name><operator pos:start="113:38" pos:end="113:39">-&gt;</operator><name pos:start="113:40" pos:end="113:49">active_fpu</name><operator pos:start="113:50" pos:end="113:50">.</operator><name pos:start="113:51" pos:end="113:59">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="115:5" pos:end="117:51"><if pos:start="115:5" pos:end="117:51">if <condition pos:start="115:8" pos:end="115:92">(<expr pos:start="115:9" pos:end="115:91"><operator pos:start="115:9" pos:end="115:9">(</operator><call pos:start="115:10" pos:end="115:45"><name pos:start="115:10" pos:end="115:22">GET_FP_ENABLE</name><argument_list pos:start="115:23" pos:end="115:45">(<argument pos:start="115:24" pos:end="115:44"><expr pos:start="115:24" pos:end="115:44"><name pos:start="115:24" pos:end="115:44"><name pos:start="115:24" pos:end="115:26">env</name><operator pos:start="115:27" pos:end="115:28">-&gt;</operator><name pos:start="115:29" pos:end="115:38">active_fpu</name><operator pos:start="115:39" pos:end="115:39">.</operator><name pos:start="115:40" pos:end="115:44">fcr31</name></name></expr></argument>)</argument_list></call> <operator pos:start="115:47" pos:end="115:47">|</operator> <literal type="number" pos:start="115:49" pos:end="115:52">0x20</literal><operator pos:start="115:53" pos:end="115:53">)</operator> <operator pos:start="115:55" pos:end="115:55">&amp;</operator> <call pos:start="115:57" pos:end="115:91"><name pos:start="115:57" pos:end="115:68">GET_FP_CAUSE</name><argument_list pos:start="115:69" pos:end="115:91">(<argument pos:start="115:70" pos:end="115:90"><expr pos:start="115:70" pos:end="115:90"><name pos:start="115:70" pos:end="115:90"><name pos:start="115:70" pos:end="115:72">env</name><operator pos:start="115:73" pos:end="115:74">-&gt;</operator><name pos:start="115:75" pos:end="115:84">active_fpu</name><operator pos:start="115:85" pos:end="115:85">.</operator><name pos:start="115:86" pos:end="115:90">fcr31</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:51"><block_content pos:start="117:9" pos:end="117:51">

        <expr_stmt pos:start="117:9" pos:end="117:51"><expr pos:start="117:9" pos:end="117:50"><call pos:start="117:9" pos:end="117:50"><name pos:start="117:9" pos:end="117:26">do_raise_exception</name><argument_list pos:start="117:27" pos:end="117:50">(<argument pos:start="117:28" pos:end="117:30"><expr pos:start="117:28" pos:end="117:30"><name pos:start="117:28" pos:end="117:30">env</name></expr></argument>, <argument pos:start="117:33" pos:end="117:40"><expr pos:start="117:33" pos:end="117:40"><name pos:start="117:33" pos:end="117:40">EXCP_FPE</name></expr></argument>, <argument pos:start="117:43" pos:end="117:49"><expr pos:start="117:43" pos:end="117:49"><call pos:start="117:43" pos:end="117:49"><name pos:start="117:43" pos:end="117:47">GETPC</name><argument_list pos:start="117:48" pos:end="117:49">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
