<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17158.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">dca_find_frame_end</name><parameter_list pos:start="1:30" pos:end="3:43">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:45">DCAParseContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">pc1</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:70"><decl pos:start="1:53" pos:end="1:70"><type pos:start="1:53" pos:end="1:70"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:65">uint8_t</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">buf</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:42"><decl pos:start="3:31" pos:end="3:42"><type pos:start="3:31" pos:end="3:42"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:42">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="85:25">

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">start_found</name></decl>, <decl pos:start="7:22" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:22">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">state</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">ParseContext</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:20">pc</name> <init pos:start="11:22" pos:end="11:31">= <expr pos:start="11:24" pos:end="11:31"><operator pos:start="11:24" pos:end="11:24">&amp;</operator><name pos:start="11:25" pos:end="11:31"><name pos:start="11:25" pos:end="11:27">pc1</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:31">pc</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:40"><expr pos:start="15:5" pos:end="15:39"><name pos:start="15:5" pos:end="15:15">start_found</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <name pos:start="15:19" pos:end="15:39"><name pos:start="15:19" pos:end="15:20">pc</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:39">frame_start_found</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:28"><expr pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:9">state</name>       <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:27"><name pos:start="17:19" pos:end="17:20">pc</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:27">state</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:10"><expr pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:5">i</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <literal type="number" pos:start="21:9" pos:end="21:9">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="47:5"><if pos:start="23:5" pos:end="47:5">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:20">start_found</name></expr>)</condition> <block pos:start="23:23" pos:end="47:5">{<block_content pos:start="25:9" pos:end="45:9">

        <for pos:start="25:9" pos:end="45:9">for <control pos:start="25:13" pos:end="25:38">(<init pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">i</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init> <condition pos:start="25:21" pos:end="25:33"><expr pos:start="25:21" pos:end="25:32"><name pos:start="25:21" pos:end="25:21">i</name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <name pos:start="25:25" pos:end="25:32">buf_size</name></expr>;</condition> <incr pos:start="25:35" pos:end="25:37"><expr pos:start="25:35" pos:end="25:37"><name pos:start="25:35" pos:end="25:35">i</name><operator pos:start="25:36" pos:end="25:37">++</operator></expr></incr>)</control> <block pos:start="25:40" pos:end="45:9">{<block_content pos:start="27:13" pos:end="43:13">

            <expr_stmt pos:start="27:13" pos:end="27:42"><expr pos:start="27:13" pos:end="27:41"><name pos:start="27:13" pos:end="27:17">state</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <operator pos:start="27:21" pos:end="27:21">(</operator><name pos:start="27:22" pos:end="27:26">state</name> <operator pos:start="27:28" pos:end="27:29">&lt;&lt;</operator> <literal type="number" pos:start="27:31" pos:end="27:31">8</literal><operator pos:start="27:32" pos:end="27:32">)</operator> <operator pos:start="27:34" pos:end="27:34">|</operator> <name pos:start="27:36" pos:end="27:41"><name pos:start="27:36" pos:end="27:38">buf</name><index pos:start="27:39" pos:end="27:41">[<expr pos:start="27:40" pos:end="27:40"><name pos:start="27:40" pos:end="27:40">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="29:13" pos:end="43:13"><if pos:start="29:13" pos:end="43:13">if <condition pos:start="29:16" pos:end="29:51">(<expr pos:start="29:17" pos:end="29:50"><call pos:start="29:17" pos:end="29:50"><name pos:start="29:17" pos:end="29:25">IS_MARKER</name><argument_list pos:start="29:26" pos:end="29:50">(<argument pos:start="29:27" pos:end="29:31"><expr pos:start="29:27" pos:end="29:31"><name pos:start="29:27" pos:end="29:31">state</name></expr></argument>, <argument pos:start="29:34" pos:end="29:34"><expr pos:start="29:34" pos:end="29:34"><name pos:start="29:34" pos:end="29:34">i</name></expr></argument>, <argument pos:start="29:37" pos:end="29:39"><expr pos:start="29:37" pos:end="29:39"><name pos:start="29:37" pos:end="29:39">buf</name></expr></argument>, <argument pos:start="29:42" pos:end="29:49"><expr pos:start="29:42" pos:end="29:49"><name pos:start="29:42" pos:end="29:49">buf_size</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:53" pos:end="43:13">{<block_content pos:start="31:17" pos:end="41:17">

                <if_stmt pos:start="31:17" pos:end="41:17"><if pos:start="31:17" pos:end="41:17">if <condition pos:start="31:20" pos:end="31:110">(<expr pos:start="31:21" pos:end="31:109"><operator pos:start="31:21" pos:end="31:21">!</operator><name pos:start="31:22" pos:end="31:36"><name pos:start="31:22" pos:end="31:24">pc1</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:36">lastmarker</name></name> <operator pos:start="31:38" pos:end="31:39">||</operator> <name pos:start="31:41" pos:end="31:45">state</name> <operator pos:start="31:47" pos:end="31:48">==</operator> <name pos:start="31:50" pos:end="31:64"><name pos:start="31:50" pos:end="31:52">pc1</name><operator pos:start="31:53" pos:end="31:54">-&gt;</operator><name pos:start="31:55" pos:end="31:64">lastmarker</name></name> <operator pos:start="31:66" pos:end="31:67">||</operator> <name pos:start="31:69" pos:end="31:83"><name pos:start="31:69" pos:end="31:71">pc1</name><operator pos:start="31:72" pos:end="31:73">-&gt;</operator><name pos:start="31:74" pos:end="31:83">lastmarker</name></name> <operator pos:start="31:85" pos:end="31:86">==</operator> <name pos:start="31:88" pos:end="31:109">DCA_SYNCWORD_SUBSTREAM</name></expr>)</condition> <block pos:start="31:112" pos:end="41:17">{<block_content pos:start="33:21" pos:end="39:26">

                    <expr_stmt pos:start="33:21" pos:end="33:40"><expr pos:start="33:21" pos:end="33:39"><name pos:start="33:21" pos:end="33:31">start_found</name>     <operator pos:start="33:37" pos:end="33:37">=</operator> <literal type="number" pos:start="33:39" pos:end="33:39">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="35:21" pos:end="35:44"><expr pos:start="35:21" pos:end="35:43"><name pos:start="35:21" pos:end="35:35"><name pos:start="35:21" pos:end="35:23">pc1</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:35">lastmarker</name></name> <operator pos:start="35:37" pos:end="35:37">=</operator> <name pos:start="35:39" pos:end="35:43">state</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="37:21" pos:end="37:24"><expr pos:start="37:21" pos:end="37:23"><name pos:start="37:21" pos:end="37:21">i</name><operator pos:start="37:22" pos:end="37:23">++</operator></expr>;</expr_stmt>

                    <break pos:start="39:21" pos:end="39:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="79:5"><if pos:start="49:5" pos:end="79:5">if <condition pos:start="49:8" pos:end="49:20">(<expr pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:19">start_found</name></expr>)</condition> <block pos:start="49:22" pos:end="79:5">{<block_content pos:start="51:9" pos:end="77:9">

        <for pos:start="51:9" pos:end="77:9">for <control pos:start="51:13" pos:end="51:33">(<init pos:start="51:14" pos:end="51:14">;</init> <condition pos:start="51:16" pos:end="51:28"><expr pos:start="51:16" pos:end="51:27"><name pos:start="51:16" pos:end="51:16">i</name> <operator pos:start="51:18" pos:end="51:18">&lt;</operator> <name pos:start="51:20" pos:end="51:27">buf_size</name></expr>;</condition> <incr pos:start="51:30" pos:end="51:32"><expr pos:start="51:30" pos:end="51:32"><name pos:start="51:30" pos:end="51:30">i</name><operator pos:start="51:31" pos:end="51:32">++</operator></expr></incr>)</control> <block pos:start="51:35" pos:end="77:9">{<block_content pos:start="53:13" pos:end="75:13">

            <expr_stmt pos:start="53:13" pos:end="53:24"><expr pos:start="53:13" pos:end="53:23"><name pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:15">pc1</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:21">size</name></name><operator pos:start="53:22" pos:end="53:23">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:42"><expr pos:start="55:13" pos:end="55:41"><name pos:start="55:13" pos:end="55:17">state</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <operator pos:start="55:21" pos:end="55:21">(</operator><name pos:start="55:22" pos:end="55:26">state</name> <operator pos:start="55:28" pos:end="55:29">&lt;&lt;</operator> <literal type="number" pos:start="55:31" pos:end="55:31">8</literal><operator pos:start="55:32" pos:end="55:32">)</operator> <operator pos:start="55:34" pos:end="55:34">|</operator> <name pos:start="55:36" pos:end="55:41"><name pos:start="55:36" pos:end="55:38">buf</name><index pos:start="55:39" pos:end="55:41">[<expr pos:start="55:40" pos:end="55:40"><name pos:start="55:40" pos:end="55:40">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="59:40"><if pos:start="57:13" pos:end="59:40">if <condition pos:start="57:16" pos:end="57:64">(<expr pos:start="57:17" pos:end="57:63"><name pos:start="57:17" pos:end="57:21">state</name> <operator pos:start="57:23" pos:end="57:24">==</operator> <name pos:start="57:26" pos:end="57:47">DCA_SYNCWORD_SUBSTREAM</name> <operator pos:start="57:49" pos:end="57:50">&amp;&amp;</operator> <operator pos:start="57:52" pos:end="57:52">!</operator><name pos:start="57:53" pos:end="57:63"><name pos:start="57:53" pos:end="57:55">pc1</name><operator pos:start="57:56" pos:end="57:57">-&gt;</operator><name pos:start="57:58" pos:end="57:63">hd_pos</name></name></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:40"><block_content pos:start="59:17" pos:end="59:40">

                <expr_stmt pos:start="59:17" pos:end="59:40"><expr pos:start="59:17" pos:end="59:39"><name pos:start="59:17" pos:end="59:27"><name pos:start="59:17" pos:end="59:19">pc1</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:27">hd_pos</name></name> <operator pos:start="59:29" pos:end="59:29">=</operator> <name pos:start="59:31" pos:end="59:39"><name pos:start="59:31" pos:end="59:33">pc1</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:39">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="61:13" pos:end="75:13"><if pos:start="61:13" pos:end="75:13">if <condition pos:start="61:16" pos:end="61:126">(<expr pos:start="61:17" pos:end="61:125"><call pos:start="61:17" pos:end="61:50"><name pos:start="61:17" pos:end="61:25">IS_MARKER</name><argument_list pos:start="61:26" pos:end="61:50">(<argument pos:start="61:27" pos:end="61:31"><expr pos:start="61:27" pos:end="61:31"><name pos:start="61:27" pos:end="61:31">state</name></expr></argument>, <argument pos:start="61:34" pos:end="61:34"><expr pos:start="61:34" pos:end="61:34"><name pos:start="61:34" pos:end="61:34">i</name></expr></argument>, <argument pos:start="61:37" pos:end="61:39"><expr pos:start="61:37" pos:end="61:39"><name pos:start="61:37" pos:end="61:39">buf</name></expr></argument>, <argument pos:start="61:42" pos:end="61:49"><expr pos:start="61:42" pos:end="61:49"><name pos:start="61:42" pos:end="61:49">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="61:52" pos:end="61:53">&amp;&amp;</operator> <operator pos:start="61:55" pos:end="61:55">(</operator><name pos:start="61:56" pos:end="61:60">state</name> <operator pos:start="61:62" pos:end="61:63">==</operator> <name pos:start="61:65" pos:end="61:79"><name pos:start="61:65" pos:end="61:67">pc1</name><operator pos:start="61:68" pos:end="61:69">-&gt;</operator><name pos:start="61:70" pos:end="61:79">lastmarker</name></name> <operator pos:start="61:81" pos:end="61:82">||</operator> <name pos:start="61:84" pos:end="61:98"><name pos:start="61:84" pos:end="61:86">pc1</name><operator pos:start="61:87" pos:end="61:88">-&gt;</operator><name pos:start="61:89" pos:end="61:98">lastmarker</name></name> <operator pos:start="61:100" pos:end="61:101">==</operator> <name pos:start="61:103" pos:end="61:124">DCA_SYNCWORD_SUBSTREAM</name><operator pos:start="61:125" pos:end="61:125">)</operator></expr>)</condition> <block pos:start="61:128" pos:end="75:13">{<block_content pos:start="63:17" pos:end="73:29">

                <if_stmt pos:start="63:17" pos:end="65:29"><if pos:start="63:17" pos:end="65:29">if <condition pos:start="63:20" pos:end="63:47">(<expr pos:start="63:21" pos:end="63:46"><name pos:start="63:21" pos:end="63:34"><name pos:start="63:21" pos:end="63:23">pc1</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:34">framesize</name></name> <operator pos:start="63:36" pos:end="63:36">&gt;</operator> <name pos:start="63:38" pos:end="63:46"><name pos:start="63:38" pos:end="63:40">pc1</name><operator pos:start="63:41" pos:end="63:42">-&gt;</operator><name pos:start="63:43" pos:end="63:46">size</name></name></expr>)</condition><block type="pseudo" pos:start="65:21" pos:end="65:29"><block_content pos:start="65:21" pos:end="65:29">

                    <continue pos:start="65:21" pos:end="65:29">continue;</continue></block_content></block></if></if_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:42"><expr pos:start="67:17" pos:end="67:41"><name pos:start="67:17" pos:end="67:37"><name pos:start="67:17" pos:end="67:18">pc</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:37">frame_start_found</name></name> <operator pos:start="67:39" pos:end="67:39">=</operator> <literal type="number" pos:start="67:41" pos:end="67:41">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:43"><expr pos:start="69:17" pos:end="69:42"><name pos:start="69:17" pos:end="69:25"><name pos:start="69:17" pos:end="69:18">pc</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:25">state</name></name>             <operator pos:start="69:39" pos:end="69:39">=</operator> <operator pos:start="69:41" pos:end="69:41">-</operator><literal type="number" pos:start="69:42" pos:end="69:42">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:42"><expr pos:start="71:17" pos:end="71:41"><name pos:start="71:17" pos:end="71:25"><name pos:start="71:17" pos:end="71:19">pc1</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:25">size</name></name>             <operator pos:start="71:39" pos:end="71:39">=</operator> <literal type="number" pos:start="71:41" pos:end="71:41">0</literal></expr>;</expr_stmt>

                <return pos:start="73:17" pos:end="73:29">return <expr pos:start="73:24" pos:end="73:28"><name pos:start="73:24" pos:end="73:24">i</name> <operator pos:start="73:26" pos:end="73:26">-</operator> <literal type="number" pos:start="73:28" pos:end="73:28">3</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:40"><expr pos:start="81:5" pos:end="81:39"><name pos:start="81:5" pos:end="81:25"><name pos:start="81:5" pos:end="81:6">pc</name><operator pos:start="81:7" pos:end="81:8">-&gt;</operator><name pos:start="81:9" pos:end="81:25">frame_start_found</name></name> <operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:39">start_found</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:34"><expr pos:start="83:5" pos:end="83:33"><name pos:start="83:5" pos:end="83:13"><name pos:start="83:5" pos:end="83:6">pc</name><operator pos:start="83:7" pos:end="83:8">-&gt;</operator><name pos:start="83:9" pos:end="83:13">state</name></name>             <operator pos:start="83:27" pos:end="83:27">=</operator> <name pos:start="83:29" pos:end="83:33">state</name></expr>;</expr_stmt>

    <return pos:start="85:5" pos:end="85:25">return <expr pos:start="85:12" pos:end="85:24"><name pos:start="85:12" pos:end="85:24">END_NOT_FOUND</name></expr>;</return>

</block_content>}</block></function>
</unit>
