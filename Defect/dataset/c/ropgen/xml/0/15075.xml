<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15075.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:22">block_job_create</name><parameter_list pos:start="1:23" pos:end="5:50">(<parameter pos:start="1:24" pos:end="1:51"><decl pos:start="1:24" pos:end="1:51"><type pos:start="1:24" pos:end="1:51"><specifier pos:start="1:24" pos:end="1:28">const</specifier> <name pos:start="1:30" pos:end="1:43">BlockJobDriver</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:51">driver</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:73"><decl pos:start="1:54" pos:end="1:73"><type pos:start="1:54" pos:end="1:73"><name pos:start="1:54" pos:end="1:69">BlockDriverState</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:73">bs</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:36"><decl pos:start="3:24" pos:end="3:36"><type pos:start="3:24" pos:end="3:36"><name pos:start="3:24" pos:end="3:30">int64_t</name></type> <name pos:start="3:32" pos:end="3:36">speed</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:67"><decl pos:start="3:39" pos:end="3:67"><type pos:start="3:39" pos:end="3:67"><name pos:start="3:39" pos:end="3:63">BlockDriverCompletionFunc</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier></type><name pos:start="3:66" pos:end="3:67">cb</name></decl></parameter>,

                       <parameter pos:start="5:24" pos:end="5:35"><decl pos:start="5:24" pos:end="5:35"><type pos:start="5:24" pos:end="5:35"><name pos:start="5:24" pos:end="5:27">void</name> <modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:35">opaque</name></decl></parameter>, <parameter pos:start="5:38" pos:end="5:49"><decl pos:start="5:38" pos:end="5:49"><type pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:42">Error</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier><modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:49">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="71:1">{<block_content pos:start="9:5" pos:end="69:15">

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">BlockJob</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">job</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:35">(<expr pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:10">bs</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:15">job</name></name> <operator pos:start="13:17" pos:end="13:18">||</operator> <call pos:start="13:20" pos:end="13:34"><name pos:start="13:20" pos:end="13:30">bdrv_in_use</name><argument_list pos:start="13:31" pos:end="13:34">(<argument pos:start="13:32" pos:end="13:33"><expr pos:start="13:32" pos:end="13:33"><name pos:start="13:32" pos:end="13:33">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:37" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:20">

        <expr_stmt pos:start="15:9" pos:end="15:70"><expr pos:start="15:9" pos:end="15:69"><call pos:start="15:9" pos:end="15:69"><name pos:start="15:9" pos:end="15:17">error_set</name><argument_list pos:start="15:18" pos:end="15:69">(<argument pos:start="15:19" pos:end="15:22"><expr pos:start="15:19" pos:end="15:22"><name pos:start="15:19" pos:end="15:22">errp</name></expr></argument>, <argument pos:start="15:25" pos:end="15:42"><expr pos:start="15:25" pos:end="15:42"><name pos:start="15:25" pos:end="15:42">QERR_DEVICE_IN_USE</name></expr></argument>, <argument pos:start="15:45" pos:end="15:68"><expr pos:start="15:45" pos:end="15:68"><call pos:start="15:45" pos:end="15:68"><name pos:start="15:45" pos:end="15:64">bdrv_get_device_name</name><argument_list pos:start="15:65" pos:end="15:68">(<argument pos:start="15:66" pos:end="15:67"><expr pos:start="15:66" pos:end="15:67"><name pos:start="15:66" pos:end="15:67">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:17"><expr pos:start="21:5" pos:end="21:16"><call pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:12">bdrv_ref</name><argument_list pos:start="21:13" pos:end="21:16">(<argument pos:start="21:14" pos:end="21:15"><expr pos:start="21:14" pos:end="21:15"><name pos:start="21:14" pos:end="21:15">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><call pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:19">bdrv_set_in_use</name><argument_list pos:start="23:20" pos:end="23:26">(<argument pos:start="23:21" pos:end="23:22"><expr pos:start="23:21" pos:end="23:22"><name pos:start="23:21" pos:end="23:22">bs</name></expr></argument>, <argument pos:start="23:25" pos:end="23:25"><expr pos:start="23:25" pos:end="23:25"><literal type="number" pos:start="23:25" pos:end="23:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:43"><expr pos:start="27:5" pos:end="27:42"><name pos:start="27:5" pos:end="27:7">job</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:42"><name pos:start="27:11" pos:end="27:19">g_malloc0</name><argument_list pos:start="27:20" pos:end="27:42">(<argument pos:start="27:21" pos:end="27:41"><expr pos:start="27:21" pos:end="27:41"><name pos:start="27:21" pos:end="27:41"><name pos:start="27:21" pos:end="27:26">driver</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:41">instance_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:32"><expr pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:7">job</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:15">driver</name></name>        <operator pos:start="29:24" pos:end="29:24">=</operator> <name pos:start="29:26" pos:end="29:31">driver</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:28"><expr pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:7">job</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:11">bs</name></name>            <operator pos:start="31:24" pos:end="31:24">=</operator> <name pos:start="31:26" pos:end="31:27">bs</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:28"><expr pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:7">job</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:11">cb</name></name>            <operator pos:start="33:24" pos:end="33:24">=</operator> <name pos:start="33:26" pos:end="33:27">cb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:32"><expr pos:start="35:5" pos:end="35:31"><name pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:7">job</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:15">opaque</name></name>        <operator pos:start="35:24" pos:end="35:24">=</operator> <name pos:start="35:26" pos:end="35:31">opaque</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:30"><expr pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:7">job</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:13">busy</name></name>          <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:29">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:18"><expr pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:11"><name pos:start="39:5" pos:end="39:6">bs</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:11">job</name></name> <operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:17">job</name></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:67">/* Only set speed when necessary to avoid NotSupported error */</comment>

    <if_stmt pos:start="45:5" pos:end="67:5"><if pos:start="45:5" pos:end="67:5">if <condition pos:start="45:8" pos:end="45:19">(<expr pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:13">speed</name> <operator pos:start="45:15" pos:end="45:16">!=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>)</condition> <block pos:start="45:21" pos:end="67:5">{<block_content pos:start="47:9" pos:end="65:9">

        <decl_stmt pos:start="47:9" pos:end="47:32"><decl pos:start="47:9" pos:end="47:31"><type pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:13">Error</name> <modifier pos:start="47:15" pos:end="47:15">*</modifier></type><name pos:start="47:16" pos:end="47:24">local_err</name> <init pos:start="47:26" pos:end="47:31">= <expr pos:start="47:28" pos:end="47:31"><name pos:start="47:28" pos:end="47:31">NULL</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:52"><expr pos:start="51:9" pos:end="51:51"><call pos:start="51:9" pos:end="51:51"><name pos:start="51:9" pos:end="51:27">block_job_set_speed</name><argument_list pos:start="51:28" pos:end="51:51">(<argument pos:start="51:29" pos:end="51:31"><expr pos:start="51:29" pos:end="51:31"><name pos:start="51:29" pos:end="51:31">job</name></expr></argument>, <argument pos:start="51:34" pos:end="51:38"><expr pos:start="51:34" pos:end="51:38"><name pos:start="51:34" pos:end="51:38">speed</name></expr></argument>, <argument pos:start="51:41" pos:end="51:50"><expr pos:start="51:41" pos:end="51:50"><operator pos:start="51:41" pos:end="51:41">&amp;</operator><name pos:start="51:42" pos:end="51:50">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="65:9"><if pos:start="53:9" pos:end="65:9">if <condition pos:start="53:12" pos:end="53:22">(<expr pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:21">local_err</name></expr>)</condition> <block pos:start="53:24" pos:end="65:9">{<block_content pos:start="55:13" pos:end="63:24">

            <expr_stmt pos:start="55:13" pos:end="55:27"><expr pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:14">bs</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:19">job</name></name> <operator pos:start="55:21" pos:end="55:21">=</operator> <name pos:start="55:23" pos:end="55:26">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:24"><expr pos:start="57:13" pos:end="57:23"><call pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:18">g_free</name><argument_list pos:start="57:19" pos:end="57:23">(<argument pos:start="57:20" pos:end="57:22"><expr pos:start="57:20" pos:end="57:22"><name pos:start="57:20" pos:end="57:22">job</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:35"><expr pos:start="59:13" pos:end="59:34"><call pos:start="59:13" pos:end="59:34"><name pos:start="59:13" pos:end="59:27">bdrv_set_in_use</name><argument_list pos:start="59:28" pos:end="59:34">(<argument pos:start="59:29" pos:end="59:30"><expr pos:start="59:29" pos:end="59:30"><name pos:start="59:29" pos:end="59:30">bs</name></expr></argument>, <argument pos:start="59:33" pos:end="59:33"><expr pos:start="59:33" pos:end="59:33"><literal type="number" pos:start="59:33" pos:end="59:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:45"><expr pos:start="61:13" pos:end="61:44"><call pos:start="61:13" pos:end="61:44"><name pos:start="61:13" pos:end="61:27">error_propagate</name><argument_list pos:start="61:28" pos:end="61:44">(<argument pos:start="61:29" pos:end="61:32"><expr pos:start="61:29" pos:end="61:32"><name pos:start="61:29" pos:end="61:32">errp</name></expr></argument>, <argument pos:start="61:35" pos:end="61:43"><expr pos:start="61:35" pos:end="61:43"><name pos:start="61:35" pos:end="61:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="63:13" pos:end="63:24">return <expr pos:start="63:20" pos:end="63:23"><name pos:start="63:20" pos:end="63:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="69:5" pos:end="69:15">return <expr pos:start="69:12" pos:end="69:14"><name pos:start="69:12" pos:end="69:14">job</name></expr>;</return>

</block_content>}</block></function>
</unit>
