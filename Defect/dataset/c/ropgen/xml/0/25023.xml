<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25023.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">sd_blk_write</name><parameter_list pos:start="1:25" pos:end="1:66">(<parameter pos:start="1:26" pos:end="1:36"><decl pos:start="1:26" pos:end="1:36"><type pos:start="1:26" pos:end="1:36"><name pos:start="1:26" pos:end="1:32">SDState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:36">sd</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:46">uint64_t</name></type> <name pos:start="1:48" pos:end="1:51">addr</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:61">uint32_t</name></type> <name pos:start="1:63" pos:end="1:65">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:5">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:16">end</name> <init pos:start="5:18" pos:end="5:29">= <expr pos:start="5:20" pos:end="5:29"><name pos:start="5:20" pos:end="5:23">addr</name> <operator pos:start="5:25" pos:end="5:25">+</operator> <name pos:start="5:27" pos:end="5:29">len</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="17:9"><if pos:start="9:5" pos:end="17:9">if <condition pos:start="9:8" pos:end="9:34">(<expr pos:start="9:9" pos:end="9:33"><operator pos:start="9:9" pos:end="9:9">(</operator><name pos:start="9:10" pos:end="9:13">addr</name> <operator pos:start="9:15" pos:end="9:15">&amp;</operator> <literal type="number" pos:start="9:17" pos:end="9:19">511</literal><operator pos:start="9:20" pos:end="9:20">)</operator> <operator pos:start="9:22" pos:end="9:23">||</operator> <name pos:start="9:25" pos:end="9:27">len</name> <operator pos:start="9:29" pos:end="9:29">&lt;</operator> <literal type="number" pos:start="9:31" pos:end="9:33">512</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="17:9"><block_content pos:start="11:9" pos:end="17:9">

        <if_stmt pos:start="11:9" pos:end="17:9"><if pos:start="11:9" pos:end="17:9">if <condition pos:start="11:12" pos:end="11:72">(<expr pos:start="11:13" pos:end="11:71"><operator pos:start="11:13" pos:end="11:13">!</operator><name pos:start="11:14" pos:end="11:21"><name pos:start="11:14" pos:end="11:15">sd</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:21">bdrv</name></name> <operator pos:start="11:23" pos:end="11:24">||</operator> <call pos:start="11:26" pos:end="11:67"><name pos:start="11:26" pos:end="11:34">bdrv_read</name><argument_list pos:start="11:35" pos:end="11:67">(<argument pos:start="11:36" pos:end="11:43"><expr pos:start="11:36" pos:end="11:43"><name pos:start="11:36" pos:end="11:43"><name pos:start="11:36" pos:end="11:37">sd</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:43">bdrv</name></name></expr></argument>, <argument pos:start="11:46" pos:end="11:54"><expr pos:start="11:46" pos:end="11:54"><name pos:start="11:46" pos:end="11:49">addr</name> <operator pos:start="11:51" pos:end="11:52">&gt;&gt;</operator> <literal type="number" pos:start="11:54" pos:end="11:54">9</literal></expr></argument>, <argument pos:start="11:57" pos:end="11:63"><expr pos:start="11:57" pos:end="11:63"><name pos:start="11:57" pos:end="11:63"><name pos:start="11:57" pos:end="11:58">sd</name><operator pos:start="11:59" pos:end="11:60">-&gt;</operator><name pos:start="11:61" pos:end="11:63">buf</name></name></expr></argument>, <argument pos:start="11:66" pos:end="11:66"><expr pos:start="11:66" pos:end="11:66"><literal type="number" pos:start="11:66" pos:end="11:66">1</literal></expr></argument>)</argument_list></call> <operator pos:start="11:69" pos:end="11:69">&lt;</operator> <literal type="number" pos:start="11:71" pos:end="11:71">0</literal></expr>)</condition> <block pos:start="11:74" pos:end="17:9">{<block_content pos:start="13:13" pos:end="15:19">

            <expr_stmt pos:start="13:13" pos:end="13:71"><expr pos:start="13:13" pos:end="13:70"><call pos:start="13:13" pos:end="13:70"><name pos:start="13:13" pos:end="13:19">fprintf</name><argument_list pos:start="13:20" pos:end="13:70">(<argument pos:start="13:21" pos:end="13:26"><expr pos:start="13:21" pos:end="13:26"><name pos:start="13:21" pos:end="13:26">stderr</name></expr></argument>, <argument pos:start="13:29" pos:end="13:69"><expr pos:start="13:29" pos:end="13:69"><literal type="string" pos:start="13:29" pos:end="13:69">"sd_blk_write: read error on host side\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="15:13" pos:end="15:19">return;</return>

        </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="61:5"><if pos:start="21:5" pos:end="51:5">if <condition pos:start="21:8" pos:end="21:34">(<expr pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:11">end</name> <operator pos:start="21:13" pos:end="21:13">&gt;</operator> <operator pos:start="21:15" pos:end="21:15">(</operator><name pos:start="21:16" pos:end="21:19">addr</name> <operator pos:start="21:21" pos:end="21:21">&amp;</operator> <operator pos:start="21:23" pos:end="21:23">~</operator><literal type="number" pos:start="21:24" pos:end="21:26">511</literal><operator pos:start="21:27" pos:end="21:27">)</operator> <operator pos:start="21:29" pos:end="21:29">+</operator> <literal type="number" pos:start="21:31" pos:end="21:33">512</literal></expr>)</condition> <block pos:start="21:36" pos:end="51:5">{<block_content pos:start="23:9" pos:end="49:9">

        <expr_stmt pos:start="23:9" pos:end="23:69"><expr pos:start="23:9" pos:end="23:68"><call pos:start="23:9" pos:end="23:68"><name pos:start="23:9" pos:end="23:14">memcpy</name><argument_list pos:start="23:15" pos:end="23:68">(<argument pos:start="23:16" pos:end="23:37"><expr pos:start="23:16" pos:end="23:37"><name pos:start="23:16" pos:end="23:22"><name pos:start="23:16" pos:end="23:17">sd</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:22">buf</name></name> <operator pos:start="23:24" pos:end="23:24">+</operator> <operator pos:start="23:26" pos:end="23:26">(</operator><name pos:start="23:27" pos:end="23:30">addr</name> <operator pos:start="23:32" pos:end="23:32">&amp;</operator> <literal type="number" pos:start="23:34" pos:end="23:36">511</literal><operator pos:start="23:37" pos:end="23:37">)</operator></expr></argument>, <argument pos:start="23:40" pos:end="23:47"><expr pos:start="23:40" pos:end="23:47"><name pos:start="23:40" pos:end="23:47"><name pos:start="23:40" pos:end="23:41">sd</name><operator pos:start="23:42" pos:end="23:43">-&gt;</operator><name pos:start="23:44" pos:end="23:47">data</name></name></expr></argument>, <argument pos:start="23:50" pos:end="23:67"><expr pos:start="23:50" pos:end="23:67"><literal type="number" pos:start="23:50" pos:end="23:54">512</literal> <operator pos:start="23:54" pos:end="23:54">-</operator> <operator pos:start="23:56" pos:end="23:56">(</operator><name pos:start="23:57" pos:end="23:60">addr</name> <operator pos:start="23:62" pos:end="23:62">&amp;</operator> <literal type="number" pos:start="23:64" pos:end="23:66">511</literal><operator pos:start="23:67" pos:end="23:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:60">(<expr pos:start="25:13" pos:end="25:59"><call pos:start="25:13" pos:end="25:55"><name pos:start="25:13" pos:end="25:22">bdrv_write</name><argument_list pos:start="25:23" pos:end="25:55">(<argument pos:start="25:24" pos:end="25:31"><expr pos:start="25:24" pos:end="25:31"><name pos:start="25:24" pos:end="25:31"><name pos:start="25:24" pos:end="25:25">sd</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:31">bdrv</name></name></expr></argument>, <argument pos:start="25:34" pos:end="25:42"><expr pos:start="25:34" pos:end="25:42"><name pos:start="25:34" pos:end="25:37">addr</name> <operator pos:start="25:39" pos:end="25:40">&gt;&gt;</operator> <literal type="number" pos:start="25:42" pos:end="25:42">9</literal></expr></argument>, <argument pos:start="25:45" pos:end="25:51"><expr pos:start="25:45" pos:end="25:51"><name pos:start="25:45" pos:end="25:51"><name pos:start="25:45" pos:end="25:46">sd</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:51">buf</name></name></expr></argument>, <argument pos:start="25:54" pos:end="25:54"><expr pos:start="25:54" pos:end="25:54"><literal type="number" pos:start="25:54" pos:end="25:54">1</literal></expr></argument>)</argument_list></call> <operator pos:start="25:57" pos:end="25:57">&lt;</operator> <literal type="number" pos:start="25:59" pos:end="25:59">0</literal></expr>)</condition> <block pos:start="25:62" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:19">

            <expr_stmt pos:start="27:13" pos:end="27:72"><expr pos:start="27:13" pos:end="27:71"><call pos:start="27:13" pos:end="27:71"><name pos:start="27:13" pos:end="27:19">fprintf</name><argument_list pos:start="27:20" pos:end="27:71">(<argument pos:start="27:21" pos:end="27:26"><expr pos:start="27:21" pos:end="27:26"><name pos:start="27:21" pos:end="27:26">stderr</name></expr></argument>, <argument pos:start="27:29" pos:end="27:70"><expr pos:start="27:29" pos:end="27:70"><literal type="string" pos:start="27:29" pos:end="27:70">"sd_blk_write: write error on host side\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:58">(<expr pos:start="35:13" pos:end="35:57"><call pos:start="35:13" pos:end="35:53"><name pos:start="35:13" pos:end="35:21">bdrv_read</name><argument_list pos:start="35:22" pos:end="35:53">(<argument pos:start="35:23" pos:end="35:30"><expr pos:start="35:23" pos:end="35:30"><name pos:start="35:23" pos:end="35:30"><name pos:start="35:23" pos:end="35:24">sd</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:30">bdrv</name></name></expr></argument>, <argument pos:start="35:33" pos:end="35:40"><expr pos:start="35:33" pos:end="35:40"><name pos:start="35:33" pos:end="35:35">end</name> <operator pos:start="35:37" pos:end="35:38">&gt;&gt;</operator> <literal type="number" pos:start="35:40" pos:end="35:40">9</literal></expr></argument>, <argument pos:start="35:43" pos:end="35:49"><expr pos:start="35:43" pos:end="35:49"><name pos:start="35:43" pos:end="35:49"><name pos:start="35:43" pos:end="35:44">sd</name><operator pos:start="35:45" pos:end="35:46">-&gt;</operator><name pos:start="35:47" pos:end="35:49">buf</name></name></expr></argument>, <argument pos:start="35:52" pos:end="35:52"><expr pos:start="35:52" pos:end="35:52"><literal type="number" pos:start="35:52" pos:end="35:52">1</literal></expr></argument>)</argument_list></call> <operator pos:start="35:55" pos:end="35:55">&lt;</operator> <literal type="number" pos:start="35:57" pos:end="35:57">0</literal></expr>)</condition> <block pos:start="35:60" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:19">

            <expr_stmt pos:start="37:13" pos:end="37:71"><expr pos:start="37:13" pos:end="37:70"><call pos:start="37:13" pos:end="37:70"><name pos:start="37:13" pos:end="37:19">fprintf</name><argument_list pos:start="37:20" pos:end="37:70">(<argument pos:start="37:21" pos:end="37:26"><expr pos:start="37:21" pos:end="37:26"><name pos:start="37:21" pos:end="37:26">stderr</name></expr></argument>, <argument pos:start="37:29" pos:end="37:69"><expr pos:start="37:29" pos:end="37:69"><literal type="string" pos:start="37:29" pos:end="37:69">"sd_blk_write: read error on host side\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="39:13" pos:end="39:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:66"><expr pos:start="43:9" pos:end="43:65"><call pos:start="43:9" pos:end="43:65"><name pos:start="43:9" pos:end="43:14">memcpy</name><argument_list pos:start="43:15" pos:end="43:65">(<argument pos:start="43:16" pos:end="43:22"><expr pos:start="43:16" pos:end="43:22"><name pos:start="43:16" pos:end="43:22"><name pos:start="43:16" pos:end="43:17">sd</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:22">buf</name></name></expr></argument>, <argument pos:start="43:25" pos:end="43:53"><expr pos:start="43:25" pos:end="43:53"><name pos:start="43:25" pos:end="43:32"><name pos:start="43:25" pos:end="43:26">sd</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:32">data</name></name> <operator pos:start="43:34" pos:end="43:34">+</operator> <literal type="number" pos:start="43:36" pos:end="43:40">512</literal> <operator pos:start="43:40" pos:end="43:40">-</operator> <operator pos:start="43:42" pos:end="43:42">(</operator><name pos:start="43:43" pos:end="43:46">addr</name> <operator pos:start="43:48" pos:end="43:48">&amp;</operator> <literal type="number" pos:start="43:50" pos:end="43:52">511</literal><operator pos:start="43:53" pos:end="43:53">)</operator></expr></argument>, <argument pos:start="43:56" pos:end="43:64"><expr pos:start="43:56" pos:end="43:64"><name pos:start="43:56" pos:end="43:58">end</name> <operator pos:start="43:60" pos:end="43:60">&amp;</operator> <literal type="number" pos:start="43:62" pos:end="43:64">511</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:59">(<expr pos:start="45:13" pos:end="45:58"><call pos:start="45:13" pos:end="45:54"><name pos:start="45:13" pos:end="45:22">bdrv_write</name><argument_list pos:start="45:23" pos:end="45:54">(<argument pos:start="45:24" pos:end="45:31"><expr pos:start="45:24" pos:end="45:31"><name pos:start="45:24" pos:end="45:31"><name pos:start="45:24" pos:end="45:25">sd</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:31">bdrv</name></name></expr></argument>, <argument pos:start="45:34" pos:end="45:41"><expr pos:start="45:34" pos:end="45:41"><name pos:start="45:34" pos:end="45:36">end</name> <operator pos:start="45:38" pos:end="45:39">&gt;&gt;</operator> <literal type="number" pos:start="45:41" pos:end="45:41">9</literal></expr></argument>, <argument pos:start="45:44" pos:end="45:50"><expr pos:start="45:44" pos:end="45:50"><name pos:start="45:44" pos:end="45:50"><name pos:start="45:44" pos:end="45:45">sd</name><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:50">buf</name></name></expr></argument>, <argument pos:start="45:53" pos:end="45:53"><expr pos:start="45:53" pos:end="45:53"><literal type="number" pos:start="45:53" pos:end="45:53">1</literal></expr></argument>)</argument_list></call> <operator pos:start="45:56" pos:end="45:56">&lt;</operator> <literal type="number" pos:start="45:58" pos:end="45:58">0</literal></expr>)</condition> <block pos:start="45:61" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:72">

            <expr_stmt pos:start="47:13" pos:end="47:72"><expr pos:start="47:13" pos:end="47:71"><call pos:start="47:13" pos:end="47:71"><name pos:start="47:13" pos:end="47:19">fprintf</name><argument_list pos:start="47:20" pos:end="47:71">(<argument pos:start="47:21" pos:end="47:26"><expr pos:start="47:21" pos:end="47:26"><name pos:start="47:21" pos:end="47:26">stderr</name></expr></argument>, <argument pos:start="47:29" pos:end="47:70"><expr pos:start="47:29" pos:end="47:70"><literal type="string" pos:start="47:29" pos:end="47:70">"sd_blk_write: write error on host side\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="61:5">else <block pos:start="51:12" pos:end="61:5">{<block_content pos:start="53:9" pos:end="59:9">

        <expr_stmt pos:start="53:9" pos:end="53:54"><expr pos:start="53:9" pos:end="53:53"><call pos:start="53:9" pos:end="53:53"><name pos:start="53:9" pos:end="53:14">memcpy</name><argument_list pos:start="53:15" pos:end="53:53">(<argument pos:start="53:16" pos:end="53:37"><expr pos:start="53:16" pos:end="53:37"><name pos:start="53:16" pos:end="53:22"><name pos:start="53:16" pos:end="53:17">sd</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:22">buf</name></name> <operator pos:start="53:24" pos:end="53:24">+</operator> <operator pos:start="53:26" pos:end="53:26">(</operator><name pos:start="53:27" pos:end="53:30">addr</name> <operator pos:start="53:32" pos:end="53:32">&amp;</operator> <literal type="number" pos:start="53:34" pos:end="53:36">511</literal><operator pos:start="53:37" pos:end="53:37">)</operator></expr></argument>, <argument pos:start="53:40" pos:end="53:47"><expr pos:start="53:40" pos:end="53:47"><name pos:start="53:40" pos:end="53:47"><name pos:start="53:40" pos:end="53:41">sd</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:47">data</name></name></expr></argument>, <argument pos:start="53:50" pos:end="53:52"><expr pos:start="53:50" pos:end="53:52"><name pos:start="53:50" pos:end="53:52">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:73">(<expr pos:start="55:13" pos:end="55:72"><operator pos:start="55:13" pos:end="55:13">!</operator><name pos:start="55:14" pos:end="55:21"><name pos:start="55:14" pos:end="55:15">sd</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:21">bdrv</name></name> <operator pos:start="55:23" pos:end="55:24">||</operator> <call pos:start="55:26" pos:end="55:68"><name pos:start="55:26" pos:end="55:35">bdrv_write</name><argument_list pos:start="55:36" pos:end="55:68">(<argument pos:start="55:37" pos:end="55:44"><expr pos:start="55:37" pos:end="55:44"><name pos:start="55:37" pos:end="55:44"><name pos:start="55:37" pos:end="55:38">sd</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:44">bdrv</name></name></expr></argument>, <argument pos:start="55:47" pos:end="55:55"><expr pos:start="55:47" pos:end="55:55"><name pos:start="55:47" pos:end="55:50">addr</name> <operator pos:start="55:52" pos:end="55:53">&gt;&gt;</operator> <literal type="number" pos:start="55:55" pos:end="55:55">9</literal></expr></argument>, <argument pos:start="55:58" pos:end="55:64"><expr pos:start="55:58" pos:end="55:64"><name pos:start="55:58" pos:end="55:64"><name pos:start="55:58" pos:end="55:59">sd</name><operator pos:start="55:60" pos:end="55:61">-&gt;</operator><name pos:start="55:62" pos:end="55:64">buf</name></name></expr></argument>, <argument pos:start="55:67" pos:end="55:67"><expr pos:start="55:67" pos:end="55:67"><literal type="number" pos:start="55:67" pos:end="55:67">1</literal></expr></argument>)</argument_list></call> <operator pos:start="55:70" pos:end="55:70">&lt;</operator> <literal type="number" pos:start="55:72" pos:end="55:72">0</literal></expr>)</condition> <block pos:start="55:75" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:72">

            <expr_stmt pos:start="57:13" pos:end="57:72"><expr pos:start="57:13" pos:end="57:71"><call pos:start="57:13" pos:end="57:71"><name pos:start="57:13" pos:end="57:19">fprintf</name><argument_list pos:start="57:20" pos:end="57:71">(<argument pos:start="57:21" pos:end="57:26"><expr pos:start="57:21" pos:end="57:26"><name pos:start="57:21" pos:end="57:26">stderr</name></expr></argument>, <argument pos:start="57:29" pos:end="57:70"><expr pos:start="57:29" pos:end="57:70"><literal type="string" pos:start="57:29" pos:end="57:70">"sd_blk_write: write error on host side\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
