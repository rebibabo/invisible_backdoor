<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/417.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">piix3_post_load</name><parameter_list pos:start="1:27" pos:end="1:56">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:55"><decl pos:start="1:42" pos:end="1:55"><type pos:start="1:42" pos:end="1:55"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:55">version_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">PIIX3State</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:21">piix3</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">pirq</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="25:7">/* Because the i8259 has not been deserialized yet, qemu_irq_raise

     * might bring the system to a different state than the saved one;

     * for example, the interrupt could be masked but the i8259 would

     * not know that yet and would trigger an interrupt in the CPU.

     *

     * Here, we update irq levels without raising the interrupt.

     * Interrupt state will be deserialized separately through the i8259.

     */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:26"><expr pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:9">piix3</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:21">pic_levels</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <literal type="number" pos:start="27:25" pos:end="27:25">0</literal></expr>;</expr_stmt>

    <for pos:start="29:5" pos:end="35:5">for <control pos:start="29:9" pos:end="29:49">(<init pos:start="29:10" pos:end="29:18"><expr pos:start="29:10" pos:end="29:17"><name pos:start="29:10" pos:end="29:13">pirq</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>;</init> <condition pos:start="29:20" pos:end="29:41"><expr pos:start="29:20" pos:end="29:40"><name pos:start="29:20" pos:end="29:23">pirq</name> <operator pos:start="29:25" pos:end="29:25">&lt;</operator> <name pos:start="29:27" pos:end="29:40">PIIX_NUM_PIRQS</name></expr>;</condition> <incr pos:start="29:43" pos:end="29:48"><expr pos:start="29:43" pos:end="29:48"><name pos:start="29:43" pos:end="29:46">pirq</name><operator pos:start="29:47" pos:end="29:48">++</operator></expr></incr>)</control> <block pos:start="29:51" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:73">

        <expr_stmt pos:start="31:9" pos:end="33:73"><expr pos:start="31:9" pos:end="33:72"><call pos:start="31:9" pos:end="33:72"><name pos:start="31:9" pos:end="31:36">piix3_set_irq_level_internal</name><argument_list pos:start="31:37" pos:end="33:72">(<argument pos:start="31:38" pos:end="31:42"><expr pos:start="31:38" pos:end="31:42"><name pos:start="31:38" pos:end="31:42">piix3</name></expr></argument>, <argument pos:start="31:45" pos:end="31:48"><expr pos:start="31:45" pos:end="31:48"><name pos:start="31:45" pos:end="31:48">pirq</name></expr></argument>,

                            <argument pos:start="33:29" pos:end="33:71"><expr pos:start="33:29" pos:end="33:71"><call pos:start="33:29" pos:end="33:71"><name pos:start="33:29" pos:end="33:49">pci_bus_get_irq_level</name><argument_list pos:start="33:50" pos:end="33:71">(<argument pos:start="33:51" pos:end="33:64"><expr pos:start="33:51" pos:end="33:64"><name pos:start="33:51" pos:end="33:64"><name pos:start="33:51" pos:end="33:55">piix3</name><operator pos:start="33:56" pos:end="33:57">-&gt;</operator><name pos:start="33:58" pos:end="33:60">dev</name><operator pos:start="33:61" pos:end="33:61">.</operator><name pos:start="33:62" pos:end="33:64">bus</name></name></expr></argument>, <argument pos:start="33:67" pos:end="33:70"><expr pos:start="33:67" pos:end="33:70"><name pos:start="33:67" pos:end="33:70">pirq</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
