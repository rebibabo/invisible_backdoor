<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9680.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">protocol_version</name><parameter_list pos:start="1:28" pos:end="1:68">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:36">VncState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">vs</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:55"><decl pos:start="1:43" pos:end="1:55"><type pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:55">version</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:67"><decl pos:start="1:58" pos:end="1:67"><type pos:start="1:58" pos:end="1:67"><name pos:start="1:58" pos:end="1:63">size_t</name></type> <name pos:start="1:65" pos:end="1:67">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:18"><name pos:start="5:10" pos:end="5:14">local</name><index pos:start="5:15" pos:end="5:18">[<expr pos:start="5:16" pos:end="5:17"><literal type="number" pos:start="5:16" pos:end="5:17">13</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">maj</name></decl>, <decl pos:start="7:14" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:16">min</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:31"><expr pos:start="11:5" pos:end="11:30"><call pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:10">memcpy</name><argument_list pos:start="11:11" pos:end="11:30">(<argument pos:start="11:12" pos:end="11:16"><expr pos:start="11:12" pos:end="11:16"><name pos:start="11:12" pos:end="11:16">local</name></expr></argument>, <argument pos:start="11:19" pos:end="11:25"><expr pos:start="11:19" pos:end="11:25"><name pos:start="11:19" pos:end="11:25">version</name></expr></argument>, <argument pos:start="11:28" pos:end="11:29"><expr pos:start="11:28" pos:end="11:29"><literal type="number" pos:start="11:28" pos:end="11:29">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:18"><expr pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:9">local</name><index pos:start="13:10" pos:end="13:13">[<expr pos:start="13:11" pos:end="13:12"><literal type="number" pos:start="13:11" pos:end="13:12">12</literal></expr>]</index></name> <operator pos:start="13:15" pos:end="13:15">=</operator> <literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:58">(<expr pos:start="17:9" pos:end="17:57"><call pos:start="17:9" pos:end="17:52"><name pos:start="17:9" pos:end="17:14">sscanf</name><argument_list pos:start="17:15" pos:end="17:52">(<argument pos:start="17:16" pos:end="17:20"><expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:20">local</name></expr></argument>, <argument pos:start="17:23" pos:end="17:39"><expr pos:start="17:23" pos:end="17:39"><literal type="string" pos:start="17:23" pos:end="17:39">"RFB %03d.%03d\n"</literal></expr></argument>, <argument pos:start="17:42" pos:end="17:45"><expr pos:start="17:42" pos:end="17:45"><operator pos:start="17:42" pos:end="17:42">&amp;</operator><name pos:start="17:43" pos:end="17:45">maj</name></expr></argument>, <argument pos:start="17:48" pos:end="17:51"><expr pos:start="17:48" pos:end="17:51"><operator pos:start="17:48" pos:end="17:48">&amp;</operator><name pos:start="17:49" pos:end="17:51">min</name></expr></argument>)</argument_list></call> <operator pos:start="17:54" pos:end="17:55">!=</operator> <literal type="number" pos:start="17:57" pos:end="17:57">2</literal></expr>)</condition> <block pos:start="17:60" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:17">

	<expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><call pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:24">vnc_client_error</name><argument_list pos:start="19:25" pos:end="19:28">(<argument pos:start="19:26" pos:end="19:27"><expr pos:start="19:26" pos:end="19:27"><name pos:start="19:26" pos:end="19:27">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:25"><expr pos:start="27:5" pos:end="27:24"><call pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:17">vnc_write_u32</name><argument_list pos:start="27:18" pos:end="27:24">(<argument pos:start="27:19" pos:end="27:20"><expr pos:start="27:19" pos:end="27:20"><name pos:start="27:19" pos:end="27:20">vs</name></expr></argument>, <argument pos:start="27:23" pos:end="27:23"><expr pos:start="27:23" pos:end="27:23"><literal type="number" pos:start="27:23" pos:end="27:23">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="27:27" pos:end="27:36">/* None */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><call pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:13">vnc_flush</name><argument_list pos:start="29:14" pos:end="29:17">(<argument pos:start="29:15" pos:end="29:16"><expr pos:start="29:15" pos:end="29:16"><name pos:start="29:15" pos:end="29:16">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:47"><expr pos:start="33:5" pos:end="33:46"><call pos:start="33:5" pos:end="33:46"><name pos:start="33:5" pos:end="33:17">vnc_read_when</name><argument_list pos:start="33:18" pos:end="33:46">(<argument pos:start="33:19" pos:end="33:20"><expr pos:start="33:19" pos:end="33:20"><name pos:start="33:19" pos:end="33:20">vs</name></expr></argument>, <argument pos:start="33:23" pos:end="33:42"><expr pos:start="33:23" pos:end="33:42"><name pos:start="33:23" pos:end="33:42">protocol_client_init</name></expr></argument>, <argument pos:start="33:45" pos:end="33:45"><expr pos:start="33:45" pos:end="33:45"><literal type="number" pos:start="33:45" pos:end="33:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
