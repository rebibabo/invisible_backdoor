<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16955.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">vtd_page_walk_level</name><parameter_list pos:start="1:31" pos:end="7:72">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:41">dma_addr_t</name></type> <name pos:start="1:43" pos:end="1:46">addr</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:62"><decl pos:start="1:49" pos:end="1:62"><type pos:start="1:49" pos:end="1:62"><name pos:start="1:49" pos:end="1:56">uint64_t</name></type> <name pos:start="1:58" pos:end="1:62">start</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:43"><decl pos:start="3:32" pos:end="3:43"><type pos:start="3:32" pos:end="3:43"><name pos:start="3:32" pos:end="3:39">uint64_t</name></type> <name pos:start="3:41" pos:end="3:43">end</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:71"><decl pos:start="3:46" pos:end="3:71"><type pos:start="3:46" pos:end="3:71"><name pos:start="3:46" pos:end="3:63">vtd_page_walk_hook</name></type> <name pos:start="3:65" pos:end="3:71">hook_fn</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:44"><decl pos:start="5:32" pos:end="5:44"><type pos:start="5:32" pos:end="5:44"><name pos:start="5:32" pos:end="5:35">void</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:44">private</name></decl></parameter>, <parameter pos:start="5:47" pos:end="5:60"><decl pos:start="5:47" pos:end="5:60"><type pos:start="5:47" pos:end="5:60"><name pos:start="5:47" pos:end="5:54">uint32_t</name></type> <name pos:start="5:56" pos:end="5:60">level</name></decl></parameter>,

                               <parameter pos:start="7:32" pos:end="7:40"><decl pos:start="7:32" pos:end="7:40"><type pos:start="7:32" pos:end="7:40"><name pos:start="7:32" pos:end="7:35">bool</name></type> <name pos:start="7:37" pos:end="7:40">read</name></decl></parameter>, <parameter pos:start="7:43" pos:end="7:52"><decl pos:start="7:43" pos:end="7:52"><type pos:start="7:43" pos:end="7:52"><name pos:start="7:43" pos:end="7:46">bool</name></type> <name pos:start="7:48" pos:end="7:52">write</name></decl></parameter>, <parameter pos:start="7:55" pos:end="7:71"><decl pos:start="7:55" pos:end="7:71"><type pos:start="7:55" pos:end="7:71"><name pos:start="7:55" pos:end="7:58">bool</name></type> <name pos:start="7:60" pos:end="7:71">notify_unmap</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="169:1">{<block_content pos:start="11:5" pos:end="167:13">

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:17">read_cur</name></decl>, <decl pos:start="11:20" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:8"/><name pos:start="11:20" pos:end="11:28">write_cur</name></decl>, <decl pos:start="11:31" pos:end="11:41"><type ref="prev" pos:start="11:5" pos:end="11:8"/><name pos:start="11:31" pos:end="11:41">entry_valid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:19">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:18">slpte</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:40"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:25">subpage_size</name></decl>, <decl pos:start="17:28" pos:end="17:39"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:28" pos:end="17:39">subpage_mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:17">IOMMUTLBEntry</name></type> <name pos:start="19:19" pos:end="19:23">entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint64_t</name></type> <name pos:start="21:14" pos:end="21:17">iova</name> <init pos:start="21:19" pos:end="21:25">= <expr pos:start="21:21" pos:end="21:25"><name pos:start="21:21" pos:end="21:25">start</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:23"><decl pos:start="23:5" pos:end="23:22"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint64_t</name></type> <name pos:start="23:14" pos:end="23:22">iova_next</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:16"><decl pos:start="25:5" pos:end="25:15"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">ret</name> <init pos:start="25:13" pos:end="25:15">= <expr pos:start="25:15" pos:end="25:15"><literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:55"><expr pos:start="29:5" pos:end="29:54"><call pos:start="29:5" pos:end="29:54"><name pos:start="29:5" pos:end="29:29">trace_vtd_page_walk_level</name><argument_list pos:start="29:30" pos:end="29:54">(<argument pos:start="29:31" pos:end="29:34"><expr pos:start="29:31" pos:end="29:34"><name pos:start="29:31" pos:end="29:34">addr</name></expr></argument>, <argument pos:start="29:37" pos:end="29:41"><expr pos:start="29:37" pos:end="29:41"><name pos:start="29:37" pos:end="29:41">level</name></expr></argument>, <argument pos:start="29:44" pos:end="29:48"><expr pos:start="29:44" pos:end="29:48"><name pos:start="29:44" pos:end="29:48">start</name></expr></argument>, <argument pos:start="29:51" pos:end="29:53"><expr pos:start="29:51" pos:end="29:53"><name pos:start="29:51" pos:end="29:53">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:55"><expr pos:start="33:5" pos:end="33:54"><name pos:start="33:5" pos:end="33:16">subpage_size</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <literal type="number" pos:start="33:20" pos:end="33:23">1ULL</literal> <operator pos:start="33:25" pos:end="33:26">&lt;&lt;</operator> <call pos:start="33:28" pos:end="33:54"><name pos:start="33:28" pos:end="33:47">vtd_slpt_level_shift</name><argument_list pos:start="33:48" pos:end="33:54">(<argument pos:start="33:49" pos:end="33:53"><expr pos:start="33:49" pos:end="33:53"><name pos:start="33:49" pos:end="33:53">level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:51"><expr pos:start="35:5" pos:end="35:50"><name pos:start="35:5" pos:end="35:16">subpage_mask</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="35:50"><name pos:start="35:20" pos:end="35:43">vtd_slpt_level_page_mask</name><argument_list pos:start="35:44" pos:end="35:50">(<argument pos:start="35:45" pos:end="35:49"><expr pos:start="35:45" pos:end="35:49"><name pos:start="35:45" pos:end="35:49">level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="39:5" pos:end="163:5">while <condition pos:start="39:11" pos:end="39:22">(<expr pos:start="39:12" pos:end="39:21"><name pos:start="39:12" pos:end="39:15">iova</name> <operator pos:start="39:17" pos:end="39:17">&lt;</operator> <name pos:start="39:19" pos:end="39:21">end</name></expr>)</condition> <block pos:start="39:24" pos:end="163:5">{<block_content pos:start="41:9" pos:end="161:25">

        <expr_stmt pos:start="41:9" pos:end="41:57"><expr pos:start="41:9" pos:end="41:56"><name pos:start="41:9" pos:end="41:17">iova_next</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <operator pos:start="41:21" pos:end="41:21">(</operator><name pos:start="41:22" pos:end="41:25">iova</name> <operator pos:start="41:27" pos:end="41:27">&amp;</operator> <name pos:start="41:29" pos:end="41:40">subpage_mask</name><operator pos:start="41:41" pos:end="41:41">)</operator> <operator pos:start="41:43" pos:end="41:43">+</operator> <name pos:start="41:45" pos:end="41:56">subpage_size</name></expr>;</expr_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:52"><expr pos:start="45:9" pos:end="45:51"><name pos:start="45:9" pos:end="45:14">offset</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <call pos:start="45:18" pos:end="45:51"><name pos:start="45:18" pos:end="45:38">vtd_iova_level_offset</name><argument_list pos:start="45:39" pos:end="45:51">(<argument pos:start="45:40" pos:end="45:43"><expr pos:start="45:40" pos:end="45:43"><name pos:start="45:40" pos:end="45:43">iova</name></expr></argument>, <argument pos:start="45:46" pos:end="45:50"><expr pos:start="45:46" pos:end="45:50"><name pos:start="45:46" pos:end="45:50">level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:44"><expr pos:start="47:9" pos:end="47:43"><name pos:start="47:9" pos:end="47:13">slpte</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="47:43"><name pos:start="47:17" pos:end="47:29">vtd_get_slpte</name><argument_list pos:start="47:30" pos:end="47:43">(<argument pos:start="47:31" pos:end="47:34"><expr pos:start="47:31" pos:end="47:34"><name pos:start="47:31" pos:end="47:34">addr</name></expr></argument>, <argument pos:start="47:37" pos:end="47:42"><expr pos:start="47:37" pos:end="47:42"><name pos:start="47:37" pos:end="47:42">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="51:9" pos:end="57:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:34">(<expr pos:start="51:13" pos:end="51:33"><name pos:start="51:13" pos:end="51:17">slpte</name> <operator pos:start="51:19" pos:end="51:20">==</operator> <operator pos:start="51:22" pos:end="51:22">(</operator><name pos:start="51:23" pos:end="51:30">uint64_t</name><operator pos:start="51:31" pos:end="51:31">)</operator><operator pos:start="51:32" pos:end="51:32">-</operator><literal type="number" pos:start="51:33" pos:end="51:33">1</literal></expr>)</condition> <block pos:start="51:36" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:22">

            <expr_stmt pos:start="53:13" pos:end="53:59"><expr pos:start="53:13" pos:end="53:58"><call pos:start="53:13" pos:end="53:58"><name pos:start="53:13" pos:end="53:41">trace_vtd_page_walk_skip_read</name><argument_list pos:start="53:42" pos:end="53:58">(<argument pos:start="53:43" pos:end="53:46"><expr pos:start="53:43" pos:end="53:46"><name pos:start="53:43" pos:end="53:46">iova</name></expr></argument>, <argument pos:start="53:49" pos:end="53:57"><expr pos:start="53:49" pos:end="53:57"><name pos:start="53:49" pos:end="53:57">iova_next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="55:13" pos:end="55:22">goto <name pos:start="55:18" pos:end="55:21">next</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="61:49">(<expr pos:start="61:13" pos:end="61:48"><call pos:start="61:13" pos:end="61:48"><name pos:start="61:13" pos:end="61:34">vtd_slpte_nonzero_rsvd</name><argument_list pos:start="61:35" pos:end="61:48">(<argument pos:start="61:36" pos:end="61:40"><expr pos:start="61:36" pos:end="61:40"><name pos:start="61:36" pos:end="61:40">slpte</name></expr></argument>, <argument pos:start="61:43" pos:end="61:47"><expr pos:start="61:43" pos:end="61:47"><name pos:start="61:43" pos:end="61:47">level</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:51" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:22">

            <expr_stmt pos:start="63:13" pos:end="63:62"><expr pos:start="63:13" pos:end="63:61"><call pos:start="63:13" pos:end="63:61"><name pos:start="63:13" pos:end="63:44">trace_vtd_page_walk_skip_reserve</name><argument_list pos:start="63:45" pos:end="63:61">(<argument pos:start="63:46" pos:end="63:49"><expr pos:start="63:46" pos:end="63:49"><name pos:start="63:46" pos:end="63:49">iova</name></expr></argument>, <argument pos:start="63:52" pos:end="63:60"><expr pos:start="63:52" pos:end="63:60"><name pos:start="63:52" pos:end="63:60">iova_next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="65:13" pos:end="65:22">goto <name pos:start="65:18" pos:end="65:21">next</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="71:9" pos:end="71:51">/* Permissions are stacked with parents' */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:46"><expr pos:start="73:9" pos:end="73:45"><name pos:start="73:9" pos:end="73:16">read_cur</name> <operator pos:start="73:18" pos:end="73:18">=</operator> <name pos:start="73:20" pos:end="73:23">read</name> <operator pos:start="73:25" pos:end="73:26">&amp;&amp;</operator> <operator pos:start="73:28" pos:end="73:28">(</operator><name pos:start="73:29" pos:end="73:33">slpte</name> <operator pos:start="73:35" pos:end="73:35">&amp;</operator> <name pos:start="73:37" pos:end="73:44">VTD_SL_R</name><operator pos:start="73:45" pos:end="73:45">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:48"><expr pos:start="75:9" pos:end="75:47"><name pos:start="75:9" pos:end="75:17">write_cur</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <name pos:start="75:21" pos:end="75:25">write</name> <operator pos:start="75:27" pos:end="75:28">&amp;&amp;</operator> <operator pos:start="75:30" pos:end="75:30">(</operator><name pos:start="75:31" pos:end="75:35">slpte</name> <operator pos:start="75:37" pos:end="75:37">&amp;</operator> <name pos:start="75:39" pos:end="75:46">VTD_SL_W</name><operator pos:start="75:47" pos:end="75:47">)</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="79:9" pos:end="87:11">/*

         * As long as we have either read/write permission, this is a

         * valid entry. The rule works for both page entries and page

         * table entries.

         */</comment>

        <expr_stmt pos:start="89:9" pos:end="89:43"><expr pos:start="89:9" pos:end="89:42"><name pos:start="89:9" pos:end="89:19">entry_valid</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <name pos:start="89:23" pos:end="89:30">read_cur</name> <operator pos:start="89:32" pos:end="89:32">|</operator> <name pos:start="89:34" pos:end="89:42">write_cur</name></expr>;</expr_stmt>



        <if_stmt pos:start="93:9" pos:end="155:9"><if pos:start="93:9" pos:end="131:9">if <condition pos:start="93:12" pos:end="93:44">(<expr pos:start="93:13" pos:end="93:43"><call pos:start="93:13" pos:end="93:43"><name pos:start="93:13" pos:end="93:29">vtd_is_last_slpte</name><argument_list pos:start="93:30" pos:end="93:43">(<argument pos:start="93:31" pos:end="93:35"><expr pos:start="93:31" pos:end="93:35"><name pos:start="93:31" pos:end="93:35">slpte</name></expr></argument>, <argument pos:start="93:38" pos:end="93:42"><expr pos:start="93:38" pos:end="93:42"><name pos:start="93:38" pos:end="93:42">level</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:46" pos:end="131:9">{<block_content pos:start="95:13" pos:end="129:13">

            <expr_stmt pos:start="95:13" pos:end="95:52"><expr pos:start="95:13" pos:end="95:51"><name pos:start="95:13" pos:end="95:27"><name pos:start="95:13" pos:end="95:17">entry</name><operator pos:start="95:18" pos:end="95:18">.</operator><name pos:start="95:19" pos:end="95:27">target_as</name></name> <operator pos:start="95:29" pos:end="95:29">=</operator> <operator pos:start="95:31" pos:end="95:31">&amp;</operator><name pos:start="95:32" pos:end="95:51">address_space_memory</name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:45"><expr pos:start="97:13" pos:end="97:44"><name pos:start="97:13" pos:end="97:22"><name pos:start="97:13" pos:end="97:17">entry</name><operator pos:start="97:18" pos:end="97:18">.</operator><name pos:start="97:19" pos:end="97:22">iova</name></name> <operator pos:start="97:24" pos:end="97:24">=</operator> <name pos:start="97:26" pos:end="97:29">iova</name> <operator pos:start="97:31" pos:end="97:31">&amp;</operator> <name pos:start="97:33" pos:end="97:44">subpage_mask</name></expr>;</expr_stmt>

            <comment type="block" pos:start="99:13" pos:end="99:70">/* NOTE: this is only meaningful if entry_valid == true */</comment>

            <expr_stmt pos:start="101:13" pos:end="101:62"><expr pos:start="101:13" pos:end="101:61"><name pos:start="101:13" pos:end="101:33"><name pos:start="101:13" pos:end="101:17">entry</name><operator pos:start="101:18" pos:end="101:18">.</operator><name pos:start="101:19" pos:end="101:33">translated_addr</name></name> <operator pos:start="101:35" pos:end="101:35">=</operator> <call pos:start="101:37" pos:end="101:61"><name pos:start="101:37" pos:end="101:54">vtd_get_slpte_addr</name><argument_list pos:start="101:55" pos:end="101:61">(<argument pos:start="101:56" pos:end="101:60"><expr pos:start="101:56" pos:end="101:60"><name pos:start="101:56" pos:end="101:60">slpte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:44"><expr pos:start="103:13" pos:end="103:43"><name pos:start="103:13" pos:end="103:27"><name pos:start="103:13" pos:end="103:17">entry</name><operator pos:start="103:18" pos:end="103:18">.</operator><name pos:start="103:19" pos:end="103:27">addr_mask</name></name> <operator pos:start="103:29" pos:end="103:29">=</operator> <operator pos:start="103:31" pos:end="103:31">~</operator><name pos:start="103:32" pos:end="103:43">subpage_mask</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:64"><expr pos:start="105:13" pos:end="105:63"><name pos:start="105:13" pos:end="105:22"><name pos:start="105:13" pos:end="105:17">entry</name><operator pos:start="105:18" pos:end="105:18">.</operator><name pos:start="105:19" pos:end="105:22">perm</name></name> <operator pos:start="105:24" pos:end="105:24">=</operator> <call pos:start="105:26" pos:end="105:63"><name pos:start="105:26" pos:end="105:42">IOMMU_ACCESS_FLAG</name><argument_list pos:start="105:43" pos:end="105:63">(<argument pos:start="105:44" pos:end="105:51"><expr pos:start="105:44" pos:end="105:51"><name pos:start="105:44" pos:end="105:51">read_cur</name></expr></argument>, <argument pos:start="105:54" pos:end="105:62"><expr pos:start="105:54" pos:end="105:62"><name pos:start="105:54" pos:end="105:62">write_cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="107:13" pos:end="113:13"><if pos:start="107:13" pos:end="113:13">if <condition pos:start="107:16" pos:end="107:46">(<expr pos:start="107:17" pos:end="107:45"><operator pos:start="107:17" pos:end="107:17">!</operator><name pos:start="107:18" pos:end="107:28">entry_valid</name> <operator pos:start="107:30" pos:end="107:31">&amp;&amp;</operator> <operator pos:start="107:33" pos:end="107:33">!</operator><name pos:start="107:34" pos:end="107:45">notify_unmap</name></expr>)</condition> <block pos:start="107:48" pos:end="113:13">{<block_content pos:start="109:17" pos:end="111:26">

                <expr_stmt pos:start="109:17" pos:end="109:63"><expr pos:start="109:17" pos:end="109:62"><call pos:start="109:17" pos:end="109:62"><name pos:start="109:17" pos:end="109:45">trace_vtd_page_walk_skip_perm</name><argument_list pos:start="109:46" pos:end="109:62">(<argument pos:start="109:47" pos:end="109:50"><expr pos:start="109:47" pos:end="109:50"><name pos:start="109:47" pos:end="109:50">iova</name></expr></argument>, <argument pos:start="109:53" pos:end="109:61"><expr pos:start="109:53" pos:end="109:61"><name pos:start="109:53" pos:end="109:61">iova_next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="111:17" pos:end="111:26">goto <name pos:start="111:22" pos:end="111:25">next</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="115:13" pos:end="117:65"><expr pos:start="115:13" pos:end="117:64"><call pos:start="115:13" pos:end="117:64"><name pos:start="115:13" pos:end="115:35">trace_vtd_page_walk_one</name><argument_list pos:start="115:36" pos:end="117:64">(<argument pos:start="115:37" pos:end="115:41"><expr pos:start="115:37" pos:end="115:41"><name pos:start="115:37" pos:end="115:41">level</name></expr></argument>, <argument pos:start="115:44" pos:end="115:53"><expr pos:start="115:44" pos:end="115:53"><name pos:start="115:44" pos:end="115:53"><name pos:start="115:44" pos:end="115:48">entry</name><operator pos:start="115:49" pos:end="115:49">.</operator><name pos:start="115:50" pos:end="115:53">iova</name></name></expr></argument>, <argument pos:start="115:56" pos:end="115:76"><expr pos:start="115:56" pos:end="115:76"><name pos:start="115:56" pos:end="115:76"><name pos:start="115:56" pos:end="115:60">entry</name><operator pos:start="115:61" pos:end="115:61">.</operator><name pos:start="115:62" pos:end="115:76">translated_addr</name></name></expr></argument>,

                                    <argument pos:start="117:37" pos:end="117:51"><expr pos:start="117:37" pos:end="117:51"><name pos:start="117:37" pos:end="117:51"><name pos:start="117:37" pos:end="117:41">entry</name><operator pos:start="117:42" pos:end="117:42">.</operator><name pos:start="117:43" pos:end="117:51">addr_mask</name></name></expr></argument>, <argument pos:start="117:54" pos:end="117:63"><expr pos:start="117:54" pos:end="117:63"><name pos:start="117:54" pos:end="117:63"><name pos:start="117:54" pos:end="117:58">entry</name><operator pos:start="117:59" pos:end="117:59">.</operator><name pos:start="117:60" pos:end="117:63">perm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="119:13" pos:end="129:13"><if pos:start="119:13" pos:end="129:13">if <condition pos:start="119:16" pos:end="119:24">(<expr pos:start="119:17" pos:end="119:23"><name pos:start="119:17" pos:end="119:23">hook_fn</name></expr>)</condition> <block pos:start="119:26" pos:end="129:13">{<block_content pos:start="121:17" pos:end="127:17">

                <expr_stmt pos:start="121:17" pos:end="121:47"><expr pos:start="121:17" pos:end="121:46"><name pos:start="121:17" pos:end="121:19">ret</name> <operator pos:start="121:21" pos:end="121:21">=</operator> <call pos:start="121:23" pos:end="121:46"><name pos:start="121:23" pos:end="121:29">hook_fn</name><argument_list pos:start="121:30" pos:end="121:46">(<argument pos:start="121:31" pos:end="121:36"><expr pos:start="121:31" pos:end="121:36"><operator pos:start="121:31" pos:end="121:31">&amp;</operator><name pos:start="121:32" pos:end="121:36">entry</name></expr></argument>, <argument pos:start="121:39" pos:end="121:45"><expr pos:start="121:39" pos:end="121:45"><name pos:start="121:39" pos:end="121:45">private</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="123:17" pos:end="127:17"><if pos:start="123:17" pos:end="127:17">if <condition pos:start="123:20" pos:end="123:28">(<expr pos:start="123:21" pos:end="123:27"><name pos:start="123:21" pos:end="123:23">ret</name> <operator pos:start="123:25" pos:end="123:25">&lt;</operator> <literal type="number" pos:start="123:27" pos:end="123:27">0</literal></expr>)</condition> <block pos:start="123:30" pos:end="127:17">{<block_content pos:start="125:21" pos:end="125:31">

                    <return pos:start="125:21" pos:end="125:31">return <expr pos:start="125:28" pos:end="125:30"><name pos:start="125:28" pos:end="125:30">ret</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="131:11" pos:end="155:9">else <block pos:start="131:16" pos:end="155:9">{<block_content pos:start="133:13" pos:end="153:13">

            <if_stmt pos:start="133:13" pos:end="139:13"><if pos:start="133:13" pos:end="139:13">if <condition pos:start="133:16" pos:end="133:29">(<expr pos:start="133:17" pos:end="133:28"><operator pos:start="133:17" pos:end="133:17">!</operator><name pos:start="133:18" pos:end="133:28">entry_valid</name></expr>)</condition> <block pos:start="133:31" pos:end="139:13">{<block_content pos:start="135:17" pos:end="137:26">

                <expr_stmt pos:start="135:17" pos:end="135:63"><expr pos:start="135:17" pos:end="135:62"><call pos:start="135:17" pos:end="135:62"><name pos:start="135:17" pos:end="135:45">trace_vtd_page_walk_skip_perm</name><argument_list pos:start="135:46" pos:end="135:62">(<argument pos:start="135:47" pos:end="135:50"><expr pos:start="135:47" pos:end="135:50"><name pos:start="135:47" pos:end="135:50">iova</name></expr></argument>, <argument pos:start="135:53" pos:end="135:61"><expr pos:start="135:53" pos:end="135:61"><name pos:start="135:53" pos:end="135:61">iova_next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="137:17" pos:end="137:26">goto <name pos:start="137:22" pos:end="137:25">next</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="141:13" pos:end="147:52"><expr pos:start="141:13" pos:end="147:51"><name pos:start="141:13" pos:end="141:15">ret</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <call pos:start="141:19" pos:end="147:51"><name pos:start="141:19" pos:end="141:37">vtd_page_walk_level</name><argument_list pos:start="141:38" pos:end="147:51">(<argument pos:start="141:39" pos:end="141:63"><expr pos:start="141:39" pos:end="141:63"><call pos:start="141:39" pos:end="141:63"><name pos:start="141:39" pos:end="141:56">vtd_get_slpte_addr</name><argument_list pos:start="141:57" pos:end="141:63">(<argument pos:start="141:58" pos:end="141:62"><expr pos:start="141:58" pos:end="141:62"><name pos:start="141:58" pos:end="141:62">slpte</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="141:66" pos:end="141:69"><expr pos:start="141:66" pos:end="141:69"><name pos:start="141:66" pos:end="141:69">iova</name></expr></argument>,

                                      <argument pos:start="143:39" pos:end="143:57"><expr pos:start="143:39" pos:end="143:57"><call pos:start="143:39" pos:end="143:57"><name pos:start="143:39" pos:end="143:41">MIN</name><argument_list pos:start="143:42" pos:end="143:57">(<argument pos:start="143:43" pos:end="143:51"><expr pos:start="143:43" pos:end="143:51"><name pos:start="143:43" pos:end="143:51">iova_next</name></expr></argument>, <argument pos:start="143:54" pos:end="143:56"><expr pos:start="143:54" pos:end="143:56"><name pos:start="143:54" pos:end="143:56">end</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="143:60" pos:end="143:66"><expr pos:start="143:60" pos:end="143:66"><name pos:start="143:60" pos:end="143:66">hook_fn</name></expr></argument>, <argument pos:start="143:69" pos:end="143:75"><expr pos:start="143:69" pos:end="143:75"><name pos:start="143:69" pos:end="143:75">private</name></expr></argument>,

                                      <argument pos:start="145:39" pos:end="145:47"><expr pos:start="145:39" pos:end="145:47"><name pos:start="145:39" pos:end="145:43">level</name> <operator pos:start="145:45" pos:end="145:45">-</operator> <literal type="number" pos:start="145:47" pos:end="145:47">1</literal></expr></argument>, <argument pos:start="145:50" pos:end="145:57"><expr pos:start="145:50" pos:end="145:57"><name pos:start="145:50" pos:end="145:57">read_cur</name></expr></argument>, <argument pos:start="145:60" pos:end="145:68"><expr pos:start="145:60" pos:end="145:68"><name pos:start="145:60" pos:end="145:68">write_cur</name></expr></argument>,

                                      <argument pos:start="147:39" pos:end="147:50"><expr pos:start="147:39" pos:end="147:50"><name pos:start="147:39" pos:end="147:50">notify_unmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="149:13" pos:end="153:13"><if pos:start="149:13" pos:end="153:13">if <condition pos:start="149:16" pos:end="149:24">(<expr pos:start="149:17" pos:end="149:23"><name pos:start="149:17" pos:end="149:19">ret</name> <operator pos:start="149:21" pos:end="149:21">&lt;</operator> <literal type="number" pos:start="149:23" pos:end="149:23">0</literal></expr>)</condition> <block pos:start="149:26" pos:end="153:13">{<block_content pos:start="151:17" pos:end="151:27">

                <return pos:start="151:17" pos:end="151:27">return <expr pos:start="151:24" pos:end="151:26"><name pos:start="151:24" pos:end="151:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



<label pos:start="159:1" pos:end="159:5"><name pos:start="159:1" pos:end="159:4">next</name>:</label>

        <expr_stmt pos:start="161:9" pos:end="161:25"><expr pos:start="161:9" pos:end="161:24"><name pos:start="161:9" pos:end="161:12">iova</name> <operator pos:start="161:14" pos:end="161:14">=</operator> <name pos:start="161:16" pos:end="161:24">iova_next</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="167:5" pos:end="167:13">return <expr pos:start="167:12" pos:end="167:12"><literal type="number" pos:start="167:12" pos:end="167:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
