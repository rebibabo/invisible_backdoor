<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8315.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">seg_write_trailer</name><parameter_list pos:start="1:29" pos:end="1:55">(<parameter pos:start="1:30" pos:end="1:54"><decl pos:start="1:30" pos:end="1:54"><type pos:start="1:30" pos:end="1:54"><name pos:start="1:30" pos:end="1:51"><name pos:start="1:30" pos:end="1:35">struct</name> <name pos:start="1:37" pos:end="1:51">AVFormatContext</name></name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:15">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SegmentContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">seg</name> <init pos:start="5:25" pos:end="5:38">= <expr pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:27">s</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">oc</name> <init pos:start="7:25" pos:end="7:34">= <expr pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:29">seg</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:34">avf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:18"><if pos:start="13:5" pos:end="15:18">if <condition pos:start="13:8" pos:end="13:12">(<expr pos:start="13:9" pos:end="13:11"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:11">oc</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:18"><block_content pos:start="15:9" pos:end="15:18">

        <goto pos:start="15:9" pos:end="15:18">goto <name pos:start="15:14" pos:end="15:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="35:5"><if pos:start="19:5" pos:end="31:5">if <condition pos:start="19:8" pos:end="19:35">(<expr pos:start="19:9" pos:end="19:34"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:34"><name pos:start="19:10" pos:end="19:12">seg</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:34">write_header_trailer</name></name></expr>)</condition> <block pos:start="19:37" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:31">

        <if_stmt pos:start="21:9" pos:end="23:22"><if pos:start="21:9" pos:end="23:22">if <condition pos:start="21:12" pos:end="21:43">(<expr pos:start="21:13" pos:end="21:42"><operator pos:start="21:13" pos:end="21:13">(</operator><name pos:start="21:14" pos:end="21:16">ret</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:37"><name pos:start="21:20" pos:end="21:30">segment_end</name><argument_list pos:start="21:31" pos:end="21:37">(<argument pos:start="21:32" pos:end="21:33"><expr pos:start="21:32" pos:end="21:33"><name pos:start="21:32" pos:end="21:33">oc</name></expr></argument>, <argument pos:start="21:36" pos:end="21:36"><expr pos:start="21:36" pos:end="21:36"><literal type="number" pos:start="21:36" pos:end="21:36">0</literal></expr></argument>)</argument_list></call><operator pos:start="21:38" pos:end="21:38">)</operator> <operator pos:start="21:40" pos:end="21:40">&lt;</operator> <literal type="number" pos:start="21:42" pos:end="21:42">0</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:22"><block_content pos:start="23:13" pos:end="23:22">

            <goto pos:start="23:13" pos:end="23:22">goto <name pos:start="23:18" pos:end="23:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:31"><expr pos:start="25:9" pos:end="25:30"><call pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:21">open_null_ctx</name><argument_list pos:start="25:22" pos:end="25:30">(<argument pos:start="25:23" pos:end="25:29"><expr pos:start="25:23" pos:end="25:29"><operator pos:start="25:23" pos:end="25:23">&amp;</operator><name pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:25">oc</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:35"><expr pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:34"><name pos:start="27:15" pos:end="27:30">av_write_trailer</name><argument_list pos:start="27:31" pos:end="27:34">(<argument pos:start="27:32" pos:end="27:33"><expr pos:start="27:32" pos:end="27:33"><name pos:start="27:32" pos:end="27:33">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:31"><expr pos:start="29:9" pos:end="29:30"><call pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:22">close_null_ctx</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:25">oc</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="35:5">else <block pos:start="31:12" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:33">

        <expr_stmt pos:start="33:9" pos:end="33:33"><expr pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:32"><name pos:start="33:15" pos:end="33:25">segment_end</name><argument_list pos:start="33:26" pos:end="33:32">(<argument pos:start="33:27" pos:end="33:28"><expr pos:start="33:27" pos:end="33:28"><name pos:start="33:27" pos:end="33:28">oc</name></expr></argument>, <argument pos:start="33:31" pos:end="33:31"><expr pos:start="33:31" pos:end="33:31"><literal type="number" pos:start="33:31" pos:end="33:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="39:5" pos:end="41:18"><if pos:start="39:5" pos:end="41:18">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">&lt;</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:18"><block_content pos:start="41:9" pos:end="41:18">

        <goto pos:start="41:9" pos:end="41:18">goto <name pos:start="41:14" pos:end="41:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:48">(<expr pos:start="45:9" pos:end="45:47"><name pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:11">seg</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:17">list</name></name> <operator pos:start="45:19" pos:end="45:20">&amp;&amp;</operator> <name pos:start="45:22" pos:end="45:35"><name pos:start="45:22" pos:end="45:24">seg</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:35">list_type</name></name> <operator pos:start="45:37" pos:end="45:38">==</operator> <name pos:start="45:40" pos:end="45:47">LIST_HLS</name></expr>)</condition> <block pos:start="45:50" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:22">

        <if_stmt pos:start="47:9" pos:end="49:22"><if pos:start="47:9" pos:end="49:22">if <condition pos:start="47:12" pos:end="47:49">(<expr pos:start="47:13" pos:end="47:48"><operator pos:start="47:13" pos:end="47:13">(</operator><name pos:start="47:14" pos:end="47:16">ret</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="47:43"><name pos:start="47:20" pos:end="47:37">segment_hls_window</name><argument_list pos:start="47:38" pos:end="47:43">(<argument pos:start="47:39" pos:end="47:39"><expr pos:start="47:39" pos:end="47:39"><name pos:start="47:39" pos:end="47:39">s</name></expr></argument>, <argument pos:start="47:42" pos:end="47:42"><expr pos:start="47:42" pos:end="47:42"><literal type="number" pos:start="47:42" pos:end="47:42">1</literal></expr></argument>)</argument_list></call> <operator pos:start="47:45" pos:end="47:45">&lt;</operator> <literal type="number" pos:start="47:47" pos:end="47:47">0</literal><operator pos:start="47:48" pos:end="47:48">)</operator></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:22"><block_content pos:start="49:13" pos:end="49:22">

            <goto pos:start="49:13" pos:end="49:22">goto <name pos:start="49:18" pos:end="49:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="55:1" pos:end="55:5"><name pos:start="55:1" pos:end="55:4">fail</name>:</label>

    <expr_stmt pos:start="57:5" pos:end="57:24"><expr pos:start="57:5" pos:end="57:23"><call pos:start="57:5" pos:end="57:23"><name pos:start="57:5" pos:end="57:14">avio_close</name><argument_list pos:start="57:15" pos:end="57:23">(<argument pos:start="57:16" pos:end="57:22"><expr pos:start="57:16" pos:end="57:22"><name pos:start="57:16" pos:end="57:22"><name pos:start="57:16" pos:end="57:18">seg</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:22">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:30"><expr pos:start="59:5" pos:end="59:29"><call pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:25">avformat_free_context</name><argument_list pos:start="59:26" pos:end="59:29">(<argument pos:start="59:27" pos:end="59:28"><expr pos:start="59:27" pos:end="59:28"><name pos:start="59:27" pos:end="59:28">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="61:5" pos:end="61:15">return <expr pos:start="61:12" pos:end="61:14"><name pos:start="61:12" pos:end="61:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
