<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24592.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">raw_probe_alignment</name><parameter_list pos:start="1:32" pos:end="1:67">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><name pos:start="1:33" pos:end="1:48">BlockDriverState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">bs</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:59">Error</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier><modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:5">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">BDRVRawState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:32">= <expr pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:24">bs</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">DWORD</name></type> <name pos:start="7:11" pos:end="7:27">sectorsPerCluster</name></decl>, <decl pos:start="7:30" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:30" pos:end="7:41">freeClusters</name></decl>, <decl pos:start="7:44" pos:end="7:56"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:44" pos:end="7:56">totalClusters</name></decl>, <decl pos:start="7:59" pos:end="7:63"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:59" pos:end="7:63">count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:20">DISK_GEOMETRY_EX</name></type> <name pos:start="9:22" pos:end="9:23">dg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">BOOL</name></type> <name pos:start="11:10" pos:end="11:15">status</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:28">(<expr pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:15">type</name></name> <operator pos:start="15:17" pos:end="15:18">==</operator> <name pos:start="15:20" pos:end="15:27">FTYPE_CD</name></expr>)</condition> <block pos:start="15:30" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:15">

        <expr_stmt pos:start="17:9" pos:end="17:37"><expr pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:10">bs</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:29">request_alignment</name></name> <operator pos:start="17:31" pos:end="17:31">=</operator> <literal type="number" pos:start="17:33" pos:end="17:36">2048</literal></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="39:5"><if pos:start="23:5" pos:end="39:5">if <condition pos:start="23:8" pos:end="23:34">(<expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:15">type</name></name> <operator pos:start="23:17" pos:end="23:18">==</operator> <name pos:start="23:20" pos:end="23:33">FTYPE_HARDDISK</name></expr>)</condition> <block pos:start="23:36" pos:end="39:5">{<block_content pos:start="25:9" pos:end="35:9">

        <expr_stmt pos:start="25:9" pos:end="27:73"><expr pos:start="25:9" pos:end="27:72"><name pos:start="25:9" pos:end="25:14">status</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <call pos:start="25:18" pos:end="27:72"><name pos:start="25:18" pos:end="25:32">DeviceIoControl</name><argument_list pos:start="25:33" pos:end="27:72">(<argument pos:start="25:34" pos:end="25:41"><expr pos:start="25:34" pos:end="25:41"><name pos:start="25:34" pos:end="25:41"><name pos:start="25:34" pos:end="25:34">s</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:41">hfile</name></name></expr></argument>, <argument pos:start="25:44" pos:end="25:75"><expr pos:start="25:44" pos:end="25:75"><name pos:start="25:44" pos:end="25:75">IOCTL_DISK_GET_DRIVE_GEOMETRY_EX</name></expr></argument>,

                                 <argument pos:start="27:34" pos:end="27:37"><expr pos:start="27:34" pos:end="27:37"><name pos:start="27:34" pos:end="27:37">NULL</name></expr></argument>, <argument pos:start="27:40" pos:end="27:40"><expr pos:start="27:40" pos:end="27:40"><literal type="number" pos:start="27:40" pos:end="27:40">0</literal></expr></argument>, <argument pos:start="27:43" pos:end="27:45"><expr pos:start="27:43" pos:end="27:45"><operator pos:start="27:43" pos:end="27:43">&amp;</operator><name pos:start="27:44" pos:end="27:45">dg</name></expr></argument>, <argument pos:start="27:48" pos:end="27:57"><expr pos:start="27:48" pos:end="27:57"><sizeof pos:start="27:48" pos:end="27:57">sizeof<argument_list pos:start="27:54" pos:end="27:57">(<argument pos:start="27:55" pos:end="27:56"><expr pos:start="27:55" pos:end="27:56"><name pos:start="27:55" pos:end="27:56">dg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:60" pos:end="27:65"><expr pos:start="27:60" pos:end="27:65"><operator pos:start="27:60" pos:end="27:60">&amp;</operator><name pos:start="27:61" pos:end="27:65">count</name></expr></argument>, <argument pos:start="27:68" pos:end="27:71"><expr pos:start="27:68" pos:end="27:71"><name pos:start="27:68" pos:end="27:71">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:24">(<expr pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:18">status</name> <operator pos:start="29:20" pos:end="29:21">!=</operator> <literal type="number" pos:start="29:23" pos:end="29:23">0</literal></expr>)</condition> <block pos:start="29:26" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:19">

            <expr_stmt pos:start="31:13" pos:end="31:63"><expr pos:start="31:13" pos:end="31:62"><name pos:start="31:13" pos:end="31:33"><name pos:start="31:13" pos:end="31:14">bs</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:33">request_alignment</name></name> <operator pos:start="31:35" pos:end="31:35">=</operator> <name pos:start="31:37" pos:end="31:62"><name pos:start="31:37" pos:end="31:38">dg</name><operator pos:start="31:39" pos:end="31:39">.</operator><name pos:start="31:40" pos:end="31:47">Geometry</name><operator pos:start="31:48" pos:end="31:48">.</operator><name pos:start="31:49" pos:end="31:62">BytesPerSector</name></name></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="37:9" pos:end="37:38">/* try GetDiskFreeSpace too */</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="53:5"><if pos:start="43:5" pos:end="53:5">if <condition pos:start="43:8" pos:end="43:25">(<expr pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:21">drive_path</name><index pos:start="43:22" pos:end="43:24">[<expr pos:start="43:23" pos:end="43:23"><literal type="number" pos:start="43:23" pos:end="43:23">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="43:27" pos:end="53:5">{<block_content pos:start="45:9" pos:end="51:59">

        <expr_stmt pos:start="45:9" pos:end="49:56"><expr pos:start="45:9" pos:end="49:55"><call pos:start="45:9" pos:end="49:55"><name pos:start="45:9" pos:end="45:24">GetDiskFreeSpace</name><argument_list pos:start="45:25" pos:end="49:55">(<argument pos:start="45:26" pos:end="45:38"><expr pos:start="45:26" pos:end="45:38"><name pos:start="45:26" pos:end="45:38"><name pos:start="45:26" pos:end="45:26">s</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:38">drive_path</name></name></expr></argument>, <argument pos:start="45:41" pos:end="45:58"><expr pos:start="45:41" pos:end="45:58"><operator pos:start="45:41" pos:end="45:41">&amp;</operator><name pos:start="45:42" pos:end="45:58">sectorsPerCluster</name></expr></argument>,

                         <argument pos:start="47:26" pos:end="47:52"><expr pos:start="47:26" pos:end="47:52"><operator pos:start="47:26" pos:end="47:26">&amp;</operator><name pos:start="47:27" pos:end="47:52"><name pos:start="47:27" pos:end="47:28">dg</name><operator pos:start="47:29" pos:end="47:29">.</operator><name pos:start="47:30" pos:end="47:37">Geometry</name><operator pos:start="47:38" pos:end="47:38">.</operator><name pos:start="47:39" pos:end="47:52">BytesPerSector</name></name></expr></argument>,

                         <argument pos:start="49:26" pos:end="49:38"><expr pos:start="49:26" pos:end="49:38"><operator pos:start="49:26" pos:end="49:26">&amp;</operator><name pos:start="49:27" pos:end="49:38">freeClusters</name></expr></argument>, <argument pos:start="49:41" pos:end="49:54"><expr pos:start="49:41" pos:end="49:54"><operator pos:start="49:41" pos:end="49:41">&amp;</operator><name pos:start="49:42" pos:end="49:54">totalClusters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:59"><expr pos:start="51:9" pos:end="51:58"><name pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:10">bs</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:29">request_alignment</name></name> <operator pos:start="51:31" pos:end="51:31">=</operator> <name pos:start="51:33" pos:end="51:58"><name pos:start="51:33" pos:end="51:34">dg</name><operator pos:start="51:35" pos:end="51:35">.</operator><name pos:start="51:36" pos:end="51:43">Geometry</name><operator pos:start="51:44" pos:end="51:44">.</operator><name pos:start="51:45" pos:end="51:58">BytesPerSector</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
