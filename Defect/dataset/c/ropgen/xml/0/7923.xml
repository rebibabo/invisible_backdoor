<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7923.c" pos:tabs="8"><function pos:start="1:1" pos:end="759:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">mpeg_decode_mb</name><parameter_list pos:start="1:26" pos:end="1:67">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:40">MpegEncContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:66"><decl pos:start="1:46" pos:end="1:66"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:52">DCTELEM</name></type> <name pos:start="1:54" pos:end="1:66"><name pos:start="1:54" pos:end="1:58">block</name><index pos:start="1:59" pos:end="1:62">[<expr pos:start="1:60" pos:end="1:61"><literal type="number" pos:start="1:60" pos:end="1:61">12</literal></expr>]</index><index pos:start="1:63" pos:end="1:66">[<expr pos:start="1:64" pos:end="1:65"><literal type="number" pos:start="1:64" pos:end="1:65">64</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="759:1">{<block_content pos:start="5:5" pos:end="757:13">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">k</name></decl>, <decl pos:start="5:18" pos:end="5:20"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:20">cbp</name></decl>, <decl pos:start="5:23" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:23" pos:end="5:25">val</name></decl>, <decl pos:start="5:28" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:28" pos:end="5:34">mb_type</name></decl>, <decl pos:start="5:37" pos:end="5:47"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:37" pos:end="5:47">motion_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:59"><decl pos:start="7:5" pos:end="7:58"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:28">mb_block_count</name> <init pos:start="7:30" pos:end="7:58">= <expr pos:start="7:32" pos:end="7:58"><literal type="number" pos:start="7:32" pos:end="7:34">4</literal> <operator pos:start="7:34" pos:end="7:34">+</operator> <operator pos:start="7:36" pos:end="7:36">(</operator><literal type="number" pos:start="7:37" pos:end="7:37">1</literal> <operator pos:start="7:39" pos:end="7:40">&lt;&lt;</operator> <name pos:start="7:42" pos:end="7:57"><name pos:start="7:42" pos:end="7:42">s</name><operator pos:start="7:43" pos:end="7:44">-&gt;</operator><name pos:start="7:45" pos:end="7:57">chroma_format</name></name><operator pos:start="7:58" pos:end="7:58">)</operator></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:66"><expr pos:start="11:5" pos:end="11:65"><call pos:start="11:5" pos:end="11:65"><name pos:start="11:5" pos:end="11:11">av_dlog</name><argument_list pos:start="11:12" pos:end="11:65">(<argument pos:start="11:13" pos:end="11:20"><expr pos:start="11:13" pos:end="11:20"><name pos:start="11:13" pos:end="11:20"><name pos:start="11:13" pos:end="11:13">s</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:20">avctx</name></name></expr></argument>, <argument pos:start="11:23" pos:end="11:46"><expr pos:start="11:23" pos:end="11:46"><literal type="string" pos:start="11:23" pos:end="11:46">"decode_mb: x=%d y=%d\n"</literal></expr></argument>, <argument pos:start="11:49" pos:end="11:55"><expr pos:start="11:49" pos:end="11:55"><name pos:start="11:49" pos:end="11:55"><name pos:start="11:49" pos:end="11:49">s</name><operator pos:start="11:50" pos:end="11:51">-&gt;</operator><name pos:start="11:52" pos:end="11:55">mb_x</name></name></expr></argument>, <argument pos:start="11:58" pos:end="11:64"><expr pos:start="11:58" pos:end="11:64"><name pos:start="11:58" pos:end="11:64"><name pos:start="11:58" pos:end="11:58">s</name><operator pos:start="11:59" pos:end="11:60">-&gt;</operator><name pos:start="11:61" pos:end="11:64">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><call pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:30">(<argument pos:start="15:12" pos:end="15:29"><expr pos:start="15:12" pos:end="15:29"><name pos:start="15:12" pos:end="15:24"><name pos:start="15:12" pos:end="15:12">s</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:24">mb_skipped</name></name> <operator pos:start="15:26" pos:end="15:27">==</operator> <literal type="number" pos:start="15:29" pos:end="15:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="63:5"><if pos:start="19:5" pos:end="63:5">if <condition pos:start="19:8" pos:end="19:30">(<expr pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:22">mb_skip_run</name></name><operator pos:start="19:23" pos:end="19:24">--</operator> <operator pos:start="19:26" pos:end="19:27">!=</operator> <literal type="number" pos:start="19:29" pos:end="19:29">0</literal></expr>)</condition> <block pos:start="19:32" pos:end="63:5">{<block_content pos:start="21:9" pos:end="61:17">

        <if_stmt pos:start="21:9" pos:end="57:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:46">(<expr pos:start="21:13" pos:end="21:45"><name pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:24">pict_type</name></name> <operator pos:start="21:26" pos:end="21:27">==</operator> <name pos:start="21:29" pos:end="21:45">AV_PICTURE_TYPE_P</name></expr>)</condition> <block pos:start="21:48" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:119">

            <expr_stmt pos:start="23:13" pos:end="23:30"><expr pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:25">mb_skipped</name></name> <operator pos:start="23:27" pos:end="23:27">=</operator> <literal type="number" pos:start="23:29" pos:end="23:29">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:119"><expr pos:start="25:13" pos:end="25:118"><name pos:start="25:13" pos:end="25:74"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:30">current_picture</name><operator pos:start="25:31" pos:end="25:31">.</operator><name pos:start="25:32" pos:end="25:32">f</name><operator pos:start="25:33" pos:end="25:33">.</operator><name pos:start="25:34" pos:end="25:40">mb_type</name><index pos:start="25:41" pos:end="25:74">[<expr pos:start="25:42" pos:end="25:73"><name pos:start="25:42" pos:end="25:48"><name pos:start="25:42" pos:end="25:42">s</name><operator pos:start="25:43" pos:end="25:44">-&gt;</operator><name pos:start="25:45" pos:end="25:48">mb_x</name></name> <operator pos:start="25:50" pos:end="25:50">+</operator> <name pos:start="25:52" pos:end="25:58"><name pos:start="25:52" pos:end="25:52">s</name><operator pos:start="25:53" pos:end="25:54">-&gt;</operator><name pos:start="25:55" pos:end="25:58">mb_y</name></name> <operator pos:start="25:60" pos:end="25:60">*</operator> <name pos:start="25:62" pos:end="25:73"><name pos:start="25:62" pos:end="25:62">s</name><operator pos:start="25:63" pos:end="25:64">-&gt;</operator><name pos:start="25:65" pos:end="25:73">mb_stride</name></name></expr>]</index></name> <operator pos:start="25:76" pos:end="25:76">=</operator> <name pos:start="25:78" pos:end="25:89">MB_TYPE_SKIP</name> <operator pos:start="25:91" pos:end="25:91">|</operator> <name pos:start="25:93" pos:end="25:102">MB_TYPE_L0</name> <operator pos:start="25:104" pos:end="25:104">|</operator> <name pos:start="25:106" pos:end="25:118">MB_TYPE_16x16</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="27:11" pos:end="57:9">else <block pos:start="27:16" pos:end="57:9">{<block_content pos:start="29:13" pos:end="55:34">

            <decl_stmt pos:start="29:13" pos:end="29:24"><decl pos:start="29:13" pos:end="29:23"><type pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">int</name></type> <name pos:start="29:17" pos:end="29:23">mb_type</name></decl>;</decl_stmt>



            <if_stmt pos:start="33:13" pos:end="39:103"><if pos:start="33:13" pos:end="35:93">if <condition pos:start="33:16" pos:end="33:24">(<expr pos:start="33:17" pos:end="33:23"><name pos:start="33:17" pos:end="33:23"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:23">mb_x</name></name></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:93"><block_content pos:start="35:17" pos:end="35:93">

                <expr_stmt pos:start="35:17" pos:end="35:93"><expr pos:start="35:17" pos:end="35:92"><name pos:start="35:17" pos:end="35:23">mb_type</name> <operator pos:start="35:25" pos:end="35:25">=</operator> <name pos:start="35:27" pos:end="35:92"><name pos:start="35:27" pos:end="35:27">s</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:44">current_picture</name><operator pos:start="35:45" pos:end="35:45">.</operator><name pos:start="35:46" pos:end="35:46">f</name><operator pos:start="35:47" pos:end="35:47">.</operator><name pos:start="35:48" pos:end="35:54">mb_type</name><index pos:start="35:55" pos:end="35:92">[<expr pos:start="35:56" pos:end="35:91"><name pos:start="35:56" pos:end="35:62"><name pos:start="35:56" pos:end="35:56">s</name><operator pos:start="35:57" pos:end="35:58">-&gt;</operator><name pos:start="35:59" pos:end="35:62">mb_x</name></name> <operator pos:start="35:64" pos:end="35:64">+</operator> <name pos:start="35:66" pos:end="35:72"><name pos:start="35:66" pos:end="35:66">s</name><operator pos:start="35:67" pos:end="35:68">-&gt;</operator><name pos:start="35:69" pos:end="35:72">mb_y</name></name> <operator pos:start="35:74" pos:end="35:74">*</operator> <name pos:start="35:76" pos:end="35:87"><name pos:start="35:76" pos:end="35:76">s</name><operator pos:start="35:77" pos:end="35:78">-&gt;</operator><name pos:start="35:79" pos:end="35:87">mb_stride</name></name> <operator pos:start="35:89" pos:end="35:89">-</operator> <literal type="number" pos:start="35:91" pos:end="35:91">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="37:13" pos:end="39:103">else<block type="pseudo" pos:start="39:17" pos:end="39:103"><block_content pos:start="39:17" pos:end="39:103">

                <expr_stmt pos:start="39:17" pos:end="39:103"><expr pos:start="39:17" pos:end="39:102"><name pos:start="39:17" pos:end="39:23">mb_type</name> <operator pos:start="39:25" pos:end="39:25">=</operator> <name pos:start="39:27" pos:end="39:102"><name pos:start="39:27" pos:end="39:27">s</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:44">current_picture</name><operator pos:start="39:45" pos:end="39:45">.</operator><name pos:start="39:46" pos:end="39:46">f</name><operator pos:start="39:47" pos:end="39:47">.</operator><name pos:start="39:48" pos:end="39:54">mb_type</name><index pos:start="39:55" pos:end="39:102">[<expr pos:start="39:56" pos:end="39:101"><name pos:start="39:56" pos:end="39:66"><name pos:start="39:56" pos:end="39:56">s</name><operator pos:start="39:57" pos:end="39:58">-&gt;</operator><name pos:start="39:59" pos:end="39:66">mb_width</name></name> <operator pos:start="39:68" pos:end="39:68">+</operator> <operator pos:start="39:70" pos:end="39:70">(</operator><name pos:start="39:71" pos:end="39:77"><name pos:start="39:71" pos:end="39:71">s</name><operator pos:start="39:72" pos:end="39:73">-&gt;</operator><name pos:start="39:74" pos:end="39:77">mb_y</name></name> <operator pos:start="39:79" pos:end="39:79">-</operator> <literal type="number" pos:start="39:81" pos:end="39:81">1</literal><operator pos:start="39:82" pos:end="39:82">)</operator> <operator pos:start="39:84" pos:end="39:84">*</operator> <name pos:start="39:86" pos:end="39:97"><name pos:start="39:86" pos:end="39:86">s</name><operator pos:start="39:87" pos:end="39:88">-&gt;</operator><name pos:start="39:89" pos:end="39:97">mb_stride</name></name> <operator pos:start="39:99" pos:end="39:99">-</operator> <literal type="number" pos:start="39:101" pos:end="39:101">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="39:105" pos:end="39:155">// FIXME not sure if this is allowed in MPEG at all</comment>

            <if_stmt pos:start="41:13" pos:end="43:26"><if pos:start="41:13" pos:end="43:26">if <condition pos:start="41:16" pos:end="41:34">(<expr pos:start="41:17" pos:end="41:33"><call pos:start="41:17" pos:end="41:33"><name pos:start="41:17" pos:end="41:24">IS_INTRA</name><argument_list pos:start="41:25" pos:end="41:33">(<argument pos:start="41:26" pos:end="41:32"><expr pos:start="41:26" pos:end="41:32"><name pos:start="41:26" pos:end="41:32">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="43:26"><block_content pos:start="43:17" pos:end="43:26">

                <return pos:start="43:17" pos:end="43:26">return <expr pos:start="43:24" pos:end="43:25"><operator pos:start="43:24" pos:end="43:24">-</operator><literal type="number" pos:start="43:25" pos:end="43:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="45:13" pos:end="47:39"><expr pos:start="45:13" pos:end="47:38"><name pos:start="45:13" pos:end="45:72"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:30">current_picture</name><operator pos:start="45:31" pos:end="45:31">.</operator><name pos:start="45:32" pos:end="45:32">f</name><operator pos:start="45:33" pos:end="45:33">.</operator><name pos:start="45:34" pos:end="45:40">mb_type</name><index pos:start="45:41" pos:end="45:72">[<expr pos:start="45:42" pos:end="45:71"><name pos:start="45:42" pos:end="45:48"><name pos:start="45:42" pos:end="45:42">s</name><operator pos:start="45:43" pos:end="45:44">-&gt;</operator><name pos:start="45:45" pos:end="45:48">mb_x</name></name> <operator pos:start="45:50" pos:end="45:50">+</operator> <name pos:start="45:52" pos:end="45:58"><name pos:start="45:52" pos:end="45:52">s</name><operator pos:start="45:53" pos:end="45:54">-&gt;</operator><name pos:start="45:55" pos:end="45:58">mb_y</name></name><operator pos:start="45:59" pos:end="45:59">*</operator><name pos:start="45:60" pos:end="45:71"><name pos:start="45:60" pos:end="45:60">s</name><operator pos:start="45:61" pos:end="45:62">-&gt;</operator><name pos:start="45:63" pos:end="45:71">mb_stride</name></name></expr>]</index></name> <operator pos:start="45:74" pos:end="45:74">=</operator>

                <name pos:start="47:17" pos:end="47:23">mb_type</name> <operator pos:start="47:25" pos:end="47:25">|</operator> <name pos:start="47:27" pos:end="47:38">MB_TYPE_SKIP</name></expr>;</expr_stmt>

<comment type="line" pos:start="49:1" pos:end="49:122">//            assert(s-&gt;current_picture.f.mb_type[s-&gt;mb_x + s-&gt;mb_y * s-&gt;mb_stride - 1] &amp; (MB_TYPE_16x16 | MB_TYPE_16x8));</comment>



            <if_stmt pos:start="53:13" pos:end="55:34"><if pos:start="53:13" pos:end="55:34">if <condition pos:start="53:16" pos:end="53:89">(<expr pos:start="53:17" pos:end="53:88"><operator pos:start="53:17" pos:end="53:17">(</operator><name pos:start="53:18" pos:end="53:31"><name pos:start="53:18" pos:end="53:18">s</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:22">mv</name><index pos:start="53:23" pos:end="53:25">[<expr pos:start="53:24" pos:end="53:24"><literal type="number" pos:start="53:24" pos:end="53:24">0</literal></expr>]</index><index pos:start="53:26" pos:end="53:28">[<expr pos:start="53:27" pos:end="53:27"><literal type="number" pos:start="53:27" pos:end="53:27">0</literal></expr>]</index><index pos:start="53:29" pos:end="53:31">[<expr pos:start="53:30" pos:end="53:30"><literal type="number" pos:start="53:30" pos:end="53:30">0</literal></expr>]</index></name> <operator pos:start="53:33" pos:end="53:33">|</operator> <name pos:start="53:35" pos:end="53:48"><name pos:start="53:35" pos:end="53:35">s</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:39">mv</name><index pos:start="53:40" pos:end="53:42">[<expr pos:start="53:41" pos:end="53:41"><literal type="number" pos:start="53:41" pos:end="53:41">0</literal></expr>]</index><index pos:start="53:43" pos:end="53:45">[<expr pos:start="53:44" pos:end="53:44"><literal type="number" pos:start="53:44" pos:end="53:44">0</literal></expr>]</index><index pos:start="53:46" pos:end="53:48">[<expr pos:start="53:47" pos:end="53:47"><literal type="number" pos:start="53:47" pos:end="53:47">1</literal></expr>]</index></name> <operator pos:start="53:50" pos:end="53:50">|</operator> <name pos:start="53:52" pos:end="53:65"><name pos:start="53:52" pos:end="53:52">s</name><operator pos:start="53:53" pos:end="53:54">-&gt;</operator><name pos:start="53:55" pos:end="53:56">mv</name><index pos:start="53:57" pos:end="53:59">[<expr pos:start="53:58" pos:end="53:58"><literal type="number" pos:start="53:58" pos:end="53:58">1</literal></expr>]</index><index pos:start="53:60" pos:end="53:62">[<expr pos:start="53:61" pos:end="53:61"><literal type="number" pos:start="53:61" pos:end="53:61">0</literal></expr>]</index><index pos:start="53:63" pos:end="53:65">[<expr pos:start="53:64" pos:end="53:64"><literal type="number" pos:start="53:64" pos:end="53:64">0</literal></expr>]</index></name> <operator pos:start="53:67" pos:end="53:67">|</operator> <name pos:start="53:69" pos:end="53:82"><name pos:start="53:69" pos:end="53:69">s</name><operator pos:start="53:70" pos:end="53:71">-&gt;</operator><name pos:start="53:72" pos:end="53:73">mv</name><index pos:start="53:74" pos:end="53:76">[<expr pos:start="53:75" pos:end="53:75"><literal type="number" pos:start="53:75" pos:end="53:75">1</literal></expr>]</index><index pos:start="53:77" pos:end="53:79">[<expr pos:start="53:78" pos:end="53:78"><literal type="number" pos:start="53:78" pos:end="53:78">0</literal></expr>]</index><index pos:start="53:80" pos:end="53:82">[<expr pos:start="53:81" pos:end="53:81"><literal type="number" pos:start="53:81" pos:end="53:81">1</literal></expr>]</index></name><operator pos:start="53:83" pos:end="53:83">)</operator> <operator pos:start="53:85" pos:end="53:86">==</operator> <literal type="number" pos:start="53:88" pos:end="53:88">0</literal></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:34"><block_content pos:start="55:17" pos:end="55:34">

                <expr_stmt pos:start="55:17" pos:end="55:34"><expr pos:start="55:17" pos:end="55:33"><name pos:start="55:17" pos:end="55:29"><name pos:start="55:17" pos:end="55:17">s</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:29">mb_skipped</name></name> <operator pos:start="55:31" pos:end="55:31">=</operator> <literal type="number" pos:start="55:33" pos:end="55:33">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <return pos:start="61:9" pos:end="61:17">return <expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="67:5" pos:end="125:5">switch <condition pos:start="67:12" pos:end="67:25">(<expr pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:24">pict_type</name></name></expr>)</condition> <block pos:start="67:27" pos:end="125:5">{<block_content pos:start="69:5" pos:end="123:14">

    <default pos:start="69:5" pos:end="69:12">default:</default>

    <case pos:start="71:5" pos:end="71:27">case <expr pos:start="71:10" pos:end="71:26"><name pos:start="71:10" pos:end="71:26">AV_PICTURE_TYPE_I</name></expr>:</case>

        <if_stmt pos:start="73:9" pos:end="89:9"><if pos:start="73:9" pos:end="85:9">if <condition pos:start="73:12" pos:end="73:35">(<expr pos:start="73:13" pos:end="73:34"><call pos:start="73:13" pos:end="73:29"><name pos:start="73:13" pos:end="73:21">get_bits1</name><argument_list pos:start="73:22" pos:end="73:29">(<argument pos:start="73:23" pos:end="73:28"><expr pos:start="73:23" pos:end="73:28"><operator pos:start="73:23" pos:end="73:23">&amp;</operator><name pos:start="73:24" pos:end="73:28"><name pos:start="73:24" pos:end="73:24">s</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="73:31" pos:end="73:32">==</operator> <literal type="number" pos:start="73:34" pos:end="73:34">0</literal></expr>)</condition> <block pos:start="73:37" pos:end="85:9">{<block_content pos:start="75:13" pos:end="83:52">

            <if_stmt pos:start="75:13" pos:end="81:13"><if pos:start="75:13" pos:end="81:13">if <condition pos:start="75:16" pos:end="75:39">(<expr pos:start="75:17" pos:end="75:38"><call pos:start="75:17" pos:end="75:33"><name pos:start="75:17" pos:end="75:25">get_bits1</name><argument_list pos:start="75:26" pos:end="75:33">(<argument pos:start="75:27" pos:end="75:32"><expr pos:start="75:27" pos:end="75:32"><operator pos:start="75:27" pos:end="75:27">&amp;</operator><name pos:start="75:28" pos:end="75:32"><name pos:start="75:28" pos:end="75:28">s</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:32">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="75:35" pos:end="75:36">==</operator> <literal type="number" pos:start="75:38" pos:end="75:38">0</literal></expr>)</condition> <block pos:start="75:41" pos:end="81:13">{<block_content pos:start="77:17" pos:end="79:26">

                <expr_stmt pos:start="77:17" pos:end="77:106"><expr pos:start="77:17" pos:end="77:105"><call pos:start="77:17" pos:end="77:105"><name pos:start="77:17" pos:end="77:22">av_log</name><argument_list pos:start="77:23" pos:end="77:105">(<argument pos:start="77:24" pos:end="77:31"><expr pos:start="77:24" pos:end="77:31"><name pos:start="77:24" pos:end="77:31"><name pos:start="77:24" pos:end="77:24">s</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:31">avctx</name></name></expr></argument>, <argument pos:start="77:34" pos:end="77:45"><expr pos:start="77:34" pos:end="77:45"><name pos:start="77:34" pos:end="77:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:48" pos:end="77:86"><expr pos:start="77:48" pos:end="77:86"><literal type="string" pos:start="77:48" pos:end="77:86">"invalid mb type in I Frame at %d %d\n"</literal></expr></argument>, <argument pos:start="77:89" pos:end="77:95"><expr pos:start="77:89" pos:end="77:95"><name pos:start="77:89" pos:end="77:95"><name pos:start="77:89" pos:end="77:89">s</name><operator pos:start="77:90" pos:end="77:91">-&gt;</operator><name pos:start="77:92" pos:end="77:95">mb_x</name></name></expr></argument>, <argument pos:start="77:98" pos:end="77:104"><expr pos:start="77:98" pos:end="77:104"><name pos:start="77:98" pos:end="77:104"><name pos:start="77:98" pos:end="77:98">s</name><operator pos:start="77:99" pos:end="77:100">-&gt;</operator><name pos:start="77:101" pos:end="77:104">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="79:17" pos:end="79:26">return <expr pos:start="79:24" pos:end="79:25"><operator pos:start="79:24" pos:end="79:24">-</operator><literal type="number" pos:start="79:25" pos:end="79:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:52"><expr pos:start="83:13" pos:end="83:51"><name pos:start="83:13" pos:end="83:19">mb_type</name> <operator pos:start="83:21" pos:end="83:21">=</operator> <name pos:start="83:23" pos:end="83:35">MB_TYPE_QUANT</name> <operator pos:start="83:37" pos:end="83:37">|</operator> <name pos:start="83:39" pos:end="83:51">MB_TYPE_INTRA</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="85:11" pos:end="89:9">else <block pos:start="85:16" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:36">

            <expr_stmt pos:start="87:13" pos:end="87:36"><expr pos:start="87:13" pos:end="87:35"><name pos:start="87:13" pos:end="87:19">mb_type</name> <operator pos:start="87:21" pos:end="87:21">=</operator> <name pos:start="87:23" pos:end="87:35">MB_TYPE_INTRA</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    <case pos:start="93:5" pos:end="93:27">case <expr pos:start="93:10" pos:end="93:26"><name pos:start="93:10" pos:end="93:26">AV_PICTURE_TYPE_P</name></expr>:</case>

        <expr_stmt pos:start="95:9" pos:end="95:77"><expr pos:start="95:9" pos:end="95:76"><name pos:start="95:9" pos:end="95:15">mb_type</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <call pos:start="95:19" pos:end="95:76"><name pos:start="95:19" pos:end="95:26">get_vlc2</name><argument_list pos:start="95:27" pos:end="95:76">(<argument pos:start="95:28" pos:end="95:33"><expr pos:start="95:28" pos:end="95:33"><operator pos:start="95:28" pos:end="95:28">&amp;</operator><name pos:start="95:29" pos:end="95:33"><name pos:start="95:29" pos:end="95:29">s</name><operator pos:start="95:30" pos:end="95:31">-&gt;</operator><name pos:start="95:32" pos:end="95:33">gb</name></name></expr></argument>, <argument pos:start="95:36" pos:end="95:53"><expr pos:start="95:36" pos:end="95:53"><name pos:start="95:36" pos:end="95:53"><name pos:start="95:36" pos:end="95:47">mb_ptype_vlc</name><operator pos:start="95:48" pos:end="95:48">.</operator><name pos:start="95:49" pos:end="95:53">table</name></name></expr></argument>, <argument pos:start="95:56" pos:end="95:72"><expr pos:start="95:56" pos:end="95:72"><name pos:start="95:56" pos:end="95:72">MB_PTYPE_VLC_BITS</name></expr></argument>, <argument pos:start="95:75" pos:end="95:75"><expr pos:start="95:75" pos:end="95:75"><literal type="number" pos:start="95:75" pos:end="95:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="103:9"><if pos:start="97:9" pos:end="103:9">if <condition pos:start="97:12" pos:end="97:24">(<expr pos:start="97:13" pos:end="97:23"><name pos:start="97:13" pos:end="97:19">mb_type</name> <operator pos:start="97:21" pos:end="97:21">&lt;</operator> <literal type="number" pos:start="97:23" pos:end="97:23">0</literal></expr>)</condition> <block pos:start="97:26" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:22">

            <expr_stmt pos:start="99:13" pos:end="99:102"><expr pos:start="99:13" pos:end="99:101"><call pos:start="99:13" pos:end="99:101"><name pos:start="99:13" pos:end="99:18">av_log</name><argument_list pos:start="99:19" pos:end="99:101">(<argument pos:start="99:20" pos:end="99:27"><expr pos:start="99:20" pos:end="99:27"><name pos:start="99:20" pos:end="99:27"><name pos:start="99:20" pos:end="99:20">s</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:27">avctx</name></name></expr></argument>, <argument pos:start="99:30" pos:end="99:41"><expr pos:start="99:30" pos:end="99:41"><name pos:start="99:30" pos:end="99:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="99:44" pos:end="99:82"><expr pos:start="99:44" pos:end="99:82"><literal type="string" pos:start="99:44" pos:end="99:82">"invalid mb type in P Frame at %d %d\n"</literal></expr></argument>, <argument pos:start="99:85" pos:end="99:91"><expr pos:start="99:85" pos:end="99:91"><name pos:start="99:85" pos:end="99:91"><name pos:start="99:85" pos:end="99:85">s</name><operator pos:start="99:86" pos:end="99:87">-&gt;</operator><name pos:start="99:88" pos:end="99:91">mb_x</name></name></expr></argument>, <argument pos:start="99:94" pos:end="99:100"><expr pos:start="99:94" pos:end="99:100"><name pos:start="99:94" pos:end="99:100"><name pos:start="99:94" pos:end="99:94">s</name><operator pos:start="99:95" pos:end="99:96">-&gt;</operator><name pos:start="99:97" pos:end="99:100">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="101:13" pos:end="101:22">return <expr pos:start="101:20" pos:end="101:21"><operator pos:start="101:20" pos:end="101:20">-</operator><literal type="number" pos:start="101:21" pos:end="101:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:41"><expr pos:start="105:9" pos:end="105:40"><name pos:start="105:9" pos:end="105:15">mb_type</name> <operator pos:start="105:17" pos:end="105:17">=</operator> <name pos:start="105:19" pos:end="105:40"><name pos:start="105:19" pos:end="105:31">ptype2mb_type</name><index pos:start="105:32" pos:end="105:40">[<expr pos:start="105:33" pos:end="105:39"><name pos:start="105:33" pos:end="105:39">mb_type</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>

    <case pos:start="109:5" pos:end="109:27">case <expr pos:start="109:10" pos:end="109:26"><name pos:start="109:10" pos:end="109:26">AV_PICTURE_TYPE_B</name></expr>:</case>

        <expr_stmt pos:start="111:9" pos:end="111:77"><expr pos:start="111:9" pos:end="111:76"><name pos:start="111:9" pos:end="111:15">mb_type</name> <operator pos:start="111:17" pos:end="111:17">=</operator> <call pos:start="111:19" pos:end="111:76"><name pos:start="111:19" pos:end="111:26">get_vlc2</name><argument_list pos:start="111:27" pos:end="111:76">(<argument pos:start="111:28" pos:end="111:33"><expr pos:start="111:28" pos:end="111:33"><operator pos:start="111:28" pos:end="111:28">&amp;</operator><name pos:start="111:29" pos:end="111:33"><name pos:start="111:29" pos:end="111:29">s</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:33">gb</name></name></expr></argument>, <argument pos:start="111:36" pos:end="111:53"><expr pos:start="111:36" pos:end="111:53"><name pos:start="111:36" pos:end="111:53"><name pos:start="111:36" pos:end="111:47">mb_btype_vlc</name><operator pos:start="111:48" pos:end="111:48">.</operator><name pos:start="111:49" pos:end="111:53">table</name></name></expr></argument>, <argument pos:start="111:56" pos:end="111:72"><expr pos:start="111:56" pos:end="111:72"><name pos:start="111:56" pos:end="111:72">MB_BTYPE_VLC_BITS</name></expr></argument>, <argument pos:start="111:75" pos:end="111:75"><expr pos:start="111:75" pos:end="111:75"><literal type="number" pos:start="111:75" pos:end="111:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="119:9"><if pos:start="113:9" pos:end="119:9">if <condition pos:start="113:12" pos:end="113:24">(<expr pos:start="113:13" pos:end="113:23"><name pos:start="113:13" pos:end="113:19">mb_type</name> <operator pos:start="113:21" pos:end="113:21">&lt;</operator> <literal type="number" pos:start="113:23" pos:end="113:23">0</literal></expr>)</condition> <block pos:start="113:26" pos:end="119:9">{<block_content pos:start="115:13" pos:end="117:22">

            <expr_stmt pos:start="115:13" pos:end="115:102"><expr pos:start="115:13" pos:end="115:101"><call pos:start="115:13" pos:end="115:101"><name pos:start="115:13" pos:end="115:18">av_log</name><argument_list pos:start="115:19" pos:end="115:101">(<argument pos:start="115:20" pos:end="115:27"><expr pos:start="115:20" pos:end="115:27"><name pos:start="115:20" pos:end="115:27"><name pos:start="115:20" pos:end="115:20">s</name><operator pos:start="115:21" pos:end="115:22">-&gt;</operator><name pos:start="115:23" pos:end="115:27">avctx</name></name></expr></argument>, <argument pos:start="115:30" pos:end="115:41"><expr pos:start="115:30" pos:end="115:41"><name pos:start="115:30" pos:end="115:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="115:44" pos:end="115:82"><expr pos:start="115:44" pos:end="115:82"><literal type="string" pos:start="115:44" pos:end="115:82">"invalid mb type in B Frame at %d %d\n"</literal></expr></argument>, <argument pos:start="115:85" pos:end="115:91"><expr pos:start="115:85" pos:end="115:91"><name pos:start="115:85" pos:end="115:91"><name pos:start="115:85" pos:end="115:85">s</name><operator pos:start="115:86" pos:end="115:87">-&gt;</operator><name pos:start="115:88" pos:end="115:91">mb_x</name></name></expr></argument>, <argument pos:start="115:94" pos:end="115:100"><expr pos:start="115:94" pos:end="115:100"><name pos:start="115:94" pos:end="115:100"><name pos:start="115:94" pos:end="115:94">s</name><operator pos:start="115:95" pos:end="115:96">-&gt;</operator><name pos:start="115:97" pos:end="115:100">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="117:13" pos:end="117:22">return <expr pos:start="117:20" pos:end="117:21"><operator pos:start="117:20" pos:end="117:20">-</operator><literal type="number" pos:start="117:21" pos:end="117:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:41"><expr pos:start="121:9" pos:end="121:40"><name pos:start="121:9" pos:end="121:15">mb_type</name> <operator pos:start="121:17" pos:end="121:17">=</operator> <name pos:start="121:19" pos:end="121:40"><name pos:start="121:19" pos:end="121:31">btype2mb_type</name><index pos:start="121:32" pos:end="121:40">[<expr pos:start="121:33" pos:end="121:39"><name pos:start="121:33" pos:end="121:39">mb_type</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="123:9" pos:end="123:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="127:5" pos:end="127:47"><expr pos:start="127:5" pos:end="127:46"><call pos:start="127:5" pos:end="127:46"><name pos:start="127:5" pos:end="127:11">av_dlog</name><argument_list pos:start="127:12" pos:end="127:46">(<argument pos:start="127:13" pos:end="127:20"><expr pos:start="127:13" pos:end="127:20"><name pos:start="127:13" pos:end="127:20"><name pos:start="127:13" pos:end="127:13">s</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:20">avctx</name></name></expr></argument>, <argument pos:start="127:23" pos:end="127:36"><expr pos:start="127:23" pos:end="127:36"><literal type="string" pos:start="127:23" pos:end="127:36">"mb_type=%x\n"</literal></expr></argument>, <argument pos:start="127:39" pos:end="127:45"><expr pos:start="127:39" pos:end="127:45"><name pos:start="127:39" pos:end="127:45">mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="129:1" pos:end="129:42">//    motion_type = 0; /* avoid warning */</comment>

    <if_stmt pos:start="131:5" pos:end="749:5"><if pos:start="131:5" pos:end="241:5">if <condition pos:start="131:8" pos:end="131:26">(<expr pos:start="131:9" pos:end="131:25"><call pos:start="131:9" pos:end="131:25"><name pos:start="131:9" pos:end="131:16">IS_INTRA</name><argument_list pos:start="131:17" pos:end="131:25">(<argument pos:start="131:18" pos:end="131:24"><expr pos:start="131:18" pos:end="131:24"><name pos:start="131:18" pos:end="131:24">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="131:28" pos:end="241:5">{<block_content pos:start="133:9" pos:end="239:9">

        <expr_stmt pos:start="133:9" pos:end="133:41"><expr pos:start="133:9" pos:end="133:40"><call pos:start="133:9" pos:end="133:40"><name pos:start="133:9" pos:end="133:27"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:14">dsp</name><operator pos:start="133:15" pos:end="133:15">.</operator><name pos:start="133:16" pos:end="133:27">clear_blocks</name></name><argument_list pos:start="133:28" pos:end="133:40">(<argument pos:start="133:29" pos:end="133:39"><expr pos:start="133:29" pos:end="133:39"><name pos:start="133:29" pos:end="133:39"><name pos:start="133:29" pos:end="133:29">s</name><operator pos:start="133:30" pos:end="133:31">-&gt;</operator><name pos:start="133:32" pos:end="133:36">block</name><index pos:start="133:37" pos:end="133:39">[<expr pos:start="133:38" pos:end="133:38"><literal type="number" pos:start="133:38" pos:end="133:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="137:9" pos:end="141:9"><if pos:start="137:9" pos:end="141:9">if <condition pos:start="137:12" pos:end="137:31">(<expr pos:start="137:13" pos:end="137:30"><operator pos:start="137:13" pos:end="137:13">!</operator><name pos:start="137:14" pos:end="137:30"><name pos:start="137:14" pos:end="137:14">s</name><operator pos:start="137:15" pos:end="137:16">-&gt;</operator><name pos:start="137:17" pos:end="137:30">chroma_y_shift</name></name></expr>)</condition> <block pos:start="137:33" pos:end="141:9">{<block_content pos:start="139:13" pos:end="139:45">

            <expr_stmt pos:start="139:13" pos:end="139:45"><expr pos:start="139:13" pos:end="139:44"><call pos:start="139:13" pos:end="139:44"><name pos:start="139:13" pos:end="139:31"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:18">dsp</name><operator pos:start="139:19" pos:end="139:19">.</operator><name pos:start="139:20" pos:end="139:31">clear_blocks</name></name><argument_list pos:start="139:32" pos:end="139:44">(<argument pos:start="139:33" pos:end="139:43"><expr pos:start="139:33" pos:end="139:43"><name pos:start="139:33" pos:end="139:43"><name pos:start="139:33" pos:end="139:33">s</name><operator pos:start="139:34" pos:end="139:35">-&gt;</operator><name pos:start="139:36" pos:end="139:40">block</name><index pos:start="139:41" pos:end="139:43">[<expr pos:start="139:42" pos:end="139:42"><literal type="number" pos:start="139:42" pos:end="139:42">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="145:9" pos:end="145:30">/* compute DCT type */</comment>

        <if_stmt pos:start="147:9" pos:end="153:9"><if pos:start="147:9" pos:end="153:9">if <condition pos:start="147:12" pos:end="149:37">(<expr pos:start="147:13" pos:end="149:36"><name pos:start="147:13" pos:end="147:32"><name pos:start="147:13" pos:end="147:13">s</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:32">picture_structure</name></name> <operator pos:start="147:34" pos:end="147:35">==</operator> <name pos:start="147:37" pos:end="147:46">PICT_FRAME</name> <operator pos:start="147:48" pos:end="147:49">&amp;&amp;</operator> <comment type="line" pos:start="147:51" pos:end="147:91">// FIXME add an interlaced_dct coded var?</comment>

            <operator pos:start="149:13" pos:end="149:13">!</operator><name pos:start="149:14" pos:end="149:36"><name pos:start="149:14" pos:end="149:14">s</name><operator pos:start="149:15" pos:end="149:16">-&gt;</operator><name pos:start="149:17" pos:end="149:36">frame_pred_frame_dct</name></name></expr>)</condition> <block pos:start="149:39" pos:end="153:9">{<block_content pos:start="151:13" pos:end="151:50">

            <expr_stmt pos:start="151:13" pos:end="151:50"><expr pos:start="151:13" pos:end="151:49"><name pos:start="151:13" pos:end="151:29"><name pos:start="151:13" pos:end="151:13">s</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:29">interlaced_dct</name></name> <operator pos:start="151:31" pos:end="151:31">=</operator> <call pos:start="151:33" pos:end="151:49"><name pos:start="151:33" pos:end="151:41">get_bits1</name><argument_list pos:start="151:42" pos:end="151:49">(<argument pos:start="151:43" pos:end="151:48"><expr pos:start="151:43" pos:end="151:48"><operator pos:start="151:43" pos:end="151:43">&amp;</operator><name pos:start="151:44" pos:end="151:48"><name pos:start="151:44" pos:end="151:44">s</name><operator pos:start="151:45" pos:end="151:46">-&gt;</operator><name pos:start="151:47" pos:end="151:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="157:9" pos:end="159:38"><if pos:start="157:9" pos:end="159:38">if <condition pos:start="157:12" pos:end="157:30">(<expr pos:start="157:13" pos:end="157:29"><call pos:start="157:13" pos:end="157:29"><name pos:start="157:13" pos:end="157:20">IS_QUANT</name><argument_list pos:start="157:21" pos:end="157:29">(<argument pos:start="157:22" pos:end="157:28"><expr pos:start="157:22" pos:end="157:28"><name pos:start="157:22" pos:end="157:28">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:38"><block_content pos:start="159:13" pos:end="159:38">

            <expr_stmt pos:start="159:13" pos:end="159:38"><expr pos:start="159:13" pos:end="159:37"><name pos:start="159:13" pos:end="159:21"><name pos:start="159:13" pos:end="159:13">s</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:21">qscale</name></name> <operator pos:start="159:23" pos:end="159:23">=</operator> <call pos:start="159:25" pos:end="159:37"><name pos:start="159:25" pos:end="159:34">get_qscale</name><argument_list pos:start="159:35" pos:end="159:37">(<argument pos:start="159:36" pos:end="159:36"><expr pos:start="159:36" pos:end="159:36"><name pos:start="159:36" pos:end="159:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="163:9" pos:end="187:54"><if pos:start="163:9" pos:end="185:9">if <condition pos:start="163:12" pos:end="163:42">(<expr pos:start="163:13" pos:end="163:41"><name pos:start="163:13" pos:end="163:41"><name pos:start="163:13" pos:end="163:13">s</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:41">concealment_motion_vectors</name></name></expr>)</condition> <block pos:start="163:44" pos:end="185:9">{<block_content pos:start="167:13" pos:end="183:31">

            <comment type="block" pos:start="165:13" pos:end="165:33">/* just parse them */</comment>

            <if_stmt pos:start="167:13" pos:end="169:35"><if pos:start="167:13" pos:end="169:35">if <condition pos:start="167:16" pos:end="167:51">(<expr pos:start="167:17" pos:end="167:50"><name pos:start="167:17" pos:end="167:36"><name pos:start="167:17" pos:end="167:17">s</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:36">picture_structure</name></name> <operator pos:start="167:38" pos:end="167:39">!=</operator> <name pos:start="167:41" pos:end="167:50">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="169:17" pos:end="169:35"><block_content pos:start="169:17" pos:end="169:35">

                <expr_stmt pos:start="169:17" pos:end="169:35"><expr pos:start="169:17" pos:end="169:34"><call pos:start="169:17" pos:end="169:34"><name pos:start="169:17" pos:end="169:26">skip_bits1</name><argument_list pos:start="169:27" pos:end="169:34">(<argument pos:start="169:28" pos:end="169:33"><expr pos:start="169:28" pos:end="169:33"><operator pos:start="169:28" pos:end="169:28">&amp;</operator><name pos:start="169:29" pos:end="169:33"><name pos:start="169:29" pos:end="169:29">s</name><operator pos:start="169:30" pos:end="169:31">-&gt;</operator><name pos:start="169:32" pos:end="169:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="169:37" pos:end="169:54">/* field select */</comment>



            <expr_stmt pos:start="173:13" pos:end="175:81"><expr pos:start="173:13" pos:end="175:80"><name pos:start="173:13" pos:end="173:26"><name pos:start="173:13" pos:end="173:13">s</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:17">mv</name><index pos:start="173:18" pos:end="173:20">[<expr pos:start="173:19" pos:end="173:19"><literal type="number" pos:start="173:19" pos:end="173:19">0</literal></expr>]</index><index pos:start="173:21" pos:end="173:23">[<expr pos:start="173:22" pos:end="173:22"><literal type="number" pos:start="173:22" pos:end="173:22">0</literal></expr>]</index><index pos:start="173:24" pos:end="173:26">[<expr pos:start="173:25" pos:end="173:25"><literal type="number" pos:start="173:25" pos:end="173:25">0</literal></expr>]</index></name><operator pos:start="173:27" pos:end="173:27">=</operator> <name pos:start="173:29" pos:end="173:47"><name pos:start="173:29" pos:end="173:29">s</name><operator pos:start="173:30" pos:end="173:31">-&gt;</operator><name pos:start="173:32" pos:end="173:38">last_mv</name><index pos:start="173:39" pos:end="173:41">[<expr pos:start="173:40" pos:end="173:40"><literal type="number" pos:start="173:40" pos:end="173:40">0</literal></expr>]</index><index pos:start="173:42" pos:end="173:44">[<expr pos:start="173:43" pos:end="173:43"><literal type="number" pos:start="173:43" pos:end="173:43">0</literal></expr>]</index><index pos:start="173:45" pos:end="173:47">[<expr pos:start="173:46" pos:end="173:46"><literal type="number" pos:start="173:46" pos:end="173:46">0</literal></expr>]</index></name><operator pos:start="173:48" pos:end="173:48">=</operator> <name pos:start="173:50" pos:end="173:68"><name pos:start="173:50" pos:end="173:50">s</name><operator pos:start="173:51" pos:end="173:52">-&gt;</operator><name pos:start="173:53" pos:end="173:59">last_mv</name><index pos:start="173:60" pos:end="173:62">[<expr pos:start="173:61" pos:end="173:61"><literal type="number" pos:start="173:61" pos:end="173:61">0</literal></expr>]</index><index pos:start="173:63" pos:end="173:65">[<expr pos:start="173:64" pos:end="173:64"><literal type="number" pos:start="173:64" pos:end="173:64">1</literal></expr>]</index><index pos:start="173:66" pos:end="173:68">[<expr pos:start="173:67" pos:end="173:67"><literal type="number" pos:start="173:67" pos:end="173:67">0</literal></expr>]</index></name> <operator pos:start="173:70" pos:end="173:70">=</operator>

                <call pos:start="175:17" pos:end="175:80"><name pos:start="175:17" pos:end="175:34">mpeg_decode_motion</name><argument_list pos:start="175:35" pos:end="175:80">(<argument pos:start="175:36" pos:end="175:36"><expr pos:start="175:36" pos:end="175:36"><name pos:start="175:36" pos:end="175:36">s</name></expr></argument>, <argument pos:start="175:39" pos:end="175:58"><expr pos:start="175:39" pos:end="175:58"><name pos:start="175:39" pos:end="175:58"><name pos:start="175:39" pos:end="175:39">s</name><operator pos:start="175:40" pos:end="175:41">-&gt;</operator><name pos:start="175:42" pos:end="175:52">mpeg_f_code</name><index pos:start="175:53" pos:end="175:55">[<expr pos:start="175:54" pos:end="175:54"><literal type="number" pos:start="175:54" pos:end="175:54">0</literal></expr>]</index><index pos:start="175:56" pos:end="175:58">[<expr pos:start="175:57" pos:end="175:57"><literal type="number" pos:start="175:57" pos:end="175:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="175:61" pos:end="175:79"><expr pos:start="175:61" pos:end="175:79"><name pos:start="175:61" pos:end="175:79"><name pos:start="175:61" pos:end="175:61">s</name><operator pos:start="175:62" pos:end="175:63">-&gt;</operator><name pos:start="175:64" pos:end="175:70">last_mv</name><index pos:start="175:71" pos:end="175:73">[<expr pos:start="175:72" pos:end="175:72"><literal type="number" pos:start="175:72" pos:end="175:72">0</literal></expr>]</index><index pos:start="175:74" pos:end="175:76">[<expr pos:start="175:75" pos:end="175:75"><literal type="number" pos:start="175:75" pos:end="175:75">0</literal></expr>]</index><index pos:start="175:77" pos:end="175:79">[<expr pos:start="175:78" pos:end="175:78"><literal type="number" pos:start="175:78" pos:end="175:78">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="179:81"><expr pos:start="177:13" pos:end="179:80"><name pos:start="177:13" pos:end="177:26"><name pos:start="177:13" pos:end="177:13">s</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:17">mv</name><index pos:start="177:18" pos:end="177:20">[<expr pos:start="177:19" pos:end="177:19"><literal type="number" pos:start="177:19" pos:end="177:19">0</literal></expr>]</index><index pos:start="177:21" pos:end="177:23">[<expr pos:start="177:22" pos:end="177:22"><literal type="number" pos:start="177:22" pos:end="177:22">0</literal></expr>]</index><index pos:start="177:24" pos:end="177:26">[<expr pos:start="177:25" pos:end="177:25"><literal type="number" pos:start="177:25" pos:end="177:25">1</literal></expr>]</index></name><operator pos:start="177:27" pos:end="177:27">=</operator> <name pos:start="177:29" pos:end="177:47"><name pos:start="177:29" pos:end="177:29">s</name><operator pos:start="177:30" pos:end="177:31">-&gt;</operator><name pos:start="177:32" pos:end="177:38">last_mv</name><index pos:start="177:39" pos:end="177:41">[<expr pos:start="177:40" pos:end="177:40"><literal type="number" pos:start="177:40" pos:end="177:40">0</literal></expr>]</index><index pos:start="177:42" pos:end="177:44">[<expr pos:start="177:43" pos:end="177:43"><literal type="number" pos:start="177:43" pos:end="177:43">0</literal></expr>]</index><index pos:start="177:45" pos:end="177:47">[<expr pos:start="177:46" pos:end="177:46"><literal type="number" pos:start="177:46" pos:end="177:46">1</literal></expr>]</index></name><operator pos:start="177:48" pos:end="177:48">=</operator> <name pos:start="177:50" pos:end="177:68"><name pos:start="177:50" pos:end="177:50">s</name><operator pos:start="177:51" pos:end="177:52">-&gt;</operator><name pos:start="177:53" pos:end="177:59">last_mv</name><index pos:start="177:60" pos:end="177:62">[<expr pos:start="177:61" pos:end="177:61"><literal type="number" pos:start="177:61" pos:end="177:61">0</literal></expr>]</index><index pos:start="177:63" pos:end="177:65">[<expr pos:start="177:64" pos:end="177:64"><literal type="number" pos:start="177:64" pos:end="177:64">1</literal></expr>]</index><index pos:start="177:66" pos:end="177:68">[<expr pos:start="177:67" pos:end="177:67"><literal type="number" pos:start="177:67" pos:end="177:67">1</literal></expr>]</index></name> <operator pos:start="177:70" pos:end="177:70">=</operator>

                <call pos:start="179:17" pos:end="179:80"><name pos:start="179:17" pos:end="179:34">mpeg_decode_motion</name><argument_list pos:start="179:35" pos:end="179:80">(<argument pos:start="179:36" pos:end="179:36"><expr pos:start="179:36" pos:end="179:36"><name pos:start="179:36" pos:end="179:36">s</name></expr></argument>, <argument pos:start="179:39" pos:end="179:58"><expr pos:start="179:39" pos:end="179:58"><name pos:start="179:39" pos:end="179:58"><name pos:start="179:39" pos:end="179:39">s</name><operator pos:start="179:40" pos:end="179:41">-&gt;</operator><name pos:start="179:42" pos:end="179:52">mpeg_f_code</name><index pos:start="179:53" pos:end="179:55">[<expr pos:start="179:54" pos:end="179:54"><literal type="number" pos:start="179:54" pos:end="179:54">0</literal></expr>]</index><index pos:start="179:56" pos:end="179:58">[<expr pos:start="179:57" pos:end="179:57"><literal type="number" pos:start="179:57" pos:end="179:57">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="179:61" pos:end="179:79"><expr pos:start="179:61" pos:end="179:79"><name pos:start="179:61" pos:end="179:79"><name pos:start="179:61" pos:end="179:61">s</name><operator pos:start="179:62" pos:end="179:63">-&gt;</operator><name pos:start="179:64" pos:end="179:70">last_mv</name><index pos:start="179:71" pos:end="179:73">[<expr pos:start="179:72" pos:end="179:72"><literal type="number" pos:start="179:72" pos:end="179:72">0</literal></expr>]</index><index pos:start="179:74" pos:end="179:76">[<expr pos:start="179:75" pos:end="179:75"><literal type="number" pos:start="179:75" pos:end="179:75">0</literal></expr>]</index><index pos:start="179:77" pos:end="179:79">[<expr pos:start="179:78" pos:end="179:78"><literal type="number" pos:start="179:78" pos:end="179:78">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="183:13" pos:end="183:31"><expr pos:start="183:13" pos:end="183:30"><call pos:start="183:13" pos:end="183:30"><name pos:start="183:13" pos:end="183:22">skip_bits1</name><argument_list pos:start="183:23" pos:end="183:30">(<argument pos:start="183:24" pos:end="183:29"><expr pos:start="183:24" pos:end="183:29"><operator pos:start="183:24" pos:end="183:24">&amp;</operator><name pos:start="183:25" pos:end="183:29"><name pos:start="183:25" pos:end="183:25">s</name><operator pos:start="183:26" pos:end="183:27">-&gt;</operator><name pos:start="183:28" pos:end="183:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="183:33" pos:end="183:44">/* marker */</comment>

        </block_content>}</block></if> <else pos:start="185:11" pos:end="187:54">else<block type="pseudo" pos:start="187:13" pos:end="187:54"><block_content pos:start="187:13" pos:end="187:54">

            <expr_stmt pos:start="187:13" pos:end="187:54"><expr pos:start="187:13" pos:end="187:53"><call pos:start="187:13" pos:end="187:53"><name pos:start="187:13" pos:end="187:18">memset</name><argument_list pos:start="187:19" pos:end="187:53">(<argument pos:start="187:20" pos:end="187:29"><expr pos:start="187:20" pos:end="187:29"><name pos:start="187:20" pos:end="187:29"><name pos:start="187:20" pos:end="187:20">s</name><operator pos:start="187:21" pos:end="187:22">-&gt;</operator><name pos:start="187:23" pos:end="187:29">last_mv</name></name></expr></argument>, <argument pos:start="187:32" pos:end="187:32"><expr pos:start="187:32" pos:end="187:32"><literal type="number" pos:start="187:32" pos:end="187:32">0</literal></expr></argument>, <argument pos:start="187:35" pos:end="187:52"><expr pos:start="187:35" pos:end="187:52"><sizeof pos:start="187:35" pos:end="187:52">sizeof<argument_list pos:start="187:41" pos:end="187:52">(<argument pos:start="187:42" pos:end="187:51"><expr pos:start="187:42" pos:end="187:51"><name pos:start="187:42" pos:end="187:51"><name pos:start="187:42" pos:end="187:42">s</name><operator pos:start="187:43" pos:end="187:44">-&gt;</operator><name pos:start="187:45" pos:end="187:51">last_mv</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="187:56" pos:end="187:80">/* reset mv prediction */</comment>

        <expr_stmt pos:start="189:9" pos:end="189:24"><expr pos:start="189:9" pos:end="189:23"><name pos:start="189:9" pos:end="189:19"><name pos:start="189:9" pos:end="189:9">s</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:19">mb_intra</name></name> <operator pos:start="189:21" pos:end="189:21">=</operator> <literal type="number" pos:start="189:23" pos:end="189:23">1</literal></expr>;</expr_stmt>

        <comment type="line" pos:start="191:9" pos:end="191:46">// if 1, we memcpy blocks in xvmcvideo</comment>

        <if_stmt pos:start="193:9" pos:end="203:9"><if pos:start="193:9" pos:end="203:9">if <condition pos:start="193:12" pos:end="193:72">(<expr pos:start="193:13" pos:end="193:71"><name pos:start="193:13" pos:end="193:36">CONFIG_MPEG_XVMC_DECODER</name> <operator pos:start="193:38" pos:end="193:39">&amp;&amp;</operator> <name pos:start="193:41" pos:end="193:67"><name pos:start="193:41" pos:end="193:41">s</name><operator pos:start="193:42" pos:end="193:43">-&gt;</operator><name pos:start="193:44" pos:end="193:48">avctx</name><operator pos:start="193:49" pos:end="193:50">-&gt;</operator><name pos:start="193:51" pos:end="193:67">xvmc_acceleration</name></name> <operator pos:start="193:69" pos:end="193:69">&gt;</operator> <literal type="number" pos:start="193:71" pos:end="193:71">1</literal></expr>)</condition> <block pos:start="193:74" pos:end="203:9">{<block_content pos:start="195:13" pos:end="201:13">

            <expr_stmt pos:start="195:13" pos:end="195:40"><expr pos:start="195:13" pos:end="195:39"><call pos:start="195:13" pos:end="195:39"><name pos:start="195:13" pos:end="195:32">ff_xvmc_pack_pblocks</name><argument_list pos:start="195:33" pos:end="195:39">(<argument pos:start="195:34" pos:end="195:34"><expr pos:start="195:34" pos:end="195:34"><name pos:start="195:34" pos:end="195:34">s</name></expr></argument>, <argument pos:start="195:37" pos:end="195:38"><expr pos:start="195:37" pos:end="195:38"><operator pos:start="195:37" pos:end="195:37">-</operator><literal type="number" pos:start="195:38" pos:end="195:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="195:42" pos:end="195:72">// inter are always full blocks</comment>

            <if_stmt pos:start="197:13" pos:end="201:13"><if pos:start="197:13" pos:end="201:13">if <condition pos:start="197:16" pos:end="197:27">(<expr pos:start="197:17" pos:end="197:26"><name pos:start="197:17" pos:end="197:26"><name pos:start="197:17" pos:end="197:17">s</name><operator pos:start="197:18" pos:end="197:19">-&gt;</operator><name pos:start="197:20" pos:end="197:26">swap_uv</name></name></expr>)</condition> <block pos:start="197:29" pos:end="201:13">{<block_content pos:start="199:17" pos:end="199:31">

                <expr_stmt pos:start="199:17" pos:end="199:31"><expr pos:start="199:17" pos:end="199:30"><call pos:start="199:17" pos:end="199:30"><name pos:start="199:17" pos:end="199:27">exchange_uv</name><argument_list pos:start="199:28" pos:end="199:30">(<argument pos:start="199:29" pos:end="199:29"><expr pos:start="199:29" pos:end="199:29"><name pos:start="199:29" pos:end="199:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="207:9" pos:end="239:9"><if pos:start="207:9" pos:end="229:9">if <condition pos:start="207:12" pos:end="207:47">(<expr pos:start="207:13" pos:end="207:46"><name pos:start="207:13" pos:end="207:23"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:23">codec_id</name></name> <operator pos:start="207:25" pos:end="207:26">==</operator> <name pos:start="207:28" pos:end="207:46">CODEC_ID_MPEG2VIDEO</name></expr>)</condition> <block pos:start="207:49" pos:end="229:9">{<block_content pos:start="209:13" pos:end="227:13">

            <if_stmt pos:start="209:13" pos:end="227:13"><if pos:start="209:13" pos:end="217:13">if <condition pos:start="209:16" pos:end="209:45">(<expr pos:start="209:17" pos:end="209:44"><name pos:start="209:17" pos:end="209:25"><name pos:start="209:17" pos:end="209:17">s</name><operator pos:start="209:18" pos:end="209:19">-&gt;</operator><name pos:start="209:20" pos:end="209:25">flags2</name></name> <operator pos:start="209:27" pos:end="209:27">&amp;</operator> <name pos:start="209:29" pos:end="209:44">CODEC_FLAG2_FAST</name></expr>)</condition> <block pos:start="209:47" pos:end="217:13">{<block_content pos:start="211:17" pos:end="215:17">

                <for pos:start="211:17" pos:end="215:17">for <control pos:start="211:21" pos:end="211:39">(<init pos:start="211:22" pos:end="211:27"><expr pos:start="211:22" pos:end="211:26"><name pos:start="211:22" pos:end="211:22">i</name> <operator pos:start="211:24" pos:end="211:24">=</operator> <literal type="number" pos:start="211:26" pos:end="211:26">0</literal></expr>;</init> <condition pos:start="211:29" pos:end="211:34"><expr pos:start="211:29" pos:end="211:33"><name pos:start="211:29" pos:end="211:29">i</name> <operator pos:start="211:31" pos:end="211:31">&lt;</operator> <literal type="number" pos:start="211:33" pos:end="211:33">6</literal></expr>;</condition> <incr pos:start="211:36" pos:end="211:38"><expr pos:start="211:36" pos:end="211:38"><name pos:start="211:36" pos:end="211:36">i</name><operator pos:start="211:37" pos:end="211:38">++</operator></expr></incr>)</control> <block pos:start="211:41" pos:end="215:17">{<block_content pos:start="213:21" pos:end="213:72">

                    <expr_stmt pos:start="213:21" pos:end="213:72"><expr pos:start="213:21" pos:end="213:71"><call pos:start="213:21" pos:end="213:71"><name pos:start="213:21" pos:end="213:49">mpeg2_fast_decode_block_intra</name><argument_list pos:start="213:50" pos:end="213:71">(<argument pos:start="213:51" pos:end="213:51"><expr pos:start="213:51" pos:end="213:51"><name pos:start="213:51" pos:end="213:51">s</name></expr></argument>, <argument pos:start="213:54" pos:end="213:67"><expr pos:start="213:54" pos:end="213:67"><operator pos:start="213:54" pos:end="213:54">*</operator><name pos:start="213:55" pos:end="213:67"><name pos:start="213:55" pos:end="213:55">s</name><operator pos:start="213:56" pos:end="213:57">-&gt;</operator><name pos:start="213:58" pos:end="213:64">pblocks</name><index pos:start="213:65" pos:end="213:67">[<expr pos:start="213:66" pos:end="213:66"><name pos:start="213:66" pos:end="213:66">i</name></expr>]</index></name></expr></argument>, <argument pos:start="213:70" pos:end="213:70"><expr pos:start="213:70" pos:end="213:70"><name pos:start="213:70" pos:end="213:70">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="217:15" pos:end="227:13">else <block pos:start="217:20" pos:end="227:13">{<block_content pos:start="219:17" pos:end="225:17">

                <for pos:start="219:17" pos:end="225:17">for <control pos:start="219:21" pos:end="219:52">(<init pos:start="219:22" pos:end="219:27"><expr pos:start="219:22" pos:end="219:26"><name pos:start="219:22" pos:end="219:22">i</name> <operator pos:start="219:24" pos:end="219:24">=</operator> <literal type="number" pos:start="219:26" pos:end="219:26">0</literal></expr>;</init> <condition pos:start="219:29" pos:end="219:47"><expr pos:start="219:29" pos:end="219:46"><name pos:start="219:29" pos:end="219:29">i</name> <operator pos:start="219:31" pos:end="219:31">&lt;</operator> <name pos:start="219:33" pos:end="219:46">mb_block_count</name></expr>;</condition> <incr pos:start="219:49" pos:end="219:51"><expr pos:start="219:49" pos:end="219:51"><name pos:start="219:49" pos:end="219:49">i</name><operator pos:start="219:50" pos:end="219:51">++</operator></expr></incr>)</control> <block pos:start="219:54" pos:end="225:17">{<block_content pos:start="221:21" pos:end="223:34">

                    <if_stmt pos:start="221:21" pos:end="223:34"><if pos:start="221:21" pos:end="223:34">if <condition pos:start="221:24" pos:end="221:75">(<expr pos:start="221:25" pos:end="221:74"><call pos:start="221:25" pos:end="221:70"><name pos:start="221:25" pos:end="221:48">mpeg2_decode_block_intra</name><argument_list pos:start="221:49" pos:end="221:70">(<argument pos:start="221:50" pos:end="221:50"><expr pos:start="221:50" pos:end="221:50"><name pos:start="221:50" pos:end="221:50">s</name></expr></argument>, <argument pos:start="221:53" pos:end="221:66"><expr pos:start="221:53" pos:end="221:66"><operator pos:start="221:53" pos:end="221:53">*</operator><name pos:start="221:54" pos:end="221:66"><name pos:start="221:54" pos:end="221:54">s</name><operator pos:start="221:55" pos:end="221:56">-&gt;</operator><name pos:start="221:57" pos:end="221:63">pblocks</name><index pos:start="221:64" pos:end="221:66">[<expr pos:start="221:65" pos:end="221:65"><name pos:start="221:65" pos:end="221:65">i</name></expr>]</index></name></expr></argument>, <argument pos:start="221:69" pos:end="221:69"><expr pos:start="221:69" pos:end="221:69"><name pos:start="221:69" pos:end="221:69">i</name></expr></argument>)</argument_list></call> <operator pos:start="221:72" pos:end="221:72">&lt;</operator> <literal type="number" pos:start="221:74" pos:end="221:74">0</literal></expr>)</condition><block type="pseudo" pos:start="223:25" pos:end="223:34"><block_content pos:start="223:25" pos:end="223:34">

                        <return pos:start="223:25" pos:end="223:34">return <expr pos:start="223:32" pos:end="223:33"><operator pos:start="223:32" pos:end="223:32">-</operator><literal type="number" pos:start="223:33" pos:end="223:33">1</literal></expr>;</return></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="229:11" pos:end="239:9">else <block pos:start="229:16" pos:end="239:9">{<block_content pos:start="231:13" pos:end="237:13">

            <for pos:start="231:13" pos:end="237:13">for <control pos:start="231:17" pos:end="231:35">(<init pos:start="231:18" pos:end="231:23"><expr pos:start="231:18" pos:end="231:22"><name pos:start="231:18" pos:end="231:18">i</name> <operator pos:start="231:20" pos:end="231:20">=</operator> <literal type="number" pos:start="231:22" pos:end="231:22">0</literal></expr>;</init> <condition pos:start="231:25" pos:end="231:30"><expr pos:start="231:25" pos:end="231:29"><name pos:start="231:25" pos:end="231:25">i</name> <operator pos:start="231:27" pos:end="231:27">&lt;</operator> <literal type="number" pos:start="231:29" pos:end="231:29">6</literal></expr>;</condition> <incr pos:start="231:32" pos:end="231:34"><expr pos:start="231:32" pos:end="231:34"><name pos:start="231:32" pos:end="231:32">i</name><operator pos:start="231:33" pos:end="231:34">++</operator></expr></incr>)</control> <block pos:start="231:37" pos:end="237:13">{<block_content pos:start="233:17" pos:end="235:30">

                <if_stmt pos:start="233:17" pos:end="235:30"><if pos:start="233:17" pos:end="235:30">if <condition pos:start="233:20" pos:end="233:71">(<expr pos:start="233:21" pos:end="233:70"><call pos:start="233:21" pos:end="233:66"><name pos:start="233:21" pos:end="233:44">mpeg1_decode_block_intra</name><argument_list pos:start="233:45" pos:end="233:66">(<argument pos:start="233:46" pos:end="233:46"><expr pos:start="233:46" pos:end="233:46"><name pos:start="233:46" pos:end="233:46">s</name></expr></argument>, <argument pos:start="233:49" pos:end="233:62"><expr pos:start="233:49" pos:end="233:62"><operator pos:start="233:49" pos:end="233:49">*</operator><name pos:start="233:50" pos:end="233:62"><name pos:start="233:50" pos:end="233:50">s</name><operator pos:start="233:51" pos:end="233:52">-&gt;</operator><name pos:start="233:53" pos:end="233:59">pblocks</name><index pos:start="233:60" pos:end="233:62">[<expr pos:start="233:61" pos:end="233:61"><name pos:start="233:61" pos:end="233:61">i</name></expr>]</index></name></expr></argument>, <argument pos:start="233:65" pos:end="233:65"><expr pos:start="233:65" pos:end="233:65"><name pos:start="233:65" pos:end="233:65">i</name></expr></argument>)</argument_list></call> <operator pos:start="233:68" pos:end="233:68">&lt;</operator> <literal type="number" pos:start="233:70" pos:end="233:70">0</literal></expr>)</condition><block type="pseudo" pos:start="235:21" pos:end="235:30"><block_content pos:start="235:21" pos:end="235:30">

                    <return pos:start="235:21" pos:end="235:30">return <expr pos:start="235:28" pos:end="235:29"><operator pos:start="235:28" pos:end="235:28">-</operator><literal type="number" pos:start="235:29" pos:end="235:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="241:7" pos:end="749:5">else <block pos:start="241:12" pos:end="749:5">{<block_content pos:start="243:9" pos:end="747:9">

        <if_stmt pos:start="243:9" pos:end="601:9"><if pos:start="243:9" pos:end="289:9">if <condition pos:start="243:12" pos:end="243:38">(<expr pos:start="243:13" pos:end="243:37"><name pos:start="243:13" pos:end="243:19">mb_type</name> <operator pos:start="243:21" pos:end="243:21">&amp;</operator> <name pos:start="243:23" pos:end="243:37">MB_TYPE_ZERO_MV</name></expr>)</condition> <block pos:start="243:40" pos:end="289:9">{<block_content pos:start="245:13" pos:end="287:31">

            <expr_stmt pos:start="245:13" pos:end="245:42"><expr pos:start="245:13" pos:end="245:41"><call pos:start="245:13" pos:end="245:41"><name pos:start="245:13" pos:end="245:18">assert</name><argument_list pos:start="245:19" pos:end="245:41">(<argument pos:start="245:20" pos:end="245:40"><expr pos:start="245:20" pos:end="245:40"><name pos:start="245:20" pos:end="245:26">mb_type</name> <operator pos:start="245:28" pos:end="245:28">&amp;</operator> <name pos:start="245:30" pos:end="245:40">MB_TYPE_CBP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="249:13" pos:end="249:39"><expr pos:start="249:13" pos:end="249:38"><name pos:start="249:13" pos:end="249:21"><name pos:start="249:13" pos:end="249:13">s</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:21">mv_dir</name></name> <operator pos:start="249:23" pos:end="249:23">=</operator> <name pos:start="249:25" pos:end="249:38">MV_DIR_FORWARD</name></expr>;</expr_stmt>

            <if_stmt pos:start="251:13" pos:end="267:13"><if pos:start="251:13" pos:end="259:13">if <condition pos:start="251:16" pos:end="251:51">(<expr pos:start="251:17" pos:end="251:50"><name pos:start="251:17" pos:end="251:36"><name pos:start="251:17" pos:end="251:17">s</name><operator pos:start="251:18" pos:end="251:19">-&gt;</operator><name pos:start="251:20" pos:end="251:36">picture_structure</name></name> <operator pos:start="251:38" pos:end="251:39">==</operator> <name pos:start="251:41" pos:end="251:50">PICT_FRAME</name></expr>)</condition> <block pos:start="251:53" pos:end="259:13">{<block_content pos:start="253:17" pos:end="257:43">

                <if_stmt pos:start="253:17" pos:end="255:58"><if pos:start="253:17" pos:end="255:58">if <condition pos:start="253:20" pos:end="253:45">(<expr pos:start="253:21" pos:end="253:44"><operator pos:start="253:21" pos:end="253:21">!</operator><name pos:start="253:22" pos:end="253:44"><name pos:start="253:22" pos:end="253:22">s</name><operator pos:start="253:23" pos:end="253:24">-&gt;</operator><name pos:start="253:25" pos:end="253:44">frame_pred_frame_dct</name></name></expr>)</condition><block type="pseudo" pos:start="255:21" pos:end="255:58"><block_content pos:start="255:21" pos:end="255:58">

                    <expr_stmt pos:start="255:21" pos:end="255:58"><expr pos:start="255:21" pos:end="255:57"><name pos:start="255:21" pos:end="255:37"><name pos:start="255:21" pos:end="255:21">s</name><operator pos:start="255:22" pos:end="255:23">-&gt;</operator><name pos:start="255:24" pos:end="255:37">interlaced_dct</name></name> <operator pos:start="255:39" pos:end="255:39">=</operator> <call pos:start="255:41" pos:end="255:57"><name pos:start="255:41" pos:end="255:49">get_bits1</name><argument_list pos:start="255:50" pos:end="255:57">(<argument pos:start="255:51" pos:end="255:56"><expr pos:start="255:51" pos:end="255:56"><operator pos:start="255:51" pos:end="255:51">&amp;</operator><name pos:start="255:52" pos:end="255:56"><name pos:start="255:52" pos:end="255:52">s</name><operator pos:start="255:53" pos:end="255:54">-&gt;</operator><name pos:start="255:55" pos:end="255:56">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="257:17" pos:end="257:43"><expr pos:start="257:17" pos:end="257:42"><name pos:start="257:17" pos:end="257:26"><name pos:start="257:17" pos:end="257:17">s</name><operator pos:start="257:18" pos:end="257:19">-&gt;</operator><name pos:start="257:20" pos:end="257:26">mv_type</name></name> <operator pos:start="257:28" pos:end="257:28">=</operator> <name pos:start="257:30" pos:end="257:42">MV_TYPE_16X16</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="259:15" pos:end="267:13">else <block pos:start="259:20" pos:end="267:13">{<block_content pos:start="261:17" pos:end="265:65">

                <expr_stmt pos:start="261:17" pos:end="261:43"><expr pos:start="261:17" pos:end="261:42"><name pos:start="261:17" pos:end="261:26"><name pos:start="261:17" pos:end="261:17">s</name><operator pos:start="261:18" pos:end="261:19">-&gt;</operator><name pos:start="261:20" pos:end="261:26">mv_type</name></name> <operator pos:start="261:28" pos:end="261:28">=</operator> <name pos:start="261:30" pos:end="261:42">MV_TYPE_FIELD</name></expr>;</expr_stmt>

                <expr_stmt pos:start="263:17" pos:end="263:46"><expr pos:start="263:17" pos:end="263:45"><name pos:start="263:17" pos:end="263:23">mb_type</name> <operator pos:start="263:25" pos:end="263:26">|=</operator> <name pos:start="263:28" pos:end="263:45">MB_TYPE_INTERLACED</name></expr>;</expr_stmt>

                <expr_stmt pos:start="265:17" pos:end="265:65"><expr pos:start="265:17" pos:end="265:64"><name pos:start="265:17" pos:end="265:37"><name pos:start="265:17" pos:end="265:17">s</name><operator pos:start="265:18" pos:end="265:19">-&gt;</operator><name pos:start="265:20" pos:end="265:31">field_select</name><index pos:start="265:32" pos:end="265:34">[<expr pos:start="265:33" pos:end="265:33"><literal type="number" pos:start="265:33" pos:end="265:33">0</literal></expr>]</index><index pos:start="265:35" pos:end="265:37">[<expr pos:start="265:36" pos:end="265:36"><literal type="number" pos:start="265:36" pos:end="265:36">0</literal></expr>]</index></name> <operator pos:start="265:39" pos:end="265:39">=</operator> <name pos:start="265:41" pos:end="265:60"><name pos:start="265:41" pos:end="265:41">s</name><operator pos:start="265:42" pos:end="265:43">-&gt;</operator><name pos:start="265:44" pos:end="265:60">picture_structure</name></name> <operator pos:start="265:62" pos:end="265:62">-</operator> <literal type="number" pos:start="265:64" pos:end="265:64">1</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="271:13" pos:end="273:42"><if pos:start="271:13" pos:end="273:42">if <condition pos:start="271:16" pos:end="271:34">(<expr pos:start="271:17" pos:end="271:33"><call pos:start="271:17" pos:end="271:33"><name pos:start="271:17" pos:end="271:24">IS_QUANT</name><argument_list pos:start="271:25" pos:end="271:33">(<argument pos:start="271:26" pos:end="271:32"><expr pos:start="271:26" pos:end="271:32"><name pos:start="271:26" pos:end="271:32">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="273:17" pos:end="273:42"><block_content pos:start="273:17" pos:end="273:42">

                <expr_stmt pos:start="273:17" pos:end="273:42"><expr pos:start="273:17" pos:end="273:41"><name pos:start="273:17" pos:end="273:25"><name pos:start="273:17" pos:end="273:17">s</name><operator pos:start="273:18" pos:end="273:19">-&gt;</operator><name pos:start="273:20" pos:end="273:25">qscale</name></name> <operator pos:start="273:27" pos:end="273:27">=</operator> <call pos:start="273:29" pos:end="273:41"><name pos:start="273:29" pos:end="273:38">get_qscale</name><argument_list pos:start="273:39" pos:end="273:41">(<argument pos:start="273:40" pos:end="273:40"><expr pos:start="273:40" pos:end="273:40"><name pos:start="273:40" pos:end="273:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="277:13" pos:end="277:36"><expr pos:start="277:13" pos:end="277:35"><name pos:start="277:13" pos:end="277:31"><name pos:start="277:13" pos:end="277:13">s</name><operator pos:start="277:14" pos:end="277:15">-&gt;</operator><name pos:start="277:16" pos:end="277:22">last_mv</name><index pos:start="277:23" pos:end="277:25">[<expr pos:start="277:24" pos:end="277:24"><literal type="number" pos:start="277:24" pos:end="277:24">0</literal></expr>]</index><index pos:start="277:26" pos:end="277:28">[<expr pos:start="277:27" pos:end="277:27"><literal type="number" pos:start="277:27" pos:end="277:27">0</literal></expr>]</index><index pos:start="277:29" pos:end="277:31">[<expr pos:start="277:30" pos:end="277:30"><literal type="number" pos:start="277:30" pos:end="277:30">0</literal></expr>]</index></name> <operator pos:start="277:33" pos:end="277:33">=</operator> <literal type="number" pos:start="277:35" pos:end="277:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="279:13" pos:end="279:36"><expr pos:start="279:13" pos:end="279:35"><name pos:start="279:13" pos:end="279:31"><name pos:start="279:13" pos:end="279:13">s</name><operator pos:start="279:14" pos:end="279:15">-&gt;</operator><name pos:start="279:16" pos:end="279:22">last_mv</name><index pos:start="279:23" pos:end="279:25">[<expr pos:start="279:24" pos:end="279:24"><literal type="number" pos:start="279:24" pos:end="279:24">0</literal></expr>]</index><index pos:start="279:26" pos:end="279:28">[<expr pos:start="279:27" pos:end="279:27"><literal type="number" pos:start="279:27" pos:end="279:27">0</literal></expr>]</index><index pos:start="279:29" pos:end="279:31">[<expr pos:start="279:30" pos:end="279:30"><literal type="number" pos:start="279:30" pos:end="279:30">1</literal></expr>]</index></name> <operator pos:start="279:33" pos:end="279:33">=</operator> <literal type="number" pos:start="279:35" pos:end="279:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="281:13" pos:end="281:36"><expr pos:start="281:13" pos:end="281:35"><name pos:start="281:13" pos:end="281:31"><name pos:start="281:13" pos:end="281:13">s</name><operator pos:start="281:14" pos:end="281:15">-&gt;</operator><name pos:start="281:16" pos:end="281:22">last_mv</name><index pos:start="281:23" pos:end="281:25">[<expr pos:start="281:24" pos:end="281:24"><literal type="number" pos:start="281:24" pos:end="281:24">0</literal></expr>]</index><index pos:start="281:26" pos:end="281:28">[<expr pos:start="281:27" pos:end="281:27"><literal type="number" pos:start="281:27" pos:end="281:27">1</literal></expr>]</index><index pos:start="281:29" pos:end="281:31">[<expr pos:start="281:30" pos:end="281:30"><literal type="number" pos:start="281:30" pos:end="281:30">0</literal></expr>]</index></name> <operator pos:start="281:33" pos:end="281:33">=</operator> <literal type="number" pos:start="281:35" pos:end="281:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="283:13" pos:end="283:36"><expr pos:start="283:13" pos:end="283:35"><name pos:start="283:13" pos:end="283:31"><name pos:start="283:13" pos:end="283:13">s</name><operator pos:start="283:14" pos:end="283:15">-&gt;</operator><name pos:start="283:16" pos:end="283:22">last_mv</name><index pos:start="283:23" pos:end="283:25">[<expr pos:start="283:24" pos:end="283:24"><literal type="number" pos:start="283:24" pos:end="283:24">0</literal></expr>]</index><index pos:start="283:26" pos:end="283:28">[<expr pos:start="283:27" pos:end="283:27"><literal type="number" pos:start="283:27" pos:end="283:27">1</literal></expr>]</index><index pos:start="283:29" pos:end="283:31">[<expr pos:start="283:30" pos:end="283:30"><literal type="number" pos:start="283:30" pos:end="283:30">1</literal></expr>]</index></name> <operator pos:start="283:33" pos:end="283:33">=</operator> <literal type="number" pos:start="283:35" pos:end="283:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="285:13" pos:end="285:31"><expr pos:start="285:13" pos:end="285:30"><name pos:start="285:13" pos:end="285:26"><name pos:start="285:13" pos:end="285:13">s</name><operator pos:start="285:14" pos:end="285:15">-&gt;</operator><name pos:start="285:16" pos:end="285:17">mv</name><index pos:start="285:18" pos:end="285:20">[<expr pos:start="285:19" pos:end="285:19"><literal type="number" pos:start="285:19" pos:end="285:19">0</literal></expr>]</index><index pos:start="285:21" pos:end="285:23">[<expr pos:start="285:22" pos:end="285:22"><literal type="number" pos:start="285:22" pos:end="285:22">0</literal></expr>]</index><index pos:start="285:24" pos:end="285:26">[<expr pos:start="285:25" pos:end="285:25"><literal type="number" pos:start="285:25" pos:end="285:25">0</literal></expr>]</index></name> <operator pos:start="285:28" pos:end="285:28">=</operator> <literal type="number" pos:start="285:30" pos:end="285:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:31"><expr pos:start="287:13" pos:end="287:30"><name pos:start="287:13" pos:end="287:26"><name pos:start="287:13" pos:end="287:13">s</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:17">mv</name><index pos:start="287:18" pos:end="287:20">[<expr pos:start="287:19" pos:end="287:19"><literal type="number" pos:start="287:19" pos:end="287:19">0</literal></expr>]</index><index pos:start="287:21" pos:end="287:23">[<expr pos:start="287:22" pos:end="287:22"><literal type="number" pos:start="287:22" pos:end="287:22">0</literal></expr>]</index><index pos:start="287:24" pos:end="287:26">[<expr pos:start="287:25" pos:end="287:25"><literal type="number" pos:start="287:25" pos:end="287:25">1</literal></expr>]</index></name> <operator pos:start="287:28" pos:end="287:28">=</operator> <literal type="number" pos:start="287:30" pos:end="287:30">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="289:11" pos:end="601:9">else <block pos:start="289:16" pos:end="601:9">{<block_content pos:start="291:13" pos:end="599:13">

            <expr_stmt pos:start="291:13" pos:end="291:43"><expr pos:start="291:13" pos:end="291:42"><call pos:start="291:13" pos:end="291:42"><name pos:start="291:13" pos:end="291:18">assert</name><argument_list pos:start="291:19" pos:end="291:42">(<argument pos:start="291:20" pos:end="291:41"><expr pos:start="291:20" pos:end="291:41"><name pos:start="291:20" pos:end="291:26">mb_type</name> <operator pos:start="291:28" pos:end="291:28">&amp;</operator> <name pos:start="291:30" pos:end="291:41">MB_TYPE_L0L1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="293:13" pos:end="293:75">// FIXME decide if MBs in field pictures are MB_TYPE_INTERLACED</comment>

            <comment type="block" pos:start="295:13" pos:end="295:51">/* get additional motion vector type */</comment>

            <if_stmt pos:start="297:13" pos:end="309:13"><if pos:start="297:13" pos:end="299:39">if <condition pos:start="297:16" pos:end="297:40">(<expr pos:start="297:17" pos:end="297:39"><name pos:start="297:17" pos:end="297:39"><name pos:start="297:17" pos:end="297:17">s</name><operator pos:start="297:18" pos:end="297:19">-&gt;</operator><name pos:start="297:20" pos:end="297:39">frame_pred_frame_dct</name></name></expr>)</condition><block type="pseudo" pos:start="299:17" pos:end="299:39"><block_content pos:start="299:17" pos:end="299:39">

                <expr_stmt pos:start="299:17" pos:end="299:39"><expr pos:start="299:17" pos:end="299:38"><name pos:start="299:17" pos:end="299:27">motion_type</name> <operator pos:start="299:29" pos:end="299:29">=</operator> <name pos:start="299:31" pos:end="299:38">MT_FRAME</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="301:13" pos:end="309:13">else <block pos:start="301:18" pos:end="309:13">{<block_content pos:start="303:17" pos:end="307:58">

                <expr_stmt pos:start="303:17" pos:end="303:50"><expr pos:start="303:17" pos:end="303:49"><name pos:start="303:17" pos:end="303:27">motion_type</name> <operator pos:start="303:29" pos:end="303:29">=</operator> <call pos:start="303:31" pos:end="303:49"><name pos:start="303:31" pos:end="303:38">get_bits</name><argument_list pos:start="303:39" pos:end="303:49">(<argument pos:start="303:40" pos:end="303:45"><expr pos:start="303:40" pos:end="303:45"><operator pos:start="303:40" pos:end="303:40">&amp;</operator><name pos:start="303:41" pos:end="303:45"><name pos:start="303:41" pos:end="303:41">s</name><operator pos:start="303:42" pos:end="303:43">-&gt;</operator><name pos:start="303:44" pos:end="303:45">gb</name></name></expr></argument>, <argument pos:start="303:48" pos:end="303:48"><expr pos:start="303:48" pos:end="303:48"><literal type="number" pos:start="303:48" pos:end="303:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="305:17" pos:end="307:58"><if pos:start="305:17" pos:end="307:58">if <condition pos:start="305:20" pos:end="305:75">(<expr pos:start="305:21" pos:end="305:74"><name pos:start="305:21" pos:end="305:40"><name pos:start="305:21" pos:end="305:21">s</name><operator pos:start="305:22" pos:end="305:23">-&gt;</operator><name pos:start="305:24" pos:end="305:40">picture_structure</name></name> <operator pos:start="305:42" pos:end="305:43">==</operator> <name pos:start="305:45" pos:end="305:54">PICT_FRAME</name> <operator pos:start="305:56" pos:end="305:57">&amp;&amp;</operator> <call pos:start="305:59" pos:end="305:74"><name pos:start="305:59" pos:end="305:65">HAS_CBP</name><argument_list pos:start="305:66" pos:end="305:74">(<argument pos:start="305:67" pos:end="305:73"><expr pos:start="305:67" pos:end="305:73"><name pos:start="305:67" pos:end="305:73">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="307:21" pos:end="307:58"><block_content pos:start="307:21" pos:end="307:58">

                    <expr_stmt pos:start="307:21" pos:end="307:58"><expr pos:start="307:21" pos:end="307:57"><name pos:start="307:21" pos:end="307:37"><name pos:start="307:21" pos:end="307:21">s</name><operator pos:start="307:22" pos:end="307:23">-&gt;</operator><name pos:start="307:24" pos:end="307:37">interlaced_dct</name></name> <operator pos:start="307:39" pos:end="307:39">=</operator> <call pos:start="307:41" pos:end="307:57"><name pos:start="307:41" pos:end="307:49">get_bits1</name><argument_list pos:start="307:50" pos:end="307:57">(<argument pos:start="307:51" pos:end="307:56"><expr pos:start="307:51" pos:end="307:56"><operator pos:start="307:51" pos:end="307:51">&amp;</operator><name pos:start="307:52" pos:end="307:56"><name pos:start="307:52" pos:end="307:52">s</name><operator pos:start="307:53" pos:end="307:54">-&gt;</operator><name pos:start="307:55" pos:end="307:56">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="313:13" pos:end="315:42"><if pos:start="313:13" pos:end="315:42">if <condition pos:start="313:16" pos:end="313:34">(<expr pos:start="313:17" pos:end="313:33"><call pos:start="313:17" pos:end="313:33"><name pos:start="313:17" pos:end="313:24">IS_QUANT</name><argument_list pos:start="313:25" pos:end="313:33">(<argument pos:start="313:26" pos:end="313:32"><expr pos:start="313:26" pos:end="313:32"><name pos:start="313:26" pos:end="313:32">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="315:17" pos:end="315:42"><block_content pos:start="315:17" pos:end="315:42">

                <expr_stmt pos:start="315:17" pos:end="315:42"><expr pos:start="315:17" pos:end="315:41"><name pos:start="315:17" pos:end="315:25"><name pos:start="315:17" pos:end="315:17">s</name><operator pos:start="315:18" pos:end="315:19">-&gt;</operator><name pos:start="315:20" pos:end="315:25">qscale</name></name> <operator pos:start="315:27" pos:end="315:27">=</operator> <call pos:start="315:29" pos:end="315:41"><name pos:start="315:29" pos:end="315:38">get_qscale</name><argument_list pos:start="315:39" pos:end="315:41">(<argument pos:start="315:40" pos:end="315:40"><expr pos:start="315:40" pos:end="315:40"><name pos:start="315:40" pos:end="315:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="block" pos:start="319:13" pos:end="319:32">/* motion vectors */</comment>

            <expr_stmt pos:start="321:13" pos:end="321:44"><expr pos:start="321:13" pos:end="321:43"><name pos:start="321:13" pos:end="321:21"><name pos:start="321:13" pos:end="321:13">s</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:21">mv_dir</name></name> <operator pos:start="321:23" pos:end="321:23">=</operator> <operator pos:start="321:25" pos:end="321:25">(</operator><name pos:start="321:26" pos:end="321:32">mb_type</name> <operator pos:start="321:34" pos:end="321:35">&gt;&gt;</operator> <literal type="number" pos:start="321:37" pos:end="321:38">13</literal><operator pos:start="321:39" pos:end="321:39">)</operator> <operator pos:start="321:41" pos:end="321:41">&amp;</operator> <literal type="number" pos:start="321:43" pos:end="321:43">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:63"><expr pos:start="323:13" pos:end="323:62"><call pos:start="323:13" pos:end="323:62"><name pos:start="323:13" pos:end="323:19">av_dlog</name><argument_list pos:start="323:20" pos:end="323:62">(<argument pos:start="323:21" pos:end="323:28"><expr pos:start="323:21" pos:end="323:28"><name pos:start="323:21" pos:end="323:28"><name pos:start="323:21" pos:end="323:21">s</name><operator pos:start="323:22" pos:end="323:23">-&gt;</operator><name pos:start="323:24" pos:end="323:28">avctx</name></name></expr></argument>, <argument pos:start="323:31" pos:end="323:48"><expr pos:start="323:31" pos:end="323:48"><literal type="string" pos:start="323:31" pos:end="323:48">"motion_type=%d\n"</literal></expr></argument>, <argument pos:start="323:51" pos:end="323:61"><expr pos:start="323:51" pos:end="323:61"><name pos:start="323:51" pos:end="323:61">motion_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="325:13" pos:end="599:13">switch <condition pos:start="325:20" pos:end="325:32">(<expr pos:start="325:21" pos:end="325:31"><name pos:start="325:21" pos:end="325:31">motion_type</name></expr>)</condition> <block pos:start="325:34" pos:end="599:13">{<block_content pos:start="327:13" pos:end="597:26">

            <case pos:start="327:13" pos:end="327:26">case <expr pos:start="327:18" pos:end="327:25"><name pos:start="327:18" pos:end="327:25">MT_FRAME</name></expr>:</case> <comment type="block" pos:start="327:28" pos:end="327:43">/* or MT_16X8 */</comment>

                <if_stmt pos:start="329:17" pos:end="397:17"><if pos:start="329:17" pos:end="363:17">if <condition pos:start="329:20" pos:end="329:55">(<expr pos:start="329:21" pos:end="329:54"><name pos:start="329:21" pos:end="329:40"><name pos:start="329:21" pos:end="329:21">s</name><operator pos:start="329:22" pos:end="329:23">-&gt;</operator><name pos:start="329:24" pos:end="329:40">picture_structure</name></name> <operator pos:start="329:42" pos:end="329:43">==</operator> <name pos:start="329:45" pos:end="329:54">PICT_FRAME</name></expr>)</condition> <block pos:start="329:57" pos:end="363:17">{<block_content pos:start="331:21" pos:end="361:21">

                    <expr_stmt pos:start="331:21" pos:end="331:45"><expr pos:start="331:21" pos:end="331:44"><name pos:start="331:21" pos:end="331:27">mb_type</name> <operator pos:start="331:29" pos:end="331:30">|=</operator> <name pos:start="331:32" pos:end="331:44">MB_TYPE_16x16</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="333:21" pos:end="333:47"><expr pos:start="333:21" pos:end="333:46"><name pos:start="333:21" pos:end="333:30"><name pos:start="333:21" pos:end="333:21">s</name><operator pos:start="333:22" pos:end="333:23">-&gt;</operator><name pos:start="333:24" pos:end="333:30">mv_type</name></name> <operator pos:start="333:32" pos:end="333:32">=</operator> <name pos:start="333:34" pos:end="333:46">MV_TYPE_16X16</name></expr>;</expr_stmt>

                    <for pos:start="335:21" pos:end="361:21">for <control pos:start="335:25" pos:end="335:43">(<init pos:start="335:26" pos:end="335:31"><expr pos:start="335:26" pos:end="335:30"><name pos:start="335:26" pos:end="335:26">i</name> <operator pos:start="335:28" pos:end="335:28">=</operator> <literal type="number" pos:start="335:30" pos:end="335:30">0</literal></expr>;</init> <condition pos:start="335:33" pos:end="335:38"><expr pos:start="335:33" pos:end="335:37"><name pos:start="335:33" pos:end="335:33">i</name> <operator pos:start="335:35" pos:end="335:35">&lt;</operator> <literal type="number" pos:start="335:37" pos:end="335:37">2</literal></expr>;</condition> <incr pos:start="335:40" pos:end="335:42"><expr pos:start="335:40" pos:end="335:42"><name pos:start="335:40" pos:end="335:40">i</name><operator pos:start="335:41" pos:end="335:42">++</operator></expr></incr>)</control> <block pos:start="335:45" pos:end="361:21">{<block_content pos:start="337:25" pos:end="359:25">

                        <if_stmt pos:start="337:25" pos:end="359:25"><if pos:start="337:25" pos:end="359:25">if <condition pos:start="337:28" pos:end="337:50">(<expr pos:start="337:29" pos:end="337:49"><call pos:start="337:29" pos:end="337:49"><name pos:start="337:29" pos:end="337:37">USES_LIST</name><argument_list pos:start="337:38" pos:end="337:49">(<argument pos:start="337:39" pos:end="337:45"><expr pos:start="337:39" pos:end="337:45"><name pos:start="337:39" pos:end="337:45">mb_type</name></expr></argument>, <argument pos:start="337:48" pos:end="337:48"><expr pos:start="337:48" pos:end="337:48"><name pos:start="337:48" pos:end="337:48">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="337:52" pos:end="359:25">{<block_content pos:start="341:29" pos:end="357:29">

                            <comment type="block" pos:start="339:29" pos:end="339:42">/* MT_FRAME */</comment>

                            <expr_stmt pos:start="341:29" pos:end="343:97"><expr pos:start="341:29" pos:end="343:96"><name pos:start="341:29" pos:end="341:42"><name pos:start="341:29" pos:end="341:29">s</name><operator pos:start="341:30" pos:end="341:31">-&gt;</operator><name pos:start="341:32" pos:end="341:33">mv</name><index pos:start="341:34" pos:end="341:36">[<expr pos:start="341:35" pos:end="341:35"><name pos:start="341:35" pos:end="341:35">i</name></expr>]</index><index pos:start="341:37" pos:end="341:39">[<expr pos:start="341:38" pos:end="341:38"><literal type="number" pos:start="341:38" pos:end="341:38">0</literal></expr>]</index><index pos:start="341:40" pos:end="341:42">[<expr pos:start="341:41" pos:end="341:41"><literal type="number" pos:start="341:41" pos:end="341:41">0</literal></expr>]</index></name><operator pos:start="341:43" pos:end="341:43">=</operator> <name pos:start="341:45" pos:end="341:63"><name pos:start="341:45" pos:end="341:45">s</name><operator pos:start="341:46" pos:end="341:47">-&gt;</operator><name pos:start="341:48" pos:end="341:54">last_mv</name><index pos:start="341:55" pos:end="341:57">[<expr pos:start="341:56" pos:end="341:56"><name pos:start="341:56" pos:end="341:56">i</name></expr>]</index><index pos:start="341:58" pos:end="341:60">[<expr pos:start="341:59" pos:end="341:59"><literal type="number" pos:start="341:59" pos:end="341:59">0</literal></expr>]</index><index pos:start="341:61" pos:end="341:63">[<expr pos:start="341:62" pos:end="341:62"><literal type="number" pos:start="341:62" pos:end="341:62">0</literal></expr>]</index></name><operator pos:start="341:64" pos:end="341:64">=</operator> <name pos:start="341:66" pos:end="341:84"><name pos:start="341:66" pos:end="341:66">s</name><operator pos:start="341:67" pos:end="341:68">-&gt;</operator><name pos:start="341:69" pos:end="341:75">last_mv</name><index pos:start="341:76" pos:end="341:78">[<expr pos:start="341:77" pos:end="341:77"><name pos:start="341:77" pos:end="341:77">i</name></expr>]</index><index pos:start="341:79" pos:end="341:81">[<expr pos:start="341:80" pos:end="341:80"><literal type="number" pos:start="341:80" pos:end="341:80">1</literal></expr>]</index><index pos:start="341:82" pos:end="341:84">[<expr pos:start="341:83" pos:end="341:83"><literal type="number" pos:start="341:83" pos:end="341:83">0</literal></expr>]</index></name> <operator pos:start="341:86" pos:end="341:86">=</operator>

                                <call pos:start="343:33" pos:end="343:96"><name pos:start="343:33" pos:end="343:50">mpeg_decode_motion</name><argument_list pos:start="343:51" pos:end="343:96">(<argument pos:start="343:52" pos:end="343:52"><expr pos:start="343:52" pos:end="343:52"><name pos:start="343:52" pos:end="343:52">s</name></expr></argument>, <argument pos:start="343:55" pos:end="343:74"><expr pos:start="343:55" pos:end="343:74"><name pos:start="343:55" pos:end="343:74"><name pos:start="343:55" pos:end="343:55">s</name><operator pos:start="343:56" pos:end="343:57">-&gt;</operator><name pos:start="343:58" pos:end="343:68">mpeg_f_code</name><index pos:start="343:69" pos:end="343:71">[<expr pos:start="343:70" pos:end="343:70"><name pos:start="343:70" pos:end="343:70">i</name></expr>]</index><index pos:start="343:72" pos:end="343:74">[<expr pos:start="343:73" pos:end="343:73"><literal type="number" pos:start="343:73" pos:end="343:73">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="343:77" pos:end="343:95"><expr pos:start="343:77" pos:end="343:95"><name pos:start="343:77" pos:end="343:95"><name pos:start="343:77" pos:end="343:77">s</name><operator pos:start="343:78" pos:end="343:79">-&gt;</operator><name pos:start="343:80" pos:end="343:86">last_mv</name><index pos:start="343:87" pos:end="343:89">[<expr pos:start="343:88" pos:end="343:88"><name pos:start="343:88" pos:end="343:88">i</name></expr>]</index><index pos:start="343:90" pos:end="343:92">[<expr pos:start="343:91" pos:end="343:91"><literal type="number" pos:start="343:91" pos:end="343:91">0</literal></expr>]</index><index pos:start="343:93" pos:end="343:95">[<expr pos:start="343:94" pos:end="343:94"><literal type="number" pos:start="343:94" pos:end="343:94">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="345:29" pos:end="347:97"><expr pos:start="345:29" pos:end="347:96"><name pos:start="345:29" pos:end="345:42"><name pos:start="345:29" pos:end="345:29">s</name><operator pos:start="345:30" pos:end="345:31">-&gt;</operator><name pos:start="345:32" pos:end="345:33">mv</name><index pos:start="345:34" pos:end="345:36">[<expr pos:start="345:35" pos:end="345:35"><name pos:start="345:35" pos:end="345:35">i</name></expr>]</index><index pos:start="345:37" pos:end="345:39">[<expr pos:start="345:38" pos:end="345:38"><literal type="number" pos:start="345:38" pos:end="345:38">0</literal></expr>]</index><index pos:start="345:40" pos:end="345:42">[<expr pos:start="345:41" pos:end="345:41"><literal type="number" pos:start="345:41" pos:end="345:41">1</literal></expr>]</index></name><operator pos:start="345:43" pos:end="345:43">=</operator> <name pos:start="345:45" pos:end="345:63"><name pos:start="345:45" pos:end="345:45">s</name><operator pos:start="345:46" pos:end="345:47">-&gt;</operator><name pos:start="345:48" pos:end="345:54">last_mv</name><index pos:start="345:55" pos:end="345:57">[<expr pos:start="345:56" pos:end="345:56"><name pos:start="345:56" pos:end="345:56">i</name></expr>]</index><index pos:start="345:58" pos:end="345:60">[<expr pos:start="345:59" pos:end="345:59"><literal type="number" pos:start="345:59" pos:end="345:59">0</literal></expr>]</index><index pos:start="345:61" pos:end="345:63">[<expr pos:start="345:62" pos:end="345:62"><literal type="number" pos:start="345:62" pos:end="345:62">1</literal></expr>]</index></name><operator pos:start="345:64" pos:end="345:64">=</operator> <name pos:start="345:66" pos:end="345:84"><name pos:start="345:66" pos:end="345:66">s</name><operator pos:start="345:67" pos:end="345:68">-&gt;</operator><name pos:start="345:69" pos:end="345:75">last_mv</name><index pos:start="345:76" pos:end="345:78">[<expr pos:start="345:77" pos:end="345:77"><name pos:start="345:77" pos:end="345:77">i</name></expr>]</index><index pos:start="345:79" pos:end="345:81">[<expr pos:start="345:80" pos:end="345:80"><literal type="number" pos:start="345:80" pos:end="345:80">1</literal></expr>]</index><index pos:start="345:82" pos:end="345:84">[<expr pos:start="345:83" pos:end="345:83"><literal type="number" pos:start="345:83" pos:end="345:83">1</literal></expr>]</index></name> <operator pos:start="345:86" pos:end="345:86">=</operator>

                                <call pos:start="347:33" pos:end="347:96"><name pos:start="347:33" pos:end="347:50">mpeg_decode_motion</name><argument_list pos:start="347:51" pos:end="347:96">(<argument pos:start="347:52" pos:end="347:52"><expr pos:start="347:52" pos:end="347:52"><name pos:start="347:52" pos:end="347:52">s</name></expr></argument>, <argument pos:start="347:55" pos:end="347:74"><expr pos:start="347:55" pos:end="347:74"><name pos:start="347:55" pos:end="347:74"><name pos:start="347:55" pos:end="347:55">s</name><operator pos:start="347:56" pos:end="347:57">-&gt;</operator><name pos:start="347:58" pos:end="347:68">mpeg_f_code</name><index pos:start="347:69" pos:end="347:71">[<expr pos:start="347:70" pos:end="347:70"><name pos:start="347:70" pos:end="347:70">i</name></expr>]</index><index pos:start="347:72" pos:end="347:74">[<expr pos:start="347:73" pos:end="347:73"><literal type="number" pos:start="347:73" pos:end="347:73">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="347:77" pos:end="347:95"><expr pos:start="347:77" pos:end="347:95"><name pos:start="347:77" pos:end="347:95"><name pos:start="347:77" pos:end="347:77">s</name><operator pos:start="347:78" pos:end="347:79">-&gt;</operator><name pos:start="347:80" pos:end="347:86">last_mv</name><index pos:start="347:87" pos:end="347:89">[<expr pos:start="347:88" pos:end="347:88"><name pos:start="347:88" pos:end="347:88">i</name></expr>]</index><index pos:start="347:90" pos:end="347:92">[<expr pos:start="347:91" pos:end="347:91"><literal type="number" pos:start="347:91" pos:end="347:91">0</literal></expr>]</index><index pos:start="347:93" pos:end="347:95">[<expr pos:start="347:94" pos:end="347:94"><literal type="number" pos:start="347:94" pos:end="347:94">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <comment type="block" pos:start="349:29" pos:end="349:59">/* full_pel: only for MPEG-1 */</comment>

                            <if_stmt pos:start="351:29" pos:end="357:29"><if pos:start="351:29" pos:end="357:29">if <condition pos:start="351:32" pos:end="351:47">(<expr pos:start="351:33" pos:end="351:46"><name pos:start="351:33" pos:end="351:46"><name pos:start="351:33" pos:end="351:33">s</name><operator pos:start="351:34" pos:end="351:35">-&gt;</operator><name pos:start="351:36" pos:end="351:43">full_pel</name><index pos:start="351:44" pos:end="351:46">[<expr pos:start="351:45" pos:end="351:45"><name pos:start="351:45" pos:end="351:45">i</name></expr>]</index></name></expr>)</condition> <block pos:start="351:49" pos:end="357:29">{<block_content pos:start="353:33" pos:end="355:53">

                                <expr_stmt pos:start="353:33" pos:end="353:53"><expr pos:start="353:33" pos:end="353:52"><name pos:start="353:33" pos:end="353:46"><name pos:start="353:33" pos:end="353:33">s</name><operator pos:start="353:34" pos:end="353:35">-&gt;</operator><name pos:start="353:36" pos:end="353:37">mv</name><index pos:start="353:38" pos:end="353:40">[<expr pos:start="353:39" pos:end="353:39"><name pos:start="353:39" pos:end="353:39">i</name></expr>]</index><index pos:start="353:41" pos:end="353:43">[<expr pos:start="353:42" pos:end="353:42"><literal type="number" pos:start="353:42" pos:end="353:42">0</literal></expr>]</index><index pos:start="353:44" pos:end="353:46">[<expr pos:start="353:45" pos:end="353:45"><literal type="number" pos:start="353:45" pos:end="353:45">0</literal></expr>]</index></name> <operator pos:start="353:48" pos:end="353:50">&lt;&lt;=</operator> <literal type="number" pos:start="353:52" pos:end="353:52">1</literal></expr>;</expr_stmt>

                                <expr_stmt pos:start="355:33" pos:end="355:53"><expr pos:start="355:33" pos:end="355:52"><name pos:start="355:33" pos:end="355:46"><name pos:start="355:33" pos:end="355:33">s</name><operator pos:start="355:34" pos:end="355:35">-&gt;</operator><name pos:start="355:36" pos:end="355:37">mv</name><index pos:start="355:38" pos:end="355:40">[<expr pos:start="355:39" pos:end="355:39"><name pos:start="355:39" pos:end="355:39">i</name></expr>]</index><index pos:start="355:41" pos:end="355:43">[<expr pos:start="355:42" pos:end="355:42"><literal type="number" pos:start="355:42" pos:end="355:42">0</literal></expr>]</index><index pos:start="355:44" pos:end="355:46">[<expr pos:start="355:45" pos:end="355:45"><literal type="number" pos:start="355:45" pos:end="355:45">1</literal></expr>]</index></name> <operator pos:start="355:48" pos:end="355:50">&lt;&lt;=</operator> <literal type="number" pos:start="355:52" pos:end="355:52">1</literal></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="363:19" pos:end="397:17">else <block pos:start="363:24" pos:end="397:17">{<block_content pos:start="365:21" pos:end="395:21">

                    <expr_stmt pos:start="365:21" pos:end="365:65"><expr pos:start="365:21" pos:end="365:64"><name pos:start="365:21" pos:end="365:27">mb_type</name> <operator pos:start="365:29" pos:end="365:30">|=</operator> <name pos:start="365:32" pos:end="365:43">MB_TYPE_16x8</name> <operator pos:start="365:45" pos:end="365:45">|</operator> <name pos:start="365:47" pos:end="365:64">MB_TYPE_INTERLACED</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="367:21" pos:end="367:46"><expr pos:start="367:21" pos:end="367:45"><name pos:start="367:21" pos:end="367:30"><name pos:start="367:21" pos:end="367:21">s</name><operator pos:start="367:22" pos:end="367:23">-&gt;</operator><name pos:start="367:24" pos:end="367:30">mv_type</name></name> <operator pos:start="367:32" pos:end="367:32">=</operator> <name pos:start="367:34" pos:end="367:45">MV_TYPE_16X8</name></expr>;</expr_stmt>

                    <for pos:start="369:21" pos:end="395:21">for <control pos:start="369:25" pos:end="369:43">(<init pos:start="369:26" pos:end="369:31"><expr pos:start="369:26" pos:end="369:30"><name pos:start="369:26" pos:end="369:26">i</name> <operator pos:start="369:28" pos:end="369:28">=</operator> <literal type="number" pos:start="369:30" pos:end="369:30">0</literal></expr>;</init> <condition pos:start="369:33" pos:end="369:38"><expr pos:start="369:33" pos:end="369:37"><name pos:start="369:33" pos:end="369:33">i</name> <operator pos:start="369:35" pos:end="369:35">&lt;</operator> <literal type="number" pos:start="369:37" pos:end="369:37">2</literal></expr>;</condition> <incr pos:start="369:40" pos:end="369:42"><expr pos:start="369:40" pos:end="369:42"><name pos:start="369:40" pos:end="369:40">i</name><operator pos:start="369:41" pos:end="369:42">++</operator></expr></incr>)</control> <block pos:start="369:45" pos:end="395:21">{<block_content pos:start="371:25" pos:end="393:25">

                        <if_stmt pos:start="371:25" pos:end="393:25"><if pos:start="371:25" pos:end="393:25">if <condition pos:start="371:28" pos:end="371:50">(<expr pos:start="371:29" pos:end="371:49"><call pos:start="371:29" pos:end="371:49"><name pos:start="371:29" pos:end="371:37">USES_LIST</name><argument_list pos:start="371:38" pos:end="371:49">(<argument pos:start="371:39" pos:end="371:45"><expr pos:start="371:39" pos:end="371:45"><name pos:start="371:39" pos:end="371:45">mb_type</name></expr></argument>, <argument pos:start="371:48" pos:end="371:48"><expr pos:start="371:48" pos:end="371:48"><name pos:start="371:48" pos:end="371:48">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="371:52" pos:end="393:25">{<block_content pos:start="375:29" pos:end="391:29">

                            <comment type="block" pos:start="373:29" pos:end="373:41">/* MT_16X8 */</comment>

                            <for pos:start="375:29" pos:end="391:29">for <control pos:start="375:33" pos:end="375:51">(<init pos:start="375:34" pos:end="375:39"><expr pos:start="375:34" pos:end="375:38"><name pos:start="375:34" pos:end="375:34">j</name> <operator pos:start="375:36" pos:end="375:36">=</operator> <literal type="number" pos:start="375:38" pos:end="375:38">0</literal></expr>;</init> <condition pos:start="375:41" pos:end="375:46"><expr pos:start="375:41" pos:end="375:45"><name pos:start="375:41" pos:end="375:41">j</name> <operator pos:start="375:43" pos:end="375:43">&lt;</operator> <literal type="number" pos:start="375:45" pos:end="375:45">2</literal></expr>;</condition> <incr pos:start="375:48" pos:end="375:50"><expr pos:start="375:48" pos:end="375:50"><name pos:start="375:48" pos:end="375:48">j</name><operator pos:start="375:49" pos:end="375:50">++</operator></expr></incr>)</control> <block pos:start="375:53" pos:end="391:29">{<block_content pos:start="377:33" pos:end="389:33">

                                <expr_stmt pos:start="377:33" pos:end="377:74"><expr pos:start="377:33" pos:end="377:73"><name pos:start="377:33" pos:end="377:53"><name pos:start="377:33" pos:end="377:33">s</name><operator pos:start="377:34" pos:end="377:35">-&gt;</operator><name pos:start="377:36" pos:end="377:47">field_select</name><index pos:start="377:48" pos:end="377:50">[<expr pos:start="377:49" pos:end="377:49"><name pos:start="377:49" pos:end="377:49">i</name></expr>]</index><index pos:start="377:51" pos:end="377:53">[<expr pos:start="377:52" pos:end="377:52"><name pos:start="377:52" pos:end="377:52">j</name></expr>]</index></name> <operator pos:start="377:55" pos:end="377:55">=</operator> <call pos:start="377:57" pos:end="377:73"><name pos:start="377:57" pos:end="377:65">get_bits1</name><argument_list pos:start="377:66" pos:end="377:73">(<argument pos:start="377:67" pos:end="377:72"><expr pos:start="377:67" pos:end="377:72"><operator pos:start="377:67" pos:end="377:67">&amp;</operator><name pos:start="377:68" pos:end="377:72"><name pos:start="377:68" pos:end="377:68">s</name><operator pos:start="377:69" pos:end="377:70">-&gt;</operator><name pos:start="377:71" pos:end="377:72">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <for pos:start="379:33" pos:end="389:33">for <control pos:start="379:37" pos:end="379:55">(<init pos:start="379:38" pos:end="379:43"><expr pos:start="379:38" pos:end="379:42"><name pos:start="379:38" pos:end="379:38">k</name> <operator pos:start="379:40" pos:end="379:40">=</operator> <literal type="number" pos:start="379:42" pos:end="379:42">0</literal></expr>;</init> <condition pos:start="379:45" pos:end="379:50"><expr pos:start="379:45" pos:end="379:49"><name pos:start="379:45" pos:end="379:45">k</name> <operator pos:start="379:47" pos:end="379:47">&lt;</operator> <literal type="number" pos:start="379:49" pos:end="379:49">2</literal></expr>;</condition> <incr pos:start="379:52" pos:end="379:54"><expr pos:start="379:52" pos:end="379:54"><name pos:start="379:52" pos:end="379:52">k</name><operator pos:start="379:53" pos:end="379:54">++</operator></expr></incr>)</control> <block pos:start="379:57" pos:end="389:33">{<block_content pos:start="381:37" pos:end="387:62">

                                    <expr_stmt pos:start="381:37" pos:end="383:82"><expr pos:start="381:37" pos:end="383:81"><name pos:start="381:37" pos:end="381:39">val</name> <operator pos:start="381:41" pos:end="381:41">=</operator> <call pos:start="381:43" pos:end="383:81"><name pos:start="381:43" pos:end="381:60">mpeg_decode_motion</name><argument_list pos:start="381:61" pos:end="383:81">(<argument pos:start="381:62" pos:end="381:62"><expr pos:start="381:62" pos:end="381:62"><name pos:start="381:62" pos:end="381:62">s</name></expr></argument>, <argument pos:start="381:65" pos:end="381:84"><expr pos:start="381:65" pos:end="381:84"><name pos:start="381:65" pos:end="381:84"><name pos:start="381:65" pos:end="381:65">s</name><operator pos:start="381:66" pos:end="381:67">-&gt;</operator><name pos:start="381:68" pos:end="381:78">mpeg_f_code</name><index pos:start="381:79" pos:end="381:81">[<expr pos:start="381:80" pos:end="381:80"><name pos:start="381:80" pos:end="381:80">i</name></expr>]</index><index pos:start="381:82" pos:end="381:84">[<expr pos:start="381:83" pos:end="381:83"><name pos:start="381:83" pos:end="381:83">k</name></expr>]</index></name></expr></argument>,

                                                             <argument pos:start="383:62" pos:end="383:80"><expr pos:start="383:62" pos:end="383:80"><name pos:start="383:62" pos:end="383:80"><name pos:start="383:62" pos:end="383:62">s</name><operator pos:start="383:63" pos:end="383:64">-&gt;</operator><name pos:start="383:65" pos:end="383:71">last_mv</name><index pos:start="383:72" pos:end="383:74">[<expr pos:start="383:73" pos:end="383:73"><name pos:start="383:73" pos:end="383:73">i</name></expr>]</index><index pos:start="383:75" pos:end="383:77">[<expr pos:start="383:76" pos:end="383:76"><name pos:start="383:76" pos:end="383:76">j</name></expr>]</index><index pos:start="383:78" pos:end="383:80">[<expr pos:start="383:79" pos:end="383:79"><name pos:start="383:79" pos:end="383:79">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="385:37" pos:end="385:62"><expr pos:start="385:37" pos:end="385:61"><name pos:start="385:37" pos:end="385:55"><name pos:start="385:37" pos:end="385:37">s</name><operator pos:start="385:38" pos:end="385:39">-&gt;</operator><name pos:start="385:40" pos:end="385:46">last_mv</name><index pos:start="385:47" pos:end="385:49">[<expr pos:start="385:48" pos:end="385:48"><name pos:start="385:48" pos:end="385:48">i</name></expr>]</index><index pos:start="385:50" pos:end="385:52">[<expr pos:start="385:51" pos:end="385:51"><name pos:start="385:51" pos:end="385:51">j</name></expr>]</index><index pos:start="385:53" pos:end="385:55">[<expr pos:start="385:54" pos:end="385:54"><name pos:start="385:54" pos:end="385:54">k</name></expr>]</index></name> <operator pos:start="385:57" pos:end="385:57">=</operator> <name pos:start="385:59" pos:end="385:61">val</name></expr>;</expr_stmt>

                                    <expr_stmt pos:start="387:37" pos:end="387:62"><expr pos:start="387:37" pos:end="387:61"><name pos:start="387:37" pos:end="387:50"><name pos:start="387:37" pos:end="387:37">s</name><operator pos:start="387:38" pos:end="387:39">-&gt;</operator><name pos:start="387:40" pos:end="387:41">mv</name><index pos:start="387:42" pos:end="387:44">[<expr pos:start="387:43" pos:end="387:43"><name pos:start="387:43" pos:end="387:43">i</name></expr>]</index><index pos:start="387:45" pos:end="387:47">[<expr pos:start="387:46" pos:end="387:46"><name pos:start="387:46" pos:end="387:46">j</name></expr>]</index><index pos:start="387:48" pos:end="387:50">[<expr pos:start="387:49" pos:end="387:49"><name pos:start="387:49" pos:end="387:49">k</name></expr>]</index></name>      <operator pos:start="387:57" pos:end="387:57">=</operator> <name pos:start="387:59" pos:end="387:61">val</name></expr>;</expr_stmt>

                                </block_content>}</block></for>

                            </block_content>}</block></for>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

                <break pos:start="399:17" pos:end="399:22">break;</break>

            <case pos:start="401:13" pos:end="401:26">case <expr pos:start="401:18" pos:end="401:25"><name pos:start="401:18" pos:end="401:25">MT_FIELD</name></expr>:</case>

                <if_stmt pos:start="403:17" pos:end="409:17"><if pos:start="403:17" pos:end="409:17">if<condition pos:start="403:19" pos:end="403:43">(<expr pos:start="403:20" pos:end="403:42"><name pos:start="403:20" pos:end="403:42"><name pos:start="403:20" pos:end="403:20">s</name><operator pos:start="403:21" pos:end="403:22">-&gt;</operator><name pos:start="403:23" pos:end="403:42">progressive_sequence</name></name></expr>)</condition><block pos:start="403:44" pos:end="409:17">{<block_content pos:start="405:21" pos:end="407:30">

                    <expr_stmt pos:start="405:21" pos:end="405:89"><expr pos:start="405:21" pos:end="405:88"><call pos:start="405:21" pos:end="405:88"><name pos:start="405:21" pos:end="405:26">av_log</name><argument_list pos:start="405:27" pos:end="405:88">(<argument pos:start="405:28" pos:end="405:35"><expr pos:start="405:28" pos:end="405:35"><name pos:start="405:28" pos:end="405:35"><name pos:start="405:28" pos:end="405:28">s</name><operator pos:start="405:29" pos:end="405:30">-&gt;</operator><name pos:start="405:31" pos:end="405:35">avctx</name></name></expr></argument>, <argument pos:start="405:38" pos:end="405:49"><expr pos:start="405:38" pos:end="405:49"><name pos:start="405:38" pos:end="405:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="405:52" pos:end="405:87"><expr pos:start="405:52" pos:end="405:87"><literal type="string" pos:start="405:52" pos:end="405:87">"MT_FIELD in progressive_sequence\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="407:21" pos:end="407:30">return <expr pos:start="407:28" pos:end="407:29"><operator pos:start="407:28" pos:end="407:28">-</operator><literal type="number" pos:start="407:29" pos:end="407:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="411:17" pos:end="411:43"><expr pos:start="411:17" pos:end="411:42"><name pos:start="411:17" pos:end="411:26"><name pos:start="411:17" pos:end="411:17">s</name><operator pos:start="411:18" pos:end="411:19">-&gt;</operator><name pos:start="411:20" pos:end="411:26">mv_type</name></name> <operator pos:start="411:28" pos:end="411:28">=</operator> <name pos:start="411:30" pos:end="411:42">MV_TYPE_FIELD</name></expr>;</expr_stmt>

                <if_stmt pos:start="413:17" pos:end="481:17"><if pos:start="413:17" pos:end="451:17">if <condition pos:start="413:20" pos:end="413:55">(<expr pos:start="413:21" pos:end="413:54"><name pos:start="413:21" pos:end="413:40"><name pos:start="413:21" pos:end="413:21">s</name><operator pos:start="413:22" pos:end="413:23">-&gt;</operator><name pos:start="413:24" pos:end="413:40">picture_structure</name></name> <operator pos:start="413:42" pos:end="413:43">==</operator> <name pos:start="413:45" pos:end="413:54">PICT_FRAME</name></expr>)</condition> <block pos:start="413:57" pos:end="451:17">{<block_content pos:start="415:21" pos:end="449:21">

                    <expr_stmt pos:start="415:21" pos:end="415:65"><expr pos:start="415:21" pos:end="415:64"><name pos:start="415:21" pos:end="415:27">mb_type</name> <operator pos:start="415:29" pos:end="415:30">|=</operator> <name pos:start="415:32" pos:end="415:43">MB_TYPE_16x8</name> <operator pos:start="415:45" pos:end="415:45">|</operator> <name pos:start="415:47" pos:end="415:64">MB_TYPE_INTERLACED</name></expr>;</expr_stmt>

                    <for pos:start="417:21" pos:end="449:21">for <control pos:start="417:25" pos:end="417:43">(<init pos:start="417:26" pos:end="417:31"><expr pos:start="417:26" pos:end="417:30"><name pos:start="417:26" pos:end="417:26">i</name> <operator pos:start="417:28" pos:end="417:28">=</operator> <literal type="number" pos:start="417:30" pos:end="417:30">0</literal></expr>;</init> <condition pos:start="417:33" pos:end="417:38"><expr pos:start="417:33" pos:end="417:37"><name pos:start="417:33" pos:end="417:33">i</name> <operator pos:start="417:35" pos:end="417:35">&lt;</operator> <literal type="number" pos:start="417:37" pos:end="417:37">2</literal></expr>;</condition> <incr pos:start="417:40" pos:end="417:42"><expr pos:start="417:40" pos:end="417:42"><name pos:start="417:40" pos:end="417:40">i</name><operator pos:start="417:41" pos:end="417:42">++</operator></expr></incr>)</control> <block pos:start="417:45" pos:end="449:21">{<block_content pos:start="419:25" pos:end="447:25">

                        <if_stmt pos:start="419:25" pos:end="447:25"><if pos:start="419:25" pos:end="447:25">if <condition pos:start="419:28" pos:end="419:50">(<expr pos:start="419:29" pos:end="419:49"><call pos:start="419:29" pos:end="419:49"><name pos:start="419:29" pos:end="419:37">USES_LIST</name><argument_list pos:start="419:38" pos:end="419:49">(<argument pos:start="419:39" pos:end="419:45"><expr pos:start="419:39" pos:end="419:45"><name pos:start="419:39" pos:end="419:45">mb_type</name></expr></argument>, <argument pos:start="419:48" pos:end="419:48"><expr pos:start="419:48" pos:end="419:48"><name pos:start="419:48" pos:end="419:48">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="419:52" pos:end="447:25">{<block_content pos:start="421:29" pos:end="445:29">

                            <for pos:start="421:29" pos:end="445:29">for <control pos:start="421:33" pos:end="421:51">(<init pos:start="421:34" pos:end="421:39"><expr pos:start="421:34" pos:end="421:38"><name pos:start="421:34" pos:end="421:34">j</name> <operator pos:start="421:36" pos:end="421:36">=</operator> <literal type="number" pos:start="421:38" pos:end="421:38">0</literal></expr>;</init> <condition pos:start="421:41" pos:end="421:46"><expr pos:start="421:41" pos:end="421:45"><name pos:start="421:41" pos:end="421:41">j</name> <operator pos:start="421:43" pos:end="421:43">&lt;</operator> <literal type="number" pos:start="421:45" pos:end="421:45">2</literal></expr>;</condition> <incr pos:start="421:48" pos:end="421:50"><expr pos:start="421:48" pos:end="421:50"><name pos:start="421:48" pos:end="421:48">j</name><operator pos:start="421:49" pos:end="421:50">++</operator></expr></incr>)</control> <block pos:start="421:53" pos:end="445:29">{<block_content pos:start="423:33" pos:end="443:67">

                                <expr_stmt pos:start="423:33" pos:end="423:74"><expr pos:start="423:33" pos:end="423:73"><name pos:start="423:33" pos:end="423:53"><name pos:start="423:33" pos:end="423:33">s</name><operator pos:start="423:34" pos:end="423:35">-&gt;</operator><name pos:start="423:36" pos:end="423:47">field_select</name><index pos:start="423:48" pos:end="423:50">[<expr pos:start="423:49" pos:end="423:49"><name pos:start="423:49" pos:end="423:49">i</name></expr>]</index><index pos:start="423:51" pos:end="423:53">[<expr pos:start="423:52" pos:end="423:52"><name pos:start="423:52" pos:end="423:52">j</name></expr>]</index></name> <operator pos:start="423:55" pos:end="423:55">=</operator> <call pos:start="423:57" pos:end="423:73"><name pos:start="423:57" pos:end="423:65">get_bits1</name><argument_list pos:start="423:66" pos:end="423:73">(<argument pos:start="423:67" pos:end="423:72"><expr pos:start="423:67" pos:end="423:72"><operator pos:start="423:67" pos:end="423:67">&amp;</operator><name pos:start="423:68" pos:end="423:72"><name pos:start="423:68" pos:end="423:68">s</name><operator pos:start="423:69" pos:end="423:70">-&gt;</operator><name pos:start="423:71" pos:end="423:72">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="425:33" pos:end="427:78"><expr pos:start="425:33" pos:end="427:77"><name pos:start="425:33" pos:end="425:35">val</name> <operator pos:start="425:37" pos:end="425:37">=</operator> <call pos:start="425:39" pos:end="427:77"><name pos:start="425:39" pos:end="425:56">mpeg_decode_motion</name><argument_list pos:start="425:57" pos:end="427:77">(<argument pos:start="425:58" pos:end="425:58"><expr pos:start="425:58" pos:end="425:58"><name pos:start="425:58" pos:end="425:58">s</name></expr></argument>, <argument pos:start="425:61" pos:end="425:80"><expr pos:start="425:61" pos:end="425:80"><name pos:start="425:61" pos:end="425:80"><name pos:start="425:61" pos:end="425:61">s</name><operator pos:start="425:62" pos:end="425:63">-&gt;</operator><name pos:start="425:64" pos:end="425:74">mpeg_f_code</name><index pos:start="425:75" pos:end="425:77">[<expr pos:start="425:76" pos:end="425:76"><name pos:start="425:76" pos:end="425:76">i</name></expr>]</index><index pos:start="425:78" pos:end="425:80">[<expr pos:start="425:79" pos:end="425:79"><literal type="number" pos:start="425:79" pos:end="425:79">0</literal></expr>]</index></name></expr></argument>,

                                                         <argument pos:start="427:58" pos:end="427:76"><expr pos:start="427:58" pos:end="427:76"><name pos:start="427:58" pos:end="427:76"><name pos:start="427:58" pos:end="427:58">s</name><operator pos:start="427:59" pos:end="427:60">-&gt;</operator><name pos:start="427:61" pos:end="427:67">last_mv</name><index pos:start="427:68" pos:end="427:70">[<expr pos:start="427:69" pos:end="427:69"><name pos:start="427:69" pos:end="427:69">i</name></expr>]</index><index pos:start="427:71" pos:end="427:73">[<expr pos:start="427:72" pos:end="427:72"><name pos:start="427:72" pos:end="427:72">j</name></expr>]</index><index pos:start="427:74" pos:end="427:76">[<expr pos:start="427:75" pos:end="427:75"><literal type="number" pos:start="427:75" pos:end="427:75">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="429:33" pos:end="429:58"><expr pos:start="429:33" pos:end="429:57"><name pos:start="429:33" pos:end="429:51"><name pos:start="429:33" pos:end="429:33">s</name><operator pos:start="429:34" pos:end="429:35">-&gt;</operator><name pos:start="429:36" pos:end="429:42">last_mv</name><index pos:start="429:43" pos:end="429:45">[<expr pos:start="429:44" pos:end="429:44"><name pos:start="429:44" pos:end="429:44">i</name></expr>]</index><index pos:start="429:46" pos:end="429:48">[<expr pos:start="429:47" pos:end="429:47"><name pos:start="429:47" pos:end="429:47">j</name></expr>]</index><index pos:start="429:49" pos:end="429:51">[<expr pos:start="429:50" pos:end="429:50"><literal type="number" pos:start="429:50" pos:end="429:50">0</literal></expr>]</index></name> <operator pos:start="429:53" pos:end="429:53">=</operator> <name pos:start="429:55" pos:end="429:57">val</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="431:33" pos:end="431:58"><expr pos:start="431:33" pos:end="431:57"><name pos:start="431:33" pos:end="431:46"><name pos:start="431:33" pos:end="431:33">s</name><operator pos:start="431:34" pos:end="431:35">-&gt;</operator><name pos:start="431:36" pos:end="431:37">mv</name><index pos:start="431:38" pos:end="431:40">[<expr pos:start="431:39" pos:end="431:39"><name pos:start="431:39" pos:end="431:39">i</name></expr>]</index><index pos:start="431:41" pos:end="431:43">[<expr pos:start="431:42" pos:end="431:42"><name pos:start="431:42" pos:end="431:42">j</name></expr>]</index><index pos:start="431:44" pos:end="431:46">[<expr pos:start="431:45" pos:end="431:45"><literal type="number" pos:start="431:45" pos:end="431:45">0</literal></expr>]</index></name>      <operator pos:start="431:53" pos:end="431:53">=</operator> <name pos:start="431:55" pos:end="431:57">val</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="433:33" pos:end="433:67"><expr pos:start="433:33" pos:end="433:66"><call pos:start="433:33" pos:end="433:66"><name pos:start="433:33" pos:end="433:39">av_dlog</name><argument_list pos:start="433:40" pos:end="433:66">(<argument pos:start="433:41" pos:end="433:48"><expr pos:start="433:41" pos:end="433:48"><name pos:start="433:41" pos:end="433:48"><name pos:start="433:41" pos:end="433:41">s</name><operator pos:start="433:42" pos:end="433:43">-&gt;</operator><name pos:start="433:44" pos:end="433:48">avctx</name></name></expr></argument>, <argument pos:start="433:51" pos:end="433:60"><expr pos:start="433:51" pos:end="433:60"><literal type="string" pos:start="433:51" pos:end="433:60">"fmx=%d\n"</literal></expr></argument>, <argument pos:start="433:63" pos:end="433:65"><expr pos:start="433:63" pos:end="433:65"><name pos:start="433:63" pos:end="433:65">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="435:33" pos:end="437:83"><expr pos:start="435:33" pos:end="437:82"><name pos:start="435:33" pos:end="435:35">val</name> <operator pos:start="435:37" pos:end="435:37">=</operator> <call pos:start="435:39" pos:end="437:82"><name pos:start="435:39" pos:end="435:56">mpeg_decode_motion</name><argument_list pos:start="435:57" pos:end="437:82">(<argument pos:start="435:58" pos:end="435:58"><expr pos:start="435:58" pos:end="435:58"><name pos:start="435:58" pos:end="435:58">s</name></expr></argument>, <argument pos:start="435:61" pos:end="435:80"><expr pos:start="435:61" pos:end="435:80"><name pos:start="435:61" pos:end="435:80"><name pos:start="435:61" pos:end="435:61">s</name><operator pos:start="435:62" pos:end="435:63">-&gt;</operator><name pos:start="435:64" pos:end="435:74">mpeg_f_code</name><index pos:start="435:75" pos:end="435:77">[<expr pos:start="435:76" pos:end="435:76"><name pos:start="435:76" pos:end="435:76">i</name></expr>]</index><index pos:start="435:78" pos:end="435:80">[<expr pos:start="435:79" pos:end="435:79"><literal type="number" pos:start="435:79" pos:end="435:79">1</literal></expr>]</index></name></expr></argument>,

                                                         <argument pos:start="437:58" pos:end="437:81"><expr pos:start="437:58" pos:end="437:81"><name pos:start="437:58" pos:end="437:76"><name pos:start="437:58" pos:end="437:58">s</name><operator pos:start="437:59" pos:end="437:60">-&gt;</operator><name pos:start="437:61" pos:end="437:67">last_mv</name><index pos:start="437:68" pos:end="437:70">[<expr pos:start="437:69" pos:end="437:69"><name pos:start="437:69" pos:end="437:69">i</name></expr>]</index><index pos:start="437:71" pos:end="437:73">[<expr pos:start="437:72" pos:end="437:72"><name pos:start="437:72" pos:end="437:72">j</name></expr>]</index><index pos:start="437:74" pos:end="437:76">[<expr pos:start="437:75" pos:end="437:75"><literal type="number" pos:start="437:75" pos:end="437:75">1</literal></expr>]</index></name> <operator pos:start="437:78" pos:end="437:79">&gt;&gt;</operator> <literal type="number" pos:start="437:81" pos:end="437:81">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="439:33" pos:end="439:63"><expr pos:start="439:33" pos:end="439:62"><name pos:start="439:33" pos:end="439:51"><name pos:start="439:33" pos:end="439:33">s</name><operator pos:start="439:34" pos:end="439:35">-&gt;</operator><name pos:start="439:36" pos:end="439:42">last_mv</name><index pos:start="439:43" pos:end="439:45">[<expr pos:start="439:44" pos:end="439:44"><name pos:start="439:44" pos:end="439:44">i</name></expr>]</index><index pos:start="439:46" pos:end="439:48">[<expr pos:start="439:47" pos:end="439:47"><name pos:start="439:47" pos:end="439:47">j</name></expr>]</index><index pos:start="439:49" pos:end="439:51">[<expr pos:start="439:50" pos:end="439:50"><literal type="number" pos:start="439:50" pos:end="439:50">1</literal></expr>]</index></name> <operator pos:start="439:53" pos:end="439:53">=</operator> <name pos:start="439:55" pos:end="439:57">val</name> <operator pos:start="439:59" pos:end="439:60">&lt;&lt;</operator> <literal type="number" pos:start="439:62" pos:end="439:62">1</literal></expr>;</expr_stmt>

                                <expr_stmt pos:start="441:33" pos:end="441:58"><expr pos:start="441:33" pos:end="441:57"><name pos:start="441:33" pos:end="441:46"><name pos:start="441:33" pos:end="441:33">s</name><operator pos:start="441:34" pos:end="441:35">-&gt;</operator><name pos:start="441:36" pos:end="441:37">mv</name><index pos:start="441:38" pos:end="441:40">[<expr pos:start="441:39" pos:end="441:39"><name pos:start="441:39" pos:end="441:39">i</name></expr>]</index><index pos:start="441:41" pos:end="441:43">[<expr pos:start="441:42" pos:end="441:42"><name pos:start="441:42" pos:end="441:42">j</name></expr>]</index><index pos:start="441:44" pos:end="441:46">[<expr pos:start="441:45" pos:end="441:45"><literal type="number" pos:start="441:45" pos:end="441:45">1</literal></expr>]</index></name>      <operator pos:start="441:53" pos:end="441:53">=</operator> <name pos:start="441:55" pos:end="441:57">val</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="443:33" pos:end="443:67"><expr pos:start="443:33" pos:end="443:66"><call pos:start="443:33" pos:end="443:66"><name pos:start="443:33" pos:end="443:39">av_dlog</name><argument_list pos:start="443:40" pos:end="443:66">(<argument pos:start="443:41" pos:end="443:48"><expr pos:start="443:41" pos:end="443:48"><name pos:start="443:41" pos:end="443:48"><name pos:start="443:41" pos:end="443:41">s</name><operator pos:start="443:42" pos:end="443:43">-&gt;</operator><name pos:start="443:44" pos:end="443:48">avctx</name></name></expr></argument>, <argument pos:start="443:51" pos:end="443:60"><expr pos:start="443:51" pos:end="443:60"><literal type="string" pos:start="443:51" pos:end="443:60">"fmy=%d\n"</literal></expr></argument>, <argument pos:start="443:63" pos:end="443:65"><expr pos:start="443:63" pos:end="443:65"><name pos:start="443:63" pos:end="443:65">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></for>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="451:19" pos:end="481:17">else <block pos:start="451:24" pos:end="481:17">{<block_content pos:start="453:21" pos:end="479:21">

                    <expr_stmt pos:start="453:21" pos:end="453:57"><expr pos:start="453:21" pos:end="453:56"><call pos:start="453:21" pos:end="453:56"><name pos:start="453:21" pos:end="453:30">av_assert0</name><argument_list pos:start="453:31" pos:end="453:56">(<argument pos:start="453:32" pos:end="453:55"><expr pos:start="453:32" pos:end="453:55"><operator pos:start="453:32" pos:end="453:32">!</operator><name pos:start="453:33" pos:end="453:55"><name pos:start="453:33" pos:end="453:33">s</name><operator pos:start="453:34" pos:end="453:35">-&gt;</operator><name pos:start="453:36" pos:end="453:55">progressive_sequence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="455:21" pos:end="455:66"><expr pos:start="455:21" pos:end="455:65"><name pos:start="455:21" pos:end="455:27">mb_type</name> <operator pos:start="455:29" pos:end="455:30">|=</operator> <name pos:start="455:32" pos:end="455:44">MB_TYPE_16x16</name> <operator pos:start="455:46" pos:end="455:46">|</operator> <name pos:start="455:48" pos:end="455:65">MB_TYPE_INTERLACED</name></expr>;</expr_stmt>

                    <for pos:start="457:21" pos:end="479:21">for <control pos:start="457:25" pos:end="457:43">(<init pos:start="457:26" pos:end="457:31"><expr pos:start="457:26" pos:end="457:30"><name pos:start="457:26" pos:end="457:26">i</name> <operator pos:start="457:28" pos:end="457:28">=</operator> <literal type="number" pos:start="457:30" pos:end="457:30">0</literal></expr>;</init> <condition pos:start="457:33" pos:end="457:38"><expr pos:start="457:33" pos:end="457:37"><name pos:start="457:33" pos:end="457:33">i</name> <operator pos:start="457:35" pos:end="457:35">&lt;</operator> <literal type="number" pos:start="457:37" pos:end="457:37">2</literal></expr>;</condition> <incr pos:start="457:40" pos:end="457:42"><expr pos:start="457:40" pos:end="457:42"><name pos:start="457:40" pos:end="457:40">i</name><operator pos:start="457:41" pos:end="457:42">++</operator></expr></incr>)</control> <block pos:start="457:45" pos:end="479:21">{<block_content pos:start="459:25" pos:end="477:25">

                        <if_stmt pos:start="459:25" pos:end="477:25"><if pos:start="459:25" pos:end="477:25">if <condition pos:start="459:28" pos:end="459:50">(<expr pos:start="459:29" pos:end="459:49"><call pos:start="459:29" pos:end="459:49"><name pos:start="459:29" pos:end="459:37">USES_LIST</name><argument_list pos:start="459:38" pos:end="459:49">(<argument pos:start="459:39" pos:end="459:45"><expr pos:start="459:39" pos:end="459:45"><name pos:start="459:39" pos:end="459:45">mb_type</name></expr></argument>, <argument pos:start="459:48" pos:end="459:48"><expr pos:start="459:48" pos:end="459:48"><name pos:start="459:48" pos:end="459:48">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="459:52" pos:end="477:25">{<block_content pos:start="461:29" pos:end="475:29">

                            <expr_stmt pos:start="461:29" pos:end="461:70"><expr pos:start="461:29" pos:end="461:69"><name pos:start="461:29" pos:end="461:49"><name pos:start="461:29" pos:end="461:29">s</name><operator pos:start="461:30" pos:end="461:31">-&gt;</operator><name pos:start="461:32" pos:end="461:43">field_select</name><index pos:start="461:44" pos:end="461:46">[<expr pos:start="461:45" pos:end="461:45"><name pos:start="461:45" pos:end="461:45">i</name></expr>]</index><index pos:start="461:47" pos:end="461:49">[<expr pos:start="461:48" pos:end="461:48"><literal type="number" pos:start="461:48" pos:end="461:48">0</literal></expr>]</index></name> <operator pos:start="461:51" pos:end="461:51">=</operator> <call pos:start="461:53" pos:end="461:69"><name pos:start="461:53" pos:end="461:61">get_bits1</name><argument_list pos:start="461:62" pos:end="461:69">(<argument pos:start="461:63" pos:end="461:68"><expr pos:start="461:63" pos:end="461:68"><operator pos:start="461:63" pos:end="461:63">&amp;</operator><name pos:start="461:64" pos:end="461:68"><name pos:start="461:64" pos:end="461:64">s</name><operator pos:start="461:65" pos:end="461:66">-&gt;</operator><name pos:start="461:67" pos:end="461:68">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <for pos:start="463:29" pos:end="475:29">for <control pos:start="463:33" pos:end="463:51">(<init pos:start="463:34" pos:end="463:39"><expr pos:start="463:34" pos:end="463:38"><name pos:start="463:34" pos:end="463:34">k</name> <operator pos:start="463:36" pos:end="463:36">=</operator> <literal type="number" pos:start="463:38" pos:end="463:38">0</literal></expr>;</init> <condition pos:start="463:41" pos:end="463:46"><expr pos:start="463:41" pos:end="463:45"><name pos:start="463:41" pos:end="463:41">k</name> <operator pos:start="463:43" pos:end="463:43">&lt;</operator> <literal type="number" pos:start="463:45" pos:end="463:45">2</literal></expr>;</condition> <incr pos:start="463:48" pos:end="463:50"><expr pos:start="463:48" pos:end="463:50"><name pos:start="463:48" pos:end="463:48">k</name><operator pos:start="463:49" pos:end="463:50">++</operator></expr></incr>)</control> <block pos:start="463:53" pos:end="475:29">{<block_content pos:start="465:33" pos:end="473:58">

                                <expr_stmt pos:start="465:33" pos:end="467:78"><expr pos:start="465:33" pos:end="467:77"><name pos:start="465:33" pos:end="465:35">val</name> <operator pos:start="465:37" pos:end="465:37">=</operator> <call pos:start="465:39" pos:end="467:77"><name pos:start="465:39" pos:end="465:56">mpeg_decode_motion</name><argument_list pos:start="465:57" pos:end="467:77">(<argument pos:start="465:58" pos:end="465:58"><expr pos:start="465:58" pos:end="465:58"><name pos:start="465:58" pos:end="465:58">s</name></expr></argument>, <argument pos:start="465:61" pos:end="465:80"><expr pos:start="465:61" pos:end="465:80"><name pos:start="465:61" pos:end="465:80"><name pos:start="465:61" pos:end="465:61">s</name><operator pos:start="465:62" pos:end="465:63">-&gt;</operator><name pos:start="465:64" pos:end="465:74">mpeg_f_code</name><index pos:start="465:75" pos:end="465:77">[<expr pos:start="465:76" pos:end="465:76"><name pos:start="465:76" pos:end="465:76">i</name></expr>]</index><index pos:start="465:78" pos:end="465:80">[<expr pos:start="465:79" pos:end="465:79"><name pos:start="465:79" pos:end="465:79">k</name></expr>]</index></name></expr></argument>,

                                                         <argument pos:start="467:58" pos:end="467:76"><expr pos:start="467:58" pos:end="467:76"><name pos:start="467:58" pos:end="467:76"><name pos:start="467:58" pos:end="467:58">s</name><operator pos:start="467:59" pos:end="467:60">-&gt;</operator><name pos:start="467:61" pos:end="467:67">last_mv</name><index pos:start="467:68" pos:end="467:70">[<expr pos:start="467:69" pos:end="467:69"><name pos:start="467:69" pos:end="467:69">i</name></expr>]</index><index pos:start="467:71" pos:end="467:73">[<expr pos:start="467:72" pos:end="467:72"><literal type="number" pos:start="467:72" pos:end="467:72">0</literal></expr>]</index><index pos:start="467:74" pos:end="467:76">[<expr pos:start="467:75" pos:end="467:75"><name pos:start="467:75" pos:end="467:75">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="469:33" pos:end="469:58"><expr pos:start="469:33" pos:end="469:57"><name pos:start="469:33" pos:end="469:51"><name pos:start="469:33" pos:end="469:33">s</name><operator pos:start="469:34" pos:end="469:35">-&gt;</operator><name pos:start="469:36" pos:end="469:42">last_mv</name><index pos:start="469:43" pos:end="469:45">[<expr pos:start="469:44" pos:end="469:44"><name pos:start="469:44" pos:end="469:44">i</name></expr>]</index><index pos:start="469:46" pos:end="469:48">[<expr pos:start="469:47" pos:end="469:47"><literal type="number" pos:start="469:47" pos:end="469:47">0</literal></expr>]</index><index pos:start="469:49" pos:end="469:51">[<expr pos:start="469:50" pos:end="469:50"><name pos:start="469:50" pos:end="469:50">k</name></expr>]</index></name> <operator pos:start="469:53" pos:end="469:53">=</operator> <name pos:start="469:55" pos:end="469:57">val</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="471:33" pos:end="471:58"><expr pos:start="471:33" pos:end="471:57"><name pos:start="471:33" pos:end="471:51"><name pos:start="471:33" pos:end="471:33">s</name><operator pos:start="471:34" pos:end="471:35">-&gt;</operator><name pos:start="471:36" pos:end="471:42">last_mv</name><index pos:start="471:43" pos:end="471:45">[<expr pos:start="471:44" pos:end="471:44"><name pos:start="471:44" pos:end="471:44">i</name></expr>]</index><index pos:start="471:46" pos:end="471:48">[<expr pos:start="471:47" pos:end="471:47"><literal type="number" pos:start="471:47" pos:end="471:47">1</literal></expr>]</index><index pos:start="471:49" pos:end="471:51">[<expr pos:start="471:50" pos:end="471:50"><name pos:start="471:50" pos:end="471:50">k</name></expr>]</index></name> <operator pos:start="471:53" pos:end="471:53">=</operator> <name pos:start="471:55" pos:end="471:57">val</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="473:33" pos:end="473:58"><expr pos:start="473:33" pos:end="473:57"><name pos:start="473:33" pos:end="473:46"><name pos:start="473:33" pos:end="473:33">s</name><operator pos:start="473:34" pos:end="473:35">-&gt;</operator><name pos:start="473:36" pos:end="473:37">mv</name><index pos:start="473:38" pos:end="473:40">[<expr pos:start="473:39" pos:end="473:39"><name pos:start="473:39" pos:end="473:39">i</name></expr>]</index><index pos:start="473:41" pos:end="473:43">[<expr pos:start="473:42" pos:end="473:42"><literal type="number" pos:start="473:42" pos:end="473:42">0</literal></expr>]</index><index pos:start="473:44" pos:end="473:46">[<expr pos:start="473:45" pos:end="473:45"><name pos:start="473:45" pos:end="473:45">k</name></expr>]</index></name>      <operator pos:start="473:53" pos:end="473:53">=</operator> <name pos:start="473:55" pos:end="473:57">val</name></expr>;</expr_stmt>

                            </block_content>}</block></for>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

                <break pos:start="483:17" pos:end="483:22">break;</break>

            <case pos:start="485:13" pos:end="485:24">case <expr pos:start="485:18" pos:end="485:23"><name pos:start="485:18" pos:end="485:23">MT_DMV</name></expr>:</case>

                <if_stmt pos:start="487:17" pos:end="493:17"><if pos:start="487:17" pos:end="493:17">if<condition pos:start="487:19" pos:end="487:43">(<expr pos:start="487:20" pos:end="487:42"><name pos:start="487:20" pos:end="487:42"><name pos:start="487:20" pos:end="487:20">s</name><operator pos:start="487:21" pos:end="487:22">-&gt;</operator><name pos:start="487:23" pos:end="487:42">progressive_sequence</name></name></expr>)</condition><block pos:start="487:44" pos:end="493:17">{<block_content pos:start="489:21" pos:end="491:30">

                    <expr_stmt pos:start="489:21" pos:end="489:87"><expr pos:start="489:21" pos:end="489:86"><call pos:start="489:21" pos:end="489:86"><name pos:start="489:21" pos:end="489:26">av_log</name><argument_list pos:start="489:27" pos:end="489:86">(<argument pos:start="489:28" pos:end="489:35"><expr pos:start="489:28" pos:end="489:35"><name pos:start="489:28" pos:end="489:35"><name pos:start="489:28" pos:end="489:28">s</name><operator pos:start="489:29" pos:end="489:30">-&gt;</operator><name pos:start="489:31" pos:end="489:35">avctx</name></name></expr></argument>, <argument pos:start="489:38" pos:end="489:49"><expr pos:start="489:38" pos:end="489:49"><name pos:start="489:38" pos:end="489:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="489:52" pos:end="489:85"><expr pos:start="489:52" pos:end="489:85"><literal type="string" pos:start="489:52" pos:end="489:85">"MT_DMV in progressive_sequence\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="491:21" pos:end="491:30">return <expr pos:start="491:28" pos:end="491:29"><operator pos:start="491:28" pos:end="491:28">-</operator><literal type="number" pos:start="491:29" pos:end="491:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="495:17" pos:end="495:41"><expr pos:start="495:17" pos:end="495:40"><name pos:start="495:17" pos:end="495:26"><name pos:start="495:17" pos:end="495:17">s</name><operator pos:start="495:18" pos:end="495:19">-&gt;</operator><name pos:start="495:20" pos:end="495:26">mv_type</name></name> <operator pos:start="495:28" pos:end="495:28">=</operator> <name pos:start="495:30" pos:end="495:40">MV_TYPE_DMV</name></expr>;</expr_stmt>

                <for pos:start="497:17" pos:end="589:17">for <control pos:start="497:21" pos:end="497:39">(<init pos:start="497:22" pos:end="497:27"><expr pos:start="497:22" pos:end="497:26"><name pos:start="497:22" pos:end="497:22">i</name> <operator pos:start="497:24" pos:end="497:24">=</operator> <literal type="number" pos:start="497:26" pos:end="497:26">0</literal></expr>;</init> <condition pos:start="497:29" pos:end="497:34"><expr pos:start="497:29" pos:end="497:33"><name pos:start="497:29" pos:end="497:29">i</name> <operator pos:start="497:31" pos:end="497:31">&lt;</operator> <literal type="number" pos:start="497:33" pos:end="497:33">2</literal></expr>;</condition> <incr pos:start="497:36" pos:end="497:38"><expr pos:start="497:36" pos:end="497:38"><name pos:start="497:36" pos:end="497:36">i</name><operator pos:start="497:37" pos:end="497:38">++</operator></expr></incr>)</control> <block pos:start="497:41" pos:end="589:17">{<block_content pos:start="499:21" pos:end="587:21">

                    <if_stmt pos:start="499:21" pos:end="587:21"><if pos:start="499:21" pos:end="587:21">if <condition pos:start="499:24" pos:end="499:46">(<expr pos:start="499:25" pos:end="499:45"><call pos:start="499:25" pos:end="499:45"><name pos:start="499:25" pos:end="499:33">USES_LIST</name><argument_list pos:start="499:34" pos:end="499:45">(<argument pos:start="499:35" pos:end="499:41"><expr pos:start="499:35" pos:end="499:41"><name pos:start="499:35" pos:end="499:41">mb_type</name></expr></argument>, <argument pos:start="499:44" pos:end="499:44"><expr pos:start="499:44" pos:end="499:44"><name pos:start="499:44" pos:end="499:44">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="499:48" pos:end="587:21">{<block_content pos:start="501:25" pos:end="585:25">

                        <decl_stmt pos:start="501:25" pos:end="501:48"><decl pos:start="501:25" pos:end="501:31"><type pos:start="501:25" pos:end="501:27"><name pos:start="501:25" pos:end="501:27">int</name></type> <name pos:start="501:29" pos:end="501:31">dmx</name></decl>, <decl pos:start="501:34" pos:end="501:36"><type ref="prev" pos:start="501:25" pos:end="501:27"/><name pos:start="501:34" pos:end="501:36">dmy</name></decl>, <decl pos:start="501:39" pos:end="501:40"><type ref="prev" pos:start="501:25" pos:end="501:27"/><name pos:start="501:39" pos:end="501:40">mx</name></decl>, <decl pos:start="501:43" pos:end="501:44"><type ref="prev" pos:start="501:25" pos:end="501:27"/><name pos:start="501:43" pos:end="501:44">my</name></decl>, <decl pos:start="501:47" pos:end="501:47"><type ref="prev" pos:start="501:25" pos:end="501:27"/><name pos:start="501:47" pos:end="501:47">m</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="503:25" pos:end="503:80"><decl pos:start="503:25" pos:end="503:79"><type pos:start="503:25" pos:end="503:33"><specifier pos:start="503:25" pos:end="503:29">const</specifier> <name pos:start="503:31" pos:end="503:33">int</name></type> <name pos:start="503:35" pos:end="503:42">my_shift</name> <init pos:start="503:44" pos:end="503:79">= <expr pos:start="503:46" pos:end="503:79"><name pos:start="503:46" pos:end="503:65"><name pos:start="503:46" pos:end="503:46">s</name><operator pos:start="503:47" pos:end="503:48">-&gt;</operator><name pos:start="503:49" pos:end="503:65">picture_structure</name></name> <operator pos:start="503:67" pos:end="503:68">==</operator> <name pos:start="503:70" pos:end="503:79">PICT_FRAME</name></expr></init></decl>;</decl_stmt>



                        <expr_stmt pos:start="507:25" pos:end="509:69"><expr pos:start="507:25" pos:end="509:68"><name pos:start="507:25" pos:end="507:26">mx</name> <operator pos:start="507:28" pos:end="507:28">=</operator> <call pos:start="507:30" pos:end="509:68"><name pos:start="507:30" pos:end="507:47">mpeg_decode_motion</name><argument_list pos:start="507:48" pos:end="509:68">(<argument pos:start="507:49" pos:end="507:49"><expr pos:start="507:49" pos:end="507:49"><name pos:start="507:49" pos:end="507:49">s</name></expr></argument>, <argument pos:start="507:52" pos:end="507:71"><expr pos:start="507:52" pos:end="507:71"><name pos:start="507:52" pos:end="507:71"><name pos:start="507:52" pos:end="507:52">s</name><operator pos:start="507:53" pos:end="507:54">-&gt;</operator><name pos:start="507:55" pos:end="507:65">mpeg_f_code</name><index pos:start="507:66" pos:end="507:68">[<expr pos:start="507:67" pos:end="507:67"><name pos:start="507:67" pos:end="507:67">i</name></expr>]</index><index pos:start="507:69" pos:end="507:71">[<expr pos:start="507:70" pos:end="507:70"><literal type="number" pos:start="507:70" pos:end="507:70">0</literal></expr>]</index></name></expr></argument>,

                                                <argument pos:start="509:49" pos:end="509:67"><expr pos:start="509:49" pos:end="509:67"><name pos:start="509:49" pos:end="509:67"><name pos:start="509:49" pos:end="509:49">s</name><operator pos:start="509:50" pos:end="509:51">-&gt;</operator><name pos:start="509:52" pos:end="509:58">last_mv</name><index pos:start="509:59" pos:end="509:61">[<expr pos:start="509:60" pos:end="509:60"><name pos:start="509:60" pos:end="509:60">i</name></expr>]</index><index pos:start="509:62" pos:end="509:64">[<expr pos:start="509:63" pos:end="509:63"><literal type="number" pos:start="509:63" pos:end="509:63">0</literal></expr>]</index><index pos:start="509:65" pos:end="509:67">[<expr pos:start="509:66" pos:end="509:66"><literal type="number" pos:start="509:66" pos:end="509:66">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="511:25" pos:end="511:49"><expr pos:start="511:25" pos:end="511:48"><name pos:start="511:25" pos:end="511:43"><name pos:start="511:25" pos:end="511:25">s</name><operator pos:start="511:26" pos:end="511:27">-&gt;</operator><name pos:start="511:28" pos:end="511:34">last_mv</name><index pos:start="511:35" pos:end="511:37">[<expr pos:start="511:36" pos:end="511:36"><name pos:start="511:36" pos:end="511:36">i</name></expr>]</index><index pos:start="511:38" pos:end="511:40">[<expr pos:start="511:39" pos:end="511:39"><literal type="number" pos:start="511:39" pos:end="511:39">0</literal></expr>]</index><index pos:start="511:41" pos:end="511:43">[<expr pos:start="511:42" pos:end="511:42"><literal type="number" pos:start="511:42" pos:end="511:42">0</literal></expr>]</index></name> <operator pos:start="511:45" pos:end="511:45">=</operator> <name pos:start="511:47" pos:end="511:48">mx</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="513:25" pos:end="513:49"><expr pos:start="513:25" pos:end="513:48"><name pos:start="513:25" pos:end="513:43"><name pos:start="513:25" pos:end="513:25">s</name><operator pos:start="513:26" pos:end="513:27">-&gt;</operator><name pos:start="513:28" pos:end="513:34">last_mv</name><index pos:start="513:35" pos:end="513:37">[<expr pos:start="513:36" pos:end="513:36"><name pos:start="513:36" pos:end="513:36">i</name></expr>]</index><index pos:start="513:38" pos:end="513:40">[<expr pos:start="513:39" pos:end="513:39"><literal type="number" pos:start="513:39" pos:end="513:39">1</literal></expr>]</index><index pos:start="513:41" pos:end="513:43">[<expr pos:start="513:42" pos:end="513:42"><literal type="number" pos:start="513:42" pos:end="513:42">0</literal></expr>]</index></name> <operator pos:start="513:45" pos:end="513:45">=</operator> <name pos:start="513:47" pos:end="513:48">mx</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="515:25" pos:end="515:41"><expr pos:start="515:25" pos:end="515:40"><name pos:start="515:25" pos:end="515:27">dmx</name> <operator pos:start="515:29" pos:end="515:29">=</operator> <call pos:start="515:31" pos:end="515:40"><name pos:start="515:31" pos:end="515:37">get_dmv</name><argument_list pos:start="515:38" pos:end="515:40">(<argument pos:start="515:39" pos:end="515:39"><expr pos:start="515:39" pos:end="515:39"><name pos:start="515:39" pos:end="515:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="517:25" pos:end="519:82"><expr pos:start="517:25" pos:end="519:81"><name pos:start="517:25" pos:end="517:26">my</name>  <operator pos:start="517:29" pos:end="517:29">=</operator> <call pos:start="517:31" pos:end="519:81"><name pos:start="517:31" pos:end="517:48">mpeg_decode_motion</name><argument_list pos:start="517:49" pos:end="519:81">(<argument pos:start="517:50" pos:end="517:50"><expr pos:start="517:50" pos:end="517:50"><name pos:start="517:50" pos:end="517:50">s</name></expr></argument>, <argument pos:start="517:53" pos:end="517:72"><expr pos:start="517:53" pos:end="517:72"><name pos:start="517:53" pos:end="517:72"><name pos:start="517:53" pos:end="517:53">s</name><operator pos:start="517:54" pos:end="517:55">-&gt;</operator><name pos:start="517:56" pos:end="517:66">mpeg_f_code</name><index pos:start="517:67" pos:end="517:69">[<expr pos:start="517:68" pos:end="517:68"><name pos:start="517:68" pos:end="517:68">i</name></expr>]</index><index pos:start="517:70" pos:end="517:72">[<expr pos:start="517:71" pos:end="517:71"><literal type="number" pos:start="517:71" pos:end="517:71">1</literal></expr>]</index></name></expr></argument>,

                                                 <argument pos:start="519:50" pos:end="519:80"><expr pos:start="519:50" pos:end="519:80"><name pos:start="519:50" pos:end="519:68"><name pos:start="519:50" pos:end="519:50">s</name><operator pos:start="519:51" pos:end="519:52">-&gt;</operator><name pos:start="519:53" pos:end="519:59">last_mv</name><index pos:start="519:60" pos:end="519:62">[<expr pos:start="519:61" pos:end="519:61"><name pos:start="519:61" pos:end="519:61">i</name></expr>]</index><index pos:start="519:63" pos:end="519:65">[<expr pos:start="519:64" pos:end="519:64"><literal type="number" pos:start="519:64" pos:end="519:64">0</literal></expr>]</index><index pos:start="519:66" pos:end="519:68">[<expr pos:start="519:67" pos:end="519:67"><literal type="number" pos:start="519:67" pos:end="519:67">1</literal></expr>]</index></name> <operator pos:start="519:70" pos:end="519:71">&gt;&gt;</operator> <name pos:start="519:73" pos:end="519:80">my_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="521:25" pos:end="521:41"><expr pos:start="521:25" pos:end="521:40"><name pos:start="521:25" pos:end="521:27">dmy</name> <operator pos:start="521:29" pos:end="521:29">=</operator> <call pos:start="521:31" pos:end="521:40"><name pos:start="521:31" pos:end="521:37">get_dmv</name><argument_list pos:start="521:38" pos:end="521:40">(<argument pos:start="521:39" pos:end="521:39"><expr pos:start="521:39" pos:end="521:39"><name pos:start="521:39" pos:end="521:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





                        <expr_stmt pos:start="527:25" pos:end="527:61"><expr pos:start="527:25" pos:end="527:60"><name pos:start="527:25" pos:end="527:43"><name pos:start="527:25" pos:end="527:25">s</name><operator pos:start="527:26" pos:end="527:27">-&gt;</operator><name pos:start="527:28" pos:end="527:34">last_mv</name><index pos:start="527:35" pos:end="527:37">[<expr pos:start="527:36" pos:end="527:36"><name pos:start="527:36" pos:end="527:36">i</name></expr>]</index><index pos:start="527:38" pos:end="527:40">[<expr pos:start="527:39" pos:end="527:39"><literal type="number" pos:start="527:39" pos:end="527:39">0</literal></expr>]</index><index pos:start="527:41" pos:end="527:43">[<expr pos:start="527:42" pos:end="527:42"><literal type="number" pos:start="527:42" pos:end="527:42">1</literal></expr>]</index></name> <operator pos:start="527:45" pos:end="527:45">=</operator> <name pos:start="527:47" pos:end="527:48">my</name> <operator pos:start="527:50" pos:end="527:51">&lt;&lt;</operator> <name pos:start="527:53" pos:end="527:60">my_shift</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="529:25" pos:end="529:61"><expr pos:start="529:25" pos:end="529:60"><name pos:start="529:25" pos:end="529:43"><name pos:start="529:25" pos:end="529:25">s</name><operator pos:start="529:26" pos:end="529:27">-&gt;</operator><name pos:start="529:28" pos:end="529:34">last_mv</name><index pos:start="529:35" pos:end="529:37">[<expr pos:start="529:36" pos:end="529:36"><name pos:start="529:36" pos:end="529:36">i</name></expr>]</index><index pos:start="529:38" pos:end="529:40">[<expr pos:start="529:39" pos:end="529:39"><literal type="number" pos:start="529:39" pos:end="529:39">1</literal></expr>]</index><index pos:start="529:41" pos:end="529:43">[<expr pos:start="529:42" pos:end="529:42"><literal type="number" pos:start="529:42" pos:end="529:42">1</literal></expr>]</index></name> <operator pos:start="529:45" pos:end="529:45">=</operator> <name pos:start="529:47" pos:end="529:48">my</name> <operator pos:start="529:50" pos:end="529:51">&lt;&lt;</operator> <name pos:start="529:53" pos:end="529:60">my_shift</name></expr>;</expr_stmt>



                        <expr_stmt pos:start="533:25" pos:end="533:44"><expr pos:start="533:25" pos:end="533:43"><name pos:start="533:25" pos:end="533:38"><name pos:start="533:25" pos:end="533:25">s</name><operator pos:start="533:26" pos:end="533:27">-&gt;</operator><name pos:start="533:28" pos:end="533:29">mv</name><index pos:start="533:30" pos:end="533:32">[<expr pos:start="533:31" pos:end="533:31"><name pos:start="533:31" pos:end="533:31">i</name></expr>]</index><index pos:start="533:33" pos:end="533:35">[<expr pos:start="533:34" pos:end="533:34"><literal type="number" pos:start="533:34" pos:end="533:34">0</literal></expr>]</index><index pos:start="533:36" pos:end="533:38">[<expr pos:start="533:37" pos:end="533:37"><literal type="number" pos:start="533:37" pos:end="533:37">0</literal></expr>]</index></name> <operator pos:start="533:40" pos:end="533:40">=</operator> <name pos:start="533:42" pos:end="533:43">mx</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="535:25" pos:end="535:44"><expr pos:start="535:25" pos:end="535:43"><name pos:start="535:25" pos:end="535:38"><name pos:start="535:25" pos:end="535:25">s</name><operator pos:start="535:26" pos:end="535:27">-&gt;</operator><name pos:start="535:28" pos:end="535:29">mv</name><index pos:start="535:30" pos:end="535:32">[<expr pos:start="535:31" pos:end="535:31"><name pos:start="535:31" pos:end="535:31">i</name></expr>]</index><index pos:start="535:33" pos:end="535:35">[<expr pos:start="535:34" pos:end="535:34"><literal type="number" pos:start="535:34" pos:end="535:34">0</literal></expr>]</index><index pos:start="535:36" pos:end="535:38">[<expr pos:start="535:37" pos:end="535:37"><literal type="number" pos:start="535:37" pos:end="535:37">1</literal></expr>]</index></name> <operator pos:start="535:40" pos:end="535:40">=</operator> <name pos:start="535:42" pos:end="535:43">my</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="537:25" pos:end="537:44"><expr pos:start="537:25" pos:end="537:43"><name pos:start="537:25" pos:end="537:38"><name pos:start="537:25" pos:end="537:25">s</name><operator pos:start="537:26" pos:end="537:27">-&gt;</operator><name pos:start="537:28" pos:end="537:29">mv</name><index pos:start="537:30" pos:end="537:32">[<expr pos:start="537:31" pos:end="537:31"><name pos:start="537:31" pos:end="537:31">i</name></expr>]</index><index pos:start="537:33" pos:end="537:35">[<expr pos:start="537:34" pos:end="537:34"><literal type="number" pos:start="537:34" pos:end="537:34">1</literal></expr>]</index><index pos:start="537:36" pos:end="537:38">[<expr pos:start="537:37" pos:end="537:37"><literal type="number" pos:start="537:37" pos:end="537:37">0</literal></expr>]</index></name> <operator pos:start="537:40" pos:end="537:40">=</operator> <name pos:start="537:42" pos:end="537:43">mx</name></expr>;</expr_stmt> <comment type="line" pos:start="537:46" pos:end="537:56">// not used</comment>

                        <expr_stmt pos:start="539:25" pos:end="539:44"><expr pos:start="539:25" pos:end="539:43"><name pos:start="539:25" pos:end="539:38"><name pos:start="539:25" pos:end="539:25">s</name><operator pos:start="539:26" pos:end="539:27">-&gt;</operator><name pos:start="539:28" pos:end="539:29">mv</name><index pos:start="539:30" pos:end="539:32">[<expr pos:start="539:31" pos:end="539:31"><name pos:start="539:31" pos:end="539:31">i</name></expr>]</index><index pos:start="539:33" pos:end="539:35">[<expr pos:start="539:34" pos:end="539:34"><literal type="number" pos:start="539:34" pos:end="539:34">1</literal></expr>]</index><index pos:start="539:36" pos:end="539:38">[<expr pos:start="539:37" pos:end="539:37"><literal type="number" pos:start="539:37" pos:end="539:37">1</literal></expr>]</index></name> <operator pos:start="539:40" pos:end="539:40">=</operator> <name pos:start="539:42" pos:end="539:43">my</name></expr>;</expr_stmt> <comment type="line" pos:start="539:46" pos:end="539:56">// not used</comment>



                        <if_stmt pos:start="543:25" pos:end="585:25"><if pos:start="543:25" pos:end="567:25">if <condition pos:start="543:28" pos:end="543:63">(<expr pos:start="543:29" pos:end="543:62"><name pos:start="543:29" pos:end="543:48"><name pos:start="543:29" pos:end="543:29">s</name><operator pos:start="543:30" pos:end="543:31">-&gt;</operator><name pos:start="543:32" pos:end="543:48">picture_structure</name></name> <operator pos:start="543:50" pos:end="543:51">==</operator> <name pos:start="543:53" pos:end="543:62">PICT_FRAME</name></expr>)</condition> <block pos:start="543:65" pos:end="567:25">{<block_content pos:start="545:29" pos:end="565:82">

                            <expr_stmt pos:start="545:29" pos:end="545:74"><expr pos:start="545:29" pos:end="545:73"><name pos:start="545:29" pos:end="545:35">mb_type</name> <operator pos:start="545:37" pos:end="545:38">|=</operator> <name pos:start="545:40" pos:end="545:52">MB_TYPE_16x16</name> <operator pos:start="545:54" pos:end="545:54">|</operator> <name pos:start="545:56" pos:end="545:73">MB_TYPE_INTERLACED</name></expr>;</expr_stmt>



                            <comment type="line" pos:start="549:29" pos:end="549:62">// m = 1 + 2 * s-&gt;top_field_first;</comment>

                            <expr_stmt pos:start="551:29" pos:end="551:59"><expr pos:start="551:29" pos:end="551:58"><name pos:start="551:29" pos:end="551:29">m</name> <operator pos:start="551:31" pos:end="551:31">=</operator> <ternary pos:start="551:33" pos:end="551:58"><condition pos:start="551:33" pos:end="551:52"><expr pos:start="551:33" pos:end="551:50"><name pos:start="551:33" pos:end="551:50"><name pos:start="551:33" pos:end="551:33">s</name><operator pos:start="551:34" pos:end="551:35">-&gt;</operator><name pos:start="551:36" pos:end="551:50">top_field_first</name></name></expr> ?</condition><then pos:start="551:54" pos:end="551:54"> <expr pos:start="551:54" pos:end="551:54"><literal type="number" pos:start="551:54" pos:end="551:54">1</literal></expr> </then><else pos:start="551:56" pos:end="551:58">: <expr pos:start="551:58" pos:end="551:58"><literal type="number" pos:start="551:58" pos:end="551:58">3</literal></expr></else></ternary></expr>;</expr_stmt>



                            <comment type="block" pos:start="555:29" pos:end="555:49">/* top -&gt; top pred */</comment>

                            <expr_stmt pos:start="557:29" pos:end="557:78"><expr pos:start="557:29" pos:end="557:77"><name pos:start="557:29" pos:end="557:42"><name pos:start="557:29" pos:end="557:29">s</name><operator pos:start="557:30" pos:end="557:31">-&gt;</operator><name pos:start="557:32" pos:end="557:33">mv</name><index pos:start="557:34" pos:end="557:36">[<expr pos:start="557:35" pos:end="557:35"><name pos:start="557:35" pos:end="557:35">i</name></expr>]</index><index pos:start="557:37" pos:end="557:39">[<expr pos:start="557:38" pos:end="557:38"><literal type="number" pos:start="557:38" pos:end="557:38">2</literal></expr>]</index><index pos:start="557:40" pos:end="557:42">[<expr pos:start="557:41" pos:end="557:41"><literal type="number" pos:start="557:41" pos:end="557:41">0</literal></expr>]</index></name> <operator pos:start="557:44" pos:end="557:44">=</operator> <operator pos:start="557:46" pos:end="557:46">(</operator><operator pos:start="557:47" pos:end="557:47">(</operator><name pos:start="557:48" pos:end="557:49">mx</name> <operator pos:start="557:51" pos:end="557:51">*</operator> <name pos:start="557:53" pos:end="557:53">m</name> <operator pos:start="557:55" pos:end="557:55">+</operator> <operator pos:start="557:57" pos:end="557:57">(</operator><name pos:start="557:58" pos:end="557:59">mx</name> <operator pos:start="557:61" pos:end="557:61">&gt;</operator> <literal type="number" pos:start="557:63" pos:end="557:63">0</literal><operator pos:start="557:64" pos:end="557:64">)</operator><operator pos:start="557:65" pos:end="557:65">)</operator> <operator pos:start="557:67" pos:end="557:68">&gt;&gt;</operator> <literal type="number" pos:start="557:70" pos:end="557:70">1</literal><operator pos:start="557:71" pos:end="557:71">)</operator> <operator pos:start="557:73" pos:end="557:73">+</operator> <name pos:start="557:75" pos:end="557:77">dmx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="559:29" pos:end="559:82"><expr pos:start="559:29" pos:end="559:81"><name pos:start="559:29" pos:end="559:42"><name pos:start="559:29" pos:end="559:29">s</name><operator pos:start="559:30" pos:end="559:31">-&gt;</operator><name pos:start="559:32" pos:end="559:33">mv</name><index pos:start="559:34" pos:end="559:36">[<expr pos:start="559:35" pos:end="559:35"><name pos:start="559:35" pos:end="559:35">i</name></expr>]</index><index pos:start="559:37" pos:end="559:39">[<expr pos:start="559:38" pos:end="559:38"><literal type="number" pos:start="559:38" pos:end="559:38">2</literal></expr>]</index><index pos:start="559:40" pos:end="559:42">[<expr pos:start="559:41" pos:end="559:41"><literal type="number" pos:start="559:41" pos:end="559:41">1</literal></expr>]</index></name> <operator pos:start="559:44" pos:end="559:44">=</operator> <operator pos:start="559:46" pos:end="559:46">(</operator><operator pos:start="559:47" pos:end="559:47">(</operator><name pos:start="559:48" pos:end="559:49">my</name> <operator pos:start="559:51" pos:end="559:51">*</operator> <name pos:start="559:53" pos:end="559:53">m</name> <operator pos:start="559:55" pos:end="559:55">+</operator> <operator pos:start="559:57" pos:end="559:57">(</operator><name pos:start="559:58" pos:end="559:59">my</name> <operator pos:start="559:61" pos:end="559:61">&gt;</operator> <literal type="number" pos:start="559:63" pos:end="559:63">0</literal><operator pos:start="559:64" pos:end="559:64">)</operator><operator pos:start="559:65" pos:end="559:65">)</operator> <operator pos:start="559:67" pos:end="559:68">&gt;&gt;</operator> <literal type="number" pos:start="559:70" pos:end="559:70">1</literal><operator pos:start="559:71" pos:end="559:71">)</operator> <operator pos:start="559:73" pos:end="559:73">+</operator> <name pos:start="559:75" pos:end="559:77">dmy</name> <operator pos:start="559:79" pos:end="559:79">-</operator> <literal type="number" pos:start="559:81" pos:end="559:81">1</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="561:29" pos:end="561:38"><expr pos:start="561:29" pos:end="561:37"><name pos:start="561:29" pos:end="561:29">m</name> <operator pos:start="561:31" pos:end="561:31">=</operator> <literal type="number" pos:start="561:33" pos:end="561:35">4</literal> <operator pos:start="561:35" pos:end="561:35">-</operator> <name pos:start="561:37" pos:end="561:37">m</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="563:29" pos:end="563:78"><expr pos:start="563:29" pos:end="563:77"><name pos:start="563:29" pos:end="563:42"><name pos:start="563:29" pos:end="563:29">s</name><operator pos:start="563:30" pos:end="563:31">-&gt;</operator><name pos:start="563:32" pos:end="563:33">mv</name><index pos:start="563:34" pos:end="563:36">[<expr pos:start="563:35" pos:end="563:35"><name pos:start="563:35" pos:end="563:35">i</name></expr>]</index><index pos:start="563:37" pos:end="563:39">[<expr pos:start="563:38" pos:end="563:38"><literal type="number" pos:start="563:38" pos:end="563:38">3</literal></expr>]</index><index pos:start="563:40" pos:end="563:42">[<expr pos:start="563:41" pos:end="563:41"><literal type="number" pos:start="563:41" pos:end="563:41">0</literal></expr>]</index></name> <operator pos:start="563:44" pos:end="563:44">=</operator> <operator pos:start="563:46" pos:end="563:46">(</operator><operator pos:start="563:47" pos:end="563:47">(</operator><name pos:start="563:48" pos:end="563:49">mx</name> <operator pos:start="563:51" pos:end="563:51">*</operator> <name pos:start="563:53" pos:end="563:53">m</name> <operator pos:start="563:55" pos:end="563:55">+</operator> <operator pos:start="563:57" pos:end="563:57">(</operator><name pos:start="563:58" pos:end="563:59">mx</name> <operator pos:start="563:61" pos:end="563:61">&gt;</operator> <literal type="number" pos:start="563:63" pos:end="563:63">0</literal><operator pos:start="563:64" pos:end="563:64">)</operator><operator pos:start="563:65" pos:end="563:65">)</operator> <operator pos:start="563:67" pos:end="563:68">&gt;&gt;</operator> <literal type="number" pos:start="563:70" pos:end="563:70">1</literal><operator pos:start="563:71" pos:end="563:71">)</operator> <operator pos:start="563:73" pos:end="563:73">+</operator> <name pos:start="563:75" pos:end="563:77">dmx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="565:29" pos:end="565:82"><expr pos:start="565:29" pos:end="565:81"><name pos:start="565:29" pos:end="565:42"><name pos:start="565:29" pos:end="565:29">s</name><operator pos:start="565:30" pos:end="565:31">-&gt;</operator><name pos:start="565:32" pos:end="565:33">mv</name><index pos:start="565:34" pos:end="565:36">[<expr pos:start="565:35" pos:end="565:35"><name pos:start="565:35" pos:end="565:35">i</name></expr>]</index><index pos:start="565:37" pos:end="565:39">[<expr pos:start="565:38" pos:end="565:38"><literal type="number" pos:start="565:38" pos:end="565:38">3</literal></expr>]</index><index pos:start="565:40" pos:end="565:42">[<expr pos:start="565:41" pos:end="565:41"><literal type="number" pos:start="565:41" pos:end="565:41">1</literal></expr>]</index></name> <operator pos:start="565:44" pos:end="565:44">=</operator> <operator pos:start="565:46" pos:end="565:46">(</operator><operator pos:start="565:47" pos:end="565:47">(</operator><name pos:start="565:48" pos:end="565:49">my</name> <operator pos:start="565:51" pos:end="565:51">*</operator> <name pos:start="565:53" pos:end="565:53">m</name> <operator pos:start="565:55" pos:end="565:55">+</operator> <operator pos:start="565:57" pos:end="565:57">(</operator><name pos:start="565:58" pos:end="565:59">my</name> <operator pos:start="565:61" pos:end="565:61">&gt;</operator> <literal type="number" pos:start="565:63" pos:end="565:63">0</literal><operator pos:start="565:64" pos:end="565:64">)</operator><operator pos:start="565:65" pos:end="565:65">)</operator> <operator pos:start="565:67" pos:end="565:68">&gt;&gt;</operator> <literal type="number" pos:start="565:70" pos:end="565:70">1</literal><operator pos:start="565:71" pos:end="565:71">)</operator> <operator pos:start="565:73" pos:end="565:73">+</operator> <name pos:start="565:75" pos:end="565:77">dmy</name> <operator pos:start="565:79" pos:end="565:79">+</operator> <literal type="number" pos:start="565:81" pos:end="565:81">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="567:27" pos:end="585:25">else <block pos:start="567:32" pos:end="585:25">{<block_content pos:start="569:29" pos:end="583:49">

                            <expr_stmt pos:start="569:29" pos:end="569:53"><expr pos:start="569:29" pos:end="569:52"><name pos:start="569:29" pos:end="569:35">mb_type</name> <operator pos:start="569:37" pos:end="569:38">|=</operator> <name pos:start="569:40" pos:end="569:52">MB_TYPE_16x16</name></expr>;</expr_stmt>



                            <expr_stmt pos:start="573:29" pos:end="573:74"><expr pos:start="573:29" pos:end="573:73"><name pos:start="573:29" pos:end="573:42"><name pos:start="573:29" pos:end="573:29">s</name><operator pos:start="573:30" pos:end="573:31">-&gt;</operator><name pos:start="573:32" pos:end="573:33">mv</name><index pos:start="573:34" pos:end="573:36">[<expr pos:start="573:35" pos:end="573:35"><name pos:start="573:35" pos:end="573:35">i</name></expr>]</index><index pos:start="573:37" pos:end="573:39">[<expr pos:start="573:38" pos:end="573:38"><literal type="number" pos:start="573:38" pos:end="573:38">2</literal></expr>]</index><index pos:start="573:40" pos:end="573:42">[<expr pos:start="573:41" pos:end="573:41"><literal type="number" pos:start="573:41" pos:end="573:41">0</literal></expr>]</index></name> <operator pos:start="573:44" pos:end="573:44">=</operator> <operator pos:start="573:46" pos:end="573:46">(</operator><operator pos:start="573:47" pos:end="573:47">(</operator><name pos:start="573:48" pos:end="573:49">mx</name> <operator pos:start="573:51" pos:end="573:51">+</operator> <operator pos:start="573:53" pos:end="573:53">(</operator><name pos:start="573:54" pos:end="573:55">mx</name> <operator pos:start="573:57" pos:end="573:57">&gt;</operator> <literal type="number" pos:start="573:59" pos:end="573:59">0</literal><operator pos:start="573:60" pos:end="573:60">)</operator><operator pos:start="573:61" pos:end="573:61">)</operator> <operator pos:start="573:63" pos:end="573:64">&gt;&gt;</operator> <literal type="number" pos:start="573:66" pos:end="573:66">1</literal><operator pos:start="573:67" pos:end="573:67">)</operator> <operator pos:start="573:69" pos:end="573:69">+</operator> <name pos:start="573:71" pos:end="573:73">dmx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="575:29" pos:end="575:74"><expr pos:start="575:29" pos:end="575:73"><name pos:start="575:29" pos:end="575:42"><name pos:start="575:29" pos:end="575:29">s</name><operator pos:start="575:30" pos:end="575:31">-&gt;</operator><name pos:start="575:32" pos:end="575:33">mv</name><index pos:start="575:34" pos:end="575:36">[<expr pos:start="575:35" pos:end="575:35"><name pos:start="575:35" pos:end="575:35">i</name></expr>]</index><index pos:start="575:37" pos:end="575:39">[<expr pos:start="575:38" pos:end="575:38"><literal type="number" pos:start="575:38" pos:end="575:38">2</literal></expr>]</index><index pos:start="575:40" pos:end="575:42">[<expr pos:start="575:41" pos:end="575:41"><literal type="number" pos:start="575:41" pos:end="575:41">1</literal></expr>]</index></name> <operator pos:start="575:44" pos:end="575:44">=</operator> <operator pos:start="575:46" pos:end="575:46">(</operator><operator pos:start="575:47" pos:end="575:47">(</operator><name pos:start="575:48" pos:end="575:49">my</name> <operator pos:start="575:51" pos:end="575:51">+</operator> <operator pos:start="575:53" pos:end="575:53">(</operator><name pos:start="575:54" pos:end="575:55">my</name> <operator pos:start="575:57" pos:end="575:57">&gt;</operator> <literal type="number" pos:start="575:59" pos:end="575:59">0</literal><operator pos:start="575:60" pos:end="575:60">)</operator><operator pos:start="575:61" pos:end="575:61">)</operator> <operator pos:start="575:63" pos:end="575:64">&gt;&gt;</operator> <literal type="number" pos:start="575:66" pos:end="575:66">1</literal><operator pos:start="575:67" pos:end="575:67">)</operator> <operator pos:start="575:69" pos:end="575:69">+</operator> <name pos:start="575:71" pos:end="575:73">dmy</name></expr>;</expr_stmt>

                            <if_stmt pos:start="577:29" pos:end="583:49"><if pos:start="577:29" pos:end="579:49">if <condition pos:start="577:32" pos:end="577:71">(<expr pos:start="577:33" pos:end="577:70"><name pos:start="577:33" pos:end="577:52"><name pos:start="577:33" pos:end="577:33">s</name><operator pos:start="577:34" pos:end="577:35">-&gt;</operator><name pos:start="577:36" pos:end="577:52">picture_structure</name></name> <operator pos:start="577:54" pos:end="577:55">==</operator> <name pos:start="577:57" pos:end="577:70">PICT_TOP_FIELD</name></expr>)</condition><block type="pseudo" pos:start="579:33" pos:end="579:49"><block_content pos:start="579:33" pos:end="579:49">

                                <expr_stmt pos:start="579:33" pos:end="579:49"><expr pos:start="579:33" pos:end="579:48"><name pos:start="579:33" pos:end="579:46"><name pos:start="579:33" pos:end="579:33">s</name><operator pos:start="579:34" pos:end="579:35">-&gt;</operator><name pos:start="579:36" pos:end="579:37">mv</name><index pos:start="579:38" pos:end="579:40">[<expr pos:start="579:39" pos:end="579:39"><name pos:start="579:39" pos:end="579:39">i</name></expr>]</index><index pos:start="579:41" pos:end="579:43">[<expr pos:start="579:42" pos:end="579:42"><literal type="number" pos:start="579:42" pos:end="579:42">2</literal></expr>]</index><index pos:start="579:44" pos:end="579:46">[<expr pos:start="579:45" pos:end="579:45"><literal type="number" pos:start="579:45" pos:end="579:45">1</literal></expr>]</index></name><operator pos:start="579:47" pos:end="579:48">--</operator></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="581:29" pos:end="583:49">else<block type="pseudo" pos:start="583:33" pos:end="583:49"><block_content pos:start="583:33" pos:end="583:49">

                                <expr_stmt pos:start="583:33" pos:end="583:49"><expr pos:start="583:33" pos:end="583:48"><name pos:start="583:33" pos:end="583:46"><name pos:start="583:33" pos:end="583:33">s</name><operator pos:start="583:34" pos:end="583:35">-&gt;</operator><name pos:start="583:36" pos:end="583:37">mv</name><index pos:start="583:38" pos:end="583:40">[<expr pos:start="583:39" pos:end="583:39"><name pos:start="583:39" pos:end="583:39">i</name></expr>]</index><index pos:start="583:41" pos:end="583:43">[<expr pos:start="583:42" pos:end="583:42"><literal type="number" pos:start="583:42" pos:end="583:42">2</literal></expr>]</index><index pos:start="583:44" pos:end="583:46">[<expr pos:start="583:45" pos:end="583:45"><literal type="number" pos:start="583:45" pos:end="583:45">1</literal></expr>]</index></name><operator pos:start="583:47" pos:end="583:48">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                <break pos:start="591:17" pos:end="591:22">break;</break>

            <default pos:start="593:13" pos:end="593:20">default:</default>

                <expr_stmt pos:start="595:17" pos:end="595:94"><expr pos:start="595:17" pos:end="595:93"><call pos:start="595:17" pos:end="595:93"><name pos:start="595:17" pos:end="595:22">av_log</name><argument_list pos:start="595:23" pos:end="595:93">(<argument pos:start="595:24" pos:end="595:31"><expr pos:start="595:24" pos:end="595:31"><name pos:start="595:24" pos:end="595:31"><name pos:start="595:24" pos:end="595:24">s</name><operator pos:start="595:25" pos:end="595:26">-&gt;</operator><name pos:start="595:27" pos:end="595:31">avctx</name></name></expr></argument>, <argument pos:start="595:34" pos:end="595:45"><expr pos:start="595:34" pos:end="595:45"><name pos:start="595:34" pos:end="595:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="595:48" pos:end="595:74"><expr pos:start="595:48" pos:end="595:74"><literal type="string" pos:start="595:48" pos:end="595:74">"00 motion_type at %d %d\n"</literal></expr></argument>, <argument pos:start="595:77" pos:end="595:83"><expr pos:start="595:77" pos:end="595:83"><name pos:start="595:77" pos:end="595:83"><name pos:start="595:77" pos:end="595:77">s</name><operator pos:start="595:78" pos:end="595:79">-&gt;</operator><name pos:start="595:80" pos:end="595:83">mb_x</name></name></expr></argument>, <argument pos:start="595:86" pos:end="595:92"><expr pos:start="595:86" pos:end="595:92"><name pos:start="595:86" pos:end="595:92"><name pos:start="595:86" pos:end="595:86">s</name><operator pos:start="595:87" pos:end="595:88">-&gt;</operator><name pos:start="595:89" pos:end="595:92">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="597:17" pos:end="597:26">return <expr pos:start="597:24" pos:end="597:25"><operator pos:start="597:24" pos:end="597:24">-</operator><literal type="number" pos:start="597:25" pos:end="597:25">1</literal></expr>;</return>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="605:9" pos:end="605:24"><expr pos:start="605:9" pos:end="605:23"><name pos:start="605:9" pos:end="605:19"><name pos:start="605:9" pos:end="605:9">s</name><operator pos:start="605:10" pos:end="605:11">-&gt;</operator><name pos:start="605:12" pos:end="605:19">mb_intra</name></name> <operator pos:start="605:21" pos:end="605:21">=</operator> <literal type="number" pos:start="605:23" pos:end="605:23">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="607:9" pos:end="747:9"><if pos:start="607:9" pos:end="741:9">if <condition pos:start="607:12" pos:end="607:29">(<expr pos:start="607:13" pos:end="607:28"><call pos:start="607:13" pos:end="607:28"><name pos:start="607:13" pos:end="607:19">HAS_CBP</name><argument_list pos:start="607:20" pos:end="607:28">(<argument pos:start="607:21" pos:end="607:27"><expr pos:start="607:21" pos:end="607:27"><name pos:start="607:21" pos:end="607:27">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="607:31" pos:end="741:9">{<block_content pos:start="609:13" pos:end="739:13">

            <expr_stmt pos:start="609:13" pos:end="609:45"><expr pos:start="609:13" pos:end="609:44"><call pos:start="609:13" pos:end="609:44"><name pos:start="609:13" pos:end="609:31"><name pos:start="609:13" pos:end="609:13">s</name><operator pos:start="609:14" pos:end="609:15">-&gt;</operator><name pos:start="609:16" pos:end="609:18">dsp</name><operator pos:start="609:19" pos:end="609:19">.</operator><name pos:start="609:20" pos:end="609:31">clear_blocks</name></name><argument_list pos:start="609:32" pos:end="609:44">(<argument pos:start="609:33" pos:end="609:43"><expr pos:start="609:33" pos:end="609:43"><name pos:start="609:33" pos:end="609:43"><name pos:start="609:33" pos:end="609:33">s</name><operator pos:start="609:34" pos:end="609:35">-&gt;</operator><name pos:start="609:36" pos:end="609:40">block</name><index pos:start="609:41" pos:end="609:43">[<expr pos:start="609:42" pos:end="609:42"><literal type="number" pos:start="609:42" pos:end="609:42">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="613:13" pos:end="613:73"><expr pos:start="613:13" pos:end="613:72"><name pos:start="613:13" pos:end="613:15">cbp</name> <operator pos:start="613:17" pos:end="613:17">=</operator> <call pos:start="613:19" pos:end="613:72"><name pos:start="613:19" pos:end="613:26">get_vlc2</name><argument_list pos:start="613:27" pos:end="613:72">(<argument pos:start="613:28" pos:end="613:33"><expr pos:start="613:28" pos:end="613:33"><operator pos:start="613:28" pos:end="613:28">&amp;</operator><name pos:start="613:29" pos:end="613:33"><name pos:start="613:29" pos:end="613:29">s</name><operator pos:start="613:30" pos:end="613:31">-&gt;</operator><name pos:start="613:32" pos:end="613:33">gb</name></name></expr></argument>, <argument pos:start="613:36" pos:end="613:51"><expr pos:start="613:36" pos:end="613:51"><name pos:start="613:36" pos:end="613:51"><name pos:start="613:36" pos:end="613:45">mb_pat_vlc</name><operator pos:start="613:46" pos:end="613:46">.</operator><name pos:start="613:47" pos:end="613:51">table</name></name></expr></argument>, <argument pos:start="613:54" pos:end="613:68"><expr pos:start="613:54" pos:end="613:68"><name pos:start="613:54" pos:end="613:68">MB_PAT_VLC_BITS</name></expr></argument>, <argument pos:start="613:71" pos:end="613:71"><expr pos:start="613:71" pos:end="613:71"><literal type="number" pos:start="613:71" pos:end="613:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="615:13" pos:end="623:13"><if pos:start="615:13" pos:end="623:13">if <condition pos:start="615:16" pos:end="615:35">(<expr pos:start="615:17" pos:end="615:34"><name pos:start="615:17" pos:end="615:30">mb_block_count</name> <operator pos:start="615:32" pos:end="615:32">&gt;</operator> <literal type="number" pos:start="615:34" pos:end="615:34">6</literal></expr>)</condition> <block pos:start="615:37" pos:end="623:13">{<block_content pos:start="617:18" pos:end="621:50">

                 <expr_stmt pos:start="617:18" pos:end="617:44"><expr pos:start="617:18" pos:end="617:43"><name pos:start="617:18" pos:end="617:20">cbp</name> <operator pos:start="617:22" pos:end="617:24">&lt;&lt;=</operator> <name pos:start="617:26" pos:end="617:39">mb_block_count</name> <operator pos:start="617:41" pos:end="617:41">-</operator> <literal type="number" pos:start="617:43" pos:end="617:43">6</literal></expr>;</expr_stmt>

                 <expr_stmt pos:start="619:18" pos:end="619:62"><expr pos:start="619:18" pos:end="619:61"><name pos:start="619:18" pos:end="619:20">cbp</name>  <operator pos:start="619:23" pos:end="619:24">|=</operator> <call pos:start="619:26" pos:end="619:61"><name pos:start="619:26" pos:end="619:33">get_bits</name><argument_list pos:start="619:34" pos:end="619:61">(<argument pos:start="619:35" pos:end="619:40"><expr pos:start="619:35" pos:end="619:40"><operator pos:start="619:35" pos:end="619:35">&amp;</operator><name pos:start="619:36" pos:end="619:40"><name pos:start="619:36" pos:end="619:36">s</name><operator pos:start="619:37" pos:end="619:38">-&gt;</operator><name pos:start="619:39" pos:end="619:40">gb</name></name></expr></argument>, <argument pos:start="619:43" pos:end="619:60"><expr pos:start="619:43" pos:end="619:60"><name pos:start="619:43" pos:end="619:56">mb_block_count</name> <operator pos:start="619:58" pos:end="619:58">-</operator> <literal type="number" pos:start="619:60" pos:end="619:60">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                 <expr_stmt pos:start="621:18" pos:end="621:50"><expr pos:start="621:18" pos:end="621:49"><call pos:start="621:18" pos:end="621:49"><name pos:start="621:18" pos:end="621:36"><name pos:start="621:18" pos:end="621:18">s</name><operator pos:start="621:19" pos:end="621:20">-&gt;</operator><name pos:start="621:21" pos:end="621:23">dsp</name><operator pos:start="621:24" pos:end="621:24">.</operator><name pos:start="621:25" pos:end="621:36">clear_blocks</name></name><argument_list pos:start="621:37" pos:end="621:49">(<argument pos:start="621:38" pos:end="621:48"><expr pos:start="621:38" pos:end="621:48"><name pos:start="621:38" pos:end="621:48"><name pos:start="621:38" pos:end="621:38">s</name><operator pos:start="621:39" pos:end="621:40">-&gt;</operator><name pos:start="621:41" pos:end="621:45">block</name><index pos:start="621:46" pos:end="621:48">[<expr pos:start="621:47" pos:end="621:47"><literal type="number" pos:start="621:47" pos:end="621:47">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="625:13" pos:end="631:13"><if pos:start="625:13" pos:end="631:13">if <condition pos:start="625:16" pos:end="625:25">(<expr pos:start="625:17" pos:end="625:24"><name pos:start="625:17" pos:end="625:19">cbp</name> <operator pos:start="625:21" pos:end="625:22">&lt;=</operator> <literal type="number" pos:start="625:24" pos:end="625:24">0</literal></expr>)</condition> <block pos:start="625:27" pos:end="631:13">{<block_content pos:start="627:17" pos:end="629:26">

                <expr_stmt pos:start="627:17" pos:end="627:91"><expr pos:start="627:17" pos:end="627:90"><call pos:start="627:17" pos:end="627:90"><name pos:start="627:17" pos:end="627:22">av_log</name><argument_list pos:start="627:23" pos:end="627:90">(<argument pos:start="627:24" pos:end="627:31"><expr pos:start="627:24" pos:end="627:31"><name pos:start="627:24" pos:end="627:31"><name pos:start="627:24" pos:end="627:24">s</name><operator pos:start="627:25" pos:end="627:26">-&gt;</operator><name pos:start="627:27" pos:end="627:31">avctx</name></name></expr></argument>, <argument pos:start="627:34" pos:end="627:45"><expr pos:start="627:34" pos:end="627:45"><name pos:start="627:34" pos:end="627:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="627:48" pos:end="627:71"><expr pos:start="627:48" pos:end="627:71"><literal type="string" pos:start="627:48" pos:end="627:71">"invalid cbp at %d %d\n"</literal></expr></argument>, <argument pos:start="627:74" pos:end="627:80"><expr pos:start="627:74" pos:end="627:80"><name pos:start="627:74" pos:end="627:80"><name pos:start="627:74" pos:end="627:74">s</name><operator pos:start="627:75" pos:end="627:76">-&gt;</operator><name pos:start="627:77" pos:end="627:80">mb_x</name></name></expr></argument>, <argument pos:start="627:83" pos:end="627:89"><expr pos:start="627:83" pos:end="627:89"><name pos:start="627:83" pos:end="627:89"><name pos:start="627:83" pos:end="627:83">s</name><operator pos:start="627:84" pos:end="627:85">-&gt;</operator><name pos:start="627:86" pos:end="627:89">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="629:17" pos:end="629:26">return <expr pos:start="629:24" pos:end="629:25"><operator pos:start="629:24" pos:end="629:24">-</operator><literal type="number" pos:start="629:25" pos:end="629:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <comment type="line" pos:start="635:13" pos:end="635:49">//if 1, we memcpy blocks in xvmcvideo</comment>

            <if_stmt pos:start="637:13" pos:end="647:13"><if pos:start="637:13" pos:end="647:13">if <condition pos:start="637:16" pos:end="637:76">(<expr pos:start="637:17" pos:end="637:75"><name pos:start="637:17" pos:end="637:40">CONFIG_MPEG_XVMC_DECODER</name> <operator pos:start="637:42" pos:end="637:43">&amp;&amp;</operator> <name pos:start="637:45" pos:end="637:71"><name pos:start="637:45" pos:end="637:45">s</name><operator pos:start="637:46" pos:end="637:47">-&gt;</operator><name pos:start="637:48" pos:end="637:52">avctx</name><operator pos:start="637:53" pos:end="637:54">-&gt;</operator><name pos:start="637:55" pos:end="637:71">xvmc_acceleration</name></name> <operator pos:start="637:73" pos:end="637:73">&gt;</operator> <literal type="number" pos:start="637:75" pos:end="637:75">1</literal></expr>)</condition> <block pos:start="637:78" pos:end="647:13">{<block_content pos:start="639:17" pos:end="645:17">

                <expr_stmt pos:start="639:17" pos:end="639:45"><expr pos:start="639:17" pos:end="639:44"><call pos:start="639:17" pos:end="639:44"><name pos:start="639:17" pos:end="639:36">ff_xvmc_pack_pblocks</name><argument_list pos:start="639:37" pos:end="639:44">(<argument pos:start="639:38" pos:end="639:38"><expr pos:start="639:38" pos:end="639:38"><name pos:start="639:38" pos:end="639:38">s</name></expr></argument>, <argument pos:start="639:41" pos:end="639:43"><expr pos:start="639:41" pos:end="639:43"><name pos:start="639:41" pos:end="639:43">cbp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="641:17" pos:end="645:17"><if pos:start="641:17" pos:end="645:17">if <condition pos:start="641:20" pos:end="641:31">(<expr pos:start="641:21" pos:end="641:30"><name pos:start="641:21" pos:end="641:30"><name pos:start="641:21" pos:end="641:21">s</name><operator pos:start="641:22" pos:end="641:23">-&gt;</operator><name pos:start="641:24" pos:end="641:30">swap_uv</name></name></expr>)</condition> <block pos:start="641:33" pos:end="645:17">{<block_content pos:start="643:21" pos:end="643:35">

                    <expr_stmt pos:start="643:21" pos:end="643:35"><expr pos:start="643:21" pos:end="643:34"><call pos:start="643:21" pos:end="643:34"><name pos:start="643:21" pos:end="643:31">exchange_uv</name><argument_list pos:start="643:32" pos:end="643:34">(<argument pos:start="643:33" pos:end="643:33"><expr pos:start="643:33" pos:end="643:33"><name pos:start="643:33" pos:end="643:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="651:13" pos:end="739:13"><if pos:start="651:13" pos:end="697:13">if <condition pos:start="651:16" pos:end="651:51">(<expr pos:start="651:17" pos:end="651:50"><name pos:start="651:17" pos:end="651:27"><name pos:start="651:17" pos:end="651:17">s</name><operator pos:start="651:18" pos:end="651:19">-&gt;</operator><name pos:start="651:20" pos:end="651:27">codec_id</name></name> <operator pos:start="651:29" pos:end="651:30">==</operator> <name pos:start="651:32" pos:end="651:50">CODEC_ID_MPEG2VIDEO</name></expr>)</condition> <block pos:start="651:53" pos:end="697:13">{<block_content pos:start="653:17" pos:end="695:17">

                <if_stmt pos:start="653:17" pos:end="695:17"><if pos:start="653:17" pos:end="671:17">if <condition pos:start="653:20" pos:end="653:49">(<expr pos:start="653:21" pos:end="653:48"><name pos:start="653:21" pos:end="653:29"><name pos:start="653:21" pos:end="653:21">s</name><operator pos:start="653:22" pos:end="653:23">-&gt;</operator><name pos:start="653:24" pos:end="653:29">flags2</name></name> <operator pos:start="653:31" pos:end="653:31">&amp;</operator> <name pos:start="653:33" pos:end="653:48">CODEC_FLAG2_FAST</name></expr>)</condition> <block pos:start="653:51" pos:end="671:17">{<block_content pos:start="655:21" pos:end="669:21">

                    <for pos:start="655:21" pos:end="669:21">for <control pos:start="655:25" pos:end="655:43">(<init pos:start="655:26" pos:end="655:31"><expr pos:start="655:26" pos:end="655:30"><name pos:start="655:26" pos:end="655:26">i</name> <operator pos:start="655:28" pos:end="655:28">=</operator> <literal type="number" pos:start="655:30" pos:end="655:30">0</literal></expr>;</init> <condition pos:start="655:33" pos:end="655:38"><expr pos:start="655:33" pos:end="655:37"><name pos:start="655:33" pos:end="655:33">i</name> <operator pos:start="655:35" pos:end="655:35">&lt;</operator> <literal type="number" pos:start="655:37" pos:end="655:37">6</literal></expr>;</condition> <incr pos:start="655:40" pos:end="655:42"><expr pos:start="655:40" pos:end="655:42"><name pos:start="655:40" pos:end="655:40">i</name><operator pos:start="655:41" pos:end="655:42">++</operator></expr></incr>)</control> <block pos:start="655:45" pos:end="669:21">{<block_content pos:start="657:25" pos:end="667:35">

                        <if_stmt pos:start="657:25" pos:end="665:25"><if pos:start="657:25" pos:end="661:25">if <condition pos:start="657:28" pos:end="657:37">(<expr pos:start="657:29" pos:end="657:36"><name pos:start="657:29" pos:end="657:31">cbp</name> <operator pos:start="657:33" pos:end="657:33">&amp;</operator> <literal type="number" pos:start="657:35" pos:end="657:36">32</literal></expr>)</condition> <block pos:start="657:39" pos:end="661:25">{<block_content pos:start="659:29" pos:end="659:84">

                            <expr_stmt pos:start="659:29" pos:end="659:84"><expr pos:start="659:29" pos:end="659:83"><call pos:start="659:29" pos:end="659:83"><name pos:start="659:29" pos:end="659:61">mpeg2_fast_decode_block_non_intra</name><argument_list pos:start="659:62" pos:end="659:83">(<argument pos:start="659:63" pos:end="659:63"><expr pos:start="659:63" pos:end="659:63"><name pos:start="659:63" pos:end="659:63">s</name></expr></argument>, <argument pos:start="659:66" pos:end="659:79"><expr pos:start="659:66" pos:end="659:79"><operator pos:start="659:66" pos:end="659:66">*</operator><name pos:start="659:67" pos:end="659:79"><name pos:start="659:67" pos:end="659:67">s</name><operator pos:start="659:68" pos:end="659:69">-&gt;</operator><name pos:start="659:70" pos:end="659:76">pblocks</name><index pos:start="659:77" pos:end="659:79">[<expr pos:start="659:78" pos:end="659:78"><name pos:start="659:78" pos:end="659:78">i</name></expr>]</index></name></expr></argument>, <argument pos:start="659:82" pos:end="659:82"><expr pos:start="659:82" pos:end="659:82"><name pos:start="659:82" pos:end="659:82">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="661:27" pos:end="665:25">else <block pos:start="661:32" pos:end="665:25">{<block_content pos:start="663:29" pos:end="663:56">

                            <expr_stmt pos:start="663:29" pos:end="663:56"><expr pos:start="663:29" pos:end="663:55"><name pos:start="663:29" pos:end="663:50"><name pos:start="663:29" pos:end="663:29">s</name><operator pos:start="663:30" pos:end="663:31">-&gt;</operator><name pos:start="663:32" pos:end="663:47">block_last_index</name><index pos:start="663:48" pos:end="663:50">[<expr pos:start="663:49" pos:end="663:49"><name pos:start="663:49" pos:end="663:49">i</name></expr>]</index></name> <operator pos:start="663:52" pos:end="663:52">=</operator> <operator pos:start="663:54" pos:end="663:54">-</operator><literal type="number" pos:start="663:55" pos:end="663:55">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="667:25" pos:end="667:35"><expr pos:start="667:25" pos:end="667:34"><name pos:start="667:25" pos:end="667:27">cbp</name> <operator pos:start="667:29" pos:end="667:30">+=</operator> <name pos:start="667:32" pos:end="667:34">cbp</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="671:19" pos:end="695:17">else <block pos:start="671:24" pos:end="695:17">{<block_content pos:start="673:21" pos:end="693:21">

                    <expr_stmt pos:start="673:21" pos:end="673:46"><expr pos:start="673:21" pos:end="673:45"><name pos:start="673:21" pos:end="673:23">cbp</name> <operator pos:start="673:25" pos:end="673:27">&lt;&lt;=</operator> <literal type="number" pos:start="673:29" pos:end="673:31">12</literal><operator pos:start="673:31" pos:end="673:31">-</operator><name pos:start="673:32" pos:end="673:45">mb_block_count</name></expr>;</expr_stmt>



                    <for pos:start="677:21" pos:end="693:21">for <control pos:start="677:25" pos:end="677:56">(<init pos:start="677:26" pos:end="677:31"><expr pos:start="677:26" pos:end="677:30"><name pos:start="677:26" pos:end="677:26">i</name> <operator pos:start="677:28" pos:end="677:28">=</operator> <literal type="number" pos:start="677:30" pos:end="677:30">0</literal></expr>;</init> <condition pos:start="677:33" pos:end="677:51"><expr pos:start="677:33" pos:end="677:50"><name pos:start="677:33" pos:end="677:33">i</name> <operator pos:start="677:35" pos:end="677:35">&lt;</operator> <name pos:start="677:37" pos:end="677:50">mb_block_count</name></expr>;</condition> <incr pos:start="677:53" pos:end="677:55"><expr pos:start="677:53" pos:end="677:55"><name pos:start="677:53" pos:end="677:53">i</name><operator pos:start="677:54" pos:end="677:55">++</operator></expr></incr>)</control> <block pos:start="677:58" pos:end="693:21">{<block_content pos:start="679:25" pos:end="691:35">

                        <if_stmt pos:start="679:25" pos:end="689:25"><if pos:start="679:25" pos:end="685:25">if <condition pos:start="679:28" pos:end="679:44">(<expr pos:start="679:29" pos:end="679:43"><name pos:start="679:29" pos:end="679:31">cbp</name> <operator pos:start="679:33" pos:end="679:33">&amp;</operator> <operator pos:start="679:35" pos:end="679:35">(</operator><literal type="number" pos:start="679:36" pos:end="679:36">1</literal> <operator pos:start="679:38" pos:end="679:39">&lt;&lt;</operator> <literal type="number" pos:start="679:41" pos:end="679:42">11</literal><operator pos:start="679:43" pos:end="679:43">)</operator></expr>)</condition> <block pos:start="679:46" pos:end="685:25">{<block_content pos:start="681:29" pos:end="683:42">

                            <if_stmt pos:start="681:29" pos:end="683:42"><if pos:start="681:29" pos:end="683:42">if <condition pos:start="681:32" pos:end="681:87">(<expr pos:start="681:33" pos:end="681:86"><call pos:start="681:33" pos:end="681:82"><name pos:start="681:33" pos:end="681:60">mpeg2_decode_block_non_intra</name><argument_list pos:start="681:61" pos:end="681:82">(<argument pos:start="681:62" pos:end="681:62"><expr pos:start="681:62" pos:end="681:62"><name pos:start="681:62" pos:end="681:62">s</name></expr></argument>, <argument pos:start="681:65" pos:end="681:78"><expr pos:start="681:65" pos:end="681:78"><operator pos:start="681:65" pos:end="681:65">*</operator><name pos:start="681:66" pos:end="681:78"><name pos:start="681:66" pos:end="681:66">s</name><operator pos:start="681:67" pos:end="681:68">-&gt;</operator><name pos:start="681:69" pos:end="681:75">pblocks</name><index pos:start="681:76" pos:end="681:78">[<expr pos:start="681:77" pos:end="681:77"><name pos:start="681:77" pos:end="681:77">i</name></expr>]</index></name></expr></argument>, <argument pos:start="681:81" pos:end="681:81"><expr pos:start="681:81" pos:end="681:81"><name pos:start="681:81" pos:end="681:81">i</name></expr></argument>)</argument_list></call> <operator pos:start="681:84" pos:end="681:84">&lt;</operator> <literal type="number" pos:start="681:86" pos:end="681:86">0</literal></expr>)</condition><block type="pseudo" pos:start="683:33" pos:end="683:42"><block_content pos:start="683:33" pos:end="683:42">

                                <return pos:start="683:33" pos:end="683:42">return <expr pos:start="683:40" pos:end="683:41"><operator pos:start="683:40" pos:end="683:40">-</operator><literal type="number" pos:start="683:41" pos:end="683:41">1</literal></expr>;</return></block_content></block></if></if_stmt>

                        </block_content>}</block></if> <else pos:start="685:27" pos:end="689:25">else <block pos:start="685:32" pos:end="689:25">{<block_content pos:start="687:29" pos:end="687:56">

                            <expr_stmt pos:start="687:29" pos:end="687:56"><expr pos:start="687:29" pos:end="687:55"><name pos:start="687:29" pos:end="687:50"><name pos:start="687:29" pos:end="687:29">s</name><operator pos:start="687:30" pos:end="687:31">-&gt;</operator><name pos:start="687:32" pos:end="687:47">block_last_index</name><index pos:start="687:48" pos:end="687:50">[<expr pos:start="687:49" pos:end="687:49"><name pos:start="687:49" pos:end="687:49">i</name></expr>]</index></name> <operator pos:start="687:52" pos:end="687:52">=</operator> <operator pos:start="687:54" pos:end="687:54">-</operator><literal type="number" pos:start="687:55" pos:end="687:55">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="691:25" pos:end="691:35"><expr pos:start="691:25" pos:end="691:34"><name pos:start="691:25" pos:end="691:27">cbp</name> <operator pos:start="691:29" pos:end="691:30">+=</operator> <name pos:start="691:32" pos:end="691:34">cbp</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="697:15" pos:end="739:13">else <block pos:start="697:20" pos:end="739:13">{<block_content pos:start="699:17" pos:end="737:17">

                <if_stmt pos:start="699:17" pos:end="737:17"><if pos:start="699:17" pos:end="717:17">if <condition pos:start="699:20" pos:end="699:49">(<expr pos:start="699:21" pos:end="699:48"><name pos:start="699:21" pos:end="699:29"><name pos:start="699:21" pos:end="699:21">s</name><operator pos:start="699:22" pos:end="699:23">-&gt;</operator><name pos:start="699:24" pos:end="699:29">flags2</name></name> <operator pos:start="699:31" pos:end="699:31">&amp;</operator> <name pos:start="699:33" pos:end="699:48">CODEC_FLAG2_FAST</name></expr>)</condition> <block pos:start="699:51" pos:end="717:17">{<block_content pos:start="701:21" pos:end="715:21">

                    <for pos:start="701:21" pos:end="715:21">for <control pos:start="701:25" pos:end="701:43">(<init pos:start="701:26" pos:end="701:31"><expr pos:start="701:26" pos:end="701:30"><name pos:start="701:26" pos:end="701:26">i</name> <operator pos:start="701:28" pos:end="701:28">=</operator> <literal type="number" pos:start="701:30" pos:end="701:30">0</literal></expr>;</init> <condition pos:start="701:33" pos:end="701:38"><expr pos:start="701:33" pos:end="701:37"><name pos:start="701:33" pos:end="701:33">i</name> <operator pos:start="701:35" pos:end="701:35">&lt;</operator> <literal type="number" pos:start="701:37" pos:end="701:37">6</literal></expr>;</condition> <incr pos:start="701:40" pos:end="701:42"><expr pos:start="701:40" pos:end="701:42"><name pos:start="701:40" pos:end="701:40">i</name><operator pos:start="701:41" pos:end="701:42">++</operator></expr></incr>)</control> <block pos:start="701:45" pos:end="715:21">{<block_content pos:start="703:25" pos:end="713:35">

                        <if_stmt pos:start="703:25" pos:end="711:25"><if pos:start="703:25" pos:end="707:25">if <condition pos:start="703:28" pos:end="703:37">(<expr pos:start="703:29" pos:end="703:36"><name pos:start="703:29" pos:end="703:31">cbp</name> <operator pos:start="703:33" pos:end="703:33">&amp;</operator> <literal type="number" pos:start="703:35" pos:end="703:36">32</literal></expr>)</condition> <block pos:start="703:39" pos:end="707:25">{<block_content pos:start="705:29" pos:end="705:80">

                            <expr_stmt pos:start="705:29" pos:end="705:80"><expr pos:start="705:29" pos:end="705:79"><call pos:start="705:29" pos:end="705:79"><name pos:start="705:29" pos:end="705:57">mpeg1_fast_decode_block_inter</name><argument_list pos:start="705:58" pos:end="705:79">(<argument pos:start="705:59" pos:end="705:59"><expr pos:start="705:59" pos:end="705:59"><name pos:start="705:59" pos:end="705:59">s</name></expr></argument>, <argument pos:start="705:62" pos:end="705:75"><expr pos:start="705:62" pos:end="705:75"><operator pos:start="705:62" pos:end="705:62">*</operator><name pos:start="705:63" pos:end="705:75"><name pos:start="705:63" pos:end="705:63">s</name><operator pos:start="705:64" pos:end="705:65">-&gt;</operator><name pos:start="705:66" pos:end="705:72">pblocks</name><index pos:start="705:73" pos:end="705:75">[<expr pos:start="705:74" pos:end="705:74"><name pos:start="705:74" pos:end="705:74">i</name></expr>]</index></name></expr></argument>, <argument pos:start="705:78" pos:end="705:78"><expr pos:start="705:78" pos:end="705:78"><name pos:start="705:78" pos:end="705:78">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="707:27" pos:end="711:25">else <block pos:start="707:32" pos:end="711:25">{<block_content pos:start="709:29" pos:end="709:56">

                            <expr_stmt pos:start="709:29" pos:end="709:56"><expr pos:start="709:29" pos:end="709:55"><name pos:start="709:29" pos:end="709:50"><name pos:start="709:29" pos:end="709:29">s</name><operator pos:start="709:30" pos:end="709:31">-&gt;</operator><name pos:start="709:32" pos:end="709:47">block_last_index</name><index pos:start="709:48" pos:end="709:50">[<expr pos:start="709:49" pos:end="709:49"><name pos:start="709:49" pos:end="709:49">i</name></expr>]</index></name> <operator pos:start="709:52" pos:end="709:52">=</operator> <operator pos:start="709:54" pos:end="709:54">-</operator><literal type="number" pos:start="709:55" pos:end="709:55">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="713:25" pos:end="713:35"><expr pos:start="713:25" pos:end="713:34"><name pos:start="713:25" pos:end="713:27">cbp</name> <operator pos:start="713:29" pos:end="713:30">+=</operator> <name pos:start="713:32" pos:end="713:34">cbp</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="717:19" pos:end="737:17">else <block pos:start="717:24" pos:end="737:17">{<block_content pos:start="719:21" pos:end="735:21">

                    <for pos:start="719:21" pos:end="735:21">for <control pos:start="719:25" pos:end="719:43">(<init pos:start="719:26" pos:end="719:31"><expr pos:start="719:26" pos:end="719:30"><name pos:start="719:26" pos:end="719:26">i</name> <operator pos:start="719:28" pos:end="719:28">=</operator> <literal type="number" pos:start="719:30" pos:end="719:30">0</literal></expr>;</init> <condition pos:start="719:33" pos:end="719:38"><expr pos:start="719:33" pos:end="719:37"><name pos:start="719:33" pos:end="719:33">i</name> <operator pos:start="719:35" pos:end="719:35">&lt;</operator> <literal type="number" pos:start="719:37" pos:end="719:37">6</literal></expr>;</condition> <incr pos:start="719:40" pos:end="719:42"><expr pos:start="719:40" pos:end="719:42"><name pos:start="719:40" pos:end="719:40">i</name><operator pos:start="719:41" pos:end="719:42">++</operator></expr></incr>)</control> <block pos:start="719:45" pos:end="735:21">{<block_content pos:start="721:25" pos:end="733:35">

                        <if_stmt pos:start="721:25" pos:end="731:25"><if pos:start="721:25" pos:end="727:25">if <condition pos:start="721:28" pos:end="721:37">(<expr pos:start="721:29" pos:end="721:36"><name pos:start="721:29" pos:end="721:31">cbp</name> <operator pos:start="721:33" pos:end="721:33">&amp;</operator> <literal type="number" pos:start="721:35" pos:end="721:36">32</literal></expr>)</condition> <block pos:start="721:39" pos:end="727:25">{<block_content pos:start="723:29" pos:end="725:42">

                            <if_stmt pos:start="723:29" pos:end="725:42"><if pos:start="723:29" pos:end="725:42">if <condition pos:start="723:32" pos:end="723:83">(<expr pos:start="723:33" pos:end="723:82"><call pos:start="723:33" pos:end="723:78"><name pos:start="723:33" pos:end="723:56">mpeg1_decode_block_inter</name><argument_list pos:start="723:57" pos:end="723:78">(<argument pos:start="723:58" pos:end="723:58"><expr pos:start="723:58" pos:end="723:58"><name pos:start="723:58" pos:end="723:58">s</name></expr></argument>, <argument pos:start="723:61" pos:end="723:74"><expr pos:start="723:61" pos:end="723:74"><operator pos:start="723:61" pos:end="723:61">*</operator><name pos:start="723:62" pos:end="723:74"><name pos:start="723:62" pos:end="723:62">s</name><operator pos:start="723:63" pos:end="723:64">-&gt;</operator><name pos:start="723:65" pos:end="723:71">pblocks</name><index pos:start="723:72" pos:end="723:74">[<expr pos:start="723:73" pos:end="723:73"><name pos:start="723:73" pos:end="723:73">i</name></expr>]</index></name></expr></argument>, <argument pos:start="723:77" pos:end="723:77"><expr pos:start="723:77" pos:end="723:77"><name pos:start="723:77" pos:end="723:77">i</name></expr></argument>)</argument_list></call> <operator pos:start="723:80" pos:end="723:80">&lt;</operator> <literal type="number" pos:start="723:82" pos:end="723:82">0</literal></expr>)</condition><block type="pseudo" pos:start="725:33" pos:end="725:42"><block_content pos:start="725:33" pos:end="725:42">

                                <return pos:start="725:33" pos:end="725:42">return <expr pos:start="725:40" pos:end="725:41"><operator pos:start="725:40" pos:end="725:40">-</operator><literal type="number" pos:start="725:41" pos:end="725:41">1</literal></expr>;</return></block_content></block></if></if_stmt>

                        </block_content>}</block></if> <else pos:start="727:27" pos:end="731:25">else <block pos:start="727:32" pos:end="731:25">{<block_content pos:start="729:29" pos:end="729:56">

                            <expr_stmt pos:start="729:29" pos:end="729:56"><expr pos:start="729:29" pos:end="729:55"><name pos:start="729:29" pos:end="729:50"><name pos:start="729:29" pos:end="729:29">s</name><operator pos:start="729:30" pos:end="729:31">-&gt;</operator><name pos:start="729:32" pos:end="729:47">block_last_index</name><index pos:start="729:48" pos:end="729:50">[<expr pos:start="729:49" pos:end="729:49"><name pos:start="729:49" pos:end="729:49">i</name></expr>]</index></name> <operator pos:start="729:52" pos:end="729:52">=</operator> <operator pos:start="729:54" pos:end="729:54">-</operator><literal type="number" pos:start="729:55" pos:end="729:55">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="733:25" pos:end="733:35"><expr pos:start="733:25" pos:end="733:34"><name pos:start="733:25" pos:end="733:27">cbp</name> <operator pos:start="733:29" pos:end="733:30">+=</operator> <name pos:start="733:32" pos:end="733:34">cbp</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="741:11" pos:end="747:9">else <block pos:start="741:16" pos:end="747:9">{<block_content pos:start="743:13" pos:end="745:44">

            <for pos:start="743:13" pos:end="745:44">for <control pos:start="743:17" pos:end="743:36">(<init pos:start="743:18" pos:end="743:23"><expr pos:start="743:18" pos:end="743:22"><name pos:start="743:18" pos:end="743:18">i</name> <operator pos:start="743:20" pos:end="743:20">=</operator> <literal type="number" pos:start="743:22" pos:end="743:22">0</literal></expr>;</init> <condition pos:start="743:25" pos:end="743:31"><expr pos:start="743:25" pos:end="743:30"><name pos:start="743:25" pos:end="743:25">i</name> <operator pos:start="743:27" pos:end="743:27">&lt;</operator> <literal type="number" pos:start="743:29" pos:end="743:30">12</literal></expr>;</condition> <incr pos:start="743:33" pos:end="743:35"><expr pos:start="743:33" pos:end="743:35"><name pos:start="743:33" pos:end="743:33">i</name><operator pos:start="743:34" pos:end="743:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="745:17" pos:end="745:44"><block_content pos:start="745:17" pos:end="745:44">

                <expr_stmt pos:start="745:17" pos:end="745:44"><expr pos:start="745:17" pos:end="745:43"><name pos:start="745:17" pos:end="745:38"><name pos:start="745:17" pos:end="745:17">s</name><operator pos:start="745:18" pos:end="745:19">-&gt;</operator><name pos:start="745:20" pos:end="745:35">block_last_index</name><index pos:start="745:36" pos:end="745:38">[<expr pos:start="745:37" pos:end="745:37"><name pos:start="745:37" pos:end="745:37">i</name></expr>]</index></name> <operator pos:start="745:40" pos:end="745:40">=</operator> <operator pos:start="745:42" pos:end="745:42">-</operator><literal type="number" pos:start="745:43" pos:end="745:43">1</literal></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="753:5" pos:end="753:77"><expr pos:start="753:5" pos:end="753:76"><name pos:start="753:5" pos:end="753:66"><name pos:start="753:5" pos:end="753:5">s</name><operator pos:start="753:6" pos:end="753:7">-&gt;</operator><name pos:start="753:8" pos:end="753:22">current_picture</name><operator pos:start="753:23" pos:end="753:23">.</operator><name pos:start="753:24" pos:end="753:24">f</name><operator pos:start="753:25" pos:end="753:25">.</operator><name pos:start="753:26" pos:end="753:32">mb_type</name><index pos:start="753:33" pos:end="753:66">[<expr pos:start="753:34" pos:end="753:65"><name pos:start="753:34" pos:end="753:40"><name pos:start="753:34" pos:end="753:34">s</name><operator pos:start="753:35" pos:end="753:36">-&gt;</operator><name pos:start="753:37" pos:end="753:40">mb_x</name></name> <operator pos:start="753:42" pos:end="753:42">+</operator> <name pos:start="753:44" pos:end="753:50"><name pos:start="753:44" pos:end="753:44">s</name><operator pos:start="753:45" pos:end="753:46">-&gt;</operator><name pos:start="753:47" pos:end="753:50">mb_y</name></name> <operator pos:start="753:52" pos:end="753:52">*</operator> <name pos:start="753:54" pos:end="753:65"><name pos:start="753:54" pos:end="753:54">s</name><operator pos:start="753:55" pos:end="753:56">-&gt;</operator><name pos:start="753:57" pos:end="753:65">mb_stride</name></name></expr>]</index></name> <operator pos:start="753:68" pos:end="753:68">=</operator> <name pos:start="753:70" pos:end="753:76">mb_type</name></expr>;</expr_stmt>



    <return pos:start="757:5" pos:end="757:13">return <expr pos:start="757:12" pos:end="757:12"><literal type="number" pos:start="757:12" pos:end="757:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
