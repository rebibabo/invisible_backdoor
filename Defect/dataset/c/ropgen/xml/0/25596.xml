<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25596.c" pos:tabs="8"><function pos:start="1:1" pos:end="247:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">synth_superframe</name><parameter_list pos:start="1:28" pos:end="3:47">(<parameter pos:start="1:29" pos:end="1:47"><decl pos:start="1:29" pos:end="1:47"><type pos:start="1:29" pos:end="1:47"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">ctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:56">AVFrame</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">frame</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:46"><decl pos:start="3:29" pos:end="3:46"><type pos:start="3:29" pos:end="3:46"><name pos:start="3:29" pos:end="3:31">int</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:46">got_frame_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="247:1">{<block_content pos:start="7:5" pos:end="245:13">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">WMAVoiceContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:22">s</name> <init pos:start="7:24" pos:end="7:39">= <expr pos:start="7:26" pos:end="7:39"><name pos:start="7:26" pos:end="7:39"><name pos:start="7:26" pos:end="7:28">ctx</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">GetBitContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">gb</name> <init pos:start="9:23" pos:end="9:30">= <expr pos:start="9:25" pos:end="9:30"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:30"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:30">gb</name></name></expr></init></decl>, <decl pos:start="9:33" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:19"/><name pos:start="9:33" pos:end="9:36">s_gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">n</name></decl>, <decl pos:start="11:12" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">res</name></decl>, <decl pos:start="11:17" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:25">n_samples</name> <init pos:start="11:27" pos:end="11:31">= <expr pos:start="11:29" pos:end="11:31"><literal type="number" pos:start="11:29" pos:end="11:31">480</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">double</name></type> <name pos:start="13:12" pos:end="13:37"><name pos:start="13:12" pos:end="13:15">lsps</name><index pos:start="13:16" pos:end="13:27">[<expr pos:start="13:17" pos:end="13:26"><name pos:start="13:17" pos:end="13:26">MAX_FRAMES</name></expr>]</index><index pos:start="13:28" pos:end="13:37">[<expr pos:start="13:29" pos:end="13:36"><name pos:start="13:29" pos:end="13:36">MAX_LSPS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="17:84"><decl pos:start="15:5" pos:end="17:83"><type pos:start="15:5" pos:end="15:18"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:16">double</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:26">mean_lsf</name> <init pos:start="15:28" pos:end="17:83">= <expr pos:start="15:30" pos:end="17:83"><ternary pos:start="15:30" pos:end="17:83"><condition pos:start="15:30" pos:end="15:44"><expr pos:start="15:30" pos:end="15:42"><name pos:start="15:30" pos:end="15:36"><name pos:start="15:30" pos:end="15:30">s</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:36">lsps</name></name> <operator pos:start="15:38" pos:end="15:39">==</operator> <literal type="number" pos:start="15:41" pos:end="15:42">16</literal></expr> ?</condition><then pos:start="17:9" pos:end="17:44">

        <expr pos:start="17:9" pos:end="17:44"><name pos:start="17:9" pos:end="17:44"><name pos:start="17:9" pos:end="17:27">wmavoice_mean_lsf16</name><index pos:start="17:28" pos:end="17:44">[<expr pos:start="17:29" pos:end="17:43"><name pos:start="17:29" pos:end="17:43"><name pos:start="17:29" pos:end="17:29">s</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:43">lsp_def_mode</name></name></expr>]</index></name></expr> </then><else pos:start="17:46" pos:end="17:83">: <expr pos:start="17:48" pos:end="17:83"><name pos:start="17:48" pos:end="17:83"><name pos:start="17:48" pos:end="17:66">wmavoice_mean_lsf10</name><index pos:start="17:67" pos:end="17:83">[<expr pos:start="17:68" pos:end="17:82"><name pos:start="17:68" pos:end="17:82"><name pos:start="17:68" pos:end="17:68">s</name><operator pos:start="17:69" pos:end="17:70">-&gt;</operator><name pos:start="17:71" pos:end="17:82">lsp_def_mode</name></name></expr>]</index></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:63"><decl pos:start="19:5" pos:end="19:62"><type pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:9">float</name></type> <name pos:start="19:11" pos:end="19:62"><name pos:start="19:11" pos:end="19:20">excitation</name><index pos:start="19:21" pos:end="19:62">[<expr pos:start="19:22" pos:end="19:61"><name pos:start="19:22" pos:end="19:39">MAX_SIGNAL_HISTORY</name> <operator pos:start="19:41" pos:end="19:41">+</operator> <name pos:start="19:43" pos:end="19:56">MAX_SFRAMESIZE</name> <operator pos:start="19:58" pos:end="19:58">+</operator> <literal type="number" pos:start="19:60" pos:end="19:61">12</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:43"><decl pos:start="21:5" pos:end="21:42"><type pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:9">float</name></type> <name pos:start="21:11" pos:end="21:42"><name pos:start="21:11" pos:end="21:15">synth</name><index pos:start="21:16" pos:end="21:42">[<expr pos:start="21:17" pos:end="21:41"><name pos:start="21:17" pos:end="21:24">MAX_LSPS</name> <operator pos:start="21:26" pos:end="21:26">+</operator> <name pos:start="21:28" pos:end="21:41">MAX_SFRAMESIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:19"><decl pos:start="23:5" pos:end="23:18"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:9">float</name> <modifier pos:start="23:11" pos:end="23:11">*</modifier></type><name pos:start="23:12" pos:end="23:18">samples</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="29:49"><expr pos:start="27:5" pos:end="29:48"><call pos:start="27:5" pos:end="29:48"><name pos:start="27:5" pos:end="27:10">memcpy</name><argument_list pos:start="27:11" pos:end="29:48">(<argument pos:start="27:12" pos:end="27:16"><expr pos:start="27:12" pos:end="27:16"><name pos:start="27:12" pos:end="27:16">synth</name></expr></argument>,      <argument pos:start="27:24" pos:end="27:39"><expr pos:start="27:24" pos:end="27:39"><name pos:start="27:24" pos:end="27:39"><name pos:start="27:24" pos:end="27:24">s</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:39">synth_history</name></name></expr></argument>,

           <argument pos:start="29:12" pos:end="29:47"><expr pos:start="29:12" pos:end="29:47"><name pos:start="29:12" pos:end="29:18"><name pos:start="29:12" pos:end="29:12">s</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:18">lsps</name></name>             <operator pos:start="29:32" pos:end="29:32">*</operator> <sizeof pos:start="29:34" pos:end="29:47">sizeof<argument_list pos:start="29:40" pos:end="29:47">(<argument pos:start="29:41" pos:end="29:46"><expr pos:start="29:41" pos:end="29:46"><operator pos:start="29:41" pos:end="29:41">*</operator><name pos:start="29:42" pos:end="29:46">synth</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="33:54"><expr pos:start="31:5" pos:end="33:53"><call pos:start="31:5" pos:end="33:53"><name pos:start="31:5" pos:end="31:10">memcpy</name><argument_list pos:start="31:11" pos:end="33:53">(<argument pos:start="31:12" pos:end="31:21"><expr pos:start="31:12" pos:end="31:21"><name pos:start="31:12" pos:end="31:21">excitation</name></expr></argument>, <argument pos:start="31:24" pos:end="31:44"><expr pos:start="31:24" pos:end="31:44"><name pos:start="31:24" pos:end="31:44"><name pos:start="31:24" pos:end="31:24">s</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:44">excitation_history</name></name></expr></argument>,

           <argument pos:start="33:12" pos:end="33:52"><expr pos:start="33:12" pos:end="33:52"><name pos:start="33:12" pos:end="33:30"><name pos:start="33:12" pos:end="33:12">s</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:30">history_nsamples</name></name> <operator pos:start="33:32" pos:end="33:32">*</operator> <sizeof pos:start="33:34" pos:end="33:52">sizeof<argument_list pos:start="33:40" pos:end="33:52">(<argument pos:start="33:41" pos:end="33:51"><expr pos:start="33:41" pos:end="33:51"><operator pos:start="33:41" pos:end="33:41">*</operator><name pos:start="33:42" pos:end="33:51">excitation</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:33">(<expr pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:28">sframe_cache_size</name></name> <operator pos:start="37:30" pos:end="37:30">&gt;</operator> <literal type="number" pos:start="37:32" pos:end="37:32">0</literal></expr>)</condition> <block pos:start="37:35" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:33">

        <expr_stmt pos:start="39:9" pos:end="39:19"><expr pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:10">gb</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <operator pos:start="39:14" pos:end="39:14">&amp;</operator><name pos:start="39:15" pos:end="39:18">s_gb</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:65"><expr pos:start="41:9" pos:end="41:64"><call pos:start="41:9" pos:end="41:64"><name pos:start="41:9" pos:end="41:21">init_get_bits</name><argument_list pos:start="41:22" pos:end="41:64">(<argument pos:start="41:23" pos:end="41:24"><expr pos:start="41:23" pos:end="41:24"><name pos:start="41:23" pos:end="41:24">gb</name></expr></argument>, <argument pos:start="41:27" pos:end="41:41"><expr pos:start="41:27" pos:end="41:41"><name pos:start="41:27" pos:end="41:41"><name pos:start="41:27" pos:end="41:27">s</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:41">sframe_cache</name></name></expr></argument>, <argument pos:start="41:44" pos:end="41:63"><expr pos:start="41:44" pos:end="41:63"><name pos:start="41:44" pos:end="41:63"><name pos:start="41:44" pos:end="41:44">s</name><operator pos:start="41:45" pos:end="41:46">-&gt;</operator><name pos:start="41:47" pos:end="41:63">sframe_cache_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:33"><expr pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:28">sframe_cache_size</name></name> <operator pos:start="43:30" pos:end="43:30">=</operator> <literal type="number" pos:start="43:32" pos:end="43:32">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="57:19"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:54">(<expr pos:start="49:9" pos:end="49:53"><operator pos:start="49:9" pos:end="49:9">(</operator><name pos:start="49:10" pos:end="49:12">res</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:47"><name pos:start="49:16" pos:end="49:40">check_bits_for_superframe</name><argument_list pos:start="49:41" pos:end="49:47">(<argument pos:start="49:42" pos:end="49:43"><expr pos:start="49:42" pos:end="49:43"><name pos:start="49:42" pos:end="49:43">gb</name></expr></argument>, <argument pos:start="49:46" pos:end="49:46"><expr pos:start="49:46" pos:end="49:46"><name pos:start="49:46" pos:end="49:46">s</name></expr></argument>)</argument_list></call><operator pos:start="49:48" pos:end="49:48">)</operator> <operator pos:start="49:50" pos:end="49:51">==</operator> <literal type="number" pos:start="49:53" pos:end="49:53">1</literal></expr>)</condition> <block pos:start="49:56" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:17">

        <expr_stmt pos:start="51:9" pos:end="51:27"><expr pos:start="51:9" pos:end="51:26"><operator pos:start="51:9" pos:end="51:9">*</operator><name pos:start="51:10" pos:end="51:22">got_frame_ptr</name> <operator pos:start="51:24" pos:end="51:24">=</operator> <literal type="number" pos:start="51:26" pos:end="51:26">0</literal></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:17">return <expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">1</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="55:7" pos:end="57:19">else if <condition pos:start="55:15" pos:end="55:23">(<expr pos:start="55:16" pos:end="55:22"><name pos:start="55:16" pos:end="55:18">res</name> <operator pos:start="55:20" pos:end="55:20">&lt;</operator> <literal type="number" pos:start="55:22" pos:end="55:22">0</literal></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:19"><block_content pos:start="57:9" pos:end="57:19">

        <return pos:start="57:9" pos:end="57:19">return <expr pos:start="57:16" pos:end="57:18"><name pos:start="57:16" pos:end="57:18">res</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="61:5" pos:end="67:23">/* First bit is speech/music bit, it differentiates between WMAVoice

     * speech samples (the actual codec) and WMAVoice music samples, which

     * are really WMAPro-in-WMAVoice-superframes. I've never seen those in

     * the wild yet. */</comment>

    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:23">(<expr pos:start="69:9" pos:end="69:22"><operator pos:start="69:9" pos:end="69:9">!</operator><call pos:start="69:10" pos:end="69:22"><name pos:start="69:10" pos:end="69:18">get_bits1</name><argument_list pos:start="69:19" pos:end="69:22">(<argument pos:start="69:20" pos:end="69:21"><expr pos:start="69:20" pos:end="69:21"><name pos:start="69:20" pos:end="69:21">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:25" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:36">

        <expr_stmt pos:start="71:9" pos:end="71:57"><expr pos:start="71:9" pos:end="71:56"><call pos:start="71:9" pos:end="71:56"><name pos:start="71:9" pos:end="71:29">avpriv_request_sample</name><argument_list pos:start="71:30" pos:end="71:56">(<argument pos:start="71:31" pos:end="71:33"><expr pos:start="71:31" pos:end="71:33"><name pos:start="71:31" pos:end="71:33">ctx</name></expr></argument>, <argument pos:start="71:36" pos:end="71:55"><expr pos:start="71:36" pos:end="71:55"><literal type="string" pos:start="71:36" pos:end="71:55">"WMAPro-in-WMAVoice"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:36">return <expr pos:start="73:16" pos:end="73:35"><name pos:start="73:16" pos:end="73:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="79:5" pos:end="79:73">/* (optional) nr. of samples in superframe; always &lt;= 480 and &gt;= 0 */</comment>

    <if_stmt pos:start="81:5" pos:end="95:5"><if pos:start="81:5" pos:end="95:5">if <condition pos:start="81:8" pos:end="81:22">(<expr pos:start="81:9" pos:end="81:21"><call pos:start="81:9" pos:end="81:21"><name pos:start="81:9" pos:end="81:17">get_bits1</name><argument_list pos:start="81:18" pos:end="81:21">(<argument pos:start="81:19" pos:end="81:20"><expr pos:start="81:19" pos:end="81:20"><name pos:start="81:19" pos:end="81:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:24" pos:end="95:5">{<block_content pos:start="83:9" pos:end="93:9">

        <if_stmt pos:start="83:9" pos:end="93:9"><if pos:start="83:9" pos:end="93:9">if <condition pos:start="83:12" pos:end="83:49">(<expr pos:start="83:13" pos:end="83:48"><operator pos:start="83:13" pos:end="83:13">(</operator><name pos:start="83:14" pos:end="83:22">n_samples</name> <operator pos:start="83:24" pos:end="83:24">=</operator> <call pos:start="83:26" pos:end="83:41"><name pos:start="83:26" pos:end="83:33">get_bits</name><argument_list pos:start="83:34" pos:end="83:41">(<argument pos:start="83:35" pos:end="83:36"><expr pos:start="83:35" pos:end="83:36"><name pos:start="83:35" pos:end="83:36">gb</name></expr></argument>, <argument pos:start="83:39" pos:end="83:40"><expr pos:start="83:39" pos:end="83:40"><literal type="number" pos:start="83:39" pos:end="83:40">12</literal></expr></argument>)</argument_list></call><operator pos:start="83:42" pos:end="83:42">)</operator> <operator pos:start="83:44" pos:end="83:44">&gt;</operator> <literal type="number" pos:start="83:46" pos:end="83:48">480</literal></expr>)</condition> <block pos:start="83:51" pos:end="93:9">{<block_content pos:start="85:13" pos:end="91:39">

            <expr_stmt pos:start="85:13" pos:end="89:30"><expr pos:start="85:13" pos:end="89:29"><call pos:start="85:13" pos:end="89:29"><name pos:start="85:13" pos:end="85:18">av_log</name><argument_list pos:start="85:19" pos:end="89:29">(<argument pos:start="85:20" pos:end="85:22"><expr pos:start="85:20" pos:end="85:22"><name pos:start="85:20" pos:end="85:22">ctx</name></expr></argument>, <argument pos:start="85:25" pos:end="85:36"><expr pos:start="85:25" pos:end="85:36"><name pos:start="85:25" pos:end="85:36">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="87:20" pos:end="87:72"><expr pos:start="87:20" pos:end="87:72"><literal type="string" pos:start="87:20" pos:end="87:72">"Superframe encodes &gt;480 samples (%d), not allowed\n"</literal></expr></argument>,

                   <argument pos:start="89:20" pos:end="89:28"><expr pos:start="89:20" pos:end="89:28"><name pos:start="89:20" pos:end="89:28">n_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="91:13" pos:end="91:39">return <expr pos:start="91:20" pos:end="91:38"><name pos:start="91:20" pos:end="91:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="97:5" pos:end="97:75">/* Parse LSPs, if global for the superframe (can also be per-frame). */</comment>

    <if_stmt pos:start="99:5" pos:end="135:5"><if pos:start="99:5" pos:end="135:5">if <condition pos:start="99:8" pos:end="99:29">(<expr pos:start="99:9" pos:end="99:28"><name pos:start="99:9" pos:end="99:28"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:28">has_residual_lsps</name></name></expr>)</condition> <block pos:start="99:31" pos:end="135:5">{<block_content pos:start="101:9" pos:end="133:45">

        <decl_stmt pos:start="101:9" pos:end="101:71"><decl pos:start="101:9" pos:end="101:34"><type pos:start="101:9" pos:end="101:14"><name pos:start="101:9" pos:end="101:14">double</name></type> <name pos:start="101:16" pos:end="101:34"><name pos:start="101:16" pos:end="101:24">prev_lsps</name><index pos:start="101:25" pos:end="101:34">[<expr pos:start="101:26" pos:end="101:33"><name pos:start="101:26" pos:end="101:33">MAX_LSPS</name></expr>]</index></name></decl>, <decl pos:start="101:37" pos:end="101:52"><type ref="prev" pos:start="101:9" pos:end="101:14"/><name pos:start="101:37" pos:end="101:52"><name pos:start="101:37" pos:end="101:38">a1</name><index pos:start="101:39" pos:end="101:52">[<expr pos:start="101:40" pos:end="101:51"><name pos:start="101:40" pos:end="101:47">MAX_LSPS</name> <operator pos:start="101:49" pos:end="101:49">*</operator> <literal type="number" pos:start="101:51" pos:end="101:51">2</literal></expr>]</index></name></decl>, <decl pos:start="101:55" pos:end="101:70"><type ref="prev" pos:start="101:9" pos:end="101:14"/><name pos:start="101:55" pos:end="101:70"><name pos:start="101:55" pos:end="101:56">a2</name><index pos:start="101:57" pos:end="101:70">[<expr pos:start="101:58" pos:end="101:69"><name pos:start="101:58" pos:end="101:65">MAX_LSPS</name> <operator pos:start="101:67" pos:end="101:67">*</operator> <literal type="number" pos:start="101:69" pos:end="101:69">2</literal></expr>]</index></name></decl>;</decl_stmt>



        <for pos:start="105:9" pos:end="107:57">for <control pos:start="105:13" pos:end="105:37">(<init pos:start="105:14" pos:end="105:19"><expr pos:start="105:14" pos:end="105:18"><name pos:start="105:14" pos:end="105:14">n</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <literal type="number" pos:start="105:18" pos:end="105:18">0</literal></expr>;</init> <condition pos:start="105:21" pos:end="105:32"><expr pos:start="105:21" pos:end="105:31"><name pos:start="105:21" pos:end="105:21">n</name> <operator pos:start="105:23" pos:end="105:23">&lt;</operator> <name pos:start="105:25" pos:end="105:31"><name pos:start="105:25" pos:end="105:25">s</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:31">lsps</name></name></expr>;</condition> <incr pos:start="105:34" pos:end="105:36"><expr pos:start="105:34" pos:end="105:36"><name pos:start="105:34" pos:end="105:34">n</name><operator pos:start="105:35" pos:end="105:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="107:13" pos:end="107:57"><block_content pos:start="107:13" pos:end="107:57">

            <expr_stmt pos:start="107:13" pos:end="107:57"><expr pos:start="107:13" pos:end="107:56"><name pos:start="107:13" pos:end="107:24"><name pos:start="107:13" pos:end="107:21">prev_lsps</name><index pos:start="107:22" pos:end="107:24">[<expr pos:start="107:23" pos:end="107:23"><name pos:start="107:23" pos:end="107:23">n</name></expr>]</index></name> <operator pos:start="107:26" pos:end="107:26">=</operator> <name pos:start="107:28" pos:end="107:42"><name pos:start="107:28" pos:end="107:28">s</name><operator pos:start="107:29" pos:end="107:30">-&gt;</operator><name pos:start="107:31" pos:end="107:39">prev_lsps</name><index pos:start="107:40" pos:end="107:42">[<expr pos:start="107:41" pos:end="107:41"><name pos:start="107:41" pos:end="107:41">n</name></expr>]</index></name> <operator pos:start="107:44" pos:end="107:44">-</operator> <name pos:start="107:46" pos:end="107:56"><name pos:start="107:46" pos:end="107:53">mean_lsf</name><index pos:start="107:54" pos:end="107:56">[<expr pos:start="107:55" pos:end="107:55"><name pos:start="107:55" pos:end="107:55">n</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="111:9" pos:end="117:74"><if pos:start="111:9" pos:end="115:9">if <condition pos:start="111:12" pos:end="111:26">(<expr pos:start="111:13" pos:end="111:25"><name pos:start="111:13" pos:end="111:19"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:19">lsps</name></name> <operator pos:start="111:21" pos:end="111:22">==</operator> <literal type="number" pos:start="111:24" pos:end="111:25">10</literal></expr>)</condition> <block pos:start="111:28" pos:end="115:9">{<block_content pos:start="113:13" pos:end="113:74">

            <expr_stmt pos:start="113:13" pos:end="113:74"><expr pos:start="113:13" pos:end="113:73"><call pos:start="113:13" pos:end="113:73"><name pos:start="113:13" pos:end="113:26">dequant_lsp10r</name><argument_list pos:start="113:27" pos:end="113:73">(<argument pos:start="113:28" pos:end="113:29"><expr pos:start="113:28" pos:end="113:29"><name pos:start="113:28" pos:end="113:29">gb</name></expr></argument>, <argument pos:start="113:32" pos:end="113:38"><expr pos:start="113:32" pos:end="113:38"><name pos:start="113:32" pos:end="113:38"><name pos:start="113:32" pos:end="113:35">lsps</name><index pos:start="113:36" pos:end="113:38">[<expr pos:start="113:37" pos:end="113:37"><literal type="number" pos:start="113:37" pos:end="113:37">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="113:41" pos:end="113:49"><expr pos:start="113:41" pos:end="113:49"><name pos:start="113:41" pos:end="113:49">prev_lsps</name></expr></argument>, <argument pos:start="113:52" pos:end="113:53"><expr pos:start="113:52" pos:end="113:53"><name pos:start="113:52" pos:end="113:53">a1</name></expr></argument>, <argument pos:start="113:56" pos:end="113:57"><expr pos:start="113:56" pos:end="113:57"><name pos:start="113:56" pos:end="113:57">a2</name></expr></argument>, <argument pos:start="113:60" pos:end="113:72"><expr pos:start="113:60" pos:end="113:72"><name pos:start="113:60" pos:end="113:72"><name pos:start="113:60" pos:end="113:60">s</name><operator pos:start="113:61" pos:end="113:62">-&gt;</operator><name pos:start="113:63" pos:end="113:72">lsp_q_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="115:11" pos:end="117:74">else<block type="pseudo" pos:start="117:13" pos:end="117:74"><block_content pos:start="117:13" pos:end="117:74"> <comment type="block" pos:start="115:16" pos:end="115:34">/* s-&gt;lsps == 16 */</comment>

            <expr_stmt pos:start="117:13" pos:end="117:74"><expr pos:start="117:13" pos:end="117:73"><call pos:start="117:13" pos:end="117:73"><name pos:start="117:13" pos:end="117:26">dequant_lsp16r</name><argument_list pos:start="117:27" pos:end="117:73">(<argument pos:start="117:28" pos:end="117:29"><expr pos:start="117:28" pos:end="117:29"><name pos:start="117:28" pos:end="117:29">gb</name></expr></argument>, <argument pos:start="117:32" pos:end="117:38"><expr pos:start="117:32" pos:end="117:38"><name pos:start="117:32" pos:end="117:38"><name pos:start="117:32" pos:end="117:35">lsps</name><index pos:start="117:36" pos:end="117:38">[<expr pos:start="117:37" pos:end="117:37"><literal type="number" pos:start="117:37" pos:end="117:37">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="117:41" pos:end="117:49"><expr pos:start="117:41" pos:end="117:49"><name pos:start="117:41" pos:end="117:49">prev_lsps</name></expr></argument>, <argument pos:start="117:52" pos:end="117:53"><expr pos:start="117:52" pos:end="117:53"><name pos:start="117:52" pos:end="117:53">a1</name></expr></argument>, <argument pos:start="117:56" pos:end="117:57"><expr pos:start="117:56" pos:end="117:57"><name pos:start="117:56" pos:end="117:57">a2</name></expr></argument>, <argument pos:start="117:60" pos:end="117:72"><expr pos:start="117:60" pos:end="117:72"><name pos:start="117:60" pos:end="117:72"><name pos:start="117:60" pos:end="117:60">s</name><operator pos:start="117:61" pos:end="117:62">-&gt;</operator><name pos:start="117:63" pos:end="117:72">lsp_q_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <for pos:start="121:9" pos:end="129:9">for <control pos:start="121:13" pos:end="121:37">(<init pos:start="121:14" pos:end="121:19"><expr pos:start="121:14" pos:end="121:18"><name pos:start="121:14" pos:end="121:14">n</name> <operator pos:start="121:16" pos:end="121:16">=</operator> <literal type="number" pos:start="121:18" pos:end="121:18">0</literal></expr>;</init> <condition pos:start="121:21" pos:end="121:32"><expr pos:start="121:21" pos:end="121:31"><name pos:start="121:21" pos:end="121:21">n</name> <operator pos:start="121:23" pos:end="121:23">&lt;</operator> <name pos:start="121:25" pos:end="121:31"><name pos:start="121:25" pos:end="121:25">s</name><operator pos:start="121:26" pos:end="121:27">-&gt;</operator><name pos:start="121:28" pos:end="121:31">lsps</name></name></expr>;</condition> <incr pos:start="121:34" pos:end="121:36"><expr pos:start="121:34" pos:end="121:36"><name pos:start="121:34" pos:end="121:34">n</name><operator pos:start="121:35" pos:end="121:36">++</operator></expr></incr>)</control> <block pos:start="121:39" pos:end="129:9">{<block_content pos:start="123:13" pos:end="127:38">

            <expr_stmt pos:start="123:13" pos:end="123:70"><expr pos:start="123:13" pos:end="123:69"><name pos:start="123:13" pos:end="123:22"><name pos:start="123:13" pos:end="123:16">lsps</name><index pos:start="123:17" pos:end="123:19">[<expr pos:start="123:18" pos:end="123:18"><literal type="number" pos:start="123:18" pos:end="123:18">0</literal></expr>]</index><index pos:start="123:20" pos:end="123:22">[<expr pos:start="123:21" pos:end="123:21"><name pos:start="123:21" pos:end="123:21">n</name></expr>]</index></name>  <operator pos:start="123:25" pos:end="123:25">=</operator> <name pos:start="123:27" pos:end="123:37"><name pos:start="123:27" pos:end="123:34">mean_lsf</name><index pos:start="123:35" pos:end="123:37">[<expr pos:start="123:36" pos:end="123:36"><name pos:start="123:36" pos:end="123:36">n</name></expr>]</index></name> <operator pos:start="123:39" pos:end="123:39">+</operator> <operator pos:start="123:41" pos:end="123:41">(</operator><name pos:start="123:42" pos:end="123:46"><name pos:start="123:42" pos:end="123:43">a1</name><index pos:start="123:44" pos:end="123:46">[<expr pos:start="123:45" pos:end="123:45"><name pos:start="123:45" pos:end="123:45">n</name></expr>]</index></name>           <operator pos:start="123:58" pos:end="123:58">-</operator> <name pos:start="123:60" pos:end="123:68"><name pos:start="123:60" pos:end="123:61">a2</name><index pos:start="123:62" pos:end="123:68">[<expr pos:start="123:63" pos:end="123:67"><name pos:start="123:63" pos:end="123:63">n</name> <operator pos:start="123:65" pos:end="123:65">*</operator> <literal type="number" pos:start="123:67" pos:end="123:67">2</literal></expr>]</index></name><operator pos:start="123:69" pos:end="123:69">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:74"><expr pos:start="125:13" pos:end="125:73"><name pos:start="125:13" pos:end="125:22"><name pos:start="125:13" pos:end="125:16">lsps</name><index pos:start="125:17" pos:end="125:19">[<expr pos:start="125:18" pos:end="125:18"><literal type="number" pos:start="125:18" pos:end="125:18">1</literal></expr>]</index><index pos:start="125:20" pos:end="125:22">[<expr pos:start="125:21" pos:end="125:21"><name pos:start="125:21" pos:end="125:21">n</name></expr>]</index></name>  <operator pos:start="125:25" pos:end="125:25">=</operator> <name pos:start="125:27" pos:end="125:37"><name pos:start="125:27" pos:end="125:34">mean_lsf</name><index pos:start="125:35" pos:end="125:37">[<expr pos:start="125:36" pos:end="125:36"><name pos:start="125:36" pos:end="125:36">n</name></expr>]</index></name> <operator pos:start="125:39" pos:end="125:39">+</operator> <operator pos:start="125:41" pos:end="125:41">(</operator><name pos:start="125:42" pos:end="125:56"><name pos:start="125:42" pos:end="125:43">a1</name><index pos:start="125:44" pos:end="125:56">[<expr pos:start="125:45" pos:end="125:55"><name pos:start="125:45" pos:end="125:51"><name pos:start="125:45" pos:end="125:45">s</name><operator pos:start="125:46" pos:end="125:47">-&gt;</operator><name pos:start="125:48" pos:end="125:51">lsps</name></name> <operator pos:start="125:53" pos:end="125:53">+</operator> <name pos:start="125:55" pos:end="125:55">n</name></expr>]</index></name> <operator pos:start="125:58" pos:end="125:58">-</operator> <name pos:start="125:60" pos:end="125:72"><name pos:start="125:60" pos:end="125:61">a2</name><index pos:start="125:62" pos:end="125:72">[<expr pos:start="125:63" pos:end="125:71"><name pos:start="125:63" pos:end="125:63">n</name> <operator pos:start="125:65" pos:end="125:65">*</operator> <literal type="number" pos:start="125:67" pos:end="125:69">2</literal> <operator pos:start="125:69" pos:end="125:69">+</operator> <literal type="number" pos:start="125:71" pos:end="125:71">1</literal></expr>]</index></name><operator pos:start="125:73" pos:end="125:73">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:38"><expr pos:start="127:13" pos:end="127:37"><name pos:start="127:13" pos:end="127:22"><name pos:start="127:13" pos:end="127:16">lsps</name><index pos:start="127:17" pos:end="127:19">[<expr pos:start="127:18" pos:end="127:18"><literal type="number" pos:start="127:18" pos:end="127:18">2</literal></expr>]</index><index pos:start="127:20" pos:end="127:22">[<expr pos:start="127:21" pos:end="127:21"><name pos:start="127:21" pos:end="127:21">n</name></expr>]</index></name> <operator pos:start="127:24" pos:end="127:25">+=</operator> <name pos:start="127:27" pos:end="127:37"><name pos:start="127:27" pos:end="127:34">mean_lsf</name><index pos:start="127:35" pos:end="127:37">[<expr pos:start="127:36" pos:end="127:36"><name pos:start="127:36" pos:end="127:36">n</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="131:9" pos:end="133:45">for <control pos:start="131:13" pos:end="131:31">(<init pos:start="131:14" pos:end="131:19"><expr pos:start="131:14" pos:end="131:18"><name pos:start="131:14" pos:end="131:14">n</name> <operator pos:start="131:16" pos:end="131:16">=</operator> <literal type="number" pos:start="131:18" pos:end="131:18">0</literal></expr>;</init> <condition pos:start="131:21" pos:end="131:26"><expr pos:start="131:21" pos:end="131:25"><name pos:start="131:21" pos:end="131:21">n</name> <operator pos:start="131:23" pos:end="131:23">&lt;</operator> <literal type="number" pos:start="131:25" pos:end="131:25">3</literal></expr>;</condition> <incr pos:start="131:28" pos:end="131:30"><expr pos:start="131:28" pos:end="131:30"><name pos:start="131:28" pos:end="131:28">n</name><operator pos:start="131:29" pos:end="131:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="133:13" pos:end="133:45"><block_content pos:start="133:13" pos:end="133:45">

            <expr_stmt pos:start="133:13" pos:end="133:45"><expr pos:start="133:13" pos:end="133:44"><call pos:start="133:13" pos:end="133:44"><name pos:start="133:13" pos:end="133:26">stabilize_lsps</name><argument_list pos:start="133:27" pos:end="133:44">(<argument pos:start="133:28" pos:end="133:34"><expr pos:start="133:28" pos:end="133:34"><name pos:start="133:28" pos:end="133:34"><name pos:start="133:28" pos:end="133:31">lsps</name><index pos:start="133:32" pos:end="133:34">[<expr pos:start="133:33" pos:end="133:33"><name pos:start="133:33" pos:end="133:33">n</name></expr>]</index></name></expr></argument>, <argument pos:start="133:37" pos:end="133:43"><expr pos:start="133:37" pos:end="133:43"><name pos:start="133:37" pos:end="133:43"><name pos:start="133:37" pos:end="133:37">s</name><operator pos:start="133:38" pos:end="133:39">-&gt;</operator><name pos:start="133:40" pos:end="133:43">lsps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="139:5" pos:end="139:27">/* get output buffer */</comment>

    <expr_stmt pos:start="141:5" pos:end="141:28"><expr pos:start="141:5" pos:end="141:27"><name pos:start="141:5" pos:end="141:21"><name pos:start="141:5" pos:end="141:9">frame</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:21">nb_samples</name></name> <operator pos:start="141:23" pos:end="141:23">=</operator> <literal type="number" pos:start="141:25" pos:end="141:27">480</literal></expr>;</expr_stmt>

    <if_stmt pos:start="143:5" pos:end="145:19"><if pos:start="143:5" pos:end="145:19">if <condition pos:start="143:8" pos:end="143:49">(<expr pos:start="143:9" pos:end="143:48"><operator pos:start="143:9" pos:end="143:9">(</operator><name pos:start="143:10" pos:end="143:12">res</name> <operator pos:start="143:14" pos:end="143:14">=</operator> <call pos:start="143:16" pos:end="143:43"><name pos:start="143:16" pos:end="143:28">ff_get_buffer</name><argument_list pos:start="143:29" pos:end="143:43">(<argument pos:start="143:30" pos:end="143:32"><expr pos:start="143:30" pos:end="143:32"><name pos:start="143:30" pos:end="143:32">ctx</name></expr></argument>, <argument pos:start="143:35" pos:end="143:39"><expr pos:start="143:35" pos:end="143:39"><name pos:start="143:35" pos:end="143:39">frame</name></expr></argument>, <argument pos:start="143:42" pos:end="143:42"><expr pos:start="143:42" pos:end="143:42"><literal type="number" pos:start="143:42" pos:end="143:42">0</literal></expr></argument>)</argument_list></call><operator pos:start="143:44" pos:end="143:44">)</operator> <operator pos:start="143:46" pos:end="143:46">&lt;</operator> <literal type="number" pos:start="143:48" pos:end="143:48">0</literal></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="145:19"><block_content pos:start="145:9" pos:end="145:19">

        <return pos:start="145:9" pos:end="145:19">return <expr pos:start="145:16" pos:end="145:18"><name pos:start="145:16" pos:end="145:18">res</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:34"><expr pos:start="147:5" pos:end="147:33"><name pos:start="147:5" pos:end="147:21"><name pos:start="147:5" pos:end="147:9">frame</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:21">nb_samples</name></name> <operator pos:start="147:23" pos:end="147:23">=</operator> <name pos:start="147:25" pos:end="147:33">n_samples</name></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:38"><expr pos:start="149:5" pos:end="149:37"><name pos:start="149:5" pos:end="149:11">samples</name> <operator pos:start="149:13" pos:end="149:13">=</operator> <operator pos:start="149:15" pos:end="149:15">(</operator><name pos:start="149:16" pos:end="149:20">float</name> <operator pos:start="149:22" pos:end="149:22">*</operator><operator pos:start="149:23" pos:end="149:23">)</operator><name pos:start="149:24" pos:end="149:37"><name pos:start="149:24" pos:end="149:28">frame</name><operator pos:start="149:29" pos:end="149:30">-&gt;</operator><name pos:start="149:31" pos:end="149:34">data</name><index pos:start="149:35" pos:end="149:37">[<expr pos:start="149:36" pos:end="149:36"><literal type="number" pos:start="149:36" pos:end="149:36">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="153:5" pos:end="153:76">/* Parse frames, optionally preceded by per-frame (independent) LSPs. */</comment>

    <for pos:start="155:5" pos:end="199:5">for <control pos:start="155:9" pos:end="155:27">(<init pos:start="155:10" pos:end="155:15"><expr pos:start="155:10" pos:end="155:14"><name pos:start="155:10" pos:end="155:10">n</name> <operator pos:start="155:12" pos:end="155:12">=</operator> <literal type="number" pos:start="155:14" pos:end="155:14">0</literal></expr>;</init> <condition pos:start="155:17" pos:end="155:22"><expr pos:start="155:17" pos:end="155:21"><name pos:start="155:17" pos:end="155:17">n</name> <operator pos:start="155:19" pos:end="155:19">&lt;</operator> <literal type="number" pos:start="155:21" pos:end="155:21">3</literal></expr>;</condition> <incr pos:start="155:24" pos:end="155:26"><expr pos:start="155:24" pos:end="155:26"><name pos:start="155:24" pos:end="155:24">n</name><operator pos:start="155:25" pos:end="155:26">++</operator></expr></incr>)</control> <block pos:start="155:29" pos:end="199:5">{<block_content pos:start="157:9" pos:end="197:9">

        <if_stmt pos:start="157:9" pos:end="179:9"><if pos:start="157:9" pos:end="179:9">if <condition pos:start="157:12" pos:end="157:34">(<expr pos:start="157:13" pos:end="157:33"><operator pos:start="157:13" pos:end="157:13">!</operator><name pos:start="157:14" pos:end="157:33"><name pos:start="157:14" pos:end="157:14">s</name><operator pos:start="157:15" pos:end="157:16">-&gt;</operator><name pos:start="157:17" pos:end="157:33">has_residual_lsps</name></name></expr>)</condition> <block pos:start="157:36" pos:end="179:9">{<block_content pos:start="159:13" pos:end="177:45">

            <decl_stmt pos:start="159:13" pos:end="159:18"><decl pos:start="159:13" pos:end="159:17"><type pos:start="159:13" pos:end="159:15"><name pos:start="159:13" pos:end="159:15">int</name></type> <name pos:start="159:17" pos:end="159:17">m</name></decl>;</decl_stmt>



            <if_stmt pos:start="163:13" pos:end="169:44"><if pos:start="163:13" pos:end="167:13">if <condition pos:start="163:16" pos:end="163:30">(<expr pos:start="163:17" pos:end="163:29"><name pos:start="163:17" pos:end="163:23"><name pos:start="163:17" pos:end="163:17">s</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:23">lsps</name></name> <operator pos:start="163:25" pos:end="163:26">==</operator> <literal type="number" pos:start="163:28" pos:end="163:29">10</literal></expr>)</condition> <block pos:start="163:32" pos:end="167:13">{<block_content pos:start="165:17" pos:end="165:44">

                <expr_stmt pos:start="165:17" pos:end="165:44"><expr pos:start="165:17" pos:end="165:43"><call pos:start="165:17" pos:end="165:43"><name pos:start="165:17" pos:end="165:30">dequant_lsp10i</name><argument_list pos:start="165:31" pos:end="165:43">(<argument pos:start="165:32" pos:end="165:33"><expr pos:start="165:32" pos:end="165:33"><name pos:start="165:32" pos:end="165:33">gb</name></expr></argument>, <argument pos:start="165:36" pos:end="165:42"><expr pos:start="165:36" pos:end="165:42"><name pos:start="165:36" pos:end="165:42"><name pos:start="165:36" pos:end="165:39">lsps</name><index pos:start="165:40" pos:end="165:42">[<expr pos:start="165:41" pos:end="165:41"><name pos:start="165:41" pos:end="165:41">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="167:15" pos:end="169:44">else<block type="pseudo" pos:start="169:17" pos:end="169:44"><block_content pos:start="169:17" pos:end="169:44"> <comment type="block" pos:start="167:20" pos:end="167:38">/* s-&gt;lsps == 16 */</comment>

                <expr_stmt pos:start="169:17" pos:end="169:44"><expr pos:start="169:17" pos:end="169:43"><call pos:start="169:17" pos:end="169:43"><name pos:start="169:17" pos:end="169:30">dequant_lsp16i</name><argument_list pos:start="169:31" pos:end="169:43">(<argument pos:start="169:32" pos:end="169:33"><expr pos:start="169:32" pos:end="169:33"><name pos:start="169:32" pos:end="169:33">gb</name></expr></argument>, <argument pos:start="169:36" pos:end="169:42"><expr pos:start="169:36" pos:end="169:42"><name pos:start="169:36" pos:end="169:42"><name pos:start="169:36" pos:end="169:39">lsps</name><index pos:start="169:40" pos:end="169:42">[<expr pos:start="169:41" pos:end="169:41"><name pos:start="169:41" pos:end="169:41">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <for pos:start="173:13" pos:end="175:42">for <control pos:start="173:17" pos:end="173:41">(<init pos:start="173:18" pos:end="173:23"><expr pos:start="173:18" pos:end="173:22"><name pos:start="173:18" pos:end="173:18">m</name> <operator pos:start="173:20" pos:end="173:20">=</operator> <literal type="number" pos:start="173:22" pos:end="173:22">0</literal></expr>;</init> <condition pos:start="173:25" pos:end="173:36"><expr pos:start="173:25" pos:end="173:35"><name pos:start="173:25" pos:end="173:25">m</name> <operator pos:start="173:27" pos:end="173:27">&lt;</operator> <name pos:start="173:29" pos:end="173:35"><name pos:start="173:29" pos:end="173:29">s</name><operator pos:start="173:30" pos:end="173:31">-&gt;</operator><name pos:start="173:32" pos:end="173:35">lsps</name></name></expr>;</condition> <incr pos:start="173:38" pos:end="173:40"><expr pos:start="173:38" pos:end="173:40"><name pos:start="173:38" pos:end="173:38">m</name><operator pos:start="173:39" pos:end="173:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="175:17" pos:end="175:42"><block_content pos:start="175:17" pos:end="175:42">

                <expr_stmt pos:start="175:17" pos:end="175:42"><expr pos:start="175:17" pos:end="175:41"><name pos:start="175:17" pos:end="175:26"><name pos:start="175:17" pos:end="175:20">lsps</name><index pos:start="175:21" pos:end="175:23">[<expr pos:start="175:22" pos:end="175:22"><name pos:start="175:22" pos:end="175:22">n</name></expr>]</index><index pos:start="175:24" pos:end="175:26">[<expr pos:start="175:25" pos:end="175:25"><name pos:start="175:25" pos:end="175:25">m</name></expr>]</index></name> <operator pos:start="175:28" pos:end="175:29">+=</operator> <name pos:start="175:31" pos:end="175:41"><name pos:start="175:31" pos:end="175:38">mean_lsf</name><index pos:start="175:39" pos:end="175:41">[<expr pos:start="175:40" pos:end="175:40"><name pos:start="175:40" pos:end="175:40">m</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="177:13" pos:end="177:45"><expr pos:start="177:13" pos:end="177:44"><call pos:start="177:13" pos:end="177:44"><name pos:start="177:13" pos:end="177:26">stabilize_lsps</name><argument_list pos:start="177:27" pos:end="177:44">(<argument pos:start="177:28" pos:end="177:34"><expr pos:start="177:28" pos:end="177:34"><name pos:start="177:28" pos:end="177:34"><name pos:start="177:28" pos:end="177:31">lsps</name><index pos:start="177:32" pos:end="177:34">[<expr pos:start="177:33" pos:end="177:33"><name pos:start="177:33" pos:end="177:33">n</name></expr>]</index></name></expr></argument>, <argument pos:start="177:37" pos:end="177:43"><expr pos:start="177:37" pos:end="177:43"><name pos:start="177:37" pos:end="177:43"><name pos:start="177:37" pos:end="177:37">s</name><operator pos:start="177:38" pos:end="177:39">-&gt;</operator><name pos:start="177:40" pos:end="177:43">lsps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="183:9" pos:end="197:9"><if pos:start="183:9" pos:end="197:9">if <condition pos:start="183:12" pos:end="191:69">(<expr pos:start="183:13" pos:end="191:68"><operator pos:start="183:13" pos:end="183:13">(</operator><name pos:start="183:14" pos:end="183:16">res</name> <operator pos:start="183:18" pos:end="183:18">=</operator> <call pos:start="183:20" pos:end="191:67"><name pos:start="183:20" pos:end="183:30">synth_frame</name><argument_list pos:start="183:31" pos:end="191:67">(<argument pos:start="183:32" pos:end="183:34"><expr pos:start="183:32" pos:end="183:34"><name pos:start="183:32" pos:end="183:34">ctx</name></expr></argument>, <argument pos:start="183:37" pos:end="183:38"><expr pos:start="183:37" pos:end="183:38"><name pos:start="183:37" pos:end="183:38">gb</name></expr></argument>, <argument pos:start="183:41" pos:end="183:41"><expr pos:start="183:41" pos:end="183:41"><name pos:start="183:41" pos:end="183:41">n</name></expr></argument>,

                               <argument pos:start="185:32" pos:end="185:58"><expr pos:start="185:32" pos:end="185:58"><operator pos:start="185:32" pos:end="185:32">&amp;</operator><name pos:start="185:33" pos:end="185:58"><name pos:start="185:33" pos:end="185:39">samples</name><index pos:start="185:40" pos:end="185:58">[<expr pos:start="185:41" pos:end="185:57"><name pos:start="185:41" pos:end="185:41">n</name> <operator pos:start="185:43" pos:end="185:43">*</operator> <name pos:start="185:45" pos:end="185:57">MAX_FRAMESIZE</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="187:32" pos:end="187:38"><expr pos:start="187:32" pos:end="187:38"><name pos:start="187:32" pos:end="187:38"><name pos:start="187:32" pos:end="187:35">lsps</name><index pos:start="187:36" pos:end="187:38">[<expr pos:start="187:37" pos:end="187:37"><name pos:start="187:37" pos:end="187:37">n</name></expr>]</index></name></expr></argument>, <argument pos:start="187:41" pos:end="187:75"><expr pos:start="187:41" pos:end="187:75"><ternary pos:start="187:41" pos:end="187:75"><condition pos:start="187:41" pos:end="187:48"><expr pos:start="187:41" pos:end="187:46"><name pos:start="187:41" pos:end="187:41">n</name> <operator pos:start="187:43" pos:end="187:44">==</operator> <literal type="number" pos:start="187:46" pos:end="187:46">0</literal></expr> ?</condition><then pos:start="187:50" pos:end="187:61"> <expr pos:start="187:50" pos:end="187:61"><name pos:start="187:50" pos:end="187:61"><name pos:start="187:50" pos:end="187:50">s</name><operator pos:start="187:51" pos:end="187:52">-&gt;</operator><name pos:start="187:53" pos:end="187:61">prev_lsps</name></name></expr> </then><else pos:start="187:63" pos:end="187:75">: <expr pos:start="187:65" pos:end="187:75"><name pos:start="187:65" pos:end="187:75"><name pos:start="187:65" pos:end="187:68">lsps</name><index pos:start="187:69" pos:end="187:75">[<expr pos:start="187:70" pos:end="187:74"><name pos:start="187:70" pos:end="187:70">n</name> <operator pos:start="187:72" pos:end="187:72">-</operator> <literal type="number" pos:start="187:74" pos:end="187:74">1</literal></expr>]</index></name></expr></else></ternary></expr></argument>,

                               <argument pos:start="189:32" pos:end="189:83"><expr pos:start="189:32" pos:end="189:83"><operator pos:start="189:32" pos:end="189:32">&amp;</operator><name pos:start="189:33" pos:end="189:83"><name pos:start="189:33" pos:end="189:42">excitation</name><index pos:start="189:43" pos:end="189:83">[<expr pos:start="189:44" pos:end="189:82"><name pos:start="189:44" pos:end="189:62"><name pos:start="189:44" pos:end="189:44">s</name><operator pos:start="189:45" pos:end="189:46">-&gt;</operator><name pos:start="189:47" pos:end="189:62">history_nsamples</name></name> <operator pos:start="189:64" pos:end="189:64">+</operator> <name pos:start="189:66" pos:end="189:66">n</name> <operator pos:start="189:68" pos:end="189:68">*</operator> <name pos:start="189:70" pos:end="189:82">MAX_FRAMESIZE</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="191:32" pos:end="191:66"><expr pos:start="191:32" pos:end="191:66"><operator pos:start="191:32" pos:end="191:32">&amp;</operator><name pos:start="191:33" pos:end="191:66"><name pos:start="191:33" pos:end="191:37">synth</name><index pos:start="191:38" pos:end="191:66">[<expr pos:start="191:39" pos:end="191:65"><name pos:start="191:39" pos:end="191:45"><name pos:start="191:39" pos:end="191:39">s</name><operator pos:start="191:40" pos:end="191:41">-&gt;</operator><name pos:start="191:42" pos:end="191:45">lsps</name></name> <operator pos:start="191:47" pos:end="191:47">+</operator> <name pos:start="191:49" pos:end="191:49">n</name> <operator pos:start="191:51" pos:end="191:51">*</operator> <name pos:start="191:53" pos:end="191:65">MAX_FRAMESIZE</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="191:68" pos:end="191:68">)</operator></expr>)</condition> <block pos:start="191:71" pos:end="197:9">{<block_content pos:start="193:13" pos:end="195:23">

            <expr_stmt pos:start="193:13" pos:end="193:31"><expr pos:start="193:13" pos:end="193:30"><operator pos:start="193:13" pos:end="193:13">*</operator><name pos:start="193:14" pos:end="193:26">got_frame_ptr</name> <operator pos:start="193:28" pos:end="193:28">=</operator> <literal type="number" pos:start="193:30" pos:end="193:30">0</literal></expr>;</expr_stmt>

            <return pos:start="195:13" pos:end="195:23">return <expr pos:start="195:20" pos:end="195:22"><name pos:start="195:20" pos:end="195:22">res</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="203:5" pos:end="207:36">/* Statistics? FIXME - we don't check for length, a slight overrun

     * will be caught by internal buffer padding, and anything else

     * will be skipped, not read. */</comment>

    <if_stmt pos:start="209:5" pos:end="215:5"><if pos:start="209:5" pos:end="215:5">if <condition pos:start="209:8" pos:end="209:22">(<expr pos:start="209:9" pos:end="209:21"><call pos:start="209:9" pos:end="209:21"><name pos:start="209:9" pos:end="209:17">get_bits1</name><argument_list pos:start="209:18" pos:end="209:21">(<argument pos:start="209:19" pos:end="209:20"><expr pos:start="209:19" pos:end="209:20"><name pos:start="209:19" pos:end="209:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="209:24" pos:end="215:5">{<block_content pos:start="211:9" pos:end="213:38">

        <expr_stmt pos:start="211:9" pos:end="211:30"><expr pos:start="211:9" pos:end="211:29"><name pos:start="211:9" pos:end="211:11">res</name> <operator pos:start="211:13" pos:end="211:13">=</operator> <call pos:start="211:15" pos:end="211:29"><name pos:start="211:15" pos:end="211:22">get_bits</name><argument_list pos:start="211:23" pos:end="211:29">(<argument pos:start="211:24" pos:end="211:25"><expr pos:start="211:24" pos:end="211:25"><name pos:start="211:24" pos:end="211:25">gb</name></expr></argument>, <argument pos:start="211:28" pos:end="211:28"><expr pos:start="211:28" pos:end="211:28"><literal type="number" pos:start="211:28" pos:end="211:28">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:38"><expr pos:start="213:9" pos:end="213:37"><call pos:start="213:9" pos:end="213:37"><name pos:start="213:9" pos:end="213:17">skip_bits</name><argument_list pos:start="213:18" pos:end="213:37">(<argument pos:start="213:19" pos:end="213:20"><expr pos:start="213:19" pos:end="213:20"><name pos:start="213:19" pos:end="213:20">gb</name></expr></argument>, <argument pos:start="213:23" pos:end="213:36"><expr pos:start="213:23" pos:end="213:36"><literal type="number" pos:start="213:23" pos:end="213:24">10</literal> <operator pos:start="213:26" pos:end="213:26">*</operator> <operator pos:start="213:28" pos:end="213:28">(</operator><name pos:start="213:29" pos:end="213:31">res</name> <operator pos:start="213:33" pos:end="213:33">+</operator> <literal type="number" pos:start="213:35" pos:end="213:35">1</literal><operator pos:start="213:36" pos:end="213:36">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="219:5" pos:end="219:23"><expr pos:start="219:5" pos:end="219:22"><operator pos:start="219:5" pos:end="219:5">*</operator><name pos:start="219:6" pos:end="219:18">got_frame_ptr</name> <operator pos:start="219:20" pos:end="219:20">=</operator> <literal type="number" pos:start="219:22" pos:end="219:22">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="223:5" pos:end="223:24">/* Update history */</comment>

    <expr_stmt pos:start="225:5" pos:end="227:56"><expr pos:start="225:5" pos:end="227:55"><call pos:start="225:5" pos:end="227:55"><name pos:start="225:5" pos:end="225:10">memcpy</name><argument_list pos:start="225:11" pos:end="227:55">(<argument pos:start="225:12" pos:end="225:23"><expr pos:start="225:12" pos:end="225:23"><name pos:start="225:12" pos:end="225:23"><name pos:start="225:12" pos:end="225:12">s</name><operator pos:start="225:13" pos:end="225:14">-&gt;</operator><name pos:start="225:15" pos:end="225:23">prev_lsps</name></name></expr></argument>,           <argument pos:start="225:36" pos:end="225:42"><expr pos:start="225:36" pos:end="225:42"><name pos:start="225:36" pos:end="225:42"><name pos:start="225:36" pos:end="225:39">lsps</name><index pos:start="225:40" pos:end="225:42">[<expr pos:start="225:41" pos:end="225:41"><literal type="number" pos:start="225:41" pos:end="225:41">2</literal></expr>]</index></name></expr></argument>,

           <argument pos:start="227:12" pos:end="227:54"><expr pos:start="227:12" pos:end="227:54"><name pos:start="227:12" pos:end="227:18"><name pos:start="227:12" pos:end="227:12">s</name><operator pos:start="227:13" pos:end="227:14">-&gt;</operator><name pos:start="227:15" pos:end="227:18">lsps</name></name>             <operator pos:start="227:32" pos:end="227:32">*</operator> <sizeof pos:start="227:34" pos:end="227:54">sizeof<argument_list pos:start="227:40" pos:end="227:54">(<argument pos:start="227:41" pos:end="227:53"><expr pos:start="227:41" pos:end="227:53"><operator pos:start="227:41" pos:end="227:41">*</operator><name pos:start="227:42" pos:end="227:53"><name pos:start="227:42" pos:end="227:42">s</name><operator pos:start="227:43" pos:end="227:44">-&gt;</operator><name pos:start="227:45" pos:end="227:53">prev_lsps</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="229:5" pos:end="231:49"><expr pos:start="229:5" pos:end="231:48"><call pos:start="229:5" pos:end="231:48"><name pos:start="229:5" pos:end="229:10">memcpy</name><argument_list pos:start="229:11" pos:end="231:48">(<argument pos:start="229:12" pos:end="229:27"><expr pos:start="229:12" pos:end="229:27"><name pos:start="229:12" pos:end="229:27"><name pos:start="229:12" pos:end="229:12">s</name><operator pos:start="229:13" pos:end="229:14">-&gt;</operator><name pos:start="229:15" pos:end="229:27">synth_history</name></name></expr></argument>,      <argument pos:start="229:35" pos:end="229:56"><expr pos:start="229:35" pos:end="229:56"><operator pos:start="229:35" pos:end="229:35">&amp;</operator><name pos:start="229:36" pos:end="229:56"><name pos:start="229:36" pos:end="229:40">synth</name><index pos:start="229:41" pos:end="229:56">[<expr pos:start="229:42" pos:end="229:55"><name pos:start="229:42" pos:end="229:55">MAX_SFRAMESIZE</name></expr>]</index></name></expr></argument>,

           <argument pos:start="231:12" pos:end="231:47"><expr pos:start="231:12" pos:end="231:47"><name pos:start="231:12" pos:end="231:18"><name pos:start="231:12" pos:end="231:12">s</name><operator pos:start="231:13" pos:end="231:14">-&gt;</operator><name pos:start="231:15" pos:end="231:18">lsps</name></name>             <operator pos:start="231:32" pos:end="231:32">*</operator> <sizeof pos:start="231:34" pos:end="231:47">sizeof<argument_list pos:start="231:40" pos:end="231:47">(<argument pos:start="231:41" pos:end="231:46"><expr pos:start="231:41" pos:end="231:46"><operator pos:start="231:41" pos:end="231:41">*</operator><name pos:start="231:42" pos:end="231:46">synth</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="235:54"><expr pos:start="233:5" pos:end="235:53"><call pos:start="233:5" pos:end="235:53"><name pos:start="233:5" pos:end="233:10">memcpy</name><argument_list pos:start="233:11" pos:end="235:53">(<argument pos:start="233:12" pos:end="233:32"><expr pos:start="233:12" pos:end="233:32"><name pos:start="233:12" pos:end="233:32"><name pos:start="233:12" pos:end="233:12">s</name><operator pos:start="233:13" pos:end="233:14">-&gt;</operator><name pos:start="233:15" pos:end="233:32">excitation_history</name></name></expr></argument>, <argument pos:start="233:35" pos:end="233:61"><expr pos:start="233:35" pos:end="233:61"><operator pos:start="233:35" pos:end="233:35">&amp;</operator><name pos:start="233:36" pos:end="233:61"><name pos:start="233:36" pos:end="233:45">excitation</name><index pos:start="233:46" pos:end="233:61">[<expr pos:start="233:47" pos:end="233:60"><name pos:start="233:47" pos:end="233:60">MAX_SFRAMESIZE</name></expr>]</index></name></expr></argument>,

           <argument pos:start="235:12" pos:end="235:52"><expr pos:start="235:12" pos:end="235:52"><name pos:start="235:12" pos:end="235:30"><name pos:start="235:12" pos:end="235:12">s</name><operator pos:start="235:13" pos:end="235:14">-&gt;</operator><name pos:start="235:15" pos:end="235:30">history_nsamples</name></name> <operator pos:start="235:32" pos:end="235:32">*</operator> <sizeof pos:start="235:34" pos:end="235:52">sizeof<argument_list pos:start="235:40" pos:end="235:52">(<argument pos:start="235:41" pos:end="235:51"><expr pos:start="235:41" pos:end="235:51"><operator pos:start="235:41" pos:end="235:41">*</operator><name pos:start="235:42" pos:end="235:51">excitation</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="237:5" pos:end="241:63"><if pos:start="237:5" pos:end="241:63">if <condition pos:start="237:8" pos:end="237:18">(<expr pos:start="237:9" pos:end="237:17"><name pos:start="237:9" pos:end="237:17"><name pos:start="237:9" pos:end="237:9">s</name><operator pos:start="237:10" pos:end="237:11">-&gt;</operator><name pos:start="237:12" pos:end="237:17">do_apf</name></name></expr>)</condition><block type="pseudo" pos:start="239:9" pos:end="241:63"><block_content pos:start="239:9" pos:end="241:63">

        <expr_stmt pos:start="239:9" pos:end="241:63"><expr pos:start="239:9" pos:end="241:62"><call pos:start="239:9" pos:end="241:62"><name pos:start="239:9" pos:end="239:15">memmove</name><argument_list pos:start="239:16" pos:end="241:62">(<argument pos:start="239:17" pos:end="239:30"><expr pos:start="239:17" pos:end="239:30"><name pos:start="239:17" pos:end="239:30"><name pos:start="239:17" pos:end="239:17">s</name><operator pos:start="239:18" pos:end="239:19">-&gt;</operator><name pos:start="239:20" pos:end="239:30">zero_exc_pf</name></name></expr></argument>,       <argument pos:start="239:39" pos:end="239:69"><expr pos:start="239:39" pos:end="239:69"><operator pos:start="239:39" pos:end="239:39">&amp;</operator><name pos:start="239:40" pos:end="239:69"><name pos:start="239:40" pos:end="239:40">s</name><operator pos:start="239:41" pos:end="239:42">-&gt;</operator><name pos:start="239:43" pos:end="239:53">zero_exc_pf</name><index pos:start="239:54" pos:end="239:69">[<expr pos:start="239:55" pos:end="239:68"><name pos:start="239:55" pos:end="239:68">MAX_SFRAMESIZE</name></expr>]</index></name></expr></argument>,

                <argument pos:start="241:17" pos:end="241:61"><expr pos:start="241:17" pos:end="241:61"><name pos:start="241:17" pos:end="241:35"><name pos:start="241:17" pos:end="241:17">s</name><operator pos:start="241:18" pos:end="241:19">-&gt;</operator><name pos:start="241:20" pos:end="241:35">history_nsamples</name></name> <operator pos:start="241:37" pos:end="241:37">*</operator> <sizeof pos:start="241:39" pos:end="241:61">sizeof<argument_list pos:start="241:45" pos:end="241:61">(<argument pos:start="241:46" pos:end="241:60"><expr pos:start="241:46" pos:end="241:60"><operator pos:start="241:46" pos:end="241:46">*</operator><name pos:start="241:47" pos:end="241:60"><name pos:start="241:47" pos:end="241:47">s</name><operator pos:start="241:48" pos:end="241:49">-&gt;</operator><name pos:start="241:50" pos:end="241:60">zero_exc_pf</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="245:5" pos:end="245:13">return <expr pos:start="245:12" pos:end="245:12"><literal type="number" pos:start="245:12" pos:end="245:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
