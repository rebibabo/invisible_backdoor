<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4627.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:28">qcow2_free_any_clusters</name><parameter_list pos:start="1:29" pos:end="3:75">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:49"><name pos:start="1:30" pos:end="1:45">BlockDriverState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">bs</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:68"><decl pos:start="1:52" pos:end="1:68"><type pos:start="1:52" pos:end="1:68"><name pos:start="1:52" pos:end="1:59">uint64_t</name></type> <name pos:start="1:61" pos:end="1:68">l2_entry</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:44"><decl pos:start="3:30" pos:end="3:44"><type pos:start="3:30" pos:end="3:44"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:44">nb_clusters</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:74"><decl pos:start="3:47" pos:end="3:74"><type pos:start="3:47" pos:end="3:74"><name pos:start="3:47" pos:end="3:69"><name pos:start="3:47" pos:end="3:50">enum</name> <name pos:start="3:52" pos:end="3:69">qcow2_discard_type</name></name></type> <name pos:start="3:71" pos:end="3:74">type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:5">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">BDRVQcow2State</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:34">= <expr pos:start="7:25" pos:end="7:34"><name pos:start="7:25" pos:end="7:34"><name pos:start="7:25" pos:end="7:26">bs</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:34">opaque</name></name></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="67:5">switch <condition pos:start="11:12" pos:end="11:45">(<expr pos:start="11:13" pos:end="11:44"><call pos:start="11:13" pos:end="11:44"><name pos:start="11:13" pos:end="11:34">qcow2_get_cluster_type</name><argument_list pos:start="11:35" pos:end="11:44">(<argument pos:start="11:36" pos:end="11:43"><expr pos:start="11:36" pos:end="11:43"><name pos:start="11:36" pos:end="11:43">l2_entry</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:47" pos:end="67:5">{<block_content pos:start="13:5" pos:end="65:16">

    <case pos:start="13:5" pos:end="13:34">case <expr pos:start="13:10" pos:end="13:33"><name pos:start="13:10" pos:end="13:33">QCOW2_CLUSTER_COMPRESSED</name></expr>:</case>

        <block pos:start="15:9" pos:end="29:9">{<block_content pos:start="17:13" pos:end="27:41">

            <decl_stmt pos:start="17:13" pos:end="17:28"><decl pos:start="17:13" pos:end="17:27"><type pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">int</name></type> <name pos:start="17:17" pos:end="17:27">nb_csectors</name></decl>;</decl_stmt>

            <expr_stmt pos:start="19:13" pos:end="21:46"><expr pos:start="19:13" pos:end="21:45"><name pos:start="19:13" pos:end="19:23">nb_csectors</name> <operator pos:start="19:25" pos:end="19:25">=</operator> <operator pos:start="19:27" pos:end="19:27">(</operator><operator pos:start="19:28" pos:end="19:28">(</operator><name pos:start="19:29" pos:end="19:36">l2_entry</name> <operator pos:start="19:38" pos:end="19:39">&gt;&gt;</operator> <name pos:start="19:41" pos:end="19:54"><name pos:start="19:41" pos:end="19:41">s</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:54">csize_shift</name></name><operator pos:start="19:55" pos:end="19:55">)</operator> <operator pos:start="19:57" pos:end="19:57">&amp;</operator>

                           <name pos:start="21:28" pos:end="21:40"><name pos:start="21:28" pos:end="21:28">s</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:40">csize_mask</name></name><operator pos:start="21:41" pos:end="21:41">)</operator> <operator pos:start="21:43" pos:end="21:43">+</operator> <literal type="number" pos:start="21:45" pos:end="21:45">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="27:41"><expr pos:start="23:13" pos:end="27:40"><call pos:start="23:13" pos:end="27:40"><name pos:start="23:13" pos:end="23:31">qcow2_free_clusters</name><argument_list pos:start="23:32" pos:end="27:40">(<argument pos:start="23:33" pos:end="23:34"><expr pos:start="23:33" pos:end="23:34"><name pos:start="23:33" pos:end="23:34">bs</name></expr></argument>,

                <argument pos:start="25:17" pos:end="25:58"><expr pos:start="25:17" pos:end="25:58"><operator pos:start="25:17" pos:end="25:17">(</operator><name pos:start="25:18" pos:end="25:25">l2_entry</name> <operator pos:start="25:27" pos:end="25:27">&amp;</operator> <name pos:start="25:29" pos:end="25:50"><name pos:start="25:29" pos:end="25:29">s</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:50">cluster_offset_mask</name></name><operator pos:start="25:51" pos:end="25:51">)</operator> <operator pos:start="25:53" pos:end="25:53">&amp;</operator> <operator pos:start="25:55" pos:end="25:55">~</operator><literal type="number" pos:start="25:56" pos:end="25:58">511</literal></expr></argument>,

                <argument pos:start="27:17" pos:end="27:33"><expr pos:start="27:17" pos:end="27:33"><name pos:start="27:17" pos:end="27:27">nb_csectors</name> <operator pos:start="27:29" pos:end="27:29">*</operator> <literal type="number" pos:start="27:31" pos:end="27:33">512</literal></expr></argument>, <argument pos:start="27:36" pos:end="27:39"><expr pos:start="27:36" pos:end="27:39"><name pos:start="27:36" pos:end="27:39">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:30">case <expr pos:start="33:10" pos:end="33:29"><name pos:start="33:10" pos:end="33:29">QCOW2_CLUSTER_NORMAL</name></expr>:</case>

    <case pos:start="35:5" pos:end="35:28">case <expr pos:start="35:10" pos:end="35:27"><name pos:start="35:10" pos:end="35:27">QCOW2_CLUSTER_ZERO</name></expr>:</case>

        <if_stmt pos:start="37:9" pos:end="55:9"><if pos:start="37:9" pos:end="55:9">if <condition pos:start="37:12" pos:end="37:39">(<expr pos:start="37:13" pos:end="37:38"><name pos:start="37:13" pos:end="37:20">l2_entry</name> <operator pos:start="37:22" pos:end="37:22">&amp;</operator> <name pos:start="37:24" pos:end="37:38">L2E_OFFSET_MASK</name></expr>)</condition> <block pos:start="37:41" pos:end="55:9">{<block_content pos:start="39:13" pos:end="53:13">

            <if_stmt pos:start="39:13" pos:end="53:13"><if pos:start="39:13" pos:end="47:13">if <condition pos:start="39:16" pos:end="39:67">(<expr pos:start="39:17" pos:end="39:66"><call pos:start="39:17" pos:end="39:66"><name pos:start="39:17" pos:end="39:35">offset_into_cluster</name><argument_list pos:start="39:36" pos:end="39:66">(<argument pos:start="39:37" pos:end="39:37"><expr pos:start="39:37" pos:end="39:37"><name pos:start="39:37" pos:end="39:37">s</name></expr></argument>, <argument pos:start="39:40" pos:end="39:65"><expr pos:start="39:40" pos:end="39:65"><name pos:start="39:40" pos:end="39:47">l2_entry</name> <operator pos:start="39:49" pos:end="39:49">&amp;</operator> <name pos:start="39:51" pos:end="39:65">L2E_OFFSET_MASK</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:69" pos:end="47:13">{<block_content pos:start="41:17" pos:end="45:68">

                <expr_stmt pos:start="41:17" pos:end="45:68"><expr pos:start="41:17" pos:end="45:67"><call pos:start="41:17" pos:end="45:67"><name pos:start="41:17" pos:end="41:39">qcow2_signal_corruption</name><argument_list pos:start="41:40" pos:end="45:67">(<argument pos:start="41:41" pos:end="41:42"><expr pos:start="41:41" pos:end="41:42"><name pos:start="41:41" pos:end="41:42">bs</name></expr></argument>, <argument pos:start="41:45" pos:end="41:49"><expr pos:start="41:45" pos:end="41:49"><name pos:start="41:45" pos:end="41:49">false</name></expr></argument>, <argument pos:start="41:52" pos:end="41:53"><expr pos:start="41:52" pos:end="41:53"><operator pos:start="41:52" pos:end="41:52">-</operator><literal type="number" pos:start="41:53" pos:end="41:53">1</literal></expr></argument>, <argument pos:start="41:56" pos:end="41:57"><expr pos:start="41:56" pos:end="41:57"><operator pos:start="41:56" pos:end="41:56">-</operator><literal type="number" pos:start="41:57" pos:end="41:57">1</literal></expr></argument>,

                                        <argument pos:start="43:41" pos:end="43:77"><expr pos:start="43:41" pos:end="43:77"><literal type="string" pos:start="43:41" pos:end="43:77">"Cannot free unaligned cluster %#llx"</literal></expr></argument>,

                                        <argument pos:start="45:41" pos:end="45:66"><expr pos:start="45:41" pos:end="45:66"><name pos:start="45:41" pos:end="45:48">l2_entry</name> <operator pos:start="45:50" pos:end="45:50">&amp;</operator> <name pos:start="45:52" pos:end="45:66">L2E_OFFSET_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="47:15" pos:end="53:13">else <block pos:start="47:20" pos:end="53:13">{<block_content pos:start="49:17" pos:end="51:74">

                <expr_stmt pos:start="49:17" pos:end="51:74"><expr pos:start="49:17" pos:end="51:73"><call pos:start="49:17" pos:end="51:73"><name pos:start="49:17" pos:end="49:35">qcow2_free_clusters</name><argument_list pos:start="49:36" pos:end="51:73">(<argument pos:start="49:37" pos:end="49:38"><expr pos:start="49:37" pos:end="49:38"><name pos:start="49:37" pos:end="49:38">bs</name></expr></argument>, <argument pos:start="49:41" pos:end="49:66"><expr pos:start="49:41" pos:end="49:66"><name pos:start="49:41" pos:end="49:48">l2_entry</name> <operator pos:start="49:50" pos:end="49:50">&amp;</operator> <name pos:start="49:52" pos:end="49:66">L2E_OFFSET_MASK</name></expr></argument>,

                                    <argument pos:start="51:37" pos:end="51:66"><expr pos:start="51:37" pos:end="51:66"><name pos:start="51:37" pos:end="51:47">nb_clusters</name> <operator pos:start="51:49" pos:end="51:50">&lt;&lt;</operator> <name pos:start="51:52" pos:end="51:66"><name pos:start="51:52" pos:end="51:52">s</name><operator pos:start="51:53" pos:end="51:54">-&gt;</operator><name pos:start="51:55" pos:end="51:66">cluster_bits</name></name></expr></argument>, <argument pos:start="51:69" pos:end="51:72"><expr pos:start="51:69" pos:end="51:72"><name pos:start="51:69" pos:end="51:72">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <case pos:start="59:5" pos:end="59:35">case <expr pos:start="59:10" pos:end="59:34"><name pos:start="59:10" pos:end="59:34">QCOW2_CLUSTER_UNALLOCATED</name></expr>:</case>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <default pos:start="63:5" pos:end="63:12">default:</default>

        <expr_stmt pos:start="65:9" pos:end="65:16"><expr pos:start="65:9" pos:end="65:15"><call pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:13">abort</name><argument_list pos:start="65:14" pos:end="65:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
