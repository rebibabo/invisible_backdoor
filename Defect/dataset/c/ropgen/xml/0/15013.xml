<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15013.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:17"><name pos:start="1:1" pos:end="1:10">DISAS_INSN</name><argument_list pos:start="1:11" pos:end="1:17">(<argument pos:start="1:12" pos:end="1:16">cas2w</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:24">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint16_t</name></type> <name pos:start="5:14" pos:end="5:17">ext1</name></decl>, <decl pos:start="5:20" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:20" pos:end="5:23">ext2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">TCGv</name></type> <name pos:start="7:10" pos:end="7:14">addr1</name></decl>, <decl pos:start="7:17" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:17" pos:end="7:21">addr2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">TCGv</name></type> <name pos:start="9:10" pos:end="9:13">regs</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:42">/* cas2 Dc1:Dc2,Du1:Du2,(Rn1):(Rn2) */</comment>



    <expr_stmt pos:start="17:5" pos:end="17:29"><expr pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:8">ext1</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:28"><name pos:start="17:12" pos:end="17:20">read_im16</name><argument_list pos:start="17:21" pos:end="17:28">(<argument pos:start="17:22" pos:end="17:24"><expr pos:start="17:22" pos:end="17:24"><name pos:start="17:22" pos:end="17:24">env</name></expr></argument>, <argument pos:start="17:27" pos:end="17:27"><expr pos:start="17:27" pos:end="17:27"><name pos:start="17:27" pos:end="17:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="33:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:22">(<expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:12">ext1</name> <operator pos:start="21:14" pos:end="21:14">&amp;</operator> <literal type="number" pos:start="21:16" pos:end="21:21">0x8000</literal></expr>)</condition> <block pos:start="21:24" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:31">

        <comment type="block" pos:start="23:9" pos:end="23:30">/* Address Register */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:31"><expr pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:13">addr1</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <call pos:start="25:17" pos:end="25:30"><name pos:start="25:17" pos:end="25:20">AREG</name><argument_list pos:start="25:21" pos:end="25:30">(<argument pos:start="25:22" pos:end="25:25"><expr pos:start="25:22" pos:end="25:25"><name pos:start="25:22" pos:end="25:25">ext1</name></expr></argument>, <argument pos:start="25:28" pos:end="25:29"><expr pos:start="25:28" pos:end="25:29"><literal type="number" pos:start="25:28" pos:end="25:29">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="33:5">else <block pos:start="27:12" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:31">

        <comment type="block" pos:start="29:9" pos:end="29:27">/* Data Register */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:31"><expr pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:13">addr1</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:30"><name pos:start="31:17" pos:end="31:20">DREG</name><argument_list pos:start="31:21" pos:end="31:30">(<argument pos:start="31:22" pos:end="31:25"><expr pos:start="31:22" pos:end="31:25"><name pos:start="31:22" pos:end="31:25">ext1</name></expr></argument>, <argument pos:start="31:28" pos:end="31:29"><expr pos:start="31:28" pos:end="31:29"><literal type="number" pos:start="31:28" pos:end="31:29">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:29"><expr pos:start="37:5" pos:end="37:28"><name pos:start="37:5" pos:end="37:8">ext2</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <call pos:start="37:12" pos:end="37:28"><name pos:start="37:12" pos:end="37:20">read_im16</name><argument_list pos:start="37:21" pos:end="37:28">(<argument pos:start="37:22" pos:end="37:24"><expr pos:start="37:22" pos:end="37:24"><name pos:start="37:22" pos:end="37:24">env</name></expr></argument>, <argument pos:start="37:27" pos:end="37:27"><expr pos:start="37:27" pos:end="37:27"><name pos:start="37:27" pos:end="37:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="51:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:22">(<expr pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:12">ext2</name> <operator pos:start="39:14" pos:end="39:14">&amp;</operator> <literal type="number" pos:start="39:16" pos:end="39:21">0x8000</literal></expr>)</condition> <block pos:start="39:24" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:31">

        <comment type="block" pos:start="41:9" pos:end="41:30">/* Address Register */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:31"><expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:13">addr2</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <call pos:start="43:17" pos:end="43:30"><name pos:start="43:17" pos:end="43:20">AREG</name><argument_list pos:start="43:21" pos:end="43:30">(<argument pos:start="43:22" pos:end="43:25"><expr pos:start="43:22" pos:end="43:25"><name pos:start="43:22" pos:end="43:25">ext2</name></expr></argument>, <argument pos:start="43:28" pos:end="43:29"><expr pos:start="43:28" pos:end="43:29"><literal type="number" pos:start="43:28" pos:end="43:29">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="51:5">else <block pos:start="45:12" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:31">

        <comment type="block" pos:start="47:9" pos:end="47:27">/* Data Register */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:31"><expr pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:13">addr2</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <call pos:start="49:17" pos:end="49:30"><name pos:start="49:17" pos:end="49:20">DREG</name><argument_list pos:start="49:21" pos:end="49:30">(<argument pos:start="49:22" pos:end="49:25"><expr pos:start="49:22" pos:end="49:25"><name pos:start="49:22" pos:end="49:25">ext2</name></expr></argument>, <argument pos:start="49:28" pos:end="49:29"><expr pos:start="49:28" pos:end="49:29"><literal type="number" pos:start="49:28" pos:end="49:29">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="67:7">/* if (R1) == Dc1 &amp;&amp; (R2) == Dc2 then

     *     (R1) = Du1

     *     (R2) = Du2

     * else

     *     Dc1 = (R1)

     *     Dc2 = (R2)

     */</comment>



    <expr_stmt pos:start="71:5" pos:end="77:46"><expr pos:start="71:5" pos:end="77:45"><name pos:start="71:5" pos:end="71:8">regs</name> <operator pos:start="71:10" pos:end="71:10">=</operator> <call pos:start="71:12" pos:end="77:45"><name pos:start="71:12" pos:end="71:24">tcg_const_i32</name><argument_list pos:start="71:25" pos:end="77:45">(<argument pos:start="71:26" pos:end="77:44"><expr pos:start="71:26" pos:end="77:44"><call pos:start="71:26" pos:end="71:37"><name pos:start="71:26" pos:end="71:28">REG</name><argument_list pos:start="71:29" pos:end="71:37">(<argument pos:start="71:30" pos:end="71:33"><expr pos:start="71:30" pos:end="71:33"><name pos:start="71:30" pos:end="71:33">ext2</name></expr></argument>, <argument pos:start="71:36" pos:end="71:36"><expr pos:start="71:36" pos:end="71:36"><literal type="number" pos:start="71:36" pos:end="71:36">6</literal></expr></argument>)</argument_list></call> <operator pos:start="71:39" pos:end="71:39">|</operator>

                         <operator pos:start="73:26" pos:end="73:26">(</operator><call pos:start="73:27" pos:end="73:38"><name pos:start="73:27" pos:end="73:29">REG</name><argument_list pos:start="73:30" pos:end="73:38">(<argument pos:start="73:31" pos:end="73:34"><expr pos:start="73:31" pos:end="73:34"><name pos:start="73:31" pos:end="73:34">ext1</name></expr></argument>, <argument pos:start="73:37" pos:end="73:37"><expr pos:start="73:37" pos:end="73:37"><literal type="number" pos:start="73:37" pos:end="73:37">6</literal></expr></argument>)</argument_list></call> <operator pos:start="73:40" pos:end="73:41">&lt;&lt;</operator> <literal type="number" pos:start="73:43" pos:end="73:43">3</literal><operator pos:start="73:44" pos:end="73:44">)</operator> <operator pos:start="73:46" pos:end="73:46">|</operator>

                         <operator pos:start="75:26" pos:end="75:26">(</operator><call pos:start="75:27" pos:end="75:38"><name pos:start="75:27" pos:end="75:29">REG</name><argument_list pos:start="75:30" pos:end="75:38">(<argument pos:start="75:31" pos:end="75:34"><expr pos:start="75:31" pos:end="75:34"><name pos:start="75:31" pos:end="75:34">ext2</name></expr></argument>, <argument pos:start="75:37" pos:end="75:37"><expr pos:start="75:37" pos:end="75:37"><literal type="number" pos:start="75:37" pos:end="75:37">0</literal></expr></argument>)</argument_list></call> <operator pos:start="75:40" pos:end="75:41">&lt;&lt;</operator> <literal type="number" pos:start="75:43" pos:end="75:43">6</literal><operator pos:start="75:44" pos:end="75:44">)</operator> <operator pos:start="75:46" pos:end="75:46">|</operator>

                         <operator pos:start="77:26" pos:end="77:26">(</operator><call pos:start="77:27" pos:end="77:38"><name pos:start="77:27" pos:end="77:29">REG</name><argument_list pos:start="77:30" pos:end="77:38">(<argument pos:start="77:31" pos:end="77:34"><expr pos:start="77:31" pos:end="77:34"><name pos:start="77:31" pos:end="77:34">ext1</name></expr></argument>, <argument pos:start="77:37" pos:end="77:37"><expr pos:start="77:37" pos:end="77:37"><literal type="number" pos:start="77:37" pos:end="77:37">0</literal></expr></argument>)</argument_list></call> <operator pos:start="77:40" pos:end="77:41">&lt;&lt;</operator> <literal type="number" pos:start="77:43" pos:end="77:43">9</literal><operator pos:start="77:44" pos:end="77:44">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:50"><expr pos:start="79:5" pos:end="79:49"><call pos:start="79:5" pos:end="79:49"><name pos:start="79:5" pos:end="79:20">gen_helper_cas2w</name><argument_list pos:start="79:21" pos:end="79:49">(<argument pos:start="79:22" pos:end="79:28"><expr pos:start="79:22" pos:end="79:28"><name pos:start="79:22" pos:end="79:28">cpu_env</name></expr></argument>, <argument pos:start="79:31" pos:end="79:34"><expr pos:start="79:31" pos:end="79:34"><name pos:start="79:31" pos:end="79:34">regs</name></expr></argument>, <argument pos:start="79:37" pos:end="79:41"><expr pos:start="79:37" pos:end="79:41"><name pos:start="79:37" pos:end="79:41">addr1</name></expr></argument>, <argument pos:start="79:44" pos:end="79:48"><expr pos:start="79:44" pos:end="79:48"><name pos:start="79:44" pos:end="79:48">addr2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:24"><expr pos:start="81:5" pos:end="81:23"><call pos:start="81:5" pos:end="81:23"><name pos:start="81:5" pos:end="81:17">tcg_temp_free</name><argument_list pos:start="81:18" pos:end="81:23">(<argument pos:start="81:19" pos:end="81:22"><expr pos:start="81:19" pos:end="81:22"><name pos:start="81:19" pos:end="81:22">regs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:55">/* Note that cas2w also assigned to env-&gt;cc_op.  */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:26"><expr pos:start="87:5" pos:end="87:25"><name pos:start="87:5" pos:end="87:12"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:12">cc_op</name></name> <operator pos:start="87:14" pos:end="87:14">=</operator> <name pos:start="87:16" pos:end="87:25">CC_OP_CMPW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:24"><expr pos:start="89:5" pos:end="89:23"><name pos:start="89:5" pos:end="89:19"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:19">cc_op_synced</name></name> <operator pos:start="89:21" pos:end="89:21">=</operator> <literal type="number" pos:start="89:23" pos:end="89:23">1</literal></expr>;</expr_stmt>

</block_content>}</block>
</unit>
