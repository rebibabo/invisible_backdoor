<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10277.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">default_drive</name><parameter_list pos:start="1:26" pos:end="5:45">(<parameter pos:start="1:27" pos:end="1:36"><decl pos:start="1:27" pos:end="1:36"><type pos:start="1:27" pos:end="1:36"><name pos:start="1:27" pos:end="1:29">int</name></type> <name pos:start="1:31" pos:end="1:36">enable</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:50">snapshot</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:64">use_scsi</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:49"><decl pos:start="3:27" pos:end="3:49"><type pos:start="3:27" pos:end="3:49"><name pos:start="3:27" pos:end="3:44">BlockInterfaceType</name></type> <name pos:start="3:46" pos:end="3:49">type</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:60"><decl pos:start="3:52" pos:end="3:60"><type pos:start="3:52" pos:end="3:60"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:60">index</name></decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:44"><decl pos:start="5:27" pos:end="5:44"><type pos:start="5:27" pos:end="5:44"><specifier pos:start="5:27" pos:end="5:31">const</specifier> <name pos:start="5:33" pos:end="5:36">char</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:44">optstr</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="43:1">{<block_content pos:start="9:5" pos:end="41:5">

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">QemuOpts</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:18">opts</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:27">(<expr pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:12">type</name> <operator pos:start="13:14" pos:end="13:15">==</operator> <name pos:start="13:17" pos:end="13:26">IF_DEFAULT</name></expr>)</condition> <block pos:start="13:29" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:43">

        <expr_stmt pos:start="15:9" pos:end="15:43"><expr pos:start="15:9" pos:end="15:42"><name pos:start="15:9" pos:end="15:12">type</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <ternary pos:start="15:16" pos:end="15:42"><condition pos:start="15:16" pos:end="15:25"><expr pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:23">use_scsi</name></expr> ?</condition><then pos:start="15:27" pos:end="15:33"> <expr pos:start="15:27" pos:end="15:33"><name pos:start="15:27" pos:end="15:33">IF_SCSI</name></expr> </then><else pos:start="15:35" pos:end="15:42">: <expr pos:start="15:37" pos:end="15:42"><name pos:start="15:37" pos:end="15:42">IF_IDE</name></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:51">(<expr pos:start="21:9" pos:end="21:50"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:15">enable</name> <operator pos:start="21:17" pos:end="21:18">||</operator> <call pos:start="21:20" pos:end="21:50"><name pos:start="21:20" pos:end="21:37">drive_get_by_index</name><argument_list pos:start="21:38" pos:end="21:50">(<argument pos:start="21:39" pos:end="21:42"><expr pos:start="21:39" pos:end="21:42"><name pos:start="21:39" pos:end="21:42">type</name></expr></argument>, <argument pos:start="21:45" pos:end="21:49"><expr pos:start="21:45" pos:end="21:49"><name pos:start="21:45" pos:end="21:49">index</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:53" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:15">

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:48"><expr pos:start="29:5" pos:end="29:47"><name pos:start="29:5" pos:end="29:8">opts</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:47"><name pos:start="29:12" pos:end="29:20">drive_add</name><argument_list pos:start="29:21" pos:end="29:47">(<argument pos:start="29:22" pos:end="29:25"><expr pos:start="29:22" pos:end="29:25"><name pos:start="29:22" pos:end="29:25">type</name></expr></argument>, <argument pos:start="29:28" pos:end="29:32"><expr pos:start="29:28" pos:end="29:32"><name pos:start="29:28" pos:end="29:32">index</name></expr></argument>, <argument pos:start="29:35" pos:end="29:38"><expr pos:start="29:35" pos:end="29:38"><name pos:start="29:35" pos:end="29:38">NULL</name></expr></argument>, <argument pos:start="29:41" pos:end="29:46"><expr pos:start="29:41" pos:end="29:46"><name pos:start="29:41" pos:end="29:46">optstr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:17">(<expr pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:16">snapshot</name></expr>)</condition> <block pos:start="31:19" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:42">

        <expr_stmt pos:start="33:9" pos:end="33:42"><expr pos:start="33:9" pos:end="33:41"><call pos:start="33:9" pos:end="33:41"><name pos:start="33:9" pos:end="33:29">drive_enable_snapshot</name><argument_list pos:start="33:30" pos:end="33:41">(<argument pos:start="33:31" pos:end="33:34"><expr pos:start="33:31" pos:end="33:34"><name pos:start="33:31" pos:end="33:34">opts</name></expr></argument>, <argument pos:start="33:37" pos:end="33:40"><expr pos:start="33:37" pos:end="33:40"><name pos:start="33:37" pos:end="33:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:36">(<expr pos:start="37:9" pos:end="37:35"><operator pos:start="37:9" pos:end="37:9">!</operator><call pos:start="37:10" pos:end="37:35"><name pos:start="37:10" pos:end="37:19">drive_init</name><argument_list pos:start="37:20" pos:end="37:35">(<argument pos:start="37:21" pos:end="37:24"><expr pos:start="37:21" pos:end="37:24"><name pos:start="37:21" pos:end="37:24">opts</name></expr></argument>, <argument pos:start="37:27" pos:end="37:34"><expr pos:start="37:27" pos:end="37:34"><name pos:start="37:27" pos:end="37:34">use_scsi</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:38" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:16">

        <expr_stmt pos:start="39:9" pos:end="39:16"><expr pos:start="39:9" pos:end="39:15"><call pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:12">exit</name><argument_list pos:start="39:13" pos:end="39:15">(<argument pos:start="39:14" pos:end="39:14"><expr pos:start="39:14" pos:end="39:14"><literal type="number" pos:start="39:14" pos:end="39:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
