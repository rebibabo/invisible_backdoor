<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12867.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">do_boot_set</name><parameter_list pos:start="1:24" pos:end="1:57">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:31">Monitor</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">mon</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:56"><specifier pos:start="1:39" pos:end="1:43">const</specifier> <name pos:start="1:45" pos:end="1:49">QDict</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:56">qdict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:5">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:63"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:26">bootdevice</name> <init pos:start="7:28" pos:end="7:63">= <expr pos:start="7:30" pos:end="7:63"><call pos:start="7:30" pos:end="7:63"><name pos:start="7:30" pos:end="7:42">qdict_get_str</name><argument_list pos:start="7:43" pos:end="7:63">(<argument pos:start="7:44" pos:end="7:48"><expr pos:start="7:44" pos:end="7:48"><name pos:start="7:44" pos:end="7:48">qdict</name></expr></argument>, <argument pos:start="7:51" pos:end="7:62"><expr pos:start="7:51" pos:end="7:62"><literal type="string" pos:start="7:51" pos:end="7:62">"bootdevice"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:36"><expr pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:7">res</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:35"><name pos:start="11:11" pos:end="11:23">qemu_boot_set</name><argument_list pos:start="11:24" pos:end="11:35">(<argument pos:start="11:25" pos:end="11:34"><expr pos:start="11:25" pos:end="11:34"><name pos:start="11:25" pos:end="11:34">bootdevice</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="27:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:17">(<expr pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:11">res</name> <operator pos:start="13:13" pos:end="13:14">==</operator> <literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>)</condition> <block pos:start="13:19" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:76">

        <expr_stmt pos:start="15:9" pos:end="15:76"><expr pos:start="15:9" pos:end="15:75"><call pos:start="15:9" pos:end="15:75"><name pos:start="15:9" pos:end="15:22">monitor_printf</name><argument_list pos:start="15:23" pos:end="15:75">(<argument pos:start="15:24" pos:end="15:26"><expr pos:start="15:24" pos:end="15:26"><name pos:start="15:24" pos:end="15:26">mon</name></expr></argument>, <argument pos:start="15:29" pos:end="15:62"><expr pos:start="15:29" pos:end="15:62"><literal type="string" pos:start="15:29" pos:end="15:62">"boot device list now set to %s\n"</literal></expr></argument>, <argument pos:start="15:65" pos:end="15:74"><expr pos:start="15:65" pos:end="15:74"><name pos:start="15:65" pos:end="15:74">bootdevice</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="17:7" pos:end="21:5">else if <condition pos:start="17:15" pos:end="17:23">(<expr pos:start="17:16" pos:end="17:22"><name pos:start="17:16" pos:end="17:18">res</name> <operator pos:start="17:20" pos:end="17:20">&gt;</operator> <literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr>)</condition> <block pos:start="17:25" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:65">

        <expr_stmt pos:start="19:9" pos:end="19:65"><expr pos:start="19:9" pos:end="19:64"><call pos:start="19:9" pos:end="19:64"><name pos:start="19:9" pos:end="19:22">monitor_printf</name><argument_list pos:start="19:23" pos:end="19:64">(<argument pos:start="19:24" pos:end="19:26"><expr pos:start="19:24" pos:end="19:26"><name pos:start="19:24" pos:end="19:26">mon</name></expr></argument>, <argument pos:start="19:29" pos:end="19:63"><expr pos:start="19:29" pos:end="19:63"><literal type="string" pos:start="19:29" pos:end="19:63">"setting boot device list failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="27:5">else <block pos:start="21:12" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:46">

        <expr_stmt pos:start="23:9" pos:end="25:46"><expr pos:start="23:9" pos:end="25:45"><call pos:start="23:9" pos:end="25:45"><name pos:start="23:9" pos:end="23:22">monitor_printf</name><argument_list pos:start="23:23" pos:end="25:45">(<argument pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:26">mon</name></expr></argument>, <argument pos:start="23:29" pos:end="25:44"><expr pos:start="23:29" pos:end="25:44"><literal type="string" pos:start="23:29" pos:end="23:78">"no function defined to set boot device list for "</literal>

                       <literal type="string" pos:start="25:24" pos:end="25:44">"this architecture\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
