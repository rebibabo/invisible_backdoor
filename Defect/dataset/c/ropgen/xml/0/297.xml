<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/297.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:26">nabm_readb</name> <parameter_list pos:start="1:28" pos:end="1:56">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:55"><decl pos:start="1:43" pos:end="1:55"><type pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:50">uint32_t</name></type> <name pos:start="1:52" pos:end="1:55">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:15">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">PCIAC97LinkState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">d</name> <init pos:start="5:25" pos:end="5:32">= <expr pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:32">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">AC97LinkState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:31">= <expr pos:start="7:24" pos:end="7:31"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:31"><name pos:start="7:25" pos:end="7:25">d</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:31">ac97</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AC97BusMasterRegs</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:24">r</name> <init pos:start="9:26" pos:end="9:31">= <expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:18">index</name> <init pos:start="11:20" pos:end="11:38">= <expr pos:start="11:22" pos:end="11:38"><name pos:start="11:22" pos:end="11:25">addr</name> <operator pos:start="11:27" pos:end="11:27">-</operator> <name pos:start="11:29" pos:end="11:38"><name pos:start="11:29" pos:end="11:29">s</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:35">base</name><index pos:start="11:36" pos:end="11:38">[<expr pos:start="11:37" pos:end="11:37"><literal type="number" pos:start="11:37" pos:end="11:37">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:16">val</name> <init pos:start="13:18" pos:end="13:22">= <expr pos:start="13:20" pos:end="13:22"><operator pos:start="13:20" pos:end="13:20">~</operator><literal type="number" pos:start="13:21" pos:end="13:22">0U</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="17:5" pos:end="105:5">switch <condition pos:start="17:12" pos:end="17:18">(<expr pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:17">index</name></expr>)</condition> <block pos:start="17:20" pos:end="105:5">{<block_content pos:start="19:5" pos:end="103:14">

    <case pos:start="19:5" pos:end="19:13">case <expr pos:start="19:10" pos:end="19:12"><name pos:start="19:10" pos:end="19:12">CAS</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:35"><expr pos:start="21:9" pos:end="21:34"><call pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:13">dolog</name> <argument_list pos:start="21:15" pos:end="21:34">(<argument pos:start="21:16" pos:end="21:25"><expr pos:start="21:16" pos:end="21:25"><literal type="string" pos:start="21:16" pos:end="21:25">"CAS %d\n"</literal></expr></argument>, <argument pos:start="21:28" pos:end="21:33"><expr pos:start="21:28" pos:end="21:33"><name pos:start="21:28" pos:end="21:33"><name pos:start="21:28" pos:end="21:28">s</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:33">cas</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:21"><expr pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:11">val</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:20"><name pos:start="23:15" pos:end="23:15">s</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:20">cas</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:19"><expr pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:14">cas</name></name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">1</literal></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:16">case <expr pos:start="29:10" pos:end="29:15"><name pos:start="29:10" pos:end="29:15">PI_CIV</name></expr>:</case>

    <case pos:start="31:5" pos:end="31:16">case <expr pos:start="31:10" pos:end="31:15"><name pos:start="31:10" pos:end="31:15">PO_CIV</name></expr>:</case>

    <case pos:start="33:5" pos:end="33:16">case <expr pos:start="33:10" pos:end="33:15"><name pos:start="33:10" pos:end="33:15">MC_CIV</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:40"><expr pos:start="35:9" pos:end="35:39"><name pos:start="35:9" pos:end="35:9">r</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <operator pos:start="35:13" pos:end="35:13">&amp;</operator><name pos:start="35:14" pos:end="35:39"><name pos:start="35:14" pos:end="35:14">s</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:23">bm_regs</name><index pos:start="35:24" pos:end="35:39">[<expr pos:start="35:25" pos:end="35:38"><call pos:start="35:25" pos:end="35:38"><name pos:start="35:25" pos:end="35:30">GET_BM</name> <argument_list pos:start="35:32" pos:end="35:38">(<argument pos:start="35:33" pos:end="35:37"><expr pos:start="35:33" pos:end="35:37"><name pos:start="35:33" pos:end="35:37">index</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:21"><expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:11">val</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:20"><name pos:start="37:15" pos:end="37:15">r</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:20">civ</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:56"><expr pos:start="39:9" pos:end="39:55"><call pos:start="39:9" pos:end="39:55"><name pos:start="39:9" pos:end="39:13">dolog</name> <argument_list pos:start="39:15" pos:end="39:55">(<argument pos:start="39:16" pos:end="39:33"><expr pos:start="39:16" pos:end="39:33"><literal type="string" pos:start="39:16" pos:end="39:33">"CIV[%d] -&gt; %#x\n"</literal></expr></argument>, <argument pos:start="39:36" pos:end="39:49"><expr pos:start="39:36" pos:end="39:49"><call pos:start="39:36" pos:end="39:49"><name pos:start="39:36" pos:end="39:41">GET_BM</name> <argument_list pos:start="39:43" pos:end="39:49">(<argument pos:start="39:44" pos:end="39:48"><expr pos:start="39:44" pos:end="39:48"><name pos:start="39:44" pos:end="39:48">index</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:52" pos:end="39:54"><expr pos:start="39:52" pos:end="39:54"><name pos:start="39:52" pos:end="39:54">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:16">case <expr pos:start="43:10" pos:end="43:15"><name pos:start="43:10" pos:end="43:15">PI_LVI</name></expr>:</case>

    <case pos:start="45:5" pos:end="45:16">case <expr pos:start="45:10" pos:end="45:15"><name pos:start="45:10" pos:end="45:15">PO_LVI</name></expr>:</case>

    <case pos:start="47:5" pos:end="47:16">case <expr pos:start="47:10" pos:end="47:15"><name pos:start="47:10" pos:end="47:15">MC_LVI</name></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="49:40"><expr pos:start="49:9" pos:end="49:39"><name pos:start="49:9" pos:end="49:9">r</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <operator pos:start="49:13" pos:end="49:13">&amp;</operator><name pos:start="49:14" pos:end="49:39"><name pos:start="49:14" pos:end="49:14">s</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:23">bm_regs</name><index pos:start="49:24" pos:end="49:39">[<expr pos:start="49:25" pos:end="49:38"><call pos:start="49:25" pos:end="49:38"><name pos:start="49:25" pos:end="49:30">GET_BM</name> <argument_list pos:start="49:32" pos:end="49:38">(<argument pos:start="49:33" pos:end="49:37"><expr pos:start="49:33" pos:end="49:37"><name pos:start="49:33" pos:end="49:37">index</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:21"><expr pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:11">val</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <name pos:start="51:15" pos:end="51:20"><name pos:start="51:15" pos:end="51:15">r</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:20">lvi</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:56"><expr pos:start="53:9" pos:end="53:55"><call pos:start="53:9" pos:end="53:55"><name pos:start="53:9" pos:end="53:13">dolog</name> <argument_list pos:start="53:15" pos:end="53:55">(<argument pos:start="53:16" pos:end="53:33"><expr pos:start="53:16" pos:end="53:33"><literal type="string" pos:start="53:16" pos:end="53:33">"LVI[%d] -&gt; %#x\n"</literal></expr></argument>, <argument pos:start="53:36" pos:end="53:49"><expr pos:start="53:36" pos:end="53:49"><call pos:start="53:36" pos:end="53:49"><name pos:start="53:36" pos:end="53:41">GET_BM</name> <argument_list pos:start="53:43" pos:end="53:49">(<argument pos:start="53:44" pos:end="53:48"><expr pos:start="53:44" pos:end="53:48"><name pos:start="53:44" pos:end="53:48">index</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="53:52" pos:end="53:54"><expr pos:start="53:52" pos:end="53:54"><name pos:start="53:52" pos:end="53:54">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:16">case <expr pos:start="57:10" pos:end="57:15"><name pos:start="57:10" pos:end="57:15">PI_PIV</name></expr>:</case>

    <case pos:start="59:5" pos:end="59:16">case <expr pos:start="59:10" pos:end="59:15"><name pos:start="59:10" pos:end="59:15">PO_PIV</name></expr>:</case>

    <case pos:start="61:5" pos:end="61:16">case <expr pos:start="61:10" pos:end="61:15"><name pos:start="61:10" pos:end="61:15">MC_PIV</name></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:40"><expr pos:start="63:9" pos:end="63:39"><name pos:start="63:9" pos:end="63:9">r</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <operator pos:start="63:13" pos:end="63:13">&amp;</operator><name pos:start="63:14" pos:end="63:39"><name pos:start="63:14" pos:end="63:14">s</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:23">bm_regs</name><index pos:start="63:24" pos:end="63:39">[<expr pos:start="63:25" pos:end="63:38"><call pos:start="63:25" pos:end="63:38"><name pos:start="63:25" pos:end="63:30">GET_BM</name> <argument_list pos:start="63:32" pos:end="63:38">(<argument pos:start="63:33" pos:end="63:37"><expr pos:start="63:33" pos:end="63:37"><name pos:start="63:33" pos:end="63:37">index</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:21"><expr pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:11">val</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <name pos:start="65:15" pos:end="65:20"><name pos:start="65:15" pos:end="65:15">r</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:20">piv</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:56"><expr pos:start="67:9" pos:end="67:55"><call pos:start="67:9" pos:end="67:55"><name pos:start="67:9" pos:end="67:13">dolog</name> <argument_list pos:start="67:15" pos:end="67:55">(<argument pos:start="67:16" pos:end="67:33"><expr pos:start="67:16" pos:end="67:33"><literal type="string" pos:start="67:16" pos:end="67:33">"PIV[%d] -&gt; %#x\n"</literal></expr></argument>, <argument pos:start="67:36" pos:end="67:49"><expr pos:start="67:36" pos:end="67:49"><call pos:start="67:36" pos:end="67:49"><name pos:start="67:36" pos:end="67:41">GET_BM</name> <argument_list pos:start="67:43" pos:end="67:49">(<argument pos:start="67:44" pos:end="67:48"><expr pos:start="67:44" pos:end="67:48"><name pos:start="67:44" pos:end="67:48">index</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="67:52" pos:end="67:54"><expr pos:start="67:52" pos:end="67:54"><name pos:start="67:52" pos:end="67:54">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:15">case <expr pos:start="71:10" pos:end="71:14"><name pos:start="71:10" pos:end="71:14">PI_CR</name></expr>:</case>

    <case pos:start="73:5" pos:end="73:15">case <expr pos:start="73:10" pos:end="73:14"><name pos:start="73:10" pos:end="73:14">PO_CR</name></expr>:</case>

    <case pos:start="75:5" pos:end="75:15">case <expr pos:start="75:10" pos:end="75:14"><name pos:start="75:10" pos:end="75:14">MC_CR</name></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:40"><expr pos:start="77:9" pos:end="77:39"><name pos:start="77:9" pos:end="77:9">r</name> <operator pos:start="77:11" pos:end="77:11">=</operator> <operator pos:start="77:13" pos:end="77:13">&amp;</operator><name pos:start="77:14" pos:end="77:39"><name pos:start="77:14" pos:end="77:14">s</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:23">bm_regs</name><index pos:start="77:24" pos:end="77:39">[<expr pos:start="77:25" pos:end="77:38"><call pos:start="77:25" pos:end="77:38"><name pos:start="77:25" pos:end="77:30">GET_BM</name> <argument_list pos:start="77:32" pos:end="77:38">(<argument pos:start="77:33" pos:end="77:37"><expr pos:start="77:33" pos:end="77:37"><name pos:start="77:33" pos:end="77:37">index</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:20"><expr pos:start="79:9" pos:end="79:19"><name pos:start="79:9" pos:end="79:11">val</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <name pos:start="79:15" pos:end="79:19"><name pos:start="79:15" pos:end="79:15">r</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:19">cr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:55"><expr pos:start="81:9" pos:end="81:54"><call pos:start="81:9" pos:end="81:54"><name pos:start="81:9" pos:end="81:13">dolog</name> <argument_list pos:start="81:15" pos:end="81:54">(<argument pos:start="81:16" pos:end="81:32"><expr pos:start="81:16" pos:end="81:32"><literal type="string" pos:start="81:16" pos:end="81:32">"CR[%d] -&gt; %#x\n"</literal></expr></argument>, <argument pos:start="81:35" pos:end="81:48"><expr pos:start="81:35" pos:end="81:48"><call pos:start="81:35" pos:end="81:48"><name pos:start="81:35" pos:end="81:40">GET_BM</name> <argument_list pos:start="81:42" pos:end="81:48">(<argument pos:start="81:43" pos:end="81:47"><expr pos:start="81:43" pos:end="81:47"><name pos:start="81:43" pos:end="81:47">index</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="81:51" pos:end="81:53"><expr pos:start="81:51" pos:end="81:53"><name pos:start="81:51" pos:end="81:53">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:15">case <expr pos:start="85:10" pos:end="85:14"><name pos:start="85:10" pos:end="85:14">PI_SR</name></expr>:</case>

    <case pos:start="87:5" pos:end="87:15">case <expr pos:start="87:10" pos:end="87:14"><name pos:start="87:10" pos:end="87:14">PO_SR</name></expr>:</case>

    <case pos:start="89:5" pos:end="89:15">case <expr pos:start="89:10" pos:end="89:14"><name pos:start="89:10" pos:end="89:14">MC_SR</name></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="91:40"><expr pos:start="91:9" pos:end="91:39"><name pos:start="91:9" pos:end="91:9">r</name> <operator pos:start="91:11" pos:end="91:11">=</operator> <operator pos:start="91:13" pos:end="91:13">&amp;</operator><name pos:start="91:14" pos:end="91:39"><name pos:start="91:14" pos:end="91:14">s</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:23">bm_regs</name><index pos:start="91:24" pos:end="91:39">[<expr pos:start="91:25" pos:end="91:38"><call pos:start="91:25" pos:end="91:38"><name pos:start="91:25" pos:end="91:30">GET_BM</name> <argument_list pos:start="91:32" pos:end="91:38">(<argument pos:start="91:33" pos:end="91:37"><expr pos:start="91:33" pos:end="91:37"><name pos:start="91:33" pos:end="91:37">index</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:27"><expr pos:start="93:9" pos:end="93:26"><name pos:start="93:9" pos:end="93:11">val</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <name pos:start="93:15" pos:end="93:19"><name pos:start="93:15" pos:end="93:15">r</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:19">sr</name></name> <operator pos:start="93:21" pos:end="93:21">&amp;</operator> <literal type="number" pos:start="93:23" pos:end="93:26">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:56"><expr pos:start="95:9" pos:end="95:55"><call pos:start="95:9" pos:end="95:55"><name pos:start="95:9" pos:end="95:13">dolog</name> <argument_list pos:start="95:15" pos:end="95:55">(<argument pos:start="95:16" pos:end="95:33"><expr pos:start="95:16" pos:end="95:33"><literal type="string" pos:start="95:16" pos:end="95:33">"SRb[%d] -&gt; %#x\n"</literal></expr></argument>, <argument pos:start="95:36" pos:end="95:49"><expr pos:start="95:36" pos:end="95:49"><call pos:start="95:36" pos:end="95:49"><name pos:start="95:36" pos:end="95:41">GET_BM</name> <argument_list pos:start="95:43" pos:end="95:49">(<argument pos:start="95:44" pos:end="95:48"><expr pos:start="95:44" pos:end="95:48"><name pos:start="95:44" pos:end="95:48">index</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="95:52" pos:end="95:54"><expr pos:start="95:52" pos:end="95:54"><name pos:start="95:52" pos:end="95:54">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <default pos:start="99:5" pos:end="99:12">default:</default>

        <expr_stmt pos:start="101:9" pos:end="101:55"><expr pos:start="101:9" pos:end="101:54"><call pos:start="101:9" pos:end="101:54"><name pos:start="101:9" pos:end="101:13">dolog</name> <argument_list pos:start="101:15" pos:end="101:54">(<argument pos:start="101:16" pos:end="101:42"><expr pos:start="101:16" pos:end="101:42"><literal type="string" pos:start="101:16" pos:end="101:42">"U nabm readb %#x -&gt; %#x\n"</literal></expr></argument>, <argument pos:start="101:45" pos:end="101:48"><expr pos:start="101:45" pos:end="101:48"><name pos:start="101:45" pos:end="101:48">addr</name></expr></argument>, <argument pos:start="101:51" pos:end="101:53"><expr pos:start="101:51" pos:end="101:53"><name pos:start="101:51" pos:end="101:53">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="107:5" pos:end="107:15">return <expr pos:start="107:12" pos:end="107:14"><name pos:start="107:12" pos:end="107:14">val</name></expr>;</return>

</block_content>}</block></function>
</unit>
