<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15545.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">virtio_gpu_handle_cursor</name><parameter_list pos:start="1:37" pos:end="1:71">(<parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><name pos:start="1:38" pos:end="1:49">VirtIODevice</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">vdev</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:70"><decl pos:start="1:58" pos:end="1:70"><type pos:start="1:58" pos:end="1:70"><name pos:start="1:58" pos:end="1:66">VirtQueue</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:70">vq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:5">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VirtIOGPU</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">g</name> <init pos:start="5:18" pos:end="5:35">= <expr pos:start="5:20" pos:end="5:35"><call pos:start="5:20" pos:end="5:35"><name pos:start="5:20" pos:end="5:29">VIRTIO_GPU</name><argument_list pos:start="5:30" pos:end="5:35">(<argument pos:start="5:31" pos:end="5:34"><expr pos:start="5:31" pos:end="5:34"><name pos:start="5:31" pos:end="5:34">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:20">VirtQueueElement</name></type> <name pos:start="7:22" pos:end="7:25">elem</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:12">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:47"><type pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:35">virtio_gpu_update_cursor</name></name></type> <name pos:start="11:37" pos:end="11:47">cursor_info</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:32">(<expr pos:start="15:9" pos:end="15:31"><operator pos:start="15:9" pos:end="15:9">!</operator><call pos:start="15:10" pos:end="15:31"><name pos:start="15:10" pos:end="15:27">virtio_queue_ready</name><argument_list pos:start="15:28" pos:end="15:31">(<argument pos:start="15:29" pos:end="15:30"><expr pos:start="15:29" pos:end="15:30"><name pos:start="15:29" pos:end="15:30">vq</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:34" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <while pos:start="21:5" pos:end="45:5">while <condition pos:start="21:11" pos:end="21:36">(<expr pos:start="21:12" pos:end="21:35"><call pos:start="21:12" pos:end="21:35"><name pos:start="21:12" pos:end="21:24">virtqueue_pop</name><argument_list pos:start="21:25" pos:end="21:35">(<argument pos:start="21:26" pos:end="21:27"><expr pos:start="21:26" pos:end="21:27"><name pos:start="21:26" pos:end="21:27">vq</name></expr></argument>, <argument pos:start="21:30" pos:end="21:34"><expr pos:start="21:30" pos:end="21:34"><operator pos:start="21:30" pos:end="21:30">&amp;</operator><name pos:start="21:31" pos:end="21:34">elem</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:38" pos:end="45:5">{<block_content pos:start="23:9" pos:end="43:32">

        <expr_stmt pos:start="23:9" pos:end="25:58"><expr pos:start="23:9" pos:end="25:57"><name pos:start="23:9" pos:end="23:9">s</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="25:57"><name pos:start="23:13" pos:end="23:22">iov_to_buf</name><argument_list pos:start="23:23" pos:end="25:57">(<argument pos:start="23:24" pos:end="23:34"><expr pos:start="23:24" pos:end="23:34"><name pos:start="23:24" pos:end="23:34"><name pos:start="23:24" pos:end="23:27">elem</name><operator pos:start="23:28" pos:end="23:28">.</operator><name pos:start="23:29" pos:end="23:34">out_sg</name></name></expr></argument>, <argument pos:start="23:37" pos:end="23:48"><expr pos:start="23:37" pos:end="23:48"><name pos:start="23:37" pos:end="23:48"><name pos:start="23:37" pos:end="23:40">elem</name><operator pos:start="23:41" pos:end="23:41">.</operator><name pos:start="23:42" pos:end="23:48">out_num</name></name></expr></argument>, <argument pos:start="23:51" pos:end="23:51"><expr pos:start="23:51" pos:end="23:51"><literal type="number" pos:start="23:51" pos:end="23:51">0</literal></expr></argument>,

                       <argument pos:start="25:24" pos:end="25:35"><expr pos:start="25:24" pos:end="25:35"><operator pos:start="25:24" pos:end="25:24">&amp;</operator><name pos:start="25:25" pos:end="25:35">cursor_info</name></expr></argument>, <argument pos:start="25:38" pos:end="25:56"><expr pos:start="25:38" pos:end="25:56"><sizeof pos:start="25:38" pos:end="25:56">sizeof<argument_list pos:start="25:44" pos:end="25:56">(<argument pos:start="25:45" pos:end="25:55"><expr pos:start="25:45" pos:end="25:55"><name pos:start="25:45" pos:end="25:55">cursor_info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="39:9"><if pos:start="27:9" pos:end="35:9">if <condition pos:start="27:12" pos:end="27:37">(<expr pos:start="27:13" pos:end="27:36"><name pos:start="27:13" pos:end="27:13">s</name> <operator pos:start="27:15" pos:end="27:16">!=</operator> <sizeof pos:start="27:18" pos:end="27:36">sizeof<argument_list pos:start="27:24" pos:end="27:36">(<argument pos:start="27:25" pos:end="27:35"><expr pos:start="27:25" pos:end="27:35"><name pos:start="27:25" pos:end="27:35">cursor_info</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="27:39" pos:end="35:9">{<block_content pos:start="29:13" pos:end="33:60">

            <expr_stmt pos:start="29:13" pos:end="33:60"><expr pos:start="29:13" pos:end="33:59"><call pos:start="29:13" pos:end="33:59"><name pos:start="29:13" pos:end="29:25">qemu_log_mask</name><argument_list pos:start="29:26" pos:end="33:59">(<argument pos:start="29:27" pos:end="29:41"><expr pos:start="29:27" pos:end="29:41"><name pos:start="29:27" pos:end="29:41">LOG_GUEST_ERROR</name></expr></argument>,

                          <argument pos:start="31:27" pos:end="31:66"><expr pos:start="31:27" pos:end="31:66"><literal type="string" pos:start="31:27" pos:end="31:66">"%s: cursor size incorrect %zu vs %zu\n"</literal></expr></argument>,

                          <argument pos:start="33:27" pos:end="33:34"><expr pos:start="33:27" pos:end="33:34"><name pos:start="33:27" pos:end="33:34">__func__</name></expr></argument>, <argument pos:start="33:37" pos:end="33:37"><expr pos:start="33:37" pos:end="33:37"><name pos:start="33:37" pos:end="33:37">s</name></expr></argument>, <argument pos:start="33:40" pos:end="33:58"><expr pos:start="33:40" pos:end="33:58"><sizeof pos:start="33:40" pos:end="33:58">sizeof<argument_list pos:start="33:46" pos:end="33:58">(<argument pos:start="33:47" pos:end="33:57"><expr pos:start="33:47" pos:end="33:57"><name pos:start="33:47" pos:end="33:57">cursor_info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="35:11" pos:end="39:9">else <block pos:start="35:16" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:43">

            <expr_stmt pos:start="37:13" pos:end="37:43"><expr pos:start="37:13" pos:end="37:42"><call pos:start="37:13" pos:end="37:42"><name pos:start="37:13" pos:end="37:25">update_cursor</name><argument_list pos:start="37:26" pos:end="37:42">(<argument pos:start="37:27" pos:end="37:27"><expr pos:start="37:27" pos:end="37:27"><name pos:start="37:27" pos:end="37:27">g</name></expr></argument>, <argument pos:start="37:30" pos:end="37:41"><expr pos:start="37:30" pos:end="37:41"><operator pos:start="37:30" pos:end="37:30">&amp;</operator><name pos:start="37:31" pos:end="37:41">cursor_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:37"><expr pos:start="41:9" pos:end="41:36"><call pos:start="41:9" pos:end="41:36"><name pos:start="41:9" pos:end="41:22">virtqueue_push</name><argument_list pos:start="41:23" pos:end="41:36">(<argument pos:start="41:24" pos:end="41:25"><expr pos:start="41:24" pos:end="41:25"><name pos:start="41:24" pos:end="41:25">vq</name></expr></argument>, <argument pos:start="41:28" pos:end="41:32"><expr pos:start="41:28" pos:end="41:32"><operator pos:start="41:28" pos:end="41:28">&amp;</operator><name pos:start="41:29" pos:end="41:32">elem</name></expr></argument>, <argument pos:start="41:35" pos:end="41:35"><expr pos:start="41:35" pos:end="41:35"><literal type="number" pos:start="41:35" pos:end="41:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:32"><expr pos:start="43:9" pos:end="43:31"><call pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:21">virtio_notify</name><argument_list pos:start="43:22" pos:end="43:31">(<argument pos:start="43:23" pos:end="43:26"><expr pos:start="43:23" pos:end="43:26"><name pos:start="43:23" pos:end="43:26">vdev</name></expr></argument>, <argument pos:start="43:29" pos:end="43:30"><expr pos:start="43:29" pos:end="43:30"><name pos:start="43:29" pos:end="43:30">vq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
