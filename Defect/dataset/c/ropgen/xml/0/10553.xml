<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10553.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_mvhd</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:25">creation_time</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">version</name> <init pos:start="9:17" pos:end="9:29">= <expr pos:start="9:19" pos:end="9:29"><call pos:start="9:19" pos:end="9:29"><name pos:start="9:19" pos:end="9:25">avio_r8</name><argument_list pos:start="9:26" pos:end="9:29">(<argument pos:start="9:27" pos:end="9:28"><expr pos:start="9:27" pos:end="9:28"><name pos:start="9:27" pos:end="9:28">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="9:32" pos:end="9:44">/* version */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:18"><expr pos:start="11:5" pos:end="11:17"><call pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:13">avio_rb24</name><argument_list pos:start="11:14" pos:end="11:17">(<argument pos:start="11:15" pos:end="11:16"><expr pos:start="11:15" pos:end="11:16"><name pos:start="11:15" pos:end="11:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="11:20" pos:end="11:30">/* flags */</comment>



    <if_stmt pos:start="15:5" pos:end="27:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:21">(<expr pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:15">version</name> <operator pos:start="15:17" pos:end="15:18">==</operator> <literal type="number" pos:start="15:20" pos:end="15:20">1</literal></expr>)</condition> <block pos:start="15:23" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:22">

        <expr_stmt pos:start="17:9" pos:end="17:38"><expr pos:start="17:9" pos:end="17:37"><name pos:start="17:9" pos:end="17:21">creation_time</name> <operator pos:start="17:23" pos:end="17:23">=</operator> <call pos:start="17:25" pos:end="17:37"><name pos:start="17:25" pos:end="17:33">avio_rb64</name><argument_list pos:start="17:34" pos:end="17:37">(<argument pos:start="17:35" pos:end="17:36"><expr pos:start="17:35" pos:end="17:36"><name pos:start="17:35" pos:end="17:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:22"><expr pos:start="19:9" pos:end="19:21"><call pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:17">avio_rb64</name><argument_list pos:start="19:18" pos:end="19:21">(<argument pos:start="19:19" pos:end="19:20"><expr pos:start="19:19" pos:end="19:20"><name pos:start="19:19" pos:end="19:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="27:5">else <block pos:start="21:12" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:22">

        <expr_stmt pos:start="23:9" pos:end="23:38"><expr pos:start="23:9" pos:end="23:37"><name pos:start="23:9" pos:end="23:21">creation_time</name> <operator pos:start="23:23" pos:end="23:23">=</operator> <call pos:start="23:25" pos:end="23:37"><name pos:start="23:25" pos:end="23:33">avio_rb32</name><argument_list pos:start="23:34" pos:end="23:37">(<argument pos:start="23:35" pos:end="23:36"><expr pos:start="23:35" pos:end="23:36"><name pos:start="23:35" pos:end="23:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:22"><expr pos:start="25:9" pos:end="25:21"><call pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:17">avio_rb32</name><argument_list pos:start="25:18" pos:end="25:21">(<argument pos:start="25:19" pos:end="25:20"><expr pos:start="25:19" pos:end="25:20"><name pos:start="25:19" pos:end="25:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="25:24" pos:end="25:46">/* modification time */</comment>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:64"><expr pos:start="29:5" pos:end="29:63"><call pos:start="29:5" pos:end="29:63"><name pos:start="29:5" pos:end="29:30">mov_metadata_creation_time</name><argument_list pos:start="29:31" pos:end="29:63">(<argument pos:start="29:32" pos:end="29:47"><expr pos:start="29:32" pos:end="29:47"><operator pos:start="29:32" pos:end="29:32">&amp;</operator><name pos:start="29:33" pos:end="29:47"><name pos:start="29:33" pos:end="29:33">c</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:37">fc</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:47">metadata</name></name></expr></argument>, <argument pos:start="29:50" pos:end="29:62"><expr pos:start="29:50" pos:end="29:62"><name pos:start="29:50" pos:end="29:62">creation_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:5">c</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:17">time_scale</name></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:33"><name pos:start="31:21" pos:end="31:29">avio_rb32</name><argument_list pos:start="31:30" pos:end="31:33">(<argument pos:start="31:31" pos:end="31:32"><expr pos:start="31:31" pos:end="31:32"><name pos:start="31:31" pos:end="31:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="31:36" pos:end="31:51">/* time scale */</comment>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:27">(<expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:9">c</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:21">time_scale</name></name> <operator pos:start="33:23" pos:end="33:24">&lt;=</operator> <literal type="number" pos:start="33:26" pos:end="33:26">0</literal></expr>)</condition> <block pos:start="33:29" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:35">

        <expr_stmt pos:start="35:9" pos:end="35:83"><expr pos:start="35:9" pos:end="35:82"><call pos:start="35:9" pos:end="35:82"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:82">(<argument pos:start="35:16" pos:end="35:20"><expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:16">c</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:20">fc</name></name></expr></argument>, <argument pos:start="35:23" pos:end="35:34"><expr pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:37" pos:end="35:66"><expr pos:start="35:37" pos:end="35:66"><literal type="string" pos:start="35:37" pos:end="35:66">"Invalid mvhd time scale %d\n"</literal></expr></argument>, <argument pos:start="35:69" pos:end="35:81"><expr pos:start="35:69" pos:end="35:81"><name pos:start="35:69" pos:end="35:81"><name pos:start="35:69" pos:end="35:69">c</name><operator pos:start="35:70" pos:end="35:71">-&gt;</operator><name pos:start="35:72" pos:end="35:81">time_scale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:35">return <expr pos:start="37:16" pos:end="37:34"><name pos:start="37:16" pos:end="37:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:68"><expr pos:start="41:5" pos:end="41:67"><call pos:start="41:5" pos:end="41:67"><name pos:start="41:5" pos:end="41:10">av_log</name><argument_list pos:start="41:11" pos:end="41:67">(<argument pos:start="41:12" pos:end="41:16"><expr pos:start="41:12" pos:end="41:16"><name pos:start="41:12" pos:end="41:16"><name pos:start="41:12" pos:end="41:12">c</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:16">fc</name></name></expr></argument>, <argument pos:start="41:19" pos:end="41:30"><expr pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:30">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="41:33" pos:end="41:51"><expr pos:start="41:33" pos:end="41:51"><literal type="string" pos:start="41:33" pos:end="41:51">"time scale = %i\n"</literal></expr></argument>, <argument pos:start="41:54" pos:end="41:66"><expr pos:start="41:54" pos:end="41:66"><name pos:start="41:54" pos:end="41:66"><name pos:start="41:54" pos:end="41:54">c</name><operator pos:start="41:55" pos:end="41:56">-&gt;</operator><name pos:start="41:57" pos:end="41:66">time_scale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:65"><expr pos:start="45:5" pos:end="45:64"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:5">c</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:15">duration</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <ternary pos:start="45:19" pos:end="45:64"><condition pos:start="45:19" pos:end="45:34"><expr pos:start="45:19" pos:end="45:32"><operator pos:start="45:19" pos:end="45:19">(</operator><name pos:start="45:20" pos:end="45:26">version</name> <operator pos:start="45:28" pos:end="45:29">==</operator> <literal type="number" pos:start="45:31" pos:end="45:31">1</literal><operator pos:start="45:32" pos:end="45:32">)</operator></expr> ?</condition><then pos:start="45:36" pos:end="45:48"> <expr pos:start="45:36" pos:end="45:48"><call pos:start="45:36" pos:end="45:48"><name pos:start="45:36" pos:end="45:44">avio_rb64</name><argument_list pos:start="45:45" pos:end="45:48">(<argument pos:start="45:46" pos:end="45:47"><expr pos:start="45:46" pos:end="45:47"><name pos:start="45:46" pos:end="45:47">pb</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="45:50" pos:end="45:64">: <expr pos:start="45:52" pos:end="45:64"><call pos:start="45:52" pos:end="45:64"><name pos:start="45:52" pos:end="45:60">avio_rb32</name><argument_list pos:start="45:61" pos:end="45:64">(<argument pos:start="45:62" pos:end="45:63"><expr pos:start="45:62" pos:end="45:63"><name pos:start="45:62" pos:end="45:63">pb</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt> <comment type="block" pos:start="45:67" pos:end="45:80">/* duration */</comment>

    <comment type="line" pos:start="47:5" pos:end="47:80">// set the AVCodecContext duration because the duration of individual tracks</comment>

    <comment type="line" pos:start="49:5" pos:end="49:24">// may be inaccurate</comment>

    <if_stmt pos:start="51:5" pos:end="53:79"><if pos:start="51:5" pos:end="53:79">if <condition pos:start="51:8" pos:end="51:43">(<expr pos:start="51:9" pos:end="51:42"><name pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:9">c</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:21">time_scale</name></name> <operator pos:start="51:23" pos:end="51:23">&gt;</operator> <literal type="number" pos:start="51:25" pos:end="51:25">0</literal> <operator pos:start="51:27" pos:end="51:28">&amp;&amp;</operator> <operator pos:start="51:30" pos:end="51:30">!</operator><name pos:start="51:31" pos:end="51:42"><name pos:start="51:31" pos:end="51:31">c</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:42">trex_data</name></name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:79"><block_content pos:start="53:9" pos:end="53:79">

        <expr_stmt pos:start="53:9" pos:end="53:79"><expr pos:start="53:9" pos:end="53:78"><name pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:9">c</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:13">fc</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:23">duration</name></name> <operator pos:start="53:25" pos:end="53:25">=</operator> <call pos:start="53:27" pos:end="53:78"><name pos:start="53:27" pos:end="53:36">av_rescale</name><argument_list pos:start="53:37" pos:end="53:78">(<argument pos:start="53:38" pos:end="53:48"><expr pos:start="53:38" pos:end="53:48"><name pos:start="53:38" pos:end="53:48"><name pos:start="53:38" pos:end="53:38">c</name><operator pos:start="53:39" pos:end="53:40">-&gt;</operator><name pos:start="53:41" pos:end="53:48">duration</name></name></expr></argument>, <argument pos:start="53:51" pos:end="53:62"><expr pos:start="53:51" pos:end="53:62"><name pos:start="53:51" pos:end="53:62">AV_TIME_BASE</name></expr></argument>, <argument pos:start="53:65" pos:end="53:77"><expr pos:start="53:65" pos:end="53:77"><name pos:start="53:65" pos:end="53:77"><name pos:start="53:65" pos:end="53:65">c</name><operator pos:start="53:66" pos:end="53:67">-&gt;</operator><name pos:start="53:68" pos:end="53:77">time_scale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:18"><expr pos:start="55:5" pos:end="55:17"><call pos:start="55:5" pos:end="55:17"><name pos:start="55:5" pos:end="55:13">avio_rb32</name><argument_list pos:start="55:14" pos:end="55:17">(<argument pos:start="55:15" pos:end="55:16"><expr pos:start="55:15" pos:end="55:16"><name pos:start="55:15" pos:end="55:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="55:20" pos:end="55:40">/* preferred scale */</comment>



    <expr_stmt pos:start="59:5" pos:end="59:18"><expr pos:start="59:5" pos:end="59:17"><call pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:13">avio_rb16</name><argument_list pos:start="59:14" pos:end="59:17">(<argument pos:start="59:15" pos:end="59:16"><expr pos:start="59:15" pos:end="59:16"><name pos:start="59:15" pos:end="59:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="59:20" pos:end="59:41">/* preferred volume */</comment>



    <expr_stmt pos:start="63:5" pos:end="63:22"><expr pos:start="63:5" pos:end="63:21"><call pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:13">avio_skip</name><argument_list pos:start="63:14" pos:end="63:21">(<argument pos:start="63:15" pos:end="63:16"><expr pos:start="63:15" pos:end="63:16"><name pos:start="63:15" pos:end="63:16">pb</name></expr></argument>, <argument pos:start="63:19" pos:end="63:20"><expr pos:start="63:19" pos:end="63:20"><literal type="number" pos:start="63:19" pos:end="63:20">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="63:24" pos:end="63:37">/* reserved */</comment>



    <comment type="block" pos:start="67:5" pos:end="67:76">/* movie display matrix, store it in main context and use it later on */</comment>

    <for pos:start="69:5" pos:end="77:5">for <control pos:start="69:9" pos:end="69:27">(<init pos:start="69:10" pos:end="69:15"><expr pos:start="69:10" pos:end="69:14"><name pos:start="69:10" pos:end="69:10">i</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <literal type="number" pos:start="69:14" pos:end="69:14">0</literal></expr>;</init> <condition pos:start="69:17" pos:end="69:22"><expr pos:start="69:17" pos:end="69:21"><name pos:start="69:17" pos:end="69:17">i</name> <operator pos:start="69:19" pos:end="69:19">&lt;</operator> <literal type="number" pos:start="69:21" pos:end="69:21">3</literal></expr>;</condition> <incr pos:start="69:24" pos:end="69:26"><expr pos:start="69:24" pos:end="69:26"><name pos:start="69:24" pos:end="69:24">i</name><operator pos:start="69:25" pos:end="69:26">++</operator></expr></incr>)</control> <block pos:start="69:29" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:54">

        <expr_stmt pos:start="71:9" pos:end="71:54"><expr pos:start="71:9" pos:end="71:53"><name pos:start="71:9" pos:end="71:37"><name pos:start="71:9" pos:end="71:9">c</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:31">movie_display_matrix</name><index pos:start="71:32" pos:end="71:34">[<expr pos:start="71:33" pos:end="71:33"><name pos:start="71:33" pos:end="71:33">i</name></expr>]</index><index pos:start="71:35" pos:end="71:37">[<expr pos:start="71:36" pos:end="71:36"><literal type="number" pos:start="71:36" pos:end="71:36">0</literal></expr>]</index></name> <operator pos:start="71:39" pos:end="71:39">=</operator> <call pos:start="71:41" pos:end="71:53"><name pos:start="71:41" pos:end="71:49">avio_rb32</name><argument_list pos:start="71:50" pos:end="71:53">(<argument pos:start="71:51" pos:end="71:52"><expr pos:start="71:51" pos:end="71:52"><name pos:start="71:51" pos:end="71:52">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="71:56" pos:end="71:75">// 16.16 fixed point</comment>

        <expr_stmt pos:start="73:9" pos:end="73:54"><expr pos:start="73:9" pos:end="73:53"><name pos:start="73:9" pos:end="73:37"><name pos:start="73:9" pos:end="73:9">c</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:31">movie_display_matrix</name><index pos:start="73:32" pos:end="73:34">[<expr pos:start="73:33" pos:end="73:33"><name pos:start="73:33" pos:end="73:33">i</name></expr>]</index><index pos:start="73:35" pos:end="73:37">[<expr pos:start="73:36" pos:end="73:36"><literal type="number" pos:start="73:36" pos:end="73:36">1</literal></expr>]</index></name> <operator pos:start="73:39" pos:end="73:39">=</operator> <call pos:start="73:41" pos:end="73:53"><name pos:start="73:41" pos:end="73:49">avio_rb32</name><argument_list pos:start="73:50" pos:end="73:53">(<argument pos:start="73:51" pos:end="73:52"><expr pos:start="73:51" pos:end="73:52"><name pos:start="73:51" pos:end="73:52">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="73:56" pos:end="73:75">// 16.16 fixed point</comment>

        <expr_stmt pos:start="75:9" pos:end="75:54"><expr pos:start="75:9" pos:end="75:53"><name pos:start="75:9" pos:end="75:37"><name pos:start="75:9" pos:end="75:9">c</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:31">movie_display_matrix</name><index pos:start="75:32" pos:end="75:34">[<expr pos:start="75:33" pos:end="75:33"><name pos:start="75:33" pos:end="75:33">i</name></expr>]</index><index pos:start="75:35" pos:end="75:37">[<expr pos:start="75:36" pos:end="75:36"><literal type="number" pos:start="75:36" pos:end="75:36">2</literal></expr>]</index></name> <operator pos:start="75:39" pos:end="75:39">=</operator> <call pos:start="75:41" pos:end="75:53"><name pos:start="75:41" pos:end="75:49">avio_rb32</name><argument_list pos:start="75:50" pos:end="75:53">(<argument pos:start="75:51" pos:end="75:52"><expr pos:start="75:51" pos:end="75:52"><name pos:start="75:51" pos:end="75:52">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="75:56" pos:end="75:75">//  2.30 fixed point</comment>

    </block_content>}</block></for>



    <expr_stmt pos:start="81:5" pos:end="81:18"><expr pos:start="81:5" pos:end="81:17"><call pos:start="81:5" pos:end="81:17"><name pos:start="81:5" pos:end="81:13">avio_rb32</name><argument_list pos:start="81:14" pos:end="81:17">(<argument pos:start="81:15" pos:end="81:16"><expr pos:start="81:15" pos:end="81:16"><name pos:start="81:15" pos:end="81:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="81:20" pos:end="81:37">/* preview time */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:18"><expr pos:start="83:5" pos:end="83:17"><call pos:start="83:5" pos:end="83:17"><name pos:start="83:5" pos:end="83:13">avio_rb32</name><argument_list pos:start="83:14" pos:end="83:17">(<argument pos:start="83:15" pos:end="83:16"><expr pos:start="83:15" pos:end="83:16"><name pos:start="83:15" pos:end="83:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="83:20" pos:end="83:41">/* preview duration */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:18"><expr pos:start="85:5" pos:end="85:17"><call pos:start="85:5" pos:end="85:17"><name pos:start="85:5" pos:end="85:13">avio_rb32</name><argument_list pos:start="85:14" pos:end="85:17">(<argument pos:start="85:15" pos:end="85:16"><expr pos:start="85:15" pos:end="85:16"><name pos:start="85:15" pos:end="85:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="85:20" pos:end="85:36">/* poster time */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:18"><expr pos:start="87:5" pos:end="87:17"><call pos:start="87:5" pos:end="87:17"><name pos:start="87:5" pos:end="87:13">avio_rb32</name><argument_list pos:start="87:14" pos:end="87:17">(<argument pos:start="87:15" pos:end="87:16"><expr pos:start="87:15" pos:end="87:16"><name pos:start="87:15" pos:end="87:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="87:20" pos:end="87:39">/* selection time */</comment>

    <expr_stmt pos:start="89:5" pos:end="89:18"><expr pos:start="89:5" pos:end="89:17"><call pos:start="89:5" pos:end="89:17"><name pos:start="89:5" pos:end="89:13">avio_rb32</name><argument_list pos:start="89:14" pos:end="89:17">(<argument pos:start="89:15" pos:end="89:16"><expr pos:start="89:15" pos:end="89:16"><name pos:start="89:15" pos:end="89:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="89:20" pos:end="89:43">/* selection duration */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:18"><expr pos:start="91:5" pos:end="91:17"><call pos:start="91:5" pos:end="91:17"><name pos:start="91:5" pos:end="91:13">avio_rb32</name><argument_list pos:start="91:14" pos:end="91:17">(<argument pos:start="91:15" pos:end="91:16"><expr pos:start="91:15" pos:end="91:16"><name pos:start="91:15" pos:end="91:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="91:20" pos:end="91:37">/* current time */</comment>

    <expr_stmt pos:start="93:5" pos:end="93:18"><expr pos:start="93:5" pos:end="93:17"><call pos:start="93:5" pos:end="93:17"><name pos:start="93:5" pos:end="93:13">avio_rb32</name><argument_list pos:start="93:14" pos:end="93:17">(<argument pos:start="93:15" pos:end="93:16"><expr pos:start="93:15" pos:end="93:16"><name pos:start="93:15" pos:end="93:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="93:20" pos:end="93:38">/* next track ID */</comment>



    <return pos:start="97:5" pos:end="97:13">return <expr pos:start="97:12" pos:end="97:12"><literal type="number" pos:start="97:12" pos:end="97:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
