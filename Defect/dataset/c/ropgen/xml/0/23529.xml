<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23529.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">tcg_out_dat_rIN</name><parameter_list pos:start="1:28" pos:end="5:46">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:38">TCGContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:51"><decl pos:start="1:44" pos:end="1:51"><type pos:start="1:44" pos:end="1:51"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:51">cond</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:60"><decl pos:start="1:54" pos:end="1:60"><type pos:start="1:54" pos:end="1:60"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:60">opc</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:71"><decl pos:start="1:63" pos:end="1:71"><type pos:start="1:63" pos:end="1:71"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:71">opneg</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:34">TCGArg</name></type> <name pos:start="3:36" pos:end="3:38">dst</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:50"><decl pos:start="3:41" pos:end="3:50"><type pos:start="3:41" pos:end="3:50"><name pos:start="3:41" pos:end="3:46">TCGArg</name></type> <name pos:start="3:48" pos:end="3:50">lhs</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:62"><decl pos:start="3:53" pos:end="3:62"><type pos:start="3:53" pos:end="3:62"><name pos:start="3:53" pos:end="3:58">TCGArg</name></type> <name pos:start="3:60" pos:end="3:62">rhs</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:45"><decl pos:start="5:29" pos:end="5:45"><type pos:start="5:29" pos:end="5:45"><name pos:start="5:29" pos:end="5:32">bool</name></type> <name pos:start="5:34" pos:end="5:45">rhs_is_const</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="39:1">{<block_content pos:start="15:5" pos:end="37:5">

    <comment type="block" pos:start="9:5" pos:end="13:7">/* Emit either the reg,imm or reg,reg form of a data-processing insn.

     * rhs must satisfy the "rIN" constraint.

     */</comment>

    <if_stmt pos:start="15:5" pos:end="37:5"><if pos:start="15:5" pos:end="33:5">if <condition pos:start="15:8" pos:end="15:21">(<expr pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:20">rhs_is_const</name></expr>)</condition> <block pos:start="15:23" pos:end="33:5">{<block_content pos:start="17:9" pos:end="31:77">

        <decl_stmt pos:start="17:9" pos:end="17:34"><decl pos:start="17:9" pos:end="17:33"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:15">rot</name> <init pos:start="17:17" pos:end="17:33">= <expr pos:start="17:19" pos:end="17:33"><call pos:start="17:19" pos:end="17:33"><name pos:start="17:19" pos:end="17:28">encode_imm</name><argument_list pos:start="17:29" pos:end="17:33">(<argument pos:start="17:30" pos:end="17:32"><expr pos:start="17:30" pos:end="17:32"><name pos:start="17:30" pos:end="17:32">rhs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="19:9" pos:end="29:9"><if pos:start="19:9" pos:end="29:9">if <condition pos:start="19:12" pos:end="19:20">(<expr pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:15">rot</name> <operator pos:start="19:17" pos:end="19:17">&lt;</operator> <literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr>)</condition> <block pos:start="19:22" pos:end="29:9">{<block_content pos:start="21:13" pos:end="27:24">

            <expr_stmt pos:start="21:13" pos:end="21:23"><expr pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:15">rhs</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <operator pos:start="21:19" pos:end="21:19">-</operator><name pos:start="21:20" pos:end="21:22">rhs</name></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:34"><expr pos:start="23:13" pos:end="23:33"><name pos:start="23:13" pos:end="23:15">rot</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:33"><name pos:start="23:19" pos:end="23:28">encode_imm</name><argument_list pos:start="23:29" pos:end="23:33">(<argument pos:start="23:30" pos:end="23:32"><expr pos:start="23:30" pos:end="23:32"><name pos:start="23:30" pos:end="23:32">rhs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:29"><expr pos:start="25:13" pos:end="25:28"><call pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:18">assert</name><argument_list pos:start="25:19" pos:end="25:28">(<argument pos:start="25:20" pos:end="25:27"><expr pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:22">rot</name> <operator pos:start="25:24" pos:end="25:25">&gt;=</operator> <literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:24"><expr pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:15">opc</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:23">opneg</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:77"><expr pos:start="31:9" pos:end="31:76"><call pos:start="31:9" pos:end="31:76"><name pos:start="31:9" pos:end="31:23">tcg_out_dat_imm</name><argument_list pos:start="31:24" pos:end="31:76">(<argument pos:start="31:25" pos:end="31:25"><expr pos:start="31:25" pos:end="31:25"><name pos:start="31:25" pos:end="31:25">s</name></expr></argument>, <argument pos:start="31:28" pos:end="31:31"><expr pos:start="31:28" pos:end="31:31"><name pos:start="31:28" pos:end="31:31">cond</name></expr></argument>, <argument pos:start="31:34" pos:end="31:36"><expr pos:start="31:34" pos:end="31:36"><name pos:start="31:34" pos:end="31:36">opc</name></expr></argument>, <argument pos:start="31:39" pos:end="31:41"><expr pos:start="31:39" pos:end="31:41"><name pos:start="31:39" pos:end="31:41">dst</name></expr></argument>, <argument pos:start="31:44" pos:end="31:46"><expr pos:start="31:44" pos:end="31:46"><name pos:start="31:44" pos:end="31:46">lhs</name></expr></argument>, <argument pos:start="31:49" pos:end="31:75"><expr pos:start="31:49" pos:end="31:75"><call pos:start="31:49" pos:end="31:62"><name pos:start="31:49" pos:end="31:52">rotl</name><argument_list pos:start="31:53" pos:end="31:62">(<argument pos:start="31:54" pos:end="31:56"><expr pos:start="31:54" pos:end="31:56"><name pos:start="31:54" pos:end="31:56">rhs</name></expr></argument>, <argument pos:start="31:59" pos:end="31:61"><expr pos:start="31:59" pos:end="31:61"><name pos:start="31:59" pos:end="31:61">rot</name></expr></argument>)</argument_list></call> <operator pos:start="31:64" pos:end="31:64">|</operator> <operator pos:start="31:66" pos:end="31:66">(</operator><name pos:start="31:67" pos:end="31:69">rot</name> <operator pos:start="31:71" pos:end="31:72">&lt;&lt;</operator> <literal type="number" pos:start="31:74" pos:end="31:74">7</literal><operator pos:start="31:75" pos:end="31:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="37:5">else <block pos:start="33:12" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:71">

        <expr_stmt pos:start="35:9" pos:end="35:71"><expr pos:start="35:9" pos:end="35:70"><call pos:start="35:9" pos:end="35:70"><name pos:start="35:9" pos:end="35:23">tcg_out_dat_reg</name><argument_list pos:start="35:24" pos:end="35:70">(<argument pos:start="35:25" pos:end="35:25"><expr pos:start="35:25" pos:end="35:25"><name pos:start="35:25" pos:end="35:25">s</name></expr></argument>, <argument pos:start="35:28" pos:end="35:31"><expr pos:start="35:28" pos:end="35:31"><name pos:start="35:28" pos:end="35:31">cond</name></expr></argument>, <argument pos:start="35:34" pos:end="35:36"><expr pos:start="35:34" pos:end="35:36"><name pos:start="35:34" pos:end="35:36">opc</name></expr></argument>, <argument pos:start="35:39" pos:end="35:41"><expr pos:start="35:39" pos:end="35:41"><name pos:start="35:39" pos:end="35:41">dst</name></expr></argument>, <argument pos:start="35:44" pos:end="35:46"><expr pos:start="35:44" pos:end="35:46"><name pos:start="35:44" pos:end="35:46">lhs</name></expr></argument>, <argument pos:start="35:49" pos:end="35:51"><expr pos:start="35:49" pos:end="35:51"><name pos:start="35:49" pos:end="35:51">rhs</name></expr></argument>, <argument pos:start="35:54" pos:end="35:69"><expr pos:start="35:54" pos:end="35:69"><call pos:start="35:54" pos:end="35:69"><name pos:start="35:54" pos:end="35:66">SHIFT_IMM_LSL</name><argument_list pos:start="35:67" pos:end="35:69">(<argument pos:start="35:68" pos:end="35:68"><expr pos:start="35:68" pos:end="35:68"><literal type="number" pos:start="35:68" pos:end="35:68">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
