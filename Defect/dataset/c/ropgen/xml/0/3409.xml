<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3409.c" pos:tabs="8"><function pos:start="1:1" pos:end="233:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">decode_mb_info</name><parameter_list pos:start="1:26" pos:end="3:63">(<parameter pos:start="1:27" pos:end="1:45"><decl pos:start="1:27" pos:end="1:45"><type pos:start="1:27" pos:end="1:45"><name pos:start="1:27" pos:end="1:40">IVI5DecContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:64"><decl pos:start="1:48" pos:end="1:64"><type pos:start="1:48" pos:end="1:64"><name pos:start="1:48" pos:end="1:58">IVIBandDesc</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">band</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:39"><decl pos:start="3:27" pos:end="3:39"><type pos:start="3:27" pos:end="3:39"><name pos:start="3:27" pos:end="3:33">IVITile</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">tile</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:62"><decl pos:start="3:42" pos:end="3:62"><type pos:start="3:42" pos:end="3:62"><name pos:start="3:42" pos:end="3:55">AVCodecContext</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:62">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="233:1">{<block_content pos:start="7:5" pos:end="231:13">

    <decl_stmt pos:start="7:5" pos:end="9:38"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type>         <name pos:start="7:17" pos:end="7:17">x</name></decl>, <decl pos:start="7:20" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:20">y</name></decl>, <decl pos:start="7:23" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:26">mv_x</name></decl>, <decl pos:start="7:29" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:32">mv_y</name></decl>, <decl pos:start="7:35" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:35" pos:end="7:42">mv_delta</name></decl>, <decl pos:start="7:45" pos:end="7:48"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:45" pos:end="7:48">offs</name></decl>, <decl pos:start="7:51" pos:end="7:59"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:51" pos:end="7:59">mb_offset</name></decl>,

                <decl pos:start="9:17" pos:end="9:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="9:17" pos:end="9:24">mv_scale</name></decl>, <decl pos:start="9:27" pos:end="9:37"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="9:27" pos:end="9:37">blks_per_mb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:13">IVIMbInfo</name>   <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">mb</name></decl>, <decl pos:start="11:22" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:17"><modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:28">ref_mb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:57"><decl pos:start="13:5" pos:end="13:56"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type>         <name pos:start="13:17" pos:end="13:26">row_offset</name> <init pos:start="13:28" pos:end="13:56">= <expr pos:start="13:30" pos:end="13:56"><name pos:start="13:30" pos:end="13:42"><name pos:start="13:30" pos:end="13:33">band</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:42">mb_size</name></name> <operator pos:start="13:44" pos:end="13:44">*</operator> <name pos:start="13:46" pos:end="13:56"><name pos:start="13:46" pos:end="13:49">band</name><operator pos:start="13:50" pos:end="13:51">-&gt;</operator><name pos:start="13:52" pos:end="13:56">pitch</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:6">mb</name>     <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:22"><name pos:start="17:14" pos:end="17:17">tile</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:22">mbs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:10">ref_mb</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:26"><name pos:start="19:14" pos:end="19:17">tile</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:26">ref_mbs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:51"><expr pos:start="21:5" pos:end="21:50"><name pos:start="21:5" pos:end="21:8">offs</name>   <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:23"><name pos:start="21:14" pos:end="21:17">tile</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:23">ypos</name></name> <operator pos:start="21:25" pos:end="21:25">*</operator> <name pos:start="21:27" pos:end="21:37"><name pos:start="21:27" pos:end="21:30">band</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:37">pitch</name></name> <operator pos:start="21:39" pos:end="21:39">+</operator> <name pos:start="21:41" pos:end="21:50"><name pos:start="21:41" pos:end="21:44">tile</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:50">xpos</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="29:35"><if pos:start="25:5" pos:end="29:35">if <condition pos:start="25:8" pos:end="27:77">(<expr pos:start="25:9" pos:end="27:76"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:15">ref_mb</name> <operator pos:start="25:17" pos:end="25:18">&amp;&amp;</operator>

        <operator pos:start="27:9" pos:end="27:9">(</operator><operator pos:start="27:10" pos:end="27:10">(</operator><name pos:start="27:11" pos:end="27:30"><name pos:start="27:11" pos:end="27:14">band</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:30">qdelta_present</name></name> <operator pos:start="27:32" pos:end="27:33">&amp;&amp;</operator> <name pos:start="27:35" pos:end="27:54"><name pos:start="27:35" pos:end="27:38">band</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:54">inherit_qdelta</name></name><operator pos:start="27:55" pos:end="27:55">)</operator> <operator pos:start="27:57" pos:end="27:58">||</operator> <name pos:start="27:60" pos:end="27:75"><name pos:start="27:60" pos:end="27:63">band</name><operator pos:start="27:64" pos:end="27:65">-&gt;</operator><name pos:start="27:66" pos:end="27:75">inherit_mv</name></name><operator pos:start="27:76" pos:end="27:76">)</operator></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:35"><block_content pos:start="29:9" pos:end="29:35">

        <return pos:start="29:9" pos:end="29:35">return <expr pos:start="29:16" pos:end="29:34"><name pos:start="29:16" pos:end="29:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:41">/* scale factor for motion vectors */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:77"><expr pos:start="35:5" pos:end="35:76"><name pos:start="35:5" pos:end="35:12">mv_scale</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <operator pos:start="35:16" pos:end="35:16">(</operator><name pos:start="35:17" pos:end="35:30"><name pos:start="35:17" pos:end="35:19">ctx</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:27">planes</name><index pos:start="35:28" pos:end="35:30">[<expr pos:start="35:29" pos:end="35:29"><literal type="number" pos:start="35:29" pos:end="35:29">0</literal></expr>]</index></name><operator pos:start="35:31" pos:end="35:31">.</operator><name pos:start="35:32" pos:end="35:39"><name pos:start="35:32" pos:end="35:36">bands</name><index pos:start="35:37" pos:end="35:39">[<expr pos:start="35:38" pos:end="35:38"><literal type="number" pos:start="35:38" pos:end="35:38">0</literal></expr>]</index></name><operator pos:start="35:40" pos:end="35:40">.</operator><name pos:start="35:41" pos:end="35:47">mb_size</name> <operator pos:start="35:49" pos:end="35:50">&gt;&gt;</operator> <literal type="number" pos:start="35:52" pos:end="35:52">3</literal><operator pos:start="35:53" pos:end="35:53">)</operator> <operator pos:start="35:55" pos:end="35:55">-</operator> <operator pos:start="35:57" pos:end="35:57">(</operator><name pos:start="35:58" pos:end="35:70"><name pos:start="35:58" pos:end="35:61">band</name><operator pos:start="35:62" pos:end="35:63">-&gt;</operator><name pos:start="35:64" pos:end="35:70">mb_size</name></name> <operator pos:start="35:72" pos:end="35:73">&gt;&gt;</operator> <literal type="number" pos:start="35:75" pos:end="35:75">3</literal><operator pos:start="35:76" pos:end="35:76">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:20"><expr pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:8">mv_x</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <name pos:start="37:12" pos:end="37:15">mv_y</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>;</expr_stmt>



    <for pos:start="41:5" pos:end="223:5">for <control pos:start="41:9" pos:end="41:77">(<init pos:start="41:10" pos:end="41:24"><expr pos:start="41:10" pos:end="41:23"><name pos:start="41:10" pos:end="41:10">y</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <name pos:start="41:14" pos:end="41:23"><name pos:start="41:14" pos:end="41:17">tile</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:23">ypos</name></name></expr>;</init> <condition pos:start="41:26" pos:end="41:57"><expr pos:start="41:26" pos:end="41:56"><name pos:start="41:26" pos:end="41:26">y</name> <operator pos:start="41:28" pos:end="41:28">&lt;</operator> <operator pos:start="41:30" pos:end="41:30">(</operator><name pos:start="41:31" pos:end="41:40"><name pos:start="41:31" pos:end="41:34">tile</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:40">ypos</name></name> <operator pos:start="41:42" pos:end="41:42">+</operator> <name pos:start="41:44" pos:end="41:55"><name pos:start="41:44" pos:end="41:47">tile</name><operator pos:start="41:48" pos:end="41:49">-&gt;</operator><name pos:start="41:50" pos:end="41:55">height</name></name><operator pos:start="41:56" pos:end="41:56">)</operator></expr>;</condition> <incr pos:start="41:59" pos:end="41:76"><expr pos:start="41:59" pos:end="41:76"><name pos:start="41:59" pos:end="41:59">y</name> <operator pos:start="41:61" pos:end="41:62">+=</operator> <name pos:start="41:64" pos:end="41:76"><name pos:start="41:64" pos:end="41:67">band</name><operator pos:start="41:68" pos:end="41:69">-&gt;</operator><name pos:start="41:70" pos:end="41:76">mb_size</name></name></expr></incr>)</control> <block pos:start="41:79" pos:end="223:5">{<block_content pos:start="43:9" pos:end="221:27">

        <expr_stmt pos:start="43:9" pos:end="43:25"><expr pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:17">mb_offset</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:24">offs</name></expr>;</expr_stmt>



        <for pos:start="47:9" pos:end="217:9">for <control pos:start="47:13" pos:end="47:80">(<init pos:start="47:14" pos:end="47:28"><expr pos:start="47:14" pos:end="47:27"><name pos:start="47:14" pos:end="47:14">x</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <name pos:start="47:18" pos:end="47:27"><name pos:start="47:18" pos:end="47:21">tile</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:27">xpos</name></name></expr>;</init> <condition pos:start="47:30" pos:end="47:60"><expr pos:start="47:30" pos:end="47:59"><name pos:start="47:30" pos:end="47:30">x</name> <operator pos:start="47:32" pos:end="47:32">&lt;</operator> <operator pos:start="47:34" pos:end="47:34">(</operator><name pos:start="47:35" pos:end="47:44"><name pos:start="47:35" pos:end="47:38">tile</name><operator pos:start="47:39" pos:end="47:40">-&gt;</operator><name pos:start="47:41" pos:end="47:44">xpos</name></name> <operator pos:start="47:46" pos:end="47:46">+</operator> <name pos:start="47:48" pos:end="47:58"><name pos:start="47:48" pos:end="47:51">tile</name><operator pos:start="47:52" pos:end="47:53">-&gt;</operator><name pos:start="47:54" pos:end="47:58">width</name></name><operator pos:start="47:59" pos:end="47:59">)</operator></expr>;</condition> <incr pos:start="47:62" pos:end="47:79"><expr pos:start="47:62" pos:end="47:79"><name pos:start="47:62" pos:end="47:62">x</name> <operator pos:start="47:64" pos:end="47:65">+=</operator> <name pos:start="47:67" pos:end="47:79"><name pos:start="47:67" pos:end="47:70">band</name><operator pos:start="47:71" pos:end="47:72">-&gt;</operator><name pos:start="47:73" pos:end="47:79">mb_size</name></name></expr></incr>)</control> <block pos:start="47:82" pos:end="217:9">{<block_content pos:start="49:13" pos:end="215:39">

            <expr_stmt pos:start="49:13" pos:end="49:29"><expr pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:14">mb</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:20">xpos</name></name>     <operator pos:start="49:26" pos:end="49:26">=</operator> <name pos:start="49:28" pos:end="49:28">x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:29"><expr pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:14">mb</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:20">ypos</name></name>     <operator pos:start="51:26" pos:end="51:26">=</operator> <name pos:start="51:28" pos:end="51:28">y</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:37"><expr pos:start="53:13" pos:end="53:36"><name pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:14">mb</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:24">buf_offs</name></name> <operator pos:start="53:26" pos:end="53:26">=</operator> <name pos:start="53:28" pos:end="53:36">mb_offset</name></expr>;</expr_stmt>



            <if_stmt pos:start="57:13" pos:end="205:13"><if pos:start="57:13" pos:end="109:13">if <condition pos:start="57:16" pos:end="57:36">(<expr pos:start="57:17" pos:end="57:35"><call pos:start="57:17" pos:end="57:35"><name pos:start="57:17" pos:end="57:25">get_bits1</name><argument_list pos:start="57:26" pos:end="57:35">(<argument pos:start="57:27" pos:end="57:34"><expr pos:start="57:27" pos:end="57:34"><operator pos:start="57:27" pos:end="57:27">&amp;</operator><name pos:start="57:28" pos:end="57:34"><name pos:start="57:28" pos:end="57:30">ctx</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:34">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:38" pos:end="109:13">{<block_content pos:start="59:17" pos:end="107:17">

                <if_stmt pos:start="59:17" pos:end="65:17"><if pos:start="59:17" pos:end="65:17">if <condition pos:start="59:20" pos:end="59:55">(<expr pos:start="59:21" pos:end="59:54"><name pos:start="59:21" pos:end="59:35"><name pos:start="59:21" pos:end="59:23">ctx</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:35">frame_type</name></name> <operator pos:start="59:37" pos:end="59:38">==</operator> <name pos:start="59:40" pos:end="59:54">FRAMETYPE_INTRA</name></expr>)</condition> <block pos:start="59:57" pos:end="65:17">{<block_content pos:start="61:21" pos:end="63:30">

                    <expr_stmt pos:start="61:21" pos:end="61:91"><expr pos:start="61:21" pos:end="61:90"><call pos:start="61:21" pos:end="61:90"><name pos:start="61:21" pos:end="61:26">av_log</name><argument_list pos:start="61:27" pos:end="61:90">(<argument pos:start="61:28" pos:end="61:32"><expr pos:start="61:28" pos:end="61:32"><name pos:start="61:28" pos:end="61:32">avctx</name></expr></argument>, <argument pos:start="61:35" pos:end="61:46"><expr pos:start="61:35" pos:end="61:46"><name pos:start="61:35" pos:end="61:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:49" pos:end="61:89"><expr pos:start="61:49" pos:end="61:89"><literal type="string" pos:start="61:49" pos:end="61:89">"Empty macroblock in an INTRA picture!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="63:21" pos:end="63:30">return <expr pos:start="63:28" pos:end="63:29"><operator pos:start="63:28" pos:end="63:28">-</operator><literal type="number" pos:start="63:29" pos:end="63:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:29"><expr pos:start="67:17" pos:end="67:28"><name pos:start="67:17" pos:end="67:24"><name pos:start="67:17" pos:end="67:18">mb</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:24">type</name></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <literal type="number" pos:start="67:28" pos:end="67:28">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="67:31" pos:end="67:70">/* empty macroblocks are always INTER */</comment>

                <expr_stmt pos:start="69:17" pos:end="69:29"><expr pos:start="69:17" pos:end="69:28"><name pos:start="69:17" pos:end="69:23"><name pos:start="69:17" pos:end="69:18">mb</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:23">cbp</name></name>  <operator pos:start="69:26" pos:end="69:26">=</operator> <literal type="number" pos:start="69:28" pos:end="69:28">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="69:31" pos:end="69:56">/* all blocks are empty */</comment>



                <expr_stmt pos:start="73:17" pos:end="73:32"><expr pos:start="73:17" pos:end="73:31"><name pos:start="73:17" pos:end="73:27"><name pos:start="73:17" pos:end="73:18">mb</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:27">q_delta</name></name> <operator pos:start="73:29" pos:end="73:29">=</operator> <literal type="number" pos:start="73:31" pos:end="73:31">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="75:17" pos:end="83:17"><if pos:start="75:17" pos:end="83:17">if <condition pos:start="75:20" pos:end="75:78">(<expr pos:start="75:21" pos:end="75:77"><operator pos:start="75:21" pos:end="75:21">!</operator><name pos:start="75:22" pos:end="75:32"><name pos:start="75:22" pos:end="75:25">band</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:32">plane</name></name> <operator pos:start="75:34" pos:end="75:35">&amp;&amp;</operator> <operator pos:start="75:37" pos:end="75:37">!</operator><name pos:start="75:38" pos:end="75:51"><name pos:start="75:38" pos:end="75:41">band</name><operator pos:start="75:42" pos:end="75:43">-&gt;</operator><name pos:start="75:44" pos:end="75:51">band_num</name></name> <operator pos:start="75:53" pos:end="75:54">&amp;&amp;</operator> <operator pos:start="75:56" pos:end="75:56">(</operator><name pos:start="75:57" pos:end="75:72"><name pos:start="75:57" pos:end="75:59">ctx</name><operator pos:start="75:60" pos:end="75:61">-&gt;</operator><name pos:start="75:62" pos:end="75:72">frame_flags</name></name> <operator pos:start="75:74" pos:end="75:74">&amp;</operator> <literal type="number" pos:start="75:76" pos:end="75:76">8</literal><operator pos:start="75:77" pos:end="75:77">)</operator></expr>)</condition> <block pos:start="75:80" pos:end="83:17">{<block_content pos:start="77:21" pos:end="81:60">

                    <expr_stmt pos:start="77:21" pos:end="79:60"><expr pos:start="77:21" pos:end="79:59"><name pos:start="77:21" pos:end="77:31"><name pos:start="77:21" pos:end="77:22">mb</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:31">q_delta</name></name> <operator pos:start="77:33" pos:end="77:33">=</operator> <call pos:start="77:35" pos:end="79:59"><name pos:start="77:35" pos:end="77:42">get_vlc2</name><argument_list pos:start="77:43" pos:end="79:59">(<argument pos:start="77:44" pos:end="77:51"><expr pos:start="77:44" pos:end="77:51"><operator pos:start="77:44" pos:end="77:44">&amp;</operator><name pos:start="77:45" pos:end="77:51"><name pos:start="77:45" pos:end="77:47">ctx</name><operator pos:start="77:48" pos:end="77:49">-&gt;</operator><name pos:start="77:50" pos:end="77:51">gb</name></name></expr></argument>, <argument pos:start="77:54" pos:end="77:75"><expr pos:start="77:54" pos:end="77:75"><name pos:start="77:54" pos:end="77:75"><name pos:start="77:54" pos:end="77:56">ctx</name><operator pos:start="77:57" pos:end="77:58">-&gt;</operator><name pos:start="77:59" pos:end="77:64">mb_vlc</name><operator pos:start="77:65" pos:end="77:65">.</operator><name pos:start="77:66" pos:end="77:68">tab</name><operator pos:start="77:69" pos:end="77:70">-&gt;</operator><name pos:start="77:71" pos:end="77:75">table</name></name></expr></argument>,

                                           <argument pos:start="79:44" pos:end="79:55"><expr pos:start="79:44" pos:end="79:55"><name pos:start="79:44" pos:end="79:55">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="79:58" pos:end="79:58"><expr pos:start="79:58" pos:end="79:58"><literal type="number" pos:start="79:58" pos:end="79:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="81:21" pos:end="81:60"><expr pos:start="81:21" pos:end="81:59"><name pos:start="81:21" pos:end="81:31"><name pos:start="81:21" pos:end="81:22">mb</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:31">q_delta</name></name> <operator pos:start="81:33" pos:end="81:33">=</operator> <call pos:start="81:35" pos:end="81:59"><name pos:start="81:35" pos:end="81:46">IVI_TOSIGNED</name><argument_list pos:start="81:47" pos:end="81:59">(<argument pos:start="81:48" pos:end="81:58"><expr pos:start="81:48" pos:end="81:58"><name pos:start="81:48" pos:end="81:58"><name pos:start="81:48" pos:end="81:49">mb</name><operator pos:start="81:50" pos:end="81:51">-&gt;</operator><name pos:start="81:52" pos:end="81:58">q_delta</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="87:17" pos:end="87:40"><expr pos:start="87:17" pos:end="87:39"><name pos:start="87:17" pos:end="87:24"><name pos:start="87:17" pos:end="87:18">mb</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:24">mv_x</name></name> <operator pos:start="87:26" pos:end="87:26">=</operator> <name pos:start="87:28" pos:end="87:35"><name pos:start="87:28" pos:end="87:29">mb</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:35">mv_y</name></name> <operator pos:start="87:37" pos:end="87:37">=</operator> <literal type="number" pos:start="87:39" pos:end="87:39">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="87:42" pos:end="87:69">/* no motion vector coded */</comment>

                <if_stmt pos:start="89:17" pos:end="107:17"><if pos:start="89:17" pos:end="107:17">if <condition pos:start="89:20" pos:end="89:47">(<expr pos:start="89:21" pos:end="89:46"><name pos:start="89:21" pos:end="89:36"><name pos:start="89:21" pos:end="89:24">band</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:36">inherit_mv</name></name> <operator pos:start="89:38" pos:end="89:39">&amp;&amp;</operator> <name pos:start="89:41" pos:end="89:46">ref_mb</name></expr>)</condition><block pos:start="89:48" pos:end="107:17">{<block_content pos:start="93:21" pos:end="105:21">

                    <comment type="block" pos:start="91:21" pos:end="91:51">/* motion vector inheritance */</comment>

                    <if_stmt pos:start="93:21" pos:end="105:21"><if pos:start="93:21" pos:end="99:21">if <condition pos:start="93:24" pos:end="93:33">(<expr pos:start="93:25" pos:end="93:32"><name pos:start="93:25" pos:end="93:32">mv_scale</name></expr>)</condition> <block pos:start="93:35" pos:end="99:21">{<block_content pos:start="95:25" pos:end="97:72">

                        <expr_stmt pos:start="95:25" pos:end="95:72"><expr pos:start="95:25" pos:end="95:71"><name pos:start="95:25" pos:end="95:32"><name pos:start="95:25" pos:end="95:26">mb</name><operator pos:start="95:27" pos:end="95:28">-&gt;</operator><name pos:start="95:29" pos:end="95:32">mv_x</name></name> <operator pos:start="95:34" pos:end="95:34">=</operator> <call pos:start="95:36" pos:end="95:71"><name pos:start="95:36" pos:end="95:47">ivi_scale_mv</name><argument_list pos:start="95:48" pos:end="95:71">(<argument pos:start="95:49" pos:end="95:60"><expr pos:start="95:49" pos:end="95:60"><name pos:start="95:49" pos:end="95:60"><name pos:start="95:49" pos:end="95:54">ref_mb</name><operator pos:start="95:55" pos:end="95:56">-&gt;</operator><name pos:start="95:57" pos:end="95:60">mv_x</name></name></expr></argument>, <argument pos:start="95:63" pos:end="95:70"><expr pos:start="95:63" pos:end="95:70"><name pos:start="95:63" pos:end="95:70">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="97:25" pos:end="97:72"><expr pos:start="97:25" pos:end="97:71"><name pos:start="97:25" pos:end="97:32"><name pos:start="97:25" pos:end="97:26">mb</name><operator pos:start="97:27" pos:end="97:28">-&gt;</operator><name pos:start="97:29" pos:end="97:32">mv_y</name></name> <operator pos:start="97:34" pos:end="97:34">=</operator> <call pos:start="97:36" pos:end="97:71"><name pos:start="97:36" pos:end="97:47">ivi_scale_mv</name><argument_list pos:start="97:48" pos:end="97:71">(<argument pos:start="97:49" pos:end="97:60"><expr pos:start="97:49" pos:end="97:60"><name pos:start="97:49" pos:end="97:60"><name pos:start="97:49" pos:end="97:54">ref_mb</name><operator pos:start="97:55" pos:end="97:56">-&gt;</operator><name pos:start="97:57" pos:end="97:60">mv_y</name></name></expr></argument>, <argument pos:start="97:63" pos:end="97:70"><expr pos:start="97:63" pos:end="97:70"><name pos:start="97:63" pos:end="97:70">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="99:23" pos:end="105:21">else <block pos:start="99:28" pos:end="105:21">{<block_content pos:start="101:25" pos:end="103:48">

                        <expr_stmt pos:start="101:25" pos:end="101:48"><expr pos:start="101:25" pos:end="101:47"><name pos:start="101:25" pos:end="101:32"><name pos:start="101:25" pos:end="101:26">mb</name><operator pos:start="101:27" pos:end="101:28">-&gt;</operator><name pos:start="101:29" pos:end="101:32">mv_x</name></name> <operator pos:start="101:34" pos:end="101:34">=</operator> <name pos:start="101:36" pos:end="101:47"><name pos:start="101:36" pos:end="101:41">ref_mb</name><operator pos:start="101:42" pos:end="101:43">-&gt;</operator><name pos:start="101:44" pos:end="101:47">mv_x</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="103:25" pos:end="103:48"><expr pos:start="103:25" pos:end="103:47"><name pos:start="103:25" pos:end="103:32"><name pos:start="103:25" pos:end="103:26">mb</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:32">mv_y</name></name> <operator pos:start="103:34" pos:end="103:34">=</operator> <name pos:start="103:36" pos:end="103:47"><name pos:start="103:36" pos:end="103:41">ref_mb</name><operator pos:start="103:42" pos:end="103:43">-&gt;</operator><name pos:start="103:44" pos:end="103:47">mv_y</name></name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="109:15" pos:end="205:13">else <block pos:start="109:20" pos:end="205:13">{<block_content pos:start="111:17" pos:end="203:17">

                <if_stmt pos:start="111:17" pos:end="123:17"><if pos:start="111:17" pos:end="115:17">if <condition pos:start="111:20" pos:end="111:47">(<expr pos:start="111:21" pos:end="111:46"><name pos:start="111:21" pos:end="111:36"><name pos:start="111:21" pos:end="111:24">band</name><operator pos:start="111:25" pos:end="111:26">-&gt;</operator><name pos:start="111:27" pos:end="111:36">inherit_mv</name></name> <operator pos:start="111:38" pos:end="111:39">&amp;&amp;</operator> <name pos:start="111:41" pos:end="111:46">ref_mb</name></expr>)</condition> <block pos:start="111:49" pos:end="115:17">{<block_content pos:start="113:21" pos:end="113:44">

                    <expr_stmt pos:start="113:21" pos:end="113:44"><expr pos:start="113:21" pos:end="113:43"><name pos:start="113:21" pos:end="113:28"><name pos:start="113:21" pos:end="113:22">mb</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:28">type</name></name> <operator pos:start="113:30" pos:end="113:30">=</operator> <name pos:start="113:32" pos:end="113:43"><name pos:start="113:32" pos:end="113:37">ref_mb</name><operator pos:start="113:38" pos:end="113:39">-&gt;</operator><name pos:start="113:40" pos:end="113:43">type</name></name></expr>;</expr_stmt> <comment type="block" pos:start="113:46" pos:end="113:95">/* copy mb_type from corresponding reference mb */</comment>

                </block_content>}</block></if> <if type="elseif" pos:start="115:19" pos:end="119:17">else if <condition pos:start="115:27" pos:end="115:62">(<expr pos:start="115:28" pos:end="115:61"><name pos:start="115:28" pos:end="115:42"><name pos:start="115:28" pos:end="115:30">ctx</name><operator pos:start="115:31" pos:end="115:32">-&gt;</operator><name pos:start="115:33" pos:end="115:42">frame_type</name></name> <operator pos:start="115:44" pos:end="115:45">==</operator> <name pos:start="115:47" pos:end="115:61">FRAMETYPE_INTRA</name></expr>)</condition> <block pos:start="115:64" pos:end="119:17">{<block_content pos:start="117:21" pos:end="117:33">

                    <expr_stmt pos:start="117:21" pos:end="117:33"><expr pos:start="117:21" pos:end="117:32"><name pos:start="117:21" pos:end="117:28"><name pos:start="117:21" pos:end="117:22">mb</name><operator pos:start="117:23" pos:end="117:24">-&gt;</operator><name pos:start="117:25" pos:end="117:28">type</name></name> <operator pos:start="117:30" pos:end="117:30">=</operator> <literal type="number" pos:start="117:32" pos:end="117:32">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="117:35" pos:end="117:80">/* mb_type is always INTRA for intra-frames */</comment>

                </block_content>}</block></if> <else pos:start="119:19" pos:end="123:17">else <block pos:start="119:24" pos:end="123:17">{<block_content pos:start="121:21" pos:end="121:51">

                    <expr_stmt pos:start="121:21" pos:end="121:51"><expr pos:start="121:21" pos:end="121:50"><name pos:start="121:21" pos:end="121:28"><name pos:start="121:21" pos:end="121:22">mb</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:28">type</name></name> <operator pos:start="121:30" pos:end="121:30">=</operator> <call pos:start="121:32" pos:end="121:50"><name pos:start="121:32" pos:end="121:40">get_bits1</name><argument_list pos:start="121:41" pos:end="121:50">(<argument pos:start="121:42" pos:end="121:49"><expr pos:start="121:42" pos:end="121:49"><operator pos:start="121:42" pos:end="121:42">&amp;</operator><name pos:start="121:43" pos:end="121:49"><name pos:start="121:43" pos:end="121:45">ctx</name><operator pos:start="121:46" pos:end="121:47">-&gt;</operator><name pos:start="121:48" pos:end="121:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <expr_stmt pos:start="127:17" pos:end="127:70"><expr pos:start="127:17" pos:end="127:69"><name pos:start="127:17" pos:end="127:27">blks_per_mb</name> <operator pos:start="127:29" pos:end="127:29">=</operator> <ternary pos:start="127:31" pos:end="127:69"><condition pos:start="127:31" pos:end="127:63"><expr pos:start="127:31" pos:end="127:61"><name pos:start="127:31" pos:end="127:43"><name pos:start="127:31" pos:end="127:34">band</name><operator pos:start="127:35" pos:end="127:36">-&gt;</operator><name pos:start="127:37" pos:end="127:43">mb_size</name></name> <operator pos:start="127:45" pos:end="127:46">!=</operator> <name pos:start="127:48" pos:end="127:61"><name pos:start="127:48" pos:end="127:51">band</name><operator pos:start="127:52" pos:end="127:53">-&gt;</operator><name pos:start="127:54" pos:end="127:61">blk_size</name></name></expr> ?</condition><then pos:start="127:65" pos:end="127:65"> <expr pos:start="127:65" pos:end="127:65"><literal type="number" pos:start="127:65" pos:end="127:65">4</literal></expr> </then><else pos:start="127:67" pos:end="127:69">: <expr pos:start="127:69" pos:end="127:69"><literal type="number" pos:start="127:69" pos:end="127:69">1</literal></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:58"><expr pos:start="129:17" pos:end="129:57"><name pos:start="129:17" pos:end="129:23"><name pos:start="129:17" pos:end="129:18">mb</name><operator pos:start="129:19" pos:end="129:20">-&gt;</operator><name pos:start="129:21" pos:end="129:23">cbp</name></name> <operator pos:start="129:25" pos:end="129:25">=</operator> <call pos:start="129:27" pos:end="129:57"><name pos:start="129:27" pos:end="129:34">get_bits</name><argument_list pos:start="129:35" pos:end="129:57">(<argument pos:start="129:36" pos:end="129:43"><expr pos:start="129:36" pos:end="129:43"><operator pos:start="129:36" pos:end="129:36">&amp;</operator><name pos:start="129:37" pos:end="129:43"><name pos:start="129:37" pos:end="129:39">ctx</name><operator pos:start="129:40" pos:end="129:41">-&gt;</operator><name pos:start="129:42" pos:end="129:43">gb</name></name></expr></argument>, <argument pos:start="129:46" pos:end="129:56"><expr pos:start="129:46" pos:end="129:56"><name pos:start="129:46" pos:end="129:56">blks_per_mb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="133:17" pos:end="133:32"><expr pos:start="133:17" pos:end="133:31"><name pos:start="133:17" pos:end="133:27"><name pos:start="133:17" pos:end="133:18">mb</name><operator pos:start="133:19" pos:end="133:20">-&gt;</operator><name pos:start="133:21" pos:end="133:27">q_delta</name></name> <operator pos:start="133:29" pos:end="133:29">=</operator> <literal type="number" pos:start="133:31" pos:end="133:31">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="135:17" pos:end="153:17"><if pos:start="135:17" pos:end="153:17">if <condition pos:start="135:20" pos:end="135:41">(<expr pos:start="135:21" pos:end="135:40"><name pos:start="135:21" pos:end="135:40"><name pos:start="135:21" pos:end="135:24">band</name><operator pos:start="135:25" pos:end="135:26">-&gt;</operator><name pos:start="135:27" pos:end="135:40">qdelta_present</name></name></expr>)</condition> <block pos:start="135:43" pos:end="153:17">{<block_content pos:start="137:21" pos:end="151:21">

                    <if_stmt pos:start="137:21" pos:end="151:21"><if pos:start="137:21" pos:end="141:21">if <condition pos:start="137:24" pos:end="137:45">(<expr pos:start="137:25" pos:end="137:44"><name pos:start="137:25" pos:end="137:44"><name pos:start="137:25" pos:end="137:28">band</name><operator pos:start="137:29" pos:end="137:30">-&gt;</operator><name pos:start="137:31" pos:end="137:44">inherit_qdelta</name></name></expr>)</condition> <block pos:start="137:47" pos:end="141:21">{<block_content pos:start="139:25" pos:end="139:66">

                        <if_stmt pos:start="139:25" pos:end="139:66"><if pos:start="139:25" pos:end="139:66">if <condition pos:start="139:28" pos:end="139:35">(<expr pos:start="139:29" pos:end="139:34"><name pos:start="139:29" pos:end="139:34">ref_mb</name></expr>)</condition><block type="pseudo" pos:start="139:37" pos:end="139:66"><block_content pos:start="139:37" pos:end="139:66"> <expr_stmt pos:start="139:37" pos:end="139:66"><expr pos:start="139:37" pos:end="139:65"><name pos:start="139:37" pos:end="139:47"><name pos:start="139:37" pos:end="139:38">mb</name><operator pos:start="139:39" pos:end="139:40">-&gt;</operator><name pos:start="139:41" pos:end="139:47">q_delta</name></name> <operator pos:start="139:49" pos:end="139:49">=</operator> <name pos:start="139:51" pos:end="139:65"><name pos:start="139:51" pos:end="139:56">ref_mb</name><operator pos:start="139:57" pos:end="139:58">-&gt;</operator><name pos:start="139:59" pos:end="139:65">q_delta</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="141:23" pos:end="151:21">else if <condition pos:start="141:31" pos:end="143:67">(<expr pos:start="141:32" pos:end="143:66"><name pos:start="141:32" pos:end="141:38"><name pos:start="141:32" pos:end="141:33">mb</name><operator pos:start="141:34" pos:end="141:35">-&gt;</operator><name pos:start="141:36" pos:end="141:38">cbp</name></name> <operator pos:start="141:40" pos:end="141:41">||</operator> <operator pos:start="141:43" pos:end="141:43">(</operator><operator pos:start="141:44" pos:end="141:44">!</operator><name pos:start="141:45" pos:end="141:55"><name pos:start="141:45" pos:end="141:48">band</name><operator pos:start="141:49" pos:end="141:50">-&gt;</operator><name pos:start="141:51" pos:end="141:55">plane</name></name> <operator pos:start="141:57" pos:end="141:58">&amp;&amp;</operator> <operator pos:start="141:60" pos:end="141:60">!</operator><name pos:start="141:61" pos:end="141:74"><name pos:start="141:61" pos:end="141:64">band</name><operator pos:start="141:65" pos:end="141:66">-&gt;</operator><name pos:start="141:67" pos:end="141:74">band_num</name></name> <operator pos:start="141:76" pos:end="141:77">&amp;&amp;</operator>

                                           <operator pos:start="143:44" pos:end="143:44">(</operator><name pos:start="143:45" pos:end="143:60"><name pos:start="143:45" pos:end="143:47">ctx</name><operator pos:start="143:48" pos:end="143:49">-&gt;</operator><name pos:start="143:50" pos:end="143:60">frame_flags</name></name> <operator pos:start="143:62" pos:end="143:62">&amp;</operator> <literal type="number" pos:start="143:64" pos:end="143:64">8</literal><operator pos:start="143:65" pos:end="143:65">)</operator><operator pos:start="143:66" pos:end="143:66">)</operator></expr>)</condition> <block pos:start="143:69" pos:end="151:21">{<block_content pos:start="145:25" pos:end="149:64">

                        <expr_stmt pos:start="145:25" pos:end="147:64"><expr pos:start="145:25" pos:end="147:63"><name pos:start="145:25" pos:end="145:35"><name pos:start="145:25" pos:end="145:26">mb</name><operator pos:start="145:27" pos:end="145:28">-&gt;</operator><name pos:start="145:29" pos:end="145:35">q_delta</name></name> <operator pos:start="145:37" pos:end="145:37">=</operator> <call pos:start="145:39" pos:end="147:63"><name pos:start="145:39" pos:end="145:46">get_vlc2</name><argument_list pos:start="145:47" pos:end="147:63">(<argument pos:start="145:48" pos:end="145:55"><expr pos:start="145:48" pos:end="145:55"><operator pos:start="145:48" pos:end="145:48">&amp;</operator><name pos:start="145:49" pos:end="145:55"><name pos:start="145:49" pos:end="145:51">ctx</name><operator pos:start="145:52" pos:end="145:53">-&gt;</operator><name pos:start="145:54" pos:end="145:55">gb</name></name></expr></argument>, <argument pos:start="145:58" pos:end="145:79"><expr pos:start="145:58" pos:end="145:79"><name pos:start="145:58" pos:end="145:79"><name pos:start="145:58" pos:end="145:60">ctx</name><operator pos:start="145:61" pos:end="145:62">-&gt;</operator><name pos:start="145:63" pos:end="145:68">mb_vlc</name><operator pos:start="145:69" pos:end="145:69">.</operator><name pos:start="145:70" pos:end="145:72">tab</name><operator pos:start="145:73" pos:end="145:74">-&gt;</operator><name pos:start="145:75" pos:end="145:79">table</name></name></expr></argument>,

                                               <argument pos:start="147:48" pos:end="147:59"><expr pos:start="147:48" pos:end="147:59"><name pos:start="147:48" pos:end="147:59">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="147:62" pos:end="147:62"><expr pos:start="147:62" pos:end="147:62"><literal type="number" pos:start="147:62" pos:end="147:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="149:25" pos:end="149:64"><expr pos:start="149:25" pos:end="149:63"><name pos:start="149:25" pos:end="149:35"><name pos:start="149:25" pos:end="149:26">mb</name><operator pos:start="149:27" pos:end="149:28">-&gt;</operator><name pos:start="149:29" pos:end="149:35">q_delta</name></name> <operator pos:start="149:37" pos:end="149:37">=</operator> <call pos:start="149:39" pos:end="149:63"><name pos:start="149:39" pos:end="149:50">IVI_TOSIGNED</name><argument_list pos:start="149:51" pos:end="149:63">(<argument pos:start="149:52" pos:end="149:62"><expr pos:start="149:52" pos:end="149:62"><name pos:start="149:52" pos:end="149:62"><name pos:start="149:52" pos:end="149:53">mb</name><operator pos:start="149:54" pos:end="149:55">-&gt;</operator><name pos:start="149:56" pos:end="149:62">q_delta</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="157:17" pos:end="203:17"><if pos:start="157:17" pos:end="161:17">if <condition pos:start="157:20" pos:end="157:30">(<expr pos:start="157:21" pos:end="157:29"><operator pos:start="157:21" pos:end="157:21">!</operator><name pos:start="157:22" pos:end="157:29"><name pos:start="157:22" pos:end="157:23">mb</name><operator pos:start="157:24" pos:end="157:25">-&gt;</operator><name pos:start="157:26" pos:end="157:29">type</name></name></expr>)</condition> <block pos:start="157:32" pos:end="161:17">{<block_content pos:start="159:21" pos:end="159:44">

                    <expr_stmt pos:start="159:21" pos:end="159:44"><expr pos:start="159:21" pos:end="159:43"><name pos:start="159:21" pos:end="159:28"><name pos:start="159:21" pos:end="159:22">mb</name><operator pos:start="159:23" pos:end="159:24">-&gt;</operator><name pos:start="159:25" pos:end="159:28">mv_x</name></name> <operator pos:start="159:30" pos:end="159:30">=</operator> <name pos:start="159:32" pos:end="159:39"><name pos:start="159:32" pos:end="159:33">mb</name><operator pos:start="159:34" pos:end="159:35">-&gt;</operator><name pos:start="159:36" pos:end="159:39">mv_y</name></name> <operator pos:start="159:41" pos:end="159:41">=</operator> <literal type="number" pos:start="159:43" pos:end="159:43">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="159:46" pos:end="159:97">/* there is no motion vector in intra-macroblocks */</comment>

                </block_content>}</block></if> <else pos:start="161:19" pos:end="203:17">else <block pos:start="161:24" pos:end="203:17">{<block_content pos:start="163:21" pos:end="201:21">

                    <if_stmt pos:start="163:21" pos:end="201:21"><if pos:start="163:21" pos:end="181:21">if <condition pos:start="163:24" pos:end="163:51">(<expr pos:start="163:25" pos:end="163:50"><name pos:start="163:25" pos:end="163:40"><name pos:start="163:25" pos:end="163:28">band</name><operator pos:start="163:29" pos:end="163:30">-&gt;</operator><name pos:start="163:31" pos:end="163:40">inherit_mv</name></name> <operator pos:start="163:42" pos:end="163:43">&amp;&amp;</operator> <name pos:start="163:45" pos:end="163:50">ref_mb</name></expr>)</condition><block pos:start="163:52" pos:end="181:21">{<block_content pos:start="167:25" pos:end="179:25">

                        <comment type="block" pos:start="165:25" pos:end="165:55">/* motion vector inheritance */</comment>

                        <if_stmt pos:start="167:25" pos:end="179:25"><if pos:start="167:25" pos:end="173:25">if <condition pos:start="167:28" pos:end="167:37">(<expr pos:start="167:29" pos:end="167:36"><name pos:start="167:29" pos:end="167:36">mv_scale</name></expr>)</condition> <block pos:start="167:39" pos:end="173:25">{<block_content pos:start="169:29" pos:end="171:76">

                            <expr_stmt pos:start="169:29" pos:end="169:76"><expr pos:start="169:29" pos:end="169:75"><name pos:start="169:29" pos:end="169:36"><name pos:start="169:29" pos:end="169:30">mb</name><operator pos:start="169:31" pos:end="169:32">-&gt;</operator><name pos:start="169:33" pos:end="169:36">mv_x</name></name> <operator pos:start="169:38" pos:end="169:38">=</operator> <call pos:start="169:40" pos:end="169:75"><name pos:start="169:40" pos:end="169:51">ivi_scale_mv</name><argument_list pos:start="169:52" pos:end="169:75">(<argument pos:start="169:53" pos:end="169:64"><expr pos:start="169:53" pos:end="169:64"><name pos:start="169:53" pos:end="169:64"><name pos:start="169:53" pos:end="169:58">ref_mb</name><operator pos:start="169:59" pos:end="169:60">-&gt;</operator><name pos:start="169:61" pos:end="169:64">mv_x</name></name></expr></argument>, <argument pos:start="169:67" pos:end="169:74"><expr pos:start="169:67" pos:end="169:74"><name pos:start="169:67" pos:end="169:74">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="171:29" pos:end="171:76"><expr pos:start="171:29" pos:end="171:75"><name pos:start="171:29" pos:end="171:36"><name pos:start="171:29" pos:end="171:30">mb</name><operator pos:start="171:31" pos:end="171:32">-&gt;</operator><name pos:start="171:33" pos:end="171:36">mv_y</name></name> <operator pos:start="171:38" pos:end="171:38">=</operator> <call pos:start="171:40" pos:end="171:75"><name pos:start="171:40" pos:end="171:51">ivi_scale_mv</name><argument_list pos:start="171:52" pos:end="171:75">(<argument pos:start="171:53" pos:end="171:64"><expr pos:start="171:53" pos:end="171:64"><name pos:start="171:53" pos:end="171:64"><name pos:start="171:53" pos:end="171:58">ref_mb</name><operator pos:start="171:59" pos:end="171:60">-&gt;</operator><name pos:start="171:61" pos:end="171:64">mv_y</name></name></expr></argument>, <argument pos:start="171:67" pos:end="171:74"><expr pos:start="171:67" pos:end="171:74"><name pos:start="171:67" pos:end="171:74">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="173:27" pos:end="179:25">else <block pos:start="173:32" pos:end="179:25">{<block_content pos:start="175:29" pos:end="177:52">

                            <expr_stmt pos:start="175:29" pos:end="175:52"><expr pos:start="175:29" pos:end="175:51"><name pos:start="175:29" pos:end="175:36"><name pos:start="175:29" pos:end="175:30">mb</name><operator pos:start="175:31" pos:end="175:32">-&gt;</operator><name pos:start="175:33" pos:end="175:36">mv_x</name></name> <operator pos:start="175:38" pos:end="175:38">=</operator> <name pos:start="175:40" pos:end="175:51"><name pos:start="175:40" pos:end="175:45">ref_mb</name><operator pos:start="175:46" pos:end="175:47">-&gt;</operator><name pos:start="175:48" pos:end="175:51">mv_x</name></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="177:29" pos:end="177:52"><expr pos:start="177:29" pos:end="177:51"><name pos:start="177:29" pos:end="177:36"><name pos:start="177:29" pos:end="177:30">mb</name><operator pos:start="177:31" pos:end="177:32">-&gt;</operator><name pos:start="177:33" pos:end="177:36">mv_y</name></name> <operator pos:start="177:38" pos:end="177:38">=</operator> <name pos:start="177:40" pos:end="177:51"><name pos:start="177:40" pos:end="177:45">ref_mb</name><operator pos:start="177:46" pos:end="177:47">-&gt;</operator><name pos:start="177:48" pos:end="177:51">mv_y</name></name></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="181:23" pos:end="201:21">else <block pos:start="181:28" pos:end="201:21">{<block_content pos:start="185:25" pos:end="199:40">

                        <comment type="block" pos:start="183:25" pos:end="183:57">/* decode motion vector deltas */</comment>

                        <expr_stmt pos:start="185:25" pos:end="187:61"><expr pos:start="185:25" pos:end="187:60"><name pos:start="185:25" pos:end="185:32">mv_delta</name> <operator pos:start="185:34" pos:end="185:34">=</operator> <call pos:start="185:36" pos:end="187:60"><name pos:start="185:36" pos:end="185:43">get_vlc2</name><argument_list pos:start="185:44" pos:end="187:60">(<argument pos:start="185:45" pos:end="185:52"><expr pos:start="185:45" pos:end="185:52"><operator pos:start="185:45" pos:end="185:45">&amp;</operator><name pos:start="185:46" pos:end="185:52"><name pos:start="185:46" pos:end="185:48">ctx</name><operator pos:start="185:49" pos:end="185:50">-&gt;</operator><name pos:start="185:51" pos:end="185:52">gb</name></name></expr></argument>, <argument pos:start="185:55" pos:end="185:76"><expr pos:start="185:55" pos:end="185:76"><name pos:start="185:55" pos:end="185:76"><name pos:start="185:55" pos:end="185:57">ctx</name><operator pos:start="185:58" pos:end="185:59">-&gt;</operator><name pos:start="185:60" pos:end="185:65">mb_vlc</name><operator pos:start="185:66" pos:end="185:66">.</operator><name pos:start="185:67" pos:end="185:69">tab</name><operator pos:start="185:70" pos:end="185:71">-&gt;</operator><name pos:start="185:72" pos:end="185:76">table</name></name></expr></argument>,

                                            <argument pos:start="187:45" pos:end="187:56"><expr pos:start="187:45" pos:end="187:56"><name pos:start="187:45" pos:end="187:56">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="187:59" pos:end="187:59"><expr pos:start="187:59" pos:end="187:59"><literal type="number" pos:start="187:59" pos:end="187:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="189:25" pos:end="189:55"><expr pos:start="189:25" pos:end="189:54"><name pos:start="189:25" pos:end="189:28">mv_y</name> <operator pos:start="189:30" pos:end="189:31">+=</operator> <call pos:start="189:33" pos:end="189:54"><name pos:start="189:33" pos:end="189:44">IVI_TOSIGNED</name><argument_list pos:start="189:45" pos:end="189:54">(<argument pos:start="189:46" pos:end="189:53"><expr pos:start="189:46" pos:end="189:53"><name pos:start="189:46" pos:end="189:53">mv_delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="191:25" pos:end="193:61"><expr pos:start="191:25" pos:end="193:60"><name pos:start="191:25" pos:end="191:32">mv_delta</name> <operator pos:start="191:34" pos:end="191:34">=</operator> <call pos:start="191:36" pos:end="193:60"><name pos:start="191:36" pos:end="191:43">get_vlc2</name><argument_list pos:start="191:44" pos:end="193:60">(<argument pos:start="191:45" pos:end="191:52"><expr pos:start="191:45" pos:end="191:52"><operator pos:start="191:45" pos:end="191:45">&amp;</operator><name pos:start="191:46" pos:end="191:52"><name pos:start="191:46" pos:end="191:48">ctx</name><operator pos:start="191:49" pos:end="191:50">-&gt;</operator><name pos:start="191:51" pos:end="191:52">gb</name></name></expr></argument>, <argument pos:start="191:55" pos:end="191:76"><expr pos:start="191:55" pos:end="191:76"><name pos:start="191:55" pos:end="191:76"><name pos:start="191:55" pos:end="191:57">ctx</name><operator pos:start="191:58" pos:end="191:59">-&gt;</operator><name pos:start="191:60" pos:end="191:65">mb_vlc</name><operator pos:start="191:66" pos:end="191:66">.</operator><name pos:start="191:67" pos:end="191:69">tab</name><operator pos:start="191:70" pos:end="191:71">-&gt;</operator><name pos:start="191:72" pos:end="191:76">table</name></name></expr></argument>,

                                            <argument pos:start="193:45" pos:end="193:56"><expr pos:start="193:45" pos:end="193:56"><name pos:start="193:45" pos:end="193:56">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="193:59" pos:end="193:59"><expr pos:start="193:59" pos:end="193:59"><literal type="number" pos:start="193:59" pos:end="193:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="195:25" pos:end="195:55"><expr pos:start="195:25" pos:end="195:54"><name pos:start="195:25" pos:end="195:28">mv_x</name> <operator pos:start="195:30" pos:end="195:31">+=</operator> <call pos:start="195:33" pos:end="195:54"><name pos:start="195:33" pos:end="195:44">IVI_TOSIGNED</name><argument_list pos:start="195:45" pos:end="195:54">(<argument pos:start="195:46" pos:end="195:53"><expr pos:start="195:46" pos:end="195:53"><name pos:start="195:46" pos:end="195:53">mv_delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="197:25" pos:end="197:40"><expr pos:start="197:25" pos:end="197:39"><name pos:start="197:25" pos:end="197:32"><name pos:start="197:25" pos:end="197:26">mb</name><operator pos:start="197:27" pos:end="197:28">-&gt;</operator><name pos:start="197:29" pos:end="197:32">mv_x</name></name> <operator pos:start="197:34" pos:end="197:34">=</operator> <name pos:start="197:36" pos:end="197:39">mv_x</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="199:25" pos:end="199:40"><expr pos:start="199:25" pos:end="199:39"><name pos:start="199:25" pos:end="199:32"><name pos:start="199:25" pos:end="199:26">mb</name><operator pos:start="199:27" pos:end="199:28">-&gt;</operator><name pos:start="199:29" pos:end="199:32">mv_y</name></name> <operator pos:start="199:34" pos:end="199:34">=</operator> <name pos:start="199:36" pos:end="199:39">mv_y</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="209:13" pos:end="209:17"><expr pos:start="209:13" pos:end="209:16"><name pos:start="209:13" pos:end="209:14">mb</name><operator pos:start="209:15" pos:end="209:16">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="211:13" pos:end="213:25"><if pos:start="211:13" pos:end="213:25">if <condition pos:start="211:16" pos:end="211:23">(<expr pos:start="211:17" pos:end="211:22"><name pos:start="211:17" pos:end="211:22">ref_mb</name></expr>)</condition><block type="pseudo" pos:start="213:17" pos:end="213:25"><block_content pos:start="213:17" pos:end="213:25">

                <expr_stmt pos:start="213:17" pos:end="213:25"><expr pos:start="213:17" pos:end="213:24"><name pos:start="213:17" pos:end="213:22">ref_mb</name><operator pos:start="213:23" pos:end="213:24">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:39"><expr pos:start="215:13" pos:end="215:38"><name pos:start="215:13" pos:end="215:21">mb_offset</name> <operator pos:start="215:23" pos:end="215:24">+=</operator> <name pos:start="215:26" pos:end="215:38"><name pos:start="215:26" pos:end="215:29">band</name><operator pos:start="215:30" pos:end="215:31">-&gt;</operator><name pos:start="215:32" pos:end="215:38">mb_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="221:9" pos:end="221:27"><expr pos:start="221:9" pos:end="221:26"><name pos:start="221:9" pos:end="221:12">offs</name> <operator pos:start="221:14" pos:end="221:15">+=</operator> <name pos:start="221:17" pos:end="221:26">row_offset</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="227:5" pos:end="227:29"><expr pos:start="227:5" pos:end="227:28"><call pos:start="227:5" pos:end="227:28"><name pos:start="227:5" pos:end="227:18">align_get_bits</name><argument_list pos:start="227:19" pos:end="227:28">(<argument pos:start="227:20" pos:end="227:27"><expr pos:start="227:20" pos:end="227:27"><operator pos:start="227:20" pos:end="227:20">&amp;</operator><name pos:start="227:21" pos:end="227:27"><name pos:start="227:21" pos:end="227:23">ctx</name><operator pos:start="227:24" pos:end="227:25">-&gt;</operator><name pos:start="227:26" pos:end="227:27">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="231:5" pos:end="231:13">return <expr pos:start="231:12" pos:end="231:12"><literal type="number" pos:start="231:12" pos:end="231:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
