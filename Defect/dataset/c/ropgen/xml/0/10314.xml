<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10314.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">always_inline</name> <name pos:start="1:22" pos:end="1:25">void</name></type> <name pos:start="1:27" pos:end="1:37">gen_farith3</name> <parameter_list pos:start="1:39" pos:end="3:62">(<parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:43">void</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:51">helper</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:45"><decl pos:start="3:40" pos:end="3:45"><type pos:start="3:40" pos:end="3:45"><name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:45">ra</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:53"><decl pos:start="3:48" pos:end="3:53"><type pos:start="3:48" pos:end="3:53"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:53">rb</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:61"><decl pos:start="3:56" pos:end="3:61"><type pos:start="3:56" pos:end="3:61"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:61">rc</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:5">

    <if_stmt pos:start="7:5" pos:end="9:15"><if pos:start="7:5" pos:end="9:15">if <condition pos:start="7:8" pos:end="7:27">(<expr pos:start="7:9" pos:end="7:26"><call pos:start="7:9" pos:end="7:26"><name pos:start="7:9" pos:end="7:16">unlikely</name><argument_list pos:start="7:17" pos:end="7:26">(<argument pos:start="7:18" pos:end="7:25"><expr pos:start="7:18" pos:end="7:25"><name pos:start="7:18" pos:end="7:19">rc</name> <operator pos:start="7:21" pos:end="7:22">==</operator> <literal type="number" pos:start="7:24" pos:end="7:25">31</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:15"><block_content pos:start="9:9" pos:end="9:15">

        <return pos:start="9:9" pos:end="9:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="13:5" pos:end="43:5"><if pos:start="13:5" pos:end="29:5">if <condition pos:start="13:8" pos:end="13:17">(<expr pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:10">ra</name> <operator pos:start="13:12" pos:end="13:13">!=</operator> <literal type="number" pos:start="13:15" pos:end="13:16">31</literal></expr>)</condition> <block pos:start="13:19" pos:end="29:5">{<block_content pos:start="15:9" pos:end="27:9">

        <if_stmt pos:start="15:9" pos:end="27:9"><if pos:start="15:9" pos:end="17:78">if <condition pos:start="15:12" pos:end="15:21">(<expr pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:14">rb</name> <operator pos:start="15:16" pos:end="15:17">!=</operator> <literal type="number" pos:start="15:19" pos:end="15:20">31</literal></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:78"><block_content pos:start="17:13" pos:end="17:78">

            <expr_stmt pos:start="17:13" pos:end="17:78"><expr pos:start="17:13" pos:end="17:77"><call pos:start="17:13" pos:end="17:77"><name pos:start="17:13" pos:end="17:30">tcg_gen_helper_1_2</name><argument_list pos:start="17:31" pos:end="17:77">(<argument pos:start="17:32" pos:end="17:37"><expr pos:start="17:32" pos:end="17:37"><name pos:start="17:32" pos:end="17:37">helper</name></expr></argument>, <argument pos:start="17:40" pos:end="17:50"><expr pos:start="17:40" pos:end="17:50"><name pos:start="17:40" pos:end="17:50"><name pos:start="17:40" pos:end="17:46">cpu_fir</name><index pos:start="17:47" pos:end="17:50">[<expr pos:start="17:48" pos:end="17:49"><name pos:start="17:48" pos:end="17:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="17:53" pos:end="17:63"><expr pos:start="17:53" pos:end="17:63"><name pos:start="17:53" pos:end="17:63"><name pos:start="17:53" pos:end="17:59">cpu_fir</name><index pos:start="17:60" pos:end="17:63">[<expr pos:start="17:61" pos:end="17:62"><name pos:start="17:61" pos:end="17:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="17:66" pos:end="17:76"><expr pos:start="17:66" pos:end="17:76"><name pos:start="17:66" pos:end="17:76"><name pos:start="17:66" pos:end="17:72">cpu_fir</name><index pos:start="17:73" pos:end="17:76">[<expr pos:start="17:74" pos:end="17:75"><name pos:start="17:74" pos:end="17:75">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="19:9" pos:end="27:9">else <block pos:start="19:14" pos:end="27:9">{<block_content pos:start="21:13" pos:end="25:31">

            <decl_stmt pos:start="21:13" pos:end="21:40"><decl pos:start="21:13" pos:end="21:39"><type pos:start="21:13" pos:end="21:16"><name pos:start="21:13" pos:end="21:16">TCGv</name></type> <name pos:start="21:18" pos:end="21:20">tmp</name> <init pos:start="21:22" pos:end="21:39">= <expr pos:start="21:24" pos:end="21:39"><call pos:start="21:24" pos:end="21:39"><name pos:start="21:24" pos:end="21:36">tcg_const_i64</name><argument_list pos:start="21:37" pos:end="21:39">(<argument pos:start="21:38" pos:end="21:38"><expr pos:start="21:38" pos:end="21:38"><literal type="number" pos:start="21:38" pos:end="21:38">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:70"><expr pos:start="23:13" pos:end="23:69"><call pos:start="23:13" pos:end="23:69"><name pos:start="23:13" pos:end="23:30">tcg_gen_helper_1_2</name><argument_list pos:start="23:31" pos:end="23:69">(<argument pos:start="23:32" pos:end="23:37"><expr pos:start="23:32" pos:end="23:37"><name pos:start="23:32" pos:end="23:37">helper</name></expr></argument>, <argument pos:start="23:40" pos:end="23:50"><expr pos:start="23:40" pos:end="23:50"><name pos:start="23:40" pos:end="23:50"><name pos:start="23:40" pos:end="23:46">cpu_fir</name><index pos:start="23:47" pos:end="23:50">[<expr pos:start="23:48" pos:end="23:49"><name pos:start="23:48" pos:end="23:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="23:53" pos:end="23:63"><expr pos:start="23:53" pos:end="23:63"><name pos:start="23:53" pos:end="23:63"><name pos:start="23:53" pos:end="23:59">cpu_fir</name><index pos:start="23:60" pos:end="23:63">[<expr pos:start="23:61" pos:end="23:62"><name pos:start="23:61" pos:end="23:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="23:66" pos:end="23:68"><expr pos:start="23:66" pos:end="23:68"><name pos:start="23:66" pos:end="23:68">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:31"><expr pos:start="25:13" pos:end="25:30"><call pos:start="25:13" pos:end="25:30"><name pos:start="25:13" pos:end="25:25">tcg_temp_free</name><argument_list pos:start="25:26" pos:end="25:30">(<argument pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><name pos:start="25:27" pos:end="25:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="43:5">else <block pos:start="29:12" pos:end="43:5">{<block_content pos:start="31:9" pos:end="41:27">

        <decl_stmt pos:start="31:9" pos:end="31:36"><decl pos:start="31:9" pos:end="31:35"><type pos:start="31:9" pos:end="31:12"><name pos:start="31:9" pos:end="31:12">TCGv</name></type> <name pos:start="31:14" pos:end="31:16">tmp</name> <init pos:start="31:18" pos:end="31:35">= <expr pos:start="31:20" pos:end="31:35"><call pos:start="31:20" pos:end="31:35"><name pos:start="31:20" pos:end="31:32">tcg_const_i64</name><argument_list pos:start="31:33" pos:end="31:35">(<argument pos:start="31:34" pos:end="31:34"><expr pos:start="31:34" pos:end="31:34"><literal type="number" pos:start="31:34" pos:end="31:34">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="33:9" pos:end="39:62"><if pos:start="33:9" pos:end="35:70">if <condition pos:start="33:12" pos:end="33:21">(<expr pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:14">rb</name> <operator pos:start="33:16" pos:end="33:17">!=</operator> <literal type="number" pos:start="33:19" pos:end="33:20">31</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:70"><block_content pos:start="35:13" pos:end="35:70">

            <expr_stmt pos:start="35:13" pos:end="35:70"><expr pos:start="35:13" pos:end="35:69"><call pos:start="35:13" pos:end="35:69"><name pos:start="35:13" pos:end="35:30">tcg_gen_helper_1_2</name><argument_list pos:start="35:31" pos:end="35:69">(<argument pos:start="35:32" pos:end="35:37"><expr pos:start="35:32" pos:end="35:37"><name pos:start="35:32" pos:end="35:37">helper</name></expr></argument>, <argument pos:start="35:40" pos:end="35:50"><expr pos:start="35:40" pos:end="35:50"><name pos:start="35:40" pos:end="35:50"><name pos:start="35:40" pos:end="35:46">cpu_fir</name><index pos:start="35:47" pos:end="35:50">[<expr pos:start="35:48" pos:end="35:49"><name pos:start="35:48" pos:end="35:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="35:53" pos:end="35:55"><expr pos:start="35:53" pos:end="35:55"><name pos:start="35:53" pos:end="35:55">tmp</name></expr></argument>, <argument pos:start="35:58" pos:end="35:68"><expr pos:start="35:58" pos:end="35:68"><name pos:start="35:58" pos:end="35:68"><name pos:start="35:58" pos:end="35:64">cpu_fir</name><index pos:start="35:65" pos:end="35:68">[<expr pos:start="35:66" pos:end="35:67"><name pos:start="35:66" pos:end="35:67">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="37:9" pos:end="39:62">else<block type="pseudo" pos:start="39:13" pos:end="39:62"><block_content pos:start="39:13" pos:end="39:62">

            <expr_stmt pos:start="39:13" pos:end="39:62"><expr pos:start="39:13" pos:end="39:61"><call pos:start="39:13" pos:end="39:61"><name pos:start="39:13" pos:end="39:30">tcg_gen_helper_1_2</name><argument_list pos:start="39:31" pos:end="39:61">(<argument pos:start="39:32" pos:end="39:37"><expr pos:start="39:32" pos:end="39:37"><name pos:start="39:32" pos:end="39:37">helper</name></expr></argument>, <argument pos:start="39:40" pos:end="39:50"><expr pos:start="39:40" pos:end="39:50"><name pos:start="39:40" pos:end="39:50"><name pos:start="39:40" pos:end="39:46">cpu_fir</name><index pos:start="39:47" pos:end="39:50">[<expr pos:start="39:48" pos:end="39:49"><name pos:start="39:48" pos:end="39:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="39:53" pos:end="39:55"><expr pos:start="39:53" pos:end="39:55"><name pos:start="39:53" pos:end="39:55">tmp</name></expr></argument>, <argument pos:start="39:58" pos:end="39:60"><expr pos:start="39:58" pos:end="39:60"><name pos:start="39:58" pos:end="39:60">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:27"><expr pos:start="41:9" pos:end="41:26"><call pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:21">tcg_temp_free</name><argument_list pos:start="41:22" pos:end="41:26">(<argument pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
