<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15220.c" pos:tabs="8"><function pos:start="1:1" pos:end="381:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">rscc_decode_frame</name><parameter_list pos:start="1:29" pos:end="3:69">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:51"><decl pos:start="3:38" pos:end="3:51"><type pos:start="3:38" pos:end="3:51"><name pos:start="3:38" pos:end="3:40">int</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:51">got_frame</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:68"><decl pos:start="3:54" pos:end="3:68"><type pos:start="3:54" pos:end="3:68"><name pos:start="3:54" pos:end="3:61">AVPacket</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:68">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="381:1">{<block_content pos:start="7:5" pos:end="379:15">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">RsccContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">ctx</name> <init pos:start="7:22" pos:end="7:39">= <expr pos:start="7:24" pos:end="7:39"><name pos:start="7:24" pos:end="7:39"><name pos:start="7:24" pos:end="7:28">avctx</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">GetByteContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">gbc</name> <init pos:start="9:25" pos:end="9:35">= <expr pos:start="9:27" pos:end="9:35"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:35"><name pos:start="9:28" pos:end="9:30">ctx</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:35">gbc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:18">GetByteContext</name></type> <name pos:start="11:20" pos:end="11:28">tiles_gbc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:18">frame</name> <init pos:start="13:20" pos:end="13:25">= <expr pos:start="13:22" pos:end="13:25"><name pos:start="13:22" pos:end="13:25">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:25">pixels</name></decl>, <decl pos:start="15:28" pos:end="15:31"><type ref="prev" pos:start="15:5" pos:end="15:19"><modifier pos:start="15:28" pos:end="15:28">*</modifier></type><name pos:start="15:29" pos:end="15:31">raw</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:34"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:27">inflated_tiles</name> <init pos:start="17:29" pos:end="17:34">= <expr pos:start="17:31" pos:end="17:34"><name pos:start="17:31" pos:end="17:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:46"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">tiles_nb</name></decl>, <decl pos:start="19:19" pos:end="19:29"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:19" pos:end="19:29">packed_size</name></decl>, <decl pos:start="19:32" pos:end="19:45"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:32" pos:end="19:41">pixel_size</name> <init pos:start="19:43" pos:end="19:45">= <expr pos:start="19:45" pos:end="19:45"><literal type="number" pos:start="19:45" pos:end="19:45">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name></decl>, <decl pos:start="21:12" pos:end="21:18"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:12" pos:end="21:14">ret</name> <init pos:start="21:16" pos:end="21:18">= <expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:52"><expr pos:start="25:5" pos:end="25:51"><call pos:start="25:5" pos:end="25:51"><name pos:start="25:5" pos:end="25:20">bytestream2_init</name><argument_list pos:start="25:21" pos:end="25:51">(<argument pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:24">gbc</name></expr></argument>, <argument pos:start="25:27" pos:end="25:37"><expr pos:start="25:27" pos:end="25:37"><name pos:start="25:27" pos:end="25:37"><name pos:start="25:27" pos:end="25:31">avpkt</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:37">data</name></name></expr></argument>, <argument pos:start="25:40" pos:end="25:50"><expr pos:start="25:40" pos:end="25:50"><name pos:start="25:40" pos:end="25:50"><name pos:start="25:40" pos:end="25:44">avpkt</name><operator pos:start="25:45" pos:end="25:46">-&gt;</operator><name pos:start="25:47" pos:end="25:50">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:20">/* Size check */</comment>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:45">(<expr pos:start="31:9" pos:end="31:44"><call pos:start="31:9" pos:end="31:39"><name pos:start="31:9" pos:end="31:34">bytestream2_get_bytes_left</name><argument_list pos:start="31:35" pos:end="31:39">(<argument pos:start="31:36" pos:end="31:38"><expr pos:start="31:36" pos:end="31:38"><name pos:start="31:36" pos:end="31:38">gbc</name></expr></argument>)</argument_list></call> <operator pos:start="31:41" pos:end="31:41">&lt;</operator> <literal type="number" pos:start="31:43" pos:end="31:44">12</literal></expr>)</condition> <block pos:start="31:47" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:35">

        <expr_stmt pos:start="33:9" pos:end="33:76"><expr pos:start="33:9" pos:end="33:75"><call pos:start="33:9" pos:end="33:75"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:75">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:61"><expr pos:start="33:37" pos:end="33:61"><literal type="string" pos:start="33:37" pos:end="33:61">"Packet too small (%d)\n"</literal></expr></argument>, <argument pos:start="33:64" pos:end="33:74"><expr pos:start="33:64" pos:end="33:74"><name pos:start="33:64" pos:end="33:74"><name pos:start="33:64" pos:end="33:68">avpkt</name><operator pos:start="33:69" pos:end="33:70">-&gt;</operator><name pos:start="33:71" pos:end="33:74">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:35">return <expr pos:start="35:16" pos:end="35:34"><name pos:start="35:16" pos:end="35:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:54">/* Read number of tiles, and allocate the array */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:41"><expr pos:start="43:5" pos:end="43:40"><name pos:start="43:5" pos:end="43:12">tiles_nb</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="43:40"><name pos:start="43:16" pos:end="43:35">bytestream2_get_le16</name><argument_list pos:start="43:36" pos:end="43:40">(<argument pos:start="43:37" pos:end="43:39"><expr pos:start="43:37" pos:end="43:39"><name pos:start="43:37" pos:end="43:39">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="47:51"><expr pos:start="45:5" pos:end="47:50"><call pos:start="45:5" pos:end="47:50"><name pos:start="45:5" pos:end="45:18">av_fast_malloc</name><argument_list pos:start="45:19" pos:end="47:50">(<argument pos:start="45:20" pos:end="45:30"><expr pos:start="45:20" pos:end="45:30"><operator pos:start="45:20" pos:end="45:20">&amp;</operator><name pos:start="45:21" pos:end="45:30"><name pos:start="45:21" pos:end="45:23">ctx</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:30">tiles</name></name></expr></argument>, <argument pos:start="45:33" pos:end="45:48"><expr pos:start="45:33" pos:end="45:48"><operator pos:start="45:33" pos:end="45:33">&amp;</operator><name pos:start="45:34" pos:end="45:48"><name pos:start="45:34" pos:end="45:36">ctx</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:48">tiles_size</name></name></expr></argument>,

                   <argument pos:start="47:20" pos:end="47:49"><expr pos:start="47:20" pos:end="47:49"><name pos:start="47:20" pos:end="47:27">tiles_nb</name> <operator pos:start="47:29" pos:end="47:29">*</operator> <sizeof pos:start="47:31" pos:end="47:49">sizeof<argument_list pos:start="47:37" pos:end="47:49">(<argument pos:start="47:38" pos:end="47:48"><expr pos:start="47:38" pos:end="47:48"><operator pos:start="47:38" pos:end="47:38">*</operator><name pos:start="47:39" pos:end="47:48"><name pos:start="47:39" pos:end="47:41">ctx</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:48">tiles</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:20">(<expr pos:start="49:9" pos:end="49:19"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:19"><name pos:start="49:10" pos:end="49:12">ctx</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:19">tiles</name></name></expr>)</condition> <block pos:start="49:22" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:17">

        <expr_stmt pos:start="51:9" pos:end="51:30"><expr pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:29"><name pos:start="51:15" pos:end="51:21">AVERROR</name><argument_list pos:start="51:22" pos:end="51:29">(<argument pos:start="51:23" pos:end="51:28"><expr pos:start="51:23" pos:end="51:28"><name pos:start="51:23" pos:end="51:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:17">goto <name pos:start="53:14" pos:end="53:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:68"><expr pos:start="59:5" pos:end="59:67"><call pos:start="59:5" pos:end="59:67"><name pos:start="59:5" pos:end="59:10">av_log</name><argument_list pos:start="59:11" pos:end="59:67">(<argument pos:start="59:12" pos:end="59:16"><expr pos:start="59:12" pos:end="59:16"><name pos:start="59:12" pos:end="59:16">avctx</name></expr></argument>, <argument pos:start="59:19" pos:end="59:30"><expr pos:start="59:19" pos:end="59:30"><name pos:start="59:19" pos:end="59:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="59:33" pos:end="59:56"><expr pos:start="59:33" pos:end="59:56"><literal type="string" pos:start="59:33" pos:end="59:56">"Frame with %d tiles.\n"</literal></expr></argument>, <argument pos:start="59:59" pos:end="59:66"><expr pos:start="59:59" pos:end="59:66"><name pos:start="59:59" pos:end="59:66">tiles_nb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="67:71">/* When there are more than 5 tiles, they are packed together with

     * a size header. When that size does not match the number of tiles

     * times the tile size, it means it needs to be inflated as well */</comment>

    <if_stmt pos:start="69:5" pos:end="135:5"><if pos:start="69:5" pos:end="135:5">if <condition pos:start="69:8" pos:end="69:21">(<expr pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:16">tiles_nb</name> <operator pos:start="69:18" pos:end="69:18">&gt;</operator> <literal type="number" pos:start="69:20" pos:end="69:20">5</literal></expr>)</condition> <block pos:start="69:23" pos:end="135:5">{<block_content pos:start="71:9" pos:end="133:9">

        <decl_stmt pos:start="71:9" pos:end="71:33"><decl pos:start="71:9" pos:end="71:32"><type pos:start="71:9" pos:end="71:14"><name pos:start="71:9" pos:end="71:14">uLongf</name></type> <name pos:start="71:16" pos:end="71:32">packed_tiles_size</name></decl>;</decl_stmt>



        <if_stmt pos:start="75:9" pos:end="81:58"><if pos:start="75:9" pos:end="77:58">if <condition pos:start="75:12" pos:end="75:26">(<expr pos:start="75:13" pos:end="75:25"><name pos:start="75:13" pos:end="75:20">tiles_nb</name> <operator pos:start="75:22" pos:end="75:22">&lt;</operator> <literal type="number" pos:start="75:24" pos:end="75:25">32</literal></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:58"><block_content pos:start="77:13" pos:end="77:58">

            <expr_stmt pos:start="77:13" pos:end="77:58"><expr pos:start="77:13" pos:end="77:57"><name pos:start="77:13" pos:end="77:29">packed_tiles_size</name> <operator pos:start="77:31" pos:end="77:31">=</operator> <call pos:start="77:33" pos:end="77:57"><name pos:start="77:33" pos:end="77:52">bytestream2_get_byte</name><argument_list pos:start="77:53" pos:end="77:57">(<argument pos:start="77:54" pos:end="77:56"><expr pos:start="77:54" pos:end="77:56"><name pos:start="77:54" pos:end="77:56">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="79:9" pos:end="81:58">else<block type="pseudo" pos:start="81:13" pos:end="81:58"><block_content pos:start="81:13" pos:end="81:58">

            <expr_stmt pos:start="81:13" pos:end="81:58"><expr pos:start="81:13" pos:end="81:57"><name pos:start="81:13" pos:end="81:29">packed_tiles_size</name> <operator pos:start="81:31" pos:end="81:31">=</operator> <call pos:start="81:33" pos:end="81:57"><name pos:start="81:33" pos:end="81:52">bytestream2_get_le16</name><argument_list pos:start="81:53" pos:end="81:57">(<argument pos:start="81:54" pos:end="81:56"><expr pos:start="81:54" pos:end="81:56"><name pos:start="81:54" pos:end="81:56">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:73"><expr pos:start="85:9" pos:end="85:72"><call pos:start="85:9" pos:end="85:72"><name pos:start="85:9" pos:end="85:15">ff_dlog</name><argument_list pos:start="85:16" pos:end="85:72">(<argument pos:start="85:17" pos:end="85:21"><expr pos:start="85:17" pos:end="85:21"><name pos:start="85:17" pos:end="85:21">avctx</name></expr></argument>, <argument pos:start="85:24" pos:end="85:52"><expr pos:start="85:24" pos:end="85:52"><literal type="string" pos:start="85:24" pos:end="85:52">"packed tiles of size %lu.\n"</literal></expr></argument>, <argument pos:start="85:55" pos:end="85:71"><expr pos:start="85:55" pos:end="85:71"><name pos:start="85:55" pos:end="85:71">packed_tiles_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="89:9" pos:end="89:78">/* If necessary, uncompress tiles, and hijack the bytestream reader */</comment>

        <if_stmt pos:start="91:9" pos:end="133:9"><if pos:start="91:9" pos:end="133:9">if <condition pos:start="91:12" pos:end="91:54">(<expr pos:start="91:13" pos:end="91:53"><name pos:start="91:13" pos:end="91:29">packed_tiles_size</name> <operator pos:start="91:31" pos:end="91:32">!=</operator> <name pos:start="91:34" pos:end="91:41">tiles_nb</name> <operator pos:start="91:43" pos:end="91:43">*</operator> <name pos:start="91:45" pos:end="91:53">TILE_SIZE</name></expr>)</condition> <block pos:start="91:56" pos:end="133:9">{<block_content pos:start="93:13" pos:end="131:29">

            <decl_stmt pos:start="93:13" pos:end="93:49"><decl pos:start="93:13" pos:end="93:48"><type pos:start="93:13" pos:end="93:18"><name pos:start="93:13" pos:end="93:18">uLongf</name></type> <name pos:start="93:20" pos:end="93:25">length</name> <init pos:start="93:27" pos:end="93:48">= <expr pos:start="93:29" pos:end="93:48"><name pos:start="93:29" pos:end="93:36">tiles_nb</name> <operator pos:start="93:38" pos:end="93:38">*</operator> <name pos:start="93:40" pos:end="93:48">TILE_SIZE</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:47"><expr pos:start="95:13" pos:end="95:46"><name pos:start="95:13" pos:end="95:26">inflated_tiles</name> <operator pos:start="95:28" pos:end="95:28">=</operator> <call pos:start="95:30" pos:end="95:46"><name pos:start="95:30" pos:end="95:38">av_malloc</name><argument_list pos:start="95:39" pos:end="95:46">(<argument pos:start="95:40" pos:end="95:45"><expr pos:start="95:40" pos:end="95:45"><name pos:start="95:40" pos:end="95:45">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="103:13"><if pos:start="97:13" pos:end="103:13">if <condition pos:start="97:16" pos:end="97:32">(<expr pos:start="97:17" pos:end="97:31"><operator pos:start="97:17" pos:end="97:17">!</operator><name pos:start="97:18" pos:end="97:31">inflated_tiles</name></expr>)</condition> <block pos:start="97:34" pos:end="103:13">{<block_content pos:start="99:17" pos:end="101:25">

                <expr_stmt pos:start="99:17" pos:end="99:38"><expr pos:start="99:17" pos:end="99:37"><name pos:start="99:17" pos:end="99:19">ret</name> <operator pos:start="99:21" pos:end="99:21">=</operator> <call pos:start="99:23" pos:end="99:37"><name pos:start="99:23" pos:end="99:29">AVERROR</name><argument_list pos:start="99:30" pos:end="99:37">(<argument pos:start="99:31" pos:end="99:36"><expr pos:start="99:31" pos:end="99:36"><name pos:start="99:31" pos:end="99:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="101:17" pos:end="101:25">goto <name pos:start="101:22" pos:end="101:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="107:13" pos:end="109:61"><expr pos:start="107:13" pos:end="109:60"><name pos:start="107:13" pos:end="107:15">ret</name> <operator pos:start="107:17" pos:end="107:17">=</operator> <call pos:start="107:19" pos:end="109:60"><name pos:start="107:19" pos:end="107:28">uncompress</name><argument_list pos:start="107:29" pos:end="109:60">(<argument pos:start="107:30" pos:end="107:43"><expr pos:start="107:30" pos:end="107:43"><name pos:start="107:30" pos:end="107:43">inflated_tiles</name></expr></argument>, <argument pos:start="107:46" pos:end="107:52"><expr pos:start="107:46" pos:end="107:52"><operator pos:start="107:46" pos:end="107:46">&amp;</operator><name pos:start="107:47" pos:end="107:52">length</name></expr></argument>,

                             <argument pos:start="109:30" pos:end="109:40"><expr pos:start="109:30" pos:end="109:40"><name pos:start="109:30" pos:end="109:40"><name pos:start="109:30" pos:end="109:32">gbc</name><operator pos:start="109:33" pos:end="109:34">-&gt;</operator><name pos:start="109:35" pos:end="109:40">buffer</name></name></expr></argument>, <argument pos:start="109:43" pos:end="109:59"><expr pos:start="109:43" pos:end="109:59"><name pos:start="109:43" pos:end="109:59">packed_tiles_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="111:13" pos:end="119:13"><if pos:start="111:13" pos:end="119:13">if <condition pos:start="111:16" pos:end="111:20">(<expr pos:start="111:17" pos:end="111:19"><name pos:start="111:17" pos:end="111:19">ret</name></expr>)</condition> <block pos:start="111:22" pos:end="119:13">{<block_content pos:start="113:17" pos:end="117:25">

                <expr_stmt pos:start="113:17" pos:end="113:77"><expr pos:start="113:17" pos:end="113:76"><call pos:start="113:17" pos:end="113:76"><name pos:start="113:17" pos:end="113:22">av_log</name><argument_list pos:start="113:23" pos:end="113:76">(<argument pos:start="113:24" pos:end="113:28"><expr pos:start="113:24" pos:end="113:28"><name pos:start="113:24" pos:end="113:28">avctx</name></expr></argument>, <argument pos:start="113:31" pos:end="113:42"><expr pos:start="113:31" pos:end="113:42"><name pos:start="113:31" pos:end="113:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="113:45" pos:end="113:70"><expr pos:start="113:45" pos:end="113:70"><literal type="string" pos:start="113:45" pos:end="113:70">"Tile deflate error %d.\n"</literal></expr></argument>, <argument pos:start="113:73" pos:end="113:75"><expr pos:start="113:73" pos:end="113:75"><name pos:start="113:73" pos:end="113:75">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:38"><expr pos:start="115:17" pos:end="115:37"><name pos:start="115:17" pos:end="115:19">ret</name> <operator pos:start="115:21" pos:end="115:21">=</operator> <name pos:start="115:23" pos:end="115:37">AVERROR_UNKNOWN</name></expr>;</expr_stmt>

                <goto pos:start="117:17" pos:end="117:25">goto <name pos:start="117:22" pos:end="117:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="123:13" pos:end="125:66">/* Skip the compressed tile section in the main byte reader,

             * and point it to read the newly uncompressed data */</comment>

            <expr_stmt pos:start="127:13" pos:end="127:53"><expr pos:start="127:13" pos:end="127:52"><call pos:start="127:13" pos:end="127:52"><name pos:start="127:13" pos:end="127:28">bytestream2_skip</name><argument_list pos:start="127:29" pos:end="127:52">(<argument pos:start="127:30" pos:end="127:32"><expr pos:start="127:30" pos:end="127:32"><name pos:start="127:30" pos:end="127:32">gbc</name></expr></argument>, <argument pos:start="127:35" pos:end="127:51"><expr pos:start="127:35" pos:end="127:51"><name pos:start="127:35" pos:end="127:51">packed_tiles_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:65"><expr pos:start="129:13" pos:end="129:64"><call pos:start="129:13" pos:end="129:64"><name pos:start="129:13" pos:end="129:28">bytestream2_init</name><argument_list pos:start="129:29" pos:end="129:64">(<argument pos:start="129:30" pos:end="129:39"><expr pos:start="129:30" pos:end="129:39"><operator pos:start="129:30" pos:end="129:30">&amp;</operator><name pos:start="129:31" pos:end="129:39">tiles_gbc</name></expr></argument>, <argument pos:start="129:42" pos:end="129:55"><expr pos:start="129:42" pos:end="129:55"><name pos:start="129:42" pos:end="129:55">inflated_tiles</name></expr></argument>, <argument pos:start="129:58" pos:end="129:63"><expr pos:start="129:58" pos:end="129:63"><name pos:start="129:58" pos:end="129:63">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:29"><expr pos:start="131:13" pos:end="131:28"><name pos:start="131:13" pos:end="131:15">gbc</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <operator pos:start="131:19" pos:end="131:19">&amp;</operator><name pos:start="131:20" pos:end="131:28">tiles_gbc</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="139:5" pos:end="139:78">/* Fill in array of tiles, keeping track of how many pixels are updated */</comment>

    <for pos:start="141:5" pos:end="197:5">for <control pos:start="141:9" pos:end="141:34">(<init pos:start="141:10" pos:end="141:15"><expr pos:start="141:10" pos:end="141:14"><name pos:start="141:10" pos:end="141:10">i</name> <operator pos:start="141:12" pos:end="141:12">=</operator> <literal type="number" pos:start="141:14" pos:end="141:14">0</literal></expr>;</init> <condition pos:start="141:17" pos:end="141:29"><expr pos:start="141:17" pos:end="141:28"><name pos:start="141:17" pos:end="141:17">i</name> <operator pos:start="141:19" pos:end="141:19">&lt;</operator> <name pos:start="141:21" pos:end="141:28">tiles_nb</name></expr>;</condition> <incr pos:start="141:31" pos:end="141:33"><expr pos:start="141:31" pos:end="141:33"><name pos:start="141:31" pos:end="141:31">i</name><operator pos:start="141:32" pos:end="141:33">++</operator></expr></incr>)</control> <block pos:start="141:36" pos:end="197:5">{<block_content pos:start="143:9" pos:end="195:9">

        <expr_stmt pos:start="143:9" pos:end="143:52"><expr pos:start="143:9" pos:end="143:51"><name pos:start="143:9" pos:end="143:21"><name pos:start="143:9" pos:end="143:11">ctx</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:18">tiles</name><index pos:start="143:19" pos:end="143:21">[<expr pos:start="143:20" pos:end="143:20"><name pos:start="143:20" pos:end="143:20">i</name></expr>]</index></name><operator pos:start="143:22" pos:end="143:22">.</operator><name pos:start="143:23" pos:end="143:23">x</name> <operator pos:start="143:25" pos:end="143:25">=</operator> <call pos:start="143:27" pos:end="143:51"><name pos:start="143:27" pos:end="143:46">bytestream2_get_le16</name><argument_list pos:start="143:47" pos:end="143:51">(<argument pos:start="143:48" pos:end="143:50"><expr pos:start="143:48" pos:end="143:50"><name pos:start="143:48" pos:end="143:50">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:52"><expr pos:start="145:9" pos:end="145:51"><name pos:start="145:9" pos:end="145:21"><name pos:start="145:9" pos:end="145:11">ctx</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:18">tiles</name><index pos:start="145:19" pos:end="145:21">[<expr pos:start="145:20" pos:end="145:20"><name pos:start="145:20" pos:end="145:20">i</name></expr>]</index></name><operator pos:start="145:22" pos:end="145:22">.</operator><name pos:start="145:23" pos:end="145:23">w</name> <operator pos:start="145:25" pos:end="145:25">=</operator> <call pos:start="145:27" pos:end="145:51"><name pos:start="145:27" pos:end="145:46">bytestream2_get_le16</name><argument_list pos:start="145:47" pos:end="145:51">(<argument pos:start="145:48" pos:end="145:50"><expr pos:start="145:48" pos:end="145:50"><name pos:start="145:48" pos:end="145:50">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:52"><expr pos:start="147:9" pos:end="147:51"><name pos:start="147:9" pos:end="147:21"><name pos:start="147:9" pos:end="147:11">ctx</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:18">tiles</name><index pos:start="147:19" pos:end="147:21">[<expr pos:start="147:20" pos:end="147:20"><name pos:start="147:20" pos:end="147:20">i</name></expr>]</index></name><operator pos:start="147:22" pos:end="147:22">.</operator><name pos:start="147:23" pos:end="147:23">y</name> <operator pos:start="147:25" pos:end="147:25">=</operator> <call pos:start="147:27" pos:end="147:51"><name pos:start="147:27" pos:end="147:46">bytestream2_get_le16</name><argument_list pos:start="147:47" pos:end="147:51">(<argument pos:start="147:48" pos:end="147:50"><expr pos:start="147:48" pos:end="147:50"><name pos:start="147:48" pos:end="147:50">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:52"><expr pos:start="149:9" pos:end="149:51"><name pos:start="149:9" pos:end="149:21"><name pos:start="149:9" pos:end="149:11">ctx</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:18">tiles</name><index pos:start="149:19" pos:end="149:21">[<expr pos:start="149:20" pos:end="149:20"><name pos:start="149:20" pos:end="149:20">i</name></expr>]</index></name><operator pos:start="149:22" pos:end="149:22">.</operator><name pos:start="149:23" pos:end="149:23">h</name> <operator pos:start="149:25" pos:end="149:25">=</operator> <call pos:start="149:27" pos:end="149:51"><name pos:start="149:27" pos:end="149:46">bytestream2_get_le16</name><argument_list pos:start="149:47" pos:end="149:51">(<argument pos:start="149:48" pos:end="149:50"><expr pos:start="149:48" pos:end="149:50"><name pos:start="149:48" pos:end="149:50">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="153:9" pos:end="153:78"><expr pos:start="153:9" pos:end="153:77"><name pos:start="153:9" pos:end="153:18">pixel_size</name> <operator pos:start="153:20" pos:end="153:21">+=</operator> <name pos:start="153:23" pos:end="153:35"><name pos:start="153:23" pos:end="153:25">ctx</name><operator pos:start="153:26" pos:end="153:27">-&gt;</operator><name pos:start="153:28" pos:end="153:32">tiles</name><index pos:start="153:33" pos:end="153:35">[<expr pos:start="153:34" pos:end="153:34"><name pos:start="153:34" pos:end="153:34">i</name></expr>]</index></name><operator pos:start="153:36" pos:end="153:36">.</operator><name pos:start="153:37" pos:end="153:37">w</name> <operator pos:start="153:39" pos:end="153:39">*</operator> <name pos:start="153:41" pos:end="153:53"><name pos:start="153:41" pos:end="153:43">ctx</name><operator pos:start="153:44" pos:end="153:45">-&gt;</operator><name pos:start="153:46" pos:end="153:50">tiles</name><index pos:start="153:51" pos:end="153:53">[<expr pos:start="153:52" pos:end="153:52"><name pos:start="153:52" pos:end="153:52">i</name></expr>]</index></name><operator pos:start="153:54" pos:end="153:54">.</operator><name pos:start="153:55" pos:end="153:55">h</name> <operator pos:start="153:57" pos:end="153:57">*</operator> <name pos:start="153:59" pos:end="153:77"><name pos:start="153:59" pos:end="153:61">ctx</name><operator pos:start="153:62" pos:end="153:63">-&gt;</operator><name pos:start="153:64" pos:end="153:77">component_size</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="157:9" pos:end="161:50"><expr pos:start="157:9" pos:end="161:49"><call pos:start="157:9" pos:end="161:49"><name pos:start="157:9" pos:end="157:15">ff_dlog</name><argument_list pos:start="157:16" pos:end="161:49">(<argument pos:start="157:17" pos:end="157:21"><expr pos:start="157:17" pos:end="157:21"><name pos:start="157:17" pos:end="157:21">avctx</name></expr></argument>, <argument pos:start="157:24" pos:end="157:53"><expr pos:start="157:24" pos:end="157:53"><literal type="string" pos:start="157:24" pos:end="157:53">"tile %d orig(%d,%d) %dx%d.\n"</literal></expr></argument>, <argument pos:start="157:56" pos:end="157:56"><expr pos:start="157:56" pos:end="157:56"><name pos:start="157:56" pos:end="157:56">i</name></expr></argument>,

                <argument pos:start="159:17" pos:end="159:31"><expr pos:start="159:17" pos:end="159:31"><name pos:start="159:17" pos:end="159:29"><name pos:start="159:17" pos:end="159:19">ctx</name><operator pos:start="159:20" pos:end="159:21">-&gt;</operator><name pos:start="159:22" pos:end="159:26">tiles</name><index pos:start="159:27" pos:end="159:29">[<expr pos:start="159:28" pos:end="159:28"><name pos:start="159:28" pos:end="159:28">i</name></expr>]</index></name><operator pos:start="159:30" pos:end="159:30">.</operator><name pos:start="159:31" pos:end="159:31">x</name></expr></argument>, <argument pos:start="159:34" pos:end="159:48"><expr pos:start="159:34" pos:end="159:48"><name pos:start="159:34" pos:end="159:46"><name pos:start="159:34" pos:end="159:36">ctx</name><operator pos:start="159:37" pos:end="159:38">-&gt;</operator><name pos:start="159:39" pos:end="159:43">tiles</name><index pos:start="159:44" pos:end="159:46">[<expr pos:start="159:45" pos:end="159:45"><name pos:start="159:45" pos:end="159:45">i</name></expr>]</index></name><operator pos:start="159:47" pos:end="159:47">.</operator><name pos:start="159:48" pos:end="159:48">y</name></expr></argument>,

                <argument pos:start="161:17" pos:end="161:31"><expr pos:start="161:17" pos:end="161:31"><name pos:start="161:17" pos:end="161:29"><name pos:start="161:17" pos:end="161:19">ctx</name><operator pos:start="161:20" pos:end="161:21">-&gt;</operator><name pos:start="161:22" pos:end="161:26">tiles</name><index pos:start="161:27" pos:end="161:29">[<expr pos:start="161:28" pos:end="161:28"><name pos:start="161:28" pos:end="161:28">i</name></expr>]</index></name><operator pos:start="161:30" pos:end="161:30">.</operator><name pos:start="161:31" pos:end="161:31">w</name></expr></argument>, <argument pos:start="161:34" pos:end="161:48"><expr pos:start="161:34" pos:end="161:48"><name pos:start="161:34" pos:end="161:46"><name pos:start="161:34" pos:end="161:36">ctx</name><operator pos:start="161:37" pos:end="161:38">-&gt;</operator><name pos:start="161:39" pos:end="161:43">tiles</name><index pos:start="161:44" pos:end="161:46">[<expr pos:start="161:45" pos:end="161:45"><name pos:start="161:45" pos:end="161:45">i</name></expr>]</index></name><operator pos:start="161:47" pos:end="161:47">.</operator><name pos:start="161:48" pos:end="161:48">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="165:9" pos:end="195:9"><if pos:start="165:9" pos:end="179:9">if <condition pos:start="165:12" pos:end="165:57">(<expr pos:start="165:13" pos:end="165:56"><name pos:start="165:13" pos:end="165:25"><name pos:start="165:13" pos:end="165:15">ctx</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:22">tiles</name><index pos:start="165:23" pos:end="165:25">[<expr pos:start="165:24" pos:end="165:24"><name pos:start="165:24" pos:end="165:24">i</name></expr>]</index></name><operator pos:start="165:26" pos:end="165:26">.</operator><name pos:start="165:27" pos:end="165:27">w</name> <operator pos:start="165:29" pos:end="165:30">==</operator> <literal type="number" pos:start="165:32" pos:end="165:32">0</literal> <operator pos:start="165:34" pos:end="165:35">||</operator> <name pos:start="165:37" pos:end="165:49"><name pos:start="165:37" pos:end="165:39">ctx</name><operator pos:start="165:40" pos:end="165:41">-&gt;</operator><name pos:start="165:42" pos:end="165:46">tiles</name><index pos:start="165:47" pos:end="165:49">[<expr pos:start="165:48" pos:end="165:48"><name pos:start="165:48" pos:end="165:48">i</name></expr>]</index></name><operator pos:start="165:50" pos:end="165:50">.</operator><name pos:start="165:51" pos:end="165:51">h</name> <operator pos:start="165:53" pos:end="165:54">==</operator> <literal type="number" pos:start="165:56" pos:end="165:56">0</literal></expr>)</condition> <block pos:start="165:59" pos:end="179:9">{<block_content pos:start="167:13" pos:end="177:21">

            <expr_stmt pos:start="167:13" pos:end="173:53"><expr pos:start="167:13" pos:end="173:52"><call pos:start="167:13" pos:end="173:52"><name pos:start="167:13" pos:end="167:18">av_log</name><argument_list pos:start="167:19" pos:end="173:52">(<argument pos:start="167:20" pos:end="167:24"><expr pos:start="167:20" pos:end="167:24"><name pos:start="167:20" pos:end="167:24">avctx</name></expr></argument>, <argument pos:start="167:27" pos:end="167:38"><expr pos:start="167:27" pos:end="167:38"><name pos:start="167:27" pos:end="167:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="169:20" pos:end="169:66"><expr pos:start="169:20" pos:end="169:66"><literal type="string" pos:start="169:20" pos:end="169:66">"invalid tile %d at (%d.%d) with size %dx%d.\n"</literal></expr></argument>, <argument pos:start="169:69" pos:end="169:69"><expr pos:start="169:69" pos:end="169:69"><name pos:start="169:69" pos:end="169:69">i</name></expr></argument>,

                   <argument pos:start="171:20" pos:end="171:34"><expr pos:start="171:20" pos:end="171:34"><name pos:start="171:20" pos:end="171:32"><name pos:start="171:20" pos:end="171:22">ctx</name><operator pos:start="171:23" pos:end="171:24">-&gt;</operator><name pos:start="171:25" pos:end="171:29">tiles</name><index pos:start="171:30" pos:end="171:32">[<expr pos:start="171:31" pos:end="171:31"><name pos:start="171:31" pos:end="171:31">i</name></expr>]</index></name><operator pos:start="171:33" pos:end="171:33">.</operator><name pos:start="171:34" pos:end="171:34">x</name></expr></argument>, <argument pos:start="171:37" pos:end="171:51"><expr pos:start="171:37" pos:end="171:51"><name pos:start="171:37" pos:end="171:49"><name pos:start="171:37" pos:end="171:39">ctx</name><operator pos:start="171:40" pos:end="171:41">-&gt;</operator><name pos:start="171:42" pos:end="171:46">tiles</name><index pos:start="171:47" pos:end="171:49">[<expr pos:start="171:48" pos:end="171:48"><name pos:start="171:48" pos:end="171:48">i</name></expr>]</index></name><operator pos:start="171:50" pos:end="171:50">.</operator><name pos:start="171:51" pos:end="171:51">y</name></expr></argument>,

                   <argument pos:start="173:20" pos:end="173:34"><expr pos:start="173:20" pos:end="173:34"><name pos:start="173:20" pos:end="173:32"><name pos:start="173:20" pos:end="173:22">ctx</name><operator pos:start="173:23" pos:end="173:24">-&gt;</operator><name pos:start="173:25" pos:end="173:29">tiles</name><index pos:start="173:30" pos:end="173:32">[<expr pos:start="173:31" pos:end="173:31"><name pos:start="173:31" pos:end="173:31">i</name></expr>]</index></name><operator pos:start="173:33" pos:end="173:33">.</operator><name pos:start="173:34" pos:end="173:34">w</name></expr></argument>, <argument pos:start="173:37" pos:end="173:51"><expr pos:start="173:37" pos:end="173:51"><name pos:start="173:37" pos:end="173:49"><name pos:start="173:37" pos:end="173:39">ctx</name><operator pos:start="173:40" pos:end="173:41">-&gt;</operator><name pos:start="173:42" pos:end="173:46">tiles</name><index pos:start="173:47" pos:end="173:49">[<expr pos:start="173:48" pos:end="173:48"><name pos:start="173:48" pos:end="173:48">i</name></expr>]</index></name><operator pos:start="173:50" pos:end="173:50">.</operator><name pos:start="173:51" pos:end="173:51">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:38"><expr pos:start="175:13" pos:end="175:37"><name pos:start="175:13" pos:end="175:15">ret</name> <operator pos:start="175:17" pos:end="175:17">=</operator> <name pos:start="175:19" pos:end="175:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="177:13" pos:end="177:21">goto <name pos:start="177:18" pos:end="177:20">end</name>;</goto>

        </block_content>}</block></if> <if type="elseif" pos:start="179:11" pos:end="195:9">else if <condition pos:start="179:19" pos:end="181:69">(<expr pos:start="179:20" pos:end="181:68"><name pos:start="179:20" pos:end="179:32"><name pos:start="179:20" pos:end="179:22">ctx</name><operator pos:start="179:23" pos:end="179:24">-&gt;</operator><name pos:start="179:25" pos:end="179:29">tiles</name><index pos:start="179:30" pos:end="179:32">[<expr pos:start="179:31" pos:end="179:31"><name pos:start="179:31" pos:end="179:31">i</name></expr>]</index></name><operator pos:start="179:33" pos:end="179:33">.</operator><name pos:start="179:34" pos:end="179:34">x</name> <operator pos:start="179:36" pos:end="179:36">+</operator> <name pos:start="179:38" pos:end="179:50"><name pos:start="179:38" pos:end="179:40">ctx</name><operator pos:start="179:41" pos:end="179:42">-&gt;</operator><name pos:start="179:43" pos:end="179:47">tiles</name><index pos:start="179:48" pos:end="179:50">[<expr pos:start="179:49" pos:end="179:49"><name pos:start="179:49" pos:end="179:49">i</name></expr>]</index></name><operator pos:start="179:51" pos:end="179:51">.</operator><name pos:start="179:52" pos:end="179:52">w</name> <operator pos:start="179:54" pos:end="179:54">&gt;</operator> <name pos:start="179:56" pos:end="179:67"><name pos:start="179:56" pos:end="179:60">avctx</name><operator pos:start="179:61" pos:end="179:62">-&gt;</operator><name pos:start="179:63" pos:end="179:67">width</name></name> <operator pos:start="179:69" pos:end="179:70">||</operator>

                   <name pos:start="181:20" pos:end="181:32"><name pos:start="181:20" pos:end="181:22">ctx</name><operator pos:start="181:23" pos:end="181:24">-&gt;</operator><name pos:start="181:25" pos:end="181:29">tiles</name><index pos:start="181:30" pos:end="181:32">[<expr pos:start="181:31" pos:end="181:31"><name pos:start="181:31" pos:end="181:31">i</name></expr>]</index></name><operator pos:start="181:33" pos:end="181:33">.</operator><name pos:start="181:34" pos:end="181:34">y</name> <operator pos:start="181:36" pos:end="181:36">+</operator> <name pos:start="181:38" pos:end="181:50"><name pos:start="181:38" pos:end="181:40">ctx</name><operator pos:start="181:41" pos:end="181:42">-&gt;</operator><name pos:start="181:43" pos:end="181:47">tiles</name><index pos:start="181:48" pos:end="181:50">[<expr pos:start="181:49" pos:end="181:49"><name pos:start="181:49" pos:end="181:49">i</name></expr>]</index></name><operator pos:start="181:51" pos:end="181:51">.</operator><name pos:start="181:52" pos:end="181:52">h</name> <operator pos:start="181:54" pos:end="181:54">&gt;</operator> <name pos:start="181:56" pos:end="181:68"><name pos:start="181:56" pos:end="181:60">avctx</name><operator pos:start="181:61" pos:end="181:62">-&gt;</operator><name pos:start="181:63" pos:end="181:68">height</name></name></expr>)</condition> <block pos:start="181:71" pos:end="195:9">{<block_content pos:start="183:13" pos:end="193:21">

            <expr_stmt pos:start="183:13" pos:end="189:53"><expr pos:start="183:13" pos:end="189:52"><call pos:start="183:13" pos:end="189:52"><name pos:start="183:13" pos:end="183:18">av_log</name><argument_list pos:start="183:19" pos:end="189:52">(<argument pos:start="183:20" pos:end="183:24"><expr pos:start="183:20" pos:end="183:24"><name pos:start="183:20" pos:end="183:24">avctx</name></expr></argument>, <argument pos:start="183:27" pos:end="183:38"><expr pos:start="183:27" pos:end="183:38"><name pos:start="183:27" pos:end="183:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="185:20" pos:end="185:72"><expr pos:start="185:20" pos:end="185:72"><literal type="string" pos:start="185:20" pos:end="185:72">"out of bounds tile %d at (%d.%d) with size %dx%d.\n"</literal></expr></argument>, <argument pos:start="185:75" pos:end="185:75"><expr pos:start="185:75" pos:end="185:75"><name pos:start="185:75" pos:end="185:75">i</name></expr></argument>,

                   <argument pos:start="187:20" pos:end="187:34"><expr pos:start="187:20" pos:end="187:34"><name pos:start="187:20" pos:end="187:32"><name pos:start="187:20" pos:end="187:22">ctx</name><operator pos:start="187:23" pos:end="187:24">-&gt;</operator><name pos:start="187:25" pos:end="187:29">tiles</name><index pos:start="187:30" pos:end="187:32">[<expr pos:start="187:31" pos:end="187:31"><name pos:start="187:31" pos:end="187:31">i</name></expr>]</index></name><operator pos:start="187:33" pos:end="187:33">.</operator><name pos:start="187:34" pos:end="187:34">x</name></expr></argument>, <argument pos:start="187:37" pos:end="187:51"><expr pos:start="187:37" pos:end="187:51"><name pos:start="187:37" pos:end="187:49"><name pos:start="187:37" pos:end="187:39">ctx</name><operator pos:start="187:40" pos:end="187:41">-&gt;</operator><name pos:start="187:42" pos:end="187:46">tiles</name><index pos:start="187:47" pos:end="187:49">[<expr pos:start="187:48" pos:end="187:48"><name pos:start="187:48" pos:end="187:48">i</name></expr>]</index></name><operator pos:start="187:50" pos:end="187:50">.</operator><name pos:start="187:51" pos:end="187:51">y</name></expr></argument>,

                   <argument pos:start="189:20" pos:end="189:34"><expr pos:start="189:20" pos:end="189:34"><name pos:start="189:20" pos:end="189:32"><name pos:start="189:20" pos:end="189:22">ctx</name><operator pos:start="189:23" pos:end="189:24">-&gt;</operator><name pos:start="189:25" pos:end="189:29">tiles</name><index pos:start="189:30" pos:end="189:32">[<expr pos:start="189:31" pos:end="189:31"><name pos:start="189:31" pos:end="189:31">i</name></expr>]</index></name><operator pos:start="189:33" pos:end="189:33">.</operator><name pos:start="189:34" pos:end="189:34">w</name></expr></argument>, <argument pos:start="189:37" pos:end="189:51"><expr pos:start="189:37" pos:end="189:51"><name pos:start="189:37" pos:end="189:49"><name pos:start="189:37" pos:end="189:39">ctx</name><operator pos:start="189:40" pos:end="189:41">-&gt;</operator><name pos:start="189:42" pos:end="189:46">tiles</name><index pos:start="189:47" pos:end="189:49">[<expr pos:start="189:48" pos:end="189:48"><name pos:start="189:48" pos:end="189:48">i</name></expr>]</index></name><operator pos:start="189:50" pos:end="189:50">.</operator><name pos:start="189:51" pos:end="189:51">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:38"><expr pos:start="191:13" pos:end="191:37"><name pos:start="191:13" pos:end="191:15">ret</name> <operator pos:start="191:17" pos:end="191:17">=</operator> <name pos:start="191:19" pos:end="191:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="193:13" pos:end="193:21">goto <name pos:start="193:18" pos:end="193:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="201:5" pos:end="201:62">/* Reset the reader in case it had been modified before */</comment>

    <expr_stmt pos:start="203:5" pos:end="203:20"><expr pos:start="203:5" pos:end="203:19"><name pos:start="203:5" pos:end="203:7">gbc</name> <operator pos:start="203:9" pos:end="203:9">=</operator> <operator pos:start="203:11" pos:end="203:11">&amp;</operator><name pos:start="203:12" pos:end="203:19"><name pos:start="203:12" pos:end="203:14">ctx</name><operator pos:start="203:15" pos:end="203:16">-&gt;</operator><name pos:start="203:17" pos:end="203:19">gbc</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="207:5" pos:end="207:55">/* Extract how much pixel data the tiles contain */</comment>

    <if_stmt pos:start="209:5" pos:end="223:48"><if pos:start="209:5" pos:end="211:48">if <condition pos:start="209:8" pos:end="209:27">(<expr pos:start="209:9" pos:end="209:26"><name pos:start="209:9" pos:end="209:18">pixel_size</name> <operator pos:start="209:20" pos:end="209:20">&lt;</operator> <literal type="number" pos:start="209:22" pos:end="209:26">0x100</literal></expr>)</condition><block type="pseudo" pos:start="211:9" pos:end="211:48"><block_content pos:start="211:9" pos:end="211:48">

        <expr_stmt pos:start="211:9" pos:end="211:48"><expr pos:start="211:9" pos:end="211:47"><name pos:start="211:9" pos:end="211:19">packed_size</name> <operator pos:start="211:21" pos:end="211:21">=</operator> <call pos:start="211:23" pos:end="211:47"><name pos:start="211:23" pos:end="211:42">bytestream2_get_byte</name><argument_list pos:start="211:43" pos:end="211:47">(<argument pos:start="211:44" pos:end="211:46"><expr pos:start="211:44" pos:end="211:46"><name pos:start="211:44" pos:end="211:46">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="213:5" pos:end="215:48">else if <condition pos:start="213:13" pos:end="213:34">(<expr pos:start="213:14" pos:end="213:33"><name pos:start="213:14" pos:end="213:23">pixel_size</name> <operator pos:start="213:25" pos:end="213:25">&lt;</operator> <literal type="number" pos:start="213:27" pos:end="213:33">0x10000</literal></expr>)</condition><block type="pseudo" pos:start="215:9" pos:end="215:48"><block_content pos:start="215:9" pos:end="215:48">

        <expr_stmt pos:start="215:9" pos:end="215:48"><expr pos:start="215:9" pos:end="215:47"><name pos:start="215:9" pos:end="215:19">packed_size</name> <operator pos:start="215:21" pos:end="215:21">=</operator> <call pos:start="215:23" pos:end="215:47"><name pos:start="215:23" pos:end="215:42">bytestream2_get_le16</name><argument_list pos:start="215:43" pos:end="215:47">(<argument pos:start="215:44" pos:end="215:46"><expr pos:start="215:44" pos:end="215:46"><name pos:start="215:44" pos:end="215:46">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="217:5" pos:end="219:48">else if <condition pos:start="217:13" pos:end="217:36">(<expr pos:start="217:14" pos:end="217:35"><name pos:start="217:14" pos:end="217:23">pixel_size</name> <operator pos:start="217:25" pos:end="217:25">&lt;</operator> <literal type="number" pos:start="217:27" pos:end="217:35">0x1000000</literal></expr>)</condition><block type="pseudo" pos:start="219:9" pos:end="219:48"><block_content pos:start="219:9" pos:end="219:48">

        <expr_stmt pos:start="219:9" pos:end="219:48"><expr pos:start="219:9" pos:end="219:47"><name pos:start="219:9" pos:end="219:19">packed_size</name> <operator pos:start="219:21" pos:end="219:21">=</operator> <call pos:start="219:23" pos:end="219:47"><name pos:start="219:23" pos:end="219:42">bytestream2_get_le24</name><argument_list pos:start="219:43" pos:end="219:47">(<argument pos:start="219:44" pos:end="219:46"><expr pos:start="219:44" pos:end="219:46"><name pos:start="219:44" pos:end="219:46">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="221:5" pos:end="223:48">else<block type="pseudo" pos:start="223:9" pos:end="223:48"><block_content pos:start="223:9" pos:end="223:48">

        <expr_stmt pos:start="223:9" pos:end="223:48"><expr pos:start="223:9" pos:end="223:47"><name pos:start="223:9" pos:end="223:19">packed_size</name> <operator pos:start="223:21" pos:end="223:21">=</operator> <call pos:start="223:23" pos:end="223:47"><name pos:start="223:23" pos:end="223:42">bytestream2_get_le32</name><argument_list pos:start="223:43" pos:end="223:47">(<argument pos:start="223:44" pos:end="223:46"><expr pos:start="223:44" pos:end="223:46"><name pos:start="223:44" pos:end="223:46">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="227:5" pos:end="227:79"><expr pos:start="227:5" pos:end="227:78"><call pos:start="227:5" pos:end="227:78"><name pos:start="227:5" pos:end="227:11">ff_dlog</name><argument_list pos:start="227:12" pos:end="227:78">(<argument pos:start="227:13" pos:end="227:17"><expr pos:start="227:13" pos:end="227:17"><name pos:start="227:13" pos:end="227:17">avctx</name></expr></argument>, <argument pos:start="227:20" pos:end="227:52"><expr pos:start="227:20" pos:end="227:52"><literal type="string" pos:start="227:20" pos:end="227:52">"pixel_size %d packed_size %d.\n"</literal></expr></argument>, <argument pos:start="227:55" pos:end="227:64"><expr pos:start="227:55" pos:end="227:64"><name pos:start="227:55" pos:end="227:64">pixel_size</name></expr></argument>, <argument pos:start="227:67" pos:end="227:77"><expr pos:start="227:67" pos:end="227:77"><name pos:start="227:67" pos:end="227:77">packed_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="231:5" pos:end="239:5"><if pos:start="231:5" pos:end="239:5">if <condition pos:start="231:8" pos:end="231:24">(<expr pos:start="231:9" pos:end="231:23"><name pos:start="231:9" pos:end="231:19">packed_size</name> <operator pos:start="231:21" pos:end="231:21">&lt;</operator> <literal type="number" pos:start="231:23" pos:end="231:23">0</literal></expr>)</condition> <block pos:start="231:26" pos:end="239:5">{<block_content pos:start="233:9" pos:end="237:17">

        <expr_stmt pos:start="233:9" pos:end="233:75"><expr pos:start="233:9" pos:end="233:74"><call pos:start="233:9" pos:end="233:74"><name pos:start="233:9" pos:end="233:14">av_log</name><argument_list pos:start="233:15" pos:end="233:74">(<argument pos:start="233:16" pos:end="233:20"><expr pos:start="233:16" pos:end="233:20"><name pos:start="233:16" pos:end="233:20">avctx</name></expr></argument>, <argument pos:start="233:23" pos:end="233:34"><expr pos:start="233:23" pos:end="233:34"><name pos:start="233:23" pos:end="233:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="233:37" pos:end="233:60"><expr pos:start="233:37" pos:end="233:60"><literal type="string" pos:start="233:37" pos:end="233:60">"Invalid tile size %d\n"</literal></expr></argument>, <argument pos:start="233:63" pos:end="233:73"><expr pos:start="233:63" pos:end="233:73"><name pos:start="233:63" pos:end="233:73">packed_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:34"><expr pos:start="235:9" pos:end="235:33"><name pos:start="235:9" pos:end="235:11">ret</name> <operator pos:start="235:13" pos:end="235:13">=</operator> <name pos:start="235:15" pos:end="235:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="237:9" pos:end="237:17">goto <name pos:start="237:14" pos:end="237:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="243:5" pos:end="243:59">/* Get pixels buffer, it may be deflated or just raw */</comment>

    <if_stmt pos:start="245:5" pos:end="287:5"><if pos:start="245:5" pos:end="259:5">if <condition pos:start="245:8" pos:end="245:34">(<expr pos:start="245:9" pos:end="245:33"><name pos:start="245:9" pos:end="245:18">pixel_size</name> <operator pos:start="245:20" pos:end="245:21">==</operator> <name pos:start="245:23" pos:end="245:33">packed_size</name></expr>)</condition> <block pos:start="245:36" pos:end="259:5">{<block_content pos:start="247:9" pos:end="257:29">

        <if_stmt pos:start="247:9" pos:end="255:9"><if pos:start="247:9" pos:end="255:9">if <condition pos:start="247:12" pos:end="247:57">(<expr pos:start="247:13" pos:end="247:56"><call pos:start="247:13" pos:end="247:43"><name pos:start="247:13" pos:end="247:38">bytestream2_get_bytes_left</name><argument_list pos:start="247:39" pos:end="247:43">(<argument pos:start="247:40" pos:end="247:42"><expr pos:start="247:40" pos:end="247:42"><name pos:start="247:40" pos:end="247:42">gbc</name></expr></argument>)</argument_list></call> <operator pos:start="247:45" pos:end="247:45">&lt;</operator> <name pos:start="247:47" pos:end="247:56">pixel_size</name></expr>)</condition> <block pos:start="247:59" pos:end="255:9">{<block_content pos:start="249:13" pos:end="253:21">

            <expr_stmt pos:start="249:13" pos:end="249:83"><expr pos:start="249:13" pos:end="249:82"><call pos:start="249:13" pos:end="249:82"><name pos:start="249:13" pos:end="249:18">av_log</name><argument_list pos:start="249:19" pos:end="249:82">(<argument pos:start="249:20" pos:end="249:24"><expr pos:start="249:20" pos:end="249:24"><name pos:start="249:20" pos:end="249:24">avctx</name></expr></argument>, <argument pos:start="249:27" pos:end="249:38"><expr pos:start="249:27" pos:end="249:38"><name pos:start="249:27" pos:end="249:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="249:41" pos:end="249:69"><expr pos:start="249:41" pos:end="249:69"><literal type="string" pos:start="249:41" pos:end="249:69">"Insufficient input for %d\n"</literal></expr></argument>, <argument pos:start="249:72" pos:end="249:81"><expr pos:start="249:72" pos:end="249:81"><name pos:start="249:72" pos:end="249:81">pixel_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:38"><expr pos:start="251:13" pos:end="251:37"><name pos:start="251:13" pos:end="251:15">ret</name> <operator pos:start="251:17" pos:end="251:17">=</operator> <name pos:start="251:19" pos:end="251:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="253:13" pos:end="253:21">goto <name pos:start="253:18" pos:end="253:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:29"><expr pos:start="257:9" pos:end="257:28"><name pos:start="257:9" pos:end="257:14">pixels</name> <operator pos:start="257:16" pos:end="257:16">=</operator> <name pos:start="257:18" pos:end="257:28"><name pos:start="257:18" pos:end="257:20">gbc</name><operator pos:start="257:21" pos:end="257:22">-&gt;</operator><name pos:start="257:23" pos:end="257:28">buffer</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="259:7" pos:end="287:5">else <block pos:start="259:12" pos:end="287:5">{<block_content pos:start="261:9" pos:end="285:35">

        <decl_stmt pos:start="261:9" pos:end="261:40"><decl pos:start="261:9" pos:end="261:39"><type pos:start="261:9" pos:end="261:14"><name pos:start="261:9" pos:end="261:14">uLongf</name></type> <name pos:start="261:16" pos:end="261:18">len</name> <init pos:start="261:20" pos:end="261:39">= <expr pos:start="261:22" pos:end="261:39"><name pos:start="261:22" pos:end="261:39"><name pos:start="261:22" pos:end="261:24">ctx</name><operator pos:start="261:25" pos:end="261:26">-&gt;</operator><name pos:start="261:27" pos:end="261:39">inflated_size</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="263:9" pos:end="271:9"><if pos:start="263:9" pos:end="271:9">if <condition pos:start="263:12" pos:end="263:58">(<expr pos:start="263:13" pos:end="263:57"><call pos:start="263:13" pos:end="263:43"><name pos:start="263:13" pos:end="263:38">bytestream2_get_bytes_left</name><argument_list pos:start="263:39" pos:end="263:43">(<argument pos:start="263:40" pos:end="263:42"><expr pos:start="263:40" pos:end="263:42"><name pos:start="263:40" pos:end="263:42">gbc</name></expr></argument>)</argument_list></call> <operator pos:start="263:45" pos:end="263:45">&lt;</operator> <name pos:start="263:47" pos:end="263:57">packed_size</name></expr>)</condition> <block pos:start="263:60" pos:end="271:9">{<block_content pos:start="265:13" pos:end="269:21">

            <expr_stmt pos:start="265:13" pos:end="265:84"><expr pos:start="265:13" pos:end="265:83"><call pos:start="265:13" pos:end="265:83"><name pos:start="265:13" pos:end="265:18">av_log</name><argument_list pos:start="265:19" pos:end="265:83">(<argument pos:start="265:20" pos:end="265:24"><expr pos:start="265:20" pos:end="265:24"><name pos:start="265:20" pos:end="265:24">avctx</name></expr></argument>, <argument pos:start="265:27" pos:end="265:38"><expr pos:start="265:27" pos:end="265:38"><name pos:start="265:27" pos:end="265:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="265:41" pos:end="265:69"><expr pos:start="265:41" pos:end="265:69"><literal type="string" pos:start="265:41" pos:end="265:69">"Insufficient input for %d\n"</literal></expr></argument>, <argument pos:start="265:72" pos:end="265:82"><expr pos:start="265:72" pos:end="265:82"><name pos:start="265:72" pos:end="265:82">packed_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:38"><expr pos:start="267:13" pos:end="267:37"><name pos:start="267:13" pos:end="267:15">ret</name> <operator pos:start="267:17" pos:end="267:17">=</operator> <name pos:start="267:19" pos:end="267:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="269:13" pos:end="269:21">goto <name pos:start="269:18" pos:end="269:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:76"><expr pos:start="273:9" pos:end="273:75"><name pos:start="273:9" pos:end="273:11">ret</name> <operator pos:start="273:13" pos:end="273:13">=</operator> <call pos:start="273:15" pos:end="273:75"><name pos:start="273:15" pos:end="273:24">uncompress</name><argument_list pos:start="273:25" pos:end="273:75">(<argument pos:start="273:26" pos:end="273:42"><expr pos:start="273:26" pos:end="273:42"><name pos:start="273:26" pos:end="273:42"><name pos:start="273:26" pos:end="273:28">ctx</name><operator pos:start="273:29" pos:end="273:30">-&gt;</operator><name pos:start="273:31" pos:end="273:42">inflated_buf</name></name></expr></argument>, <argument pos:start="273:45" pos:end="273:48"><expr pos:start="273:45" pos:end="273:48"><operator pos:start="273:45" pos:end="273:45">&amp;</operator><name pos:start="273:46" pos:end="273:48">len</name></expr></argument>, <argument pos:start="273:51" pos:end="273:61"><expr pos:start="273:51" pos:end="273:61"><name pos:start="273:51" pos:end="273:61"><name pos:start="273:51" pos:end="273:53">gbc</name><operator pos:start="273:54" pos:end="273:55">-&gt;</operator><name pos:start="273:56" pos:end="273:61">buffer</name></name></expr></argument>, <argument pos:start="273:64" pos:end="273:74"><expr pos:start="273:64" pos:end="273:74"><name pos:start="273:64" pos:end="273:74">packed_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="275:9" pos:end="283:9"><if pos:start="275:9" pos:end="283:9">if <condition pos:start="275:12" pos:end="275:16">(<expr pos:start="275:13" pos:end="275:15"><name pos:start="275:13" pos:end="275:15">ret</name></expr>)</condition> <block pos:start="275:18" pos:end="283:9">{<block_content pos:start="277:13" pos:end="281:21">

            <expr_stmt pos:start="277:13" pos:end="277:74"><expr pos:start="277:13" pos:end="277:73"><call pos:start="277:13" pos:end="277:73"><name pos:start="277:13" pos:end="277:18">av_log</name><argument_list pos:start="277:19" pos:end="277:73">(<argument pos:start="277:20" pos:end="277:24"><expr pos:start="277:20" pos:end="277:24"><name pos:start="277:20" pos:end="277:24">avctx</name></expr></argument>, <argument pos:start="277:27" pos:end="277:38"><expr pos:start="277:27" pos:end="277:38"><name pos:start="277:27" pos:end="277:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="277:41" pos:end="277:67"><expr pos:start="277:41" pos:end="277:67"><literal type="string" pos:start="277:41" pos:end="277:67">"Pixel deflate error %d.\n"</literal></expr></argument>, <argument pos:start="277:70" pos:end="277:72"><expr pos:start="277:70" pos:end="277:72"><name pos:start="277:70" pos:end="277:72">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="279:13" pos:end="279:34"><expr pos:start="279:13" pos:end="279:33"><name pos:start="279:13" pos:end="279:15">ret</name> <operator pos:start="279:17" pos:end="279:17">=</operator> <name pos:start="279:19" pos:end="279:33">AVERROR_UNKNOWN</name></expr>;</expr_stmt>

            <goto pos:start="281:13" pos:end="281:21">goto <name pos:start="281:18" pos:end="281:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:35"><expr pos:start="285:9" pos:end="285:34"><name pos:start="285:9" pos:end="285:14">pixels</name> <operator pos:start="285:16" pos:end="285:16">=</operator> <name pos:start="285:18" pos:end="285:34"><name pos:start="285:18" pos:end="285:20">ctx</name><operator pos:start="285:21" pos:end="285:22">-&gt;</operator><name pos:start="285:23" pos:end="285:34">inflated_buf</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="291:5" pos:end="291:30">/* Allocate when needed */</comment>

    <expr_stmt pos:start="293:5" pos:end="293:49"><expr pos:start="293:5" pos:end="293:48"><name pos:start="293:5" pos:end="293:7">ret</name> <operator pos:start="293:9" pos:end="293:9">=</operator> <call pos:start="293:11" pos:end="293:48"><name pos:start="293:11" pos:end="293:25">ff_reget_buffer</name><argument_list pos:start="293:26" pos:end="293:48">(<argument pos:start="293:27" pos:end="293:31"><expr pos:start="293:27" pos:end="293:31"><name pos:start="293:27" pos:end="293:31">avctx</name></expr></argument>, <argument pos:start="293:34" pos:end="293:47"><expr pos:start="293:34" pos:end="293:47"><name pos:start="293:34" pos:end="293:47"><name pos:start="293:34" pos:end="293:36">ctx</name><operator pos:start="293:37" pos:end="293:38">-&gt;</operator><name pos:start="293:39" pos:end="293:47">reference</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="295:5" pos:end="297:17"><if pos:start="295:5" pos:end="297:17">if <condition pos:start="295:8" pos:end="295:16">(<expr pos:start="295:9" pos:end="295:15"><name pos:start="295:9" pos:end="295:11">ret</name> <operator pos:start="295:13" pos:end="295:13">&lt;</operator> <literal type="number" pos:start="295:15" pos:end="295:15">0</literal></expr>)</condition><block type="pseudo" pos:start="297:9" pos:end="297:17"><block_content pos:start="297:9" pos:end="297:17">

        <goto pos:start="297:9" pos:end="297:17">goto <name pos:start="297:14" pos:end="297:16">end</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="301:5" pos:end="301:73">/* Pointer to actual pixels, will be updated when data is consumed */</comment>

    <expr_stmt pos:start="303:5" pos:end="303:17"><expr pos:start="303:5" pos:end="303:16"><name pos:start="303:5" pos:end="303:7">raw</name> <operator pos:start="303:9" pos:end="303:9">=</operator> <name pos:start="303:11" pos:end="303:16">pixels</name></expr>;</expr_stmt>

    <for pos:start="305:5" pos:end="323:5">for <control pos:start="305:9" pos:end="305:34">(<init pos:start="305:10" pos:end="305:15"><expr pos:start="305:10" pos:end="305:14"><name pos:start="305:10" pos:end="305:10">i</name> <operator pos:start="305:12" pos:end="305:12">=</operator> <literal type="number" pos:start="305:14" pos:end="305:14">0</literal></expr>;</init> <condition pos:start="305:17" pos:end="305:29"><expr pos:start="305:17" pos:end="305:28"><name pos:start="305:17" pos:end="305:17">i</name> <operator pos:start="305:19" pos:end="305:19">&lt;</operator> <name pos:start="305:21" pos:end="305:28">tiles_nb</name></expr>;</condition> <incr pos:start="305:31" pos:end="305:33"><expr pos:start="305:31" pos:end="305:33"><name pos:start="305:31" pos:end="305:31">i</name><operator pos:start="305:32" pos:end="305:33">++</operator></expr></incr>)</control> <block pos:start="305:36" pos:end="323:5">{<block_content pos:start="307:9" pos:end="321:71">

        <decl_stmt pos:start="307:9" pos:end="311:61"><decl pos:start="307:9" pos:end="311:60"><type pos:start="307:9" pos:end="307:17"><name pos:start="307:9" pos:end="307:15">uint8_t</name> <modifier pos:start="307:17" pos:end="307:17">*</modifier></type><name pos:start="307:18" pos:end="307:20">dst</name> <init pos:start="307:22" pos:end="311:60">= <expr pos:start="307:24" pos:end="311:60"><name pos:start="307:24" pos:end="307:46"><name pos:start="307:24" pos:end="307:26">ctx</name><operator pos:start="307:27" pos:end="307:28">-&gt;</operator><name pos:start="307:29" pos:end="307:37">reference</name><operator pos:start="307:38" pos:end="307:39">-&gt;</operator><name pos:start="307:40" pos:end="307:43">data</name><index pos:start="307:44" pos:end="307:46">[<expr pos:start="307:45" pos:end="307:45"><literal type="number" pos:start="307:45" pos:end="307:45">0</literal></expr>]</index></name> <operator pos:start="307:48" pos:end="307:48">+</operator> <name pos:start="307:50" pos:end="307:76"><name pos:start="307:50" pos:end="307:52">ctx</name><operator pos:start="307:53" pos:end="307:54">-&gt;</operator><name pos:start="307:55" pos:end="307:63">reference</name><operator pos:start="307:64" pos:end="307:65">-&gt;</operator><name pos:start="307:66" pos:end="307:73">linesize</name><index pos:start="307:74" pos:end="307:76">[<expr pos:start="307:75" pos:end="307:75"><literal type="number" pos:start="307:75" pos:end="307:75">0</literal></expr>]</index></name> <operator pos:start="307:78" pos:end="307:78">*</operator>

                       <operator pos:start="309:24" pos:end="309:24">(</operator><name pos:start="309:25" pos:end="309:37"><name pos:start="309:25" pos:end="309:29">avctx</name><operator pos:start="309:30" pos:end="309:31">-&gt;</operator><name pos:start="309:32" pos:end="309:37">height</name></name> <operator pos:start="309:39" pos:end="309:39">-</operator> <name pos:start="309:41" pos:end="309:53"><name pos:start="309:41" pos:end="309:43">ctx</name><operator pos:start="309:44" pos:end="309:45">-&gt;</operator><name pos:start="309:46" pos:end="309:50">tiles</name><index pos:start="309:51" pos:end="309:53">[<expr pos:start="309:52" pos:end="309:52"><name pos:start="309:52" pos:end="309:52">i</name></expr>]</index></name><operator pos:start="309:54" pos:end="309:54">.</operator><name pos:start="309:55" pos:end="309:55">y</name> <operator pos:start="309:57" pos:end="309:57">-</operator> <literal type="number" pos:start="309:59" pos:end="309:59">1</literal><operator pos:start="309:60" pos:end="309:60">)</operator> <operator pos:start="309:62" pos:end="309:62">+</operator>

                       <name pos:start="311:24" pos:end="311:36"><name pos:start="311:24" pos:end="311:26">ctx</name><operator pos:start="311:27" pos:end="311:28">-&gt;</operator><name pos:start="311:29" pos:end="311:33">tiles</name><index pos:start="311:34" pos:end="311:36">[<expr pos:start="311:35" pos:end="311:35"><name pos:start="311:35" pos:end="311:35">i</name></expr>]</index></name><operator pos:start="311:37" pos:end="311:37">.</operator><name pos:start="311:38" pos:end="311:38">x</name> <operator pos:start="311:40" pos:end="311:40">*</operator> <name pos:start="311:42" pos:end="311:60"><name pos:start="311:42" pos:end="311:44">ctx</name><operator pos:start="311:45" pos:end="311:46">-&gt;</operator><name pos:start="311:47" pos:end="311:60">component_size</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="313:9" pos:end="319:45"><expr pos:start="313:9" pos:end="319:44"><call pos:start="313:9" pos:end="319:44"><name pos:start="313:9" pos:end="313:27">av_image_copy_plane</name><argument_list pos:start="313:28" pos:end="319:44">(<argument pos:start="313:29" pos:end="313:31"><expr pos:start="313:29" pos:end="313:31"><name pos:start="313:29" pos:end="313:31">dst</name></expr></argument>, <argument pos:start="313:34" pos:end="313:65"><expr pos:start="313:34" pos:end="313:65"><operator pos:start="313:34" pos:end="313:34">-</operator><literal type="number" pos:start="313:35" pos:end="313:35">1</literal> <operator pos:start="313:37" pos:end="313:37">*</operator> <name pos:start="313:39" pos:end="313:65"><name pos:start="313:39" pos:end="313:41">ctx</name><operator pos:start="313:42" pos:end="313:43">-&gt;</operator><name pos:start="313:44" pos:end="313:52">reference</name><operator pos:start="313:53" pos:end="313:54">-&gt;</operator><name pos:start="313:55" pos:end="313:62">linesize</name><index pos:start="313:63" pos:end="313:65">[<expr pos:start="313:64" pos:end="313:64"><literal type="number" pos:start="313:64" pos:end="313:64">0</literal></expr>]</index></name></expr></argument>,

                            <argument pos:start="315:29" pos:end="315:31"><expr pos:start="315:29" pos:end="315:31"><name pos:start="315:29" pos:end="315:31">raw</name></expr></argument>, <argument pos:start="315:34" pos:end="315:70"><expr pos:start="315:34" pos:end="315:70"><name pos:start="315:34" pos:end="315:46"><name pos:start="315:34" pos:end="315:36">ctx</name><operator pos:start="315:37" pos:end="315:38">-&gt;</operator><name pos:start="315:39" pos:end="315:43">tiles</name><index pos:start="315:44" pos:end="315:46">[<expr pos:start="315:45" pos:end="315:45"><name pos:start="315:45" pos:end="315:45">i</name></expr>]</index></name><operator pos:start="315:47" pos:end="315:47">.</operator><name pos:start="315:48" pos:end="315:48">w</name> <operator pos:start="315:50" pos:end="315:50">*</operator> <name pos:start="315:52" pos:end="315:70"><name pos:start="315:52" pos:end="315:54">ctx</name><operator pos:start="315:55" pos:end="315:56">-&gt;</operator><name pos:start="315:57" pos:end="315:70">component_size</name></name></expr></argument>,

                            <argument pos:start="317:29" pos:end="317:65"><expr pos:start="317:29" pos:end="317:65"><name pos:start="317:29" pos:end="317:41"><name pos:start="317:29" pos:end="317:31">ctx</name><operator pos:start="317:32" pos:end="317:33">-&gt;</operator><name pos:start="317:34" pos:end="317:38">tiles</name><index pos:start="317:39" pos:end="317:41">[<expr pos:start="317:40" pos:end="317:40"><name pos:start="317:40" pos:end="317:40">i</name></expr>]</index></name><operator pos:start="317:42" pos:end="317:42">.</operator><name pos:start="317:43" pos:end="317:43">w</name> <operator pos:start="317:45" pos:end="317:45">*</operator> <name pos:start="317:47" pos:end="317:65"><name pos:start="317:47" pos:end="317:49">ctx</name><operator pos:start="317:50" pos:end="317:51">-&gt;</operator><name pos:start="317:52" pos:end="317:65">component_size</name></name></expr></argument>,

                            <argument pos:start="319:29" pos:end="319:43"><expr pos:start="319:29" pos:end="319:43"><name pos:start="319:29" pos:end="319:41"><name pos:start="319:29" pos:end="319:31">ctx</name><operator pos:start="319:32" pos:end="319:33">-&gt;</operator><name pos:start="319:34" pos:end="319:38">tiles</name><index pos:start="319:39" pos:end="319:41">[<expr pos:start="319:40" pos:end="319:40"><name pos:start="319:40" pos:end="319:40">i</name></expr>]</index></name><operator pos:start="319:42" pos:end="319:42">.</operator><name pos:start="319:43" pos:end="319:43">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:71"><expr pos:start="321:9" pos:end="321:70"><name pos:start="321:9" pos:end="321:11">raw</name> <operator pos:start="321:13" pos:end="321:14">+=</operator> <name pos:start="321:16" pos:end="321:28"><name pos:start="321:16" pos:end="321:18">ctx</name><operator pos:start="321:19" pos:end="321:20">-&gt;</operator><name pos:start="321:21" pos:end="321:25">tiles</name><index pos:start="321:26" pos:end="321:28">[<expr pos:start="321:27" pos:end="321:27"><name pos:start="321:27" pos:end="321:27">i</name></expr>]</index></name><operator pos:start="321:29" pos:end="321:29">.</operator><name pos:start="321:30" pos:end="321:30">w</name> <operator pos:start="321:32" pos:end="321:32">*</operator> <name pos:start="321:34" pos:end="321:52"><name pos:start="321:34" pos:end="321:36">ctx</name><operator pos:start="321:37" pos:end="321:38">-&gt;</operator><name pos:start="321:39" pos:end="321:52">component_size</name></name> <operator pos:start="321:54" pos:end="321:54">*</operator> <name pos:start="321:56" pos:end="321:68"><name pos:start="321:56" pos:end="321:58">ctx</name><operator pos:start="321:59" pos:end="321:60">-&gt;</operator><name pos:start="321:61" pos:end="321:65">tiles</name><index pos:start="321:66" pos:end="321:68">[<expr pos:start="321:67" pos:end="321:67"><name pos:start="321:67" pos:end="321:67">i</name></expr>]</index></name><operator pos:start="321:69" pos:end="321:69">.</operator><name pos:start="321:70" pos:end="321:70">h</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="327:5" pos:end="327:37">/* Frame is ready to be output */</comment>

    <expr_stmt pos:start="329:5" pos:end="329:46"><expr pos:start="329:5" pos:end="329:45"><name pos:start="329:5" pos:end="329:7">ret</name> <operator pos:start="329:9" pos:end="329:9">=</operator> <call pos:start="329:11" pos:end="329:45"><name pos:start="329:11" pos:end="329:22">av_frame_ref</name><argument_list pos:start="329:23" pos:end="329:45">(<argument pos:start="329:24" pos:end="329:28"><expr pos:start="329:24" pos:end="329:28"><name pos:start="329:24" pos:end="329:28">frame</name></expr></argument>, <argument pos:start="329:31" pos:end="329:44"><expr pos:start="329:31" pos:end="329:44"><name pos:start="329:31" pos:end="329:44"><name pos:start="329:31" pos:end="329:33">ctx</name><operator pos:start="329:34" pos:end="329:35">-&gt;</operator><name pos:start="329:36" pos:end="329:44">reference</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="331:5" pos:end="333:17"><if pos:start="331:5" pos:end="333:17">if <condition pos:start="331:8" pos:end="331:16">(<expr pos:start="331:9" pos:end="331:15"><name pos:start="331:9" pos:end="331:11">ret</name> <operator pos:start="331:13" pos:end="331:13">&lt;</operator> <literal type="number" pos:start="331:15" pos:end="331:15">0</literal></expr>)</condition><block type="pseudo" pos:start="333:9" pos:end="333:17"><block_content pos:start="333:9" pos:end="333:17">

        <goto pos:start="333:9" pos:end="333:17">goto <name pos:start="333:14" pos:end="333:16">end</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="337:5" pos:end="337:78">/* Keyframe when the number of pixels updated matches the whole surface */</comment>

    <if_stmt pos:start="339:5" pos:end="349:5"><if pos:start="339:5" pos:end="345:5">if <condition pos:start="339:8" pos:end="339:41">(<expr pos:start="339:9" pos:end="339:40"><name pos:start="339:9" pos:end="339:18">pixel_size</name> <operator pos:start="339:20" pos:end="339:21">==</operator> <name pos:start="339:23" pos:end="339:40"><name pos:start="339:23" pos:end="339:25">ctx</name><operator pos:start="339:26" pos:end="339:27">-&gt;</operator><name pos:start="339:28" pos:end="339:40">inflated_size</name></name></expr>)</condition> <block pos:start="339:43" pos:end="345:5">{<block_content pos:start="341:9" pos:end="343:29">

        <expr_stmt pos:start="341:9" pos:end="341:45"><expr pos:start="341:9" pos:end="341:44"><name pos:start="341:9" pos:end="341:24"><name pos:start="341:9" pos:end="341:13">frame</name><operator pos:start="341:14" pos:end="341:15">-&gt;</operator><name pos:start="341:16" pos:end="341:24">pict_type</name></name> <operator pos:start="341:26" pos:end="341:26">=</operator> <name pos:start="341:28" pos:end="341:44">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

        <expr_stmt pos:start="343:9" pos:end="343:29"><expr pos:start="343:9" pos:end="343:28"><name pos:start="343:9" pos:end="343:24"><name pos:start="343:9" pos:end="343:13">frame</name><operator pos:start="343:14" pos:end="343:15">-&gt;</operator><name pos:start="343:16" pos:end="343:24">key_frame</name></name> <operator pos:start="343:26" pos:end="343:26">=</operator> <literal type="number" pos:start="343:28" pos:end="343:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="345:7" pos:end="349:5">else <block pos:start="345:12" pos:end="349:5">{<block_content pos:start="347:9" pos:end="347:45">

        <expr_stmt pos:start="347:9" pos:end="347:45"><expr pos:start="347:9" pos:end="347:44"><name pos:start="347:9" pos:end="347:24"><name pos:start="347:9" pos:end="347:13">frame</name><operator pos:start="347:14" pos:end="347:15">-&gt;</operator><name pos:start="347:16" pos:end="347:24">pict_type</name></name> <operator pos:start="347:26" pos:end="347:26">=</operator> <name pos:start="347:28" pos:end="347:44">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="351:5" pos:end="369:5"><if pos:start="351:5" pos:end="369:5">if <condition pos:start="351:8" pos:end="351:42">(<expr pos:start="351:9" pos:end="351:41"><name pos:start="351:9" pos:end="351:22"><name pos:start="351:9" pos:end="351:13">avctx</name><operator pos:start="351:14" pos:end="351:15">-&gt;</operator><name pos:start="351:16" pos:end="351:22">pix_fmt</name></name> <operator pos:start="351:24" pos:end="351:25">==</operator> <name pos:start="351:27" pos:end="351:41">AV_PIX_FMT_PAL8</name></expr>)</condition> <block pos:start="351:44" pos:end="369:5">{<block_content pos:start="353:9" pos:end="367:58">

        <decl_stmt pos:start="353:9" pos:end="357:59"><decl pos:start="353:9" pos:end="357:58"><type pos:start="353:9" pos:end="353:23"><specifier pos:start="353:9" pos:end="353:13">const</specifier> <name pos:start="353:15" pos:end="353:21">uint8_t</name> <modifier pos:start="353:23" pos:end="353:23">*</modifier></type><name pos:start="353:24" pos:end="353:26">pal</name> <init pos:start="353:28" pos:end="357:58">= <expr pos:start="353:30" pos:end="357:58"><call pos:start="353:30" pos:end="357:58"><name pos:start="353:30" pos:end="353:52">av_packet_get_side_data</name><argument_list pos:start="353:53" pos:end="357:58">(<argument pos:start="353:54" pos:end="353:58"><expr pos:start="353:54" pos:end="353:58"><name pos:start="353:54" pos:end="353:58">avpkt</name></expr></argument>,

                                                     <argument pos:start="355:54" pos:end="355:72"><expr pos:start="355:54" pos:end="355:72"><name pos:start="355:54" pos:end="355:72">AV_PKT_DATA_PALETTE</name></expr></argument>,

                                                     <argument pos:start="357:54" pos:end="357:57"><expr pos:start="357:54" pos:end="357:57"><name pos:start="357:54" pos:end="357:57">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="359:9" pos:end="365:9"><if pos:start="359:9" pos:end="365:9">if <condition pos:start="359:12" pos:end="359:16">(<expr pos:start="359:13" pos:end="359:15"><name pos:start="359:13" pos:end="359:15">pal</name></expr>)</condition> <block pos:start="359:18" pos:end="365:9">{<block_content pos:start="361:13" pos:end="363:50">

            <expr_stmt pos:start="361:13" pos:end="361:43"><expr pos:start="361:13" pos:end="361:42"><name pos:start="361:13" pos:end="361:38"><name pos:start="361:13" pos:end="361:17">frame</name><operator pos:start="361:18" pos:end="361:19">-&gt;</operator><name pos:start="361:20" pos:end="361:38">palette_has_changed</name></name> <operator pos:start="361:40" pos:end="361:40">=</operator> <literal type="number" pos:start="361:42" pos:end="361:42">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:50"><expr pos:start="363:13" pos:end="363:49"><call pos:start="363:13" pos:end="363:49"><name pos:start="363:13" pos:end="363:18">memcpy</name><argument_list pos:start="363:19" pos:end="363:49">(<argument pos:start="363:20" pos:end="363:27"><expr pos:start="363:20" pos:end="363:27"><name pos:start="363:20" pos:end="363:27"><name pos:start="363:20" pos:end="363:22">ctx</name><operator pos:start="363:23" pos:end="363:24">-&gt;</operator><name pos:start="363:25" pos:end="363:27">pal</name></name></expr></argument>, <argument pos:start="363:30" pos:end="363:32"><expr pos:start="363:30" pos:end="363:32"><name pos:start="363:30" pos:end="363:32">pal</name></expr></argument>, <argument pos:start="363:35" pos:end="363:48"><expr pos:start="363:35" pos:end="363:48"><name pos:start="363:35" pos:end="363:48">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="367:9" pos:end="367:58"><expr pos:start="367:9" pos:end="367:57"><call pos:start="367:9" pos:end="367:57"><name pos:start="367:9" pos:end="367:14">memcpy</name> <argument_list pos:start="367:16" pos:end="367:57">(<argument pos:start="367:17" pos:end="367:30"><expr pos:start="367:17" pos:end="367:30"><name pos:start="367:17" pos:end="367:30"><name pos:start="367:17" pos:end="367:21">frame</name><operator pos:start="367:22" pos:end="367:23">-&gt;</operator><name pos:start="367:24" pos:end="367:27">data</name><index pos:start="367:28" pos:end="367:30">[<expr pos:start="367:29" pos:end="367:29"><literal type="number" pos:start="367:29" pos:end="367:29">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="367:33" pos:end="367:40"><expr pos:start="367:33" pos:end="367:40"><name pos:start="367:33" pos:end="367:40"><name pos:start="367:33" pos:end="367:35">ctx</name><operator pos:start="367:36" pos:end="367:37">-&gt;</operator><name pos:start="367:38" pos:end="367:40">pal</name></name></expr></argument>, <argument pos:start="367:43" pos:end="367:56"><expr pos:start="367:43" pos:end="367:56"><name pos:start="367:43" pos:end="367:56">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="371:5" pos:end="371:19"><expr pos:start="371:5" pos:end="371:18"><operator pos:start="371:5" pos:end="371:5">*</operator><name pos:start="371:6" pos:end="371:14">got_frame</name> <operator pos:start="371:16" pos:end="371:16">=</operator> <literal type="number" pos:start="371:18" pos:end="371:18">1</literal></expr>;</expr_stmt>



<label pos:start="375:1" pos:end="375:4"><name pos:start="375:1" pos:end="375:3">end</name>:</label>

    <expr_stmt pos:start="377:5" pos:end="377:28"><expr pos:start="377:5" pos:end="377:27"><call pos:start="377:5" pos:end="377:27"><name pos:start="377:5" pos:end="377:11">av_free</name><argument_list pos:start="377:12" pos:end="377:27">(<argument pos:start="377:13" pos:end="377:26"><expr pos:start="377:13" pos:end="377:26"><name pos:start="377:13" pos:end="377:26">inflated_tiles</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="379:5" pos:end="379:15">return <expr pos:start="379:12" pos:end="379:14"><name pos:start="379:12" pos:end="379:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
