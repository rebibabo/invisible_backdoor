<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4562.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:36">onenand_prog_spare</name><parameter_list pos:start="1:37" pos:end="3:26">(<parameter pos:start="1:38" pos:end="1:52"><decl pos:start="1:38" pos:end="1:52"><type pos:start="1:38" pos:end="1:52"><name pos:start="1:38" pos:end="1:49">OneNANDState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:61"><decl pos:start="1:55" pos:end="1:61"><type pos:start="1:55" pos:end="1:61"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:61">sec</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:71"><decl pos:start="1:64" pos:end="1:71"><type pos:start="1:64" pos:end="1:71"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:71">secn</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:25"><decl pos:start="3:17" pos:end="3:25"><type pos:start="3:17" pos:end="3:25"><name pos:start="3:17" pos:end="3:20">void</name> <modifier pos:start="3:22" pos:end="3:22">*</modifier></type><name pos:start="3:23" pos:end="3:25">src</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="73:1">{<block_content pos:start="7:5" pos:end="71:18">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">result</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="69:5"><if pos:start="9:5" pos:end="69:5">if <condition pos:start="9:8" pos:end="9:17">(<expr pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:12">secn</name> <operator pos:start="9:14" pos:end="9:14">&gt;</operator> <literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr>)</condition> <block pos:start="9:19" pos:end="69:5">{<block_content pos:start="11:9" pos:end="67:19">

        <decl_stmt pos:start="11:9" pos:end="11:49"><decl pos:start="11:9" pos:end="11:48"><type pos:start="11:9" pos:end="11:23"><specifier pos:start="11:9" pos:end="11:13">const</specifier> <name pos:start="11:15" pos:end="11:21">uint8_t</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:25">sp</name> <init pos:start="11:27" pos:end="11:48">= <expr pos:start="11:29" pos:end="11:48"><operator pos:start="11:29" pos:end="11:29">(</operator><specifier pos:start="11:30" pos:end="11:34">const</specifier> <name pos:start="11:36" pos:end="11:42">uint8_t</name> <operator pos:start="11:44" pos:end="11:44">*</operator><operator pos:start="11:45" pos:end="11:45">)</operator><name pos:start="11:46" pos:end="11:48">src</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:34"><decl pos:start="13:9" pos:end="13:23"><type pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:15">uint8_t</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:19">dp</name> <init pos:start="13:21" pos:end="13:23">= <expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr></init></decl>, <decl pos:start="13:26" pos:end="13:33"><type ref="prev" pos:start="13:9" pos:end="13:17"><modifier pos:start="13:26" pos:end="13:26">*</modifier></type><name pos:start="13:27" pos:end="13:29">dpp</name> <init pos:start="13:31" pos:end="13:33">= <expr pos:start="13:33" pos:end="13:33"><literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="15:9" pos:end="45:9"><if pos:start="15:9" pos:end="33:9">if <condition pos:start="15:12" pos:end="15:24">(<expr pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:13">s</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:23">bdrv_cur</name></name></expr>)</condition> <block pos:start="15:26" pos:end="33:9">{<block_content pos:start="17:13" pos:end="31:13">

            <expr_stmt pos:start="17:13" pos:end="17:31"><expr pos:start="17:13" pos:end="17:30"><name pos:start="17:13" pos:end="17:14">dp</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <call pos:start="17:18" pos:end="17:30"><name pos:start="17:18" pos:end="17:25">g_malloc</name><argument_list pos:start="17:26" pos:end="17:30">(<argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><literal type="number" pos:start="17:27" pos:end="17:29">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="19:13" pos:end="31:13"><if pos:start="19:13" pos:end="27:13">if <condition pos:start="19:16" pos:end="23:44">(<expr pos:start="19:17" pos:end="23:43"><operator pos:start="19:17" pos:end="19:17">!</operator><name pos:start="19:18" pos:end="19:19">dp</name> <operator pos:start="19:21" pos:end="19:22">||</operator> <call pos:start="19:24" pos:end="23:39"><name pos:start="19:24" pos:end="19:32">bdrv_read</name><argument_list pos:start="19:33" pos:end="23:39">(<argument pos:start="19:34" pos:end="19:44"><expr pos:start="19:34" pos:end="19:44"><name pos:start="19:34" pos:end="19:44"><name pos:start="19:34" pos:end="19:34">s</name><operator pos:start="19:35" pos:end="19:36">-&gt;</operator><name pos:start="19:37" pos:end="19:44">bdrv_cur</name></name></expr></argument>,

                                 <argument pos:start="21:34" pos:end="21:57"><expr pos:start="21:34" pos:end="21:57"><name pos:start="21:34" pos:end="21:44"><name pos:start="21:34" pos:end="21:34">s</name><operator pos:start="21:35" pos:end="21:36">-&gt;</operator><name pos:start="21:37" pos:end="21:44">secs_cur</name></name> <operator pos:start="21:46" pos:end="21:46">+</operator> <operator pos:start="21:48" pos:end="21:48">(</operator><name pos:start="21:49" pos:end="21:51">sec</name> <operator pos:start="21:53" pos:end="21:54">&gt;&gt;</operator> <literal type="number" pos:start="21:56" pos:end="21:56">5</literal><operator pos:start="21:57" pos:end="21:57">)</operator></expr></argument>,

                                 <argument pos:start="23:34" pos:end="23:35"><expr pos:start="23:34" pos:end="23:35"><name pos:start="23:34" pos:end="23:35">dp</name></expr></argument>, <argument pos:start="23:38" pos:end="23:38"><expr pos:start="23:38" pos:end="23:38"><literal type="number" pos:start="23:38" pos:end="23:38">1</literal></expr></argument>)</argument_list></call> <operator pos:start="23:41" pos:end="23:41">&lt;</operator> <literal type="number" pos:start="23:43" pos:end="23:43">0</literal></expr>)</condition> <block pos:start="23:46" pos:end="27:13">{<block_content pos:start="25:17" pos:end="25:27">

                <expr_stmt pos:start="25:17" pos:end="25:27"><expr pos:start="25:17" pos:end="25:26"><name pos:start="25:17" pos:end="25:22">result</name> <operator pos:start="25:24" pos:end="25:24">=</operator> <literal type="number" pos:start="25:26" pos:end="25:26">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="27:15" pos:end="31:13">else <block pos:start="27:20" pos:end="31:13">{<block_content pos:start="29:17" pos:end="29:45">

                <expr_stmt pos:start="29:17" pos:end="29:45"><expr pos:start="29:17" pos:end="29:44"><name pos:start="29:17" pos:end="29:19">dpp</name> <operator pos:start="29:21" pos:end="29:21">=</operator> <name pos:start="29:23" pos:end="29:24">dp</name> <operator pos:start="29:26" pos:end="29:26">+</operator> <operator pos:start="29:28" pos:end="29:28">(</operator><operator pos:start="29:29" pos:end="29:29">(</operator><name pos:start="29:30" pos:end="29:32">sec</name> <operator pos:start="29:34" pos:end="29:34">&amp;</operator> <literal type="number" pos:start="29:36" pos:end="29:37">31</literal><operator pos:start="29:38" pos:end="29:38">)</operator> <operator pos:start="29:40" pos:end="29:41">&lt;&lt;</operator> <literal type="number" pos:start="29:43" pos:end="29:43">4</literal><operator pos:start="29:44" pos:end="29:44">)</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="33:11" pos:end="45:9">else <block pos:start="33:16" pos:end="45:9">{<block_content pos:start="35:13" pos:end="43:13">

            <if_stmt pos:start="35:13" pos:end="43:13"><if pos:start="35:13" pos:end="39:13">if <condition pos:start="35:16" pos:end="35:41">(<expr pos:start="35:17" pos:end="35:40"><name pos:start="35:17" pos:end="35:19">sec</name> <operator pos:start="35:21" pos:end="35:21">+</operator> <name pos:start="35:23" pos:end="35:26">secn</name> <operator pos:start="35:28" pos:end="35:28">&gt;</operator> <name pos:start="35:30" pos:end="35:40"><name pos:start="35:30" pos:end="35:30">s</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:40">secs_cur</name></name></expr>)</condition> <block pos:start="35:43" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:27">

                <expr_stmt pos:start="37:17" pos:end="37:27"><expr pos:start="37:17" pos:end="37:26"><name pos:start="37:17" pos:end="37:22">result</name> <operator pos:start="37:24" pos:end="37:24">=</operator> <literal type="number" pos:start="37:26" pos:end="37:26">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="39:15" pos:end="43:13">else <block pos:start="39:20" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:67">

                <expr_stmt pos:start="41:17" pos:end="41:67"><expr pos:start="41:17" pos:end="41:66"><name pos:start="41:17" pos:end="41:19">dpp</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:32"><name pos:start="41:23" pos:end="41:23">s</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:32">current</name></name> <operator pos:start="41:34" pos:end="41:34">+</operator> <operator pos:start="41:36" pos:end="41:36">(</operator><name pos:start="41:37" pos:end="41:47"><name pos:start="41:37" pos:end="41:37">s</name><operator pos:start="41:38" pos:end="41:39">-&gt;</operator><name pos:start="41:40" pos:end="41:47">secs_cur</name></name> <operator pos:start="41:49" pos:end="41:50">&lt;&lt;</operator> <literal type="number" pos:start="41:52" pos:end="41:52">9</literal><operator pos:start="41:53" pos:end="41:53">)</operator> <operator pos:start="41:55" pos:end="41:55">+</operator> <operator pos:start="41:57" pos:end="41:57">(</operator><name pos:start="41:58" pos:end="41:60">sec</name> <operator pos:start="41:62" pos:end="41:63">&lt;&lt;</operator> <literal type="number" pos:start="41:65" pos:end="41:65">4</literal><operator pos:start="41:66" pos:end="41:66">)</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="47:9" pos:end="65:9"><if pos:start="47:9" pos:end="65:9">if <condition pos:start="47:12" pos:end="47:20">(<expr pos:start="47:13" pos:end="47:19"><operator pos:start="47:13" pos:end="47:13">!</operator><name pos:start="47:14" pos:end="47:19">result</name></expr>)</condition> <block pos:start="47:22" pos:end="65:9">{<block_content pos:start="49:13" pos:end="63:13">

            <decl_stmt pos:start="49:13" pos:end="49:23"><decl pos:start="49:13" pos:end="49:22"><type pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:20">uint32_t</name></type> <name pos:start="49:22" pos:end="49:22">i</name></decl>;</decl_stmt>

            <for pos:start="51:13" pos:end="55:13">for <control pos:start="51:17" pos:end="51:45">(<init pos:start="51:18" pos:end="51:23"><expr pos:start="51:18" pos:end="51:22"><name pos:start="51:18" pos:end="51:18">i</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <literal type="number" pos:start="51:22" pos:end="51:22">0</literal></expr>;</init> <condition pos:start="51:25" pos:end="51:40"><expr pos:start="51:25" pos:end="51:39"><name pos:start="51:25" pos:end="51:25">i</name> <operator pos:start="51:27" pos:end="51:27">&lt;</operator> <operator pos:start="51:29" pos:end="51:29">(</operator><name pos:start="51:30" pos:end="51:33">secn</name> <operator pos:start="51:35" pos:end="51:36">&lt;&lt;</operator> <literal type="number" pos:start="51:38" pos:end="51:38">4</literal><operator pos:start="51:39" pos:end="51:39">)</operator></expr>;</condition> <incr pos:start="51:42" pos:end="51:44"><expr pos:start="51:42" pos:end="51:44"><name pos:start="51:42" pos:end="51:42">i</name><operator pos:start="51:43" pos:end="51:44">++</operator></expr></incr>)</control> <block pos:start="51:47" pos:end="55:13">{<block_content pos:start="53:17" pos:end="53:32">

                <expr_stmt pos:start="53:17" pos:end="53:32"><expr pos:start="53:17" pos:end="53:31"><name pos:start="53:17" pos:end="53:22"><name pos:start="53:17" pos:end="53:19">dpp</name><index pos:start="53:20" pos:end="53:22">[<expr pos:start="53:21" pos:end="53:21"><name pos:start="53:21" pos:end="53:21">i</name></expr>]</index></name> <operator pos:start="53:24" pos:end="53:25">&amp;=</operator> <name pos:start="53:27" pos:end="53:31"><name pos:start="53:27" pos:end="53:28">sp</name><index pos:start="53:29" pos:end="53:31">[<expr pos:start="53:30" pos:end="53:30"><name pos:start="53:30" pos:end="53:30">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="57:13" pos:end="63:13"><if pos:start="57:13" pos:end="63:13">if <condition pos:start="57:16" pos:end="57:28">(<expr pos:start="57:17" pos:end="57:27"><name pos:start="57:17" pos:end="57:27"><name pos:start="57:17" pos:end="57:17">s</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:27">bdrv_cur</name></name></expr>)</condition> <block pos:start="57:30" pos:end="63:13">{<block_content pos:start="59:17" pos:end="61:47">

                <expr_stmt pos:start="59:17" pos:end="61:47"><expr pos:start="59:17" pos:end="61:46"><name pos:start="59:17" pos:end="59:22">result</name> <operator pos:start="59:24" pos:end="59:24">=</operator> <call pos:start="59:26" pos:end="61:42"><name pos:start="59:26" pos:end="59:35">bdrv_write</name><argument_list pos:start="59:36" pos:end="61:42">(<argument pos:start="59:37" pos:end="59:47"><expr pos:start="59:37" pos:end="59:47"><name pos:start="59:37" pos:end="59:47"><name pos:start="59:37" pos:end="59:37">s</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:47">bdrv_cur</name></name></expr></argument>, <argument pos:start="59:50" pos:end="59:73"><expr pos:start="59:50" pos:end="59:73"><name pos:start="59:50" pos:end="59:60"><name pos:start="59:50" pos:end="59:50">s</name><operator pos:start="59:51" pos:end="59:52">-&gt;</operator><name pos:start="59:53" pos:end="59:60">secs_cur</name></name> <operator pos:start="59:62" pos:end="59:62">+</operator> <operator pos:start="59:64" pos:end="59:64">(</operator><name pos:start="59:65" pos:end="59:67">sec</name> <operator pos:start="59:69" pos:end="59:70">&gt;&gt;</operator> <literal type="number" pos:start="59:72" pos:end="59:72">5</literal><operator pos:start="59:73" pos:end="59:73">)</operator></expr></argument>,

                                    <argument pos:start="61:37" pos:end="61:38"><expr pos:start="61:37" pos:end="61:38"><name pos:start="61:37" pos:end="61:38">dp</name></expr></argument>, <argument pos:start="61:41" pos:end="61:41"><expr pos:start="61:41" pos:end="61:41"><literal type="number" pos:start="61:41" pos:end="61:41">1</literal></expr></argument>)</argument_list></call> <operator pos:start="61:44" pos:end="61:44">&lt;</operator> <literal type="number" pos:start="61:46" pos:end="61:46">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:19"><expr pos:start="67:9" pos:end="67:18"><call pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:14">g_free</name><argument_list pos:start="67:15" pos:end="67:18">(<argument pos:start="67:16" pos:end="67:17"><expr pos:start="67:16" pos:end="67:17"><name pos:start="67:16" pos:end="67:17">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="71:5" pos:end="71:18">return <expr pos:start="71:12" pos:end="71:17"><name pos:start="71:12" pos:end="71:17">result</name></expr>;</return>

</block_content>}</block></function>
</unit>
