<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6923.c" pos:tabs="8"><function pos:start="1:1" pos:end="1423:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:31">ff_h264_decode_slice_header</name><parameter_list pos:start="1:32" pos:end="1:64">(<parameter pos:start="1:33" pos:end="1:46"><decl pos:start="1:33" pos:end="1:46"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:43">H264Context</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">h</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:63"><decl pos:start="1:49" pos:end="1:63"><type pos:start="1:49" pos:end="1:63"><name pos:start="1:49" pos:end="1:59">H264Context</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">h0</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1423:1">{<block_content pos:start="5:5" pos:end="1421:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:34">first_mb_in_slice</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:23">pps_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:27">slice_type</name></decl>, <decl pos:start="11:30" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:30" pos:end="11:32">tmp</name></decl>, <decl pos:start="11:35" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:35" pos:end="11:35">i</name></decl>, <decl pos:start="11:38" pos:end="11:38"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:38" pos:end="11:38">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:26">last_pic_structure</name></decl>, <decl pos:start="13:29" pos:end="13:46"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:29" pos:end="13:46">last_pic_droppable</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">must_reinit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:20">needs_reinit</name> <init pos:start="17:22" pos:end="17:24">= <expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:42"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:22">field_pic_flag</name></decl>, <decl pos:start="19:25" pos:end="19:41"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:25" pos:end="19:41">bottom_field_flag</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:55"><expr pos:start="23:5" pos:end="23:54"><name pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:5">h</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:15">qpel_put</name></name> <operator pos:start="23:17" pos:end="23:17">=</operator> <name pos:start="23:19" pos:end="23:54"><name pos:start="23:19" pos:end="23:19">h</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:29">h264qpel</name><operator pos:start="23:30" pos:end="23:30">.</operator><name pos:start="23:31" pos:end="23:54">put_h264_qpel_pixels_tab</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:55"><expr pos:start="25:5" pos:end="25:54"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:5">h</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:15">qpel_avg</name></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <name pos:start="25:19" pos:end="25:54"><name pos:start="25:19" pos:end="25:19">h</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:29">h264qpel</name><operator pos:start="25:30" pos:end="25:30">.</operator><name pos:start="25:31" pos:end="25:54">avg_h264_qpel_pixels_tab</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:51"><expr pos:start="29:5" pos:end="29:50"><name pos:start="29:5" pos:end="29:21">first_mb_in_slice</name> <operator pos:start="29:23" pos:end="29:23">=</operator> <call pos:start="29:25" pos:end="29:50"><name pos:start="29:25" pos:end="29:42">get_ue_golomb_long</name><argument_list pos:start="29:43" pos:end="29:50">(<argument pos:start="29:44" pos:end="29:49"><expr pos:start="29:44" pos:end="29:49"><operator pos:start="29:44" pos:end="29:44">&amp;</operator><name pos:start="29:45" pos:end="29:49"><name pos:start="29:45" pos:end="29:45">h</name><operator pos:start="29:46" pos:end="29:47">-&gt;</operator><name pos:start="29:48" pos:end="29:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="59:5"><if pos:start="33:5" pos:end="59:5">if <condition pos:start="33:8" pos:end="33:31">(<expr pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:25">first_mb_in_slice</name> <operator pos:start="33:27" pos:end="33:28">==</operator> <literal type="number" pos:start="33:30" pos:end="33:30">0</literal></expr>)</condition> <block pos:start="33:33" pos:end="59:5">{<block_content pos:start="35:9" pos:end="57:9"> <comment type="line" pos:start="33:35" pos:end="33:74">// FIXME better field boundary detection</comment>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:68">(<expr pos:start="35:13" pos:end="35:67"><name pos:start="35:13" pos:end="35:29"><name pos:start="35:13" pos:end="35:14">h0</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:29">current_slice</name></name> <operator pos:start="35:31" pos:end="35:32">&amp;&amp;</operator> <name pos:start="35:34" pos:end="35:47"><name pos:start="35:34" pos:end="35:34">h</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:47">cur_pic_ptr</name></name> <operator pos:start="35:49" pos:end="35:50">&amp;&amp;</operator> <call pos:start="35:52" pos:end="35:67"><name pos:start="35:52" pos:end="35:64">FIELD_PICTURE</name><argument_list pos:start="35:65" pos:end="35:67">(<argument pos:start="35:66" pos:end="35:66"><expr pos:start="35:66" pos:end="35:66"><name pos:start="35:66" pos:end="35:66">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:70" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:36">

            <expr_stmt pos:start="37:13" pos:end="37:36"><expr pos:start="37:13" pos:end="37:35"><call pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:29">ff_h264_field_end</name><argument_list pos:start="37:30" pos:end="37:35">(<argument pos:start="37:31" pos:end="37:31"><expr pos:start="37:31" pos:end="37:31"><name pos:start="37:31" pos:end="37:31">h</name></expr></argument>, <argument pos:start="37:34" pos:end="37:34"><expr pos:start="37:34" pos:end="37:34"><literal type="number" pos:start="37:34" pos:end="37:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:10">h0</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:25">current_slice</name></name> <operator pos:start="43:27" pos:end="43:27">=</operator> <literal type="number" pos:start="43:29" pos:end="43:29">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="57:9"><if pos:start="45:9" pos:end="57:9">if <condition pos:start="45:12" pos:end="45:29">(<expr pos:start="45:13" pos:end="45:28"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:28"><name pos:start="45:14" pos:end="45:15">h0</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:28">first_field</name></name></expr>)</condition> <block pos:start="45:31" pos:end="57:9">{<block_content pos:start="47:13" pos:end="55:34">

            <if_stmt pos:start="47:13" pos:end="53:13"><if pos:start="47:13" pos:end="53:13">if <condition pos:start="47:16" pos:end="47:48">(<expr pos:start="47:17" pos:end="47:47"><name pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:17">h</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:30">cur_pic_ptr</name></name> <operator pos:start="47:32" pos:end="47:33">&amp;&amp;</operator> <operator pos:start="47:35" pos:end="47:35">!</operator><name pos:start="47:36" pos:end="47:47"><name pos:start="47:36" pos:end="47:36">h</name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:47">droppable</name></name></expr>)</condition> <block pos:start="47:50" pos:end="53:13">{<block_content pos:start="49:17" pos:end="51:85">

                <expr_stmt pos:start="49:17" pos:end="51:85"><expr pos:start="49:17" pos:end="51:84"><call pos:start="49:17" pos:end="51:84"><name pos:start="49:17" pos:end="49:41">ff_thread_report_progress</name><argument_list pos:start="49:42" pos:end="51:84">(<argument pos:start="49:43" pos:end="49:61"><expr pos:start="49:43" pos:end="49:61"><operator pos:start="49:43" pos:end="49:43">&amp;</operator><name pos:start="49:44" pos:end="49:61"><name pos:start="49:44" pos:end="49:44">h</name><operator pos:start="49:45" pos:end="49:46">-&gt;</operator><name pos:start="49:47" pos:end="49:57">cur_pic_ptr</name><operator pos:start="49:58" pos:end="49:59">-&gt;</operator><name pos:start="49:60" pos:end="49:61">tf</name></name></expr></argument>, <argument pos:start="49:64" pos:end="49:70"><expr pos:start="49:64" pos:end="49:70"><name pos:start="49:64" pos:end="49:70">INT_MAX</name></expr></argument>,

                                          <argument pos:start="51:43" pos:end="51:83"><expr pos:start="51:43" pos:end="51:83"><name pos:start="51:43" pos:end="51:62"><name pos:start="51:43" pos:end="51:43">h</name><operator pos:start="51:44" pos:end="51:45">-&gt;</operator><name pos:start="51:46" pos:end="51:62">picture_structure</name></name> <operator pos:start="51:64" pos:end="51:65">==</operator> <name pos:start="51:67" pos:end="51:83">PICT_BOTTOM_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:34"><expr pos:start="55:13" pos:end="55:33"><name pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:13">h</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:26">cur_pic_ptr</name></name> <operator pos:start="55:28" pos:end="55:28">=</operator> <name pos:start="55:30" pos:end="55:33">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:42"><expr pos:start="63:5" pos:end="63:41"><name pos:start="63:5" pos:end="63:14">slice_type</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <call pos:start="63:18" pos:end="63:41"><name pos:start="63:18" pos:end="63:33">get_ue_golomb_31</name><argument_list pos:start="63:34" pos:end="63:41">(<argument pos:start="63:35" pos:end="63:40"><expr pos:start="63:35" pos:end="63:40"><operator pos:start="63:35" pos:end="63:35">&amp;</operator><name pos:start="63:36" pos:end="63:40"><name pos:start="63:36" pos:end="63:36">h</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:40">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="75:5"><if pos:start="65:5" pos:end="75:5">if <condition pos:start="65:8" pos:end="65:23">(<expr pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:18">slice_type</name> <operator pos:start="65:20" pos:end="65:20">&gt;</operator> <literal type="number" pos:start="65:22" pos:end="65:22">9</literal></expr>)</condition> <block pos:start="65:25" pos:end="75:5">{<block_content pos:start="67:9" pos:end="73:35">

        <expr_stmt pos:start="67:9" pos:end="71:45"><expr pos:start="67:9" pos:end="71:44"><call pos:start="67:9" pos:end="71:44"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="71:44">(<argument pos:start="67:16" pos:end="67:23"><expr pos:start="67:16" pos:end="67:23"><name pos:start="67:16" pos:end="67:23"><name pos:start="67:16" pos:end="67:16">h</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:23">avctx</name></name></expr></argument>, <argument pos:start="67:26" pos:end="67:37"><expr pos:start="67:26" pos:end="67:37"><name pos:start="67:26" pos:end="67:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="69:16" pos:end="69:51"><expr pos:start="69:16" pos:end="69:51"><literal type="string" pos:start="69:16" pos:end="69:51">"slice type %d too large at %d %d\n"</literal></expr></argument>,

               <argument pos:start="71:16" pos:end="71:25"><expr pos:start="71:16" pos:end="71:25"><name pos:start="71:16" pos:end="71:25">slice_type</name></expr></argument>, <argument pos:start="71:28" pos:end="71:34"><expr pos:start="71:28" pos:end="71:34"><name pos:start="71:28" pos:end="71:34"><name pos:start="71:28" pos:end="71:28">h</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:34">mb_x</name></name></expr></argument>, <argument pos:start="71:37" pos:end="71:43"><expr pos:start="71:37" pos:end="71:43"><name pos:start="71:37" pos:end="71:43"><name pos:start="71:37" pos:end="71:37">h</name><operator pos:start="71:38" pos:end="71:39">-&gt;</operator><name pos:start="71:40" pos:end="71:43">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:35">return <expr pos:start="73:16" pos:end="73:34"><name pos:start="73:16" pos:end="73:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="77:5" pos:end="85:32"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:23">(<expr pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:18">slice_type</name> <operator pos:start="77:20" pos:end="77:20">&gt;</operator> <literal type="number" pos:start="77:22" pos:end="77:22">4</literal></expr>)</condition> <block pos:start="77:25" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:32">

        <expr_stmt pos:start="79:9" pos:end="79:24"><expr pos:start="79:9" pos:end="79:23"><name pos:start="79:9" pos:end="79:18">slice_type</name> <operator pos:start="79:20" pos:end="79:21">-=</operator> <literal type="number" pos:start="79:23" pos:end="79:23">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:32"><expr pos:start="81:9" pos:end="81:31"><name pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:9">h</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:27">slice_type_fixed</name></name> <operator pos:start="81:29" pos:end="81:29">=</operator> <literal type="number" pos:start="81:31" pos:end="81:31">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="83:7" pos:end="85:32">else<block type="pseudo" pos:start="85:9" pos:end="85:32"><block_content pos:start="85:9" pos:end="85:32">

        <expr_stmt pos:start="85:9" pos:end="85:32"><expr pos:start="85:9" pos:end="85:31"><name pos:start="85:9" pos:end="85:27"><name pos:start="85:9" pos:end="85:9">h</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:27">slice_type_fixed</name></name> <operator pos:start="85:29" pos:end="85:29">=</operator> <literal type="number" pos:start="85:31" pos:end="85:31">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:49"><expr pos:start="89:5" pos:end="89:48"><name pos:start="89:5" pos:end="89:14">slice_type</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <name pos:start="89:18" pos:end="89:48"><name pos:start="89:18" pos:end="89:36">golomb_to_pict_type</name><index pos:start="89:37" pos:end="89:48">[<expr pos:start="89:38" pos:end="89:47"><name pos:start="89:38" pos:end="89:47">slice_type</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:35"><expr pos:start="91:5" pos:end="91:34"><name pos:start="91:5" pos:end="91:17"><name pos:start="91:5" pos:end="91:5">h</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:17">slice_type</name></name>     <operator pos:start="91:23" pos:end="91:23">=</operator> <name pos:start="91:25" pos:end="91:34">slice_type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:39"><expr pos:start="93:5" pos:end="93:38"><name pos:start="93:5" pos:end="93:21"><name pos:start="93:5" pos:end="93:5">h</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:21">slice_type_nos</name></name> <operator pos:start="93:23" pos:end="93:23">=</operator> <name pos:start="93:25" pos:end="93:34">slice_type</name> <operator pos:start="93:36" pos:end="93:36">&amp;</operator> <literal type="number" pos:start="93:38" pos:end="93:38">3</literal></expr>;</expr_stmt>



    <if_stmt pos:start="97:5" pos:end="105:5"><if pos:start="97:5" pos:end="105:5">if <condition pos:start="97:8" pos:end="99:47">(<expr pos:start="97:9" pos:end="99:46"><name pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:9">h</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:24">nal_unit_type</name></name>  <operator pos:start="97:27" pos:end="97:28">==</operator> <name pos:start="97:30" pos:end="97:42">NAL_IDR_SLICE</name> <operator pos:start="97:44" pos:end="97:45">&amp;&amp;</operator>

        <name pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:9">h</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:25">slice_type_nos</name></name> <operator pos:start="99:27" pos:end="99:28">!=</operator> <name pos:start="99:30" pos:end="99:46">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="99:49" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:35">

        <expr_stmt pos:start="101:9" pos:end="101:82"><expr pos:start="101:9" pos:end="101:81"><call pos:start="101:9" pos:end="101:81"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="101:81">(<argument pos:start="101:16" pos:end="101:23"><expr pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:16">h</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:23">avctx</name></name></expr></argument>, <argument pos:start="101:26" pos:end="101:37"><expr pos:start="101:26" pos:end="101:37"><name pos:start="101:26" pos:end="101:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:40" pos:end="101:80"><expr pos:start="101:40" pos:end="101:80"><literal type="string" pos:start="101:40" pos:end="101:80">"A non-intra slice in an IDR NAL unit.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:35">return <expr pos:start="103:16" pos:end="103:34"><name pos:start="103:16" pos:end="103:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="109:5" pos:end="123:6"><if pos:start="109:5" pos:end="123:6">if <condition pos:start="109:8" pos:end="119:47">(

        <expr pos:start="111:9" pos:end="119:46"><operator pos:start="111:9" pos:end="111:9">(</operator><name pos:start="111:10" pos:end="111:29"><name pos:start="111:10" pos:end="111:10">h</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:17">avctx</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:29">skip_frame</name></name> <operator pos:start="111:31" pos:end="111:32">&gt;=</operator> <name pos:start="111:34" pos:end="111:49">AVDISCARD_NONREF</name> <operator pos:start="111:51" pos:end="111:52">&amp;&amp;</operator> <operator pos:start="111:54" pos:end="111:54">!</operator><name pos:start="111:55" pos:end="111:68"><name pos:start="111:55" pos:end="111:55">h</name><operator pos:start="111:56" pos:end="111:57">-&gt;</operator><name pos:start="111:58" pos:end="111:68">nal_ref_idc</name></name><operator pos:start="111:69" pos:end="111:69">)</operator> <operator pos:start="111:71" pos:end="111:72">||</operator>

        <operator pos:start="113:9" pos:end="113:9">(</operator><name pos:start="113:10" pos:end="113:29"><name pos:start="113:10" pos:end="113:10">h</name><operator pos:start="113:11" pos:end="113:12">-&gt;</operator><name pos:start="113:13" pos:end="113:17">avctx</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:29">skip_frame</name></name> <operator pos:start="113:31" pos:end="113:32">&gt;=</operator> <name pos:start="113:34" pos:end="113:48">AVDISCARD_BIDIR</name>  <operator pos:start="113:51" pos:end="113:52">&amp;&amp;</operator> <name pos:start="113:54" pos:end="113:70"><name pos:start="113:54" pos:end="113:54">h</name><operator pos:start="113:55" pos:end="113:56">-&gt;</operator><name pos:start="113:57" pos:end="113:70">slice_type_nos</name></name> <operator pos:start="113:72" pos:end="113:73">==</operator> <name pos:start="113:75" pos:end="113:91">AV_PICTURE_TYPE_B</name><operator pos:start="113:92" pos:end="113:92">)</operator> <operator pos:start="113:94" pos:end="113:95">||</operator>

        <operator pos:start="115:9" pos:end="115:9">(</operator><name pos:start="115:10" pos:end="115:29"><name pos:start="115:10" pos:end="115:10">h</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:17">avctx</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:29">skip_frame</name></name> <operator pos:start="115:31" pos:end="115:32">&gt;=</operator> <name pos:start="115:34" pos:end="115:51">AVDISCARD_NONINTRA</name> <operator pos:start="115:53" pos:end="115:54">&amp;&amp;</operator> <name pos:start="115:56" pos:end="115:72"><name pos:start="115:56" pos:end="115:56">h</name><operator pos:start="115:57" pos:end="115:58">-&gt;</operator><name pos:start="115:59" pos:end="115:72">slice_type_nos</name></name> <operator pos:start="115:74" pos:end="115:75">!=</operator> <name pos:start="115:77" pos:end="115:93">AV_PICTURE_TYPE_I</name><operator pos:start="115:94" pos:end="115:94">)</operator> <operator pos:start="115:96" pos:end="115:97">||</operator>

        <operator pos:start="117:9" pos:end="117:9">(</operator><name pos:start="117:10" pos:end="117:29"><name pos:start="117:10" pos:end="117:10">h</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:17">avctx</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:29">skip_frame</name></name> <operator pos:start="117:31" pos:end="117:32">&gt;=</operator> <name pos:start="117:34" pos:end="117:49">AVDISCARD_NONKEY</name> <operator pos:start="117:51" pos:end="117:52">&amp;&amp;</operator> <name pos:start="117:54" pos:end="117:69"><name pos:start="117:54" pos:end="117:54">h</name><operator pos:start="117:55" pos:end="117:56">-&gt;</operator><name pos:start="117:57" pos:end="117:69">nal_unit_type</name></name> <operator pos:start="117:71" pos:end="117:72">!=</operator> <name pos:start="117:74" pos:end="117:86">NAL_IDR_SLICE</name><operator pos:start="117:87" pos:end="117:87">)</operator> <operator pos:start="117:89" pos:end="117:90">||</operator>

         <name pos:start="119:10" pos:end="119:29"><name pos:start="119:10" pos:end="119:10">h</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:17">avctx</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:29">skip_frame</name></name> <operator pos:start="119:31" pos:end="119:32">&gt;=</operator> <name pos:start="119:34" pos:end="119:46">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="119:49" pos:end="123:6">{<block_content pos:start="121:10" pos:end="121:29">

         <return pos:start="121:10" pos:end="121:29">return <expr pos:start="121:17" pos:end="121:28"><name pos:start="121:17" pos:end="121:28">SLICE_SKIPED</name></expr>;</return>

     </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="127:5" pos:end="127:59">// to make a few old functions happy, it's wrong though</comment>

    <expr_stmt pos:start="129:5" pos:end="129:33"><expr pos:start="129:5" pos:end="129:32"><name pos:start="129:5" pos:end="129:16"><name pos:start="129:5" pos:end="129:5">h</name><operator pos:start="129:6" pos:end="129:7">-&gt;</operator><name pos:start="129:8" pos:end="129:16">pict_type</name></name> <operator pos:start="129:18" pos:end="129:18">=</operator> <name pos:start="129:20" pos:end="129:32"><name pos:start="129:20" pos:end="129:20">h</name><operator pos:start="129:21" pos:end="129:22">-&gt;</operator><name pos:start="129:23" pos:end="129:32">slice_type</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:35"><expr pos:start="133:5" pos:end="133:34"><name pos:start="133:5" pos:end="133:10">pps_id</name> <operator pos:start="133:12" pos:end="133:12">=</operator> <call pos:start="133:14" pos:end="133:34"><name pos:start="133:14" pos:end="133:26">get_ue_golomb</name><argument_list pos:start="133:27" pos:end="133:34">(<argument pos:start="133:28" pos:end="133:33"><expr pos:start="133:28" pos:end="133:33"><operator pos:start="133:28" pos:end="133:28">&amp;</operator><name pos:start="133:29" pos:end="133:33"><name pos:start="133:29" pos:end="133:29">h</name><operator pos:start="133:30" pos:end="133:31">-&gt;</operator><name pos:start="133:32" pos:end="133:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="135:5" pos:end="141:5"><if pos:start="135:5" pos:end="141:5">if <condition pos:start="135:8" pos:end="135:32">(<expr pos:start="135:9" pos:end="135:31"><name pos:start="135:9" pos:end="135:14">pps_id</name> <operator pos:start="135:16" pos:end="135:17">&gt;=</operator> <name pos:start="135:19" pos:end="135:31">MAX_PPS_COUNT</name></expr>)</condition> <block pos:start="135:34" pos:end="141:5">{<block_content pos:start="137:9" pos:end="139:35">

        <expr_stmt pos:start="137:9" pos:end="137:75"><expr pos:start="137:9" pos:end="137:74"><call pos:start="137:9" pos:end="137:74"><name pos:start="137:9" pos:end="137:14">av_log</name><argument_list pos:start="137:15" pos:end="137:74">(<argument pos:start="137:16" pos:end="137:23"><expr pos:start="137:16" pos:end="137:23"><name pos:start="137:16" pos:end="137:23"><name pos:start="137:16" pos:end="137:16">h</name><operator pos:start="137:17" pos:end="137:18">-&gt;</operator><name pos:start="137:19" pos:end="137:23">avctx</name></name></expr></argument>, <argument pos:start="137:26" pos:end="137:37"><expr pos:start="137:26" pos:end="137:37"><name pos:start="137:26" pos:end="137:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:40" pos:end="137:65"><expr pos:start="137:40" pos:end="137:65"><literal type="string" pos:start="137:40" pos:end="137:65">"pps_id %u out of range\n"</literal></expr></argument>, <argument pos:start="137:68" pos:end="137:73"><expr pos:start="137:68" pos:end="137:73"><name pos:start="137:68" pos:end="137:73">pps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="139:9" pos:end="139:35">return <expr pos:start="139:16" pos:end="139:34"><name pos:start="139:16" pos:end="139:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="143:5" pos:end="153:5"><if pos:start="143:5" pos:end="153:5">if <condition pos:start="143:8" pos:end="143:33">(<expr pos:start="143:9" pos:end="143:32"><operator pos:start="143:9" pos:end="143:9">!</operator><name pos:start="143:10" pos:end="143:32"><name pos:start="143:10" pos:end="143:11">h0</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:24">pps_buffers</name><index pos:start="143:25" pos:end="143:32">[<expr pos:start="143:26" pos:end="143:31"><name pos:start="143:26" pos:end="143:31">pps_id</name></expr>]</index></name></expr>)</condition> <block pos:start="143:35" pos:end="153:5">{<block_content pos:start="145:9" pos:end="151:35">

        <expr_stmt pos:start="145:9" pos:end="149:23"><expr pos:start="145:9" pos:end="149:22"><call pos:start="145:9" pos:end="149:22"><name pos:start="145:9" pos:end="145:14">av_log</name><argument_list pos:start="145:15" pos:end="149:22">(<argument pos:start="145:16" pos:end="145:23"><expr pos:start="145:16" pos:end="145:23"><name pos:start="145:16" pos:end="145:23"><name pos:start="145:16" pos:end="145:16">h</name><operator pos:start="145:17" pos:end="145:18">-&gt;</operator><name pos:start="145:19" pos:end="145:23">avctx</name></name></expr></argument>, <argument pos:start="145:26" pos:end="145:37"><expr pos:start="145:26" pos:end="145:37"><name pos:start="145:26" pos:end="145:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="147:16" pos:end="147:49"><expr pos:start="147:16" pos:end="147:49"><literal type="string" pos:start="147:16" pos:end="147:49">"non-existing PPS %u referenced\n"</literal></expr></argument>,

               <argument pos:start="149:16" pos:end="149:21"><expr pos:start="149:16" pos:end="149:21"><name pos:start="149:16" pos:end="149:21">pps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="151:9" pos:end="151:35">return <expr pos:start="151:16" pos:end="151:34"><name pos:start="151:16" pos:end="151:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="155:5" pos:end="165:5"><if pos:start="155:5" pos:end="165:5">if <condition pos:start="155:8" pos:end="155:54">(<expr pos:start="155:9" pos:end="155:53"><name pos:start="155:9" pos:end="155:21"><name pos:start="155:9" pos:end="155:10">h0</name><operator pos:start="155:11" pos:end="155:12">-&gt;</operator><name pos:start="155:13" pos:end="155:21">au_pps_id</name></name> <operator pos:start="155:23" pos:end="155:24">&gt;=</operator> <literal type="number" pos:start="155:26" pos:end="155:26">0</literal> <operator pos:start="155:28" pos:end="155:29">&amp;&amp;</operator> <name pos:start="155:31" pos:end="155:36">pps_id</name> <operator pos:start="155:38" pos:end="155:39">!=</operator> <name pos:start="155:41" pos:end="155:53"><name pos:start="155:41" pos:end="155:42">h0</name><operator pos:start="155:43" pos:end="155:44">-&gt;</operator><name pos:start="155:45" pos:end="155:53">au_pps_id</name></name></expr>)</condition> <block pos:start="155:56" pos:end="165:5">{<block_content pos:start="157:9" pos:end="163:35">

        <expr_stmt pos:start="157:9" pos:end="161:38"><expr pos:start="157:9" pos:end="161:37"><call pos:start="157:9" pos:end="161:37"><name pos:start="157:9" pos:end="157:14">av_log</name><argument_list pos:start="157:15" pos:end="161:37">(<argument pos:start="157:16" pos:end="157:23"><expr pos:start="157:16" pos:end="157:23"><name pos:start="157:16" pos:end="157:23"><name pos:start="157:16" pos:end="157:16">h</name><operator pos:start="157:17" pos:end="157:18">-&gt;</operator><name pos:start="157:19" pos:end="157:23">avctx</name></name></expr></argument>, <argument pos:start="157:26" pos:end="157:37"><expr pos:start="157:26" pos:end="157:37"><name pos:start="157:26" pos:end="157:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="159:16" pos:end="159:53"><expr pos:start="159:16" pos:end="159:53"><literal type="string" pos:start="159:16" pos:end="159:53">"PPS change from %d to %d forbidden\n"</literal></expr></argument>,

               <argument pos:start="161:16" pos:end="161:28"><expr pos:start="161:16" pos:end="161:28"><name pos:start="161:16" pos:end="161:28"><name pos:start="161:16" pos:end="161:17">h0</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:28">au_pps_id</name></name></expr></argument>, <argument pos:start="161:31" pos:end="161:36"><expr pos:start="161:31" pos:end="161:36"><name pos:start="161:31" pos:end="161:36">pps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="163:9" pos:end="163:35">return <expr pos:start="163:16" pos:end="163:34"><name pos:start="163:16" pos:end="163:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:38"><expr pos:start="167:5" pos:end="167:37"><name pos:start="167:5" pos:end="167:10"><name pos:start="167:5" pos:end="167:5">h</name><operator pos:start="167:6" pos:end="167:7">-&gt;</operator><name pos:start="167:8" pos:end="167:10">pps</name></name> <operator pos:start="167:12" pos:end="167:12">=</operator> <operator pos:start="167:14" pos:end="167:14">*</operator><name pos:start="167:15" pos:end="167:37"><name pos:start="167:15" pos:end="167:16">h0</name><operator pos:start="167:17" pos:end="167:18">-&gt;</operator><name pos:start="167:19" pos:end="167:29">pps_buffers</name><index pos:start="167:30" pos:end="167:37">[<expr pos:start="167:31" pos:end="167:36"><name pos:start="167:31" pos:end="167:36">pps_id</name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="171:5" pos:end="181:5"><if pos:start="171:5" pos:end="181:5">if <condition pos:start="171:8" pos:end="171:40">(<expr pos:start="171:9" pos:end="171:39"><operator pos:start="171:9" pos:end="171:9">!</operator><name pos:start="171:10" pos:end="171:39"><name pos:start="171:10" pos:end="171:11">h0</name><operator pos:start="171:12" pos:end="171:13">-&gt;</operator><name pos:start="171:14" pos:end="171:24">sps_buffers</name><index pos:start="171:25" pos:end="171:39">[<expr pos:start="171:26" pos:end="171:38"><name pos:start="171:26" pos:end="171:38"><name pos:start="171:26" pos:end="171:26">h</name><operator pos:start="171:27" pos:end="171:28">-&gt;</operator><name pos:start="171:29" pos:end="171:31">pps</name><operator pos:start="171:32" pos:end="171:32">.</operator><name pos:start="171:33" pos:end="171:38">sps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="171:42" pos:end="181:5">{<block_content pos:start="173:9" pos:end="179:35">

        <expr_stmt pos:start="173:9" pos:end="177:30"><expr pos:start="173:9" pos:end="177:29"><call pos:start="173:9" pos:end="177:29"><name pos:start="173:9" pos:end="173:14">av_log</name><argument_list pos:start="173:15" pos:end="177:29">(<argument pos:start="173:16" pos:end="173:23"><expr pos:start="173:16" pos:end="173:23"><name pos:start="173:16" pos:end="173:23"><name pos:start="173:16" pos:end="173:16">h</name><operator pos:start="173:17" pos:end="173:18">-&gt;</operator><name pos:start="173:19" pos:end="173:23">avctx</name></name></expr></argument>, <argument pos:start="173:26" pos:end="173:37"><expr pos:start="173:26" pos:end="173:37"><name pos:start="173:26" pos:end="173:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="175:16" pos:end="175:49"><expr pos:start="175:16" pos:end="175:49"><literal type="string" pos:start="175:16" pos:end="175:49">"non-existing SPS %u referenced\n"</literal></expr></argument>,

               <argument pos:start="177:16" pos:end="177:28"><expr pos:start="177:16" pos:end="177:28"><name pos:start="177:16" pos:end="177:28"><name pos:start="177:16" pos:end="177:16">h</name><operator pos:start="177:17" pos:end="177:18">-&gt;</operator><name pos:start="177:19" pos:end="177:21">pps</name><operator pos:start="177:22" pos:end="177:22">.</operator><name pos:start="177:23" pos:end="177:28">sps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="179:9" pos:end="179:35">return <expr pos:start="179:16" pos:end="179:34"><name pos:start="179:16" pos:end="179:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="185:5" pos:end="227:5"><if pos:start="185:5" pos:end="227:5">if <condition pos:start="185:8" pos:end="189:44">(<expr pos:start="185:9" pos:end="189:43"><name pos:start="185:9" pos:end="185:21"><name pos:start="185:9" pos:end="185:9">h</name><operator pos:start="185:10" pos:end="185:11">-&gt;</operator><name pos:start="185:12" pos:end="185:14">pps</name><operator pos:start="185:15" pos:end="185:15">.</operator><name pos:start="185:16" pos:end="185:21">sps_id</name></name> <operator pos:start="185:23" pos:end="185:24">!=</operator> <name pos:start="185:26" pos:end="185:38"><name pos:start="185:26" pos:end="185:26">h</name><operator pos:start="185:27" pos:end="185:28">-&gt;</operator><name pos:start="185:29" pos:end="185:31">sps</name><operator pos:start="185:32" pos:end="185:32">.</operator><name pos:start="185:33" pos:end="185:38">sps_id</name></name> <operator pos:start="185:40" pos:end="185:41">||</operator>

        <name pos:start="187:9" pos:end="187:21"><name pos:start="187:9" pos:end="187:9">h</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:14">pps</name><operator pos:start="187:15" pos:end="187:15">.</operator><name pos:start="187:16" pos:end="187:21">sps_id</name></name> <operator pos:start="187:23" pos:end="187:24">!=</operator> <name pos:start="187:26" pos:end="187:42"><name pos:start="187:26" pos:end="187:26">h</name><operator pos:start="187:27" pos:end="187:28">-&gt;</operator><name pos:start="187:29" pos:end="187:42">current_sps_id</name></name> <operator pos:start="187:44" pos:end="187:45">||</operator>

        <name pos:start="189:9" pos:end="189:38"><name pos:start="189:9" pos:end="189:10">h0</name><operator pos:start="189:11" pos:end="189:12">-&gt;</operator><name pos:start="189:13" pos:end="189:23">sps_buffers</name><index pos:start="189:24" pos:end="189:38">[<expr pos:start="189:25" pos:end="189:37"><name pos:start="189:25" pos:end="189:37"><name pos:start="189:25" pos:end="189:25">h</name><operator pos:start="189:26" pos:end="189:27">-&gt;</operator><name pos:start="189:28" pos:end="189:30">pps</name><operator pos:start="189:31" pos:end="189:31">.</operator><name pos:start="189:32" pos:end="189:37">sps_id</name></name></expr>]</index></name><operator pos:start="189:39" pos:end="189:40">-&gt;</operator><name pos:start="189:41" pos:end="189:43">new</name></expr>)</condition> <block pos:start="189:46" pos:end="227:5">{<block_content pos:start="193:9" pos:end="225:23">



        <expr_stmt pos:start="193:9" pos:end="193:49"><expr pos:start="193:9" pos:end="193:48"><name pos:start="193:9" pos:end="193:14"><name pos:start="193:9" pos:end="193:9">h</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:14">sps</name></name> <operator pos:start="193:16" pos:end="193:16">=</operator> <operator pos:start="193:18" pos:end="193:18">*</operator><name pos:start="193:19" pos:end="193:48"><name pos:start="193:19" pos:end="193:20">h0</name><operator pos:start="193:21" pos:end="193:22">-&gt;</operator><name pos:start="193:23" pos:end="193:33">sps_buffers</name><index pos:start="193:34" pos:end="193:48">[<expr pos:start="193:35" pos:end="193:47"><name pos:start="193:35" pos:end="193:47"><name pos:start="193:35" pos:end="193:35">h</name><operator pos:start="193:36" pos:end="193:37">-&gt;</operator><name pos:start="193:38" pos:end="193:40">pps</name><operator pos:start="193:41" pos:end="193:41">.</operator><name pos:start="193:42" pos:end="193:47">sps_id</name></name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="197:9" pos:end="207:29"><if pos:start="197:9" pos:end="207:29">if <condition pos:start="197:12" pos:end="205:9">(<expr pos:start="197:13" pos:end="203:64"><name pos:start="197:13" pos:end="197:23"><name pos:start="197:13" pos:end="197:13">h</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:23">mb_width</name></name>  <operator pos:start="197:26" pos:end="197:27">!=</operator> <name pos:start="197:29" pos:end="197:43"><name pos:start="197:29" pos:end="197:29">h</name><operator pos:start="197:30" pos:end="197:31">-&gt;</operator><name pos:start="197:32" pos:end="197:34">sps</name><operator pos:start="197:35" pos:end="197:35">.</operator><name pos:start="197:36" pos:end="197:43">mb_width</name></name> <operator pos:start="197:45" pos:end="197:46">||</operator>

            <name pos:start="199:13" pos:end="199:24"><name pos:start="199:13" pos:end="199:13">h</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:24">mb_height</name></name> <operator pos:start="199:26" pos:end="199:27">!=</operator> <name pos:start="199:29" pos:end="199:44"><name pos:start="199:29" pos:end="199:29">h</name><operator pos:start="199:30" pos:end="199:31">-&gt;</operator><name pos:start="199:32" pos:end="199:34">sps</name><operator pos:start="199:35" pos:end="199:35">.</operator><name pos:start="199:36" pos:end="199:44">mb_height</name></name> <operator pos:start="199:46" pos:end="199:46">*</operator> <operator pos:start="199:48" pos:end="199:48">(</operator><literal type="number" pos:start="199:49" pos:end="199:51">2</literal> <operator pos:start="199:51" pos:end="199:51">-</operator> <name pos:start="199:53" pos:end="199:78"><name pos:start="199:53" pos:end="199:53">h</name><operator pos:start="199:54" pos:end="199:55">-&gt;</operator><name pos:start="199:56" pos:end="199:58">sps</name><operator pos:start="199:59" pos:end="199:59">.</operator><name pos:start="199:60" pos:end="199:78">frame_mbs_only_flag</name></name><operator pos:start="199:79" pos:end="199:79">)</operator> <operator pos:start="199:81" pos:end="199:82">||</operator>

            <name pos:start="201:13" pos:end="201:41"><name pos:start="201:13" pos:end="201:13">h</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:20">avctx</name><operator pos:start="201:21" pos:end="201:22">-&gt;</operator><name pos:start="201:23" pos:end="201:41">bits_per_raw_sample</name></name> <operator pos:start="201:43" pos:end="201:44">!=</operator> <name pos:start="201:46" pos:end="201:66"><name pos:start="201:46" pos:end="201:46">h</name><operator pos:start="201:47" pos:end="201:48">-&gt;</operator><name pos:start="201:49" pos:end="201:51">sps</name><operator pos:start="201:52" pos:end="201:52">.</operator><name pos:start="201:53" pos:end="201:66">bit_depth_luma</name></name> <operator pos:start="201:68" pos:end="201:69">||</operator>

            <name pos:start="203:13" pos:end="203:36"><name pos:start="203:13" pos:end="203:13">h</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:36">cur_chroma_format_idc</name></name> <operator pos:start="203:38" pos:end="203:39">!=</operator> <name pos:start="203:41" pos:end="203:64"><name pos:start="203:41" pos:end="203:41">h</name><operator pos:start="203:42" pos:end="203:43">-&gt;</operator><name pos:start="203:44" pos:end="203:46">sps</name><operator pos:start="203:47" pos:end="203:47">.</operator><name pos:start="203:48" pos:end="203:64">chroma_format_idc</name></name></expr>

        )</condition><block type="pseudo" pos:start="207:13" pos:end="207:29"><block_content pos:start="207:13" pos:end="207:29">

            <expr_stmt pos:start="207:13" pos:end="207:29"><expr pos:start="207:13" pos:end="207:28"><name pos:start="207:13" pos:end="207:24">needs_reinit</name> <operator pos:start="207:26" pos:end="207:26">=</operator> <literal type="number" pos:start="207:28" pos:end="207:28">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="211:9" pos:end="221:9"><if pos:start="211:9" pos:end="221:9">if <condition pos:start="211:12" pos:end="213:61">(<expr pos:start="211:13" pos:end="213:60"><name pos:start="211:13" pos:end="211:29"><name pos:start="211:13" pos:end="211:13">h</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:29">bit_depth_luma</name></name>    <operator pos:start="211:34" pos:end="211:35">!=</operator> <name pos:start="211:37" pos:end="211:57"><name pos:start="211:37" pos:end="211:37">h</name><operator pos:start="211:38" pos:end="211:39">-&gt;</operator><name pos:start="211:40" pos:end="211:42">sps</name><operator pos:start="211:43" pos:end="211:43">.</operator><name pos:start="211:44" pos:end="211:57">bit_depth_luma</name></name> <operator pos:start="211:59" pos:end="211:60">||</operator>

            <name pos:start="213:13" pos:end="213:32"><name pos:start="213:13" pos:end="213:13">h</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:32">chroma_format_idc</name></name> <operator pos:start="213:34" pos:end="213:35">!=</operator> <name pos:start="213:37" pos:end="213:60"><name pos:start="213:37" pos:end="213:37">h</name><operator pos:start="213:38" pos:end="213:39">-&gt;</operator><name pos:start="213:40" pos:end="213:42">sps</name><operator pos:start="213:43" pos:end="213:43">.</operator><name pos:start="213:44" pos:end="213:60">chroma_format_idc</name></name></expr>)</condition> <block pos:start="213:63" pos:end="221:9">{<block_content pos:start="215:13" pos:end="219:37">

            <expr_stmt pos:start="215:13" pos:end="215:57"><expr pos:start="215:13" pos:end="215:56"><name pos:start="215:13" pos:end="215:29"><name pos:start="215:13" pos:end="215:13">h</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:29">bit_depth_luma</name></name>    <operator pos:start="215:34" pos:end="215:34">=</operator> <name pos:start="215:36" pos:end="215:56"><name pos:start="215:36" pos:end="215:36">h</name><operator pos:start="215:37" pos:end="215:38">-&gt;</operator><name pos:start="215:39" pos:end="215:41">sps</name><operator pos:start="215:42" pos:end="215:42">.</operator><name pos:start="215:43" pos:end="215:56">bit_depth_luma</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:60"><expr pos:start="217:13" pos:end="217:59"><name pos:start="217:13" pos:end="217:32"><name pos:start="217:13" pos:end="217:13">h</name><operator pos:start="217:14" pos:end="217:15">-&gt;</operator><name pos:start="217:16" pos:end="217:32">chroma_format_idc</name></name> <operator pos:start="217:34" pos:end="217:34">=</operator> <name pos:start="217:36" pos:end="217:59"><name pos:start="217:36" pos:end="217:36">h</name><operator pos:start="217:37" pos:end="217:38">-&gt;</operator><name pos:start="217:39" pos:end="217:41">sps</name><operator pos:start="217:42" pos:end="217:42">.</operator><name pos:start="217:43" pos:end="217:59">chroma_format_idc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:37"><expr pos:start="219:13" pos:end="219:36"><name pos:start="219:13" pos:end="219:24">needs_reinit</name>         <operator pos:start="219:34" pos:end="219:34">=</operator> <literal type="number" pos:start="219:36" pos:end="219:36">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="223:9" pos:end="225:23"><if pos:start="223:9" pos:end="225:23">if <condition pos:start="223:12" pos:end="223:58">(<expr pos:start="223:13" pos:end="223:57"><operator pos:start="223:13" pos:end="223:13">(</operator><name pos:start="223:14" pos:end="223:16">ret</name> <operator pos:start="223:18" pos:end="223:18">=</operator> <call pos:start="223:20" pos:end="223:52"><name pos:start="223:20" pos:end="223:49">ff_h264_set_parameter_from_sps</name><argument_list pos:start="223:50" pos:end="223:52">(<argument pos:start="223:51" pos:end="223:51"><expr pos:start="223:51" pos:end="223:51"><name pos:start="223:51" pos:end="223:51">h</name></expr></argument>)</argument_list></call><operator pos:start="223:53" pos:end="223:53">)</operator> <operator pos:start="223:55" pos:end="223:55">&lt;</operator> <literal type="number" pos:start="223:57" pos:end="223:57">0</literal></expr>)</condition><block type="pseudo" pos:start="225:13" pos:end="225:23"><block_content pos:start="225:13" pos:end="225:23">

            <return pos:start="225:13" pos:end="225:23">return <expr pos:start="225:20" pos:end="225:22"><name pos:start="225:20" pos:end="225:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="231:5" pos:end="231:53"><expr pos:start="231:5" pos:end="231:52"><name pos:start="231:5" pos:end="231:21"><name pos:start="231:5" pos:end="231:5">h</name><operator pos:start="231:6" pos:end="231:7">-&gt;</operator><name pos:start="231:8" pos:end="231:12">avctx</name><operator pos:start="231:13" pos:end="231:14">-&gt;</operator><name pos:start="231:15" pos:end="231:21">profile</name></name> <operator pos:start="231:23" pos:end="231:23">=</operator> <call pos:start="231:25" pos:end="231:52"><name pos:start="231:25" pos:end="231:43">ff_h264_get_profile</name><argument_list pos:start="231:44" pos:end="231:52">(<argument pos:start="231:45" pos:end="231:51"><expr pos:start="231:45" pos:end="231:51"><operator pos:start="231:45" pos:end="231:45">&amp;</operator><name pos:start="231:46" pos:end="231:51"><name pos:start="231:46" pos:end="231:46">h</name><operator pos:start="231:47" pos:end="231:48">-&gt;</operator><name pos:start="231:49" pos:end="231:51">sps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:41"><expr pos:start="233:5" pos:end="233:40"><name pos:start="233:5" pos:end="233:19"><name pos:start="233:5" pos:end="233:5">h</name><operator pos:start="233:6" pos:end="233:7">-&gt;</operator><name pos:start="233:8" pos:end="233:12">avctx</name><operator pos:start="233:13" pos:end="233:14">-&gt;</operator><name pos:start="233:15" pos:end="233:19">level</name></name>   <operator pos:start="233:23" pos:end="233:23">=</operator> <name pos:start="233:25" pos:end="233:40"><name pos:start="233:25" pos:end="233:25">h</name><operator pos:start="233:26" pos:end="233:27">-&gt;</operator><name pos:start="233:28" pos:end="233:30">sps</name><operator pos:start="233:31" pos:end="233:31">.</operator><name pos:start="233:32" pos:end="233:40">level_idc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:47"><expr pos:start="235:5" pos:end="235:46"><name pos:start="235:5" pos:end="235:18"><name pos:start="235:5" pos:end="235:5">h</name><operator pos:start="235:6" pos:end="235:7">-&gt;</operator><name pos:start="235:8" pos:end="235:12">avctx</name><operator pos:start="235:13" pos:end="235:14">-&gt;</operator><name pos:start="235:15" pos:end="235:18">refs</name></name>    <operator pos:start="235:23" pos:end="235:23">=</operator> <name pos:start="235:25" pos:end="235:46"><name pos:start="235:25" pos:end="235:25">h</name><operator pos:start="235:26" pos:end="235:27">-&gt;</operator><name pos:start="235:28" pos:end="235:30">sps</name><operator pos:start="235:31" pos:end="235:31">.</operator><name pos:start="235:32" pos:end="235:46">ref_frame_count</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="239:5" pos:end="255:23"><expr pos:start="239:5" pos:end="255:22"><name pos:start="239:5" pos:end="239:15">must_reinit</name> <operator pos:start="239:17" pos:end="239:17">=</operator> <operator pos:start="239:19" pos:end="239:19">(</operator><name pos:start="239:20" pos:end="239:41"><name pos:start="239:20" pos:end="239:20">h</name><operator pos:start="239:21" pos:end="239:22">-&gt;</operator><name pos:start="239:23" pos:end="239:41">context_initialized</name></name> <operator pos:start="239:43" pos:end="239:44">&amp;&amp;</operator>

                    <operator pos:start="241:21" pos:end="241:21">(</operator>   <literal type="number" pos:start="241:25" pos:end="241:26">16</literal><operator pos:start="241:27" pos:end="241:27">*</operator><name pos:start="241:28" pos:end="241:42"><name pos:start="241:28" pos:end="241:28">h</name><operator pos:start="241:29" pos:end="241:30">-&gt;</operator><name pos:start="241:31" pos:end="241:33">sps</name><operator pos:start="241:34" pos:end="241:34">.</operator><name pos:start="241:35" pos:end="241:42">mb_width</name></name> <operator pos:start="241:44" pos:end="241:45">!=</operator> <name pos:start="241:47" pos:end="241:67"><name pos:start="241:47" pos:end="241:47">h</name><operator pos:start="241:48" pos:end="241:49">-&gt;</operator><name pos:start="241:50" pos:end="241:54">avctx</name><operator pos:start="241:55" pos:end="241:56">-&gt;</operator><name pos:start="241:57" pos:end="241:67">coded_width</name></name>

                     <operator pos:start="243:22" pos:end="243:23">||</operator> <literal type="number" pos:start="243:25" pos:end="243:26">16</literal><operator pos:start="243:27" pos:end="243:27">*</operator><name pos:start="243:28" pos:end="243:43"><name pos:start="243:28" pos:end="243:28">h</name><operator pos:start="243:29" pos:end="243:30">-&gt;</operator><name pos:start="243:31" pos:end="243:33">sps</name><operator pos:start="243:34" pos:end="243:34">.</operator><name pos:start="243:35" pos:end="243:43">mb_height</name></name> <operator pos:start="243:45" pos:end="243:45">*</operator> <operator pos:start="243:47" pos:end="243:47">(</operator><literal type="number" pos:start="243:48" pos:end="243:50">2</literal> <operator pos:start="243:50" pos:end="243:50">-</operator> <name pos:start="243:52" pos:end="243:77"><name pos:start="243:52" pos:end="243:52">h</name><operator pos:start="243:53" pos:end="243:54">-&gt;</operator><name pos:start="243:55" pos:end="243:57">sps</name><operator pos:start="243:58" pos:end="243:58">.</operator><name pos:start="243:59" pos:end="243:77">frame_mbs_only_flag</name></name><operator pos:start="243:78" pos:end="243:78">)</operator> <operator pos:start="243:80" pos:end="243:81">!=</operator> <name pos:start="243:83" pos:end="243:104"><name pos:start="243:83" pos:end="243:83">h</name><operator pos:start="243:84" pos:end="243:85">-&gt;</operator><name pos:start="243:86" pos:end="243:90">avctx</name><operator pos:start="243:91" pos:end="243:92">-&gt;</operator><name pos:start="243:93" pos:end="243:104">coded_height</name></name>

                     <operator pos:start="245:22" pos:end="245:23">||</operator> <name pos:start="245:25" pos:end="245:53"><name pos:start="245:25" pos:end="245:25">h</name><operator pos:start="245:26" pos:end="245:27">-&gt;</operator><name pos:start="245:28" pos:end="245:32">avctx</name><operator pos:start="245:33" pos:end="245:34">-&gt;</operator><name pos:start="245:35" pos:end="245:53">bits_per_raw_sample</name></name> <operator pos:start="245:55" pos:end="245:56">!=</operator> <name pos:start="245:58" pos:end="245:78"><name pos:start="245:58" pos:end="245:58">h</name><operator pos:start="245:59" pos:end="245:60">-&gt;</operator><name pos:start="245:61" pos:end="245:63">sps</name><operator pos:start="245:64" pos:end="245:64">.</operator><name pos:start="245:65" pos:end="245:78">bit_depth_luma</name></name>

                     <operator pos:start="247:22" pos:end="247:23">||</operator> <name pos:start="247:25" pos:end="247:48"><name pos:start="247:25" pos:end="247:25">h</name><operator pos:start="247:26" pos:end="247:27">-&gt;</operator><name pos:start="247:28" pos:end="247:48">cur_chroma_format_idc</name></name> <operator pos:start="247:50" pos:end="247:51">!=</operator> <name pos:start="247:53" pos:end="247:76"><name pos:start="247:53" pos:end="247:53">h</name><operator pos:start="247:54" pos:end="247:55">-&gt;</operator><name pos:start="247:56" pos:end="247:58">sps</name><operator pos:start="247:59" pos:end="247:59">.</operator><name pos:start="247:60" pos:end="247:76">chroma_format_idc</name></name>

                     <operator pos:start="249:22" pos:end="249:23">||</operator> <call pos:start="249:25" pos:end="249:75"><name pos:start="249:25" pos:end="249:32">av_cmp_q</name><argument_list pos:start="249:33" pos:end="249:75">(<argument pos:start="249:34" pos:end="249:43"><expr pos:start="249:34" pos:end="249:43"><name pos:start="249:34" pos:end="249:43"><name pos:start="249:34" pos:end="249:34">h</name><operator pos:start="249:35" pos:end="249:36">-&gt;</operator><name pos:start="249:37" pos:end="249:39">sps</name><operator pos:start="249:40" pos:end="249:40">.</operator><name pos:start="249:41" pos:end="249:43">sar</name></name></expr></argument>, <argument pos:start="249:46" pos:end="249:74"><expr pos:start="249:46" pos:end="249:74"><name pos:start="249:46" pos:end="249:74"><name pos:start="249:46" pos:end="249:46">h</name><operator pos:start="249:47" pos:end="249:48">-&gt;</operator><name pos:start="249:49" pos:end="249:53">avctx</name><operator pos:start="249:54" pos:end="249:55">-&gt;</operator><name pos:start="249:56" pos:end="249:74">sample_aspect_ratio</name></name></expr></argument>)</argument_list></call>

                     <operator pos:start="251:22" pos:end="251:23">||</operator> <name pos:start="251:25" pos:end="251:35"><name pos:start="251:25" pos:end="251:25">h</name><operator pos:start="251:26" pos:end="251:27">-&gt;</operator><name pos:start="251:28" pos:end="251:35">mb_width</name></name>  <operator pos:start="251:38" pos:end="251:39">!=</operator> <name pos:start="251:41" pos:end="251:55"><name pos:start="251:41" pos:end="251:41">h</name><operator pos:start="251:42" pos:end="251:43">-&gt;</operator><name pos:start="251:44" pos:end="251:46">sps</name><operator pos:start="251:47" pos:end="251:47">.</operator><name pos:start="251:48" pos:end="251:55">mb_width</name></name>

                     <operator pos:start="253:22" pos:end="253:23">||</operator> <name pos:start="253:25" pos:end="253:36"><name pos:start="253:25" pos:end="253:25">h</name><operator pos:start="253:26" pos:end="253:27">-&gt;</operator><name pos:start="253:28" pos:end="253:36">mb_height</name></name> <operator pos:start="253:38" pos:end="253:39">!=</operator> <name pos:start="253:41" pos:end="253:56"><name pos:start="253:41" pos:end="253:41">h</name><operator pos:start="253:42" pos:end="253:43">-&gt;</operator><name pos:start="253:44" pos:end="253:46">sps</name><operator pos:start="253:47" pos:end="253:47">.</operator><name pos:start="253:48" pos:end="253:56">mb_height</name></name> <operator pos:start="253:58" pos:end="253:58">*</operator> <operator pos:start="253:60" pos:end="253:60">(</operator><literal type="number" pos:start="253:61" pos:end="253:63">2</literal> <operator pos:start="253:63" pos:end="253:63">-</operator> <name pos:start="253:65" pos:end="253:90"><name pos:start="253:65" pos:end="253:65">h</name><operator pos:start="253:66" pos:end="253:67">-&gt;</operator><name pos:start="253:68" pos:end="253:70">sps</name><operator pos:start="253:71" pos:end="253:71">.</operator><name pos:start="253:72" pos:end="253:90">frame_mbs_only_flag</name></name><operator pos:start="253:91" pos:end="253:91">)</operator>

                    <operator pos:start="255:21" pos:end="255:21">)</operator><operator pos:start="255:22" pos:end="255:22">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="257:5" pos:end="259:24"><if pos:start="257:5" pos:end="259:24">if <condition pos:start="257:8" pos:end="257:82">(<expr pos:start="257:9" pos:end="257:81"><call pos:start="257:9" pos:end="257:40"><name pos:start="257:9" pos:end="257:20">non_j_pixfmt</name><argument_list pos:start="257:21" pos:end="257:40">(<argument pos:start="257:22" pos:end="257:39"><expr pos:start="257:22" pos:end="257:39"><name pos:start="257:22" pos:end="257:39"><name pos:start="257:22" pos:end="257:23">h0</name><operator pos:start="257:24" pos:end="257:25">-&gt;</operator><name pos:start="257:26" pos:end="257:30">avctx</name><operator pos:start="257:31" pos:end="257:32">-&gt;</operator><name pos:start="257:33" pos:end="257:39">pix_fmt</name></name></expr></argument>)</argument_list></call> <operator pos:start="257:42" pos:end="257:43">!=</operator> <call pos:start="257:45" pos:end="257:81"><name pos:start="257:45" pos:end="257:56">non_j_pixfmt</name><argument_list pos:start="257:57" pos:end="257:81">(<argument pos:start="257:58" pos:end="257:80"><expr pos:start="257:58" pos:end="257:80"><call pos:start="257:58" pos:end="257:80"><name pos:start="257:58" pos:end="257:73">get_pixel_format</name><argument_list pos:start="257:74" pos:end="257:80">(<argument pos:start="257:75" pos:end="257:76"><expr pos:start="257:75" pos:end="257:76"><name pos:start="257:75" pos:end="257:76">h0</name></expr></argument>, <argument pos:start="257:79" pos:end="257:79"><expr pos:start="257:79" pos:end="257:79"><literal type="number" pos:start="257:79" pos:end="257:79">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="259:9" pos:end="259:24"><block_content pos:start="259:9" pos:end="259:24">

        <expr_stmt pos:start="259:9" pos:end="259:24"><expr pos:start="259:9" pos:end="259:23"><name pos:start="259:9" pos:end="259:19">must_reinit</name> <operator pos:start="259:21" pos:end="259:21">=</operator> <literal type="number" pos:start="259:23" pos:end="259:23">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="263:5" pos:end="263:35"><expr pos:start="263:5" pos:end="263:34"><name pos:start="263:5" pos:end="263:15"><name pos:start="263:5" pos:end="263:5">h</name><operator pos:start="263:6" pos:end="263:7">-&gt;</operator><name pos:start="263:8" pos:end="263:15">mb_width</name></name>  <operator pos:start="263:18" pos:end="263:18">=</operator> <name pos:start="263:20" pos:end="263:34"><name pos:start="263:20" pos:end="263:20">h</name><operator pos:start="263:21" pos:end="263:22">-&gt;</operator><name pos:start="263:23" pos:end="263:25">sps</name><operator pos:start="263:26" pos:end="263:26">.</operator><name pos:start="263:27" pos:end="263:34">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:71"><expr pos:start="265:5" pos:end="265:70"><name pos:start="265:5" pos:end="265:16"><name pos:start="265:5" pos:end="265:5">h</name><operator pos:start="265:6" pos:end="265:7">-&gt;</operator><name pos:start="265:8" pos:end="265:16">mb_height</name></name> <operator pos:start="265:18" pos:end="265:18">=</operator> <name pos:start="265:20" pos:end="265:35"><name pos:start="265:20" pos:end="265:20">h</name><operator pos:start="265:21" pos:end="265:22">-&gt;</operator><name pos:start="265:23" pos:end="265:25">sps</name><operator pos:start="265:26" pos:end="265:26">.</operator><name pos:start="265:27" pos:end="265:35">mb_height</name></name> <operator pos:start="265:37" pos:end="265:37">*</operator> <operator pos:start="265:39" pos:end="265:39">(</operator><literal type="number" pos:start="265:40" pos:end="265:42">2</literal> <operator pos:start="265:42" pos:end="265:42">-</operator> <name pos:start="265:44" pos:end="265:69"><name pos:start="265:44" pos:end="265:44">h</name><operator pos:start="265:45" pos:end="265:46">-&gt;</operator><name pos:start="265:47" pos:end="265:49">sps</name><operator pos:start="265:50" pos:end="265:50">.</operator><name pos:start="265:51" pos:end="265:69">frame_mbs_only_flag</name></name><operator pos:start="265:70" pos:end="265:70">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="267:5" pos:end="267:46"><expr pos:start="267:5" pos:end="267:45"><name pos:start="267:5" pos:end="267:13"><name pos:start="267:5" pos:end="267:5">h</name><operator pos:start="267:6" pos:end="267:7">-&gt;</operator><name pos:start="267:8" pos:end="267:13">mb_num</name></name>    <operator pos:start="267:18" pos:end="267:18">=</operator> <name pos:start="267:20" pos:end="267:30"><name pos:start="267:20" pos:end="267:20">h</name><operator pos:start="267:21" pos:end="267:22">-&gt;</operator><name pos:start="267:23" pos:end="267:30">mb_width</name></name> <operator pos:start="267:32" pos:end="267:32">*</operator> <name pos:start="267:34" pos:end="267:45"><name pos:start="267:34" pos:end="267:34">h</name><operator pos:start="267:35" pos:end="267:36">-&gt;</operator><name pos:start="267:37" pos:end="267:45">mb_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="269:5" pos:end="269:35"><expr pos:start="269:5" pos:end="269:34"><name pos:start="269:5" pos:end="269:16"><name pos:start="269:5" pos:end="269:5">h</name><operator pos:start="269:6" pos:end="269:7">-&gt;</operator><name pos:start="269:8" pos:end="269:16">mb_stride</name></name> <operator pos:start="269:18" pos:end="269:18">=</operator> <name pos:start="269:20" pos:end="269:30"><name pos:start="269:20" pos:end="269:20">h</name><operator pos:start="269:21" pos:end="269:22">-&gt;</operator><name pos:start="269:23" pos:end="269:30">mb_width</name></name> <operator pos:start="269:32" pos:end="269:32">+</operator> <literal type="number" pos:start="269:34" pos:end="269:34">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="273:5" pos:end="273:34"><expr pos:start="273:5" pos:end="273:33"><name pos:start="273:5" pos:end="273:15"><name pos:start="273:5" pos:end="273:5">h</name><operator pos:start="273:6" pos:end="273:7">-&gt;</operator><name pos:start="273:8" pos:end="273:15">b_stride</name></name> <operator pos:start="273:17" pos:end="273:17">=</operator> <name pos:start="273:19" pos:end="273:29"><name pos:start="273:19" pos:end="273:19">h</name><operator pos:start="273:20" pos:end="273:21">-&gt;</operator><name pos:start="273:22" pos:end="273:29">mb_width</name></name> <operator pos:start="273:31" pos:end="273:31">*</operator> <literal type="number" pos:start="273:33" pos:end="273:33">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="277:5" pos:end="277:54"><expr pos:start="277:5" pos:end="277:53"><name pos:start="277:5" pos:end="277:21"><name pos:start="277:5" pos:end="277:5">h</name><operator pos:start="277:6" pos:end="277:7">-&gt;</operator><name pos:start="277:8" pos:end="277:21">chroma_y_shift</name></name> <operator pos:start="277:23" pos:end="277:23">=</operator> <name pos:start="277:25" pos:end="277:48"><name pos:start="277:25" pos:end="277:25">h</name><operator pos:start="277:26" pos:end="277:27">-&gt;</operator><name pos:start="277:28" pos:end="277:30">sps</name><operator pos:start="277:31" pos:end="277:31">.</operator><name pos:start="277:32" pos:end="277:48">chroma_format_idc</name></name> <operator pos:start="277:50" pos:end="277:51">&lt;=</operator> <literal type="number" pos:start="277:53" pos:end="277:53">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="277:56" pos:end="277:74">// 400 uses yuv420p</comment>



    <expr_stmt pos:start="281:5" pos:end="281:33"><expr pos:start="281:5" pos:end="281:32"><name pos:start="281:5" pos:end="281:12"><name pos:start="281:5" pos:end="281:5">h</name><operator pos:start="281:6" pos:end="281:7">-&gt;</operator><name pos:start="281:8" pos:end="281:12">width</name></name>  <operator pos:start="281:15" pos:end="281:15">=</operator> <literal type="number" pos:start="281:17" pos:end="281:18">16</literal> <operator pos:start="281:20" pos:end="281:20">*</operator> <name pos:start="281:22" pos:end="281:32"><name pos:start="281:22" pos:end="281:22">h</name><operator pos:start="281:23" pos:end="281:24">-&gt;</operator><name pos:start="281:25" pos:end="281:32">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="283:5" pos:end="283:34"><expr pos:start="283:5" pos:end="283:33"><name pos:start="283:5" pos:end="283:13"><name pos:start="283:5" pos:end="283:5">h</name><operator pos:start="283:6" pos:end="283:7">-&gt;</operator><name pos:start="283:8" pos:end="283:13">height</name></name> <operator pos:start="283:15" pos:end="283:15">=</operator> <literal type="number" pos:start="283:17" pos:end="283:18">16</literal> <operator pos:start="283:20" pos:end="283:20">*</operator> <name pos:start="283:22" pos:end="283:33"><name pos:start="283:22" pos:end="283:22">h</name><operator pos:start="283:23" pos:end="283:24">-&gt;</operator><name pos:start="283:25" pos:end="283:33">mb_height</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="287:5" pos:end="287:29"><expr pos:start="287:5" pos:end="287:28"><name pos:start="287:5" pos:end="287:7">ret</name> <operator pos:start="287:9" pos:end="287:9">=</operator> <call pos:start="287:11" pos:end="287:28"><name pos:start="287:11" pos:end="287:25">init_dimensions</name><argument_list pos:start="287:26" pos:end="287:28">(<argument pos:start="287:27" pos:end="287:27"><expr pos:start="287:27" pos:end="287:27"><name pos:start="287:27" pos:end="287:27">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="289:5" pos:end="291:19"><if pos:start="289:5" pos:end="291:19">if <condition pos:start="289:8" pos:end="289:16">(<expr pos:start="289:9" pos:end="289:15"><name pos:start="289:9" pos:end="289:11">ret</name> <operator pos:start="289:13" pos:end="289:13">&lt;</operator> <literal type="number" pos:start="289:15" pos:end="289:15">0</literal></expr>)</condition><block type="pseudo" pos:start="291:9" pos:end="291:19"><block_content pos:start="291:9" pos:end="291:19">

        <return pos:start="291:9" pos:end="291:19">return <expr pos:start="291:16" pos:end="291:18"><name pos:start="291:16" pos:end="291:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="295:5" pos:end="315:5"><if pos:start="295:5" pos:end="315:5">if <condition pos:start="295:8" pos:end="295:46">(<expr pos:start="295:9" pos:end="295:45"><name pos:start="295:9" pos:end="295:45"><name pos:start="295:9" pos:end="295:9">h</name><operator pos:start="295:10" pos:end="295:11">-&gt;</operator><name pos:start="295:12" pos:end="295:14">sps</name><operator pos:start="295:15" pos:end="295:15">.</operator><name pos:start="295:16" pos:end="295:45">video_signal_type_present_flag</name></name></expr>)</condition> <block pos:start="295:48" pos:end="315:5">{<block_content pos:start="297:9" pos:end="313:9">

        <expr_stmt pos:start="297:9" pos:end="299:71"><expr pos:start="297:9" pos:end="299:70"><name pos:start="297:9" pos:end="297:29"><name pos:start="297:9" pos:end="297:9">h</name><operator pos:start="297:10" pos:end="297:11">-&gt;</operator><name pos:start="297:12" pos:end="297:16">avctx</name><operator pos:start="297:17" pos:end="297:18">-&gt;</operator><name pos:start="297:19" pos:end="297:29">color_range</name></name> <operator pos:start="297:31" pos:end="297:31">=</operator> <ternary pos:start="297:33" pos:end="299:70"><condition pos:start="297:33" pos:end="297:53"><expr pos:start="297:33" pos:end="297:51"><name pos:start="297:33" pos:end="297:49"><name pos:start="297:33" pos:end="297:33">h</name><operator pos:start="297:34" pos:end="297:35">-&gt;</operator><name pos:start="297:36" pos:end="297:38">sps</name><operator pos:start="297:39" pos:end="297:39">.</operator><name pos:start="297:40" pos:end="297:49">full_range</name></name><operator pos:start="297:50" pos:end="297:50">&gt;</operator><literal type="number" pos:start="297:51" pos:end="297:51">0</literal></expr> ?</condition><then pos:start="297:55" pos:end="297:70"> <expr pos:start="297:55" pos:end="297:70"><name pos:start="297:55" pos:end="297:70">AVCOL_RANGE_JPEG</name></expr>

                                                    </then><else pos:start="299:53" pos:end="299:70">: <expr pos:start="299:55" pos:end="299:70"><name pos:start="299:55" pos:end="299:70">AVCOL_RANGE_MPEG</name></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="301:9" pos:end="313:9"><if pos:start="301:9" pos:end="313:9">if <condition pos:start="301:12" pos:end="301:51">(<expr pos:start="301:13" pos:end="301:50"><name pos:start="301:13" pos:end="301:50"><name pos:start="301:13" pos:end="301:13">h</name><operator pos:start="301:14" pos:end="301:15">-&gt;</operator><name pos:start="301:16" pos:end="301:18">sps</name><operator pos:start="301:19" pos:end="301:19">.</operator><name pos:start="301:20" pos:end="301:50">colour_description_present_flag</name></name></expr>)</condition> <block pos:start="301:53" pos:end="313:9">{<block_content pos:start="303:13" pos:end="311:58">

            <if_stmt pos:start="303:13" pos:end="305:33"><if pos:start="303:13" pos:end="305:33">if <condition pos:start="303:16" pos:end="303:58">(<expr pos:start="303:17" pos:end="303:57"><name pos:start="303:17" pos:end="303:36"><name pos:start="303:17" pos:end="303:17">h</name><operator pos:start="303:18" pos:end="303:19">-&gt;</operator><name pos:start="303:20" pos:end="303:24">avctx</name><operator pos:start="303:25" pos:end="303:26">-&gt;</operator><name pos:start="303:27" pos:end="303:36">colorspace</name></name> <operator pos:start="303:38" pos:end="303:39">!=</operator> <name pos:start="303:41" pos:end="303:57"><name pos:start="303:41" pos:end="303:41">h</name><operator pos:start="303:42" pos:end="303:43">-&gt;</operator><name pos:start="303:44" pos:end="303:46">sps</name><operator pos:start="303:47" pos:end="303:47">.</operator><name pos:start="303:48" pos:end="303:57">colorspace</name></name></expr>)</condition><block type="pseudo" pos:start="305:17" pos:end="305:33"><block_content pos:start="305:17" pos:end="305:33">

                <expr_stmt pos:start="305:17" pos:end="305:33"><expr pos:start="305:17" pos:end="305:32"><name pos:start="305:17" pos:end="305:28">needs_reinit</name> <operator pos:start="305:30" pos:end="305:30">=</operator> <literal type="number" pos:start="305:32" pos:end="305:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="307:13" pos:end="307:63"><expr pos:start="307:13" pos:end="307:62"><name pos:start="307:13" pos:end="307:37"><name pos:start="307:13" pos:end="307:13">h</name><operator pos:start="307:14" pos:end="307:15">-&gt;</operator><name pos:start="307:16" pos:end="307:20">avctx</name><operator pos:start="307:21" pos:end="307:22">-&gt;</operator><name pos:start="307:23" pos:end="307:37">color_primaries</name></name> <operator pos:start="307:39" pos:end="307:39">=</operator> <name pos:start="307:41" pos:end="307:62"><name pos:start="307:41" pos:end="307:41">h</name><operator pos:start="307:42" pos:end="307:43">-&gt;</operator><name pos:start="307:44" pos:end="307:46">sps</name><operator pos:start="307:47" pos:end="307:47">.</operator><name pos:start="307:48" pos:end="307:62">color_primaries</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:57"><expr pos:start="309:13" pos:end="309:56"><name pos:start="309:13" pos:end="309:31"><name pos:start="309:13" pos:end="309:13">h</name><operator pos:start="309:14" pos:end="309:15">-&gt;</operator><name pos:start="309:16" pos:end="309:20">avctx</name><operator pos:start="309:21" pos:end="309:22">-&gt;</operator><name pos:start="309:23" pos:end="309:31">color_trc</name></name>       <operator pos:start="309:39" pos:end="309:39">=</operator> <name pos:start="309:41" pos:end="309:56"><name pos:start="309:41" pos:end="309:41">h</name><operator pos:start="309:42" pos:end="309:43">-&gt;</operator><name pos:start="309:44" pos:end="309:46">sps</name><operator pos:start="309:47" pos:end="309:47">.</operator><name pos:start="309:48" pos:end="309:56">color_trc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="311:13" pos:end="311:58"><expr pos:start="311:13" pos:end="311:57"><name pos:start="311:13" pos:end="311:32"><name pos:start="311:13" pos:end="311:13">h</name><operator pos:start="311:14" pos:end="311:15">-&gt;</operator><name pos:start="311:16" pos:end="311:20">avctx</name><operator pos:start="311:21" pos:end="311:22">-&gt;</operator><name pos:start="311:23" pos:end="311:32">colorspace</name></name>      <operator pos:start="311:39" pos:end="311:39">=</operator> <name pos:start="311:41" pos:end="311:57"><name pos:start="311:41" pos:end="311:41">h</name><operator pos:start="311:42" pos:end="311:43">-&gt;</operator><name pos:start="311:44" pos:end="311:46">sps</name><operator pos:start="311:47" pos:end="311:47">.</operator><name pos:start="311:48" pos:end="311:57">colorspace</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="319:5" pos:end="371:5"><if pos:start="319:5" pos:end="371:5">if <condition pos:start="319:8" pos:end="321:38">(<expr pos:start="319:9" pos:end="321:37"><name pos:start="319:9" pos:end="319:30"><name pos:start="319:9" pos:end="319:9">h</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:30">context_initialized</name></name> <operator pos:start="319:32" pos:end="319:33">&amp;&amp;</operator>

        <operator pos:start="321:9" pos:end="321:9">(</operator><name pos:start="321:10" pos:end="321:20">must_reinit</name> <operator pos:start="321:22" pos:end="321:23">||</operator> <name pos:start="321:25" pos:end="321:36">needs_reinit</name><operator pos:start="321:37" pos:end="321:37">)</operator></expr>)</condition> <block pos:start="321:40" pos:end="371:5">{<block_content pos:start="323:9" pos:end="369:9">

        <if_stmt pos:start="323:9" pos:end="339:9"><if pos:start="323:9" pos:end="339:9">if <condition pos:start="323:12" pos:end="323:20">(<expr pos:start="323:13" pos:end="323:19"><name pos:start="323:13" pos:end="323:13">h</name> <operator pos:start="323:15" pos:end="323:16">!=</operator> <name pos:start="323:18" pos:end="323:19">h0</name></expr>)</condition> <block pos:start="323:22" pos:end="339:9">{<block_content pos:start="325:13" pos:end="337:39">

            <expr_stmt pos:start="325:13" pos:end="335:42"><expr pos:start="325:13" pos:end="335:41"><call pos:start="325:13" pos:end="335:41"><name pos:start="325:13" pos:end="325:18">av_log</name><argument_list pos:start="325:19" pos:end="335:41">(<argument pos:start="325:20" pos:end="325:27"><expr pos:start="325:20" pos:end="325:27"><name pos:start="325:20" pos:end="325:27"><name pos:start="325:20" pos:end="325:20">h</name><operator pos:start="325:21" pos:end="325:22">-&gt;</operator><name pos:start="325:23" pos:end="325:27">avctx</name></name></expr></argument>, <argument pos:start="325:30" pos:end="325:41"><expr pos:start="325:30" pos:end="325:41"><name pos:start="325:30" pos:end="325:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="327:20" pos:end="329:31"><expr pos:start="327:20" pos:end="329:31"><literal type="string" pos:start="327:20" pos:end="327:66">"changing width %d -&gt; %d / height %d -&gt; %d on "</literal>

                   <literal type="string" pos:start="329:20" pos:end="329:31">"slice %d\n"</literal></expr></argument>,

                   <argument pos:start="331:20" pos:end="331:27"><expr pos:start="331:20" pos:end="331:27"><name pos:start="331:20" pos:end="331:27"><name pos:start="331:20" pos:end="331:20">h</name><operator pos:start="331:21" pos:end="331:22">-&gt;</operator><name pos:start="331:23" pos:end="331:27">width</name></name></expr></argument>, <argument pos:start="331:30" pos:end="331:50"><expr pos:start="331:30" pos:end="331:50"><name pos:start="331:30" pos:end="331:50"><name pos:start="331:30" pos:end="331:30">h</name><operator pos:start="331:31" pos:end="331:32">-&gt;</operator><name pos:start="331:33" pos:end="331:37">avctx</name><operator pos:start="331:38" pos:end="331:39">-&gt;</operator><name pos:start="331:40" pos:end="331:50">coded_width</name></name></expr></argument>,

                   <argument pos:start="333:20" pos:end="333:28"><expr pos:start="333:20" pos:end="333:28"><name pos:start="333:20" pos:end="333:28"><name pos:start="333:20" pos:end="333:20">h</name><operator pos:start="333:21" pos:end="333:22">-&gt;</operator><name pos:start="333:23" pos:end="333:28">height</name></name></expr></argument>, <argument pos:start="333:31" pos:end="333:52"><expr pos:start="333:31" pos:end="333:52"><name pos:start="333:31" pos:end="333:52"><name pos:start="333:31" pos:end="333:31">h</name><operator pos:start="333:32" pos:end="333:33">-&gt;</operator><name pos:start="333:34" pos:end="333:38">avctx</name><operator pos:start="333:39" pos:end="333:40">-&gt;</operator><name pos:start="333:41" pos:end="333:52">coded_height</name></name></expr></argument>,

                   <argument pos:start="335:20" pos:end="335:40"><expr pos:start="335:20" pos:end="335:40"><name pos:start="335:20" pos:end="335:36"><name pos:start="335:20" pos:end="335:21">h0</name><operator pos:start="335:22" pos:end="335:23">-&gt;</operator><name pos:start="335:24" pos:end="335:36">current_slice</name></name> <operator pos:start="335:38" pos:end="335:38">+</operator> <literal type="number" pos:start="335:40" pos:end="335:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="337:13" pos:end="337:39">return <expr pos:start="337:20" pos:end="337:38"><name pos:start="337:20" pos:end="337:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="343:9" pos:end="343:32"><expr pos:start="343:9" pos:end="343:31"><call pos:start="343:9" pos:end="343:31"><name pos:start="343:9" pos:end="343:28">ff_h264_flush_change</name><argument_list pos:start="343:29" pos:end="343:31">(<argument pos:start="343:30" pos:end="343:30"><expr pos:start="343:30" pos:end="343:30"><name pos:start="343:30" pos:end="343:30">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="347:9" pos:end="349:23"><if pos:start="347:9" pos:end="349:23">if <condition pos:start="347:12" pos:end="347:47">(<expr pos:start="347:13" pos:end="347:46"><operator pos:start="347:13" pos:end="347:13">(</operator><name pos:start="347:14" pos:end="347:16">ret</name> <operator pos:start="347:18" pos:end="347:18">=</operator> <call pos:start="347:20" pos:end="347:41"><name pos:start="347:20" pos:end="347:35">get_pixel_format</name><argument_list pos:start="347:36" pos:end="347:41">(<argument pos:start="347:37" pos:end="347:37"><expr pos:start="347:37" pos:end="347:37"><name pos:start="347:37" pos:end="347:37">h</name></expr></argument>, <argument pos:start="347:40" pos:end="347:40"><expr pos:start="347:40" pos:end="347:40"><literal type="number" pos:start="347:40" pos:end="347:40">1</literal></expr></argument>)</argument_list></call><operator pos:start="347:42" pos:end="347:42">)</operator> <operator pos:start="347:44" pos:end="347:44">&lt;</operator> <literal type="number" pos:start="347:46" pos:end="347:46">0</literal></expr>)</condition><block type="pseudo" pos:start="349:13" pos:end="349:23"><block_content pos:start="349:13" pos:end="349:23">

            <return pos:start="349:13" pos:end="349:23">return <expr pos:start="349:20" pos:end="349:22"><name pos:start="349:20" pos:end="349:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:32"><expr pos:start="351:9" pos:end="351:31"><name pos:start="351:9" pos:end="351:25"><name pos:start="351:9" pos:end="351:9">h</name><operator pos:start="351:10" pos:end="351:11">-&gt;</operator><name pos:start="351:12" pos:end="351:16">avctx</name><operator pos:start="351:17" pos:end="351:18">-&gt;</operator><name pos:start="351:19" pos:end="351:25">pix_fmt</name></name> <operator pos:start="351:27" pos:end="351:27">=</operator> <name pos:start="351:29" pos:end="351:31">ret</name></expr>;</expr_stmt>



        <expr_stmt pos:start="355:9" pos:end="357:93"><expr pos:start="355:9" pos:end="357:92"><call pos:start="355:9" pos:end="357:92"><name pos:start="355:9" pos:end="355:14">av_log</name><argument_list pos:start="355:15" pos:end="357:92">(<argument pos:start="355:16" pos:end="355:23"><expr pos:start="355:16" pos:end="355:23"><name pos:start="355:16" pos:end="355:23"><name pos:start="355:16" pos:end="355:16">h</name><operator pos:start="355:17" pos:end="355:18">-&gt;</operator><name pos:start="355:19" pos:end="355:23">avctx</name></name></expr></argument>, <argument pos:start="355:26" pos:end="355:36"><expr pos:start="355:26" pos:end="355:36"><name pos:start="355:26" pos:end="355:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="355:39" pos:end="357:30"><expr pos:start="355:39" pos:end="357:30"><literal type="string" pos:start="355:39" pos:end="355:65">"Reinit context to %dx%d, "</literal>

               <literal type="string" pos:start="357:16" pos:end="357:30">"pix_fmt: %s\n"</literal></expr></argument>, <argument pos:start="357:33" pos:end="357:40"><expr pos:start="357:33" pos:end="357:40"><name pos:start="357:33" pos:end="357:40"><name pos:start="357:33" pos:end="357:33">h</name><operator pos:start="357:34" pos:end="357:35">-&gt;</operator><name pos:start="357:36" pos:end="357:40">width</name></name></expr></argument>, <argument pos:start="357:43" pos:end="357:51"><expr pos:start="357:43" pos:end="357:51"><name pos:start="357:43" pos:end="357:51"><name pos:start="357:43" pos:end="357:43">h</name><operator pos:start="357:44" pos:end="357:45">-&gt;</operator><name pos:start="357:46" pos:end="357:51">height</name></name></expr></argument>, <argument pos:start="357:54" pos:end="357:91"><expr pos:start="357:54" pos:end="357:91"><call pos:start="357:54" pos:end="357:91"><name pos:start="357:54" pos:end="357:72">av_get_pix_fmt_name</name><argument_list pos:start="357:73" pos:end="357:91">(<argument pos:start="357:74" pos:end="357:90"><expr pos:start="357:74" pos:end="357:90"><name pos:start="357:74" pos:end="357:90"><name pos:start="357:74" pos:end="357:74">h</name><operator pos:start="357:75" pos:end="357:76">-&gt;</operator><name pos:start="357:77" pos:end="357:81">avctx</name><operator pos:start="357:82" pos:end="357:83">-&gt;</operator><name pos:start="357:84" pos:end="357:90">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="361:9" pos:end="369:9"><if pos:start="361:9" pos:end="369:9">if <condition pos:start="361:12" pos:end="361:53">(<expr pos:start="361:13" pos:end="361:52"><operator pos:start="361:13" pos:end="361:13">(</operator><name pos:start="361:14" pos:end="361:16">ret</name> <operator pos:start="361:18" pos:end="361:18">=</operator> <call pos:start="361:20" pos:end="361:47"><name pos:start="361:20" pos:end="361:41">h264_slice_header_init</name><argument_list pos:start="361:42" pos:end="361:47">(<argument pos:start="361:43" pos:end="361:43"><expr pos:start="361:43" pos:end="361:43"><name pos:start="361:43" pos:end="361:43">h</name></expr></argument>, <argument pos:start="361:46" pos:end="361:46"><expr pos:start="361:46" pos:end="361:46"><literal type="number" pos:start="361:46" pos:end="361:46">1</literal></expr></argument>)</argument_list></call><operator pos:start="361:48" pos:end="361:48">)</operator> <operator pos:start="361:50" pos:end="361:50">&lt;</operator> <literal type="number" pos:start="361:52" pos:end="361:52">0</literal></expr>)</condition> <block pos:start="361:55" pos:end="369:9">{<block_content pos:start="363:13" pos:end="367:23">

            <expr_stmt pos:start="363:13" pos:end="365:56"><expr pos:start="363:13" pos:end="365:55"><call pos:start="363:13" pos:end="365:55"><name pos:start="363:13" pos:end="363:18">av_log</name><argument_list pos:start="363:19" pos:end="365:55">(<argument pos:start="363:20" pos:end="363:27"><expr pos:start="363:20" pos:end="363:27"><name pos:start="363:20" pos:end="363:27"><name pos:start="363:20" pos:end="363:20">h</name><operator pos:start="363:21" pos:end="363:22">-&gt;</operator><name pos:start="363:23" pos:end="363:27">avctx</name></name></expr></argument>, <argument pos:start="363:30" pos:end="363:41"><expr pos:start="363:30" pos:end="363:41"><name pos:start="363:30" pos:end="363:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="365:20" pos:end="365:54"><expr pos:start="365:20" pos:end="365:54"><literal type="string" pos:start="365:20" pos:end="365:54">"h264_slice_header_init() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="367:13" pos:end="367:23">return <expr pos:start="367:20" pos:end="367:22"><name pos:start="367:20" pos:end="367:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="373:5" pos:end="405:5"><if pos:start="373:5" pos:end="405:5">if <condition pos:start="373:8" pos:end="373:32">(<expr pos:start="373:9" pos:end="373:31"><operator pos:start="373:9" pos:end="373:9">!</operator><name pos:start="373:10" pos:end="373:31"><name pos:start="373:10" pos:end="373:10">h</name><operator pos:start="373:11" pos:end="373:12">-&gt;</operator><name pos:start="373:13" pos:end="373:31">context_initialized</name></name></expr>)</condition> <block pos:start="373:34" pos:end="405:5">{<block_content pos:start="375:9" pos:end="403:9">

        <if_stmt pos:start="375:9" pos:end="383:9"><if pos:start="375:9" pos:end="383:9">if <condition pos:start="375:12" pos:end="375:20">(<expr pos:start="375:13" pos:end="375:19"><name pos:start="375:13" pos:end="375:13">h</name> <operator pos:start="375:15" pos:end="375:16">!=</operator> <name pos:start="375:18" pos:end="375:19">h0</name></expr>)</condition> <block pos:start="375:22" pos:end="383:9">{<block_content pos:start="377:13" pos:end="381:40">

            <expr_stmt pos:start="377:13" pos:end="379:81"><expr pos:start="377:13" pos:end="379:80"><call pos:start="377:13" pos:end="379:80"><name pos:start="377:13" pos:end="377:18">av_log</name><argument_list pos:start="377:19" pos:end="379:80">(<argument pos:start="377:20" pos:end="377:27"><expr pos:start="377:20" pos:end="377:27"><name pos:start="377:20" pos:end="377:27"><name pos:start="377:20" pos:end="377:20">h</name><operator pos:start="377:21" pos:end="377:22">-&gt;</operator><name pos:start="377:23" pos:end="377:27">avctx</name></name></expr></argument>, <argument pos:start="377:30" pos:end="377:41"><expr pos:start="377:30" pos:end="377:41"><name pos:start="377:30" pos:end="377:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="379:20" pos:end="379:79"><expr pos:start="379:20" pos:end="379:79"><literal type="string" pos:start="379:20" pos:end="379:79">"Cannot (re-)initialize context during parallel decoding.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="381:13" pos:end="381:40">return <expr pos:start="381:20" pos:end="381:39"><name pos:start="381:20" pos:end="381:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="387:9" pos:end="389:23"><if pos:start="387:9" pos:end="389:23">if <condition pos:start="387:12" pos:end="387:47">(<expr pos:start="387:13" pos:end="387:46"><operator pos:start="387:13" pos:end="387:13">(</operator><name pos:start="387:14" pos:end="387:16">ret</name> <operator pos:start="387:18" pos:end="387:18">=</operator> <call pos:start="387:20" pos:end="387:41"><name pos:start="387:20" pos:end="387:35">get_pixel_format</name><argument_list pos:start="387:36" pos:end="387:41">(<argument pos:start="387:37" pos:end="387:37"><expr pos:start="387:37" pos:end="387:37"><name pos:start="387:37" pos:end="387:37">h</name></expr></argument>, <argument pos:start="387:40" pos:end="387:40"><expr pos:start="387:40" pos:end="387:40"><literal type="number" pos:start="387:40" pos:end="387:40">1</literal></expr></argument>)</argument_list></call><operator pos:start="387:42" pos:end="387:42">)</operator> <operator pos:start="387:44" pos:end="387:44">&lt;</operator> <literal type="number" pos:start="387:46" pos:end="387:46">0</literal></expr>)</condition><block type="pseudo" pos:start="389:13" pos:end="389:23"><block_content pos:start="389:13" pos:end="389:23">

            <return pos:start="389:13" pos:end="389:23">return <expr pos:start="389:20" pos:end="389:22"><name pos:start="389:20" pos:end="389:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="391:9" pos:end="391:32"><expr pos:start="391:9" pos:end="391:31"><name pos:start="391:9" pos:end="391:25"><name pos:start="391:9" pos:end="391:9">h</name><operator pos:start="391:10" pos:end="391:11">-&gt;</operator><name pos:start="391:12" pos:end="391:16">avctx</name><operator pos:start="391:17" pos:end="391:18">-&gt;</operator><name pos:start="391:19" pos:end="391:25">pix_fmt</name></name> <operator pos:start="391:27" pos:end="391:27">=</operator> <name pos:start="391:29" pos:end="391:31">ret</name></expr>;</expr_stmt>



        <if_stmt pos:start="395:9" pos:end="403:9"><if pos:start="395:9" pos:end="403:9">if <condition pos:start="395:12" pos:end="395:53">(<expr pos:start="395:13" pos:end="395:52"><operator pos:start="395:13" pos:end="395:13">(</operator><name pos:start="395:14" pos:end="395:16">ret</name> <operator pos:start="395:18" pos:end="395:18">=</operator> <call pos:start="395:20" pos:end="395:47"><name pos:start="395:20" pos:end="395:41">h264_slice_header_init</name><argument_list pos:start="395:42" pos:end="395:47">(<argument pos:start="395:43" pos:end="395:43"><expr pos:start="395:43" pos:end="395:43"><name pos:start="395:43" pos:end="395:43">h</name></expr></argument>, <argument pos:start="395:46" pos:end="395:46"><expr pos:start="395:46" pos:end="395:46"><literal type="number" pos:start="395:46" pos:end="395:46">0</literal></expr></argument>)</argument_list></call><operator pos:start="395:48" pos:end="395:48">)</operator> <operator pos:start="395:50" pos:end="395:50">&lt;</operator> <literal type="number" pos:start="395:52" pos:end="395:52">0</literal></expr>)</condition> <block pos:start="395:55" pos:end="403:9">{<block_content pos:start="397:13" pos:end="401:23">

            <expr_stmt pos:start="397:13" pos:end="399:56"><expr pos:start="397:13" pos:end="399:55"><call pos:start="397:13" pos:end="399:55"><name pos:start="397:13" pos:end="397:18">av_log</name><argument_list pos:start="397:19" pos:end="399:55">(<argument pos:start="397:20" pos:end="397:27"><expr pos:start="397:20" pos:end="397:27"><name pos:start="397:20" pos:end="397:27"><name pos:start="397:20" pos:end="397:20">h</name><operator pos:start="397:21" pos:end="397:22">-&gt;</operator><name pos:start="397:23" pos:end="397:27">avctx</name></name></expr></argument>, <argument pos:start="397:30" pos:end="397:41"><expr pos:start="397:30" pos:end="397:41"><name pos:start="397:30" pos:end="397:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="399:20" pos:end="399:54"><expr pos:start="399:20" pos:end="399:54"><literal type="string" pos:start="399:20" pos:end="399:54">"h264_slice_header_init() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="401:13" pos:end="401:23">return <expr pos:start="401:20" pos:end="401:22"><name pos:start="401:20" pos:end="401:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="409:5" pos:end="415:5"><if pos:start="409:5" pos:end="415:5">if <condition pos:start="409:8" pos:end="409:50">(<expr pos:start="409:9" pos:end="409:49"><name pos:start="409:9" pos:end="409:9">h</name> <operator pos:start="409:11" pos:end="409:12">==</operator> <name pos:start="409:14" pos:end="409:15">h0</name> <operator pos:start="409:17" pos:end="409:18">&amp;&amp;</operator> <name pos:start="409:20" pos:end="409:39"><name pos:start="409:20" pos:end="409:20">h</name><operator pos:start="409:21" pos:end="409:22">-&gt;</operator><name pos:start="409:23" pos:end="409:39">dequant_coeff_pps</name></name> <operator pos:start="409:41" pos:end="409:42">!=</operator> <name pos:start="409:44" pos:end="409:49">pps_id</name></expr>)</condition> <block pos:start="409:52" pos:end="415:5">{<block_content pos:start="411:9" pos:end="413:36">

        <expr_stmt pos:start="411:9" pos:end="411:38"><expr pos:start="411:9" pos:end="411:37"><name pos:start="411:9" pos:end="411:28"><name pos:start="411:9" pos:end="411:9">h</name><operator pos:start="411:10" pos:end="411:11">-&gt;</operator><name pos:start="411:12" pos:end="411:28">dequant_coeff_pps</name></name> <operator pos:start="411:30" pos:end="411:30">=</operator> <name pos:start="411:32" pos:end="411:37">pps_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="413:9" pos:end="413:36"><expr pos:start="413:9" pos:end="413:35"><call pos:start="413:9" pos:end="413:35"><name pos:start="413:9" pos:end="413:32">h264_init_dequant_tables</name><argument_list pos:start="413:33" pos:end="413:35">(<argument pos:start="413:34" pos:end="413:34"><expr pos:start="413:34" pos:end="413:34"><name pos:start="413:34" pos:end="413:34">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="419:5" pos:end="419:63"><expr pos:start="419:5" pos:end="419:62"><name pos:start="419:5" pos:end="419:16"><name pos:start="419:5" pos:end="419:5">h</name><operator pos:start="419:6" pos:end="419:7">-&gt;</operator><name pos:start="419:8" pos:end="419:16">frame_num</name></name> <operator pos:start="419:18" pos:end="419:18">=</operator> <call pos:start="419:20" pos:end="419:62"><name pos:start="419:20" pos:end="419:27">get_bits</name><argument_list pos:start="419:28" pos:end="419:62">(<argument pos:start="419:29" pos:end="419:34"><expr pos:start="419:29" pos:end="419:34"><operator pos:start="419:29" pos:end="419:29">&amp;</operator><name pos:start="419:30" pos:end="419:34"><name pos:start="419:30" pos:end="419:30">h</name><operator pos:start="419:31" pos:end="419:32">-&gt;</operator><name pos:start="419:33" pos:end="419:34">gb</name></name></expr></argument>, <argument pos:start="419:37" pos:end="419:61"><expr pos:start="419:37" pos:end="419:61"><name pos:start="419:37" pos:end="419:61"><name pos:start="419:37" pos:end="419:37">h</name><operator pos:start="419:38" pos:end="419:39">-&gt;</operator><name pos:start="419:40" pos:end="419:42">sps</name><operator pos:start="419:43" pos:end="419:43">.</operator><name pos:start="419:44" pos:end="419:61">log2_max_frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="423:5" pos:end="423:27"><expr pos:start="423:5" pos:end="423:26"><name pos:start="423:5" pos:end="423:15"><name pos:start="423:5" pos:end="423:5">h</name><operator pos:start="423:6" pos:end="423:7">-&gt;</operator><name pos:start="423:8" pos:end="423:15">mb_mbaff</name></name>        <operator pos:start="423:24" pos:end="423:24">=</operator> <literal type="number" pos:start="423:26" pos:end="423:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="425:5" pos:end="425:27"><expr pos:start="425:5" pos:end="425:26"><name pos:start="425:5" pos:end="425:19"><name pos:start="425:5" pos:end="425:5">h</name><operator pos:start="425:6" pos:end="425:7">-&gt;</operator><name pos:start="425:8" pos:end="425:19">mb_aff_frame</name></name>    <operator pos:start="425:24" pos:end="425:24">=</operator> <literal type="number" pos:start="425:26" pos:end="425:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="427:5" pos:end="427:47"><expr pos:start="427:5" pos:end="427:46"><name pos:start="427:5" pos:end="427:22">last_pic_structure</name> <operator pos:start="427:24" pos:end="427:24">=</operator> <name pos:start="427:26" pos:end="427:46"><name pos:start="427:26" pos:end="427:27">h0</name><operator pos:start="427:28" pos:end="427:29">-&gt;</operator><name pos:start="427:30" pos:end="427:46">picture_structure</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="429:5" pos:end="429:39"><expr pos:start="429:5" pos:end="429:38"><name pos:start="429:5" pos:end="429:22">last_pic_droppable</name> <operator pos:start="429:24" pos:end="429:24">=</operator> <name pos:start="429:26" pos:end="429:38"><name pos:start="429:26" pos:end="429:27">h0</name><operator pos:start="429:28" pos:end="429:29">-&gt;</operator><name pos:start="429:30" pos:end="429:38">droppable</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="431:5" pos:end="431:45"><expr pos:start="431:5" pos:end="431:44"><name pos:start="431:5" pos:end="431:16"><name pos:start="431:5" pos:end="431:5">h</name><operator pos:start="431:6" pos:end="431:7">-&gt;</operator><name pos:start="431:8" pos:end="431:16">droppable</name></name>       <operator pos:start="431:24" pos:end="431:24">=</operator> <name pos:start="431:26" pos:end="431:39"><name pos:start="431:26" pos:end="431:26">h</name><operator pos:start="431:27" pos:end="431:28">-&gt;</operator><name pos:start="431:29" pos:end="431:39">nal_ref_idc</name></name> <operator pos:start="431:41" pos:end="431:42">==</operator> <literal type="number" pos:start="431:44" pos:end="431:44">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="433:5" pos:end="463:5"><if pos:start="433:5" pos:end="437:5">if <condition pos:start="433:8" pos:end="433:35">(<expr pos:start="433:9" pos:end="433:34"><name pos:start="433:9" pos:end="433:34"><name pos:start="433:9" pos:end="433:9">h</name><operator pos:start="433:10" pos:end="433:11">-&gt;</operator><name pos:start="433:12" pos:end="433:14">sps</name><operator pos:start="433:15" pos:end="433:15">.</operator><name pos:start="433:16" pos:end="433:34">frame_mbs_only_flag</name></name></expr>)</condition> <block pos:start="433:37" pos:end="437:5">{<block_content pos:start="435:9" pos:end="435:42">

        <expr_stmt pos:start="435:9" pos:end="435:42"><expr pos:start="435:9" pos:end="435:41"><name pos:start="435:9" pos:end="435:28"><name pos:start="435:9" pos:end="435:9">h</name><operator pos:start="435:10" pos:end="435:11">-&gt;</operator><name pos:start="435:12" pos:end="435:28">picture_structure</name></name> <operator pos:start="435:30" pos:end="435:30">=</operator> <name pos:start="435:32" pos:end="435:41">PICT_FRAME</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="437:7" pos:end="463:5">else <block pos:start="437:12" pos:end="463:5">{<block_content pos:start="439:9" pos:end="461:9">

        <if_stmt pos:start="439:9" pos:end="445:9"><if pos:start="439:9" pos:end="445:9">if <condition pos:start="439:12" pos:end="439:81">(<expr pos:start="439:13" pos:end="439:80"><operator pos:start="439:13" pos:end="439:13">!</operator><name pos:start="439:14" pos:end="439:45"><name pos:start="439:14" pos:end="439:14">h</name><operator pos:start="439:15" pos:end="439:16">-&gt;</operator><name pos:start="439:17" pos:end="439:19">sps</name><operator pos:start="439:20" pos:end="439:20">.</operator><name pos:start="439:21" pos:end="439:45">direct_8x8_inference_flag</name></name> <operator pos:start="439:47" pos:end="439:48">&amp;&amp;</operator> <name pos:start="439:50" pos:end="439:59">slice_type</name> <operator pos:start="439:61" pos:end="439:62">==</operator> <name pos:start="439:64" pos:end="439:80">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="439:83" pos:end="445:9">{<block_content pos:start="441:13" pos:end="443:22">

            <expr_stmt pos:start="441:13" pos:end="441:117"><expr pos:start="441:13" pos:end="441:116"><call pos:start="441:13" pos:end="441:116"><name pos:start="441:13" pos:end="441:18">av_log</name><argument_list pos:start="441:19" pos:end="441:116">(<argument pos:start="441:20" pos:end="441:27"><expr pos:start="441:20" pos:end="441:27"><name pos:start="441:20" pos:end="441:27"><name pos:start="441:20" pos:end="441:20">h</name><operator pos:start="441:21" pos:end="441:22">-&gt;</operator><name pos:start="441:23" pos:end="441:27">avctx</name></name></expr></argument>, <argument pos:start="441:30" pos:end="441:41"><expr pos:start="441:30" pos:end="441:41"><name pos:start="441:30" pos:end="441:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="441:44" pos:end="441:115"><expr pos:start="441:44" pos:end="441:115"><literal type="string" pos:start="441:44" pos:end="441:115">"This stream was generated by a broken encoder, invalid 8x8 inference\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="443:13" pos:end="443:22">return <expr pos:start="443:20" pos:end="443:21"><operator pos:start="443:20" pos:end="443:20">-</operator><literal type="number" pos:start="443:21" pos:end="443:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="447:9" pos:end="447:43"><expr pos:start="447:9" pos:end="447:42"><name pos:start="447:9" pos:end="447:22">field_pic_flag</name> <operator pos:start="447:24" pos:end="447:24">=</operator> <call pos:start="447:26" pos:end="447:42"><name pos:start="447:26" pos:end="447:34">get_bits1</name><argument_list pos:start="447:35" pos:end="447:42">(<argument pos:start="447:36" pos:end="447:41"><expr pos:start="447:36" pos:end="447:41"><operator pos:start="447:36" pos:end="447:36">&amp;</operator><name pos:start="447:37" pos:end="447:41"><name pos:start="447:37" pos:end="447:37">h</name><operator pos:start="447:38" pos:end="447:39">-&gt;</operator><name pos:start="447:40" pos:end="447:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="449:9" pos:end="461:9"><if pos:start="449:9" pos:end="455:9">if <condition pos:start="449:12" pos:end="449:27">(<expr pos:start="449:13" pos:end="449:26"><name pos:start="449:13" pos:end="449:26">field_pic_flag</name></expr>)</condition> <block pos:start="449:29" pos:end="455:9">{<block_content pos:start="451:13" pos:end="453:70">

            <expr_stmt pos:start="451:13" pos:end="451:50"><expr pos:start="451:13" pos:end="451:49"><name pos:start="451:13" pos:end="451:29">bottom_field_flag</name> <operator pos:start="451:31" pos:end="451:31">=</operator> <call pos:start="451:33" pos:end="451:49"><name pos:start="451:33" pos:end="451:41">get_bits1</name><argument_list pos:start="451:42" pos:end="451:49">(<argument pos:start="451:43" pos:end="451:48"><expr pos:start="451:43" pos:end="451:48"><operator pos:start="451:43" pos:end="451:43">&amp;</operator><name pos:start="451:44" pos:end="451:48"><name pos:start="451:44" pos:end="451:44">h</name><operator pos:start="451:45" pos:end="451:46">-&gt;</operator><name pos:start="451:47" pos:end="451:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="453:13" pos:end="453:70"><expr pos:start="453:13" pos:end="453:69"><name pos:start="453:13" pos:end="453:32"><name pos:start="453:13" pos:end="453:13">h</name><operator pos:start="453:14" pos:end="453:15">-&gt;</operator><name pos:start="453:16" pos:end="453:32">picture_structure</name></name> <operator pos:start="453:34" pos:end="453:34">=</operator> <name pos:start="453:36" pos:end="453:49">PICT_TOP_FIELD</name> <operator pos:start="453:51" pos:end="453:51">+</operator> <name pos:start="453:53" pos:end="453:69">bottom_field_flag</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="455:11" pos:end="461:9">else <block pos:start="455:16" pos:end="461:9">{<block_content pos:start="457:13" pos:end="459:49">

            <expr_stmt pos:start="457:13" pos:end="457:46"><expr pos:start="457:13" pos:end="457:45"><name pos:start="457:13" pos:end="457:32"><name pos:start="457:13" pos:end="457:13">h</name><operator pos:start="457:14" pos:end="457:15">-&gt;</operator><name pos:start="457:16" pos:end="457:32">picture_structure</name></name> <operator pos:start="457:34" pos:end="457:34">=</operator> <name pos:start="457:36" pos:end="457:45">PICT_FRAME</name></expr>;</expr_stmt>

            <expr_stmt pos:start="459:13" pos:end="459:49"><expr pos:start="459:13" pos:end="459:48"><name pos:start="459:13" pos:end="459:27"><name pos:start="459:13" pos:end="459:13">h</name><operator pos:start="459:14" pos:end="459:15">-&gt;</operator><name pos:start="459:16" pos:end="459:27">mb_aff_frame</name></name>      <operator pos:start="459:34" pos:end="459:34">=</operator> <name pos:start="459:36" pos:end="459:48"><name pos:start="459:36" pos:end="459:36">h</name><operator pos:start="459:37" pos:end="459:38">-&gt;</operator><name pos:start="459:39" pos:end="459:41">sps</name><operator pos:start="459:42" pos:end="459:42">.</operator><name pos:start="459:43" pos:end="459:48">mb_aff</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="465:5" pos:end="465:67"><expr pos:start="465:5" pos:end="465:66"><name pos:start="465:5" pos:end="465:29"><name pos:start="465:5" pos:end="465:5">h</name><operator pos:start="465:6" pos:end="465:7">-&gt;</operator><name pos:start="465:8" pos:end="465:29">mb_field_decoding_flag</name></name> <operator pos:start="465:31" pos:end="465:31">=</operator> <name pos:start="465:33" pos:end="465:52"><name pos:start="465:33" pos:end="465:33">h</name><operator pos:start="465:34" pos:end="465:35">-&gt;</operator><name pos:start="465:36" pos:end="465:52">picture_structure</name></name> <operator pos:start="465:54" pos:end="465:55">!=</operator> <name pos:start="465:57" pos:end="465:66">PICT_FRAME</name></expr>;</expr_stmt>



    <if_stmt pos:start="469:5" pos:end="849:5"><if pos:start="469:5" pos:end="499:5">if <condition pos:start="469:8" pos:end="469:31">(<expr pos:start="469:9" pos:end="469:30"><name pos:start="469:9" pos:end="469:25"><name pos:start="469:9" pos:end="469:10">h0</name><operator pos:start="469:11" pos:end="469:12">-&gt;</operator><name pos:start="469:13" pos:end="469:25">current_slice</name></name> <operator pos:start="469:27" pos:end="469:28">!=</operator> <literal type="number" pos:start="469:30" pos:end="469:30">0</literal></expr>)</condition> <block pos:start="469:33" pos:end="499:5">{<block_content pos:start="471:9" pos:end="497:9">

        <if_stmt pos:start="471:9" pos:end="497:9"><if pos:start="471:9" pos:end="487:9">if <condition pos:start="471:12" pos:end="473:47">(<expr pos:start="471:13" pos:end="473:46"><name pos:start="471:13" pos:end="471:30">last_pic_structure</name> <operator pos:start="471:32" pos:end="471:33">!=</operator> <name pos:start="471:35" pos:end="471:54"><name pos:start="471:35" pos:end="471:35">h</name><operator pos:start="471:36" pos:end="471:37">-&gt;</operator><name pos:start="471:38" pos:end="471:54">picture_structure</name></name> <operator pos:start="471:56" pos:end="471:57">||</operator>

            <name pos:start="473:13" pos:end="473:30">last_pic_droppable</name> <operator pos:start="473:32" pos:end="473:33">!=</operator> <name pos:start="473:35" pos:end="473:46"><name pos:start="473:35" pos:end="473:35">h</name><operator pos:start="473:36" pos:end="473:37">-&gt;</operator><name pos:start="473:38" pos:end="473:46">droppable</name></name></expr>)</condition> <block pos:start="473:49" pos:end="487:9">{<block_content pos:start="475:13" pos:end="485:39">

            <expr_stmt pos:start="475:13" pos:end="479:61"><expr pos:start="475:13" pos:end="479:60"><call pos:start="475:13" pos:end="479:60"><name pos:start="475:13" pos:end="475:18">av_log</name><argument_list pos:start="475:19" pos:end="479:60">(<argument pos:start="475:20" pos:end="475:27"><expr pos:start="475:20" pos:end="475:27"><name pos:start="475:20" pos:end="475:27"><name pos:start="475:20" pos:end="475:20">h</name><operator pos:start="475:21" pos:end="475:22">-&gt;</operator><name pos:start="475:23" pos:end="475:27">avctx</name></name></expr></argument>, <argument pos:start="475:30" pos:end="475:41"><expr pos:start="475:30" pos:end="475:41"><name pos:start="475:30" pos:end="475:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="477:20" pos:end="477:83"><expr pos:start="477:20" pos:end="477:83"><literal type="string" pos:start="477:20" pos:end="477:83">"Changing field mode (%d -&gt; %d) between slices is not allowed\n"</literal></expr></argument>,

                   <argument pos:start="479:20" pos:end="479:37"><expr pos:start="479:20" pos:end="479:37"><name pos:start="479:20" pos:end="479:37">last_pic_structure</name></expr></argument>, <argument pos:start="479:40" pos:end="479:59"><expr pos:start="479:40" pos:end="479:59"><name pos:start="479:40" pos:end="479:59"><name pos:start="479:40" pos:end="479:40">h</name><operator pos:start="479:41" pos:end="479:42">-&gt;</operator><name pos:start="479:43" pos:end="479:59">picture_structure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="481:13" pos:end="481:54"><expr pos:start="481:13" pos:end="481:53"><name pos:start="481:13" pos:end="481:32"><name pos:start="481:13" pos:end="481:13">h</name><operator pos:start="481:14" pos:end="481:15">-&gt;</operator><name pos:start="481:16" pos:end="481:32">picture_structure</name></name> <operator pos:start="481:34" pos:end="481:34">=</operator> <name pos:start="481:36" pos:end="481:53">last_pic_structure</name></expr>;</expr_stmt>

            <expr_stmt pos:start="483:13" pos:end="483:54"><expr pos:start="483:13" pos:end="483:53"><name pos:start="483:13" pos:end="483:24"><name pos:start="483:13" pos:end="483:13">h</name><operator pos:start="483:14" pos:end="483:15">-&gt;</operator><name pos:start="483:16" pos:end="483:24">droppable</name></name>         <operator pos:start="483:34" pos:end="483:34">=</operator> <name pos:start="483:36" pos:end="483:53">last_pic_droppable</name></expr>;</expr_stmt>

            <return pos:start="485:13" pos:end="485:39">return <expr pos:start="485:20" pos:end="485:38"><name pos:start="485:20" pos:end="485:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="487:11" pos:end="497:9">else if <condition pos:start="487:19" pos:end="487:36">(<expr pos:start="487:20" pos:end="487:35"><operator pos:start="487:20" pos:end="487:20">!</operator><name pos:start="487:21" pos:end="487:35"><name pos:start="487:21" pos:end="487:22">h0</name><operator pos:start="487:23" pos:end="487:24">-&gt;</operator><name pos:start="487:25" pos:end="487:35">cur_pic_ptr</name></name></expr>)</condition> <block pos:start="487:38" pos:end="497:9">{<block_content pos:start="489:13" pos:end="495:39">

            <expr_stmt pos:start="489:13" pos:end="493:42"><expr pos:start="489:13" pos:end="493:41"><call pos:start="489:13" pos:end="493:41"><name pos:start="489:13" pos:end="489:18">av_log</name><argument_list pos:start="489:19" pos:end="493:41">(<argument pos:start="489:20" pos:end="489:27"><expr pos:start="489:20" pos:end="489:27"><name pos:start="489:20" pos:end="489:27"><name pos:start="489:20" pos:end="489:20">h</name><operator pos:start="489:21" pos:end="489:22">-&gt;</operator><name pos:start="489:23" pos:end="489:27">avctx</name></name></expr></argument>, <argument pos:start="489:30" pos:end="489:41"><expr pos:start="489:30" pos:end="489:41"><name pos:start="489:30" pos:end="489:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="491:20" pos:end="491:52"><expr pos:start="491:20" pos:end="491:52"><literal type="string" pos:start="491:20" pos:end="491:52">"unset cur_pic_ptr on slice %d\n"</literal></expr></argument>,

                   <argument pos:start="493:20" pos:end="493:40"><expr pos:start="493:20" pos:end="493:40"><name pos:start="493:20" pos:end="493:36"><name pos:start="493:20" pos:end="493:21">h0</name><operator pos:start="493:22" pos:end="493:23">-&gt;</operator><name pos:start="493:24" pos:end="493:36">current_slice</name></name> <operator pos:start="493:38" pos:end="493:38">+</operator> <literal type="number" pos:start="493:40" pos:end="493:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="495:13" pos:end="495:39">return <expr pos:start="495:20" pos:end="495:38"><name pos:start="495:20" pos:end="495:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="499:7" pos:end="849:5">else <block pos:start="499:12" pos:end="849:5">{<block_content pos:start="505:9" pos:end="847:33">

        <comment type="block" pos:start="501:9" pos:end="503:44">/* Shorten frame num gaps so we don't have to allocate reference

         * frames just to throw them away */</comment>

        <if_stmt pos:start="505:9" pos:end="533:9"><if pos:start="505:9" pos:end="533:9">if <condition pos:start="505:12" pos:end="505:46">(<expr pos:start="505:13" pos:end="505:45"><name pos:start="505:13" pos:end="505:24"><name pos:start="505:13" pos:end="505:13">h</name><operator pos:start="505:14" pos:end="505:15">-&gt;</operator><name pos:start="505:16" pos:end="505:24">frame_num</name></name> <operator pos:start="505:26" pos:end="505:27">!=</operator> <name pos:start="505:29" pos:end="505:45"><name pos:start="505:29" pos:end="505:29">h</name><operator pos:start="505:30" pos:end="505:31">-&gt;</operator><name pos:start="505:32" pos:end="505:45">prev_frame_num</name></name></expr>)</condition> <block pos:start="505:48" pos:end="533:9">{<block_content pos:start="507:13" pos:end="531:13">

            <decl_stmt pos:start="507:13" pos:end="507:58"><decl pos:start="507:13" pos:end="507:57"><type pos:start="507:13" pos:end="507:15"><name pos:start="507:13" pos:end="507:15">int</name></type> <name pos:start="507:17" pos:end="507:37">unwrap_prev_frame_num</name> <init pos:start="507:39" pos:end="507:57">= <expr pos:start="507:41" pos:end="507:57"><name pos:start="507:41" pos:end="507:57"><name pos:start="507:41" pos:end="507:41">h</name><operator pos:start="507:42" pos:end="507:43">-&gt;</operator><name pos:start="507:44" pos:end="507:57">prev_frame_num</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="509:13" pos:end="509:71"><decl pos:start="509:13" pos:end="509:70"><type pos:start="509:13" pos:end="509:15"><name pos:start="509:13" pos:end="509:15">int</name></type> <name pos:start="509:17" pos:end="509:29">max_frame_num</name>         <init pos:start="509:39" pos:end="509:70">= <expr pos:start="509:41" pos:end="509:70"><literal type="number" pos:start="509:41" pos:end="509:41">1</literal> <operator pos:start="509:43" pos:end="509:44">&lt;&lt;</operator> <name pos:start="509:46" pos:end="509:70"><name pos:start="509:46" pos:end="509:46">h</name><operator pos:start="509:47" pos:end="509:48">-&gt;</operator><name pos:start="509:49" pos:end="509:51">sps</name><operator pos:start="509:52" pos:end="509:52">.</operator><name pos:start="509:53" pos:end="509:70">log2_max_frame_num</name></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="513:13" pos:end="515:55"><if pos:start="513:13" pos:end="515:55">if <condition pos:start="513:16" pos:end="513:53">(<expr pos:start="513:17" pos:end="513:52"><name pos:start="513:17" pos:end="513:37">unwrap_prev_frame_num</name> <operator pos:start="513:39" pos:end="513:39">&gt;</operator> <name pos:start="513:41" pos:end="513:52"><name pos:start="513:41" pos:end="513:41">h</name><operator pos:start="513:42" pos:end="513:43">-&gt;</operator><name pos:start="513:44" pos:end="513:52">frame_num</name></name></expr>)</condition><block type="pseudo" pos:start="515:17" pos:end="515:55"><block_content pos:start="515:17" pos:end="515:55">

                <expr_stmt pos:start="515:17" pos:end="515:55"><expr pos:start="515:17" pos:end="515:54"><name pos:start="515:17" pos:end="515:37">unwrap_prev_frame_num</name> <operator pos:start="515:39" pos:end="515:40">-=</operator> <name pos:start="515:42" pos:end="515:54">max_frame_num</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="519:13" pos:end="531:13"><if pos:start="519:13" pos:end="531:13">if <condition pos:start="519:16" pos:end="519:80">(<expr pos:start="519:17" pos:end="519:79"><operator pos:start="519:17" pos:end="519:17">(</operator><name pos:start="519:18" pos:end="519:29"><name pos:start="519:18" pos:end="519:18">h</name><operator pos:start="519:19" pos:end="519:20">-&gt;</operator><name pos:start="519:21" pos:end="519:29">frame_num</name></name> <operator pos:start="519:31" pos:end="519:31">-</operator> <name pos:start="519:33" pos:end="519:53">unwrap_prev_frame_num</name><operator pos:start="519:54" pos:end="519:54">)</operator> <operator pos:start="519:56" pos:end="519:56">&gt;</operator> <name pos:start="519:58" pos:end="519:79"><name pos:start="519:58" pos:end="519:58">h</name><operator pos:start="519:59" pos:end="519:60">-&gt;</operator><name pos:start="519:61" pos:end="519:63">sps</name><operator pos:start="519:64" pos:end="519:64">.</operator><name pos:start="519:65" pos:end="519:79">ref_frame_count</name></name></expr>)</condition> <block pos:start="519:82" pos:end="531:13">{<block_content pos:start="521:17" pos:end="529:58">

                <expr_stmt pos:start="521:17" pos:end="521:84"><expr pos:start="521:17" pos:end="521:83"><name pos:start="521:17" pos:end="521:37">unwrap_prev_frame_num</name> <operator pos:start="521:39" pos:end="521:39">=</operator> <operator pos:start="521:41" pos:end="521:41">(</operator><name pos:start="521:42" pos:end="521:53"><name pos:start="521:42" pos:end="521:42">h</name><operator pos:start="521:43" pos:end="521:44">-&gt;</operator><name pos:start="521:45" pos:end="521:53">frame_num</name></name> <operator pos:start="521:55" pos:end="521:55">-</operator> <name pos:start="521:57" pos:end="521:78"><name pos:start="521:57" pos:end="521:57">h</name><operator pos:start="521:58" pos:end="521:59">-&gt;</operator><name pos:start="521:60" pos:end="521:62">sps</name><operator pos:start="521:63" pos:end="521:63">.</operator><name pos:start="521:64" pos:end="521:78">ref_frame_count</name></name><operator pos:start="521:79" pos:end="521:79">)</operator> <operator pos:start="521:81" pos:end="521:81">-</operator> <literal type="number" pos:start="521:83" pos:end="521:83">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="523:17" pos:end="525:59"><if pos:start="523:17" pos:end="525:59">if <condition pos:start="523:20" pos:end="523:46">(<expr pos:start="523:21" pos:end="523:45"><name pos:start="523:21" pos:end="523:41">unwrap_prev_frame_num</name> <operator pos:start="523:43" pos:end="523:43">&lt;</operator> <literal type="number" pos:start="523:45" pos:end="523:45">0</literal></expr>)</condition><block type="pseudo" pos:start="525:21" pos:end="525:59"><block_content pos:start="525:21" pos:end="525:59">

                    <expr_stmt pos:start="525:21" pos:end="525:59"><expr pos:start="525:21" pos:end="525:58"><name pos:start="525:21" pos:end="525:41">unwrap_prev_frame_num</name> <operator pos:start="525:43" pos:end="525:44">+=</operator> <name pos:start="525:46" pos:end="525:58">max_frame_num</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="529:17" pos:end="529:58"><expr pos:start="529:17" pos:end="529:57"><name pos:start="529:17" pos:end="529:33"><name pos:start="529:17" pos:end="529:17">h</name><operator pos:start="529:18" pos:end="529:19">-&gt;</operator><name pos:start="529:20" pos:end="529:33">prev_frame_num</name></name> <operator pos:start="529:35" pos:end="529:35">=</operator> <name pos:start="529:37" pos:end="529:57">unwrap_prev_frame_num</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="537:9" pos:end="545:51">/* See if we have a decoded first field looking for a pair...

         * Here, we're using that to see if we should mark previously

         * decode frames as "finished".

         * We have to do that before the "dummy" in-between frame allocation,

         * since that can modify h-&gt;cur_pic_ptr. */</comment>

        <if_stmt pos:start="547:9" pos:end="647:9"><if pos:start="547:9" pos:end="647:9">if <condition pos:start="547:12" pos:end="547:28">(<expr pos:start="547:13" pos:end="547:27"><name pos:start="547:13" pos:end="547:27"><name pos:start="547:13" pos:end="547:14">h0</name><operator pos:start="547:15" pos:end="547:16">-&gt;</operator><name pos:start="547:17" pos:end="547:27">first_field</name></name></expr>)</condition> <block pos:start="547:30" pos:end="647:9">{<block_content pos:start="549:13" pos:end="645:13">

            <expr_stmt pos:start="549:13" pos:end="549:36"><expr pos:start="549:13" pos:end="549:35"><call pos:start="549:13" pos:end="549:35"><name pos:start="549:13" pos:end="549:18">assert</name><argument_list pos:start="549:19" pos:end="549:35">(<argument pos:start="549:20" pos:end="549:34"><expr pos:start="549:20" pos:end="549:34"><name pos:start="549:20" pos:end="549:34"><name pos:start="549:20" pos:end="549:21">h0</name><operator pos:start="549:22" pos:end="549:23">-&gt;</operator><name pos:start="549:24" pos:end="549:34">cur_pic_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="551:13" pos:end="551:46"><expr pos:start="551:13" pos:end="551:45"><call pos:start="551:13" pos:end="551:45"><name pos:start="551:13" pos:end="551:18">assert</name><argument_list pos:start="551:19" pos:end="551:45">(<argument pos:start="551:20" pos:end="551:44"><expr pos:start="551:20" pos:end="551:44"><name pos:start="551:20" pos:end="551:44"><name pos:start="551:20" pos:end="551:21">h0</name><operator pos:start="551:22" pos:end="551:23">-&gt;</operator><name pos:start="551:24" pos:end="551:34">cur_pic_ptr</name><operator pos:start="551:35" pos:end="551:36">-&gt;</operator><name pos:start="551:37" pos:end="551:37">f</name><operator pos:start="551:38" pos:end="551:38">.</operator><name pos:start="551:39" pos:end="551:41">buf</name><index pos:start="551:42" pos:end="551:44">[<expr pos:start="551:43" pos:end="551:43"><literal type="number" pos:start="551:43" pos:end="551:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="553:13" pos:end="553:66"><expr pos:start="553:13" pos:end="553:65"><call pos:start="553:13" pos:end="553:65"><name pos:start="553:13" pos:end="553:18">assert</name><argument_list pos:start="553:19" pos:end="553:65">(<argument pos:start="553:20" pos:end="553:64"><expr pos:start="553:20" pos:end="553:64"><name pos:start="553:20" pos:end="553:45"><name pos:start="553:20" pos:end="553:21">h0</name><operator pos:start="553:22" pos:end="553:23">-&gt;</operator><name pos:start="553:24" pos:end="553:34">cur_pic_ptr</name><operator pos:start="553:35" pos:end="553:36">-&gt;</operator><name pos:start="553:37" pos:end="553:45">reference</name></name> <operator pos:start="553:47" pos:end="553:48">!=</operator> <name pos:start="553:50" pos:end="553:64">DELAYED_PIC_REF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="557:13" pos:end="557:51">/* Mark old field/frame as completed */</comment>

            <if_stmt pos:start="559:13" pos:end="565:13"><if pos:start="559:13" pos:end="565:13">if <condition pos:start="559:16" pos:end="559:55">(<expr pos:start="559:17" pos:end="559:54"><name pos:start="559:17" pos:end="559:41"><name pos:start="559:17" pos:end="559:18">h0</name><operator pos:start="559:19" pos:end="559:20">-&gt;</operator><name pos:start="559:21" pos:end="559:31">cur_pic_ptr</name><operator pos:start="559:32" pos:end="559:33">-&gt;</operator><name pos:start="559:34" pos:end="559:35">tf</name><operator pos:start="559:36" pos:end="559:36">.</operator><name pos:start="559:37" pos:end="559:41">owner</name></name> <operator pos:start="559:43" pos:end="559:44">==</operator> <name pos:start="559:46" pos:end="559:54"><name pos:start="559:46" pos:end="559:47">h0</name><operator pos:start="559:48" pos:end="559:49">-&gt;</operator><name pos:start="559:50" pos:end="559:54">avctx</name></name></expr>)</condition> <block pos:start="559:57" pos:end="565:13">{<block_content pos:start="561:17" pos:end="563:83">

                <expr_stmt pos:start="561:17" pos:end="563:83"><expr pos:start="561:17" pos:end="563:82"><call pos:start="561:17" pos:end="563:82"><name pos:start="561:17" pos:end="561:41">ff_thread_report_progress</name><argument_list pos:start="561:42" pos:end="563:82">(<argument pos:start="561:43" pos:end="561:62"><expr pos:start="561:43" pos:end="561:62"><operator pos:start="561:43" pos:end="561:43">&amp;</operator><name pos:start="561:44" pos:end="561:62"><name pos:start="561:44" pos:end="561:45">h0</name><operator pos:start="561:46" pos:end="561:47">-&gt;</operator><name pos:start="561:48" pos:end="561:58">cur_pic_ptr</name><operator pos:start="561:59" pos:end="561:60">-&gt;</operator><name pos:start="561:61" pos:end="561:62">tf</name></name></expr></argument>, <argument pos:start="561:65" pos:end="561:71"><expr pos:start="561:65" pos:end="561:71"><name pos:start="561:65" pos:end="561:71">INT_MAX</name></expr></argument>,

                                          <argument pos:start="563:43" pos:end="563:81"><expr pos:start="563:43" pos:end="563:81"><name pos:start="563:43" pos:end="563:60">last_pic_structure</name> <operator pos:start="563:62" pos:end="563:63">==</operator> <name pos:start="563:65" pos:end="563:81">PICT_BOTTOM_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="569:13" pos:end="569:66">/* figure out if we have a complementary field pair */</comment>

            <if_stmt pos:start="571:13" pos:end="645:13"><if pos:start="571:13" pos:end="585:13">if <condition pos:start="571:16" pos:end="571:80">(<expr pos:start="571:17" pos:end="571:79"><operator pos:start="571:17" pos:end="571:17">!</operator><call pos:start="571:18" pos:end="571:33"><name pos:start="571:18" pos:end="571:30">FIELD_PICTURE</name><argument_list pos:start="571:31" pos:end="571:33">(<argument pos:start="571:32" pos:end="571:32"><expr pos:start="571:32" pos:end="571:32"><name pos:start="571:32" pos:end="571:32">h</name></expr></argument>)</argument_list></call> <operator pos:start="571:35" pos:end="571:36">||</operator> <name pos:start="571:38" pos:end="571:57"><name pos:start="571:38" pos:end="571:38">h</name><operator pos:start="571:39" pos:end="571:40">-&gt;</operator><name pos:start="571:41" pos:end="571:57">picture_structure</name></name> <operator pos:start="571:59" pos:end="571:60">==</operator> <name pos:start="571:62" pos:end="571:79">last_pic_structure</name></expr>)</condition> <block pos:start="571:82" pos:end="585:13">{<block_content pos:start="577:17" pos:end="583:17">

                <comment type="block" pos:start="573:17" pos:end="575:61">/* Previous field is unmatched. Don't display it, but let it

                 * remain for reference if marked as such. */</comment>

                <if_stmt pos:start="577:17" pos:end="583:17"><if pos:start="577:17" pos:end="583:17">if <condition pos:start="577:20" pos:end="577:53">(<expr pos:start="577:21" pos:end="577:52"><name pos:start="577:21" pos:end="577:38">last_pic_structure</name> <operator pos:start="577:40" pos:end="577:41">!=</operator> <name pos:start="577:43" pos:end="577:52">PICT_FRAME</name></expr>)</condition> <block pos:start="577:55" pos:end="583:17">{<block_content pos:start="579:21" pos:end="581:84">

                    <expr_stmt pos:start="579:21" pos:end="581:84"><expr pos:start="579:21" pos:end="581:83"><call pos:start="579:21" pos:end="581:83"><name pos:start="579:21" pos:end="579:45">ff_thread_report_progress</name><argument_list pos:start="579:46" pos:end="581:83">(<argument pos:start="579:47" pos:end="579:66"><expr pos:start="579:47" pos:end="579:66"><operator pos:start="579:47" pos:end="579:47">&amp;</operator><name pos:start="579:48" pos:end="579:66"><name pos:start="579:48" pos:end="579:49">h0</name><operator pos:start="579:50" pos:end="579:51">-&gt;</operator><name pos:start="579:52" pos:end="579:62">cur_pic_ptr</name><operator pos:start="579:63" pos:end="579:64">-&gt;</operator><name pos:start="579:65" pos:end="579:66">tf</name></name></expr></argument>, <argument pos:start="579:69" pos:end="579:75"><expr pos:start="579:69" pos:end="579:75"><name pos:start="579:69" pos:end="579:75">INT_MAX</name></expr></argument>,

                                              <argument pos:start="581:47" pos:end="581:82"><expr pos:start="581:47" pos:end="581:82"><name pos:start="581:47" pos:end="581:64">last_pic_structure</name> <operator pos:start="581:66" pos:end="581:67">==</operator> <name pos:start="581:69" pos:end="581:82">PICT_TOP_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="585:15" pos:end="645:13">else <block pos:start="585:20" pos:end="645:13">{<block_content pos:start="587:17" pos:end="643:17">

                <if_stmt pos:start="587:17" pos:end="643:17"><if pos:start="587:17" pos:end="605:17">if <condition pos:start="587:20" pos:end="587:63">(<expr pos:start="587:21" pos:end="587:62"><name pos:start="587:21" pos:end="587:46"><name pos:start="587:21" pos:end="587:22">h0</name><operator pos:start="587:23" pos:end="587:24">-&gt;</operator><name pos:start="587:25" pos:end="587:35">cur_pic_ptr</name><operator pos:start="587:36" pos:end="587:37">-&gt;</operator><name pos:start="587:38" pos:end="587:46">frame_num</name></name> <operator pos:start="587:48" pos:end="587:49">!=</operator> <name pos:start="587:51" pos:end="587:62"><name pos:start="587:51" pos:end="587:51">h</name><operator pos:start="587:52" pos:end="587:53">-&gt;</operator><name pos:start="587:54" pos:end="587:62">frame_num</name></name></expr>)</condition> <block pos:start="587:65" pos:end="605:17">{<block_content pos:start="597:21" pos:end="603:21">

                    <comment type="block" pos:start="589:21" pos:end="595:35">/* This and previous field were reference, but had

                     * different frame_nums. Consider this field first in

                     * pair. Throw away previous field except for reference

                     * purposes. */</comment>

                    <if_stmt pos:start="597:21" pos:end="603:21"><if pos:start="597:21" pos:end="603:21">if <condition pos:start="597:24" pos:end="597:57">(<expr pos:start="597:25" pos:end="597:56"><name pos:start="597:25" pos:end="597:42">last_pic_structure</name> <operator pos:start="597:44" pos:end="597:45">!=</operator> <name pos:start="597:47" pos:end="597:56">PICT_FRAME</name></expr>)</condition> <block pos:start="597:59" pos:end="603:21">{<block_content pos:start="599:25" pos:end="601:88">

                        <expr_stmt pos:start="599:25" pos:end="601:88"><expr pos:start="599:25" pos:end="601:87"><call pos:start="599:25" pos:end="601:87"><name pos:start="599:25" pos:end="599:49">ff_thread_report_progress</name><argument_list pos:start="599:50" pos:end="601:87">(<argument pos:start="599:51" pos:end="599:70"><expr pos:start="599:51" pos:end="599:70"><operator pos:start="599:51" pos:end="599:51">&amp;</operator><name pos:start="599:52" pos:end="599:70"><name pos:start="599:52" pos:end="599:53">h0</name><operator pos:start="599:54" pos:end="599:55">-&gt;</operator><name pos:start="599:56" pos:end="599:66">cur_pic_ptr</name><operator pos:start="599:67" pos:end="599:68">-&gt;</operator><name pos:start="599:69" pos:end="599:70">tf</name></name></expr></argument>, <argument pos:start="599:73" pos:end="599:79"><expr pos:start="599:73" pos:end="599:79"><name pos:start="599:73" pos:end="599:79">INT_MAX</name></expr></argument>,

                                                  <argument pos:start="601:51" pos:end="601:86"><expr pos:start="601:51" pos:end="601:86"><name pos:start="601:51" pos:end="601:68">last_pic_structure</name> <operator pos:start="601:70" pos:end="601:71">==</operator> <name pos:start="601:73" pos:end="601:86">PICT_TOP_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="605:19" pos:end="643:17">else <block pos:start="605:24" pos:end="643:17">{<block_content pos:start="609:21" pos:end="641:21">

                    <comment type="block" pos:start="607:21" pos:end="607:60">/* Second field in complementary pair */</comment>

                    <if_stmt pos:start="609:21" pos:end="641:21"><if pos:start="609:21" pos:end="629:21">if <condition pos:start="609:24" pos:end="615:68">(<expr pos:start="609:25" pos:end="615:67"><operator pos:start="609:25" pos:end="609:25">!</operator><operator pos:start="609:26" pos:end="609:26">(</operator><operator pos:start="609:27" pos:end="609:27">(</operator><name pos:start="609:28" pos:end="609:45">last_pic_structure</name>   <operator pos:start="609:49" pos:end="609:50">==</operator> <name pos:start="609:52" pos:end="609:65">PICT_TOP_FIELD</name> <operator pos:start="609:67" pos:end="609:68">&amp;&amp;</operator>

                           <name pos:start="611:28" pos:end="611:47"><name pos:start="611:28" pos:end="611:28">h</name><operator pos:start="611:29" pos:end="611:30">-&gt;</operator><name pos:start="611:31" pos:end="611:47">picture_structure</name></name> <operator pos:start="611:49" pos:end="611:50">==</operator> <name pos:start="611:52" pos:end="611:68">PICT_BOTTOM_FIELD</name><operator pos:start="611:69" pos:end="611:69">)</operator> <operator pos:start="611:71" pos:end="611:72">||</operator>

                          <operator pos:start="613:27" pos:end="613:27">(</operator><name pos:start="613:28" pos:end="613:45">last_pic_structure</name>   <operator pos:start="613:49" pos:end="613:50">==</operator> <name pos:start="613:52" pos:end="613:68">PICT_BOTTOM_FIELD</name> <operator pos:start="613:70" pos:end="613:71">&amp;&amp;</operator>

                           <name pos:start="615:28" pos:end="615:47"><name pos:start="615:28" pos:end="615:28">h</name><operator pos:start="615:29" pos:end="615:30">-&gt;</operator><name pos:start="615:31" pos:end="615:47">picture_structure</name></name> <operator pos:start="615:49" pos:end="615:50">==</operator> <name pos:start="615:52" pos:end="615:65">PICT_TOP_FIELD</name><operator pos:start="615:66" pos:end="615:66">)</operator><operator pos:start="615:67" pos:end="615:67">)</operator></expr>)</condition> <block pos:start="615:70" pos:end="629:21">{<block_content pos:start="617:25" pos:end="627:51">

                        <expr_stmt pos:start="617:25" pos:end="621:73"><expr pos:start="617:25" pos:end="621:72"><call pos:start="617:25" pos:end="621:72"><name pos:start="617:25" pos:end="617:30">av_log</name><argument_list pos:start="617:31" pos:end="621:72">(<argument pos:start="617:32" pos:end="617:39"><expr pos:start="617:32" pos:end="617:39"><name pos:start="617:32" pos:end="617:39"><name pos:start="617:32" pos:end="617:32">h</name><operator pos:start="617:33" pos:end="617:34">-&gt;</operator><name pos:start="617:35" pos:end="617:39">avctx</name></name></expr></argument>, <argument pos:start="617:42" pos:end="617:53"><expr pos:start="617:42" pos:end="617:53"><name pos:start="617:42" pos:end="617:53">AV_LOG_ERROR</name></expr></argument>,

                               <argument pos:start="619:32" pos:end="619:71"><expr pos:start="619:32" pos:end="619:71"><literal type="string" pos:start="619:32" pos:end="619:71">"Invalid field mode combination %d/%d\n"</literal></expr></argument>,

                               <argument pos:start="621:32" pos:end="621:49"><expr pos:start="621:32" pos:end="621:49"><name pos:start="621:32" pos:end="621:49">last_pic_structure</name></expr></argument>, <argument pos:start="621:52" pos:end="621:71"><expr pos:start="621:52" pos:end="621:71"><name pos:start="621:52" pos:end="621:71"><name pos:start="621:52" pos:end="621:52">h</name><operator pos:start="621:53" pos:end="621:54">-&gt;</operator><name pos:start="621:55" pos:end="621:71">picture_structure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="623:25" pos:end="623:66"><expr pos:start="623:25" pos:end="623:65"><name pos:start="623:25" pos:end="623:44"><name pos:start="623:25" pos:end="623:25">h</name><operator pos:start="623:26" pos:end="623:27">-&gt;</operator><name pos:start="623:28" pos:end="623:44">picture_structure</name></name> <operator pos:start="623:46" pos:end="623:46">=</operator> <name pos:start="623:48" pos:end="623:65">last_pic_structure</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="625:25" pos:end="625:66"><expr pos:start="625:25" pos:end="625:65"><name pos:start="625:25" pos:end="625:36"><name pos:start="625:25" pos:end="625:25">h</name><operator pos:start="625:26" pos:end="625:27">-&gt;</operator><name pos:start="625:28" pos:end="625:36">droppable</name></name>         <operator pos:start="625:46" pos:end="625:46">=</operator> <name pos:start="625:48" pos:end="625:65">last_pic_droppable</name></expr>;</expr_stmt>

                        <return pos:start="627:25" pos:end="627:51">return <expr pos:start="627:32" pos:end="627:50"><name pos:start="627:32" pos:end="627:50">AVERROR_INVALIDDATA</name></expr>;</return>

                    </block_content>}</block></if> <if type="elseif" pos:start="629:23" pos:end="641:21">else if <condition pos:start="629:31" pos:end="629:66">(<expr pos:start="629:32" pos:end="629:65"><name pos:start="629:32" pos:end="629:49">last_pic_droppable</name> <operator pos:start="629:51" pos:end="629:52">!=</operator> <name pos:start="629:54" pos:end="629:65"><name pos:start="629:54" pos:end="629:54">h</name><operator pos:start="629:55" pos:end="629:56">-&gt;</operator><name pos:start="629:57" pos:end="629:65">droppable</name></name></expr>)</condition> <block pos:start="629:68" pos:end="641:21">{<block_content pos:start="631:25" pos:end="639:52">

                        <expr_stmt pos:start="631:25" pos:end="633:115"><expr pos:start="631:25" pos:end="633:114"><call pos:start="631:25" pos:end="633:114"><name pos:start="631:25" pos:end="631:45">avpriv_request_sample</name><argument_list pos:start="631:46" pos:end="633:114">(<argument pos:start="631:47" pos:end="631:54"><expr pos:start="631:47" pos:end="631:54"><name pos:start="631:47" pos:end="631:54"><name pos:start="631:47" pos:end="631:47">h</name><operator pos:start="631:48" pos:end="631:49">-&gt;</operator><name pos:start="631:50" pos:end="631:54">avctx</name></name></expr></argument>,

                                              <argument pos:start="633:47" pos:end="633:113"><expr pos:start="633:47" pos:end="633:113"><literal type="string" pos:start="633:47" pos:end="633:113">"Found reference and non-reference fields in the same frame, which"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="635:25" pos:end="635:66"><expr pos:start="635:25" pos:end="635:65"><name pos:start="635:25" pos:end="635:44"><name pos:start="635:25" pos:end="635:25">h</name><operator pos:start="635:26" pos:end="635:27">-&gt;</operator><name pos:start="635:28" pos:end="635:44">picture_structure</name></name> <operator pos:start="635:46" pos:end="635:46">=</operator> <name pos:start="635:48" pos:end="635:65">last_pic_structure</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="637:25" pos:end="637:66"><expr pos:start="637:25" pos:end="637:65"><name pos:start="637:25" pos:end="637:36"><name pos:start="637:25" pos:end="637:25">h</name><operator pos:start="637:26" pos:end="637:27">-&gt;</operator><name pos:start="637:28" pos:end="637:36">droppable</name></name>         <operator pos:start="637:46" pos:end="637:46">=</operator> <name pos:start="637:48" pos:end="637:65">last_pic_droppable</name></expr>;</expr_stmt>

                        <return pos:start="639:25" pos:end="639:52">return <expr pos:start="639:32" pos:end="639:51"><name pos:start="639:32" pos:end="639:51">AVERROR_PATCHWELCOME</name></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <while pos:start="651:9" pos:end="743:9">while <condition pos:start="651:15" pos:end="653:90">(<expr pos:start="651:16" pos:end="653:89"><name pos:start="651:16" pos:end="651:27"><name pos:start="651:16" pos:end="651:16">h</name><operator pos:start="651:17" pos:end="651:18">-&gt;</operator><name pos:start="651:19" pos:end="651:27">frame_num</name></name> <operator pos:start="651:29" pos:end="651:30">!=</operator> <name pos:start="651:32" pos:end="651:48"><name pos:start="651:32" pos:end="651:32">h</name><operator pos:start="651:33" pos:end="651:34">-&gt;</operator><name pos:start="651:35" pos:end="651:48">prev_frame_num</name></name> <operator pos:start="651:50" pos:end="651:51">&amp;&amp;</operator> <operator pos:start="651:53" pos:end="651:53">!</operator><name pos:start="651:54" pos:end="651:68"><name pos:start="651:54" pos:end="651:55">h0</name><operator pos:start="651:56" pos:end="651:57">-&gt;</operator><name pos:start="651:58" pos:end="651:68">first_field</name></name> <operator pos:start="651:70" pos:end="651:71">&amp;&amp;</operator>

               <name pos:start="653:16" pos:end="653:27"><name pos:start="653:16" pos:end="653:16">h</name><operator pos:start="653:17" pos:end="653:18">-&gt;</operator><name pos:start="653:19" pos:end="653:27">frame_num</name></name> <operator pos:start="653:29" pos:end="653:30">!=</operator> <operator pos:start="653:32" pos:end="653:32">(</operator><name pos:start="653:33" pos:end="653:49"><name pos:start="653:33" pos:end="653:33">h</name><operator pos:start="653:34" pos:end="653:35">-&gt;</operator><name pos:start="653:36" pos:end="653:49">prev_frame_num</name></name> <operator pos:start="653:51" pos:end="653:51">+</operator> <literal type="number" pos:start="653:53" pos:end="653:53">1</literal><operator pos:start="653:54" pos:end="653:54">)</operator> <operator pos:start="653:56" pos:end="653:56">%</operator> <operator pos:start="653:58" pos:end="653:58">(</operator><literal type="number" pos:start="653:59" pos:end="653:59">1</literal> <operator pos:start="653:61" pos:end="653:62">&lt;&lt;</operator> <name pos:start="653:64" pos:end="653:88"><name pos:start="653:64" pos:end="653:64">h</name><operator pos:start="653:65" pos:end="653:66">-&gt;</operator><name pos:start="653:67" pos:end="653:69">sps</name><operator pos:start="653:70" pos:end="653:70">.</operator><name pos:start="653:71" pos:end="653:88">log2_max_frame_num</name></name><operator pos:start="653:89" pos:end="653:89">)</operator></expr>)</condition> <block pos:start="653:92" pos:end="743:9">{<block_content pos:start="655:13" pos:end="741:13">

            <decl_stmt pos:start="655:13" pos:end="655:76"><decl pos:start="655:13" pos:end="655:75"><type pos:start="655:13" pos:end="655:25"><name pos:start="655:13" pos:end="655:23">H264Picture</name> <modifier pos:start="655:25" pos:end="655:25">*</modifier></type><name pos:start="655:26" pos:end="655:29">prev</name> <init pos:start="655:31" pos:end="655:75">= <expr pos:start="655:33" pos:end="655:75"><ternary pos:start="655:33" pos:end="655:75"><condition pos:start="655:33" pos:end="655:52"><expr pos:start="655:33" pos:end="655:50"><name pos:start="655:33" pos:end="655:50"><name pos:start="655:33" pos:end="655:33">h</name><operator pos:start="655:34" pos:end="655:35">-&gt;</operator><name pos:start="655:36" pos:end="655:50">short_ref_count</name></name></expr> ?</condition><then pos:start="655:54" pos:end="655:68"> <expr pos:start="655:54" pos:end="655:68"><name pos:start="655:54" pos:end="655:68"><name pos:start="655:54" pos:end="655:54">h</name><operator pos:start="655:55" pos:end="655:56">-&gt;</operator><name pos:start="655:57" pos:end="655:65">short_ref</name><index pos:start="655:66" pos:end="655:68">[<expr pos:start="655:67" pos:end="655:67"><literal type="number" pos:start="655:67" pos:end="655:67">0</literal></expr>]</index></name></expr> </then><else pos:start="655:70" pos:end="655:75">: <expr pos:start="655:72" pos:end="655:75"><name pos:start="655:72" pos:end="655:75">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="657:13" pos:end="659:52"><expr pos:start="657:13" pos:end="659:51"><call pos:start="657:13" pos:end="659:51"><name pos:start="657:13" pos:end="657:18">av_log</name><argument_list pos:start="657:19" pos:end="659:51">(<argument pos:start="657:20" pos:end="657:27"><expr pos:start="657:20" pos:end="657:27"><name pos:start="657:20" pos:end="657:27"><name pos:start="657:20" pos:end="657:20">h</name><operator pos:start="657:21" pos:end="657:22">-&gt;</operator><name pos:start="657:23" pos:end="657:27">avctx</name></name></expr></argument>, <argument pos:start="657:30" pos:end="657:41"><expr pos:start="657:30" pos:end="657:41"><name pos:start="657:30" pos:end="657:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="657:44" pos:end="657:66"><expr pos:start="657:44" pos:end="657:66"><literal type="string" pos:start="657:44" pos:end="657:66">"Frame num gap %d %d\n"</literal></expr></argument>,

                   <argument pos:start="659:20" pos:end="659:31"><expr pos:start="659:20" pos:end="659:31"><name pos:start="659:20" pos:end="659:31"><name pos:start="659:20" pos:end="659:20">h</name><operator pos:start="659:21" pos:end="659:22">-&gt;</operator><name pos:start="659:23" pos:end="659:31">frame_num</name></name></expr></argument>, <argument pos:start="659:34" pos:end="659:50"><expr pos:start="659:34" pos:end="659:50"><name pos:start="659:34" pos:end="659:50"><name pos:start="659:34" pos:end="659:34">h</name><operator pos:start="659:35" pos:end="659:36">-&gt;</operator><name pos:start="659:37" pos:end="659:50">prev_frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="661:13" pos:end="665:46"><if pos:start="661:13" pos:end="665:46">if <condition pos:start="661:16" pos:end="661:55">(<expr pos:start="661:17" pos:end="661:54"><operator pos:start="661:17" pos:end="661:17">!</operator><name pos:start="661:18" pos:end="661:54"><name pos:start="661:18" pos:end="661:18">h</name><operator pos:start="661:19" pos:end="661:20">-&gt;</operator><name pos:start="661:21" pos:end="661:23">sps</name><operator pos:start="661:24" pos:end="661:24">.</operator><name pos:start="661:25" pos:end="661:54">gaps_in_frame_num_allowed_flag</name></name></expr>)</condition><block type="pseudo" pos:start="663:17" pos:end="665:46"><block_content pos:start="663:17" pos:end="665:46">

                <for pos:start="663:17" pos:end="665:46">for<control pos:start="663:20" pos:end="663:61">(<init pos:start="663:21" pos:end="663:24"><expr pos:start="663:21" pos:end="663:23"><name pos:start="663:21" pos:end="663:21">i</name><operator pos:start="663:22" pos:end="663:22">=</operator><literal type="number" pos:start="663:23" pos:end="663:23">0</literal></expr>;</init> <condition pos:start="663:26" pos:end="663:56"><expr pos:start="663:26" pos:end="663:55"><name pos:start="663:26" pos:end="663:26">i</name><operator pos:start="663:27" pos:end="663:27">&lt;</operator><call pos:start="663:28" pos:end="663:55"><name pos:start="663:28" pos:end="663:41">FF_ARRAY_ELEMS</name><argument_list pos:start="663:42" pos:end="663:55">(<argument pos:start="663:43" pos:end="663:54"><expr pos:start="663:43" pos:end="663:54"><name pos:start="663:43" pos:end="663:54"><name pos:start="663:43" pos:end="663:43">h</name><operator pos:start="663:44" pos:end="663:45">-&gt;</operator><name pos:start="663:46" pos:end="663:54">last_pocs</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="663:58" pos:end="663:60"><expr pos:start="663:58" pos:end="663:60"><name pos:start="663:58" pos:end="663:58">i</name><operator pos:start="663:59" pos:end="663:60">++</operator></expr></incr>)</control><block type="pseudo" pos:start="665:21" pos:end="665:46"><block_content pos:start="665:21" pos:end="665:46">

                    <expr_stmt pos:start="665:21" pos:end="665:46"><expr pos:start="665:21" pos:end="665:45"><name pos:start="665:21" pos:end="665:35"><name pos:start="665:21" pos:end="665:21">h</name><operator pos:start="665:22" pos:end="665:23">-&gt;</operator><name pos:start="665:24" pos:end="665:32">last_pocs</name><index pos:start="665:33" pos:end="665:35">[<expr pos:start="665:34" pos:end="665:34"><name pos:start="665:34" pos:end="665:34">i</name></expr>]</index></name> <operator pos:start="665:37" pos:end="665:37">=</operator> <name pos:start="665:39" pos:end="665:45">INT_MIN</name></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

            <expr_stmt pos:start="667:13" pos:end="667:38"><expr pos:start="667:13" pos:end="667:37"><name pos:start="667:13" pos:end="667:15">ret</name> <operator pos:start="667:17" pos:end="667:17">=</operator> <call pos:start="667:19" pos:end="667:37"><name pos:start="667:19" pos:end="667:34">h264_frame_start</name><argument_list pos:start="667:35" pos:end="667:37">(<argument pos:start="667:36" pos:end="667:36"><expr pos:start="667:36" pos:end="667:36"><name pos:start="667:36" pos:end="667:36">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="669:13" pos:end="675:13"><if pos:start="669:13" pos:end="675:13">if <condition pos:start="669:16" pos:end="669:24">(<expr pos:start="669:17" pos:end="669:23"><name pos:start="669:17" pos:end="669:19">ret</name> <operator pos:start="669:21" pos:end="669:21">&lt;</operator> <literal type="number" pos:start="669:23" pos:end="669:23">0</literal></expr>)</condition> <block pos:start="669:26" pos:end="675:13">{<block_content pos:start="671:17" pos:end="673:27">

                <expr_stmt pos:start="671:17" pos:end="671:36"><expr pos:start="671:17" pos:end="671:35"><name pos:start="671:17" pos:end="671:31"><name pos:start="671:17" pos:end="671:18">h0</name><operator pos:start="671:19" pos:end="671:20">-&gt;</operator><name pos:start="671:21" pos:end="671:31">first_field</name></name> <operator pos:start="671:33" pos:end="671:33">=</operator> <literal type="number" pos:start="671:35" pos:end="671:35">0</literal></expr>;</expr_stmt>

                <return pos:start="673:17" pos:end="673:27">return <expr pos:start="673:24" pos:end="673:26"><name pos:start="673:24" pos:end="673:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="679:13" pos:end="679:32"><expr pos:start="679:13" pos:end="679:31"><name pos:start="679:13" pos:end="679:29"><name pos:start="679:13" pos:end="679:13">h</name><operator pos:start="679:14" pos:end="679:15">-&gt;</operator><name pos:start="679:16" pos:end="679:29">prev_frame_num</name></name><operator pos:start="679:30" pos:end="679:31">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="681:13" pos:end="681:71"><expr pos:start="681:13" pos:end="681:70"><name pos:start="681:13" pos:end="681:29"><name pos:start="681:13" pos:end="681:13">h</name><operator pos:start="681:14" pos:end="681:15">-&gt;</operator><name pos:start="681:16" pos:end="681:29">prev_frame_num</name></name>        <operator pos:start="681:38" pos:end="681:39">%=</operator> <literal type="number" pos:start="681:41" pos:end="681:41">1</literal> <operator pos:start="681:43" pos:end="681:44">&lt;&lt;</operator> <name pos:start="681:46" pos:end="681:70"><name pos:start="681:46" pos:end="681:46">h</name><operator pos:start="681:47" pos:end="681:48">-&gt;</operator><name pos:start="681:49" pos:end="681:51">sps</name><operator pos:start="681:52" pos:end="681:52">.</operator><name pos:start="681:53" pos:end="681:70">log2_max_frame_num</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="683:13" pos:end="683:58"><expr pos:start="683:13" pos:end="683:57"><name pos:start="683:13" pos:end="683:37"><name pos:start="683:13" pos:end="683:13">h</name><operator pos:start="683:14" pos:end="683:15">-&gt;</operator><name pos:start="683:16" pos:end="683:26">cur_pic_ptr</name><operator pos:start="683:27" pos:end="683:28">-&gt;</operator><name pos:start="683:29" pos:end="683:37">frame_num</name></name> <operator pos:start="683:39" pos:end="683:39">=</operator> <name pos:start="683:41" pos:end="683:57"><name pos:start="683:41" pos:end="683:41">h</name><operator pos:start="683:42" pos:end="683:43">-&gt;</operator><name pos:start="683:44" pos:end="683:57">prev_frame_num</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="685:13" pos:end="685:81"><expr pos:start="685:13" pos:end="685:80"><name pos:start="685:13" pos:end="685:39"><name pos:start="685:13" pos:end="685:13">h</name><operator pos:start="685:14" pos:end="685:15">-&gt;</operator><name pos:start="685:16" pos:end="685:26">cur_pic_ptr</name><operator pos:start="685:27" pos:end="685:28">-&gt;</operator><name pos:start="685:29" pos:end="685:39">invalid_gap</name></name> <operator pos:start="685:41" pos:end="685:41">=</operator> <operator pos:start="685:43" pos:end="685:43">!</operator><name pos:start="685:44" pos:end="685:80"><name pos:start="685:44" pos:end="685:44">h</name><operator pos:start="685:45" pos:end="685:46">-&gt;</operator><name pos:start="685:47" pos:end="685:49">sps</name><operator pos:start="685:50" pos:end="685:50">.</operator><name pos:start="685:51" pos:end="685:80">gaps_in_frame_num_allowed_flag</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="687:13" pos:end="687:71"><expr pos:start="687:13" pos:end="687:70"><call pos:start="687:13" pos:end="687:70"><name pos:start="687:13" pos:end="687:37">ff_thread_report_progress</name><argument_list pos:start="687:38" pos:end="687:70">(<argument pos:start="687:39" pos:end="687:57"><expr pos:start="687:39" pos:end="687:57"><operator pos:start="687:39" pos:end="687:39">&amp;</operator><name pos:start="687:40" pos:end="687:57"><name pos:start="687:40" pos:end="687:40">h</name><operator pos:start="687:41" pos:end="687:42">-&gt;</operator><name pos:start="687:43" pos:end="687:53">cur_pic_ptr</name><operator pos:start="687:54" pos:end="687:55">-&gt;</operator><name pos:start="687:56" pos:end="687:57">tf</name></name></expr></argument>, <argument pos:start="687:60" pos:end="687:66"><expr pos:start="687:60" pos:end="687:66"><name pos:start="687:60" pos:end="687:66">INT_MAX</name></expr></argument>, <argument pos:start="687:69" pos:end="687:69"><expr pos:start="687:69" pos:end="687:69"><literal type="number" pos:start="687:69" pos:end="687:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="689:13" pos:end="689:71"><expr pos:start="689:13" pos:end="689:70"><call pos:start="689:13" pos:end="689:70"><name pos:start="689:13" pos:end="689:37">ff_thread_report_progress</name><argument_list pos:start="689:38" pos:end="689:70">(<argument pos:start="689:39" pos:end="689:57"><expr pos:start="689:39" pos:end="689:57"><operator pos:start="689:39" pos:end="689:39">&amp;</operator><name pos:start="689:40" pos:end="689:57"><name pos:start="689:40" pos:end="689:40">h</name><operator pos:start="689:41" pos:end="689:42">-&gt;</operator><name pos:start="689:43" pos:end="689:53">cur_pic_ptr</name><operator pos:start="689:54" pos:end="689:55">-&gt;</operator><name pos:start="689:56" pos:end="689:57">tf</name></name></expr></argument>, <argument pos:start="689:60" pos:end="689:66"><expr pos:start="689:60" pos:end="689:66"><name pos:start="689:60" pos:end="689:66">INT_MAX</name></expr></argument>, <argument pos:start="689:69" pos:end="689:69"><expr pos:start="689:69" pos:end="689:69"><literal type="number" pos:start="689:69" pos:end="689:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="691:13" pos:end="691:57"><expr pos:start="691:13" pos:end="691:56"><name pos:start="691:13" pos:end="691:15">ret</name> <operator pos:start="691:17" pos:end="691:17">=</operator> <call pos:start="691:19" pos:end="691:56"><name pos:start="691:19" pos:end="691:50">ff_generate_sliding_window_mmcos</name><argument_list pos:start="691:51" pos:end="691:56">(<argument pos:start="691:52" pos:end="691:52"><expr pos:start="691:52" pos:end="691:52"><name pos:start="691:52" pos:end="691:52">h</name></expr></argument>, <argument pos:start="691:55" pos:end="691:55"><expr pos:start="691:55" pos:end="691:55"><literal type="number" pos:start="691:55" pos:end="691:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="693:13" pos:end="695:27"><if pos:start="693:13" pos:end="695:27">if <condition pos:start="693:16" pos:end="693:71">(<expr pos:start="693:17" pos:end="693:70"><name pos:start="693:17" pos:end="693:19">ret</name> <operator pos:start="693:21" pos:end="693:21">&lt;</operator> <literal type="number" pos:start="693:23" pos:end="693:23">0</literal> <operator pos:start="693:25" pos:end="693:26">&amp;&amp;</operator> <operator pos:start="693:28" pos:end="693:28">(</operator><name pos:start="693:29" pos:end="693:53"><name pos:start="693:29" pos:end="693:29">h</name><operator pos:start="693:30" pos:end="693:31">-&gt;</operator><name pos:start="693:32" pos:end="693:36">avctx</name><operator pos:start="693:37" pos:end="693:38">-&gt;</operator><name pos:start="693:39" pos:end="693:53">err_recognition</name></name> <operator pos:start="693:55" pos:end="693:55">&amp;</operator> <name pos:start="693:57" pos:end="693:69">AV_EF_EXPLODE</name><operator pos:start="693:70" pos:end="693:70">)</operator></expr>)</condition><block type="pseudo" pos:start="695:17" pos:end="695:27"><block_content pos:start="695:17" pos:end="695:27">

                <return pos:start="695:17" pos:end="695:27">return <expr pos:start="695:24" pos:end="695:26"><name pos:start="695:24" pos:end="695:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="697:13" pos:end="697:77"><expr pos:start="697:13" pos:end="697:76"><name pos:start="697:13" pos:end="697:15">ret</name> <operator pos:start="697:17" pos:end="697:17">=</operator> <call pos:start="697:19" pos:end="697:76"><name pos:start="697:19" pos:end="697:49">ff_h264_execute_ref_pic_marking</name><argument_list pos:start="697:50" pos:end="697:76">(<argument pos:start="697:51" pos:end="697:51"><expr pos:start="697:51" pos:end="697:51"><name pos:start="697:51" pos:end="697:51">h</name></expr></argument>, <argument pos:start="697:54" pos:end="697:60"><expr pos:start="697:54" pos:end="697:60"><name pos:start="697:54" pos:end="697:60"><name pos:start="697:54" pos:end="697:54">h</name><operator pos:start="697:55" pos:end="697:56">-&gt;</operator><name pos:start="697:57" pos:end="697:60">mmco</name></name></expr></argument>, <argument pos:start="697:63" pos:end="697:75"><expr pos:start="697:63" pos:end="697:75"><name pos:start="697:63" pos:end="697:75"><name pos:start="697:63" pos:end="697:63">h</name><operator pos:start="697:64" pos:end="697:65">-&gt;</operator><name pos:start="697:66" pos:end="697:75">mmco_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="699:13" pos:end="701:27"><if pos:start="699:13" pos:end="701:27">if <condition pos:start="699:16" pos:end="699:71">(<expr pos:start="699:17" pos:end="699:70"><name pos:start="699:17" pos:end="699:19">ret</name> <operator pos:start="699:21" pos:end="699:21">&lt;</operator> <literal type="number" pos:start="699:23" pos:end="699:23">0</literal> <operator pos:start="699:25" pos:end="699:26">&amp;&amp;</operator> <operator pos:start="699:28" pos:end="699:28">(</operator><name pos:start="699:29" pos:end="699:53"><name pos:start="699:29" pos:end="699:29">h</name><operator pos:start="699:30" pos:end="699:31">-&gt;</operator><name pos:start="699:32" pos:end="699:36">avctx</name><operator pos:start="699:37" pos:end="699:38">-&gt;</operator><name pos:start="699:39" pos:end="699:53">err_recognition</name></name> <operator pos:start="699:55" pos:end="699:55">&amp;</operator> <name pos:start="699:57" pos:end="699:69">AV_EF_EXPLODE</name><operator pos:start="699:70" pos:end="699:70">)</operator></expr>)</condition><block type="pseudo" pos:start="701:17" pos:end="701:27"><block_content pos:start="701:17" pos:end="701:27">

                <return pos:start="701:17" pos:end="701:27">return <expr pos:start="701:24" pos:end="701:26"><name pos:start="701:24" pos:end="701:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <comment type="block" pos:start="703:13" pos:end="715:74">/* Error concealment: If a ref is missing, copy the previous ref

             * in its place.

             * FIXME: Avoiding a memcpy would be nice, but ref handling makes

             * many assumptions about there being no actual duplicates.

             * FIXME: This does not copy padding for out-of-frame motion

             * vectors.  Given we are concealing a lost frame, this probably

             * is not noticeable by comparison, but it should be fixed. */</comment>

            <if_stmt pos:start="717:13" pos:end="741:13"><if pos:start="717:13" pos:end="741:13">if <condition pos:start="717:16" pos:end="717:35">(<expr pos:start="717:17" pos:end="717:34"><name pos:start="717:17" pos:end="717:34"><name pos:start="717:17" pos:end="717:17">h</name><operator pos:start="717:18" pos:end="717:19">-&gt;</operator><name pos:start="717:20" pos:end="717:34">short_ref_count</name></name></expr>)</condition> <block pos:start="717:37" pos:end="741:13">{<block_content pos:start="719:17" pos:end="739:63">

                <if_stmt pos:start="719:17" pos:end="737:17"><if pos:start="719:17" pos:end="737:17">if <condition pos:start="719:20" pos:end="719:25">(<expr pos:start="719:21" pos:end="719:24"><name pos:start="719:21" pos:end="719:24">prev</name></expr>)</condition> <block pos:start="719:27" pos:end="737:17">{<block_content pos:start="721:21" pos:end="735:57">

                    <expr_stmt pos:start="721:21" pos:end="733:53"><expr pos:start="721:21" pos:end="733:52"><call pos:start="721:21" pos:end="733:52"><name pos:start="721:21" pos:end="721:33">av_image_copy</name><argument_list pos:start="721:34" pos:end="733:52">(<argument pos:start="721:35" pos:end="721:57"><expr pos:start="721:35" pos:end="721:57"><name pos:start="721:35" pos:end="721:49"><name pos:start="721:35" pos:end="721:35">h</name><operator pos:start="721:36" pos:end="721:37">-&gt;</operator><name pos:start="721:38" pos:end="721:46">short_ref</name><index pos:start="721:47" pos:end="721:49">[<expr pos:start="721:48" pos:end="721:48"><literal type="number" pos:start="721:48" pos:end="721:48">0</literal></expr>]</index></name><operator pos:start="721:50" pos:end="721:51">-&gt;</operator><name pos:start="721:52" pos:end="721:57"><name pos:start="721:52" pos:end="721:52">f</name><operator pos:start="721:53" pos:end="721:53">.</operator><name pos:start="721:54" pos:end="721:57">data</name></name></expr></argument>,

                                  <argument pos:start="723:35" pos:end="723:61"><expr pos:start="723:35" pos:end="723:61"><name pos:start="723:35" pos:end="723:49"><name pos:start="723:35" pos:end="723:35">h</name><operator pos:start="723:36" pos:end="723:37">-&gt;</operator><name pos:start="723:38" pos:end="723:46">short_ref</name><index pos:start="723:47" pos:end="723:49">[<expr pos:start="723:48" pos:end="723:48"><literal type="number" pos:start="723:48" pos:end="723:48">0</literal></expr>]</index></name><operator pos:start="723:50" pos:end="723:51">-&gt;</operator><name pos:start="723:52" pos:end="723:61"><name pos:start="723:52" pos:end="723:52">f</name><operator pos:start="723:53" pos:end="723:53">.</operator><name pos:start="723:54" pos:end="723:61">linesize</name></name></expr></argument>,

                                  <argument pos:start="725:35" pos:end="725:64"><expr pos:start="725:35" pos:end="725:64"><operator pos:start="725:35" pos:end="725:35">(</operator><specifier pos:start="725:36" pos:end="725:40">const</specifier> <name pos:start="725:42" pos:end="725:48">uint8_t</name> <operator pos:start="725:50" pos:end="725:50">*</operator><operator pos:start="725:51" pos:end="725:51">*</operator><operator pos:start="725:52" pos:end="725:52">)</operator><name pos:start="725:53" pos:end="725:64"><name pos:start="725:53" pos:end="725:56">prev</name><operator pos:start="725:57" pos:end="725:58">-&gt;</operator><name pos:start="725:59" pos:end="725:59">f</name><operator pos:start="725:60" pos:end="725:60">.</operator><name pos:start="725:61" pos:end="725:64">data</name></name></expr></argument>,

                                  <argument pos:start="727:35" pos:end="727:50"><expr pos:start="727:35" pos:end="727:50"><name pos:start="727:35" pos:end="727:50"><name pos:start="727:35" pos:end="727:38">prev</name><operator pos:start="727:39" pos:end="727:40">-&gt;</operator><name pos:start="727:41" pos:end="727:41">f</name><operator pos:start="727:42" pos:end="727:42">.</operator><name pos:start="727:43" pos:end="727:50">linesize</name></name></expr></argument>,

                                  <argument pos:start="729:35" pos:end="729:51"><expr pos:start="729:35" pos:end="729:51"><name pos:start="729:35" pos:end="729:51"><name pos:start="729:35" pos:end="729:35">h</name><operator pos:start="729:36" pos:end="729:37">-&gt;</operator><name pos:start="729:38" pos:end="729:42">avctx</name><operator pos:start="729:43" pos:end="729:44">-&gt;</operator><name pos:start="729:45" pos:end="729:51">pix_fmt</name></name></expr></argument>,

                                  <argument pos:start="731:35" pos:end="731:51"><expr pos:start="731:35" pos:end="731:51"><name pos:start="731:35" pos:end="731:45"><name pos:start="731:35" pos:end="731:35">h</name><operator pos:start="731:36" pos:end="731:37">-&gt;</operator><name pos:start="731:38" pos:end="731:45">mb_width</name></name>  <operator pos:start="731:48" pos:end="731:48">*</operator> <literal type="number" pos:start="731:50" pos:end="731:51">16</literal></expr></argument>,

                                  <argument pos:start="733:35" pos:end="733:51"><expr pos:start="733:35" pos:end="733:51"><name pos:start="733:35" pos:end="733:46"><name pos:start="733:35" pos:end="733:35">h</name><operator pos:start="733:36" pos:end="733:37">-&gt;</operator><name pos:start="733:38" pos:end="733:46">mb_height</name></name> <operator pos:start="733:48" pos:end="733:48">*</operator> <literal type="number" pos:start="733:50" pos:end="733:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="735:21" pos:end="735:57"><expr pos:start="735:21" pos:end="735:56"><name pos:start="735:21" pos:end="735:35"><name pos:start="735:21" pos:end="735:21">h</name><operator pos:start="735:22" pos:end="735:23">-&gt;</operator><name pos:start="735:24" pos:end="735:32">short_ref</name><index pos:start="735:33" pos:end="735:35">[<expr pos:start="735:34" pos:end="735:34"><literal type="number" pos:start="735:34" pos:end="735:34">0</literal></expr>]</index></name><operator pos:start="735:36" pos:end="735:37">-&gt;</operator><name pos:start="735:38" pos:end="735:40">poc</name> <operator pos:start="735:42" pos:end="735:42">=</operator> <name pos:start="735:44" pos:end="735:52"><name pos:start="735:44" pos:end="735:47">prev</name><operator pos:start="735:48" pos:end="735:49">-&gt;</operator><name pos:start="735:50" pos:end="735:52">poc</name></name> <operator pos:start="735:54" pos:end="735:54">+</operator> <literal type="number" pos:start="735:56" pos:end="735:56">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="739:17" pos:end="739:63"><expr pos:start="739:17" pos:end="739:62"><name pos:start="739:17" pos:end="739:31"><name pos:start="739:17" pos:end="739:17">h</name><operator pos:start="739:18" pos:end="739:19">-&gt;</operator><name pos:start="739:20" pos:end="739:28">short_ref</name><index pos:start="739:29" pos:end="739:31">[<expr pos:start="739:30" pos:end="739:30"><literal type="number" pos:start="739:30" pos:end="739:30">0</literal></expr>]</index></name><operator pos:start="739:32" pos:end="739:33">-&gt;</operator><name pos:start="739:34" pos:end="739:42">frame_num</name> <operator pos:start="739:44" pos:end="739:44">=</operator> <name pos:start="739:46" pos:end="739:62"><name pos:start="739:46" pos:end="739:46">h</name><operator pos:start="739:47" pos:end="739:48">-&gt;</operator><name pos:start="739:49" pos:end="739:62">prev_frame_num</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>



        <comment type="block" pos:start="747:9" pos:end="751:46">/* See if we have a decoded first field looking for a pair...

         * We're using that to see whether to continue decoding in that

         * frame, or to allocate a new one. */</comment>

        <if_stmt pos:start="753:9" pos:end="809:9"><if pos:start="753:9" pos:end="803:9">if <condition pos:start="753:12" pos:end="753:28">(<expr pos:start="753:13" pos:end="753:27"><name pos:start="753:13" pos:end="753:27"><name pos:start="753:13" pos:end="753:14">h0</name><operator pos:start="753:15" pos:end="753:16">-&gt;</operator><name pos:start="753:17" pos:end="753:27">first_field</name></name></expr>)</condition> <block pos:start="753:30" pos:end="803:9">{<block_content pos:start="755:13" pos:end="801:13">

            <expr_stmt pos:start="755:13" pos:end="755:36"><expr pos:start="755:13" pos:end="755:35"><call pos:start="755:13" pos:end="755:35"><name pos:start="755:13" pos:end="755:18">assert</name><argument_list pos:start="755:19" pos:end="755:35">(<argument pos:start="755:20" pos:end="755:34"><expr pos:start="755:20" pos:end="755:34"><name pos:start="755:20" pos:end="755:34"><name pos:start="755:20" pos:end="755:21">h0</name><operator pos:start="755:22" pos:end="755:23">-&gt;</operator><name pos:start="755:24" pos:end="755:34">cur_pic_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="757:13" pos:end="757:46"><expr pos:start="757:13" pos:end="757:45"><call pos:start="757:13" pos:end="757:45"><name pos:start="757:13" pos:end="757:18">assert</name><argument_list pos:start="757:19" pos:end="757:45">(<argument pos:start="757:20" pos:end="757:44"><expr pos:start="757:20" pos:end="757:44"><name pos:start="757:20" pos:end="757:44"><name pos:start="757:20" pos:end="757:21">h0</name><operator pos:start="757:22" pos:end="757:23">-&gt;</operator><name pos:start="757:24" pos:end="757:34">cur_pic_ptr</name><operator pos:start="757:35" pos:end="757:36">-&gt;</operator><name pos:start="757:37" pos:end="757:37">f</name><operator pos:start="757:38" pos:end="757:38">.</operator><name pos:start="757:39" pos:end="757:41">buf</name><index pos:start="757:42" pos:end="757:44">[<expr pos:start="757:43" pos:end="757:43"><literal type="number" pos:start="757:43" pos:end="757:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="759:13" pos:end="759:66"><expr pos:start="759:13" pos:end="759:65"><call pos:start="759:13" pos:end="759:65"><name pos:start="759:13" pos:end="759:18">assert</name><argument_list pos:start="759:19" pos:end="759:65">(<argument pos:start="759:20" pos:end="759:64"><expr pos:start="759:20" pos:end="759:64"><name pos:start="759:20" pos:end="759:45"><name pos:start="759:20" pos:end="759:21">h0</name><operator pos:start="759:22" pos:end="759:23">-&gt;</operator><name pos:start="759:24" pos:end="759:34">cur_pic_ptr</name><operator pos:start="759:35" pos:end="759:36">-&gt;</operator><name pos:start="759:37" pos:end="759:45">reference</name></name> <operator pos:start="759:47" pos:end="759:48">!=</operator> <name pos:start="759:50" pos:end="759:64">DELAYED_PIC_REF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="763:13" pos:end="763:66">/* figure out if we have a complementary field pair */</comment>

            <if_stmt pos:start="765:13" pos:end="801:13"><if pos:start="765:13" pos:end="775:13">if <condition pos:start="765:16" pos:end="765:80">(<expr pos:start="765:17" pos:end="765:79"><operator pos:start="765:17" pos:end="765:17">!</operator><call pos:start="765:18" pos:end="765:33"><name pos:start="765:18" pos:end="765:30">FIELD_PICTURE</name><argument_list pos:start="765:31" pos:end="765:33">(<argument pos:start="765:32" pos:end="765:32"><expr pos:start="765:32" pos:end="765:32"><name pos:start="765:32" pos:end="765:32">h</name></expr></argument>)</argument_list></call> <operator pos:start="765:35" pos:end="765:36">||</operator> <name pos:start="765:38" pos:end="765:57"><name pos:start="765:38" pos:end="765:38">h</name><operator pos:start="765:39" pos:end="765:40">-&gt;</operator><name pos:start="765:41" pos:end="765:57">picture_structure</name></name> <operator pos:start="765:59" pos:end="765:60">==</operator> <name pos:start="765:62" pos:end="765:79">last_pic_structure</name></expr>)</condition> <block pos:start="765:82" pos:end="775:13">{<block_content pos:start="771:17" pos:end="773:51">

                <comment type="block" pos:start="767:17" pos:end="769:61">/* Previous field is unmatched. Don't display it, but let it

                 * remain for reference if marked as such. */</comment>

                <expr_stmt pos:start="771:17" pos:end="771:39"><expr pos:start="771:17" pos:end="771:38"><name pos:start="771:17" pos:end="771:31"><name pos:start="771:17" pos:end="771:18">h0</name><operator pos:start="771:19" pos:end="771:20">-&gt;</operator><name pos:start="771:21" pos:end="771:31">cur_pic_ptr</name></name> <operator pos:start="771:33" pos:end="771:33">=</operator> <name pos:start="771:35" pos:end="771:38">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="773:17" pos:end="773:51"><expr pos:start="773:17" pos:end="773:50"><name pos:start="773:17" pos:end="773:31"><name pos:start="773:17" pos:end="773:18">h0</name><operator pos:start="773:19" pos:end="773:20">-&gt;</operator><name pos:start="773:21" pos:end="773:31">first_field</name></name> <operator pos:start="773:33" pos:end="773:33">=</operator> <call pos:start="773:35" pos:end="773:50"><name pos:start="773:35" pos:end="773:47">FIELD_PICTURE</name><argument_list pos:start="773:48" pos:end="773:50">(<argument pos:start="773:49" pos:end="773:49"><expr pos:start="773:49" pos:end="773:49"><name pos:start="773:49" pos:end="773:49">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="775:15" pos:end="801:13">else <block pos:start="775:20" pos:end="801:13">{<block_content pos:start="777:17" pos:end="799:17">

                <if_stmt pos:start="777:17" pos:end="799:17"><if pos:start="777:17" pos:end="793:17">if <condition pos:start="777:20" pos:end="777:63">(<expr pos:start="777:21" pos:end="777:62"><name pos:start="777:21" pos:end="777:46"><name pos:start="777:21" pos:end="777:22">h0</name><operator pos:start="777:23" pos:end="777:24">-&gt;</operator><name pos:start="777:25" pos:end="777:35">cur_pic_ptr</name><operator pos:start="777:36" pos:end="777:37">-&gt;</operator><name pos:start="777:38" pos:end="777:46">frame_num</name></name> <operator pos:start="777:48" pos:end="777:49">!=</operator> <name pos:start="777:51" pos:end="777:62"><name pos:start="777:51" pos:end="777:51">h</name><operator pos:start="777:52" pos:end="777:53">-&gt;</operator><name pos:start="777:54" pos:end="777:62">frame_num</name></name></expr>)</condition> <block pos:start="777:65" pos:end="793:17">{<block_content pos:start="779:21" pos:end="791:43">

                    <expr_stmt pos:start="779:21" pos:end="781:88"><expr pos:start="779:21" pos:end="781:87"><call pos:start="779:21" pos:end="781:87"><name pos:start="779:21" pos:end="779:45">ff_thread_report_progress</name><argument_list pos:start="779:46" pos:end="781:87">(<argument pos:start="779:47" pos:end="779:66"><expr pos:start="779:47" pos:end="779:66"><operator pos:start="779:47" pos:end="779:47">&amp;</operator><name pos:start="779:48" pos:end="779:66"><name pos:start="779:48" pos:end="779:49">h0</name><operator pos:start="779:50" pos:end="779:51">-&gt;</operator><name pos:start="779:52" pos:end="779:62">cur_pic_ptr</name><operator pos:start="779:63" pos:end="779:64">-&gt;</operator><name pos:start="779:65" pos:end="779:66">tf</name></name></expr></argument>, <argument pos:start="779:69" pos:end="779:75"><expr pos:start="779:69" pos:end="779:75"><name pos:start="779:69" pos:end="779:75">INT_MAX</name></expr></argument>,

                                              <argument pos:start="781:47" pos:end="781:86"><expr pos:start="781:47" pos:end="781:86"><name pos:start="781:47" pos:end="781:67"><name pos:start="781:47" pos:end="781:48">h0</name><operator pos:start="781:49" pos:end="781:50">-&gt;</operator><name pos:start="781:51" pos:end="781:67">picture_structure</name></name><operator pos:start="781:68" pos:end="781:69">==</operator><name pos:start="781:70" pos:end="781:86">PICT_BOTTOM_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="783:21" pos:end="787:60">/* This and the previous field had different frame_nums.

                     * Consider this field first in pair. Throw away previous

                     * one except for reference purposes. */</comment>

                    <expr_stmt pos:start="789:21" pos:end="789:40"><expr pos:start="789:21" pos:end="789:39"><name pos:start="789:21" pos:end="789:35"><name pos:start="789:21" pos:end="789:22">h0</name><operator pos:start="789:23" pos:end="789:24">-&gt;</operator><name pos:start="789:25" pos:end="789:35">first_field</name></name> <operator pos:start="789:37" pos:end="789:37">=</operator> <literal type="number" pos:start="789:39" pos:end="789:39">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="791:21" pos:end="791:43"><expr pos:start="791:21" pos:end="791:42"><name pos:start="791:21" pos:end="791:35"><name pos:start="791:21" pos:end="791:22">h0</name><operator pos:start="791:23" pos:end="791:24">-&gt;</operator><name pos:start="791:25" pos:end="791:35">cur_pic_ptr</name></name> <operator pos:start="791:37" pos:end="791:37">=</operator> <name pos:start="791:39" pos:end="791:42">NULL</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="793:19" pos:end="799:17">else <block pos:start="793:24" pos:end="799:17">{<block_content pos:start="797:21" pos:end="797:40">

                    <comment type="block" pos:start="795:21" pos:end="795:60">/* Second field in complementary pair */</comment>

                    <expr_stmt pos:start="797:21" pos:end="797:40"><expr pos:start="797:21" pos:end="797:39"><name pos:start="797:21" pos:end="797:35"><name pos:start="797:21" pos:end="797:22">h0</name><operator pos:start="797:23" pos:end="797:24">-&gt;</operator><name pos:start="797:25" pos:end="797:35">first_field</name></name> <operator pos:start="797:37" pos:end="797:37">=</operator> <literal type="number" pos:start="797:39" pos:end="797:39">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="803:11" pos:end="809:9">else <block pos:start="803:16" pos:end="809:9">{<block_content pos:start="807:13" pos:end="807:47">

            <comment type="block" pos:start="805:13" pos:end="805:74">/* Frame or first field in a potentially complementary pair */</comment>

            <expr_stmt pos:start="807:13" pos:end="807:47"><expr pos:start="807:13" pos:end="807:46"><name pos:start="807:13" pos:end="807:27"><name pos:start="807:13" pos:end="807:14">h0</name><operator pos:start="807:15" pos:end="807:16">-&gt;</operator><name pos:start="807:17" pos:end="807:27">first_field</name></name> <operator pos:start="807:29" pos:end="807:29">=</operator> <call pos:start="807:31" pos:end="807:46"><name pos:start="807:31" pos:end="807:43">FIELD_PICTURE</name><argument_list pos:start="807:44" pos:end="807:46">(<argument pos:start="807:45" pos:end="807:45"><expr pos:start="807:45" pos:end="807:45"><name pos:start="807:45" pos:end="807:45">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="813:9" pos:end="827:9"><if pos:start="813:9" pos:end="823:9">if <condition pos:start="813:12" pos:end="813:49">(<expr pos:start="813:13" pos:end="813:48"><operator pos:start="813:13" pos:end="813:13">!</operator><call pos:start="813:14" pos:end="813:29"><name pos:start="813:14" pos:end="813:26">FIELD_PICTURE</name><argument_list pos:start="813:27" pos:end="813:29">(<argument pos:start="813:28" pos:end="813:28"><expr pos:start="813:28" pos:end="813:28"><name pos:start="813:28" pos:end="813:28">h</name></expr></argument>)</argument_list></call> <operator pos:start="813:31" pos:end="813:32">||</operator> <name pos:start="813:34" pos:end="813:48"><name pos:start="813:34" pos:end="813:35">h0</name><operator pos:start="813:36" pos:end="813:37">-&gt;</operator><name pos:start="813:38" pos:end="813:48">first_field</name></name></expr>)</condition> <block pos:start="813:51" pos:end="823:9">{<block_content pos:start="815:13" pos:end="821:13">

            <if_stmt pos:start="815:13" pos:end="821:13"><if pos:start="815:13" pos:end="821:13">if <condition pos:start="815:16" pos:end="815:40">(<expr pos:start="815:17" pos:end="815:39"><call pos:start="815:17" pos:end="815:35"><name pos:start="815:17" pos:end="815:32">h264_frame_start</name><argument_list pos:start="815:33" pos:end="815:35">(<argument pos:start="815:34" pos:end="815:34"><expr pos:start="815:34" pos:end="815:34"><name pos:start="815:34" pos:end="815:34">h</name></expr></argument>)</argument_list></call> <operator pos:start="815:37" pos:end="815:37">&lt;</operator> <literal type="number" pos:start="815:39" pos:end="815:39">0</literal></expr>)</condition> <block pos:start="815:42" pos:end="821:13">{<block_content pos:start="817:17" pos:end="819:43">

                <expr_stmt pos:start="817:17" pos:end="817:36"><expr pos:start="817:17" pos:end="817:35"><name pos:start="817:17" pos:end="817:31"><name pos:start="817:17" pos:end="817:18">h0</name><operator pos:start="817:19" pos:end="817:20">-&gt;</operator><name pos:start="817:21" pos:end="817:31">first_field</name></name> <operator pos:start="817:33" pos:end="817:33">=</operator> <literal type="number" pos:start="817:35" pos:end="817:35">0</literal></expr>;</expr_stmt>

                <return pos:start="819:17" pos:end="819:43">return <expr pos:start="819:24" pos:end="819:42"><name pos:start="819:24" pos:end="819:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="823:11" pos:end="827:9">else <block pos:start="823:16" pos:end="827:9">{<block_content pos:start="825:13" pos:end="825:42">

            <expr_stmt pos:start="825:13" pos:end="825:42"><expr pos:start="825:13" pos:end="825:41"><call pos:start="825:13" pos:end="825:41"><name pos:start="825:13" pos:end="825:35">release_unused_pictures</name><argument_list pos:start="825:36" pos:end="825:41">(<argument pos:start="825:37" pos:end="825:37"><expr pos:start="825:37" pos:end="825:37"><name pos:start="825:37" pos:end="825:37">h</name></expr></argument>, <argument pos:start="825:40" pos:end="825:40"><expr pos:start="825:40" pos:end="825:40"><literal type="number" pos:start="825:40" pos:end="825:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="829:9" pos:end="831:48">/* Some macroblocks can be accessed before they're available in case

        * of lost slices, MBAFF or threading. */</comment>

        <if_stmt pos:start="833:9" pos:end="845:9"><if pos:start="833:9" pos:end="839:9">if <condition pos:start="833:12" pos:end="833:29">(<expr pos:start="833:13" pos:end="833:28"><call pos:start="833:13" pos:end="833:28"><name pos:start="833:13" pos:end="833:25">FIELD_PICTURE</name><argument_list pos:start="833:26" pos:end="833:28">(<argument pos:start="833:27" pos:end="833:27"><expr pos:start="833:27" pos:end="833:27"><name pos:start="833:27" pos:end="833:27">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="833:31" pos:end="839:9">{<block_content pos:start="835:13" pos:end="837:124">

            <for pos:start="835:13" pos:end="837:124">for<control pos:start="835:16" pos:end="835:85">(<init pos:start="835:17" pos:end="835:64"><expr pos:start="835:17" pos:end="835:63"><name pos:start="835:17" pos:end="835:17">i</name> <operator pos:start="835:19" pos:end="835:19">=</operator> <operator pos:start="835:21" pos:end="835:21">(</operator><name pos:start="835:22" pos:end="835:41"><name pos:start="835:22" pos:end="835:22">h</name><operator pos:start="835:23" pos:end="835:24">-&gt;</operator><name pos:start="835:25" pos:end="835:41">picture_structure</name></name> <operator pos:start="835:43" pos:end="835:44">==</operator> <name pos:start="835:46" pos:end="835:62">PICT_BOTTOM_FIELD</name><operator pos:start="835:63" pos:end="835:63">)</operator></expr>;</init> <condition pos:start="835:66" pos:end="835:80"><expr pos:start="835:66" pos:end="835:79"><name pos:start="835:66" pos:end="835:66">i</name><operator pos:start="835:67" pos:end="835:67">&lt;</operator><name pos:start="835:68" pos:end="835:79"><name pos:start="835:68" pos:end="835:68">h</name><operator pos:start="835:69" pos:end="835:70">-&gt;</operator><name pos:start="835:71" pos:end="835:79">mb_height</name></name></expr>;</condition> <incr pos:start="835:82" pos:end="835:84"><expr pos:start="835:82" pos:end="835:84"><name pos:start="835:82" pos:end="835:82">i</name><operator pos:start="835:83" pos:end="835:84">++</operator></expr></incr>)</control><block type="pseudo" pos:start="837:17" pos:end="837:124"><block_content pos:start="837:17" pos:end="837:124">

                <expr_stmt pos:start="837:17" pos:end="837:124"><expr pos:start="837:17" pos:end="837:123"><call pos:start="837:17" pos:end="837:123"><name pos:start="837:17" pos:end="837:22">memset</name><argument_list pos:start="837:23" pos:end="837:123">(<argument pos:start="837:24" pos:end="837:54"><expr pos:start="837:24" pos:end="837:54"><name pos:start="837:24" pos:end="837:37"><name pos:start="837:24" pos:end="837:24">h</name><operator pos:start="837:25" pos:end="837:26">-&gt;</operator><name pos:start="837:27" pos:end="837:37">slice_table</name></name> <operator pos:start="837:39" pos:end="837:39">+</operator> <name pos:start="837:41" pos:end="837:41">i</name><operator pos:start="837:42" pos:end="837:42">*</operator><name pos:start="837:43" pos:end="837:54"><name pos:start="837:43" pos:end="837:43">h</name><operator pos:start="837:44" pos:end="837:45">-&gt;</operator><name pos:start="837:46" pos:end="837:54">mb_stride</name></name></expr></argument>, <argument pos:start="837:57" pos:end="837:58"><expr pos:start="837:57" pos:end="837:58"><operator pos:start="837:57" pos:end="837:57">-</operator><literal type="number" pos:start="837:58" pos:end="837:58">1</literal></expr></argument>, <argument pos:start="837:61" pos:end="837:122"><expr pos:start="837:61" pos:end="837:122"><operator pos:start="837:61" pos:end="837:61">(</operator><name pos:start="837:62" pos:end="837:73"><name pos:start="837:62" pos:end="837:62">h</name><operator pos:start="837:63" pos:end="837:64">-&gt;</operator><name pos:start="837:65" pos:end="837:73">mb_stride</name></name> <operator pos:start="837:75" pos:end="837:75">-</operator> <operator pos:start="837:77" pos:end="837:77">(</operator><name pos:start="837:78" pos:end="837:78">i</name><operator pos:start="837:79" pos:end="837:79">+</operator><literal type="number" pos:start="837:80" pos:end="837:80">1</literal><operator pos:start="837:81" pos:end="837:82">==</operator><name pos:start="837:83" pos:end="837:94"><name pos:start="837:83" pos:end="837:83">h</name><operator pos:start="837:84" pos:end="837:85">-&gt;</operator><name pos:start="837:86" pos:end="837:94">mb_height</name></name><operator pos:start="837:95" pos:end="837:95">)</operator><operator pos:start="837:96" pos:end="837:96">)</operator> <operator pos:start="837:98" pos:end="837:98">*</operator> <sizeof pos:start="837:100" pos:end="837:122">sizeof<argument_list pos:start="837:106" pos:end="837:122">(<argument pos:start="837:107" pos:end="837:121"><expr pos:start="837:107" pos:end="837:121"><operator pos:start="837:107" pos:end="837:107">*</operator><name pos:start="837:108" pos:end="837:121"><name pos:start="837:108" pos:end="837:108">h</name><operator pos:start="837:109" pos:end="837:110">-&gt;</operator><name pos:start="837:111" pos:end="837:121">slice_table</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if> <else pos:start="839:11" pos:end="845:9">else <block pos:start="839:16" pos:end="845:9">{<block_content pos:start="841:13" pos:end="843:77">

            <expr_stmt pos:start="841:13" pos:end="843:77"><expr pos:start="841:13" pos:end="843:76"><call pos:start="841:13" pos:end="843:76"><name pos:start="841:13" pos:end="841:18">memset</name><argument_list pos:start="841:19" pos:end="843:76">(<argument pos:start="841:20" pos:end="841:33"><expr pos:start="841:20" pos:end="841:33"><name pos:start="841:20" pos:end="841:33"><name pos:start="841:20" pos:end="841:20">h</name><operator pos:start="841:21" pos:end="841:22">-&gt;</operator><name pos:start="841:23" pos:end="841:33">slice_table</name></name></expr></argument>, <argument pos:start="841:36" pos:end="841:37"><expr pos:start="841:36" pos:end="841:37"><operator pos:start="841:36" pos:end="841:36">-</operator><literal type="number" pos:start="841:37" pos:end="841:37">1</literal></expr></argument>,

                <argument pos:start="843:17" pos:end="843:75"><expr pos:start="843:17" pos:end="843:75"><operator pos:start="843:17" pos:end="843:17">(</operator><name pos:start="843:18" pos:end="843:29"><name pos:start="843:18" pos:end="843:18">h</name><operator pos:start="843:19" pos:end="843:20">-&gt;</operator><name pos:start="843:21" pos:end="843:29">mb_height</name></name> <operator pos:start="843:31" pos:end="843:31">*</operator> <name pos:start="843:33" pos:end="843:44"><name pos:start="843:33" pos:end="843:33">h</name><operator pos:start="843:34" pos:end="843:35">-&gt;</operator><name pos:start="843:36" pos:end="843:44">mb_stride</name></name> <operator pos:start="843:46" pos:end="843:46">-</operator> <literal type="number" pos:start="843:48" pos:end="843:48">1</literal><operator pos:start="843:49" pos:end="843:49">)</operator> <operator pos:start="843:51" pos:end="843:51">*</operator> <sizeof pos:start="843:53" pos:end="843:75">sizeof<argument_list pos:start="843:59" pos:end="843:75">(<argument pos:start="843:60" pos:end="843:74"><expr pos:start="843:60" pos:end="843:74"><operator pos:start="843:60" pos:end="843:60">*</operator><name pos:start="843:61" pos:end="843:74"><name pos:start="843:61" pos:end="843:61">h</name><operator pos:start="843:62" pos:end="843:63">-&gt;</operator><name pos:start="843:64" pos:end="843:74">slice_table</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="847:9" pos:end="847:33"><expr pos:start="847:9" pos:end="847:32"><name pos:start="847:9" pos:end="847:27"><name pos:start="847:9" pos:end="847:10">h0</name><operator pos:start="847:11" pos:end="847:12">-&gt;</operator><name pos:start="847:13" pos:end="847:27">last_slice_type</name></name> <operator pos:start="847:29" pos:end="847:29">=</operator> <operator pos:start="847:31" pos:end="847:31">-</operator><literal type="number" pos:start="847:32" pos:end="847:32">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="851:5" pos:end="853:19"><if pos:start="851:5" pos:end="853:19">if <condition pos:start="851:8" pos:end="851:50">(<expr pos:start="851:9" pos:end="851:49"><name pos:start="851:9" pos:end="851:9">h</name> <operator pos:start="851:11" pos:end="851:12">!=</operator> <name pos:start="851:14" pos:end="851:15">h0</name> <operator pos:start="851:17" pos:end="851:18">&amp;&amp;</operator> <operator pos:start="851:20" pos:end="851:20">(</operator><name pos:start="851:21" pos:end="851:23">ret</name> <operator pos:start="851:25" pos:end="851:25">=</operator> <call pos:start="851:27" pos:end="851:44"><name pos:start="851:27" pos:end="851:37">clone_slice</name><argument_list pos:start="851:38" pos:end="851:44">(<argument pos:start="851:39" pos:end="851:39"><expr pos:start="851:39" pos:end="851:39"><name pos:start="851:39" pos:end="851:39">h</name></expr></argument>, <argument pos:start="851:42" pos:end="851:43"><expr pos:start="851:42" pos:end="851:43"><name pos:start="851:42" pos:end="851:43">h0</name></expr></argument>)</argument_list></call><operator pos:start="851:45" pos:end="851:45">)</operator> <operator pos:start="851:47" pos:end="851:47">&lt;</operator> <literal type="number" pos:start="851:49" pos:end="851:49">0</literal></expr>)</condition><block type="pseudo" pos:start="853:9" pos:end="853:19"><block_content pos:start="853:9" pos:end="853:19">

        <return pos:start="853:9" pos:end="853:19">return <expr pos:start="853:16" pos:end="853:18"><name pos:start="853:16" pos:end="853:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="857:5" pos:end="859:64">/* can't be in alloc_tables because linesize isn't known there.

     * FIXME: redo bipred weight to not require extra buffer? */</comment>

    <for pos:start="861:5" pos:end="871:9">for <control pos:start="861:9" pos:end="861:48">(<init pos:start="861:10" pos:end="861:15"><expr pos:start="861:10" pos:end="861:14"><name pos:start="861:10" pos:end="861:10">i</name> <operator pos:start="861:12" pos:end="861:12">=</operator> <literal type="number" pos:start="861:14" pos:end="861:14">0</literal></expr>;</init> <condition pos:start="861:17" pos:end="861:43"><expr pos:start="861:17" pos:end="861:42"><name pos:start="861:17" pos:end="861:17">i</name> <operator pos:start="861:19" pos:end="861:19">&lt;</operator> <name pos:start="861:21" pos:end="861:42"><name pos:start="861:21" pos:end="861:21">h</name><operator pos:start="861:22" pos:end="861:23">-&gt;</operator><name pos:start="861:24" pos:end="861:42">slice_context_count</name></name></expr>;</condition> <incr pos:start="861:45" pos:end="861:47"><expr pos:start="861:45" pos:end="861:47"><name pos:start="861:45" pos:end="861:45">i</name><operator pos:start="861:46" pos:end="861:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="863:9" pos:end="871:9"><block_content pos:start="863:9" pos:end="871:9">

        <if_stmt pos:start="863:9" pos:end="871:9"><if pos:start="863:9" pos:end="871:9">if <condition pos:start="863:12" pos:end="863:33">(<expr pos:start="863:13" pos:end="863:32"><name pos:start="863:13" pos:end="863:32"><name pos:start="863:13" pos:end="863:13">h</name><operator pos:start="863:14" pos:end="863:15">-&gt;</operator><name pos:start="863:16" pos:end="863:29">thread_context</name><index pos:start="863:30" pos:end="863:32">[<expr pos:start="863:31" pos:end="863:31"><name pos:start="863:31" pos:end="863:31">i</name></expr>]</index></name></expr>)</condition> <block pos:start="863:35" pos:end="871:9">{<block_content pos:start="865:13" pos:end="869:27">

            <expr_stmt pos:start="865:13" pos:end="865:75"><expr pos:start="865:13" pos:end="865:74"><name pos:start="865:13" pos:end="865:15">ret</name> <operator pos:start="865:17" pos:end="865:17">=</operator> <call pos:start="865:19" pos:end="865:74"><name pos:start="865:19" pos:end="865:39">alloc_scratch_buffers</name><argument_list pos:start="865:40" pos:end="865:74">(<argument pos:start="865:41" pos:end="865:60"><expr pos:start="865:41" pos:end="865:60"><name pos:start="865:41" pos:end="865:60"><name pos:start="865:41" pos:end="865:41">h</name><operator pos:start="865:42" pos:end="865:43">-&gt;</operator><name pos:start="865:44" pos:end="865:57">thread_context</name><index pos:start="865:58" pos:end="865:60">[<expr pos:start="865:59" pos:end="865:59"><name pos:start="865:59" pos:end="865:59">i</name></expr>]</index></name></expr></argument>, <argument pos:start="865:63" pos:end="865:73"><expr pos:start="865:63" pos:end="865:73"><name pos:start="865:63" pos:end="865:73"><name pos:start="865:63" pos:end="865:63">h</name><operator pos:start="865:64" pos:end="865:65">-&gt;</operator><name pos:start="865:66" pos:end="865:73">linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="867:13" pos:end="869:27"><if pos:start="867:13" pos:end="869:27">if <condition pos:start="867:16" pos:end="867:24">(<expr pos:start="867:17" pos:end="867:23"><name pos:start="867:17" pos:end="867:19">ret</name> <operator pos:start="867:21" pos:end="867:21">&lt;</operator> <literal type="number" pos:start="867:23" pos:end="867:23">0</literal></expr>)</condition><block type="pseudo" pos:start="869:17" pos:end="869:27"><block_content pos:start="869:17" pos:end="869:27">

                <return pos:start="869:17" pos:end="869:27">return <expr pos:start="869:24" pos:end="869:26"><name pos:start="869:24" pos:end="869:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></for>



    <expr_stmt pos:start="875:5" pos:end="875:45"><expr pos:start="875:5" pos:end="875:44"><name pos:start="875:5" pos:end="875:29"><name pos:start="875:5" pos:end="875:5">h</name><operator pos:start="875:6" pos:end="875:7">-&gt;</operator><name pos:start="875:8" pos:end="875:18">cur_pic_ptr</name><operator pos:start="875:19" pos:end="875:20">-&gt;</operator><name pos:start="875:21" pos:end="875:29">frame_num</name></name> <operator pos:start="875:31" pos:end="875:31">=</operator> <name pos:start="875:33" pos:end="875:44"><name pos:start="875:33" pos:end="875:33">h</name><operator pos:start="875:34" pos:end="875:35">-&gt;</operator><name pos:start="875:36" pos:end="875:44">frame_num</name></name></expr>;</expr_stmt> <comment type="line" pos:start="875:47" pos:end="875:72">// FIXME frame_num cleanup</comment>



    <expr_stmt pos:start="879:5" pos:end="879:56"><expr pos:start="879:5" pos:end="879:55"><call pos:start="879:5" pos:end="879:55"><name pos:start="879:5" pos:end="879:14">av_assert1</name><argument_list pos:start="879:15" pos:end="879:55">(<argument pos:start="879:16" pos:end="879:54"><expr pos:start="879:16" pos:end="879:54"><name pos:start="879:16" pos:end="879:24"><name pos:start="879:16" pos:end="879:16">h</name><operator pos:start="879:17" pos:end="879:18">-&gt;</operator><name pos:start="879:19" pos:end="879:24">mb_num</name></name> <operator pos:start="879:26" pos:end="879:27">==</operator> <name pos:start="879:29" pos:end="879:39"><name pos:start="879:29" pos:end="879:29">h</name><operator pos:start="879:30" pos:end="879:31">-&gt;</operator><name pos:start="879:32" pos:end="879:39">mb_width</name></name> <operator pos:start="879:41" pos:end="879:41">*</operator> <name pos:start="879:43" pos:end="879:54"><name pos:start="879:43" pos:end="879:43">h</name><operator pos:start="879:44" pos:end="879:45">-&gt;</operator><name pos:start="879:46" pos:end="879:54">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="881:5" pos:end="889:5"><if pos:start="881:5" pos:end="889:5">if <condition pos:start="881:8" pos:end="883:39">(<expr pos:start="881:9" pos:end="883:38"><name pos:start="881:9" pos:end="881:25">first_mb_in_slice</name> <operator pos:start="881:27" pos:end="881:28">&lt;&lt;</operator> <call pos:start="881:30" pos:end="881:54"><name pos:start="881:30" pos:end="881:51">FIELD_OR_MBAFF_PICTURE</name><argument_list pos:start="881:52" pos:end="881:54">(<argument pos:start="881:53" pos:end="881:53"><expr pos:start="881:53" pos:end="881:53"><name pos:start="881:53" pos:end="881:53">h</name></expr></argument>)</argument_list></call> <operator pos:start="881:56" pos:end="881:57">&gt;=</operator> <name pos:start="881:59" pos:end="881:67"><name pos:start="881:59" pos:end="881:59">h</name><operator pos:start="881:60" pos:end="881:61">-&gt;</operator><name pos:start="881:62" pos:end="881:67">mb_num</name></name> <operator pos:start="881:69" pos:end="881:70">||</operator>

        <name pos:start="883:9" pos:end="883:25">first_mb_in_slice</name> <operator pos:start="883:27" pos:end="883:28">&gt;=</operator> <name pos:start="883:30" pos:end="883:38"><name pos:start="883:30" pos:end="883:30">h</name><operator pos:start="883:31" pos:end="883:32">-&gt;</operator><name pos:start="883:33" pos:end="883:38">mb_num</name></name></expr>)</condition> <block pos:start="883:41" pos:end="889:5">{<block_content pos:start="885:9" pos:end="887:35">

        <expr_stmt pos:start="885:9" pos:end="885:71"><expr pos:start="885:9" pos:end="885:70"><call pos:start="885:9" pos:end="885:70"><name pos:start="885:9" pos:end="885:14">av_log</name><argument_list pos:start="885:15" pos:end="885:70">(<argument pos:start="885:16" pos:end="885:23"><expr pos:start="885:16" pos:end="885:23"><name pos:start="885:16" pos:end="885:23"><name pos:start="885:16" pos:end="885:16">h</name><operator pos:start="885:17" pos:end="885:18">-&gt;</operator><name pos:start="885:19" pos:end="885:23">avctx</name></name></expr></argument>, <argument pos:start="885:26" pos:end="885:37"><expr pos:start="885:26" pos:end="885:37"><name pos:start="885:26" pos:end="885:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="885:40" pos:end="885:69"><expr pos:start="885:40" pos:end="885:69"><literal type="string" pos:start="885:40" pos:end="885:69">"first_mb_in_slice overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="887:9" pos:end="887:35">return <expr pos:start="887:16" pos:end="887:34"><name pos:start="887:16" pos:end="887:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="891:5" pos:end="891:64"><expr pos:start="891:5" pos:end="891:63"><name pos:start="891:5" pos:end="891:18"><name pos:start="891:5" pos:end="891:5">h</name><operator pos:start="891:6" pos:end="891:7">-&gt;</operator><name pos:start="891:8" pos:end="891:18">resync_mb_x</name></name> <operator pos:start="891:20" pos:end="891:20">=</operator> <name pos:start="891:22" pos:end="891:28"><name pos:start="891:22" pos:end="891:22">h</name><operator pos:start="891:23" pos:end="891:24">-&gt;</operator><name pos:start="891:25" pos:end="891:28">mb_x</name></name> <operator pos:start="891:30" pos:end="891:30">=</operator>  <name pos:start="891:33" pos:end="891:49">first_mb_in_slice</name> <operator pos:start="891:51" pos:end="891:51">%</operator> <name pos:start="891:53" pos:end="891:63"><name pos:start="891:53" pos:end="891:53">h</name><operator pos:start="891:54" pos:end="891:55">-&gt;</operator><name pos:start="891:56" pos:end="891:63">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="893:5" pos:end="895:57"><expr pos:start="893:5" pos:end="895:56"><name pos:start="893:5" pos:end="893:18"><name pos:start="893:5" pos:end="893:5">h</name><operator pos:start="893:6" pos:end="893:7">-&gt;</operator><name pos:start="893:8" pos:end="893:18">resync_mb_y</name></name> <operator pos:start="893:20" pos:end="893:20">=</operator> <name pos:start="893:22" pos:end="893:28"><name pos:start="893:22" pos:end="893:22">h</name><operator pos:start="893:23" pos:end="893:24">-&gt;</operator><name pos:start="893:25" pos:end="893:28">mb_y</name></name> <operator pos:start="893:30" pos:end="893:30">=</operator> <operator pos:start="893:32" pos:end="893:32">(</operator><name pos:start="893:33" pos:end="893:49">first_mb_in_slice</name> <operator pos:start="893:51" pos:end="893:51">/</operator> <name pos:start="893:53" pos:end="893:63"><name pos:start="893:53" pos:end="893:53">h</name><operator pos:start="893:54" pos:end="893:55">-&gt;</operator><name pos:start="893:56" pos:end="893:63">mb_width</name></name><operator pos:start="893:64" pos:end="893:64">)</operator> <operator pos:start="893:66" pos:end="893:67">&lt;&lt;</operator>

                               <call pos:start="895:32" pos:end="895:56"><name pos:start="895:32" pos:end="895:53">FIELD_OR_MBAFF_PICTURE</name><argument_list pos:start="895:54" pos:end="895:56">(<argument pos:start="895:55" pos:end="895:55"><expr pos:start="895:55" pos:end="895:55"><name pos:start="895:55" pos:end="895:55">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="897:5" pos:end="899:47"><if pos:start="897:5" pos:end="899:47">if <condition pos:start="897:8" pos:end="897:50">(<expr pos:start="897:9" pos:end="897:49"><name pos:start="897:9" pos:end="897:28"><name pos:start="897:9" pos:end="897:9">h</name><operator pos:start="897:10" pos:end="897:11">-&gt;</operator><name pos:start="897:12" pos:end="897:28">picture_structure</name></name> <operator pos:start="897:30" pos:end="897:31">==</operator> <name pos:start="897:33" pos:end="897:49">PICT_BOTTOM_FIELD</name></expr>)</condition><block type="pseudo" pos:start="899:9" pos:end="899:47"><block_content pos:start="899:9" pos:end="899:47">

        <expr_stmt pos:start="899:9" pos:end="899:47"><expr pos:start="899:9" pos:end="899:46"><name pos:start="899:9" pos:end="899:22"><name pos:start="899:9" pos:end="899:9">h</name><operator pos:start="899:10" pos:end="899:11">-&gt;</operator><name pos:start="899:12" pos:end="899:22">resync_mb_y</name></name> <operator pos:start="899:24" pos:end="899:24">=</operator> <name pos:start="899:26" pos:end="899:32"><name pos:start="899:26" pos:end="899:26">h</name><operator pos:start="899:27" pos:end="899:28">-&gt;</operator><name pos:start="899:29" pos:end="899:32">mb_y</name></name> <operator pos:start="899:34" pos:end="899:34">=</operator> <name pos:start="899:36" pos:end="899:42"><name pos:start="899:36" pos:end="899:36">h</name><operator pos:start="899:37" pos:end="899:38">-&gt;</operator><name pos:start="899:39" pos:end="899:42">mb_y</name></name> <operator pos:start="899:44" pos:end="899:44">+</operator> <literal type="number" pos:start="899:46" pos:end="899:46">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="901:5" pos:end="901:39"><expr pos:start="901:5" pos:end="901:38"><call pos:start="901:5" pos:end="901:38"><name pos:start="901:5" pos:end="901:14">av_assert1</name><argument_list pos:start="901:15" pos:end="901:38">(<argument pos:start="901:16" pos:end="901:37"><expr pos:start="901:16" pos:end="901:37"><name pos:start="901:16" pos:end="901:22"><name pos:start="901:16" pos:end="901:16">h</name><operator pos:start="901:17" pos:end="901:18">-&gt;</operator><name pos:start="901:19" pos:end="901:22">mb_y</name></name> <operator pos:start="901:24" pos:end="901:24">&lt;</operator> <name pos:start="901:26" pos:end="901:37"><name pos:start="901:26" pos:end="901:26">h</name><operator pos:start="901:27" pos:end="901:28">-&gt;</operator><name pos:start="901:29" pos:end="901:37">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="905:5" pos:end="917:5"><if pos:start="905:5" pos:end="911:5">if <condition pos:start="905:8" pos:end="905:43">(<expr pos:start="905:9" pos:end="905:42"><name pos:start="905:9" pos:end="905:28"><name pos:start="905:9" pos:end="905:9">h</name><operator pos:start="905:10" pos:end="905:11">-&gt;</operator><name pos:start="905:12" pos:end="905:28">picture_structure</name></name> <operator pos:start="905:30" pos:end="905:31">==</operator> <name pos:start="905:33" pos:end="905:42">PICT_FRAME</name></expr>)</condition> <block pos:start="905:45" pos:end="911:5">{<block_content pos:start="907:9" pos:end="909:57">

        <expr_stmt pos:start="907:9" pos:end="907:39"><expr pos:start="907:9" pos:end="907:38"><name pos:start="907:9" pos:end="907:23"><name pos:start="907:9" pos:end="907:9">h</name><operator pos:start="907:10" pos:end="907:11">-&gt;</operator><name pos:start="907:12" pos:end="907:23">curr_pic_num</name></name> <operator pos:start="907:25" pos:end="907:25">=</operator> <name pos:start="907:27" pos:end="907:38"><name pos:start="907:27" pos:end="907:27">h</name><operator pos:start="907:28" pos:end="907:29">-&gt;</operator><name pos:start="907:30" pos:end="907:38">frame_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="909:9" pos:end="909:57"><expr pos:start="909:9" pos:end="909:56"><name pos:start="909:9" pos:end="909:22"><name pos:start="909:9" pos:end="909:9">h</name><operator pos:start="909:10" pos:end="909:11">-&gt;</operator><name pos:start="909:12" pos:end="909:22">max_pic_num</name></name>  <operator pos:start="909:25" pos:end="909:25">=</operator> <literal type="number" pos:start="909:27" pos:end="909:27">1</literal> <operator pos:start="909:29" pos:end="909:30">&lt;&lt;</operator> <name pos:start="909:32" pos:end="909:56"><name pos:start="909:32" pos:end="909:32">h</name><operator pos:start="909:33" pos:end="909:34">-&gt;</operator><name pos:start="909:35" pos:end="909:37">sps</name><operator pos:start="909:38" pos:end="909:38">.</operator><name pos:start="909:39" pos:end="909:56">log2_max_frame_num</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="911:7" pos:end="917:5">else <block pos:start="911:12" pos:end="917:5">{<block_content pos:start="913:9" pos:end="915:63">

        <expr_stmt pos:start="913:9" pos:end="913:47"><expr pos:start="913:9" pos:end="913:46"><name pos:start="913:9" pos:end="913:23"><name pos:start="913:9" pos:end="913:9">h</name><operator pos:start="913:10" pos:end="913:11">-&gt;</operator><name pos:start="913:12" pos:end="913:23">curr_pic_num</name></name> <operator pos:start="913:25" pos:end="913:25">=</operator> <literal type="number" pos:start="913:27" pos:end="913:27">2</literal> <operator pos:start="913:29" pos:end="913:29">*</operator> <name pos:start="913:31" pos:end="913:42"><name pos:start="913:31" pos:end="913:31">h</name><operator pos:start="913:32" pos:end="913:33">-&gt;</operator><name pos:start="913:34" pos:end="913:42">frame_num</name></name> <operator pos:start="913:44" pos:end="913:44">+</operator> <literal type="number" pos:start="913:46" pos:end="913:46">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="915:9" pos:end="915:63"><expr pos:start="915:9" pos:end="915:62"><name pos:start="915:9" pos:end="915:22"><name pos:start="915:9" pos:end="915:9">h</name><operator pos:start="915:10" pos:end="915:11">-&gt;</operator><name pos:start="915:12" pos:end="915:22">max_pic_num</name></name>  <operator pos:start="915:25" pos:end="915:25">=</operator> <literal type="number" pos:start="915:27" pos:end="915:27">1</literal> <operator pos:start="915:29" pos:end="915:30">&lt;&lt;</operator> <operator pos:start="915:32" pos:end="915:32">(</operator><name pos:start="915:33" pos:end="915:57"><name pos:start="915:33" pos:end="915:33">h</name><operator pos:start="915:34" pos:end="915:35">-&gt;</operator><name pos:start="915:36" pos:end="915:38">sps</name><operator pos:start="915:39" pos:end="915:39">.</operator><name pos:start="915:40" pos:end="915:57">log2_max_frame_num</name></name> <operator pos:start="915:59" pos:end="915:59">+</operator> <literal type="number" pos:start="915:61" pos:end="915:61">1</literal><operator pos:start="915:62" pos:end="915:62">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="921:5" pos:end="923:30"><if pos:start="921:5" pos:end="923:30">if <condition pos:start="921:8" pos:end="921:42">(<expr pos:start="921:9" pos:end="921:41"><name pos:start="921:9" pos:end="921:24"><name pos:start="921:9" pos:end="921:9">h</name><operator pos:start="921:10" pos:end="921:11">-&gt;</operator><name pos:start="921:12" pos:end="921:24">nal_unit_type</name></name> <operator pos:start="921:26" pos:end="921:27">==</operator> <name pos:start="921:29" pos:end="921:41">NAL_IDR_SLICE</name></expr>)</condition><block type="pseudo" pos:start="923:9" pos:end="923:30"><block_content pos:start="923:9" pos:end="923:30">

        <expr_stmt pos:start="923:9" pos:end="923:30"><expr pos:start="923:9" pos:end="923:29"><call pos:start="923:9" pos:end="923:29"><name pos:start="923:9" pos:end="923:21">get_ue_golomb</name><argument_list pos:start="923:22" pos:end="923:29">(<argument pos:start="923:23" pos:end="923:28"><expr pos:start="923:23" pos:end="923:28"><operator pos:start="923:23" pos:end="923:23">&amp;</operator><name pos:start="923:24" pos:end="923:28"><name pos:start="923:24" pos:end="923:24">h</name><operator pos:start="923:25" pos:end="923:26">-&gt;</operator><name pos:start="923:27" pos:end="923:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="923:32" pos:end="923:47">/* idr_pic_id */</comment>



    <if_stmt pos:start="927:5" pos:end="937:5"><if pos:start="927:5" pos:end="937:5">if <condition pos:start="927:8" pos:end="927:29">(<expr pos:start="927:9" pos:end="927:28"><name pos:start="927:9" pos:end="927:23"><name pos:start="927:9" pos:end="927:9">h</name><operator pos:start="927:10" pos:end="927:11">-&gt;</operator><name pos:start="927:12" pos:end="927:14">sps</name><operator pos:start="927:15" pos:end="927:15">.</operator><name pos:start="927:16" pos:end="927:23">poc_type</name></name> <operator pos:start="927:25" pos:end="927:26">==</operator> <literal type="number" pos:start="927:28" pos:end="927:28">0</literal></expr>)</condition> <block pos:start="927:31" pos:end="937:5">{<block_content pos:start="929:9" pos:end="935:56">

        <expr_stmt pos:start="929:9" pos:end="929:63"><expr pos:start="929:9" pos:end="929:62"><name pos:start="929:9" pos:end="929:18"><name pos:start="929:9" pos:end="929:9">h</name><operator pos:start="929:10" pos:end="929:11">-&gt;</operator><name pos:start="929:12" pos:end="929:18">poc_lsb</name></name> <operator pos:start="929:20" pos:end="929:20">=</operator> <call pos:start="929:22" pos:end="929:62"><name pos:start="929:22" pos:end="929:29">get_bits</name><argument_list pos:start="929:30" pos:end="929:62">(<argument pos:start="929:31" pos:end="929:36"><expr pos:start="929:31" pos:end="929:36"><operator pos:start="929:31" pos:end="929:31">&amp;</operator><name pos:start="929:32" pos:end="929:36"><name pos:start="929:32" pos:end="929:32">h</name><operator pos:start="929:33" pos:end="929:34">-&gt;</operator><name pos:start="929:35" pos:end="929:36">gb</name></name></expr></argument>, <argument pos:start="929:39" pos:end="929:61"><expr pos:start="929:39" pos:end="929:61"><name pos:start="929:39" pos:end="929:61"><name pos:start="929:39" pos:end="929:39">h</name><operator pos:start="929:40" pos:end="929:41">-&gt;</operator><name pos:start="929:42" pos:end="929:44">sps</name><operator pos:start="929:45" pos:end="929:45">.</operator><name pos:start="929:46" pos:end="929:61">log2_max_poc_lsb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="933:9" pos:end="935:56"><if pos:start="933:9" pos:end="935:56">if <condition pos:start="933:12" pos:end="933:80">(<expr pos:start="933:13" pos:end="933:79"><name pos:start="933:13" pos:end="933:36"><name pos:start="933:13" pos:end="933:13">h</name><operator pos:start="933:14" pos:end="933:15">-&gt;</operator><name pos:start="933:16" pos:end="933:18">pps</name><operator pos:start="933:19" pos:end="933:19">.</operator><name pos:start="933:20" pos:end="933:36">pic_order_present</name></name> <operator pos:start="933:38" pos:end="933:39">==</operator> <literal type="number" pos:start="933:41" pos:end="933:41">1</literal> <operator pos:start="933:43" pos:end="933:44">&amp;&amp;</operator> <name pos:start="933:46" pos:end="933:65"><name pos:start="933:46" pos:end="933:46">h</name><operator pos:start="933:47" pos:end="933:48">-&gt;</operator><name pos:start="933:49" pos:end="933:65">picture_structure</name></name> <operator pos:start="933:67" pos:end="933:68">==</operator> <name pos:start="933:70" pos:end="933:79">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="935:13" pos:end="935:56"><block_content pos:start="935:13" pos:end="935:56">

            <expr_stmt pos:start="935:13" pos:end="935:56"><expr pos:start="935:13" pos:end="935:55"><name pos:start="935:13" pos:end="935:31"><name pos:start="935:13" pos:end="935:13">h</name><operator pos:start="935:14" pos:end="935:15">-&gt;</operator><name pos:start="935:16" pos:end="935:31">delta_poc_bottom</name></name> <operator pos:start="935:33" pos:end="935:33">=</operator> <call pos:start="935:35" pos:end="935:55"><name pos:start="935:35" pos:end="935:47">get_se_golomb</name><argument_list pos:start="935:48" pos:end="935:55">(<argument pos:start="935:49" pos:end="935:54"><expr pos:start="935:49" pos:end="935:54"><operator pos:start="935:49" pos:end="935:49">&amp;</operator><name pos:start="935:50" pos:end="935:54"><name pos:start="935:50" pos:end="935:50">h</name><operator pos:start="935:51" pos:end="935:52">-&gt;</operator><name pos:start="935:53" pos:end="935:54">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="941:5" pos:end="951:5"><if pos:start="941:5" pos:end="951:5">if <condition pos:start="941:8" pos:end="941:73">(<expr pos:start="941:9" pos:end="941:72"><name pos:start="941:9" pos:end="941:23"><name pos:start="941:9" pos:end="941:9">h</name><operator pos:start="941:10" pos:end="941:11">-&gt;</operator><name pos:start="941:12" pos:end="941:14">sps</name><operator pos:start="941:15" pos:end="941:15">.</operator><name pos:start="941:16" pos:end="941:23">poc_type</name></name> <operator pos:start="941:25" pos:end="941:26">==</operator> <literal type="number" pos:start="941:28" pos:end="941:28">1</literal> <operator pos:start="941:30" pos:end="941:31">&amp;&amp;</operator> <operator pos:start="941:33" pos:end="941:33">!</operator><name pos:start="941:34" pos:end="941:72"><name pos:start="941:34" pos:end="941:34">h</name><operator pos:start="941:35" pos:end="941:36">-&gt;</operator><name pos:start="941:37" pos:end="941:39">sps</name><operator pos:start="941:40" pos:end="941:40">.</operator><name pos:start="941:41" pos:end="941:72">delta_pic_order_always_zero_flag</name></name></expr>)</condition> <block pos:start="941:75" pos:end="951:5">{<block_content pos:start="943:9" pos:end="949:52">

        <expr_stmt pos:start="943:9" pos:end="943:48"><expr pos:start="943:9" pos:end="943:47"><name pos:start="943:9" pos:end="943:23"><name pos:start="943:9" pos:end="943:9">h</name><operator pos:start="943:10" pos:end="943:11">-&gt;</operator><name pos:start="943:12" pos:end="943:20">delta_poc</name><index pos:start="943:21" pos:end="943:23">[<expr pos:start="943:22" pos:end="943:22"><literal type="number" pos:start="943:22" pos:end="943:22">0</literal></expr>]</index></name> <operator pos:start="943:25" pos:end="943:25">=</operator> <call pos:start="943:27" pos:end="943:47"><name pos:start="943:27" pos:end="943:39">get_se_golomb</name><argument_list pos:start="943:40" pos:end="943:47">(<argument pos:start="943:41" pos:end="943:46"><expr pos:start="943:41" pos:end="943:46"><operator pos:start="943:41" pos:end="943:41">&amp;</operator><name pos:start="943:42" pos:end="943:46"><name pos:start="943:42" pos:end="943:42">h</name><operator pos:start="943:43" pos:end="943:44">-&gt;</operator><name pos:start="943:45" pos:end="943:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="947:9" pos:end="949:52"><if pos:start="947:9" pos:end="949:52">if <condition pos:start="947:12" pos:end="947:80">(<expr pos:start="947:13" pos:end="947:79"><name pos:start="947:13" pos:end="947:36"><name pos:start="947:13" pos:end="947:13">h</name><operator pos:start="947:14" pos:end="947:15">-&gt;</operator><name pos:start="947:16" pos:end="947:18">pps</name><operator pos:start="947:19" pos:end="947:19">.</operator><name pos:start="947:20" pos:end="947:36">pic_order_present</name></name> <operator pos:start="947:38" pos:end="947:39">==</operator> <literal type="number" pos:start="947:41" pos:end="947:41">1</literal> <operator pos:start="947:43" pos:end="947:44">&amp;&amp;</operator> <name pos:start="947:46" pos:end="947:65"><name pos:start="947:46" pos:end="947:46">h</name><operator pos:start="947:47" pos:end="947:48">-&gt;</operator><name pos:start="947:49" pos:end="947:65">picture_structure</name></name> <operator pos:start="947:67" pos:end="947:68">==</operator> <name pos:start="947:70" pos:end="947:79">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="949:13" pos:end="949:52"><block_content pos:start="949:13" pos:end="949:52">

            <expr_stmt pos:start="949:13" pos:end="949:52"><expr pos:start="949:13" pos:end="949:51"><name pos:start="949:13" pos:end="949:27"><name pos:start="949:13" pos:end="949:13">h</name><operator pos:start="949:14" pos:end="949:15">-&gt;</operator><name pos:start="949:16" pos:end="949:24">delta_poc</name><index pos:start="949:25" pos:end="949:27">[<expr pos:start="949:26" pos:end="949:26"><literal type="number" pos:start="949:26" pos:end="949:26">1</literal></expr>]</index></name> <operator pos:start="949:29" pos:end="949:29">=</operator> <call pos:start="949:31" pos:end="949:51"><name pos:start="949:31" pos:end="949:43">get_se_golomb</name><argument_list pos:start="949:44" pos:end="949:51">(<argument pos:start="949:45" pos:end="949:50"><expr pos:start="949:45" pos:end="949:50"><operator pos:start="949:45" pos:end="949:45">&amp;</operator><name pos:start="949:46" pos:end="949:50"><name pos:start="949:46" pos:end="949:46">h</name><operator pos:start="949:47" pos:end="949:48">-&gt;</operator><name pos:start="949:49" pos:end="949:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="955:5" pos:end="955:68"><expr pos:start="955:5" pos:end="955:67"><call pos:start="955:5" pos:end="955:67"><name pos:start="955:5" pos:end="955:15">ff_init_poc</name><argument_list pos:start="955:16" pos:end="955:67">(<argument pos:start="955:17" pos:end="955:17"><expr pos:start="955:17" pos:end="955:17"><name pos:start="955:17" pos:end="955:17">h</name></expr></argument>, <argument pos:start="955:20" pos:end="955:44"><expr pos:start="955:20" pos:end="955:44"><name pos:start="955:20" pos:end="955:44"><name pos:start="955:20" pos:end="955:20">h</name><operator pos:start="955:21" pos:end="955:22">-&gt;</operator><name pos:start="955:23" pos:end="955:33">cur_pic_ptr</name><operator pos:start="955:34" pos:end="955:35">-&gt;</operator><name pos:start="955:36" pos:end="955:44">field_poc</name></name></expr></argument>, <argument pos:start="955:47" pos:end="955:66"><expr pos:start="955:47" pos:end="955:66"><operator pos:start="955:47" pos:end="955:47">&amp;</operator><name pos:start="955:48" pos:end="955:66"><name pos:start="955:48" pos:end="955:48">h</name><operator pos:start="955:49" pos:end="955:50">-&gt;</operator><name pos:start="955:51" pos:end="955:61">cur_pic_ptr</name><operator pos:start="955:62" pos:end="955:63">-&gt;</operator><name pos:start="955:64" pos:end="955:66">poc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="959:5" pos:end="961:55"><if pos:start="959:5" pos:end="961:55">if <condition pos:start="959:8" pos:end="959:41">(<expr pos:start="959:9" pos:end="959:40"><name pos:start="959:9" pos:end="959:40"><name pos:start="959:9" pos:end="959:9">h</name><operator pos:start="959:10" pos:end="959:11">-&gt;</operator><name pos:start="959:12" pos:end="959:14">pps</name><operator pos:start="959:15" pos:end="959:15">.</operator><name pos:start="959:16" pos:end="959:40">redundant_pic_cnt_present</name></name></expr>)</condition><block type="pseudo" pos:start="961:9" pos:end="961:55"><block_content pos:start="961:9" pos:end="961:55">

        <expr_stmt pos:start="961:9" pos:end="961:55"><expr pos:start="961:9" pos:end="961:54"><name pos:start="961:9" pos:end="961:30"><name pos:start="961:9" pos:end="961:9">h</name><operator pos:start="961:10" pos:end="961:11">-&gt;</operator><name pos:start="961:12" pos:end="961:30">redundant_pic_count</name></name> <operator pos:start="961:32" pos:end="961:32">=</operator> <call pos:start="961:34" pos:end="961:54"><name pos:start="961:34" pos:end="961:46">get_ue_golomb</name><argument_list pos:start="961:47" pos:end="961:54">(<argument pos:start="961:48" pos:end="961:53"><expr pos:start="961:48" pos:end="961:53"><operator pos:start="961:48" pos:end="961:48">&amp;</operator><name pos:start="961:49" pos:end="961:53"><name pos:start="961:49" pos:end="961:49">h</name><operator pos:start="961:50" pos:end="961:51">-&gt;</operator><name pos:start="961:52" pos:end="961:53">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="965:5" pos:end="965:30"><expr pos:start="965:5" pos:end="965:29"><name pos:start="965:5" pos:end="965:7">ret</name> <operator pos:start="965:9" pos:end="965:9">=</operator> <call pos:start="965:11" pos:end="965:29"><name pos:start="965:11" pos:end="965:26">ff_set_ref_count</name><argument_list pos:start="965:27" pos:end="965:29">(<argument pos:start="965:28" pos:end="965:28"><expr pos:start="965:28" pos:end="965:28"><name pos:start="965:28" pos:end="965:28">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="967:5" pos:end="969:19"><if pos:start="967:5" pos:end="969:19">if <condition pos:start="967:8" pos:end="967:16">(<expr pos:start="967:9" pos:end="967:15"><name pos:start="967:9" pos:end="967:11">ret</name> <operator pos:start="967:13" pos:end="967:13">&lt;</operator> <literal type="number" pos:start="967:15" pos:end="967:15">0</literal></expr>)</condition><block type="pseudo" pos:start="969:9" pos:end="969:19"><block_content pos:start="969:9" pos:end="969:19">

        <return pos:start="969:9" pos:end="969:19">return <expr pos:start="969:16" pos:end="969:18"><name pos:start="969:16" pos:end="969:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="973:5" pos:end="985:5"><if pos:start="973:5" pos:end="985:5">if <condition pos:start="973:8" pos:end="979:75">(<expr pos:start="973:9" pos:end="979:74"><name pos:start="973:9" pos:end="973:18">slice_type</name> <operator pos:start="973:20" pos:end="973:21">!=</operator> <name pos:start="973:23" pos:end="973:39">AV_PICTURE_TYPE_I</name> <operator pos:start="973:41" pos:end="973:42">&amp;&amp;</operator>

        <operator pos:start="975:9" pos:end="975:9">(</operator><name pos:start="975:10" pos:end="975:26"><name pos:start="975:10" pos:end="975:11">h0</name><operator pos:start="975:12" pos:end="975:13">-&gt;</operator><name pos:start="975:14" pos:end="975:26">current_slice</name></name> <operator pos:start="975:28" pos:end="975:29">==</operator> <literal type="number" pos:start="975:31" pos:end="975:31">0</literal> <operator pos:start="975:33" pos:end="975:34">||</operator>

         <name pos:start="977:10" pos:end="977:19">slice_type</name> <operator pos:start="977:21" pos:end="977:22">!=</operator> <name pos:start="977:24" pos:end="977:42"><name pos:start="977:24" pos:end="977:25">h0</name><operator pos:start="977:26" pos:end="977:27">-&gt;</operator><name pos:start="977:28" pos:end="977:42">last_slice_type</name></name> <operator pos:start="977:44" pos:end="977:45">||</operator>

         <call pos:start="979:10" pos:end="979:73"><name pos:start="979:10" pos:end="979:15">memcmp</name><argument_list pos:start="979:16" pos:end="979:73">(<argument pos:start="979:17" pos:end="979:34"><expr pos:start="979:17" pos:end="979:34"><name pos:start="979:17" pos:end="979:34"><name pos:start="979:17" pos:end="979:18">h0</name><operator pos:start="979:19" pos:end="979:20">-&gt;</operator><name pos:start="979:21" pos:end="979:34">last_ref_count</name></name></expr></argument>, <argument pos:start="979:37" pos:end="979:49"><expr pos:start="979:37" pos:end="979:49"><name pos:start="979:37" pos:end="979:49"><name pos:start="979:37" pos:end="979:38">h0</name><operator pos:start="979:39" pos:end="979:40">-&gt;</operator><name pos:start="979:41" pos:end="979:49">ref_count</name></name></expr></argument>, <argument pos:start="979:52" pos:end="979:72"><expr pos:start="979:52" pos:end="979:72"><sizeof pos:start="979:52" pos:end="979:72">sizeof<argument_list pos:start="979:58" pos:end="979:72">(<argument pos:start="979:59" pos:end="979:71"><expr pos:start="979:59" pos:end="979:71"><name pos:start="979:59" pos:end="979:71"><name pos:start="979:59" pos:end="979:60">h0</name><operator pos:start="979:61" pos:end="979:62">-&gt;</operator><name pos:start="979:63" pos:end="979:71">ref_count</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="979:74" pos:end="979:74">)</operator></expr>)</condition> <block pos:start="979:77" pos:end="985:5">{<block_content pos:start="983:9" pos:end="983:41">



        <expr_stmt pos:start="983:9" pos:end="983:41"><expr pos:start="983:9" pos:end="983:40"><call pos:start="983:9" pos:end="983:40"><name pos:start="983:9" pos:end="983:37">ff_h264_fill_default_ref_list</name><argument_list pos:start="983:38" pos:end="983:40">(<argument pos:start="983:39" pos:end="983:39"><expr pos:start="983:39" pos:end="983:39"><name pos:start="983:39" pos:end="983:39">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="989:5" pos:end="1001:5"><if pos:start="989:5" pos:end="1001:5">if <condition pos:start="989:8" pos:end="989:47">(<expr pos:start="989:9" pos:end="989:46"><name pos:start="989:9" pos:end="989:25"><name pos:start="989:9" pos:end="989:9">h</name><operator pos:start="989:10" pos:end="989:11">-&gt;</operator><name pos:start="989:12" pos:end="989:25">slice_type_nos</name></name> <operator pos:start="989:27" pos:end="989:28">!=</operator> <name pos:start="989:30" pos:end="989:46">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="989:49" pos:end="1001:5">{<block_content pos:start="991:8" pos:end="999:8">

       <expr_stmt pos:start="991:8" pos:end="991:55"><expr pos:start="991:8" pos:end="991:54"><name pos:start="991:8" pos:end="991:10">ret</name> <operator pos:start="991:12" pos:end="991:12">=</operator> <call pos:start="991:14" pos:end="991:54"><name pos:start="991:14" pos:end="991:51">ff_h264_decode_ref_pic_list_reordering</name><argument_list pos:start="991:52" pos:end="991:54">(<argument pos:start="991:53" pos:end="991:53"><expr pos:start="991:53" pos:end="991:53"><name pos:start="991:53" pos:end="991:53">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

       <if_stmt pos:start="993:8" pos:end="999:8"><if pos:start="993:8" pos:end="999:8">if <condition pos:start="993:11" pos:end="993:19">(<expr pos:start="993:12" pos:end="993:18"><name pos:start="993:12" pos:end="993:14">ret</name> <operator pos:start="993:16" pos:end="993:16">&lt;</operator> <literal type="number" pos:start="993:18" pos:end="993:18">0</literal></expr>)</condition> <block pos:start="993:21" pos:end="999:8">{<block_content pos:start="995:12" pos:end="997:22">

           <expr_stmt pos:start="995:12" pos:end="995:49"><expr pos:start="995:12" pos:end="995:48"><name pos:start="995:12" pos:end="995:26"><name pos:start="995:12" pos:end="995:12">h</name><operator pos:start="995:13" pos:end="995:14">-&gt;</operator><name pos:start="995:15" pos:end="995:23">ref_count</name><index pos:start="995:24" pos:end="995:26">[<expr pos:start="995:25" pos:end="995:25"><literal type="number" pos:start="995:25" pos:end="995:25">1</literal></expr>]</index></name> <operator pos:start="995:28" pos:end="995:28">=</operator> <name pos:start="995:30" pos:end="995:44"><name pos:start="995:30" pos:end="995:30">h</name><operator pos:start="995:31" pos:end="995:32">-&gt;</operator><name pos:start="995:33" pos:end="995:41">ref_count</name><index pos:start="995:42" pos:end="995:44">[<expr pos:start="995:43" pos:end="995:43"><literal type="number" pos:start="995:43" pos:end="995:43">0</literal></expr>]</index></name> <operator pos:start="995:46" pos:end="995:46">=</operator> <literal type="number" pos:start="995:48" pos:end="995:48">0</literal></expr>;</expr_stmt>

           <return pos:start="997:12" pos:end="997:22">return <expr pos:start="997:19" pos:end="997:21"><name pos:start="997:19" pos:end="997:21">ret</name></expr>;</return>

       </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1005:5" pos:end="1031:5"><if pos:start="1005:5" pos:end="1011:32">if <condition pos:start="1005:8" pos:end="1009:49">(<expr pos:start="1005:9" pos:end="1009:48"><operator pos:start="1005:9" pos:end="1005:9">(</operator><name pos:start="1005:10" pos:end="1005:29"><name pos:start="1005:10" pos:end="1005:10">h</name><operator pos:start="1005:11" pos:end="1005:12">-&gt;</operator><name pos:start="1005:13" pos:end="1005:15">pps</name><operator pos:start="1005:16" pos:end="1005:16">.</operator><name pos:start="1005:17" pos:end="1005:29">weighted_pred</name></name> <operator pos:start="1005:31" pos:end="1005:32">&amp;&amp;</operator> <name pos:start="1005:34" pos:end="1005:50"><name pos:start="1005:34" pos:end="1005:34">h</name><operator pos:start="1005:35" pos:end="1005:36">-&gt;</operator><name pos:start="1005:37" pos:end="1005:50">slice_type_nos</name></name> <operator pos:start="1005:52" pos:end="1005:53">==</operator> <name pos:start="1005:55" pos:end="1005:71">AV_PICTURE_TYPE_P</name><operator pos:start="1005:72" pos:end="1005:72">)</operator> <operator pos:start="1005:74" pos:end="1005:75">||</operator>

        <operator pos:start="1007:9" pos:end="1007:9">(</operator><name pos:start="1007:10" pos:end="1007:35"><name pos:start="1007:10" pos:end="1007:10">h</name><operator pos:start="1007:11" pos:end="1007:12">-&gt;</operator><name pos:start="1007:13" pos:end="1007:15">pps</name><operator pos:start="1007:16" pos:end="1007:16">.</operator><name pos:start="1007:17" pos:end="1007:35">weighted_bipred_idc</name></name> <operator pos:start="1007:37" pos:end="1007:38">==</operator> <literal type="number" pos:start="1007:40" pos:end="1007:40">1</literal> <operator pos:start="1007:42" pos:end="1007:43">&amp;&amp;</operator>

         <name pos:start="1009:10" pos:end="1009:26"><name pos:start="1009:10" pos:end="1009:10">h</name><operator pos:start="1009:11" pos:end="1009:12">-&gt;</operator><name pos:start="1009:13" pos:end="1009:26">slice_type_nos</name></name> <operator pos:start="1009:28" pos:end="1009:29">==</operator> <name pos:start="1009:31" pos:end="1009:47">AV_PICTURE_TYPE_B</name><operator pos:start="1009:48" pos:end="1009:48">)</operator></expr>)</condition><block type="pseudo" pos:start="1011:9" pos:end="1011:32"><block_content pos:start="1011:9" pos:end="1011:32">

        <expr_stmt pos:start="1011:9" pos:end="1011:32"><expr pos:start="1011:9" pos:end="1011:31"><call pos:start="1011:9" pos:end="1011:31"><name pos:start="1011:9" pos:end="1011:28">ff_pred_weight_table</name><argument_list pos:start="1011:29" pos:end="1011:31">(<argument pos:start="1011:30" pos:end="1011:30"><expr pos:start="1011:30" pos:end="1011:30"><name pos:start="1011:30" pos:end="1011:30">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="1013:5" pos:end="1019:5">else if <condition pos:start="1013:13" pos:end="1015:52">(<expr pos:start="1013:14" pos:end="1015:51"><name pos:start="1013:14" pos:end="1013:39"><name pos:start="1013:14" pos:end="1013:14">h</name><operator pos:start="1013:15" pos:end="1013:16">-&gt;</operator><name pos:start="1013:17" pos:end="1013:19">pps</name><operator pos:start="1013:20" pos:end="1013:20">.</operator><name pos:start="1013:21" pos:end="1013:39">weighted_bipred_idc</name></name> <operator pos:start="1013:41" pos:end="1013:42">==</operator> <literal type="number" pos:start="1013:44" pos:end="1013:44">2</literal> <operator pos:start="1013:46" pos:end="1013:47">&amp;&amp;</operator>

             <name pos:start="1015:14" pos:end="1015:30"><name pos:start="1015:14" pos:end="1015:14">h</name><operator pos:start="1015:15" pos:end="1015:16">-&gt;</operator><name pos:start="1015:17" pos:end="1015:30">slice_type_nos</name></name> <operator pos:start="1015:32" pos:end="1015:33">==</operator> <name pos:start="1015:35" pos:end="1015:51">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="1015:54" pos:end="1019:5">{<block_content pos:start="1017:9" pos:end="1017:37">

        <expr_stmt pos:start="1017:9" pos:end="1017:37"><expr pos:start="1017:9" pos:end="1017:36"><call pos:start="1017:9" pos:end="1017:36"><name pos:start="1017:9" pos:end="1017:29">implicit_weight_table</name><argument_list pos:start="1017:30" pos:end="1017:36">(<argument pos:start="1017:31" pos:end="1017:31"><expr pos:start="1017:31" pos:end="1017:31"><name pos:start="1017:31" pos:end="1017:31">h</name></expr></argument>, <argument pos:start="1017:34" pos:end="1017:35"><expr pos:start="1017:34" pos:end="1017:35"><operator pos:start="1017:34" pos:end="1017:34">-</operator><literal type="number" pos:start="1017:35" pos:end="1017:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="1019:7" pos:end="1031:5">else <block pos:start="1019:12" pos:end="1031:5">{<block_content pos:start="1021:9" pos:end="1029:9">

        <expr_stmt pos:start="1021:9" pos:end="1021:26"><expr pos:start="1021:9" pos:end="1021:25"><name pos:start="1021:9" pos:end="1021:21"><name pos:start="1021:9" pos:end="1021:9">h</name><operator pos:start="1021:10" pos:end="1021:11">-&gt;</operator><name pos:start="1021:12" pos:end="1021:21">use_weight</name></name> <operator pos:start="1021:23" pos:end="1021:23">=</operator> <literal type="number" pos:start="1021:25" pos:end="1021:25">0</literal></expr>;</expr_stmt>

        <for pos:start="1023:9" pos:end="1029:9">for <control pos:start="1023:13" pos:end="1023:31">(<init pos:start="1023:14" pos:end="1023:19"><expr pos:start="1023:14" pos:end="1023:18"><name pos:start="1023:14" pos:end="1023:14">i</name> <operator pos:start="1023:16" pos:end="1023:16">=</operator> <literal type="number" pos:start="1023:18" pos:end="1023:18">0</literal></expr>;</init> <condition pos:start="1023:21" pos:end="1023:26"><expr pos:start="1023:21" pos:end="1023:25"><name pos:start="1023:21" pos:end="1023:21">i</name> <operator pos:start="1023:23" pos:end="1023:23">&lt;</operator> <literal type="number" pos:start="1023:25" pos:end="1023:25">2</literal></expr>;</condition> <incr pos:start="1023:28" pos:end="1023:30"><expr pos:start="1023:28" pos:end="1023:30"><name pos:start="1023:28" pos:end="1023:28">i</name><operator pos:start="1023:29" pos:end="1023:30">++</operator></expr></incr>)</control> <block pos:start="1023:33" pos:end="1029:9">{<block_content pos:start="1025:13" pos:end="1027:41">

            <expr_stmt pos:start="1025:13" pos:end="1025:41"><expr pos:start="1025:13" pos:end="1025:40"><name pos:start="1025:13" pos:end="1025:34"><name pos:start="1025:13" pos:end="1025:13">h</name><operator pos:start="1025:14" pos:end="1025:15">-&gt;</operator><name pos:start="1025:16" pos:end="1025:31">luma_weight_flag</name><index pos:start="1025:32" pos:end="1025:34">[<expr pos:start="1025:33" pos:end="1025:33"><name pos:start="1025:33" pos:end="1025:33">i</name></expr>]</index></name>   <operator pos:start="1025:38" pos:end="1025:38">=</operator> <literal type="number" pos:start="1025:40" pos:end="1025:40">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="1027:13" pos:end="1027:41"><expr pos:start="1027:13" pos:end="1027:40"><name pos:start="1027:13" pos:end="1027:36"><name pos:start="1027:13" pos:end="1027:13">h</name><operator pos:start="1027:14" pos:end="1027:15">-&gt;</operator><name pos:start="1027:16" pos:end="1027:33">chroma_weight_flag</name><index pos:start="1027:34" pos:end="1027:36">[<expr pos:start="1027:35" pos:end="1027:35"><name pos:start="1027:35" pos:end="1027:35">i</name></expr>]</index></name> <operator pos:start="1027:38" pos:end="1027:38">=</operator> <literal type="number" pos:start="1027:40" pos:end="1027:40">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="1035:5" pos:end="1035:74">// If frame-mt is enabled, only update mmco tables for the first slice</comment>

    <comment type="line" pos:start="1037:5" pos:end="1037:74">// in a field. Subsequent slices can temporarily clobber h-&gt;mmco_index</comment>

    <comment type="line" pos:start="1039:5" pos:end="1039:72">// or h-&gt;mmco, which will cause ref list mix-ups and decoding errors</comment>

    <comment type="line" pos:start="1041:5" pos:end="1041:75">// further down the line. This may break decoding if the first slice is</comment>

    <comment type="line" pos:start="1043:5" pos:end="1043:60">// corrupt, thus we only do this if frame-mt is enabled.</comment>

    <if_stmt pos:start="1045:5" pos:end="1057:5"><if pos:start="1045:5" pos:end="1057:5">if <condition pos:start="1045:8" pos:end="1045:23">(<expr pos:start="1045:9" pos:end="1045:22"><name pos:start="1045:9" pos:end="1045:22"><name pos:start="1045:9" pos:end="1045:9">h</name><operator pos:start="1045:10" pos:end="1045:11">-&gt;</operator><name pos:start="1045:12" pos:end="1045:22">nal_ref_idc</name></name></expr>)</condition> <block pos:start="1045:25" pos:end="1057:5">{<block_content pos:start="1047:9" pos:end="1055:39">

        <expr_stmt pos:start="1047:9" pos:end="1051:69"><expr pos:start="1047:9" pos:end="1051:68"><name pos:start="1047:9" pos:end="1047:11">ret</name> <operator pos:start="1047:13" pos:end="1047:13">=</operator> <call pos:start="1047:15" pos:end="1051:68"><name pos:start="1047:15" pos:end="1047:44">ff_h264_decode_ref_pic_marking</name><argument_list pos:start="1047:45" pos:end="1051:68">(<argument pos:start="1047:46" pos:end="1047:47"><expr pos:start="1047:46" pos:end="1047:47"><name pos:start="1047:46" pos:end="1047:47">h0</name></expr></argument>, <argument pos:start="1047:50" pos:end="1047:55"><expr pos:start="1047:50" pos:end="1047:55"><operator pos:start="1047:50" pos:end="1047:50">&amp;</operator><name pos:start="1047:51" pos:end="1047:55"><name pos:start="1047:51" pos:end="1047:51">h</name><operator pos:start="1047:52" pos:end="1047:53">-&gt;</operator><name pos:start="1047:54" pos:end="1047:55">gb</name></name></expr></argument>,

                                             <argument pos:start="1049:46" pos:end="1051:67"><expr pos:start="1049:46" pos:end="1051:67"><operator pos:start="1049:46" pos:end="1049:46">!</operator><operator pos:start="1049:47" pos:end="1049:47">(</operator><name pos:start="1049:48" pos:end="1049:75"><name pos:start="1049:48" pos:end="1049:48">h</name><operator pos:start="1049:49" pos:end="1049:50">-&gt;</operator><name pos:start="1049:51" pos:end="1049:55">avctx</name><operator pos:start="1049:56" pos:end="1049:57">-&gt;</operator><name pos:start="1049:58" pos:end="1049:75">active_thread_type</name></name> <operator pos:start="1049:77" pos:end="1049:77">&amp;</operator> <name pos:start="1049:79" pos:end="1049:93">FF_THREAD_FRAME</name><operator pos:start="1049:94" pos:end="1049:94">)</operator> <operator pos:start="1049:96" pos:end="1049:97">||</operator>

                                             <name pos:start="1051:46" pos:end="1051:62"><name pos:start="1051:46" pos:end="1051:47">h0</name><operator pos:start="1051:48" pos:end="1051:49">-&gt;</operator><name pos:start="1051:50" pos:end="1051:62">current_slice</name></name> <operator pos:start="1051:64" pos:end="1051:65">==</operator> <literal type="number" pos:start="1051:67" pos:end="1051:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1053:9" pos:end="1055:39"><if pos:start="1053:9" pos:end="1055:39">if <condition pos:start="1053:12" pos:end="1053:67">(<expr pos:start="1053:13" pos:end="1053:66"><name pos:start="1053:13" pos:end="1053:15">ret</name> <operator pos:start="1053:17" pos:end="1053:17">&lt;</operator> <literal type="number" pos:start="1053:19" pos:end="1053:19">0</literal> <operator pos:start="1053:21" pos:end="1053:22">&amp;&amp;</operator> <operator pos:start="1053:24" pos:end="1053:24">(</operator><name pos:start="1053:25" pos:end="1053:49"><name pos:start="1053:25" pos:end="1053:25">h</name><operator pos:start="1053:26" pos:end="1053:27">-&gt;</operator><name pos:start="1053:28" pos:end="1053:32">avctx</name><operator pos:start="1053:33" pos:end="1053:34">-&gt;</operator><name pos:start="1053:35" pos:end="1053:49">err_recognition</name></name> <operator pos:start="1053:51" pos:end="1053:51">&amp;</operator> <name pos:start="1053:53" pos:end="1053:65">AV_EF_EXPLODE</name><operator pos:start="1053:66" pos:end="1053:66">)</operator></expr>)</condition><block type="pseudo" pos:start="1055:13" pos:end="1055:39"><block_content pos:start="1055:13" pos:end="1055:39">

            <return pos:start="1055:13" pos:end="1055:39">return <expr pos:start="1055:20" pos:end="1055:38"><name pos:start="1055:20" pos:end="1055:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1061:5" pos:end="1075:5"><if pos:start="1061:5" pos:end="1075:5">if <condition pos:start="1061:8" pos:end="1061:23">(<expr pos:start="1061:9" pos:end="1061:22"><call pos:start="1061:9" pos:end="1061:22"><name pos:start="1061:9" pos:end="1061:19">FRAME_MBAFF</name><argument_list pos:start="1061:20" pos:end="1061:22">(<argument pos:start="1061:21" pos:end="1061:21"><expr pos:start="1061:21" pos:end="1061:21"><name pos:start="1061:21" pos:end="1061:21">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1061:25" pos:end="1075:5">{<block_content pos:start="1063:9" pos:end="1073:9">

        <expr_stmt pos:start="1063:9" pos:end="1063:39"><expr pos:start="1063:9" pos:end="1063:38"><call pos:start="1063:9" pos:end="1063:38"><name pos:start="1063:9" pos:end="1063:35">ff_h264_fill_mbaff_ref_list</name><argument_list pos:start="1063:36" pos:end="1063:38">(<argument pos:start="1063:37" pos:end="1063:37"><expr pos:start="1063:37" pos:end="1063:37"><name pos:start="1063:37" pos:end="1063:37">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="1067:9" pos:end="1073:9"><if pos:start="1067:9" pos:end="1073:9">if <condition pos:start="1067:12" pos:end="1067:86">(<expr pos:start="1067:13" pos:end="1067:85"><name pos:start="1067:13" pos:end="1067:38"><name pos:start="1067:13" pos:end="1067:13">h</name><operator pos:start="1067:14" pos:end="1067:15">-&gt;</operator><name pos:start="1067:16" pos:end="1067:18">pps</name><operator pos:start="1067:19" pos:end="1067:19">.</operator><name pos:start="1067:20" pos:end="1067:38">weighted_bipred_idc</name></name> <operator pos:start="1067:40" pos:end="1067:41">==</operator> <literal type="number" pos:start="1067:43" pos:end="1067:43">2</literal> <operator pos:start="1067:45" pos:end="1067:46">&amp;&amp;</operator> <name pos:start="1067:48" pos:end="1067:64"><name pos:start="1067:48" pos:end="1067:48">h</name><operator pos:start="1067:49" pos:end="1067:50">-&gt;</operator><name pos:start="1067:51" pos:end="1067:64">slice_type_nos</name></name> <operator pos:start="1067:66" pos:end="1067:67">==</operator> <name pos:start="1067:69" pos:end="1067:85">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="1067:88" pos:end="1073:9">{<block_content pos:start="1069:13" pos:end="1071:40">

            <expr_stmt pos:start="1069:13" pos:end="1069:40"><expr pos:start="1069:13" pos:end="1069:39"><call pos:start="1069:13" pos:end="1069:39"><name pos:start="1069:13" pos:end="1069:33">implicit_weight_table</name><argument_list pos:start="1069:34" pos:end="1069:39">(<argument pos:start="1069:35" pos:end="1069:35"><expr pos:start="1069:35" pos:end="1069:35"><name pos:start="1069:35" pos:end="1069:35">h</name></expr></argument>, <argument pos:start="1069:38" pos:end="1069:38"><expr pos:start="1069:38" pos:end="1069:38"><literal type="number" pos:start="1069:38" pos:end="1069:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1071:13" pos:end="1071:40"><expr pos:start="1071:13" pos:end="1071:39"><call pos:start="1071:13" pos:end="1071:39"><name pos:start="1071:13" pos:end="1071:33">implicit_weight_table</name><argument_list pos:start="1071:34" pos:end="1071:39">(<argument pos:start="1071:35" pos:end="1071:35"><expr pos:start="1071:35" pos:end="1071:35"><name pos:start="1071:35" pos:end="1071:35">h</name></expr></argument>, <argument pos:start="1071:38" pos:end="1071:38"><expr pos:start="1071:38" pos:end="1071:38"><literal type="number" pos:start="1071:38" pos:end="1071:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1079:5" pos:end="1081:44"><if pos:start="1079:5" pos:end="1081:44">if <condition pos:start="1079:8" pos:end="1079:77">(<expr pos:start="1079:9" pos:end="1079:76"><name pos:start="1079:9" pos:end="1079:25"><name pos:start="1079:9" pos:end="1079:9">h</name><operator pos:start="1079:10" pos:end="1079:11">-&gt;</operator><name pos:start="1079:12" pos:end="1079:25">slice_type_nos</name></name> <operator pos:start="1079:27" pos:end="1079:28">==</operator> <name pos:start="1079:30" pos:end="1079:46">AV_PICTURE_TYPE_B</name> <operator pos:start="1079:48" pos:end="1079:49">&amp;&amp;</operator> <operator pos:start="1079:51" pos:end="1079:51">!</operator><name pos:start="1079:52" pos:end="1079:76"><name pos:start="1079:52" pos:end="1079:52">h</name><operator pos:start="1079:53" pos:end="1079:54">-&gt;</operator><name pos:start="1079:55" pos:end="1079:76">direct_spatial_mv_pred</name></name></expr>)</condition><block type="pseudo" pos:start="1081:9" pos:end="1081:44"><block_content pos:start="1081:9" pos:end="1081:44">

        <expr_stmt pos:start="1081:9" pos:end="1081:44"><expr pos:start="1081:9" pos:end="1081:43"><call pos:start="1081:9" pos:end="1081:43"><name pos:start="1081:9" pos:end="1081:40">ff_h264_direct_dist_scale_factor</name><argument_list pos:start="1081:41" pos:end="1081:43">(<argument pos:start="1081:42" pos:end="1081:42"><expr pos:start="1081:42" pos:end="1081:42"><name pos:start="1081:42" pos:end="1081:42">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="1083:5" pos:end="1083:36"><expr pos:start="1083:5" pos:end="1083:35"><call pos:start="1083:5" pos:end="1083:35"><name pos:start="1083:5" pos:end="1083:32">ff_h264_direct_ref_list_init</name><argument_list pos:start="1083:33" pos:end="1083:35">(<argument pos:start="1083:34" pos:end="1083:34"><expr pos:start="1083:34" pos:end="1083:34"><name pos:start="1083:34" pos:end="1083:34">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="1087:5" pos:end="1101:5"><if pos:start="1087:5" pos:end="1101:5">if <condition pos:start="1087:8" pos:end="1087:63">(<expr pos:start="1087:9" pos:end="1087:62"><name pos:start="1087:9" pos:end="1087:25"><name pos:start="1087:9" pos:end="1087:9">h</name><operator pos:start="1087:10" pos:end="1087:11">-&gt;</operator><name pos:start="1087:12" pos:end="1087:25">slice_type_nos</name></name> <operator pos:start="1087:27" pos:end="1087:28">!=</operator> <name pos:start="1087:30" pos:end="1087:46">AV_PICTURE_TYPE_I</name> <operator pos:start="1087:48" pos:end="1087:49">&amp;&amp;</operator> <name pos:start="1087:51" pos:end="1087:62"><name pos:start="1087:51" pos:end="1087:51">h</name><operator pos:start="1087:52" pos:end="1087:53">-&gt;</operator><name pos:start="1087:54" pos:end="1087:56">pps</name><operator pos:start="1087:57" pos:end="1087:57">.</operator><name pos:start="1087:58" pos:end="1087:62">cabac</name></name></expr>)</condition> <block pos:start="1087:65" pos:end="1101:5">{<block_content pos:start="1089:9" pos:end="1099:32">

        <expr_stmt pos:start="1089:9" pos:end="1089:39"><expr pos:start="1089:9" pos:end="1089:38"><name pos:start="1089:9" pos:end="1089:11">tmp</name> <operator pos:start="1089:13" pos:end="1089:13">=</operator> <call pos:start="1089:15" pos:end="1089:38"><name pos:start="1089:15" pos:end="1089:30">get_ue_golomb_31</name><argument_list pos:start="1089:31" pos:end="1089:38">(<argument pos:start="1089:32" pos:end="1089:37"><expr pos:start="1089:32" pos:end="1089:37"><operator pos:start="1089:32" pos:end="1089:32">&amp;</operator><name pos:start="1089:33" pos:end="1089:37"><name pos:start="1089:33" pos:end="1089:33">h</name><operator pos:start="1089:34" pos:end="1089:35">-&gt;</operator><name pos:start="1089:36" pos:end="1089:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1091:9" pos:end="1097:9"><if pos:start="1091:9" pos:end="1097:9">if <condition pos:start="1091:12" pos:end="1091:20">(<expr pos:start="1091:13" pos:end="1091:19"><name pos:start="1091:13" pos:end="1091:15">tmp</name> <operator pos:start="1091:17" pos:end="1091:17">&gt;</operator> <literal type="number" pos:start="1091:19" pos:end="1091:19">2</literal></expr>)</condition> <block pos:start="1091:22" pos:end="1097:9">{<block_content pos:start="1093:13" pos:end="1095:39">

            <expr_stmt pos:start="1093:13" pos:end="1093:80"><expr pos:start="1093:13" pos:end="1093:79"><call pos:start="1093:13" pos:end="1093:79"><name pos:start="1093:13" pos:end="1093:18">av_log</name><argument_list pos:start="1093:19" pos:end="1093:79">(<argument pos:start="1093:20" pos:end="1093:27"><expr pos:start="1093:20" pos:end="1093:27"><name pos:start="1093:20" pos:end="1093:27"><name pos:start="1093:20" pos:end="1093:20">h</name><operator pos:start="1093:21" pos:end="1093:22">-&gt;</operator><name pos:start="1093:23" pos:end="1093:27">avctx</name></name></expr></argument>, <argument pos:start="1093:30" pos:end="1093:41"><expr pos:start="1093:30" pos:end="1093:41"><name pos:start="1093:30" pos:end="1093:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="1093:44" pos:end="1093:73"><expr pos:start="1093:44" pos:end="1093:73"><literal type="string" pos:start="1093:44" pos:end="1093:73">"cabac_init_idc %u overflow\n"</literal></expr></argument>, <argument pos:start="1093:76" pos:end="1093:78"><expr pos:start="1093:76" pos:end="1093:78"><name pos:start="1093:76" pos:end="1093:78">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="1095:13" pos:end="1095:39">return <expr pos:start="1095:20" pos:end="1095:38"><name pos:start="1095:20" pos:end="1095:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1099:9" pos:end="1099:32"><expr pos:start="1099:9" pos:end="1099:31"><name pos:start="1099:9" pos:end="1099:25"><name pos:start="1099:9" pos:end="1099:9">h</name><operator pos:start="1099:10" pos:end="1099:11">-&gt;</operator><name pos:start="1099:12" pos:end="1099:25">cabac_init_idc</name></name> <operator pos:start="1099:27" pos:end="1099:27">=</operator> <name pos:start="1099:29" pos:end="1099:31">tmp</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="1105:5" pos:end="1105:28"><expr pos:start="1105:5" pos:end="1105:27"><name pos:start="1105:5" pos:end="1105:23"><name pos:start="1105:5" pos:end="1105:5">h</name><operator pos:start="1105:6" pos:end="1105:7">-&gt;</operator><name pos:start="1105:8" pos:end="1105:23">last_qscale_diff</name></name> <operator pos:start="1105:25" pos:end="1105:25">=</operator> <literal type="number" pos:start="1105:27" pos:end="1105:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1107:5" pos:end="1107:49"><expr pos:start="1107:5" pos:end="1107:48"><name pos:start="1107:5" pos:end="1107:7">tmp</name> <operator pos:start="1107:9" pos:end="1107:9">=</operator> <name pos:start="1107:11" pos:end="1107:24"><name pos:start="1107:11" pos:end="1107:11">h</name><operator pos:start="1107:12" pos:end="1107:13">-&gt;</operator><name pos:start="1107:14" pos:end="1107:16">pps</name><operator pos:start="1107:17" pos:end="1107:17">.</operator><name pos:start="1107:18" pos:end="1107:24">init_qp</name></name> <operator pos:start="1107:26" pos:end="1107:26">+</operator> <call pos:start="1107:28" pos:end="1107:48"><name pos:start="1107:28" pos:end="1107:40">get_se_golomb</name><argument_list pos:start="1107:41" pos:end="1107:48">(<argument pos:start="1107:42" pos:end="1107:47"><expr pos:start="1107:42" pos:end="1107:47"><operator pos:start="1107:42" pos:end="1107:42">&amp;</operator><name pos:start="1107:43" pos:end="1107:47"><name pos:start="1107:43" pos:end="1107:43">h</name><operator pos:start="1107:44" pos:end="1107:45">-&gt;</operator><name pos:start="1107:46" pos:end="1107:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="1109:5" pos:end="1115:5"><if pos:start="1109:5" pos:end="1115:5">if <condition pos:start="1109:8" pos:end="1109:51">(<expr pos:start="1109:9" pos:end="1109:50"><name pos:start="1109:9" pos:end="1109:11">tmp</name> <operator pos:start="1109:13" pos:end="1109:13">&gt;</operator> <literal type="number" pos:start="1109:15" pos:end="1109:18">51</literal> <operator pos:start="1109:18" pos:end="1109:18">+</operator> <literal type="number" pos:start="1109:20" pos:end="1109:20">6</literal> <operator pos:start="1109:22" pos:end="1109:22">*</operator> <operator pos:start="1109:24" pos:end="1109:24">(</operator><name pos:start="1109:25" pos:end="1109:45"><name pos:start="1109:25" pos:end="1109:25">h</name><operator pos:start="1109:26" pos:end="1109:27">-&gt;</operator><name pos:start="1109:28" pos:end="1109:30">sps</name><operator pos:start="1109:31" pos:end="1109:31">.</operator><name pos:start="1109:32" pos:end="1109:45">bit_depth_luma</name></name> <operator pos:start="1109:47" pos:end="1109:47">-</operator> <literal type="number" pos:start="1109:49" pos:end="1109:49">8</literal><operator pos:start="1109:50" pos:end="1109:50">)</operator></expr>)</condition> <block pos:start="1109:53" pos:end="1115:5">{<block_content pos:start="1111:9" pos:end="1113:35">

        <expr_stmt pos:start="1111:9" pos:end="1111:68"><expr pos:start="1111:9" pos:end="1111:67"><call pos:start="1111:9" pos:end="1111:67"><name pos:start="1111:9" pos:end="1111:14">av_log</name><argument_list pos:start="1111:15" pos:end="1111:67">(<argument pos:start="1111:16" pos:end="1111:23"><expr pos:start="1111:16" pos:end="1111:23"><name pos:start="1111:16" pos:end="1111:23"><name pos:start="1111:16" pos:end="1111:16">h</name><operator pos:start="1111:17" pos:end="1111:18">-&gt;</operator><name pos:start="1111:19" pos:end="1111:23">avctx</name></name></expr></argument>, <argument pos:start="1111:26" pos:end="1111:37"><expr pos:start="1111:26" pos:end="1111:37"><name pos:start="1111:26" pos:end="1111:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="1111:40" pos:end="1111:61"><expr pos:start="1111:40" pos:end="1111:61"><literal type="string" pos:start="1111:40" pos:end="1111:61">"QP %u out of range\n"</literal></expr></argument>, <argument pos:start="1111:64" pos:end="1111:66"><expr pos:start="1111:64" pos:end="1111:66"><name pos:start="1111:64" pos:end="1111:66">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="1113:9" pos:end="1113:35">return <expr pos:start="1113:16" pos:end="1113:34"><name pos:start="1113:16" pos:end="1113:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="1117:5" pos:end="1117:26"><expr pos:start="1117:5" pos:end="1117:25"><name pos:start="1117:5" pos:end="1117:13"><name pos:start="1117:5" pos:end="1117:5">h</name><operator pos:start="1117:6" pos:end="1117:7">-&gt;</operator><name pos:start="1117:8" pos:end="1117:13">qscale</name></name>       <operator pos:start="1117:21" pos:end="1117:21">=</operator> <name pos:start="1117:23" pos:end="1117:25">tmp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="1119:5" pos:end="1119:53"><expr pos:start="1119:5" pos:end="1119:52"><name pos:start="1119:5" pos:end="1119:19"><name pos:start="1119:5" pos:end="1119:5">h</name><operator pos:start="1119:6" pos:end="1119:7">-&gt;</operator><name pos:start="1119:8" pos:end="1119:16">chroma_qp</name><index pos:start="1119:17" pos:end="1119:19">[<expr pos:start="1119:18" pos:end="1119:18"><literal type="number" pos:start="1119:18" pos:end="1119:18">0</literal></expr>]</index></name> <operator pos:start="1119:21" pos:end="1119:21">=</operator> <call pos:start="1119:23" pos:end="1119:52"><name pos:start="1119:23" pos:end="1119:35">get_chroma_qp</name><argument_list pos:start="1119:36" pos:end="1119:52">(<argument pos:start="1119:37" pos:end="1119:37"><expr pos:start="1119:37" pos:end="1119:37"><name pos:start="1119:37" pos:end="1119:37">h</name></expr></argument>, <argument pos:start="1119:40" pos:end="1119:40"><expr pos:start="1119:40" pos:end="1119:40"><literal type="number" pos:start="1119:40" pos:end="1119:40">0</literal></expr></argument>, <argument pos:start="1119:43" pos:end="1119:51"><expr pos:start="1119:43" pos:end="1119:51"><name pos:start="1119:43" pos:end="1119:51"><name pos:start="1119:43" pos:end="1119:43">h</name><operator pos:start="1119:44" pos:end="1119:45">-&gt;</operator><name pos:start="1119:46" pos:end="1119:51">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1121:5" pos:end="1121:53"><expr pos:start="1121:5" pos:end="1121:52"><name pos:start="1121:5" pos:end="1121:19"><name pos:start="1121:5" pos:end="1121:5">h</name><operator pos:start="1121:6" pos:end="1121:7">-&gt;</operator><name pos:start="1121:8" pos:end="1121:16">chroma_qp</name><index pos:start="1121:17" pos:end="1121:19">[<expr pos:start="1121:18" pos:end="1121:18"><literal type="number" pos:start="1121:18" pos:end="1121:18">1</literal></expr>]</index></name> <operator pos:start="1121:21" pos:end="1121:21">=</operator> <call pos:start="1121:23" pos:end="1121:52"><name pos:start="1121:23" pos:end="1121:35">get_chroma_qp</name><argument_list pos:start="1121:36" pos:end="1121:52">(<argument pos:start="1121:37" pos:end="1121:37"><expr pos:start="1121:37" pos:end="1121:37"><name pos:start="1121:37" pos:end="1121:37">h</name></expr></argument>, <argument pos:start="1121:40" pos:end="1121:40"><expr pos:start="1121:40" pos:end="1121:40"><literal type="number" pos:start="1121:40" pos:end="1121:40">1</literal></expr></argument>, <argument pos:start="1121:43" pos:end="1121:51"><expr pos:start="1121:43" pos:end="1121:51"><name pos:start="1121:43" pos:end="1121:51"><name pos:start="1121:43" pos:end="1121:43">h</name><operator pos:start="1121:44" pos:end="1121:45">-&gt;</operator><name pos:start="1121:46" pos:end="1121:51">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="1123:5" pos:end="1123:34">// FIXME qscale / qp ... stuff</comment>

    <if_stmt pos:start="1125:5" pos:end="1127:26"><if pos:start="1125:5" pos:end="1127:26">if <condition pos:start="1125:8" pos:end="1125:44">(<expr pos:start="1125:9" pos:end="1125:43"><name pos:start="1125:9" pos:end="1125:21"><name pos:start="1125:9" pos:end="1125:9">h</name><operator pos:start="1125:10" pos:end="1125:11">-&gt;</operator><name pos:start="1125:12" pos:end="1125:21">slice_type</name></name> <operator pos:start="1125:23" pos:end="1125:24">==</operator> <name pos:start="1125:26" pos:end="1125:43">AV_PICTURE_TYPE_SP</name></expr>)</condition><block type="pseudo" pos:start="1127:9" pos:end="1127:26"><block_content pos:start="1127:9" pos:end="1127:26">

        <expr_stmt pos:start="1127:9" pos:end="1127:26"><expr pos:start="1127:9" pos:end="1127:25"><call pos:start="1127:9" pos:end="1127:25"><name pos:start="1127:9" pos:end="1127:17">get_bits1</name><argument_list pos:start="1127:18" pos:end="1127:25">(<argument pos:start="1127:19" pos:end="1127:24"><expr pos:start="1127:19" pos:end="1127:24"><operator pos:start="1127:19" pos:end="1127:19">&amp;</operator><name pos:start="1127:20" pos:end="1127:24"><name pos:start="1127:20" pos:end="1127:20">h</name><operator pos:start="1127:21" pos:end="1127:22">-&gt;</operator><name pos:start="1127:23" pos:end="1127:24">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="1127:28" pos:end="1127:51">/* sp_for_switch_flag */</comment>

    <if_stmt pos:start="1129:5" pos:end="1133:30"><if pos:start="1129:5" pos:end="1133:30">if <condition pos:start="1129:8" pos:end="1131:44">(<expr pos:start="1129:9" pos:end="1131:43"><name pos:start="1129:9" pos:end="1129:21"><name pos:start="1129:9" pos:end="1129:9">h</name><operator pos:start="1129:10" pos:end="1129:11">-&gt;</operator><name pos:start="1129:12" pos:end="1129:21">slice_type</name></name> <operator pos:start="1129:23" pos:end="1129:24">==</operator> <name pos:start="1129:26" pos:end="1129:43">AV_PICTURE_TYPE_SP</name> <operator pos:start="1129:45" pos:end="1129:46">||</operator>

        <name pos:start="1131:9" pos:end="1131:21"><name pos:start="1131:9" pos:end="1131:9">h</name><operator pos:start="1131:10" pos:end="1131:11">-&gt;</operator><name pos:start="1131:12" pos:end="1131:21">slice_type</name></name> <operator pos:start="1131:23" pos:end="1131:24">==</operator> <name pos:start="1131:26" pos:end="1131:43">AV_PICTURE_TYPE_SI</name></expr>)</condition><block type="pseudo" pos:start="1133:9" pos:end="1133:30"><block_content pos:start="1133:9" pos:end="1133:30">

        <expr_stmt pos:start="1133:9" pos:end="1133:30"><expr pos:start="1133:9" pos:end="1133:29"><call pos:start="1133:9" pos:end="1133:29"><name pos:start="1133:9" pos:end="1133:21">get_se_golomb</name><argument_list pos:start="1133:22" pos:end="1133:29">(<argument pos:start="1133:23" pos:end="1133:28"><expr pos:start="1133:23" pos:end="1133:28"><operator pos:start="1133:23" pos:end="1133:23">&amp;</operator><name pos:start="1133:24" pos:end="1133:28"><name pos:start="1133:24" pos:end="1133:24">h</name><operator pos:start="1133:25" pos:end="1133:26">-&gt;</operator><name pos:start="1133:27" pos:end="1133:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="1133:32" pos:end="1133:51">/* slice_qs_delta */</comment>



    <expr_stmt pos:start="1137:5" pos:end="1137:33"><expr pos:start="1137:5" pos:end="1137:32"><name pos:start="1137:5" pos:end="1137:24"><name pos:start="1137:5" pos:end="1137:5">h</name><operator pos:start="1137:6" pos:end="1137:7">-&gt;</operator><name pos:start="1137:8" pos:end="1137:24">deblocking_filter</name></name>     <operator pos:start="1137:30" pos:end="1137:30">=</operator> <literal type="number" pos:start="1137:32" pos:end="1137:32">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1139:5" pos:end="1139:33"><expr pos:start="1139:5" pos:end="1139:32"><name pos:start="1139:5" pos:end="1139:28"><name pos:start="1139:5" pos:end="1139:5">h</name><operator pos:start="1139:6" pos:end="1139:7">-&gt;</operator><name pos:start="1139:8" pos:end="1139:28">slice_alpha_c0_offset</name></name> <operator pos:start="1139:30" pos:end="1139:30">=</operator> <literal type="number" pos:start="1139:32" pos:end="1139:32">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1141:5" pos:end="1141:33"><expr pos:start="1141:5" pos:end="1141:32"><name pos:start="1141:5" pos:end="1141:24"><name pos:start="1141:5" pos:end="1141:5">h</name><operator pos:start="1141:6" pos:end="1141:7">-&gt;</operator><name pos:start="1141:8" pos:end="1141:24">slice_beta_offset</name></name>     <operator pos:start="1141:30" pos:end="1141:30">=</operator> <literal type="number" pos:start="1141:32" pos:end="1141:32">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="1143:5" pos:end="1191:5"><if pos:start="1143:5" pos:end="1191:5">if <condition pos:start="1143:8" pos:end="1143:52">(<expr pos:start="1143:9" pos:end="1143:51"><name pos:start="1143:9" pos:end="1143:51"><name pos:start="1143:9" pos:end="1143:9">h</name><operator pos:start="1143:10" pos:end="1143:11">-&gt;</operator><name pos:start="1143:12" pos:end="1143:14">pps</name><operator pos:start="1143:15" pos:end="1143:15">.</operator><name pos:start="1143:16" pos:end="1143:51">deblocking_filter_parameters_present</name></name></expr>)</condition> <block pos:start="1143:54" pos:end="1191:5">{<block_content pos:start="1145:9" pos:end="1189:9">

        <expr_stmt pos:start="1145:9" pos:end="1145:39"><expr pos:start="1145:9" pos:end="1145:38"><name pos:start="1145:9" pos:end="1145:11">tmp</name> <operator pos:start="1145:13" pos:end="1145:13">=</operator> <call pos:start="1145:15" pos:end="1145:38"><name pos:start="1145:15" pos:end="1145:30">get_ue_golomb_31</name><argument_list pos:start="1145:31" pos:end="1145:38">(<argument pos:start="1145:32" pos:end="1145:37"><expr pos:start="1145:32" pos:end="1145:37"><operator pos:start="1145:32" pos:end="1145:32">&amp;</operator><name pos:start="1145:33" pos:end="1145:37"><name pos:start="1145:33" pos:end="1145:33">h</name><operator pos:start="1145:34" pos:end="1145:35">-&gt;</operator><name pos:start="1145:36" pos:end="1145:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1147:9" pos:end="1155:9"><if pos:start="1147:9" pos:end="1155:9">if <condition pos:start="1147:12" pos:end="1147:20">(<expr pos:start="1147:13" pos:end="1147:19"><name pos:start="1147:13" pos:end="1147:15">tmp</name> <operator pos:start="1147:17" pos:end="1147:17">&gt;</operator> <literal type="number" pos:start="1147:19" pos:end="1147:19">2</literal></expr>)</condition> <block pos:start="1147:22" pos:end="1155:9">{<block_content pos:start="1149:13" pos:end="1153:39">

            <expr_stmt pos:start="1149:13" pos:end="1151:67"><expr pos:start="1149:13" pos:end="1151:66"><call pos:start="1149:13" pos:end="1151:66"><name pos:start="1149:13" pos:end="1149:18">av_log</name><argument_list pos:start="1149:19" pos:end="1151:66">(<argument pos:start="1149:20" pos:end="1149:27"><expr pos:start="1149:20" pos:end="1149:27"><name pos:start="1149:20" pos:end="1149:27"><name pos:start="1149:20" pos:end="1149:20">h</name><operator pos:start="1149:21" pos:end="1149:22">-&gt;</operator><name pos:start="1149:23" pos:end="1149:27">avctx</name></name></expr></argument>, <argument pos:start="1149:30" pos:end="1149:41"><expr pos:start="1149:30" pos:end="1149:41"><name pos:start="1149:30" pos:end="1149:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="1151:20" pos:end="1151:60"><expr pos:start="1151:20" pos:end="1151:60"><literal type="string" pos:start="1151:20" pos:end="1151:60">"deblocking_filter_idc %u out of range\n"</literal></expr></argument>, <argument pos:start="1151:63" pos:end="1151:65"><expr pos:start="1151:63" pos:end="1151:65"><name pos:start="1151:63" pos:end="1151:65">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="1153:13" pos:end="1153:39">return <expr pos:start="1153:20" pos:end="1153:38"><name pos:start="1153:20" pos:end="1153:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1157:9" pos:end="1157:35"><expr pos:start="1157:9" pos:end="1157:34"><name pos:start="1157:9" pos:end="1157:28"><name pos:start="1157:9" pos:end="1157:9">h</name><operator pos:start="1157:10" pos:end="1157:11">-&gt;</operator><name pos:start="1157:12" pos:end="1157:28">deblocking_filter</name></name> <operator pos:start="1157:30" pos:end="1157:30">=</operator> <name pos:start="1157:32" pos:end="1157:34">tmp</name></expr>;</expr_stmt>

        <if_stmt pos:start="1159:9" pos:end="1161:38"><if pos:start="1159:9" pos:end="1161:38">if <condition pos:start="1159:12" pos:end="1159:37">(<expr pos:start="1159:13" pos:end="1159:36"><name pos:start="1159:13" pos:end="1159:32"><name pos:start="1159:13" pos:end="1159:13">h</name><operator pos:start="1159:14" pos:end="1159:15">-&gt;</operator><name pos:start="1159:16" pos:end="1159:32">deblocking_filter</name></name> <operator pos:start="1159:34" pos:end="1159:34">&lt;</operator> <literal type="number" pos:start="1159:36" pos:end="1159:36">2</literal></expr>)</condition><block type="pseudo" pos:start="1161:13" pos:end="1161:38"><block_content pos:start="1161:13" pos:end="1161:38">

            <expr_stmt pos:start="1161:13" pos:end="1161:38"><expr pos:start="1161:13" pos:end="1161:37"><name pos:start="1161:13" pos:end="1161:32"><name pos:start="1161:13" pos:end="1161:13">h</name><operator pos:start="1161:14" pos:end="1161:15">-&gt;</operator><name pos:start="1161:16" pos:end="1161:32">deblocking_filter</name></name> <operator pos:start="1161:34" pos:end="1161:35">^=</operator> <literal type="number" pos:start="1161:37" pos:end="1161:37">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="line" pos:start="1161:41" pos:end="1161:48">// 1&lt;-&gt;0</comment>



        <if_stmt pos:start="1165:9" pos:end="1189:9"><if pos:start="1165:9" pos:end="1189:9">if <condition pos:start="1165:12" pos:end="1165:33">(<expr pos:start="1165:13" pos:end="1165:32"><name pos:start="1165:13" pos:end="1165:32"><name pos:start="1165:13" pos:end="1165:13">h</name><operator pos:start="1165:14" pos:end="1165:15">-&gt;</operator><name pos:start="1165:16" pos:end="1165:32">deblocking_filter</name></name></expr>)</condition> <block pos:start="1165:35" pos:end="1189:9">{<block_content pos:start="1167:13" pos:end="1187:13">

            <expr_stmt pos:start="1167:13" pos:end="1167:65"><expr pos:start="1167:13" pos:end="1167:64"><name pos:start="1167:13" pos:end="1167:36"><name pos:start="1167:13" pos:end="1167:13">h</name><operator pos:start="1167:14" pos:end="1167:15">-&gt;</operator><name pos:start="1167:16" pos:end="1167:36">slice_alpha_c0_offset</name></name> <operator pos:start="1167:38" pos:end="1167:38">=</operator> <call pos:start="1167:40" pos:end="1167:60"><name pos:start="1167:40" pos:end="1167:52">get_se_golomb</name><argument_list pos:start="1167:53" pos:end="1167:60">(<argument pos:start="1167:54" pos:end="1167:59"><expr pos:start="1167:54" pos:end="1167:59"><operator pos:start="1167:54" pos:end="1167:54">&amp;</operator><name pos:start="1167:55" pos:end="1167:59"><name pos:start="1167:55" pos:end="1167:55">h</name><operator pos:start="1167:56" pos:end="1167:57">-&gt;</operator><name pos:start="1167:58" pos:end="1167:59">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="1167:62" pos:end="1167:62">*</operator> <literal type="number" pos:start="1167:64" pos:end="1167:64">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="1169:13" pos:end="1169:65"><expr pos:start="1169:13" pos:end="1169:64"><name pos:start="1169:13" pos:end="1169:32"><name pos:start="1169:13" pos:end="1169:13">h</name><operator pos:start="1169:14" pos:end="1169:15">-&gt;</operator><name pos:start="1169:16" pos:end="1169:32">slice_beta_offset</name></name>     <operator pos:start="1169:38" pos:end="1169:38">=</operator> <call pos:start="1169:40" pos:end="1169:60"><name pos:start="1169:40" pos:end="1169:52">get_se_golomb</name><argument_list pos:start="1169:53" pos:end="1169:60">(<argument pos:start="1169:54" pos:end="1169:59"><expr pos:start="1169:54" pos:end="1169:59"><operator pos:start="1169:54" pos:end="1169:54">&amp;</operator><name pos:start="1169:55" pos:end="1169:59"><name pos:start="1169:55" pos:end="1169:55">h</name><operator pos:start="1169:56" pos:end="1169:57">-&gt;</operator><name pos:start="1169:58" pos:end="1169:59">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="1169:62" pos:end="1169:62">*</operator> <literal type="number" pos:start="1169:64" pos:end="1169:64">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1171:13" pos:end="1187:13"><if pos:start="1171:13" pos:end="1187:13">if <condition pos:start="1171:16" pos:end="1177:43">(<expr pos:start="1171:17" pos:end="1177:42"><name pos:start="1171:17" pos:end="1171:40"><name pos:start="1171:17" pos:end="1171:17">h</name><operator pos:start="1171:18" pos:end="1171:19">-&gt;</operator><name pos:start="1171:20" pos:end="1171:40">slice_alpha_c0_offset</name></name> <operator pos:start="1171:42" pos:end="1171:42">&gt;</operator>  <literal type="number" pos:start="1171:45" pos:end="1171:46">12</literal> <operator pos:start="1171:48" pos:end="1171:49">||</operator>

                <name pos:start="1173:17" pos:end="1173:40"><name pos:start="1173:17" pos:end="1173:17">h</name><operator pos:start="1173:18" pos:end="1173:19">-&gt;</operator><name pos:start="1173:20" pos:end="1173:40">slice_alpha_c0_offset</name></name> <operator pos:start="1173:42" pos:end="1173:42">&lt;</operator> <operator pos:start="1173:44" pos:end="1173:44">-</operator><literal type="number" pos:start="1173:45" pos:end="1173:46">12</literal> <operator pos:start="1173:48" pos:end="1173:49">||</operator>

                <name pos:start="1175:17" pos:end="1175:36"><name pos:start="1175:17" pos:end="1175:17">h</name><operator pos:start="1175:18" pos:end="1175:19">-&gt;</operator><name pos:start="1175:20" pos:end="1175:36">slice_beta_offset</name></name> <operator pos:start="1175:38" pos:end="1175:38">&gt;</operator>  <literal type="number" pos:start="1175:41" pos:end="1175:42">12</literal>     <operator pos:start="1175:48" pos:end="1175:49">||</operator>

                <name pos:start="1177:17" pos:end="1177:36"><name pos:start="1177:17" pos:end="1177:17">h</name><operator pos:start="1177:18" pos:end="1177:19">-&gt;</operator><name pos:start="1177:20" pos:end="1177:36">slice_beta_offset</name></name> <operator pos:start="1177:38" pos:end="1177:38">&lt;</operator> <operator pos:start="1177:40" pos:end="1177:40">-</operator><literal type="number" pos:start="1177:41" pos:end="1177:42">12</literal></expr>)</condition> <block pos:start="1177:45" pos:end="1187:13">{<block_content pos:start="1179:17" pos:end="1185:43">

                <expr_stmt pos:start="1179:17" pos:end="1183:71"><expr pos:start="1179:17" pos:end="1183:70"><call pos:start="1179:17" pos:end="1183:70"><name pos:start="1179:17" pos:end="1179:22">av_log</name><argument_list pos:start="1179:23" pos:end="1183:70">(<argument pos:start="1179:24" pos:end="1179:31"><expr pos:start="1179:24" pos:end="1179:31"><name pos:start="1179:24" pos:end="1179:31"><name pos:start="1179:24" pos:end="1179:24">h</name><operator pos:start="1179:25" pos:end="1179:26">-&gt;</operator><name pos:start="1179:27" pos:end="1179:31">avctx</name></name></expr></argument>, <argument pos:start="1179:34" pos:end="1179:45"><expr pos:start="1179:34" pos:end="1179:45"><name pos:start="1179:34" pos:end="1179:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="1181:24" pos:end="1181:74"><expr pos:start="1181:24" pos:end="1181:74"><literal type="string" pos:start="1181:24" pos:end="1181:74">"deblocking filter parameters %d %d out of range\n"</literal></expr></argument>,

                       <argument pos:start="1183:24" pos:end="1183:47"><expr pos:start="1183:24" pos:end="1183:47"><name pos:start="1183:24" pos:end="1183:47"><name pos:start="1183:24" pos:end="1183:24">h</name><operator pos:start="1183:25" pos:end="1183:26">-&gt;</operator><name pos:start="1183:27" pos:end="1183:47">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="1183:50" pos:end="1183:69"><expr pos:start="1183:50" pos:end="1183:69"><name pos:start="1183:50" pos:end="1183:69"><name pos:start="1183:50" pos:end="1183:50">h</name><operator pos:start="1183:51" pos:end="1183:52">-&gt;</operator><name pos:start="1183:53" pos:end="1183:69">slice_beta_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="1185:17" pos:end="1185:43">return <expr pos:start="1185:24" pos:end="1185:42"><name pos:start="1185:24" pos:end="1185:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1195:5" pos:end="1213:33"><if pos:start="1195:5" pos:end="1213:33">if <condition pos:start="1195:8" pos:end="1211:30">(<expr pos:start="1195:9" pos:end="1211:29"><name pos:start="1195:9" pos:end="1195:34"><name pos:start="1195:9" pos:end="1195:9">h</name><operator pos:start="1195:10" pos:end="1195:11">-&gt;</operator><name pos:start="1195:12" pos:end="1195:16">avctx</name><operator pos:start="1195:17" pos:end="1195:18">-&gt;</operator><name pos:start="1195:19" pos:end="1195:34">skip_loop_filter</name></name> <operator pos:start="1195:36" pos:end="1195:37">&gt;=</operator> <name pos:start="1195:39" pos:end="1195:51">AVDISCARD_ALL</name> <operator pos:start="1195:53" pos:end="1195:54">||</operator>

        <operator pos:start="1197:9" pos:end="1197:9">(</operator><name pos:start="1197:10" pos:end="1197:35"><name pos:start="1197:10" pos:end="1197:10">h</name><operator pos:start="1197:11" pos:end="1197:12">-&gt;</operator><name pos:start="1197:13" pos:end="1197:17">avctx</name><operator pos:start="1197:18" pos:end="1197:19">-&gt;</operator><name pos:start="1197:20" pos:end="1197:35">skip_loop_filter</name></name> <operator pos:start="1197:37" pos:end="1197:38">&gt;=</operator> <name pos:start="1197:40" pos:end="1197:55">AVDISCARD_NONKEY</name> <operator pos:start="1197:57" pos:end="1197:58">&amp;&amp;</operator>

         <name pos:start="1199:10" pos:end="1199:25"><name pos:start="1199:10" pos:end="1199:10">h</name><operator pos:start="1199:11" pos:end="1199:12">-&gt;</operator><name pos:start="1199:13" pos:end="1199:25">nal_unit_type</name></name> <operator pos:start="1199:27" pos:end="1199:28">!=</operator> <name pos:start="1199:30" pos:end="1199:42">NAL_IDR_SLICE</name><operator pos:start="1199:43" pos:end="1199:43">)</operator> <operator pos:start="1199:45" pos:end="1199:46">||</operator>

        <operator pos:start="1201:9" pos:end="1201:9">(</operator><name pos:start="1201:10" pos:end="1201:35"><name pos:start="1201:10" pos:end="1201:10">h</name><operator pos:start="1201:11" pos:end="1201:12">-&gt;</operator><name pos:start="1201:13" pos:end="1201:17">avctx</name><operator pos:start="1201:18" pos:end="1201:19">-&gt;</operator><name pos:start="1201:20" pos:end="1201:35">skip_loop_filter</name></name> <operator pos:start="1201:37" pos:end="1201:38">&gt;=</operator> <name pos:start="1201:40" pos:end="1201:57">AVDISCARD_NONINTRA</name> <operator pos:start="1201:59" pos:end="1201:60">&amp;&amp;</operator>

         <name pos:start="1203:10" pos:end="1203:26"><name pos:start="1203:10" pos:end="1203:10">h</name><operator pos:start="1203:11" pos:end="1203:12">-&gt;</operator><name pos:start="1203:13" pos:end="1203:26">slice_type_nos</name></name> <operator pos:start="1203:28" pos:end="1203:29">!=</operator> <name pos:start="1203:31" pos:end="1203:47">AV_PICTURE_TYPE_I</name><operator pos:start="1203:48" pos:end="1203:48">)</operator> <operator pos:start="1203:50" pos:end="1203:51">||</operator>

        <operator pos:start="1205:9" pos:end="1205:9">(</operator><name pos:start="1205:10" pos:end="1205:35"><name pos:start="1205:10" pos:end="1205:10">h</name><operator pos:start="1205:11" pos:end="1205:12">-&gt;</operator><name pos:start="1205:13" pos:end="1205:17">avctx</name><operator pos:start="1205:18" pos:end="1205:19">-&gt;</operator><name pos:start="1205:20" pos:end="1205:35">skip_loop_filter</name></name> <operator pos:start="1205:37" pos:end="1205:38">&gt;=</operator> <name pos:start="1205:40" pos:end="1205:54">AVDISCARD_BIDIR</name>  <operator pos:start="1205:57" pos:end="1205:58">&amp;&amp;</operator>

         <name pos:start="1207:10" pos:end="1207:26"><name pos:start="1207:10" pos:end="1207:10">h</name><operator pos:start="1207:11" pos:end="1207:12">-&gt;</operator><name pos:start="1207:13" pos:end="1207:26">slice_type_nos</name></name> <operator pos:start="1207:28" pos:end="1207:29">==</operator> <name pos:start="1207:31" pos:end="1207:47">AV_PICTURE_TYPE_B</name><operator pos:start="1207:48" pos:end="1207:48">)</operator> <operator pos:start="1207:50" pos:end="1207:51">||</operator>

        <operator pos:start="1209:9" pos:end="1209:9">(</operator><name pos:start="1209:10" pos:end="1209:35"><name pos:start="1209:10" pos:end="1209:10">h</name><operator pos:start="1209:11" pos:end="1209:12">-&gt;</operator><name pos:start="1209:13" pos:end="1209:17">avctx</name><operator pos:start="1209:18" pos:end="1209:19">-&gt;</operator><name pos:start="1209:20" pos:end="1209:35">skip_loop_filter</name></name> <operator pos:start="1209:37" pos:end="1209:38">&gt;=</operator> <name pos:start="1209:40" pos:end="1209:55">AVDISCARD_NONREF</name> <operator pos:start="1209:57" pos:end="1209:58">&amp;&amp;</operator>

         <name pos:start="1211:10" pos:end="1211:23"><name pos:start="1211:10" pos:end="1211:10">h</name><operator pos:start="1211:11" pos:end="1211:12">-&gt;</operator><name pos:start="1211:13" pos:end="1211:23">nal_ref_idc</name></name> <operator pos:start="1211:25" pos:end="1211:26">==</operator> <literal type="number" pos:start="1211:28" pos:end="1211:28">0</literal><operator pos:start="1211:29" pos:end="1211:29">)</operator></expr>)</condition><block type="pseudo" pos:start="1213:9" pos:end="1213:33"><block_content pos:start="1213:9" pos:end="1213:33">

        <expr_stmt pos:start="1213:9" pos:end="1213:33"><expr pos:start="1213:9" pos:end="1213:32"><name pos:start="1213:9" pos:end="1213:28"><name pos:start="1213:9" pos:end="1213:9">h</name><operator pos:start="1213:10" pos:end="1213:11">-&gt;</operator><name pos:start="1213:12" pos:end="1213:28">deblocking_filter</name></name> <operator pos:start="1213:30" pos:end="1213:30">=</operator> <literal type="number" pos:start="1213:32" pos:end="1213:32">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="1217:5" pos:end="1253:5"><if pos:start="1217:5" pos:end="1253:5">if <condition pos:start="1217:8" pos:end="1217:58">(<expr pos:start="1217:9" pos:end="1217:57"><name pos:start="1217:9" pos:end="1217:28"><name pos:start="1217:9" pos:end="1217:9">h</name><operator pos:start="1217:10" pos:end="1217:11">-&gt;</operator><name pos:start="1217:12" pos:end="1217:28">deblocking_filter</name></name> <operator pos:start="1217:30" pos:end="1217:31">==</operator> <literal type="number" pos:start="1217:33" pos:end="1217:33">1</literal> <operator pos:start="1217:35" pos:end="1217:36">&amp;&amp;</operator> <name pos:start="1217:38" pos:end="1217:53"><name pos:start="1217:38" pos:end="1217:39">h0</name><operator pos:start="1217:40" pos:end="1217:41">-&gt;</operator><name pos:start="1217:42" pos:end="1217:53">max_contexts</name></name> <operator pos:start="1217:55" pos:end="1217:55">&gt;</operator> <literal type="number" pos:start="1217:57" pos:end="1217:57">1</literal></expr>)</condition> <block pos:start="1217:60" pos:end="1253:5">{<block_content pos:start="1219:9" pos:end="1251:9">

        <if_stmt pos:start="1219:9" pos:end="1251:9"><if pos:start="1219:9" pos:end="1227:9">if <condition pos:start="1219:12" pos:end="1219:48">(<expr pos:start="1219:13" pos:end="1219:47"><name pos:start="1219:13" pos:end="1219:28"><name pos:start="1219:13" pos:end="1219:13">h</name><operator pos:start="1219:14" pos:end="1219:15">-&gt;</operator><name pos:start="1219:16" pos:end="1219:20">avctx</name><operator pos:start="1219:21" pos:end="1219:22">-&gt;</operator><name pos:start="1219:23" pos:end="1219:28">flags2</name></name> <operator pos:start="1219:30" pos:end="1219:30">&amp;</operator> <name pos:start="1219:32" pos:end="1219:47">CODEC_FLAG2_FAST</name></expr>)</condition> <block pos:start="1219:50" pos:end="1227:9">{<block_content pos:start="1225:13" pos:end="1225:37">

            <comment type="block" pos:start="1221:13" pos:end="1223:57">/* Cheat slightly for speed:

             * Do not bother to deblock across slices. */</comment>

            <expr_stmt pos:start="1225:13" pos:end="1225:37"><expr pos:start="1225:13" pos:end="1225:36"><name pos:start="1225:13" pos:end="1225:32"><name pos:start="1225:13" pos:end="1225:13">h</name><operator pos:start="1225:14" pos:end="1225:15">-&gt;</operator><name pos:start="1225:16" pos:end="1225:32">deblocking_filter</name></name> <operator pos:start="1225:34" pos:end="1225:34">=</operator> <literal type="number" pos:start="1225:36" pos:end="1225:36">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="1227:11" pos:end="1251:9">else <block pos:start="1227:16" pos:end="1251:9">{<block_content pos:start="1229:13" pos:end="1249:13">

            <expr_stmt pos:start="1229:13" pos:end="1229:33"><expr pos:start="1229:13" pos:end="1229:32"><name pos:start="1229:13" pos:end="1229:28"><name pos:start="1229:13" pos:end="1229:14">h0</name><operator pos:start="1229:15" pos:end="1229:16">-&gt;</operator><name pos:start="1229:17" pos:end="1229:28">max_contexts</name></name> <operator pos:start="1229:30" pos:end="1229:30">=</operator> <literal type="number" pos:start="1229:32" pos:end="1229:32">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1231:13" pos:end="1239:13"><if pos:start="1231:13" pos:end="1239:13">if <condition pos:start="1231:16" pos:end="1231:43">(<expr pos:start="1231:17" pos:end="1231:42"><operator pos:start="1231:17" pos:end="1231:17">!</operator><name pos:start="1231:18" pos:end="1231:42"><name pos:start="1231:18" pos:end="1231:19">h0</name><operator pos:start="1231:20" pos:end="1231:21">-&gt;</operator><name pos:start="1231:22" pos:end="1231:42">single_decode_warning</name></name></expr>)</condition> <block pos:start="1231:45" pos:end="1239:13">{<block_content pos:start="1233:17" pos:end="1237:46">

                <expr_stmt pos:start="1233:17" pos:end="1235:107"><expr pos:start="1233:17" pos:end="1235:106"><call pos:start="1233:17" pos:end="1235:106"><name pos:start="1233:17" pos:end="1233:22">av_log</name><argument_list pos:start="1233:23" pos:end="1235:106">(<argument pos:start="1233:24" pos:end="1233:31"><expr pos:start="1233:24" pos:end="1233:31"><name pos:start="1233:24" pos:end="1233:31"><name pos:start="1233:24" pos:end="1233:24">h</name><operator pos:start="1233:25" pos:end="1233:26">-&gt;</operator><name pos:start="1233:27" pos:end="1233:31">avctx</name></name></expr></argument>, <argument pos:start="1233:34" pos:end="1233:44"><expr pos:start="1233:34" pos:end="1233:44"><name pos:start="1233:34" pos:end="1233:44">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="1235:24" pos:end="1235:105"><expr pos:start="1235:24" pos:end="1235:105"><literal type="string" pos:start="1235:24" pos:end="1235:105">"Cannot parallelize deblocking type 1, decoding such frames in sequential order\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1237:17" pos:end="1237:46"><expr pos:start="1237:17" pos:end="1237:45"><name pos:start="1237:17" pos:end="1237:41"><name pos:start="1237:17" pos:end="1237:18">h0</name><operator pos:start="1237:19" pos:end="1237:20">-&gt;</operator><name pos:start="1237:21" pos:end="1237:41">single_decode_warning</name></name> <operator pos:start="1237:43" pos:end="1237:43">=</operator> <literal type="number" pos:start="1237:45" pos:end="1237:45">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="1241:13" pos:end="1249:13"><if pos:start="1241:13" pos:end="1249:13">if <condition pos:start="1241:16" pos:end="1241:24">(<expr pos:start="1241:17" pos:end="1241:23"><name pos:start="1241:17" pos:end="1241:17">h</name> <operator pos:start="1241:19" pos:end="1241:20">!=</operator> <name pos:start="1241:22" pos:end="1241:23">h0</name></expr>)</condition> <block pos:start="1241:26" pos:end="1249:13">{<block_content pos:start="1243:17" pos:end="1247:42">

                <expr_stmt pos:start="1243:17" pos:end="1245:62"><expr pos:start="1243:17" pos:end="1245:61"><call pos:start="1243:17" pos:end="1245:61"><name pos:start="1243:17" pos:end="1243:22">av_log</name><argument_list pos:start="1243:23" pos:end="1245:61">(<argument pos:start="1243:24" pos:end="1243:31"><expr pos:start="1243:24" pos:end="1243:31"><name pos:start="1243:24" pos:end="1243:31"><name pos:start="1243:24" pos:end="1243:24">h</name><operator pos:start="1243:25" pos:end="1243:26">-&gt;</operator><name pos:start="1243:27" pos:end="1243:31">avctx</name></name></expr></argument>, <argument pos:start="1243:34" pos:end="1243:45"><expr pos:start="1243:34" pos:end="1243:45"><name pos:start="1243:34" pos:end="1243:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="1245:24" pos:end="1245:60"><expr pos:start="1245:24" pos:end="1245:60"><literal type="string" pos:start="1245:24" pos:end="1245:60">"Deblocking switched inside frame.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="1247:17" pos:end="1247:42">return <expr pos:start="1247:24" pos:end="1247:41"><name pos:start="1247:24" pos:end="1247:41">SLICE_SINGLETHREAD</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="1255:5" pos:end="1265:51"><expr pos:start="1255:5" pos:end="1265:50"><name pos:start="1255:5" pos:end="1255:16"><name pos:start="1255:5" pos:end="1255:5">h</name><operator pos:start="1255:6" pos:end="1255:7">-&gt;</operator><name pos:start="1255:8" pos:end="1255:16">qp_thresh</name></name> <operator pos:start="1255:18" pos:end="1255:18">=</operator> <literal type="number" pos:start="1255:20" pos:end="1255:23">15</literal> <operator pos:start="1255:23" pos:end="1255:23">-</operator>

                   <call pos:start="1257:20" pos:end="1257:72"><name pos:start="1257:20" pos:end="1257:24">FFMIN</name><argument_list pos:start="1257:25" pos:end="1257:72">(<argument pos:start="1257:26" pos:end="1257:49"><expr pos:start="1257:26" pos:end="1257:49"><name pos:start="1257:26" pos:end="1257:49"><name pos:start="1257:26" pos:end="1257:26">h</name><operator pos:start="1257:27" pos:end="1257:28">-&gt;</operator><name pos:start="1257:29" pos:end="1257:49">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="1257:52" pos:end="1257:71"><expr pos:start="1257:52" pos:end="1257:71"><name pos:start="1257:52" pos:end="1257:71"><name pos:start="1257:52" pos:end="1257:52">h</name><operator pos:start="1257:53" pos:end="1257:54">-&gt;</operator><name pos:start="1257:55" pos:end="1257:71">slice_beta_offset</name></name></expr></argument>)</argument_list></call> <operator pos:start="1257:74" pos:end="1257:74">-</operator>

                   <call pos:start="1259:20" pos:end="1263:59"><name pos:start="1259:20" pos:end="1259:25">FFMAX3</name><argument_list pos:start="1259:26" pos:end="1263:59">(<argument pos:start="1259:27" pos:end="1259:27"><expr pos:start="1259:27" pos:end="1259:27"><literal type="number" pos:start="1259:27" pos:end="1259:27">0</literal></expr></argument>,

                          <argument pos:start="1261:27" pos:end="1261:58"><expr pos:start="1261:27" pos:end="1261:58"><name pos:start="1261:27" pos:end="1261:58"><name pos:start="1261:27" pos:end="1261:27">h</name><operator pos:start="1261:28" pos:end="1261:29">-&gt;</operator><name pos:start="1261:30" pos:end="1261:32">pps</name><operator pos:start="1261:33" pos:end="1261:33">.</operator><name pos:start="1261:34" pos:end="1261:55">chroma_qp_index_offset</name><index pos:start="1261:56" pos:end="1261:58">[<expr pos:start="1261:57" pos:end="1261:57"><literal type="number" pos:start="1261:57" pos:end="1261:57">0</literal></expr>]</index></name></expr></argument>,

                          <argument pos:start="1263:27" pos:end="1263:58"><expr pos:start="1263:27" pos:end="1263:58"><name pos:start="1263:27" pos:end="1263:58"><name pos:start="1263:27" pos:end="1263:27">h</name><operator pos:start="1263:28" pos:end="1263:29">-&gt;</operator><name pos:start="1263:30" pos:end="1263:32">pps</name><operator pos:start="1263:33" pos:end="1263:33">.</operator><name pos:start="1263:34" pos:end="1263:55">chroma_qp_index_offset</name><index pos:start="1263:56" pos:end="1263:58">[<expr pos:start="1263:57" pos:end="1263:57"><literal type="number" pos:start="1263:57" pos:end="1263:57">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="1263:61" pos:end="1263:61">+</operator>

                   <literal type="number" pos:start="1265:20" pos:end="1265:20">6</literal> <operator pos:start="1265:22" pos:end="1265:22">*</operator> <operator pos:start="1265:24" pos:end="1265:24">(</operator><name pos:start="1265:25" pos:end="1265:45"><name pos:start="1265:25" pos:end="1265:25">h</name><operator pos:start="1265:26" pos:end="1265:27">-&gt;</operator><name pos:start="1265:28" pos:end="1265:30">sps</name><operator pos:start="1265:31" pos:end="1265:31">.</operator><name pos:start="1265:32" pos:end="1265:45">bit_depth_luma</name></name> <operator pos:start="1265:47" pos:end="1265:47">-</operator> <literal type="number" pos:start="1265:49" pos:end="1265:49">8</literal><operator pos:start="1265:50" pos:end="1265:50">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="1269:5" pos:end="1269:37"><expr pos:start="1269:5" pos:end="1269:36"><name pos:start="1269:5" pos:end="1269:23"><name pos:start="1269:5" pos:end="1269:6">h0</name><operator pos:start="1269:7" pos:end="1269:8">-&gt;</operator><name pos:start="1269:9" pos:end="1269:23">last_slice_type</name></name> <operator pos:start="1269:25" pos:end="1269:25">=</operator> <name pos:start="1269:27" pos:end="1269:36">slice_type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="1271:5" pos:end="1271:74"><expr pos:start="1271:5" pos:end="1271:73"><call pos:start="1271:5" pos:end="1271:73"><name pos:start="1271:5" pos:end="1271:10">memcpy</name><argument_list pos:start="1271:11" pos:end="1271:73">(<argument pos:start="1271:12" pos:end="1271:29"><expr pos:start="1271:12" pos:end="1271:29"><name pos:start="1271:12" pos:end="1271:29"><name pos:start="1271:12" pos:end="1271:13">h0</name><operator pos:start="1271:14" pos:end="1271:15">-&gt;</operator><name pos:start="1271:16" pos:end="1271:29">last_ref_count</name></name></expr></argument>, <argument pos:start="1271:32" pos:end="1271:44"><expr pos:start="1271:32" pos:end="1271:44"><name pos:start="1271:32" pos:end="1271:44"><name pos:start="1271:32" pos:end="1271:33">h0</name><operator pos:start="1271:34" pos:end="1271:35">-&gt;</operator><name pos:start="1271:36" pos:end="1271:44">ref_count</name></name></expr></argument>, <argument pos:start="1271:47" pos:end="1271:72"><expr pos:start="1271:47" pos:end="1271:72"><sizeof pos:start="1271:47" pos:end="1271:72">sizeof<argument_list pos:start="1271:53" pos:end="1271:72">(<argument pos:start="1271:54" pos:end="1271:71"><expr pos:start="1271:54" pos:end="1271:71"><name pos:start="1271:54" pos:end="1271:71"><name pos:start="1271:54" pos:end="1271:55">h0</name><operator pos:start="1271:56" pos:end="1271:57">-&gt;</operator><name pos:start="1271:58" pos:end="1271:71">last_ref_count</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1273:5" pos:end="1273:46"><expr pos:start="1273:5" pos:end="1273:45"><name pos:start="1273:5" pos:end="1273:16"><name pos:start="1273:5" pos:end="1273:5">h</name><operator pos:start="1273:6" pos:end="1273:7">-&gt;</operator><name pos:start="1273:8" pos:end="1273:16">slice_num</name></name>        <operator pos:start="1273:25" pos:end="1273:25">=</operator> <operator pos:start="1273:27" pos:end="1273:28">++</operator><name pos:start="1273:29" pos:end="1273:45"><name pos:start="1273:29" pos:end="1273:30">h0</name><operator pos:start="1273:31" pos:end="1273:32">-&gt;</operator><name pos:start="1273:33" pos:end="1273:45">current_slice</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="1277:5" pos:end="1279:71"><if pos:start="1277:5" pos:end="1279:71">if <condition pos:start="1277:8" pos:end="1277:21">(<expr pos:start="1277:9" pos:end="1277:20"><name pos:start="1277:9" pos:end="1277:20"><name pos:start="1277:9" pos:end="1277:9">h</name><operator pos:start="1277:10" pos:end="1277:11">-&gt;</operator><name pos:start="1277:12" pos:end="1277:20">slice_num</name></name></expr>)</condition><block type="pseudo" pos:start="1279:9" pos:end="1279:71"><block_content pos:start="1279:9" pos:end="1279:71">

        <expr_stmt pos:start="1279:9" pos:end="1279:71"><expr pos:start="1279:9" pos:end="1279:70"><name pos:start="1279:9" pos:end="1279:54"><name pos:start="1279:9" pos:end="1279:10">h0</name><operator pos:start="1279:11" pos:end="1279:12">-&gt;</operator><name pos:start="1279:13" pos:end="1279:21">slice_row</name><index pos:start="1279:22" pos:end="1279:54">[<expr pos:start="1279:23" pos:end="1279:53"><operator pos:start="1279:23" pos:end="1279:23">(</operator><name pos:start="1279:24" pos:end="1279:35"><name pos:start="1279:24" pos:end="1279:24">h</name><operator pos:start="1279:25" pos:end="1279:26">-&gt;</operator><name pos:start="1279:27" pos:end="1279:35">slice_num</name></name><operator pos:start="1279:36" pos:end="1279:36">-</operator><literal type="number" pos:start="1279:37" pos:end="1279:37">1</literal><operator pos:start="1279:38" pos:end="1279:38">)</operator><operator pos:start="1279:39" pos:end="1279:39">&amp;</operator><operator pos:start="1279:40" pos:end="1279:40">(</operator><name pos:start="1279:41" pos:end="1279:50">MAX_SLICES</name><operator pos:start="1279:51" pos:end="1279:51">-</operator><literal type="number" pos:start="1279:52" pos:end="1279:52">1</literal><operator pos:start="1279:53" pos:end="1279:53">)</operator></expr>]</index></name><operator pos:start="1279:55" pos:end="1279:55">=</operator> <name pos:start="1279:57" pos:end="1279:70"><name pos:start="1279:57" pos:end="1279:57">h</name><operator pos:start="1279:58" pos:end="1279:59">-&gt;</operator><name pos:start="1279:60" pos:end="1279:70">resync_mb_y</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1281:5" pos:end="1291:5"><if pos:start="1281:5" pos:end="1291:5">if <condition pos:start="1281:8" pos:end="1285:38">(   <expr pos:start="1281:12" pos:end="1285:37"><name pos:start="1281:12" pos:end="1281:53"><name pos:start="1281:12" pos:end="1281:13">h0</name><operator pos:start="1281:14" pos:end="1281:15">-&gt;</operator><name pos:start="1281:16" pos:end="1281:24">slice_row</name><index pos:start="1281:25" pos:end="1281:53">[<expr pos:start="1281:26" pos:end="1281:52"><name pos:start="1281:26" pos:end="1281:37"><name pos:start="1281:26" pos:end="1281:26">h</name><operator pos:start="1281:27" pos:end="1281:28">-&gt;</operator><name pos:start="1281:29" pos:end="1281:37">slice_num</name></name><operator pos:start="1281:38" pos:end="1281:38">&amp;</operator><operator pos:start="1281:39" pos:end="1281:39">(</operator><name pos:start="1281:40" pos:end="1281:49">MAX_SLICES</name><operator pos:start="1281:50" pos:end="1281:50">-</operator><literal type="number" pos:start="1281:51" pos:end="1281:51">1</literal><operator pos:start="1281:52" pos:end="1281:52">)</operator></expr>]</index></name> <operator pos:start="1281:55" pos:end="1281:55">+</operator> <literal type="number" pos:start="1281:57" pos:end="1281:57">3</literal> <operator pos:start="1281:59" pos:end="1281:60">&gt;=</operator> <name pos:start="1281:62" pos:end="1281:75"><name pos:start="1281:62" pos:end="1281:62">h</name><operator pos:start="1281:63" pos:end="1281:64">-&gt;</operator><name pos:start="1281:65" pos:end="1281:75">resync_mb_y</name></name>

        <operator pos:start="1283:9" pos:end="1283:10">&amp;&amp;</operator> <name pos:start="1283:12" pos:end="1283:53"><name pos:start="1283:12" pos:end="1283:13">h0</name><operator pos:start="1283:14" pos:end="1283:15">-&gt;</operator><name pos:start="1283:16" pos:end="1283:24">slice_row</name><index pos:start="1283:25" pos:end="1283:53">[<expr pos:start="1283:26" pos:end="1283:52"><name pos:start="1283:26" pos:end="1283:37"><name pos:start="1283:26" pos:end="1283:26">h</name><operator pos:start="1283:27" pos:end="1283:28">-&gt;</operator><name pos:start="1283:29" pos:end="1283:37">slice_num</name></name><operator pos:start="1283:38" pos:end="1283:38">&amp;</operator><operator pos:start="1283:39" pos:end="1283:39">(</operator><name pos:start="1283:40" pos:end="1283:49">MAX_SLICES</name><operator pos:start="1283:50" pos:end="1283:50">-</operator><literal type="number" pos:start="1283:51" pos:end="1283:51">1</literal><operator pos:start="1283:52" pos:end="1283:52">)</operator></expr>]</index></name> <operator pos:start="1283:55" pos:end="1283:56">&lt;=</operator> <name pos:start="1283:58" pos:end="1283:71"><name pos:start="1283:58" pos:end="1283:58">h</name><operator pos:start="1283:59" pos:end="1283:60">-&gt;</operator><name pos:start="1283:61" pos:end="1283:71">resync_mb_y</name></name>

        <operator pos:start="1285:9" pos:end="1285:10">&amp;&amp;</operator> <name pos:start="1285:12" pos:end="1285:23"><name pos:start="1285:12" pos:end="1285:12">h</name><operator pos:start="1285:13" pos:end="1285:14">-&gt;</operator><name pos:start="1285:15" pos:end="1285:23">slice_num</name></name> <operator pos:start="1285:25" pos:end="1285:26">&gt;=</operator> <name pos:start="1285:28" pos:end="1285:37">MAX_SLICES</name></expr>)</condition> <block pos:start="1285:40" pos:end="1291:5">{<block_content pos:start="1289:9" pos:end="1289:166">

        <comment type="line" pos:start="1287:9" pos:end="1287:119">//in case of ASO this check needs to be updated depending on how we decide to assign slice numbers in this case</comment>

        <expr_stmt pos:start="1289:9" pos:end="1289:166"><expr pos:start="1289:9" pos:end="1289:165"><call pos:start="1289:9" pos:end="1289:165"><name pos:start="1289:9" pos:end="1289:14">av_log</name><argument_list pos:start="1289:15" pos:end="1289:165">(<argument pos:start="1289:16" pos:end="1289:23"><expr pos:start="1289:16" pos:end="1289:23"><name pos:start="1289:16" pos:end="1289:23"><name pos:start="1289:16" pos:end="1289:16">h</name><operator pos:start="1289:17" pos:end="1289:18">-&gt;</operator><name pos:start="1289:19" pos:end="1289:23">avctx</name></name></expr></argument>, <argument pos:start="1289:26" pos:end="1289:39"><expr pos:start="1289:26" pos:end="1289:39"><name pos:start="1289:26" pos:end="1289:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="1289:42" pos:end="1289:138"><expr pos:start="1289:42" pos:end="1289:138"><literal type="string" pos:start="1289:42" pos:end="1289:138">"Possibly too many slices (%d &gt;= %d), increase MAX_SLICES and recompile if there are artifacts\n"</literal></expr></argument>, <argument pos:start="1289:141" pos:end="1289:152"><expr pos:start="1289:141" pos:end="1289:152"><name pos:start="1289:141" pos:end="1289:152"><name pos:start="1289:141" pos:end="1289:141">h</name><operator pos:start="1289:142" pos:end="1289:143">-&gt;</operator><name pos:start="1289:144" pos:end="1289:152">slice_num</name></name></expr></argument>, <argument pos:start="1289:155" pos:end="1289:164"><expr pos:start="1289:155" pos:end="1289:164"><name pos:start="1289:155" pos:end="1289:164">MAX_SLICES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="1295:5" pos:end="1357:5">for <control pos:start="1295:9" pos:end="1295:27">(<init pos:start="1295:10" pos:end="1295:15"><expr pos:start="1295:10" pos:end="1295:14"><name pos:start="1295:10" pos:end="1295:10">j</name> <operator pos:start="1295:12" pos:end="1295:12">=</operator> <literal type="number" pos:start="1295:14" pos:end="1295:14">0</literal></expr>;</init> <condition pos:start="1295:17" pos:end="1295:22"><expr pos:start="1295:17" pos:end="1295:21"><name pos:start="1295:17" pos:end="1295:17">j</name> <operator pos:start="1295:19" pos:end="1295:19">&lt;</operator> <literal type="number" pos:start="1295:21" pos:end="1295:21">2</literal></expr>;</condition> <incr pos:start="1295:24" pos:end="1295:26"><expr pos:start="1295:24" pos:end="1295:26"><name pos:start="1295:24" pos:end="1295:24">j</name><operator pos:start="1295:25" pos:end="1295:26">++</operator></expr></incr>)</control> <block pos:start="1295:29" pos:end="1357:5">{<block_content pos:start="1297:9" pos:end="1355:63">

        <decl_stmt pos:start="1297:9" pos:end="1297:24"><decl pos:start="1297:9" pos:end="1297:23"><type pos:start="1297:9" pos:end="1297:11"><name pos:start="1297:9" pos:end="1297:11">int</name></type> <name pos:start="1297:13" pos:end="1297:23"><name pos:start="1297:13" pos:end="1297:19">id_list</name><index pos:start="1297:20" pos:end="1297:23">[<expr pos:start="1297:21" pos:end="1297:22"><literal type="number" pos:start="1297:21" pos:end="1297:22">16</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="1299:9" pos:end="1299:70"><decl pos:start="1299:9" pos:end="1299:69"><type pos:start="1299:9" pos:end="1299:13"><name pos:start="1299:9" pos:end="1299:11">int</name> <modifier pos:start="1299:13" pos:end="1299:13">*</modifier></type><name pos:start="1299:14" pos:end="1299:20">ref2frm</name> <init pos:start="1299:22" pos:end="1299:69">= <expr pos:start="1299:24" pos:end="1299:69"><name pos:start="1299:24" pos:end="1299:69"><name pos:start="1299:24" pos:end="1299:24">h</name><operator pos:start="1299:25" pos:end="1299:26">-&gt;</operator><name pos:start="1299:27" pos:end="1299:33">ref2frm</name><index pos:start="1299:34" pos:end="1299:66">[<expr pos:start="1299:35" pos:end="1299:65"><name pos:start="1299:35" pos:end="1299:46"><name pos:start="1299:35" pos:end="1299:35">h</name><operator pos:start="1299:36" pos:end="1299:37">-&gt;</operator><name pos:start="1299:38" pos:end="1299:46">slice_num</name></name> <operator pos:start="1299:48" pos:end="1299:48">&amp;</operator> <operator pos:start="1299:50" pos:end="1299:50">(</operator><name pos:start="1299:51" pos:end="1299:60">MAX_SLICES</name> <operator pos:start="1299:62" pos:end="1299:62">-</operator> <literal type="number" pos:start="1299:64" pos:end="1299:64">1</literal><operator pos:start="1299:65" pos:end="1299:65">)</operator></expr>]</index><index pos:start="1299:67" pos:end="1299:69">[<expr pos:start="1299:68" pos:end="1299:68"><name pos:start="1299:68" pos:end="1299:68">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="1301:9" pos:end="1335:9">for <control pos:start="1301:13" pos:end="1301:32">(<init pos:start="1301:14" pos:end="1301:19"><expr pos:start="1301:14" pos:end="1301:18"><name pos:start="1301:14" pos:end="1301:14">i</name> <operator pos:start="1301:16" pos:end="1301:16">=</operator> <literal type="number" pos:start="1301:18" pos:end="1301:18">0</literal></expr>;</init> <condition pos:start="1301:21" pos:end="1301:27"><expr pos:start="1301:21" pos:end="1301:26"><name pos:start="1301:21" pos:end="1301:21">i</name> <operator pos:start="1301:23" pos:end="1301:23">&lt;</operator> <literal type="number" pos:start="1301:25" pos:end="1301:26">16</literal></expr>;</condition> <incr pos:start="1301:29" pos:end="1301:31"><expr pos:start="1301:29" pos:end="1301:31"><name pos:start="1301:29" pos:end="1301:29">i</name><operator pos:start="1301:30" pos:end="1301:31">++</operator></expr></incr>)</control> <block pos:start="1301:34" pos:end="1335:9">{<block_content pos:start="1303:13" pos:end="1333:13">

            <expr_stmt pos:start="1303:13" pos:end="1303:28"><expr pos:start="1303:13" pos:end="1303:27"><name pos:start="1303:13" pos:end="1303:22"><name pos:start="1303:13" pos:end="1303:19">id_list</name><index pos:start="1303:20" pos:end="1303:22">[<expr pos:start="1303:21" pos:end="1303:21"><name pos:start="1303:21" pos:end="1303:21">i</name></expr>]</index></name> <operator pos:start="1303:24" pos:end="1303:24">=</operator> <literal type="number" pos:start="1303:26" pos:end="1303:27">60</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1305:13" pos:end="1333:13"><if pos:start="1305:13" pos:end="1333:13">if <condition pos:start="1305:16" pos:end="1307:43">(<expr pos:start="1305:17" pos:end="1307:42"><name pos:start="1305:17" pos:end="1305:17">j</name> <operator pos:start="1305:19" pos:end="1305:19">&lt;</operator> <name pos:start="1305:21" pos:end="1305:33"><name pos:start="1305:21" pos:end="1305:21">h</name><operator pos:start="1305:22" pos:end="1305:23">-&gt;</operator><name pos:start="1305:24" pos:end="1305:33">list_count</name></name> <operator pos:start="1305:35" pos:end="1305:36">&amp;&amp;</operator> <name pos:start="1305:38" pos:end="1305:38">i</name> <operator pos:start="1305:40" pos:end="1305:40">&lt;</operator> <name pos:start="1305:42" pos:end="1305:56"><name pos:start="1305:42" pos:end="1305:42">h</name><operator pos:start="1305:43" pos:end="1305:44">-&gt;</operator><name pos:start="1305:45" pos:end="1305:53">ref_count</name><index pos:start="1305:54" pos:end="1305:56">[<expr pos:start="1305:55" pos:end="1305:55"><name pos:start="1305:55" pos:end="1305:55">j</name></expr>]</index></name> <operator pos:start="1305:58" pos:end="1305:59">&amp;&amp;</operator>

                <name pos:start="1307:17" pos:end="1307:33"><name pos:start="1307:17" pos:end="1307:17">h</name><operator pos:start="1307:18" pos:end="1307:19">-&gt;</operator><name pos:start="1307:20" pos:end="1307:27">ref_list</name><index pos:start="1307:28" pos:end="1307:30">[<expr pos:start="1307:29" pos:end="1307:29"><name pos:start="1307:29" pos:end="1307:29">j</name></expr>]</index><index pos:start="1307:31" pos:end="1307:33">[<expr pos:start="1307:32" pos:end="1307:32"><name pos:start="1307:32" pos:end="1307:32">i</name></expr>]</index></name><operator pos:start="1307:34" pos:end="1307:34">.</operator><name pos:start="1307:35" pos:end="1307:42"><name pos:start="1307:35" pos:end="1307:35">f</name><operator pos:start="1307:36" pos:end="1307:36">.</operator><name pos:start="1307:37" pos:end="1307:39">buf</name><index pos:start="1307:40" pos:end="1307:42">[<expr pos:start="1307:41" pos:end="1307:41"><literal type="number" pos:start="1307:41" pos:end="1307:41">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="1307:45" pos:end="1333:13">{<block_content pos:start="1309:17" pos:end="1331:21">

                <decl_stmt pos:start="1309:17" pos:end="1309:22"><decl pos:start="1309:17" pos:end="1309:21"><type pos:start="1309:17" pos:end="1309:19"><name pos:start="1309:17" pos:end="1309:19">int</name></type> <name pos:start="1309:21" pos:end="1309:21">k</name></decl>;</decl_stmt>

                <decl_stmt pos:start="1311:17" pos:end="1311:67"><decl pos:start="1311:17" pos:end="1311:66"><type pos:start="1311:17" pos:end="1311:26"><name pos:start="1311:17" pos:end="1311:24">AVBuffer</name> <modifier pos:start="1311:26" pos:end="1311:26">*</modifier></type><name pos:start="1311:27" pos:end="1311:29">buf</name> <init pos:start="1311:31" pos:end="1311:66">= <expr pos:start="1311:33" pos:end="1311:66"><name pos:start="1311:33" pos:end="1311:49"><name pos:start="1311:33" pos:end="1311:33">h</name><operator pos:start="1311:34" pos:end="1311:35">-&gt;</operator><name pos:start="1311:36" pos:end="1311:43">ref_list</name><index pos:start="1311:44" pos:end="1311:46">[<expr pos:start="1311:45" pos:end="1311:45"><name pos:start="1311:45" pos:end="1311:45">j</name></expr>]</index><index pos:start="1311:47" pos:end="1311:49">[<expr pos:start="1311:48" pos:end="1311:48"><name pos:start="1311:48" pos:end="1311:48">i</name></expr>]</index></name><operator pos:start="1311:50" pos:end="1311:50">.</operator><name pos:start="1311:51" pos:end="1311:58"><name pos:start="1311:51" pos:end="1311:51">f</name><operator pos:start="1311:52" pos:end="1311:52">.</operator><name pos:start="1311:53" pos:end="1311:55">buf</name><index pos:start="1311:56" pos:end="1311:58">[<expr pos:start="1311:57" pos:end="1311:57"><literal type="number" pos:start="1311:57" pos:end="1311:57">0</literal></expr>]</index></name><operator pos:start="1311:59" pos:end="1311:60">-&gt;</operator><name pos:start="1311:61" pos:end="1311:66">buffer</name></expr></init></decl>;</decl_stmt>

                <for pos:start="1313:17" pos:end="1321:21">for <control pos:start="1313:21" pos:end="1313:56">(<init pos:start="1313:22" pos:end="1313:27"><expr pos:start="1313:22" pos:end="1313:26"><name pos:start="1313:22" pos:end="1313:22">k</name> <operator pos:start="1313:24" pos:end="1313:24">=</operator> <literal type="number" pos:start="1313:26" pos:end="1313:26">0</literal></expr>;</init> <condition pos:start="1313:29" pos:end="1313:51"><expr pos:start="1313:29" pos:end="1313:50"><name pos:start="1313:29" pos:end="1313:29">k</name> <operator pos:start="1313:31" pos:end="1313:31">&lt;</operator> <name pos:start="1313:33" pos:end="1313:50"><name pos:start="1313:33" pos:end="1313:33">h</name><operator pos:start="1313:34" pos:end="1313:35">-&gt;</operator><name pos:start="1313:36" pos:end="1313:50">short_ref_count</name></name></expr>;</condition> <incr pos:start="1313:53" pos:end="1313:55"><expr pos:start="1313:53" pos:end="1313:55"><name pos:start="1313:53" pos:end="1313:53">k</name><operator pos:start="1313:54" pos:end="1313:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1315:21" pos:end="1321:21"><block_content pos:start="1315:21" pos:end="1321:21">

                    <if_stmt pos:start="1315:21" pos:end="1321:21"><if pos:start="1315:21" pos:end="1321:21">if <condition pos:start="1315:24" pos:end="1315:65">(<expr pos:start="1315:25" pos:end="1315:64"><name pos:start="1315:25" pos:end="1315:39"><name pos:start="1315:25" pos:end="1315:25">h</name><operator pos:start="1315:26" pos:end="1315:27">-&gt;</operator><name pos:start="1315:28" pos:end="1315:36">short_ref</name><index pos:start="1315:37" pos:end="1315:39">[<expr pos:start="1315:38" pos:end="1315:38"><name pos:start="1315:38" pos:end="1315:38">k</name></expr>]</index></name><operator pos:start="1315:40" pos:end="1315:41">-&gt;</operator><name pos:start="1315:42" pos:end="1315:49"><name pos:start="1315:42" pos:end="1315:42">f</name><operator pos:start="1315:43" pos:end="1315:43">.</operator><name pos:start="1315:44" pos:end="1315:46">buf</name><index pos:start="1315:47" pos:end="1315:49">[<expr pos:start="1315:48" pos:end="1315:48"><literal type="number" pos:start="1315:48" pos:end="1315:48">0</literal></expr>]</index></name><operator pos:start="1315:50" pos:end="1315:51">-&gt;</operator><name pos:start="1315:52" pos:end="1315:57">buffer</name> <operator pos:start="1315:59" pos:end="1315:60">==</operator> <name pos:start="1315:62" pos:end="1315:64">buf</name></expr>)</condition> <block pos:start="1315:67" pos:end="1321:21">{<block_content pos:start="1317:25" pos:end="1319:30">

                        <expr_stmt pos:start="1317:25" pos:end="1317:39"><expr pos:start="1317:25" pos:end="1317:38"><name pos:start="1317:25" pos:end="1317:34"><name pos:start="1317:25" pos:end="1317:31">id_list</name><index pos:start="1317:32" pos:end="1317:34">[<expr pos:start="1317:33" pos:end="1317:33"><name pos:start="1317:33" pos:end="1317:33">i</name></expr>]</index></name> <operator pos:start="1317:36" pos:end="1317:36">=</operator> <name pos:start="1317:38" pos:end="1317:38">k</name></expr>;</expr_stmt>

                        <break pos:start="1319:25" pos:end="1319:30">break;</break>

                    </block_content>}</block></if></if_stmt></block_content></block></for>

                <for pos:start="1323:17" pos:end="1331:21">for <control pos:start="1323:21" pos:end="1323:55">(<init pos:start="1323:22" pos:end="1323:27"><expr pos:start="1323:22" pos:end="1323:26"><name pos:start="1323:22" pos:end="1323:22">k</name> <operator pos:start="1323:24" pos:end="1323:24">=</operator> <literal type="number" pos:start="1323:26" pos:end="1323:26">0</literal></expr>;</init> <condition pos:start="1323:29" pos:end="1323:50"><expr pos:start="1323:29" pos:end="1323:49"><name pos:start="1323:29" pos:end="1323:29">k</name> <operator pos:start="1323:31" pos:end="1323:31">&lt;</operator> <name pos:start="1323:33" pos:end="1323:49"><name pos:start="1323:33" pos:end="1323:33">h</name><operator pos:start="1323:34" pos:end="1323:35">-&gt;</operator><name pos:start="1323:36" pos:end="1323:49">long_ref_count</name></name></expr>;</condition> <incr pos:start="1323:52" pos:end="1323:54"><expr pos:start="1323:52" pos:end="1323:54"><name pos:start="1323:52" pos:end="1323:52">k</name><operator pos:start="1323:53" pos:end="1323:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1325:21" pos:end="1331:21"><block_content pos:start="1325:21" pos:end="1331:21">

                    <if_stmt pos:start="1325:21" pos:end="1331:21"><if pos:start="1325:21" pos:end="1331:21">if <condition pos:start="1325:24" pos:end="1325:82">(<expr pos:start="1325:25" pos:end="1325:81"><name pos:start="1325:25" pos:end="1325:38"><name pos:start="1325:25" pos:end="1325:25">h</name><operator pos:start="1325:26" pos:end="1325:27">-&gt;</operator><name pos:start="1325:28" pos:end="1325:35">long_ref</name><index pos:start="1325:36" pos:end="1325:38">[<expr pos:start="1325:37" pos:end="1325:37"><name pos:start="1325:37" pos:end="1325:37">k</name></expr>]</index></name> <operator pos:start="1325:40" pos:end="1325:41">&amp;&amp;</operator> <name pos:start="1325:43" pos:end="1325:56"><name pos:start="1325:43" pos:end="1325:43">h</name><operator pos:start="1325:44" pos:end="1325:45">-&gt;</operator><name pos:start="1325:46" pos:end="1325:53">long_ref</name><index pos:start="1325:54" pos:end="1325:56">[<expr pos:start="1325:55" pos:end="1325:55"><name pos:start="1325:55" pos:end="1325:55">k</name></expr>]</index></name><operator pos:start="1325:57" pos:end="1325:58">-&gt;</operator><name pos:start="1325:59" pos:end="1325:66"><name pos:start="1325:59" pos:end="1325:59">f</name><operator pos:start="1325:60" pos:end="1325:60">.</operator><name pos:start="1325:61" pos:end="1325:63">buf</name><index pos:start="1325:64" pos:end="1325:66">[<expr pos:start="1325:65" pos:end="1325:65"><literal type="number" pos:start="1325:65" pos:end="1325:65">0</literal></expr>]</index></name><operator pos:start="1325:67" pos:end="1325:68">-&gt;</operator><name pos:start="1325:69" pos:end="1325:74">buffer</name> <operator pos:start="1325:76" pos:end="1325:77">==</operator> <name pos:start="1325:79" pos:end="1325:81">buf</name></expr>)</condition> <block pos:start="1325:84" pos:end="1331:21">{<block_content pos:start="1327:25" pos:end="1329:30">

                        <expr_stmt pos:start="1327:25" pos:end="1327:60"><expr pos:start="1327:25" pos:end="1327:59"><name pos:start="1327:25" pos:end="1327:34"><name pos:start="1327:25" pos:end="1327:31">id_list</name><index pos:start="1327:32" pos:end="1327:34">[<expr pos:start="1327:33" pos:end="1327:33"><name pos:start="1327:33" pos:end="1327:33">i</name></expr>]</index></name> <operator pos:start="1327:36" pos:end="1327:36">=</operator> <name pos:start="1327:38" pos:end="1327:55"><name pos:start="1327:38" pos:end="1327:38">h</name><operator pos:start="1327:39" pos:end="1327:40">-&gt;</operator><name pos:start="1327:41" pos:end="1327:55">short_ref_count</name></name> <operator pos:start="1327:57" pos:end="1327:57">+</operator> <name pos:start="1327:59" pos:end="1327:59">k</name></expr>;</expr_stmt>

                        <break pos:start="1329:25" pos:end="1329:30">break;</break>

                    </block_content>}</block></if></if_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="1339:9" pos:end="1341:24"><expr pos:start="1339:9" pos:end="1341:23"><name pos:start="1339:9" pos:end="1339:18"><name pos:start="1339:9" pos:end="1339:15">ref2frm</name><index pos:start="1339:16" pos:end="1339:18">[<expr pos:start="1339:17" pos:end="1339:17"><literal type="number" pos:start="1339:17" pos:end="1339:17">0</literal></expr>]</index></name> <operator pos:start="1339:20" pos:end="1339:20">=</operator>

        <name pos:start="1341:9" pos:end="1341:18"><name pos:start="1341:9" pos:end="1341:15">ref2frm</name><index pos:start="1341:16" pos:end="1341:18">[<expr pos:start="1341:17" pos:end="1341:17"><literal type="number" pos:start="1341:17" pos:end="1341:17">1</literal></expr>]</index></name> <operator pos:start="1341:20" pos:end="1341:20">=</operator> <operator pos:start="1341:22" pos:end="1341:22">-</operator><literal type="number" pos:start="1341:23" pos:end="1341:23">1</literal></expr>;</expr_stmt>

        <for pos:start="1343:9" pos:end="1345:80">for <control pos:start="1343:13" pos:end="1343:32">(<init pos:start="1343:14" pos:end="1343:19"><expr pos:start="1343:14" pos:end="1343:18"><name pos:start="1343:14" pos:end="1343:14">i</name> <operator pos:start="1343:16" pos:end="1343:16">=</operator> <literal type="number" pos:start="1343:18" pos:end="1343:18">0</literal></expr>;</init> <condition pos:start="1343:21" pos:end="1343:27"><expr pos:start="1343:21" pos:end="1343:26"><name pos:start="1343:21" pos:end="1343:21">i</name> <operator pos:start="1343:23" pos:end="1343:23">&lt;</operator> <literal type="number" pos:start="1343:25" pos:end="1343:26">16</literal></expr>;</condition> <incr pos:start="1343:29" pos:end="1343:31"><expr pos:start="1343:29" pos:end="1343:31"><name pos:start="1343:29" pos:end="1343:29">i</name><operator pos:start="1343:30" pos:end="1343:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1345:13" pos:end="1345:80"><block_content pos:start="1345:13" pos:end="1345:80">

            <expr_stmt pos:start="1345:13" pos:end="1345:80"><expr pos:start="1345:13" pos:end="1345:79"><name pos:start="1345:13" pos:end="1345:26"><name pos:start="1345:13" pos:end="1345:19">ref2frm</name><index pos:start="1345:20" pos:end="1345:26">[<expr pos:start="1345:21" pos:end="1345:25"><name pos:start="1345:21" pos:end="1345:21">i</name> <operator pos:start="1345:23" pos:end="1345:23">+</operator> <literal type="number" pos:start="1345:25" pos:end="1345:25">2</literal></expr>]</index></name> <operator pos:start="1345:28" pos:end="1345:28">=</operator> <literal type="number" pos:start="1345:30" pos:end="1345:30">4</literal> <operator pos:start="1345:32" pos:end="1345:32">*</operator> <name pos:start="1345:34" pos:end="1345:43"><name pos:start="1345:34" pos:end="1345:40">id_list</name><index pos:start="1345:41" pos:end="1345:43">[<expr pos:start="1345:42" pos:end="1345:42"><name pos:start="1345:42" pos:end="1345:42">i</name></expr>]</index></name> <operator pos:start="1345:45" pos:end="1345:45">+</operator> <operator pos:start="1345:47" pos:end="1345:47">(</operator><name pos:start="1345:48" pos:end="1345:64"><name pos:start="1345:48" pos:end="1345:48">h</name><operator pos:start="1345:49" pos:end="1345:50">-&gt;</operator><name pos:start="1345:51" pos:end="1345:58">ref_list</name><index pos:start="1345:59" pos:end="1345:61">[<expr pos:start="1345:60" pos:end="1345:60"><name pos:start="1345:60" pos:end="1345:60">j</name></expr>]</index><index pos:start="1345:62" pos:end="1345:64">[<expr pos:start="1345:63" pos:end="1345:63"><name pos:start="1345:63" pos:end="1345:63">i</name></expr>]</index></name><operator pos:start="1345:65" pos:end="1345:65">.</operator><name pos:start="1345:66" pos:end="1345:74">reference</name> <operator pos:start="1345:76" pos:end="1345:76">&amp;</operator> <literal type="number" pos:start="1345:78" pos:end="1345:78">3</literal><operator pos:start="1345:79" pos:end="1345:79">)</operator></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="1347:9" pos:end="1349:29"><expr pos:start="1347:9" pos:end="1349:28"><name pos:start="1347:9" pos:end="1347:23"><name pos:start="1347:9" pos:end="1347:15">ref2frm</name><index pos:start="1347:16" pos:end="1347:23">[<expr pos:start="1347:17" pos:end="1347:22"><literal type="number" pos:start="1347:17" pos:end="1347:18">18</literal> <operator pos:start="1347:20" pos:end="1347:20">+</operator> <literal type="number" pos:start="1347:22" pos:end="1347:22">0</literal></expr>]</index></name> <operator pos:start="1347:25" pos:end="1347:25">=</operator>

        <name pos:start="1349:9" pos:end="1349:23"><name pos:start="1349:9" pos:end="1349:15">ref2frm</name><index pos:start="1349:16" pos:end="1349:23">[<expr pos:start="1349:17" pos:end="1349:22"><literal type="number" pos:start="1349:17" pos:end="1349:20">18</literal> <operator pos:start="1349:20" pos:end="1349:20">+</operator> <literal type="number" pos:start="1349:22" pos:end="1349:22">1</literal></expr>]</index></name> <operator pos:start="1349:25" pos:end="1349:25">=</operator> <operator pos:start="1349:27" pos:end="1349:27">-</operator><literal type="number" pos:start="1349:28" pos:end="1349:28">1</literal></expr>;</expr_stmt>

        <for pos:start="1351:9" pos:end="1355:63">for <control pos:start="1351:13" pos:end="1351:33">(<init pos:start="1351:14" pos:end="1351:20"><expr pos:start="1351:14" pos:end="1351:19"><name pos:start="1351:14" pos:end="1351:14">i</name> <operator pos:start="1351:16" pos:end="1351:16">=</operator> <literal type="number" pos:start="1351:18" pos:end="1351:19">16</literal></expr>;</init> <condition pos:start="1351:22" pos:end="1351:28"><expr pos:start="1351:22" pos:end="1351:27"><name pos:start="1351:22" pos:end="1351:22">i</name> <operator pos:start="1351:24" pos:end="1351:24">&lt;</operator> <literal type="number" pos:start="1351:26" pos:end="1351:27">48</literal></expr>;</condition> <incr pos:start="1351:30" pos:end="1351:32"><expr pos:start="1351:30" pos:end="1351:32"><name pos:start="1351:30" pos:end="1351:30">i</name><operator pos:start="1351:31" pos:end="1351:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1353:13" pos:end="1355:63"><block_content pos:start="1353:13" pos:end="1355:63">

            <expr_stmt pos:start="1353:13" pos:end="1355:63"><expr pos:start="1353:13" pos:end="1355:62"><name pos:start="1353:13" pos:end="1353:26"><name pos:start="1353:13" pos:end="1353:19">ref2frm</name><index pos:start="1353:20" pos:end="1353:26">[<expr pos:start="1353:21" pos:end="1353:25"><name pos:start="1353:21" pos:end="1353:21">i</name> <operator pos:start="1353:23" pos:end="1353:23">+</operator> <literal type="number" pos:start="1353:25" pos:end="1353:25">4</literal></expr>]</index></name> <operator pos:start="1353:28" pos:end="1353:28">=</operator> <literal type="number" pos:start="1353:30" pos:end="1353:30">4</literal> <operator pos:start="1353:32" pos:end="1353:32">*</operator> <name pos:start="1353:34" pos:end="1353:55"><name pos:start="1353:34" pos:end="1353:40">id_list</name><index pos:start="1353:41" pos:end="1353:55">[<expr pos:start="1353:42" pos:end="1353:54"><operator pos:start="1353:42" pos:end="1353:42">(</operator><name pos:start="1353:43" pos:end="1353:43">i</name> <operator pos:start="1353:45" pos:end="1353:45">-</operator> <literal type="number" pos:start="1353:47" pos:end="1353:48">16</literal><operator pos:start="1353:49" pos:end="1353:49">)</operator> <operator pos:start="1353:51" pos:end="1353:52">&gt;&gt;</operator> <literal type="number" pos:start="1353:54" pos:end="1353:54">1</literal></expr>]</index></name> <operator pos:start="1353:57" pos:end="1353:57">+</operator>

                             <operator pos:start="1355:30" pos:end="1355:30">(</operator><name pos:start="1355:31" pos:end="1355:47"><name pos:start="1355:31" pos:end="1355:31">h</name><operator pos:start="1355:32" pos:end="1355:33">-&gt;</operator><name pos:start="1355:34" pos:end="1355:41">ref_list</name><index pos:start="1355:42" pos:end="1355:44">[<expr pos:start="1355:43" pos:end="1355:43"><name pos:start="1355:43" pos:end="1355:43">j</name></expr>]</index><index pos:start="1355:45" pos:end="1355:47">[<expr pos:start="1355:46" pos:end="1355:46"><name pos:start="1355:46" pos:end="1355:46">i</name></expr>]</index></name><operator pos:start="1355:48" pos:end="1355:48">.</operator><name pos:start="1355:49" pos:end="1355:57">reference</name> <operator pos:start="1355:59" pos:end="1355:59">&amp;</operator> <literal type="number" pos:start="1355:61" pos:end="1355:61">3</literal><operator pos:start="1355:62" pos:end="1355:62">)</operator></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="1361:5" pos:end="1361:80"><if pos:start="1361:5" pos:end="1361:80">if <condition pos:start="1361:8" pos:end="1361:24">(<expr pos:start="1361:9" pos:end="1361:23"><name pos:start="1361:9" pos:end="1361:23"><name pos:start="1361:9" pos:end="1361:9">h</name><operator pos:start="1361:10" pos:end="1361:11">-&gt;</operator><name pos:start="1361:12" pos:end="1361:20">ref_count</name><index pos:start="1361:21" pos:end="1361:23">[<expr pos:start="1361:22" pos:end="1361:22"><literal type="number" pos:start="1361:22" pos:end="1361:22">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="1361:26" pos:end="1361:80"><block_content pos:start="1361:26" pos:end="1361:80"> <expr_stmt pos:start="1361:26" pos:end="1361:80"><expr pos:start="1361:26" pos:end="1361:79"><call pos:start="1361:26" pos:end="1361:79"><name pos:start="1361:26" pos:end="1361:42">ff_h264_set_erpic</name><argument_list pos:start="1361:43" pos:end="1361:79">(<argument pos:start="1361:44" pos:end="1361:58"><expr pos:start="1361:44" pos:end="1361:58"><operator pos:start="1361:44" pos:end="1361:44">&amp;</operator><name pos:start="1361:45" pos:end="1361:58"><name pos:start="1361:45" pos:end="1361:45">h</name><operator pos:start="1361:46" pos:end="1361:47">-&gt;</operator><name pos:start="1361:48" pos:end="1361:49">er</name><operator pos:start="1361:50" pos:end="1361:50">.</operator><name pos:start="1361:51" pos:end="1361:58">last_pic</name></name></expr></argument>, <argument pos:start="1361:61" pos:end="1361:78"><expr pos:start="1361:61" pos:end="1361:78"><operator pos:start="1361:61" pos:end="1361:61">&amp;</operator><name pos:start="1361:62" pos:end="1361:78"><name pos:start="1361:62" pos:end="1361:62">h</name><operator pos:start="1361:63" pos:end="1361:64">-&gt;</operator><name pos:start="1361:65" pos:end="1361:72">ref_list</name><index pos:start="1361:73" pos:end="1361:75">[<expr pos:start="1361:74" pos:end="1361:74"><literal type="number" pos:start="1361:74" pos:end="1361:74">0</literal></expr>]</index><index pos:start="1361:76" pos:end="1361:78">[<expr pos:start="1361:77" pos:end="1361:77"><literal type="number" pos:start="1361:77" pos:end="1361:77">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1363:5" pos:end="1363:80"><if pos:start="1363:5" pos:end="1363:80">if <condition pos:start="1363:8" pos:end="1363:24">(<expr pos:start="1363:9" pos:end="1363:23"><name pos:start="1363:9" pos:end="1363:23"><name pos:start="1363:9" pos:end="1363:9">h</name><operator pos:start="1363:10" pos:end="1363:11">-&gt;</operator><name pos:start="1363:12" pos:end="1363:20">ref_count</name><index pos:start="1363:21" pos:end="1363:23">[<expr pos:start="1363:22" pos:end="1363:22"><literal type="number" pos:start="1363:22" pos:end="1363:22">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="1363:26" pos:end="1363:80"><block_content pos:start="1363:26" pos:end="1363:80"> <expr_stmt pos:start="1363:26" pos:end="1363:80"><expr pos:start="1363:26" pos:end="1363:79"><call pos:start="1363:26" pos:end="1363:79"><name pos:start="1363:26" pos:end="1363:42">ff_h264_set_erpic</name><argument_list pos:start="1363:43" pos:end="1363:79">(<argument pos:start="1363:44" pos:end="1363:58"><expr pos:start="1363:44" pos:end="1363:58"><operator pos:start="1363:44" pos:end="1363:44">&amp;</operator><name pos:start="1363:45" pos:end="1363:58"><name pos:start="1363:45" pos:end="1363:45">h</name><operator pos:start="1363:46" pos:end="1363:47">-&gt;</operator><name pos:start="1363:48" pos:end="1363:49">er</name><operator pos:start="1363:50" pos:end="1363:50">.</operator><name pos:start="1363:51" pos:end="1363:58">next_pic</name></name></expr></argument>, <argument pos:start="1363:61" pos:end="1363:78"><expr pos:start="1363:61" pos:end="1363:78"><operator pos:start="1363:61" pos:end="1363:61">&amp;</operator><name pos:start="1363:62" pos:end="1363:78"><name pos:start="1363:62" pos:end="1363:62">h</name><operator pos:start="1363:63" pos:end="1363:64">-&gt;</operator><name pos:start="1363:65" pos:end="1363:72">ref_list</name><index pos:start="1363:73" pos:end="1363:75">[<expr pos:start="1363:74" pos:end="1363:74"><literal type="number" pos:start="1363:74" pos:end="1363:74">1</literal></expr>]</index><index pos:start="1363:76" pos:end="1363:78">[<expr pos:start="1363:77" pos:end="1363:77"><literal type="number" pos:start="1363:77" pos:end="1363:77">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="1367:5" pos:end="1367:38"><expr pos:start="1367:5" pos:end="1367:37"><name pos:start="1367:5" pos:end="1367:19"><name pos:start="1367:5" pos:end="1367:5">h</name><operator pos:start="1367:6" pos:end="1367:7">-&gt;</operator><name pos:start="1367:8" pos:end="1367:9">er</name><operator pos:start="1367:10" pos:end="1367:10">.</operator><name pos:start="1367:11" pos:end="1367:19">ref_count</name></name> <operator pos:start="1367:21" pos:end="1367:21">=</operator> <name pos:start="1367:23" pos:end="1367:37"><name pos:start="1367:23" pos:end="1367:23">h</name><operator pos:start="1367:24" pos:end="1367:25">-&gt;</operator><name pos:start="1367:26" pos:end="1367:34">ref_count</name><index pos:start="1367:35" pos:end="1367:37">[<expr pos:start="1367:36" pos:end="1367:36"><literal type="number" pos:start="1367:36" pos:end="1367:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="1369:5" pos:end="1369:27"><expr pos:start="1369:5" pos:end="1369:26"><name pos:start="1369:5" pos:end="1369:17"><name pos:start="1369:5" pos:end="1369:6">h0</name><operator pos:start="1369:7" pos:end="1369:8">-&gt;</operator><name pos:start="1369:9" pos:end="1369:17">au_pps_id</name></name> <operator pos:start="1369:19" pos:end="1369:19">=</operator> <name pos:start="1369:21" pos:end="1369:26">pps_id</name></expr>;</expr_stmt>

    <expr_stmt pos:start="1371:5" pos:end="1373:44"><expr pos:start="1371:5" pos:end="1373:43"><name pos:start="1371:5" pos:end="1371:14"><name pos:start="1371:5" pos:end="1371:5">h</name><operator pos:start="1371:6" pos:end="1371:7">-&gt;</operator><name pos:start="1371:8" pos:end="1371:10">sps</name><operator pos:start="1371:11" pos:end="1371:11">.</operator><name pos:start="1371:12" pos:end="1371:14">new</name></name> <operator pos:start="1371:16" pos:end="1371:16">=</operator>

    <name pos:start="1373:5" pos:end="1373:34"><name pos:start="1373:5" pos:end="1373:6">h0</name><operator pos:start="1373:7" pos:end="1373:8">-&gt;</operator><name pos:start="1373:9" pos:end="1373:19">sps_buffers</name><index pos:start="1373:20" pos:end="1373:34">[<expr pos:start="1373:21" pos:end="1373:33"><name pos:start="1373:21" pos:end="1373:33"><name pos:start="1373:21" pos:end="1373:21">h</name><operator pos:start="1373:22" pos:end="1373:23">-&gt;</operator><name pos:start="1373:24" pos:end="1373:26">pps</name><operator pos:start="1373:27" pos:end="1373:27">.</operator><name pos:start="1373:28" pos:end="1373:33">sps_id</name></name></expr>]</index></name><operator pos:start="1373:35" pos:end="1373:36">-&gt;</operator><name pos:start="1373:37" pos:end="1373:39">new</name> <operator pos:start="1373:41" pos:end="1373:41">=</operator> <literal type="number" pos:start="1373:43" pos:end="1373:43">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1375:5" pos:end="1375:38"><expr pos:start="1375:5" pos:end="1375:37"><name pos:start="1375:5" pos:end="1375:21"><name pos:start="1375:5" pos:end="1375:5">h</name><operator pos:start="1375:6" pos:end="1375:7">-&gt;</operator><name pos:start="1375:8" pos:end="1375:21">current_sps_id</name></name> <operator pos:start="1375:23" pos:end="1375:23">=</operator> <name pos:start="1375:25" pos:end="1375:37"><name pos:start="1375:25" pos:end="1375:25">h</name><operator pos:start="1375:26" pos:end="1375:27">-&gt;</operator><name pos:start="1375:28" pos:end="1375:30">pps</name><operator pos:start="1375:31" pos:end="1375:31">.</operator><name pos:start="1375:32" pos:end="1375:37">sps_id</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="1379:5" pos:end="1417:5"><if pos:start="1379:5" pos:end="1417:5">if <condition pos:start="1379:8" pos:end="1379:45">(<expr pos:start="1379:9" pos:end="1379:44"><name pos:start="1379:9" pos:end="1379:23"><name pos:start="1379:9" pos:end="1379:9">h</name><operator pos:start="1379:10" pos:end="1379:11">-&gt;</operator><name pos:start="1379:12" pos:end="1379:16">avctx</name><operator pos:start="1379:17" pos:end="1379:18">-&gt;</operator><name pos:start="1379:19" pos:end="1379:23">debug</name></name> <operator pos:start="1379:25" pos:end="1379:25">&amp;</operator> <name pos:start="1379:27" pos:end="1379:44">FF_DEBUG_PICT_INFO</name></expr>)</condition> <block pos:start="1379:47" pos:end="1417:5">{<block_content pos:start="1381:9" pos:end="1415:104">

        <expr_stmt pos:start="1381:9" pos:end="1415:104"><expr pos:start="1381:9" pos:end="1415:103"><call pos:start="1381:9" pos:end="1415:103"><name pos:start="1381:9" pos:end="1381:14">av_log</name><argument_list pos:start="1381:15" pos:end="1415:103">(<argument pos:start="1381:16" pos:end="1381:23"><expr pos:start="1381:16" pos:end="1381:23"><name pos:start="1381:16" pos:end="1381:23"><name pos:start="1381:16" pos:end="1381:16">h</name><operator pos:start="1381:17" pos:end="1381:18">-&gt;</operator><name pos:start="1381:19" pos:end="1381:23">avctx</name></name></expr></argument>, <argument pos:start="1381:26" pos:end="1381:37"><expr pos:start="1381:26" pos:end="1381:37"><name pos:start="1381:26" pos:end="1381:37">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="1383:16" pos:end="1383:114"><expr pos:start="1383:16" pos:end="1383:114"><literal type="string" pos:start="1383:16" pos:end="1383:114">"slice:%d %s mb:%d %c%s%s pps:%u frame:%d poc:%d/%d ref:%d/%d qp:%d loop:%d:%d:%d weight:%d%s %s\n"</literal></expr></argument>,

               <argument pos:start="1385:16" pos:end="1385:27"><expr pos:start="1385:16" pos:end="1385:27"><name pos:start="1385:16" pos:end="1385:27"><name pos:start="1385:16" pos:end="1385:16">h</name><operator pos:start="1385:17" pos:end="1385:18">-&gt;</operator><name pos:start="1385:19" pos:end="1385:27">slice_num</name></name></expr></argument>,

               <argument pos:start="1387:16" pos:end="1387:110"><expr pos:start="1387:16" pos:end="1387:110"><operator pos:start="1387:16" pos:end="1387:16">(</operator><ternary pos:start="1387:17" pos:end="1387:109"><condition pos:start="1387:17" pos:end="1387:52"><expr pos:start="1387:17" pos:end="1387:50"><name pos:start="1387:17" pos:end="1387:36"><name pos:start="1387:17" pos:end="1387:17">h</name><operator pos:start="1387:18" pos:end="1387:19">-&gt;</operator><name pos:start="1387:20" pos:end="1387:36">picture_structure</name></name> <operator pos:start="1387:38" pos:end="1387:39">==</operator> <name pos:start="1387:41" pos:end="1387:50">PICT_FRAME</name></expr> ?</condition><then pos:start="1387:54" pos:end="1387:56"> <expr pos:start="1387:54" pos:end="1387:56"><literal type="string" pos:start="1387:54" pos:end="1387:56">"F"</literal></expr> </then><else pos:start="1387:58" pos:end="1387:109">: <expr pos:start="1387:60" pos:end="1387:109"><ternary pos:start="1387:60" pos:end="1387:109"><condition pos:start="1387:60" pos:end="1387:99"><expr pos:start="1387:60" pos:end="1387:97"><name pos:start="1387:60" pos:end="1387:79"><name pos:start="1387:60" pos:end="1387:60">h</name><operator pos:start="1387:61" pos:end="1387:62">-&gt;</operator><name pos:start="1387:63" pos:end="1387:79">picture_structure</name></name> <operator pos:start="1387:81" pos:end="1387:82">==</operator> <name pos:start="1387:84" pos:end="1387:97">PICT_TOP_FIELD</name></expr> ?</condition><then pos:start="1387:101" pos:end="1387:103"> <expr pos:start="1387:101" pos:end="1387:103"><literal type="string" pos:start="1387:101" pos:end="1387:103">"T"</literal></expr> </then><else pos:start="1387:105" pos:end="1387:109">: <expr pos:start="1387:107" pos:end="1387:109"><literal type="string" pos:start="1387:107" pos:end="1387:109">"B"</literal></expr></else></ternary></expr></else></ternary><operator pos:start="1387:110" pos:end="1387:110">)</operator></expr></argument>,

               <argument pos:start="1389:16" pos:end="1389:32"><expr pos:start="1389:16" pos:end="1389:32"><name pos:start="1389:16" pos:end="1389:32">first_mb_in_slice</name></expr></argument>,

               <argument pos:start="1391:16" pos:end="1391:54"><expr pos:start="1391:16" pos:end="1391:54"><call pos:start="1391:16" pos:end="1391:54"><name pos:start="1391:16" pos:end="1391:39">av_get_picture_type_char</name><argument_list pos:start="1391:40" pos:end="1391:54">(<argument pos:start="1391:41" pos:end="1391:53"><expr pos:start="1391:41" pos:end="1391:53"><name pos:start="1391:41" pos:end="1391:53"><name pos:start="1391:41" pos:end="1391:41">h</name><operator pos:start="1391:42" pos:end="1391:43">-&gt;</operator><name pos:start="1391:44" pos:end="1391:53">slice_type</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="1393:16" pos:end="1393:48"><expr pos:start="1393:16" pos:end="1393:48"><ternary pos:start="1393:16" pos:end="1393:48"><condition pos:start="1393:16" pos:end="1393:36"><expr pos:start="1393:16" pos:end="1393:34"><name pos:start="1393:16" pos:end="1393:34"><name pos:start="1393:16" pos:end="1393:16">h</name><operator pos:start="1393:17" pos:end="1393:18">-&gt;</operator><name pos:start="1393:19" pos:end="1393:34">slice_type_fixed</name></name></expr> ?</condition><then pos:start="1393:38" pos:end="1393:43"> <expr pos:start="1393:38" pos:end="1393:43"><literal type="string" pos:start="1393:38" pos:end="1393:43">" fix"</literal></expr> </then><else pos:start="1393:45" pos:end="1393:48">: <expr pos:start="1393:47" pos:end="1393:48"><literal type="string" pos:start="1393:47" pos:end="1393:48">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="1395:16" pos:end="1395:62"><expr pos:start="1395:16" pos:end="1395:62"><ternary pos:start="1395:16" pos:end="1395:62"><condition pos:start="1395:16" pos:end="1395:50"><expr pos:start="1395:16" pos:end="1395:48"><name pos:start="1395:16" pos:end="1395:31"><name pos:start="1395:16" pos:end="1395:16">h</name><operator pos:start="1395:17" pos:end="1395:18">-&gt;</operator><name pos:start="1395:19" pos:end="1395:31">nal_unit_type</name></name> <operator pos:start="1395:33" pos:end="1395:34">==</operator> <name pos:start="1395:36" pos:end="1395:48">NAL_IDR_SLICE</name></expr> ?</condition><then pos:start="1395:52" pos:end="1395:57"> <expr pos:start="1395:52" pos:end="1395:57"><literal type="string" pos:start="1395:52" pos:end="1395:57">" IDR"</literal></expr> </then><else pos:start="1395:59" pos:end="1395:62">: <expr pos:start="1395:61" pos:end="1395:62"><literal type="string" pos:start="1395:61" pos:end="1395:62">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="1397:16" pos:end="1397:21"><expr pos:start="1397:16" pos:end="1397:21"><name pos:start="1397:16" pos:end="1397:21">pps_id</name></expr></argument>, <argument pos:start="1397:24" pos:end="1397:35"><expr pos:start="1397:24" pos:end="1397:35"><name pos:start="1397:24" pos:end="1397:35"><name pos:start="1397:24" pos:end="1397:24">h</name><operator pos:start="1397:25" pos:end="1397:26">-&gt;</operator><name pos:start="1397:27" pos:end="1397:35">frame_num</name></name></expr></argument>,

               <argument pos:start="1399:16" pos:end="1399:43"><expr pos:start="1399:16" pos:end="1399:43"><name pos:start="1399:16" pos:end="1399:43"><name pos:start="1399:16" pos:end="1399:16">h</name><operator pos:start="1399:17" pos:end="1399:18">-&gt;</operator><name pos:start="1399:19" pos:end="1399:29">cur_pic_ptr</name><operator pos:start="1399:30" pos:end="1399:31">-&gt;</operator><name pos:start="1399:32" pos:end="1399:40">field_poc</name><index pos:start="1399:41" pos:end="1399:43">[<expr pos:start="1399:42" pos:end="1399:42"><literal type="number" pos:start="1399:42" pos:end="1399:42">0</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="1401:16" pos:end="1401:43"><expr pos:start="1401:16" pos:end="1401:43"><name pos:start="1401:16" pos:end="1401:43"><name pos:start="1401:16" pos:end="1401:16">h</name><operator pos:start="1401:17" pos:end="1401:18">-&gt;</operator><name pos:start="1401:19" pos:end="1401:29">cur_pic_ptr</name><operator pos:start="1401:30" pos:end="1401:31">-&gt;</operator><name pos:start="1401:32" pos:end="1401:40">field_poc</name><index pos:start="1401:41" pos:end="1401:43">[<expr pos:start="1401:42" pos:end="1401:42"><literal type="number" pos:start="1401:42" pos:end="1401:42">1</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="1403:16" pos:end="1403:30"><expr pos:start="1403:16" pos:end="1403:30"><name pos:start="1403:16" pos:end="1403:30"><name pos:start="1403:16" pos:end="1403:16">h</name><operator pos:start="1403:17" pos:end="1403:18">-&gt;</operator><name pos:start="1403:19" pos:end="1403:27">ref_count</name><index pos:start="1403:28" pos:end="1403:30">[<expr pos:start="1403:29" pos:end="1403:29"><literal type="number" pos:start="1403:29" pos:end="1403:29">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="1403:33" pos:end="1403:47"><expr pos:start="1403:33" pos:end="1403:47"><name pos:start="1403:33" pos:end="1403:47"><name pos:start="1403:33" pos:end="1403:33">h</name><operator pos:start="1403:34" pos:end="1403:35">-&gt;</operator><name pos:start="1403:36" pos:end="1403:44">ref_count</name><index pos:start="1403:45" pos:end="1403:47">[<expr pos:start="1403:46" pos:end="1403:46"><literal type="number" pos:start="1403:46" pos:end="1403:46">1</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="1405:16" pos:end="1405:24"><expr pos:start="1405:16" pos:end="1405:24"><name pos:start="1405:16" pos:end="1405:24"><name pos:start="1405:16" pos:end="1405:16">h</name><operator pos:start="1405:17" pos:end="1405:18">-&gt;</operator><name pos:start="1405:19" pos:end="1405:24">qscale</name></name></expr></argument>,

               <argument pos:start="1407:16" pos:end="1407:35"><expr pos:start="1407:16" pos:end="1407:35"><name pos:start="1407:16" pos:end="1407:35"><name pos:start="1407:16" pos:end="1407:16">h</name><operator pos:start="1407:17" pos:end="1407:18">-&gt;</operator><name pos:start="1407:19" pos:end="1407:35">deblocking_filter</name></name></expr></argument>,

               <argument pos:start="1409:16" pos:end="1409:39"><expr pos:start="1409:16" pos:end="1409:39"><name pos:start="1409:16" pos:end="1409:39"><name pos:start="1409:16" pos:end="1409:16">h</name><operator pos:start="1409:17" pos:end="1409:18">-&gt;</operator><name pos:start="1409:19" pos:end="1409:39">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="1409:42" pos:end="1409:61"><expr pos:start="1409:42" pos:end="1409:61"><name pos:start="1409:42" pos:end="1409:61"><name pos:start="1409:42" pos:end="1409:42">h</name><operator pos:start="1409:43" pos:end="1409:44">-&gt;</operator><name pos:start="1409:45" pos:end="1409:61">slice_beta_offset</name></name></expr></argument>,

               <argument pos:start="1411:16" pos:end="1411:28"><expr pos:start="1411:16" pos:end="1411:28"><name pos:start="1411:16" pos:end="1411:28"><name pos:start="1411:16" pos:end="1411:16">h</name><operator pos:start="1411:17" pos:end="1411:18">-&gt;</operator><name pos:start="1411:19" pos:end="1411:28">use_weight</name></name></expr></argument>,

               <argument pos:start="1413:16" pos:end="1413:68"><expr pos:start="1413:16" pos:end="1413:68"><ternary pos:start="1413:16" pos:end="1413:68"><condition pos:start="1413:16" pos:end="1413:59"><expr pos:start="1413:16" pos:end="1413:57"><name pos:start="1413:16" pos:end="1413:28"><name pos:start="1413:16" pos:end="1413:16">h</name><operator pos:start="1413:17" pos:end="1413:18">-&gt;</operator><name pos:start="1413:19" pos:end="1413:28">use_weight</name></name> <operator pos:start="1413:30" pos:end="1413:31">==</operator> <literal type="number" pos:start="1413:33" pos:end="1413:33">1</literal> <operator pos:start="1413:35" pos:end="1413:36">&amp;&amp;</operator> <name pos:start="1413:38" pos:end="1413:57"><name pos:start="1413:38" pos:end="1413:38">h</name><operator pos:start="1413:39" pos:end="1413:40">-&gt;</operator><name pos:start="1413:41" pos:end="1413:57">use_weight_chroma</name></name></expr> ?</condition><then pos:start="1413:61" pos:end="1413:63"> <expr pos:start="1413:61" pos:end="1413:63"><literal type="string" pos:start="1413:61" pos:end="1413:63">"c"</literal></expr> </then><else pos:start="1413:65" pos:end="1413:68">: <expr pos:start="1413:67" pos:end="1413:68"><literal type="string" pos:start="1413:67" pos:end="1413:68">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="1415:16" pos:end="1415:102"><expr pos:start="1415:16" pos:end="1415:102"><ternary pos:start="1415:16" pos:end="1415:102"><condition pos:start="1415:16" pos:end="1415:51"><expr pos:start="1415:16" pos:end="1415:49"><name pos:start="1415:16" pos:end="1415:28"><name pos:start="1415:16" pos:end="1415:16">h</name><operator pos:start="1415:17" pos:end="1415:18">-&gt;</operator><name pos:start="1415:19" pos:end="1415:28">slice_type</name></name> <operator pos:start="1415:30" pos:end="1415:31">==</operator> <name pos:start="1415:33" pos:end="1415:49">AV_PICTURE_TYPE_B</name></expr> ?</condition><then pos:start="1415:53" pos:end="1415:97"> <expr pos:start="1415:53" pos:end="1415:97"><operator pos:start="1415:53" pos:end="1415:53">(</operator><ternary pos:start="1415:54" pos:end="1415:96"><condition pos:start="1415:54" pos:end="1415:80"><expr pos:start="1415:54" pos:end="1415:78"><name pos:start="1415:54" pos:end="1415:78"><name pos:start="1415:54" pos:end="1415:54">h</name><operator pos:start="1415:55" pos:end="1415:56">-&gt;</operator><name pos:start="1415:57" pos:end="1415:78">direct_spatial_mv_pred</name></name></expr> ?</condition><then pos:start="1415:82" pos:end="1415:87"> <expr pos:start="1415:82" pos:end="1415:87"><literal type="string" pos:start="1415:82" pos:end="1415:87">"SPAT"</literal></expr> </then><else pos:start="1415:89" pos:end="1415:96">: <expr pos:start="1415:91" pos:end="1415:96"><literal type="string" pos:start="1415:91" pos:end="1415:96">"TEMP"</literal></expr></else></ternary><operator pos:start="1415:97" pos:end="1415:97">)</operator></expr> </then><else pos:start="1415:99" pos:end="1415:102">: <expr pos:start="1415:101" pos:end="1415:102"><literal type="string" pos:start="1415:101" pos:end="1415:102">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="1421:5" pos:end="1421:13">return <expr pos:start="1421:12" pos:end="1421:12"><literal type="number" pos:start="1421:12" pos:end="1421:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
