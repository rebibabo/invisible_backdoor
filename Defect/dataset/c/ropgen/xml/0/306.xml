<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/306.c" pos:tabs="8"><function pos:start="1:1" pos:end="293:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">audio_decode_frame</name><parameter_list pos:start="1:30" pos:end="1:62">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:40">VideoState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">is</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:52">double</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:61">pts_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="293:1">{<block_content pos:start="5:5" pos:end="291:5">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVPacket</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:22">pkt_temp</name> <init pos:start="5:24" pos:end="5:44">= <expr pos:start="5:26" pos:end="5:44"><operator pos:start="5:26" pos:end="5:26">&amp;</operator><name pos:start="5:27" pos:end="5:44"><name pos:start="5:27" pos:end="5:28">is</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:44">audio_pkt_temp</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVPacket</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:17">pkt</name> <init pos:start="7:19" pos:end="7:34">= <expr pos:start="7:21" pos:end="7:34"><operator pos:start="7:21" pos:end="7:21">&amp;</operator><name pos:start="7:22" pos:end="7:34"><name pos:start="7:22" pos:end="7:23">is</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">audio_pkt</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">dec</name> <init pos:start="9:25" pos:end="9:45">= <expr pos:start="9:27" pos:end="9:45"><name pos:start="9:27" pos:end="9:45"><name pos:start="9:27" pos:end="9:28">is</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:38">audio_st</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:45">codec</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:51"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">len1</name></decl>, <decl pos:start="11:15" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:18">len2</name></decl>, <decl pos:start="11:21" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:29">data_size</name></decl>, <decl pos:start="11:32" pos:end="11:50"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:32" pos:end="11:50">resampled_data_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:30">dec_channel_layout</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">got_frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">double</name></type> <name pos:start="17:12" pos:end="17:14">pts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:18">new_packet</name> <init pos:start="19:20" pos:end="19:22">= <expr pos:start="19:22" pos:end="19:22"><literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:27"><decl pos:start="21:5" pos:end="21:26"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:22">flush_complete</name> <init pos:start="21:24" pos:end="21:26">= <expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:26"><decl pos:start="23:5" pos:end="23:25"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:25">wanted_nb_samples</name></decl>;</decl_stmt>



    <for pos:start="27:5" pos:end="291:5">for <control pos:start="27:9" pos:end="27:12">(<init pos:start="27:10" pos:end="27:10">;</init><condition pos:start="27:11" pos:end="27:11">;</condition><incr/>)</control> <block pos:start="27:14" pos:end="291:5">{<block_content pos:start="31:9" pos:end="289:9">

        <comment type="block" pos:start="29:9" pos:end="29:63">/* NOTE: the audio packet can contain several frames */</comment>

        <while pos:start="31:9" pos:end="239:9">while <condition pos:start="31:15" pos:end="31:69">(<expr pos:start="31:16" pos:end="31:68"><name pos:start="31:16" pos:end="31:29"><name pos:start="31:16" pos:end="31:23">pkt_temp</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:29">size</name></name> <operator pos:start="31:31" pos:end="31:31">&gt;</operator> <literal type="number" pos:start="31:33" pos:end="31:33">0</literal> <operator pos:start="31:35" pos:end="31:36">||</operator> <operator pos:start="31:38" pos:end="31:38">(</operator><operator pos:start="31:39" pos:end="31:39">!</operator><name pos:start="31:40" pos:end="31:53"><name pos:start="31:40" pos:end="31:47">pkt_temp</name><operator pos:start="31:48" pos:end="31:49">-&gt;</operator><name pos:start="31:50" pos:end="31:53">data</name></name> <operator pos:start="31:55" pos:end="31:56">&amp;&amp;</operator> <name pos:start="31:58" pos:end="31:67">new_packet</name><operator pos:start="31:68" pos:end="31:68">)</operator></expr>)</condition> <block pos:start="31:71" pos:end="239:9">{<block_content pos:start="33:13" pos:end="237:39">

            <if_stmt pos:start="33:13" pos:end="41:54"><if pos:start="33:13" pos:end="39:13">if <condition pos:start="33:16" pos:end="33:27">(<expr pos:start="33:17" pos:end="33:26"><operator pos:start="33:17" pos:end="33:17">!</operator><name pos:start="33:18" pos:end="33:26"><name pos:start="33:18" pos:end="33:19">is</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:26">frame</name></name></expr>)</condition> <block pos:start="33:29" pos:end="39:13">{<block_content pos:start="35:17" pos:end="37:43">

                <if_stmt pos:start="35:17" pos:end="37:43"><if pos:start="35:17" pos:end="37:43">if <condition pos:start="35:20" pos:end="35:57">(<expr pos:start="35:21" pos:end="35:56"><operator pos:start="35:21" pos:end="35:21">!</operator><operator pos:start="35:22" pos:end="35:22">(</operator><name pos:start="35:23" pos:end="35:31"><name pos:start="35:23" pos:end="35:24">is</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:31">frame</name></name> <operator pos:start="35:33" pos:end="35:33">=</operator> <call pos:start="35:35" pos:end="35:55"><name pos:start="35:35" pos:end="35:53">avcodec_alloc_frame</name><argument_list pos:start="35:54" pos:end="35:55">()</argument_list></call><operator pos:start="35:56" pos:end="35:56">)</operator></expr>)</condition><block type="pseudo" pos:start="37:21" pos:end="37:43"><block_content pos:start="37:21" pos:end="37:43">

                    <return pos:start="37:21" pos:end="37:43">return <expr pos:start="37:28" pos:end="37:42"><call pos:start="37:28" pos:end="37:42"><name pos:start="37:28" pos:end="37:34">AVERROR</name><argument_list pos:start="37:35" pos:end="37:42">(<argument pos:start="37:36" pos:end="37:41"><expr pos:start="37:36" pos:end="37:41"><name pos:start="37:36" pos:end="37:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="39:15" pos:end="41:54">else<block type="pseudo" pos:start="41:17" pos:end="41:54"><block_content pos:start="41:17" pos:end="41:54">

                <expr_stmt pos:start="41:17" pos:end="41:54"><expr pos:start="41:17" pos:end="41:53"><call pos:start="41:17" pos:end="41:53"><name pos:start="41:17" pos:end="41:42">avcodec_get_frame_defaults</name><argument_list pos:start="41:43" pos:end="41:53">(<argument pos:start="41:44" pos:end="41:52"><expr pos:start="41:44" pos:end="41:52"><name pos:start="41:44" pos:end="41:52"><name pos:start="41:44" pos:end="41:45">is</name><operator pos:start="41:46" pos:end="41:47">-&gt;</operator><name pos:start="41:48" pos:end="41:52">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="45:13" pos:end="47:26"><if pos:start="45:13" pos:end="47:26">if <condition pos:start="45:16" pos:end="45:27">(<expr pos:start="45:17" pos:end="45:26"><name pos:start="45:17" pos:end="45:26"><name pos:start="45:17" pos:end="45:18">is</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:26">paused</name></name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:26"><block_content pos:start="47:17" pos:end="47:26">

                <return pos:start="47:17" pos:end="47:26">return <expr pos:start="47:24" pos:end="47:25"><operator pos:start="47:24" pos:end="47:24">-</operator><literal type="number" pos:start="47:25" pos:end="47:25">1</literal></expr>;</return></block_content></block></if></if_stmt>



            <if_stmt pos:start="51:13" pos:end="53:22"><if pos:start="51:13" pos:end="53:22">if <condition pos:start="51:16" pos:end="51:31">(<expr pos:start="51:17" pos:end="51:30"><name pos:start="51:17" pos:end="51:30">flush_complete</name></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:22"><block_content pos:start="53:17" pos:end="53:22">

                <break pos:start="53:17" pos:end="53:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:27"><expr pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:22">new_packet</name> <operator pos:start="55:24" pos:end="55:24">=</operator> <literal type="number" pos:start="55:26" pos:end="55:26">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:79"><expr pos:start="57:13" pos:end="57:78"><name pos:start="57:13" pos:end="57:16">len1</name> <operator pos:start="57:18" pos:end="57:18">=</operator> <call pos:start="57:20" pos:end="57:78"><name pos:start="57:20" pos:end="57:40">avcodec_decode_audio4</name><argument_list pos:start="57:41" pos:end="57:78">(<argument pos:start="57:42" pos:end="57:44"><expr pos:start="57:42" pos:end="57:44"><name pos:start="57:42" pos:end="57:44">dec</name></expr></argument>, <argument pos:start="57:47" pos:end="57:55"><expr pos:start="57:47" pos:end="57:55"><name pos:start="57:47" pos:end="57:55"><name pos:start="57:47" pos:end="57:48">is</name><operator pos:start="57:49" pos:end="57:50">-&gt;</operator><name pos:start="57:51" pos:end="57:55">frame</name></name></expr></argument>, <argument pos:start="57:58" pos:end="57:67"><expr pos:start="57:58" pos:end="57:67"><operator pos:start="57:58" pos:end="57:58">&amp;</operator><name pos:start="57:59" pos:end="57:67">got_frame</name></expr></argument>, <argument pos:start="57:70" pos:end="57:77"><expr pos:start="57:70" pos:end="57:77"><name pos:start="57:70" pos:end="57:77">pkt_temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="59:13" pos:end="67:13"><if pos:start="59:13" pos:end="67:13">if <condition pos:start="59:16" pos:end="59:25">(<expr pos:start="59:17" pos:end="59:24"><name pos:start="59:17" pos:end="59:20">len1</name> <operator pos:start="59:22" pos:end="59:22">&lt;</operator> <literal type="number" pos:start="59:24" pos:end="59:24">0</literal></expr>)</condition> <block pos:start="59:27" pos:end="67:13">{<block_content pos:start="63:17" pos:end="65:22">

                <comment type="block" pos:start="61:17" pos:end="61:49">/* if error, we skip the frame */</comment>

                <expr_stmt pos:start="63:17" pos:end="63:35"><expr pos:start="63:17" pos:end="63:34"><name pos:start="63:17" pos:end="63:30"><name pos:start="63:17" pos:end="63:24">pkt_temp</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:30">size</name></name> <operator pos:start="63:32" pos:end="63:32">=</operator> <literal type="number" pos:start="63:34" pos:end="63:34">0</literal></expr>;</expr_stmt>

                <break pos:start="65:17" pos:end="65:22">break;</break>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="71:13" pos:end="71:35"><expr pos:start="71:13" pos:end="71:34"><name pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:20">pkt_temp</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:26">data</name></name> <operator pos:start="71:28" pos:end="71:29">+=</operator> <name pos:start="71:31" pos:end="71:34">len1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:35"><expr pos:start="73:13" pos:end="73:34"><name pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:20">pkt_temp</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:26">size</name></name> <operator pos:start="73:28" pos:end="73:29">-=</operator> <name pos:start="73:31" pos:end="73:34">len1</name></expr>;</expr_stmt>



            <if_stmt pos:start="77:13" pos:end="87:13"><if pos:start="77:13" pos:end="87:13">if <condition pos:start="77:16" pos:end="77:27">(<expr pos:start="77:17" pos:end="77:26"><operator pos:start="77:17" pos:end="77:17">!</operator><name pos:start="77:18" pos:end="77:26">got_frame</name></expr>)</condition> <block pos:start="77:29" pos:end="87:13">{<block_content pos:start="81:17" pos:end="85:25">

                <comment type="block" pos:start="79:17" pos:end="79:75">/* stop sending empty packets if the decoder is finished */</comment>

                <if_stmt pos:start="81:17" pos:end="83:39"><if pos:start="81:17" pos:end="83:39">if <condition pos:start="81:20" pos:end="81:82">(<expr pos:start="81:21" pos:end="81:81"><operator pos:start="81:21" pos:end="81:21">!</operator><name pos:start="81:22" pos:end="81:35"><name pos:start="81:22" pos:end="81:29">pkt_temp</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:35">data</name></name> <operator pos:start="81:37" pos:end="81:38">&amp;&amp;</operator> <name pos:start="81:40" pos:end="81:63"><name pos:start="81:40" pos:end="81:42">dec</name><operator pos:start="81:43" pos:end="81:44">-&gt;</operator><name pos:start="81:45" pos:end="81:49">codec</name><operator pos:start="81:50" pos:end="81:51">-&gt;</operator><name pos:start="81:52" pos:end="81:63">capabilities</name></name> <operator pos:start="81:65" pos:end="81:65">&amp;</operator> <name pos:start="81:67" pos:end="81:81">CODEC_CAP_DELAY</name></expr>)</condition><block type="pseudo" pos:start="83:21" pos:end="83:39"><block_content pos:start="83:21" pos:end="83:39">

                    <expr_stmt pos:start="83:21" pos:end="83:39"><expr pos:start="83:21" pos:end="83:38"><name pos:start="83:21" pos:end="83:34">flush_complete</name> <operator pos:start="83:36" pos:end="83:36">=</operator> <literal type="number" pos:start="83:38" pos:end="83:38">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <continue pos:start="85:17" pos:end="85:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="89:13" pos:end="93:71"><expr pos:start="89:13" pos:end="93:70"><name pos:start="89:13" pos:end="89:21">data_size</name> <operator pos:start="89:23" pos:end="89:23">=</operator> <call pos:start="89:25" pos:end="93:70"><name pos:start="89:25" pos:end="89:50">av_samples_get_buffer_size</name><argument_list pos:start="89:51" pos:end="93:70">(<argument pos:start="89:52" pos:end="89:55"><expr pos:start="89:52" pos:end="89:55"><name pos:start="89:52" pos:end="89:55">NULL</name></expr></argument>, <argument pos:start="89:58" pos:end="89:70"><expr pos:start="89:58" pos:end="89:70"><name pos:start="89:58" pos:end="89:70"><name pos:start="89:58" pos:end="89:60">dec</name><operator pos:start="89:61" pos:end="89:62">-&gt;</operator><name pos:start="89:63" pos:end="89:70">channels</name></name></expr></argument>,

                                                   <argument pos:start="91:52" pos:end="91:72"><expr pos:start="91:52" pos:end="91:72"><name pos:start="91:52" pos:end="91:72"><name pos:start="91:52" pos:end="91:53">is</name><operator pos:start="91:54" pos:end="91:55">-&gt;</operator><name pos:start="91:56" pos:end="91:60">frame</name><operator pos:start="91:61" pos:end="91:62">-&gt;</operator><name pos:start="91:63" pos:end="91:72">nb_samples</name></name></expr></argument>,

                                                   <argument pos:start="93:52" pos:end="93:66"><expr pos:start="93:52" pos:end="93:66"><name pos:start="93:52" pos:end="93:66"><name pos:start="93:52" pos:end="93:54">dec</name><operator pos:start="93:55" pos:end="93:56">-&gt;</operator><name pos:start="93:57" pos:end="93:66">sample_fmt</name></name></expr></argument>, <argument pos:start="93:69" pos:end="93:69"><expr pos:start="93:69" pos:end="93:69"><literal type="number" pos:start="93:69" pos:end="93:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="97:13" pos:end="97:199"><expr pos:start="97:13" pos:end="97:198"><name pos:start="97:13" pos:end="97:30">dec_channel_layout</name> <operator pos:start="97:32" pos:end="97:32">=</operator> <ternary pos:start="97:34" pos:end="97:198"><condition pos:start="97:34" pos:end="97:131"><expr pos:start="97:34" pos:end="97:129"><operator pos:start="97:34" pos:end="97:34">(</operator><name pos:start="97:35" pos:end="97:53"><name pos:start="97:35" pos:end="97:37">dec</name><operator pos:start="97:38" pos:end="97:39">-&gt;</operator><name pos:start="97:40" pos:end="97:53">channel_layout</name></name> <operator pos:start="97:55" pos:end="97:56">&amp;&amp;</operator> <name pos:start="97:58" pos:end="97:70"><name pos:start="97:58" pos:end="97:60">dec</name><operator pos:start="97:61" pos:end="97:62">-&gt;</operator><name pos:start="97:63" pos:end="97:70">channels</name></name> <operator pos:start="97:72" pos:end="97:73">==</operator> <call pos:start="97:75" pos:end="97:128"><name pos:start="97:75" pos:end="97:107">av_get_channel_layout_nb_channels</name><argument_list pos:start="97:108" pos:end="97:128">(<argument pos:start="97:109" pos:end="97:127"><expr pos:start="97:109" pos:end="97:127"><name pos:start="97:109" pos:end="97:127"><name pos:start="97:109" pos:end="97:111">dec</name><operator pos:start="97:112" pos:end="97:113">-&gt;</operator><name pos:start="97:114" pos:end="97:127">channel_layout</name></name></expr></argument>)</argument_list></call><operator pos:start="97:129" pos:end="97:129">)</operator></expr> ?</condition><then pos:start="97:133" pos:end="97:151"> <expr pos:start="97:133" pos:end="97:151"><name pos:start="97:133" pos:end="97:151"><name pos:start="97:133" pos:end="97:135">dec</name><operator pos:start="97:136" pos:end="97:137">-&gt;</operator><name pos:start="97:138" pos:end="97:151">channel_layout</name></name></expr> </then><else pos:start="97:153" pos:end="97:198">: <expr pos:start="97:155" pos:end="97:198"><call pos:start="97:155" pos:end="97:198"><name pos:start="97:155" pos:end="97:183">av_get_default_channel_layout</name><argument_list pos:start="97:184" pos:end="97:198">(<argument pos:start="97:185" pos:end="97:197"><expr pos:start="97:185" pos:end="97:197"><name pos:start="97:185" pos:end="97:197"><name pos:start="97:185" pos:end="97:187">dec</name><operator pos:start="97:188" pos:end="97:189">-&gt;</operator><name pos:start="97:190" pos:end="97:197">channels</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:77"><expr pos:start="99:13" pos:end="99:76"><name pos:start="99:13" pos:end="99:29">wanted_nb_samples</name> <operator pos:start="99:31" pos:end="99:31">=</operator> <call pos:start="99:33" pos:end="99:76"><name pos:start="99:33" pos:end="99:49">synchronize_audio</name><argument_list pos:start="99:50" pos:end="99:76">(<argument pos:start="99:51" pos:end="99:52"><expr pos:start="99:51" pos:end="99:52"><name pos:start="99:51" pos:end="99:52">is</name></expr></argument>, <argument pos:start="99:55" pos:end="99:75"><expr pos:start="99:55" pos:end="99:75"><name pos:start="99:55" pos:end="99:75"><name pos:start="99:55" pos:end="99:56">is</name><operator pos:start="99:57" pos:end="99:58">-&gt;</operator><name pos:start="99:59" pos:end="99:63">frame</name><operator pos:start="99:64" pos:end="99:65">-&gt;</operator><name pos:start="99:66" pos:end="99:75">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="103:13" pos:end="151:13"><if pos:start="103:13" pos:end="151:13">if <condition pos:start="103:16" pos:end="109:77">(<expr pos:start="103:17" pos:end="109:76"><name pos:start="103:17" pos:end="103:31"><name pos:start="103:17" pos:end="103:19">dec</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:31">sample_fmt</name></name> <operator pos:start="103:33" pos:end="103:34">!=</operator> <name pos:start="103:36" pos:end="103:52"><name pos:start="103:36" pos:end="103:37">is</name><operator pos:start="103:38" pos:end="103:39">-&gt;</operator><name pos:start="103:40" pos:end="103:48">audio_src</name><operator pos:start="103:49" pos:end="103:49">.</operator><name pos:start="103:50" pos:end="103:52">fmt</name></name> <operator pos:start="103:54" pos:end="103:55">||</operator>

                <name pos:start="105:17" pos:end="105:34">dec_channel_layout</name> <operator pos:start="105:36" pos:end="105:37">!=</operator> <name pos:start="105:39" pos:end="105:66"><name pos:start="105:39" pos:end="105:40">is</name><operator pos:start="105:41" pos:end="105:42">-&gt;</operator><name pos:start="105:43" pos:end="105:51">audio_src</name><operator pos:start="105:52" pos:end="105:52">.</operator><name pos:start="105:53" pos:end="105:66">channel_layout</name></name> <operator pos:start="105:68" pos:end="105:69">||</operator>

                <name pos:start="107:17" pos:end="107:32"><name pos:start="107:17" pos:end="107:19">dec</name><operator pos:start="107:20" pos:end="107:21">-&gt;</operator><name pos:start="107:22" pos:end="107:32">sample_rate</name></name> <operator pos:start="107:34" pos:end="107:35">!=</operator> <name pos:start="107:37" pos:end="107:54"><name pos:start="107:37" pos:end="107:38">is</name><operator pos:start="107:39" pos:end="107:40">-&gt;</operator><name pos:start="107:41" pos:end="107:49">audio_src</name><operator pos:start="107:50" pos:end="107:50">.</operator><name pos:start="107:51" pos:end="107:54">freq</name></name> <operator pos:start="107:56" pos:end="107:57">||</operator>

                <operator pos:start="109:17" pos:end="109:17">(</operator><name pos:start="109:18" pos:end="109:34">wanted_nb_samples</name> <operator pos:start="109:36" pos:end="109:37">!=</operator> <name pos:start="109:39" pos:end="109:59"><name pos:start="109:39" pos:end="109:40">is</name><operator pos:start="109:41" pos:end="109:42">-&gt;</operator><name pos:start="109:43" pos:end="109:47">frame</name><operator pos:start="109:48" pos:end="109:49">-&gt;</operator><name pos:start="109:50" pos:end="109:59">nb_samples</name></name> <operator pos:start="109:61" pos:end="109:62">&amp;&amp;</operator> <operator pos:start="109:64" pos:end="109:64">!</operator><name pos:start="109:65" pos:end="109:75"><name pos:start="109:65" pos:end="109:66">is</name><operator pos:start="109:67" pos:end="109:68">-&gt;</operator><name pos:start="109:69" pos:end="109:75">swr_ctx</name></name><operator pos:start="109:76" pos:end="109:76">)</operator></expr>)</condition> <block pos:start="109:79" pos:end="151:13">{<block_content pos:start="111:17" pos:end="149:52">

                <if_stmt pos:start="111:17" pos:end="113:43"><if pos:start="111:17" pos:end="113:43">if <condition pos:start="111:20" pos:end="111:32">(<expr pos:start="111:21" pos:end="111:31"><name pos:start="111:21" pos:end="111:31"><name pos:start="111:21" pos:end="111:22">is</name><operator pos:start="111:23" pos:end="111:24">-&gt;</operator><name pos:start="111:25" pos:end="111:31">swr_ctx</name></name></expr>)</condition><block type="pseudo" pos:start="113:21" pos:end="113:43"><block_content pos:start="113:21" pos:end="113:43">

                    <expr_stmt pos:start="113:21" pos:end="113:43"><expr pos:start="113:21" pos:end="113:42"><call pos:start="113:21" pos:end="113:42"><name pos:start="113:21" pos:end="113:28">swr_free</name><argument_list pos:start="113:29" pos:end="113:42">(<argument pos:start="113:30" pos:end="113:41"><expr pos:start="113:30" pos:end="113:41"><operator pos:start="113:30" pos:end="113:30">&amp;</operator><name pos:start="113:31" pos:end="113:41"><name pos:start="113:31" pos:end="113:32">is</name><operator pos:start="113:33" pos:end="113:34">-&gt;</operator><name pos:start="113:35" pos:end="113:41">swr_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="115:17" pos:end="121:58"><expr pos:start="115:17" pos:end="121:57"><name pos:start="115:17" pos:end="115:27"><name pos:start="115:17" pos:end="115:18">is</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:27">swr_ctx</name></name> <operator pos:start="115:29" pos:end="115:29">=</operator> <call pos:start="115:31" pos:end="121:57"><name pos:start="115:31" pos:end="115:48">swr_alloc_set_opts</name><argument_list pos:start="115:49" pos:end="121:57">(<argument pos:start="115:50" pos:end="115:53"><expr pos:start="115:50" pos:end="115:53"><name pos:start="115:50" pos:end="115:53">NULL</name></expr></argument>,

                                                 <argument pos:start="117:50" pos:end="117:77"><expr pos:start="117:50" pos:end="117:77"><name pos:start="117:50" pos:end="117:77"><name pos:start="117:50" pos:end="117:51">is</name><operator pos:start="117:52" pos:end="117:53">-&gt;</operator><name pos:start="117:54" pos:end="117:62">audio_tgt</name><operator pos:start="117:63" pos:end="117:63">.</operator><name pos:start="117:64" pos:end="117:77">channel_layout</name></name></expr></argument>, <argument pos:start="117:80" pos:end="117:96"><expr pos:start="117:80" pos:end="117:96"><name pos:start="117:80" pos:end="117:96"><name pos:start="117:80" pos:end="117:81">is</name><operator pos:start="117:82" pos:end="117:83">-&gt;</operator><name pos:start="117:84" pos:end="117:92">audio_tgt</name><operator pos:start="117:93" pos:end="117:93">.</operator><name pos:start="117:94" pos:end="117:96">fmt</name></name></expr></argument>, <argument pos:start="117:99" pos:end="117:116"><expr pos:start="117:99" pos:end="117:116"><name pos:start="117:99" pos:end="117:116"><name pos:start="117:99" pos:end="117:100">is</name><operator pos:start="117:101" pos:end="117:102">-&gt;</operator><name pos:start="117:103" pos:end="117:111">audio_tgt</name><operator pos:start="117:112" pos:end="117:112">.</operator><name pos:start="117:113" pos:end="117:116">freq</name></name></expr></argument>,

                                                 <argument pos:start="119:50" pos:end="119:67"><expr pos:start="119:50" pos:end="119:67"><name pos:start="119:50" pos:end="119:67">dec_channel_layout</name></expr></argument>,           <argument pos:start="119:80" pos:end="119:94"><expr pos:start="119:80" pos:end="119:94"><name pos:start="119:80" pos:end="119:94"><name pos:start="119:80" pos:end="119:82">dec</name><operator pos:start="119:83" pos:end="119:84">-&gt;</operator><name pos:start="119:85" pos:end="119:94">sample_fmt</name></name></expr></argument>,   <argument pos:start="119:99" pos:end="119:114"><expr pos:start="119:99" pos:end="119:114"><name pos:start="119:99" pos:end="119:114"><name pos:start="119:99" pos:end="119:101">dec</name><operator pos:start="119:102" pos:end="119:103">-&gt;</operator><name pos:start="119:104" pos:end="119:114">sample_rate</name></name></expr></argument>,

                                                 <argument pos:start="121:50" pos:end="121:50"><expr pos:start="121:50" pos:end="121:50"><literal type="number" pos:start="121:50" pos:end="121:50">0</literal></expr></argument>, <argument pos:start="121:53" pos:end="121:56"><expr pos:start="121:53" pos:end="121:56"><name pos:start="121:53" pos:end="121:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="123:17" pos:end="141:17"><if pos:start="123:17" pos:end="141:17">if <condition pos:start="123:20" pos:end="123:62">(<expr pos:start="123:21" pos:end="123:61"><operator pos:start="123:21" pos:end="123:21">!</operator><name pos:start="123:22" pos:end="123:32"><name pos:start="123:22" pos:end="123:23">is</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:32">swr_ctx</name></name> <operator pos:start="123:34" pos:end="123:35">||</operator> <call pos:start="123:37" pos:end="123:57"><name pos:start="123:37" pos:end="123:44">swr_init</name><argument_list pos:start="123:45" pos:end="123:57">(<argument pos:start="123:46" pos:end="123:56"><expr pos:start="123:46" pos:end="123:56"><name pos:start="123:46" pos:end="123:56"><name pos:start="123:46" pos:end="123:47">is</name><operator pos:start="123:48" pos:end="123:49">-&gt;</operator><name pos:start="123:50" pos:end="123:56">swr_ctx</name></name></expr></argument>)</argument_list></call> <operator pos:start="123:59" pos:end="123:59">&lt;</operator> <literal type="number" pos:start="123:61" pos:end="123:61">0</literal></expr>)</condition> <block pos:start="123:64" pos:end="141:17">{<block_content pos:start="125:21" pos:end="139:26">

                    <expr_stmt pos:start="125:21" pos:end="137:48"><expr pos:start="125:21" pos:end="137:47"><call pos:start="125:21" pos:end="137:47"><name pos:start="125:21" pos:end="125:27">fprintf</name><argument_list pos:start="125:28" pos:end="137:47">(<argument pos:start="125:29" pos:end="125:34"><expr pos:start="125:29" pos:end="125:34"><name pos:start="125:29" pos:end="125:34">stderr</name></expr></argument>, <argument pos:start="125:37" pos:end="125:139"><expr pos:start="125:37" pos:end="125:139"><literal type="string" pos:start="125:37" pos:end="125:139">"Cannot create sample rate converter for conversion of %d Hz %s %d channels to %d Hz %s %d channels!\n"</literal></expr></argument>,

                        <argument pos:start="127:25" pos:end="127:40"><expr pos:start="127:25" pos:end="127:40"><name pos:start="127:25" pos:end="127:40"><name pos:start="127:25" pos:end="127:27">dec</name><operator pos:start="127:28" pos:end="127:29">-&gt;</operator><name pos:start="127:30" pos:end="127:40">sample_rate</name></name></expr></argument>,

                        <argument pos:start="129:25" pos:end="129:63"><expr pos:start="129:25" pos:end="129:63"><call pos:start="129:25" pos:end="129:63"><name pos:start="129:25" pos:end="129:46">av_get_sample_fmt_name</name><argument_list pos:start="129:47" pos:end="129:63">(<argument pos:start="129:48" pos:end="129:62"><expr pos:start="129:48" pos:end="129:62"><name pos:start="129:48" pos:end="129:62"><name pos:start="129:48" pos:end="129:50">dec</name><operator pos:start="129:51" pos:end="129:52">-&gt;</operator><name pos:start="129:53" pos:end="129:62">sample_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>,

                        <argument pos:start="131:25" pos:end="131:37"><expr pos:start="131:25" pos:end="131:37"><name pos:start="131:25" pos:end="131:37"><name pos:start="131:25" pos:end="131:27">dec</name><operator pos:start="131:28" pos:end="131:29">-&gt;</operator><name pos:start="131:30" pos:end="131:37">channels</name></name></expr></argument>,

                        <argument pos:start="133:25" pos:end="133:42"><expr pos:start="133:25" pos:end="133:42"><name pos:start="133:25" pos:end="133:42"><name pos:start="133:25" pos:end="133:26">is</name><operator pos:start="133:27" pos:end="133:28">-&gt;</operator><name pos:start="133:29" pos:end="133:37">audio_tgt</name><operator pos:start="133:38" pos:end="133:38">.</operator><name pos:start="133:39" pos:end="133:42">freq</name></name></expr></argument>,

                        <argument pos:start="135:25" pos:end="135:65"><expr pos:start="135:25" pos:end="135:65"><call pos:start="135:25" pos:end="135:65"><name pos:start="135:25" pos:end="135:46">av_get_sample_fmt_name</name><argument_list pos:start="135:47" pos:end="135:65">(<argument pos:start="135:48" pos:end="135:64"><expr pos:start="135:48" pos:end="135:64"><name pos:start="135:48" pos:end="135:64"><name pos:start="135:48" pos:end="135:49">is</name><operator pos:start="135:50" pos:end="135:51">-&gt;</operator><name pos:start="135:52" pos:end="135:60">audio_tgt</name><operator pos:start="135:61" pos:end="135:61">.</operator><name pos:start="135:62" pos:end="135:64">fmt</name></name></expr></argument>)</argument_list></call></expr></argument>,

                        <argument pos:start="137:25" pos:end="137:46"><expr pos:start="137:25" pos:end="137:46"><name pos:start="137:25" pos:end="137:46"><name pos:start="137:25" pos:end="137:26">is</name><operator pos:start="137:27" pos:end="137:28">-&gt;</operator><name pos:start="137:29" pos:end="137:37">audio_tgt</name><operator pos:start="137:38" pos:end="137:38">.</operator><name pos:start="137:39" pos:end="137:46">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="139:21" pos:end="139:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:66"><expr pos:start="143:17" pos:end="143:65"><name pos:start="143:17" pos:end="143:44"><name pos:start="143:17" pos:end="143:18">is</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:29">audio_src</name><operator pos:start="143:30" pos:end="143:30">.</operator><name pos:start="143:31" pos:end="143:44">channel_layout</name></name> <operator pos:start="143:46" pos:end="143:46">=</operator> <name pos:start="143:48" pos:end="143:65">dec_channel_layout</name></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:55"><expr pos:start="145:17" pos:end="145:54"><name pos:start="145:17" pos:end="145:38"><name pos:start="145:17" pos:end="145:18">is</name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:29">audio_src</name><operator pos:start="145:30" pos:end="145:30">.</operator><name pos:start="145:31" pos:end="145:38">channels</name></name> <operator pos:start="145:40" pos:end="145:40">=</operator> <name pos:start="145:42" pos:end="145:54"><name pos:start="145:42" pos:end="145:44">dec</name><operator pos:start="145:45" pos:end="145:46">-&gt;</operator><name pos:start="145:47" pos:end="145:54">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:54"><expr pos:start="147:17" pos:end="147:53"><name pos:start="147:17" pos:end="147:34"><name pos:start="147:17" pos:end="147:18">is</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:29">audio_src</name><operator pos:start="147:30" pos:end="147:30">.</operator><name pos:start="147:31" pos:end="147:34">freq</name></name> <operator pos:start="147:36" pos:end="147:36">=</operator> <name pos:start="147:38" pos:end="147:53"><name pos:start="147:38" pos:end="147:40">dec</name><operator pos:start="147:41" pos:end="147:42">-&gt;</operator><name pos:start="147:43" pos:end="147:53">sample_rate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:52"><expr pos:start="149:17" pos:end="149:51"><name pos:start="149:17" pos:end="149:33"><name pos:start="149:17" pos:end="149:18">is</name><operator pos:start="149:19" pos:end="149:20">-&gt;</operator><name pos:start="149:21" pos:end="149:29">audio_src</name><operator pos:start="149:30" pos:end="149:30">.</operator><name pos:start="149:31" pos:end="149:33">fmt</name></name> <operator pos:start="149:35" pos:end="149:35">=</operator> <name pos:start="149:37" pos:end="149:51"><name pos:start="149:37" pos:end="149:39">dec</name><operator pos:start="149:40" pos:end="149:41">-&gt;</operator><name pos:start="149:42" pos:end="149:51">sample_fmt</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="155:13" pos:end="155:44"><expr pos:start="155:13" pos:end="155:43"><name pos:start="155:13" pos:end="155:31">resampled_data_size</name> <operator pos:start="155:33" pos:end="155:33">=</operator> <name pos:start="155:35" pos:end="155:43">data_size</name></expr>;</expr_stmt>

            <if_stmt pos:start="157:13" pos:end="205:13"><if pos:start="157:13" pos:end="201:13">if <condition pos:start="157:16" pos:end="157:28">(<expr pos:start="157:17" pos:end="157:27"><name pos:start="157:17" pos:end="157:27"><name pos:start="157:17" pos:end="157:18">is</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:27">swr_ctx</name></name></expr>)</condition> <block pos:start="157:30" pos:end="201:13">{<block_content pos:start="159:17" pos:end="199:113">

                <decl_stmt pos:start="159:17" pos:end="159:61"><decl pos:start="159:17" pos:end="159:60"><type pos:start="159:17" pos:end="159:31"><specifier pos:start="159:17" pos:end="159:21">const</specifier> <name pos:start="159:23" pos:end="159:29">uint8_t</name> <modifier pos:start="159:31" pos:end="159:31">*</modifier></type><name pos:start="159:32" pos:end="159:35"><name pos:start="159:32" pos:end="159:33">in</name><index pos:start="159:34" pos:end="159:35">[]</index></name> <init pos:start="159:37" pos:end="159:60">= <expr pos:start="159:39" pos:end="159:60"><block pos:start="159:39" pos:end="159:60">{ <expr pos:start="159:41" pos:end="159:58"><name pos:start="159:41" pos:end="159:58"><name pos:start="159:41" pos:end="159:42">is</name><operator pos:start="159:43" pos:end="159:44">-&gt;</operator><name pos:start="159:45" pos:end="159:49">frame</name><operator pos:start="159:50" pos:end="159:51">-&gt;</operator><name pos:start="159:52" pos:end="159:55">data</name><index pos:start="159:56" pos:end="159:58">[<expr pos:start="159:57" pos:end="159:57"><literal type="number" pos:start="159:57" pos:end="159:57">0</literal></expr>]</index></name></expr> }</block></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="161:17" pos:end="161:50"><decl pos:start="161:17" pos:end="161:49"><type pos:start="161:17" pos:end="161:25"><name pos:start="161:17" pos:end="161:23">uint8_t</name> <modifier pos:start="161:25" pos:end="161:25">*</modifier></type><name pos:start="161:26" pos:end="161:30"><name pos:start="161:26" pos:end="161:28">out</name><index pos:start="161:29" pos:end="161:30">[]</index></name> <init pos:start="161:32" pos:end="161:49">= <expr pos:start="161:34" pos:end="161:49"><block pos:start="161:34" pos:end="161:49">{<expr pos:start="161:35" pos:end="161:48"><name pos:start="161:35" pos:end="161:48"><name pos:start="161:35" pos:end="161:36">is</name><operator pos:start="161:37" pos:end="161:38">-&gt;</operator><name pos:start="161:39" pos:end="161:48">audio_buf2</name></name></expr>}</block></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="163:17" pos:end="175:17"><if pos:start="163:17" pos:end="175:17">if <condition pos:start="163:20" pos:end="163:63">(<expr pos:start="163:21" pos:end="163:62"><name pos:start="163:21" pos:end="163:37">wanted_nb_samples</name> <operator pos:start="163:39" pos:end="163:40">!=</operator> <name pos:start="163:42" pos:end="163:62"><name pos:start="163:42" pos:end="163:43">is</name><operator pos:start="163:44" pos:end="163:45">-&gt;</operator><name pos:start="163:46" pos:end="163:50">frame</name><operator pos:start="163:51" pos:end="163:52">-&gt;</operator><name pos:start="163:53" pos:end="163:62">nb_samples</name></name></expr>)</condition> <block pos:start="163:65" pos:end="175:17">{<block_content pos:start="165:21" pos:end="173:21">

                    <if_stmt pos:start="165:21" pos:end="173:21"><if pos:start="165:21" pos:end="173:21">if <condition pos:start="165:24" pos:end="167:111">(<expr pos:start="165:25" pos:end="167:110"><call pos:start="165:25" pos:end="167:106"><name pos:start="165:25" pos:end="165:44">swr_set_compensation</name><argument_list pos:start="165:45" pos:end="167:106">(<argument pos:start="165:46" pos:end="165:56"><expr pos:start="165:46" pos:end="165:56"><name pos:start="165:46" pos:end="165:56"><name pos:start="165:46" pos:end="165:47">is</name><operator pos:start="165:48" pos:end="165:49">-&gt;</operator><name pos:start="165:50" pos:end="165:56">swr_ctx</name></name></expr></argument>, <argument pos:start="165:59" pos:end="165:141"><expr pos:start="165:59" pos:end="165:141"><operator pos:start="165:59" pos:end="165:59">(</operator><name pos:start="165:60" pos:end="165:76">wanted_nb_samples</name> <operator pos:start="165:78" pos:end="165:78">-</operator> <name pos:start="165:80" pos:end="165:100"><name pos:start="165:80" pos:end="165:81">is</name><operator pos:start="165:82" pos:end="165:83">-&gt;</operator><name pos:start="165:84" pos:end="165:88">frame</name><operator pos:start="165:89" pos:end="165:90">-&gt;</operator><name pos:start="165:91" pos:end="165:100">nb_samples</name></name><operator pos:start="165:101" pos:end="165:101">)</operator> <operator pos:start="165:103" pos:end="165:103">*</operator> <name pos:start="165:105" pos:end="165:122"><name pos:start="165:105" pos:end="165:106">is</name><operator pos:start="165:107" pos:end="165:108">-&gt;</operator><name pos:start="165:109" pos:end="165:117">audio_tgt</name><operator pos:start="165:118" pos:end="165:118">.</operator><name pos:start="165:119" pos:end="165:122">freq</name></name> <operator pos:start="165:124" pos:end="165:124">/</operator> <name pos:start="165:126" pos:end="165:141"><name pos:start="165:126" pos:end="165:128">dec</name><operator pos:start="165:129" pos:end="165:130">-&gt;</operator><name pos:start="165:131" pos:end="165:141">sample_rate</name></name></expr></argument>,

                                                <argument pos:start="167:49" pos:end="167:105"><expr pos:start="167:49" pos:end="167:105"><name pos:start="167:49" pos:end="167:65">wanted_nb_samples</name> <operator pos:start="167:67" pos:end="167:67">*</operator> <name pos:start="167:69" pos:end="167:86"><name pos:start="167:69" pos:end="167:70">is</name><operator pos:start="167:71" pos:end="167:72">-&gt;</operator><name pos:start="167:73" pos:end="167:81">audio_tgt</name><operator pos:start="167:82" pos:end="167:82">.</operator><name pos:start="167:83" pos:end="167:86">freq</name></name> <operator pos:start="167:88" pos:end="167:88">/</operator> <name pos:start="167:90" pos:end="167:105"><name pos:start="167:90" pos:end="167:92">dec</name><operator pos:start="167:93" pos:end="167:94">-&gt;</operator><name pos:start="167:95" pos:end="167:105">sample_rate</name></name></expr></argument>)</argument_list></call> <operator pos:start="167:108" pos:end="167:108">&lt;</operator> <literal type="number" pos:start="167:110" pos:end="167:110">0</literal></expr>)</condition> <block pos:start="167:113" pos:end="173:21">{<block_content pos:start="169:25" pos:end="171:30">

                        <expr_stmt pos:start="169:25" pos:end="169:75"><expr pos:start="169:25" pos:end="169:74"><call pos:start="169:25" pos:end="169:74"><name pos:start="169:25" pos:end="169:31">fprintf</name><argument_list pos:start="169:32" pos:end="169:74">(<argument pos:start="169:33" pos:end="169:38"><expr pos:start="169:33" pos:end="169:38"><name pos:start="169:33" pos:end="169:38">stderr</name></expr></argument>, <argument pos:start="169:41" pos:end="169:73"><expr pos:start="169:41" pos:end="169:73"><literal type="string" pos:start="169:41" pos:end="169:73">"swr_set_compensation() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="171:25" pos:end="171:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="177:17" pos:end="179:75"><expr pos:start="177:17" pos:end="179:74"><name pos:start="177:17" pos:end="177:20">len2</name> <operator pos:start="177:22" pos:end="177:22">=</operator> <call pos:start="177:24" pos:end="179:74"><name pos:start="177:24" pos:end="177:34">swr_convert</name><argument_list pos:start="177:35" pos:end="179:74">(<argument pos:start="177:36" pos:end="177:46"><expr pos:start="177:36" pos:end="177:46"><name pos:start="177:36" pos:end="177:46"><name pos:start="177:36" pos:end="177:37">is</name><operator pos:start="177:38" pos:end="177:39">-&gt;</operator><name pos:start="177:40" pos:end="177:46">swr_ctx</name></name></expr></argument>, <argument pos:start="177:49" pos:end="177:51"><expr pos:start="177:49" pos:end="177:51"><name pos:start="177:49" pos:end="177:51">out</name></expr></argument>, <argument pos:start="177:54" pos:end="177:145"><expr pos:start="177:54" pos:end="177:145"><sizeof pos:start="177:54" pos:end="177:75">sizeof<argument_list pos:start="177:60" pos:end="177:75">(<argument pos:start="177:61" pos:end="177:74"><expr pos:start="177:61" pos:end="177:74"><name pos:start="177:61" pos:end="177:74"><name pos:start="177:61" pos:end="177:62">is</name><operator pos:start="177:63" pos:end="177:64">-&gt;</operator><name pos:start="177:65" pos:end="177:74">audio_buf2</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="177:77" pos:end="177:77">/</operator> <name pos:start="177:79" pos:end="177:100"><name pos:start="177:79" pos:end="177:80">is</name><operator pos:start="177:81" pos:end="177:82">-&gt;</operator><name pos:start="177:83" pos:end="177:91">audio_tgt</name><operator pos:start="177:92" pos:end="177:92">.</operator><name pos:start="177:93" pos:end="177:100">channels</name></name> <operator pos:start="177:102" pos:end="177:102">/</operator> <call pos:start="177:104" pos:end="177:145"><name pos:start="177:104" pos:end="177:126">av_get_bytes_per_sample</name><argument_list pos:start="177:127" pos:end="177:145">(<argument pos:start="177:128" pos:end="177:144"><expr pos:start="177:128" pos:end="177:144"><name pos:start="177:128" pos:end="177:144"><name pos:start="177:128" pos:end="177:129">is</name><operator pos:start="177:130" pos:end="177:131">-&gt;</operator><name pos:start="177:132" pos:end="177:140">audio_tgt</name><operator pos:start="177:141" pos:end="177:141">.</operator><name pos:start="177:142" pos:end="177:144">fmt</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                                <argument pos:start="179:49" pos:end="179:50"><expr pos:start="179:49" pos:end="179:50"><name pos:start="179:49" pos:end="179:50">in</name></expr></argument>, <argument pos:start="179:53" pos:end="179:73"><expr pos:start="179:53" pos:end="179:73"><name pos:start="179:53" pos:end="179:73"><name pos:start="179:53" pos:end="179:54">is</name><operator pos:start="179:55" pos:end="179:56">-&gt;</operator><name pos:start="179:57" pos:end="179:61">frame</name><operator pos:start="179:62" pos:end="179:63">-&gt;</operator><name pos:start="179:64" pos:end="179:73">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="181:17" pos:end="187:17"><if pos:start="181:17" pos:end="187:17">if <condition pos:start="181:20" pos:end="181:29">(<expr pos:start="181:21" pos:end="181:28"><name pos:start="181:21" pos:end="181:24">len2</name> <operator pos:start="181:26" pos:end="181:26">&lt;</operator> <literal type="number" pos:start="181:28" pos:end="181:28">0</literal></expr>)</condition> <block pos:start="181:31" pos:end="187:17">{<block_content pos:start="183:21" pos:end="185:26">

                    <expr_stmt pos:start="183:21" pos:end="183:62"><expr pos:start="183:21" pos:end="183:61"><call pos:start="183:21" pos:end="183:61"><name pos:start="183:21" pos:end="183:27">fprintf</name><argument_list pos:start="183:28" pos:end="183:61">(<argument pos:start="183:29" pos:end="183:34"><expr pos:start="183:29" pos:end="183:34"><name pos:start="183:29" pos:end="183:34">stderr</name></expr></argument>, <argument pos:start="183:37" pos:end="183:60"><expr pos:start="183:37" pos:end="183:60"><literal type="string" pos:start="183:37" pos:end="183:60">"swr_convert() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="185:21" pos:end="185:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="189:17" pos:end="195:17"><if pos:start="189:17" pos:end="195:17">if <condition pos:start="189:20" pos:end="189:121">(<expr pos:start="189:21" pos:end="189:120"><name pos:start="189:21" pos:end="189:24">len2</name> <operator pos:start="189:26" pos:end="189:27">==</operator> <sizeof pos:start="189:29" pos:end="189:50">sizeof<argument_list pos:start="189:35" pos:end="189:50">(<argument pos:start="189:36" pos:end="189:49"><expr pos:start="189:36" pos:end="189:49"><name pos:start="189:36" pos:end="189:49"><name pos:start="189:36" pos:end="189:37">is</name><operator pos:start="189:38" pos:end="189:39">-&gt;</operator><name pos:start="189:40" pos:end="189:49">audio_buf2</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="189:52" pos:end="189:52">/</operator> <name pos:start="189:54" pos:end="189:75"><name pos:start="189:54" pos:end="189:55">is</name><operator pos:start="189:56" pos:end="189:57">-&gt;</operator><name pos:start="189:58" pos:end="189:66">audio_tgt</name><operator pos:start="189:67" pos:end="189:67">.</operator><name pos:start="189:68" pos:end="189:75">channels</name></name> <operator pos:start="189:77" pos:end="189:77">/</operator> <call pos:start="189:79" pos:end="189:120"><name pos:start="189:79" pos:end="189:101">av_get_bytes_per_sample</name><argument_list pos:start="189:102" pos:end="189:120">(<argument pos:start="189:103" pos:end="189:119"><expr pos:start="189:103" pos:end="189:119"><name pos:start="189:103" pos:end="189:119"><name pos:start="189:103" pos:end="189:104">is</name><operator pos:start="189:105" pos:end="189:106">-&gt;</operator><name pos:start="189:107" pos:end="189:115">audio_tgt</name><operator pos:start="189:116" pos:end="189:116">.</operator><name pos:start="189:117" pos:end="189:119">fmt</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="189:123" pos:end="195:17">{<block_content pos:start="191:21" pos:end="193:42">

                    <expr_stmt pos:start="191:21" pos:end="191:85"><expr pos:start="191:21" pos:end="191:84"><call pos:start="191:21" pos:end="191:84"><name pos:start="191:21" pos:end="191:27">fprintf</name><argument_list pos:start="191:28" pos:end="191:84">(<argument pos:start="191:29" pos:end="191:34"><expr pos:start="191:29" pos:end="191:34"><name pos:start="191:29" pos:end="191:34">stderr</name></expr></argument>, <argument pos:start="191:37" pos:end="191:83"><expr pos:start="191:37" pos:end="191:83"><literal type="string" pos:start="191:37" pos:end="191:83">"warning: audio buffer is probably too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:42"><expr pos:start="193:21" pos:end="193:41"><call pos:start="193:21" pos:end="193:41"><name pos:start="193:21" pos:end="193:28">swr_init</name><argument_list pos:start="193:29" pos:end="193:41">(<argument pos:start="193:30" pos:end="193:40"><expr pos:start="193:30" pos:end="193:40"><name pos:start="193:30" pos:end="193:40"><name pos:start="193:30" pos:end="193:31">is</name><operator pos:start="193:32" pos:end="193:33">-&gt;</operator><name pos:start="193:34" pos:end="193:40">swr_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:47"><expr pos:start="197:17" pos:end="197:46"><name pos:start="197:17" pos:end="197:29"><name pos:start="197:17" pos:end="197:18">is</name><operator pos:start="197:19" pos:end="197:20">-&gt;</operator><name pos:start="197:21" pos:end="197:29">audio_buf</name></name> <operator pos:start="197:31" pos:end="197:31">=</operator> <name pos:start="197:33" pos:end="197:46"><name pos:start="197:33" pos:end="197:34">is</name><operator pos:start="197:35" pos:end="197:36">-&gt;</operator><name pos:start="197:37" pos:end="197:46">audio_buf2</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:113"><expr pos:start="199:17" pos:end="199:112"><name pos:start="199:17" pos:end="199:35">resampled_data_size</name> <operator pos:start="199:37" pos:end="199:37">=</operator> <name pos:start="199:39" pos:end="199:42">len2</name> <operator pos:start="199:44" pos:end="199:44">*</operator> <name pos:start="199:46" pos:end="199:67"><name pos:start="199:46" pos:end="199:47">is</name><operator pos:start="199:48" pos:end="199:49">-&gt;</operator><name pos:start="199:50" pos:end="199:58">audio_tgt</name><operator pos:start="199:59" pos:end="199:59">.</operator><name pos:start="199:60" pos:end="199:67">channels</name></name> <operator pos:start="199:69" pos:end="199:69">*</operator> <call pos:start="199:71" pos:end="199:112"><name pos:start="199:71" pos:end="199:93">av_get_bytes_per_sample</name><argument_list pos:start="199:94" pos:end="199:112">(<argument pos:start="199:95" pos:end="199:111"><expr pos:start="199:95" pos:end="199:111"><name pos:start="199:95" pos:end="199:111"><name pos:start="199:95" pos:end="199:96">is</name><operator pos:start="199:97" pos:end="199:98">-&gt;</operator><name pos:start="199:99" pos:end="199:107">audio_tgt</name><operator pos:start="199:108" pos:end="199:108">.</operator><name pos:start="199:109" pos:end="199:111">fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="201:15" pos:end="205:13">else <block pos:start="201:20" pos:end="205:13">{<block_content pos:start="203:17" pos:end="203:51">

                <expr_stmt pos:start="203:17" pos:end="203:51"><expr pos:start="203:17" pos:end="203:50"><name pos:start="203:17" pos:end="203:29"><name pos:start="203:17" pos:end="203:18">is</name><operator pos:start="203:19" pos:end="203:20">-&gt;</operator><name pos:start="203:21" pos:end="203:29">audio_buf</name></name> <operator pos:start="203:31" pos:end="203:31">=</operator> <name pos:start="203:33" pos:end="203:50"><name pos:start="203:33" pos:end="203:34">is</name><operator pos:start="203:35" pos:end="203:36">-&gt;</operator><name pos:start="203:37" pos:end="203:41">frame</name><operator pos:start="203:42" pos:end="203:43">-&gt;</operator><name pos:start="203:44" pos:end="203:47">data</name><index pos:start="203:48" pos:end="203:50">[<expr pos:start="203:49" pos:end="203:49"><literal type="number" pos:start="203:49" pos:end="203:49">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <comment type="block" pos:start="209:13" pos:end="209:44">/* if no pts, then compute it */</comment>

            <expr_stmt pos:start="211:13" pos:end="211:34"><expr pos:start="211:13" pos:end="211:33"><name pos:start="211:13" pos:end="211:15">pts</name> <operator pos:start="211:17" pos:end="211:17">=</operator> <name pos:start="211:19" pos:end="211:33"><name pos:start="211:19" pos:end="211:20">is</name><operator pos:start="211:21" pos:end="211:22">-&gt;</operator><name pos:start="211:23" pos:end="211:33">audio_clock</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:27"><expr pos:start="213:13" pos:end="213:26"><operator pos:start="213:13" pos:end="213:13">*</operator><name pos:start="213:14" pos:end="213:20">pts_ptr</name> <operator pos:start="213:22" pos:end="213:22">=</operator> <name pos:start="213:24" pos:end="213:26">pts</name></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="220:0"><expr pos:start="215:13" pos:end="217:93"><name pos:start="215:13" pos:end="215:27"><name pos:start="215:13" pos:end="215:14">is</name><operator pos:start="215:15" pos:end="215:16">-&gt;</operator><name pos:start="215:17" pos:end="215:27">audio_clock</name></name> <operator pos:start="215:29" pos:end="215:30">+=</operator> <operator pos:start="215:32" pos:end="215:32">(</operator><name pos:start="215:33" pos:end="215:38">double</name><operator pos:start="215:39" pos:end="215:39">)</operator><name pos:start="215:40" pos:end="215:48">data_size</name> <operator pos:start="215:50" pos:end="215:50">/</operator>

                <operator pos:start="217:17" pos:end="217:17">(</operator><name pos:start="217:18" pos:end="217:30"><name pos:start="217:18" pos:end="217:20">dec</name><operator pos:start="217:21" pos:end="217:22">-&gt;</operator><name pos:start="217:23" pos:end="217:30">channels</name></name> <operator pos:start="217:32" pos:end="217:32">*</operator> <name pos:start="217:34" pos:end="217:49"><name pos:start="217:34" pos:end="217:36">dec</name><operator pos:start="217:37" pos:end="217:38">-&gt;</operator><name pos:start="217:39" pos:end="217:49">sample_rate</name></name> <operator pos:start="217:51" pos:end="217:51">*</operator> <call pos:start="217:53" pos:end="217:92"><name pos:start="217:53" pos:end="217:75">av_get_bytes_per_sample</name><argument_list pos:start="217:76" pos:end="217:92">(<argument pos:start="217:77" pos:end="217:91"><expr pos:start="217:77" pos:end="217:91"><name pos:start="217:77" pos:end="217:91"><name pos:start="217:77" pos:end="217:79">dec</name><operator pos:start="217:80" pos:end="217:81">-&gt;</operator><name pos:start="217:82" pos:end="217:91">sample_fmt</name></name></expr></argument>)</argument_list></call><operator pos:start="217:93" pos:end="217:93">)</operator></expr>;</expr_stmt>

<cpp:ifdef pos:start="219:1" pos:end="219:12">#<cpp:directive pos:start="219:2" pos:end="219:6">ifdef</cpp:directive> <name pos:start="219:8" pos:end="219:12">DEBUG</name></cpp:ifdef>

            <block pos:start="221:13" pos:end="236:0">{<block_content pos:start="223:17" pos:end="231:45">

                <decl_stmt pos:start="223:17" pos:end="223:41"><decl pos:start="223:17" pos:end="223:40"><type pos:start="223:17" pos:end="223:29"><specifier pos:start="223:17" pos:end="223:22">static</specifier> <name pos:start="223:24" pos:end="223:29">double</name></type> <name pos:start="223:31" pos:end="223:40">last_clock</name></decl>;</decl_stmt>

                <expr_stmt pos:start="225:17" pos:end="229:45"><expr pos:start="225:17" pos:end="229:44"><call pos:start="225:17" pos:end="229:44"><name pos:start="225:17" pos:end="225:22">printf</name><argument_list pos:start="225:23" pos:end="229:44">(<argument pos:start="225:24" pos:end="225:67"><expr pos:start="225:24" pos:end="225:67"><literal type="string" pos:start="225:24" pos:end="225:67">"audio: delay=%0.3f clock=%0.3f pts=%0.3f\n"</literal></expr></argument>,

                       <argument pos:start="227:24" pos:end="227:51"><expr pos:start="227:24" pos:end="227:51"><name pos:start="227:24" pos:end="227:38"><name pos:start="227:24" pos:end="227:25">is</name><operator pos:start="227:26" pos:end="227:27">-&gt;</operator><name pos:start="227:28" pos:end="227:38">audio_clock</name></name> <operator pos:start="227:40" pos:end="227:40">-</operator> <name pos:start="227:42" pos:end="227:51">last_clock</name></expr></argument>,

                       <argument pos:start="229:24" pos:end="229:38"><expr pos:start="229:24" pos:end="229:38"><name pos:start="229:24" pos:end="229:38"><name pos:start="229:24" pos:end="229:25">is</name><operator pos:start="229:26" pos:end="229:27">-&gt;</operator><name pos:start="229:28" pos:end="229:38">audio_clock</name></name></expr></argument>, <argument pos:start="229:41" pos:end="229:43"><expr pos:start="229:41" pos:end="229:43"><name pos:start="229:41" pos:end="229:43">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:45"><expr pos:start="231:17" pos:end="231:44"><name pos:start="231:17" pos:end="231:26">last_clock</name> <operator pos:start="231:28" pos:end="231:28">=</operator> <name pos:start="231:30" pos:end="231:44"><name pos:start="231:30" pos:end="231:31">is</name><operator pos:start="231:32" pos:end="231:33">-&gt;</operator><name pos:start="231:34" pos:end="231:44">audio_clock</name></name></expr>;</expr_stmt>

            </block_content>}</block>

<cpp:endif pos:start="235:1" pos:end="235:6">#<cpp:directive pos:start="235:2" pos:end="235:6">endif</cpp:directive></cpp:endif>

            <return pos:start="237:13" pos:end="237:39">return <expr pos:start="237:20" pos:end="237:38"><name pos:start="237:20" pos:end="237:38">resampled_data_size</name></expr>;</return>

        </block_content>}</block></while>



        <comment type="block" pos:start="243:9" pos:end="243:37">/* free the current packet */</comment>

        <if_stmt pos:start="245:9" pos:end="247:32"><if pos:start="245:9" pos:end="247:32">if <condition pos:start="245:12" pos:end="245:22">(<expr pos:start="245:13" pos:end="245:21"><name pos:start="245:13" pos:end="245:21"><name pos:start="245:13" pos:end="245:15">pkt</name><operator pos:start="245:16" pos:end="245:17">-&gt;</operator><name pos:start="245:18" pos:end="245:21">data</name></name></expr>)</condition><block type="pseudo" pos:start="247:13" pos:end="247:32"><block_content pos:start="247:13" pos:end="247:32">

            <expr_stmt pos:start="247:13" pos:end="247:32"><expr pos:start="247:13" pos:end="247:31"><call pos:start="247:13" pos:end="247:31"><name pos:start="247:13" pos:end="247:26">av_free_packet</name><argument_list pos:start="247:27" pos:end="247:31">(<argument pos:start="247:28" pos:end="247:30"><expr pos:start="247:28" pos:end="247:30"><name pos:start="247:28" pos:end="247:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:47"><expr pos:start="249:9" pos:end="249:46"><call pos:start="249:9" pos:end="249:46"><name pos:start="249:9" pos:end="249:14">memset</name><argument_list pos:start="249:15" pos:end="249:46">(<argument pos:start="249:16" pos:end="249:23"><expr pos:start="249:16" pos:end="249:23"><name pos:start="249:16" pos:end="249:23">pkt_temp</name></expr></argument>, <argument pos:start="249:26" pos:end="249:26"><expr pos:start="249:26" pos:end="249:26"><literal type="number" pos:start="249:26" pos:end="249:26">0</literal></expr></argument>, <argument pos:start="249:29" pos:end="249:45"><expr pos:start="249:29" pos:end="249:45"><sizeof pos:start="249:29" pos:end="249:45">sizeof<argument_list pos:start="249:35" pos:end="249:45">(<argument pos:start="249:36" pos:end="249:44"><expr pos:start="249:36" pos:end="249:44"><operator pos:start="249:36" pos:end="249:36">*</operator><name pos:start="249:37" pos:end="249:44">pkt_temp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="253:9" pos:end="257:9"><if pos:start="253:9" pos:end="257:9">if <condition pos:start="253:12" pos:end="253:51">(<expr pos:start="253:13" pos:end="253:50"><name pos:start="253:13" pos:end="253:22"><name pos:start="253:13" pos:end="253:14">is</name><operator pos:start="253:15" pos:end="253:16">-&gt;</operator><name pos:start="253:17" pos:end="253:22">paused</name></name> <operator pos:start="253:24" pos:end="253:25">||</operator> <name pos:start="253:27" pos:end="253:50"><name pos:start="253:27" pos:end="253:28">is</name><operator pos:start="253:29" pos:end="253:30">-&gt;</operator><name pos:start="253:31" pos:end="253:36">audioq</name><operator pos:start="253:37" pos:end="253:37">.</operator><name pos:start="253:38" pos:end="253:50">abort_request</name></name></expr>)</condition> <block pos:start="253:53" pos:end="257:9">{<block_content pos:start="255:13" pos:end="255:22">

            <return pos:start="255:13" pos:end="255:22">return <expr pos:start="255:20" pos:end="255:21"><operator pos:start="255:20" pos:end="255:20">-</operator><literal type="number" pos:start="255:21" pos:end="255:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="261:9" pos:end="261:30">/* read next packet */</comment>

        <if_stmt pos:start="263:9" pos:end="265:22"><if pos:start="263:9" pos:end="265:22">if <condition pos:start="263:12" pos:end="263:69">(<expr pos:start="263:13" pos:end="263:68"><operator pos:start="263:13" pos:end="263:13">(</operator><name pos:start="263:14" pos:end="263:23">new_packet</name> <operator pos:start="263:25" pos:end="263:25">=</operator> <call pos:start="263:27" pos:end="263:63"><name pos:start="263:27" pos:end="263:42">packet_queue_get</name><argument_list pos:start="263:43" pos:end="263:63">(<argument pos:start="263:44" pos:end="263:54"><expr pos:start="263:44" pos:end="263:54"><operator pos:start="263:44" pos:end="263:44">&amp;</operator><name pos:start="263:45" pos:end="263:54"><name pos:start="263:45" pos:end="263:46">is</name><operator pos:start="263:47" pos:end="263:48">-&gt;</operator><name pos:start="263:49" pos:end="263:54">audioq</name></name></expr></argument>, <argument pos:start="263:57" pos:end="263:59"><expr pos:start="263:57" pos:end="263:59"><name pos:start="263:57" pos:end="263:59">pkt</name></expr></argument>, <argument pos:start="263:62" pos:end="263:62"><expr pos:start="263:62" pos:end="263:62"><literal type="number" pos:start="263:62" pos:end="263:62">1</literal></expr></argument>)</argument_list></call><operator pos:start="263:64" pos:end="263:64">)</operator> <operator pos:start="263:66" pos:end="263:66">&lt;</operator> <literal type="number" pos:start="263:68" pos:end="263:68">0</literal></expr>)</condition><block type="pseudo" pos:start="265:13" pos:end="265:22"><block_content pos:start="265:13" pos:end="265:22">

            <return pos:start="265:13" pos:end="265:22">return <expr pos:start="265:20" pos:end="265:21"><operator pos:start="265:20" pos:end="265:20">-</operator><literal type="number" pos:start="265:21" pos:end="265:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="269:9" pos:end="275:9"><if pos:start="269:9" pos:end="275:9">if <condition pos:start="269:12" pos:end="269:40">(<expr pos:start="269:13" pos:end="269:39"><name pos:start="269:13" pos:end="269:21"><name pos:start="269:13" pos:end="269:15">pkt</name><operator pos:start="269:16" pos:end="269:17">-&gt;</operator><name pos:start="269:18" pos:end="269:21">data</name></name> <operator pos:start="269:23" pos:end="269:24">==</operator> <name pos:start="269:26" pos:end="269:39"><name pos:start="269:26" pos:end="269:34">flush_pkt</name><operator pos:start="269:35" pos:end="269:35">.</operator><name pos:start="269:36" pos:end="269:39">data</name></name></expr>)</condition> <block pos:start="269:42" pos:end="275:9">{<block_content pos:start="271:13" pos:end="273:31">

            <expr_stmt pos:start="271:13" pos:end="271:39"><expr pos:start="271:13" pos:end="271:38"><call pos:start="271:13" pos:end="271:38"><name pos:start="271:13" pos:end="271:33">avcodec_flush_buffers</name><argument_list pos:start="271:34" pos:end="271:38">(<argument pos:start="271:35" pos:end="271:37"><expr pos:start="271:35" pos:end="271:37"><name pos:start="271:35" pos:end="271:37">dec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:31"><expr pos:start="273:13" pos:end="273:30"><name pos:start="273:13" pos:end="273:26">flush_complete</name> <operator pos:start="273:28" pos:end="273:28">=</operator> <literal type="number" pos:start="273:30" pos:end="273:30">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="279:9" pos:end="279:25"><expr pos:start="279:9" pos:end="279:24"><operator pos:start="279:9" pos:end="279:9">*</operator><name pos:start="279:10" pos:end="279:17">pkt_temp</name> <operator pos:start="279:19" pos:end="279:19">=</operator> <operator pos:start="279:21" pos:end="279:21">*</operator><name pos:start="279:22" pos:end="279:24">pkt</name></expr>;</expr_stmt>



        <comment type="block" pos:start="283:9" pos:end="283:52">/* if update the audio clock with the pts */</comment>

        <if_stmt pos:start="285:9" pos:end="289:9"><if pos:start="285:9" pos:end="289:9">if <condition pos:start="285:12" pos:end="285:39">(<expr pos:start="285:13" pos:end="285:38"><name pos:start="285:13" pos:end="285:20"><name pos:start="285:13" pos:end="285:15">pkt</name><operator pos:start="285:16" pos:end="285:17">-&gt;</operator><name pos:start="285:18" pos:end="285:20">pts</name></name> <operator pos:start="285:22" pos:end="285:23">!=</operator> <name pos:start="285:25" pos:end="285:38">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="285:41" pos:end="289:9">{<block_content pos:start="287:13" pos:end="287:71">

            <expr_stmt pos:start="287:13" pos:end="287:71"><expr pos:start="287:13" pos:end="287:70"><name pos:start="287:13" pos:end="287:27"><name pos:start="287:13" pos:end="287:14">is</name><operator pos:start="287:15" pos:end="287:16">-&gt;</operator><name pos:start="287:17" pos:end="287:27">audio_clock</name></name> <operator pos:start="287:29" pos:end="287:29">=</operator> <call pos:start="287:31" pos:end="287:61"><name pos:start="287:31" pos:end="287:36">av_q2d</name><argument_list pos:start="287:37" pos:end="287:61">(<argument pos:start="287:38" pos:end="287:60"><expr pos:start="287:38" pos:end="287:60"><name pos:start="287:38" pos:end="287:60"><name pos:start="287:38" pos:end="287:39">is</name><operator pos:start="287:40" pos:end="287:41">-&gt;</operator><name pos:start="287:42" pos:end="287:49">audio_st</name><operator pos:start="287:50" pos:end="287:51">-&gt;</operator><name pos:start="287:52" pos:end="287:60">time_base</name></name></expr></argument>)</argument_list></call><operator pos:start="287:62" pos:end="287:62">*</operator><name pos:start="287:63" pos:end="287:70"><name pos:start="287:63" pos:end="287:65">pkt</name><operator pos:start="287:66" pos:end="287:67">-&gt;</operator><name pos:start="287:68" pos:end="287:70">pts</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
