<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16638.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:12">const</specifier> <name pos:start="1:14" pos:end="1:17">char</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:28">full_name</name><parameter_list pos:start="1:29" pos:end="1:72">(<parameter pos:start="1:30" pos:end="1:53"><decl pos:start="1:30" pos:end="1:53"><type pos:start="1:30" pos:end="1:53"><name pos:start="1:30" pos:end="1:48">QObjectInputVisitor</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">qiv</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:71"><decl pos:start="1:56" pos:end="1:71"><type pos:start="1:56" pos:end="1:71"><specifier pos:start="1:56" pos:end="1:60">const</specifier> <name pos:start="1:62" pos:end="1:65">char</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">name</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:29">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">StackObject</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">so</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:16"><name pos:start="7:10" pos:end="7:12">buf</name><index pos:start="7:13" pos:end="7:16">[<expr pos:start="7:14" pos:end="7:15"><literal type="number" pos:start="7:14" pos:end="7:15">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:21">(<expr pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:11">qiv</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:20">errname</name></name></expr>)</condition> <block pos:start="11:23" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:43">

        <expr_stmt pos:start="13:9" pos:end="13:43"><expr pos:start="13:9" pos:end="13:42"><call pos:start="13:9" pos:end="13:42"><name pos:start="13:9" pos:end="13:25">g_string_truncate</name><argument_list pos:start="13:26" pos:end="13:42">(<argument pos:start="13:27" pos:end="13:38"><expr pos:start="13:27" pos:end="13:38"><name pos:start="13:27" pos:end="13:38"><name pos:start="13:27" pos:end="13:29">qiv</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:38">errname</name></name></expr></argument>, <argument pos:start="13:41" pos:end="13:41"><expr pos:start="13:41" pos:end="13:41"><literal type="number" pos:start="13:41" pos:end="13:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="19:5">else <block pos:start="15:12" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:40">

        <expr_stmt pos:start="17:9" pos:end="17:40"><expr pos:start="17:9" pos:end="17:39"><name pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:11">qiv</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:20">errname</name></name> <operator pos:start="17:22" pos:end="17:22">=</operator> <call pos:start="17:24" pos:end="17:39"><name pos:start="17:24" pos:end="17:35">g_string_new</name><argument_list pos:start="17:36" pos:end="17:39">(<argument pos:start="17:37" pos:end="17:38"><expr pos:start="17:37" pos:end="17:38"><literal type="string" pos:start="17:37" pos:end="17:38">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <macro pos:start="23:5" pos:end="23:42"><name pos:start="23:5" pos:end="23:18">QSLIST_FOREACH</name><argument_list pos:start="23:19" pos:end="23:42">(<argument pos:start="23:20" pos:end="23:21">so</argument> , <argument pos:start="23:25" pos:end="23:35">&amp;qiv-&gt;stack</argument>, <argument pos:start="23:38" pos:end="23:41">node</argument>)</argument_list></macro> <block pos:start="23:44" pos:end="41:5">{<block_content pos:start="25:9" pos:end="39:24">

        <if_stmt pos:start="25:9" pos:end="37:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:49">(<expr pos:start="25:13" pos:end="25:48"><call pos:start="25:13" pos:end="25:33"><name pos:start="25:13" pos:end="25:24">qobject_type</name><argument_list pos:start="25:25" pos:end="25:33">(<argument pos:start="25:26" pos:end="25:32"><expr pos:start="25:26" pos:end="25:32"><name pos:start="25:26" pos:end="25:32"><name pos:start="25:26" pos:end="25:27">so</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:32">obj</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:35" pos:end="25:36">==</operator> <name pos:start="25:38" pos:end="25:48">QTYPE_QDICT</name></expr>)</condition> <block pos:start="25:51" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:50">

            <expr_stmt pos:start="27:13" pos:end="27:49"><expr pos:start="27:13" pos:end="27:48"><call pos:start="27:13" pos:end="27:48"><name pos:start="27:13" pos:end="27:28">g_string_prepend</name><argument_list pos:start="27:29" pos:end="27:48">(<argument pos:start="27:30" pos:end="27:41"><expr pos:start="27:30" pos:end="27:41"><name pos:start="27:30" pos:end="27:41"><name pos:start="27:30" pos:end="27:32">qiv</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:41">errname</name></name></expr></argument>, <argument pos:start="27:44" pos:end="27:47"><expr pos:start="27:44" pos:end="27:47"><name pos:start="27:44" pos:end="27:47">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:50"><expr pos:start="29:13" pos:end="29:49"><call pos:start="29:13" pos:end="29:49"><name pos:start="29:13" pos:end="29:30">g_string_prepend_c</name><argument_list pos:start="29:31" pos:end="29:49">(<argument pos:start="29:32" pos:end="29:43"><expr pos:start="29:32" pos:end="29:43"><name pos:start="29:32" pos:end="29:43"><name pos:start="29:32" pos:end="29:34">qiv</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:43">errname</name></name></expr></argument>, <argument pos:start="29:46" pos:end="29:48"><expr pos:start="29:46" pos:end="29:48"><literal type="char" pos:start="29:46" pos:end="29:48">'.'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="37:9">else <block pos:start="31:16" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:48">

            <expr_stmt pos:start="33:13" pos:end="33:58"><expr pos:start="33:13" pos:end="33:57"><call pos:start="33:13" pos:end="33:57"><name pos:start="33:13" pos:end="33:20">snprintf</name><argument_list pos:start="33:21" pos:end="33:57">(<argument pos:start="33:22" pos:end="33:24"><expr pos:start="33:22" pos:end="33:24"><name pos:start="33:22" pos:end="33:24">buf</name></expr></argument>, <argument pos:start="33:27" pos:end="33:37"><expr pos:start="33:27" pos:end="33:37"><sizeof pos:start="33:27" pos:end="33:37">sizeof<argument_list pos:start="33:33" pos:end="33:37">(<argument pos:start="33:34" pos:end="33:36"><expr pos:start="33:34" pos:end="33:36"><name pos:start="33:34" pos:end="33:36">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:40" pos:end="33:45"><expr pos:start="33:40" pos:end="33:45"><literal type="string" pos:start="33:40" pos:end="33:45">"[%u]"</literal></expr></argument>, <argument pos:start="33:48" pos:end="33:56"><expr pos:start="33:48" pos:end="33:56"><name pos:start="33:48" pos:end="33:56"><name pos:start="33:48" pos:end="33:49">so</name><operator pos:start="33:50" pos:end="33:51">-&gt;</operator><name pos:start="33:52" pos:end="33:56">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:48"><expr pos:start="35:13" pos:end="35:47"><call pos:start="35:13" pos:end="35:47"><name pos:start="35:13" pos:end="35:28">g_string_prepend</name><argument_list pos:start="35:29" pos:end="35:47">(<argument pos:start="35:30" pos:end="35:41"><expr pos:start="35:30" pos:end="35:41"><name pos:start="35:30" pos:end="35:41"><name pos:start="35:30" pos:end="35:32">qiv</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:41">errname</name></name></expr></argument>, <argument pos:start="35:44" pos:end="35:46"><expr pos:start="35:44" pos:end="35:46"><name pos:start="35:44" pos:end="35:46">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:24"><expr pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:12">name</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <name pos:start="39:16" pos:end="39:23"><name pos:start="39:16" pos:end="39:17">so</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:23">name</name></name></expr>;</expr_stmt>

    </block_content>}</block>



    <if_stmt pos:start="45:5" pos:end="57:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:13">(<expr pos:start="45:9" pos:end="45:12"><name pos:start="45:9" pos:end="45:12">name</name></expr>)</condition> <block pos:start="45:15" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:45">

        <expr_stmt pos:start="47:9" pos:end="47:45"><expr pos:start="47:9" pos:end="47:44"><call pos:start="47:9" pos:end="47:44"><name pos:start="47:9" pos:end="47:24">g_string_prepend</name><argument_list pos:start="47:25" pos:end="47:44">(<argument pos:start="47:26" pos:end="47:37"><expr pos:start="47:26" pos:end="47:37"><name pos:start="47:26" pos:end="47:37"><name pos:start="47:26" pos:end="47:28">qiv</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:37">errname</name></name></expr></argument>, <argument pos:start="47:40" pos:end="47:43"><expr pos:start="47:40" pos:end="47:43"><name pos:start="47:40" pos:end="47:43">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="49:7" pos:end="53:5">else if <condition pos:start="49:15" pos:end="49:43">(<expr pos:start="49:16" pos:end="49:42"><name pos:start="49:16" pos:end="49:35"><name pos:start="49:16" pos:end="49:18">qiv</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:27">errname</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:32">str</name><index pos:start="49:33" pos:end="49:35">[<expr pos:start="49:34" pos:end="49:34"><literal type="number" pos:start="49:34" pos:end="49:34">0</literal></expr>]</index></name> <operator pos:start="49:37" pos:end="49:38">==</operator> <literal type="char" pos:start="49:40" pos:end="49:42">'.'</literal></expr>)</condition> <block pos:start="49:45" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:43">

        <expr_stmt pos:start="51:9" pos:end="51:43"><expr pos:start="51:9" pos:end="51:42"><call pos:start="51:9" pos:end="51:42"><name pos:start="51:9" pos:end="51:22">g_string_erase</name><argument_list pos:start="51:23" pos:end="51:42">(<argument pos:start="51:24" pos:end="51:35"><expr pos:start="51:24" pos:end="51:35"><name pos:start="51:24" pos:end="51:35"><name pos:start="51:24" pos:end="51:26">qiv</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:35">errname</name></name></expr></argument>, <argument pos:start="51:38" pos:end="51:38"><expr pos:start="51:38" pos:end="51:38"><literal type="number" pos:start="51:38" pos:end="51:38">0</literal></expr></argument>, <argument pos:start="51:41" pos:end="51:41"><expr pos:start="51:41" pos:end="51:41"><literal type="number" pos:start="51:41" pos:end="51:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="57:5">else <block pos:start="53:12" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:29">

        <return pos:start="55:9" pos:end="55:29">return <expr pos:start="55:16" pos:end="55:28"><literal type="string" pos:start="55:16" pos:end="55:28">"&lt;anonymous&gt;"</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <return pos:start="61:5" pos:end="61:29">return <expr pos:start="61:12" pos:end="61:28"><name pos:start="61:12" pos:end="61:28"><name pos:start="61:12" pos:end="61:14">qiv</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:23">errname</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:28">str</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
