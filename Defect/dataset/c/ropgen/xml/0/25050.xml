<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25050.c" pos:tabs="8"><function pos:start="1:1" pos:end="489:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mpeg_decode_slice</name><parameter_list pos:start="1:29" pos:end="3:63">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:43">MpegEncContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:56"><decl pos:start="1:49" pos:end="1:56"><type pos:start="1:49" pos:end="1:56"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:56">mb_y</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:48"><decl pos:start="3:30" pos:end="3:48"><type pos:start="3:30" pos:end="3:48"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">uint8_t</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier><modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:48">buf</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:62"><decl pos:start="3:51" pos:end="3:62"><type pos:start="3:51" pos:end="3:62"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:62">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="489:1">{<block_content pos:start="7:5" pos:end="487:13">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">avctx</name> <init pos:start="7:27" pos:end="7:36">= <expr pos:start="7:29" pos:end="7:36"><name pos:start="7:29" pos:end="7:36"><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:36">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:63"><decl pos:start="9:5" pos:end="9:62"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:23">field_pic</name>   <init pos:start="9:27" pos:end="9:62">= <expr pos:start="9:29" pos:end="9:62"><name pos:start="9:29" pos:end="9:48"><name pos:start="9:29" pos:end="9:29">s</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:48">picture_structure</name></name> <operator pos:start="9:50" pos:end="9:51">!=</operator> <name pos:start="9:53" pos:end="9:62">PICT_FRAME</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="17:24"><expr pos:start="15:5" pos:end="17:23"><name pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:18">resync_mb_x</name></name> <operator pos:start="15:20" pos:end="15:20">=</operator>

    <name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:18">resync_mb_y</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <operator pos:start="17:22" pos:end="17:22">-</operator><literal type="number" pos:start="17:23" pos:end="17:23">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><call pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:10">assert</name><argument_list pos:start="21:11" pos:end="21:31">(<argument pos:start="21:12" pos:end="21:30"><expr pos:start="21:12" pos:end="21:30"><name pos:start="21:12" pos:end="21:15">mb_y</name> <operator pos:start="21:17" pos:end="21:17">&lt;</operator> <name pos:start="21:19" pos:end="21:30"><name pos:start="21:19" pos:end="21:19">s</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:30">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:46"><expr pos:start="25:5" pos:end="25:45"><call pos:start="25:5" pos:end="25:45"><name pos:start="25:5" pos:end="25:17">init_get_bits</name><argument_list pos:start="25:18" pos:end="25:45">(<argument pos:start="25:19" pos:end="25:24"><expr pos:start="25:19" pos:end="25:24"><operator pos:start="25:19" pos:end="25:19">&amp;</operator><name pos:start="25:20" pos:end="25:24"><name pos:start="25:20" pos:end="25:20">s</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:24">gb</name></name></expr></argument>, <argument pos:start="25:27" pos:end="25:30"><expr pos:start="25:27" pos:end="25:30"><operator pos:start="25:27" pos:end="25:27">*</operator><name pos:start="25:28" pos:end="25:30">buf</name></expr></argument>, <argument pos:start="25:33" pos:end="25:44"><expr pos:start="25:33" pos:end="25:44"><name pos:start="25:33" pos:end="25:40">buf_size</name> <operator pos:start="25:42" pos:end="25:42">*</operator> <literal type="number" pos:start="25:44" pos:end="25:44">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><call pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:26">ff_mpeg1_clean_buffers</name><argument_list pos:start="29:27" pos:end="29:29">(<argument pos:start="29:28" pos:end="29:28"><expr pos:start="29:28" pos:end="29:28"><name pos:start="29:28" pos:end="29:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:26"><expr pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:21">interlaced_dct</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <literal type="number" pos:start="31:25" pos:end="31:25">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:30"><expr pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:13"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:13">qscale</name></name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:29"><name pos:start="35:17" pos:end="35:26">get_qscale</name><argument_list pos:start="35:27" pos:end="35:29">(<argument pos:start="35:28" pos:end="35:28"><expr pos:start="35:28" pos:end="35:28"><name pos:start="35:28" pos:end="35:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:23">(<expr pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:17">qscale</name></name> <operator pos:start="39:19" pos:end="39:20">==</operator> <literal type="number" pos:start="39:22" pos:end="39:22">0</literal></expr>)</condition> <block pos:start="39:25" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:35">

        <expr_stmt pos:start="41:9" pos:end="41:56"><expr pos:start="41:9" pos:end="41:55"><call pos:start="41:9" pos:end="41:55"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:55">(<argument pos:start="41:16" pos:end="41:23"><expr pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:16">s</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:23">avctx</name></name></expr></argument>, <argument pos:start="41:26" pos:end="41:37"><expr pos:start="41:26" pos:end="41:37"><name pos:start="41:26" pos:end="41:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:40" pos:end="41:54"><expr pos:start="41:40" pos:end="41:54"><literal type="string" pos:start="41:40" pos:end="41:54">"qscale == 0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:35">return <expr pos:start="43:16" pos:end="43:34"><name pos:start="43:16" pos:end="43:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:26">/* extra slice info */</comment>

    <while pos:start="51:5" pos:end="53:29">while <condition pos:start="51:11" pos:end="51:34">(<expr pos:start="51:12" pos:end="51:33"><call pos:start="51:12" pos:end="51:28"><name pos:start="51:12" pos:end="51:20">get_bits1</name><argument_list pos:start="51:21" pos:end="51:28">(<argument pos:start="51:22" pos:end="51:27"><expr pos:start="51:22" pos:end="51:27"><operator pos:start="51:22" pos:end="51:22">&amp;</operator><name pos:start="51:23" pos:end="51:27"><name pos:start="51:23" pos:end="51:23">s</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:27">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="51:30" pos:end="51:31">!=</operator> <literal type="number" pos:start="51:33" pos:end="51:33">0</literal></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:29"><block_content pos:start="53:9" pos:end="53:29">

        <expr_stmt pos:start="53:9" pos:end="53:29"><expr pos:start="53:9" pos:end="53:28"><call pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:17">skip_bits</name><argument_list pos:start="53:18" pos:end="53:28">(<argument pos:start="53:19" pos:end="53:24"><expr pos:start="53:19" pos:end="53:24"><operator pos:start="53:19" pos:end="53:19">&amp;</operator><name pos:start="53:20" pos:end="53:24"><name pos:start="53:20" pos:end="53:20">s</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:24">gb</name></name></expr></argument>, <argument pos:start="53:27" pos:end="53:27"><expr pos:start="53:27" pos:end="53:27"><literal type="number" pos:start="53:27" pos:end="53:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



    <expr_stmt pos:start="57:5" pos:end="57:16"><expr pos:start="57:5" pos:end="57:15"><name pos:start="57:5" pos:end="57:11"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:11">mb_x</name></name> <operator pos:start="57:13" pos:end="57:13">=</operator> <literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="99:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:53">(<expr pos:start="61:9" pos:end="61:52"><name pos:start="61:9" pos:end="61:12">mb_y</name> <operator pos:start="61:14" pos:end="61:15">==</operator> <literal type="number" pos:start="61:17" pos:end="61:17">0</literal> <operator pos:start="61:19" pos:end="61:20">&amp;&amp;</operator> <name pos:start="61:22" pos:end="61:33"><name pos:start="61:22" pos:end="61:22">s</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:33">codec_tag</name></name> <operator pos:start="61:35" pos:end="61:36">==</operator> <call pos:start="61:38" pos:end="61:52"><name pos:start="61:38" pos:end="61:44">AV_RL32</name><argument_list pos:start="61:45" pos:end="61:52">(<argument pos:start="61:46" pos:end="61:51"><expr pos:start="61:46" pos:end="61:51"><literal type="string" pos:start="61:46" pos:end="61:51">"SLIF"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:55" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:27">

        <expr_stmt pos:start="63:9" pos:end="63:27"><expr pos:start="63:9" pos:end="63:26"><call pos:start="63:9" pos:end="63:26"><name pos:start="63:9" pos:end="63:18">skip_bits1</name><argument_list pos:start="63:19" pos:end="63:26">(<argument pos:start="63:20" pos:end="63:25"><expr pos:start="63:20" pos:end="63:25"><operator pos:start="63:20" pos:end="63:20">&amp;</operator><name pos:start="63:21" pos:end="63:25"><name pos:start="63:21" pos:end="63:21">s</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="99:5">else <block pos:start="65:12" pos:end="99:5">{<block_content pos:start="67:9" pos:end="97:9">

        <while pos:start="67:9" pos:end="97:9">while <condition pos:start="67:15" pos:end="67:41">(<expr pos:start="67:16" pos:end="67:40"><call pos:start="67:16" pos:end="67:36"><name pos:start="67:16" pos:end="67:28">get_bits_left</name><argument_list pos:start="67:29" pos:end="67:36">(<argument pos:start="67:30" pos:end="67:35"><expr pos:start="67:30" pos:end="67:35"><operator pos:start="67:30" pos:end="67:30">&amp;</operator><name pos:start="67:31" pos:end="67:35"><name pos:start="67:31" pos:end="67:31">s</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:35">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="67:38" pos:end="67:38">&gt;</operator> <literal type="number" pos:start="67:40" pos:end="67:40">0</literal></expr>)</condition> <block pos:start="67:43" pos:end="97:9">{<block_content pos:start="69:13" pos:end="95:13">

            <decl_stmt pos:start="69:13" pos:end="71:52"><decl pos:start="69:13" pos:end="71:51"><type pos:start="69:13" pos:end="69:15"><name pos:start="69:13" pos:end="69:15">int</name></type> <name pos:start="69:17" pos:end="69:20">code</name> <init pos:start="69:22" pos:end="71:51">= <expr pos:start="69:24" pos:end="71:51"><call pos:start="69:24" pos:end="71:51"><name pos:start="69:24" pos:end="69:31">get_vlc2</name><argument_list pos:start="69:32" pos:end="71:51">(<argument pos:start="69:33" pos:end="69:38"><expr pos:start="69:33" pos:end="69:38"><operator pos:start="69:33" pos:end="69:33">&amp;</operator><name pos:start="69:34" pos:end="69:38"><name pos:start="69:34" pos:end="69:34">s</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:38">gb</name></name></expr></argument>, <argument pos:start="69:41" pos:end="69:59"><expr pos:start="69:41" pos:end="69:59"><name pos:start="69:41" pos:end="69:59"><name pos:start="69:41" pos:end="69:53">ff_mbincr_vlc</name><operator pos:start="69:54" pos:end="69:54">.</operator><name pos:start="69:55" pos:end="69:59">table</name></name></expr></argument>,

                                <argument pos:start="71:33" pos:end="71:47"><expr pos:start="71:33" pos:end="71:47"><name pos:start="71:33" pos:end="71:47">MBINCR_VLC_BITS</name></expr></argument>, <argument pos:start="71:50" pos:end="71:50"><expr pos:start="71:50" pos:end="71:50"><literal type="number" pos:start="71:50" pos:end="71:50">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="73:13" pos:end="79:13"><if pos:start="73:13" pos:end="79:13">if <condition pos:start="73:16" pos:end="73:25">(<expr pos:start="73:17" pos:end="73:24"><name pos:start="73:17" pos:end="73:20">code</name> <operator pos:start="73:22" pos:end="73:22">&lt;</operator> <literal type="number" pos:start="73:24" pos:end="73:24">0</literal></expr>)</condition> <block pos:start="73:27" pos:end="79:13">{<block_content pos:start="75:17" pos:end="77:43">

                <expr_stmt pos:start="75:17" pos:end="75:74"><expr pos:start="75:17" pos:end="75:73"><call pos:start="75:17" pos:end="75:73"><name pos:start="75:17" pos:end="75:22">av_log</name><argument_list pos:start="75:23" pos:end="75:73">(<argument pos:start="75:24" pos:end="75:31"><expr pos:start="75:24" pos:end="75:31"><name pos:start="75:24" pos:end="75:31"><name pos:start="75:24" pos:end="75:24">s</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:31">avctx</name></name></expr></argument>, <argument pos:start="75:34" pos:end="75:45"><expr pos:start="75:34" pos:end="75:45"><name pos:start="75:34" pos:end="75:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:48" pos:end="75:72"><expr pos:start="75:48" pos:end="75:72"><literal type="string" pos:start="75:48" pos:end="75:72">"first mb_incr damaged\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="77:17" pos:end="77:43">return <expr pos:start="77:24" pos:end="77:42"><name pos:start="77:24" pos:end="77:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="81:13" pos:end="95:13"><if pos:start="81:13" pos:end="89:13">if <condition pos:start="81:16" pos:end="81:27">(<expr pos:start="81:17" pos:end="81:26"><name pos:start="81:17" pos:end="81:20">code</name> <operator pos:start="81:22" pos:end="81:23">&gt;=</operator> <literal type="number" pos:start="81:25" pos:end="81:26">33</literal></expr>)</condition> <block pos:start="81:29" pos:end="89:13">{<block_content pos:start="83:17" pos:end="85:34">

                <if_stmt pos:start="83:17" pos:end="85:34"><if pos:start="83:17" pos:end="85:34">if <condition pos:start="83:20" pos:end="83:31">(<expr pos:start="83:21" pos:end="83:30"><name pos:start="83:21" pos:end="83:24">code</name> <operator pos:start="83:26" pos:end="83:27">==</operator> <literal type="number" pos:start="83:29" pos:end="83:30">33</literal></expr>)</condition><block type="pseudo" pos:start="85:21" pos:end="85:34"><block_content pos:start="85:21" pos:end="85:34">

                    <expr_stmt pos:start="85:21" pos:end="85:34"><expr pos:start="85:21" pos:end="85:33"><name pos:start="85:21" pos:end="85:27"><name pos:start="85:21" pos:end="85:21">s</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:27">mb_x</name></name> <operator pos:start="85:29" pos:end="85:30">+=</operator> <literal type="number" pos:start="85:32" pos:end="85:33">33</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <comment type="block" pos:start="87:17" pos:end="87:56">/* otherwise, stuffing, nothing to do */</comment>

            </block_content>}</block></if> <else pos:start="89:15" pos:end="95:13">else <block pos:start="89:20" pos:end="95:13">{<block_content pos:start="91:17" pos:end="93:22">

                <expr_stmt pos:start="91:17" pos:end="91:32"><expr pos:start="91:17" pos:end="91:31"><name pos:start="91:17" pos:end="91:23"><name pos:start="91:17" pos:end="91:17">s</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:23">mb_x</name></name> <operator pos:start="91:25" pos:end="91:26">+=</operator> <name pos:start="91:28" pos:end="91:31">code</name></expr>;</expr_stmt>

                <break pos:start="93:17" pos:end="93:22">break;</break>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="103:5" pos:end="109:5"><if pos:start="103:5" pos:end="109:5">if <condition pos:start="103:8" pos:end="103:42">(<expr pos:start="103:9" pos:end="103:41"><name pos:start="103:9" pos:end="103:15"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:15">mb_x</name></name> <operator pos:start="103:17" pos:end="103:18">&gt;=</operator> <operator pos:start="103:20" pos:end="103:20">(</operator><name pos:start="103:21" pos:end="103:28">unsigned</name><operator pos:start="103:29" pos:end="103:29">)</operator> <name pos:start="103:31" pos:end="103:41"><name pos:start="103:31" pos:end="103:31">s</name><operator pos:start="103:32" pos:end="103:33">-&gt;</operator><name pos:start="103:34" pos:end="103:41">mb_width</name></name></expr>)</condition> <block pos:start="103:44" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:35">

        <expr_stmt pos:start="105:9" pos:end="105:66"><expr pos:start="105:9" pos:end="105:65"><call pos:start="105:9" pos:end="105:65"><name pos:start="105:9" pos:end="105:14">av_log</name><argument_list pos:start="105:15" pos:end="105:65">(<argument pos:start="105:16" pos:end="105:23"><expr pos:start="105:16" pos:end="105:23"><name pos:start="105:16" pos:end="105:23"><name pos:start="105:16" pos:end="105:16">s</name><operator pos:start="105:17" pos:end="105:18">-&gt;</operator><name pos:start="105:19" pos:end="105:23">avctx</name></name></expr></argument>, <argument pos:start="105:26" pos:end="105:37"><expr pos:start="105:26" pos:end="105:37"><name pos:start="105:26" pos:end="105:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="105:40" pos:end="105:64"><expr pos:start="105:40" pos:end="105:64"><literal type="string" pos:start="105:40" pos:end="105:64">"initial skip overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="107:9" pos:end="107:35">return <expr pos:start="107:16" pos:end="107:34"><name pos:start="107:16" pos:end="107:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="135:5"><if pos:start="113:5" pos:end="135:5">if <condition pos:start="113:8" pos:end="113:23">(<expr pos:start="113:9" pos:end="113:22"><name pos:start="113:9" pos:end="113:22"><name pos:start="113:9" pos:end="113:13">avctx</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:22">hwaccel</name></name></expr>)</condition> <block pos:start="113:25" pos:end="135:5">{<block_content pos:start="115:9" pos:end="133:31">

        <decl_stmt pos:start="115:9" pos:end="115:54"><decl pos:start="115:9" pos:end="115:30"><type pos:start="115:9" pos:end="115:23"><specifier pos:start="115:9" pos:end="115:13">const</specifier> <name pos:start="115:15" pos:end="115:21">uint8_t</name> <modifier pos:start="115:23" pos:end="115:23">*</modifier></type><name pos:start="115:24" pos:end="115:30">buf_end</name></decl>, <decl pos:start="115:33" pos:end="115:53"><type ref="prev" pos:start="115:9" pos:end="115:23"><modifier pos:start="115:33" pos:end="115:33">*</modifier></type><name pos:start="115:34" pos:end="115:42">buf_start</name> <init pos:start="115:44" pos:end="115:53">= <expr pos:start="115:46" pos:end="115:53"><operator pos:start="115:46" pos:end="115:46">*</operator><name pos:start="115:47" pos:end="115:49">buf</name> <operator pos:start="115:51" pos:end="115:51">-</operator> <literal type="number" pos:start="115:53" pos:end="115:53">4</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="115:56" pos:end="115:79">/* include start_code */</comment>

        <decl_stmt pos:start="117:9" pos:end="117:28"><decl pos:start="117:9" pos:end="117:27"><type pos:start="117:9" pos:end="117:11"><name pos:start="117:9" pos:end="117:11">int</name></type> <name pos:start="117:13" pos:end="117:22">start_code</name> <init pos:start="117:24" pos:end="117:27">= <expr pos:start="117:26" pos:end="117:27"><operator pos:start="117:26" pos:end="117:26">-</operator><literal type="number" pos:start="117:27" pos:end="117:27">1</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:86"><expr pos:start="119:9" pos:end="119:85"><name pos:start="119:9" pos:end="119:15">buf_end</name> <operator pos:start="119:17" pos:end="119:17">=</operator> <call pos:start="119:19" pos:end="119:85"><name pos:start="119:19" pos:end="119:40">avpriv_find_start_code</name><argument_list pos:start="119:41" pos:end="119:85">(<argument pos:start="119:42" pos:end="119:54"><expr pos:start="119:42" pos:end="119:54"><name pos:start="119:42" pos:end="119:50">buf_start</name> <operator pos:start="119:52" pos:end="119:52">+</operator> <literal type="number" pos:start="119:54" pos:end="119:54">2</literal></expr></argument>, <argument pos:start="119:57" pos:end="119:71"><expr pos:start="119:57" pos:end="119:71"><operator pos:start="119:57" pos:end="119:57">*</operator><name pos:start="119:58" pos:end="119:60">buf</name> <operator pos:start="119:62" pos:end="119:62">+</operator> <name pos:start="119:64" pos:end="119:71">buf_size</name></expr></argument>, <argument pos:start="119:74" pos:end="119:84"><expr pos:start="119:74" pos:end="119:84"><operator pos:start="119:74" pos:end="119:74">&amp;</operator><name pos:start="119:75" pos:end="119:84">start_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="123:25"><if pos:start="121:9" pos:end="123:25">if <condition pos:start="121:12" pos:end="121:38">(<expr pos:start="121:13" pos:end="121:37"><name pos:start="121:13" pos:end="121:19">buf_end</name> <operator pos:start="121:21" pos:end="121:21">&lt;</operator> <operator pos:start="121:23" pos:end="121:23">*</operator><name pos:start="121:24" pos:end="121:26">buf</name> <operator pos:start="121:28" pos:end="121:28">+</operator> <name pos:start="121:30" pos:end="121:37">buf_size</name></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:25"><block_content pos:start="123:13" pos:end="123:25">

            <expr_stmt pos:start="123:13" pos:end="123:25"><expr pos:start="123:13" pos:end="123:24"><name pos:start="123:13" pos:end="123:19">buf_end</name> <operator pos:start="123:21" pos:end="123:22">-=</operator> <literal type="number" pos:start="123:24" pos:end="123:24">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:23"><expr pos:start="125:9" pos:end="125:22"><name pos:start="125:9" pos:end="125:15"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:15">mb_y</name></name> <operator pos:start="125:17" pos:end="125:17">=</operator> <name pos:start="125:19" pos:end="125:22">mb_y</name></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="129:38"><if pos:start="127:9" pos:end="129:38">if <condition pos:start="127:12" pos:end="127:84">(<expr pos:start="127:13" pos:end="127:83"><call pos:start="127:13" pos:end="127:79"><name pos:start="127:13" pos:end="127:40"><name pos:start="127:13" pos:end="127:17">avctx</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:26">hwaccel</name><operator pos:start="127:27" pos:end="127:28">-&gt;</operator><name pos:start="127:29" pos:end="127:40">decode_slice</name></name><argument_list pos:start="127:41" pos:end="127:79">(<argument pos:start="127:42" pos:end="127:46"><expr pos:start="127:42" pos:end="127:46"><name pos:start="127:42" pos:end="127:46">avctx</name></expr></argument>, <argument pos:start="127:49" pos:end="127:57"><expr pos:start="127:49" pos:end="127:57"><name pos:start="127:49" pos:end="127:57">buf_start</name></expr></argument>, <argument pos:start="127:60" pos:end="127:78"><expr pos:start="127:60" pos:end="127:78"><name pos:start="127:60" pos:end="127:66">buf_end</name> <operator pos:start="127:68" pos:end="127:68">-</operator> <name pos:start="127:70" pos:end="127:78">buf_start</name></expr></argument>)</argument_list></call> <operator pos:start="127:81" pos:end="127:81">&lt;</operator> <literal type="number" pos:start="127:83" pos:end="127:83">0</literal></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:38"><block_content pos:start="129:13" pos:end="129:38">

            <return pos:start="129:13" pos:end="129:38">return <expr pos:start="129:20" pos:end="129:37"><name pos:start="129:20" pos:end="129:37">DECODE_SLICE_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:23"><expr pos:start="131:9" pos:end="131:22"><operator pos:start="131:9" pos:end="131:9">*</operator><name pos:start="131:10" pos:end="131:12">buf</name> <operator pos:start="131:14" pos:end="131:14">=</operator> <name pos:start="131:16" pos:end="131:22">buf_end</name></expr>;</expr_stmt>

        <return pos:start="133:9" pos:end="133:31">return <expr pos:start="133:16" pos:end="133:30"><name pos:start="133:16" pos:end="133:30">DECODE_SLICE_OK</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:29"><expr pos:start="139:5" pos:end="139:28"><name pos:start="139:5" pos:end="139:18"><name pos:start="139:5" pos:end="139:5">s</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:18">resync_mb_x</name></name> <operator pos:start="139:20" pos:end="139:20">=</operator> <name pos:start="139:22" pos:end="139:28"><name pos:start="139:22" pos:end="139:22">s</name><operator pos:start="139:23" pos:end="139:24">-&gt;</operator><name pos:start="139:25" pos:end="139:28">mb_x</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:36"><expr pos:start="141:5" pos:end="141:35"><name pos:start="141:5" pos:end="141:18"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:18">resync_mb_y</name></name> <operator pos:start="141:20" pos:end="141:20">=</operator> <name pos:start="141:22" pos:end="141:28"><name pos:start="141:22" pos:end="141:22">s</name><operator pos:start="141:23" pos:end="141:24">-&gt;</operator><name pos:start="141:25" pos:end="141:28">mb_y</name></name> <operator pos:start="141:30" pos:end="141:30">=</operator> <name pos:start="141:32" pos:end="141:35">mb_y</name></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:23"><expr pos:start="143:5" pos:end="143:22"><name pos:start="143:5" pos:end="143:18"><name pos:start="143:5" pos:end="143:5">s</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:18">mb_skip_run</name></name> <operator pos:start="143:20" pos:end="143:20">=</operator> <literal type="number" pos:start="143:22" pos:end="143:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:27"><expr pos:start="145:5" pos:end="145:26"><call pos:start="145:5" pos:end="145:26"><name pos:start="145:5" pos:end="145:23">ff_init_block_index</name><argument_list pos:start="145:24" pos:end="145:26">(<argument pos:start="145:25" pos:end="145:25"><expr pos:start="145:25" pos:end="145:25"><name pos:start="145:25" pos:end="145:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="149:5" pos:end="187:5"><if pos:start="149:5" pos:end="187:5">if <condition pos:start="149:8" pos:end="149:95">(<expr pos:start="149:9" pos:end="149:94"><name pos:start="149:9" pos:end="149:15"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:15">mb_y</name></name> <operator pos:start="149:17" pos:end="149:18">==</operator> <literal type="number" pos:start="149:20" pos:end="149:20">0</literal> <operator pos:start="149:22" pos:end="149:23">&amp;&amp;</operator> <name pos:start="149:25" pos:end="149:31"><name pos:start="149:25" pos:end="149:25">s</name><operator pos:start="149:26" pos:end="149:27">-&gt;</operator><name pos:start="149:28" pos:end="149:31">mb_x</name></name> <operator pos:start="149:33" pos:end="149:34">==</operator> <literal type="number" pos:start="149:36" pos:end="149:36">0</literal> <operator pos:start="149:38" pos:end="149:39">&amp;&amp;</operator> <operator pos:start="149:41" pos:end="149:41">(</operator><name pos:start="149:42" pos:end="149:55"><name pos:start="149:42" pos:end="149:42">s</name><operator pos:start="149:43" pos:end="149:44">-&gt;</operator><name pos:start="149:45" pos:end="149:55">first_field</name></name> <operator pos:start="149:57" pos:end="149:58">||</operator> <name pos:start="149:60" pos:end="149:79"><name pos:start="149:60" pos:end="149:60">s</name><operator pos:start="149:61" pos:end="149:62">-&gt;</operator><name pos:start="149:63" pos:end="149:79">picture_structure</name></name> <operator pos:start="149:81" pos:end="149:82">==</operator> <name pos:start="149:84" pos:end="149:93">PICT_FRAME</name><operator pos:start="149:94" pos:end="149:94">)</operator></expr>)</condition> <block pos:start="149:97" pos:end="187:5">{<block_content pos:start="151:9" pos:end="185:9">

        <if_stmt pos:start="151:9" pos:end="185:9"><if pos:start="151:9" pos:end="185:9">if <condition pos:start="151:12" pos:end="151:49">(<expr pos:start="151:13" pos:end="151:48"><name pos:start="151:13" pos:end="151:27"><name pos:start="151:13" pos:end="151:13">s</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:20">avctx</name><operator pos:start="151:21" pos:end="151:22">-&gt;</operator><name pos:start="151:23" pos:end="151:27">debug</name></name> <operator pos:start="151:29" pos:end="151:29">&amp;</operator> <name pos:start="151:31" pos:end="151:48">FF_DEBUG_PICT_INFO</name></expr>)</condition> <block pos:start="151:51" pos:end="185:9">{<block_content pos:start="153:13" pos:end="183:75">

            <expr_stmt pos:start="153:13" pos:end="183:75"><expr pos:start="153:13" pos:end="183:74"><call pos:start="153:13" pos:end="183:74"><name pos:start="153:13" pos:end="153:18">av_log</name><argument_list pos:start="153:19" pos:end="183:74">(<argument pos:start="153:20" pos:end="153:27"><expr pos:start="153:20" pos:end="153:27"><name pos:start="153:20" pos:end="153:27"><name pos:start="153:20" pos:end="153:20">s</name><operator pos:start="153:21" pos:end="153:22">-&gt;</operator><name pos:start="153:23" pos:end="153:27">avctx</name></name></expr></argument>, <argument pos:start="153:30" pos:end="153:41"><expr pos:start="153:30" pos:end="153:41"><name pos:start="153:30" pos:end="153:41">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="155:20" pos:end="155:118"><expr pos:start="155:20" pos:end="155:118"><literal type="string" pos:start="155:20" pos:end="155:118">"qp:%d fc:%2d%2d%2d%2d %s %s %s %s %s dc:%d pstruct:%d fdct:%d cmv:%d qtype:%d ivlc:%d rff:%d %s\n"</literal></expr></argument>,

                   <argument pos:start="157:20" pos:end="157:28"><expr pos:start="157:20" pos:end="157:28"><name pos:start="157:20" pos:end="157:28"><name pos:start="157:20" pos:end="157:20">s</name><operator pos:start="157:21" pos:end="157:22">-&gt;</operator><name pos:start="157:23" pos:end="157:28">qscale</name></name></expr></argument>,

                   <argument pos:start="159:20" pos:end="159:39"><expr pos:start="159:20" pos:end="159:39"><name pos:start="159:20" pos:end="159:39"><name pos:start="159:20" pos:end="159:20">s</name><operator pos:start="159:21" pos:end="159:22">-&gt;</operator><name pos:start="159:23" pos:end="159:33">mpeg_f_code</name><index pos:start="159:34" pos:end="159:36">[<expr pos:start="159:35" pos:end="159:35"><literal type="number" pos:start="159:35" pos:end="159:35">0</literal></expr>]</index><index pos:start="159:37" pos:end="159:39">[<expr pos:start="159:38" pos:end="159:38"><literal type="number" pos:start="159:38" pos:end="159:38">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="159:42" pos:end="159:61"><expr pos:start="159:42" pos:end="159:61"><name pos:start="159:42" pos:end="159:61"><name pos:start="159:42" pos:end="159:42">s</name><operator pos:start="159:43" pos:end="159:44">-&gt;</operator><name pos:start="159:45" pos:end="159:55">mpeg_f_code</name><index pos:start="159:56" pos:end="159:58">[<expr pos:start="159:57" pos:end="159:57"><literal type="number" pos:start="159:57" pos:end="159:57">0</literal></expr>]</index><index pos:start="159:59" pos:end="159:61">[<expr pos:start="159:60" pos:end="159:60"><literal type="number" pos:start="159:60" pos:end="159:60">1</literal></expr>]</index></name></expr></argument>,

                   <argument pos:start="161:20" pos:end="161:39"><expr pos:start="161:20" pos:end="161:39"><name pos:start="161:20" pos:end="161:39"><name pos:start="161:20" pos:end="161:20">s</name><operator pos:start="161:21" pos:end="161:22">-&gt;</operator><name pos:start="161:23" pos:end="161:33">mpeg_f_code</name><index pos:start="161:34" pos:end="161:36">[<expr pos:start="161:35" pos:end="161:35"><literal type="number" pos:start="161:35" pos:end="161:35">1</literal></expr>]</index><index pos:start="161:37" pos:end="161:39">[<expr pos:start="161:38" pos:end="161:38"><literal type="number" pos:start="161:38" pos:end="161:38">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="161:42" pos:end="161:61"><expr pos:start="161:42" pos:end="161:61"><name pos:start="161:42" pos:end="161:61"><name pos:start="161:42" pos:end="161:42">s</name><operator pos:start="161:43" pos:end="161:44">-&gt;</operator><name pos:start="161:45" pos:end="161:55">mpeg_f_code</name><index pos:start="161:56" pos:end="161:58">[<expr pos:start="161:57" pos:end="161:57"><literal type="number" pos:start="161:57" pos:end="161:57">1</literal></expr>]</index><index pos:start="161:59" pos:end="161:61">[<expr pos:start="161:60" pos:end="161:60"><literal type="number" pos:start="161:60" pos:end="161:60">1</literal></expr>]</index></name></expr></argument>,

                   <argument pos:start="163:20" pos:end="167:67"><expr pos:start="163:20" pos:end="167:67"><ternary pos:start="163:20" pos:end="167:67"><condition pos:start="163:20" pos:end="163:55"><expr pos:start="163:20" pos:end="163:53"><name pos:start="163:20" pos:end="163:31"><name pos:start="163:20" pos:end="163:20">s</name><operator pos:start="163:21" pos:end="163:22">-&gt;</operator><name pos:start="163:23" pos:end="163:31">pict_type</name></name>  <operator pos:start="163:34" pos:end="163:35">==</operator> <name pos:start="163:37" pos:end="163:53">AV_PICTURE_TYPE_I</name></expr> ?</condition><then pos:start="163:57" pos:end="163:59"> <expr pos:start="163:57" pos:end="163:59"><literal type="string" pos:start="163:57" pos:end="163:59">"I"</literal></expr> </then><else pos:start="163:61" pos:end="167:67">:

                   <expr pos:start="165:20" pos:end="167:67"><operator pos:start="165:20" pos:end="165:20">(</operator><ternary pos:start="165:21" pos:end="167:66"><condition pos:start="165:21" pos:end="165:55"><expr pos:start="165:21" pos:end="165:53"><name pos:start="165:21" pos:end="165:32"><name pos:start="165:21" pos:end="165:21">s</name><operator pos:start="165:22" pos:end="165:23">-&gt;</operator><name pos:start="165:24" pos:end="165:32">pict_type</name></name> <operator pos:start="165:34" pos:end="165:35">==</operator> <name pos:start="165:37" pos:end="165:53">AV_PICTURE_TYPE_P</name></expr> ?</condition><then pos:start="165:57" pos:end="165:59"> <expr pos:start="165:57" pos:end="165:59"><literal type="string" pos:start="165:57" pos:end="165:59">"P"</literal></expr> </then><else pos:start="165:61" pos:end="167:66">:

                   <expr pos:start="167:20" pos:end="167:66"><operator pos:start="167:20" pos:end="167:20">(</operator><ternary pos:start="167:21" pos:end="167:65"><condition pos:start="167:21" pos:end="167:55"><expr pos:start="167:21" pos:end="167:53"><name pos:start="167:21" pos:end="167:32"><name pos:start="167:21" pos:end="167:21">s</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:32">pict_type</name></name> <operator pos:start="167:34" pos:end="167:35">==</operator> <name pos:start="167:37" pos:end="167:53">AV_PICTURE_TYPE_B</name></expr> ?</condition><then pos:start="167:57" pos:end="167:59"> <expr pos:start="167:57" pos:end="167:59"><literal type="string" pos:start="167:57" pos:end="167:59">"B"</literal></expr> </then><else pos:start="167:61" pos:end="167:65">: <expr pos:start="167:63" pos:end="167:65"><literal type="string" pos:start="167:63" pos:end="167:65">"S"</literal></expr></else></ternary><operator pos:start="167:66" pos:end="167:66">)</operator></expr></else></ternary><operator pos:start="167:67" pos:end="167:67">)</operator></expr></else></ternary></expr></argument>,

                   <argument pos:start="169:20" pos:end="169:55"><expr pos:start="169:20" pos:end="169:55"><ternary pos:start="169:20" pos:end="169:55"><condition pos:start="169:20" pos:end="169:44"><expr pos:start="169:20" pos:end="169:42"><name pos:start="169:20" pos:end="169:42"><name pos:start="169:20" pos:end="169:20">s</name><operator pos:start="169:21" pos:end="169:22">-&gt;</operator><name pos:start="169:23" pos:end="169:42">progressive_sequence</name></name></expr> ?</condition><then pos:start="169:46" pos:end="169:49"> <expr pos:start="169:46" pos:end="169:49"><literal type="string" pos:start="169:46" pos:end="169:49">"ps"</literal></expr>  </then><else pos:start="169:52" pos:end="169:55">: <expr pos:start="169:54" pos:end="169:55"><literal type="string" pos:start="169:54" pos:end="169:55">""</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="171:20" pos:end="171:55"><expr pos:start="171:20" pos:end="171:55"><ternary pos:start="171:20" pos:end="171:55"><condition pos:start="171:20" pos:end="171:44"><expr pos:start="171:20" pos:end="171:39"><name pos:start="171:20" pos:end="171:39"><name pos:start="171:20" pos:end="171:20">s</name><operator pos:start="171:21" pos:end="171:22">-&gt;</operator><name pos:start="171:23" pos:end="171:39">progressive_frame</name></name></expr>    ?</condition><then pos:start="171:46" pos:end="171:49"> <expr pos:start="171:46" pos:end="171:49"><literal type="string" pos:start="171:46" pos:end="171:49">"pf"</literal></expr>  </then><else pos:start="171:52" pos:end="171:55">: <expr pos:start="171:54" pos:end="171:55"><literal type="string" pos:start="171:54" pos:end="171:55">""</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="173:20" pos:end="173:55"><expr pos:start="173:20" pos:end="173:55"><ternary pos:start="173:20" pos:end="173:55"><condition pos:start="173:20" pos:end="173:44"><expr pos:start="173:20" pos:end="173:36"><name pos:start="173:20" pos:end="173:36"><name pos:start="173:20" pos:end="173:20">s</name><operator pos:start="173:21" pos:end="173:22">-&gt;</operator><name pos:start="173:23" pos:end="173:36">alternate_scan</name></name></expr>       ?</condition><then pos:start="173:46" pos:end="173:50"> <expr pos:start="173:46" pos:end="173:50"><literal type="string" pos:start="173:46" pos:end="173:50">"alt"</literal></expr> </then><else pos:start="173:52" pos:end="173:55">: <expr pos:start="173:54" pos:end="173:55"><literal type="string" pos:start="173:54" pos:end="173:55">""</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="175:20" pos:end="175:55"><expr pos:start="175:20" pos:end="175:55"><ternary pos:start="175:20" pos:end="175:55"><condition pos:start="175:20" pos:end="175:44"><expr pos:start="175:20" pos:end="175:37"><name pos:start="175:20" pos:end="175:37"><name pos:start="175:20" pos:end="175:20">s</name><operator pos:start="175:21" pos:end="175:22">-&gt;</operator><name pos:start="175:23" pos:end="175:37">top_field_first</name></name></expr>      ?</condition><then pos:start="175:46" pos:end="175:50"> <expr pos:start="175:46" pos:end="175:50"><literal type="string" pos:start="175:46" pos:end="175:50">"top"</literal></expr> </then><else pos:start="175:52" pos:end="175:55">: <expr pos:start="175:54" pos:end="175:55"><literal type="string" pos:start="175:54" pos:end="175:55">""</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="177:20" pos:end="177:40"><expr pos:start="177:20" pos:end="177:40"><name pos:start="177:20" pos:end="177:40"><name pos:start="177:20" pos:end="177:20">s</name><operator pos:start="177:21" pos:end="177:22">-&gt;</operator><name pos:start="177:23" pos:end="177:40">intra_dc_precision</name></name></expr></argument>, <argument pos:start="177:43" pos:end="177:62"><expr pos:start="177:43" pos:end="177:62"><name pos:start="177:43" pos:end="177:62"><name pos:start="177:43" pos:end="177:43">s</name><operator pos:start="177:44" pos:end="177:45">-&gt;</operator><name pos:start="177:46" pos:end="177:62">picture_structure</name></name></expr></argument>,

                   <argument pos:start="179:20" pos:end="179:42"><expr pos:start="179:20" pos:end="179:42"><name pos:start="179:20" pos:end="179:42"><name pos:start="179:20" pos:end="179:20">s</name><operator pos:start="179:21" pos:end="179:22">-&gt;</operator><name pos:start="179:23" pos:end="179:42">frame_pred_frame_dct</name></name></expr></argument>, <argument pos:start="179:45" pos:end="179:73"><expr pos:start="179:45" pos:end="179:73"><name pos:start="179:45" pos:end="179:73"><name pos:start="179:45" pos:end="179:45">s</name><operator pos:start="179:46" pos:end="179:47">-&gt;</operator><name pos:start="179:48" pos:end="179:73">concealment_motion_vectors</name></name></expr></argument>,

                   <argument pos:start="181:20" pos:end="181:34"><expr pos:start="181:20" pos:end="181:34"><name pos:start="181:20" pos:end="181:34"><name pos:start="181:20" pos:end="181:20">s</name><operator pos:start="181:21" pos:end="181:22">-&gt;</operator><name pos:start="181:23" pos:end="181:34">q_scale_type</name></name></expr></argument>, <argument pos:start="181:37" pos:end="181:55"><expr pos:start="181:37" pos:end="181:55"><name pos:start="181:37" pos:end="181:55"><name pos:start="181:37" pos:end="181:37">s</name><operator pos:start="181:38" pos:end="181:39">-&gt;</operator><name pos:start="181:40" pos:end="181:55">intra_vlc_format</name></name></expr></argument>,

                   <argument pos:start="183:20" pos:end="183:40"><expr pos:start="183:20" pos:end="183:40"><name pos:start="183:20" pos:end="183:40"><name pos:start="183:20" pos:end="183:20">s</name><operator pos:start="183:21" pos:end="183:22">-&gt;</operator><name pos:start="183:23" pos:end="183:40">repeat_first_field</name></name></expr></argument>, <argument pos:start="183:43" pos:end="183:73"><expr pos:start="183:43" pos:end="183:73"><ternary pos:start="183:43" pos:end="183:73"><condition pos:start="183:43" pos:end="183:62"><expr pos:start="183:43" pos:end="183:60"><name pos:start="183:43" pos:end="183:60"><name pos:start="183:43" pos:end="183:43">s</name><operator pos:start="183:44" pos:end="183:45">-&gt;</operator><name pos:start="183:46" pos:end="183:60">chroma_420_type</name></name></expr> ?</condition><then pos:start="183:64" pos:end="183:68"> <expr pos:start="183:64" pos:end="183:68"><literal type="string" pos:start="183:64" pos:end="183:68">"420"</literal></expr> </then><else pos:start="183:70" pos:end="183:73">: <expr pos:start="183:72" pos:end="183:73"><literal type="string" pos:start="183:72" pos:end="183:73">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="191:5" pos:end="479:5">for <control pos:start="191:9" pos:end="191:12">(<init pos:start="191:10" pos:end="191:10">;</init><condition pos:start="191:11" pos:end="191:11">;</condition><incr/>)</control> <block pos:start="191:14" pos:end="479:5">{<block_content pos:start="195:1" pos:end="477:9">

<cpp:if pos:start="193:1" pos:end="193:15">#<cpp:directive pos:start="193:2" pos:end="193:3">if</cpp:directive> <expr pos:start="193:5" pos:end="193:15"><name pos:start="193:5" pos:end="193:15">FF_API_XVMC</name></expr></cpp:if>

<macro pos:start="195:1" pos:end="195:31"><name pos:start="195:1" pos:end="195:31">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

        <comment type="line" pos:start="197:9" pos:end="197:47">// If 1, we memcpy blocks in xvmcvideo.</comment>

        <if_stmt pos:start="199:9" pos:end="201:34"><if pos:start="199:9" pos:end="201:34">if <condition pos:start="199:12" pos:end="199:72">(<expr pos:start="199:13" pos:end="199:71"><name pos:start="199:13" pos:end="199:36">CONFIG_MPEG_XVMC_DECODER</name> <operator pos:start="199:38" pos:end="199:39">&amp;&amp;</operator> <name pos:start="199:41" pos:end="199:67"><name pos:start="199:41" pos:end="199:41">s</name><operator pos:start="199:42" pos:end="199:43">-&gt;</operator><name pos:start="199:44" pos:end="199:48">avctx</name><operator pos:start="199:49" pos:end="199:50">-&gt;</operator><name pos:start="199:51" pos:end="199:67">xvmc_acceleration</name></name> <operator pos:start="199:69" pos:end="199:69">&gt;</operator> <literal type="number" pos:start="199:71" pos:end="199:71">1</literal></expr>)</condition><block type="pseudo" pos:start="201:13" pos:end="201:34"><block_content pos:start="201:13" pos:end="201:34">

            <expr_stmt pos:start="201:13" pos:end="201:34"><expr pos:start="201:13" pos:end="201:33"><call pos:start="201:13" pos:end="201:33"><name pos:start="201:13" pos:end="201:30">ff_xvmc_init_block</name><argument_list pos:start="201:31" pos:end="201:33">(<argument pos:start="201:32" pos:end="201:32"><expr pos:start="201:32" pos:end="201:32"><name pos:start="201:32" pos:end="201:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="201:36" pos:end="201:50">// set s-&gt;block</comment>

<macro pos:start="203:1" pos:end="206:0"><name pos:start="203:1" pos:end="206:0">FF_ENABLE_DEPRECATION_WARNINGS</name></macro>

<cpp:endif pos:start="205:1" pos:end="205:6">#<cpp:directive pos:start="205:2" pos:end="205:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="205:8" pos:end="205:24">/* FF_API_XVMC */</comment>



        <if_stmt pos:start="209:9" pos:end="211:23"><if pos:start="209:9" pos:end="211:23">if <condition pos:start="209:12" pos:end="209:52">(<expr pos:start="209:13" pos:end="209:51"><operator pos:start="209:13" pos:end="209:13">(</operator><name pos:start="209:14" pos:end="209:16">ret</name> <operator pos:start="209:18" pos:end="209:18">=</operator> <call pos:start="209:20" pos:end="209:46"><name pos:start="209:20" pos:end="209:33">mpeg_decode_mb</name><argument_list pos:start="209:34" pos:end="209:46">(<argument pos:start="209:35" pos:end="209:35"><expr pos:start="209:35" pos:end="209:35"><name pos:start="209:35" pos:end="209:35">s</name></expr></argument>, <argument pos:start="209:38" pos:end="209:45"><expr pos:start="209:38" pos:end="209:45"><name pos:start="209:38" pos:end="209:45"><name pos:start="209:38" pos:end="209:38">s</name><operator pos:start="209:39" pos:end="209:40">-&gt;</operator><name pos:start="209:41" pos:end="209:45">block</name></name></expr></argument>)</argument_list></call><operator pos:start="209:47" pos:end="209:47">)</operator> <operator pos:start="209:49" pos:end="209:49">&lt;</operator> <literal type="number" pos:start="209:51" pos:end="209:51">0</literal></expr>)</condition><block type="pseudo" pos:start="211:13" pos:end="211:23"><block_content pos:start="211:13" pos:end="211:23">

            <return pos:start="211:13" pos:end="211:23">return <expr pos:start="211:20" pos:end="211:22"><name pos:start="211:20" pos:end="211:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <comment type="line" pos:start="215:9" pos:end="215:78">// Note motion_val is normally NULL unless we want to extract the MVs.</comment>

        <if_stmt pos:start="217:9" pos:end="281:9"><if pos:start="217:9" pos:end="281:9">if <condition pos:start="217:12" pos:end="217:61">(<expr pos:start="217:13" pos:end="217:60"><name pos:start="217:13" pos:end="217:44"><name pos:start="217:13" pos:end="217:13">s</name><operator pos:start="217:14" pos:end="217:15">-&gt;</operator><name pos:start="217:16" pos:end="217:30">current_picture</name><operator pos:start="217:31" pos:end="217:31">.</operator><name pos:start="217:32" pos:end="217:41">motion_val</name><index pos:start="217:42" pos:end="217:44">[<expr pos:start="217:43" pos:end="217:43"><literal type="number" pos:start="217:43" pos:end="217:43">0</literal></expr>]</index></name> <operator pos:start="217:46" pos:end="217:47">&amp;&amp;</operator> <operator pos:start="217:49" pos:end="217:49">!</operator><name pos:start="217:50" pos:end="217:60"><name pos:start="217:50" pos:end="217:50">s</name><operator pos:start="217:51" pos:end="217:52">-&gt;</operator><name pos:start="217:53" pos:end="217:60">encoding</name></name></expr>)</condition> <block pos:start="217:63" pos:end="281:9">{<block_content pos:start="219:13" pos:end="279:13">

            <decl_stmt pos:start="219:13" pos:end="219:42"><decl pos:start="219:13" pos:end="219:41"><type pos:start="219:13" pos:end="219:21"><specifier pos:start="219:13" pos:end="219:17">const</specifier> <name pos:start="219:19" pos:end="219:21">int</name></type> <name pos:start="219:23" pos:end="219:26">wrap</name> <init pos:start="219:28" pos:end="219:41">= <expr pos:start="219:30" pos:end="219:41"><name pos:start="219:30" pos:end="219:41"><name pos:start="219:30" pos:end="219:30">s</name><operator pos:start="219:31" pos:end="219:32">-&gt;</operator><name pos:start="219:33" pos:end="219:41">b8_stride</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="221:13" pos:end="221:62"><decl pos:start="221:13" pos:end="221:61"><type pos:start="221:13" pos:end="221:15"><name pos:start="221:13" pos:end="221:15">int</name></type> <name pos:start="221:17" pos:end="221:18">xy</name>         <init pos:start="221:28" pos:end="221:61">= <expr pos:start="221:30" pos:end="221:61"><name pos:start="221:30" pos:end="221:36"><name pos:start="221:30" pos:end="221:30">s</name><operator pos:start="221:31" pos:end="221:32">-&gt;</operator><name pos:start="221:33" pos:end="221:36">mb_x</name></name> <operator pos:start="221:38" pos:end="221:38">*</operator> <literal type="number" pos:start="221:40" pos:end="221:42">2</literal> <operator pos:start="221:42" pos:end="221:42">+</operator> <name pos:start="221:44" pos:end="221:50"><name pos:start="221:44" pos:end="221:44">s</name><operator pos:start="221:45" pos:end="221:46">-&gt;</operator><name pos:start="221:47" pos:end="221:50">mb_y</name></name> <operator pos:start="221:52" pos:end="221:52">*</operator> <literal type="number" pos:start="221:54" pos:end="221:54">2</literal> <operator pos:start="221:56" pos:end="221:56">*</operator> <name pos:start="221:58" pos:end="221:61">wrap</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="223:13" pos:end="223:68"><decl pos:start="223:13" pos:end="223:67"><type pos:start="223:13" pos:end="223:15"><name pos:start="223:13" pos:end="223:15">int</name></type> <name pos:start="223:17" pos:end="223:21">b8_xy</name>      <init pos:start="223:28" pos:end="223:67">= <expr pos:start="223:30" pos:end="223:67"><literal type="number" pos:start="223:30" pos:end="223:30">4</literal> <operator pos:start="223:32" pos:end="223:32">*</operator> <operator pos:start="223:34" pos:end="223:34">(</operator><name pos:start="223:35" pos:end="223:41"><name pos:start="223:35" pos:end="223:35">s</name><operator pos:start="223:36" pos:end="223:37">-&gt;</operator><name pos:start="223:38" pos:end="223:41">mb_x</name></name> <operator pos:start="223:43" pos:end="223:43">+</operator> <name pos:start="223:45" pos:end="223:51"><name pos:start="223:45" pos:end="223:45">s</name><operator pos:start="223:46" pos:end="223:47">-&gt;</operator><name pos:start="223:48" pos:end="223:51">mb_y</name></name> <operator pos:start="223:53" pos:end="223:53">*</operator> <name pos:start="223:55" pos:end="223:66"><name pos:start="223:55" pos:end="223:55">s</name><operator pos:start="223:56" pos:end="223:57">-&gt;</operator><name pos:start="223:58" pos:end="223:66">mb_stride</name></name><operator pos:start="223:67" pos:end="223:67">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="225:13" pos:end="225:43"><decl pos:start="225:13" pos:end="225:24"><type pos:start="225:13" pos:end="225:15"><name pos:start="225:13" pos:end="225:15">int</name></type> <name pos:start="225:17" pos:end="225:24">motion_x</name></decl>, <decl pos:start="225:27" pos:end="225:34"><type ref="prev" pos:start="225:13" pos:end="225:15"/><name pos:start="225:27" pos:end="225:34">motion_y</name></decl>, <decl pos:start="225:37" pos:end="225:39"><type ref="prev" pos:start="225:13" pos:end="225:15"/><name pos:start="225:37" pos:end="225:39">dir</name></decl>, <decl pos:start="225:42" pos:end="225:42"><type ref="prev" pos:start="225:13" pos:end="225:15"/><name pos:start="225:42" pos:end="225:42">i</name></decl>;</decl_stmt>



            <for pos:start="229:13" pos:end="279:13">for <control pos:start="229:17" pos:end="229:35">(<init pos:start="229:18" pos:end="229:23"><expr pos:start="229:18" pos:end="229:22"><name pos:start="229:18" pos:end="229:18">i</name> <operator pos:start="229:20" pos:end="229:20">=</operator> <literal type="number" pos:start="229:22" pos:end="229:22">0</literal></expr>;</init> <condition pos:start="229:25" pos:end="229:30"><expr pos:start="229:25" pos:end="229:29"><name pos:start="229:25" pos:end="229:25">i</name> <operator pos:start="229:27" pos:end="229:27">&lt;</operator> <literal type="number" pos:start="229:29" pos:end="229:29">2</literal></expr>;</condition> <incr pos:start="229:32" pos:end="229:34"><expr pos:start="229:32" pos:end="229:34"><name pos:start="229:32" pos:end="229:32">i</name><operator pos:start="229:33" pos:end="229:34">++</operator></expr></incr>)</control> <block pos:start="229:37" pos:end="279:13">{<block_content pos:start="231:17" pos:end="277:27">

                <for pos:start="231:17" pos:end="273:17">for <control pos:start="231:21" pos:end="231:45">(<init pos:start="231:22" pos:end="231:29"><expr pos:start="231:22" pos:end="231:28"><name pos:start="231:22" pos:end="231:24">dir</name> <operator pos:start="231:26" pos:end="231:26">=</operator> <literal type="number" pos:start="231:28" pos:end="231:28">0</literal></expr>;</init> <condition pos:start="231:31" pos:end="231:38"><expr pos:start="231:31" pos:end="231:37"><name pos:start="231:31" pos:end="231:33">dir</name> <operator pos:start="231:35" pos:end="231:35">&lt;</operator> <literal type="number" pos:start="231:37" pos:end="231:37">2</literal></expr>;</condition> <incr pos:start="231:40" pos:end="231:44"><expr pos:start="231:40" pos:end="231:44"><name pos:start="231:40" pos:end="231:42">dir</name><operator pos:start="231:43" pos:end="231:44">++</operator></expr></incr>)</control> <block pos:start="231:47" pos:end="273:17">{<block_content pos:start="233:21" pos:end="271:57">

                    <if_stmt pos:start="233:21" pos:end="253:21"><if pos:start="233:21" pos:end="239:21">if <condition pos:start="233:24" pos:end="235:72">(<expr pos:start="233:25" pos:end="235:71"><name pos:start="233:25" pos:end="233:35"><name pos:start="233:25" pos:end="233:25">s</name><operator pos:start="233:26" pos:end="233:27">-&gt;</operator><name pos:start="233:28" pos:end="233:35">mb_intra</name></name> <operator pos:start="233:37" pos:end="233:38">||</operator>

                        <operator pos:start="235:25" pos:end="235:25">(</operator><name pos:start="235:26" pos:end="235:28">dir</name> <operator pos:start="235:30" pos:end="235:31">==</operator> <literal type="number" pos:start="235:33" pos:end="235:33">1</literal> <operator pos:start="235:35" pos:end="235:36">&amp;&amp;</operator> <name pos:start="235:38" pos:end="235:49"><name pos:start="235:38" pos:end="235:38">s</name><operator pos:start="235:39" pos:end="235:40">-&gt;</operator><name pos:start="235:41" pos:end="235:49">pict_type</name></name> <operator pos:start="235:51" pos:end="235:52">!=</operator> <name pos:start="235:54" pos:end="235:70">AV_PICTURE_TYPE_B</name><operator pos:start="235:71" pos:end="235:71">)</operator></expr>)</condition> <block pos:start="235:74" pos:end="239:21">{<block_content pos:start="237:25" pos:end="237:48">

                        <expr_stmt pos:start="237:25" pos:end="237:48"><expr pos:start="237:25" pos:end="237:47"><name pos:start="237:25" pos:end="237:32">motion_x</name> <operator pos:start="237:34" pos:end="237:34">=</operator> <name pos:start="237:36" pos:end="237:43">motion_y</name> <operator pos:start="237:45" pos:end="237:45">=</operator> <literal type="number" pos:start="237:47" pos:end="237:47">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="239:23" pos:end="247:21">else if <condition pos:start="239:31" pos:end="241:74">(<expr pos:start="239:32" pos:end="241:73"><name pos:start="239:32" pos:end="239:41"><name pos:start="239:32" pos:end="239:32">s</name><operator pos:start="239:33" pos:end="239:34">-&gt;</operator><name pos:start="239:35" pos:end="239:41">mv_type</name></name> <operator pos:start="239:43" pos:end="239:44">==</operator> <name pos:start="239:46" pos:end="239:58">MV_TYPE_16X16</name> <operator pos:start="239:60" pos:end="239:61">||</operator>

                               <operator pos:start="241:32" pos:end="241:32">(</operator><name pos:start="241:33" pos:end="241:42"><name pos:start="241:33" pos:end="241:33">s</name><operator pos:start="241:34" pos:end="241:35">-&gt;</operator><name pos:start="241:36" pos:end="241:42">mv_type</name></name> <operator pos:start="241:44" pos:end="241:45">==</operator> <name pos:start="241:47" pos:end="241:59">MV_TYPE_FIELD</name> <operator pos:start="241:61" pos:end="241:62">&amp;&amp;</operator> <name pos:start="241:64" pos:end="241:72">field_pic</name><operator pos:start="241:73" pos:end="241:73">)</operator></expr>)</condition> <block pos:start="241:76" pos:end="247:21">{<block_content pos:start="243:25" pos:end="245:52">

                        <expr_stmt pos:start="243:25" pos:end="243:52"><expr pos:start="243:25" pos:end="243:51"><name pos:start="243:25" pos:end="243:32">motion_x</name> <operator pos:start="243:34" pos:end="243:34">=</operator> <name pos:start="243:36" pos:end="243:51"><name pos:start="243:36" pos:end="243:36">s</name><operator pos:start="243:37" pos:end="243:38">-&gt;</operator><name pos:start="243:39" pos:end="243:40">mv</name><index pos:start="243:41" pos:end="243:45">[<expr pos:start="243:42" pos:end="243:44"><name pos:start="243:42" pos:end="243:44">dir</name></expr>]</index><index pos:start="243:46" pos:end="243:48">[<expr pos:start="243:47" pos:end="243:47"><literal type="number" pos:start="243:47" pos:end="243:47">0</literal></expr>]</index><index pos:start="243:49" pos:end="243:51">[<expr pos:start="243:50" pos:end="243:50"><literal type="number" pos:start="243:50" pos:end="243:50">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="245:25" pos:end="245:52"><expr pos:start="245:25" pos:end="245:51"><name pos:start="245:25" pos:end="245:32">motion_y</name> <operator pos:start="245:34" pos:end="245:34">=</operator> <name pos:start="245:36" pos:end="245:51"><name pos:start="245:36" pos:end="245:36">s</name><operator pos:start="245:37" pos:end="245:38">-&gt;</operator><name pos:start="245:39" pos:end="245:40">mv</name><index pos:start="245:41" pos:end="245:45">[<expr pos:start="245:42" pos:end="245:44"><name pos:start="245:42" pos:end="245:44">dir</name></expr>]</index><index pos:start="245:46" pos:end="245:48">[<expr pos:start="245:47" pos:end="245:47"><literal type="number" pos:start="245:47" pos:end="245:47">0</literal></expr>]</index><index pos:start="245:49" pos:end="245:51">[<expr pos:start="245:50" pos:end="245:50"><literal type="number" pos:start="245:50" pos:end="245:50">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="247:23" pos:end="253:21">else <block pos:start="247:28" pos:end="253:21">{<block_content pos:start="249:25" pos:end="251:52"> <comment type="block" pos:start="247:30" pos:end="247:101">/* if ((s-&gt;mv_type == MV_TYPE_FIELD) || (s-&gt;mv_type == MV_TYPE_16X8)) */</comment>

                        <expr_stmt pos:start="249:25" pos:end="249:52"><expr pos:start="249:25" pos:end="249:51"><name pos:start="249:25" pos:end="249:32">motion_x</name> <operator pos:start="249:34" pos:end="249:34">=</operator> <name pos:start="249:36" pos:end="249:51"><name pos:start="249:36" pos:end="249:36">s</name><operator pos:start="249:37" pos:end="249:38">-&gt;</operator><name pos:start="249:39" pos:end="249:40">mv</name><index pos:start="249:41" pos:end="249:45">[<expr pos:start="249:42" pos:end="249:44"><name pos:start="249:42" pos:end="249:44">dir</name></expr>]</index><index pos:start="249:46" pos:end="249:48">[<expr pos:start="249:47" pos:end="249:47"><name pos:start="249:47" pos:end="249:47">i</name></expr>]</index><index pos:start="249:49" pos:end="249:51">[<expr pos:start="249:50" pos:end="249:50"><literal type="number" pos:start="249:50" pos:end="249:50">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="251:25" pos:end="251:52"><expr pos:start="251:25" pos:end="251:51"><name pos:start="251:25" pos:end="251:32">motion_y</name> <operator pos:start="251:34" pos:end="251:34">=</operator> <name pos:start="251:36" pos:end="251:51"><name pos:start="251:36" pos:end="251:36">s</name><operator pos:start="251:37" pos:end="251:38">-&gt;</operator><name pos:start="251:39" pos:end="251:40">mv</name><index pos:start="251:41" pos:end="251:45">[<expr pos:start="251:42" pos:end="251:44"><name pos:start="251:42" pos:end="251:44">dir</name></expr>]</index><index pos:start="251:46" pos:end="251:48">[<expr pos:start="251:47" pos:end="251:47"><name pos:start="251:47" pos:end="251:47">i</name></expr>]</index><index pos:start="251:49" pos:end="251:51">[<expr pos:start="251:50" pos:end="251:50"><literal type="number" pos:start="251:50" pos:end="251:50">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>



                    <expr_stmt pos:start="257:21" pos:end="257:77"><expr pos:start="257:21" pos:end="257:76"><name pos:start="257:21" pos:end="257:61"><name pos:start="257:21" pos:end="257:21">s</name><operator pos:start="257:22" pos:end="257:23">-&gt;</operator><name pos:start="257:24" pos:end="257:38">current_picture</name><operator pos:start="257:39" pos:end="257:39">.</operator><name pos:start="257:40" pos:end="257:49">motion_val</name><index pos:start="257:50" pos:end="257:54">[<expr pos:start="257:51" pos:end="257:53"><name pos:start="257:51" pos:end="257:53">dir</name></expr>]</index><index pos:start="257:55" pos:end="257:58">[<expr pos:start="257:56" pos:end="257:57"><name pos:start="257:56" pos:end="257:57">xy</name></expr>]</index><index pos:start="257:59" pos:end="257:61">[<expr pos:start="257:60" pos:end="257:60"><literal type="number" pos:start="257:60" pos:end="257:60">0</literal></expr>]</index></name>     <operator pos:start="257:67" pos:end="257:67">=</operator> <name pos:start="257:69" pos:end="257:76">motion_x</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="259:21" pos:end="259:77"><expr pos:start="259:21" pos:end="259:76"><name pos:start="259:21" pos:end="259:61"><name pos:start="259:21" pos:end="259:21">s</name><operator pos:start="259:22" pos:end="259:23">-&gt;</operator><name pos:start="259:24" pos:end="259:38">current_picture</name><operator pos:start="259:39" pos:end="259:39">.</operator><name pos:start="259:40" pos:end="259:49">motion_val</name><index pos:start="259:50" pos:end="259:54">[<expr pos:start="259:51" pos:end="259:53"><name pos:start="259:51" pos:end="259:53">dir</name></expr>]</index><index pos:start="259:55" pos:end="259:58">[<expr pos:start="259:56" pos:end="259:57"><name pos:start="259:56" pos:end="259:57">xy</name></expr>]</index><index pos:start="259:59" pos:end="259:61">[<expr pos:start="259:60" pos:end="259:60"><literal type="number" pos:start="259:60" pos:end="259:60">1</literal></expr>]</index></name>     <operator pos:start="259:67" pos:end="259:67">=</operator> <name pos:start="259:69" pos:end="259:76">motion_y</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="261:21" pos:end="261:77"><expr pos:start="261:21" pos:end="261:76"><name pos:start="261:21" pos:end="261:65"><name pos:start="261:21" pos:end="261:21">s</name><operator pos:start="261:22" pos:end="261:23">-&gt;</operator><name pos:start="261:24" pos:end="261:38">current_picture</name><operator pos:start="261:39" pos:end="261:39">.</operator><name pos:start="261:40" pos:end="261:49">motion_val</name><index pos:start="261:50" pos:end="261:54">[<expr pos:start="261:51" pos:end="261:53"><name pos:start="261:51" pos:end="261:53">dir</name></expr>]</index><index pos:start="261:55" pos:end="261:62">[<expr pos:start="261:56" pos:end="261:61"><name pos:start="261:56" pos:end="261:57">xy</name> <operator pos:start="261:59" pos:end="261:59">+</operator> <literal type="number" pos:start="261:61" pos:end="261:61">1</literal></expr>]</index><index pos:start="261:63" pos:end="261:65">[<expr pos:start="261:64" pos:end="261:64"><literal type="number" pos:start="261:64" pos:end="261:64">0</literal></expr>]</index></name> <operator pos:start="261:67" pos:end="261:67">=</operator> <name pos:start="261:69" pos:end="261:76">motion_x</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="263:21" pos:end="263:77"><expr pos:start="263:21" pos:end="263:76"><name pos:start="263:21" pos:end="263:65"><name pos:start="263:21" pos:end="263:21">s</name><operator pos:start="263:22" pos:end="263:23">-&gt;</operator><name pos:start="263:24" pos:end="263:38">current_picture</name><operator pos:start="263:39" pos:end="263:39">.</operator><name pos:start="263:40" pos:end="263:49">motion_val</name><index pos:start="263:50" pos:end="263:54">[<expr pos:start="263:51" pos:end="263:53"><name pos:start="263:51" pos:end="263:53">dir</name></expr>]</index><index pos:start="263:55" pos:end="263:62">[<expr pos:start="263:56" pos:end="263:61"><name pos:start="263:56" pos:end="263:57">xy</name> <operator pos:start="263:59" pos:end="263:59">+</operator> <literal type="number" pos:start="263:61" pos:end="263:61">1</literal></expr>]</index><index pos:start="263:63" pos:end="263:65">[<expr pos:start="263:64" pos:end="263:64"><literal type="number" pos:start="263:64" pos:end="263:64">1</literal></expr>]</index></name> <operator pos:start="263:67" pos:end="263:67">=</operator> <name pos:start="263:69" pos:end="263:76">motion_y</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="265:21" pos:end="267:92"><expr pos:start="265:21" pos:end="267:91"><name pos:start="265:21" pos:end="265:61"><name pos:start="265:21" pos:end="265:21">s</name><operator pos:start="265:22" pos:end="265:23">-&gt;</operator><name pos:start="265:24" pos:end="265:38">current_picture</name><operator pos:start="265:39" pos:end="265:39">.</operator><name pos:start="265:40" pos:end="265:48">ref_index</name> <index pos:start="265:50" pos:end="265:54">[<expr pos:start="265:51" pos:end="265:53"><name pos:start="265:51" pos:end="265:53">dir</name></expr>]</index><index pos:start="265:55" pos:end="265:61">[<expr pos:start="265:56" pos:end="265:60"><name pos:start="265:56" pos:end="265:60">b8_xy</name></expr>]</index></name>     <operator pos:start="265:67" pos:end="265:67">=</operator>

                    <name pos:start="267:21" pos:end="267:65"><name pos:start="267:21" pos:end="267:21">s</name><operator pos:start="267:22" pos:end="267:23">-&gt;</operator><name pos:start="267:24" pos:end="267:38">current_picture</name><operator pos:start="267:39" pos:end="267:39">.</operator><name pos:start="267:40" pos:end="267:48">ref_index</name> <index pos:start="267:50" pos:end="267:54">[<expr pos:start="267:51" pos:end="267:53"><name pos:start="267:51" pos:end="267:53">dir</name></expr>]</index><index pos:start="267:55" pos:end="267:65">[<expr pos:start="267:56" pos:end="267:64"><name pos:start="267:56" pos:end="267:60">b8_xy</name> <operator pos:start="267:62" pos:end="267:62">+</operator> <literal type="number" pos:start="267:64" pos:end="267:64">1</literal></expr>]</index></name> <operator pos:start="267:67" pos:end="267:67">=</operator> <name pos:start="267:69" pos:end="267:91"><name pos:start="267:69" pos:end="267:69">s</name><operator pos:start="267:70" pos:end="267:71">-&gt;</operator><name pos:start="267:72" pos:end="267:83">field_select</name><index pos:start="267:84" pos:end="267:88">[<expr pos:start="267:85" pos:end="267:87"><name pos:start="267:85" pos:end="267:87">dir</name></expr>]</index><index pos:start="267:89" pos:end="267:91">[<expr pos:start="267:90" pos:end="267:90"><name pos:start="267:90" pos:end="267:90">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="269:21" pos:end="271:57"><expr pos:start="269:21" pos:end="271:56"><call pos:start="269:21" pos:end="271:56"><name pos:start="269:21" pos:end="269:26">assert</name><argument_list pos:start="269:27" pos:end="271:56">(<argument pos:start="269:28" pos:end="271:55"><expr pos:start="269:28" pos:end="271:55"><name pos:start="269:28" pos:end="269:50"><name pos:start="269:28" pos:end="269:28">s</name><operator pos:start="269:29" pos:end="269:30">-&gt;</operator><name pos:start="269:31" pos:end="269:42">field_select</name><index pos:start="269:43" pos:end="269:47">[<expr pos:start="269:44" pos:end="269:46"><name pos:start="269:44" pos:end="269:46">dir</name></expr>]</index><index pos:start="269:48" pos:end="269:50">[<expr pos:start="269:49" pos:end="269:49"><name pos:start="269:49" pos:end="269:49">i</name></expr>]</index></name> <operator pos:start="269:52" pos:end="269:53">==</operator> <literal type="number" pos:start="269:55" pos:end="269:55">0</literal> <operator pos:start="269:57" pos:end="269:58">||</operator>

                           <name pos:start="271:28" pos:end="271:50"><name pos:start="271:28" pos:end="271:28">s</name><operator pos:start="271:29" pos:end="271:30">-&gt;</operator><name pos:start="271:31" pos:end="271:42">field_select</name><index pos:start="271:43" pos:end="271:47">[<expr pos:start="271:44" pos:end="271:46"><name pos:start="271:44" pos:end="271:46">dir</name></expr>]</index><index pos:start="271:48" pos:end="271:50">[<expr pos:start="271:49" pos:end="271:49"><name pos:start="271:49" pos:end="271:49">i</name></expr>]</index></name> <operator pos:start="271:52" pos:end="271:53">==</operator> <literal type="number" pos:start="271:55" pos:end="271:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="275:17" pos:end="275:30"><expr pos:start="275:17" pos:end="275:29"><name pos:start="275:17" pos:end="275:18">xy</name>    <operator pos:start="275:23" pos:end="275:24">+=</operator> <name pos:start="275:26" pos:end="275:29">wrap</name></expr>;</expr_stmt>

                <expr_stmt pos:start="277:17" pos:end="277:27"><expr pos:start="277:17" pos:end="277:26"><name pos:start="277:17" pos:end="277:21">b8_xy</name> <operator pos:start="277:23" pos:end="277:24">+=</operator> <literal type="number" pos:start="277:26" pos:end="277:26">2</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="285:9" pos:end="285:25"><expr pos:start="285:9" pos:end="285:24"><name pos:start="285:9" pos:end="285:18"><name pos:start="285:9" pos:end="285:9">s</name><operator pos:start="285:10" pos:end="285:11">-&gt;</operator><name pos:start="285:12" pos:end="285:15">dest</name><index pos:start="285:16" pos:end="285:18">[<expr pos:start="285:17" pos:end="285:17"><literal type="number" pos:start="285:17" pos:end="285:17">0</literal></expr>]</index></name> <operator pos:start="285:20" pos:end="285:21">+=</operator> <literal type="number" pos:start="285:23" pos:end="285:24">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:46"><expr pos:start="287:9" pos:end="287:45"><name pos:start="287:9" pos:end="287:18"><name pos:start="287:9" pos:end="287:9">s</name><operator pos:start="287:10" pos:end="287:11">-&gt;</operator><name pos:start="287:12" pos:end="287:15">dest</name><index pos:start="287:16" pos:end="287:18">[<expr pos:start="287:17" pos:end="287:17"><literal type="number" pos:start="287:17" pos:end="287:17">1</literal></expr>]</index></name> <operator pos:start="287:20" pos:end="287:21">+=</operator> <literal type="number" pos:start="287:23" pos:end="287:24">16</literal> <operator pos:start="287:26" pos:end="287:27">&gt;&gt;</operator> <name pos:start="287:29" pos:end="287:45"><name pos:start="287:29" pos:end="287:29">s</name><operator pos:start="287:30" pos:end="287:31">-&gt;</operator><name pos:start="287:32" pos:end="287:45">chroma_x_shift</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:46"><expr pos:start="289:9" pos:end="289:45"><name pos:start="289:9" pos:end="289:18"><name pos:start="289:9" pos:end="289:9">s</name><operator pos:start="289:10" pos:end="289:11">-&gt;</operator><name pos:start="289:12" pos:end="289:15">dest</name><index pos:start="289:16" pos:end="289:18">[<expr pos:start="289:17" pos:end="289:17"><literal type="number" pos:start="289:17" pos:end="289:17">2</literal></expr>]</index></name> <operator pos:start="289:20" pos:end="289:21">+=</operator> <literal type="number" pos:start="289:23" pos:end="289:24">16</literal> <operator pos:start="289:26" pos:end="289:27">&gt;&gt;</operator> <name pos:start="289:29" pos:end="289:45"><name pos:start="289:29" pos:end="289:29">s</name><operator pos:start="289:30" pos:end="289:31">-&gt;</operator><name pos:start="289:32" pos:end="289:45">chroma_x_shift</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="293:9" pos:end="293:38"><expr pos:start="293:9" pos:end="293:37"><call pos:start="293:9" pos:end="293:37"><name pos:start="293:9" pos:end="293:24">ff_mpv_decode_mb</name><argument_list pos:start="293:25" pos:end="293:37">(<argument pos:start="293:26" pos:end="293:26"><expr pos:start="293:26" pos:end="293:26"><name pos:start="293:26" pos:end="293:26">s</name></expr></argument>, <argument pos:start="293:29" pos:end="293:36"><expr pos:start="293:29" pos:end="293:36"><name pos:start="293:29" pos:end="293:36"><name pos:start="293:29" pos:end="293:29">s</name><operator pos:start="293:30" pos:end="293:31">-&gt;</operator><name pos:start="293:32" pos:end="293:36">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="297:9" pos:end="357:9"><if pos:start="297:9" pos:end="357:9">if <condition pos:start="297:12" pos:end="297:37">(<expr pos:start="297:13" pos:end="297:36"><operator pos:start="297:13" pos:end="297:14">++</operator><name pos:start="297:15" pos:end="297:21"><name pos:start="297:15" pos:end="297:15">s</name><operator pos:start="297:16" pos:end="297:17">-&gt;</operator><name pos:start="297:18" pos:end="297:21">mb_x</name></name> <operator pos:start="297:23" pos:end="297:24">&gt;=</operator> <name pos:start="297:26" pos:end="297:36"><name pos:start="297:26" pos:end="297:26">s</name><operator pos:start="297:27" pos:end="297:28">-&gt;</operator><name pos:start="297:29" pos:end="297:36">mb_width</name></name></expr>)</condition> <block pos:start="297:39" pos:end="357:9">{<block_content pos:start="299:13" pos:end="355:35">

            <decl_stmt pos:start="299:13" pos:end="299:35"><decl pos:start="299:13" pos:end="299:34"><type pos:start="299:13" pos:end="299:21"><specifier pos:start="299:13" pos:end="299:17">const</specifier> <name pos:start="299:19" pos:end="299:21">int</name></type> <name pos:start="299:23" pos:end="299:29">mb_size</name> <init pos:start="299:31" pos:end="299:34">= <expr pos:start="299:33" pos:end="299:34"><literal type="number" pos:start="299:33" pos:end="299:34">16</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="303:13" pos:end="303:82"><expr pos:start="303:13" pos:end="303:81"><call pos:start="303:13" pos:end="303:81"><name pos:start="303:13" pos:end="303:35">ff_mpeg_draw_horiz_band</name><argument_list pos:start="303:36" pos:end="303:81">(<argument pos:start="303:37" pos:end="303:37"><expr pos:start="303:37" pos:end="303:37"><name pos:start="303:37" pos:end="303:37">s</name></expr></argument>, <argument pos:start="303:40" pos:end="303:71"><expr pos:start="303:40" pos:end="303:71"><name pos:start="303:40" pos:end="303:46">mb_size</name> <operator pos:start="303:48" pos:end="303:48">*</operator> <operator pos:start="303:50" pos:end="303:50">(</operator><name pos:start="303:51" pos:end="303:57"><name pos:start="303:51" pos:end="303:51">s</name><operator pos:start="303:52" pos:end="303:53">-&gt;</operator><name pos:start="303:54" pos:end="303:57">mb_y</name></name> <operator pos:start="303:59" pos:end="303:60">&gt;&gt;</operator> <name pos:start="303:62" pos:end="303:70">field_pic</name><operator pos:start="303:71" pos:end="303:71">)</operator></expr></argument>, <argument pos:start="303:74" pos:end="303:80"><expr pos:start="303:74" pos:end="303:80"><name pos:start="303:74" pos:end="303:80">mb_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="305:13" pos:end="305:45"><expr pos:start="305:13" pos:end="305:44"><call pos:start="305:13" pos:end="305:44"><name pos:start="305:13" pos:end="305:41">ff_mpv_report_decode_progress</name><argument_list pos:start="305:42" pos:end="305:44">(<argument pos:start="305:43" pos:end="305:43"><expr pos:start="305:43" pos:end="305:43"><name pos:start="305:43" pos:end="305:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="309:13" pos:end="309:25"><expr pos:start="309:13" pos:end="309:24"><name pos:start="309:13" pos:end="309:19"><name pos:start="309:13" pos:end="309:13">s</name><operator pos:start="309:14" pos:end="309:15">-&gt;</operator><name pos:start="309:16" pos:end="309:19">mb_x</name></name>  <operator pos:start="309:22" pos:end="309:22">=</operator> <literal type="number" pos:start="309:24" pos:end="309:24">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="311:13" pos:end="311:38"><expr pos:start="311:13" pos:end="311:37"><name pos:start="311:13" pos:end="311:19"><name pos:start="311:13" pos:end="311:13">s</name><operator pos:start="311:14" pos:end="311:15">-&gt;</operator><name pos:start="311:16" pos:end="311:19">mb_y</name></name> <operator pos:start="311:21" pos:end="311:22">+=</operator> <literal type="number" pos:start="311:24" pos:end="311:24">1</literal> <operator pos:start="311:26" pos:end="311:27">&lt;&lt;</operator> <name pos:start="311:29" pos:end="311:37">field_pic</name></expr>;</expr_stmt>



            <if_stmt pos:start="315:13" pos:end="351:13"><if pos:start="315:13" pos:end="351:13">if <condition pos:start="315:16" pos:end="315:40">(<expr pos:start="315:17" pos:end="315:39"><name pos:start="315:17" pos:end="315:23"><name pos:start="315:17" pos:end="315:17">s</name><operator pos:start="315:18" pos:end="315:19">-&gt;</operator><name pos:start="315:20" pos:end="315:23">mb_y</name></name> <operator pos:start="315:25" pos:end="315:26">&gt;=</operator> <name pos:start="315:28" pos:end="315:39"><name pos:start="315:28" pos:end="315:28">s</name><operator pos:start="315:29" pos:end="315:30">-&gt;</operator><name pos:start="315:31" pos:end="315:39">mb_height</name></name></expr>)</condition> <block pos:start="315:42" pos:end="351:13">{<block_content pos:start="317:17" pos:end="349:29">

                <decl_stmt pos:start="317:17" pos:end="317:51"><decl pos:start="317:17" pos:end="317:50"><type pos:start="317:17" pos:end="317:19"><name pos:start="317:17" pos:end="317:19">int</name></type> <name pos:start="317:21" pos:end="317:24">left</name>   <init pos:start="317:28" pos:end="317:50">= <expr pos:start="317:30" pos:end="317:50"><call pos:start="317:30" pos:end="317:50"><name pos:start="317:30" pos:end="317:42">get_bits_left</name><argument_list pos:start="317:43" pos:end="317:50">(<argument pos:start="317:44" pos:end="317:49"><expr pos:start="317:44" pos:end="317:49"><operator pos:start="317:44" pos:end="317:44">&amp;</operator><name pos:start="317:45" pos:end="317:49"><name pos:start="317:45" pos:end="317:45">s</name><operator pos:start="317:46" pos:end="317:47">-&gt;</operator><name pos:start="317:48" pos:end="317:49">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="319:17" pos:end="331:63"><decl pos:start="319:17" pos:end="329:54"><type pos:start="319:17" pos:end="319:19"><name pos:start="319:17" pos:end="319:19">int</name></type> <name pos:start="319:21" pos:end="319:26">is_d10</name> <init pos:start="319:28" pos:end="329:54">= <expr pos:start="319:30" pos:end="329:54"><name pos:start="319:30" pos:end="319:45"><name pos:start="319:30" pos:end="319:30">s</name><operator pos:start="319:31" pos:end="319:32">-&gt;</operator><name pos:start="319:33" pos:end="319:45">chroma_format</name></name> <operator pos:start="319:47" pos:end="319:48">==</operator> <literal type="number" pos:start="319:50" pos:end="319:50">2</literal> <operator pos:start="319:52" pos:end="319:53">&amp;&amp;</operator>

                             <name pos:start="321:30" pos:end="321:41"><name pos:start="321:30" pos:end="321:30">s</name><operator pos:start="321:31" pos:end="321:32">-&gt;</operator><name pos:start="321:33" pos:end="321:41">pict_type</name></name> <operator pos:start="321:43" pos:end="321:44">==</operator> <name pos:start="321:46" pos:end="321:62">AV_PICTURE_TYPE_I</name> <operator pos:start="321:64" pos:end="321:65">&amp;&amp;</operator>

                             <name pos:start="323:30" pos:end="323:43"><name pos:start="323:30" pos:end="323:34">avctx</name><operator pos:start="323:35" pos:end="323:36">-&gt;</operator><name pos:start="323:37" pos:end="323:43">profile</name></name> <operator pos:start="323:45" pos:end="323:46">==</operator> <literal type="number" pos:start="323:48" pos:end="323:48">0</literal> <operator pos:start="323:50" pos:end="323:51">&amp;&amp;</operator> <name pos:start="323:53" pos:end="323:64"><name pos:start="323:53" pos:end="323:57">avctx</name><operator pos:start="323:58" pos:end="323:59">-&gt;</operator><name pos:start="323:60" pos:end="323:64">level</name></name> <operator pos:start="323:66" pos:end="323:67">==</operator> <literal type="number" pos:start="323:69" pos:end="323:69">5</literal> <operator pos:start="323:71" pos:end="323:72">&amp;&amp;</operator>

                             <name pos:start="325:30" pos:end="325:50"><name pos:start="325:30" pos:end="325:30">s</name><operator pos:start="325:31" pos:end="325:32">-&gt;</operator><name pos:start="325:33" pos:end="325:50">intra_dc_precision</name></name> <operator pos:start="325:52" pos:end="325:53">==</operator> <literal type="number" pos:start="325:55" pos:end="325:55">2</literal> <operator pos:start="325:57" pos:end="325:58">&amp;&amp;</operator>

                             <name pos:start="327:30" pos:end="327:44"><name pos:start="327:30" pos:end="327:30">s</name><operator pos:start="327:31" pos:end="327:32">-&gt;</operator><name pos:start="327:33" pos:end="327:44">q_scale_type</name></name> <operator pos:start="327:46" pos:end="327:47">==</operator> <literal type="number" pos:start="327:49" pos:end="327:49">1</literal> <operator pos:start="327:51" pos:end="327:52">&amp;&amp;</operator> <name pos:start="327:54" pos:end="327:70"><name pos:start="327:54" pos:end="327:54">s</name><operator pos:start="327:55" pos:end="327:56">-&gt;</operator><name pos:start="327:57" pos:end="327:70">alternate_scan</name></name> <operator pos:start="327:72" pos:end="327:73">==</operator> <literal type="number" pos:start="327:75" pos:end="327:75">0</literal> <operator pos:start="327:77" pos:end="327:78">&amp;&amp;</operator>

                             <name pos:start="329:30" pos:end="329:49"><name pos:start="329:30" pos:end="329:30">s</name><operator pos:start="329:31" pos:end="329:32">-&gt;</operator><name pos:start="329:33" pos:end="329:49">progressive_frame</name></name> <operator pos:start="329:51" pos:end="329:52">==</operator> <literal type="number" pos:start="329:54" pos:end="329:54">0</literal></expr></init></decl>

                             <comment type="block" pos:start="331:30" pos:end="331:62">/* vbv_delay == 0xBBB || 0xE10 */</comment>;</decl_stmt>



                <if_stmt pos:start="335:17" pos:end="349:29"><if pos:start="335:17" pos:end="347:17">if <condition pos:start="335:20" pos:end="339:74">(<expr pos:start="335:21" pos:end="339:73"><name pos:start="335:21" pos:end="335:24">left</name> <operator pos:start="335:26" pos:end="335:26">&lt;</operator> <literal type="number" pos:start="335:28" pos:end="335:28">0</literal> <operator pos:start="335:30" pos:end="335:31">||</operator>

                    <operator pos:start="337:21" pos:end="337:21">(</operator><name pos:start="337:22" pos:end="337:25">left</name> <operator pos:start="337:27" pos:end="337:28">&amp;&amp;</operator> <call pos:start="337:30" pos:end="337:63"><name pos:start="337:30" pos:end="337:38">show_bits</name><argument_list pos:start="337:39" pos:end="337:63">(<argument pos:start="337:40" pos:end="337:45"><expr pos:start="337:40" pos:end="337:45"><operator pos:start="337:40" pos:end="337:40">&amp;</operator><name pos:start="337:41" pos:end="337:45"><name pos:start="337:41" pos:end="337:41">s</name><operator pos:start="337:42" pos:end="337:43">-&gt;</operator><name pos:start="337:44" pos:end="337:45">gb</name></name></expr></argument>, <argument pos:start="337:48" pos:end="337:62"><expr pos:start="337:48" pos:end="337:62"><call pos:start="337:48" pos:end="337:62"><name pos:start="337:48" pos:end="337:52">FFMIN</name><argument_list pos:start="337:53" pos:end="337:62">(<argument pos:start="337:54" pos:end="337:57"><expr pos:start="337:54" pos:end="337:57"><name pos:start="337:54" pos:end="337:57">left</name></expr></argument>, <argument pos:start="337:60" pos:end="337:61"><expr pos:start="337:60" pos:end="337:61"><literal type="number" pos:start="337:60" pos:end="337:61">23</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="337:65" pos:end="337:66">&amp;&amp;</operator> <operator pos:start="337:68" pos:end="337:68">!</operator><name pos:start="337:69" pos:end="337:74">is_d10</name><operator pos:start="337:75" pos:end="337:75">)</operator> <operator pos:start="337:77" pos:end="337:78">||</operator>

                    <operator pos:start="339:21" pos:end="339:21">(</operator><operator pos:start="339:22" pos:end="339:22">(</operator><name pos:start="339:23" pos:end="339:44"><name pos:start="339:23" pos:end="339:27">avctx</name><operator pos:start="339:28" pos:end="339:29">-&gt;</operator><name pos:start="339:30" pos:end="339:44">err_recognition</name></name> <operator pos:start="339:46" pos:end="339:46">&amp;</operator> <name pos:start="339:48" pos:end="339:59">AV_EF_BUFFER</name><operator pos:start="339:60" pos:end="339:60">)</operator> <operator pos:start="339:62" pos:end="339:63">&amp;&amp;</operator> <name pos:start="339:65" pos:end="339:68">left</name> <operator pos:start="339:70" pos:end="339:70">&gt;</operator> <literal type="number" pos:start="339:72" pos:end="339:72">8</literal><operator pos:start="339:73" pos:end="339:73">)</operator></expr>)</condition> <block pos:start="339:76" pos:end="347:17">{<block_content pos:start="341:21" pos:end="345:47">

                    <expr_stmt pos:start="341:21" pos:end="343:69"><expr pos:start="341:21" pos:end="343:68"><call pos:start="341:21" pos:end="343:68"><name pos:start="341:21" pos:end="341:26">av_log</name><argument_list pos:start="341:27" pos:end="343:68">(<argument pos:start="341:28" pos:end="341:32"><expr pos:start="341:28" pos:end="341:32"><name pos:start="341:28" pos:end="341:32">avctx</name></expr></argument>, <argument pos:start="341:35" pos:end="341:46"><expr pos:start="341:35" pos:end="341:46"><name pos:start="341:35" pos:end="341:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="341:49" pos:end="341:76"><expr pos:start="341:49" pos:end="341:76"><literal type="string" pos:start="341:49" pos:end="341:76">"end mismatch left=%d %0X\n"</literal></expr></argument>,

                           <argument pos:start="343:28" pos:end="343:31"><expr pos:start="343:28" pos:end="343:31"><name pos:start="343:28" pos:end="343:31">left</name></expr></argument>, <argument pos:start="343:34" pos:end="343:67"><expr pos:start="343:34" pos:end="343:67"><call pos:start="343:34" pos:end="343:67"><name pos:start="343:34" pos:end="343:42">show_bits</name><argument_list pos:start="343:43" pos:end="343:67">(<argument pos:start="343:44" pos:end="343:49"><expr pos:start="343:44" pos:end="343:49"><operator pos:start="343:44" pos:end="343:44">&amp;</operator><name pos:start="343:45" pos:end="343:49"><name pos:start="343:45" pos:end="343:45">s</name><operator pos:start="343:46" pos:end="343:47">-&gt;</operator><name pos:start="343:48" pos:end="343:49">gb</name></name></expr></argument>, <argument pos:start="343:52" pos:end="343:66"><expr pos:start="343:52" pos:end="343:66"><call pos:start="343:52" pos:end="343:66"><name pos:start="343:52" pos:end="343:56">FFMIN</name><argument_list pos:start="343:57" pos:end="343:66">(<argument pos:start="343:58" pos:end="343:61"><expr pos:start="343:58" pos:end="343:61"><name pos:start="343:58" pos:end="343:61">left</name></expr></argument>, <argument pos:start="343:64" pos:end="343:65"><expr pos:start="343:64" pos:end="343:65"><literal type="number" pos:start="343:64" pos:end="343:65">23</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="345:21" pos:end="345:47">return <expr pos:start="345:28" pos:end="345:46"><name pos:start="345:28" pos:end="345:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if> <else pos:start="347:19" pos:end="349:29">else<block type="pseudo" pos:start="349:21" pos:end="349:29"><block_content pos:start="349:21" pos:end="349:29">

                    <goto pos:start="349:21" pos:end="349:29">goto <name pos:start="349:26" pos:end="349:28">eos</name>;</goto></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="355:13" pos:end="355:35"><expr pos:start="355:13" pos:end="355:34"><call pos:start="355:13" pos:end="355:34"><name pos:start="355:13" pos:end="355:31">ff_init_block_index</name><argument_list pos:start="355:32" pos:end="355:34">(<argument pos:start="355:33" pos:end="355:33"><expr pos:start="355:33" pos:end="355:33"><name pos:start="355:33" pos:end="355:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="361:9" pos:end="361:30">/* skip mb handling */</comment>

        <if_stmt pos:start="363:9" pos:end="477:9"><if pos:start="363:9" pos:end="477:9">if <condition pos:start="363:12" pos:end="363:33">(<expr pos:start="363:13" pos:end="363:32"><name pos:start="363:13" pos:end="363:26"><name pos:start="363:13" pos:end="363:13">s</name><operator pos:start="363:14" pos:end="363:15">-&gt;</operator><name pos:start="363:16" pos:end="363:26">mb_skip_run</name></name> <operator pos:start="363:28" pos:end="363:29">==</operator> <operator pos:start="363:31" pos:end="363:31">-</operator><literal type="number" pos:start="363:32" pos:end="363:32">1</literal></expr>)</condition> <block pos:start="363:35" pos:end="477:9">{<block_content pos:start="367:13" pos:end="475:13">

            <comment type="block" pos:start="365:13" pos:end="365:38">/* read increment again */</comment>

            <expr_stmt pos:start="367:13" pos:end="367:31"><expr pos:start="367:13" pos:end="367:30"><name pos:start="367:13" pos:end="367:26"><name pos:start="367:13" pos:end="367:13">s</name><operator pos:start="367:14" pos:end="367:15">-&gt;</operator><name pos:start="367:16" pos:end="367:26">mb_skip_run</name></name> <operator pos:start="367:28" pos:end="367:28">=</operator> <literal type="number" pos:start="367:30" pos:end="367:30">0</literal></expr>;</expr_stmt>

            <for pos:start="369:13" pos:end="413:13">for <control pos:start="369:17" pos:end="369:20">(<init pos:start="369:18" pos:end="369:18">;</init><condition pos:start="369:19" pos:end="369:19">;</condition><incr/>)</control> <block pos:start="369:22" pos:end="413:13">{<block_content pos:start="371:17" pos:end="411:17">

                <decl_stmt pos:start="371:17" pos:end="373:56"><decl pos:start="371:17" pos:end="373:55"><type pos:start="371:17" pos:end="371:19"><name pos:start="371:17" pos:end="371:19">int</name></type> <name pos:start="371:21" pos:end="371:24">code</name> <init pos:start="371:26" pos:end="373:55">= <expr pos:start="371:28" pos:end="373:55"><call pos:start="371:28" pos:end="373:55"><name pos:start="371:28" pos:end="371:35">get_vlc2</name><argument_list pos:start="371:36" pos:end="373:55">(<argument pos:start="371:37" pos:end="371:42"><expr pos:start="371:37" pos:end="371:42"><operator pos:start="371:37" pos:end="371:37">&amp;</operator><name pos:start="371:38" pos:end="371:42"><name pos:start="371:38" pos:end="371:38">s</name><operator pos:start="371:39" pos:end="371:40">-&gt;</operator><name pos:start="371:41" pos:end="371:42">gb</name></name></expr></argument>, <argument pos:start="371:45" pos:end="371:63"><expr pos:start="371:45" pos:end="371:63"><name pos:start="371:45" pos:end="371:63"><name pos:start="371:45" pos:end="371:57">ff_mbincr_vlc</name><operator pos:start="371:58" pos:end="371:58">.</operator><name pos:start="371:59" pos:end="371:63">table</name></name></expr></argument>,

                                    <argument pos:start="373:37" pos:end="373:51"><expr pos:start="373:37" pos:end="373:51"><name pos:start="373:37" pos:end="373:51">MBINCR_VLC_BITS</name></expr></argument>, <argument pos:start="373:54" pos:end="373:54"><expr pos:start="373:54" pos:end="373:54"><literal type="number" pos:start="373:54" pos:end="373:54">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="375:17" pos:end="381:17"><if pos:start="375:17" pos:end="381:17">if <condition pos:start="375:20" pos:end="375:29">(<expr pos:start="375:21" pos:end="375:28"><name pos:start="375:21" pos:end="375:24">code</name> <operator pos:start="375:26" pos:end="375:26">&lt;</operator> <literal type="number" pos:start="375:28" pos:end="375:28">0</literal></expr>)</condition> <block pos:start="375:31" pos:end="381:17">{<block_content pos:start="377:21" pos:end="379:47">

                    <expr_stmt pos:start="377:21" pos:end="377:72"><expr pos:start="377:21" pos:end="377:71"><call pos:start="377:21" pos:end="377:71"><name pos:start="377:21" pos:end="377:26">av_log</name><argument_list pos:start="377:27" pos:end="377:71">(<argument pos:start="377:28" pos:end="377:35"><expr pos:start="377:28" pos:end="377:35"><name pos:start="377:28" pos:end="377:35"><name pos:start="377:28" pos:end="377:28">s</name><operator pos:start="377:29" pos:end="377:30">-&gt;</operator><name pos:start="377:31" pos:end="377:35">avctx</name></name></expr></argument>, <argument pos:start="377:38" pos:end="377:49"><expr pos:start="377:38" pos:end="377:49"><name pos:start="377:38" pos:end="377:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="377:52" pos:end="377:70"><expr pos:start="377:52" pos:end="377:70"><literal type="string" pos:start="377:52" pos:end="377:70">"mb incr damaged\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="379:21" pos:end="379:47">return <expr pos:start="379:28" pos:end="379:46"><name pos:start="379:28" pos:end="379:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="383:17" pos:end="411:17"><if pos:start="383:17" pos:end="405:17">if <condition pos:start="383:20" pos:end="383:31">(<expr pos:start="383:21" pos:end="383:30"><name pos:start="383:21" pos:end="383:24">code</name> <operator pos:start="383:26" pos:end="383:27">&gt;=</operator> <literal type="number" pos:start="383:29" pos:end="383:30">33</literal></expr>)</condition> <block pos:start="383:33" pos:end="405:17">{<block_content pos:start="385:21" pos:end="401:21">

                    <if_stmt pos:start="385:21" pos:end="401:21"><if pos:start="385:21" pos:end="389:21">if <condition pos:start="385:24" pos:end="385:35">(<expr pos:start="385:25" pos:end="385:34"><name pos:start="385:25" pos:end="385:28">code</name> <operator pos:start="385:30" pos:end="385:31">==</operator> <literal type="number" pos:start="385:33" pos:end="385:34">33</literal></expr>)</condition> <block pos:start="385:37" pos:end="389:21">{<block_content pos:start="387:25" pos:end="387:45">

                        <expr_stmt pos:start="387:25" pos:end="387:45"><expr pos:start="387:25" pos:end="387:44"><name pos:start="387:25" pos:end="387:38"><name pos:start="387:25" pos:end="387:25">s</name><operator pos:start="387:26" pos:end="387:27">-&gt;</operator><name pos:start="387:28" pos:end="387:38">mb_skip_run</name></name> <operator pos:start="387:40" pos:end="387:41">+=</operator> <literal type="number" pos:start="387:43" pos:end="387:44">33</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="389:23" pos:end="401:21">else if <condition pos:start="389:31" pos:end="389:42">(<expr pos:start="389:32" pos:end="389:41"><name pos:start="389:32" pos:end="389:35">code</name> <operator pos:start="389:37" pos:end="389:38">==</operator> <literal type="number" pos:start="389:40" pos:end="389:41">35</literal></expr>)</condition> <block pos:start="389:44" pos:end="401:21">{<block_content pos:start="391:25" pos:end="399:33">

                        <if_stmt pos:start="391:25" pos:end="397:25"><if pos:start="391:25" pos:end="397:25">if <condition pos:start="391:28" pos:end="391:78">(<expr pos:start="391:29" pos:end="391:77"><name pos:start="391:29" pos:end="391:42"><name pos:start="391:29" pos:end="391:29">s</name><operator pos:start="391:30" pos:end="391:31">-&gt;</operator><name pos:start="391:32" pos:end="391:42">mb_skip_run</name></name> <operator pos:start="391:44" pos:end="391:45">!=</operator> <literal type="number" pos:start="391:47" pos:end="391:47">0</literal> <operator pos:start="391:49" pos:end="391:50">||</operator> <call pos:start="391:52" pos:end="391:72"><name pos:start="391:52" pos:end="391:60">show_bits</name><argument_list pos:start="391:61" pos:end="391:72">(<argument pos:start="391:62" pos:end="391:67"><expr pos:start="391:62" pos:end="391:67"><operator pos:start="391:62" pos:end="391:62">&amp;</operator><name pos:start="391:63" pos:end="391:67"><name pos:start="391:63" pos:end="391:63">s</name><operator pos:start="391:64" pos:end="391:65">-&gt;</operator><name pos:start="391:66" pos:end="391:67">gb</name></name></expr></argument>, <argument pos:start="391:70" pos:end="391:71"><expr pos:start="391:70" pos:end="391:71"><literal type="number" pos:start="391:70" pos:end="391:71">15</literal></expr></argument>)</argument_list></call> <operator pos:start="391:74" pos:end="391:75">!=</operator> <literal type="number" pos:start="391:77" pos:end="391:77">0</literal></expr>)</condition> <block pos:start="391:80" pos:end="397:25">{<block_content pos:start="393:29" pos:end="395:55">

                            <expr_stmt pos:start="393:29" pos:end="393:79"><expr pos:start="393:29" pos:end="393:78"><call pos:start="393:29" pos:end="393:78"><name pos:start="393:29" pos:end="393:34">av_log</name><argument_list pos:start="393:35" pos:end="393:78">(<argument pos:start="393:36" pos:end="393:43"><expr pos:start="393:36" pos:end="393:43"><name pos:start="393:36" pos:end="393:43"><name pos:start="393:36" pos:end="393:36">s</name><operator pos:start="393:37" pos:end="393:38">-&gt;</operator><name pos:start="393:39" pos:end="393:43">avctx</name></name></expr></argument>, <argument pos:start="393:46" pos:end="393:57"><expr pos:start="393:46" pos:end="393:57"><name pos:start="393:46" pos:end="393:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="393:60" pos:end="393:77"><expr pos:start="393:60" pos:end="393:77"><literal type="string" pos:start="393:60" pos:end="393:77">"slice mismatch\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="395:29" pos:end="395:55">return <expr pos:start="395:36" pos:end="395:54"><name pos:start="395:36" pos:end="395:54">AVERROR_INVALIDDATA</name></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <goto pos:start="399:25" pos:end="399:33">goto <name pos:start="399:30" pos:end="399:32">eos</name>;</goto> <comment type="block" pos:start="399:35" pos:end="399:52">/* end of slice */</comment>

                    </block_content>}</block></if></if_stmt>

                    <comment type="block" pos:start="403:21" pos:end="403:60">/* otherwise, stuffing, nothing to do */</comment>

                </block_content>}</block></if> <else pos:start="405:19" pos:end="411:17">else <block pos:start="405:24" pos:end="411:17">{<block_content pos:start="407:21" pos:end="409:26">

                    <expr_stmt pos:start="407:21" pos:end="407:43"><expr pos:start="407:21" pos:end="407:42"><name pos:start="407:21" pos:end="407:34"><name pos:start="407:21" pos:end="407:21">s</name><operator pos:start="407:22" pos:end="407:23">-&gt;</operator><name pos:start="407:24" pos:end="407:34">mb_skip_run</name></name> <operator pos:start="407:36" pos:end="407:37">+=</operator> <name pos:start="407:39" pos:end="407:42">code</name></expr>;</expr_stmt>

                    <break pos:start="409:21" pos:end="409:26">break;</break>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="415:13" pos:end="475:13"><if pos:start="415:13" pos:end="475:13">if <condition pos:start="415:16" pos:end="415:31">(<expr pos:start="415:17" pos:end="415:30"><name pos:start="415:17" pos:end="415:30"><name pos:start="415:17" pos:end="415:17">s</name><operator pos:start="415:18" pos:end="415:19">-&gt;</operator><name pos:start="415:20" pos:end="415:30">mb_skip_run</name></name></expr>)</condition> <block pos:start="415:33" pos:end="475:13">{<block_content pos:start="417:17" pos:end="473:17">

                <decl_stmt pos:start="417:17" pos:end="417:22"><decl pos:start="417:17" pos:end="417:21"><type pos:start="417:17" pos:end="417:19"><name pos:start="417:17" pos:end="417:19">int</name></type> <name pos:start="417:21" pos:end="417:21">i</name></decl>;</decl_stmt>

                <if_stmt pos:start="419:17" pos:end="427:17"><if pos:start="419:17" pos:end="427:17">if <condition pos:start="419:20" pos:end="419:54">(<expr pos:start="419:21" pos:end="419:53"><name pos:start="419:21" pos:end="419:32"><name pos:start="419:21" pos:end="419:21">s</name><operator pos:start="419:22" pos:end="419:23">-&gt;</operator><name pos:start="419:24" pos:end="419:32">pict_type</name></name> <operator pos:start="419:34" pos:end="419:35">==</operator> <name pos:start="419:37" pos:end="419:53">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="419:56" pos:end="427:17">{<block_content pos:start="421:21" pos:end="425:47">

                    <expr_stmt pos:start="421:21" pos:end="423:81"><expr pos:start="421:21" pos:end="423:80"><call pos:start="421:21" pos:end="423:80"><name pos:start="421:21" pos:end="421:26">av_log</name><argument_list pos:start="421:27" pos:end="423:80">(<argument pos:start="421:28" pos:end="421:35"><expr pos:start="421:28" pos:end="421:35"><name pos:start="421:28" pos:end="421:35"><name pos:start="421:28" pos:end="421:28">s</name><operator pos:start="421:29" pos:end="421:30">-&gt;</operator><name pos:start="421:31" pos:end="421:35">avctx</name></name></expr></argument>, <argument pos:start="421:38" pos:end="421:49"><expr pos:start="421:38" pos:end="421:49"><name pos:start="421:38" pos:end="421:49">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="423:28" pos:end="423:61"><expr pos:start="423:28" pos:end="423:61"><literal type="string" pos:start="423:28" pos:end="423:61">"skipped MB in I-frame at %d %d\n"</literal></expr></argument>, <argument pos:start="423:64" pos:end="423:70"><expr pos:start="423:64" pos:end="423:70"><name pos:start="423:64" pos:end="423:70"><name pos:start="423:64" pos:end="423:64">s</name><operator pos:start="423:65" pos:end="423:66">-&gt;</operator><name pos:start="423:67" pos:end="423:70">mb_x</name></name></expr></argument>, <argument pos:start="423:73" pos:end="423:79"><expr pos:start="423:73" pos:end="423:79"><name pos:start="423:73" pos:end="423:79"><name pos:start="423:73" pos:end="423:73">s</name><operator pos:start="423:74" pos:end="423:75">-&gt;</operator><name pos:start="423:76" pos:end="423:79">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="425:21" pos:end="425:47">return <expr pos:start="425:28" pos:end="425:46"><name pos:start="425:28" pos:end="425:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="431:17" pos:end="431:29">/* skip mb */</comment>

                <expr_stmt pos:start="433:17" pos:end="433:32"><expr pos:start="433:17" pos:end="433:31"><name pos:start="433:17" pos:end="433:27"><name pos:start="433:17" pos:end="433:17">s</name><operator pos:start="433:18" pos:end="433:19">-&gt;</operator><name pos:start="433:20" pos:end="433:27">mb_intra</name></name> <operator pos:start="433:29" pos:end="433:29">=</operator> <literal type="number" pos:start="433:31" pos:end="433:31">0</literal></expr>;</expr_stmt>

                <for pos:start="435:17" pos:end="437:48">for <control pos:start="435:21" pos:end="435:40">(<init pos:start="435:22" pos:end="435:27"><expr pos:start="435:22" pos:end="435:26"><name pos:start="435:22" pos:end="435:22">i</name> <operator pos:start="435:24" pos:end="435:24">=</operator> <literal type="number" pos:start="435:26" pos:end="435:26">0</literal></expr>;</init> <condition pos:start="435:29" pos:end="435:35"><expr pos:start="435:29" pos:end="435:34"><name pos:start="435:29" pos:end="435:29">i</name> <operator pos:start="435:31" pos:end="435:31">&lt;</operator> <literal type="number" pos:start="435:33" pos:end="435:34">12</literal></expr>;</condition> <incr pos:start="435:37" pos:end="435:39"><expr pos:start="435:37" pos:end="435:39"><name pos:start="435:37" pos:end="435:37">i</name><operator pos:start="435:38" pos:end="435:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="437:21" pos:end="437:48"><block_content pos:start="437:21" pos:end="437:48">

                    <expr_stmt pos:start="437:21" pos:end="437:48"><expr pos:start="437:21" pos:end="437:47"><name pos:start="437:21" pos:end="437:42"><name pos:start="437:21" pos:end="437:21">s</name><operator pos:start="437:22" pos:end="437:23">-&gt;</operator><name pos:start="437:24" pos:end="437:39">block_last_index</name><index pos:start="437:40" pos:end="437:42">[<expr pos:start="437:41" pos:end="437:41"><name pos:start="437:41" pos:end="437:41">i</name></expr>]</index></name> <operator pos:start="437:44" pos:end="437:44">=</operator> <operator pos:start="437:46" pos:end="437:46">-</operator><literal type="number" pos:start="437:47" pos:end="437:47">1</literal></expr>;</expr_stmt></block_content></block></for>

                <if_stmt pos:start="439:17" pos:end="445:47"><if pos:start="439:17" pos:end="441:47">if <condition pos:start="439:20" pos:end="439:55">(<expr pos:start="439:21" pos:end="439:54"><name pos:start="439:21" pos:end="439:40"><name pos:start="439:21" pos:end="439:21">s</name><operator pos:start="439:22" pos:end="439:23">-&gt;</operator><name pos:start="439:24" pos:end="439:40">picture_structure</name></name> <operator pos:start="439:42" pos:end="439:43">==</operator> <name pos:start="439:45" pos:end="439:54">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="441:21" pos:end="441:47"><block_content pos:start="441:21" pos:end="441:47">

                    <expr_stmt pos:start="441:21" pos:end="441:47"><expr pos:start="441:21" pos:end="441:46"><name pos:start="441:21" pos:end="441:30"><name pos:start="441:21" pos:end="441:21">s</name><operator pos:start="441:22" pos:end="441:23">-&gt;</operator><name pos:start="441:24" pos:end="441:30">mv_type</name></name> <operator pos:start="441:32" pos:end="441:32">=</operator> <name pos:start="441:34" pos:end="441:46">MV_TYPE_16X16</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="443:17" pos:end="445:47">else<block type="pseudo" pos:start="445:21" pos:end="445:47"><block_content pos:start="445:21" pos:end="445:47">

                    <expr_stmt pos:start="445:21" pos:end="445:47"><expr pos:start="445:21" pos:end="445:46"><name pos:start="445:21" pos:end="445:30"><name pos:start="445:21" pos:end="445:21">s</name><operator pos:start="445:22" pos:end="445:23">-&gt;</operator><name pos:start="445:24" pos:end="445:30">mv_type</name></name> <operator pos:start="445:32" pos:end="445:32">=</operator> <name pos:start="445:34" pos:end="445:46">MV_TYPE_FIELD</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <if_stmt pos:start="447:17" pos:end="473:17"><if pos:start="447:17" pos:end="461:17">if <condition pos:start="447:20" pos:end="447:54">(<expr pos:start="447:21" pos:end="447:53"><name pos:start="447:21" pos:end="447:32"><name pos:start="447:21" pos:end="447:21">s</name><operator pos:start="447:22" pos:end="447:23">-&gt;</operator><name pos:start="447:24" pos:end="447:32">pict_type</name></name> <operator pos:start="447:34" pos:end="447:35">==</operator> <name pos:start="447:37" pos:end="447:53">AV_PICTURE_TYPE_P</name></expr>)</condition> <block pos:start="447:56" pos:end="461:17">{<block_content pos:start="451:21" pos:end="459:75">

                    <comment type="block" pos:start="449:21" pos:end="449:66">/* if P type, zero motion vector is implied */</comment>

                    <expr_stmt pos:start="451:21" pos:end="451:59"><expr pos:start="451:21" pos:end="451:58"><name pos:start="451:21" pos:end="451:29"><name pos:start="451:21" pos:end="451:21">s</name><operator pos:start="451:22" pos:end="451:23">-&gt;</operator><name pos:start="451:24" pos:end="451:29">mv_dir</name></name>             <operator pos:start="451:43" pos:end="451:43">=</operator> <name pos:start="451:45" pos:end="451:58">MV_DIR_FORWARD</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="453:21" pos:end="453:68"><expr pos:start="453:21" pos:end="453:67"><name pos:start="453:21" pos:end="453:34"><name pos:start="453:21" pos:end="453:21">s</name><operator pos:start="453:22" pos:end="453:23">-&gt;</operator><name pos:start="453:24" pos:end="453:25">mv</name><index pos:start="453:26" pos:end="453:28">[<expr pos:start="453:27" pos:end="453:27"><literal type="number" pos:start="453:27" pos:end="453:27">0</literal></expr>]</index><index pos:start="453:29" pos:end="453:31">[<expr pos:start="453:30" pos:end="453:30"><literal type="number" pos:start="453:30" pos:end="453:30">0</literal></expr>]</index><index pos:start="453:32" pos:end="453:34">[<expr pos:start="453:33" pos:end="453:33"><literal type="number" pos:start="453:33" pos:end="453:33">0</literal></expr>]</index></name>        <operator pos:start="453:43" pos:end="453:43">=</operator> <name pos:start="453:45" pos:end="453:58"><name pos:start="453:45" pos:end="453:45">s</name><operator pos:start="453:46" pos:end="453:47">-&gt;</operator><name pos:start="453:48" pos:end="453:49">mv</name><index pos:start="453:50" pos:end="453:52">[<expr pos:start="453:51" pos:end="453:51"><literal type="number" pos:start="453:51" pos:end="453:51">0</literal></expr>]</index><index pos:start="453:53" pos:end="453:55">[<expr pos:start="453:54" pos:end="453:54"><literal type="number" pos:start="453:54" pos:end="453:54">0</literal></expr>]</index><index pos:start="453:56" pos:end="453:58">[<expr pos:start="453:57" pos:end="453:57"><literal type="number" pos:start="453:57" pos:end="453:57">1</literal></expr>]</index></name>      <operator pos:start="453:65" pos:end="453:65">=</operator> <literal type="number" pos:start="453:67" pos:end="453:67">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="455:21" pos:end="455:68"><expr pos:start="455:21" pos:end="455:67"><name pos:start="455:21" pos:end="455:39"><name pos:start="455:21" pos:end="455:21">s</name><operator pos:start="455:22" pos:end="455:23">-&gt;</operator><name pos:start="455:24" pos:end="455:30">last_mv</name><index pos:start="455:31" pos:end="455:33">[<expr pos:start="455:32" pos:end="455:32"><literal type="number" pos:start="455:32" pos:end="455:32">0</literal></expr>]</index><index pos:start="455:34" pos:end="455:36">[<expr pos:start="455:35" pos:end="455:35"><literal type="number" pos:start="455:35" pos:end="455:35">0</literal></expr>]</index><index pos:start="455:37" pos:end="455:39">[<expr pos:start="455:38" pos:end="455:38"><literal type="number" pos:start="455:38" pos:end="455:38">0</literal></expr>]</index></name>   <operator pos:start="455:43" pos:end="455:43">=</operator> <name pos:start="455:45" pos:end="455:63"><name pos:start="455:45" pos:end="455:45">s</name><operator pos:start="455:46" pos:end="455:47">-&gt;</operator><name pos:start="455:48" pos:end="455:54">last_mv</name><index pos:start="455:55" pos:end="455:57">[<expr pos:start="455:56" pos:end="455:56"><literal type="number" pos:start="455:56" pos:end="455:56">0</literal></expr>]</index><index pos:start="455:58" pos:end="455:60">[<expr pos:start="455:59" pos:end="455:59"><literal type="number" pos:start="455:59" pos:end="455:59">0</literal></expr>]</index><index pos:start="455:61" pos:end="455:63">[<expr pos:start="455:62" pos:end="455:62"><literal type="number" pos:start="455:62" pos:end="455:62">1</literal></expr>]</index></name> <operator pos:start="455:65" pos:end="455:65">=</operator> <literal type="number" pos:start="455:67" pos:end="455:67">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="457:21" pos:end="457:68"><expr pos:start="457:21" pos:end="457:67"><name pos:start="457:21" pos:end="457:39"><name pos:start="457:21" pos:end="457:21">s</name><operator pos:start="457:22" pos:end="457:23">-&gt;</operator><name pos:start="457:24" pos:end="457:30">last_mv</name><index pos:start="457:31" pos:end="457:33">[<expr pos:start="457:32" pos:end="457:32"><literal type="number" pos:start="457:32" pos:end="457:32">0</literal></expr>]</index><index pos:start="457:34" pos:end="457:36">[<expr pos:start="457:35" pos:end="457:35"><literal type="number" pos:start="457:35" pos:end="457:35">1</literal></expr>]</index><index pos:start="457:37" pos:end="457:39">[<expr pos:start="457:38" pos:end="457:38"><literal type="number" pos:start="457:38" pos:end="457:38">0</literal></expr>]</index></name>   <operator pos:start="457:43" pos:end="457:43">=</operator> <name pos:start="457:45" pos:end="457:63"><name pos:start="457:45" pos:end="457:45">s</name><operator pos:start="457:46" pos:end="457:47">-&gt;</operator><name pos:start="457:48" pos:end="457:54">last_mv</name><index pos:start="457:55" pos:end="457:57">[<expr pos:start="457:56" pos:end="457:56"><literal type="number" pos:start="457:56" pos:end="457:56">0</literal></expr>]</index><index pos:start="457:58" pos:end="457:60">[<expr pos:start="457:59" pos:end="457:59"><literal type="number" pos:start="457:59" pos:end="457:59">1</literal></expr>]</index><index pos:start="457:61" pos:end="457:63">[<expr pos:start="457:62" pos:end="457:62"><literal type="number" pos:start="457:62" pos:end="457:62">1</literal></expr>]</index></name> <operator pos:start="457:65" pos:end="457:65">=</operator> <literal type="number" pos:start="457:67" pos:end="457:67">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="459:21" pos:end="459:75"><expr pos:start="459:21" pos:end="459:74"><name pos:start="459:21" pos:end="459:41"><name pos:start="459:21" pos:end="459:21">s</name><operator pos:start="459:22" pos:end="459:23">-&gt;</operator><name pos:start="459:24" pos:end="459:35">field_select</name><index pos:start="459:36" pos:end="459:38">[<expr pos:start="459:37" pos:end="459:37"><literal type="number" pos:start="459:37" pos:end="459:37">0</literal></expr>]</index><index pos:start="459:39" pos:end="459:41">[<expr pos:start="459:40" pos:end="459:40"><literal type="number" pos:start="459:40" pos:end="459:40">0</literal></expr>]</index></name> <operator pos:start="459:43" pos:end="459:43">=</operator> <operator pos:start="459:45" pos:end="459:45">(</operator><name pos:start="459:46" pos:end="459:65"><name pos:start="459:46" pos:end="459:46">s</name><operator pos:start="459:47" pos:end="459:48">-&gt;</operator><name pos:start="459:49" pos:end="459:65">picture_structure</name></name> <operator pos:start="459:67" pos:end="459:67">-</operator> <literal type="number" pos:start="459:69" pos:end="459:69">1</literal><operator pos:start="459:70" pos:end="459:70">)</operator> <operator pos:start="459:72" pos:end="459:72">&amp;</operator> <literal type="number" pos:start="459:74" pos:end="459:74">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="461:19" pos:end="473:17">else <block pos:start="461:24" pos:end="473:17">{<block_content pos:start="465:21" pos:end="471:57">

                    <comment type="block" pos:start="463:21" pos:end="463:74">/* if B type, reuse previous vectors and directions */</comment>

                    <expr_stmt pos:start="465:21" pos:end="465:57"><expr pos:start="465:21" pos:end="465:56"><name pos:start="465:21" pos:end="465:34"><name pos:start="465:21" pos:end="465:21">s</name><operator pos:start="465:22" pos:end="465:23">-&gt;</operator><name pos:start="465:24" pos:end="465:25">mv</name><index pos:start="465:26" pos:end="465:28">[<expr pos:start="465:27" pos:end="465:27"><literal type="number" pos:start="465:27" pos:end="465:27">0</literal></expr>]</index><index pos:start="465:29" pos:end="465:31">[<expr pos:start="465:30" pos:end="465:30"><literal type="number" pos:start="465:30" pos:end="465:30">0</literal></expr>]</index><index pos:start="465:32" pos:end="465:34">[<expr pos:start="465:33" pos:end="465:33"><literal type="number" pos:start="465:33" pos:end="465:33">0</literal></expr>]</index></name> <operator pos:start="465:36" pos:end="465:36">=</operator> <name pos:start="465:38" pos:end="465:56"><name pos:start="465:38" pos:end="465:38">s</name><operator pos:start="465:39" pos:end="465:40">-&gt;</operator><name pos:start="465:41" pos:end="465:47">last_mv</name><index pos:start="465:48" pos:end="465:50">[<expr pos:start="465:49" pos:end="465:49"><literal type="number" pos:start="465:49" pos:end="465:49">0</literal></expr>]</index><index pos:start="465:51" pos:end="465:53">[<expr pos:start="465:52" pos:end="465:52"><literal type="number" pos:start="465:52" pos:end="465:52">0</literal></expr>]</index><index pos:start="465:54" pos:end="465:56">[<expr pos:start="465:55" pos:end="465:55"><literal type="number" pos:start="465:55" pos:end="465:55">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="467:21" pos:end="467:57"><expr pos:start="467:21" pos:end="467:56"><name pos:start="467:21" pos:end="467:34"><name pos:start="467:21" pos:end="467:21">s</name><operator pos:start="467:22" pos:end="467:23">-&gt;</operator><name pos:start="467:24" pos:end="467:25">mv</name><index pos:start="467:26" pos:end="467:28">[<expr pos:start="467:27" pos:end="467:27"><literal type="number" pos:start="467:27" pos:end="467:27">0</literal></expr>]</index><index pos:start="467:29" pos:end="467:31">[<expr pos:start="467:30" pos:end="467:30"><literal type="number" pos:start="467:30" pos:end="467:30">0</literal></expr>]</index><index pos:start="467:32" pos:end="467:34">[<expr pos:start="467:33" pos:end="467:33"><literal type="number" pos:start="467:33" pos:end="467:33">1</literal></expr>]</index></name> <operator pos:start="467:36" pos:end="467:36">=</operator> <name pos:start="467:38" pos:end="467:56"><name pos:start="467:38" pos:end="467:38">s</name><operator pos:start="467:39" pos:end="467:40">-&gt;</operator><name pos:start="467:41" pos:end="467:47">last_mv</name><index pos:start="467:48" pos:end="467:50">[<expr pos:start="467:49" pos:end="467:49"><literal type="number" pos:start="467:49" pos:end="467:49">0</literal></expr>]</index><index pos:start="467:51" pos:end="467:53">[<expr pos:start="467:52" pos:end="467:52"><literal type="number" pos:start="467:52" pos:end="467:52">0</literal></expr>]</index><index pos:start="467:54" pos:end="467:56">[<expr pos:start="467:55" pos:end="467:55"><literal type="number" pos:start="467:55" pos:end="467:55">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="469:21" pos:end="469:57"><expr pos:start="469:21" pos:end="469:56"><name pos:start="469:21" pos:end="469:34"><name pos:start="469:21" pos:end="469:21">s</name><operator pos:start="469:22" pos:end="469:23">-&gt;</operator><name pos:start="469:24" pos:end="469:25">mv</name><index pos:start="469:26" pos:end="469:28">[<expr pos:start="469:27" pos:end="469:27"><literal type="number" pos:start="469:27" pos:end="469:27">1</literal></expr>]</index><index pos:start="469:29" pos:end="469:31">[<expr pos:start="469:30" pos:end="469:30"><literal type="number" pos:start="469:30" pos:end="469:30">0</literal></expr>]</index><index pos:start="469:32" pos:end="469:34">[<expr pos:start="469:33" pos:end="469:33"><literal type="number" pos:start="469:33" pos:end="469:33">0</literal></expr>]</index></name> <operator pos:start="469:36" pos:end="469:36">=</operator> <name pos:start="469:38" pos:end="469:56"><name pos:start="469:38" pos:end="469:38">s</name><operator pos:start="469:39" pos:end="469:40">-&gt;</operator><name pos:start="469:41" pos:end="469:47">last_mv</name><index pos:start="469:48" pos:end="469:50">[<expr pos:start="469:49" pos:end="469:49"><literal type="number" pos:start="469:49" pos:end="469:49">1</literal></expr>]</index><index pos:start="469:51" pos:end="469:53">[<expr pos:start="469:52" pos:end="469:52"><literal type="number" pos:start="469:52" pos:end="469:52">0</literal></expr>]</index><index pos:start="469:54" pos:end="469:56">[<expr pos:start="469:55" pos:end="469:55"><literal type="number" pos:start="469:55" pos:end="469:55">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="471:21" pos:end="471:57"><expr pos:start="471:21" pos:end="471:56"><name pos:start="471:21" pos:end="471:34"><name pos:start="471:21" pos:end="471:21">s</name><operator pos:start="471:22" pos:end="471:23">-&gt;</operator><name pos:start="471:24" pos:end="471:25">mv</name><index pos:start="471:26" pos:end="471:28">[<expr pos:start="471:27" pos:end="471:27"><literal type="number" pos:start="471:27" pos:end="471:27">1</literal></expr>]</index><index pos:start="471:29" pos:end="471:31">[<expr pos:start="471:30" pos:end="471:30"><literal type="number" pos:start="471:30" pos:end="471:30">0</literal></expr>]</index><index pos:start="471:32" pos:end="471:34">[<expr pos:start="471:33" pos:end="471:33"><literal type="number" pos:start="471:33" pos:end="471:33">1</literal></expr>]</index></name> <operator pos:start="471:36" pos:end="471:36">=</operator> <name pos:start="471:38" pos:end="471:56"><name pos:start="471:38" pos:end="471:38">s</name><operator pos:start="471:39" pos:end="471:40">-&gt;</operator><name pos:start="471:41" pos:end="471:47">last_mv</name><index pos:start="471:48" pos:end="471:50">[<expr pos:start="471:49" pos:end="471:49"><literal type="number" pos:start="471:49" pos:end="471:49">1</literal></expr>]</index><index pos:start="471:51" pos:end="471:53">[<expr pos:start="471:52" pos:end="471:52"><literal type="number" pos:start="471:52" pos:end="471:52">0</literal></expr>]</index><index pos:start="471:54" pos:end="471:56">[<expr pos:start="471:55" pos:end="471:55"><literal type="number" pos:start="471:55" pos:end="471:55">1</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

<label pos:start="481:1" pos:end="481:4"><name pos:start="481:1" pos:end="481:3">eos</name>:</label> <comment type="line" pos:start="481:6" pos:end="481:20">// end of slice</comment>

    <expr_stmt pos:start="483:5" pos:end="483:45"><expr pos:start="483:5" pos:end="483:44"><operator pos:start="483:5" pos:end="483:5">*</operator><name pos:start="483:6" pos:end="483:8">buf</name> <operator pos:start="483:10" pos:end="483:11">+=</operator> <operator pos:start="483:13" pos:end="483:13">(</operator><call pos:start="483:14" pos:end="483:35"><name pos:start="483:14" pos:end="483:27">get_bits_count</name><argument_list pos:start="483:28" pos:end="483:35">(<argument pos:start="483:29" pos:end="483:34"><expr pos:start="483:29" pos:end="483:34"><operator pos:start="483:29" pos:end="483:29">&amp;</operator><name pos:start="483:30" pos:end="483:34"><name pos:start="483:30" pos:end="483:30">s</name><operator pos:start="483:31" pos:end="483:32">-&gt;</operator><name pos:start="483:33" pos:end="483:34">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="483:37" pos:end="483:37">-</operator> <literal type="number" pos:start="483:39" pos:end="483:39">1</literal><operator pos:start="483:40" pos:end="483:40">)</operator> <operator pos:start="483:42" pos:end="483:42">/</operator> <literal type="number" pos:start="483:44" pos:end="483:44">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="485:5" pos:end="485:84"><expr pos:start="485:5" pos:end="485:83"><call pos:start="485:5" pos:end="485:83"><name pos:start="485:5" pos:end="485:11">ff_dlog</name><argument_list pos:start="485:12" pos:end="485:83">(<argument pos:start="485:13" pos:end="485:13"><expr pos:start="485:13" pos:end="485:13"><name pos:start="485:13" pos:end="485:13">s</name></expr></argument>, <argument pos:start="485:16" pos:end="485:32"><expr pos:start="485:16" pos:end="485:32"><literal type="string" pos:start="485:16" pos:end="485:32">"y %d %d %d %d\n"</literal></expr></argument>, <argument pos:start="485:35" pos:end="485:48"><expr pos:start="485:35" pos:end="485:48"><name pos:start="485:35" pos:end="485:48"><name pos:start="485:35" pos:end="485:35">s</name><operator pos:start="485:36" pos:end="485:37">-&gt;</operator><name pos:start="485:38" pos:end="485:48">resync_mb_x</name></name></expr></argument>, <argument pos:start="485:51" pos:end="485:64"><expr pos:start="485:51" pos:end="485:64"><name pos:start="485:51" pos:end="485:64"><name pos:start="485:51" pos:end="485:51">s</name><operator pos:start="485:52" pos:end="485:53">-&gt;</operator><name pos:start="485:54" pos:end="485:64">resync_mb_y</name></name></expr></argument>, <argument pos:start="485:67" pos:end="485:73"><expr pos:start="485:67" pos:end="485:73"><name pos:start="485:67" pos:end="485:73"><name pos:start="485:67" pos:end="485:67">s</name><operator pos:start="485:68" pos:end="485:69">-&gt;</operator><name pos:start="485:70" pos:end="485:73">mb_x</name></name></expr></argument>, <argument pos:start="485:76" pos:end="485:82"><expr pos:start="485:76" pos:end="485:82"><name pos:start="485:76" pos:end="485:82"><name pos:start="485:76" pos:end="485:76">s</name><operator pos:start="485:77" pos:end="485:78">-&gt;</operator><name pos:start="485:79" pos:end="485:82">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="487:5" pos:end="487:13">return <expr pos:start="487:12" pos:end="487:12"><literal type="number" pos:start="487:12" pos:end="487:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
