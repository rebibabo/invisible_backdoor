<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27312.c" pos:tabs="8"><function pos:start="1:1" pos:end="631:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">exynos4210_mct_write</name><parameter_list pos:start="1:33" pos:end="3:38">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:72"><decl pos:start="1:48" pos:end="1:72"><type pos:start="1:48" pos:end="1:72"><name pos:start="1:48" pos:end="1:65">target_phys_addr_t</name></type> <name pos:start="1:67" pos:end="1:72">offset</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:22"><decl pos:start="3:9" pos:end="3:22"><type pos:start="3:9" pos:end="3:22"><name pos:start="3:9" pos:end="3:16">uint64_t</name></type> <name pos:start="3:18" pos:end="3:22">value</name></decl></parameter>, <parameter pos:start="3:25" pos:end="3:37"><decl pos:start="3:25" pos:end="3:37"><type pos:start="3:25" pos:end="3:37"><name pos:start="3:25" pos:end="3:32">unsigned</name></type> <name pos:start="3:34" pos:end="3:37">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="631:1">{<block_content pos:start="7:5" pos:end="629:5">

    <decl_stmt pos:start="7:5" pos:end="7:57"><decl pos:start="7:5" pos:end="7:56"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">Exynos4210MCTState</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:25">s</name> <init pos:start="7:27" pos:end="7:56">= <expr pos:start="7:29" pos:end="7:56"><operator pos:start="7:29" pos:end="7:29">(</operator><name pos:start="7:30" pos:end="7:47">Exynos4210MCTState</name> <operator pos:start="7:49" pos:end="7:49">*</operator><operator pos:start="7:50" pos:end="7:50">)</operator><name pos:start="7:51" pos:end="7:56">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">index</name></decl>;</decl_stmt>  <comment type="block" pos:start="9:17" pos:end="9:67">/* index in buffer which represents register set */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">shift</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">lt_i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:20">new_frc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="22:0"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:20">old_val</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="21:1" pos:end="21:16">#<cpp:directive pos:start="21:2" pos:end="21:6">ifdef</cpp:directive> <name pos:start="21:8" pos:end="21:16">DEBUG_MCT</name></cpp:ifdef>

    <decl_stmt pos:start="23:5" pos:end="23:39"><decl pos:start="23:5" pos:end="23:38"><type pos:start="23:5" pos:end="23:19"><specifier pos:start="23:5" pos:end="23:10">static</specifier> <name pos:start="23:12" pos:end="23:19">uint32_t</name></type> <name pos:start="23:21" pos:end="23:32"><name pos:start="23:21" pos:end="23:29">icntb_max</name><index pos:start="23:30" pos:end="23:32">[<expr pos:start="23:31" pos:end="23:31"><literal type="number" pos:start="23:31" pos:end="23:31">2</literal></expr>]</index></name> <init pos:start="23:34" pos:end="23:38">= <expr pos:start="23:36" pos:end="23:38"><block pos:start="23:36" pos:end="23:38">{<expr pos:start="23:37" pos:end="23:37"><literal type="number" pos:start="23:37" pos:end="23:37">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:60"><decl pos:start="25:5" pos:end="25:59"><type pos:start="25:5" pos:end="25:19"><specifier pos:start="25:5" pos:end="25:10">static</specifier> <name pos:start="25:12" pos:end="25:19">uint32_t</name></type> <name pos:start="25:21" pos:end="25:32"><name pos:start="25:21" pos:end="25:29">icntb_min</name><index pos:start="25:30" pos:end="25:32">[<expr pos:start="25:31" pos:end="25:31"><literal type="number" pos:start="25:31" pos:end="25:31">2</literal></expr>]</index></name> <init pos:start="25:34" pos:end="25:59">= <expr pos:start="25:36" pos:end="25:59"><block pos:start="25:36" pos:end="25:59">{<expr pos:start="25:37" pos:end="25:46"><name pos:start="25:37" pos:end="25:46">UINT32_MAX</name></expr>, <expr pos:start="25:49" pos:end="25:58"><name pos:start="25:49" pos:end="25:58">UINT32_MAX</name></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:39"><decl pos:start="27:5" pos:end="27:38"><type pos:start="27:5" pos:end="27:19"><specifier pos:start="27:5" pos:end="27:10">static</specifier> <name pos:start="27:12" pos:end="27:19">uint32_t</name></type> <name pos:start="27:21" pos:end="27:32"><name pos:start="27:21" pos:end="27:29">tcntb_max</name><index pos:start="27:30" pos:end="27:32">[<expr pos:start="27:31" pos:end="27:31"><literal type="number" pos:start="27:31" pos:end="27:31">2</literal></expr>]</index></name> <init pos:start="27:34" pos:end="27:38">= <expr pos:start="27:36" pos:end="27:38"><block pos:start="27:36" pos:end="27:38">{<expr pos:start="27:37" pos:end="27:37"><literal type="number" pos:start="27:37" pos:end="27:37">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="32:0"><decl pos:start="29:5" pos:end="29:59"><type pos:start="29:5" pos:end="29:19"><specifier pos:start="29:5" pos:end="29:10">static</specifier> <name pos:start="29:12" pos:end="29:19">uint32_t</name></type> <name pos:start="29:21" pos:end="29:32"><name pos:start="29:21" pos:end="29:29">tcntb_min</name><index pos:start="29:30" pos:end="29:32">[<expr pos:start="29:31" pos:end="29:31"><literal type="number" pos:start="29:31" pos:end="29:31">2</literal></expr>]</index></name> <init pos:start="29:34" pos:end="29:59">= <expr pos:start="29:36" pos:end="29:59"><block pos:start="29:36" pos:end="29:59">{<expr pos:start="29:37" pos:end="29:46"><name pos:start="29:37" pos:end="29:46">UINT32_MAX</name></expr>, <expr pos:start="29:49" pos:end="29:58"><name pos:start="29:49" pos:end="29:58">UINT32_MAX</name></expr>}</block></expr></init></decl>;</decl_stmt>

<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="35:5" pos:end="35:33"><expr pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:11">new_frc</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:32"><name pos:start="35:15" pos:end="35:15">s</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:24">g_timer</name><operator pos:start="35:25" pos:end="35:25">.</operator><name pos:start="35:26" pos:end="35:28">reg</name><operator pos:start="35:29" pos:end="35:29">.</operator><name pos:start="35:30" pos:end="35:32">cnt</name></name></expr>;</expr_stmt>



    <switch pos:start="39:5" pos:end="629:5">switch <condition pos:start="39:12" pos:end="39:19">(<expr pos:start="39:13" pos:end="39:18"><name pos:start="39:13" pos:end="39:18">offset</name></expr>)</condition> <block pos:start="39:21" pos:end="629:5">{<block_content pos:start="43:5" pos:end="627:14">



    <case pos:start="43:5" pos:end="43:17">case <expr pos:start="43:10" pos:end="43:16"><name pos:start="43:10" pos:end="43:16">MCT_CFG</name></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:22">reg_mct_cfg</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:30">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:38"><expr pos:start="47:9" pos:end="47:37"><call pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:34">exynos4210_mct_update_freq</name><argument_list pos:start="47:35" pos:end="47:37">(<argument pos:start="47:36" pos:end="47:36"><expr pos:start="47:36" pos:end="47:36"><name pos:start="47:36" pos:end="47:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>



    <case pos:start="53:5" pos:end="53:17">case <expr pos:start="53:10" pos:end="53:16"><name pos:start="53:10" pos:end="53:16">G_CNT_L</name></expr>:</case>

    <case pos:start="55:5" pos:end="55:17">case <expr pos:start="55:10" pos:end="55:16"><name pos:start="55:10" pos:end="55:16">G_CNT_U</name></expr>:</case>

        <if_stmt pos:start="57:9" pos:end="69:9"><if pos:start="57:9" pos:end="69:9">if <condition pos:start="57:12" pos:end="57:30">(<expr pos:start="57:13" pos:end="57:29"><name pos:start="57:13" pos:end="57:18">offset</name> <operator pos:start="57:20" pos:end="57:21">==</operator> <name pos:start="57:23" pos:end="57:29">G_CNT_L</name></expr>)</condition> <block pos:start="57:32" pos:end="69:9">{<block_content pos:start="61:13" pos:end="67:54">



            <expr_stmt pos:start="61:13" pos:end="61:68"><expr pos:start="61:13" pos:end="61:67"><call pos:start="61:13" pos:end="61:67"><name pos:start="61:13" pos:end="61:19">DPRINTF</name><argument_list pos:start="61:20" pos:end="61:67">(<argument pos:start="61:21" pos:end="61:59"><expr pos:start="61:21" pos:end="61:59"><literal type="string" pos:start="61:21" pos:end="61:59">"global timer write to reg.cntl %llx\n"</literal></expr></argument>, <argument pos:start="61:62" pos:end="61:66"><expr pos:start="61:62" pos:end="61:66"><name pos:start="61:62" pos:end="61:66">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="65:13" pos:end="65:80"><expr pos:start="65:13" pos:end="65:79"><name pos:start="65:13" pos:end="65:19">new_frc</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <operator pos:start="65:23" pos:end="65:23">(</operator><name pos:start="65:24" pos:end="65:41"><name pos:start="65:24" pos:end="65:24">s</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:33">g_timer</name><operator pos:start="65:34" pos:end="65:34">.</operator><name pos:start="65:35" pos:end="65:37">reg</name><operator pos:start="65:38" pos:end="65:38">.</operator><name pos:start="65:39" pos:end="65:41">cnt</name></name> <operator pos:start="65:43" pos:end="65:43">&amp;</operator> <operator pos:start="65:45" pos:end="65:45">(</operator><name pos:start="65:46" pos:end="65:53">uint64_t</name><operator pos:start="65:54" pos:end="65:54">)</operator><name pos:start="65:55" pos:end="65:64">UINT32_MAX</name> <operator pos:start="65:66" pos:end="65:67">&lt;&lt;</operator> <literal type="number" pos:start="65:69" pos:end="65:70">32</literal><operator pos:start="65:71" pos:end="65:71">)</operator> <operator pos:start="65:73" pos:end="65:73">+</operator> <name pos:start="65:75" pos:end="65:79">value</name></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:54"><expr pos:start="67:13" pos:end="67:53"><name pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:22">g_timer</name><operator pos:start="67:23" pos:end="67:23">.</operator><name pos:start="67:24" pos:end="67:26">reg</name><operator pos:start="67:27" pos:end="67:27">.</operator><name pos:start="67:28" pos:end="67:36">cnt_wstat</name></name> <operator pos:start="67:38" pos:end="67:39">|=</operator> <name pos:start="67:41" pos:end="67:53">G_CNT_WSTAT_L</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="71:9" pos:end="85:9"><if pos:start="71:9" pos:end="85:9">if <condition pos:start="71:12" pos:end="71:30">(<expr pos:start="71:13" pos:end="71:29"><name pos:start="71:13" pos:end="71:18">offset</name> <operator pos:start="71:20" pos:end="71:21">==</operator> <name pos:start="71:23" pos:end="71:29">G_CNT_U</name></expr>)</condition> <block pos:start="71:32" pos:end="85:9">{<block_content pos:start="75:13" pos:end="83:54">



            <expr_stmt pos:start="75:13" pos:end="75:68"><expr pos:start="75:13" pos:end="75:67"><call pos:start="75:13" pos:end="75:67"><name pos:start="75:13" pos:end="75:19">DPRINTF</name><argument_list pos:start="75:20" pos:end="75:67">(<argument pos:start="75:21" pos:end="75:59"><expr pos:start="75:21" pos:end="75:59"><literal type="string" pos:start="75:21" pos:end="75:59">"global timer write to reg.cntu %llx\n"</literal></expr></argument>, <argument pos:start="75:62" pos:end="75:66"><expr pos:start="75:62" pos:end="75:66"><name pos:start="75:62" pos:end="75:66">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="79:13" pos:end="81:44"><expr pos:start="79:13" pos:end="81:43"><name pos:start="79:13" pos:end="79:19">new_frc</name> <operator pos:start="79:21" pos:end="79:21">=</operator> <operator pos:start="79:23" pos:end="79:23">(</operator><name pos:start="79:24" pos:end="79:41"><name pos:start="79:24" pos:end="79:24">s</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:33">g_timer</name><operator pos:start="79:34" pos:end="79:34">.</operator><name pos:start="79:35" pos:end="79:37">reg</name><operator pos:start="79:38" pos:end="79:38">.</operator><name pos:start="79:39" pos:end="79:41">cnt</name></name> <operator pos:start="79:43" pos:end="79:43">&amp;</operator> <name pos:start="79:45" pos:end="79:54">UINT32_MAX</name><operator pos:start="79:55" pos:end="79:55">)</operator> <operator pos:start="79:57" pos:end="79:57">+</operator>

                    <operator pos:start="81:21" pos:end="81:21">(</operator><operator pos:start="81:22" pos:end="81:22">(</operator><name pos:start="81:23" pos:end="81:30">uint64_t</name><operator pos:start="81:31" pos:end="81:31">)</operator><name pos:start="81:32" pos:end="81:36">value</name> <operator pos:start="81:38" pos:end="81:39">&lt;&lt;</operator> <literal type="number" pos:start="81:41" pos:end="81:42">32</literal><operator pos:start="81:43" pos:end="81:43">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:54"><expr pos:start="83:13" pos:end="83:53"><name pos:start="83:13" pos:end="83:36"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:22">g_timer</name><operator pos:start="83:23" pos:end="83:23">.</operator><name pos:start="83:24" pos:end="83:26">reg</name><operator pos:start="83:27" pos:end="83:27">.</operator><name pos:start="83:28" pos:end="83:36">cnt_wstat</name></name> <operator pos:start="83:38" pos:end="83:39">|=</operator> <name pos:start="83:41" pos:end="83:53">G_CNT_WSTAT_U</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:37"><expr pos:start="89:9" pos:end="89:36"><name pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:18">g_timer</name><operator pos:start="89:19" pos:end="89:19">.</operator><name pos:start="89:20" pos:end="89:22">reg</name><operator pos:start="89:23" pos:end="89:23">.</operator><name pos:start="89:24" pos:end="89:26">cnt</name></name> <operator pos:start="89:28" pos:end="89:28">=</operator> <name pos:start="89:30" pos:end="89:36">new_frc</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:35"><expr pos:start="91:9" pos:end="91:34"><call pos:start="91:9" pos:end="91:34"><name pos:start="91:9" pos:end="91:31">exynos4210_gfrc_restart</name><argument_list pos:start="91:32" pos:end="91:34">(<argument pos:start="91:33" pos:end="91:33"><expr pos:start="91:33" pos:end="91:33"><name pos:start="91:33" pos:end="91:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>



    <case pos:start="97:5" pos:end="97:21">case <expr pos:start="97:10" pos:end="97:20"><name pos:start="97:10" pos:end="97:20">G_CNT_WSTAT</name></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:45"><expr pos:start="99:9" pos:end="99:44"><name pos:start="99:9" pos:end="99:32"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:18">g_timer</name><operator pos:start="99:19" pos:end="99:19">.</operator><name pos:start="99:20" pos:end="99:22">reg</name><operator pos:start="99:23" pos:end="99:23">.</operator><name pos:start="99:24" pos:end="99:32">cnt_wstat</name></name> <operator pos:start="99:34" pos:end="99:35">&amp;=</operator> <operator pos:start="99:37" pos:end="99:37">~</operator><operator pos:start="99:38" pos:end="99:38">(</operator><name pos:start="99:39" pos:end="99:43">value</name><operator pos:start="99:44" pos:end="99:44">)</operator></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>



    <case pos:start="105:5" pos:end="105:21">case <expr pos:start="105:10" pos:end="105:20"><call pos:start="105:10" pos:end="105:20"><name pos:start="105:10" pos:end="105:17">G_COMP_L</name><argument_list pos:start="105:18" pos:end="105:20">(<argument pos:start="105:19" pos:end="105:19"><expr pos:start="105:19" pos:end="105:19"><literal type="number" pos:start="105:19" pos:end="105:19">0</literal></expr></argument>)</argument_list></call></expr>:</case> <case pos:start="105:23" pos:end="105:39">case <expr pos:start="105:28" pos:end="105:38"><call pos:start="105:28" pos:end="105:38"><name pos:start="105:28" pos:end="105:35">G_COMP_L</name><argument_list pos:start="105:36" pos:end="105:38">(<argument pos:start="105:37" pos:end="105:37"><expr pos:start="105:37" pos:end="105:37"><literal type="number" pos:start="105:37" pos:end="105:37">1</literal></expr></argument>)</argument_list></call></expr>:</case> <case pos:start="105:41" pos:end="105:57">case <expr pos:start="105:46" pos:end="105:56"><call pos:start="105:46" pos:end="105:56"><name pos:start="105:46" pos:end="105:53">G_COMP_L</name><argument_list pos:start="105:54" pos:end="105:56">(<argument pos:start="105:55" pos:end="105:55"><expr pos:start="105:55" pos:end="105:55"><literal type="number" pos:start="105:55" pos:end="105:55">2</literal></expr></argument>)</argument_list></call></expr>:</case> <case pos:start="105:59" pos:end="105:75">case <expr pos:start="105:64" pos:end="105:74"><call pos:start="105:64" pos:end="105:74"><name pos:start="105:64" pos:end="105:71">G_COMP_L</name><argument_list pos:start="105:72" pos:end="105:74">(<argument pos:start="105:73" pos:end="105:73"><expr pos:start="105:73" pos:end="105:73"><literal type="number" pos:start="105:73" pos:end="105:73">3</literal></expr></argument>)</argument_list></call></expr>:</case>

    <case pos:start="107:5" pos:end="107:21">case <expr pos:start="107:10" pos:end="107:20"><call pos:start="107:10" pos:end="107:20"><name pos:start="107:10" pos:end="107:17">G_COMP_U</name><argument_list pos:start="107:18" pos:end="107:20">(<argument pos:start="107:19" pos:end="107:19"><expr pos:start="107:19" pos:end="107:19"><literal type="number" pos:start="107:19" pos:end="107:19">0</literal></expr></argument>)</argument_list></call></expr>:</case> <case pos:start="107:23" pos:end="107:39">case <expr pos:start="107:28" pos:end="107:38"><call pos:start="107:28" pos:end="107:38"><name pos:start="107:28" pos:end="107:35">G_COMP_U</name><argument_list pos:start="107:36" pos:end="107:38">(<argument pos:start="107:37" pos:end="107:37"><expr pos:start="107:37" pos:end="107:37"><literal type="number" pos:start="107:37" pos:end="107:37">1</literal></expr></argument>)</argument_list></call></expr>:</case> <case pos:start="107:41" pos:end="107:57">case <expr pos:start="107:46" pos:end="107:56"><call pos:start="107:46" pos:end="107:56"><name pos:start="107:46" pos:end="107:53">G_COMP_U</name><argument_list pos:start="107:54" pos:end="107:56">(<argument pos:start="107:55" pos:end="107:55"><expr pos:start="107:55" pos:end="107:55"><literal type="number" pos:start="107:55" pos:end="107:55">2</literal></expr></argument>)</argument_list></call></expr>:</case> <case pos:start="107:59" pos:end="107:75">case <expr pos:start="107:64" pos:end="107:74"><call pos:start="107:64" pos:end="107:74"><name pos:start="107:64" pos:end="107:71">G_COMP_U</name><argument_list pos:start="107:72" pos:end="107:74">(<argument pos:start="107:73" pos:end="107:73"><expr pos:start="107:73" pos:end="107:73"><literal type="number" pos:start="107:73" pos:end="107:73">3</literal></expr></argument>)</argument_list></call></expr>:</case>

    <expr_stmt pos:start="109:5" pos:end="109:35"><expr pos:start="109:5" pos:end="109:34"><name pos:start="109:5" pos:end="109:9">index</name> <operator pos:start="109:11" pos:end="109:11">=</operator> <call pos:start="109:13" pos:end="109:34"><name pos:start="109:13" pos:end="109:26">GET_G_COMP_IDX</name><argument_list pos:start="109:27" pos:end="109:34">(<argument pos:start="109:28" pos:end="109:33"><expr pos:start="109:28" pos:end="109:33"><name pos:start="109:28" pos:end="109:33">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:31"><expr pos:start="111:5" pos:end="111:30"><name pos:start="111:5" pos:end="111:9">shift</name> <operator pos:start="111:11" pos:end="111:11">=</operator> <literal type="number" pos:start="111:13" pos:end="111:13">8</literal> <operator pos:start="111:15" pos:end="111:15">*</operator> <operator pos:start="111:17" pos:end="111:17">(</operator><name pos:start="111:18" pos:end="111:23">offset</name> <operator pos:start="111:25" pos:end="111:25">&amp;</operator> <literal type="number" pos:start="111:27" pos:end="111:29">0x4</literal><operator pos:start="111:30" pos:end="111:30">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="119:29"><expr pos:start="113:5" pos:end="119:28"><name pos:start="113:5" pos:end="113:30"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:14">g_timer</name><operator pos:start="113:15" pos:end="113:15">.</operator><name pos:start="113:16" pos:end="113:18">reg</name><operator pos:start="113:19" pos:end="113:19">.</operator><name pos:start="113:20" pos:end="113:23">comp</name><index pos:start="113:24" pos:end="113:30">[<expr pos:start="113:25" pos:end="113:29"><name pos:start="113:25" pos:end="113:29">index</name></expr>]</index></name> <operator pos:start="113:32" pos:end="113:32">=</operator>

            <operator pos:start="115:13" pos:end="115:13">(</operator><name pos:start="115:14" pos:end="115:39"><name pos:start="115:14" pos:end="115:14">s</name><operator pos:start="115:15" pos:end="115:16">-&gt;</operator><name pos:start="115:17" pos:end="115:23">g_timer</name><operator pos:start="115:24" pos:end="115:24">.</operator><name pos:start="115:25" pos:end="115:27">reg</name><operator pos:start="115:28" pos:end="115:28">.</operator><name pos:start="115:29" pos:end="115:32">comp</name><index pos:start="115:33" pos:end="115:39">[<expr pos:start="115:34" pos:end="115:38"><name pos:start="115:34" pos:end="115:38">index</name></expr>]</index></name> <operator pos:start="115:41" pos:end="115:41">&amp;</operator>

            <operator pos:start="117:13" pos:end="117:13">(</operator><operator pos:start="117:14" pos:end="117:14">(</operator><operator pos:start="117:15" pos:end="117:15">(</operator><name pos:start="117:16" pos:end="117:23">uint64_t</name><operator pos:start="117:24" pos:end="117:24">)</operator><name pos:start="117:25" pos:end="117:34">UINT32_MAX</name> <operator pos:start="117:36" pos:end="117:37">&lt;&lt;</operator> <literal type="number" pos:start="117:39" pos:end="117:40">32</literal><operator pos:start="117:41" pos:end="117:41">)</operator> <operator pos:start="117:43" pos:end="117:44">&gt;&gt;</operator> <name pos:start="117:46" pos:end="117:50">shift</name><operator pos:start="117:51" pos:end="117:51">)</operator><operator pos:start="117:52" pos:end="117:52">)</operator> <operator pos:start="117:54" pos:end="117:54">+</operator>

            <operator pos:start="119:13" pos:end="119:13">(</operator><name pos:start="119:14" pos:end="119:18">value</name> <operator pos:start="119:20" pos:end="119:21">&lt;&lt;</operator> <name pos:start="119:23" pos:end="119:27">shift</name><operator pos:start="119:28" pos:end="119:28">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:75"><expr pos:start="123:5" pos:end="123:74"><call pos:start="123:5" pos:end="123:74"><name pos:start="123:5" pos:end="123:11">DPRINTF</name><argument_list pos:start="123:12" pos:end="123:74">(<argument pos:start="123:13" pos:end="123:52"><expr pos:start="123:13" pos:end="123:52"><literal type="string" pos:start="123:13" pos:end="123:52">"comparator %d write 0x%llx val &lt;&lt; %d\n"</literal></expr></argument>, <argument pos:start="123:55" pos:end="123:59"><expr pos:start="123:55" pos:end="123:59"><name pos:start="123:55" pos:end="123:59">index</name></expr></argument>, <argument pos:start="123:62" pos:end="123:66"><expr pos:start="123:62" pos:end="123:66"><name pos:start="123:62" pos:end="123:66">value</name></expr></argument>, <argument pos:start="123:69" pos:end="123:73"><expr pos:start="123:69" pos:end="123:73"><name pos:start="123:69" pos:end="123:73">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="127:5" pos:end="135:5"><if pos:start="127:5" pos:end="131:5">if <condition pos:start="127:8" pos:end="127:19">(<expr pos:start="127:9" pos:end="127:18"><name pos:start="127:9" pos:end="127:14">offset</name><operator pos:start="127:15" pos:end="127:15">&amp;</operator><literal type="number" pos:start="127:16" pos:end="127:18">0x4</literal></expr>)</condition> <block pos:start="127:21" pos:end="131:5">{<block_content pos:start="129:9" pos:end="129:54">

        <expr_stmt pos:start="129:9" pos:end="129:54"><expr pos:start="129:9" pos:end="129:53"><name pos:start="129:9" pos:end="129:28"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:18">g_timer</name><operator pos:start="129:19" pos:end="129:19">.</operator><name pos:start="129:20" pos:end="129:22">reg</name><operator pos:start="129:23" pos:end="129:23">.</operator><name pos:start="129:24" pos:end="129:28">wstat</name></name> <operator pos:start="129:30" pos:end="129:31">|=</operator> <call pos:start="129:33" pos:end="129:53"><name pos:start="129:33" pos:end="129:46">G_WSTAT_COMP_U</name><argument_list pos:start="129:47" pos:end="129:53">(<argument pos:start="129:48" pos:end="129:52"><expr pos:start="129:48" pos:end="129:52"><name pos:start="129:48" pos:end="129:52">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="131:7" pos:end="135:5">else <block pos:start="131:12" pos:end="135:5">{<block_content pos:start="133:9" pos:end="133:54">

        <expr_stmt pos:start="133:9" pos:end="133:54"><expr pos:start="133:9" pos:end="133:53"><name pos:start="133:9" pos:end="133:28"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:18">g_timer</name><operator pos:start="133:19" pos:end="133:19">.</operator><name pos:start="133:20" pos:end="133:22">reg</name><operator pos:start="133:23" pos:end="133:23">.</operator><name pos:start="133:24" pos:end="133:28">wstat</name></name> <operator pos:start="133:30" pos:end="133:31">|=</operator> <call pos:start="133:33" pos:end="133:53"><name pos:start="133:33" pos:end="133:46">G_WSTAT_COMP_L</name><argument_list pos:start="133:47" pos:end="133:53">(<argument pos:start="133:48" pos:end="133:52"><expr pos:start="133:48" pos:end="133:52"><name pos:start="133:48" pos:end="133:52">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:31"><expr pos:start="139:5" pos:end="139:30"><call pos:start="139:5" pos:end="139:30"><name pos:start="139:5" pos:end="139:27">exynos4210_gfrc_restart</name><argument_list pos:start="139:28" pos:end="139:30">(<argument pos:start="139:29" pos:end="139:29"><expr pos:start="139:29" pos:end="139:29"><name pos:start="139:29" pos:end="139:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <break pos:start="141:5" pos:end="141:10">break;</break>



    <case pos:start="145:5" pos:end="145:16">case <expr pos:start="145:10" pos:end="145:15"><name pos:start="145:10" pos:end="145:15">G_TCON</name></expr>:</case>

        <expr_stmt pos:start="147:9" pos:end="147:38"><expr pos:start="147:9" pos:end="147:37"><name pos:start="147:9" pos:end="147:15">old_val</name> <operator pos:start="147:17" pos:end="147:17">=</operator> <name pos:start="147:19" pos:end="147:37"><name pos:start="147:19" pos:end="147:19">s</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:28">g_timer</name><operator pos:start="147:29" pos:end="147:29">.</operator><name pos:start="147:30" pos:end="147:32">reg</name><operator pos:start="147:33" pos:end="147:33">.</operator><name pos:start="147:34" pos:end="147:37">tcon</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:36"><expr pos:start="149:9" pos:end="149:35"><name pos:start="149:9" pos:end="149:27"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:18">g_timer</name><operator pos:start="149:19" pos:end="149:19">.</operator><name pos:start="149:20" pos:end="149:22">reg</name><operator pos:start="149:23" pos:end="149:23">.</operator><name pos:start="149:24" pos:end="149:27">tcon</name></name> <operator pos:start="149:29" pos:end="149:29">=</operator> <name pos:start="149:31" pos:end="149:35">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:51"><expr pos:start="151:9" pos:end="151:50"><name pos:start="151:9" pos:end="151:28"><name pos:start="151:9" pos:end="151:9">s</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:18">g_timer</name><operator pos:start="151:19" pos:end="151:19">.</operator><name pos:start="151:20" pos:end="151:22">reg</name><operator pos:start="151:23" pos:end="151:23">.</operator><name pos:start="151:24" pos:end="151:28">wstat</name></name> <operator pos:start="151:30" pos:end="151:31">|=</operator> <name pos:start="151:33" pos:end="151:50">G_WSTAT_TCON_WRITE</name></expr>;</expr_stmt>



        <expr_stmt pos:start="155:9" pos:end="155:66"><expr pos:start="155:9" pos:end="155:65"><call pos:start="155:9" pos:end="155:65"><name pos:start="155:9" pos:end="155:15">DPRINTF</name><argument_list pos:start="155:16" pos:end="155:65">(<argument pos:start="155:17" pos:end="155:57"><expr pos:start="155:17" pos:end="155:57"><literal type="string" pos:start="155:17" pos:end="155:57">"global timer write to reg.g_tcon %llx\n"</literal></expr></argument>, <argument pos:start="155:60" pos:end="155:64"><expr pos:start="155:60" pos:end="155:64"><name pos:start="155:60" pos:end="155:64">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="159:9" pos:end="159:62">/* Start FRC if transition from disabled to enabled */</comment>

        <if_stmt pos:start="161:9" pos:end="167:9"><if pos:start="161:9" pos:end="167:9">if <condition pos:start="161:12" pos:end="163:37">(<expr pos:start="161:13" pos:end="163:36"><operator pos:start="161:13" pos:end="161:13">(</operator><name pos:start="161:14" pos:end="161:18">value</name> <operator pos:start="161:20" pos:end="161:20">&amp;</operator> <name pos:start="161:22" pos:end="161:40">G_TCON_TIMER_ENABLE</name><operator pos:start="161:41" pos:end="161:41">)</operator> <operator pos:start="161:43" pos:end="161:43">&gt;</operator> <operator pos:start="161:45" pos:end="161:45">(</operator><name pos:start="161:46" pos:end="161:52">old_val</name> <operator pos:start="161:54" pos:end="161:54">&amp;</operator>

                <name pos:start="163:17" pos:end="163:35">G_TCON_TIMER_ENABLE</name><operator pos:start="163:36" pos:end="163:36">)</operator></expr>)</condition> <block pos:start="163:39" pos:end="167:9">{<block_content pos:start="165:13" pos:end="165:47">

            <expr_stmt pos:start="165:13" pos:end="165:47"><expr pos:start="165:13" pos:end="165:46"><call pos:start="165:13" pos:end="165:46"><name pos:start="165:13" pos:end="165:33">exynos4210_gfrc_start</name><argument_list pos:start="165:34" pos:end="165:46">(<argument pos:start="165:35" pos:end="165:45"><expr pos:start="165:35" pos:end="165:45"><operator pos:start="165:35" pos:end="165:35">&amp;</operator><name pos:start="165:36" pos:end="165:45"><name pos:start="165:36" pos:end="165:36">s</name><operator pos:start="165:37" pos:end="165:38">-&gt;</operator><name pos:start="165:39" pos:end="165:45">g_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="169:9" pos:end="175:9"><if pos:start="169:9" pos:end="175:9">if <condition pos:start="169:12" pos:end="171:37">(<expr pos:start="169:13" pos:end="171:36"><operator pos:start="169:13" pos:end="169:13">(</operator><name pos:start="169:14" pos:end="169:18">value</name> <operator pos:start="169:20" pos:end="169:20">&amp;</operator> <name pos:start="169:22" pos:end="169:40">G_TCON_TIMER_ENABLE</name><operator pos:start="169:41" pos:end="169:41">)</operator> <operator pos:start="169:43" pos:end="169:43">&lt;</operator> <operator pos:start="169:45" pos:end="169:45">(</operator><name pos:start="169:46" pos:end="169:52">old_val</name> <operator pos:start="169:54" pos:end="169:54">&amp;</operator>

                <name pos:start="171:17" pos:end="171:35">G_TCON_TIMER_ENABLE</name><operator pos:start="171:36" pos:end="171:36">)</operator></expr>)</condition> <block pos:start="171:39" pos:end="175:9">{<block_content pos:start="173:13" pos:end="173:46">

            <expr_stmt pos:start="173:13" pos:end="173:46"><expr pos:start="173:13" pos:end="173:45"><call pos:start="173:13" pos:end="173:45"><name pos:start="173:13" pos:end="173:32">exynos4210_gfrc_stop</name><argument_list pos:start="173:33" pos:end="173:45">(<argument pos:start="173:34" pos:end="173:44"><expr pos:start="173:34" pos:end="173:44"><operator pos:start="173:34" pos:end="173:34">&amp;</operator><name pos:start="173:35" pos:end="173:44"><name pos:start="173:35" pos:end="173:35">s</name><operator pos:start="173:36" pos:end="173:37">-&gt;</operator><name pos:start="173:38" pos:end="173:44">g_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="179:9" pos:end="179:62">/* Start CMP if transition from disabled to enabled */</comment>

        <for pos:start="181:9" pos:end="191:9">for <control pos:start="181:13" pos:end="181:44">(<init pos:start="181:14" pos:end="181:19"><expr pos:start="181:14" pos:end="181:18"><name pos:start="181:14" pos:end="181:14">i</name> <operator pos:start="181:16" pos:end="181:16">=</operator> <literal type="number" pos:start="181:18" pos:end="181:18">0</literal></expr>;</init> <condition pos:start="181:21" pos:end="181:39"><expr pos:start="181:21" pos:end="181:38"><name pos:start="181:21" pos:end="181:21">i</name> <operator pos:start="181:23" pos:end="181:23">&lt;</operator> <name pos:start="181:25" pos:end="181:38">MCT_GT_CMP_NUM</name></expr>;</condition> <incr pos:start="181:41" pos:end="181:43"><expr pos:start="181:41" pos:end="181:43"><name pos:start="181:41" pos:end="181:41">i</name><operator pos:start="181:42" pos:end="181:43">++</operator></expr></incr>)</control> <block pos:start="181:46" pos:end="191:9">{<block_content pos:start="183:13" pos:end="189:13">

            <if_stmt pos:start="183:13" pos:end="189:13"><if pos:start="183:13" pos:end="189:13">if <condition pos:start="183:16" pos:end="185:43">(<expr pos:start="183:17" pos:end="185:42"><operator pos:start="183:17" pos:end="183:17">(</operator><name pos:start="183:18" pos:end="183:22">value</name> <operator pos:start="183:24" pos:end="183:24">&amp;</operator> <call pos:start="183:26" pos:end="183:46"><name pos:start="183:26" pos:end="183:43">G_TCON_COMP_ENABLE</name><argument_list pos:start="183:44" pos:end="183:46">(<argument pos:start="183:45" pos:end="183:45"><expr pos:start="183:45" pos:end="183:45"><name pos:start="183:45" pos:end="183:45">i</name></expr></argument>)</argument_list></call><operator pos:start="183:47" pos:end="183:47">)</operator> <operator pos:start="183:49" pos:end="183:50">!=</operator> <operator pos:start="183:52" pos:end="183:52">(</operator><name pos:start="183:53" pos:end="183:59">old_val</name> <operator pos:start="183:61" pos:end="183:61">&amp;</operator>

                    <call pos:start="185:21" pos:end="185:41"><name pos:start="185:21" pos:end="185:38">G_TCON_COMP_ENABLE</name><argument_list pos:start="185:39" pos:end="185:41">(<argument pos:start="185:40" pos:end="185:40"><expr pos:start="185:40" pos:end="185:40"><name pos:start="185:40" pos:end="185:40">i</name></expr></argument>)</argument_list></call><operator pos:start="185:42" pos:end="185:42">)</operator></expr>)</condition> <block pos:start="185:45" pos:end="189:13">{<block_content pos:start="187:17" pos:end="187:43">

                <expr_stmt pos:start="187:17" pos:end="187:43"><expr pos:start="187:17" pos:end="187:42"><call pos:start="187:17" pos:end="187:42"><name pos:start="187:17" pos:end="187:39">exynos4210_gfrc_restart</name><argument_list pos:start="187:40" pos:end="187:42">(<argument pos:start="187:41" pos:end="187:41"><expr pos:start="187:41" pos:end="187:41"><name pos:start="187:41" pos:end="187:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <break pos:start="193:9" pos:end="193:14">break;</break>



    <case pos:start="197:5" pos:end="197:21">case <expr pos:start="197:10" pos:end="197:20"><name pos:start="197:10" pos:end="197:20">G_INT_CSTAT</name></expr>:</case>

        <expr_stmt pos:start="199:9" pos:end="199:45"><expr pos:start="199:9" pos:end="199:44"><name pos:start="199:9" pos:end="199:32"><name pos:start="199:9" pos:end="199:9">s</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:18">g_timer</name><operator pos:start="199:19" pos:end="199:19">.</operator><name pos:start="199:20" pos:end="199:22">reg</name><operator pos:start="199:23" pos:end="199:23">.</operator><name pos:start="199:24" pos:end="199:32">int_cstat</name></name> <operator pos:start="199:34" pos:end="199:35">&amp;=</operator> <operator pos:start="199:37" pos:end="199:37">~</operator><operator pos:start="199:38" pos:end="199:38">(</operator><name pos:start="199:39" pos:end="199:43">value</name><operator pos:start="199:44" pos:end="199:44">)</operator></expr>;</expr_stmt>

        <for pos:start="201:9" pos:end="209:9">for <control pos:start="201:13" pos:end="201:44">(<init pos:start="201:14" pos:end="201:19"><expr pos:start="201:14" pos:end="201:18"><name pos:start="201:14" pos:end="201:14">i</name> <operator pos:start="201:16" pos:end="201:16">=</operator> <literal type="number" pos:start="201:18" pos:end="201:18">0</literal></expr>;</init> <condition pos:start="201:21" pos:end="201:39"><expr pos:start="201:21" pos:end="201:38"><name pos:start="201:21" pos:end="201:21">i</name> <operator pos:start="201:23" pos:end="201:23">&lt;</operator> <name pos:start="201:25" pos:end="201:38">MCT_GT_CMP_NUM</name></expr>;</condition> <incr pos:start="201:41" pos:end="201:43"><expr pos:start="201:41" pos:end="201:43"><name pos:start="201:41" pos:end="201:41">i</name><operator pos:start="201:42" pos:end="201:43">++</operator></expr></incr>)</control> <block pos:start="201:46" pos:end="209:9">{<block_content pos:start="203:13" pos:end="207:13">

            <if_stmt pos:start="203:13" pos:end="207:13"><if pos:start="203:13" pos:end="207:13">if <condition pos:start="203:16" pos:end="203:44">(<expr pos:start="203:17" pos:end="203:43"><name pos:start="203:17" pos:end="203:21">value</name> <operator pos:start="203:23" pos:end="203:23">&amp;</operator> <call pos:start="203:25" pos:end="203:43"><name pos:start="203:25" pos:end="203:40">G_INT_CSTAT_COMP</name><argument_list pos:start="203:41" pos:end="203:43">(<argument pos:start="203:42" pos:end="203:42"><expr pos:start="203:42" pos:end="203:42"><name pos:start="203:42" pos:end="203:42">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="203:46" pos:end="207:13">{<block_content pos:start="205:17" pos:end="205:59">

                <expr_stmt pos:start="205:17" pos:end="205:59"><expr pos:start="205:17" pos:end="205:58"><call pos:start="205:17" pos:end="205:58"><name pos:start="205:17" pos:end="205:42">exynos4210_gcomp_lower_irq</name><argument_list pos:start="205:43" pos:end="205:58">(<argument pos:start="205:44" pos:end="205:54"><expr pos:start="205:44" pos:end="205:54"><operator pos:start="205:44" pos:end="205:44">&amp;</operator><name pos:start="205:45" pos:end="205:54"><name pos:start="205:45" pos:end="205:45">s</name><operator pos:start="205:46" pos:end="205:47">-&gt;</operator><name pos:start="205:48" pos:end="205:54">g_timer</name></name></expr></argument>, <argument pos:start="205:57" pos:end="205:57"><expr pos:start="205:57" pos:end="205:57"><name pos:start="205:57" pos:end="205:57">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <break pos:start="211:9" pos:end="211:14">break;</break>



    <case pos:start="215:5" pos:end="215:19">case <expr pos:start="215:10" pos:end="215:18"><name pos:start="215:10" pos:end="215:18">G_INT_ENB</name></expr>:</case>



        <comment type="block" pos:start="219:9" pos:end="219:80">/* Raise IRQ if transition from disabled to enabled and CSTAT pending */</comment>

        <for pos:start="221:9" pos:end="245:9">for <control pos:start="221:13" pos:end="221:44">(<init pos:start="221:14" pos:end="221:19"><expr pos:start="221:14" pos:end="221:18"><name pos:start="221:14" pos:end="221:14">i</name> <operator pos:start="221:16" pos:end="221:16">=</operator> <literal type="number" pos:start="221:18" pos:end="221:18">0</literal></expr>;</init> <condition pos:start="221:21" pos:end="221:39"><expr pos:start="221:21" pos:end="221:38"><name pos:start="221:21" pos:end="221:21">i</name> <operator pos:start="221:23" pos:end="221:23">&lt;</operator> <name pos:start="221:25" pos:end="221:38">MCT_GT_CMP_NUM</name></expr>;</condition> <incr pos:start="221:41" pos:end="221:43"><expr pos:start="221:41" pos:end="221:43"><name pos:start="221:41" pos:end="221:41">i</name><operator pos:start="221:42" pos:end="221:43">++</operator></expr></incr>)</control> <block pos:start="221:46" pos:end="245:9">{<block_content pos:start="223:13" pos:end="243:13">

            <if_stmt pos:start="223:13" pos:end="233:13"><if pos:start="223:13" pos:end="233:13">if <condition pos:start="223:16" pos:end="225:37">(<expr pos:start="223:17" pos:end="225:36"><operator pos:start="223:17" pos:end="223:17">(</operator><name pos:start="223:18" pos:end="223:22">value</name> <operator pos:start="223:24" pos:end="223:24">&amp;</operator> <call pos:start="223:26" pos:end="223:40"><name pos:start="223:26" pos:end="223:37">G_INT_ENABLE</name><argument_list pos:start="223:38" pos:end="223:40">(<argument pos:start="223:39" pos:end="223:39"><expr pos:start="223:39" pos:end="223:39"><name pos:start="223:39" pos:end="223:39">i</name></expr></argument>)</argument_list></call><operator pos:start="223:41" pos:end="223:41">)</operator> <operator pos:start="223:43" pos:end="223:43">&gt;</operator> <operator pos:start="223:45" pos:end="223:45">(</operator><name pos:start="223:46" pos:end="223:64"><name pos:start="223:46" pos:end="223:46">s</name><operator pos:start="223:47" pos:end="223:48">-&gt;</operator><name pos:start="223:49" pos:end="223:55">g_timer</name><operator pos:start="223:56" pos:end="223:56">.</operator><name pos:start="223:57" pos:end="223:59">reg</name><operator pos:start="223:60" pos:end="223:60">.</operator><name pos:start="223:61" pos:end="223:64">tcon</name></name> <operator pos:start="223:66" pos:end="223:66">&amp;</operator>

                    <call pos:start="225:21" pos:end="225:35"><name pos:start="225:21" pos:end="225:32">G_INT_ENABLE</name><argument_list pos:start="225:33" pos:end="225:35">(<argument pos:start="225:34" pos:end="225:34"><expr pos:start="225:34" pos:end="225:34"><name pos:start="225:34" pos:end="225:34">i</name></expr></argument>)</argument_list></call><operator pos:start="225:36" pos:end="225:36">)</operator></expr>)</condition> <block pos:start="225:39" pos:end="233:13">{<block_content pos:start="227:17" pos:end="231:17">

                <if_stmt pos:start="227:17" pos:end="231:17"><if pos:start="227:17" pos:end="231:17">if <condition pos:start="227:20" pos:end="227:67">(<expr pos:start="227:21" pos:end="227:66"><name pos:start="227:21" pos:end="227:44"><name pos:start="227:21" pos:end="227:21">s</name><operator pos:start="227:22" pos:end="227:23">-&gt;</operator><name pos:start="227:24" pos:end="227:30">g_timer</name><operator pos:start="227:31" pos:end="227:31">.</operator><name pos:start="227:32" pos:end="227:34">reg</name><operator pos:start="227:35" pos:end="227:35">.</operator><name pos:start="227:36" pos:end="227:44">int_cstat</name></name> <operator pos:start="227:46" pos:end="227:46">&amp;</operator> <call pos:start="227:48" pos:end="227:66"><name pos:start="227:48" pos:end="227:63">G_INT_CSTAT_COMP</name><argument_list pos:start="227:64" pos:end="227:66">(<argument pos:start="227:65" pos:end="227:65"><expr pos:start="227:65" pos:end="227:65"><name pos:start="227:65" pos:end="227:65">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="227:69" pos:end="231:17">{<block_content pos:start="229:21" pos:end="229:63">

                    <expr_stmt pos:start="229:21" pos:end="229:63"><expr pos:start="229:21" pos:end="229:62"><call pos:start="229:21" pos:end="229:62"><name pos:start="229:21" pos:end="229:46">exynos4210_gcomp_raise_irq</name><argument_list pos:start="229:47" pos:end="229:62">(<argument pos:start="229:48" pos:end="229:58"><expr pos:start="229:48" pos:end="229:58"><operator pos:start="229:48" pos:end="229:48">&amp;</operator><name pos:start="229:49" pos:end="229:58"><name pos:start="229:49" pos:end="229:49">s</name><operator pos:start="229:50" pos:end="229:51">-&gt;</operator><name pos:start="229:52" pos:end="229:58">g_timer</name></name></expr></argument>, <argument pos:start="229:61" pos:end="229:61"><expr pos:start="229:61" pos:end="229:61"><name pos:start="229:61" pos:end="229:61">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="237:13" pos:end="243:13"><if pos:start="237:13" pos:end="243:13">if <condition pos:start="237:16" pos:end="239:37">(<expr pos:start="237:17" pos:end="239:36"><operator pos:start="237:17" pos:end="237:17">(</operator><name pos:start="237:18" pos:end="237:22">value</name> <operator pos:start="237:24" pos:end="237:24">&amp;</operator> <call pos:start="237:26" pos:end="237:40"><name pos:start="237:26" pos:end="237:37">G_INT_ENABLE</name><argument_list pos:start="237:38" pos:end="237:40">(<argument pos:start="237:39" pos:end="237:39"><expr pos:start="237:39" pos:end="237:39"><name pos:start="237:39" pos:end="237:39">i</name></expr></argument>)</argument_list></call><operator pos:start="237:41" pos:end="237:41">)</operator> <operator pos:start="237:43" pos:end="237:43">&lt;</operator> <operator pos:start="237:45" pos:end="237:45">(</operator><name pos:start="237:46" pos:end="237:64"><name pos:start="237:46" pos:end="237:46">s</name><operator pos:start="237:47" pos:end="237:48">-&gt;</operator><name pos:start="237:49" pos:end="237:55">g_timer</name><operator pos:start="237:56" pos:end="237:56">.</operator><name pos:start="237:57" pos:end="237:59">reg</name><operator pos:start="237:60" pos:end="237:60">.</operator><name pos:start="237:61" pos:end="237:64">tcon</name></name> <operator pos:start="237:66" pos:end="237:66">&amp;</operator>

                    <call pos:start="239:21" pos:end="239:35"><name pos:start="239:21" pos:end="239:32">G_INT_ENABLE</name><argument_list pos:start="239:33" pos:end="239:35">(<argument pos:start="239:34" pos:end="239:34"><expr pos:start="239:34" pos:end="239:34"><name pos:start="239:34" pos:end="239:34">i</name></expr></argument>)</argument_list></call><operator pos:start="239:36" pos:end="239:36">)</operator></expr>)</condition> <block pos:start="239:39" pos:end="243:13">{<block_content pos:start="241:17" pos:end="241:59">

                <expr_stmt pos:start="241:17" pos:end="241:59"><expr pos:start="241:17" pos:end="241:58"><call pos:start="241:17" pos:end="241:58"><name pos:start="241:17" pos:end="241:42">exynos4210_gcomp_lower_irq</name><argument_list pos:start="241:43" pos:end="241:58">(<argument pos:start="241:44" pos:end="241:54"><expr pos:start="241:44" pos:end="241:54"><operator pos:start="241:44" pos:end="241:44">&amp;</operator><name pos:start="241:45" pos:end="241:54"><name pos:start="241:45" pos:end="241:45">s</name><operator pos:start="241:46" pos:end="241:47">-&gt;</operator><name pos:start="241:48" pos:end="241:54">g_timer</name></name></expr></argument>, <argument pos:start="241:57" pos:end="241:57"><expr pos:start="241:57" pos:end="241:57"><name pos:start="241:57" pos:end="241:57">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="249:9" pos:end="249:57"><expr pos:start="249:9" pos:end="249:56"><call pos:start="249:9" pos:end="249:56"><name pos:start="249:9" pos:end="249:15">DPRINTF</name><argument_list pos:start="249:16" pos:end="249:56">(<argument pos:start="249:17" pos:end="249:48"><expr pos:start="249:17" pos:end="249:48"><literal type="string" pos:start="249:17" pos:end="249:48">"global timer INT enable %llx\n"</literal></expr></argument>, <argument pos:start="249:51" pos:end="249:55"><expr pos:start="249:51" pos:end="249:55"><name pos:start="249:51" pos:end="249:55">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="251:9" pos:end="251:39"><expr pos:start="251:9" pos:end="251:38"><name pos:start="251:9" pos:end="251:30"><name pos:start="251:9" pos:end="251:9">s</name><operator pos:start="251:10" pos:end="251:11">-&gt;</operator><name pos:start="251:12" pos:end="251:18">g_timer</name><operator pos:start="251:19" pos:end="251:19">.</operator><name pos:start="251:20" pos:end="251:22">reg</name><operator pos:start="251:23" pos:end="251:23">.</operator><name pos:start="251:24" pos:end="251:30">int_enb</name></name> <operator pos:start="251:32" pos:end="251:32">=</operator> <name pos:start="251:34" pos:end="251:38">value</name></expr>;</expr_stmt>

        <break pos:start="253:9" pos:end="253:14">break;</break>



    <case pos:start="257:5" pos:end="257:17">case <expr pos:start="257:10" pos:end="257:16"><name pos:start="257:10" pos:end="257:16">G_WSTAT</name></expr>:</case>

        <expr_stmt pos:start="259:9" pos:end="259:41"><expr pos:start="259:9" pos:end="259:40"><name pos:start="259:9" pos:end="259:28"><name pos:start="259:9" pos:end="259:9">s</name><operator pos:start="259:10" pos:end="259:11">-&gt;</operator><name pos:start="259:12" pos:end="259:18">g_timer</name><operator pos:start="259:19" pos:end="259:19">.</operator><name pos:start="259:20" pos:end="259:22">reg</name><operator pos:start="259:23" pos:end="259:23">.</operator><name pos:start="259:24" pos:end="259:28">wstat</name></name> <operator pos:start="259:30" pos:end="259:31">&amp;=</operator> <operator pos:start="259:33" pos:end="259:33">~</operator><operator pos:start="259:34" pos:end="259:34">(</operator><name pos:start="259:35" pos:end="259:39">value</name><operator pos:start="259:40" pos:end="259:40">)</operator></expr>;</expr_stmt>

        <break pos:start="261:9" pos:end="261:14">break;</break>



    <case pos:start="265:5" pos:end="265:26">case <expr pos:start="265:10" pos:end="265:25"><name pos:start="265:10" pos:end="265:25">G_COMP0_ADD_INCR</name></expr>:</case> <case pos:start="265:28" pos:end="265:49">case <expr pos:start="265:33" pos:end="265:48"><name pos:start="265:33" pos:end="265:48">G_COMP1_ADD_INCR</name></expr>:</case>

    <case pos:start="267:5" pos:end="267:26">case <expr pos:start="267:10" pos:end="267:25"><name pos:start="267:10" pos:end="267:25">G_COMP2_ADD_INCR</name></expr>:</case> <case pos:start="267:28" pos:end="267:49">case <expr pos:start="267:33" pos:end="267:48"><name pos:start="267:33" pos:end="267:48">G_COMP3_ADD_INCR</name></expr>:</case>

        <expr_stmt pos:start="269:9" pos:end="269:48"><expr pos:start="269:9" pos:end="269:47"><name pos:start="269:9" pos:end="269:13">index</name> <operator pos:start="269:15" pos:end="269:15">=</operator> <call pos:start="269:17" pos:end="269:47"><name pos:start="269:17" pos:end="269:39">GET_G_COMP_ADD_INCR_IDX</name><argument_list pos:start="269:40" pos:end="269:47">(<argument pos:start="269:41" pos:end="269:46"><expr pos:start="269:41" pos:end="269:46"><name pos:start="269:41" pos:end="269:46">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:52"><expr pos:start="271:9" pos:end="271:51"><name pos:start="271:9" pos:end="271:43"><name pos:start="271:9" pos:end="271:9">s</name><operator pos:start="271:10" pos:end="271:11">-&gt;</operator><name pos:start="271:12" pos:end="271:18">g_timer</name><operator pos:start="271:19" pos:end="271:19">.</operator><name pos:start="271:20" pos:end="271:22">reg</name><operator pos:start="271:23" pos:end="271:23">.</operator><name pos:start="271:24" pos:end="271:36">comp_add_incr</name><index pos:start="271:37" pos:end="271:43">[<expr pos:start="271:38" pos:end="271:42"><name pos:start="271:38" pos:end="271:42">index</name></expr>]</index></name> <operator pos:start="271:45" pos:end="271:45">=</operator> <name pos:start="271:47" pos:end="271:51">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:60"><expr pos:start="273:9" pos:end="273:59"><name pos:start="273:9" pos:end="273:28"><name pos:start="273:9" pos:end="273:9">s</name><operator pos:start="273:10" pos:end="273:11">-&gt;</operator><name pos:start="273:12" pos:end="273:18">g_timer</name><operator pos:start="273:19" pos:end="273:19">.</operator><name pos:start="273:20" pos:end="273:22">reg</name><operator pos:start="273:23" pos:end="273:23">.</operator><name pos:start="273:24" pos:end="273:28">wstat</name></name> <operator pos:start="273:30" pos:end="273:31">|=</operator> <call pos:start="273:33" pos:end="273:59"><name pos:start="273:33" pos:end="273:52">G_WSTAT_COMP_ADDINCR</name><argument_list pos:start="273:53" pos:end="273:59">(<argument pos:start="273:54" pos:end="273:58"><expr pos:start="273:54" pos:end="273:58"><name pos:start="273:54" pos:end="273:58">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="275:9" pos:end="275:14">break;</break>



        <comment type="block" pos:start="279:9" pos:end="279:26">/* Local timers */</comment>

    <case pos:start="281:5" pos:end="281:17">case <expr pos:start="281:10" pos:end="281:16"><name pos:start="281:10" pos:end="281:16">L0_TCON</name></expr>:</case> <case pos:start="281:19" pos:end="281:31">case <expr pos:start="281:24" pos:end="281:30"><name pos:start="281:24" pos:end="281:30">L1_TCON</name></expr>:</case>

        <expr_stmt pos:start="283:9" pos:end="283:39"><expr pos:start="283:9" pos:end="283:38"><name pos:start="283:9" pos:end="283:12">lt_i</name> <operator pos:start="283:14" pos:end="283:14">=</operator> <call pos:start="283:16" pos:end="283:38"><name pos:start="283:16" pos:end="283:30">GET_L_TIMER_IDX</name><argument_list pos:start="283:31" pos:end="283:38">(<argument pos:start="283:32" pos:end="283:37"><expr pos:start="283:32" pos:end="283:37"><name pos:start="283:32" pos:end="283:37">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:44"><expr pos:start="285:9" pos:end="285:43"><name pos:start="285:9" pos:end="285:15">old_val</name> <operator pos:start="285:17" pos:end="285:17">=</operator> <name pos:start="285:19" pos:end="285:34"><name pos:start="285:19" pos:end="285:19">s</name><operator pos:start="285:20" pos:end="285:21">-&gt;</operator><name pos:start="285:22" pos:end="285:28">l_timer</name><index pos:start="285:29" pos:end="285:34">[<expr pos:start="285:30" pos:end="285:33"><name pos:start="285:30" pos:end="285:33">lt_i</name></expr>]</index></name><operator pos:start="285:35" pos:end="285:35">.</operator><name pos:start="285:36" pos:end="285:43"><name pos:start="285:36" pos:end="285:38">reg</name><operator pos:start="285:39" pos:end="285:39">.</operator><name pos:start="285:40" pos:end="285:43">tcon</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="289:9" pos:end="289:57"><expr pos:start="289:9" pos:end="289:56"><name pos:start="289:9" pos:end="289:24"><name pos:start="289:9" pos:end="289:9">s</name><operator pos:start="289:10" pos:end="289:11">-&gt;</operator><name pos:start="289:12" pos:end="289:18">l_timer</name><index pos:start="289:19" pos:end="289:24">[<expr pos:start="289:20" pos:end="289:23"><name pos:start="289:20" pos:end="289:23">lt_i</name></expr>]</index></name><operator pos:start="289:25" pos:end="289:25">.</operator><name pos:start="289:26" pos:end="289:34"><name pos:start="289:26" pos:end="289:28">reg</name><operator pos:start="289:29" pos:end="289:29">.</operator><name pos:start="289:30" pos:end="289:34">wstat</name></name> <operator pos:start="289:36" pos:end="289:37">|=</operator> <name pos:start="289:39" pos:end="289:56">L_WSTAT_TCON_WRITE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:42"><expr pos:start="291:9" pos:end="291:41"><name pos:start="291:9" pos:end="291:24"><name pos:start="291:9" pos:end="291:9">s</name><operator pos:start="291:10" pos:end="291:11">-&gt;</operator><name pos:start="291:12" pos:end="291:18">l_timer</name><index pos:start="291:19" pos:end="291:24">[<expr pos:start="291:20" pos:end="291:23"><name pos:start="291:20" pos:end="291:23">lt_i</name></expr>]</index></name><operator pos:start="291:25" pos:end="291:25">.</operator><name pos:start="291:26" pos:end="291:33"><name pos:start="291:26" pos:end="291:28">reg</name><operator pos:start="291:29" pos:end="291:29">.</operator><name pos:start="291:30" pos:end="291:33">tcon</name></name> <operator pos:start="291:35" pos:end="291:35">=</operator> <name pos:start="291:37" pos:end="291:41">value</name></expr>;</expr_stmt>



        <comment type="block" pos:start="295:9" pos:end="295:28">/* Stop local CNT */</comment>

        <if_stmt pos:start="297:9" pos:end="305:9"><if pos:start="297:9" pos:end="305:9">if <condition pos:start="297:12" pos:end="299:46">(<expr pos:start="297:13" pos:end="299:45"><operator pos:start="297:13" pos:end="297:13">(</operator><name pos:start="297:14" pos:end="297:18">value</name> <operator pos:start="297:20" pos:end="297:20">&amp;</operator> <name pos:start="297:22" pos:end="297:38">L_TCON_TICK_START</name><operator pos:start="297:39" pos:end="297:39">)</operator> <operator pos:start="297:41" pos:end="297:41">&lt;</operator>

                <operator pos:start="299:17" pos:end="299:17">(</operator><name pos:start="299:18" pos:end="299:24">old_val</name> <operator pos:start="299:26" pos:end="299:26">&amp;</operator> <name pos:start="299:28" pos:end="299:44">L_TCON_TICK_START</name><operator pos:start="299:45" pos:end="299:45">)</operator></expr>)</condition> <block pos:start="299:48" pos:end="305:9">{<block_content pos:start="301:13" pos:end="303:68">

            <expr_stmt pos:start="301:13" pos:end="301:56"><expr pos:start="301:13" pos:end="301:55"><call pos:start="301:13" pos:end="301:55"><name pos:start="301:13" pos:end="301:19">DPRINTF</name><argument_list pos:start="301:20" pos:end="301:55">(<argument pos:start="301:21" pos:end="301:48"><expr pos:start="301:21" pos:end="301:48"><literal type="string" pos:start="301:21" pos:end="301:48">"local timer[%d] stop cnt\n"</literal></expr></argument>, <argument pos:start="301:51" pos:end="301:54"><expr pos:start="301:51" pos:end="301:54"><name pos:start="301:51" pos:end="301:54">lt_i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:68"><expr pos:start="303:13" pos:end="303:67"><call pos:start="303:13" pos:end="303:67"><name pos:start="303:13" pos:end="303:37">exynos4210_ltick_cnt_stop</name><argument_list pos:start="303:38" pos:end="303:67">(<argument pos:start="303:39" pos:end="303:66"><expr pos:start="303:39" pos:end="303:66"><operator pos:start="303:39" pos:end="303:39">&amp;</operator><name pos:start="303:40" pos:end="303:55"><name pos:start="303:40" pos:end="303:40">s</name><operator pos:start="303:41" pos:end="303:42">-&gt;</operator><name pos:start="303:43" pos:end="303:49">l_timer</name><index pos:start="303:50" pos:end="303:55">[<expr pos:start="303:51" pos:end="303:54"><name pos:start="303:51" pos:end="303:54">lt_i</name></expr>]</index></name><operator pos:start="303:56" pos:end="303:56">.</operator><name pos:start="303:57" pos:end="303:66">tick_timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="309:9" pos:end="309:28">/* Stop local INT */</comment>

        <if_stmt pos:start="311:9" pos:end="319:9"><if pos:start="311:9" pos:end="319:9">if <condition pos:start="311:12" pos:end="313:45">(<expr pos:start="311:13" pos:end="313:44"><operator pos:start="311:13" pos:end="311:13">(</operator><name pos:start="311:14" pos:end="311:18">value</name> <operator pos:start="311:20" pos:end="311:20">&amp;</operator> <name pos:start="311:22" pos:end="311:37">L_TCON_INT_START</name><operator pos:start="311:38" pos:end="311:38">)</operator> <operator pos:start="311:40" pos:end="311:40">&lt;</operator>

                <operator pos:start="313:17" pos:end="313:17">(</operator><name pos:start="313:18" pos:end="313:24">old_val</name> <operator pos:start="313:26" pos:end="313:26">&amp;</operator> <name pos:start="313:28" pos:end="313:43">L_TCON_INT_START</name><operator pos:start="313:44" pos:end="313:44">)</operator></expr>)</condition> <block pos:start="313:47" pos:end="319:9">{<block_content pos:start="315:13" pos:end="317:68">

            <expr_stmt pos:start="315:13" pos:end="315:56"><expr pos:start="315:13" pos:end="315:55"><call pos:start="315:13" pos:end="315:55"><name pos:start="315:13" pos:end="315:19">DPRINTF</name><argument_list pos:start="315:20" pos:end="315:55">(<argument pos:start="315:21" pos:end="315:48"><expr pos:start="315:21" pos:end="315:48"><literal type="string" pos:start="315:21" pos:end="315:48">"local timer[%d] stop int\n"</literal></expr></argument>, <argument pos:start="315:51" pos:end="315:54"><expr pos:start="315:51" pos:end="315:54"><name pos:start="315:51" pos:end="315:54">lt_i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="317:13" pos:end="317:68"><expr pos:start="317:13" pos:end="317:67"><call pos:start="317:13" pos:end="317:67"><name pos:start="317:13" pos:end="317:37">exynos4210_ltick_int_stop</name><argument_list pos:start="317:38" pos:end="317:67">(<argument pos:start="317:39" pos:end="317:66"><expr pos:start="317:39" pos:end="317:66"><operator pos:start="317:39" pos:end="317:39">&amp;</operator><name pos:start="317:40" pos:end="317:55"><name pos:start="317:40" pos:end="317:40">s</name><operator pos:start="317:41" pos:end="317:42">-&gt;</operator><name pos:start="317:43" pos:end="317:49">l_timer</name><index pos:start="317:50" pos:end="317:55">[<expr pos:start="317:51" pos:end="317:54"><name pos:start="317:51" pos:end="317:54">lt_i</name></expr>]</index></name><operator pos:start="317:56" pos:end="317:56">.</operator><name pos:start="317:57" pos:end="317:66">tick_timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="323:9" pos:end="323:29">/* Start local CNT */</comment>

        <if_stmt pos:start="325:9" pos:end="333:9"><if pos:start="325:9" pos:end="333:9">if <condition pos:start="325:12" pos:end="327:38">(<expr pos:start="325:13" pos:end="327:37"><operator pos:start="325:13" pos:end="325:13">(</operator><name pos:start="325:14" pos:end="325:18">value</name> <operator pos:start="325:20" pos:end="325:20">&amp;</operator> <name pos:start="325:22" pos:end="325:38">L_TCON_TICK_START</name><operator pos:start="325:39" pos:end="325:39">)</operator> <operator pos:start="325:41" pos:end="325:41">&gt;</operator>

        <operator pos:start="327:9" pos:end="327:9">(</operator><name pos:start="327:10" pos:end="327:16">old_val</name> <operator pos:start="327:18" pos:end="327:18">&amp;</operator> <name pos:start="327:20" pos:end="327:36">L_TCON_TICK_START</name><operator pos:start="327:37" pos:end="327:37">)</operator></expr>)</condition> <block pos:start="327:40" pos:end="333:9">{<block_content pos:start="329:13" pos:end="331:69">

            <expr_stmt pos:start="329:13" pos:end="329:57"><expr pos:start="329:13" pos:end="329:56"><call pos:start="329:13" pos:end="329:56"><name pos:start="329:13" pos:end="329:19">DPRINTF</name><argument_list pos:start="329:20" pos:end="329:56">(<argument pos:start="329:21" pos:end="329:49"><expr pos:start="329:21" pos:end="329:49"><literal type="string" pos:start="329:21" pos:end="329:49">"local timer[%d] start cnt\n"</literal></expr></argument>, <argument pos:start="329:52" pos:end="329:55"><expr pos:start="329:52" pos:end="329:55"><name pos:start="329:52" pos:end="329:55">lt_i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="331:13" pos:end="331:69"><expr pos:start="331:13" pos:end="331:68"><call pos:start="331:13" pos:end="331:68"><name pos:start="331:13" pos:end="331:38">exynos4210_ltick_cnt_start</name><argument_list pos:start="331:39" pos:end="331:68">(<argument pos:start="331:40" pos:end="331:67"><expr pos:start="331:40" pos:end="331:67"><operator pos:start="331:40" pos:end="331:40">&amp;</operator><name pos:start="331:41" pos:end="331:56"><name pos:start="331:41" pos:end="331:41">s</name><operator pos:start="331:42" pos:end="331:43">-&gt;</operator><name pos:start="331:44" pos:end="331:50">l_timer</name><index pos:start="331:51" pos:end="331:56">[<expr pos:start="331:52" pos:end="331:55"><name pos:start="331:52" pos:end="331:55">lt_i</name></expr>]</index></name><operator pos:start="331:57" pos:end="331:57">.</operator><name pos:start="331:58" pos:end="331:67">tick_timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="337:9" pos:end="337:29">/* Start local INT */</comment>

        <if_stmt pos:start="339:9" pos:end="347:9"><if pos:start="339:9" pos:end="347:9">if <condition pos:start="339:12" pos:end="341:37">(<expr pos:start="339:13" pos:end="341:36"><operator pos:start="339:13" pos:end="339:13">(</operator><name pos:start="339:14" pos:end="339:18">value</name> <operator pos:start="339:20" pos:end="339:20">&amp;</operator> <name pos:start="339:22" pos:end="339:37">L_TCON_INT_START</name><operator pos:start="339:38" pos:end="339:38">)</operator> <operator pos:start="339:40" pos:end="339:40">&gt;</operator>

        <operator pos:start="341:9" pos:end="341:9">(</operator><name pos:start="341:10" pos:end="341:16">old_val</name> <operator pos:start="341:18" pos:end="341:18">&amp;</operator> <name pos:start="341:20" pos:end="341:35">L_TCON_INT_START</name><operator pos:start="341:36" pos:end="341:36">)</operator></expr>)</condition> <block pos:start="341:39" pos:end="347:9">{<block_content pos:start="343:13" pos:end="345:69">

            <expr_stmt pos:start="343:13" pos:end="343:57"><expr pos:start="343:13" pos:end="343:56"><call pos:start="343:13" pos:end="343:56"><name pos:start="343:13" pos:end="343:19">DPRINTF</name><argument_list pos:start="343:20" pos:end="343:56">(<argument pos:start="343:21" pos:end="343:49"><expr pos:start="343:21" pos:end="343:49"><literal type="string" pos:start="343:21" pos:end="343:49">"local timer[%d] start int\n"</literal></expr></argument>, <argument pos:start="343:52" pos:end="343:55"><expr pos:start="343:52" pos:end="343:55"><name pos:start="343:52" pos:end="343:55">lt_i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="345:13" pos:end="345:69"><expr pos:start="345:13" pos:end="345:68"><call pos:start="345:13" pos:end="345:68"><name pos:start="345:13" pos:end="345:38">exynos4210_ltick_int_start</name><argument_list pos:start="345:39" pos:end="345:68">(<argument pos:start="345:40" pos:end="345:67"><expr pos:start="345:40" pos:end="345:67"><operator pos:start="345:40" pos:end="345:40">&amp;</operator><name pos:start="345:41" pos:end="345:56"><name pos:start="345:41" pos:end="345:41">s</name><operator pos:start="345:42" pos:end="345:43">-&gt;</operator><name pos:start="345:44" pos:end="345:50">l_timer</name><index pos:start="345:51" pos:end="345:56">[<expr pos:start="345:52" pos:end="345:55"><name pos:start="345:52" pos:end="345:55">lt_i</name></expr>]</index></name><operator pos:start="345:57" pos:end="345:57">.</operator><name pos:start="345:58" pos:end="345:67">tick_timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="351:9" pos:end="351:53">/* Start or Stop local FRC if TCON changed */</comment>

        <if_stmt pos:start="353:9" pos:end="361:9"><if pos:start="353:9" pos:end="361:9">if <condition pos:start="353:12" pos:end="355:55">(<expr pos:start="353:13" pos:end="355:54"><operator pos:start="353:13" pos:end="353:13">(</operator><name pos:start="353:14" pos:end="353:18">value</name> <operator pos:start="353:20" pos:end="353:20">&amp;</operator> <name pos:start="353:22" pos:end="353:37">L_TCON_FRC_START</name><operator pos:start="353:38" pos:end="353:38">)</operator> <operator pos:start="353:40" pos:end="353:40">&gt;</operator>

        <operator pos:start="355:9" pos:end="355:9">(</operator><name pos:start="355:10" pos:end="355:25"><name pos:start="355:10" pos:end="355:10">s</name><operator pos:start="355:11" pos:end="355:12">-&gt;</operator><name pos:start="355:13" pos:end="355:19">l_timer</name><index pos:start="355:20" pos:end="355:25">[<expr pos:start="355:21" pos:end="355:24"><name pos:start="355:21" pos:end="355:24">lt_i</name></expr>]</index></name><operator pos:start="355:26" pos:end="355:26">.</operator><name pos:start="355:27" pos:end="355:34"><name pos:start="355:27" pos:end="355:29">reg</name><operator pos:start="355:30" pos:end="355:30">.</operator><name pos:start="355:31" pos:end="355:34">tcon</name></name> <operator pos:start="355:36" pos:end="355:36">&amp;</operator> <name pos:start="355:38" pos:end="355:53">L_TCON_FRC_START</name><operator pos:start="355:54" pos:end="355:54">)</operator></expr>)</condition> <block pos:start="355:57" pos:end="361:9">{<block_content pos:start="357:13" pos:end="359:53">

            <expr_stmt pos:start="357:13" pos:end="357:57"><expr pos:start="357:13" pos:end="357:56"><call pos:start="357:13" pos:end="357:56"><name pos:start="357:13" pos:end="357:19">DPRINTF</name><argument_list pos:start="357:20" pos:end="357:56">(<argument pos:start="357:21" pos:end="357:49"><expr pos:start="357:21" pos:end="357:49"><literal type="string" pos:start="357:21" pos:end="357:49">"local timer[%d] start frc\n"</literal></expr></argument>, <argument pos:start="357:52" pos:end="357:55"><expr pos:start="357:52" pos:end="357:55"><name pos:start="357:52" pos:end="357:55">lt_i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="359:13" pos:end="359:53"><expr pos:start="359:13" pos:end="359:52"><call pos:start="359:13" pos:end="359:52"><name pos:start="359:13" pos:end="359:33">exynos4210_lfrc_start</name><argument_list pos:start="359:34" pos:end="359:52">(<argument pos:start="359:35" pos:end="359:51"><expr pos:start="359:35" pos:end="359:51"><operator pos:start="359:35" pos:end="359:35">&amp;</operator><name pos:start="359:36" pos:end="359:51"><name pos:start="359:36" pos:end="359:36">s</name><operator pos:start="359:37" pos:end="359:38">-&gt;</operator><name pos:start="359:39" pos:end="359:45">l_timer</name><index pos:start="359:46" pos:end="359:51">[<expr pos:start="359:47" pos:end="359:50"><name pos:start="359:47" pos:end="359:50">lt_i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="363:9" pos:end="371:9"><if pos:start="363:9" pos:end="371:9">if <condition pos:start="363:12" pos:end="365:63">(<expr pos:start="363:13" pos:end="365:62"><operator pos:start="363:13" pos:end="363:13">(</operator><name pos:start="363:14" pos:end="363:18">value</name> <operator pos:start="363:20" pos:end="363:20">&amp;</operator> <name pos:start="363:22" pos:end="363:37">L_TCON_FRC_START</name><operator pos:start="363:38" pos:end="363:38">)</operator> <operator pos:start="363:40" pos:end="363:40">&lt;</operator>

                <operator pos:start="365:17" pos:end="365:17">(</operator><name pos:start="365:18" pos:end="365:33"><name pos:start="365:18" pos:end="365:18">s</name><operator pos:start="365:19" pos:end="365:20">-&gt;</operator><name pos:start="365:21" pos:end="365:27">l_timer</name><index pos:start="365:28" pos:end="365:33">[<expr pos:start="365:29" pos:end="365:32"><name pos:start="365:29" pos:end="365:32">lt_i</name></expr>]</index></name><operator pos:start="365:34" pos:end="365:34">.</operator><name pos:start="365:35" pos:end="365:42"><name pos:start="365:35" pos:end="365:37">reg</name><operator pos:start="365:38" pos:end="365:38">.</operator><name pos:start="365:39" pos:end="365:42">tcon</name></name> <operator pos:start="365:44" pos:end="365:44">&amp;</operator> <name pos:start="365:46" pos:end="365:61">L_TCON_FRC_START</name><operator pos:start="365:62" pos:end="365:62">)</operator></expr>)</condition> <block pos:start="365:65" pos:end="371:9">{<block_content pos:start="367:13" pos:end="369:52">

            <expr_stmt pos:start="367:13" pos:end="367:56"><expr pos:start="367:13" pos:end="367:55"><call pos:start="367:13" pos:end="367:55"><name pos:start="367:13" pos:end="367:19">DPRINTF</name><argument_list pos:start="367:20" pos:end="367:55">(<argument pos:start="367:21" pos:end="367:48"><expr pos:start="367:21" pos:end="367:48"><literal type="string" pos:start="367:21" pos:end="367:48">"local timer[%d] stop frc\n"</literal></expr></argument>, <argument pos:start="367:51" pos:end="367:54"><expr pos:start="367:51" pos:end="367:54"><name pos:start="367:51" pos:end="367:54">lt_i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:52"><expr pos:start="369:13" pos:end="369:51"><call pos:start="369:13" pos:end="369:51"><name pos:start="369:13" pos:end="369:32">exynos4210_lfrc_stop</name><argument_list pos:start="369:33" pos:end="369:51">(<argument pos:start="369:34" pos:end="369:50"><expr pos:start="369:34" pos:end="369:50"><operator pos:start="369:34" pos:end="369:34">&amp;</operator><name pos:start="369:35" pos:end="369:50"><name pos:start="369:35" pos:end="369:35">s</name><operator pos:start="369:36" pos:end="369:37">-&gt;</operator><name pos:start="369:38" pos:end="369:44">l_timer</name><index pos:start="369:45" pos:end="369:50">[<expr pos:start="369:46" pos:end="369:49"><name pos:start="369:46" pos:end="369:49">lt_i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="373:9" pos:end="373:14">break;</break>



    <case pos:start="377:5" pos:end="377:18">case <expr pos:start="377:10" pos:end="377:17"><name pos:start="377:10" pos:end="377:17">L0_TCNTB</name></expr>:</case> <case pos:start="377:20" pos:end="377:33">case <expr pos:start="377:25" pos:end="377:32"><name pos:start="377:25" pos:end="377:32">L1_TCNTB</name></expr>:</case>



        <expr_stmt pos:start="381:9" pos:end="381:39"><expr pos:start="381:9" pos:end="381:38"><name pos:start="381:9" pos:end="381:12">lt_i</name> <operator pos:start="381:14" pos:end="381:14">=</operator> <call pos:start="381:16" pos:end="381:38"><name pos:start="381:16" pos:end="381:30">GET_L_TIMER_IDX</name><argument_list pos:start="381:31" pos:end="381:38">(<argument pos:start="381:32" pos:end="381:37"><expr pos:start="381:32" pos:end="381:37"><name pos:start="381:32" pos:end="381:37">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="383:9" pos:end="383:54"><expr pos:start="383:9" pos:end="383:53"><name pos:start="383:9" pos:end="383:13">index</name> <operator pos:start="383:15" pos:end="383:15">=</operator> <call pos:start="383:17" pos:end="383:53"><name pos:start="383:17" pos:end="383:39">GET_L_TIMER_CNT_REG_IDX</name><argument_list pos:start="383:40" pos:end="383:53">(<argument pos:start="383:41" pos:end="383:46"><expr pos:start="383:41" pos:end="383:46"><name pos:start="383:41" pos:end="383:46">offset</name></expr></argument>, <argument pos:start="383:49" pos:end="383:52"><expr pos:start="383:49" pos:end="383:52"><name pos:start="383:49" pos:end="383:52">lt_i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="387:9" pos:end="395:11">/*

         * TCNTB is updated to internal register only after CNT expired.

         * Due to this we should reload timer to nearest moment when CNT is

         * expired and then in event handler update tcntb to new TCNTB value.

         */</comment>

        <expr_stmt pos:start="397:9" pos:end="399:51"><expr pos:start="397:9" pos:end="399:50"><call pos:start="397:9" pos:end="399:50"><name pos:start="397:9" pos:end="397:33">exynos4210_ltick_set_cntb</name><argument_list pos:start="397:34" pos:end="399:50">(<argument pos:start="397:35" pos:end="397:62"><expr pos:start="397:35" pos:end="397:62"><operator pos:start="397:35" pos:end="397:35">&amp;</operator><name pos:start="397:36" pos:end="397:51"><name pos:start="397:36" pos:end="397:36">s</name><operator pos:start="397:37" pos:end="397:38">-&gt;</operator><name pos:start="397:39" pos:end="397:45">l_timer</name><index pos:start="397:46" pos:end="397:51">[<expr pos:start="397:47" pos:end="397:50"><name pos:start="397:47" pos:end="397:50">lt_i</name></expr>]</index></name><operator pos:start="397:52" pos:end="397:52">.</operator><name pos:start="397:53" pos:end="397:62">tick_timer</name></expr></argument>, <argument pos:start="397:65" pos:end="397:69"><expr pos:start="397:65" pos:end="397:69"><name pos:start="397:65" pos:end="397:69">value</name></expr></argument>,

                <argument pos:start="399:17" pos:end="399:49"><expr pos:start="399:17" pos:end="399:49"><name pos:start="399:17" pos:end="399:32"><name pos:start="399:17" pos:end="399:17">s</name><operator pos:start="399:18" pos:end="399:19">-&gt;</operator><name pos:start="399:20" pos:end="399:26">l_timer</name><index pos:start="399:27" pos:end="399:32">[<expr pos:start="399:28" pos:end="399:31"><name pos:start="399:28" pos:end="399:31">lt_i</name></expr>]</index></name><operator pos:start="399:33" pos:end="399:33">.</operator><name pos:start="399:34" pos:end="399:49"><name pos:start="399:34" pos:end="399:43">tick_timer</name><operator pos:start="399:44" pos:end="399:44">.</operator><name pos:start="399:45" pos:end="399:49">icntb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="403:9" pos:end="403:58"><expr pos:start="403:9" pos:end="403:57"><name pos:start="403:9" pos:end="403:24"><name pos:start="403:9" pos:end="403:9">s</name><operator pos:start="403:10" pos:end="403:11">-&gt;</operator><name pos:start="403:12" pos:end="403:18">l_timer</name><index pos:start="403:19" pos:end="403:24">[<expr pos:start="403:20" pos:end="403:23"><name pos:start="403:20" pos:end="403:23">lt_i</name></expr>]</index></name><operator pos:start="403:25" pos:end="403:25">.</operator><name pos:start="403:26" pos:end="403:34"><name pos:start="403:26" pos:end="403:28">reg</name><operator pos:start="403:29" pos:end="403:29">.</operator><name pos:start="403:30" pos:end="403:34">wstat</name></name> <operator pos:start="403:36" pos:end="403:37">|=</operator> <name pos:start="403:39" pos:end="403:57">L_WSTAT_TCNTB_WRITE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="405:9" pos:end="410:0"><expr pos:start="405:9" pos:end="405:57"><name pos:start="405:9" pos:end="405:24"><name pos:start="405:9" pos:end="405:9">s</name><operator pos:start="405:10" pos:end="405:11">-&gt;</operator><name pos:start="405:12" pos:end="405:18">l_timer</name><index pos:start="405:19" pos:end="405:24">[<expr pos:start="405:20" pos:end="405:23"><name pos:start="405:20" pos:end="405:23">lt_i</name></expr>]</index></name><operator pos:start="405:25" pos:end="405:25">.</operator><name pos:start="405:26" pos:end="405:49"><name pos:start="405:26" pos:end="405:28">reg</name><operator pos:start="405:29" pos:end="405:29">.</operator><name pos:start="405:30" pos:end="405:32">cnt</name><index pos:start="405:33" pos:end="405:49">[<expr pos:start="405:34" pos:end="405:48"><name pos:start="405:34" pos:end="405:48">L_REG_CNT_TCNTB</name></expr>]</index></name> <operator pos:start="405:51" pos:end="405:51">=</operator> <name pos:start="405:53" pos:end="405:57">value</name></expr>;</expr_stmt>



<cpp:ifdef pos:start="409:1" pos:end="409:16">#<cpp:directive pos:start="409:2" pos:end="409:6">ifdef</cpp:directive> <name pos:start="409:8" pos:end="409:16">DEBUG_MCT</name></cpp:ifdef>

        <if_stmt pos:start="411:9" pos:end="415:9"><if pos:start="411:9" pos:end="415:9">if <condition pos:start="411:12" pos:end="411:36">(<expr pos:start="411:13" pos:end="411:35"><name pos:start="411:13" pos:end="411:27"><name pos:start="411:13" pos:end="411:21">tcntb_min</name><index pos:start="411:22" pos:end="411:27">[<expr pos:start="411:23" pos:end="411:26"><name pos:start="411:23" pos:end="411:26">lt_i</name></expr>]</index></name> <operator pos:start="411:29" pos:end="411:29">&gt;</operator> <name pos:start="411:31" pos:end="411:35">value</name></expr>)</condition> <block pos:start="411:38" pos:end="415:9">{<block_content pos:start="413:13" pos:end="413:36">

            <expr_stmt pos:start="413:13" pos:end="413:36"><expr pos:start="413:13" pos:end="413:35"><name pos:start="413:13" pos:end="413:27"><name pos:start="413:13" pos:end="413:21">tcntb_min</name><index pos:start="413:22" pos:end="413:27">[<expr pos:start="413:23" pos:end="413:26"><name pos:start="413:23" pos:end="413:26">lt_i</name></expr>]</index></name> <operator pos:start="413:29" pos:end="413:29">=</operator> <name pos:start="413:31" pos:end="413:35">value</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="417:9" pos:end="421:9"><if pos:start="417:9" pos:end="421:9">if <condition pos:start="417:12" pos:end="417:36">(<expr pos:start="417:13" pos:end="417:35"><name pos:start="417:13" pos:end="417:27"><name pos:start="417:13" pos:end="417:21">tcntb_max</name><index pos:start="417:22" pos:end="417:27">[<expr pos:start="417:23" pos:end="417:26"><name pos:start="417:23" pos:end="417:26">lt_i</name></expr>]</index></name> <operator pos:start="417:29" pos:end="417:29">&lt;</operator> <name pos:start="417:31" pos:end="417:35">value</name></expr>)</condition> <block pos:start="417:38" pos:end="421:9">{<block_content pos:start="419:13" pos:end="419:36">

            <expr_stmt pos:start="419:13" pos:end="419:36"><expr pos:start="419:13" pos:end="419:35"><name pos:start="419:13" pos:end="419:27"><name pos:start="419:13" pos:end="419:21">tcntb_max</name><index pos:start="419:22" pos:end="419:27">[<expr pos:start="419:23" pos:end="419:26"><name pos:start="419:23" pos:end="419:26">lt_i</name></expr>]</index></name> <operator pos:start="419:29" pos:end="419:29">=</operator> <name pos:start="419:31" pos:end="419:35">value</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="423:9" pos:end="428:0"><expr pos:start="423:9" pos:end="425:62"><call pos:start="423:9" pos:end="425:62"><name pos:start="423:9" pos:end="423:15">DPRINTF</name><argument_list pos:start="423:16" pos:end="425:62">(<argument pos:start="423:17" pos:end="423:68"><expr pos:start="423:17" pos:end="423:68"><literal type="string" pos:start="423:17" pos:end="423:68">"local timer[%d] TCNTB write %llx; max=%x, min=%x\n"</literal></expr></argument>,

                <argument pos:start="425:17" pos:end="425:20"><expr pos:start="425:17" pos:end="425:20"><name pos:start="425:17" pos:end="425:20">lt_i</name></expr></argument>, <argument pos:start="425:23" pos:end="425:27"><expr pos:start="425:23" pos:end="425:27"><name pos:start="425:23" pos:end="425:27">value</name></expr></argument>, <argument pos:start="425:30" pos:end="425:44"><expr pos:start="425:30" pos:end="425:44"><name pos:start="425:30" pos:end="425:44"><name pos:start="425:30" pos:end="425:38">tcntb_max</name><index pos:start="425:39" pos:end="425:44">[<expr pos:start="425:40" pos:end="425:43"><name pos:start="425:40" pos:end="425:43">lt_i</name></expr>]</index></name></expr></argument>, <argument pos:start="425:47" pos:end="425:61"><expr pos:start="425:47" pos:end="425:61"><name pos:start="425:47" pos:end="425:61"><name pos:start="425:47" pos:end="425:55">tcntb_min</name><index pos:start="425:56" pos:end="425:61">[<expr pos:start="425:57" pos:end="425:60"><name pos:start="425:57" pos:end="425:60">lt_i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="427:1" pos:end="427:6">#<cpp:directive pos:start="427:2" pos:end="427:6">endif</cpp:directive></cpp:endif>

        <break pos:start="429:9" pos:end="429:14">break;</break>



    <case pos:start="433:5" pos:end="433:18">case <expr pos:start="433:10" pos:end="433:17"><name pos:start="433:10" pos:end="433:17">L0_ICNTB</name></expr>:</case> <case pos:start="433:20" pos:end="433:33">case <expr pos:start="433:25" pos:end="433:32"><name pos:start="433:25" pos:end="433:32">L1_ICNTB</name></expr>:</case>



        <expr_stmt pos:start="437:9" pos:end="437:39"><expr pos:start="437:9" pos:end="437:38"><name pos:start="437:9" pos:end="437:12">lt_i</name> <operator pos:start="437:14" pos:end="437:14">=</operator> <call pos:start="437:16" pos:end="437:38"><name pos:start="437:16" pos:end="437:30">GET_L_TIMER_IDX</name><argument_list pos:start="437:31" pos:end="437:38">(<argument pos:start="437:32" pos:end="437:37"><expr pos:start="437:32" pos:end="437:37"><name pos:start="437:32" pos:end="437:37">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="439:9" pos:end="439:54"><expr pos:start="439:9" pos:end="439:53"><name pos:start="439:9" pos:end="439:13">index</name> <operator pos:start="439:15" pos:end="439:15">=</operator> <call pos:start="439:17" pos:end="439:53"><name pos:start="439:17" pos:end="439:39">GET_L_TIMER_CNT_REG_IDX</name><argument_list pos:start="439:40" pos:end="439:53">(<argument pos:start="439:41" pos:end="439:46"><expr pos:start="439:41" pos:end="439:46"><name pos:start="439:41" pos:end="439:46">offset</name></expr></argument>, <argument pos:start="439:49" pos:end="439:52"><expr pos:start="439:49" pos:end="439:52"><name pos:start="439:49" pos:end="439:52">lt_i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="443:9" pos:end="443:58"><expr pos:start="443:9" pos:end="443:57"><name pos:start="443:9" pos:end="443:24"><name pos:start="443:9" pos:end="443:9">s</name><operator pos:start="443:10" pos:end="443:11">-&gt;</operator><name pos:start="443:12" pos:end="443:18">l_timer</name><index pos:start="443:19" pos:end="443:24">[<expr pos:start="443:20" pos:end="443:23"><name pos:start="443:20" pos:end="443:23">lt_i</name></expr>]</index></name><operator pos:start="443:25" pos:end="443:25">.</operator><name pos:start="443:26" pos:end="443:34"><name pos:start="443:26" pos:end="443:28">reg</name><operator pos:start="443:29" pos:end="443:29">.</operator><name pos:start="443:30" pos:end="443:34">wstat</name></name> <operator pos:start="443:36" pos:end="443:37">|=</operator> <name pos:start="443:39" pos:end="443:57">L_WSTAT_ICNTB_WRITE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="445:9" pos:end="447:39"><expr pos:start="445:9" pos:end="447:38"><name pos:start="445:9" pos:end="445:24"><name pos:start="445:9" pos:end="445:9">s</name><operator pos:start="445:10" pos:end="445:11">-&gt;</operator><name pos:start="445:12" pos:end="445:18">l_timer</name><index pos:start="445:19" pos:end="445:24">[<expr pos:start="445:20" pos:end="445:23"><name pos:start="445:20" pos:end="445:23">lt_i</name></expr>]</index></name><operator pos:start="445:25" pos:end="445:25">.</operator><name pos:start="445:26" pos:end="445:49"><name pos:start="445:26" pos:end="445:28">reg</name><operator pos:start="445:29" pos:end="445:29">.</operator><name pos:start="445:30" pos:end="445:32">cnt</name><index pos:start="445:33" pos:end="445:49">[<expr pos:start="445:34" pos:end="445:48"><name pos:start="445:34" pos:end="445:48">L_REG_CNT_ICNTB</name></expr>]</index></name> <operator pos:start="445:51" pos:end="445:51">=</operator> <name pos:start="445:53" pos:end="445:57">value</name> <operator pos:start="445:59" pos:end="445:59">&amp;</operator>

                <operator pos:start="447:17" pos:end="447:17">~</operator><name pos:start="447:18" pos:end="447:38">L_ICNTB_MANUAL_UPDATE</name></expr>;</expr_stmt>



        <comment type="block" pos:start="451:9" pos:end="457:11">/*

         * We need to avoid too small values for TCNTB*ICNTB. If not, IRQ event

         * could raise too fast disallowing QEMU to execute target code.

         */</comment>

        <if_stmt pos:start="459:9" pos:end="479:9"><if pos:start="459:9" pos:end="479:9">if <condition pos:start="459:12" pos:end="461:77">(<expr pos:start="459:13" pos:end="461:76"><name pos:start="459:13" pos:end="459:28"><name pos:start="459:13" pos:end="459:13">s</name><operator pos:start="459:14" pos:end="459:15">-&gt;</operator><name pos:start="459:16" pos:end="459:22">l_timer</name><index pos:start="459:23" pos:end="459:28">[<expr pos:start="459:24" pos:end="459:27"><name pos:start="459:24" pos:end="459:27">lt_i</name></expr>]</index></name><operator pos:start="459:29" pos:end="459:29">.</operator><name pos:start="459:30" pos:end="459:53"><name pos:start="459:30" pos:end="459:32">reg</name><operator pos:start="459:33" pos:end="459:33">.</operator><name pos:start="459:34" pos:end="459:36">cnt</name><index pos:start="459:37" pos:end="459:53">[<expr pos:start="459:38" pos:end="459:52"><name pos:start="459:38" pos:end="459:52">L_REG_CNT_ICNTB</name></expr>]</index></name> <operator pos:start="459:55" pos:end="459:55">*</operator>

            <name pos:start="461:13" pos:end="461:28"><name pos:start="461:13" pos:end="461:13">s</name><operator pos:start="461:14" pos:end="461:15">-&gt;</operator><name pos:start="461:16" pos:end="461:22">l_timer</name><index pos:start="461:23" pos:end="461:28">[<expr pos:start="461:24" pos:end="461:27"><name pos:start="461:24" pos:end="461:27">lt_i</name></expr>]</index></name><operator pos:start="461:29" pos:end="461:29">.</operator><name pos:start="461:30" pos:end="461:53"><name pos:start="461:30" pos:end="461:32">reg</name><operator pos:start="461:33" pos:end="461:33">.</operator><name pos:start="461:34" pos:end="461:36">cnt</name><index pos:start="461:37" pos:end="461:53">[<expr pos:start="461:38" pos:end="461:52"><name pos:start="461:38" pos:end="461:52">L_REG_CNT_TCNTB</name></expr>]</index></name> <operator pos:start="461:55" pos:end="461:55">&lt;</operator> <name pos:start="461:57" pos:end="461:76">MCT_LT_CNT_LOW_LIMIT</name></expr>)</condition> <block pos:start="461:79" pos:end="479:9">{<block_content pos:start="463:13" pos:end="477:13">

            <if_stmt pos:start="463:13" pos:end="477:13"><if pos:start="463:13" pos:end="469:13">if <condition pos:start="463:16" pos:end="463:59">(<expr pos:start="463:17" pos:end="463:58"><operator pos:start="463:17" pos:end="463:17">!</operator><name pos:start="463:18" pos:end="463:33"><name pos:start="463:18" pos:end="463:18">s</name><operator pos:start="463:19" pos:end="463:20">-&gt;</operator><name pos:start="463:21" pos:end="463:27">l_timer</name><index pos:start="463:28" pos:end="463:33">[<expr pos:start="463:29" pos:end="463:32"><name pos:start="463:29" pos:end="463:32">lt_i</name></expr>]</index></name><operator pos:start="463:34" pos:end="463:34">.</operator><name pos:start="463:35" pos:end="463:58"><name pos:start="463:35" pos:end="463:37">reg</name><operator pos:start="463:38" pos:end="463:38">.</operator><name pos:start="463:39" pos:end="463:41">cnt</name><index pos:start="463:42" pos:end="463:58">[<expr pos:start="463:43" pos:end="463:57"><name pos:start="463:43" pos:end="463:57">L_REG_CNT_TCNTB</name></expr>]</index></name></expr>)</condition> <block pos:start="463:61" pos:end="469:13">{<block_content pos:start="465:17" pos:end="467:45">

                <expr_stmt pos:start="465:17" pos:end="467:45"><expr pos:start="465:17" pos:end="467:44"><name pos:start="465:17" pos:end="465:32"><name pos:start="465:17" pos:end="465:17">s</name><operator pos:start="465:18" pos:end="465:19">-&gt;</operator><name pos:start="465:20" pos:end="465:26">l_timer</name><index pos:start="465:27" pos:end="465:32">[<expr pos:start="465:28" pos:end="465:31"><name pos:start="465:28" pos:end="465:31">lt_i</name></expr>]</index></name><operator pos:start="465:33" pos:end="465:33">.</operator><name pos:start="465:34" pos:end="465:57"><name pos:start="465:34" pos:end="465:36">reg</name><operator pos:start="465:37" pos:end="465:37">.</operator><name pos:start="465:38" pos:end="465:40">cnt</name><index pos:start="465:41" pos:end="465:57">[<expr pos:start="465:42" pos:end="465:56"><name pos:start="465:42" pos:end="465:56">L_REG_CNT_ICNTB</name></expr>]</index></name> <operator pos:start="465:59" pos:end="465:59">=</operator>

                        <name pos:start="467:25" pos:end="467:44">MCT_LT_CNT_LOW_LIMIT</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="469:15" pos:end="477:13">else <block pos:start="469:20" pos:end="477:13">{<block_content pos:start="471:17" pos:end="475:66">

                <expr_stmt pos:start="471:17" pos:end="475:66"><expr pos:start="471:17" pos:end="475:65"><name pos:start="471:17" pos:end="471:32"><name pos:start="471:17" pos:end="471:17">s</name><operator pos:start="471:18" pos:end="471:19">-&gt;</operator><name pos:start="471:20" pos:end="471:26">l_timer</name><index pos:start="471:27" pos:end="471:32">[<expr pos:start="471:28" pos:end="471:31"><name pos:start="471:28" pos:end="471:31">lt_i</name></expr>]</index></name><operator pos:start="471:33" pos:end="471:33">.</operator><name pos:start="471:34" pos:end="471:57"><name pos:start="471:34" pos:end="471:36">reg</name><operator pos:start="471:37" pos:end="471:37">.</operator><name pos:start="471:38" pos:end="471:40">cnt</name><index pos:start="471:41" pos:end="471:57">[<expr pos:start="471:42" pos:end="471:56"><name pos:start="471:42" pos:end="471:56">L_REG_CNT_ICNTB</name></expr>]</index></name> <operator pos:start="471:59" pos:end="471:59">=</operator>

                        <name pos:start="473:25" pos:end="473:44">MCT_LT_CNT_LOW_LIMIT</name> <operator pos:start="473:46" pos:end="473:46">/</operator>

                        <name pos:start="475:25" pos:end="475:40"><name pos:start="475:25" pos:end="475:25">s</name><operator pos:start="475:26" pos:end="475:27">-&gt;</operator><name pos:start="475:28" pos:end="475:34">l_timer</name><index pos:start="475:35" pos:end="475:40">[<expr pos:start="475:36" pos:end="475:39"><name pos:start="475:36" pos:end="475:39">lt_i</name></expr>]</index></name><operator pos:start="475:41" pos:end="475:41">.</operator><name pos:start="475:42" pos:end="475:65"><name pos:start="475:42" pos:end="475:44">reg</name><operator pos:start="475:45" pos:end="475:45">.</operator><name pos:start="475:46" pos:end="475:48">cnt</name><index pos:start="475:49" pos:end="475:65">[<expr pos:start="475:50" pos:end="475:64"><name pos:start="475:50" pos:end="475:64">L_REG_CNT_TCNTB</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="483:9" pos:end="496:0"><if pos:start="483:9" pos:end="496:0">if <condition pos:start="483:12" pos:end="483:42">(<expr pos:start="483:13" pos:end="483:41"><name pos:start="483:13" pos:end="483:17">value</name> <operator pos:start="483:19" pos:end="483:19">&amp;</operator> <name pos:start="483:21" pos:end="483:41">L_ICNTB_MANUAL_UPDATE</name></expr>)</condition> <block pos:start="483:44" pos:end="496:0">{<block_content pos:start="485:13" pos:end="489:63">

            <expr_stmt pos:start="485:13" pos:end="489:63"><expr pos:start="485:13" pos:end="489:62"><call pos:start="485:13" pos:end="489:62"><name pos:start="485:13" pos:end="485:37">exynos4210_ltick_set_cntb</name><argument_list pos:start="485:38" pos:end="489:62">(<argument pos:start="485:39" pos:end="485:66"><expr pos:start="485:39" pos:end="485:66"><operator pos:start="485:39" pos:end="485:39">&amp;</operator><name pos:start="485:40" pos:end="485:55"><name pos:start="485:40" pos:end="485:40">s</name><operator pos:start="485:41" pos:end="485:42">-&gt;</operator><name pos:start="485:43" pos:end="485:49">l_timer</name><index pos:start="485:50" pos:end="485:55">[<expr pos:start="485:51" pos:end="485:54"><name pos:start="485:51" pos:end="485:54">lt_i</name></expr>]</index></name><operator pos:start="485:56" pos:end="485:56">.</operator><name pos:start="485:57" pos:end="485:66">tick_timer</name></expr></argument>,

                    <argument pos:start="487:21" pos:end="487:53"><expr pos:start="487:21" pos:end="487:53"><name pos:start="487:21" pos:end="487:36"><name pos:start="487:21" pos:end="487:21">s</name><operator pos:start="487:22" pos:end="487:23">-&gt;</operator><name pos:start="487:24" pos:end="487:30">l_timer</name><index pos:start="487:31" pos:end="487:36">[<expr pos:start="487:32" pos:end="487:35"><name pos:start="487:32" pos:end="487:35">lt_i</name></expr>]</index></name><operator pos:start="487:37" pos:end="487:37">.</operator><name pos:start="487:38" pos:end="487:53"><name pos:start="487:38" pos:end="487:47">tick_timer</name><operator pos:start="487:48" pos:end="487:48">.</operator><name pos:start="487:49" pos:end="487:53">tcntb</name></name></expr></argument>,

                    <argument pos:start="489:21" pos:end="489:61"><expr pos:start="489:21" pos:end="489:61"><name pos:start="489:21" pos:end="489:36"><name pos:start="489:21" pos:end="489:21">s</name><operator pos:start="489:22" pos:end="489:23">-&gt;</operator><name pos:start="489:24" pos:end="489:30">l_timer</name><index pos:start="489:31" pos:end="489:36">[<expr pos:start="489:32" pos:end="489:35"><name pos:start="489:32" pos:end="489:35">lt_i</name></expr>]</index></name><operator pos:start="489:37" pos:end="489:37">.</operator><name pos:start="489:38" pos:end="489:61"><name pos:start="489:38" pos:end="489:40">reg</name><operator pos:start="489:41" pos:end="489:41">.</operator><name pos:start="489:42" pos:end="489:44">cnt</name><index pos:start="489:45" pos:end="489:61">[<expr pos:start="489:46" pos:end="489:60"><name pos:start="489:46" pos:end="489:60">L_REG_CNT_ICNTB</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="495:1" pos:end="495:16">#<cpp:directive pos:start="495:2" pos:end="495:6">ifdef</cpp:directive> <name pos:start="495:8" pos:end="495:16">DEBUG_MCT</name></cpp:ifdef>

        <if_stmt pos:start="497:9" pos:end="501:9"><if pos:start="497:9" pos:end="501:9">if <condition pos:start="497:12" pos:end="497:36">(<expr pos:start="497:13" pos:end="497:35"><name pos:start="497:13" pos:end="497:27"><name pos:start="497:13" pos:end="497:21">icntb_min</name><index pos:start="497:22" pos:end="497:27">[<expr pos:start="497:23" pos:end="497:26"><name pos:start="497:23" pos:end="497:26">lt_i</name></expr>]</index></name> <operator pos:start="497:29" pos:end="497:29">&gt;</operator> <name pos:start="497:31" pos:end="497:35">value</name></expr>)</condition> <block pos:start="497:38" pos:end="501:9">{<block_content pos:start="499:13" pos:end="499:36">

            <expr_stmt pos:start="499:13" pos:end="499:36"><expr pos:start="499:13" pos:end="499:35"><name pos:start="499:13" pos:end="499:27"><name pos:start="499:13" pos:end="499:21">icntb_min</name><index pos:start="499:22" pos:end="499:27">[<expr pos:start="499:23" pos:end="499:26"><name pos:start="499:23" pos:end="499:26">lt_i</name></expr>]</index></name> <operator pos:start="499:29" pos:end="499:29">=</operator> <name pos:start="499:31" pos:end="499:35">value</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="503:9" pos:end="507:9"><if pos:start="503:9" pos:end="507:9">if <condition pos:start="503:12" pos:end="503:36">(<expr pos:start="503:13" pos:end="503:35"><name pos:start="503:13" pos:end="503:27"><name pos:start="503:13" pos:end="503:21">icntb_max</name><index pos:start="503:22" pos:end="503:27">[<expr pos:start="503:23" pos:end="503:26"><name pos:start="503:23" pos:end="503:26">lt_i</name></expr>]</index></name> <operator pos:start="503:29" pos:end="503:29">&lt;</operator> <name pos:start="503:31" pos:end="503:35">value</name></expr>)</condition> <block pos:start="503:38" pos:end="507:9">{<block_content pos:start="505:13" pos:end="505:36">

            <expr_stmt pos:start="505:13" pos:end="505:36"><expr pos:start="505:13" pos:end="505:35"><name pos:start="505:13" pos:end="505:27"><name pos:start="505:13" pos:end="505:21">icntb_max</name><index pos:start="505:22" pos:end="505:27">[<expr pos:start="505:23" pos:end="505:26"><name pos:start="505:23" pos:end="505:26">lt_i</name></expr>]</index></name> <operator pos:start="505:29" pos:end="505:29">=</operator> <name pos:start="505:31" pos:end="505:35">value</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<expr_stmt pos:start="509:1" pos:end="514:0"><expr pos:start="509:1" pos:end="511:54"><call pos:start="509:1" pos:end="511:54"><name pos:start="509:1" pos:end="509:7">DPRINTF</name><argument_list pos:start="509:8" pos:end="511:54">(<argument pos:start="509:9" pos:end="509:62"><expr pos:start="509:9" pos:end="509:62"><literal type="string" pos:start="509:9" pos:end="509:62">"local timer[%d] ICNTB write %llx; max=%x, min=%x\n\n"</literal></expr></argument>,

        <argument pos:start="511:9" pos:end="511:12"><expr pos:start="511:9" pos:end="511:12"><name pos:start="511:9" pos:end="511:12">lt_i</name></expr></argument>, <argument pos:start="511:15" pos:end="511:19"><expr pos:start="511:15" pos:end="511:19"><name pos:start="511:15" pos:end="511:19">value</name></expr></argument>, <argument pos:start="511:22" pos:end="511:36"><expr pos:start="511:22" pos:end="511:36"><name pos:start="511:22" pos:end="511:36"><name pos:start="511:22" pos:end="511:30">icntb_max</name><index pos:start="511:31" pos:end="511:36">[<expr pos:start="511:32" pos:end="511:35"><name pos:start="511:32" pos:end="511:35">lt_i</name></expr>]</index></name></expr></argument>, <argument pos:start="511:39" pos:end="511:53"><expr pos:start="511:39" pos:end="511:53"><name pos:start="511:39" pos:end="511:53"><name pos:start="511:39" pos:end="511:47">icntb_min</name><index pos:start="511:48" pos:end="511:53">[<expr pos:start="511:49" pos:end="511:52"><name pos:start="511:49" pos:end="511:52">lt_i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="513:1" pos:end="513:6">#<cpp:directive pos:start="513:2" pos:end="513:6">endif</cpp:directive></cpp:endif>

<break pos:start="515:1" pos:end="515:6">break;</break>



    <case pos:start="519:5" pos:end="519:19">case <expr pos:start="519:10" pos:end="519:18"><name pos:start="519:10" pos:end="519:18">L0_FRCNTB</name></expr>:</case> <case pos:start="519:21" pos:end="519:35">case <expr pos:start="519:26" pos:end="519:34"><name pos:start="519:26" pos:end="519:34">L1_FRCNTB</name></expr>:</case>



        <expr_stmt pos:start="523:9" pos:end="523:39"><expr pos:start="523:9" pos:end="523:38"><name pos:start="523:9" pos:end="523:12">lt_i</name> <operator pos:start="523:14" pos:end="523:14">=</operator> <call pos:start="523:16" pos:end="523:38"><name pos:start="523:16" pos:end="523:30">GET_L_TIMER_IDX</name><argument_list pos:start="523:31" pos:end="523:38">(<argument pos:start="523:32" pos:end="523:37"><expr pos:start="523:32" pos:end="523:37"><name pos:start="523:32" pos:end="523:37">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="525:9" pos:end="525:54"><expr pos:start="525:9" pos:end="525:53"><name pos:start="525:9" pos:end="525:13">index</name> <operator pos:start="525:15" pos:end="525:15">=</operator> <call pos:start="525:17" pos:end="525:53"><name pos:start="525:17" pos:end="525:39">GET_L_TIMER_CNT_REG_IDX</name><argument_list pos:start="525:40" pos:end="525:53">(<argument pos:start="525:41" pos:end="525:46"><expr pos:start="525:41" pos:end="525:46"><name pos:start="525:41" pos:end="525:46">offset</name></expr></argument>, <argument pos:start="525:49" pos:end="525:52"><expr pos:start="525:49" pos:end="525:52"><name pos:start="525:49" pos:end="525:52">lt_i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="529:9" pos:end="529:68"><expr pos:start="529:9" pos:end="529:67"><call pos:start="529:9" pos:end="529:67"><name pos:start="529:9" pos:end="529:15">DPRINTF</name><argument_list pos:start="529:16" pos:end="529:67">(<argument pos:start="529:17" pos:end="529:53"><expr pos:start="529:17" pos:end="529:53"><literal type="string" pos:start="529:17" pos:end="529:53">"local timer[%d] FRCNTB write %llx\n"</literal></expr></argument>, <argument pos:start="529:56" pos:end="529:59"><expr pos:start="529:56" pos:end="529:59"><name pos:start="529:56" pos:end="529:59">lt_i</name></expr></argument>, <argument pos:start="529:62" pos:end="529:66"><expr pos:start="529:62" pos:end="529:66"><name pos:start="529:62" pos:end="529:66">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="533:9" pos:end="533:60"><expr pos:start="533:9" pos:end="533:59"><name pos:start="533:9" pos:end="533:24"><name pos:start="533:9" pos:end="533:9">s</name><operator pos:start="533:10" pos:end="533:11">-&gt;</operator><name pos:start="533:12" pos:end="533:18">l_timer</name><index pos:start="533:19" pos:end="533:24">[<expr pos:start="533:20" pos:end="533:23"><name pos:start="533:20" pos:end="533:23">lt_i</name></expr>]</index></name><operator pos:start="533:25" pos:end="533:25">.</operator><name pos:start="533:26" pos:end="533:34"><name pos:start="533:26" pos:end="533:28">reg</name><operator pos:start="533:29" pos:end="533:29">.</operator><name pos:start="533:30" pos:end="533:34">wstat</name></name> <operator pos:start="533:36" pos:end="533:37">|=</operator> <name pos:start="533:39" pos:end="533:59">L_WSTAT_FRCCNTB_WRITE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="535:9" pos:end="535:60"><expr pos:start="535:9" pos:end="535:59"><name pos:start="535:9" pos:end="535:24"><name pos:start="535:9" pos:end="535:9">s</name><operator pos:start="535:10" pos:end="535:11">-&gt;</operator><name pos:start="535:12" pos:end="535:18">l_timer</name><index pos:start="535:19" pos:end="535:24">[<expr pos:start="535:20" pos:end="535:23"><name pos:start="535:20" pos:end="535:23">lt_i</name></expr>]</index></name><operator pos:start="535:25" pos:end="535:25">.</operator><name pos:start="535:26" pos:end="535:51"><name pos:start="535:26" pos:end="535:28">reg</name><operator pos:start="535:29" pos:end="535:29">.</operator><name pos:start="535:30" pos:end="535:32">cnt</name><index pos:start="535:33" pos:end="535:51">[<expr pos:start="535:34" pos:end="535:50"><name pos:start="535:34" pos:end="535:50">L_REG_CNT_FRCCNTB</name></expr>]</index></name> <operator pos:start="535:53" pos:end="535:53">=</operator> <name pos:start="535:55" pos:end="535:59">value</name></expr>;</expr_stmt>



        <break pos:start="539:9" pos:end="539:14">break;</break>



    <case pos:start="543:5" pos:end="543:18">case <expr pos:start="543:10" pos:end="543:17"><name pos:start="543:10" pos:end="543:17">L0_TCNTO</name></expr>:</case> <case pos:start="543:20" pos:end="543:33">case <expr pos:start="543:25" pos:end="543:32"><name pos:start="543:25" pos:end="543:32">L1_TCNTO</name></expr>:</case>

    <case pos:start="545:5" pos:end="545:18">case <expr pos:start="545:10" pos:end="545:17"><name pos:start="545:10" pos:end="545:17">L0_ICNTO</name></expr>:</case> <case pos:start="545:20" pos:end="545:33">case <expr pos:start="545:25" pos:end="545:32"><name pos:start="545:25" pos:end="545:32">L1_ICNTO</name></expr>:</case>

    <case pos:start="547:5" pos:end="547:19">case <expr pos:start="547:10" pos:end="547:18"><name pos:start="547:10" pos:end="547:18">L0_FRCNTO</name></expr>:</case> <case pos:start="547:21" pos:end="547:35">case <expr pos:start="547:26" pos:end="547:34"><name pos:start="547:26" pos:end="547:34">L1_FRCNTO</name></expr>:</case>

        <expr_stmt pos:start="549:9" pos:end="551:48"><expr pos:start="549:9" pos:end="551:47"><call pos:start="549:9" pos:end="551:47"><name pos:start="549:9" pos:end="549:15">fprintf</name><argument_list pos:start="549:16" pos:end="551:47">(<argument pos:start="549:17" pos:end="549:22"><expr pos:start="549:17" pos:end="549:22"><name pos:start="549:17" pos:end="549:22">stderr</name></expr></argument>, <argument pos:start="549:25" pos:end="551:38"><expr pos:start="549:25" pos:end="551:38"><literal type="string" pos:start="549:25" pos:end="549:66">"\n[exynos4210.mct: write to RO register "</literal>

                <name pos:start="551:17" pos:end="551:30">TARGET_FMT_plx</name> <literal type="string" pos:start="551:32" pos:end="551:38">"]\n\n"</literal></expr></argument>, <argument pos:start="551:41" pos:end="551:46"><expr pos:start="551:41" pos:end="551:46"><name pos:start="551:41" pos:end="551:46">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="553:9" pos:end="553:14">break;</break>



    <case pos:start="557:5" pos:end="557:22">case <expr pos:start="557:10" pos:end="557:21"><name pos:start="557:10" pos:end="557:21">L0_INT_CSTAT</name></expr>:</case> <case pos:start="557:24" pos:end="557:41">case <expr pos:start="557:29" pos:end="557:40"><name pos:start="557:29" pos:end="557:40">L1_INT_CSTAT</name></expr>:</case>

        <expr_stmt pos:start="559:9" pos:end="559:39"><expr pos:start="559:9" pos:end="559:38"><name pos:start="559:9" pos:end="559:12">lt_i</name> <operator pos:start="559:14" pos:end="559:14">=</operator> <call pos:start="559:16" pos:end="559:38"><name pos:start="559:16" pos:end="559:30">GET_L_TIMER_IDX</name><argument_list pos:start="559:31" pos:end="559:38">(<argument pos:start="559:32" pos:end="559:37"><expr pos:start="559:32" pos:end="559:37"><name pos:start="559:32" pos:end="559:37">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="563:9" pos:end="563:67"><expr pos:start="563:9" pos:end="563:66"><call pos:start="563:9" pos:end="563:66"><name pos:start="563:9" pos:end="563:15">DPRINTF</name><argument_list pos:start="563:16" pos:end="563:66">(<argument pos:start="563:17" pos:end="563:52"><expr pos:start="563:17" pos:end="563:52"><literal type="string" pos:start="563:17" pos:end="563:52">"local timer[%d] CSTAT write %llx\n"</literal></expr></argument>, <argument pos:start="563:55" pos:end="563:58"><expr pos:start="563:55" pos:end="563:58"><name pos:start="563:55" pos:end="563:58">lt_i</name></expr></argument>, <argument pos:start="563:61" pos:end="563:65"><expr pos:start="563:61" pos:end="563:65"><name pos:start="563:61" pos:end="563:65">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="567:9" pos:end="567:49"><expr pos:start="567:9" pos:end="567:48"><name pos:start="567:9" pos:end="567:24"><name pos:start="567:9" pos:end="567:9">s</name><operator pos:start="567:10" pos:end="567:11">-&gt;</operator><name pos:start="567:12" pos:end="567:18">l_timer</name><index pos:start="567:19" pos:end="567:24">[<expr pos:start="567:20" pos:end="567:23"><name pos:start="567:20" pos:end="567:23">lt_i</name></expr>]</index></name><operator pos:start="567:25" pos:end="567:25">.</operator><name pos:start="567:26" pos:end="567:38"><name pos:start="567:26" pos:end="567:28">reg</name><operator pos:start="567:29" pos:end="567:29">.</operator><name pos:start="567:30" pos:end="567:38">int_cstat</name></name> <operator pos:start="567:40" pos:end="567:41">&amp;=</operator> <operator pos:start="567:43" pos:end="567:43">~</operator><name pos:start="567:44" pos:end="567:48">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="569:9" pos:end="573:9"><if pos:start="569:9" pos:end="573:9">if <condition pos:start="569:12" pos:end="569:44">(<expr pos:start="569:13" pos:end="569:43"><operator pos:start="569:13" pos:end="569:13">!</operator><name pos:start="569:14" pos:end="569:29"><name pos:start="569:14" pos:end="569:14">s</name><operator pos:start="569:15" pos:end="569:16">-&gt;</operator><name pos:start="569:17" pos:end="569:23">l_timer</name><index pos:start="569:24" pos:end="569:29">[<expr pos:start="569:25" pos:end="569:28"><name pos:start="569:25" pos:end="569:28">lt_i</name></expr>]</index></name><operator pos:start="569:30" pos:end="569:30">.</operator><name pos:start="569:31" pos:end="569:43"><name pos:start="569:31" pos:end="569:33">reg</name><operator pos:start="569:34" pos:end="569:34">.</operator><name pos:start="569:35" pos:end="569:43">int_cstat</name></name></expr>)</condition> <block pos:start="569:46" pos:end="573:9">{<block_content pos:start="571:13" pos:end="571:49">

            <expr_stmt pos:start="571:13" pos:end="571:49"><expr pos:start="571:13" pos:end="571:48"><call pos:start="571:13" pos:end="571:48"><name pos:start="571:13" pos:end="571:26">qemu_irq_lower</name><argument_list pos:start="571:27" pos:end="571:48">(<argument pos:start="571:28" pos:end="571:47"><expr pos:start="571:28" pos:end="571:47"><name pos:start="571:28" pos:end="571:43"><name pos:start="571:28" pos:end="571:28">s</name><operator pos:start="571:29" pos:end="571:30">-&gt;</operator><name pos:start="571:31" pos:end="571:37">l_timer</name><index pos:start="571:38" pos:end="571:43">[<expr pos:start="571:39" pos:end="571:42"><name pos:start="571:39" pos:end="571:42">lt_i</name></expr>]</index></name><operator pos:start="571:44" pos:end="571:44">.</operator><name pos:start="571:45" pos:end="571:47">irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="575:9" pos:end="575:14">break;</break>



    <case pos:start="579:5" pos:end="579:20">case <expr pos:start="579:10" pos:end="579:19"><name pos:start="579:10" pos:end="579:19">L0_INT_ENB</name></expr>:</case> <case pos:start="579:22" pos:end="579:37">case <expr pos:start="579:27" pos:end="579:36"><name pos:start="579:27" pos:end="579:36">L1_INT_ENB</name></expr>:</case>

        <expr_stmt pos:start="581:9" pos:end="581:39"><expr pos:start="581:9" pos:end="581:38"><name pos:start="581:9" pos:end="581:12">lt_i</name> <operator pos:start="581:14" pos:end="581:14">=</operator> <call pos:start="581:16" pos:end="581:38"><name pos:start="581:16" pos:end="581:30">GET_L_TIMER_IDX</name><argument_list pos:start="581:31" pos:end="581:38">(<argument pos:start="581:32" pos:end="581:37"><expr pos:start="581:32" pos:end="581:37"><name pos:start="581:32" pos:end="581:37">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="583:9" pos:end="583:47"><expr pos:start="583:9" pos:end="583:46"><name pos:start="583:9" pos:end="583:15">old_val</name> <operator pos:start="583:17" pos:end="583:17">=</operator> <name pos:start="583:19" pos:end="583:34"><name pos:start="583:19" pos:end="583:19">s</name><operator pos:start="583:20" pos:end="583:21">-&gt;</operator><name pos:start="583:22" pos:end="583:28">l_timer</name><index pos:start="583:29" pos:end="583:34">[<expr pos:start="583:30" pos:end="583:33"><name pos:start="583:30" pos:end="583:33">lt_i</name></expr>]</index></name><operator pos:start="583:35" pos:end="583:35">.</operator><name pos:start="583:36" pos:end="583:46"><name pos:start="583:36" pos:end="583:38">reg</name><operator pos:start="583:39" pos:end="583:39">.</operator><name pos:start="583:40" pos:end="583:46">int_enb</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="587:9" pos:end="587:55">/* Raise Local timer IRQ if cstat is pending */</comment>

        <if_stmt pos:start="589:9" pos:end="597:9"><if pos:start="589:9" pos:end="597:9">if <condition pos:start="589:12" pos:end="589:78">(<expr pos:start="589:13" pos:end="589:77"><operator pos:start="589:13" pos:end="589:13">(</operator><name pos:start="589:14" pos:end="589:18">value</name> <operator pos:start="589:20" pos:end="589:20">&amp;</operator> <name pos:start="589:22" pos:end="589:41">L_INT_INTENB_ICNTEIE</name><operator pos:start="589:42" pos:end="589:42">)</operator> <operator pos:start="589:44" pos:end="589:44">&gt;</operator> <operator pos:start="589:46" pos:end="589:46">(</operator><name pos:start="589:47" pos:end="589:53">old_val</name> <operator pos:start="589:55" pos:end="589:55">&amp;</operator> <name pos:start="589:57" pos:end="589:76">L_INT_INTENB_ICNTEIE</name><operator pos:start="589:77" pos:end="589:77">)</operator></expr>)</condition> <block pos:start="589:80" pos:end="597:9">{<block_content pos:start="591:13" pos:end="595:13">

            <if_stmt pos:start="591:13" pos:end="595:13"><if pos:start="591:13" pos:end="595:13">if <condition pos:start="591:16" pos:end="591:68">(<expr pos:start="591:17" pos:end="591:67"><name pos:start="591:17" pos:end="591:32"><name pos:start="591:17" pos:end="591:17">s</name><operator pos:start="591:18" pos:end="591:19">-&gt;</operator><name pos:start="591:20" pos:end="591:26">l_timer</name><index pos:start="591:27" pos:end="591:32">[<expr pos:start="591:28" pos:end="591:31"><name pos:start="591:28" pos:end="591:31">lt_i</name></expr>]</index></name><operator pos:start="591:33" pos:end="591:33">.</operator><name pos:start="591:34" pos:end="591:46"><name pos:start="591:34" pos:end="591:36">reg</name><operator pos:start="591:37" pos:end="591:37">.</operator><name pos:start="591:38" pos:end="591:46">int_cstat</name></name> <operator pos:start="591:48" pos:end="591:48">&amp;</operator> <name pos:start="591:50" pos:end="591:67">L_INT_CSTAT_INTCNT</name></expr>)</condition> <block pos:start="591:70" pos:end="595:13">{<block_content pos:start="593:17" pos:end="593:53">

                <expr_stmt pos:start="593:17" pos:end="593:53"><expr pos:start="593:17" pos:end="593:52"><call pos:start="593:17" pos:end="593:52"><name pos:start="593:17" pos:end="593:30">qemu_irq_raise</name><argument_list pos:start="593:31" pos:end="593:52">(<argument pos:start="593:32" pos:end="593:51"><expr pos:start="593:32" pos:end="593:51"><name pos:start="593:32" pos:end="593:47"><name pos:start="593:32" pos:end="593:32">s</name><operator pos:start="593:33" pos:end="593:34">-&gt;</operator><name pos:start="593:35" pos:end="593:41">l_timer</name><index pos:start="593:42" pos:end="593:47">[<expr pos:start="593:43" pos:end="593:46"><name pos:start="593:43" pos:end="593:46">lt_i</name></expr>]</index></name><operator pos:start="593:48" pos:end="593:48">.</operator><name pos:start="593:49" pos:end="593:51">irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="601:9" pos:end="601:45"><expr pos:start="601:9" pos:end="601:44"><name pos:start="601:9" pos:end="601:24"><name pos:start="601:9" pos:end="601:9">s</name><operator pos:start="601:10" pos:end="601:11">-&gt;</operator><name pos:start="601:12" pos:end="601:18">l_timer</name><index pos:start="601:19" pos:end="601:24">[<expr pos:start="601:20" pos:end="601:23"><name pos:start="601:20" pos:end="601:23">lt_i</name></expr>]</index></name><operator pos:start="601:25" pos:end="601:25">.</operator><name pos:start="601:26" pos:end="601:36"><name pos:start="601:26" pos:end="601:28">reg</name><operator pos:start="601:29" pos:end="601:29">.</operator><name pos:start="601:30" pos:end="601:36">int_enb</name></name> <operator pos:start="601:38" pos:end="601:38">=</operator> <name pos:start="601:40" pos:end="601:44">value</name></expr>;</expr_stmt>



        <break pos:start="605:9" pos:end="605:14">break;</break>



    <case pos:start="609:5" pos:end="609:18">case <expr pos:start="609:10" pos:end="609:17"><name pos:start="609:10" pos:end="609:17">L0_WSTAT</name></expr>:</case> <case pos:start="609:20" pos:end="609:33">case <expr pos:start="609:25" pos:end="609:32"><name pos:start="609:25" pos:end="609:32">L1_WSTAT</name></expr>:</case>

        <expr_stmt pos:start="611:9" pos:end="611:39"><expr pos:start="611:9" pos:end="611:38"><name pos:start="611:9" pos:end="611:12">lt_i</name> <operator pos:start="611:14" pos:end="611:14">=</operator> <call pos:start="611:16" pos:end="611:38"><name pos:start="611:16" pos:end="611:30">GET_L_TIMER_IDX</name><argument_list pos:start="611:31" pos:end="611:38">(<argument pos:start="611:32" pos:end="611:37"><expr pos:start="611:32" pos:end="611:37"><name pos:start="611:32" pos:end="611:37">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="615:9" pos:end="615:45"><expr pos:start="615:9" pos:end="615:44"><name pos:start="615:9" pos:end="615:24"><name pos:start="615:9" pos:end="615:9">s</name><operator pos:start="615:10" pos:end="615:11">-&gt;</operator><name pos:start="615:12" pos:end="615:18">l_timer</name><index pos:start="615:19" pos:end="615:24">[<expr pos:start="615:20" pos:end="615:23"><name pos:start="615:20" pos:end="615:23">lt_i</name></expr>]</index></name><operator pos:start="615:25" pos:end="615:25">.</operator><name pos:start="615:26" pos:end="615:34"><name pos:start="615:26" pos:end="615:28">reg</name><operator pos:start="615:29" pos:end="615:29">.</operator><name pos:start="615:30" pos:end="615:34">wstat</name></name> <operator pos:start="615:36" pos:end="615:37">&amp;=</operator> <operator pos:start="615:39" pos:end="615:39">~</operator><name pos:start="615:40" pos:end="615:44">value</name></expr>;</expr_stmt>

        <break pos:start="617:9" pos:end="617:14">break;</break>



    <default pos:start="621:5" pos:end="621:12">default:</default>

        <expr_stmt pos:start="623:9" pos:end="625:45"><expr pos:start="623:9" pos:end="625:44"><call pos:start="623:9" pos:end="625:44"><name pos:start="623:9" pos:end="623:16">hw_error</name><argument_list pos:start="623:17" pos:end="625:44">(<argument pos:start="623:18" pos:end="625:35"><expr pos:start="623:18" pos:end="625:35"><literal type="string" pos:start="623:18" pos:end="623:52">"exynos4210.mct: bad write offset "</literal>

                <name pos:start="625:17" pos:end="625:30">TARGET_FMT_plx</name> <literal type="string" pos:start="625:32" pos:end="625:35">"\n"</literal></expr></argument>, <argument pos:start="625:38" pos:end="625:43"><expr pos:start="625:38" pos:end="625:43"><name pos:start="625:38" pos:end="625:43">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="627:9" pos:end="627:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
