<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17730.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">locate_option</name><parameter_list pos:start="1:18" pos:end="3:38">(<parameter pos:start="1:19" pos:end="1:26"><decl pos:start="1:19" pos:end="1:26"><type pos:start="1:19" pos:end="1:26"><name pos:start="1:19" pos:end="1:21">int</name></type> <name pos:start="1:23" pos:end="1:26">argc</name></decl></parameter>, <parameter pos:start="1:29" pos:end="1:39"><decl pos:start="1:29" pos:end="1:39"><type pos:start="1:29" pos:end="1:39"><name pos:start="1:29" pos:end="1:32">char</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier><modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:39">argv</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:65"><decl pos:start="1:42" pos:end="1:65"><type pos:start="1:42" pos:end="1:65"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:56">OptionDef</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:65">options</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:37"><decl pos:start="3:19" pos:end="3:37"><type pos:start="3:19" pos:end="3:37"><specifier pos:start="3:19" pos:end="3:23">const</specifier> <name pos:start="3:25" pos:end="3:28">char</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:37">optname</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:13">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:21"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:19">OptionDef</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">po</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="45:5">for <control pos:start="13:9" pos:end="13:30">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">1</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:25"><expr pos:start="13:17" pos:end="13:24"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <name pos:start="13:21" pos:end="13:24">argc</name></expr>;</condition> <incr pos:start="13:27" pos:end="13:29"><expr pos:start="13:27" pos:end="13:29"><name pos:start="13:27" pos:end="13:27">i</name><operator pos:start="13:28" pos:end="13:29">++</operator></expr></incr>)</control> <block pos:start="13:32" pos:end="45:5">{<block_content pos:start="15:9" pos:end="43:16">

        <decl_stmt pos:start="15:9" pos:end="15:38"><decl pos:start="15:9" pos:end="15:37"><type pos:start="15:9" pos:end="15:20"><specifier pos:start="15:9" pos:end="15:13">const</specifier> <name pos:start="15:15" pos:end="15:18">char</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:27">cur_opt</name> <init pos:start="15:29" pos:end="15:37">= <expr pos:start="15:31" pos:end="15:37"><name pos:start="15:31" pos:end="15:37"><name pos:start="15:31" pos:end="15:34">argv</name><index pos:start="15:35" pos:end="15:37">[<expr pos:start="15:36" pos:end="15:36"><name pos:start="15:36" pos:end="15:36">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="19:9" pos:end="21:21"><if pos:start="19:9" pos:end="21:21">if <condition pos:start="19:12" pos:end="19:30">(<expr pos:start="19:13" pos:end="19:29"><operator pos:start="19:13" pos:end="19:13">*</operator><name pos:start="19:14" pos:end="19:20">cur_opt</name><operator pos:start="19:21" pos:end="19:22">++</operator> <operator pos:start="19:24" pos:end="19:25">!=</operator> <literal type="char" pos:start="19:27" pos:end="19:29">'-'</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:21"><block_content pos:start="21:13" pos:end="21:21">

            <continue pos:start="21:13" pos:end="21:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:10">po</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="25:42"><name pos:start="25:14" pos:end="25:24">find_option</name><argument_list pos:start="25:25" pos:end="25:42">(<argument pos:start="25:26" pos:end="25:32"><expr pos:start="25:26" pos:end="25:32"><name pos:start="25:26" pos:end="25:32">options</name></expr></argument>, <argument pos:start="25:35" pos:end="25:41"><expr pos:start="25:35" pos:end="25:41"><name pos:start="25:35" pos:end="25:41">cur_opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:51"><if pos:start="27:9" pos:end="29:51">if <condition pos:start="27:12" pos:end="27:64">(<expr pos:start="27:13" pos:end="27:63"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:21"><name pos:start="27:14" pos:end="27:15">po</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:21">name</name></name> <operator pos:start="27:23" pos:end="27:24">&amp;&amp;</operator> <name pos:start="27:26" pos:end="27:35"><name pos:start="27:26" pos:end="27:32">cur_opt</name><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><literal type="number" pos:start="27:34" pos:end="27:34">0</literal></expr>]</index></name> <operator pos:start="27:37" pos:end="27:38">==</operator> <literal type="char" pos:start="27:40" pos:end="27:42">'n'</literal> <operator pos:start="27:44" pos:end="27:45">&amp;&amp;</operator> <name pos:start="27:47" pos:end="27:56"><name pos:start="27:47" pos:end="27:53">cur_opt</name><index pos:start="27:54" pos:end="27:56">[<expr pos:start="27:55" pos:end="27:55"><literal type="number" pos:start="27:55" pos:end="27:55">1</literal></expr>]</index></name> <operator pos:start="27:58" pos:end="27:59">==</operator> <literal type="char" pos:start="27:61" pos:end="27:63">'o'</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:51"><block_content pos:start="29:13" pos:end="29:51">

            <expr_stmt pos:start="29:13" pos:end="29:51"><expr pos:start="29:13" pos:end="29:50"><name pos:start="29:13" pos:end="29:14">po</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:50"><name pos:start="29:18" pos:end="29:28">find_option</name><argument_list pos:start="29:29" pos:end="29:50">(<argument pos:start="29:30" pos:end="29:36"><expr pos:start="29:30" pos:end="29:36"><name pos:start="29:30" pos:end="29:36">options</name></expr></argument>, <argument pos:start="29:39" pos:end="29:49"><expr pos:start="29:39" pos:end="29:49"><name pos:start="29:39" pos:end="29:45">cur_opt</name> <operator pos:start="29:47" pos:end="29:47">+</operator> <literal type="number" pos:start="29:49" pos:end="29:49">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="33:9" pos:end="37:21"><if pos:start="33:9" pos:end="37:21">if <condition pos:start="33:12" pos:end="35:54">(<expr pos:start="33:13" pos:end="35:53"><operator pos:start="33:13" pos:end="33:13">(</operator><operator pos:start="33:14" pos:end="33:14">!</operator><name pos:start="33:15" pos:end="33:22"><name pos:start="33:15" pos:end="33:16">po</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:22">name</name></name> <operator pos:start="33:24" pos:end="33:25">&amp;&amp;</operator> <operator pos:start="33:27" pos:end="33:27">!</operator><call pos:start="33:28" pos:end="33:51"><name pos:start="33:28" pos:end="33:33">strcmp</name><argument_list pos:start="33:34" pos:end="33:51">(<argument pos:start="33:35" pos:end="33:41"><expr pos:start="33:35" pos:end="33:41"><name pos:start="33:35" pos:end="33:41">cur_opt</name></expr></argument>, <argument pos:start="33:44" pos:end="33:50"><expr pos:start="33:44" pos:end="33:50"><name pos:start="33:44" pos:end="33:50">optname</name></expr></argument>)</argument_list></call><operator pos:start="33:52" pos:end="33:52">)</operator> <operator pos:start="33:54" pos:end="33:55">||</operator>

             <operator pos:start="35:14" pos:end="35:14">(</operator><name pos:start="35:15" pos:end="35:22"><name pos:start="35:15" pos:end="35:16">po</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:22">name</name></name> <operator pos:start="35:24" pos:end="35:25">&amp;&amp;</operator> <operator pos:start="35:27" pos:end="35:27">!</operator><call pos:start="35:28" pos:end="35:52"><name pos:start="35:28" pos:end="35:33">strcmp</name><argument_list pos:start="35:34" pos:end="35:52">(<argument pos:start="35:35" pos:end="35:41"><expr pos:start="35:35" pos:end="35:41"><name pos:start="35:35" pos:end="35:41">optname</name></expr></argument>, <argument pos:start="35:44" pos:end="35:51"><expr pos:start="35:44" pos:end="35:51"><name pos:start="35:44" pos:end="35:51"><name pos:start="35:44" pos:end="35:45">po</name><operator pos:start="35:46" pos:end="35:47">-&gt;</operator><name pos:start="35:48" pos:end="35:51">name</name></name></expr></argument>)</argument_list></call><operator pos:start="35:53" pos:end="35:53">)</operator></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:21"><block_content pos:start="37:13" pos:end="37:21">

            <return pos:start="37:13" pos:end="37:21">return <expr pos:start="37:20" pos:end="37:20"><name pos:start="37:20" pos:end="37:20">i</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="41:9" pos:end="43:16"><if pos:start="41:9" pos:end="43:16">if <condition pos:start="41:12" pos:end="41:39">(<expr pos:start="41:13" pos:end="41:38"><operator pos:start="41:13" pos:end="41:13">!</operator><name pos:start="41:14" pos:end="41:15">po</name> <operator pos:start="41:17" pos:end="41:18">||</operator> <name pos:start="41:20" pos:end="41:28"><name pos:start="41:20" pos:end="41:21">po</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:28">flags</name></name> <operator pos:start="41:30" pos:end="41:30">&amp;</operator> <name pos:start="41:32" pos:end="41:38">HAS_ARG</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:16"><block_content pos:start="43:13" pos:end="43:16">

            <expr_stmt pos:start="43:13" pos:end="43:16"><expr pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:13">i</name><operator pos:start="43:14" pos:end="43:15">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
