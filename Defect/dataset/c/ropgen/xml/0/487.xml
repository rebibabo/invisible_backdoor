<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/487.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">check_values</name> <parameter_list pos:start="1:19" pos:end="1:36">(<parameter pos:start="1:20" pos:end="1:35"><decl pos:start="1:20" pos:end="1:35"><type pos:start="1:20" pos:end="1:32"><name pos:start="1:20" pos:end="1:30">eq2_param_t</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">par</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="9:3" pos:end="29:3">

  <comment type="block" pos:start="5:3" pos:end="5:43">/* yuck! floating point comparisons... */</comment>



  <if_stmt pos:start="9:3" pos:end="29:3"><if pos:start="9:3" pos:end="16:0">if <condition pos:start="9:6" pos:end="9:60">(<expr pos:start="9:7" pos:end="9:59"><operator pos:start="9:7" pos:end="9:7">(</operator><name pos:start="9:8" pos:end="9:13"><name pos:start="9:8" pos:end="9:10">par</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:13">c</name></name> <operator pos:start="9:15" pos:end="9:16">==</operator> <literal type="number" pos:start="9:18" pos:end="9:20">1.0</literal><operator pos:start="9:21" pos:end="9:21">)</operator> <operator pos:start="9:23" pos:end="9:24">&amp;&amp;</operator> <operator pos:start="9:26" pos:end="9:26">(</operator><name pos:start="9:27" pos:end="9:32"><name pos:start="9:27" pos:end="9:29">par</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:32">b</name></name> <operator pos:start="9:34" pos:end="9:35">==</operator> <literal type="number" pos:start="9:37" pos:end="9:39">0.0</literal><operator pos:start="9:40" pos:end="9:40">)</operator> <operator pos:start="9:42" pos:end="9:43">&amp;&amp;</operator> <operator pos:start="9:45" pos:end="9:45">(</operator><name pos:start="9:46" pos:end="9:51"><name pos:start="9:46" pos:end="9:48">par</name><operator pos:start="9:49" pos:end="9:50">-&gt;</operator><name pos:start="9:51" pos:end="9:51">g</name></name> <operator pos:start="9:53" pos:end="9:54">==</operator> <literal type="number" pos:start="9:56" pos:end="9:58">1.0</literal><operator pos:start="9:59" pos:end="9:59">)</operator></expr>)</condition> <block pos:start="9:62" pos:end="16:0">{<block_content pos:start="11:5" pos:end="11:23">

    <expr_stmt pos:start="11:5" pos:end="11:23"><expr pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:7">par</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:15">adjust</name></name> <operator pos:start="11:17" pos:end="11:17">=</operator> <name pos:start="11:19" pos:end="11:22">NULL</name></expr>;</expr_stmt>

  </block_content>}</block></if>

<cpp:if pos:start="15:1" pos:end="15:26">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:12">HAVE_MMX</name> <operator pos:start="15:14" pos:end="15:15">&amp;&amp;</operator> <name pos:start="15:17" pos:end="15:26">HAVE_6REGS</name></expr></cpp:if>

  <if type="elseif" pos:start="17:3" pos:end="24:0">else if <condition pos:start="17:11" pos:end="17:47">(<expr pos:start="17:12" pos:end="17:46"><name pos:start="17:12" pos:end="17:17"><name pos:start="17:12" pos:end="17:14">par</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:17">g</name></name> <operator pos:start="17:19" pos:end="17:20">==</operator> <literal type="number" pos:start="17:22" pos:end="17:24">1.0</literal> <operator pos:start="17:26" pos:end="17:27">&amp;&amp;</operator> <name pos:start="17:29" pos:end="17:46"><name pos:start="17:29" pos:end="17:39">ff_gCpuCaps</name><operator pos:start="17:40" pos:end="17:40">.</operator><name pos:start="17:41" pos:end="17:46">hasMMX</name></name></expr>)</condition> <block pos:start="17:49" pos:end="24:0">{<block_content pos:start="19:5" pos:end="19:33">

    <expr_stmt pos:start="19:5" pos:end="19:33"><expr pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:7">par</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:15">adjust</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <operator pos:start="19:19" pos:end="19:19">&amp;</operator><name pos:start="19:20" pos:end="19:32">affine_1d_MMX</name></expr>;</expr_stmt>

  </block_content>}</block></if>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

  <else pos:start="25:3" pos:end="29:3">else <block pos:start="25:8" pos:end="29:3">{<block_content pos:start="27:5" pos:end="27:29">

    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:7">par</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:15">adjust</name></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <operator pos:start="27:19" pos:end="27:19">&amp;</operator><name pos:start="27:20" pos:end="27:28">apply_lut</name></expr>;</expr_stmt>

  </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
