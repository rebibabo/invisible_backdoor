<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8285.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">bmdma_prepare_buf</name><parameter_list pos:start="1:29" pos:end="1:55">(<parameter pos:start="1:30" pos:end="1:40"><decl pos:start="1:30" pos:end="1:40"><type pos:start="1:30" pos:end="1:40"><name pos:start="1:30" pos:end="1:35">IDEDMA</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">dma</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:54">is_write</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:13">

    <decl_stmt pos:start="5:5" pos:end="5:53"><decl pos:start="5:5" pos:end="5:52"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">BMDMAState</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">bm</name> <init pos:start="5:20" pos:end="5:52">= <expr pos:start="5:22" pos:end="5:52"><call pos:start="5:22" pos:end="5:52"><name pos:start="5:22" pos:end="5:30">DO_UPCAST</name><argument_list pos:start="5:31" pos:end="5:52">(<argument pos:start="5:32" pos:end="5:41"><expr pos:start="5:32" pos:end="5:41"><name pos:start="5:32" pos:end="5:41">BMDMAState</name></expr></argument>, <argument pos:start="5:44" pos:end="5:46"><expr pos:start="5:44" pos:end="5:46"><name pos:start="5:44" pos:end="5:46">dma</name></expr></argument>, <argument pos:start="5:49" pos:end="5:51"><expr pos:start="5:49" pos:end="5:51"><name pos:start="5:49" pos:end="5:51">dma</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">IDEState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:37">= <expr pos:start="7:19" pos:end="7:37"><call pos:start="7:19" pos:end="7:37"><name pos:start="7:19" pos:end="7:33">bmdma_active_if</name><argument_list pos:start="7:34" pos:end="7:37">(<argument pos:start="7:35" pos:end="7:36"><expr pos:start="7:35" pos:end="7:36"><name pos:start="7:35" pos:end="7:36">bm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <struct pos:start="9:5" pos:end="15:10">struct <block pos:start="9:12" pos:end="15:5">{

        <decl_stmt pos:start="11:9" pos:end="11:22"><decl pos:start="11:9" pos:end="11:21"><type pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:16">uint32_t</name></type> <name pos:start="11:18" pos:end="11:21">addr</name></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:22"><decl pos:start="13:9" pos:end="13:21"><type pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:16">uint32_t</name></type> <name pos:start="13:18" pos:end="13:21">size</name></decl>;</decl_stmt>

    }</block> <decl pos:start="15:7" pos:end="15:9"><name pos:start="15:7" pos:end="15:9">prd</name></decl>;</struct>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">l</name></decl>, <decl pos:start="17:12" pos:end="17:14"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:14">len</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:71"><expr pos:start="21:5" pos:end="21:70"><call pos:start="21:5" pos:end="21:70"><name pos:start="21:5" pos:end="21:20">qemu_sglist_init</name><argument_list pos:start="21:21" pos:end="21:70">(<argument pos:start="21:22" pos:end="21:27"><expr pos:start="21:22" pos:end="21:27"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:27"><name pos:start="21:23" pos:end="21:23">s</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:27">sg</name></name></expr></argument>, <argument pos:start="21:30" pos:end="21:69"><expr pos:start="21:30" pos:end="21:69"><name pos:start="21:30" pos:end="21:39"><name pos:start="21:30" pos:end="21:30">s</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:39">nsector</name></name> <operator pos:start="21:41" pos:end="21:41">/</operator> <operator pos:start="21:43" pos:end="21:43">(</operator><name pos:start="21:44" pos:end="21:58">BMDMA_PAGE_SIZE</name> <operator pos:start="21:60" pos:end="21:60">/</operator> <literal type="number" pos:start="21:62" pos:end="21:64">512</literal><operator pos:start="21:65" pos:end="21:65">)</operator> <operator pos:start="21:67" pos:end="21:67">+</operator> <literal type="number" pos:start="21:69" pos:end="21:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:26"><expr pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:21">io_buffer_size</name></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <literal type="number" pos:start="23:25" pos:end="23:25">0</literal></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="73:5">for<control pos:start="25:8" pos:end="25:11">(<init pos:start="25:9" pos:end="25:9">;</init><condition pos:start="25:10" pos:end="25:10">;</condition><incr/>)</control> <block pos:start="25:13" pos:end="73:5">{<block_content pos:start="27:9" pos:end="71:9">

        <if_stmt pos:start="27:9" pos:end="57:9"><if pos:start="27:9" pos:end="57:9">if <condition pos:start="27:12" pos:end="27:33">(<expr pos:start="27:13" pos:end="27:32"><name pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:14">bm</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:27">cur_prd_len</name></name> <operator pos:start="27:29" pos:end="27:30">==</operator> <literal type="number" pos:start="27:32" pos:end="27:32">0</literal></expr>)</condition> <block pos:start="27:35" pos:end="57:9">{<block_content pos:start="31:13" pos:end="55:55">

            <comment type="block" pos:start="29:13" pos:end="29:61">/* end of table (with a fail safe of one page) */</comment>

            <if_stmt pos:start="31:13" pos:end="35:46"><if pos:start="31:13" pos:end="35:46">if <condition pos:start="31:16" pos:end="33:61">(<expr pos:start="31:17" pos:end="33:60"><name pos:start="31:17" pos:end="31:32"><name pos:start="31:17" pos:end="31:18">bm</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:32">cur_prd_last</name></name> <operator pos:start="31:34" pos:end="31:35">||</operator>

                <operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:29"><name pos:start="33:18" pos:end="33:19">bm</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:29">cur_addr</name></name> <operator pos:start="33:31" pos:end="33:31">-</operator> <name pos:start="33:33" pos:end="33:40"><name pos:start="33:33" pos:end="33:34">bm</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:40">addr</name></name><operator pos:start="33:41" pos:end="33:41">)</operator> <operator pos:start="33:43" pos:end="33:44">&gt;=</operator> <name pos:start="33:46" pos:end="33:60">BMDMA_PAGE_SIZE</name></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:46"><block_content pos:start="35:17" pos:end="35:46">

                <return pos:start="35:17" pos:end="35:46">return <expr pos:start="35:24" pos:end="35:45"><name pos:start="35:24" pos:end="35:40"><name pos:start="35:24" pos:end="35:24">s</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:40">io_buffer_size</name></name> <operator pos:start="35:42" pos:end="35:43">!=</operator> <literal type="number" pos:start="35:45" pos:end="35:45">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:71"><expr pos:start="37:13" pos:end="37:70"><call pos:start="37:13" pos:end="37:70"><name pos:start="37:13" pos:end="37:36">cpu_physical_memory_read</name><argument_list pos:start="37:37" pos:end="37:70">(<argument pos:start="37:38" pos:end="37:49"><expr pos:start="37:38" pos:end="37:49"><name pos:start="37:38" pos:end="37:49"><name pos:start="37:38" pos:end="37:39">bm</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:49">cur_addr</name></name></expr></argument>, <argument pos:start="37:52" pos:end="37:66"><expr pos:start="37:52" pos:end="37:66"><operator pos:start="37:52" pos:end="37:52">(</operator><name pos:start="37:53" pos:end="37:59">uint8_t</name> <operator pos:start="37:61" pos:end="37:61">*</operator><operator pos:start="37:62" pos:end="37:62">)</operator><operator pos:start="37:63" pos:end="37:63">&amp;</operator><name pos:start="37:64" pos:end="37:66">prd</name></expr></argument>, <argument pos:start="37:69" pos:end="37:69"><expr pos:start="37:69" pos:end="37:69"><literal type="number" pos:start="37:69" pos:end="37:69">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:30"><expr pos:start="39:13" pos:end="39:29"><name pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:14">bm</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:24">cur_addr</name></name> <operator pos:start="39:26" pos:end="39:27">+=</operator> <literal type="number" pos:start="39:29" pos:end="39:29">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:45"><expr pos:start="41:13" pos:end="41:44"><name pos:start="41:13" pos:end="41:20"><name pos:start="41:13" pos:end="41:15">prd</name><operator pos:start="41:16" pos:end="41:16">.</operator><name pos:start="41:17" pos:end="41:20">addr</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <call pos:start="41:24" pos:end="41:44"><name pos:start="41:24" pos:end="41:34">le32_to_cpu</name><argument_list pos:start="41:35" pos:end="41:44">(<argument pos:start="41:36" pos:end="41:43"><expr pos:start="41:36" pos:end="41:43"><name pos:start="41:36" pos:end="41:43"><name pos:start="41:36" pos:end="41:38">prd</name><operator pos:start="41:39" pos:end="41:39">.</operator><name pos:start="41:40" pos:end="41:43">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:45"><expr pos:start="43:13" pos:end="43:44"><name pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:15">prd</name><operator pos:start="43:16" pos:end="43:16">.</operator><name pos:start="43:17" pos:end="43:20">size</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <call pos:start="43:24" pos:end="43:44"><name pos:start="43:24" pos:end="43:34">le32_to_cpu</name><argument_list pos:start="43:35" pos:end="43:44">(<argument pos:start="43:36" pos:end="43:43"><expr pos:start="43:36" pos:end="43:43"><name pos:start="43:36" pos:end="43:43"><name pos:start="43:36" pos:end="43:38">prd</name><operator pos:start="43:39" pos:end="43:39">.</operator><name pos:start="43:40" pos:end="43:43">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:36"><expr pos:start="45:13" pos:end="45:35"><name pos:start="45:13" pos:end="45:15">len</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:26"><name pos:start="45:19" pos:end="45:21">prd</name><operator pos:start="45:22" pos:end="45:22">.</operator><name pos:start="45:23" pos:end="45:26">size</name></name> <operator pos:start="45:28" pos:end="45:28">&amp;</operator> <literal type="number" pos:start="45:30" pos:end="45:35">0xfffe</literal></expr>;</expr_stmt>

            <if_stmt pos:start="47:13" pos:end="49:30"><if pos:start="47:13" pos:end="49:30">if <condition pos:start="47:16" pos:end="47:25">(<expr pos:start="47:17" pos:end="47:24"><name pos:start="47:17" pos:end="47:19">len</name> <operator pos:start="47:21" pos:end="47:22">==</operator> <literal type="number" pos:start="47:24" pos:end="47:24">0</literal></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:30"><block_content pos:start="49:17" pos:end="49:30">

                <expr_stmt pos:start="49:17" pos:end="49:30"><expr pos:start="49:17" pos:end="49:29"><name pos:start="49:17" pos:end="49:19">len</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <literal type="number" pos:start="49:23" pos:end="49:29">0x10000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:34"><expr pos:start="51:13" pos:end="51:33"><name pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:14">bm</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:27">cur_prd_len</name></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <name pos:start="51:31" pos:end="51:33">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:40"><expr pos:start="53:13" pos:end="53:39"><name pos:start="53:13" pos:end="53:28"><name pos:start="53:13" pos:end="53:14">bm</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:28">cur_prd_addr</name></name> <operator pos:start="53:30" pos:end="53:30">=</operator> <name pos:start="53:32" pos:end="53:39"><name pos:start="53:32" pos:end="53:34">prd</name><operator pos:start="53:35" pos:end="53:35">.</operator><name pos:start="53:36" pos:end="53:39">addr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:55"><expr pos:start="55:13" pos:end="55:54"><name pos:start="55:13" pos:end="55:28"><name pos:start="55:13" pos:end="55:14">bm</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:28">cur_prd_last</name></name> <operator pos:start="55:30" pos:end="55:30">=</operator> <operator pos:start="55:32" pos:end="55:32">(</operator><name pos:start="55:33" pos:end="55:40"><name pos:start="55:33" pos:end="55:35">prd</name><operator pos:start="55:36" pos:end="55:36">.</operator><name pos:start="55:37" pos:end="55:40">size</name></name> <operator pos:start="55:42" pos:end="55:42">&amp;</operator> <literal type="number" pos:start="55:44" pos:end="55:53">0x80000000</literal><operator pos:start="55:54" pos:end="55:54">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:28"><expr pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:9">l</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <name pos:start="59:13" pos:end="59:27"><name pos:start="59:13" pos:end="59:14">bm</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:27">cur_prd_len</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="71:9"><if pos:start="61:9" pos:end="71:9">if <condition pos:start="61:12" pos:end="61:18">(<expr pos:start="61:13" pos:end="61:17"><name pos:start="61:13" pos:end="61:13">l</name> <operator pos:start="61:15" pos:end="61:15">&gt;</operator> <literal type="number" pos:start="61:17" pos:end="61:17">0</literal></expr>)</condition> <block pos:start="61:20" pos:end="71:9">{<block_content pos:start="63:13" pos:end="69:35">

            <expr_stmt pos:start="63:13" pos:end="63:57"><expr pos:start="63:13" pos:end="63:56"><call pos:start="63:13" pos:end="63:56"><name pos:start="63:13" pos:end="63:27">qemu_sglist_add</name><argument_list pos:start="63:28" pos:end="63:56">(<argument pos:start="63:29" pos:end="63:34"><expr pos:start="63:29" pos:end="63:34"><operator pos:start="63:29" pos:end="63:29">&amp;</operator><name pos:start="63:30" pos:end="63:34"><name pos:start="63:30" pos:end="63:30">s</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:34">sg</name></name></expr></argument>, <argument pos:start="63:37" pos:end="63:52"><expr pos:start="63:37" pos:end="63:52"><name pos:start="63:37" pos:end="63:52"><name pos:start="63:37" pos:end="63:38">bm</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:52">cur_prd_addr</name></name></expr></argument>, <argument pos:start="63:55" pos:end="63:55"><expr pos:start="63:55" pos:end="63:55"><name pos:start="63:55" pos:end="63:55">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:34"><expr pos:start="65:13" pos:end="65:33"><name pos:start="65:13" pos:end="65:28"><name pos:start="65:13" pos:end="65:14">bm</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:28">cur_prd_addr</name></name> <operator pos:start="65:30" pos:end="65:31">+=</operator> <name pos:start="65:33" pos:end="65:33">l</name></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:33"><expr pos:start="67:13" pos:end="67:32"><name pos:start="67:13" pos:end="67:27"><name pos:start="67:13" pos:end="67:14">bm</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:27">cur_prd_len</name></name> <operator pos:start="67:29" pos:end="67:30">-=</operator> <name pos:start="67:32" pos:end="67:32">l</name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:35"><expr pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:29"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:29">io_buffer_size</name></name> <operator pos:start="69:31" pos:end="69:32">+=</operator> <name pos:start="69:34" pos:end="69:34">l</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="75:5" pos:end="75:13">return <expr pos:start="75:12" pos:end="75:12"><literal type="number" pos:start="75:12" pos:end="75:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
