<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9737.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:27">gen_lods</name><parameter_list pos:start="1:28" pos:end="1:52">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:40">DisasContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:51"><decl pos:start="1:46" pos:end="1:51"><type pos:start="1:46" pos:end="1:51"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:51">ot</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:5">

    <expr_stmt pos:start="5:5" pos:end="5:30"><expr pos:start="5:5" pos:end="5:29"><call pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:26">gen_string_movl_A0_ESI</name><argument_list pos:start="5:27" pos:end="5:29">(<argument pos:start="5:28" pos:end="5:28"><expr pos:start="5:28" pos:end="5:28"><name pos:start="5:28" pos:end="5:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:39"><expr pos:start="7:5" pos:end="7:38"><call pos:start="7:5" pos:end="7:38"><name pos:start="7:5" pos:end="7:19">gen_op_ld_T0_A0</name><argument_list pos:start="7:20" pos:end="7:38">(<argument pos:start="7:21" pos:end="7:37"><expr pos:start="7:21" pos:end="7:37"><name pos:start="7:21" pos:end="7:22">ot</name> <operator pos:start="7:24" pos:end="7:24">+</operator> <name pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">mem_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:33"><expr pos:start="9:5" pos:end="9:32"><call pos:start="9:5" pos:end="9:32"><name pos:start="9:5" pos:end="9:21">gen_op_mov_reg_T0</name><argument_list pos:start="9:22" pos:end="9:32">(<argument pos:start="9:23" pos:end="9:24"><expr pos:start="9:23" pos:end="9:24"><name pos:start="9:23" pos:end="9:24">ot</name></expr></argument>, <argument pos:start="9:27" pos:end="9:31"><expr pos:start="9:27" pos:end="9:31"><name pos:start="9:27" pos:end="9:31">R_EAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="14:0"><expr pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:25">gen_op_movl_T0_Dshift</name><index pos:start="11:26" pos:end="11:29">[<expr pos:start="11:27" pos:end="11:28"><name pos:start="11:27" pos:end="11:28">ot</name></expr>]</index></name><operator pos:start="11:30" pos:end="11:30">(</operator><operator pos:start="11:31" pos:end="11:31">)</operator></expr>;</expr_stmt>

<cpp:ifdef pos:start="13:1" pos:end="13:20">#<cpp:directive pos:start="13:2" pos:end="13:6">ifdef</cpp:directive> <name pos:start="13:8" pos:end="13:20">TARGET_X86_64</name></cpp:ifdef>

    <if_stmt pos:start="15:5" pos:end="31:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:22">(<expr pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:16">aflag</name></name> <operator pos:start="15:18" pos:end="15:19">==</operator> <literal type="number" pos:start="15:21" pos:end="15:21">2</literal></expr>)</condition> <block pos:start="15:24" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:29">

        <expr_stmt pos:start="17:9" pos:end="17:29"><expr pos:start="17:9" pos:end="17:28"><call pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:26">gen_op_addq_ESI_T0</name><argument_list pos:start="17:27" pos:end="17:28">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="19:7" pos:end="27:5">else

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>

    if <condition pos:start="23:8" pos:end="23:17">(<expr pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:16">aflag</name></name></expr>)</condition> <block pos:start="23:19" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:29">

        <expr_stmt pos:start="25:9" pos:end="25:29"><expr pos:start="25:9" pos:end="25:28"><call pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:26">gen_op_addl_ESI_T0</name><argument_list pos:start="25:27" pos:end="25:28">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="31:5">else <block pos:start="27:12" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:29">

        <expr_stmt pos:start="29:9" pos:end="29:29"><expr pos:start="29:9" pos:end="29:28"><call pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:26">gen_op_addw_ESI_T0</name><argument_list pos:start="29:27" pos:end="29:28">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
