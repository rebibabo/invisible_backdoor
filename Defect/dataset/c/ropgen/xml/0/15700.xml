<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15700.c" pos:tabs="8"><function pos:start="1:1" pos:end="339:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">vfio_get_device</name><parameter_list pos:start="1:27" pos:end="1:80">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:36">VFIOGroup</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:43">group</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:55">char</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">name</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:79"><decl pos:start="1:64" pos:end="1:79"><type pos:start="1:64" pos:end="1:79"><name pos:start="1:64" pos:end="1:73">VFIODevice</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:79">vdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="339:1">{<block_content pos:start="5:5" pos:end="337:15">

    <decl_stmt pos:start="5:5" pos:end="5:69"><decl pos:start="5:5" pos:end="5:68"><type pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:27">vfio_device_info</name></name></type> <name pos:start="5:29" pos:end="5:36">dev_info</name> <init pos:start="5:38" pos:end="5:68">= <expr pos:start="5:40" pos:end="5:68"><block pos:start="5:40" pos:end="5:68">{ <expr pos:start="5:42" pos:end="5:66"><operator pos:start="5:42" pos:end="5:42">.</operator><name pos:start="5:43" pos:end="5:47">argsz</name> <operator pos:start="5:49" pos:end="5:49">=</operator> sizeof<operator pos:start="5:57" pos:end="5:57">(</operator><name pos:start="5:58" pos:end="5:65">dev_info</name><operator pos:start="5:66" pos:end="5:66">)</operator></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:69"><decl pos:start="7:5" pos:end="7:68"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:27">vfio_region_info</name></name></type> <name pos:start="7:29" pos:end="7:36">reg_info</name> <init pos:start="7:38" pos:end="7:68">= <expr pos:start="7:40" pos:end="7:68"><block pos:start="7:40" pos:end="7:68">{ <expr pos:start="7:42" pos:end="7:66"><operator pos:start="7:42" pos:end="7:42">.</operator><name pos:start="7:43" pos:end="7:47">argsz</name> <operator pos:start="7:49" pos:end="7:49">=</operator> sizeof<operator pos:start="7:57" pos:end="7:57">(</operator><name pos:start="7:58" pos:end="7:65">reg_info</name><operator pos:start="7:66" pos:end="7:66">)</operator></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:66"><decl pos:start="9:5" pos:end="9:65"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:24">vfio_irq_info</name></name></type> <name pos:start="9:26" pos:end="9:33">irq_info</name> <init pos:start="9:35" pos:end="9:65">= <expr pos:start="9:37" pos:end="9:65"><block pos:start="9:37" pos:end="9:65">{ <expr pos:start="9:39" pos:end="9:63"><operator pos:start="9:39" pos:end="9:39">.</operator><name pos:start="9:40" pos:end="9:44">argsz</name> <operator pos:start="9:46" pos:end="9:46">=</operator> sizeof<operator pos:start="9:54" pos:end="9:54">(</operator><name pos:start="9:55" pos:end="9:62">irq_info</name><operator pos:start="9:63" pos:end="9:63">)</operator></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>, <decl pos:start="11:14" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:14">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:59"><expr pos:start="15:5" pos:end="15:58"><name pos:start="15:5" pos:end="15:7">ret</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:58"><name pos:start="15:11" pos:end="15:15">ioctl</name><argument_list pos:start="15:16" pos:end="15:58">(<argument pos:start="15:17" pos:end="15:25"><expr pos:start="15:17" pos:end="15:25"><name pos:start="15:17" pos:end="15:25"><name pos:start="15:17" pos:end="15:21">group</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:25">fd</name></name></expr></argument>, <argument pos:start="15:28" pos:end="15:51"><expr pos:start="15:28" pos:end="15:51"><name pos:start="15:28" pos:end="15:51">VFIO_GROUP_GET_DEVICE_FD</name></expr></argument>, <argument pos:start="15:54" pos:end="15:57"><expr pos:start="15:54" pos:end="15:57"><name pos:start="15:54" pos:end="15:57">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="29:5"><if pos:start="17:5" pos:end="29:5">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:13">&lt;</operator> <literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>)</condition> <block pos:start="17:18" pos:end="29:5">{<block_content pos:start="19:9" pos:end="27:19">

        <expr_stmt pos:start="19:9" pos:end="21:43"><expr pos:start="19:9" pos:end="21:42"><call pos:start="19:9" pos:end="21:42"><name pos:start="19:9" pos:end="19:20">error_report</name><argument_list pos:start="19:21" pos:end="21:42">(<argument pos:start="19:22" pos:end="19:70"><expr pos:start="19:22" pos:end="19:70"><literal type="string" pos:start="19:22" pos:end="19:70">"vfio: error getting device %s from group %d: %m"</literal></expr></argument>,

                     <argument pos:start="21:22" pos:end="21:25"><expr pos:start="21:22" pos:end="21:25"><name pos:start="21:22" pos:end="21:25">name</name></expr></argument>, <argument pos:start="21:28" pos:end="21:41"><expr pos:start="21:28" pos:end="21:41"><name pos:start="21:28" pos:end="21:41"><name pos:start="21:28" pos:end="21:32">group</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:41">groupid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="25:77"><expr pos:start="23:9" pos:end="25:76"><call pos:start="23:9" pos:end="25:76"><name pos:start="23:9" pos:end="23:20">error_printf</name><argument_list pos:start="23:21" pos:end="25:76">(<argument pos:start="23:22" pos:end="25:59"><expr pos:start="23:22" pos:end="25:59"><literal type="string" pos:start="23:22" pos:end="23:76">"Verify all devices in group %d are bound to vfio-pci "</literal>

                     <literal type="string" pos:start="25:22" pos:end="25:59">"or pci-stub and not already in use\n"</literal></expr></argument>, <argument pos:start="25:62" pos:end="25:75"><expr pos:start="25:62" pos:end="25:75"><name pos:start="25:62" pos:end="25:75"><name pos:start="25:62" pos:end="25:66">group</name><operator pos:start="25:67" pos:end="25:68">-&gt;</operator><name pos:start="25:69" pos:end="25:75">groupid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:19"><expr pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:8">vdev</name><operator pos:start="33:9" pos:end="33:10">-&gt;</operator><name pos:start="33:11" pos:end="33:12">fd</name></name> <operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:18">ret</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:8">vdev</name><operator pos:start="35:9" pos:end="35:10">-&gt;</operator><name pos:start="35:11" pos:end="35:15">group</name></name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:23">group</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:55"><expr pos:start="37:5" pos:end="37:54"><call pos:start="37:5" pos:end="37:54"><name pos:start="37:5" pos:end="37:21">QLIST_INSERT_HEAD</name><argument_list pos:start="37:22" pos:end="37:54">(<argument pos:start="37:23" pos:end="37:41"><expr pos:start="37:23" pos:end="37:41"><operator pos:start="37:23" pos:end="37:23">&amp;</operator><name pos:start="37:24" pos:end="37:41"><name pos:start="37:24" pos:end="37:28">group</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:41">device_list</name></name></expr></argument>, <argument pos:start="37:44" pos:end="37:47"><expr pos:start="37:44" pos:end="37:47"><name pos:start="37:44" pos:end="37:47">vdev</name></expr></argument>, <argument pos:start="37:50" pos:end="37:53"><expr pos:start="37:50" pos:end="37:53"><name pos:start="37:50" pos:end="37:53">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:29">/* Sanity check device */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:59"><expr pos:start="43:5" pos:end="43:58"><name pos:start="43:5" pos:end="43:7">ret</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:58"><name pos:start="43:11" pos:end="43:15">ioctl</name><argument_list pos:start="43:16" pos:end="43:58">(<argument pos:start="43:17" pos:end="43:24"><expr pos:start="43:17" pos:end="43:24"><name pos:start="43:17" pos:end="43:24"><name pos:start="43:17" pos:end="43:20">vdev</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:24">fd</name></name></expr></argument>, <argument pos:start="43:27" pos:end="43:46"><expr pos:start="43:27" pos:end="43:46"><name pos:start="43:27" pos:end="43:46">VFIO_DEVICE_GET_INFO</name></expr></argument>, <argument pos:start="43:49" pos:end="43:57"><expr pos:start="43:49" pos:end="43:57"><operator pos:start="43:49" pos:end="43:49">&amp;</operator><name pos:start="43:50" pos:end="43:57">dev_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:12">(<expr pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">ret</name></expr>)</condition> <block pos:start="45:14" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:19">

        <expr_stmt pos:start="47:9" pos:end="47:60"><expr pos:start="47:9" pos:end="47:59"><call pos:start="47:9" pos:end="47:59"><name pos:start="47:9" pos:end="47:20">error_report</name><argument_list pos:start="47:21" pos:end="47:59">(<argument pos:start="47:22" pos:end="47:58"><expr pos:start="47:22" pos:end="47:58"><literal type="string" pos:start="47:22" pos:end="47:58">"vfio: error getting device info: %m"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="49:9" pos:end="49:19">goto <name pos:start="49:14" pos:end="49:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="57:69"><expr pos:start="55:5" pos:end="57:68"><call pos:start="55:5" pos:end="57:68"><name pos:start="55:5" pos:end="55:11">DPRINTF</name><argument_list pos:start="55:12" pos:end="57:68">(<argument pos:start="55:13" pos:end="55:58"><expr pos:start="55:13" pos:end="55:58"><literal type="string" pos:start="55:13" pos:end="55:58">"Device %s flags: %u, regions: %u, irgs: %u\n"</literal></expr></argument>, <argument pos:start="55:61" pos:end="55:64"><expr pos:start="55:61" pos:end="55:64"><name pos:start="55:61" pos:end="55:64">name</name></expr></argument>,

            <argument pos:start="57:13" pos:end="57:26"><expr pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:20">dev_info</name><operator pos:start="57:21" pos:end="57:21">.</operator><name pos:start="57:22" pos:end="57:26">flags</name></name></expr></argument>, <argument pos:start="57:29" pos:end="57:48"><expr pos:start="57:29" pos:end="57:48"><name pos:start="57:29" pos:end="57:48"><name pos:start="57:29" pos:end="57:36">dev_info</name><operator pos:start="57:37" pos:end="57:37">.</operator><name pos:start="57:38" pos:end="57:48">num_regions</name></name></expr></argument>, <argument pos:start="57:51" pos:end="57:67"><expr pos:start="57:51" pos:end="57:67"><name pos:start="57:51" pos:end="57:67"><name pos:start="57:51" pos:end="57:58">dev_info</name><operator pos:start="57:59" pos:end="57:59">.</operator><name pos:start="57:60" pos:end="57:67">num_irqs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:50">(<expr pos:start="61:9" pos:end="61:49"><operator pos:start="61:9" pos:end="61:9">!</operator><operator pos:start="61:10" pos:end="61:10">(</operator><name pos:start="61:11" pos:end="61:24"><name pos:start="61:11" pos:end="61:18">dev_info</name><operator pos:start="61:19" pos:end="61:19">.</operator><name pos:start="61:20" pos:end="61:24">flags</name></name> <operator pos:start="61:26" pos:end="61:26">&amp;</operator> <name pos:start="61:28" pos:end="61:48">VFIO_DEVICE_FLAGS_PCI</name><operator pos:start="61:49" pos:end="61:49">)</operator></expr>)</condition> <block pos:start="61:52" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:19">

        <expr_stmt pos:start="63:9" pos:end="63:58"><expr pos:start="63:9" pos:end="63:57"><call pos:start="63:9" pos:end="63:57"><name pos:start="63:9" pos:end="63:20">error_report</name><argument_list pos:start="63:21" pos:end="63:57">(<argument pos:start="63:22" pos:end="63:56"><expr pos:start="63:22" pos:end="63:56"><literal type="string" pos:start="63:22" pos:end="63:56">"vfio: Um, this isn't a PCI device"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:19">goto <name pos:start="65:14" pos:end="65:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:69"><expr pos:start="71:5" pos:end="71:68"><name pos:start="71:5" pos:end="71:21"><name pos:start="71:5" pos:end="71:8">vdev</name><operator pos:start="71:9" pos:end="71:10">-&gt;</operator><name pos:start="71:11" pos:end="71:21">reset_works</name></name> <operator pos:start="71:23" pos:end="71:23">=</operator> <operator pos:start="71:25" pos:end="71:25">!</operator><operator pos:start="71:26" pos:end="71:26">!</operator><operator pos:start="71:27" pos:end="71:27">(</operator><name pos:start="71:28" pos:end="71:41"><name pos:start="71:28" pos:end="71:35">dev_info</name><operator pos:start="71:36" pos:end="71:36">.</operator><name pos:start="71:37" pos:end="71:41">flags</name></name> <operator pos:start="71:43" pos:end="71:43">&amp;</operator> <name pos:start="71:45" pos:end="71:67">VFIO_DEVICE_FLAGS_RESET</name><operator pos:start="71:68" pos:end="71:68">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:27">(<expr pos:start="73:9" pos:end="73:26"><operator pos:start="73:9" pos:end="73:9">!</operator><name pos:start="73:10" pos:end="73:26"><name pos:start="73:10" pos:end="73:13">vdev</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:26">reset_works</name></name></expr>)</condition> <block pos:start="73:29" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:72">

        <expr_stmt pos:start="75:9" pos:end="75:72"><expr pos:start="75:9" pos:end="75:71"><call pos:start="75:9" pos:end="75:71"><name pos:start="75:9" pos:end="75:20">error_report</name><argument_list pos:start="75:21" pos:end="75:71">(<argument pos:start="75:22" pos:end="75:64"><expr pos:start="75:22" pos:end="75:64"><literal type="string" pos:start="75:22" pos:end="75:64">"Warning, device %s does not support reset"</literal></expr></argument>, <argument pos:start="75:67" pos:end="75:70"><expr pos:start="75:67" pos:end="75:70"><name pos:start="75:67" pos:end="75:70">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="89:5"><if pos:start="81:5" pos:end="89:5">if <condition pos:start="81:8" pos:end="81:64">(<expr pos:start="81:9" pos:end="81:63"><name pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:16">dev_info</name><operator pos:start="81:17" pos:end="81:17">.</operator><name pos:start="81:18" pos:end="81:28">num_regions</name></name> <operator pos:start="81:30" pos:end="81:30">&lt;</operator> <name pos:start="81:32" pos:end="81:59">VFIO_PCI_CONFIG_REGION_INDEX</name> <operator pos:start="81:61" pos:end="81:61">+</operator> <literal type="number" pos:start="81:63" pos:end="81:63">1</literal></expr>)</condition> <block pos:start="81:66" pos:end="89:5">{<block_content pos:start="83:9" pos:end="87:19">

        <expr_stmt pos:start="83:9" pos:end="85:43"><expr pos:start="83:9" pos:end="85:42"><call pos:start="83:9" pos:end="85:42"><name pos:start="83:9" pos:end="83:20">error_report</name><argument_list pos:start="83:21" pos:end="85:42">(<argument pos:start="83:22" pos:end="83:63"><expr pos:start="83:22" pos:end="83:63"><literal type="string" pos:start="83:22" pos:end="83:63">"vfio: unexpected number of io regions %u"</literal></expr></argument>,

                     <argument pos:start="85:22" pos:end="85:41"><expr pos:start="85:22" pos:end="85:41"><name pos:start="85:22" pos:end="85:41"><name pos:start="85:22" pos:end="85:29">dev_info</name><operator pos:start="85:30" pos:end="85:30">.</operator><name pos:start="85:31" pos:end="85:41">num_regions</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="87:9" pos:end="87:19">goto <name pos:start="87:14" pos:end="87:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:56">(<expr pos:start="93:9" pos:end="93:55"><name pos:start="93:9" pos:end="93:25"><name pos:start="93:9" pos:end="93:16">dev_info</name><operator pos:start="93:17" pos:end="93:17">.</operator><name pos:start="93:18" pos:end="93:25">num_irqs</name></name> <operator pos:start="93:27" pos:end="93:27">&lt;</operator> <name pos:start="93:29" pos:end="93:51">VFIO_PCI_MSIX_IRQ_INDEX</name> <operator pos:start="93:53" pos:end="93:53">+</operator> <literal type="number" pos:start="93:55" pos:end="93:55">1</literal></expr>)</condition> <block pos:start="93:58" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:19">

        <expr_stmt pos:start="95:9" pos:end="95:78"><expr pos:start="95:9" pos:end="95:77"><call pos:start="95:9" pos:end="95:77"><name pos:start="95:9" pos:end="95:20">error_report</name><argument_list pos:start="95:21" pos:end="95:77">(<argument pos:start="95:22" pos:end="95:57"><expr pos:start="95:22" pos:end="95:57"><literal type="string" pos:start="95:22" pos:end="95:57">"vfio: unexpected number of irqs %u"</literal></expr></argument>, <argument pos:start="95:60" pos:end="95:76"><expr pos:start="95:60" pos:end="95:76"><name pos:start="95:60" pos:end="95:76"><name pos:start="95:60" pos:end="95:67">dev_info</name><operator pos:start="95:68" pos:end="95:68">.</operator><name pos:start="95:69" pos:end="95:76">num_irqs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="97:9" pos:end="97:19">goto <name pos:start="97:14" pos:end="97:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="103:5" pos:end="143:5">for <control pos:start="103:9" pos:end="103:76">(<init pos:start="103:10" pos:end="103:40"><expr pos:start="103:10" pos:end="103:39"><name pos:start="103:10" pos:end="103:10">i</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <name pos:start="103:14" pos:end="103:39">VFIO_PCI_BAR0_REGION_INDEX</name></expr>;</init> <condition pos:start="103:42" pos:end="103:71"><expr pos:start="103:42" pos:end="103:70"><name pos:start="103:42" pos:end="103:42">i</name> <operator pos:start="103:44" pos:end="103:44">&lt;</operator> <name pos:start="103:46" pos:end="103:70">VFIO_PCI_ROM_REGION_INDEX</name></expr>;</condition> <incr pos:start="103:73" pos:end="103:75"><expr pos:start="103:73" pos:end="103:75"><name pos:start="103:73" pos:end="103:73">i</name><operator pos:start="103:74" pos:end="103:75">++</operator></expr></incr>)</control> <block pos:start="103:78" pos:end="143:5">{<block_content pos:start="105:9" pos:end="141:42">

        <expr_stmt pos:start="105:9" pos:end="105:27"><expr pos:start="105:9" pos:end="105:26"><name pos:start="105:9" pos:end="105:22"><name pos:start="105:9" pos:end="105:16">reg_info</name><operator pos:start="105:17" pos:end="105:17">.</operator><name pos:start="105:18" pos:end="105:22">index</name></name> <operator pos:start="105:24" pos:end="105:24">=</operator> <name pos:start="105:26" pos:end="105:26">i</name></expr>;</expr_stmt>



        <expr_stmt pos:start="109:9" pos:end="109:70"><expr pos:start="109:9" pos:end="109:69"><name pos:start="109:9" pos:end="109:11">ret</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <call pos:start="109:15" pos:end="109:69"><name pos:start="109:15" pos:end="109:19">ioctl</name><argument_list pos:start="109:20" pos:end="109:69">(<argument pos:start="109:21" pos:end="109:28"><expr pos:start="109:21" pos:end="109:28"><name pos:start="109:21" pos:end="109:28"><name pos:start="109:21" pos:end="109:24">vdev</name><operator pos:start="109:25" pos:end="109:26">-&gt;</operator><name pos:start="109:27" pos:end="109:28">fd</name></name></expr></argument>, <argument pos:start="109:31" pos:end="109:57"><expr pos:start="109:31" pos:end="109:57"><name pos:start="109:31" pos:end="109:57">VFIO_DEVICE_GET_REGION_INFO</name></expr></argument>, <argument pos:start="109:60" pos:end="109:68"><expr pos:start="109:60" pos:end="109:68"><operator pos:start="109:60" pos:end="109:60">&amp;</operator><name pos:start="109:61" pos:end="109:68">reg_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="117:9"><if pos:start="111:9" pos:end="117:9">if <condition pos:start="111:12" pos:end="111:16">(<expr pos:start="111:13" pos:end="111:15"><name pos:start="111:13" pos:end="111:15">ret</name></expr>)</condition> <block pos:start="111:18" pos:end="117:9">{<block_content pos:start="113:13" pos:end="115:23">

            <expr_stmt pos:start="113:13" pos:end="113:70"><expr pos:start="113:13" pos:end="113:69"><call pos:start="113:13" pos:end="113:69"><name pos:start="113:13" pos:end="113:24">error_report</name><argument_list pos:start="113:25" pos:end="113:69">(<argument pos:start="113:26" pos:end="113:65"><expr pos:start="113:26" pos:end="113:65"><literal type="string" pos:start="113:26" pos:end="113:65">"vfio: Error getting region %d info: %m"</literal></expr></argument>, <argument pos:start="113:68" pos:end="113:68"><expr pos:start="113:68" pos:end="113:68"><name pos:start="113:68" pos:end="113:68">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="115:13" pos:end="115:23">goto <name pos:start="115:18" pos:end="115:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="121:9" pos:end="121:51"><expr pos:start="121:9" pos:end="121:50"><call pos:start="121:9" pos:end="121:50"><name pos:start="121:9" pos:end="121:15">DPRINTF</name><argument_list pos:start="121:16" pos:end="121:50">(<argument pos:start="121:17" pos:end="121:40"><expr pos:start="121:17" pos:end="121:40"><literal type="string" pos:start="121:17" pos:end="121:40">"Device %s region %d:\n"</literal></expr></argument>, <argument pos:start="121:43" pos:end="121:46"><expr pos:start="121:43" pos:end="121:46"><name pos:start="121:43" pos:end="121:46">name</name></expr></argument>, <argument pos:start="121:49" pos:end="121:49"><expr pos:start="121:49" pos:end="121:49"><name pos:start="121:49" pos:end="121:49">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="127:47"><expr pos:start="123:9" pos:end="127:46"><call pos:start="123:9" pos:end="127:46"><name pos:start="123:9" pos:end="123:15">DPRINTF</name><argument_list pos:start="123:16" pos:end="127:46">(<argument pos:start="123:17" pos:end="123:62"><expr pos:start="123:17" pos:end="123:62"><literal type="string" pos:start="123:17" pos:end="123:62">"  size: 0x%lx, offset: 0x%lx, flags: 0x%lx\n"</literal></expr></argument>,

                <argument pos:start="125:17" pos:end="125:44"><expr pos:start="125:17" pos:end="125:44"><operator pos:start="125:17" pos:end="125:17">(</operator><name pos:start="125:18" pos:end="125:25">unsigned</name> <name pos:start="125:27" pos:end="125:30">long</name><operator pos:start="125:31" pos:end="125:31">)</operator><name pos:start="125:32" pos:end="125:44"><name pos:start="125:32" pos:end="125:39">reg_info</name><operator pos:start="125:40" pos:end="125:40">.</operator><name pos:start="125:41" pos:end="125:44">size</name></name></expr></argument>, <argument pos:start="125:47" pos:end="125:76"><expr pos:start="125:47" pos:end="125:76"><operator pos:start="125:47" pos:end="125:47">(</operator><name pos:start="125:48" pos:end="125:55">unsigned</name> <name pos:start="125:57" pos:end="125:60">long</name><operator pos:start="125:61" pos:end="125:61">)</operator><name pos:start="125:62" pos:end="125:76"><name pos:start="125:62" pos:end="125:69">reg_info</name><operator pos:start="125:70" pos:end="125:70">.</operator><name pos:start="125:71" pos:end="125:76">offset</name></name></expr></argument>,

                <argument pos:start="127:17" pos:end="127:45"><expr pos:start="127:17" pos:end="127:45"><operator pos:start="127:17" pos:end="127:17">(</operator><name pos:start="127:18" pos:end="127:25">unsigned</name> <name pos:start="127:27" pos:end="127:30">long</name><operator pos:start="127:31" pos:end="127:31">)</operator><name pos:start="127:32" pos:end="127:45"><name pos:start="127:32" pos:end="127:39">reg_info</name><operator pos:start="127:40" pos:end="127:40">.</operator><name pos:start="127:41" pos:end="127:45">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="131:9" pos:end="131:45"><expr pos:start="131:9" pos:end="131:44"><name pos:start="131:9" pos:end="131:21"><name pos:start="131:9" pos:end="131:12">vdev</name><operator pos:start="131:13" pos:end="131:14">-&gt;</operator><name pos:start="131:15" pos:end="131:18">bars</name><index pos:start="131:19" pos:end="131:21">[<expr pos:start="131:20" pos:end="131:20"><name pos:start="131:20" pos:end="131:20">i</name></expr>]</index></name><operator pos:start="131:22" pos:end="131:22">.</operator><name pos:start="131:23" pos:end="131:27">flags</name> <operator pos:start="131:29" pos:end="131:29">=</operator> <name pos:start="131:31" pos:end="131:44"><name pos:start="131:31" pos:end="131:38">reg_info</name><operator pos:start="131:39" pos:end="131:39">.</operator><name pos:start="131:40" pos:end="131:44">flags</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:43"><expr pos:start="133:9" pos:end="133:42"><name pos:start="133:9" pos:end="133:21"><name pos:start="133:9" pos:end="133:12">vdev</name><operator pos:start="133:13" pos:end="133:14">-&gt;</operator><name pos:start="133:15" pos:end="133:18">bars</name><index pos:start="133:19" pos:end="133:21">[<expr pos:start="133:20" pos:end="133:20"><name pos:start="133:20" pos:end="133:20">i</name></expr>]</index></name><operator pos:start="133:22" pos:end="133:22">.</operator><name pos:start="133:23" pos:end="133:26">size</name> <operator pos:start="133:28" pos:end="133:28">=</operator> <name pos:start="133:30" pos:end="133:42"><name pos:start="133:30" pos:end="133:37">reg_info</name><operator pos:start="133:38" pos:end="133:38">.</operator><name pos:start="133:39" pos:end="133:42">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:50"><expr pos:start="135:9" pos:end="135:49"><name pos:start="135:9" pos:end="135:21"><name pos:start="135:9" pos:end="135:12">vdev</name><operator pos:start="135:13" pos:end="135:14">-&gt;</operator><name pos:start="135:15" pos:end="135:18">bars</name><index pos:start="135:19" pos:end="135:21">[<expr pos:start="135:20" pos:end="135:20"><name pos:start="135:20" pos:end="135:20">i</name></expr>]</index></name><operator pos:start="135:22" pos:end="135:22">.</operator><name pos:start="135:23" pos:end="135:31">fd_offset</name> <operator pos:start="135:33" pos:end="135:33">=</operator> <name pos:start="135:35" pos:end="135:49"><name pos:start="135:35" pos:end="135:42">reg_info</name><operator pos:start="135:43" pos:end="135:43">.</operator><name pos:start="135:44" pos:end="135:49">offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:36"><expr pos:start="137:9" pos:end="137:35"><name pos:start="137:9" pos:end="137:21"><name pos:start="137:9" pos:end="137:12">vdev</name><operator pos:start="137:13" pos:end="137:14">-&gt;</operator><name pos:start="137:15" pos:end="137:18">bars</name><index pos:start="137:19" pos:end="137:21">[<expr pos:start="137:20" pos:end="137:20"><name pos:start="137:20" pos:end="137:20">i</name></expr>]</index></name><operator pos:start="137:22" pos:end="137:22">.</operator><name pos:start="137:23" pos:end="137:24">fd</name> <operator pos:start="137:26" pos:end="137:26">=</operator> <name pos:start="137:28" pos:end="137:35"><name pos:start="137:28" pos:end="137:31">vdev</name><operator pos:start="137:32" pos:end="137:33">-&gt;</operator><name pos:start="137:34" pos:end="137:35">fd</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:29"><expr pos:start="139:9" pos:end="139:28"><name pos:start="139:9" pos:end="139:21"><name pos:start="139:9" pos:end="139:12">vdev</name><operator pos:start="139:13" pos:end="139:14">-&gt;</operator><name pos:start="139:15" pos:end="139:18">bars</name><index pos:start="139:19" pos:end="139:21">[<expr pos:start="139:20" pos:end="139:20"><name pos:start="139:20" pos:end="139:20">i</name></expr>]</index></name><operator pos:start="139:22" pos:end="139:22">.</operator><name pos:start="139:23" pos:end="139:24">nr</name> <operator pos:start="139:26" pos:end="139:26">=</operator> <name pos:start="139:28" pos:end="139:28">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:42"><expr pos:start="141:9" pos:end="141:41"><call pos:start="141:9" pos:end="141:41"><name pos:start="141:9" pos:end="141:18">QLIST_INIT</name><argument_list pos:start="141:19" pos:end="141:41">(<argument pos:start="141:20" pos:end="141:40"><expr pos:start="141:20" pos:end="141:40"><operator pos:start="141:20" pos:end="141:20">&amp;</operator><name pos:start="141:21" pos:end="141:33"><name pos:start="141:21" pos:end="141:24">vdev</name><operator pos:start="141:25" pos:end="141:26">-&gt;</operator><name pos:start="141:27" pos:end="141:30">bars</name><index pos:start="141:31" pos:end="141:33">[<expr pos:start="141:32" pos:end="141:32"><name pos:start="141:32" pos:end="141:32">i</name></expr>]</index></name><operator pos:start="141:34" pos:end="141:34">.</operator><name pos:start="141:35" pos:end="141:40">quirks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="147:5" pos:end="147:47"><expr pos:start="147:5" pos:end="147:46"><name pos:start="147:5" pos:end="147:18"><name pos:start="147:5" pos:end="147:12">reg_info</name><operator pos:start="147:13" pos:end="147:13">.</operator><name pos:start="147:14" pos:end="147:18">index</name></name> <operator pos:start="147:20" pos:end="147:20">=</operator> <name pos:start="147:22" pos:end="147:46">VFIO_PCI_ROM_REGION_INDEX</name></expr>;</expr_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:66"><expr pos:start="151:5" pos:end="151:65"><name pos:start="151:5" pos:end="151:7">ret</name> <operator pos:start="151:9" pos:end="151:9">=</operator> <call pos:start="151:11" pos:end="151:65"><name pos:start="151:11" pos:end="151:15">ioctl</name><argument_list pos:start="151:16" pos:end="151:65">(<argument pos:start="151:17" pos:end="151:24"><expr pos:start="151:17" pos:end="151:24"><name pos:start="151:17" pos:end="151:24"><name pos:start="151:17" pos:end="151:20">vdev</name><operator pos:start="151:21" pos:end="151:22">-&gt;</operator><name pos:start="151:23" pos:end="151:24">fd</name></name></expr></argument>, <argument pos:start="151:27" pos:end="151:53"><expr pos:start="151:27" pos:end="151:53"><name pos:start="151:27" pos:end="151:53">VFIO_DEVICE_GET_REGION_INFO</name></expr></argument>, <argument pos:start="151:56" pos:end="151:64"><expr pos:start="151:56" pos:end="151:64"><operator pos:start="151:56" pos:end="151:56">&amp;</operator><name pos:start="151:57" pos:end="151:64">reg_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="159:5"><if pos:start="153:5" pos:end="159:5">if <condition pos:start="153:8" pos:end="153:12">(<expr pos:start="153:9" pos:end="153:11"><name pos:start="153:9" pos:end="153:11">ret</name></expr>)</condition> <block pos:start="153:14" pos:end="159:5">{<block_content pos:start="155:9" pos:end="157:19">

        <expr_stmt pos:start="155:9" pos:end="155:57"><expr pos:start="155:9" pos:end="155:56"><call pos:start="155:9" pos:end="155:56"><name pos:start="155:9" pos:end="155:20">error_report</name><argument_list pos:start="155:21" pos:end="155:56">(<argument pos:start="155:22" pos:end="155:55"><expr pos:start="155:22" pos:end="155:55"><literal type="string" pos:start="155:22" pos:end="155:55">"vfio: Error getting ROM info: %m"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="157:9" pos:end="157:19">goto <name pos:start="157:14" pos:end="157:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:38"><expr pos:start="163:5" pos:end="163:37"><call pos:start="163:5" pos:end="163:37"><name pos:start="163:5" pos:end="163:11">DPRINTF</name><argument_list pos:start="163:12" pos:end="163:37">(<argument pos:start="163:13" pos:end="163:30"><expr pos:start="163:13" pos:end="163:30"><literal type="string" pos:start="163:13" pos:end="163:30">"Device %s ROM:\n"</literal></expr></argument>, <argument pos:start="163:33" pos:end="163:36"><expr pos:start="163:33" pos:end="163:36"><name pos:start="163:33" pos:end="163:36">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="169:43"><expr pos:start="165:5" pos:end="169:42"><call pos:start="165:5" pos:end="169:42"><name pos:start="165:5" pos:end="165:11">DPRINTF</name><argument_list pos:start="165:12" pos:end="169:42">(<argument pos:start="165:13" pos:end="165:58"><expr pos:start="165:13" pos:end="165:58"><literal type="string" pos:start="165:13" pos:end="165:58">"  size: 0x%lx, offset: 0x%lx, flags: 0x%lx\n"</literal></expr></argument>,

            <argument pos:start="167:13" pos:end="167:40"><expr pos:start="167:13" pos:end="167:40"><operator pos:start="167:13" pos:end="167:13">(</operator><name pos:start="167:14" pos:end="167:21">unsigned</name> <name pos:start="167:23" pos:end="167:26">long</name><operator pos:start="167:27" pos:end="167:27">)</operator><name pos:start="167:28" pos:end="167:40"><name pos:start="167:28" pos:end="167:35">reg_info</name><operator pos:start="167:36" pos:end="167:36">.</operator><name pos:start="167:37" pos:end="167:40">size</name></name></expr></argument>, <argument pos:start="167:43" pos:end="167:72"><expr pos:start="167:43" pos:end="167:72"><operator pos:start="167:43" pos:end="167:43">(</operator><name pos:start="167:44" pos:end="167:51">unsigned</name> <name pos:start="167:53" pos:end="167:56">long</name><operator pos:start="167:57" pos:end="167:57">)</operator><name pos:start="167:58" pos:end="167:72"><name pos:start="167:58" pos:end="167:65">reg_info</name><operator pos:start="167:66" pos:end="167:66">.</operator><name pos:start="167:67" pos:end="167:72">offset</name></name></expr></argument>,

            <argument pos:start="169:13" pos:end="169:41"><expr pos:start="169:13" pos:end="169:41"><operator pos:start="169:13" pos:end="169:13">(</operator><name pos:start="169:14" pos:end="169:21">unsigned</name> <name pos:start="169:23" pos:end="169:26">long</name><operator pos:start="169:27" pos:end="169:27">)</operator><name pos:start="169:28" pos:end="169:41"><name pos:start="169:28" pos:end="169:35">reg_info</name><operator pos:start="169:36" pos:end="169:36">.</operator><name pos:start="169:37" pos:end="169:41">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="173:5" pos:end="173:35"><expr pos:start="173:5" pos:end="173:34"><name pos:start="173:5" pos:end="173:18"><name pos:start="173:5" pos:end="173:8">vdev</name><operator pos:start="173:9" pos:end="173:10">-&gt;</operator><name pos:start="173:11" pos:end="173:18">rom_size</name></name> <operator pos:start="173:20" pos:end="173:20">=</operator> <name pos:start="173:22" pos:end="173:34"><name pos:start="173:22" pos:end="173:29">reg_info</name><operator pos:start="173:30" pos:end="173:30">.</operator><name pos:start="173:31" pos:end="173:34">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:39"><expr pos:start="175:5" pos:end="175:38"><name pos:start="175:5" pos:end="175:20"><name pos:start="175:5" pos:end="175:8">vdev</name><operator pos:start="175:9" pos:end="175:10">-&gt;</operator><name pos:start="175:11" pos:end="175:20">rom_offset</name></name> <operator pos:start="175:22" pos:end="175:22">=</operator> <name pos:start="175:24" pos:end="175:38"><name pos:start="175:24" pos:end="175:31">reg_info</name><operator pos:start="175:32" pos:end="175:32">.</operator><name pos:start="175:33" pos:end="175:38">offset</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="179:5" pos:end="179:50"><expr pos:start="179:5" pos:end="179:49"><name pos:start="179:5" pos:end="179:18"><name pos:start="179:5" pos:end="179:12">reg_info</name><operator pos:start="179:13" pos:end="179:13">.</operator><name pos:start="179:14" pos:end="179:18">index</name></name> <operator pos:start="179:20" pos:end="179:20">=</operator> <name pos:start="179:22" pos:end="179:49">VFIO_PCI_CONFIG_REGION_INDEX</name></expr>;</expr_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:66"><expr pos:start="183:5" pos:end="183:65"><name pos:start="183:5" pos:end="183:7">ret</name> <operator pos:start="183:9" pos:end="183:9">=</operator> <call pos:start="183:11" pos:end="183:65"><name pos:start="183:11" pos:end="183:15">ioctl</name><argument_list pos:start="183:16" pos:end="183:65">(<argument pos:start="183:17" pos:end="183:24"><expr pos:start="183:17" pos:end="183:24"><name pos:start="183:17" pos:end="183:24"><name pos:start="183:17" pos:end="183:20">vdev</name><operator pos:start="183:21" pos:end="183:22">-&gt;</operator><name pos:start="183:23" pos:end="183:24">fd</name></name></expr></argument>, <argument pos:start="183:27" pos:end="183:53"><expr pos:start="183:27" pos:end="183:53"><name pos:start="183:27" pos:end="183:53">VFIO_DEVICE_GET_REGION_INFO</name></expr></argument>, <argument pos:start="183:56" pos:end="183:64"><expr pos:start="183:56" pos:end="183:64"><operator pos:start="183:56" pos:end="183:56">&amp;</operator><name pos:start="183:57" pos:end="183:64">reg_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="185:5" pos:end="191:5"><if pos:start="185:5" pos:end="191:5">if <condition pos:start="185:8" pos:end="185:12">(<expr pos:start="185:9" pos:end="185:11"><name pos:start="185:9" pos:end="185:11">ret</name></expr>)</condition> <block pos:start="185:14" pos:end="191:5">{<block_content pos:start="187:9" pos:end="189:19">

        <expr_stmt pos:start="187:9" pos:end="187:60"><expr pos:start="187:9" pos:end="187:59"><call pos:start="187:9" pos:end="187:59"><name pos:start="187:9" pos:end="187:20">error_report</name><argument_list pos:start="187:21" pos:end="187:59">(<argument pos:start="187:22" pos:end="187:58"><expr pos:start="187:22" pos:end="187:58"><literal type="string" pos:start="187:22" pos:end="187:58">"vfio: Error getting config info: %m"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="189:9" pos:end="189:19">goto <name pos:start="189:14" pos:end="189:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="195:5" pos:end="195:41"><expr pos:start="195:5" pos:end="195:40"><call pos:start="195:5" pos:end="195:40"><name pos:start="195:5" pos:end="195:11">DPRINTF</name><argument_list pos:start="195:12" pos:end="195:40">(<argument pos:start="195:13" pos:end="195:33"><expr pos:start="195:13" pos:end="195:33"><literal type="string" pos:start="195:13" pos:end="195:33">"Device %s config:\n"</literal></expr></argument>, <argument pos:start="195:36" pos:end="195:39"><expr pos:start="195:36" pos:end="195:39"><name pos:start="195:36" pos:end="195:39">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="201:43"><expr pos:start="197:5" pos:end="201:42"><call pos:start="197:5" pos:end="201:42"><name pos:start="197:5" pos:end="197:11">DPRINTF</name><argument_list pos:start="197:12" pos:end="201:42">(<argument pos:start="197:13" pos:end="197:58"><expr pos:start="197:13" pos:end="197:58"><literal type="string" pos:start="197:13" pos:end="197:58">"  size: 0x%lx, offset: 0x%lx, flags: 0x%lx\n"</literal></expr></argument>,

            <argument pos:start="199:13" pos:end="199:40"><expr pos:start="199:13" pos:end="199:40"><operator pos:start="199:13" pos:end="199:13">(</operator><name pos:start="199:14" pos:end="199:21">unsigned</name> <name pos:start="199:23" pos:end="199:26">long</name><operator pos:start="199:27" pos:end="199:27">)</operator><name pos:start="199:28" pos:end="199:40"><name pos:start="199:28" pos:end="199:35">reg_info</name><operator pos:start="199:36" pos:end="199:36">.</operator><name pos:start="199:37" pos:end="199:40">size</name></name></expr></argument>, <argument pos:start="199:43" pos:end="199:72"><expr pos:start="199:43" pos:end="199:72"><operator pos:start="199:43" pos:end="199:43">(</operator><name pos:start="199:44" pos:end="199:51">unsigned</name> <name pos:start="199:53" pos:end="199:56">long</name><operator pos:start="199:57" pos:end="199:57">)</operator><name pos:start="199:58" pos:end="199:72"><name pos:start="199:58" pos:end="199:65">reg_info</name><operator pos:start="199:66" pos:end="199:66">.</operator><name pos:start="199:67" pos:end="199:72">offset</name></name></expr></argument>,

            <argument pos:start="201:13" pos:end="201:41"><expr pos:start="201:13" pos:end="201:41"><operator pos:start="201:13" pos:end="201:13">(</operator><name pos:start="201:14" pos:end="201:21">unsigned</name> <name pos:start="201:23" pos:end="201:26">long</name><operator pos:start="201:27" pos:end="201:27">)</operator><name pos:start="201:28" pos:end="201:41"><name pos:start="201:28" pos:end="201:35">reg_info</name><operator pos:start="201:36" pos:end="201:36">.</operator><name pos:start="201:37" pos:end="201:41">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="205:5" pos:end="205:38"><expr pos:start="205:5" pos:end="205:37"><name pos:start="205:5" pos:end="205:21"><name pos:start="205:5" pos:end="205:8">vdev</name><operator pos:start="205:9" pos:end="205:10">-&gt;</operator><name pos:start="205:11" pos:end="205:21">config_size</name></name> <operator pos:start="205:23" pos:end="205:23">=</operator> <name pos:start="205:25" pos:end="205:37"><name pos:start="205:25" pos:end="205:32">reg_info</name><operator pos:start="205:33" pos:end="205:33">.</operator><name pos:start="205:34" pos:end="205:37">size</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="207:5" pos:end="211:5"><if pos:start="207:5" pos:end="211:5">if <condition pos:start="207:8" pos:end="207:51">(<expr pos:start="207:9" pos:end="207:50"><name pos:start="207:9" pos:end="207:25"><name pos:start="207:9" pos:end="207:12">vdev</name><operator pos:start="207:13" pos:end="207:14">-&gt;</operator><name pos:start="207:15" pos:end="207:25">config_size</name></name> <operator pos:start="207:27" pos:end="207:28">==</operator> <name pos:start="207:30" pos:end="207:50">PCI_CONFIG_SPACE_SIZE</name></expr>)</condition> <block pos:start="207:53" pos:end="211:5">{<block_content pos:start="209:9" pos:end="209:56">

        <expr_stmt pos:start="209:9" pos:end="209:56"><expr pos:start="209:9" pos:end="209:55"><name pos:start="209:9" pos:end="209:30"><name pos:start="209:9" pos:end="209:12">vdev</name><operator pos:start="209:13" pos:end="209:14">-&gt;</operator><name pos:start="209:15" pos:end="209:18">pdev</name><operator pos:start="209:19" pos:end="209:19">.</operator><name pos:start="209:20" pos:end="209:30">cap_present</name></name> <operator pos:start="209:32" pos:end="209:33">&amp;=</operator> <operator pos:start="209:35" pos:end="209:35">~</operator><name pos:start="209:36" pos:end="209:55">QEMU_PCI_CAP_EXPRESS</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:42"><expr pos:start="213:5" pos:end="213:41"><name pos:start="213:5" pos:end="213:23"><name pos:start="213:5" pos:end="213:8">vdev</name><operator pos:start="213:9" pos:end="213:10">-&gt;</operator><name pos:start="213:11" pos:end="213:23">config_offset</name></name> <operator pos:start="213:25" pos:end="213:25">=</operator> <name pos:start="213:27" pos:end="213:41"><name pos:start="213:27" pos:end="213:34">reg_info</name><operator pos:start="213:35" pos:end="213:35">.</operator><name pos:start="213:36" pos:end="213:41">offset</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="217:5" pos:end="295:5"><if pos:start="217:5" pos:end="295:5">if <condition pos:start="217:8" pos:end="219:57">(<expr pos:start="217:9" pos:end="219:56"><operator pos:start="217:9" pos:end="217:9">(</operator><name pos:start="217:10" pos:end="217:23"><name pos:start="217:10" pos:end="217:13">vdev</name><operator pos:start="217:14" pos:end="217:15">-&gt;</operator><name pos:start="217:16" pos:end="217:23">features</name></name> <operator pos:start="217:25" pos:end="217:25">&amp;</operator> <name pos:start="217:27" pos:end="217:49">VFIO_FEATURE_ENABLE_VGA</name><operator pos:start="217:50" pos:end="217:50">)</operator> <operator pos:start="217:52" pos:end="217:53">&amp;&amp;</operator>

        <name pos:start="219:9" pos:end="219:28"><name pos:start="219:9" pos:end="219:16">dev_info</name><operator pos:start="219:17" pos:end="219:17">.</operator><name pos:start="219:18" pos:end="219:28">num_regions</name></name> <operator pos:start="219:30" pos:end="219:30">&gt;</operator> <name pos:start="219:32" pos:end="219:56">VFIO_PCI_VGA_REGION_INDEX</name></expr>)</condition> <block pos:start="219:59" pos:end="295:5">{<block_content pos:start="221:9" pos:end="293:29">

        <decl_stmt pos:start="221:9" pos:end="227:11"><decl pos:start="221:9" pos:end="227:10"><type pos:start="221:9" pos:end="221:31"><name pos:start="221:9" pos:end="221:31"><name pos:start="221:9" pos:end="221:14">struct</name> <name pos:start="221:16" pos:end="221:31">vfio_region_info</name></name></type> <name pos:start="221:33" pos:end="221:40">vga_info</name> <init pos:start="221:42" pos:end="227:10">= <expr pos:start="221:44" pos:end="227:10"><block pos:start="221:44" pos:end="227:10">{

            <expr pos:start="223:13" pos:end="223:37"><operator pos:start="223:13" pos:end="223:13">.</operator><name pos:start="223:14" pos:end="223:18">argsz</name> <operator pos:start="223:20" pos:end="223:20">=</operator> <sizeof pos:start="223:22" pos:end="223:37">sizeof<argument_list pos:start="223:28" pos:end="223:37">(<argument pos:start="223:29" pos:end="223:36"><expr pos:start="223:29" pos:end="223:36"><name pos:start="223:29" pos:end="223:36">vga_info</name></expr></argument>)</argument_list></sizeof></expr>,

            <expr pos:start="225:13" pos:end="225:46"><operator pos:start="225:13" pos:end="225:13">.</operator><name pos:start="225:14" pos:end="225:18">index</name> <operator pos:start="225:20" pos:end="225:20">=</operator> <name pos:start="225:22" pos:end="225:46">VFIO_PCI_VGA_REGION_INDEX</name></expr>,

         }</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="231:9" pos:end="231:70"><expr pos:start="231:9" pos:end="231:69"><name pos:start="231:9" pos:end="231:11">ret</name> <operator pos:start="231:13" pos:end="231:13">=</operator> <call pos:start="231:15" pos:end="231:69"><name pos:start="231:15" pos:end="231:19">ioctl</name><argument_list pos:start="231:20" pos:end="231:69">(<argument pos:start="231:21" pos:end="231:28"><expr pos:start="231:21" pos:end="231:28"><name pos:start="231:21" pos:end="231:28"><name pos:start="231:21" pos:end="231:24">vdev</name><operator pos:start="231:25" pos:end="231:26">-&gt;</operator><name pos:start="231:27" pos:end="231:28">fd</name></name></expr></argument>, <argument pos:start="231:31" pos:end="231:57"><expr pos:start="231:31" pos:end="231:57"><name pos:start="231:31" pos:end="231:57">VFIO_DEVICE_GET_REGION_INFO</name></expr></argument>, <argument pos:start="231:60" pos:end="231:68"><expr pos:start="231:60" pos:end="231:68"><operator pos:start="231:60" pos:end="231:60">&amp;</operator><name pos:start="231:61" pos:end="231:68">vga_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="233:9" pos:end="241:9"><if pos:start="233:9" pos:end="241:9">if <condition pos:start="233:12" pos:end="233:16">(<expr pos:start="233:13" pos:end="233:15"><name pos:start="233:13" pos:end="233:15">ret</name></expr>)</condition> <block pos:start="233:18" pos:end="241:9">{<block_content pos:start="235:13" pos:end="239:23">

            <expr_stmt pos:start="235:13" pos:end="237:73"><expr pos:start="235:13" pos:end="237:72"><call pos:start="235:13" pos:end="237:72"><name pos:start="235:13" pos:end="235:24">error_report</name><argument_list pos:start="235:25" pos:end="237:72">(

                <argument pos:start="237:17" pos:end="237:71"><expr pos:start="237:17" pos:end="237:71"><literal type="string" pos:start="237:17" pos:end="237:71">"vfio: Device does not support requested feature x-vga"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="239:13" pos:end="239:23">goto <name pos:start="239:18" pos:end="239:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="245:9" pos:end="259:9"><if pos:start="245:9" pos:end="259:9">if <condition pos:start="245:12" pos:end="249:40">(<expr pos:start="245:13" pos:end="249:39"><operator pos:start="245:13" pos:end="245:13">!</operator><operator pos:start="245:14" pos:end="245:14">(</operator><name pos:start="245:15" pos:end="245:28"><name pos:start="245:15" pos:end="245:22">vga_info</name><operator pos:start="245:23" pos:end="245:23">.</operator><name pos:start="245:24" pos:end="245:28">flags</name></name> <operator pos:start="245:30" pos:end="245:30">&amp;</operator> <name pos:start="245:32" pos:end="245:57">VFIO_REGION_INFO_FLAG_READ</name><operator pos:start="245:58" pos:end="245:58">)</operator> <operator pos:start="245:60" pos:end="245:61">||</operator>

            <operator pos:start="247:13" pos:end="247:13">!</operator><operator pos:start="247:14" pos:end="247:14">(</operator><name pos:start="247:15" pos:end="247:28"><name pos:start="247:15" pos:end="247:22">vga_info</name><operator pos:start="247:23" pos:end="247:23">.</operator><name pos:start="247:24" pos:end="247:28">flags</name></name> <operator pos:start="247:30" pos:end="247:30">&amp;</operator> <name pos:start="247:32" pos:end="247:58">VFIO_REGION_INFO_FLAG_WRITE</name><operator pos:start="247:59" pos:end="247:59">)</operator> <operator pos:start="247:61" pos:end="247:62">||</operator>

            <name pos:start="249:13" pos:end="249:25"><name pos:start="249:13" pos:end="249:20">vga_info</name><operator pos:start="249:21" pos:end="249:21">.</operator><name pos:start="249:22" pos:end="249:25">size</name></name> <operator pos:start="249:27" pos:end="249:27">&lt;</operator> <literal type="number" pos:start="249:29" pos:end="249:37">0xbffff</literal> <operator pos:start="249:37" pos:end="249:37">+</operator> <literal type="number" pos:start="249:39" pos:end="249:39">1</literal></expr>)</condition> <block pos:start="249:42" pos:end="259:9">{<block_content pos:start="251:13" pos:end="257:23">

            <expr_stmt pos:start="251:13" pos:end="255:55"><expr pos:start="251:13" pos:end="255:54"><call pos:start="251:13" pos:end="255:54"><name pos:start="251:13" pos:end="251:24">error_report</name><argument_list pos:start="251:25" pos:end="255:54">(<argument pos:start="251:26" pos:end="251:77"><expr pos:start="251:26" pos:end="251:77"><literal type="string" pos:start="251:26" pos:end="251:77">"vfio: Unexpected VGA info, flags 0x%lx, size 0x%lx"</literal></expr></argument>,

                         <argument pos:start="253:26" pos:end="253:54"><expr pos:start="253:26" pos:end="253:54"><operator pos:start="253:26" pos:end="253:26">(</operator><name pos:start="253:27" pos:end="253:34">unsigned</name> <name pos:start="253:36" pos:end="253:39">long</name><operator pos:start="253:40" pos:end="253:40">)</operator><name pos:start="253:41" pos:end="253:54"><name pos:start="253:41" pos:end="253:48">vga_info</name><operator pos:start="253:49" pos:end="253:49">.</operator><name pos:start="253:50" pos:end="253:54">flags</name></name></expr></argument>,

                         <argument pos:start="255:26" pos:end="255:53"><expr pos:start="255:26" pos:end="255:53"><operator pos:start="255:26" pos:end="255:26">(</operator><name pos:start="255:27" pos:end="255:34">unsigned</name> <name pos:start="255:36" pos:end="255:39">long</name><operator pos:start="255:40" pos:end="255:40">)</operator><name pos:start="255:41" pos:end="255:53"><name pos:start="255:41" pos:end="255:48">vga_info</name><operator pos:start="255:49" pos:end="255:49">.</operator><name pos:start="255:50" pos:end="255:53">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="257:13" pos:end="257:23">goto <name pos:start="257:18" pos:end="257:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="263:9" pos:end="263:46"><expr pos:start="263:9" pos:end="263:45"><name pos:start="263:9" pos:end="263:27"><name pos:start="263:9" pos:end="263:12">vdev</name><operator pos:start="263:13" pos:end="263:14">-&gt;</operator><name pos:start="263:15" pos:end="263:17">vga</name><operator pos:start="263:18" pos:end="263:18">.</operator><name pos:start="263:19" pos:end="263:27">fd_offset</name></name> <operator pos:start="263:29" pos:end="263:29">=</operator> <name pos:start="263:31" pos:end="263:45"><name pos:start="263:31" pos:end="263:38">vga_info</name><operator pos:start="263:39" pos:end="263:39">.</operator><name pos:start="263:40" pos:end="263:45">offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="265:9" pos:end="265:32"><expr pos:start="265:9" pos:end="265:31"><name pos:start="265:9" pos:end="265:20"><name pos:start="265:9" pos:end="265:12">vdev</name><operator pos:start="265:13" pos:end="265:14">-&gt;</operator><name pos:start="265:15" pos:end="265:17">vga</name><operator pos:start="265:18" pos:end="265:18">.</operator><name pos:start="265:19" pos:end="265:20">fd</name></name> <operator pos:start="265:22" pos:end="265:22">=</operator> <name pos:start="265:24" pos:end="265:31"><name pos:start="265:24" pos:end="265:27">vdev</name><operator pos:start="265:28" pos:end="265:29">-&gt;</operator><name pos:start="265:30" pos:end="265:31">fd</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="269:9" pos:end="269:74"><expr pos:start="269:9" pos:end="269:73"><name pos:start="269:9" pos:end="269:42"><name pos:start="269:9" pos:end="269:12">vdev</name><operator pos:start="269:13" pos:end="269:14">-&gt;</operator><name pos:start="269:15" pos:end="269:17">vga</name><operator pos:start="269:18" pos:end="269:18">.</operator><name pos:start="269:19" pos:end="269:24">region</name><index pos:start="269:25" pos:end="269:42">[<expr pos:start="269:26" pos:end="269:41"><name pos:start="269:26" pos:end="269:41">QEMU_PCI_VGA_MEM</name></expr>]</index></name><operator pos:start="269:43" pos:end="269:43">.</operator><name pos:start="269:44" pos:end="269:49">offset</name> <operator pos:start="269:51" pos:end="269:51">=</operator> <name pos:start="269:53" pos:end="269:73">QEMU_PCI_VGA_MEM_BASE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:65"><expr pos:start="271:9" pos:end="271:64"><name pos:start="271:9" pos:end="271:42"><name pos:start="271:9" pos:end="271:12">vdev</name><operator pos:start="271:13" pos:end="271:14">-&gt;</operator><name pos:start="271:15" pos:end="271:17">vga</name><operator pos:start="271:18" pos:end="271:18">.</operator><name pos:start="271:19" pos:end="271:24">region</name><index pos:start="271:25" pos:end="271:42">[<expr pos:start="271:26" pos:end="271:41"><name pos:start="271:26" pos:end="271:41">QEMU_PCI_VGA_MEM</name></expr>]</index></name><operator pos:start="271:43" pos:end="271:43">.</operator><name pos:start="271:44" pos:end="271:45">nr</name> <operator pos:start="271:47" pos:end="271:47">=</operator> <name pos:start="271:49" pos:end="271:64">QEMU_PCI_VGA_MEM</name></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:63"><expr pos:start="273:9" pos:end="273:62"><call pos:start="273:9" pos:end="273:62"><name pos:start="273:9" pos:end="273:18">QLIST_INIT</name><argument_list pos:start="273:19" pos:end="273:62">(<argument pos:start="273:20" pos:end="273:61"><expr pos:start="273:20" pos:end="273:61"><operator pos:start="273:20" pos:end="273:20">&amp;</operator><name pos:start="273:21" pos:end="273:54"><name pos:start="273:21" pos:end="273:24">vdev</name><operator pos:start="273:25" pos:end="273:26">-&gt;</operator><name pos:start="273:27" pos:end="273:29">vga</name><operator pos:start="273:30" pos:end="273:30">.</operator><name pos:start="273:31" pos:end="273:36">region</name><index pos:start="273:37" pos:end="273:54">[<expr pos:start="273:38" pos:end="273:53"><name pos:start="273:38" pos:end="273:53">QEMU_PCI_VGA_MEM</name></expr>]</index></name><operator pos:start="273:55" pos:end="273:55">.</operator><name pos:start="273:56" pos:end="273:61">quirks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="277:9" pos:end="277:78"><expr pos:start="277:9" pos:end="277:77"><name pos:start="277:9" pos:end="277:44"><name pos:start="277:9" pos:end="277:12">vdev</name><operator pos:start="277:13" pos:end="277:14">-&gt;</operator><name pos:start="277:15" pos:end="277:17">vga</name><operator pos:start="277:18" pos:end="277:18">.</operator><name pos:start="277:19" pos:end="277:24">region</name><index pos:start="277:25" pos:end="277:44">[<expr pos:start="277:26" pos:end="277:43"><name pos:start="277:26" pos:end="277:43">QEMU_PCI_VGA_IO_LO</name></expr>]</index></name><operator pos:start="277:45" pos:end="277:45">.</operator><name pos:start="277:46" pos:end="277:51">offset</name> <operator pos:start="277:53" pos:end="277:53">=</operator> <name pos:start="277:55" pos:end="277:77">QEMU_PCI_VGA_IO_LO_BASE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:69"><expr pos:start="279:9" pos:end="279:68"><name pos:start="279:9" pos:end="279:44"><name pos:start="279:9" pos:end="279:12">vdev</name><operator pos:start="279:13" pos:end="279:14">-&gt;</operator><name pos:start="279:15" pos:end="279:17">vga</name><operator pos:start="279:18" pos:end="279:18">.</operator><name pos:start="279:19" pos:end="279:24">region</name><index pos:start="279:25" pos:end="279:44">[<expr pos:start="279:26" pos:end="279:43"><name pos:start="279:26" pos:end="279:43">QEMU_PCI_VGA_IO_LO</name></expr>]</index></name><operator pos:start="279:45" pos:end="279:45">.</operator><name pos:start="279:46" pos:end="279:47">nr</name> <operator pos:start="279:49" pos:end="279:49">=</operator> <name pos:start="279:51" pos:end="279:68">QEMU_PCI_VGA_IO_LO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:65"><expr pos:start="281:9" pos:end="281:64"><call pos:start="281:9" pos:end="281:64"><name pos:start="281:9" pos:end="281:18">QLIST_INIT</name><argument_list pos:start="281:19" pos:end="281:64">(<argument pos:start="281:20" pos:end="281:63"><expr pos:start="281:20" pos:end="281:63"><operator pos:start="281:20" pos:end="281:20">&amp;</operator><name pos:start="281:21" pos:end="281:56"><name pos:start="281:21" pos:end="281:24">vdev</name><operator pos:start="281:25" pos:end="281:26">-&gt;</operator><name pos:start="281:27" pos:end="281:29">vga</name><operator pos:start="281:30" pos:end="281:30">.</operator><name pos:start="281:31" pos:end="281:36">region</name><index pos:start="281:37" pos:end="281:56">[<expr pos:start="281:38" pos:end="281:55"><name pos:start="281:38" pos:end="281:55">QEMU_PCI_VGA_IO_LO</name></expr>]</index></name><operator pos:start="281:57" pos:end="281:57">.</operator><name pos:start="281:58" pos:end="281:63">quirks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="285:9" pos:end="285:78"><expr pos:start="285:9" pos:end="285:77"><name pos:start="285:9" pos:end="285:44"><name pos:start="285:9" pos:end="285:12">vdev</name><operator pos:start="285:13" pos:end="285:14">-&gt;</operator><name pos:start="285:15" pos:end="285:17">vga</name><operator pos:start="285:18" pos:end="285:18">.</operator><name pos:start="285:19" pos:end="285:24">region</name><index pos:start="285:25" pos:end="285:44">[<expr pos:start="285:26" pos:end="285:43"><name pos:start="285:26" pos:end="285:43">QEMU_PCI_VGA_IO_HI</name></expr>]</index></name><operator pos:start="285:45" pos:end="285:45">.</operator><name pos:start="285:46" pos:end="285:51">offset</name> <operator pos:start="285:53" pos:end="285:53">=</operator> <name pos:start="285:55" pos:end="285:77">QEMU_PCI_VGA_IO_HI_BASE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:69"><expr pos:start="287:9" pos:end="287:68"><name pos:start="287:9" pos:end="287:44"><name pos:start="287:9" pos:end="287:12">vdev</name><operator pos:start="287:13" pos:end="287:14">-&gt;</operator><name pos:start="287:15" pos:end="287:17">vga</name><operator pos:start="287:18" pos:end="287:18">.</operator><name pos:start="287:19" pos:end="287:24">region</name><index pos:start="287:25" pos:end="287:44">[<expr pos:start="287:26" pos:end="287:43"><name pos:start="287:26" pos:end="287:43">QEMU_PCI_VGA_IO_HI</name></expr>]</index></name><operator pos:start="287:45" pos:end="287:45">.</operator><name pos:start="287:46" pos:end="287:47">nr</name> <operator pos:start="287:49" pos:end="287:49">=</operator> <name pos:start="287:51" pos:end="287:68">QEMU_PCI_VGA_IO_HI</name></expr>;</expr_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:65"><expr pos:start="289:9" pos:end="289:64"><call pos:start="289:9" pos:end="289:64"><name pos:start="289:9" pos:end="289:18">QLIST_INIT</name><argument_list pos:start="289:19" pos:end="289:64">(<argument pos:start="289:20" pos:end="289:63"><expr pos:start="289:20" pos:end="289:63"><operator pos:start="289:20" pos:end="289:20">&amp;</operator><name pos:start="289:21" pos:end="289:56"><name pos:start="289:21" pos:end="289:24">vdev</name><operator pos:start="289:25" pos:end="289:26">-&gt;</operator><name pos:start="289:27" pos:end="289:29">vga</name><operator pos:start="289:30" pos:end="289:30">.</operator><name pos:start="289:31" pos:end="289:36">region</name><index pos:start="289:37" pos:end="289:56">[<expr pos:start="289:38" pos:end="289:55"><name pos:start="289:38" pos:end="289:55">QEMU_PCI_VGA_IO_HI</name></expr>]</index></name><operator pos:start="289:57" pos:end="289:57">.</operator><name pos:start="289:58" pos:end="289:63">quirks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="293:9" pos:end="293:29"><expr pos:start="293:9" pos:end="293:28"><name pos:start="293:9" pos:end="293:21"><name pos:start="293:9" pos:end="293:12">vdev</name><operator pos:start="293:13" pos:end="293:14">-&gt;</operator><name pos:start="293:15" pos:end="293:21">has_vga</name></name> <operator pos:start="293:23" pos:end="293:23">=</operator> <name pos:start="293:25" pos:end="293:28">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="297:5" pos:end="297:44"><expr pos:start="297:5" pos:end="297:43"><name pos:start="297:5" pos:end="297:18"><name pos:start="297:5" pos:end="297:12">irq_info</name><operator pos:start="297:13" pos:end="297:13">.</operator><name pos:start="297:14" pos:end="297:18">index</name></name> <operator pos:start="297:20" pos:end="297:20">=</operator> <name pos:start="297:22" pos:end="297:43">VFIO_PCI_ERR_IRQ_INDEX</name></expr>;</expr_stmt>



    <expr_stmt pos:start="301:5" pos:end="301:63"><expr pos:start="301:5" pos:end="301:62"><name pos:start="301:5" pos:end="301:7">ret</name> <operator pos:start="301:9" pos:end="301:9">=</operator> <call pos:start="301:11" pos:end="301:62"><name pos:start="301:11" pos:end="301:15">ioctl</name><argument_list pos:start="301:16" pos:end="301:62">(<argument pos:start="301:17" pos:end="301:24"><expr pos:start="301:17" pos:end="301:24"><name pos:start="301:17" pos:end="301:24"><name pos:start="301:17" pos:end="301:20">vdev</name><operator pos:start="301:21" pos:end="301:22">-&gt;</operator><name pos:start="301:23" pos:end="301:24">fd</name></name></expr></argument>, <argument pos:start="301:27" pos:end="301:50"><expr pos:start="301:27" pos:end="301:50"><name pos:start="301:27" pos:end="301:50">VFIO_DEVICE_GET_IRQ_INFO</name></expr></argument>, <argument pos:start="301:53" pos:end="301:61"><expr pos:start="301:53" pos:end="301:61"><operator pos:start="301:53" pos:end="301:53">&amp;</operator><name pos:start="301:54" pos:end="301:61">irq_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="303:5" pos:end="321:5"><if pos:start="303:5" pos:end="311:5">if <condition pos:start="303:8" pos:end="303:12">(<expr pos:start="303:9" pos:end="303:11"><name pos:start="303:9" pos:end="303:11">ret</name></expr>)</condition> <block pos:start="303:14" pos:end="311:5">{<block_content pos:start="307:9" pos:end="309:16">

        <comment type="block" pos:start="305:9" pos:end="305:63">/* This can fail for an old kernel or legacy PCI dev */</comment>

        <expr_stmt pos:start="307:9" pos:end="307:66"><expr pos:start="307:9" pos:end="307:65"><call pos:start="307:9" pos:end="307:65"><name pos:start="307:9" pos:end="307:15">DPRINTF</name><argument_list pos:start="307:16" pos:end="307:65">(<argument pos:start="307:17" pos:end="307:59"><expr pos:start="307:17" pos:end="307:59"><literal type="string" pos:start="307:17" pos:end="307:59">"VFIO_DEVICE_GET_IRQ_INFO failure ret=%d\n"</literal></expr></argument>, <argument pos:start="307:62" pos:end="307:64"><expr pos:start="307:62" pos:end="307:64"><name pos:start="307:62" pos:end="307:64">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:16"><expr pos:start="309:9" pos:end="309:15"><name pos:start="309:9" pos:end="309:11">ret</name> <operator pos:start="309:13" pos:end="309:13">=</operator> <literal type="number" pos:start="309:15" pos:end="309:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="311:7" pos:end="315:5">else if <condition pos:start="311:15" pos:end="311:35">(<expr pos:start="311:16" pos:end="311:34"><name pos:start="311:16" pos:end="311:29"><name pos:start="311:16" pos:end="311:23">irq_info</name><operator pos:start="311:24" pos:end="311:24">.</operator><name pos:start="311:25" pos:end="311:29">count</name></name> <operator pos:start="311:31" pos:end="311:32">==</operator> <literal type="number" pos:start="311:34" pos:end="311:34">1</literal></expr>)</condition> <block pos:start="311:37" pos:end="315:5">{<block_content pos:start="313:9" pos:end="313:29">

        <expr_stmt pos:start="313:9" pos:end="313:29"><expr pos:start="313:9" pos:end="313:28"><name pos:start="313:9" pos:end="313:21"><name pos:start="313:9" pos:end="313:12">vdev</name><operator pos:start="313:13" pos:end="313:14">-&gt;</operator><name pos:start="313:15" pos:end="313:21">pci_aer</name></name> <operator pos:start="313:23" pos:end="313:23">=</operator> <name pos:start="313:25" pos:end="313:28">true</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="315:7" pos:end="321:5">else <block pos:start="315:12" pos:end="321:5">{<block_content pos:start="317:9" pos:end="319:73">

        <expr_stmt pos:start="317:9" pos:end="319:73"><expr pos:start="317:9" pos:end="319:72"><call pos:start="317:9" pos:end="319:72"><name pos:start="317:9" pos:end="317:20">error_report</name><argument_list pos:start="317:21" pos:end="319:72">(<argument pos:start="317:22" pos:end="319:71"><expr pos:start="317:22" pos:end="319:71"><literal type="string" pos:start="317:22" pos:end="317:38">"vfio: Warning: "</literal>

                     <literal type="string" pos:start="319:22" pos:end="319:71">"Could not enable error recovery for the device\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="325:1" pos:end="325:6"><name pos:start="325:1" pos:end="325:5">error</name>:</label>

    <if_stmt pos:start="327:5" pos:end="335:5"><if pos:start="327:5" pos:end="335:5">if <condition pos:start="327:8" pos:end="327:12">(<expr pos:start="327:9" pos:end="327:11"><name pos:start="327:9" pos:end="327:11">ret</name></expr>)</condition> <block pos:start="327:14" pos:end="335:5">{<block_content pos:start="329:9" pos:end="333:24">

        <expr_stmt pos:start="329:9" pos:end="329:33"><expr pos:start="329:9" pos:end="329:32"><call pos:start="329:9" pos:end="329:32"><name pos:start="329:9" pos:end="329:20">QLIST_REMOVE</name><argument_list pos:start="329:21" pos:end="329:32">(<argument pos:start="329:22" pos:end="329:25"><expr pos:start="329:22" pos:end="329:25"><name pos:start="329:22" pos:end="329:25">vdev</name></expr></argument>, <argument pos:start="329:28" pos:end="329:31"><expr pos:start="329:28" pos:end="329:31"><name pos:start="329:28" pos:end="329:31">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="331:9" pos:end="331:27"><expr pos:start="331:9" pos:end="331:26"><name pos:start="331:9" pos:end="331:19"><name pos:start="331:9" pos:end="331:12">vdev</name><operator pos:start="331:13" pos:end="331:14">-&gt;</operator><name pos:start="331:15" pos:end="331:19">group</name></name> <operator pos:start="331:21" pos:end="331:21">=</operator> <name pos:start="331:23" pos:end="331:26">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:24"><expr pos:start="333:9" pos:end="333:23"><call pos:start="333:9" pos:end="333:23"><name pos:start="333:9" pos:end="333:13">close</name><argument_list pos:start="333:14" pos:end="333:23">(<argument pos:start="333:15" pos:end="333:22"><expr pos:start="333:15" pos:end="333:22"><name pos:start="333:15" pos:end="333:22"><name pos:start="333:15" pos:end="333:18">vdev</name><operator pos:start="333:19" pos:end="333:20">-&gt;</operator><name pos:start="333:21" pos:end="333:22">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="337:5" pos:end="337:15">return <expr pos:start="337:12" pos:end="337:14"><name pos:start="337:12" pos:end="337:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
