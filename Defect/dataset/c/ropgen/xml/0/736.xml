<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/736.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:17">SYNTH_FILTER_FUNC</name><argument_list pos:start="1:18" pos:end="1:23">(<argument pos:start="1:19" pos:end="1:22">sse2</argument>)</argument_list></macro>

<macro pos:start="3:1" pos:end="3:22"><name pos:start="3:1" pos:end="3:17">SYNTH_FILTER_FUNC</name><argument_list pos:start="3:18" pos:end="3:22">(<argument pos:start="3:19" pos:end="3:21">avx</argument>)</argument_list></macro>

<macro pos:start="5:1" pos:end="8:0"><name pos:start="5:1" pos:end="5:17">SYNTH_FILTER_FUNC</name><argument_list pos:start="5:18" pos:end="8:0">(<argument pos:start="5:19" pos:end="5:22">fma3</argument>)</argument_list></macro>

<cpp:endif pos:start="7:1" pos:end="7:6">#<cpp:directive pos:start="7:2" pos:end="7:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="7:8" pos:end="7:22">/* HAVE_YASM */</comment>



<function pos:start="11:1" pos:end="51:1"><type pos:start="11:1" pos:end="11:12"><name pos:start="11:1" pos:end="11:7">av_cold</name> <name pos:start="11:9" pos:end="11:12">void</name></type> <name pos:start="11:14" pos:end="11:37">ff_synth_filter_init_x86</name><parameter_list pos:start="11:38" pos:end="11:60">(<parameter pos:start="11:39" pos:end="11:59"><decl pos:start="11:39" pos:end="11:59"><type pos:start="11:39" pos:end="11:58"><name pos:start="11:39" pos:end="11:56">SynthFilterContext</name> <modifier pos:start="11:58" pos:end="11:58">*</modifier></type><name pos:start="11:59" pos:end="11:59">s</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="51:1">{<block_content pos:start="17:5" pos:end="50:0">

<cpp:if pos:start="15:1" pos:end="15:13">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:13">HAVE_YASM</name></expr></cpp:if>

    <decl_stmt pos:start="17:5" pos:end="22:0"><decl pos:start="17:5" pos:end="17:38"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:17">cpu_flags</name> <init pos:start="17:19" pos:end="17:38">= <expr pos:start="17:21" pos:end="17:38"><call pos:start="17:21" pos:end="17:38"><name pos:start="17:21" pos:end="17:36">av_get_cpu_flags</name><argument_list pos:start="17:37" pos:end="17:38">()</argument_list></call></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="21:1" pos:end="21:15">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:15">ARCH_X86_32</name></expr></cpp:if>

    <if_stmt pos:start="23:5" pos:end="30:0"><if pos:start="23:5" pos:end="30:0">if <condition pos:start="23:8" pos:end="23:32">(<expr pos:start="23:9" pos:end="23:31"><call pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:20">EXTERNAL_SSE</name><argument_list pos:start="23:21" pos:end="23:31">(<argument pos:start="23:22" pos:end="23:30"><expr pos:start="23:22" pos:end="23:30"><name pos:start="23:22" pos:end="23:30">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:34" pos:end="30:0">{<block_content pos:start="25:9" pos:end="25:49">

        <expr_stmt pos:start="25:9" pos:end="25:49"><expr pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:29">synth_filter_float</name></name> <operator pos:start="25:31" pos:end="25:31">=</operator> <name pos:start="25:33" pos:end="25:48">synth_filter_sse</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:33">(<expr pos:start="31:9" pos:end="31:32"><call pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:21">EXTERNAL_SSE2</name><argument_list pos:start="31:22" pos:end="31:32">(<argument pos:start="31:23" pos:end="31:31"><expr pos:start="31:23" pos:end="31:31"><name pos:start="31:23" pos:end="31:31">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:35" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:50">

        <expr_stmt pos:start="33:9" pos:end="33:50"><expr pos:start="33:9" pos:end="33:49"><name pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:29">synth_filter_float</name></name> <operator pos:start="33:31" pos:end="33:31">=</operator> <name pos:start="33:33" pos:end="33:49">synth_filter_sse2</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:32">(<expr pos:start="37:9" pos:end="37:31"><call pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:20">EXTERNAL_AVX</name><argument_list pos:start="37:21" pos:end="37:31">(<argument pos:start="37:22" pos:end="37:30"><expr pos:start="37:22" pos:end="37:30"><name pos:start="37:22" pos:end="37:30">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:34" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:49">

        <expr_stmt pos:start="39:9" pos:end="39:49"><expr pos:start="39:9" pos:end="39:48"><name pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:29">synth_filter_float</name></name> <operator pos:start="39:31" pos:end="39:31">=</operator> <name pos:start="39:33" pos:end="39:48">synth_filter_avx</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="50:0"><if pos:start="43:5" pos:end="50:0">if <condition pos:start="43:8" pos:end="43:33">(<expr pos:start="43:9" pos:end="43:32"><call pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:21">EXTERNAL_FMA3</name><argument_list pos:start="43:22" pos:end="43:32">(<argument pos:start="43:23" pos:end="43:31"><expr pos:start="43:23" pos:end="43:31"><name pos:start="43:23" pos:end="43:31">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:35" pos:end="50:0">{<block_content pos:start="45:9" pos:end="45:50">

        <expr_stmt pos:start="45:9" pos:end="45:50"><expr pos:start="45:9" pos:end="45:49"><name pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:29">synth_filter_float</name></name> <operator pos:start="45:31" pos:end="45:31">=</operator> <name pos:start="45:33" pos:end="45:49">synth_filter_fma3</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="49:8" pos:end="49:22">/* HAVE_YASM */</comment>

</block_content>}</block></function>
</unit>
