<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8848.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">test_bh_flush</name><parameter_list pos:start="1:26" pos:end="1:31">(<parameter pos:start="1:27" pos:end="1:30"><decl pos:start="1:27" pos:end="1:30"><type pos:start="1:27" pos:end="1:30"><name pos:start="1:27" pos:end="1:30">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:28">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:14">BHTestData</name></type> <name pos:start="5:16" pos:end="5:19">data</name> <init pos:start="5:21" pos:end="5:32">= <expr pos:start="5:23" pos:end="5:32"><block pos:start="5:23" pos:end="5:32">{ <expr pos:start="5:25" pos:end="5:30"><operator pos:start="5:25" pos:end="5:25">.</operator><name pos:start="5:26" pos:end="5:26">n</name> <operator pos:start="5:28" pos:end="5:28">=</operator> <literal type="number" pos:start="5:30" pos:end="5:30">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:49"><expr pos:start="7:5" pos:end="7:48"><name pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:8">data</name><operator pos:start="7:9" pos:end="7:9">.</operator><name pos:start="7:10" pos:end="7:11">bh</name></name> <operator pos:start="7:13" pos:end="7:13">=</operator> <call pos:start="7:15" pos:end="7:48"><name pos:start="7:15" pos:end="7:24">aio_bh_new</name><argument_list pos:start="7:25" pos:end="7:48">(<argument pos:start="7:26" pos:end="7:28"><expr pos:start="7:26" pos:end="7:28"><name pos:start="7:26" pos:end="7:28">ctx</name></expr></argument>, <argument pos:start="7:31" pos:end="7:40"><expr pos:start="7:31" pos:end="7:40"><name pos:start="7:31" pos:end="7:40">bh_test_cb</name></expr></argument>, <argument pos:start="7:43" pos:end="7:47"><expr pos:start="7:43" pos:end="7:47"><operator pos:start="7:43" pos:end="7:43">&amp;</operator><name pos:start="7:44" pos:end="7:47">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:30"><expr pos:start="11:5" pos:end="11:29"><call pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:20">qemu_bh_schedule</name><argument_list pos:start="11:21" pos:end="11:29">(<argument pos:start="11:22" pos:end="11:28"><expr pos:start="11:22" pos:end="11:28"><name pos:start="11:22" pos:end="11:28"><name pos:start="11:22" pos:end="11:25">data</name><operator pos:start="11:26" pos:end="11:26">.</operator><name pos:start="11:27" pos:end="11:28">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><call pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:19">g_assert_cmpint</name><argument_list pos:start="13:20" pos:end="13:34">(<argument pos:start="13:21" pos:end="13:26"><expr pos:start="13:21" pos:end="13:26"><name pos:start="13:21" pos:end="13:26"><name pos:start="13:21" pos:end="13:24">data</name><operator pos:start="13:25" pos:end="13:25">.</operator><name pos:start="13:26" pos:end="13:26">n</name></name></expr></argument>, <argument pos:start="13:29" pos:end="13:30"><expr pos:start="13:29" pos:end="13:30"><operator pos:start="13:29" pos:end="13:30">==</operator></expr></argument>, <argument pos:start="13:33" pos:end="13:33"><expr pos:start="13:33" pos:end="13:33"><literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><call pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:16">wait_for_aio</name><argument_list pos:start="17:17" pos:end="17:18">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><call pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:19">g_assert_cmpint</name><argument_list pos:start="19:20" pos:end="19:34">(<argument pos:start="19:21" pos:end="19:26"><expr pos:start="19:21" pos:end="19:26"><name pos:start="19:21" pos:end="19:26"><name pos:start="19:21" pos:end="19:24">data</name><operator pos:start="19:25" pos:end="19:25">.</operator><name pos:start="19:26" pos:end="19:26">n</name></name></expr></argument>, <argument pos:start="19:29" pos:end="19:30"><expr pos:start="19:29" pos:end="19:30"><operator pos:start="19:29" pos:end="19:30">==</operator></expr></argument>, <argument pos:start="19:33" pos:end="19:33"><expr pos:start="19:33" pos:end="19:33"><literal type="number" pos:start="19:33" pos:end="19:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><call pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:12">g_assert</name><argument_list pos:start="23:13" pos:end="23:35">(<argument pos:start="23:14" pos:end="23:34"><expr pos:start="23:14" pos:end="23:34"><operator pos:start="23:14" pos:end="23:14">!</operator><call pos:start="23:15" pos:end="23:34"><name pos:start="23:15" pos:end="23:22">aio_poll</name><argument_list pos:start="23:23" pos:end="23:34">(<argument pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:26">ctx</name></expr></argument>, <argument pos:start="23:29" pos:end="23:33"><expr pos:start="23:29" pos:end="23:33"><name pos:start="23:29" pos:end="23:33">false</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><call pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:19">g_assert_cmpint</name><argument_list pos:start="25:20" pos:end="25:34">(<argument pos:start="25:21" pos:end="25:26"><expr pos:start="25:21" pos:end="25:26"><name pos:start="25:21" pos:end="25:26"><name pos:start="25:21" pos:end="25:24">data</name><operator pos:start="25:25" pos:end="25:25">.</operator><name pos:start="25:26" pos:end="25:26">n</name></name></expr></argument>, <argument pos:start="25:29" pos:end="25:30"><expr pos:start="25:29" pos:end="25:30"><operator pos:start="25:29" pos:end="25:30">==</operator></expr></argument>, <argument pos:start="25:33" pos:end="25:33"><expr pos:start="25:33" pos:end="25:33"><literal type="number" pos:start="25:33" pos:end="25:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><call pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:18">qemu_bh_delete</name><argument_list pos:start="27:19" pos:end="27:27">(<argument pos:start="27:20" pos:end="27:26"><expr pos:start="27:20" pos:end="27:26"><name pos:start="27:20" pos:end="27:26"><name pos:start="27:20" pos:end="27:23">data</name><operator pos:start="27:24" pos:end="27:24">.</operator><name pos:start="27:25" pos:end="27:26">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
