<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8290.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mov_write_packet</name><parameter_list pos:start="1:28" pos:end="3:70">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:64"><decl pos:start="1:49" pos:end="1:64"><type pos:start="1:49" pos:end="1:64"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:64">stream_index</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:46"><decl pos:start="3:29" pos:end="3:46"><type pos:start="3:29" pos:end="3:46"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:41">uint8_t</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:46">buf</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:56"><decl pos:start="3:49" pos:end="3:56"><type pos:start="3:49" pos:end="3:56"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:56">size</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:69"><decl pos:start="3:59" pos:end="3:69"><type pos:start="3:59" pos:end="3:69"><name pos:start="3:59" pos:end="3:65">int64_t</name></type> <name pos:start="3:67" pos:end="3:69">pts</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="163:1">{<block_content pos:start="7:5" pos:end="161:13">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">MOVContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">mov</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">ByteIOContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">pb</name> <init pos:start="9:23" pos:end="9:30">= <expr pos:start="9:25" pos:end="9:30"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:30"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:59"><decl pos:start="11:5" pos:end="11:58"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVCodecContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:23">enc</name> <init pos:start="11:25" pos:end="11:58">= <expr pos:start="11:27" pos:end="11:58"><operator pos:start="11:27" pos:end="11:27">&amp;</operator><name pos:start="11:28" pos:end="11:51"><name pos:start="11:28" pos:end="11:28">s</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:37">streams</name><index pos:start="11:38" pos:end="11:51">[<expr pos:start="11:39" pos:end="11:50"><name pos:start="11:39" pos:end="11:50">stream_index</name></expr>]</index></name><operator pos:start="11:52" pos:end="11:53">-&gt;</operator><name pos:start="11:54" pos:end="11:58">codec</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:46"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:12">MOVTrack</name><modifier pos:start="13:13" pos:end="13:13">*</modifier></type> <name pos:start="13:15" pos:end="13:17">trk</name> <init pos:start="13:19" pos:end="13:46">= <expr pos:start="13:21" pos:end="13:46"><operator pos:start="13:21" pos:end="13:21">&amp;</operator><name pos:start="13:22" pos:end="13:46"><name pos:start="13:22" pos:end="13:24">mov</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:32">tracks</name><index pos:start="13:33" pos:end="13:46">[<expr pos:start="13:34" pos:end="13:45"><name pos:start="13:34" pos:end="13:45">stream_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:10"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">cl</name></decl>, <decl pos:start="15:13" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:13" pos:end="15:14">id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:36"><decl pos:start="17:5" pos:end="17:35"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:31">samplesInChunk</name> <init pos:start="17:33" pos:end="17:35">= <expr pos:start="17:35" pos:end="17:35"><literal type="number" pos:start="17:35" pos:end="17:35">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="21:42"><if pos:start="21:5" pos:end="21:42">if <condition pos:start="21:8" pos:end="21:32">(<expr pos:start="21:9" pos:end="21:31"><call pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:23">url_is_streamed</name><argument_list pos:start="21:24" pos:end="21:31">(<argument pos:start="21:25" pos:end="21:30"><expr pos:start="21:25" pos:end="21:30"><operator pos:start="21:25" pos:end="21:25">&amp;</operator><name pos:start="21:26" pos:end="21:30"><name pos:start="21:26" pos:end="21:26">s</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:30">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:34" pos:end="21:42"><block_content pos:start="21:34" pos:end="21:42"> <return pos:start="21:34" pos:end="21:42">return <expr pos:start="21:41" pos:end="21:41"><literal type="number" pos:start="21:41" pos:end="21:41">0</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="block" pos:start="21:44" pos:end="21:66">/* Can't handle that */</comment>

    <if_stmt pos:start="23:5" pos:end="23:24"><if pos:start="23:5" pos:end="23:24">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:13">size</name></expr>)</condition><block type="pseudo" pos:start="23:16" pos:end="23:24"><block_content pos:start="23:16" pos:end="23:24"> <return pos:start="23:16" pos:end="23:24">return <expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="block" pos:start="23:26" pos:end="23:54">/* Discard 0 sized packets */</comment>



    <if_stmt pos:start="27:5" pos:end="69:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:45">(<expr pos:start="27:9" pos:end="27:43"><name pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:11">enc</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:23">codec_type</name></name> <operator pos:start="27:25" pos:end="27:26">==</operator> <name pos:start="27:28" pos:end="27:43">CODEC_TYPE_VIDEO</name></expr> )</condition> <block pos:start="27:47" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:27">

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:22">samplesInChunk</name> <operator pos:start="29:24" pos:end="29:24">=</operator> <literal type="number" pos:start="29:26" pos:end="29:26">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if>

    <if type="elseif" pos:start="33:5" pos:end="69:5">else if <condition pos:start="33:13" pos:end="33:50">(<expr pos:start="33:14" pos:end="33:48"><name pos:start="33:14" pos:end="33:28"><name pos:start="33:14" pos:end="33:16">enc</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:28">codec_type</name></name> <operator pos:start="33:30" pos:end="33:31">==</operator> <name pos:start="33:33" pos:end="33:48">CODEC_TYPE_AUDIO</name></expr> )</condition> <block pos:start="33:52" pos:end="69:5">{<block_content pos:start="35:9" pos:end="67:9">

        <if_stmt pos:start="35:9" pos:end="67:9"><if pos:start="35:9" pos:end="55:9">if<condition pos:start="35:11" pos:end="35:45">( <expr pos:start="35:13" pos:end="35:44"><name pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:15">enc</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:25">codec_id</name></name> <operator pos:start="35:27" pos:end="35:28">==</operator> <name pos:start="35:30" pos:end="35:44">CODEC_ID_AMR_NB</name></expr>)</condition> <block pos:start="35:47" pos:end="55:9">{<block_content pos:start="39:13" pos:end="53:13">

            <comment type="block" pos:start="37:13" pos:end="37:78">/* We must find out how many AMR blocks there are in one packet */</comment>

            <decl_stmt pos:start="39:13" pos:end="41:73"><decl pos:start="39:13" pos:end="41:72"><type pos:start="39:13" pos:end="39:27"><specifier pos:start="39:13" pos:end="39:18">static</specifier> <name pos:start="39:20" pos:end="39:27">uint16_t</name></type> <name pos:start="39:29" pos:end="39:43"><name pos:start="39:29" pos:end="39:39">packed_size</name><index pos:start="39:40" pos:end="39:43">[<expr pos:start="39:41" pos:end="39:42"><literal type="number" pos:start="39:41" pos:end="39:42">16</literal></expr>]</index></name> <init pos:start="39:45" pos:end="41:72">=

                <expr pos:start="41:17" pos:end="41:72"><block pos:start="41:17" pos:end="41:72">{<expr pos:start="41:18" pos:end="41:19"><literal type="number" pos:start="41:18" pos:end="41:19">13</literal></expr>, <expr pos:start="41:22" pos:end="41:23"><literal type="number" pos:start="41:22" pos:end="41:23">14</literal></expr>, <expr pos:start="41:26" pos:end="41:27"><literal type="number" pos:start="41:26" pos:end="41:27">16</literal></expr>, <expr pos:start="41:30" pos:end="41:31"><literal type="number" pos:start="41:30" pos:end="41:31">18</literal></expr>, <expr pos:start="41:34" pos:end="41:35"><literal type="number" pos:start="41:34" pos:end="41:35">20</literal></expr>, <expr pos:start="41:38" pos:end="41:39"><literal type="number" pos:start="41:38" pos:end="41:39">21</literal></expr>, <expr pos:start="41:42" pos:end="41:43"><literal type="number" pos:start="41:42" pos:end="41:43">27</literal></expr>, <expr pos:start="41:46" pos:end="41:47"><literal type="number" pos:start="41:46" pos:end="41:47">32</literal></expr>, <expr pos:start="41:50" pos:end="41:50"><literal type="number" pos:start="41:50" pos:end="41:50">6</literal></expr>, <expr pos:start="41:53" pos:end="41:53"><literal type="number" pos:start="41:53" pos:end="41:53">0</literal></expr>, <expr pos:start="41:56" pos:end="41:56"><literal type="number" pos:start="41:56" pos:end="41:56">0</literal></expr>, <expr pos:start="41:59" pos:end="41:59"><literal type="number" pos:start="41:59" pos:end="41:59">0</literal></expr>, <expr pos:start="41:62" pos:end="41:62"><literal type="number" pos:start="41:62" pos:end="41:62">0</literal></expr>, <expr pos:start="41:65" pos:end="41:65"><literal type="number" pos:start="41:65" pos:end="41:65">0</literal></expr>, <expr pos:start="41:68" pos:end="41:68"><literal type="number" pos:start="41:68" pos:end="41:68">0</literal></expr>, <expr pos:start="41:71" pos:end="41:71"><literal type="number" pos:start="41:71" pos:end="41:71">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="43:13" pos:end="43:24"><decl pos:start="43:13" pos:end="43:23"><type pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">int</name></type> <name pos:start="43:17" pos:end="43:19">len</name> <init pos:start="43:21" pos:end="43:23">= <expr pos:start="43:23" pos:end="43:23"><literal type="number" pos:start="43:23" pos:end="43:23">0</literal></expr></init></decl>;</decl_stmt>



            <while pos:start="47:13" pos:end="53:13">while <condition pos:start="47:19" pos:end="47:54">(<expr pos:start="47:20" pos:end="47:53"><name pos:start="47:20" pos:end="47:22">len</name> <operator pos:start="47:24" pos:end="47:24">&lt;</operator> <name pos:start="47:26" pos:end="47:29">size</name> <operator pos:start="47:31" pos:end="47:32">&amp;&amp;</operator> <name pos:start="47:34" pos:end="47:47">samplesInChunk</name> <operator pos:start="47:49" pos:end="47:49">&lt;</operator> <literal type="number" pos:start="47:51" pos:end="47:53">100</literal></expr>)</condition> <block pos:start="47:56" pos:end="53:13">{<block_content pos:start="49:17" pos:end="51:33">

                <expr_stmt pos:start="49:17" pos:end="49:59"><expr pos:start="49:17" pos:end="49:58"><name pos:start="49:17" pos:end="49:19">len</name> <operator pos:start="49:21" pos:end="49:22">+=</operator> <name pos:start="49:24" pos:end="49:58"><name pos:start="49:24" pos:end="49:34">packed_size</name><index pos:start="49:35" pos:end="49:58">[<expr pos:start="49:36" pos:end="49:57"><operator pos:start="49:36" pos:end="49:36">(</operator><name pos:start="49:37" pos:end="49:44"><name pos:start="49:37" pos:end="49:39">buf</name><index pos:start="49:40" pos:end="49:44">[<expr pos:start="49:41" pos:end="49:43"><name pos:start="49:41" pos:end="49:43">len</name></expr>]</index></name> <operator pos:start="49:46" pos:end="49:47">&gt;&gt;</operator> <literal type="number" pos:start="49:49" pos:end="49:49">3</literal><operator pos:start="49:50" pos:end="49:50">)</operator> <operator pos:start="49:52" pos:end="49:52">&amp;</operator> <literal type="number" pos:start="49:54" pos:end="49:57">0x0F</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:33"><expr pos:start="51:17" pos:end="51:32"><name pos:start="51:17" pos:end="51:30">samplesInChunk</name><operator pos:start="51:31" pos:end="51:32">++</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></if>

        <if type="elseif" pos:start="57:9" pos:end="61:9">else if<condition pos:start="57:16" pos:end="57:51">(<expr pos:start="57:17" pos:end="57:50"><name pos:start="57:17" pos:end="57:29"><name pos:start="57:17" pos:end="57:19">enc</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:29">codec_id</name></name> <operator pos:start="57:31" pos:end="57:32">==</operator> <name pos:start="57:34" pos:end="57:50">CODEC_ID_PCM_ALAW</name></expr>)</condition> <block pos:start="57:53" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:48">

            <expr_stmt pos:start="59:13" pos:end="59:48"><expr pos:start="59:13" pos:end="59:47"><name pos:start="59:13" pos:end="59:26">samplesInChunk</name> <operator pos:start="59:28" pos:end="59:28">=</operator> <name pos:start="59:30" pos:end="59:33">size</name><operator pos:start="59:34" pos:end="59:34">/</operator><name pos:start="59:35" pos:end="59:47"><name pos:start="59:35" pos:end="59:37">enc</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:47">channels</name></name></expr>;</expr_stmt>

        </block_content>}</block></if>

        <else pos:start="63:9" pos:end="67:9">else <block pos:start="63:14" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:31">

            <expr_stmt pos:start="65:13" pos:end="65:31"><expr pos:start="65:13" pos:end="65:30"><name pos:start="65:13" pos:end="65:26">samplesInChunk</name> <operator pos:start="65:28" pos:end="65:28">=</operator> <literal type="number" pos:start="65:30" pos:end="65:30">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="87:5"><if pos:start="73:5" pos:end="87:5">if <condition pos:start="73:8" pos:end="75:28">(<expr pos:start="73:9" pos:end="75:27"><operator pos:start="73:9" pos:end="73:9">(</operator><name pos:start="73:10" pos:end="73:22"><name pos:start="73:10" pos:end="73:12">enc</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:22">codec_id</name></name> <operator pos:start="73:24" pos:end="73:25">==</operator> <name pos:start="73:27" pos:end="73:40">CODEC_ID_MPEG4</name> <operator pos:start="73:42" pos:end="73:43">||</operator> <name pos:start="73:45" pos:end="73:57"><name pos:start="73:45" pos:end="73:47">enc</name><operator pos:start="73:48" pos:end="73:49">-&gt;</operator><name pos:start="73:50" pos:end="73:57">codec_id</name></name> <operator pos:start="73:59" pos:end="73:60">==</operator> <name pos:start="73:62" pos:end="73:73">CODEC_ID_AAC</name><operator pos:start="73:74" pos:end="73:74">)</operator>

        <operator pos:start="75:9" pos:end="75:10">&amp;&amp;</operator> <name pos:start="75:12" pos:end="75:22"><name pos:start="75:12" pos:end="75:14">trk</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:22">vosLen</name></name> <operator pos:start="75:24" pos:end="75:25">==</operator> <literal type="number" pos:start="75:27" pos:end="75:27">0</literal></expr>)</condition> <block pos:start="75:30" pos:end="87:5">{<block_content pos:start="77:9" pos:end="85:58">

        <expr_stmt pos:start="77:9" pos:end="77:36"><expr pos:start="77:9" pos:end="77:35"><call pos:start="77:9" pos:end="77:35"><name pos:start="77:9" pos:end="77:14">assert</name><argument_list pos:start="77:15" pos:end="77:35">(<argument pos:start="77:16" pos:end="77:34"><expr pos:start="77:16" pos:end="77:34"><name pos:start="77:16" pos:end="77:34"><name pos:start="77:16" pos:end="77:18">enc</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:34">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:42"><expr pos:start="81:9" pos:end="81:41"><name pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:11">trk</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:19">vosLen</name></name> <operator pos:start="81:21" pos:end="81:21">=</operator> <name pos:start="81:23" pos:end="81:41"><name pos:start="81:23" pos:end="81:25">enc</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:41">extradata_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:46"><expr pos:start="83:9" pos:end="83:45"><name pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:11">trk</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:20">vosData</name></name> <operator pos:start="83:22" pos:end="83:22">=</operator> <call pos:start="83:24" pos:end="83:45"><name pos:start="83:24" pos:end="83:32">av_malloc</name><argument_list pos:start="83:33" pos:end="83:45">(<argument pos:start="83:34" pos:end="83:44"><expr pos:start="83:34" pos:end="83:44"><name pos:start="83:34" pos:end="83:44"><name pos:start="83:34" pos:end="83:36">trk</name><operator pos:start="83:37" pos:end="83:38">-&gt;</operator><name pos:start="83:39" pos:end="83:44">vosLen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:58"><expr pos:start="85:9" pos:end="85:57"><call pos:start="85:9" pos:end="85:57"><name pos:start="85:9" pos:end="85:14">memcpy</name><argument_list pos:start="85:15" pos:end="85:57">(<argument pos:start="85:16" pos:end="85:27"><expr pos:start="85:16" pos:end="85:27"><name pos:start="85:16" pos:end="85:27"><name pos:start="85:16" pos:end="85:18">trk</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:27">vosData</name></name></expr></argument>, <argument pos:start="85:30" pos:end="85:43"><expr pos:start="85:30" pos:end="85:43"><name pos:start="85:30" pos:end="85:43"><name pos:start="85:30" pos:end="85:32">enc</name><operator pos:start="85:33" pos:end="85:34">-&gt;</operator><name pos:start="85:35" pos:end="85:43">extradata</name></name></expr></argument>, <argument pos:start="85:46" pos:end="85:56"><expr pos:start="85:46" pos:end="85:56"><name pos:start="85:46" pos:end="85:56"><name pos:start="85:46" pos:end="85:48">trk</name><operator pos:start="85:49" pos:end="85:50">-&gt;</operator><name pos:start="85:51" pos:end="85:56">vosLen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:45"><expr pos:start="91:5" pos:end="91:44"><name pos:start="91:5" pos:end="91:6">cl</name> <operator pos:start="91:8" pos:end="91:8">=</operator> <name pos:start="91:10" pos:end="91:19"><name pos:start="91:10" pos:end="91:12">trk</name><operator pos:start="91:13" pos:end="91:14">-&gt;</operator><name pos:start="91:15" pos:end="91:19">entry</name></name> <operator pos:start="91:21" pos:end="91:21">/</operator> <name pos:start="91:23" pos:end="91:44">MOV_INDEX_CLUSTER_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:45"><expr pos:start="93:5" pos:end="93:44"><name pos:start="93:5" pos:end="93:6">id</name> <operator pos:start="93:8" pos:end="93:8">=</operator> <name pos:start="93:10" pos:end="93:19"><name pos:start="93:10" pos:end="93:12">trk</name><operator pos:start="93:13" pos:end="93:14">-&gt;</operator><name pos:start="93:15" pos:end="93:19">entry</name></name> <operator pos:start="93:21" pos:end="93:21">%</operator> <name pos:start="93:23" pos:end="93:44">MOV_INDEX_CLUSTER_SIZE</name></expr>;</expr_stmt>



    <if_stmt pos:start="97:5" pos:end="113:5"><if pos:start="97:5" pos:end="113:5">if <condition pos:start="97:8" pos:end="97:42">(<expr pos:start="97:9" pos:end="97:41"><name pos:start="97:9" pos:end="97:27"><name pos:start="97:9" pos:end="97:11">trk</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:27">ents_allocated</name></name> <operator pos:start="97:29" pos:end="97:30">&lt;=</operator> <name pos:start="97:32" pos:end="97:41"><name pos:start="97:32" pos:end="97:34">trk</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:41">entry</name></name></expr>)</condition> <block pos:start="97:44" pos:end="113:5">{<block_content pos:start="99:9" pos:end="111:54">

        <expr_stmt pos:start="99:9" pos:end="99:70"><expr pos:start="99:9" pos:end="99:69"><name pos:start="99:9" pos:end="99:20"><name pos:start="99:9" pos:end="99:11">trk</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:20">cluster</name></name> <operator pos:start="99:22" pos:end="99:22">=</operator> <call pos:start="99:24" pos:end="99:69"><name pos:start="99:24" pos:end="99:33">av_realloc</name><argument_list pos:start="99:34" pos:end="99:69">(<argument pos:start="99:35" pos:end="99:46"><expr pos:start="99:35" pos:end="99:46"><name pos:start="99:35" pos:end="99:46"><name pos:start="99:35" pos:end="99:37">trk</name><operator pos:start="99:38" pos:end="99:39">-&gt;</operator><name pos:start="99:40" pos:end="99:46">cluster</name></name></expr></argument>, <argument pos:start="99:49" pos:end="99:68"><expr pos:start="99:49" pos:end="99:68"><operator pos:start="99:49" pos:end="99:49">(</operator><name pos:start="99:50" pos:end="99:51">cl</name><operator pos:start="99:52" pos:end="99:52">+</operator><literal type="number" pos:start="99:53" pos:end="99:53">1</literal><operator pos:start="99:54" pos:end="99:54">)</operator><operator pos:start="99:55" pos:end="99:55">*</operator><sizeof pos:start="99:56" pos:end="99:68">sizeof<argument_list pos:start="99:62" pos:end="99:68">(<argument pos:start="99:63" pos:end="99:67"><expr pos:start="99:63" pos:end="99:67"><name pos:start="99:63" pos:end="99:66">void</name><operator pos:start="99:67" pos:end="99:67">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

        <if_stmt pos:start="101:9" pos:end="103:22"><if pos:start="101:9" pos:end="103:22">if <condition pos:start="101:12" pos:end="101:26">(<expr pos:start="101:13" pos:end="101:25"><operator pos:start="101:13" pos:end="101:13">!</operator><name pos:start="101:14" pos:end="101:25"><name pos:start="101:14" pos:end="101:16">trk</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:25">cluster</name></name></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:22"><block_content pos:start="103:13" pos:end="103:22">

            <return pos:start="103:13" pos:end="103:22">return <expr pos:start="103:20" pos:end="103:21"><operator pos:start="103:20" pos:end="103:20">-</operator><literal type="number" pos:start="103:21" pos:end="103:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:79"><expr pos:start="105:9" pos:end="105:78"><name pos:start="105:9" pos:end="105:24"><name pos:start="105:9" pos:end="105:11">trk</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:20">cluster</name><index pos:start="105:21" pos:end="105:24">[<expr pos:start="105:22" pos:end="105:23"><name pos:start="105:22" pos:end="105:23">cl</name></expr>]</index></name> <operator pos:start="105:26" pos:end="105:26">=</operator> <call pos:start="105:28" pos:end="105:78"><name pos:start="105:28" pos:end="105:36">av_malloc</name><argument_list pos:start="105:37" pos:end="105:78">(<argument pos:start="105:38" pos:end="105:77"><expr pos:start="105:38" pos:end="105:77"><name pos:start="105:38" pos:end="105:59">MOV_INDEX_CLUSTER_SIZE</name><operator pos:start="105:60" pos:end="105:60">*</operator><sizeof pos:start="105:61" pos:end="105:77">sizeof<argument_list pos:start="105:67" pos:end="105:77">(<argument pos:start="105:68" pos:end="105:76"><expr pos:start="105:68" pos:end="105:76"><name pos:start="105:68" pos:end="105:76">MOVIentry</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="109:22"><if pos:start="107:9" pos:end="109:22">if <condition pos:start="107:12" pos:end="107:30">(<expr pos:start="107:13" pos:end="107:29"><operator pos:start="107:13" pos:end="107:13">!</operator><name pos:start="107:14" pos:end="107:29"><name pos:start="107:14" pos:end="107:16">trk</name><operator pos:start="107:17" pos:end="107:18">-&gt;</operator><name pos:start="107:19" pos:end="107:25">cluster</name><index pos:start="107:26" pos:end="107:29">[<expr pos:start="107:27" pos:end="107:28"><name pos:start="107:27" pos:end="107:28">cl</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:22"><block_content pos:start="109:13" pos:end="109:22">

            <return pos:start="109:13" pos:end="109:22">return <expr pos:start="109:20" pos:end="109:21"><operator pos:start="109:20" pos:end="109:20">-</operator><literal type="number" pos:start="109:21" pos:end="109:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:54"><expr pos:start="111:9" pos:end="111:53"><name pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:11">trk</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:27">ents_allocated</name></name> <operator pos:start="111:29" pos:end="111:30">+=</operator> <name pos:start="111:32" pos:end="111:53">MOV_INDEX_CLUSTER_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="123:5"><if pos:start="115:5" pos:end="123:5">if <condition pos:start="115:8" pos:end="115:31">(<expr pos:start="115:9" pos:end="115:30"><name pos:start="115:9" pos:end="115:25"><name pos:start="115:9" pos:end="115:11">mov</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:25">mdat_written</name></name> <operator pos:start="115:27" pos:end="115:28">==</operator> <literal type="number" pos:start="115:30" pos:end="115:30">0</literal></expr>)</condition> <block pos:start="115:33" pos:end="123:5">{<block_content pos:start="117:9" pos:end="121:32">

        <expr_stmt pos:start="117:9" pos:end="117:36"><expr pos:start="117:9" pos:end="117:35"><call pos:start="117:9" pos:end="117:35"><name pos:start="117:9" pos:end="117:26">mov_write_mdat_tag</name><argument_list pos:start="117:27" pos:end="117:35">(<argument pos:start="117:28" pos:end="117:29"><expr pos:start="117:28" pos:end="117:29"><name pos:start="117:28" pos:end="117:29">pb</name></expr></argument>, <argument pos:start="117:32" pos:end="117:34"><expr pos:start="117:32" pos:end="117:34"><name pos:start="117:32" pos:end="117:34">mov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:30"><expr pos:start="119:9" pos:end="119:29"><name pos:start="119:9" pos:end="119:25"><name pos:start="119:9" pos:end="119:11">mov</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:25">mdat_written</name></name> <operator pos:start="119:27" pos:end="119:27">=</operator> <literal type="number" pos:start="119:29" pos:end="119:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:32"><expr pos:start="121:9" pos:end="121:31"><name pos:start="121:9" pos:end="121:17"><name pos:start="121:9" pos:end="121:11">mov</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:17">time</name></name> <operator pos:start="121:19" pos:end="121:19">=</operator> <call pos:start="121:21" pos:end="121:31"><name pos:start="121:21" pos:end="121:29">Timestamp</name><argument_list pos:start="121:30" pos:end="121:31">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:62"><expr pos:start="127:5" pos:end="127:61"><name pos:start="127:5" pos:end="127:24"><name pos:start="127:5" pos:end="127:7">trk</name><operator pos:start="127:8" pos:end="127:9">-&gt;</operator><name pos:start="127:10" pos:end="127:16">cluster</name><index pos:start="127:17" pos:end="127:20">[<expr pos:start="127:18" pos:end="127:19"><name pos:start="127:18" pos:end="127:19">cl</name></expr>]</index><index pos:start="127:21" pos:end="127:24">[<expr pos:start="127:22" pos:end="127:23"><name pos:start="127:22" pos:end="127:23">id</name></expr>]</index></name><operator pos:start="127:25" pos:end="127:25">.</operator><name pos:start="127:26" pos:end="127:28">pos</name> <operator pos:start="127:30" pos:end="127:30">=</operator> <call pos:start="127:32" pos:end="127:44"><name pos:start="127:32" pos:end="127:40">url_ftell</name><argument_list pos:start="127:41" pos:end="127:44">(<argument pos:start="127:42" pos:end="127:43"><expr pos:start="127:42" pos:end="127:43"><name pos:start="127:42" pos:end="127:43">pb</name></expr></argument>)</argument_list></call> <operator pos:start="127:46" pos:end="127:46">-</operator> <name pos:start="127:48" pos:end="127:61"><name pos:start="127:48" pos:end="127:50">mov</name><operator pos:start="127:51" pos:end="127:52">-&gt;</operator><name pos:start="127:53" pos:end="127:61">movi_list</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:57"><expr pos:start="129:5" pos:end="129:56"><name pos:start="129:5" pos:end="129:24"><name pos:start="129:5" pos:end="129:7">trk</name><operator pos:start="129:8" pos:end="129:9">-&gt;</operator><name pos:start="129:10" pos:end="129:16">cluster</name><index pos:start="129:17" pos:end="129:20">[<expr pos:start="129:18" pos:end="129:19"><name pos:start="129:18" pos:end="129:19">cl</name></expr>]</index><index pos:start="129:21" pos:end="129:24">[<expr pos:start="129:22" pos:end="129:23"><name pos:start="129:22" pos:end="129:23">id</name></expr>]</index></name><operator pos:start="129:25" pos:end="129:25">.</operator><name pos:start="129:26" pos:end="129:39">samplesInChunk</name> <operator pos:start="129:41" pos:end="129:41">=</operator> <name pos:start="129:43" pos:end="129:56">samplesInChunk</name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:37"><expr pos:start="131:5" pos:end="131:36"><name pos:start="131:5" pos:end="131:24"><name pos:start="131:5" pos:end="131:7">trk</name><operator pos:start="131:8" pos:end="131:9">-&gt;</operator><name pos:start="131:10" pos:end="131:16">cluster</name><index pos:start="131:17" pos:end="131:20">[<expr pos:start="131:18" pos:end="131:19"><name pos:start="131:18" pos:end="131:19">cl</name></expr>]</index><index pos:start="131:21" pos:end="131:24">[<expr pos:start="131:22" pos:end="131:23"><name pos:start="131:22" pos:end="131:23">id</name></expr>]</index></name><operator pos:start="131:25" pos:end="131:25">.</operator><name pos:start="131:26" pos:end="131:29">size</name> <operator pos:start="131:31" pos:end="131:31">=</operator> <name pos:start="131:33" pos:end="131:36">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:50"><expr pos:start="133:5" pos:end="133:49"><name pos:start="133:5" pos:end="133:24"><name pos:start="133:5" pos:end="133:7">trk</name><operator pos:start="133:8" pos:end="133:9">-&gt;</operator><name pos:start="133:10" pos:end="133:16">cluster</name><index pos:start="133:17" pos:end="133:20">[<expr pos:start="133:18" pos:end="133:19"><name pos:start="133:18" pos:end="133:19">cl</name></expr>]</index><index pos:start="133:21" pos:end="133:24">[<expr pos:start="133:22" pos:end="133:23"><name pos:start="133:22" pos:end="133:23">id</name></expr>]</index></name><operator pos:start="133:25" pos:end="133:25">.</operator><name pos:start="133:26" pos:end="133:32">entries</name> <operator pos:start="133:34" pos:end="133:34">=</operator> <name pos:start="133:36" pos:end="133:49">samplesInChunk</name></expr>;</expr_stmt>

    <if_stmt pos:start="135:5" pos:end="143:5"><if pos:start="135:5" pos:end="143:5">if<condition pos:start="135:7" pos:end="135:43">(<expr pos:start="135:8" pos:end="135:42"><name pos:start="135:8" pos:end="135:22"><name pos:start="135:8" pos:end="135:10">enc</name><operator pos:start="135:11" pos:end="135:12">-&gt;</operator><name pos:start="135:13" pos:end="135:22">codec_type</name></name> <operator pos:start="135:24" pos:end="135:25">==</operator> <name pos:start="135:27" pos:end="135:42">CODEC_TYPE_VIDEO</name></expr>)</condition> <block pos:start="135:45" pos:end="143:5">{<block_content pos:start="137:9" pos:end="141:34">

        <expr_stmt pos:start="137:9" pos:end="137:69"><expr pos:start="137:9" pos:end="137:68"><name pos:start="137:9" pos:end="137:28"><name pos:start="137:9" pos:end="137:11">trk</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:20">cluster</name><index pos:start="137:21" pos:end="137:24">[<expr pos:start="137:22" pos:end="137:23"><name pos:start="137:22" pos:end="137:23">cl</name></expr>]</index><index pos:start="137:25" pos:end="137:28">[<expr pos:start="137:26" pos:end="137:27"><name pos:start="137:26" pos:end="137:27">id</name></expr>]</index></name><operator pos:start="137:29" pos:end="137:29">.</operator><name pos:start="137:30" pos:end="137:38">key_frame</name> <operator pos:start="137:40" pos:end="137:40">=</operator> <name pos:start="137:42" pos:end="137:68"><name pos:start="137:42" pos:end="137:44">enc</name><operator pos:start="137:45" pos:end="137:46">-&gt;</operator><name pos:start="137:47" pos:end="137:57">coded_frame</name><operator pos:start="137:58" pos:end="137:59">-&gt;</operator><name pos:start="137:60" pos:end="137:68">key_frame</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="141:34"><if pos:start="139:9" pos:end="141:34">if<condition pos:start="139:11" pos:end="139:52">(<expr pos:start="139:12" pos:end="139:51"><name pos:start="139:12" pos:end="139:38"><name pos:start="139:12" pos:end="139:14">enc</name><operator pos:start="139:15" pos:end="139:16">-&gt;</operator><name pos:start="139:17" pos:end="139:27">coded_frame</name><operator pos:start="139:28" pos:end="139:29">-&gt;</operator><name pos:start="139:30" pos:end="139:38">pict_type</name></name> <operator pos:start="139:40" pos:end="139:41">==</operator> <name pos:start="139:43" pos:end="139:51">FF_I_TYPE</name></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:34"><block_content pos:start="141:13" pos:end="141:34">

            <expr_stmt pos:start="141:13" pos:end="141:34"><expr pos:start="141:13" pos:end="141:33"><name pos:start="141:13" pos:end="141:29"><name pos:start="141:13" pos:end="141:15">trk</name><operator pos:start="141:16" pos:end="141:17">-&gt;</operator><name pos:start="141:18" pos:end="141:29">hasKeyframes</name></name> <operator pos:start="141:31" pos:end="141:31">=</operator> <literal type="number" pos:start="141:33" pos:end="141:33">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:19"><expr pos:start="145:5" pos:end="145:18"><name pos:start="145:5" pos:end="145:12"><name pos:start="145:5" pos:end="145:7">trk</name><operator pos:start="145:8" pos:end="145:9">-&gt;</operator><name pos:start="145:10" pos:end="145:12">enc</name></name> <operator pos:start="145:14" pos:end="145:14">=</operator> <name pos:start="145:16" pos:end="145:18">enc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:17"><expr pos:start="147:5" pos:end="147:16"><name pos:start="147:5" pos:end="147:14"><name pos:start="147:5" pos:end="147:7">trk</name><operator pos:start="147:8" pos:end="147:9">-&gt;</operator><name pos:start="147:10" pos:end="147:14">entry</name></name><operator pos:start="147:15" pos:end="147:16">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:39"><expr pos:start="149:5" pos:end="149:38"><name pos:start="149:5" pos:end="149:20"><name pos:start="149:5" pos:end="149:7">trk</name><operator pos:start="149:8" pos:end="149:9">-&gt;</operator><name pos:start="149:10" pos:end="149:20">sampleCount</name></name> <operator pos:start="149:22" pos:end="149:23">+=</operator> <name pos:start="149:25" pos:end="149:38">samplesInChunk</name></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:27"><expr pos:start="151:5" pos:end="151:26"><name pos:start="151:5" pos:end="151:18"><name pos:start="151:5" pos:end="151:7">trk</name><operator pos:start="151:8" pos:end="151:9">-&gt;</operator><name pos:start="151:10" pos:end="151:18">mdat_size</name></name> <operator pos:start="151:20" pos:end="151:21">+=</operator> <name pos:start="151:23" pos:end="151:26">size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="155:5" pos:end="155:30"><expr pos:start="155:5" pos:end="155:29"><call pos:start="155:5" pos:end="155:29"><name pos:start="155:5" pos:end="155:14">put_buffer</name><argument_list pos:start="155:15" pos:end="155:29">(<argument pos:start="155:16" pos:end="155:17"><expr pos:start="155:16" pos:end="155:17"><name pos:start="155:16" pos:end="155:17">pb</name></expr></argument>, <argument pos:start="155:20" pos:end="155:22"><expr pos:start="155:20" pos:end="155:22"><name pos:start="155:20" pos:end="155:22">buf</name></expr></argument>, <argument pos:start="155:25" pos:end="155:28"><expr pos:start="155:25" pos:end="155:28"><name pos:start="155:25" pos:end="155:28">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:25"><expr pos:start="159:5" pos:end="159:24"><call pos:start="159:5" pos:end="159:24"><name pos:start="159:5" pos:end="159:20">put_flush_packet</name><argument_list pos:start="159:21" pos:end="159:24">(<argument pos:start="159:22" pos:end="159:23"><expr pos:start="159:22" pos:end="159:23"><name pos:start="159:22" pos:end="159:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="161:5" pos:end="161:13">return <expr pos:start="161:12" pos:end="161:12"><literal type="number" pos:start="161:12" pos:end="161:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
