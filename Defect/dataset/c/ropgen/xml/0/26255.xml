<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26255.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">qed_write_l1_table_sync</name><parameter_list pos:start="1:28" pos:end="3:43">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:40">BDRVQEDState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:63"><decl pos:start="1:46" pos:end="1:63"><type pos:start="1:46" pos:end="1:63"><name pos:start="1:46" pos:end="1:53">unsigned</name> <name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:63">index</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:36">unsigned</name> <name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:42">n</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="31:1">{<block_content pos:start="7:5" pos:end="29:15">

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:26">= <expr pos:start="7:15" pos:end="7:26"><operator pos:start="7:15" pos:end="7:15">-</operator><name pos:start="7:16" pos:end="7:26">EINPROGRESS</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:25"><expr pos:start="11:5" pos:end="11:24"><call pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:22">async_context_push</name><argument_list pos:start="11:23" pos:end="11:24">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:55"><expr pos:start="15:5" pos:end="15:54"><call pos:start="15:5" pos:end="15:54"><name pos:start="15:5" pos:end="15:22">qed_write_l1_table</name><argument_list pos:start="15:23" pos:end="15:54">(<argument pos:start="15:24" pos:end="15:24"><expr pos:start="15:24" pos:end="15:24"><name pos:start="15:24" pos:end="15:24">s</name></expr></argument>, <argument pos:start="15:27" pos:end="15:31"><expr pos:start="15:27" pos:end="15:31"><name pos:start="15:27" pos:end="15:31">index</name></expr></argument>, <argument pos:start="15:34" pos:end="15:34"><expr pos:start="15:34" pos:end="15:34"><name pos:start="15:34" pos:end="15:34">n</name></expr></argument>, <argument pos:start="15:37" pos:end="15:47"><expr pos:start="15:37" pos:end="15:47"><name pos:start="15:37" pos:end="15:47">qed_sync_cb</name></expr></argument>, <argument pos:start="15:50" pos:end="15:53"><expr pos:start="15:50" pos:end="15:53"><operator pos:start="15:50" pos:end="15:50">&amp;</operator><name pos:start="15:51" pos:end="15:53">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="17:5" pos:end="21:5">while <condition pos:start="17:11" pos:end="17:31">(<expr pos:start="17:12" pos:end="17:30"><name pos:start="17:12" pos:end="17:14">ret</name> <operator pos:start="17:16" pos:end="17:17">==</operator> <operator pos:start="17:19" pos:end="17:19">-</operator><name pos:start="17:20" pos:end="17:30">EINPROGRESS</name></expr>)</condition> <block pos:start="17:33" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:24">

        <expr_stmt pos:start="19:9" pos:end="19:24"><expr pos:start="19:9" pos:end="19:23"><call pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:21">qemu_aio_wait</name><argument_list pos:start="19:22" pos:end="19:23">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><call pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:21">async_context_pop</name><argument_list pos:start="25:22" pos:end="25:23">()</argument_list></call></expr>;</expr_stmt>



    <return pos:start="29:5" pos:end="29:15">return <expr pos:start="29:12" pos:end="29:14"><name pos:start="29:12" pos:end="29:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
