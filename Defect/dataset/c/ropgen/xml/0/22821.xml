<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22821.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">parse_section_header</name><parameter_list pos:start="1:32" pos:end="3:66">(<parameter pos:start="1:33" pos:end="1:51"><decl pos:start="1:33" pos:end="1:51"><type pos:start="1:33" pos:end="1:51"><name pos:start="1:33" pos:end="1:46">GetByteContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">gbc</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:70"><decl pos:start="1:54" pos:end="1:70"><type pos:start="1:54" pos:end="1:70"><name pos:start="1:54" pos:end="1:56">int</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:70">section_size</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:65"><decl pos:start="3:33" pos:end="3:65"><type pos:start="3:33" pos:end="3:65"><name pos:start="3:33" pos:end="3:51"><name pos:start="3:33" pos:end="3:36">enum</name> <name pos:start="3:38" pos:end="3:51">HapSectionType</name></name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:65">section_type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:17">

    <if_stmt pos:start="7:5" pos:end="9:35"><if pos:start="7:5" pos:end="9:35">if <condition pos:start="7:8" pos:end="7:44">(<expr pos:start="7:9" pos:end="7:43"><call pos:start="7:9" pos:end="7:39"><name pos:start="7:9" pos:end="7:34">bytestream2_get_bytes_left</name><argument_list pos:start="7:35" pos:end="7:39">(<argument pos:start="7:36" pos:end="7:38"><expr pos:start="7:36" pos:end="7:38"><name pos:start="7:36" pos:end="7:38">gbc</name></expr></argument>)</argument_list></call> <operator pos:start="7:41" pos:end="7:41">&lt;</operator> <literal type="number" pos:start="7:43" pos:end="7:43">4</literal></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:35"><block_content pos:start="9:9" pos:end="9:35">

        <return pos:start="9:9" pos:end="9:35">return <expr pos:start="9:16" pos:end="9:34"><name pos:start="9:16" pos:end="9:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:46"><expr pos:start="13:5" pos:end="13:45"><operator pos:start="13:5" pos:end="13:5">*</operator><name pos:start="13:6" pos:end="13:17">section_size</name> <operator pos:start="13:19" pos:end="13:19">=</operator> <call pos:start="13:21" pos:end="13:45"><name pos:start="13:21" pos:end="13:40">bytestream2_get_le24</name><argument_list pos:start="13:41" pos:end="13:45">(<argument pos:start="13:42" pos:end="13:44"><expr pos:start="13:42" pos:end="13:44"><name pos:start="13:42" pos:end="13:44">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:46"><expr pos:start="15:5" pos:end="15:45"><operator pos:start="15:5" pos:end="15:5">*</operator><name pos:start="15:6" pos:end="15:17">section_type</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <call pos:start="15:21" pos:end="15:45"><name pos:start="15:21" pos:end="15:40">bytestream2_get_byte</name><argument_list pos:start="15:41" pos:end="15:45">(<argument pos:start="15:42" pos:end="15:44"><expr pos:start="15:42" pos:end="15:44"><name pos:start="15:42" pos:end="15:44">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="29:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:27">(<expr pos:start="19:9" pos:end="19:26"><operator pos:start="19:9" pos:end="19:9">*</operator><name pos:start="19:10" pos:end="19:21">section_size</name> <operator pos:start="19:23" pos:end="19:24">==</operator> <literal type="number" pos:start="19:26" pos:end="19:26">0</literal></expr>)</condition> <block pos:start="19:29" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:50">

        <if_stmt pos:start="21:9" pos:end="23:39"><if pos:start="21:9" pos:end="23:39">if <condition pos:start="21:12" pos:end="21:48">(<expr pos:start="21:13" pos:end="21:47"><call pos:start="21:13" pos:end="21:43"><name pos:start="21:13" pos:end="21:38">bytestream2_get_bytes_left</name><argument_list pos:start="21:39" pos:end="21:43">(<argument pos:start="21:40" pos:end="21:42"><expr pos:start="21:40" pos:end="21:42"><name pos:start="21:40" pos:end="21:42">gbc</name></expr></argument>)</argument_list></call> <operator pos:start="21:45" pos:end="21:45">&lt;</operator> <literal type="number" pos:start="21:47" pos:end="21:47">4</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:39"><block_content pos:start="23:13" pos:end="23:39">

            <return pos:start="23:13" pos:end="23:39">return <expr pos:start="23:20" pos:end="23:38"><name pos:start="23:20" pos:end="23:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:50"><expr pos:start="27:9" pos:end="27:49"><operator pos:start="27:9" pos:end="27:9">*</operator><name pos:start="27:10" pos:end="27:21">section_size</name> <operator pos:start="27:23" pos:end="27:23">=</operator> <call pos:start="27:25" pos:end="27:49"><name pos:start="27:25" pos:end="27:44">bytestream2_get_le32</name><argument_list pos:start="27:45" pos:end="27:49">(<argument pos:start="27:46" pos:end="27:48"><expr pos:start="27:46" pos:end="27:48"><name pos:start="27:46" pos:end="27:48">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="39:17"><if pos:start="33:5" pos:end="35:35">if <condition pos:start="33:8" pos:end="33:56">(<expr pos:start="33:9" pos:end="33:55"><operator pos:start="33:9" pos:end="33:9">*</operator><name pos:start="33:10" pos:end="33:21">section_size</name> <operator pos:start="33:23" pos:end="33:23">&gt;</operator> <call pos:start="33:25" pos:end="33:55"><name pos:start="33:25" pos:end="33:50">bytestream2_get_bytes_left</name><argument_list pos:start="33:51" pos:end="33:55">(<argument pos:start="33:52" pos:end="33:54"><expr pos:start="33:52" pos:end="33:54"><name pos:start="33:52" pos:end="33:54">gbc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:35"><block_content pos:start="35:9" pos:end="35:35">

        <return pos:start="35:9" pos:end="35:35">return <expr pos:start="35:16" pos:end="35:34"><name pos:start="35:16" pos:end="35:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if>

    <else pos:start="37:5" pos:end="39:17">else<block type="pseudo" pos:start="39:9" pos:end="39:17"><block_content pos:start="39:9" pos:end="39:17">

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
