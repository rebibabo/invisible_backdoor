<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10306.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">flush_encoders</name><parameter_list pos:start="1:27" pos:end="1:32">(<parameter pos:start="1:28" pos:end="1:31"><decl pos:start="1:28" pos:end="1:31"><type pos:start="1:28" pos:end="1:31"><name pos:start="1:28" pos:end="1:31">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:5">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="121:5">for <control pos:start="9:9" pos:end="9:43">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:38"><expr pos:start="9:17" pos:end="9:37"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <name pos:start="9:21" pos:end="9:37">nb_output_streams</name></expr>;</condition> <incr pos:start="9:40" pos:end="9:42"><expr pos:start="9:40" pos:end="9:42"><name pos:start="9:40" pos:end="9:40">i</name><operator pos:start="9:41" pos:end="9:42">++</operator></expr></incr>)</control> <block pos:start="9:45" pos:end="121:5">{<block_content pos:start="11:9" pos:end="119:9">

        <decl_stmt pos:start="11:9" pos:end="11:48"><decl pos:start="11:9" pos:end="11:47"><type pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:20">OutputStream</name>   <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:27">ost</name> <init pos:start="11:29" pos:end="11:47">= <expr pos:start="11:31" pos:end="11:47"><name pos:start="11:31" pos:end="11:47"><name pos:start="11:31" pos:end="11:44">output_streams</name><index pos:start="11:45" pos:end="11:47">[<expr pos:start="11:46" pos:end="11:46"><name pos:start="11:46" pos:end="11:46">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:43"><decl pos:start="13:9" pos:end="13:42"><type pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:22">AVCodecContext</name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:27">enc</name> <init pos:start="13:29" pos:end="13:42">= <expr pos:start="13:31" pos:end="13:42"><name pos:start="13:31" pos:end="13:42"><name pos:start="13:31" pos:end="13:33">ost</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:42">enc_ctx</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:65"><decl pos:start="15:9" pos:end="15:64"><type pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:23">AVFormatContext</name> <modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:27">os</name> <init pos:start="15:29" pos:end="15:64">= <expr pos:start="15:31" pos:end="15:64"><name pos:start="15:31" pos:end="15:59"><name pos:start="15:31" pos:end="15:42">output_files</name><index pos:start="15:43" pos:end="15:59">[<expr pos:start="15:44" pos:end="15:58"><name pos:start="15:44" pos:end="15:58"><name pos:start="15:44" pos:end="15:46">ost</name><operator pos:start="15:47" pos:end="15:48">-&gt;</operator><name pos:start="15:49" pos:end="15:58">file_index</name></name></expr>]</index></name><operator pos:start="15:60" pos:end="15:61">-&gt;</operator><name pos:start="15:62" pos:end="15:64">ctx</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:30"><decl pos:start="17:9" pos:end="17:29"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:25">stop_encoding</name> <init pos:start="17:27" pos:end="17:29">= <expr pos:start="17:29" pos:end="17:29"><literal type="number" pos:start="17:29" pos:end="17:29">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="21:9" pos:end="23:21"><if pos:start="21:9" pos:end="23:21">if <condition pos:start="21:12" pos:end="21:34">(<expr pos:start="21:13" pos:end="21:33"><operator pos:start="21:13" pos:end="21:13">!</operator><name pos:start="21:14" pos:end="21:33"><name pos:start="21:14" pos:end="21:16">ost</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:33">encoding_needed</name></name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:21"><block_content pos:start="23:13" pos:end="23:21">

            <continue pos:start="23:13" pos:end="23:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="27:9" pos:end="29:21"><if pos:start="27:9" pos:end="29:21">if <condition pos:start="27:12" pos:end="27:74">(<expr pos:start="27:13" pos:end="27:73"><name pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:15">enc</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:27">codec_type</name></name> <operator pos:start="27:29" pos:end="27:30">==</operator> <name pos:start="27:32" pos:end="27:49">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="27:51" pos:end="27:52">&amp;&amp;</operator> <name pos:start="27:54" pos:end="27:68"><name pos:start="27:54" pos:end="27:56">enc</name><operator pos:start="27:57" pos:end="27:58">-&gt;</operator><name pos:start="27:59" pos:end="27:68">frame_size</name></name> <operator pos:start="27:70" pos:end="27:71">&lt;=</operator> <literal type="number" pos:start="27:73" pos:end="27:73">1</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <continue pos:start="29:13" pos:end="29:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="33:9" pos:end="35:21"><if pos:start="33:9" pos:end="35:21">if <condition pos:start="33:12" pos:end="33:91">(<expr pos:start="33:13" pos:end="33:90"><name pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:15">enc</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:27">codec_type</name></name> <operator pos:start="33:29" pos:end="33:30">!=</operator> <name pos:start="33:32" pos:end="33:49">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="33:51" pos:end="33:52">&amp;&amp;</operator> <name pos:start="33:54" pos:end="33:68"><name pos:start="33:54" pos:end="33:56">enc</name><operator pos:start="33:57" pos:end="33:58">-&gt;</operator><name pos:start="33:59" pos:end="33:68">codec_type</name></name> <operator pos:start="33:70" pos:end="33:71">!=</operator> <name pos:start="33:73" pos:end="33:90">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:21"><block_content pos:start="35:13" pos:end="35:21">

            <continue pos:start="35:13" pos:end="35:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:38"><expr pos:start="39:9" pos:end="39:37"><call pos:start="39:9" pos:end="39:37"><name pos:start="39:9" pos:end="39:26">avcodec_send_frame</name><argument_list pos:start="39:27" pos:end="39:37">(<argument pos:start="39:28" pos:end="39:30"><expr pos:start="39:28" pos:end="39:30"><name pos:start="39:28" pos:end="39:30">enc</name></expr></argument>, <argument pos:start="39:33" pos:end="39:36"><expr pos:start="39:33" pos:end="39:36"><name pos:start="39:33" pos:end="39:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="43:9" pos:end="119:9">for <control pos:start="43:13" pos:end="43:16">(<init pos:start="43:14" pos:end="43:14">;</init><condition pos:start="43:15" pos:end="43:15">;</condition><incr/>)</control> <block pos:start="43:18" pos:end="119:9">{<block_content pos:start="45:13" pos:end="117:22">

            <decl_stmt pos:start="45:13" pos:end="45:36"><decl pos:start="45:13" pos:end="45:35"><type pos:start="45:13" pos:end="45:24"><specifier pos:start="45:13" pos:end="45:17">const</specifier> <name pos:start="45:19" pos:end="45:22">char</name> <modifier pos:start="45:24" pos:end="45:24">*</modifier></type><name pos:start="45:25" pos:end="45:28">desc</name> <init pos:start="45:30" pos:end="45:35">= <expr pos:start="45:32" pos:end="45:35"><name pos:start="45:32" pos:end="45:35">NULL</name></expr></init></decl>;</decl_stmt>



            <switch pos:start="49:13" pos:end="67:13">switch <condition pos:start="49:20" pos:end="49:36">(<expr pos:start="49:21" pos:end="49:35"><name pos:start="49:21" pos:end="49:35"><name pos:start="49:21" pos:end="49:23">enc</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:35">codec_type</name></name></expr>)</condition> <block pos:start="49:38" pos:end="67:13">{<block_content pos:start="51:13" pos:end="65:30">

            <case pos:start="51:13" pos:end="51:36">case <expr pos:start="51:18" pos:end="51:35"><name pos:start="51:18" pos:end="51:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <expr_stmt pos:start="53:17" pos:end="53:33"><expr pos:start="53:17" pos:end="53:32"><name pos:start="53:17" pos:end="53:20">desc</name>   <operator pos:start="53:24" pos:end="53:24">=</operator> <literal type="string" pos:start="53:26" pos:end="53:32">"Audio"</literal></expr>;</expr_stmt>

                <break pos:start="55:17" pos:end="55:22">break;</break>

            <case pos:start="57:13" pos:end="57:36">case <expr pos:start="57:18" pos:end="57:35"><name pos:start="57:18" pos:end="57:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <expr_stmt pos:start="59:17" pos:end="59:33"><expr pos:start="59:17" pos:end="59:32"><name pos:start="59:17" pos:end="59:20">desc</name>   <operator pos:start="59:24" pos:end="59:24">=</operator> <literal type="string" pos:start="59:26" pos:end="59:32">"Video"</literal></expr>;</expr_stmt>

                <break pos:start="61:17" pos:end="61:22">break;</break>

            <default pos:start="63:13" pos:end="63:20">default:</default>

                <expr_stmt pos:start="65:17" pos:end="65:30"><expr pos:start="65:17" pos:end="65:29"><call pos:start="65:17" pos:end="65:29"><name pos:start="65:17" pos:end="65:26">av_assert0</name><argument_list pos:start="65:27" pos:end="65:29">(<argument pos:start="65:28" pos:end="65:28"><expr pos:start="65:28" pos:end="65:28"><literal type="number" pos:start="65:28" pos:end="65:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>



            <if_stmt pos:start="71:13" pos:end="111:13"><if pos:start="71:13" pos:end="111:13">if <condition pos:start="71:16" pos:end="71:18">(<expr pos:start="71:17" pos:end="71:17"><literal type="number" pos:start="71:17" pos:end="71:17">1</literal></expr>)</condition> <block pos:start="71:20" pos:end="111:13">{<block_content pos:start="73:17" pos:end="109:45">

                <decl_stmt pos:start="73:17" pos:end="73:29"><decl pos:start="73:17" pos:end="73:28"><type pos:start="73:17" pos:end="73:24"><name pos:start="73:17" pos:end="73:24">AVPacket</name></type> <name pos:start="73:26" pos:end="73:28">pkt</name></decl>;</decl_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:37"><expr pos:start="75:17" pos:end="75:36"><call pos:start="75:17" pos:end="75:36"><name pos:start="75:17" pos:end="75:30">av_init_packet</name><argument_list pos:start="75:31" pos:end="75:36">(<argument pos:start="75:32" pos:end="75:35"><expr pos:start="75:32" pos:end="75:35"><operator pos:start="75:32" pos:end="75:32">&amp;</operator><name pos:start="75:33" pos:end="75:35">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:32"><expr pos:start="77:17" pos:end="77:31"><name pos:start="77:17" pos:end="77:24"><name pos:start="77:17" pos:end="77:19">pkt</name><operator pos:start="77:20" pos:end="77:20">.</operator><name pos:start="77:21" pos:end="77:24">data</name></name> <operator pos:start="77:26" pos:end="77:26">=</operator> <name pos:start="77:28" pos:end="77:31">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:29"><expr pos:start="79:17" pos:end="79:28"><name pos:start="79:17" pos:end="79:24"><name pos:start="79:17" pos:end="79:19">pkt</name><operator pos:start="79:20" pos:end="79:20">.</operator><name pos:start="79:21" pos:end="79:24">size</name></name> <operator pos:start="79:26" pos:end="79:26">=</operator> <literal type="number" pos:start="79:28" pos:end="79:28">0</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="83:17" pos:end="83:56"><expr pos:start="83:17" pos:end="83:55"><name pos:start="83:17" pos:end="83:19">ret</name> <operator pos:start="83:21" pos:end="83:21">=</operator> <call pos:start="83:23" pos:end="83:55"><name pos:start="83:23" pos:end="83:44">avcodec_receive_packet</name><argument_list pos:start="83:45" pos:end="83:55">(<argument pos:start="83:46" pos:end="83:48"><expr pos:start="83:46" pos:end="83:48"><name pos:start="83:46" pos:end="83:48">enc</name></expr></argument>, <argument pos:start="83:51" pos:end="83:54"><expr pos:start="83:51" pos:end="83:54"><operator pos:start="83:51" pos:end="83:51">&amp;</operator><name pos:start="83:52" pos:end="83:54">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="85:17" pos:end="91:17"><if pos:start="85:17" pos:end="91:17">if <condition pos:start="85:20" pos:end="85:50">(<expr pos:start="85:21" pos:end="85:49"><name pos:start="85:21" pos:end="85:23">ret</name> <operator pos:start="85:25" pos:end="85:25">&lt;</operator> <literal type="number" pos:start="85:27" pos:end="85:27">0</literal> <operator pos:start="85:29" pos:end="85:30">&amp;&amp;</operator> <name pos:start="85:32" pos:end="85:34">ret</name> <operator pos:start="85:36" pos:end="85:37">!=</operator> <name pos:start="85:39" pos:end="85:49">AVERROR_EOF</name></expr>)</condition> <block pos:start="85:52" pos:end="91:17">{<block_content pos:start="87:21" pos:end="89:36">

                    <expr_stmt pos:start="87:21" pos:end="87:77"><expr pos:start="87:21" pos:end="87:76"><call pos:start="87:21" pos:end="87:76"><name pos:start="87:21" pos:end="87:26">av_log</name><argument_list pos:start="87:27" pos:end="87:76">(<argument pos:start="87:28" pos:end="87:31"><expr pos:start="87:28" pos:end="87:31"><name pos:start="87:28" pos:end="87:31">NULL</name></expr></argument>, <argument pos:start="87:34" pos:end="87:45"><expr pos:start="87:34" pos:end="87:45"><name pos:start="87:34" pos:end="87:45">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="87:48" pos:end="87:69"><expr pos:start="87:48" pos:end="87:69"><literal type="string" pos:start="87:48" pos:end="87:69">"%s encoding failed\n"</literal></expr></argument>, <argument pos:start="87:72" pos:end="87:75"><expr pos:start="87:72" pos:end="87:75"><name pos:start="87:72" pos:end="87:75">desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="89:21" pos:end="89:36"><expr pos:start="89:21" pos:end="89:35"><call pos:start="89:21" pos:end="89:35"><name pos:start="89:21" pos:end="89:32">exit_program</name><argument_list pos:start="89:33" pos:end="89:35">(<argument pos:start="89:34" pos:end="89:34"><expr pos:start="89:34" pos:end="89:34"><literal type="number" pos:start="89:34" pos:end="89:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="93:17" pos:end="97:17"><if pos:start="93:17" pos:end="97:17">if <condition pos:start="93:20" pos:end="93:51">(<expr pos:start="93:21" pos:end="93:50"><name pos:start="93:21" pos:end="93:32"><name pos:start="93:21" pos:end="93:23">ost</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:32">logfile</name></name> <operator pos:start="93:34" pos:end="93:35">&amp;&amp;</operator> <name pos:start="93:37" pos:end="93:50"><name pos:start="93:37" pos:end="93:39">enc</name><operator pos:start="93:40" pos:end="93:41">-&gt;</operator><name pos:start="93:42" pos:end="93:50">stats_out</name></name></expr>)</condition> <block pos:start="93:53" pos:end="97:17">{<block_content pos:start="95:21" pos:end="95:64">

                    <expr_stmt pos:start="95:21" pos:end="95:64"><expr pos:start="95:21" pos:end="95:63"><call pos:start="95:21" pos:end="95:63"><name pos:start="95:21" pos:end="95:27">fprintf</name><argument_list pos:start="95:28" pos:end="95:63">(<argument pos:start="95:29" pos:end="95:40"><expr pos:start="95:29" pos:end="95:40"><name pos:start="95:29" pos:end="95:40"><name pos:start="95:29" pos:end="95:31">ost</name><operator pos:start="95:32" pos:end="95:33">-&gt;</operator><name pos:start="95:34" pos:end="95:40">logfile</name></name></expr></argument>, <argument pos:start="95:43" pos:end="95:46"><expr pos:start="95:43" pos:end="95:46"><literal type="string" pos:start="95:43" pos:end="95:46">"%s"</literal></expr></argument>, <argument pos:start="95:49" pos:end="95:62"><expr pos:start="95:49" pos:end="95:62"><name pos:start="95:49" pos:end="95:62"><name pos:start="95:49" pos:end="95:51">enc</name><operator pos:start="95:52" pos:end="95:53">-&gt;</operator><name pos:start="95:54" pos:end="95:62">stats_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="99:17" pos:end="105:17"><if pos:start="99:17" pos:end="105:17">if <condition pos:start="99:20" pos:end="99:39">(<expr pos:start="99:21" pos:end="99:38"><name pos:start="99:21" pos:end="99:23">ret</name> <operator pos:start="99:25" pos:end="99:26">==</operator> <name pos:start="99:28" pos:end="99:38">AVERROR_EOF</name></expr>)</condition> <block pos:start="99:41" pos:end="105:17">{<block_content pos:start="101:21" pos:end="103:26">

                    <expr_stmt pos:start="101:21" pos:end="101:38"><expr pos:start="101:21" pos:end="101:37"><name pos:start="101:21" pos:end="101:33">stop_encoding</name> <operator pos:start="101:35" pos:end="101:35">=</operator> <literal type="number" pos:start="101:37" pos:end="101:37">1</literal></expr>;</expr_stmt>

                    <break pos:start="103:21" pos:end="103:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:79"><expr pos:start="107:17" pos:end="107:78"><call pos:start="107:17" pos:end="107:78"><name pos:start="107:17" pos:end="107:36">av_packet_rescale_ts</name><argument_list pos:start="107:37" pos:end="107:78">(<argument pos:start="107:38" pos:end="107:41"><expr pos:start="107:38" pos:end="107:41"><operator pos:start="107:38" pos:end="107:38">&amp;</operator><name pos:start="107:39" pos:end="107:41">pkt</name></expr></argument>, <argument pos:start="107:44" pos:end="107:57"><expr pos:start="107:44" pos:end="107:57"><name pos:start="107:44" pos:end="107:57"><name pos:start="107:44" pos:end="107:46">enc</name><operator pos:start="107:47" pos:end="107:48">-&gt;</operator><name pos:start="107:49" pos:end="107:57">time_base</name></name></expr></argument>, <argument pos:start="107:60" pos:end="107:77"><expr pos:start="107:60" pos:end="107:77"><name pos:start="107:60" pos:end="107:77"><name pos:start="107:60" pos:end="107:62">ost</name><operator pos:start="107:63" pos:end="107:64">-&gt;</operator><name pos:start="107:65" pos:end="107:66">st</name><operator pos:start="107:67" pos:end="107:68">-&gt;</operator><name pos:start="107:69" pos:end="107:77">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:45"><expr pos:start="109:17" pos:end="109:44"><call pos:start="109:17" pos:end="109:44"><name pos:start="109:17" pos:end="109:29">output_packet</name><argument_list pos:start="109:30" pos:end="109:44">(<argument pos:start="109:31" pos:end="109:32"><expr pos:start="109:31" pos:end="109:32"><name pos:start="109:31" pos:end="109:32">os</name></expr></argument>, <argument pos:start="109:35" pos:end="109:38"><expr pos:start="109:35" pos:end="109:38"><operator pos:start="109:35" pos:end="109:35">&amp;</operator><name pos:start="109:36" pos:end="109:38">pkt</name></expr></argument>, <argument pos:start="109:41" pos:end="109:43"><expr pos:start="109:41" pos:end="109:43"><name pos:start="109:41" pos:end="109:43">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="115:13" pos:end="117:22"><if pos:start="115:13" pos:end="117:22">if <condition pos:start="115:16" pos:end="115:30">(<expr pos:start="115:17" pos:end="115:29"><name pos:start="115:17" pos:end="115:29">stop_encoding</name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:22"><block_content pos:start="117:17" pos:end="117:22">

                <break pos:start="117:17" pos:end="117:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
