<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23908.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:33">ff_nvenc_encode_close</name><parameter_list pos:start="1:34" pos:end="1:56">(<parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:50"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:13">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">NVENCContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">ctx</name>               <init pos:start="5:37" pos:end="5:54">= <expr pos:start="5:39" pos:end="5:54"><name pos:start="5:39" pos:end="5:54"><name pos:start="5:39" pos:end="5:43">avctx</name><operator pos:start="5:44" pos:end="5:45">-&gt;</operator><name pos:start="5:46" pos:end="5:54">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:61"><decl pos:start="7:5" pos:end="7:60"><type pos:start="7:5" pos:end="7:33"><name pos:start="7:5" pos:end="7:31">NV_ENCODE_API_FUNCTION_LIST</name> <modifier pos:start="7:33" pos:end="7:33">*</modifier></type><name pos:start="7:34" pos:end="7:35">nv</name> <init pos:start="7:37" pos:end="7:60">= <expr pos:start="7:39" pos:end="7:60"><operator pos:start="7:39" pos:end="7:39">&amp;</operator><name pos:start="7:40" pos:end="7:60"><name pos:start="7:40" pos:end="7:42">ctx</name><operator pos:start="7:43" pos:end="7:44">-&gt;</operator><name pos:start="7:45" pos:end="7:48">nvel</name><operator pos:start="7:49" pos:end="7:49">.</operator><name pos:start="7:50" pos:end="7:60">nvenc_funcs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:39"><expr pos:start="13:5" pos:end="13:38"><call pos:start="13:5" pos:end="13:38"><name pos:start="13:5" pos:end="13:17">av_frame_free</name><argument_list pos:start="13:18" pos:end="13:38">(<argument pos:start="13:19" pos:end="13:37"><expr pos:start="13:19" pos:end="13:37"><operator pos:start="13:19" pos:end="13:19">&amp;</operator><name pos:start="13:20" pos:end="13:37"><name pos:start="13:20" pos:end="13:24">avctx</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:37">coded_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">ctx</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:15">in</name></name></expr>)</condition> <block pos:start="17:18" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:9">

        <for pos:start="19:9" pos:end="25:9">for <control pos:start="19:13" pos:end="19:46">(<init pos:start="19:14" pos:end="19:19"><expr pos:start="19:14" pos:end="19:18"><name pos:start="19:14" pos:end="19:14">i</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>;</init> <condition pos:start="19:21" pos:end="19:41"><expr pos:start="19:21" pos:end="19:40"><name pos:start="19:21" pos:end="19:21">i</name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <name pos:start="19:25" pos:end="19:40"><name pos:start="19:25" pos:end="19:27">ctx</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:40">nb_surfaces</name></name></expr>;</condition> <incr pos:start="19:43" pos:end="19:45"><expr pos:start="19:43" pos:end="19:45"><operator pos:start="19:43" pos:end="19:44">++</operator><name pos:start="19:45" pos:end="19:45">i</name></expr></incr>)</control> <block pos:start="19:48" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:77">

            <expr_stmt pos:start="21:13" pos:end="21:71"><expr pos:start="21:13" pos:end="21:70"><call pos:start="21:13" pos:end="21:70"><name pos:start="21:13" pos:end="21:39"><name pos:start="21:13" pos:end="21:14">nv</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:39">nvEncDestroyInputBuffer</name></name><argument_list pos:start="21:40" pos:end="21:70">(<argument pos:start="21:41" pos:end="21:54"><expr pos:start="21:41" pos:end="21:54"><name pos:start="21:41" pos:end="21:54"><name pos:start="21:41" pos:end="21:43">ctx</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:54">nvenc_ctx</name></name></expr></argument>, <argument pos:start="21:57" pos:end="21:69"><expr pos:start="21:57" pos:end="21:69"><name pos:start="21:57" pos:end="21:66"><name pos:start="21:57" pos:end="21:59">ctx</name><operator pos:start="21:60" pos:end="21:61">-&gt;</operator><name pos:start="21:62" pos:end="21:63">in</name><index pos:start="21:64" pos:end="21:66">[<expr pos:start="21:65" pos:end="21:65"><name pos:start="21:65" pos:end="21:65">i</name></expr>]</index></name><operator pos:start="21:67" pos:end="21:67">.</operator><name pos:start="21:68" pos:end="21:69">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:77"><expr pos:start="23:13" pos:end="23:76"><call pos:start="23:13" pos:end="23:76"><name pos:start="23:13" pos:end="23:43"><name pos:start="23:13" pos:end="23:14">nv</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:43">nvEncDestroyBitstreamBuffer</name></name><argument_list pos:start="23:44" pos:end="23:76">(<argument pos:start="23:45" pos:end="23:58"><expr pos:start="23:45" pos:end="23:58"><name pos:start="23:45" pos:end="23:58"><name pos:start="23:45" pos:end="23:47">ctx</name><operator pos:start="23:48" pos:end="23:49">-&gt;</operator><name pos:start="23:50" pos:end="23:58">nvenc_ctx</name></name></expr></argument>, <argument pos:start="23:61" pos:end="23:75"><expr pos:start="23:61" pos:end="23:75"><name pos:start="23:61" pos:end="23:71"><name pos:start="23:61" pos:end="23:63">ctx</name><operator pos:start="23:64" pos:end="23:65">-&gt;</operator><name pos:start="23:66" pos:end="23:68">out</name><index pos:start="23:69" pos:end="23:71">[<expr pos:start="23:70" pos:end="23:70"><name pos:start="23:70" pos:end="23:70">i</name></expr>]</index></name><operator pos:start="23:72" pos:end="23:72">.</operator><name pos:start="23:73" pos:end="23:75">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><call pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:12">av_freep</name><argument_list pos:start="31:13" pos:end="31:22">(<argument pos:start="31:14" pos:end="31:21"><expr pos:start="31:14" pos:end="31:21"><operator pos:start="31:14" pos:end="31:14">&amp;</operator><name pos:start="31:15" pos:end="31:21"><name pos:start="31:15" pos:end="31:17">ctx</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:21">in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:24"><expr pos:start="33:5" pos:end="33:23"><call pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:12">av_freep</name><argument_list pos:start="33:13" pos:end="33:23">(<argument pos:start="33:14" pos:end="33:22"><expr pos:start="33:14" pos:end="33:22"><operator pos:start="33:14" pos:end="33:14">&amp;</operator><name pos:start="33:15" pos:end="33:22"><name pos:start="33:15" pos:end="33:17">ctx</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:22">out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="39:48"><if pos:start="37:5" pos:end="39:48">if <condition pos:start="37:8" pos:end="37:23">(<expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:11">ctx</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:22">nvenc_ctx</name></name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:48"><block_content pos:start="39:9" pos:end="39:48">

        <expr_stmt pos:start="39:9" pos:end="39:48"><expr pos:start="39:9" pos:end="39:47"><call pos:start="39:9" pos:end="39:47"><name pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:10">nv</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:31">nvEncDestroyEncoder</name></name><argument_list pos:start="39:32" pos:end="39:47">(<argument pos:start="39:33" pos:end="39:46"><expr pos:start="39:33" pos:end="39:46"><name pos:start="39:33" pos:end="39:46"><name pos:start="39:33" pos:end="39:35">ctx</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:46">nvenc_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="45:50"><if pos:start="43:5" pos:end="45:50">if <condition pos:start="43:8" pos:end="43:24">(<expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:11">ctx</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:23">cu_context</name></name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:50"><block_content pos:start="45:9" pos:end="45:50">

        <expr_stmt pos:start="45:9" pos:end="45:50"><expr pos:start="45:9" pos:end="45:49"><call pos:start="45:9" pos:end="45:49"><name pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:11">ctx</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:17">nvel</name><operator pos:start="45:18" pos:end="45:18">.</operator><name pos:start="45:19" pos:end="45:32">cu_ctx_destroy</name></name><argument_list pos:start="45:33" pos:end="45:49">(<argument pos:start="45:34" pos:end="45:48"><expr pos:start="45:34" pos:end="45:48"><name pos:start="45:34" pos:end="45:48"><name pos:start="45:34" pos:end="45:36">ctx</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:48">cu_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="51:33"><if pos:start="49:5" pos:end="51:33">if <condition pos:start="49:8" pos:end="49:24">(<expr pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:11">ctx</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:17">nvel</name><operator pos:start="49:18" pos:end="49:18">.</operator><name pos:start="49:19" pos:end="49:23">nvenc</name></name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:33"><block_content pos:start="51:9" pos:end="51:33">

        <expr_stmt pos:start="51:9" pos:end="51:33"><expr pos:start="51:9" pos:end="51:32"><call pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:15">dlclose</name><argument_list pos:start="51:16" pos:end="51:32">(<argument pos:start="51:17" pos:end="51:31"><expr pos:start="51:17" pos:end="51:31"><name pos:start="51:17" pos:end="51:31"><name pos:start="51:17" pos:end="51:19">ctx</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:25">nvel</name><operator pos:start="51:26" pos:end="51:26">.</operator><name pos:start="51:27" pos:end="51:31">nvenc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="57:32"><if pos:start="55:5" pos:end="57:32">if <condition pos:start="55:8" pos:end="55:23">(<expr pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:11">ctx</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:17">nvel</name><operator pos:start="55:18" pos:end="55:18">.</operator><name pos:start="55:19" pos:end="55:22">cuda</name></name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:32"><block_content pos:start="57:9" pos:end="57:32">

        <expr_stmt pos:start="57:9" pos:end="57:32"><expr pos:start="57:9" pos:end="57:31"><call pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:15">dlclose</name><argument_list pos:start="57:16" pos:end="57:31">(<argument pos:start="57:17" pos:end="57:30"><expr pos:start="57:17" pos:end="57:30"><name pos:start="57:17" pos:end="57:30"><name pos:start="57:17" pos:end="57:19">ctx</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:25">nvel</name><operator pos:start="57:26" pos:end="57:26">.</operator><name pos:start="57:27" pos:end="57:30">cuda</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
