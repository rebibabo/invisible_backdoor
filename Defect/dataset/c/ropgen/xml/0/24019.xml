<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24019.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mkv_write_packet</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">AVPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="135:1">{<block_content pos:start="5:5" pos:end="133:15">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">MatroskaMuxContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:27">mkv</name> <init pos:start="5:29" pos:end="5:42">= <expr pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:31">s</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:79"><decl pos:start="7:5" pos:end="7:78"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">codec_type</name>          <init pos:start="7:29" pos:end="7:78">= <expr pos:start="7:31" pos:end="7:78"><name pos:start="7:31" pos:end="7:59"><name pos:start="7:31" pos:end="7:31">s</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:40">streams</name><index pos:start="7:41" pos:end="7:59">[<expr pos:start="7:42" pos:end="7:58"><name pos:start="7:42" pos:end="7:58"><name pos:start="7:42" pos:end="7:44">pkt</name><operator pos:start="7:45" pos:end="7:46">-&gt;</operator><name pos:start="7:47" pos:end="7:58">stream_index</name></name></expr>]</index></name><operator pos:start="7:60" pos:end="7:61">-&gt;</operator><name pos:start="7:62" pos:end="7:78"><name pos:start="7:62" pos:end="7:66">codec</name><operator pos:start="7:67" pos:end="7:68">-&gt;</operator><name pos:start="7:69" pos:end="7:78">codec_type</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:63"><decl pos:start="9:5" pos:end="9:62"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">keyframe</name>            <init pos:start="9:29" pos:end="9:62">= <expr pos:start="9:31" pos:end="9:62"><operator pos:start="9:31" pos:end="9:31">!</operator><operator pos:start="9:32" pos:end="9:32">!</operator><operator pos:start="9:33" pos:end="9:33">(</operator><name pos:start="9:34" pos:end="9:43"><name pos:start="9:34" pos:end="9:36">pkt</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:43">flags</name></name> <operator pos:start="9:45" pos:end="9:45">&amp;</operator> <name pos:start="9:47" pos:end="9:61">AV_PKT_FLAG_KEY</name><operator pos:start="9:62" pos:end="9:62">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:20">cluster_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:26">cluster_size_limit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:24">cluster_time</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:30"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:30">cluster_time_limit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:15">AVIOContext</name> <modifier pos:start="19:17" pos:end="19:17">*</modifier></type><name pos:start="19:18" pos:end="19:19">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:12"><decl pos:start="21:5" pos:end="21:11"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="31:51"><if pos:start="25:5" pos:end="27:51">if <condition pos:start="25:8" pos:end="25:49">(<expr pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:11">mkv</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:19">tracks</name><index pos:start="25:20" pos:end="25:38">[<expr pos:start="25:21" pos:end="25:37"><name pos:start="25:21" pos:end="25:37"><name pos:start="25:21" pos:end="25:23">pkt</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:37">stream_index</name></name></expr>]</index></name><operator pos:start="25:39" pos:end="25:39">.</operator><name pos:start="25:40" pos:end="25:48">write_dts</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:51"><block_content pos:start="27:9" pos:end="27:51">

        <expr_stmt pos:start="27:9" pos:end="27:51"><expr pos:start="27:9" pos:end="27:50"><name pos:start="27:9" pos:end="27:20">cluster_time</name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:31"><name pos:start="27:24" pos:end="27:26">pkt</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:31">dts</name></name> <operator pos:start="27:33" pos:end="27:33">-</operator> <name pos:start="27:35" pos:end="27:50"><name pos:start="27:35" pos:end="27:37">mkv</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:50">cluster_pts</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="29:5" pos:end="31:51">else<block type="pseudo" pos:start="31:9" pos:end="31:51"><block_content pos:start="31:9" pos:end="31:51">

        <expr_stmt pos:start="31:9" pos:end="31:51"><expr pos:start="31:9" pos:end="31:50"><name pos:start="31:9" pos:end="31:20">cluster_time</name> <operator pos:start="31:22" pos:end="31:22">=</operator> <name pos:start="31:24" pos:end="31:31"><name pos:start="31:24" pos:end="31:26">pkt</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:31">pts</name></name> <operator pos:start="31:33" pos:end="31:33">-</operator> <name pos:start="31:35" pos:end="31:50"><name pos:start="31:35" pos:end="31:37">mkv</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:50">cluster_pts</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="line" pos:start="35:5" pos:end="35:79">// start a new cluster every 5 MB or 5 sec, or 32k / 1 sec for streaming or</comment>

    <comment type="line" pos:start="37:5" pos:end="37:33">// after 4k and on a keyframe</comment>

    <if_stmt pos:start="39:5" pos:end="59:5"><if pos:start="39:5" pos:end="49:5">if <condition pos:start="39:8" pos:end="39:24">(<expr pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:13">pb</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:23">seekable</name></name></expr>)</condition> <block pos:start="39:26" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:45">

        <expr_stmt pos:start="41:9" pos:end="41:19"><expr pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:10">pb</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <name pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">s</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:18">pb</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:56"><expr pos:start="43:9" pos:end="43:55"><name pos:start="43:9" pos:end="43:20">cluster_size</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <call pos:start="43:24" pos:end="43:36"><name pos:start="43:24" pos:end="43:32">avio_tell</name><argument_list pos:start="43:33" pos:end="43:36">(<argument pos:start="43:34" pos:end="43:35"><expr pos:start="43:34" pos:end="43:35"><name pos:start="43:34" pos:end="43:35">pb</name></expr></argument>)</argument_list></call> <operator pos:start="43:38" pos:end="43:38">-</operator> <name pos:start="43:40" pos:end="43:55"><name pos:start="43:40" pos:end="43:42">mkv</name><operator pos:start="43:43" pos:end="43:44">-&gt;</operator><name pos:start="43:45" pos:end="43:55">cluster_pos</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:34"><expr pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:26">cluster_time_limit</name> <operator pos:start="45:28" pos:end="45:28">=</operator> <literal type="number" pos:start="45:30" pos:end="45:33">5000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:45"><expr pos:start="47:9" pos:end="47:44"><name pos:start="47:9" pos:end="47:26">cluster_size_limit</name> <operator pos:start="47:28" pos:end="47:28">=</operator> <literal type="number" pos:start="47:30" pos:end="47:30">5</literal> <operator pos:start="47:32" pos:end="47:32">*</operator> <literal type="number" pos:start="47:34" pos:end="47:37">1024</literal> <operator pos:start="47:39" pos:end="47:39">*</operator> <literal type="number" pos:start="47:41" pos:end="47:44">1024</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="59:5">else <block pos:start="49:12" pos:end="59:5">{<block_content pos:start="51:9" pos:end="57:39">

        <expr_stmt pos:start="51:9" pos:end="51:25"><expr pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:10">pb</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <name pos:start="51:14" pos:end="51:24"><name pos:start="51:14" pos:end="51:16">mkv</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:24">dyn_bc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:37"><expr pos:start="53:9" pos:end="53:36"><name pos:start="53:9" pos:end="53:20">cluster_size</name> <operator pos:start="53:22" pos:end="53:22">=</operator> <call pos:start="53:24" pos:end="53:36"><name pos:start="53:24" pos:end="53:32">avio_tell</name><argument_list pos:start="53:33" pos:end="53:36">(<argument pos:start="53:34" pos:end="53:35"><expr pos:start="53:34" pos:end="53:35"><name pos:start="53:34" pos:end="53:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:34"><expr pos:start="55:9" pos:end="55:33"><name pos:start="55:9" pos:end="55:26">cluster_time_limit</name> <operator pos:start="55:28" pos:end="55:28">=</operator> <literal type="number" pos:start="55:30" pos:end="55:33">1000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:39"><expr pos:start="57:9" pos:end="57:38"><name pos:start="57:9" pos:end="57:26">cluster_size_limit</name> <operator pos:start="57:28" pos:end="57:28">=</operator> <literal type="number" pos:start="57:30" pos:end="57:31">32</literal> <operator pos:start="57:33" pos:end="57:33">*</operator> <literal type="number" pos:start="57:35" pos:end="57:38">1024</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="63:5" pos:end="87:5"><if pos:start="63:5" pos:end="87:5">if <condition pos:start="63:8" pos:end="71:36">(<expr pos:start="63:9" pos:end="71:35"><name pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:11">mkv</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:24">cluster_pos</name></name> <operator pos:start="63:26" pos:end="63:27">&amp;&amp;</operator>

        <operator pos:start="65:9" pos:end="65:9">(</operator><name pos:start="65:10" pos:end="65:21">cluster_size</name> <operator pos:start="65:23" pos:end="65:23">&gt;</operator> <name pos:start="65:25" pos:end="65:42">cluster_size_limit</name> <operator pos:start="65:44" pos:end="65:45">||</operator>

         <name pos:start="67:10" pos:end="67:21">cluster_time</name> <operator pos:start="67:23" pos:end="67:23">&gt;</operator> <name pos:start="67:25" pos:end="67:42">cluster_time_limit</name> <operator pos:start="67:44" pos:end="67:45">||</operator>

         <operator pos:start="69:10" pos:end="69:10">(</operator><name pos:start="69:11" pos:end="69:20">codec_type</name> <operator pos:start="69:22" pos:end="69:23">==</operator> <name pos:start="69:25" pos:end="69:42">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="69:44" pos:end="69:45">&amp;&amp;</operator> <name pos:start="69:47" pos:end="69:54">keyframe</name> <operator pos:start="69:56" pos:end="69:57">&amp;&amp;</operator>

          <name pos:start="71:11" pos:end="71:22">cluster_size</name> <operator pos:start="71:24" pos:end="71:24">&gt;</operator> <literal type="number" pos:start="71:26" pos:end="71:26">4</literal> <operator pos:start="71:28" pos:end="71:28">*</operator> <literal type="number" pos:start="71:30" pos:end="71:33">1024</literal><operator pos:start="71:34" pos:end="71:34">)</operator><operator pos:start="71:35" pos:end="71:35">)</operator></expr>)</condition> <block pos:start="71:38" pos:end="87:5">{<block_content pos:start="73:9" pos:end="85:32">

        <expr_stmt pos:start="73:9" pos:end="77:50"><expr pos:start="73:9" pos:end="77:49"><call pos:start="73:9" pos:end="77:49"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="77:49">(<argument pos:start="73:16" pos:end="73:16"><expr pos:start="73:16" pos:end="73:16"><name pos:start="73:16" pos:end="73:16">s</name></expr></argument>, <argument pos:start="73:19" pos:end="73:30"><expr pos:start="73:19" pos:end="73:30"><name pos:start="73:19" pos:end="73:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="73:33" pos:end="75:57"><expr pos:start="73:33" pos:end="75:57"><literal type="string" pos:start="73:33" pos:end="73:66">"Starting new cluster at offset %"</literal> <name pos:start="73:68" pos:end="73:73">PRIu64</name>

               <literal type="string" pos:start="75:16" pos:end="75:30">" bytes, pts %"</literal> <name pos:start="75:32" pos:end="75:37">PRIu64</name> <literal type="string" pos:start="75:39" pos:end="75:45">"dts %"</literal> <name pos:start="75:47" pos:end="75:52">PRIu64</name> <literal type="string" pos:start="75:54" pos:end="75:57">"\n"</literal></expr></argument>,

               <argument pos:start="77:16" pos:end="77:28"><expr pos:start="77:16" pos:end="77:28"><call pos:start="77:16" pos:end="77:28"><name pos:start="77:16" pos:end="77:24">avio_tell</name><argument_list pos:start="77:25" pos:end="77:28">(<argument pos:start="77:26" pos:end="77:27"><expr pos:start="77:26" pos:end="77:27"><name pos:start="77:26" pos:end="77:27">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="77:31" pos:end="77:38"><expr pos:start="77:31" pos:end="77:38"><name pos:start="77:31" pos:end="77:38"><name pos:start="77:31" pos:end="77:33">pkt</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:38">pts</name></name></expr></argument>, <argument pos:start="77:41" pos:end="77:48"><expr pos:start="77:41" pos:end="77:48"><name pos:start="77:41" pos:end="77:48"><name pos:start="77:41" pos:end="77:43">pkt</name><operator pos:start="77:44" pos:end="77:45">-&gt;</operator><name pos:start="77:46" pos:end="77:48">dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:42"><expr pos:start="79:9" pos:end="79:41"><call pos:start="79:9" pos:end="79:41"><name pos:start="79:9" pos:end="79:23">end_ebml_master</name><argument_list pos:start="79:24" pos:end="79:41">(<argument pos:start="79:25" pos:end="79:26"><expr pos:start="79:25" pos:end="79:26"><name pos:start="79:25" pos:end="79:26">pb</name></expr></argument>, <argument pos:start="79:29" pos:end="79:40"><expr pos:start="79:29" pos:end="79:40"><name pos:start="79:29" pos:end="79:40"><name pos:start="79:29" pos:end="79:31">mkv</name><operator pos:start="79:32" pos:end="79:33">-&gt;</operator><name pos:start="79:34" pos:end="79:40">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:29"><expr pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:24"><name pos:start="81:9" pos:end="81:11">mkv</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:24">cluster_pos</name></name> <operator pos:start="81:26" pos:end="81:26">=</operator> <literal type="number" pos:start="81:28" pos:end="81:28">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="85:32"><if pos:start="83:9" pos:end="85:32">if <condition pos:start="83:12" pos:end="83:24">(<expr pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:15">mkv</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:23">dyn_bc</name></name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:32"><block_content pos:start="85:13" pos:end="85:32">

            <expr_stmt pos:start="85:13" pos:end="85:32"><expr pos:start="85:13" pos:end="85:31"><call pos:start="85:13" pos:end="85:31"><name pos:start="85:13" pos:end="85:28">mkv_flush_dynbuf</name><argument_list pos:start="85:29" pos:end="85:31">(<argument pos:start="85:30" pos:end="85:30"><expr pos:start="85:30" pos:end="85:30"><name pos:start="85:30" pos:end="85:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="91:5" pos:end="91:46">// check if we have an audio packet cached</comment>

    <if_stmt pos:start="93:5" pos:end="107:5"><if pos:start="93:5" pos:end="107:5">if <condition pos:start="93:8" pos:end="93:36">(<expr pos:start="93:9" pos:end="93:35"><name pos:start="93:9" pos:end="93:31"><name pos:start="93:9" pos:end="93:11">mkv</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:26">cur_audio_pkt</name><operator pos:start="93:27" pos:end="93:27">.</operator><name pos:start="93:28" pos:end="93:31">size</name></name> <operator pos:start="93:33" pos:end="93:33">&gt;</operator> <literal type="number" pos:start="93:35" pos:end="93:35">0</literal></expr>)</condition> <block pos:start="93:38" pos:end="107:5">{<block_content pos:start="95:9" pos:end="105:9">

        <expr_stmt pos:start="95:9" pos:end="95:64"><expr pos:start="95:9" pos:end="95:63"><name pos:start="95:9" pos:end="95:11">ret</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <call pos:start="95:15" pos:end="95:63"><name pos:start="95:15" pos:end="95:39">mkv_write_packet_internal</name><argument_list pos:start="95:40" pos:end="95:63">(<argument pos:start="95:41" pos:end="95:41"><expr pos:start="95:41" pos:end="95:41"><name pos:start="95:41" pos:end="95:41">s</name></expr></argument>, <argument pos:start="95:44" pos:end="95:62"><expr pos:start="95:44" pos:end="95:62"><operator pos:start="95:44" pos:end="95:44">&amp;</operator><name pos:start="95:45" pos:end="95:62"><name pos:start="95:45" pos:end="95:47">mkv</name><operator pos:start="95:48" pos:end="95:49">-&gt;</operator><name pos:start="95:50" pos:end="95:62">cur_audio_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:44"><expr pos:start="97:9" pos:end="97:43"><call pos:start="97:9" pos:end="97:43"><name pos:start="97:9" pos:end="97:22">av_free_packet</name><argument_list pos:start="97:23" pos:end="97:43">(<argument pos:start="97:24" pos:end="97:42"><expr pos:start="97:24" pos:end="97:42"><operator pos:start="97:24" pos:end="97:24">&amp;</operator><name pos:start="97:25" pos:end="97:42"><name pos:start="97:25" pos:end="97:27">mkv</name><operator pos:start="97:28" pos:end="97:29">-&gt;</operator><name pos:start="97:30" pos:end="97:42">cur_audio_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if <condition pos:start="99:12" pos:end="99:20">(<expr pos:start="99:13" pos:end="99:19"><name pos:start="99:13" pos:end="99:15">ret</name> <operator pos:start="99:17" pos:end="99:17">&lt;</operator> <literal type="number" pos:start="99:19" pos:end="99:19">0</literal></expr>)</condition> <block pos:start="99:22" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:23">

            <expr_stmt pos:start="101:13" pos:end="101:89"><expr pos:start="101:13" pos:end="101:88"><call pos:start="101:13" pos:end="101:88"><name pos:start="101:13" pos:end="101:18">av_log</name><argument_list pos:start="101:19" pos:end="101:88">(<argument pos:start="101:20" pos:end="101:20"><expr pos:start="101:20" pos:end="101:20"><name pos:start="101:20" pos:end="101:20">s</name></expr></argument>, <argument pos:start="101:23" pos:end="101:34"><expr pos:start="101:23" pos:end="101:34"><name pos:start="101:23" pos:end="101:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:37" pos:end="101:82"><expr pos:start="101:37" pos:end="101:82"><literal type="string" pos:start="101:37" pos:end="101:82">"Could not write cached audio packet ret:%d\n"</literal></expr></argument>, <argument pos:start="101:85" pos:end="101:87"><expr pos:start="101:85" pos:end="101:87"><name pos:start="101:85" pos:end="101:87">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="103:13" pos:end="103:23">return <expr pos:start="103:20" pos:end="103:22"><name pos:start="103:20" pos:end="103:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="111:5" pos:end="111:71">// buffer an audio packet to ensure the packet containing the video</comment>

    <comment type="line" pos:start="113:5" pos:end="113:68">// keyframe's timecode is contained in the same cluster for WebM</comment>

    <if_stmt pos:start="115:5" pos:end="131:48"><if pos:start="115:5" pos:end="129:5">if <condition pos:start="115:8" pos:end="115:41">(<expr pos:start="115:9" pos:end="115:40"><name pos:start="115:9" pos:end="115:18">codec_type</name> <operator pos:start="115:20" pos:end="115:21">==</operator> <name pos:start="115:23" pos:end="115:40">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="115:43" pos:end="129:5">{<block_content pos:start="117:9" pos:end="127:53">

        <expr_stmt pos:start="117:9" pos:end="117:34"><expr pos:start="117:9" pos:end="117:33"><name pos:start="117:9" pos:end="117:26"><name pos:start="117:9" pos:end="117:11">mkv</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:26">cur_audio_pkt</name></name> <operator pos:start="117:28" pos:end="117:28">=</operator> <operator pos:start="117:30" pos:end="117:30">*</operator><name pos:start="117:31" pos:end="117:33">pkt</name></expr>;</expr_stmt>

        <if_stmt pos:start="119:9" pos:end="127:53"><if pos:start="119:9" pos:end="125:9">if <condition pos:start="119:12" pos:end="119:21">(<expr pos:start="119:13" pos:end="119:20"><name pos:start="119:13" pos:end="119:20"><name pos:start="119:13" pos:end="119:15">pkt</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:20">buf</name></name></expr>)</condition> <block pos:start="119:23" pos:end="125:9">{<block_content pos:start="121:13" pos:end="123:63">

            <expr_stmt pos:start="121:13" pos:end="121:61"><expr pos:start="121:13" pos:end="121:60"><name pos:start="121:13" pos:end="121:34"><name pos:start="121:13" pos:end="121:15">mkv</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:30">cur_audio_pkt</name><operator pos:start="121:31" pos:end="121:31">.</operator><name pos:start="121:32" pos:end="121:34">buf</name></name> <operator pos:start="121:36" pos:end="121:36">=</operator> <call pos:start="121:38" pos:end="121:60"><name pos:start="121:38" pos:end="121:50">av_buffer_ref</name><argument_list pos:start="121:51" pos:end="121:60">(<argument pos:start="121:52" pos:end="121:59"><expr pos:start="121:52" pos:end="121:59"><name pos:start="121:52" pos:end="121:59"><name pos:start="121:52" pos:end="121:54">pkt</name><operator pos:start="121:55" pos:end="121:56">-&gt;</operator><name pos:start="121:57" pos:end="121:59">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:63"><expr pos:start="123:13" pos:end="123:62"><name pos:start="123:13" pos:end="123:15">ret</name> <operator pos:start="123:17" pos:end="123:17">=</operator> <ternary pos:start="123:19" pos:end="123:62"><condition pos:start="123:19" pos:end="123:42"><expr pos:start="123:19" pos:end="123:40"><name pos:start="123:19" pos:end="123:40"><name pos:start="123:19" pos:end="123:21">mkv</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:36">cur_audio_pkt</name><operator pos:start="123:37" pos:end="123:37">.</operator><name pos:start="123:38" pos:end="123:40">buf</name></name></expr> ?</condition><then pos:start="123:44" pos:end="123:44"> <expr pos:start="123:44" pos:end="123:44"><literal type="number" pos:start="123:44" pos:end="123:44">0</literal></expr> </then><else pos:start="123:46" pos:end="123:62">: <expr pos:start="123:48" pos:end="123:62"><call pos:start="123:48" pos:end="123:62"><name pos:start="123:48" pos:end="123:54">AVERROR</name><argument_list pos:start="123:55" pos:end="123:62">(<argument pos:start="123:56" pos:end="123:61"><expr pos:start="123:56" pos:end="123:61"><name pos:start="123:56" pos:end="123:61">ENOMEM</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="125:11" pos:end="127:53">else<block type="pseudo" pos:start="127:13" pos:end="127:53"><block_content pos:start="127:13" pos:end="127:53">

            <expr_stmt pos:start="127:13" pos:end="127:53"><expr pos:start="127:13" pos:end="127:52"><name pos:start="127:13" pos:end="127:15">ret</name> <operator pos:start="127:17" pos:end="127:17">=</operator> <call pos:start="127:19" pos:end="127:52"><name pos:start="127:19" pos:end="127:31">av_dup_packet</name><argument_list pos:start="127:32" pos:end="127:52">(<argument pos:start="127:33" pos:end="127:51"><expr pos:start="127:33" pos:end="127:51"><operator pos:start="127:33" pos:end="127:33">&amp;</operator><name pos:start="127:34" pos:end="127:51"><name pos:start="127:34" pos:end="127:36">mkv</name><operator pos:start="127:37" pos:end="127:38">-&gt;</operator><name pos:start="127:39" pos:end="127:51">cur_audio_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="129:7" pos:end="131:48">else<block type="pseudo" pos:start="131:9" pos:end="131:48"><block_content pos:start="131:9" pos:end="131:48">

        <expr_stmt pos:start="131:9" pos:end="131:48"><expr pos:start="131:9" pos:end="131:47"><name pos:start="131:9" pos:end="131:11">ret</name> <operator pos:start="131:13" pos:end="131:13">=</operator> <call pos:start="131:15" pos:end="131:47"><name pos:start="131:15" pos:end="131:39">mkv_write_packet_internal</name><argument_list pos:start="131:40" pos:end="131:47">(<argument pos:start="131:41" pos:end="131:41"><expr pos:start="131:41" pos:end="131:41"><name pos:start="131:41" pos:end="131:41">s</name></expr></argument>, <argument pos:start="131:44" pos:end="131:46"><expr pos:start="131:44" pos:end="131:46"><name pos:start="131:44" pos:end="131:46">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <return pos:start="133:5" pos:end="133:15">return <expr pos:start="133:12" pos:end="133:14"><name pos:start="133:12" pos:end="133:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
