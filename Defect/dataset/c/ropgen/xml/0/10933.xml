<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10933.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:10">SCSIDevice</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:37">scsi_bus_legacy_add_drive</name><parameter_list pos:start="1:38" pos:end="5:71">(<parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:45">SCSIBus</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">bus</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:74"><decl pos:start="1:53" pos:end="1:74"><type pos:start="1:53" pos:end="1:74"><name pos:start="1:53" pos:end="1:68">BlockDriverState</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:74">bdrv</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:46"><decl pos:start="3:39" pos:end="3:46"><type pos:start="3:39" pos:end="3:46"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:46">unit</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:62"><decl pos:start="3:49" pos:end="3:62"><type pos:start="3:49" pos:end="3:62"><name pos:start="3:49" pos:end="3:52">bool</name></type> <name pos:start="3:54" pos:end="3:62">removable</name></decl></parameter>, <parameter pos:start="3:65" pos:end="3:77"><decl pos:start="3:65" pos:end="3:77"><type pos:start="3:65" pos:end="3:77"><name pos:start="3:65" pos:end="3:67">int</name></type> <name pos:start="3:69" pos:end="3:77">bootindex</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:56"><decl pos:start="5:39" pos:end="5:56"><type pos:start="5:39" pos:end="5:56"><specifier pos:start="5:39" pos:end="5:43">const</specifier> <name pos:start="5:45" pos:end="5:48">char</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:56">serial</name></decl></parameter>, <parameter pos:start="5:59" pos:end="5:70"><decl pos:start="5:59" pos:end="5:70"><type pos:start="5:59" pos:end="5:70"><name pos:start="5:59" pos:end="5:63">Error</name> <modifier pos:start="5:65" pos:end="5:65">*</modifier><modifier pos:start="5:66" pos:end="5:66">*</modifier></type><name pos:start="5:67" pos:end="5:70">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="67:1">{<block_content pos:start="9:5" pos:end="65:28">

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:22">driver</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">DeviceState</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:14">err</name> <init pos:start="13:16" pos:end="13:21">= <expr pos:start="13:18" pos:end="13:21"><name pos:start="13:18" pos:end="13:21">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:61"><expr pos:start="17:5" pos:end="17:60"><name pos:start="17:5" pos:end="17:10">driver</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <ternary pos:start="17:14" pos:end="17:60"><condition pos:start="17:14" pos:end="17:31"><expr pos:start="17:14" pos:end="17:29"><call pos:start="17:14" pos:end="17:29"><name pos:start="17:14" pos:end="17:23">bdrv_is_sg</name><argument_list pos:start="17:24" pos:end="17:29">(<argument pos:start="17:25" pos:end="17:28"><expr pos:start="17:25" pos:end="17:28"><name pos:start="17:25" pos:end="17:28">bdrv</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="17:33" pos:end="17:46"> <expr pos:start="17:33" pos:end="17:46"><literal type="string" pos:start="17:33" pos:end="17:46">"scsi-generic"</literal></expr> </then><else pos:start="17:48" pos:end="17:60">: <expr pos:start="17:50" pos:end="17:60"><literal type="string" pos:start="17:50" pos:end="17:60">"scsi-disk"</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:42"><expr pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:7">dev</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:41"><name pos:start="19:11" pos:end="19:21">qdev_create</name><argument_list pos:start="19:22" pos:end="19:41">(<argument pos:start="19:23" pos:end="19:32"><expr pos:start="19:23" pos:end="19:32"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:32"><name pos:start="19:24" pos:end="19:26">bus</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:32">qbus</name></name></expr></argument>, <argument pos:start="19:35" pos:end="19:40"><expr pos:start="19:35" pos:end="19:40"><name pos:start="19:35" pos:end="19:40">driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:47"><expr pos:start="21:5" pos:end="21:46"><call pos:start="21:5" pos:end="21:46"><name pos:start="21:5" pos:end="21:24">qdev_prop_set_uint32</name><argument_list pos:start="21:25" pos:end="21:46">(<argument pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><name pos:start="21:26" pos:end="21:28">dev</name></expr></argument>, <argument pos:start="21:31" pos:end="21:39"><expr pos:start="21:31" pos:end="21:39"><literal type="string" pos:start="21:31" pos:end="21:39">"scsi-id"</literal></expr></argument>, <argument pos:start="21:42" pos:end="21:45"><expr pos:start="21:42" pos:end="21:45"><name pos:start="21:42" pos:end="21:45">unit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:23">(<expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:17">bootindex</name> <operator pos:start="23:19" pos:end="23:20">&gt;=</operator> <literal type="number" pos:start="23:22" pos:end="23:22">0</literal></expr>)</condition> <block pos:start="23:25" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:46">

        <expr_stmt pos:start="25:9" pos:end="27:46"><expr pos:start="25:9" pos:end="27:45"><call pos:start="25:9" pos:end="27:45"><name pos:start="25:9" pos:end="25:31">object_property_set_int</name><argument_list pos:start="25:32" pos:end="27:45">(<argument pos:start="25:33" pos:end="25:43"><expr pos:start="25:33" pos:end="25:43"><call pos:start="25:33" pos:end="25:43"><name pos:start="25:33" pos:end="25:38">OBJECT</name><argument_list pos:start="25:39" pos:end="25:43">(<argument pos:start="25:40" pos:end="25:42"><expr pos:start="25:40" pos:end="25:42"><name pos:start="25:40" pos:end="25:42">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:46" pos:end="25:54"><expr pos:start="25:46" pos:end="25:54"><name pos:start="25:46" pos:end="25:54">bootindex</name></expr></argument>, <argument pos:start="25:57" pos:end="25:67"><expr pos:start="25:57" pos:end="25:67"><literal type="string" pos:start="25:57" pos:end="25:67">"bootindex"</literal></expr></argument>,

                                <argument pos:start="27:33" pos:end="27:44"><expr pos:start="27:33" pos:end="27:44"><operator pos:start="27:33" pos:end="27:33">&amp;</operator><name pos:start="27:34" pos:end="27:44">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:61">(<expr pos:start="31:9" pos:end="31:60"><call pos:start="31:9" pos:end="31:60"><name pos:start="31:9" pos:end="31:28">object_property_find</name><argument_list pos:start="31:29" pos:end="31:60">(<argument pos:start="31:30" pos:end="31:40"><expr pos:start="31:30" pos:end="31:40"><call pos:start="31:30" pos:end="31:40"><name pos:start="31:30" pos:end="31:35">OBJECT</name><argument_list pos:start="31:36" pos:end="31:40">(<argument pos:start="31:37" pos:end="31:39"><expr pos:start="31:37" pos:end="31:39"><name pos:start="31:37" pos:end="31:39">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:43" pos:end="31:53"><expr pos:start="31:43" pos:end="31:53"><literal type="string" pos:start="31:43" pos:end="31:53">"removable"</literal></expr></argument>, <argument pos:start="31:56" pos:end="31:59"><expr pos:start="31:56" pos:end="31:59"><name pos:start="31:56" pos:end="31:59">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:63" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:55">

        <expr_stmt pos:start="33:9" pos:end="33:55"><expr pos:start="33:9" pos:end="33:54"><call pos:start="33:9" pos:end="33:54"><name pos:start="33:9" pos:end="33:25">qdev_prop_set_bit</name><argument_list pos:start="33:26" pos:end="33:54">(<argument pos:start="33:27" pos:end="33:29"><expr pos:start="33:27" pos:end="33:29"><name pos:start="33:27" pos:end="33:29">dev</name></expr></argument>, <argument pos:start="33:32" pos:end="33:42"><expr pos:start="33:32" pos:end="33:42"><literal type="string" pos:start="33:32" pos:end="33:42">"removable"</literal></expr></argument>, <argument pos:start="33:45" pos:end="33:53"><expr pos:start="33:45" pos:end="33:53"><name pos:start="33:45" pos:end="33:53">removable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:68">(<expr pos:start="37:9" pos:end="37:67"><name pos:start="37:9" pos:end="37:14">serial</name> <operator pos:start="37:16" pos:end="37:17">&amp;&amp;</operator> <call pos:start="37:19" pos:end="37:67"><name pos:start="37:19" pos:end="37:38">object_property_find</name><argument_list pos:start="37:39" pos:end="37:67">(<argument pos:start="37:40" pos:end="37:50"><expr pos:start="37:40" pos:end="37:50"><call pos:start="37:40" pos:end="37:50"><name pos:start="37:40" pos:end="37:45">OBJECT</name><argument_list pos:start="37:46" pos:end="37:50">(<argument pos:start="37:47" pos:end="37:49"><expr pos:start="37:47" pos:end="37:49"><name pos:start="37:47" pos:end="37:49">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:53" pos:end="37:60"><expr pos:start="37:53" pos:end="37:60"><literal type="string" pos:start="37:53" pos:end="37:60">"serial"</literal></expr></argument>, <argument pos:start="37:63" pos:end="37:66"><expr pos:start="37:63" pos:end="37:66"><name pos:start="37:63" pos:end="37:66">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:70" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:52">

        <expr_stmt pos:start="39:9" pos:end="39:52"><expr pos:start="39:9" pos:end="39:51"><call pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:28">qdev_prop_set_string</name><argument_list pos:start="39:29" pos:end="39:51">(<argument pos:start="39:30" pos:end="39:32"><expr pos:start="39:30" pos:end="39:32"><name pos:start="39:30" pos:end="39:32">dev</name></expr></argument>, <argument pos:start="39:35" pos:end="39:42"><expr pos:start="39:35" pos:end="39:42"><literal type="string" pos:start="39:35" pos:end="39:42">"serial"</literal></expr></argument>, <argument pos:start="39:45" pos:end="39:50"><expr pos:start="39:45" pos:end="39:50"><name pos:start="39:45" pos:end="39:50">serial</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:52">(<expr pos:start="43:9" pos:end="43:51"><call pos:start="43:9" pos:end="43:47"><name pos:start="43:9" pos:end="43:27">qdev_prop_set_drive</name><argument_list pos:start="43:28" pos:end="43:47">(<argument pos:start="43:29" pos:end="43:31"><expr pos:start="43:29" pos:end="43:31"><name pos:start="43:29" pos:end="43:31">dev</name></expr></argument>, <argument pos:start="43:34" pos:end="43:40"><expr pos:start="43:34" pos:end="43:40"><literal type="string" pos:start="43:34" pos:end="43:40">"drive"</literal></expr></argument>, <argument pos:start="43:43" pos:end="43:46"><expr pos:start="43:43" pos:end="43:46"><name pos:start="43:43" pos:end="43:46">bdrv</name></expr></argument>)</argument_list></call> <operator pos:start="43:49" pos:end="43:49">&lt;</operator> <literal type="number" pos:start="43:51" pos:end="43:51">0</literal></expr>)</condition> <block pos:start="43:54" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:20">

        <expr_stmt pos:start="45:9" pos:end="45:58"><expr pos:start="45:9" pos:end="45:57"><call pos:start="45:9" pos:end="45:57"><name pos:start="45:9" pos:end="45:18">error_setg</name><argument_list pos:start="45:19" pos:end="45:57">(<argument pos:start="45:20" pos:end="45:23"><expr pos:start="45:20" pos:end="45:23"><name pos:start="45:20" pos:end="45:23">errp</name></expr></argument>, <argument pos:start="45:26" pos:end="45:56"><expr pos:start="45:26" pos:end="45:56"><literal type="string" pos:start="45:26" pos:end="45:56">"Setting drive property failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:37"><expr pos:start="47:9" pos:end="47:36"><call pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:23">object_unparent</name><argument_list pos:start="47:24" pos:end="47:36">(<argument pos:start="47:25" pos:end="47:35"><expr pos:start="47:25" pos:end="47:35"><call pos:start="47:25" pos:end="47:35"><name pos:start="47:25" pos:end="47:30">OBJECT</name><argument_list pos:start="47:31" pos:end="47:35">(<argument pos:start="47:32" pos:end="47:34"><expr pos:start="47:32" pos:end="47:34"><name pos:start="47:32" pos:end="47:34">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:20">return <expr pos:start="49:16" pos:end="49:19"><name pos:start="49:16" pos:end="49:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:66"><expr pos:start="53:5" pos:end="53:65"><call pos:start="53:5" pos:end="53:65"><name pos:start="53:5" pos:end="53:28">object_property_set_bool</name><argument_list pos:start="53:29" pos:end="53:65">(<argument pos:start="53:30" pos:end="53:40"><expr pos:start="53:30" pos:end="53:40"><call pos:start="53:30" pos:end="53:40"><name pos:start="53:30" pos:end="53:35">OBJECT</name><argument_list pos:start="53:36" pos:end="53:40">(<argument pos:start="53:37" pos:end="53:39"><expr pos:start="53:37" pos:end="53:39"><name pos:start="53:37" pos:end="53:39">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="53:43" pos:end="53:46"><expr pos:start="53:43" pos:end="53:46"><name pos:start="53:43" pos:end="53:46">true</name></expr></argument>, <argument pos:start="53:49" pos:end="53:58"><expr pos:start="53:49" pos:end="53:58"><literal type="string" pos:start="53:49" pos:end="53:58">"realized"</literal></expr></argument>, <argument pos:start="53:61" pos:end="53:64"><expr pos:start="53:61" pos:end="53:64"><operator pos:start="53:61" pos:end="53:61">&amp;</operator><name pos:start="53:62" pos:end="53:64">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="63:5">if <condition pos:start="55:8" pos:end="55:20">(<expr pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:11">err</name> <operator pos:start="55:13" pos:end="55:14">!=</operator> <name pos:start="55:16" pos:end="55:19">NULL</name></expr>)</condition> <block pos:start="55:22" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:20">

        <expr_stmt pos:start="57:9" pos:end="57:35"><expr pos:start="57:9" pos:end="57:34"><call pos:start="57:9" pos:end="57:34"><name pos:start="57:9" pos:end="57:23">error_propagate</name><argument_list pos:start="57:24" pos:end="57:34">(<argument pos:start="57:25" pos:end="57:28"><expr pos:start="57:25" pos:end="57:28"><name pos:start="57:25" pos:end="57:28">errp</name></expr></argument>, <argument pos:start="57:31" pos:end="57:33"><expr pos:start="57:31" pos:end="57:33"><name pos:start="57:31" pos:end="57:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:37"><expr pos:start="59:9" pos:end="59:36"><call pos:start="59:9" pos:end="59:36"><name pos:start="59:9" pos:end="59:23">object_unparent</name><argument_list pos:start="59:24" pos:end="59:36">(<argument pos:start="59:25" pos:end="59:35"><expr pos:start="59:25" pos:end="59:35"><call pos:start="59:25" pos:end="59:35"><name pos:start="59:25" pos:end="59:30">OBJECT</name><argument_list pos:start="59:31" pos:end="59:35">(<argument pos:start="59:32" pos:end="59:34"><expr pos:start="59:32" pos:end="59:34"><name pos:start="59:32" pos:end="59:34">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:20">return <expr pos:start="61:16" pos:end="61:19"><name pos:start="61:16" pos:end="61:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="65:5" pos:end="65:28">return <expr pos:start="65:12" pos:end="65:27"><call pos:start="65:12" pos:end="65:27"><name pos:start="65:12" pos:end="65:22">SCSI_DEVICE</name><argument_list pos:start="65:23" pos:end="65:27">(<argument pos:start="65:24" pos:end="65:26"><expr pos:start="65:24" pos:end="65:26"><name pos:start="65:24" pos:end="65:26">dev</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
