<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20378.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">hdev_create</name><parameter_list pos:start="1:23" pos:end="1:74">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:43"><specifier pos:start="1:24" pos:end="1:28">const</specifier> <name pos:start="1:30" pos:end="1:33">char</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:43">filename</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:73"><decl pos:start="1:46" pos:end="1:73"><type pos:start="1:46" pos:end="1:73"><name pos:start="1:46" pos:end="1:64">QEMUOptionParameter</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:73">options</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:15">

    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">fd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:15">stat</name></name></type> <name pos:start="9:17" pos:end="9:24">stat_buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:22">total_size</name> <init pos:start="11:24" pos:end="11:26">= <expr pos:start="11:26" pos:end="11:26"><literal type="number" pos:start="11:26" pos:end="11:26">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:26">/* Read out options */</comment>

    <while pos:start="17:5" pos:end="27:5">while <condition pos:start="17:11" pos:end="17:36">(<expr pos:start="17:12" pos:end="17:35"><name pos:start="17:12" pos:end="17:18">options</name> <operator pos:start="17:20" pos:end="17:21">&amp;&amp;</operator> <name pos:start="17:23" pos:end="17:35"><name pos:start="17:23" pos:end="17:29">options</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:35">name</name></name></expr>)</condition> <block pos:start="17:38" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:18">

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:43">(<expr pos:start="19:13" pos:end="19:42"><operator pos:start="19:13" pos:end="19:13">!</operator><call pos:start="19:14" pos:end="19:42"><name pos:start="19:14" pos:end="19:19">strcmp</name><argument_list pos:start="19:20" pos:end="19:42">(<argument pos:start="19:21" pos:end="19:33"><expr pos:start="19:21" pos:end="19:33"><name pos:start="19:21" pos:end="19:33"><name pos:start="19:21" pos:end="19:27">options</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:33">name</name></name></expr></argument>, <argument pos:start="19:36" pos:end="19:41"><expr pos:start="19:36" pos:end="19:41"><literal type="string" pos:start="19:36" pos:end="19:41">"size"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:45" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:48">

            <expr_stmt pos:start="21:13" pos:end="21:48"><expr pos:start="21:13" pos:end="21:47"><name pos:start="21:13" pos:end="21:22">total_size</name> <operator pos:start="21:24" pos:end="21:24">=</operator> <name pos:start="21:26" pos:end="21:41"><name pos:start="21:26" pos:end="21:32">options</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:39">value</name><operator pos:start="21:40" pos:end="21:40">.</operator><name pos:start="21:41" pos:end="21:41">n</name></name> <operator pos:start="21:43" pos:end="21:43">/</operator> <literal type="number" pos:start="21:45" pos:end="21:47">512</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:18"><expr pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:15">options</name><operator pos:start="25:16" pos:end="25:17">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="31:5" pos:end="31:45"><expr pos:start="31:5" pos:end="31:44"><name pos:start="31:5" pos:end="31:6">fd</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <call pos:start="31:10" pos:end="31:44"><name pos:start="31:10" pos:end="31:13">open</name><argument_list pos:start="31:14" pos:end="31:44">(<argument pos:start="31:15" pos:end="31:22"><expr pos:start="31:15" pos:end="31:22"><name pos:start="31:15" pos:end="31:22">filename</name></expr></argument>, <argument pos:start="31:25" pos:end="31:43"><expr pos:start="31:25" pos:end="31:43"><name pos:start="31:25" pos:end="31:32">O_WRONLY</name> <operator pos:start="31:34" pos:end="31:34">|</operator> <name pos:start="31:36" pos:end="31:43">O_BINARY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:20"><if pos:start="33:5" pos:end="35:20">if <condition pos:start="33:8" pos:end="33:15">(<expr pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:10">fd</name> <operator pos:start="33:12" pos:end="33:12">&lt;</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:20"><block_content pos:start="35:9" pos:end="35:20">

        <return pos:start="35:9" pos:end="35:20">return <expr pos:start="35:16" pos:end="35:19"><operator pos:start="35:16" pos:end="35:16">-</operator><name pos:start="35:17" pos:end="35:19">EIO</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="49:22"><if pos:start="39:5" pos:end="41:19">if <condition pos:start="39:8" pos:end="39:33">(<expr pos:start="39:9" pos:end="39:32"><call pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:13">fstat</name><argument_list pos:start="39:14" pos:end="39:28">(<argument pos:start="39:15" pos:end="39:16"><expr pos:start="39:15" pos:end="39:16"><name pos:start="39:15" pos:end="39:16">fd</name></expr></argument>, <argument pos:start="39:19" pos:end="39:27"><expr pos:start="39:19" pos:end="39:27"><operator pos:start="39:19" pos:end="39:19">&amp;</operator><name pos:start="39:20" pos:end="39:27">stat_buf</name></expr></argument>)</argument_list></call> <operator pos:start="39:30" pos:end="39:30">&lt;</operator> <literal type="number" pos:start="39:32" pos:end="39:32">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:19"><block_content pos:start="41:9" pos:end="41:19">

        <expr_stmt pos:start="41:9" pos:end="41:19"><expr pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <operator pos:start="41:15" pos:end="41:15">-</operator><name pos:start="41:16" pos:end="41:18">EIO</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="43:5" pos:end="45:19">else if <condition pos:start="43:13" pos:end="43:40">(<expr pos:start="43:14" pos:end="43:39"><operator pos:start="43:14" pos:end="43:14">!</operator><call pos:start="43:15" pos:end="43:39"><name pos:start="43:15" pos:end="43:21">S_ISBLK</name><argument_list pos:start="43:22" pos:end="43:39">(<argument pos:start="43:23" pos:end="43:38"><expr pos:start="43:23" pos:end="43:38"><name pos:start="43:23" pos:end="43:38"><name pos:start="43:23" pos:end="43:30">stat_buf</name><operator pos:start="43:31" pos:end="43:31">.</operator><name pos:start="43:32" pos:end="43:38">st_mode</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:19"><block_content pos:start="45:9" pos:end="45:19">

        <expr_stmt pos:start="45:9" pos:end="45:19"><expr pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <operator pos:start="45:15" pos:end="45:15">-</operator><name pos:start="45:16" pos:end="45:18">EIO</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="47:5" pos:end="49:22">else if <condition pos:start="47:13" pos:end="47:55">(<expr pos:start="47:14" pos:end="47:54"><call pos:start="47:14" pos:end="47:35"><name pos:start="47:14" pos:end="47:18">lseek</name><argument_list pos:start="47:19" pos:end="47:35">(<argument pos:start="47:20" pos:end="47:21"><expr pos:start="47:20" pos:end="47:21"><name pos:start="47:20" pos:end="47:21">fd</name></expr></argument>, <argument pos:start="47:24" pos:end="47:24"><expr pos:start="47:24" pos:end="47:24"><literal type="number" pos:start="47:24" pos:end="47:24">0</literal></expr></argument>, <argument pos:start="47:27" pos:end="47:34"><expr pos:start="47:27" pos:end="47:34"><name pos:start="47:27" pos:end="47:34">SEEK_END</name></expr></argument>)</argument_list></call> <operator pos:start="47:37" pos:end="47:37">&lt;</operator> <name pos:start="47:39" pos:end="47:48">total_size</name> <operator pos:start="47:50" pos:end="47:50">*</operator> <literal type="number" pos:start="47:52" pos:end="47:54">512</literal></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:22"><block_content pos:start="49:9" pos:end="49:22">

        <expr_stmt pos:start="49:9" pos:end="49:22"><expr pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <operator pos:start="49:15" pos:end="49:15">-</operator><name pos:start="49:16" pos:end="49:21">ENOSPC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:14"><expr pos:start="53:5" pos:end="53:13"><call pos:start="53:5" pos:end="53:13"><name pos:start="53:5" pos:end="53:9">close</name><argument_list pos:start="53:10" pos:end="53:13">(<argument pos:start="53:11" pos:end="53:12"><expr pos:start="53:11" pos:end="53:12"><name pos:start="53:11" pos:end="53:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="55:5" pos:end="55:15">return <expr pos:start="55:12" pos:end="55:14"><name pos:start="55:12" pos:end="55:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
