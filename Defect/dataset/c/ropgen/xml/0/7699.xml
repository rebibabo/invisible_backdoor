<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7699.c" pos:tabs="8"><function pos:start="1:1" pos:end="1445:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">adpcm_decode_frame</name><parameter_list pos:start="1:30" pos:end="5:61">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:46"><decl pos:start="5:29" pos:end="5:46"><type pos:start="5:29" pos:end="5:46"><specifier pos:start="5:29" pos:end="5:33">const</specifier> <name pos:start="5:35" pos:end="5:41">uint8_t</name> <modifier pos:start="5:43" pos:end="5:43">*</modifier></type><name pos:start="5:44" pos:end="5:46">buf</name></decl></parameter>, <parameter pos:start="5:49" pos:end="5:60"><decl pos:start="5:49" pos:end="5:60"><type pos:start="5:49" pos:end="5:60"><name pos:start="5:49" pos:end="5:51">int</name></type> <name pos:start="5:53" pos:end="5:60">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="1445:1">{<block_content pos:start="9:5" pos:end="1443:21">

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">ADPCMContext</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">c</name> <init pos:start="9:21" pos:end="9:38">= <expr pos:start="9:23" pos:end="9:38"><name pos:start="9:23" pos:end="9:38"><name pos:start="9:23" pos:end="9:27">avctx</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:22">ADPCMChannelStatus</name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:26">cs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">n</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">m</name></decl>, <decl pos:start="13:15" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:21">channel</name></decl>, <decl pos:start="13:24" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:24">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:23">block_predictor</name><index pos:start="15:24" pos:end="15:26">[<expr pos:start="15:25" pos:end="15:25"><literal type="number" pos:start="15:25" pos:end="15:25">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">short</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:18">samples</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:9">short</name> <modifier pos:start="19:11" pos:end="19:11">*</modifier></type><name pos:start="19:12" pos:end="19:22">samples_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:19"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:17">uint8_t</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:22">src</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:11"><decl pos:start="23:5" pos:end="23:10"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:10">st</name></decl>;</decl_stmt> <comment type="block" pos:start="23:13" pos:end="23:24">/* stereo */</comment>



    <comment type="block" pos:start="27:5" pos:end="27:40">/* DK3 ADPCM accounting variables */</comment>

    <decl_stmt pos:start="29:5" pos:end="29:32"><decl pos:start="29:5" pos:end="29:31"><type pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:12">unsigned</name> <name pos:start="29:14" pos:end="29:17">char</name></type> <name pos:start="29:19" pos:end="29:27">last_byte</name> <init pos:start="29:29" pos:end="29:31">= <expr pos:start="29:31" pos:end="29:31"><literal type="number" pos:start="29:31" pos:end="29:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:25"><decl pos:start="31:5" pos:end="31:24"><type pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:12">unsigned</name> <name pos:start="31:14" pos:end="31:17">char</name></type> <name pos:start="31:19" pos:end="31:24">nibble</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:35"><decl pos:start="33:5" pos:end="33:34"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:30">decode_top_nibble_next</name> <init pos:start="33:32" pos:end="33:34">= <expr pos:start="33:34" pos:end="33:34"><literal type="number" pos:start="33:34" pos:end="33:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:21"><decl pos:start="35:5" pos:end="35:20"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:20">diff_channel</name></decl>;</decl_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:34">/* EA ADPCM state variables */</comment>

    <decl_stmt pos:start="41:5" pos:end="41:30"><decl pos:start="41:5" pos:end="41:29"><type pos:start="41:5" pos:end="41:12"><name pos:start="41:5" pos:end="41:12">uint32_t</name></type> <name pos:start="41:14" pos:end="41:29">samples_in_chunk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="43:5" pos:end="43:56"><decl pos:start="43:5" pos:end="43:32"><type pos:start="43:5" pos:end="43:11"><name pos:start="43:5" pos:end="43:11">int32_t</name></type> <name pos:start="43:13" pos:end="43:32">previous_left_sample</name></decl>, <decl pos:start="43:35" pos:end="43:55"><type ref="prev" pos:start="43:5" pos:end="43:11"/><name pos:start="43:35" pos:end="43:55">previous_right_sample</name></decl>;</decl_stmt>

    <decl_stmt pos:start="45:5" pos:end="45:54"><decl pos:start="45:5" pos:end="45:31"><type pos:start="45:5" pos:end="45:11"><name pos:start="45:5" pos:end="45:11">int32_t</name></type> <name pos:start="45:13" pos:end="45:31">current_left_sample</name></decl>, <decl pos:start="45:34" pos:end="45:53"><type ref="prev" pos:start="45:5" pos:end="45:11"/><name pos:start="45:34" pos:end="45:53">current_right_sample</name></decl>;</decl_stmt>

    <decl_stmt pos:start="47:5" pos:end="47:48"><decl pos:start="47:5" pos:end="47:28"><type pos:start="47:5" pos:end="47:11"><name pos:start="47:5" pos:end="47:11">int32_t</name></type> <name pos:start="47:13" pos:end="47:28">next_left_sample</name></decl>, <decl pos:start="47:31" pos:end="47:47"><type ref="prev" pos:start="47:5" pos:end="47:11"/><name pos:start="47:31" pos:end="47:47">next_right_sample</name></decl>;</decl_stmt>

    <decl_stmt pos:start="49:5" pos:end="49:47"><decl pos:start="49:5" pos:end="49:19"><type pos:start="49:5" pos:end="49:11"><name pos:start="49:5" pos:end="49:11">int32_t</name></type> <name pos:start="49:13" pos:end="49:19">coeff1l</name></decl>, <decl pos:start="49:22" pos:end="49:28"><type ref="prev" pos:start="49:5" pos:end="49:11"/><name pos:start="49:22" pos:end="49:28">coeff2l</name></decl>, <decl pos:start="49:31" pos:end="49:37"><type ref="prev" pos:start="49:5" pos:end="49:11"/><name pos:start="49:31" pos:end="49:37">coeff1r</name></decl>, <decl pos:start="49:40" pos:end="49:46"><type ref="prev" pos:start="49:5" pos:end="49:11"/><name pos:start="49:40" pos:end="49:46">coeff2r</name></decl>;</decl_stmt>

    <decl_stmt pos:start="51:5" pos:end="51:36"><decl pos:start="51:5" pos:end="51:22"><type pos:start="51:5" pos:end="51:11"><name pos:start="51:5" pos:end="51:11">uint8_t</name></type> <name pos:start="51:13" pos:end="51:22">shift_left</name></decl>, <decl pos:start="51:25" pos:end="51:35"><type ref="prev" pos:start="51:5" pos:end="51:11"/><name pos:start="51:25" pos:end="51:35">shift_right</name></decl>;</decl_stmt>

    <decl_stmt pos:start="53:5" pos:end="53:23"><decl pos:start="53:5" pos:end="53:14"><type pos:start="53:5" pos:end="53:7"><name pos:start="53:5" pos:end="53:7">int</name></type> <name pos:start="53:9" pos:end="53:14">count1</name></decl>, <decl pos:start="53:17" pos:end="53:22"><type ref="prev" pos:start="53:5" pos:end="53:7"/><name pos:start="53:17" pos:end="53:22">count2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="55:5" pos:end="55:30"><decl pos:start="55:5" pos:end="55:19"><type pos:start="55:5" pos:end="55:7"><name pos:start="55:5" pos:end="55:7">int</name></type> <name pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:13">coeff</name><index pos:start="55:14" pos:end="55:16">[<expr pos:start="55:15" pos:end="55:15"><literal type="number" pos:start="55:15" pos:end="55:15">2</literal></expr>]</index><index pos:start="55:17" pos:end="55:19">[<expr pos:start="55:18" pos:end="55:18"><literal type="number" pos:start="55:18" pos:end="55:18">2</literal></expr>]</index></name></decl>, <decl pos:start="55:22" pos:end="55:29"><type ref="prev" pos:start="55:5" pos:end="55:7"/><name pos:start="55:22" pos:end="55:29"><name pos:start="55:22" pos:end="55:26">shift</name><index pos:start="55:27" pos:end="55:29">[<expr pos:start="55:28" pos:end="55:28"><literal type="number" pos:start="55:28" pos:end="55:28">2</literal></expr>]</index></name></decl>;</decl_stmt><comment type="line" pos:start="55:31" pos:end="55:54">//used in EA MAXIS ADPCM</comment>



    <if_stmt pos:start="59:5" pos:end="61:17"><if pos:start="59:5" pos:end="61:17">if <condition pos:start="59:8" pos:end="59:18">(<expr pos:start="59:9" pos:end="59:17"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:17">buf_size</name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:17"><block_content pos:start="61:9" pos:end="61:17">

        <return pos:start="61:9" pos:end="61:17">return <expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="65:5" pos:end="65:44">//should protect all 4bit ADPCM variants</comment>

    <comment type="line" pos:start="67:5" pos:end="67:60">//8 is needed for CODEC_ID_ADPCM_IMA_WAV with 2 channels</comment>

    <comment type="line" pos:start="69:5" pos:end="69:6">//</comment>

    <if_stmt pos:start="71:5" pos:end="73:18"><if pos:start="71:5" pos:end="73:18">if<condition pos:start="71:7" pos:end="71:35">(<expr pos:start="71:8" pos:end="71:34"><operator pos:start="71:8" pos:end="71:8">*</operator><name pos:start="71:9" pos:end="71:17">data_size</name><operator pos:start="71:18" pos:end="71:18">/</operator><literal type="number" pos:start="71:19" pos:end="71:19">4</literal> <operator pos:start="71:21" pos:end="71:21">&lt;</operator> <name pos:start="71:23" pos:end="71:30">buf_size</name> <operator pos:start="71:32" pos:end="71:32">+</operator> <literal type="number" pos:start="71:34" pos:end="71:34">8</literal></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:18"><block_content pos:start="73:9" pos:end="73:18">

        <return pos:start="73:9" pos:end="73:18">return <expr pos:start="73:16" pos:end="73:17"><operator pos:start="73:16" pos:end="73:16">-</operator><literal type="number" pos:start="73:17" pos:end="73:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:19"><expr pos:start="77:5" pos:end="77:18"><name pos:start="77:5" pos:end="77:11">samples</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <name pos:start="77:15" pos:end="77:18">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:40"><expr pos:start="79:5" pos:end="79:39"><name pos:start="79:5" pos:end="79:15">samples_end</name><operator pos:start="79:16" pos:end="79:16">=</operator> <name pos:start="79:18" pos:end="79:24">samples</name> <operator pos:start="79:26" pos:end="79:26">+</operator> <operator pos:start="79:28" pos:end="79:28">*</operator><name pos:start="79:29" pos:end="79:37">data_size</name><operator pos:start="79:38" pos:end="79:38">/</operator><literal type="number" pos:start="79:39" pos:end="79:39">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:18"><expr pos:start="81:5" pos:end="81:17"><operator pos:start="81:5" pos:end="81:5">*</operator><name pos:start="81:6" pos:end="81:14">data_size</name><operator pos:start="81:15" pos:end="81:15">=</operator> <literal type="number" pos:start="81:17" pos:end="81:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:14"><expr pos:start="83:5" pos:end="83:13"><name pos:start="83:5" pos:end="83:7">src</name> <operator pos:start="83:9" pos:end="83:9">=</operator> <name pos:start="83:11" pos:end="83:13">buf</name></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:38"><expr pos:start="87:5" pos:end="87:37"><name pos:start="87:5" pos:end="87:6">st</name> <operator pos:start="87:8" pos:end="87:8">=</operator> <ternary pos:start="87:10" pos:end="87:37"><condition pos:start="87:10" pos:end="87:31"><expr pos:start="87:10" pos:end="87:29"><name pos:start="87:10" pos:end="87:24"><name pos:start="87:10" pos:end="87:14">avctx</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:24">channels</name></name> <operator pos:start="87:26" pos:end="87:27">==</operator> <literal type="number" pos:start="87:29" pos:end="87:29">2</literal></expr> ?</condition><then pos:start="87:33" pos:end="87:33"> <expr pos:start="87:33" pos:end="87:33"><literal type="number" pos:start="87:33" pos:end="87:33">1</literal></expr> </then><else pos:start="87:35" pos:end="87:37">: <expr pos:start="87:37" pos:end="87:37"><literal type="number" pos:start="87:37" pos:end="87:37">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <switch pos:start="91:5" pos:end="1439:5">switch<condition pos:start="91:11" pos:end="91:28">(<expr pos:start="91:12" pos:end="91:27"><name pos:start="91:12" pos:end="91:27"><name pos:start="91:12" pos:end="91:16">avctx</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:23">codec</name><operator pos:start="91:24" pos:end="91:25">-&gt;</operator><name pos:start="91:26" pos:end="91:27">id</name></name></expr>)</condition> <block pos:start="91:30" pos:end="1439:5">{<block_content pos:start="93:5" pos:end="1437:18">

    <case pos:start="93:5" pos:end="93:31">case <expr pos:start="93:10" pos:end="93:30"><name pos:start="93:10" pos:end="93:30">CODEC_ID_ADPCM_IMA_QT</name></expr>:</case>

        <expr_stmt pos:start="95:9" pos:end="95:27"><expr pos:start="95:9" pos:end="95:26"><name pos:start="95:9" pos:end="95:9">n</name> <operator pos:start="95:11" pos:end="95:11">=</operator> <operator pos:start="95:13" pos:end="95:13">(</operator><name pos:start="95:14" pos:end="95:21">buf_size</name> <operator pos:start="95:23" pos:end="95:23">-</operator> <literal type="number" pos:start="95:25" pos:end="95:25">2</literal><operator pos:start="95:26" pos:end="95:26">)</operator></expr>;</expr_stmt><comment type="block" pos:start="95:28" pos:end="95:53">/* &gt;&gt; 2*avctx-&gt;channels;*/</comment>

        <expr_stmt pos:start="97:9" pos:end="97:29"><expr pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:15">channel</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <name pos:start="97:19" pos:end="97:28"><name pos:start="97:19" pos:end="97:19">c</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:28">channel</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:35"><expr pos:start="99:9" pos:end="99:34"><name pos:start="99:9" pos:end="99:10">cs</name> <operator pos:start="99:12" pos:end="99:12">=</operator> <operator pos:start="99:14" pos:end="99:14">&amp;</operator><operator pos:start="99:15" pos:end="99:15">(</operator><name pos:start="99:16" pos:end="99:33"><name pos:start="99:16" pos:end="99:16">c</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:24">status</name><index pos:start="99:25" pos:end="99:33">[<expr pos:start="99:26" pos:end="99:32"><name pos:start="99:26" pos:end="99:32">channel</name></expr>]</index></name><operator pos:start="99:34" pos:end="99:34">)</operator></expr>;</expr_stmt>

        <comment type="block" pos:start="101:9" pos:end="101:33">/* (pppppp) (piiiiiii) */</comment>



        <comment type="block" pos:start="105:9" pos:end="105:82">/* Bits 15-7 are the _top_ 9 bits of the 16-bit initial predictor value */</comment>

        <expr_stmt pos:start="107:9" pos:end="107:38"><expr pos:start="107:9" pos:end="107:37"><name pos:start="107:9" pos:end="107:21"><name pos:start="107:9" pos:end="107:10">cs</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:21">predictor</name></name> <operator pos:start="107:23" pos:end="107:23">=</operator> <operator pos:start="107:25" pos:end="107:25">(</operator><operator pos:start="107:26" pos:end="107:26">*</operator><name pos:start="107:27" pos:end="107:29">src</name><operator pos:start="107:30" pos:end="107:31">++</operator><operator pos:start="107:32" pos:end="107:32">)</operator> <operator pos:start="107:34" pos:end="107:35">&lt;&lt;</operator> <literal type="number" pos:start="107:37" pos:end="107:37">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:39"><expr pos:start="109:9" pos:end="109:38"><name pos:start="109:9" pos:end="109:21"><name pos:start="109:9" pos:end="109:10">cs</name><operator pos:start="109:11" pos:end="109:12">-&gt;</operator><name pos:start="109:13" pos:end="109:21">predictor</name></name> <operator pos:start="109:23" pos:end="109:24">|=</operator> <operator pos:start="109:26" pos:end="109:26">(</operator><operator pos:start="109:27" pos:end="109:27">*</operator><name pos:start="109:28" pos:end="109:30">src</name> <operator pos:start="109:32" pos:end="109:32">&amp;</operator> <literal type="number" pos:start="109:34" pos:end="109:37">0x80</literal><operator pos:start="109:38" pos:end="109:38">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:32"><expr pos:start="111:9" pos:end="111:31"><name pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:10">cs</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:21">predictor</name></name> <operator pos:start="111:23" pos:end="111:24">&amp;=</operator> <literal type="number" pos:start="111:26" pos:end="111:31">0xFF80</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="115:9" pos:end="115:28">/* sign extension */</comment>

        <if_stmt pos:start="117:9" pos:end="119:37"><if pos:start="117:9" pos:end="119:37">if<condition pos:start="117:11" pos:end="117:34">(<expr pos:start="117:12" pos:end="117:33"><name pos:start="117:12" pos:end="117:24"><name pos:start="117:12" pos:end="117:13">cs</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:24">predictor</name></name> <operator pos:start="117:26" pos:end="117:26">&amp;</operator> <literal type="number" pos:start="117:28" pos:end="117:33">0x8000</literal></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:37"><block_content pos:start="119:13" pos:end="119:37">

            <expr_stmt pos:start="119:13" pos:end="119:37"><expr pos:start="119:13" pos:end="119:36"><name pos:start="119:13" pos:end="119:25"><name pos:start="119:13" pos:end="119:14">cs</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:25">predictor</name></name> <operator pos:start="119:27" pos:end="119:28">-=</operator> <literal type="number" pos:start="119:30" pos:end="119:36">0x10000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:53"><expr pos:start="123:9" pos:end="123:52"><name pos:start="123:9" pos:end="123:21"><name pos:start="123:9" pos:end="123:10">cs</name><operator pos:start="123:11" pos:end="123:12">-&gt;</operator><name pos:start="123:13" pos:end="123:21">predictor</name></name> <operator pos:start="123:23" pos:end="123:23">=</operator> <call pos:start="123:25" pos:end="123:52"><name pos:start="123:25" pos:end="123:37">av_clip_int16</name><argument_list pos:start="123:38" pos:end="123:52">(<argument pos:start="123:39" pos:end="123:51"><expr pos:start="123:39" pos:end="123:51"><name pos:start="123:39" pos:end="123:51"><name pos:start="123:39" pos:end="123:40">cs</name><operator pos:start="123:41" pos:end="123:42">-&gt;</operator><name pos:start="123:43" pos:end="123:51">predictor</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="127:9" pos:end="127:41"><expr pos:start="127:9" pos:end="127:40"><name pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:10">cs</name><operator pos:start="127:11" pos:end="127:12">-&gt;</operator><name pos:start="127:13" pos:end="127:22">step_index</name></name> <operator pos:start="127:24" pos:end="127:24">=</operator> <operator pos:start="127:26" pos:end="127:26">(</operator><operator pos:start="127:27" pos:end="127:27">*</operator><name pos:start="127:28" pos:end="127:30">src</name><operator pos:start="127:31" pos:end="127:32">++</operator><operator pos:start="127:33" pos:end="127:33">)</operator> <operator pos:start="127:35" pos:end="127:35">&amp;</operator> <literal type="number" pos:start="127:37" pos:end="127:40">0x7F</literal></expr>;</expr_stmt>



        <if_stmt pos:start="131:9" pos:end="137:9"><if pos:start="131:9" pos:end="137:9">if <condition pos:start="131:12" pos:end="131:32">(<expr pos:start="131:13" pos:end="131:31"><name pos:start="131:13" pos:end="131:26"><name pos:start="131:13" pos:end="131:14">cs</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:26">step_index</name></name> <operator pos:start="131:28" pos:end="131:28">&gt;</operator> <literal type="number" pos:start="131:30" pos:end="131:31">88</literal></expr>)</condition><block pos:start="131:33" pos:end="137:9">{<block_content pos:start="133:13" pos:end="135:32">

            <expr_stmt pos:start="133:13" pos:end="133:84"><expr pos:start="133:13" pos:end="133:83"><call pos:start="133:13" pos:end="133:83"><name pos:start="133:13" pos:end="133:18">av_log</name><argument_list pos:start="133:19" pos:end="133:83">(<argument pos:start="133:20" pos:end="133:24"><expr pos:start="133:20" pos:end="133:24"><name pos:start="133:20" pos:end="133:24">avctx</name></expr></argument>, <argument pos:start="133:27" pos:end="133:38"><expr pos:start="133:27" pos:end="133:38"><name pos:start="133:27" pos:end="133:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="133:41" pos:end="133:66"><expr pos:start="133:41" pos:end="133:66"><literal type="string" pos:start="133:41" pos:end="133:66">"ERROR: step_index = %i\n"</literal></expr></argument>, <argument pos:start="133:69" pos:end="133:82"><expr pos:start="133:69" pos:end="133:82"><name pos:start="133:69" pos:end="133:82"><name pos:start="133:69" pos:end="133:70">cs</name><operator pos:start="133:71" pos:end="133:72">-&gt;</operator><name pos:start="133:73" pos:end="133:82">step_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:32"><expr pos:start="135:13" pos:end="135:31"><name pos:start="135:13" pos:end="135:26"><name pos:start="135:13" pos:end="135:14">cs</name><operator pos:start="135:15" pos:end="135:16">-&gt;</operator><name pos:start="135:17" pos:end="135:26">step_index</name></name> <operator pos:start="135:28" pos:end="135:28">=</operator> <literal type="number" pos:start="135:30" pos:end="135:31">88</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="141:9" pos:end="141:46"><expr pos:start="141:9" pos:end="141:45"><name pos:start="141:9" pos:end="141:16"><name pos:start="141:9" pos:end="141:10">cs</name><operator pos:start="141:11" pos:end="141:12">-&gt;</operator><name pos:start="141:13" pos:end="141:16">step</name></name> <operator pos:start="141:18" pos:end="141:18">=</operator> <name pos:start="141:20" pos:end="141:45"><name pos:start="141:20" pos:end="141:29">step_table</name><index pos:start="141:30" pos:end="141:45">[<expr pos:start="141:31" pos:end="141:44"><name pos:start="141:31" pos:end="141:44"><name pos:start="141:31" pos:end="141:32">cs</name><operator pos:start="141:33" pos:end="141:34">-&gt;</operator><name pos:start="141:35" pos:end="141:44">step_index</name></name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="145:9" pos:end="147:22"><if pos:start="145:9" pos:end="147:22">if <condition pos:start="145:12" pos:end="145:26">(<expr pos:start="145:13" pos:end="145:25"><name pos:start="145:13" pos:end="145:14">st</name> <operator pos:start="145:16" pos:end="145:17">&amp;&amp;</operator> <name pos:start="145:19" pos:end="145:25">channel</name></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="147:22"><block_content pos:start="147:13" pos:end="147:22">

            <expr_stmt pos:start="147:13" pos:end="147:22"><expr pos:start="147:13" pos:end="147:21"><name pos:start="147:13" pos:end="147:19">samples</name><operator pos:start="147:20" pos:end="147:21">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <for pos:start="151:9" pos:end="163:9">for<control pos:start="151:12" pos:end="151:39">(<init pos:start="151:13" pos:end="151:17"><expr pos:start="151:13" pos:end="151:16"><name pos:start="151:13" pos:end="151:13">m</name><operator pos:start="151:14" pos:end="151:14">=</operator><literal type="number" pos:start="151:15" pos:end="151:16">32</literal></expr>;</init> <condition pos:start="151:19" pos:end="151:29"><expr pos:start="151:19" pos:end="151:28"><name pos:start="151:19" pos:end="151:19">n</name><operator pos:start="151:20" pos:end="151:20">&gt;</operator><literal type="number" pos:start="151:21" pos:end="151:21">0</literal> <operator pos:start="151:23" pos:end="151:24">&amp;&amp;</operator> <name pos:start="151:26" pos:end="151:26">m</name><operator pos:start="151:27" pos:end="151:27">&gt;</operator><literal type="number" pos:start="151:28" pos:end="151:28">0</literal></expr>;</condition> <incr pos:start="151:31" pos:end="151:38"><expr pos:start="151:31" pos:end="151:33"><name pos:start="151:31" pos:end="151:31">n</name><operator pos:start="151:32" pos:end="151:33">--</operator></expr><operator pos:start="151:34" pos:end="151:34">,</operator> <expr pos:start="151:36" pos:end="151:38"><name pos:start="151:36" pos:end="151:36">m</name><operator pos:start="151:37" pos:end="151:38">--</operator></expr></incr>)</control> <block pos:start="151:41" pos:end="163:9">{<block_content pos:start="153:13" pos:end="161:19"> <comment type="block" pos:start="151:43" pos:end="151:113">/* in QuickTime, IMA is encoded by chuncks of 34 bytes (=64 samples) */</comment>

            <expr_stmt pos:start="153:13" pos:end="153:69"><expr pos:start="153:13" pos:end="153:68"><operator pos:start="153:13" pos:end="153:13">*</operator><name pos:start="153:14" pos:end="153:20">samples</name> <operator pos:start="153:22" pos:end="153:22">=</operator> <call pos:start="153:24" pos:end="153:68"><name pos:start="153:24" pos:end="153:46">adpcm_ima_expand_nibble</name><argument_list pos:start="153:47" pos:end="153:68">(<argument pos:start="153:48" pos:end="153:49"><expr pos:start="153:48" pos:end="153:49"><name pos:start="153:48" pos:end="153:49">cs</name></expr></argument>, <argument pos:start="153:52" pos:end="153:64"><expr pos:start="153:52" pos:end="153:64"><name pos:start="153:52" pos:end="153:57"><name pos:start="153:52" pos:end="153:54">src</name><index pos:start="153:55" pos:end="153:57">[<expr pos:start="153:56" pos:end="153:56"><literal type="number" pos:start="153:56" pos:end="153:56">0</literal></expr>]</index></name> <operator pos:start="153:59" pos:end="153:59">&amp;</operator> <literal type="number" pos:start="153:61" pos:end="153:64">0x0F</literal></expr></argument>, <argument pos:start="153:67" pos:end="153:67"><expr pos:start="153:67" pos:end="153:67"><literal type="number" pos:start="153:67" pos:end="153:67">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:39"><expr pos:start="155:13" pos:end="155:38"><name pos:start="155:13" pos:end="155:19">samples</name> <operator pos:start="155:21" pos:end="155:22">+=</operator> <name pos:start="155:24" pos:end="155:38"><name pos:start="155:24" pos:end="155:28">avctx</name><operator pos:start="155:29" pos:end="155:30">-&gt;</operator><name pos:start="155:31" pos:end="155:38">channels</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:69"><expr pos:start="157:13" pos:end="157:68"><operator pos:start="157:13" pos:end="157:13">*</operator><name pos:start="157:14" pos:end="157:20">samples</name> <operator pos:start="157:22" pos:end="157:22">=</operator> <call pos:start="157:24" pos:end="157:68"><name pos:start="157:24" pos:end="157:46">adpcm_ima_expand_nibble</name><argument_list pos:start="157:47" pos:end="157:68">(<argument pos:start="157:48" pos:end="157:49"><expr pos:start="157:48" pos:end="157:49"><name pos:start="157:48" pos:end="157:49">cs</name></expr></argument>, <argument pos:start="157:52" pos:end="157:62"><expr pos:start="157:52" pos:end="157:62"><name pos:start="157:52" pos:end="157:57"><name pos:start="157:52" pos:end="157:54">src</name><index pos:start="157:55" pos:end="157:57">[<expr pos:start="157:56" pos:end="157:56"><literal type="number" pos:start="157:56" pos:end="157:56">0</literal></expr>]</index></name> <operator pos:start="157:59" pos:end="157:60">&gt;&gt;</operator> <literal type="number" pos:start="157:62" pos:end="157:62">4</literal></expr></argument>  , <argument pos:start="157:67" pos:end="157:67"><expr pos:start="157:67" pos:end="157:67"><literal type="number" pos:start="157:67" pos:end="157:67">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:39"><expr pos:start="159:13" pos:end="159:38"><name pos:start="159:13" pos:end="159:19">samples</name> <operator pos:start="159:21" pos:end="159:22">+=</operator> <name pos:start="159:24" pos:end="159:38"><name pos:start="159:24" pos:end="159:28">avctx</name><operator pos:start="159:29" pos:end="159:30">-&gt;</operator><name pos:start="159:31" pos:end="159:38">channels</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:19"><expr pos:start="161:13" pos:end="161:18"><name pos:start="161:13" pos:end="161:15">src</name> <operator pos:start="161:17" pos:end="161:18">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="167:9" pos:end="179:9"><if pos:start="167:9" pos:end="179:9">if<condition pos:start="167:11" pos:end="167:14">(<expr pos:start="167:12" pos:end="167:13"><name pos:start="167:12" pos:end="167:13">st</name></expr>)</condition> <block pos:start="167:16" pos:end="179:9">{<block_content pos:start="169:13" pos:end="177:22"> <comment type="block" pos:start="167:18" pos:end="167:48">/* handle stereo interlacing */</comment>

            <expr_stmt pos:start="169:13" pos:end="169:43"><expr pos:start="169:13" pos:end="169:42"><name pos:start="169:13" pos:end="169:22"><name pos:start="169:13" pos:end="169:13">c</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:22">channel</name></name> <operator pos:start="169:24" pos:end="169:24">=</operator> <operator pos:start="169:26" pos:end="169:26">(</operator><name pos:start="169:27" pos:end="169:33">channel</name> <operator pos:start="169:35" pos:end="169:35">+</operator> <literal type="number" pos:start="169:37" pos:end="169:37">1</literal><operator pos:start="169:38" pos:end="169:38">)</operator> <operator pos:start="169:40" pos:end="169:40">%</operator> <literal type="number" pos:start="169:42" pos:end="169:42">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="169:45" pos:end="169:101">/* we get one packet for left, then one for right data */</comment>

            <if_stmt pos:start="171:13" pos:end="175:13"><if pos:start="171:13" pos:end="175:13">if<condition pos:start="171:15" pos:end="171:24">(<expr pos:start="171:16" pos:end="171:23"><operator pos:start="171:16" pos:end="171:16">!</operator><name pos:start="171:17" pos:end="171:23">channel</name></expr>)</condition> <block pos:start="171:26" pos:end="175:13">{<block_content pos:start="173:17" pos:end="173:33"> <comment type="block" pos:start="171:28" pos:end="171:84">/* wait for the other packet before outputing anything */</comment>

                <return pos:start="173:17" pos:end="173:33">return <expr pos:start="173:24" pos:end="173:32"><name pos:start="173:24" pos:end="173:26">src</name> <operator pos:start="173:28" pos:end="173:28">-</operator> <name pos:start="173:30" pos:end="173:32">buf</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:22"><expr pos:start="177:13" pos:end="177:21"><name pos:start="177:13" pos:end="177:19">samples</name><operator pos:start="177:20" pos:end="177:21">--</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="181:9" pos:end="181:14">break;</break>

    <case pos:start="183:5" pos:end="183:32">case <expr pos:start="183:10" pos:end="183:31"><name pos:start="183:10" pos:end="183:31">CODEC_ID_ADPCM_IMA_WAV</name></expr>:</case>

        <if_stmt pos:start="185:9" pos:end="187:42"><if pos:start="185:9" pos:end="187:42">if <condition pos:start="185:12" pos:end="185:69">(<expr pos:start="185:13" pos:end="185:68"><name pos:start="185:13" pos:end="185:30"><name pos:start="185:13" pos:end="185:17">avctx</name><operator pos:start="185:18" pos:end="185:19">-&gt;</operator><name pos:start="185:20" pos:end="185:30">block_align</name></name> <operator pos:start="185:32" pos:end="185:33">!=</operator> <literal type="number" pos:start="185:35" pos:end="185:35">0</literal> <operator pos:start="185:37" pos:end="185:38">&amp;&amp;</operator> <name pos:start="185:40" pos:end="185:47">buf_size</name> <operator pos:start="185:49" pos:end="185:49">&gt;</operator> <name pos:start="185:51" pos:end="185:68"><name pos:start="185:51" pos:end="185:55">avctx</name><operator pos:start="185:56" pos:end="185:57">-&gt;</operator><name pos:start="185:58" pos:end="185:68">block_align</name></name></expr>)</condition><block type="pseudo" pos:start="187:13" pos:end="187:42"><block_content pos:start="187:13" pos:end="187:42">

            <expr_stmt pos:start="187:13" pos:end="187:42"><expr pos:start="187:13" pos:end="187:41"><name pos:start="187:13" pos:end="187:20">buf_size</name> <operator pos:start="187:22" pos:end="187:22">=</operator> <name pos:start="187:24" pos:end="187:41"><name pos:start="187:24" pos:end="187:28">avctx</name><operator pos:start="187:29" pos:end="187:30">-&gt;</operator><name pos:start="187:31" pos:end="187:41">block_align</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



<comment type="line" pos:start="191:1" pos:end="191:89">//        samples_per_block= (block_align-4*chanels)*8 / (bits_per_sample * chanels) + 1;</comment>



        <for pos:start="195:9" pos:end="217:9">for<control pos:start="195:12" pos:end="195:40">(<init pos:start="195:13" pos:end="195:16"><expr pos:start="195:13" pos:end="195:15"><name pos:start="195:13" pos:end="195:13">i</name><operator pos:start="195:14" pos:end="195:14">=</operator><literal type="number" pos:start="195:15" pos:end="195:15">0</literal></expr>;</init> <condition pos:start="195:18" pos:end="195:35"><expr pos:start="195:18" pos:end="195:34"><name pos:start="195:18" pos:end="195:18">i</name><operator pos:start="195:19" pos:end="195:19">&lt;</operator><name pos:start="195:20" pos:end="195:34"><name pos:start="195:20" pos:end="195:24">avctx</name><operator pos:start="195:25" pos:end="195:26">-&gt;</operator><name pos:start="195:27" pos:end="195:34">channels</name></name></expr>;</condition> <incr pos:start="195:37" pos:end="195:39"><expr pos:start="195:37" pos:end="195:39"><name pos:start="195:37" pos:end="195:37">i</name><operator pos:start="195:38" pos:end="195:39">++</operator></expr></incr>)</control><block pos:start="195:41" pos:end="217:9">{<block_content pos:start="197:13" pos:end="215:105">

            <expr_stmt pos:start="197:13" pos:end="197:33"><expr pos:start="197:13" pos:end="197:32"><name pos:start="197:13" pos:end="197:14">cs</name> <operator pos:start="197:16" pos:end="197:16">=</operator> <operator pos:start="197:18" pos:end="197:18">&amp;</operator><operator pos:start="197:19" pos:end="197:19">(</operator><name pos:start="197:20" pos:end="197:31"><name pos:start="197:20" pos:end="197:20">c</name><operator pos:start="197:21" pos:end="197:22">-&gt;</operator><name pos:start="197:23" pos:end="197:28">status</name><index pos:start="197:29" pos:end="197:31">[<expr pos:start="197:30" pos:end="197:30"><name pos:start="197:30" pos:end="197:30">i</name></expr>]</index></name><operator pos:start="197:32" pos:end="197:32">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:73"><expr pos:start="199:13" pos:end="199:72"><name pos:start="199:13" pos:end="199:25"><name pos:start="199:13" pos:end="199:14">cs</name><operator pos:start="199:15" pos:end="199:16">-&gt;</operator><name pos:start="199:17" pos:end="199:25">predictor</name></name> <operator pos:start="199:27" pos:end="199:27">=</operator> <operator pos:start="199:29" pos:end="199:29">*</operator><name pos:start="199:30" pos:end="199:36">samples</name><operator pos:start="199:37" pos:end="199:38">++</operator> <operator pos:start="199:40" pos:end="199:40">=</operator> <operator pos:start="199:42" pos:end="199:42">(</operator><name pos:start="199:43" pos:end="199:49">int16_t</name><operator pos:start="199:50" pos:end="199:50">)</operator><operator pos:start="199:51" pos:end="199:51">(</operator><name pos:start="199:52" pos:end="199:57"><name pos:start="199:52" pos:end="199:54">src</name><index pos:start="199:55" pos:end="199:57">[<expr pos:start="199:56" pos:end="199:56"><literal type="number" pos:start="199:56" pos:end="199:56">0</literal></expr>]</index></name> <operator pos:start="199:59" pos:end="199:59">+</operator> <operator pos:start="199:61" pos:end="199:61">(</operator><name pos:start="199:62" pos:end="199:67"><name pos:start="199:62" pos:end="199:64">src</name><index pos:start="199:65" pos:end="199:67">[<expr pos:start="199:66" pos:end="199:66"><literal type="number" pos:start="199:66" pos:end="199:66">1</literal></expr>]</index></name><operator pos:start="199:68" pos:end="199:69">&lt;&lt;</operator><literal type="number" pos:start="199:70" pos:end="199:70">8</literal><operator pos:start="199:71" pos:end="199:71">)</operator><operator pos:start="199:72" pos:end="199:72">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:19"><expr pos:start="201:13" pos:end="201:18"><name pos:start="201:13" pos:end="201:15">src</name><operator pos:start="201:16" pos:end="201:17">+=</operator><literal type="number" pos:start="201:18" pos:end="201:18">2</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="205:13" pos:end="205:36"><expr pos:start="205:13" pos:end="205:35"><name pos:start="205:13" pos:end="205:26"><name pos:start="205:13" pos:end="205:14">cs</name><operator pos:start="205:15" pos:end="205:16">-&gt;</operator><name pos:start="205:17" pos:end="205:26">step_index</name></name> <operator pos:start="205:28" pos:end="205:28">=</operator> <operator pos:start="205:30" pos:end="205:30">*</operator><name pos:start="205:31" pos:end="205:33">src</name><operator pos:start="205:34" pos:end="205:35">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="207:13" pos:end="213:13"><if pos:start="207:13" pos:end="213:13">if <condition pos:start="207:16" pos:end="207:36">(<expr pos:start="207:17" pos:end="207:35"><name pos:start="207:17" pos:end="207:30"><name pos:start="207:17" pos:end="207:18">cs</name><operator pos:start="207:19" pos:end="207:20">-&gt;</operator><name pos:start="207:21" pos:end="207:30">step_index</name></name> <operator pos:start="207:32" pos:end="207:32">&gt;</operator> <literal type="number" pos:start="207:34" pos:end="207:35">88</literal></expr>)</condition><block pos:start="207:37" pos:end="213:13">{<block_content pos:start="209:17" pos:end="211:36">

                <expr_stmt pos:start="209:17" pos:end="209:88"><expr pos:start="209:17" pos:end="209:87"><call pos:start="209:17" pos:end="209:87"><name pos:start="209:17" pos:end="209:22">av_log</name><argument_list pos:start="209:23" pos:end="209:87">(<argument pos:start="209:24" pos:end="209:28"><expr pos:start="209:24" pos:end="209:28"><name pos:start="209:24" pos:end="209:28">avctx</name></expr></argument>, <argument pos:start="209:31" pos:end="209:42"><expr pos:start="209:31" pos:end="209:42"><name pos:start="209:31" pos:end="209:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="209:45" pos:end="209:70"><expr pos:start="209:45" pos:end="209:70"><literal type="string" pos:start="209:45" pos:end="209:70">"ERROR: step_index = %i\n"</literal></expr></argument>, <argument pos:start="209:73" pos:end="209:86"><expr pos:start="209:73" pos:end="209:86"><name pos:start="209:73" pos:end="209:86"><name pos:start="209:73" pos:end="209:74">cs</name><operator pos:start="209:75" pos:end="209:76">-&gt;</operator><name pos:start="209:77" pos:end="209:86">step_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:36"><expr pos:start="211:17" pos:end="211:35"><name pos:start="211:17" pos:end="211:30"><name pos:start="211:17" pos:end="211:18">cs</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:30">step_index</name></name> <operator pos:start="211:32" pos:end="211:32">=</operator> <literal type="number" pos:start="211:34" pos:end="211:35">88</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="215:13" pos:end="215:105"><if pos:start="215:13" pos:end="215:105">if <condition pos:start="215:16" pos:end="215:23">(<expr pos:start="215:17" pos:end="215:22"><operator pos:start="215:17" pos:end="215:17">*</operator><name pos:start="215:18" pos:end="215:20">src</name><operator pos:start="215:21" pos:end="215:22">++</operator></expr>)</condition><block type="pseudo" pos:start="215:25" pos:end="215:105"><block_content pos:start="215:25" pos:end="215:105"> <expr_stmt pos:start="215:25" pos:end="215:105"><expr pos:start="215:25" pos:end="215:104"><call pos:start="215:25" pos:end="215:104"><name pos:start="215:25" pos:end="215:30">av_log</name><argument_list pos:start="215:31" pos:end="215:104">(<argument pos:start="215:32" pos:end="215:36"><expr pos:start="215:32" pos:end="215:36"><name pos:start="215:32" pos:end="215:36">avctx</name></expr></argument>, <argument pos:start="215:39" pos:end="215:50"><expr pos:start="215:39" pos:end="215:50"><name pos:start="215:39" pos:end="215:50">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="215:53" pos:end="215:94"><expr pos:start="215:53" pos:end="215:94"><literal type="string" pos:start="215:53" pos:end="215:94">"unused byte should be null but is %d!!\n"</literal></expr></argument>, <argument pos:start="215:97" pos:end="215:103"><expr pos:start="215:97" pos:end="215:103"><name pos:start="215:97" pos:end="215:103"><name pos:start="215:97" pos:end="215:99">src</name><index pos:start="215:100" pos:end="215:103">[<expr pos:start="215:101" pos:end="215:102"><operator pos:start="215:101" pos:end="215:101">-</operator><literal type="number" pos:start="215:102" pos:end="215:102">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="215:107" pos:end="215:118">/* unused */</comment>

        </block_content>}</block></for>



        <while pos:start="221:9" pos:end="239:9">while<condition pos:start="221:14" pos:end="221:35">(<expr pos:start="221:15" pos:end="221:34"><name pos:start="221:15" pos:end="221:17">src</name> <operator pos:start="221:19" pos:end="221:19">&lt;</operator> <name pos:start="221:21" pos:end="221:23">buf</name> <operator pos:start="221:25" pos:end="221:25">+</operator> <name pos:start="221:27" pos:end="221:34">buf_size</name></expr>)</condition><block pos:start="221:36" pos:end="239:9">{<block_content pos:start="223:13" pos:end="237:24">

            <for pos:start="223:13" pos:end="235:13">for<control pos:start="223:16" pos:end="223:30">(<init pos:start="223:17" pos:end="223:20"><expr pos:start="223:17" pos:end="223:19"><name pos:start="223:17" pos:end="223:17">m</name><operator pos:start="223:18" pos:end="223:18">=</operator><literal type="number" pos:start="223:19" pos:end="223:19">0</literal></expr>;</init> <condition pos:start="223:22" pos:end="223:25"><expr pos:start="223:22" pos:end="223:24"><name pos:start="223:22" pos:end="223:22">m</name><operator pos:start="223:23" pos:end="223:23">&lt;</operator><literal type="number" pos:start="223:24" pos:end="223:24">4</literal></expr>;</condition> <incr pos:start="223:27" pos:end="223:29"><expr pos:start="223:27" pos:end="223:29"><name pos:start="223:27" pos:end="223:27">m</name><operator pos:start="223:28" pos:end="223:29">++</operator></expr></incr>)</control><block pos:start="223:31" pos:end="235:13">{<block_content pos:start="225:17" pos:end="233:22">

                <for pos:start="225:17" pos:end="227:92">for<control pos:start="225:20" pos:end="225:36">(<init pos:start="225:21" pos:end="225:24"><expr pos:start="225:21" pos:end="225:23"><name pos:start="225:21" pos:end="225:21">i</name><operator pos:start="225:22" pos:end="225:22">=</operator><literal type="number" pos:start="225:23" pos:end="225:23">0</literal></expr>;</init> <condition pos:start="225:26" pos:end="225:31"><expr pos:start="225:26" pos:end="225:30"><name pos:start="225:26" pos:end="225:26">i</name><operator pos:start="225:27" pos:end="225:28">&lt;=</operator><name pos:start="225:29" pos:end="225:30">st</name></expr>;</condition> <incr pos:start="225:33" pos:end="225:35"><expr pos:start="225:33" pos:end="225:35"><name pos:start="225:33" pos:end="225:33">i</name><operator pos:start="225:34" pos:end="225:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="227:21" pos:end="227:92"><block_content pos:start="227:21" pos:end="227:92">

                    <expr_stmt pos:start="227:21" pos:end="227:92"><expr pos:start="227:21" pos:end="227:91"><operator pos:start="227:21" pos:end="227:21">*</operator><name pos:start="227:22" pos:end="227:28">samples</name><operator pos:start="227:29" pos:end="227:30">++</operator> <operator pos:start="227:32" pos:end="227:32">=</operator> <call pos:start="227:34" pos:end="227:91"><name pos:start="227:34" pos:end="227:56">adpcm_ima_expand_nibble</name><argument_list pos:start="227:57" pos:end="227:91">(<argument pos:start="227:58" pos:end="227:70"><expr pos:start="227:58" pos:end="227:70"><operator pos:start="227:58" pos:end="227:58">&amp;</operator><name pos:start="227:59" pos:end="227:70"><name pos:start="227:59" pos:end="227:59">c</name><operator pos:start="227:60" pos:end="227:61">-&gt;</operator><name pos:start="227:62" pos:end="227:67">status</name><index pos:start="227:68" pos:end="227:70">[<expr pos:start="227:69" pos:end="227:69"><name pos:start="227:69" pos:end="227:69">i</name></expr>]</index></name></expr></argument>, <argument pos:start="227:73" pos:end="227:87"><expr pos:start="227:73" pos:end="227:87"><name pos:start="227:73" pos:end="227:80"><name pos:start="227:73" pos:end="227:75">src</name><index pos:start="227:76" pos:end="227:80">[<expr pos:start="227:77" pos:end="227:79"><literal type="number" pos:start="227:77" pos:end="227:77">4</literal><operator pos:start="227:78" pos:end="227:78">*</operator><name pos:start="227:79" pos:end="227:79">i</name></expr>]</index></name> <operator pos:start="227:82" pos:end="227:82">&amp;</operator> <literal type="number" pos:start="227:84" pos:end="227:87">0x0F</literal></expr></argument>, <argument pos:start="227:90" pos:end="227:90"><expr pos:start="227:90" pos:end="227:90"><literal type="number" pos:start="227:90" pos:end="227:90">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <for pos:start="229:17" pos:end="231:92">for<control pos:start="229:20" pos:end="229:36">(<init pos:start="229:21" pos:end="229:24"><expr pos:start="229:21" pos:end="229:23"><name pos:start="229:21" pos:end="229:21">i</name><operator pos:start="229:22" pos:end="229:22">=</operator><literal type="number" pos:start="229:23" pos:end="229:23">0</literal></expr>;</init> <condition pos:start="229:26" pos:end="229:31"><expr pos:start="229:26" pos:end="229:30"><name pos:start="229:26" pos:end="229:26">i</name><operator pos:start="229:27" pos:end="229:28">&lt;=</operator><name pos:start="229:29" pos:end="229:30">st</name></expr>;</condition> <incr pos:start="229:33" pos:end="229:35"><expr pos:start="229:33" pos:end="229:35"><name pos:start="229:33" pos:end="229:33">i</name><operator pos:start="229:34" pos:end="229:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="231:21" pos:end="231:92"><block_content pos:start="231:21" pos:end="231:92">

                    <expr_stmt pos:start="231:21" pos:end="231:92"><expr pos:start="231:21" pos:end="231:91"><operator pos:start="231:21" pos:end="231:21">*</operator><name pos:start="231:22" pos:end="231:28">samples</name><operator pos:start="231:29" pos:end="231:30">++</operator> <operator pos:start="231:32" pos:end="231:32">=</operator> <call pos:start="231:34" pos:end="231:91"><name pos:start="231:34" pos:end="231:56">adpcm_ima_expand_nibble</name><argument_list pos:start="231:57" pos:end="231:91">(<argument pos:start="231:58" pos:end="231:70"><expr pos:start="231:58" pos:end="231:70"><operator pos:start="231:58" pos:end="231:58">&amp;</operator><name pos:start="231:59" pos:end="231:70"><name pos:start="231:59" pos:end="231:59">c</name><operator pos:start="231:60" pos:end="231:61">-&gt;</operator><name pos:start="231:62" pos:end="231:67">status</name><index pos:start="231:68" pos:end="231:70">[<expr pos:start="231:69" pos:end="231:69"><name pos:start="231:69" pos:end="231:69">i</name></expr>]</index></name></expr></argument>, <argument pos:start="231:73" pos:end="231:85"><expr pos:start="231:73" pos:end="231:85"><name pos:start="231:73" pos:end="231:80"><name pos:start="231:73" pos:end="231:75">src</name><index pos:start="231:76" pos:end="231:80">[<expr pos:start="231:77" pos:end="231:79"><literal type="number" pos:start="231:77" pos:end="231:77">4</literal><operator pos:start="231:78" pos:end="231:78">*</operator><name pos:start="231:79" pos:end="231:79">i</name></expr>]</index></name> <operator pos:start="231:82" pos:end="231:83">&gt;&gt;</operator> <literal type="number" pos:start="231:85" pos:end="231:85">4</literal></expr></argument>  , <argument pos:start="231:90" pos:end="231:90"><expr pos:start="231:90" pos:end="231:90"><literal type="number" pos:start="231:90" pos:end="231:90">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="233:17" pos:end="233:22"><expr pos:start="233:17" pos:end="233:21"><name pos:start="233:17" pos:end="233:19">src</name><operator pos:start="233:20" pos:end="233:21">++</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="237:13" pos:end="237:24"><expr pos:start="237:13" pos:end="237:23"><name pos:start="237:13" pos:end="237:15">src</name> <operator pos:start="237:17" pos:end="237:18">+=</operator> <literal type="number" pos:start="237:20" pos:end="237:20">4</literal><operator pos:start="237:21" pos:end="237:21">*</operator><name pos:start="237:22" pos:end="237:23">st</name></expr>;</expr_stmt>

        </block_content>}</block></while>

        <break pos:start="241:9" pos:end="241:14">break;</break>

    <case pos:start="243:5" pos:end="243:28">case <expr pos:start="243:10" pos:end="243:27"><name pos:start="243:10" pos:end="243:27">CODEC_ID_ADPCM_4XM</name></expr>:</case>

        <expr_stmt pos:start="245:9" pos:end="245:29"><expr pos:start="245:9" pos:end="245:28"><name pos:start="245:9" pos:end="245:10">cs</name> <operator pos:start="245:12" pos:end="245:12">=</operator> <operator pos:start="245:14" pos:end="245:14">&amp;</operator><operator pos:start="245:15" pos:end="245:15">(</operator><name pos:start="245:16" pos:end="245:27"><name pos:start="245:16" pos:end="245:16">c</name><operator pos:start="245:17" pos:end="245:18">-&gt;</operator><name pos:start="245:19" pos:end="245:24">status</name><index pos:start="245:25" pos:end="245:27">[<expr pos:start="245:26" pos:end="245:26"><literal type="number" pos:start="245:26" pos:end="245:26">0</literal></expr>]</index></name><operator pos:start="245:28" pos:end="245:28">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:64"><expr pos:start="247:9" pos:end="247:63"><name pos:start="247:9" pos:end="247:20"><name pos:start="247:9" pos:end="247:9">c</name><operator pos:start="247:10" pos:end="247:11">-&gt;</operator><name pos:start="247:12" pos:end="247:17">status</name><index pos:start="247:18" pos:end="247:20">[<expr pos:start="247:19" pos:end="247:19"><literal type="number" pos:start="247:19" pos:end="247:19">0</literal></expr>]</index></name><operator pos:start="247:21" pos:end="247:21">.</operator><name pos:start="247:22" pos:end="247:30">predictor</name><operator pos:start="247:31" pos:end="247:31">=</operator> <operator pos:start="247:33" pos:end="247:33">(</operator><name pos:start="247:34" pos:end="247:40">int16_t</name><operator pos:start="247:41" pos:end="247:41">)</operator><operator pos:start="247:42" pos:end="247:42">(</operator><name pos:start="247:43" pos:end="247:48"><name pos:start="247:43" pos:end="247:45">src</name><index pos:start="247:46" pos:end="247:48">[<expr pos:start="247:47" pos:end="247:47"><literal type="number" pos:start="247:47" pos:end="247:47">0</literal></expr>]</index></name> <operator pos:start="247:50" pos:end="247:50">+</operator> <operator pos:start="247:52" pos:end="247:52">(</operator><name pos:start="247:53" pos:end="247:58"><name pos:start="247:53" pos:end="247:55">src</name><index pos:start="247:56" pos:end="247:58">[<expr pos:start="247:57" pos:end="247:57"><literal type="number" pos:start="247:57" pos:end="247:57">1</literal></expr>]</index></name><operator pos:start="247:59" pos:end="247:60">&lt;&lt;</operator><literal type="number" pos:start="247:61" pos:end="247:61">8</literal><operator pos:start="247:62" pos:end="247:62">)</operator><operator pos:start="247:63" pos:end="247:63">)</operator></expr>;</expr_stmt> <expr_stmt pos:start="247:66" pos:end="247:72"><expr pos:start="247:66" pos:end="247:71"><name pos:start="247:66" pos:end="247:68">src</name><operator pos:start="247:69" pos:end="247:70">+=</operator><literal type="number" pos:start="247:71" pos:end="247:71">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="249:9" pos:end="253:9"><if pos:start="249:9" pos:end="253:9">if<condition pos:start="249:11" pos:end="249:14">(<expr pos:start="249:12" pos:end="249:13"><name pos:start="249:12" pos:end="249:13">st</name></expr>)</condition><block pos:start="249:15" pos:end="253:9">{<block_content pos:start="251:13" pos:end="251:76">

            <expr_stmt pos:start="251:13" pos:end="251:68"><expr pos:start="251:13" pos:end="251:67"><name pos:start="251:13" pos:end="251:24"><name pos:start="251:13" pos:end="251:13">c</name><operator pos:start="251:14" pos:end="251:15">-&gt;</operator><name pos:start="251:16" pos:end="251:21">status</name><index pos:start="251:22" pos:end="251:24">[<expr pos:start="251:23" pos:end="251:23"><literal type="number" pos:start="251:23" pos:end="251:23">1</literal></expr>]</index></name><operator pos:start="251:25" pos:end="251:25">.</operator><name pos:start="251:26" pos:end="251:34">predictor</name><operator pos:start="251:35" pos:end="251:35">=</operator> <operator pos:start="251:37" pos:end="251:37">(</operator><name pos:start="251:38" pos:end="251:44">int16_t</name><operator pos:start="251:45" pos:end="251:45">)</operator><operator pos:start="251:46" pos:end="251:46">(</operator><name pos:start="251:47" pos:end="251:52"><name pos:start="251:47" pos:end="251:49">src</name><index pos:start="251:50" pos:end="251:52">[<expr pos:start="251:51" pos:end="251:51"><literal type="number" pos:start="251:51" pos:end="251:51">0</literal></expr>]</index></name> <operator pos:start="251:54" pos:end="251:54">+</operator> <operator pos:start="251:56" pos:end="251:56">(</operator><name pos:start="251:57" pos:end="251:62"><name pos:start="251:57" pos:end="251:59">src</name><index pos:start="251:60" pos:end="251:62">[<expr pos:start="251:61" pos:end="251:61"><literal type="number" pos:start="251:61" pos:end="251:61">1</literal></expr>]</index></name><operator pos:start="251:63" pos:end="251:64">&lt;&lt;</operator><literal type="number" pos:start="251:65" pos:end="251:65">8</literal><operator pos:start="251:66" pos:end="251:66">)</operator><operator pos:start="251:67" pos:end="251:67">)</operator></expr>;</expr_stmt> <expr_stmt pos:start="251:70" pos:end="251:76"><expr pos:start="251:70" pos:end="251:75"><name pos:start="251:70" pos:end="251:72">src</name><operator pos:start="251:73" pos:end="251:74">+=</operator><literal type="number" pos:start="251:75" pos:end="251:75">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:65"><expr pos:start="255:9" pos:end="255:64"><name pos:start="255:9" pos:end="255:20"><name pos:start="255:9" pos:end="255:9">c</name><operator pos:start="255:10" pos:end="255:11">-&gt;</operator><name pos:start="255:12" pos:end="255:17">status</name><index pos:start="255:18" pos:end="255:20">[<expr pos:start="255:19" pos:end="255:19"><literal type="number" pos:start="255:19" pos:end="255:19">0</literal></expr>]</index></name><operator pos:start="255:21" pos:end="255:21">.</operator><name pos:start="255:22" pos:end="255:31">step_index</name><operator pos:start="255:32" pos:end="255:32">=</operator> <operator pos:start="255:34" pos:end="255:34">(</operator><name pos:start="255:35" pos:end="255:41">int16_t</name><operator pos:start="255:42" pos:end="255:42">)</operator><operator pos:start="255:43" pos:end="255:43">(</operator><name pos:start="255:44" pos:end="255:49"><name pos:start="255:44" pos:end="255:46">src</name><index pos:start="255:47" pos:end="255:49">[<expr pos:start="255:48" pos:end="255:48"><literal type="number" pos:start="255:48" pos:end="255:48">0</literal></expr>]</index></name> <operator pos:start="255:51" pos:end="255:51">+</operator> <operator pos:start="255:53" pos:end="255:53">(</operator><name pos:start="255:54" pos:end="255:59"><name pos:start="255:54" pos:end="255:56">src</name><index pos:start="255:57" pos:end="255:59">[<expr pos:start="255:58" pos:end="255:58"><literal type="number" pos:start="255:58" pos:end="255:58">1</literal></expr>]</index></name><operator pos:start="255:60" pos:end="255:61">&lt;&lt;</operator><literal type="number" pos:start="255:62" pos:end="255:62">8</literal><operator pos:start="255:63" pos:end="255:63">)</operator><operator pos:start="255:64" pos:end="255:64">)</operator></expr>;</expr_stmt> <expr_stmt pos:start="255:67" pos:end="255:73"><expr pos:start="255:67" pos:end="255:72"><name pos:start="255:67" pos:end="255:69">src</name><operator pos:start="255:70" pos:end="255:71">+=</operator><literal type="number" pos:start="255:72" pos:end="255:72">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="257:9" pos:end="261:9"><if pos:start="257:9" pos:end="261:9">if<condition pos:start="257:11" pos:end="257:14">(<expr pos:start="257:12" pos:end="257:13"><name pos:start="257:12" pos:end="257:13">st</name></expr>)</condition><block pos:start="257:15" pos:end="261:9">{<block_content pos:start="259:13" pos:end="259:77">

            <expr_stmt pos:start="259:13" pos:end="259:69"><expr pos:start="259:13" pos:end="259:68"><name pos:start="259:13" pos:end="259:24"><name pos:start="259:13" pos:end="259:13">c</name><operator pos:start="259:14" pos:end="259:15">-&gt;</operator><name pos:start="259:16" pos:end="259:21">status</name><index pos:start="259:22" pos:end="259:24">[<expr pos:start="259:23" pos:end="259:23"><literal type="number" pos:start="259:23" pos:end="259:23">1</literal></expr>]</index></name><operator pos:start="259:25" pos:end="259:25">.</operator><name pos:start="259:26" pos:end="259:35">step_index</name><operator pos:start="259:36" pos:end="259:36">=</operator> <operator pos:start="259:38" pos:end="259:38">(</operator><name pos:start="259:39" pos:end="259:45">int16_t</name><operator pos:start="259:46" pos:end="259:46">)</operator><operator pos:start="259:47" pos:end="259:47">(</operator><name pos:start="259:48" pos:end="259:53"><name pos:start="259:48" pos:end="259:50">src</name><index pos:start="259:51" pos:end="259:53">[<expr pos:start="259:52" pos:end="259:52"><literal type="number" pos:start="259:52" pos:end="259:52">0</literal></expr>]</index></name> <operator pos:start="259:55" pos:end="259:55">+</operator> <operator pos:start="259:57" pos:end="259:57">(</operator><name pos:start="259:58" pos:end="259:63"><name pos:start="259:58" pos:end="259:60">src</name><index pos:start="259:61" pos:end="259:63">[<expr pos:start="259:62" pos:end="259:62"><literal type="number" pos:start="259:62" pos:end="259:62">1</literal></expr>]</index></name><operator pos:start="259:64" pos:end="259:65">&lt;&lt;</operator><literal type="number" pos:start="259:66" pos:end="259:66">8</literal><operator pos:start="259:67" pos:end="259:67">)</operator><operator pos:start="259:68" pos:end="259:68">)</operator></expr>;</expr_stmt> <expr_stmt pos:start="259:71" pos:end="259:77"><expr pos:start="259:71" pos:end="259:76"><name pos:start="259:71" pos:end="259:73">src</name><operator pos:start="259:74" pos:end="259:75">+=</operator><literal type="number" pos:start="259:76" pos:end="259:76">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="263:9" pos:end="263:51"><if pos:start="263:9" pos:end="263:51">if <condition pos:start="263:12" pos:end="263:31">(<expr pos:start="263:13" pos:end="263:30"><name pos:start="263:13" pos:end="263:26"><name pos:start="263:13" pos:end="263:14">cs</name><operator pos:start="263:15" pos:end="263:16">-&gt;</operator><name pos:start="263:17" pos:end="263:26">step_index</name></name> <operator pos:start="263:28" pos:end="263:28">&lt;</operator> <literal type="number" pos:start="263:30" pos:end="263:30">0</literal></expr>)</condition><block type="pseudo" pos:start="263:33" pos:end="263:51"><block_content pos:start="263:33" pos:end="263:51"> <expr_stmt pos:start="263:33" pos:end="263:51"><expr pos:start="263:33" pos:end="263:50"><name pos:start="263:33" pos:end="263:46"><name pos:start="263:33" pos:end="263:34">cs</name><operator pos:start="263:35" pos:end="263:36">-&gt;</operator><name pos:start="263:37" pos:end="263:46">step_index</name></name> <operator pos:start="263:48" pos:end="263:48">=</operator> <literal type="number" pos:start="263:50" pos:end="263:50">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="265:9" pos:end="265:53"><if pos:start="265:9" pos:end="265:53">if <condition pos:start="265:12" pos:end="265:32">(<expr pos:start="265:13" pos:end="265:31"><name pos:start="265:13" pos:end="265:26"><name pos:start="265:13" pos:end="265:14">cs</name><operator pos:start="265:15" pos:end="265:16">-&gt;</operator><name pos:start="265:17" pos:end="265:26">step_index</name></name> <operator pos:start="265:28" pos:end="265:28">&gt;</operator> <literal type="number" pos:start="265:30" pos:end="265:31">88</literal></expr>)</condition><block type="pseudo" pos:start="265:34" pos:end="265:53"><block_content pos:start="265:34" pos:end="265:53"> <expr_stmt pos:start="265:34" pos:end="265:53"><expr pos:start="265:34" pos:end="265:52"><name pos:start="265:34" pos:end="265:47"><name pos:start="265:34" pos:end="265:35">cs</name><operator pos:start="265:36" pos:end="265:37">-&gt;</operator><name pos:start="265:38" pos:end="265:47">step_index</name></name> <operator pos:start="265:49" pos:end="265:49">=</operator> <literal type="number" pos:start="265:51" pos:end="265:52">88</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="269:9" pos:end="269:40"><expr pos:start="269:9" pos:end="269:39"><name pos:start="269:9" pos:end="269:9">m</name><operator pos:start="269:10" pos:end="269:10">=</operator> <operator pos:start="269:12" pos:end="269:12">(</operator><name pos:start="269:13" pos:end="269:20">buf_size</name> <operator pos:start="269:22" pos:end="269:22">-</operator> <operator pos:start="269:24" pos:end="269:24">(</operator><name pos:start="269:25" pos:end="269:27">src</name> <operator pos:start="269:29" pos:end="269:29">-</operator> <name pos:start="269:31" pos:end="269:33">buf</name><operator pos:start="269:34" pos:end="269:34">)</operator><operator pos:start="269:35" pos:end="269:35">)</operator><operator pos:start="269:36" pos:end="269:37">&gt;&gt;</operator><name pos:start="269:38" pos:end="269:39">st</name></expr>;</expr_stmt>

        <for pos:start="271:9" pos:end="285:9">for<control pos:start="271:12" pos:end="271:26">(<init pos:start="271:13" pos:end="271:16"><expr pos:start="271:13" pos:end="271:15"><name pos:start="271:13" pos:end="271:13">i</name><operator pos:start="271:14" pos:end="271:14">=</operator><literal type="number" pos:start="271:15" pos:end="271:15">0</literal></expr>;</init> <condition pos:start="271:18" pos:end="271:21"><expr pos:start="271:18" pos:end="271:20"><name pos:start="271:18" pos:end="271:18">i</name><operator pos:start="271:19" pos:end="271:19">&lt;</operator><name pos:start="271:20" pos:end="271:20">m</name></expr>;</condition> <incr pos:start="271:23" pos:end="271:25"><expr pos:start="271:23" pos:end="271:25"><name pos:start="271:23" pos:end="271:23">i</name><operator pos:start="271:24" pos:end="271:25">++</operator></expr></incr>)</control> <block pos:start="271:28" pos:end="285:9">{<block_content pos:start="273:13" pos:end="283:86">

            <expr_stmt pos:start="273:13" pos:end="273:82"><expr pos:start="273:13" pos:end="273:81"><operator pos:start="273:13" pos:end="273:13">*</operator><name pos:start="273:14" pos:end="273:20">samples</name><operator pos:start="273:21" pos:end="273:22">++</operator> <operator pos:start="273:24" pos:end="273:24">=</operator> <call pos:start="273:26" pos:end="273:81"><name pos:start="273:26" pos:end="273:48">adpcm_ima_expand_nibble</name><argument_list pos:start="273:49" pos:end="273:81">(<argument pos:start="273:50" pos:end="273:62"><expr pos:start="273:50" pos:end="273:62"><operator pos:start="273:50" pos:end="273:50">&amp;</operator><name pos:start="273:51" pos:end="273:62"><name pos:start="273:51" pos:end="273:51">c</name><operator pos:start="273:52" pos:end="273:53">-&gt;</operator><name pos:start="273:54" pos:end="273:59">status</name><index pos:start="273:60" pos:end="273:62">[<expr pos:start="273:61" pos:end="273:61"><literal type="number" pos:start="273:61" pos:end="273:61">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="273:65" pos:end="273:77"><expr pos:start="273:65" pos:end="273:77"><name pos:start="273:65" pos:end="273:70"><name pos:start="273:65" pos:end="273:67">src</name><index pos:start="273:68" pos:end="273:70">[<expr pos:start="273:69" pos:end="273:69"><name pos:start="273:69" pos:end="273:69">i</name></expr>]</index></name> <operator pos:start="273:72" pos:end="273:72">&amp;</operator> <literal type="number" pos:start="273:74" pos:end="273:77">0x0F</literal></expr></argument>, <argument pos:start="273:80" pos:end="273:80"><expr pos:start="273:80" pos:end="273:80"><literal type="number" pos:start="273:80" pos:end="273:80">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="275:13" pos:end="277:88"><if pos:start="275:13" pos:end="277:88">if <condition pos:start="275:16" pos:end="275:19">(<expr pos:start="275:17" pos:end="275:18"><name pos:start="275:17" pos:end="275:18">st</name></expr>)</condition><block type="pseudo" pos:start="277:17" pos:end="277:88"><block_content pos:start="277:17" pos:end="277:88">

                <expr_stmt pos:start="277:17" pos:end="277:88"><expr pos:start="277:17" pos:end="277:87"><operator pos:start="277:17" pos:end="277:17">*</operator><name pos:start="277:18" pos:end="277:24">samples</name><operator pos:start="277:25" pos:end="277:26">++</operator> <operator pos:start="277:28" pos:end="277:28">=</operator> <call pos:start="277:30" pos:end="277:87"><name pos:start="277:30" pos:end="277:52">adpcm_ima_expand_nibble</name><argument_list pos:start="277:53" pos:end="277:87">(<argument pos:start="277:54" pos:end="277:66"><expr pos:start="277:54" pos:end="277:66"><operator pos:start="277:54" pos:end="277:54">&amp;</operator><name pos:start="277:55" pos:end="277:66"><name pos:start="277:55" pos:end="277:55">c</name><operator pos:start="277:56" pos:end="277:57">-&gt;</operator><name pos:start="277:58" pos:end="277:63">status</name><index pos:start="277:64" pos:end="277:66">[<expr pos:start="277:65" pos:end="277:65"><literal type="number" pos:start="277:65" pos:end="277:65">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="277:69" pos:end="277:83"><expr pos:start="277:69" pos:end="277:83"><name pos:start="277:69" pos:end="277:76"><name pos:start="277:69" pos:end="277:71">src</name><index pos:start="277:72" pos:end="277:76">[<expr pos:start="277:73" pos:end="277:75"><name pos:start="277:73" pos:end="277:73">i</name><operator pos:start="277:74" pos:end="277:74">+</operator><name pos:start="277:75" pos:end="277:75">m</name></expr>]</index></name> <operator pos:start="277:78" pos:end="277:78">&amp;</operator> <literal type="number" pos:start="277:80" pos:end="277:83">0x0F</literal></expr></argument>, <argument pos:start="277:86" pos:end="277:86"><expr pos:start="277:86" pos:end="277:86"><literal type="number" pos:start="277:86" pos:end="277:86">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="279:13" pos:end="279:80"><expr pos:start="279:13" pos:end="279:79"><operator pos:start="279:13" pos:end="279:13">*</operator><name pos:start="279:14" pos:end="279:20">samples</name><operator pos:start="279:21" pos:end="279:22">++</operator> <operator pos:start="279:24" pos:end="279:24">=</operator> <call pos:start="279:26" pos:end="279:79"><name pos:start="279:26" pos:end="279:48">adpcm_ima_expand_nibble</name><argument_list pos:start="279:49" pos:end="279:79">(<argument pos:start="279:50" pos:end="279:62"><expr pos:start="279:50" pos:end="279:62"><operator pos:start="279:50" pos:end="279:50">&amp;</operator><name pos:start="279:51" pos:end="279:62"><name pos:start="279:51" pos:end="279:51">c</name><operator pos:start="279:52" pos:end="279:53">-&gt;</operator><name pos:start="279:54" pos:end="279:59">status</name><index pos:start="279:60" pos:end="279:62">[<expr pos:start="279:61" pos:end="279:61"><literal type="number" pos:start="279:61" pos:end="279:61">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="279:65" pos:end="279:75"><expr pos:start="279:65" pos:end="279:75"><name pos:start="279:65" pos:end="279:70"><name pos:start="279:65" pos:end="279:67">src</name><index pos:start="279:68" pos:end="279:70">[<expr pos:start="279:69" pos:end="279:69"><name pos:start="279:69" pos:end="279:69">i</name></expr>]</index></name> <operator pos:start="279:72" pos:end="279:73">&gt;&gt;</operator> <literal type="number" pos:start="279:75" pos:end="279:75">4</literal></expr></argument>, <argument pos:start="279:78" pos:end="279:78"><expr pos:start="279:78" pos:end="279:78"><literal type="number" pos:start="279:78" pos:end="279:78">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="281:13" pos:end="283:86"><if pos:start="281:13" pos:end="283:86">if <condition pos:start="281:16" pos:end="281:19">(<expr pos:start="281:17" pos:end="281:18"><name pos:start="281:17" pos:end="281:18">st</name></expr>)</condition><block type="pseudo" pos:start="283:17" pos:end="283:86"><block_content pos:start="283:17" pos:end="283:86">

                <expr_stmt pos:start="283:17" pos:end="283:86"><expr pos:start="283:17" pos:end="283:85"><operator pos:start="283:17" pos:end="283:17">*</operator><name pos:start="283:18" pos:end="283:24">samples</name><operator pos:start="283:25" pos:end="283:26">++</operator> <operator pos:start="283:28" pos:end="283:28">=</operator> <call pos:start="283:30" pos:end="283:85"><name pos:start="283:30" pos:end="283:52">adpcm_ima_expand_nibble</name><argument_list pos:start="283:53" pos:end="283:85">(<argument pos:start="283:54" pos:end="283:66"><expr pos:start="283:54" pos:end="283:66"><operator pos:start="283:54" pos:end="283:54">&amp;</operator><name pos:start="283:55" pos:end="283:66"><name pos:start="283:55" pos:end="283:55">c</name><operator pos:start="283:56" pos:end="283:57">-&gt;</operator><name pos:start="283:58" pos:end="283:63">status</name><index pos:start="283:64" pos:end="283:66">[<expr pos:start="283:65" pos:end="283:65"><literal type="number" pos:start="283:65" pos:end="283:65">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="283:69" pos:end="283:81"><expr pos:start="283:69" pos:end="283:81"><name pos:start="283:69" pos:end="283:76"><name pos:start="283:69" pos:end="283:71">src</name><index pos:start="283:72" pos:end="283:76">[<expr pos:start="283:73" pos:end="283:75"><name pos:start="283:73" pos:end="283:73">i</name><operator pos:start="283:74" pos:end="283:74">+</operator><name pos:start="283:75" pos:end="283:75">m</name></expr>]</index></name> <operator pos:start="283:78" pos:end="283:79">&gt;&gt;</operator> <literal type="number" pos:start="283:81" pos:end="283:81">4</literal></expr></argument>, <argument pos:start="283:84" pos:end="283:84"><expr pos:start="283:84" pos:end="283:84"><literal type="number" pos:start="283:84" pos:end="283:84">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="289:9" pos:end="289:21"><expr pos:start="289:9" pos:end="289:20"><name pos:start="289:9" pos:end="289:11">src</name> <operator pos:start="289:13" pos:end="289:14">+=</operator> <name pos:start="289:16" pos:end="289:16">m</name><operator pos:start="289:17" pos:end="289:18">&lt;&lt;</operator><name pos:start="289:19" pos:end="289:20">st</name></expr>;</expr_stmt>



        <break pos:start="293:9" pos:end="293:14">break;</break>

    <case pos:start="295:5" pos:end="295:27">case <expr pos:start="295:10" pos:end="295:26"><name pos:start="295:10" pos:end="295:26">CODEC_ID_ADPCM_MS</name></expr>:</case>

        <if_stmt pos:start="297:9" pos:end="299:42"><if pos:start="297:9" pos:end="299:42">if <condition pos:start="297:12" pos:end="297:69">(<expr pos:start="297:13" pos:end="297:68"><name pos:start="297:13" pos:end="297:30"><name pos:start="297:13" pos:end="297:17">avctx</name><operator pos:start="297:18" pos:end="297:19">-&gt;</operator><name pos:start="297:20" pos:end="297:30">block_align</name></name> <operator pos:start="297:32" pos:end="297:33">!=</operator> <literal type="number" pos:start="297:35" pos:end="297:35">0</literal> <operator pos:start="297:37" pos:end="297:38">&amp;&amp;</operator> <name pos:start="297:40" pos:end="297:47">buf_size</name> <operator pos:start="297:49" pos:end="297:49">&gt;</operator> <name pos:start="297:51" pos:end="297:68"><name pos:start="297:51" pos:end="297:55">avctx</name><operator pos:start="297:56" pos:end="297:57">-&gt;</operator><name pos:start="297:58" pos:end="297:68">block_align</name></name></expr>)</condition><block type="pseudo" pos:start="299:13" pos:end="299:42"><block_content pos:start="299:13" pos:end="299:42">

            <expr_stmt pos:start="299:13" pos:end="299:42"><expr pos:start="299:13" pos:end="299:41"><name pos:start="299:13" pos:end="299:20">buf_size</name> <operator pos:start="299:22" pos:end="299:22">=</operator> <name pos:start="299:24" pos:end="299:41"><name pos:start="299:24" pos:end="299:28">avctx</name><operator pos:start="299:29" pos:end="299:30">-&gt;</operator><name pos:start="299:31" pos:end="299:41">block_align</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="301:9" pos:end="301:43"><expr pos:start="301:9" pos:end="301:42"><name pos:start="301:9" pos:end="301:9">n</name> <operator pos:start="301:11" pos:end="301:11">=</operator> <name pos:start="301:13" pos:end="301:20">buf_size</name> <operator pos:start="301:22" pos:end="301:22">-</operator> <literal type="number" pos:start="301:24" pos:end="301:24">7</literal> <operator pos:start="301:26" pos:end="301:26">*</operator> <name pos:start="301:28" pos:end="301:42"><name pos:start="301:28" pos:end="301:32">avctx</name><operator pos:start="301:33" pos:end="301:34">-&gt;</operator><name pos:start="301:35" pos:end="301:42">channels</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="303:9" pos:end="305:22"><if pos:start="303:9" pos:end="305:22">if <condition pos:start="303:12" pos:end="303:18">(<expr pos:start="303:13" pos:end="303:17"><name pos:start="303:13" pos:end="303:13">n</name> <operator pos:start="303:15" pos:end="303:15">&lt;</operator> <literal type="number" pos:start="303:17" pos:end="303:17">0</literal></expr>)</condition><block type="pseudo" pos:start="305:13" pos:end="305:22"><block_content pos:start="305:13" pos:end="305:22">

            <return pos:start="305:13" pos:end="305:22">return <expr pos:start="305:20" pos:end="305:21"><operator pos:start="305:20" pos:end="305:20">-</operator><literal type="number" pos:start="305:21" pos:end="305:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:51"><expr pos:start="307:9" pos:end="307:50"><name pos:start="307:9" pos:end="307:26"><name pos:start="307:9" pos:end="307:23">block_predictor</name><index pos:start="307:24" pos:end="307:26">[<expr pos:start="307:25" pos:end="307:25"><literal type="number" pos:start="307:25" pos:end="307:25">0</literal></expr>]</index></name> <operator pos:start="307:28" pos:end="307:28">=</operator> <call pos:start="307:30" pos:end="307:50"><name pos:start="307:30" pos:end="307:36">av_clip</name><argument_list pos:start="307:37" pos:end="307:50">(<argument pos:start="307:38" pos:end="307:43"><expr pos:start="307:38" pos:end="307:43"><operator pos:start="307:38" pos:end="307:38">*</operator><name pos:start="307:39" pos:end="307:41">src</name><operator pos:start="307:42" pos:end="307:43">++</operator></expr></argument>, <argument pos:start="307:46" pos:end="307:46"><expr pos:start="307:46" pos:end="307:46"><literal type="number" pos:start="307:46" pos:end="307:46">0</literal></expr></argument>, <argument pos:start="307:49" pos:end="307:49"><expr pos:start="307:49" pos:end="307:49"><literal type="number" pos:start="307:49" pos:end="307:49">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:31"><expr pos:start="309:9" pos:end="309:30"><name pos:start="309:9" pos:end="309:26"><name pos:start="309:9" pos:end="309:23">block_predictor</name><index pos:start="309:24" pos:end="309:26">[<expr pos:start="309:25" pos:end="309:25"><literal type="number" pos:start="309:25" pos:end="309:25">1</literal></expr>]</index></name> <operator pos:start="309:28" pos:end="309:28">=</operator> <literal type="number" pos:start="309:30" pos:end="309:30">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="311:9" pos:end="313:55"><if pos:start="311:9" pos:end="313:55">if <condition pos:start="311:12" pos:end="311:15">(<expr pos:start="311:13" pos:end="311:14"><name pos:start="311:13" pos:end="311:14">st</name></expr>)</condition><block type="pseudo" pos:start="313:13" pos:end="313:55"><block_content pos:start="313:13" pos:end="313:55">

            <expr_stmt pos:start="313:13" pos:end="313:55"><expr pos:start="313:13" pos:end="313:54"><name pos:start="313:13" pos:end="313:30"><name pos:start="313:13" pos:end="313:27">block_predictor</name><index pos:start="313:28" pos:end="313:30">[<expr pos:start="313:29" pos:end="313:29"><literal type="number" pos:start="313:29" pos:end="313:29">1</literal></expr>]</index></name> <operator pos:start="313:32" pos:end="313:32">=</operator> <call pos:start="313:34" pos:end="313:54"><name pos:start="313:34" pos:end="313:40">av_clip</name><argument_list pos:start="313:41" pos:end="313:54">(<argument pos:start="313:42" pos:end="313:47"><expr pos:start="313:42" pos:end="313:47"><operator pos:start="313:42" pos:end="313:42">*</operator><name pos:start="313:43" pos:end="313:45">src</name><operator pos:start="313:46" pos:end="313:47">++</operator></expr></argument>, <argument pos:start="313:50" pos:end="313:50"><expr pos:start="313:50" pos:end="313:50"><literal type="number" pos:start="313:50" pos:end="313:50">0</literal></expr></argument>, <argument pos:start="313:53" pos:end="313:53"><expr pos:start="313:53" pos:end="313:53"><literal type="number" pos:start="313:53" pos:end="313:53">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:82"><expr pos:start="315:9" pos:end="315:81"><name pos:start="315:9" pos:end="315:20"><name pos:start="315:9" pos:end="315:9">c</name><operator pos:start="315:10" pos:end="315:11">-&gt;</operator><name pos:start="315:12" pos:end="315:17">status</name><index pos:start="315:18" pos:end="315:20">[<expr pos:start="315:19" pos:end="315:19"><literal type="number" pos:start="315:19" pos:end="315:19">0</literal></expr>]</index></name><operator pos:start="315:21" pos:end="315:21">.</operator><name pos:start="315:22" pos:end="315:27">idelta</name> <operator pos:start="315:29" pos:end="315:29">=</operator> <operator pos:start="315:31" pos:end="315:31">(</operator><name pos:start="315:32" pos:end="315:38">int16_t</name><operator pos:start="315:39" pos:end="315:39">)</operator><operator pos:start="315:40" pos:end="315:40">(</operator><operator pos:start="315:41" pos:end="315:41">(</operator><operator pos:start="315:42" pos:end="315:42">*</operator><name pos:start="315:43" pos:end="315:45">src</name> <operator pos:start="315:47" pos:end="315:47">&amp;</operator> <literal type="number" pos:start="315:49" pos:end="315:52">0xFF</literal><operator pos:start="315:53" pos:end="315:53">)</operator> <operator pos:start="315:55" pos:end="315:55">|</operator> <operator pos:start="315:57" pos:end="315:57">(</operator><operator pos:start="315:58" pos:end="315:58">(</operator><name pos:start="315:59" pos:end="315:64"><name pos:start="315:59" pos:end="315:61">src</name><index pos:start="315:62" pos:end="315:64">[<expr pos:start="315:63" pos:end="315:63"><literal type="number" pos:start="315:63" pos:end="315:63">1</literal></expr>]</index></name> <operator pos:start="315:66" pos:end="315:67">&lt;&lt;</operator> <literal type="number" pos:start="315:69" pos:end="315:69">8</literal><operator pos:start="315:70" pos:end="315:70">)</operator> <operator pos:start="315:72" pos:end="315:72">&amp;</operator> <literal type="number" pos:start="315:74" pos:end="315:79">0xFF00</literal><operator pos:start="315:80" pos:end="315:80">)</operator><operator pos:start="315:81" pos:end="315:81">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:15"><expr pos:start="317:9" pos:end="317:14"><name pos:start="317:9" pos:end="317:11">src</name><operator pos:start="317:12" pos:end="317:13">+=</operator><literal type="number" pos:start="317:14" pos:end="317:14">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="319:9" pos:end="325:9"><if pos:start="319:9" pos:end="325:9">if <condition pos:start="319:12" pos:end="319:15">(<expr pos:start="319:13" pos:end="319:14"><name pos:start="319:13" pos:end="319:14">st</name></expr>)</condition><block pos:start="319:16" pos:end="325:9">{<block_content pos:start="321:13" pos:end="323:19">

            <expr_stmt pos:start="321:13" pos:end="321:86"><expr pos:start="321:13" pos:end="321:85"><name pos:start="321:13" pos:end="321:24"><name pos:start="321:13" pos:end="321:13">c</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:21">status</name><index pos:start="321:22" pos:end="321:24">[<expr pos:start="321:23" pos:end="321:23"><literal type="number" pos:start="321:23" pos:end="321:23">1</literal></expr>]</index></name><operator pos:start="321:25" pos:end="321:25">.</operator><name pos:start="321:26" pos:end="321:31">idelta</name> <operator pos:start="321:33" pos:end="321:33">=</operator> <operator pos:start="321:35" pos:end="321:35">(</operator><name pos:start="321:36" pos:end="321:42">int16_t</name><operator pos:start="321:43" pos:end="321:43">)</operator><operator pos:start="321:44" pos:end="321:44">(</operator><operator pos:start="321:45" pos:end="321:45">(</operator><operator pos:start="321:46" pos:end="321:46">*</operator><name pos:start="321:47" pos:end="321:49">src</name> <operator pos:start="321:51" pos:end="321:51">&amp;</operator> <literal type="number" pos:start="321:53" pos:end="321:56">0xFF</literal><operator pos:start="321:57" pos:end="321:57">)</operator> <operator pos:start="321:59" pos:end="321:59">|</operator> <operator pos:start="321:61" pos:end="321:61">(</operator><operator pos:start="321:62" pos:end="321:62">(</operator><name pos:start="321:63" pos:end="321:68"><name pos:start="321:63" pos:end="321:65">src</name><index pos:start="321:66" pos:end="321:68">[<expr pos:start="321:67" pos:end="321:67"><literal type="number" pos:start="321:67" pos:end="321:67">1</literal></expr>]</index></name> <operator pos:start="321:70" pos:end="321:71">&lt;&lt;</operator> <literal type="number" pos:start="321:73" pos:end="321:73">8</literal><operator pos:start="321:74" pos:end="321:74">)</operator> <operator pos:start="321:76" pos:end="321:76">&amp;</operator> <literal type="number" pos:start="321:78" pos:end="321:83">0xFF00</literal><operator pos:start="321:84" pos:end="321:84">)</operator><operator pos:start="321:85" pos:end="321:85">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:19"><expr pos:start="323:13" pos:end="323:18"><name pos:start="323:13" pos:end="323:15">src</name><operator pos:start="323:16" pos:end="323:17">+=</operator><literal type="number" pos:start="323:18" pos:end="323:18">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="327:9" pos:end="327:62"><expr pos:start="327:9" pos:end="327:61"><name pos:start="327:9" pos:end="327:20"><name pos:start="327:9" pos:end="327:9">c</name><operator pos:start="327:10" pos:end="327:11">-&gt;</operator><name pos:start="327:12" pos:end="327:17">status</name><index pos:start="327:18" pos:end="327:20">[<expr pos:start="327:19" pos:end="327:19"><literal type="number" pos:start="327:19" pos:end="327:19">0</literal></expr>]</index></name><operator pos:start="327:21" pos:end="327:21">.</operator><name pos:start="327:22" pos:end="327:27">coeff1</name> <operator pos:start="327:29" pos:end="327:29">=</operator> <name pos:start="327:31" pos:end="327:61"><name pos:start="327:31" pos:end="327:41">AdaptCoeff1</name><index pos:start="327:42" pos:end="327:61">[<expr pos:start="327:43" pos:end="327:60"><name pos:start="327:43" pos:end="327:60"><name pos:start="327:43" pos:end="327:57">block_predictor</name><index pos:start="327:58" pos:end="327:60">[<expr pos:start="327:59" pos:end="327:59"><literal type="number" pos:start="327:59" pos:end="327:59">0</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="329:9" pos:end="329:62"><expr pos:start="329:9" pos:end="329:61"><name pos:start="329:9" pos:end="329:20"><name pos:start="329:9" pos:end="329:9">c</name><operator pos:start="329:10" pos:end="329:11">-&gt;</operator><name pos:start="329:12" pos:end="329:17">status</name><index pos:start="329:18" pos:end="329:20">[<expr pos:start="329:19" pos:end="329:19"><literal type="number" pos:start="329:19" pos:end="329:19">0</literal></expr>]</index></name><operator pos:start="329:21" pos:end="329:21">.</operator><name pos:start="329:22" pos:end="329:27">coeff2</name> <operator pos:start="329:29" pos:end="329:29">=</operator> <name pos:start="329:31" pos:end="329:61"><name pos:start="329:31" pos:end="329:41">AdaptCoeff2</name><index pos:start="329:42" pos:end="329:61">[<expr pos:start="329:43" pos:end="329:60"><name pos:start="329:43" pos:end="329:60"><name pos:start="329:43" pos:end="329:57">block_predictor</name><index pos:start="329:58" pos:end="329:60">[<expr pos:start="329:59" pos:end="329:59"><literal type="number" pos:start="329:59" pos:end="329:59">0</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="331:9" pos:end="331:62"><expr pos:start="331:9" pos:end="331:61"><name pos:start="331:9" pos:end="331:20"><name pos:start="331:9" pos:end="331:9">c</name><operator pos:start="331:10" pos:end="331:11">-&gt;</operator><name pos:start="331:12" pos:end="331:17">status</name><index pos:start="331:18" pos:end="331:20">[<expr pos:start="331:19" pos:end="331:19"><literal type="number" pos:start="331:19" pos:end="331:19">1</literal></expr>]</index></name><operator pos:start="331:21" pos:end="331:21">.</operator><name pos:start="331:22" pos:end="331:27">coeff1</name> <operator pos:start="331:29" pos:end="331:29">=</operator> <name pos:start="331:31" pos:end="331:61"><name pos:start="331:31" pos:end="331:41">AdaptCoeff1</name><index pos:start="331:42" pos:end="331:61">[<expr pos:start="331:43" pos:end="331:60"><name pos:start="331:43" pos:end="331:60"><name pos:start="331:43" pos:end="331:57">block_predictor</name><index pos:start="331:58" pos:end="331:60">[<expr pos:start="331:59" pos:end="331:59"><literal type="number" pos:start="331:59" pos:end="331:59">1</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:62"><expr pos:start="333:9" pos:end="333:61"><name pos:start="333:9" pos:end="333:20"><name pos:start="333:9" pos:end="333:9">c</name><operator pos:start="333:10" pos:end="333:11">-&gt;</operator><name pos:start="333:12" pos:end="333:17">status</name><index pos:start="333:18" pos:end="333:20">[<expr pos:start="333:19" pos:end="333:19"><literal type="number" pos:start="333:19" pos:end="333:19">1</literal></expr>]</index></name><operator pos:start="333:21" pos:end="333:21">.</operator><name pos:start="333:22" pos:end="333:27">coeff2</name> <operator pos:start="333:29" pos:end="333:29">=</operator> <name pos:start="333:31" pos:end="333:61"><name pos:start="333:31" pos:end="333:41">AdaptCoeff2</name><index pos:start="333:42" pos:end="333:61">[<expr pos:start="333:43" pos:end="333:60"><name pos:start="333:43" pos:end="333:60"><name pos:start="333:43" pos:end="333:57">block_predictor</name><index pos:start="333:58" pos:end="333:60">[<expr pos:start="333:59" pos:end="333:59"><literal type="number" pos:start="333:59" pos:end="333:59">1</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="337:9" pos:end="337:74"><expr pos:start="337:9" pos:end="337:73"><name pos:start="337:9" pos:end="337:20"><name pos:start="337:9" pos:end="337:9">c</name><operator pos:start="337:10" pos:end="337:11">-&gt;</operator><name pos:start="337:12" pos:end="337:17">status</name><index pos:start="337:18" pos:end="337:20">[<expr pos:start="337:19" pos:end="337:19"><literal type="number" pos:start="337:19" pos:end="337:19">0</literal></expr>]</index></name><operator pos:start="337:21" pos:end="337:21">.</operator><name pos:start="337:22" pos:end="337:28">sample1</name> <operator pos:start="337:30" pos:end="337:30">=</operator> <operator pos:start="337:32" pos:end="337:32">(</operator><operator pos:start="337:33" pos:end="337:33">(</operator><operator pos:start="337:34" pos:end="337:34">*</operator><name pos:start="337:35" pos:end="337:37">src</name> <operator pos:start="337:39" pos:end="337:39">&amp;</operator> <literal type="number" pos:start="337:41" pos:end="337:44">0xFF</literal><operator pos:start="337:45" pos:end="337:45">)</operator> <operator pos:start="337:47" pos:end="337:47">|</operator> <operator pos:start="337:49" pos:end="337:49">(</operator><operator pos:start="337:50" pos:end="337:50">(</operator><name pos:start="337:51" pos:end="337:56"><name pos:start="337:51" pos:end="337:53">src</name><index pos:start="337:54" pos:end="337:56">[<expr pos:start="337:55" pos:end="337:55"><literal type="number" pos:start="337:55" pos:end="337:55">1</literal></expr>]</index></name> <operator pos:start="337:58" pos:end="337:59">&lt;&lt;</operator> <literal type="number" pos:start="337:61" pos:end="337:61">8</literal><operator pos:start="337:62" pos:end="337:62">)</operator> <operator pos:start="337:64" pos:end="337:64">&amp;</operator> <literal type="number" pos:start="337:66" pos:end="337:71">0xFF00</literal><operator pos:start="337:72" pos:end="337:72">)</operator><operator pos:start="337:73" pos:end="337:73">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="339:9" pos:end="339:15"><expr pos:start="339:9" pos:end="339:14"><name pos:start="339:9" pos:end="339:11">src</name><operator pos:start="339:12" pos:end="339:13">+=</operator><literal type="number" pos:start="339:14" pos:end="339:14">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="341:9" pos:end="341:82"><if pos:start="341:9" pos:end="341:82">if <condition pos:start="341:12" pos:end="341:15">(<expr pos:start="341:13" pos:end="341:14"><name pos:start="341:13" pos:end="341:14">st</name></expr>)</condition><block type="pseudo" pos:start="341:17" pos:end="341:82"><block_content pos:start="341:17" pos:end="341:82"> <expr_stmt pos:start="341:17" pos:end="341:82"><expr pos:start="341:17" pos:end="341:81"><name pos:start="341:17" pos:end="341:28"><name pos:start="341:17" pos:end="341:17">c</name><operator pos:start="341:18" pos:end="341:19">-&gt;</operator><name pos:start="341:20" pos:end="341:25">status</name><index pos:start="341:26" pos:end="341:28">[<expr pos:start="341:27" pos:end="341:27"><literal type="number" pos:start="341:27" pos:end="341:27">1</literal></expr>]</index></name><operator pos:start="341:29" pos:end="341:29">.</operator><name pos:start="341:30" pos:end="341:36">sample1</name> <operator pos:start="341:38" pos:end="341:38">=</operator> <operator pos:start="341:40" pos:end="341:40">(</operator><operator pos:start="341:41" pos:end="341:41">(</operator><operator pos:start="341:42" pos:end="341:42">*</operator><name pos:start="341:43" pos:end="341:45">src</name> <operator pos:start="341:47" pos:end="341:47">&amp;</operator> <literal type="number" pos:start="341:49" pos:end="341:52">0xFF</literal><operator pos:start="341:53" pos:end="341:53">)</operator> <operator pos:start="341:55" pos:end="341:55">|</operator> <operator pos:start="341:57" pos:end="341:57">(</operator><operator pos:start="341:58" pos:end="341:58">(</operator><name pos:start="341:59" pos:end="341:64"><name pos:start="341:59" pos:end="341:61">src</name><index pos:start="341:62" pos:end="341:64">[<expr pos:start="341:63" pos:end="341:63"><literal type="number" pos:start="341:63" pos:end="341:63">1</literal></expr>]</index></name> <operator pos:start="341:66" pos:end="341:67">&lt;&lt;</operator> <literal type="number" pos:start="341:69" pos:end="341:69">8</literal><operator pos:start="341:70" pos:end="341:70">)</operator> <operator pos:start="341:72" pos:end="341:72">&amp;</operator> <literal type="number" pos:start="341:74" pos:end="341:79">0xFF00</literal><operator pos:start="341:80" pos:end="341:80">)</operator><operator pos:start="341:81" pos:end="341:81">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="343:9" pos:end="343:23"><if pos:start="343:9" pos:end="343:23">if <condition pos:start="343:12" pos:end="343:15">(<expr pos:start="343:13" pos:end="343:14"><name pos:start="343:13" pos:end="343:14">st</name></expr>)</condition><block type="pseudo" pos:start="343:17" pos:end="343:23"><block_content pos:start="343:17" pos:end="343:23"> <expr_stmt pos:start="343:17" pos:end="343:23"><expr pos:start="343:17" pos:end="343:22"><name pos:start="343:17" pos:end="343:19">src</name><operator pos:start="343:20" pos:end="343:21">+=</operator><literal type="number" pos:start="343:22" pos:end="343:22">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="345:9" pos:end="345:74"><expr pos:start="345:9" pos:end="345:73"><name pos:start="345:9" pos:end="345:20"><name pos:start="345:9" pos:end="345:9">c</name><operator pos:start="345:10" pos:end="345:11">-&gt;</operator><name pos:start="345:12" pos:end="345:17">status</name><index pos:start="345:18" pos:end="345:20">[<expr pos:start="345:19" pos:end="345:19"><literal type="number" pos:start="345:19" pos:end="345:19">0</literal></expr>]</index></name><operator pos:start="345:21" pos:end="345:21">.</operator><name pos:start="345:22" pos:end="345:28">sample2</name> <operator pos:start="345:30" pos:end="345:30">=</operator> <operator pos:start="345:32" pos:end="345:32">(</operator><operator pos:start="345:33" pos:end="345:33">(</operator><operator pos:start="345:34" pos:end="345:34">*</operator><name pos:start="345:35" pos:end="345:37">src</name> <operator pos:start="345:39" pos:end="345:39">&amp;</operator> <literal type="number" pos:start="345:41" pos:end="345:44">0xFF</literal><operator pos:start="345:45" pos:end="345:45">)</operator> <operator pos:start="345:47" pos:end="345:47">|</operator> <operator pos:start="345:49" pos:end="345:49">(</operator><operator pos:start="345:50" pos:end="345:50">(</operator><name pos:start="345:51" pos:end="345:56"><name pos:start="345:51" pos:end="345:53">src</name><index pos:start="345:54" pos:end="345:56">[<expr pos:start="345:55" pos:end="345:55"><literal type="number" pos:start="345:55" pos:end="345:55">1</literal></expr>]</index></name> <operator pos:start="345:58" pos:end="345:59">&lt;&lt;</operator> <literal type="number" pos:start="345:61" pos:end="345:61">8</literal><operator pos:start="345:62" pos:end="345:62">)</operator> <operator pos:start="345:64" pos:end="345:64">&amp;</operator> <literal type="number" pos:start="345:66" pos:end="345:71">0xFF00</literal><operator pos:start="345:72" pos:end="345:72">)</operator><operator pos:start="345:73" pos:end="345:73">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="347:9" pos:end="347:15"><expr pos:start="347:9" pos:end="347:14"><name pos:start="347:9" pos:end="347:11">src</name><operator pos:start="347:12" pos:end="347:13">+=</operator><literal type="number" pos:start="347:14" pos:end="347:14">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="349:9" pos:end="349:82"><if pos:start="349:9" pos:end="349:82">if <condition pos:start="349:12" pos:end="349:15">(<expr pos:start="349:13" pos:end="349:14"><name pos:start="349:13" pos:end="349:14">st</name></expr>)</condition><block type="pseudo" pos:start="349:17" pos:end="349:82"><block_content pos:start="349:17" pos:end="349:82"> <expr_stmt pos:start="349:17" pos:end="349:82"><expr pos:start="349:17" pos:end="349:81"><name pos:start="349:17" pos:end="349:28"><name pos:start="349:17" pos:end="349:17">c</name><operator pos:start="349:18" pos:end="349:19">-&gt;</operator><name pos:start="349:20" pos:end="349:25">status</name><index pos:start="349:26" pos:end="349:28">[<expr pos:start="349:27" pos:end="349:27"><literal type="number" pos:start="349:27" pos:end="349:27">1</literal></expr>]</index></name><operator pos:start="349:29" pos:end="349:29">.</operator><name pos:start="349:30" pos:end="349:36">sample2</name> <operator pos:start="349:38" pos:end="349:38">=</operator> <operator pos:start="349:40" pos:end="349:40">(</operator><operator pos:start="349:41" pos:end="349:41">(</operator><operator pos:start="349:42" pos:end="349:42">*</operator><name pos:start="349:43" pos:end="349:45">src</name> <operator pos:start="349:47" pos:end="349:47">&amp;</operator> <literal type="number" pos:start="349:49" pos:end="349:52">0xFF</literal><operator pos:start="349:53" pos:end="349:53">)</operator> <operator pos:start="349:55" pos:end="349:55">|</operator> <operator pos:start="349:57" pos:end="349:57">(</operator><operator pos:start="349:58" pos:end="349:58">(</operator><name pos:start="349:59" pos:end="349:64"><name pos:start="349:59" pos:end="349:61">src</name><index pos:start="349:62" pos:end="349:64">[<expr pos:start="349:63" pos:end="349:63"><literal type="number" pos:start="349:63" pos:end="349:63">1</literal></expr>]</index></name> <operator pos:start="349:66" pos:end="349:67">&lt;&lt;</operator> <literal type="number" pos:start="349:69" pos:end="349:69">8</literal><operator pos:start="349:70" pos:end="349:70">)</operator> <operator pos:start="349:72" pos:end="349:72">&amp;</operator> <literal type="number" pos:start="349:74" pos:end="349:79">0xFF00</literal><operator pos:start="349:80" pos:end="349:80">)</operator><operator pos:start="349:81" pos:end="349:81">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="351:9" pos:end="351:23"><if pos:start="351:9" pos:end="351:23">if <condition pos:start="351:12" pos:end="351:15">(<expr pos:start="351:13" pos:end="351:14"><name pos:start="351:13" pos:end="351:14">st</name></expr>)</condition><block type="pseudo" pos:start="351:17" pos:end="351:23"><block_content pos:start="351:17" pos:end="351:23"> <expr_stmt pos:start="351:17" pos:end="351:23"><expr pos:start="351:17" pos:end="351:22"><name pos:start="351:17" pos:end="351:19">src</name><operator pos:start="351:20" pos:end="351:21">+=</operator><literal type="number" pos:start="351:22" pos:end="351:22">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="355:9" pos:end="355:42"><expr pos:start="355:9" pos:end="355:41"><operator pos:start="355:9" pos:end="355:9">*</operator><name pos:start="355:10" pos:end="355:16">samples</name><operator pos:start="355:17" pos:end="355:18">++</operator> <operator pos:start="355:20" pos:end="355:20">=</operator> <name pos:start="355:22" pos:end="355:33"><name pos:start="355:22" pos:end="355:22">c</name><operator pos:start="355:23" pos:end="355:24">-&gt;</operator><name pos:start="355:25" pos:end="355:30">status</name><index pos:start="355:31" pos:end="355:33">[<expr pos:start="355:32" pos:end="355:32"><literal type="number" pos:start="355:32" pos:end="355:32">0</literal></expr>]</index></name><operator pos:start="355:34" pos:end="355:34">.</operator><name pos:start="355:35" pos:end="355:41">sample1</name></expr>;</expr_stmt>

        <if_stmt pos:start="357:9" pos:end="357:50"><if pos:start="357:9" pos:end="357:50">if <condition pos:start="357:12" pos:end="357:15">(<expr pos:start="357:13" pos:end="357:14"><name pos:start="357:13" pos:end="357:14">st</name></expr>)</condition><block type="pseudo" pos:start="357:17" pos:end="357:50"><block_content pos:start="357:17" pos:end="357:50"> <expr_stmt pos:start="357:17" pos:end="357:50"><expr pos:start="357:17" pos:end="357:49"><operator pos:start="357:17" pos:end="357:17">*</operator><name pos:start="357:18" pos:end="357:24">samples</name><operator pos:start="357:25" pos:end="357:26">++</operator> <operator pos:start="357:28" pos:end="357:28">=</operator> <name pos:start="357:30" pos:end="357:41"><name pos:start="357:30" pos:end="357:30">c</name><operator pos:start="357:31" pos:end="357:32">-&gt;</operator><name pos:start="357:33" pos:end="357:38">status</name><index pos:start="357:39" pos:end="357:41">[<expr pos:start="357:40" pos:end="357:40"><literal type="number" pos:start="357:40" pos:end="357:40">1</literal></expr>]</index></name><operator pos:start="357:42" pos:end="357:42">.</operator><name pos:start="357:43" pos:end="357:49">sample1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="359:9" pos:end="359:42"><expr pos:start="359:9" pos:end="359:41"><operator pos:start="359:9" pos:end="359:9">*</operator><name pos:start="359:10" pos:end="359:16">samples</name><operator pos:start="359:17" pos:end="359:18">++</operator> <operator pos:start="359:20" pos:end="359:20">=</operator> <name pos:start="359:22" pos:end="359:33"><name pos:start="359:22" pos:end="359:22">c</name><operator pos:start="359:23" pos:end="359:24">-&gt;</operator><name pos:start="359:25" pos:end="359:30">status</name><index pos:start="359:31" pos:end="359:33">[<expr pos:start="359:32" pos:end="359:32"><literal type="number" pos:start="359:32" pos:end="359:32">0</literal></expr>]</index></name><operator pos:start="359:34" pos:end="359:34">.</operator><name pos:start="359:35" pos:end="359:41">sample2</name></expr>;</expr_stmt>

        <if_stmt pos:start="361:9" pos:end="361:50"><if pos:start="361:9" pos:end="361:50">if <condition pos:start="361:12" pos:end="361:15">(<expr pos:start="361:13" pos:end="361:14"><name pos:start="361:13" pos:end="361:14">st</name></expr>)</condition><block type="pseudo" pos:start="361:17" pos:end="361:50"><block_content pos:start="361:17" pos:end="361:50"> <expr_stmt pos:start="361:17" pos:end="361:50"><expr pos:start="361:17" pos:end="361:49"><operator pos:start="361:17" pos:end="361:17">*</operator><name pos:start="361:18" pos:end="361:24">samples</name><operator pos:start="361:25" pos:end="361:26">++</operator> <operator pos:start="361:28" pos:end="361:28">=</operator> <name pos:start="361:30" pos:end="361:41"><name pos:start="361:30" pos:end="361:30">c</name><operator pos:start="361:31" pos:end="361:32">-&gt;</operator><name pos:start="361:33" pos:end="361:38">status</name><index pos:start="361:39" pos:end="361:41">[<expr pos:start="361:40" pos:end="361:40"><literal type="number" pos:start="361:40" pos:end="361:40">1</literal></expr>]</index></name><operator pos:start="361:42" pos:end="361:42">.</operator><name pos:start="361:43" pos:end="361:49">sample2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <for pos:start="363:9" pos:end="371:9">for<control pos:start="363:12" pos:end="363:21">(<init pos:start="363:13" pos:end="363:13">;</init><condition pos:start="363:14" pos:end="363:17"><expr pos:start="363:14" pos:end="363:16"><name pos:start="363:14" pos:end="363:14">n</name><operator pos:start="363:15" pos:end="363:15">&gt;</operator><literal type="number" pos:start="363:16" pos:end="363:16">0</literal></expr>;</condition><incr pos:start="363:18" pos:end="363:20"><expr pos:start="363:18" pos:end="363:20"><name pos:start="363:18" pos:end="363:18">n</name><operator pos:start="363:19" pos:end="363:20">--</operator></expr></incr>)</control> <block pos:start="363:23" pos:end="371:9">{<block_content pos:start="365:13" pos:end="369:19">

            <expr_stmt pos:start="365:13" pos:end="365:79"><expr pos:start="365:13" pos:end="365:78"><operator pos:start="365:13" pos:end="365:13">*</operator><name pos:start="365:14" pos:end="365:20">samples</name><operator pos:start="365:21" pos:end="365:22">++</operator> <operator pos:start="365:24" pos:end="365:24">=</operator> <call pos:start="365:26" pos:end="365:78"><name pos:start="365:26" pos:end="365:47">adpcm_ms_expand_nibble</name><argument_list pos:start="365:48" pos:end="365:78">(<argument pos:start="365:49" pos:end="365:62"><expr pos:start="365:49" pos:end="365:62"><operator pos:start="365:49" pos:end="365:49">&amp;</operator><name pos:start="365:50" pos:end="365:62"><name pos:start="365:50" pos:end="365:50">c</name><operator pos:start="365:51" pos:end="365:52">-&gt;</operator><name pos:start="365:53" pos:end="365:58">status</name><index pos:start="365:59" pos:end="365:62">[<expr pos:start="365:60" pos:end="365:60"><literal type="number" pos:start="365:60" pos:end="365:60">0</literal></expr> ]</index></name></expr></argument>, <argument pos:start="365:65" pos:end="365:75"><expr pos:start="365:65" pos:end="365:75"><name pos:start="365:65" pos:end="365:70"><name pos:start="365:65" pos:end="365:67">src</name><index pos:start="365:68" pos:end="365:70">[<expr pos:start="365:69" pos:end="365:69"><literal type="number" pos:start="365:69" pos:end="365:69">0</literal></expr>]</index></name> <operator pos:start="365:72" pos:end="365:73">&gt;&gt;</operator> <literal type="number" pos:start="365:75" pos:end="365:75">4</literal></expr></argument>  )</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="367:13" pos:end="367:79"><expr pos:start="367:13" pos:end="367:78"><operator pos:start="367:13" pos:end="367:13">*</operator><name pos:start="367:14" pos:end="367:20">samples</name><operator pos:start="367:21" pos:end="367:22">++</operator> <operator pos:start="367:24" pos:end="367:24">=</operator> <call pos:start="367:26" pos:end="367:78"><name pos:start="367:26" pos:end="367:47">adpcm_ms_expand_nibble</name><argument_list pos:start="367:48" pos:end="367:78">(<argument pos:start="367:49" pos:end="367:62"><expr pos:start="367:49" pos:end="367:62"><operator pos:start="367:49" pos:end="367:49">&amp;</operator><name pos:start="367:50" pos:end="367:62"><name pos:start="367:50" pos:end="367:50">c</name><operator pos:start="367:51" pos:end="367:52">-&gt;</operator><name pos:start="367:53" pos:end="367:58">status</name><index pos:start="367:59" pos:end="367:62">[<expr pos:start="367:60" pos:end="367:61"><name pos:start="367:60" pos:end="367:61">st</name></expr>]</index></name></expr></argument>, <argument pos:start="367:65" pos:end="367:77"><expr pos:start="367:65" pos:end="367:77"><name pos:start="367:65" pos:end="367:70"><name pos:start="367:65" pos:end="367:67">src</name><index pos:start="367:68" pos:end="367:70">[<expr pos:start="367:69" pos:end="367:69"><literal type="number" pos:start="367:69" pos:end="367:69">0</literal></expr>]</index></name> <operator pos:start="367:72" pos:end="367:72">&amp;</operator> <literal type="number" pos:start="367:74" pos:end="367:77">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:19"><expr pos:start="369:13" pos:end="369:18"><name pos:start="369:13" pos:end="369:15">src</name> <operator pos:start="369:17" pos:end="369:18">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="373:9" pos:end="373:14">break;</break>

    <case pos:start="375:5" pos:end="375:32">case <expr pos:start="375:10" pos:end="375:31"><name pos:start="375:10" pos:end="375:31">CODEC_ID_ADPCM_IMA_DK4</name></expr>:</case>

        <if_stmt pos:start="377:9" pos:end="379:42"><if pos:start="377:9" pos:end="379:42">if <condition pos:start="377:12" pos:end="377:69">(<expr pos:start="377:13" pos:end="377:68"><name pos:start="377:13" pos:end="377:30"><name pos:start="377:13" pos:end="377:17">avctx</name><operator pos:start="377:18" pos:end="377:19">-&gt;</operator><name pos:start="377:20" pos:end="377:30">block_align</name></name> <operator pos:start="377:32" pos:end="377:33">!=</operator> <literal type="number" pos:start="377:35" pos:end="377:35">0</literal> <operator pos:start="377:37" pos:end="377:38">&amp;&amp;</operator> <name pos:start="377:40" pos:end="377:47">buf_size</name> <operator pos:start="377:49" pos:end="377:49">&gt;</operator> <name pos:start="377:51" pos:end="377:68"><name pos:start="377:51" pos:end="377:55">avctx</name><operator pos:start="377:56" pos:end="377:57">-&gt;</operator><name pos:start="377:58" pos:end="377:68">block_align</name></name></expr>)</condition><block type="pseudo" pos:start="379:13" pos:end="379:42"><block_content pos:start="379:13" pos:end="379:42">

            <expr_stmt pos:start="379:13" pos:end="379:42"><expr pos:start="379:13" pos:end="379:41"><name pos:start="379:13" pos:end="379:20">buf_size</name> <operator pos:start="379:22" pos:end="379:22">=</operator> <name pos:start="379:24" pos:end="379:41"><name pos:start="379:24" pos:end="379:28">avctx</name><operator pos:start="379:29" pos:end="379:30">-&gt;</operator><name pos:start="379:31" pos:end="379:41">block_align</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="383:9" pos:end="383:67"><expr pos:start="383:9" pos:end="383:66"><name pos:start="383:9" pos:end="383:20"><name pos:start="383:9" pos:end="383:9">c</name><operator pos:start="383:10" pos:end="383:11">-&gt;</operator><name pos:start="383:12" pos:end="383:17">status</name><index pos:start="383:18" pos:end="383:20">[<expr pos:start="383:19" pos:end="383:19"><literal type="number" pos:start="383:19" pos:end="383:19">0</literal></expr>]</index></name><operator pos:start="383:21" pos:end="383:21">.</operator><name pos:start="383:22" pos:end="383:30">predictor</name> <operator pos:start="383:32" pos:end="383:32">=</operator> <operator pos:start="383:34" pos:end="383:34">(</operator><name pos:start="383:35" pos:end="383:41">int16_t</name><operator pos:start="383:42" pos:end="383:42">)</operator><operator pos:start="383:43" pos:end="383:43">(</operator><name pos:start="383:44" pos:end="383:49"><name pos:start="383:44" pos:end="383:46">src</name><index pos:start="383:47" pos:end="383:49">[<expr pos:start="383:48" pos:end="383:48"><literal type="number" pos:start="383:48" pos:end="383:48">0</literal></expr>]</index></name> <operator pos:start="383:51" pos:end="383:51">|</operator> <operator pos:start="383:53" pos:end="383:53">(</operator><name pos:start="383:54" pos:end="383:59"><name pos:start="383:54" pos:end="383:56">src</name><index pos:start="383:57" pos:end="383:59">[<expr pos:start="383:58" pos:end="383:58"><literal type="number" pos:start="383:58" pos:end="383:58">1</literal></expr>]</index></name> <operator pos:start="383:61" pos:end="383:62">&lt;&lt;</operator> <literal type="number" pos:start="383:64" pos:end="383:64">8</literal><operator pos:start="383:65" pos:end="383:65">)</operator><operator pos:start="383:66" pos:end="383:66">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="385:9" pos:end="385:41"><expr pos:start="385:9" pos:end="385:40"><name pos:start="385:9" pos:end="385:20"><name pos:start="385:9" pos:end="385:9">c</name><operator pos:start="385:10" pos:end="385:11">-&gt;</operator><name pos:start="385:12" pos:end="385:17">status</name><index pos:start="385:18" pos:end="385:20">[<expr pos:start="385:19" pos:end="385:19"><literal type="number" pos:start="385:19" pos:end="385:19">0</literal></expr>]</index></name><operator pos:start="385:21" pos:end="385:21">.</operator><name pos:start="385:22" pos:end="385:31">step_index</name> <operator pos:start="385:33" pos:end="385:33">=</operator> <name pos:start="385:35" pos:end="385:40"><name pos:start="385:35" pos:end="385:37">src</name><index pos:start="385:38" pos:end="385:40">[<expr pos:start="385:39" pos:end="385:39"><literal type="number" pos:start="385:39" pos:end="385:39">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="387:9" pos:end="387:17"><expr pos:start="387:9" pos:end="387:16"><name pos:start="387:9" pos:end="387:11">src</name> <operator pos:start="387:13" pos:end="387:14">+=</operator> <literal type="number" pos:start="387:16" pos:end="387:16">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="389:9" pos:end="389:44"><expr pos:start="389:9" pos:end="389:43"><operator pos:start="389:9" pos:end="389:9">*</operator><name pos:start="389:10" pos:end="389:16">samples</name><operator pos:start="389:17" pos:end="389:18">++</operator> <operator pos:start="389:20" pos:end="389:20">=</operator> <name pos:start="389:22" pos:end="389:33"><name pos:start="389:22" pos:end="389:22">c</name><operator pos:start="389:23" pos:end="389:24">-&gt;</operator><name pos:start="389:25" pos:end="389:30">status</name><index pos:start="389:31" pos:end="389:33">[<expr pos:start="389:32" pos:end="389:32"><literal type="number" pos:start="389:32" pos:end="389:32">0</literal></expr>]</index></name><operator pos:start="389:34" pos:end="389:34">.</operator><name pos:start="389:35" pos:end="389:43">predictor</name></expr>;</expr_stmt>

        <if_stmt pos:start="391:9" pos:end="401:9"><if pos:start="391:9" pos:end="401:9">if <condition pos:start="391:12" pos:end="391:15">(<expr pos:start="391:13" pos:end="391:14"><name pos:start="391:13" pos:end="391:14">st</name></expr>)</condition> <block pos:start="391:17" pos:end="401:9">{<block_content pos:start="393:13" pos:end="399:48">

            <expr_stmt pos:start="393:13" pos:end="393:71"><expr pos:start="393:13" pos:end="393:70"><name pos:start="393:13" pos:end="393:24"><name pos:start="393:13" pos:end="393:13">c</name><operator pos:start="393:14" pos:end="393:15">-&gt;</operator><name pos:start="393:16" pos:end="393:21">status</name><index pos:start="393:22" pos:end="393:24">[<expr pos:start="393:23" pos:end="393:23"><literal type="number" pos:start="393:23" pos:end="393:23">1</literal></expr>]</index></name><operator pos:start="393:25" pos:end="393:25">.</operator><name pos:start="393:26" pos:end="393:34">predictor</name> <operator pos:start="393:36" pos:end="393:36">=</operator> <operator pos:start="393:38" pos:end="393:38">(</operator><name pos:start="393:39" pos:end="393:45">int16_t</name><operator pos:start="393:46" pos:end="393:46">)</operator><operator pos:start="393:47" pos:end="393:47">(</operator><name pos:start="393:48" pos:end="393:53"><name pos:start="393:48" pos:end="393:50">src</name><index pos:start="393:51" pos:end="393:53">[<expr pos:start="393:52" pos:end="393:52"><literal type="number" pos:start="393:52" pos:end="393:52">0</literal></expr>]</index></name> <operator pos:start="393:55" pos:end="393:55">|</operator> <operator pos:start="393:57" pos:end="393:57">(</operator><name pos:start="393:58" pos:end="393:63"><name pos:start="393:58" pos:end="393:60">src</name><index pos:start="393:61" pos:end="393:63">[<expr pos:start="393:62" pos:end="393:62"><literal type="number" pos:start="393:62" pos:end="393:62">1</literal></expr>]</index></name> <operator pos:start="393:65" pos:end="393:66">&lt;&lt;</operator> <literal type="number" pos:start="393:68" pos:end="393:68">8</literal><operator pos:start="393:69" pos:end="393:69">)</operator><operator pos:start="393:70" pos:end="393:70">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="395:13" pos:end="395:45"><expr pos:start="395:13" pos:end="395:44"><name pos:start="395:13" pos:end="395:24"><name pos:start="395:13" pos:end="395:13">c</name><operator pos:start="395:14" pos:end="395:15">-&gt;</operator><name pos:start="395:16" pos:end="395:21">status</name><index pos:start="395:22" pos:end="395:24">[<expr pos:start="395:23" pos:end="395:23"><literal type="number" pos:start="395:23" pos:end="395:23">1</literal></expr>]</index></name><operator pos:start="395:25" pos:end="395:25">.</operator><name pos:start="395:26" pos:end="395:35">step_index</name> <operator pos:start="395:37" pos:end="395:37">=</operator> <name pos:start="395:39" pos:end="395:44"><name pos:start="395:39" pos:end="395:41">src</name><index pos:start="395:42" pos:end="395:44">[<expr pos:start="395:43" pos:end="395:43"><literal type="number" pos:start="395:43" pos:end="395:43">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="397:13" pos:end="397:21"><expr pos:start="397:13" pos:end="397:20"><name pos:start="397:13" pos:end="397:15">src</name> <operator pos:start="397:17" pos:end="397:18">+=</operator> <literal type="number" pos:start="397:20" pos:end="397:20">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="399:13" pos:end="399:48"><expr pos:start="399:13" pos:end="399:47"><operator pos:start="399:13" pos:end="399:13">*</operator><name pos:start="399:14" pos:end="399:20">samples</name><operator pos:start="399:21" pos:end="399:22">++</operator> <operator pos:start="399:24" pos:end="399:24">=</operator> <name pos:start="399:26" pos:end="399:37"><name pos:start="399:26" pos:end="399:26">c</name><operator pos:start="399:27" pos:end="399:28">-&gt;</operator><name pos:start="399:29" pos:end="399:34">status</name><index pos:start="399:35" pos:end="399:37">[<expr pos:start="399:36" pos:end="399:36"><literal type="number" pos:start="399:36" pos:end="399:36">1</literal></expr>]</index></name><operator pos:start="399:38" pos:end="399:38">.</operator><name pos:start="399:39" pos:end="399:47">predictor</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <while pos:start="403:9" pos:end="435:9">while <condition pos:start="403:15" pos:end="403:36">(<expr pos:start="403:16" pos:end="403:35"><name pos:start="403:16" pos:end="403:18">src</name> <operator pos:start="403:20" pos:end="403:20">&lt;</operator> <name pos:start="403:22" pos:end="403:24">buf</name> <operator pos:start="403:26" pos:end="403:26">+</operator> <name pos:start="403:28" pos:end="403:35">buf_size</name></expr>)</condition> <block pos:start="403:38" pos:end="435:9">{<block_content pos:start="409:13" pos:end="433:18">



            <comment type="block" pos:start="407:13" pos:end="407:75">/* take care of the top nibble (always left or mono channel) */</comment>

            <expr_stmt pos:start="409:13" pos:end="411:32"><expr pos:start="409:13" pos:end="411:31"><operator pos:start="409:13" pos:end="409:13">*</operator><name pos:start="409:14" pos:end="409:20">samples</name><operator pos:start="409:21" pos:end="409:22">++</operator> <operator pos:start="409:24" pos:end="409:24">=</operator> <call pos:start="409:26" pos:end="411:31"><name pos:start="409:26" pos:end="409:48">adpcm_ima_expand_nibble</name><argument_list pos:start="409:49" pos:end="411:31">(<argument pos:start="409:50" pos:end="409:62"><expr pos:start="409:50" pos:end="409:62"><operator pos:start="409:50" pos:end="409:50">&amp;</operator><name pos:start="409:51" pos:end="409:62"><name pos:start="409:51" pos:end="409:51">c</name><operator pos:start="409:52" pos:end="409:53">-&gt;</operator><name pos:start="409:54" pos:end="409:59">status</name><index pos:start="409:60" pos:end="409:62">[<expr pos:start="409:61" pos:end="409:61"><literal type="number" pos:start="409:61" pos:end="409:61">0</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="411:17" pos:end="411:27"><expr pos:start="411:17" pos:end="411:27"><name pos:start="411:17" pos:end="411:22"><name pos:start="411:17" pos:end="411:19">src</name><index pos:start="411:20" pos:end="411:22">[<expr pos:start="411:21" pos:end="411:21"><literal type="number" pos:start="411:21" pos:end="411:21">0</literal></expr>]</index></name> <operator pos:start="411:24" pos:end="411:25">&gt;&gt;</operator> <literal type="number" pos:start="411:27" pos:end="411:27">4</literal></expr></argument>, <argument pos:start="411:30" pos:end="411:30"><expr pos:start="411:30" pos:end="411:30"><literal type="number" pos:start="411:30" pos:end="411:30">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="415:13" pos:end="417:48">/* take care of the bottom nibble, which is right sample for

             * stereo, or another mono sample */</comment>

            <if_stmt pos:start="419:13" pos:end="429:38"><if pos:start="419:13" pos:end="423:38">if <condition pos:start="419:16" pos:end="419:19">(<expr pos:start="419:17" pos:end="419:18"><name pos:start="419:17" pos:end="419:18">st</name></expr>)</condition><block type="pseudo" pos:start="421:17" pos:end="423:38"><block_content pos:start="421:17" pos:end="423:38">

                <expr_stmt pos:start="421:17" pos:end="423:38"><expr pos:start="421:17" pos:end="423:37"><operator pos:start="421:17" pos:end="421:17">*</operator><name pos:start="421:18" pos:end="421:24">samples</name><operator pos:start="421:25" pos:end="421:26">++</operator> <operator pos:start="421:28" pos:end="421:28">=</operator> <call pos:start="421:30" pos:end="423:37"><name pos:start="421:30" pos:end="421:52">adpcm_ima_expand_nibble</name><argument_list pos:start="421:53" pos:end="423:37">(<argument pos:start="421:54" pos:end="421:66"><expr pos:start="421:54" pos:end="421:66"><operator pos:start="421:54" pos:end="421:54">&amp;</operator><name pos:start="421:55" pos:end="421:66"><name pos:start="421:55" pos:end="421:55">c</name><operator pos:start="421:56" pos:end="421:57">-&gt;</operator><name pos:start="421:58" pos:end="421:63">status</name><index pos:start="421:64" pos:end="421:66">[<expr pos:start="421:65" pos:end="421:65"><literal type="number" pos:start="421:65" pos:end="421:65">1</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="423:21" pos:end="423:33"><expr pos:start="423:21" pos:end="423:33"><name pos:start="423:21" pos:end="423:26"><name pos:start="423:21" pos:end="423:23">src</name><index pos:start="423:24" pos:end="423:26">[<expr pos:start="423:25" pos:end="423:25"><literal type="number" pos:start="423:25" pos:end="423:25">0</literal></expr>]</index></name> <operator pos:start="423:28" pos:end="423:28">&amp;</operator> <literal type="number" pos:start="423:30" pos:end="423:33">0x0F</literal></expr></argument>, <argument pos:start="423:36" pos:end="423:36"><expr pos:start="423:36" pos:end="423:36"><literal type="number" pos:start="423:36" pos:end="423:36">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="425:13" pos:end="429:38">else<block type="pseudo" pos:start="427:17" pos:end="429:38"><block_content pos:start="427:17" pos:end="429:38">

                <expr_stmt pos:start="427:17" pos:end="429:38"><expr pos:start="427:17" pos:end="429:37"><operator pos:start="427:17" pos:end="427:17">*</operator><name pos:start="427:18" pos:end="427:24">samples</name><operator pos:start="427:25" pos:end="427:26">++</operator> <operator pos:start="427:28" pos:end="427:28">=</operator> <call pos:start="427:30" pos:end="429:37"><name pos:start="427:30" pos:end="427:52">adpcm_ima_expand_nibble</name><argument_list pos:start="427:53" pos:end="429:37">(<argument pos:start="427:54" pos:end="427:66"><expr pos:start="427:54" pos:end="427:66"><operator pos:start="427:54" pos:end="427:54">&amp;</operator><name pos:start="427:55" pos:end="427:66"><name pos:start="427:55" pos:end="427:55">c</name><operator pos:start="427:56" pos:end="427:57">-&gt;</operator><name pos:start="427:58" pos:end="427:63">status</name><index pos:start="427:64" pos:end="427:66">[<expr pos:start="427:65" pos:end="427:65"><literal type="number" pos:start="427:65" pos:end="427:65">0</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="429:21" pos:end="429:33"><expr pos:start="429:21" pos:end="429:33"><name pos:start="429:21" pos:end="429:26"><name pos:start="429:21" pos:end="429:23">src</name><index pos:start="429:24" pos:end="429:26">[<expr pos:start="429:25" pos:end="429:25"><literal type="number" pos:start="429:25" pos:end="429:25">0</literal></expr>]</index></name> <operator pos:start="429:28" pos:end="429:28">&amp;</operator> <literal type="number" pos:start="429:30" pos:end="429:33">0x0F</literal></expr></argument>, <argument pos:start="429:36" pos:end="429:36"><expr pos:start="429:36" pos:end="429:36"><literal type="number" pos:start="429:36" pos:end="429:36">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <expr_stmt pos:start="433:13" pos:end="433:18"><expr pos:start="433:13" pos:end="433:17"><name pos:start="433:13" pos:end="433:15">src</name><operator pos:start="433:16" pos:end="433:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <break pos:start="437:9" pos:end="437:14">break;</break>

    <case pos:start="439:5" pos:end="439:32">case <expr pos:start="439:10" pos:end="439:31"><name pos:start="439:10" pos:end="439:31">CODEC_ID_ADPCM_IMA_DK3</name></expr>:</case>

        <if_stmt pos:start="441:9" pos:end="443:42"><if pos:start="441:9" pos:end="443:42">if <condition pos:start="441:12" pos:end="441:69">(<expr pos:start="441:13" pos:end="441:68"><name pos:start="441:13" pos:end="441:30"><name pos:start="441:13" pos:end="441:17">avctx</name><operator pos:start="441:18" pos:end="441:19">-&gt;</operator><name pos:start="441:20" pos:end="441:30">block_align</name></name> <operator pos:start="441:32" pos:end="441:33">!=</operator> <literal type="number" pos:start="441:35" pos:end="441:35">0</literal> <operator pos:start="441:37" pos:end="441:38">&amp;&amp;</operator> <name pos:start="441:40" pos:end="441:47">buf_size</name> <operator pos:start="441:49" pos:end="441:49">&gt;</operator> <name pos:start="441:51" pos:end="441:68"><name pos:start="441:51" pos:end="441:55">avctx</name><operator pos:start="441:56" pos:end="441:57">-&gt;</operator><name pos:start="441:58" pos:end="441:68">block_align</name></name></expr>)</condition><block type="pseudo" pos:start="443:13" pos:end="443:42"><block_content pos:start="443:13" pos:end="443:42">

            <expr_stmt pos:start="443:13" pos:end="443:42"><expr pos:start="443:13" pos:end="443:41"><name pos:start="443:13" pos:end="443:20">buf_size</name> <operator pos:start="443:22" pos:end="443:22">=</operator> <name pos:start="443:24" pos:end="443:41"><name pos:start="443:24" pos:end="443:28">avctx</name><operator pos:start="443:29" pos:end="443:30">-&gt;</operator><name pos:start="443:31" pos:end="443:41">block_align</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="447:9" pos:end="449:22"><if pos:start="447:9" pos:end="449:22">if<condition pos:start="447:11" pos:end="447:55">(<expr pos:start="447:12" pos:end="447:54"><name pos:start="447:12" pos:end="447:19">buf_size</name> <operator pos:start="447:21" pos:end="447:21">+</operator> <literal type="number" pos:start="447:23" pos:end="447:24">16</literal> <operator pos:start="447:26" pos:end="447:26">&gt;</operator> <operator pos:start="447:28" pos:end="447:28">(</operator><name pos:start="447:29" pos:end="447:39">samples_end</name> <operator pos:start="447:41" pos:end="447:41">-</operator> <name pos:start="447:43" pos:end="447:49">samples</name><operator pos:start="447:50" pos:end="447:50">)</operator><operator pos:start="447:51" pos:end="447:51">*</operator><literal type="number" pos:start="447:52" pos:end="447:52">3</literal><operator pos:start="447:53" pos:end="447:53">/</operator><literal type="number" pos:start="447:54" pos:end="447:54">8</literal></expr>)</condition><block type="pseudo" pos:start="449:13" pos:end="449:22"><block_content pos:start="449:13" pos:end="449:22">

            <return pos:start="449:13" pos:end="449:22">return <expr pos:start="449:20" pos:end="449:21"><operator pos:start="449:20" pos:end="449:20">-</operator><literal type="number" pos:start="449:21" pos:end="449:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="453:9" pos:end="453:69"><expr pos:start="453:9" pos:end="453:68"><name pos:start="453:9" pos:end="453:20"><name pos:start="453:9" pos:end="453:9">c</name><operator pos:start="453:10" pos:end="453:11">-&gt;</operator><name pos:start="453:12" pos:end="453:17">status</name><index pos:start="453:18" pos:end="453:20">[<expr pos:start="453:19" pos:end="453:19"><literal type="number" pos:start="453:19" pos:end="453:19">0</literal></expr>]</index></name><operator pos:start="453:21" pos:end="453:21">.</operator><name pos:start="453:22" pos:end="453:30">predictor</name> <operator pos:start="453:32" pos:end="453:32">=</operator> <operator pos:start="453:34" pos:end="453:34">(</operator><name pos:start="453:35" pos:end="453:41">int16_t</name><operator pos:start="453:42" pos:end="453:42">)</operator><operator pos:start="453:43" pos:end="453:43">(</operator><name pos:start="453:44" pos:end="453:50"><name pos:start="453:44" pos:end="453:46">src</name><index pos:start="453:47" pos:end="453:50">[<expr pos:start="453:48" pos:end="453:49"><literal type="number" pos:start="453:48" pos:end="453:49">10</literal></expr>]</index></name> <operator pos:start="453:52" pos:end="453:52">|</operator> <operator pos:start="453:54" pos:end="453:54">(</operator><name pos:start="453:55" pos:end="453:61"><name pos:start="453:55" pos:end="453:57">src</name><index pos:start="453:58" pos:end="453:61">[<expr pos:start="453:59" pos:end="453:60"><literal type="number" pos:start="453:59" pos:end="453:60">11</literal></expr>]</index></name> <operator pos:start="453:63" pos:end="453:64">&lt;&lt;</operator> <literal type="number" pos:start="453:66" pos:end="453:66">8</literal><operator pos:start="453:67" pos:end="453:67">)</operator><operator pos:start="453:68" pos:end="453:68">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="455:9" pos:end="455:69"><expr pos:start="455:9" pos:end="455:68"><name pos:start="455:9" pos:end="455:20"><name pos:start="455:9" pos:end="455:9">c</name><operator pos:start="455:10" pos:end="455:11">-&gt;</operator><name pos:start="455:12" pos:end="455:17">status</name><index pos:start="455:18" pos:end="455:20">[<expr pos:start="455:19" pos:end="455:19"><literal type="number" pos:start="455:19" pos:end="455:19">1</literal></expr>]</index></name><operator pos:start="455:21" pos:end="455:21">.</operator><name pos:start="455:22" pos:end="455:30">predictor</name> <operator pos:start="455:32" pos:end="455:32">=</operator> <operator pos:start="455:34" pos:end="455:34">(</operator><name pos:start="455:35" pos:end="455:41">int16_t</name><operator pos:start="455:42" pos:end="455:42">)</operator><operator pos:start="455:43" pos:end="455:43">(</operator><name pos:start="455:44" pos:end="455:50"><name pos:start="455:44" pos:end="455:46">src</name><index pos:start="455:47" pos:end="455:50">[<expr pos:start="455:48" pos:end="455:49"><literal type="number" pos:start="455:48" pos:end="455:49">12</literal></expr>]</index></name> <operator pos:start="455:52" pos:end="455:52">|</operator> <operator pos:start="455:54" pos:end="455:54">(</operator><name pos:start="455:55" pos:end="455:61"><name pos:start="455:55" pos:end="455:57">src</name><index pos:start="455:58" pos:end="455:61">[<expr pos:start="455:59" pos:end="455:60"><literal type="number" pos:start="455:59" pos:end="455:60">13</literal></expr>]</index></name> <operator pos:start="455:63" pos:end="455:64">&lt;&lt;</operator> <literal type="number" pos:start="455:66" pos:end="455:66">8</literal><operator pos:start="455:67" pos:end="455:67">)</operator><operator pos:start="455:68" pos:end="455:68">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="457:9" pos:end="457:42"><expr pos:start="457:9" pos:end="457:41"><name pos:start="457:9" pos:end="457:20"><name pos:start="457:9" pos:end="457:9">c</name><operator pos:start="457:10" pos:end="457:11">-&gt;</operator><name pos:start="457:12" pos:end="457:17">status</name><index pos:start="457:18" pos:end="457:20">[<expr pos:start="457:19" pos:end="457:19"><literal type="number" pos:start="457:19" pos:end="457:19">0</literal></expr>]</index></name><operator pos:start="457:21" pos:end="457:21">.</operator><name pos:start="457:22" pos:end="457:31">step_index</name> <operator pos:start="457:33" pos:end="457:33">=</operator> <name pos:start="457:35" pos:end="457:41"><name pos:start="457:35" pos:end="457:37">src</name><index pos:start="457:38" pos:end="457:41">[<expr pos:start="457:39" pos:end="457:40"><literal type="number" pos:start="457:39" pos:end="457:40">14</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="459:9" pos:end="459:42"><expr pos:start="459:9" pos:end="459:41"><name pos:start="459:9" pos:end="459:20"><name pos:start="459:9" pos:end="459:9">c</name><operator pos:start="459:10" pos:end="459:11">-&gt;</operator><name pos:start="459:12" pos:end="459:17">status</name><index pos:start="459:18" pos:end="459:20">[<expr pos:start="459:19" pos:end="459:19"><literal type="number" pos:start="459:19" pos:end="459:19">1</literal></expr>]</index></name><operator pos:start="459:21" pos:end="459:21">.</operator><name pos:start="459:22" pos:end="459:31">step_index</name> <operator pos:start="459:33" pos:end="459:33">=</operator> <name pos:start="459:35" pos:end="459:41"><name pos:start="459:35" pos:end="459:37">src</name><index pos:start="459:38" pos:end="459:41">[<expr pos:start="459:39" pos:end="459:40"><literal type="number" pos:start="459:39" pos:end="459:40">15</literal></expr>]</index></name></expr>;</expr_stmt>

        <comment type="block" pos:start="461:9" pos:end="461:40">/* sign extend the predictors */</comment>

        <expr_stmt pos:start="463:9" pos:end="463:18"><expr pos:start="463:9" pos:end="463:17"><name pos:start="463:9" pos:end="463:11">src</name> <operator pos:start="463:13" pos:end="463:14">+=</operator> <literal type="number" pos:start="463:16" pos:end="463:17">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="465:9" pos:end="465:46"><expr pos:start="465:9" pos:end="465:45"><name pos:start="465:9" pos:end="465:20">diff_channel</name> <operator pos:start="465:22" pos:end="465:22">=</operator> <name pos:start="465:24" pos:end="465:35"><name pos:start="465:24" pos:end="465:24">c</name><operator pos:start="465:25" pos:end="465:26">-&gt;</operator><name pos:start="465:27" pos:end="465:32">status</name><index pos:start="465:33" pos:end="465:35">[<expr pos:start="465:34" pos:end="465:34"><literal type="number" pos:start="465:34" pos:end="465:34">1</literal></expr>]</index></name><operator pos:start="465:36" pos:end="465:36">.</operator><name pos:start="465:37" pos:end="465:45">predictor</name></expr>;</expr_stmt>



        <comment type="block" pos:start="469:9" pos:end="471:36">/* the DK3_GET_NEXT_NIBBLE macro issues the break statement when

         * the buffer is consumed */</comment>

        <while pos:start="473:9" pos:end="525:9">while <condition pos:start="473:15" pos:end="473:17">(<expr pos:start="473:16" pos:end="473:16"><literal type="number" pos:start="473:16" pos:end="473:16">1</literal></expr>)</condition> <block pos:start="473:19" pos:end="525:9">{<block_content pos:start="485:13" pos:end="523:73">



            <comment type="block" pos:start="477:13" pos:end="479:50">/* for this algorithm, c-&gt;status[0] is the sum channel and

             * c-&gt;status[1] is the diff channel */</comment>



            <comment type="block" pos:start="483:13" pos:end="483:64">/* process the first predictor of the sum channel */</comment>

            <expr_stmt pos:start="485:13" pos:end="485:34"><expr pos:start="485:13" pos:end="485:33"><call pos:start="485:13" pos:end="485:33"><name pos:start="485:13" pos:end="485:31">DK3_GET_NEXT_NIBBLE</name><argument_list pos:start="485:32" pos:end="485:33">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="487:13" pos:end="487:62"><expr pos:start="487:13" pos:end="487:61"><call pos:start="487:13" pos:end="487:61"><name pos:start="487:13" pos:end="487:35">adpcm_ima_expand_nibble</name><argument_list pos:start="487:36" pos:end="487:61">(<argument pos:start="487:37" pos:end="487:49"><expr pos:start="487:37" pos:end="487:49"><operator pos:start="487:37" pos:end="487:37">&amp;</operator><name pos:start="487:38" pos:end="487:49"><name pos:start="487:38" pos:end="487:38">c</name><operator pos:start="487:39" pos:end="487:40">-&gt;</operator><name pos:start="487:41" pos:end="487:46">status</name><index pos:start="487:47" pos:end="487:49">[<expr pos:start="487:48" pos:end="487:48"><literal type="number" pos:start="487:48" pos:end="487:48">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="487:52" pos:end="487:57"><expr pos:start="487:52" pos:end="487:57"><name pos:start="487:52" pos:end="487:57">nibble</name></expr></argument>, <argument pos:start="487:60" pos:end="487:60"><expr pos:start="487:60" pos:end="487:60"><literal type="number" pos:start="487:60" pos:end="487:60">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="491:13" pos:end="491:52">/* process the diff channel predictor */</comment>

            <expr_stmt pos:start="493:13" pos:end="493:34"><expr pos:start="493:13" pos:end="493:33"><call pos:start="493:13" pos:end="493:33"><name pos:start="493:13" pos:end="493:31">DK3_GET_NEXT_NIBBLE</name><argument_list pos:start="493:32" pos:end="493:33">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="495:13" pos:end="495:62"><expr pos:start="495:13" pos:end="495:61"><call pos:start="495:13" pos:end="495:61"><name pos:start="495:13" pos:end="495:35">adpcm_ima_expand_nibble</name><argument_list pos:start="495:36" pos:end="495:61">(<argument pos:start="495:37" pos:end="495:49"><expr pos:start="495:37" pos:end="495:49"><operator pos:start="495:37" pos:end="495:37">&amp;</operator><name pos:start="495:38" pos:end="495:49"><name pos:start="495:38" pos:end="495:38">c</name><operator pos:start="495:39" pos:end="495:40">-&gt;</operator><name pos:start="495:41" pos:end="495:46">status</name><index pos:start="495:47" pos:end="495:49">[<expr pos:start="495:48" pos:end="495:48"><literal type="number" pos:start="495:48" pos:end="495:48">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="495:52" pos:end="495:57"><expr pos:start="495:52" pos:end="495:57"><name pos:start="495:52" pos:end="495:57">nibble</name></expr></argument>, <argument pos:start="495:60" pos:end="495:60"><expr pos:start="495:60" pos:end="495:60"><literal type="number" pos:start="495:60" pos:end="495:60">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="499:13" pos:end="499:62">/* process the first pair of stereo PCM samples */</comment>

            <expr_stmt pos:start="501:13" pos:end="501:71"><expr pos:start="501:13" pos:end="501:70"><name pos:start="501:13" pos:end="501:24">diff_channel</name> <operator pos:start="501:26" pos:end="501:26">=</operator> <operator pos:start="501:28" pos:end="501:28">(</operator><name pos:start="501:29" pos:end="501:40">diff_channel</name> <operator pos:start="501:42" pos:end="501:42">+</operator> <name pos:start="501:44" pos:end="501:55"><name pos:start="501:44" pos:end="501:44">c</name><operator pos:start="501:45" pos:end="501:46">-&gt;</operator><name pos:start="501:47" pos:end="501:52">status</name><index pos:start="501:53" pos:end="501:55">[<expr pos:start="501:54" pos:end="501:54"><literal type="number" pos:start="501:54" pos:end="501:54">1</literal></expr>]</index></name><operator pos:start="501:56" pos:end="501:56">.</operator><name pos:start="501:57" pos:end="501:65">predictor</name><operator pos:start="501:66" pos:end="501:66">)</operator> <operator pos:start="501:68" pos:end="501:68">/</operator> <literal type="number" pos:start="501:70" pos:end="501:70">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="503:13" pos:end="503:73"><expr pos:start="503:13" pos:end="503:72"><operator pos:start="503:13" pos:end="503:13">*</operator><name pos:start="503:14" pos:end="503:20">samples</name><operator pos:start="503:21" pos:end="503:22">++</operator> <operator pos:start="503:24" pos:end="503:24">=</operator> <name pos:start="503:26" pos:end="503:37"><name pos:start="503:26" pos:end="503:26">c</name><operator pos:start="503:27" pos:end="503:28">-&gt;</operator><name pos:start="503:29" pos:end="503:34">status</name><index pos:start="503:35" pos:end="503:37">[<expr pos:start="503:36" pos:end="503:36"><literal type="number" pos:start="503:36" pos:end="503:36">0</literal></expr>]</index></name><operator pos:start="503:38" pos:end="503:38">.</operator><name pos:start="503:39" pos:end="503:47">predictor</name> <operator pos:start="503:49" pos:end="503:49">+</operator> <name pos:start="503:51" pos:end="503:62"><name pos:start="503:51" pos:end="503:51">c</name><operator pos:start="503:52" pos:end="503:53">-&gt;</operator><name pos:start="503:54" pos:end="503:59">status</name><index pos:start="503:60" pos:end="503:62">[<expr pos:start="503:61" pos:end="503:61"><literal type="number" pos:start="503:61" pos:end="503:61">1</literal></expr>]</index></name><operator pos:start="503:63" pos:end="503:63">.</operator><name pos:start="503:64" pos:end="503:72">predictor</name></expr>;</expr_stmt>

            <expr_stmt pos:start="505:13" pos:end="505:73"><expr pos:start="505:13" pos:end="505:72"><operator pos:start="505:13" pos:end="505:13">*</operator><name pos:start="505:14" pos:end="505:20">samples</name><operator pos:start="505:21" pos:end="505:22">++</operator> <operator pos:start="505:24" pos:end="505:24">=</operator> <name pos:start="505:26" pos:end="505:37"><name pos:start="505:26" pos:end="505:26">c</name><operator pos:start="505:27" pos:end="505:28">-&gt;</operator><name pos:start="505:29" pos:end="505:34">status</name><index pos:start="505:35" pos:end="505:37">[<expr pos:start="505:36" pos:end="505:36"><literal type="number" pos:start="505:36" pos:end="505:36">0</literal></expr>]</index></name><operator pos:start="505:38" pos:end="505:38">.</operator><name pos:start="505:39" pos:end="505:47">predictor</name> <operator pos:start="505:49" pos:end="505:49">-</operator> <name pos:start="505:51" pos:end="505:62"><name pos:start="505:51" pos:end="505:51">c</name><operator pos:start="505:52" pos:end="505:53">-&gt;</operator><name pos:start="505:54" pos:end="505:59">status</name><index pos:start="505:60" pos:end="505:62">[<expr pos:start="505:61" pos:end="505:61"><literal type="number" pos:start="505:61" pos:end="505:61">1</literal></expr>]</index></name><operator pos:start="505:63" pos:end="505:63">.</operator><name pos:start="505:64" pos:end="505:72">predictor</name></expr>;</expr_stmt>



            <comment type="block" pos:start="509:13" pos:end="509:65">/* process the second predictor of the sum channel */</comment>

            <expr_stmt pos:start="511:13" pos:end="511:34"><expr pos:start="511:13" pos:end="511:33"><call pos:start="511:13" pos:end="511:33"><name pos:start="511:13" pos:end="511:31">DK3_GET_NEXT_NIBBLE</name><argument_list pos:start="511:32" pos:end="511:33">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="513:13" pos:end="513:62"><expr pos:start="513:13" pos:end="513:61"><call pos:start="513:13" pos:end="513:61"><name pos:start="513:13" pos:end="513:35">adpcm_ima_expand_nibble</name><argument_list pos:start="513:36" pos:end="513:61">(<argument pos:start="513:37" pos:end="513:49"><expr pos:start="513:37" pos:end="513:49"><operator pos:start="513:37" pos:end="513:37">&amp;</operator><name pos:start="513:38" pos:end="513:49"><name pos:start="513:38" pos:end="513:38">c</name><operator pos:start="513:39" pos:end="513:40">-&gt;</operator><name pos:start="513:41" pos:end="513:46">status</name><index pos:start="513:47" pos:end="513:49">[<expr pos:start="513:48" pos:end="513:48"><literal type="number" pos:start="513:48" pos:end="513:48">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="513:52" pos:end="513:57"><expr pos:start="513:52" pos:end="513:57"><name pos:start="513:52" pos:end="513:57">nibble</name></expr></argument>, <argument pos:start="513:60" pos:end="513:60"><expr pos:start="513:60" pos:end="513:60"><literal type="number" pos:start="513:60" pos:end="513:60">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="517:13" pos:end="517:63">/* process the second pair of stereo PCM samples */</comment>

            <expr_stmt pos:start="519:13" pos:end="519:71"><expr pos:start="519:13" pos:end="519:70"><name pos:start="519:13" pos:end="519:24">diff_channel</name> <operator pos:start="519:26" pos:end="519:26">=</operator> <operator pos:start="519:28" pos:end="519:28">(</operator><name pos:start="519:29" pos:end="519:40">diff_channel</name> <operator pos:start="519:42" pos:end="519:42">+</operator> <name pos:start="519:44" pos:end="519:55"><name pos:start="519:44" pos:end="519:44">c</name><operator pos:start="519:45" pos:end="519:46">-&gt;</operator><name pos:start="519:47" pos:end="519:52">status</name><index pos:start="519:53" pos:end="519:55">[<expr pos:start="519:54" pos:end="519:54"><literal type="number" pos:start="519:54" pos:end="519:54">1</literal></expr>]</index></name><operator pos:start="519:56" pos:end="519:56">.</operator><name pos:start="519:57" pos:end="519:65">predictor</name><operator pos:start="519:66" pos:end="519:66">)</operator> <operator pos:start="519:68" pos:end="519:68">/</operator> <literal type="number" pos:start="519:70" pos:end="519:70">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="521:13" pos:end="521:73"><expr pos:start="521:13" pos:end="521:72"><operator pos:start="521:13" pos:end="521:13">*</operator><name pos:start="521:14" pos:end="521:20">samples</name><operator pos:start="521:21" pos:end="521:22">++</operator> <operator pos:start="521:24" pos:end="521:24">=</operator> <name pos:start="521:26" pos:end="521:37"><name pos:start="521:26" pos:end="521:26">c</name><operator pos:start="521:27" pos:end="521:28">-&gt;</operator><name pos:start="521:29" pos:end="521:34">status</name><index pos:start="521:35" pos:end="521:37">[<expr pos:start="521:36" pos:end="521:36"><literal type="number" pos:start="521:36" pos:end="521:36">0</literal></expr>]</index></name><operator pos:start="521:38" pos:end="521:38">.</operator><name pos:start="521:39" pos:end="521:47">predictor</name> <operator pos:start="521:49" pos:end="521:49">+</operator> <name pos:start="521:51" pos:end="521:62"><name pos:start="521:51" pos:end="521:51">c</name><operator pos:start="521:52" pos:end="521:53">-&gt;</operator><name pos:start="521:54" pos:end="521:59">status</name><index pos:start="521:60" pos:end="521:62">[<expr pos:start="521:61" pos:end="521:61"><literal type="number" pos:start="521:61" pos:end="521:61">1</literal></expr>]</index></name><operator pos:start="521:63" pos:end="521:63">.</operator><name pos:start="521:64" pos:end="521:72">predictor</name></expr>;</expr_stmt>

            <expr_stmt pos:start="523:13" pos:end="523:73"><expr pos:start="523:13" pos:end="523:72"><operator pos:start="523:13" pos:end="523:13">*</operator><name pos:start="523:14" pos:end="523:20">samples</name><operator pos:start="523:21" pos:end="523:22">++</operator> <operator pos:start="523:24" pos:end="523:24">=</operator> <name pos:start="523:26" pos:end="523:37"><name pos:start="523:26" pos:end="523:26">c</name><operator pos:start="523:27" pos:end="523:28">-&gt;</operator><name pos:start="523:29" pos:end="523:34">status</name><index pos:start="523:35" pos:end="523:37">[<expr pos:start="523:36" pos:end="523:36"><literal type="number" pos:start="523:36" pos:end="523:36">0</literal></expr>]</index></name><operator pos:start="523:38" pos:end="523:38">.</operator><name pos:start="523:39" pos:end="523:47">predictor</name> <operator pos:start="523:49" pos:end="523:49">-</operator> <name pos:start="523:51" pos:end="523:62"><name pos:start="523:51" pos:end="523:51">c</name><operator pos:start="523:52" pos:end="523:53">-&gt;</operator><name pos:start="523:54" pos:end="523:59">status</name><index pos:start="523:60" pos:end="523:62">[<expr pos:start="523:61" pos:end="523:61"><literal type="number" pos:start="523:61" pos:end="523:61">1</literal></expr>]</index></name><operator pos:start="523:63" pos:end="523:63">.</operator><name pos:start="523:64" pos:end="523:72">predictor</name></expr>;</expr_stmt>

        </block_content>}</block></while>

        <break pos:start="527:9" pos:end="527:14">break;</break>

    <case pos:start="529:5" pos:end="529:31">case <expr pos:start="529:10" pos:end="529:30"><name pos:start="529:10" pos:end="529:30">CODEC_ID_ADPCM_IMA_WS</name></expr>:</case>

        <comment type="block" pos:start="531:9" pos:end="531:71">/* no per-block initialization; just start decoding the data */</comment>

        <while pos:start="533:9" pos:end="563:9">while <condition pos:start="533:15" pos:end="533:36">(<expr pos:start="533:16" pos:end="533:35"><name pos:start="533:16" pos:end="533:18">src</name> <operator pos:start="533:20" pos:end="533:20">&lt;</operator> <name pos:start="533:22" pos:end="533:24">buf</name> <operator pos:start="533:26" pos:end="533:26">+</operator> <name pos:start="533:28" pos:end="533:35">buf_size</name></expr>)</condition> <block pos:start="533:38" pos:end="563:9">{<block_content pos:start="537:13" pos:end="561:18">



            <if_stmt pos:start="537:13" pos:end="557:13"><if pos:start="537:13" pos:end="547:13">if <condition pos:start="537:16" pos:end="537:19">(<expr pos:start="537:17" pos:end="537:18"><name pos:start="537:17" pos:end="537:18">st</name></expr>)</condition> <block pos:start="537:21" pos:end="547:13">{<block_content pos:start="539:17" pos:end="545:38">

                <expr_stmt pos:start="539:17" pos:end="541:38"><expr pos:start="539:17" pos:end="541:37"><operator pos:start="539:17" pos:end="539:17">*</operator><name pos:start="539:18" pos:end="539:24">samples</name><operator pos:start="539:25" pos:end="539:26">++</operator> <operator pos:start="539:28" pos:end="539:28">=</operator> <call pos:start="539:30" pos:end="541:37"><name pos:start="539:30" pos:end="539:52">adpcm_ima_expand_nibble</name><argument_list pos:start="539:53" pos:end="541:37">(<argument pos:start="539:54" pos:end="539:66"><expr pos:start="539:54" pos:end="539:66"><operator pos:start="539:54" pos:end="539:54">&amp;</operator><name pos:start="539:55" pos:end="539:66"><name pos:start="539:55" pos:end="539:55">c</name><operator pos:start="539:56" pos:end="539:57">-&gt;</operator><name pos:start="539:58" pos:end="539:63">status</name><index pos:start="539:64" pos:end="539:66">[<expr pos:start="539:65" pos:end="539:65"><literal type="number" pos:start="539:65" pos:end="539:65">0</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="541:21" pos:end="541:31"><expr pos:start="541:21" pos:end="541:31"><name pos:start="541:21" pos:end="541:26"><name pos:start="541:21" pos:end="541:23">src</name><index pos:start="541:24" pos:end="541:26">[<expr pos:start="541:25" pos:end="541:25"><literal type="number" pos:start="541:25" pos:end="541:25">0</literal></expr>]</index></name> <operator pos:start="541:28" pos:end="541:29">&gt;&gt;</operator> <literal type="number" pos:start="541:31" pos:end="541:31">4</literal></expr></argument>  , <argument pos:start="541:36" pos:end="541:36"><expr pos:start="541:36" pos:end="541:36"><literal type="number" pos:start="541:36" pos:end="541:36">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="543:17" pos:end="545:38"><expr pos:start="543:17" pos:end="545:37"><operator pos:start="543:17" pos:end="543:17">*</operator><name pos:start="543:18" pos:end="543:24">samples</name><operator pos:start="543:25" pos:end="543:26">++</operator> <operator pos:start="543:28" pos:end="543:28">=</operator> <call pos:start="543:30" pos:end="545:37"><name pos:start="543:30" pos:end="543:52">adpcm_ima_expand_nibble</name><argument_list pos:start="543:53" pos:end="545:37">(<argument pos:start="543:54" pos:end="543:66"><expr pos:start="543:54" pos:end="543:66"><operator pos:start="543:54" pos:end="543:54">&amp;</operator><name pos:start="543:55" pos:end="543:66"><name pos:start="543:55" pos:end="543:55">c</name><operator pos:start="543:56" pos:end="543:57">-&gt;</operator><name pos:start="543:58" pos:end="543:63">status</name><index pos:start="543:64" pos:end="543:66">[<expr pos:start="543:65" pos:end="543:65"><literal type="number" pos:start="543:65" pos:end="543:65">1</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="545:21" pos:end="545:33"><expr pos:start="545:21" pos:end="545:33"><name pos:start="545:21" pos:end="545:26"><name pos:start="545:21" pos:end="545:23">src</name><index pos:start="545:24" pos:end="545:26">[<expr pos:start="545:25" pos:end="545:25"><literal type="number" pos:start="545:25" pos:end="545:25">0</literal></expr>]</index></name> <operator pos:start="545:28" pos:end="545:28">&amp;</operator> <literal type="number" pos:start="545:30" pos:end="545:33">0x0F</literal></expr></argument>, <argument pos:start="545:36" pos:end="545:36"><expr pos:start="545:36" pos:end="545:36"><literal type="number" pos:start="545:36" pos:end="545:36">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="547:15" pos:end="557:13">else <block pos:start="547:20" pos:end="557:13">{<block_content pos:start="549:17" pos:end="555:38">

                <expr_stmt pos:start="549:17" pos:end="551:38"><expr pos:start="549:17" pos:end="551:37"><operator pos:start="549:17" pos:end="549:17">*</operator><name pos:start="549:18" pos:end="549:24">samples</name><operator pos:start="549:25" pos:end="549:26">++</operator> <operator pos:start="549:28" pos:end="549:28">=</operator> <call pos:start="549:30" pos:end="551:37"><name pos:start="549:30" pos:end="549:52">adpcm_ima_expand_nibble</name><argument_list pos:start="549:53" pos:end="551:37">(<argument pos:start="549:54" pos:end="549:66"><expr pos:start="549:54" pos:end="549:66"><operator pos:start="549:54" pos:end="549:54">&amp;</operator><name pos:start="549:55" pos:end="549:66"><name pos:start="549:55" pos:end="549:55">c</name><operator pos:start="549:56" pos:end="549:57">-&gt;</operator><name pos:start="549:58" pos:end="549:63">status</name><index pos:start="549:64" pos:end="549:66">[<expr pos:start="549:65" pos:end="549:65"><literal type="number" pos:start="549:65" pos:end="549:65">0</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="551:21" pos:end="551:31"><expr pos:start="551:21" pos:end="551:31"><name pos:start="551:21" pos:end="551:26"><name pos:start="551:21" pos:end="551:23">src</name><index pos:start="551:24" pos:end="551:26">[<expr pos:start="551:25" pos:end="551:25"><literal type="number" pos:start="551:25" pos:end="551:25">0</literal></expr>]</index></name> <operator pos:start="551:28" pos:end="551:29">&gt;&gt;</operator> <literal type="number" pos:start="551:31" pos:end="551:31">4</literal></expr></argument>  , <argument pos:start="551:36" pos:end="551:36"><expr pos:start="551:36" pos:end="551:36"><literal type="number" pos:start="551:36" pos:end="551:36">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="553:17" pos:end="555:38"><expr pos:start="553:17" pos:end="555:37"><operator pos:start="553:17" pos:end="553:17">*</operator><name pos:start="553:18" pos:end="553:24">samples</name><operator pos:start="553:25" pos:end="553:26">++</operator> <operator pos:start="553:28" pos:end="553:28">=</operator> <call pos:start="553:30" pos:end="555:37"><name pos:start="553:30" pos:end="553:52">adpcm_ima_expand_nibble</name><argument_list pos:start="553:53" pos:end="555:37">(<argument pos:start="553:54" pos:end="553:66"><expr pos:start="553:54" pos:end="553:66"><operator pos:start="553:54" pos:end="553:54">&amp;</operator><name pos:start="553:55" pos:end="553:66"><name pos:start="553:55" pos:end="553:55">c</name><operator pos:start="553:56" pos:end="553:57">-&gt;</operator><name pos:start="553:58" pos:end="553:63">status</name><index pos:start="553:64" pos:end="553:66">[<expr pos:start="553:65" pos:end="553:65"><literal type="number" pos:start="553:65" pos:end="553:65">0</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="555:21" pos:end="555:33"><expr pos:start="555:21" pos:end="555:33"><name pos:start="555:21" pos:end="555:26"><name pos:start="555:21" pos:end="555:23">src</name><index pos:start="555:24" pos:end="555:26">[<expr pos:start="555:25" pos:end="555:25"><literal type="number" pos:start="555:25" pos:end="555:25">0</literal></expr>]</index></name> <operator pos:start="555:28" pos:end="555:28">&amp;</operator> <literal type="number" pos:start="555:30" pos:end="555:33">0x0F</literal></expr></argument>, <argument pos:start="555:36" pos:end="555:36"><expr pos:start="555:36" pos:end="555:36"><literal type="number" pos:start="555:36" pos:end="555:36">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="561:13" pos:end="561:18"><expr pos:start="561:13" pos:end="561:17"><name pos:start="561:13" pos:end="561:15">src</name><operator pos:start="561:16" pos:end="561:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <break pos:start="565:9" pos:end="565:14">break;</break>

    <case pos:start="567:5" pos:end="567:27">case <expr pos:start="567:10" pos:end="567:26"><name pos:start="567:10" pos:end="567:26">CODEC_ID_ADPCM_XA</name></expr>:</case>

        <while pos:start="569:9" pos:end="581:9">while <condition pos:start="569:15" pos:end="569:31">(<expr pos:start="569:16" pos:end="569:30"><name pos:start="569:16" pos:end="569:23">buf_size</name> <operator pos:start="569:25" pos:end="569:26">&gt;=</operator> <literal type="number" pos:start="569:28" pos:end="569:30">128</literal></expr>)</condition> <block pos:start="569:33" pos:end="581:9">{<block_content pos:start="571:13" pos:end="579:28">

            <expr_stmt pos:start="571:13" pos:end="573:33"><expr pos:start="571:13" pos:end="573:32"><call pos:start="571:13" pos:end="573:32"><name pos:start="571:13" pos:end="571:21">xa_decode</name><argument_list pos:start="571:22" pos:end="573:32">(<argument pos:start="571:23" pos:end="571:29"><expr pos:start="571:23" pos:end="571:29"><name pos:start="571:23" pos:end="571:29">samples</name></expr></argument>, <argument pos:start="571:32" pos:end="571:34"><expr pos:start="571:32" pos:end="571:34"><name pos:start="571:32" pos:end="571:34">src</name></expr></argument>, <argument pos:start="571:37" pos:end="571:49"><expr pos:start="571:37" pos:end="571:49"><operator pos:start="571:37" pos:end="571:37">&amp;</operator><name pos:start="571:38" pos:end="571:49"><name pos:start="571:38" pos:end="571:38">c</name><operator pos:start="571:39" pos:end="571:40">-&gt;</operator><name pos:start="571:41" pos:end="571:46">status</name><index pos:start="571:47" pos:end="571:49">[<expr pos:start="571:48" pos:end="571:48"><literal type="number" pos:start="571:48" pos:end="571:48">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="571:52" pos:end="571:64"><expr pos:start="571:52" pos:end="571:64"><operator pos:start="571:52" pos:end="571:52">&amp;</operator><name pos:start="571:53" pos:end="571:64"><name pos:start="571:53" pos:end="571:53">c</name><operator pos:start="571:54" pos:end="571:55">-&gt;</operator><name pos:start="571:56" pos:end="571:61">status</name><index pos:start="571:62" pos:end="571:64">[<expr pos:start="571:63" pos:end="571:63"><literal type="number" pos:start="571:63" pos:end="571:63">1</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="573:17" pos:end="573:31"><expr pos:start="573:17" pos:end="573:31"><name pos:start="573:17" pos:end="573:31"><name pos:start="573:17" pos:end="573:21">avctx</name><operator pos:start="573:22" pos:end="573:23">-&gt;</operator><name pos:start="573:24" pos:end="573:31">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="575:13" pos:end="575:23"><expr pos:start="575:13" pos:end="575:22"><name pos:start="575:13" pos:end="575:15">src</name> <operator pos:start="575:17" pos:end="575:18">+=</operator> <literal type="number" pos:start="575:20" pos:end="575:22">128</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="577:13" pos:end="577:30"><expr pos:start="577:13" pos:end="577:29"><name pos:start="577:13" pos:end="577:19">samples</name> <operator pos:start="577:21" pos:end="577:22">+=</operator> <literal type="number" pos:start="577:24" pos:end="577:25">28</literal> <operator pos:start="577:27" pos:end="577:27">*</operator> <literal type="number" pos:start="577:29" pos:end="577:29">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="579:13" pos:end="579:28"><expr pos:start="579:13" pos:end="579:27"><name pos:start="579:13" pos:end="579:20">buf_size</name> <operator pos:start="579:22" pos:end="579:23">-=</operator> <literal type="number" pos:start="579:25" pos:end="579:27">128</literal></expr>;</expr_stmt>

        </block_content>}</block></while>

        <break pos:start="583:9" pos:end="583:14">break;</break>

    <case pos:start="585:5" pos:end="585:36">case <expr pos:start="585:10" pos:end="585:35"><name pos:start="585:10" pos:end="585:35">CODEC_ID_ADPCM_IMA_EA_EACS</name></expr>:</case>

        <expr_stmt pos:start="587:9" pos:end="587:63"><expr pos:start="587:9" pos:end="587:62"><name pos:start="587:9" pos:end="587:24">samples_in_chunk</name> <operator pos:start="587:26" pos:end="587:26">=</operator> <call pos:start="587:28" pos:end="587:52"><name pos:start="587:28" pos:end="587:46">bytestream_get_le32</name><argument_list pos:start="587:47" pos:end="587:52">(<argument pos:start="587:48" pos:end="587:51"><expr pos:start="587:48" pos:end="587:51"><operator pos:start="587:48" pos:end="587:48">&amp;</operator><name pos:start="587:49" pos:end="587:51">src</name></expr></argument>)</argument_list></call> <operator pos:start="587:54" pos:end="587:55">&gt;&gt;</operator> <operator pos:start="587:57" pos:end="587:57">(</operator><literal type="number" pos:start="587:58" pos:end="587:59">1</literal><operator pos:start="587:59" pos:end="587:59">-</operator><name pos:start="587:60" pos:end="587:61">st</name><operator pos:start="587:62" pos:end="587:62">)</operator></expr>;</expr_stmt>



        <if_stmt pos:start="591:9" pos:end="597:9"><if pos:start="591:9" pos:end="597:9">if <condition pos:start="591:12" pos:end="591:50">(<expr pos:start="591:13" pos:end="591:49"><name pos:start="591:13" pos:end="591:28">samples_in_chunk</name> <operator pos:start="591:30" pos:end="591:30">&gt;</operator> <name pos:start="591:32" pos:end="591:39">buf_size</name><operator pos:start="591:40" pos:end="591:40">-</operator><literal type="number" pos:start="591:41" pos:end="591:42">4</literal><operator pos:start="591:42" pos:end="591:42">-</operator><operator pos:start="591:43" pos:end="591:43">(</operator><literal type="number" pos:start="591:44" pos:end="591:44">8</literal><operator pos:start="591:45" pos:end="591:46">&lt;&lt;</operator><name pos:start="591:47" pos:end="591:48">st</name><operator pos:start="591:49" pos:end="591:49">)</operator></expr>)</condition> <block pos:start="591:52" pos:end="597:9">{<block_content pos:start="593:13" pos:end="595:18">

            <expr_stmt pos:start="593:13" pos:end="593:32"><expr pos:start="593:13" pos:end="593:31"><name pos:start="593:13" pos:end="593:15">src</name> <operator pos:start="593:17" pos:end="593:18">+=</operator> <name pos:start="593:20" pos:end="593:27">buf_size</name> <operator pos:start="593:29" pos:end="593:29">-</operator> <literal type="number" pos:start="593:31" pos:end="593:31">4</literal></expr>;</expr_stmt>

            <break pos:start="595:13" pos:end="595:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <for pos:start="601:9" pos:end="603:64">for <control pos:start="601:13" pos:end="601:29">(<init pos:start="601:14" pos:end="601:17"><expr pos:start="601:14" pos:end="601:16"><name pos:start="601:14" pos:end="601:14">i</name><operator pos:start="601:15" pos:end="601:15">=</operator><literal type="number" pos:start="601:16" pos:end="601:16">0</literal></expr>;</init> <condition pos:start="601:19" pos:end="601:24"><expr pos:start="601:19" pos:end="601:23"><name pos:start="601:19" pos:end="601:19">i</name><operator pos:start="601:20" pos:end="601:21">&lt;=</operator><name pos:start="601:22" pos:end="601:23">st</name></expr>;</condition> <incr pos:start="601:26" pos:end="601:28"><expr pos:start="601:26" pos:end="601:28"><name pos:start="601:26" pos:end="601:26">i</name><operator pos:start="601:27" pos:end="601:28">++</operator></expr></incr>)</control><block type="pseudo" pos:start="603:13" pos:end="603:64"><block_content pos:start="603:13" pos:end="603:64">

            <expr_stmt pos:start="603:13" pos:end="603:64"><expr pos:start="603:13" pos:end="603:63"><name pos:start="603:13" pos:end="603:24"><name pos:start="603:13" pos:end="603:13">c</name><operator pos:start="603:14" pos:end="603:15">-&gt;</operator><name pos:start="603:16" pos:end="603:21">status</name><index pos:start="603:22" pos:end="603:24">[<expr pos:start="603:23" pos:end="603:23"><name pos:start="603:23" pos:end="603:23">i</name></expr>]</index></name><operator pos:start="603:25" pos:end="603:25">.</operator><name pos:start="603:26" pos:end="603:35">step_index</name> <operator pos:start="603:37" pos:end="603:37">=</operator> <call pos:start="603:39" pos:end="603:63"><name pos:start="603:39" pos:end="603:57">bytestream_get_le32</name><argument_list pos:start="603:58" pos:end="603:63">(<argument pos:start="603:59" pos:end="603:62"><expr pos:start="603:59" pos:end="603:62"><operator pos:start="603:59" pos:end="603:59">&amp;</operator><name pos:start="603:60" pos:end="603:62">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="605:9" pos:end="607:64">for <control pos:start="605:13" pos:end="605:29">(<init pos:start="605:14" pos:end="605:17"><expr pos:start="605:14" pos:end="605:16"><name pos:start="605:14" pos:end="605:14">i</name><operator pos:start="605:15" pos:end="605:15">=</operator><literal type="number" pos:start="605:16" pos:end="605:16">0</literal></expr>;</init> <condition pos:start="605:19" pos:end="605:24"><expr pos:start="605:19" pos:end="605:23"><name pos:start="605:19" pos:end="605:19">i</name><operator pos:start="605:20" pos:end="605:21">&lt;=</operator><name pos:start="605:22" pos:end="605:23">st</name></expr>;</condition> <incr pos:start="605:26" pos:end="605:28"><expr pos:start="605:26" pos:end="605:28"><name pos:start="605:26" pos:end="605:26">i</name><operator pos:start="605:27" pos:end="605:28">++</operator></expr></incr>)</control><block type="pseudo" pos:start="607:13" pos:end="607:64"><block_content pos:start="607:13" pos:end="607:64">

            <expr_stmt pos:start="607:13" pos:end="607:64"><expr pos:start="607:13" pos:end="607:63"><name pos:start="607:13" pos:end="607:24"><name pos:start="607:13" pos:end="607:13">c</name><operator pos:start="607:14" pos:end="607:15">-&gt;</operator><name pos:start="607:16" pos:end="607:21">status</name><index pos:start="607:22" pos:end="607:24">[<expr pos:start="607:23" pos:end="607:23"><name pos:start="607:23" pos:end="607:23">i</name></expr>]</index></name><operator pos:start="607:25" pos:end="607:25">.</operator><name pos:start="607:26" pos:end="607:34">predictor</name>  <operator pos:start="607:37" pos:end="607:37">=</operator> <call pos:start="607:39" pos:end="607:63"><name pos:start="607:39" pos:end="607:57">bytestream_get_le32</name><argument_list pos:start="607:58" pos:end="607:63">(<argument pos:start="607:59" pos:end="607:62"><expr pos:start="607:59" pos:end="607:62"><operator pos:start="607:59" pos:end="607:59">&amp;</operator><name pos:start="607:60" pos:end="607:62">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <for pos:start="611:9" pos:end="617:9">for <control pos:start="611:13" pos:end="611:59">(<init pos:start="611:14" pos:end="611:14">;</init> <condition pos:start="611:16" pos:end="611:32"><expr pos:start="611:16" pos:end="611:31"><name pos:start="611:16" pos:end="611:31">samples_in_chunk</name></expr>;</condition> <incr pos:start="611:34" pos:end="611:58"><expr pos:start="611:34" pos:end="611:51"><name pos:start="611:34" pos:end="611:49">samples_in_chunk</name><operator pos:start="611:50" pos:end="611:51">--</operator></expr><operator pos:start="611:52" pos:end="611:52">,</operator> <expr pos:start="611:54" pos:end="611:58"><name pos:start="611:54" pos:end="611:56">src</name><operator pos:start="611:57" pos:end="611:58">++</operator></expr></incr>)</control> <block pos:start="611:61" pos:end="617:9">{<block_content pos:start="613:13" pos:end="615:79">

            <expr_stmt pos:start="613:13" pos:end="613:79"><expr pos:start="613:13" pos:end="613:78"><operator pos:start="613:13" pos:end="613:13">*</operator><name pos:start="613:14" pos:end="613:20">samples</name><operator pos:start="613:21" pos:end="613:22">++</operator> <operator pos:start="613:24" pos:end="613:24">=</operator> <call pos:start="613:26" pos:end="613:78"><name pos:start="613:26" pos:end="613:48">adpcm_ima_expand_nibble</name><argument_list pos:start="613:49" pos:end="613:78">(<argument pos:start="613:50" pos:end="613:62"><expr pos:start="613:50" pos:end="613:62"><operator pos:start="613:50" pos:end="613:50">&amp;</operator><name pos:start="613:51" pos:end="613:62"><name pos:start="613:51" pos:end="613:51">c</name><operator pos:start="613:52" pos:end="613:53">-&gt;</operator><name pos:start="613:54" pos:end="613:59">status</name><index pos:start="613:60" pos:end="613:62">[<expr pos:start="613:61" pos:end="613:61"><literal type="number" pos:start="613:61" pos:end="613:61">0</literal></expr>]</index></name></expr></argument>,  <argument pos:start="613:66" pos:end="613:72"><expr pos:start="613:66" pos:end="613:72"><operator pos:start="613:66" pos:end="613:66">*</operator><name pos:start="613:67" pos:end="613:69">src</name><operator pos:start="613:70" pos:end="613:71">&gt;&gt;</operator><literal type="number" pos:start="613:72" pos:end="613:72">4</literal></expr></argument>,   <argument pos:start="613:77" pos:end="613:77"><expr pos:start="613:77" pos:end="613:77"><literal type="number" pos:start="613:77" pos:end="613:77">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="615:13" pos:end="615:79"><expr pos:start="615:13" pos:end="615:78"><operator pos:start="615:13" pos:end="615:13">*</operator><name pos:start="615:14" pos:end="615:20">samples</name><operator pos:start="615:21" pos:end="615:22">++</operator> <operator pos:start="615:24" pos:end="615:24">=</operator> <call pos:start="615:26" pos:end="615:78"><name pos:start="615:26" pos:end="615:48">adpcm_ima_expand_nibble</name><argument_list pos:start="615:49" pos:end="615:78">(<argument pos:start="615:50" pos:end="615:63"><expr pos:start="615:50" pos:end="615:63"><operator pos:start="615:50" pos:end="615:50">&amp;</operator><name pos:start="615:51" pos:end="615:63"><name pos:start="615:51" pos:end="615:51">c</name><operator pos:start="615:52" pos:end="615:53">-&gt;</operator><name pos:start="615:54" pos:end="615:59">status</name><index pos:start="615:60" pos:end="615:63">[<expr pos:start="615:61" pos:end="615:62"><name pos:start="615:61" pos:end="615:62">st</name></expr>]</index></name></expr></argument>, <argument pos:start="615:66" pos:end="615:74"><expr pos:start="615:66" pos:end="615:74"><operator pos:start="615:66" pos:end="615:66">*</operator><name pos:start="615:67" pos:end="615:69">src</name><operator pos:start="615:70" pos:end="615:70">&amp;</operator><literal type="number" pos:start="615:71" pos:end="615:74">0x0F</literal></expr></argument>, <argument pos:start="615:77" pos:end="615:77"><expr pos:start="615:77" pos:end="615:77"><literal type="number" pos:start="615:77" pos:end="615:77">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="619:9" pos:end="619:14">break;</break>

    <case pos:start="621:5" pos:end="621:36">case <expr pos:start="621:10" pos:end="621:35"><name pos:start="621:10" pos:end="621:35">CODEC_ID_ADPCM_IMA_EA_SEAD</name></expr>:</case>

        <for pos:start="623:9" pos:end="629:9">for <control pos:start="623:13" pos:end="623:41">(<init pos:start="623:14" pos:end="623:14">;</init> <condition pos:start="623:16" pos:end="623:34"><expr pos:start="623:16" pos:end="623:33"><name pos:start="623:16" pos:end="623:18">src</name> <operator pos:start="623:20" pos:end="623:20">&lt;</operator> <name pos:start="623:22" pos:end="623:24">buf</name><operator pos:start="623:25" pos:end="623:25">+</operator><name pos:start="623:26" pos:end="623:33">buf_size</name></expr>;</condition> <incr pos:start="623:36" pos:end="623:40"><expr pos:start="623:36" pos:end="623:40"><name pos:start="623:36" pos:end="623:38">src</name><operator pos:start="623:39" pos:end="623:40">++</operator></expr></incr>)</control> <block pos:start="623:43" pos:end="629:9">{<block_content pos:start="625:13" pos:end="627:80">

            <expr_stmt pos:start="625:13" pos:end="625:80"><expr pos:start="625:13" pos:end="625:79"><operator pos:start="625:13" pos:end="625:13">*</operator><name pos:start="625:14" pos:end="625:20">samples</name><operator pos:start="625:21" pos:end="625:22">++</operator> <operator pos:start="625:24" pos:end="625:24">=</operator> <call pos:start="625:26" pos:end="625:79"><name pos:start="625:26" pos:end="625:48">adpcm_ima_expand_nibble</name><argument_list pos:start="625:49" pos:end="625:79">(<argument pos:start="625:50" pos:end="625:62"><expr pos:start="625:50" pos:end="625:62"><operator pos:start="625:50" pos:end="625:50">&amp;</operator><name pos:start="625:51" pos:end="625:62"><name pos:start="625:51" pos:end="625:51">c</name><operator pos:start="625:52" pos:end="625:53">-&gt;</operator><name pos:start="625:54" pos:end="625:59">status</name><index pos:start="625:60" pos:end="625:62">[<expr pos:start="625:61" pos:end="625:61"><literal type="number" pos:start="625:61" pos:end="625:61">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="625:65" pos:end="625:75"><expr pos:start="625:65" pos:end="625:75"><name pos:start="625:65" pos:end="625:70"><name pos:start="625:65" pos:end="625:67">src</name><index pos:start="625:68" pos:end="625:70">[<expr pos:start="625:69" pos:end="625:69"><literal type="number" pos:start="625:69" pos:end="625:69">0</literal></expr>]</index></name> <operator pos:start="625:72" pos:end="625:73">&gt;&gt;</operator> <literal type="number" pos:start="625:75" pos:end="625:75">4</literal></expr></argument>, <argument pos:start="625:78" pos:end="625:78"><expr pos:start="625:78" pos:end="625:78"><literal type="number" pos:start="625:78" pos:end="625:78">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="627:13" pos:end="627:80"><expr pos:start="627:13" pos:end="627:79"><operator pos:start="627:13" pos:end="627:13">*</operator><name pos:start="627:14" pos:end="627:20">samples</name><operator pos:start="627:21" pos:end="627:22">++</operator> <operator pos:start="627:24" pos:end="627:24">=</operator> <call pos:start="627:26" pos:end="627:79"><name pos:start="627:26" pos:end="627:48">adpcm_ima_expand_nibble</name><argument_list pos:start="627:49" pos:end="627:79">(<argument pos:start="627:50" pos:end="627:63"><expr pos:start="627:50" pos:end="627:63"><operator pos:start="627:50" pos:end="627:50">&amp;</operator><name pos:start="627:51" pos:end="627:63"><name pos:start="627:51" pos:end="627:51">c</name><operator pos:start="627:52" pos:end="627:53">-&gt;</operator><name pos:start="627:54" pos:end="627:59">status</name><index pos:start="627:60" pos:end="627:63">[<expr pos:start="627:61" pos:end="627:62"><name pos:start="627:61" pos:end="627:62">st</name></expr>]</index></name></expr></argument>,<argument pos:start="627:65" pos:end="627:75"><expr pos:start="627:65" pos:end="627:75"><name pos:start="627:65" pos:end="627:70"><name pos:start="627:65" pos:end="627:67">src</name><index pos:start="627:68" pos:end="627:70">[<expr pos:start="627:69" pos:end="627:69"><literal type="number" pos:start="627:69" pos:end="627:69">0</literal></expr>]</index></name><operator pos:start="627:71" pos:end="627:71">&amp;</operator><literal type="number" pos:start="627:72" pos:end="627:75">0x0F</literal></expr></argument>, <argument pos:start="627:78" pos:end="627:78"><expr pos:start="627:78" pos:end="627:78"><literal type="number" pos:start="627:78" pos:end="627:78">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="631:9" pos:end="631:14">break;</break>

    <case pos:start="633:5" pos:end="633:27">case <expr pos:start="633:10" pos:end="633:26"><name pos:start="633:10" pos:end="633:26">CODEC_ID_ADPCM_EA</name></expr>:</case>

        <expr_stmt pos:start="635:9" pos:end="635:40"><expr pos:start="635:9" pos:end="635:39"><name pos:start="635:9" pos:end="635:24">samples_in_chunk</name> <operator pos:start="635:26" pos:end="635:26">=</operator> <call pos:start="635:28" pos:end="635:39"><name pos:start="635:28" pos:end="635:34">AV_RL32</name><argument_list pos:start="635:35" pos:end="635:39">(<argument pos:start="635:36" pos:end="635:38"><expr pos:start="635:36" pos:end="635:38"><name pos:start="635:36" pos:end="635:38">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="637:9" pos:end="643:9"><if pos:start="637:9" pos:end="643:9">if <condition pos:start="637:12" pos:end="637:54">(<expr pos:start="637:13" pos:end="637:53"><name pos:start="637:13" pos:end="637:28">samples_in_chunk</name> <operator pos:start="637:30" pos:end="637:31">&gt;=</operator> <operator pos:start="637:33" pos:end="637:33">(</operator><operator pos:start="637:34" pos:end="637:34">(</operator><name pos:start="637:35" pos:end="637:42">buf_size</name> <operator pos:start="637:44" pos:end="637:44">-</operator> <literal type="number" pos:start="637:46" pos:end="637:47">12</literal><operator pos:start="637:48" pos:end="637:48">)</operator> <operator pos:start="637:50" pos:end="637:50">*</operator> <literal type="number" pos:start="637:52" pos:end="637:52">2</literal><operator pos:start="637:53" pos:end="637:53">)</operator></expr>)</condition> <block pos:start="637:56" pos:end="643:9">{<block_content pos:start="639:13" pos:end="641:18">

            <expr_stmt pos:start="639:13" pos:end="639:28"><expr pos:start="639:13" pos:end="639:27"><name pos:start="639:13" pos:end="639:15">src</name> <operator pos:start="639:17" pos:end="639:18">+=</operator> <name pos:start="639:20" pos:end="639:27">buf_size</name></expr>;</expr_stmt>

            <break pos:start="641:13" pos:end="641:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="645:9" pos:end="645:17"><expr pos:start="645:9" pos:end="645:16"><name pos:start="645:9" pos:end="645:11">src</name> <operator pos:start="645:13" pos:end="645:14">+=</operator> <literal type="number" pos:start="645:16" pos:end="645:16">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="647:9" pos:end="647:52"><expr pos:start="647:9" pos:end="647:51"><name pos:start="647:9" pos:end="647:27">current_left_sample</name> <operator pos:start="647:29" pos:end="647:29">=</operator> <operator pos:start="647:31" pos:end="647:31">(</operator><name pos:start="647:32" pos:end="647:38">int16_t</name><operator pos:start="647:39" pos:end="647:39">)</operator><call pos:start="647:40" pos:end="647:51"><name pos:start="647:40" pos:end="647:46">AV_RL16</name><argument_list pos:start="647:47" pos:end="647:51">(<argument pos:start="647:48" pos:end="647:50"><expr pos:start="647:48" pos:end="647:50"><name pos:start="647:48" pos:end="647:50">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="649:9" pos:end="649:17"><expr pos:start="649:9" pos:end="649:16"><name pos:start="649:9" pos:end="649:11">src</name> <operator pos:start="649:13" pos:end="649:14">+=</operator> <literal type="number" pos:start="649:16" pos:end="649:16">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="651:9" pos:end="651:53"><expr pos:start="651:9" pos:end="651:52"><name pos:start="651:9" pos:end="651:28">previous_left_sample</name> <operator pos:start="651:30" pos:end="651:30">=</operator> <operator pos:start="651:32" pos:end="651:32">(</operator><name pos:start="651:33" pos:end="651:39">int16_t</name><operator pos:start="651:40" pos:end="651:40">)</operator><call pos:start="651:41" pos:end="651:52"><name pos:start="651:41" pos:end="651:47">AV_RL16</name><argument_list pos:start="651:48" pos:end="651:52">(<argument pos:start="651:49" pos:end="651:51"><expr pos:start="651:49" pos:end="651:51"><name pos:start="651:49" pos:end="651:51">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="653:9" pos:end="653:17"><expr pos:start="653:9" pos:end="653:16"><name pos:start="653:9" pos:end="653:11">src</name> <operator pos:start="653:13" pos:end="653:14">+=</operator> <literal type="number" pos:start="653:16" pos:end="653:16">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="655:9" pos:end="655:53"><expr pos:start="655:9" pos:end="655:52"><name pos:start="655:9" pos:end="655:28">current_right_sample</name> <operator pos:start="655:30" pos:end="655:30">=</operator> <operator pos:start="655:32" pos:end="655:32">(</operator><name pos:start="655:33" pos:end="655:39">int16_t</name><operator pos:start="655:40" pos:end="655:40">)</operator><call pos:start="655:41" pos:end="655:52"><name pos:start="655:41" pos:end="655:47">AV_RL16</name><argument_list pos:start="655:48" pos:end="655:52">(<argument pos:start="655:49" pos:end="655:51"><expr pos:start="655:49" pos:end="655:51"><name pos:start="655:49" pos:end="655:51">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="657:9" pos:end="657:17"><expr pos:start="657:9" pos:end="657:16"><name pos:start="657:9" pos:end="657:11">src</name> <operator pos:start="657:13" pos:end="657:14">+=</operator> <literal type="number" pos:start="657:16" pos:end="657:16">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="659:9" pos:end="659:54"><expr pos:start="659:9" pos:end="659:53"><name pos:start="659:9" pos:end="659:29">previous_right_sample</name> <operator pos:start="659:31" pos:end="659:31">=</operator> <operator pos:start="659:33" pos:end="659:33">(</operator><name pos:start="659:34" pos:end="659:40">int16_t</name><operator pos:start="659:41" pos:end="659:41">)</operator><call pos:start="659:42" pos:end="659:53"><name pos:start="659:42" pos:end="659:48">AV_RL16</name><argument_list pos:start="659:49" pos:end="659:53">(<argument pos:start="659:50" pos:end="659:52"><expr pos:start="659:50" pos:end="659:52"><name pos:start="659:50" pos:end="659:52">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="661:9" pos:end="661:17"><expr pos:start="661:9" pos:end="661:16"><name pos:start="661:9" pos:end="661:11">src</name> <operator pos:start="661:13" pos:end="661:14">+=</operator> <literal type="number" pos:start="661:16" pos:end="661:16">2</literal></expr>;</expr_stmt>



        <for pos:start="665:9" pos:end="725:9">for <control pos:start="665:13" pos:end="665:63">(<init pos:start="665:14" pos:end="665:24"><expr pos:start="665:14" pos:end="665:23"><name pos:start="665:14" pos:end="665:19">count1</name> <operator pos:start="665:21" pos:end="665:21">=</operator> <literal type="number" pos:start="665:23" pos:end="665:23">0</literal></expr>;</init> <condition pos:start="665:26" pos:end="665:54"><expr pos:start="665:26" pos:end="665:53"><name pos:start="665:26" pos:end="665:31">count1</name> <operator pos:start="665:33" pos:end="665:33">&lt;</operator> <name pos:start="665:35" pos:end="665:50">samples_in_chunk</name><operator pos:start="665:51" pos:end="665:51">/</operator><literal type="number" pos:start="665:52" pos:end="665:53">28</literal></expr>;</condition><incr pos:start="665:55" pos:end="665:62"><expr pos:start="665:55" pos:end="665:62"><name pos:start="665:55" pos:end="665:60">count1</name><operator pos:start="665:61" pos:end="665:62">++</operator></expr></incr>)</control> <block pos:start="665:65" pos:end="725:9">{<block_content pos:start="667:13" pos:end="723:13">

            <expr_stmt pos:start="667:13" pos:end="667:56"><expr pos:start="667:13" pos:end="667:55"><name pos:start="667:13" pos:end="667:19">coeff1l</name> <operator pos:start="667:21" pos:end="667:21">=</operator> <name pos:start="667:23" pos:end="667:55"><name pos:start="667:23" pos:end="667:36">ea_adpcm_table</name><index pos:start="667:37" pos:end="667:55">[ <expr pos:start="667:39" pos:end="667:47"><operator pos:start="667:39" pos:end="667:39">*</operator><name pos:start="667:40" pos:end="667:42">src</name> <operator pos:start="667:44" pos:end="667:45">&gt;&gt;</operator> <literal type="number" pos:start="667:47" pos:end="667:47">4</literal></expr>       ]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="669:13" pos:end="669:56"><expr pos:start="669:13" pos:end="669:55"><name pos:start="669:13" pos:end="669:19">coeff2l</name> <operator pos:start="669:21" pos:end="669:21">=</operator> <name pos:start="669:23" pos:end="669:55"><name pos:start="669:23" pos:end="669:36">ea_adpcm_table</name><index pos:start="669:37" pos:end="669:55">[<expr pos:start="669:38" pos:end="669:54"><operator pos:start="669:38" pos:end="669:38">(</operator><operator pos:start="669:39" pos:end="669:39">*</operator><name pos:start="669:40" pos:end="669:42">src</name> <operator pos:start="669:44" pos:end="669:45">&gt;&gt;</operator> <literal type="number" pos:start="669:47" pos:end="669:47">4</literal>  <operator pos:start="669:50" pos:end="669:50">)</operator> <operator pos:start="669:52" pos:end="669:52">+</operator> <literal type="number" pos:start="669:54" pos:end="669:54">4</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="671:13" pos:end="671:50"><expr pos:start="671:13" pos:end="671:49"><name pos:start="671:13" pos:end="671:19">coeff1r</name> <operator pos:start="671:21" pos:end="671:21">=</operator> <name pos:start="671:23" pos:end="671:49"><name pos:start="671:23" pos:end="671:36">ea_adpcm_table</name><index pos:start="671:37" pos:end="671:49">[<expr pos:start="671:38" pos:end="671:48"><operator pos:start="671:38" pos:end="671:38">*</operator><name pos:start="671:39" pos:end="671:41">src</name> <operator pos:start="671:43" pos:end="671:43">&amp;</operator> <literal type="number" pos:start="671:45" pos:end="671:48">0x0F</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="673:13" pos:end="673:56"><expr pos:start="673:13" pos:end="673:55"><name pos:start="673:13" pos:end="673:19">coeff2r</name> <operator pos:start="673:21" pos:end="673:21">=</operator> <name pos:start="673:23" pos:end="673:55"><name pos:start="673:23" pos:end="673:36">ea_adpcm_table</name><index pos:start="673:37" pos:end="673:55">[<expr pos:start="673:38" pos:end="673:54"><operator pos:start="673:38" pos:end="673:38">(</operator><operator pos:start="673:39" pos:end="673:39">*</operator><name pos:start="673:40" pos:end="673:42">src</name> <operator pos:start="673:44" pos:end="673:44">&amp;</operator> <literal type="number" pos:start="673:46" pos:end="673:49">0x0F</literal><operator pos:start="673:50" pos:end="673:50">)</operator> <operator pos:start="673:52" pos:end="673:52">+</operator> <literal type="number" pos:start="673:54" pos:end="673:54">4</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="675:13" pos:end="675:18"><expr pos:start="675:13" pos:end="675:17"><name pos:start="675:13" pos:end="675:15">src</name><operator pos:start="675:16" pos:end="675:17">++</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="679:13" pos:end="679:44"><expr pos:start="679:13" pos:end="679:43"><name pos:start="679:13" pos:end="679:22">shift_left</name>  <operator pos:start="679:25" pos:end="679:25">=</operator> <operator pos:start="679:27" pos:end="679:27">(</operator><operator pos:start="679:28" pos:end="679:28">*</operator><name pos:start="679:29" pos:end="679:31">src</name> <operator pos:start="679:33" pos:end="679:34">&gt;&gt;</operator> <literal type="number" pos:start="679:36" pos:end="679:36">4</literal>  <operator pos:start="679:39" pos:end="679:39">)</operator> <operator pos:start="679:41" pos:end="679:41">+</operator> <literal type="number" pos:start="679:43" pos:end="679:43">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="681:13" pos:end="681:44"><expr pos:start="681:13" pos:end="681:43"><name pos:start="681:13" pos:end="681:23">shift_right</name> <operator pos:start="681:25" pos:end="681:25">=</operator> <operator pos:start="681:27" pos:end="681:27">(</operator><operator pos:start="681:28" pos:end="681:28">*</operator><name pos:start="681:29" pos:end="681:31">src</name> <operator pos:start="681:33" pos:end="681:33">&amp;</operator> <literal type="number" pos:start="681:35" pos:end="681:38">0x0F</literal><operator pos:start="681:39" pos:end="681:39">)</operator> <operator pos:start="681:41" pos:end="681:41">+</operator> <literal type="number" pos:start="681:43" pos:end="681:43">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="683:13" pos:end="683:18"><expr pos:start="683:13" pos:end="683:17"><name pos:start="683:13" pos:end="683:15">src</name><operator pos:start="683:16" pos:end="683:17">++</operator></expr>;</expr_stmt>



            <for pos:start="687:13" pos:end="723:13">for <control pos:start="687:17" pos:end="687:51">(<init pos:start="687:18" pos:end="687:28"><expr pos:start="687:18" pos:end="687:27"><name pos:start="687:18" pos:end="687:23">count2</name> <operator pos:start="687:25" pos:end="687:25">=</operator> <literal type="number" pos:start="687:27" pos:end="687:27">0</literal></expr>;</init> <condition pos:start="687:30" pos:end="687:41"><expr pos:start="687:30" pos:end="687:40"><name pos:start="687:30" pos:end="687:35">count2</name> <operator pos:start="687:37" pos:end="687:37">&lt;</operator> <literal type="number" pos:start="687:39" pos:end="687:40">28</literal></expr>;</condition> <incr pos:start="687:43" pos:end="687:50"><expr pos:start="687:43" pos:end="687:50"><name pos:start="687:43" pos:end="687:48">count2</name><operator pos:start="687:49" pos:end="687:50">++</operator></expr></incr>)</control> <block pos:start="687:53" pos:end="723:13">{<block_content pos:start="689:17" pos:end="721:66">

                <expr_stmt pos:start="689:17" pos:end="689:81"><expr pos:start="689:17" pos:end="689:80"><name pos:start="689:17" pos:end="689:32">next_left_sample</name>  <operator pos:start="689:35" pos:end="689:35">=</operator> <operator pos:start="689:37" pos:end="689:37">(</operator><name pos:start="689:38" pos:end="689:44">int32_t</name><operator pos:start="689:45" pos:end="689:45">)</operator><operator pos:start="689:46" pos:end="689:46">(</operator><operator pos:start="689:47" pos:end="689:47">(</operator><operator pos:start="689:48" pos:end="689:48">*</operator><name pos:start="689:49" pos:end="689:51">src</name> <operator pos:start="689:53" pos:end="689:53">&amp;</operator> <literal type="number" pos:start="689:55" pos:end="689:58">0xF0</literal><operator pos:start="689:59" pos:end="689:59">)</operator> <operator pos:start="689:61" pos:end="689:62">&lt;&lt;</operator> <literal type="number" pos:start="689:64" pos:end="689:65">24</literal><operator pos:start="689:66" pos:end="689:66">)</operator> <operator pos:start="689:68" pos:end="689:69">&gt;&gt;</operator> <name pos:start="689:71" pos:end="689:80">shift_left</name></expr>;</expr_stmt>

                <expr_stmt pos:start="691:17" pos:end="691:82"><expr pos:start="691:17" pos:end="691:81"><name pos:start="691:17" pos:end="691:33">next_right_sample</name> <operator pos:start="691:35" pos:end="691:35">=</operator> <operator pos:start="691:37" pos:end="691:37">(</operator><name pos:start="691:38" pos:end="691:44">int32_t</name><operator pos:start="691:45" pos:end="691:45">)</operator><operator pos:start="691:46" pos:end="691:46">(</operator><operator pos:start="691:47" pos:end="691:47">(</operator><operator pos:start="691:48" pos:end="691:48">*</operator><name pos:start="691:49" pos:end="691:51">src</name> <operator pos:start="691:53" pos:end="691:53">&amp;</operator> <literal type="number" pos:start="691:55" pos:end="691:58">0x0F</literal><operator pos:start="691:59" pos:end="691:59">)</operator> <operator pos:start="691:61" pos:end="691:62">&lt;&lt;</operator> <literal type="number" pos:start="691:64" pos:end="691:65">28</literal><operator pos:start="691:66" pos:end="691:66">)</operator> <operator pos:start="691:68" pos:end="691:69">&gt;&gt;</operator> <name pos:start="691:71" pos:end="691:81">shift_right</name></expr>;</expr_stmt>

                <expr_stmt pos:start="693:17" pos:end="693:22"><expr pos:start="693:17" pos:end="693:21"><name pos:start="693:17" pos:end="693:19">src</name><operator pos:start="693:20" pos:end="693:21">++</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="697:17" pos:end="701:66"><expr pos:start="697:17" pos:end="701:65"><name pos:start="697:17" pos:end="697:32">next_left_sample</name> <operator pos:start="697:34" pos:end="697:34">=</operator> <operator pos:start="697:36" pos:end="697:36">(</operator><name pos:start="697:37" pos:end="697:52">next_left_sample</name> <operator pos:start="697:54" pos:end="697:54">+</operator>

                    <operator pos:start="699:21" pos:end="699:21">(</operator><name pos:start="699:22" pos:end="699:40">current_left_sample</name> <operator pos:start="699:42" pos:end="699:42">*</operator> <name pos:start="699:44" pos:end="699:50">coeff1l</name><operator pos:start="699:51" pos:end="699:51">)</operator> <operator pos:start="699:53" pos:end="699:53">+</operator>

                    <operator pos:start="701:21" pos:end="701:21">(</operator><name pos:start="701:22" pos:end="701:41">previous_left_sample</name> <operator pos:start="701:43" pos:end="701:43">*</operator> <name pos:start="701:45" pos:end="701:51">coeff2l</name><operator pos:start="701:52" pos:end="701:52">)</operator> <operator pos:start="701:54" pos:end="701:54">+</operator> <literal type="number" pos:start="701:56" pos:end="701:59">0x80</literal><operator pos:start="701:60" pos:end="701:60">)</operator> <operator pos:start="701:62" pos:end="701:63">&gt;&gt;</operator> <literal type="number" pos:start="701:65" pos:end="701:65">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="703:17" pos:end="707:67"><expr pos:start="703:17" pos:end="707:66"><name pos:start="703:17" pos:end="703:33">next_right_sample</name> <operator pos:start="703:35" pos:end="703:35">=</operator> <operator pos:start="703:37" pos:end="703:37">(</operator><name pos:start="703:38" pos:end="703:54">next_right_sample</name> <operator pos:start="703:56" pos:end="703:56">+</operator>

                    <operator pos:start="705:21" pos:end="705:21">(</operator><name pos:start="705:22" pos:end="705:41">current_right_sample</name> <operator pos:start="705:43" pos:end="705:43">*</operator> <name pos:start="705:45" pos:end="705:51">coeff1r</name><operator pos:start="705:52" pos:end="705:52">)</operator> <operator pos:start="705:54" pos:end="705:54">+</operator>

                    <operator pos:start="707:21" pos:end="707:21">(</operator><name pos:start="707:22" pos:end="707:42">previous_right_sample</name> <operator pos:start="707:44" pos:end="707:44">*</operator> <name pos:start="707:46" pos:end="707:52">coeff2r</name><operator pos:start="707:53" pos:end="707:53">)</operator> <operator pos:start="707:55" pos:end="707:55">+</operator> <literal type="number" pos:start="707:57" pos:end="707:60">0x80</literal><operator pos:start="707:61" pos:end="707:61">)</operator> <operator pos:start="707:63" pos:end="707:64">&gt;&gt;</operator> <literal type="number" pos:start="707:66" pos:end="707:66">8</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="711:17" pos:end="711:59"><expr pos:start="711:17" pos:end="711:58"><name pos:start="711:17" pos:end="711:36">previous_left_sample</name> <operator pos:start="711:38" pos:end="711:38">=</operator> <name pos:start="711:40" pos:end="711:58">current_left_sample</name></expr>;</expr_stmt>

                <expr_stmt pos:start="713:17" pos:end="713:70"><expr pos:start="713:17" pos:end="713:69"><name pos:start="713:17" pos:end="713:35">current_left_sample</name> <operator pos:start="713:37" pos:end="713:37">=</operator> <call pos:start="713:39" pos:end="713:69"><name pos:start="713:39" pos:end="713:51">av_clip_int16</name><argument_list pos:start="713:52" pos:end="713:69">(<argument pos:start="713:53" pos:end="713:68"><expr pos:start="713:53" pos:end="713:68"><name pos:start="713:53" pos:end="713:68">next_left_sample</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="715:17" pos:end="715:61"><expr pos:start="715:17" pos:end="715:60"><name pos:start="715:17" pos:end="715:37">previous_right_sample</name> <operator pos:start="715:39" pos:end="715:39">=</operator> <name pos:start="715:41" pos:end="715:60">current_right_sample</name></expr>;</expr_stmt>

                <expr_stmt pos:start="717:17" pos:end="717:72"><expr pos:start="717:17" pos:end="717:71"><name pos:start="717:17" pos:end="717:36">current_right_sample</name> <operator pos:start="717:38" pos:end="717:38">=</operator> <call pos:start="717:40" pos:end="717:71"><name pos:start="717:40" pos:end="717:52">av_clip_int16</name><argument_list pos:start="717:53" pos:end="717:71">(<argument pos:start="717:54" pos:end="717:70"><expr pos:start="717:54" pos:end="717:70"><name pos:start="717:54" pos:end="717:70">next_right_sample</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="719:17" pos:end="719:65"><expr pos:start="719:17" pos:end="719:64"><operator pos:start="719:17" pos:end="719:17">*</operator><name pos:start="719:18" pos:end="719:24">samples</name><operator pos:start="719:25" pos:end="719:26">++</operator> <operator pos:start="719:28" pos:end="719:28">=</operator> <operator pos:start="719:30" pos:end="719:30">(</operator><name pos:start="719:31" pos:end="719:38">unsigned</name> <name pos:start="719:40" pos:end="719:44">short</name><operator pos:start="719:45" pos:end="719:45">)</operator><name pos:start="719:46" pos:end="719:64">current_left_sample</name></expr>;</expr_stmt>

                <expr_stmt pos:start="721:17" pos:end="721:66"><expr pos:start="721:17" pos:end="721:65"><operator pos:start="721:17" pos:end="721:17">*</operator><name pos:start="721:18" pos:end="721:24">samples</name><operator pos:start="721:25" pos:end="721:26">++</operator> <operator pos:start="721:28" pos:end="721:28">=</operator> <operator pos:start="721:30" pos:end="721:30">(</operator><name pos:start="721:31" pos:end="721:38">unsigned</name> <name pos:start="721:40" pos:end="721:44">short</name><operator pos:start="721:45" pos:end="721:45">)</operator><name pos:start="721:46" pos:end="721:65">current_right_sample</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <break pos:start="727:9" pos:end="727:14">break;</break>

    <case pos:start="729:5" pos:end="729:36">case <expr pos:start="729:10" pos:end="729:35"><name pos:start="729:10" pos:end="729:35">CODEC_ID_ADPCM_EA_MAXIS_XA</name></expr>:</case>

        <for pos:start="731:9" pos:end="741:9">for<control pos:start="731:12" pos:end="731:62">(<init pos:start="731:13" pos:end="731:24"><expr pos:start="731:13" pos:end="731:23"><name pos:start="731:13" pos:end="731:19">channel</name> <operator pos:start="731:21" pos:end="731:21">=</operator> <literal type="number" pos:start="731:23" pos:end="731:23">0</literal></expr>;</init> <condition pos:start="731:26" pos:end="731:51"><expr pos:start="731:26" pos:end="731:50"><name pos:start="731:26" pos:end="731:32">channel</name> <operator pos:start="731:34" pos:end="731:34">&lt;</operator> <name pos:start="731:36" pos:end="731:50"><name pos:start="731:36" pos:end="731:40">avctx</name><operator pos:start="731:41" pos:end="731:42">-&gt;</operator><name pos:start="731:43" pos:end="731:50">channels</name></name></expr>;</condition> <incr pos:start="731:53" pos:end="731:61"><expr pos:start="731:53" pos:end="731:61"><name pos:start="731:53" pos:end="731:59">channel</name><operator pos:start="731:60" pos:end="731:61">++</operator></expr></incr>)</control> <block pos:start="731:64" pos:end="741:9">{<block_content pos:start="733:13" pos:end="739:18">

            <for pos:start="733:13" pos:end="735:70">for <control pos:start="733:17" pos:end="733:31">(<init pos:start="733:18" pos:end="733:21"><expr pos:start="733:18" pos:end="733:20"><name pos:start="733:18" pos:end="733:18">i</name><operator pos:start="733:19" pos:end="733:19">=</operator><literal type="number" pos:start="733:20" pos:end="733:20">0</literal></expr>;</init> <condition pos:start="733:23" pos:end="733:26"><expr pos:start="733:23" pos:end="733:25"><name pos:start="733:23" pos:end="733:23">i</name><operator pos:start="733:24" pos:end="733:24">&lt;</operator><literal type="number" pos:start="733:25" pos:end="733:25">2</literal></expr>;</condition> <incr pos:start="733:28" pos:end="733:30"><expr pos:start="733:28" pos:end="733:30"><name pos:start="733:28" pos:end="733:28">i</name><operator pos:start="733:29" pos:end="733:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="735:17" pos:end="735:70"><block_content pos:start="735:17" pos:end="735:70">

                <expr_stmt pos:start="735:17" pos:end="735:70"><expr pos:start="735:17" pos:end="735:69"><name pos:start="735:17" pos:end="735:33"><name pos:start="735:17" pos:end="735:21">coeff</name><index pos:start="735:22" pos:end="735:30">[<expr pos:start="735:23" pos:end="735:29"><name pos:start="735:23" pos:end="735:29">channel</name></expr>]</index><index pos:start="735:31" pos:end="735:33">[<expr pos:start="735:32" pos:end="735:32"><name pos:start="735:32" pos:end="735:32">i</name></expr>]</index></name> <operator pos:start="735:35" pos:end="735:35">=</operator> <name pos:start="735:37" pos:end="735:69"><name pos:start="735:37" pos:end="735:50">ea_adpcm_table</name><index pos:start="735:51" pos:end="735:69">[<expr pos:start="735:52" pos:end="735:68"><operator pos:start="735:52" pos:end="735:52">(</operator><operator pos:start="735:53" pos:end="735:53">*</operator><name pos:start="735:54" pos:end="735:56">src</name> <operator pos:start="735:58" pos:end="735:59">&gt;&gt;</operator> <literal type="number" pos:start="735:61" pos:end="735:61">4</literal><operator pos:start="735:62" pos:end="735:62">)</operator> <operator pos:start="735:64" pos:end="735:64">+</operator> <literal type="number" pos:start="735:66" pos:end="735:66">4</literal><operator pos:start="735:67" pos:end="735:67">*</operator><name pos:start="735:68" pos:end="735:68">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="737:13" pos:end="737:47"><expr pos:start="737:13" pos:end="737:46"><name pos:start="737:13" pos:end="737:26"><name pos:start="737:13" pos:end="737:17">shift</name><index pos:start="737:18" pos:end="737:26">[<expr pos:start="737:19" pos:end="737:25"><name pos:start="737:19" pos:end="737:25">channel</name></expr>]</index></name> <operator pos:start="737:28" pos:end="737:28">=</operator> <operator pos:start="737:30" pos:end="737:30">(</operator><operator pos:start="737:31" pos:end="737:31">*</operator><name pos:start="737:32" pos:end="737:34">src</name> <operator pos:start="737:36" pos:end="737:36">&amp;</operator> <literal type="number" pos:start="737:38" pos:end="737:41">0x0F</literal><operator pos:start="737:42" pos:end="737:42">)</operator> <operator pos:start="737:44" pos:end="737:44">+</operator> <literal type="number" pos:start="737:46" pos:end="737:46">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="739:13" pos:end="739:18"><expr pos:start="739:13" pos:end="739:17"><name pos:start="739:13" pos:end="739:15">src</name><operator pos:start="739:16" pos:end="739:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="743:9" pos:end="769:9">for <control pos:start="743:13" pos:end="743:91">(<init pos:start="743:14" pos:end="743:24"><expr pos:start="743:14" pos:end="743:23"><name pos:start="743:14" pos:end="743:19">count1</name> <operator pos:start="743:21" pos:end="743:21">=</operator> <literal type="number" pos:start="743:23" pos:end="743:23">0</literal></expr>;</init> <condition pos:start="743:26" pos:end="743:81"><expr pos:start="743:26" pos:end="743:80"><name pos:start="743:26" pos:end="743:31">count1</name> <operator pos:start="743:33" pos:end="743:33">&lt;</operator> <operator pos:start="743:35" pos:end="743:35">(</operator><name pos:start="743:36" pos:end="743:43">buf_size</name> <operator pos:start="743:45" pos:end="743:45">-</operator> <name pos:start="743:47" pos:end="743:61"><name pos:start="743:47" pos:end="743:51">avctx</name><operator pos:start="743:52" pos:end="743:53">-&gt;</operator><name pos:start="743:54" pos:end="743:61">channels</name></name><operator pos:start="743:62" pos:end="743:62">)</operator> <operator pos:start="743:64" pos:end="743:64">/</operator> <name pos:start="743:66" pos:end="743:80"><name pos:start="743:66" pos:end="743:70">avctx</name><operator pos:start="743:71" pos:end="743:72">-&gt;</operator><name pos:start="743:73" pos:end="743:80">channels</name></name></expr>;</condition> <incr pos:start="743:83" pos:end="743:90"><expr pos:start="743:83" pos:end="743:90"><name pos:start="743:83" pos:end="743:88">count1</name><operator pos:start="743:89" pos:end="743:90">++</operator></expr></incr>)</control> <block pos:start="743:93" pos:end="769:9">{<block_content pos:start="745:13" pos:end="767:33">

            <for pos:start="745:13" pos:end="765:13">for<control pos:start="745:16" pos:end="745:36">(<init pos:start="745:17" pos:end="745:22"><expr pos:start="745:17" pos:end="745:21"><name pos:start="745:17" pos:end="745:17">i</name> <operator pos:start="745:19" pos:end="745:19">=</operator> <literal type="number" pos:start="745:21" pos:end="745:21">4</literal></expr>;</init> <condition pos:start="745:24" pos:end="745:30"><expr pos:start="745:24" pos:end="745:29"><name pos:start="745:24" pos:end="745:24">i</name> <operator pos:start="745:26" pos:end="745:27">&gt;=</operator> <literal type="number" pos:start="745:29" pos:end="745:29">0</literal></expr>;</condition> <incr pos:start="745:32" pos:end="745:35"><expr pos:start="745:32" pos:end="745:35"><name pos:start="745:32" pos:end="745:32">i</name><operator pos:start="745:33" pos:end="745:34">-=</operator><literal type="number" pos:start="745:35" pos:end="745:35">4</literal></expr></incr>)</control> <block pos:start="745:38" pos:end="765:13">{<block_content pos:start="747:17" pos:end="763:17"> <comment type="block" pos:start="745:40" pos:end="745:88">/* Pairwise samples LL RR (st) or LL LL (mono) */</comment>

                <for pos:start="747:17" pos:end="763:17">for<control pos:start="747:20" pos:end="747:70">(<init pos:start="747:21" pos:end="747:32"><expr pos:start="747:21" pos:end="747:31"><name pos:start="747:21" pos:end="747:27">channel</name> <operator pos:start="747:29" pos:end="747:29">=</operator> <literal type="number" pos:start="747:31" pos:end="747:31">0</literal></expr>;</init> <condition pos:start="747:34" pos:end="747:59"><expr pos:start="747:34" pos:end="747:58"><name pos:start="747:34" pos:end="747:40">channel</name> <operator pos:start="747:42" pos:end="747:42">&lt;</operator> <name pos:start="747:44" pos:end="747:58"><name pos:start="747:44" pos:end="747:48">avctx</name><operator pos:start="747:49" pos:end="747:50">-&gt;</operator><name pos:start="747:51" pos:end="747:58">channels</name></name></expr>;</condition> <incr pos:start="747:61" pos:end="747:69"><expr pos:start="747:61" pos:end="747:69"><name pos:start="747:61" pos:end="747:67">channel</name><operator pos:start="747:68" pos:end="747:69">++</operator></expr></incr>)</control> <block pos:start="747:72" pos:end="763:17">{<block_content pos:start="749:21" pos:end="761:60">

                    <decl_stmt pos:start="749:21" pos:end="749:105"><decl pos:start="749:21" pos:end="749:104"><type pos:start="749:21" pos:end="749:27"><name pos:start="749:21" pos:end="749:27">int32_t</name></type> <name pos:start="749:29" pos:end="749:34">sample</name> <init pos:start="749:36" pos:end="749:104">= <expr pos:start="749:38" pos:end="749:104"><operator pos:start="749:38" pos:end="749:38">(</operator><name pos:start="749:39" pos:end="749:45">int32_t</name><operator pos:start="749:46" pos:end="749:46">)</operator><operator pos:start="749:47" pos:end="749:47">(</operator><operator pos:start="749:48" pos:end="749:48">(</operator><operator pos:start="749:49" pos:end="749:49">(</operator><operator pos:start="749:50" pos:end="749:50">*</operator><operator pos:start="749:51" pos:end="749:51">(</operator><name pos:start="749:52" pos:end="749:54">src</name><operator pos:start="749:55" pos:end="749:55">+</operator><name pos:start="749:56" pos:end="749:62">channel</name><operator pos:start="749:63" pos:end="749:63">)</operator> <operator pos:start="749:65" pos:end="749:66">&gt;&gt;</operator> <name pos:start="749:68" pos:end="749:68">i</name><operator pos:start="749:69" pos:end="749:69">)</operator> <operator pos:start="749:71" pos:end="749:71">&amp;</operator> <literal type="number" pos:start="749:73" pos:end="749:76">0x0F</literal><operator pos:start="749:77" pos:end="749:77">)</operator> <operator pos:start="749:79" pos:end="749:80">&lt;&lt;</operator> <literal type="number" pos:start="749:82" pos:end="749:85">0x1C</literal><operator pos:start="749:86" pos:end="749:86">)</operator> <operator pos:start="749:88" pos:end="749:89">&gt;&gt;</operator> <name pos:start="749:91" pos:end="749:104"><name pos:start="749:91" pos:end="749:95">shift</name><index pos:start="749:96" pos:end="749:104">[<expr pos:start="749:97" pos:end="749:103"><name pos:start="749:97" pos:end="749:103">channel</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="751:21" pos:end="755:89"><expr pos:start="751:21" pos:end="755:88"><name pos:start="751:21" pos:end="751:26">sample</name> <operator pos:start="751:28" pos:end="751:28">=</operator> <operator pos:start="751:30" pos:end="751:30">(</operator><name pos:start="751:31" pos:end="751:36">sample</name> <operator pos:start="751:38" pos:end="751:38">+</operator>

                             <name pos:start="753:30" pos:end="753:47"><name pos:start="753:30" pos:end="753:30">c</name><operator pos:start="753:31" pos:end="753:32">-&gt;</operator><name pos:start="753:33" pos:end="753:38">status</name><index pos:start="753:39" pos:end="753:47">[<expr pos:start="753:40" pos:end="753:46"><name pos:start="753:40" pos:end="753:46">channel</name></expr>]</index></name><operator pos:start="753:48" pos:end="753:48">.</operator><name pos:start="753:49" pos:end="753:55">sample1</name> <operator pos:start="753:57" pos:end="753:57">*</operator> <name pos:start="753:59" pos:end="753:75"><name pos:start="753:59" pos:end="753:63">coeff</name><index pos:start="753:64" pos:end="753:72">[<expr pos:start="753:65" pos:end="753:71"><name pos:start="753:65" pos:end="753:71">channel</name></expr>]</index><index pos:start="753:73" pos:end="753:75">[<expr pos:start="753:74" pos:end="753:74"><literal type="number" pos:start="753:74" pos:end="753:74">0</literal></expr>]</index></name> <operator pos:start="753:77" pos:end="753:77">+</operator>

                             <name pos:start="755:30" pos:end="755:47"><name pos:start="755:30" pos:end="755:30">c</name><operator pos:start="755:31" pos:end="755:32">-&gt;</operator><name pos:start="755:33" pos:end="755:38">status</name><index pos:start="755:39" pos:end="755:47">[<expr pos:start="755:40" pos:end="755:46"><name pos:start="755:40" pos:end="755:46">channel</name></expr>]</index></name><operator pos:start="755:48" pos:end="755:48">.</operator><name pos:start="755:49" pos:end="755:55">sample2</name> <operator pos:start="755:57" pos:end="755:57">*</operator> <name pos:start="755:59" pos:end="755:75"><name pos:start="755:59" pos:end="755:63">coeff</name><index pos:start="755:64" pos:end="755:72">[<expr pos:start="755:65" pos:end="755:71"><name pos:start="755:65" pos:end="755:71">channel</name></expr>]</index><index pos:start="755:73" pos:end="755:75">[<expr pos:start="755:74" pos:end="755:74"><literal type="number" pos:start="755:74" pos:end="755:74">1</literal></expr>]</index></name> <operator pos:start="755:77" pos:end="755:77">+</operator> <literal type="number" pos:start="755:79" pos:end="755:82">0x80</literal><operator pos:start="755:83" pos:end="755:83">)</operator> <operator pos:start="755:85" pos:end="755:86">&gt;&gt;</operator> <literal type="number" pos:start="755:88" pos:end="755:88">8</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="757:21" pos:end="757:76"><expr pos:start="757:21" pos:end="757:75"><name pos:start="757:21" pos:end="757:38"><name pos:start="757:21" pos:end="757:21">c</name><operator pos:start="757:22" pos:end="757:23">-&gt;</operator><name pos:start="757:24" pos:end="757:29">status</name><index pos:start="757:30" pos:end="757:38">[<expr pos:start="757:31" pos:end="757:37"><name pos:start="757:31" pos:end="757:37">channel</name></expr>]</index></name><operator pos:start="757:39" pos:end="757:39">.</operator><name pos:start="757:40" pos:end="757:46">sample2</name> <operator pos:start="757:48" pos:end="757:48">=</operator> <name pos:start="757:50" pos:end="757:67"><name pos:start="757:50" pos:end="757:50">c</name><operator pos:start="757:51" pos:end="757:52">-&gt;</operator><name pos:start="757:53" pos:end="757:58">status</name><index pos:start="757:59" pos:end="757:67">[<expr pos:start="757:60" pos:end="757:66"><name pos:start="757:60" pos:end="757:66">channel</name></expr>]</index></name><operator pos:start="757:68" pos:end="757:68">.</operator><name pos:start="757:69" pos:end="757:75">sample1</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="759:21" pos:end="759:71"><expr pos:start="759:21" pos:end="759:70"><name pos:start="759:21" pos:end="759:38"><name pos:start="759:21" pos:end="759:21">c</name><operator pos:start="759:22" pos:end="759:23">-&gt;</operator><name pos:start="759:24" pos:end="759:29">status</name><index pos:start="759:30" pos:end="759:38">[<expr pos:start="759:31" pos:end="759:37"><name pos:start="759:31" pos:end="759:37">channel</name></expr>]</index></name><operator pos:start="759:39" pos:end="759:39">.</operator><name pos:start="759:40" pos:end="759:46">sample1</name> <operator pos:start="759:48" pos:end="759:48">=</operator> <call pos:start="759:50" pos:end="759:70"><name pos:start="759:50" pos:end="759:62">av_clip_int16</name><argument_list pos:start="759:63" pos:end="759:70">(<argument pos:start="759:64" pos:end="759:69"><expr pos:start="759:64" pos:end="759:69"><name pos:start="759:64" pos:end="759:69">sample</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="761:21" pos:end="761:60"><expr pos:start="761:21" pos:end="761:59"><operator pos:start="761:21" pos:end="761:21">*</operator><name pos:start="761:22" pos:end="761:28">samples</name><operator pos:start="761:29" pos:end="761:30">++</operator> <operator pos:start="761:32" pos:end="761:32">=</operator> <name pos:start="761:34" pos:end="761:51"><name pos:start="761:34" pos:end="761:34">c</name><operator pos:start="761:35" pos:end="761:36">-&gt;</operator><name pos:start="761:37" pos:end="761:42">status</name><index pos:start="761:43" pos:end="761:51">[<expr pos:start="761:44" pos:end="761:50"><name pos:start="761:44" pos:end="761:50">channel</name></expr>]</index></name><operator pos:start="761:52" pos:end="761:52">.</operator><name pos:start="761:53" pos:end="761:59">sample1</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <expr_stmt pos:start="767:13" pos:end="767:33"><expr pos:start="767:13" pos:end="767:32"><name pos:start="767:13" pos:end="767:15">src</name><operator pos:start="767:16" pos:end="767:17">+=</operator><name pos:start="767:18" pos:end="767:32"><name pos:start="767:18" pos:end="767:22">avctx</name><operator pos:start="767:23" pos:end="767:24">-&gt;</operator><name pos:start="767:25" pos:end="767:32">channels</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="771:9" pos:end="771:14">break;</break>

    <case pos:start="773:5" pos:end="773:30">case <expr pos:start="773:10" pos:end="773:29"><name pos:start="773:10" pos:end="773:29">CODEC_ID_ADPCM_EA_R1</name></expr>:</case>

    <case pos:start="775:5" pos:end="775:30">case <expr pos:start="775:10" pos:end="775:29"><name pos:start="775:10" pos:end="775:29">CODEC_ID_ADPCM_EA_R2</name></expr>:</case>

    <case pos:start="777:5" pos:end="777:30">case <expr pos:start="777:10" pos:end="777:29"><name pos:start="777:10" pos:end="777:29">CODEC_ID_ADPCM_EA_R3</name></expr>:</case> <block pos:start="777:32" pos:end="931:5">{<block_content pos:start="787:9" pos:end="929:14">

        <comment type="block" pos:start="779:9" pos:end="785:57">/* channel numbering

           2chan: 0=fl, 1=fr

           4chan: 0=fl, 1=rl, 2=fr, 3=rr

           6chan: 0=fl, 1=c,  2=fr, 3=rl,  4=rr, 5=sub */</comment>

        <decl_stmt pos:start="787:9" pos:end="787:72"><decl pos:start="787:9" pos:end="787:71"><type pos:start="787:9" pos:end="787:17"><specifier pos:start="787:9" pos:end="787:13">const</specifier> <name pos:start="787:15" pos:end="787:17">int</name></type> <name pos:start="787:19" pos:end="787:28">big_endian</name> <init pos:start="787:30" pos:end="787:71">= <expr pos:start="787:32" pos:end="787:71"><name pos:start="787:32" pos:end="787:47"><name pos:start="787:32" pos:end="787:36">avctx</name><operator pos:start="787:37" pos:end="787:38">-&gt;</operator><name pos:start="787:39" pos:end="787:43">codec</name><operator pos:start="787:44" pos:end="787:45">-&gt;</operator><name pos:start="787:46" pos:end="787:47">id</name></name> <operator pos:start="787:49" pos:end="787:50">==</operator> <name pos:start="787:52" pos:end="787:71">CODEC_ID_ADPCM_EA_R3</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="789:9" pos:end="789:61"><decl pos:start="789:9" pos:end="789:31"><type pos:start="789:9" pos:end="789:15"><name pos:start="789:9" pos:end="789:15">int32_t</name></type> <name pos:start="789:17" pos:end="789:31">previous_sample</name></decl>, <decl pos:start="789:34" pos:end="789:47"><type ref="prev" pos:start="789:9" pos:end="789:15"/><name pos:start="789:34" pos:end="789:47">current_sample</name></decl>, <decl pos:start="789:50" pos:end="789:60"><type ref="prev" pos:start="789:9" pos:end="789:15"/><name pos:start="789:50" pos:end="789:60">next_sample</name></decl>;</decl_stmt>

        <decl_stmt pos:start="791:9" pos:end="791:31"><decl pos:start="791:9" pos:end="791:22"><type pos:start="791:9" pos:end="791:15"><name pos:start="791:9" pos:end="791:15">int32_t</name></type> <name pos:start="791:17" pos:end="791:22">coeff1</name></decl>, <decl pos:start="791:25" pos:end="791:30"><type ref="prev" pos:start="791:9" pos:end="791:15"/><name pos:start="791:25" pos:end="791:30">coeff2</name></decl>;</decl_stmt>

        <decl_stmt pos:start="793:9" pos:end="793:22"><decl pos:start="793:9" pos:end="793:21"><type pos:start="793:9" pos:end="793:15"><name pos:start="793:9" pos:end="793:15">uint8_t</name></type> <name pos:start="793:17" pos:end="793:21">shift</name></decl>;</decl_stmt>

        <decl_stmt pos:start="795:9" pos:end="795:29"><decl pos:start="795:9" pos:end="795:28"><type pos:start="795:9" pos:end="795:20"><name pos:start="795:9" pos:end="795:16">unsigned</name> <name pos:start="795:18" pos:end="795:20">int</name></type> <name pos:start="795:22" pos:end="795:28">channel</name></decl>;</decl_stmt>

        <decl_stmt pos:start="797:9" pos:end="797:27"><decl pos:start="797:9" pos:end="797:26"><type pos:start="797:9" pos:end="797:18"><name pos:start="797:9" pos:end="797:16">uint16_t</name> <modifier pos:start="797:18" pos:end="797:18">*</modifier></type><name pos:start="797:19" pos:end="797:26">samplesC</name></decl>;</decl_stmt>

        <decl_stmt pos:start="799:9" pos:end="799:28"><decl pos:start="799:9" pos:end="799:27"><type pos:start="799:9" pos:end="799:23"><specifier pos:start="799:9" pos:end="799:13">const</specifier> <name pos:start="799:15" pos:end="799:21">uint8_t</name> <modifier pos:start="799:23" pos:end="799:23">*</modifier></type><name pos:start="799:24" pos:end="799:27">srcC</name></decl>;</decl_stmt>



        <expr_stmt pos:start="803:9" pos:end="805:73"><expr pos:start="803:9" pos:end="805:72"><name pos:start="803:9" pos:end="803:24">samples_in_chunk</name> <operator pos:start="803:26" pos:end="803:26">=</operator> <operator pos:start="803:28" pos:end="803:28">(</operator><ternary pos:start="803:29" pos:end="805:66"><condition pos:start="803:29" pos:end="803:40"><expr pos:start="803:29" pos:end="803:38"><name pos:start="803:29" pos:end="803:38">big_endian</name></expr> ?</condition><then pos:start="803:42" pos:end="803:66"> <expr pos:start="803:42" pos:end="803:66"><call pos:start="803:42" pos:end="803:66"><name pos:start="803:42" pos:end="803:60">bytestream_get_be32</name><argument_list pos:start="803:61" pos:end="803:66">(<argument pos:start="803:62" pos:end="803:65"><expr pos:start="803:62" pos:end="803:65"><operator pos:start="803:62" pos:end="803:62">&amp;</operator><name pos:start="803:63" pos:end="803:65">src</name></expr></argument>)</argument_list></call></expr>

                                       </then><else pos:start="805:40" pos:end="805:66">: <expr pos:start="805:42" pos:end="805:66"><call pos:start="805:42" pos:end="805:66"><name pos:start="805:42" pos:end="805:60">bytestream_get_le32</name><argument_list pos:start="805:61" pos:end="805:66">(<argument pos:start="805:62" pos:end="805:65"><expr pos:start="805:62" pos:end="805:65"><operator pos:start="805:62" pos:end="805:62">&amp;</operator><name pos:start="805:63" pos:end="805:65">src</name></expr></argument>)</argument_list></call></expr></else></ternary><operator pos:start="805:67" pos:end="805:67">)</operator> <operator pos:start="805:69" pos:end="805:69">/</operator> <literal type="number" pos:start="805:71" pos:end="805:72">28</literal></expr>;</expr_stmt>

        <if_stmt pos:start="807:9" pos:end="815:9"><if pos:start="807:9" pos:end="815:9">if <condition pos:start="807:12" pos:end="809:70">(<expr pos:start="807:13" pos:end="809:69"><name pos:start="807:13" pos:end="807:28">samples_in_chunk</name> <operator pos:start="807:30" pos:end="807:30">&gt;</operator> <name pos:start="807:32" pos:end="807:41">UINT32_MAX</name><operator pos:start="807:42" pos:end="807:42">/</operator><operator pos:start="807:43" pos:end="807:43">(</operator><literal type="number" pos:start="807:44" pos:end="807:45">28</literal><operator pos:start="807:46" pos:end="807:46">*</operator><name pos:start="807:47" pos:end="807:61"><name pos:start="807:47" pos:end="807:51">avctx</name><operator pos:start="807:52" pos:end="807:53">-&gt;</operator><name pos:start="807:54" pos:end="807:61">channels</name></name><operator pos:start="807:62" pos:end="807:62">)</operator> <operator pos:start="807:64" pos:end="807:65">||</operator>

            <literal type="number" pos:start="809:13" pos:end="809:14">28</literal><operator pos:start="809:15" pos:end="809:15">*</operator><name pos:start="809:16" pos:end="809:31">samples_in_chunk</name><operator pos:start="809:32" pos:end="809:32">*</operator><name pos:start="809:33" pos:end="809:47"><name pos:start="809:33" pos:end="809:37">avctx</name><operator pos:start="809:38" pos:end="809:39">-&gt;</operator><name pos:start="809:40" pos:end="809:47">channels</name></name> <operator pos:start="809:49" pos:end="809:49">&gt;</operator> <name pos:start="809:51" pos:end="809:61">samples_end</name><operator pos:start="809:62" pos:end="809:62">-</operator><name pos:start="809:63" pos:end="809:69">samples</name></expr>)</condition> <block pos:start="809:72" pos:end="815:9">{<block_content pos:start="811:13" pos:end="813:18">

            <expr_stmt pos:start="811:13" pos:end="811:32"><expr pos:start="811:13" pos:end="811:31"><name pos:start="811:13" pos:end="811:15">src</name> <operator pos:start="811:17" pos:end="811:18">+=</operator> <name pos:start="811:20" pos:end="811:27">buf_size</name> <operator pos:start="811:29" pos:end="811:29">-</operator> <literal type="number" pos:start="811:31" pos:end="811:31">4</literal></expr>;</expr_stmt>

            <break pos:start="813:13" pos:end="813:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <for pos:start="819:9" pos:end="921:9">for <control pos:start="819:13" pos:end="819:59">(<init pos:start="819:14" pos:end="819:23"><expr pos:start="819:14" pos:end="819:22"><name pos:start="819:14" pos:end="819:20">channel</name><operator pos:start="819:21" pos:end="819:21">=</operator><literal type="number" pos:start="819:22" pos:end="819:22">0</literal></expr>;</init> <condition pos:start="819:25" pos:end="819:48"><expr pos:start="819:25" pos:end="819:47"><name pos:start="819:25" pos:end="819:31">channel</name><operator pos:start="819:32" pos:end="819:32">&lt;</operator><name pos:start="819:33" pos:end="819:47"><name pos:start="819:33" pos:end="819:37">avctx</name><operator pos:start="819:38" pos:end="819:39">-&gt;</operator><name pos:start="819:40" pos:end="819:47">channels</name></name></expr>;</condition> <incr pos:start="819:50" pos:end="819:58"><expr pos:start="819:50" pos:end="819:58"><name pos:start="819:50" pos:end="819:56">channel</name><operator pos:start="819:57" pos:end="819:58">++</operator></expr></incr>)</control> <block pos:start="819:61" pos:end="921:9">{<block_content pos:start="821:13" pos:end="919:13">

            <expr_stmt pos:start="821:13" pos:end="825:57"><expr pos:start="821:13" pos:end="825:56"><name pos:start="821:13" pos:end="821:16">srcC</name> <operator pos:start="821:18" pos:end="821:18">=</operator> <name pos:start="821:20" pos:end="821:22">src</name> <operator pos:start="821:24" pos:end="821:24">+</operator> <operator pos:start="821:26" pos:end="821:26">(</operator><ternary pos:start="821:27" pos:end="823:64"><condition pos:start="821:27" pos:end="821:38"><expr pos:start="821:27" pos:end="821:36"><name pos:start="821:27" pos:end="821:36">big_endian</name></expr> ?</condition><then pos:start="821:40" pos:end="821:64"> <expr pos:start="821:40" pos:end="821:64"><call pos:start="821:40" pos:end="821:64"><name pos:start="821:40" pos:end="821:58">bytestream_get_be32</name><argument_list pos:start="821:59" pos:end="821:64">(<argument pos:start="821:60" pos:end="821:63"><expr pos:start="821:60" pos:end="821:63"><operator pos:start="821:60" pos:end="821:60">&amp;</operator><name pos:start="821:61" pos:end="821:63">src</name></expr></argument>)</argument_list></call></expr>

                                     </then><else pos:start="823:38" pos:end="823:64">: <expr pos:start="823:40" pos:end="823:64"><call pos:start="823:40" pos:end="823:64"><name pos:start="823:40" pos:end="823:58">bytestream_get_le32</name><argument_list pos:start="823:59" pos:end="823:64">(<argument pos:start="823:60" pos:end="823:63"><expr pos:start="823:60" pos:end="823:63"><operator pos:start="823:60" pos:end="823:60">&amp;</operator><name pos:start="823:61" pos:end="823:63">src</name></expr></argument>)</argument_list></call></expr></else></ternary><operator pos:start="823:65" pos:end="823:65">)</operator>

                       <operator pos:start="825:24" pos:end="825:24">+</operator> <operator pos:start="825:26" pos:end="825:26">(</operator><name pos:start="825:27" pos:end="825:41"><name pos:start="825:27" pos:end="825:31">avctx</name><operator pos:start="825:32" pos:end="825:33">-&gt;</operator><name pos:start="825:34" pos:end="825:41">channels</name></name><operator pos:start="825:42" pos:end="825:42">-</operator><name pos:start="825:43" pos:end="825:49">channel</name><operator pos:start="825:50" pos:end="825:50">-</operator><literal type="number" pos:start="825:51" pos:end="825:51">1</literal><operator pos:start="825:52" pos:end="825:52">)</operator> <operator pos:start="825:54" pos:end="825:54">*</operator> <literal type="number" pos:start="825:56" pos:end="825:56">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="827:13" pos:end="827:41"><expr pos:start="827:13" pos:end="827:40"><name pos:start="827:13" pos:end="827:20">samplesC</name> <operator pos:start="827:22" pos:end="827:22">=</operator> <name pos:start="827:24" pos:end="827:30">samples</name> <operator pos:start="827:32" pos:end="827:32">+</operator> <name pos:start="827:34" pos:end="827:40">channel</name></expr>;</expr_stmt>



            <if_stmt pos:start="831:13" pos:end="843:13"><if pos:start="831:13" pos:end="837:13">if <condition pos:start="831:16" pos:end="831:57">(<expr pos:start="831:17" pos:end="831:56"><name pos:start="831:17" pos:end="831:32"><name pos:start="831:17" pos:end="831:21">avctx</name><operator pos:start="831:22" pos:end="831:23">-&gt;</operator><name pos:start="831:24" pos:end="831:28">codec</name><operator pos:start="831:29" pos:end="831:30">-&gt;</operator><name pos:start="831:31" pos:end="831:32">id</name></name> <operator pos:start="831:34" pos:end="831:35">==</operator> <name pos:start="831:37" pos:end="831:56">CODEC_ID_ADPCM_EA_R1</name></expr>)</condition> <block pos:start="831:59" pos:end="837:13">{<block_content pos:start="833:17" pos:end="835:70">

                <expr_stmt pos:start="833:17" pos:end="833:70"><expr pos:start="833:17" pos:end="833:69"><name pos:start="833:17" pos:end="833:30">current_sample</name>  <operator pos:start="833:33" pos:end="833:33">=</operator> <operator pos:start="833:35" pos:end="833:35">(</operator><name pos:start="833:36" pos:end="833:42">int16_t</name><operator pos:start="833:43" pos:end="833:43">)</operator><call pos:start="833:44" pos:end="833:69"><name pos:start="833:44" pos:end="833:62">bytestream_get_le16</name><argument_list pos:start="833:63" pos:end="833:69">(<argument pos:start="833:64" pos:end="833:68"><expr pos:start="833:64" pos:end="833:68"><operator pos:start="833:64" pos:end="833:64">&amp;</operator><name pos:start="833:65" pos:end="833:68">srcC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="835:17" pos:end="835:70"><expr pos:start="835:17" pos:end="835:69"><name pos:start="835:17" pos:end="835:31">previous_sample</name> <operator pos:start="835:33" pos:end="835:33">=</operator> <operator pos:start="835:35" pos:end="835:35">(</operator><name pos:start="835:36" pos:end="835:42">int16_t</name><operator pos:start="835:43" pos:end="835:43">)</operator><call pos:start="835:44" pos:end="835:69"><name pos:start="835:44" pos:end="835:62">bytestream_get_le16</name><argument_list pos:start="835:63" pos:end="835:69">(<argument pos:start="835:64" pos:end="835:68"><expr pos:start="835:64" pos:end="835:68"><operator pos:start="835:64" pos:end="835:64">&amp;</operator><name pos:start="835:65" pos:end="835:68">srcC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="837:15" pos:end="843:13">else <block pos:start="837:20" pos:end="843:13">{<block_content pos:start="839:17" pos:end="841:65">

                <expr_stmt pos:start="839:17" pos:end="839:63"><expr pos:start="839:17" pos:end="839:62"><name pos:start="839:17" pos:end="839:30">current_sample</name>  <operator pos:start="839:33" pos:end="839:33">=</operator> <name pos:start="839:35" pos:end="839:52"><name pos:start="839:35" pos:end="839:35">c</name><operator pos:start="839:36" pos:end="839:37">-&gt;</operator><name pos:start="839:38" pos:end="839:43">status</name><index pos:start="839:44" pos:end="839:52">[<expr pos:start="839:45" pos:end="839:51"><name pos:start="839:45" pos:end="839:51">channel</name></expr>]</index></name><operator pos:start="839:53" pos:end="839:53">.</operator><name pos:start="839:54" pos:end="839:62">predictor</name></expr>;</expr_stmt>

                <expr_stmt pos:start="841:17" pos:end="841:65"><expr pos:start="841:17" pos:end="841:64"><name pos:start="841:17" pos:end="841:31">previous_sample</name> <operator pos:start="841:33" pos:end="841:33">=</operator> <name pos:start="841:35" pos:end="841:52"><name pos:start="841:35" pos:end="841:35">c</name><operator pos:start="841:36" pos:end="841:37">-&gt;</operator><name pos:start="841:38" pos:end="841:43">status</name><index pos:start="841:44" pos:end="841:52">[<expr pos:start="841:45" pos:end="841:51"><name pos:start="841:45" pos:end="841:51">channel</name></expr>]</index></name><operator pos:start="841:53" pos:end="841:53">.</operator><name pos:start="841:54" pos:end="841:64">prev_sample</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <for pos:start="847:13" pos:end="909:13">for <control pos:start="847:17" pos:end="847:61">(<init pos:start="847:18" pos:end="847:26"><expr pos:start="847:18" pos:end="847:25"><name pos:start="847:18" pos:end="847:23">count1</name><operator pos:start="847:24" pos:end="847:24">=</operator><literal type="number" pos:start="847:25" pos:end="847:25">0</literal></expr>;</init> <condition pos:start="847:28" pos:end="847:51"><expr pos:start="847:28" pos:end="847:50"><name pos:start="847:28" pos:end="847:33">count1</name><operator pos:start="847:34" pos:end="847:34">&lt;</operator><name pos:start="847:35" pos:end="847:50">samples_in_chunk</name></expr>;</condition> <incr pos:start="847:53" pos:end="847:60"><expr pos:start="847:53" pos:end="847:60"><name pos:start="847:53" pos:end="847:58">count1</name><operator pos:start="847:59" pos:end="847:60">++</operator></expr></incr>)</control> <block pos:start="847:63" pos:end="909:13">{<block_content pos:start="849:17" pos:end="907:17">

                <if_stmt pos:start="849:17" pos:end="907:17"><if pos:start="849:17" pos:end="867:17">if <condition pos:start="849:20" pos:end="849:34">(<expr pos:start="849:21" pos:end="849:33"><operator pos:start="849:21" pos:end="849:21">*</operator><name pos:start="849:22" pos:end="849:25">srcC</name> <operator pos:start="849:27" pos:end="849:28">==</operator> <literal type="number" pos:start="849:30" pos:end="849:33">0xEE</literal></expr>)</condition> <block pos:start="849:36" pos:end="867:17">{<block_content pos:start="851:21" pos:end="865:21">  <comment type="block" pos:start="849:39" pos:end="849:66">/* only seen in R2 and R3 */</comment>

                    <expr_stmt pos:start="851:21" pos:end="851:27"><expr pos:start="851:21" pos:end="851:26"><name pos:start="851:21" pos:end="851:24">srcC</name><operator pos:start="851:25" pos:end="851:26">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="853:21" pos:end="853:74"><expr pos:start="853:21" pos:end="853:73"><name pos:start="853:21" pos:end="853:34">current_sample</name>  <operator pos:start="853:37" pos:end="853:37">=</operator> <operator pos:start="853:39" pos:end="853:39">(</operator><name pos:start="853:40" pos:end="853:46">int16_t</name><operator pos:start="853:47" pos:end="853:47">)</operator><call pos:start="853:48" pos:end="853:73"><name pos:start="853:48" pos:end="853:66">bytestream_get_be16</name><argument_list pos:start="853:67" pos:end="853:73">(<argument pos:start="853:68" pos:end="853:72"><expr pos:start="853:68" pos:end="853:72"><operator pos:start="853:68" pos:end="853:68">&amp;</operator><name pos:start="853:69" pos:end="853:72">srcC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="855:21" pos:end="855:74"><expr pos:start="855:21" pos:end="855:73"><name pos:start="855:21" pos:end="855:35">previous_sample</name> <operator pos:start="855:37" pos:end="855:37">=</operator> <operator pos:start="855:39" pos:end="855:39">(</operator><name pos:start="855:40" pos:end="855:46">int16_t</name><operator pos:start="855:47" pos:end="855:47">)</operator><call pos:start="855:48" pos:end="855:73"><name pos:start="855:48" pos:end="855:66">bytestream_get_be16</name><argument_list pos:start="855:67" pos:end="855:73">(<argument pos:start="855:68" pos:end="855:72"><expr pos:start="855:68" pos:end="855:72"><operator pos:start="855:68" pos:end="855:68">&amp;</operator><name pos:start="855:69" pos:end="855:72">srcC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <for pos:start="859:21" pos:end="865:21">for <control pos:start="859:25" pos:end="859:55">(<init pos:start="859:26" pos:end="859:34"><expr pos:start="859:26" pos:end="859:33"><name pos:start="859:26" pos:end="859:31">count2</name><operator pos:start="859:32" pos:end="859:32">=</operator><literal type="number" pos:start="859:33" pos:end="859:33">0</literal></expr>;</init> <condition pos:start="859:36" pos:end="859:45"><expr pos:start="859:36" pos:end="859:44"><name pos:start="859:36" pos:end="859:41">count2</name><operator pos:start="859:42" pos:end="859:42">&lt;</operator><literal type="number" pos:start="859:43" pos:end="859:44">28</literal></expr>;</condition> <incr pos:start="859:47" pos:end="859:54"><expr pos:start="859:47" pos:end="859:54"><name pos:start="859:47" pos:end="859:52">count2</name><operator pos:start="859:53" pos:end="859:54">++</operator></expr></incr>)</control> <block pos:start="859:57" pos:end="865:21">{<block_content pos:start="861:25" pos:end="863:52">

                        <expr_stmt pos:start="861:25" pos:end="861:72"><expr pos:start="861:25" pos:end="861:71"><operator pos:start="861:25" pos:end="861:25">*</operator><name pos:start="861:26" pos:end="861:33">samplesC</name> <operator pos:start="861:35" pos:end="861:35">=</operator> <operator pos:start="861:37" pos:end="861:37">(</operator><name pos:start="861:38" pos:end="861:44">int16_t</name><operator pos:start="861:45" pos:end="861:45">)</operator><call pos:start="861:46" pos:end="861:71"><name pos:start="861:46" pos:end="861:64">bytestream_get_be16</name><argument_list pos:start="861:65" pos:end="861:71">(<argument pos:start="861:66" pos:end="861:70"><expr pos:start="861:66" pos:end="861:70"><operator pos:start="861:66" pos:end="861:66">&amp;</operator><name pos:start="861:67" pos:end="861:70">srcC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="863:25" pos:end="863:52"><expr pos:start="863:25" pos:end="863:51"><name pos:start="863:25" pos:end="863:32">samplesC</name> <operator pos:start="863:34" pos:end="863:35">+=</operator> <name pos:start="863:37" pos:end="863:51"><name pos:start="863:37" pos:end="863:41">avctx</name><operator pos:start="863:42" pos:end="863:43">-&gt;</operator><name pos:start="863:44" pos:end="863:51">channels</name></name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="867:19" pos:end="907:17">else <block pos:start="867:24" pos:end="907:17">{<block_content pos:start="869:21" pos:end="905:21">

                    <expr_stmt pos:start="869:21" pos:end="869:60"><expr pos:start="869:21" pos:end="869:59"><name pos:start="869:21" pos:end="869:26">coeff1</name> <operator pos:start="869:28" pos:end="869:28">=</operator> <name pos:start="869:30" pos:end="869:59"><name pos:start="869:30" pos:end="869:43">ea_adpcm_table</name><index pos:start="869:44" pos:end="869:59">[ <expr pos:start="869:46" pos:end="869:53"><operator pos:start="869:46" pos:end="869:46">*</operator><name pos:start="869:47" pos:end="869:50">srcC</name><operator pos:start="869:51" pos:end="869:52">&gt;&gt;</operator><literal type="number" pos:start="869:53" pos:end="869:53">4</literal></expr>     ]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="871:21" pos:end="871:60"><expr pos:start="871:21" pos:end="871:59"><name pos:start="871:21" pos:end="871:26">coeff2</name> <operator pos:start="871:28" pos:end="871:28">=</operator> <name pos:start="871:30" pos:end="871:59"><name pos:start="871:30" pos:end="871:43">ea_adpcm_table</name><index pos:start="871:44" pos:end="871:59">[<expr pos:start="871:45" pos:end="871:58"><operator pos:start="871:45" pos:end="871:45">(</operator><operator pos:start="871:46" pos:end="871:46">*</operator><name pos:start="871:47" pos:end="871:50">srcC</name><operator pos:start="871:51" pos:end="871:52">&gt;&gt;</operator><literal type="number" pos:start="871:53" pos:end="871:53">4</literal><operator pos:start="871:54" pos:end="871:54">)</operator> <operator pos:start="871:56" pos:end="871:56">+</operator> <literal type="number" pos:start="871:58" pos:end="871:58">4</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="873:21" pos:end="873:49"><expr pos:start="873:21" pos:end="873:48"><name pos:start="873:21" pos:end="873:25">shift</name> <operator pos:start="873:27" pos:end="873:27">=</operator> <operator pos:start="873:29" pos:end="873:29">(</operator><operator pos:start="873:30" pos:end="873:30">*</operator><name pos:start="873:31" pos:end="873:34">srcC</name><operator pos:start="873:35" pos:end="873:36">++</operator> <operator pos:start="873:38" pos:end="873:38">&amp;</operator> <literal type="number" pos:start="873:40" pos:end="873:43">0x0F</literal><operator pos:start="873:44" pos:end="873:44">)</operator> <operator pos:start="873:46" pos:end="873:46">+</operator> <literal type="number" pos:start="873:48" pos:end="873:48">8</literal></expr>;</expr_stmt>



                    <for pos:start="877:21" pos:end="905:21">for <control pos:start="877:25" pos:end="877:55">(<init pos:start="877:26" pos:end="877:34"><expr pos:start="877:26" pos:end="877:33"><name pos:start="877:26" pos:end="877:31">count2</name><operator pos:start="877:32" pos:end="877:32">=</operator><literal type="number" pos:start="877:33" pos:end="877:33">0</literal></expr>;</init> <condition pos:start="877:36" pos:end="877:45"><expr pos:start="877:36" pos:end="877:44"><name pos:start="877:36" pos:end="877:41">count2</name><operator pos:start="877:42" pos:end="877:42">&lt;</operator><literal type="number" pos:start="877:43" pos:end="877:44">28</literal></expr>;</condition> <incr pos:start="877:47" pos:end="877:54"><expr pos:start="877:47" pos:end="877:54"><name pos:start="877:47" pos:end="877:52">count2</name><operator pos:start="877:53" pos:end="877:54">++</operator></expr></incr>)</control> <block pos:start="877:57" pos:end="905:21">{<block_content pos:start="879:25" pos:end="903:52">

                        <if_stmt pos:start="879:25" pos:end="885:85"><if pos:start="879:25" pos:end="881:85">if <condition pos:start="879:28" pos:end="879:39">(<expr pos:start="879:29" pos:end="879:38"><name pos:start="879:29" pos:end="879:34">count2</name> <operator pos:start="879:36" pos:end="879:36">&amp;</operator> <literal type="number" pos:start="879:38" pos:end="879:38">1</literal></expr>)</condition><block type="pseudo" pos:start="881:29" pos:end="881:85"><block_content pos:start="881:29" pos:end="881:85">

                            <expr_stmt pos:start="881:29" pos:end="881:85"><expr pos:start="881:29" pos:end="881:84"><name pos:start="881:29" pos:end="881:39">next_sample</name> <operator pos:start="881:41" pos:end="881:41">=</operator> <operator pos:start="881:43" pos:end="881:43">(</operator><name pos:start="881:44" pos:end="881:50">int32_t</name><operator pos:start="881:51" pos:end="881:51">)</operator><operator pos:start="881:52" pos:end="881:52">(</operator><operator pos:start="881:53" pos:end="881:53">(</operator><operator pos:start="881:54" pos:end="881:54">*</operator><name pos:start="881:55" pos:end="881:58">srcC</name><operator pos:start="881:59" pos:end="881:60">++</operator> <operator pos:start="881:62" pos:end="881:62">&amp;</operator> <literal type="number" pos:start="881:64" pos:end="881:67">0x0F</literal><operator pos:start="881:68" pos:end="881:68">)</operator> <operator pos:start="881:70" pos:end="881:71">&lt;&lt;</operator> <literal type="number" pos:start="881:73" pos:end="881:74">28</literal><operator pos:start="881:75" pos:end="881:75">)</operator> <operator pos:start="881:77" pos:end="881:78">&gt;&gt;</operator> <name pos:start="881:80" pos:end="881:84">shift</name></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="883:25" pos:end="885:85">else<block type="pseudo" pos:start="885:29" pos:end="885:85"><block_content pos:start="885:29" pos:end="885:85">

                            <expr_stmt pos:start="885:29" pos:end="885:85"><expr pos:start="885:29" pos:end="885:84"><name pos:start="885:29" pos:end="885:39">next_sample</name> <operator pos:start="885:41" pos:end="885:41">=</operator> <operator pos:start="885:43" pos:end="885:43">(</operator><name pos:start="885:44" pos:end="885:50">int32_t</name><operator pos:start="885:51" pos:end="885:51">)</operator><operator pos:start="885:52" pos:end="885:52">(</operator><operator pos:start="885:53" pos:end="885:53">(</operator><operator pos:start="885:54" pos:end="885:54">*</operator><name pos:start="885:55" pos:end="885:58">srcC</name>   <operator pos:start="885:62" pos:end="885:62">&amp;</operator> <literal type="number" pos:start="885:64" pos:end="885:67">0xF0</literal><operator pos:start="885:68" pos:end="885:68">)</operator> <operator pos:start="885:70" pos:end="885:71">&lt;&lt;</operator> <literal type="number" pos:start="885:73" pos:end="885:74">24</literal><operator pos:start="885:75" pos:end="885:75">)</operator> <operator pos:start="885:77" pos:end="885:78">&gt;&gt;</operator> <name pos:start="885:80" pos:end="885:84">shift</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                        <expr_stmt pos:start="889:25" pos:end="891:66"><expr pos:start="889:25" pos:end="891:65"><name pos:start="889:25" pos:end="889:35">next_sample</name> <operator pos:start="889:37" pos:end="889:38">+=</operator> <operator pos:start="889:40" pos:end="889:40">(</operator><name pos:start="889:41" pos:end="889:54">current_sample</name>  <operator pos:start="889:57" pos:end="889:57">*</operator> <name pos:start="889:59" pos:end="889:64">coeff1</name><operator pos:start="889:65" pos:end="889:65">)</operator> <operator pos:start="889:67" pos:end="889:67">+</operator>

                                       <operator pos:start="891:40" pos:end="891:40">(</operator><name pos:start="891:41" pos:end="891:55">previous_sample</name> <operator pos:start="891:57" pos:end="891:57">*</operator> <name pos:start="891:59" pos:end="891:64">coeff2</name><operator pos:start="891:65" pos:end="891:65">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="893:25" pos:end="893:70"><expr pos:start="893:25" pos:end="893:69"><name pos:start="893:25" pos:end="893:35">next_sample</name> <operator pos:start="893:37" pos:end="893:37">=</operator> <call pos:start="893:39" pos:end="893:69"><name pos:start="893:39" pos:end="893:51">av_clip_int16</name><argument_list pos:start="893:52" pos:end="893:69">(<argument pos:start="893:53" pos:end="893:68"><expr pos:start="893:53" pos:end="893:68"><name pos:start="893:53" pos:end="893:63">next_sample</name> <operator pos:start="893:65" pos:end="893:66">&gt;&gt;</operator> <literal type="number" pos:start="893:68" pos:end="893:68">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="897:25" pos:end="897:57"><expr pos:start="897:25" pos:end="897:56"><name pos:start="897:25" pos:end="897:39">previous_sample</name> <operator pos:start="897:41" pos:end="897:41">=</operator> <name pos:start="897:43" pos:end="897:56">current_sample</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="899:25" pos:end="899:54"><expr pos:start="899:25" pos:end="899:53"><name pos:start="899:25" pos:end="899:38">current_sample</name>  <operator pos:start="899:41" pos:end="899:41">=</operator> <name pos:start="899:43" pos:end="899:53">next_sample</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="901:25" pos:end="901:51"><expr pos:start="901:25" pos:end="901:50"><operator pos:start="901:25" pos:end="901:25">*</operator><name pos:start="901:26" pos:end="901:33">samplesC</name> <operator pos:start="901:35" pos:end="901:35">=</operator> <name pos:start="901:37" pos:end="901:50">current_sample</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="903:25" pos:end="903:52"><expr pos:start="903:25" pos:end="903:51"><name pos:start="903:25" pos:end="903:32">samplesC</name> <operator pos:start="903:34" pos:end="903:35">+=</operator> <name pos:start="903:37" pos:end="903:51"><name pos:start="903:37" pos:end="903:41">avctx</name><operator pos:start="903:42" pos:end="903:43">-&gt;</operator><name pos:start="903:44" pos:end="903:51">channels</name></name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>



            <if_stmt pos:start="913:13" pos:end="919:13"><if pos:start="913:13" pos:end="919:13">if <condition pos:start="913:16" pos:end="913:57">(<expr pos:start="913:17" pos:end="913:56"><name pos:start="913:17" pos:end="913:32"><name pos:start="913:17" pos:end="913:21">avctx</name><operator pos:start="913:22" pos:end="913:23">-&gt;</operator><name pos:start="913:24" pos:end="913:28">codec</name><operator pos:start="913:29" pos:end="913:30">-&gt;</operator><name pos:start="913:31" pos:end="913:32">id</name></name> <operator pos:start="913:34" pos:end="913:35">!=</operator> <name pos:start="913:37" pos:end="913:56">CODEC_ID_ADPCM_EA_R1</name></expr>)</condition> <block pos:start="913:59" pos:end="919:13">{<block_content pos:start="915:17" pos:end="917:65">

                <expr_stmt pos:start="915:17" pos:end="915:64"><expr pos:start="915:17" pos:end="915:63"><name pos:start="915:17" pos:end="915:34"><name pos:start="915:17" pos:end="915:17">c</name><operator pos:start="915:18" pos:end="915:19">-&gt;</operator><name pos:start="915:20" pos:end="915:25">status</name><index pos:start="915:26" pos:end="915:34">[<expr pos:start="915:27" pos:end="915:33"><name pos:start="915:27" pos:end="915:33">channel</name></expr>]</index></name><operator pos:start="915:35" pos:end="915:35">.</operator><name pos:start="915:36" pos:end="915:44">predictor</name>   <operator pos:start="915:48" pos:end="915:48">=</operator> <name pos:start="915:50" pos:end="915:63">current_sample</name></expr>;</expr_stmt>

                <expr_stmt pos:start="917:17" pos:end="917:65"><expr pos:start="917:17" pos:end="917:64"><name pos:start="917:17" pos:end="917:34"><name pos:start="917:17" pos:end="917:17">c</name><operator pos:start="917:18" pos:end="917:19">-&gt;</operator><name pos:start="917:20" pos:end="917:25">status</name><index pos:start="917:26" pos:end="917:34">[<expr pos:start="917:27" pos:end="917:33"><name pos:start="917:27" pos:end="917:33">channel</name></expr>]</index></name><operator pos:start="917:35" pos:end="917:35">.</operator><name pos:start="917:36" pos:end="917:46">prev_sample</name> <operator pos:start="917:48" pos:end="917:48">=</operator> <name pos:start="917:50" pos:end="917:64">previous_sample</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="925:9" pos:end="925:55"><expr pos:start="925:9" pos:end="925:54"><name pos:start="925:9" pos:end="925:11">src</name> <operator pos:start="925:13" pos:end="925:13">=</operator> <name pos:start="925:15" pos:end="925:17">src</name> <operator pos:start="925:19" pos:end="925:19">+</operator> <name pos:start="925:21" pos:end="925:28">buf_size</name> <operator pos:start="925:30" pos:end="925:30">-</operator> <operator pos:start="925:32" pos:end="925:32">(</operator><literal type="number" pos:start="925:33" pos:end="925:35">4</literal> <operator pos:start="925:35" pos:end="925:35">+</operator> <literal type="number" pos:start="925:37" pos:end="925:37">4</literal><operator pos:start="925:38" pos:end="925:38">*</operator><name pos:start="925:39" pos:end="925:53"><name pos:start="925:39" pos:end="925:43">avctx</name><operator pos:start="925:44" pos:end="925:45">-&gt;</operator><name pos:start="925:46" pos:end="925:53">channels</name></name><operator pos:start="925:54" pos:end="925:54">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="927:9" pos:end="927:59"><expr pos:start="927:9" pos:end="927:58"><name pos:start="927:9" pos:end="927:15">samples</name> <operator pos:start="927:17" pos:end="927:18">+=</operator> <literal type="number" pos:start="927:20" pos:end="927:21">28</literal> <operator pos:start="927:23" pos:end="927:23">*</operator> <name pos:start="927:25" pos:end="927:40">samples_in_chunk</name> <operator pos:start="927:42" pos:end="927:42">*</operator> <name pos:start="927:44" pos:end="927:58"><name pos:start="927:44" pos:end="927:48">avctx</name><operator pos:start="927:49" pos:end="927:50">-&gt;</operator><name pos:start="927:51" pos:end="927:58">channels</name></name></expr>;</expr_stmt>

        <break pos:start="929:9" pos:end="929:14">break;</break>

    </block_content>}</block>

    <case pos:start="933:5" pos:end="933:31">case <expr pos:start="933:10" pos:end="933:30"><name pos:start="933:10" pos:end="933:30">CODEC_ID_ADPCM_EA_XAS</name></expr>:</case>

        <if_stmt pos:start="935:9" pos:end="943:9"><if pos:start="935:9" pos:end="943:9">if <condition pos:start="935:12" pos:end="937:51">(<expr pos:start="935:13" pos:end="937:50"><name pos:start="935:13" pos:end="935:23">samples_end</name><operator pos:start="935:24" pos:end="935:24">-</operator><name pos:start="935:25" pos:end="935:31">samples</name> <operator pos:start="935:33" pos:end="935:33">&lt;</operator> <literal type="number" pos:start="935:35" pos:end="935:36">32</literal><operator pos:start="935:37" pos:end="935:37">*</operator><literal type="number" pos:start="935:38" pos:end="935:38">4</literal><operator pos:start="935:39" pos:end="935:39">*</operator><name pos:start="935:40" pos:end="935:54"><name pos:start="935:40" pos:end="935:44">avctx</name><operator pos:start="935:45" pos:end="935:46">-&gt;</operator><name pos:start="935:47" pos:end="935:54">channels</name></name>

            <operator pos:start="937:13" pos:end="937:14">||</operator> <name pos:start="937:16" pos:end="937:23">buf_size</name> <operator pos:start="937:25" pos:end="937:25">&lt;</operator> <operator pos:start="937:27" pos:end="937:27">(</operator><literal type="number" pos:start="937:28" pos:end="937:29">4</literal><operator pos:start="937:29" pos:end="937:29">+</operator><literal type="number" pos:start="937:30" pos:end="937:31">15</literal><operator pos:start="937:32" pos:end="937:32">)</operator><operator pos:start="937:33" pos:end="937:33">*</operator><literal type="number" pos:start="937:34" pos:end="937:34">4</literal><operator pos:start="937:35" pos:end="937:35">*</operator><name pos:start="937:36" pos:end="937:50"><name pos:start="937:36" pos:end="937:40">avctx</name><operator pos:start="937:41" pos:end="937:42">-&gt;</operator><name pos:start="937:43" pos:end="937:50">channels</name></name></expr>)</condition> <block pos:start="937:53" pos:end="943:9">{<block_content pos:start="939:13" pos:end="941:18">

            <expr_stmt pos:start="939:13" pos:end="939:28"><expr pos:start="939:13" pos:end="939:27"><name pos:start="939:13" pos:end="939:15">src</name> <operator pos:start="939:17" pos:end="939:18">+=</operator> <name pos:start="939:20" pos:end="939:27">buf_size</name></expr>;</expr_stmt>

            <break pos:start="941:13" pos:end="941:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <for pos:start="945:9" pos:end="989:9">for <control pos:start="945:13" pos:end="945:59">(<init pos:start="945:14" pos:end="945:23"><expr pos:start="945:14" pos:end="945:22"><name pos:start="945:14" pos:end="945:20">channel</name><operator pos:start="945:21" pos:end="945:21">=</operator><literal type="number" pos:start="945:22" pos:end="945:22">0</literal></expr>;</init> <condition pos:start="945:25" pos:end="945:48"><expr pos:start="945:25" pos:end="945:47"><name pos:start="945:25" pos:end="945:31">channel</name><operator pos:start="945:32" pos:end="945:32">&lt;</operator><name pos:start="945:33" pos:end="945:47"><name pos:start="945:33" pos:end="945:37">avctx</name><operator pos:start="945:38" pos:end="945:39">-&gt;</operator><name pos:start="945:40" pos:end="945:47">channels</name></name></expr>;</condition> <incr pos:start="945:50" pos:end="945:58"><expr pos:start="945:50" pos:end="945:58"><name pos:start="945:50" pos:end="945:56">channel</name><operator pos:start="945:57" pos:end="945:58">++</operator></expr></incr>)</control> <block pos:start="945:61" pos:end="989:9">{<block_content pos:start="947:13" pos:end="987:13">

            <decl_stmt pos:start="947:13" pos:end="947:38"><decl pos:start="947:13" pos:end="947:27"><type pos:start="947:13" pos:end="947:15"><name pos:start="947:13" pos:end="947:15">int</name></type> <name pos:start="947:17" pos:end="947:27"><name pos:start="947:17" pos:end="947:21">coeff</name><index pos:start="947:22" pos:end="947:24">[<expr pos:start="947:23" pos:end="947:23"><literal type="number" pos:start="947:23" pos:end="947:23">2</literal></expr>]</index><index pos:start="947:25" pos:end="947:27">[<expr pos:start="947:26" pos:end="947:26"><literal type="number" pos:start="947:26" pos:end="947:26">4</literal></expr>]</index></name></decl>, <decl pos:start="947:30" pos:end="947:37"><type ref="prev" pos:start="947:13" pos:end="947:15"/><name pos:start="947:30" pos:end="947:37"><name pos:start="947:30" pos:end="947:34">shift</name><index pos:start="947:35" pos:end="947:37">[<expr pos:start="947:36" pos:end="947:36"><literal type="number" pos:start="947:36" pos:end="947:36">4</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="949:13" pos:end="949:46"><decl pos:start="949:13" pos:end="949:21"><type pos:start="949:13" pos:end="949:19"><name pos:start="949:13" pos:end="949:17">short</name> <modifier pos:start="949:19" pos:end="949:19">*</modifier></type><name pos:start="949:20" pos:end="949:21">s2</name></decl>, <decl pos:start="949:24" pos:end="949:45"><type ref="prev" pos:start="949:13" pos:end="949:19"><modifier pos:start="949:24" pos:end="949:24">*</modifier></type><name pos:start="949:25" pos:end="949:25">s</name> <init pos:start="949:27" pos:end="949:45">= <expr pos:start="949:29" pos:end="949:45"><operator pos:start="949:29" pos:end="949:29">&amp;</operator><name pos:start="949:30" pos:end="949:45"><name pos:start="949:30" pos:end="949:36">samples</name><index pos:start="949:37" pos:end="949:45">[<expr pos:start="949:38" pos:end="949:44"><name pos:start="949:38" pos:end="949:44">channel</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="951:13" pos:end="963:13">for <control pos:start="951:17" pos:end="951:54">(<init pos:start="951:18" pos:end="951:21"><expr pos:start="951:18" pos:end="951:20"><name pos:start="951:18" pos:end="951:18">n</name><operator pos:start="951:19" pos:end="951:19">=</operator><literal type="number" pos:start="951:20" pos:end="951:20">0</literal></expr>;</init> <condition pos:start="951:23" pos:end="951:26"><expr pos:start="951:23" pos:end="951:25"><name pos:start="951:23" pos:end="951:23">n</name><operator pos:start="951:24" pos:end="951:24">&lt;</operator><literal type="number" pos:start="951:25" pos:end="951:25">4</literal></expr>;</condition> <incr pos:start="951:28" pos:end="951:53"><expr pos:start="951:28" pos:end="951:30"><name pos:start="951:28" pos:end="951:28">n</name><operator pos:start="951:29" pos:end="951:30">++</operator></expr><operator pos:start="951:31" pos:end="951:31">,</operator> <expr pos:start="951:33" pos:end="951:53"><name pos:start="951:33" pos:end="951:33">s</name><operator pos:start="951:34" pos:end="951:35">+=</operator><literal type="number" pos:start="951:36" pos:end="951:37">32</literal><operator pos:start="951:38" pos:end="951:38">*</operator><name pos:start="951:39" pos:end="951:53"><name pos:start="951:39" pos:end="951:43">avctx</name><operator pos:start="951:44" pos:end="951:45">-&gt;</operator><name pos:start="951:46" pos:end="951:53">channels</name></name></expr></incr>)</control> <block pos:start="951:56" pos:end="963:13">{<block_content pos:start="953:17" pos:end="961:56">

                <for pos:start="953:17" pos:end="955:68">for <control pos:start="953:21" pos:end="953:35">(<init pos:start="953:22" pos:end="953:25"><expr pos:start="953:22" pos:end="953:24"><name pos:start="953:22" pos:end="953:22">i</name><operator pos:start="953:23" pos:end="953:23">=</operator><literal type="number" pos:start="953:24" pos:end="953:24">0</literal></expr>;</init> <condition pos:start="953:27" pos:end="953:30"><expr pos:start="953:27" pos:end="953:29"><name pos:start="953:27" pos:end="953:27">i</name><operator pos:start="953:28" pos:end="953:28">&lt;</operator><literal type="number" pos:start="953:29" pos:end="953:29">2</literal></expr>;</condition> <incr pos:start="953:32" pos:end="953:34"><expr pos:start="953:32" pos:end="953:34"><name pos:start="953:32" pos:end="953:32">i</name><operator pos:start="953:33" pos:end="953:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="955:21" pos:end="955:68"><block_content pos:start="955:21" pos:end="955:68">

                    <expr_stmt pos:start="955:21" pos:end="955:68"><expr pos:start="955:21" pos:end="955:67"><name pos:start="955:21" pos:end="955:31"><name pos:start="955:21" pos:end="955:25">coeff</name><index pos:start="955:26" pos:end="955:28">[<expr pos:start="955:27" pos:end="955:27"><name pos:start="955:27" pos:end="955:27">i</name></expr>]</index><index pos:start="955:29" pos:end="955:31">[<expr pos:start="955:30" pos:end="955:30"><name pos:start="955:30" pos:end="955:30">n</name></expr>]</index></name> <operator pos:start="955:33" pos:end="955:33">=</operator> <name pos:start="955:35" pos:end="955:67"><name pos:start="955:35" pos:end="955:48">ea_adpcm_table</name><index pos:start="955:49" pos:end="955:67">[<expr pos:start="955:50" pos:end="955:66"><operator pos:start="955:50" pos:end="955:50">(</operator><name pos:start="955:51" pos:end="955:56"><name pos:start="955:51" pos:end="955:53">src</name><index pos:start="955:54" pos:end="955:56">[<expr pos:start="955:55" pos:end="955:55"><literal type="number" pos:start="955:55" pos:end="955:55">0</literal></expr>]</index></name><operator pos:start="955:57" pos:end="955:57">&amp;</operator><literal type="number" pos:start="955:58" pos:end="955:61">0x0F</literal><operator pos:start="955:62" pos:end="955:62">)</operator><operator pos:start="955:63" pos:end="955:63">+</operator><literal type="number" pos:start="955:64" pos:end="955:64">4</literal><operator pos:start="955:65" pos:end="955:65">*</operator><name pos:start="955:66" pos:end="955:66">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="957:17" pos:end="957:45"><expr pos:start="957:17" pos:end="957:44"><name pos:start="957:17" pos:end="957:24"><name pos:start="957:17" pos:end="957:21">shift</name><index pos:start="957:22" pos:end="957:24">[<expr pos:start="957:23" pos:end="957:23"><name pos:start="957:23" pos:end="957:23">n</name></expr>]</index></name> <operator pos:start="957:26" pos:end="957:26">=</operator> <operator pos:start="957:28" pos:end="957:28">(</operator><name pos:start="957:29" pos:end="957:34"><name pos:start="957:29" pos:end="957:31">src</name><index pos:start="957:32" pos:end="957:34">[<expr pos:start="957:33" pos:end="957:33"><literal type="number" pos:start="957:33" pos:end="957:33">2</literal></expr>]</index></name><operator pos:start="957:35" pos:end="957:35">&amp;</operator><literal type="number" pos:start="957:36" pos:end="957:39">0x0F</literal><operator pos:start="957:40" pos:end="957:40">)</operator> <operator pos:start="957:42" pos:end="957:42">+</operator> <literal type="number" pos:start="957:44" pos:end="957:44">8</literal></expr>;</expr_stmt>

                <for pos:start="959:17" pos:end="961:56">for <control pos:start="959:21" pos:end="959:70">(<init pos:start="959:22" pos:end="959:31"><expr pos:start="959:22" pos:end="959:25"><name pos:start="959:22" pos:end="959:23">s2</name><operator pos:start="959:24" pos:end="959:24">=</operator><name pos:start="959:25" pos:end="959:25">s</name></expr><operator pos:start="959:26" pos:end="959:26">,</operator> <expr pos:start="959:28" pos:end="959:30"><name pos:start="959:28" pos:end="959:28">i</name><operator pos:start="959:29" pos:end="959:29">=</operator><literal type="number" pos:start="959:30" pos:end="959:30">0</literal></expr>;</init> <condition pos:start="959:33" pos:end="959:36"><expr pos:start="959:33" pos:end="959:35"><name pos:start="959:33" pos:end="959:33">i</name><operator pos:start="959:34" pos:end="959:34">&lt;</operator><literal type="number" pos:start="959:35" pos:end="959:35">2</literal></expr>;</condition> <incr pos:start="959:38" pos:end="959:69"><expr pos:start="959:38" pos:end="959:40"><name pos:start="959:38" pos:end="959:38">i</name><operator pos:start="959:39" pos:end="959:40">++</operator></expr><operator pos:start="959:41" pos:end="959:41">,</operator> <expr pos:start="959:43" pos:end="959:48"><name pos:start="959:43" pos:end="959:45">src</name><operator pos:start="959:46" pos:end="959:47">+=</operator><literal type="number" pos:start="959:48" pos:end="959:48">2</literal></expr><operator pos:start="959:49" pos:end="959:49">,</operator> <expr pos:start="959:51" pos:end="959:69"><name pos:start="959:51" pos:end="959:52">s2</name><operator pos:start="959:53" pos:end="959:54">+=</operator><name pos:start="959:55" pos:end="959:69"><name pos:start="959:55" pos:end="959:59">avctx</name><operator pos:start="959:60" pos:end="959:61">-&gt;</operator><name pos:start="959:62" pos:end="959:69">channels</name></name></expr></incr>)</control><block type="pseudo" pos:start="961:21" pos:end="961:56"><block_content pos:start="961:21" pos:end="961:56">

                    <expr_stmt pos:start="961:21" pos:end="961:56"><expr pos:start="961:21" pos:end="961:55"><name pos:start="961:21" pos:end="961:25"><name pos:start="961:21" pos:end="961:22">s2</name><index pos:start="961:23" pos:end="961:25">[<expr pos:start="961:24" pos:end="961:24"><literal type="number" pos:start="961:24" pos:end="961:24">0</literal></expr>]</index></name> <operator pos:start="961:27" pos:end="961:27">=</operator> <operator pos:start="961:29" pos:end="961:29">(</operator><name pos:start="961:30" pos:end="961:35"><name pos:start="961:30" pos:end="961:32">src</name><index pos:start="961:33" pos:end="961:35">[<expr pos:start="961:34" pos:end="961:34"><literal type="number" pos:start="961:34" pos:end="961:34">0</literal></expr>]</index></name><operator pos:start="961:36" pos:end="961:36">&amp;</operator><literal type="number" pos:start="961:37" pos:end="961:40">0xF0</literal><operator pos:start="961:41" pos:end="961:41">)</operator> <operator pos:start="961:43" pos:end="961:43">+</operator> <operator pos:start="961:45" pos:end="961:45">(</operator><name pos:start="961:46" pos:end="961:51"><name pos:start="961:46" pos:end="961:48">src</name><index pos:start="961:49" pos:end="961:51">[<expr pos:start="961:50" pos:end="961:50"><literal type="number" pos:start="961:50" pos:end="961:50">1</literal></expr>]</index></name><operator pos:start="961:52" pos:end="961:53">&lt;&lt;</operator><literal type="number" pos:start="961:54" pos:end="961:54">8</literal><operator pos:start="961:55" pos:end="961:55">)</operator></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></for>



            <for pos:start="967:13" pos:end="987:13">for <control pos:start="967:17" pos:end="967:33">(<init pos:start="967:18" pos:end="967:21"><expr pos:start="967:18" pos:end="967:20"><name pos:start="967:18" pos:end="967:18">m</name><operator pos:start="967:19" pos:end="967:19">=</operator><literal type="number" pos:start="967:20" pos:end="967:20">2</literal></expr>;</init> <condition pos:start="967:23" pos:end="967:27"><expr pos:start="967:23" pos:end="967:26"><name pos:start="967:23" pos:end="967:23">m</name><operator pos:start="967:24" pos:end="967:24">&lt;</operator><literal type="number" pos:start="967:25" pos:end="967:26">32</literal></expr>;</condition> <incr pos:start="967:29" pos:end="967:32"><expr pos:start="967:29" pos:end="967:32"><name pos:start="967:29" pos:end="967:29">m</name><operator pos:start="967:30" pos:end="967:31">+=</operator><literal type="number" pos:start="967:32" pos:end="967:32">2</literal></expr></incr>)</control> <block pos:start="967:35" pos:end="987:13">{<block_content pos:start="969:17" pos:end="985:17">

                <expr_stmt pos:start="969:17" pos:end="969:58"><expr pos:start="969:17" pos:end="969:57"><name pos:start="969:17" pos:end="969:17">s</name> <operator pos:start="969:19" pos:end="969:19">=</operator> <operator pos:start="969:21" pos:end="969:21">&amp;</operator><name pos:start="969:22" pos:end="969:57"><name pos:start="969:22" pos:end="969:28">samples</name><index pos:start="969:29" pos:end="969:57">[<expr pos:start="969:30" pos:end="969:56"><name pos:start="969:30" pos:end="969:30">m</name><operator pos:start="969:31" pos:end="969:31">*</operator><name pos:start="969:32" pos:end="969:46"><name pos:start="969:32" pos:end="969:36">avctx</name><operator pos:start="969:37" pos:end="969:38">-&gt;</operator><name pos:start="969:39" pos:end="969:46">channels</name></name> <operator pos:start="969:48" pos:end="969:48">+</operator> <name pos:start="969:50" pos:end="969:56">channel</name></expr>]</index></name></expr>;</expr_stmt>

                <for pos:start="971:17" pos:end="985:17">for <control pos:start="971:21" pos:end="971:65">(<init pos:start="971:22" pos:end="971:25"><expr pos:start="971:22" pos:end="971:24"><name pos:start="971:22" pos:end="971:22">n</name><operator pos:start="971:23" pos:end="971:23">=</operator><literal type="number" pos:start="971:24" pos:end="971:24">0</literal></expr>;</init> <condition pos:start="971:27" pos:end="971:30"><expr pos:start="971:27" pos:end="971:29"><name pos:start="971:27" pos:end="971:27">n</name><operator pos:start="971:28" pos:end="971:28">&lt;</operator><literal type="number" pos:start="971:29" pos:end="971:29">4</literal></expr>;</condition> <incr pos:start="971:32" pos:end="971:64"><expr pos:start="971:32" pos:end="971:34"><name pos:start="971:32" pos:end="971:32">n</name><operator pos:start="971:33" pos:end="971:34">++</operator></expr><operator pos:start="971:35" pos:end="971:35">,</operator> <expr pos:start="971:37" pos:end="971:41"><name pos:start="971:37" pos:end="971:39">src</name><operator pos:start="971:40" pos:end="971:41">++</operator></expr><operator pos:start="971:42" pos:end="971:42">,</operator> <expr pos:start="971:44" pos:end="971:64"><name pos:start="971:44" pos:end="971:44">s</name><operator pos:start="971:45" pos:end="971:46">+=</operator><literal type="number" pos:start="971:47" pos:end="971:48">32</literal><operator pos:start="971:49" pos:end="971:49">*</operator><name pos:start="971:50" pos:end="971:64"><name pos:start="971:50" pos:end="971:54">avctx</name><operator pos:start="971:55" pos:end="971:56">-&gt;</operator><name pos:start="971:57" pos:end="971:64">channels</name></name></expr></incr>)</control> <block pos:start="971:67" pos:end="985:17">{<block_content pos:start="973:21" pos:end="983:21">

                    <for pos:start="973:21" pos:end="983:21">for <control pos:start="973:25" pos:end="973:67">(<init pos:start="973:26" pos:end="973:35"><expr pos:start="973:26" pos:end="973:29"><name pos:start="973:26" pos:end="973:27">s2</name><operator pos:start="973:28" pos:end="973:28">=</operator><name pos:start="973:29" pos:end="973:29">s</name></expr><operator pos:start="973:30" pos:end="973:30">,</operator> <expr pos:start="973:32" pos:end="973:34"><name pos:start="973:32" pos:end="973:32">i</name><operator pos:start="973:33" pos:end="973:33">=</operator><literal type="number" pos:start="973:34" pos:end="973:34">0</literal></expr>;</init> <condition pos:start="973:37" pos:end="973:40"><expr pos:start="973:37" pos:end="973:39"><name pos:start="973:37" pos:end="973:37">i</name><operator pos:start="973:38" pos:end="973:38">&lt;</operator><literal type="number" pos:start="973:39" pos:end="973:39">8</literal></expr>;</condition> <incr pos:start="973:42" pos:end="973:66"><expr pos:start="973:42" pos:end="973:45"><name pos:start="973:42" pos:end="973:42">i</name><operator pos:start="973:43" pos:end="973:44">+=</operator><literal type="number" pos:start="973:45" pos:end="973:45">4</literal></expr><operator pos:start="973:46" pos:end="973:46">,</operator> <expr pos:start="973:48" pos:end="973:66"><name pos:start="973:48" pos:end="973:49">s2</name><operator pos:start="973:50" pos:end="973:51">+=</operator><name pos:start="973:52" pos:end="973:66"><name pos:start="973:52" pos:end="973:56">avctx</name><operator pos:start="973:57" pos:end="973:58">-&gt;</operator><name pos:start="973:59" pos:end="973:66">channels</name></name></expr></incr>)</control> <block pos:start="973:69" pos:end="983:21">{<block_content pos:start="975:25" pos:end="981:74">

                        <decl_stmt pos:start="975:25" pos:end="975:88"><decl pos:start="975:25" pos:end="975:87"><type pos:start="975:25" pos:end="975:27"><name pos:start="975:25" pos:end="975:27">int</name></type> <name pos:start="975:29" pos:end="975:33">level</name> <init pos:start="975:35" pos:end="975:87">= <expr pos:start="975:37" pos:end="975:87"><operator pos:start="975:37" pos:end="975:37">(</operator><name pos:start="975:38" pos:end="975:44">int32_t</name><operator pos:start="975:45" pos:end="975:45">)</operator><operator pos:start="975:46" pos:end="975:46">(</operator><operator pos:start="975:47" pos:end="975:47">(</operator><operator pos:start="975:48" pos:end="975:48">*</operator><name pos:start="975:49" pos:end="975:51">src</name> <operator pos:start="975:53" pos:end="975:53">&amp;</operator> <operator pos:start="975:55" pos:end="975:55">(</operator><literal type="number" pos:start="975:56" pos:end="975:59">0xF0</literal><operator pos:start="975:60" pos:end="975:61">&gt;&gt;</operator><name pos:start="975:62" pos:end="975:62">i</name><operator pos:start="975:63" pos:end="975:63">)</operator><operator pos:start="975:64" pos:end="975:64">)</operator> <operator pos:start="975:66" pos:end="975:67">&lt;&lt;</operator> <operator pos:start="975:69" pos:end="975:69">(</operator><literal type="number" pos:start="975:70" pos:end="975:72">24</literal><operator pos:start="975:72" pos:end="975:72">+</operator><name pos:start="975:73" pos:end="975:73">i</name><operator pos:start="975:74" pos:end="975:74">)</operator><operator pos:start="975:75" pos:end="975:75">)</operator> <operator pos:start="975:77" pos:end="975:78">&gt;&gt;</operator> <name pos:start="975:80" pos:end="975:87"><name pos:start="975:80" pos:end="975:84">shift</name><index pos:start="975:85" pos:end="975:87">[<expr pos:start="975:86" pos:end="975:86"><name pos:start="975:86" pos:end="975:86">n</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="977:25" pos:end="979:73"><decl pos:start="977:25" pos:end="979:72"><type pos:start="977:25" pos:end="977:27"><name pos:start="977:25" pos:end="977:27">int</name></type> <name pos:start="977:29" pos:end="977:32">pred</name>  <init pos:start="977:35" pos:end="979:72">= <expr pos:start="977:37" pos:end="979:72"><name pos:start="977:37" pos:end="977:58"><name pos:start="977:37" pos:end="977:38">s2</name><index pos:start="977:39" pos:end="977:58">[<expr pos:start="977:40" pos:end="977:57"><operator pos:start="977:40" pos:end="977:40">-</operator><literal type="number" pos:start="977:41" pos:end="977:41">1</literal><operator pos:start="977:42" pos:end="977:42">*</operator><name pos:start="977:43" pos:end="977:57"><name pos:start="977:43" pos:end="977:47">avctx</name><operator pos:start="977:48" pos:end="977:49">-&gt;</operator><name pos:start="977:50" pos:end="977:57">channels</name></name></expr>]</index></name> <operator pos:start="977:60" pos:end="977:60">*</operator> <name pos:start="977:62" pos:end="977:72"><name pos:start="977:62" pos:end="977:66">coeff</name><index pos:start="977:67" pos:end="977:69">[<expr pos:start="977:68" pos:end="977:68"><literal type="number" pos:start="977:68" pos:end="977:68">0</literal></expr>]</index><index pos:start="977:70" pos:end="977:72">[<expr pos:start="977:71" pos:end="977:71"><name pos:start="977:71" pos:end="977:71">n</name></expr>]</index></name>

                                  <operator pos:start="979:35" pos:end="979:35">+</operator> <name pos:start="979:37" pos:end="979:58"><name pos:start="979:37" pos:end="979:38">s2</name><index pos:start="979:39" pos:end="979:58">[<expr pos:start="979:40" pos:end="979:57"><operator pos:start="979:40" pos:end="979:40">-</operator><literal type="number" pos:start="979:41" pos:end="979:41">2</literal><operator pos:start="979:42" pos:end="979:42">*</operator><name pos:start="979:43" pos:end="979:57"><name pos:start="979:43" pos:end="979:47">avctx</name><operator pos:start="979:48" pos:end="979:49">-&gt;</operator><name pos:start="979:50" pos:end="979:57">channels</name></name></expr>]</index></name> <operator pos:start="979:60" pos:end="979:60">*</operator> <name pos:start="979:62" pos:end="979:72"><name pos:start="979:62" pos:end="979:66">coeff</name><index pos:start="979:67" pos:end="979:69">[<expr pos:start="979:68" pos:end="979:68"><literal type="number" pos:start="979:68" pos:end="979:68">1</literal></expr>]</index><index pos:start="979:70" pos:end="979:72">[<expr pos:start="979:71" pos:end="979:71"><name pos:start="979:71" pos:end="979:71">n</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="981:25" pos:end="981:74"><expr pos:start="981:25" pos:end="981:73"><name pos:start="981:25" pos:end="981:29"><name pos:start="981:25" pos:end="981:26">s2</name><index pos:start="981:27" pos:end="981:29">[<expr pos:start="981:28" pos:end="981:28"><literal type="number" pos:start="981:28" pos:end="981:28">0</literal></expr>]</index></name> <operator pos:start="981:31" pos:end="981:31">=</operator> <call pos:start="981:33" pos:end="981:73"><name pos:start="981:33" pos:end="981:45">av_clip_int16</name><argument_list pos:start="981:46" pos:end="981:73">(<argument pos:start="981:47" pos:end="981:72"><expr pos:start="981:47" pos:end="981:72"><operator pos:start="981:47" pos:end="981:47">(</operator><name pos:start="981:48" pos:end="981:52">level</name> <operator pos:start="981:54" pos:end="981:54">+</operator> <name pos:start="981:56" pos:end="981:59">pred</name> <operator pos:start="981:61" pos:end="981:61">+</operator> <literal type="number" pos:start="981:63" pos:end="981:66">0x80</literal><operator pos:start="981:67" pos:end="981:67">)</operator> <operator pos:start="981:69" pos:end="981:70">&gt;&gt;</operator> <literal type="number" pos:start="981:72" pos:end="981:72">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="991:9" pos:end="991:40"><expr pos:start="991:9" pos:end="991:39"><name pos:start="991:9" pos:end="991:15">samples</name> <operator pos:start="991:17" pos:end="991:18">+=</operator> <literal type="number" pos:start="991:20" pos:end="991:21">32</literal><operator pos:start="991:22" pos:end="991:22">*</operator><literal type="number" pos:start="991:23" pos:end="991:23">4</literal><operator pos:start="991:24" pos:end="991:24">*</operator><name pos:start="991:25" pos:end="991:39"><name pos:start="991:25" pos:end="991:29">avctx</name><operator pos:start="991:30" pos:end="991:31">-&gt;</operator><name pos:start="991:32" pos:end="991:39">channels</name></name></expr>;</expr_stmt>

        <break pos:start="993:9" pos:end="993:14">break;</break>

    <case pos:start="995:5" pos:end="995:32">case <expr pos:start="995:10" pos:end="995:31"><name pos:start="995:10" pos:end="995:31">CODEC_ID_ADPCM_IMA_AMV</name></expr>:</case>

    <case pos:start="997:5" pos:end="997:35">case <expr pos:start="997:10" pos:end="997:34"><name pos:start="997:10" pos:end="997:34">CODEC_ID_ADPCM_IMA_SMJPEG</name></expr>:</case>

        <expr_stmt pos:start="999:9" pos:end="999:68"><expr pos:start="999:9" pos:end="999:67"><name pos:start="999:9" pos:end="999:20"><name pos:start="999:9" pos:end="999:9">c</name><operator pos:start="999:10" pos:end="999:11">-&gt;</operator><name pos:start="999:12" pos:end="999:17">status</name><index pos:start="999:18" pos:end="999:20">[<expr pos:start="999:19" pos:end="999:19"><literal type="number" pos:start="999:19" pos:end="999:19">0</literal></expr>]</index></name><operator pos:start="999:21" pos:end="999:21">.</operator><name pos:start="999:22" pos:end="999:30">predictor</name> <operator pos:start="999:32" pos:end="999:32">=</operator> <operator pos:start="999:34" pos:end="999:34">(</operator><name pos:start="999:35" pos:end="999:41">int16_t</name><operator pos:start="999:42" pos:end="999:42">)</operator><call pos:start="999:43" pos:end="999:67"><name pos:start="999:43" pos:end="999:61">bytestream_get_le16</name><argument_list pos:start="999:62" pos:end="999:67">(<argument pos:start="999:63" pos:end="999:66"><expr pos:start="999:63" pos:end="999:66"><operator pos:start="999:63" pos:end="999:63">&amp;</operator><name pos:start="999:64" pos:end="999:66">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1001:9" pos:end="1001:60"><expr pos:start="1001:9" pos:end="1001:59"><name pos:start="1001:9" pos:end="1001:20"><name pos:start="1001:9" pos:end="1001:9">c</name><operator pos:start="1001:10" pos:end="1001:11">-&gt;</operator><name pos:start="1001:12" pos:end="1001:17">status</name><index pos:start="1001:18" pos:end="1001:20">[<expr pos:start="1001:19" pos:end="1001:19"><literal type="number" pos:start="1001:19" pos:end="1001:19">0</literal></expr>]</index></name><operator pos:start="1001:21" pos:end="1001:21">.</operator><name pos:start="1001:22" pos:end="1001:31">step_index</name> <operator pos:start="1001:33" pos:end="1001:33">=</operator> <call pos:start="1001:35" pos:end="1001:59"><name pos:start="1001:35" pos:end="1001:53">bytestream_get_le16</name><argument_list pos:start="1001:54" pos:end="1001:59">(<argument pos:start="1001:55" pos:end="1001:58"><expr pos:start="1001:55" pos:end="1001:58"><operator pos:start="1001:55" pos:end="1001:55">&amp;</operator><name pos:start="1001:56" pos:end="1001:58">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="1005:9" pos:end="1007:19"><if pos:start="1005:9" pos:end="1007:19">if <condition pos:start="1005:12" pos:end="1005:55">(<expr pos:start="1005:13" pos:end="1005:54"><name pos:start="1005:13" pos:end="1005:28"><name pos:start="1005:13" pos:end="1005:17">avctx</name><operator pos:start="1005:18" pos:end="1005:19">-&gt;</operator><name pos:start="1005:20" pos:end="1005:24">codec</name><operator pos:start="1005:25" pos:end="1005:26">-&gt;</operator><name pos:start="1005:27" pos:end="1005:28">id</name></name> <operator pos:start="1005:30" pos:end="1005:31">==</operator> <name pos:start="1005:33" pos:end="1005:54">CODEC_ID_ADPCM_IMA_AMV</name></expr>)</condition><block type="pseudo" pos:start="1007:13" pos:end="1007:19"><block_content pos:start="1007:13" pos:end="1007:19">

            <expr_stmt pos:start="1007:13" pos:end="1007:19"><expr pos:start="1007:13" pos:end="1007:18"><name pos:start="1007:13" pos:end="1007:15">src</name><operator pos:start="1007:16" pos:end="1007:17">+=</operator><literal type="number" pos:start="1007:18" pos:end="1007:18">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <while pos:start="1011:9" pos:end="1037:9">while <condition pos:start="1011:15" pos:end="1011:36">(<expr pos:start="1011:16" pos:end="1011:35"><name pos:start="1011:16" pos:end="1011:18">src</name> <operator pos:start="1011:20" pos:end="1011:20">&lt;</operator> <name pos:start="1011:22" pos:end="1011:24">buf</name> <operator pos:start="1011:26" pos:end="1011:26">+</operator> <name pos:start="1011:28" pos:end="1011:35">buf_size</name></expr>)</condition> <block pos:start="1011:38" pos:end="1037:9">{<block_content pos:start="1013:13" pos:end="1035:18">

            <decl_stmt pos:start="1013:13" pos:end="1013:24"><decl pos:start="1013:13" pos:end="1013:19"><type pos:start="1013:13" pos:end="1013:16"><name pos:start="1013:13" pos:end="1013:16">char</name></type> <name pos:start="1013:18" pos:end="1013:19">hi</name></decl>, <decl pos:start="1013:22" pos:end="1013:23"><type ref="prev" pos:start="1013:13" pos:end="1013:16"/><name pos:start="1013:22" pos:end="1013:23">lo</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1015:13" pos:end="1015:29"><expr pos:start="1015:13" pos:end="1015:28"><name pos:start="1015:13" pos:end="1015:14">lo</name> <operator pos:start="1015:16" pos:end="1015:16">=</operator> <operator pos:start="1015:18" pos:end="1015:18">*</operator><name pos:start="1015:19" pos:end="1015:21">src</name> <operator pos:start="1015:23" pos:end="1015:23">&amp;</operator> <literal type="number" pos:start="1015:25" pos:end="1015:28">0x0F</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="1017:13" pos:end="1017:27"><expr pos:start="1017:13" pos:end="1017:26"><name pos:start="1017:13" pos:end="1017:14">hi</name> <operator pos:start="1017:16" pos:end="1017:16">=</operator> <operator pos:start="1017:18" pos:end="1017:18">*</operator><name pos:start="1017:19" pos:end="1017:21">src</name> <operator pos:start="1017:23" pos:end="1017:24">&gt;&gt;</operator> <literal type="number" pos:start="1017:26" pos:end="1017:26">4</literal></expr>;</expr_stmt>



            <if_stmt pos:start="1021:13" pos:end="1023:37"><if pos:start="1021:13" pos:end="1023:37">if <condition pos:start="1021:16" pos:end="1021:59">(<expr pos:start="1021:17" pos:end="1021:58"><name pos:start="1021:17" pos:end="1021:32"><name pos:start="1021:17" pos:end="1021:21">avctx</name><operator pos:start="1021:22" pos:end="1021:23">-&gt;</operator><name pos:start="1021:24" pos:end="1021:28">codec</name><operator pos:start="1021:29" pos:end="1021:30">-&gt;</operator><name pos:start="1021:31" pos:end="1021:32">id</name></name> <operator pos:start="1021:34" pos:end="1021:35">==</operator> <name pos:start="1021:37" pos:end="1021:58">CODEC_ID_ADPCM_IMA_AMV</name></expr>)</condition><block type="pseudo" pos:start="1023:17" pos:end="1023:37"><block_content pos:start="1023:17" pos:end="1023:37">

                <expr_stmt pos:start="1023:17" pos:end="1023:37"><expr pos:start="1023:17" pos:end="1023:36"><call pos:start="1023:17" pos:end="1023:36"><name pos:start="1023:17" pos:end="1023:22">FFSWAP</name><argument_list pos:start="1023:23" pos:end="1023:36">(<argument pos:start="1023:24" pos:end="1023:27"><expr pos:start="1023:24" pos:end="1023:27"><name pos:start="1023:24" pos:end="1023:27">char</name></expr></argument>, <argument pos:start="1023:30" pos:end="1023:31"><expr pos:start="1023:30" pos:end="1023:31"><name pos:start="1023:30" pos:end="1023:31">hi</name></expr></argument>, <argument pos:start="1023:34" pos:end="1023:35"><expr pos:start="1023:34" pos:end="1023:35"><name pos:start="1023:34" pos:end="1023:35">lo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="1027:13" pos:end="1029:23"><expr pos:start="1027:13" pos:end="1029:22"><operator pos:start="1027:13" pos:end="1027:13">*</operator><name pos:start="1027:14" pos:end="1027:20">samples</name><operator pos:start="1027:21" pos:end="1027:22">++</operator> <operator pos:start="1027:24" pos:end="1027:24">=</operator> <call pos:start="1027:26" pos:end="1029:22"><name pos:start="1027:26" pos:end="1027:48">adpcm_ima_expand_nibble</name><argument_list pos:start="1027:49" pos:end="1029:22">(<argument pos:start="1027:50" pos:end="1027:62"><expr pos:start="1027:50" pos:end="1027:62"><operator pos:start="1027:50" pos:end="1027:50">&amp;</operator><name pos:start="1027:51" pos:end="1027:62"><name pos:start="1027:51" pos:end="1027:51">c</name><operator pos:start="1027:52" pos:end="1027:53">-&gt;</operator><name pos:start="1027:54" pos:end="1027:59">status</name><index pos:start="1027:60" pos:end="1027:62">[<expr pos:start="1027:61" pos:end="1027:61"><literal type="number" pos:start="1027:61" pos:end="1027:61">0</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="1029:17" pos:end="1029:18"><expr pos:start="1029:17" pos:end="1029:18"><name pos:start="1029:17" pos:end="1029:18">lo</name></expr></argument>, <argument pos:start="1029:21" pos:end="1029:21"><expr pos:start="1029:21" pos:end="1029:21"><literal type="number" pos:start="1029:21" pos:end="1029:21">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1031:13" pos:end="1033:23"><expr pos:start="1031:13" pos:end="1033:22"><operator pos:start="1031:13" pos:end="1031:13">*</operator><name pos:start="1031:14" pos:end="1031:20">samples</name><operator pos:start="1031:21" pos:end="1031:22">++</operator> <operator pos:start="1031:24" pos:end="1031:24">=</operator> <call pos:start="1031:26" pos:end="1033:22"><name pos:start="1031:26" pos:end="1031:48">adpcm_ima_expand_nibble</name><argument_list pos:start="1031:49" pos:end="1033:22">(<argument pos:start="1031:50" pos:end="1031:62"><expr pos:start="1031:50" pos:end="1031:62"><operator pos:start="1031:50" pos:end="1031:50">&amp;</operator><name pos:start="1031:51" pos:end="1031:62"><name pos:start="1031:51" pos:end="1031:51">c</name><operator pos:start="1031:52" pos:end="1031:53">-&gt;</operator><name pos:start="1031:54" pos:end="1031:59">status</name><index pos:start="1031:60" pos:end="1031:62">[<expr pos:start="1031:61" pos:end="1031:61"><literal type="number" pos:start="1031:61" pos:end="1031:61">0</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="1033:17" pos:end="1033:18"><expr pos:start="1033:17" pos:end="1033:18"><name pos:start="1033:17" pos:end="1033:18">hi</name></expr></argument>, <argument pos:start="1033:21" pos:end="1033:21"><expr pos:start="1033:21" pos:end="1033:21"><literal type="number" pos:start="1033:21" pos:end="1033:21">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1035:13" pos:end="1035:18"><expr pos:start="1035:13" pos:end="1035:17"><name pos:start="1035:13" pos:end="1035:15">src</name><operator pos:start="1035:16" pos:end="1035:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <break pos:start="1039:9" pos:end="1039:14">break;</break>

    <case pos:start="1041:5" pos:end="1041:27">case <expr pos:start="1041:10" pos:end="1041:26"><name pos:start="1041:10" pos:end="1041:26">CODEC_ID_ADPCM_CT</name></expr>:</case>

        <while pos:start="1043:9" pos:end="1069:9">while <condition pos:start="1043:15" pos:end="1043:36">(<expr pos:start="1043:16" pos:end="1043:35"><name pos:start="1043:16" pos:end="1043:18">src</name> <operator pos:start="1043:20" pos:end="1043:20">&lt;</operator> <name pos:start="1043:22" pos:end="1043:24">buf</name> <operator pos:start="1043:26" pos:end="1043:26">+</operator> <name pos:start="1043:28" pos:end="1043:35">buf_size</name></expr>)</condition> <block pos:start="1043:38" pos:end="1069:9">{<block_content pos:start="1045:13" pos:end="1067:18">

            <if_stmt pos:start="1045:13" pos:end="1065:13"><if pos:start="1045:13" pos:end="1055:13">if <condition pos:start="1045:16" pos:end="1045:19">(<expr pos:start="1045:17" pos:end="1045:18"><name pos:start="1045:17" pos:end="1045:18">st</name></expr>)</condition> <block pos:start="1045:21" pos:end="1055:13">{<block_content pos:start="1047:17" pos:end="1053:35">

                <expr_stmt pos:start="1047:17" pos:end="1049:33"><expr pos:start="1047:17" pos:end="1049:32"><operator pos:start="1047:17" pos:end="1047:17">*</operator><name pos:start="1047:18" pos:end="1047:24">samples</name><operator pos:start="1047:25" pos:end="1047:26">++</operator> <operator pos:start="1047:28" pos:end="1047:28">=</operator> <call pos:start="1047:30" pos:end="1049:32"><name pos:start="1047:30" pos:end="1047:51">adpcm_ct_expand_nibble</name><argument_list pos:start="1047:52" pos:end="1049:32">(<argument pos:start="1047:53" pos:end="1047:65"><expr pos:start="1047:53" pos:end="1047:65"><operator pos:start="1047:53" pos:end="1047:53">&amp;</operator><name pos:start="1047:54" pos:end="1047:65"><name pos:start="1047:54" pos:end="1047:54">c</name><operator pos:start="1047:55" pos:end="1047:56">-&gt;</operator><name pos:start="1047:57" pos:end="1047:62">status</name><index pos:start="1047:63" pos:end="1047:65">[<expr pos:start="1047:64" pos:end="1047:64"><literal type="number" pos:start="1047:64" pos:end="1047:64">0</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="1049:21" pos:end="1049:31"><expr pos:start="1049:21" pos:end="1049:31"><name pos:start="1049:21" pos:end="1049:26"><name pos:start="1049:21" pos:end="1049:23">src</name><index pos:start="1049:24" pos:end="1049:26">[<expr pos:start="1049:25" pos:end="1049:25"><literal type="number" pos:start="1049:25" pos:end="1049:25">0</literal></expr>]</index></name> <operator pos:start="1049:28" pos:end="1049:29">&gt;&gt;</operator> <literal type="number" pos:start="1049:31" pos:end="1049:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1051:17" pos:end="1053:35"><expr pos:start="1051:17" pos:end="1053:34"><operator pos:start="1051:17" pos:end="1051:17">*</operator><name pos:start="1051:18" pos:end="1051:24">samples</name><operator pos:start="1051:25" pos:end="1051:26">++</operator> <operator pos:start="1051:28" pos:end="1051:28">=</operator> <call pos:start="1051:30" pos:end="1053:34"><name pos:start="1051:30" pos:end="1051:51">adpcm_ct_expand_nibble</name><argument_list pos:start="1051:52" pos:end="1053:34">(<argument pos:start="1051:53" pos:end="1051:65"><expr pos:start="1051:53" pos:end="1051:65"><operator pos:start="1051:53" pos:end="1051:53">&amp;</operator><name pos:start="1051:54" pos:end="1051:65"><name pos:start="1051:54" pos:end="1051:54">c</name><operator pos:start="1051:55" pos:end="1051:56">-&gt;</operator><name pos:start="1051:57" pos:end="1051:62">status</name><index pos:start="1051:63" pos:end="1051:65">[<expr pos:start="1051:64" pos:end="1051:64"><literal type="number" pos:start="1051:64" pos:end="1051:64">1</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="1053:21" pos:end="1053:33"><expr pos:start="1053:21" pos:end="1053:33"><name pos:start="1053:21" pos:end="1053:26"><name pos:start="1053:21" pos:end="1053:23">src</name><index pos:start="1053:24" pos:end="1053:26">[<expr pos:start="1053:25" pos:end="1053:25"><literal type="number" pos:start="1053:25" pos:end="1053:25">0</literal></expr>]</index></name> <operator pos:start="1053:28" pos:end="1053:28">&amp;</operator> <literal type="number" pos:start="1053:30" pos:end="1053:33">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1055:15" pos:end="1065:13">else <block pos:start="1055:20" pos:end="1065:13">{<block_content pos:start="1057:17" pos:end="1063:35">

                <expr_stmt pos:start="1057:17" pos:end="1059:33"><expr pos:start="1057:17" pos:end="1059:32"><operator pos:start="1057:17" pos:end="1057:17">*</operator><name pos:start="1057:18" pos:end="1057:24">samples</name><operator pos:start="1057:25" pos:end="1057:26">++</operator> <operator pos:start="1057:28" pos:end="1057:28">=</operator> <call pos:start="1057:30" pos:end="1059:32"><name pos:start="1057:30" pos:end="1057:51">adpcm_ct_expand_nibble</name><argument_list pos:start="1057:52" pos:end="1059:32">(<argument pos:start="1057:53" pos:end="1057:65"><expr pos:start="1057:53" pos:end="1057:65"><operator pos:start="1057:53" pos:end="1057:53">&amp;</operator><name pos:start="1057:54" pos:end="1057:65"><name pos:start="1057:54" pos:end="1057:54">c</name><operator pos:start="1057:55" pos:end="1057:56">-&gt;</operator><name pos:start="1057:57" pos:end="1057:62">status</name><index pos:start="1057:63" pos:end="1057:65">[<expr pos:start="1057:64" pos:end="1057:64"><literal type="number" pos:start="1057:64" pos:end="1057:64">0</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="1059:21" pos:end="1059:31"><expr pos:start="1059:21" pos:end="1059:31"><name pos:start="1059:21" pos:end="1059:26"><name pos:start="1059:21" pos:end="1059:23">src</name><index pos:start="1059:24" pos:end="1059:26">[<expr pos:start="1059:25" pos:end="1059:25"><literal type="number" pos:start="1059:25" pos:end="1059:25">0</literal></expr>]</index></name> <operator pos:start="1059:28" pos:end="1059:29">&gt;&gt;</operator> <literal type="number" pos:start="1059:31" pos:end="1059:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1061:17" pos:end="1063:35"><expr pos:start="1061:17" pos:end="1063:34"><operator pos:start="1061:17" pos:end="1061:17">*</operator><name pos:start="1061:18" pos:end="1061:24">samples</name><operator pos:start="1061:25" pos:end="1061:26">++</operator> <operator pos:start="1061:28" pos:end="1061:28">=</operator> <call pos:start="1061:30" pos:end="1063:34"><name pos:start="1061:30" pos:end="1061:51">adpcm_ct_expand_nibble</name><argument_list pos:start="1061:52" pos:end="1063:34">(<argument pos:start="1061:53" pos:end="1061:65"><expr pos:start="1061:53" pos:end="1061:65"><operator pos:start="1061:53" pos:end="1061:53">&amp;</operator><name pos:start="1061:54" pos:end="1061:65"><name pos:start="1061:54" pos:end="1061:54">c</name><operator pos:start="1061:55" pos:end="1061:56">-&gt;</operator><name pos:start="1061:57" pos:end="1061:62">status</name><index pos:start="1061:63" pos:end="1061:65">[<expr pos:start="1061:64" pos:end="1061:64"><literal type="number" pos:start="1061:64" pos:end="1061:64">0</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="1063:21" pos:end="1063:33"><expr pos:start="1063:21" pos:end="1063:33"><name pos:start="1063:21" pos:end="1063:26"><name pos:start="1063:21" pos:end="1063:23">src</name><index pos:start="1063:24" pos:end="1063:26">[<expr pos:start="1063:25" pos:end="1063:25"><literal type="number" pos:start="1063:25" pos:end="1063:25">0</literal></expr>]</index></name> <operator pos:start="1063:28" pos:end="1063:28">&amp;</operator> <literal type="number" pos:start="1063:30" pos:end="1063:33">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1067:13" pos:end="1067:18"><expr pos:start="1067:13" pos:end="1067:17"><name pos:start="1067:13" pos:end="1067:15">src</name><operator pos:start="1067:16" pos:end="1067:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <break pos:start="1071:9" pos:end="1071:14">break;</break>

    <case pos:start="1073:5" pos:end="1073:32">case <expr pos:start="1073:10" pos:end="1073:31"><name pos:start="1073:10" pos:end="1073:31">CODEC_ID_ADPCM_SBPRO_4</name></expr>:</case>

    <case pos:start="1075:5" pos:end="1075:32">case <expr pos:start="1075:10" pos:end="1075:31"><name pos:start="1075:10" pos:end="1075:31">CODEC_ID_ADPCM_SBPRO_3</name></expr>:</case>

    <case pos:start="1077:5" pos:end="1077:32">case <expr pos:start="1077:10" pos:end="1077:31"><name pos:start="1077:10" pos:end="1077:31">CODEC_ID_ADPCM_SBPRO_2</name></expr>:</case>

        <if_stmt pos:start="1079:9" pos:end="1091:9"><if pos:start="1079:9" pos:end="1091:9">if <condition pos:start="1079:12" pos:end="1079:37">(<expr pos:start="1079:13" pos:end="1079:36"><operator pos:start="1079:13" pos:end="1079:13">!</operator><name pos:start="1079:14" pos:end="1079:25"><name pos:start="1079:14" pos:end="1079:14">c</name><operator pos:start="1079:15" pos:end="1079:16">-&gt;</operator><name pos:start="1079:17" pos:end="1079:22">status</name><index pos:start="1079:23" pos:end="1079:25">[<expr pos:start="1079:24" pos:end="1079:24"><literal type="number" pos:start="1079:24" pos:end="1079:24">0</literal></expr>]</index></name><operator pos:start="1079:26" pos:end="1079:26">.</operator><name pos:start="1079:27" pos:end="1079:36">step_index</name></expr>)</condition> <block pos:start="1079:39" pos:end="1091:9">{<block_content pos:start="1083:13" pos:end="1089:40">

            <comment type="block" pos:start="1081:13" pos:end="1081:48">/* the first byte is a raw sample */</comment>

            <expr_stmt pos:start="1083:13" pos:end="1083:47"><expr pos:start="1083:13" pos:end="1083:46"><operator pos:start="1083:13" pos:end="1083:13">*</operator><name pos:start="1083:14" pos:end="1083:20">samples</name><operator pos:start="1083:21" pos:end="1083:22">++</operator> <operator pos:start="1083:24" pos:end="1083:24">=</operator> <literal type="number" pos:start="1083:26" pos:end="1083:28">128</literal> <operator pos:start="1083:30" pos:end="1083:30">*</operator> <operator pos:start="1083:32" pos:end="1083:32">(</operator><operator pos:start="1083:33" pos:end="1083:33">*</operator><name pos:start="1083:34" pos:end="1083:36">src</name><operator pos:start="1083:37" pos:end="1083:38">++</operator> <operator pos:start="1083:40" pos:end="1083:40">-</operator> <literal type="number" pos:start="1083:42" pos:end="1083:45">0x80</literal><operator pos:start="1083:46" pos:end="1083:46">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="1085:13" pos:end="1087:49"><if pos:start="1085:13" pos:end="1087:49">if <condition pos:start="1085:16" pos:end="1085:19">(<expr pos:start="1085:17" pos:end="1085:18"><name pos:start="1085:17" pos:end="1085:18">st</name></expr>)</condition><block type="pseudo" pos:start="1087:15" pos:end="1087:49"><block_content pos:start="1087:15" pos:end="1087:49">

              <expr_stmt pos:start="1087:15" pos:end="1087:49"><expr pos:start="1087:15" pos:end="1087:48"><operator pos:start="1087:15" pos:end="1087:15">*</operator><name pos:start="1087:16" pos:end="1087:22">samples</name><operator pos:start="1087:23" pos:end="1087:24">++</operator> <operator pos:start="1087:26" pos:end="1087:26">=</operator> <literal type="number" pos:start="1087:28" pos:end="1087:30">128</literal> <operator pos:start="1087:32" pos:end="1087:32">*</operator> <operator pos:start="1087:34" pos:end="1087:34">(</operator><operator pos:start="1087:35" pos:end="1087:35">*</operator><name pos:start="1087:36" pos:end="1087:38">src</name><operator pos:start="1087:39" pos:end="1087:40">++</operator> <operator pos:start="1087:42" pos:end="1087:42">-</operator> <literal type="number" pos:start="1087:44" pos:end="1087:47">0x80</literal><operator pos:start="1087:48" pos:end="1087:48">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1089:13" pos:end="1089:40"><expr pos:start="1089:13" pos:end="1089:39"><name pos:start="1089:13" pos:end="1089:24"><name pos:start="1089:13" pos:end="1089:13">c</name><operator pos:start="1089:14" pos:end="1089:15">-&gt;</operator><name pos:start="1089:16" pos:end="1089:21">status</name><index pos:start="1089:22" pos:end="1089:24">[<expr pos:start="1089:23" pos:end="1089:23"><literal type="number" pos:start="1089:23" pos:end="1089:23">0</literal></expr>]</index></name><operator pos:start="1089:25" pos:end="1089:25">.</operator><name pos:start="1089:26" pos:end="1089:35">step_index</name> <operator pos:start="1089:37" pos:end="1089:37">=</operator> <literal type="number" pos:start="1089:39" pos:end="1089:39">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="1093:9" pos:end="1153:9"><if pos:start="1093:9" pos:end="1109:9">if <condition pos:start="1093:12" pos:end="1093:55">(<expr pos:start="1093:13" pos:end="1093:54"><name pos:start="1093:13" pos:end="1093:28"><name pos:start="1093:13" pos:end="1093:17">avctx</name><operator pos:start="1093:18" pos:end="1093:19">-&gt;</operator><name pos:start="1093:20" pos:end="1093:24">codec</name><operator pos:start="1093:25" pos:end="1093:26">-&gt;</operator><name pos:start="1093:27" pos:end="1093:28">id</name></name> <operator pos:start="1093:30" pos:end="1093:31">==</operator> <name pos:start="1093:33" pos:end="1093:54">CODEC_ID_ADPCM_SBPRO_4</name></expr>)</condition> <block pos:start="1093:57" pos:end="1109:9">{<block_content pos:start="1095:13" pos:end="1107:13">

            <while pos:start="1095:13" pos:end="1107:13">while <condition pos:start="1095:19" pos:end="1095:40">(<expr pos:start="1095:20" pos:end="1095:39"><name pos:start="1095:20" pos:end="1095:22">src</name> <operator pos:start="1095:24" pos:end="1095:24">&lt;</operator> <name pos:start="1095:26" pos:end="1095:28">buf</name> <operator pos:start="1095:30" pos:end="1095:30">+</operator> <name pos:start="1095:32" pos:end="1095:39">buf_size</name></expr>)</condition> <block pos:start="1095:42" pos:end="1107:13">{<block_content pos:start="1097:17" pos:end="1105:22">

                <expr_stmt pos:start="1097:17" pos:end="1099:39"><expr pos:start="1097:17" pos:end="1099:38"><operator pos:start="1097:17" pos:end="1097:17">*</operator><name pos:start="1097:18" pos:end="1097:24">samples</name><operator pos:start="1097:25" pos:end="1097:26">++</operator> <operator pos:start="1097:28" pos:end="1097:28">=</operator> <call pos:start="1097:30" pos:end="1099:38"><name pos:start="1097:30" pos:end="1097:54">adpcm_sbpro_expand_nibble</name><argument_list pos:start="1097:55" pos:end="1099:38">(<argument pos:start="1097:56" pos:end="1097:68"><expr pos:start="1097:56" pos:end="1097:68"><operator pos:start="1097:56" pos:end="1097:56">&amp;</operator><name pos:start="1097:57" pos:end="1097:68"><name pos:start="1097:57" pos:end="1097:57">c</name><operator pos:start="1097:58" pos:end="1097:59">-&gt;</operator><name pos:start="1097:60" pos:end="1097:65">status</name><index pos:start="1097:66" pos:end="1097:68">[<expr pos:start="1097:67" pos:end="1097:67"><literal type="number" pos:start="1097:67" pos:end="1097:67">0</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="1099:21" pos:end="1099:31"><expr pos:start="1099:21" pos:end="1099:31"><name pos:start="1099:21" pos:end="1099:26"><name pos:start="1099:21" pos:end="1099:23">src</name><index pos:start="1099:24" pos:end="1099:26">[<expr pos:start="1099:25" pos:end="1099:25"><literal type="number" pos:start="1099:25" pos:end="1099:25">0</literal></expr>]</index></name> <operator pos:start="1099:28" pos:end="1099:29">&gt;&gt;</operator> <literal type="number" pos:start="1099:31" pos:end="1099:31">4</literal></expr></argument>, <argument pos:start="1099:34" pos:end="1099:34"><expr pos:start="1099:34" pos:end="1099:34"><literal type="number" pos:start="1099:34" pos:end="1099:34">4</literal></expr></argument>, <argument pos:start="1099:37" pos:end="1099:37"><expr pos:start="1099:37" pos:end="1099:37"><literal type="number" pos:start="1099:37" pos:end="1099:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1101:17" pos:end="1103:41"><expr pos:start="1101:17" pos:end="1103:40"><operator pos:start="1101:17" pos:end="1101:17">*</operator><name pos:start="1101:18" pos:end="1101:24">samples</name><operator pos:start="1101:25" pos:end="1101:26">++</operator> <operator pos:start="1101:28" pos:end="1101:28">=</operator> <call pos:start="1101:30" pos:end="1103:40"><name pos:start="1101:30" pos:end="1101:54">adpcm_sbpro_expand_nibble</name><argument_list pos:start="1101:55" pos:end="1103:40">(<argument pos:start="1101:56" pos:end="1101:69"><expr pos:start="1101:56" pos:end="1101:69"><operator pos:start="1101:56" pos:end="1101:56">&amp;</operator><name pos:start="1101:57" pos:end="1101:69"><name pos:start="1101:57" pos:end="1101:57">c</name><operator pos:start="1101:58" pos:end="1101:59">-&gt;</operator><name pos:start="1101:60" pos:end="1101:65">status</name><index pos:start="1101:66" pos:end="1101:69">[<expr pos:start="1101:67" pos:end="1101:68"><name pos:start="1101:67" pos:end="1101:68">st</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="1103:21" pos:end="1103:33"><expr pos:start="1103:21" pos:end="1103:33"><name pos:start="1103:21" pos:end="1103:26"><name pos:start="1103:21" pos:end="1103:23">src</name><index pos:start="1103:24" pos:end="1103:26">[<expr pos:start="1103:25" pos:end="1103:25"><literal type="number" pos:start="1103:25" pos:end="1103:25">0</literal></expr>]</index></name> <operator pos:start="1103:28" pos:end="1103:28">&amp;</operator> <literal type="number" pos:start="1103:30" pos:end="1103:33">0x0F</literal></expr></argument>, <argument pos:start="1103:36" pos:end="1103:36"><expr pos:start="1103:36" pos:end="1103:36"><literal type="number" pos:start="1103:36" pos:end="1103:36">4</literal></expr></argument>, <argument pos:start="1103:39" pos:end="1103:39"><expr pos:start="1103:39" pos:end="1103:39"><literal type="number" pos:start="1103:39" pos:end="1103:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1105:17" pos:end="1105:22"><expr pos:start="1105:17" pos:end="1105:21"><name pos:start="1105:17" pos:end="1105:19">src</name><operator pos:start="1105:20" pos:end="1105:21">++</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></if> <if type="elseif" pos:start="1109:11" pos:end="1129:9">else if <condition pos:start="1109:19" pos:end="1109:62">(<expr pos:start="1109:20" pos:end="1109:61"><name pos:start="1109:20" pos:end="1109:35"><name pos:start="1109:20" pos:end="1109:24">avctx</name><operator pos:start="1109:25" pos:end="1109:26">-&gt;</operator><name pos:start="1109:27" pos:end="1109:31">codec</name><operator pos:start="1109:32" pos:end="1109:33">-&gt;</operator><name pos:start="1109:34" pos:end="1109:35">id</name></name> <operator pos:start="1109:37" pos:end="1109:38">==</operator> <name pos:start="1109:40" pos:end="1109:61">CODEC_ID_ADPCM_SBPRO_3</name></expr>)</condition> <block pos:start="1109:64" pos:end="1129:9">{<block_content pos:start="1111:13" pos:end="1127:13">

            <while pos:start="1111:13" pos:end="1127:13">while <condition pos:start="1111:19" pos:end="1111:69">(<expr pos:start="1111:20" pos:end="1111:68"><name pos:start="1111:20" pos:end="1111:22">src</name> <operator pos:start="1111:24" pos:end="1111:24">&lt;</operator> <name pos:start="1111:26" pos:end="1111:28">buf</name> <operator pos:start="1111:30" pos:end="1111:30">+</operator> <name pos:start="1111:32" pos:end="1111:39">buf_size</name> <operator pos:start="1111:41" pos:end="1111:42">&amp;&amp;</operator> <name pos:start="1111:44" pos:end="1111:50">samples</name> <operator pos:start="1111:52" pos:end="1111:52">+</operator> <literal type="number" pos:start="1111:54" pos:end="1111:54">2</literal> <operator pos:start="1111:56" pos:end="1111:56">&lt;</operator> <name pos:start="1111:58" pos:end="1111:68">samples_end</name></expr>)</condition> <block pos:start="1111:71" pos:end="1127:13">{<block_content pos:start="1113:17" pos:end="1125:22">

                <expr_stmt pos:start="1113:17" pos:end="1115:48"><expr pos:start="1113:17" pos:end="1115:47"><operator pos:start="1113:17" pos:end="1113:17">*</operator><name pos:start="1113:18" pos:end="1113:24">samples</name><operator pos:start="1113:25" pos:end="1113:26">++</operator> <operator pos:start="1113:28" pos:end="1113:28">=</operator> <call pos:start="1113:30" pos:end="1115:47"><name pos:start="1113:30" pos:end="1113:54">adpcm_sbpro_expand_nibble</name><argument_list pos:start="1113:55" pos:end="1115:47">(<argument pos:start="1113:56" pos:end="1113:68"><expr pos:start="1113:56" pos:end="1113:68"><operator pos:start="1113:56" pos:end="1113:56">&amp;</operator><name pos:start="1113:57" pos:end="1113:68"><name pos:start="1113:57" pos:end="1113:57">c</name><operator pos:start="1113:58" pos:end="1113:59">-&gt;</operator><name pos:start="1113:60" pos:end="1113:65">status</name><index pos:start="1113:66" pos:end="1113:68">[<expr pos:start="1113:67" pos:end="1113:67"><literal type="number" pos:start="1113:67" pos:end="1113:67">0</literal></expr>]</index></name></expr></argument>,

                     <argument pos:start="1115:22" pos:end="1115:32"><expr pos:start="1115:22" pos:end="1115:32"><name pos:start="1115:22" pos:end="1115:27"><name pos:start="1115:22" pos:end="1115:24">src</name><index pos:start="1115:25" pos:end="1115:27">[<expr pos:start="1115:26" pos:end="1115:26"><literal type="number" pos:start="1115:26" pos:end="1115:26">0</literal></expr>]</index></name> <operator pos:start="1115:29" pos:end="1115:30">&gt;&gt;</operator> <literal type="number" pos:start="1115:32" pos:end="1115:32">5</literal></expr></argument>        , <argument pos:start="1115:43" pos:end="1115:43"><expr pos:start="1115:43" pos:end="1115:43"><literal type="number" pos:start="1115:43" pos:end="1115:43">3</literal></expr></argument>, <argument pos:start="1115:46" pos:end="1115:46"><expr pos:start="1115:46" pos:end="1115:46"><literal type="number" pos:start="1115:46" pos:end="1115:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1117:17" pos:end="1119:48"><expr pos:start="1117:17" pos:end="1119:47"><operator pos:start="1117:17" pos:end="1117:17">*</operator><name pos:start="1117:18" pos:end="1117:24">samples</name><operator pos:start="1117:25" pos:end="1117:26">++</operator> <operator pos:start="1117:28" pos:end="1117:28">=</operator> <call pos:start="1117:30" pos:end="1119:47"><name pos:start="1117:30" pos:end="1117:54">adpcm_sbpro_expand_nibble</name><argument_list pos:start="1117:55" pos:end="1119:47">(<argument pos:start="1117:56" pos:end="1117:68"><expr pos:start="1117:56" pos:end="1117:68"><operator pos:start="1117:56" pos:end="1117:56">&amp;</operator><name pos:start="1117:57" pos:end="1117:68"><name pos:start="1117:57" pos:end="1117:57">c</name><operator pos:start="1117:58" pos:end="1117:59">-&gt;</operator><name pos:start="1117:60" pos:end="1117:65">status</name><index pos:start="1117:66" pos:end="1117:68">[<expr pos:start="1117:67" pos:end="1117:67"><literal type="number" pos:start="1117:67" pos:end="1117:67">0</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="1119:21" pos:end="1119:40"><expr pos:start="1119:21" pos:end="1119:40"><operator pos:start="1119:21" pos:end="1119:21">(</operator><name pos:start="1119:22" pos:end="1119:27"><name pos:start="1119:22" pos:end="1119:24">src</name><index pos:start="1119:25" pos:end="1119:27">[<expr pos:start="1119:26" pos:end="1119:26"><literal type="number" pos:start="1119:26" pos:end="1119:26">0</literal></expr>]</index></name> <operator pos:start="1119:29" pos:end="1119:30">&gt;&gt;</operator> <literal type="number" pos:start="1119:32" pos:end="1119:32">2</literal><operator pos:start="1119:33" pos:end="1119:33">)</operator> <operator pos:start="1119:35" pos:end="1119:35">&amp;</operator> <literal type="number" pos:start="1119:37" pos:end="1119:40">0x07</literal></expr></argument>, <argument pos:start="1119:43" pos:end="1119:43"><expr pos:start="1119:43" pos:end="1119:43"><literal type="number" pos:start="1119:43" pos:end="1119:43">3</literal></expr></argument>, <argument pos:start="1119:46" pos:end="1119:46"><expr pos:start="1119:46" pos:end="1119:46"><literal type="number" pos:start="1119:46" pos:end="1119:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1121:17" pos:end="1123:41"><expr pos:start="1121:17" pos:end="1123:40"><operator pos:start="1121:17" pos:end="1121:17">*</operator><name pos:start="1121:18" pos:end="1121:24">samples</name><operator pos:start="1121:25" pos:end="1121:26">++</operator> <operator pos:start="1121:28" pos:end="1121:28">=</operator> <call pos:start="1121:30" pos:end="1123:40"><name pos:start="1121:30" pos:end="1121:54">adpcm_sbpro_expand_nibble</name><argument_list pos:start="1121:55" pos:end="1123:40">(<argument pos:start="1121:56" pos:end="1121:68"><expr pos:start="1121:56" pos:end="1121:68"><operator pos:start="1121:56" pos:end="1121:56">&amp;</operator><name pos:start="1121:57" pos:end="1121:68"><name pos:start="1121:57" pos:end="1121:57">c</name><operator pos:start="1121:58" pos:end="1121:59">-&gt;</operator><name pos:start="1121:60" pos:end="1121:65">status</name><index pos:start="1121:66" pos:end="1121:68">[<expr pos:start="1121:67" pos:end="1121:67"><literal type="number" pos:start="1121:67" pos:end="1121:67">0</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="1123:21" pos:end="1123:33"><expr pos:start="1123:21" pos:end="1123:33"><name pos:start="1123:21" pos:end="1123:26"><name pos:start="1123:21" pos:end="1123:23">src</name><index pos:start="1123:24" pos:end="1123:26">[<expr pos:start="1123:25" pos:end="1123:25"><literal type="number" pos:start="1123:25" pos:end="1123:25">0</literal></expr>]</index></name> <operator pos:start="1123:28" pos:end="1123:28">&amp;</operator> <literal type="number" pos:start="1123:30" pos:end="1123:33">0x03</literal></expr></argument>, <argument pos:start="1123:36" pos:end="1123:36"><expr pos:start="1123:36" pos:end="1123:36"><literal type="number" pos:start="1123:36" pos:end="1123:36">2</literal></expr></argument>, <argument pos:start="1123:39" pos:end="1123:39"><expr pos:start="1123:39" pos:end="1123:39"><literal type="number" pos:start="1123:39" pos:end="1123:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1125:17" pos:end="1125:22"><expr pos:start="1125:17" pos:end="1125:21"><name pos:start="1125:17" pos:end="1125:19">src</name><operator pos:start="1125:20" pos:end="1125:21">++</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></if> <else pos:start="1129:11" pos:end="1153:9">else <block pos:start="1129:16" pos:end="1153:9">{<block_content pos:start="1131:13" pos:end="1151:13">

            <while pos:start="1131:13" pos:end="1151:13">while <condition pos:start="1131:19" pos:end="1131:69">(<expr pos:start="1131:20" pos:end="1131:68"><name pos:start="1131:20" pos:end="1131:22">src</name> <operator pos:start="1131:24" pos:end="1131:24">&lt;</operator> <name pos:start="1131:26" pos:end="1131:28">buf</name> <operator pos:start="1131:30" pos:end="1131:30">+</operator> <name pos:start="1131:32" pos:end="1131:39">buf_size</name> <operator pos:start="1131:41" pos:end="1131:42">&amp;&amp;</operator> <name pos:start="1131:44" pos:end="1131:50">samples</name> <operator pos:start="1131:52" pos:end="1131:52">+</operator> <literal type="number" pos:start="1131:54" pos:end="1131:54">3</literal> <operator pos:start="1131:56" pos:end="1131:56">&lt;</operator> <name pos:start="1131:58" pos:end="1131:68">samples_end</name></expr>)</condition> <block pos:start="1131:71" pos:end="1151:13">{<block_content pos:start="1133:17" pos:end="1149:22">

                <expr_stmt pos:start="1133:17" pos:end="1135:48"><expr pos:start="1133:17" pos:end="1135:47"><operator pos:start="1133:17" pos:end="1133:17">*</operator><name pos:start="1133:18" pos:end="1133:24">samples</name><operator pos:start="1133:25" pos:end="1133:26">++</operator> <operator pos:start="1133:28" pos:end="1133:28">=</operator> <call pos:start="1133:30" pos:end="1135:47"><name pos:start="1133:30" pos:end="1133:54">adpcm_sbpro_expand_nibble</name><argument_list pos:start="1133:55" pos:end="1135:47">(<argument pos:start="1133:56" pos:end="1133:68"><expr pos:start="1133:56" pos:end="1133:68"><operator pos:start="1133:56" pos:end="1133:56">&amp;</operator><name pos:start="1133:57" pos:end="1133:68"><name pos:start="1133:57" pos:end="1133:57">c</name><operator pos:start="1133:58" pos:end="1133:59">-&gt;</operator><name pos:start="1133:60" pos:end="1133:65">status</name><index pos:start="1133:66" pos:end="1133:68">[<expr pos:start="1133:67" pos:end="1133:67"><literal type="number" pos:start="1133:67" pos:end="1133:67">0</literal></expr>]</index></name></expr></argument>,

                     <argument pos:start="1135:22" pos:end="1135:32"><expr pos:start="1135:22" pos:end="1135:32"><name pos:start="1135:22" pos:end="1135:27"><name pos:start="1135:22" pos:end="1135:24">src</name><index pos:start="1135:25" pos:end="1135:27">[<expr pos:start="1135:26" pos:end="1135:26"><literal type="number" pos:start="1135:26" pos:end="1135:26">0</literal></expr>]</index></name> <operator pos:start="1135:29" pos:end="1135:30">&gt;&gt;</operator> <literal type="number" pos:start="1135:32" pos:end="1135:32">6</literal></expr></argument>        , <argument pos:start="1135:43" pos:end="1135:43"><expr pos:start="1135:43" pos:end="1135:43"><literal type="number" pos:start="1135:43" pos:end="1135:43">2</literal></expr></argument>, <argument pos:start="1135:46" pos:end="1135:46"><expr pos:start="1135:46" pos:end="1135:46"><literal type="number" pos:start="1135:46" pos:end="1135:46">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1137:17" pos:end="1139:48"><expr pos:start="1137:17" pos:end="1139:47"><operator pos:start="1137:17" pos:end="1137:17">*</operator><name pos:start="1137:18" pos:end="1137:24">samples</name><operator pos:start="1137:25" pos:end="1137:26">++</operator> <operator pos:start="1137:28" pos:end="1137:28">=</operator> <call pos:start="1137:30" pos:end="1139:47"><name pos:start="1137:30" pos:end="1137:54">adpcm_sbpro_expand_nibble</name><argument_list pos:start="1137:55" pos:end="1139:47">(<argument pos:start="1137:56" pos:end="1137:69"><expr pos:start="1137:56" pos:end="1137:69"><operator pos:start="1137:56" pos:end="1137:56">&amp;</operator><name pos:start="1137:57" pos:end="1137:69"><name pos:start="1137:57" pos:end="1137:57">c</name><operator pos:start="1137:58" pos:end="1137:59">-&gt;</operator><name pos:start="1137:60" pos:end="1137:65">status</name><index pos:start="1137:66" pos:end="1137:69">[<expr pos:start="1137:67" pos:end="1137:68"><name pos:start="1137:67" pos:end="1137:68">st</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="1139:21" pos:end="1139:40"><expr pos:start="1139:21" pos:end="1139:40"><operator pos:start="1139:21" pos:end="1139:21">(</operator><name pos:start="1139:22" pos:end="1139:27"><name pos:start="1139:22" pos:end="1139:24">src</name><index pos:start="1139:25" pos:end="1139:27">[<expr pos:start="1139:26" pos:end="1139:26"><literal type="number" pos:start="1139:26" pos:end="1139:26">0</literal></expr>]</index></name> <operator pos:start="1139:29" pos:end="1139:30">&gt;&gt;</operator> <literal type="number" pos:start="1139:32" pos:end="1139:32">4</literal><operator pos:start="1139:33" pos:end="1139:33">)</operator> <operator pos:start="1139:35" pos:end="1139:35">&amp;</operator> <literal type="number" pos:start="1139:37" pos:end="1139:40">0x03</literal></expr></argument>, <argument pos:start="1139:43" pos:end="1139:43"><expr pos:start="1139:43" pos:end="1139:43"><literal type="number" pos:start="1139:43" pos:end="1139:43">2</literal></expr></argument>, <argument pos:start="1139:46" pos:end="1139:46"><expr pos:start="1139:46" pos:end="1139:46"><literal type="number" pos:start="1139:46" pos:end="1139:46">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1141:17" pos:end="1143:48"><expr pos:start="1141:17" pos:end="1143:47"><operator pos:start="1141:17" pos:end="1141:17">*</operator><name pos:start="1141:18" pos:end="1141:24">samples</name><operator pos:start="1141:25" pos:end="1141:26">++</operator> <operator pos:start="1141:28" pos:end="1141:28">=</operator> <call pos:start="1141:30" pos:end="1143:47"><name pos:start="1141:30" pos:end="1141:54">adpcm_sbpro_expand_nibble</name><argument_list pos:start="1141:55" pos:end="1143:47">(<argument pos:start="1141:56" pos:end="1141:68"><expr pos:start="1141:56" pos:end="1141:68"><operator pos:start="1141:56" pos:end="1141:56">&amp;</operator><name pos:start="1141:57" pos:end="1141:68"><name pos:start="1141:57" pos:end="1141:57">c</name><operator pos:start="1141:58" pos:end="1141:59">-&gt;</operator><name pos:start="1141:60" pos:end="1141:65">status</name><index pos:start="1141:66" pos:end="1141:68">[<expr pos:start="1141:67" pos:end="1141:67"><literal type="number" pos:start="1141:67" pos:end="1141:67">0</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="1143:21" pos:end="1143:40"><expr pos:start="1143:21" pos:end="1143:40"><operator pos:start="1143:21" pos:end="1143:21">(</operator><name pos:start="1143:22" pos:end="1143:27"><name pos:start="1143:22" pos:end="1143:24">src</name><index pos:start="1143:25" pos:end="1143:27">[<expr pos:start="1143:26" pos:end="1143:26"><literal type="number" pos:start="1143:26" pos:end="1143:26">0</literal></expr>]</index></name> <operator pos:start="1143:29" pos:end="1143:30">&gt;&gt;</operator> <literal type="number" pos:start="1143:32" pos:end="1143:32">2</literal><operator pos:start="1143:33" pos:end="1143:33">)</operator> <operator pos:start="1143:35" pos:end="1143:35">&amp;</operator> <literal type="number" pos:start="1143:37" pos:end="1143:40">0x03</literal></expr></argument>, <argument pos:start="1143:43" pos:end="1143:43"><expr pos:start="1143:43" pos:end="1143:43"><literal type="number" pos:start="1143:43" pos:end="1143:43">2</literal></expr></argument>, <argument pos:start="1143:46" pos:end="1143:46"><expr pos:start="1143:46" pos:end="1143:46"><literal type="number" pos:start="1143:46" pos:end="1143:46">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1145:17" pos:end="1147:41"><expr pos:start="1145:17" pos:end="1147:40"><operator pos:start="1145:17" pos:end="1145:17">*</operator><name pos:start="1145:18" pos:end="1145:24">samples</name><operator pos:start="1145:25" pos:end="1145:26">++</operator> <operator pos:start="1145:28" pos:end="1145:28">=</operator> <call pos:start="1145:30" pos:end="1147:40"><name pos:start="1145:30" pos:end="1145:54">adpcm_sbpro_expand_nibble</name><argument_list pos:start="1145:55" pos:end="1147:40">(<argument pos:start="1145:56" pos:end="1145:69"><expr pos:start="1145:56" pos:end="1145:69"><operator pos:start="1145:56" pos:end="1145:56">&amp;</operator><name pos:start="1145:57" pos:end="1145:69"><name pos:start="1145:57" pos:end="1145:57">c</name><operator pos:start="1145:58" pos:end="1145:59">-&gt;</operator><name pos:start="1145:60" pos:end="1145:65">status</name><index pos:start="1145:66" pos:end="1145:69">[<expr pos:start="1145:67" pos:end="1145:68"><name pos:start="1145:67" pos:end="1145:68">st</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="1147:21" pos:end="1147:33"><expr pos:start="1147:21" pos:end="1147:33"><name pos:start="1147:21" pos:end="1147:26"><name pos:start="1147:21" pos:end="1147:23">src</name><index pos:start="1147:24" pos:end="1147:26">[<expr pos:start="1147:25" pos:end="1147:25"><literal type="number" pos:start="1147:25" pos:end="1147:25">0</literal></expr>]</index></name> <operator pos:start="1147:28" pos:end="1147:28">&amp;</operator> <literal type="number" pos:start="1147:30" pos:end="1147:33">0x03</literal></expr></argument>, <argument pos:start="1147:36" pos:end="1147:36"><expr pos:start="1147:36" pos:end="1147:36"><literal type="number" pos:start="1147:36" pos:end="1147:36">2</literal></expr></argument>, <argument pos:start="1147:39" pos:end="1147:39"><expr pos:start="1147:39" pos:end="1147:39"><literal type="number" pos:start="1147:39" pos:end="1147:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1149:17" pos:end="1149:22"><expr pos:start="1149:17" pos:end="1149:21"><name pos:start="1149:17" pos:end="1149:19">src</name><operator pos:start="1149:20" pos:end="1149:21">++</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></else></if_stmt>

        <break pos:start="1155:9" pos:end="1155:14">break;</break>

    <case pos:start="1157:5" pos:end="1157:28">case <expr pos:start="1157:10" pos:end="1157:27"><name pos:start="1157:10" pos:end="1157:27">CODEC_ID_ADPCM_SWF</name></expr>:</case>

    <block pos:start="1159:5" pos:end="1277:5">{<block_content pos:start="1161:9" pos:end="1275:14">

        <decl_stmt pos:start="1161:9" pos:end="1161:25"><decl pos:start="1161:9" pos:end="1161:24"><type pos:start="1161:9" pos:end="1161:21"><name pos:start="1161:9" pos:end="1161:21">GetBitContext</name></type> <name pos:start="1161:23" pos:end="1161:24">gb</name></decl>;</decl_stmt>

        <decl_stmt pos:start="1163:9" pos:end="1163:25"><decl pos:start="1163:9" pos:end="1163:24"><type pos:start="1163:9" pos:end="1163:19"><specifier pos:start="1163:9" pos:end="1163:13">const</specifier> <name pos:start="1163:15" pos:end="1163:17">int</name> <modifier pos:start="1163:19" pos:end="1163:19">*</modifier></type><name pos:start="1163:20" pos:end="1163:24">table</name></decl>;</decl_stmt>

        <decl_stmt pos:start="1165:9" pos:end="1165:41"><decl pos:start="1165:9" pos:end="1165:14"><type pos:start="1165:9" pos:end="1165:11"><name pos:start="1165:9" pos:end="1165:11">int</name></type> <name pos:start="1165:13" pos:end="1165:14">k0</name></decl>, <decl pos:start="1165:17" pos:end="1165:24"><type ref="prev" pos:start="1165:9" pos:end="1165:11"/><name pos:start="1165:17" pos:end="1165:24">signmask</name></decl>, <decl pos:start="1165:27" pos:end="1165:33"><type ref="prev" pos:start="1165:9" pos:end="1165:11"/><name pos:start="1165:27" pos:end="1165:33">nb_bits</name></decl>, <decl pos:start="1165:36" pos:end="1165:40"><type ref="prev" pos:start="1165:9" pos:end="1165:11"/><name pos:start="1165:36" pos:end="1165:40">count</name></decl>;</decl_stmt>

        <decl_stmt pos:start="1167:9" pos:end="1167:30"><decl pos:start="1167:9" pos:end="1167:29"><type pos:start="1167:9" pos:end="1167:11"><name pos:start="1167:9" pos:end="1167:11">int</name></type> <name pos:start="1167:13" pos:end="1167:16">size</name> <init pos:start="1167:18" pos:end="1167:29">= <expr pos:start="1167:20" pos:end="1167:29"><name pos:start="1167:20" pos:end="1167:27">buf_size</name><operator pos:start="1167:28" pos:end="1167:28">*</operator><literal type="number" pos:start="1167:29" pos:end="1167:29">8</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="1171:9" pos:end="1171:38"><expr pos:start="1171:9" pos:end="1171:37"><call pos:start="1171:9" pos:end="1171:37"><name pos:start="1171:9" pos:end="1171:21">init_get_bits</name><argument_list pos:start="1171:22" pos:end="1171:37">(<argument pos:start="1171:23" pos:end="1171:25"><expr pos:start="1171:23" pos:end="1171:25"><operator pos:start="1171:23" pos:end="1171:23">&amp;</operator><name pos:start="1171:24" pos:end="1171:25">gb</name></expr></argument>, <argument pos:start="1171:28" pos:end="1171:30"><expr pos:start="1171:28" pos:end="1171:30"><name pos:start="1171:28" pos:end="1171:30">buf</name></expr></argument>, <argument pos:start="1171:33" pos:end="1171:36"><expr pos:start="1171:33" pos:end="1171:36"><name pos:start="1171:33" pos:end="1171:36">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="line" pos:start="1175:9" pos:end="1175:36">//read bits &amp; initial values</comment>

        <expr_stmt pos:start="1177:9" pos:end="1177:37"><expr pos:start="1177:9" pos:end="1177:36"><name pos:start="1177:9" pos:end="1177:15">nb_bits</name> <operator pos:start="1177:17" pos:end="1177:17">=</operator> <call pos:start="1177:19" pos:end="1177:34"><name pos:start="1177:19" pos:end="1177:26">get_bits</name><argument_list pos:start="1177:27" pos:end="1177:34">(<argument pos:start="1177:28" pos:end="1177:30"><expr pos:start="1177:28" pos:end="1177:30"><operator pos:start="1177:28" pos:end="1177:28">&amp;</operator><name pos:start="1177:29" pos:end="1177:30">gb</name></expr></argument>, <argument pos:start="1177:33" pos:end="1177:33"><expr pos:start="1177:33" pos:end="1177:33"><literal type="number" pos:start="1177:33" pos:end="1177:33">2</literal></expr></argument>)</argument_list></call><operator pos:start="1177:35" pos:end="1177:35">+</operator><literal type="number" pos:start="1177:36" pos:end="1177:36">2</literal></expr>;</expr_stmt>

        <comment type="line" pos:start="1179:9" pos:end="1179:60">//av_log(NULL,AV_LOG_INFO,"nb_bits: %d\n", nb_bits);</comment>

        <expr_stmt pos:start="1181:9" pos:end="1181:44"><expr pos:start="1181:9" pos:end="1181:43"><name pos:start="1181:9" pos:end="1181:13">table</name> <operator pos:start="1181:15" pos:end="1181:15">=</operator> <name pos:start="1181:17" pos:end="1181:43"><name pos:start="1181:17" pos:end="1181:32">swf_index_tables</name><index pos:start="1181:33" pos:end="1181:43">[<expr pos:start="1181:34" pos:end="1181:42"><name pos:start="1181:34" pos:end="1181:40">nb_bits</name><operator pos:start="1181:41" pos:end="1181:41">-</operator><literal type="number" pos:start="1181:42" pos:end="1181:42">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1183:9" pos:end="1183:30"><expr pos:start="1183:9" pos:end="1183:29"><name pos:start="1183:9" pos:end="1183:10">k0</name> <operator pos:start="1183:12" pos:end="1183:12">=</operator> <literal type="number" pos:start="1183:14" pos:end="1183:14">1</literal> <operator pos:start="1183:16" pos:end="1183:17">&lt;&lt;</operator> <operator pos:start="1183:19" pos:end="1183:19">(</operator><name pos:start="1183:20" pos:end="1183:26">nb_bits</name><operator pos:start="1183:27" pos:end="1183:27">-</operator><literal type="number" pos:start="1183:28" pos:end="1183:28">2</literal><operator pos:start="1183:29" pos:end="1183:29">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="1185:9" pos:end="1185:36"><expr pos:start="1185:9" pos:end="1185:35"><name pos:start="1185:9" pos:end="1185:16">signmask</name> <operator pos:start="1185:18" pos:end="1185:18">=</operator> <literal type="number" pos:start="1185:20" pos:end="1185:20">1</literal> <operator pos:start="1185:22" pos:end="1185:23">&lt;&lt;</operator> <operator pos:start="1185:25" pos:end="1185:25">(</operator><name pos:start="1185:26" pos:end="1185:32">nb_bits</name><operator pos:start="1185:33" pos:end="1185:33">-</operator><literal type="number" pos:start="1185:34" pos:end="1185:34">1</literal><operator pos:start="1185:35" pos:end="1185:35">)</operator></expr>;</expr_stmt>



        <while pos:start="1189:9" pos:end="1271:9">while <condition pos:start="1189:15" pos:end="1189:64">(<expr pos:start="1189:16" pos:end="1189:63"><call pos:start="1189:16" pos:end="1189:34"><name pos:start="1189:16" pos:end="1189:29">get_bits_count</name><argument_list pos:start="1189:30" pos:end="1189:34">(<argument pos:start="1189:31" pos:end="1189:33"><expr pos:start="1189:31" pos:end="1189:33"><operator pos:start="1189:31" pos:end="1189:31">&amp;</operator><name pos:start="1189:32" pos:end="1189:33">gb</name></expr></argument>)</argument_list></call> <operator pos:start="1189:36" pos:end="1189:37">&lt;=</operator> <name pos:start="1189:39" pos:end="1189:42">size</name> <operator pos:start="1189:44" pos:end="1189:44">-</operator> <literal type="number" pos:start="1189:46" pos:end="1189:47">22</literal><operator pos:start="1189:48" pos:end="1189:48">*</operator><name pos:start="1189:49" pos:end="1189:63"><name pos:start="1189:49" pos:end="1189:53">avctx</name><operator pos:start="1189:54" pos:end="1189:55">-&gt;</operator><name pos:start="1189:56" pos:end="1189:63">channels</name></name></expr>)</condition> <block pos:start="1189:66" pos:end="1271:9">{<block_content pos:start="1191:13" pos:end="1269:13">

            <for pos:start="1191:13" pos:end="1197:13">for <control pos:start="1191:17" pos:end="1191:49">(<init pos:start="1191:18" pos:end="1191:23"><expr pos:start="1191:18" pos:end="1191:22"><name pos:start="1191:18" pos:end="1191:18">i</name> <operator pos:start="1191:20" pos:end="1191:20">=</operator> <literal type="number" pos:start="1191:22" pos:end="1191:22">0</literal></expr>;</init> <condition pos:start="1191:25" pos:end="1191:44"><expr pos:start="1191:25" pos:end="1191:43"><name pos:start="1191:25" pos:end="1191:25">i</name> <operator pos:start="1191:27" pos:end="1191:27">&lt;</operator> <name pos:start="1191:29" pos:end="1191:43"><name pos:start="1191:29" pos:end="1191:33">avctx</name><operator pos:start="1191:34" pos:end="1191:35">-&gt;</operator><name pos:start="1191:36" pos:end="1191:43">channels</name></name></expr>;</condition> <incr pos:start="1191:46" pos:end="1191:48"><expr pos:start="1191:46" pos:end="1191:48"><name pos:start="1191:46" pos:end="1191:46">i</name><operator pos:start="1191:47" pos:end="1191:48">++</operator></expr></incr>)</control> <block pos:start="1191:51" pos:end="1197:13">{<block_content pos:start="1193:17" pos:end="1195:59">

                <expr_stmt pos:start="1193:17" pos:end="1193:73"><expr pos:start="1193:17" pos:end="1193:72"><operator pos:start="1193:17" pos:end="1193:17">*</operator><name pos:start="1193:18" pos:end="1193:24">samples</name><operator pos:start="1193:25" pos:end="1193:26">++</operator> <operator pos:start="1193:28" pos:end="1193:28">=</operator> <name pos:start="1193:30" pos:end="1193:41"><name pos:start="1193:30" pos:end="1193:30">c</name><operator pos:start="1193:31" pos:end="1193:32">-&gt;</operator><name pos:start="1193:33" pos:end="1193:38">status</name><index pos:start="1193:39" pos:end="1193:41">[<expr pos:start="1193:40" pos:end="1193:40"><name pos:start="1193:40" pos:end="1193:40">i</name></expr>]</index></name><operator pos:start="1193:42" pos:end="1193:42">.</operator><name pos:start="1193:43" pos:end="1193:51">predictor</name> <operator pos:start="1193:53" pos:end="1193:53">=</operator> <call pos:start="1193:55" pos:end="1193:72"><name pos:start="1193:55" pos:end="1193:63">get_sbits</name><argument_list pos:start="1193:64" pos:end="1193:72">(<argument pos:start="1193:65" pos:end="1193:67"><expr pos:start="1193:65" pos:end="1193:67"><operator pos:start="1193:65" pos:end="1193:65">&amp;</operator><name pos:start="1193:66" pos:end="1193:67">gb</name></expr></argument>, <argument pos:start="1193:70" pos:end="1193:71"><expr pos:start="1193:70" pos:end="1193:71"><literal type="number" pos:start="1193:70" pos:end="1193:71">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1195:17" pos:end="1195:59"><expr pos:start="1195:17" pos:end="1195:58"><name pos:start="1195:17" pos:end="1195:28"><name pos:start="1195:17" pos:end="1195:17">c</name><operator pos:start="1195:18" pos:end="1195:19">-&gt;</operator><name pos:start="1195:20" pos:end="1195:25">status</name><index pos:start="1195:26" pos:end="1195:28">[<expr pos:start="1195:27" pos:end="1195:27"><name pos:start="1195:27" pos:end="1195:27">i</name></expr>]</index></name><operator pos:start="1195:29" pos:end="1195:29">.</operator><name pos:start="1195:30" pos:end="1195:39">step_index</name> <operator pos:start="1195:41" pos:end="1195:41">=</operator> <call pos:start="1195:43" pos:end="1195:58"><name pos:start="1195:43" pos:end="1195:50">get_bits</name><argument_list pos:start="1195:51" pos:end="1195:58">(<argument pos:start="1195:52" pos:end="1195:54"><expr pos:start="1195:52" pos:end="1195:54"><operator pos:start="1195:52" pos:end="1195:52">&amp;</operator><name pos:start="1195:53" pos:end="1195:54">gb</name></expr></argument>, <argument pos:start="1195:57" pos:end="1195:57"><expr pos:start="1195:57" pos:end="1195:57"><literal type="number" pos:start="1195:57" pos:end="1195:57">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>



            <for pos:start="1201:13" pos:end="1269:13">for <control pos:start="1201:17" pos:end="1201:107">(<init pos:start="1201:18" pos:end="1201:27"><expr pos:start="1201:18" pos:end="1201:26"><name pos:start="1201:18" pos:end="1201:22">count</name> <operator pos:start="1201:24" pos:end="1201:24">=</operator> <literal type="number" pos:start="1201:26" pos:end="1201:26">0</literal></expr>;</init> <condition pos:start="1201:29" pos:end="1201:98"><expr pos:start="1201:29" pos:end="1201:97"><call pos:start="1201:29" pos:end="1201:47"><name pos:start="1201:29" pos:end="1201:42">get_bits_count</name><argument_list pos:start="1201:43" pos:end="1201:47">(<argument pos:start="1201:44" pos:end="1201:46"><expr pos:start="1201:44" pos:end="1201:46"><operator pos:start="1201:44" pos:end="1201:44">&amp;</operator><name pos:start="1201:45" pos:end="1201:46">gb</name></expr></argument>)</argument_list></call> <operator pos:start="1201:49" pos:end="1201:50">&lt;=</operator> <name pos:start="1201:52" pos:end="1201:55">size</name> <operator pos:start="1201:57" pos:end="1201:57">-</operator> <name pos:start="1201:59" pos:end="1201:65">nb_bits</name><operator pos:start="1201:66" pos:end="1201:66">*</operator><name pos:start="1201:67" pos:end="1201:81"><name pos:start="1201:67" pos:end="1201:71">avctx</name><operator pos:start="1201:72" pos:end="1201:73">-&gt;</operator><name pos:start="1201:74" pos:end="1201:81">channels</name></name> <operator pos:start="1201:83" pos:end="1201:84">&amp;&amp;</operator> <name pos:start="1201:86" pos:end="1201:90">count</name> <operator pos:start="1201:92" pos:end="1201:92">&lt;</operator> <literal type="number" pos:start="1201:94" pos:end="1201:97">4095</literal></expr>;</condition> <incr pos:start="1201:100" pos:end="1201:106"><expr pos:start="1201:100" pos:end="1201:106"><name pos:start="1201:100" pos:end="1201:104">count</name><operator pos:start="1201:105" pos:end="1201:106">++</operator></expr></incr>)</control> <block pos:start="1201:109" pos:end="1269:13">{<block_content pos:start="1203:17" pos:end="1267:17">

                <decl_stmt pos:start="1203:17" pos:end="1203:22"><decl pos:start="1203:17" pos:end="1203:21"><type pos:start="1203:17" pos:end="1203:19"><name pos:start="1203:17" pos:end="1203:19">int</name></type> <name pos:start="1203:21" pos:end="1203:21">i</name></decl>;</decl_stmt>



                <for pos:start="1207:17" pos:end="1267:17">for <control pos:start="1207:21" pos:end="1207:53">(<init pos:start="1207:22" pos:end="1207:27"><expr pos:start="1207:22" pos:end="1207:26"><name pos:start="1207:22" pos:end="1207:22">i</name> <operator pos:start="1207:24" pos:end="1207:24">=</operator> <literal type="number" pos:start="1207:26" pos:end="1207:26">0</literal></expr>;</init> <condition pos:start="1207:29" pos:end="1207:48"><expr pos:start="1207:29" pos:end="1207:47"><name pos:start="1207:29" pos:end="1207:29">i</name> <operator pos:start="1207:31" pos:end="1207:31">&lt;</operator> <name pos:start="1207:33" pos:end="1207:47"><name pos:start="1207:33" pos:end="1207:37">avctx</name><operator pos:start="1207:38" pos:end="1207:39">-&gt;</operator><name pos:start="1207:40" pos:end="1207:47">channels</name></name></expr>;</condition> <incr pos:start="1207:50" pos:end="1207:52"><expr pos:start="1207:50" pos:end="1207:52"><name pos:start="1207:50" pos:end="1207:50">i</name><operator pos:start="1207:51" pos:end="1207:52">++</operator></expr></incr>)</control> <block pos:start="1207:55" pos:end="1267:17">{<block_content pos:start="1211:21" pos:end="1265:21">

                    <comment type="line" pos:start="1209:21" pos:end="1209:43">// similar to IMA adpcm</comment>

                    <decl_stmt pos:start="1211:21" pos:end="1211:55"><decl pos:start="1211:21" pos:end="1211:54"><type pos:start="1211:21" pos:end="1211:23"><name pos:start="1211:21" pos:end="1211:23">int</name></type> <name pos:start="1211:25" pos:end="1211:29">delta</name> <init pos:start="1211:31" pos:end="1211:54">= <expr pos:start="1211:33" pos:end="1211:54"><call pos:start="1211:33" pos:end="1211:54"><name pos:start="1211:33" pos:end="1211:40">get_bits</name><argument_list pos:start="1211:41" pos:end="1211:54">(<argument pos:start="1211:42" pos:end="1211:44"><expr pos:start="1211:42" pos:end="1211:44"><operator pos:start="1211:42" pos:end="1211:42">&amp;</operator><name pos:start="1211:43" pos:end="1211:44">gb</name></expr></argument>, <argument pos:start="1211:47" pos:end="1211:53"><expr pos:start="1211:47" pos:end="1211:53"><name pos:start="1211:47" pos:end="1211:53">nb_bits</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="1213:21" pos:end="1213:67"><decl pos:start="1213:21" pos:end="1213:66"><type pos:start="1213:21" pos:end="1213:23"><name pos:start="1213:21" pos:end="1213:23">int</name></type> <name pos:start="1213:25" pos:end="1213:28">step</name> <init pos:start="1213:30" pos:end="1213:66">= <expr pos:start="1213:32" pos:end="1213:66"><name pos:start="1213:32" pos:end="1213:66"><name pos:start="1213:32" pos:end="1213:41">step_table</name><index pos:start="1213:42" pos:end="1213:66">[<expr pos:start="1213:43" pos:end="1213:65"><name pos:start="1213:43" pos:end="1213:54"><name pos:start="1213:43" pos:end="1213:43">c</name><operator pos:start="1213:44" pos:end="1213:45">-&gt;</operator><name pos:start="1213:46" pos:end="1213:51">status</name><index pos:start="1213:52" pos:end="1213:54">[<expr pos:start="1213:53" pos:end="1213:53"><name pos:start="1213:53" pos:end="1213:53">i</name></expr>]</index></name><operator pos:start="1213:55" pos:end="1213:55">.</operator><name pos:start="1213:56" pos:end="1213:65">step_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="1215:21" pos:end="1215:36"><decl pos:start="1215:21" pos:end="1215:35"><type pos:start="1215:21" pos:end="1215:24"><name pos:start="1215:21" pos:end="1215:24">long</name></type> <name pos:start="1215:26" pos:end="1215:31">vpdiff</name> <init pos:start="1215:33" pos:end="1215:35">= <expr pos:start="1215:35" pos:end="1215:35"><literal type="number" pos:start="1215:35" pos:end="1215:35">0</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="1215:38" pos:end="1215:67">// vpdiff = (delta+0.5)*step/4</comment>

                    <decl_stmt pos:start="1217:21" pos:end="1217:31"><decl pos:start="1217:21" pos:end="1217:30"><type pos:start="1217:21" pos:end="1217:23"><name pos:start="1217:21" pos:end="1217:23">int</name></type> <name pos:start="1217:25" pos:end="1217:25">k</name> <init pos:start="1217:27" pos:end="1217:30">= <expr pos:start="1217:29" pos:end="1217:30"><name pos:start="1217:29" pos:end="1217:30">k0</name></expr></init></decl>;</decl_stmt>



                    <do pos:start="1221:21" pos:end="1231:31">do <block pos:start="1221:24" pos:end="1231:21">{<block_content pos:start="1223:25" pos:end="1229:32">

                        <if_stmt pos:start="1223:25" pos:end="1225:43"><if pos:start="1223:25" pos:end="1225:43">if <condition pos:start="1223:28" pos:end="1223:38">(<expr pos:start="1223:29" pos:end="1223:37"><name pos:start="1223:29" pos:end="1223:33">delta</name> <operator pos:start="1223:35" pos:end="1223:35">&amp;</operator> <name pos:start="1223:37" pos:end="1223:37">k</name></expr>)</condition><block type="pseudo" pos:start="1225:29" pos:end="1225:43"><block_content pos:start="1225:29" pos:end="1225:43">

                            <expr_stmt pos:start="1225:29" pos:end="1225:43"><expr pos:start="1225:29" pos:end="1225:42"><name pos:start="1225:29" pos:end="1225:34">vpdiff</name> <operator pos:start="1225:36" pos:end="1225:37">+=</operator> <name pos:start="1225:39" pos:end="1225:42">step</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="1227:25" pos:end="1227:35"><expr pos:start="1227:25" pos:end="1227:34"><name pos:start="1227:25" pos:end="1227:28">step</name> <operator pos:start="1227:30" pos:end="1227:32">&gt;&gt;=</operator> <literal type="number" pos:start="1227:34" pos:end="1227:34">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="1229:25" pos:end="1229:32"><expr pos:start="1229:25" pos:end="1229:31"><name pos:start="1229:25" pos:end="1229:25">k</name> <operator pos:start="1229:27" pos:end="1229:29">&gt;&gt;=</operator> <literal type="number" pos:start="1229:31" pos:end="1229:31">1</literal></expr>;</expr_stmt>

                    </block_content>}</block> while<condition pos:start="1231:28" pos:end="1231:30">(<expr pos:start="1231:29" pos:end="1231:29"><name pos:start="1231:29" pos:end="1231:29">k</name></expr>)</condition>;</do>

                    <expr_stmt pos:start="1233:21" pos:end="1233:35"><expr pos:start="1233:21" pos:end="1233:34"><name pos:start="1233:21" pos:end="1233:26">vpdiff</name> <operator pos:start="1233:28" pos:end="1233:29">+=</operator> <name pos:start="1233:31" pos:end="1233:34">step</name></expr>;</expr_stmt>



                    <if_stmt pos:start="1237:21" pos:end="1243:57"><if pos:start="1237:21" pos:end="1239:57">if <condition pos:start="1237:24" pos:end="1237:41">(<expr pos:start="1237:25" pos:end="1237:40"><name pos:start="1237:25" pos:end="1237:29">delta</name> <operator pos:start="1237:31" pos:end="1237:31">&amp;</operator> <name pos:start="1237:33" pos:end="1237:40">signmask</name></expr>)</condition><block type="pseudo" pos:start="1239:25" pos:end="1239:57"><block_content pos:start="1239:25" pos:end="1239:57">

                        <expr_stmt pos:start="1239:25" pos:end="1239:57"><expr pos:start="1239:25" pos:end="1239:56"><name pos:start="1239:25" pos:end="1239:36"><name pos:start="1239:25" pos:end="1239:25">c</name><operator pos:start="1239:26" pos:end="1239:27">-&gt;</operator><name pos:start="1239:28" pos:end="1239:33">status</name><index pos:start="1239:34" pos:end="1239:36">[<expr pos:start="1239:35" pos:end="1239:35"><name pos:start="1239:35" pos:end="1239:35">i</name></expr>]</index></name><operator pos:start="1239:37" pos:end="1239:37">.</operator><name pos:start="1239:38" pos:end="1239:46">predictor</name> <operator pos:start="1239:48" pos:end="1239:49">-=</operator> <name pos:start="1239:51" pos:end="1239:56">vpdiff</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="1241:21" pos:end="1243:57">else<block type="pseudo" pos:start="1243:25" pos:end="1243:57"><block_content pos:start="1243:25" pos:end="1243:57">

                        <expr_stmt pos:start="1243:25" pos:end="1243:57"><expr pos:start="1243:25" pos:end="1243:56"><name pos:start="1243:25" pos:end="1243:36"><name pos:start="1243:25" pos:end="1243:25">c</name><operator pos:start="1243:26" pos:end="1243:27">-&gt;</operator><name pos:start="1243:28" pos:end="1243:33">status</name><index pos:start="1243:34" pos:end="1243:36">[<expr pos:start="1243:35" pos:end="1243:35"><name pos:start="1243:35" pos:end="1243:35">i</name></expr>]</index></name><operator pos:start="1243:37" pos:end="1243:37">.</operator><name pos:start="1243:38" pos:end="1243:46">predictor</name> <operator pos:start="1243:48" pos:end="1243:49">+=</operator> <name pos:start="1243:51" pos:end="1243:56">vpdiff</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <expr_stmt pos:start="1247:21" pos:end="1247:74"><expr pos:start="1247:21" pos:end="1247:73"><name pos:start="1247:21" pos:end="1247:32"><name pos:start="1247:21" pos:end="1247:21">c</name><operator pos:start="1247:22" pos:end="1247:23">-&gt;</operator><name pos:start="1247:24" pos:end="1247:29">status</name><index pos:start="1247:30" pos:end="1247:32">[<expr pos:start="1247:31" pos:end="1247:31"><name pos:start="1247:31" pos:end="1247:31">i</name></expr>]</index></name><operator pos:start="1247:33" pos:end="1247:33">.</operator><name pos:start="1247:34" pos:end="1247:43">step_index</name> <operator pos:start="1247:45" pos:end="1247:46">+=</operator> <name pos:start="1247:48" pos:end="1247:73"><name pos:start="1247:48" pos:end="1247:52">table</name><index pos:start="1247:53" pos:end="1247:73">[<expr pos:start="1247:54" pos:end="1247:72"><name pos:start="1247:54" pos:end="1247:58">delta</name> <operator pos:start="1247:60" pos:end="1247:60">&amp;</operator> <operator pos:start="1247:62" pos:end="1247:62">(</operator><operator pos:start="1247:63" pos:end="1247:63">~</operator><name pos:start="1247:64" pos:end="1247:71">signmask</name><operator pos:start="1247:72" pos:end="1247:72">)</operator></expr>]</index></name></expr>;</expr_stmt>



                    <expr_stmt pos:start="1251:21" pos:end="1251:86"><expr pos:start="1251:21" pos:end="1251:85"><name pos:start="1251:21" pos:end="1251:32"><name pos:start="1251:21" pos:end="1251:21">c</name><operator pos:start="1251:22" pos:end="1251:23">-&gt;</operator><name pos:start="1251:24" pos:end="1251:29">status</name><index pos:start="1251:30" pos:end="1251:32">[<expr pos:start="1251:31" pos:end="1251:31"><name pos:start="1251:31" pos:end="1251:31">i</name></expr>]</index></name><operator pos:start="1251:33" pos:end="1251:33">.</operator><name pos:start="1251:34" pos:end="1251:43">step_index</name> <operator pos:start="1251:45" pos:end="1251:45">=</operator> <call pos:start="1251:47" pos:end="1251:85"><name pos:start="1251:47" pos:end="1251:53">av_clip</name><argument_list pos:start="1251:54" pos:end="1251:85">(<argument pos:start="1251:55" pos:end="1251:77"><expr pos:start="1251:55" pos:end="1251:77"><name pos:start="1251:55" pos:end="1251:66"><name pos:start="1251:55" pos:end="1251:55">c</name><operator pos:start="1251:56" pos:end="1251:57">-&gt;</operator><name pos:start="1251:58" pos:end="1251:63">status</name><index pos:start="1251:64" pos:end="1251:66">[<expr pos:start="1251:65" pos:end="1251:65"><name pos:start="1251:65" pos:end="1251:65">i</name></expr>]</index></name><operator pos:start="1251:67" pos:end="1251:67">.</operator><name pos:start="1251:68" pos:end="1251:77">step_index</name></expr></argument>, <argument pos:start="1251:80" pos:end="1251:80"><expr pos:start="1251:80" pos:end="1251:80"><literal type="number" pos:start="1251:80" pos:end="1251:80">0</literal></expr></argument>, <argument pos:start="1251:83" pos:end="1251:84"><expr pos:start="1251:83" pos:end="1251:84"><literal type="number" pos:start="1251:83" pos:end="1251:84">88</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1253:21" pos:end="1253:83"><expr pos:start="1253:21" pos:end="1253:82"><name pos:start="1253:21" pos:end="1253:32"><name pos:start="1253:21" pos:end="1253:21">c</name><operator pos:start="1253:22" pos:end="1253:23">-&gt;</operator><name pos:start="1253:24" pos:end="1253:29">status</name><index pos:start="1253:30" pos:end="1253:32">[<expr pos:start="1253:31" pos:end="1253:31"><name pos:start="1253:31" pos:end="1253:31">i</name></expr>]</index></name><operator pos:start="1253:33" pos:end="1253:33">.</operator><name pos:start="1253:34" pos:end="1253:42">predictor</name> <operator pos:start="1253:44" pos:end="1253:44">=</operator> <call pos:start="1253:46" pos:end="1253:82"><name pos:start="1253:46" pos:end="1253:58">av_clip_int16</name><argument_list pos:start="1253:59" pos:end="1253:82">(<argument pos:start="1253:60" pos:end="1253:81"><expr pos:start="1253:60" pos:end="1253:81"><name pos:start="1253:60" pos:end="1253:71"><name pos:start="1253:60" pos:end="1253:60">c</name><operator pos:start="1253:61" pos:end="1253:62">-&gt;</operator><name pos:start="1253:63" pos:end="1253:68">status</name><index pos:start="1253:69" pos:end="1253:71">[<expr pos:start="1253:70" pos:end="1253:70"><name pos:start="1253:70" pos:end="1253:70">i</name></expr>]</index></name><operator pos:start="1253:72" pos:end="1253:72">.</operator><name pos:start="1253:73" pos:end="1253:81">predictor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="1257:21" pos:end="1257:56"><expr pos:start="1257:21" pos:end="1257:55"><operator pos:start="1257:21" pos:end="1257:21">*</operator><name pos:start="1257:22" pos:end="1257:28">samples</name><operator pos:start="1257:29" pos:end="1257:30">++</operator> <operator pos:start="1257:32" pos:end="1257:32">=</operator> <name pos:start="1257:34" pos:end="1257:45"><name pos:start="1257:34" pos:end="1257:34">c</name><operator pos:start="1257:35" pos:end="1257:36">-&gt;</operator><name pos:start="1257:37" pos:end="1257:42">status</name><index pos:start="1257:43" pos:end="1257:45">[<expr pos:start="1257:44" pos:end="1257:44"><name pos:start="1257:44" pos:end="1257:44">i</name></expr>]</index></name><operator pos:start="1257:46" pos:end="1257:46">.</operator><name pos:start="1257:47" pos:end="1257:55">predictor</name></expr>;</expr_stmt>

                    <if_stmt pos:start="1259:21" pos:end="1265:21"><if pos:start="1259:21" pos:end="1265:21">if <condition pos:start="1259:24" pos:end="1259:47">(<expr pos:start="1259:25" pos:end="1259:46"><name pos:start="1259:25" pos:end="1259:31">samples</name> <operator pos:start="1259:33" pos:end="1259:34">&gt;=</operator> <name pos:start="1259:36" pos:end="1259:46">samples_end</name></expr>)</condition> <block pos:start="1259:49" pos:end="1265:21">{<block_content pos:start="1261:25" pos:end="1263:34">

                        <expr_stmt pos:start="1261:25" pos:end="1261:94"><expr pos:start="1261:25" pos:end="1261:93"><call pos:start="1261:25" pos:end="1261:93"><name pos:start="1261:25" pos:end="1261:30">av_log</name><argument_list pos:start="1261:31" pos:end="1261:93">(<argument pos:start="1261:32" pos:end="1261:36"><expr pos:start="1261:32" pos:end="1261:36"><name pos:start="1261:32" pos:end="1261:36">avctx</name></expr></argument>, <argument pos:start="1261:39" pos:end="1261:50"><expr pos:start="1261:39" pos:end="1261:50"><name pos:start="1261:39" pos:end="1261:50">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="1261:53" pos:end="1261:92"><expr pos:start="1261:53" pos:end="1261:92"><literal type="string" pos:start="1261:53" pos:end="1261:92">"allocated output buffer is too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="1263:25" pos:end="1263:34">return <expr pos:start="1263:32" pos:end="1263:33"><operator pos:start="1263:32" pos:end="1263:32">-</operator><literal type="number" pos:start="1263:33" pos:end="1263:33">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></while>

        <expr_stmt pos:start="1273:9" pos:end="1273:24"><expr pos:start="1273:9" pos:end="1273:23"><name pos:start="1273:9" pos:end="1273:11">src</name> <operator pos:start="1273:13" pos:end="1273:14">+=</operator> <name pos:start="1273:16" pos:end="1273:23">buf_size</name></expr>;</expr_stmt>

        <break pos:start="1275:9" pos:end="1275:14">break;</break>

    </block_content>}</block>

    <case pos:start="1279:5" pos:end="1279:31">case <expr pos:start="1279:10" pos:end="1279:30"><name pos:start="1279:10" pos:end="1279:30">CODEC_ID_ADPCM_YAMAHA</name></expr>:</case>

        <while pos:start="1281:9" pos:end="1307:9">while <condition pos:start="1281:15" pos:end="1281:36">(<expr pos:start="1281:16" pos:end="1281:35"><name pos:start="1281:16" pos:end="1281:18">src</name> <operator pos:start="1281:20" pos:end="1281:20">&lt;</operator> <name pos:start="1281:22" pos:end="1281:24">buf</name> <operator pos:start="1281:26" pos:end="1281:26">+</operator> <name pos:start="1281:28" pos:end="1281:35">buf_size</name></expr>)</condition> <block pos:start="1281:38" pos:end="1307:9">{<block_content pos:start="1283:13" pos:end="1305:18">

            <if_stmt pos:start="1283:13" pos:end="1303:13"><if pos:start="1283:13" pos:end="1293:13">if <condition pos:start="1283:16" pos:end="1283:19">(<expr pos:start="1283:17" pos:end="1283:18"><name pos:start="1283:17" pos:end="1283:18">st</name></expr>)</condition> <block pos:start="1283:21" pos:end="1293:13">{<block_content pos:start="1285:17" pos:end="1291:39">

                <expr_stmt pos:start="1285:17" pos:end="1287:39"><expr pos:start="1285:17" pos:end="1287:38"><operator pos:start="1285:17" pos:end="1285:17">*</operator><name pos:start="1285:18" pos:end="1285:24">samples</name><operator pos:start="1285:25" pos:end="1285:26">++</operator> <operator pos:start="1285:28" pos:end="1285:28">=</operator> <call pos:start="1285:30" pos:end="1287:38"><name pos:start="1285:30" pos:end="1285:55">adpcm_yamaha_expand_nibble</name><argument_list pos:start="1285:56" pos:end="1287:38">(<argument pos:start="1285:57" pos:end="1285:69"><expr pos:start="1285:57" pos:end="1285:69"><operator pos:start="1285:57" pos:end="1285:57">&amp;</operator><name pos:start="1285:58" pos:end="1285:69"><name pos:start="1285:58" pos:end="1285:58">c</name><operator pos:start="1285:59" pos:end="1285:60">-&gt;</operator><name pos:start="1285:61" pos:end="1285:66">status</name><index pos:start="1285:67" pos:end="1285:69">[<expr pos:start="1285:68" pos:end="1285:68"><literal type="number" pos:start="1285:68" pos:end="1285:68">0</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="1287:25" pos:end="1287:37"><expr pos:start="1287:25" pos:end="1287:37"><name pos:start="1287:25" pos:end="1287:30"><name pos:start="1287:25" pos:end="1287:27">src</name><index pos:start="1287:28" pos:end="1287:30">[<expr pos:start="1287:29" pos:end="1287:29"><literal type="number" pos:start="1287:29" pos:end="1287:29">0</literal></expr>]</index></name> <operator pos:start="1287:32" pos:end="1287:32">&amp;</operator> <literal type="number" pos:start="1287:34" pos:end="1287:37">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1289:17" pos:end="1291:39"><expr pos:start="1289:17" pos:end="1291:38"><operator pos:start="1289:17" pos:end="1289:17">*</operator><name pos:start="1289:18" pos:end="1289:24">samples</name><operator pos:start="1289:25" pos:end="1289:26">++</operator> <operator pos:start="1289:28" pos:end="1289:28">=</operator> <call pos:start="1289:30" pos:end="1291:38"><name pos:start="1289:30" pos:end="1289:55">adpcm_yamaha_expand_nibble</name><argument_list pos:start="1289:56" pos:end="1291:38">(<argument pos:start="1289:57" pos:end="1289:69"><expr pos:start="1289:57" pos:end="1289:69"><operator pos:start="1289:57" pos:end="1289:57">&amp;</operator><name pos:start="1289:58" pos:end="1289:69"><name pos:start="1289:58" pos:end="1289:58">c</name><operator pos:start="1289:59" pos:end="1289:60">-&gt;</operator><name pos:start="1289:61" pos:end="1289:66">status</name><index pos:start="1289:67" pos:end="1289:69">[<expr pos:start="1289:68" pos:end="1289:68"><literal type="number" pos:start="1289:68" pos:end="1289:68">1</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="1291:25" pos:end="1291:35"><expr pos:start="1291:25" pos:end="1291:35"><name pos:start="1291:25" pos:end="1291:30"><name pos:start="1291:25" pos:end="1291:27">src</name><index pos:start="1291:28" pos:end="1291:30">[<expr pos:start="1291:29" pos:end="1291:29"><literal type="number" pos:start="1291:29" pos:end="1291:29">0</literal></expr>]</index></name> <operator pos:start="1291:32" pos:end="1291:33">&gt;&gt;</operator> <literal type="number" pos:start="1291:35" pos:end="1291:35">4</literal></expr></argument>  )</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1293:15" pos:end="1303:13">else <block pos:start="1293:20" pos:end="1303:13">{<block_content pos:start="1295:17" pos:end="1301:39">

                <expr_stmt pos:start="1295:17" pos:end="1297:39"><expr pos:start="1295:17" pos:end="1297:38"><operator pos:start="1295:17" pos:end="1295:17">*</operator><name pos:start="1295:18" pos:end="1295:24">samples</name><operator pos:start="1295:25" pos:end="1295:26">++</operator> <operator pos:start="1295:28" pos:end="1295:28">=</operator> <call pos:start="1295:30" pos:end="1297:38"><name pos:start="1295:30" pos:end="1295:55">adpcm_yamaha_expand_nibble</name><argument_list pos:start="1295:56" pos:end="1297:38">(<argument pos:start="1295:57" pos:end="1295:69"><expr pos:start="1295:57" pos:end="1295:69"><operator pos:start="1295:57" pos:end="1295:57">&amp;</operator><name pos:start="1295:58" pos:end="1295:69"><name pos:start="1295:58" pos:end="1295:58">c</name><operator pos:start="1295:59" pos:end="1295:60">-&gt;</operator><name pos:start="1295:61" pos:end="1295:66">status</name><index pos:start="1295:67" pos:end="1295:69">[<expr pos:start="1295:68" pos:end="1295:68"><literal type="number" pos:start="1295:68" pos:end="1295:68">0</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="1297:25" pos:end="1297:37"><expr pos:start="1297:25" pos:end="1297:37"><name pos:start="1297:25" pos:end="1297:30"><name pos:start="1297:25" pos:end="1297:27">src</name><index pos:start="1297:28" pos:end="1297:30">[<expr pos:start="1297:29" pos:end="1297:29"><literal type="number" pos:start="1297:29" pos:end="1297:29">0</literal></expr>]</index></name> <operator pos:start="1297:32" pos:end="1297:32">&amp;</operator> <literal type="number" pos:start="1297:34" pos:end="1297:37">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1299:17" pos:end="1301:39"><expr pos:start="1299:17" pos:end="1301:38"><operator pos:start="1299:17" pos:end="1299:17">*</operator><name pos:start="1299:18" pos:end="1299:24">samples</name><operator pos:start="1299:25" pos:end="1299:26">++</operator> <operator pos:start="1299:28" pos:end="1299:28">=</operator> <call pos:start="1299:30" pos:end="1301:38"><name pos:start="1299:30" pos:end="1299:55">adpcm_yamaha_expand_nibble</name><argument_list pos:start="1299:56" pos:end="1301:38">(<argument pos:start="1299:57" pos:end="1299:69"><expr pos:start="1299:57" pos:end="1299:69"><operator pos:start="1299:57" pos:end="1299:57">&amp;</operator><name pos:start="1299:58" pos:end="1299:69"><name pos:start="1299:58" pos:end="1299:58">c</name><operator pos:start="1299:59" pos:end="1299:60">-&gt;</operator><name pos:start="1299:61" pos:end="1299:66">status</name><index pos:start="1299:67" pos:end="1299:69">[<expr pos:start="1299:68" pos:end="1299:68"><literal type="number" pos:start="1299:68" pos:end="1299:68">0</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="1301:25" pos:end="1301:35"><expr pos:start="1301:25" pos:end="1301:35"><name pos:start="1301:25" pos:end="1301:30"><name pos:start="1301:25" pos:end="1301:27">src</name><index pos:start="1301:28" pos:end="1301:30">[<expr pos:start="1301:29" pos:end="1301:29"><literal type="number" pos:start="1301:29" pos:end="1301:29">0</literal></expr>]</index></name> <operator pos:start="1301:32" pos:end="1301:33">&gt;&gt;</operator> <literal type="number" pos:start="1301:35" pos:end="1301:35">4</literal></expr></argument>  )</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1305:13" pos:end="1305:18"><expr pos:start="1305:13" pos:end="1305:17"><name pos:start="1305:13" pos:end="1305:15">src</name><operator pos:start="1305:16" pos:end="1305:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <break pos:start="1309:9" pos:end="1309:14">break;</break>

    <case pos:start="1311:5" pos:end="1311:28">case <expr pos:start="1311:10" pos:end="1311:27"><name pos:start="1311:10" pos:end="1311:27">CODEC_ID_ADPCM_THP</name></expr>:</case>

    <block pos:start="1313:5" pos:end="1431:5">{<block_content pos:start="1315:9" pos:end="1429:14">

        <decl_stmt pos:start="1315:9" pos:end="1315:25"><decl pos:start="1315:9" pos:end="1315:24"><type pos:start="1315:9" pos:end="1315:11"><name pos:start="1315:9" pos:end="1315:11">int</name></type> <name pos:start="1315:13" pos:end="1315:24"><name pos:start="1315:13" pos:end="1315:17">table</name><index pos:start="1315:18" pos:end="1315:20">[<expr pos:start="1315:19" pos:end="1315:19"><literal type="number" pos:start="1315:19" pos:end="1315:19">2</literal></expr>]</index><index pos:start="1315:21" pos:end="1315:24">[<expr pos:start="1315:22" pos:end="1315:23"><literal type="number" pos:start="1315:22" pos:end="1315:23">16</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="1317:9" pos:end="1317:31"><decl pos:start="1317:9" pos:end="1317:30"><type pos:start="1317:9" pos:end="1317:20"><name pos:start="1317:9" pos:end="1317:16">unsigned</name> <name pos:start="1317:18" pos:end="1317:20">int</name></type> <name pos:start="1317:22" pos:end="1317:30">samplecnt</name></decl>;</decl_stmt>

        <decl_stmt pos:start="1319:9" pos:end="1319:23"><decl pos:start="1319:9" pos:end="1319:22"><type pos:start="1319:9" pos:end="1319:11"><name pos:start="1319:9" pos:end="1319:11">int</name></type> <name pos:start="1319:13" pos:end="1319:22"><name pos:start="1319:13" pos:end="1319:16">prev</name><index pos:start="1319:17" pos:end="1319:19">[<expr pos:start="1319:18" pos:end="1319:18"><literal type="number" pos:start="1319:18" pos:end="1319:18">2</literal></expr>]</index><index pos:start="1319:20" pos:end="1319:22">[<expr pos:start="1319:21" pos:end="1319:21"><literal type="number" pos:start="1319:21" pos:end="1319:21">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="1321:9" pos:end="1321:15"><decl pos:start="1321:9" pos:end="1321:14"><type pos:start="1321:9" pos:end="1321:11"><name pos:start="1321:9" pos:end="1321:11">int</name></type> <name pos:start="1321:13" pos:end="1321:14">ch</name></decl>;</decl_stmt>



        <if_stmt pos:start="1325:9" pos:end="1331:9"><if pos:start="1325:9" pos:end="1331:9">if <condition pos:start="1325:12" pos:end="1325:26">(<expr pos:start="1325:13" pos:end="1325:25"><name pos:start="1325:13" pos:end="1325:20">buf_size</name> <operator pos:start="1325:22" pos:end="1325:22">&lt;</operator> <literal type="number" pos:start="1325:24" pos:end="1325:25">80</literal></expr>)</condition> <block pos:start="1325:28" pos:end="1331:9">{<block_content pos:start="1327:13" pos:end="1329:22">

            <expr_stmt pos:start="1327:13" pos:end="1327:61"><expr pos:start="1327:13" pos:end="1327:60"><call pos:start="1327:13" pos:end="1327:60"><name pos:start="1327:13" pos:end="1327:18">av_log</name><argument_list pos:start="1327:19" pos:end="1327:60">(<argument pos:start="1327:20" pos:end="1327:24"><expr pos:start="1327:20" pos:end="1327:24"><name pos:start="1327:20" pos:end="1327:24">avctx</name></expr></argument>, <argument pos:start="1327:27" pos:end="1327:38"><expr pos:start="1327:27" pos:end="1327:38"><name pos:start="1327:27" pos:end="1327:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="1327:41" pos:end="1327:59"><expr pos:start="1327:41" pos:end="1327:59"><literal type="string" pos:start="1327:41" pos:end="1327:59">"frame too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="1329:13" pos:end="1329:22">return <expr pos:start="1329:20" pos:end="1329:21"><operator pos:start="1329:20" pos:end="1329:20">-</operator><literal type="number" pos:start="1329:21" pos:end="1329:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="1335:9" pos:end="1335:15"><expr pos:start="1335:9" pos:end="1335:14"><name pos:start="1335:9" pos:end="1335:11">src</name><operator pos:start="1335:12" pos:end="1335:13">+=</operator><literal type="number" pos:start="1335:14" pos:end="1335:14">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1337:9" pos:end="1337:46"><expr pos:start="1337:9" pos:end="1337:45"><name pos:start="1337:9" pos:end="1337:17">samplecnt</name> <operator pos:start="1337:19" pos:end="1337:19">=</operator> <call pos:start="1337:21" pos:end="1337:45"><name pos:start="1337:21" pos:end="1337:39">bytestream_get_be32</name><argument_list pos:start="1337:40" pos:end="1337:45">(<argument pos:start="1337:41" pos:end="1337:44"><expr pos:start="1337:41" pos:end="1337:44"><operator pos:start="1337:41" pos:end="1337:41">&amp;</operator><name pos:start="1337:42" pos:end="1337:44">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="1341:9" pos:end="1343:61">for <control pos:start="1341:13" pos:end="1341:32">(<init pos:start="1341:14" pos:end="1341:19"><expr pos:start="1341:14" pos:end="1341:18"><name pos:start="1341:14" pos:end="1341:14">i</name> <operator pos:start="1341:16" pos:end="1341:16">=</operator> <literal type="number" pos:start="1341:18" pos:end="1341:18">0</literal></expr>;</init> <condition pos:start="1341:21" pos:end="1341:27"><expr pos:start="1341:21" pos:end="1341:26"><name pos:start="1341:21" pos:end="1341:21">i</name> <operator pos:start="1341:23" pos:end="1341:23">&lt;</operator> <literal type="number" pos:start="1341:25" pos:end="1341:26">32</literal></expr>;</condition> <incr pos:start="1341:29" pos:end="1341:31"><expr pos:start="1341:29" pos:end="1341:31"><name pos:start="1341:29" pos:end="1341:29">i</name><operator pos:start="1341:30" pos:end="1341:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1343:13" pos:end="1343:61"><block_content pos:start="1343:13" pos:end="1343:61">

            <expr_stmt pos:start="1343:13" pos:end="1343:61"><expr pos:start="1343:13" pos:end="1343:60"><name pos:start="1343:13" pos:end="1343:23"><name pos:start="1343:13" pos:end="1343:17">table</name><index pos:start="1343:18" pos:end="1343:20">[<expr pos:start="1343:19" pos:end="1343:19"><literal type="number" pos:start="1343:19" pos:end="1343:19">0</literal></expr>]</index><index pos:start="1343:21" pos:end="1343:23">[<expr pos:start="1343:22" pos:end="1343:22"><name pos:start="1343:22" pos:end="1343:22">i</name></expr>]</index></name> <operator pos:start="1343:25" pos:end="1343:25">=</operator> <operator pos:start="1343:27" pos:end="1343:27">(</operator><name pos:start="1343:28" pos:end="1343:34">int16_t</name><operator pos:start="1343:35" pos:end="1343:35">)</operator><call pos:start="1343:36" pos:end="1343:60"><name pos:start="1343:36" pos:end="1343:54">bytestream_get_be16</name><argument_list pos:start="1343:55" pos:end="1343:60">(<argument pos:start="1343:56" pos:end="1343:59"><expr pos:start="1343:56" pos:end="1343:59"><operator pos:start="1343:56" pos:end="1343:56">&amp;</operator><name pos:start="1343:57" pos:end="1343:59">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <comment type="block" pos:start="1347:9" pos:end="1347:46">/* Initialize the previous sample.  */</comment>

        <for pos:start="1349:9" pos:end="1351:60">for <control pos:start="1349:13" pos:end="1349:31">(<init pos:start="1349:14" pos:end="1349:19"><expr pos:start="1349:14" pos:end="1349:18"><name pos:start="1349:14" pos:end="1349:14">i</name> <operator pos:start="1349:16" pos:end="1349:16">=</operator> <literal type="number" pos:start="1349:18" pos:end="1349:18">0</literal></expr>;</init> <condition pos:start="1349:21" pos:end="1349:26"><expr pos:start="1349:21" pos:end="1349:25"><name pos:start="1349:21" pos:end="1349:21">i</name> <operator pos:start="1349:23" pos:end="1349:23">&lt;</operator> <literal type="number" pos:start="1349:25" pos:end="1349:25">4</literal></expr>;</condition> <incr pos:start="1349:28" pos:end="1349:30"><expr pos:start="1349:28" pos:end="1349:30"><name pos:start="1349:28" pos:end="1349:28">i</name><operator pos:start="1349:29" pos:end="1349:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1351:13" pos:end="1351:60"><block_content pos:start="1351:13" pos:end="1351:60">

            <expr_stmt pos:start="1351:13" pos:end="1351:60"><expr pos:start="1351:13" pos:end="1351:59"><name pos:start="1351:13" pos:end="1351:22"><name pos:start="1351:13" pos:end="1351:16">prev</name><index pos:start="1351:17" pos:end="1351:19">[<expr pos:start="1351:18" pos:end="1351:18"><literal type="number" pos:start="1351:18" pos:end="1351:18">0</literal></expr>]</index><index pos:start="1351:20" pos:end="1351:22">[<expr pos:start="1351:21" pos:end="1351:21"><name pos:start="1351:21" pos:end="1351:21">i</name></expr>]</index></name> <operator pos:start="1351:24" pos:end="1351:24">=</operator> <operator pos:start="1351:26" pos:end="1351:26">(</operator><name pos:start="1351:27" pos:end="1351:33">int16_t</name><operator pos:start="1351:34" pos:end="1351:34">)</operator><call pos:start="1351:35" pos:end="1351:59"><name pos:start="1351:35" pos:end="1351:53">bytestream_get_be16</name><argument_list pos:start="1351:54" pos:end="1351:59">(<argument pos:start="1351:55" pos:end="1351:58"><expr pos:start="1351:55" pos:end="1351:58"><operator pos:start="1351:55" pos:end="1351:55">&amp;</operator><name pos:start="1351:56" pos:end="1351:58">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="1355:9" pos:end="1361:9"><if pos:start="1355:9" pos:end="1361:9">if <condition pos:start="1355:12" pos:end="1355:61">(<expr pos:start="1355:13" pos:end="1355:60"><name pos:start="1355:13" pos:end="1355:21">samplecnt</name> <operator pos:start="1355:23" pos:end="1355:24">&gt;=</operator> <operator pos:start="1355:26" pos:end="1355:26">(</operator><name pos:start="1355:27" pos:end="1355:37">samples_end</name> <operator pos:start="1355:39" pos:end="1355:39">-</operator> <name pos:start="1355:41" pos:end="1355:47">samples</name><operator pos:start="1355:48" pos:end="1355:48">)</operator> <operator pos:start="1355:50" pos:end="1355:50">/</operator>  <operator pos:start="1355:53" pos:end="1355:53">(</operator><name pos:start="1355:54" pos:end="1355:55">st</name> <operator pos:start="1355:57" pos:end="1355:57">+</operator> <literal type="number" pos:start="1355:59" pos:end="1355:59">1</literal><operator pos:start="1355:60" pos:end="1355:60">)</operator></expr>)</condition> <block pos:start="1355:63" pos:end="1361:9">{<block_content pos:start="1357:13" pos:end="1359:22">

            <expr_stmt pos:start="1357:13" pos:end="1357:82"><expr pos:start="1357:13" pos:end="1357:81"><call pos:start="1357:13" pos:end="1357:81"><name pos:start="1357:13" pos:end="1357:18">av_log</name><argument_list pos:start="1357:19" pos:end="1357:81">(<argument pos:start="1357:20" pos:end="1357:24"><expr pos:start="1357:20" pos:end="1357:24"><name pos:start="1357:20" pos:end="1357:24">avctx</name></expr></argument>, <argument pos:start="1357:27" pos:end="1357:38"><expr pos:start="1357:27" pos:end="1357:38"><name pos:start="1357:27" pos:end="1357:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="1357:41" pos:end="1357:80"><expr pos:start="1357:41" pos:end="1357:80"><literal type="string" pos:start="1357:41" pos:end="1357:80">"allocated output buffer is too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="1359:13" pos:end="1359:22">return <expr pos:start="1359:20" pos:end="1359:21"><operator pos:start="1359:20" pos:end="1359:20">-</operator><literal type="number" pos:start="1359:21" pos:end="1359:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <for pos:start="1365:9" pos:end="1419:9">for <control pos:start="1365:13" pos:end="1365:36">(<init pos:start="1365:14" pos:end="1365:20"><expr pos:start="1365:14" pos:end="1365:19"><name pos:start="1365:14" pos:end="1365:15">ch</name> <operator pos:start="1365:17" pos:end="1365:17">=</operator> <literal type="number" pos:start="1365:19" pos:end="1365:19">0</literal></expr>;</init> <condition pos:start="1365:22" pos:end="1365:30"><expr pos:start="1365:22" pos:end="1365:29"><name pos:start="1365:22" pos:end="1365:23">ch</name> <operator pos:start="1365:25" pos:end="1365:26">&lt;=</operator> <name pos:start="1365:28" pos:end="1365:29">st</name></expr>;</condition> <incr pos:start="1365:32" pos:end="1365:35"><expr pos:start="1365:32" pos:end="1365:35"><name pos:start="1365:32" pos:end="1365:33">ch</name><operator pos:start="1365:34" pos:end="1365:35">++</operator></expr></incr>)</control> <block pos:start="1365:38" pos:end="1419:9">{<block_content pos:start="1367:13" pos:end="1417:13">

            <expr_stmt pos:start="1367:13" pos:end="1367:51"><expr pos:start="1367:13" pos:end="1367:50"><name pos:start="1367:13" pos:end="1367:19">samples</name> <operator pos:start="1367:21" pos:end="1367:21">=</operator> <operator pos:start="1367:23" pos:end="1367:23">(</operator><name pos:start="1367:24" pos:end="1367:31">unsigned</name> <name pos:start="1367:33" pos:end="1367:37">short</name> <operator pos:start="1367:39" pos:end="1367:39">*</operator><operator pos:start="1367:40" pos:end="1367:40">)</operator> <name pos:start="1367:42" pos:end="1367:45">data</name> <operator pos:start="1367:47" pos:end="1367:47">+</operator> <name pos:start="1367:49" pos:end="1367:50">ch</name></expr>;</expr_stmt>



            <comment type="block" pos:start="1371:13" pos:end="1371:57">/* Read in every sample for this channel.  */</comment>

            <for pos:start="1373:13" pos:end="1417:13">for <control pos:start="1373:17" pos:end="1373:48">(<init pos:start="1373:18" pos:end="1373:23"><expr pos:start="1373:18" pos:end="1373:22"><name pos:start="1373:18" pos:end="1373:18">i</name> <operator pos:start="1373:20" pos:end="1373:20">=</operator> <literal type="number" pos:start="1373:22" pos:end="1373:22">0</literal></expr>;</init> <condition pos:start="1373:25" pos:end="1373:43"><expr pos:start="1373:25" pos:end="1373:42"><name pos:start="1373:25" pos:end="1373:25">i</name> <operator pos:start="1373:27" pos:end="1373:27">&lt;</operator> <name pos:start="1373:29" pos:end="1373:37">samplecnt</name> <operator pos:start="1373:39" pos:end="1373:39">/</operator> <literal type="number" pos:start="1373:41" pos:end="1373:42">14</literal></expr>;</condition> <incr pos:start="1373:45" pos:end="1373:47"><expr pos:start="1373:45" pos:end="1373:47"><name pos:start="1373:45" pos:end="1373:45">i</name><operator pos:start="1373:46" pos:end="1373:47">++</operator></expr></incr>)</control> <block pos:start="1373:50" pos:end="1417:13">{<block_content pos:start="1375:17" pos:end="1415:17">

                <decl_stmt pos:start="1375:17" pos:end="1375:44"><decl pos:start="1375:17" pos:end="1375:43"><type pos:start="1375:17" pos:end="1375:19"><name pos:start="1375:17" pos:end="1375:19">int</name></type> <name pos:start="1375:21" pos:end="1375:25">index</name> <init pos:start="1375:27" pos:end="1375:43">= <expr pos:start="1375:29" pos:end="1375:43"><operator pos:start="1375:29" pos:end="1375:29">(</operator><operator pos:start="1375:30" pos:end="1375:30">*</operator><name pos:start="1375:31" pos:end="1375:33">src</name> <operator pos:start="1375:35" pos:end="1375:36">&gt;&gt;</operator> <literal type="number" pos:start="1375:38" pos:end="1375:38">4</literal><operator pos:start="1375:39" pos:end="1375:39">)</operator> <operator pos:start="1375:41" pos:end="1375:41">&amp;</operator> <literal type="number" pos:start="1375:43" pos:end="1375:43">7</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="1377:17" pos:end="1377:54"><decl pos:start="1377:17" pos:end="1377:53"><type pos:start="1377:17" pos:end="1377:28"><name pos:start="1377:17" pos:end="1377:24">unsigned</name> <name pos:start="1377:26" pos:end="1377:28">int</name></type> <name pos:start="1377:30" pos:end="1377:32">exp</name> <init pos:start="1377:34" pos:end="1377:53">= <expr pos:start="1377:36" pos:end="1377:53"><literal type="number" pos:start="1377:36" pos:end="1377:39">28</literal> <operator pos:start="1377:39" pos:end="1377:39">-</operator> <operator pos:start="1377:41" pos:end="1377:41">(</operator><operator pos:start="1377:42" pos:end="1377:42">*</operator><name pos:start="1377:43" pos:end="1377:45">src</name><operator pos:start="1377:46" pos:end="1377:47">++</operator> <operator pos:start="1377:49" pos:end="1377:49">&amp;</operator> <literal type="number" pos:start="1377:51" pos:end="1377:52">15</literal><operator pos:start="1377:53" pos:end="1377:53">)</operator></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="1379:17" pos:end="1379:51"><decl pos:start="1379:17" pos:end="1379:50"><type pos:start="1379:17" pos:end="1379:19"><name pos:start="1379:17" pos:end="1379:19">int</name></type> <name pos:start="1379:21" pos:end="1379:27">factor1</name> <init pos:start="1379:29" pos:end="1379:50">= <expr pos:start="1379:31" pos:end="1379:50"><name pos:start="1379:31" pos:end="1379:50"><name pos:start="1379:31" pos:end="1379:35">table</name><index pos:start="1379:36" pos:end="1379:39">[<expr pos:start="1379:37" pos:end="1379:38"><name pos:start="1379:37" pos:end="1379:38">ch</name></expr>]</index><index pos:start="1379:40" pos:end="1379:50">[<expr pos:start="1379:41" pos:end="1379:49"><name pos:start="1379:41" pos:end="1379:45">index</name> <operator pos:start="1379:47" pos:end="1379:47">*</operator> <literal type="number" pos:start="1379:49" pos:end="1379:49">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="1381:17" pos:end="1381:55"><decl pos:start="1381:17" pos:end="1381:54"><type pos:start="1381:17" pos:end="1381:19"><name pos:start="1381:17" pos:end="1381:19">int</name></type> <name pos:start="1381:21" pos:end="1381:27">factor2</name> <init pos:start="1381:29" pos:end="1381:54">= <expr pos:start="1381:31" pos:end="1381:54"><name pos:start="1381:31" pos:end="1381:54"><name pos:start="1381:31" pos:end="1381:35">table</name><index pos:start="1381:36" pos:end="1381:39">[<expr pos:start="1381:37" pos:end="1381:38"><name pos:start="1381:37" pos:end="1381:38">ch</name></expr>]</index><index pos:start="1381:40" pos:end="1381:54">[<expr pos:start="1381:41" pos:end="1381:53"><name pos:start="1381:41" pos:end="1381:45">index</name> <operator pos:start="1381:47" pos:end="1381:47">*</operator> <literal type="number" pos:start="1381:49" pos:end="1381:51">2</literal> <operator pos:start="1381:51" pos:end="1381:51">+</operator> <literal type="number" pos:start="1381:53" pos:end="1381:53">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



                <comment type="block" pos:start="1385:17" pos:end="1385:41">/* Decode 14 samples.  */</comment>

                <for pos:start="1387:17" pos:end="1415:17">for <control pos:start="1387:21" pos:end="1387:40">(<init pos:start="1387:22" pos:end="1387:27"><expr pos:start="1387:22" pos:end="1387:26"><name pos:start="1387:22" pos:end="1387:22">n</name> <operator pos:start="1387:24" pos:end="1387:24">=</operator> <literal type="number" pos:start="1387:26" pos:end="1387:26">0</literal></expr>;</init> <condition pos:start="1387:29" pos:end="1387:35"><expr pos:start="1387:29" pos:end="1387:34"><name pos:start="1387:29" pos:end="1387:29">n</name> <operator pos:start="1387:31" pos:end="1387:31">&lt;</operator> <literal type="number" pos:start="1387:33" pos:end="1387:34">14</literal></expr>;</condition> <incr pos:start="1387:37" pos:end="1387:39"><expr pos:start="1387:37" pos:end="1387:39"><name pos:start="1387:37" pos:end="1387:37">n</name><operator pos:start="1387:38" pos:end="1387:39">++</operator></expr></incr>)</control> <block pos:start="1387:42" pos:end="1415:17">{<block_content pos:start="1389:21" pos:end="1413:34">

                    <decl_stmt pos:start="1389:21" pos:end="1389:38"><decl pos:start="1389:21" pos:end="1389:37"><type pos:start="1389:21" pos:end="1389:27"><name pos:start="1389:21" pos:end="1389:27">int32_t</name></type> <name pos:start="1389:29" pos:end="1389:37">sampledat</name></decl>;</decl_stmt>

                    <if_stmt pos:start="1391:21" pos:end="1393:55"><if pos:start="1391:21" pos:end="1391:55">if<condition pos:start="1391:23" pos:end="1391:27">(<expr pos:start="1391:24" pos:end="1391:26"><name pos:start="1391:24" pos:end="1391:24">n</name><operator pos:start="1391:25" pos:end="1391:25">&amp;</operator><literal type="number" pos:start="1391:26" pos:end="1391:26">1</literal></expr>)</condition><block type="pseudo" pos:start="1391:29" pos:end="1391:55"><block_content pos:start="1391:29" pos:end="1391:55"> <expr_stmt pos:start="1391:29" pos:end="1391:55"><expr pos:start="1391:29" pos:end="1391:54"><name pos:start="1391:29" pos:end="1391:37">sampledat</name><operator pos:start="1391:38" pos:end="1391:38">=</operator>  <operator pos:start="1391:41" pos:end="1391:41">*</operator><name pos:start="1391:42" pos:end="1391:44">src</name><operator pos:start="1391:45" pos:end="1391:46">++</operator>    <operator pos:start="1391:51" pos:end="1391:52">&lt;&lt;</operator><literal type="number" pos:start="1391:53" pos:end="1391:54">28</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="1393:21" pos:end="1393:55">else<block type="pseudo" pos:start="1393:29" pos:end="1393:55"><block_content pos:start="1393:29" pos:end="1393:55">    <expr_stmt pos:start="1393:29" pos:end="1393:55"><expr pos:start="1393:29" pos:end="1393:54"><name pos:start="1393:29" pos:end="1393:37">sampledat</name><operator pos:start="1393:38" pos:end="1393:38">=</operator> <operator pos:start="1393:40" pos:end="1393:40">(</operator><operator pos:start="1393:41" pos:end="1393:41">*</operator><name pos:start="1393:42" pos:end="1393:44">src</name><operator pos:start="1393:45" pos:end="1393:45">&amp;</operator><literal type="number" pos:start="1393:46" pos:end="1393:49">0xF0</literal><operator pos:start="1393:50" pos:end="1393:50">)</operator><operator pos:start="1393:51" pos:end="1393:52">&lt;&lt;</operator><literal type="number" pos:start="1393:53" pos:end="1393:54">24</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <expr_stmt pos:start="1397:21" pos:end="1399:81"><expr pos:start="1397:21" pos:end="1399:80"><name pos:start="1397:21" pos:end="1397:29">sampledat</name> <operator pos:start="1397:31" pos:end="1397:31">=</operator> <operator pos:start="1397:33" pos:end="1397:33">(</operator><operator pos:start="1397:34" pos:end="1397:34">(</operator><name pos:start="1397:35" pos:end="1397:45"><name pos:start="1397:35" pos:end="1397:38">prev</name><index pos:start="1397:39" pos:end="1397:42">[<expr pos:start="1397:40" pos:end="1397:41"><name pos:start="1397:40" pos:end="1397:41">ch</name></expr>]</index><index pos:start="1397:43" pos:end="1397:45">[<expr pos:start="1397:44" pos:end="1397:44"><literal type="number" pos:start="1397:44" pos:end="1397:44">0</literal></expr>]</index></name><operator pos:start="1397:46" pos:end="1397:46">*</operator><name pos:start="1397:47" pos:end="1397:53">factor1</name>

                                <operator pos:start="1399:33" pos:end="1399:33">+</operator> <name pos:start="1399:35" pos:end="1399:45"><name pos:start="1399:35" pos:end="1399:38">prev</name><index pos:start="1399:39" pos:end="1399:42">[<expr pos:start="1399:40" pos:end="1399:41"><name pos:start="1399:40" pos:end="1399:41">ch</name></expr>]</index><index pos:start="1399:43" pos:end="1399:45">[<expr pos:start="1399:44" pos:end="1399:44"><literal type="number" pos:start="1399:44" pos:end="1399:44">1</literal></expr>]</index></name><operator pos:start="1399:46" pos:end="1399:46">*</operator><name pos:start="1399:47" pos:end="1399:53">factor2</name><operator pos:start="1399:54" pos:end="1399:54">)</operator> <operator pos:start="1399:56" pos:end="1399:57">&gt;&gt;</operator> <literal type="number" pos:start="1399:59" pos:end="1399:60">11</literal><operator pos:start="1399:61" pos:end="1399:61">)</operator> <operator pos:start="1399:63" pos:end="1399:63">+</operator> <operator pos:start="1399:65" pos:end="1399:65">(</operator><name pos:start="1399:66" pos:end="1399:74">sampledat</name><operator pos:start="1399:75" pos:end="1399:76">&gt;&gt;</operator><name pos:start="1399:77" pos:end="1399:79">exp</name><operator pos:start="1399:80" pos:end="1399:80">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="1401:21" pos:end="1401:56"><expr pos:start="1401:21" pos:end="1401:55"><operator pos:start="1401:21" pos:end="1401:21">*</operator><name pos:start="1401:22" pos:end="1401:28">samples</name> <operator pos:start="1401:30" pos:end="1401:30">=</operator> <call pos:start="1401:32" pos:end="1401:55"><name pos:start="1401:32" pos:end="1401:44">av_clip_int16</name><argument_list pos:start="1401:45" pos:end="1401:55">(<argument pos:start="1401:46" pos:end="1401:54"><expr pos:start="1401:46" pos:end="1401:54"><name pos:start="1401:46" pos:end="1401:54">sampledat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1403:21" pos:end="1403:46"><expr pos:start="1403:21" pos:end="1403:45"><name pos:start="1403:21" pos:end="1403:31"><name pos:start="1403:21" pos:end="1403:24">prev</name><index pos:start="1403:25" pos:end="1403:28">[<expr pos:start="1403:26" pos:end="1403:27"><name pos:start="1403:26" pos:end="1403:27">ch</name></expr>]</index><index pos:start="1403:29" pos:end="1403:31">[<expr pos:start="1403:30" pos:end="1403:30"><literal type="number" pos:start="1403:30" pos:end="1403:30">1</literal></expr>]</index></name> <operator pos:start="1403:33" pos:end="1403:33">=</operator> <name pos:start="1403:35" pos:end="1403:45"><name pos:start="1403:35" pos:end="1403:38">prev</name><index pos:start="1403:39" pos:end="1403:42">[<expr pos:start="1403:40" pos:end="1403:41"><name pos:start="1403:40" pos:end="1403:41">ch</name></expr>]</index><index pos:start="1403:43" pos:end="1403:45">[<expr pos:start="1403:44" pos:end="1403:44"><literal type="number" pos:start="1403:44" pos:end="1403:44">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="1405:21" pos:end="1405:45"><expr pos:start="1405:21" pos:end="1405:44"><name pos:start="1405:21" pos:end="1405:31"><name pos:start="1405:21" pos:end="1405:24">prev</name><index pos:start="1405:25" pos:end="1405:28">[<expr pos:start="1405:26" pos:end="1405:27"><name pos:start="1405:26" pos:end="1405:27">ch</name></expr>]</index><index pos:start="1405:29" pos:end="1405:31">[<expr pos:start="1405:30" pos:end="1405:30"><literal type="number" pos:start="1405:30" pos:end="1405:30">0</literal></expr>]</index></name> <operator pos:start="1405:33" pos:end="1405:33">=</operator> <operator pos:start="1405:35" pos:end="1405:35">*</operator><name pos:start="1405:36" pos:end="1405:42">samples</name><operator pos:start="1405:43" pos:end="1405:44">++</operator></expr>;</expr_stmt>



                    <comment type="block" pos:start="1409:21" pos:end="1411:52">/* In case of stereo, skip one sample, this sample

                       is for the other channel.  */</comment>

                    <expr_stmt pos:start="1413:21" pos:end="1413:34"><expr pos:start="1413:21" pos:end="1413:33"><name pos:start="1413:21" pos:end="1413:27">samples</name> <operator pos:start="1413:29" pos:end="1413:30">+=</operator> <name pos:start="1413:32" pos:end="1413:33">st</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <comment type="block" pos:start="1423:9" pos:end="1425:52">/* In the previous loop, in case stereo is used, samples is

           increased exactly one time too often.  */</comment>

        <expr_stmt pos:start="1427:9" pos:end="1427:22"><expr pos:start="1427:9" pos:end="1427:21"><name pos:start="1427:9" pos:end="1427:15">samples</name> <operator pos:start="1427:17" pos:end="1427:18">-=</operator> <name pos:start="1427:20" pos:end="1427:21">st</name></expr>;</expr_stmt>

        <break pos:start="1429:9" pos:end="1429:14">break;</break>

    </block_content>}</block>



    <default pos:start="1435:5" pos:end="1435:12">default:</default>

        <return pos:start="1437:9" pos:end="1437:18">return <expr pos:start="1437:16" pos:end="1437:17"><operator pos:start="1437:16" pos:end="1437:16">-</operator><literal type="number" pos:start="1437:17" pos:end="1437:17">1</literal></expr>;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="1441:5" pos:end="1441:54"><expr pos:start="1441:5" pos:end="1441:53"><operator pos:start="1441:5" pos:end="1441:5">*</operator><name pos:start="1441:6" pos:end="1441:14">data_size</name> <operator pos:start="1441:16" pos:end="1441:16">=</operator> <operator pos:start="1441:18" pos:end="1441:18">(</operator><name pos:start="1441:19" pos:end="1441:25">uint8_t</name> <operator pos:start="1441:27" pos:end="1441:27">*</operator><operator pos:start="1441:28" pos:end="1441:28">)</operator><name pos:start="1441:29" pos:end="1441:35">samples</name> <operator pos:start="1441:37" pos:end="1441:37">-</operator> <operator pos:start="1441:39" pos:end="1441:39">(</operator><name pos:start="1441:40" pos:end="1441:46">uint8_t</name> <operator pos:start="1441:48" pos:end="1441:48">*</operator><operator pos:start="1441:49" pos:end="1441:49">)</operator><name pos:start="1441:50" pos:end="1441:53">data</name></expr>;</expr_stmt>

    <return pos:start="1443:5" pos:end="1443:21">return <expr pos:start="1443:12" pos:end="1443:20"><name pos:start="1443:12" pos:end="1443:14">src</name> <operator pos:start="1443:16" pos:end="1443:16">-</operator> <name pos:start="1443:18" pos:end="1443:20">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
