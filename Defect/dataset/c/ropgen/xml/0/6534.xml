<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6534.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:23">init</name><parameter_list pos:start="1:24" pos:end="1:77">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:39">AVFilterContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">ctx</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">args</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:76"><decl pos:start="1:65" pos:end="1:76"><type pos:start="1:65" pos:end="1:76"><name pos:start="1:65" pos:end="1:68">void</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:76">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">UnsharpContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:27">unsharp</name> <init pos:start="5:29" pos:end="5:39">= <expr pos:start="5:31" pos:end="5:39"><name pos:start="5:31" pos:end="5:39"><name pos:start="5:31" pos:end="5:33">ctx</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:39">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">lmsize_x</name> <init pos:start="7:18" pos:end="7:20">= <expr pos:start="7:20" pos:end="7:20"><literal type="number" pos:start="7:20" pos:end="7:20">5</literal></expr></init></decl>, <decl pos:start="7:23" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:30">cmsize_x</name> <init pos:start="7:32" pos:end="7:34">= <expr pos:start="7:34" pos:end="7:34"><literal type="number" pos:start="7:34" pos:end="7:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">lmsize_y</name> <init pos:start="9:18" pos:end="9:20">= <expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">5</literal></expr></init></decl>, <decl pos:start="9:23" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:23" pos:end="9:30">cmsize_y</name> <init pos:start="9:32" pos:end="9:34">= <expr pos:start="9:34" pos:end="9:34"><literal type="number" pos:start="9:34" pos:end="9:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">double</name></type> <name pos:start="11:12" pos:end="11:18">lamount</name> <init pos:start="11:20" pos:end="11:25">= <expr pos:start="11:22" pos:end="11:25"><literal type="number" pos:start="11:22" pos:end="11:25">1.0f</literal></expr></init></decl>, <decl pos:start="11:28" pos:end="11:41"><type ref="prev" pos:start="11:5" pos:end="11:10"/><name pos:start="11:28" pos:end="11:34">camount</name> <init pos:start="11:36" pos:end="11:41">= <expr pos:start="11:38" pos:end="11:41"><literal type="number" pos:start="11:38" pos:end="11:41">0.0f</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:76"><if pos:start="15:5" pos:end="19:76">if <condition pos:start="15:8" pos:end="15:13">(<expr pos:start="15:9" pos:end="15:12"><name pos:start="15:9" pos:end="15:12">args</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="19:76"><block_content pos:start="17:9" pos:end="19:76">

        <expr_stmt pos:start="17:9" pos:end="19:76"><expr pos:start="17:9" pos:end="19:75"><call pos:start="17:9" pos:end="19:75"><name pos:start="17:9" pos:end="17:14">sscanf</name><argument_list pos:start="17:15" pos:end="19:75">(<argument pos:start="17:16" pos:end="17:19"><expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">args</name></expr></argument>, <argument pos:start="17:22" pos:end="17:42"><expr pos:start="17:22" pos:end="17:42"><literal type="string" pos:start="17:22" pos:end="17:42">"%d:%d:%lf:%d:%d:%lf"</literal></expr></argument>, <argument pos:start="17:45" pos:end="17:53"><expr pos:start="17:45" pos:end="17:53"><operator pos:start="17:45" pos:end="17:45">&amp;</operator><name pos:start="17:46" pos:end="17:53">lmsize_x</name></expr></argument>, <argument pos:start="17:56" pos:end="17:64"><expr pos:start="17:56" pos:end="17:64"><operator pos:start="17:56" pos:end="17:56">&amp;</operator><name pos:start="17:57" pos:end="17:64">lmsize_y</name></expr></argument>, <argument pos:start="17:67" pos:end="17:74"><expr pos:start="17:67" pos:end="17:74"><operator pos:start="17:67" pos:end="17:67">&amp;</operator><name pos:start="17:68" pos:end="17:74">lamount</name></expr></argument>,

                                            <argument pos:start="19:45" pos:end="19:53"><expr pos:start="19:45" pos:end="19:53"><operator pos:start="19:45" pos:end="19:45">&amp;</operator><name pos:start="19:46" pos:end="19:53">cmsize_x</name></expr></argument>, <argument pos:start="19:56" pos:end="19:64"><expr pos:start="19:56" pos:end="19:64"><operator pos:start="19:56" pos:end="19:56">&amp;</operator><name pos:start="19:57" pos:end="19:64">cmsize_y</name></expr></argument>, <argument pos:start="19:67" pos:end="19:74"><expr pos:start="19:67" pos:end="19:74"><operator pos:start="19:67" pos:end="19:67">&amp;</operator><name pos:start="19:68" pos:end="19:74">camount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="35:5"><if pos:start="23:5" pos:end="35:5">if <condition pos:start="23:8" pos:end="25:52">(<expr pos:start="23:9" pos:end="25:51"><operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:16">lamount</name> <operator pos:start="23:18" pos:end="23:19">&amp;&amp;</operator> <operator pos:start="23:21" pos:end="23:21">(</operator><name pos:start="23:22" pos:end="23:29">lmsize_x</name> <operator pos:start="23:31" pos:end="23:31">&lt;</operator> <literal type="number" pos:start="23:33" pos:end="23:33">2</literal> <operator pos:start="23:35" pos:end="23:36">||</operator> <name pos:start="23:38" pos:end="23:45">lmsize_y</name> <operator pos:start="23:47" pos:end="23:47">&lt;</operator> <literal type="number" pos:start="23:49" pos:end="23:49">2</literal><operator pos:start="23:50" pos:end="23:50">)</operator><operator pos:start="23:51" pos:end="23:51">)</operator> <operator pos:start="23:53" pos:end="23:54">||</operator>

        <operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:16">camount</name> <operator pos:start="25:18" pos:end="25:19">&amp;&amp;</operator> <operator pos:start="25:21" pos:end="25:21">(</operator><name pos:start="25:22" pos:end="25:29">cmsize_x</name> <operator pos:start="25:31" pos:end="25:31">&lt;</operator> <literal type="number" pos:start="25:33" pos:end="25:33">2</literal> <operator pos:start="25:35" pos:end="25:36">||</operator> <name pos:start="25:38" pos:end="25:45">cmsize_y</name> <operator pos:start="25:47" pos:end="25:47">&lt;</operator> <literal type="number" pos:start="25:49" pos:end="25:49">2</literal><operator pos:start="25:50" pos:end="25:50">)</operator><operator pos:start="25:51" pos:end="25:51">)</operator></expr>)</condition> <block pos:start="25:54" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:31">

        <expr_stmt pos:start="27:9" pos:end="31:55"><expr pos:start="27:9" pos:end="31:54"><call pos:start="27:9" pos:end="31:54"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="31:54">(<argument pos:start="27:16" pos:end="27:18"><expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ctx</name></expr></argument>, <argument pos:start="27:21" pos:end="27:32"><expr pos:start="27:21" pos:end="27:32"><name pos:start="27:21" pos:end="27:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="29:16" pos:end="29:96"><expr pos:start="29:16" pos:end="29:96"><literal type="string" pos:start="29:16" pos:end="29:96">"Invalid value &lt;2 for lmsize_x:%d or lmsize_y:%d or cmsize_x:%d or cmsize_y:%d\n"</literal></expr></argument>,

               <argument pos:start="31:16" pos:end="31:23"><expr pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:23">lmsize_x</name></expr></argument>, <argument pos:start="31:26" pos:end="31:33"><expr pos:start="31:26" pos:end="31:33"><name pos:start="31:26" pos:end="31:33">lmsize_y</name></expr></argument>, <argument pos:start="31:36" pos:end="31:43"><expr pos:start="31:36" pos:end="31:43"><name pos:start="31:36" pos:end="31:43">cmsize_x</name></expr></argument>, <argument pos:start="31:46" pos:end="31:53"><expr pos:start="31:46" pos:end="31:53"><name pos:start="31:46" pos:end="31:53">cmsize_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:31">return <expr pos:start="33:16" pos:end="33:30"><call pos:start="33:16" pos:end="33:30"><name pos:start="33:16" pos:end="33:22">AVERROR</name><argument_list pos:start="33:23" pos:end="33:30">(<argument pos:start="33:24" pos:end="33:29"><expr pos:start="33:24" pos:end="33:29"><name pos:start="33:24" pos:end="33:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:68"><expr pos:start="39:5" pos:end="39:67"><call pos:start="39:5" pos:end="39:67"><name pos:start="39:5" pos:end="39:20">set_filter_param</name><argument_list pos:start="39:21" pos:end="39:67">(<argument pos:start="39:22" pos:end="39:35"><expr pos:start="39:22" pos:end="39:35"><operator pos:start="39:22" pos:end="39:22">&amp;</operator><name pos:start="39:23" pos:end="39:35"><name pos:start="39:23" pos:end="39:29">unsharp</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:35">luma</name></name></expr></argument>,   <argument pos:start="39:40" pos:end="39:47"><expr pos:start="39:40" pos:end="39:47"><name pos:start="39:40" pos:end="39:47">lmsize_x</name></expr></argument>, <argument pos:start="39:50" pos:end="39:57"><expr pos:start="39:50" pos:end="39:57"><name pos:start="39:50" pos:end="39:57">lmsize_y</name></expr></argument>, <argument pos:start="39:60" pos:end="39:66"><expr pos:start="39:60" pos:end="39:66"><name pos:start="39:60" pos:end="39:66">lamount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:68"><expr pos:start="41:5" pos:end="41:67"><call pos:start="41:5" pos:end="41:67"><name pos:start="41:5" pos:end="41:20">set_filter_param</name><argument_list pos:start="41:21" pos:end="41:67">(<argument pos:start="41:22" pos:end="41:37"><expr pos:start="41:22" pos:end="41:37"><operator pos:start="41:22" pos:end="41:22">&amp;</operator><name pos:start="41:23" pos:end="41:37"><name pos:start="41:23" pos:end="41:29">unsharp</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:37">chroma</name></name></expr></argument>, <argument pos:start="41:40" pos:end="41:47"><expr pos:start="41:40" pos:end="41:47"><name pos:start="41:40" pos:end="41:47">cmsize_x</name></expr></argument>, <argument pos:start="41:50" pos:end="41:57"><expr pos:start="41:50" pos:end="41:57"><name pos:start="41:50" pos:end="41:57">cmsize_y</name></expr></argument>, <argument pos:start="41:60" pos:end="41:66"><expr pos:start="41:60" pos:end="41:66"><name pos:start="41:60" pos:end="41:66">camount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
