<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13778.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">write_number</name><parameter_list pos:start="1:24" pos:end="1:101">(<parameter pos:start="1:25" pos:end="1:33"><decl pos:start="1:25" pos:end="1:33"><type pos:start="1:25" pos:end="1:33"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">obj</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:52"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:49">AVOption</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">o</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:63"><decl pos:start="1:55" pos:end="1:63"><type pos:start="1:55" pos:end="1:63"><name pos:start="1:55" pos:end="1:58">void</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">dst</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:75"><decl pos:start="1:66" pos:end="1:75"><type pos:start="1:66" pos:end="1:75"><name pos:start="1:66" pos:end="1:71">double</name></type> <name pos:start="1:73" pos:end="1:75">num</name></decl></parameter>, <parameter pos:start="1:78" pos:end="1:84"><decl pos:start="1:78" pos:end="1:84"><type pos:start="1:78" pos:end="1:84"><name pos:start="1:78" pos:end="1:80">int</name></type> <name pos:start="1:82" pos:end="1:84">den</name></decl></parameter>, <parameter pos:start="1:87" pos:end="1:100"><decl pos:start="1:87" pos:end="1:100"><type pos:start="1:87" pos:end="1:100"><name pos:start="1:87" pos:end="1:93">int64_t</name></type> <name pos:start="1:95" pos:end="1:100">intnum</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <if_stmt pos:start="5:5" pos:end="13:5"><if pos:start="5:5" pos:end="13:5">if <condition pos:start="5:8" pos:end="5:59">(<expr pos:start="5:9" pos:end="5:58"><name pos:start="5:9" pos:end="5:14"><name pos:start="5:9" pos:end="5:9">o</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:14">max</name></name><operator pos:start="5:15" pos:end="5:15">*</operator><name pos:start="5:16" pos:end="5:47"><name pos:start="5:16" pos:end="5:18">den</name> <argument_list type="generic" pos:start="5:20" pos:end="5:47">&lt; <argument pos:start="5:22" pos:end="5:45"><expr pos:start="5:22" pos:end="5:45"><name pos:start="5:22" pos:end="5:24">num</name><operator pos:start="5:25" pos:end="5:25">*</operator><name pos:start="5:26" pos:end="5:31">intnum</name> <operator pos:start="5:33" pos:end="5:34">||</operator> <name pos:start="5:36" pos:end="5:41"><name pos:start="5:36" pos:end="5:36">o</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:41">min</name></name><operator pos:start="5:42" pos:end="5:42">*</operator><name pos:start="5:43" pos:end="5:45">den</name></expr></argument> &gt;</argument_list></name> <name pos:start="5:49" pos:end="5:51">num</name><operator pos:start="5:52" pos:end="5:52">*</operator><name pos:start="5:53" pos:end="5:58">intnum</name></expr>)</condition> <block pos:start="5:61" pos:end="13:5">{<block_content pos:start="7:9" pos:end="11:31">

        <expr_stmt pos:start="7:9" pos:end="9:40"><expr pos:start="7:9" pos:end="9:39"><call pos:start="7:9" pos:end="9:39"><name pos:start="7:9" pos:end="7:14">av_log</name><argument_list pos:start="7:15" pos:end="9:39">(<argument pos:start="7:16" pos:end="7:18"><expr pos:start="7:16" pos:end="7:18"><name pos:start="7:16" pos:end="7:18">obj</name></expr></argument>, <argument pos:start="7:21" pos:end="7:32"><expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="7:35" pos:end="7:78"><expr pos:start="7:35" pos:end="7:78"><literal type="string" pos:start="7:35" pos:end="7:78">"Value %f for parameter '%s' out of range\n"</literal></expr></argument>,

               <argument pos:start="9:16" pos:end="9:29"><expr pos:start="9:16" pos:end="9:29"><name pos:start="9:16" pos:end="9:18">num</name><operator pos:start="9:19" pos:end="9:19">*</operator><name pos:start="9:20" pos:end="9:25">intnum</name><operator pos:start="9:26" pos:end="9:26">/</operator><name pos:start="9:27" pos:end="9:29">den</name></expr></argument>, <argument pos:start="9:32" pos:end="9:38"><expr pos:start="9:32" pos:end="9:38"><name pos:start="9:32" pos:end="9:38"><name pos:start="9:32" pos:end="9:32">o</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:38">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="11:9" pos:end="11:31">return <expr pos:start="11:16" pos:end="11:30"><call pos:start="11:16" pos:end="11:30"><name pos:start="11:16" pos:end="11:22">AVERROR</name><argument_list pos:start="11:23" pos:end="11:30">(<argument pos:start="11:24" pos:end="11:29"><expr pos:start="11:24" pos:end="11:29"><name pos:start="11:24" pos:end="11:29">ERANGE</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="17:5" pos:end="41:5">switch <condition pos:start="17:12" pos:end="17:20">(<expr pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:13">o</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:19">type</name></name></expr>)</condition> <block pos:start="17:22" pos:end="41:5">{<block_content pos:start="19:5" pos:end="39:31">

    <case pos:start="19:5" pos:end="19:27">case <expr pos:start="19:10" pos:end="19:26"><name pos:start="19:10" pos:end="19:26">AV_OPT_TYPE_FLAGS</name></expr>:</case>

    <case pos:start="21:5" pos:end="21:25">case <expr pos:start="21:10" pos:end="21:24"><name pos:start="21:10" pos:end="21:24">AV_OPT_TYPE_INT</name></expr>:</case>   <expr_stmt pos:start="21:29" pos:end="21:70"><expr pos:start="21:29" pos:end="21:69"><operator pos:start="21:29" pos:end="21:29">*</operator><operator pos:start="21:30" pos:end="21:30">(</operator><name pos:start="21:31" pos:end="21:33">int</name>       <operator pos:start="21:41" pos:end="21:41">*</operator><operator pos:start="21:42" pos:end="21:42">)</operator><name pos:start="21:43" pos:end="21:45">dst</name><operator pos:start="21:46" pos:end="21:46">=</operator> <call pos:start="21:48" pos:end="21:62"><name pos:start="21:48" pos:end="21:53">llrint</name><argument_list pos:start="21:54" pos:end="21:62">(<argument pos:start="21:55" pos:end="21:61"><expr pos:start="21:55" pos:end="21:61"><name pos:start="21:55" pos:end="21:57">num</name><operator pos:start="21:58" pos:end="21:58">/</operator><name pos:start="21:59" pos:end="21:61">den</name></expr></argument>)</argument_list></call><operator pos:start="21:63" pos:end="21:63">*</operator><name pos:start="21:64" pos:end="21:69">intnum</name></expr>;</expr_stmt> <break pos:start="21:72" pos:end="21:77">break;</break>

    <case pos:start="23:5" pos:end="23:27">case <expr pos:start="23:10" pos:end="23:26"><name pos:start="23:10" pos:end="23:26">AV_OPT_TYPE_INT64</name></expr>:</case> <expr_stmt pos:start="23:29" pos:end="23:70"><expr pos:start="23:29" pos:end="23:69"><operator pos:start="23:29" pos:end="23:29">*</operator><operator pos:start="23:30" pos:end="23:30">(</operator><name pos:start="23:31" pos:end="23:37">int64_t</name>   <operator pos:start="23:41" pos:end="23:41">*</operator><operator pos:start="23:42" pos:end="23:42">)</operator><name pos:start="23:43" pos:end="23:45">dst</name><operator pos:start="23:46" pos:end="23:46">=</operator> <call pos:start="23:48" pos:end="23:62"><name pos:start="23:48" pos:end="23:53">llrint</name><argument_list pos:start="23:54" pos:end="23:62">(<argument pos:start="23:55" pos:end="23:61"><expr pos:start="23:55" pos:end="23:61"><name pos:start="23:55" pos:end="23:57">num</name><operator pos:start="23:58" pos:end="23:58">/</operator><name pos:start="23:59" pos:end="23:61">den</name></expr></argument>)</argument_list></call><operator pos:start="23:63" pos:end="23:63">*</operator><name pos:start="23:64" pos:end="23:69">intnum</name></expr>;</expr_stmt> <break pos:start="23:72" pos:end="23:77">break;</break>

    <case pos:start="25:5" pos:end="25:27">case <expr pos:start="25:10" pos:end="25:26"><name pos:start="25:10" pos:end="25:26">AV_OPT_TYPE_FLOAT</name></expr>:</case> <expr_stmt pos:start="25:29" pos:end="25:62"><expr pos:start="25:29" pos:end="25:61"><operator pos:start="25:29" pos:end="25:29">*</operator><operator pos:start="25:30" pos:end="25:30">(</operator><name pos:start="25:31" pos:end="25:35">float</name>     <operator pos:start="25:41" pos:end="25:41">*</operator><operator pos:start="25:42" pos:end="25:42">)</operator><name pos:start="25:43" pos:end="25:45">dst</name><operator pos:start="25:46" pos:end="25:46">=</operator> <name pos:start="25:48" pos:end="25:50">num</name><operator pos:start="25:51" pos:end="25:51">*</operator><name pos:start="25:52" pos:end="25:57">intnum</name><operator pos:start="25:58" pos:end="25:58">/</operator><name pos:start="25:59" pos:end="25:61">den</name></expr>;</expr_stmt>         <break pos:start="25:72" pos:end="25:77">break;</break>

    <case pos:start="27:5" pos:end="27:28">case <expr pos:start="27:10" pos:end="27:27"><name pos:start="27:10" pos:end="27:27">AV_OPT_TYPE_DOUBLE</name></expr>:</case><expr_stmt pos:start="27:29" pos:end="27:62"><expr pos:start="27:29" pos:end="27:61"><operator pos:start="27:29" pos:end="27:29">*</operator><operator pos:start="27:30" pos:end="27:30">(</operator><name pos:start="27:31" pos:end="27:36">double</name>    <operator pos:start="27:41" pos:end="27:41">*</operator><operator pos:start="27:42" pos:end="27:42">)</operator><name pos:start="27:43" pos:end="27:45">dst</name><operator pos:start="27:46" pos:end="27:46">=</operator> <name pos:start="27:48" pos:end="27:50">num</name><operator pos:start="27:51" pos:end="27:51">*</operator><name pos:start="27:52" pos:end="27:57">intnum</name><operator pos:start="27:58" pos:end="27:58">/</operator><name pos:start="27:59" pos:end="27:61">den</name></expr>;</expr_stmt>         <break pos:start="27:72" pos:end="27:77">break;</break>

    <case pos:start="29:5" pos:end="29:30">case <expr pos:start="29:10" pos:end="29:29"><name pos:start="29:10" pos:end="29:29">AV_OPT_TYPE_RATIONAL</name></expr>:</case>

        <if_stmt pos:start="31:9" pos:end="33:78"><if pos:start="31:9" pos:end="31:78">if <condition pos:start="31:12" pos:end="31:28">(<expr pos:start="31:13" pos:end="31:27"><operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:16">int</name><operator pos:start="31:17" pos:end="31:17">)</operator><name pos:start="31:18" pos:end="31:20">num</name> <operator pos:start="31:22" pos:end="31:23">==</operator> <name pos:start="31:25" pos:end="31:27">num</name></expr>)</condition><block type="pseudo" pos:start="31:30" pos:end="31:78"><block_content pos:start="31:30" pos:end="31:78"> <expr_stmt pos:start="31:30" pos:end="31:78"><expr pos:start="31:30" pos:end="31:77"><operator pos:start="31:30" pos:end="31:30">*</operator><operator pos:start="31:31" pos:end="31:31">(</operator><name pos:start="31:32" pos:end="31:41">AVRational</name><operator pos:start="31:42" pos:end="31:42">*</operator><operator pos:start="31:43" pos:end="31:43">)</operator><name pos:start="31:44" pos:end="31:46">dst</name><operator pos:start="31:47" pos:end="31:47">=</operator> <operator pos:start="31:49" pos:end="31:49">(</operator><name pos:start="31:50" pos:end="31:59">AVRational</name><operator pos:start="31:60" pos:end="31:60">)</operator><block pos:start="31:61" pos:end="31:77">{<expr pos:start="31:62" pos:end="31:71"><name pos:start="31:62" pos:end="31:64">num</name><operator pos:start="31:65" pos:end="31:65">*</operator><name pos:start="31:66" pos:end="31:71">intnum</name></expr>, <expr pos:start="31:74" pos:end="31:76"><name pos:start="31:74" pos:end="31:76">den</name></expr>}</block></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="33:9" pos:end="33:78">else<block type="pseudo" pos:start="33:30" pos:end="33:78"><block_content pos:start="33:30" pos:end="33:78">                 <expr_stmt pos:start="33:30" pos:end="33:78"><expr pos:start="33:30" pos:end="33:77"><operator pos:start="33:30" pos:end="33:30">*</operator><operator pos:start="33:31" pos:end="33:31">(</operator><name pos:start="33:32" pos:end="33:41">AVRational</name><operator pos:start="33:42" pos:end="33:42">*</operator><operator pos:start="33:43" pos:end="33:43">)</operator><name pos:start="33:44" pos:end="33:46">dst</name><operator pos:start="33:47" pos:end="33:47">=</operator> <call pos:start="33:49" pos:end="33:77"><name pos:start="33:49" pos:end="33:54">av_d2q</name><argument_list pos:start="33:55" pos:end="33:77">(<argument pos:start="33:56" pos:end="33:69"><expr pos:start="33:56" pos:end="33:69"><name pos:start="33:56" pos:end="33:58">num</name><operator pos:start="33:59" pos:end="33:59">*</operator><name pos:start="33:60" pos:end="33:65">intnum</name><operator pos:start="33:66" pos:end="33:66">/</operator><name pos:start="33:67" pos:end="33:69">den</name></expr></argument>, <argument pos:start="33:72" pos:end="33:76"><expr pos:start="33:72" pos:end="33:76"><literal type="number" pos:start="33:72" pos:end="33:72">1</literal><operator pos:start="33:73" pos:end="33:74">&lt;&lt;</operator><literal type="number" pos:start="33:75" pos:end="33:76">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <default pos:start="37:5" pos:end="37:12">default:</default>

        <return pos:start="39:9" pos:end="39:31">return <expr pos:start="39:16" pos:end="39:30"><call pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:22">AVERROR</name><argument_list pos:start="39:23" pos:end="39:30">(<argument pos:start="39:24" pos:end="39:29"><expr pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></switch>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
