<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23418.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:33">net_socket_receive</name><parameter_list pos:start="1:34" pos:end="1:86">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:48">NetClientState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">nc</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:72"><decl pos:start="1:55" pos:end="1:72"><type pos:start="1:55" pos:end="1:72"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:67">uint8_t</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">buf</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:85"><decl pos:start="1:75" pos:end="1:85"><type pos:start="1:75" pos:end="1:85"><name pos:start="1:75" pos:end="1:80">size_t</name></type> <name pos:start="1:82" pos:end="1:85">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:38">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:57"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">NetSocketState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:57">= <expr pos:start="5:25" pos:end="5:57"><call pos:start="5:25" pos:end="5:57"><name pos:start="5:25" pos:end="5:33">DO_UPCAST</name><argument_list pos:start="5:34" pos:end="5:57">(<argument pos:start="5:35" pos:end="5:48"><expr pos:start="5:35" pos:end="5:48"><name pos:start="5:35" pos:end="5:48">NetSocketState</name></expr></argument>, <argument pos:start="5:51" pos:end="5:52"><expr pos:start="5:51" pos:end="5:52"><name pos:start="5:51" pos:end="5:52">nc</name></expr></argument>, <argument pos:start="5:55" pos:end="5:56"><expr pos:start="5:55" pos:end="5:56"><name pos:start="5:55" pos:end="5:56">nc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">len</name></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:22"><expr pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:7">len</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:21"><name pos:start="9:11" pos:end="9:15">htonl</name><argument_list pos:start="9:16" pos:end="9:21">(<argument pos:start="9:17" pos:end="9:20"><expr pos:start="9:17" pos:end="9:20"><name pos:start="9:17" pos:end="9:20">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:56"><expr pos:start="13:5" pos:end="13:55"><call pos:start="13:5" pos:end="13:55"><name pos:start="13:5" pos:end="13:12">send_all</name><argument_list pos:start="13:13" pos:end="13:55">(<argument pos:start="13:14" pos:end="13:18"><expr pos:start="13:14" pos:end="13:18"><name pos:start="13:14" pos:end="13:18"><name pos:start="13:14" pos:end="13:14">s</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:18">fd</name></name></expr></argument>, <argument pos:start="13:21" pos:end="13:41"><expr pos:start="13:21" pos:end="13:41"><operator pos:start="13:21" pos:end="13:21">(</operator><specifier pos:start="13:22" pos:end="13:26">const</specifier> <name pos:start="13:28" pos:end="13:34">uint8_t</name> <operator pos:start="13:36" pos:end="13:36">*</operator><operator pos:start="13:37" pos:end="13:37">)</operator><operator pos:start="13:38" pos:end="13:38">&amp;</operator><name pos:start="13:39" pos:end="13:41">len</name></expr></argument>, <argument pos:start="13:44" pos:end="13:54"><expr pos:start="13:44" pos:end="13:54"><sizeof pos:start="13:44" pos:end="13:54">sizeof<argument_list pos:start="13:50" pos:end="13:54">(<argument pos:start="13:51" pos:end="13:53"><expr pos:start="13:51" pos:end="13:53"><name pos:start="13:51" pos:end="13:53">len</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="15:5" pos:end="15:38">return <expr pos:start="15:12" pos:end="15:37"><call pos:start="15:12" pos:end="15:37"><name pos:start="15:12" pos:end="15:19">send_all</name><argument_list pos:start="15:20" pos:end="15:37">(<argument pos:start="15:21" pos:end="15:25"><expr pos:start="15:21" pos:end="15:25"><name pos:start="15:21" pos:end="15:25"><name pos:start="15:21" pos:end="15:21">s</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:25">fd</name></name></expr></argument>, <argument pos:start="15:28" pos:end="15:30"><expr pos:start="15:28" pos:end="15:30"><name pos:start="15:28" pos:end="15:30">buf</name></expr></argument>, <argument pos:start="15:33" pos:end="15:36"><expr pos:start="15:33" pos:end="15:36"><name pos:start="15:33" pos:end="15:36">size</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
